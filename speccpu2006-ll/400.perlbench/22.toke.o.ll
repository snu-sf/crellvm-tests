; ModuleID = 'toke.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.cop = type { %struct.op*, %struct.op*, %struct.op* ()*, i64, i16, i16, i8, i8, i8*, %struct.hv*, %struct.gv*, i32, i32, i32, %struct.sv*, %struct.sv* }
%struct.op = type { %struct.op*, %struct.op*, %struct.op* ()*, i64, i16, i16, i8, i8 }
%struct.hv = type { %struct.xpvhv*, i32, i32 }
%struct.xpvhv = type { i8*, i64, i64, i64, double, %struct.magic*, %struct.hv*, i32, %struct.he*, %struct.pmop*, i8* }
%struct.magic = type { %struct.magic*, %struct.mgvtbl*, i16, i8, i8, %struct.sv*, i8*, i32 }
%struct.mgvtbl = type { i32 (%struct.sv*, %struct.magic*)*, i32 (%struct.sv*, %struct.magic*)*, i32 (%struct.sv*, %struct.magic*)*, i32 (%struct.sv*, %struct.magic*)*, i32 (%struct.sv*, %struct.magic*)*, i32 (%struct.sv*, %struct.magic*, %struct.sv*, i8*, i32)*, i32 (%struct.magic*, %struct.clone_params*)* }
%struct.clone_params = type { %struct.av*, i64, %struct.interpreter* }
%struct.av = type { %struct.xpvav*, i32, i32 }
%struct.xpvav = type { i8*, i64, i64, i64, double, %struct.magic*, %struct.hv*, %struct.sv**, %struct.sv*, i8 }
%struct.interpreter = type { i8 }
%struct.he = type { %struct.he*, %struct.hek*, %struct.sv* }
%struct.hek = type { i32, i32, [1 x i8] }
%struct.pmop = type { %struct.op*, %struct.op*, %struct.op* ()*, i64, i16, i16, i8, i8, %struct.op*, %struct.op*, %struct.op*, %struct.op*, %struct.pmop*, %struct.regexp*, i32, i32, i8, %struct.hv* }
%struct.regexp = type { i32*, i32*, %struct.regnode*, %struct.reg_substr_data*, i8*, %struct.reg_data*, i8*, i32*, i32, i32, i32, i32, i32, i32, i32, i32, [1 x %struct.regnode] }
%struct.regnode = type { i8, i8, i16 }
%struct.reg_substr_data = type opaque
%struct.reg_data = type opaque
%struct.gv = type { %struct.xpvgv*, i32, i32 }
%struct.xpvgv = type { i8*, i64, i64, i64, double, %struct.magic*, %struct.hv*, %struct.gp*, i8*, i64, %struct.hv*, i8 }
%struct.gp = type { %struct.sv*, i32, %struct.io*, %struct.cv*, %struct.av*, %struct.hv*, %struct.gv*, %struct.cv*, i32, i32, i32, i8* }
%struct.io = type { %struct.xpvio*, i32, i32 }
%struct.xpvio = type { i8*, i64, i64, i64, double, %struct.magic*, %struct.hv*, %struct._PerlIO**, %struct._PerlIO**, %union.anon, i64, i64, i64, i64, i8*, %struct.gv*, i8*, %struct.gv*, i8*, %struct.gv*, i16, i8, i8 }
%struct._PerlIO = type opaque
%union.anon = type { %struct.__dirstream* }
%struct.__dirstream = type opaque
%struct.cv = type { %struct.xpvcv*, i32, i32 }
%struct.xpvcv = type { i8*, i64, i64, i64, double, %struct.magic*, %struct.hv*, %struct.hv*, %struct.op*, %struct.op*, void (%struct.cv*)*, %union.any, %struct.gv*, i8*, i64, %struct.av*, %struct.cv*, i16, i32 }
%union.any = type { i8* }
%struct.sv = type { i8*, i32, i32 }
%union.YYSTYPE = type { i8* }
%struct._sublex_info = type { i32, i32, %struct.op*, i8*, i8* }
%struct.stackinfo = type { %struct.av*, %struct.context*, i32, i32, i32, %struct.stackinfo*, %struct.stackinfo*, i32 }
%struct.context = type { i32, %union.anon.0 }
%union.anon.0 = type { %struct.block }
%struct.block = type { i32, %struct.cop*, i32, i32, i32, %struct.pmop*, i8, %union.anon.1 }
%union.anon.1 = type { %struct.block_loop }
%struct.block_loop = type { i8*, i32, %struct.op*, %struct.op*, %struct.op*, %struct.sv**, %struct.sv*, %struct.sv*, %struct.av*, i64, i64 }
%struct.xpv = type { i8*, i64, i64 }
%struct.xpviv = type { i8*, i64, i64, i64 }
%struct.svop = type { %struct.op*, %struct.op*, %struct.op* ()*, i64, i16, i16, i8, i8, %struct.sv* }
%struct.xpvnv = type { i8*, i64, i64, i64, double }

@PL_curcop = external global %struct.cop*, align 8
@PL_dowarn = external global i8, align 1
@.str = private unnamed_addr constant [24 x i8] c"Use of %s is deprecated\00", align 1
@PL_lex_dojoin = external global i32, align 4
@PL_lex_brackets = external global i32, align 4
@PL_lex_casemods = external global i32, align 4
@PL_lex_starts = external global i32, align 4
@PL_lex_state = external global i32, align 4
@PL_lex_inpat = external global %struct.op*, align 8
@PL_lex_inwhat = external global i32, align 4
@PL_nexttoke = external global i32, align 4
@PL_nexttype = external global [5 x i32], align 16
@PL_nextval = external global [5 x %union.YYSTYPE], align 16
@PL_bufptr = external global i8*, align 8
@PL_bufend = external global i8*, align 8
@PL_oldbufptr = external global i8*, align 8
@PL_oldoldbufptr = external global i8*, align 8
@PL_last_lop = external global i8*, align 8
@PL_last_uni = external global i8*, align 8
@PL_linestart = external global i8*, align 8
@PL_linestr = external global %struct.sv*, align 8
@PL_lex_brackstack = external global i8*, align 8
@PL_lex_casestack = external global i8*, align 8
@PL_rsfp = external global %struct._PerlIO**, align 8
@PL_lex_stuff = external global %struct.sv*, align 8
@PL_lex_defer = external global i32, align 4
@PL_sublex_info = external global %struct._sublex_info, align 8
@PL_lex_repl = external global %struct.sv*, align 8
@PL_expect = external global i32, align 4
@PL_lex_expect = external global i32, align 4
@.str.1 = private unnamed_addr constant [3 x i8] c"\0A;\00", align 1
@PL_doextract = external global i8, align 1
@PL_Sv = external global %struct.sv*, align 8
@PL_rsfp_filters = external global %struct.av*, align 8
@.str.2 = private unnamed_addr constant [42 x i8] c"Can't upgrade filter_add data to SVt_PVIO\00", align 1
@.str.3 = private unnamed_addr constant [56 x i8] c"filter_del can only delete in reverse order (currently)\00", align 1
@PL_sv_undef = external global %struct.sv, align 8
@PL_pending_ident = external global i8, align 1
@PL_yylval = external global %union.YYSTYPE, align 8
@.str.4 = private unnamed_addr constant [4 x i8] c"L\5Cu\00", align 1
@.str.5 = private unnamed_addr constant [4 x i8] c"U\5Cl\00", align 1
@.str.6 = private unnamed_addr constant [13 x i8] c"panic: yylex\00", align 1
@.str.7 = private unnamed_addr constant [2 x i8] c"\22\00", align 1
@.str.8 = private unnamed_addr constant [33 x i8] c"Bad evalled substitution pattern\00", align 1
@PL_hints = external global i32, align 4
@.str.9 = private unnamed_addr constant [3 x i8] c"qr\00", align 1
@.str.10 = private unnamed_addr constant [2 x i8] c"q\00", align 1
@PL_lex_formbrack = external global i32, align 4
@.str.11 = private unnamed_addr constant [30 x i8] c"Unrecognized character \5Cx%02X\00", align 1
@.str.12 = private unnamed_addr constant [22 x i8] c"Format not terminated\00", align 1
@.str.13 = private unnamed_addr constant [38 x i8] c"Missing right curly or square bracket\00", align 1
@PL_in_eval = external global i32, align 4
@PL_preambled = external global i8, align 1
@.str.14 = private unnamed_addr constant [2 x i8] c";\00", align 1
@PL_preambleav = external global %struct.av*, align 8
@PL_minus_n = external global i8, align 1
@PL_minus_p = external global i8, align 1
@.str.15 = private unnamed_addr constant [19 x i8] c"LINE: while (<>) {\00", align 1
@PL_minus_l = external global i8, align 1
@.str.16 = private unnamed_addr constant [7 x i8] c"chomp;\00", align 1
@PL_minus_a = external global i8, align 1
@PL_minus_F = external global i8, align 1
@PL_splitstr = external global i8*, align 8
@.str.17 = private unnamed_addr constant [18 x i8] c"our @F=split(%s);\00", align 1
@.str.18 = private unnamed_addr constant [15 x i8] c"our @F=split(q\00", align 1
@.str.19 = private unnamed_addr constant [3 x i8] c");\00", align 1
@.str.20 = private unnamed_addr constant [19 x i8] c"our @F=split(' ');\00", align 1
@.str.21 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@PL_perldb = external global i32, align 4
@PL_curstash = external global %struct.hv*, align 8
@PL_debstash = external global %struct.hv*, align 8
@PL_preprocess = external global i8, align 1
@.str.22 = private unnamed_addr constant [19 x i8] c";}continue{print;}\00", align 1
@.str.23 = private unnamed_addr constant [3 x i8] c";}\00", align 1
@.str.24 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.25 = private unnamed_addr constant [5 x i8] c"=cut\00", align 1
@.str.26 = private unnamed_addr constant [7 x i8] c"perl -\00", align 1
@.str.27 = private unnamed_addr constant [5 x i8] c"perl\00", align 1
@PL_minus_c = external global i8, align 1
@.str.28 = private unnamed_addr constant [6 x i8] c"indir\00", align 1
@PL_origargv = external global i8**, align 8
@PL_origargc = external global i32, align 4
@.str.29 = private unnamed_addr constant [14 x i8] c"Can't exec %s\00", align 1
@PL_doswitches = external global i8, align 1
@.str.30 = private unnamed_addr constant [28 x i8] c"Too late for \22-%.*s\22 option\00", align 1
@PL_origfilename = external global i8*, align 8
@.str.31 = private unnamed_addr constant [22 x i8] c"panic: input overflow\00", align 1
@.str.32 = private unnamed_addr constant [3 x i8] c"=>\00", align 1
@.str.33 = private unnamed_addr constant [2 x i8] c"\14\00", align 1
@PL_last_lop_op = external global i16, align 2
@PL_copline = external global i32, align 4
@PL_tokenbuf = external global [256 x i8], align 16
@PL_in_my = external global i32, align 4
@.str.34 = private unnamed_addr constant [51 x i8] c"Unterminated attribute parameter in attribute list\00", align 1
@.str.35 = private unnamed_addr constant [7 x i8] c"unique\00", align 1
@.str.36 = private unnamed_addr constant [62 x i8] c"The 'unique' attribute may only be applied to 'our' variables\00", align 1
@.str.37 = private unnamed_addr constant [7 x i8] c"lvalue\00", align 1
@PL_compcv = external global %struct.cv*, align 8
@.str.38 = private unnamed_addr constant [7 x i8] c"locked\00", align 1
@.str.39 = private unnamed_addr constant [7 x i8] c"method\00", align 1
@.str.40 = private unnamed_addr constant [28 x i8] c"Unterminated attribute list\00", align 1
@.str.41 = private unnamed_addr constant [53 x i8] c"Invalid separator character %c%c%c in attribute list\00", align 1
@.str.42 = private unnamed_addr constant [31 x i8] c"Unmatched right square bracket\00", align 1
@.str.43 = private unnamed_addr constant [13 x i8] c"syntax error\00", align 1
@.str.44 = private unnamed_addr constant [15 x i8] c"([{< )]}> )]}>\00", align 1
@PL_utf8skip = external constant [0 x i8], align 1
@.str.45 = private unnamed_addr constant [30 x i8] c"Unmatched right curly bracket\00", align 1
@PL_warn_nosemi = external constant [0 x i8], align 1
@.str.46 = private unnamed_addr constant [11 x i8] c"+-*/%.^&|<\00", align 1
@.str.47 = private unnamed_addr constant [22 x i8] c"Reversed %c= operator\00", align 1
@.str.48 = private unnamed_addr constant [6 x i8] c"{$:+-\00", align 1
@.str.49 = private unnamed_addr constant [13 x i8] c"Array length\00", align 1
@.str.50 = private unnamed_addr constant [7 x i8] c"Scalar\00", align 1
@.str.51 = private unnamed_addr constant [30 x i8] c"Final $ should be \5C$ or $name\00", align 1
@PL_compiling = external global %struct.cop, align 8
@.str.52 = private unnamed_addr constant [43 x i8] c"Multidimensional syntax %.*s not supported\00", align 1
@.str.53 = private unnamed_addr constant [4 x i8] c"SIG\00", align 1
@.str.54 = private unnamed_addr constant [23 x i8] c"You need to quote \22%s\22\00", align 1
@.str.55 = private unnamed_addr constant [7 x i8] c"$@\22'`q\00", align 1
@.str.56 = private unnamed_addr constant [5 x i8] c"&*<%\00", align 1
@.str.57 = private unnamed_addr constant [6 x i8] c"Array\00", align 1
@.str.58 = private unnamed_addr constant [9 x i8] c" \09$#+-'\22\00", align 1
@.str.59 = private unnamed_addr constant [42 x i8] c"Scalar value %.*s better written as $%.*s\00", align 1
@.str.60 = private unnamed_addr constant [6 x i8] c"study\00", align 1
@.str.61 = private unnamed_addr constant [7 x i8] c"Number\00", align 1
@.str.62 = private unnamed_addr constant [7 x i8] c"String\00", align 1
@.str.63 = private unnamed_addr constant [10 x i8] c"Backticks\00", align 1
@.str.64 = private unnamed_addr constant [40 x i8] c"Can't use \5C%c to mean $%c in expression\00", align 1
@.str.65 = private unnamed_addr constant [10 x i8] c"Backslash\00", align 1
@.str.66 = private unnamed_addr constant [5 x i8] c"msyq\00", align 1
@.str.67 = private unnamed_addr constant [5 x i8] c"qwxr\00", align 1
@.str.68 = private unnamed_addr constant [5 x i8] c"CORE\00", align 1
@PL_globalstash = external global %struct.hv*, align 8
@PL_incgv = external global %struct.gv*, align 8
@.str.69 = private unnamed_addr constant [10 x i8] c"Thread.pm\00", align 1
@.str.70 = private unnamed_addr constant [38 x i8] c"dump() better written as CORE::dump()\00", align 1
@.str.71 = private unnamed_addr constant [42 x i8] c"Ambiguous call resolved as CORE::%s(), %s\00", align 1
@.str.72 = private unnamed_addr constant [25 x i8] c"qualify as such or use &\00", align 1
@.str.73 = private unnamed_addr constant [20 x i8] c"Bad name after %s%s\00", align 1
@.str.74 = private unnamed_addr constant [2 x i8] c"'\00", align 1
@.str.75 = private unnamed_addr constant [3 x i8] c"::\00", align 1
@.str.76 = private unnamed_addr constant [9 x i8] c"Bareword\00", align 1
@.str.77 = private unnamed_addr constant [44 x i8] c"Bareword \22%s\22 refers to nonexistent package\00", align 1
@.str.78 = private unnamed_addr constant [15 x i8] c"CORE::GLOBAL::\00", align 1
@PL_opargs = external global [0 x i32], align 4
@.str.79 = private unnamed_addr constant [40 x i8] c"Ambiguous use of -%s resolved as -&%s()\00", align 1
@PL_subname = external global %struct.sv*, align 8
@.str.80 = private unnamed_addr constant [9 x i8] c"__ANON__\00", align 1
@.str.81 = private unnamed_addr constant [19 x i8] c"__ANON__::__ANON__\00", align 1
@PL_warn_reserved = external constant [0 x i8], align 1
@.str.82 = private unnamed_addr constant [42 x i8] c"Operator or semicolon missing before %c%s\00", align 1
@.str.83 = private unnamed_addr constant [44 x i8] c"Ambiguous use of %c resolved as operator %c\00", align 1
@.str.84 = private unnamed_addr constant [4 x i8] c"%ld\00", align 1
@.str.85 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@PL_defstash = external global %struct.hv*, align 8
@.str.86 = private unnamed_addr constant [9 x i8] c"%s::DATA\00", align 1
@.str.87 = private unnamed_addr constant [6 x i8] c":utf8\00", align 1
@PL_encoding = external global %struct.sv*, align 8
@PL_stack_sp = external global %struct.sv**, align 8
@PL_tmps_floor = external global i32, align 4
@PL_tmps_ix = external global i32, align 4
@PL_markstack_ptr = external global i32*, align 8
@PL_markstack_max = external global i32*, align 8
@PL_stack_base = external global %struct.sv**, align 8
@PL_stack_max = external global %struct.sv**, align 8
@.str.88 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@.str.89 = private unnamed_addr constant [14 x i8] c":encoding(%_)\00", align 1
@.str.90 = private unnamed_addr constant [26 x i8] c"CORE::%s is not a keyword\00", align 1
@.str.91 = private unnamed_addr constant [4 x i8] c"ENV\00", align 1
@.str.92 = private unnamed_addr constant [17 x i8] c"AnyDBM_File::ISA\00", align 1
@.str.93 = private unnamed_addr constant [3 x i8] c"my\00", align 1
@.str.94 = private unnamed_addr constant [4 x i8] c"our\00", align 1
@.str.95 = private unnamed_addr constant [27 x i8] c"Missing $ on loop variable\00", align 1
@.str.96 = private unnamed_addr constant [4 x i8] c"sub\00", align 1
@PL_in_my_stash = external global %struct.hv*, align 8
@.str.97 = private unnamed_addr constant [22 x i8] c"No such class %.1000s\00", align 1
@.str.98 = private unnamed_addr constant [31 x i8] c"\22no\22 not allowed in expression\00", align 1
@.str.99 = private unnamed_addr constant [11 x i8] c"|&*+-=!?:.\00", align 1
@.str.100 = private unnamed_addr constant [51 x i8] c"Precedence problem: open %.*s should be open(%.*s)\00", align 1
@.str.101 = private unnamed_addr constant [11 x i8] c"filehandle\00", align 1
@.str.102 = private unnamed_addr constant [47 x i8] c"Possible attempt to separate words with commas\00", align 1
@.str.103 = private unnamed_addr constant [46 x i8] c"Possible attempt to put comments in qw() list\00", align 1
@.str.104 = private unnamed_addr constant [20 x i8] c"<> should be quotes\00", align 1
@.str.105 = private unnamed_addr constant [16 x i8] c"subroutine name\00", align 1
@.str.106 = private unnamed_addr constant [28 x i8] c"sort is now a reserved word\00", align 1
@PL_curstname = external global %struct.sv*, align 8
@.str.107 = private unnamed_addr constant [25 x i8] c"Missing name in \22my sub\22\00", align 1
@.str.108 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@.str.109 = private unnamed_addr constant [25 x i8] c"Prototype not terminated\00", align 1
@.str.110 = private unnamed_addr constant [10 x i8] c"$@%*;[]&\5C\00", align 1
@.str.111 = private unnamed_addr constant [43 x i8] c"Illegal character in prototype for %_ : %s\00", align 1
@.str.112 = private unnamed_addr constant [44 x i8] c"Illegal declaration of anonymous subroutine\00", align 1
@.str.113 = private unnamed_addr constant [37 x i8] c"Illegal declaration of subroutine %_\00", align 1
@.str.114 = private unnamed_addr constant [32 x i8] c"\22use\22 not allowed in expression\00", align 1
@.str.115 = private unnamed_addr constant [2 x i8] c"\0C\00", align 1
@.str.116 = private unnamed_addr constant [23 x i8] c"elseif should be elsif\00", align 1
@Perl_scan_num.number_too_long = internal global [16 x i8] c"Number too long\00", align 16
@.str.117 = private unnamed_addr constant [16 x i8] c"panic: scan_num\00", align 1
@Perl_scan_num.nvshift = internal global [5 x double] [double 1.000000e+00, double 2.000000e+00, double 4.000000e+00, double 8.000000e+00, double 1.600000e+01], align 16
@Perl_scan_num.bases = internal global [5 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.118, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.119, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.120, i32 0, i32 0)], align 16
@.str.118 = private unnamed_addr constant [7 x i8] c"binary\00", align 1
@.str.119 = private unnamed_addr constant [6 x i8] c"octal\00", align 1
@.str.120 = private unnamed_addr constant [12 x i8] c"hexadecimal\00", align 1
@Perl_scan_num.Bases = internal global [5 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.121, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.122, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.123, i32 0, i32 0)], align 16
@.str.121 = private unnamed_addr constant [7 x i8] c"Binary\00", align 1
@.str.122 = private unnamed_addr constant [6 x i8] c"Octal\00", align 1
@.str.123 = private unnamed_addr constant [12 x i8] c"Hexadecimal\00", align 1
@Perl_scan_num.maxima = internal global [5 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.124, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.125, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.126, i32 0, i32 0)], align 16
@.str.124 = private unnamed_addr constant [35 x i8] c"0b11111111111111111111111111111111\00", align 1
@.str.125 = private unnamed_addr constant [13 x i8] c"037777777777\00", align 1
@.str.126 = private unnamed_addr constant [11 x i8] c"0xffffffff\00", align 1
@.str.127 = private unnamed_addr constant [22 x i8] c"Misplaced _ in number\00", align 1
@.str.128 = private unnamed_addr constant [25 x i8] c"Illegal octal digit '%c'\00", align 1
@.str.129 = private unnamed_addr constant [26 x i8] c"Illegal binary digit '%c'\00", align 1
@.str.130 = private unnamed_addr constant [30 x i8] c"Integer overflow in %s number\00", align 1
@.str.131 = private unnamed_addr constant [28 x i8] c"%s number > %s non-portable\00", align 1
@.str.132 = private unnamed_addr constant [8 x i8] c"integer\00", align 1
@.str.133 = private unnamed_addr constant [14 x i8] c"+-0123456789_\00", align 1
@.str.134 = private unnamed_addr constant [6 x i8] c"float\00", align 1
@PL_savestack_ix = external global i32, align 4
@PL_subline = external global i32, align 4
@PL_cop_seqmax = external global i32, align 4
@PL_yychar = external global i32, align 4
@.str.135 = private unnamed_addr constant [7 x i8] c"at EOF\00", align 1
@.str.136 = private unnamed_addr constant [15 x i8] c"next token ???\00", align 1
@.str.137 = private unnamed_addr constant [15 x i8] c"at end of line\00", align 1
@.str.138 = private unnamed_addr constant [15 x i8] c"within pattern\00", align 1
@.str.139 = private unnamed_addr constant [14 x i8] c"within string\00", align 1
@.str.140 = private unnamed_addr constant [11 x i8] c"next char \00", align 1
@.str.141 = private unnamed_addr constant [4 x i8] c"^%c\00", align 1
@.str.142 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.143 = private unnamed_addr constant [6 x i8] c"\5C%03o\00", align 1
@.str.144 = private unnamed_addr constant [18 x i8] c" at %s line %ld, \00", align 1
@.str.145 = private unnamed_addr constant [13 x i8] c"near \22%.*s\22\0A\00", align 1
@.str.146 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@PL_multi_start = external global i32, align 4
@PL_multi_end = external global i32, align 4
@.str.147 = private unnamed_addr constant [68 x i8] c"  (Might be a runaway multi-line %c%c string starting on line %ld)\0A\00", align 1
@PL_multi_open = external global i32, align 4
@PL_multi_close = external global i32, align 4
@.str.148 = private unnamed_addr constant [3 x i8] c"%_\00", align 1
@PL_error_count = external global i32, align 4
@PL_errgv = external global %struct.gv*, align 8
@.str.149 = private unnamed_addr constant [27 x i8] c"%_%s has too many errors.\0A\00", align 1
@.str.150 = private unnamed_addr constant [25 x i8] c"%s has too many errors.\0A\00", align 1
@.str.151 = private unnamed_addr constant [35 x i8] c"Integer overflow in decimal number\00", align 1
@.str.152 = private unnamed_addr constant [12 x i8] c"[#!%*<>()-=\00", align 1
@.str.153 = private unnamed_addr constant [6 x i8] c"])} =\00", align 1
@.str.154 = private unnamed_addr constant [5 x i8] c"wds]\00", align 1
@.str.155 = private unnamed_addr constant [10 x i8] c"rnftbxcav\00", align 1
@.str.156 = private unnamed_addr constant [7 x i8] c"aA01! \00", align 1
@.str.157 = private unnamed_addr constant [6 x i8] c"zZ79~\00", align 1
@.str.158 = private unnamed_addr constant [57 x i8] c"\5C.^$@AGZdDwWsSbBpPXC+*?|()-nrtfeaxz0123456789[{]} \09\0A\0D\0C\0B#\00", align 1
@.str.159 = private unnamed_addr constant [50 x i8] c"Invalid range \22%c-%c\22 in transliteration operator\00", align 1
@.str.160 = private unnamed_addr constant [44 x i8] c"Ambiguous range in transliteration operator\00", align 1
@.str.161 = private unnamed_addr constant [7 x i8] c":'{$+-\00", align 1
@.str.162 = private unnamed_addr constant [8 x i8] c"()| \0D\0A\09\00", align 1
@.str.163 = private unnamed_addr constant [26 x i8] c"\5C%c better written as $%c\00", align 1
@.str.164 = private unnamed_addr constant [7 x i8] c"lLuUEQ\00", align 1
@.str.165 = private unnamed_addr constant [39 x i8] c"Unrecognized escape \5C%c passed through\00", align 1
@.str.166 = private unnamed_addr constant [28 x i8] c"Missing right brace on \5Cx{}\00", align 1
@.str.167 = private unnamed_addr constant [28 x i8] c"Missing right brace on \5CN{}\00", align 1
@.str.168 = private unnamed_addr constant [10 x i8] c"charnames\00", align 1
@.str.169 = private unnamed_addr constant [8 x i8] c"\5CN{...}\00", align 1
@.str.170 = private unnamed_addr constant [23 x i8] c"Missing braces on \5CN{}\00", align 1
@.str.171 = private unnamed_addr constant [32 x i8] c"Missing control char name in \5Cc\00", align 1
@.str.172 = private unnamed_addr constant [43 x i8] c"panic: constant overflowed allocated space\00", align 1
@.str.173 = private unnamed_addr constant [3 x i8] c"tr\00", align 1
@.str.174 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str.175 = private unnamed_addr constant [3 x i8] c"qq\00", align 1
@.str.176 = private unnamed_addr constant [8 x i8] c"PERL5DB\00", align 1
@.str.177 = private unnamed_addr constant [31 x i8] c"BEGIN { require 'perl5db.pl' }\00", align 1
@.str.178 = private unnamed_addr constant [5 x i8] c"line\00", align 1
@.str.179 = private unnamed_addr constant [51 x i8] c";}continue{print or die qq(-p destination: $!\5Cn);}\00", align 1
@.str.180 = private unnamed_addr constant [54 x i8] c"Warning: Use of \22%s\22 without parentheses is ambiguous\00", align 1
@PL_lex_op = external global %struct.op*, align 8
@.str.181 = private unnamed_addr constant [25 x i8] c"comma-less variable list\00", align 1
@.str.182 = private unnamed_addr constant [33 x i8] c"%s found where operator expected\00", align 1
@.str.183 = private unnamed_addr constant [40 x i8] c"\09(Missing semicolon on previous line?)\0A\00", align 1
@.str.184 = private unnamed_addr constant [36 x i8] c"\09(Do you need to predeclare %.*s?)\0A\00", align 1
@.str.185 = private unnamed_addr constant [34 x i8] c"\09(Missing operator before %.*s?)\0A\00", align 1
@.str.186 = private unnamed_addr constant [56 x i8] c"Can't find string terminator %c%s%c anywhere before EOF\00", align 1
@.str.187 = private unnamed_addr constant [12 x i8] c"__PACKAGE__\00", align 1
@.str.188 = private unnamed_addr constant [49 x i8] c"No package name allowed for variable %s in \22our\22\00", align 1
@PL_no_myglob = external constant [0 x i8], align 1
@PL_comppad_name = external global %struct.av*, align 8
@.str.189 = private unnamed_addr constant [4 x i8] c"<=>\00", align 1
@.str.190 = private unnamed_addr constant [4 x i8] c"cmp\00", align 1
@.str.191 = private unnamed_addr constant [37 x i8] c"Can't use \22my %s\22 in sort comparison\00", align 1
@.str.192 = private unnamed_addr constant [50 x i8] c"Possible unintended interpolation of %s in string\00", align 1
@.str.193 = private unnamed_addr constant [13 x i8] c";|})]oaiuw!=\00", align 1
@.str.194 = private unnamed_addr constant [33 x i8] c"%s (...) interpreted as function\00", align 1
@.str.195 = private unnamed_addr constant [26 x i8] c"No comma allowed after %s\00", align 1
@PL_hintgv = external global %struct.gv*, align 8
@.str.196 = private unnamed_addr constant [41 x i8] c"(possibly a missing \22use charnames ...\22)\00", align 1
@.str.197 = private unnamed_addr constant [25 x i8] c"Constant(%s) unknown: %s\00", align 1
@.str.198 = private unnamed_addr constant [6 x i8] c"undef\00", align 1
@.str.199 = private unnamed_addr constant [21 x i8] c"Constant(%s): %s%s%s\00", align 1
@.str.200 = private unnamed_addr constant [5 x i8] c"$^H{\00", align 1
@.str.201 = private unnamed_addr constant [17 x i8] c"} is not defined\00", align 1
@PL_curstackinfo = external global %struct.stackinfo*, align 8
@PL_curstack = external global %struct.av*, align 8
@PL_Xpv = external global %struct.xpv*, align 8
@.str.202 = private unnamed_addr constant [11 x i8] c"Propagated\00", align 1
@PL_stderrgv = external global %struct.gv*, align 8
@.str.203 = private unnamed_addr constant [17 x i8] c"panic: POPSTACK\0A\00", align 1
@.str.204 = private unnamed_addr constant [15 x i8] c"Call to &{$^H{\00", align 1
@.str.205 = private unnamed_addr constant [34 x i8] c"}} did not return a defined value\00", align 1
@ident_too_long = internal global [20 x i8] c"Identifier too long\00", align 16
@.str.206 = private unnamed_addr constant [7 x i8] c"[\5C]^_?\00", align 1
@.str.207 = private unnamed_addr constant [6 x i8] c"[...]\00", align 1
@.str.208 = private unnamed_addr constant [6 x i8] c"{...}\00", align 1
@.str.209 = private unnamed_addr constant [45 x i8] c"Ambiguous use of %c{%s%s} resolved to %c%s%s\00", align 1
@.str.210 = private unnamed_addr constant [41 x i8] c"Ambiguous use of %c{%s} resolved to %c%s\00", align 1
@.str.211 = private unnamed_addr constant [30 x i8] c"Search pattern not terminated\00", align 1
@.str.212 = private unnamed_addr constant [6 x i8] c"iomsx\00", align 1
@.str.213 = private unnamed_addr constant [8 x i8] c"iogcmsx\00", align 1
@c_without_g = internal global [45 x i8] c"Use of /c modifier is meaningless without /g\00", align 16
@.str.214 = private unnamed_addr constant [36 x i8] c"Substitution pattern not terminated\00", align 1
@.str.215 = private unnamed_addr constant [40 x i8] c"Substitution replacement not terminated\00", align 1
@c_in_subst = internal global [42 x i8] c"Use of /c modifier is meaningless in s///\00", align 16
@.str.216 = private unnamed_addr constant [6 x i8] c"eval \00", align 1
@.str.217 = private unnamed_addr constant [4 x i8] c"do \00", align 1
@.str.218 = private unnamed_addr constant [3 x i8] c"{ \00", align 1
@.str.219 = private unnamed_addr constant [4 x i8] c" };\00", align 1
@.str.220 = private unnamed_addr constant [39 x i8] c"Transliteration pattern not terminated\00", align 1
@.str.221 = private unnamed_addr constant [43 x i8] c"Transliteration replacement not terminated\00", align 1
@.str.222 = private unnamed_addr constant [21 x i8] c"bare << to mean <<\22\22\00", align 1
@.str.223 = private unnamed_addr constant [40 x i8] c"Delimiter for here document is too long\00", align 1
@.str.224 = private unnamed_addr constant [29 x i8] c"Excessively long <> operator\00", align 1
@.str.225 = private unnamed_addr constant [25 x i8] c"Unterminated <> operator\00", align 1
@.str.226 = private unnamed_addr constant [20 x i8] c"Glob not terminated\00", align 1
@.str.227 = private unnamed_addr constant [5 x i8] c"ARGV\00", align 1
@.str.228 = private unnamed_addr constant [9 x i8] c"readline\00", align 1
@PL_cshlen = external global i32, align 4
@PL_cshname = external global i8*, align 8
@.str.229 = private unnamed_addr constant [37 x i8] c"Unsupported script encoding UTF32-LE\00", align 1
@.str.230 = private unnamed_addr constant [37 x i8] c"Unsupported script encoding UTF32-BE\00", align 1

; Function Attrs: nounwind uwtable
define void @Perl_deprecate(i8* %s) #0 {
entry:
  %s.addr = alloca i8*, align 8
  store i8* %s, i8** %s.addr, align 8
  %0 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings = getelementptr inbounds %struct.cop, %struct.cop* %0, i32 0, i32 14
  %1 = load %struct.sv*, %struct.sv** %cop_warnings, align 8
  %cmp = icmp ne %struct.sv* %1, null
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false.7

land.lhs.true:                                    ; preds = %entry
  %2 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings1 = getelementptr inbounds %struct.cop, %struct.cop* %2, i32 0, i32 14
  %3 = load %struct.sv*, %struct.sv** %cop_warnings1, align 8
  %cmp2 = icmp ne %struct.sv* %3, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 2)
  br i1 %cmp2, label %land.lhs.true.3, label %lor.lhs.false.7

land.lhs.true.3:                                  ; preds = %land.lhs.true
  %4 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings4 = getelementptr inbounds %struct.cop, %struct.cop* %4, i32 0, i32 14
  %5 = load %struct.sv*, %struct.sv** %cop_warnings4, align 8
  %cmp5 = icmp eq %struct.sv* %5, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 1)
  br i1 %cmp5, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true.3
  %6 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings6 = getelementptr inbounds %struct.cop, %struct.cop* %6, i32 0, i32 14
  %7 = load %struct.sv*, %struct.sv** %cop_warnings6, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %7, i32 0, i32 0
  %8 = load i8*, i8** %sv_any, align 8
  %9 = bitcast i8* %8 to %struct.xpv*
  %xpv_pv = getelementptr inbounds %struct.xpv, %struct.xpv* %9, i32 0, i32 0
  %10 = load i8*, i8** %xpv_pv, align 8
  %arrayidx = getelementptr inbounds i8, i8* %10, i64 0
  %11 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %11 to i32
  %and = and i32 %conv, 16
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %lor.lhs.false.7

lor.lhs.false.7:                                  ; preds = %lor.lhs.false, %land.lhs.true, %entry
  %12 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings8 = getelementptr inbounds %struct.cop, %struct.cop* %12, i32 0, i32 14
  %13 = load %struct.sv*, %struct.sv** %cop_warnings8, align 8
  %cmp9 = icmp eq %struct.sv* %13, null
  br i1 %cmp9, label %land.lhs.true.11, label %if.end

land.lhs.true.11:                                 ; preds = %lor.lhs.false.7
  %14 = load i8, i8* @PL_dowarn, align 1
  %conv12 = zext i8 %14 to i32
  %and13 = and i32 %conv12, 1
  %tobool14 = icmp ne i32 %and13, 0
  br i1 %tobool14, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true.11, %lor.lhs.false, %land.lhs.true.3
  %15 = load i8*, i8** %s.addr, align 8
  call void (i32, i8*, ...) @Perl_warner(i32 2, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i32 0, i32 0), i8* %15)
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true.11, %lor.lhs.false.7
  ret void
}

declare void @Perl_warner(i32, i8*, ...) #1

; Function Attrs: nounwind uwtable
define void @Perl_deprecate_old(i8* %s) #0 {
entry:
  %s.addr = alloca i8*, align 8
  store i8* %s, i8** %s.addr, align 8
  %0 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings = getelementptr inbounds %struct.cop, %struct.cop* %0, i32 0, i32 14
  %1 = load %struct.sv*, %struct.sv** %cop_warnings, align 8
  %cmp = icmp ne %struct.sv* %1, null
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false.15

land.lhs.true:                                    ; preds = %entry
  %2 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings1 = getelementptr inbounds %struct.cop, %struct.cop* %2, i32 0, i32 14
  %3 = load %struct.sv*, %struct.sv** %cop_warnings1, align 8
  %cmp2 = icmp ne %struct.sv* %3, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 2)
  br i1 %cmp2, label %land.lhs.true.3, label %lor.lhs.false.15

land.lhs.true.3:                                  ; preds = %land.lhs.true
  %4 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings4 = getelementptr inbounds %struct.cop, %struct.cop* %4, i32 0, i32 14
  %5 = load %struct.sv*, %struct.sv** %cop_warnings4, align 8
  %cmp5 = icmp eq %struct.sv* %5, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 1)
  br i1 %cmp5, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true.3
  %6 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings6 = getelementptr inbounds %struct.cop, %struct.cop* %6, i32 0, i32 14
  %7 = load %struct.sv*, %struct.sv** %cop_warnings6, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %7, i32 0, i32 0
  %8 = load i8*, i8** %sv_any, align 8
  %9 = bitcast i8* %8 to %struct.xpv*
  %xpv_pv = getelementptr inbounds %struct.xpv, %struct.xpv* %9, i32 0, i32 0
  %10 = load i8*, i8** %xpv_pv, align 8
  %arrayidx = getelementptr inbounds i8, i8* %10, i64 0
  %11 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %11 to i32
  %and = and i32 %conv, 16
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %lor.lhs.false.7

lor.lhs.false.7:                                  ; preds = %lor.lhs.false
  %12 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings8 = getelementptr inbounds %struct.cop, %struct.cop* %12, i32 0, i32 14
  %13 = load %struct.sv*, %struct.sv** %cop_warnings8, align 8
  %sv_any9 = getelementptr inbounds %struct.sv, %struct.sv* %13, i32 0, i32 0
  %14 = load i8*, i8** %sv_any9, align 8
  %15 = bitcast i8* %14 to %struct.xpv*
  %xpv_pv10 = getelementptr inbounds %struct.xpv, %struct.xpv* %15, i32 0, i32 0
  %16 = load i8*, i8** %xpv_pv10, align 8
  %arrayidx11 = getelementptr inbounds i8, i8* %16, i64 7
  %17 = load i8, i8* %arrayidx11, align 1
  %conv12 = sext i8 %17 to i32
  %and13 = and i32 %conv12, 1
  %tobool14 = icmp ne i32 %and13, 0
  br i1 %tobool14, label %if.then, label %lor.lhs.false.15

lor.lhs.false.15:                                 ; preds = %lor.lhs.false.7, %land.lhs.true, %entry
  %18 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings16 = getelementptr inbounds %struct.cop, %struct.cop* %18, i32 0, i32 14
  %19 = load %struct.sv*, %struct.sv** %cop_warnings16, align 8
  %cmp17 = icmp eq %struct.sv* %19, null
  br i1 %cmp17, label %land.lhs.true.19, label %if.end

land.lhs.true.19:                                 ; preds = %lor.lhs.false.15
  %20 = load i8, i8* @PL_dowarn, align 1
  %conv20 = zext i8 %20 to i32
  %and21 = and i32 %conv20, 1
  %tobool22 = icmp ne i32 %and21, 0
  br i1 %tobool22, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true.19, %lor.lhs.false.7, %lor.lhs.false, %land.lhs.true.3
  %21 = load i8*, i8** %s.addr, align 8
  call void (i32, i8*, ...) @Perl_warner(i32 7170, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i32 0, i32 0), i8* %21)
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true.19, %lor.lhs.false.15
  ret void
}

; Function Attrs: nounwind uwtable
define void @Perl_lex_start(%struct.sv* %line) #0 {
entry:
  %line.addr = alloca %struct.sv*, align 8
  %s = alloca i8*, align 8
  %len = alloca i64, align 8
  %toke = alloca i32, align 4
  store %struct.sv* %line, %struct.sv** %line.addr, align 8
  call void @Perl_save_I32(i32* @PL_lex_dojoin)
  call void @Perl_save_I32(i32* @PL_lex_brackets)
  call void @Perl_save_I32(i32* @PL_lex_casemods)
  call void @Perl_save_I32(i32* @PL_lex_starts)
  call void @Perl_save_I32(i32* @PL_lex_state)
  call void @Perl_save_vptr(i8* bitcast (%struct.op** @PL_lex_inpat to i8*))
  call void @Perl_save_I32(i32* @PL_lex_inwhat)
  %0 = load i32, i32* @PL_lex_state, align 4
  %cmp = icmp eq i32 %0, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load i32, i32* @PL_nexttoke, align 4
  store i32 %1, i32* %toke, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.then
  %2 = load i32, i32* %toke, align 4
  %dec = add nsw i32 %2, -1
  store i32 %dec, i32* %toke, align 4
  %cmp1 = icmp sge i32 %dec, 0
  br i1 %cmp1, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %3 = load i32, i32* %toke, align 4
  %idxprom = sext i32 %3 to i64
  %arrayidx = getelementptr inbounds [5 x i32], [5 x i32]* @PL_nexttype, i32 0, i64 %idxprom
  call void @Perl_save_I32(i32* %arrayidx)
  %4 = load i32, i32* %toke, align 4
  %idxprom2 = sext i32 %4 to i64
  %arrayidx3 = getelementptr inbounds [5 x %union.YYSTYPE], [5 x %union.YYSTYPE]* @PL_nextval, i32 0, i64 %idxprom2
  %5 = bitcast %union.YYSTYPE* %arrayidx3 to i8*
  call void @Perl_save_vptr(i8* %5)
  br label %while.cond

while.end:                                        ; preds = %while.cond
  call void @Perl_save_I32(i32* @PL_nexttoke)
  br label %if.end

if.end:                                           ; preds = %while.end, %entry
  %6 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line = getelementptr inbounds %struct.cop, %struct.cop* %6, i32 0, i32 13
  call void @Perl_save_I32(i32* %cop_line)
  call void @Perl_save_pptr(i8** @PL_bufptr)
  call void @Perl_save_pptr(i8** @PL_bufend)
  call void @Perl_save_pptr(i8** @PL_oldbufptr)
  call void @Perl_save_pptr(i8** @PL_oldoldbufptr)
  call void @Perl_save_pptr(i8** @PL_last_lop)
  call void @Perl_save_pptr(i8** @PL_last_uni)
  call void @Perl_save_pptr(i8** @PL_linestart)
  call void @Perl_save_sptr(%struct.sv** @PL_linestr)
  call void @Perl_save_generic_pvref(i8** @PL_lex_brackstack)
  call void @Perl_save_generic_pvref(i8** @PL_lex_casestack)
  %7 = load volatile %struct._PerlIO**, %struct._PerlIO*** @PL_rsfp, align 8
  %8 = bitcast %struct._PerlIO** %7 to i8*
  call void @Perl_save_destructor_x(void (i8*)* @restore_rsfp, i8* %8)
  call void @Perl_save_sptr(%struct.sv** @PL_lex_stuff)
  call void @Perl_save_I32(i32* @PL_lex_defer)
  call void @Perl_save_I32(i32* getelementptr inbounds (%struct._sublex_info, %struct._sublex_info* @PL_sublex_info, i32 0, i32 1))
  call void @Perl_save_sptr(%struct.sv** @PL_lex_repl)
  call void @Perl_save_int(i32* @PL_expect)
  call void @Perl_save_int(i32* @PL_lex_expect)
  store i32 10, i32* @PL_lex_state, align 4
  store i32 0, i32* @PL_lex_defer, align 4
  store i32 3, i32* @PL_expect, align 4
  store i32 0, i32* @PL_lex_brackets, align 4
  %call = call i8* @Perl_safesysmalloc(i64 120)
  store i8* %call, i8** @PL_lex_brackstack, align 8
  %call4 = call i8* @Perl_safesysmalloc(i64 12)
  store i8* %call4, i8** @PL_lex_casestack, align 8
  store i32 0, i32* @PL_lex_casemods, align 4
  %9 = load i8*, i8** @PL_lex_casestack, align 8
  store i8 0, i8* %9, align 1
  store i32 0, i32* @PL_lex_dojoin, align 4
  store i32 0, i32* @PL_lex_starts, align 4
  store %struct.sv* null, %struct.sv** @PL_lex_stuff, align 8
  store %struct.sv* null, %struct.sv** @PL_lex_repl, align 8
  store %struct.op* null, %struct.op** @PL_lex_inpat, align 8
  store i32 0, i32* @PL_nexttoke, align 4
  store i32 0, i32* @PL_lex_inwhat, align 4
  store i32 0, i32* getelementptr inbounds (%struct._sublex_info, %struct._sublex_info* @PL_sublex_info, i32 0, i32 1), align 4
  %10 = load %struct.sv*, %struct.sv** %line.addr, align 8
  store %struct.sv* %10, %struct.sv** @PL_linestr, align 8
  %11 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %11, i32 0, i32 2
  %12 = load i32, i32* %sv_flags, align 4
  %and = and i32 %12, 8388608
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then.5, label %if.end.8

if.then.5:                                        ; preds = %if.end
  %13 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %call6 = call %struct.sv* @Perl_newSVsv(%struct.sv* %13)
  %call7 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call6)
  store %struct.sv* %call7, %struct.sv** @PL_linestr, align 8
  br label %if.end.8

if.end.8:                                         ; preds = %if.then.5, %if.end
  %14 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_flags9 = getelementptr inbounds %struct.sv, %struct.sv* %14, i32 0, i32 2
  %15 = load i32, i32* %sv_flags9, align 4
  %and10 = and i32 %15, 262144
  %cmp11 = icmp eq i32 %and10, 262144
  br i1 %cmp11, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end.8
  %16 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %16, i32 0, i32 0
  %17 = load i8*, i8** %sv_any, align 8
  %18 = bitcast i8* %17 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %18, i32 0, i32 1
  %19 = load i64, i64* %xpv_cur, align 8
  store i64 %19, i64* %len, align 8
  %20 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_any12 = getelementptr inbounds %struct.sv, %struct.sv* %20, i32 0, i32 0
  %21 = load i8*, i8** %sv_any12, align 8
  %22 = bitcast i8* %21 to %struct.xpv*
  %xpv_pv = getelementptr inbounds %struct.xpv, %struct.xpv* %22, i32 0, i32 0
  %23 = load i8*, i8** %xpv_pv, align 8
  br label %cond.end

cond.false:                                       ; preds = %if.end.8
  %24 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %call13 = call i8* @Perl_sv_2pv_flags(%struct.sv* %24, i64* %len, i32 2)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %23, %cond.true ], [ %call13, %cond.false ]
  store i8* %cond, i8** %s, align 8
  %25 = load i64, i64* %len, align 8
  %tobool14 = icmp ne i64 %25, 0
  br i1 %tobool14, label %lor.lhs.false, label %if.then.18

lor.lhs.false:                                    ; preds = %cond.end
  %26 = load i64, i64* %len, align 8
  %sub = sub i64 %26, 1
  %27 = load i8*, i8** %s, align 8
  %arrayidx15 = getelementptr inbounds i8, i8* %27, i64 %sub
  %28 = load i8, i8* %arrayidx15, align 1
  %conv = sext i8 %28 to i32
  %cmp16 = icmp ne i32 %conv, 59
  br i1 %cmp16, label %if.then.18, label %if.end.26

if.then.18:                                       ; preds = %lor.lhs.false, %cond.end
  %29 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_flags19 = getelementptr inbounds %struct.sv, %struct.sv* %29, i32 0, i32 2
  %30 = load i32, i32* %sv_flags19, align 4
  %and20 = and i32 %30, 2048
  %tobool21 = icmp ne i32 %and20, 0
  br i1 %tobool21, label %if.end.25, label %if.then.22

if.then.22:                                       ; preds = %if.then.18
  %31 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %call23 = call %struct.sv* @Perl_newSVsv(%struct.sv* %31)
  %call24 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call23)
  store %struct.sv* %call24, %struct.sv** @PL_linestr, align 8
  br label %if.end.25

if.end.25:                                        ; preds = %if.then.22, %if.then.18
  %32 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  call void @Perl_sv_catpvn_flags(%struct.sv* %32, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i64 2, i32 2)
  br label %if.end.26

if.end.26:                                        ; preds = %if.end.25, %lor.lhs.false
  %33 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_flags27 = getelementptr inbounds %struct.sv, %struct.sv* %33, i32 0, i32 2
  %34 = load i32, i32* %sv_flags27, align 4
  %and28 = and i32 %34, -2049
  store i32 %and28, i32* %sv_flags27, align 4
  %35 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_any29 = getelementptr inbounds %struct.sv, %struct.sv* %35, i32 0, i32 0
  %36 = load i8*, i8** %sv_any29, align 8
  %37 = bitcast i8* %36 to %struct.xpv*
  %xpv_pv30 = getelementptr inbounds %struct.xpv, %struct.xpv* %37, i32 0, i32 0
  %38 = load i8*, i8** %xpv_pv30, align 8
  store i8* %38, i8** @PL_linestart, align 8
  store i8* %38, i8** @PL_bufptr, align 8
  store i8* %38, i8** @PL_oldbufptr, align 8
  store i8* %38, i8** @PL_oldoldbufptr, align 8
  %39 = load i8*, i8** @PL_bufptr, align 8
  %40 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_any31 = getelementptr inbounds %struct.sv, %struct.sv* %40, i32 0, i32 0
  %41 = load i8*, i8** %sv_any31, align 8
  %42 = bitcast i8* %41 to %struct.xpv*
  %xpv_cur32 = getelementptr inbounds %struct.xpv, %struct.xpv* %42, i32 0, i32 1
  %43 = load i64, i64* %xpv_cur32, align 8
  %add.ptr = getelementptr inbounds i8, i8* %39, i64 %43
  store i8* %add.ptr, i8** @PL_bufend, align 8
  store i8* null, i8** @PL_last_uni, align 8
  store i8* null, i8** @PL_last_lop, align 8
  store volatile %struct._PerlIO** null, %struct._PerlIO*** @PL_rsfp, align 8
  ret void
}

declare void @Perl_save_I32(i32*) #1

declare void @Perl_save_vptr(i8*) #1

declare void @Perl_save_pptr(i8**) #1

declare void @Perl_save_sptr(%struct.sv**) #1

declare void @Perl_save_generic_pvref(i8**) #1

declare void @Perl_save_destructor_x(void (i8*)*, i8*) #1

; Function Attrs: nounwind uwtable
define internal void @restore_rsfp(i8* %f) #0 {
entry:
  %f.addr = alloca i8*, align 8
  %fp = alloca %struct._PerlIO**, align 8
  store i8* %f, i8** %f.addr, align 8
  %0 = load i8*, i8** %f.addr, align 8
  %1 = bitcast i8* %0 to %struct._PerlIO**
  store %struct._PerlIO** %1, %struct._PerlIO*** %fp, align 8
  %2 = load volatile %struct._PerlIO**, %struct._PerlIO*** @PL_rsfp, align 8
  %call = call %struct._PerlIO** @Perl_PerlIO_stdin()
  %cmp = icmp eq %struct._PerlIO** %2, %call
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %3 = load volatile %struct._PerlIO**, %struct._PerlIO*** @PL_rsfp, align 8
  call void @Perl_PerlIO_clearerr(%struct._PerlIO** %3)
  br label %if.end.4

if.else:                                          ; preds = %entry
  %4 = load volatile %struct._PerlIO**, %struct._PerlIO*** @PL_rsfp, align 8
  %tobool = icmp ne %struct._PerlIO** %4, null
  br i1 %tobool, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %if.else
  %5 = load volatile %struct._PerlIO**, %struct._PerlIO*** @PL_rsfp, align 8
  %6 = load %struct._PerlIO**, %struct._PerlIO*** %fp, align 8
  %cmp1 = icmp ne %struct._PerlIO** %5, %6
  br i1 %cmp1, label %if.then.2, label %if.end

if.then.2:                                        ; preds = %land.lhs.true
  %7 = load volatile %struct._PerlIO**, %struct._PerlIO*** @PL_rsfp, align 8
  %call3 = call i32 @Perl_PerlIO_close(%struct._PerlIO** %7)
  br label %if.end

if.end:                                           ; preds = %if.then.2, %land.lhs.true, %if.else
  br label %if.end.4

if.end.4:                                         ; preds = %if.end, %if.then
  %8 = load %struct._PerlIO**, %struct._PerlIO*** %fp, align 8
  store volatile %struct._PerlIO** %8, %struct._PerlIO*** @PL_rsfp, align 8
  ret void
}

declare void @Perl_save_int(i32*) #1

declare i8* @Perl_safesysmalloc(i64) #1

declare %struct.sv* @Perl_sv_2mortal(%struct.sv*) #1

declare %struct.sv* @Perl_newSVsv(%struct.sv*) #1

declare i8* @Perl_sv_2pv_flags(%struct.sv*, i64*, i32) #1

declare void @Perl_sv_catpvn_flags(%struct.sv*, i8*, i64, i32) #1

; Function Attrs: nounwind uwtable
define void @Perl_lex_end() #0 {
entry:
  store i8 0, i8* @PL_doextract, align 1
  ret void
}

; Function Attrs: nounwind uwtable
define double @Perl_str_to_version(%struct.sv* %sv) #0 {
entry:
  %sv.addr = alloca %struct.sv*, align 8
  %retval1 = alloca double, align 8
  %nshift = alloca double, align 8
  %len = alloca i64, align 8
  %start = alloca i8*, align 8
  %utf = alloca i8, align 1
  %end = alloca i8*, align 8
  %skip = alloca i64, align 8
  %n = alloca i64, align 8
  store %struct.sv* %sv, %struct.sv** %sv.addr, align 8
  store double 0.000000e+00, double* %retval1, align 8
  store double 1.000000e+00, double* %nshift, align 8
  %0 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  store %struct.sv* %0, %struct.sv** @PL_Sv, align 8
  %1 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %1, i32 0, i32 2
  %2 = load i32, i32* %sv_flags, align 4
  %and = and i32 %2, 262144
  %cmp = icmp eq i32 %and, 262144
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %3 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %3, i32 0, i32 0
  %4 = load i8*, i8** %sv_any, align 8
  %5 = bitcast i8* %4 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %5, i32 0, i32 1
  %6 = load i64, i64* %xpv_cur, align 8
  store i64 %6, i64* %len, align 8
  %7 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_any2 = getelementptr inbounds %struct.sv, %struct.sv* %7, i32 0, i32 0
  %8 = load i8*, i8** %sv_any2, align 8
  %9 = bitcast i8* %8 to %struct.xpv*
  %xpv_pv = getelementptr inbounds %struct.xpv, %struct.xpv* %9, i32 0, i32 0
  %10 = load i8*, i8** %xpv_pv, align 8
  br label %cond.end

cond.false:                                       ; preds = %entry
  %11 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %call = call i8* @Perl_sv_2pv_flags(%struct.sv* %11, i64* %len, i32 2)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %10, %cond.true ], [ %call, %cond.false ]
  store i8* %cond, i8** %start, align 8
  %12 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags3 = getelementptr inbounds %struct.sv, %struct.sv* %12, i32 0, i32 2
  %13 = load i32, i32* %sv_flags3, align 4
  %and4 = and i32 %13, 536870912
  %tobool = icmp ne i32 %and4, 0
  %cond5 = select i1 %tobool, i32 1, i32 0
  %conv = trunc i32 %cond5 to i8
  store i8 %conv, i8* %utf, align 1
  %14 = load i8*, i8** %start, align 8
  %15 = load i64, i64* %len, align 8
  %add.ptr = getelementptr inbounds i8, i8* %14, i64 %15
  store i8* %add.ptr, i8** %end, align 8
  br label %while.cond

while.cond:                                       ; preds = %if.end, %cond.end
  %16 = load i8*, i8** %start, align 8
  %17 = load i8*, i8** %end, align 8
  %cmp6 = icmp ult i8* %16, %17
  br i1 %cmp6, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %18 = load i8, i8* %utf, align 1
  %tobool8 = icmp ne i8 %18, 0
  br i1 %tobool8, label %if.then, label %if.else

if.then:                                          ; preds = %while.body
  %19 = load i8*, i8** %start, align 8
  %20 = load i64, i64* %len, align 8
  %call9 = call i64 @Perl_utf8n_to_uvuni(i8* %19, i64 %20, i64* %skip, i32 0)
  store i64 %call9, i64* %n, align 8
  br label %if.end

if.else:                                          ; preds = %while.body
  %21 = load i8*, i8** %start, align 8
  %22 = load i8, i8* %21, align 1
  %conv10 = zext i8 %22 to i64
  store i64 %conv10, i64* %n, align 8
  store i64 1, i64* %skip, align 8
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %23 = load i64, i64* %n, align 8
  %conv11 = uitofp i64 %23 to double
  %24 = load double, double* %nshift, align 8
  %div = fdiv double %conv11, %24
  %25 = load double, double* %retval1, align 8
  %add = fadd double %25, %div
  store double %add, double* %retval1, align 8
  %26 = load i64, i64* %skip, align 8
  %27 = load i8*, i8** %start, align 8
  %add.ptr12 = getelementptr inbounds i8, i8* %27, i64 %26
  store i8* %add.ptr12, i8** %start, align 8
  %28 = load double, double* %nshift, align 8
  %mul = fmul double %28, 1.000000e+03
  store double %mul, double* %nshift, align 8
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %29 = load double, double* %retval1, align 8
  ret double %29
}

declare i64 @Perl_utf8n_to_uvuni(i8*, i64, i64*, i32) #1

; Function Attrs: nounwind uwtable
define %struct.sv* @Perl_filter_add(i32 (i32, %struct.sv*, i32)* %funcp, %struct.sv* %datasv) #0 {
entry:
  %retval = alloca %struct.sv*, align 8
  %funcp.addr = alloca i32 (i32, %struct.sv*, i32)*, align 8
  %datasv.addr = alloca %struct.sv*, align 8
  store i32 (i32, %struct.sv*, i32)* %funcp, i32 (i32, %struct.sv*, i32)** %funcp.addr, align 8
  store %struct.sv* %datasv, %struct.sv** %datasv.addr, align 8
  %0 = load i32 (i32, %struct.sv*, i32)*, i32 (i32, %struct.sv*, i32)** %funcp.addr, align 8
  %tobool = icmp ne i32 (i32, %struct.sv*, i32)* %0, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct.sv* null, %struct.sv** %retval
  br label %return

if.end:                                           ; preds = %entry
  %1 = load %struct.av*, %struct.av** @PL_rsfp_filters, align 8
  %tobool1 = icmp ne %struct.av* %1, null
  br i1 %tobool1, label %if.end.3, label %if.then.2

if.then.2:                                        ; preds = %if.end
  %call = call %struct.av* @Perl_newAV()
  store %struct.av* %call, %struct.av** @PL_rsfp_filters, align 8
  br label %if.end.3

if.end.3:                                         ; preds = %if.then.2, %if.end
  %2 = load %struct.sv*, %struct.sv** %datasv.addr, align 8
  %tobool4 = icmp ne %struct.sv* %2, null
  br i1 %tobool4, label %if.end.7, label %if.then.5

if.then.5:                                        ; preds = %if.end.3
  %call6 = call %struct.sv* @Perl_newSV(i64 0)
  store %struct.sv* %call6, %struct.sv** %datasv.addr, align 8
  br label %if.end.7

if.end.7:                                         ; preds = %if.then.5, %if.end.3
  %3 = load %struct.sv*, %struct.sv** %datasv.addr, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %3, i32 0, i32 2
  %4 = load i32, i32* %sv_flags, align 4
  %and = and i32 %4, 255
  %cmp = icmp uge i32 %and, 15
  br i1 %cmp, label %if.end.12, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end.7
  %5 = load %struct.sv*, %struct.sv** %datasv.addr, align 8
  %call8 = call signext i8 @Perl_sv_upgrade(%struct.sv* %5, i32 15)
  %conv = sext i8 %call8 to i32
  %tobool9 = icmp ne i32 %conv, 0
  br i1 %tobool9, label %if.end.12, label %if.then.10

if.then.10:                                       ; preds = %lor.lhs.false
  %call11 = call %struct.op* (i8*, ...) @Perl_die(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2, i32 0, i32 0))
  br label %if.end.12

if.end.12:                                        ; preds = %if.then.10, %lor.lhs.false, %if.end.7
  %6 = load i32 (i32, %struct.sv*, i32)*, i32 (i32, %struct.sv*, i32)** %funcp.addr, align 8
  %7 = bitcast i32 (i32, %struct.sv*, i32)* %6 to i8*
  %8 = load %struct.sv*, %struct.sv** %datasv.addr, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %8, i32 0, i32 0
  %9 = load i8*, i8** %sv_any, align 8
  %10 = bitcast i8* %9 to %struct.xpvio*
  %xio_dirpu = getelementptr inbounds %struct.xpvio, %struct.xpvio* %10, i32 0, i32 9
  %xiou_any = bitcast %union.anon* %xio_dirpu to i8**
  store i8* %7, i8** %xiou_any, align 8
  %11 = load %struct.sv*, %struct.sv** %datasv.addr, align 8
  %sv_any13 = getelementptr inbounds %struct.sv, %struct.sv* %11, i32 0, i32 0
  %12 = load i8*, i8** %sv_any13, align 8
  %13 = bitcast i8* %12 to %struct.xpvio*
  %xio_flags = getelementptr inbounds %struct.xpvio, %struct.xpvio* %13, i32 0, i32 22
  %14 = load i8, i8* %xio_flags, align 1
  %conv14 = sext i8 %14 to i32
  %or = or i32 %conv14, 64
  %conv15 = trunc i32 %or to i8
  store i8 %conv15, i8* %xio_flags, align 1
  %15 = load %struct.av*, %struct.av** @PL_rsfp_filters, align 8
  call void @Perl_av_unshift(%struct.av* %15, i32 1)
  %16 = load %struct.av*, %struct.av** @PL_rsfp_filters, align 8
  %17 = load %struct.sv*, %struct.sv** %datasv.addr, align 8
  %call16 = call %struct.sv** @Perl_av_store(%struct.av* %16, i32 0, %struct.sv* %17)
  %18 = load %struct.sv*, %struct.sv** %datasv.addr, align 8
  store %struct.sv* %18, %struct.sv** %retval
  br label %return

return:                                           ; preds = %if.end.12, %if.then
  %19 = load %struct.sv*, %struct.sv** %retval
  ret %struct.sv* %19
}

declare %struct.av* @Perl_newAV() #1

declare %struct.sv* @Perl_newSV(i64) #1

declare signext i8 @Perl_sv_upgrade(%struct.sv*, i32) #1

declare %struct.op* @Perl_die(i8*, ...) #1

declare void @Perl_av_unshift(%struct.av*, i32) #1

declare %struct.sv** @Perl_av_store(%struct.av*, i32, %struct.sv*) #1

; Function Attrs: nounwind uwtable
define void @Perl_filter_del(i32 (i32, %struct.sv*, i32)* %funcp) #0 {
entry:
  %funcp.addr = alloca i32 (i32, %struct.sv*, i32)*, align 8
  %datasv = alloca %struct.sv*, align 8
  store i32 (i32, %struct.sv*, i32)* %funcp, i32 (i32, %struct.sv*, i32)** %funcp.addr, align 8
  %0 = load %struct.av*, %struct.av** @PL_rsfp_filters, align 8
  %tobool = icmp ne %struct.av* %0, null
  br i1 %tobool, label %lor.lhs.false, label %if.then

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.av*, %struct.av** @PL_rsfp_filters, align 8
  %sv_any = getelementptr inbounds %struct.av, %struct.av* %1, i32 0, i32 0
  %2 = load %struct.xpvav*, %struct.xpvav** %sv_any, align 8
  %xav_fill = getelementptr inbounds %struct.xpvav, %struct.xpvav* %2, i32 0, i32 1
  %3 = load i64, i64* %xav_fill, align 8
  %cmp = icmp slt i64 %3, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %4 = load %struct.av*, %struct.av** @PL_rsfp_filters, align 8
  %sv_any1 = getelementptr inbounds %struct.av, %struct.av* %4, i32 0, i32 0
  %5 = load %struct.xpvav*, %struct.xpvav** %sv_any1, align 8
  %xav_fill2 = getelementptr inbounds %struct.xpvav, %struct.xpvav* %5, i32 0, i32 1
  %6 = load i64, i64* %xav_fill2, align 8
  %7 = load %struct.av*, %struct.av** @PL_rsfp_filters, align 8
  %sv_any3 = getelementptr inbounds %struct.av, %struct.av* %7, i32 0, i32 0
  %8 = load %struct.xpvav*, %struct.xpvav** %sv_any3, align 8
  %xav_array = getelementptr inbounds %struct.xpvav, %struct.xpvav* %8, i32 0, i32 0
  %9 = load i8*, i8** %xav_array, align 8
  %10 = bitcast i8* %9 to %struct.sv**
  %arrayidx = getelementptr inbounds %struct.sv*, %struct.sv** %10, i64 %6
  %11 = load %struct.sv*, %struct.sv** %arrayidx, align 8
  store %struct.sv* %11, %struct.sv** %datasv, align 8
  %12 = load %struct.sv*, %struct.sv** %datasv, align 8
  %sv_any4 = getelementptr inbounds %struct.sv, %struct.sv* %12, i32 0, i32 0
  %13 = load i8*, i8** %sv_any4, align 8
  %14 = bitcast i8* %13 to %struct.xpvio*
  %xio_dirpu = getelementptr inbounds %struct.xpvio, %struct.xpvio* %14, i32 0, i32 9
  %xiou_any = bitcast %union.anon* %xio_dirpu to i8**
  %15 = load i8*, i8** %xiou_any, align 8
  %16 = load i32 (i32, %struct.sv*, i32)*, i32 (i32, %struct.sv*, i32)** %funcp.addr, align 8
  %17 = bitcast i32 (i32, %struct.sv*, i32)* %16 to i8*
  %cmp5 = icmp eq i8* %15, %17
  br i1 %cmp5, label %if.then.6, label %if.end.12

if.then.6:                                        ; preds = %if.end
  %18 = load %struct.sv*, %struct.sv** %datasv, align 8
  %sv_any7 = getelementptr inbounds %struct.sv, %struct.sv* %18, i32 0, i32 0
  %19 = load i8*, i8** %sv_any7, align 8
  %20 = bitcast i8* %19 to %struct.xpvio*
  %xio_flags = getelementptr inbounds %struct.xpvio, %struct.xpvio* %20, i32 0, i32 22
  %21 = load i8, i8* %xio_flags, align 1
  %conv = sext i8 %21 to i32
  %and = and i32 %conv, -65
  %conv8 = trunc i32 %and to i8
  store i8 %conv8, i8* %xio_flags, align 1
  %22 = load %struct.sv*, %struct.sv** %datasv, align 8
  %sv_any9 = getelementptr inbounds %struct.sv, %struct.sv* %22, i32 0, i32 0
  %23 = load i8*, i8** %sv_any9, align 8
  %24 = bitcast i8* %23 to %struct.xpvio*
  %xio_dirpu10 = getelementptr inbounds %struct.xpvio, %struct.xpvio* %24, i32 0, i32 9
  %xiou_any11 = bitcast %union.anon* %xio_dirpu10 to i8**
  store i8* null, i8** %xiou_any11, align 8
  %25 = load %struct.av*, %struct.av** @PL_rsfp_filters, align 8
  %call = call %struct.sv* @Perl_av_pop(%struct.av* %25)
  call void @Perl_sv_free(%struct.sv* %call)
  br label %return

if.end.12:                                        ; preds = %if.end
  %call13 = call %struct.op* (i8*, ...) @Perl_die(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.3, i32 0, i32 0))
  br label %return

return:                                           ; preds = %if.end.12, %if.then.6, %if.then
  ret void
}

declare void @Perl_sv_free(%struct.sv*) #1

declare %struct.sv* @Perl_av_pop(%struct.av*) #1

; Function Attrs: nounwind uwtable
define i32 @Perl_filter_read(i32 %idx, %struct.sv* %buf_sv, i32 %maxlen) #0 {
entry:
  %retval = alloca i32, align 4
  %idx.addr = alloca i32, align 4
  %buf_sv.addr = alloca %struct.sv*, align 8
  %maxlen.addr = alloca i32, align 4
  %funcp = alloca i32 (i32, %struct.sv*, i32)*, align 8
  %datasv = alloca %struct.sv*, align 8
  %len = alloca i32, align 4
  %old_len = alloca i32, align 4
  %tmp = alloca i64, align 8
  store i32 %idx, i32* %idx.addr, align 4
  store %struct.sv* %buf_sv, %struct.sv** %buf_sv.addr, align 8
  store i32 %maxlen, i32* %maxlen.addr, align 4
  store %struct.sv* null, %struct.sv** %datasv, align 8
  %0 = load %struct.av*, %struct.av** @PL_rsfp_filters, align 8
  %tobool = icmp ne %struct.av* %0, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %idx.addr, align 4
  %conv = sext i32 %1 to i64
  %2 = load %struct.av*, %struct.av** @PL_rsfp_filters, align 8
  %sv_any = getelementptr inbounds %struct.av, %struct.av* %2, i32 0, i32 0
  %3 = load %struct.xpvav*, %struct.xpvav** %sv_any, align 8
  %xav_fill = getelementptr inbounds %struct.xpvav, %struct.xpvav* %3, i32 0, i32 1
  %4 = load i64, i64* %xav_fill, align 8
  %cmp = icmp sgt i64 %conv, %4
  br i1 %cmp, label %if.then.2, label %if.end.47

if.then.2:                                        ; preds = %if.end
  %5 = load i32, i32* %maxlen.addr, align 4
  %tobool3 = icmp ne i32 %5, 0
  br i1 %tobool3, label %if.then.4, label %if.else.30

if.then.4:                                        ; preds = %if.then.2
  %6 = load %struct.sv*, %struct.sv** %buf_sv.addr, align 8
  %sv_any5 = getelementptr inbounds %struct.sv, %struct.sv* %6, i32 0, i32 0
  %7 = load i8*, i8** %sv_any5, align 8
  %8 = bitcast i8* %7 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %8, i32 0, i32 1
  %9 = load i64, i64* %xpv_cur, align 8
  %conv6 = trunc i64 %9 to i32
  store i32 %conv6, i32* %old_len, align 4
  %10 = load %struct.sv*, %struct.sv** %buf_sv.addr, align 8
  %sv_any7 = getelementptr inbounds %struct.sv, %struct.sv* %10, i32 0, i32 0
  %11 = load i8*, i8** %sv_any7, align 8
  %12 = bitcast i8* %11 to %struct.xpv*
  %xpv_len = getelementptr inbounds %struct.xpv, %struct.xpv* %12, i32 0, i32 2
  %13 = load i64, i64* %xpv_len, align 8
  %14 = load i32, i32* %old_len, align 4
  %15 = load i32, i32* %maxlen.addr, align 4
  %add = add nsw i32 %14, %15
  %conv8 = sext i32 %add to i64
  %cmp9 = icmp ult i64 %13, %conv8
  br i1 %cmp9, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then.4
  %16 = load %struct.sv*, %struct.sv** %buf_sv.addr, align 8
  %17 = load i32, i32* %old_len, align 4
  %18 = load i32, i32* %maxlen.addr, align 4
  %add11 = add nsw i32 %17, %18
  %conv12 = sext i32 %add11 to i64
  %call = call i8* @Perl_sv_grow(%struct.sv* %16, i64 %conv12)
  br label %cond.end

cond.false:                                       ; preds = %if.then.4
  %19 = load %struct.sv*, %struct.sv** %buf_sv.addr, align 8
  %sv_any13 = getelementptr inbounds %struct.sv, %struct.sv* %19, i32 0, i32 0
  %20 = load i8*, i8** %sv_any13, align 8
  %21 = bitcast i8* %20 to %struct.xpv*
  %xpv_pv = getelementptr inbounds %struct.xpv, %struct.xpv* %21, i32 0, i32 0
  %22 = load i8*, i8** %xpv_pv, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call, %cond.true ], [ %22, %cond.false ]
  %23 = load volatile %struct._PerlIO**, %struct._PerlIO*** @PL_rsfp, align 8
  %24 = load %struct.sv*, %struct.sv** %buf_sv.addr, align 8
  %sv_any14 = getelementptr inbounds %struct.sv, %struct.sv* %24, i32 0, i32 0
  %25 = load i8*, i8** %sv_any14, align 8
  %26 = bitcast i8* %25 to %struct.xpv*
  %xpv_pv15 = getelementptr inbounds %struct.xpv, %struct.xpv* %26, i32 0, i32 0
  %27 = load i8*, i8** %xpv_pv15, align 8
  %28 = load i32, i32* %old_len, align 4
  %idx.ext = sext i32 %28 to i64
  %add.ptr = getelementptr inbounds i8, i8* %27, i64 %idx.ext
  %29 = load i32, i32* %maxlen.addr, align 4
  %conv16 = sext i32 %29 to i64
  %call17 = call i64 @Perl_PerlIO_read(%struct._PerlIO** %23, i8* %add.ptr, i64 %conv16)
  %conv18 = trunc i64 %call17 to i32
  store i32 %conv18, i32* %len, align 4
  %cmp19 = icmp sle i32 %conv18, 0
  br i1 %cmp19, label %if.then.21, label %if.end.25

if.then.21:                                       ; preds = %cond.end
  %30 = load volatile %struct._PerlIO**, %struct._PerlIO*** @PL_rsfp, align 8
  %call22 = call i32 @Perl_PerlIO_error(%struct._PerlIO** %30)
  %tobool23 = icmp ne i32 %call22, 0
  br i1 %tobool23, label %if.then.24, label %if.else

if.then.24:                                       ; preds = %if.then.21
  store i32 -1, i32* %retval
  br label %return

if.else:                                          ; preds = %if.then.21
  store i32 0, i32* %retval
  br label %return

if.end.25:                                        ; preds = %cond.end
  %31 = load i32, i32* %old_len, align 4
  %32 = load i32, i32* %len, align 4
  %add26 = add nsw i32 %31, %32
  %conv27 = sext i32 %add26 to i64
  %33 = load %struct.sv*, %struct.sv** %buf_sv.addr, align 8
  %sv_any28 = getelementptr inbounds %struct.sv, %struct.sv* %33, i32 0, i32 0
  %34 = load i8*, i8** %sv_any28, align 8
  %35 = bitcast i8* %34 to %struct.xpv*
  %xpv_cur29 = getelementptr inbounds %struct.xpv, %struct.xpv* %35, i32 0, i32 1
  store i64 %conv27, i64* %xpv_cur29, align 8
  store i64 %conv27, i64* %tmp
  %36 = load i64, i64* %tmp
  br label %if.end.43

if.else.30:                                       ; preds = %if.then.2
  %37 = load %struct.sv*, %struct.sv** %buf_sv.addr, align 8
  %38 = load volatile %struct._PerlIO**, %struct._PerlIO*** @PL_rsfp, align 8
  %39 = load %struct.sv*, %struct.sv** %buf_sv.addr, align 8
  %sv_any31 = getelementptr inbounds %struct.sv, %struct.sv* %39, i32 0, i32 0
  %40 = load i8*, i8** %sv_any31, align 8
  %41 = bitcast i8* %40 to %struct.xpv*
  %xpv_cur32 = getelementptr inbounds %struct.xpv, %struct.xpv* %41, i32 0, i32 1
  %42 = load i64, i64* %xpv_cur32, align 8
  %conv33 = trunc i64 %42 to i32
  %call34 = call i8* @Perl_sv_gets(%struct.sv* %37, %struct._PerlIO** %38, i32 %conv33)
  %cmp35 = icmp eq i8* %call34, null
  br i1 %cmp35, label %if.then.37, label %if.end.42

if.then.37:                                       ; preds = %if.else.30
  %43 = load volatile %struct._PerlIO**, %struct._PerlIO*** @PL_rsfp, align 8
  %call38 = call i32 @Perl_PerlIO_error(%struct._PerlIO** %43)
  %tobool39 = icmp ne i32 %call38, 0
  br i1 %tobool39, label %if.then.40, label %if.else.41

if.then.40:                                       ; preds = %if.then.37
  store i32 -1, i32* %retval
  br label %return

if.else.41:                                       ; preds = %if.then.37
  store i32 0, i32* %retval
  br label %return

if.end.42:                                        ; preds = %if.else.30
  br label %if.end.43

if.end.43:                                        ; preds = %if.end.42, %if.end.25
  %44 = load %struct.sv*, %struct.sv** %buf_sv.addr, align 8
  %sv_any44 = getelementptr inbounds %struct.sv, %struct.sv* %44, i32 0, i32 0
  %45 = load i8*, i8** %sv_any44, align 8
  %46 = bitcast i8* %45 to %struct.xpv*
  %xpv_cur45 = getelementptr inbounds %struct.xpv, %struct.xpv* %46, i32 0, i32 1
  %47 = load i64, i64* %xpv_cur45, align 8
  %conv46 = trunc i64 %47 to i32
  store i32 %conv46, i32* %retval
  br label %return

if.end.47:                                        ; preds = %if.end
  %48 = load i32, i32* %idx.addr, align 4
  %idxprom = sext i32 %48 to i64
  %49 = load %struct.av*, %struct.av** @PL_rsfp_filters, align 8
  %sv_any48 = getelementptr inbounds %struct.av, %struct.av* %49, i32 0, i32 0
  %50 = load %struct.xpvav*, %struct.xpvav** %sv_any48, align 8
  %xav_array = getelementptr inbounds %struct.xpvav, %struct.xpvav* %50, i32 0, i32 0
  %51 = load i8*, i8** %xav_array, align 8
  %52 = bitcast i8* %51 to %struct.sv**
  %arrayidx = getelementptr inbounds %struct.sv*, %struct.sv** %52, i64 %idxprom
  %53 = load %struct.sv*, %struct.sv** %arrayidx, align 8
  store %struct.sv* %53, %struct.sv** %datasv, align 8
  %cmp49 = icmp eq %struct.sv* %53, @PL_sv_undef
  br i1 %cmp49, label %if.then.51, label %if.end.54

if.then.51:                                       ; preds = %if.end.47
  %54 = load i32, i32* %idx.addr, align 4
  %add52 = add nsw i32 %54, 1
  %55 = load %struct.sv*, %struct.sv** %buf_sv.addr, align 8
  %56 = load i32, i32* %maxlen.addr, align 4
  %call53 = call i32 @Perl_filter_read(i32 %add52, %struct.sv* %55, i32 %56)
  store i32 %call53, i32* %retval
  br label %return

if.end.54:                                        ; preds = %if.end.47
  %57 = load %struct.sv*, %struct.sv** %datasv, align 8
  %sv_any55 = getelementptr inbounds %struct.sv, %struct.sv* %57, i32 0, i32 0
  %58 = load i8*, i8** %sv_any55, align 8
  %59 = bitcast i8* %58 to %struct.xpvio*
  %xio_dirpu = getelementptr inbounds %struct.xpvio, %struct.xpvio* %59, i32 0, i32 9
  %xiou_any = bitcast %union.anon* %xio_dirpu to i8**
  %60 = load i8*, i8** %xiou_any, align 8
  %61 = bitcast i8* %60 to i32 (i32, %struct.sv*, i32)*
  store i32 (i32, %struct.sv*, i32)* %61, i32 (i32, %struct.sv*, i32)** %funcp, align 8
  %62 = load i32 (i32, %struct.sv*, i32)*, i32 (i32, %struct.sv*, i32)** %funcp, align 8
  %63 = load i32, i32* %idx.addr, align 4
  %64 = load %struct.sv*, %struct.sv** %buf_sv.addr, align 8
  %65 = load i32, i32* %maxlen.addr, align 4
  %call56 = call i32 %62(i32 %63, %struct.sv* %64, i32 %65)
  store i32 %call56, i32* %retval
  br label %return

return:                                           ; preds = %if.end.54, %if.then.51, %if.end.43, %if.else.41, %if.then.40, %if.else, %if.then.24, %if.then
  %66 = load i32, i32* %retval
  ret i32 %66
}

declare i8* @Perl_sv_grow(%struct.sv*, i64) #1

declare i64 @Perl_PerlIO_read(%struct._PerlIO**, i8*, i64) #1

declare i32 @Perl_PerlIO_error(%struct._PerlIO**) #1

declare i8* @Perl_sv_gets(%struct.sv*, %struct._PerlIO**, i32) #1

; Function Attrs: nounwind uwtable
define i32 @Perl_yylex() #0 {
entry:
  %retval = alloca i32, align 4
  %s = alloca i8*, align 8
  %d = alloca i8*, align 8
  %tmp = alloca i32, align 4
  %len = alloca i64, align 8
  %gv = alloca %struct.gv*, align 8
  %gvp = alloca %struct.gv**, align 8
  %bof = alloca i8, align 1
  %orig_keyword = alloca i32, align 4
  %oldmod = alloca i8, align 1
  %sv = alloca %struct.sv*, align 8
  %tmpsv = alloca %struct.sv*, align 8
  %sv400 = alloca %struct.sv*, align 8
  %sv534 = alloca %struct.sv*, align 8
  %ipath = alloca i8*, align 8
  %ipathend = alloca i8*, align 8
  %newargv = alloca i8**, align 8
  %oldpdb = alloca i32, align 4
  %oldn = alloca i8, align 1
  %oldp = alloca i8, align 1
  %switches_done = alloca i8, align 1
  %m = alloca i8*, align 8
  %argc = alloca i32, align 4
  %argv = alloca i8**, align 8
  %argc951 = alloca i32, align 4
  %argv953 = alloca i8**, align 8
  %ftst = alloca i32, align 4
  %attrs = alloca %struct.op*, align 8
  %sv1540 = alloca %struct.sv*, align 8
  %q = alloca i8, align 1
  %minus = alloca i8, align 1
  %t = alloca i8*, align 8
  %tmps = alloca i8*, align 8
  %open = alloca i8, align 1
  %close = alloca i8, align 1
  %term = alloca i8, align 1
  %brackets = alloca i32, align 4
  %t2818 = alloca i8*, align 8
  %t3072 = alloca i8*, align 8
  %tmpbuf = alloca [256 x i8], align 16
  %len3259 = alloca i64, align 8
  %islop = alloca i8, align 1
  %tmpbuf3537 = alloca [256 x i8], align 16
  %t3731 = alloca i8*, align 8
  %start = alloca i8*, align 8
  %c = alloca i8, align 1
  %gv4250 = alloca %struct.gv*, align 8
  %ogv = alloca %struct.gv*, align 8
  %hgv = alloca %struct.gv*, align 8
  %cv = alloca %struct.cv*, align 8
  %sv4650 = alloca %struct.sv*, align 8
  %pkgname = alloca i32, align 4
  %lastchar = alloca i8, align 1
  %morelen = alloca i64, align 8
  %immediate_paren = alloca i8, align 1
  %cv5131 = alloca %struct.cv*, align 8
  %len5184 = alloca i64, align 8
  %proto = alloca i8*, align 8
  %gv5414 = alloca %struct.gv*, align 8
  %pname = alloca i8*, align 8
  %fd = alloca i32, align 4
  %name = alloca %struct.sv*, align 8
  %sp = alloca %struct.sv**, align 8
  %tmp5534 = alloca i32, align 4
  %tmp5557 = alloca %struct.sv*, align 8
  %p = alloca i8*, align 8
  %tmpbuf6497 = alloca [1024 x i8], align 16
  %t6579 = alloca i8*, align 8
  %words = alloca %struct.op*, align 8
  %warned = alloca i32, align 4
  %sv6849 = alloca %struct.sv*, align 8
  %b = alloca i8*, align 8
  %tmpbuf7519 = alloca [256 x i8], align 16
  %tboffset = alloca i64, align 8
  %attrful = alloca i32, align 4
  %have_name = alloca i8, align 1
  %have_proto = alloca i8, align 1
  %bad_proto = alloca i8, align 1
  %key = alloca i32, align 4
  %p7630 = alloca i8*, align 8
  store %struct.gv* null, %struct.gv** %gv, align 8
  store %struct.gv** null, %struct.gv*** %gvp, align 8
  store i8 0, i8* %bof, align 1
  store i32 0, i32* %orig_keyword, align 4
  %0 = load i8, i8* @PL_pending_ident, align 1
  %tobool = icmp ne i8 %0, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = call i32 @S_pending_ident()
  store i32 %call, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %1 = load i32, i32* @PL_lex_state, align 4
  switch i32 %1, label %sw.epilog [
    i32 0, label %sw.bb
    i32 8, label %sw.bb.11
    i32 7, label %sw.bb.153
    i32 6, label %sw.bb.155
    i32 4, label %sw.bb.185
    i32 5, label %sw.bb.190
    i32 3, label %sw.bb.207
    i32 1, label %sw.bb.251
  ]

sw.bb:                                            ; preds = %if.end
  %2 = load i32, i32* @PL_nexttoke, align 4
  %dec = add nsw i32 %2, -1
  store i32 %dec, i32* @PL_nexttoke, align 4
  %3 = load i32, i32* @PL_nexttoke, align 4
  %idxprom = sext i32 %3 to i64
  %arrayidx = getelementptr inbounds [5 x %union.YYSTYPE], [5 x %union.YYSTYPE]* @PL_nextval, i32 0, i64 %idxprom
  %4 = bitcast %union.YYSTYPE* %arrayidx to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast (%union.YYSTYPE* @PL_yylval to i8*), i8* %4, i64 8, i32 8, i1 false)
  %5 = load i32, i32* @PL_nexttoke, align 4
  %tobool6 = icmp ne i32 %5, 0
  br i1 %tobool6, label %if.end.8, label %if.then.7

if.then.7:                                        ; preds = %sw.bb
  %6 = load i32, i32* @PL_lex_defer, align 4
  store i32 %6, i32* @PL_lex_state, align 4
  %7 = load i32, i32* @PL_lex_expect, align 4
  store i32 %7, i32* @PL_expect, align 4
  store i32 10, i32* @PL_lex_defer, align 4
  br label %if.end.8

if.end.8:                                         ; preds = %if.then.7, %sw.bb
  %8 = load i32, i32* @PL_nexttoke, align 4
  %idxprom9 = sext i32 %8 to i64
  %arrayidx10 = getelementptr inbounds [5 x i32], [5 x i32]* @PL_nexttype, i32 0, i64 %idxprom9
  %9 = load i32, i32* %arrayidx10, align 4
  store i32 %9, i32* %retval
  br label %return

sw.bb.11:                                         ; preds = %if.end
  %10 = load i8*, i8** @PL_bufptr, align 8
  %11 = load i8*, i8** @PL_bufend, align 8
  %cmp = icmp eq i8* %10, %11
  br i1 %cmp, label %if.then.15, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %sw.bb.11
  %12 = load i8*, i8** @PL_bufptr, align 8
  %arrayidx12 = getelementptr inbounds i8, i8* %12, i64 1
  %13 = load i8, i8* %arrayidx12, align 1
  %conv = sext i8 %13 to i32
  %cmp13 = icmp eq i32 %conv, 69
  br i1 %cmp13, label %if.then.15, label %if.else

if.then.15:                                       ; preds = %lor.lhs.false, %sw.bb.11
  %14 = load i32, i32* @PL_lex_casemods, align 4
  %tobool17 = icmp ne i32 %14, 0
  br i1 %tobool17, label %if.then.18, label %if.end.39

if.then.18:                                       ; preds = %if.then.15
  %15 = load i32, i32* @PL_lex_casemods, align 4
  %dec19 = add nsw i32 %15, -1
  store i32 %dec19, i32* @PL_lex_casemods, align 4
  %idxprom20 = sext i32 %dec19 to i64
  %16 = load i8*, i8** @PL_lex_casestack, align 8
  %arrayidx21 = getelementptr inbounds i8, i8* %16, i64 %idxprom20
  %17 = load i8, i8* %arrayidx21, align 1
  store i8 %17, i8* %oldmod, align 1
  %18 = load i32, i32* @PL_lex_casemods, align 4
  %idxprom22 = sext i32 %18 to i64
  %19 = load i8*, i8** @PL_lex_casestack, align 8
  %arrayidx23 = getelementptr inbounds i8, i8* %19, i64 %idxprom22
  store i8 0, i8* %arrayidx23, align 1
  %20 = load i8*, i8** @PL_bufptr, align 8
  %21 = load i8*, i8** @PL_bufend, align 8
  %cmp24 = icmp ne i8* %20, %21
  br i1 %cmp24, label %land.lhs.true, label %if.end.38

land.lhs.true:                                    ; preds = %if.then.18
  %22 = load i8, i8* %oldmod, align 1
  %conv26 = sext i8 %22 to i32
  %cmp27 = icmp eq i32 %conv26, 76
  br i1 %cmp27, label %if.then.37, label %lor.lhs.false.29

lor.lhs.false.29:                                 ; preds = %land.lhs.true
  %23 = load i8, i8* %oldmod, align 1
  %conv30 = sext i8 %23 to i32
  %cmp31 = icmp eq i32 %conv30, 85
  br i1 %cmp31, label %if.then.37, label %lor.lhs.false.33

lor.lhs.false.33:                                 ; preds = %lor.lhs.false.29
  %24 = load i8, i8* %oldmod, align 1
  %conv34 = sext i8 %24 to i32
  %cmp35 = icmp eq i32 %conv34, 81
  br i1 %cmp35, label %if.then.37, label %if.end.38

if.then.37:                                       ; preds = %lor.lhs.false.33, %lor.lhs.false.29, %land.lhs.true
  %25 = load i8*, i8** @PL_bufptr, align 8
  %add.ptr = getelementptr inbounds i8, i8* %25, i64 2
  store i8* %add.ptr, i8** @PL_bufptr, align 8
  store i32 3, i32* @PL_lex_state, align 4
  br label %if.end.38

if.end.38:                                        ; preds = %if.then.37, %lor.lhs.false.33, %if.then.18
  store i32 41, i32* %retval
  br label %return

if.end.39:                                        ; preds = %if.then.15
  %26 = load i8*, i8** @PL_bufptr, align 8
  %27 = load i8*, i8** @PL_bufend, align 8
  %cmp40 = icmp ne i8* %26, %27
  br i1 %cmp40, label %if.then.42, label %if.end.44

if.then.42:                                       ; preds = %if.end.39
  %28 = load i8*, i8** @PL_bufptr, align 8
  %add.ptr43 = getelementptr inbounds i8, i8* %28, i64 2
  store i8* %add.ptr43, i8** @PL_bufptr, align 8
  br label %if.end.44

if.end.44:                                        ; preds = %if.then.42, %if.end.39
  store i32 3, i32* @PL_lex_state, align 4
  %call45 = call i32 @Perl_yylex()
  store i32 %call45, i32* %retval
  br label %return

if.else:                                          ; preds = %lor.lhs.false
  %29 = load i8*, i8** @PL_bufptr, align 8
  %add.ptr46 = getelementptr inbounds i8, i8* %29, i64 1
  store i8* %add.ptr46, i8** %s, align 8
  %30 = load i8*, i8** %s, align 8
  %arrayidx47 = getelementptr inbounds i8, i8* %30, i64 1
  %31 = load i8, i8* %arrayidx47, align 1
  %conv48 = sext i8 %31 to i32
  %cmp49 = icmp eq i32 %conv48, 92
  br i1 %cmp49, label %land.lhs.true.51, label %if.else.59

land.lhs.true.51:                                 ; preds = %if.else
  %32 = load i8*, i8** %s, align 8
  %arrayidx52 = getelementptr inbounds i8, i8* %32, i64 2
  %33 = load i8, i8* %arrayidx52, align 1
  %conv53 = sext i8 %33 to i32
  %cmp54 = icmp eq i32 %conv53, 69
  br i1 %cmp54, label %if.then.56, label %if.else.59

if.then.56:                                       ; preds = %land.lhs.true.51
  %34 = load i8*, i8** %s, align 8
  %add.ptr57 = getelementptr inbounds i8, i8* %34, i64 3
  store i8* %add.ptr57, i8** @PL_bufptr, align 8
  store i32 3, i32* @PL_lex_state, align 4
  %call58 = call i32 @Perl_yylex()
  store i32 %call58, i32* %retval
  br label %return

if.else.59:                                       ; preds = %land.lhs.true.51, %if.else
  %35 = load i8*, i8** %s, align 8
  %call60 = call i32 @strncmp(i8* %35, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i32 0, i32 0), i64 3)
  %tobool61 = icmp ne i32 %call60, 0
  br i1 %tobool61, label %lor.lhs.false.62, label %if.then.65

lor.lhs.false.62:                                 ; preds = %if.else.59
  %36 = load i8*, i8** %s, align 8
  %call63 = call i32 @strncmp(i8* %36, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i32 0, i32 0), i64 3)
  %tobool64 = icmp ne i32 %call63, 0
  br i1 %tobool64, label %if.end.70, label %if.then.65

if.then.65:                                       ; preds = %lor.lhs.false.62, %if.else.59
  %37 = load i8*, i8** %s, align 8
  %38 = load i8, i8* %37, align 1
  %conv66 = sext i8 %38 to i32
  store i32 %conv66, i32* %tmp, align 4
  %39 = load i8*, i8** %s, align 8
  %arrayidx67 = getelementptr inbounds i8, i8* %39, i64 2
  %40 = load i8, i8* %arrayidx67, align 1
  %41 = load i8*, i8** %s, align 8
  store i8 %40, i8* %41, align 1
  %42 = load i32, i32* %tmp, align 4
  %conv68 = trunc i32 %42 to i8
  %43 = load i8*, i8** %s, align 8
  %arrayidx69 = getelementptr inbounds i8, i8* %43, i64 2
  store i8 %conv68, i8* %arrayidx69, align 1
  br label %if.end.70

if.end.70:                                        ; preds = %if.then.65, %lor.lhs.false.62
  %44 = load i8*, i8** %s, align 8
  %45 = load i8, i8* %44, align 1
  %conv71 = sext i8 %45 to i32
  %cmp72 = icmp eq i32 %conv71, 76
  br i1 %cmp72, label %land.lhs.true.78, label %lor.lhs.false.74

lor.lhs.false.74:                                 ; preds = %if.end.70
  %46 = load i8*, i8** %s, align 8
  %47 = load i8, i8* %46, align 1
  %conv75 = sext i8 %47 to i32
  %cmp76 = icmp eq i32 %conv75, 85
  br i1 %cmp76, label %land.lhs.true.78, label %if.end.88

land.lhs.true.78:                                 ; preds = %lor.lhs.false.74, %if.end.70
  %48 = load i8*, i8** @PL_lex_casestack, align 8
  %call79 = call i8* @strchr(i8* %48, i32 76)
  %tobool80 = icmp ne i8* %call79, null
  br i1 %tobool80, label %if.then.84, label %lor.lhs.false.81

lor.lhs.false.81:                                 ; preds = %land.lhs.true.78
  %49 = load i8*, i8** @PL_lex_casestack, align 8
  %call82 = call i8* @strchr(i8* %49, i32 85)
  %tobool83 = icmp ne i8* %call82, null
  br i1 %tobool83, label %if.then.84, label %if.end.88

if.then.84:                                       ; preds = %lor.lhs.false.81, %land.lhs.true.78
  %50 = load i32, i32* @PL_lex_casemods, align 4
  %dec85 = add nsw i32 %50, -1
  store i32 %dec85, i32* @PL_lex_casemods, align 4
  %idxprom86 = sext i32 %dec85 to i64
  %51 = load i8*, i8** @PL_lex_casestack, align 8
  %arrayidx87 = getelementptr inbounds i8, i8* %51, i64 %idxprom86
  store i8 0, i8* %arrayidx87, align 1
  store i32 41, i32* %retval
  br label %return

if.end.88:                                        ; preds = %lor.lhs.false.81, %lor.lhs.false.74
  %52 = load i32, i32* @PL_lex_casemods, align 4
  %cmp89 = icmp sgt i32 %52, 10
  br i1 %cmp89, label %if.then.91, label %if.end.94

if.then.91:                                       ; preds = %if.end.88
  %53 = load i8*, i8** @PL_lex_casestack, align 8
  %54 = load i32, i32* @PL_lex_casemods, align 4
  %add = add nsw i32 %54, 2
  %conv92 = sext i32 %add to i64
  %mul = mul i64 %conv92, 1
  %call93 = call i8* @Perl_safesysrealloc(i8* %53, i64 %mul)
  store i8* %call93, i8** @PL_lex_casestack, align 8
  br label %if.end.94

if.end.94:                                        ; preds = %if.then.91, %if.end.88
  %55 = load i8*, i8** %s, align 8
  %56 = load i8, i8* %55, align 1
  %57 = load i32, i32* @PL_lex_casemods, align 4
  %inc = add nsw i32 %57, 1
  store i32 %inc, i32* @PL_lex_casemods, align 4
  %idxprom95 = sext i32 %57 to i64
  %58 = load i8*, i8** @PL_lex_casestack, align 8
  %arrayidx96 = getelementptr inbounds i8, i8* %58, i64 %idxprom95
  store i8 %56, i8* %arrayidx96, align 1
  %59 = load i32, i32* @PL_lex_casemods, align 4
  %idxprom97 = sext i32 %59 to i64
  %60 = load i8*, i8** @PL_lex_casestack, align 8
  %arrayidx98 = getelementptr inbounds i8, i8* %60, i64 %idxprom97
  store i8 0, i8* %arrayidx98, align 1
  store i32 3, i32* @PL_lex_state, align 4
  %61 = load i32, i32* @PL_nexttoke, align 4
  %idxprom99 = sext i32 %61 to i64
  %arrayidx100 = getelementptr inbounds [5 x %union.YYSTYPE], [5 x %union.YYSTYPE]* @PL_nextval, i32 0, i64 %idxprom99
  %ival = bitcast %union.YYSTYPE* %arrayidx100 to i32*
  store i32 0, i32* %ival, align 4
  call void @S_force_next(i32 40)
  %62 = load i8*, i8** %s, align 8
  %63 = load i8, i8* %62, align 1
  %conv101 = sext i8 %63 to i32
  %cmp102 = icmp eq i32 %conv101, 108
  br i1 %cmp102, label %if.then.104, label %if.else.108

if.then.104:                                      ; preds = %if.end.94
  %64 = load i32, i32* @PL_nexttoke, align 4
  %idxprom105 = sext i32 %64 to i64
  %arrayidx106 = getelementptr inbounds [5 x %union.YYSTYPE], [5 x %union.YYSTYPE]* @PL_nextval, i32 0, i64 %idxprom105
  %ival107 = bitcast %union.YYSTYPE* %arrayidx106 to i32*
  store i32 121, i32* %ival107, align 4
  br label %if.end.145

if.else.108:                                      ; preds = %if.end.94
  %65 = load i8*, i8** %s, align 8
  %66 = load i8, i8* %65, align 1
  %conv109 = sext i8 %66 to i32
  %cmp110 = icmp eq i32 %conv109, 117
  br i1 %cmp110, label %if.then.112, label %if.else.116

if.then.112:                                      ; preds = %if.else.108
  %67 = load i32, i32* @PL_nexttoke, align 4
  %idxprom113 = sext i32 %67 to i64
  %arrayidx114 = getelementptr inbounds [5 x %union.YYSTYPE], [5 x %union.YYSTYPE]* @PL_nextval, i32 0, i64 %idxprom113
  %ival115 = bitcast %union.YYSTYPE* %arrayidx114 to i32*
  store i32 120, i32* %ival115, align 4
  br label %if.end.144

if.else.116:                                      ; preds = %if.else.108
  %68 = load i8*, i8** %s, align 8
  %69 = load i8, i8* %68, align 1
  %conv117 = sext i8 %69 to i32
  %cmp118 = icmp eq i32 %conv117, 76
  br i1 %cmp118, label %if.then.120, label %if.else.124

if.then.120:                                      ; preds = %if.else.116
  %70 = load i32, i32* @PL_nexttoke, align 4
  %idxprom121 = sext i32 %70 to i64
  %arrayidx122 = getelementptr inbounds [5 x %union.YYSTYPE], [5 x %union.YYSTYPE]* @PL_nextval, i32 0, i64 %idxprom121
  %ival123 = bitcast %union.YYSTYPE* %arrayidx122 to i32*
  store i32 123, i32* %ival123, align 4
  br label %if.end.143

if.else.124:                                      ; preds = %if.else.116
  %71 = load i8*, i8** %s, align 8
  %72 = load i8, i8* %71, align 1
  %conv125 = sext i8 %72 to i32
  %cmp126 = icmp eq i32 %conv125, 85
  br i1 %cmp126, label %if.then.128, label %if.else.132

if.then.128:                                      ; preds = %if.else.124
  %73 = load i32, i32* @PL_nexttoke, align 4
  %idxprom129 = sext i32 %73 to i64
  %arrayidx130 = getelementptr inbounds [5 x %union.YYSTYPE], [5 x %union.YYSTYPE]* @PL_nextval, i32 0, i64 %idxprom129
  %ival131 = bitcast %union.YYSTYPE* %arrayidx130 to i32*
  store i32 122, i32* %ival131, align 4
  br label %if.end.142

if.else.132:                                      ; preds = %if.else.124
  %74 = load i8*, i8** %s, align 8
  %75 = load i8, i8* %74, align 1
  %conv133 = sext i8 %75 to i32
  %cmp134 = icmp eq i32 %conv133, 81
  br i1 %cmp134, label %if.then.136, label %if.else.140

if.then.136:                                      ; preds = %if.else.132
  %76 = load i32, i32* @PL_nexttoke, align 4
  %idxprom137 = sext i32 %76 to i64
  %arrayidx138 = getelementptr inbounds [5 x %union.YYSTYPE], [5 x %union.YYSTYPE]* @PL_nextval, i32 0, i64 %idxprom137
  %ival139 = bitcast %union.YYSTYPE* %arrayidx138 to i32*
  store i32 124, i32* %ival139, align 4
  br label %if.end.141

if.else.140:                                      ; preds = %if.else.132
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i32 0, i32 0))
  br label %if.end.141

if.end.141:                                       ; preds = %if.else.140, %if.then.136
  br label %if.end.142

if.end.142:                                       ; preds = %if.end.141, %if.then.128
  br label %if.end.143

if.end.143:                                       ; preds = %if.end.142, %if.then.120
  br label %if.end.144

if.end.144:                                       ; preds = %if.end.143, %if.then.112
  br label %if.end.145

if.end.145:                                       ; preds = %if.end.144, %if.then.104
  %77 = load i8*, i8** %s, align 8
  %add.ptr146 = getelementptr inbounds i8, i8* %77, i64 1
  store i8* %add.ptr146, i8** @PL_bufptr, align 8
  br label %if.end.147

if.end.147:                                       ; preds = %if.end.145
  call void @S_force_next(i32 284)
  %78 = load i32, i32* @PL_lex_starts, align 4
  %tobool148 = icmp ne i32 %78, 0
  br i1 %tobool148, label %if.then.149, label %if.else.151

if.then.149:                                      ; preds = %if.end.147
  %79 = load i8*, i8** @PL_bufptr, align 8
  store i8* %79, i8** %s, align 8
  store i32 0, i32* @PL_lex_starts, align 4
  store i32 66, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %80 = load i8*, i8** %s, align 8
  store i8* %80, i8** @PL_bufptr, align 8
  %call150 = call i32 @S_ao(i32 290)
  store i32 %call150, i32* %retval
  br label %return

if.else.151:                                      ; preds = %if.end.147
  %call152 = call i32 @Perl_yylex()
  store i32 %call152, i32* %retval
  br label %return

sw.bb.153:                                        ; preds = %if.end
  %call154 = call i32 @S_sublex_push()
  store i32 %call154, i32* %retval
  br label %return

sw.bb.155:                                        ; preds = %if.end
  %81 = load i8*, i8** @PL_bufptr, align 8
  %82 = load i8*, i8** @PL_bufend, align 8
  %cmp156 = icmp eq i8* %81, %82
  br i1 %cmp156, label %if.then.158, label %if.end.160

if.then.158:                                      ; preds = %sw.bb.155
  %call159 = call i32 @S_sublex_done()
  store i32 %call159, i32* %retval
  br label %return

if.end.160:                                       ; preds = %sw.bb.155
  store i32 1, i32* @PL_expect, align 4
  %83 = load i8*, i8** @PL_bufptr, align 8
  %84 = load i8, i8* %83, align 1
  %conv161 = sext i8 %84 to i32
  %cmp162 = icmp eq i32 %conv161, 64
  %conv163 = zext i1 %cmp162 to i32
  store i32 %conv163, i32* @PL_lex_dojoin, align 4
  store i32 9, i32* @PL_lex_state, align 4
  %85 = load i32, i32* @PL_lex_dojoin, align 4
  %tobool164 = icmp ne i32 %85, 0
  br i1 %tobool164, label %if.then.165, label %if.end.178

if.then.165:                                      ; preds = %if.end.160
  %86 = load i32, i32* @PL_nexttoke, align 4
  %idxprom166 = sext i32 %86 to i64
  %arrayidx167 = getelementptr inbounds [5 x %union.YYSTYPE], [5 x %union.YYSTYPE]* @PL_nextval, i32 0, i64 %idxprom166
  %ival168 = bitcast %union.YYSTYPE* %arrayidx167 to i32*
  store i32 0, i32* %ival168, align 4
  call void @S_force_next(i32 44)
  call void @S_force_ident(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i32 0, i32 0), i32 36)
  %87 = load i32, i32* @PL_nexttoke, align 4
  %idxprom169 = sext i32 %87 to i64
  %arrayidx170 = getelementptr inbounds [5 x %union.YYSTYPE], [5 x %union.YYSTYPE]* @PL_nextval, i32 0, i64 %idxprom169
  %ival171 = bitcast %union.YYSTYPE* %arrayidx170 to i32*
  store i32 0, i32* %ival171, align 4
  call void @S_force_next(i32 36)
  %88 = load i32, i32* @PL_nexttoke, align 4
  %idxprom172 = sext i32 %88 to i64
  %arrayidx173 = getelementptr inbounds [5 x %union.YYSTYPE], [5 x %union.YYSTYPE]* @PL_nextval, i32 0, i64 %idxprom172
  %ival174 = bitcast %union.YYSTYPE* %arrayidx173 to i32*
  store i32 0, i32* %ival174, align 4
  call void @S_force_next(i32 40)
  %89 = load i32, i32* @PL_nexttoke, align 4
  %idxprom175 = sext i32 %89 to i64
  %arrayidx176 = getelementptr inbounds [5 x %union.YYSTYPE], [5 x %union.YYSTYPE]* @PL_nextval, i32 0, i64 %idxprom175
  %ival177 = bitcast %union.YYSTYPE* %arrayidx176 to i32*
  store i32 140, i32* %ival177, align 4
  call void @S_force_next(i32 284)
  br label %if.end.178

if.end.178:                                       ; preds = %if.then.165, %if.end.160
  %90 = load i32, i32* @PL_lex_starts, align 4
  %inc179 = add nsw i32 %90, 1
  store i32 %inc179, i32* @PL_lex_starts, align 4
  %tobool180 = icmp ne i32 %90, 0
  br i1 %tobool180, label %if.then.181, label %if.end.183

if.then.181:                                      ; preds = %if.end.178
  %91 = load i8*, i8** @PL_bufptr, align 8
  store i8* %91, i8** %s, align 8
  store i32 66, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %92 = load i8*, i8** %s, align 8
  store i8* %92, i8** @PL_bufptr, align 8
  %call182 = call i32 @S_ao(i32 290)
  store i32 %call182, i32* %retval
  br label %return

if.end.183:                                       ; preds = %if.end.178
  %call184 = call i32 @Perl_yylex()
  store i32 %call184, i32* %retval
  br label %return

sw.bb.185:                                        ; preds = %if.end
  %93 = load i8*, i8** @PL_bufptr, align 8
  %call186 = call i32 @S_intuit_more(i8* %93)
  %tobool187 = icmp ne i32 %call186, 0
  br i1 %tobool187, label %if.then.188, label %if.end.189

if.then.188:                                      ; preds = %sw.bb.185
  store i32 9, i32* @PL_lex_state, align 4
  br label %sw.epilog

if.end.189:                                       ; preds = %sw.bb.185
  br label %sw.bb.190

sw.bb.190:                                        ; preds = %if.end, %if.end.189
  %94 = load i32, i32* @PL_lex_dojoin, align 4
  %tobool191 = icmp ne i32 %94, 0
  br i1 %tobool191, label %if.then.192, label %if.end.193

if.then.192:                                      ; preds = %sw.bb.190
  store i32 0, i32* @PL_lex_dojoin, align 4
  store i32 3, i32* @PL_lex_state, align 4
  store i32 41, i32* %retval
  br label %return

if.end.193:                                       ; preds = %sw.bb.190
  %95 = load i32, i32* @PL_lex_inwhat, align 4
  %cmp194 = icmp eq i32 %95, 33
  br i1 %cmp194, label %land.lhs.true.196, label %if.end.206

land.lhs.true.196:                                ; preds = %if.end.193
  %96 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %97 = load %struct.sv*, %struct.sv** @PL_lex_repl, align 8
  %cmp197 = icmp eq %struct.sv* %96, %97
  br i1 %cmp197, label %land.lhs.true.199, label %if.end.206

land.lhs.true.199:                                ; preds = %land.lhs.true.196
  %98 = load %struct.sv*, %struct.sv** @PL_lex_repl, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %98, i32 0, i32 2
  %99 = load i32, i32* %sv_flags, align 4
  %and = and i32 %99, 1073741824
  %tobool200 = icmp ne i32 %and, 0
  br i1 %tobool200, label %if.then.201, label %if.end.206

if.then.201:                                      ; preds = %land.lhs.true.199
  %100 = load i8*, i8** @PL_bufptr, align 8
  %101 = load i8*, i8** @PL_bufend, align 8
  %cmp202 = icmp ne i8* %100, %101
  br i1 %cmp202, label %if.then.204, label %if.end.205

if.then.204:                                      ; preds = %if.then.201
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.8, i32 0, i32 0))
  br label %if.end.205

if.end.205:                                       ; preds = %if.then.204, %if.then.201
  store %struct.sv* null, %struct.sv** @PL_lex_repl, align 8
  br label %if.end.206

if.end.206:                                       ; preds = %if.end.205, %land.lhs.true.199, %land.lhs.true.196, %if.end.193
  br label %sw.bb.207

sw.bb.207:                                        ; preds = %if.end, %if.end.206
  %102 = load i8*, i8** @PL_bufptr, align 8
  %103 = load i8*, i8** @PL_bufend, align 8
  %cmp208 = icmp eq i8* %102, %103
  br i1 %cmp208, label %if.then.210, label %if.end.212

if.then.210:                                      ; preds = %sw.bb.207
  %call211 = call i32 @S_sublex_done()
  store i32 %call211, i32* %retval
  br label %return

if.end.212:                                       ; preds = %sw.bb.207
  %104 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %104, i32 0, i32 0
  %105 = load i8*, i8** %sv_any, align 8
  %106 = bitcast i8* %105 to %struct.xpviv*
  %xiv_iv = getelementptr inbounds %struct.xpviv, %struct.xpviv* %106, i32 0, i32 3
  %107 = load i64, i64* %xiv_iv, align 8
  %cmp213 = icmp eq i64 %107, 39
  br i1 %cmp213, label %if.then.215, label %if.else.229

if.then.215:                                      ; preds = %if.end.212
  %108 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %call217 = call %struct.sv* @Perl_newSVsv(%struct.sv* %108)
  store %struct.sv* %call217, %struct.sv** %sv, align 8
  %109 = load %struct.op*, %struct.op** @PL_lex_inpat, align 8
  %tobool218 = icmp ne %struct.op* %109, null
  br i1 %tobool218, label %if.else.221, label %if.then.219

if.then.219:                                      ; preds = %if.then.215
  %110 = load %struct.sv*, %struct.sv** %sv, align 8
  %call220 = call %struct.sv* @S_tokeq(%struct.sv* %110)
  store %struct.sv* %call220, %struct.sv** %sv, align 8
  br label %if.end.227

if.else.221:                                      ; preds = %if.then.215
  %111 = load i32, i32* @PL_hints, align 4
  %and222 = and i32 %111, 65536
  %tobool223 = icmp ne i32 %and222, 0
  br i1 %tobool223, label %if.then.224, label %if.end.226

if.then.224:                                      ; preds = %if.else.221
  %112 = load %struct.sv*, %struct.sv** %sv, align 8
  %113 = load %struct.sv*, %struct.sv** %sv, align 8
  %call225 = call %struct.sv* @S_new_constant(i8* null, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i32 0, i32 0), %struct.sv* %112, %struct.sv* %113, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i32 0, i32 0))
  store %struct.sv* %call225, %struct.sv** %sv, align 8
  br label %if.end.226

if.end.226:                                       ; preds = %if.then.224, %if.else.221
  br label %if.end.227

if.end.227:                                       ; preds = %if.end.226, %if.then.219
  %114 = load %struct.sv*, %struct.sv** %sv, align 8
  %call228 = call %struct.op* @Perl_newSVOP(i32 5, i32 0, %struct.sv* %114)
  store %struct.op* %call228, %struct.op** bitcast (%union.YYSTYPE* @PL_yylval to %struct.op**), align 8
  %115 = load i8*, i8** @PL_bufend, align 8
  store i8* %115, i8** %s, align 8
  br label %if.end.237

if.else.229:                                      ; preds = %if.end.212
  %116 = load i8*, i8** @PL_bufptr, align 8
  %call230 = call i8* @S_scan_const(i8* %116)
  store i8* %call230, i8** %s, align 8
  %117 = load i8*, i8** %s, align 8
  %118 = load i8, i8* %117, align 1
  %conv231 = sext i8 %118 to i32
  %cmp232 = icmp eq i32 %conv231, 92
  br i1 %cmp232, label %if.then.234, label %if.else.235

if.then.234:                                      ; preds = %if.else.229
  store i32 8, i32* @PL_lex_state, align 4
  br label %if.end.236

if.else.235:                                      ; preds = %if.else.229
  store i32 6, i32* @PL_lex_state, align 4
  br label %if.end.236

if.end.236:                                       ; preds = %if.else.235, %if.then.234
  br label %if.end.237

if.end.237:                                       ; preds = %if.end.236, %if.end.227
  %119 = load i8*, i8** %s, align 8
  %120 = load i8*, i8** @PL_bufptr, align 8
  %cmp238 = icmp ne i8* %119, %120
  br i1 %cmp238, label %if.then.240, label %if.end.249

if.then.240:                                      ; preds = %if.end.237
  %121 = load i32, i32* @PL_nexttoke, align 4
  %idxprom241 = sext i32 %121 to i64
  %arrayidx242 = getelementptr inbounds [5 x %union.YYSTYPE], [5 x %union.YYSTYPE]* @PL_nextval, i32 0, i64 %idxprom241
  %122 = bitcast %union.YYSTYPE* %arrayidx242 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %122, i8* bitcast (%union.YYSTYPE* @PL_yylval to i8*), i64 8, i32 8, i1 false)
  store i32 1, i32* @PL_expect, align 4
  call void @S_force_next(i32 260)
  %123 = load i32, i32* @PL_lex_starts, align 4
  %inc243 = add nsw i32 %123, 1
  store i32 %inc243, i32* @PL_lex_starts, align 4
  %tobool244 = icmp ne i32 %123, 0
  br i1 %tobool244, label %if.then.245, label %if.else.247

if.then.245:                                      ; preds = %if.then.240
  store i32 66, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %124 = load i8*, i8** %s, align 8
  store i8* %124, i8** @PL_bufptr, align 8
  %call246 = call i32 @S_ao(i32 290)
  store i32 %call246, i32* %retval
  br label %return

if.else.247:                                      ; preds = %if.then.240
  %125 = load i8*, i8** %s, align 8
  store i8* %125, i8** @PL_bufptr, align 8
  %call248 = call i32 @Perl_yylex()
  store i32 %call248, i32* %retval
  br label %return

if.end.249:                                       ; preds = %if.end.237
  %call250 = call i32 @Perl_yylex()
  store i32 %call250, i32* %retval
  br label %return

sw.bb.251:                                        ; preds = %if.end
  store i32 10, i32* @PL_lex_state, align 4
  %126 = load i8*, i8** @PL_bufptr, align 8
  %call252 = call i8* @S_scan_formline(i8* %126)
  store i8* %call252, i8** %s, align 8
  %127 = load i32, i32* @PL_lex_formbrack, align 4
  %tobool253 = icmp ne i32 %127, 0
  br i1 %tobool253, label %if.end.255, label %if.then.254

if.then.254:                                      ; preds = %sw.bb.251
  br label %rightbracket

if.end.255:                                       ; preds = %sw.bb.251
  store i32 1, i32* @PL_expect, align 4
  %128 = load i8*, i8** %s, align 8
  store i8* %128, i8** @PL_bufptr, align 8
  store i32 59, i32* %retval
  br label %return

sw.epilog:                                        ; preds = %if.end, %if.then.188
  %129 = load i8*, i8** @PL_bufptr, align 8
  store i8* %129, i8** %s, align 8
  %130 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %130, i8** @PL_oldoldbufptr, align 8
  %131 = load i8*, i8** %s, align 8
  store i8* %131, i8** @PL_oldbufptr, align 8
  br label %retry

retry:                                            ; preds = %if.end.2812, %while.end.2811, %if.end.2808, %if.end.1039, %sw.bb.985, %if.end.984, %if.end.943, %if.then.452, %if.end.417, %if.then.323, %sw.epilog
  %132 = load i8*, i8** %s, align 8
  %133 = load i8, i8* %132, align 1
  %conv256 = sext i8 %133 to i32
  switch i32 %conv256, label %sw.default [
    i32 4, label %sw.bb.307
    i32 26, label %sw.bb.307
    i32 0, label %sw.bb.308
    i32 13, label %sw.bb.985
    i32 32, label %sw.bb.985
    i32 9, label %sw.bb.985
    i32 12, label %sw.bb.985
    i32 11, label %sw.bb.985
    i32 35, label %sw.bb.987
    i32 10, label %sw.bb.987
    i32 45, label %sw.bb.1040
    i32 43, label %sw.bb.1305
    i32 42, label %sw.bb.1372
    i32 37, label %sw.bb.1398
    i32 94, label %sw.bb.1417
    i32 91, label %sw.bb.1420
    i32 126, label %sw.bb.1422
    i32 44, label %sw.bb.1422
    i32 58, label %sw.bb.1425
    i32 40, label %sw.bb.1679
    i32 59, label %sw.bb.1690
    i32 41, label %sw.bb.1701
    i32 93, label %sw.bb.1718
    i32 123, label %sw.bb.1761
    i32 125, label %sw.bb.2508
    i32 38, label %sw.bb.2567
    i32 124, label %sw.bb.2681
    i32 61, label %sw.bb.2692
    i32 33, label %sw.bb.2848
    i32 60, label %sw.bb.2861
    i32 62, label %sw.bb.2913
    i32 36, label %sw.bb.2927
    i32 64, label %sw.bb.3666
    i32 47, label %sw.bb.3832
    i32 63, label %sw.bb.3832
    i32 46, label %sw.bb.3935
    i32 48, label %sw.bb.3999
    i32 49, label %sw.bb.3999
    i32 50, label %sw.bb.3999
    i32 51, label %sw.bb.3999
    i32 52, label %sw.bb.3999
    i32 53, label %sw.bb.3999
    i32 54, label %sw.bb.3999
    i32 55, label %sw.bb.3999
    i32 56, label %sw.bb.3999
    i32 57, label %sw.bb.3999
    i32 39, label %sw.bb.4013
    i32 34, label %sw.bb.4038
    i32 96, label %sw.bb.4100
    i32 92, label %sw.bb.4118
    i32 118, label %sw.bb.4165
    i32 120, label %sw.bb.4267
    i32 95, label %sw.bb.4284
    i32 97, label %sw.bb.4284
    i32 65, label %sw.bb.4284
    i32 98, label %sw.bb.4284
    i32 66, label %sw.bb.4284
    i32 99, label %sw.bb.4284
    i32 67, label %sw.bb.4284
    i32 100, label %sw.bb.4284
    i32 68, label %sw.bb.4284
    i32 101, label %sw.bb.4284
    i32 69, label %sw.bb.4284
    i32 102, label %sw.bb.4284
    i32 70, label %sw.bb.4284
    i32 103, label %sw.bb.4284
    i32 71, label %sw.bb.4284
    i32 104, label %sw.bb.4284
    i32 72, label %sw.bb.4284
    i32 105, label %sw.bb.4284
    i32 73, label %sw.bb.4284
    i32 106, label %sw.bb.4284
    i32 74, label %sw.bb.4284
    i32 107, label %sw.bb.4284
    i32 75, label %sw.bb.4284
    i32 108, label %sw.bb.4284
    i32 76, label %sw.bb.4284
    i32 109, label %sw.bb.4284
    i32 77, label %sw.bb.4284
    i32 110, label %sw.bb.4284
    i32 78, label %sw.bb.4284
    i32 111, label %sw.bb.4284
    i32 79, label %sw.bb.4284
    i32 112, label %sw.bb.4284
    i32 80, label %sw.bb.4284
    i32 113, label %sw.bb.4284
    i32 81, label %sw.bb.4284
    i32 114, label %sw.bb.4284
    i32 82, label %sw.bb.4284
    i32 115, label %sw.bb.4284
    i32 83, label %sw.bb.4284
    i32 116, label %sw.bb.4284
    i32 84, label %sw.bb.4284
    i32 117, label %sw.bb.4284
    i32 85, label %sw.bb.4284
    i32 86, label %sw.bb.4284
    i32 119, label %sw.bb.4284
    i32 87, label %sw.bb.4284
    i32 88, label %sw.bb.4284
    i32 121, label %sw.bb.4284
    i32 89, label %sw.bb.4284
    i32 122, label %sw.bb.4284
    i32 90, label %sw.bb.4284
  ]

sw.default:                                       ; preds = %retry
  %134 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private = getelementptr inbounds %struct.cop, %struct.cop* %134, i32 0, i32 7
  %135 = load i8, i8* %op_private, align 1
  %conv257 = zext i8 %135 to i32
  %and258 = and i32 %conv257, 8
  %tobool259 = icmp ne i32 %and258, 0
  br i1 %tobool259, label %cond.true, label %lor.lhs.false.260

lor.lhs.false.260:                                ; preds = %sw.default
  %136 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %tobool261 = icmp ne %struct.sv* %136, null
  br i1 %tobool261, label %land.lhs.true.262, label %lor.lhs.false.271

land.lhs.true.262:                                ; preds = %lor.lhs.false.260
  %137 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_flags263 = getelementptr inbounds %struct.sv, %struct.sv* %137, i32 0, i32 2
  %138 = load i32, i32* %sv_flags263, align 4
  %and264 = and i32 %138, 536870912
  %tobool265 = icmp ne i32 %and264, 0
  br i1 %tobool265, label %land.lhs.true.266, label %lor.lhs.false.271

land.lhs.true.266:                                ; preds = %land.lhs.true.262
  %139 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private267 = getelementptr inbounds %struct.cop, %struct.cop* %139, i32 0, i32 7
  %140 = load i8, i8* %op_private267, align 1
  %conv268 = zext i8 %140 to i32
  %and269 = and i32 %conv268, 8
  %tobool270 = icmp ne i32 %and269, 0
  br i1 %tobool270, label %lor.lhs.false.271, label %lor.lhs.false.274

lor.lhs.false.271:                                ; preds = %land.lhs.true.266, %land.lhs.true.262, %lor.lhs.false.260
  %141 = load i32, i32* @PL_hints, align 4
  %and272 = and i32 %141, 8388608
  %tobool273 = icmp ne i32 %and272, 0
  br i1 %tobool273, label %lor.lhs.false.274, label %cond.true

lor.lhs.false.274:                                ; preds = %lor.lhs.false.271, %land.lhs.true.266
  %142 = load i8*, i8** %s, align 8
  %143 = load i8, i8* %142, align 1
  %conv275 = zext i8 %143 to i32
  %cmp276 = icmp slt i32 %conv275, 192
  br i1 %cmp276, label %cond.true, label %cond.false

cond.true:                                        ; preds = %lor.lhs.false.274, %lor.lhs.false.271, %sw.default
  %144 = load i8*, i8** %s, align 8
  %145 = load i8, i8* %144, align 1
  %conv278 = sext i8 %145 to i32
  %cmp279 = icmp sge i32 %conv278, 65
  br i1 %cmp279, label %land.lhs.true.281, label %lor.lhs.false.285

land.lhs.true.281:                                ; preds = %cond.true
  %146 = load i8*, i8** %s, align 8
  %147 = load i8, i8* %146, align 1
  %conv282 = sext i8 %147 to i32
  %cmp283 = icmp sle i32 %conv282, 90
  br i1 %cmp283, label %if.then.303, label %lor.lhs.false.285

lor.lhs.false.285:                                ; preds = %land.lhs.true.281, %cond.true
  %148 = load i8*, i8** %s, align 8
  %149 = load i8, i8* %148, align 1
  %conv286 = sext i8 %149 to i32
  %cmp287 = icmp sge i32 %conv286, 97
  br i1 %cmp287, label %land.lhs.true.289, label %lor.lhs.false.293

land.lhs.true.289:                                ; preds = %lor.lhs.false.285
  %150 = load i8*, i8** %s, align 8
  %151 = load i8, i8* %150, align 1
  %conv290 = sext i8 %151 to i32
  %cmp291 = icmp sle i32 %conv290, 122
  br i1 %cmp291, label %if.then.303, label %lor.lhs.false.293

lor.lhs.false.293:                                ; preds = %land.lhs.true.289, %lor.lhs.false.285
  %152 = load i8*, i8** %s, align 8
  %153 = load i8, i8* %152, align 1
  %conv294 = sext i8 %153 to i32
  %cmp295 = icmp eq i32 %conv294, 95
  br i1 %cmp295, label %if.then.303, label %if.end.304

cond.false:                                       ; preds = %lor.lhs.false.274
  %154 = load i8*, i8** %s, align 8
  %call297 = call signext i8 @Perl_is_utf8_idcont(i8* %154)
  %conv298 = sext i8 %call297 to i32
  %tobool299 = icmp ne i32 %conv298, 0
  br i1 %tobool299, label %land.lhs.true.300, label %if.end.304

land.lhs.true.300:                                ; preds = %cond.false
  %155 = load i8*, i8** %s, align 8
  %call301 = call signext i8 @Perl_is_utf8_digit(i8* %155)
  %tobool302 = icmp ne i8 %call301, 0
  br i1 %tobool302, label %if.end.304, label %if.then.303

if.then.303:                                      ; preds = %land.lhs.true.300, %lor.lhs.false.293, %land.lhs.true.289, %land.lhs.true.281
  br label %keylookup

if.end.304:                                       ; preds = %land.lhs.true.300, %cond.false, %lor.lhs.false.293
  %156 = load i8*, i8** %s, align 8
  %157 = load i8, i8* %156, align 1
  %conv305 = sext i8 %157 to i32
  %and306 = and i32 %conv305, 255
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.11, i32 0, i32 0), i32 %and306)
  br label %sw.bb.307

sw.bb.307:                                        ; preds = %retry, %retry, %if.end.304
  br label %fake_eof

sw.bb.308:                                        ; preds = %retry
  %158 = load volatile %struct._PerlIO**, %struct._PerlIO*** @PL_rsfp, align 8
  %tobool309 = icmp ne %struct._PerlIO** %158, null
  br i1 %tobool309, label %if.end.320, label %if.then.310

if.then.310:                                      ; preds = %sw.bb.308
  store i8* null, i8** @PL_last_uni, align 8
  store i8* null, i8** @PL_last_lop, align 8
  %159 = load i32, i32* @PL_lex_brackets, align 4
  %tobool311 = icmp ne i32 %159, 0
  br i1 %tobool311, label %if.then.312, label %if.end.319

if.then.312:                                      ; preds = %if.then.310
  %160 = load i32, i32* @PL_lex_formbrack, align 4
  %tobool313 = icmp ne i32 %160, 0
  br i1 %tobool313, label %if.then.314, label %if.else.316

if.then.314:                                      ; preds = %if.then.312
  %call315 = call i32 @Perl_yyerror(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.12, i32 0, i32 0))
  br label %if.end.318

if.else.316:                                      ; preds = %if.then.312
  %call317 = call i32 @Perl_yyerror(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13, i32 0, i32 0))
  br label %if.end.318

if.end.318:                                       ; preds = %if.else.316, %if.then.314
  br label %if.end.319

if.end.319:                                       ; preds = %if.end.318, %if.then.310
  %161 = load i8*, i8** %s, align 8
  store i8* %161, i8** @PL_bufptr, align 8
  store i32 0, i32* %retval
  br label %return

if.end.320:                                       ; preds = %sw.bb.308
  %162 = load i8*, i8** %s, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %162, i32 1
  store i8* %incdec.ptr, i8** %s, align 8
  %163 = load i8*, i8** @PL_bufend, align 8
  %cmp321 = icmp ult i8* %162, %163
  br i1 %cmp321, label %if.then.323, label %if.end.324

if.then.323:                                      ; preds = %if.end.320
  br label %retry

if.end.324:                                       ; preds = %if.end.320
  store i8* null, i8** @PL_last_uni, align 8
  store i8* null, i8** @PL_last_lop, align 8
  %164 = load volatile i32, i32* @PL_in_eval, align 4
  %tobool325 = icmp ne i32 %164, 0
  br i1 %tobool325, label %if.end.418, label %land.lhs.true.326

land.lhs.true.326:                                ; preds = %if.end.324
  %165 = load i8, i8* @PL_preambled, align 1
  %tobool327 = icmp ne i8 %165, 0
  br i1 %tobool327, label %if.end.418, label %if.then.328

if.then.328:                                      ; preds = %land.lhs.true.326
  store i8 1, i8* @PL_preambled, align 1
  %166 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %call329 = call i8* @S_incl_perldb()
  call void @Perl_sv_setpv(%struct.sv* %166, i8* %call329)
  %167 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_any330 = getelementptr inbounds %struct.sv, %struct.sv* %167, i32 0, i32 0
  %168 = load i8*, i8** %sv_any330, align 8
  %169 = bitcast i8* %168 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %169, i32 0, i32 1
  %170 = load i64, i64* %xpv_cur, align 8
  %tobool331 = icmp ne i64 %170, 0
  br i1 %tobool331, label %if.then.332, label %if.end.333

if.then.332:                                      ; preds = %if.then.328
  %171 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  call void @Perl_sv_catpvn_flags(%struct.sv* %171, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i32 0, i32 0), i64 1, i32 2)
  br label %if.end.333

if.end.333:                                       ; preds = %if.then.332, %if.then.328
  %172 = load %struct.av*, %struct.av** @PL_preambleav, align 8
  %tobool334 = icmp ne %struct.av* %172, null
  br i1 %tobool334, label %if.then.335, label %if.end.341

if.then.335:                                      ; preds = %if.end.333
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.then.335
  %173 = load %struct.av*, %struct.av** @PL_preambleav, align 8
  %sv_any336 = getelementptr inbounds %struct.av, %struct.av* %173, i32 0, i32 0
  %174 = load %struct.xpvav*, %struct.xpvav** %sv_any336, align 8
  %xav_fill = getelementptr inbounds %struct.xpvav, %struct.xpvav* %174, i32 0, i32 1
  %175 = load i64, i64* %xav_fill, align 8
  %cmp337 = icmp sge i64 %175, 0
  br i1 %cmp337, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %176 = load %struct.av*, %struct.av** @PL_preambleav, align 8
  %call340 = call %struct.sv* @Perl_av_shift(%struct.av* %176)
  store %struct.sv* %call340, %struct.sv** %tmpsv, align 8
  %177 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %178 = load %struct.sv*, %struct.sv** %tmpsv, align 8
  call void @Perl_sv_catsv_flags(%struct.sv* %177, %struct.sv* %178, i32 2)
  %179 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  call void @Perl_sv_catpvn_flags(%struct.sv* %179, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i32 0, i32 0), i64 1, i32 2)
  %180 = load %struct.sv*, %struct.sv** %tmpsv, align 8
  call void @Perl_sv_free(%struct.sv* %180)
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %181 = load %struct.av*, %struct.av** @PL_preambleav, align 8
  %182 = bitcast %struct.av* %181 to %struct.sv*
  call void @Perl_sv_free(%struct.sv* %182)
  store %struct.av* null, %struct.av** @PL_preambleav, align 8
  br label %if.end.341

if.end.341:                                       ; preds = %while.end, %if.end.333
  %183 = load i8, i8* @PL_minus_n, align 1
  %conv342 = sext i8 %183 to i32
  %tobool343 = icmp ne i32 %conv342, 0
  br i1 %tobool343, label %if.then.347, label %lor.lhs.false.344

lor.lhs.false.344:                                ; preds = %if.end.341
  %184 = load i8, i8* @PL_minus_p, align 1
  %conv345 = sext i8 %184 to i32
  %tobool346 = icmp ne i32 %conv345, 0
  br i1 %tobool346, label %if.then.347, label %if.end.384

if.then.347:                                      ; preds = %lor.lhs.false.344, %if.end.341
  %185 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  call void @Perl_sv_catpv(%struct.sv* %185, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.15, i32 0, i32 0))
  %186 = load i8, i8* @PL_minus_l, align 1
  %tobool348 = icmp ne i8 %186, 0
  br i1 %tobool348, label %if.then.349, label %if.end.350

if.then.349:                                      ; preds = %if.then.347
  %187 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  call void @Perl_sv_catpv(%struct.sv* %187, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.16, i32 0, i32 0))
  br label %if.end.350

if.end.350:                                       ; preds = %if.then.349, %if.then.347
  %188 = load i8, i8* @PL_minus_a, align 1
  %tobool351 = icmp ne i8 %188, 0
  br i1 %tobool351, label %if.then.352, label %if.end.383

if.then.352:                                      ; preds = %if.end.350
  %189 = load i8, i8* @PL_minus_F, align 1
  %tobool353 = icmp ne i8 %189, 0
  br i1 %tobool353, label %if.then.354, label %if.else.381

if.then.354:                                      ; preds = %if.then.352
  %190 = load i8*, i8** @PL_splitstr, align 8
  %191 = load i8, i8* %190, align 1
  %conv355 = sext i8 %191 to i32
  %cmp356 = icmp eq i32 %conv355, 47
  br i1 %cmp356, label %land.lhs.true.366, label %lor.lhs.false.358

lor.lhs.false.358:                                ; preds = %if.then.354
  %192 = load i8*, i8** @PL_splitstr, align 8
  %193 = load i8, i8* %192, align 1
  %conv359 = sext i8 %193 to i32
  %cmp360 = icmp eq i32 %conv359, 39
  br i1 %cmp360, label %land.lhs.true.366, label %lor.lhs.false.362

lor.lhs.false.362:                                ; preds = %lor.lhs.false.358
  %194 = load i8*, i8** @PL_splitstr, align 8
  %195 = load i8, i8* %194, align 1
  %conv363 = sext i8 %195 to i32
  %cmp364 = icmp eq i32 %conv363, 34
  br i1 %cmp364, label %land.lhs.true.366, label %if.else.372

land.lhs.true.366:                                ; preds = %lor.lhs.false.362, %lor.lhs.false.358, %if.then.354
  %196 = load i8*, i8** @PL_splitstr, align 8
  %add.ptr367 = getelementptr inbounds i8, i8* %196, i64 1
  %197 = load i8*, i8** @PL_splitstr, align 8
  %198 = load i8, i8* %197, align 1
  %conv368 = sext i8 %198 to i32
  %call369 = call i8* @strchr(i8* %add.ptr367, i32 %conv368)
  %tobool370 = icmp ne i8* %call369, null
  br i1 %tobool370, label %if.then.371, label %if.else.372

if.then.371:                                      ; preds = %land.lhs.true.366
  %199 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %200 = load i8*, i8** @PL_splitstr, align 8
  call void (%struct.sv*, i8*, ...) @Perl_sv_catpvf(%struct.sv* %199, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.17, i32 0, i32 0), i8* %200)
  br label %if.end.380

if.else.372:                                      ; preds = %land.lhs.true.366, %lor.lhs.false.362
  %201 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  call void @Perl_sv_catpvn_flags(%struct.sv* %201, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.18, i32 0, i32 0), i64 15, i32 2)
  %202 = load i8*, i8** @PL_splitstr, align 8
  store i8* %202, i8** %s, align 8
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.else.372
  %203 = load i8*, i8** %s, align 8
  %204 = load i8, i8* %203, align 1
  %conv373 = sext i8 %204 to i32
  %cmp374 = icmp eq i32 %conv373, 92
  br i1 %cmp374, label %if.then.376, label %if.end.377

if.then.376:                                      ; preds = %do.body
  %205 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %206 = load i8*, i8** %s, align 8
  call void @Perl_sv_catpvn_flags(%struct.sv* %205, i8* %206, i64 1, i32 2)
  br label %if.end.377

if.end.377:                                       ; preds = %if.then.376, %do.body
  %207 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %208 = load i8*, i8** %s, align 8
  call void @Perl_sv_catpvn_flags(%struct.sv* %207, i8* %208, i64 1, i32 2)
  br label %do.cond

do.cond:                                          ; preds = %if.end.377
  %209 = load i8*, i8** %s, align 8
  %incdec.ptr378 = getelementptr inbounds i8, i8* %209, i32 1
  store i8* %incdec.ptr378, i8** %s, align 8
  %210 = load i8, i8* %209, align 1
  %tobool379 = icmp ne i8 %210, 0
  br i1 %tobool379, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  %211 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  call void @Perl_sv_catpvn_flags(%struct.sv* %211, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.19, i32 0, i32 0), i64 2, i32 2)
  br label %if.end.380

if.end.380:                                       ; preds = %do.end, %if.then.371
  br label %if.end.382

if.else.381:                                      ; preds = %if.then.352
  %212 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  call void @Perl_sv_catpv(%struct.sv* %212, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.20, i32 0, i32 0))
  br label %if.end.382

if.end.382:                                       ; preds = %if.else.381, %if.end.380
  br label %if.end.383

if.end.383:                                       ; preds = %if.end.382, %if.end.350
  br label %if.end.384

if.end.384:                                       ; preds = %if.end.383, %lor.lhs.false.344
  %213 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  call void @Perl_sv_catpvn_flags(%struct.sv* %213, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.21, i32 0, i32 0), i64 1, i32 2)
  %214 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_any385 = getelementptr inbounds %struct.sv, %struct.sv* %214, i32 0, i32 0
  %215 = load i8*, i8** %sv_any385, align 8
  %216 = bitcast i8* %215 to %struct.xpv*
  %xpv_pv = getelementptr inbounds %struct.xpv, %struct.xpv* %216, i32 0, i32 0
  %217 = load i8*, i8** %xpv_pv, align 8
  store i8* %217, i8** @PL_linestart, align 8
  store i8* %217, i8** %s, align 8
  store i8* %217, i8** @PL_oldbufptr, align 8
  store i8* %217, i8** @PL_oldoldbufptr, align 8
  %218 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_any386 = getelementptr inbounds %struct.sv, %struct.sv* %218, i32 0, i32 0
  %219 = load i8*, i8** %sv_any386, align 8
  %220 = bitcast i8* %219 to %struct.xpv*
  %xpv_pv387 = getelementptr inbounds %struct.xpv, %struct.xpv* %220, i32 0, i32 0
  %221 = load i8*, i8** %xpv_pv387, align 8
  %222 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_any388 = getelementptr inbounds %struct.sv, %struct.sv* %222, i32 0, i32 0
  %223 = load i8*, i8** %sv_any388, align 8
  %224 = bitcast i8* %223 to %struct.xpv*
  %xpv_cur389 = getelementptr inbounds %struct.xpv, %struct.xpv* %224, i32 0, i32 1
  %225 = load i64, i64* %xpv_cur389, align 8
  %add.ptr390 = getelementptr inbounds i8, i8* %221, i64 %225
  store i8* %add.ptr390, i8** @PL_bufend, align 8
  store i8* null, i8** @PL_last_uni, align 8
  store i8* null, i8** @PL_last_lop, align 8
  %226 = load i32, i32* @PL_perldb, align 4
  %tobool391 = icmp ne i32 %226, 0
  br i1 %tobool391, label %land.lhs.true.392, label %if.end.417

land.lhs.true.392:                                ; preds = %if.end.384
  %227 = load i32, i32* @PL_perldb, align 4
  %and393 = and i32 %227, 2
  %tobool394 = icmp ne i32 %and393, 0
  br i1 %tobool394, label %land.lhs.true.395, label %if.end.417

land.lhs.true.395:                                ; preds = %land.lhs.true.392
  %228 = load %struct.hv*, %struct.hv** @PL_curstash, align 8
  %229 = load %struct.hv*, %struct.hv** @PL_debstash, align 8
  %cmp396 = icmp ne %struct.hv* %228, %229
  br i1 %cmp396, label %if.then.398, label %if.end.417

if.then.398:                                      ; preds = %land.lhs.true.395
  %call401 = call %struct.sv* @Perl_newSV(i64 0)
  store %struct.sv* %call401, %struct.sv** %sv400, align 8
  %230 = load %struct.sv*, %struct.sv** %sv400, align 8
  %call402 = call signext i8 @Perl_sv_upgrade(%struct.sv* %230, i32 7)
  %231 = load %struct.sv*, %struct.sv** %sv400, align 8
  %232 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  call void @Perl_sv_setsv_flags(%struct.sv* %231, %struct.sv* %232, i32 2)
  %233 = load %struct.sv*, %struct.sv** %sv400, align 8
  %sv_flags403 = getelementptr inbounds %struct.sv, %struct.sv* %233, i32 0, i32 2
  %234 = load i32, i32* %sv_flags403, align 4
  %and404 = and i32 %234, 2097152
  %tobool405 = icmp ne i32 %and404, 0
  br i1 %tobool405, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.then.398
  %235 = load %struct.sv*, %struct.sv** %sv400, align 8
  %call406 = call i32 @Perl_sv_backoff(%struct.sv* %235)
  %tobool407 = icmp ne i32 %call406, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.then.398
  %236 = phi i1 [ false, %if.then.398 ], [ %tobool407, %land.rhs ]
  %land.ext = zext i1 %236 to i32
  %237 = load %struct.sv*, %struct.sv** %sv400, align 8
  %sv_flags408 = getelementptr inbounds %struct.sv, %struct.sv* %237, i32 0, i32 2
  %238 = load i32, i32* %sv_flags408, align 4
  %or = or i32 %238, 16842752
  store i32 %or, i32* %sv_flags408, align 4
  %239 = load %struct.sv*, %struct.sv** %sv400, align 8
  %sv_any409 = getelementptr inbounds %struct.sv, %struct.sv* %239, i32 0, i32 0
  %240 = load i8*, i8** %sv_any409, align 8
  %241 = bitcast i8* %240 to %struct.xpviv*
  %xiv_iv410 = getelementptr inbounds %struct.xpviv, %struct.xpviv* %241, i32 0, i32 3
  store i64 0, i64* %xiv_iv410, align 8
  %242 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_filegv = getelementptr inbounds %struct.cop, %struct.cop* %242, i32 0, i32 10
  %243 = load %struct.gv*, %struct.gv** %cop_filegv, align 8
  %tobool411 = icmp ne %struct.gv* %243, null
  br i1 %tobool411, label %cond.true.412, label %cond.false.415

cond.true.412:                                    ; preds = %land.end
  %244 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_filegv413 = getelementptr inbounds %struct.cop, %struct.cop* %244, i32 0, i32 10
  %245 = load %struct.gv*, %struct.gv** %cop_filegv413, align 8
  %sv_any414 = getelementptr inbounds %struct.gv, %struct.gv* %245, i32 0, i32 0
  %246 = load %struct.xpvgv*, %struct.xpvgv** %sv_any414, align 8
  %xgv_gp = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %246, i32 0, i32 7
  %247 = load %struct.gp*, %struct.gp** %xgv_gp, align 8
  %gp_av = getelementptr inbounds %struct.gp, %struct.gp* %247, i32 0, i32 4
  %248 = load %struct.av*, %struct.av** %gp_av, align 8
  br label %cond.end

cond.false.415:                                   ; preds = %land.end
  br label %cond.end

cond.end:                                         ; preds = %cond.false.415, %cond.true.412
  %cond = phi %struct.av* [ %248, %cond.true.412 ], [ null, %cond.false.415 ]
  %249 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line = getelementptr inbounds %struct.cop, %struct.cop* %249, i32 0, i32 13
  %250 = load i32, i32* %cop_line, align 4
  %251 = load %struct.sv*, %struct.sv** %sv400, align 8
  %call416 = call %struct.sv** @Perl_av_store(%struct.av* %cond, i32 %250, %struct.sv* %251)
  br label %if.end.417

if.end.417:                                       ; preds = %cond.end, %land.lhs.true.395, %land.lhs.true.392, %if.end.384
  br label %retry

if.end.418:                                       ; preds = %land.lhs.true.326, %if.end.324
  br label %do.body.419

do.body.419:                                      ; preds = %do.cond.522, %if.end.418
  %252 = load volatile %struct._PerlIO**, %struct._PerlIO*** @PL_rsfp, align 8
  %tobool420 = icmp ne %struct._PerlIO** %252, null
  %cond421 = select i1 %tobool420, i32 1, i32 0
  %conv422 = trunc i32 %cond421 to i8
  store i8 %conv422, i8* %bof, align 1
  %253 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %254 = load volatile %struct._PerlIO**, %struct._PerlIO*** @PL_rsfp, align 8
  %call423 = call i8* @S_filter_gets(%struct.sv* %253, %struct._PerlIO** %254, i64 0)
  store i8* %call423, i8** %s, align 8
  %cmp424 = icmp eq i8* %call423, null
  br i1 %cmp424, label %if.then.426, label %if.else.466

if.then.426:                                      ; preds = %do.body.419
  br label %fake_eof

fake_eof:                                         ; preds = %if.end.5570, %if.then.426, %sw.bb.307
  %255 = load volatile %struct._PerlIO**, %struct._PerlIO*** @PL_rsfp, align 8
  %tobool427 = icmp ne %struct._PerlIO** %255, null
  br i1 %tobool427, label %if.then.428, label %if.end.444

if.then.428:                                      ; preds = %fake_eof
  %256 = load i8, i8* @PL_preprocess, align 1
  %conv429 = sext i8 %256 to i32
  %tobool430 = icmp ne i32 %conv429, 0
  br i1 %tobool430, label %land.lhs.true.431, label %if.else.435

land.lhs.true.431:                                ; preds = %if.then.428
  %257 = load volatile i32, i32* @PL_in_eval, align 4
  %tobool432 = icmp ne i32 %257, 0
  br i1 %tobool432, label %if.else.435, label %if.then.433

if.then.433:                                      ; preds = %land.lhs.true.431
  %258 = load volatile %struct._PerlIO**, %struct._PerlIO*** @PL_rsfp, align 8
  %call434 = call i32 @Perl_my_pclose(%struct._PerlIO** %258)
  br label %if.end.443

if.else.435:                                      ; preds = %land.lhs.true.431, %if.then.428
  %259 = load volatile %struct._PerlIO**, %struct._PerlIO*** @PL_rsfp, align 8
  %call436 = call %struct._PerlIO** @Perl_PerlIO_stdin()
  %cmp437 = icmp eq %struct._PerlIO** %259, %call436
  br i1 %cmp437, label %if.then.439, label %if.else.440

if.then.439:                                      ; preds = %if.else.435
  %260 = load volatile %struct._PerlIO**, %struct._PerlIO*** @PL_rsfp, align 8
  call void @Perl_PerlIO_clearerr(%struct._PerlIO** %260)
  br label %if.end.442

if.else.440:                                      ; preds = %if.else.435
  %261 = load volatile %struct._PerlIO**, %struct._PerlIO*** @PL_rsfp, align 8
  %call441 = call i32 @Perl_PerlIO_close(%struct._PerlIO** %261)
  br label %if.end.442

if.end.442:                                       ; preds = %if.else.440, %if.then.439
  br label %if.end.443

if.end.443:                                       ; preds = %if.end.442, %if.then.433
  store volatile %struct._PerlIO** null, %struct._PerlIO*** @PL_rsfp, align 8
  store i8 0, i8* @PL_doextract, align 1
  br label %if.end.444

if.end.444:                                       ; preds = %if.end.443, %fake_eof
  %262 = load volatile i32, i32* @PL_in_eval, align 4
  %tobool445 = icmp ne i32 %262, 0
  br i1 %tobool445, label %if.end.463, label %land.lhs.true.446

land.lhs.true.446:                                ; preds = %if.end.444
  %263 = load i8, i8* @PL_minus_n, align 1
  %conv447 = sext i8 %263 to i32
  %tobool448 = icmp ne i32 %conv447, 0
  br i1 %tobool448, label %if.then.452, label %lor.lhs.false.449

lor.lhs.false.449:                                ; preds = %land.lhs.true.446
  %264 = load i8, i8* @PL_minus_p, align 1
  %conv450 = sext i8 %264 to i32
  %tobool451 = icmp ne i32 %conv450, 0
  br i1 %tobool451, label %if.then.452, label %if.end.463

if.then.452:                                      ; preds = %lor.lhs.false.449, %land.lhs.true.446
  %265 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %266 = load i8, i8* @PL_minus_p, align 1
  %conv453 = sext i8 %266 to i32
  %tobool454 = icmp ne i32 %conv453, 0
  %cond455 = select i1 %tobool454, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.23, i32 0, i32 0)
  call void @Perl_sv_setpv(%struct.sv* %265, i8* %cond455)
  %267 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_any456 = getelementptr inbounds %struct.sv, %struct.sv* %267, i32 0, i32 0
  %268 = load i8*, i8** %sv_any456, align 8
  %269 = bitcast i8* %268 to %struct.xpv*
  %xpv_pv457 = getelementptr inbounds %struct.xpv, %struct.xpv* %269, i32 0, i32 0
  %270 = load i8*, i8** %xpv_pv457, align 8
  store i8* %270, i8** @PL_linestart, align 8
  store i8* %270, i8** %s, align 8
  store i8* %270, i8** @PL_oldbufptr, align 8
  store i8* %270, i8** @PL_oldoldbufptr, align 8
  %271 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_any458 = getelementptr inbounds %struct.sv, %struct.sv* %271, i32 0, i32 0
  %272 = load i8*, i8** %sv_any458, align 8
  %273 = bitcast i8* %272 to %struct.xpv*
  %xpv_pv459 = getelementptr inbounds %struct.xpv, %struct.xpv* %273, i32 0, i32 0
  %274 = load i8*, i8** %xpv_pv459, align 8
  %275 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_any460 = getelementptr inbounds %struct.sv, %struct.sv* %275, i32 0, i32 0
  %276 = load i8*, i8** %sv_any460, align 8
  %277 = bitcast i8* %276 to %struct.xpv*
  %xpv_cur461 = getelementptr inbounds %struct.xpv, %struct.xpv* %277, i32 0, i32 1
  %278 = load i64, i64* %xpv_cur461, align 8
  %add.ptr462 = getelementptr inbounds i8, i8* %274, i64 %278
  store i8* %add.ptr462, i8** @PL_bufend, align 8
  store i8* null, i8** @PL_last_uni, align 8
  store i8* null, i8** @PL_last_lop, align 8
  store i8 0, i8* @PL_minus_p, align 1
  store i8 0, i8* @PL_minus_n, align 1
  br label %retry

if.end.463:                                       ; preds = %lor.lhs.false.449, %if.end.444
  %279 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_any464 = getelementptr inbounds %struct.sv, %struct.sv* %279, i32 0, i32 0
  %280 = load i8*, i8** %sv_any464, align 8
  %281 = bitcast i8* %280 to %struct.xpv*
  %xpv_pv465 = getelementptr inbounds %struct.xpv, %struct.xpv* %281, i32 0, i32 0
  %282 = load i8*, i8** %xpv_pv465, align 8
  store i8* %282, i8** @PL_linestart, align 8
  store i8* %282, i8** %s, align 8
  store i8* %282, i8** @PL_oldbufptr, align 8
  store i8* %282, i8** @PL_oldoldbufptr, align 8
  store i8* null, i8** @PL_last_uni, align 8
  store i8* null, i8** @PL_last_lop, align 8
  %283 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  call void @Perl_sv_setpv(%struct.sv* %283, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.24, i32 0, i32 0))
  %284 = load i8*, i8** %s, align 8
  store i8* %284, i8** @PL_bufptr, align 8
  store i32 59, i32* %retval
  br label %return

if.else.466:                                      ; preds = %do.body.419
  %285 = load i8, i8* %bof, align 1
  %conv467 = sext i8 %285 to i32
  %tobool468 = icmp ne i32 %conv467, 0
  br i1 %tobool468, label %land.lhs.true.469, label %if.end.502

land.lhs.true.469:                                ; preds = %if.else.466
  %286 = load i8*, i8** %s, align 8
  %287 = load i8, i8* %286, align 1
  %conv470 = sext i8 %287 to i32
  %cmp471 = icmp eq i32 %conv470, 0
  br i1 %cmp471, label %if.then.486, label %lor.lhs.false.473

lor.lhs.false.473:                                ; preds = %land.lhs.true.469
  %288 = load i8*, i8** %s, align 8
  %289 = load i8, i8* %288, align 1
  %conv474 = zext i8 %289 to i32
  %cmp475 = icmp eq i32 %conv474, 239
  br i1 %cmp475, label %if.then.486, label %lor.lhs.false.477

lor.lhs.false.477:                                ; preds = %lor.lhs.false.473
  %290 = load i8*, i8** %s, align 8
  %291 = load i8, i8* %290, align 1
  %conv478 = zext i8 %291 to i32
  %cmp479 = icmp sge i32 %conv478, 254
  br i1 %cmp479, label %if.then.486, label %lor.lhs.false.481

lor.lhs.false.481:                                ; preds = %lor.lhs.false.477
  %292 = load i8*, i8** %s, align 8
  %arrayidx482 = getelementptr inbounds i8, i8* %292, i64 1
  %293 = load i8, i8* %arrayidx482, align 1
  %conv483 = sext i8 %293 to i32
  %cmp484 = icmp eq i32 %conv483, 0
  br i1 %cmp484, label %if.then.486, label %if.end.502

if.then.486:                                      ; preds = %lor.lhs.false.481, %lor.lhs.false.477, %lor.lhs.false.473, %land.lhs.true.469
  %294 = load volatile %struct._PerlIO**, %struct._PerlIO*** @PL_rsfp, align 8
  %call487 = call i64 @Perl_PerlIO_tell(%struct._PerlIO** %294)
  %295 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_any488 = getelementptr inbounds %struct.sv, %struct.sv* %295, i32 0, i32 0
  %296 = load i8*, i8** %sv_any488, align 8
  %297 = bitcast i8* %296 to %struct.xpv*
  %xpv_cur489 = getelementptr inbounds %struct.xpv, %struct.xpv* %297, i32 0, i32 1
  %298 = load i64, i64* %xpv_cur489, align 8
  %cmp490 = icmp eq i64 %call487, %298
  %conv491 = zext i1 %cmp490 to i32
  %conv492 = trunc i32 %conv491 to i8
  store i8 %conv492, i8* %bof, align 1
  %299 = load i8, i8* %bof, align 1
  %tobool493 = icmp ne i8 %299, 0
  br i1 %tobool493, label %if.then.494, label %if.end.501

if.then.494:                                      ; preds = %if.then.486
  %300 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_any495 = getelementptr inbounds %struct.sv, %struct.sv* %300, i32 0, i32 0
  %301 = load i8*, i8** %sv_any495, align 8
  %302 = bitcast i8* %301 to %struct.xpv*
  %xpv_pv496 = getelementptr inbounds %struct.xpv, %struct.xpv* %302, i32 0, i32 0
  %303 = load i8*, i8** %xpv_pv496, align 8
  %304 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_any497 = getelementptr inbounds %struct.sv, %struct.sv* %304, i32 0, i32 0
  %305 = load i8*, i8** %sv_any497, align 8
  %306 = bitcast i8* %305 to %struct.xpv*
  %xpv_cur498 = getelementptr inbounds %struct.xpv, %struct.xpv* %306, i32 0, i32 1
  %307 = load i64, i64* %xpv_cur498, align 8
  %add.ptr499 = getelementptr inbounds i8, i8* %303, i64 %307
  store i8* %add.ptr499, i8** @PL_bufend, align 8
  %308 = load i8*, i8** %s, align 8
  %call500 = call i8* @S_swallow_bom(i8* %308)
  store i8* %call500, i8** %s, align 8
  br label %if.end.501

if.end.501:                                       ; preds = %if.then.494, %if.then.486
  br label %if.end.502

if.end.502:                                       ; preds = %if.end.501, %lor.lhs.false.481, %if.else.466
  br label %if.end.503

if.end.503:                                       ; preds = %if.end.502
  %309 = load i8, i8* @PL_doextract, align 1
  %tobool504 = icmp ne i8 %309, 0
  br i1 %tobool504, label %if.then.505, label %if.end.521

if.then.505:                                      ; preds = %if.end.503
  %310 = load i8*, i8** %s, align 8
  %311 = load i8, i8* %310, align 1
  %conv506 = sext i8 %311 to i32
  %cmp507 = icmp eq i32 %conv506, 61
  br i1 %cmp507, label %land.lhs.true.509, label %if.end.520

land.lhs.true.509:                                ; preds = %if.then.505
  %312 = load i8*, i8** %s, align 8
  %call510 = call i32 @strncmp(i8* %312, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.25, i32 0, i32 0), i64 4)
  %tobool511 = icmp ne i32 %call510, 0
  br i1 %tobool511, label %if.end.520, label %if.then.512

if.then.512:                                      ; preds = %land.lhs.true.509
  %313 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  call void @Perl_sv_setpv(%struct.sv* %313, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.24, i32 0, i32 0))
  %314 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_any513 = getelementptr inbounds %struct.sv, %struct.sv* %314, i32 0, i32 0
  %315 = load i8*, i8** %sv_any513, align 8
  %316 = bitcast i8* %315 to %struct.xpv*
  %xpv_pv514 = getelementptr inbounds %struct.xpv, %struct.xpv* %316, i32 0, i32 0
  %317 = load i8*, i8** %xpv_pv514, align 8
  store i8* %317, i8** @PL_linestart, align 8
  store i8* %317, i8** %s, align 8
  store i8* %317, i8** @PL_oldbufptr, align 8
  store i8* %317, i8** @PL_oldoldbufptr, align 8
  %318 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_any515 = getelementptr inbounds %struct.sv, %struct.sv* %318, i32 0, i32 0
  %319 = load i8*, i8** %sv_any515, align 8
  %320 = bitcast i8* %319 to %struct.xpv*
  %xpv_pv516 = getelementptr inbounds %struct.xpv, %struct.xpv* %320, i32 0, i32 0
  %321 = load i8*, i8** %xpv_pv516, align 8
  %322 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_any517 = getelementptr inbounds %struct.sv, %struct.sv* %322, i32 0, i32 0
  %323 = load i8*, i8** %sv_any517, align 8
  %324 = bitcast i8* %323 to %struct.xpv*
  %xpv_cur518 = getelementptr inbounds %struct.xpv, %struct.xpv* %324, i32 0, i32 1
  %325 = load i64, i64* %xpv_cur518, align 8
  %add.ptr519 = getelementptr inbounds i8, i8* %321, i64 %325
  store i8* %add.ptr519, i8** @PL_bufend, align 8
  store i8* null, i8** @PL_last_uni, align 8
  store i8* null, i8** @PL_last_lop, align 8
  store i8 0, i8* @PL_doextract, align 1
  br label %if.end.520

if.end.520:                                       ; preds = %if.then.512, %land.lhs.true.509, %if.then.505
  br label %if.end.521

if.end.521:                                       ; preds = %if.end.520, %if.end.503
  %326 = load i8*, i8** %s, align 8
  call void @S_incline(i8* %326)
  br label %do.cond.522

do.cond.522:                                      ; preds = %if.end.521
  %327 = load i8, i8* @PL_doextract, align 1
  %tobool523 = icmp ne i8 %327, 0
  br i1 %tobool523, label %do.body.419, label %do.end.524

do.end.524:                                       ; preds = %do.cond.522
  %328 = load i8*, i8** %s, align 8
  store i8* %328, i8** @PL_linestart, align 8
  store i8* %328, i8** @PL_bufptr, align 8
  store i8* %328, i8** @PL_oldbufptr, align 8
  store i8* %328, i8** @PL_oldoldbufptr, align 8
  %329 = load i32, i32* @PL_perldb, align 4
  %tobool525 = icmp ne i32 %329, 0
  br i1 %tobool525, label %land.lhs.true.526, label %if.end.561

land.lhs.true.526:                                ; preds = %do.end.524
  %330 = load i32, i32* @PL_perldb, align 4
  %and527 = and i32 %330, 2
  %tobool528 = icmp ne i32 %and527, 0
  br i1 %tobool528, label %land.lhs.true.529, label %if.end.561

land.lhs.true.529:                                ; preds = %land.lhs.true.526
  %331 = load %struct.hv*, %struct.hv** @PL_curstash, align 8
  %332 = load %struct.hv*, %struct.hv** @PL_debstash, align 8
  %cmp530 = icmp ne %struct.hv* %331, %332
  br i1 %cmp530, label %if.then.532, label %if.end.561

if.then.532:                                      ; preds = %land.lhs.true.529
  %call535 = call %struct.sv* @Perl_newSV(i64 0)
  store %struct.sv* %call535, %struct.sv** %sv534, align 8
  %333 = load %struct.sv*, %struct.sv** %sv534, align 8
  %call536 = call signext i8 @Perl_sv_upgrade(%struct.sv* %333, i32 7)
  %334 = load %struct.sv*, %struct.sv** %sv534, align 8
  %335 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  call void @Perl_sv_setsv_flags(%struct.sv* %334, %struct.sv* %335, i32 2)
  %336 = load %struct.sv*, %struct.sv** %sv534, align 8
  %sv_flags537 = getelementptr inbounds %struct.sv, %struct.sv* %336, i32 0, i32 2
  %337 = load i32, i32* %sv_flags537, align 4
  %and538 = and i32 %337, 2097152
  %tobool539 = icmp ne i32 %and538, 0
  br i1 %tobool539, label %land.rhs.540, label %land.end.543

land.rhs.540:                                     ; preds = %if.then.532
  %338 = load %struct.sv*, %struct.sv** %sv534, align 8
  %call541 = call i32 @Perl_sv_backoff(%struct.sv* %338)
  %tobool542 = icmp ne i32 %call541, 0
  br label %land.end.543

land.end.543:                                     ; preds = %land.rhs.540, %if.then.532
  %339 = phi i1 [ false, %if.then.532 ], [ %tobool542, %land.rhs.540 ]
  %land.ext544 = zext i1 %339 to i32
  %340 = load %struct.sv*, %struct.sv** %sv534, align 8
  %sv_flags545 = getelementptr inbounds %struct.sv, %struct.sv* %340, i32 0, i32 2
  %341 = load i32, i32* %sv_flags545, align 4
  %or546 = or i32 %341, 16842752
  store i32 %or546, i32* %sv_flags545, align 4
  %342 = load %struct.sv*, %struct.sv** %sv534, align 8
  %sv_any547 = getelementptr inbounds %struct.sv, %struct.sv* %342, i32 0, i32 0
  %343 = load i8*, i8** %sv_any547, align 8
  %344 = bitcast i8* %343 to %struct.xpviv*
  %xiv_iv548 = getelementptr inbounds %struct.xpviv, %struct.xpviv* %344, i32 0, i32 3
  store i64 0, i64* %xiv_iv548, align 8
  %345 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_filegv549 = getelementptr inbounds %struct.cop, %struct.cop* %345, i32 0, i32 10
  %346 = load %struct.gv*, %struct.gv** %cop_filegv549, align 8
  %tobool550 = icmp ne %struct.gv* %346, null
  br i1 %tobool550, label %cond.true.551, label %cond.false.556

cond.true.551:                                    ; preds = %land.end.543
  %347 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_filegv552 = getelementptr inbounds %struct.cop, %struct.cop* %347, i32 0, i32 10
  %348 = load %struct.gv*, %struct.gv** %cop_filegv552, align 8
  %sv_any553 = getelementptr inbounds %struct.gv, %struct.gv* %348, i32 0, i32 0
  %349 = load %struct.xpvgv*, %struct.xpvgv** %sv_any553, align 8
  %xgv_gp554 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %349, i32 0, i32 7
  %350 = load %struct.gp*, %struct.gp** %xgv_gp554, align 8
  %gp_av555 = getelementptr inbounds %struct.gp, %struct.gp* %350, i32 0, i32 4
  %351 = load %struct.av*, %struct.av** %gp_av555, align 8
  br label %cond.end.557

cond.false.556:                                   ; preds = %land.end.543
  br label %cond.end.557

cond.end.557:                                     ; preds = %cond.false.556, %cond.true.551
  %cond558 = phi %struct.av* [ %351, %cond.true.551 ], [ null, %cond.false.556 ]
  %352 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line559 = getelementptr inbounds %struct.cop, %struct.cop* %352, i32 0, i32 13
  %353 = load i32, i32* %cop_line559, align 4
  %354 = load %struct.sv*, %struct.sv** %sv534, align 8
  %call560 = call %struct.sv** @Perl_av_store(%struct.av* %cond558, i32 %353, %struct.sv* %354)
  br label %if.end.561

if.end.561:                                       ; preds = %cond.end.557, %land.lhs.true.529, %land.lhs.true.526, %do.end.524
  %355 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_any562 = getelementptr inbounds %struct.sv, %struct.sv* %355, i32 0, i32 0
  %356 = load i8*, i8** %sv_any562, align 8
  %357 = bitcast i8* %356 to %struct.xpv*
  %xpv_pv563 = getelementptr inbounds %struct.xpv, %struct.xpv* %357, i32 0, i32 0
  %358 = load i8*, i8** %xpv_pv563, align 8
  %359 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_any564 = getelementptr inbounds %struct.sv, %struct.sv* %359, i32 0, i32 0
  %360 = load i8*, i8** %sv_any564, align 8
  %361 = bitcast i8* %360 to %struct.xpv*
  %xpv_cur565 = getelementptr inbounds %struct.xpv, %struct.xpv* %361, i32 0, i32 1
  %362 = load i64, i64* %xpv_cur565, align 8
  %add.ptr566 = getelementptr inbounds i8, i8* %358, i64 %362
  store i8* %add.ptr566, i8** @PL_bufend, align 8
  store i8* null, i8** @PL_last_uni, align 8
  store i8* null, i8** @PL_last_lop, align 8
  %363 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line567 = getelementptr inbounds %struct.cop, %struct.cop* %363, i32 0, i32 13
  %364 = load i32, i32* %cop_line567, align 4
  %cmp568 = icmp eq i32 %364, 1
  br i1 %cmp568, label %if.then.570, label %if.end.977

if.then.570:                                      ; preds = %if.end.561
  br label %while.cond.571

while.cond.571:                                   ; preds = %while.body.595, %if.then.570
  %365 = load i8*, i8** %s, align 8
  %366 = load i8*, i8** @PL_bufend, align 8
  %cmp572 = icmp ult i8* %365, %366
  br i1 %cmp572, label %land.rhs.574, label %land.end.593

land.rhs.574:                                     ; preds = %while.cond.571
  %367 = load i8*, i8** %s, align 8
  %368 = load i8, i8* %367, align 1
  %conv575 = sext i8 %368 to i32
  %cmp576 = icmp eq i32 %conv575, 32
  br i1 %cmp576, label %lor.end, label %lor.lhs.false.578

lor.lhs.false.578:                                ; preds = %land.rhs.574
  %369 = load i8*, i8** %s, align 8
  %370 = load i8, i8* %369, align 1
  %conv579 = sext i8 %370 to i32
  %cmp580 = icmp eq i32 %conv579, 9
  br i1 %cmp580, label %lor.end, label %lor.lhs.false.582

lor.lhs.false.582:                                ; preds = %lor.lhs.false.578
  %371 = load i8*, i8** %s, align 8
  %372 = load i8, i8* %371, align 1
  %conv583 = sext i8 %372 to i32
  %cmp584 = icmp eq i32 %conv583, 10
  br i1 %cmp584, label %lor.end, label %lor.lhs.false.586

lor.lhs.false.586:                                ; preds = %lor.lhs.false.582
  %373 = load i8*, i8** %s, align 8
  %374 = load i8, i8* %373, align 1
  %conv587 = sext i8 %374 to i32
  %cmp588 = icmp eq i32 %conv587, 13
  br i1 %cmp588, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %lor.lhs.false.586
  %375 = load i8*, i8** %s, align 8
  %376 = load i8, i8* %375, align 1
  %conv590 = sext i8 %376 to i32
  %cmp591 = icmp eq i32 %conv590, 12
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false.586, %lor.lhs.false.582, %lor.lhs.false.578, %land.rhs.574
  %377 = phi i1 [ true, %lor.lhs.false.586 ], [ true, %lor.lhs.false.582 ], [ true, %lor.lhs.false.578 ], [ true, %land.rhs.574 ], [ %cmp591, %lor.rhs ]
  br label %land.end.593

land.end.593:                                     ; preds = %lor.end, %while.cond.571
  %378 = phi i1 [ false, %while.cond.571 ], [ %377, %lor.end ]
  br i1 %378, label %while.body.595, label %while.end.597

while.body.595:                                   ; preds = %land.end.593
  %379 = load i8*, i8** %s, align 8
  %incdec.ptr596 = getelementptr inbounds i8, i8* %379, i32 1
  store i8* %incdec.ptr596, i8** %s, align 8
  br label %while.cond.571

while.end.597:                                    ; preds = %land.end.593
  %380 = load i8*, i8** %s, align 8
  %381 = load i8, i8* %380, align 1
  %conv598 = sext i8 %381 to i32
  %cmp599 = icmp eq i32 %conv598, 58
  br i1 %cmp599, label %land.lhs.true.601, label %if.end.608

land.lhs.true.601:                                ; preds = %while.end.597
  %382 = load i8*, i8** %s, align 8
  %arrayidx602 = getelementptr inbounds i8, i8* %382, i64 1
  %383 = load i8, i8* %arrayidx602, align 1
  %conv603 = sext i8 %383 to i32
  %cmp604 = icmp ne i32 %conv603, 58
  br i1 %cmp604, label %if.then.606, label %if.end.608

if.then.606:                                      ; preds = %land.lhs.true.601
  %384 = load i8*, i8** %s, align 8
  %incdec.ptr607 = getelementptr inbounds i8, i8* %384, i32 1
  store i8* %incdec.ptr607, i8** %s, align 8
  br label %if.end.608

if.end.608:                                       ; preds = %if.then.606, %land.lhs.true.601, %while.end.597
  store i8* null, i8** %d, align 8
  %385 = load volatile i32, i32* @PL_in_eval, align 4
  %tobool609 = icmp ne i32 %385, 0
  br i1 %tobool609, label %if.end.622, label %if.then.610

if.then.610:                                      ; preds = %if.end.608
  %386 = load i8*, i8** %s, align 8
  %387 = load i8, i8* %386, align 1
  %conv611 = sext i8 %387 to i32
  %cmp612 = icmp eq i32 %conv611, 35
  br i1 %cmp612, label %land.lhs.true.614, label %if.end.621

land.lhs.true.614:                                ; preds = %if.then.610
  %388 = load i8*, i8** %s, align 8
  %add.ptr615 = getelementptr inbounds i8, i8* %388, i64 1
  %389 = load i8, i8* %add.ptr615, align 1
  %conv616 = sext i8 %389 to i32
  %cmp617 = icmp eq i32 %conv616, 33
  br i1 %cmp617, label %if.then.619, label %if.end.621

if.then.619:                                      ; preds = %land.lhs.true.614
  %390 = load i8*, i8** %s, align 8
  %add.ptr620 = getelementptr inbounds i8, i8* %390, i64 2
  store i8* %add.ptr620, i8** %d, align 8
  br label %if.end.621

if.end.621:                                       ; preds = %if.then.619, %land.lhs.true.614, %if.then.610
  br label %if.end.622

if.end.622:                                       ; preds = %if.end.621, %if.end.608
  %391 = load i8*, i8** %d, align 8
  %tobool623 = icmp ne i8* %391, null
  br i1 %tobool623, label %if.then.624, label %if.end.976

if.then.624:                                      ; preds = %if.end.622
  br label %while.cond.627

while.cond.627:                                   ; preds = %while.body.648, %if.then.624
  %392 = load i8*, i8** %d, align 8
  %393 = load i8, i8* %392, align 1
  %conv628 = sext i8 %393 to i32
  %cmp629 = icmp eq i32 %conv628, 32
  br i1 %cmp629, label %lor.end.647, label %lor.lhs.false.631

lor.lhs.false.631:                                ; preds = %while.cond.627
  %394 = load i8*, i8** %d, align 8
  %395 = load i8, i8* %394, align 1
  %conv632 = sext i8 %395 to i32
  %cmp633 = icmp eq i32 %conv632, 9
  br i1 %cmp633, label %lor.end.647, label %lor.lhs.false.635

lor.lhs.false.635:                                ; preds = %lor.lhs.false.631
  %396 = load i8*, i8** %d, align 8
  %397 = load i8, i8* %396, align 1
  %conv636 = sext i8 %397 to i32
  %cmp637 = icmp eq i32 %conv636, 10
  br i1 %cmp637, label %lor.end.647, label %lor.lhs.false.639

lor.lhs.false.639:                                ; preds = %lor.lhs.false.635
  %398 = load i8*, i8** %d, align 8
  %399 = load i8, i8* %398, align 1
  %conv640 = sext i8 %399 to i32
  %cmp641 = icmp eq i32 %conv640, 13
  br i1 %cmp641, label %lor.end.647, label %lor.rhs.643

lor.rhs.643:                                      ; preds = %lor.lhs.false.639
  %400 = load i8*, i8** %d, align 8
  %401 = load i8, i8* %400, align 1
  %conv644 = sext i8 %401 to i32
  %cmp645 = icmp eq i32 %conv644, 12
  br label %lor.end.647

lor.end.647:                                      ; preds = %lor.rhs.643, %lor.lhs.false.639, %lor.lhs.false.635, %lor.lhs.false.631, %while.cond.627
  %402 = phi i1 [ true, %lor.lhs.false.639 ], [ true, %lor.lhs.false.635 ], [ true, %lor.lhs.false.631 ], [ true, %while.cond.627 ], [ %cmp645, %lor.rhs.643 ]
  br i1 %402, label %while.body.648, label %while.end.650

while.body.648:                                   ; preds = %lor.end.647
  %403 = load i8*, i8** %d, align 8
  %incdec.ptr649 = getelementptr inbounds i8, i8* %403, i32 1
  store i8* %incdec.ptr649, i8** %d, align 8
  br label %while.cond.627

while.end.650:                                    ; preds = %lor.end.647
  %404 = load i8*, i8** %d, align 8
  store i8* %404, i8** %ipath, align 8
  br label %while.cond.651

while.cond.651:                                   ; preds = %while.body.677, %while.end.650
  %405 = load i8*, i8** %d, align 8
  %406 = load i8, i8* %405, align 1
  %conv652 = sext i8 %406 to i32
  %tobool653 = icmp ne i32 %conv652, 0
  br i1 %tobool653, label %land.rhs.654, label %land.end.675

land.rhs.654:                                     ; preds = %while.cond.651
  %407 = load i8*, i8** %d, align 8
  %408 = load i8, i8* %407, align 1
  %conv655 = sext i8 %408 to i32
  %cmp656 = icmp eq i32 %conv655, 32
  br i1 %cmp656, label %lor.end.674, label %lor.lhs.false.658

lor.lhs.false.658:                                ; preds = %land.rhs.654
  %409 = load i8*, i8** %d, align 8
  %410 = load i8, i8* %409, align 1
  %conv659 = sext i8 %410 to i32
  %cmp660 = icmp eq i32 %conv659, 9
  br i1 %cmp660, label %lor.end.674, label %lor.lhs.false.662

lor.lhs.false.662:                                ; preds = %lor.lhs.false.658
  %411 = load i8*, i8** %d, align 8
  %412 = load i8, i8* %411, align 1
  %conv663 = sext i8 %412 to i32
  %cmp664 = icmp eq i32 %conv663, 10
  br i1 %cmp664, label %lor.end.674, label %lor.lhs.false.666

lor.lhs.false.666:                                ; preds = %lor.lhs.false.662
  %413 = load i8*, i8** %d, align 8
  %414 = load i8, i8* %413, align 1
  %conv667 = sext i8 %414 to i32
  %cmp668 = icmp eq i32 %conv667, 13
  br i1 %cmp668, label %lor.end.674, label %lor.rhs.670

lor.rhs.670:                                      ; preds = %lor.lhs.false.666
  %415 = load i8*, i8** %d, align 8
  %416 = load i8, i8* %415, align 1
  %conv671 = sext i8 %416 to i32
  %cmp672 = icmp eq i32 %conv671, 12
  br label %lor.end.674

lor.end.674:                                      ; preds = %lor.rhs.670, %lor.lhs.false.666, %lor.lhs.false.662, %lor.lhs.false.658, %land.rhs.654
  %417 = phi i1 [ true, %lor.lhs.false.666 ], [ true, %lor.lhs.false.662 ], [ true, %lor.lhs.false.658 ], [ true, %land.rhs.654 ], [ %cmp672, %lor.rhs.670 ]
  %lnot = xor i1 %417, true
  br label %land.end.675

land.end.675:                                     ; preds = %lor.end.674, %while.cond.651
  %418 = phi i1 [ false, %while.cond.651 ], [ %lnot, %lor.end.674 ]
  br i1 %418, label %while.body.677, label %while.end.679

while.body.677:                                   ; preds = %land.end.675
  %419 = load i8*, i8** %d, align 8
  %incdec.ptr678 = getelementptr inbounds i8, i8* %419, i32 1
  store i8* %incdec.ptr678, i8** %d, align 8
  br label %while.cond.651

while.end.679:                                    ; preds = %land.end.675
  %420 = load i8*, i8** %d, align 8
  store i8* %420, i8** %ipathend, align 8
  %421 = load i8*, i8** %s, align 8
  %call680 = call i8* @Perl_instr(i8* %421, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26, i32 0, i32 0))
  store i8* %call680, i8** %d, align 8
  %422 = load i8*, i8** %d, align 8
  %tobool681 = icmp ne i8* %422, null
  br i1 %tobool681, label %if.end.684, label %if.then.682

if.then.682:                                      ; preds = %while.end.679
  %423 = load i8*, i8** %s, align 8
  %call683 = call i8* @Perl_instr(i8* %423, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.27, i32 0, i32 0))
  store i8* %call683, i8** %d, align 8
  br label %if.end.684

if.end.684:                                       ; preds = %if.then.682, %while.end.679
  %424 = load i8*, i8** %d, align 8
  %tobool685 = icmp ne i8* %424, null
  br i1 %tobool685, label %if.end.784, label %land.lhs.true.686

land.lhs.true.686:                                ; preds = %if.end.684
  %425 = load i8*, i8** %s, align 8
  %426 = load i8, i8* %425, align 1
  %conv687 = sext i8 %426 to i32
  %cmp688 = icmp eq i32 %conv687, 35
  br i1 %cmp688, label %land.lhs.true.690, label %if.end.784

land.lhs.true.690:                                ; preds = %land.lhs.true.686
  %427 = load i8*, i8** %ipathend, align 8
  %428 = load i8*, i8** %ipath, align 8
  %cmp691 = icmp ugt i8* %427, %428
  br i1 %cmp691, label %land.lhs.true.693, label %if.end.784

land.lhs.true.693:                                ; preds = %land.lhs.true.690
  %429 = load i8, i8* @PL_minus_c, align 1
  %tobool694 = icmp ne i8 %429, 0
  br i1 %tobool694, label %if.end.784, label %land.lhs.true.695

land.lhs.true.695:                                ; preds = %land.lhs.true.693
  %430 = load i8*, i8** %s, align 8
  %call696 = call i8* @Perl_instr(i8* %430, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i32 0, i32 0))
  %tobool697 = icmp ne i8* %call696, null
  br i1 %tobool697, label %if.end.784, label %land.lhs.true.698

land.lhs.true.698:                                ; preds = %land.lhs.true.695
  %431 = load i8**, i8*** @PL_origargv, align 8
  %arrayidx699 = getelementptr inbounds i8*, i8** %431, i64 0
  %432 = load i8*, i8** %arrayidx699, align 8
  %call700 = call i8* @Perl_instr(i8* %432, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.27, i32 0, i32 0))
  %tobool701 = icmp ne i8* %call700, null
  br i1 %tobool701, label %if.then.702, label %if.end.784

if.then.702:                                      ; preds = %land.lhs.true.698
  %433 = load i8*, i8** %ipathend, align 8
  store i8 0, i8* %433, align 1
  %434 = load i8*, i8** %ipathend, align 8
  %add.ptr704 = getelementptr inbounds i8, i8* %434, i64 1
  store i8* %add.ptr704, i8** %s, align 8
  br label %while.cond.705

while.cond.705:                                   ; preds = %while.body.731, %if.then.702
  %435 = load i8*, i8** %s, align 8
  %436 = load i8*, i8** @PL_bufend, align 8
  %cmp706 = icmp ult i8* %435, %436
  br i1 %cmp706, label %land.rhs.708, label %land.end.729

land.rhs.708:                                     ; preds = %while.cond.705
  %437 = load i8*, i8** %s, align 8
  %438 = load i8, i8* %437, align 1
  %conv709 = sext i8 %438 to i32
  %cmp710 = icmp eq i32 %conv709, 32
  br i1 %cmp710, label %lor.end.728, label %lor.lhs.false.712

lor.lhs.false.712:                                ; preds = %land.rhs.708
  %439 = load i8*, i8** %s, align 8
  %440 = load i8, i8* %439, align 1
  %conv713 = sext i8 %440 to i32
  %cmp714 = icmp eq i32 %conv713, 9
  br i1 %cmp714, label %lor.end.728, label %lor.lhs.false.716

lor.lhs.false.716:                                ; preds = %lor.lhs.false.712
  %441 = load i8*, i8** %s, align 8
  %442 = load i8, i8* %441, align 1
  %conv717 = sext i8 %442 to i32
  %cmp718 = icmp eq i32 %conv717, 10
  br i1 %cmp718, label %lor.end.728, label %lor.lhs.false.720

lor.lhs.false.720:                                ; preds = %lor.lhs.false.716
  %443 = load i8*, i8** %s, align 8
  %444 = load i8, i8* %443, align 1
  %conv721 = sext i8 %444 to i32
  %cmp722 = icmp eq i32 %conv721, 13
  br i1 %cmp722, label %lor.end.728, label %lor.rhs.724

lor.rhs.724:                                      ; preds = %lor.lhs.false.720
  %445 = load i8*, i8** %s, align 8
  %446 = load i8, i8* %445, align 1
  %conv725 = sext i8 %446 to i32
  %cmp726 = icmp eq i32 %conv725, 12
  br label %lor.end.728

lor.end.728:                                      ; preds = %lor.rhs.724, %lor.lhs.false.720, %lor.lhs.false.716, %lor.lhs.false.712, %land.rhs.708
  %447 = phi i1 [ true, %lor.lhs.false.720 ], [ true, %lor.lhs.false.716 ], [ true, %lor.lhs.false.712 ], [ true, %land.rhs.708 ], [ %cmp726, %lor.rhs.724 ]
  br label %land.end.729

land.end.729:                                     ; preds = %lor.end.728, %while.cond.705
  %448 = phi i1 [ false, %while.cond.705 ], [ %447, %lor.end.728 ]
  br i1 %448, label %while.body.731, label %while.end.733

while.body.731:                                   ; preds = %land.end.729
  %449 = load i8*, i8** %s, align 8
  %incdec.ptr732 = getelementptr inbounds i8, i8* %449, i32 1
  store i8* %incdec.ptr732, i8** %s, align 8
  br label %while.cond.705

while.end.733:                                    ; preds = %land.end.729
  %450 = load i8*, i8** %s, align 8
  %451 = load i8*, i8** @PL_bufend, align 8
  %cmp734 = icmp ult i8* %450, %451
  br i1 %cmp734, label %if.then.736, label %if.else.780

if.then.736:                                      ; preds = %while.end.733
  %452 = load i32, i32* @PL_origargc, align 4
  %add737 = add nsw i32 %452, 3
  %conv738 = sext i32 %add737 to i64
  %mul739 = mul i64 %conv738, 8
  %call740 = call i8* @Perl_safesysmalloc(i64 %mul739)
  %453 = bitcast i8* %call740 to i8**
  store i8** %453, i8*** %newargv, align 8
  %454 = load i8**, i8*** %newargv, align 8
  %455 = bitcast i8** %454 to i8*
  %456 = load i32, i32* @PL_origargc, align 4
  %add741 = add nsw i32 %456, 3
  %conv742 = sext i32 %add741 to i64
  %mul743 = mul i64 %conv742, 8
  call void @llvm.memset.p0i8.i64(i8* %455, i8 0, i64 %mul743, i32 1, i1 false)
  %457 = load i8*, i8** %s, align 8
  %458 = load i8**, i8*** %newargv, align 8
  %arrayidx744 = getelementptr inbounds i8*, i8** %458, i64 1
  store i8* %457, i8** %arrayidx744, align 8
  br label %while.cond.745

while.cond.745:                                   ; preds = %while.body.772, %if.then.736
  %459 = load i8*, i8** %s, align 8
  %460 = load i8*, i8** @PL_bufend, align 8
  %cmp746 = icmp ult i8* %459, %460
  br i1 %cmp746, label %land.rhs.748, label %land.end.770

land.rhs.748:                                     ; preds = %while.cond.745
  %461 = load i8*, i8** %s, align 8
  %462 = load i8, i8* %461, align 1
  %conv749 = sext i8 %462 to i32
  %cmp750 = icmp eq i32 %conv749, 32
  br i1 %cmp750, label %lor.end.768, label %lor.lhs.false.752

lor.lhs.false.752:                                ; preds = %land.rhs.748
  %463 = load i8*, i8** %s, align 8
  %464 = load i8, i8* %463, align 1
  %conv753 = sext i8 %464 to i32
  %cmp754 = icmp eq i32 %conv753, 9
  br i1 %cmp754, label %lor.end.768, label %lor.lhs.false.756

lor.lhs.false.756:                                ; preds = %lor.lhs.false.752
  %465 = load i8*, i8** %s, align 8
  %466 = load i8, i8* %465, align 1
  %conv757 = sext i8 %466 to i32
  %cmp758 = icmp eq i32 %conv757, 10
  br i1 %cmp758, label %lor.end.768, label %lor.lhs.false.760

lor.lhs.false.760:                                ; preds = %lor.lhs.false.756
  %467 = load i8*, i8** %s, align 8
  %468 = load i8, i8* %467, align 1
  %conv761 = sext i8 %468 to i32
  %cmp762 = icmp eq i32 %conv761, 13
  br i1 %cmp762, label %lor.end.768, label %lor.rhs.764

lor.rhs.764:                                      ; preds = %lor.lhs.false.760
  %469 = load i8*, i8** %s, align 8
  %470 = load i8, i8* %469, align 1
  %conv765 = sext i8 %470 to i32
  %cmp766 = icmp eq i32 %conv765, 12
  br label %lor.end.768

lor.end.768:                                      ; preds = %lor.rhs.764, %lor.lhs.false.760, %lor.lhs.false.756, %lor.lhs.false.752, %land.rhs.748
  %471 = phi i1 [ true, %lor.lhs.false.760 ], [ true, %lor.lhs.false.756 ], [ true, %lor.lhs.false.752 ], [ true, %land.rhs.748 ], [ %cmp766, %lor.rhs.764 ]
  %lnot769 = xor i1 %471, true
  br label %land.end.770

land.end.770:                                     ; preds = %lor.end.768, %while.cond.745
  %472 = phi i1 [ false, %while.cond.745 ], [ %lnot769, %lor.end.768 ]
  br i1 %472, label %while.body.772, label %while.end.774

while.body.772:                                   ; preds = %land.end.770
  %473 = load i8*, i8** %s, align 8
  %incdec.ptr773 = getelementptr inbounds i8, i8* %473, i32 1
  store i8* %incdec.ptr773, i8** %s, align 8
  br label %while.cond.745

while.end.774:                                    ; preds = %land.end.770
  %474 = load i8*, i8** %s, align 8
  store i8 0, i8* %474, align 1
  %475 = load i8**, i8*** %newargv, align 8
  %add.ptr775 = getelementptr inbounds i8*, i8** %475, i64 2
  %476 = bitcast i8** %add.ptr775 to i8*
  %477 = load i8**, i8*** @PL_origargv, align 8
  %add.ptr776 = getelementptr inbounds i8*, i8** %477, i64 1
  %478 = bitcast i8** %add.ptr776 to i8*
  %479 = load i32, i32* @PL_origargc, align 4
  %add777 = add nsw i32 %479, 1
  %conv778 = sext i32 %add777 to i64
  %mul779 = mul i64 %conv778, 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %476, i8* %478, i64 %mul779, i32 1, i1 false)
  br label %if.end.781

if.else.780:                                      ; preds = %while.end.733
  %480 = load i8**, i8*** @PL_origargv, align 8
  store i8** %480, i8*** %newargv, align 8
  br label %if.end.781

if.end.781:                                       ; preds = %if.else.780, %while.end.774
  %481 = load i8*, i8** %ipath, align 8
  %482 = load i8**, i8*** %newargv, align 8
  %arrayidx782 = getelementptr inbounds i8*, i8** %482, i64 0
  store i8* %481, i8** %arrayidx782, align 8
  %483 = load i8*, i8** %ipath, align 8
  %484 = load i8**, i8*** %newargv, align 8
  %call783 = call i32 @execv(i8* %483, i8** %484)
  %485 = load i8*, i8** %ipath, align 8
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.29, i32 0, i32 0), i8* %485)
  br label %if.end.784

if.end.784:                                       ; preds = %if.end.781, %land.lhs.true.698, %land.lhs.true.695, %land.lhs.true.693, %land.lhs.true.690, %land.lhs.true.686, %if.end.684
  %486 = load i8*, i8** %d, align 8
  %tobool785 = icmp ne i8* %486, null
  br i1 %tobool785, label %if.then.786, label %if.end.975

if.then.786:                                      ; preds = %if.end.784
  %487 = load i32, i32* @PL_perldb, align 4
  store i32 %487, i32* %oldpdb, align 4
  %488 = load i8, i8* @PL_minus_n, align 1
  store i8 %488, i8* %oldn, align 1
  %489 = load i8, i8* @PL_minus_p, align 1
  store i8 %489, i8* %oldp, align 1
  br label %while.cond.790

while.cond.790:                                   ; preds = %while.body.817, %if.then.786
  %490 = load i8*, i8** %d, align 8
  %491 = load i8, i8* %490, align 1
  %conv791 = sext i8 %491 to i32
  %tobool792 = icmp ne i32 %conv791, 0
  br i1 %tobool792, label %land.rhs.793, label %land.end.815

land.rhs.793:                                     ; preds = %while.cond.790
  %492 = load i8*, i8** %d, align 8
  %493 = load i8, i8* %492, align 1
  %conv794 = sext i8 %493 to i32
  %cmp795 = icmp eq i32 %conv794, 32
  br i1 %cmp795, label %lor.end.813, label %lor.lhs.false.797

lor.lhs.false.797:                                ; preds = %land.rhs.793
  %494 = load i8*, i8** %d, align 8
  %495 = load i8, i8* %494, align 1
  %conv798 = sext i8 %495 to i32
  %cmp799 = icmp eq i32 %conv798, 9
  br i1 %cmp799, label %lor.end.813, label %lor.lhs.false.801

lor.lhs.false.801:                                ; preds = %lor.lhs.false.797
  %496 = load i8*, i8** %d, align 8
  %497 = load i8, i8* %496, align 1
  %conv802 = sext i8 %497 to i32
  %cmp803 = icmp eq i32 %conv802, 10
  br i1 %cmp803, label %lor.end.813, label %lor.lhs.false.805

lor.lhs.false.805:                                ; preds = %lor.lhs.false.801
  %498 = load i8*, i8** %d, align 8
  %499 = load i8, i8* %498, align 1
  %conv806 = sext i8 %499 to i32
  %cmp807 = icmp eq i32 %conv806, 13
  br i1 %cmp807, label %lor.end.813, label %lor.rhs.809

lor.rhs.809:                                      ; preds = %lor.lhs.false.805
  %500 = load i8*, i8** %d, align 8
  %501 = load i8, i8* %500, align 1
  %conv810 = sext i8 %501 to i32
  %cmp811 = icmp eq i32 %conv810, 12
  br label %lor.end.813

lor.end.813:                                      ; preds = %lor.rhs.809, %lor.lhs.false.805, %lor.lhs.false.801, %lor.lhs.false.797, %land.rhs.793
  %502 = phi i1 [ true, %lor.lhs.false.805 ], [ true, %lor.lhs.false.801 ], [ true, %lor.lhs.false.797 ], [ true, %land.rhs.793 ], [ %cmp811, %lor.rhs.809 ]
  %lnot814 = xor i1 %502, true
  br label %land.end.815

land.end.815:                                     ; preds = %lor.end.813, %while.cond.790
  %503 = phi i1 [ false, %while.cond.790 ], [ %lnot814, %lor.end.813 ]
  br i1 %503, label %while.body.817, label %while.end.819

while.body.817:                                   ; preds = %land.end.815
  %504 = load i8*, i8** %d, align 8
  %incdec.ptr818 = getelementptr inbounds i8, i8* %504, i32 1
  store i8* %incdec.ptr818, i8** %d, align 8
  br label %while.cond.790

while.end.819:                                    ; preds = %land.end.815
  br label %while.cond.820

while.cond.820:                                   ; preds = %while.body.829, %while.end.819
  %505 = load i8*, i8** %d, align 8
  %506 = load i8, i8* %505, align 1
  %conv821 = sext i8 %506 to i32
  %cmp822 = icmp eq i32 %conv821, 32
  br i1 %cmp822, label %lor.end.828, label %lor.rhs.824

lor.rhs.824:                                      ; preds = %while.cond.820
  %507 = load i8*, i8** %d, align 8
  %508 = load i8, i8* %507, align 1
  %conv825 = sext i8 %508 to i32
  %cmp826 = icmp eq i32 %conv825, 9
  br label %lor.end.828

lor.end.828:                                      ; preds = %lor.rhs.824, %while.cond.820
  %509 = phi i1 [ true, %while.cond.820 ], [ %cmp826, %lor.rhs.824 ]
  br i1 %509, label %while.body.829, label %while.end.831

while.body.829:                                   ; preds = %lor.end.828
  %510 = load i8*, i8** %d, align 8
  %incdec.ptr830 = getelementptr inbounds i8, i8* %510, i32 1
  store i8* %incdec.ptr830, i8** %d, align 8
  br label %while.cond.820

while.end.831:                                    ; preds = %lor.end.828
  %511 = load i8*, i8** %d, align 8
  %incdec.ptr832 = getelementptr inbounds i8, i8* %511, i32 1
  store i8* %incdec.ptr832, i8** %d, align 8
  %512 = load i8, i8* %511, align 1
  %conv833 = sext i8 %512 to i32
  %cmp834 = icmp eq i32 %conv833, 45
  br i1 %cmp834, label %if.then.836, label %if.end.974

if.then.836:                                      ; preds = %while.end.831
  %513 = load i8, i8* @PL_doswitches, align 1
  store i8 %513, i8* %switches_done, align 1
  br label %do.body.838

do.body.838:                                      ; preds = %do.cond.881, %if.then.836
  %514 = load i8*, i8** %d, align 8
  %515 = load i8, i8* %514, align 1
  %conv839 = sext i8 %515 to i32
  %cmp840 = icmp eq i32 %conv839, 77
  br i1 %cmp840, label %if.then.846, label %lor.lhs.false.842

lor.lhs.false.842:                                ; preds = %do.body.838
  %516 = load i8*, i8** %d, align 8
  %517 = load i8, i8* %516, align 1
  %conv843 = sext i8 %517 to i32
  %cmp844 = icmp eq i32 %conv843, 109
  br i1 %cmp844, label %if.then.846, label %if.end.879

if.then.846:                                      ; preds = %lor.lhs.false.842, %do.body.838
  %518 = load i8*, i8** %d, align 8
  store i8* %518, i8** %m, align 8
  br label %while.cond.848

while.cond.848:                                   ; preds = %while.body.875, %if.then.846
  %519 = load i8*, i8** %d, align 8
  %520 = load i8, i8* %519, align 1
  %conv849 = sext i8 %520 to i32
  %tobool850 = icmp ne i32 %conv849, 0
  br i1 %tobool850, label %land.rhs.851, label %land.end.873

land.rhs.851:                                     ; preds = %while.cond.848
  %521 = load i8*, i8** %d, align 8
  %522 = load i8, i8* %521, align 1
  %conv852 = sext i8 %522 to i32
  %cmp853 = icmp eq i32 %conv852, 32
  br i1 %cmp853, label %lor.end.871, label %lor.lhs.false.855

lor.lhs.false.855:                                ; preds = %land.rhs.851
  %523 = load i8*, i8** %d, align 8
  %524 = load i8, i8* %523, align 1
  %conv856 = sext i8 %524 to i32
  %cmp857 = icmp eq i32 %conv856, 9
  br i1 %cmp857, label %lor.end.871, label %lor.lhs.false.859

lor.lhs.false.859:                                ; preds = %lor.lhs.false.855
  %525 = load i8*, i8** %d, align 8
  %526 = load i8, i8* %525, align 1
  %conv860 = sext i8 %526 to i32
  %cmp861 = icmp eq i32 %conv860, 10
  br i1 %cmp861, label %lor.end.871, label %lor.lhs.false.863

lor.lhs.false.863:                                ; preds = %lor.lhs.false.859
  %527 = load i8*, i8** %d, align 8
  %528 = load i8, i8* %527, align 1
  %conv864 = sext i8 %528 to i32
  %cmp865 = icmp eq i32 %conv864, 13
  br i1 %cmp865, label %lor.end.871, label %lor.rhs.867

lor.rhs.867:                                      ; preds = %lor.lhs.false.863
  %529 = load i8*, i8** %d, align 8
  %530 = load i8, i8* %529, align 1
  %conv868 = sext i8 %530 to i32
  %cmp869 = icmp eq i32 %conv868, 12
  br label %lor.end.871

lor.end.871:                                      ; preds = %lor.rhs.867, %lor.lhs.false.863, %lor.lhs.false.859, %lor.lhs.false.855, %land.rhs.851
  %531 = phi i1 [ true, %lor.lhs.false.863 ], [ true, %lor.lhs.false.859 ], [ true, %lor.lhs.false.855 ], [ true, %land.rhs.851 ], [ %cmp869, %lor.rhs.867 ]
  %lnot872 = xor i1 %531, true
  br label %land.end.873

land.end.873:                                     ; preds = %lor.end.871, %while.cond.848
  %532 = phi i1 [ false, %while.cond.848 ], [ %lnot872, %lor.end.871 ]
  br i1 %532, label %while.body.875, label %while.end.877

while.body.875:                                   ; preds = %land.end.873
  %533 = load i8*, i8** %d, align 8
  %incdec.ptr876 = getelementptr inbounds i8, i8* %533, i32 1
  store i8* %incdec.ptr876, i8** %d, align 8
  br label %while.cond.848

while.end.877:                                    ; preds = %land.end.873
  %534 = load i8*, i8** %d, align 8
  %535 = load i8*, i8** %m, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %534 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %535 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %conv878 = trunc i64 %sub.ptr.sub to i32
  %536 = load i8*, i8** %m, align 8
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.30, i32 0, i32 0), i32 %conv878, i8* %536)
  br label %if.end.879

if.end.879:                                       ; preds = %while.end.877, %lor.lhs.false.842
  %537 = load i8*, i8** %d, align 8
  %call880 = call i8* @Perl_moreswitches(i8* %537)
  store i8* %call880, i8** %d, align 8
  br label %do.cond.881

do.cond.881:                                      ; preds = %if.end.879
  %538 = load i8*, i8** %d, align 8
  %tobool882 = icmp ne i8* %538, null
  br i1 %tobool882, label %do.body.838, label %do.end.883

do.end.883:                                       ; preds = %do.cond.881
  %539 = load i8, i8* @PL_doswitches, align 1
  %conv884 = sext i8 %539 to i32
  %tobool885 = icmp ne i32 %conv884, 0
  br i1 %tobool885, label %land.lhs.true.886, label %if.end.910

land.lhs.true.886:                                ; preds = %do.end.883
  %540 = load i8, i8* %switches_done, align 1
  %tobool887 = icmp ne i8 %540, 0
  br i1 %tobool887, label %if.end.910, label %if.then.888

if.then.888:                                      ; preds = %land.lhs.true.886
  %541 = load i32, i32* @PL_origargc, align 4
  store i32 %541, i32* %argc, align 4
  %542 = load i8**, i8*** @PL_origargv, align 8
  store i8** %542, i8*** %argv, align 8
  br label %do.body.891

do.body.891:                                      ; preds = %land.end.907, %if.then.888
  %543 = load i32, i32* %argc, align 4
  %dec892 = add nsw i32 %543, -1
  store i32 %dec892, i32* %argc, align 4
  %544 = load i8**, i8*** %argv, align 8
  %incdec.ptr893 = getelementptr inbounds i8*, i8** %544, i32 1
  store i8** %incdec.ptr893, i8*** %argv, align 8
  br label %do.cond.894

do.cond.894:                                      ; preds = %do.body.891
  %545 = load i32, i32* %argc, align 4
  %tobool895 = icmp ne i32 %545, 0
  br i1 %tobool895, label %land.lhs.true.896, label %land.end.907

land.lhs.true.896:                                ; preds = %do.cond.894
  %546 = load i8**, i8*** %argv, align 8
  %arrayidx897 = getelementptr inbounds i8*, i8** %546, i64 0
  %547 = load i8*, i8** %arrayidx897, align 8
  %arrayidx898 = getelementptr inbounds i8, i8* %547, i64 0
  %548 = load i8, i8* %arrayidx898, align 1
  %conv899 = sext i8 %548 to i32
  %cmp900 = icmp eq i32 %conv899, 45
  br i1 %cmp900, label %land.rhs.902, label %land.end.907

land.rhs.902:                                     ; preds = %land.lhs.true.896
  %549 = load i8**, i8*** %argv, align 8
  %arrayidx903 = getelementptr inbounds i8*, i8** %549, i64 0
  %550 = load i8*, i8** %arrayidx903, align 8
  %arrayidx904 = getelementptr inbounds i8, i8* %550, i64 1
  %551 = load i8, i8* %arrayidx904, align 1
  %conv905 = sext i8 %551 to i32
  %tobool906 = icmp ne i32 %conv905, 0
  br label %land.end.907

land.end.907:                                     ; preds = %land.rhs.902, %land.lhs.true.896, %do.cond.894
  %552 = phi i1 [ false, %land.lhs.true.896 ], [ false, %do.cond.894 ], [ %tobool906, %land.rhs.902 ]
  br i1 %552, label %do.body.891, label %do.end.909

do.end.909:                                       ; preds = %land.end.907
  %553 = load i32, i32* %argc, align 4
  %554 = load i8**, i8*** %argv, align 8
  call void @Perl_init_argv_symbols(i32 %553, i8** %554)
  br label %if.end.910

if.end.910:                                       ; preds = %do.end.909, %land.lhs.true.886, %do.end.883
  %555 = load i32, i32* @PL_perldb, align 4
  %tobool911 = icmp ne i32 %555, 0
  br i1 %tobool911, label %land.lhs.true.912, label %lor.lhs.false.917

land.lhs.true.912:                                ; preds = %if.end.910
  %556 = load i32, i32* @PL_perldb, align 4
  %and913 = and i32 %556, 2
  %tobool914 = icmp ne i32 %and913, 0
  br i1 %tobool914, label %land.lhs.true.915, label %lor.lhs.false.917

land.lhs.true.915:                                ; preds = %land.lhs.true.912
  %557 = load i32, i32* %oldpdb, align 4
  %tobool916 = icmp ne i32 %557, 0
  br i1 %tobool916, label %lor.lhs.false.917, label %if.then.929

lor.lhs.false.917:                                ; preds = %land.lhs.true.915, %land.lhs.true.912, %if.end.910
  %558 = load i8, i8* @PL_minus_n, align 1
  %conv918 = sext i8 %558 to i32
  %tobool919 = icmp ne i32 %conv918, 0
  br i1 %tobool919, label %land.lhs.true.923, label %lor.lhs.false.920

lor.lhs.false.920:                                ; preds = %lor.lhs.false.917
  %559 = load i8, i8* @PL_minus_p, align 1
  %conv921 = sext i8 %559 to i32
  %tobool922 = icmp ne i32 %conv921, 0
  br i1 %tobool922, label %land.lhs.true.923, label %if.end.944

land.lhs.true.923:                                ; preds = %lor.lhs.false.920, %lor.lhs.false.917
  %560 = load i8, i8* %oldn, align 1
  %conv924 = sext i8 %560 to i32
  %tobool925 = icmp ne i32 %conv924, 0
  br i1 %tobool925, label %if.end.944, label %lor.lhs.false.926

lor.lhs.false.926:                                ; preds = %land.lhs.true.923
  %561 = load i8, i8* %oldp, align 1
  %conv927 = sext i8 %561 to i32
  %tobool928 = icmp ne i32 %conv927, 0
  br i1 %tobool928, label %if.end.944, label %if.then.929

if.then.929:                                      ; preds = %lor.lhs.false.926, %land.lhs.true.915
  %562 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  call void @Perl_sv_setpv(%struct.sv* %562, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.24, i32 0, i32 0))
  %563 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_any930 = getelementptr inbounds %struct.sv, %struct.sv* %563, i32 0, i32 0
  %564 = load i8*, i8** %sv_any930, align 8
  %565 = bitcast i8* %564 to %struct.xpv*
  %xpv_pv931 = getelementptr inbounds %struct.xpv, %struct.xpv* %565, i32 0, i32 0
  %566 = load i8*, i8** %xpv_pv931, align 8
  store i8* %566, i8** @PL_linestart, align 8
  store i8* %566, i8** %s, align 8
  store i8* %566, i8** @PL_oldbufptr, align 8
  store i8* %566, i8** @PL_oldoldbufptr, align 8
  %567 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_any932 = getelementptr inbounds %struct.sv, %struct.sv* %567, i32 0, i32 0
  %568 = load i8*, i8** %sv_any932, align 8
  %569 = bitcast i8* %568 to %struct.xpv*
  %xpv_pv933 = getelementptr inbounds %struct.xpv, %struct.xpv* %569, i32 0, i32 0
  %570 = load i8*, i8** %xpv_pv933, align 8
  %571 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_any934 = getelementptr inbounds %struct.sv, %struct.sv* %571, i32 0, i32 0
  %572 = load i8*, i8** %sv_any934, align 8
  %573 = bitcast i8* %572 to %struct.xpv*
  %xpv_cur935 = getelementptr inbounds %struct.xpv, %struct.xpv* %573, i32 0, i32 1
  %574 = load i64, i64* %xpv_cur935, align 8
  %add.ptr936 = getelementptr inbounds i8, i8* %570, i64 %574
  store i8* %add.ptr936, i8** @PL_bufend, align 8
  store i8* null, i8** @PL_last_uni, align 8
  store i8* null, i8** @PL_last_lop, align 8
  store i8 0, i8* @PL_preambled, align 1
  %575 = load i32, i32* @PL_perldb, align 4
  %tobool937 = icmp ne i32 %575, 0
  br i1 %tobool937, label %land.lhs.true.938, label %if.end.943

land.lhs.true.938:                                ; preds = %if.then.929
  %576 = load i32, i32* @PL_perldb, align 4
  %and939 = and i32 %576, 2
  %tobool940 = icmp ne i32 %and939, 0
  br i1 %tobool940, label %if.then.941, label %if.end.943

if.then.941:                                      ; preds = %land.lhs.true.938
  %577 = load i8*, i8** @PL_origfilename, align 8
  %call942 = call %struct.gv* @Perl_gv_fetchfile(i8* %577)
  br label %if.end.943

if.end.943:                                       ; preds = %if.then.941, %land.lhs.true.938, %if.then.929
  br label %retry

if.end.944:                                       ; preds = %lor.lhs.false.926, %land.lhs.true.923, %lor.lhs.false.920
  %578 = load i8, i8* @PL_doswitches, align 1
  %conv945 = sext i8 %578 to i32
  %tobool946 = icmp ne i32 %conv945, 0
  br i1 %tobool946, label %land.lhs.true.947, label %if.end.973

land.lhs.true.947:                                ; preds = %if.end.944
  %579 = load i8, i8* %switches_done, align 1
  %tobool948 = icmp ne i8 %579, 0
  br i1 %tobool948, label %if.end.973, label %if.then.949

if.then.949:                                      ; preds = %land.lhs.true.947
  %580 = load i32, i32* @PL_origargc, align 4
  store i32 %580, i32* %argc951, align 4
  %581 = load i8**, i8*** @PL_origargv, align 8
  store i8** %581, i8*** %argv953, align 8
  br label %do.body.954

do.body.954:                                      ; preds = %land.end.970, %if.then.949
  %582 = load i32, i32* %argc951, align 4
  %dec955 = add nsw i32 %582, -1
  store i32 %dec955, i32* %argc951, align 4
  %583 = load i8**, i8*** %argv953, align 8
  %incdec.ptr956 = getelementptr inbounds i8*, i8** %583, i32 1
  store i8** %incdec.ptr956, i8*** %argv953, align 8
  br label %do.cond.957

do.cond.957:                                      ; preds = %do.body.954
  %584 = load i32, i32* %argc951, align 4
  %tobool958 = icmp ne i32 %584, 0
  br i1 %tobool958, label %land.lhs.true.959, label %land.end.970

land.lhs.true.959:                                ; preds = %do.cond.957
  %585 = load i8**, i8*** %argv953, align 8
  %arrayidx960 = getelementptr inbounds i8*, i8** %585, i64 0
  %586 = load i8*, i8** %arrayidx960, align 8
  %arrayidx961 = getelementptr inbounds i8, i8* %586, i64 0
  %587 = load i8, i8* %arrayidx961, align 1
  %conv962 = sext i8 %587 to i32
  %cmp963 = icmp eq i32 %conv962, 45
  br i1 %cmp963, label %land.rhs.965, label %land.end.970

land.rhs.965:                                     ; preds = %land.lhs.true.959
  %588 = load i8**, i8*** %argv953, align 8
  %arrayidx966 = getelementptr inbounds i8*, i8** %588, i64 0
  %589 = load i8*, i8** %arrayidx966, align 8
  %arrayidx967 = getelementptr inbounds i8, i8* %589, i64 1
  %590 = load i8, i8* %arrayidx967, align 1
  %conv968 = sext i8 %590 to i32
  %tobool969 = icmp ne i32 %conv968, 0
  br label %land.end.970

land.end.970:                                     ; preds = %land.rhs.965, %land.lhs.true.959, %do.cond.957
  %591 = phi i1 [ false, %land.lhs.true.959 ], [ false, %do.cond.957 ], [ %tobool969, %land.rhs.965 ]
  br i1 %591, label %do.body.954, label %do.end.972

do.end.972:                                       ; preds = %land.end.970
  %592 = load i32, i32* %argc951, align 4
  %593 = load i8**, i8*** %argv953, align 8
  call void @Perl_init_argv_symbols(i32 %592, i8** %593)
  br label %if.end.973

if.end.973:                                       ; preds = %do.end.972, %land.lhs.true.947, %if.end.944
  br label %if.end.974

if.end.974:                                       ; preds = %if.end.973, %while.end.831
  br label %if.end.975

if.end.975:                                       ; preds = %if.end.974, %if.end.784
  br label %if.end.976

if.end.976:                                       ; preds = %if.end.975, %if.end.622
  br label %if.end.977

if.end.977:                                       ; preds = %if.end.976, %if.end.561
  %594 = load i32, i32* @PL_lex_formbrack, align 4
  %tobool978 = icmp ne i32 %594, 0
  br i1 %tobool978, label %land.lhs.true.979, label %if.end.984

land.lhs.true.979:                                ; preds = %if.end.977
  %595 = load i32, i32* @PL_lex_brackets, align 4
  %596 = load i32, i32* @PL_lex_formbrack, align 4
  %cmp980 = icmp sle i32 %595, %596
  br i1 %cmp980, label %if.then.982, label %if.end.984

if.then.982:                                      ; preds = %land.lhs.true.979
  %597 = load i8*, i8** %s, align 8
  store i8* %597, i8** @PL_bufptr, align 8
  store i32 1, i32* @PL_lex_state, align 4
  %call983 = call i32 @Perl_yylex()
  store i32 %call983, i32* %retval
  br label %return

if.end.984:                                       ; preds = %land.lhs.true.979, %if.end.977
  br label %retry

sw.bb.985:                                        ; preds = %retry, %retry, %retry, %retry, %retry
  %598 = load i8*, i8** %s, align 8
  %incdec.ptr986 = getelementptr inbounds i8, i8* %598, i32 1
  store i8* %incdec.ptr986, i8** %s, align 8
  br label %retry

sw.bb.987:                                        ; preds = %retry, %retry
  %599 = load i32, i32* @PL_lex_state, align 4
  %cmp988 = icmp ne i32 %599, 10
  br i1 %cmp988, label %if.then.994, label %lor.lhs.false.990

lor.lhs.false.990:                                ; preds = %sw.bb.987
  %600 = load volatile i32, i32* @PL_in_eval, align 4
  %tobool991 = icmp ne i32 %600, 0
  br i1 %tobool991, label %land.lhs.true.992, label %if.else.1038

land.lhs.true.992:                                ; preds = %lor.lhs.false.990
  %601 = load volatile %struct._PerlIO**, %struct._PerlIO*** @PL_rsfp, align 8
  %tobool993 = icmp ne %struct._PerlIO** %601, null
  br i1 %tobool993, label %if.else.1038, label %if.then.994

if.then.994:                                      ; preds = %land.lhs.true.992, %sw.bb.987
  %602 = load i8*, i8** %s, align 8
  %603 = load i8, i8* %602, align 1
  %conv995 = sext i8 %603 to i32
  %cmp996 = icmp eq i32 %conv995, 35
  br i1 %cmp996, label %land.lhs.true.998, label %if.end.1008

land.lhs.true.998:                                ; preds = %if.then.994
  %604 = load i8*, i8** %s, align 8
  %605 = load i8*, i8** @PL_linestart, align 8
  %cmp999 = icmp eq i8* %604, %605
  br i1 %cmp999, label %land.lhs.true.1001, label %if.end.1008

land.lhs.true.1001:                               ; preds = %land.lhs.true.998
  %606 = load volatile i32, i32* @PL_in_eval, align 4
  %tobool1002 = icmp ne i32 %606, 0
  br i1 %tobool1002, label %land.lhs.true.1003, label %if.end.1008

land.lhs.true.1003:                               ; preds = %land.lhs.true.1001
  %607 = load volatile %struct._PerlIO**, %struct._PerlIO*** @PL_rsfp, align 8
  %tobool1004 = icmp ne %struct._PerlIO** %607, null
  br i1 %tobool1004, label %if.end.1008, label %if.then.1005

if.then.1005:                                     ; preds = %land.lhs.true.1003
  %608 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line1006 = getelementptr inbounds %struct.cop, %struct.cop* %608, i32 0, i32 13
  %609 = load i32, i32* %cop_line1006, align 4
  %dec1007 = add i32 %609, -1
  store i32 %dec1007, i32* %cop_line1006, align 4
  %610 = load i8*, i8** %s, align 8
  call void @S_incline(i8* %610)
  br label %if.end.1008

if.end.1008:                                      ; preds = %if.then.1005, %land.lhs.true.1003, %land.lhs.true.1001, %land.lhs.true.998, %if.then.994
  %611 = load i8*, i8** @PL_bufend, align 8
  store i8* %611, i8** %d, align 8
  br label %while.cond.1009

while.cond.1009:                                  ; preds = %while.body.1018, %if.end.1008
  %612 = load i8*, i8** %s, align 8
  %613 = load i8*, i8** %d, align 8
  %cmp1010 = icmp ult i8* %612, %613
  br i1 %cmp1010, label %land.rhs.1012, label %land.end.1016

land.rhs.1012:                                    ; preds = %while.cond.1009
  %614 = load i8*, i8** %s, align 8
  %615 = load i8, i8* %614, align 1
  %conv1013 = sext i8 %615 to i32
  %cmp1014 = icmp ne i32 %conv1013, 10
  br label %land.end.1016

land.end.1016:                                    ; preds = %land.rhs.1012, %while.cond.1009
  %616 = phi i1 [ false, %while.cond.1009 ], [ %cmp1014, %land.rhs.1012 ]
  br i1 %616, label %while.body.1018, label %while.end.1020

while.body.1018:                                  ; preds = %land.end.1016
  %617 = load i8*, i8** %s, align 8
  %incdec.ptr1019 = getelementptr inbounds i8, i8* %617, i32 1
  store i8* %incdec.ptr1019, i8** %s, align 8
  br label %while.cond.1009

while.end.1020:                                   ; preds = %land.end.1016
  %618 = load i8*, i8** %s, align 8
  %619 = load i8*, i8** %d, align 8
  %cmp1021 = icmp ult i8* %618, %619
  br i1 %cmp1021, label %if.then.1023, label %if.else.1025

if.then.1023:                                     ; preds = %while.end.1020
  %620 = load i8*, i8** %s, align 8
  %incdec.ptr1024 = getelementptr inbounds i8, i8* %620, i32 1
  store i8* %incdec.ptr1024, i8** %s, align 8
  br label %if.end.1030

if.else.1025:                                     ; preds = %while.end.1020
  %621 = load i8*, i8** %s, align 8
  %622 = load i8*, i8** %d, align 8
  %cmp1026 = icmp ugt i8* %621, %622
  br i1 %cmp1026, label %if.then.1028, label %if.end.1029

if.then.1028:                                     ; preds = %if.else.1025
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.31, i32 0, i32 0))
  br label %if.end.1029

if.end.1029:                                      ; preds = %if.then.1028, %if.else.1025
  br label %if.end.1030

if.end.1030:                                      ; preds = %if.end.1029, %if.then.1023
  %623 = load i8*, i8** %s, align 8
  call void @S_incline(i8* %623)
  %624 = load i32, i32* @PL_lex_formbrack, align 4
  %tobool1031 = icmp ne i32 %624, 0
  br i1 %tobool1031, label %land.lhs.true.1032, label %if.end.1037

land.lhs.true.1032:                               ; preds = %if.end.1030
  %625 = load i32, i32* @PL_lex_brackets, align 4
  %626 = load i32, i32* @PL_lex_formbrack, align 4
  %cmp1033 = icmp sle i32 %625, %626
  br i1 %cmp1033, label %if.then.1035, label %if.end.1037

if.then.1035:                                     ; preds = %land.lhs.true.1032
  %627 = load i8*, i8** %s, align 8
  store i8* %627, i8** @PL_bufptr, align 8
  store i32 1, i32* @PL_lex_state, align 4
  %call1036 = call i32 @Perl_yylex()
  store i32 %call1036, i32* %retval
  br label %return

if.end.1037:                                      ; preds = %land.lhs.true.1032, %if.end.1030
  br label %if.end.1039

if.else.1038:                                     ; preds = %land.lhs.true.992, %lor.lhs.false.990
  %628 = load i8*, i8** %s, align 8
  store i8 0, i8* %628, align 1
  %629 = load i8*, i8** %s, align 8
  store i8* %629, i8** @PL_bufend, align 8
  br label %if.end.1039

if.end.1039:                                      ; preds = %if.else.1038, %if.end.1037
  br label %retry

sw.bb.1040:                                       ; preds = %retry
  %630 = load i8*, i8** %s, align 8
  %arrayidx1041 = getelementptr inbounds i8, i8* %630, i64 1
  %631 = load i8, i8* %arrayidx1041, align 1
  %conv1042 = sext i8 %631 to i32
  %tobool1043 = icmp ne i32 %conv1042, 0
  br i1 %tobool1043, label %land.lhs.true.1044, label %if.end.1165

land.lhs.true.1044:                               ; preds = %sw.bb.1040
  %632 = load i8*, i8** %s, align 8
  %arrayidx1045 = getelementptr inbounds i8, i8* %632, i64 1
  %633 = load i8, i8* %arrayidx1045, align 1
  %conv1046 = sext i8 %633 to i32
  %cmp1047 = icmp sge i32 %conv1046, 65
  br i1 %cmp1047, label %land.lhs.true.1049, label %lor.lhs.false.1054

land.lhs.true.1049:                               ; preds = %land.lhs.true.1044
  %634 = load i8*, i8** %s, align 8
  %arrayidx1050 = getelementptr inbounds i8, i8* %634, i64 1
  %635 = load i8, i8* %arrayidx1050, align 1
  %conv1051 = sext i8 %635 to i32
  %cmp1052 = icmp sle i32 %conv1051, 90
  br i1 %cmp1052, label %land.lhs.true.1064, label %lor.lhs.false.1054

lor.lhs.false.1054:                               ; preds = %land.lhs.true.1049, %land.lhs.true.1044
  %636 = load i8*, i8** %s, align 8
  %arrayidx1055 = getelementptr inbounds i8, i8* %636, i64 1
  %637 = load i8, i8* %arrayidx1055, align 1
  %conv1056 = sext i8 %637 to i32
  %cmp1057 = icmp sge i32 %conv1056, 97
  br i1 %cmp1057, label %land.lhs.true.1059, label %if.end.1165

land.lhs.true.1059:                               ; preds = %lor.lhs.false.1054
  %638 = load i8*, i8** %s, align 8
  %arrayidx1060 = getelementptr inbounds i8, i8* %638, i64 1
  %639 = load i8, i8* %arrayidx1060, align 1
  %conv1061 = sext i8 %639 to i32
  %cmp1062 = icmp sle i32 %conv1061, 122
  br i1 %cmp1062, label %land.lhs.true.1064, label %if.end.1165

land.lhs.true.1064:                               ; preds = %land.lhs.true.1059, %land.lhs.true.1049
  %640 = load i8*, i8** %s, align 8
  %arrayidx1065 = getelementptr inbounds i8, i8* %640, i64 2
  %641 = load i8, i8* %arrayidx1065, align 1
  %conv1066 = sext i8 %641 to i32
  %cmp1067 = icmp sge i32 %conv1066, 65
  br i1 %cmp1067, label %land.lhs.true.1069, label %lor.lhs.false.1074

land.lhs.true.1069:                               ; preds = %land.lhs.true.1064
  %642 = load i8*, i8** %s, align 8
  %arrayidx1070 = getelementptr inbounds i8, i8* %642, i64 2
  %643 = load i8, i8* %arrayidx1070, align 1
  %conv1071 = sext i8 %643 to i32
  %cmp1072 = icmp sle i32 %conv1071, 90
  br i1 %cmp1072, label %if.end.1165, label %lor.lhs.false.1074

lor.lhs.false.1074:                               ; preds = %land.lhs.true.1069, %land.lhs.true.1064
  %644 = load i8*, i8** %s, align 8
  %arrayidx1075 = getelementptr inbounds i8, i8* %644, i64 2
  %645 = load i8, i8* %arrayidx1075, align 1
  %conv1076 = sext i8 %645 to i32
  %cmp1077 = icmp sge i32 %conv1076, 97
  br i1 %cmp1077, label %land.lhs.true.1079, label %lor.lhs.false.1084

land.lhs.true.1079:                               ; preds = %lor.lhs.false.1074
  %646 = load i8*, i8** %s, align 8
  %arrayidx1080 = getelementptr inbounds i8, i8* %646, i64 2
  %647 = load i8, i8* %arrayidx1080, align 1
  %conv1081 = sext i8 %647 to i32
  %cmp1082 = icmp sle i32 %conv1081, 122
  br i1 %cmp1082, label %if.end.1165, label %lor.lhs.false.1084

lor.lhs.false.1084:                               ; preds = %land.lhs.true.1079, %lor.lhs.false.1074
  %648 = load i8*, i8** %s, align 8
  %arrayidx1085 = getelementptr inbounds i8, i8* %648, i64 2
  %649 = load i8, i8* %arrayidx1085, align 1
  %conv1086 = sext i8 %649 to i32
  %cmp1087 = icmp sge i32 %conv1086, 48
  br i1 %cmp1087, label %land.lhs.true.1089, label %lor.lhs.false.1094

land.lhs.true.1089:                               ; preds = %lor.lhs.false.1084
  %650 = load i8*, i8** %s, align 8
  %arrayidx1090 = getelementptr inbounds i8, i8* %650, i64 2
  %651 = load i8, i8* %arrayidx1090, align 1
  %conv1091 = sext i8 %651 to i32
  %cmp1092 = icmp sle i32 %conv1091, 57
  br i1 %cmp1092, label %if.end.1165, label %lor.lhs.false.1094

lor.lhs.false.1094:                               ; preds = %land.lhs.true.1089, %lor.lhs.false.1084
  %652 = load i8*, i8** %s, align 8
  %arrayidx1095 = getelementptr inbounds i8, i8* %652, i64 2
  %653 = load i8, i8* %arrayidx1095, align 1
  %conv1096 = sext i8 %653 to i32
  %cmp1097 = icmp eq i32 %conv1096, 95
  br i1 %cmp1097, label %if.end.1165, label %if.then.1099

if.then.1099:                                     ; preds = %lor.lhs.false.1094
  store i32 0, i32* %ftst, align 4
  %654 = load i8*, i8** %s, align 8
  %incdec.ptr1101 = getelementptr inbounds i8, i8* %654, i32 1
  store i8* %incdec.ptr1101, i8** %s, align 8
  %655 = load i8*, i8** %s, align 8
  store i8* %655, i8** @PL_bufptr, align 8
  %656 = load i8*, i8** %s, align 8
  %incdec.ptr1102 = getelementptr inbounds i8, i8* %656, i32 1
  store i8* %incdec.ptr1102, i8** %s, align 8
  %657 = load i8, i8* %656, align 1
  %conv1103 = sext i8 %657 to i32
  store i32 %conv1103, i32* %tmp, align 4
  br label %while.cond.1104

while.cond.1104:                                  ; preds = %while.body.1118, %if.then.1099
  %658 = load i8*, i8** %s, align 8
  %659 = load i8*, i8** @PL_bufend, align 8
  %cmp1105 = icmp ult i8* %658, %659
  br i1 %cmp1105, label %land.rhs.1107, label %land.end.1116

land.rhs.1107:                                    ; preds = %while.cond.1104
  %660 = load i8*, i8** %s, align 8
  %661 = load i8, i8* %660, align 1
  %conv1108 = sext i8 %661 to i32
  %cmp1109 = icmp eq i32 %conv1108, 32
  br i1 %cmp1109, label %lor.end.1115, label %lor.rhs.1111

lor.rhs.1111:                                     ; preds = %land.rhs.1107
  %662 = load i8*, i8** %s, align 8
  %663 = load i8, i8* %662, align 1
  %conv1112 = sext i8 %663 to i32
  %cmp1113 = icmp eq i32 %conv1112, 9
  br label %lor.end.1115

lor.end.1115:                                     ; preds = %lor.rhs.1111, %land.rhs.1107
  %664 = phi i1 [ true, %land.rhs.1107 ], [ %cmp1113, %lor.rhs.1111 ]
  br label %land.end.1116

land.end.1116:                                    ; preds = %lor.end.1115, %while.cond.1104
  %665 = phi i1 [ false, %while.cond.1104 ], [ %664, %lor.end.1115 ]
  br i1 %665, label %while.body.1118, label %while.end.1120

while.body.1118:                                  ; preds = %land.end.1116
  %666 = load i8*, i8** %s, align 8
  %incdec.ptr1119 = getelementptr inbounds i8, i8* %666, i32 1
  store i8* %incdec.ptr1119, i8** %s, align 8
  br label %while.cond.1104

while.end.1120:                                   ; preds = %land.end.1116
  %667 = load i8*, i8** %s, align 8
  %call1121 = call i32 @strncmp(i8* %667, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.32, i32 0, i32 0), i64 2)
  %tobool1122 = icmp ne i32 %call1121, 0
  br i1 %tobool1122, label %if.end.1125, label %if.then.1123

if.then.1123:                                     ; preds = %while.end.1120
  %668 = load i8*, i8** @PL_bufptr, align 8
  %call1124 = call i8* @S_force_word(i8* %668, i32 257, i32 0, i32 0, i32 0)
  store i8* %call1124, i8** %s, align 8
  store i32 1, i32* @PL_expect, align 4
  %669 = load i8*, i8** %s, align 8
  store i8* %669, i8** @PL_bufptr, align 8
  store i32 45, i32* %retval
  br label %return

if.end.1125:                                      ; preds = %while.end.1120
  %670 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %670, i8** @PL_last_uni, align 8
  %671 = load i32, i32* %tmp, align 4
  switch i32 %671, label %sw.default.1157 [
    i32 114, label %sw.bb.1126
    i32 119, label %sw.bb.1127
    i32 120, label %sw.bb.1128
    i32 111, label %sw.bb.1129
    i32 82, label %sw.bb.1130
    i32 87, label %sw.bb.1131
    i32 88, label %sw.bb.1132
    i32 79, label %sw.bb.1133
    i32 101, label %sw.bb.1134
    i32 122, label %sw.bb.1135
    i32 115, label %sw.bb.1136
    i32 102, label %sw.bb.1137
    i32 100, label %sw.bb.1138
    i32 108, label %sw.bb.1139
    i32 112, label %sw.bb.1140
    i32 83, label %sw.bb.1141
    i32 117, label %sw.bb.1142
    i32 103, label %sw.bb.1143
    i32 107, label %sw.bb.1144
    i32 98, label %sw.bb.1145
    i32 99, label %sw.bb.1146
    i32 116, label %sw.bb.1147
    i32 84, label %sw.bb.1148
    i32 66, label %sw.bb.1149
    i32 77, label %sw.bb.1150
    i32 65, label %sw.bb.1150
    i32 67, label %sw.bb.1150
  ]

sw.bb.1126:                                       ; preds = %if.end.1125
  store i32 239, i32* %ftst, align 4
  br label %sw.epilog.1158

sw.bb.1127:                                       ; preds = %if.end.1125
  store i32 240, i32* %ftst, align 4
  br label %sw.epilog.1158

sw.bb.1128:                                       ; preds = %if.end.1125
  store i32 241, i32* %ftst, align 4
  br label %sw.epilog.1158

sw.bb.1129:                                       ; preds = %if.end.1125
  store i32 243, i32* %ftst, align 4
  br label %sw.epilog.1158

sw.bb.1130:                                       ; preds = %if.end.1125
  store i32 236, i32* %ftst, align 4
  br label %sw.epilog.1158

sw.bb.1131:                                       ; preds = %if.end.1125
  store i32 237, i32* %ftst, align 4
  br label %sw.epilog.1158

sw.bb.1132:                                       ; preds = %if.end.1125
  store i32 238, i32* %ftst, align 4
  br label %sw.epilog.1158

sw.bb.1133:                                       ; preds = %if.end.1125
  store i32 244, i32* %ftst, align 4
  br label %sw.epilog.1158

sw.bb.1134:                                       ; preds = %if.end.1125
  store i32 242, i32* %ftst, align 4
  br label %sw.epilog.1158

sw.bb.1135:                                       ; preds = %if.end.1125
  store i32 245, i32* %ftst, align 4
  br label %sw.epilog.1158

sw.bb.1136:                                       ; preds = %if.end.1125
  store i32 246, i32* %ftst, align 4
  br label %sw.epilog.1158

sw.bb.1137:                                       ; preds = %if.end.1125
  store i32 253, i32* %ftst, align 4
  br label %sw.epilog.1158

sw.bb.1138:                                       ; preds = %if.end.1125
  store i32 254, i32* %ftst, align 4
  br label %sw.epilog.1158

sw.bb.1139:                                       ; preds = %if.end.1125
  store i32 256, i32* %ftst, align 4
  br label %sw.epilog.1158

sw.bb.1140:                                       ; preds = %if.end.1125
  store i32 255, i32* %ftst, align 4
  br label %sw.epilog.1158

sw.bb.1141:                                       ; preds = %if.end.1125
  store i32 250, i32* %ftst, align 4
  br label %sw.epilog.1158

sw.bb.1142:                                       ; preds = %if.end.1125
  store i32 257, i32* %ftst, align 4
  br label %sw.epilog.1158

sw.bb.1143:                                       ; preds = %if.end.1125
  store i32 258, i32* %ftst, align 4
  br label %sw.epilog.1158

sw.bb.1144:                                       ; preds = %if.end.1125
  store i32 259, i32* %ftst, align 4
  br label %sw.epilog.1158

sw.bb.1145:                                       ; preds = %if.end.1125
  store i32 252, i32* %ftst, align 4
  br label %sw.epilog.1158

sw.bb.1146:                                       ; preds = %if.end.1125
  store i32 251, i32* %ftst, align 4
  br label %sw.epilog.1158

sw.bb.1147:                                       ; preds = %if.end.1125
  store i32 260, i32* %ftst, align 4
  br label %sw.epilog.1158

sw.bb.1148:                                       ; preds = %if.end.1125
  store i32 261, i32* %ftst, align 4
  br label %sw.epilog.1158

sw.bb.1149:                                       ; preds = %if.end.1125
  store i32 262, i32* %ftst, align 4
  br label %sw.epilog.1158

sw.bb.1150:                                       ; preds = %if.end.1125, %if.end.1125, %if.end.1125
  %call1151 = call %struct.gv* @Perl_gv_fetchpv(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.33, i32 0, i32 0), i32 1, i32 4)
  %672 = load i32, i32* %tmp, align 4
  switch i32 %672, label %sw.default.1155 [
    i32 77, label %sw.bb.1152
    i32 65, label %sw.bb.1153
    i32 67, label %sw.bb.1154
  ]

sw.bb.1152:                                       ; preds = %sw.bb.1150
  store i32 247, i32* %ftst, align 4
  br label %sw.epilog.1156

sw.bb.1153:                                       ; preds = %sw.bb.1150
  store i32 248, i32* %ftst, align 4
  br label %sw.epilog.1156

sw.bb.1154:                                       ; preds = %sw.bb.1150
  store i32 249, i32* %ftst, align 4
  br label %sw.epilog.1156

sw.default.1155:                                  ; preds = %sw.bb.1150
  br label %sw.epilog.1156

sw.epilog.1156:                                   ; preds = %sw.default.1155, %sw.bb.1154, %sw.bb.1153, %sw.bb.1152
  br label %sw.epilog.1158

sw.default.1157:                                  ; preds = %if.end.1125
  br label %sw.epilog.1158

sw.epilog.1158:                                   ; preds = %sw.default.1157, %sw.epilog.1156, %sw.bb.1149, %sw.bb.1148, %sw.bb.1147, %sw.bb.1146, %sw.bb.1145, %sw.bb.1144, %sw.bb.1143, %sw.bb.1142, %sw.bb.1141, %sw.bb.1140, %sw.bb.1139, %sw.bb.1138, %sw.bb.1137, %sw.bb.1136, %sw.bb.1135, %sw.bb.1134, %sw.bb.1133, %sw.bb.1132, %sw.bb.1131, %sw.bb.1130, %sw.bb.1129, %sw.bb.1128, %sw.bb.1127, %sw.bb.1126
  %673 = load i32, i32* %ftst, align 4
  %tobool1159 = icmp ne i32 %673, 0
  br i1 %tobool1159, label %if.then.1160, label %if.else.1162

if.then.1160:                                     ; preds = %sw.epilog.1158
  %674 = load i32, i32* %ftst, align 4
  %conv1161 = trunc i32 %674 to i16
  store i16 %conv1161, i16* @PL_last_lop_op, align 2
  %675 = load i32, i32* %ftst, align 4
  store i32 %675, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %676 = load i8*, i8** %s, align 8
  store i8* %676, i8** @PL_bufptr, align 8
  store i32 285, i32* %retval
  br label %return

if.else.1162:                                     ; preds = %sw.epilog.1158
  %677 = load i8*, i8** @PL_bufptr, align 8
  %incdec.ptr1163 = getelementptr inbounds i8, i8* %677, i32 -1
  store i8* %incdec.ptr1163, i8** @PL_bufptr, align 8
  store i8* %incdec.ptr1163, i8** %s, align 8
  br label %if.end.1164

if.end.1164:                                      ; preds = %if.else.1162
  br label %if.end.1165

if.end.1165:                                      ; preds = %if.end.1164, %lor.lhs.false.1094, %land.lhs.true.1089, %land.lhs.true.1079, %land.lhs.true.1069, %land.lhs.true.1059, %lor.lhs.false.1054, %sw.bb.1040
  %678 = load i8*, i8** %s, align 8
  %incdec.ptr1166 = getelementptr inbounds i8, i8* %678, i32 1
  store i8* %incdec.ptr1166, i8** %s, align 8
  %679 = load i8, i8* %678, align 1
  %conv1167 = sext i8 %679 to i32
  store i32 %conv1167, i32* %tmp, align 4
  %680 = load i8*, i8** %s, align 8
  %681 = load i8, i8* %680, align 1
  %conv1168 = sext i8 %681 to i32
  %682 = load i32, i32* %tmp, align 4
  %cmp1169 = icmp eq i32 %conv1168, %682
  br i1 %cmp1169, label %if.then.1171, label %if.else.1185

if.then.1171:                                     ; preds = %if.end.1165
  %683 = load i8*, i8** %s, align 8
  %incdec.ptr1172 = getelementptr inbounds i8, i8* %683, i32 1
  store i8* %incdec.ptr1172, i8** %s, align 8
  %684 = load i32, i32* @PL_expect, align 4
  %cmp1173 = icmp eq i32 %684, 0
  br i1 %cmp1173, label %if.then.1175, label %if.else.1184

if.then.1175:                                     ; preds = %if.then.1171
  %685 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line1176 = getelementptr inbounds %struct.cop, %struct.cop* %685, i32 0, i32 13
  %686 = load i32, i32* %cop_line1176, align 4
  %687 = load i32, i32* @PL_copline, align 4
  %cmp1177 = icmp ult i32 %686, %687
  br i1 %cmp1177, label %cond.true.1179, label %cond.false.1181

cond.true.1179:                                   ; preds = %if.then.1175
  %688 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line1180 = getelementptr inbounds %struct.cop, %struct.cop* %688, i32 0, i32 13
  %689 = load i32, i32* %cop_line1180, align 4
  br label %cond.end.1182

cond.false.1181:                                  ; preds = %if.then.1175
  %690 = load i32, i32* @PL_copline, align 4
  br label %cond.end.1182

cond.end.1182:                                    ; preds = %cond.false.1181, %cond.true.1179
  %cond1183 = phi i32 [ %689, %cond.true.1179 ], [ %690, %cond.false.1181 ]
  store i32 %cond1183, i32* @PL_copline, align 4
  store i32 0, i32* @PL_expect, align 4
  %691 = load i8*, i8** %s, align 8
  store i8* %691, i8** @PL_bufptr, align 8
  store i32 316, i32* %retval
  br label %return

if.else.1184:                                     ; preds = %if.then.1171
  store i32 1, i32* @PL_expect, align 4
  %692 = load i8*, i8** %s, align 8
  store i8* %692, i8** @PL_bufptr, align 8
  store i32 314, i32* %retval
  br label %return

if.else.1185:                                     ; preds = %if.end.1165
  %693 = load i8*, i8** %s, align 8
  %694 = load i8, i8* %693, align 1
  %conv1186 = sext i8 %694 to i32
  %cmp1187 = icmp eq i32 %conv1186, 62
  br i1 %cmp1187, label %if.then.1189, label %if.end.1257

if.then.1189:                                     ; preds = %if.else.1185
  %695 = load i8*, i8** %s, align 8
  %incdec.ptr1190 = getelementptr inbounds i8, i8* %695, i32 1
  store i8* %incdec.ptr1190, i8** %s, align 8
  %696 = load i8*, i8** %s, align 8
  %call1191 = call i8* @S_skipspace(i8* %696)
  store i8* %call1191, i8** %s, align 8
  %697 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private1192 = getelementptr inbounds %struct.cop, %struct.cop* %697, i32 0, i32 7
  %698 = load i8, i8* %op_private1192, align 1
  %conv1193 = zext i8 %698 to i32
  %and1194 = and i32 %conv1193, 8
  %tobool1195 = icmp ne i32 %and1194, 0
  br i1 %tobool1195, label %cond.true.1214, label %lor.lhs.false.1196

lor.lhs.false.1196:                               ; preds = %if.then.1189
  %699 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %tobool1197 = icmp ne %struct.sv* %699, null
  br i1 %tobool1197, label %land.lhs.true.1198, label %lor.lhs.false.1207

land.lhs.true.1198:                               ; preds = %lor.lhs.false.1196
  %700 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_flags1199 = getelementptr inbounds %struct.sv, %struct.sv* %700, i32 0, i32 2
  %701 = load i32, i32* %sv_flags1199, align 4
  %and1200 = and i32 %701, 536870912
  %tobool1201 = icmp ne i32 %and1200, 0
  br i1 %tobool1201, label %land.lhs.true.1202, label %lor.lhs.false.1207

land.lhs.true.1202:                               ; preds = %land.lhs.true.1198
  %702 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private1203 = getelementptr inbounds %struct.cop, %struct.cop* %702, i32 0, i32 7
  %703 = load i8, i8* %op_private1203, align 1
  %conv1204 = zext i8 %703 to i32
  %and1205 = and i32 %conv1204, 8
  %tobool1206 = icmp ne i32 %and1205, 0
  br i1 %tobool1206, label %lor.lhs.false.1207, label %lor.lhs.false.1210

lor.lhs.false.1207:                               ; preds = %land.lhs.true.1202, %land.lhs.true.1198, %lor.lhs.false.1196
  %704 = load i32, i32* @PL_hints, align 4
  %and1208 = and i32 %704, 8388608
  %tobool1209 = icmp ne i32 %and1208, 0
  br i1 %tobool1209, label %lor.lhs.false.1210, label %cond.true.1214

lor.lhs.false.1210:                               ; preds = %lor.lhs.false.1207, %land.lhs.true.1202
  %705 = load i8*, i8** %s, align 8
  %706 = load i8, i8* %705, align 1
  %conv1211 = zext i8 %706 to i32
  %cmp1212 = icmp slt i32 %conv1211, 192
  br i1 %cmp1212, label %cond.true.1214, label %cond.false.1234

cond.true.1214:                                   ; preds = %lor.lhs.false.1210, %lor.lhs.false.1207, %if.then.1189
  %707 = load i8*, i8** %s, align 8
  %708 = load i8, i8* %707, align 1
  %conv1215 = sext i8 %708 to i32
  %cmp1216 = icmp sge i32 %conv1215, 65
  br i1 %cmp1216, label %land.lhs.true.1218, label %lor.lhs.false.1222

land.lhs.true.1218:                               ; preds = %cond.true.1214
  %709 = load i8*, i8** %s, align 8
  %710 = load i8, i8* %709, align 1
  %conv1219 = sext i8 %710 to i32
  %cmp1220 = icmp sle i32 %conv1219, 90
  br i1 %cmp1220, label %if.then.1241, label %lor.lhs.false.1222

lor.lhs.false.1222:                               ; preds = %land.lhs.true.1218, %cond.true.1214
  %711 = load i8*, i8** %s, align 8
  %712 = load i8, i8* %711, align 1
  %conv1223 = sext i8 %712 to i32
  %cmp1224 = icmp sge i32 %conv1223, 97
  br i1 %cmp1224, label %land.lhs.true.1226, label %lor.lhs.false.1230

land.lhs.true.1226:                               ; preds = %lor.lhs.false.1222
  %713 = load i8*, i8** %s, align 8
  %714 = load i8, i8* %713, align 1
  %conv1227 = sext i8 %714 to i32
  %cmp1228 = icmp sle i32 %conv1227, 122
  br i1 %cmp1228, label %if.then.1241, label %lor.lhs.false.1230

lor.lhs.false.1230:                               ; preds = %land.lhs.true.1226, %lor.lhs.false.1222
  %715 = load i8*, i8** %s, align 8
  %716 = load i8, i8* %715, align 1
  %conv1231 = sext i8 %716 to i32
  %cmp1232 = icmp eq i32 %conv1231, 95
  br i1 %cmp1232, label %if.then.1241, label %if.else.1243

cond.false.1234:                                  ; preds = %lor.lhs.false.1210
  %717 = load i8*, i8** %s, align 8
  %call1235 = call signext i8 @Perl_is_utf8_idcont(i8* %717)
  %conv1236 = sext i8 %call1235 to i32
  %tobool1237 = icmp ne i32 %conv1236, 0
  br i1 %tobool1237, label %land.lhs.true.1238, label %if.else.1243

land.lhs.true.1238:                               ; preds = %cond.false.1234
  %718 = load i8*, i8** %s, align 8
  %call1239 = call signext i8 @Perl_is_utf8_digit(i8* %718)
  %tobool1240 = icmp ne i8 %call1239, 0
  br i1 %tobool1240, label %if.else.1243, label %if.then.1241

if.then.1241:                                     ; preds = %land.lhs.true.1238, %lor.lhs.false.1230, %land.lhs.true.1226, %land.lhs.true.1218
  %719 = load i8*, i8** %s, align 8
  %call1242 = call i8* @S_force_word(i8* %719, i32 258, i32 0, i32 1, i32 0)
  store i8* %call1242, i8** %s, align 8
  %720 = load i8*, i8** %s, align 8
  store i8* %720, i8** @PL_bufptr, align 8
  store i32 317, i32* %retval
  br label %return

if.else.1243:                                     ; preds = %land.lhs.true.1238, %cond.false.1234, %lor.lhs.false.1230
  %721 = load i8*, i8** %s, align 8
  %722 = load i8, i8* %721, align 1
  %conv1244 = sext i8 %722 to i32
  %cmp1245 = icmp eq i32 %conv1244, 36
  br i1 %cmp1245, label %if.then.1247, label %if.else.1248

if.then.1247:                                     ; preds = %if.else.1243
  store i32 1, i32* @PL_expect, align 4
  %723 = load i8*, i8** %s, align 8
  store i8* %723, i8** @PL_bufptr, align 8
  store i32 317, i32* %retval
  br label %return

if.else.1248:                                     ; preds = %if.else.1243
  %724 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line1249 = getelementptr inbounds %struct.cop, %struct.cop* %724, i32 0, i32 13
  %725 = load i32, i32* %cop_line1249, align 4
  %726 = load i32, i32* @PL_copline, align 4
  %cmp1250 = icmp ult i32 %725, %726
  br i1 %cmp1250, label %cond.true.1252, label %cond.false.1254

cond.true.1252:                                   ; preds = %if.else.1248
  %727 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line1253 = getelementptr inbounds %struct.cop, %struct.cop* %727, i32 0, i32 13
  %728 = load i32, i32* %cop_line1253, align 4
  br label %cond.end.1255

cond.false.1254:                                  ; preds = %if.else.1248
  %729 = load i32, i32* @PL_copline, align 4
  br label %cond.end.1255

cond.end.1255:                                    ; preds = %cond.false.1254, %cond.true.1252
  %cond1256 = phi i32 [ %728, %cond.true.1252 ], [ %729, %cond.false.1254 ]
  store i32 %cond1256, i32* @PL_copline, align 4
  store i32 0, i32* @PL_expect, align 4
  %730 = load i8*, i8** %s, align 8
  store i8* %730, i8** @PL_bufptr, align 8
  store i32 317, i32* %retval
  br label %return

if.end.1257:                                      ; preds = %if.else.1185
  br label %if.end.1258

if.end.1258:                                      ; preds = %if.end.1257
  %731 = load i32, i32* @PL_expect, align 4
  %cmp1259 = icmp eq i32 %731, 0
  br i1 %cmp1259, label %if.then.1261, label %if.else.1263

if.then.1261:                                     ; preds = %if.end.1258
  store i32 64, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %732 = load i8*, i8** %s, align 8
  store i8* %732, i8** @PL_bufptr, align 8
  %call1262 = call i32 @S_ao(i32 290)
  store i32 %call1262, i32* %retval
  br label %return

if.else.1263:                                     ; preds = %if.end.1258
  %733 = load i8*, i8** %s, align 8
  %734 = load i8, i8* %733, align 1
  %conv1264 = sext i8 %734 to i32
  %cmp1265 = icmp eq i32 %conv1264, 32
  br i1 %cmp1265, label %if.then.1303, label %lor.lhs.false.1267

lor.lhs.false.1267:                               ; preds = %if.else.1263
  %735 = load i8*, i8** %s, align 8
  %736 = load i8, i8* %735, align 1
  %conv1268 = sext i8 %736 to i32
  %cmp1269 = icmp eq i32 %conv1268, 9
  br i1 %cmp1269, label %if.then.1303, label %lor.lhs.false.1271

lor.lhs.false.1271:                               ; preds = %lor.lhs.false.1267
  %737 = load i8*, i8** %s, align 8
  %738 = load i8, i8* %737, align 1
  %conv1272 = sext i8 %738 to i32
  %cmp1273 = icmp eq i32 %conv1272, 10
  br i1 %cmp1273, label %if.then.1303, label %lor.lhs.false.1275

lor.lhs.false.1275:                               ; preds = %lor.lhs.false.1271
  %739 = load i8*, i8** %s, align 8
  %740 = load i8, i8* %739, align 1
  %conv1276 = sext i8 %740 to i32
  %cmp1277 = icmp eq i32 %conv1276, 13
  br i1 %cmp1277, label %if.then.1303, label %lor.lhs.false.1279

lor.lhs.false.1279:                               ; preds = %lor.lhs.false.1275
  %741 = load i8*, i8** %s, align 8
  %742 = load i8, i8* %741, align 1
  %conv1280 = sext i8 %742 to i32
  %cmp1281 = icmp eq i32 %conv1280, 12
  br i1 %cmp1281, label %if.then.1303, label %lor.lhs.false.1283

lor.lhs.false.1283:                               ; preds = %lor.lhs.false.1279
  %743 = load i8*, i8** @PL_bufptr, align 8
  %744 = load i8, i8* %743, align 1
  %conv1284 = sext i8 %744 to i32
  %cmp1285 = icmp eq i32 %conv1284, 32
  br i1 %cmp1285, label %if.end.1304, label %lor.lhs.false.1287

lor.lhs.false.1287:                               ; preds = %lor.lhs.false.1283
  %745 = load i8*, i8** @PL_bufptr, align 8
  %746 = load i8, i8* %745, align 1
  %conv1288 = sext i8 %746 to i32
  %cmp1289 = icmp eq i32 %conv1288, 9
  br i1 %cmp1289, label %if.end.1304, label %lor.lhs.false.1291

lor.lhs.false.1291:                               ; preds = %lor.lhs.false.1287
  %747 = load i8*, i8** @PL_bufptr, align 8
  %748 = load i8, i8* %747, align 1
  %conv1292 = sext i8 %748 to i32
  %cmp1293 = icmp eq i32 %conv1292, 10
  br i1 %cmp1293, label %if.end.1304, label %lor.lhs.false.1295

lor.lhs.false.1295:                               ; preds = %lor.lhs.false.1291
  %749 = load i8*, i8** @PL_bufptr, align 8
  %750 = load i8, i8* %749, align 1
  %conv1296 = sext i8 %750 to i32
  %cmp1297 = icmp eq i32 %conv1296, 13
  br i1 %cmp1297, label %if.end.1304, label %lor.lhs.false.1299

lor.lhs.false.1299:                               ; preds = %lor.lhs.false.1295
  %751 = load i8*, i8** @PL_bufptr, align 8
  %752 = load i8, i8* %751, align 1
  %conv1300 = sext i8 %752 to i32
  %cmp1301 = icmp eq i32 %conv1300, 12
  br i1 %cmp1301, label %if.end.1304, label %if.then.1303

if.then.1303:                                     ; preds = %lor.lhs.false.1299, %lor.lhs.false.1279, %lor.lhs.false.1275, %lor.lhs.false.1271, %lor.lhs.false.1267, %if.else.1263
  call void @S_check_uni()
  br label %if.end.1304

if.end.1304:                                      ; preds = %if.then.1303, %lor.lhs.false.1299, %lor.lhs.false.1295, %lor.lhs.false.1291, %lor.lhs.false.1287, %lor.lhs.false.1283
  store i32 1, i32* @PL_expect, align 4
  %753 = load i8*, i8** %s, align 8
  store i8* %753, i8** @PL_bufptr, align 8
  store i32 45, i32* %retval
  br label %return

sw.bb.1305:                                       ; preds = %retry
  %754 = load i8*, i8** %s, align 8
  %incdec.ptr1306 = getelementptr inbounds i8, i8* %754, i32 1
  store i8* %incdec.ptr1306, i8** %s, align 8
  %755 = load i8, i8* %754, align 1
  %conv1307 = sext i8 %755 to i32
  store i32 %conv1307, i32* %tmp, align 4
  %756 = load i8*, i8** %s, align 8
  %757 = load i8, i8* %756, align 1
  %conv1308 = sext i8 %757 to i32
  %758 = load i32, i32* %tmp, align 4
  %cmp1309 = icmp eq i32 %conv1308, %758
  br i1 %cmp1309, label %if.then.1311, label %if.end.1325

if.then.1311:                                     ; preds = %sw.bb.1305
  %759 = load i8*, i8** %s, align 8
  %incdec.ptr1312 = getelementptr inbounds i8, i8* %759, i32 1
  store i8* %incdec.ptr1312, i8** %s, align 8
  %760 = load i32, i32* @PL_expect, align 4
  %cmp1313 = icmp eq i32 %760, 0
  br i1 %cmp1313, label %if.then.1315, label %if.else.1324

if.then.1315:                                     ; preds = %if.then.1311
  %761 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line1316 = getelementptr inbounds %struct.cop, %struct.cop* %761, i32 0, i32 13
  %762 = load i32, i32* %cop_line1316, align 4
  %763 = load i32, i32* @PL_copline, align 4
  %cmp1317 = icmp ult i32 %762, %763
  br i1 %cmp1317, label %cond.true.1319, label %cond.false.1321

cond.true.1319:                                   ; preds = %if.then.1315
  %764 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line1320 = getelementptr inbounds %struct.cop, %struct.cop* %764, i32 0, i32 13
  %765 = load i32, i32* %cop_line1320, align 4
  br label %cond.end.1322

cond.false.1321:                                  ; preds = %if.then.1315
  %766 = load i32, i32* @PL_copline, align 4
  br label %cond.end.1322

cond.end.1322:                                    ; preds = %cond.false.1321, %cond.true.1319
  %cond1323 = phi i32 [ %765, %cond.true.1319 ], [ %766, %cond.false.1321 ]
  store i32 %cond1323, i32* @PL_copline, align 4
  store i32 0, i32* @PL_expect, align 4
  %767 = load i8*, i8** %s, align 8
  store i8* %767, i8** @PL_bufptr, align 8
  store i32 315, i32* %retval
  br label %return

if.else.1324:                                     ; preds = %if.then.1311
  store i32 1, i32* @PL_expect, align 4
  %768 = load i8*, i8** %s, align 8
  store i8* %768, i8** @PL_bufptr, align 8
  store i32 313, i32* %retval
  br label %return

if.end.1325:                                      ; preds = %sw.bb.1305
  %769 = load i32, i32* @PL_expect, align 4
  %cmp1326 = icmp eq i32 %769, 0
  br i1 %cmp1326, label %if.then.1328, label %if.else.1330

if.then.1328:                                     ; preds = %if.end.1325
  store i32 62, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %770 = load i8*, i8** %s, align 8
  store i8* %770, i8** @PL_bufptr, align 8
  %call1329 = call i32 @S_ao(i32 290)
  store i32 %call1329, i32* %retval
  br label %return

if.else.1330:                                     ; preds = %if.end.1325
  %771 = load i8*, i8** %s, align 8
  %772 = load i8, i8* %771, align 1
  %conv1331 = sext i8 %772 to i32
  %cmp1332 = icmp eq i32 %conv1331, 32
  br i1 %cmp1332, label %if.then.1370, label %lor.lhs.false.1334

lor.lhs.false.1334:                               ; preds = %if.else.1330
  %773 = load i8*, i8** %s, align 8
  %774 = load i8, i8* %773, align 1
  %conv1335 = sext i8 %774 to i32
  %cmp1336 = icmp eq i32 %conv1335, 9
  br i1 %cmp1336, label %if.then.1370, label %lor.lhs.false.1338

lor.lhs.false.1338:                               ; preds = %lor.lhs.false.1334
  %775 = load i8*, i8** %s, align 8
  %776 = load i8, i8* %775, align 1
  %conv1339 = sext i8 %776 to i32
  %cmp1340 = icmp eq i32 %conv1339, 10
  br i1 %cmp1340, label %if.then.1370, label %lor.lhs.false.1342

lor.lhs.false.1342:                               ; preds = %lor.lhs.false.1338
  %777 = load i8*, i8** %s, align 8
  %778 = load i8, i8* %777, align 1
  %conv1343 = sext i8 %778 to i32
  %cmp1344 = icmp eq i32 %conv1343, 13
  br i1 %cmp1344, label %if.then.1370, label %lor.lhs.false.1346

lor.lhs.false.1346:                               ; preds = %lor.lhs.false.1342
  %779 = load i8*, i8** %s, align 8
  %780 = load i8, i8* %779, align 1
  %conv1347 = sext i8 %780 to i32
  %cmp1348 = icmp eq i32 %conv1347, 12
  br i1 %cmp1348, label %if.then.1370, label %lor.lhs.false.1350

lor.lhs.false.1350:                               ; preds = %lor.lhs.false.1346
  %781 = load i8*, i8** @PL_bufptr, align 8
  %782 = load i8, i8* %781, align 1
  %conv1351 = sext i8 %782 to i32
  %cmp1352 = icmp eq i32 %conv1351, 32
  br i1 %cmp1352, label %if.end.1371, label %lor.lhs.false.1354

lor.lhs.false.1354:                               ; preds = %lor.lhs.false.1350
  %783 = load i8*, i8** @PL_bufptr, align 8
  %784 = load i8, i8* %783, align 1
  %conv1355 = sext i8 %784 to i32
  %cmp1356 = icmp eq i32 %conv1355, 9
  br i1 %cmp1356, label %if.end.1371, label %lor.lhs.false.1358

lor.lhs.false.1358:                               ; preds = %lor.lhs.false.1354
  %785 = load i8*, i8** @PL_bufptr, align 8
  %786 = load i8, i8* %785, align 1
  %conv1359 = sext i8 %786 to i32
  %cmp1360 = icmp eq i32 %conv1359, 10
  br i1 %cmp1360, label %if.end.1371, label %lor.lhs.false.1362

lor.lhs.false.1362:                               ; preds = %lor.lhs.false.1358
  %787 = load i8*, i8** @PL_bufptr, align 8
  %788 = load i8, i8* %787, align 1
  %conv1363 = sext i8 %788 to i32
  %cmp1364 = icmp eq i32 %conv1363, 13
  br i1 %cmp1364, label %if.end.1371, label %lor.lhs.false.1366

lor.lhs.false.1366:                               ; preds = %lor.lhs.false.1362
  %789 = load i8*, i8** @PL_bufptr, align 8
  %790 = load i8, i8* %789, align 1
  %conv1367 = sext i8 %790 to i32
  %cmp1368 = icmp eq i32 %conv1367, 12
  br i1 %cmp1368, label %if.end.1371, label %if.then.1370

if.then.1370:                                     ; preds = %lor.lhs.false.1366, %lor.lhs.false.1346, %lor.lhs.false.1342, %lor.lhs.false.1338, %lor.lhs.false.1334, %if.else.1330
  call void @S_check_uni()
  br label %if.end.1371

if.end.1371:                                      ; preds = %if.then.1370, %lor.lhs.false.1366, %lor.lhs.false.1362, %lor.lhs.false.1358, %lor.lhs.false.1354, %lor.lhs.false.1350
  store i32 1, i32* @PL_expect, align 4
  %791 = load i8*, i8** %s, align 8
  store i8* %791, i8** @PL_bufptr, align 8
  store i32 43, i32* %retval
  br label %return

sw.bb.1372:                                       ; preds = %retry
  %792 = load i32, i32* @PL_expect, align 4
  %cmp1373 = icmp ne i32 %792, 0
  br i1 %cmp1373, label %if.then.1375, label %if.end.1388

if.then.1375:                                     ; preds = %sw.bb.1372
  %793 = load i8*, i8** %s, align 8
  %794 = load i8*, i8** @PL_bufend, align 8
  %call1376 = call i8* @S_scan_ident(i8* %793, i8* %794, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i32 0), i64 256, i32 1)
  store i8* %call1376, i8** %s, align 8
  store i32 0, i32* @PL_expect, align 4
  call void @S_force_ident(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i32 0), i32 42)
  %795 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i32 0), align 1
  %tobool1377 = icmp ne i8 %795, 0
  br i1 %tobool1377, label %if.end.1379, label %if.then.1378

if.then.1378:                                     ; preds = %if.then.1375
  store i32 2, i32* @PL_expect, align 4
  %796 = load i8*, i8** %s, align 8
  store i8* %796, i8** @PL_bufptr, align 8
  store i32 42, i32* %retval
  br label %return

if.end.1379:                                      ; preds = %if.then.1375
  %797 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line1380 = getelementptr inbounds %struct.cop, %struct.cop* %797, i32 0, i32 13
  %798 = load i32, i32* %cop_line1380, align 4
  %799 = load i32, i32* @PL_copline, align 4
  %cmp1381 = icmp ult i32 %798, %799
  br i1 %cmp1381, label %cond.true.1383, label %cond.false.1385

cond.true.1383:                                   ; preds = %if.end.1379
  %800 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line1384 = getelementptr inbounds %struct.cop, %struct.cop* %800, i32 0, i32 13
  %801 = load i32, i32* %cop_line1384, align 4
  br label %cond.end.1386

cond.false.1385:                                  ; preds = %if.end.1379
  %802 = load i32, i32* @PL_copline, align 4
  br label %cond.end.1386

cond.end.1386:                                    ; preds = %cond.false.1385, %cond.true.1383
  %cond1387 = phi i32 [ %801, %cond.true.1383 ], [ %802, %cond.false.1385 ]
  store i32 %cond1387, i32* @PL_copline, align 4
  store i32 0, i32* @PL_expect, align 4
  %803 = load i8*, i8** %s, align 8
  store i8* %803, i8** @PL_bufptr, align 8
  store i32 42, i32* %retval
  br label %return

if.end.1388:                                      ; preds = %sw.bb.1372
  %804 = load i8*, i8** %s, align 8
  %incdec.ptr1389 = getelementptr inbounds i8, i8* %804, i32 1
  store i8* %incdec.ptr1389, i8** %s, align 8
  %805 = load i8*, i8** %s, align 8
  %806 = load i8, i8* %805, align 1
  %conv1390 = sext i8 %806 to i32
  %cmp1391 = icmp eq i32 %conv1390, 42
  br i1 %cmp1391, label %if.then.1393, label %if.end.1396

if.then.1393:                                     ; preds = %if.end.1388
  %807 = load i8*, i8** %s, align 8
  %incdec.ptr1394 = getelementptr inbounds i8, i8* %807, i32 1
  store i8* %incdec.ptr1394, i8** %s, align 8
  store i32 54, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %808 = load i8*, i8** %s, align 8
  store i8* %808, i8** @PL_bufptr, align 8
  %call1395 = call i32 @S_ao(i32 312)
  store i32 %call1395, i32* %retval
  br label %return

if.end.1396:                                      ; preds = %if.end.1388
  store i32 55, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %809 = load i8*, i8** %s, align 8
  store i8* %809, i8** @PL_bufptr, align 8
  %call1397 = call i32 @S_ao(i32 289)
  store i32 %call1397, i32* %retval
  br label %return

sw.bb.1398:                                       ; preds = %retry
  %810 = load i32, i32* @PL_expect, align 4
  %cmp1399 = icmp eq i32 %810, 0
  br i1 %cmp1399, label %if.then.1401, label %if.end.1404

if.then.1401:                                     ; preds = %sw.bb.1398
  %811 = load i8*, i8** %s, align 8
  %incdec.ptr1402 = getelementptr inbounds i8, i8* %811, i32 1
  store i8* %incdec.ptr1402, i8** %s, align 8
  store i32 59, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %812 = load i8*, i8** %s, align 8
  store i8* %812, i8** @PL_bufptr, align 8
  %call1403 = call i32 @S_ao(i32 289)
  store i32 %call1403, i32* %retval
  br label %return

if.end.1404:                                      ; preds = %sw.bb.1398
  store i8 37, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i64 0), align 1
  %813 = load i8*, i8** %s, align 8
  %814 = load i8*, i8** @PL_bufend, align 8
  %call1405 = call i8* @S_scan_ident(i8* %813, i8* %814, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i64 1), i64 255, i32 1)
  store i8* %call1405, i8** %s, align 8
  %815 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i64 1), align 1
  %tobool1406 = icmp ne i8 %815, 0
  br i1 %tobool1406, label %if.end.1408, label %if.then.1407

if.then.1407:                                     ; preds = %if.end.1404
  store i32 2, i32* @PL_expect, align 4
  %816 = load i8*, i8** %s, align 8
  store i8* %816, i8** @PL_bufptr, align 8
  store i32 37, i32* %retval
  br label %return

if.end.1408:                                      ; preds = %if.end.1404
  store i8 37, i8* @PL_pending_ident, align 1
  %817 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line1409 = getelementptr inbounds %struct.cop, %struct.cop* %817, i32 0, i32 13
  %818 = load i32, i32* %cop_line1409, align 4
  %819 = load i32, i32* @PL_copline, align 4
  %cmp1410 = icmp ult i32 %818, %819
  br i1 %cmp1410, label %cond.true.1412, label %cond.false.1414

cond.true.1412:                                   ; preds = %if.end.1408
  %820 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line1413 = getelementptr inbounds %struct.cop, %struct.cop* %820, i32 0, i32 13
  %821 = load i32, i32* %cop_line1413, align 4
  br label %cond.end.1415

cond.false.1414:                                  ; preds = %if.end.1408
  %822 = load i32, i32* @PL_copline, align 4
  br label %cond.end.1415

cond.end.1415:                                    ; preds = %cond.false.1414, %cond.true.1412
  %cond1416 = phi i32 [ %821, %cond.true.1412 ], [ %822, %cond.false.1414 ]
  store i32 %cond1416, i32* @PL_copline, align 4
  store i32 0, i32* @PL_expect, align 4
  %823 = load i8*, i8** %s, align 8
  store i8* %823, i8** @PL_bufptr, align 8
  store i32 37, i32* %retval
  br label %return

sw.bb.1417:                                       ; preds = %retry
  %824 = load i8*, i8** %s, align 8
  %incdec.ptr1418 = getelementptr inbounds i8, i8* %824, i32 1
  store i8* %incdec.ptr1418, i8** %s, align 8
  store i32 92, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %825 = load i8*, i8** %s, align 8
  store i8* %825, i8** @PL_bufptr, align 8
  %call1419 = call i32 @S_ao(i32 306)
  store i32 %call1419, i32* %retval
  br label %return

sw.bb.1420:                                       ; preds = %retry
  %826 = load i32, i32* @PL_lex_brackets, align 4
  %inc1421 = add nsw i32 %826, 1
  store i32 %inc1421, i32* @PL_lex_brackets, align 4
  br label %sw.bb.1422

sw.bb.1422:                                       ; preds = %retry, %retry, %sw.bb.1420
  %827 = load i8*, i8** %s, align 8
  %incdec.ptr1423 = getelementptr inbounds i8, i8* %827, i32 1
  store i8* %incdec.ptr1423, i8** %s, align 8
  %828 = load i8, i8* %827, align 1
  %conv1424 = sext i8 %828 to i32
  store i32 %conv1424, i32* %tmp, align 4
  store i32 1, i32* @PL_expect, align 4
  %829 = load i8*, i8** %s, align 8
  store i8* %829, i8** @PL_bufptr, align 8
  %830 = load i32, i32* %tmp, align 4
  store i32 %830, i32* %retval
  br label %return

sw.bb.1425:                                       ; preds = %retry
  %831 = load i8*, i8** %s, align 8
  %arrayidx1426 = getelementptr inbounds i8, i8* %831, i64 1
  %832 = load i8, i8* %arrayidx1426, align 1
  %conv1427 = sext i8 %832 to i32
  %cmp1428 = icmp eq i32 %conv1427, 58
  br i1 %cmp1428, label %if.then.1430, label %if.end.1431

if.then.1430:                                     ; preds = %sw.bb.1425
  store i64 0, i64* %len, align 8
  br label %just_a_word

if.end.1431:                                      ; preds = %sw.bb.1425
  %833 = load i8*, i8** %s, align 8
  %incdec.ptr1432 = getelementptr inbounds i8, i8* %833, i32 1
  store i8* %incdec.ptr1432, i8** %s, align 8
  %834 = load i32, i32* @PL_expect, align 4
  switch i32 %834, label %sw.epilog.1678 [
    i32 0, label %sw.bb.1434
    i32 5, label %sw.bb.1441
    i32 6, label %sw.bb.1442
  ]

sw.bb.1434:                                       ; preds = %if.end.1431
  %835 = load i32, i32* @PL_in_my, align 4
  %tobool1435 = icmp ne i32 %835, 0
  br i1 %tobool1435, label %lor.lhs.false.1436, label %if.then.1439

lor.lhs.false.1436:                               ; preds = %sw.bb.1434
  %836 = load i32, i32* @PL_lex_state, align 4
  %cmp1437 = icmp ne i32 %836, 10
  br i1 %cmp1437, label %if.then.1439, label %if.end.1440

if.then.1439:                                     ; preds = %lor.lhs.false.1436, %sw.bb.1434
  br label %sw.epilog.1678

if.end.1440:                                      ; preds = %lor.lhs.false.1436
  %837 = load i8*, i8** %s, align 8
  store i8* %837, i8** @PL_bufptr, align 8
  br label %grabattrs

sw.bb.1441:                                       ; preds = %if.end.1431
  store i32 4, i32* @PL_expect, align 4
  br label %grabattrs

sw.bb.1442:                                       ; preds = %if.end.1431
  store i32 7, i32* @PL_expect, align 4
  br label %grabattrs

grabattrs:                                        ; preds = %sw.bb.1442, %sw.bb.1441, %if.end.1440
  %838 = load i8*, i8** %s, align 8
  %call1443 = call i8* @S_skipspace(i8* %838)
  store i8* %call1443, i8** %s, align 8
  store %struct.op* null, %struct.op** %attrs, align 8
  br label %while.cond.1444

while.cond.1444:                                  ; preds = %if.end.1623, %grabattrs
  %839 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private1445 = getelementptr inbounds %struct.cop, %struct.cop* %839, i32 0, i32 7
  %840 = load i8, i8* %op_private1445, align 1
  %conv1446 = zext i8 %840 to i32
  %and1447 = and i32 %conv1446, 8
  %tobool1448 = icmp ne i32 %and1447, 0
  br i1 %tobool1448, label %cond.true.1467, label %lor.lhs.false.1449

lor.lhs.false.1449:                               ; preds = %while.cond.1444
  %841 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %tobool1450 = icmp ne %struct.sv* %841, null
  br i1 %tobool1450, label %land.lhs.true.1451, label %lor.lhs.false.1460

land.lhs.true.1451:                               ; preds = %lor.lhs.false.1449
  %842 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_flags1452 = getelementptr inbounds %struct.sv, %struct.sv* %842, i32 0, i32 2
  %843 = load i32, i32* %sv_flags1452, align 4
  %and1453 = and i32 %843, 536870912
  %tobool1454 = icmp ne i32 %and1453, 0
  br i1 %tobool1454, label %land.lhs.true.1455, label %lor.lhs.false.1460

land.lhs.true.1455:                               ; preds = %land.lhs.true.1451
  %844 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private1456 = getelementptr inbounds %struct.cop, %struct.cop* %844, i32 0, i32 7
  %845 = load i8, i8* %op_private1456, align 1
  %conv1457 = zext i8 %845 to i32
  %and1458 = and i32 %conv1457, 8
  %tobool1459 = icmp ne i32 %and1458, 0
  br i1 %tobool1459, label %lor.lhs.false.1460, label %lor.lhs.false.1463

lor.lhs.false.1460:                               ; preds = %land.lhs.true.1455, %land.lhs.true.1451, %lor.lhs.false.1449
  %846 = load i32, i32* @PL_hints, align 4
  %and1461 = and i32 %846, 8388608
  %tobool1462 = icmp ne i32 %and1461, 0
  br i1 %tobool1462, label %lor.lhs.false.1463, label %cond.true.1467

lor.lhs.false.1463:                               ; preds = %lor.lhs.false.1460, %land.lhs.true.1455
  %847 = load i8*, i8** %s, align 8
  %848 = load i8, i8* %847, align 1
  %conv1464 = zext i8 %848 to i32
  %cmp1465 = icmp slt i32 %conv1464, 192
  br i1 %cmp1465, label %cond.true.1467, label %cond.false.1488

cond.true.1467:                                   ; preds = %lor.lhs.false.1463, %lor.lhs.false.1460, %while.cond.1444
  %849 = load i8*, i8** %s, align 8
  %850 = load i8, i8* %849, align 1
  %conv1468 = sext i8 %850 to i32
  %cmp1469 = icmp sge i32 %conv1468, 65
  br i1 %cmp1469, label %land.lhs.true.1471, label %lor.lhs.false.1475

land.lhs.true.1471:                               ; preds = %cond.true.1467
  %851 = load i8*, i8** %s, align 8
  %852 = load i8, i8* %851, align 1
  %conv1472 = sext i8 %852 to i32
  %cmp1473 = icmp sle i32 %conv1472, 90
  br i1 %cmp1473, label %lor.end.1487, label %lor.lhs.false.1475

lor.lhs.false.1475:                               ; preds = %land.lhs.true.1471, %cond.true.1467
  %853 = load i8*, i8** %s, align 8
  %854 = load i8, i8* %853, align 1
  %conv1476 = sext i8 %854 to i32
  %cmp1477 = icmp sge i32 %conv1476, 97
  br i1 %cmp1477, label %land.lhs.true.1479, label %lor.rhs.1483

land.lhs.true.1479:                               ; preds = %lor.lhs.false.1475
  %855 = load i8*, i8** %s, align 8
  %856 = load i8, i8* %855, align 1
  %conv1480 = sext i8 %856 to i32
  %cmp1481 = icmp sle i32 %conv1480, 122
  br i1 %cmp1481, label %lor.end.1487, label %lor.rhs.1483

lor.rhs.1483:                                     ; preds = %land.lhs.true.1479, %lor.lhs.false.1475
  %857 = load i8*, i8** %s, align 8
  %858 = load i8, i8* %857, align 1
  %conv1484 = sext i8 %858 to i32
  %cmp1485 = icmp eq i32 %conv1484, 95
  br label %lor.end.1487

lor.end.1487:                                     ; preds = %lor.rhs.1483, %land.lhs.true.1479, %land.lhs.true.1471
  %859 = phi i1 [ true, %land.lhs.true.1479 ], [ true, %land.lhs.true.1471 ], [ %cmp1485, %lor.rhs.1483 ]
  %lor.ext = zext i1 %859 to i32
  br label %cond.end.1498

cond.false.1488:                                  ; preds = %lor.lhs.false.1463
  %860 = load i8*, i8** %s, align 8
  %call1489 = call signext i8 @Perl_is_utf8_idcont(i8* %860)
  %conv1490 = sext i8 %call1489 to i32
  %tobool1491 = icmp ne i32 %conv1490, 0
  br i1 %tobool1491, label %land.rhs.1492, label %land.end.1496

land.rhs.1492:                                    ; preds = %cond.false.1488
  %861 = load i8*, i8** %s, align 8
  %call1493 = call signext i8 @Perl_is_utf8_digit(i8* %861)
  %tobool1494 = icmp ne i8 %call1493, 0
  %lnot1495 = xor i1 %tobool1494, true
  br label %land.end.1496

land.end.1496:                                    ; preds = %land.rhs.1492, %cond.false.1488
  %862 = phi i1 [ false, %cond.false.1488 ], [ %lnot1495, %land.rhs.1492 ]
  %land.ext1497 = zext i1 %862 to i32
  br label %cond.end.1498

cond.end.1498:                                    ; preds = %land.end.1496, %lor.end.1487
  %cond1499 = phi i32 [ %lor.ext, %lor.end.1487 ], [ %land.ext1497, %land.end.1496 ]
  %tobool1500 = icmp ne i32 %cond1499, 0
  br i1 %tobool1500, label %while.body.1501, label %while.end.1624

while.body.1501:                                  ; preds = %cond.end.1498
  %863 = load i8*, i8** %s, align 8
  %call1502 = call i8* @S_scan_word(i8* %863, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i32 0), i64 256, i32 0, i64* %len)
  store i8* %call1502, i8** %d, align 8
  %864 = load i8*, i8** %s, align 8
  %865 = load i8, i8* %864, align 1
  %conv1503 = sext i8 %865 to i32
  %cmp1504 = icmp sge i32 %conv1503, 97
  br i1 %cmp1504, label %land.lhs.true.1506, label %if.end.1522

land.lhs.true.1506:                               ; preds = %while.body.1501
  %866 = load i8*, i8** %s, align 8
  %867 = load i8, i8* %866, align 1
  %conv1507 = sext i8 %867 to i32
  %cmp1508 = icmp sle i32 %conv1507, 122
  br i1 %cmp1508, label %land.lhs.true.1510, label %if.end.1522

land.lhs.true.1510:                               ; preds = %land.lhs.true.1506
  %868 = load i64, i64* %len, align 8
  %conv1511 = trunc i64 %868 to i32
  %call1512 = call i32 @Perl_keyword(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i32 0), i32 %conv1511)
  store i32 %call1512, i32* %tmp, align 4
  %tobool1513 = icmp ne i32 %call1512, 0
  br i1 %tobool1513, label %if.then.1514, label %if.end.1522

if.then.1514:                                     ; preds = %land.lhs.true.1510
  %869 = load i32, i32* %tmp, align 4
  %cmp1515 = icmp slt i32 %869, 0
  br i1 %cmp1515, label %if.then.1517, label %if.end.1518

if.then.1517:                                     ; preds = %if.then.1514
  %870 = load i32, i32* %tmp, align 4
  %sub = sub nsw i32 0, %870
  store i32 %sub, i32* %tmp, align 4
  br label %if.end.1518

if.end.1518:                                      ; preds = %if.then.1517, %if.then.1514
  %871 = load i32, i32* %tmp, align 4
  switch i32 %871, label %sw.default.1520 [
    i32 135, label %sw.bb.1519
    i32 16, label %sw.bb.1519
    i32 62, label %sw.bb.1519
    i32 227, label %sw.bb.1519
    i32 100, label %sw.bb.1519
    i32 241, label %sw.bb.1519
    i32 232, label %sw.bb.1519
  ]

sw.bb.1519:                                       ; preds = %if.end.1518, %if.end.1518, %if.end.1518, %if.end.1518, %if.end.1518, %if.end.1518, %if.end.1518
  br label %got_attrs

sw.default.1520:                                  ; preds = %if.end.1518
  br label %sw.epilog.1521

sw.epilog.1521:                                   ; preds = %sw.default.1520
  br label %if.end.1522

if.end.1522:                                      ; preds = %sw.epilog.1521, %land.lhs.true.1510, %land.lhs.true.1506, %while.body.1501
  %872 = load i8*, i8** %d, align 8
  %873 = load i8, i8* %872, align 1
  %conv1523 = sext i8 %873 to i32
  %cmp1524 = icmp eq i32 %conv1523, 40
  br i1 %cmp1524, label %if.then.1526, label %if.end.1536

if.then.1526:                                     ; preds = %if.end.1522
  %874 = load i8*, i8** %d, align 8
  %call1527 = call i8* @S_scan_str(i8* %874, i32 1, i32 1)
  store i8* %call1527, i8** %d, align 8
  %875 = load i8*, i8** %d, align 8
  %tobool1528 = icmp ne i8* %875, null
  br i1 %tobool1528, label %if.end.1535, label %if.then.1529

if.then.1529:                                     ; preds = %if.then.1526
  %876 = load i8*, i8** %s, align 8
  %877 = load i64, i64* %len, align 8
  %add.ptr1530 = getelementptr inbounds i8, i8* %876, i64 %877
  store i8* %add.ptr1530, i8** @PL_bufptr, align 8
  %call1531 = call i32 @Perl_yyerror(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.34, i32 0, i32 0))
  %878 = load %struct.op*, %struct.op** %attrs, align 8
  %tobool1532 = icmp ne %struct.op* %878, null
  br i1 %tobool1532, label %if.then.1533, label %if.end.1534

if.then.1533:                                     ; preds = %if.then.1529
  %879 = load %struct.op*, %struct.op** %attrs, align 8
  call void @Perl_op_free(%struct.op* %879)
  br label %if.end.1534

if.end.1534:                                      ; preds = %if.then.1533, %if.then.1529
  store i32 0, i32* %retval
  br label %return

if.end.1535:                                      ; preds = %if.then.1526
  br label %if.end.1536

if.end.1536:                                      ; preds = %if.end.1535, %if.end.1522
  %880 = load %struct.sv*, %struct.sv** @PL_lex_stuff, align 8
  %tobool1537 = icmp ne %struct.sv* %880, null
  br i1 %tobool1537, label %if.then.1538, label %if.else.1544

if.then.1538:                                     ; preds = %if.end.1536
  %881 = load i8*, i8** %s, align 8
  %882 = load i64, i64* %len, align 8
  %call1541 = call %struct.sv* @Perl_newSVpvn(i8* %881, i64 %882)
  store %struct.sv* %call1541, %struct.sv** %sv1540, align 8
  %883 = load %struct.sv*, %struct.sv** %sv1540, align 8
  %884 = load %struct.sv*, %struct.sv** @PL_lex_stuff, align 8
  call void @Perl_sv_catsv_flags(%struct.sv* %883, %struct.sv* %884, i32 2)
  %885 = load %struct.op*, %struct.op** %attrs, align 8
  %886 = load %struct.sv*, %struct.sv** %sv1540, align 8
  %call1542 = call %struct.op* @Perl_newSVOP(i32 5, i32 0, %struct.sv* %886)
  %call1543 = call %struct.op* @Perl_append_elem(i32 141, %struct.op* %885, %struct.op* %call1542)
  store %struct.op* %call1543, %struct.op** %attrs, align 8
  %887 = load %struct.sv*, %struct.sv** @PL_lex_stuff, align 8
  call void @Perl_sv_free(%struct.sv* %887)
  store %struct.sv* null, %struct.sv** @PL_lex_stuff, align 8
  br label %if.end.1605

if.else.1544:                                     ; preds = %if.end.1536
  %888 = load i64, i64* %len, align 8
  %cmp1545 = icmp eq i64 %888, 6
  br i1 %cmp1545, label %land.lhs.true.1547, label %if.else.1556

land.lhs.true.1547:                               ; preds = %if.else.1544
  %889 = load i8*, i8** %s, align 8
  %890 = load i64, i64* %len, align 8
  %call1548 = call i32 @strncmp(i8* %889, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.35, i32 0, i32 0), i64 %890)
  %tobool1549 = icmp ne i32 %call1548, 0
  br i1 %tobool1549, label %if.else.1556, label %if.then.1550

if.then.1550:                                     ; preds = %land.lhs.true.1547
  %891 = load i32, i32* @PL_in_my, align 4
  %cmp1551 = icmp eq i32 %891, 137
  br i1 %cmp1551, label %if.then.1553, label %if.else.1554

if.then.1553:                                     ; preds = %if.then.1550
  br label %if.end.1555

if.else.1554:                                     ; preds = %if.then.1550
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.36, i32 0, i32 0))
  br label %if.end.1555

if.end.1555:                                      ; preds = %if.else.1554, %if.then.1553
  br label %if.end.1604

if.else.1556:                                     ; preds = %land.lhs.true.1547, %if.else.1544
  %892 = load i32, i32* @PL_in_my, align 4
  %tobool1557 = icmp ne i32 %892, 0
  br i1 %tobool1557, label %if.else.1569, label %land.lhs.true.1558

land.lhs.true.1558:                               ; preds = %if.else.1556
  %893 = load i64, i64* %len, align 8
  %cmp1559 = icmp eq i64 %893, 6
  br i1 %cmp1559, label %land.lhs.true.1561, label %if.else.1569

land.lhs.true.1561:                               ; preds = %land.lhs.true.1558
  %894 = load i8*, i8** %s, align 8
  %895 = load i64, i64* %len, align 8
  %call1562 = call i32 @strncmp(i8* %894, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.37, i32 0, i32 0), i64 %895)
  %tobool1563 = icmp ne i32 %call1562, 0
  br i1 %tobool1563, label %if.else.1569, label %if.then.1564

if.then.1564:                                     ; preds = %land.lhs.true.1561
  %896 = load %struct.cv*, %struct.cv** @PL_compcv, align 8
  %sv_any1565 = getelementptr inbounds %struct.cv, %struct.cv* %896, i32 0, i32 0
  %897 = load %struct.xpvcv*, %struct.xpvcv** %sv_any1565, align 8
  %xcv_flags = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %897, i32 0, i32 17
  %898 = load i16, i16* %xcv_flags, align 2
  %conv1566 = zext i16 %898 to i32
  %or1567 = or i32 %conv1566, 256
  %conv1568 = trunc i32 %or1567 to i16
  store i16 %conv1568, i16* %xcv_flags, align 2
  br label %if.end.1603

if.else.1569:                                     ; preds = %land.lhs.true.1561, %land.lhs.true.1558, %if.else.1556
  %899 = load i32, i32* @PL_in_my, align 4
  %tobool1570 = icmp ne i32 %899, 0
  br i1 %tobool1570, label %if.else.1583, label %land.lhs.true.1571

land.lhs.true.1571:                               ; preds = %if.else.1569
  %900 = load i64, i64* %len, align 8
  %cmp1572 = icmp eq i64 %900, 6
  br i1 %cmp1572, label %land.lhs.true.1574, label %if.else.1583

land.lhs.true.1574:                               ; preds = %land.lhs.true.1571
  %901 = load i8*, i8** %s, align 8
  %902 = load i64, i64* %len, align 8
  %call1575 = call i32 @strncmp(i8* %901, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.38, i32 0, i32 0), i64 %902)
  %tobool1576 = icmp ne i32 %call1575, 0
  br i1 %tobool1576, label %if.else.1583, label %if.then.1577

if.then.1577:                                     ; preds = %land.lhs.true.1574
  %903 = load %struct.cv*, %struct.cv** @PL_compcv, align 8
  %sv_any1578 = getelementptr inbounds %struct.cv, %struct.cv* %903, i32 0, i32 0
  %904 = load %struct.xpvcv*, %struct.xpvcv** %sv_any1578, align 8
  %xcv_flags1579 = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %904, i32 0, i32 17
  %905 = load i16, i16* %xcv_flags1579, align 2
  %conv1580 = zext i16 %905 to i32
  %or1581 = or i32 %conv1580, 128
  %conv1582 = trunc i32 %or1581 to i16
  store i16 %conv1582, i16* %xcv_flags1579, align 2
  br label %if.end.1602

if.else.1583:                                     ; preds = %land.lhs.true.1574, %land.lhs.true.1571, %if.else.1569
  %906 = load i32, i32* @PL_in_my, align 4
  %tobool1584 = icmp ne i32 %906, 0
  br i1 %tobool1584, label %if.else.1597, label %land.lhs.true.1585

land.lhs.true.1585:                               ; preds = %if.else.1583
  %907 = load i64, i64* %len, align 8
  %cmp1586 = icmp eq i64 %907, 6
  br i1 %cmp1586, label %land.lhs.true.1588, label %if.else.1597

land.lhs.true.1588:                               ; preds = %land.lhs.true.1585
  %908 = load i8*, i8** %s, align 8
  %909 = load i64, i64* %len, align 8
  %call1589 = call i32 @strncmp(i8* %908, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.39, i32 0, i32 0), i64 %909)
  %tobool1590 = icmp ne i32 %call1589, 0
  br i1 %tobool1590, label %if.else.1597, label %if.then.1591

if.then.1591:                                     ; preds = %land.lhs.true.1588
  %910 = load %struct.cv*, %struct.cv** @PL_compcv, align 8
  %sv_any1592 = getelementptr inbounds %struct.cv, %struct.cv* %910, i32 0, i32 0
  %911 = load %struct.xpvcv*, %struct.xpvcv** %sv_any1592, align 8
  %xcv_flags1593 = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %911, i32 0, i32 17
  %912 = load i16, i16* %xcv_flags1593, align 2
  %conv1594 = zext i16 %912 to i32
  %or1595 = or i32 %conv1594, 64
  %conv1596 = trunc i32 %or1595 to i16
  store i16 %conv1596, i16* %xcv_flags1593, align 2
  br label %if.end.1601

if.else.1597:                                     ; preds = %land.lhs.true.1588, %land.lhs.true.1585, %if.else.1583
  %913 = load %struct.op*, %struct.op** %attrs, align 8
  %914 = load i8*, i8** %s, align 8
  %915 = load i64, i64* %len, align 8
  %call1598 = call %struct.sv* @Perl_newSVpvn(i8* %914, i64 %915)
  %call1599 = call %struct.op* @Perl_newSVOP(i32 5, i32 0, %struct.sv* %call1598)
  %call1600 = call %struct.op* @Perl_append_elem(i32 141, %struct.op* %913, %struct.op* %call1599)
  store %struct.op* %call1600, %struct.op** %attrs, align 8
  br label %if.end.1601

if.end.1601:                                      ; preds = %if.else.1597, %if.then.1591
  br label %if.end.1602

if.end.1602:                                      ; preds = %if.end.1601, %if.then.1577
  br label %if.end.1603

if.end.1603:                                      ; preds = %if.end.1602, %if.then.1564
  br label %if.end.1604

if.end.1604:                                      ; preds = %if.end.1603, %if.end.1555
  br label %if.end.1605

if.end.1605:                                      ; preds = %if.end.1604, %if.then.1538
  %916 = load i8*, i8** %d, align 8
  %call1606 = call i8* @S_skipspace(i8* %916)
  store i8* %call1606, i8** %s, align 8
  %917 = load i8*, i8** %s, align 8
  %918 = load i8, i8* %917, align 1
  %conv1607 = sext i8 %918 to i32
  %cmp1608 = icmp eq i32 %conv1607, 58
  br i1 %cmp1608, label %land.lhs.true.1610, label %if.else.1618

land.lhs.true.1610:                               ; preds = %if.end.1605
  %919 = load i8*, i8** %s, align 8
  %arrayidx1611 = getelementptr inbounds i8, i8* %919, i64 1
  %920 = load i8, i8* %arrayidx1611, align 1
  %conv1612 = sext i8 %920 to i32
  %cmp1613 = icmp ne i32 %conv1612, 58
  br i1 %cmp1613, label %if.then.1615, label %if.else.1618

if.then.1615:                                     ; preds = %land.lhs.true.1610
  %921 = load i8*, i8** %s, align 8
  %add.ptr1616 = getelementptr inbounds i8, i8* %921, i64 1
  %call1617 = call i8* @S_skipspace(i8* %add.ptr1616)
  store i8* %call1617, i8** %s, align 8
  br label %if.end.1623

if.else.1618:                                     ; preds = %land.lhs.true.1610, %if.end.1605
  %922 = load i8*, i8** %s, align 8
  %923 = load i8*, i8** %d, align 8
  %cmp1619 = icmp eq i8* %922, %923
  br i1 %cmp1619, label %if.then.1621, label %if.end.1622

if.then.1621:                                     ; preds = %if.else.1618
  br label %while.end.1624

if.end.1622:                                      ; preds = %if.else.1618
  br label %if.end.1623

if.end.1623:                                      ; preds = %if.end.1622, %if.then.1615
  br label %while.cond.1444

while.end.1624:                                   ; preds = %if.then.1621, %cond.end.1498
  %924 = load i32, i32* @PL_expect, align 4
  %cmp1625 = icmp eq i32 %924, 0
  %cond1627 = select i1 %cmp1625, i32 61, i32 123
  store i32 %cond1627, i32* %tmp, align 4
  %925 = load i8*, i8** %s, align 8
  %926 = load i8, i8* %925, align 1
  %conv1628 = sext i8 %926 to i32
  %cmp1629 = icmp ne i32 %conv1628, 59
  br i1 %cmp1629, label %land.lhs.true.1631, label %if.end.1672

land.lhs.true.1631:                               ; preds = %while.end.1624
  %927 = load i8*, i8** %s, align 8
  %928 = load i8, i8* %927, align 1
  %conv1632 = sext i8 %928 to i32
  %cmp1633 = icmp ne i32 %conv1632, 125
  br i1 %cmp1633, label %land.lhs.true.1635, label %if.end.1672

land.lhs.true.1635:                               ; preds = %land.lhs.true.1631
  %929 = load i8*, i8** %s, align 8
  %930 = load i8, i8* %929, align 1
  %conv1636 = sext i8 %930 to i32
  %931 = load i32, i32* %tmp, align 4
  %cmp1637 = icmp ne i32 %conv1636, %931
  br i1 %cmp1637, label %land.lhs.true.1639, label %if.end.1672

land.lhs.true.1639:                               ; preds = %land.lhs.true.1635
  %932 = load i32, i32* %tmp, align 4
  %cmp1640 = icmp ne i32 %932, 61
  br i1 %cmp1640, label %if.then.1646, label %lor.lhs.false.1642

lor.lhs.false.1642:                               ; preds = %land.lhs.true.1639
  %933 = load i8*, i8** %s, align 8
  %934 = load i8, i8* %933, align 1
  %conv1643 = sext i8 %934 to i32
  %cmp1644 = icmp ne i32 %conv1643, 41
  br i1 %cmp1644, label %if.then.1646, label %if.end.1672

if.then.1646:                                     ; preds = %lor.lhs.false.1642, %land.lhs.true.1639
  %935 = load i8*, i8** %s, align 8
  %936 = load i8, i8* %935, align 1
  %conv1648 = sext i8 %936 to i32
  %cmp1649 = icmp eq i32 %conv1648, 39
  %cond1651 = select i1 %cmp1649, i32 34, i32 39
  %conv1652 = trunc i32 %cond1651 to i8
  store i8 %conv1652, i8* %q, align 1
  %937 = load i32, i32* %tmp, align 4
  %cmp1653 = icmp eq i32 %937, 61
  br i1 %cmp1653, label %land.lhs.true.1655, label %if.end.1658

land.lhs.true.1655:                               ; preds = %if.then.1646
  %938 = load %struct.op*, %struct.op** %attrs, align 8
  %tobool1656 = icmp ne %struct.op* %938, null
  br i1 %tobool1656, label %if.end.1658, label %if.then.1657

if.then.1657:                                     ; preds = %land.lhs.true.1655
  %939 = load i8*, i8** @PL_bufptr, align 8
  store i8* %939, i8** %s, align 8
  br label %sw.epilog.1678

if.end.1658:                                      ; preds = %land.lhs.true.1655, %if.then.1646
  %940 = load i8*, i8** %s, align 8
  store i8* %940, i8** @PL_bufptr, align 8
  %941 = load i8*, i8** %s, align 8
  %942 = load i8, i8* %941, align 1
  %tobool1659 = icmp ne i8 %942, 0
  br i1 %tobool1659, label %if.else.1662, label %if.then.1660

if.then.1660:                                     ; preds = %if.end.1658
  %call1661 = call i32 @Perl_yyerror(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.40, i32 0, i32 0))
  br label %if.end.1668

if.else.1662:                                     ; preds = %if.end.1658
  %943 = load i8, i8* %q, align 1
  %conv1663 = sext i8 %943 to i32
  %944 = load i8*, i8** %s, align 8
  %945 = load i8, i8* %944, align 1
  %conv1664 = sext i8 %945 to i32
  %946 = load i8, i8* %q, align 1
  %conv1665 = sext i8 %946 to i32
  %call1666 = call i8* (i8*, ...) @Perl_form(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.41, i32 0, i32 0), i32 %conv1663, i32 %conv1664, i32 %conv1665)
  %call1667 = call i32 @Perl_yyerror(i8* %call1666)
  br label %if.end.1668

if.end.1668:                                      ; preds = %if.else.1662, %if.then.1660
  %947 = load %struct.op*, %struct.op** %attrs, align 8
  %tobool1669 = icmp ne %struct.op* %947, null
  br i1 %tobool1669, label %if.then.1670, label %if.end.1671

if.then.1670:                                     ; preds = %if.end.1668
  %948 = load %struct.op*, %struct.op** %attrs, align 8
  call void @Perl_op_free(%struct.op* %948)
  br label %if.end.1671

if.end.1671:                                      ; preds = %if.then.1670, %if.end.1668
  store i32 1, i32* @PL_expect, align 4
  %949 = load i8*, i8** %s, align 8
  store i8* %949, i8** @PL_bufptr, align 8
  store i32 58, i32* %retval
  br label %return

if.end.1672:                                      ; preds = %lor.lhs.false.1642, %land.lhs.true.1635, %land.lhs.true.1631, %while.end.1624
  br label %got_attrs

got_attrs:                                        ; preds = %if.end.1672, %sw.bb.1519
  %950 = load %struct.op*, %struct.op** %attrs, align 8
  %tobool1673 = icmp ne %struct.op* %950, null
  br i1 %tobool1673, label %if.then.1674, label %if.end.1677

if.then.1674:                                     ; preds = %got_attrs
  %951 = load %struct.op*, %struct.op** %attrs, align 8
  %952 = load i32, i32* @PL_nexttoke, align 4
  %idxprom1675 = sext i32 %952 to i64
  %arrayidx1676 = getelementptr inbounds [5 x %union.YYSTYPE], [5 x %union.YYSTYPE]* @PL_nextval, i32 0, i64 %idxprom1675
  %opval = bitcast %union.YYSTYPE* %arrayidx1676 to %struct.op**
  store %struct.op* %951, %struct.op** %opval, align 8
  call void @S_force_next(i32 260)
  br label %if.end.1677

if.end.1677:                                      ; preds = %if.then.1674, %got_attrs
  %953 = load i8*, i8** %s, align 8
  store i8* %953, i8** @PL_bufptr, align 8
  store i32 298, i32* %retval
  br label %return

sw.epilog.1678:                                   ; preds = %if.end.1431, %if.then.1657, %if.then.1439
  store i32 1, i32* @PL_expect, align 4
  %954 = load i8*, i8** %s, align 8
  store i8* %954, i8** @PL_bufptr, align 8
  store i32 58, i32* %retval
  br label %return

sw.bb.1679:                                       ; preds = %retry
  %955 = load i8*, i8** %s, align 8
  %incdec.ptr1680 = getelementptr inbounds i8, i8* %955, i32 1
  store i8* %incdec.ptr1680, i8** %s, align 8
  %956 = load i8*, i8** @PL_last_lop, align 8
  %957 = load i8*, i8** @PL_oldoldbufptr, align 8
  %cmp1681 = icmp eq i8* %956, %957
  br i1 %cmp1681, label %if.then.1686, label %lor.lhs.false.1683

lor.lhs.false.1683:                               ; preds = %sw.bb.1679
  %958 = load i8*, i8** @PL_last_uni, align 8
  %959 = load i8*, i8** @PL_oldoldbufptr, align 8
  %cmp1684 = icmp eq i8* %958, %959
  br i1 %cmp1684, label %if.then.1686, label %if.else.1687

if.then.1686:                                     ; preds = %lor.lhs.false.1683, %sw.bb.1679
  %960 = load i8*, i8** @PL_oldoldbufptr, align 8
  store i8* %960, i8** @PL_oldbufptr, align 8
  br label %if.end.1688

if.else.1687:                                     ; preds = %lor.lhs.false.1683
  store i32 1, i32* @PL_expect, align 4
  br label %if.end.1688

if.end.1688:                                      ; preds = %if.else.1687, %if.then.1686
  %961 = load i8*, i8** %s, align 8
  %call1689 = call i8* @S_skipspace(i8* %961)
  store i8* %call1689, i8** %s, align 8
  %962 = load i8*, i8** %s, align 8
  store i8* %962, i8** @PL_bufptr, align 8
  store i32 40, i32* %retval
  br label %return

sw.bb.1690:                                       ; preds = %retry
  %963 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line1691 = getelementptr inbounds %struct.cop, %struct.cop* %963, i32 0, i32 13
  %964 = load i32, i32* %cop_line1691, align 4
  %965 = load i32, i32* @PL_copline, align 4
  %cmp1692 = icmp ult i32 %964, %965
  br i1 %cmp1692, label %cond.true.1694, label %cond.false.1696

cond.true.1694:                                   ; preds = %sw.bb.1690
  %966 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line1695 = getelementptr inbounds %struct.cop, %struct.cop* %966, i32 0, i32 13
  %967 = load i32, i32* %cop_line1695, align 4
  br label %cond.end.1697

cond.false.1696:                                  ; preds = %sw.bb.1690
  %968 = load i32, i32* @PL_copline, align 4
  br label %cond.end.1697

cond.end.1697:                                    ; preds = %cond.false.1696, %cond.true.1694
  %cond1698 = phi i32 [ %967, %cond.true.1694 ], [ %968, %cond.false.1696 ]
  store i32 %cond1698, i32* @PL_copline, align 4
  %969 = load i8*, i8** %s, align 8
  %incdec.ptr1699 = getelementptr inbounds i8, i8* %969, i32 1
  store i8* %incdec.ptr1699, i8** %s, align 8
  %970 = load i8, i8* %969, align 1
  %conv1700 = sext i8 %970 to i32
  store i32 %conv1700, i32* %tmp, align 4
  store i32 1, i32* @PL_expect, align 4
  %971 = load i8*, i8** %s, align 8
  store i8* %971, i8** @PL_bufptr, align 8
  %972 = load i32, i32* %tmp, align 4
  store i32 %972, i32* %retval
  br label %return

sw.bb.1701:                                       ; preds = %retry
  %973 = load i8*, i8** %s, align 8
  %incdec.ptr1702 = getelementptr inbounds i8, i8* %973, i32 1
  store i8* %incdec.ptr1702, i8** %s, align 8
  %974 = load i8, i8* %973, align 1
  %conv1703 = sext i8 %974 to i32
  store i32 %conv1703, i32* %tmp, align 4
  %975 = load i8*, i8** %s, align 8
  %call1704 = call i8* @S_skipspace(i8* %975)
  store i8* %call1704, i8** %s, align 8
  %976 = load i8*, i8** %s, align 8
  %977 = load i8, i8* %976, align 1
  %conv1705 = sext i8 %977 to i32
  %cmp1706 = icmp eq i32 %conv1705, 123
  br i1 %cmp1706, label %if.then.1708, label %if.end.1709

if.then.1708:                                     ; preds = %sw.bb.1701
  store i32 4, i32* @PL_expect, align 4
  %978 = load i8*, i8** %s, align 8
  store i8* %978, i8** @PL_bufptr, align 8
  %979 = load i32, i32* %tmp, align 4
  store i32 %979, i32* %retval
  br label %return

if.end.1709:                                      ; preds = %sw.bb.1701
  %980 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line1710 = getelementptr inbounds %struct.cop, %struct.cop* %980, i32 0, i32 13
  %981 = load i32, i32* %cop_line1710, align 4
  %982 = load i32, i32* @PL_copline, align 4
  %cmp1711 = icmp ult i32 %981, %982
  br i1 %cmp1711, label %cond.true.1713, label %cond.false.1715

cond.true.1713:                                   ; preds = %if.end.1709
  %983 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line1714 = getelementptr inbounds %struct.cop, %struct.cop* %983, i32 0, i32 13
  %984 = load i32, i32* %cop_line1714, align 4
  br label %cond.end.1716

cond.false.1715:                                  ; preds = %if.end.1709
  %985 = load i32, i32* @PL_copline, align 4
  br label %cond.end.1716

cond.end.1716:                                    ; preds = %cond.false.1715, %cond.true.1713
  %cond1717 = phi i32 [ %984, %cond.true.1713 ], [ %985, %cond.false.1715 ]
  store i32 %cond1717, i32* @PL_copline, align 4
  store i32 0, i32* @PL_expect, align 4
  %986 = load i8*, i8** %s, align 8
  store i8* %986, i8** @PL_bufptr, align 8
  %987 = load i32, i32* %tmp, align 4
  store i32 %987, i32* %retval
  br label %return

sw.bb.1718:                                       ; preds = %retry
  %988 = load i8*, i8** %s, align 8
  %incdec.ptr1719 = getelementptr inbounds i8, i8* %988, i32 1
  store i8* %incdec.ptr1719, i8** %s, align 8
  %989 = load i32, i32* @PL_lex_brackets, align 4
  %cmp1720 = icmp sle i32 %989, 0
  br i1 %cmp1720, label %if.then.1722, label %if.else.1724

if.then.1722:                                     ; preds = %sw.bb.1718
  %call1723 = call i32 @Perl_yyerror(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.42, i32 0, i32 0))
  br label %if.end.1726

if.else.1724:                                     ; preds = %sw.bb.1718
  %990 = load i32, i32* @PL_lex_brackets, align 4
  %dec1725 = add nsw i32 %990, -1
  store i32 %dec1725, i32* @PL_lex_brackets, align 4
  br label %if.end.1726

if.end.1726:                                      ; preds = %if.else.1724, %if.then.1722
  %991 = load i32, i32* @PL_lex_state, align 4
  %cmp1727 = icmp eq i32 %991, 9
  br i1 %cmp1727, label %if.then.1729, label %if.end.1752

if.then.1729:                                     ; preds = %if.end.1726
  %992 = load i32, i32* @PL_lex_brackets, align 4
  %cmp1730 = icmp eq i32 %992, 0
  br i1 %cmp1730, label %if.then.1732, label %if.end.1751

if.then.1732:                                     ; preds = %if.then.1729
  %993 = load i8*, i8** %s, align 8
  %994 = load i8, i8* %993, align 1
  %conv1733 = sext i8 %994 to i32
  %cmp1734 = icmp ne i32 %conv1733, 91
  br i1 %cmp1734, label %land.lhs.true.1736, label %if.end.1750

land.lhs.true.1736:                               ; preds = %if.then.1732
  %995 = load i8*, i8** %s, align 8
  %996 = load i8, i8* %995, align 1
  %conv1737 = sext i8 %996 to i32
  %cmp1738 = icmp ne i32 %conv1737, 123
  br i1 %cmp1738, label %land.lhs.true.1740, label %if.end.1750

land.lhs.true.1740:                               ; preds = %land.lhs.true.1736
  %997 = load i8*, i8** %s, align 8
  %998 = load i8, i8* %997, align 1
  %conv1741 = sext i8 %998 to i32
  %cmp1742 = icmp ne i32 %conv1741, 45
  br i1 %cmp1742, label %if.then.1749, label %lor.lhs.false.1744

lor.lhs.false.1744:                               ; preds = %land.lhs.true.1740
  %999 = load i8*, i8** %s, align 8
  %arrayidx1745 = getelementptr inbounds i8, i8* %999, i64 1
  %1000 = load i8, i8* %arrayidx1745, align 1
  %conv1746 = sext i8 %1000 to i32
  %cmp1747 = icmp ne i32 %conv1746, 62
  br i1 %cmp1747, label %if.then.1749, label %if.end.1750

if.then.1749:                                     ; preds = %lor.lhs.false.1744, %land.lhs.true.1740
  store i32 5, i32* @PL_lex_state, align 4
  br label %if.end.1750

if.end.1750:                                      ; preds = %if.then.1749, %lor.lhs.false.1744, %land.lhs.true.1736, %if.then.1732
  br label %if.end.1751

if.end.1751:                                      ; preds = %if.end.1750, %if.then.1729
  br label %if.end.1752

if.end.1752:                                      ; preds = %if.end.1751, %if.end.1726
  %1001 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line1753 = getelementptr inbounds %struct.cop, %struct.cop* %1001, i32 0, i32 13
  %1002 = load i32, i32* %cop_line1753, align 4
  %1003 = load i32, i32* @PL_copline, align 4
  %cmp1754 = icmp ult i32 %1002, %1003
  br i1 %cmp1754, label %cond.true.1756, label %cond.false.1758

cond.true.1756:                                   ; preds = %if.end.1752
  %1004 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line1757 = getelementptr inbounds %struct.cop, %struct.cop* %1004, i32 0, i32 13
  %1005 = load i32, i32* %cop_line1757, align 4
  br label %cond.end.1759

cond.false.1758:                                  ; preds = %if.end.1752
  %1006 = load i32, i32* @PL_copline, align 4
  br label %cond.end.1759

cond.end.1759:                                    ; preds = %cond.false.1758, %cond.true.1756
  %cond1760 = phi i32 [ %1005, %cond.true.1756 ], [ %1006, %cond.false.1758 ]
  store i32 %cond1760, i32* @PL_copline, align 4
  store i32 0, i32* @PL_expect, align 4
  %1007 = load i8*, i8** %s, align 8
  store i8* %1007, i8** @PL_bufptr, align 8
  store i32 93, i32* %retval
  br label %return

sw.bb.1761:                                       ; preds = %retry
  br label %leftbracket

leftbracket:                                      ; preds = %if.then.2844, %sw.bb.1761
  %1008 = load i8*, i8** %s, align 8
  %incdec.ptr1762 = getelementptr inbounds i8, i8* %1008, i32 1
  store i8* %incdec.ptr1762, i8** %s, align 8
  %1009 = load i32, i32* @PL_lex_brackets, align 4
  %cmp1763 = icmp sgt i32 %1009, 100
  br i1 %cmp1763, label %if.then.1765, label %if.end.1770

if.then.1765:                                     ; preds = %leftbracket
  %1010 = load i8*, i8** @PL_lex_brackstack, align 8
  %1011 = load i32, i32* @PL_lex_brackets, align 4
  %add1766 = add nsw i32 %1011, 10
  %conv1767 = sext i32 %add1766 to i64
  %mul1768 = mul i64 %conv1767, 1
  %call1769 = call i8* @Perl_safesysrealloc(i8* %1010, i64 %mul1768)
  store i8* %call1769, i8** @PL_lex_brackstack, align 8
  br label %if.end.1770

if.end.1770:                                      ; preds = %if.then.1765, %leftbracket
  %1012 = load i32, i32* @PL_expect, align 4
  switch i32 %1012, label %sw.default.1930 [
    i32 1, label %sw.bb.1771
    i32 0, label %sw.bb.1787
    i32 5, label %sw.bb.1922
    i32 4, label %sw.bb.1922
    i32 6, label %sw.bb.1926
    i32 7, label %sw.bb.1926
  ]

sw.bb.1771:                                       ; preds = %if.end.1770
  %1013 = load i32, i32* @PL_lex_formbrack, align 4
  %tobool1772 = icmp ne i32 %1013, 0
  br i1 %tobool1772, label %if.then.1773, label %if.end.1775

if.then.1773:                                     ; preds = %sw.bb.1771
  %1014 = load i8*, i8** %s, align 8
  %incdec.ptr1774 = getelementptr inbounds i8, i8* %1014, i32 -1
  store i8* %incdec.ptr1774, i8** %s, align 8
  store i32 7, i32* @PL_expect, align 4
  %1015 = load i8*, i8** %s, align 8
  store i8* %1015, i8** @PL_bufptr, align 8
  store i32 292, i32* %retval
  br label %return

if.end.1775:                                      ; preds = %sw.bb.1771
  %1016 = load i8*, i8** @PL_oldoldbufptr, align 8
  %1017 = load i8*, i8** @PL_last_lop, align 8
  %cmp1776 = icmp eq i8* %1016, %1017
  br i1 %cmp1776, label %if.then.1778, label %if.else.1782

if.then.1778:                                     ; preds = %if.end.1775
  %1018 = load i32, i32* @PL_lex_brackets, align 4
  %inc1779 = add nsw i32 %1018, 1
  store i32 %inc1779, i32* @PL_lex_brackets, align 4
  %idxprom1780 = sext i32 %1018 to i64
  %1019 = load i8*, i8** @PL_lex_brackstack, align 8
  %arrayidx1781 = getelementptr inbounds i8, i8* %1019, i64 %idxprom1780
  store i8 1, i8* %arrayidx1781, align 1
  br label %if.end.1786

if.else.1782:                                     ; preds = %if.end.1775
  %1020 = load i32, i32* @PL_lex_brackets, align 4
  %inc1783 = add nsw i32 %1020, 1
  store i32 %inc1783, i32* @PL_lex_brackets, align 4
  %idxprom1784 = sext i32 %1020 to i64
  %1021 = load i8*, i8** @PL_lex_brackstack, align 8
  %arrayidx1785 = getelementptr inbounds i8, i8* %1021, i64 %idxprom1784
  store i8 0, i8* %arrayidx1785, align 1
  br label %if.end.1786

if.end.1786:                                      ; preds = %if.else.1782, %if.then.1778
  store i32 1, i32* @PL_expect, align 4
  %1022 = load i8*, i8** %s, align 8
  store i8* %1022, i8** @PL_bufptr, align 8
  store i32 293, i32* %retval
  br label %return

sw.bb.1787:                                       ; preds = %if.end.1770
  br label %while.cond.1788

while.cond.1788:                                  ; preds = %while.body.1803, %sw.bb.1787
  %1023 = load i8*, i8** %s, align 8
  %1024 = load i8*, i8** @PL_bufend, align 8
  %cmp1789 = icmp ult i8* %1023, %1024
  br i1 %cmp1789, label %land.rhs.1791, label %land.end.1801

land.rhs.1791:                                    ; preds = %while.cond.1788
  %1025 = load i8*, i8** %s, align 8
  %1026 = load i8, i8* %1025, align 1
  %conv1792 = sext i8 %1026 to i32
  %cmp1793 = icmp eq i32 %conv1792, 32
  br i1 %cmp1793, label %lor.end.1799, label %lor.rhs.1795

lor.rhs.1795:                                     ; preds = %land.rhs.1791
  %1027 = load i8*, i8** %s, align 8
  %1028 = load i8, i8* %1027, align 1
  %conv1796 = sext i8 %1028 to i32
  %cmp1797 = icmp eq i32 %conv1796, 9
  br label %lor.end.1799

lor.end.1799:                                     ; preds = %lor.rhs.1795, %land.rhs.1791
  %1029 = phi i1 [ true, %land.rhs.1791 ], [ %cmp1797, %lor.rhs.1795 ]
  br label %land.end.1801

land.end.1801:                                    ; preds = %lor.end.1799, %while.cond.1788
  %1030 = phi i1 [ false, %while.cond.1788 ], [ %1029, %lor.end.1799 ]
  br i1 %1030, label %while.body.1803, label %while.end.1805

while.body.1803:                                  ; preds = %land.end.1801
  %1031 = load i8*, i8** %s, align 8
  %incdec.ptr1804 = getelementptr inbounds i8, i8* %1031, i32 1
  store i8* %incdec.ptr1804, i8** %s, align 8
  br label %while.cond.1788

while.end.1805:                                   ; preds = %land.end.1801
  %1032 = load i8*, i8** %s, align 8
  store i8* %1032, i8** %d, align 8
  store i8 0, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i64 0), align 1
  %1033 = load i8*, i8** %d, align 8
  %1034 = load i8*, i8** @PL_bufend, align 8
  %cmp1806 = icmp ult i8* %1033, %1034
  br i1 %cmp1806, label %land.lhs.true.1808, label %if.end.1832

land.lhs.true.1808:                               ; preds = %while.end.1805
  %1035 = load i8*, i8** %d, align 8
  %1036 = load i8, i8* %1035, align 1
  %conv1809 = sext i8 %1036 to i32
  %cmp1810 = icmp eq i32 %conv1809, 45
  br i1 %cmp1810, label %if.then.1812, label %if.end.1832

if.then.1812:                                     ; preds = %land.lhs.true.1808
  store i8 45, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i64 0), align 1
  %1037 = load i8*, i8** %d, align 8
  %incdec.ptr1813 = getelementptr inbounds i8, i8* %1037, i32 1
  store i8* %incdec.ptr1813, i8** %d, align 8
  br label %while.cond.1814

while.cond.1814:                                  ; preds = %while.body.1829, %if.then.1812
  %1038 = load i8*, i8** %d, align 8
  %1039 = load i8*, i8** @PL_bufend, align 8
  %cmp1815 = icmp ult i8* %1038, %1039
  br i1 %cmp1815, label %land.rhs.1817, label %land.end.1827

land.rhs.1817:                                    ; preds = %while.cond.1814
  %1040 = load i8*, i8** %d, align 8
  %1041 = load i8, i8* %1040, align 1
  %conv1818 = sext i8 %1041 to i32
  %cmp1819 = icmp eq i32 %conv1818, 32
  br i1 %cmp1819, label %lor.end.1825, label %lor.rhs.1821

lor.rhs.1821:                                     ; preds = %land.rhs.1817
  %1042 = load i8*, i8** %d, align 8
  %1043 = load i8, i8* %1042, align 1
  %conv1822 = sext i8 %1043 to i32
  %cmp1823 = icmp eq i32 %conv1822, 9
  br label %lor.end.1825

lor.end.1825:                                     ; preds = %lor.rhs.1821, %land.rhs.1817
  %1044 = phi i1 [ true, %land.rhs.1817 ], [ %cmp1823, %lor.rhs.1821 ]
  br label %land.end.1827

land.end.1827:                                    ; preds = %lor.end.1825, %while.cond.1814
  %1045 = phi i1 [ false, %while.cond.1814 ], [ %1044, %lor.end.1825 ]
  br i1 %1045, label %while.body.1829, label %while.end.1831

while.body.1829:                                  ; preds = %land.end.1827
  %1046 = load i8*, i8** %d, align 8
  %incdec.ptr1830 = getelementptr inbounds i8, i8* %1046, i32 1
  store i8* %incdec.ptr1830, i8** %d, align 8
  br label %while.cond.1814

while.end.1831:                                   ; preds = %land.end.1827
  br label %if.end.1832

if.end.1832:                                      ; preds = %while.end.1831, %land.lhs.true.1808, %while.end.1805
  %1047 = load i8*, i8** %d, align 8
  %1048 = load i8*, i8** @PL_bufend, align 8
  %cmp1833 = icmp ult i8* %1047, %1048
  br i1 %cmp1833, label %land.lhs.true.1835, label %if.end.1921

land.lhs.true.1835:                               ; preds = %if.end.1832
  %1049 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private1836 = getelementptr inbounds %struct.cop, %struct.cop* %1049, i32 0, i32 7
  %1050 = load i8, i8* %op_private1836, align 1
  %conv1837 = zext i8 %1050 to i32
  %and1838 = and i32 %conv1837, 8
  %tobool1839 = icmp ne i32 %and1838, 0
  br i1 %tobool1839, label %cond.true.1858, label %lor.lhs.false.1840

lor.lhs.false.1840:                               ; preds = %land.lhs.true.1835
  %1051 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %tobool1841 = icmp ne %struct.sv* %1051, null
  br i1 %tobool1841, label %land.lhs.true.1842, label %lor.lhs.false.1851

land.lhs.true.1842:                               ; preds = %lor.lhs.false.1840
  %1052 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_flags1843 = getelementptr inbounds %struct.sv, %struct.sv* %1052, i32 0, i32 2
  %1053 = load i32, i32* %sv_flags1843, align 4
  %and1844 = and i32 %1053, 536870912
  %tobool1845 = icmp ne i32 %and1844, 0
  br i1 %tobool1845, label %land.lhs.true.1846, label %lor.lhs.false.1851

land.lhs.true.1846:                               ; preds = %land.lhs.true.1842
  %1054 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private1847 = getelementptr inbounds %struct.cop, %struct.cop* %1054, i32 0, i32 7
  %1055 = load i8, i8* %op_private1847, align 1
  %conv1848 = zext i8 %1055 to i32
  %and1849 = and i32 %conv1848, 8
  %tobool1850 = icmp ne i32 %and1849, 0
  br i1 %tobool1850, label %lor.lhs.false.1851, label %lor.lhs.false.1854

lor.lhs.false.1851:                               ; preds = %land.lhs.true.1846, %land.lhs.true.1842, %lor.lhs.false.1840
  %1056 = load i32, i32* @PL_hints, align 4
  %and1852 = and i32 %1056, 8388608
  %tobool1853 = icmp ne i32 %and1852, 0
  br i1 %tobool1853, label %lor.lhs.false.1854, label %cond.true.1858

lor.lhs.false.1854:                               ; preds = %lor.lhs.false.1851, %land.lhs.true.1846
  %1057 = load i8*, i8** %d, align 8
  %1058 = load i8, i8* %1057, align 1
  %conv1855 = zext i8 %1058 to i32
  %cmp1856 = icmp slt i32 %conv1855, 192
  br i1 %cmp1856, label %cond.true.1858, label %cond.false.1878

cond.true.1858:                                   ; preds = %lor.lhs.false.1854, %lor.lhs.false.1851, %land.lhs.true.1835
  %1059 = load i8*, i8** %d, align 8
  %1060 = load i8, i8* %1059, align 1
  %conv1859 = sext i8 %1060 to i32
  %cmp1860 = icmp sge i32 %conv1859, 65
  br i1 %cmp1860, label %land.lhs.true.1862, label %lor.lhs.false.1866

land.lhs.true.1862:                               ; preds = %cond.true.1858
  %1061 = load i8*, i8** %d, align 8
  %1062 = load i8, i8* %1061, align 1
  %conv1863 = sext i8 %1062 to i32
  %cmp1864 = icmp sle i32 %conv1863, 90
  br i1 %cmp1864, label %if.then.1885, label %lor.lhs.false.1866

lor.lhs.false.1866:                               ; preds = %land.lhs.true.1862, %cond.true.1858
  %1063 = load i8*, i8** %d, align 8
  %1064 = load i8, i8* %1063, align 1
  %conv1867 = sext i8 %1064 to i32
  %cmp1868 = icmp sge i32 %conv1867, 97
  br i1 %cmp1868, label %land.lhs.true.1870, label %lor.lhs.false.1874

land.lhs.true.1870:                               ; preds = %lor.lhs.false.1866
  %1065 = load i8*, i8** %d, align 8
  %1066 = load i8, i8* %1065, align 1
  %conv1871 = sext i8 %1066 to i32
  %cmp1872 = icmp sle i32 %conv1871, 122
  br i1 %cmp1872, label %if.then.1885, label %lor.lhs.false.1874

lor.lhs.false.1874:                               ; preds = %land.lhs.true.1870, %lor.lhs.false.1866
  %1067 = load i8*, i8** %d, align 8
  %1068 = load i8, i8* %1067, align 1
  %conv1875 = sext i8 %1068 to i32
  %cmp1876 = icmp eq i32 %conv1875, 95
  br i1 %cmp1876, label %if.then.1885, label %if.end.1921

cond.false.1878:                                  ; preds = %lor.lhs.false.1854
  %1069 = load i8*, i8** %d, align 8
  %call1879 = call signext i8 @Perl_is_utf8_idcont(i8* %1069)
  %conv1880 = sext i8 %call1879 to i32
  %tobool1881 = icmp ne i32 %conv1880, 0
  br i1 %tobool1881, label %land.lhs.true.1882, label %if.end.1921

land.lhs.true.1882:                               ; preds = %cond.false.1878
  %1070 = load i8*, i8** %d, align 8
  %call1883 = call signext i8 @Perl_is_utf8_digit(i8* %1070)
  %tobool1884 = icmp ne i8 %call1883, 0
  br i1 %tobool1884, label %if.end.1921, label %if.then.1885

if.then.1885:                                     ; preds = %land.lhs.true.1882, %lor.lhs.false.1874, %land.lhs.true.1870, %land.lhs.true.1862
  %1071 = load i8*, i8** %d, align 8
  %call1886 = call i8* @S_scan_word(i8* %1071, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i64 1), i64 255, i32 0, i64* %len)
  store i8* %call1886, i8** %d, align 8
  br label %while.cond.1887

while.cond.1887:                                  ; preds = %while.body.1902, %if.then.1885
  %1072 = load i8*, i8** %d, align 8
  %1073 = load i8*, i8** @PL_bufend, align 8
  %cmp1888 = icmp ult i8* %1072, %1073
  br i1 %cmp1888, label %land.rhs.1890, label %land.end.1900

land.rhs.1890:                                    ; preds = %while.cond.1887
  %1074 = load i8*, i8** %d, align 8
  %1075 = load i8, i8* %1074, align 1
  %conv1891 = sext i8 %1075 to i32
  %cmp1892 = icmp eq i32 %conv1891, 32
  br i1 %cmp1892, label %lor.end.1898, label %lor.rhs.1894

lor.rhs.1894:                                     ; preds = %land.rhs.1890
  %1076 = load i8*, i8** %d, align 8
  %1077 = load i8, i8* %1076, align 1
  %conv1895 = sext i8 %1077 to i32
  %cmp1896 = icmp eq i32 %conv1895, 9
  br label %lor.end.1898

lor.end.1898:                                     ; preds = %lor.rhs.1894, %land.rhs.1890
  %1078 = phi i1 [ true, %land.rhs.1890 ], [ %cmp1896, %lor.rhs.1894 ]
  br label %land.end.1900

land.end.1900:                                    ; preds = %lor.end.1898, %while.cond.1887
  %1079 = phi i1 [ false, %while.cond.1887 ], [ %1078, %lor.end.1898 ]
  br i1 %1079, label %while.body.1902, label %while.end.1904

while.body.1902:                                  ; preds = %land.end.1900
  %1080 = load i8*, i8** %d, align 8
  %incdec.ptr1903 = getelementptr inbounds i8, i8* %1080, i32 1
  store i8* %incdec.ptr1903, i8** %d, align 8
  br label %while.cond.1887

while.end.1904:                                   ; preds = %land.end.1900
  %1081 = load i8*, i8** %d, align 8
  %1082 = load i8, i8* %1081, align 1
  %conv1905 = sext i8 %1082 to i32
  %cmp1906 = icmp eq i32 %conv1905, 125
  br i1 %cmp1906, label %if.then.1908, label %if.end.1920

if.then.1908:                                     ; preds = %while.end.1904
  %1083 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i64 0), align 1
  %conv1910 = sext i8 %1083 to i32
  %cmp1911 = icmp eq i32 %conv1910, 45
  %conv1912 = zext i1 %cmp1911 to i32
  %conv1913 = trunc i32 %conv1912 to i8
  store i8 %conv1913, i8* %minus, align 1
  %1084 = load i8*, i8** %s, align 8
  %1085 = load i8, i8* %minus, align 1
  %conv1914 = sext i8 %1085 to i32
  %idx.ext = sext i32 %conv1914 to i64
  %add.ptr1915 = getelementptr inbounds i8, i8* %1084, i64 %idx.ext
  %call1916 = call i8* @S_force_word(i8* %add.ptr1915, i32 257, i32 0, i32 1, i32 0)
  store i8* %call1916, i8** %s, align 8
  %1086 = load i8, i8* %minus, align 1
  %tobool1917 = icmp ne i8 %1086, 0
  br i1 %tobool1917, label %if.then.1918, label %if.end.1919

if.then.1918:                                     ; preds = %if.then.1908
  call void @S_force_next(i32 45)
  br label %if.end.1919

if.end.1919:                                      ; preds = %if.then.1918, %if.then.1908
  br label %if.end.1920

if.end.1920:                                      ; preds = %if.end.1919, %while.end.1904
  br label %if.end.1921

if.end.1921:                                      ; preds = %if.end.1920, %land.lhs.true.1882, %cond.false.1878, %lor.lhs.false.1874, %if.end.1832
  br label %sw.bb.1922

sw.bb.1922:                                       ; preds = %if.end.1770, %if.end.1770, %if.end.1921
  %1087 = load i32, i32* @PL_lex_brackets, align 4
  %inc1923 = add nsw i32 %1087, 1
  store i32 %inc1923, i32* @PL_lex_brackets, align 4
  %idxprom1924 = sext i32 %1087 to i64
  %1088 = load i8*, i8** @PL_lex_brackstack, align 8
  %arrayidx1925 = getelementptr inbounds i8, i8* %1088, i64 %idxprom1924
  store i8 3, i8* %arrayidx1925, align 1
  store i32 3, i32* @PL_expect, align 4
  br label %sw.epilog.2481

sw.bb.1926:                                       ; preds = %if.end.1770, %if.end.1770
  %1089 = load i32, i32* @PL_lex_brackets, align 4
  %inc1927 = add nsw i32 %1089, 1
  store i32 %inc1927, i32* @PL_lex_brackets, align 4
  %idxprom1928 = sext i32 %1089 to i64
  %1090 = load i8*, i8** @PL_lex_brackstack, align 8
  %arrayidx1929 = getelementptr inbounds i8, i8* %1090, i64 %idxprom1928
  store i8 0, i8* %arrayidx1929, align 1
  store i32 3, i32* @PL_expect, align 4
  br label %sw.epilog.2481

sw.default.1930:                                  ; preds = %if.end.1770
  %1091 = load i8*, i8** @PL_oldoldbufptr, align 8
  %1092 = load i8*, i8** @PL_last_lop, align 8
  %cmp1932 = icmp eq i8* %1091, %1092
  br i1 %cmp1932, label %if.then.1934, label %if.else.1938

if.then.1934:                                     ; preds = %sw.default.1930
  %1093 = load i32, i32* @PL_lex_brackets, align 4
  %inc1935 = add nsw i32 %1093, 1
  store i32 %inc1935, i32* @PL_lex_brackets, align 4
  %idxprom1936 = sext i32 %1093 to i64
  %1094 = load i8*, i8** @PL_lex_brackstack, align 8
  %arrayidx1937 = getelementptr inbounds i8, i8* %1094, i64 %idxprom1936
  store i8 1, i8* %arrayidx1937, align 1
  br label %if.end.1942

if.else.1938:                                     ; preds = %sw.default.1930
  %1095 = load i32, i32* @PL_lex_brackets, align 4
  %inc1939 = add nsw i32 %1095, 1
  store i32 %inc1939, i32* @PL_lex_brackets, align 4
  %idxprom1940 = sext i32 %1095 to i64
  %1096 = load i8*, i8** @PL_lex_brackstack, align 8
  %arrayidx1941 = getelementptr inbounds i8, i8* %1096, i64 %idxprom1940
  store i8 0, i8* %arrayidx1941, align 1
  br label %if.end.1942

if.end.1942:                                      ; preds = %if.else.1938, %if.then.1934
  %1097 = load i8*, i8** %s, align 8
  %call1943 = call i8* @S_skipspace(i8* %1097)
  store i8* %call1943, i8** %s, align 8
  %1098 = load i8*, i8** %s, align 8
  %1099 = load i8, i8* %1098, align 1
  %conv1944 = sext i8 %1099 to i32
  %cmp1945 = icmp eq i32 %conv1944, 125
  br i1 %cmp1945, label %if.then.1947, label %if.end.1957

if.then.1947:                                     ; preds = %if.end.1942
  %1100 = load i32, i32* @PL_expect, align 4
  %cmp1948 = icmp eq i32 %1100, 2
  br i1 %cmp1948, label %land.lhs.true.1950, label %if.end.1956

land.lhs.true.1950:                               ; preds = %if.then.1947
  %1101 = load i32, i32* @PL_lex_state, align 4
  %cmp1951 = icmp eq i32 %1101, 9
  br i1 %cmp1951, label %if.then.1953, label %if.end.1956

if.then.1953:                                     ; preds = %land.lhs.true.1950
  store i32 1, i32* @PL_expect, align 4
  %1102 = load i8*, i8** %s, align 8
  %add.ptr1954 = getelementptr inbounds i8, i8* %1102, i64 1
  store i8* %add.ptr1954, i8** @PL_bufptr, align 8
  %call1955 = call i32 @Perl_yyerror(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.43, i32 0, i32 0))
  br label %sw.epilog.2481

if.end.1956:                                      ; preds = %land.lhs.true.1950, %if.then.1947
  store i32 1, i32* @PL_expect, align 4
  %1103 = load i8*, i8** %s, align 8
  store i8* %1103, i8** @PL_bufptr, align 8
  store i32 293, i32* %retval
  br label %return

if.end.1957:                                      ; preds = %if.end.1942
  %1104 = load i8*, i8** %s, align 8
  store i8* %1104, i8** %t, align 8
  %1105 = load i8*, i8** %s, align 8
  %1106 = load i8, i8* %1105, align 1
  %conv1958 = sext i8 %1106 to i32
  %cmp1959 = icmp eq i32 %conv1958, 39
  br i1 %cmp1959, label %if.then.1969, label %lor.lhs.false.1961

lor.lhs.false.1961:                               ; preds = %if.end.1957
  %1107 = load i8*, i8** %s, align 8
  %1108 = load i8, i8* %1107, align 1
  %conv1962 = sext i8 %1108 to i32
  %cmp1963 = icmp eq i32 %conv1962, 34
  br i1 %cmp1963, label %if.then.1969, label %lor.lhs.false.1965

lor.lhs.false.1965:                               ; preds = %lor.lhs.false.1961
  %1109 = load i8*, i8** %s, align 8
  %1110 = load i8, i8* %1109, align 1
  %conv1966 = sext i8 %1110 to i32
  %cmp1967 = icmp eq i32 %conv1966, 96
  br i1 %cmp1967, label %if.then.1969, label %if.else.1997

if.then.1969:                                     ; preds = %lor.lhs.false.1965, %lor.lhs.false.1961, %if.end.1957
  %1111 = load i8*, i8** %t, align 8
  %incdec.ptr1970 = getelementptr inbounds i8, i8* %1111, i32 1
  store i8* %incdec.ptr1970, i8** %t, align 8
  br label %for.cond

for.cond:                                         ; preds = %if.end.1995, %if.then.1969
  %1112 = load i8*, i8** %t, align 8
  %1113 = load i8*, i8** @PL_bufend, align 8
  %cmp1971 = icmp ult i8* %1112, %1113
  br i1 %cmp1971, label %land.rhs.1973, label %land.end.1978

land.rhs.1973:                                    ; preds = %for.cond
  %1114 = load i8*, i8** %t, align 8
  %1115 = load i8, i8* %1114, align 1
  %conv1974 = sext i8 %1115 to i32
  %1116 = load i8*, i8** %s, align 8
  %1117 = load i8, i8* %1116, align 1
  %conv1975 = sext i8 %1117 to i32
  %cmp1976 = icmp ne i32 %conv1974, %conv1975
  br label %land.end.1978

land.end.1978:                                    ; preds = %land.rhs.1973, %for.cond
  %1118 = phi i1 [ false, %for.cond ], [ %cmp1976, %land.rhs.1973 ]
  br i1 %1118, label %for.body, label %for.end

for.body:                                         ; preds = %land.end.1978
  %1119 = load i8*, i8** %t, align 8
  %incdec.ptr1980 = getelementptr inbounds i8, i8* %1119, i32 1
  store i8* %incdec.ptr1980, i8** %t, align 8
  %1120 = load i8, i8* %1119, align 1
  %conv1981 = sext i8 %1120 to i32
  %cmp1982 = icmp eq i32 %conv1981, 92
  br i1 %cmp1982, label %land.lhs.true.1984, label %if.end.1995

land.lhs.true.1984:                               ; preds = %for.body
  %1121 = load i8*, i8** %t, align 8
  %1122 = load i8, i8* %1121, align 1
  %conv1985 = sext i8 %1122 to i32
  %cmp1986 = icmp eq i32 %conv1985, 92
  br i1 %cmp1986, label %if.then.1993, label %lor.lhs.false.1988

lor.lhs.false.1988:                               ; preds = %land.lhs.true.1984
  %1123 = load i8*, i8** %t, align 8
  %1124 = load i8, i8* %1123, align 1
  %conv1989 = sext i8 %1124 to i32
  %1125 = load i8*, i8** %s, align 8
  %1126 = load i8, i8* %1125, align 1
  %conv1990 = sext i8 %1126 to i32
  %cmp1991 = icmp eq i32 %conv1989, %conv1990
  br i1 %cmp1991, label %if.then.1993, label %if.end.1995

if.then.1993:                                     ; preds = %lor.lhs.false.1988, %land.lhs.true.1984
  %1127 = load i8*, i8** %t, align 8
  %incdec.ptr1994 = getelementptr inbounds i8, i8* %1127, i32 1
  store i8* %incdec.ptr1994, i8** %t, align 8
  br label %if.end.1995

if.end.1995:                                      ; preds = %if.then.1993, %lor.lhs.false.1988, %for.body
  br label %for.cond

for.end:                                          ; preds = %land.end.1978
  %1128 = load i8*, i8** %t, align 8
  %incdec.ptr1996 = getelementptr inbounds i8, i8* %1128, i32 1
  store i8* %incdec.ptr1996, i8** %t, align 8
  br label %if.end.2413

if.else.1997:                                     ; preds = %lor.lhs.false.1965
  %1129 = load i8*, i8** %s, align 8
  %1130 = load i8, i8* %1129, align 1
  %conv1998 = sext i8 %1130 to i32
  %cmp1999 = icmp eq i32 %conv1998, 113
  br i1 %cmp1999, label %if.then.2001, label %if.else.2279

if.then.2001:                                     ; preds = %if.else.1997
  %1131 = load i8*, i8** %t, align 8
  %incdec.ptr2002 = getelementptr inbounds i8, i8* %1131, i32 1
  store i8* %incdec.ptr2002, i8** %t, align 8
  %1132 = load i8*, i8** @PL_bufend, align 8
  %cmp2003 = icmp ult i8* %incdec.ptr2002, %1132
  br i1 %cmp2003, label %land.lhs.true.2005, label %if.else.2206

land.lhs.true.2005:                               ; preds = %if.then.2001
  %1133 = load i8*, i8** %t, align 8
  %1134 = load i8, i8* %1133, align 1
  %conv2006 = sext i8 %1134 to i32
  %cmp2007 = icmp sge i32 %conv2006, 65
  br i1 %cmp2007, label %land.lhs.true.2009, label %lor.lhs.false.2013

land.lhs.true.2009:                               ; preds = %land.lhs.true.2005
  %1135 = load i8*, i8** %t, align 8
  %1136 = load i8, i8* %1135, align 1
  %conv2010 = sext i8 %1136 to i32
  %cmp2011 = icmp sle i32 %conv2010, 90
  br i1 %cmp2011, label %lor.lhs.false.2033, label %lor.lhs.false.2013

lor.lhs.false.2013:                               ; preds = %land.lhs.true.2009, %land.lhs.true.2005
  %1137 = load i8*, i8** %t, align 8
  %1138 = load i8, i8* %1137, align 1
  %conv2014 = sext i8 %1138 to i32
  %cmp2015 = icmp sge i32 %conv2014, 97
  br i1 %cmp2015, label %land.lhs.true.2017, label %lor.lhs.false.2021

land.lhs.true.2017:                               ; preds = %lor.lhs.false.2013
  %1139 = load i8*, i8** %t, align 8
  %1140 = load i8, i8* %1139, align 1
  %conv2018 = sext i8 %1140 to i32
  %cmp2019 = icmp sle i32 %conv2018, 122
  br i1 %cmp2019, label %lor.lhs.false.2033, label %lor.lhs.false.2021

lor.lhs.false.2021:                               ; preds = %land.lhs.true.2017, %lor.lhs.false.2013
  %1141 = load i8*, i8** %t, align 8
  %1142 = load i8, i8* %1141, align 1
  %conv2022 = sext i8 %1142 to i32
  %cmp2023 = icmp sge i32 %conv2022, 48
  br i1 %cmp2023, label %land.lhs.true.2025, label %lor.lhs.false.2029

land.lhs.true.2025:                               ; preds = %lor.lhs.false.2021
  %1143 = load i8*, i8** %t, align 8
  %1144 = load i8, i8* %1143, align 1
  %conv2026 = sext i8 %1144 to i32
  %cmp2027 = icmp sle i32 %conv2026, 57
  br i1 %cmp2027, label %lor.lhs.false.2033, label %lor.lhs.false.2029

lor.lhs.false.2029:                               ; preds = %land.lhs.true.2025, %lor.lhs.false.2021
  %1145 = load i8*, i8** %t, align 8
  %1146 = load i8, i8* %1145, align 1
  %conv2030 = sext i8 %1146 to i32
  %cmp2031 = icmp eq i32 %conv2030, 95
  br i1 %cmp2031, label %lor.lhs.false.2033, label %if.then.2073

lor.lhs.false.2033:                               ; preds = %lor.lhs.false.2029, %land.lhs.true.2025, %land.lhs.true.2017, %land.lhs.true.2009
  %1147 = load i8*, i8** %t, align 8
  %1148 = load i8, i8* %1147, align 1
  %conv2034 = sext i8 %1148 to i32
  %cmp2035 = icmp eq i32 %conv2034, 113
  br i1 %cmp2035, label %land.lhs.true.2041, label %lor.lhs.false.2037

lor.lhs.false.2037:                               ; preds = %lor.lhs.false.2033
  %1149 = load i8*, i8** %t, align 8
  %1150 = load i8, i8* %1149, align 1
  %conv2038 = sext i8 %1150 to i32
  %cmp2039 = icmp eq i32 %conv2038, 120
  br i1 %cmp2039, label %land.lhs.true.2041, label %if.else.2206

land.lhs.true.2041:                               ; preds = %lor.lhs.false.2037, %lor.lhs.false.2033
  %1151 = load i8*, i8** %t, align 8
  %incdec.ptr2042 = getelementptr inbounds i8, i8* %1151, i32 1
  store i8* %incdec.ptr2042, i8** %t, align 8
  %1152 = load i8*, i8** @PL_bufend, align 8
  %cmp2043 = icmp ult i8* %incdec.ptr2042, %1152
  br i1 %cmp2043, label %land.lhs.true.2045, label %if.else.2206

land.lhs.true.2045:                               ; preds = %land.lhs.true.2041
  %1153 = load i8*, i8** %t, align 8
  %1154 = load i8, i8* %1153, align 1
  %conv2046 = sext i8 %1154 to i32
  %cmp2047 = icmp sge i32 %conv2046, 65
  br i1 %cmp2047, label %land.lhs.true.2049, label %lor.lhs.false.2053

land.lhs.true.2049:                               ; preds = %land.lhs.true.2045
  %1155 = load i8*, i8** %t, align 8
  %1156 = load i8, i8* %1155, align 1
  %conv2050 = sext i8 %1156 to i32
  %cmp2051 = icmp sle i32 %conv2050, 90
  br i1 %cmp2051, label %if.else.2206, label %lor.lhs.false.2053

lor.lhs.false.2053:                               ; preds = %land.lhs.true.2049, %land.lhs.true.2045
  %1157 = load i8*, i8** %t, align 8
  %1158 = load i8, i8* %1157, align 1
  %conv2054 = sext i8 %1158 to i32
  %cmp2055 = icmp sge i32 %conv2054, 97
  br i1 %cmp2055, label %land.lhs.true.2057, label %lor.lhs.false.2061

land.lhs.true.2057:                               ; preds = %lor.lhs.false.2053
  %1159 = load i8*, i8** %t, align 8
  %1160 = load i8, i8* %1159, align 1
  %conv2058 = sext i8 %1160 to i32
  %cmp2059 = icmp sle i32 %conv2058, 122
  br i1 %cmp2059, label %if.else.2206, label %lor.lhs.false.2061

lor.lhs.false.2061:                               ; preds = %land.lhs.true.2057, %lor.lhs.false.2053
  %1161 = load i8*, i8** %t, align 8
  %1162 = load i8, i8* %1161, align 1
  %conv2062 = sext i8 %1162 to i32
  %cmp2063 = icmp sge i32 %conv2062, 48
  br i1 %cmp2063, label %land.lhs.true.2065, label %lor.lhs.false.2069

land.lhs.true.2065:                               ; preds = %lor.lhs.false.2061
  %1163 = load i8*, i8** %t, align 8
  %1164 = load i8, i8* %1163, align 1
  %conv2066 = sext i8 %1164 to i32
  %cmp2067 = icmp sle i32 %conv2066, 57
  br i1 %cmp2067, label %if.else.2206, label %lor.lhs.false.2069

lor.lhs.false.2069:                               ; preds = %land.lhs.true.2065, %lor.lhs.false.2061
  %1165 = load i8*, i8** %t, align 8
  %1166 = load i8, i8* %1165, align 1
  %conv2070 = sext i8 %1166 to i32
  %cmp2071 = icmp eq i32 %conv2070, 95
  br i1 %cmp2071, label %if.else.2206, label %if.then.2073

if.then.2073:                                     ; preds = %lor.lhs.false.2069, %lor.lhs.false.2029
  store i32 1, i32* %brackets, align 4
  br label %while.cond.2079

while.cond.2079:                                  ; preds = %while.body.2106, %if.then.2073
  %1167 = load i8*, i8** %t, align 8
  %1168 = load i8*, i8** @PL_bufend, align 8
  %cmp2080 = icmp ult i8* %1167, %1168
  br i1 %cmp2080, label %land.rhs.2082, label %land.end.2104

land.rhs.2082:                                    ; preds = %while.cond.2079
  %1169 = load i8*, i8** %t, align 8
  %1170 = load i8, i8* %1169, align 1
  %conv2083 = sext i8 %1170 to i32
  %cmp2084 = icmp eq i32 %conv2083, 32
  br i1 %cmp2084, label %lor.end.2102, label %lor.lhs.false.2086

lor.lhs.false.2086:                               ; preds = %land.rhs.2082
  %1171 = load i8*, i8** %t, align 8
  %1172 = load i8, i8* %1171, align 1
  %conv2087 = sext i8 %1172 to i32
  %cmp2088 = icmp eq i32 %conv2087, 9
  br i1 %cmp2088, label %lor.end.2102, label %lor.lhs.false.2090

lor.lhs.false.2090:                               ; preds = %lor.lhs.false.2086
  %1173 = load i8*, i8** %t, align 8
  %1174 = load i8, i8* %1173, align 1
  %conv2091 = sext i8 %1174 to i32
  %cmp2092 = icmp eq i32 %conv2091, 10
  br i1 %cmp2092, label %lor.end.2102, label %lor.lhs.false.2094

lor.lhs.false.2094:                               ; preds = %lor.lhs.false.2090
  %1175 = load i8*, i8** %t, align 8
  %1176 = load i8, i8* %1175, align 1
  %conv2095 = sext i8 %1176 to i32
  %cmp2096 = icmp eq i32 %conv2095, 13
  br i1 %cmp2096, label %lor.end.2102, label %lor.rhs.2098

lor.rhs.2098:                                     ; preds = %lor.lhs.false.2094
  %1177 = load i8*, i8** %t, align 8
  %1178 = load i8, i8* %1177, align 1
  %conv2099 = sext i8 %1178 to i32
  %cmp2100 = icmp eq i32 %conv2099, 12
  br label %lor.end.2102

lor.end.2102:                                     ; preds = %lor.rhs.2098, %lor.lhs.false.2094, %lor.lhs.false.2090, %lor.lhs.false.2086, %land.rhs.2082
  %1179 = phi i1 [ true, %lor.lhs.false.2094 ], [ true, %lor.lhs.false.2090 ], [ true, %lor.lhs.false.2086 ], [ true, %land.rhs.2082 ], [ %cmp2100, %lor.rhs.2098 ]
  br label %land.end.2104

land.end.2104:                                    ; preds = %lor.end.2102, %while.cond.2079
  %1180 = phi i1 [ false, %while.cond.2079 ], [ %1179, %lor.end.2102 ]
  br i1 %1180, label %while.body.2106, label %while.end.2108

while.body.2106:                                  ; preds = %land.end.2104
  %1181 = load i8*, i8** %t, align 8
  %incdec.ptr2107 = getelementptr inbounds i8, i8* %1181, i32 1
  store i8* %incdec.ptr2107, i8** %t, align 8
  br label %while.cond.2079

while.end.2108:                                   ; preds = %land.end.2104
  %1182 = load i8*, i8** %t, align 8
  %add.ptr2109 = getelementptr inbounds i8, i8* %1182, i64 1
  %1183 = load i8*, i8** @PL_bufend, align 8
  %cmp2110 = icmp ult i8* %add.ptr2109, %1183
  br i1 %cmp2110, label %land.lhs.true.2112, label %if.end.2123

land.lhs.true.2112:                               ; preds = %while.end.2108
  %1184 = load i8*, i8** %t, align 8
  %arrayidx2113 = getelementptr inbounds i8, i8* %1184, i64 0
  %1185 = load i8, i8* %arrayidx2113, align 1
  %conv2114 = sext i8 %1185 to i32
  %cmp2115 = icmp eq i32 %conv2114, 61
  br i1 %cmp2115, label %land.lhs.true.2117, label %if.end.2123

land.lhs.true.2117:                               ; preds = %land.lhs.true.2112
  %1186 = load i8*, i8** %t, align 8
  %arrayidx2118 = getelementptr inbounds i8, i8* %1186, i64 1
  %1187 = load i8, i8* %arrayidx2118, align 1
  %conv2119 = sext i8 %1187 to i32
  %cmp2120 = icmp eq i32 %conv2119, 62
  br i1 %cmp2120, label %if.then.2122, label %if.end.2123

if.then.2122:                                     ; preds = %land.lhs.true.2117
  store i32 1, i32* @PL_expect, align 4
  %1188 = load i8*, i8** %s, align 8
  store i8* %1188, i8** @PL_bufptr, align 8
  store i32 293, i32* %retval
  br label %return

if.end.2123:                                      ; preds = %land.lhs.true.2117, %land.lhs.true.2112, %while.end.2108
  %1189 = load i8*, i8** %t, align 8
  %1190 = load i8, i8* %1189, align 1
  store i8 %1190, i8* %term, align 1
  %1191 = load i8, i8* %term, align 1
  store i8 %1191, i8* %open, align 1
  %1192 = load i8, i8* %term, align 1
  %conv2124 = sext i8 %1192 to i32
  %tobool2125 = icmp ne i32 %conv2124, 0
  br i1 %tobool2125, label %land.lhs.true.2126, label %if.end.2132

land.lhs.true.2126:                               ; preds = %if.end.2123
  %1193 = load i8, i8* %term, align 1
  %conv2127 = sext i8 %1193 to i32
  %call2128 = call i8* @strchr(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.44, i32 0, i32 0), i32 %conv2127)
  store i8* %call2128, i8** %tmps, align 8
  %tobool2129 = icmp ne i8* %call2128, null
  br i1 %tobool2129, label %if.then.2130, label %if.end.2132

if.then.2130:                                     ; preds = %land.lhs.true.2126
  %1194 = load i8*, i8** %tmps, align 8
  %arrayidx2131 = getelementptr inbounds i8, i8* %1194, i64 5
  %1195 = load i8, i8* %arrayidx2131, align 1
  store i8 %1195, i8* %term, align 1
  br label %if.end.2132

if.end.2132:                                      ; preds = %if.then.2130, %land.lhs.true.2126, %if.end.2123
  %1196 = load i8, i8* %term, align 1
  store i8 %1196, i8* %close, align 1
  %1197 = load i8, i8* %open, align 1
  %conv2133 = sext i8 %1197 to i32
  %1198 = load i8, i8* %close, align 1
  %conv2134 = sext i8 %1198 to i32
  %cmp2135 = icmp eq i32 %conv2133, %conv2134
  br i1 %cmp2135, label %if.then.2137, label %if.else.2166

if.then.2137:                                     ; preds = %if.end.2132
  %1199 = load i8*, i8** %t, align 8
  %incdec.ptr2138 = getelementptr inbounds i8, i8* %1199, i32 1
  store i8* %incdec.ptr2138, i8** %t, align 8
  br label %for.cond.2139

for.cond.2139:                                    ; preds = %for.inc, %if.then.2137
  %1200 = load i8*, i8** %t, align 8
  %1201 = load i8*, i8** @PL_bufend, align 8
  %cmp2140 = icmp ult i8* %1200, %1201
  br i1 %cmp2140, label %for.body.2142, label %for.end.2165

for.body.2142:                                    ; preds = %for.cond.2139
  %1202 = load i8*, i8** %t, align 8
  %1203 = load i8, i8* %1202, align 1
  %conv2143 = sext i8 %1203 to i32
  %cmp2144 = icmp eq i32 %conv2143, 92
  br i1 %cmp2144, label %land.lhs.true.2146, label %if.else.2156

land.lhs.true.2146:                               ; preds = %for.body.2142
  %1204 = load i8*, i8** %t, align 8
  %add.ptr2147 = getelementptr inbounds i8, i8* %1204, i64 1
  %1205 = load i8*, i8** @PL_bufend, align 8
  %cmp2148 = icmp ult i8* %add.ptr2147, %1205
  br i1 %cmp2148, label %land.lhs.true.2150, label %if.else.2156

land.lhs.true.2150:                               ; preds = %land.lhs.true.2146
  %1206 = load i8, i8* %open, align 1
  %conv2151 = sext i8 %1206 to i32
  %cmp2152 = icmp ne i32 %conv2151, 92
  br i1 %cmp2152, label %if.then.2154, label %if.else.2156

if.then.2154:                                     ; preds = %land.lhs.true.2150
  %1207 = load i8*, i8** %t, align 8
  %incdec.ptr2155 = getelementptr inbounds i8, i8* %1207, i32 1
  store i8* %incdec.ptr2155, i8** %t, align 8
  br label %if.end.2163

if.else.2156:                                     ; preds = %land.lhs.true.2150, %land.lhs.true.2146, %for.body.2142
  %1208 = load i8*, i8** %t, align 8
  %1209 = load i8, i8* %1208, align 1
  %conv2157 = sext i8 %1209 to i32
  %1210 = load i8, i8* %open, align 1
  %conv2158 = sext i8 %1210 to i32
  %cmp2159 = icmp eq i32 %conv2157, %conv2158
  br i1 %cmp2159, label %if.then.2161, label %if.end.2162

if.then.2161:                                     ; preds = %if.else.2156
  br label %for.end.2165

if.end.2162:                                      ; preds = %if.else.2156
  br label %if.end.2163

if.end.2163:                                      ; preds = %if.end.2162, %if.then.2154
  br label %for.inc

for.inc:                                          ; preds = %if.end.2163
  %1211 = load i8*, i8** %t, align 8
  %incdec.ptr2164 = getelementptr inbounds i8, i8* %1211, i32 1
  store i8* %incdec.ptr2164, i8** %t, align 8
  br label %for.cond.2139

for.end.2165:                                     ; preds = %if.then.2161, %for.cond.2139
  br label %if.end.2204

if.else.2166:                                     ; preds = %if.end.2132
  %1212 = load i8*, i8** %t, align 8
  %incdec.ptr2167 = getelementptr inbounds i8, i8* %1212, i32 1
  store i8* %incdec.ptr2167, i8** %t, align 8
  br label %for.cond.2168

for.cond.2168:                                    ; preds = %for.inc.2201, %if.else.2166
  %1213 = load i8*, i8** %t, align 8
  %1214 = load i8*, i8** @PL_bufend, align 8
  %cmp2169 = icmp ult i8* %1213, %1214
  br i1 %cmp2169, label %for.body.2171, label %for.end.2203

for.body.2171:                                    ; preds = %for.cond.2168
  %1215 = load i8*, i8** %t, align 8
  %1216 = load i8, i8* %1215, align 1
  %conv2172 = sext i8 %1216 to i32
  %cmp2173 = icmp eq i32 %conv2172, 92
  br i1 %cmp2173, label %land.lhs.true.2175, label %if.else.2181

land.lhs.true.2175:                               ; preds = %for.body.2171
  %1217 = load i8*, i8** %t, align 8
  %add.ptr2176 = getelementptr inbounds i8, i8* %1217, i64 1
  %1218 = load i8*, i8** @PL_bufend, align 8
  %cmp2177 = icmp ult i8* %add.ptr2176, %1218
  br i1 %cmp2177, label %if.then.2179, label %if.else.2181

if.then.2179:                                     ; preds = %land.lhs.true.2175
  %1219 = load i8*, i8** %t, align 8
  %incdec.ptr2180 = getelementptr inbounds i8, i8* %1219, i32 1
  store i8* %incdec.ptr2180, i8** %t, align 8
  br label %if.end.2200

if.else.2181:                                     ; preds = %land.lhs.true.2175, %for.body.2171
  %1220 = load i8*, i8** %t, align 8
  %1221 = load i8, i8* %1220, align 1
  %conv2182 = sext i8 %1221 to i32
  %1222 = load i8, i8* %close, align 1
  %conv2183 = sext i8 %1222 to i32
  %cmp2184 = icmp eq i32 %conv2182, %conv2183
  br i1 %cmp2184, label %land.lhs.true.2186, label %if.else.2191

land.lhs.true.2186:                               ; preds = %if.else.2181
  %1223 = load i32, i32* %brackets, align 4
  %dec2187 = add nsw i32 %1223, -1
  store i32 %dec2187, i32* %brackets, align 4
  %cmp2188 = icmp sle i32 %dec2187, 0
  br i1 %cmp2188, label %if.then.2190, label %if.else.2191

if.then.2190:                                     ; preds = %land.lhs.true.2186
  br label %for.end.2203

if.else.2191:                                     ; preds = %land.lhs.true.2186, %if.else.2181
  %1224 = load i8*, i8** %t, align 8
  %1225 = load i8, i8* %1224, align 1
  %conv2192 = sext i8 %1225 to i32
  %1226 = load i8, i8* %open, align 1
  %conv2193 = sext i8 %1226 to i32
  %cmp2194 = icmp eq i32 %conv2192, %conv2193
  br i1 %cmp2194, label %if.then.2196, label %if.end.2198

if.then.2196:                                     ; preds = %if.else.2191
  %1227 = load i32, i32* %brackets, align 4
  %inc2197 = add nsw i32 %1227, 1
  store i32 %inc2197, i32* %brackets, align 4
  br label %if.end.2198

if.end.2198:                                      ; preds = %if.then.2196, %if.else.2191
  br label %if.end.2199

if.end.2199:                                      ; preds = %if.end.2198
  br label %if.end.2200

if.end.2200:                                      ; preds = %if.end.2199, %if.then.2179
  br label %for.inc.2201

for.inc.2201:                                     ; preds = %if.end.2200
  %1228 = load i8*, i8** %t, align 8
  %incdec.ptr2202 = getelementptr inbounds i8, i8* %1228, i32 1
  store i8* %incdec.ptr2202, i8** %t, align 8
  br label %for.cond.2168

for.end.2203:                                     ; preds = %if.then.2190, %for.cond.2168
  br label %if.end.2204

if.end.2204:                                      ; preds = %for.end.2203, %for.end.2165
  %1229 = load i8*, i8** %t, align 8
  %incdec.ptr2205 = getelementptr inbounds i8, i8* %1229, i32 1
  store i8* %incdec.ptr2205, i8** %t, align 8
  br label %if.end.2278

if.else.2206:                                     ; preds = %lor.lhs.false.2069, %land.lhs.true.2065, %land.lhs.true.2057, %land.lhs.true.2049, %land.lhs.true.2041, %lor.lhs.false.2037, %if.then.2001
  br label %while.cond.2207

while.cond.2207:                                  ; preds = %while.body.2271, %if.else.2206
  %1230 = load i8*, i8** %t, align 8
  %1231 = load i8*, i8** @PL_bufend, align 8
  %cmp2208 = icmp ult i8* %1230, %1231
  br i1 %cmp2208, label %land.rhs.2210, label %land.end.2269

land.rhs.2210:                                    ; preds = %while.cond.2207
  %1232 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private2211 = getelementptr inbounds %struct.cop, %struct.cop* %1232, i32 0, i32 7
  %1233 = load i8, i8* %op_private2211, align 1
  %conv2212 = zext i8 %1233 to i32
  %and2213 = and i32 %conv2212, 8
  %tobool2214 = icmp ne i32 %and2213, 0
  br i1 %tobool2214, label %cond.true.2233, label %lor.lhs.false.2215

lor.lhs.false.2215:                               ; preds = %land.rhs.2210
  %1234 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %tobool2216 = icmp ne %struct.sv* %1234, null
  br i1 %tobool2216, label %land.lhs.true.2217, label %lor.lhs.false.2226

land.lhs.true.2217:                               ; preds = %lor.lhs.false.2215
  %1235 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_flags2218 = getelementptr inbounds %struct.sv, %struct.sv* %1235, i32 0, i32 2
  %1236 = load i32, i32* %sv_flags2218, align 4
  %and2219 = and i32 %1236, 536870912
  %tobool2220 = icmp ne i32 %and2219, 0
  br i1 %tobool2220, label %land.lhs.true.2221, label %lor.lhs.false.2226

land.lhs.true.2221:                               ; preds = %land.lhs.true.2217
  %1237 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private2222 = getelementptr inbounds %struct.cop, %struct.cop* %1237, i32 0, i32 7
  %1238 = load i8, i8* %op_private2222, align 1
  %conv2223 = zext i8 %1238 to i32
  %and2224 = and i32 %conv2223, 8
  %tobool2225 = icmp ne i32 %and2224, 0
  br i1 %tobool2225, label %lor.lhs.false.2226, label %lor.lhs.false.2229

lor.lhs.false.2226:                               ; preds = %land.lhs.true.2221, %land.lhs.true.2217, %lor.lhs.false.2215
  %1239 = load i32, i32* @PL_hints, align 4
  %and2227 = and i32 %1239, 8388608
  %tobool2228 = icmp ne i32 %and2227, 0
  br i1 %tobool2228, label %lor.lhs.false.2229, label %cond.true.2233

lor.lhs.false.2229:                               ; preds = %lor.lhs.false.2226, %land.lhs.true.2221
  %1240 = load i8*, i8** %t, align 8
  %1241 = load i8, i8* %1240, align 1
  %conv2230 = zext i8 %1241 to i32
  %cmp2231 = icmp slt i32 %conv2230, 192
  br i1 %cmp2231, label %cond.true.2233, label %cond.false.2263

cond.true.2233:                                   ; preds = %lor.lhs.false.2229, %lor.lhs.false.2226, %land.rhs.2210
  %1242 = load i8*, i8** %t, align 8
  %1243 = load i8, i8* %1242, align 1
  %conv2234 = sext i8 %1243 to i32
  %cmp2235 = icmp sge i32 %conv2234, 65
  br i1 %cmp2235, label %land.lhs.true.2237, label %lor.lhs.false.2241

land.lhs.true.2237:                               ; preds = %cond.true.2233
  %1244 = load i8*, i8** %t, align 8
  %1245 = load i8, i8* %1244, align 1
  %conv2238 = sext i8 %1245 to i32
  %cmp2239 = icmp sle i32 %conv2238, 90
  br i1 %cmp2239, label %lor.end.2261, label %lor.lhs.false.2241

lor.lhs.false.2241:                               ; preds = %land.lhs.true.2237, %cond.true.2233
  %1246 = load i8*, i8** %t, align 8
  %1247 = load i8, i8* %1246, align 1
  %conv2242 = sext i8 %1247 to i32
  %cmp2243 = icmp sge i32 %conv2242, 97
  br i1 %cmp2243, label %land.lhs.true.2245, label %lor.lhs.false.2249

land.lhs.true.2245:                               ; preds = %lor.lhs.false.2241
  %1248 = load i8*, i8** %t, align 8
  %1249 = load i8, i8* %1248, align 1
  %conv2246 = sext i8 %1249 to i32
  %cmp2247 = icmp sle i32 %conv2246, 122
  br i1 %cmp2247, label %lor.end.2261, label %lor.lhs.false.2249

lor.lhs.false.2249:                               ; preds = %land.lhs.true.2245, %lor.lhs.false.2241
  %1250 = load i8*, i8** %t, align 8
  %1251 = load i8, i8* %1250, align 1
  %conv2250 = sext i8 %1251 to i32
  %cmp2251 = icmp sge i32 %conv2250, 48
  br i1 %cmp2251, label %land.lhs.true.2253, label %lor.rhs.2257

land.lhs.true.2253:                               ; preds = %lor.lhs.false.2249
  %1252 = load i8*, i8** %t, align 8
  %1253 = load i8, i8* %1252, align 1
  %conv2254 = sext i8 %1253 to i32
  %cmp2255 = icmp sle i32 %conv2254, 57
  br i1 %cmp2255, label %lor.end.2261, label %lor.rhs.2257

lor.rhs.2257:                                     ; preds = %land.lhs.true.2253, %lor.lhs.false.2249
  %1254 = load i8*, i8** %t, align 8
  %1255 = load i8, i8* %1254, align 1
  %conv2258 = sext i8 %1255 to i32
  %cmp2259 = icmp eq i32 %conv2258, 95
  br label %lor.end.2261

lor.end.2261:                                     ; preds = %lor.rhs.2257, %land.lhs.true.2253, %land.lhs.true.2245, %land.lhs.true.2237
  %1256 = phi i1 [ true, %land.lhs.true.2253 ], [ true, %land.lhs.true.2245 ], [ true, %land.lhs.true.2237 ], [ %cmp2259, %lor.rhs.2257 ]
  %lor.ext2262 = zext i1 %1256 to i32
  br label %cond.end.2266

cond.false.2263:                                  ; preds = %lor.lhs.false.2229
  %1257 = load i8*, i8** %t, align 8
  %call2264 = call signext i8 @Perl_is_utf8_alnum(i8* %1257)
  %conv2265 = sext i8 %call2264 to i32
  br label %cond.end.2266

cond.end.2266:                                    ; preds = %cond.false.2263, %lor.end.2261
  %cond2267 = phi i32 [ %lor.ext2262, %lor.end.2261 ], [ %conv2265, %cond.false.2263 ]
  %tobool2268 = icmp ne i32 %cond2267, 0
  br label %land.end.2269

land.end.2269:                                    ; preds = %cond.end.2266, %while.cond.2207
  %1258 = phi i1 [ false, %while.cond.2207 ], [ %tobool2268, %cond.end.2266 ]
  br i1 %1258, label %while.body.2271, label %while.end.2277

while.body.2271:                                  ; preds = %land.end.2269
  %1259 = load i8*, i8** %t, align 8
  %1260 = load i8, i8* %1259, align 1
  %idxprom2272 = zext i8 %1260 to i64
  %arrayidx2273 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i32 0, i64 %idxprom2272
  %1261 = load i8, i8* %arrayidx2273, align 1
  %conv2274 = zext i8 %1261 to i32
  %1262 = load i8*, i8** %t, align 8
  %idx.ext2275 = sext i32 %conv2274 to i64
  %add.ptr2276 = getelementptr inbounds i8, i8* %1262, i64 %idx.ext2275
  store i8* %add.ptr2276, i8** %t, align 8
  br label %while.cond.2207

while.end.2277:                                   ; preds = %land.end.2269
  br label %if.end.2278

if.end.2278:                                      ; preds = %while.end.2277, %if.end.2204
  br label %if.end.2412

if.else.2279:                                     ; preds = %if.else.1997
  %1263 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private2280 = getelementptr inbounds %struct.cop, %struct.cop* %1263, i32 0, i32 7
  %1264 = load i8, i8* %op_private2280, align 1
  %conv2281 = zext i8 %1264 to i32
  %and2282 = and i32 %conv2281, 8
  %tobool2283 = icmp ne i32 %and2282, 0
  br i1 %tobool2283, label %cond.true.2302, label %lor.lhs.false.2284

lor.lhs.false.2284:                               ; preds = %if.else.2279
  %1265 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %tobool2285 = icmp ne %struct.sv* %1265, null
  br i1 %tobool2285, label %land.lhs.true.2286, label %lor.lhs.false.2295

land.lhs.true.2286:                               ; preds = %lor.lhs.false.2284
  %1266 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_flags2287 = getelementptr inbounds %struct.sv, %struct.sv* %1266, i32 0, i32 2
  %1267 = load i32, i32* %sv_flags2287, align 4
  %and2288 = and i32 %1267, 536870912
  %tobool2289 = icmp ne i32 %and2288, 0
  br i1 %tobool2289, label %land.lhs.true.2290, label %lor.lhs.false.2295

land.lhs.true.2290:                               ; preds = %land.lhs.true.2286
  %1268 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private2291 = getelementptr inbounds %struct.cop, %struct.cop* %1268, i32 0, i32 7
  %1269 = load i8, i8* %op_private2291, align 1
  %conv2292 = zext i8 %1269 to i32
  %and2293 = and i32 %conv2292, 8
  %tobool2294 = icmp ne i32 %and2293, 0
  br i1 %tobool2294, label %lor.lhs.false.2295, label %lor.lhs.false.2298

lor.lhs.false.2295:                               ; preds = %land.lhs.true.2290, %land.lhs.true.2286, %lor.lhs.false.2284
  %1270 = load i32, i32* @PL_hints, align 4
  %and2296 = and i32 %1270, 8388608
  %tobool2297 = icmp ne i32 %and2296, 0
  br i1 %tobool2297, label %lor.lhs.false.2298, label %cond.true.2302

lor.lhs.false.2298:                               ; preds = %lor.lhs.false.2295, %land.lhs.true.2290
  %1271 = load i8*, i8** %t, align 8
  %1272 = load i8, i8* %1271, align 1
  %conv2299 = zext i8 %1272 to i32
  %cmp2300 = icmp slt i32 %conv2299, 192
  br i1 %cmp2300, label %cond.true.2302, label %cond.false.2330

cond.true.2302:                                   ; preds = %lor.lhs.false.2298, %lor.lhs.false.2295, %if.else.2279
  %1273 = load i8*, i8** %t, align 8
  %1274 = load i8, i8* %1273, align 1
  %conv2303 = sext i8 %1274 to i32
  %cmp2304 = icmp sge i32 %conv2303, 65
  br i1 %cmp2304, label %land.lhs.true.2306, label %lor.lhs.false.2310

land.lhs.true.2306:                               ; preds = %cond.true.2302
  %1275 = load i8*, i8** %t, align 8
  %1276 = load i8, i8* %1275, align 1
  %conv2307 = sext i8 %1276 to i32
  %cmp2308 = icmp sle i32 %conv2307, 90
  br i1 %cmp2308, label %if.then.2334, label %lor.lhs.false.2310

lor.lhs.false.2310:                               ; preds = %land.lhs.true.2306, %cond.true.2302
  %1277 = load i8*, i8** %t, align 8
  %1278 = load i8, i8* %1277, align 1
  %conv2311 = sext i8 %1278 to i32
  %cmp2312 = icmp sge i32 %conv2311, 97
  br i1 %cmp2312, label %land.lhs.true.2314, label %lor.lhs.false.2318

land.lhs.true.2314:                               ; preds = %lor.lhs.false.2310
  %1279 = load i8*, i8** %t, align 8
  %1280 = load i8, i8* %1279, align 1
  %conv2315 = sext i8 %1280 to i32
  %cmp2316 = icmp sle i32 %conv2315, 122
  br i1 %cmp2316, label %if.then.2334, label %lor.lhs.false.2318

lor.lhs.false.2318:                               ; preds = %land.lhs.true.2314, %lor.lhs.false.2310
  %1281 = load i8*, i8** %t, align 8
  %1282 = load i8, i8* %1281, align 1
  %conv2319 = sext i8 %1282 to i32
  %cmp2320 = icmp sge i32 %conv2319, 48
  br i1 %cmp2320, label %land.lhs.true.2322, label %lor.lhs.false.2326

land.lhs.true.2322:                               ; preds = %lor.lhs.false.2318
  %1283 = load i8*, i8** %t, align 8
  %1284 = load i8, i8* %1283, align 1
  %conv2323 = sext i8 %1284 to i32
  %cmp2324 = icmp sle i32 %conv2323, 57
  br i1 %cmp2324, label %if.then.2334, label %lor.lhs.false.2326

lor.lhs.false.2326:                               ; preds = %land.lhs.true.2322, %lor.lhs.false.2318
  %1285 = load i8*, i8** %t, align 8
  %1286 = load i8, i8* %1285, align 1
  %conv2327 = sext i8 %1286 to i32
  %cmp2328 = icmp eq i32 %conv2327, 95
  br i1 %cmp2328, label %if.then.2334, label %if.end.2411

cond.false.2330:                                  ; preds = %lor.lhs.false.2298
  %1287 = load i8*, i8** %t, align 8
  %call2331 = call signext i8 @Perl_is_utf8_alnum(i8* %1287)
  %conv2332 = sext i8 %call2331 to i32
  %tobool2333 = icmp ne i32 %conv2332, 0
  br i1 %tobool2333, label %if.then.2334, label %if.end.2411

if.then.2334:                                     ; preds = %cond.false.2330, %lor.lhs.false.2326, %land.lhs.true.2322, %land.lhs.true.2314, %land.lhs.true.2306
  %1288 = load i8*, i8** %t, align 8
  %1289 = load i8, i8* %1288, align 1
  %idxprom2335 = zext i8 %1289 to i64
  %arrayidx2336 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i32 0, i64 %idxprom2335
  %1290 = load i8, i8* %arrayidx2336, align 1
  %conv2337 = zext i8 %1290 to i32
  %1291 = load i8*, i8** %t, align 8
  %idx.ext2338 = sext i32 %conv2337 to i64
  %add.ptr2339 = getelementptr inbounds i8, i8* %1291, i64 %idx.ext2338
  store i8* %add.ptr2339, i8** %t, align 8
  br label %while.cond.2340

while.cond.2340:                                  ; preds = %while.body.2404, %if.then.2334
  %1292 = load i8*, i8** %t, align 8
  %1293 = load i8*, i8** @PL_bufend, align 8
  %cmp2341 = icmp ult i8* %1292, %1293
  br i1 %cmp2341, label %land.rhs.2343, label %land.end.2402

land.rhs.2343:                                    ; preds = %while.cond.2340
  %1294 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private2344 = getelementptr inbounds %struct.cop, %struct.cop* %1294, i32 0, i32 7
  %1295 = load i8, i8* %op_private2344, align 1
  %conv2345 = zext i8 %1295 to i32
  %and2346 = and i32 %conv2345, 8
  %tobool2347 = icmp ne i32 %and2346, 0
  br i1 %tobool2347, label %cond.true.2366, label %lor.lhs.false.2348

lor.lhs.false.2348:                               ; preds = %land.rhs.2343
  %1296 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %tobool2349 = icmp ne %struct.sv* %1296, null
  br i1 %tobool2349, label %land.lhs.true.2350, label %lor.lhs.false.2359

land.lhs.true.2350:                               ; preds = %lor.lhs.false.2348
  %1297 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_flags2351 = getelementptr inbounds %struct.sv, %struct.sv* %1297, i32 0, i32 2
  %1298 = load i32, i32* %sv_flags2351, align 4
  %and2352 = and i32 %1298, 536870912
  %tobool2353 = icmp ne i32 %and2352, 0
  br i1 %tobool2353, label %land.lhs.true.2354, label %lor.lhs.false.2359

land.lhs.true.2354:                               ; preds = %land.lhs.true.2350
  %1299 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private2355 = getelementptr inbounds %struct.cop, %struct.cop* %1299, i32 0, i32 7
  %1300 = load i8, i8* %op_private2355, align 1
  %conv2356 = zext i8 %1300 to i32
  %and2357 = and i32 %conv2356, 8
  %tobool2358 = icmp ne i32 %and2357, 0
  br i1 %tobool2358, label %lor.lhs.false.2359, label %lor.lhs.false.2362

lor.lhs.false.2359:                               ; preds = %land.lhs.true.2354, %land.lhs.true.2350, %lor.lhs.false.2348
  %1301 = load i32, i32* @PL_hints, align 4
  %and2360 = and i32 %1301, 8388608
  %tobool2361 = icmp ne i32 %and2360, 0
  br i1 %tobool2361, label %lor.lhs.false.2362, label %cond.true.2366

lor.lhs.false.2362:                               ; preds = %lor.lhs.false.2359, %land.lhs.true.2354
  %1302 = load i8*, i8** %t, align 8
  %1303 = load i8, i8* %1302, align 1
  %conv2363 = zext i8 %1303 to i32
  %cmp2364 = icmp slt i32 %conv2363, 192
  br i1 %cmp2364, label %cond.true.2366, label %cond.false.2396

cond.true.2366:                                   ; preds = %lor.lhs.false.2362, %lor.lhs.false.2359, %land.rhs.2343
  %1304 = load i8*, i8** %t, align 8
  %1305 = load i8, i8* %1304, align 1
  %conv2367 = sext i8 %1305 to i32
  %cmp2368 = icmp sge i32 %conv2367, 65
  br i1 %cmp2368, label %land.lhs.true.2370, label %lor.lhs.false.2374

land.lhs.true.2370:                               ; preds = %cond.true.2366
  %1306 = load i8*, i8** %t, align 8
  %1307 = load i8, i8* %1306, align 1
  %conv2371 = sext i8 %1307 to i32
  %cmp2372 = icmp sle i32 %conv2371, 90
  br i1 %cmp2372, label %lor.end.2394, label %lor.lhs.false.2374

lor.lhs.false.2374:                               ; preds = %land.lhs.true.2370, %cond.true.2366
  %1308 = load i8*, i8** %t, align 8
  %1309 = load i8, i8* %1308, align 1
  %conv2375 = sext i8 %1309 to i32
  %cmp2376 = icmp sge i32 %conv2375, 97
  br i1 %cmp2376, label %land.lhs.true.2378, label %lor.lhs.false.2382

land.lhs.true.2378:                               ; preds = %lor.lhs.false.2374
  %1310 = load i8*, i8** %t, align 8
  %1311 = load i8, i8* %1310, align 1
  %conv2379 = sext i8 %1311 to i32
  %cmp2380 = icmp sle i32 %conv2379, 122
  br i1 %cmp2380, label %lor.end.2394, label %lor.lhs.false.2382

lor.lhs.false.2382:                               ; preds = %land.lhs.true.2378, %lor.lhs.false.2374
  %1312 = load i8*, i8** %t, align 8
  %1313 = load i8, i8* %1312, align 1
  %conv2383 = sext i8 %1313 to i32
  %cmp2384 = icmp sge i32 %conv2383, 48
  br i1 %cmp2384, label %land.lhs.true.2386, label %lor.rhs.2390

land.lhs.true.2386:                               ; preds = %lor.lhs.false.2382
  %1314 = load i8*, i8** %t, align 8
  %1315 = load i8, i8* %1314, align 1
  %conv2387 = sext i8 %1315 to i32
  %cmp2388 = icmp sle i32 %conv2387, 57
  br i1 %cmp2388, label %lor.end.2394, label %lor.rhs.2390

lor.rhs.2390:                                     ; preds = %land.lhs.true.2386, %lor.lhs.false.2382
  %1316 = load i8*, i8** %t, align 8
  %1317 = load i8, i8* %1316, align 1
  %conv2391 = sext i8 %1317 to i32
  %cmp2392 = icmp eq i32 %conv2391, 95
  br label %lor.end.2394

lor.end.2394:                                     ; preds = %lor.rhs.2390, %land.lhs.true.2386, %land.lhs.true.2378, %land.lhs.true.2370
  %1318 = phi i1 [ true, %land.lhs.true.2386 ], [ true, %land.lhs.true.2378 ], [ true, %land.lhs.true.2370 ], [ %cmp2392, %lor.rhs.2390 ]
  %lor.ext2395 = zext i1 %1318 to i32
  br label %cond.end.2399

cond.false.2396:                                  ; preds = %lor.lhs.false.2362
  %1319 = load i8*, i8** %t, align 8
  %call2397 = call signext i8 @Perl_is_utf8_alnum(i8* %1319)
  %conv2398 = sext i8 %call2397 to i32
  br label %cond.end.2399

cond.end.2399:                                    ; preds = %cond.false.2396, %lor.end.2394
  %cond2400 = phi i32 [ %lor.ext2395, %lor.end.2394 ], [ %conv2398, %cond.false.2396 ]
  %tobool2401 = icmp ne i32 %cond2400, 0
  br label %land.end.2402

land.end.2402:                                    ; preds = %cond.end.2399, %while.cond.2340
  %1320 = phi i1 [ false, %while.cond.2340 ], [ %tobool2401, %cond.end.2399 ]
  br i1 %1320, label %while.body.2404, label %while.end.2410

while.body.2404:                                  ; preds = %land.end.2402
  %1321 = load i8*, i8** %t, align 8
  %1322 = load i8, i8* %1321, align 1
  %idxprom2405 = zext i8 %1322 to i64
  %arrayidx2406 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i32 0, i64 %idxprom2405
  %1323 = load i8, i8* %arrayidx2406, align 1
  %conv2407 = zext i8 %1323 to i32
  %1324 = load i8*, i8** %t, align 8
  %idx.ext2408 = sext i32 %conv2407 to i64
  %add.ptr2409 = getelementptr inbounds i8, i8* %1324, i64 %idx.ext2408
  store i8* %add.ptr2409, i8** %t, align 8
  br label %while.cond.2340

while.end.2410:                                   ; preds = %land.end.2402
  br label %if.end.2411

if.end.2411:                                      ; preds = %while.end.2410, %cond.false.2330, %lor.lhs.false.2326
  br label %if.end.2412

if.end.2412:                                      ; preds = %if.end.2411, %if.end.2278
  br label %if.end.2413

if.end.2413:                                      ; preds = %if.end.2412, %for.end
  br label %while.cond.2414

while.cond.2414:                                  ; preds = %while.body.2441, %if.end.2413
  %1325 = load i8*, i8** %t, align 8
  %1326 = load i8*, i8** @PL_bufend, align 8
  %cmp2415 = icmp ult i8* %1325, %1326
  br i1 %cmp2415, label %land.rhs.2417, label %land.end.2439

land.rhs.2417:                                    ; preds = %while.cond.2414
  %1327 = load i8*, i8** %t, align 8
  %1328 = load i8, i8* %1327, align 1
  %conv2418 = sext i8 %1328 to i32
  %cmp2419 = icmp eq i32 %conv2418, 32
  br i1 %cmp2419, label %lor.end.2437, label %lor.lhs.false.2421

lor.lhs.false.2421:                               ; preds = %land.rhs.2417
  %1329 = load i8*, i8** %t, align 8
  %1330 = load i8, i8* %1329, align 1
  %conv2422 = sext i8 %1330 to i32
  %cmp2423 = icmp eq i32 %conv2422, 9
  br i1 %cmp2423, label %lor.end.2437, label %lor.lhs.false.2425

lor.lhs.false.2425:                               ; preds = %lor.lhs.false.2421
  %1331 = load i8*, i8** %t, align 8
  %1332 = load i8, i8* %1331, align 1
  %conv2426 = sext i8 %1332 to i32
  %cmp2427 = icmp eq i32 %conv2426, 10
  br i1 %cmp2427, label %lor.end.2437, label %lor.lhs.false.2429

lor.lhs.false.2429:                               ; preds = %lor.lhs.false.2425
  %1333 = load i8*, i8** %t, align 8
  %1334 = load i8, i8* %1333, align 1
  %conv2430 = sext i8 %1334 to i32
  %cmp2431 = icmp eq i32 %conv2430, 13
  br i1 %cmp2431, label %lor.end.2437, label %lor.rhs.2433

lor.rhs.2433:                                     ; preds = %lor.lhs.false.2429
  %1335 = load i8*, i8** %t, align 8
  %1336 = load i8, i8* %1335, align 1
  %conv2434 = sext i8 %1336 to i32
  %cmp2435 = icmp eq i32 %conv2434, 12
  br label %lor.end.2437

lor.end.2437:                                     ; preds = %lor.rhs.2433, %lor.lhs.false.2429, %lor.lhs.false.2425, %lor.lhs.false.2421, %land.rhs.2417
  %1337 = phi i1 [ true, %lor.lhs.false.2429 ], [ true, %lor.lhs.false.2425 ], [ true, %lor.lhs.false.2421 ], [ true, %land.rhs.2417 ], [ %cmp2435, %lor.rhs.2433 ]
  br label %land.end.2439

land.end.2439:                                    ; preds = %lor.end.2437, %while.cond.2414
  %1338 = phi i1 [ false, %while.cond.2414 ], [ %1337, %lor.end.2437 ]
  br i1 %1338, label %while.body.2441, label %while.end.2443

while.body.2441:                                  ; preds = %land.end.2439
  %1339 = load i8*, i8** %t, align 8
  %incdec.ptr2442 = getelementptr inbounds i8, i8* %1339, i32 1
  store i8* %incdec.ptr2442, i8** %t, align 8
  br label %while.cond.2414

while.end.2443:                                   ; preds = %land.end.2439
  %1340 = load i8*, i8** %t, align 8
  %1341 = load i8*, i8** @PL_bufend, align 8
  %cmp2444 = icmp ult i8* %1340, %1341
  br i1 %cmp2444, label %land.lhs.true.2446, label %if.end.2472

land.lhs.true.2446:                               ; preds = %while.end.2443
  %1342 = load i8*, i8** %t, align 8
  %1343 = load i8, i8* %1342, align 1
  %conv2447 = sext i8 %1343 to i32
  %cmp2448 = icmp eq i32 %conv2447, 44
  br i1 %cmp2448, label %land.lhs.true.2450, label %lor.lhs.false.2462

land.lhs.true.2450:                               ; preds = %land.lhs.true.2446
  %1344 = load i8*, i8** %s, align 8
  %1345 = load i8, i8* %1344, align 1
  %conv2451 = sext i8 %1345 to i32
  %cmp2452 = icmp eq i32 %conv2451, 113
  br i1 %cmp2452, label %if.then.2471, label %lor.lhs.false.2454

lor.lhs.false.2454:                               ; preds = %land.lhs.true.2450
  %1346 = load i8*, i8** %s, align 8
  %1347 = load i8, i8* %1346, align 1
  %conv2455 = sext i8 %1347 to i32
  %cmp2456 = icmp sge i32 %conv2455, 97
  br i1 %cmp2456, label %land.lhs.true.2458, label %if.then.2471

land.lhs.true.2458:                               ; preds = %lor.lhs.false.2454
  %1348 = load i8*, i8** %s, align 8
  %1349 = load i8, i8* %1348, align 1
  %conv2459 = sext i8 %1349 to i32
  %cmp2460 = icmp sle i32 %conv2459, 122
  br i1 %cmp2460, label %lor.lhs.false.2462, label %if.then.2471

lor.lhs.false.2462:                               ; preds = %land.lhs.true.2458, %land.lhs.true.2446
  %1350 = load i8*, i8** %t, align 8
  %1351 = load i8, i8* %1350, align 1
  %conv2463 = sext i8 %1351 to i32
  %cmp2464 = icmp eq i32 %conv2463, 61
  br i1 %cmp2464, label %land.lhs.true.2466, label %if.end.2472

land.lhs.true.2466:                               ; preds = %lor.lhs.false.2462
  %1352 = load i8*, i8** %t, align 8
  %arrayidx2467 = getelementptr inbounds i8, i8* %1352, i64 1
  %1353 = load i8, i8* %arrayidx2467, align 1
  %conv2468 = sext i8 %1353 to i32
  %cmp2469 = icmp eq i32 %conv2468, 62
  br i1 %cmp2469, label %if.then.2471, label %if.end.2472

if.then.2471:                                     ; preds = %land.lhs.true.2466, %land.lhs.true.2458, %lor.lhs.false.2454, %land.lhs.true.2450
  store i32 1, i32* @PL_expect, align 4
  %1354 = load i8*, i8** %s, align 8
  store i8* %1354, i8** @PL_bufptr, align 8
  store i32 293, i32* %retval
  br label %return

if.end.2472:                                      ; preds = %land.lhs.true.2466, %lor.lhs.false.2462, %while.end.2443
  %1355 = load i32, i32* @PL_expect, align 4
  %cmp2473 = icmp eq i32 %1355, 2
  br i1 %cmp2473, label %if.then.2475, label %if.else.2476

if.then.2475:                                     ; preds = %if.end.2472
  store i32 1, i32* @PL_expect, align 4
  br label %if.end.2480

if.else.2476:                                     ; preds = %if.end.2472
  %1356 = load i32, i32* @PL_lex_brackets, align 4
  %sub2477 = sub nsw i32 %1356, 1
  %idxprom2478 = sext i32 %sub2477 to i64
  %1357 = load i8*, i8** @PL_lex_brackstack, align 8
  %arrayidx2479 = getelementptr inbounds i8, i8* %1357, i64 %idxprom2478
  store i8 3, i8* %arrayidx2479, align 1
  store i32 3, i32* @PL_expect, align 4
  br label %if.end.2480

if.end.2480:                                      ; preds = %if.else.2476, %if.then.2475
  br label %sw.epilog.2481

sw.epilog.2481:                                   ; preds = %if.end.2480, %if.then.1953, %sw.bb.1926, %sw.bb.1922
  %1358 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line2482 = getelementptr inbounds %struct.cop, %struct.cop* %1358, i32 0, i32 13
  %1359 = load i32, i32* %cop_line2482, align 4
  store i32 %1359, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  %1360 = load i8*, i8** %s, align 8
  %1361 = load i8, i8* %1360, align 1
  %conv2483 = sext i8 %1361 to i32
  %cmp2484 = icmp eq i32 %conv2483, 32
  br i1 %cmp2484, label %if.then.2506, label %lor.lhs.false.2486

lor.lhs.false.2486:                               ; preds = %sw.epilog.2481
  %1362 = load i8*, i8** %s, align 8
  %1363 = load i8, i8* %1362, align 1
  %conv2487 = sext i8 %1363 to i32
  %cmp2488 = icmp eq i32 %conv2487, 9
  br i1 %cmp2488, label %if.then.2506, label %lor.lhs.false.2490

lor.lhs.false.2490:                               ; preds = %lor.lhs.false.2486
  %1364 = load i8*, i8** %s, align 8
  %1365 = load i8, i8* %1364, align 1
  %conv2491 = sext i8 %1365 to i32
  %cmp2492 = icmp eq i32 %conv2491, 10
  br i1 %cmp2492, label %if.then.2506, label %lor.lhs.false.2494

lor.lhs.false.2494:                               ; preds = %lor.lhs.false.2490
  %1366 = load i8*, i8** %s, align 8
  %1367 = load i8, i8* %1366, align 1
  %conv2495 = sext i8 %1367 to i32
  %cmp2496 = icmp eq i32 %conv2495, 13
  br i1 %cmp2496, label %if.then.2506, label %lor.lhs.false.2498

lor.lhs.false.2498:                               ; preds = %lor.lhs.false.2494
  %1368 = load i8*, i8** %s, align 8
  %1369 = load i8, i8* %1368, align 1
  %conv2499 = sext i8 %1369 to i32
  %cmp2500 = icmp eq i32 %conv2499, 12
  br i1 %cmp2500, label %if.then.2506, label %lor.lhs.false.2502

lor.lhs.false.2502:                               ; preds = %lor.lhs.false.2498
  %1370 = load i8*, i8** %s, align 8
  %1371 = load i8, i8* %1370, align 1
  %conv2503 = sext i8 %1371 to i32
  %cmp2504 = icmp eq i32 %conv2503, 35
  br i1 %cmp2504, label %if.then.2506, label %if.end.2507

if.then.2506:                                     ; preds = %lor.lhs.false.2502, %lor.lhs.false.2498, %lor.lhs.false.2494, %lor.lhs.false.2490, %lor.lhs.false.2486, %sw.epilog.2481
  store i32 -1, i32* @PL_copline, align 4
  br label %if.end.2507

if.end.2507:                                      ; preds = %if.then.2506, %lor.lhs.false.2502
  %1372 = load i8*, i8** %s, align 8
  store i8* %1372, i8** @PL_bufptr, align 8
  store i32 123, i32* %retval
  br label %return

sw.bb.2508:                                       ; preds = %retry
  br label %rightbracket

rightbracket:                                     ; preds = %if.then.3963, %sw.bb.2508, %if.then.254
  %1373 = load i8*, i8** %s, align 8
  %incdec.ptr2509 = getelementptr inbounds i8, i8* %1373, i32 1
  store i8* %incdec.ptr2509, i8** %s, align 8
  %1374 = load i32, i32* @PL_lex_brackets, align 4
  %cmp2510 = icmp sle i32 %1374, 0
  br i1 %cmp2510, label %if.then.2512, label %if.else.2514

if.then.2512:                                     ; preds = %rightbracket
  %call2513 = call i32 @Perl_yyerror(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.45, i32 0, i32 0))
  br label %if.end.2519

if.else.2514:                                     ; preds = %rightbracket
  %1375 = load i32, i32* @PL_lex_brackets, align 4
  %dec2515 = add nsw i32 %1375, -1
  store i32 %dec2515, i32* @PL_lex_brackets, align 4
  %idxprom2516 = sext i32 %dec2515 to i64
  %1376 = load i8*, i8** @PL_lex_brackstack, align 8
  %arrayidx2517 = getelementptr inbounds i8, i8* %1376, i64 %idxprom2516
  %1377 = load i8, i8* %arrayidx2517, align 1
  %conv2518 = sext i8 %1377 to i32
  store i32 %conv2518, i32* @PL_expect, align 4
  br label %if.end.2519

if.end.2519:                                      ; preds = %if.else.2514, %if.then.2512
  %1378 = load i32, i32* @PL_lex_brackets, align 4
  %1379 = load i32, i32* @PL_lex_formbrack, align 4
  %cmp2520 = icmp slt i32 %1378, %1379
  br i1 %cmp2520, label %land.lhs.true.2522, label %if.end.2526

land.lhs.true.2522:                               ; preds = %if.end.2519
  %1380 = load i32, i32* @PL_lex_state, align 4
  %cmp2523 = icmp ne i32 %1380, 9
  br i1 %cmp2523, label %if.then.2525, label %if.end.2526

if.then.2525:                                     ; preds = %land.lhs.true.2522
  store i32 0, i32* @PL_lex_formbrack, align 4
  br label %if.end.2526

if.end.2526:                                      ; preds = %if.then.2525, %land.lhs.true.2522, %if.end.2519
  %1381 = load i32, i32* @PL_lex_state, align 4
  %cmp2527 = icmp eq i32 %1381, 9
  br i1 %cmp2527, label %if.then.2529, label %if.end.2560

if.then.2529:                                     ; preds = %if.end.2526
  %1382 = load i32, i32* @PL_lex_brackets, align 4
  %cmp2530 = icmp eq i32 %1382, 0
  br i1 %cmp2530, label %if.then.2532, label %if.end.2559

if.then.2532:                                     ; preds = %if.then.2529
  %1383 = load i32, i32* @PL_expect, align 4
  %and2533 = and i32 %1383, 128
  %tobool2534 = icmp ne i32 %and2533, 0
  br i1 %tobool2534, label %if.then.2535, label %if.end.2538

if.then.2535:                                     ; preds = %if.then.2532
  %1384 = load i32, i32* @PL_expect, align 4
  %and2536 = and i32 %1384, 127
  store i32 %and2536, i32* @PL_expect, align 4
  store i32 5, i32* @PL_lex_state, align 4
  %1385 = load i8*, i8** %s, align 8
  store i8* %1385, i8** @PL_bufptr, align 8
  %call2537 = call i32 @Perl_yylex()
  store i32 %call2537, i32* %retval
  br label %return

if.end.2538:                                      ; preds = %if.then.2532
  %1386 = load i8*, i8** %s, align 8
  %1387 = load i8, i8* %1386, align 1
  %conv2539 = sext i8 %1387 to i32
  %cmp2540 = icmp eq i32 %conv2539, 45
  br i1 %cmp2540, label %land.lhs.true.2542, label %if.else.2548

land.lhs.true.2542:                               ; preds = %if.end.2538
  %1388 = load i8*, i8** %s, align 8
  %arrayidx2543 = getelementptr inbounds i8, i8* %1388, i64 1
  %1389 = load i8, i8* %arrayidx2543, align 1
  %conv2544 = sext i8 %1389 to i32
  %cmp2545 = icmp eq i32 %conv2544, 62
  br i1 %cmp2545, label %if.then.2547, label %if.else.2548

if.then.2547:                                     ; preds = %land.lhs.true.2542
  store i32 4, i32* @PL_lex_state, align 4
  br label %if.end.2558

if.else.2548:                                     ; preds = %land.lhs.true.2542, %if.end.2538
  %1390 = load i8*, i8** %s, align 8
  %1391 = load i8, i8* %1390, align 1
  %conv2549 = sext i8 %1391 to i32
  %cmp2550 = icmp ne i32 %conv2549, 91
  br i1 %cmp2550, label %land.lhs.true.2552, label %if.end.2557

land.lhs.true.2552:                               ; preds = %if.else.2548
  %1392 = load i8*, i8** %s, align 8
  %1393 = load i8, i8* %1392, align 1
  %conv2553 = sext i8 %1393 to i32
  %cmp2554 = icmp ne i32 %conv2553, 123
  br i1 %cmp2554, label %if.then.2556, label %if.end.2557

if.then.2556:                                     ; preds = %land.lhs.true.2552
  store i32 5, i32* @PL_lex_state, align 4
  br label %if.end.2557

if.end.2557:                                      ; preds = %if.then.2556, %land.lhs.true.2552, %if.else.2548
  br label %if.end.2558

if.end.2558:                                      ; preds = %if.end.2557, %if.then.2547
  br label %if.end.2559

if.end.2559:                                      ; preds = %if.end.2558, %if.then.2529
  br label %if.end.2560

if.end.2560:                                      ; preds = %if.end.2559, %if.end.2526
  %1394 = load i32, i32* @PL_expect, align 4
  %and2561 = and i32 %1394, 128
  %tobool2562 = icmp ne i32 %and2561, 0
  br i1 %tobool2562, label %if.then.2563, label %if.end.2566

if.then.2563:                                     ; preds = %if.end.2560
  %1395 = load i32, i32* @PL_expect, align 4
  %and2564 = and i32 %1395, 127
  store i32 %and2564, i32* @PL_expect, align 4
  %1396 = load i8*, i8** %s, align 8
  store i8* %1396, i8** @PL_bufptr, align 8
  %call2565 = call i32 @Perl_yylex()
  store i32 %call2565, i32* %retval
  br label %return

if.end.2566:                                      ; preds = %if.end.2560
  call void @S_force_next(i32 125)
  %1397 = load i8*, i8** %s, align 8
  store i8* %1397, i8** @PL_bufptr, align 8
  store i32 59, i32* %retval
  br label %return

sw.bb.2567:                                       ; preds = %retry
  %1398 = load i8*, i8** %s, align 8
  %incdec.ptr2568 = getelementptr inbounds i8, i8* %1398, i32 1
  store i8* %incdec.ptr2568, i8** %s, align 8
  %1399 = load i8*, i8** %s, align 8
  %incdec.ptr2569 = getelementptr inbounds i8, i8* %1399, i32 1
  store i8* %incdec.ptr2569, i8** %s, align 8
  %1400 = load i8, i8* %1399, align 1
  %conv2570 = sext i8 %1400 to i32
  store i32 %conv2570, i32* %tmp, align 4
  %1401 = load i32, i32* %tmp, align 4
  %cmp2571 = icmp eq i32 %1401, 38
  br i1 %cmp2571, label %if.then.2573, label %if.end.2575

if.then.2573:                                     ; preds = %sw.bb.2567
  store i32 1, i32* @PL_expect, align 4
  %1402 = load i8*, i8** %s, align 8
  store i8* %1402, i8** @PL_bufptr, align 8
  %call2574 = call i32 @S_ao(i32 305)
  store i32 %call2574, i32* %retval
  br label %return

if.end.2575:                                      ; preds = %sw.bb.2567
  %1403 = load i8*, i8** %s, align 8
  %incdec.ptr2576 = getelementptr inbounds i8, i8* %1403, i32 -1
  store i8* %incdec.ptr2576, i8** %s, align 8
  %1404 = load i32, i32* @PL_expect, align 4
  %cmp2577 = icmp eq i32 %1404, 0
  br i1 %cmp2577, label %if.then.2579, label %if.end.2666

if.then.2579:                                     ; preds = %if.end.2575
  %1405 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings = getelementptr inbounds %struct.cop, %struct.cop* %1405, i32 0, i32 14
  %1406 = load %struct.sv*, %struct.sv** %cop_warnings, align 8
  %cmp2580 = icmp ne %struct.sv* %1406, null
  br i1 %cmp2580, label %land.lhs.true.2582, label %lor.lhs.false.2598

land.lhs.true.2582:                               ; preds = %if.then.2579
  %1407 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings2583 = getelementptr inbounds %struct.cop, %struct.cop* %1407, i32 0, i32 14
  %1408 = load %struct.sv*, %struct.sv** %cop_warnings2583, align 8
  %cmp2584 = icmp ne %struct.sv* %1408, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 2)
  br i1 %cmp2584, label %land.lhs.true.2586, label %lor.lhs.false.2598

land.lhs.true.2586:                               ; preds = %land.lhs.true.2582
  %1409 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings2587 = getelementptr inbounds %struct.cop, %struct.cop* %1409, i32 0, i32 14
  %1410 = load %struct.sv*, %struct.sv** %cop_warnings2587, align 8
  %cmp2588 = icmp eq %struct.sv* %1410, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 1)
  br i1 %cmp2588, label %land.lhs.true.2606, label %lor.lhs.false.2590

lor.lhs.false.2590:                               ; preds = %land.lhs.true.2586
  %1411 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings2591 = getelementptr inbounds %struct.cop, %struct.cop* %1411, i32 0, i32 14
  %1412 = load %struct.sv*, %struct.sv** %cop_warnings2591, align 8
  %sv_any2592 = getelementptr inbounds %struct.sv, %struct.sv* %1412, i32 0, i32 0
  %1413 = load i8*, i8** %sv_any2592, align 8
  %1414 = bitcast i8* %1413 to %struct.xpv*
  %xpv_pv2593 = getelementptr inbounds %struct.xpv, %struct.xpv* %1414, i32 0, i32 0
  %1415 = load i8*, i8** %xpv_pv2593, align 8
  %arrayidx2594 = getelementptr inbounds i8, i8* %1415, i64 9
  %1416 = load i8, i8* %arrayidx2594, align 1
  %conv2595 = sext i8 %1416 to i32
  %and2596 = and i32 %conv2595, 16
  %tobool2597 = icmp ne i32 %and2596, 0
  br i1 %tobool2597, label %land.lhs.true.2606, label %lor.lhs.false.2598

lor.lhs.false.2598:                               ; preds = %lor.lhs.false.2590, %land.lhs.true.2582, %if.then.2579
  %1417 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings2599 = getelementptr inbounds %struct.cop, %struct.cop* %1417, i32 0, i32 14
  %1418 = load %struct.sv*, %struct.sv** %cop_warnings2599, align 8
  %cmp2600 = icmp eq %struct.sv* %1418, null
  br i1 %cmp2600, label %land.lhs.true.2602, label %if.end.2664

land.lhs.true.2602:                               ; preds = %lor.lhs.false.2598
  %1419 = load i8, i8* @PL_dowarn, align 1
  %conv2603 = zext i8 %1419 to i32
  %and2604 = and i32 %conv2603, 1
  %tobool2605 = icmp ne i32 %and2604, 0
  br i1 %tobool2605, label %land.lhs.true.2606, label %if.end.2664

land.lhs.true.2606:                               ; preds = %land.lhs.true.2602, %lor.lhs.false.2590, %land.lhs.true.2586
  %1420 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private2607 = getelementptr inbounds %struct.cop, %struct.cop* %1420, i32 0, i32 7
  %1421 = load i8, i8* %op_private2607, align 1
  %conv2608 = zext i8 %1421 to i32
  %and2609 = and i32 %conv2608, 8
  %tobool2610 = icmp ne i32 %and2609, 0
  br i1 %tobool2610, label %cond.true.2629, label %lor.lhs.false.2611

lor.lhs.false.2611:                               ; preds = %land.lhs.true.2606
  %1422 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %tobool2612 = icmp ne %struct.sv* %1422, null
  br i1 %tobool2612, label %land.lhs.true.2613, label %lor.lhs.false.2622

land.lhs.true.2613:                               ; preds = %lor.lhs.false.2611
  %1423 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_flags2614 = getelementptr inbounds %struct.sv, %struct.sv* %1423, i32 0, i32 2
  %1424 = load i32, i32* %sv_flags2614, align 4
  %and2615 = and i32 %1424, 536870912
  %tobool2616 = icmp ne i32 %and2615, 0
  br i1 %tobool2616, label %land.lhs.true.2617, label %lor.lhs.false.2622

land.lhs.true.2617:                               ; preds = %land.lhs.true.2613
  %1425 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private2618 = getelementptr inbounds %struct.cop, %struct.cop* %1425, i32 0, i32 7
  %1426 = load i8, i8* %op_private2618, align 1
  %conv2619 = zext i8 %1426 to i32
  %and2620 = and i32 %conv2619, 8
  %tobool2621 = icmp ne i32 %and2620, 0
  br i1 %tobool2621, label %lor.lhs.false.2622, label %lor.lhs.false.2625

lor.lhs.false.2622:                               ; preds = %land.lhs.true.2617, %land.lhs.true.2613, %lor.lhs.false.2611
  %1427 = load i32, i32* @PL_hints, align 4
  %and2623 = and i32 %1427, 8388608
  %tobool2624 = icmp ne i32 %and2623, 0
  br i1 %tobool2624, label %lor.lhs.false.2625, label %cond.true.2629

lor.lhs.false.2625:                               ; preds = %lor.lhs.false.2622, %land.lhs.true.2617
  %1428 = load i8*, i8** %s, align 8
  %1429 = load i8, i8* %1428, align 1
  %conv2626 = zext i8 %1429 to i32
  %cmp2627 = icmp slt i32 %conv2626, 192
  br i1 %cmp2627, label %cond.true.2629, label %cond.false.2649

cond.true.2629:                                   ; preds = %lor.lhs.false.2625, %lor.lhs.false.2622, %land.lhs.true.2606
  %1430 = load i8*, i8** %s, align 8
  %1431 = load i8, i8* %1430, align 1
  %conv2630 = sext i8 %1431 to i32
  %cmp2631 = icmp sge i32 %conv2630, 65
  br i1 %cmp2631, label %land.lhs.true.2633, label %lor.lhs.false.2637

land.lhs.true.2633:                               ; preds = %cond.true.2629
  %1432 = load i8*, i8** %s, align 8
  %1433 = load i8, i8* %1432, align 1
  %conv2634 = sext i8 %1433 to i32
  %cmp2635 = icmp sle i32 %conv2634, 90
  br i1 %cmp2635, label %land.lhs.true.2656, label %lor.lhs.false.2637

lor.lhs.false.2637:                               ; preds = %land.lhs.true.2633, %cond.true.2629
  %1434 = load i8*, i8** %s, align 8
  %1435 = load i8, i8* %1434, align 1
  %conv2638 = sext i8 %1435 to i32
  %cmp2639 = icmp sge i32 %conv2638, 97
  br i1 %cmp2639, label %land.lhs.true.2641, label %lor.lhs.false.2645

land.lhs.true.2641:                               ; preds = %lor.lhs.false.2637
  %1436 = load i8*, i8** %s, align 8
  %1437 = load i8, i8* %1436, align 1
  %conv2642 = sext i8 %1437 to i32
  %cmp2643 = icmp sle i32 %conv2642, 122
  br i1 %cmp2643, label %land.lhs.true.2656, label %lor.lhs.false.2645

lor.lhs.false.2645:                               ; preds = %land.lhs.true.2641, %lor.lhs.false.2637
  %1438 = load i8*, i8** %s, align 8
  %1439 = load i8, i8* %1438, align 1
  %conv2646 = sext i8 %1439 to i32
  %cmp2647 = icmp eq i32 %conv2646, 95
  br i1 %cmp2647, label %land.lhs.true.2656, label %if.end.2664

cond.false.2649:                                  ; preds = %lor.lhs.false.2625
  %1440 = load i8*, i8** %s, align 8
  %call2650 = call signext i8 @Perl_is_utf8_idcont(i8* %1440)
  %conv2651 = sext i8 %call2650 to i32
  %tobool2652 = icmp ne i32 %conv2651, 0
  br i1 %tobool2652, label %land.lhs.true.2653, label %if.end.2664

land.lhs.true.2653:                               ; preds = %cond.false.2649
  %1441 = load i8*, i8** %s, align 8
  %call2654 = call signext i8 @Perl_is_utf8_digit(i8* %1441)
  %tobool2655 = icmp ne i8 %call2654, 0
  br i1 %tobool2655, label %if.end.2664, label %land.lhs.true.2656

land.lhs.true.2656:                               ; preds = %land.lhs.true.2653, %lor.lhs.false.2645, %land.lhs.true.2641, %land.lhs.true.2633
  %1442 = load i8*, i8** @PL_bufptr, align 8
  %1443 = load i8*, i8** @PL_linestart, align 8
  %cmp2657 = icmp eq i8* %1442, %1443
  br i1 %cmp2657, label %if.then.2659, label %if.end.2664

if.then.2659:                                     ; preds = %land.lhs.true.2656
  %1444 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line2660 = getelementptr inbounds %struct.cop, %struct.cop* %1444, i32 0, i32 13
  %1445 = load i32, i32* %cop_line2660, align 4
  %dec2661 = add i32 %1445, -1
  store i32 %dec2661, i32* %cop_line2660, align 4
  call void (i32, i8*, ...) @Perl_warner(i32 38, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @PL_warn_nosemi, i32 0, i32 0))
  %1446 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line2662 = getelementptr inbounds %struct.cop, %struct.cop* %1446, i32 0, i32 13
  %1447 = load i32, i32* %cop_line2662, align 4
  %inc2663 = add i32 %1447, 1
  store i32 %inc2663, i32* %cop_line2662, align 4
  br label %if.end.2664

if.end.2664:                                      ; preds = %if.then.2659, %land.lhs.true.2656, %land.lhs.true.2653, %cond.false.2649, %lor.lhs.false.2645, %land.lhs.true.2602, %lor.lhs.false.2598
  store i32 91, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %1448 = load i8*, i8** %s, align 8
  store i8* %1448, i8** @PL_bufptr, align 8
  %call2665 = call i32 @S_ao(i32 307)
  store i32 %call2665, i32* %retval
  br label %return

if.end.2666:                                      ; preds = %if.end.2575
  %1449 = load i8*, i8** %s, align 8
  %add.ptr2667 = getelementptr inbounds i8, i8* %1449, i64 -1
  %1450 = load i8*, i8** @PL_bufend, align 8
  %call2668 = call i8* @S_scan_ident(i8* %add.ptr2667, i8* %1450, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i32 0), i64 256, i32 1)
  store i8* %call2668, i8** %s, align 8
  %1451 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i32 0), align 1
  %tobool2669 = icmp ne i8 %1451, 0
  br i1 %tobool2669, label %if.then.2670, label %if.else.2671

if.then.2670:                                     ; preds = %if.end.2666
  store i32 0, i32* @PL_expect, align 4
  call void @S_force_ident(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i32 0), i32 38)
  br label %if.end.2672

if.else.2671:                                     ; preds = %if.end.2666
  store i32 2, i32* @PL_expect, align 4
  %1452 = load i8*, i8** %s, align 8
  store i8* %1452, i8** @PL_bufptr, align 8
  store i32 38, i32* %retval
  br label %return

if.end.2672:                                      ; preds = %if.then.2670
  store i32 2048, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  %1453 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line2673 = getelementptr inbounds %struct.cop, %struct.cop* %1453, i32 0, i32 13
  %1454 = load i32, i32* %cop_line2673, align 4
  %1455 = load i32, i32* @PL_copline, align 4
  %cmp2674 = icmp ult i32 %1454, %1455
  br i1 %cmp2674, label %cond.true.2676, label %cond.false.2678

cond.true.2676:                                   ; preds = %if.end.2672
  %1456 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line2677 = getelementptr inbounds %struct.cop, %struct.cop* %1456, i32 0, i32 13
  %1457 = load i32, i32* %cop_line2677, align 4
  br label %cond.end.2679

cond.false.2678:                                  ; preds = %if.end.2672
  %1458 = load i32, i32* @PL_copline, align 4
  br label %cond.end.2679

cond.end.2679:                                    ; preds = %cond.false.2678, %cond.true.2676
  %cond2680 = phi i32 [ %1457, %cond.true.2676 ], [ %1458, %cond.false.2678 ]
  store i32 %cond2680, i32* @PL_copline, align 4
  store i32 0, i32* @PL_expect, align 4
  %1459 = load i8*, i8** %s, align 8
  store i8* %1459, i8** @PL_bufptr, align 8
  store i32 38, i32* %retval
  br label %return

sw.bb.2681:                                       ; preds = %retry
  %1460 = load i8*, i8** %s, align 8
  %incdec.ptr2682 = getelementptr inbounds i8, i8* %1460, i32 1
  store i8* %incdec.ptr2682, i8** %s, align 8
  %1461 = load i8*, i8** %s, align 8
  %incdec.ptr2683 = getelementptr inbounds i8, i8* %1461, i32 1
  store i8* %incdec.ptr2683, i8** %s, align 8
  %1462 = load i8, i8* %1461, align 1
  %conv2684 = sext i8 %1462 to i32
  store i32 %conv2684, i32* %tmp, align 4
  %1463 = load i32, i32* %tmp, align 4
  %cmp2685 = icmp eq i32 %1463, 124
  br i1 %cmp2685, label %if.then.2687, label %if.end.2689

if.then.2687:                                     ; preds = %sw.bb.2681
  store i32 1, i32* @PL_expect, align 4
  %1464 = load i8*, i8** %s, align 8
  store i8* %1464, i8** @PL_bufptr, align 8
  %call2688 = call i32 @S_ao(i32 304)
  store i32 %call2688, i32* %retval
  br label %return

if.end.2689:                                      ; preds = %sw.bb.2681
  %1465 = load i8*, i8** %s, align 8
  %incdec.ptr2690 = getelementptr inbounds i8, i8* %1465, i32 -1
  store i8* %incdec.ptr2690, i8** %s, align 8
  store i32 93, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %1466 = load i8*, i8** %s, align 8
  store i8* %1466, i8** @PL_bufptr, align 8
  %call2691 = call i32 @S_ao(i32 306)
  store i32 %call2691, i32* %retval
  br label %return

sw.bb.2692:                                       ; preds = %retry
  %1467 = load i8*, i8** %s, align 8
  %incdec.ptr2693 = getelementptr inbounds i8, i8* %1467, i32 1
  store i8* %incdec.ptr2693, i8** %s, align 8
  %1468 = load i8*, i8** %s, align 8
  %incdec.ptr2694 = getelementptr inbounds i8, i8* %1468, i32 1
  store i8* %incdec.ptr2694, i8** %s, align 8
  %1469 = load i8, i8* %1468, align 1
  %conv2695 = sext i8 %1469 to i32
  store i32 %conv2695, i32* %tmp, align 4
  %1470 = load i32, i32* %tmp, align 4
  %cmp2696 = icmp eq i32 %1470, 61
  br i1 %cmp2696, label %if.then.2698, label %if.end.2699

if.then.2698:                                     ; preds = %sw.bb.2692
  store i32 78, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %1471 = load i8*, i8** %s, align 8
  store i8* %1471, i8** @PL_bufptr, align 8
  store i32 288, i32* %retval
  br label %return

if.end.2699:                                      ; preds = %sw.bb.2692
  %1472 = load i32, i32* %tmp, align 4
  %cmp2700 = icmp eq i32 %1472, 62
  br i1 %cmp2700, label %if.then.2702, label %if.end.2703

if.then.2702:                                     ; preds = %if.end.2699
  store i32 1, i32* @PL_expect, align 4
  %1473 = load i8*, i8** %s, align 8
  store i8* %1473, i8** @PL_bufptr, align 8
  store i32 44, i32* %retval
  br label %return

if.end.2703:                                      ; preds = %if.end.2699
  %1474 = load i32, i32* %tmp, align 4
  %cmp2704 = icmp eq i32 %1474, 126
  br i1 %cmp2704, label %if.then.2706, label %if.end.2707

if.then.2706:                                     ; preds = %if.end.2703
  store i32 31, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %1475 = load i8*, i8** %s, align 8
  store i8* %1475, i8** @PL_bufptr, align 8
  store i32 309, i32* %retval
  br label %return

if.end.2707:                                      ; preds = %if.end.2703
  %1476 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings2708 = getelementptr inbounds %struct.cop, %struct.cop* %1476, i32 0, i32 14
  %1477 = load %struct.sv*, %struct.sv** %cop_warnings2708, align 8
  %cmp2709 = icmp ne %struct.sv* %1477, null
  br i1 %cmp2709, label %land.lhs.true.2711, label %lor.lhs.false.2727

land.lhs.true.2711:                               ; preds = %if.end.2707
  %1478 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings2712 = getelementptr inbounds %struct.cop, %struct.cop* %1478, i32 0, i32 14
  %1479 = load %struct.sv*, %struct.sv** %cop_warnings2712, align 8
  %cmp2713 = icmp ne %struct.sv* %1479, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 2)
  br i1 %cmp2713, label %land.lhs.true.2715, label %lor.lhs.false.2727

land.lhs.true.2715:                               ; preds = %land.lhs.true.2711
  %1480 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings2716 = getelementptr inbounds %struct.cop, %struct.cop* %1480, i32 0, i32 14
  %1481 = load %struct.sv*, %struct.sv** %cop_warnings2716, align 8
  %cmp2717 = icmp eq %struct.sv* %1481, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 1)
  br i1 %cmp2717, label %land.lhs.true.2735, label %lor.lhs.false.2719

lor.lhs.false.2719:                               ; preds = %land.lhs.true.2715
  %1482 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings2720 = getelementptr inbounds %struct.cop, %struct.cop* %1482, i32 0, i32 14
  %1483 = load %struct.sv*, %struct.sv** %cop_warnings2720, align 8
  %sv_any2721 = getelementptr inbounds %struct.sv, %struct.sv* %1483, i32 0, i32 0
  %1484 = load i8*, i8** %sv_any2721, align 8
  %1485 = bitcast i8* %1484 to %struct.xpv*
  %xpv_pv2722 = getelementptr inbounds %struct.xpv, %struct.xpv* %1485, i32 0, i32 0
  %1486 = load i8*, i8** %xpv_pv2722, align 8
  %arrayidx2723 = getelementptr inbounds i8, i8* %1486, i64 7
  %1487 = load i8, i8* %arrayidx2723, align 1
  %conv2724 = sext i8 %1487 to i32
  %and2725 = and i32 %conv2724, 1
  %tobool2726 = icmp ne i32 %and2725, 0
  br i1 %tobool2726, label %land.lhs.true.2735, label %lor.lhs.false.2727

lor.lhs.false.2727:                               ; preds = %lor.lhs.false.2719, %land.lhs.true.2711, %if.end.2707
  %1488 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings2728 = getelementptr inbounds %struct.cop, %struct.cop* %1488, i32 0, i32 14
  %1489 = load %struct.sv*, %struct.sv** %cop_warnings2728, align 8
  %cmp2729 = icmp eq %struct.sv* %1489, null
  br i1 %cmp2729, label %land.lhs.true.2731, label %if.end.2761

land.lhs.true.2731:                               ; preds = %lor.lhs.false.2727
  %1490 = load i8, i8* @PL_dowarn, align 1
  %conv2732 = zext i8 %1490 to i32
  %and2733 = and i32 %conv2732, 1
  %tobool2734 = icmp ne i32 %and2733, 0
  br i1 %tobool2734, label %land.lhs.true.2735, label %if.end.2761

land.lhs.true.2735:                               ; preds = %land.lhs.true.2731, %lor.lhs.false.2719, %land.lhs.true.2715
  %1491 = load i32, i32* %tmp, align 4
  %tobool2736 = icmp ne i32 %1491, 0
  br i1 %tobool2736, label %land.lhs.true.2737, label %if.end.2761

land.lhs.true.2737:                               ; preds = %land.lhs.true.2735
  %1492 = load i8*, i8** %s, align 8
  %1493 = load i8, i8* %1492, align 1
  %conv2738 = sext i8 %1493 to i32
  %cmp2739 = icmp eq i32 %conv2738, 32
  br i1 %cmp2739, label %land.lhs.true.2757, label %lor.lhs.false.2741

lor.lhs.false.2741:                               ; preds = %land.lhs.true.2737
  %1494 = load i8*, i8** %s, align 8
  %1495 = load i8, i8* %1494, align 1
  %conv2742 = sext i8 %1495 to i32
  %cmp2743 = icmp eq i32 %conv2742, 9
  br i1 %cmp2743, label %land.lhs.true.2757, label %lor.lhs.false.2745

lor.lhs.false.2745:                               ; preds = %lor.lhs.false.2741
  %1496 = load i8*, i8** %s, align 8
  %1497 = load i8, i8* %1496, align 1
  %conv2746 = sext i8 %1497 to i32
  %cmp2747 = icmp eq i32 %conv2746, 10
  br i1 %cmp2747, label %land.lhs.true.2757, label %lor.lhs.false.2749

lor.lhs.false.2749:                               ; preds = %lor.lhs.false.2745
  %1498 = load i8*, i8** %s, align 8
  %1499 = load i8, i8* %1498, align 1
  %conv2750 = sext i8 %1499 to i32
  %cmp2751 = icmp eq i32 %conv2750, 13
  br i1 %cmp2751, label %land.lhs.true.2757, label %lor.lhs.false.2753

lor.lhs.false.2753:                               ; preds = %lor.lhs.false.2749
  %1500 = load i8*, i8** %s, align 8
  %1501 = load i8, i8* %1500, align 1
  %conv2754 = sext i8 %1501 to i32
  %cmp2755 = icmp eq i32 %conv2754, 12
  br i1 %cmp2755, label %land.lhs.true.2757, label %if.end.2761

land.lhs.true.2757:                               ; preds = %lor.lhs.false.2753, %lor.lhs.false.2749, %lor.lhs.false.2745, %lor.lhs.false.2741, %land.lhs.true.2737
  %1502 = load i32, i32* %tmp, align 4
  %call2758 = call i8* @strchr(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.46, i32 0, i32 0), i32 %1502)
  %tobool2759 = icmp ne i8* %call2758, null
  br i1 %tobool2759, label %if.then.2760, label %if.end.2761

if.then.2760:                                     ; preds = %land.lhs.true.2757
  %1503 = load i32, i32* %tmp, align 4
  call void (i32, i8*, ...) @Perl_warner(i32 28, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.47, i32 0, i32 0), i32 %1503)
  br label %if.end.2761

if.end.2761:                                      ; preds = %if.then.2760, %land.lhs.true.2757, %lor.lhs.false.2753, %land.lhs.true.2735, %land.lhs.true.2731, %lor.lhs.false.2727
  %1504 = load i8*, i8** %s, align 8
  %incdec.ptr2762 = getelementptr inbounds i8, i8* %1504, i32 -1
  store i8* %incdec.ptr2762, i8** %s, align 8
  %1505 = load i32, i32* @PL_expect, align 4
  %cmp2763 = icmp eq i32 %1505, 3
  br i1 %cmp2763, label %land.lhs.true.2765, label %if.end.2813

land.lhs.true.2765:                               ; preds = %if.end.2761
  %1506 = load i32, i32* %tmp, align 4
  %cmp2766 = icmp sge i32 %1506, 65
  br i1 %cmp2766, label %land.lhs.true.2768, label %lor.lhs.false.2771

land.lhs.true.2768:                               ; preds = %land.lhs.true.2765
  %1507 = load i32, i32* %tmp, align 4
  %cmp2769 = icmp sle i32 %1507, 90
  br i1 %cmp2769, label %land.lhs.true.2777, label %lor.lhs.false.2771

lor.lhs.false.2771:                               ; preds = %land.lhs.true.2768, %land.lhs.true.2765
  %1508 = load i32, i32* %tmp, align 4
  %cmp2772 = icmp sge i32 %1508, 97
  br i1 %cmp2772, label %land.lhs.true.2774, label %if.end.2813

land.lhs.true.2774:                               ; preds = %lor.lhs.false.2771
  %1509 = load i32, i32* %tmp, align 4
  %cmp2775 = icmp sle i32 %1509, 122
  br i1 %cmp2775, label %land.lhs.true.2777, label %if.end.2813

land.lhs.true.2777:                               ; preds = %land.lhs.true.2774, %land.lhs.true.2768
  %1510 = load i8*, i8** %s, align 8
  %1511 = load i8*, i8** @PL_linestart, align 8
  %add.ptr2778 = getelementptr inbounds i8, i8* %1511, i64 1
  %cmp2779 = icmp eq i8* %1510, %add.ptr2778
  br i1 %cmp2779, label %if.then.2786, label %lor.lhs.false.2781

lor.lhs.false.2781:                               ; preds = %land.lhs.true.2777
  %1512 = load i8*, i8** %s, align 8
  %arrayidx2782 = getelementptr inbounds i8, i8* %1512, i64 -2
  %1513 = load i8, i8* %arrayidx2782, align 1
  %conv2783 = sext i8 %1513 to i32
  %cmp2784 = icmp eq i32 %conv2783, 10
  br i1 %cmp2784, label %if.then.2786, label %if.end.2813

if.then.2786:                                     ; preds = %lor.lhs.false.2781, %land.lhs.true.2777
  %1514 = load volatile i32, i32* @PL_in_eval, align 4
  %tobool2787 = icmp ne i32 %1514, 0
  br i1 %tobool2787, label %land.lhs.true.2788, label %if.end.2812

land.lhs.true.2788:                               ; preds = %if.then.2786
  %1515 = load volatile %struct._PerlIO**, %struct._PerlIO*** @PL_rsfp, align 8
  %tobool2789 = icmp ne %struct._PerlIO** %1515, null
  br i1 %tobool2789, label %if.end.2812, label %if.then.2790

if.then.2790:                                     ; preds = %land.lhs.true.2788
  %1516 = load i8*, i8** @PL_bufend, align 8
  store i8* %1516, i8** %d, align 8
  br label %while.cond.2791

while.cond.2791:                                  ; preds = %if.end.2810, %if.then.2790
  %1517 = load i8*, i8** %s, align 8
  %1518 = load i8*, i8** %d, align 8
  %cmp2792 = icmp ult i8* %1517, %1518
  br i1 %cmp2792, label %while.body.2794, label %while.end.2811

while.body.2794:                                  ; preds = %while.cond.2791
  %1519 = load i8*, i8** %s, align 8
  %incdec.ptr2795 = getelementptr inbounds i8, i8* %1519, i32 1
  store i8* %incdec.ptr2795, i8** %s, align 8
  %1520 = load i8, i8* %1519, align 1
  %conv2796 = sext i8 %1520 to i32
  %cmp2797 = icmp eq i32 %conv2796, 10
  br i1 %cmp2797, label %if.then.2799, label %if.end.2810

if.then.2799:                                     ; preds = %while.body.2794
  %1521 = load i8*, i8** %s, align 8
  call void @S_incline(i8* %1521)
  %1522 = load i8*, i8** %s, align 8
  %call2800 = call i32 @strncmp(i8* %1522, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.25, i32 0, i32 0), i64 4)
  %tobool2801 = icmp ne i32 %call2800, 0
  br i1 %tobool2801, label %if.end.2809, label %if.then.2802

if.then.2802:                                     ; preds = %if.then.2799
  %1523 = load i8*, i8** %s, align 8
  %call2803 = call i8* @strchr(i8* %1523, i32 10)
  store i8* %call2803, i8** %s, align 8
  %1524 = load i8*, i8** %s, align 8
  %tobool2804 = icmp ne i8* %1524, null
  br i1 %tobool2804, label %if.then.2805, label %if.else.2807

if.then.2805:                                     ; preds = %if.then.2802
  %1525 = load i8*, i8** %s, align 8
  %incdec.ptr2806 = getelementptr inbounds i8, i8* %1525, i32 1
  store i8* %incdec.ptr2806, i8** %s, align 8
  br label %if.end.2808

if.else.2807:                                     ; preds = %if.then.2802
  %1526 = load i8*, i8** %d, align 8
  store i8* %1526, i8** %s, align 8
  br label %if.end.2808

if.end.2808:                                      ; preds = %if.else.2807, %if.then.2805
  %1527 = load i8*, i8** %s, align 8
  call void @S_incline(i8* %1527)
  br label %retry

if.end.2809:                                      ; preds = %if.then.2799
  br label %if.end.2810

if.end.2810:                                      ; preds = %if.end.2809, %while.body.2794
  br label %while.cond.2791

while.end.2811:                                   ; preds = %while.cond.2791
  br label %retry

if.end.2812:                                      ; preds = %land.lhs.true.2788, %if.then.2786
  %1528 = load i8*, i8** @PL_bufend, align 8
  store i8* %1528, i8** %s, align 8
  store i8 1, i8* @PL_doextract, align 1
  br label %retry

if.end.2813:                                      ; preds = %lor.lhs.false.2781, %land.lhs.true.2774, %lor.lhs.false.2771, %if.end.2761
  %1529 = load i32, i32* @PL_lex_brackets, align 4
  %1530 = load i32, i32* @PL_lex_formbrack, align 4
  %cmp2814 = icmp slt i32 %1529, %1530
  br i1 %cmp2814, label %if.then.2816, label %if.end.2847

if.then.2816:                                     ; preds = %if.end.2813
  %1531 = load i8*, i8** %s, align 8
  store i8* %1531, i8** %t2818, align 8
  br label %for.cond.2819

for.cond.2819:                                    ; preds = %for.inc.2834, %if.then.2816
  %1532 = load i8*, i8** %t2818, align 8
  %1533 = load i8, i8* %1532, align 1
  %conv2820 = sext i8 %1533 to i32
  %cmp2821 = icmp eq i32 %conv2820, 32
  br i1 %cmp2821, label %lor.end.2831, label %lor.lhs.false.2823

lor.lhs.false.2823:                               ; preds = %for.cond.2819
  %1534 = load i8*, i8** %t2818, align 8
  %1535 = load i8, i8* %1534, align 1
  %conv2824 = sext i8 %1535 to i32
  %cmp2825 = icmp eq i32 %conv2824, 9
  br i1 %cmp2825, label %lor.end.2831, label %lor.rhs.2827

lor.rhs.2827:                                     ; preds = %lor.lhs.false.2823
  %1536 = load i8*, i8** %t2818, align 8
  %1537 = load i8, i8* %1536, align 1
  %conv2828 = sext i8 %1537 to i32
  %cmp2829 = icmp eq i32 %conv2828, 13
  br label %lor.end.2831

lor.end.2831:                                     ; preds = %lor.rhs.2827, %lor.lhs.false.2823, %for.cond.2819
  %1538 = phi i1 [ true, %lor.lhs.false.2823 ], [ true, %for.cond.2819 ], [ %cmp2829, %lor.rhs.2827 ]
  br i1 %1538, label %for.body.2833, label %for.end.2836

for.body.2833:                                    ; preds = %lor.end.2831
  br label %for.inc.2834

for.inc.2834:                                     ; preds = %for.body.2833
  %1539 = load i8*, i8** %t2818, align 8
  %incdec.ptr2835 = getelementptr inbounds i8, i8* %1539, i32 1
  store i8* %incdec.ptr2835, i8** %t2818, align 8
  br label %for.cond.2819

for.end.2836:                                     ; preds = %lor.end.2831
  %1540 = load i8*, i8** %t2818, align 8
  %1541 = load i8, i8* %1540, align 1
  %conv2837 = sext i8 %1541 to i32
  %cmp2838 = icmp eq i32 %conv2837, 10
  br i1 %cmp2838, label %if.then.2844, label %lor.lhs.false.2840

lor.lhs.false.2840:                               ; preds = %for.end.2836
  %1542 = load i8*, i8** %t2818, align 8
  %1543 = load i8, i8* %1542, align 1
  %conv2841 = sext i8 %1543 to i32
  %cmp2842 = icmp eq i32 %conv2841, 35
  br i1 %cmp2842, label %if.then.2844, label %if.end.2846

if.then.2844:                                     ; preds = %lor.lhs.false.2840, %for.end.2836
  %1544 = load i8*, i8** %s, align 8
  %incdec.ptr2845 = getelementptr inbounds i8, i8* %1544, i32 -1
  store i8* %incdec.ptr2845, i8** %s, align 8
  store i32 4, i32* @PL_expect, align 4
  br label %leftbracket

if.end.2846:                                      ; preds = %lor.lhs.false.2840
  br label %if.end.2847

if.end.2847:                                      ; preds = %if.end.2846, %if.end.2813
  store i32 0, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %1545 = load i8*, i8** %s, align 8
  store i8* %1545, i8** @PL_bufptr, align 8
  store i32 303, i32* %retval
  br label %return

sw.bb.2848:                                       ; preds = %retry
  %1546 = load i8*, i8** %s, align 8
  %incdec.ptr2849 = getelementptr inbounds i8, i8* %1546, i32 1
  store i8* %incdec.ptr2849, i8** %s, align 8
  %1547 = load i8*, i8** %s, align 8
  %incdec.ptr2850 = getelementptr inbounds i8, i8* %1547, i32 1
  store i8* %incdec.ptr2850, i8** %s, align 8
  %1548 = load i8, i8* %1547, align 1
  %conv2851 = sext i8 %1548 to i32
  store i32 %conv2851, i32* %tmp, align 4
  %1549 = load i32, i32* %tmp, align 4
  %cmp2852 = icmp eq i32 %1549, 61
  br i1 %cmp2852, label %if.then.2854, label %if.end.2855

if.then.2854:                                     ; preds = %sw.bb.2848
  store i32 80, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %1550 = load i8*, i8** %s, align 8
  store i8* %1550, i8** @PL_bufptr, align 8
  store i32 288, i32* %retval
  br label %return

if.end.2855:                                      ; preds = %sw.bb.2848
  %1551 = load i32, i32* %tmp, align 4
  %cmp2856 = icmp eq i32 %1551, 126
  br i1 %cmp2856, label %if.then.2858, label %if.end.2859

if.then.2858:                                     ; preds = %if.end.2855
  store i32 96, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %1552 = load i8*, i8** %s, align 8
  store i8* %1552, i8** @PL_bufptr, align 8
  store i32 309, i32* %retval
  br label %return

if.end.2859:                                      ; preds = %if.end.2855
  %1553 = load i8*, i8** %s, align 8
  %incdec.ptr2860 = getelementptr inbounds i8, i8* %1553, i32 -1
  store i8* %incdec.ptr2860, i8** %s, align 8
  store i32 1, i32* @PL_expect, align 4
  %1554 = load i8*, i8** %s, align 8
  store i8* %1554, i8** @PL_bufptr, align 8
  store i32 33, i32* %retval
  br label %return

sw.bb.2861:                                       ; preds = %retry
  %1555 = load i32, i32* @PL_expect, align 4
  %cmp2862 = icmp ne i32 %1555, 0
  br i1 %cmp2862, label %if.then.2864, label %if.end.2892

if.then.2864:                                     ; preds = %sw.bb.2861
  %1556 = load i8*, i8** %s, align 8
  %arrayidx2865 = getelementptr inbounds i8, i8* %1556, i64 1
  %1557 = load i8, i8* %arrayidx2865, align 1
  %conv2866 = sext i8 %1557 to i32
  %cmp2867 = icmp ne i32 %conv2866, 60
  br i1 %cmp2867, label %land.lhs.true.2869, label %if.end.2873

land.lhs.true.2869:                               ; preds = %if.then.2864
  %1558 = load i8*, i8** %s, align 8
  %call2870 = call i8* @strchr(i8* %1558, i32 62)
  %tobool2871 = icmp ne i8* %call2870, null
  br i1 %tobool2871, label %if.end.2873, label %if.then.2872

if.then.2872:                                     ; preds = %land.lhs.true.2869
  call void @S_check_uni()
  br label %if.end.2873

if.end.2873:                                      ; preds = %if.then.2872, %land.lhs.true.2869, %if.then.2864
  %1559 = load i8*, i8** %s, align 8
  %arrayidx2874 = getelementptr inbounds i8, i8* %1559, i64 1
  %1560 = load i8, i8* %arrayidx2874, align 1
  %conv2875 = sext i8 %1560 to i32
  %cmp2876 = icmp eq i32 %conv2875, 60
  br i1 %cmp2876, label %if.then.2878, label %if.else.2880

if.then.2878:                                     ; preds = %if.end.2873
  %1561 = load i8*, i8** %s, align 8
  %call2879 = call i8* @S_scan_heredoc(i8* %1561)
  store i8* %call2879, i8** %s, align 8
  br label %if.end.2882

if.else.2880:                                     ; preds = %if.end.2873
  %1562 = load i8*, i8** %s, align 8
  %call2881 = call i8* @S_scan_inputsymbol(i8* %1562)
  store i8* %call2881, i8** %s, align 8
  br label %if.end.2882

if.end.2882:                                      ; preds = %if.else.2880, %if.then.2878
  %1563 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line2883 = getelementptr inbounds %struct.cop, %struct.cop* %1563, i32 0, i32 13
  %1564 = load i32, i32* %cop_line2883, align 4
  %1565 = load i32, i32* @PL_copline, align 4
  %cmp2884 = icmp ult i32 %1564, %1565
  br i1 %cmp2884, label %cond.true.2886, label %cond.false.2888

cond.true.2886:                                   ; preds = %if.end.2882
  %1566 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line2887 = getelementptr inbounds %struct.cop, %struct.cop* %1566, i32 0, i32 13
  %1567 = load i32, i32* %cop_line2887, align 4
  br label %cond.end.2889

cond.false.2888:                                  ; preds = %if.end.2882
  %1568 = load i32, i32* @PL_copline, align 4
  br label %cond.end.2889

cond.end.2889:                                    ; preds = %cond.false.2888, %cond.true.2886
  %cond2890 = phi i32 [ %1567, %cond.true.2886 ], [ %1568, %cond.false.2888 ]
  store i32 %cond2890, i32* @PL_copline, align 4
  store i32 0, i32* @PL_expect, align 4
  %1569 = load i8*, i8** %s, align 8
  store i8* %1569, i8** @PL_bufptr, align 8
  %call2891 = call i32 @S_sublex_start()
  store i32 %call2891, i32* %retval
  br label %return

if.end.2892:                                      ; preds = %sw.bb.2861
  %1570 = load i8*, i8** %s, align 8
  %incdec.ptr2893 = getelementptr inbounds i8, i8* %1570, i32 1
  store i8* %incdec.ptr2893, i8** %s, align 8
  %1571 = load i8*, i8** %s, align 8
  %incdec.ptr2894 = getelementptr inbounds i8, i8* %1571, i32 1
  store i8* %incdec.ptr2894, i8** %s, align 8
  %1572 = load i8, i8* %1571, align 1
  %conv2895 = sext i8 %1572 to i32
  store i32 %conv2895, i32* %tmp, align 4
  %1573 = load i32, i32* %tmp, align 4
  %cmp2896 = icmp eq i32 %1573, 60
  br i1 %cmp2896, label %if.then.2898, label %if.end.2900

if.then.2898:                                     ; preds = %if.end.2892
  store i32 68, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %1574 = load i8*, i8** %s, align 8
  store i8* %1574, i8** @PL_bufptr, align 8
  %call2899 = call i32 @S_ao(i32 308)
  store i32 %call2899, i32* %retval
  br label %return

if.end.2900:                                      ; preds = %if.end.2892
  %1575 = load i32, i32* %tmp, align 4
  %cmp2901 = icmp eq i32 %1575, 61
  br i1 %cmp2901, label %if.then.2903, label %if.end.2911

if.then.2903:                                     ; preds = %if.end.2900
  %1576 = load i8*, i8** %s, align 8
  %incdec.ptr2904 = getelementptr inbounds i8, i8* %1576, i32 1
  store i8* %incdec.ptr2904, i8** %s, align 8
  %1577 = load i8, i8* %1576, align 1
  %conv2905 = sext i8 %1577 to i32
  store i32 %conv2905, i32* %tmp, align 4
  %1578 = load i32, i32* %tmp, align 4
  %cmp2906 = icmp eq i32 %1578, 62
  br i1 %cmp2906, label %if.then.2908, label %if.end.2909

if.then.2908:                                     ; preds = %if.then.2903
  store i32 82, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %1579 = load i8*, i8** %s, align 8
  store i8* %1579, i8** @PL_bufptr, align 8
  store i32 288, i32* %retval
  br label %return

if.end.2909:                                      ; preds = %if.then.2903
  %1580 = load i8*, i8** %s, align 8
  %incdec.ptr2910 = getelementptr inbounds i8, i8* %1580, i32 -1
  store i8* %incdec.ptr2910, i8** %s, align 8
  store i32 74, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %1581 = load i8*, i8** %s, align 8
  store i8* %1581, i8** @PL_bufptr, align 8
  store i32 287, i32* %retval
  br label %return

if.end.2911:                                      ; preds = %if.end.2900
  %1582 = load i8*, i8** %s, align 8
  %incdec.ptr2912 = getelementptr inbounds i8, i8* %1582, i32 -1
  store i8* %incdec.ptr2912, i8** %s, align 8
  store i32 70, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %1583 = load i8*, i8** %s, align 8
  store i8* %1583, i8** @PL_bufptr, align 8
  store i32 287, i32* %retval
  br label %return

sw.bb.2913:                                       ; preds = %retry
  %1584 = load i8*, i8** %s, align 8
  %incdec.ptr2914 = getelementptr inbounds i8, i8* %1584, i32 1
  store i8* %incdec.ptr2914, i8** %s, align 8
  %1585 = load i8*, i8** %s, align 8
  %incdec.ptr2915 = getelementptr inbounds i8, i8* %1585, i32 1
  store i8* %incdec.ptr2915, i8** %s, align 8
  %1586 = load i8, i8* %1585, align 1
  %conv2916 = sext i8 %1586 to i32
  store i32 %conv2916, i32* %tmp, align 4
  %1587 = load i32, i32* %tmp, align 4
  %cmp2917 = icmp eq i32 %1587, 62
  br i1 %cmp2917, label %if.then.2919, label %if.end.2921

if.then.2919:                                     ; preds = %sw.bb.2913
  store i32 69, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %1588 = load i8*, i8** %s, align 8
  store i8* %1588, i8** @PL_bufptr, align 8
  %call2920 = call i32 @S_ao(i32 308)
  store i32 %call2920, i32* %retval
  br label %return

if.end.2921:                                      ; preds = %sw.bb.2913
  %1589 = load i32, i32* %tmp, align 4
  %cmp2922 = icmp eq i32 %1589, 61
  br i1 %cmp2922, label %if.then.2924, label %if.end.2925

if.then.2924:                                     ; preds = %if.end.2921
  store i32 76, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %1590 = load i8*, i8** %s, align 8
  store i8* %1590, i8** @PL_bufptr, align 8
  store i32 287, i32* %retval
  br label %return

if.end.2925:                                      ; preds = %if.end.2921
  %1591 = load i8*, i8** %s, align 8
  %incdec.ptr2926 = getelementptr inbounds i8, i8* %1591, i32 -1
  store i8* %incdec.ptr2926, i8** %s, align 8
  store i32 72, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %1592 = load i8*, i8** %s, align 8
  store i8* %1592, i8** @PL_bufptr, align 8
  store i32 287, i32* %retval
  br label %return

sw.bb.2927:                                       ; preds = %retry
  %1593 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line2928 = getelementptr inbounds %struct.cop, %struct.cop* %1593, i32 0, i32 13
  %1594 = load i32, i32* %cop_line2928, align 4
  %1595 = load i32, i32* @PL_copline, align 4
  %cmp2929 = icmp ult i32 %1594, %1595
  br i1 %cmp2929, label %cond.true.2931, label %cond.false.2933

cond.true.2931:                                   ; preds = %sw.bb.2927
  %1596 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line2932 = getelementptr inbounds %struct.cop, %struct.cop* %1596, i32 0, i32 13
  %1597 = load i32, i32* %cop_line2932, align 4
  br label %cond.end.2934

cond.false.2933:                                  ; preds = %sw.bb.2927
  %1598 = load i32, i32* @PL_copline, align 4
  br label %cond.end.2934

cond.end.2934:                                    ; preds = %cond.false.2933, %cond.true.2931
  %cond2935 = phi i32 [ %1597, %cond.true.2931 ], [ %1598, %cond.false.2933 ]
  store i32 %cond2935, i32* @PL_copline, align 4
  %1599 = load i32, i32* @PL_expect, align 4
  %cmp2936 = icmp eq i32 %1599, 0
  br i1 %cmp2936, label %if.then.2938, label %if.end.2945

if.then.2938:                                     ; preds = %cond.end.2934
  %1600 = load i32, i32* @PL_lex_formbrack, align 4
  %tobool2939 = icmp ne i32 %1600, 0
  br i1 %tobool2939, label %land.lhs.true.2940, label %if.end.2944

land.lhs.true.2940:                               ; preds = %if.then.2938
  %1601 = load i32, i32* @PL_lex_brackets, align 4
  %1602 = load i32, i32* @PL_lex_formbrack, align 4
  %cmp2941 = icmp eq i32 %1601, %1602
  br i1 %cmp2941, label %if.then.2943, label %if.end.2944

if.then.2943:                                     ; preds = %land.lhs.true.2940
  store i32 1, i32* @PL_expect, align 4
  call void @S_depcom()
  store i32 44, i32* %retval
  br label %return

if.end.2944:                                      ; preds = %land.lhs.true.2940, %if.then.2938
  br label %if.end.2945

if.end.2945:                                      ; preds = %if.end.2944, %cond.end.2934
  %1603 = load i8*, i8** %s, align 8
  %arrayidx2946 = getelementptr inbounds i8, i8* %1603, i64 1
  %1604 = load i8, i8* %arrayidx2946, align 1
  %conv2947 = sext i8 %1604 to i32
  %cmp2948 = icmp eq i32 %conv2947, 35
  br i1 %cmp2948, label %land.lhs.true.2950, label %if.end.3023

land.lhs.true.2950:                               ; preds = %if.end.2945
  %1605 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private2951 = getelementptr inbounds %struct.cop, %struct.cop* %1605, i32 0, i32 7
  %1606 = load i8, i8* %op_private2951, align 1
  %conv2952 = zext i8 %1606 to i32
  %and2953 = and i32 %conv2952, 8
  %tobool2954 = icmp ne i32 %and2953, 0
  br i1 %tobool2954, label %cond.true.2974, label %lor.lhs.false.2955

lor.lhs.false.2955:                               ; preds = %land.lhs.true.2950
  %1607 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %tobool2956 = icmp ne %struct.sv* %1607, null
  br i1 %tobool2956, label %land.lhs.true.2957, label %lor.lhs.false.2966

land.lhs.true.2957:                               ; preds = %lor.lhs.false.2955
  %1608 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_flags2958 = getelementptr inbounds %struct.sv, %struct.sv* %1608, i32 0, i32 2
  %1609 = load i32, i32* %sv_flags2958, align 4
  %and2959 = and i32 %1609, 536870912
  %tobool2960 = icmp ne i32 %and2959, 0
  br i1 %tobool2960, label %land.lhs.true.2961, label %lor.lhs.false.2966

land.lhs.true.2961:                               ; preds = %land.lhs.true.2957
  %1610 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private2962 = getelementptr inbounds %struct.cop, %struct.cop* %1610, i32 0, i32 7
  %1611 = load i8, i8* %op_private2962, align 1
  %conv2963 = zext i8 %1611 to i32
  %and2964 = and i32 %conv2963, 8
  %tobool2965 = icmp ne i32 %and2964, 0
  br i1 %tobool2965, label %lor.lhs.false.2966, label %lor.lhs.false.2969

lor.lhs.false.2966:                               ; preds = %land.lhs.true.2961, %land.lhs.true.2957, %lor.lhs.false.2955
  %1612 = load i32, i32* @PL_hints, align 4
  %and2967 = and i32 %1612, 8388608
  %tobool2968 = icmp ne i32 %and2967, 0
  br i1 %tobool2968, label %lor.lhs.false.2969, label %cond.true.2974

lor.lhs.false.2969:                               ; preds = %lor.lhs.false.2966, %land.lhs.true.2961
  %1613 = load i8*, i8** %s, align 8
  %add.ptr2970 = getelementptr inbounds i8, i8* %1613, i64 2
  %1614 = load i8, i8* %add.ptr2970, align 1
  %conv2971 = zext i8 %1614 to i32
  %cmp2972 = icmp slt i32 %conv2971, 192
  br i1 %cmp2972, label %cond.true.2974, label %cond.false.2999

cond.true.2974:                                   ; preds = %lor.lhs.false.2969, %lor.lhs.false.2966, %land.lhs.true.2950
  %1615 = load i8*, i8** %s, align 8
  %add.ptr2975 = getelementptr inbounds i8, i8* %1615, i64 2
  %1616 = load i8, i8* %add.ptr2975, align 1
  %conv2976 = sext i8 %1616 to i32
  %cmp2977 = icmp sge i32 %conv2976, 65
  br i1 %cmp2977, label %land.lhs.true.2979, label %lor.lhs.false.2984

land.lhs.true.2979:                               ; preds = %cond.true.2974
  %1617 = load i8*, i8** %s, align 8
  %add.ptr2980 = getelementptr inbounds i8, i8* %1617, i64 2
  %1618 = load i8, i8* %add.ptr2980, align 1
  %conv2981 = sext i8 %1618 to i32
  %cmp2982 = icmp sle i32 %conv2981, 90
  br i1 %cmp2982, label %if.then.3013, label %lor.lhs.false.2984

lor.lhs.false.2984:                               ; preds = %land.lhs.true.2979, %cond.true.2974
  %1619 = load i8*, i8** %s, align 8
  %add.ptr2985 = getelementptr inbounds i8, i8* %1619, i64 2
  %1620 = load i8, i8* %add.ptr2985, align 1
  %conv2986 = sext i8 %1620 to i32
  %cmp2987 = icmp sge i32 %conv2986, 97
  br i1 %cmp2987, label %land.lhs.true.2989, label %lor.lhs.false.2994

land.lhs.true.2989:                               ; preds = %lor.lhs.false.2984
  %1621 = load i8*, i8** %s, align 8
  %add.ptr2990 = getelementptr inbounds i8, i8* %1621, i64 2
  %1622 = load i8, i8* %add.ptr2990, align 1
  %conv2991 = sext i8 %1622 to i32
  %cmp2992 = icmp sle i32 %conv2991, 122
  br i1 %cmp2992, label %if.then.3013, label %lor.lhs.false.2994

lor.lhs.false.2994:                               ; preds = %land.lhs.true.2989, %lor.lhs.false.2984
  %1623 = load i8*, i8** %s, align 8
  %add.ptr2995 = getelementptr inbounds i8, i8* %1623, i64 2
  %1624 = load i8, i8* %add.ptr2995, align 1
  %conv2996 = sext i8 %1624 to i32
  %cmp2997 = icmp eq i32 %conv2996, 95
  br i1 %cmp2997, label %if.then.3013, label %lor.lhs.false.3008

cond.false.2999:                                  ; preds = %lor.lhs.false.2969
  %1625 = load i8*, i8** %s, align 8
  %add.ptr3000 = getelementptr inbounds i8, i8* %1625, i64 2
  %call3001 = call signext i8 @Perl_is_utf8_idcont(i8* %add.ptr3000)
  %conv3002 = sext i8 %call3001 to i32
  %tobool3003 = icmp ne i32 %conv3002, 0
  br i1 %tobool3003, label %land.lhs.true.3004, label %lor.lhs.false.3008

land.lhs.true.3004:                               ; preds = %cond.false.2999
  %1626 = load i8*, i8** %s, align 8
  %add.ptr3005 = getelementptr inbounds i8, i8* %1626, i64 2
  %call3006 = call signext i8 @Perl_is_utf8_digit(i8* %add.ptr3005)
  %tobool3007 = icmp ne i8 %call3006, 0
  br i1 %tobool3007, label %lor.lhs.false.3008, label %if.then.3013

lor.lhs.false.3008:                               ; preds = %land.lhs.true.3004, %cond.false.2999, %lor.lhs.false.2994
  %1627 = load i8*, i8** %s, align 8
  %arrayidx3009 = getelementptr inbounds i8, i8* %1627, i64 2
  %1628 = load i8, i8* %arrayidx3009, align 1
  %conv3010 = sext i8 %1628 to i32
  %call3011 = call i8* @strchr(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.48, i32 0, i32 0), i32 %conv3010)
  %tobool3012 = icmp ne i8* %call3011, null
  br i1 %tobool3012, label %if.then.3013, label %if.end.3023

if.then.3013:                                     ; preds = %lor.lhs.false.3008, %land.lhs.true.3004, %lor.lhs.false.2994, %land.lhs.true.2989, %land.lhs.true.2979
  store i8 64, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i64 0), align 1
  %1629 = load i8*, i8** %s, align 8
  %add.ptr3014 = getelementptr inbounds i8, i8* %1629, i64 1
  %1630 = load i8*, i8** @PL_bufend, align 8
  %call3015 = call i8* @S_scan_ident(i8* %add.ptr3014, i8* %1630, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i64 1), i64 255, i32 0)
  store i8* %call3015, i8** %s, align 8
  %1631 = load i32, i32* @PL_expect, align 4
  %cmp3016 = icmp eq i32 %1631, 0
  br i1 %cmp3016, label %if.then.3018, label %if.end.3019

if.then.3018:                                     ; preds = %if.then.3013
  %1632 = load i8*, i8** %s, align 8
  call void @S_no_op(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.49, i32 0, i32 0), i8* %1632)
  br label %if.end.3019

if.end.3019:                                      ; preds = %if.then.3018, %if.then.3013
  %1633 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i64 1), align 1
  %tobool3020 = icmp ne i8 %1633, 0
  br i1 %tobool3020, label %if.end.3022, label %if.then.3021

if.then.3021:                                     ; preds = %if.end.3019
  store i32 2, i32* @PL_expect, align 4
  %1634 = load i8*, i8** %s, align 8
  store i8* %1634, i8** @PL_bufptr, align 8
  store i32 291, i32* %retval
  br label %return

if.end.3022:                                      ; preds = %if.end.3019
  store i32 0, i32* @PL_expect, align 4
  store i8 35, i8* @PL_pending_ident, align 1
  %1635 = load i8*, i8** %s, align 8
  store i8* %1635, i8** @PL_bufptr, align 8
  store i32 291, i32* %retval
  br label %return

if.end.3023:                                      ; preds = %lor.lhs.false.3008, %if.end.2945
  store i8 36, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i64 0), align 1
  %1636 = load i8*, i8** %s, align 8
  %1637 = load i8*, i8** @PL_bufend, align 8
  %call3024 = call i8* @S_scan_ident(i8* %1636, i8* %1637, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i64 1), i64 255, i32 0)
  store i8* %call3024, i8** %s, align 8
  %1638 = load i32, i32* @PL_expect, align 4
  %cmp3025 = icmp eq i32 %1638, 0
  br i1 %cmp3025, label %if.then.3027, label %if.end.3028

if.then.3027:                                     ; preds = %if.end.3023
  %1639 = load i8*, i8** %s, align 8
  call void @S_no_op(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.50, i32 0, i32 0), i8* %1639)
  br label %if.end.3028

if.end.3028:                                      ; preds = %if.then.3027, %if.end.3023
  %1640 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i64 1), align 1
  %tobool3029 = icmp ne i8 %1640, 0
  br i1 %tobool3029, label %if.end.3036, label %if.then.3030

if.then.3030:                                     ; preds = %if.end.3028
  %1641 = load i8*, i8** %s, align 8
  %1642 = load i8*, i8** @PL_bufend, align 8
  %cmp3031 = icmp eq i8* %1641, %1642
  br i1 %cmp3031, label %if.then.3033, label %if.end.3035

if.then.3033:                                     ; preds = %if.then.3030
  %call3034 = call i32 @Perl_yyerror(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.51, i32 0, i32 0))
  br label %if.end.3035

if.end.3035:                                      ; preds = %if.then.3033, %if.then.3030
  store i32 2, i32* @PL_expect, align 4
  %1643 = load i8*, i8** %s, align 8
  store i8* %1643, i8** @PL_bufptr, align 8
  store i32 36, i32* %retval
  br label %return

if.end.3036:                                      ; preds = %if.end.3028
  %1644 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i64 1), align 1
  %conv3037 = sext i8 %1644 to i32
  %cmp3038 = icmp eq i32 %conv3037, 91
  br i1 %cmp3038, label %land.lhs.true.3040, label %if.end.3055

land.lhs.true.3040:                               ; preds = %if.end.3036
  %1645 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i64 2), align 1
  %tobool3041 = icmp ne i8 %1645, 0
  br i1 %tobool3041, label %if.end.3055, label %if.then.3042

if.then.3042:                                     ; preds = %land.lhs.true.3040
  %1646 = load i32, i32* getelementptr inbounds (%struct.cop, %struct.cop* @PL_compiling, i32 0, i32 12), align 4
  %conv3043 = sext i32 %1646 to i64
  %call3044 = call %struct.sv* @Perl_newSViv(i64 %conv3043)
  %call3045 = call %struct.op* @Perl_newSVOP(i32 5, i32 0, %struct.sv* %call3044)
  store %struct.op* %call3045, %struct.op** bitcast (%union.YYSTYPE* @PL_yylval to %struct.op**), align 8
  %1647 = load %struct.op*, %struct.op** bitcast (%union.YYSTYPE* @PL_yylval to %struct.op**), align 8
  %op_private3046 = getelementptr inbounds %struct.op, %struct.op* %1647, i32 0, i32 7
  store i8 32, i8* %op_private3046, align 1
  %1648 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line3047 = getelementptr inbounds %struct.cop, %struct.cop* %1648, i32 0, i32 13
  %1649 = load i32, i32* %cop_line3047, align 4
  %1650 = load i32, i32* @PL_copline, align 4
  %cmp3048 = icmp ult i32 %1649, %1650
  br i1 %cmp3048, label %cond.true.3050, label %cond.false.3052

cond.true.3050:                                   ; preds = %if.then.3042
  %1651 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line3051 = getelementptr inbounds %struct.cop, %struct.cop* %1651, i32 0, i32 13
  %1652 = load i32, i32* %cop_line3051, align 4
  br label %cond.end.3053

cond.false.3052:                                  ; preds = %if.then.3042
  %1653 = load i32, i32* @PL_copline, align 4
  br label %cond.end.3053

cond.end.3053:                                    ; preds = %cond.false.3052, %cond.true.3050
  %cond3054 = phi i32 [ %1652, %cond.true.3050 ], [ %1653, %cond.false.3052 ]
  store i32 %cond3054, i32* @PL_copline, align 4
  store i32 0, i32* @PL_expect, align 4
  %1654 = load i8*, i8** %s, align 8
  store i8* %1654, i8** @PL_bufptr, align 8
  store i32 260, i32* %retval
  br label %return

if.end.3055:                                      ; preds = %land.lhs.true.3040, %if.end.3036
  %1655 = load i8*, i8** %s, align 8
  store i8* %1655, i8** %d, align 8
  %1656 = load i8*, i8** %s, align 8
  %1657 = load i8, i8* %1656, align 1
  %conv3056 = sext i8 %1657 to i32
  store i32 %conv3056, i32* %tmp, align 4
  %1658 = load i32, i32* @PL_lex_state, align 4
  %cmp3057 = icmp eq i32 %1658, 10
  br i1 %cmp3057, label %if.then.3059, label %if.end.3061

if.then.3059:                                     ; preds = %if.end.3055
  %1659 = load i8*, i8** %s, align 8
  %call3060 = call i8* @S_skipspace(i8* %1659)
  store i8* %call3060, i8** %s, align 8
  br label %if.end.3061

if.end.3061:                                      ; preds = %if.then.3059, %if.end.3055
  %1660 = load i32, i32* @PL_expect, align 4
  %cmp3062 = icmp ne i32 %1660, 2
  br i1 %cmp3062, label %land.lhs.true.3067, label %lor.lhs.false.3064

lor.lhs.false.3064:                               ; preds = %if.end.3061
  %1661 = load i8*, i8** @PL_oldoldbufptr, align 8
  %1662 = load i8*, i8** @PL_last_lop, align 8
  %cmp3065 = icmp eq i8* %1661, %1662
  br i1 %cmp3065, label %land.lhs.true.3067, label %if.end.3378

land.lhs.true.3067:                               ; preds = %lor.lhs.false.3064, %if.end.3061
  %1663 = load i8*, i8** %s, align 8
  %call3068 = call i32 @S_intuit_more(i8* %1663)
  %tobool3069 = icmp ne i32 %call3068, 0
  br i1 %tobool3069, label %if.then.3070, label %if.end.3378

if.then.3070:                                     ; preds = %land.lhs.true.3067
  %1664 = load i8*, i8** %s, align 8
  %1665 = load i8, i8* %1664, align 1
  %conv3073 = sext i8 %1665 to i32
  %cmp3074 = icmp eq i32 %conv3073, 91
  br i1 %cmp3074, label %if.then.3076, label %if.else.3215

if.then.3076:                                     ; preds = %if.then.3070
  store i8 64, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i64 0), align 1
  %1666 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings3077 = getelementptr inbounds %struct.cop, %struct.cop* %1666, i32 0, i32 14
  %1667 = load %struct.sv*, %struct.sv** %cop_warnings3077, align 8
  %cmp3078 = icmp ne %struct.sv* %1667, null
  br i1 %cmp3078, label %land.lhs.true.3080, label %lor.lhs.false.3096

land.lhs.true.3080:                               ; preds = %if.then.3076
  %1668 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings3081 = getelementptr inbounds %struct.cop, %struct.cop* %1668, i32 0, i32 14
  %1669 = load %struct.sv*, %struct.sv** %cop_warnings3081, align 8
  %cmp3082 = icmp ne %struct.sv* %1669, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 2)
  br i1 %cmp3082, label %land.lhs.true.3084, label %lor.lhs.false.3096

land.lhs.true.3084:                               ; preds = %land.lhs.true.3080
  %1670 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings3085 = getelementptr inbounds %struct.cop, %struct.cop* %1670, i32 0, i32 14
  %1671 = load %struct.sv*, %struct.sv** %cop_warnings3085, align 8
  %cmp3086 = icmp eq %struct.sv* %1671, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 1)
  br i1 %cmp3086, label %if.then.3104, label %lor.lhs.false.3088

lor.lhs.false.3088:                               ; preds = %land.lhs.true.3084
  %1672 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings3089 = getelementptr inbounds %struct.cop, %struct.cop* %1672, i32 0, i32 14
  %1673 = load %struct.sv*, %struct.sv** %cop_warnings3089, align 8
  %sv_any3090 = getelementptr inbounds %struct.sv, %struct.sv* %1673, i32 0, i32 0
  %1674 = load i8*, i8** %sv_any3090, align 8
  %1675 = bitcast i8* %1674 to %struct.xpv*
  %xpv_pv3091 = getelementptr inbounds %struct.xpv, %struct.xpv* %1675, i32 0, i32 0
  %1676 = load i8*, i8** %xpv_pv3091, align 8
  %arrayidx3092 = getelementptr inbounds i8, i8* %1676, i64 7
  %1677 = load i8, i8* %arrayidx3092, align 1
  %conv3093 = sext i8 %1677 to i32
  %and3094 = and i32 %conv3093, 1
  %tobool3095 = icmp ne i32 %and3094, 0
  br i1 %tobool3095, label %if.then.3104, label %lor.lhs.false.3096

lor.lhs.false.3096:                               ; preds = %lor.lhs.false.3088, %land.lhs.true.3080, %if.then.3076
  %1678 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings3097 = getelementptr inbounds %struct.cop, %struct.cop* %1678, i32 0, i32 14
  %1679 = load %struct.sv*, %struct.sv** %cop_warnings3097, align 8
  %cmp3098 = icmp eq %struct.sv* %1679, null
  br i1 %cmp3098, label %land.lhs.true.3100, label %if.end.3214

land.lhs.true.3100:                               ; preds = %lor.lhs.false.3096
  %1680 = load i8, i8* @PL_dowarn, align 1
  %conv3101 = zext i8 %1680 to i32
  %and3102 = and i32 %conv3101, 1
  %tobool3103 = icmp ne i32 %and3102, 0
  br i1 %tobool3103, label %if.then.3104, label %if.end.3214

if.then.3104:                                     ; preds = %land.lhs.true.3100, %lor.lhs.false.3088, %land.lhs.true.3084
  %1681 = load i8*, i8** %s, align 8
  %add.ptr3105 = getelementptr inbounds i8, i8* %1681, i64 1
  store i8* %add.ptr3105, i8** %t3072, align 8
  br label %for.cond.3106

for.cond.3106:                                    ; preds = %for.inc.3188, %if.then.3104
  %1682 = load i8*, i8** %t3072, align 8
  %1683 = load i8, i8* %1682, align 1
  %conv3107 = sext i8 %1683 to i32
  %cmp3108 = icmp eq i32 %conv3107, 32
  br i1 %cmp3108, label %lor.end.3185, label %lor.lhs.false.3110

lor.lhs.false.3110:                               ; preds = %for.cond.3106
  %1684 = load i8*, i8** %t3072, align 8
  %1685 = load i8, i8* %1684, align 1
  %conv3111 = sext i8 %1685 to i32
  %cmp3112 = icmp eq i32 %conv3111, 9
  br i1 %cmp3112, label %lor.end.3185, label %lor.lhs.false.3114

lor.lhs.false.3114:                               ; preds = %lor.lhs.false.3110
  %1686 = load i8*, i8** %t3072, align 8
  %1687 = load i8, i8* %1686, align 1
  %conv3115 = sext i8 %1687 to i32
  %cmp3116 = icmp eq i32 %conv3115, 10
  br i1 %cmp3116, label %lor.end.3185, label %lor.lhs.false.3118

lor.lhs.false.3118:                               ; preds = %lor.lhs.false.3114
  %1688 = load i8*, i8** %t3072, align 8
  %1689 = load i8, i8* %1688, align 1
  %conv3119 = sext i8 %1689 to i32
  %cmp3120 = icmp eq i32 %conv3119, 13
  br i1 %cmp3120, label %lor.end.3185, label %lor.lhs.false.3122

lor.lhs.false.3122:                               ; preds = %lor.lhs.false.3118
  %1690 = load i8*, i8** %t3072, align 8
  %1691 = load i8, i8* %1690, align 1
  %conv3123 = sext i8 %1691 to i32
  %cmp3124 = icmp eq i32 %conv3123, 12
  br i1 %cmp3124, label %lor.end.3185, label %lor.lhs.false.3126

lor.lhs.false.3126:                               ; preds = %lor.lhs.false.3122
  %1692 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private3127 = getelementptr inbounds %struct.cop, %struct.cop* %1692, i32 0, i32 7
  %1693 = load i8, i8* %op_private3127, align 1
  %conv3128 = zext i8 %1693 to i32
  %and3129 = and i32 %conv3128, 8
  %tobool3130 = icmp ne i32 %and3129, 0
  br i1 %tobool3130, label %cond.true.3149, label %lor.lhs.false.3131

lor.lhs.false.3131:                               ; preds = %lor.lhs.false.3126
  %1694 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %tobool3132 = icmp ne %struct.sv* %1694, null
  br i1 %tobool3132, label %land.lhs.true.3133, label %lor.lhs.false.3142

land.lhs.true.3133:                               ; preds = %lor.lhs.false.3131
  %1695 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_flags3134 = getelementptr inbounds %struct.sv, %struct.sv* %1695, i32 0, i32 2
  %1696 = load i32, i32* %sv_flags3134, align 4
  %and3135 = and i32 %1696, 536870912
  %tobool3136 = icmp ne i32 %and3135, 0
  br i1 %tobool3136, label %land.lhs.true.3137, label %lor.lhs.false.3142

land.lhs.true.3137:                               ; preds = %land.lhs.true.3133
  %1697 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private3138 = getelementptr inbounds %struct.cop, %struct.cop* %1697, i32 0, i32 7
  %1698 = load i8, i8* %op_private3138, align 1
  %conv3139 = zext i8 %1698 to i32
  %and3140 = and i32 %conv3139, 8
  %tobool3141 = icmp ne i32 %and3140, 0
  br i1 %tobool3141, label %lor.lhs.false.3142, label %lor.lhs.false.3145

lor.lhs.false.3142:                               ; preds = %land.lhs.true.3137, %land.lhs.true.3133, %lor.lhs.false.3131
  %1699 = load i32, i32* @PL_hints, align 4
  %and3143 = and i32 %1699, 8388608
  %tobool3144 = icmp ne i32 %and3143, 0
  br i1 %tobool3144, label %lor.lhs.false.3145, label %cond.true.3149

lor.lhs.false.3145:                               ; preds = %lor.lhs.false.3142, %land.lhs.true.3137
  %1700 = load i8*, i8** %t3072, align 8
  %1701 = load i8, i8* %1700, align 1
  %conv3146 = zext i8 %1701 to i32
  %cmp3147 = icmp slt i32 %conv3146, 192
  br i1 %cmp3147, label %cond.true.3149, label %cond.false.3177

cond.true.3149:                                   ; preds = %lor.lhs.false.3145, %lor.lhs.false.3142, %lor.lhs.false.3126
  %1702 = load i8*, i8** %t3072, align 8
  %1703 = load i8, i8* %1702, align 1
  %conv3150 = sext i8 %1703 to i32
  %cmp3151 = icmp sge i32 %conv3150, 65
  br i1 %cmp3151, label %land.lhs.true.3153, label %lor.lhs.false.3157

land.lhs.true.3153:                               ; preds = %cond.true.3149
  %1704 = load i8*, i8** %t3072, align 8
  %1705 = load i8, i8* %1704, align 1
  %conv3154 = sext i8 %1705 to i32
  %cmp3155 = icmp sle i32 %conv3154, 90
  br i1 %cmp3155, label %lor.end.3185, label %lor.lhs.false.3157

lor.lhs.false.3157:                               ; preds = %land.lhs.true.3153, %cond.true.3149
  %1706 = load i8*, i8** %t3072, align 8
  %1707 = load i8, i8* %1706, align 1
  %conv3158 = sext i8 %1707 to i32
  %cmp3159 = icmp sge i32 %conv3158, 97
  br i1 %cmp3159, label %land.lhs.true.3161, label %lor.lhs.false.3165

land.lhs.true.3161:                               ; preds = %lor.lhs.false.3157
  %1708 = load i8*, i8** %t3072, align 8
  %1709 = load i8, i8* %1708, align 1
  %conv3162 = sext i8 %1709 to i32
  %cmp3163 = icmp sle i32 %conv3162, 122
  br i1 %cmp3163, label %lor.end.3185, label %lor.lhs.false.3165

lor.lhs.false.3165:                               ; preds = %land.lhs.true.3161, %lor.lhs.false.3157
  %1710 = load i8*, i8** %t3072, align 8
  %1711 = load i8, i8* %1710, align 1
  %conv3166 = sext i8 %1711 to i32
  %cmp3167 = icmp sge i32 %conv3166, 48
  br i1 %cmp3167, label %land.lhs.true.3169, label %lor.lhs.false.3173

land.lhs.true.3169:                               ; preds = %lor.lhs.false.3165
  %1712 = load i8*, i8** %t3072, align 8
  %1713 = load i8, i8* %1712, align 1
  %conv3170 = sext i8 %1713 to i32
  %cmp3171 = icmp sle i32 %conv3170, 57
  br i1 %cmp3171, label %lor.end.3185, label %lor.lhs.false.3173

lor.lhs.false.3173:                               ; preds = %land.lhs.true.3169, %lor.lhs.false.3165
  %1714 = load i8*, i8** %t3072, align 8
  %1715 = load i8, i8* %1714, align 1
  %conv3174 = sext i8 %1715 to i32
  %cmp3175 = icmp eq i32 %conv3174, 95
  br i1 %cmp3175, label %lor.end.3185, label %lor.rhs.3181

cond.false.3177:                                  ; preds = %lor.lhs.false.3145
  %1716 = load i8*, i8** %t3072, align 8
  %call3178 = call signext i8 @Perl_is_utf8_alnum(i8* %1716)
  %conv3179 = sext i8 %call3178 to i32
  %tobool3180 = icmp ne i32 %conv3179, 0
  br i1 %tobool3180, label %lor.end.3185, label %lor.rhs.3181

lor.rhs.3181:                                     ; preds = %cond.false.3177, %lor.lhs.false.3173
  %1717 = load i8*, i8** %t3072, align 8
  %1718 = load i8, i8* %1717, align 1
  %conv3182 = sext i8 %1718 to i32
  %cmp3183 = icmp eq i32 %conv3182, 36
  br label %lor.end.3185

lor.end.3185:                                     ; preds = %lor.rhs.3181, %cond.false.3177, %lor.lhs.false.3173, %land.lhs.true.3169, %land.lhs.true.3161, %land.lhs.true.3153, %lor.lhs.false.3122, %lor.lhs.false.3118, %lor.lhs.false.3114, %lor.lhs.false.3110, %for.cond.3106
  %1719 = phi i1 [ true, %cond.false.3177 ], [ true, %lor.lhs.false.3173 ], [ true, %land.lhs.true.3169 ], [ true, %land.lhs.true.3161 ], [ true, %land.lhs.true.3153 ], [ true, %lor.lhs.false.3122 ], [ true, %lor.lhs.false.3118 ], [ true, %lor.lhs.false.3114 ], [ true, %lor.lhs.false.3110 ], [ true, %for.cond.3106 ], [ %cmp3183, %lor.rhs.3181 ]
  br i1 %1719, label %for.body.3187, label %for.end.3190

for.body.3187:                                    ; preds = %lor.end.3185
  br label %for.inc.3188

for.inc.3188:                                     ; preds = %for.body.3187
  %1720 = load i8*, i8** %t3072, align 8
  %incdec.ptr3189 = getelementptr inbounds i8, i8* %1720, i32 1
  store i8* %incdec.ptr3189, i8** %t3072, align 8
  br label %for.cond.3106

for.end.3190:                                     ; preds = %lor.end.3185
  %1721 = load i8*, i8** %t3072, align 8
  %incdec.ptr3191 = getelementptr inbounds i8, i8* %1721, i32 1
  store i8* %incdec.ptr3191, i8** %t3072, align 8
  %1722 = load i8, i8* %1721, align 1
  %conv3192 = sext i8 %1722 to i32
  %cmp3193 = icmp eq i32 %conv3192, 44
  br i1 %cmp3193, label %if.then.3195, label %if.end.3213

if.then.3195:                                     ; preds = %for.end.3190
  %1723 = load i8*, i8** @PL_bufptr, align 8
  %call3196 = call i8* @S_skipspace(i8* %1723)
  store i8* %call3196, i8** @PL_bufptr, align 8
  br label %while.cond.3197

while.cond.3197:                                  ; preds = %while.body.3206, %if.then.3195
  %1724 = load i8*, i8** %t3072, align 8
  %1725 = load i8*, i8** @PL_bufend, align 8
  %cmp3198 = icmp ult i8* %1724, %1725
  br i1 %cmp3198, label %land.rhs.3200, label %land.end.3204

land.rhs.3200:                                    ; preds = %while.cond.3197
  %1726 = load i8*, i8** %t3072, align 8
  %1727 = load i8, i8* %1726, align 1
  %conv3201 = sext i8 %1727 to i32
  %cmp3202 = icmp ne i32 %conv3201, 93
  br label %land.end.3204

land.end.3204:                                    ; preds = %land.rhs.3200, %while.cond.3197
  %1728 = phi i1 [ false, %while.cond.3197 ], [ %cmp3202, %land.rhs.3200 ]
  br i1 %1728, label %while.body.3206, label %while.end.3208

while.body.3206:                                  ; preds = %land.end.3204
  %1729 = load i8*, i8** %t3072, align 8
  %incdec.ptr3207 = getelementptr inbounds i8, i8* %1729, i32 1
  store i8* %incdec.ptr3207, i8** %t3072, align 8
  br label %while.cond.3197

while.end.3208:                                   ; preds = %land.end.3204
  %1730 = load i8*, i8** %t3072, align 8
  %1731 = load i8*, i8** @PL_bufptr, align 8
  %sub.ptr.lhs.cast3209 = ptrtoint i8* %1730 to i64
  %sub.ptr.rhs.cast3210 = ptrtoint i8* %1731 to i64
  %sub.ptr.sub3211 = sub i64 %sub.ptr.lhs.cast3209, %sub.ptr.rhs.cast3210
  %add3212 = add nsw i64 %sub.ptr.sub3211, 1
  %1732 = load i8*, i8** @PL_bufptr, align 8
  call void (i32, i8*, ...) @Perl_warner(i32 28, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.52, i32 0, i32 0), i64 %add3212, i8* %1732)
  br label %if.end.3213

if.end.3213:                                      ; preds = %while.end.3208, %for.end.3190
  br label %if.end.3214

if.end.3214:                                      ; preds = %if.end.3213, %land.lhs.true.3100, %lor.lhs.false.3096
  br label %if.end.3377

if.else.3215:                                     ; preds = %if.then.3070
  %1733 = load i8*, i8** %s, align 8
  %1734 = load i8, i8* %1733, align 1
  %conv3216 = sext i8 %1734 to i32
  %cmp3217 = icmp eq i32 %conv3216, 123
  br i1 %cmp3217, label %if.then.3219, label %if.end.3376

if.then.3219:                                     ; preds = %if.else.3215
  store i8 37, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i64 0), align 1
  %1735 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings3220 = getelementptr inbounds %struct.cop, %struct.cop* %1735, i32 0, i32 14
  %1736 = load %struct.sv*, %struct.sv** %cop_warnings3220, align 8
  %cmp3221 = icmp ne %struct.sv* %1736, null
  br i1 %cmp3221, label %land.lhs.true.3223, label %lor.lhs.false.3239

land.lhs.true.3223:                               ; preds = %if.then.3219
  %1737 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings3224 = getelementptr inbounds %struct.cop, %struct.cop* %1737, i32 0, i32 14
  %1738 = load %struct.sv*, %struct.sv** %cop_warnings3224, align 8
  %cmp3225 = icmp ne %struct.sv* %1738, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 2)
  br i1 %cmp3225, label %land.lhs.true.3227, label %lor.lhs.false.3239

land.lhs.true.3227:                               ; preds = %land.lhs.true.3223
  %1739 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings3228 = getelementptr inbounds %struct.cop, %struct.cop* %1739, i32 0, i32 14
  %1740 = load %struct.sv*, %struct.sv** %cop_warnings3228, align 8
  %cmp3229 = icmp eq %struct.sv* %1740, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 1)
  br i1 %cmp3229, label %land.lhs.true.3247, label %lor.lhs.false.3231

lor.lhs.false.3231:                               ; preds = %land.lhs.true.3227
  %1741 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings3232 = getelementptr inbounds %struct.cop, %struct.cop* %1741, i32 0, i32 14
  %1742 = load %struct.sv*, %struct.sv** %cop_warnings3232, align 8
  %sv_any3233 = getelementptr inbounds %struct.sv, %struct.sv* %1742, i32 0, i32 0
  %1743 = load i8*, i8** %sv_any3233, align 8
  %1744 = bitcast i8* %1743 to %struct.xpv*
  %xpv_pv3234 = getelementptr inbounds %struct.xpv, %struct.xpv* %1744, i32 0, i32 0
  %1745 = load i8*, i8** %xpv_pv3234, align 8
  %arrayidx3235 = getelementptr inbounds i8, i8* %1745, i64 7
  %1746 = load i8, i8* %arrayidx3235, align 1
  %conv3236 = sext i8 %1746 to i32
  %and3237 = and i32 %conv3236, 1
  %tobool3238 = icmp ne i32 %and3237, 0
  br i1 %tobool3238, label %land.lhs.true.3247, label %lor.lhs.false.3239

lor.lhs.false.3239:                               ; preds = %lor.lhs.false.3231, %land.lhs.true.3223, %if.then.3219
  %1747 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings3240 = getelementptr inbounds %struct.cop, %struct.cop* %1747, i32 0, i32 14
  %1748 = load %struct.sv*, %struct.sv** %cop_warnings3240, align 8
  %cmp3241 = icmp eq %struct.sv* %1748, null
  br i1 %cmp3241, label %land.lhs.true.3243, label %if.end.3375

land.lhs.true.3243:                               ; preds = %lor.lhs.false.3239
  %1749 = load i8, i8* @PL_dowarn, align 1
  %conv3244 = zext i8 %1749 to i32
  %and3245 = and i32 %conv3244, 1
  %tobool3246 = icmp ne i32 %and3245, 0
  br i1 %tobool3246, label %land.lhs.true.3247, label %if.end.3375

land.lhs.true.3247:                               ; preds = %land.lhs.true.3243, %lor.lhs.false.3231, %land.lhs.true.3227
  %call3248 = call i32 @strcmp(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i64 1), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.53, i32 0, i32 0))
  %tobool3249 = icmp ne i32 %call3248, 0
  br i1 %tobool3249, label %if.end.3375, label %land.lhs.true.3250

land.lhs.true.3250:                               ; preds = %land.lhs.true.3247
  %1750 = load i8*, i8** %s, align 8
  %call3251 = call i8* @strchr(i8* %1750, i32 125)
  store i8* %call3251, i8** %t3072, align 8
  %tobool3252 = icmp ne i8* %call3251, null
  br i1 %tobool3252, label %land.lhs.true.3253, label %if.end.3375

land.lhs.true.3253:                               ; preds = %land.lhs.true.3250
  %1751 = load i8*, i8** %t3072, align 8
  %call3254 = call i8* @strchr(i8* %1751, i32 61)
  store i8* %call3254, i8** %t3072, align 8
  %tobool3255 = icmp ne i8* %call3254, null
  br i1 %tobool3255, label %if.then.3256, label %if.end.3375

if.then.3256:                                     ; preds = %land.lhs.true.3253
  %1752 = load i8*, i8** %t3072, align 8
  %incdec.ptr3260 = getelementptr inbounds i8, i8* %1752, i32 1
  store i8* %incdec.ptr3260, i8** %t3072, align 8
  br label %for.cond.3261

for.cond.3261:                                    ; preds = %for.inc.3284, %if.then.3256
  %1753 = load i8*, i8** %t3072, align 8
  %1754 = load i8, i8* %1753, align 1
  %conv3262 = sext i8 %1754 to i32
  %cmp3263 = icmp eq i32 %conv3262, 32
  br i1 %cmp3263, label %lor.end.3281, label %lor.lhs.false.3265

lor.lhs.false.3265:                               ; preds = %for.cond.3261
  %1755 = load i8*, i8** %t3072, align 8
  %1756 = load i8, i8* %1755, align 1
  %conv3266 = sext i8 %1756 to i32
  %cmp3267 = icmp eq i32 %conv3266, 9
  br i1 %cmp3267, label %lor.end.3281, label %lor.lhs.false.3269

lor.lhs.false.3269:                               ; preds = %lor.lhs.false.3265
  %1757 = load i8*, i8** %t3072, align 8
  %1758 = load i8, i8* %1757, align 1
  %conv3270 = sext i8 %1758 to i32
  %cmp3271 = icmp eq i32 %conv3270, 10
  br i1 %cmp3271, label %lor.end.3281, label %lor.lhs.false.3273

lor.lhs.false.3273:                               ; preds = %lor.lhs.false.3269
  %1759 = load i8*, i8** %t3072, align 8
  %1760 = load i8, i8* %1759, align 1
  %conv3274 = sext i8 %1760 to i32
  %cmp3275 = icmp eq i32 %conv3274, 13
  br i1 %cmp3275, label %lor.end.3281, label %lor.rhs.3277

lor.rhs.3277:                                     ; preds = %lor.lhs.false.3273
  %1761 = load i8*, i8** %t3072, align 8
  %1762 = load i8, i8* %1761, align 1
  %conv3278 = sext i8 %1762 to i32
  %cmp3279 = icmp eq i32 %conv3278, 12
  br label %lor.end.3281

lor.end.3281:                                     ; preds = %lor.rhs.3277, %lor.lhs.false.3273, %lor.lhs.false.3269, %lor.lhs.false.3265, %for.cond.3261
  %1763 = phi i1 [ true, %lor.lhs.false.3273 ], [ true, %lor.lhs.false.3269 ], [ true, %lor.lhs.false.3265 ], [ true, %for.cond.3261 ], [ %cmp3279, %lor.rhs.3277 ]
  br i1 %1763, label %for.body.3283, label %for.end.3286

for.body.3283:                                    ; preds = %lor.end.3281
  br label %for.inc.3284

for.inc.3284:                                     ; preds = %for.body.3283
  %1764 = load i8*, i8** %t3072, align 8
  %incdec.ptr3285 = getelementptr inbounds i8, i8* %1764, i32 1
  store i8* %incdec.ptr3285, i8** %t3072, align 8
  br label %for.cond.3261

for.end.3286:                                     ; preds = %lor.end.3281
  %1765 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private3287 = getelementptr inbounds %struct.cop, %struct.cop* %1765, i32 0, i32 7
  %1766 = load i8, i8* %op_private3287, align 1
  %conv3288 = zext i8 %1766 to i32
  %and3289 = and i32 %conv3288, 8
  %tobool3290 = icmp ne i32 %and3289, 0
  br i1 %tobool3290, label %cond.true.3309, label %lor.lhs.false.3291

lor.lhs.false.3291:                               ; preds = %for.end.3286
  %1767 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %tobool3292 = icmp ne %struct.sv* %1767, null
  br i1 %tobool3292, label %land.lhs.true.3293, label %lor.lhs.false.3302

land.lhs.true.3293:                               ; preds = %lor.lhs.false.3291
  %1768 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_flags3294 = getelementptr inbounds %struct.sv, %struct.sv* %1768, i32 0, i32 2
  %1769 = load i32, i32* %sv_flags3294, align 4
  %and3295 = and i32 %1769, 536870912
  %tobool3296 = icmp ne i32 %and3295, 0
  br i1 %tobool3296, label %land.lhs.true.3297, label %lor.lhs.false.3302

land.lhs.true.3297:                               ; preds = %land.lhs.true.3293
  %1770 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private3298 = getelementptr inbounds %struct.cop, %struct.cop* %1770, i32 0, i32 7
  %1771 = load i8, i8* %op_private3298, align 1
  %conv3299 = zext i8 %1771 to i32
  %and3300 = and i32 %conv3299, 8
  %tobool3301 = icmp ne i32 %and3300, 0
  br i1 %tobool3301, label %lor.lhs.false.3302, label %lor.lhs.false.3305

lor.lhs.false.3302:                               ; preds = %land.lhs.true.3297, %land.lhs.true.3293, %lor.lhs.false.3291
  %1772 = load i32, i32* @PL_hints, align 4
  %and3303 = and i32 %1772, 8388608
  %tobool3304 = icmp ne i32 %and3303, 0
  br i1 %tobool3304, label %lor.lhs.false.3305, label %cond.true.3309

lor.lhs.false.3305:                               ; preds = %lor.lhs.false.3302, %land.lhs.true.3297
  %1773 = load i8*, i8** %t3072, align 8
  %1774 = load i8, i8* %1773, align 1
  %conv3306 = zext i8 %1774 to i32
  %cmp3307 = icmp slt i32 %conv3306, 192
  br i1 %cmp3307, label %cond.true.3309, label %cond.false.3329

cond.true.3309:                                   ; preds = %lor.lhs.false.3305, %lor.lhs.false.3302, %for.end.3286
  %1775 = load i8*, i8** %t3072, align 8
  %1776 = load i8, i8* %1775, align 1
  %conv3310 = sext i8 %1776 to i32
  %cmp3311 = icmp sge i32 %conv3310, 65
  br i1 %cmp3311, label %land.lhs.true.3313, label %lor.lhs.false.3317

land.lhs.true.3313:                               ; preds = %cond.true.3309
  %1777 = load i8*, i8** %t3072, align 8
  %1778 = load i8, i8* %1777, align 1
  %conv3314 = sext i8 %1778 to i32
  %cmp3315 = icmp sle i32 %conv3314, 90
  br i1 %cmp3315, label %if.then.3336, label %lor.lhs.false.3317

lor.lhs.false.3317:                               ; preds = %land.lhs.true.3313, %cond.true.3309
  %1779 = load i8*, i8** %t3072, align 8
  %1780 = load i8, i8* %1779, align 1
  %conv3318 = sext i8 %1780 to i32
  %cmp3319 = icmp sge i32 %conv3318, 97
  br i1 %cmp3319, label %land.lhs.true.3321, label %lor.lhs.false.3325

land.lhs.true.3321:                               ; preds = %lor.lhs.false.3317
  %1781 = load i8*, i8** %t3072, align 8
  %1782 = load i8, i8* %1781, align 1
  %conv3322 = sext i8 %1782 to i32
  %cmp3323 = icmp sle i32 %conv3322, 122
  br i1 %cmp3323, label %if.then.3336, label %lor.lhs.false.3325

lor.lhs.false.3325:                               ; preds = %land.lhs.true.3321, %lor.lhs.false.3317
  %1783 = load i8*, i8** %t3072, align 8
  %1784 = load i8, i8* %1783, align 1
  %conv3326 = sext i8 %1784 to i32
  %cmp3327 = icmp eq i32 %conv3326, 95
  br i1 %cmp3327, label %if.then.3336, label %if.end.3374

cond.false.3329:                                  ; preds = %lor.lhs.false.3305
  %1785 = load i8*, i8** %t3072, align 8
  %call3330 = call signext i8 @Perl_is_utf8_idcont(i8* %1785)
  %conv3331 = sext i8 %call3330 to i32
  %tobool3332 = icmp ne i32 %conv3331, 0
  br i1 %tobool3332, label %land.lhs.true.3333, label %if.end.3374

land.lhs.true.3333:                               ; preds = %cond.false.3329
  %1786 = load i8*, i8** %t3072, align 8
  %call3334 = call signext i8 @Perl_is_utf8_digit(i8* %1786)
  %tobool3335 = icmp ne i8 %call3334, 0
  br i1 %tobool3335, label %if.end.3374, label %if.then.3336

if.then.3336:                                     ; preds = %land.lhs.true.3333, %lor.lhs.false.3325, %land.lhs.true.3321, %land.lhs.true.3313
  %1787 = load i8*, i8** %t3072, align 8
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %tmpbuf, i32 0, i32 0
  %call3337 = call i8* @S_scan_word(i8* %1787, i8* %arraydecay, i64 256, i32 1, i64* %len3259)
  store i8* %call3337, i8** %t3072, align 8
  br label %for.cond.3338

for.cond.3338:                                    ; preds = %for.inc.3361, %if.then.3336
  %1788 = load i8*, i8** %t3072, align 8
  %1789 = load i8, i8* %1788, align 1
  %conv3339 = sext i8 %1789 to i32
  %cmp3340 = icmp eq i32 %conv3339, 32
  br i1 %cmp3340, label %lor.end.3358, label %lor.lhs.false.3342

lor.lhs.false.3342:                               ; preds = %for.cond.3338
  %1790 = load i8*, i8** %t3072, align 8
  %1791 = load i8, i8* %1790, align 1
  %conv3343 = sext i8 %1791 to i32
  %cmp3344 = icmp eq i32 %conv3343, 9
  br i1 %cmp3344, label %lor.end.3358, label %lor.lhs.false.3346

lor.lhs.false.3346:                               ; preds = %lor.lhs.false.3342
  %1792 = load i8*, i8** %t3072, align 8
  %1793 = load i8, i8* %1792, align 1
  %conv3347 = sext i8 %1793 to i32
  %cmp3348 = icmp eq i32 %conv3347, 10
  br i1 %cmp3348, label %lor.end.3358, label %lor.lhs.false.3350

lor.lhs.false.3350:                               ; preds = %lor.lhs.false.3346
  %1794 = load i8*, i8** %t3072, align 8
  %1795 = load i8, i8* %1794, align 1
  %conv3351 = sext i8 %1795 to i32
  %cmp3352 = icmp eq i32 %conv3351, 13
  br i1 %cmp3352, label %lor.end.3358, label %lor.rhs.3354

lor.rhs.3354:                                     ; preds = %lor.lhs.false.3350
  %1796 = load i8*, i8** %t3072, align 8
  %1797 = load i8, i8* %1796, align 1
  %conv3355 = sext i8 %1797 to i32
  %cmp3356 = icmp eq i32 %conv3355, 12
  br label %lor.end.3358

lor.end.3358:                                     ; preds = %lor.rhs.3354, %lor.lhs.false.3350, %lor.lhs.false.3346, %lor.lhs.false.3342, %for.cond.3338
  %1798 = phi i1 [ true, %lor.lhs.false.3350 ], [ true, %lor.lhs.false.3346 ], [ true, %lor.lhs.false.3342 ], [ true, %for.cond.3338 ], [ %cmp3356, %lor.rhs.3354 ]
  br i1 %1798, label %for.body.3360, label %for.end.3363

for.body.3360:                                    ; preds = %lor.end.3358
  br label %for.inc.3361

for.inc.3361:                                     ; preds = %for.body.3360
  %1799 = load i8*, i8** %t3072, align 8
  %incdec.ptr3362 = getelementptr inbounds i8, i8* %1799, i32 1
  store i8* %incdec.ptr3362, i8** %t3072, align 8
  br label %for.cond.3338

for.end.3363:                                     ; preds = %lor.end.3358
  %1800 = load i8*, i8** %t3072, align 8
  %1801 = load i8, i8* %1800, align 1
  %conv3364 = sext i8 %1801 to i32
  %cmp3365 = icmp eq i32 %conv3364, 59
  br i1 %cmp3365, label %land.lhs.true.3367, label %if.end.3373

land.lhs.true.3367:                               ; preds = %for.end.3363
  %arraydecay3368 = getelementptr inbounds [256 x i8], [256 x i8]* %tmpbuf, i32 0, i32 0
  %call3369 = call %struct.cv* @Perl_get_cv(i8* %arraydecay3368, i32 0)
  %tobool3370 = icmp ne %struct.cv* %call3369, null
  br i1 %tobool3370, label %if.then.3371, label %if.end.3373

if.then.3371:                                     ; preds = %land.lhs.true.3367
  %arraydecay3372 = getelementptr inbounds [256 x i8], [256 x i8]* %tmpbuf, i32 0, i32 0
  call void (i32, i8*, ...) @Perl_warner(i32 28, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.54, i32 0, i32 0), i8* %arraydecay3372)
  br label %if.end.3373

if.end.3373:                                      ; preds = %if.then.3371, %land.lhs.true.3367, %for.end.3363
  br label %if.end.3374

if.end.3374:                                      ; preds = %if.end.3373, %land.lhs.true.3333, %cond.false.3329, %lor.lhs.false.3325
  br label %if.end.3375

if.end.3375:                                      ; preds = %if.end.3374, %land.lhs.true.3253, %land.lhs.true.3250, %land.lhs.true.3247, %land.lhs.true.3243, %lor.lhs.false.3239
  br label %if.end.3376

if.end.3376:                                      ; preds = %if.end.3375, %if.else.3215
  br label %if.end.3377

if.end.3377:                                      ; preds = %if.end.3376, %if.end.3214
  br label %if.end.3378

if.end.3378:                                      ; preds = %if.end.3377, %land.lhs.true.3067, %lor.lhs.false.3064
  store i32 0, i32* @PL_expect, align 4
  %1802 = load i32, i32* @PL_lex_state, align 4
  %cmp3379 = icmp eq i32 %1802, 10
  br i1 %cmp3379, label %land.lhs.true.3381, label %if.end.3665

land.lhs.true.3381:                               ; preds = %if.end.3378
  %1803 = load i32, i32* %tmp, align 4
  %conv3382 = trunc i32 %1803 to i8
  %conv3383 = sext i8 %conv3382 to i32
  %cmp3384 = icmp eq i32 %conv3383, 32
  br i1 %cmp3384, label %if.then.3406, label %lor.lhs.false.3386

lor.lhs.false.3386:                               ; preds = %land.lhs.true.3381
  %1804 = load i32, i32* %tmp, align 4
  %conv3387 = trunc i32 %1804 to i8
  %conv3388 = sext i8 %conv3387 to i32
  %cmp3389 = icmp eq i32 %conv3388, 9
  br i1 %cmp3389, label %if.then.3406, label %lor.lhs.false.3391

lor.lhs.false.3391:                               ; preds = %lor.lhs.false.3386
  %1805 = load i32, i32* %tmp, align 4
  %conv3392 = trunc i32 %1805 to i8
  %conv3393 = sext i8 %conv3392 to i32
  %cmp3394 = icmp eq i32 %conv3393, 10
  br i1 %cmp3394, label %if.then.3406, label %lor.lhs.false.3396

lor.lhs.false.3396:                               ; preds = %lor.lhs.false.3391
  %1806 = load i32, i32* %tmp, align 4
  %conv3397 = trunc i32 %1806 to i8
  %conv3398 = sext i8 %conv3397 to i32
  %cmp3399 = icmp eq i32 %conv3398, 13
  br i1 %cmp3399, label %if.then.3406, label %lor.lhs.false.3401

lor.lhs.false.3401:                               ; preds = %lor.lhs.false.3396
  %1807 = load i32, i32* %tmp, align 4
  %conv3402 = trunc i32 %1807 to i8
  %conv3403 = sext i8 %conv3402 to i32
  %cmp3404 = icmp eq i32 %conv3403, 12
  br i1 %cmp3404, label %if.then.3406, label %if.end.3665

if.then.3406:                                     ; preds = %lor.lhs.false.3401, %lor.lhs.false.3396, %lor.lhs.false.3391, %lor.lhs.false.3386, %land.lhs.true.3381
  %1808 = load i8*, i8** @PL_last_lop, align 8
  %1809 = load i8*, i8** @PL_oldoldbufptr, align 8
  %cmp3408 = icmp eq i8* %1808, %1809
  %conv3409 = zext i1 %cmp3408 to i32
  %conv3410 = trunc i32 %conv3409 to i8
  store i8 %conv3410, i8* %islop, align 1
  %1810 = load i8, i8* %islop, align 1
  %tobool3411 = icmp ne i8 %1810, 0
  br i1 %tobool3411, label %lor.lhs.false.3412, label %if.then.3416

lor.lhs.false.3412:                               ; preds = %if.then.3406
  %1811 = load i16, i16* @PL_last_lop_op, align 2
  %conv3413 = zext i16 %1811 to i32
  %cmp3414 = icmp eq i32 %conv3413, 152
  br i1 %cmp3414, label %if.then.3416, label %if.else.3417

if.then.3416:                                     ; preds = %lor.lhs.false.3412, %if.then.3406
  store i32 0, i32* @PL_expect, align 4
  br label %if.end.3664

if.else.3417:                                     ; preds = %lor.lhs.false.3412
  %1812 = load i8*, i8** %s, align 8
  %1813 = load i8, i8* %1812, align 1
  %conv3418 = sext i8 %1813 to i32
  %call3419 = call i8* @strchr(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.55, i32 0, i32 0), i32 %conv3418)
  %tobool3420 = icmp ne i8* %call3419, null
  br i1 %tobool3420, label %if.then.3421, label %if.else.3422

if.then.3421:                                     ; preds = %if.else.3417
  store i32 1, i32* @PL_expect, align 4
  br label %if.end.3663

if.else.3422:                                     ; preds = %if.else.3417
  %1814 = load i8*, i8** %s, align 8
  %1815 = load i8, i8* %1814, align 1
  %conv3423 = sext i8 %1815 to i32
  %call3424 = call i8* @strchr(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.56, i32 0, i32 0), i32 %conv3423)
  %tobool3425 = icmp ne i8* %call3424, null
  br i1 %tobool3425, label %land.lhs.true.3426, label %if.else.3485

land.lhs.true.3426:                               ; preds = %if.else.3422
  %1816 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private3427 = getelementptr inbounds %struct.cop, %struct.cop* %1816, i32 0, i32 7
  %1817 = load i8, i8* %op_private3427, align 1
  %conv3428 = zext i8 %1817 to i32
  %and3429 = and i32 %conv3428, 8
  %tobool3430 = icmp ne i32 %and3429, 0
  br i1 %tobool3430, label %cond.true.3450, label %lor.lhs.false.3431

lor.lhs.false.3431:                               ; preds = %land.lhs.true.3426
  %1818 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %tobool3432 = icmp ne %struct.sv* %1818, null
  br i1 %tobool3432, label %land.lhs.true.3433, label %lor.lhs.false.3442

land.lhs.true.3433:                               ; preds = %lor.lhs.false.3431
  %1819 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_flags3434 = getelementptr inbounds %struct.sv, %struct.sv* %1819, i32 0, i32 2
  %1820 = load i32, i32* %sv_flags3434, align 4
  %and3435 = and i32 %1820, 536870912
  %tobool3436 = icmp ne i32 %and3435, 0
  br i1 %tobool3436, label %land.lhs.true.3437, label %lor.lhs.false.3442

land.lhs.true.3437:                               ; preds = %land.lhs.true.3433
  %1821 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private3438 = getelementptr inbounds %struct.cop, %struct.cop* %1821, i32 0, i32 7
  %1822 = load i8, i8* %op_private3438, align 1
  %conv3439 = zext i8 %1822 to i32
  %and3440 = and i32 %conv3439, 8
  %tobool3441 = icmp ne i32 %and3440, 0
  br i1 %tobool3441, label %lor.lhs.false.3442, label %lor.lhs.false.3445

lor.lhs.false.3442:                               ; preds = %land.lhs.true.3437, %land.lhs.true.3433, %lor.lhs.false.3431
  %1823 = load i32, i32* @PL_hints, align 4
  %and3443 = and i32 %1823, 8388608
  %tobool3444 = icmp ne i32 %and3443, 0
  br i1 %tobool3444, label %lor.lhs.false.3445, label %cond.true.3450

lor.lhs.false.3445:                               ; preds = %lor.lhs.false.3442, %land.lhs.true.3437
  %1824 = load i8*, i8** %s, align 8
  %add.ptr3446 = getelementptr inbounds i8, i8* %1824, i64 1
  %1825 = load i8, i8* %add.ptr3446, align 1
  %conv3447 = zext i8 %1825 to i32
  %cmp3448 = icmp slt i32 %conv3447, 192
  br i1 %cmp3448, label %cond.true.3450, label %cond.false.3475

cond.true.3450:                                   ; preds = %lor.lhs.false.3445, %lor.lhs.false.3442, %land.lhs.true.3426
  %1826 = load i8*, i8** %s, align 8
  %add.ptr3451 = getelementptr inbounds i8, i8* %1826, i64 1
  %1827 = load i8, i8* %add.ptr3451, align 1
  %conv3452 = sext i8 %1827 to i32
  %cmp3453 = icmp sge i32 %conv3452, 65
  br i1 %cmp3453, label %land.lhs.true.3455, label %lor.lhs.false.3460

land.lhs.true.3455:                               ; preds = %cond.true.3450
  %1828 = load i8*, i8** %s, align 8
  %add.ptr3456 = getelementptr inbounds i8, i8* %1828, i64 1
  %1829 = load i8, i8* %add.ptr3456, align 1
  %conv3457 = sext i8 %1829 to i32
  %cmp3458 = icmp sle i32 %conv3457, 90
  br i1 %cmp3458, label %if.then.3484, label %lor.lhs.false.3460

lor.lhs.false.3460:                               ; preds = %land.lhs.true.3455, %cond.true.3450
  %1830 = load i8*, i8** %s, align 8
  %add.ptr3461 = getelementptr inbounds i8, i8* %1830, i64 1
  %1831 = load i8, i8* %add.ptr3461, align 1
  %conv3462 = sext i8 %1831 to i32
  %cmp3463 = icmp sge i32 %conv3462, 97
  br i1 %cmp3463, label %land.lhs.true.3465, label %lor.lhs.false.3470

land.lhs.true.3465:                               ; preds = %lor.lhs.false.3460
  %1832 = load i8*, i8** %s, align 8
  %add.ptr3466 = getelementptr inbounds i8, i8* %1832, i64 1
  %1833 = load i8, i8* %add.ptr3466, align 1
  %conv3467 = sext i8 %1833 to i32
  %cmp3468 = icmp sle i32 %conv3467, 122
  br i1 %cmp3468, label %if.then.3484, label %lor.lhs.false.3470

lor.lhs.false.3470:                               ; preds = %land.lhs.true.3465, %lor.lhs.false.3460
  %1834 = load i8*, i8** %s, align 8
  %add.ptr3471 = getelementptr inbounds i8, i8* %1834, i64 1
  %1835 = load i8, i8* %add.ptr3471, align 1
  %conv3472 = sext i8 %1835 to i32
  %cmp3473 = icmp eq i32 %conv3472, 95
  br i1 %cmp3473, label %if.then.3484, label %if.else.3485

cond.false.3475:                                  ; preds = %lor.lhs.false.3445
  %1836 = load i8*, i8** %s, align 8
  %add.ptr3476 = getelementptr inbounds i8, i8* %1836, i64 1
  %call3477 = call signext i8 @Perl_is_utf8_idcont(i8* %add.ptr3476)
  %conv3478 = sext i8 %call3477 to i32
  %tobool3479 = icmp ne i32 %conv3478, 0
  br i1 %tobool3479, label %land.lhs.true.3480, label %if.else.3485

land.lhs.true.3480:                               ; preds = %cond.false.3475
  %1837 = load i8*, i8** %s, align 8
  %add.ptr3481 = getelementptr inbounds i8, i8* %1837, i64 1
  %call3482 = call signext i8 @Perl_is_utf8_digit(i8* %add.ptr3481)
  %tobool3483 = icmp ne i8 %call3482, 0
  br i1 %tobool3483, label %if.else.3485, label %if.then.3484

if.then.3484:                                     ; preds = %land.lhs.true.3480, %lor.lhs.false.3470, %land.lhs.true.3465, %land.lhs.true.3455
  store i32 1, i32* @PL_expect, align 4
  br label %if.end.3662

if.else.3485:                                     ; preds = %land.lhs.true.3480, %cond.false.3475, %lor.lhs.false.3470, %if.else.3422
  %1838 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private3486 = getelementptr inbounds %struct.cop, %struct.cop* %1838, i32 0, i32 7
  %1839 = load i8, i8* %op_private3486, align 1
  %conv3487 = zext i8 %1839 to i32
  %and3488 = and i32 %conv3487, 8
  %tobool3489 = icmp ne i32 %and3488, 0
  br i1 %tobool3489, label %cond.true.3508, label %lor.lhs.false.3490

lor.lhs.false.3490:                               ; preds = %if.else.3485
  %1840 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %tobool3491 = icmp ne %struct.sv* %1840, null
  br i1 %tobool3491, label %land.lhs.true.3492, label %lor.lhs.false.3501

land.lhs.true.3492:                               ; preds = %lor.lhs.false.3490
  %1841 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_flags3493 = getelementptr inbounds %struct.sv, %struct.sv* %1841, i32 0, i32 2
  %1842 = load i32, i32* %sv_flags3493, align 4
  %and3494 = and i32 %1842, 536870912
  %tobool3495 = icmp ne i32 %and3494, 0
  br i1 %tobool3495, label %land.lhs.true.3496, label %lor.lhs.false.3501

land.lhs.true.3496:                               ; preds = %land.lhs.true.3492
  %1843 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private3497 = getelementptr inbounds %struct.cop, %struct.cop* %1843, i32 0, i32 7
  %1844 = load i8, i8* %op_private3497, align 1
  %conv3498 = zext i8 %1844 to i32
  %and3499 = and i32 %conv3498, 8
  %tobool3500 = icmp ne i32 %and3499, 0
  br i1 %tobool3500, label %lor.lhs.false.3501, label %lor.lhs.false.3504

lor.lhs.false.3501:                               ; preds = %land.lhs.true.3496, %land.lhs.true.3492, %lor.lhs.false.3490
  %1845 = load i32, i32* @PL_hints, align 4
  %and3502 = and i32 %1845, 8388608
  %tobool3503 = icmp ne i32 %and3502, 0
  br i1 %tobool3503, label %lor.lhs.false.3504, label %cond.true.3508

lor.lhs.false.3504:                               ; preds = %lor.lhs.false.3501, %land.lhs.true.3496
  %1846 = load i8*, i8** %s, align 8
  %1847 = load i8, i8* %1846, align 1
  %conv3505 = zext i8 %1847 to i32
  %cmp3506 = icmp slt i32 %conv3505, 192
  br i1 %cmp3506, label %cond.true.3508, label %cond.false.3528

cond.true.3508:                                   ; preds = %lor.lhs.false.3504, %lor.lhs.false.3501, %if.else.3485
  %1848 = load i8*, i8** %s, align 8
  %1849 = load i8, i8* %1848, align 1
  %conv3509 = sext i8 %1849 to i32
  %cmp3510 = icmp sge i32 %conv3509, 65
  br i1 %cmp3510, label %land.lhs.true.3512, label %lor.lhs.false.3516

land.lhs.true.3512:                               ; preds = %cond.true.3508
  %1850 = load i8*, i8** %s, align 8
  %1851 = load i8, i8* %1850, align 1
  %conv3513 = sext i8 %1851 to i32
  %cmp3514 = icmp sle i32 %conv3513, 90
  br i1 %cmp3514, label %if.then.3535, label %lor.lhs.false.3516

lor.lhs.false.3516:                               ; preds = %land.lhs.true.3512, %cond.true.3508
  %1852 = load i8*, i8** %s, align 8
  %1853 = load i8, i8* %1852, align 1
  %conv3517 = sext i8 %1853 to i32
  %cmp3518 = icmp sge i32 %conv3517, 97
  br i1 %cmp3518, label %land.lhs.true.3520, label %lor.lhs.false.3524

land.lhs.true.3520:                               ; preds = %lor.lhs.false.3516
  %1854 = load i8*, i8** %s, align 8
  %1855 = load i8, i8* %1854, align 1
  %conv3521 = sext i8 %1855 to i32
  %cmp3522 = icmp sle i32 %conv3521, 122
  br i1 %cmp3522, label %if.then.3535, label %lor.lhs.false.3524

lor.lhs.false.3524:                               ; preds = %land.lhs.true.3520, %lor.lhs.false.3516
  %1856 = load i8*, i8** %s, align 8
  %1857 = load i8, i8* %1856, align 1
  %conv3525 = sext i8 %1857 to i32
  %cmp3526 = icmp eq i32 %conv3525, 95
  br i1 %cmp3526, label %if.then.3535, label %if.else.3550

cond.false.3528:                                  ; preds = %lor.lhs.false.3504
  %1858 = load i8*, i8** %s, align 8
  %call3529 = call signext i8 @Perl_is_utf8_idcont(i8* %1858)
  %conv3530 = sext i8 %call3529 to i32
  %tobool3531 = icmp ne i32 %conv3530, 0
  br i1 %tobool3531, label %land.lhs.true.3532, label %if.else.3550

land.lhs.true.3532:                               ; preds = %cond.false.3528
  %1859 = load i8*, i8** %s, align 8
  %call3533 = call signext i8 @Perl_is_utf8_digit(i8* %1859)
  %tobool3534 = icmp ne i8 %call3533, 0
  br i1 %tobool3534, label %if.else.3550, label %if.then.3535

if.then.3535:                                     ; preds = %land.lhs.true.3532, %lor.lhs.false.3524, %land.lhs.true.3520, %land.lhs.true.3512
  %1860 = load i8*, i8** %s, align 8
  %arraydecay3538 = getelementptr inbounds [256 x i8], [256 x i8]* %tmpbuf3537, i32 0, i32 0
  %call3539 = call i8* @S_scan_word(i8* %1860, i8* %arraydecay3538, i64 256, i32 1, i64* %len)
  %arraydecay3540 = getelementptr inbounds [256 x i8], [256 x i8]* %tmpbuf3537, i32 0, i32 0
  %1861 = load i64, i64* %len, align 8
  %conv3541 = trunc i64 %1861 to i32
  %call3542 = call i32 @Perl_keyword(i8* %arraydecay3540, i32 %conv3541)
  store i32 %call3542, i32* %tmp, align 4
  %tobool3543 = icmp ne i32 %call3542, 0
  br i1 %tobool3543, label %if.then.3544, label %if.else.3548

if.then.3544:                                     ; preds = %if.then.3535
  %1862 = load i32, i32* %tmp, align 4
  switch i32 %1862, label %sw.default.3546 [
    i32 -243, label %sw.bb.3545
    i32 -53, label %sw.bb.3545
    i32 -128, label %sw.bb.3545
    i32 -98, label %sw.bb.3545
    i32 -119, label %sw.bb.3545
    i32 -67, label %sw.bb.3545
    i32 -110, label %sw.bb.3545
    i32 -31, label %sw.bb.3545
  ]

sw.bb.3545:                                       ; preds = %if.then.3544, %if.then.3544, %if.then.3544, %if.then.3544, %if.then.3544, %if.then.3544, %if.then.3544, %if.then.3544
  br label %sw.epilog.3547

sw.default.3546:                                  ; preds = %if.then.3544
  store i32 1, i32* @PL_expect, align 4
  br label %sw.epilog.3547

sw.epilog.3547:                                   ; preds = %sw.default.3546, %sw.bb.3545
  br label %if.end.3549

if.else.3548:                                     ; preds = %if.then.3535
  store i32 1, i32* @PL_expect, align 4
  br label %if.end.3549

if.end.3549:                                      ; preds = %if.else.3548, %sw.epilog.3547
  br label %if.end.3661

if.else.3550:                                     ; preds = %land.lhs.true.3532, %cond.false.3528, %lor.lhs.false.3524
  %1863 = load i8*, i8** %s, align 8
  %1864 = load i8, i8* %1863, align 1
  %conv3551 = sext i8 %1864 to i32
  %cmp3552 = icmp sge i32 %conv3551, 48
  br i1 %cmp3552, label %land.lhs.true.3554, label %if.else.3559

land.lhs.true.3554:                               ; preds = %if.else.3550
  %1865 = load i8*, i8** %s, align 8
  %1866 = load i8, i8* %1865, align 1
  %conv3555 = sext i8 %1866 to i32
  %cmp3556 = icmp sle i32 %conv3555, 57
  br i1 %cmp3556, label %if.then.3558, label %if.else.3559

if.then.3558:                                     ; preds = %land.lhs.true.3554
  store i32 1, i32* @PL_expect, align 4
  br label %if.end.3660

if.else.3559:                                     ; preds = %land.lhs.true.3554, %if.else.3550
  %1867 = load i8*, i8** %s, align 8
  %1868 = load i8, i8* %1867, align 1
  %conv3560 = sext i8 %1868 to i32
  %cmp3561 = icmp eq i32 %conv3560, 46
  br i1 %cmp3561, label %land.lhs.true.3563, label %if.else.3574

land.lhs.true.3563:                               ; preds = %if.else.3559
  %1869 = load i8*, i8** %s, align 8
  %arrayidx3564 = getelementptr inbounds i8, i8* %1869, i64 1
  %1870 = load i8, i8* %arrayidx3564, align 1
  %conv3565 = sext i8 %1870 to i32
  %cmp3566 = icmp sge i32 %conv3565, 48
  br i1 %cmp3566, label %land.lhs.true.3568, label %if.else.3574

land.lhs.true.3568:                               ; preds = %land.lhs.true.3563
  %1871 = load i8*, i8** %s, align 8
  %arrayidx3569 = getelementptr inbounds i8, i8* %1871, i64 1
  %1872 = load i8, i8* %arrayidx3569, align 1
  %conv3570 = sext i8 %1872 to i32
  %cmp3571 = icmp sle i32 %conv3570, 57
  br i1 %cmp3571, label %if.then.3573, label %if.else.3574

if.then.3573:                                     ; preds = %land.lhs.true.3568
  store i32 1, i32* @PL_expect, align 4
  br label %if.end.3659

if.else.3574:                                     ; preds = %land.lhs.true.3568, %land.lhs.true.3563, %if.else.3559
  %1873 = load i8*, i8** %s, align 8
  %1874 = load i8, i8* %1873, align 1
  %conv3575 = sext i8 %1874 to i32
  %cmp3576 = icmp eq i32 %conv3575, 63
  br i1 %cmp3576, label %land.lhs.true.3586, label %lor.lhs.false.3578

lor.lhs.false.3578:                               ; preds = %if.else.3574
  %1875 = load i8*, i8** %s, align 8
  %1876 = load i8, i8* %1875, align 1
  %conv3579 = sext i8 %1876 to i32
  %cmp3580 = icmp eq i32 %conv3579, 45
  br i1 %cmp3580, label %land.lhs.true.3586, label %lor.lhs.false.3582

lor.lhs.false.3582:                               ; preds = %lor.lhs.false.3578
  %1877 = load i8*, i8** %s, align 8
  %1878 = load i8, i8* %1877, align 1
  %conv3583 = sext i8 %1878 to i32
  %cmp3584 = icmp eq i32 %conv3583, 43
  br i1 %cmp3584, label %land.lhs.true.3586, label %if.else.3617

land.lhs.true.3586:                               ; preds = %lor.lhs.false.3582, %lor.lhs.false.3578, %if.else.3574
  %1879 = load i8*, i8** %s, align 8
  %arrayidx3587 = getelementptr inbounds i8, i8* %1879, i64 1
  %1880 = load i8, i8* %arrayidx3587, align 1
  %conv3588 = sext i8 %1880 to i32
  %cmp3589 = icmp eq i32 %conv3588, 32
  br i1 %cmp3589, label %if.else.3617, label %lor.lhs.false.3591

lor.lhs.false.3591:                               ; preds = %land.lhs.true.3586
  %1881 = load i8*, i8** %s, align 8
  %arrayidx3592 = getelementptr inbounds i8, i8* %1881, i64 1
  %1882 = load i8, i8* %arrayidx3592, align 1
  %conv3593 = sext i8 %1882 to i32
  %cmp3594 = icmp eq i32 %conv3593, 9
  br i1 %cmp3594, label %if.else.3617, label %lor.lhs.false.3596

lor.lhs.false.3596:                               ; preds = %lor.lhs.false.3591
  %1883 = load i8*, i8** %s, align 8
  %arrayidx3597 = getelementptr inbounds i8, i8* %1883, i64 1
  %1884 = load i8, i8* %arrayidx3597, align 1
  %conv3598 = sext i8 %1884 to i32
  %cmp3599 = icmp eq i32 %conv3598, 10
  br i1 %cmp3599, label %if.else.3617, label %lor.lhs.false.3601

lor.lhs.false.3601:                               ; preds = %lor.lhs.false.3596
  %1885 = load i8*, i8** %s, align 8
  %arrayidx3602 = getelementptr inbounds i8, i8* %1885, i64 1
  %1886 = load i8, i8* %arrayidx3602, align 1
  %conv3603 = sext i8 %1886 to i32
  %cmp3604 = icmp eq i32 %conv3603, 13
  br i1 %cmp3604, label %if.else.3617, label %lor.lhs.false.3606

lor.lhs.false.3606:                               ; preds = %lor.lhs.false.3601
  %1887 = load i8*, i8** %s, align 8
  %arrayidx3607 = getelementptr inbounds i8, i8* %1887, i64 1
  %1888 = load i8, i8* %arrayidx3607, align 1
  %conv3608 = sext i8 %1888 to i32
  %cmp3609 = icmp eq i32 %conv3608, 12
  br i1 %cmp3609, label %if.else.3617, label %land.lhs.true.3611

land.lhs.true.3611:                               ; preds = %lor.lhs.false.3606
  %1889 = load i8*, i8** %s, align 8
  %arrayidx3612 = getelementptr inbounds i8, i8* %1889, i64 1
  %1890 = load i8, i8* %arrayidx3612, align 1
  %conv3613 = sext i8 %1890 to i32
  %cmp3614 = icmp ne i32 %conv3613, 61
  br i1 %cmp3614, label %if.then.3616, label %if.else.3617

if.then.3616:                                     ; preds = %land.lhs.true.3611
  store i32 1, i32* @PL_expect, align 4
  br label %if.end.3658

if.else.3617:                                     ; preds = %land.lhs.true.3611, %lor.lhs.false.3606, %lor.lhs.false.3601, %lor.lhs.false.3596, %lor.lhs.false.3591, %land.lhs.true.3586, %lor.lhs.false.3582
  %1891 = load i8*, i8** %s, align 8
  %1892 = load i8, i8* %1891, align 1
  %conv3618 = sext i8 %1892 to i32
  %cmp3619 = icmp eq i32 %conv3618, 60
  br i1 %cmp3619, label %land.lhs.true.3621, label %if.end.3657

land.lhs.true.3621:                               ; preds = %if.else.3617
  %1893 = load i8*, i8** %s, align 8
  %arrayidx3622 = getelementptr inbounds i8, i8* %1893, i64 1
  %1894 = load i8, i8* %arrayidx3622, align 1
  %conv3623 = sext i8 %1894 to i32
  %cmp3624 = icmp eq i32 %conv3623, 60
  br i1 %cmp3624, label %land.lhs.true.3626, label %if.end.3657

land.lhs.true.3626:                               ; preds = %land.lhs.true.3621
  %1895 = load i8*, i8** %s, align 8
  %arrayidx3627 = getelementptr inbounds i8, i8* %1895, i64 2
  %1896 = load i8, i8* %arrayidx3627, align 1
  %conv3628 = sext i8 %1896 to i32
  %cmp3629 = icmp eq i32 %conv3628, 32
  br i1 %cmp3629, label %if.end.3657, label %lor.lhs.false.3631

lor.lhs.false.3631:                               ; preds = %land.lhs.true.3626
  %1897 = load i8*, i8** %s, align 8
  %arrayidx3632 = getelementptr inbounds i8, i8* %1897, i64 2
  %1898 = load i8, i8* %arrayidx3632, align 1
  %conv3633 = sext i8 %1898 to i32
  %cmp3634 = icmp eq i32 %conv3633, 9
  br i1 %cmp3634, label %if.end.3657, label %lor.lhs.false.3636

lor.lhs.false.3636:                               ; preds = %lor.lhs.false.3631
  %1899 = load i8*, i8** %s, align 8
  %arrayidx3637 = getelementptr inbounds i8, i8* %1899, i64 2
  %1900 = load i8, i8* %arrayidx3637, align 1
  %conv3638 = sext i8 %1900 to i32
  %cmp3639 = icmp eq i32 %conv3638, 10
  br i1 %cmp3639, label %if.end.3657, label %lor.lhs.false.3641

lor.lhs.false.3641:                               ; preds = %lor.lhs.false.3636
  %1901 = load i8*, i8** %s, align 8
  %arrayidx3642 = getelementptr inbounds i8, i8* %1901, i64 2
  %1902 = load i8, i8* %arrayidx3642, align 1
  %conv3643 = sext i8 %1902 to i32
  %cmp3644 = icmp eq i32 %conv3643, 13
  br i1 %cmp3644, label %if.end.3657, label %lor.lhs.false.3646

lor.lhs.false.3646:                               ; preds = %lor.lhs.false.3641
  %1903 = load i8*, i8** %s, align 8
  %arrayidx3647 = getelementptr inbounds i8, i8* %1903, i64 2
  %1904 = load i8, i8* %arrayidx3647, align 1
  %conv3648 = sext i8 %1904 to i32
  %cmp3649 = icmp eq i32 %conv3648, 12
  br i1 %cmp3649, label %if.end.3657, label %land.lhs.true.3651

land.lhs.true.3651:                               ; preds = %lor.lhs.false.3646
  %1905 = load i8*, i8** %s, align 8
  %arrayidx3652 = getelementptr inbounds i8, i8* %1905, i64 2
  %1906 = load i8, i8* %arrayidx3652, align 1
  %conv3653 = sext i8 %1906 to i32
  %cmp3654 = icmp ne i32 %conv3653, 61
  br i1 %cmp3654, label %if.then.3656, label %if.end.3657

if.then.3656:                                     ; preds = %land.lhs.true.3651
  store i32 1, i32* @PL_expect, align 4
  br label %if.end.3657

if.end.3657:                                      ; preds = %if.then.3656, %land.lhs.true.3651, %lor.lhs.false.3646, %lor.lhs.false.3641, %lor.lhs.false.3636, %lor.lhs.false.3631, %land.lhs.true.3626, %land.lhs.true.3621, %if.else.3617
  br label %if.end.3658

if.end.3658:                                      ; preds = %if.end.3657, %if.then.3616
  br label %if.end.3659

if.end.3659:                                      ; preds = %if.end.3658, %if.then.3573
  br label %if.end.3660

if.end.3660:                                      ; preds = %if.end.3659, %if.then.3558
  br label %if.end.3661

if.end.3661:                                      ; preds = %if.end.3660, %if.end.3549
  br label %if.end.3662

if.end.3662:                                      ; preds = %if.end.3661, %if.then.3484
  br label %if.end.3663

if.end.3663:                                      ; preds = %if.end.3662, %if.then.3421
  br label %if.end.3664

if.end.3664:                                      ; preds = %if.end.3663, %if.then.3416
  br label %if.end.3665

if.end.3665:                                      ; preds = %if.end.3664, %lor.lhs.false.3401, %if.end.3378
  store i8 36, i8* @PL_pending_ident, align 1
  %1907 = load i8*, i8** %s, align 8
  store i8* %1907, i8** @PL_bufptr, align 8
  store i32 36, i32* %retval
  br label %return

sw.bb.3666:                                       ; preds = %retry
  %1908 = load i32, i32* @PL_expect, align 4
  %cmp3667 = icmp eq i32 %1908, 0
  br i1 %cmp3667, label %if.then.3669, label %if.end.3670

if.then.3669:                                     ; preds = %sw.bb.3666
  %1909 = load i8*, i8** %s, align 8
  call void @S_no_op(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.57, i32 0, i32 0), i8* %1909)
  br label %if.end.3670

if.end.3670:                                      ; preds = %if.then.3669, %sw.bb.3666
  store i8 64, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i64 0), align 1
  %1910 = load i8*, i8** %s, align 8
  %1911 = load i8*, i8** @PL_bufend, align 8
  %call3671 = call i8* @S_scan_ident(i8* %1910, i8* %1911, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i64 1), i64 255, i32 0)
  store i8* %call3671, i8** %s, align 8
  %1912 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i64 1), align 1
  %tobool3672 = icmp ne i8 %1912, 0
  br i1 %tobool3672, label %if.end.3674, label %if.then.3673

if.then.3673:                                     ; preds = %if.end.3670
  store i32 2, i32* @PL_expect, align 4
  %1913 = load i8*, i8** %s, align 8
  store i8* %1913, i8** @PL_bufptr, align 8
  store i32 64, i32* %retval
  br label %return

if.end.3674:                                      ; preds = %if.end.3670
  %1914 = load i32, i32* @PL_lex_state, align 4
  %cmp3675 = icmp eq i32 %1914, 10
  br i1 %cmp3675, label %if.then.3677, label %if.end.3679

if.then.3677:                                     ; preds = %if.end.3674
  %1915 = load i8*, i8** %s, align 8
  %call3678 = call i8* @S_skipspace(i8* %1915)
  store i8* %call3678, i8** %s, align 8
  br label %if.end.3679

if.end.3679:                                      ; preds = %if.then.3677, %if.end.3674
  %1916 = load i32, i32* @PL_expect, align 4
  %cmp3680 = icmp ne i32 %1916, 2
  br i1 %cmp3680, label %land.lhs.true.3685, label %lor.lhs.false.3682

lor.lhs.false.3682:                               ; preds = %if.end.3679
  %1917 = load i8*, i8** @PL_oldoldbufptr, align 8
  %1918 = load i8*, i8** @PL_last_lop, align 8
  %cmp3683 = icmp eq i8* %1917, %1918
  br i1 %cmp3683, label %land.lhs.true.3685, label %if.end.3823

land.lhs.true.3685:                               ; preds = %lor.lhs.false.3682, %if.end.3679
  %1919 = load i8*, i8** %s, align 8
  %call3686 = call i32 @S_intuit_more(i8* %1919)
  %tobool3687 = icmp ne i32 %call3686, 0
  br i1 %tobool3687, label %if.then.3688, label %if.end.3823

if.then.3688:                                     ; preds = %land.lhs.true.3685
  %1920 = load i8*, i8** %s, align 8
  %1921 = load i8, i8* %1920, align 1
  %conv3689 = sext i8 %1921 to i32
  %cmp3690 = icmp eq i32 %conv3689, 123
  br i1 %cmp3690, label %if.then.3692, label %if.end.3693

if.then.3692:                                     ; preds = %if.then.3688
  store i8 37, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i64 0), align 1
  br label %if.end.3693

if.end.3693:                                      ; preds = %if.then.3692, %if.then.3688
  %1922 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings3694 = getelementptr inbounds %struct.cop, %struct.cop* %1922, i32 0, i32 14
  %1923 = load %struct.sv*, %struct.sv** %cop_warnings3694, align 8
  %cmp3695 = icmp ne %struct.sv* %1923, null
  br i1 %cmp3695, label %land.lhs.true.3697, label %lor.lhs.false.3713

land.lhs.true.3697:                               ; preds = %if.end.3693
  %1924 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings3698 = getelementptr inbounds %struct.cop, %struct.cop* %1924, i32 0, i32 14
  %1925 = load %struct.sv*, %struct.sv** %cop_warnings3698, align 8
  %cmp3699 = icmp ne %struct.sv* %1925, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 2)
  br i1 %cmp3699, label %land.lhs.true.3701, label %lor.lhs.false.3713

land.lhs.true.3701:                               ; preds = %land.lhs.true.3697
  %1926 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings3702 = getelementptr inbounds %struct.cop, %struct.cop* %1926, i32 0, i32 14
  %1927 = load %struct.sv*, %struct.sv** %cop_warnings3702, align 8
  %cmp3703 = icmp eq %struct.sv* %1927, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 1)
  br i1 %cmp3703, label %if.then.3721, label %lor.lhs.false.3705

lor.lhs.false.3705:                               ; preds = %land.lhs.true.3701
  %1928 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings3706 = getelementptr inbounds %struct.cop, %struct.cop* %1928, i32 0, i32 14
  %1929 = load %struct.sv*, %struct.sv** %cop_warnings3706, align 8
  %sv_any3707 = getelementptr inbounds %struct.sv, %struct.sv* %1929, i32 0, i32 0
  %1930 = load i8*, i8** %sv_any3707, align 8
  %1931 = bitcast i8* %1930 to %struct.xpv*
  %xpv_pv3708 = getelementptr inbounds %struct.xpv, %struct.xpv* %1931, i32 0, i32 0
  %1932 = load i8*, i8** %xpv_pv3708, align 8
  %arrayidx3709 = getelementptr inbounds i8, i8* %1932, i64 7
  %1933 = load i8, i8* %arrayidx3709, align 1
  %conv3710 = sext i8 %1933 to i32
  %and3711 = and i32 %conv3710, 1
  %tobool3712 = icmp ne i32 %and3711, 0
  br i1 %tobool3712, label %if.then.3721, label %lor.lhs.false.3713

lor.lhs.false.3713:                               ; preds = %lor.lhs.false.3705, %land.lhs.true.3697, %if.end.3693
  %1934 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings3714 = getelementptr inbounds %struct.cop, %struct.cop* %1934, i32 0, i32 14
  %1935 = load %struct.sv*, %struct.sv** %cop_warnings3714, align 8
  %cmp3715 = icmp eq %struct.sv* %1935, null
  br i1 %cmp3715, label %land.lhs.true.3717, label %if.end.3822

land.lhs.true.3717:                               ; preds = %lor.lhs.false.3713
  %1936 = load i8, i8* @PL_dowarn, align 1
  %conv3718 = zext i8 %1936 to i32
  %and3719 = and i32 %conv3718, 1
  %tobool3720 = icmp ne i32 %and3719, 0
  br i1 %tobool3720, label %if.then.3721, label %if.end.3822

if.then.3721:                                     ; preds = %land.lhs.true.3717, %lor.lhs.false.3705, %land.lhs.true.3701
  %1937 = load i8*, i8** %s, align 8
  %1938 = load i8, i8* %1937, align 1
  %conv3722 = sext i8 %1938 to i32
  %cmp3723 = icmp eq i32 %conv3722, 91
  br i1 %cmp3723, label %if.then.3729, label %lor.lhs.false.3725

lor.lhs.false.3725:                               ; preds = %if.then.3721
  %1939 = load i8*, i8** %s, align 8
  %1940 = load i8, i8* %1939, align 1
  %conv3726 = sext i8 %1940 to i32
  %cmp3727 = icmp eq i32 %conv3726, 123
  br i1 %cmp3727, label %if.then.3729, label %if.end.3821

if.then.3729:                                     ; preds = %lor.lhs.false.3725, %if.then.3721
  %1941 = load i8*, i8** %s, align 8
  %add.ptr3732 = getelementptr inbounds i8, i8* %1941, i64 1
  store i8* %add.ptr3732, i8** %t3731, align 8
  br label %while.cond.3733

while.cond.3733:                                  ; preds = %while.body.3799, %if.then.3729
  %1942 = load i8*, i8** %t3731, align 8
  %1943 = load i8, i8* %1942, align 1
  %conv3734 = sext i8 %1943 to i32
  %tobool3735 = icmp ne i32 %conv3734, 0
  br i1 %tobool3735, label %land.rhs.3736, label %land.end.3797

land.rhs.3736:                                    ; preds = %while.cond.3733
  %1944 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private3737 = getelementptr inbounds %struct.cop, %struct.cop* %1944, i32 0, i32 7
  %1945 = load i8, i8* %op_private3737, align 1
  %conv3738 = zext i8 %1945 to i32
  %and3739 = and i32 %conv3738, 8
  %tobool3740 = icmp ne i32 %and3739, 0
  br i1 %tobool3740, label %cond.true.3759, label %lor.lhs.false.3741

lor.lhs.false.3741:                               ; preds = %land.rhs.3736
  %1946 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %tobool3742 = icmp ne %struct.sv* %1946, null
  br i1 %tobool3742, label %land.lhs.true.3743, label %lor.lhs.false.3752

land.lhs.true.3743:                               ; preds = %lor.lhs.false.3741
  %1947 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_flags3744 = getelementptr inbounds %struct.sv, %struct.sv* %1947, i32 0, i32 2
  %1948 = load i32, i32* %sv_flags3744, align 4
  %and3745 = and i32 %1948, 536870912
  %tobool3746 = icmp ne i32 %and3745, 0
  br i1 %tobool3746, label %land.lhs.true.3747, label %lor.lhs.false.3752

land.lhs.true.3747:                               ; preds = %land.lhs.true.3743
  %1949 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private3748 = getelementptr inbounds %struct.cop, %struct.cop* %1949, i32 0, i32 7
  %1950 = load i8, i8* %op_private3748, align 1
  %conv3749 = zext i8 %1950 to i32
  %and3750 = and i32 %conv3749, 8
  %tobool3751 = icmp ne i32 %and3750, 0
  br i1 %tobool3751, label %lor.lhs.false.3752, label %lor.lhs.false.3755

lor.lhs.false.3752:                               ; preds = %land.lhs.true.3747, %land.lhs.true.3743, %lor.lhs.false.3741
  %1951 = load i32, i32* @PL_hints, align 4
  %and3753 = and i32 %1951, 8388608
  %tobool3754 = icmp ne i32 %and3753, 0
  br i1 %tobool3754, label %lor.lhs.false.3755, label %cond.true.3759

lor.lhs.false.3755:                               ; preds = %lor.lhs.false.3752, %land.lhs.true.3747
  %1952 = load i8*, i8** %t3731, align 8
  %1953 = load i8, i8* %1952, align 1
  %conv3756 = zext i8 %1953 to i32
  %cmp3757 = icmp slt i32 %conv3756, 192
  br i1 %cmp3757, label %cond.true.3759, label %cond.false.3787

cond.true.3759:                                   ; preds = %lor.lhs.false.3755, %lor.lhs.false.3752, %land.rhs.3736
  %1954 = load i8*, i8** %t3731, align 8
  %1955 = load i8, i8* %1954, align 1
  %conv3760 = sext i8 %1955 to i32
  %cmp3761 = icmp sge i32 %conv3760, 65
  br i1 %cmp3761, label %land.lhs.true.3763, label %lor.lhs.false.3767

land.lhs.true.3763:                               ; preds = %cond.true.3759
  %1956 = load i8*, i8** %t3731, align 8
  %1957 = load i8, i8* %1956, align 1
  %conv3764 = sext i8 %1957 to i32
  %cmp3765 = icmp sle i32 %conv3764, 90
  br i1 %cmp3765, label %lor.end.3795, label %lor.lhs.false.3767

lor.lhs.false.3767:                               ; preds = %land.lhs.true.3763, %cond.true.3759
  %1958 = load i8*, i8** %t3731, align 8
  %1959 = load i8, i8* %1958, align 1
  %conv3768 = sext i8 %1959 to i32
  %cmp3769 = icmp sge i32 %conv3768, 97
  br i1 %cmp3769, label %land.lhs.true.3771, label %lor.lhs.false.3775

land.lhs.true.3771:                               ; preds = %lor.lhs.false.3767
  %1960 = load i8*, i8** %t3731, align 8
  %1961 = load i8, i8* %1960, align 1
  %conv3772 = sext i8 %1961 to i32
  %cmp3773 = icmp sle i32 %conv3772, 122
  br i1 %cmp3773, label %lor.end.3795, label %lor.lhs.false.3775

lor.lhs.false.3775:                               ; preds = %land.lhs.true.3771, %lor.lhs.false.3767
  %1962 = load i8*, i8** %t3731, align 8
  %1963 = load i8, i8* %1962, align 1
  %conv3776 = sext i8 %1963 to i32
  %cmp3777 = icmp sge i32 %conv3776, 48
  br i1 %cmp3777, label %land.lhs.true.3779, label %lor.lhs.false.3783

land.lhs.true.3779:                               ; preds = %lor.lhs.false.3775
  %1964 = load i8*, i8** %t3731, align 8
  %1965 = load i8, i8* %1964, align 1
  %conv3780 = sext i8 %1965 to i32
  %cmp3781 = icmp sle i32 %conv3780, 57
  br i1 %cmp3781, label %lor.end.3795, label %lor.lhs.false.3783

lor.lhs.false.3783:                               ; preds = %land.lhs.true.3779, %lor.lhs.false.3775
  %1966 = load i8*, i8** %t3731, align 8
  %1967 = load i8, i8* %1966, align 1
  %conv3784 = sext i8 %1967 to i32
  %cmp3785 = icmp eq i32 %conv3784, 95
  br i1 %cmp3785, label %lor.end.3795, label %lor.rhs.3791

cond.false.3787:                                  ; preds = %lor.lhs.false.3755
  %1968 = load i8*, i8** %t3731, align 8
  %call3788 = call signext i8 @Perl_is_utf8_alnum(i8* %1968)
  %conv3789 = sext i8 %call3788 to i32
  %tobool3790 = icmp ne i32 %conv3789, 0
  br i1 %tobool3790, label %lor.end.3795, label %lor.rhs.3791

lor.rhs.3791:                                     ; preds = %cond.false.3787, %lor.lhs.false.3783
  %1969 = load i8*, i8** %t3731, align 8
  %1970 = load i8, i8* %1969, align 1
  %conv3792 = sext i8 %1970 to i32
  %call3793 = call i8* @strchr(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.58, i32 0, i32 0), i32 %conv3792)
  %tobool3794 = icmp ne i8* %call3793, null
  br label %lor.end.3795

lor.end.3795:                                     ; preds = %lor.rhs.3791, %cond.false.3787, %lor.lhs.false.3783, %land.lhs.true.3779, %land.lhs.true.3771, %land.lhs.true.3763
  %1971 = phi i1 [ true, %cond.false.3787 ], [ true, %lor.lhs.false.3783 ], [ true, %land.lhs.true.3779 ], [ true, %land.lhs.true.3771 ], [ true, %land.lhs.true.3763 ], [ %tobool3794, %lor.rhs.3791 ]
  br label %land.end.3797

land.end.3797:                                    ; preds = %lor.end.3795, %while.cond.3733
  %1972 = phi i1 [ false, %while.cond.3733 ], [ %1971, %lor.end.3795 ]
  br i1 %1972, label %while.body.3799, label %while.end.3801

while.body.3799:                                  ; preds = %land.end.3797
  %1973 = load i8*, i8** %t3731, align 8
  %incdec.ptr3800 = getelementptr inbounds i8, i8* %1973, i32 1
  store i8* %incdec.ptr3800, i8** %t3731, align 8
  br label %while.cond.3733

while.end.3801:                                   ; preds = %land.end.3797
  %1974 = load i8*, i8** %t3731, align 8
  %1975 = load i8, i8* %1974, align 1
  %conv3802 = sext i8 %1975 to i32
  %cmp3803 = icmp eq i32 %conv3802, 125
  br i1 %cmp3803, label %if.then.3809, label %lor.lhs.false.3805

lor.lhs.false.3805:                               ; preds = %while.end.3801
  %1976 = load i8*, i8** %t3731, align 8
  %1977 = load i8, i8* %1976, align 1
  %conv3806 = sext i8 %1977 to i32
  %cmp3807 = icmp eq i32 %conv3806, 93
  br i1 %cmp3807, label %if.then.3809, label %if.end.3820

if.then.3809:                                     ; preds = %lor.lhs.false.3805, %while.end.3801
  %1978 = load i8*, i8** %t3731, align 8
  %incdec.ptr3810 = getelementptr inbounds i8, i8* %1978, i32 1
  store i8* %incdec.ptr3810, i8** %t3731, align 8
  %1979 = load i8*, i8** @PL_bufptr, align 8
  %call3811 = call i8* @S_skipspace(i8* %1979)
  store i8* %call3811, i8** @PL_bufptr, align 8
  %1980 = load i8*, i8** %t3731, align 8
  %1981 = load i8*, i8** @PL_bufptr, align 8
  %sub.ptr.lhs.cast3812 = ptrtoint i8* %1980 to i64
  %sub.ptr.rhs.cast3813 = ptrtoint i8* %1981 to i64
  %sub.ptr.sub3814 = sub i64 %sub.ptr.lhs.cast3812, %sub.ptr.rhs.cast3813
  %1982 = load i8*, i8** @PL_bufptr, align 8
  %1983 = load i8*, i8** %t3731, align 8
  %1984 = load i8*, i8** @PL_bufptr, align 8
  %sub.ptr.lhs.cast3815 = ptrtoint i8* %1983 to i64
  %sub.ptr.rhs.cast3816 = ptrtoint i8* %1984 to i64
  %sub.ptr.sub3817 = sub i64 %sub.ptr.lhs.cast3815, %sub.ptr.rhs.cast3816
  %sub3818 = sub nsw i64 %sub.ptr.sub3817, 1
  %1985 = load i8*, i8** @PL_bufptr, align 8
  %add.ptr3819 = getelementptr inbounds i8, i8* %1985, i64 1
  call void (i32, i8*, ...) @Perl_warner(i32 28, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.59, i32 0, i32 0), i64 %sub.ptr.sub3814, i8* %1982, i64 %sub3818, i8* %add.ptr3819)
  br label %if.end.3820

if.end.3820:                                      ; preds = %if.then.3809, %lor.lhs.false.3805
  br label %if.end.3821

if.end.3821:                                      ; preds = %if.end.3820, %lor.lhs.false.3725
  br label %if.end.3822

if.end.3822:                                      ; preds = %if.end.3821, %land.lhs.true.3717, %lor.lhs.false.3713
  br label %if.end.3823

if.end.3823:                                      ; preds = %if.end.3822, %land.lhs.true.3685, %lor.lhs.false.3682
  store i8 64, i8* @PL_pending_ident, align 1
  %1986 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line3824 = getelementptr inbounds %struct.cop, %struct.cop* %1986, i32 0, i32 13
  %1987 = load i32, i32* %cop_line3824, align 4
  %1988 = load i32, i32* @PL_copline, align 4
  %cmp3825 = icmp ult i32 %1987, %1988
  br i1 %cmp3825, label %cond.true.3827, label %cond.false.3829

cond.true.3827:                                   ; preds = %if.end.3823
  %1989 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line3828 = getelementptr inbounds %struct.cop, %struct.cop* %1989, i32 0, i32 13
  %1990 = load i32, i32* %cop_line3828, align 4
  br label %cond.end.3830

cond.false.3829:                                  ; preds = %if.end.3823
  %1991 = load i32, i32* @PL_copline, align 4
  br label %cond.end.3830

cond.end.3830:                                    ; preds = %cond.false.3829, %cond.true.3827
  %cond3831 = phi i32 [ %1990, %cond.true.3827 ], [ %1991, %cond.false.3829 ]
  store i32 %cond3831, i32* @PL_copline, align 4
  store i32 0, i32* @PL_expect, align 4
  %1992 = load i8*, i8** %s, align 8
  store i8* %1992, i8** @PL_bufptr, align 8
  store i32 64, i32* %retval
  br label %return

sw.bb.3832:                                       ; preds = %retry, %retry
  %1993 = load i32, i32* @PL_expect, align 4
  %cmp3833 = icmp ne i32 %1993, 0
  br i1 %cmp3833, label %if.then.3835, label %if.end.3927

if.then.3835:                                     ; preds = %sw.bb.3832
  %1994 = load i8*, i8** @PL_oldoldbufptr, align 8
  %1995 = load i8*, i8** @PL_last_uni, align 8
  %cmp3836 = icmp eq i8* %1994, %1995
  br i1 %cmp3836, label %land.lhs.true.3838, label %if.end.3916

land.lhs.true.3838:                               ; preds = %if.then.3835
  %1996 = load i8*, i8** @PL_last_uni, align 8
  %1997 = load i8, i8* %1996, align 1
  %conv3839 = sext i8 %1997 to i32
  %cmp3840 = icmp ne i32 %conv3839, 115
  br i1 %cmp3840, label %if.then.3915, label %lor.lhs.false.3842

lor.lhs.false.3842:                               ; preds = %land.lhs.true.3838
  %1998 = load i8*, i8** %s, align 8
  %1999 = load i8*, i8** @PL_last_uni, align 8
  %sub.ptr.lhs.cast3843 = ptrtoint i8* %1998 to i64
  %sub.ptr.rhs.cast3844 = ptrtoint i8* %1999 to i64
  %sub.ptr.sub3845 = sub i64 %sub.ptr.lhs.cast3843, %sub.ptr.rhs.cast3844
  %cmp3846 = icmp slt i64 %sub.ptr.sub3845, 5
  br i1 %cmp3846, label %if.then.3915, label %lor.lhs.false.3848

lor.lhs.false.3848:                               ; preds = %lor.lhs.false.3842
  %2000 = load i8*, i8** @PL_last_uni, align 8
  %call3849 = call i32 @memcmp(i8* %2000, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.60, i32 0, i32 0), i64 5)
  %tobool3850 = icmp ne i32 %call3849, 0
  br i1 %tobool3850, label %if.then.3915, label %lor.lhs.false.3851

lor.lhs.false.3851:                               ; preds = %lor.lhs.false.3848
  %2001 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private3852 = getelementptr inbounds %struct.cop, %struct.cop* %2001, i32 0, i32 7
  %2002 = load i8, i8* %op_private3852, align 1
  %conv3853 = zext i8 %2002 to i32
  %and3854 = and i32 %conv3853, 8
  %tobool3855 = icmp ne i32 %and3854, 0
  br i1 %tobool3855, label %cond.true.3875, label %lor.lhs.false.3856

lor.lhs.false.3856:                               ; preds = %lor.lhs.false.3851
  %2003 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %tobool3857 = icmp ne %struct.sv* %2003, null
  br i1 %tobool3857, label %land.lhs.true.3858, label %lor.lhs.false.3867

land.lhs.true.3858:                               ; preds = %lor.lhs.false.3856
  %2004 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_flags3859 = getelementptr inbounds %struct.sv, %struct.sv* %2004, i32 0, i32 2
  %2005 = load i32, i32* %sv_flags3859, align 4
  %and3860 = and i32 %2005, 536870912
  %tobool3861 = icmp ne i32 %and3860, 0
  br i1 %tobool3861, label %land.lhs.true.3862, label %lor.lhs.false.3867

land.lhs.true.3862:                               ; preds = %land.lhs.true.3858
  %2006 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private3863 = getelementptr inbounds %struct.cop, %struct.cop* %2006, i32 0, i32 7
  %2007 = load i8, i8* %op_private3863, align 1
  %conv3864 = zext i8 %2007 to i32
  %and3865 = and i32 %conv3864, 8
  %tobool3866 = icmp ne i32 %and3865, 0
  br i1 %tobool3866, label %lor.lhs.false.3867, label %lor.lhs.false.3870

lor.lhs.false.3867:                               ; preds = %land.lhs.true.3862, %land.lhs.true.3858, %lor.lhs.false.3856
  %2008 = load i32, i32* @PL_hints, align 4
  %and3868 = and i32 %2008, 8388608
  %tobool3869 = icmp ne i32 %and3868, 0
  br i1 %tobool3869, label %lor.lhs.false.3870, label %cond.true.3875

lor.lhs.false.3870:                               ; preds = %lor.lhs.false.3867, %land.lhs.true.3862
  %2009 = load i8*, i8** @PL_last_uni, align 8
  %add.ptr3871 = getelementptr inbounds i8, i8* %2009, i64 5
  %2010 = load i8, i8* %add.ptr3871, align 1
  %conv3872 = zext i8 %2010 to i32
  %cmp3873 = icmp slt i32 %conv3872, 192
  br i1 %cmp3873, label %cond.true.3875, label %cond.false.3910

cond.true.3875:                                   ; preds = %lor.lhs.false.3870, %lor.lhs.false.3867, %lor.lhs.false.3851
  %2011 = load i8*, i8** @PL_last_uni, align 8
  %add.ptr3876 = getelementptr inbounds i8, i8* %2011, i64 5
  %2012 = load i8, i8* %add.ptr3876, align 1
  %conv3877 = sext i8 %2012 to i32
  %cmp3878 = icmp sge i32 %conv3877, 65
  br i1 %cmp3878, label %land.lhs.true.3880, label %lor.lhs.false.3885

land.lhs.true.3880:                               ; preds = %cond.true.3875
  %2013 = load i8*, i8** @PL_last_uni, align 8
  %add.ptr3881 = getelementptr inbounds i8, i8* %2013, i64 5
  %2014 = load i8, i8* %add.ptr3881, align 1
  %conv3882 = sext i8 %2014 to i32
  %cmp3883 = icmp sle i32 %conv3882, 90
  br i1 %cmp3883, label %if.then.3915, label %lor.lhs.false.3885

lor.lhs.false.3885:                               ; preds = %land.lhs.true.3880, %cond.true.3875
  %2015 = load i8*, i8** @PL_last_uni, align 8
  %add.ptr3886 = getelementptr inbounds i8, i8* %2015, i64 5
  %2016 = load i8, i8* %add.ptr3886, align 1
  %conv3887 = sext i8 %2016 to i32
  %cmp3888 = icmp sge i32 %conv3887, 97
  br i1 %cmp3888, label %land.lhs.true.3890, label %lor.lhs.false.3895

land.lhs.true.3890:                               ; preds = %lor.lhs.false.3885
  %2017 = load i8*, i8** @PL_last_uni, align 8
  %add.ptr3891 = getelementptr inbounds i8, i8* %2017, i64 5
  %2018 = load i8, i8* %add.ptr3891, align 1
  %conv3892 = sext i8 %2018 to i32
  %cmp3893 = icmp sle i32 %conv3892, 122
  br i1 %cmp3893, label %if.then.3915, label %lor.lhs.false.3895

lor.lhs.false.3895:                               ; preds = %land.lhs.true.3890, %lor.lhs.false.3885
  %2019 = load i8*, i8** @PL_last_uni, align 8
  %add.ptr3896 = getelementptr inbounds i8, i8* %2019, i64 5
  %2020 = load i8, i8* %add.ptr3896, align 1
  %conv3897 = sext i8 %2020 to i32
  %cmp3898 = icmp sge i32 %conv3897, 48
  br i1 %cmp3898, label %land.lhs.true.3900, label %lor.lhs.false.3905

land.lhs.true.3900:                               ; preds = %lor.lhs.false.3895
  %2021 = load i8*, i8** @PL_last_uni, align 8
  %add.ptr3901 = getelementptr inbounds i8, i8* %2021, i64 5
  %2022 = load i8, i8* %add.ptr3901, align 1
  %conv3902 = sext i8 %2022 to i32
  %cmp3903 = icmp sle i32 %conv3902, 57
  br i1 %cmp3903, label %if.then.3915, label %lor.lhs.false.3905

lor.lhs.false.3905:                               ; preds = %land.lhs.true.3900, %lor.lhs.false.3895
  %2023 = load i8*, i8** @PL_last_uni, align 8
  %add.ptr3906 = getelementptr inbounds i8, i8* %2023, i64 5
  %2024 = load i8, i8* %add.ptr3906, align 1
  %conv3907 = sext i8 %2024 to i32
  %cmp3908 = icmp eq i32 %conv3907, 95
  br i1 %cmp3908, label %if.then.3915, label %if.end.3916

cond.false.3910:                                  ; preds = %lor.lhs.false.3870
  %2025 = load i8*, i8** @PL_last_uni, align 8
  %add.ptr3911 = getelementptr inbounds i8, i8* %2025, i64 5
  %call3912 = call signext i8 @Perl_is_utf8_alnum(i8* %add.ptr3911)
  %conv3913 = sext i8 %call3912 to i32
  %tobool3914 = icmp ne i32 %conv3913, 0
  br i1 %tobool3914, label %if.then.3915, label %if.end.3916

if.then.3915:                                     ; preds = %cond.false.3910, %lor.lhs.false.3905, %land.lhs.true.3900, %land.lhs.true.3890, %land.lhs.true.3880, %lor.lhs.false.3848, %lor.lhs.false.3842, %land.lhs.true.3838
  call void @S_check_uni()
  br label %if.end.3916

if.end.3916:                                      ; preds = %if.then.3915, %cond.false.3910, %lor.lhs.false.3905, %if.then.3835
  %2026 = load i8*, i8** %s, align 8
  %call3917 = call i8* @S_scan_pat(i8* %2026, i32 31)
  store i8* %call3917, i8** %s, align 8
  %2027 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line3918 = getelementptr inbounds %struct.cop, %struct.cop* %2027, i32 0, i32 13
  %2028 = load i32, i32* %cop_line3918, align 4
  %2029 = load i32, i32* @PL_copline, align 4
  %cmp3919 = icmp ult i32 %2028, %2029
  br i1 %cmp3919, label %cond.true.3921, label %cond.false.3923

cond.true.3921:                                   ; preds = %if.end.3916
  %2030 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line3922 = getelementptr inbounds %struct.cop, %struct.cop* %2030, i32 0, i32 13
  %2031 = load i32, i32* %cop_line3922, align 4
  br label %cond.end.3924

cond.false.3923:                                  ; preds = %if.end.3916
  %2032 = load i32, i32* @PL_copline, align 4
  br label %cond.end.3924

cond.end.3924:                                    ; preds = %cond.false.3923, %cond.true.3921
  %cond3925 = phi i32 [ %2031, %cond.true.3921 ], [ %2032, %cond.false.3923 ]
  store i32 %cond3925, i32* @PL_copline, align 4
  store i32 0, i32* @PL_expect, align 4
  %2033 = load i8*, i8** %s, align 8
  store i8* %2033, i8** @PL_bufptr, align 8
  %call3926 = call i32 @S_sublex_start()
  store i32 %call3926, i32* %retval
  br label %return

if.end.3927:                                      ; preds = %sw.bb.3832
  %2034 = load i8*, i8** %s, align 8
  %incdec.ptr3928 = getelementptr inbounds i8, i8* %2034, i32 1
  store i8* %incdec.ptr3928, i8** %s, align 8
  %2035 = load i8, i8* %2034, align 1
  %conv3929 = sext i8 %2035 to i32
  store i32 %conv3929, i32* %tmp, align 4
  %2036 = load i32, i32* %tmp, align 4
  %cmp3930 = icmp eq i32 %2036, 47
  br i1 %cmp3930, label %if.then.3932, label %if.end.3934

if.then.3932:                                     ; preds = %if.end.3927
  store i32 57, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %2037 = load i8*, i8** %s, align 8
  store i8* %2037, i8** @PL_bufptr, align 8
  %call3933 = call i32 @S_ao(i32 289)
  store i32 %call3933, i32* %retval
  br label %return

if.end.3934:                                      ; preds = %if.end.3927
  store i32 1, i32* @PL_expect, align 4
  %2038 = load i8*, i8** %s, align 8
  store i8* %2038, i8** @PL_bufptr, align 8
  %2039 = load i32, i32* %tmp, align 4
  store i32 %2039, i32* %retval
  br label %return

sw.bb.3935:                                       ; preds = %retry
  %2040 = load i32, i32* @PL_lex_formbrack, align 4
  %tobool3936 = icmp ne i32 %2040, 0
  br i1 %tobool3936, label %land.lhs.true.3937, label %if.end.3964

land.lhs.true.3937:                               ; preds = %sw.bb.3935
  %2041 = load i32, i32* @PL_lex_brackets, align 4
  %2042 = load i32, i32* @PL_lex_formbrack, align 4
  %cmp3938 = icmp eq i32 %2041, %2042
  br i1 %cmp3938, label %land.lhs.true.3940, label %if.end.3964

land.lhs.true.3940:                               ; preds = %land.lhs.true.3937
  %2043 = load i8*, i8** %s, align 8
  %arrayidx3941 = getelementptr inbounds i8, i8* %2043, i64 1
  %2044 = load i8, i8* %arrayidx3941, align 1
  %conv3942 = sext i8 %2044 to i32
  %cmp3943 = icmp eq i32 %conv3942, 10
  br i1 %cmp3943, label %land.lhs.true.3955, label %lor.lhs.false.3945

lor.lhs.false.3945:                               ; preds = %land.lhs.true.3940
  %2045 = load i8*, i8** %s, align 8
  %arrayidx3946 = getelementptr inbounds i8, i8* %2045, i64 1
  %2046 = load i8, i8* %arrayidx3946, align 1
  %conv3947 = sext i8 %2046 to i32
  %cmp3948 = icmp eq i32 %conv3947, 13
  br i1 %cmp3948, label %land.lhs.true.3950, label %if.end.3964

land.lhs.true.3950:                               ; preds = %lor.lhs.false.3945
  %2047 = load i8*, i8** %s, align 8
  %arrayidx3951 = getelementptr inbounds i8, i8* %2047, i64 2
  %2048 = load i8, i8* %arrayidx3951, align 1
  %conv3952 = sext i8 %2048 to i32
  %cmp3953 = icmp eq i32 %conv3952, 10
  br i1 %cmp3953, label %land.lhs.true.3955, label %if.end.3964

land.lhs.true.3955:                               ; preds = %land.lhs.true.3950, %land.lhs.true.3940
  %2049 = load i8*, i8** %s, align 8
  %2050 = load i8*, i8** @PL_linestart, align 8
  %cmp3956 = icmp eq i8* %2049, %2050
  br i1 %cmp3956, label %if.then.3963, label %lor.lhs.false.3958

lor.lhs.false.3958:                               ; preds = %land.lhs.true.3955
  %2051 = load i8*, i8** %s, align 8
  %arrayidx3959 = getelementptr inbounds i8, i8* %2051, i64 -1
  %2052 = load i8, i8* %arrayidx3959, align 1
  %conv3960 = sext i8 %2052 to i32
  %cmp3961 = icmp eq i32 %conv3960, 10
  br i1 %cmp3961, label %if.then.3963, label %if.end.3964

if.then.3963:                                     ; preds = %lor.lhs.false.3958, %land.lhs.true.3955
  store i32 0, i32* @PL_lex_formbrack, align 4
  store i32 3, i32* @PL_expect, align 4
  br label %rightbracket

if.end.3964:                                      ; preds = %lor.lhs.false.3958, %land.lhs.true.3950, %lor.lhs.false.3945, %land.lhs.true.3937, %sw.bb.3935
  %2053 = load i32, i32* @PL_expect, align 4
  %cmp3965 = icmp eq i32 %2053, 0
  br i1 %cmp3965, label %if.then.3977, label %lor.lhs.false.3967

lor.lhs.false.3967:                               ; preds = %if.end.3964
  %2054 = load i8*, i8** %s, align 8
  %arrayidx3968 = getelementptr inbounds i8, i8* %2054, i64 1
  %2055 = load i8, i8* %arrayidx3968, align 1
  %conv3969 = sext i8 %2055 to i32
  %cmp3970 = icmp sge i32 %conv3969, 48
  br i1 %cmp3970, label %land.lhs.true.3972, label %if.then.3977

land.lhs.true.3972:                               ; preds = %lor.lhs.false.3967
  %2056 = load i8*, i8** %s, align 8
  %arrayidx3973 = getelementptr inbounds i8, i8* %2056, i64 1
  %2057 = load i8, i8* %arrayidx3973, align 1
  %conv3974 = sext i8 %2057 to i32
  %cmp3975 = icmp sle i32 %conv3974, 57
  br i1 %cmp3975, label %if.end.3998, label %if.then.3977

if.then.3977:                                     ; preds = %land.lhs.true.3972, %lor.lhs.false.3967, %if.end.3964
  %2058 = load i8*, i8** %s, align 8
  %incdec.ptr3978 = getelementptr inbounds i8, i8* %2058, i32 1
  store i8* %incdec.ptr3978, i8** %s, align 8
  %2059 = load i8, i8* %2058, align 1
  %conv3979 = sext i8 %2059 to i32
  store i32 %conv3979, i32* %tmp, align 4
  %2060 = load i8*, i8** %s, align 8
  %2061 = load i8, i8* %2060, align 1
  %conv3980 = sext i8 %2061 to i32
  %2062 = load i32, i32* %tmp, align 4
  %cmp3981 = icmp eq i32 %conv3980, %2062
  br i1 %cmp3981, label %if.then.3983, label %if.end.3992

if.then.3983:                                     ; preds = %if.then.3977
  %2063 = load i8*, i8** %s, align 8
  %incdec.ptr3984 = getelementptr inbounds i8, i8* %2063, i32 1
  store i8* %incdec.ptr3984, i8** %s, align 8
  %2064 = load i8*, i8** %s, align 8
  %2065 = load i8, i8* %2064, align 1
  %conv3985 = sext i8 %2065 to i32
  %2066 = load i32, i32* %tmp, align 4
  %cmp3986 = icmp eq i32 %conv3985, %2066
  br i1 %cmp3986, label %if.then.3988, label %if.else.3990

if.then.3988:                                     ; preds = %if.then.3983
  %2067 = load i8*, i8** %s, align 8
  %incdec.ptr3989 = getelementptr inbounds i8, i8* %2067, i32 1
  store i8* %incdec.ptr3989, i8** %s, align 8
  store i32 128, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  br label %if.end.3991

if.else.3990:                                     ; preds = %if.then.3983
  store i32 0, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  br label %if.end.3991

if.end.3991:                                      ; preds = %if.else.3990, %if.then.3988
  store i32 1, i32* @PL_expect, align 4
  %2068 = load i8*, i8** %s, align 8
  store i8* %2068, i8** @PL_bufptr, align 8
  store i32 281, i32* %retval
  br label %return

if.end.3992:                                      ; preds = %if.then.3977
  %2069 = load i32, i32* @PL_expect, align 4
  %cmp3993 = icmp ne i32 %2069, 0
  br i1 %cmp3993, label %if.then.3995, label %if.end.3996

if.then.3995:                                     ; preds = %if.end.3992
  call void @S_check_uni()
  br label %if.end.3996

if.end.3996:                                      ; preds = %if.then.3995, %if.end.3992
  store i32 66, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %2070 = load i8*, i8** %s, align 8
  store i8* %2070, i8** @PL_bufptr, align 8
  %call3997 = call i32 @S_ao(i32 290)
  store i32 %call3997, i32* %retval
  br label %return

if.end.3998:                                      ; preds = %land.lhs.true.3972
  br label %sw.bb.3999

sw.bb.3999:                                       ; preds = %retry, %retry, %retry, %retry, %retry, %retry, %retry, %retry, %retry, %retry, %if.end.3998
  %2071 = load i8*, i8** %s, align 8
  %call4000 = call i8* @Perl_scan_num(i8* %2071, %union.YYSTYPE* @PL_yylval)
  store i8* %call4000, i8** %s, align 8
  %2072 = load i32, i32* @PL_expect, align 4
  %cmp4001 = icmp eq i32 %2072, 0
  br i1 %cmp4001, label %if.then.4003, label %if.end.4004

if.then.4003:                                     ; preds = %sw.bb.3999
  %2073 = load i8*, i8** %s, align 8
  call void @S_no_op(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.61, i32 0, i32 0), i8* %2073)
  br label %if.end.4004

if.end.4004:                                      ; preds = %if.then.4003, %sw.bb.3999
  %2074 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line4005 = getelementptr inbounds %struct.cop, %struct.cop* %2074, i32 0, i32 13
  %2075 = load i32, i32* %cop_line4005, align 4
  %2076 = load i32, i32* @PL_copline, align 4
  %cmp4006 = icmp ult i32 %2075, %2076
  br i1 %cmp4006, label %cond.true.4008, label %cond.false.4010

cond.true.4008:                                   ; preds = %if.end.4004
  %2077 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line4009 = getelementptr inbounds %struct.cop, %struct.cop* %2077, i32 0, i32 13
  %2078 = load i32, i32* %cop_line4009, align 4
  br label %cond.end.4011

cond.false.4010:                                  ; preds = %if.end.4004
  %2079 = load i32, i32* @PL_copline, align 4
  br label %cond.end.4011

cond.end.4011:                                    ; preds = %cond.false.4010, %cond.true.4008
  %cond4012 = phi i32 [ %2078, %cond.true.4008 ], [ %2079, %cond.false.4010 ]
  store i32 %cond4012, i32* @PL_copline, align 4
  store i32 0, i32* @PL_expect, align 4
  %2080 = load i8*, i8** %s, align 8
  store i8* %2080, i8** @PL_bufptr, align 8
  store i32 260, i32* %retval
  br label %return

sw.bb.4013:                                       ; preds = %retry
  %2081 = load i8*, i8** %s, align 8
  %call4014 = call i8* @S_scan_str(i8* %2081, i32 0, i32 0)
  store i8* %call4014, i8** %s, align 8
  %2082 = load i32, i32* @PL_expect, align 4
  %cmp4015 = icmp eq i32 %2082, 0
  br i1 %cmp4015, label %if.then.4017, label %if.end.4025

if.then.4017:                                     ; preds = %sw.bb.4013
  %2083 = load i32, i32* @PL_lex_formbrack, align 4
  %tobool4018 = icmp ne i32 %2083, 0
  br i1 %tobool4018, label %land.lhs.true.4019, label %if.else.4023

land.lhs.true.4019:                               ; preds = %if.then.4017
  %2084 = load i32, i32* @PL_lex_brackets, align 4
  %2085 = load i32, i32* @PL_lex_formbrack, align 4
  %cmp4020 = icmp eq i32 %2084, %2085
  br i1 %cmp4020, label %if.then.4022, label %if.else.4023

if.then.4022:                                     ; preds = %land.lhs.true.4019
  store i32 1, i32* @PL_expect, align 4
  call void @S_depcom()
  store i32 44, i32* %retval
  br label %return

if.else.4023:                                     ; preds = %land.lhs.true.4019, %if.then.4017
  %2086 = load i8*, i8** %s, align 8
  call void @S_no_op(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.62, i32 0, i32 0), i8* %2086)
  br label %if.end.4024

if.end.4024:                                      ; preds = %if.else.4023
  br label %if.end.4025

if.end.4025:                                      ; preds = %if.end.4024, %sw.bb.4013
  %2087 = load i8*, i8** %s, align 8
  %tobool4026 = icmp ne i8* %2087, null
  br i1 %tobool4026, label %if.end.4028, label %if.then.4027

if.then.4027:                                     ; preds = %if.end.4025
  call void @S_missingterm(i8* null)
  br label %if.end.4028

if.end.4028:                                      ; preds = %if.then.4027, %if.end.4025
  store i32 5, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  %2088 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line4029 = getelementptr inbounds %struct.cop, %struct.cop* %2088, i32 0, i32 13
  %2089 = load i32, i32* %cop_line4029, align 4
  %2090 = load i32, i32* @PL_copline, align 4
  %cmp4030 = icmp ult i32 %2089, %2090
  br i1 %cmp4030, label %cond.true.4032, label %cond.false.4034

cond.true.4032:                                   ; preds = %if.end.4028
  %2091 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line4033 = getelementptr inbounds %struct.cop, %struct.cop* %2091, i32 0, i32 13
  %2092 = load i32, i32* %cop_line4033, align 4
  br label %cond.end.4035

cond.false.4034:                                  ; preds = %if.end.4028
  %2093 = load i32, i32* @PL_copline, align 4
  br label %cond.end.4035

cond.end.4035:                                    ; preds = %cond.false.4034, %cond.true.4032
  %cond4036 = phi i32 [ %2092, %cond.true.4032 ], [ %2093, %cond.false.4034 ]
  store i32 %cond4036, i32* @PL_copline, align 4
  store i32 0, i32* @PL_expect, align 4
  %2094 = load i8*, i8** %s, align 8
  store i8* %2094, i8** @PL_bufptr, align 8
  %call4037 = call i32 @S_sublex_start()
  store i32 %call4037, i32* %retval
  br label %return

sw.bb.4038:                                       ; preds = %retry
  %2095 = load i8*, i8** %s, align 8
  %call4039 = call i8* @S_scan_str(i8* %2095, i32 0, i32 0)
  store i8* %call4039, i8** %s, align 8
  %2096 = load i32, i32* @PL_expect, align 4
  %cmp4040 = icmp eq i32 %2096, 0
  br i1 %cmp4040, label %if.then.4042, label %if.end.4050

if.then.4042:                                     ; preds = %sw.bb.4038
  %2097 = load i32, i32* @PL_lex_formbrack, align 4
  %tobool4043 = icmp ne i32 %2097, 0
  br i1 %tobool4043, label %land.lhs.true.4044, label %if.else.4048

land.lhs.true.4044:                               ; preds = %if.then.4042
  %2098 = load i32, i32* @PL_lex_brackets, align 4
  %2099 = load i32, i32* @PL_lex_formbrack, align 4
  %cmp4045 = icmp eq i32 %2098, %2099
  br i1 %cmp4045, label %if.then.4047, label %if.else.4048

if.then.4047:                                     ; preds = %land.lhs.true.4044
  store i32 1, i32* @PL_expect, align 4
  call void @S_depcom()
  store i32 44, i32* %retval
  br label %return

if.else.4048:                                     ; preds = %land.lhs.true.4044, %if.then.4042
  %2100 = load i8*, i8** %s, align 8
  call void @S_no_op(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.62, i32 0, i32 0), i8* %2100)
  br label %if.end.4049

if.end.4049:                                      ; preds = %if.else.4048
  br label %if.end.4050

if.end.4050:                                      ; preds = %if.end.4049, %sw.bb.4038
  %2101 = load i8*, i8** %s, align 8
  %tobool4051 = icmp ne i8* %2101, null
  br i1 %tobool4051, label %if.end.4053, label %if.then.4052

if.then.4052:                                     ; preds = %if.end.4050
  call void @S_missingterm(i8* null)
  br label %if.end.4053

if.end.4053:                                      ; preds = %if.then.4052, %if.end.4050
  store i32 5, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  %2102 = load %struct.sv*, %struct.sv** @PL_lex_stuff, align 8
  %sv_flags4054 = getelementptr inbounds %struct.sv, %struct.sv* %2102, i32 0, i32 2
  %2103 = load i32, i32* %sv_flags4054, align 4
  %and4055 = and i32 %2103, 262144
  %cmp4056 = icmp eq i32 %and4055, 262144
  br i1 %cmp4056, label %cond.true.4058, label %cond.false.4063

cond.true.4058:                                   ; preds = %if.end.4053
  %2104 = load %struct.sv*, %struct.sv** @PL_lex_stuff, align 8
  %sv_any4059 = getelementptr inbounds %struct.sv, %struct.sv* %2104, i32 0, i32 0
  %2105 = load i8*, i8** %sv_any4059, align 8
  %2106 = bitcast i8* %2105 to %struct.xpv*
  %xpv_cur4060 = getelementptr inbounds %struct.xpv, %struct.xpv* %2106, i32 0, i32 1
  %2107 = load i64, i64* %xpv_cur4060, align 8
  store i64 %2107, i64* %len, align 8
  %2108 = load %struct.sv*, %struct.sv** @PL_lex_stuff, align 8
  %sv_any4061 = getelementptr inbounds %struct.sv, %struct.sv* %2108, i32 0, i32 0
  %2109 = load i8*, i8** %sv_any4061, align 8
  %2110 = bitcast i8* %2109 to %struct.xpv*
  %xpv_pv4062 = getelementptr inbounds %struct.xpv, %struct.xpv* %2110, i32 0, i32 0
  %2111 = load i8*, i8** %xpv_pv4062, align 8
  br label %cond.end.4065

cond.false.4063:                                  ; preds = %if.end.4053
  %2112 = load %struct.sv*, %struct.sv** @PL_lex_stuff, align 8
  %call4064 = call i8* @Perl_sv_2pv_flags(%struct.sv* %2112, i64* %len, i32 2)
  br label %cond.end.4065

cond.end.4065:                                    ; preds = %cond.false.4063, %cond.true.4058
  %cond4066 = phi i8* [ %2111, %cond.true.4058 ], [ %call4064, %cond.false.4063 ]
  store i8* %cond4066, i8** %d, align 8
  br label %for.cond.4067

for.cond.4067:                                    ; preds = %for.inc.4087, %cond.end.4065
  %2113 = load i64, i64* %len, align 8
  %tobool4068 = icmp ne i64 %2113, 0
  br i1 %tobool4068, label %for.body.4069, label %for.end.4090

for.body.4069:                                    ; preds = %for.cond.4067
  %2114 = load i8*, i8** %d, align 8
  %2115 = load i8, i8* %2114, align 1
  %conv4070 = sext i8 %2115 to i32
  %cmp4071 = icmp eq i32 %conv4070, 36
  br i1 %cmp4071, label %if.then.4085, label %lor.lhs.false.4073

lor.lhs.false.4073:                               ; preds = %for.body.4069
  %2116 = load i8*, i8** %d, align 8
  %2117 = load i8, i8* %2116, align 1
  %conv4074 = sext i8 %2117 to i32
  %cmp4075 = icmp eq i32 %conv4074, 64
  br i1 %cmp4075, label %if.then.4085, label %lor.lhs.false.4077

lor.lhs.false.4077:                               ; preds = %lor.lhs.false.4073
  %2118 = load i8*, i8** %d, align 8
  %2119 = load i8, i8* %2118, align 1
  %conv4078 = sext i8 %2119 to i32
  %cmp4079 = icmp eq i32 %conv4078, 92
  br i1 %cmp4079, label %if.then.4085, label %lor.lhs.false.4081

lor.lhs.false.4081:                               ; preds = %lor.lhs.false.4077
  %2120 = load i8*, i8** %d, align 8
  %2121 = load i8, i8* %2120, align 1
  %conv4082 = zext i8 %2121 to i64
  %cmp4083 = icmp ult i64 %conv4082, 128
  br i1 %cmp4083, label %if.end.4086, label %if.then.4085

if.then.4085:                                     ; preds = %lor.lhs.false.4081, %lor.lhs.false.4077, %lor.lhs.false.4073, %for.body.4069
  store i32 67, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  br label %for.end.4090

if.end.4086:                                      ; preds = %lor.lhs.false.4081
  br label %for.inc.4087

for.inc.4087:                                     ; preds = %if.end.4086
  %2122 = load i64, i64* %len, align 8
  %dec4088 = add i64 %2122, -1
  store i64 %dec4088, i64* %len, align 8
  %2123 = load i8*, i8** %d, align 8
  %incdec.ptr4089 = getelementptr inbounds i8, i8* %2123, i32 1
  store i8* %incdec.ptr4089, i8** %d, align 8
  br label %for.cond.4067

for.end.4090:                                     ; preds = %if.then.4085, %for.cond.4067
  %2124 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line4091 = getelementptr inbounds %struct.cop, %struct.cop* %2124, i32 0, i32 13
  %2125 = load i32, i32* %cop_line4091, align 4
  %2126 = load i32, i32* @PL_copline, align 4
  %cmp4092 = icmp ult i32 %2125, %2126
  br i1 %cmp4092, label %cond.true.4094, label %cond.false.4096

cond.true.4094:                                   ; preds = %for.end.4090
  %2127 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line4095 = getelementptr inbounds %struct.cop, %struct.cop* %2127, i32 0, i32 13
  %2128 = load i32, i32* %cop_line4095, align 4
  br label %cond.end.4097

cond.false.4096:                                  ; preds = %for.end.4090
  %2129 = load i32, i32* @PL_copline, align 4
  br label %cond.end.4097

cond.end.4097:                                    ; preds = %cond.false.4096, %cond.true.4094
  %cond4098 = phi i32 [ %2128, %cond.true.4094 ], [ %2129, %cond.false.4096 ]
  store i32 %cond4098, i32* @PL_copline, align 4
  store i32 0, i32* @PL_expect, align 4
  %2130 = load i8*, i8** %s, align 8
  store i8* %2130, i8** @PL_bufptr, align 8
  %call4099 = call i32 @S_sublex_start()
  store i32 %call4099, i32* %retval
  br label %return

sw.bb.4100:                                       ; preds = %retry
  %2131 = load i8*, i8** %s, align 8
  %call4101 = call i8* @S_scan_str(i8* %2131, i32 0, i32 0)
  store i8* %call4101, i8** %s, align 8
  %2132 = load i32, i32* @PL_expect, align 4
  %cmp4102 = icmp eq i32 %2132, 0
  br i1 %cmp4102, label %if.then.4104, label %if.end.4105

if.then.4104:                                     ; preds = %sw.bb.4100
  %2133 = load i8*, i8** %s, align 8
  call void @S_no_op(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.63, i32 0, i32 0), i8* %2133)
  br label %if.end.4105

if.end.4105:                                      ; preds = %if.then.4104, %sw.bb.4100
  %2134 = load i8*, i8** %s, align 8
  %tobool4106 = icmp ne i8* %2134, null
  br i1 %tobool4106, label %if.end.4108, label %if.then.4107

if.then.4107:                                     ; preds = %if.end.4105
  call void @S_missingterm(i8* null)
  br label %if.end.4108

if.end.4108:                                      ; preds = %if.then.4107, %if.end.4105
  store i32 24, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  call void @S_set_csh()
  %2135 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line4109 = getelementptr inbounds %struct.cop, %struct.cop* %2135, i32 0, i32 13
  %2136 = load i32, i32* %cop_line4109, align 4
  %2137 = load i32, i32* @PL_copline, align 4
  %cmp4110 = icmp ult i32 %2136, %2137
  br i1 %cmp4110, label %cond.true.4112, label %cond.false.4114

cond.true.4112:                                   ; preds = %if.end.4108
  %2138 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line4113 = getelementptr inbounds %struct.cop, %struct.cop* %2138, i32 0, i32 13
  %2139 = load i32, i32* %cop_line4113, align 4
  br label %cond.end.4115

cond.false.4114:                                  ; preds = %if.end.4108
  %2140 = load i32, i32* @PL_copline, align 4
  br label %cond.end.4115

cond.end.4115:                                    ; preds = %cond.false.4114, %cond.true.4112
  %cond4116 = phi i32 [ %2139, %cond.true.4112 ], [ %2140, %cond.false.4114 ]
  store i32 %cond4116, i32* @PL_copline, align 4
  store i32 0, i32* @PL_expect, align 4
  %2141 = load i8*, i8** %s, align 8
  store i8* %2141, i8** @PL_bufptr, align 8
  %call4117 = call i32 @S_sublex_start()
  store i32 %call4117, i32* %retval
  br label %return

sw.bb.4118:                                       ; preds = %retry
  %2142 = load i8*, i8** %s, align 8
  %incdec.ptr4119 = getelementptr inbounds i8, i8* %2142, i32 1
  store i8* %incdec.ptr4119, i8** %s, align 8
  %2143 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings4120 = getelementptr inbounds %struct.cop, %struct.cop* %2143, i32 0, i32 14
  %2144 = load %struct.sv*, %struct.sv** %cop_warnings4120, align 8
  %cmp4121 = icmp ne %struct.sv* %2144, null
  br i1 %cmp4121, label %land.lhs.true.4123, label %lor.lhs.false.4139

land.lhs.true.4123:                               ; preds = %sw.bb.4118
  %2145 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings4124 = getelementptr inbounds %struct.cop, %struct.cop* %2145, i32 0, i32 14
  %2146 = load %struct.sv*, %struct.sv** %cop_warnings4124, align 8
  %cmp4125 = icmp ne %struct.sv* %2146, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 2)
  br i1 %cmp4125, label %land.lhs.true.4127, label %lor.lhs.false.4139

land.lhs.true.4127:                               ; preds = %land.lhs.true.4123
  %2147 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings4128 = getelementptr inbounds %struct.cop, %struct.cop* %2147, i32 0, i32 14
  %2148 = load %struct.sv*, %struct.sv** %cop_warnings4128, align 8
  %cmp4129 = icmp eq %struct.sv* %2148, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 1)
  br i1 %cmp4129, label %land.lhs.true.4147, label %lor.lhs.false.4131

lor.lhs.false.4131:                               ; preds = %land.lhs.true.4127
  %2149 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings4132 = getelementptr inbounds %struct.cop, %struct.cop* %2149, i32 0, i32 14
  %2150 = load %struct.sv*, %struct.sv** %cop_warnings4132, align 8
  %sv_any4133 = getelementptr inbounds %struct.sv, %struct.sv* %2150, i32 0, i32 0
  %2151 = load i8*, i8** %sv_any4133, align 8
  %2152 = bitcast i8* %2151 to %struct.xpv*
  %xpv_pv4134 = getelementptr inbounds %struct.xpv, %struct.xpv* %2152, i32 0, i32 0
  %2153 = load i8*, i8** %xpv_pv4134, align 8
  %arrayidx4135 = getelementptr inbounds i8, i8* %2153, i64 7
  %2154 = load i8, i8* %arrayidx4135, align 1
  %conv4136 = sext i8 %2154 to i32
  %and4137 = and i32 %conv4136, 1
  %tobool4138 = icmp ne i32 %and4137, 0
  br i1 %tobool4138, label %land.lhs.true.4147, label %lor.lhs.false.4139

lor.lhs.false.4139:                               ; preds = %lor.lhs.false.4131, %land.lhs.true.4123, %sw.bb.4118
  %2155 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings4140 = getelementptr inbounds %struct.cop, %struct.cop* %2155, i32 0, i32 14
  %2156 = load %struct.sv*, %struct.sv** %cop_warnings4140, align 8
  %cmp4141 = icmp eq %struct.sv* %2156, null
  br i1 %cmp4141, label %land.lhs.true.4143, label %if.end.4160

land.lhs.true.4143:                               ; preds = %lor.lhs.false.4139
  %2157 = load i8, i8* @PL_dowarn, align 1
  %conv4144 = zext i8 %2157 to i32
  %and4145 = and i32 %conv4144, 1
  %tobool4146 = icmp ne i32 %and4145, 0
  br i1 %tobool4146, label %land.lhs.true.4147, label %if.end.4160

land.lhs.true.4147:                               ; preds = %land.lhs.true.4143, %lor.lhs.false.4131, %land.lhs.true.4127
  %2158 = load i32, i32* @PL_lex_inwhat, align 4
  %tobool4148 = icmp ne i32 %2158, 0
  br i1 %tobool4148, label %land.lhs.true.4149, label %if.end.4160

land.lhs.true.4149:                               ; preds = %land.lhs.true.4147
  %2159 = load i8*, i8** %s, align 8
  %2160 = load i8, i8* %2159, align 1
  %conv4150 = sext i8 %2160 to i32
  %cmp4151 = icmp sge i32 %conv4150, 48
  br i1 %cmp4151, label %land.lhs.true.4153, label %if.end.4160

land.lhs.true.4153:                               ; preds = %land.lhs.true.4149
  %2161 = load i8*, i8** %s, align 8
  %2162 = load i8, i8* %2161, align 1
  %conv4154 = sext i8 %2162 to i32
  %cmp4155 = icmp sle i32 %conv4154, 57
  br i1 %cmp4155, label %if.then.4157, label %if.end.4160

if.then.4157:                                     ; preds = %land.lhs.true.4153
  %2163 = load i8*, i8** %s, align 8
  %2164 = load i8, i8* %2163, align 1
  %conv4158 = sext i8 %2164 to i32
  %2165 = load i8*, i8** %s, align 8
  %2166 = load i8, i8* %2165, align 1
  %conv4159 = sext i8 %2166 to i32
  call void (i32, i8*, ...) @Perl_warner(i32 28, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.64, i32 0, i32 0), i32 %conv4158, i32 %conv4159)
  br label %if.end.4160

if.end.4160:                                      ; preds = %if.then.4157, %land.lhs.true.4153, %land.lhs.true.4149, %land.lhs.true.4147, %land.lhs.true.4143, %lor.lhs.false.4139
  %2167 = load i32, i32* @PL_expect, align 4
  %cmp4161 = icmp eq i32 %2167, 0
  br i1 %cmp4161, label %if.then.4163, label %if.end.4164

if.then.4163:                                     ; preds = %if.end.4160
  %2168 = load i8*, i8** %s, align 8
  call void @S_no_op(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.65, i32 0, i32 0), i8* %2168)
  br label %if.end.4164

if.end.4164:                                      ; preds = %if.then.4163, %if.end.4160
  store i32 1, i32* @PL_expect, align 4
  %2169 = load i8*, i8** %s, align 8
  store i8* %2169, i8** @PL_bufptr, align 8
  store i32 311, i32* %retval
  br label %return

sw.bb.4165:                                       ; preds = %retry
  %2170 = load i8*, i8** %s, align 8
  %arrayidx4166 = getelementptr inbounds i8, i8* %2170, i64 1
  %2171 = load i8, i8* %arrayidx4166, align 1
  %conv4167 = sext i8 %2171 to i32
  %cmp4168 = icmp sge i32 %conv4167, 48
  br i1 %cmp4168, label %land.lhs.true.4170, label %if.end.4266

land.lhs.true.4170:                               ; preds = %sw.bb.4165
  %2172 = load i8*, i8** %s, align 8
  %arrayidx4171 = getelementptr inbounds i8, i8* %2172, i64 1
  %2173 = load i8, i8* %arrayidx4171, align 1
  %conv4172 = sext i8 %2173 to i32
  %cmp4173 = icmp sle i32 %conv4172, 57
  br i1 %cmp4173, label %land.lhs.true.4175, label %if.end.4266

land.lhs.true.4175:                               ; preds = %land.lhs.true.4170
  %2174 = load i32, i32* @PL_expect, align 4
  %cmp4176 = icmp ne i32 %2174, 0
  br i1 %cmp4176, label %if.then.4178, label %if.end.4266

if.then.4178:                                     ; preds = %land.lhs.true.4175
  %2175 = load i8*, i8** %s, align 8
  store i8* %2175, i8** %start, align 8
  %2176 = load i8*, i8** %start, align 8
  %incdec.ptr4180 = getelementptr inbounds i8, i8* %2176, i32 1
  store i8* %incdec.ptr4180, i8** %start, align 8
  %2177 = load i8*, i8** %start, align 8
  %incdec.ptr4181 = getelementptr inbounds i8, i8* %2177, i32 1
  store i8* %incdec.ptr4181, i8** %start, align 8
  br label %while.cond.4182

while.cond.4182:                                  ; preds = %while.body.4196, %if.then.4178
  %2178 = load i8*, i8** %start, align 8
  %2179 = load i8, i8* %2178, align 1
  %conv4183 = sext i8 %2179 to i32
  %cmp4184 = icmp sge i32 %conv4183, 48
  br i1 %cmp4184, label %land.lhs.true.4186, label %lor.rhs.4190

land.lhs.true.4186:                               ; preds = %while.cond.4182
  %2180 = load i8*, i8** %start, align 8
  %2181 = load i8, i8* %2180, align 1
  %conv4187 = sext i8 %2181 to i32
  %cmp4188 = icmp sle i32 %conv4187, 57
  br i1 %cmp4188, label %lor.end.4194, label %lor.rhs.4190

lor.rhs.4190:                                     ; preds = %land.lhs.true.4186, %while.cond.4182
  %2182 = load i8*, i8** %start, align 8
  %2183 = load i8, i8* %2182, align 1
  %conv4191 = sext i8 %2183 to i32
  %cmp4192 = icmp eq i32 %conv4191, 95
  br label %lor.end.4194

lor.end.4194:                                     ; preds = %lor.rhs.4190, %land.lhs.true.4186
  %2184 = phi i1 [ true, %land.lhs.true.4186 ], [ %cmp4192, %lor.rhs.4190 ]
  br i1 %2184, label %while.body.4196, label %while.end.4198

while.body.4196:                                  ; preds = %lor.end.4194
  %2185 = load i8*, i8** %start, align 8
  %incdec.ptr4197 = getelementptr inbounds i8, i8* %2185, i32 1
  store i8* %incdec.ptr4197, i8** %start, align 8
  br label %while.cond.4182

while.end.4198:                                   ; preds = %lor.end.4194
  %2186 = load i8*, i8** %start, align 8
  %2187 = load i8, i8* %2186, align 1
  %conv4199 = sext i8 %2187 to i32
  %cmp4200 = icmp eq i32 %conv4199, 46
  br i1 %cmp4200, label %land.lhs.true.4202, label %if.else.4222

land.lhs.true.4202:                               ; preds = %while.end.4198
  %2188 = load i8*, i8** %start, align 8
  %arrayidx4203 = getelementptr inbounds i8, i8* %2188, i64 1
  %2189 = load i8, i8* %arrayidx4203, align 1
  %conv4204 = sext i8 %2189 to i32
  %cmp4205 = icmp sge i32 %conv4204, 48
  br i1 %cmp4205, label %land.lhs.true.4207, label %if.else.4222

land.lhs.true.4207:                               ; preds = %land.lhs.true.4202
  %2190 = load i8*, i8** %start, align 8
  %arrayidx4208 = getelementptr inbounds i8, i8* %2190, i64 1
  %2191 = load i8, i8* %arrayidx4208, align 1
  %conv4209 = sext i8 %2191 to i32
  %cmp4210 = icmp sle i32 %conv4209, 57
  br i1 %cmp4210, label %if.then.4212, label %if.else.4222

if.then.4212:                                     ; preds = %land.lhs.true.4207
  %2192 = load i8*, i8** %s, align 8
  %call4213 = call i8* @Perl_scan_num(i8* %2192, %union.YYSTYPE* @PL_yylval)
  store i8* %call4213, i8** %s, align 8
  %2193 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line4214 = getelementptr inbounds %struct.cop, %struct.cop* %2193, i32 0, i32 13
  %2194 = load i32, i32* %cop_line4214, align 4
  %2195 = load i32, i32* @PL_copline, align 4
  %cmp4215 = icmp ult i32 %2194, %2195
  br i1 %cmp4215, label %cond.true.4217, label %cond.false.4219

cond.true.4217:                                   ; preds = %if.then.4212
  %2196 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line4218 = getelementptr inbounds %struct.cop, %struct.cop* %2196, i32 0, i32 13
  %2197 = load i32, i32* %cop_line4218, align 4
  br label %cond.end.4220

cond.false.4219:                                  ; preds = %if.then.4212
  %2198 = load i32, i32* @PL_copline, align 4
  br label %cond.end.4220

cond.end.4220:                                    ; preds = %cond.false.4219, %cond.true.4217
  %cond4221 = phi i32 [ %2197, %cond.true.4217 ], [ %2198, %cond.false.4219 ]
  store i32 %cond4221, i32* @PL_copline, align 4
  store i32 0, i32* @PL_expect, align 4
  %2199 = load i8*, i8** %s, align 8
  store i8* %2199, i8** @PL_bufptr, align 8
  store i32 260, i32* %retval
  br label %return

if.else.4222:                                     ; preds = %land.lhs.true.4207, %land.lhs.true.4202, %while.end.4198
  %2200 = load i8*, i8** %start, align 8
  %2201 = load i8, i8* %2200, align 1
  %conv4223 = sext i8 %2201 to i32
  %cmp4224 = icmp sge i32 %conv4223, 65
  br i1 %cmp4224, label %land.lhs.true.4226, label %lor.lhs.false.4230

land.lhs.true.4226:                               ; preds = %if.else.4222
  %2202 = load i8*, i8** %start, align 8
  %2203 = load i8, i8* %2202, align 1
  %conv4227 = sext i8 %2203 to i32
  %cmp4228 = icmp sle i32 %conv4227, 90
  br i1 %cmp4228, label %if.end.4264, label %lor.lhs.false.4230

lor.lhs.false.4230:                               ; preds = %land.lhs.true.4226, %if.else.4222
  %2204 = load i8*, i8** %start, align 8
  %2205 = load i8, i8* %2204, align 1
  %conv4231 = sext i8 %2205 to i32
  %cmp4232 = icmp sge i32 %conv4231, 97
  br i1 %cmp4232, label %land.lhs.true.4234, label %land.lhs.true.4238

land.lhs.true.4234:                               ; preds = %lor.lhs.false.4230
  %2206 = load i8*, i8** %start, align 8
  %2207 = load i8, i8* %2206, align 1
  %conv4235 = sext i8 %2207 to i32
  %cmp4236 = icmp sle i32 %conv4235, 122
  br i1 %cmp4236, label %if.end.4264, label %land.lhs.true.4238

land.lhs.true.4238:                               ; preds = %land.lhs.true.4234, %lor.lhs.false.4230
  %2208 = load i32, i32* @PL_expect, align 4
  %cmp4239 = icmp eq i32 %2208, 1
  br i1 %cmp4239, label %if.then.4247, label %lor.lhs.false.4241

lor.lhs.false.4241:                               ; preds = %land.lhs.true.4238
  %2209 = load i32, i32* @PL_expect, align 4
  %cmp4242 = icmp eq i32 %2209, 2
  br i1 %cmp4242, label %if.then.4247, label %lor.lhs.false.4244

lor.lhs.false.4244:                               ; preds = %lor.lhs.false.4241
  %2210 = load i32, i32* @PL_expect, align 4
  %cmp4245 = icmp eq i32 %2210, 3
  br i1 %cmp4245, label %if.then.4247, label %if.end.4264

if.then.4247:                                     ; preds = %lor.lhs.false.4244, %lor.lhs.false.4241, %land.lhs.true.4238
  %2211 = load i8*, i8** %start, align 8
  %2212 = load i8, i8* %2211, align 1
  store i8 %2212, i8* %c, align 1
  %2213 = load i8*, i8** %start, align 8
  store i8 0, i8* %2213, align 1
  %2214 = load i8*, i8** %s, align 8
  %call4251 = call %struct.gv* @Perl_gv_fetchpv(i8* %2214, i32 0, i32 12)
  store %struct.gv* %call4251, %struct.gv** %gv4250, align 8
  %2215 = load i8, i8* %c, align 1
  %2216 = load i8*, i8** %start, align 8
  store i8 %2215, i8* %2216, align 1
  %2217 = load %struct.gv*, %struct.gv** %gv4250, align 8
  %tobool4252 = icmp ne %struct.gv* %2217, null
  br i1 %tobool4252, label %if.end.4263, label %if.then.4253

if.then.4253:                                     ; preds = %if.then.4247
  %2218 = load i8*, i8** %s, align 8
  %call4254 = call i8* @Perl_scan_num(i8* %2218, %union.YYSTYPE* @PL_yylval)
  store i8* %call4254, i8** %s, align 8
  %2219 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line4255 = getelementptr inbounds %struct.cop, %struct.cop* %2219, i32 0, i32 13
  %2220 = load i32, i32* %cop_line4255, align 4
  %2221 = load i32, i32* @PL_copline, align 4
  %cmp4256 = icmp ult i32 %2220, %2221
  br i1 %cmp4256, label %cond.true.4258, label %cond.false.4260

cond.true.4258:                                   ; preds = %if.then.4253
  %2222 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line4259 = getelementptr inbounds %struct.cop, %struct.cop* %2222, i32 0, i32 13
  %2223 = load i32, i32* %cop_line4259, align 4
  br label %cond.end.4261

cond.false.4260:                                  ; preds = %if.then.4253
  %2224 = load i32, i32* @PL_copline, align 4
  br label %cond.end.4261

cond.end.4261:                                    ; preds = %cond.false.4260, %cond.true.4258
  %cond4262 = phi i32 [ %2223, %cond.true.4258 ], [ %2224, %cond.false.4260 ]
  store i32 %cond4262, i32* @PL_copline, align 4
  store i32 0, i32* @PL_expect, align 4
  %2225 = load i8*, i8** %s, align 8
  store i8* %2225, i8** @PL_bufptr, align 8
  store i32 260, i32* %retval
  br label %return

if.end.4263:                                      ; preds = %if.then.4247
  br label %if.end.4264

if.end.4264:                                      ; preds = %if.end.4263, %lor.lhs.false.4244, %land.lhs.true.4234, %land.lhs.true.4226
  br label %if.end.4265

if.end.4265:                                      ; preds = %if.end.4264
  br label %if.end.4266

if.end.4266:                                      ; preds = %if.end.4265, %land.lhs.true.4175, %land.lhs.true.4170, %sw.bb.4165
  br label %keylookup

sw.bb.4267:                                       ; preds = %retry
  %2226 = load i8*, i8** %s, align 8
  %arrayidx4268 = getelementptr inbounds i8, i8* %2226, i64 1
  %2227 = load i8, i8* %arrayidx4268, align 1
  %conv4269 = sext i8 %2227 to i32
  %cmp4270 = icmp sge i32 %conv4269, 48
  br i1 %cmp4270, label %land.lhs.true.4272, label %if.end.4283

land.lhs.true.4272:                               ; preds = %sw.bb.4267
  %2228 = load i8*, i8** %s, align 8
  %arrayidx4273 = getelementptr inbounds i8, i8* %2228, i64 1
  %2229 = load i8, i8* %arrayidx4273, align 1
  %conv4274 = sext i8 %2229 to i32
  %cmp4275 = icmp sle i32 %conv4274, 57
  br i1 %cmp4275, label %land.lhs.true.4277, label %if.end.4283

land.lhs.true.4277:                               ; preds = %land.lhs.true.4272
  %2230 = load i32, i32* @PL_expect, align 4
  %cmp4278 = icmp eq i32 %2230, 0
  br i1 %cmp4278, label %if.then.4280, label %if.end.4283

if.then.4280:                                     ; preds = %land.lhs.true.4277
  %2231 = load i8*, i8** %s, align 8
  %incdec.ptr4281 = getelementptr inbounds i8, i8* %2231, i32 1
  store i8* %incdec.ptr4281, i8** %s, align 8
  store i32 61, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %2232 = load i8*, i8** %s, align 8
  store i8* %2232, i8** @PL_bufptr, align 8
  %call4282 = call i32 @S_ao(i32 289)
  store i32 %call4282, i32* %retval
  br label %return

if.end.4283:                                      ; preds = %land.lhs.true.4277, %land.lhs.true.4272, %sw.bb.4267
  br label %keylookup

sw.bb.4284:                                       ; preds = %retry, %retry, %retry, %retry, %retry, %retry, %retry, %retry, %retry, %retry, %retry, %retry, %retry, %retry, %retry, %retry, %retry, %retry, %retry, %retry, %retry, %retry, %retry, %retry, %retry, %retry, %retry, %retry, %retry, %retry, %retry, %retry, %retry, %retry, %retry, %retry, %retry, %retry, %retry, %retry, %retry, %retry, %retry, %retry, %retry, %retry, %retry, %retry, %retry, %retry, %retry
  br label %keylookup

keylookup:                                        ; preds = %sw.bb.4284, %if.end.4283, %if.end.4266, %if.then.303
  store i32 0, i32* %orig_keyword, align 4
  store %struct.gv* null, %struct.gv** %gv, align 8
  store %struct.gv** null, %struct.gv*** %gvp, align 8
  %2233 = load i8*, i8** %s, align 8
  store i8* %2233, i8** @PL_bufptr, align 8
  %2234 = load i8*, i8** %s, align 8
  %call4285 = call i8* @S_scan_word(i8* %2234, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i32 0), i64 256, i32 0, i64* %len)
  store i8* %call4285, i8** %s, align 8
  %2235 = load i64, i64* %len, align 8
  %cmp4286 = icmp eq i64 %2235, 1
  br i1 %cmp4286, label %land.lhs.true.4288, label %lor.rhs.4292

land.lhs.true.4288:                               ; preds = %keylookup
  %2236 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i64 0), align 1
  %conv4289 = sext i8 %2236 to i32
  %call4290 = call i8* @strchr(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.66, i32 0, i32 0), i32 %conv4289)
  %tobool4291 = icmp ne i8* %call4290, null
  br i1 %tobool4291, label %lor.end.4317, label %lor.rhs.4292

lor.rhs.4292:                                     ; preds = %land.lhs.true.4288, %keylookup
  %2237 = load i64, i64* %len, align 8
  %cmp4293 = icmp eq i64 %2237, 2
  br i1 %cmp4293, label %land.rhs.4295, label %land.end.4315

land.rhs.4295:                                    ; preds = %lor.rhs.4292
  %2238 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i64 0), align 1
  %conv4296 = sext i8 %2238 to i32
  %cmp4297 = icmp eq i32 %conv4296, 116
  br i1 %cmp4297, label %land.lhs.true.4299, label %lor.rhs.4303

land.lhs.true.4299:                               ; preds = %land.rhs.4295
  %2239 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i64 1), align 1
  %conv4300 = sext i8 %2239 to i32
  %cmp4301 = icmp eq i32 %conv4300, 114
  br i1 %cmp4301, label %lor.end.4313, label %lor.rhs.4303

lor.rhs.4303:                                     ; preds = %land.lhs.true.4299, %land.rhs.4295
  %2240 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i64 0), align 1
  %conv4304 = sext i8 %2240 to i32
  %cmp4305 = icmp eq i32 %conv4304, 113
  br i1 %cmp4305, label %land.rhs.4307, label %land.end.4311

land.rhs.4307:                                    ; preds = %lor.rhs.4303
  %2241 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i64 1), align 1
  %conv4308 = sext i8 %2241 to i32
  %call4309 = call i8* @strchr(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.67, i32 0, i32 0), i32 %conv4308)
  %tobool4310 = icmp ne i8* %call4309, null
  br label %land.end.4311

land.end.4311:                                    ; preds = %land.rhs.4307, %lor.rhs.4303
  %2242 = phi i1 [ false, %lor.rhs.4303 ], [ %tobool4310, %land.rhs.4307 ]
  br label %lor.end.4313

lor.end.4313:                                     ; preds = %land.end.4311, %land.lhs.true.4299
  %2243 = phi i1 [ true, %land.lhs.true.4299 ], [ %2242, %land.end.4311 ]
  br label %land.end.4315

land.end.4315:                                    ; preds = %lor.end.4313, %lor.rhs.4292
  %2244 = phi i1 [ false, %lor.rhs.4292 ], [ %2243, %lor.end.4313 ]
  br label %lor.end.4317

lor.end.4317:                                     ; preds = %land.end.4315, %land.lhs.true.4288
  %2245 = phi i1 [ true, %land.lhs.true.4288 ], [ %2244, %land.end.4315 ]
  %lor.ext4318 = zext i1 %2245 to i32
  store i32 %lor.ext4318, i32* %tmp, align 4
  %2246 = load i32, i32* %tmp, align 4
  %tobool4319 = icmp ne i32 %2246, 0
  br i1 %tobool4319, label %if.end.4333, label %land.lhs.true.4320

land.lhs.true.4320:                               ; preds = %lor.end.4317
  %2247 = load i8*, i8** %s, align 8
  %2248 = load i8, i8* %2247, align 1
  %conv4321 = sext i8 %2248 to i32
  %cmp4322 = icmp eq i32 %conv4321, 58
  br i1 %cmp4322, label %land.lhs.true.4324, label %if.end.4333

land.lhs.true.4324:                               ; preds = %land.lhs.true.4320
  %2249 = load i8*, i8** %s, align 8
  %arrayidx4325 = getelementptr inbounds i8, i8* %2249, i64 1
  %2250 = load i8, i8* %arrayidx4325, align 1
  %conv4326 = sext i8 %2250 to i32
  %cmp4327 = icmp eq i32 %conv4326, 58
  br i1 %cmp4327, label %land.lhs.true.4329, label %if.end.4333

land.lhs.true.4329:                               ; preds = %land.lhs.true.4324
  %call4330 = call i32 @strcmp(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.68, i32 0, i32 0))
  %tobool4331 = icmp ne i32 %call4330, 0
  br i1 %tobool4331, label %if.then.4332, label %if.end.4333

if.then.4332:                                     ; preds = %land.lhs.true.4329
  br label %just_a_word

if.end.4333:                                      ; preds = %land.lhs.true.4329, %land.lhs.true.4324, %land.lhs.true.4320, %lor.end.4317
  %2251 = load i8*, i8** %s, align 8
  store i8* %2251, i8** %d, align 8
  br label %while.cond.4334

while.cond.4334:                                  ; preds = %while.body.4361, %if.end.4333
  %2252 = load i8*, i8** %d, align 8
  %2253 = load i8*, i8** @PL_bufend, align 8
  %cmp4335 = icmp ult i8* %2252, %2253
  br i1 %cmp4335, label %land.rhs.4337, label %land.end.4359

land.rhs.4337:                                    ; preds = %while.cond.4334
  %2254 = load i8*, i8** %d, align 8
  %2255 = load i8, i8* %2254, align 1
  %conv4338 = sext i8 %2255 to i32
  %cmp4339 = icmp eq i32 %conv4338, 32
  br i1 %cmp4339, label %lor.end.4357, label %lor.lhs.false.4341

lor.lhs.false.4341:                               ; preds = %land.rhs.4337
  %2256 = load i8*, i8** %d, align 8
  %2257 = load i8, i8* %2256, align 1
  %conv4342 = sext i8 %2257 to i32
  %cmp4343 = icmp eq i32 %conv4342, 9
  br i1 %cmp4343, label %lor.end.4357, label %lor.lhs.false.4345

lor.lhs.false.4345:                               ; preds = %lor.lhs.false.4341
  %2258 = load i8*, i8** %d, align 8
  %2259 = load i8, i8* %2258, align 1
  %conv4346 = sext i8 %2259 to i32
  %cmp4347 = icmp eq i32 %conv4346, 10
  br i1 %cmp4347, label %lor.end.4357, label %lor.lhs.false.4349

lor.lhs.false.4349:                               ; preds = %lor.lhs.false.4345
  %2260 = load i8*, i8** %d, align 8
  %2261 = load i8, i8* %2260, align 1
  %conv4350 = sext i8 %2261 to i32
  %cmp4351 = icmp eq i32 %conv4350, 13
  br i1 %cmp4351, label %lor.end.4357, label %lor.rhs.4353

lor.rhs.4353:                                     ; preds = %lor.lhs.false.4349
  %2262 = load i8*, i8** %d, align 8
  %2263 = load i8, i8* %2262, align 1
  %conv4354 = sext i8 %2263 to i32
  %cmp4355 = icmp eq i32 %conv4354, 12
  br label %lor.end.4357

lor.end.4357:                                     ; preds = %lor.rhs.4353, %lor.lhs.false.4349, %lor.lhs.false.4345, %lor.lhs.false.4341, %land.rhs.4337
  %2264 = phi i1 [ true, %lor.lhs.false.4349 ], [ true, %lor.lhs.false.4345 ], [ true, %lor.lhs.false.4341 ], [ true, %land.rhs.4337 ], [ %cmp4355, %lor.rhs.4353 ]
  br label %land.end.4359

land.end.4359:                                    ; preds = %lor.end.4357, %while.cond.4334
  %2265 = phi i1 [ false, %while.cond.4334 ], [ %2264, %lor.end.4357 ]
  br i1 %2265, label %while.body.4361, label %while.end.4363

while.body.4361:                                  ; preds = %land.end.4359
  %2266 = load i8*, i8** %d, align 8
  %incdec.ptr4362 = getelementptr inbounds i8, i8* %2266, i32 1
  store i8* %incdec.ptr4362, i8** %d, align 8
  br label %while.cond.4334

while.end.4363:                                   ; preds = %land.end.4359
  %2267 = load i32, i32* %tmp, align 4
  %tobool4364 = icmp ne i32 %2267, 0
  br i1 %tobool4364, label %if.end.4391, label %land.lhs.true.4365

land.lhs.true.4365:                               ; preds = %while.end.4363
  %2268 = load i32, i32* @PL_expect, align 4
  %cmp4366 = icmp eq i32 %2268, 3
  br i1 %cmp4366, label %land.lhs.true.4368, label %if.end.4391

land.lhs.true.4368:                               ; preds = %land.lhs.true.4365
  %2269 = load i8*, i8** %d, align 8
  %2270 = load i8*, i8** @PL_bufend, align 8
  %cmp4369 = icmp ult i8* %2269, %2270
  br i1 %cmp4369, label %land.lhs.true.4371, label %if.end.4391

land.lhs.true.4371:                               ; preds = %land.lhs.true.4368
  %2271 = load i8*, i8** %d, align 8
  %2272 = load i8, i8* %2271, align 1
  %conv4372 = sext i8 %2272 to i32
  %cmp4373 = icmp eq i32 %conv4372, 58
  br i1 %cmp4373, label %land.lhs.true.4375, label %if.end.4391

land.lhs.true.4375:                               ; preds = %land.lhs.true.4371
  %2273 = load i8*, i8** %d, align 8
  %add.ptr4376 = getelementptr inbounds i8, i8* %2273, i64 1
  %2274 = load i8, i8* %add.ptr4376, align 1
  %conv4377 = sext i8 %2274 to i32
  %cmp4378 = icmp ne i32 %conv4377, 58
  br i1 %cmp4378, label %if.then.4380, label %if.end.4391

if.then.4380:                                     ; preds = %land.lhs.true.4375
  %2275 = load i8*, i8** %d, align 8
  %add.ptr4381 = getelementptr inbounds i8, i8* %2275, i64 1
  store i8* %add.ptr4381, i8** %s, align 8
  %call4382 = call i8* @Perl_savepv(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i32 0))
  store i8* %call4382, i8** getelementptr inbounds (%union.YYSTYPE, %union.YYSTYPE* @PL_yylval, i32 0, i32 0), align 8
  %2276 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line4383 = getelementptr inbounds %struct.cop, %struct.cop* %2276, i32 0, i32 13
  %2277 = load i32, i32* %cop_line4383, align 4
  %2278 = load i32, i32* @PL_copline, align 4
  %cmp4384 = icmp ult i32 %2277, %2278
  br i1 %cmp4384, label %cond.true.4386, label %cond.false.4388

cond.true.4386:                                   ; preds = %if.then.4380
  %2279 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line4387 = getelementptr inbounds %struct.cop, %struct.cop* %2279, i32 0, i32 13
  %2280 = load i32, i32* %cop_line4387, align 4
  br label %cond.end.4389

cond.false.4388:                                  ; preds = %if.then.4380
  %2281 = load i32, i32* @PL_copline, align 4
  br label %cond.end.4389

cond.end.4389:                                    ; preds = %cond.false.4388, %cond.true.4386
  %cond4390 = phi i32 [ %2280, %cond.true.4386 ], [ %2281, %cond.false.4388 ]
  store i32 %cond4390, i32* @PL_copline, align 4
  %2282 = load i8*, i8** %s, align 8
  store i8* %2282, i8** @PL_bufptr, align 8
  store i32 266, i32* %retval
  br label %return

if.end.4391:                                      ; preds = %land.lhs.true.4375, %land.lhs.true.4371, %land.lhs.true.4368, %land.lhs.true.4365, %while.end.4363
  %2283 = load i64, i64* %len, align 8
  %conv4392 = trunc i64 %2283 to i32
  %call4393 = call i32 @Perl_keyword(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i32 0), i32 %conv4392)
  store i32 %call4393, i32* %tmp, align 4
  %2284 = load i8*, i8** %d, align 8
  %2285 = load i8, i8* %2284, align 1
  %conv4394 = sext i8 %2285 to i32
  %cmp4395 = icmp eq i32 %conv4394, 61
  br i1 %cmp4395, label %land.lhs.true.4397, label %if.end.4448

land.lhs.true.4397:                               ; preds = %if.end.4391
  %2286 = load i8*, i8** %d, align 8
  %arrayidx4398 = getelementptr inbounds i8, i8* %2286, i64 1
  %2287 = load i8, i8* %arrayidx4398, align 1
  %conv4399 = sext i8 %2287 to i32
  %cmp4400 = icmp eq i32 %conv4399, 62
  br i1 %cmp4400, label %if.then.4402, label %if.end.4448

if.then.4402:                                     ; preds = %land.lhs.true.4397
  %2288 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line4403 = getelementptr inbounds %struct.cop, %struct.cop* %2288, i32 0, i32 13
  %2289 = load i32, i32* %cop_line4403, align 4
  %2290 = load i32, i32* @PL_copline, align 4
  %cmp4404 = icmp ult i32 %2289, %2290
  br i1 %cmp4404, label %cond.true.4406, label %cond.false.4408

cond.true.4406:                                   ; preds = %if.then.4402
  %2291 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line4407 = getelementptr inbounds %struct.cop, %struct.cop* %2291, i32 0, i32 13
  %2292 = load i32, i32* %cop_line4407, align 4
  br label %cond.end.4409

cond.false.4408:                                  ; preds = %if.then.4402
  %2293 = load i32, i32* @PL_copline, align 4
  br label %cond.end.4409

cond.end.4409:                                    ; preds = %cond.false.4408, %cond.true.4406
  %cond4410 = phi i32 [ %2292, %cond.true.4406 ], [ %2293, %cond.false.4408 ]
  store i32 %cond4410, i32* @PL_copline, align 4
  %call4411 = call %struct.sv* @Perl_newSVpv(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i32 0), i64 0)
  %call4412 = call %struct.op* @Perl_newSVOP(i32 5, i32 0, %struct.sv* %call4411)
  store %struct.op* %call4412, %struct.op** bitcast (%union.YYSTYPE* @PL_yylval to %struct.op**), align 8
  %2294 = load %struct.op*, %struct.op** bitcast (%union.YYSTYPE* @PL_yylval to %struct.op**), align 8
  %op_private4413 = getelementptr inbounds %struct.op, %struct.op* %2294, i32 0, i32 7
  store i8 64, i8* %op_private4413, align 1
  %2295 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %tobool4414 = icmp ne %struct.sv* %2295, null
  br i1 %tobool4414, label %land.lhs.true.4415, label %lor.lhs.false.4424

land.lhs.true.4415:                               ; preds = %cond.end.4409
  %2296 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_flags4416 = getelementptr inbounds %struct.sv, %struct.sv* %2296, i32 0, i32 2
  %2297 = load i32, i32* %sv_flags4416, align 4
  %and4417 = and i32 %2297, 536870912
  %tobool4418 = icmp ne i32 %and4417, 0
  br i1 %tobool4418, label %land.lhs.true.4419, label %lor.lhs.false.4424

land.lhs.true.4419:                               ; preds = %land.lhs.true.4415
  %2298 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private4420 = getelementptr inbounds %struct.cop, %struct.cop* %2298, i32 0, i32 7
  %2299 = load i8, i8* %op_private4420, align 1
  %conv4421 = zext i8 %2299 to i32
  %and4422 = and i32 %conv4421, 8
  %tobool4423 = icmp ne i32 %and4422, 0
  br i1 %tobool4423, label %lor.lhs.false.4424, label %land.lhs.true.4427

lor.lhs.false.4424:                               ; preds = %land.lhs.true.4419, %land.lhs.true.4415, %cond.end.4409
  %2300 = load i32, i32* @PL_hints, align 4
  %and4425 = and i32 %2300, 8388608
  %tobool4426 = icmp ne i32 %and4425, 0
  br i1 %tobool4426, label %land.lhs.true.4427, label %if.end.4439

land.lhs.true.4427:                               ; preds = %lor.lhs.false.4424, %land.lhs.true.4419
  %2301 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private4428 = getelementptr inbounds %struct.cop, %struct.cop* %2301, i32 0, i32 7
  %2302 = load i8, i8* %op_private4428, align 1
  %conv4429 = zext i8 %2302 to i32
  %and4430 = and i32 %conv4429, 8
  %tobool4431 = icmp ne i32 %and4430, 0
  br i1 %tobool4431, label %if.end.4439, label %land.lhs.true.4432

land.lhs.true.4432:                               ; preds = %land.lhs.true.4427
  %2303 = load i64, i64* %len, align 8
  %call4433 = call signext i8 @Perl_is_utf8_string(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i32 0), i64 %2303)
  %conv4434 = sext i8 %call4433 to i32
  %tobool4435 = icmp ne i32 %conv4434, 0
  br i1 %tobool4435, label %if.then.4436, label %if.end.4439

if.then.4436:                                     ; preds = %land.lhs.true.4432
  %2304 = load %struct.op*, %struct.op** bitcast (%union.YYSTYPE* @PL_yylval to %struct.op**), align 8
  %2305 = bitcast %struct.op* %2304 to %struct.svop*
  %op_sv = getelementptr inbounds %struct.svop, %struct.svop* %2305, i32 0, i32 8
  %2306 = load %struct.sv*, %struct.sv** %op_sv, align 8
  %sv_flags4437 = getelementptr inbounds %struct.sv, %struct.sv* %2306, i32 0, i32 2
  %2307 = load i32, i32* %sv_flags4437, align 4
  %or4438 = or i32 %2307, 536870912
  store i32 %or4438, i32* %sv_flags4437, align 4
  br label %if.end.4439

if.end.4439:                                      ; preds = %if.then.4436, %land.lhs.true.4432, %land.lhs.true.4427, %lor.lhs.false.4424
  %2308 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line4440 = getelementptr inbounds %struct.cop, %struct.cop* %2308, i32 0, i32 13
  %2309 = load i32, i32* %cop_line4440, align 4
  %2310 = load i32, i32* @PL_copline, align 4
  %cmp4441 = icmp ult i32 %2309, %2310
  br i1 %cmp4441, label %cond.true.4443, label %cond.false.4445

cond.true.4443:                                   ; preds = %if.end.4439
  %2311 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line4444 = getelementptr inbounds %struct.cop, %struct.cop* %2311, i32 0, i32 13
  %2312 = load i32, i32* %cop_line4444, align 4
  br label %cond.end.4446

cond.false.4445:                                  ; preds = %if.end.4439
  %2313 = load i32, i32* @PL_copline, align 4
  br label %cond.end.4446

cond.end.4446:                                    ; preds = %cond.false.4445, %cond.true.4443
  %cond4447 = phi i32 [ %2312, %cond.true.4443 ], [ %2313, %cond.false.4445 ]
  store i32 %cond4447, i32* @PL_copline, align 4
  store i32 0, i32* @PL_expect, align 4
  %2314 = load i8*, i8** %s, align 8
  store i8* %2314, i8** @PL_bufptr, align 8
  store i32 257, i32* %retval
  br label %return

if.end.4448:                                      ; preds = %land.lhs.true.4397, %if.end.4391
  %2315 = load i32, i32* %tmp, align 4
  %cmp4449 = icmp slt i32 %2315, 0
  br i1 %cmp4449, label %if.then.4451, label %if.end.4647

if.then.4451:                                     ; preds = %if.end.4448
  store %struct.gv* null, %struct.gv** %ogv, align 8
  store %struct.gv* null, %struct.gv** %hgv, align 8
  %2316 = load i32, i32* @PL_expect, align 4
  %cmp4454 = icmp ne i32 %2316, 0
  br i1 %cmp4454, label %land.lhs.true.4456, label %if.end.4523

land.lhs.true.4456:                               ; preds = %if.then.4451
  %2317 = load i8*, i8** %s, align 8
  %2318 = load i8, i8* %2317, align 1
  %conv4457 = sext i8 %2318 to i32
  %cmp4458 = icmp ne i32 %conv4457, 58
  br i1 %cmp4458, label %if.then.4465, label %lor.lhs.false.4460

lor.lhs.false.4460:                               ; preds = %land.lhs.true.4456
  %2319 = load i8*, i8** %s, align 8
  %arrayidx4461 = getelementptr inbounds i8, i8* %2319, i64 1
  %2320 = load i8, i8* %arrayidx4461, align 1
  %conv4462 = sext i8 %2320 to i32
  %cmp4463 = icmp ne i32 %conv4462, 58
  br i1 %cmp4463, label %if.then.4465, label %if.end.4523

if.then.4465:                                     ; preds = %lor.lhs.false.4460, %land.lhs.true.4456
  %call4467 = call %struct.gv* @Perl_gv_fetchpv(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i32 0), i32 0, i32 12)
  store %struct.gv* %call4467, %struct.gv** %gv, align 8
  %tobool4468 = icmp ne %struct.gv* %call4467, null
  br i1 %tobool4468, label %land.lhs.true.4469, label %if.end.4495

land.lhs.true.4469:                               ; preds = %if.then.4465
  %2321 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_any4470 = getelementptr inbounds %struct.gv, %struct.gv* %2321, i32 0, i32 0
  %2322 = load %struct.xpvgv*, %struct.xpvgv** %sv_any4470, align 8
  %xgv_gp4471 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %2322, i32 0, i32 7
  %2323 = load %struct.gp*, %struct.gp** %xgv_gp4471, align 8
  %gp_cvgen = getelementptr inbounds %struct.gp, %struct.gp* %2323, i32 0, i32 8
  %2324 = load i32, i32* %gp_cvgen, align 4
  %tobool4472 = icmp ne i32 %2324, 0
  br i1 %tobool4472, label %cond.true.4473, label %cond.false.4474

cond.true.4473:                                   ; preds = %land.lhs.true.4469
  br label %cond.end.4477

cond.false.4474:                                  ; preds = %land.lhs.true.4469
  %2325 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_any4475 = getelementptr inbounds %struct.gv, %struct.gv* %2325, i32 0, i32 0
  %2326 = load %struct.xpvgv*, %struct.xpvgv** %sv_any4475, align 8
  %xgv_gp4476 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %2326, i32 0, i32 7
  %2327 = load %struct.gp*, %struct.gp** %xgv_gp4476, align 8
  %gp_cv = getelementptr inbounds %struct.gp, %struct.gp* %2327, i32 0, i32 7
  %2328 = load %struct.cv*, %struct.cv** %gp_cv, align 8
  br label %cond.end.4477

cond.end.4477:                                    ; preds = %cond.false.4474, %cond.true.4473
  %cond4478 = phi %struct.cv* [ null, %cond.true.4473 ], [ %2328, %cond.false.4474 ]
  store %struct.cv* %cond4478, %struct.cv** %cv, align 8
  %tobool4479 = icmp ne %struct.cv* %cond4478, null
  br i1 %tobool4479, label %if.then.4480, label %if.end.4495

if.then.4480:                                     ; preds = %cond.end.4477
  %2329 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_any4481 = getelementptr inbounds %struct.gv, %struct.gv* %2329, i32 0, i32 0
  %2330 = load %struct.xpvgv*, %struct.xpvgv** %sv_any4481, align 8
  %xgv_flags = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %2330, i32 0, i32 11
  %2331 = load i8, i8* %xgv_flags, align 1
  %conv4482 = zext i8 %2331 to i32
  %and4483 = and i32 %conv4482, 128
  %tobool4484 = icmp ne i32 %and4483, 0
  br i1 %tobool4484, label %if.then.4485, label %if.else.4486

if.then.4485:                                     ; preds = %if.then.4480
  %2332 = load %struct.gv*, %struct.gv** %gv, align 8
  store %struct.gv* %2332, %struct.gv** %ogv, align 8
  br label %if.end.4494

if.else.4486:                                     ; preds = %if.then.4480
  %2333 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any4487 = getelementptr inbounds %struct.cv, %struct.cv* %2333, i32 0, i32 0
  %2334 = load %struct.xpvcv*, %struct.xpvcv** %sv_any4487, align 8
  %xcv_flags4488 = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %2334, i32 0, i32 17
  %2335 = load i16, i16* %xcv_flags4488, align 2
  %conv4489 = zext i16 %2335 to i32
  %and4490 = and i32 %conv4489, 64
  %tobool4491 = icmp ne i32 %and4490, 0
  br i1 %tobool4491, label %if.end.4493, label %if.then.4492

if.then.4492:                                     ; preds = %if.else.4486
  %2336 = load %struct.gv*, %struct.gv** %gv, align 8
  store %struct.gv* %2336, %struct.gv** %hgv, align 8
  br label %if.end.4493

if.end.4493:                                      ; preds = %if.then.4492, %if.else.4486
  br label %if.end.4494

if.end.4494:                                      ; preds = %if.end.4493, %if.then.4485
  br label %if.end.4495

if.end.4495:                                      ; preds = %if.end.4494, %cond.end.4477, %if.then.4465
  %2337 = load %struct.gv*, %struct.gv** %ogv, align 8
  %tobool4496 = icmp ne %struct.gv* %2337, null
  br i1 %tobool4496, label %if.end.4522, label %land.lhs.true.4497

land.lhs.true.4497:                               ; preds = %if.end.4495
  %2338 = load %struct.hv*, %struct.hv** @PL_globalstash, align 8
  %2339 = load i64, i64* %len, align 8
  %conv4498 = trunc i64 %2339 to i32
  %call4499 = call %struct.sv** @Perl_hv_fetch(%struct.hv* %2338, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i32 0), i32 %conv4498, i32 0)
  %2340 = bitcast %struct.sv** %call4499 to %struct.gv**
  store %struct.gv** %2340, %struct.gv*** %gvp, align 8
  %tobool4500 = icmp ne %struct.gv** %2340, null
  br i1 %tobool4500, label %land.lhs.true.4501, label %if.end.4522

land.lhs.true.4501:                               ; preds = %land.lhs.true.4497
  %2341 = load %struct.gv**, %struct.gv*** %gvp, align 8
  %2342 = load %struct.gv*, %struct.gv** %2341, align 8
  store %struct.gv* %2342, %struct.gv** %gv, align 8
  %cmp4502 = icmp ne %struct.gv* %2342, bitcast (%struct.sv* @PL_sv_undef to %struct.gv*)
  br i1 %cmp4502, label %land.lhs.true.4504, label %if.end.4522

land.lhs.true.4504:                               ; preds = %land.lhs.true.4501
  %2343 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_any4505 = getelementptr inbounds %struct.gv, %struct.gv* %2343, i32 0, i32 0
  %2344 = load %struct.xpvgv*, %struct.xpvgv** %sv_any4505, align 8
  %xgv_gp4506 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %2344, i32 0, i32 7
  %2345 = load %struct.gp*, %struct.gp** %xgv_gp4506, align 8
  %gp_cvgen4507 = getelementptr inbounds %struct.gp, %struct.gp* %2345, i32 0, i32 8
  %2346 = load i32, i32* %gp_cvgen4507, align 4
  %tobool4508 = icmp ne i32 %2346, 0
  br i1 %tobool4508, label %cond.true.4509, label %cond.false.4510

cond.true.4509:                                   ; preds = %land.lhs.true.4504
  br i1 false, label %land.lhs.true.4515, label %if.end.4522

cond.false.4510:                                  ; preds = %land.lhs.true.4504
  %2347 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_any4511 = getelementptr inbounds %struct.gv, %struct.gv* %2347, i32 0, i32 0
  %2348 = load %struct.xpvgv*, %struct.xpvgv** %sv_any4511, align 8
  %xgv_gp4512 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %2348, i32 0, i32 7
  %2349 = load %struct.gp*, %struct.gp** %xgv_gp4512, align 8
  %gp_cv4513 = getelementptr inbounds %struct.gp, %struct.gp* %2349, i32 0, i32 7
  %2350 = load %struct.cv*, %struct.cv** %gp_cv4513, align 8
  %tobool4514 = icmp ne %struct.cv* %2350, null
  br i1 %tobool4514, label %land.lhs.true.4515, label %if.end.4522

land.lhs.true.4515:                               ; preds = %cond.false.4510, %cond.true.4509
  %2351 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_any4516 = getelementptr inbounds %struct.gv, %struct.gv* %2351, i32 0, i32 0
  %2352 = load %struct.xpvgv*, %struct.xpvgv** %sv_any4516, align 8
  %xgv_flags4517 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %2352, i32 0, i32 11
  %2353 = load i8, i8* %xgv_flags4517, align 1
  %conv4518 = zext i8 %2353 to i32
  %and4519 = and i32 %conv4518, 128
  %tobool4520 = icmp ne i32 %and4519, 0
  br i1 %tobool4520, label %if.then.4521, label %if.end.4522

if.then.4521:                                     ; preds = %land.lhs.true.4515
  %2354 = load %struct.gv*, %struct.gv** %gv, align 8
  store %struct.gv* %2354, %struct.gv** %ogv, align 8
  br label %if.end.4522

if.end.4522:                                      ; preds = %if.then.4521, %land.lhs.true.4515, %cond.false.4510, %cond.true.4509, %land.lhs.true.4501, %land.lhs.true.4497, %if.end.4495
  br label %if.end.4523

if.end.4523:                                      ; preds = %if.end.4522, %lor.lhs.false.4460, %if.then.4451
  %2355 = load %struct.gv*, %struct.gv** %ogv, align 8
  %tobool4524 = icmp ne %struct.gv* %2355, null
  br i1 %tobool4524, label %if.then.4525, label %if.else.4526

if.then.4525:                                     ; preds = %if.end.4523
  %2356 = load i32, i32* %tmp, align 4
  store i32 %2356, i32* %orig_keyword, align 4
  store i32 0, i32* %tmp, align 4
  br label %if.end.4646

if.else.4526:                                     ; preds = %if.end.4523
  %2357 = load %struct.gv*, %struct.gv** %gv, align 8
  %tobool4527 = icmp ne %struct.gv* %2357, null
  br i1 %tobool4527, label %land.lhs.true.4528, label %if.else.4563

land.lhs.true.4528:                               ; preds = %if.else.4526
  %2358 = load %struct.gv**, %struct.gv*** %gvp, align 8
  %tobool4529 = icmp ne %struct.gv** %2358, null
  br i1 %tobool4529, label %if.else.4563, label %land.lhs.true.4530

land.lhs.true.4530:                               ; preds = %land.lhs.true.4528
  %2359 = load i32, i32* %tmp, align 4
  %sub4531 = sub nsw i32 0, %2359
  %cmp4532 = icmp eq i32 %sub4531, 116
  br i1 %cmp4532, label %land.lhs.true.4534, label %if.else.4563

land.lhs.true.4534:                               ; preds = %land.lhs.true.4530
  %2360 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_any4535 = getelementptr inbounds %struct.gv, %struct.gv* %2360, i32 0, i32 0
  %2361 = load %struct.xpvgv*, %struct.xpvgv** %sv_any4535, align 8
  %xgv_gp4536 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %2361, i32 0, i32 7
  %2362 = load %struct.gp*, %struct.gp** %xgv_gp4536, align 8
  %gp_cvgen4537 = getelementptr inbounds %struct.gp, %struct.gp* %2362, i32 0, i32 8
  %2363 = load i32, i32* %gp_cvgen4537, align 4
  %tobool4538 = icmp ne i32 %2363, 0
  br i1 %tobool4538, label %cond.true.4539, label %cond.false.4540

cond.true.4539:                                   ; preds = %land.lhs.true.4534
  br i1 false, label %land.lhs.true.4545, label %if.else.4563

cond.false.4540:                                  ; preds = %land.lhs.true.4534
  %2364 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_any4541 = getelementptr inbounds %struct.gv, %struct.gv* %2364, i32 0, i32 0
  %2365 = load %struct.xpvgv*, %struct.xpvgv** %sv_any4541, align 8
  %xgv_gp4542 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %2365, i32 0, i32 7
  %2366 = load %struct.gp*, %struct.gp** %xgv_gp4542, align 8
  %gp_cv4543 = getelementptr inbounds %struct.gp, %struct.gp* %2366, i32 0, i32 7
  %2367 = load %struct.cv*, %struct.cv** %gp_cv4543, align 8
  %tobool4544 = icmp ne %struct.cv* %2367, null
  br i1 %tobool4544, label %land.lhs.true.4545, label %if.else.4563

land.lhs.true.4545:                               ; preds = %cond.false.4540, %cond.true.4539
  %2368 = load %struct.gv*, %struct.gv** @PL_incgv, align 8
  %sv_any4546 = getelementptr inbounds %struct.gv, %struct.gv* %2368, i32 0, i32 0
  %2369 = load %struct.xpvgv*, %struct.xpvgv** %sv_any4546, align 8
  %xgv_gp4547 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %2369, i32 0, i32 7
  %2370 = load %struct.gp*, %struct.gp** %xgv_gp4547, align 8
  %gp_hv = getelementptr inbounds %struct.gp, %struct.gp* %2370, i32 0, i32 5
  %2371 = load %struct.hv*, %struct.hv** %gp_hv, align 8
  %tobool4548 = icmp ne %struct.hv* %2371, null
  br i1 %tobool4548, label %cond.true.4549, label %cond.false.4553

cond.true.4549:                                   ; preds = %land.lhs.true.4545
  %2372 = load %struct.gv*, %struct.gv** @PL_incgv, align 8
  %sv_any4550 = getelementptr inbounds %struct.gv, %struct.gv* %2372, i32 0, i32 0
  %2373 = load %struct.xpvgv*, %struct.xpvgv** %sv_any4550, align 8
  %xgv_gp4551 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %2373, i32 0, i32 7
  %2374 = load %struct.gp*, %struct.gp** %xgv_gp4551, align 8
  %gp_hv4552 = getelementptr inbounds %struct.gp, %struct.gp* %2374, i32 0, i32 5
  %2375 = load %struct.hv*, %struct.hv** %gp_hv4552, align 8
  br label %cond.end.4558

cond.false.4553:                                  ; preds = %land.lhs.true.4545
  %2376 = load %struct.gv*, %struct.gv** @PL_incgv, align 8
  %call4554 = call %struct.gv* @Perl_gv_HVadd(%struct.gv* %2376)
  %sv_any4555 = getelementptr inbounds %struct.gv, %struct.gv* %call4554, i32 0, i32 0
  %2377 = load %struct.xpvgv*, %struct.xpvgv** %sv_any4555, align 8
  %xgv_gp4556 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %2377, i32 0, i32 7
  %2378 = load %struct.gp*, %struct.gp** %xgv_gp4556, align 8
  %gp_hv4557 = getelementptr inbounds %struct.gp, %struct.gp* %2378, i32 0, i32 5
  %2379 = load %struct.hv*, %struct.hv** %gp_hv4557, align 8
  br label %cond.end.4558

cond.end.4558:                                    ; preds = %cond.false.4553, %cond.true.4549
  %cond4559 = phi %struct.hv* [ %2375, %cond.true.4549 ], [ %2379, %cond.false.4553 ]
  %call4560 = call %struct.sv** @Perl_hv_fetch(%struct.hv* %cond4559, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.69, i32 0, i32 0), i32 9, i32 0)
  %tobool4561 = icmp ne %struct.sv** %call4560, null
  br i1 %tobool4561, label %if.else.4563, label %if.then.4562

if.then.4562:                                     ; preds = %cond.end.4558
  store i32 0, i32* %tmp, align 4
  br label %if.end.4645

if.else.4563:                                     ; preds = %cond.end.4558, %cond.false.4540, %cond.true.4539, %land.lhs.true.4530, %land.lhs.true.4528, %if.else.4526
  %2380 = load i32, i32* %tmp, align 4
  %sub4564 = sub nsw i32 0, %2380
  store i32 %sub4564, i32* %tmp, align 4
  %2381 = load i32, i32* %tmp, align 4
  %cmp4565 = icmp eq i32 %2381, 42
  br i1 %cmp4565, label %land.lhs.true.4567, label %if.end.4596

land.lhs.true.4567:                               ; preds = %if.else.4563
  %2382 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings4568 = getelementptr inbounds %struct.cop, %struct.cop* %2382, i32 0, i32 14
  %2383 = load %struct.sv*, %struct.sv** %cop_warnings4568, align 8
  %cmp4569 = icmp ne %struct.sv* %2383, null
  br i1 %cmp4569, label %land.lhs.true.4571, label %lor.lhs.false.4587

land.lhs.true.4571:                               ; preds = %land.lhs.true.4567
  %2384 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings4572 = getelementptr inbounds %struct.cop, %struct.cop* %2384, i32 0, i32 14
  %2385 = load %struct.sv*, %struct.sv** %cop_warnings4572, align 8
  %cmp4573 = icmp ne %struct.sv* %2385, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 2)
  br i1 %cmp4573, label %land.lhs.true.4575, label %lor.lhs.false.4587

land.lhs.true.4575:                               ; preds = %land.lhs.true.4571
  %2386 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings4576 = getelementptr inbounds %struct.cop, %struct.cop* %2386, i32 0, i32 14
  %2387 = load %struct.sv*, %struct.sv** %cop_warnings4576, align 8
  %cmp4577 = icmp eq %struct.sv* %2387, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 1)
  br i1 %cmp4577, label %if.then.4595, label %lor.lhs.false.4579

lor.lhs.false.4579:                               ; preds = %land.lhs.true.4575
  %2388 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings4580 = getelementptr inbounds %struct.cop, %struct.cop* %2388, i32 0, i32 14
  %2389 = load %struct.sv*, %struct.sv** %cop_warnings4580, align 8
  %sv_any4581 = getelementptr inbounds %struct.sv, %struct.sv* %2389, i32 0, i32 0
  %2390 = load i8*, i8** %sv_any4581, align 8
  %2391 = bitcast i8* %2390 to %struct.xpv*
  %xpv_pv4582 = getelementptr inbounds %struct.xpv, %struct.xpv* %2391, i32 0, i32 0
  %2392 = load i8*, i8** %xpv_pv4582, align 8
  %arrayidx4583 = getelementptr inbounds i8, i8* %2392, i64 3
  %2393 = load i8, i8* %arrayidx4583, align 1
  %conv4584 = sext i8 %2393 to i32
  %and4585 = and i32 %conv4584, 1
  %tobool4586 = icmp ne i32 %and4585, 0
  br i1 %tobool4586, label %if.then.4595, label %lor.lhs.false.4587

lor.lhs.false.4587:                               ; preds = %lor.lhs.false.4579, %land.lhs.true.4571, %land.lhs.true.4567
  %2394 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings4588 = getelementptr inbounds %struct.cop, %struct.cop* %2394, i32 0, i32 14
  %2395 = load %struct.sv*, %struct.sv** %cop_warnings4588, align 8
  %cmp4589 = icmp eq %struct.sv* %2395, null
  br i1 %cmp4589, label %land.lhs.true.4591, label %if.end.4596

land.lhs.true.4591:                               ; preds = %lor.lhs.false.4587
  %2396 = load i8, i8* @PL_dowarn, align 1
  %conv4592 = zext i8 %2396 to i32
  %and4593 = and i32 %conv4592, 1
  %tobool4594 = icmp ne i32 %and4593, 0
  br i1 %tobool4594, label %if.then.4595, label %if.end.4596

if.then.4595:                                     ; preds = %land.lhs.true.4591, %lor.lhs.false.4579, %land.lhs.true.4575
  call void (i32, i8*, ...) @Perl_warner(i32 12, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.70, i32 0, i32 0))
  br label %if.end.4596

if.end.4596:                                      ; preds = %if.then.4595, %land.lhs.true.4591, %lor.lhs.false.4587, %if.else.4563
  store %struct.gv* null, %struct.gv** %gv, align 8
  store %struct.gv** null, %struct.gv*** %gvp, align 8
  %2397 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings4597 = getelementptr inbounds %struct.cop, %struct.cop* %2397, i32 0, i32 14
  %2398 = load %struct.sv*, %struct.sv** %cop_warnings4597, align 8
  %cmp4598 = icmp ne %struct.sv* %2398, null
  br i1 %cmp4598, label %land.lhs.true.4600, label %lor.lhs.false.4616

land.lhs.true.4600:                               ; preds = %if.end.4596
  %2399 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings4601 = getelementptr inbounds %struct.cop, %struct.cop* %2399, i32 0, i32 14
  %2400 = load %struct.sv*, %struct.sv** %cop_warnings4601, align 8
  %cmp4602 = icmp ne %struct.sv* %2400, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 2)
  br i1 %cmp4602, label %land.lhs.true.4604, label %lor.lhs.false.4616

land.lhs.true.4604:                               ; preds = %land.lhs.true.4600
  %2401 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings4605 = getelementptr inbounds %struct.cop, %struct.cop* %2401, i32 0, i32 14
  %2402 = load %struct.sv*, %struct.sv** %cop_warnings4605, align 8
  %cmp4606 = icmp eq %struct.sv* %2402, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 1)
  br i1 %cmp4606, label %land.lhs.true.4624, label %lor.lhs.false.4608

lor.lhs.false.4608:                               ; preds = %land.lhs.true.4604
  %2403 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings4609 = getelementptr inbounds %struct.cop, %struct.cop* %2403, i32 0, i32 14
  %2404 = load %struct.sv*, %struct.sv** %cop_warnings4609, align 8
  %sv_any4610 = getelementptr inbounds %struct.sv, %struct.sv* %2404, i32 0, i32 0
  %2405 = load i8*, i8** %sv_any4610, align 8
  %2406 = bitcast i8* %2405 to %struct.xpv*
  %xpv_pv4611 = getelementptr inbounds %struct.xpv, %struct.xpv* %2406, i32 0, i32 0
  %2407 = load i8*, i8** %xpv_pv4611, align 8
  %arrayidx4612 = getelementptr inbounds i8, i8* %2407, i64 7
  %2408 = load i8, i8* %arrayidx4612, align 1
  %conv4613 = sext i8 %2408 to i32
  %and4614 = and i32 %conv4613, 4
  %tobool4615 = icmp ne i32 %and4614, 0
  br i1 %tobool4615, label %land.lhs.true.4624, label %lor.lhs.false.4616

lor.lhs.false.4616:                               ; preds = %lor.lhs.false.4608, %land.lhs.true.4600, %if.end.4596
  %2409 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings4617 = getelementptr inbounds %struct.cop, %struct.cop* %2409, i32 0, i32 14
  %2410 = load %struct.sv*, %struct.sv** %cop_warnings4617, align 8
  %cmp4618 = icmp eq %struct.sv* %2410, null
  br i1 %cmp4618, label %land.lhs.true.4620, label %if.end.4644

land.lhs.true.4620:                               ; preds = %lor.lhs.false.4616
  %2411 = load i8, i8* @PL_dowarn, align 1
  %conv4621 = zext i8 %2411 to i32
  %and4622 = and i32 %conv4621, 1
  %tobool4623 = icmp ne i32 %and4622, 0
  br i1 %tobool4623, label %land.lhs.true.4624, label %if.end.4644

land.lhs.true.4624:                               ; preds = %land.lhs.true.4620, %lor.lhs.false.4608, %land.lhs.true.4604
  %2412 = load %struct.gv*, %struct.gv** %hgv, align 8
  %tobool4625 = icmp ne %struct.gv* %2412, null
  br i1 %tobool4625, label %land.lhs.true.4626, label %if.end.4644

land.lhs.true.4626:                               ; preds = %land.lhs.true.4624
  %2413 = load i32, i32* %tmp, align 4
  %cmp4627 = icmp ne i32 %2413, 243
  br i1 %cmp4627, label %land.lhs.true.4629, label %if.end.4644

land.lhs.true.4629:                               ; preds = %land.lhs.true.4626
  %2414 = load i32, i32* %tmp, align 4
  %cmp4630 = icmp ne i32 %2414, 8
  br i1 %cmp4630, label %if.then.4632, label %if.end.4644

if.then.4632:                                     ; preds = %land.lhs.true.4629
  %2415 = load %struct.gv*, %struct.gv** %hgv, align 8
  %sv_any4633 = getelementptr inbounds %struct.gv, %struct.gv* %2415, i32 0, i32 0
  %2416 = load %struct.xpvgv*, %struct.xpvgv** %sv_any4633, align 8
  %xgv_gp4634 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %2416, i32 0, i32 7
  %2417 = load %struct.gp*, %struct.gp** %xgv_gp4634, align 8
  %gp_egv = getelementptr inbounds %struct.gp, %struct.gp* %2417, i32 0, i32 6
  %2418 = load %struct.gv*, %struct.gv** %gp_egv, align 8
  %tobool4635 = icmp ne %struct.gv* %2418, null
  br i1 %tobool4635, label %cond.true.4636, label %cond.false.4640

cond.true.4636:                                   ; preds = %if.then.4632
  %2419 = load %struct.gv*, %struct.gv** %hgv, align 8
  %sv_any4637 = getelementptr inbounds %struct.gv, %struct.gv* %2419, i32 0, i32 0
  %2420 = load %struct.xpvgv*, %struct.xpvgv** %sv_any4637, align 8
  %xgv_gp4638 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %2420, i32 0, i32 7
  %2421 = load %struct.gp*, %struct.gp** %xgv_gp4638, align 8
  %gp_egv4639 = getelementptr inbounds %struct.gp, %struct.gp* %2421, i32 0, i32 6
  %2422 = load %struct.gv*, %struct.gv** %gp_egv4639, align 8
  br label %cond.end.4641

cond.false.4640:                                  ; preds = %if.then.4632
  %2423 = load %struct.gv*, %struct.gv** %hgv, align 8
  br label %cond.end.4641

cond.end.4641:                                    ; preds = %cond.false.4640, %cond.true.4636
  %cond4642 = phi %struct.gv* [ %2422, %cond.true.4636 ], [ %2423, %cond.false.4640 ]
  %sv_any4643 = getelementptr inbounds %struct.gv, %struct.gv* %cond4642, i32 0, i32 0
  %2424 = load %struct.xpvgv*, %struct.xpvgv** %sv_any4643, align 8
  %xgv_name = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %2424, i32 0, i32 8
  %2425 = load i8*, i8** %xgv_name, align 8
  call void (i32, i8*, ...) @Perl_warner(i32 29, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.71, i32 0, i32 0), i8* %2425, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.72, i32 0, i32 0))
  br label %if.end.4644

if.end.4644:                                      ; preds = %cond.end.4641, %land.lhs.true.4629, %land.lhs.true.4626, %land.lhs.true.4624, %land.lhs.true.4620, %lor.lhs.false.4616
  br label %if.end.4645

if.end.4645:                                      ; preds = %if.end.4644, %if.then.4562
  br label %if.end.4646

if.end.4646:                                      ; preds = %if.end.4645, %if.then.4525
  br label %if.end.4647

if.end.4647:                                      ; preds = %if.end.4646, %if.end.4448
  br label %reserved_word

reserved_word:                                    ; preds = %if.end.5597, %if.end.4647
  %2426 = load i32, i32* %tmp, align 4
  switch i32 %2426, label %sw.default.4648 [
    i32 1, label %sw.bb.5347
    i32 2, label %sw.bb.5382
    i32 3, label %sw.bb.5395
    i32 4, label %sw.bb.5412
    i32 5, label %sw.bb.5412
    i32 6, label %sw.bb.5571
    i32 9, label %sw.bb.5571
    i32 7, label %sw.bb.5571
    i32 12, label %sw.bb.5571
    i32 11, label %sw.bb.5571
    i32 10, label %sw.bb.5571
    i32 8, label %sw.bb.5576
    i32 13, label %sw.bb.5599
    i32 15, label %sw.bb.5611
    i32 14, label %sw.bb.5623
    i32 16, label %sw.bb.5625
    i32 17, label %sw.bb.5626
    i32 18, label %sw.bb.5628
    i32 19, label %sw.bb.5630
    i32 20, label %sw.bb.5632
    i32 25, label %sw.bb.5634
    i32 33, label %sw.bb.5646
    i32 22, label %sw.bb.5647
    i32 29, label %sw.bb.5660
    i32 30, label %sw.bb.5672
    i32 31, label %sw.bb.5684
    i32 21, label %sw.bb.5685
    i32 35, label %sw.bb.5697
    i32 23, label %sw.bb.5699
    i32 26, label %sw.bb.5701
    i32 32, label %sw.bb.5703
    i32 27, label %sw.bb.5705
    i32 34, label %sw.bb.5717
    i32 28, label %sw.bb.5729
    i32 41, label %sw.bb.5741
    i32 40, label %sw.bb.5754
    i32 38, label %sw.bb.5757
    i32 39, label %sw.bb.5769
    i32 37, label %sw.bb.5781
    i32 36, label %sw.bb.5784
    i32 42, label %sw.bb.5796
    i32 44, label %sw.bb.5798
    i32 45, label %sw.bb.5799
    i32 53, label %sw.bb.5801
    i32 56, label %sw.bb.5802
    i32 57, label %sw.bb.5814
    i32 54, label %sw.bb.5826
    i32 52, label %sw.bb.5843
    i32 58, label %sw.bb.5855
    i32 43, label %sw.bb.5867
    i32 55, label %sw.bb.5879
    i32 47, label %sw.bb.5881
    i32 48, label %sw.bb.5882
    i32 51, label %sw.bb.5883
    i32 49, label %sw.bb.5884
    i32 50, label %sw.bb.5885
    i32 46, label %sw.bb.5886
    i32 62, label %sw.bb.5887
    i32 63, label %sw.bb.5887
    i32 66, label %sw.bb.6077
    i32 64, label %sw.bb.6079
    i32 59, label %sw.bb.6080
    i32 60, label %sw.bb.6082
    i32 61, label %sw.bb.6094
    i32 98, label %sw.bb.6096
    i32 67, label %sw.bb.6097
    i32 97, label %sw.bb.6098
    i32 96, label %sw.bb.6100
    i32 95, label %sw.bb.6102
    i32 68, label %sw.bb.6114
    i32 81, label %sw.bb.6126
    i32 80, label %sw.bb.6127
    i32 82, label %sw.bb.6139
    i32 83, label %sw.bb.6141
    i32 84, label %sw.bb.6153
    i32 85, label %sw.bb.6155
    i32 86, label %sw.bb.6156
    i32 87, label %sw.bb.6157
    i32 88, label %sw.bb.6169
    i32 79, label %sw.bb.6181
    i32 73, label %sw.bb.6193
    i32 72, label %sw.bb.6205
    i32 74, label %sw.bb.6207
    i32 77, label %sw.bb.6208
    i32 76, label %sw.bb.6220
    i32 78, label %sw.bb.6222
    i32 89, label %sw.bb.6223
    i32 90, label %sw.bb.6225
    i32 91, label %sw.bb.6227
    i32 92, label %sw.bb.6228
    i32 93, label %sw.bb.6240
    i32 69, label %sw.bb.6242
    i32 71, label %sw.bb.6243
    i32 70, label %sw.bb.6255
    i32 75, label %sw.bb.6267
    i32 94, label %sw.bb.6268
    i32 99, label %sw.bb.6270
    i32 100, label %sw.bb.6282
    i32 101, label %sw.bb.6284
    i32 102, label %sw.bb.6286
    i32 103, label %sw.bb.6298
    i32 104, label %sw.bb.6300
    i32 105, label %sw.bb.6302
    i32 106, label %sw.bb.6314
    i32 107, label %sw.bb.6316
    i32 108, label %sw.bb.6318
    i32 109, label %sw.bb.6330
    i32 114, label %sw.bb.6342
    i32 111, label %sw.bb.6343
    i32 119, label %sw.bb.6355
    i32 110, label %sw.bb.6356
    i32 115, label %sw.bb.6357
    i32 117, label %sw.bb.6369
    i32 112, label %sw.bb.6381
    i32 113, label %sw.bb.6383
    i32 116, label %sw.bb.6385
    i32 118, label %sw.bb.6397
    i32 120, label %sw.bb.6409
    i32 121, label %sw.bb.6420
    i32 122, label %sw.bb.6422
    i32 123, label %sw.bb.6424
    i32 124, label %sw.bb.6426
    i32 125, label %sw.bb.6428
    i32 126, label %sw.bb.6430
    i32 137, label %sw.bb.6432
    i32 127, label %sw.bb.6432
    i32 129, label %sw.bb.6504
    i32 128, label %sw.bb.6506
    i32 130, label %sw.bb.6507
    i32 131, label %sw.bb.6515
    i32 133, label %sw.bb.6526
    i32 135, label %sw.bb.6720
    i32 136, label %sw.bb.6721
    i32 132, label %sw.bb.6733
    i32 134, label %sw.bb.6745
    i32 143, label %sw.bb.6747
    i32 144, label %sw.bb.6749
    i32 145, label %sw.bb.6751
    i32 146, label %sw.bb.6763
    i32 141, label %sw.bb.6765
    i32 142, label %sw.bb.6777
    i32 138, label %sw.bb.6789
    i32 139, label %sw.bb.6791
    i32 140, label %sw.bb.6793
    i32 147, label %sw.bb.6795
    i32 150, label %sw.bb.6809
    i32 151, label %sw.bb.6821
    i32 148, label %sw.bb.7016
    i32 149, label %sw.bb.7038
    i32 152, label %sw.bb.7049
    i32 165, label %sw.bb.7063
    i32 163, label %sw.bb.7064
    i32 164, label %sw.bb.7170
    i32 160, label %sw.bb.7182
    i32 162, label %sw.bb.7184
    i32 153, label %sw.bb.7186
    i32 169, label %sw.bb.7198
    i32 168, label %sw.bb.7210
    i32 154, label %sw.bb.7212
    i32 155, label %sw.bb.7214
    i32 156, label %sw.bb.7226
    i32 158, label %sw.bb.7238
    i32 167, label %sw.bb.7250
    i32 159, label %sw.bb.7262
    i32 166, label %sw.bb.7264
    i32 157, label %sw.bb.7266
    i32 161, label %sw.bb.7278
    i32 170, label %sw.bb.7290
    i32 24, label %sw.bb.7304
    i32 171, label %sw.bb.7316
    i32 174, label %sw.bb.7328
    i32 172, label %sw.bb.7330
    i32 175, label %sw.bb.7332
    i32 176, label %sw.bb.7334
    i32 177, label %sw.bb.7336
    i32 178, label %sw.bb.7338
    i32 182, label %sw.bb.7340
    i32 183, label %sw.bb.7342
    i32 180, label %sw.bb.7344
    i32 181, label %sw.bb.7356
    i32 186, label %sw.bb.7368
    i32 184, label %sw.bb.7380
    i32 185, label %sw.bb.7392
    i32 179, label %sw.bb.7393
    i32 173, label %sw.bb.7394
    i32 187, label %sw.bb.7396
    i32 188, label %sw.bb.7398
    i32 189, label %sw.bb.7410
    i32 190, label %sw.bb.7412
    i32 191, label %sw.bb.7414
    i32 192, label %sw.bb.7416
    i32 193, label %sw.bb.7418
    i32 194, label %sw.bb.7420
    i32 195, label %sw.bb.7432
    i32 196, label %sw.bb.7444
    i32 197, label %sw.bb.7446
    i32 198, label %sw.bb.7448
    i32 200, label %sw.bb.7461
    i32 201, label %sw.bb.7463
    i32 199, label %sw.bb.7465
    i32 202, label %sw.bb.7467
    i32 203, label %sw.bb.7479
    i32 204, label %sw.bb.7491
    i32 205, label %sw.bb.7503
    i32 207, label %sw.bb.7515
    i32 65, label %sw.bb.7517
    i32 206, label %sw.bb.7517
    i32 213, label %sw.bb.7758
    i32 208, label %sw.bb.7760
    i32 209, label %sw.bb.7762
    i32 210, label %sw.bb.7764
    i32 212, label %sw.bb.7766
    i32 211, label %sw.bb.7768
    i32 214, label %sw.bb.7770
    i32 221, label %sw.bb.7772
    i32 215, label %sw.bb.7783
    i32 216, label %sw.bb.7795
    i32 217, label %sw.bb.7807
    i32 218, label %sw.bb.7809
    i32 219, label %sw.bb.7821
    i32 220, label %sw.bb.7822
    i32 222, label %sw.bb.7823
    i32 223, label %sw.bb.7825
    i32 224, label %sw.bb.7837
    i32 231, label %sw.bb.7849
    i32 232, label %sw.bb.7861
    i32 227, label %sw.bb.7863
    i32 228, label %sw.bb.7865
    i32 226, label %sw.bb.7867
    i32 229, label %sw.bb.7879
    i32 234, label %sw.bb.7881
    i32 225, label %sw.bb.7883
    i32 230, label %sw.bb.7895
    i32 233, label %sw.bb.7897
    i32 235, label %sw.bb.7952
    i32 236, label %sw.bb.7964
    i32 241, label %sw.bb.7966
    i32 240, label %sw.bb.7968
    i32 237, label %sw.bb.7971
    i32 238, label %sw.bb.7972
    i32 239, label %sw.bb.7974
    i32 242, label %sw.bb.7975
    i32 243, label %sw.bb.7988
    i32 244, label %sw.bb.7994
    i32 245, label %sw.bb.7995
  ]

sw.default.4648:                                  ; preds = %reserved_word
  br label %just_a_word

just_a_word:                                      ; preds = %if.end.7993, %if.end.5598, %if.end.5575, %sw.default.4648, %if.then.4332, %if.then.1430
  store i32 0, i32* %pkgname, align 4
  %2427 = load i8*, i8** @PL_bufptr, align 8
  %2428 = load i8*, i8** @PL_oldoldbufptr, align 8
  %cmp4653 = icmp eq i8* %2427, %2428
  br i1 %cmp4653, label %cond.true.4655, label %cond.false.4656

cond.true.4655:                                   ; preds = %just_a_word
  br label %cond.end.4659

cond.false.4656:                                  ; preds = %just_a_word
  %2429 = load i8*, i8** @PL_bufptr, align 8
  %arrayidx4657 = getelementptr inbounds i8, i8* %2429, i64 -1
  %2430 = load i8, i8* %arrayidx4657, align 1
  %conv4658 = sext i8 %2430 to i32
  br label %cond.end.4659

cond.end.4659:                                    ; preds = %cond.false.4656, %cond.true.4655
  %cond4660 = phi i32 [ 0, %cond.true.4655 ], [ %conv4658, %cond.false.4656 ]
  %conv4661 = trunc i32 %cond4660 to i8
  store i8 %conv4661, i8* %lastchar, align 1
  %2431 = load i8*, i8** %s, align 8
  %2432 = load i8, i8* %2431, align 1
  %conv4662 = sext i8 %2432 to i32
  %cmp4663 = icmp eq i32 %conv4662, 39
  br i1 %cmp4663, label %if.then.4674, label %lor.lhs.false.4665

lor.lhs.false.4665:                               ; preds = %cond.end.4659
  %2433 = load i8*, i8** %s, align 8
  %2434 = load i8, i8* %2433, align 1
  %conv4666 = sext i8 %2434 to i32
  %cmp4667 = icmp eq i32 %conv4666, 58
  br i1 %cmp4667, label %land.lhs.true.4669, label %if.end.4687

land.lhs.true.4669:                               ; preds = %lor.lhs.false.4665
  %2435 = load i8*, i8** %s, align 8
  %arrayidx4670 = getelementptr inbounds i8, i8* %2435, i64 1
  %2436 = load i8, i8* %arrayidx4670, align 1
  %conv4671 = sext i8 %2436 to i32
  %cmp4672 = icmp eq i32 %conv4671, 58
  br i1 %cmp4672, label %if.then.4674, label %if.end.4687

if.then.4674:                                     ; preds = %land.lhs.true.4669, %cond.end.4659
  %2437 = load i8*, i8** %s, align 8
  %2438 = load i64, i64* %len, align 8
  %add.ptr4676 = getelementptr inbounds i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i32 0), i64 %2438
  %2439 = load i64, i64* %len, align 8
  %sub4677 = sub i64 256, %2439
  %call4678 = call i8* @S_scan_word(i8* %2437, i8* %add.ptr4676, i64 %sub4677, i32 1, i64* %morelen)
  store i8* %call4678, i8** %s, align 8
  %2440 = load i64, i64* %morelen, align 8
  %tobool4679 = icmp ne i64 %2440, 0
  br i1 %tobool4679, label %if.end.4685, label %if.then.4680

if.then.4680:                                     ; preds = %if.then.4674
  %2441 = load i8*, i8** %s, align 8
  %2442 = load i8, i8* %2441, align 1
  %conv4681 = sext i8 %2442 to i32
  %cmp4682 = icmp eq i32 %conv4681, 39
  %cond4684 = select i1 %cmp4682, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.74, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.75, i32 0, i32 0)
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.73, i32 0, i32 0), i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i32 0), i8* %cond4684)
  br label %if.end.4685

if.end.4685:                                      ; preds = %if.then.4680, %if.then.4674
  %2443 = load i64, i64* %morelen, align 8
  %2444 = load i64, i64* %len, align 8
  %add4686 = add i64 %2444, %2443
  store i64 %add4686, i64* %len, align 8
  store i32 1, i32* %pkgname, align 4
  br label %if.end.4687

if.end.4687:                                      ; preds = %if.end.4685, %land.lhs.true.4669, %lor.lhs.false.4665
  %2445 = load i32, i32* @PL_expect, align 4
  %cmp4688 = icmp eq i32 %2445, 0
  br i1 %cmp4688, label %if.then.4690, label %if.end.4700

if.then.4690:                                     ; preds = %if.end.4687
  %2446 = load i8*, i8** @PL_bufptr, align 8
  %2447 = load i8*, i8** @PL_linestart, align 8
  %cmp4691 = icmp eq i8* %2446, %2447
  br i1 %cmp4691, label %if.then.4693, label %if.else.4698

if.then.4693:                                     ; preds = %if.then.4690
  %2448 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line4694 = getelementptr inbounds %struct.cop, %struct.cop* %2448, i32 0, i32 13
  %2449 = load i32, i32* %cop_line4694, align 4
  %dec4695 = add i32 %2449, -1
  store i32 %dec4695, i32* %cop_line4694, align 4
  call void (i32, i8*, ...) @Perl_warner(i32 38, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @PL_warn_nosemi, i32 0, i32 0))
  %2450 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line4696 = getelementptr inbounds %struct.cop, %struct.cop* %2450, i32 0, i32 13
  %2451 = load i32, i32* %cop_line4696, align 4
  %inc4697 = add i32 %2451, 1
  store i32 %inc4697, i32* %cop_line4696, align 4
  br label %if.end.4699

if.else.4698:                                     ; preds = %if.then.4690
  %2452 = load i8*, i8** %s, align 8
  call void @S_no_op(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.76, i32 0, i32 0), i8* %2452)
  br label %if.end.4699

if.end.4699:                                      ; preds = %if.else.4698, %if.then.4693
  br label %if.end.4700

if.end.4700:                                      ; preds = %if.end.4699, %if.end.4687
  %2453 = load i64, i64* %len, align 8
  %cmp4701 = icmp ugt i64 %2453, 2
  br i1 %cmp4701, label %land.lhs.true.4703, label %if.else.4750

land.lhs.true.4703:                               ; preds = %if.end.4700
  %2454 = load i64, i64* %len, align 8
  %sub4704 = sub i64 %2454, 2
  %arrayidx4705 = getelementptr inbounds [256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i64 %sub4704
  %2455 = load i8, i8* %arrayidx4705, align 1
  %conv4706 = sext i8 %2455 to i32
  %cmp4707 = icmp eq i32 %conv4706, 58
  br i1 %cmp4707, label %land.lhs.true.4709, label %if.else.4750

land.lhs.true.4709:                               ; preds = %land.lhs.true.4703
  %2456 = load i64, i64* %len, align 8
  %sub4710 = sub i64 %2456, 1
  %arrayidx4711 = getelementptr inbounds [256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i64 %sub4710
  %2457 = load i8, i8* %arrayidx4711, align 1
  %conv4712 = sext i8 %2457 to i32
  %cmp4713 = icmp eq i32 %conv4712, 58
  br i1 %cmp4713, label %if.then.4715, label %if.else.4750

if.then.4715:                                     ; preds = %land.lhs.true.4709
  %2458 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings4716 = getelementptr inbounds %struct.cop, %struct.cop* %2458, i32 0, i32 14
  %2459 = load %struct.sv*, %struct.sv** %cop_warnings4716, align 8
  %cmp4717 = icmp ne %struct.sv* %2459, null
  br i1 %cmp4717, label %land.lhs.true.4719, label %lor.lhs.false.4735

land.lhs.true.4719:                               ; preds = %if.then.4715
  %2460 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings4720 = getelementptr inbounds %struct.cop, %struct.cop* %2460, i32 0, i32 14
  %2461 = load %struct.sv*, %struct.sv** %cop_warnings4720, align 8
  %cmp4721 = icmp ne %struct.sv* %2461, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 2)
  br i1 %cmp4721, label %land.lhs.true.4723, label %lor.lhs.false.4735

land.lhs.true.4723:                               ; preds = %land.lhs.true.4719
  %2462 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings4724 = getelementptr inbounds %struct.cop, %struct.cop* %2462, i32 0, i32 14
  %2463 = load %struct.sv*, %struct.sv** %cop_warnings4724, align 8
  %cmp4725 = icmp eq %struct.sv* %2463, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 1)
  br i1 %cmp4725, label %land.lhs.true.4743, label %lor.lhs.false.4727

lor.lhs.false.4727:                               ; preds = %land.lhs.true.4723
  %2464 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings4728 = getelementptr inbounds %struct.cop, %struct.cop* %2464, i32 0, i32 14
  %2465 = load %struct.sv*, %struct.sv** %cop_warnings4728, align 8
  %sv_any4729 = getelementptr inbounds %struct.sv, %struct.sv* %2465, i32 0, i32 0
  %2466 = load i8*, i8** %sv_any4729, align 8
  %2467 = bitcast i8* %2466 to %struct.xpv*
  %xpv_pv4730 = getelementptr inbounds %struct.xpv, %struct.xpv* %2467, i32 0, i32 0
  %2468 = load i8*, i8** %xpv_pv4730, align 8
  %arrayidx4731 = getelementptr inbounds i8, i8* %2468, i64 7
  %2469 = load i8, i8* %arrayidx4731, align 1
  %conv4732 = sext i8 %2469 to i32
  %and4733 = and i32 %conv4732, 16
  %tobool4734 = icmp ne i32 %and4733, 0
  br i1 %tobool4734, label %land.lhs.true.4743, label %lor.lhs.false.4735

lor.lhs.false.4735:                               ; preds = %lor.lhs.false.4727, %land.lhs.true.4719, %if.then.4715
  %2470 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings4736 = getelementptr inbounds %struct.cop, %struct.cop* %2470, i32 0, i32 14
  %2471 = load %struct.sv*, %struct.sv** %cop_warnings4736, align 8
  %cmp4737 = icmp eq %struct.sv* %2471, null
  br i1 %cmp4737, label %land.lhs.true.4739, label %if.end.4747

land.lhs.true.4739:                               ; preds = %lor.lhs.false.4735
  %2472 = load i8, i8* @PL_dowarn, align 1
  %conv4740 = zext i8 %2472 to i32
  %and4741 = and i32 %conv4740, 1
  %tobool4742 = icmp ne i32 %and4741, 0
  br i1 %tobool4742, label %land.lhs.true.4743, label %if.end.4747

land.lhs.true.4743:                               ; preds = %land.lhs.true.4739, %lor.lhs.false.4727, %land.lhs.true.4723
  %call4744 = call %struct.gv* @Perl_gv_fetchpv(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i32 0), i32 0, i32 11)
  %tobool4745 = icmp ne %struct.gv* %call4744, null
  br i1 %tobool4745, label %if.end.4747, label %if.then.4746

if.then.4746:                                     ; preds = %land.lhs.true.4743
  call void (i32, i8*, ...) @Perl_warner(i32 30, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.77, i32 0, i32 0), i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i32 0))
  br label %if.end.4747

if.end.4747:                                      ; preds = %if.then.4746, %land.lhs.true.4743, %land.lhs.true.4739, %lor.lhs.false.4735
  %2473 = load i64, i64* %len, align 8
  %sub4748 = sub i64 %2473, 2
  store i64 %sub4748, i64* %len, align 8
  %2474 = load i64, i64* %len, align 8
  %arrayidx4749 = getelementptr inbounds [256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i64 %2474
  store i8 0, i8* %arrayidx4749, align 1
  store %struct.gv* null, %struct.gv** %gv, align 8
  store %struct.gv** null, %struct.gv*** %gvp, align 8
  br label %if.end.4755

if.else.4750:                                     ; preds = %land.lhs.true.4709, %land.lhs.true.4703, %if.end.4700
  store i64 0, i64* %len, align 8
  %2475 = load %struct.gv*, %struct.gv** %gv, align 8
  %tobool4751 = icmp ne %struct.gv* %2475, null
  br i1 %tobool4751, label %if.end.4754, label %if.then.4752

if.then.4752:                                     ; preds = %if.else.4750
  %call4753 = call %struct.gv* @Perl_gv_fetchpv(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i32 0), i32 0, i32 12)
  store %struct.gv* %call4753, %struct.gv** %gv, align 8
  br label %if.end.4754

if.end.4754:                                      ; preds = %if.then.4752, %if.else.4750
  br label %if.end.4755

if.end.4755:                                      ; preds = %if.end.4754, %if.end.4747
  %2476 = load %struct.gv**, %struct.gv*** %gvp, align 8
  %tobool4756 = icmp ne %struct.gv** %2476, null
  br i1 %tobool4756, label %if.then.4757, label %if.else.4759

if.then.4757:                                     ; preds = %if.end.4755
  %call4758 = call %struct.sv* @Perl_newSVpvn(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i64 14)
  store %struct.sv* %call4758, %struct.sv** %sv4650, align 8
  %2477 = load %struct.sv*, %struct.sv** %sv4650, align 8
  call void @Perl_sv_catpv(%struct.sv* %2477, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i32 0))
  br label %if.end.4761

if.else.4759:                                     ; preds = %if.end.4755
  %2478 = load i64, i64* %len, align 8
  %call4760 = call %struct.sv* @Perl_newSVpv(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i32 0), i64 %2478)
  store %struct.sv* %call4760, %struct.sv** %sv4650, align 8
  br label %if.end.4761

if.end.4761:                                      ; preds = %if.else.4759, %if.then.4757
  %2479 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line4762 = getelementptr inbounds %struct.cop, %struct.cop* %2479, i32 0, i32 13
  %2480 = load i32, i32* %cop_line4762, align 4
  %2481 = load i32, i32* @PL_copline, align 4
  %cmp4763 = icmp ult i32 %2480, %2481
  br i1 %cmp4763, label %cond.true.4765, label %cond.false.4767

cond.true.4765:                                   ; preds = %if.end.4761
  %2482 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line4766 = getelementptr inbounds %struct.cop, %struct.cop* %2482, i32 0, i32 13
  %2483 = load i32, i32* %cop_line4766, align 4
  br label %cond.end.4768

cond.false.4767:                                  ; preds = %if.end.4761
  %2484 = load i32, i32* @PL_copline, align 4
  br label %cond.end.4768

cond.end.4768:                                    ; preds = %cond.false.4767, %cond.true.4765
  %cond4769 = phi i32 [ %2483, %cond.true.4765 ], [ %2484, %cond.false.4767 ]
  store i32 %cond4769, i32* @PL_copline, align 4
  %2485 = load %struct.sv*, %struct.sv** %sv4650, align 8
  %call4770 = call %struct.op* @Perl_newSVOP(i32 5, i32 0, %struct.sv* %2485)
  store %struct.op* %call4770, %struct.op** bitcast (%union.YYSTYPE* @PL_yylval to %struct.op**), align 8
  %2486 = load %struct.op*, %struct.op** bitcast (%union.YYSTYPE* @PL_yylval to %struct.op**), align 8
  %op_private4771 = getelementptr inbounds %struct.op, %struct.op* %2486, i32 0, i32 7
  store i8 64, i8* %op_private4771, align 1
  %2487 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %tobool4772 = icmp ne %struct.sv* %2487, null
  br i1 %tobool4772, label %land.lhs.true.4773, label %lor.lhs.false.4782

land.lhs.true.4773:                               ; preds = %cond.end.4768
  %2488 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_flags4774 = getelementptr inbounds %struct.sv, %struct.sv* %2488, i32 0, i32 2
  %2489 = load i32, i32* %sv_flags4774, align 4
  %and4775 = and i32 %2489, 536870912
  %tobool4776 = icmp ne i32 %and4775, 0
  br i1 %tobool4776, label %land.lhs.true.4777, label %lor.lhs.false.4782

land.lhs.true.4777:                               ; preds = %land.lhs.true.4773
  %2490 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private4778 = getelementptr inbounds %struct.cop, %struct.cop* %2490, i32 0, i32 7
  %2491 = load i8, i8* %op_private4778, align 1
  %conv4779 = zext i8 %2491 to i32
  %and4780 = and i32 %conv4779, 8
  %tobool4781 = icmp ne i32 %and4780, 0
  br i1 %tobool4781, label %lor.lhs.false.4782, label %land.lhs.true.4785

lor.lhs.false.4782:                               ; preds = %land.lhs.true.4777, %land.lhs.true.4773, %cond.end.4768
  %2492 = load i32, i32* @PL_hints, align 4
  %and4783 = and i32 %2492, 8388608
  %tobool4784 = icmp ne i32 %and4783, 0
  br i1 %tobool4784, label %land.lhs.true.4785, label %if.end.4801

land.lhs.true.4785:                               ; preds = %lor.lhs.false.4782, %land.lhs.true.4777
  %2493 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private4786 = getelementptr inbounds %struct.cop, %struct.cop* %2493, i32 0, i32 7
  %2494 = load i8, i8* %op_private4786, align 1
  %conv4787 = zext i8 %2494 to i32
  %and4788 = and i32 %conv4787, 8
  %tobool4789 = icmp ne i32 %and4788, 0
  br i1 %tobool4789, label %if.end.4801, label %land.lhs.true.4790

land.lhs.true.4790:                               ; preds = %land.lhs.true.4785
  %2495 = load %struct.sv*, %struct.sv** %sv4650, align 8
  %sv_any4791 = getelementptr inbounds %struct.sv, %struct.sv* %2495, i32 0, i32 0
  %2496 = load i8*, i8** %sv_any4791, align 8
  %2497 = bitcast i8* %2496 to %struct.xpv*
  %xpv_pv4792 = getelementptr inbounds %struct.xpv, %struct.xpv* %2497, i32 0, i32 0
  %2498 = load i8*, i8** %xpv_pv4792, align 8
  %2499 = load %struct.sv*, %struct.sv** %sv4650, align 8
  %sv_any4793 = getelementptr inbounds %struct.sv, %struct.sv* %2499, i32 0, i32 0
  %2500 = load i8*, i8** %sv_any4793, align 8
  %2501 = bitcast i8* %2500 to %struct.xpv*
  %xpv_cur4794 = getelementptr inbounds %struct.xpv, %struct.xpv* %2501, i32 0, i32 1
  %2502 = load i64, i64* %xpv_cur4794, align 8
  %call4795 = call signext i8 @Perl_is_utf8_string(i8* %2498, i64 %2502)
  %conv4796 = sext i8 %call4795 to i32
  %tobool4797 = icmp ne i32 %conv4796, 0
  br i1 %tobool4797, label %if.then.4798, label %if.end.4801

if.then.4798:                                     ; preds = %land.lhs.true.4790
  %2503 = load %struct.sv*, %struct.sv** %sv4650, align 8
  %sv_flags4799 = getelementptr inbounds %struct.sv, %struct.sv* %2503, i32 0, i32 2
  %2504 = load i32, i32* %sv_flags4799, align 4
  %or4800 = or i32 %2504, 536870912
  store i32 %or4800, i32* %sv_flags4799, align 4
  br label %if.end.4801

if.end.4801:                                      ; preds = %if.then.4798, %land.lhs.true.4790, %land.lhs.true.4785, %lor.lhs.false.4782
  %2505 = load i64, i64* %len, align 8
  %tobool4802 = icmp ne i64 %2505, 0
  br i1 %tobool4802, label %if.then.4803, label %if.end.4804

if.then.4803:                                     ; preds = %if.end.4801
  br label %safe_bareword

if.end.4804:                                      ; preds = %if.end.4801
  %2506 = load i8*, i8** @PL_oldoldbufptr, align 8
  %tobool4805 = icmp ne i8* %2506, null
  br i1 %tobool4805, label %land.lhs.true.4806, label %if.end.4920

land.lhs.true.4806:                               ; preds = %if.end.4804
  %2507 = load i8*, i8** @PL_oldoldbufptr, align 8
  %2508 = load i8*, i8** @PL_bufptr, align 8
  %cmp4807 = icmp ult i8* %2507, %2508
  br i1 %cmp4807, label %land.lhs.true.4809, label %if.end.4920

land.lhs.true.4809:                               ; preds = %land.lhs.true.4806
  %2509 = load i8*, i8** @PL_oldoldbufptr, align 8
  %2510 = load i8*, i8** @PL_last_lop, align 8
  %cmp4810 = icmp eq i8* %2509, %2510
  br i1 %cmp4810, label %land.lhs.true.4815, label %lor.lhs.false.4812

lor.lhs.false.4812:                               ; preds = %land.lhs.true.4809
  %2511 = load i8*, i8** @PL_oldoldbufptr, align 8
  %2512 = load i8*, i8** @PL_last_uni, align 8
  %cmp4813 = icmp eq i8* %2511, %2512
  br i1 %cmp4813, label %land.lhs.true.4815, label %if.end.4920

land.lhs.true.4815:                               ; preds = %lor.lhs.false.4812, %land.lhs.true.4809
  %2513 = load i32, i32* @PL_expect, align 4
  %cmp4816 = icmp eq i32 %2513, 2
  br i1 %cmp4816, label %if.then.4824, label %lor.lhs.false.4818

lor.lhs.false.4818:                               ; preds = %land.lhs.true.4815
  %2514 = load i16, i16* @PL_last_lop_op, align 2
  %idxprom4819 = zext i16 %2514 to i64
  %arrayidx4820 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_opargs, i32 0, i64 %idxprom4819
  %2515 = load i32, i32* %arrayidx4820, align 4
  %shr = lshr i32 %2515, 13
  %and4821 = and i32 %shr, 7
  %cmp4822 = icmp eq i32 %and4821, 6
  br i1 %cmp4822, label %if.then.4824, label %if.end.4920

if.then.4824:                                     ; preds = %lor.lhs.false.4818, %land.lhs.true.4815
  %2516 = load i8*, i8** %s, align 8
  %2517 = load i8, i8* %2516, align 1
  %conv4826 = sext i8 %2517 to i32
  %cmp4827 = icmp eq i32 %conv4826, 40
  %conv4828 = zext i1 %cmp4827 to i32
  %conv4829 = trunc i32 %conv4828 to i8
  store i8 %conv4829, i8* %immediate_paren, align 1
  %2518 = load i8*, i8** %s, align 8
  %call4830 = call i8* @S_skipspace(i8* %2518)
  store i8* %call4830, i8** %s, align 8
  %2519 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private4831 = getelementptr inbounds %struct.cop, %struct.cop* %2519, i32 0, i32 7
  %2520 = load i8, i8* %op_private4831, align 1
  %conv4832 = zext i8 %2520 to i32
  %and4833 = and i32 %conv4832, 8
  %tobool4834 = icmp ne i32 %and4833, 0
  br i1 %tobool4834, label %cond.true.4853, label %lor.lhs.false.4835

lor.lhs.false.4835:                               ; preds = %if.then.4824
  %2521 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %tobool4836 = icmp ne %struct.sv* %2521, null
  br i1 %tobool4836, label %land.lhs.true.4837, label %lor.lhs.false.4846

land.lhs.true.4837:                               ; preds = %lor.lhs.false.4835
  %2522 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_flags4838 = getelementptr inbounds %struct.sv, %struct.sv* %2522, i32 0, i32 2
  %2523 = load i32, i32* %sv_flags4838, align 4
  %and4839 = and i32 %2523, 536870912
  %tobool4840 = icmp ne i32 %and4839, 0
  br i1 %tobool4840, label %land.lhs.true.4841, label %lor.lhs.false.4846

land.lhs.true.4841:                               ; preds = %land.lhs.true.4837
  %2524 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private4842 = getelementptr inbounds %struct.cop, %struct.cop* %2524, i32 0, i32 7
  %2525 = load i8, i8* %op_private4842, align 1
  %conv4843 = zext i8 %2525 to i32
  %and4844 = and i32 %conv4843, 8
  %tobool4845 = icmp ne i32 %and4844, 0
  br i1 %tobool4845, label %lor.lhs.false.4846, label %lor.lhs.false.4849

lor.lhs.false.4846:                               ; preds = %land.lhs.true.4841, %land.lhs.true.4837, %lor.lhs.false.4835
  %2526 = load i32, i32* @PL_hints, align 4
  %and4847 = and i32 %2526, 8388608
  %tobool4848 = icmp ne i32 %and4847, 0
  br i1 %tobool4848, label %lor.lhs.false.4849, label %cond.true.4853

lor.lhs.false.4849:                               ; preds = %lor.lhs.false.4846, %land.lhs.true.4841
  %2527 = load i8*, i8** %s, align 8
  %2528 = load i8, i8* %2527, align 1
  %conv4850 = zext i8 %2528 to i32
  %cmp4851 = icmp slt i32 %conv4850, 192
  br i1 %cmp4851, label %cond.true.4853, label %cond.false.4873

cond.true.4853:                                   ; preds = %lor.lhs.false.4849, %lor.lhs.false.4846, %if.then.4824
  %2529 = load i8*, i8** %s, align 8
  %2530 = load i8, i8* %2529, align 1
  %conv4854 = sext i8 %2530 to i32
  %cmp4855 = icmp sge i32 %conv4854, 65
  br i1 %cmp4855, label %land.lhs.true.4857, label %lor.lhs.false.4861

land.lhs.true.4857:                               ; preds = %cond.true.4853
  %2531 = load i8*, i8** %s, align 8
  %2532 = load i8, i8* %2531, align 1
  %conv4858 = sext i8 %2532 to i32
  %cmp4859 = icmp sle i32 %conv4858, 90
  br i1 %cmp4859, label %land.lhs.true.4884, label %lor.lhs.false.4861

lor.lhs.false.4861:                               ; preds = %land.lhs.true.4857, %cond.true.4853
  %2533 = load i8*, i8** %s, align 8
  %2534 = load i8, i8* %2533, align 1
  %conv4862 = sext i8 %2534 to i32
  %cmp4863 = icmp sge i32 %conv4862, 97
  br i1 %cmp4863, label %land.lhs.true.4865, label %lor.lhs.false.4869

land.lhs.true.4865:                               ; preds = %lor.lhs.false.4861
  %2535 = load i8*, i8** %s, align 8
  %2536 = load i8, i8* %2535, align 1
  %conv4866 = sext i8 %2536 to i32
  %cmp4867 = icmp sle i32 %conv4866, 122
  br i1 %cmp4867, label %land.lhs.true.4884, label %lor.lhs.false.4869

lor.lhs.false.4869:                               ; preds = %land.lhs.true.4865, %lor.lhs.false.4861
  %2537 = load i8*, i8** %s, align 8
  %2538 = load i8, i8* %2537, align 1
  %conv4870 = sext i8 %2538 to i32
  %cmp4871 = icmp eq i32 %conv4870, 95
  br i1 %cmp4871, label %land.lhs.true.4884, label %lor.lhs.false.4880

cond.false.4873:                                  ; preds = %lor.lhs.false.4849
  %2539 = load i8*, i8** %s, align 8
  %call4874 = call signext i8 @Perl_is_utf8_idcont(i8* %2539)
  %conv4875 = sext i8 %call4874 to i32
  %tobool4876 = icmp ne i32 %conv4875, 0
  br i1 %tobool4876, label %land.lhs.true.4877, label %lor.lhs.false.4880

land.lhs.true.4877:                               ; preds = %cond.false.4873
  %2540 = load i8*, i8** %s, align 8
  %call4878 = call signext i8 @Perl_is_utf8_digit(i8* %2540)
  %tobool4879 = icmp ne i8 %call4878, 0
  br i1 %tobool4879, label %lor.lhs.false.4880, label %land.lhs.true.4884

lor.lhs.false.4880:                               ; preds = %land.lhs.true.4877, %cond.false.4873, %lor.lhs.false.4869
  %2541 = load i8*, i8** %s, align 8
  %2542 = load i8, i8* %2541, align 1
  %conv4881 = sext i8 %2542 to i32
  %cmp4882 = icmp eq i32 %conv4881, 36
  br i1 %cmp4882, label %land.lhs.true.4884, label %if.end.4888

land.lhs.true.4884:                               ; preds = %lor.lhs.false.4880, %land.lhs.true.4877, %lor.lhs.false.4869, %land.lhs.true.4865, %land.lhs.true.4857
  %2543 = load i8*, i8** %s, align 8
  %2544 = load %struct.gv*, %struct.gv** %gv, align 8
  %call4885 = call i32 @S_intuit_method(i8* %2543, %struct.gv* %2544)
  store i32 %call4885, i32* %tmp, align 4
  %tobool4886 = icmp ne i32 %call4885, 0
  br i1 %tobool4886, label %if.then.4887, label %if.end.4888

if.then.4887:                                     ; preds = %land.lhs.true.4884
  %2545 = load i32, i32* %tmp, align 4
  store i32 %2545, i32* %retval
  br label %return

if.end.4888:                                      ; preds = %land.lhs.true.4884, %lor.lhs.false.4880
  %2546 = load i8, i8* %immediate_paren, align 1
  %tobool4889 = icmp ne i8 %2546, 0
  br i1 %tobool4889, label %if.end.4919, label %land.lhs.true.4890

land.lhs.true.4890:                               ; preds = %if.end.4888
  %2547 = load i16, i16* @PL_last_lop_op, align 2
  %conv4891 = zext i16 %2547 to i32
  %cmp4892 = icmp eq i32 %conv4891, 150
  br i1 %cmp4892, label %if.then.4915, label %lor.lhs.false.4894

lor.lhs.false.4894:                               ; preds = %land.lhs.true.4890
  %2548 = load %struct.gv*, %struct.gv** %gv, align 8
  %tobool4895 = icmp ne %struct.gv* %2548, null
  br i1 %tobool4895, label %lor.lhs.false.4896, label %land.lhs.true.4907

lor.lhs.false.4896:                               ; preds = %lor.lhs.false.4894
  %2549 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_any4897 = getelementptr inbounds %struct.gv, %struct.gv* %2549, i32 0, i32 0
  %2550 = load %struct.xpvgv*, %struct.xpvgv** %sv_any4897, align 8
  %xgv_gp4898 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %2550, i32 0, i32 7
  %2551 = load %struct.gp*, %struct.gp** %xgv_gp4898, align 8
  %gp_cvgen4899 = getelementptr inbounds %struct.gp, %struct.gp* %2551, i32 0, i32 8
  %2552 = load i32, i32* %gp_cvgen4899, align 4
  %tobool4900 = icmp ne i32 %2552, 0
  br i1 %tobool4900, label %cond.true.4901, label %cond.false.4902

cond.true.4901:                                   ; preds = %lor.lhs.false.4896
  br i1 false, label %if.end.4919, label %land.lhs.true.4907

cond.false.4902:                                  ; preds = %lor.lhs.false.4896
  %2553 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_any4903 = getelementptr inbounds %struct.gv, %struct.gv* %2553, i32 0, i32 0
  %2554 = load %struct.xpvgv*, %struct.xpvgv** %sv_any4903, align 8
  %xgv_gp4904 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %2554, i32 0, i32 7
  %2555 = load %struct.gp*, %struct.gp** %xgv_gp4904, align 8
  %gp_cv4905 = getelementptr inbounds %struct.gp, %struct.gp* %2555, i32 0, i32 7
  %2556 = load %struct.cv*, %struct.cv** %gp_cv4905, align 8
  %tobool4906 = icmp ne %struct.cv* %2556, null
  br i1 %tobool4906, label %if.end.4919, label %land.lhs.true.4907

land.lhs.true.4907:                               ; preds = %cond.false.4902, %cond.true.4901, %lor.lhs.false.4894
  %2557 = load i16, i16* @PL_last_lop_op, align 2
  %conv4908 = zext i16 %2557 to i32
  %cmp4909 = icmp ne i32 %conv4908, 154
  br i1 %cmp4909, label %land.lhs.true.4911, label %if.end.4919

land.lhs.true.4911:                               ; preds = %land.lhs.true.4907
  %2558 = load i16, i16* @PL_last_lop_op, align 2
  %conv4912 = zext i16 %2558 to i32
  %cmp4913 = icmp ne i32 %conv4912, 152
  br i1 %cmp4913, label %if.then.4915, label %if.end.4919

if.then.4915:                                     ; preds = %land.lhs.true.4911, %land.lhs.true.4890
  %2559 = load i8*, i8** @PL_last_lop, align 8
  %2560 = load i8*, i8** @PL_oldoldbufptr, align 8
  %cmp4916 = icmp eq i8* %2559, %2560
  %cond4918 = select i1 %cmp4916, i32 1, i32 0
  store i32 %cond4918, i32* @PL_expect, align 4
  br label %bareword

if.end.4919:                                      ; preds = %land.lhs.true.4911, %land.lhs.true.4907, %cond.false.4902, %cond.true.4901, %if.end.4888
  br label %if.end.4920

if.end.4920:                                      ; preds = %if.end.4919, %lor.lhs.false.4818, %lor.lhs.false.4812, %land.lhs.true.4806, %if.end.4804
  store i32 0, i32* @PL_expect, align 4
  %2561 = load i8*, i8** %s, align 8
  %call4921 = call i8* @S_skipspace(i8* %2561)
  store i8* %call4921, i8** %s, align 8
  %2562 = load i8*, i8** %s, align 8
  %2563 = load i8, i8* %2562, align 1
  %conv4922 = sext i8 %2563 to i32
  %cmp4923 = icmp eq i32 %conv4922, 61
  br i1 %cmp4923, label %land.lhs.true.4925, label %if.end.4977

land.lhs.true.4925:                               ; preds = %if.end.4920
  %2564 = load i8*, i8** %s, align 8
  %arrayidx4926 = getelementptr inbounds i8, i8* %2564, i64 1
  %2565 = load i8, i8* %arrayidx4926, align 1
  %conv4927 = sext i8 %2565 to i32
  %cmp4928 = icmp eq i32 %conv4927, 62
  br i1 %cmp4928, label %land.lhs.true.4930, label %if.end.4977

land.lhs.true.4930:                               ; preds = %land.lhs.true.4925
  %2566 = load i32, i32* %pkgname, align 4
  %tobool4931 = icmp ne i32 %2566, 0
  br i1 %tobool4931, label %if.end.4977, label %if.then.4932

if.then.4932:                                     ; preds = %land.lhs.true.4930
  %2567 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line4933 = getelementptr inbounds %struct.cop, %struct.cop* %2567, i32 0, i32 13
  %2568 = load i32, i32* %cop_line4933, align 4
  %2569 = load i32, i32* @PL_copline, align 4
  %cmp4934 = icmp ult i32 %2568, %2569
  br i1 %cmp4934, label %cond.true.4936, label %cond.false.4938

cond.true.4936:                                   ; preds = %if.then.4932
  %2570 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line4937 = getelementptr inbounds %struct.cop, %struct.cop* %2570, i32 0, i32 13
  %2571 = load i32, i32* %cop_line4937, align 4
  br label %cond.end.4939

cond.false.4938:                                  ; preds = %if.then.4932
  %2572 = load i32, i32* @PL_copline, align 4
  br label %cond.end.4939

cond.end.4939:                                    ; preds = %cond.false.4938, %cond.true.4936
  %cond4940 = phi i32 [ %2571, %cond.true.4936 ], [ %2572, %cond.false.4938 ]
  store i32 %cond4940, i32* @PL_copline, align 4
  %2573 = load %struct.op*, %struct.op** bitcast (%union.YYSTYPE* @PL_yylval to %struct.op**), align 8
  %2574 = bitcast %struct.op* %2573 to %struct.svop*
  %op_sv4941 = getelementptr inbounds %struct.svop, %struct.svop* %2574, i32 0, i32 8
  %2575 = load %struct.sv*, %struct.sv** %op_sv4941, align 8
  call void @Perl_sv_setpv(%struct.sv* %2575, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i32 0))
  %2576 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %tobool4942 = icmp ne %struct.sv* %2576, null
  br i1 %tobool4942, label %land.lhs.true.4943, label %lor.lhs.false.4952

land.lhs.true.4943:                               ; preds = %cond.end.4939
  %2577 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_flags4944 = getelementptr inbounds %struct.sv, %struct.sv* %2577, i32 0, i32 2
  %2578 = load i32, i32* %sv_flags4944, align 4
  %and4945 = and i32 %2578, 536870912
  %tobool4946 = icmp ne i32 %and4945, 0
  br i1 %tobool4946, label %land.lhs.true.4947, label %lor.lhs.false.4952

land.lhs.true.4947:                               ; preds = %land.lhs.true.4943
  %2579 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private4948 = getelementptr inbounds %struct.cop, %struct.cop* %2579, i32 0, i32 7
  %2580 = load i8, i8* %op_private4948, align 1
  %conv4949 = zext i8 %2580 to i32
  %and4950 = and i32 %conv4949, 8
  %tobool4951 = icmp ne i32 %and4950, 0
  br i1 %tobool4951, label %lor.lhs.false.4952, label %land.lhs.true.4955

lor.lhs.false.4952:                               ; preds = %land.lhs.true.4947, %land.lhs.true.4943, %cond.end.4939
  %2581 = load i32, i32* @PL_hints, align 4
  %and4953 = and i32 %2581, 8388608
  %tobool4954 = icmp ne i32 %and4953, 0
  br i1 %tobool4954, label %land.lhs.true.4955, label %if.end.4968

land.lhs.true.4955:                               ; preds = %lor.lhs.false.4952, %land.lhs.true.4947
  %2582 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private4956 = getelementptr inbounds %struct.cop, %struct.cop* %2582, i32 0, i32 7
  %2583 = load i8, i8* %op_private4956, align 1
  %conv4957 = zext i8 %2583 to i32
  %and4958 = and i32 %conv4957, 8
  %tobool4959 = icmp ne i32 %and4958, 0
  br i1 %tobool4959, label %if.end.4968, label %land.lhs.true.4960

land.lhs.true.4960:                               ; preds = %land.lhs.true.4955
  %2584 = load i64, i64* %len, align 8
  %call4961 = call signext i8 @Perl_is_utf8_string(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i32 0), i64 %2584)
  %conv4962 = sext i8 %call4961 to i32
  %tobool4963 = icmp ne i32 %conv4962, 0
  br i1 %tobool4963, label %if.then.4964, label %if.end.4968

if.then.4964:                                     ; preds = %land.lhs.true.4960
  %2585 = load %struct.op*, %struct.op** bitcast (%union.YYSTYPE* @PL_yylval to %struct.op**), align 8
  %2586 = bitcast %struct.op* %2585 to %struct.svop*
  %op_sv4965 = getelementptr inbounds %struct.svop, %struct.svop* %2586, i32 0, i32 8
  %2587 = load %struct.sv*, %struct.sv** %op_sv4965, align 8
  %sv_flags4966 = getelementptr inbounds %struct.sv, %struct.sv* %2587, i32 0, i32 2
  %2588 = load i32, i32* %sv_flags4966, align 4
  %or4967 = or i32 %2588, 536870912
  store i32 %or4967, i32* %sv_flags4966, align 4
  br label %if.end.4968

if.end.4968:                                      ; preds = %if.then.4964, %land.lhs.true.4960, %land.lhs.true.4955, %lor.lhs.false.4952
  %2589 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line4969 = getelementptr inbounds %struct.cop, %struct.cop* %2589, i32 0, i32 13
  %2590 = load i32, i32* %cop_line4969, align 4
  %2591 = load i32, i32* @PL_copline, align 4
  %cmp4970 = icmp ult i32 %2590, %2591
  br i1 %cmp4970, label %cond.true.4972, label %cond.false.4974

cond.true.4972:                                   ; preds = %if.end.4968
  %2592 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line4973 = getelementptr inbounds %struct.cop, %struct.cop* %2592, i32 0, i32 13
  %2593 = load i32, i32* %cop_line4973, align 4
  br label %cond.end.4975

cond.false.4974:                                  ; preds = %if.end.4968
  %2594 = load i32, i32* @PL_copline, align 4
  br label %cond.end.4975

cond.end.4975:                                    ; preds = %cond.false.4974, %cond.true.4972
  %cond4976 = phi i32 [ %2593, %cond.true.4972 ], [ %2594, %cond.false.4974 ]
  store i32 %cond4976, i32* @PL_copline, align 4
  store i32 0, i32* @PL_expect, align 4
  %2595 = load i8*, i8** %s, align 8
  store i8* %2595, i8** @PL_bufptr, align 8
  store i32 257, i32* %retval
  br label %return

if.end.4977:                                      ; preds = %land.lhs.true.4930, %land.lhs.true.4925, %if.end.4920
  %2596 = load i8*, i8** %s, align 8
  %2597 = load i8, i8* %2596, align 1
  %conv4978 = sext i8 %2597 to i32
  %cmp4979 = icmp eq i32 %conv4978, 40
  br i1 %cmp4979, label %if.then.4981, label %if.end.5034

if.then.4981:                                     ; preds = %if.end.4977
  %2598 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line4982 = getelementptr inbounds %struct.cop, %struct.cop* %2598, i32 0, i32 13
  %2599 = load i32, i32* %cop_line4982, align 4
  %2600 = load i32, i32* @PL_copline, align 4
  %cmp4983 = icmp ult i32 %2599, %2600
  br i1 %cmp4983, label %cond.true.4985, label %cond.false.4987

cond.true.4985:                                   ; preds = %if.then.4981
  %2601 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line4986 = getelementptr inbounds %struct.cop, %struct.cop* %2601, i32 0, i32 13
  %2602 = load i32, i32* %cop_line4986, align 4
  br label %cond.end.4988

cond.false.4987:                                  ; preds = %if.then.4981
  %2603 = load i32, i32* @PL_copline, align 4
  br label %cond.end.4988

cond.end.4988:                                    ; preds = %cond.false.4987, %cond.true.4985
  %cond4989 = phi i32 [ %2602, %cond.true.4985 ], [ %2603, %cond.false.4987 ]
  store i32 %cond4989, i32* @PL_copline, align 4
  %2604 = load %struct.gv*, %struct.gv** %gv, align 8
  %tobool4990 = icmp ne %struct.gv* %2604, null
  br i1 %tobool4990, label %land.lhs.true.4991, label %if.end.5030

land.lhs.true.4991:                               ; preds = %cond.end.4988
  %2605 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_any4992 = getelementptr inbounds %struct.gv, %struct.gv* %2605, i32 0, i32 0
  %2606 = load %struct.xpvgv*, %struct.xpvgv** %sv_any4992, align 8
  %xgv_gp4993 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %2606, i32 0, i32 7
  %2607 = load %struct.gp*, %struct.gp** %xgv_gp4993, align 8
  %gp_cvgen4994 = getelementptr inbounds %struct.gp, %struct.gp* %2607, i32 0, i32 8
  %2608 = load i32, i32* %gp_cvgen4994, align 4
  %tobool4995 = icmp ne i32 %2608, 0
  br i1 %tobool4995, label %cond.true.4996, label %cond.false.4997

cond.true.4996:                                   ; preds = %land.lhs.true.4991
  br i1 false, label %if.then.5002, label %if.end.5030

cond.false.4997:                                  ; preds = %land.lhs.true.4991
  %2609 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_any4998 = getelementptr inbounds %struct.gv, %struct.gv* %2609, i32 0, i32 0
  %2610 = load %struct.xpvgv*, %struct.xpvgv** %sv_any4998, align 8
  %xgv_gp4999 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %2610, i32 0, i32 7
  %2611 = load %struct.gp*, %struct.gp** %xgv_gp4999, align 8
  %gp_cv5000 = getelementptr inbounds %struct.gp, %struct.gp* %2611, i32 0, i32 7
  %2612 = load %struct.cv*, %struct.cv** %gp_cv5000, align 8
  %tobool5001 = icmp ne %struct.cv* %2612, null
  br i1 %tobool5001, label %if.then.5002, label %if.end.5030

if.then.5002:                                     ; preds = %cond.false.4997, %cond.true.4996
  %2613 = load i8*, i8** %s, align 8
  %add.ptr5003 = getelementptr inbounds i8, i8* %2613, i64 1
  store i8* %add.ptr5003, i8** %d, align 8
  br label %for.cond.5004

for.cond.5004:                                    ; preds = %for.inc.5015, %if.then.5002
  %2614 = load i8*, i8** %d, align 8
  %2615 = load i8, i8* %2614, align 1
  %conv5005 = sext i8 %2615 to i32
  %cmp5006 = icmp eq i32 %conv5005, 32
  br i1 %cmp5006, label %lor.end.5012, label %lor.rhs.5008

lor.rhs.5008:                                     ; preds = %for.cond.5004
  %2616 = load i8*, i8** %d, align 8
  %2617 = load i8, i8* %2616, align 1
  %conv5009 = sext i8 %2617 to i32
  %cmp5010 = icmp eq i32 %conv5009, 9
  br label %lor.end.5012

lor.end.5012:                                     ; preds = %lor.rhs.5008, %for.cond.5004
  %2618 = phi i1 [ true, %for.cond.5004 ], [ %cmp5010, %lor.rhs.5008 ]
  br i1 %2618, label %for.body.5014, label %for.end.5017

for.body.5014:                                    ; preds = %lor.end.5012
  br label %for.inc.5015

for.inc.5015:                                     ; preds = %for.body.5014
  %2619 = load i8*, i8** %d, align 8
  %incdec.ptr5016 = getelementptr inbounds i8, i8* %2619, i32 1
  store i8* %incdec.ptr5016, i8** %d, align 8
  br label %for.cond.5004

for.end.5017:                                     ; preds = %lor.end.5012
  %2620 = load i8*, i8** %d, align 8
  %2621 = load i8, i8* %2620, align 1
  %conv5018 = sext i8 %2621 to i32
  %cmp5019 = icmp eq i32 %conv5018, 41
  br i1 %cmp5019, label %land.lhs.true.5021, label %if.end.5029

land.lhs.true.5021:                               ; preds = %for.end.5017
  %2622 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_any5022 = getelementptr inbounds %struct.gv, %struct.gv* %2622, i32 0, i32 0
  %2623 = load %struct.xpvgv*, %struct.xpvgv** %sv_any5022, align 8
  %xgv_gp5023 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %2623, i32 0, i32 7
  %2624 = load %struct.gp*, %struct.gp** %xgv_gp5023, align 8
  %gp_cv5024 = getelementptr inbounds %struct.gp, %struct.gp* %2624, i32 0, i32 7
  %2625 = load %struct.cv*, %struct.cv** %gp_cv5024, align 8
  %call5025 = call %struct.sv* @Perl_cv_const_sv(%struct.cv* %2625)
  store %struct.sv* %call5025, %struct.sv** %sv4650, align 8
  %tobool5026 = icmp ne %struct.sv* %call5025, null
  br i1 %tobool5026, label %if.then.5027, label %if.end.5029

if.then.5027:                                     ; preds = %land.lhs.true.5021
  %2626 = load i8*, i8** %d, align 8
  %add.ptr5028 = getelementptr inbounds i8, i8* %2626, i64 1
  store i8* %add.ptr5028, i8** %s, align 8
  br label %its_constant

if.end.5029:                                      ; preds = %land.lhs.true.5021, %for.end.5017
  br label %if.end.5030

if.end.5030:                                      ; preds = %if.end.5029, %cond.false.4997, %cond.true.4996, %cond.end.4988
  %2627 = load %struct.op*, %struct.op** bitcast (%union.YYSTYPE* @PL_yylval to %struct.op**), align 8
  %2628 = load i32, i32* @PL_nexttoke, align 4
  %idxprom5031 = sext i32 %2628 to i64
  %arrayidx5032 = getelementptr inbounds [5 x %union.YYSTYPE], [5 x %union.YYSTYPE]* @PL_nextval, i32 0, i64 %idxprom5031
  %opval5033 = bitcast %union.YYSTYPE* %arrayidx5032 to %struct.op**
  store %struct.op* %2627, %struct.op** %opval5033, align 8
  store i32 0, i32* @PL_expect, align 4
  call void @S_force_next(i32 257)
  store i32 0, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  %2629 = load i8*, i8** %s, align 8
  store i8* %2629, i8** @PL_bufptr, align 8
  store i32 38, i32* %retval
  br label %return

if.end.5034:                                      ; preds = %if.end.4977
  %2630 = load i8*, i8** %s, align 8
  %2631 = load i8, i8* %2630, align 1
  %conv5035 = sext i8 %2631 to i32
  %cmp5036 = icmp eq i32 %conv5035, 36
  br i1 %cmp5036, label %land.lhs.true.5042, label %lor.lhs.false.5038

lor.lhs.false.5038:                               ; preds = %if.end.5034
  %2632 = load i8*, i8** %s, align 8
  %2633 = load i8, i8* %2632, align 1
  %conv5039 = sext i8 %2633 to i32
  %cmp5040 = icmp eq i32 %conv5039, 123
  br i1 %cmp5040, label %land.lhs.true.5042, label %if.end.5056

land.lhs.true.5042:                               ; preds = %lor.lhs.false.5038, %if.end.5034
  %2634 = load %struct.gv*, %struct.gv** %gv, align 8
  %tobool5043 = icmp ne %struct.gv* %2634, null
  br i1 %tobool5043, label %lor.lhs.false.5044, label %if.then.5055

lor.lhs.false.5044:                               ; preds = %land.lhs.true.5042
  %2635 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_any5045 = getelementptr inbounds %struct.gv, %struct.gv* %2635, i32 0, i32 0
  %2636 = load %struct.xpvgv*, %struct.xpvgv** %sv_any5045, align 8
  %xgv_gp5046 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %2636, i32 0, i32 7
  %2637 = load %struct.gp*, %struct.gp** %xgv_gp5046, align 8
  %gp_cvgen5047 = getelementptr inbounds %struct.gp, %struct.gp* %2637, i32 0, i32 8
  %2638 = load i32, i32* %gp_cvgen5047, align 4
  %tobool5048 = icmp ne i32 %2638, 0
  br i1 %tobool5048, label %cond.true.5049, label %cond.false.5050

cond.true.5049:                                   ; preds = %lor.lhs.false.5044
  br i1 false, label %if.end.5056, label %if.then.5055

cond.false.5050:                                  ; preds = %lor.lhs.false.5044
  %2639 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_any5051 = getelementptr inbounds %struct.gv, %struct.gv* %2639, i32 0, i32 0
  %2640 = load %struct.xpvgv*, %struct.xpvgv** %sv_any5051, align 8
  %xgv_gp5052 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %2640, i32 0, i32 7
  %2641 = load %struct.gp*, %struct.gp** %xgv_gp5052, align 8
  %gp_cv5053 = getelementptr inbounds %struct.gp, %struct.gp* %2641, i32 0, i32 7
  %2642 = load %struct.cv*, %struct.cv** %gp_cv5053, align 8
  %tobool5054 = icmp ne %struct.cv* %2642, null
  br i1 %tobool5054, label %if.end.5056, label %if.then.5055

if.then.5055:                                     ; preds = %cond.false.5050, %cond.true.5049, %land.lhs.true.5042
  %2643 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %2643, i8** @PL_last_lop, align 8
  store i16 165, i16* @PL_last_lop_op, align 2
  store i32 4, i32* @PL_expect, align 4
  %2644 = load i8*, i8** %s, align 8
  store i8* %2644, i8** @PL_bufptr, align 8
  store i32 258, i32* %retval
  br label %return

if.end.5056:                                      ; preds = %cond.false.5050, %cond.true.5049, %lor.lhs.false.5038
  %2645 = load i32, i32* %orig_keyword, align 4
  %tobool5057 = icmp ne i32 %2645, 0
  br i1 %tobool5057, label %if.end.5116, label %land.lhs.true.5058

land.lhs.true.5058:                               ; preds = %if.end.5056
  %2646 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private5059 = getelementptr inbounds %struct.cop, %struct.cop* %2646, i32 0, i32 7
  %2647 = load i8, i8* %op_private5059, align 1
  %conv5060 = zext i8 %2647 to i32
  %and5061 = and i32 %conv5060, 8
  %tobool5062 = icmp ne i32 %and5061, 0
  br i1 %tobool5062, label %cond.true.5081, label %lor.lhs.false.5063

lor.lhs.false.5063:                               ; preds = %land.lhs.true.5058
  %2648 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %tobool5064 = icmp ne %struct.sv* %2648, null
  br i1 %tobool5064, label %land.lhs.true.5065, label %lor.lhs.false.5074

land.lhs.true.5065:                               ; preds = %lor.lhs.false.5063
  %2649 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_flags5066 = getelementptr inbounds %struct.sv, %struct.sv* %2649, i32 0, i32 2
  %2650 = load i32, i32* %sv_flags5066, align 4
  %and5067 = and i32 %2650, 536870912
  %tobool5068 = icmp ne i32 %and5067, 0
  br i1 %tobool5068, label %land.lhs.true.5069, label %lor.lhs.false.5074

land.lhs.true.5069:                               ; preds = %land.lhs.true.5065
  %2651 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private5070 = getelementptr inbounds %struct.cop, %struct.cop* %2651, i32 0, i32 7
  %2652 = load i8, i8* %op_private5070, align 1
  %conv5071 = zext i8 %2652 to i32
  %and5072 = and i32 %conv5071, 8
  %tobool5073 = icmp ne i32 %and5072, 0
  br i1 %tobool5073, label %lor.lhs.false.5074, label %lor.lhs.false.5077

lor.lhs.false.5074:                               ; preds = %land.lhs.true.5069, %land.lhs.true.5065, %lor.lhs.false.5063
  %2653 = load i32, i32* @PL_hints, align 4
  %and5075 = and i32 %2653, 8388608
  %tobool5076 = icmp ne i32 %and5075, 0
  br i1 %tobool5076, label %lor.lhs.false.5077, label %cond.true.5081

lor.lhs.false.5077:                               ; preds = %lor.lhs.false.5074, %land.lhs.true.5069
  %2654 = load i8*, i8** %s, align 8
  %2655 = load i8, i8* %2654, align 1
  %conv5078 = zext i8 %2655 to i32
  %cmp5079 = icmp slt i32 %conv5078, 192
  br i1 %cmp5079, label %cond.true.5081, label %cond.false.5101

cond.true.5081:                                   ; preds = %lor.lhs.false.5077, %lor.lhs.false.5074, %land.lhs.true.5058
  %2656 = load i8*, i8** %s, align 8
  %2657 = load i8, i8* %2656, align 1
  %conv5082 = sext i8 %2657 to i32
  %cmp5083 = icmp sge i32 %conv5082, 65
  br i1 %cmp5083, label %land.lhs.true.5085, label %lor.lhs.false.5089

land.lhs.true.5085:                               ; preds = %cond.true.5081
  %2658 = load i8*, i8** %s, align 8
  %2659 = load i8, i8* %2658, align 1
  %conv5086 = sext i8 %2659 to i32
  %cmp5087 = icmp sle i32 %conv5086, 90
  br i1 %cmp5087, label %land.lhs.true.5112, label %lor.lhs.false.5089

lor.lhs.false.5089:                               ; preds = %land.lhs.true.5085, %cond.true.5081
  %2660 = load i8*, i8** %s, align 8
  %2661 = load i8, i8* %2660, align 1
  %conv5090 = sext i8 %2661 to i32
  %cmp5091 = icmp sge i32 %conv5090, 97
  br i1 %cmp5091, label %land.lhs.true.5093, label %lor.lhs.false.5097

land.lhs.true.5093:                               ; preds = %lor.lhs.false.5089
  %2662 = load i8*, i8** %s, align 8
  %2663 = load i8, i8* %2662, align 1
  %conv5094 = sext i8 %2663 to i32
  %cmp5095 = icmp sle i32 %conv5094, 122
  br i1 %cmp5095, label %land.lhs.true.5112, label %lor.lhs.false.5097

lor.lhs.false.5097:                               ; preds = %land.lhs.true.5093, %lor.lhs.false.5089
  %2664 = load i8*, i8** %s, align 8
  %2665 = load i8, i8* %2664, align 1
  %conv5098 = sext i8 %2665 to i32
  %cmp5099 = icmp eq i32 %conv5098, 95
  br i1 %cmp5099, label %land.lhs.true.5112, label %lor.lhs.false.5108

cond.false.5101:                                  ; preds = %lor.lhs.false.5077
  %2666 = load i8*, i8** %s, align 8
  %call5102 = call signext i8 @Perl_is_utf8_idcont(i8* %2666)
  %conv5103 = sext i8 %call5102 to i32
  %tobool5104 = icmp ne i32 %conv5103, 0
  br i1 %tobool5104, label %land.lhs.true.5105, label %lor.lhs.false.5108

land.lhs.true.5105:                               ; preds = %cond.false.5101
  %2667 = load i8*, i8** %s, align 8
  %call5106 = call signext i8 @Perl_is_utf8_digit(i8* %2667)
  %tobool5107 = icmp ne i8 %call5106, 0
  br i1 %tobool5107, label %lor.lhs.false.5108, label %land.lhs.true.5112

lor.lhs.false.5108:                               ; preds = %land.lhs.true.5105, %cond.false.5101, %lor.lhs.false.5097
  %2668 = load i8*, i8** %s, align 8
  %2669 = load i8, i8* %2668, align 1
  %conv5109 = sext i8 %2669 to i32
  %cmp5110 = icmp eq i32 %conv5109, 36
  br i1 %cmp5110, label %land.lhs.true.5112, label %if.end.5116

land.lhs.true.5112:                               ; preds = %lor.lhs.false.5108, %land.lhs.true.5105, %lor.lhs.false.5097, %land.lhs.true.5093, %land.lhs.true.5085
  %2670 = load i8*, i8** %s, align 8
  %2671 = load %struct.gv*, %struct.gv** %gv, align 8
  %call5113 = call i32 @S_intuit_method(i8* %2670, %struct.gv* %2671)
  store i32 %call5113, i32* %tmp, align 4
  %tobool5114 = icmp ne i32 %call5113, 0
  br i1 %tobool5114, label %if.then.5115, label %if.end.5116

if.then.5115:                                     ; preds = %land.lhs.true.5112
  %2672 = load i32, i32* %tmp, align 4
  store i32 %2672, i32* %retval
  br label %return

if.end.5116:                                      ; preds = %land.lhs.true.5112, %lor.lhs.false.5108, %if.end.5056
  %2673 = load %struct.gv*, %struct.gv** %gv, align 8
  %tobool5117 = icmp ne %struct.gv* %2673, null
  br i1 %tobool5117, label %land.lhs.true.5118, label %if.end.5242

land.lhs.true.5118:                               ; preds = %if.end.5116
  %2674 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_any5119 = getelementptr inbounds %struct.gv, %struct.gv* %2674, i32 0, i32 0
  %2675 = load %struct.xpvgv*, %struct.xpvgv** %sv_any5119, align 8
  %xgv_gp5120 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %2675, i32 0, i32 7
  %2676 = load %struct.gp*, %struct.gp** %xgv_gp5120, align 8
  %gp_cvgen5121 = getelementptr inbounds %struct.gp, %struct.gp* %2676, i32 0, i32 8
  %2677 = load i32, i32* %gp_cvgen5121, align 4
  %tobool5122 = icmp ne i32 %2677, 0
  br i1 %tobool5122, label %cond.true.5123, label %cond.false.5124

cond.true.5123:                                   ; preds = %land.lhs.true.5118
  br i1 false, label %if.then.5129, label %if.end.5242

cond.false.5124:                                  ; preds = %land.lhs.true.5118
  %2678 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_any5125 = getelementptr inbounds %struct.gv, %struct.gv* %2678, i32 0, i32 0
  %2679 = load %struct.xpvgv*, %struct.xpvgv** %sv_any5125, align 8
  %xgv_gp5126 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %2679, i32 0, i32 7
  %2680 = load %struct.gp*, %struct.gp** %xgv_gp5126, align 8
  %gp_cv5127 = getelementptr inbounds %struct.gp, %struct.gp* %2680, i32 0, i32 7
  %2681 = load %struct.cv*, %struct.cv** %gp_cv5127, align 8
  %tobool5128 = icmp ne %struct.cv* %2681, null
  br i1 %tobool5128, label %if.then.5129, label %if.end.5242

if.then.5129:                                     ; preds = %cond.false.5124, %cond.true.5123
  %2682 = load i8, i8* %lastchar, align 1
  %conv5132 = sext i8 %2682 to i32
  %cmp5133 = icmp eq i32 %conv5132, 45
  br i1 %cmp5133, label %land.lhs.true.5135, label %if.end.5156

land.lhs.true.5135:                               ; preds = %if.then.5129
  %2683 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings5136 = getelementptr inbounds %struct.cop, %struct.cop* %2683, i32 0, i32 14
  %2684 = load %struct.sv*, %struct.sv** %cop_warnings5136, align 8
  %cmp5137 = icmp eq %struct.sv* %2684, null
  br i1 %cmp5137, label %if.then.5155, label %lor.lhs.false.5139

lor.lhs.false.5139:                               ; preds = %land.lhs.true.5135
  %2685 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings5140 = getelementptr inbounds %struct.cop, %struct.cop* %2685, i32 0, i32 14
  %2686 = load %struct.sv*, %struct.sv** %cop_warnings5140, align 8
  %cmp5141 = icmp eq %struct.sv* %2686, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 1)
  br i1 %cmp5141, label %if.then.5155, label %lor.lhs.false.5143

lor.lhs.false.5143:                               ; preds = %lor.lhs.false.5139
  %2687 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings5144 = getelementptr inbounds %struct.cop, %struct.cop* %2687, i32 0, i32 14
  %2688 = load %struct.sv*, %struct.sv** %cop_warnings5144, align 8
  %cmp5145 = icmp ne %struct.sv* %2688, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 2)
  br i1 %cmp5145, label %land.lhs.true.5147, label %if.end.5156

land.lhs.true.5147:                               ; preds = %lor.lhs.false.5143
  %2689 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings5148 = getelementptr inbounds %struct.cop, %struct.cop* %2689, i32 0, i32 14
  %2690 = load %struct.sv*, %struct.sv** %cop_warnings5148, align 8
  %sv_any5149 = getelementptr inbounds %struct.sv, %struct.sv* %2690, i32 0, i32 0
  %2691 = load i8*, i8** %sv_any5149, align 8
  %2692 = bitcast i8* %2691 to %struct.xpv*
  %xpv_pv5150 = getelementptr inbounds %struct.xpv, %struct.xpv* %2692, i32 0, i32 0
  %2693 = load i8*, i8** %xpv_pv5150, align 8
  %arrayidx5151 = getelementptr inbounds i8, i8* %2693, i64 7
  %2694 = load i8, i8* %arrayidx5151, align 1
  %conv5152 = sext i8 %2694 to i32
  %and5153 = and i32 %conv5152, 4
  %tobool5154 = icmp ne i32 %and5153, 0
  br i1 %tobool5154, label %if.then.5155, label %if.end.5156

if.then.5155:                                     ; preds = %land.lhs.true.5147, %lor.lhs.false.5139, %land.lhs.true.5135
  call void (i32, i8*, ...) @Perl_warner(i32 29, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.79, i32 0, i32 0), i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i32 0), i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i32 0))
  br label %if.end.5156

if.end.5156:                                      ; preds = %if.then.5155, %land.lhs.true.5147, %lor.lhs.false.5143, %if.then.5129
  %2695 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_any5157 = getelementptr inbounds %struct.gv, %struct.gv* %2695, i32 0, i32 0
  %2696 = load %struct.xpvgv*, %struct.xpvgv** %sv_any5157, align 8
  %xgv_gp5158 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %2696, i32 0, i32 7
  %2697 = load %struct.gp*, %struct.gp** %xgv_gp5158, align 8
  %gp_cv5159 = getelementptr inbounds %struct.gp, %struct.gp* %2697, i32 0, i32 7
  %2698 = load %struct.cv*, %struct.cv** %gp_cv5159, align 8
  store %struct.cv* %2698, %struct.cv** %cv5131, align 8
  %2699 = load %struct.cv*, %struct.cv** %cv5131, align 8
  %call5160 = call %struct.sv* @Perl_cv_const_sv(%struct.cv* %2699)
  store %struct.sv* %call5160, %struct.sv** %sv4650, align 8
  %tobool5161 = icmp ne %struct.sv* %call5160, null
  br i1 %tobool5161, label %if.then.5162, label %if.end.5172

if.then.5162:                                     ; preds = %if.end.5156
  br label %its_constant

its_constant:                                     ; preds = %if.then.5162, %if.then.5027
  %2700 = load %struct.op*, %struct.op** bitcast (%union.YYSTYPE* @PL_yylval to %struct.op**), align 8
  %2701 = bitcast %struct.op* %2700 to %struct.svop*
  %op_sv5163 = getelementptr inbounds %struct.svop, %struct.svop* %2701, i32 0, i32 8
  %2702 = load %struct.sv*, %struct.sv** %op_sv5163, align 8
  call void @Perl_sv_free(%struct.sv* %2702)
  %2703 = load %struct.sv*, %struct.sv** %sv4650, align 8
  store %struct.sv* %2703, %struct.sv** @PL_Sv, align 8
  %2704 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %tobool5164 = icmp ne %struct.sv* %2704, null
  br i1 %tobool5164, label %land.rhs.5165, label %land.end.5168

land.rhs.5165:                                    ; preds = %its_constant
  %2705 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_refcnt = getelementptr inbounds %struct.sv, %struct.sv* %2705, i32 0, i32 1
  %2706 = load i32, i32* %sv_refcnt, align 4
  %inc5166 = add i32 %2706, 1
  store i32 %inc5166, i32* %sv_refcnt, align 4
  %tobool5167 = icmp ne i32 %inc5166, 0
  br label %land.end.5168

land.end.5168:                                    ; preds = %land.rhs.5165, %its_constant
  %2707 = phi i1 [ false, %its_constant ], [ %tobool5167, %land.rhs.5165 ]
  %land.ext5169 = zext i1 %2707 to i32
  %2708 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %2709 = load %struct.op*, %struct.op** bitcast (%union.YYSTYPE* @PL_yylval to %struct.op**), align 8
  %2710 = bitcast %struct.op* %2709 to %struct.svop*
  %op_sv5170 = getelementptr inbounds %struct.svop, %struct.svop* %2710, i32 0, i32 8
  store %struct.sv* %2708, %struct.sv** %op_sv5170, align 8
  %2711 = load %struct.op*, %struct.op** bitcast (%union.YYSTYPE* @PL_yylval to %struct.op**), align 8
  %op_private5171 = getelementptr inbounds %struct.op, %struct.op* %2711, i32 0, i32 7
  store i8 0, i8* %op_private5171, align 1
  %2712 = load i8*, i8** %s, align 8
  store i8* %2712, i8** @PL_bufptr, align 8
  store i32 257, i32* %retval
  br label %return

if.end.5172:                                      ; preds = %if.end.5156
  %2713 = load %struct.op*, %struct.op** bitcast (%union.YYSTYPE* @PL_yylval to %struct.op**), align 8
  call void @Perl_op_free(%struct.op* %2713)
  %2714 = load %struct.gv*, %struct.gv** %gv, align 8
  %call5173 = call %struct.op* @Perl_newGVOP(i32 7, i32 0, %struct.gv* %2714)
  %call5174 = call %struct.op* @Perl_newCVREF(i32 0, %struct.op* %call5173)
  store %struct.op* %call5174, %struct.op** bitcast (%union.YYSTYPE* @PL_yylval to %struct.op**), align 8
  %2715 = load %struct.op*, %struct.op** bitcast (%union.YYSTYPE* @PL_yylval to %struct.op**), align 8
  %op_private5175 = getelementptr inbounds %struct.op, %struct.op* %2715, i32 0, i32 7
  %2716 = load i8, i8* %op_private5175, align 1
  %conv5176 = zext i8 %2716 to i32
  %or5177 = or i32 %conv5176, 128
  %conv5178 = trunc i32 %or5177 to i8
  store i8 %conv5178, i8* %op_private5175, align 1
  %2717 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %2717, i8** @PL_last_lop, align 8
  store i16 166, i16* @PL_last_lop_op, align 2
  %2718 = load %struct.cv*, %struct.cv** %cv5131, align 8
  %sv_flags5179 = getelementptr inbounds %struct.cv, %struct.cv* %2718, i32 0, i32 2
  %2719 = load i32, i32* %sv_flags5179, align 4
  %and5180 = and i32 %2719, 262144
  %tobool5181 = icmp ne i32 %and5180, 0
  br i1 %tobool5181, label %if.then.5182, label %if.end.5238

if.then.5182:                                     ; preds = %if.end.5172
  %2720 = load %struct.cv*, %struct.cv** %cv5131, align 8
  %2721 = bitcast %struct.cv* %2720 to %struct.sv*
  %sv_flags5186 = getelementptr inbounds %struct.sv, %struct.sv* %2721, i32 0, i32 2
  %2722 = load i32, i32* %sv_flags5186, align 4
  %and5187 = and i32 %2722, 262144
  %cmp5188 = icmp eq i32 %and5187, 262144
  br i1 %cmp5188, label %cond.true.5190, label %cond.false.5195

cond.true.5190:                                   ; preds = %if.then.5182
  %2723 = load %struct.cv*, %struct.cv** %cv5131, align 8
  %2724 = bitcast %struct.cv* %2723 to %struct.sv*
  %sv_any5191 = getelementptr inbounds %struct.sv, %struct.sv* %2724, i32 0, i32 0
  %2725 = load i8*, i8** %sv_any5191, align 8
  %2726 = bitcast i8* %2725 to %struct.xpv*
  %xpv_cur5192 = getelementptr inbounds %struct.xpv, %struct.xpv* %2726, i32 0, i32 1
  %2727 = load i64, i64* %xpv_cur5192, align 8
  store i64 %2727, i64* %len5184, align 8
  %2728 = load %struct.cv*, %struct.cv** %cv5131, align 8
  %2729 = bitcast %struct.cv* %2728 to %struct.sv*
  %sv_any5193 = getelementptr inbounds %struct.sv, %struct.sv* %2729, i32 0, i32 0
  %2730 = load i8*, i8** %sv_any5193, align 8
  %2731 = bitcast i8* %2730 to %struct.xpv*
  %xpv_pv5194 = getelementptr inbounds %struct.xpv, %struct.xpv* %2731, i32 0, i32 0
  %2732 = load i8*, i8** %xpv_pv5194, align 8
  br label %cond.end.5197

cond.false.5195:                                  ; preds = %if.then.5182
  %2733 = load %struct.cv*, %struct.cv** %cv5131, align 8
  %2734 = bitcast %struct.cv* %2733 to %struct.sv*
  %call5196 = call i8* @Perl_sv_2pv_flags(%struct.sv* %2734, i64* %len5184, i32 2)
  br label %cond.end.5197

cond.end.5197:                                    ; preds = %cond.false.5195, %cond.true.5190
  %cond5198 = phi i8* [ %2732, %cond.true.5190 ], [ %call5196, %cond.false.5195 ]
  store i8* %cond5198, i8** %proto, align 8
  %2735 = load i64, i64* %len5184, align 8
  %tobool5199 = icmp ne i64 %2735, 0
  br i1 %tobool5199, label %if.end.5209, label %if.then.5200

if.then.5200:                                     ; preds = %cond.end.5197
  %2736 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line5201 = getelementptr inbounds %struct.cop, %struct.cop* %2736, i32 0, i32 13
  %2737 = load i32, i32* %cop_line5201, align 4
  %2738 = load i32, i32* @PL_copline, align 4
  %cmp5202 = icmp ult i32 %2737, %2738
  br i1 %cmp5202, label %cond.true.5204, label %cond.false.5206

cond.true.5204:                                   ; preds = %if.then.5200
  %2739 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line5205 = getelementptr inbounds %struct.cop, %struct.cop* %2739, i32 0, i32 13
  %2740 = load i32, i32* %cop_line5205, align 4
  br label %cond.end.5207

cond.false.5206:                                  ; preds = %if.then.5200
  %2741 = load i32, i32* @PL_copline, align 4
  br label %cond.end.5207

cond.end.5207:                                    ; preds = %cond.false.5206, %cond.true.5204
  %cond5208 = phi i32 [ %2740, %cond.true.5204 ], [ %2741, %cond.false.5206 ]
  store i32 %cond5208, i32* @PL_copline, align 4
  store i32 0, i32* @PL_expect, align 4
  %2742 = load i8*, i8** %s, align 8
  store i8* %2742, i8** @PL_bufptr, align 8
  store i32 263, i32* %retval
  br label %return

if.end.5209:                                      ; preds = %cond.end.5197
  %2743 = load i8*, i8** %proto, align 8
  %2744 = load i8, i8* %2743, align 1
  %conv5210 = sext i8 %2744 to i32
  %cmp5211 = icmp eq i32 %conv5210, 36
  br i1 %cmp5211, label %land.lhs.true.5213, label %if.end.5219

land.lhs.true.5213:                               ; preds = %if.end.5209
  %2745 = load i8*, i8** %proto, align 8
  %arrayidx5214 = getelementptr inbounds i8, i8* %2745, i64 1
  %2746 = load i8, i8* %arrayidx5214, align 1
  %conv5215 = sext i8 %2746 to i32
  %cmp5216 = icmp eq i32 %conv5215, 0
  br i1 %cmp5216, label %if.then.5218, label %if.end.5219

if.then.5218:                                     ; preds = %land.lhs.true.5213
  store i32 1, i32* @PL_expect, align 4
  %2747 = load i8*, i8** %s, align 8
  store i8* %2747, i8** @PL_bufptr, align 8
  store i32 264, i32* %retval
  br label %return

if.end.5219:                                      ; preds = %land.lhs.true.5213, %if.end.5209
  br label %while.cond.5220

while.cond.5220:                                  ; preds = %while.body.5224, %if.end.5219
  %2748 = load i8*, i8** %proto, align 8
  %2749 = load i8, i8* %2748, align 1
  %conv5221 = sext i8 %2749 to i32
  %cmp5222 = icmp eq i32 %conv5221, 59
  br i1 %cmp5222, label %while.body.5224, label %while.end.5226

while.body.5224:                                  ; preds = %while.cond.5220
  %2750 = load i8*, i8** %proto, align 8
  %incdec.ptr5225 = getelementptr inbounds i8, i8* %2750, i32 1
  store i8* %incdec.ptr5225, i8** %proto, align 8
  br label %while.cond.5220

while.end.5226:                                   ; preds = %while.cond.5220
  %2751 = load i8*, i8** %proto, align 8
  %2752 = load i8, i8* %2751, align 1
  %conv5227 = sext i8 %2752 to i32
  %cmp5228 = icmp eq i32 %conv5227, 38
  br i1 %cmp5228, label %land.lhs.true.5230, label %if.end.5237

land.lhs.true.5230:                               ; preds = %while.end.5226
  %2753 = load i8*, i8** %s, align 8
  %2754 = load i8, i8* %2753, align 1
  %conv5231 = sext i8 %2754 to i32
  %cmp5232 = icmp eq i32 %conv5231, 123
  br i1 %cmp5232, label %if.then.5234, label %if.end.5237

if.then.5234:                                     ; preds = %land.lhs.true.5230
  %2755 = load %struct.sv*, %struct.sv** @PL_subname, align 8
  %2756 = load %struct.hv*, %struct.hv** @PL_curstash, align 8
  %tobool5235 = icmp ne %struct.hv* %2756, null
  %cond5236 = select i1 %tobool5235, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.80, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.81, i32 0, i32 0)
  call void @Perl_sv_setpv(%struct.sv* %2755, i8* %cond5236)
  store i32 4, i32* @PL_expect, align 4
  %2757 = load i8*, i8** %s, align 8
  store i8* %2757, i8** @PL_bufptr, align 8
  store i32 265, i32* %retval
  br label %return

if.end.5237:                                      ; preds = %land.lhs.true.5230, %while.end.5226
  br label %if.end.5238

if.end.5238:                                      ; preds = %if.end.5237, %if.end.5172
  %2758 = load %struct.op*, %struct.op** bitcast (%union.YYSTYPE* @PL_yylval to %struct.op**), align 8
  %2759 = load i32, i32* @PL_nexttoke, align 4
  %idxprom5239 = sext i32 %2759 to i64
  %arrayidx5240 = getelementptr inbounds [5 x %union.YYSTYPE], [5 x %union.YYSTYPE]* @PL_nextval, i32 0, i64 %idxprom5239
  %opval5241 = bitcast %union.YYSTYPE* %arrayidx5240 to %struct.op**
  store %struct.op* %2758, %struct.op** %opval5241, align 8
  store i32 1, i32* @PL_expect, align 4
  call void @S_force_next(i32 257)
  %2760 = load i8*, i8** %s, align 8
  store i8* %2760, i8** @PL_bufptr, align 8
  store i32 294, i32* %retval
  br label %return

if.end.5242:                                      ; preds = %cond.false.5124, %cond.true.5123, %if.end.5116
  %2761 = load i32, i32* @PL_hints, align 4
  %and5243 = and i32 %2761, 512
  %tobool5244 = icmp ne i32 %and5243, 0
  br i1 %tobool5244, label %if.then.5245, label %if.else.5250

if.then.5245:                                     ; preds = %if.end.5242
  %2762 = load %struct.op*, %struct.op** bitcast (%union.YYSTYPE* @PL_yylval to %struct.op**), align 8
  %op_private5246 = getelementptr inbounds %struct.op, %struct.op* %2762, i32 0, i32 7
  %2763 = load i8, i8* %op_private5246, align 1
  %conv5247 = zext i8 %2763 to i32
  %or5248 = or i32 %conv5247, 8
  %conv5249 = trunc i32 %or5248 to i8
  store i8 %conv5249, i8* %op_private5246, align 1
  br label %if.end.5310

if.else.5250:                                     ; preds = %if.end.5242
  br label %bareword

bareword:                                         ; preds = %if.else.5250, %if.then.4915
  %2764 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings5251 = getelementptr inbounds %struct.cop, %struct.cop* %2764, i32 0, i32 14
  %2765 = load %struct.sv*, %struct.sv** %cop_warnings5251, align 8
  %cmp5252 = icmp ne %struct.sv* %2765, null
  br i1 %cmp5252, label %land.lhs.true.5254, label %lor.lhs.false.5270

land.lhs.true.5254:                               ; preds = %bareword
  %2766 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings5255 = getelementptr inbounds %struct.cop, %struct.cop* %2766, i32 0, i32 14
  %2767 = load %struct.sv*, %struct.sv** %cop_warnings5255, align 8
  %cmp5256 = icmp ne %struct.sv* %2767, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 2)
  br i1 %cmp5256, label %land.lhs.true.5258, label %lor.lhs.false.5270

land.lhs.true.5258:                               ; preds = %land.lhs.true.5254
  %2768 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings5259 = getelementptr inbounds %struct.cop, %struct.cop* %2768, i32 0, i32 14
  %2769 = load %struct.sv*, %struct.sv** %cop_warnings5259, align 8
  %cmp5260 = icmp eq %struct.sv* %2769, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 1)
  br i1 %cmp5260, label %if.then.5278, label %lor.lhs.false.5262

lor.lhs.false.5262:                               ; preds = %land.lhs.true.5258
  %2770 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings5263 = getelementptr inbounds %struct.cop, %struct.cop* %2770, i32 0, i32 14
  %2771 = load %struct.sv*, %struct.sv** %cop_warnings5263, align 8
  %sv_any5264 = getelementptr inbounds %struct.sv, %struct.sv* %2771, i32 0, i32 0
  %2772 = load i8*, i8** %sv_any5264, align 8
  %2773 = bitcast i8* %2772 to %struct.xpv*
  %xpv_pv5265 = getelementptr inbounds %struct.xpv, %struct.xpv* %2773, i32 0, i32 0
  %2774 = load i8*, i8** %xpv_pv5265, align 8
  %arrayidx5266 = getelementptr inbounds i8, i8* %2774, i64 9
  %2775 = load i8, i8* %arrayidx5266, align 1
  %conv5267 = sext i8 %2775 to i32
  %and5268 = and i32 %conv5267, 4
  %tobool5269 = icmp ne i32 %and5268, 0
  br i1 %tobool5269, label %if.then.5278, label %lor.lhs.false.5270

lor.lhs.false.5270:                               ; preds = %lor.lhs.false.5262, %land.lhs.true.5254, %bareword
  %2776 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings5271 = getelementptr inbounds %struct.cop, %struct.cop* %2776, i32 0, i32 14
  %2777 = load %struct.sv*, %struct.sv** %cop_warnings5271, align 8
  %cmp5272 = icmp eq %struct.sv* %2777, null
  br i1 %cmp5272, label %land.lhs.true.5274, label %if.end.5309

land.lhs.true.5274:                               ; preds = %lor.lhs.false.5270
  %2778 = load i8, i8* @PL_dowarn, align 1
  %conv5275 = zext i8 %2778 to i32
  %and5276 = and i32 %conv5275, 1
  %tobool5277 = icmp ne i32 %and5276, 0
  br i1 %tobool5277, label %if.then.5278, label %if.end.5309

if.then.5278:                                     ; preds = %land.lhs.true.5274, %lor.lhs.false.5262, %land.lhs.true.5258
  %2779 = load i8, i8* %lastchar, align 1
  %conv5279 = sext i8 %2779 to i32
  %cmp5280 = icmp ne i32 %conv5279, 45
  br i1 %cmp5280, label %if.then.5282, label %if.end.5308

if.then.5282:                                     ; preds = %if.then.5278
  store i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i32 0), i8** %d, align 8
  br label %for.cond.5283

for.cond.5283:                                    ; preds = %for.inc.5299, %if.then.5282
  %2780 = load i8*, i8** %d, align 8
  %2781 = load i8, i8* %2780, align 1
  %conv5284 = sext i8 %2781 to i32
  %tobool5285 = icmp ne i32 %conv5284, 0
  br i1 %tobool5285, label %land.rhs.5286, label %land.end.5296

land.rhs.5286:                                    ; preds = %for.cond.5283
  %2782 = load i8*, i8** %d, align 8
  %2783 = load i8, i8* %2782, align 1
  %conv5287 = sext i8 %2783 to i32
  %cmp5288 = icmp sge i32 %conv5287, 97
  br i1 %cmp5288, label %land.rhs.5290, label %land.end.5294

land.rhs.5290:                                    ; preds = %land.rhs.5286
  %2784 = load i8*, i8** %d, align 8
  %2785 = load i8, i8* %2784, align 1
  %conv5291 = sext i8 %2785 to i32
  %cmp5292 = icmp sle i32 %conv5291, 122
  br label %land.end.5294

land.end.5294:                                    ; preds = %land.rhs.5290, %land.rhs.5286
  %2786 = phi i1 [ false, %land.rhs.5286 ], [ %cmp5292, %land.rhs.5290 ]
  br label %land.end.5296

land.end.5296:                                    ; preds = %land.end.5294, %for.cond.5283
  %2787 = phi i1 [ false, %for.cond.5283 ], [ %2786, %land.end.5294 ]
  br i1 %2787, label %for.body.5298, label %for.end.5301

for.body.5298:                                    ; preds = %land.end.5296
  br label %for.inc.5299

for.inc.5299:                                     ; preds = %for.body.5298
  %2788 = load i8*, i8** %d, align 8
  %incdec.ptr5300 = getelementptr inbounds i8, i8* %2788, i32 1
  store i8* %incdec.ptr5300, i8** %d, align 8
  br label %for.cond.5283

for.end.5301:                                     ; preds = %land.end.5296
  %2789 = load i8*, i8** %d, align 8
  %2790 = load i8, i8* %2789, align 1
  %tobool5302 = icmp ne i8 %2790, 0
  br i1 %tobool5302, label %if.end.5307, label %land.lhs.true.5303

land.lhs.true.5303:                               ; preds = %for.end.5301
  %call5304 = call %struct.hv* @Perl_gv_stashpv(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i32 0), i32 0)
  %tobool5305 = icmp ne %struct.hv* %call5304, null
  br i1 %tobool5305, label %if.end.5307, label %if.then.5306

if.then.5306:                                     ; preds = %land.lhs.true.5303
  call void (i32, i8*, ...) @Perl_warner(i32 37, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @PL_warn_reserved, i32 0, i32 0), i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i32 0))
  br label %if.end.5307

if.end.5307:                                      ; preds = %if.then.5306, %land.lhs.true.5303, %for.end.5301
  br label %if.end.5308

if.end.5308:                                      ; preds = %if.end.5307, %if.then.5278
  br label %if.end.5309

if.end.5309:                                      ; preds = %if.end.5308, %land.lhs.true.5274, %lor.lhs.false.5270
  br label %if.end.5310

if.end.5310:                                      ; preds = %if.end.5309, %if.then.5245
  br label %safe_bareword

safe_bareword:                                    ; preds = %if.end.5310, %if.then.4803
  %2791 = load i8, i8* %lastchar, align 1
  %conv5311 = sext i8 %2791 to i32
  %cmp5312 = icmp eq i32 %conv5311, 42
  br i1 %cmp5312, label %land.lhs.true.5322, label %lor.lhs.false.5314

lor.lhs.false.5314:                               ; preds = %safe_bareword
  %2792 = load i8, i8* %lastchar, align 1
  %conv5315 = sext i8 %2792 to i32
  %cmp5316 = icmp eq i32 %conv5315, 37
  br i1 %cmp5316, label %land.lhs.true.5322, label %lor.lhs.false.5318

lor.lhs.false.5318:                               ; preds = %lor.lhs.false.5314
  %2793 = load i8, i8* %lastchar, align 1
  %conv5319 = sext i8 %2793 to i32
  %cmp5320 = icmp eq i32 %conv5319, 38
  br i1 %cmp5320, label %land.lhs.true.5322, label %if.end.5346

land.lhs.true.5322:                               ; preds = %lor.lhs.false.5318, %lor.lhs.false.5314, %safe_bareword
  %2794 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings5323 = getelementptr inbounds %struct.cop, %struct.cop* %2794, i32 0, i32 14
  %2795 = load %struct.sv*, %struct.sv** %cop_warnings5323, align 8
  %cmp5324 = icmp eq %struct.sv* %2795, null
  br i1 %cmp5324, label %if.then.5342, label %lor.lhs.false.5326

lor.lhs.false.5326:                               ; preds = %land.lhs.true.5322
  %2796 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings5327 = getelementptr inbounds %struct.cop, %struct.cop* %2796, i32 0, i32 14
  %2797 = load %struct.sv*, %struct.sv** %cop_warnings5327, align 8
  %cmp5328 = icmp eq %struct.sv* %2797, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 1)
  br i1 %cmp5328, label %if.then.5342, label %lor.lhs.false.5330

lor.lhs.false.5330:                               ; preds = %lor.lhs.false.5326
  %2798 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings5331 = getelementptr inbounds %struct.cop, %struct.cop* %2798, i32 0, i32 14
  %2799 = load %struct.sv*, %struct.sv** %cop_warnings5331, align 8
  %cmp5332 = icmp ne %struct.sv* %2799, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 2)
  br i1 %cmp5332, label %land.lhs.true.5334, label %if.end.5346

land.lhs.true.5334:                               ; preds = %lor.lhs.false.5330
  %2800 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings5335 = getelementptr inbounds %struct.cop, %struct.cop* %2800, i32 0, i32 14
  %2801 = load %struct.sv*, %struct.sv** %cop_warnings5335, align 8
  %sv_any5336 = getelementptr inbounds %struct.sv, %struct.sv* %2801, i32 0, i32 0
  %2802 = load i8*, i8** %sv_any5336, align 8
  %2803 = bitcast i8* %2802 to %struct.xpv*
  %xpv_pv5337 = getelementptr inbounds %struct.xpv, %struct.xpv* %2803, i32 0, i32 0
  %2804 = load i8*, i8** %xpv_pv5337, align 8
  %arrayidx5338 = getelementptr inbounds i8, i8* %2804, i64 7
  %2805 = load i8, i8* %arrayidx5338, align 1
  %conv5339 = sext i8 %2805 to i32
  %and5340 = and i32 %conv5339, 4
  %tobool5341 = icmp ne i32 %and5340, 0
  br i1 %tobool5341, label %if.then.5342, label %if.end.5346

if.then.5342:                                     ; preds = %land.lhs.true.5334, %lor.lhs.false.5326, %land.lhs.true.5322
  %2806 = load i8, i8* %lastchar, align 1
  %conv5343 = sext i8 %2806 to i32
  call void (i32, i8*, ...) @Perl_warner(i32 29, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.82, i32 0, i32 0), i32 %conv5343, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i32 0))
  %2807 = load i8, i8* %lastchar, align 1
  %conv5344 = sext i8 %2807 to i32
  %2808 = load i8, i8* %lastchar, align 1
  %conv5345 = sext i8 %2808 to i32
  call void (i32, i8*, ...) @Perl_warner(i32 29, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.83, i32 0, i32 0), i32 %conv5344, i32 %conv5345)
  br label %if.end.5346

if.end.5346:                                      ; preds = %if.then.5342, %land.lhs.true.5334, %lor.lhs.false.5330, %lor.lhs.false.5318
  %2809 = load i8*, i8** %s, align 8
  store i8* %2809, i8** @PL_bufptr, align 8
  store i32 257, i32* %retval
  br label %return

sw.bb.5347:                                       ; preds = %reserved_word
  %2810 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_filegv5348 = getelementptr inbounds %struct.cop, %struct.cop* %2810, i32 0, i32 10
  %2811 = load %struct.gv*, %struct.gv** %cop_filegv5348, align 8
  %tobool5349 = icmp ne %struct.gv* %2811, null
  br i1 %tobool5349, label %cond.true.5350, label %cond.false.5355

cond.true.5350:                                   ; preds = %sw.bb.5347
  %2812 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_filegv5351 = getelementptr inbounds %struct.cop, %struct.cop* %2812, i32 0, i32 10
  %2813 = load %struct.gv*, %struct.gv** %cop_filegv5351, align 8
  %sv_any5352 = getelementptr inbounds %struct.gv, %struct.gv* %2813, i32 0, i32 0
  %2814 = load %struct.xpvgv*, %struct.xpvgv** %sv_any5352, align 8
  %xgv_gp5353 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %2814, i32 0, i32 7
  %2815 = load %struct.gp*, %struct.gp** %xgv_gp5353, align 8
  %gp_sv = getelementptr inbounds %struct.gp, %struct.gp* %2815, i32 0, i32 0
  %2816 = load %struct.sv*, %struct.sv** %gp_sv, align 8
  %tobool5354 = icmp ne %struct.sv* %2816, null
  br i1 %tobool5354, label %cond.true.5356, label %cond.false.5369

cond.false.5355:                                  ; preds = %sw.bb.5347
  br i1 false, label %cond.true.5356, label %cond.false.5369

cond.true.5356:                                   ; preds = %cond.false.5355, %cond.true.5350
  %2817 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_filegv5357 = getelementptr inbounds %struct.cop, %struct.cop* %2817, i32 0, i32 10
  %2818 = load %struct.gv*, %struct.gv** %cop_filegv5357, align 8
  %tobool5358 = icmp ne %struct.gv* %2818, null
  br i1 %tobool5358, label %cond.true.5359, label %cond.false.5364

cond.true.5359:                                   ; preds = %cond.true.5356
  %2819 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_filegv5360 = getelementptr inbounds %struct.cop, %struct.cop* %2819, i32 0, i32 10
  %2820 = load %struct.gv*, %struct.gv** %cop_filegv5360, align 8
  %sv_any5361 = getelementptr inbounds %struct.gv, %struct.gv* %2820, i32 0, i32 0
  %2821 = load %struct.xpvgv*, %struct.xpvgv** %sv_any5361, align 8
  %xgv_gp5362 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %2821, i32 0, i32 7
  %2822 = load %struct.gp*, %struct.gp** %xgv_gp5362, align 8
  %gp_sv5363 = getelementptr inbounds %struct.gp, %struct.gp* %2822, i32 0, i32 0
  %2823 = load %struct.sv*, %struct.sv** %gp_sv5363, align 8
  br label %cond.end.5365

cond.false.5364:                                  ; preds = %cond.true.5356
  br label %cond.end.5365

cond.end.5365:                                    ; preds = %cond.false.5364, %cond.true.5359
  %cond5366 = phi %struct.sv* [ %2823, %cond.true.5359 ], [ null, %cond.false.5364 ]
  %sv_any5367 = getelementptr inbounds %struct.sv, %struct.sv* %cond5366, i32 0, i32 0
  %2824 = load i8*, i8** %sv_any5367, align 8
  %2825 = bitcast i8* %2824 to %struct.xpv*
  %xpv_pv5368 = getelementptr inbounds %struct.xpv, %struct.xpv* %2825, i32 0, i32 0
  %2826 = load i8*, i8** %xpv_pv5368, align 8
  br label %cond.end.5370

cond.false.5369:                                  ; preds = %cond.false.5355, %cond.true.5350
  br label %cond.end.5370

cond.end.5370:                                    ; preds = %cond.false.5369, %cond.end.5365
  %cond5371 = phi i8* [ %2826, %cond.end.5365 ], [ null, %cond.false.5369 ]
  %call5372 = call %struct.sv* @Perl_newSVpv(i8* %cond5371, i64 0)
  %call5373 = call %struct.op* @Perl_newSVOP(i32 5, i32 0, %struct.sv* %call5372)
  store %struct.op* %call5373, %struct.op** bitcast (%union.YYSTYPE* @PL_yylval to %struct.op**), align 8
  %2827 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line5374 = getelementptr inbounds %struct.cop, %struct.cop* %2827, i32 0, i32 13
  %2828 = load i32, i32* %cop_line5374, align 4
  %2829 = load i32, i32* @PL_copline, align 4
  %cmp5375 = icmp ult i32 %2828, %2829
  br i1 %cmp5375, label %cond.true.5377, label %cond.false.5379

cond.true.5377:                                   ; preds = %cond.end.5370
  %2830 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line5378 = getelementptr inbounds %struct.cop, %struct.cop* %2830, i32 0, i32 13
  %2831 = load i32, i32* %cop_line5378, align 4
  br label %cond.end.5380

cond.false.5379:                                  ; preds = %cond.end.5370
  %2832 = load i32, i32* @PL_copline, align 4
  br label %cond.end.5380

cond.end.5380:                                    ; preds = %cond.false.5379, %cond.true.5377
  %cond5381 = phi i32 [ %2831, %cond.true.5377 ], [ %2832, %cond.false.5379 ]
  store i32 %cond5381, i32* @PL_copline, align 4
  store i32 0, i32* @PL_expect, align 4
  %2833 = load i8*, i8** %s, align 8
  store i8* %2833, i8** @PL_bufptr, align 8
  store i32 260, i32* %retval
  br label %return

sw.bb.5382:                                       ; preds = %reserved_word
  %2834 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line5383 = getelementptr inbounds %struct.cop, %struct.cop* %2834, i32 0, i32 13
  %2835 = load i32, i32* %cop_line5383, align 4
  %conv5384 = zext i32 %2835 to i64
  %call5385 = call %struct.sv* (i8*, ...) @Perl_newSVpvf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.84, i32 0, i32 0), i64 %conv5384)
  %call5386 = call %struct.op* @Perl_newSVOP(i32 5, i32 0, %struct.sv* %call5385)
  store %struct.op* %call5386, %struct.op** bitcast (%union.YYSTYPE* @PL_yylval to %struct.op**), align 8
  %2836 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line5387 = getelementptr inbounds %struct.cop, %struct.cop* %2836, i32 0, i32 13
  %2837 = load i32, i32* %cop_line5387, align 4
  %2838 = load i32, i32* @PL_copline, align 4
  %cmp5388 = icmp ult i32 %2837, %2838
  br i1 %cmp5388, label %cond.true.5390, label %cond.false.5392

cond.true.5390:                                   ; preds = %sw.bb.5382
  %2839 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line5391 = getelementptr inbounds %struct.cop, %struct.cop* %2839, i32 0, i32 13
  %2840 = load i32, i32* %cop_line5391, align 4
  br label %cond.end.5393

cond.false.5392:                                  ; preds = %sw.bb.5382
  %2841 = load i32, i32* @PL_copline, align 4
  br label %cond.end.5393

cond.end.5393:                                    ; preds = %cond.false.5392, %cond.true.5390
  %cond5394 = phi i32 [ %2840, %cond.true.5390 ], [ %2841, %cond.false.5392 ]
  store i32 %cond5394, i32* @PL_copline, align 4
  store i32 0, i32* @PL_expect, align 4
  %2842 = load i8*, i8** %s, align 8
  store i8* %2842, i8** @PL_bufptr, align 8
  store i32 260, i32* %retval
  br label %return

sw.bb.5395:                                       ; preds = %reserved_word
  %2843 = load %struct.hv*, %struct.hv** @PL_curstash, align 8
  %tobool5396 = icmp ne %struct.hv* %2843, null
  br i1 %tobool5396, label %cond.true.5397, label %cond.false.5400

cond.true.5397:                                   ; preds = %sw.bb.5395
  %2844 = load %struct.hv*, %struct.hv** @PL_curstash, align 8
  %sv_any5398 = getelementptr inbounds %struct.hv, %struct.hv* %2844, i32 0, i32 0
  %2845 = load %struct.xpvhv*, %struct.xpvhv** %sv_any5398, align 8
  %xhv_name = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %2845, i32 0, i32 10
  %2846 = load i8*, i8** %xhv_name, align 8
  %call5399 = call %struct.sv* @Perl_newSVpv(i8* %2846, i64 0)
  br label %cond.end.5401

cond.false.5400:                                  ; preds = %sw.bb.5395
  br label %cond.end.5401

cond.end.5401:                                    ; preds = %cond.false.5400, %cond.true.5397
  %cond5402 = phi %struct.sv* [ %call5399, %cond.true.5397 ], [ @PL_sv_undef, %cond.false.5400 ]
  %call5403 = call %struct.op* @Perl_newSVOP(i32 5, i32 0, %struct.sv* %cond5402)
  store %struct.op* %call5403, %struct.op** bitcast (%union.YYSTYPE* @PL_yylval to %struct.op**), align 8
  %2847 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line5404 = getelementptr inbounds %struct.cop, %struct.cop* %2847, i32 0, i32 13
  %2848 = load i32, i32* %cop_line5404, align 4
  %2849 = load i32, i32* @PL_copline, align 4
  %cmp5405 = icmp ult i32 %2848, %2849
  br i1 %cmp5405, label %cond.true.5407, label %cond.false.5409

cond.true.5407:                                   ; preds = %cond.end.5401
  %2850 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line5408 = getelementptr inbounds %struct.cop, %struct.cop* %2850, i32 0, i32 13
  %2851 = load i32, i32* %cop_line5408, align 4
  br label %cond.end.5410

cond.false.5409:                                  ; preds = %cond.end.5401
  %2852 = load i32, i32* @PL_copline, align 4
  br label %cond.end.5410

cond.end.5410:                                    ; preds = %cond.false.5409, %cond.true.5407
  %cond5411 = phi i32 [ %2851, %cond.true.5407 ], [ %2852, %cond.false.5409 ]
  store i32 %cond5411, i32* @PL_copline, align 4
  store i32 0, i32* @PL_expect, align 4
  %2853 = load i8*, i8** %s, align 8
  store i8* %2853, i8** @PL_bufptr, align 8
  store i32 260, i32* %retval
  br label %return

sw.bb.5412:                                       ; preds = %reserved_word, %reserved_word
  %2854 = load volatile %struct._PerlIO**, %struct._PerlIO*** @PL_rsfp, align 8
  %tobool5415 = icmp ne %struct._PerlIO** %2854, null
  br i1 %tobool5415, label %land.lhs.true.5416, label %if.end.5570

land.lhs.true.5416:                               ; preds = %sw.bb.5412
  %2855 = load volatile i32, i32* @PL_in_eval, align 4
  %tobool5417 = icmp ne i32 %2855, 0
  br i1 %tobool5417, label %lor.lhs.false.5418, label %if.then.5422

lor.lhs.false.5418:                               ; preds = %land.lhs.true.5416
  %2856 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i64 2), align 1
  %conv5419 = sext i8 %2856 to i32
  %cmp5420 = icmp eq i32 %conv5419, 68
  br i1 %cmp5420, label %if.then.5422, label %if.end.5570

if.then.5422:                                     ; preds = %lor.lhs.false.5418, %land.lhs.true.5416
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.85, i32 0, i32 0), i8** %pname, align 8
  %2857 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i64 2), align 1
  %conv5424 = sext i8 %2857 to i32
  %cmp5425 = icmp eq i32 %conv5424, 68
  br i1 %cmp5425, label %if.then.5427, label %if.end.5435

if.then.5427:                                     ; preds = %if.then.5422
  %2858 = load %struct.hv*, %struct.hv** @PL_curstash, align 8
  %tobool5428 = icmp ne %struct.hv* %2858, null
  br i1 %tobool5428, label %cond.true.5429, label %cond.false.5430

cond.true.5429:                                   ; preds = %if.then.5427
  %2859 = load %struct.hv*, %struct.hv** @PL_curstash, align 8
  br label %cond.end.5431

cond.false.5430:                                  ; preds = %if.then.5427
  %2860 = load %struct.hv*, %struct.hv** @PL_defstash, align 8
  br label %cond.end.5431

cond.end.5431:                                    ; preds = %cond.false.5430, %cond.true.5429
  %cond5432 = phi %struct.hv* [ %2859, %cond.true.5429 ], [ %2860, %cond.false.5430 ]
  %sv_any5433 = getelementptr inbounds %struct.hv, %struct.hv* %cond5432, i32 0, i32 0
  %2861 = load %struct.xpvhv*, %struct.xpvhv** %sv_any5433, align 8
  %xhv_name5434 = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %2861, i32 0, i32 10
  %2862 = load i8*, i8** %xhv_name5434, align 8
  store i8* %2862, i8** %pname, align 8
  br label %if.end.5435

if.end.5435:                                      ; preds = %cond.end.5431, %if.then.5422
  %2863 = load i8*, i8** %pname, align 8
  %call5436 = call i8* (i8*, ...) @Perl_form(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.86, i32 0, i32 0), i8* %2863)
  %call5437 = call %struct.gv* @Perl_gv_fetchpv(i8* %call5436, i32 1, i32 15)
  store %struct.gv* %call5437, %struct.gv** %gv5414, align 8
  %2864 = load %struct.gv*, %struct.gv** %gv5414, align 8
  %sv_any5438 = getelementptr inbounds %struct.gv, %struct.gv* %2864, i32 0, i32 0
  %2865 = load %struct.xpvgv*, %struct.xpvgv** %sv_any5438, align 8
  %xgv_flags5439 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %2865, i32 0, i32 11
  %2866 = load i8, i8* %xgv_flags5439, align 1
  %conv5440 = zext i8 %2866 to i32
  %or5441 = or i32 %conv5440, 2
  %conv5442 = trunc i32 %or5441 to i8
  store i8 %conv5442, i8* %xgv_flags5439, align 1
  %2867 = load %struct.gv*, %struct.gv** %gv5414, align 8
  %tobool5443 = icmp ne %struct.gv* %2867, null
  br i1 %tobool5443, label %land.lhs.true.5444, label %cond.false.5457

land.lhs.true.5444:                               ; preds = %if.end.5435
  %2868 = load %struct.gv*, %struct.gv** %gv5414, align 8
  %2869 = bitcast %struct.gv* %2868 to %struct.sv*
  %sv_flags5445 = getelementptr inbounds %struct.sv, %struct.sv* %2869, i32 0, i32 2
  %2870 = load i32, i32* %sv_flags5445, align 4
  %and5446 = and i32 %2870, 255
  %cmp5447 = icmp eq i32 %and5446, 13
  br i1 %cmp5447, label %land.lhs.true.5449, label %cond.false.5457

land.lhs.true.5449:                               ; preds = %land.lhs.true.5444
  %2871 = load %struct.gv*, %struct.gv** %gv5414, align 8
  %sv_any5450 = getelementptr inbounds %struct.gv, %struct.gv* %2871, i32 0, i32 0
  %2872 = load %struct.xpvgv*, %struct.xpvgv** %sv_any5450, align 8
  %xgv_gp5451 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %2872, i32 0, i32 7
  %2873 = load %struct.gp*, %struct.gp** %xgv_gp5451, align 8
  %tobool5452 = icmp ne %struct.gp* %2873, null
  br i1 %tobool5452, label %cond.true.5453, label %cond.false.5457

cond.true.5453:                                   ; preds = %land.lhs.true.5449
  %2874 = load %struct.gv*, %struct.gv** %gv5414, align 8
  %sv_any5454 = getelementptr inbounds %struct.gv, %struct.gv* %2874, i32 0, i32 0
  %2875 = load %struct.xpvgv*, %struct.xpvgv** %sv_any5454, align 8
  %xgv_gp5455 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %2875, i32 0, i32 7
  %2876 = load %struct.gp*, %struct.gp** %xgv_gp5455, align 8
  %gp_io = getelementptr inbounds %struct.gp, %struct.gp* %2876, i32 0, i32 2
  %2877 = load %struct.io*, %struct.io** %gp_io, align 8
  %tobool5456 = icmp ne %struct.io* %2877, null
  br i1 %tobool5456, label %if.end.5463, label %if.then.5458

cond.false.5457:                                  ; preds = %land.lhs.true.5449, %land.lhs.true.5444, %if.end.5435
  br i1 false, label %if.end.5463, label %if.then.5458

if.then.5458:                                     ; preds = %cond.false.5457, %cond.true.5453
  %call5459 = call %struct.io* @Perl_newIO()
  %2878 = load %struct.gv*, %struct.gv** %gv5414, align 8
  %sv_any5460 = getelementptr inbounds %struct.gv, %struct.gv* %2878, i32 0, i32 0
  %2879 = load %struct.xpvgv*, %struct.xpvgv** %sv_any5460, align 8
  %xgv_gp5461 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %2879, i32 0, i32 7
  %2880 = load %struct.gp*, %struct.gp** %xgv_gp5461, align 8
  %gp_io5462 = getelementptr inbounds %struct.gp, %struct.gp* %2880, i32 0, i32 2
  store %struct.io* %call5459, %struct.io** %gp_io5462, align 8
  br label %if.end.5463

if.end.5463:                                      ; preds = %if.then.5458, %cond.false.5457, %cond.true.5453
  %2881 = load volatile %struct._PerlIO**, %struct._PerlIO*** @PL_rsfp, align 8
  %2882 = load %struct.gv*, %struct.gv** %gv5414, align 8
  %sv_any5464 = getelementptr inbounds %struct.gv, %struct.gv* %2882, i32 0, i32 0
  %2883 = load %struct.xpvgv*, %struct.xpvgv** %sv_any5464, align 8
  %xgv_gp5465 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %2883, i32 0, i32 7
  %2884 = load %struct.gp*, %struct.gp** %xgv_gp5465, align 8
  %gp_io5466 = getelementptr inbounds %struct.gp, %struct.gp* %2884, i32 0, i32 2
  %2885 = load %struct.io*, %struct.io** %gp_io5466, align 8
  %sv_any5467 = getelementptr inbounds %struct.io, %struct.io* %2885, i32 0, i32 0
  %2886 = load %struct.xpvio*, %struct.xpvio** %sv_any5467, align 8
  %xio_ifp = getelementptr inbounds %struct.xpvio, %struct.xpvio* %2886, i32 0, i32 7
  store %struct._PerlIO** %2881, %struct._PerlIO*** %xio_ifp, align 8
  %2887 = load volatile %struct._PerlIO**, %struct._PerlIO*** @PL_rsfp, align 8
  %call5469 = call i32 @Perl_PerlIO_fileno(%struct._PerlIO** %2887)
  store i32 %call5469, i32* %fd, align 4
  %2888 = load i32, i32* %fd, align 4
  %2889 = load i32, i32* %fd, align 4
  %cmp5470 = icmp sge i32 %2889, 3
  %conv5471 = zext i1 %cmp5470 to i32
  %call5472 = call i32 (i32, i32, ...) @fcntl(i32 %2888, i32 2, i32 %conv5471)
  %2890 = load %struct.gv*, %struct.gv** %gv5414, align 8
  %sv_any5473 = getelementptr inbounds %struct.gv, %struct.gv* %2890, i32 0, i32 0
  %2891 = load %struct.xpvgv*, %struct.xpvgv** %sv_any5473, align 8
  %xgv_gp5474 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %2891, i32 0, i32 7
  %2892 = load %struct.gp*, %struct.gp** %xgv_gp5474, align 8
  %gp_io5475 = getelementptr inbounds %struct.gp, %struct.gp* %2892, i32 0, i32 2
  %2893 = load %struct.io*, %struct.io** %gp_io5475, align 8
  %sv_any5476 = getelementptr inbounds %struct.io, %struct.io* %2893, i32 0, i32 0
  %2894 = load %struct.xpvio*, %struct.xpvio** %sv_any5476, align 8
  %xio_flags = getelementptr inbounds %struct.xpvio, %struct.xpvio* %2894, i32 0, i32 22
  %2895 = load i8, i8* %xio_flags, align 1
  %conv5477 = sext i8 %2895 to i32
  %or5478 = or i32 %conv5477, 16
  %conv5479 = trunc i32 %or5478 to i8
  store i8 %conv5479, i8* %xio_flags, align 1
  %2896 = load i8, i8* @PL_preprocess, align 1
  %tobool5480 = icmp ne i8 %2896, 0
  br i1 %tobool5480, label %if.then.5481, label %if.else.5486

if.then.5481:                                     ; preds = %if.end.5463
  %2897 = load %struct.gv*, %struct.gv** %gv5414, align 8
  %sv_any5482 = getelementptr inbounds %struct.gv, %struct.gv* %2897, i32 0, i32 0
  %2898 = load %struct.xpvgv*, %struct.xpvgv** %sv_any5482, align 8
  %xgv_gp5483 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %2898, i32 0, i32 7
  %2899 = load %struct.gp*, %struct.gp** %xgv_gp5483, align 8
  %gp_io5484 = getelementptr inbounds %struct.gp, %struct.gp* %2899, i32 0, i32 2
  %2900 = load %struct.io*, %struct.io** %gp_io5484, align 8
  %sv_any5485 = getelementptr inbounds %struct.io, %struct.io* %2900, i32 0, i32 0
  %2901 = load %struct.xpvio*, %struct.xpvio** %sv_any5485, align 8
  %xio_type = getelementptr inbounds %struct.xpvio, %struct.xpvio* %2901, i32 0, i32 21
  store i8 124, i8* %xio_type, align 1
  br label %if.end.5503

if.else.5486:                                     ; preds = %if.end.5463
  %2902 = load volatile %struct._PerlIO**, %struct._PerlIO*** @PL_rsfp, align 8
  %call5487 = call %struct._PerlIO** @Perl_PerlIO_stdin()
  %cmp5488 = icmp eq %struct._PerlIO** %2902, %call5487
  br i1 %cmp5488, label %if.then.5490, label %if.else.5496

if.then.5490:                                     ; preds = %if.else.5486
  %2903 = load %struct.gv*, %struct.gv** %gv5414, align 8
  %sv_any5491 = getelementptr inbounds %struct.gv, %struct.gv* %2903, i32 0, i32 0
  %2904 = load %struct.xpvgv*, %struct.xpvgv** %sv_any5491, align 8
  %xgv_gp5492 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %2904, i32 0, i32 7
  %2905 = load %struct.gp*, %struct.gp** %xgv_gp5492, align 8
  %gp_io5493 = getelementptr inbounds %struct.gp, %struct.gp* %2905, i32 0, i32 2
  %2906 = load %struct.io*, %struct.io** %gp_io5493, align 8
  %sv_any5494 = getelementptr inbounds %struct.io, %struct.io* %2906, i32 0, i32 0
  %2907 = load %struct.xpvio*, %struct.xpvio** %sv_any5494, align 8
  %xio_type5495 = getelementptr inbounds %struct.xpvio, %struct.xpvio* %2907, i32 0, i32 21
  store i8 45, i8* %xio_type5495, align 1
  br label %if.end.5502

if.else.5496:                                     ; preds = %if.else.5486
  %2908 = load %struct.gv*, %struct.gv** %gv5414, align 8
  %sv_any5497 = getelementptr inbounds %struct.gv, %struct.gv* %2908, i32 0, i32 0
  %2909 = load %struct.xpvgv*, %struct.xpvgv** %sv_any5497, align 8
  %xgv_gp5498 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %2909, i32 0, i32 7
  %2910 = load %struct.gp*, %struct.gp** %xgv_gp5498, align 8
  %gp_io5499 = getelementptr inbounds %struct.gp, %struct.gp* %2910, i32 0, i32 2
  %2911 = load %struct.io*, %struct.io** %gp_io5499, align 8
  %sv_any5500 = getelementptr inbounds %struct.io, %struct.io* %2911, i32 0, i32 0
  %2912 = load %struct.xpvio*, %struct.xpvio** %sv_any5500, align 8
  %xio_type5501 = getelementptr inbounds %struct.xpvio, %struct.xpvio* %2912, i32 0, i32 21
  store i8 60, i8* %xio_type5501, align 1
  br label %if.end.5502

if.end.5502:                                      ; preds = %if.else.5496, %if.then.5490
  br label %if.end.5503

if.end.5503:                                      ; preds = %if.end.5502, %if.then.5481
  %2913 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private5504 = getelementptr inbounds %struct.cop, %struct.cop* %2913, i32 0, i32 7
  %2914 = load i8, i8* %op_private5504, align 1
  %conv5505 = zext i8 %2914 to i32
  %and5506 = and i32 %conv5505, 8
  %tobool5507 = icmp ne i32 %and5506, 0
  br i1 %tobool5507, label %if.end.5569, label %if.then.5508

if.then.5508:                                     ; preds = %if.end.5503
  %2915 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %tobool5509 = icmp ne %struct.sv* %2915, null
  br i1 %tobool5509, label %land.lhs.true.5510, label %lor.lhs.false.5519

land.lhs.true.5510:                               ; preds = %if.then.5508
  %2916 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_flags5511 = getelementptr inbounds %struct.sv, %struct.sv* %2916, i32 0, i32 2
  %2917 = load i32, i32* %sv_flags5511, align 4
  %and5512 = and i32 %2917, 536870912
  %tobool5513 = icmp ne i32 %and5512, 0
  br i1 %tobool5513, label %land.lhs.true.5514, label %lor.lhs.false.5519

land.lhs.true.5514:                               ; preds = %land.lhs.true.5510
  %2918 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private5515 = getelementptr inbounds %struct.cop, %struct.cop* %2918, i32 0, i32 7
  %2919 = load i8, i8* %op_private5515, align 1
  %conv5516 = zext i8 %2919 to i32
  %and5517 = and i32 %conv5516, 8
  %tobool5518 = icmp ne i32 %and5517, 0
  br i1 %tobool5518, label %lor.lhs.false.5519, label %if.then.5522

lor.lhs.false.5519:                               ; preds = %land.lhs.true.5514, %land.lhs.true.5510, %if.then.5508
  %2920 = load i32, i32* @PL_hints, align 4
  %and5520 = and i32 %2920, 8388608
  %tobool5521 = icmp ne i32 %and5520, 0
  br i1 %tobool5521, label %if.then.5522, label %if.else.5524

if.then.5522:                                     ; preds = %lor.lhs.false.5519, %land.lhs.true.5514
  %2921 = load volatile %struct._PerlIO**, %struct._PerlIO*** @PL_rsfp, align 8
  %call5523 = call i32 @PerlIO_apply_layers(%struct._PerlIO** %2921, i8* null, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.87, i32 0, i32 0))
  br label %if.end.5568

if.else.5524:                                     ; preds = %lor.lhs.false.5519
  %2922 = load %struct.sv*, %struct.sv** @PL_encoding, align 8
  %tobool5525 = icmp ne %struct.sv* %2922, null
  br i1 %tobool5525, label %if.then.5526, label %if.end.5567

if.then.5526:                                     ; preds = %if.else.5524
  %2923 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %2923, %struct.sv*** %sp, align 8
  call void @Perl_push_scope()
  call void @Perl_save_int(i32* @PL_tmps_floor)
  %2924 = load i32, i32* @PL_tmps_ix, align 4
  store i32 %2924, i32* @PL_tmps_floor, align 4
  %2925 = load i32*, i32** @PL_markstack_ptr, align 8
  %incdec.ptr5529 = getelementptr inbounds i32, i32* %2925, i32 1
  store i32* %incdec.ptr5529, i32** @PL_markstack_ptr, align 8
  %2926 = load i32*, i32** @PL_markstack_max, align 8
  %cmp5530 = icmp eq i32* %incdec.ptr5529, %2926
  br i1 %cmp5530, label %if.then.5532, label %if.end.5533

if.then.5532:                                     ; preds = %if.then.5526
  call void @Perl_markstack_grow()
  br label %if.end.5533

if.end.5533:                                      ; preds = %if.then.5532, %if.then.5526
  %2927 = load %struct.sv**, %struct.sv*** %sp, align 8
  %2928 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %sub.ptr.lhs.cast5535 = ptrtoint %struct.sv** %2927 to i64
  %sub.ptr.rhs.cast5536 = ptrtoint %struct.sv** %2928 to i64
  %sub.ptr.sub5537 = sub i64 %sub.ptr.lhs.cast5535, %sub.ptr.rhs.cast5536
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub5537, 8
  %conv5538 = trunc i64 %sub.ptr.div to i32
  %2929 = load i32*, i32** @PL_markstack_ptr, align 8
  store i32 %conv5538, i32* %2929, align 4
  store i32 %conv5538, i32* %tmp5534
  %2930 = load i32, i32* %tmp5534
  %2931 = load %struct.sv**, %struct.sv*** @PL_stack_max, align 8
  %2932 = load %struct.sv**, %struct.sv*** %sp, align 8
  %sub.ptr.lhs.cast5539 = ptrtoint %struct.sv** %2931 to i64
  %sub.ptr.rhs.cast5540 = ptrtoint %struct.sv** %2932 to i64
  %sub.ptr.sub5541 = sub i64 %sub.ptr.lhs.cast5539, %sub.ptr.rhs.cast5540
  %sub.ptr.div5542 = sdiv exact i64 %sub.ptr.sub5541, 8
  %cmp5543 = icmp slt i64 %sub.ptr.div5542, 1
  br i1 %cmp5543, label %if.then.5545, label %if.end.5547

if.then.5545:                                     ; preds = %if.end.5533
  %2933 = load %struct.sv**, %struct.sv*** %sp, align 8
  %2934 = load %struct.sv**, %struct.sv*** %sp, align 8
  %call5546 = call %struct.sv** @Perl_stack_grow(%struct.sv** %2933, %struct.sv** %2934, i32 1)
  store %struct.sv** %call5546, %struct.sv*** %sp, align 8
  br label %if.end.5547

if.end.5547:                                      ; preds = %if.then.5545, %if.end.5533
  %2935 = load %struct.sv**, %struct.sv*** @PL_stack_max, align 8
  %2936 = load %struct.sv**, %struct.sv*** %sp, align 8
  %sub.ptr.lhs.cast5548 = ptrtoint %struct.sv** %2935 to i64
  %sub.ptr.rhs.cast5549 = ptrtoint %struct.sv** %2936 to i64
  %sub.ptr.sub5550 = sub i64 %sub.ptr.lhs.cast5548, %sub.ptr.rhs.cast5549
  %sub.ptr.div5551 = sdiv exact i64 %sub.ptr.sub5550, 8
  %cmp5552 = icmp slt i64 %sub.ptr.div5551, 1
  br i1 %cmp5552, label %if.then.5554, label %if.end.5556

if.then.5554:                                     ; preds = %if.end.5547
  %2937 = load %struct.sv**, %struct.sv*** %sp, align 8
  %2938 = load %struct.sv**, %struct.sv*** %sp, align 8
  %call5555 = call %struct.sv** @Perl_stack_grow(%struct.sv** %2937, %struct.sv** %2938, i32 1)
  store %struct.sv** %call5555, %struct.sv*** %sp, align 8
  br label %if.end.5556

if.end.5556:                                      ; preds = %if.then.5554, %if.end.5547
  %2939 = load %struct.sv*, %struct.sv** @PL_encoding, align 8
  %2940 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr5558 = getelementptr inbounds %struct.sv*, %struct.sv** %2940, i32 1
  store %struct.sv** %incdec.ptr5558, %struct.sv*** %sp, align 8
  store %struct.sv* %2939, %struct.sv** %incdec.ptr5558, align 8
  store %struct.sv* %2939, %struct.sv** %tmp5557
  %2941 = load %struct.sv*, %struct.sv** %tmp5557
  %2942 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %2942, %struct.sv*** @PL_stack_sp, align 8
  %call5559 = call i32 @Perl_call_method(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.88, i32 0, i32 0), i32 0)
  %2943 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %2943, %struct.sv*** %sp, align 8
  %2944 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr5560 = getelementptr inbounds %struct.sv*, %struct.sv** %2944, i32 -1
  store %struct.sv** %incdec.ptr5560, %struct.sv*** %sp, align 8
  %2945 = load %struct.sv*, %struct.sv** %2944, align 8
  store %struct.sv* %2945, %struct.sv** %name, align 8
  %2946 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %2946, %struct.sv*** @PL_stack_sp, align 8
  %2947 = load volatile %struct._PerlIO**, %struct._PerlIO*** @PL_rsfp, align 8
  %2948 = load %struct.sv*, %struct.sv** %name, align 8
  %call5561 = call i8* (i8*, ...) @Perl_form(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.89, i32 0, i32 0), %struct.sv* %2948)
  %call5562 = call i32 @PerlIO_apply_layers(%struct._PerlIO** %2947, i8* null, i8* %call5561)
  %2949 = load i32, i32* @PL_tmps_ix, align 4
  %2950 = load i32, i32* @PL_tmps_floor, align 4
  %cmp5563 = icmp sgt i32 %2949, %2950
  br i1 %cmp5563, label %if.then.5565, label %if.end.5566

if.then.5565:                                     ; preds = %if.end.5556
  call void @Perl_free_tmps()
  br label %if.end.5566

if.end.5566:                                      ; preds = %if.then.5565, %if.end.5556
  call void @Perl_pop_scope()
  br label %if.end.5567

if.end.5567:                                      ; preds = %if.end.5566, %if.else.5524
  br label %if.end.5568

if.end.5568:                                      ; preds = %if.end.5567, %if.then.5522
  br label %if.end.5569

if.end.5569:                                      ; preds = %if.end.5568, %if.end.5503
  store volatile %struct._PerlIO** null, %struct._PerlIO*** @PL_rsfp, align 8
  br label %if.end.5570

if.end.5570:                                      ; preds = %if.end.5569, %lor.lhs.false.5418, %sw.bb.5412
  br label %fake_eof

sw.bb.5571:                                       ; preds = %reserved_word, %reserved_word, %reserved_word, %reserved_word, %reserved_word, %reserved_word
  %2951 = load i32, i32* @PL_expect, align 4
  %cmp5572 = icmp eq i32 %2951, 3
  br i1 %cmp5572, label %if.then.5574, label %if.end.5575

if.then.5574:                                     ; preds = %sw.bb.5571
  %2952 = load i8*, i8** @PL_bufptr, align 8
  store i8* %2952, i8** %s, align 8
  br label %really_sub

if.end.5575:                                      ; preds = %sw.bb.5571
  br label %just_a_word

sw.bb.5576:                                       ; preds = %reserved_word
  %2953 = load i8*, i8** %s, align 8
  %2954 = load i8, i8* %2953, align 1
  %conv5577 = sext i8 %2954 to i32
  %cmp5578 = icmp eq i32 %conv5577, 58
  br i1 %cmp5578, label %land.lhs.true.5580, label %if.end.5598

land.lhs.true.5580:                               ; preds = %sw.bb.5576
  %2955 = load i8*, i8** %s, align 8
  %arrayidx5581 = getelementptr inbounds i8, i8* %2955, i64 1
  %2956 = load i8, i8* %arrayidx5581, align 1
  %conv5582 = sext i8 %2956 to i32
  %cmp5583 = icmp eq i32 %conv5582, 58
  br i1 %cmp5583, label %if.then.5585, label %if.end.5598

if.then.5585:                                     ; preds = %land.lhs.true.5580
  %2957 = load i8*, i8** %s, align 8
  %add.ptr5586 = getelementptr inbounds i8, i8* %2957, i64 2
  store i8* %add.ptr5586, i8** %s, align 8
  %2958 = load i8*, i8** %s, align 8
  store i8* %2958, i8** %d, align 8
  %2959 = load i8*, i8** %s, align 8
  %call5587 = call i8* @S_scan_word(i8* %2959, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i32 0), i64 256, i32 0, i64* %len)
  store i8* %call5587, i8** %s, align 8
  %2960 = load i64, i64* %len, align 8
  %conv5588 = trunc i64 %2960 to i32
  %call5589 = call i32 @Perl_keyword(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i32 0), i32 %conv5588)
  store i32 %call5589, i32* %tmp, align 4
  %tobool5590 = icmp ne i32 %call5589, 0
  br i1 %tobool5590, label %if.end.5592, label %if.then.5591

if.then.5591:                                     ; preds = %if.then.5585
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.90, i32 0, i32 0), i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i32 0))
  br label %if.end.5592

if.end.5592:                                      ; preds = %if.then.5591, %if.then.5585
  %2961 = load i32, i32* %tmp, align 4
  %cmp5593 = icmp slt i32 %2961, 0
  br i1 %cmp5593, label %if.then.5595, label %if.end.5597

if.then.5595:                                     ; preds = %if.end.5592
  %2962 = load i32, i32* %tmp, align 4
  %sub5596 = sub nsw i32 0, %2962
  store i32 %sub5596, i32* %tmp, align 4
  br label %if.end.5597

if.end.5597:                                      ; preds = %if.then.5595, %if.end.5592
  br label %reserved_word

if.end.5598:                                      ; preds = %land.lhs.true.5580, %sw.bb.5576
  br label %just_a_word

sw.bb.5599:                                       ; preds = %reserved_word
  store i32 109, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %2963 = load i8*, i8** %s, align 8
  store i8* %2963, i8** @PL_bufptr, align 8
  %2964 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %2964, i8** @PL_last_uni, align 8
  store i16 109, i16* @PL_last_lop_op, align 2
  %2965 = load i8*, i8** %s, align 8
  %2966 = load i8, i8* %2965, align 1
  %conv5600 = sext i8 %2966 to i32
  %cmp5601 = icmp eq i32 %conv5600, 40
  br i1 %cmp5601, label %lor.end.5608, label %lor.rhs.5603

lor.rhs.5603:                                     ; preds = %sw.bb.5599
  %2967 = load i8*, i8** %s, align 8
  %call5604 = call i8* @S_skipspace(i8* %2967)
  store i8* %call5604, i8** %s, align 8
  %2968 = load i8*, i8** %s, align 8
  %2969 = load i8, i8* %2968, align 1
  %conv5605 = sext i8 %2969 to i32
  %cmp5606 = icmp eq i32 %conv5605, 40
  br label %lor.end.5608

lor.end.5608:                                     ; preds = %lor.rhs.5603, %sw.bb.5599
  %2970 = phi i1 [ true, %sw.bb.5599 ], [ %cmp5606, %lor.rhs.5603 ]
  %cond5610 = select i1 %2970, i32 283, i32 285
  store i32 %cond5610, i32* %retval
  br label %return

sw.bb.5611:                                       ; preds = %reserved_word
  store i32 296, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %2971 = load i8*, i8** %s, align 8
  store i8* %2971, i8** @PL_bufptr, align 8
  %2972 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %2972, i8** @PL_last_uni, align 8
  store i16 296, i16* @PL_last_lop_op, align 2
  %2973 = load i8*, i8** %s, align 8
  %2974 = load i8, i8* %2973, align 1
  %conv5612 = sext i8 %2974 to i32
  %cmp5613 = icmp eq i32 %conv5612, 40
  br i1 %cmp5613, label %lor.end.5620, label %lor.rhs.5615

lor.rhs.5615:                                     ; preds = %sw.bb.5611
  %2975 = load i8*, i8** %s, align 8
  %call5616 = call i8* @S_skipspace(i8* %2975)
  store i8* %call5616, i8** %s, align 8
  %2976 = load i8*, i8** %s, align 8
  %2977 = load i8, i8* %2976, align 1
  %conv5617 = sext i8 %2977 to i32
  %cmp5618 = icmp eq i32 %conv5617, 40
  br label %lor.end.5620

lor.end.5620:                                     ; preds = %lor.rhs.5615, %sw.bb.5611
  %2978 = phi i1 [ true, %sw.bb.5611 ], [ %cmp5618, %lor.rhs.5615 ]
  %cond5622 = select i1 %2978, i32 283, i32 285
  store i32 %cond5622, i32* %retval
  br label %return

sw.bb.5623:                                       ; preds = %reserved_word
  %2979 = load i8*, i8** %s, align 8
  %call5624 = call i32 @S_lop(i32 228, i32 1, i8* %2979)
  store i32 %call5624, i32* %retval
  br label %return

sw.bb.5625:                                       ; preds = %reserved_word
  store i32 1, i32* @PL_expect, align 4
  %2980 = load i8*, i8** %s, align 8
  store i8* %2980, i8** @PL_bufptr, align 8
  store i32 301, i32* %retval
  br label %return

sw.bb.5626:                                       ; preds = %reserved_word
  %2981 = load i8*, i8** %s, align 8
  %call5627 = call i32 @S_lop(i32 98, i32 1, i8* %2981)
  store i32 %call5627, i32* %retval
  br label %return

sw.bb.5628:                                       ; preds = %reserved_word
  %2982 = load i8*, i8** %s, align 8
  %call5629 = call i32 @S_lop(i32 225, i32 1, i8* %2982)
  store i32 %call5629, i32* %retval
  br label %return

sw.bb.5630:                                       ; preds = %reserved_word
  %2983 = load i8*, i8** %s, align 8
  %call5631 = call i32 @S_lop(i32 196, i32 1, i8* %2983)
  store i32 %call5631, i32* %retval
  br label %return

sw.bb.5632:                                       ; preds = %reserved_word
  %2984 = load i8*, i8** %s, align 8
  %call5633 = call i32 @S_lop(i32 23, i32 1, i8* %2984)
  store i32 %call5633, i32* %retval
  br label %return

sw.bb.5634:                                       ; preds = %reserved_word
  store i32 38, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %2985 = load i8*, i8** %s, align 8
  store i8* %2985, i8** @PL_bufptr, align 8
  %2986 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %2986, i8** @PL_last_uni, align 8
  store i16 38, i16* @PL_last_lop_op, align 2
  %2987 = load i8*, i8** %s, align 8
  %2988 = load i8, i8* %2987, align 1
  %conv5635 = sext i8 %2988 to i32
  %cmp5636 = icmp eq i32 %conv5635, 40
  br i1 %cmp5636, label %lor.end.5643, label %lor.rhs.5638

lor.rhs.5638:                                     ; preds = %sw.bb.5634
  %2989 = load i8*, i8** %s, align 8
  %call5639 = call i8* @S_skipspace(i8* %2989)
  store i8* %call5639, i8** %s, align 8
  %2990 = load i8*, i8** %s, align 8
  %2991 = load i8, i8* %2990, align 1
  %conv5640 = sext i8 %2991 to i32
  %cmp5641 = icmp eq i32 %conv5640, 40
  br label %lor.end.5643

lor.end.5643:                                     ; preds = %lor.rhs.5638, %sw.bb.5634
  %2992 = phi i1 [ true, %sw.bb.5634 ], [ %cmp5641, %lor.rhs.5638 ]
  %cond5645 = select i1 %2992, i32 283, i32 285
  store i32 %cond5645, i32* %retval
  br label %return

sw.bb.5646:                                       ; preds = %reserved_word
  store i32 4, i32* @PL_expect, align 4
  %2993 = load i8*, i8** %s, align 8
  store i8* %2993, i8** @PL_bufptr, align 8
  store i32 278, i32* %retval
  br label %return

sw.bb.5647:                                       ; preds = %reserved_word
  %call5648 = call %struct.gv* @Perl_gv_fetchpv(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.91, i32 0, i32 0), i32 1, i32 11)
  store i32 263, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %2994 = load i8*, i8** %s, align 8
  store i8* %2994, i8** @PL_bufptr, align 8
  %2995 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %2995, i8** @PL_last_uni, align 8
  store i16 263, i16* @PL_last_lop_op, align 2
  %2996 = load i8*, i8** %s, align 8
  %2997 = load i8, i8* %2996, align 1
  %conv5649 = sext i8 %2997 to i32
  %cmp5650 = icmp eq i32 %conv5649, 40
  br i1 %cmp5650, label %lor.end.5657, label %lor.rhs.5652

lor.rhs.5652:                                     ; preds = %sw.bb.5647
  %2998 = load i8*, i8** %s, align 8
  %call5653 = call i8* @S_skipspace(i8* %2998)
  store i8* %call5653, i8** %s, align 8
  %2999 = load i8*, i8** %s, align 8
  %3000 = load i8, i8* %2999, align 1
  %conv5654 = sext i8 %3000 to i32
  %cmp5655 = icmp eq i32 %conv5654, 40
  br label %lor.end.5657

lor.end.5657:                                     ; preds = %lor.rhs.5652, %sw.bb.5647
  %3001 = phi i1 [ true, %sw.bb.5647 ], [ %cmp5655, %lor.rhs.5652 ]
  %cond5659 = select i1 %3001, i32 283, i32 285
  store i32 %cond5659, i32* %retval
  br label %return

sw.bb.5660:                                       ; preds = %reserved_word
  store i32 192, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %3002 = load i8*, i8** %s, align 8
  store i8* %3002, i8** @PL_bufptr, align 8
  %3003 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %3003, i8** @PL_last_uni, align 8
  store i16 192, i16* @PL_last_lop_op, align 2
  %3004 = load i8*, i8** %s, align 8
  %3005 = load i8, i8* %3004, align 1
  %conv5661 = sext i8 %3005 to i32
  %cmp5662 = icmp eq i32 %conv5661, 40
  br i1 %cmp5662, label %lor.end.5669, label %lor.rhs.5664

lor.rhs.5664:                                     ; preds = %sw.bb.5660
  %3006 = load i8*, i8** %s, align 8
  %call5665 = call i8* @S_skipspace(i8* %3006)
  store i8* %call5665, i8** %s, align 8
  %3007 = load i8*, i8** %s, align 8
  %3008 = load i8, i8* %3007, align 1
  %conv5666 = sext i8 %3008 to i32
  %cmp5667 = icmp eq i32 %conv5666, 40
  br label %lor.end.5669

lor.end.5669:                                     ; preds = %lor.rhs.5664, %sw.bb.5660
  %3009 = phi i1 [ true, %sw.bb.5660 ], [ %cmp5667, %lor.rhs.5664 ]
  %cond5671 = select i1 %3009, i32 283, i32 285
  store i32 %cond5671, i32* %retval
  br label %return

sw.bb.5672:                                       ; preds = %reserved_word
  store i32 280, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %3010 = load i8*, i8** %s, align 8
  store i8* %3010, i8** @PL_bufptr, align 8
  %3011 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %3011, i8** @PL_last_uni, align 8
  store i16 280, i16* @PL_last_lop_op, align 2
  %3012 = load i8*, i8** %s, align 8
  %3013 = load i8, i8* %3012, align 1
  %conv5673 = sext i8 %3013 to i32
  %cmp5674 = icmp eq i32 %conv5673, 40
  br i1 %cmp5674, label %lor.end.5681, label %lor.rhs.5676

lor.rhs.5676:                                     ; preds = %sw.bb.5672
  %3014 = load i8*, i8** %s, align 8
  %call5677 = call i8* @S_skipspace(i8* %3014)
  store i8* %call5677, i8** %s, align 8
  %3015 = load i8*, i8** %s, align 8
  %3016 = load i8, i8* %3015, align 1
  %conv5678 = sext i8 %3016 to i32
  %cmp5679 = icmp eq i32 %conv5678, 40
  br label %lor.end.5681

lor.end.5681:                                     ; preds = %lor.rhs.5676, %sw.bb.5672
  %3017 = phi i1 [ true, %sw.bb.5672 ], [ %cmp5679, %lor.rhs.5676 ]
  %cond5683 = select i1 %3017, i32 283, i32 285
  store i32 %cond5683, i32* %retval
  br label %return

sw.bb.5684:                                       ; preds = %reserved_word
  store i32 90, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %3018 = load i8*, i8** %s, align 8
  store i8* %3018, i8** @PL_bufptr, align 8
  store i32 288, i32* %retval
  br label %return

sw.bb.5685:                                       ; preds = %reserved_word
  store i32 169, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %3019 = load i8*, i8** %s, align 8
  store i8* %3019, i8** @PL_bufptr, align 8
  %3020 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %3020, i8** @PL_last_uni, align 8
  store i16 169, i16* @PL_last_lop_op, align 2
  %3021 = load i8*, i8** %s, align 8
  %3022 = load i8, i8* %3021, align 1
  %conv5686 = sext i8 %3022 to i32
  %cmp5687 = icmp eq i32 %conv5686, 40
  br i1 %cmp5687, label %lor.end.5694, label %lor.rhs.5689

lor.rhs.5689:                                     ; preds = %sw.bb.5685
  %3023 = load i8*, i8** %s, align 8
  %call5690 = call i8* @S_skipspace(i8* %3023)
  store i8* %call5690, i8** %s, align 8
  %3024 = load i8*, i8** %s, align 8
  %3025 = load i8, i8* %3024, align 1
  %conv5691 = sext i8 %3025 to i32
  %cmp5692 = icmp eq i32 %conv5691, 40
  br label %lor.end.5694

lor.end.5694:                                     ; preds = %lor.rhs.5689, %sw.bb.5685
  %3026 = phi i1 [ true, %sw.bb.5685 ], [ %cmp5692, %lor.rhs.5689 ]
  %cond5696 = select i1 %3026, i32 283, i32 285
  store i32 %cond5696, i32* %retval
  br label %return

sw.bb.5697:                                       ; preds = %reserved_word
  %3027 = load i8*, i8** %s, align 8
  %call5698 = call i32 @S_lop(i32 119, i32 1, i8* %3027)
  store i32 %call5698, i32* %retval
  br label %return

sw.bb.5699:                                       ; preds = %reserved_word
  %3028 = load i8*, i8** %s, align 8
  %call5700 = call i32 @S_lop(i32 267, i32 1, i8* %3028)
  store i32 %call5700, i32* %retval
  br label %return

sw.bb.5701:                                       ; preds = %reserved_word
  %3029 = load i8*, i8** %s, align 8
  %call5702 = call i32 @S_lop(i32 264, i32 1, i8* %3029)
  store i32 %call5702, i32* %retval
  br label %return

sw.bb.5703:                                       ; preds = %reserved_word
  %3030 = load i8*, i8** %s, align 8
  %call5704 = call i32 @S_lop(i32 226, i32 1, i8* %3030)
  store i32 %call5704, i32* %retval
  br label %return

sw.bb.5705:                                       ; preds = %reserved_word
  store i32 118, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %3031 = load i8*, i8** %s, align 8
  store i8* %3031, i8** @PL_bufptr, align 8
  %3032 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %3032, i8** @PL_last_uni, align 8
  store i16 118, i16* @PL_last_lop_op, align 2
  %3033 = load i8*, i8** %s, align 8
  %3034 = load i8, i8* %3033, align 1
  %conv5706 = sext i8 %3034 to i32
  %cmp5707 = icmp eq i32 %conv5706, 40
  br i1 %cmp5707, label %lor.end.5714, label %lor.rhs.5709

lor.rhs.5709:                                     ; preds = %sw.bb.5705
  %3035 = load i8*, i8** %s, align 8
  %call5710 = call i8* @S_skipspace(i8* %3035)
  store i8* %call5710, i8** %s, align 8
  %3036 = load i8*, i8** %s, align 8
  %3037 = load i8, i8* %3036, align 1
  %conv5711 = sext i8 %3037 to i32
  %cmp5712 = icmp eq i32 %conv5711, 40
  br label %lor.end.5714

lor.end.5714:                                     ; preds = %lor.rhs.5709, %sw.bb.5705
  %3038 = phi i1 [ true, %sw.bb.5705 ], [ %cmp5712, %lor.rhs.5709 ]
  %cond5716 = select i1 %3038, i32 283, i32 285
  store i32 %cond5716, i32* %retval
  br label %return

sw.bb.5717:                                       ; preds = %reserved_word
  store i32 100, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %3039 = load i8*, i8** %s, align 8
  store i8* %3039, i8** @PL_bufptr, align 8
  %3040 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %3040, i8** @PL_last_uni, align 8
  store i16 100, i16* @PL_last_lop_op, align 2
  %3041 = load i8*, i8** %s, align 8
  %3042 = load i8, i8* %3041, align 1
  %conv5718 = sext i8 %3042 to i32
  %cmp5719 = icmp eq i32 %conv5718, 40
  br i1 %cmp5719, label %lor.end.5726, label %lor.rhs.5721

lor.rhs.5721:                                     ; preds = %sw.bb.5717
  %3043 = load i8*, i8** %s, align 8
  %call5722 = call i8* @S_skipspace(i8* %3043)
  store i8* %call5722, i8** %s, align 8
  %3044 = load i8*, i8** %s, align 8
  %3045 = load i8, i8* %3044, align 1
  %conv5723 = sext i8 %3045 to i32
  %cmp5724 = icmp eq i32 %conv5723, 40
  br label %lor.end.5726

lor.end.5726:                                     ; preds = %lor.rhs.5721, %sw.bb.5717
  %3046 = phi i1 [ true, %sw.bb.5717 ], [ %cmp5724, %lor.rhs.5721 ]
  %cond5728 = select i1 %3046, i32 283, i32 285
  store i32 %cond5728, i32* %retval
  br label %return

sw.bb.5729:                                       ; preds = %reserved_word
  store i32 265, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %3047 = load i8*, i8** %s, align 8
  store i8* %3047, i8** @PL_bufptr, align 8
  %3048 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %3048, i8** @PL_last_uni, align 8
  store i16 265, i16* @PL_last_lop_op, align 2
  %3049 = load i8*, i8** %s, align 8
  %3050 = load i8, i8* %3049, align 1
  %conv5730 = sext i8 %3050 to i32
  %cmp5731 = icmp eq i32 %conv5730, 40
  br i1 %cmp5731, label %lor.end.5738, label %lor.rhs.5733

lor.rhs.5733:                                     ; preds = %sw.bb.5729
  %3051 = load i8*, i8** %s, align 8
  %call5734 = call i8* @S_skipspace(i8* %3051)
  store i8* %call5734, i8** %s, align 8
  %3052 = load i8*, i8** %s, align 8
  %3053 = load i8, i8* %3052, align 1
  %conv5735 = sext i8 %3053 to i32
  %cmp5736 = icmp eq i32 %conv5735, 40
  br label %lor.end.5738

lor.end.5738:                                     ; preds = %lor.rhs.5733, %sw.bb.5729
  %3054 = phi i1 [ true, %sw.bb.5729 ], [ %cmp5736, %lor.rhs.5733 ]
  %cond5740 = select i1 %3054, i32 283, i32 285
  store i32 %cond5740, i32* %retval
  br label %return

sw.bb.5741:                                       ; preds = %reserved_word
  %3055 = load i8*, i8** %s, align 8
  %call5742 = call i8* @S_skipspace(i8* %3055)
  store i8* %call5742, i8** %s, align 8
  %3056 = load i8*, i8** %s, align 8
  %3057 = load i8, i8* %3056, align 1
  %conv5743 = sext i8 %3057 to i32
  %cmp5744 = icmp eq i32 %conv5743, 123
  br i1 %cmp5744, label %if.then.5746, label %if.end.5747

if.then.5746:                                     ; preds = %sw.bb.5741
  store i32 7, i32* @PL_expect, align 4
  %3058 = load i8*, i8** %s, align 8
  store i8* %3058, i8** @PL_bufptr, align 8
  store i32 292, i32* %retval
  br label %return

if.end.5747:                                      ; preds = %sw.bb.5741
  %3059 = load i8*, i8** %s, align 8
  %3060 = load i8, i8* %3059, align 1
  %conv5748 = sext i8 %3060 to i32
  %cmp5749 = icmp ne i32 %conv5748, 39
  br i1 %cmp5749, label %if.then.5751, label %if.end.5753

if.then.5751:                                     ; preds = %if.end.5747
  %3061 = load i8*, i8** %s, align 8
  %call5752 = call i8* @S_force_word(i8* %3061, i32 257, i32 1, i32 1, i32 0)
  store i8* %call5752, i8** %s, align 8
  br label %if.end.5753

if.end.5753:                                      ; preds = %if.then.5751, %if.end.5747
  store i32 1, i32* @PL_expect, align 4
  %3062 = load i8*, i8** %s, align 8
  store i8* %3062, i8** @PL_bufptr, align 8
  store i32 292, i32* %retval
  br label %return

sw.bb.5754:                                       ; preds = %reserved_word
  %3063 = load i32, i32* @PL_hints, align 4
  %or5755 = or i32 %3063, 256
  store i32 %or5755, i32* @PL_hints, align 4
  %3064 = load i8*, i8** %s, align 8
  %call5756 = call i32 @S_lop(i32 171, i32 1, i8* %3064)
  store i32 %call5756, i32* %retval
  br label %return

sw.bb.5757:                                       ; preds = %reserved_word
  store i32 42, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %3065 = load i8*, i8** %s, align 8
  store i8* %3065, i8** @PL_bufptr, align 8
  %3066 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %3066, i8** @PL_last_uni, align 8
  store i16 42, i16* @PL_last_lop_op, align 2
  %3067 = load i8*, i8** %s, align 8
  %3068 = load i8, i8* %3067, align 1
  %conv5758 = sext i8 %3068 to i32
  %cmp5759 = icmp eq i32 %conv5758, 40
  br i1 %cmp5759, label %lor.end.5766, label %lor.rhs.5761

lor.rhs.5761:                                     ; preds = %sw.bb.5757
  %3069 = load i8*, i8** %s, align 8
  %call5762 = call i8* @S_skipspace(i8* %3069)
  store i8* %call5762, i8** %s, align 8
  %3070 = load i8*, i8** %s, align 8
  %3071 = load i8, i8* %3070, align 1
  %conv5763 = sext i8 %3071 to i32
  %cmp5764 = icmp eq i32 %conv5763, 40
  br label %lor.end.5766

lor.end.5766:                                     ; preds = %lor.rhs.5761, %sw.bb.5757
  %3072 = phi i1 [ true, %sw.bb.5757 ], [ %cmp5764, %lor.rhs.5761 ]
  %cond5768 = select i1 %3072, i32 283, i32 285
  store i32 %cond5768, i32* %retval
  br label %return

sw.bb.5769:                                       ; preds = %reserved_word
  store i32 132, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %3073 = load i8*, i8** %s, align 8
  store i8* %3073, i8** @PL_bufptr, align 8
  %3074 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %3074, i8** @PL_last_uni, align 8
  store i16 132, i16* @PL_last_lop_op, align 2
  %3075 = load i8*, i8** %s, align 8
  %3076 = load i8, i8* %3075, align 1
  %conv5770 = sext i8 %3076 to i32
  %cmp5771 = icmp eq i32 %conv5770, 40
  br i1 %cmp5771, label %lor.end.5778, label %lor.rhs.5773

lor.rhs.5773:                                     ; preds = %sw.bb.5769
  %3077 = load i8*, i8** %s, align 8
  %call5774 = call i8* @S_skipspace(i8* %3077)
  store i8* %call5774, i8** %s, align 8
  %3078 = load i8*, i8** %s, align 8
  %3079 = load i8, i8* %3078, align 1
  %conv5775 = sext i8 %3079 to i32
  %cmp5776 = icmp eq i32 %conv5775, 40
  br label %lor.end.5778

lor.end.5778:                                     ; preds = %lor.rhs.5773, %sw.bb.5769
  %3080 = phi i1 [ true, %sw.bb.5769 ], [ %cmp5776, %lor.rhs.5773 ]
  %cond5780 = select i1 %3080, i32 283, i32 285
  store i32 %cond5780, i32* %retval
  br label %return

sw.bb.5781:                                       ; preds = %reserved_word
  %call5782 = call %struct.gv* @Perl_gv_fetchpv(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.92, i32 0, i32 0), i32 2, i32 10)
  %3081 = load i8*, i8** %s, align 8
  %call5783 = call i32 @S_lop(i32 200, i32 1, i8* %3081)
  store i32 %call5783, i32* %retval
  br label %return

sw.bb.5784:                                       ; preds = %reserved_word
  store i32 201, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %3082 = load i8*, i8** %s, align 8
  store i8* %3082, i8** @PL_bufptr, align 8
  %3083 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %3083, i8** @PL_last_uni, align 8
  store i16 201, i16* @PL_last_lop_op, align 2
  %3084 = load i8*, i8** %s, align 8
  %3085 = load i8, i8* %3084, align 1
  %conv5785 = sext i8 %3085 to i32
  %cmp5786 = icmp eq i32 %conv5785, 40
  br i1 %cmp5786, label %lor.end.5793, label %lor.rhs.5788

lor.rhs.5788:                                     ; preds = %sw.bb.5784
  %3086 = load i8*, i8** %s, align 8
  %call5789 = call i8* @S_skipspace(i8* %3086)
  store i8* %call5789, i8** %s, align 8
  %3087 = load i8*, i8** %s, align 8
  %3088 = load i8, i8* %3087, align 1
  %conv5790 = sext i8 %3088 to i32
  %cmp5791 = icmp eq i32 %conv5790, 40
  br label %lor.end.5793

lor.end.5793:                                     ; preds = %lor.rhs.5788, %sw.bb.5784
  %3089 = phi i1 [ true, %sw.bb.5784 ], [ %cmp5791, %lor.rhs.5788 ]
  %cond5795 = select i1 %3089, i32 283, i32 285
  store i32 %cond5795, i32* %retval
  br label %return

sw.bb.5796:                                       ; preds = %reserved_word
  %3090 = load i8*, i8** %s, align 8
  %call5797 = call i8* @S_force_word(i8* %3090, i32 257, i32 1, i32 0, i32 0)
  store i8* %call5797, i8** %s, align 8
  store i32 188, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %3091 = load i8*, i8** %s, align 8
  store i8* %3091, i8** @PL_bufptr, align 8
  store i32 280, i32* %retval
  br label %return

sw.bb.5798:                                       ; preds = %reserved_word
  store i32 4, i32* @PL_expect, align 4
  %3092 = load i8*, i8** %s, align 8
  store i8* %3092, i8** @PL_bufptr, align 8
  store i32 276, i32* %retval
  br label %return

sw.bb.5799:                                       ; preds = %reserved_word
  %3093 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line5800 = getelementptr inbounds %struct.cop, %struct.cop* %3093, i32 0, i32 13
  %3094 = load i32, i32* %cop_line5800, align 4
  store i32 %3094, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %3095 = load i8*, i8** %s, align 8
  store i8* %3095, i8** @PL_bufptr, align 8
  store i32 277, i32* %retval
  br label %return

sw.bb.5801:                                       ; preds = %reserved_word
  store i32 88, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %3096 = load i8*, i8** %s, align 8
  store i8* %3096, i8** @PL_bufptr, align 8
  store i32 288, i32* %retval
  br label %return

sw.bb.5802:                                       ; preds = %reserved_word
  store i32 133, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %3097 = load i8*, i8** %s, align 8
  store i8* %3097, i8** @PL_bufptr, align 8
  %3098 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %3098, i8** @PL_last_uni, align 8
  store i16 133, i16* @PL_last_lop_op, align 2
  %3099 = load i8*, i8** %s, align 8
  %3100 = load i8, i8* %3099, align 1
  %conv5803 = sext i8 %3100 to i32
  %cmp5804 = icmp eq i32 %conv5803, 40
  br i1 %cmp5804, label %lor.end.5811, label %lor.rhs.5806

lor.rhs.5806:                                     ; preds = %sw.bb.5802
  %3101 = load i8*, i8** %s, align 8
  %call5807 = call i8* @S_skipspace(i8* %3101)
  store i8* %call5807, i8** %s, align 8
  %3102 = load i8*, i8** %s, align 8
  %3103 = load i8, i8* %3102, align 1
  %conv5808 = sext i8 %3103 to i32
  %cmp5809 = icmp eq i32 %conv5808, 40
  br label %lor.end.5811

lor.end.5811:                                     ; preds = %lor.rhs.5806, %sw.bb.5802
  %3104 = phi i1 [ true, %sw.bb.5802 ], [ %cmp5809, %lor.rhs.5806 ]
  %cond5813 = select i1 %3104, i32 283, i32 285
  store i32 %cond5813, i32* %retval
  br label %return

sw.bb.5814:                                       ; preds = %reserved_word
  store i32 190, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %3105 = load i8*, i8** %s, align 8
  store i8* %3105, i8** @PL_bufptr, align 8
  %3106 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %3106, i8** @PL_last_uni, align 8
  store i16 190, i16* @PL_last_lop_op, align 2
  %3107 = load i8*, i8** %s, align 8
  %3108 = load i8, i8* %3107, align 1
  %conv5815 = sext i8 %3108 to i32
  %cmp5816 = icmp eq i32 %conv5815, 40
  br i1 %cmp5816, label %lor.end.5823, label %lor.rhs.5818

lor.rhs.5818:                                     ; preds = %sw.bb.5814
  %3109 = load i8*, i8** %s, align 8
  %call5819 = call i8* @S_skipspace(i8* %3109)
  store i8* %call5819, i8** %s, align 8
  %3110 = load i8*, i8** %s, align 8
  %3111 = load i8, i8* %3110, align 1
  %conv5820 = sext i8 %3111 to i32
  %cmp5821 = icmp eq i32 %conv5820, 40
  br label %lor.end.5823

lor.end.5823:                                     ; preds = %lor.rhs.5818, %sw.bb.5814
  %3112 = phi i1 [ true, %sw.bb.5814 ], [ %cmp5821, %lor.rhs.5818 ]
  %cond5825 = select i1 %3112, i32 283, i32 285
  store i32 %cond5825, i32* %retval
  br label %return

sw.bb.5826:                                       ; preds = %reserved_word
  %3113 = load i8*, i8** %s, align 8
  %call5827 = call i8* @S_skipspace(i8* %3113)
  store i8* %call5827, i8** %s, align 8
  %3114 = load i8*, i8** %s, align 8
  %3115 = load i8, i8* %3114, align 1
  %conv5828 = sext i8 %3115 to i32
  %cmp5829 = icmp eq i32 %conv5828, 123
  %cond5831 = select i1 %cmp5829, i32 7, i32 1
  store i32 %cond5831, i32* @PL_expect, align 4
  store i32 311, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  %3116 = load i8*, i8** %s, align 8
  store i8* %3116, i8** @PL_bufptr, align 8
  %3117 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %3117, i8** @PL_last_uni, align 8
  %3118 = load i8*, i8** %s, align 8
  %3119 = load i8, i8* %3118, align 1
  %conv5832 = sext i8 %3119 to i32
  %cmp5833 = icmp eq i32 %conv5832, 40
  br i1 %cmp5833, label %lor.end.5840, label %lor.rhs.5835

lor.rhs.5835:                                     ; preds = %sw.bb.5826
  %3120 = load i8*, i8** %s, align 8
  %call5836 = call i8* @S_skipspace(i8* %3120)
  store i8* %call5836, i8** %s, align 8
  %3121 = load i8*, i8** %s, align 8
  %3122 = load i8, i8* %3121, align 1
  %conv5837 = sext i8 %3122 to i32
  %cmp5838 = icmp eq i32 %conv5837, 40
  br label %lor.end.5840

lor.end.5840:                                     ; preds = %lor.rhs.5835, %sw.bb.5826
  %3123 = phi i1 [ true, %sw.bb.5826 ], [ %cmp5838, %lor.rhs.5835 ]
  %cond5842 = select i1 %3123, i32 283, i32 285
  store i32 %cond5842, i32* %retval
  br label %return

sw.bb.5843:                                       ; preds = %reserved_word
  store i32 216, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %3124 = load i8*, i8** %s, align 8
  store i8* %3124, i8** @PL_bufptr, align 8
  %3125 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %3125, i8** @PL_last_uni, align 8
  store i16 216, i16* @PL_last_lop_op, align 2
  %3126 = load i8*, i8** %s, align 8
  %3127 = load i8, i8* %3126, align 1
  %conv5844 = sext i8 %3127 to i32
  %cmp5845 = icmp eq i32 %conv5844, 40
  br i1 %cmp5845, label %lor.end.5852, label %lor.rhs.5847

lor.rhs.5847:                                     ; preds = %sw.bb.5843
  %3128 = load i8*, i8** %s, align 8
  %call5848 = call i8* @S_skipspace(i8* %3128)
  store i8* %call5848, i8** %s, align 8
  %3129 = load i8*, i8** %s, align 8
  %3130 = load i8, i8* %3129, align 1
  %conv5849 = sext i8 %3130 to i32
  %cmp5850 = icmp eq i32 %conv5849, 40
  br label %lor.end.5852

lor.end.5852:                                     ; preds = %lor.rhs.5847, %sw.bb.5843
  %3131 = phi i1 [ true, %sw.bb.5843 ], [ %cmp5850, %lor.rhs.5847 ]
  %cond5854 = select i1 %3131, i32 283, i32 285
  store i32 %cond5854, i32* %retval
  br label %return

sw.bb.5855:                                       ; preds = %reserved_word
  store i32 103, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %3132 = load i8*, i8** %s, align 8
  store i8* %3132, i8** @PL_bufptr, align 8
  %3133 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %3133, i8** @PL_last_uni, align 8
  store i16 103, i16* @PL_last_lop_op, align 2
  %3134 = load i8*, i8** %s, align 8
  %3135 = load i8, i8* %3134, align 1
  %conv5856 = sext i8 %3135 to i32
  %cmp5857 = icmp eq i32 %conv5856, 40
  br i1 %cmp5857, label %lor.end.5864, label %lor.rhs.5859

lor.rhs.5859:                                     ; preds = %sw.bb.5855
  %3136 = load i8*, i8** %s, align 8
  %call5860 = call i8* @S_skipspace(i8* %3136)
  store i8* %call5860, i8** %s, align 8
  %3137 = load i8*, i8** %s, align 8
  %3138 = load i8, i8* %3137, align 1
  %conv5861 = sext i8 %3138 to i32
  %cmp5862 = icmp eq i32 %conv5861, 40
  br label %lor.end.5864

lor.end.5864:                                     ; preds = %lor.rhs.5859, %sw.bb.5855
  %3139 = phi i1 [ true, %sw.bb.5855 ], [ %cmp5862, %lor.rhs.5859 ]
  %cond5866 = select i1 %3139, i32 283, i32 285
  store i32 %cond5866, i32* %retval
  br label %return

sw.bb.5867:                                       ; preds = %reserved_word
  store i32 129, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %3140 = load i8*, i8** %s, align 8
  store i8* %3140, i8** @PL_bufptr, align 8
  %3141 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %3141, i8** @PL_last_uni, align 8
  store i16 129, i16* @PL_last_lop_op, align 2
  %3142 = load i8*, i8** %s, align 8
  %3143 = load i8, i8* %3142, align 1
  %conv5868 = sext i8 %3143 to i32
  %cmp5869 = icmp eq i32 %conv5868, 40
  br i1 %cmp5869, label %lor.end.5876, label %lor.rhs.5871

lor.rhs.5871:                                     ; preds = %sw.bb.5867
  %3144 = load i8*, i8** %s, align 8
  %call5872 = call i8* @S_skipspace(i8* %3144)
  store i8* %call5872, i8** %s, align 8
  %3145 = load i8*, i8** %s, align 8
  %3146 = load i8, i8* %3145, align 1
  %conv5873 = sext i8 %3146 to i32
  %cmp5874 = icmp eq i32 %conv5873, 40
  br label %lor.end.5876

lor.end.5876:                                     ; preds = %lor.rhs.5871, %sw.bb.5867
  %3147 = phi i1 [ true, %sw.bb.5867 ], [ %cmp5874, %lor.rhs.5871 ]
  %cond5878 = select i1 %3147, i32 283, i32 285
  store i32 %cond5878, i32* %retval
  br label %return

sw.bb.5879:                                       ; preds = %reserved_word
  call void @S_set_csh()
  %3148 = load i8*, i8** %s, align 8
  %call5880 = call i32 @S_lop(i32 285, i32 2, i8* %3148)
  store i32 %call5880, i32* %retval
  br label %return

sw.bb.5881:                                       ; preds = %reserved_word
  store i32 331, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 0, i32* @PL_expect, align 4
  %3149 = load i8*, i8** %s, align 8
  store i8* %3149, i8** @PL_bufptr, align 8
  store i32 282, i32* %retval
  br label %return

sw.bb.5882:                                       ; preds = %reserved_word
  store i32 332, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 0, i32* @PL_expect, align 4
  %3150 = load i8*, i8** %s, align 8
  store i8* %3150, i8** @PL_bufptr, align 8
  store i32 282, i32* %retval
  br label %return

sw.bb.5883:                                       ; preds = %reserved_word
  store i32 334, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 0, i32* @PL_expect, align 4
  %3151 = load i8*, i8** %s, align 8
  store i8* %3151, i8** @PL_bufptr, align 8
  store i32 282, i32* %retval
  br label %return

sw.bb.5884:                                       ; preds = %reserved_word
  store i32 333, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 0, i32* @PL_expect, align 4
  %3152 = load i8*, i8** %s, align 8
  store i8* %3152, i8** @PL_bufptr, align 8
  store i32 282, i32* %retval
  br label %return

sw.bb.5885:                                       ; preds = %reserved_word
  store i32 339, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 0, i32* @PL_expect, align 4
  %3153 = load i8*, i8** %s, align 8
  store i8* %3153, i8** @PL_bufptr, align 8
  store i32 282, i32* %retval
  br label %return

sw.bb.5886:                                       ; preds = %reserved_word
  store i32 344, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 0, i32* @PL_expect, align 4
  %3154 = load i8*, i8** %s, align 8
  store i8* %3154, i8** @PL_bufptr, align 8
  store i32 282, i32* %retval
  br label %return

sw.bb.5887:                                       ; preds = %reserved_word, %reserved_word
  %3155 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line5888 = getelementptr inbounds %struct.cop, %struct.cop* %3155, i32 0, i32 13
  %3156 = load i32, i32* %cop_line5888, align 4
  store i32 %3156, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  %3157 = load i8*, i8** %s, align 8
  %call5889 = call i8* @S_skipspace(i8* %3157)
  store i8* %call5889, i8** %s, align 8
  %3158 = load i32, i32* @PL_expect, align 4
  %cmp5890 = icmp eq i32 %3158, 3
  br i1 %cmp5890, label %land.lhs.true.5892, label %if.end.6076

land.lhs.true.5892:                               ; preds = %sw.bb.5887
  %3159 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private5893 = getelementptr inbounds %struct.cop, %struct.cop* %3159, i32 0, i32 7
  %3160 = load i8, i8* %op_private5893, align 1
  %conv5894 = zext i8 %3160 to i32
  %and5895 = and i32 %conv5894, 8
  %tobool5896 = icmp ne i32 %and5895, 0
  br i1 %tobool5896, label %cond.true.5915, label %lor.lhs.false.5897

lor.lhs.false.5897:                               ; preds = %land.lhs.true.5892
  %3161 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %tobool5898 = icmp ne %struct.sv* %3161, null
  br i1 %tobool5898, label %land.lhs.true.5899, label %lor.lhs.false.5908

land.lhs.true.5899:                               ; preds = %lor.lhs.false.5897
  %3162 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_flags5900 = getelementptr inbounds %struct.sv, %struct.sv* %3162, i32 0, i32 2
  %3163 = load i32, i32* %sv_flags5900, align 4
  %and5901 = and i32 %3163, 536870912
  %tobool5902 = icmp ne i32 %and5901, 0
  br i1 %tobool5902, label %land.lhs.true.5903, label %lor.lhs.false.5908

land.lhs.true.5903:                               ; preds = %land.lhs.true.5899
  %3164 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private5904 = getelementptr inbounds %struct.cop, %struct.cop* %3164, i32 0, i32 7
  %3165 = load i8, i8* %op_private5904, align 1
  %conv5905 = zext i8 %3165 to i32
  %and5906 = and i32 %conv5905, 8
  %tobool5907 = icmp ne i32 %and5906, 0
  br i1 %tobool5907, label %lor.lhs.false.5908, label %lor.lhs.false.5911

lor.lhs.false.5908:                               ; preds = %land.lhs.true.5903, %land.lhs.true.5899, %lor.lhs.false.5897
  %3166 = load i32, i32* @PL_hints, align 4
  %and5909 = and i32 %3166, 8388608
  %tobool5910 = icmp ne i32 %and5909, 0
  br i1 %tobool5910, label %lor.lhs.false.5911, label %cond.true.5915

lor.lhs.false.5911:                               ; preds = %lor.lhs.false.5908, %land.lhs.true.5903
  %3167 = load i8*, i8** %s, align 8
  %3168 = load i8, i8* %3167, align 1
  %conv5912 = zext i8 %3168 to i32
  %cmp5913 = icmp slt i32 %conv5912, 192
  br i1 %cmp5913, label %cond.true.5915, label %cond.false.5935

cond.true.5915:                                   ; preds = %lor.lhs.false.5911, %lor.lhs.false.5908, %land.lhs.true.5892
  %3169 = load i8*, i8** %s, align 8
  %3170 = load i8, i8* %3169, align 1
  %conv5916 = sext i8 %3170 to i32
  %cmp5917 = icmp sge i32 %conv5916, 65
  br i1 %cmp5917, label %land.lhs.true.5919, label %lor.lhs.false.5923

land.lhs.true.5919:                               ; preds = %cond.true.5915
  %3171 = load i8*, i8** %s, align 8
  %3172 = load i8, i8* %3171, align 1
  %conv5920 = sext i8 %3172 to i32
  %cmp5921 = icmp sle i32 %conv5920, 90
  br i1 %cmp5921, label %if.then.5942, label %lor.lhs.false.5923

lor.lhs.false.5923:                               ; preds = %land.lhs.true.5919, %cond.true.5915
  %3173 = load i8*, i8** %s, align 8
  %3174 = load i8, i8* %3173, align 1
  %conv5924 = sext i8 %3174 to i32
  %cmp5925 = icmp sge i32 %conv5924, 97
  br i1 %cmp5925, label %land.lhs.true.5927, label %lor.lhs.false.5931

land.lhs.true.5927:                               ; preds = %lor.lhs.false.5923
  %3175 = load i8*, i8** %s, align 8
  %3176 = load i8, i8* %3175, align 1
  %conv5928 = sext i8 %3176 to i32
  %cmp5929 = icmp sle i32 %conv5928, 122
  br i1 %cmp5929, label %if.then.5942, label %lor.lhs.false.5931

lor.lhs.false.5931:                               ; preds = %land.lhs.true.5927, %lor.lhs.false.5923
  %3177 = load i8*, i8** %s, align 8
  %3178 = load i8, i8* %3177, align 1
  %conv5932 = sext i8 %3178 to i32
  %cmp5933 = icmp eq i32 %conv5932, 95
  br i1 %cmp5933, label %if.then.5942, label %if.end.6076

cond.false.5935:                                  ; preds = %lor.lhs.false.5911
  %3179 = load i8*, i8** %s, align 8
  %call5936 = call signext i8 @Perl_is_utf8_idcont(i8* %3179)
  %conv5937 = sext i8 %call5936 to i32
  %tobool5938 = icmp ne i32 %conv5937, 0
  br i1 %tobool5938, label %land.lhs.true.5939, label %if.end.6076

land.lhs.true.5939:                               ; preds = %cond.false.5935
  %3180 = load i8*, i8** %s, align 8
  %call5940 = call signext i8 @Perl_is_utf8_digit(i8* %3180)
  %tobool5941 = icmp ne i8 %call5940, 0
  br i1 %tobool5941, label %if.end.6076, label %if.then.5942

if.then.5942:                                     ; preds = %land.lhs.true.5939, %lor.lhs.false.5931, %land.lhs.true.5927, %land.lhs.true.5919
  %3181 = load i8*, i8** %s, align 8
  store i8* %3181, i8** %p, align 8
  %3182 = load i8*, i8** @PL_bufend, align 8
  %3183 = load i8*, i8** %p, align 8
  %sub.ptr.lhs.cast5944 = ptrtoint i8* %3182 to i64
  %sub.ptr.rhs.cast5945 = ptrtoint i8* %3183 to i64
  %sub.ptr.sub5946 = sub i64 %sub.ptr.lhs.cast5944, %sub.ptr.rhs.cast5945
  %cmp5947 = icmp sge i64 %sub.ptr.sub5946, 3
  br i1 %cmp5947, label %land.lhs.true.5949, label %if.else.5979

land.lhs.true.5949:                               ; preds = %if.then.5942
  %3184 = load i8*, i8** %p, align 8
  %call5950 = call i32 @strncmp(i8* %3184, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i32 0, i32 0), i64 2)
  %tobool5951 = icmp ne i32 %call5950, 0
  br i1 %tobool5951, label %if.else.5979, label %land.lhs.true.5952

land.lhs.true.5952:                               ; preds = %land.lhs.true.5949
  %3185 = load i8*, i8** %p, align 8
  %add.ptr5953 = getelementptr inbounds i8, i8* %3185, i64 2
  %3186 = load i8, i8* %add.ptr5953, align 1
  %conv5954 = sext i8 %3186 to i32
  %cmp5955 = icmp eq i32 %conv5954, 32
  br i1 %cmp5955, label %if.then.5977, label %lor.lhs.false.5957

lor.lhs.false.5957:                               ; preds = %land.lhs.true.5952
  %3187 = load i8*, i8** %p, align 8
  %add.ptr5958 = getelementptr inbounds i8, i8* %3187, i64 2
  %3188 = load i8, i8* %add.ptr5958, align 1
  %conv5959 = sext i8 %3188 to i32
  %cmp5960 = icmp eq i32 %conv5959, 9
  br i1 %cmp5960, label %if.then.5977, label %lor.lhs.false.5962

lor.lhs.false.5962:                               ; preds = %lor.lhs.false.5957
  %3189 = load i8*, i8** %p, align 8
  %add.ptr5963 = getelementptr inbounds i8, i8* %3189, i64 2
  %3190 = load i8, i8* %add.ptr5963, align 1
  %conv5964 = sext i8 %3190 to i32
  %cmp5965 = icmp eq i32 %conv5964, 10
  br i1 %cmp5965, label %if.then.5977, label %lor.lhs.false.5967

lor.lhs.false.5967:                               ; preds = %lor.lhs.false.5962
  %3191 = load i8*, i8** %p, align 8
  %add.ptr5968 = getelementptr inbounds i8, i8* %3191, i64 2
  %3192 = load i8, i8* %add.ptr5968, align 1
  %conv5969 = sext i8 %3192 to i32
  %cmp5970 = icmp eq i32 %conv5969, 13
  br i1 %cmp5970, label %if.then.5977, label %lor.lhs.false.5972

lor.lhs.false.5972:                               ; preds = %lor.lhs.false.5967
  %3193 = load i8*, i8** %p, align 8
  %add.ptr5973 = getelementptr inbounds i8, i8* %3193, i64 2
  %3194 = load i8, i8* %add.ptr5973, align 1
  %conv5974 = sext i8 %3194 to i32
  %cmp5975 = icmp eq i32 %conv5974, 12
  br i1 %cmp5975, label %if.then.5977, label %if.else.5979

if.then.5977:                                     ; preds = %lor.lhs.false.5972, %lor.lhs.false.5967, %lor.lhs.false.5962, %lor.lhs.false.5957, %land.lhs.true.5952
  %3195 = load i8*, i8** %p, align 8
  %add.ptr5978 = getelementptr inbounds i8, i8* %3195, i64 2
  store i8* %add.ptr5978, i8** %p, align 8
  br label %if.end.6016

if.else.5979:                                     ; preds = %lor.lhs.false.5972, %land.lhs.true.5949, %if.then.5942
  %3196 = load i8*, i8** @PL_bufend, align 8
  %3197 = load i8*, i8** %p, align 8
  %sub.ptr.lhs.cast5980 = ptrtoint i8* %3196 to i64
  %sub.ptr.rhs.cast5981 = ptrtoint i8* %3197 to i64
  %sub.ptr.sub5982 = sub i64 %sub.ptr.lhs.cast5980, %sub.ptr.rhs.cast5981
  %cmp5983 = icmp sge i64 %sub.ptr.sub5982, 4
  br i1 %cmp5983, label %land.lhs.true.5985, label %if.end.6015

land.lhs.true.5985:                               ; preds = %if.else.5979
  %3198 = load i8*, i8** %p, align 8
  %call5986 = call i32 @strncmp(i8* %3198, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.94, i32 0, i32 0), i64 3)
  %tobool5987 = icmp ne i32 %call5986, 0
  br i1 %tobool5987, label %if.end.6015, label %land.lhs.true.5988

land.lhs.true.5988:                               ; preds = %land.lhs.true.5985
  %3199 = load i8*, i8** %p, align 8
  %add.ptr5989 = getelementptr inbounds i8, i8* %3199, i64 3
  %3200 = load i8, i8* %add.ptr5989, align 1
  %conv5990 = sext i8 %3200 to i32
  %cmp5991 = icmp eq i32 %conv5990, 32
  br i1 %cmp5991, label %if.then.6013, label %lor.lhs.false.5993

lor.lhs.false.5993:                               ; preds = %land.lhs.true.5988
  %3201 = load i8*, i8** %p, align 8
  %add.ptr5994 = getelementptr inbounds i8, i8* %3201, i64 3
  %3202 = load i8, i8* %add.ptr5994, align 1
  %conv5995 = sext i8 %3202 to i32
  %cmp5996 = icmp eq i32 %conv5995, 9
  br i1 %cmp5996, label %if.then.6013, label %lor.lhs.false.5998

lor.lhs.false.5998:                               ; preds = %lor.lhs.false.5993
  %3203 = load i8*, i8** %p, align 8
  %add.ptr5999 = getelementptr inbounds i8, i8* %3203, i64 3
  %3204 = load i8, i8* %add.ptr5999, align 1
  %conv6000 = sext i8 %3204 to i32
  %cmp6001 = icmp eq i32 %conv6000, 10
  br i1 %cmp6001, label %if.then.6013, label %lor.lhs.false.6003

lor.lhs.false.6003:                               ; preds = %lor.lhs.false.5998
  %3205 = load i8*, i8** %p, align 8
  %add.ptr6004 = getelementptr inbounds i8, i8* %3205, i64 3
  %3206 = load i8, i8* %add.ptr6004, align 1
  %conv6005 = sext i8 %3206 to i32
  %cmp6006 = icmp eq i32 %conv6005, 13
  br i1 %cmp6006, label %if.then.6013, label %lor.lhs.false.6008

lor.lhs.false.6008:                               ; preds = %lor.lhs.false.6003
  %3207 = load i8*, i8** %p, align 8
  %add.ptr6009 = getelementptr inbounds i8, i8* %3207, i64 3
  %3208 = load i8, i8* %add.ptr6009, align 1
  %conv6010 = sext i8 %3208 to i32
  %cmp6011 = icmp eq i32 %conv6010, 12
  br i1 %cmp6011, label %if.then.6013, label %if.end.6015

if.then.6013:                                     ; preds = %lor.lhs.false.6008, %lor.lhs.false.6003, %lor.lhs.false.5998, %lor.lhs.false.5993, %land.lhs.true.5988
  %3209 = load i8*, i8** %p, align 8
  %add.ptr6014 = getelementptr inbounds i8, i8* %3209, i64 3
  store i8* %add.ptr6014, i8** %p, align 8
  br label %if.end.6015

if.end.6015:                                      ; preds = %if.then.6013, %lor.lhs.false.6008, %land.lhs.true.5985, %if.else.5979
  br label %if.end.6016

if.end.6016:                                      ; preds = %if.end.6015, %if.then.5977
  %3210 = load i8*, i8** %p, align 8
  %call6017 = call i8* @S_skipspace(i8* %3210)
  store i8* %call6017, i8** %p, align 8
  %3211 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private6018 = getelementptr inbounds %struct.cop, %struct.cop* %3211, i32 0, i32 7
  %3212 = load i8, i8* %op_private6018, align 1
  %conv6019 = zext i8 %3212 to i32
  %and6020 = and i32 %conv6019, 8
  %tobool6021 = icmp ne i32 %and6020, 0
  br i1 %tobool6021, label %cond.true.6040, label %lor.lhs.false.6022

lor.lhs.false.6022:                               ; preds = %if.end.6016
  %3213 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %tobool6023 = icmp ne %struct.sv* %3213, null
  br i1 %tobool6023, label %land.lhs.true.6024, label %lor.lhs.false.6033

land.lhs.true.6024:                               ; preds = %lor.lhs.false.6022
  %3214 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_flags6025 = getelementptr inbounds %struct.sv, %struct.sv* %3214, i32 0, i32 2
  %3215 = load i32, i32* %sv_flags6025, align 4
  %and6026 = and i32 %3215, 536870912
  %tobool6027 = icmp ne i32 %and6026, 0
  br i1 %tobool6027, label %land.lhs.true.6028, label %lor.lhs.false.6033

land.lhs.true.6028:                               ; preds = %land.lhs.true.6024
  %3216 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private6029 = getelementptr inbounds %struct.cop, %struct.cop* %3216, i32 0, i32 7
  %3217 = load i8, i8* %op_private6029, align 1
  %conv6030 = zext i8 %3217 to i32
  %and6031 = and i32 %conv6030, 8
  %tobool6032 = icmp ne i32 %and6031, 0
  br i1 %tobool6032, label %lor.lhs.false.6033, label %lor.lhs.false.6036

lor.lhs.false.6033:                               ; preds = %land.lhs.true.6028, %land.lhs.true.6024, %lor.lhs.false.6022
  %3218 = load i32, i32* @PL_hints, align 4
  %and6034 = and i32 %3218, 8388608
  %tobool6035 = icmp ne i32 %and6034, 0
  br i1 %tobool6035, label %lor.lhs.false.6036, label %cond.true.6040

lor.lhs.false.6036:                               ; preds = %lor.lhs.false.6033, %land.lhs.true.6028
  %3219 = load i8*, i8** %p, align 8
  %3220 = load i8, i8* %3219, align 1
  %conv6037 = zext i8 %3220 to i32
  %cmp6038 = icmp slt i32 %conv6037, 192
  br i1 %cmp6038, label %cond.true.6040, label %cond.false.6060

cond.true.6040:                                   ; preds = %lor.lhs.false.6036, %lor.lhs.false.6033, %if.end.6016
  %3221 = load i8*, i8** %p, align 8
  %3222 = load i8, i8* %3221, align 1
  %conv6041 = sext i8 %3222 to i32
  %cmp6042 = icmp sge i32 %conv6041, 65
  br i1 %cmp6042, label %land.lhs.true.6044, label %lor.lhs.false.6048

land.lhs.true.6044:                               ; preds = %cond.true.6040
  %3223 = load i8*, i8** %p, align 8
  %3224 = load i8, i8* %3223, align 1
  %conv6045 = sext i8 %3224 to i32
  %cmp6046 = icmp sle i32 %conv6045, 90
  br i1 %cmp6046, label %if.then.6067, label %lor.lhs.false.6048

lor.lhs.false.6048:                               ; preds = %land.lhs.true.6044, %cond.true.6040
  %3225 = load i8*, i8** %p, align 8
  %3226 = load i8, i8* %3225, align 1
  %conv6049 = sext i8 %3226 to i32
  %cmp6050 = icmp sge i32 %conv6049, 97
  br i1 %cmp6050, label %land.lhs.true.6052, label %lor.lhs.false.6056

land.lhs.true.6052:                               ; preds = %lor.lhs.false.6048
  %3227 = load i8*, i8** %p, align 8
  %3228 = load i8, i8* %3227, align 1
  %conv6053 = sext i8 %3228 to i32
  %cmp6054 = icmp sle i32 %conv6053, 122
  br i1 %cmp6054, label %if.then.6067, label %lor.lhs.false.6056

lor.lhs.false.6056:                               ; preds = %land.lhs.true.6052, %lor.lhs.false.6048
  %3229 = load i8*, i8** %p, align 8
  %3230 = load i8, i8* %3229, align 1
  %conv6057 = sext i8 %3230 to i32
  %cmp6058 = icmp eq i32 %conv6057, 95
  br i1 %cmp6058, label %if.then.6067, label %if.end.6070

cond.false.6060:                                  ; preds = %lor.lhs.false.6036
  %3231 = load i8*, i8** %p, align 8
  %call6061 = call signext i8 @Perl_is_utf8_idcont(i8* %3231)
  %conv6062 = sext i8 %call6061 to i32
  %tobool6063 = icmp ne i32 %conv6062, 0
  br i1 %tobool6063, label %land.lhs.true.6064, label %if.end.6070

land.lhs.true.6064:                               ; preds = %cond.false.6060
  %3232 = load i8*, i8** %p, align 8
  %call6065 = call signext i8 @Perl_is_utf8_digit(i8* %3232)
  %tobool6066 = icmp ne i8 %call6065, 0
  br i1 %tobool6066, label %if.end.6070, label %if.then.6067

if.then.6067:                                     ; preds = %land.lhs.true.6064, %lor.lhs.false.6056, %land.lhs.true.6052, %land.lhs.true.6044
  %3233 = load i8*, i8** %p, align 8
  %3234 = load i8*, i8** @PL_bufend, align 8
  %call6068 = call i8* @S_scan_ident(i8* %3233, i8* %3234, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i32 0), i64 256, i32 1)
  store i8* %call6068, i8** %p, align 8
  %3235 = load i8*, i8** %p, align 8
  %call6069 = call i8* @S_skipspace(i8* %3235)
  store i8* %call6069, i8** %p, align 8
  br label %if.end.6070

if.end.6070:                                      ; preds = %if.then.6067, %land.lhs.true.6064, %cond.false.6060, %lor.lhs.false.6056
  %3236 = load i8*, i8** %p, align 8
  %3237 = load i8, i8* %3236, align 1
  %conv6071 = sext i8 %3237 to i32
  %cmp6072 = icmp ne i32 %conv6071, 36
  br i1 %cmp6072, label %if.then.6074, label %if.end.6075

if.then.6074:                                     ; preds = %if.end.6070
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.95, i32 0, i32 0))
  br label %if.end.6075

if.end.6075:                                      ; preds = %if.then.6074, %if.end.6070
  br label %if.end.6076

if.end.6076:                                      ; preds = %if.end.6075, %land.lhs.true.5939, %cond.false.5935, %lor.lhs.false.5931, %sw.bb.5887
  store i32 1, i32* @PL_expect, align 4
  %3238 = load i8*, i8** %s, align 8
  store i8* %3238, i8** @PL_bufptr, align 8
  store i32 279, i32* %retval
  br label %return

sw.bb.6077:                                       ; preds = %reserved_word
  %3239 = load i8*, i8** %s, align 8
  %call6078 = call i32 @S_lop(i32 116, i32 1, i8* %3239)
  store i32 %call6078, i32* %retval
  br label %return

sw.bb.6079:                                       ; preds = %reserved_word
  store i32 281, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 0, i32* @PL_expect, align 4
  %3240 = load i8*, i8** %s, align 8
  store i8* %3240, i8** @PL_bufptr, align 8
  store i32 282, i32* %retval
  br label %return

sw.bb.6080:                                       ; preds = %reserved_word
  %3241 = load i8*, i8** %s, align 8
  %call6081 = call i32 @S_lop(i32 220, i32 1, i8* %3241)
  store i32 %call6081, i32* %retval
  br label %return

sw.bb.6082:                                       ; preds = %reserved_word
  store i32 194, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %3242 = load i8*, i8** %s, align 8
  store i8* %3242, i8** @PL_bufptr, align 8
  %3243 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %3243, i8** @PL_last_uni, align 8
  store i16 194, i16* @PL_last_lop_op, align 2
  %3244 = load i8*, i8** %s, align 8
  %3245 = load i8, i8* %3244, align 1
  %conv6083 = sext i8 %3245 to i32
  %cmp6084 = icmp eq i32 %conv6083, 40
  br i1 %cmp6084, label %lor.end.6091, label %lor.rhs.6086

lor.rhs.6086:                                     ; preds = %sw.bb.6082
  %3246 = load i8*, i8** %s, align 8
  %call6087 = call i8* @S_skipspace(i8* %3246)
  store i8* %call6087, i8** %s, align 8
  %3247 = load i8*, i8** %s, align 8
  %3248 = load i8, i8* %3247, align 1
  %conv6088 = sext i8 %3248 to i32
  %cmp6089 = icmp eq i32 %conv6088, 40
  br label %lor.end.6091

lor.end.6091:                                     ; preds = %lor.rhs.6086, %sw.bb.6082
  %3249 = phi i1 [ true, %sw.bb.6082 ], [ %cmp6089, %lor.rhs.6086 ]
  %cond6093 = select i1 %3249, i32 283, i32 285
  store i32 %cond6093, i32* %retval
  br label %return

sw.bb.6094:                                       ; preds = %reserved_word
  %3250 = load i8*, i8** %s, align 8
  %call6095 = call i32 @S_lop(i32 222, i32 1, i8* %3250)
  store i32 %call6095, i32* %retval
  br label %return

sw.bb.6096:                                       ; preds = %reserved_word
  store i32 85, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %3251 = load i8*, i8** %s, align 8
  store i8* %3251, i8** @PL_bufptr, align 8
  store i32 287, i32* %retval
  br label %return

sw.bb.6097:                                       ; preds = %reserved_word
  store i32 87, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %3252 = load i8*, i8** %s, align 8
  store i8* %3252, i8** @PL_bufptr, align 8
  store i32 287, i32* %retval
  br label %return

sw.bb.6098:                                       ; preds = %reserved_word
  %3253 = load i8*, i8** %s, align 8
  %call6099 = call i32 @S_lop(i32 152, i32 2, i8* %3253)
  store i32 %call6099, i32* %retval
  br label %return

sw.bb.6100:                                       ; preds = %reserved_word
  %3254 = load i8*, i8** %s, align 8
  %call6101 = call i8* @S_force_word(i8* %3254, i32 257, i32 1, i32 0, i32 0)
  store i8* %call6101, i8** %s, align 8
  store i32 189, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %3255 = load i8*, i8** %s, align 8
  store i8* %3255, i8** @PL_bufptr, align 8
  store i32 280, i32* %retval
  br label %return

sw.bb.6102:                                       ; preds = %reserved_word
  store i32 295, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %3256 = load i8*, i8** %s, align 8
  store i8* %3256, i8** @PL_bufptr, align 8
  %3257 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %3257, i8** @PL_last_uni, align 8
  store i16 295, i16* @PL_last_lop_op, align 2
  %3258 = load i8*, i8** %s, align 8
  %3259 = load i8, i8* %3258, align 1
  %conv6103 = sext i8 %3259 to i32
  %cmp6104 = icmp eq i32 %conv6103, 40
  br i1 %cmp6104, label %lor.end.6111, label %lor.rhs.6106

lor.rhs.6106:                                     ; preds = %sw.bb.6102
  %3260 = load i8*, i8** %s, align 8
  %call6107 = call i8* @S_skipspace(i8* %3260)
  store i8* %call6107, i8** %s, align 8
  %3261 = load i8*, i8** %s, align 8
  %3262 = load i8, i8* %3261, align 1
  %conv6108 = sext i8 %3262 to i32
  %cmp6109 = icmp eq i32 %conv6108, 40
  br label %lor.end.6111

lor.end.6111:                                     ; preds = %lor.rhs.6106, %sw.bb.6102
  %3263 = phi i1 [ true, %sw.bb.6102 ], [ %cmp6109, %lor.rhs.6106 ]
  %cond6113 = select i1 %3263, i32 283, i32 285
  store i32 %cond6113, i32* %retval
  br label %return

sw.bb.6114:                                       ; preds = %reserved_word
  store i32 204, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %3264 = load i8*, i8** %s, align 8
  store i8* %3264, i8** @PL_bufptr, align 8
  %3265 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %3265, i8** @PL_last_uni, align 8
  store i16 204, i16* @PL_last_lop_op, align 2
  %3266 = load i8*, i8** %s, align 8
  %3267 = load i8, i8* %3266, align 1
  %conv6115 = sext i8 %3267 to i32
  %cmp6116 = icmp eq i32 %conv6115, 40
  br i1 %cmp6116, label %lor.end.6123, label %lor.rhs.6118

lor.rhs.6118:                                     ; preds = %sw.bb.6114
  %3268 = load i8*, i8** %s, align 8
  %call6119 = call i8* @S_skipspace(i8* %3268)
  store i8* %call6119, i8** %s, align 8
  %3269 = load i8*, i8** %s, align 8
  %3270 = load i8, i8* %3269, align 1
  %conv6120 = sext i8 %3270 to i32
  %cmp6121 = icmp eq i32 %conv6120, 40
  br label %lor.end.6123

lor.end.6123:                                     ; preds = %lor.rhs.6118, %sw.bb.6114
  %3271 = phi i1 [ true, %sw.bb.6114 ], [ %cmp6121, %lor.rhs.6118 ]
  %cond6125 = select i1 %3271, i32 283, i32 285
  store i32 %cond6125, i32* %retval
  br label %return

sw.bb.6126:                                       ; preds = %reserved_word
  store i32 287, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 0, i32* @PL_expect, align 4
  %3272 = load i8*, i8** %s, align 8
  store i8* %3272, i8** @PL_bufptr, align 8
  store i32 282, i32* %retval
  br label %return

sw.bb.6127:                                       ; preds = %reserved_word
  store i32 288, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %3273 = load i8*, i8** %s, align 8
  store i8* %3273, i8** @PL_bufptr, align 8
  %3274 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %3274, i8** @PL_last_uni, align 8
  store i16 288, i16* @PL_last_lop_op, align 2
  %3275 = load i8*, i8** %s, align 8
  %3276 = load i8, i8* %3275, align 1
  %conv6128 = sext i8 %3276 to i32
  %cmp6129 = icmp eq i32 %conv6128, 40
  br i1 %cmp6129, label %lor.end.6136, label %lor.rhs.6131

lor.rhs.6131:                                     ; preds = %sw.bb.6127
  %3277 = load i8*, i8** %s, align 8
  %call6132 = call i8* @S_skipspace(i8* %3277)
  store i8* %call6132, i8** %s, align 8
  %3278 = load i8*, i8** %s, align 8
  %3279 = load i8, i8* %3278, align 1
  %conv6133 = sext i8 %3279 to i32
  %cmp6134 = icmp eq i32 %conv6133, 40
  br label %lor.end.6136

lor.end.6136:                                     ; preds = %lor.rhs.6131, %sw.bb.6127
  %3280 = phi i1 [ true, %sw.bb.6127 ], [ %cmp6134, %lor.rhs.6131 ]
  %cond6138 = select i1 %3280, i32 283, i32 285
  store i32 %cond6138, i32* %retval
  br label %return

sw.bb.6139:                                       ; preds = %reserved_word
  %3281 = load i8*, i8** %s, align 8
  %call6140 = call i32 @S_lop(i32 290, i32 1, i8* %3281)
  store i32 %call6140, i32* %retval
  br label %return

sw.bb.6141:                                       ; preds = %reserved_word
  store i32 321, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %3282 = load i8*, i8** %s, align 8
  store i8* %3282, i8** @PL_bufptr, align 8
  %3283 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %3283, i8** @PL_last_uni, align 8
  store i16 321, i16* @PL_last_lop_op, align 2
  %3284 = load i8*, i8** %s, align 8
  %3285 = load i8, i8* %3284, align 1
  %conv6142 = sext i8 %3285 to i32
  %cmp6143 = icmp eq i32 %conv6142, 40
  br i1 %cmp6143, label %lor.end.6150, label %lor.rhs.6145

lor.rhs.6145:                                     ; preds = %sw.bb.6141
  %3286 = load i8*, i8** %s, align 8
  %call6146 = call i8* @S_skipspace(i8* %3286)
  store i8* %call6146, i8** %s, align 8
  %3287 = load i8*, i8** %s, align 8
  %3288 = load i8, i8* %3287, align 1
  %conv6147 = sext i8 %3288 to i32
  %cmp6148 = icmp eq i32 %conv6147, 40
  br label %lor.end.6150

lor.end.6150:                                     ; preds = %lor.rhs.6145, %sw.bb.6141
  %3289 = phi i1 [ true, %sw.bb.6141 ], [ %cmp6148, %lor.rhs.6145 ]
  %cond6152 = select i1 %3289, i32 283, i32 285
  store i32 %cond6152, i32* %retval
  br label %return

sw.bb.6153:                                       ; preds = %reserved_word
  %3290 = load i8*, i8** %s, align 8
  %call6154 = call i32 @S_lop(i32 322, i32 1, i8* %3290)
  store i32 %call6154, i32* %retval
  br label %return

sw.bb.6155:                                       ; preds = %reserved_word
  store i32 323, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 0, i32* @PL_expect, align 4
  %3291 = load i8*, i8** %s, align 8
  store i8* %3291, i8** @PL_bufptr, align 8
  store i32 282, i32* %retval
  br label %return

sw.bb.6156:                                       ; preds = %reserved_word
  store i32 337, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 0, i32* @PL_expect, align 4
  %3292 = load i8*, i8** %s, align 8
  store i8* %3292, i8** @PL_bufptr, align 8
  store i32 282, i32* %retval
  br label %return

sw.bb.6157:                                       ; preds = %reserved_word
  store i32 335, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %3293 = load i8*, i8** %s, align 8
  store i8* %3293, i8** @PL_bufptr, align 8
  %3294 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %3294, i8** @PL_last_uni, align 8
  store i16 335, i16* @PL_last_lop_op, align 2
  %3295 = load i8*, i8** %s, align 8
  %3296 = load i8, i8* %3295, align 1
  %conv6158 = sext i8 %3296 to i32
  %cmp6159 = icmp eq i32 %conv6158, 40
  br i1 %cmp6159, label %lor.end.6166, label %lor.rhs.6161

lor.rhs.6161:                                     ; preds = %sw.bb.6157
  %3297 = load i8*, i8** %s, align 8
  %call6162 = call i8* @S_skipspace(i8* %3297)
  store i8* %call6162, i8** %s, align 8
  %3298 = load i8*, i8** %s, align 8
  %3299 = load i8, i8* %3298, align 1
  %conv6163 = sext i8 %3299 to i32
  %cmp6164 = icmp eq i32 %conv6163, 40
  br label %lor.end.6166

lor.end.6166:                                     ; preds = %lor.rhs.6161, %sw.bb.6157
  %3300 = phi i1 [ true, %sw.bb.6157 ], [ %cmp6164, %lor.rhs.6161 ]
  %cond6168 = select i1 %3300, i32 283, i32 285
  store i32 %cond6168, i32* %retval
  br label %return

sw.bb.6169:                                       ; preds = %reserved_word
  store i32 336, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %3301 = load i8*, i8** %s, align 8
  store i8* %3301, i8** @PL_bufptr, align 8
  %3302 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %3302, i8** @PL_last_uni, align 8
  store i16 336, i16* @PL_last_lop_op, align 2
  %3303 = load i8*, i8** %s, align 8
  %3304 = load i8, i8* %3303, align 1
  %conv6170 = sext i8 %3304 to i32
  %cmp6171 = icmp eq i32 %conv6170, 40
  br i1 %cmp6171, label %lor.end.6178, label %lor.rhs.6173

lor.rhs.6173:                                     ; preds = %sw.bb.6169
  %3305 = load i8*, i8** %s, align 8
  %call6174 = call i8* @S_skipspace(i8* %3305)
  store i8* %call6174, i8** %s, align 8
  %3306 = load i8*, i8** %s, align 8
  %3307 = load i8, i8* %3306, align 1
  %conv6175 = sext i8 %3307 to i32
  %cmp6176 = icmp eq i32 %conv6175, 40
  br label %lor.end.6178

lor.end.6178:                                     ; preds = %lor.rhs.6173, %sw.bb.6169
  %3308 = phi i1 [ true, %sw.bb.6169 ], [ %cmp6176, %lor.rhs.6173 ]
  %cond6180 = select i1 %3308, i32 283, i32 285
  store i32 %cond6180, i32* %retval
  br label %return

sw.bb.6181:                                       ; preds = %reserved_word
  store i32 233, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %3309 = load i8*, i8** %s, align 8
  store i8* %3309, i8** @PL_bufptr, align 8
  %3310 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %3310, i8** @PL_last_uni, align 8
  store i16 233, i16* @PL_last_lop_op, align 2
  %3311 = load i8*, i8** %s, align 8
  %3312 = load i8, i8* %3311, align 1
  %conv6182 = sext i8 %3312 to i32
  %cmp6183 = icmp eq i32 %conv6182, 40
  br i1 %cmp6183, label %lor.end.6190, label %lor.rhs.6185

lor.rhs.6185:                                     ; preds = %sw.bb.6181
  %3313 = load i8*, i8** %s, align 8
  %call6186 = call i8* @S_skipspace(i8* %3313)
  store i8* %call6186, i8** %s, align 8
  %3314 = load i8*, i8** %s, align 8
  %3315 = load i8, i8* %3314, align 1
  %conv6187 = sext i8 %3315 to i32
  %cmp6188 = icmp eq i32 %conv6187, 40
  br label %lor.end.6190

lor.end.6190:                                     ; preds = %lor.rhs.6185, %sw.bb.6181
  %3316 = phi i1 [ true, %sw.bb.6181 ], [ %cmp6188, %lor.rhs.6185 ]
  %cond6192 = select i1 %3316, i32 283, i32 285
  store i32 %cond6192, i32* %retval
  br label %return

sw.bb.6193:                                       ; preds = %reserved_word
  store i32 315, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %3317 = load i8*, i8** %s, align 8
  store i8* %3317, i8** @PL_bufptr, align 8
  %3318 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %3318, i8** @PL_last_uni, align 8
  store i16 315, i16* @PL_last_lop_op, align 2
  %3319 = load i8*, i8** %s, align 8
  %3320 = load i8, i8* %3319, align 1
  %conv6194 = sext i8 %3320 to i32
  %cmp6195 = icmp eq i32 %conv6194, 40
  br i1 %cmp6195, label %lor.end.6202, label %lor.rhs.6197

lor.rhs.6197:                                     ; preds = %sw.bb.6193
  %3321 = load i8*, i8** %s, align 8
  %call6198 = call i8* @S_skipspace(i8* %3321)
  store i8* %call6198, i8** %s, align 8
  %3322 = load i8*, i8** %s, align 8
  %3323 = load i8, i8* %3322, align 1
  %conv6199 = sext i8 %3323 to i32
  %cmp6200 = icmp eq i32 %conv6199, 40
  br label %lor.end.6202

lor.end.6202:                                     ; preds = %lor.rhs.6197, %sw.bb.6193
  %3324 = phi i1 [ true, %sw.bb.6193 ], [ %cmp6200, %lor.rhs.6197 ]
  %cond6204 = select i1 %3324, i32 283, i32 285
  store i32 %cond6204, i32* %retval
  br label %return

sw.bb.6205:                                       ; preds = %reserved_word
  %3325 = load i8*, i8** %s, align 8
  %call6206 = call i32 @S_lop(i32 316, i32 1, i8* %3325)
  store i32 %call6206, i32* %retval
  br label %return

sw.bb.6207:                                       ; preds = %reserved_word
  store i32 317, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 0, i32* @PL_expect, align 4
  %3326 = load i8*, i8** %s, align 8
  store i8* %3326, i8** @PL_bufptr, align 8
  store i32 282, i32* %retval
  br label %return

sw.bb.6208:                                       ; preds = %reserved_word
  store i32 318, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %3327 = load i8*, i8** %s, align 8
  store i8* %3327, i8** @PL_bufptr, align 8
  %3328 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %3328, i8** @PL_last_uni, align 8
  store i16 318, i16* @PL_last_lop_op, align 2
  %3329 = load i8*, i8** %s, align 8
  %3330 = load i8, i8* %3329, align 1
  %conv6209 = sext i8 %3330 to i32
  %cmp6210 = icmp eq i32 %conv6209, 40
  br i1 %cmp6210, label %lor.end.6217, label %lor.rhs.6212

lor.rhs.6212:                                     ; preds = %sw.bb.6208
  %3331 = load i8*, i8** %s, align 8
  %call6213 = call i8* @S_skipspace(i8* %3331)
  store i8* %call6213, i8** %s, align 8
  %3332 = load i8*, i8** %s, align 8
  %3333 = load i8, i8* %3332, align 1
  %conv6214 = sext i8 %3333 to i32
  %cmp6215 = icmp eq i32 %conv6214, 40
  br label %lor.end.6217

lor.end.6217:                                     ; preds = %lor.rhs.6212, %sw.bb.6208
  %3334 = phi i1 [ true, %sw.bb.6208 ], [ %cmp6215, %lor.rhs.6212 ]
  %cond6219 = select i1 %3334, i32 283, i32 285
  store i32 %cond6219, i32* %retval
  br label %return

sw.bb.6220:                                       ; preds = %reserved_word
  %3335 = load i8*, i8** %s, align 8
  %call6221 = call i32 @S_lop(i32 319, i32 1, i8* %3335)
  store i32 %call6221, i32* %retval
  br label %return

sw.bb.6222:                                       ; preds = %reserved_word
  store i32 320, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 0, i32* @PL_expect, align 4
  %3336 = load i8*, i8** %s, align 8
  store i8* %3336, i8** @PL_bufptr, align 8
  store i32 282, i32* %retval
  br label %return

sw.bb.6223:                                       ; preds = %reserved_word
  %3337 = load i8*, i8** %s, align 8
  %call6224 = call i32 @S_lop(i32 324, i32 1, i8* %3337)
  store i32 %call6224, i32* %retval
  br label %return

sw.bb.6225:                                       ; preds = %reserved_word
  %3338 = load i8*, i8** %s, align 8
  %call6226 = call i32 @S_lop(i32 325, i32 1, i8* %3338)
  store i32 %call6226, i32* %retval
  br label %return

sw.bb.6227:                                       ; preds = %reserved_word
  store i32 326, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 0, i32* @PL_expect, align 4
  %3339 = load i8*, i8** %s, align 8
  store i8* %3339, i8** @PL_bufptr, align 8
  store i32 282, i32* %retval
  br label %return

sw.bb.6228:                                       ; preds = %reserved_word
  store i32 232, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %3340 = load i8*, i8** %s, align 8
  store i8* %3340, i8** @PL_bufptr, align 8
  %3341 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %3341, i8** @PL_last_uni, align 8
  store i16 232, i16* @PL_last_lop_op, align 2
  %3342 = load i8*, i8** %s, align 8
  %3343 = load i8, i8* %3342, align 1
  %conv6229 = sext i8 %3343 to i32
  %cmp6230 = icmp eq i32 %conv6229, 40
  br i1 %cmp6230, label %lor.end.6237, label %lor.rhs.6232

lor.rhs.6232:                                     ; preds = %sw.bb.6228
  %3344 = load i8*, i8** %s, align 8
  %call6233 = call i8* @S_skipspace(i8* %3344)
  store i8* %call6233, i8** %s, align 8
  %3345 = load i8*, i8** %s, align 8
  %3346 = load i8, i8* %3345, align 1
  %conv6234 = sext i8 %3346 to i32
  %cmp6235 = icmp eq i32 %conv6234, 40
  br label %lor.end.6237

lor.end.6237:                                     ; preds = %lor.rhs.6232, %sw.bb.6228
  %3347 = phi i1 [ true, %sw.bb.6228 ], [ %cmp6235, %lor.rhs.6232 ]
  %cond6239 = select i1 %3347, i32 283, i32 285
  store i32 %cond6239, i32* %retval
  br label %return

sw.bb.6240:                                       ; preds = %reserved_word
  %3348 = load i8*, i8** %s, align 8
  %call6241 = call i32 @S_lop(i32 230, i32 1, i8* %3348)
  store i32 %call6241, i32* %retval
  br label %return

sw.bb.6242:                                       ; preds = %reserved_word
  store i32 342, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 0, i32* @PL_expect, align 4
  %3349 = load i8*, i8** %s, align 8
  store i8* %3349, i8** @PL_bufptr, align 8
  store i32 282, i32* %retval
  br label %return

sw.bb.6243:                                       ; preds = %reserved_word
  store i32 340, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %3350 = load i8*, i8** %s, align 8
  store i8* %3350, i8** @PL_bufptr, align 8
  %3351 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %3351, i8** @PL_last_uni, align 8
  store i16 340, i16* @PL_last_lop_op, align 2
  %3352 = load i8*, i8** %s, align 8
  %3353 = load i8, i8* %3352, align 1
  %conv6244 = sext i8 %3353 to i32
  %cmp6245 = icmp eq i32 %conv6244, 40
  br i1 %cmp6245, label %lor.end.6252, label %lor.rhs.6247

lor.rhs.6247:                                     ; preds = %sw.bb.6243
  %3354 = load i8*, i8** %s, align 8
  %call6248 = call i8* @S_skipspace(i8* %3354)
  store i8* %call6248, i8** %s, align 8
  %3355 = load i8*, i8** %s, align 8
  %3356 = load i8, i8* %3355, align 1
  %conv6249 = sext i8 %3356 to i32
  %cmp6250 = icmp eq i32 %conv6249, 40
  br label %lor.end.6252

lor.end.6252:                                     ; preds = %lor.rhs.6247, %sw.bb.6243
  %3357 = phi i1 [ true, %sw.bb.6243 ], [ %cmp6250, %lor.rhs.6247 ]
  %cond6254 = select i1 %3357, i32 283, i32 285
  store i32 %cond6254, i32* %retval
  br label %return

sw.bb.6255:                                       ; preds = %reserved_word
  store i32 341, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %3358 = load i8*, i8** %s, align 8
  store i8* %3358, i8** @PL_bufptr, align 8
  %3359 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %3359, i8** @PL_last_uni, align 8
  store i16 341, i16* @PL_last_lop_op, align 2
  %3360 = load i8*, i8** %s, align 8
  %3361 = load i8, i8* %3360, align 1
  %conv6256 = sext i8 %3361 to i32
  %cmp6257 = icmp eq i32 %conv6256, 40
  br i1 %cmp6257, label %lor.end.6264, label %lor.rhs.6259

lor.rhs.6259:                                     ; preds = %sw.bb.6255
  %3362 = load i8*, i8** %s, align 8
  %call6260 = call i8* @S_skipspace(i8* %3362)
  store i8* %call6260, i8** %s, align 8
  %3363 = load i8*, i8** %s, align 8
  %3364 = load i8, i8* %3363, align 1
  %conv6261 = sext i8 %3364 to i32
  %cmp6262 = icmp eq i32 %conv6261, 40
  br label %lor.end.6264

lor.end.6264:                                     ; preds = %lor.rhs.6259, %sw.bb.6255
  %3365 = phi i1 [ true, %sw.bb.6255 ], [ %cmp6262, %lor.rhs.6259 ]
  %cond6266 = select i1 %3365, i32 283, i32 285
  store i32 %cond6266, i32* %retval
  br label %return

sw.bb.6267:                                       ; preds = %reserved_word
  store i32 345, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 0, i32* @PL_expect, align 4
  %3366 = load i8*, i8** %s, align 8
  store i8* %3366, i8** @PL_bufptr, align 8
  store i32 282, i32* %retval
  br label %return

sw.bb.6268:                                       ; preds = %reserved_word
  call void @S_set_csh()
  %3367 = load i8*, i8** %s, align 8
  %call6269 = call i32 @S_lop(i32 25, i32 1, i8* %3367)
  store i32 %call6269, i32* %retval
  br label %return

sw.bb.6270:                                       ; preds = %reserved_word
  store i32 107, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %3368 = load i8*, i8** %s, align 8
  store i8* %3368, i8** @PL_bufptr, align 8
  %3369 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %3369, i8** @PL_last_uni, align 8
  store i16 107, i16* @PL_last_lop_op, align 2
  %3370 = load i8*, i8** %s, align 8
  %3371 = load i8, i8* %3370, align 1
  %conv6271 = sext i8 %3371 to i32
  %cmp6272 = icmp eq i32 %conv6271, 40
  br i1 %cmp6272, label %lor.end.6279, label %lor.rhs.6274

lor.rhs.6274:                                     ; preds = %sw.bb.6270
  %3372 = load i8*, i8** %s, align 8
  %call6275 = call i8* @S_skipspace(i8* %3372)
  store i8* %call6275, i8** %s, align 8
  %3373 = load i8*, i8** %s, align 8
  %3374 = load i8, i8* %3373, align 1
  %conv6276 = sext i8 %3374 to i32
  %cmp6277 = icmp eq i32 %conv6276, 40
  br label %lor.end.6279

lor.end.6279:                                     ; preds = %lor.rhs.6274, %sw.bb.6270
  %3375 = phi i1 [ true, %sw.bb.6270 ], [ %cmp6277, %lor.rhs.6274 ]
  %cond6281 = select i1 %3375, i32 283, i32 285
  store i32 %cond6281, i32* %retval
  br label %return

sw.bb.6282:                                       ; preds = %reserved_word
  %3376 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line6283 = getelementptr inbounds %struct.cop, %struct.cop* %3376, i32 0, i32 13
  %3377 = load i32, i32* %cop_line6283, align 4
  store i32 %3377, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %3378 = load i8*, i8** %s, align 8
  store i8* %3378, i8** @PL_bufptr, align 8
  store i32 274, i32* %retval
  br label %return

sw.bb.6284:                                       ; preds = %reserved_word
  %3379 = load i8*, i8** %s, align 8
  %call6285 = call i32 @S_lop(i32 113, i32 1, i8* %3379)
  store i32 %call6285, i32* %retval
  br label %return

sw.bb.6286:                                       ; preds = %reserved_word
  store i32 106, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %3380 = load i8*, i8** %s, align 8
  store i8* %3380, i8** @PL_bufptr, align 8
  %3381 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %3381, i8** @PL_last_uni, align 8
  store i16 106, i16* @PL_last_lop_op, align 2
  %3382 = load i8*, i8** %s, align 8
  %3383 = load i8, i8* %3382, align 1
  %conv6287 = sext i8 %3383 to i32
  %cmp6288 = icmp eq i32 %conv6287, 40
  br i1 %cmp6288, label %lor.end.6295, label %lor.rhs.6290

lor.rhs.6290:                                     ; preds = %sw.bb.6286
  %3384 = load i8*, i8** %s, align 8
  %call6291 = call i8* @S_skipspace(i8* %3384)
  store i8* %call6291, i8** %s, align 8
  %3385 = load i8*, i8** %s, align 8
  %3386 = load i8, i8* %3385, align 1
  %conv6292 = sext i8 %3386 to i32
  %cmp6293 = icmp eq i32 %conv6292, 40
  br label %lor.end.6295

lor.end.6295:                                     ; preds = %lor.rhs.6290, %sw.bb.6286
  %3387 = phi i1 [ true, %sw.bb.6286 ], [ %cmp6293, %lor.rhs.6290 ]
  %cond6297 = select i1 %3387, i32 283, i32 285
  store i32 %cond6297, i32* %retval
  br label %return

sw.bb.6298:                                       ; preds = %reserved_word
  %3388 = load i8*, i8** %s, align 8
  %call6299 = call i32 @S_lop(i32 221, i32 1, i8* %3388)
  store i32 %call6299, i32* %retval
  br label %return

sw.bb.6300:                                       ; preds = %reserved_word
  %3389 = load i8*, i8** %s, align 8
  %call6301 = call i32 @S_lop(i32 140, i32 1, i8* %3389)
  store i32 %call6301, i32* %retval
  br label %return

sw.bb.6302:                                       ; preds = %reserved_word
  store i32 131, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %3390 = load i8*, i8** %s, align 8
  store i8* %3390, i8** @PL_bufptr, align 8
  %3391 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %3391, i8** @PL_last_uni, align 8
  store i16 131, i16* @PL_last_lop_op, align 2
  %3392 = load i8*, i8** %s, align 8
  %3393 = load i8, i8* %3392, align 1
  %conv6303 = sext i8 %3393 to i32
  %cmp6304 = icmp eq i32 %conv6303, 40
  br i1 %cmp6304, label %lor.end.6311, label %lor.rhs.6306

lor.rhs.6306:                                     ; preds = %sw.bb.6302
  %3394 = load i8*, i8** %s, align 8
  %call6307 = call i8* @S_skipspace(i8* %3394)
  store i8* %call6307, i8** %s, align 8
  %3395 = load i8*, i8** %s, align 8
  %3396 = load i8, i8* %3395, align 1
  %conv6308 = sext i8 %3396 to i32
  %cmp6309 = icmp eq i32 %conv6308, 40
  br label %lor.end.6311

lor.end.6311:                                     ; preds = %lor.rhs.6306, %sw.bb.6302
  %3397 = phi i1 [ true, %sw.bb.6302 ], [ %cmp6309, %lor.rhs.6306 ]
  %cond6313 = select i1 %3397, i32 283, i32 285
  store i32 %cond6313, i32* %retval
  br label %return

sw.bb.6314:                                       ; preds = %reserved_word
  %3398 = load i8*, i8** %s, align 8
  %call6315 = call i32 @S_lop(i32 286, i32 1, i8* %3398)
  store i32 %call6315, i32* %retval
  br label %return

sw.bb.6316:                                       ; preds = %reserved_word
  %3399 = load i8*, i8** %s, align 8
  %call6317 = call i8* @S_force_word(i8* %3399, i32 257, i32 1, i32 0, i32 0)
  store i8* %call6317, i8** %s, align 8
  store i32 185, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %3400 = load i8*, i8** %s, align 8
  store i8* %3400, i8** @PL_bufptr, align 8
  store i32 280, i32* %retval
  br label %return

sw.bb.6318:                                       ; preds = %reserved_word
  store i32 123, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %3401 = load i8*, i8** %s, align 8
  store i8* %3401, i8** @PL_bufptr, align 8
  %3402 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %3402, i8** @PL_last_uni, align 8
  store i16 123, i16* @PL_last_lop_op, align 2
  %3403 = load i8*, i8** %s, align 8
  %3404 = load i8, i8* %3403, align 1
  %conv6319 = sext i8 %3404 to i32
  %cmp6320 = icmp eq i32 %conv6319, 40
  br i1 %cmp6320, label %lor.end.6327, label %lor.rhs.6322

lor.rhs.6322:                                     ; preds = %sw.bb.6318
  %3405 = load i8*, i8** %s, align 8
  %call6323 = call i8* @S_skipspace(i8* %3405)
  store i8* %call6323, i8** %s, align 8
  %3406 = load i8*, i8** %s, align 8
  %3407 = load i8, i8* %3406, align 1
  %conv6324 = sext i8 %3407 to i32
  %cmp6325 = icmp eq i32 %conv6324, 40
  br label %lor.end.6327

lor.end.6327:                                     ; preds = %lor.rhs.6322, %sw.bb.6318
  %3408 = phi i1 [ true, %sw.bb.6318 ], [ %cmp6325, %lor.rhs.6322 ]
  %cond6329 = select i1 %3408, i32 283, i32 285
  store i32 %cond6329, i32* %retval
  br label %return

sw.bb.6330:                                       ; preds = %reserved_word
  store i32 121, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %3409 = load i8*, i8** %s, align 8
  store i8* %3409, i8** @PL_bufptr, align 8
  %3410 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %3410, i8** @PL_last_uni, align 8
  store i16 121, i16* @PL_last_lop_op, align 2
  %3411 = load i8*, i8** %s, align 8
  %3412 = load i8, i8* %3411, align 1
  %conv6331 = sext i8 %3412 to i32
  %cmp6332 = icmp eq i32 %conv6331, 40
  br i1 %cmp6332, label %lor.end.6339, label %lor.rhs.6334

lor.rhs.6334:                                     ; preds = %sw.bb.6330
  %3413 = load i8*, i8** %s, align 8
  %call6335 = call i8* @S_skipspace(i8* %3413)
  store i8* %call6335, i8** %s, align 8
  %3414 = load i8*, i8** %s, align 8
  %3415 = load i8, i8* %3414, align 1
  %conv6336 = sext i8 %3415 to i32
  %cmp6337 = icmp eq i32 %conv6336, 40
  br label %lor.end.6339

lor.end.6339:                                     ; preds = %lor.rhs.6334, %sw.bb.6330
  %3416 = phi i1 [ true, %sw.bb.6330 ], [ %cmp6337, %lor.rhs.6334 ]
  %cond6341 = select i1 %3416, i32 283, i32 285
  store i32 %cond6341, i32* %retval
  br label %return

sw.bb.6342:                                       ; preds = %reserved_word
  store i32 0, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %3417 = load i8*, i8** %s, align 8
  store i8* %3417, i8** @PL_bufptr, align 8
  store i32 295, i32* %retval
  br label %return

sw.bb.6343:                                       ; preds = %reserved_word
  store i32 110, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %3418 = load i8*, i8** %s, align 8
  store i8* %3418, i8** @PL_bufptr, align 8
  %3419 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %3419, i8** @PL_last_uni, align 8
  store i16 110, i16* @PL_last_lop_op, align 2
  %3420 = load i8*, i8** %s, align 8
  %3421 = load i8, i8* %3420, align 1
  %conv6344 = sext i8 %3421 to i32
  %cmp6345 = icmp eq i32 %conv6344, 40
  br i1 %cmp6345, label %lor.end.6352, label %lor.rhs.6347

lor.rhs.6347:                                     ; preds = %sw.bb.6343
  %3422 = load i8*, i8** %s, align 8
  %call6348 = call i8* @S_skipspace(i8* %3422)
  store i8* %call6348, i8** %s, align 8
  %3423 = load i8*, i8** %s, align 8
  %3424 = load i8, i8* %3423, align 1
  %conv6349 = sext i8 %3424 to i32
  %cmp6350 = icmp eq i32 %conv6349, 40
  br label %lor.end.6352

lor.end.6352:                                     ; preds = %lor.rhs.6347, %sw.bb.6343
  %3425 = phi i1 [ true, %sw.bb.6343 ], [ %cmp6350, %lor.rhs.6347 ]
  %cond6354 = select i1 %3425, i32 283, i32 285
  store i32 %cond6354, i32* %retval
  br label %return

sw.bb.6355:                                       ; preds = %reserved_word
  store i32 84, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %3426 = load i8*, i8** %s, align 8
  store i8* %3426, i8** @PL_bufptr, align 8
  store i32 287, i32* %retval
  br label %return

sw.bb.6356:                                       ; preds = %reserved_word
  store i32 86, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %3427 = load i8*, i8** %s, align 8
  store i8* %3427, i8** @PL_bufptr, align 8
  store i32 287, i32* %retval
  br label %return

sw.bb.6357:                                       ; preds = %reserved_word
  store i32 294, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %3428 = load i8*, i8** %s, align 8
  store i8* %3428, i8** @PL_bufptr, align 8
  %3429 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %3429, i8** @PL_last_uni, align 8
  store i16 294, i16* @PL_last_lop_op, align 2
  %3430 = load i8*, i8** %s, align 8
  %3431 = load i8, i8* %3430, align 1
  %conv6358 = sext i8 %3431 to i32
  %cmp6359 = icmp eq i32 %conv6358, 40
  br i1 %cmp6359, label %lor.end.6366, label %lor.rhs.6361

lor.rhs.6361:                                     ; preds = %sw.bb.6357
  %3432 = load i8*, i8** %s, align 8
  %call6362 = call i8* @S_skipspace(i8* %3432)
  store i8* %call6362, i8** %s, align 8
  %3433 = load i8*, i8** %s, align 8
  %3434 = load i8, i8* %3433, align 1
  %conv6363 = sext i8 %3434 to i32
  %cmp6364 = icmp eq i32 %conv6363, 40
  br label %lor.end.6366

lor.end.6366:                                     ; preds = %lor.rhs.6361, %sw.bb.6357
  %3435 = phi i1 [ true, %sw.bb.6357 ], [ %cmp6364, %lor.rhs.6361 ]
  %cond6368 = select i1 %3435, i32 283, i32 285
  store i32 %cond6368, i32* %retval
  br label %return

sw.bb.6369:                                       ; preds = %reserved_word
  store i32 104, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %3436 = load i8*, i8** %s, align 8
  store i8* %3436, i8** @PL_bufptr, align 8
  %3437 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %3437, i8** @PL_last_uni, align 8
  store i16 104, i16* @PL_last_lop_op, align 2
  %3438 = load i8*, i8** %s, align 8
  %3439 = load i8, i8* %3438, align 1
  %conv6370 = sext i8 %3439 to i32
  %cmp6371 = icmp eq i32 %conv6370, 40
  br i1 %cmp6371, label %lor.end.6378, label %lor.rhs.6373

lor.rhs.6373:                                     ; preds = %sw.bb.6369
  %3440 = load i8*, i8** %s, align 8
  %call6374 = call i8* @S_skipspace(i8* %3440)
  store i8* %call6374, i8** %s, align 8
  %3441 = load i8*, i8** %s, align 8
  %3442 = load i8, i8* %3441, align 1
  %conv6375 = sext i8 %3442 to i32
  %cmp6376 = icmp eq i32 %conv6375, 40
  br label %lor.end.6378

lor.end.6378:                                     ; preds = %lor.rhs.6373, %sw.bb.6369
  %3443 = phi i1 [ true, %sw.bb.6369 ], [ %cmp6376, %lor.rhs.6373 ]
  %cond6380 = select i1 %3443, i32 283, i32 285
  store i32 %cond6380, i32* %retval
  br label %return

sw.bb.6381:                                       ; preds = %reserved_word
  %3444 = load i8*, i8** %s, align 8
  %call6382 = call i32 @S_lop(i32 270, i32 1, i8* %3444)
  store i32 %call6382, i32* %retval
  br label %return

sw.bb.6383:                                       ; preds = %reserved_word
  %3445 = load i8*, i8** %s, align 8
  %call6384 = call i32 @S_lop(i32 227, i32 1, i8* %3445)
  store i32 %call6384, i32* %retval
  br label %return

sw.bb.6385:                                       ; preds = %reserved_word
  store i32 347, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %3446 = load i8*, i8** %s, align 8
  store i8* %3446, i8** @PL_bufptr, align 8
  %3447 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %3447, i8** @PL_last_uni, align 8
  store i16 347, i16* @PL_last_lop_op, align 2
  %3448 = load i8*, i8** %s, align 8
  %3449 = load i8, i8* %3448, align 1
  %conv6386 = sext i8 %3449 to i32
  %cmp6387 = icmp eq i32 %conv6386, 40
  br i1 %cmp6387, label %lor.end.6394, label %lor.rhs.6389

lor.rhs.6389:                                     ; preds = %sw.bb.6385
  %3450 = load i8*, i8** %s, align 8
  %call6390 = call i8* @S_skipspace(i8* %3450)
  store i8* %call6390, i8** %s, align 8
  %3451 = load i8*, i8** %s, align 8
  %3452 = load i8, i8* %3451, align 1
  %conv6391 = sext i8 %3452 to i32
  %cmp6392 = icmp eq i32 %conv6391, 40
  br label %lor.end.6394

lor.end.6394:                                     ; preds = %lor.rhs.6389, %sw.bb.6385
  %3453 = phi i1 [ true, %sw.bb.6385 ], [ %cmp6392, %lor.rhs.6389 ]
  %cond6396 = select i1 %3453, i32 283, i32 285
  store i32 %cond6396, i32* %retval
  br label %return

sw.bb.6397:                                       ; preds = %reserved_word
  store i32 234, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %3454 = load i8*, i8** %s, align 8
  store i8* %3454, i8** @PL_bufptr, align 8
  %3455 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %3455, i8** @PL_last_uni, align 8
  store i16 234, i16* @PL_last_lop_op, align 2
  %3456 = load i8*, i8** %s, align 8
  %3457 = load i8, i8* %3456, align 1
  %conv6398 = sext i8 %3457 to i32
  %cmp6399 = icmp eq i32 %conv6398, 40
  br i1 %cmp6399, label %lor.end.6406, label %lor.rhs.6401

lor.rhs.6401:                                     ; preds = %sw.bb.6397
  %3458 = load i8*, i8** %s, align 8
  %call6402 = call i8* @S_skipspace(i8* %3458)
  store i8* %call6402, i8** %s, align 8
  %3459 = load i8*, i8** %s, align 8
  %3460 = load i8, i8* %3459, align 1
  %conv6403 = sext i8 %3460 to i32
  %cmp6404 = icmp eq i32 %conv6403, 40
  br label %lor.end.6406

lor.end.6406:                                     ; preds = %lor.rhs.6401, %sw.bb.6397
  %3461 = phi i1 [ true, %sw.bb.6397 ], [ %cmp6404, %lor.rhs.6401 ]
  %cond6408 = select i1 %3461, i32 283, i32 285
  store i32 %cond6408, i32* %retval
  br label %return

sw.bb.6409:                                       ; preds = %reserved_word
  %3462 = load i8*, i8** %s, align 8
  %call6410 = call i8* @S_scan_pat(i8* %3462, i32 31)
  store i8* %call6410, i8** %s, align 8
  %3463 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line6411 = getelementptr inbounds %struct.cop, %struct.cop* %3463, i32 0, i32 13
  %3464 = load i32, i32* %cop_line6411, align 4
  %3465 = load i32, i32* @PL_copline, align 4
  %cmp6412 = icmp ult i32 %3464, %3465
  br i1 %cmp6412, label %cond.true.6414, label %cond.false.6416

cond.true.6414:                                   ; preds = %sw.bb.6409
  %3466 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line6415 = getelementptr inbounds %struct.cop, %struct.cop* %3466, i32 0, i32 13
  %3467 = load i32, i32* %cop_line6415, align 4
  br label %cond.end.6417

cond.false.6416:                                  ; preds = %sw.bb.6409
  %3468 = load i32, i32* @PL_copline, align 4
  br label %cond.end.6417

cond.end.6417:                                    ; preds = %cond.false.6416, %cond.true.6414
  %cond6418 = phi i32 [ %3467, %cond.true.6414 ], [ %3468, %cond.false.6416 ]
  store i32 %cond6418, i32* @PL_copline, align 4
  store i32 0, i32* @PL_expect, align 4
  %3469 = load i8*, i8** %s, align 8
  store i8* %3469, i8** @PL_bufptr, align 8
  %call6419 = call i32 @S_sublex_start()
  store i32 %call6419, i32* %retval
  br label %return

sw.bb.6420:                                       ; preds = %reserved_word
  %3470 = load i8*, i8** %s, align 8
  %call6421 = call i32 @S_lop(i32 154, i32 2, i8* %3470)
  store i32 %call6421, i32* %retval
  br label %return

sw.bb.6422:                                       ; preds = %reserved_word
  %3471 = load i8*, i8** %s, align 8
  %call6423 = call i32 @S_lop(i32 273, i32 1, i8* %3471)
  store i32 %call6423, i32* %retval
  br label %return

sw.bb.6424:                                       ; preds = %reserved_word
  %3472 = load i8*, i8** %s, align 8
  %call6425 = call i32 @S_lop(i32 303, i32 1, i8* %3472)
  store i32 %call6425, i32* %retval
  br label %return

sw.bb.6426:                                       ; preds = %reserved_word
  %3473 = load i8*, i8** %s, align 8
  %call6427 = call i32 @S_lop(i32 302, i32 1, i8* %3473)
  store i32 %call6427, i32* %retval
  br label %return

sw.bb.6428:                                       ; preds = %reserved_word
  %3474 = load i8*, i8** %s, align 8
  %call6429 = call i32 @S_lop(i32 305, i32 1, i8* %3474)
  store i32 %call6429, i32* %retval
  br label %return

sw.bb.6430:                                       ; preds = %reserved_word
  %3475 = load i8*, i8** %s, align 8
  %call6431 = call i32 @S_lop(i32 304, i32 1, i8* %3475)
  store i32 %call6431, i32* %retval
  br label %return

sw.bb.6432:                                       ; preds = %reserved_word, %reserved_word
  %3476 = load i32, i32* %tmp, align 4
  store i32 %3476, i32* @PL_in_my, align 4
  %3477 = load i8*, i8** %s, align 8
  %call6433 = call i8* @S_skipspace(i8* %3477)
  store i8* %call6433, i8** %s, align 8
  %3478 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private6434 = getelementptr inbounds %struct.cop, %struct.cop* %3478, i32 0, i32 7
  %3479 = load i8, i8* %op_private6434, align 1
  %conv6435 = zext i8 %3479 to i32
  %and6436 = and i32 %conv6435, 8
  %tobool6437 = icmp ne i32 %and6436, 0
  br i1 %tobool6437, label %cond.true.6456, label %lor.lhs.false.6438

lor.lhs.false.6438:                               ; preds = %sw.bb.6432
  %3480 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %tobool6439 = icmp ne %struct.sv* %3480, null
  br i1 %tobool6439, label %land.lhs.true.6440, label %lor.lhs.false.6449

land.lhs.true.6440:                               ; preds = %lor.lhs.false.6438
  %3481 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_flags6441 = getelementptr inbounds %struct.sv, %struct.sv* %3481, i32 0, i32 2
  %3482 = load i32, i32* %sv_flags6441, align 4
  %and6442 = and i32 %3482, 536870912
  %tobool6443 = icmp ne i32 %and6442, 0
  br i1 %tobool6443, label %land.lhs.true.6444, label %lor.lhs.false.6449

land.lhs.true.6444:                               ; preds = %land.lhs.true.6440
  %3483 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private6445 = getelementptr inbounds %struct.cop, %struct.cop* %3483, i32 0, i32 7
  %3484 = load i8, i8* %op_private6445, align 1
  %conv6446 = zext i8 %3484 to i32
  %and6447 = and i32 %conv6446, 8
  %tobool6448 = icmp ne i32 %and6447, 0
  br i1 %tobool6448, label %lor.lhs.false.6449, label %lor.lhs.false.6452

lor.lhs.false.6449:                               ; preds = %land.lhs.true.6444, %land.lhs.true.6440, %lor.lhs.false.6438
  %3485 = load i32, i32* @PL_hints, align 4
  %and6450 = and i32 %3485, 8388608
  %tobool6451 = icmp ne i32 %and6450, 0
  br i1 %tobool6451, label %lor.lhs.false.6452, label %cond.true.6456

lor.lhs.false.6452:                               ; preds = %lor.lhs.false.6449, %land.lhs.true.6444
  %3486 = load i8*, i8** %s, align 8
  %3487 = load i8, i8* %3486, align 1
  %conv6453 = zext i8 %3487 to i32
  %cmp6454 = icmp slt i32 %conv6453, 192
  br i1 %cmp6454, label %cond.true.6456, label %cond.false.6476

cond.true.6456:                                   ; preds = %lor.lhs.false.6452, %lor.lhs.false.6449, %sw.bb.6432
  %3488 = load i8*, i8** %s, align 8
  %3489 = load i8, i8* %3488, align 1
  %conv6457 = sext i8 %3489 to i32
  %cmp6458 = icmp sge i32 %conv6457, 65
  br i1 %cmp6458, label %land.lhs.true.6460, label %lor.lhs.false.6464

land.lhs.true.6460:                               ; preds = %cond.true.6456
  %3490 = load i8*, i8** %s, align 8
  %3491 = load i8, i8* %3490, align 1
  %conv6461 = sext i8 %3491 to i32
  %cmp6462 = icmp sle i32 %conv6461, 90
  br i1 %cmp6462, label %if.then.6483, label %lor.lhs.false.6464

lor.lhs.false.6464:                               ; preds = %land.lhs.true.6460, %cond.true.6456
  %3492 = load i8*, i8** %s, align 8
  %3493 = load i8, i8* %3492, align 1
  %conv6465 = sext i8 %3493 to i32
  %cmp6466 = icmp sge i32 %conv6465, 97
  br i1 %cmp6466, label %land.lhs.true.6468, label %lor.lhs.false.6472

land.lhs.true.6468:                               ; preds = %lor.lhs.false.6464
  %3494 = load i8*, i8** %s, align 8
  %3495 = load i8, i8* %3494, align 1
  %conv6469 = sext i8 %3495 to i32
  %cmp6470 = icmp sle i32 %conv6469, 122
  br i1 %cmp6470, label %if.then.6483, label %lor.lhs.false.6472

lor.lhs.false.6472:                               ; preds = %land.lhs.true.6468, %lor.lhs.false.6464
  %3496 = load i8*, i8** %s, align 8
  %3497 = load i8, i8* %3496, align 1
  %conv6473 = sext i8 %3497 to i32
  %cmp6474 = icmp eq i32 %conv6473, 95
  br i1 %cmp6474, label %if.then.6483, label %if.end.6503

cond.false.6476:                                  ; preds = %lor.lhs.false.6452
  %3498 = load i8*, i8** %s, align 8
  %call6477 = call signext i8 @Perl_is_utf8_idcont(i8* %3498)
  %conv6478 = sext i8 %call6477 to i32
  %tobool6479 = icmp ne i32 %conv6478, 0
  br i1 %tobool6479, label %land.lhs.true.6480, label %if.end.6503

land.lhs.true.6480:                               ; preds = %cond.false.6476
  %3499 = load i8*, i8** %s, align 8
  %call6481 = call signext i8 @Perl_is_utf8_digit(i8* %3499)
  %tobool6482 = icmp ne i8 %call6481, 0
  br i1 %tobool6482, label %if.end.6503, label %if.then.6483

if.then.6483:                                     ; preds = %land.lhs.true.6480, %lor.lhs.false.6472, %land.lhs.true.6468, %land.lhs.true.6460
  %3500 = load i8*, i8** %s, align 8
  %call6484 = call i8* @S_scan_word(i8* %3500, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i32 0), i64 256, i32 1, i64* %len)
  store i8* %call6484, i8** %s, align 8
  %3501 = load i64, i64* %len, align 8
  %cmp6485 = icmp eq i64 %3501, 3
  br i1 %cmp6485, label %land.lhs.true.6487, label %if.end.6491

land.lhs.true.6487:                               ; preds = %if.then.6483
  %call6488 = call i32 @strncmp(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.96, i32 0, i32 0), i64 3)
  %tobool6489 = icmp ne i32 %call6488, 0
  br i1 %tobool6489, label %if.end.6491, label %if.then.6490

if.then.6490:                                     ; preds = %land.lhs.true.6487
  br label %really_sub

if.end.6491:                                      ; preds = %land.lhs.true.6487, %if.then.6483
  %3502 = load i64, i64* %len, align 8
  %conv6492 = trunc i64 %3502 to i32
  %call6493 = call %struct.hv* @S_find_in_my_stash(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i32 0), i32 %conv6492)
  store %struct.hv* %call6493, %struct.hv** @PL_in_my_stash, align 8
  %3503 = load %struct.hv*, %struct.hv** @PL_in_my_stash, align 8
  %tobool6494 = icmp ne %struct.hv* %3503, null
  br i1 %tobool6494, label %if.end.6502, label %if.then.6495

if.then.6495:                                     ; preds = %if.end.6491
  %3504 = load i8*, i8** %s, align 8
  store i8* %3504, i8** @PL_bufptr, align 8
  %arraydecay6498 = getelementptr inbounds [1024 x i8], [1024 x i8]* %tmpbuf6497, i32 0, i32 0
  %call6499 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay6498, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.97, i32 0, i32 0), i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i32 0))
  %arraydecay6500 = getelementptr inbounds [1024 x i8], [1024 x i8]* %tmpbuf6497, i32 0, i32 0
  %call6501 = call i32 @Perl_yyerror(i8* %arraydecay6500)
  br label %if.end.6502

if.end.6502:                                      ; preds = %if.then.6495, %if.end.6491
  br label %if.end.6503

if.end.6503:                                      ; preds = %if.end.6502, %land.lhs.true.6480, %cond.false.6476, %lor.lhs.false.6472
  store i32 1, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %3505 = load i8*, i8** %s, align 8
  store i8* %3505, i8** @PL_bufptr, align 8
  store i32 296, i32* %retval
  br label %return

sw.bb.6504:                                       ; preds = %reserved_word
  %3506 = load i8*, i8** %s, align 8
  %call6505 = call i8* @S_force_word(i8* %3506, i32 257, i32 1, i32 0, i32 0)
  store i8* %call6505, i8** %s, align 8
  store i32 186, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %3507 = load i8*, i8** %s, align 8
  store i8* %3507, i8** @PL_bufptr, align 8
  store i32 280, i32* %retval
  br label %return

sw.bb.6506:                                       ; preds = %reserved_word
  store i32 89, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %3508 = load i8*, i8** %s, align 8
  store i8* %3508, i8** @PL_bufptr, align 8
  store i32 288, i32* %retval
  br label %return

sw.bb.6507:                                       ; preds = %reserved_word
  %3509 = load i32, i32* @PL_expect, align 4
  %cmp6508 = icmp ne i32 %3509, 3
  br i1 %cmp6508, label %if.then.6510, label %if.end.6512

if.then.6510:                                     ; preds = %sw.bb.6507
  %call6511 = call i32 @Perl_yyerror(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.98, i32 0, i32 0))
  br label %if.end.6512

if.end.6512:                                      ; preds = %if.then.6510, %sw.bb.6507
  %3510 = load i8*, i8** %s, align 8
  %call6513 = call i8* @S_force_word(i8* %3510, i32 257, i32 0, i32 1, i32 0)
  store i8* %call6513, i8** %s, align 8
  %3511 = load i8*, i8** %s, align 8
  %call6514 = call i8* @S_force_version(i8* %3511, i32 0)
  store i8* %call6514, i8** %s, align 8
  store i32 0, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %3512 = load i8*, i8** %s, align 8
  store i8* %3512, i8** @PL_bufptr, align 8
  store i32 271, i32* %retval
  br label %return

sw.bb.6515:                                       ; preds = %reserved_word
  %3513 = load i8*, i8** %s, align 8
  %3514 = load i8, i8* %3513, align 1
  %conv6516 = sext i8 %3514 to i32
  %cmp6517 = icmp eq i32 %conv6516, 40
  br i1 %cmp6517, label %if.then.6524, label %lor.lhs.false.6519

lor.lhs.false.6519:                               ; preds = %sw.bb.6515
  %3515 = load i8*, i8** %s, align 8
  %call6520 = call i8* @S_skipspace(i8* %3515)
  store i8* %call6520, i8** %s, align 8
  %3516 = load i8*, i8** %s, align 8
  %3517 = load i8, i8* %3516, align 1
  %conv6521 = sext i8 %3517 to i32
  %cmp6522 = icmp eq i32 %conv6521, 40
  br i1 %cmp6522, label %if.then.6524, label %if.else.6525

if.then.6524:                                     ; preds = %lor.lhs.false.6519, %sw.bb.6515
  store i32 96, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 0, i32* @PL_expect, align 4
  %3518 = load i8*, i8** %s, align 8
  store i8* %3518, i8** @PL_bufptr, align 8
  store i32 283, i32* %retval
  br label %return

if.else.6525:                                     ; preds = %lor.lhs.false.6519
  store i32 1, i32* @PL_expect, align 4
  %3519 = load i8*, i8** %s, align 8
  store i8* %3519, i8** @PL_bufptr, align 8
  store i32 302, i32* %retval
  br label %return

sw.bb.6526:                                       ; preds = %reserved_word
  %3520 = load i8*, i8** %s, align 8
  %call6527 = call i8* @S_skipspace(i8* %3520)
  store i8* %call6527, i8** %s, align 8
  %3521 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private6528 = getelementptr inbounds %struct.cop, %struct.cop* %3521, i32 0, i32 7
  %3522 = load i8, i8* %op_private6528, align 1
  %conv6529 = zext i8 %3522 to i32
  %and6530 = and i32 %conv6529, 8
  %tobool6531 = icmp ne i32 %and6530, 0
  br i1 %tobool6531, label %cond.true.6550, label %lor.lhs.false.6532

lor.lhs.false.6532:                               ; preds = %sw.bb.6526
  %3523 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %tobool6533 = icmp ne %struct.sv* %3523, null
  br i1 %tobool6533, label %land.lhs.true.6534, label %lor.lhs.false.6543

land.lhs.true.6534:                               ; preds = %lor.lhs.false.6532
  %3524 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_flags6535 = getelementptr inbounds %struct.sv, %struct.sv* %3524, i32 0, i32 2
  %3525 = load i32, i32* %sv_flags6535, align 4
  %and6536 = and i32 %3525, 536870912
  %tobool6537 = icmp ne i32 %and6536, 0
  br i1 %tobool6537, label %land.lhs.true.6538, label %lor.lhs.false.6543

land.lhs.true.6538:                               ; preds = %land.lhs.true.6534
  %3526 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private6539 = getelementptr inbounds %struct.cop, %struct.cop* %3526, i32 0, i32 7
  %3527 = load i8, i8* %op_private6539, align 1
  %conv6540 = zext i8 %3527 to i32
  %and6541 = and i32 %conv6540, 8
  %tobool6542 = icmp ne i32 %and6541, 0
  br i1 %tobool6542, label %lor.lhs.false.6543, label %lor.lhs.false.6546

lor.lhs.false.6543:                               ; preds = %land.lhs.true.6538, %land.lhs.true.6534, %lor.lhs.false.6532
  %3528 = load i32, i32* @PL_hints, align 4
  %and6544 = and i32 %3528, 8388608
  %tobool6545 = icmp ne i32 %and6544, 0
  br i1 %tobool6545, label %lor.lhs.false.6546, label %cond.true.6550

lor.lhs.false.6546:                               ; preds = %lor.lhs.false.6543, %land.lhs.true.6538
  %3529 = load i8*, i8** %s, align 8
  %3530 = load i8, i8* %3529, align 1
  %conv6547 = zext i8 %3530 to i32
  %cmp6548 = icmp slt i32 %conv6547, 192
  br i1 %cmp6548, label %cond.true.6550, label %cond.false.6570

cond.true.6550:                                   ; preds = %lor.lhs.false.6546, %lor.lhs.false.6543, %sw.bb.6526
  %3531 = load i8*, i8** %s, align 8
  %3532 = load i8, i8* %3531, align 1
  %conv6551 = sext i8 %3532 to i32
  %cmp6552 = icmp sge i32 %conv6551, 65
  br i1 %cmp6552, label %land.lhs.true.6554, label %lor.lhs.false.6558

land.lhs.true.6554:                               ; preds = %cond.true.6550
  %3533 = load i8*, i8** %s, align 8
  %3534 = load i8, i8* %3533, align 1
  %conv6555 = sext i8 %3534 to i32
  %cmp6556 = icmp sle i32 %conv6555, 90
  br i1 %cmp6556, label %if.then.6577, label %lor.lhs.false.6558

lor.lhs.false.6558:                               ; preds = %land.lhs.true.6554, %cond.true.6550
  %3535 = load i8*, i8** %s, align 8
  %3536 = load i8, i8* %3535, align 1
  %conv6559 = sext i8 %3536 to i32
  %cmp6560 = icmp sge i32 %conv6559, 97
  br i1 %cmp6560, label %land.lhs.true.6562, label %lor.lhs.false.6566

land.lhs.true.6562:                               ; preds = %lor.lhs.false.6558
  %3537 = load i8*, i8** %s, align 8
  %3538 = load i8, i8* %3537, align 1
  %conv6563 = sext i8 %3538 to i32
  %cmp6564 = icmp sle i32 %conv6563, 122
  br i1 %cmp6564, label %if.then.6577, label %lor.lhs.false.6566

lor.lhs.false.6566:                               ; preds = %land.lhs.true.6562, %lor.lhs.false.6558
  %3539 = load i8*, i8** %s, align 8
  %3540 = load i8, i8* %3539, align 1
  %conv6567 = sext i8 %3540 to i32
  %cmp6568 = icmp eq i32 %conv6567, 95
  br i1 %cmp6568, label %if.then.6577, label %if.end.6718

cond.false.6570:                                  ; preds = %lor.lhs.false.6546
  %3541 = load i8*, i8** %s, align 8
  %call6571 = call signext i8 @Perl_is_utf8_idcont(i8* %3541)
  %conv6572 = sext i8 %call6571 to i32
  %tobool6573 = icmp ne i32 %conv6572, 0
  br i1 %tobool6573, label %land.lhs.true.6574, label %if.end.6718

land.lhs.true.6574:                               ; preds = %cond.false.6570
  %3542 = load i8*, i8** %s, align 8
  %call6575 = call signext i8 @Perl_is_utf8_digit(i8* %3542)
  %tobool6576 = icmp ne i8 %call6575, 0
  br i1 %tobool6576, label %if.end.6718, label %if.then.6577

if.then.6577:                                     ; preds = %land.lhs.true.6574, %lor.lhs.false.6566, %land.lhs.true.6562, %land.lhs.true.6554
  %3543 = load i8*, i8** %s, align 8
  store i8* %3543, i8** %d, align 8
  br label %for.cond.6580

for.cond.6580:                                    ; preds = %for.inc.6640, %if.then.6577
  %3544 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private6581 = getelementptr inbounds %struct.cop, %struct.cop* %3544, i32 0, i32 7
  %3545 = load i8, i8* %op_private6581, align 1
  %conv6582 = zext i8 %3545 to i32
  %and6583 = and i32 %conv6582, 8
  %tobool6584 = icmp ne i32 %and6583, 0
  br i1 %tobool6584, label %cond.true.6603, label %lor.lhs.false.6585

lor.lhs.false.6585:                               ; preds = %for.cond.6580
  %3546 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %tobool6586 = icmp ne %struct.sv* %3546, null
  br i1 %tobool6586, label %land.lhs.true.6587, label %lor.lhs.false.6596

land.lhs.true.6587:                               ; preds = %lor.lhs.false.6585
  %3547 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_flags6588 = getelementptr inbounds %struct.sv, %struct.sv* %3547, i32 0, i32 2
  %3548 = load i32, i32* %sv_flags6588, align 4
  %and6589 = and i32 %3548, 536870912
  %tobool6590 = icmp ne i32 %and6589, 0
  br i1 %tobool6590, label %land.lhs.true.6591, label %lor.lhs.false.6596

land.lhs.true.6591:                               ; preds = %land.lhs.true.6587
  %3549 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private6592 = getelementptr inbounds %struct.cop, %struct.cop* %3549, i32 0, i32 7
  %3550 = load i8, i8* %op_private6592, align 1
  %conv6593 = zext i8 %3550 to i32
  %and6594 = and i32 %conv6593, 8
  %tobool6595 = icmp ne i32 %and6594, 0
  br i1 %tobool6595, label %lor.lhs.false.6596, label %lor.lhs.false.6599

lor.lhs.false.6596:                               ; preds = %land.lhs.true.6591, %land.lhs.true.6587, %lor.lhs.false.6585
  %3551 = load i32, i32* @PL_hints, align 4
  %and6597 = and i32 %3551, 8388608
  %tobool6598 = icmp ne i32 %and6597, 0
  br i1 %tobool6598, label %lor.lhs.false.6599, label %cond.true.6603

lor.lhs.false.6599:                               ; preds = %lor.lhs.false.6596, %land.lhs.true.6591
  %3552 = load i8*, i8** %d, align 8
  %3553 = load i8, i8* %3552, align 1
  %conv6600 = zext i8 %3553 to i32
  %cmp6601 = icmp slt i32 %conv6600, 192
  br i1 %cmp6601, label %cond.true.6603, label %cond.false.6633

cond.true.6603:                                   ; preds = %lor.lhs.false.6599, %lor.lhs.false.6596, %for.cond.6580
  %3554 = load i8*, i8** %d, align 8
  %3555 = load i8, i8* %3554, align 1
  %conv6604 = sext i8 %3555 to i32
  %cmp6605 = icmp sge i32 %conv6604, 65
  br i1 %cmp6605, label %land.lhs.true.6607, label %lor.lhs.false.6611

land.lhs.true.6607:                               ; preds = %cond.true.6603
  %3556 = load i8*, i8** %d, align 8
  %3557 = load i8, i8* %3556, align 1
  %conv6608 = sext i8 %3557 to i32
  %cmp6609 = icmp sle i32 %conv6608, 90
  br i1 %cmp6609, label %lor.end.6631, label %lor.lhs.false.6611

lor.lhs.false.6611:                               ; preds = %land.lhs.true.6607, %cond.true.6603
  %3558 = load i8*, i8** %d, align 8
  %3559 = load i8, i8* %3558, align 1
  %conv6612 = sext i8 %3559 to i32
  %cmp6613 = icmp sge i32 %conv6612, 97
  br i1 %cmp6613, label %land.lhs.true.6615, label %lor.lhs.false.6619

land.lhs.true.6615:                               ; preds = %lor.lhs.false.6611
  %3560 = load i8*, i8** %d, align 8
  %3561 = load i8, i8* %3560, align 1
  %conv6616 = sext i8 %3561 to i32
  %cmp6617 = icmp sle i32 %conv6616, 122
  br i1 %cmp6617, label %lor.end.6631, label %lor.lhs.false.6619

lor.lhs.false.6619:                               ; preds = %land.lhs.true.6615, %lor.lhs.false.6611
  %3562 = load i8*, i8** %d, align 8
  %3563 = load i8, i8* %3562, align 1
  %conv6620 = sext i8 %3563 to i32
  %cmp6621 = icmp sge i32 %conv6620, 48
  br i1 %cmp6621, label %land.lhs.true.6623, label %lor.rhs.6627

land.lhs.true.6623:                               ; preds = %lor.lhs.false.6619
  %3564 = load i8*, i8** %d, align 8
  %3565 = load i8, i8* %3564, align 1
  %conv6624 = sext i8 %3565 to i32
  %cmp6625 = icmp sle i32 %conv6624, 57
  br i1 %cmp6625, label %lor.end.6631, label %lor.rhs.6627

lor.rhs.6627:                                     ; preds = %land.lhs.true.6623, %lor.lhs.false.6619
  %3566 = load i8*, i8** %d, align 8
  %3567 = load i8, i8* %3566, align 1
  %conv6628 = sext i8 %3567 to i32
  %cmp6629 = icmp eq i32 %conv6628, 95
  br label %lor.end.6631

lor.end.6631:                                     ; preds = %lor.rhs.6627, %land.lhs.true.6623, %land.lhs.true.6615, %land.lhs.true.6607
  %3568 = phi i1 [ true, %land.lhs.true.6623 ], [ true, %land.lhs.true.6615 ], [ true, %land.lhs.true.6607 ], [ %cmp6629, %lor.rhs.6627 ]
  %lor.ext6632 = zext i1 %3568 to i32
  br label %cond.end.6636

cond.false.6633:                                  ; preds = %lor.lhs.false.6599
  %3569 = load i8*, i8** %d, align 8
  %call6634 = call signext i8 @Perl_is_utf8_alnum(i8* %3569)
  %conv6635 = sext i8 %call6634 to i32
  br label %cond.end.6636

cond.end.6636:                                    ; preds = %cond.false.6633, %lor.end.6631
  %cond6637 = phi i32 [ %lor.ext6632, %lor.end.6631 ], [ %conv6635, %cond.false.6633 ]
  %tobool6638 = icmp ne i32 %cond6637, 0
  br i1 %tobool6638, label %for.body.6639, label %for.end.6642

for.body.6639:                                    ; preds = %cond.end.6636
  br label %for.inc.6640

for.inc.6640:                                     ; preds = %for.body.6639
  %3570 = load i8*, i8** %d, align 8
  %incdec.ptr6641 = getelementptr inbounds i8, i8* %3570, i32 1
  store i8* %incdec.ptr6641, i8** %d, align 8
  br label %for.cond.6580

for.end.6642:                                     ; preds = %cond.end.6636
  %3571 = load i8*, i8** %d, align 8
  store i8* %3571, i8** %t6579, align 8
  br label %for.cond.6643

for.cond.6643:                                    ; preds = %for.inc.6671, %for.end.6642
  %3572 = load i8*, i8** %t6579, align 8
  %3573 = load i8, i8* %3572, align 1
  %conv6644 = sext i8 %3573 to i32
  %tobool6645 = icmp ne i32 %conv6644, 0
  br i1 %tobool6645, label %land.rhs.6646, label %land.end.6668

land.rhs.6646:                                    ; preds = %for.cond.6643
  %3574 = load i8*, i8** %t6579, align 8
  %3575 = load i8, i8* %3574, align 1
  %conv6647 = sext i8 %3575 to i32
  %cmp6648 = icmp eq i32 %conv6647, 32
  br i1 %cmp6648, label %lor.end.6666, label %lor.lhs.false.6650

lor.lhs.false.6650:                               ; preds = %land.rhs.6646
  %3576 = load i8*, i8** %t6579, align 8
  %3577 = load i8, i8* %3576, align 1
  %conv6651 = sext i8 %3577 to i32
  %cmp6652 = icmp eq i32 %conv6651, 9
  br i1 %cmp6652, label %lor.end.6666, label %lor.lhs.false.6654

lor.lhs.false.6654:                               ; preds = %lor.lhs.false.6650
  %3578 = load i8*, i8** %t6579, align 8
  %3579 = load i8, i8* %3578, align 1
  %conv6655 = sext i8 %3579 to i32
  %cmp6656 = icmp eq i32 %conv6655, 10
  br i1 %cmp6656, label %lor.end.6666, label %lor.lhs.false.6658

lor.lhs.false.6658:                               ; preds = %lor.lhs.false.6654
  %3580 = load i8*, i8** %t6579, align 8
  %3581 = load i8, i8* %3580, align 1
  %conv6659 = sext i8 %3581 to i32
  %cmp6660 = icmp eq i32 %conv6659, 13
  br i1 %cmp6660, label %lor.end.6666, label %lor.rhs.6662

lor.rhs.6662:                                     ; preds = %lor.lhs.false.6658
  %3582 = load i8*, i8** %t6579, align 8
  %3583 = load i8, i8* %3582, align 1
  %conv6663 = sext i8 %3583 to i32
  %cmp6664 = icmp eq i32 %conv6663, 12
  br label %lor.end.6666

lor.end.6666:                                     ; preds = %lor.rhs.6662, %lor.lhs.false.6658, %lor.lhs.false.6654, %lor.lhs.false.6650, %land.rhs.6646
  %3584 = phi i1 [ true, %lor.lhs.false.6658 ], [ true, %lor.lhs.false.6654 ], [ true, %lor.lhs.false.6650 ], [ true, %land.rhs.6646 ], [ %cmp6664, %lor.rhs.6662 ]
  br label %land.end.6668

land.end.6668:                                    ; preds = %lor.end.6666, %for.cond.6643
  %3585 = phi i1 [ false, %for.cond.6643 ], [ %3584, %lor.end.6666 ]
  br i1 %3585, label %for.body.6670, label %for.end.6673

for.body.6670:                                    ; preds = %land.end.6668
  br label %for.inc.6671

for.inc.6671:                                     ; preds = %for.body.6670
  %3586 = load i8*, i8** %t6579, align 8
  %incdec.ptr6672 = getelementptr inbounds i8, i8* %3586, i32 1
  store i8* %incdec.ptr6672, i8** %t6579, align 8
  br label %for.cond.6643

for.end.6673:                                     ; preds = %land.end.6668
  %3587 = load i8*, i8** %t6579, align 8
  %3588 = load i8, i8* %3587, align 1
  %conv6674 = sext i8 %3588 to i32
  %tobool6675 = icmp ne i32 %conv6674, 0
  br i1 %tobool6675, label %land.lhs.true.6676, label %if.end.6717

land.lhs.true.6676:                               ; preds = %for.end.6673
  %3589 = load i8*, i8** %t6579, align 8
  %3590 = load i8, i8* %3589, align 1
  %conv6677 = sext i8 %3590 to i32
  %call6678 = call i8* @strchr(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.99, i32 0, i32 0), i32 %conv6677)
  %tobool6679 = icmp ne i8* %call6678, null
  br i1 %tobool6679, label %land.lhs.true.6680, label %if.end.6717

land.lhs.true.6680:                               ; preds = %land.lhs.true.6676
  %3591 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings6681 = getelementptr inbounds %struct.cop, %struct.cop* %3591, i32 0, i32 14
  %3592 = load %struct.sv*, %struct.sv** %cop_warnings6681, align 8
  %cmp6682 = icmp eq %struct.sv* %3592, null
  br i1 %cmp6682, label %land.lhs.true.6700, label %lor.lhs.false.6684

lor.lhs.false.6684:                               ; preds = %land.lhs.true.6680
  %3593 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings6685 = getelementptr inbounds %struct.cop, %struct.cop* %3593, i32 0, i32 14
  %3594 = load %struct.sv*, %struct.sv** %cop_warnings6685, align 8
  %cmp6686 = icmp eq %struct.sv* %3594, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 1)
  br i1 %cmp6686, label %land.lhs.true.6700, label %lor.lhs.false.6688

lor.lhs.false.6688:                               ; preds = %lor.lhs.false.6684
  %3595 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings6689 = getelementptr inbounds %struct.cop, %struct.cop* %3595, i32 0, i32 14
  %3596 = load %struct.sv*, %struct.sv** %cop_warnings6689, align 8
  %cmp6690 = icmp ne %struct.sv* %3596, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 2)
  br i1 %cmp6690, label %land.lhs.true.6692, label %if.end.6717

land.lhs.true.6692:                               ; preds = %lor.lhs.false.6688
  %3597 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings6693 = getelementptr inbounds %struct.cop, %struct.cop* %3597, i32 0, i32 14
  %3598 = load %struct.sv*, %struct.sv** %cop_warnings6693, align 8
  %sv_any6694 = getelementptr inbounds %struct.sv, %struct.sv* %3598, i32 0, i32 0
  %3599 = load i8*, i8** %sv_any6694, align 8
  %3600 = bitcast i8* %3599 to %struct.xpv*
  %xpv_pv6695 = getelementptr inbounds %struct.xpv, %struct.xpv* %3600, i32 0, i32 0
  %3601 = load i8*, i8** %xpv_pv6695, align 8
  %arrayidx6696 = getelementptr inbounds i8, i8* %3601, i64 8
  %3602 = load i8, i8* %arrayidx6696, align 1
  %conv6697 = sext i8 %3602 to i32
  %and6698 = and i32 %conv6697, 4
  %tobool6699 = icmp ne i32 %and6698, 0
  br i1 %tobool6699, label %land.lhs.true.6700, label %if.end.6717

land.lhs.true.6700:                               ; preds = %land.lhs.true.6692, %lor.lhs.false.6684, %land.lhs.true.6680
  %3603 = load i8*, i8** %t6579, align 8
  %arrayidx6701 = getelementptr inbounds i8, i8* %3603, i64 0
  %3604 = load i8, i8* %arrayidx6701, align 1
  %conv6702 = sext i8 %3604 to i32
  %cmp6703 = icmp eq i32 %conv6702, 61
  br i1 %cmp6703, label %land.lhs.true.6705, label %if.then.6710

land.lhs.true.6705:                               ; preds = %land.lhs.true.6700
  %3605 = load i8*, i8** %t6579, align 8
  %arrayidx6706 = getelementptr inbounds i8, i8* %3605, i64 1
  %3606 = load i8, i8* %arrayidx6706, align 1
  %conv6707 = sext i8 %3606 to i32
  %cmp6708 = icmp eq i32 %conv6707, 62
  br i1 %cmp6708, label %if.end.6717, label %if.then.6710

if.then.6710:                                     ; preds = %land.lhs.true.6705, %land.lhs.true.6700
  %3607 = load i8*, i8** %d, align 8
  %3608 = load i8*, i8** %s, align 8
  %sub.ptr.lhs.cast6711 = ptrtoint i8* %3607 to i64
  %sub.ptr.rhs.cast6712 = ptrtoint i8* %3608 to i64
  %sub.ptr.sub6713 = sub i64 %sub.ptr.lhs.cast6711, %sub.ptr.rhs.cast6712
  %3609 = load i8*, i8** %s, align 8
  %3610 = load i8*, i8** %d, align 8
  %3611 = load i8*, i8** %s, align 8
  %sub.ptr.lhs.cast6714 = ptrtoint i8* %3610 to i64
  %sub.ptr.rhs.cast6715 = ptrtoint i8* %3611 to i64
  %sub.ptr.sub6716 = sub i64 %sub.ptr.lhs.cast6714, %sub.ptr.rhs.cast6715
  %3612 = load i8*, i8** %s, align 8
  call void (i32, i8*, ...) @Perl_warner(i32 33, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.100, i32 0, i32 0), i64 %sub.ptr.sub6713, i8* %3609, i64 %sub.ptr.sub6716, i8* %3612)
  br label %if.end.6717

if.end.6717:                                      ; preds = %if.then.6710, %land.lhs.true.6705, %land.lhs.true.6692, %lor.lhs.false.6688, %land.lhs.true.6676, %for.end.6673
  br label %if.end.6718

if.end.6718:                                      ; preds = %if.end.6717, %land.lhs.true.6574, %cond.false.6570, %lor.lhs.false.6566
  %3613 = load i8*, i8** %s, align 8
  %call6719 = call i32 @S_lop(i32 191, i32 1, i8* %3613)
  store i32 %call6719, i32* %retval
  br label %return

sw.bb.6720:                                       ; preds = %reserved_word
  store i32 160, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %3614 = load i8*, i8** %s, align 8
  store i8* %3614, i8** @PL_bufptr, align 8
  store i32 300, i32* %retval
  br label %return

sw.bb.6721:                                       ; preds = %reserved_word
  store i32 117, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %3615 = load i8*, i8** %s, align 8
  store i8* %3615, i8** @PL_bufptr, align 8
  %3616 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %3616, i8** @PL_last_uni, align 8
  store i16 117, i16* @PL_last_lop_op, align 2
  %3617 = load i8*, i8** %s, align 8
  %3618 = load i8, i8* %3617, align 1
  %conv6722 = sext i8 %3618 to i32
  %cmp6723 = icmp eq i32 %conv6722, 40
  br i1 %cmp6723, label %lor.end.6730, label %lor.rhs.6725

lor.rhs.6725:                                     ; preds = %sw.bb.6721
  %3619 = load i8*, i8** %s, align 8
  %call6726 = call i8* @S_skipspace(i8* %3619)
  store i8* %call6726, i8** %s, align 8
  %3620 = load i8*, i8** %s, align 8
  %3621 = load i8, i8* %3620, align 1
  %conv6727 = sext i8 %3621 to i32
  %cmp6728 = icmp eq i32 %conv6727, 40
  br label %lor.end.6730

lor.end.6730:                                     ; preds = %lor.rhs.6725, %sw.bb.6721
  %3622 = phi i1 [ true, %sw.bb.6721 ], [ %cmp6728, %lor.rhs.6725 ]
  %cond6732 = select i1 %3622, i32 283, i32 285
  store i32 %cond6732, i32* %retval
  br label %return

sw.bb.6733:                                       ; preds = %reserved_word
  store i32 108, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %3623 = load i8*, i8** %s, align 8
  store i8* %3623, i8** @PL_bufptr, align 8
  %3624 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %3624, i8** @PL_last_uni, align 8
  store i16 108, i16* @PL_last_lop_op, align 2
  %3625 = load i8*, i8** %s, align 8
  %3626 = load i8, i8* %3625, align 1
  %conv6734 = sext i8 %3626 to i32
  %cmp6735 = icmp eq i32 %conv6734, 40
  br i1 %cmp6735, label %lor.end.6742, label %lor.rhs.6737

lor.rhs.6737:                                     ; preds = %sw.bb.6733
  %3627 = load i8*, i8** %s, align 8
  %call6738 = call i8* @S_skipspace(i8* %3627)
  store i8* %call6738, i8** %s, align 8
  %3628 = load i8*, i8** %s, align 8
  %3629 = load i8, i8* %3628, align 1
  %conv6739 = sext i8 %3629 to i32
  %cmp6740 = icmp eq i32 %conv6739, 40
  br label %lor.end.6742

lor.end.6742:                                     ; preds = %lor.rhs.6737, %sw.bb.6733
  %3630 = phi i1 [ true, %sw.bb.6733 ], [ %cmp6740, %lor.rhs.6737 ]
  %cond6744 = select i1 %3630, i32 283, i32 285
  store i32 %cond6744, i32* %retval
  br label %return

sw.bb.6745:                                       ; preds = %reserved_word
  %3631 = load i8*, i8** %s, align 8
  %call6746 = call i32 @S_lop(i32 275, i32 1, i8* %3631)
  store i32 %call6746, i32* %retval
  br label %return

sw.bb.6747:                                       ; preds = %reserved_word
  %3632 = load i8*, i8** %s, align 8
  call void @S_checkcomma(i8* %3632, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.101, i32 0, i32 0))
  %3633 = load i8*, i8** %s, align 8
  %call6748 = call i32 @S_lop(i32 209, i32 2, i8* %3633)
  store i32 %call6748, i32* %retval
  br label %return

sw.bb.6749:                                       ; preds = %reserved_word
  %3634 = load i8*, i8** %s, align 8
  call void @S_checkcomma(i8* %3634, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.101, i32 0, i32 0))
  %3635 = load i8*, i8** %s, align 8
  %call6750 = call i32 @S_lop(i32 208, i32 2, i8* %3635)
  store i32 %call6750, i32* %retval
  br label %return

sw.bb.6751:                                       ; preds = %reserved_word
  store i32 19, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %3636 = load i8*, i8** %s, align 8
  store i8* %3636, i8** @PL_bufptr, align 8
  %3637 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %3637, i8** @PL_last_uni, align 8
  store i16 19, i16* @PL_last_lop_op, align 2
  %3638 = load i8*, i8** %s, align 8
  %3639 = load i8, i8* %3638, align 1
  %conv6752 = sext i8 %3639 to i32
  %cmp6753 = icmp eq i32 %conv6752, 40
  br i1 %cmp6753, label %lor.end.6760, label %lor.rhs.6755

lor.rhs.6755:                                     ; preds = %sw.bb.6751
  %3640 = load i8*, i8** %s, align 8
  %call6756 = call i8* @S_skipspace(i8* %3640)
  store i8* %call6756, i8** %s, align 8
  %3641 = load i8*, i8** %s, align 8
  %3642 = load i8, i8* %3641, align 1
  %conv6757 = sext i8 %3642 to i32
  %cmp6758 = icmp eq i32 %conv6757, 40
  br label %lor.end.6760

lor.end.6760:                                     ; preds = %lor.rhs.6755, %sw.bb.6751
  %3643 = phi i1 [ true, %sw.bb.6751 ], [ %cmp6758, %lor.rhs.6755 ]
  %cond6762 = select i1 %3643, i32 283, i32 285
  store i32 %cond6762, i32* %retval
  br label %return

sw.bb.6763:                                       ; preds = %reserved_word
  %3644 = load i8*, i8** %s, align 8
  %call6764 = call i32 @S_lop(i32 146, i32 1, i8* %3644)
  store i32 %call6764, i32* %retval
  br label %return

sw.bb.6765:                                       ; preds = %reserved_word
  store i32 147, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %3645 = load i8*, i8** %s, align 8
  store i8* %3645, i8** @PL_bufptr, align 8
  %3646 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %3646, i8** @PL_last_uni, align 8
  store i16 147, i16* @PL_last_lop_op, align 2
  %3647 = load i8*, i8** %s, align 8
  %3648 = load i8, i8* %3647, align 1
  %conv6766 = sext i8 %3648 to i32
  %cmp6767 = icmp eq i32 %conv6766, 40
  br i1 %cmp6767, label %lor.end.6774, label %lor.rhs.6769

lor.rhs.6769:                                     ; preds = %sw.bb.6765
  %3649 = load i8*, i8** %s, align 8
  %call6770 = call i8* @S_skipspace(i8* %3649)
  store i8* %call6770, i8** %s, align 8
  %3650 = load i8*, i8** %s, align 8
  %3651 = load i8, i8* %3650, align 1
  %conv6771 = sext i8 %3651 to i32
  %cmp6772 = icmp eq i32 %conv6771, 40
  br label %lor.end.6774

lor.end.6774:                                     ; preds = %lor.rhs.6769, %sw.bb.6765
  %3652 = phi i1 [ true, %sw.bb.6765 ], [ %cmp6772, %lor.rhs.6769 ]
  %cond6776 = select i1 %3652, i32 283, i32 285
  store i32 %cond6776, i32* %retval
  br label %return

sw.bb.6777:                                       ; preds = %reserved_word
  store i32 45, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %3653 = load i8*, i8** %s, align 8
  store i8* %3653, i8** @PL_bufptr, align 8
  %3654 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %3654, i8** @PL_last_uni, align 8
  store i16 45, i16* @PL_last_lop_op, align 2
  %3655 = load i8*, i8** %s, align 8
  %3656 = load i8, i8* %3655, align 1
  %conv6778 = sext i8 %3656 to i32
  %cmp6779 = icmp eq i32 %conv6778, 40
  br i1 %cmp6779, label %lor.end.6786, label %lor.rhs.6781

lor.rhs.6781:                                     ; preds = %sw.bb.6777
  %3657 = load i8*, i8** %s, align 8
  %call6782 = call i8* @S_skipspace(i8* %3657)
  store i8* %call6782, i8** %s, align 8
  %3658 = load i8*, i8** %s, align 8
  %3659 = load i8, i8* %3658, align 1
  %conv6783 = sext i8 %3659 to i32
  %cmp6784 = icmp eq i32 %conv6783, 40
  br label %lor.end.6786

lor.end.6786:                                     ; preds = %lor.rhs.6781, %sw.bb.6777
  %3660 = phi i1 [ true, %sw.bb.6777 ], [ %cmp6784, %lor.rhs.6781 ]
  %cond6788 = select i1 %3660, i32 283, i32 285
  store i32 %cond6788, i32* %retval
  br label %return

sw.bb.6789:                                       ; preds = %reserved_word
  %3661 = load i8*, i8** %s, align 8
  %call6790 = call i32 @S_lop(i32 138, i32 1, i8* %3661)
  store i32 %call6790, i32* %retval
  br label %return

sw.bb.6791:                                       ; preds = %reserved_word
  %3662 = load i8*, i8** %s, align 8
  %call6792 = call i8* @S_force_word(i8* %3662, i32 257, i32 0, i32 1, i32 0)
  store i8* %call6792, i8** %s, align 8
  store i32 1, i32* @PL_expect, align 4
  %3663 = load i8*, i8** %s, align 8
  store i8* %3663, i8** @PL_bufptr, align 8
  store i32 270, i32* %retval
  br label %return

sw.bb.6793:                                       ; preds = %reserved_word
  %3664 = load i8*, i8** %s, align 8
  %call6794 = call i32 @S_lop(i32 193, i32 1, i8* %3664)
  store i32 %call6794, i32* %retval
  br label %return

sw.bb.6795:                                       ; preds = %reserved_word
  %3665 = load i8*, i8** %s, align 8
  %call6796 = call i8* @S_scan_str(i8* %3665, i32 0, i32 0)
  store i8* %call6796, i8** %s, align 8
  %3666 = load i8*, i8** %s, align 8
  %tobool6797 = icmp ne i8* %3666, null
  br i1 %tobool6797, label %if.end.6799, label %if.then.6798

if.then.6798:                                     ; preds = %sw.bb.6795
  call void @S_missingterm(i8* null)
  br label %if.end.6799

if.end.6799:                                      ; preds = %if.then.6798, %sw.bb.6795
  store i32 5, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  %3667 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line6800 = getelementptr inbounds %struct.cop, %struct.cop* %3667, i32 0, i32 13
  %3668 = load i32, i32* %cop_line6800, align 4
  %3669 = load i32, i32* @PL_copline, align 4
  %cmp6801 = icmp ult i32 %3668, %3669
  br i1 %cmp6801, label %cond.true.6803, label %cond.false.6805

cond.true.6803:                                   ; preds = %if.end.6799
  %3670 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line6804 = getelementptr inbounds %struct.cop, %struct.cop* %3670, i32 0, i32 13
  %3671 = load i32, i32* %cop_line6804, align 4
  br label %cond.end.6806

cond.false.6805:                                  ; preds = %if.end.6799
  %3672 = load i32, i32* @PL_copline, align 4
  br label %cond.end.6806

cond.end.6806:                                    ; preds = %cond.false.6805, %cond.true.6803
  %cond6807 = phi i32 [ %3671, %cond.true.6803 ], [ %3672, %cond.false.6805 ]
  store i32 %cond6807, i32* @PL_copline, align 4
  store i32 0, i32* @PL_expect, align 4
  %3673 = load i8*, i8** %s, align 8
  store i8* %3673, i8** @PL_bufptr, align 8
  %call6808 = call i32 @S_sublex_start()
  store i32 %call6808, i32* %retval
  br label %return

sw.bb.6809:                                       ; preds = %reserved_word
  store i32 124, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %3674 = load i8*, i8** %s, align 8
  store i8* %3674, i8** @PL_bufptr, align 8
  %3675 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %3675, i8** @PL_last_uni, align 8
  store i16 124, i16* @PL_last_lop_op, align 2
  %3676 = load i8*, i8** %s, align 8
  %3677 = load i8, i8* %3676, align 1
  %conv6810 = sext i8 %3677 to i32
  %cmp6811 = icmp eq i32 %conv6810, 40
  br i1 %cmp6811, label %lor.end.6818, label %lor.rhs.6813

lor.rhs.6813:                                     ; preds = %sw.bb.6809
  %3678 = load i8*, i8** %s, align 8
  %call6814 = call i8* @S_skipspace(i8* %3678)
  store i8* %call6814, i8** %s, align 8
  %3679 = load i8*, i8** %s, align 8
  %3680 = load i8, i8* %3679, align 1
  %conv6815 = sext i8 %3680 to i32
  %cmp6816 = icmp eq i32 %conv6815, 40
  br label %lor.end.6818

lor.end.6818:                                     ; preds = %lor.rhs.6813, %sw.bb.6809
  %3681 = phi i1 [ true, %sw.bb.6809 ], [ %cmp6816, %lor.rhs.6813 ]
  %cond6820 = select i1 %3681, i32 283, i32 285
  store i32 %cond6820, i32* %retval
  br label %return

sw.bb.6821:                                       ; preds = %reserved_word
  %3682 = load i8*, i8** %s, align 8
  %call6822 = call i8* @S_scan_str(i8* %3682, i32 0, i32 0)
  store i8* %call6822, i8** %s, align 8
  %3683 = load i8*, i8** %s, align 8
  %tobool6823 = icmp ne i8* %3683, null
  br i1 %tobool6823, label %if.end.6825, label %if.then.6824

if.then.6824:                                     ; preds = %sw.bb.6821
  call void @S_missingterm(i8* null)
  br label %if.end.6825

if.end.6825:                                      ; preds = %if.then.6824, %sw.bb.6821
  call void @S_force_next(i32 41)
  %3684 = load %struct.sv*, %struct.sv** @PL_lex_stuff, align 8
  %sv_any6826 = getelementptr inbounds %struct.sv, %struct.sv* %3684, i32 0, i32 0
  %3685 = load i8*, i8** %sv_any6826, align 8
  %3686 = bitcast i8* %3685 to %struct.xpv*
  %xpv_cur6827 = getelementptr inbounds %struct.xpv, %struct.xpv* %3686, i32 0, i32 1
  %3687 = load i64, i64* %xpv_cur6827, align 8
  %tobool6828 = icmp ne i64 %3687, 0
  br i1 %tobool6828, label %if.then.6829, label %if.end.7012

if.then.6829:                                     ; preds = %if.end.6825
  store %struct.op* null, %struct.op** %words, align 8
  store i32 0, i32* %warned, align 4
  %3688 = load %struct.sv*, %struct.sv** @PL_lex_stuff, align 8
  %sv_flags6832 = getelementptr inbounds %struct.sv, %struct.sv* %3688, i32 0, i32 2
  %3689 = load i32, i32* %sv_flags6832, align 4
  %and6833 = and i32 %3689, 10223616
  %cmp6834 = icmp eq i32 %and6833, 262144
  br i1 %cmp6834, label %cond.true.6836, label %cond.false.6841

cond.true.6836:                                   ; preds = %if.then.6829
  %3690 = load %struct.sv*, %struct.sv** @PL_lex_stuff, align 8
  %sv_any6837 = getelementptr inbounds %struct.sv, %struct.sv* %3690, i32 0, i32 0
  %3691 = load i8*, i8** %sv_any6837, align 8
  %3692 = bitcast i8* %3691 to %struct.xpv*
  %xpv_cur6838 = getelementptr inbounds %struct.xpv, %struct.xpv* %3692, i32 0, i32 1
  %3693 = load i64, i64* %xpv_cur6838, align 8
  store i64 %3693, i64* %len, align 8
  %3694 = load %struct.sv*, %struct.sv** @PL_lex_stuff, align 8
  %sv_any6839 = getelementptr inbounds %struct.sv, %struct.sv* %3694, i32 0, i32 0
  %3695 = load i8*, i8** %sv_any6839, align 8
  %3696 = bitcast i8* %3695 to %struct.xpv*
  %xpv_pv6840 = getelementptr inbounds %struct.xpv, %struct.xpv* %3696, i32 0, i32 0
  %3697 = load i8*, i8** %xpv_pv6840, align 8
  br label %cond.end.6843

cond.false.6841:                                  ; preds = %if.then.6829
  %3698 = load %struct.sv*, %struct.sv** @PL_lex_stuff, align 8
  %call6842 = call i8* @Perl_sv_pvn_force_flags(%struct.sv* %3698, i64* %len, i32 2)
  br label %cond.end.6843

cond.end.6843:                                    ; preds = %cond.false.6841, %cond.true.6836
  %cond6844 = phi i8* [ %3697, %cond.true.6836 ], [ %call6842, %cond.false.6841 ]
  store i8* %cond6844, i8** %d, align 8
  br label %while.cond.6845

while.cond.6845:                                  ; preds = %if.end.7004, %cond.end.6843
  %3699 = load i64, i64* %len, align 8
  %tobool6846 = icmp ne i64 %3699, 0
  br i1 %tobool6846, label %while.body.6847, label %while.end.7005

while.body.6847:                                  ; preds = %while.cond.6845
  br label %for.cond.6850

for.cond.6850:                                    ; preds = %for.inc.6875, %while.body.6847
  %3700 = load i8*, i8** %d, align 8
  %3701 = load i8, i8* %3700, align 1
  %conv6851 = sext i8 %3701 to i32
  %cmp6852 = icmp eq i32 %conv6851, 32
  br i1 %cmp6852, label %land.rhs.6870, label %lor.lhs.false.6854

lor.lhs.false.6854:                               ; preds = %for.cond.6850
  %3702 = load i8*, i8** %d, align 8
  %3703 = load i8, i8* %3702, align 1
  %conv6855 = sext i8 %3703 to i32
  %cmp6856 = icmp eq i32 %conv6855, 9
  br i1 %cmp6856, label %land.rhs.6870, label %lor.lhs.false.6858

lor.lhs.false.6858:                               ; preds = %lor.lhs.false.6854
  %3704 = load i8*, i8** %d, align 8
  %3705 = load i8, i8* %3704, align 1
  %conv6859 = sext i8 %3705 to i32
  %cmp6860 = icmp eq i32 %conv6859, 10
  br i1 %cmp6860, label %land.rhs.6870, label %lor.lhs.false.6862

lor.lhs.false.6862:                               ; preds = %lor.lhs.false.6858
  %3706 = load i8*, i8** %d, align 8
  %3707 = load i8, i8* %3706, align 1
  %conv6863 = sext i8 %3707 to i32
  %cmp6864 = icmp eq i32 %conv6863, 13
  br i1 %cmp6864, label %land.rhs.6870, label %lor.lhs.false.6866

lor.lhs.false.6866:                               ; preds = %lor.lhs.false.6862
  %3708 = load i8*, i8** %d, align 8
  %3709 = load i8, i8* %3708, align 1
  %conv6867 = sext i8 %3709 to i32
  %cmp6868 = icmp eq i32 %conv6867, 12
  br i1 %cmp6868, label %land.rhs.6870, label %land.end.6872

land.rhs.6870:                                    ; preds = %lor.lhs.false.6866, %lor.lhs.false.6862, %lor.lhs.false.6858, %lor.lhs.false.6854, %for.cond.6850
  %3710 = load i64, i64* %len, align 8
  %tobool6871 = icmp ne i64 %3710, 0
  br label %land.end.6872

land.end.6872:                                    ; preds = %land.rhs.6870, %lor.lhs.false.6866
  %3711 = phi i1 [ false, %lor.lhs.false.6866 ], [ %tobool6871, %land.rhs.6870 ]
  br i1 %3711, label %for.body.6874, label %for.end.6878

for.body.6874:                                    ; preds = %land.end.6872
  br label %for.inc.6875

for.inc.6875:                                     ; preds = %for.body.6874
  %3712 = load i64, i64* %len, align 8
  %dec6876 = add i64 %3712, -1
  store i64 %dec6876, i64* %len, align 8
  %3713 = load i8*, i8** %d, align 8
  %incdec.ptr6877 = getelementptr inbounds i8, i8* %3713, i32 1
  store i8* %incdec.ptr6877, i8** %d, align 8
  br label %for.cond.6850

for.end.6878:                                     ; preds = %land.end.6872
  %3714 = load i64, i64* %len, align 8
  %tobool6879 = icmp ne i64 %3714, 0
  br i1 %tobool6879, label %if.then.6880, label %if.end.7004

if.then.6880:                                     ; preds = %for.end.6878
  %3715 = load i8*, i8** %d, align 8
  store i8* %3715, i8** %b, align 8
  %3716 = load i32, i32* %warned, align 4
  %tobool6882 = icmp ne i32 %3716, 0
  br i1 %tobool6882, label %if.else.6954, label %land.lhs.true.6883

land.lhs.true.6883:                               ; preds = %if.then.6880
  %3717 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings6884 = getelementptr inbounds %struct.cop, %struct.cop* %3717, i32 0, i32 14
  %3718 = load %struct.sv*, %struct.sv** %cop_warnings6884, align 8
  %cmp6885 = icmp ne %struct.sv* %3718, null
  br i1 %cmp6885, label %land.lhs.true.6887, label %lor.lhs.false.6903

land.lhs.true.6887:                               ; preds = %land.lhs.true.6883
  %3719 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings6888 = getelementptr inbounds %struct.cop, %struct.cop* %3719, i32 0, i32 14
  %3720 = load %struct.sv*, %struct.sv** %cop_warnings6888, align 8
  %cmp6889 = icmp ne %struct.sv* %3720, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 2)
  br i1 %cmp6889, label %land.lhs.true.6891, label %lor.lhs.false.6903

land.lhs.true.6891:                               ; preds = %land.lhs.true.6887
  %3721 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings6892 = getelementptr inbounds %struct.cop, %struct.cop* %3721, i32 0, i32 14
  %3722 = load %struct.sv*, %struct.sv** %cop_warnings6892, align 8
  %cmp6893 = icmp eq %struct.sv* %3722, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 1)
  br i1 %cmp6893, label %if.then.6911, label %lor.lhs.false.6895

lor.lhs.false.6895:                               ; preds = %land.lhs.true.6891
  %3723 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings6896 = getelementptr inbounds %struct.cop, %struct.cop* %3723, i32 0, i32 14
  %3724 = load %struct.sv*, %struct.sv** %cop_warnings6896, align 8
  %sv_any6897 = getelementptr inbounds %struct.sv, %struct.sv* %3724, i32 0, i32 0
  %3725 = load i8*, i8** %sv_any6897, align 8
  %3726 = bitcast i8* %3725 to %struct.xpv*
  %xpv_pv6898 = getelementptr inbounds %struct.xpv, %struct.xpv* %3726, i32 0, i32 0
  %3727 = load i8*, i8** %xpv_pv6898, align 8
  %arrayidx6899 = getelementptr inbounds i8, i8* %3727, i64 9
  %3728 = load i8, i8* %arrayidx6899, align 1
  %conv6900 = sext i8 %3728 to i32
  %and6901 = and i32 %conv6900, 1
  %tobool6902 = icmp ne i32 %and6901, 0
  br i1 %tobool6902, label %if.then.6911, label %lor.lhs.false.6903

lor.lhs.false.6903:                               ; preds = %lor.lhs.false.6895, %land.lhs.true.6887, %land.lhs.true.6883
  %3729 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings6904 = getelementptr inbounds %struct.cop, %struct.cop* %3729, i32 0, i32 14
  %3730 = load %struct.sv*, %struct.sv** %cop_warnings6904, align 8
  %cmp6905 = icmp eq %struct.sv* %3730, null
  br i1 %cmp6905, label %land.lhs.true.6907, label %if.else.6954

land.lhs.true.6907:                               ; preds = %lor.lhs.false.6903
  %3731 = load i8, i8* @PL_dowarn, align 1
  %conv6908 = zext i8 %3731 to i32
  %and6909 = and i32 %conv6908, 1
  %tobool6910 = icmp ne i32 %and6909, 0
  br i1 %tobool6910, label %if.then.6911, label %if.else.6954

if.then.6911:                                     ; preds = %land.lhs.true.6907, %lor.lhs.false.6895, %land.lhs.true.6891
  br label %for.cond.6912

for.cond.6912:                                    ; preds = %for.inc.6950, %if.then.6911
  %3732 = load i8*, i8** %d, align 8
  %3733 = load i8, i8* %3732, align 1
  %conv6913 = sext i8 %3733 to i32
  %cmp6914 = icmp eq i32 %conv6913, 32
  br i1 %cmp6914, label %land.end.6934, label %lor.lhs.false.6916

lor.lhs.false.6916:                               ; preds = %for.cond.6912
  %3734 = load i8*, i8** %d, align 8
  %3735 = load i8, i8* %3734, align 1
  %conv6917 = sext i8 %3735 to i32
  %cmp6918 = icmp eq i32 %conv6917, 9
  br i1 %cmp6918, label %land.end.6934, label %lor.lhs.false.6920

lor.lhs.false.6920:                               ; preds = %lor.lhs.false.6916
  %3736 = load i8*, i8** %d, align 8
  %3737 = load i8, i8* %3736, align 1
  %conv6921 = sext i8 %3737 to i32
  %cmp6922 = icmp eq i32 %conv6921, 10
  br i1 %cmp6922, label %land.end.6934, label %lor.lhs.false.6924

lor.lhs.false.6924:                               ; preds = %lor.lhs.false.6920
  %3738 = load i8*, i8** %d, align 8
  %3739 = load i8, i8* %3738, align 1
  %conv6925 = sext i8 %3739 to i32
  %cmp6926 = icmp eq i32 %conv6925, 13
  br i1 %cmp6926, label %land.end.6934, label %lor.lhs.false.6928

lor.lhs.false.6928:                               ; preds = %lor.lhs.false.6924
  %3740 = load i8*, i8** %d, align 8
  %3741 = load i8, i8* %3740, align 1
  %conv6929 = sext i8 %3741 to i32
  %cmp6930 = icmp eq i32 %conv6929, 12
  br i1 %cmp6930, label %land.end.6934, label %land.rhs.6932

land.rhs.6932:                                    ; preds = %lor.lhs.false.6928
  %3742 = load i64, i64* %len, align 8
  %tobool6933 = icmp ne i64 %3742, 0
  br label %land.end.6934

land.end.6934:                                    ; preds = %land.rhs.6932, %lor.lhs.false.6928, %lor.lhs.false.6924, %lor.lhs.false.6920, %lor.lhs.false.6916, %for.cond.6912
  %3743 = phi i1 [ false, %lor.lhs.false.6928 ], [ false, %lor.lhs.false.6924 ], [ false, %lor.lhs.false.6920 ], [ false, %lor.lhs.false.6916 ], [ false, %for.cond.6912 ], [ %tobool6933, %land.rhs.6932 ]
  br i1 %3743, label %for.body.6936, label %for.end.6953

for.body.6936:                                    ; preds = %land.end.6934
  %3744 = load i8*, i8** %d, align 8
  %3745 = load i8, i8* %3744, align 1
  %conv6937 = sext i8 %3745 to i32
  %cmp6938 = icmp eq i32 %conv6937, 44
  br i1 %cmp6938, label %if.then.6940, label %if.else.6942

if.then.6940:                                     ; preds = %for.body.6936
  call void (i32, i8*, ...) @Perl_warner(i32 36, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.102, i32 0, i32 0))
  %3746 = load i32, i32* %warned, align 4
  %inc6941 = add nsw i32 %3746, 1
  store i32 %inc6941, i32* %warned, align 4
  br label %if.end.6949

if.else.6942:                                     ; preds = %for.body.6936
  %3747 = load i8*, i8** %d, align 8
  %3748 = load i8, i8* %3747, align 1
  %conv6943 = sext i8 %3748 to i32
  %cmp6944 = icmp eq i32 %conv6943, 35
  br i1 %cmp6944, label %if.then.6946, label %if.end.6948

if.then.6946:                                     ; preds = %if.else.6942
  call void (i32, i8*, ...) @Perl_warner(i32 36, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.103, i32 0, i32 0))
  %3749 = load i32, i32* %warned, align 4
  %inc6947 = add nsw i32 %3749, 1
  store i32 %inc6947, i32* %warned, align 4
  br label %if.end.6948

if.end.6948:                                      ; preds = %if.then.6946, %if.else.6942
  br label %if.end.6949

if.end.6949:                                      ; preds = %if.end.6948, %if.then.6940
  br label %for.inc.6950

for.inc.6950:                                     ; preds = %if.end.6949
  %3750 = load i64, i64* %len, align 8
  %dec6951 = add i64 %3750, -1
  store i64 %dec6951, i64* %len, align 8
  %3751 = load i8*, i8** %d, align 8
  %incdec.ptr6952 = getelementptr inbounds i8, i8* %3751, i32 1
  store i8* %incdec.ptr6952, i8** %d, align 8
  br label %for.cond.6912

for.end.6953:                                     ; preds = %land.end.6934
  br label %if.end.6984

if.else.6954:                                     ; preds = %land.lhs.true.6907, %lor.lhs.false.6903, %if.then.6880
  br label %for.cond.6955

for.cond.6955:                                    ; preds = %for.inc.6980, %if.else.6954
  %3752 = load i8*, i8** %d, align 8
  %3753 = load i8, i8* %3752, align 1
  %conv6956 = sext i8 %3753 to i32
  %cmp6957 = icmp eq i32 %conv6956, 32
  br i1 %cmp6957, label %land.end.6977, label %lor.lhs.false.6959

lor.lhs.false.6959:                               ; preds = %for.cond.6955
  %3754 = load i8*, i8** %d, align 8
  %3755 = load i8, i8* %3754, align 1
  %conv6960 = sext i8 %3755 to i32
  %cmp6961 = icmp eq i32 %conv6960, 9
  br i1 %cmp6961, label %land.end.6977, label %lor.lhs.false.6963

lor.lhs.false.6963:                               ; preds = %lor.lhs.false.6959
  %3756 = load i8*, i8** %d, align 8
  %3757 = load i8, i8* %3756, align 1
  %conv6964 = sext i8 %3757 to i32
  %cmp6965 = icmp eq i32 %conv6964, 10
  br i1 %cmp6965, label %land.end.6977, label %lor.lhs.false.6967

lor.lhs.false.6967:                               ; preds = %lor.lhs.false.6963
  %3758 = load i8*, i8** %d, align 8
  %3759 = load i8, i8* %3758, align 1
  %conv6968 = sext i8 %3759 to i32
  %cmp6969 = icmp eq i32 %conv6968, 13
  br i1 %cmp6969, label %land.end.6977, label %lor.lhs.false.6971

lor.lhs.false.6971:                               ; preds = %lor.lhs.false.6967
  %3760 = load i8*, i8** %d, align 8
  %3761 = load i8, i8* %3760, align 1
  %conv6972 = sext i8 %3761 to i32
  %cmp6973 = icmp eq i32 %conv6972, 12
  br i1 %cmp6973, label %land.end.6977, label %land.rhs.6975

land.rhs.6975:                                    ; preds = %lor.lhs.false.6971
  %3762 = load i64, i64* %len, align 8
  %tobool6976 = icmp ne i64 %3762, 0
  br label %land.end.6977

land.end.6977:                                    ; preds = %land.rhs.6975, %lor.lhs.false.6971, %lor.lhs.false.6967, %lor.lhs.false.6963, %lor.lhs.false.6959, %for.cond.6955
  %3763 = phi i1 [ false, %lor.lhs.false.6971 ], [ false, %lor.lhs.false.6967 ], [ false, %lor.lhs.false.6963 ], [ false, %lor.lhs.false.6959 ], [ false, %for.cond.6955 ], [ %tobool6976, %land.rhs.6975 ]
  br i1 %3763, label %for.body.6979, label %for.end.6983

for.body.6979:                                    ; preds = %land.end.6977
  br label %for.inc.6980

for.inc.6980:                                     ; preds = %for.body.6979
  %3764 = load i64, i64* %len, align 8
  %dec6981 = add i64 %3764, -1
  store i64 %dec6981, i64* %len, align 8
  %3765 = load i8*, i8** %d, align 8
  %incdec.ptr6982 = getelementptr inbounds i8, i8* %3765, i32 1
  store i8* %incdec.ptr6982, i8** %d, align 8
  br label %for.cond.6955

for.end.6983:                                     ; preds = %land.end.6977
  br label %if.end.6984

if.end.6984:                                      ; preds = %for.end.6983, %for.end.6953
  %3766 = load i8*, i8** %b, align 8
  %3767 = load i8*, i8** %d, align 8
  %3768 = load i8*, i8** %b, align 8
  %sub.ptr.lhs.cast6985 = ptrtoint i8* %3767 to i64
  %sub.ptr.rhs.cast6986 = ptrtoint i8* %3768 to i64
  %sub.ptr.sub6987 = sub i64 %sub.ptr.lhs.cast6985, %sub.ptr.rhs.cast6986
  %call6988 = call %struct.sv* @Perl_newSVpvn(i8* %3766, i64 %sub.ptr.sub6987)
  store %struct.sv* %call6988, %struct.sv** %sv6849, align 8
  %3769 = load %struct.sv*, %struct.sv** @PL_lex_stuff, align 8
  %sv_flags6989 = getelementptr inbounds %struct.sv, %struct.sv* %3769, i32 0, i32 2
  %3770 = load i32, i32* %sv_flags6989, align 4
  %and6990 = and i32 %3770, 536870912
  %tobool6991 = icmp ne i32 %and6990, 0
  br i1 %tobool6991, label %land.lhs.true.6992, label %if.end.7000

land.lhs.true.6992:                               ; preds = %if.end.6984
  %3771 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private6993 = getelementptr inbounds %struct.cop, %struct.cop* %3771, i32 0, i32 7
  %3772 = load i8, i8* %op_private6993, align 1
  %conv6994 = zext i8 %3772 to i32
  %and6995 = and i32 %conv6994, 8
  %tobool6996 = icmp ne i32 %and6995, 0
  br i1 %tobool6996, label %if.end.7000, label %if.then.6997

if.then.6997:                                     ; preds = %land.lhs.true.6992
  %3773 = load %struct.sv*, %struct.sv** %sv6849, align 8
  %sv_flags6998 = getelementptr inbounds %struct.sv, %struct.sv* %3773, i32 0, i32 2
  %3774 = load i32, i32* %sv_flags6998, align 4
  %or6999 = or i32 %3774, 536870912
  store i32 %or6999, i32* %sv_flags6998, align 4
  br label %if.end.7000

if.end.7000:                                      ; preds = %if.then.6997, %land.lhs.true.6992, %if.end.6984
  %3775 = load %struct.op*, %struct.op** %words, align 8
  %3776 = load %struct.sv*, %struct.sv** %sv6849, align 8
  %call7001 = call %struct.sv* @S_tokeq(%struct.sv* %3776)
  %call7002 = call %struct.op* @Perl_newSVOP(i32 5, i32 0, %struct.sv* %call7001)
  %call7003 = call %struct.op* @Perl_append_elem(i32 141, %struct.op* %3775, %struct.op* %call7002)
  store %struct.op* %call7003, %struct.op** %words, align 8
  br label %if.end.7004

if.end.7004:                                      ; preds = %if.end.7000, %for.end.6878
  br label %while.cond.6845

while.end.7005:                                   ; preds = %while.cond.6845
  %3777 = load %struct.op*, %struct.op** %words, align 8
  %tobool7006 = icmp ne %struct.op* %3777, null
  br i1 %tobool7006, label %if.then.7007, label %if.end.7011

if.then.7007:                                     ; preds = %while.end.7005
  %3778 = load %struct.op*, %struct.op** %words, align 8
  %3779 = load i32, i32* @PL_nexttoke, align 4
  %idxprom7008 = sext i32 %3779 to i64
  %arrayidx7009 = getelementptr inbounds [5 x %union.YYSTYPE], [5 x %union.YYSTYPE]* @PL_nextval, i32 0, i64 %idxprom7008
  %opval7010 = bitcast %union.YYSTYPE* %arrayidx7009 to %struct.op**
  store %struct.op* %3778, %struct.op** %opval7010, align 8
  call void @S_force_next(i32 260)
  br label %if.end.7011

if.end.7011:                                      ; preds = %if.then.7007, %while.end.7005
  br label %if.end.7012

if.end.7012:                                      ; preds = %if.end.7011, %if.end.6825
  %3780 = load %struct.sv*, %struct.sv** @PL_lex_stuff, align 8
  %tobool7013 = icmp ne %struct.sv* %3780, null
  br i1 %tobool7013, label %if.then.7014, label %if.end.7015

if.then.7014:                                     ; preds = %if.end.7012
  %3781 = load %struct.sv*, %struct.sv** @PL_lex_stuff, align 8
  call void @Perl_sv_free(%struct.sv* %3781)
  store %struct.sv* null, %struct.sv** @PL_lex_stuff, align 8
  br label %if.end.7015

if.end.7015:                                      ; preds = %if.then.7014, %if.end.7012
  store i32 1, i32* @PL_expect, align 4
  %3782 = load i8*, i8** %s, align 8
  store i8* %3782, i8** @PL_bufptr, align 8
  store i32 40, i32* %retval
  br label %return

sw.bb.7016:                                       ; preds = %reserved_word
  %3783 = load i8*, i8** %s, align 8
  %call7017 = call i8* @S_scan_str(i8* %3783, i32 0, i32 0)
  store i8* %call7017, i8** %s, align 8
  %3784 = load i8*, i8** %s, align 8
  %tobool7018 = icmp ne i8* %3784, null
  br i1 %tobool7018, label %if.end.7020, label %if.then.7019

if.then.7019:                                     ; preds = %sw.bb.7016
  call void @S_missingterm(i8* null)
  br label %if.end.7020

if.end.7020:                                      ; preds = %if.then.7019, %sw.bb.7016
  store i32 67, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  %3785 = load %struct.sv*, %struct.sv** @PL_lex_stuff, align 8
  %sv_any7021 = getelementptr inbounds %struct.sv, %struct.sv* %3785, i32 0, i32 0
  %3786 = load i8*, i8** %sv_any7021, align 8
  %3787 = bitcast i8* %3786 to %struct.xpviv*
  %xiv_iv7022 = getelementptr inbounds %struct.xpviv, %struct.xpviv* %3787, i32 0, i32 3
  %3788 = load i64, i64* %xiv_iv7022, align 8
  %cmp7023 = icmp eq i64 %3788, 39
  br i1 %cmp7023, label %if.then.7025, label %if.end.7028

if.then.7025:                                     ; preds = %if.end.7020
  %3789 = load %struct.sv*, %struct.sv** @PL_lex_stuff, align 8
  %sv_any7026 = getelementptr inbounds %struct.sv, %struct.sv* %3789, i32 0, i32 0
  %3790 = load i8*, i8** %sv_any7026, align 8
  %3791 = bitcast i8* %3790 to %struct.xpviv*
  %xiv_iv7027 = getelementptr inbounds %struct.xpviv, %struct.xpviv* %3791, i32 0, i32 3
  store i64 0, i64* %xiv_iv7027, align 8
  br label %if.end.7028

if.end.7028:                                      ; preds = %if.then.7025, %if.end.7020
  %3792 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line7029 = getelementptr inbounds %struct.cop, %struct.cop* %3792, i32 0, i32 13
  %3793 = load i32, i32* %cop_line7029, align 4
  %3794 = load i32, i32* @PL_copline, align 4
  %cmp7030 = icmp ult i32 %3793, %3794
  br i1 %cmp7030, label %cond.true.7032, label %cond.false.7034

cond.true.7032:                                   ; preds = %if.end.7028
  %3795 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line7033 = getelementptr inbounds %struct.cop, %struct.cop* %3795, i32 0, i32 13
  %3796 = load i32, i32* %cop_line7033, align 4
  br label %cond.end.7035

cond.false.7034:                                  ; preds = %if.end.7028
  %3797 = load i32, i32* @PL_copline, align 4
  br label %cond.end.7035

cond.end.7035:                                    ; preds = %cond.false.7034, %cond.true.7032
  %cond7036 = phi i32 [ %3796, %cond.true.7032 ], [ %3797, %cond.false.7034 ]
  store i32 %cond7036, i32* @PL_copline, align 4
  store i32 0, i32* @PL_expect, align 4
  %3798 = load i8*, i8** %s, align 8
  store i8* %3798, i8** @PL_bufptr, align 8
  %call7037 = call i32 @S_sublex_start()
  store i32 %call7037, i32* %retval
  br label %return

sw.bb.7038:                                       ; preds = %reserved_word
  %3799 = load i8*, i8** %s, align 8
  %call7039 = call i8* @S_scan_pat(i8* %3799, i32 32)
  store i8* %call7039, i8** %s, align 8
  %3800 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line7040 = getelementptr inbounds %struct.cop, %struct.cop* %3800, i32 0, i32 13
  %3801 = load i32, i32* %cop_line7040, align 4
  %3802 = load i32, i32* @PL_copline, align 4
  %cmp7041 = icmp ult i32 %3801, %3802
  br i1 %cmp7041, label %cond.true.7043, label %cond.false.7045

cond.true.7043:                                   ; preds = %sw.bb.7038
  %3803 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line7044 = getelementptr inbounds %struct.cop, %struct.cop* %3803, i32 0, i32 13
  %3804 = load i32, i32* %cop_line7044, align 4
  br label %cond.end.7046

cond.false.7045:                                  ; preds = %sw.bb.7038
  %3805 = load i32, i32* @PL_copline, align 4
  br label %cond.end.7046

cond.end.7046:                                    ; preds = %cond.false.7045, %cond.true.7043
  %cond7047 = phi i32 [ %3804, %cond.true.7043 ], [ %3805, %cond.false.7045 ]
  store i32 %cond7047, i32* @PL_copline, align 4
  store i32 0, i32* @PL_expect, align 4
  %3806 = load i8*, i8** %s, align 8
  store i8* %3806, i8** @PL_bufptr, align 8
  %call7048 = call i32 @S_sublex_start()
  store i32 %call7048, i32* %retval
  br label %return

sw.bb.7049:                                       ; preds = %reserved_word
  %3807 = load i8*, i8** %s, align 8
  %call7050 = call i8* @S_scan_str(i8* %3807, i32 0, i32 0)
  store i8* %call7050, i8** %s, align 8
  %3808 = load i8*, i8** %s, align 8
  %tobool7051 = icmp ne i8* %3808, null
  br i1 %tobool7051, label %if.end.7053, label %if.then.7052

if.then.7052:                                     ; preds = %sw.bb.7049
  call void @S_missingterm(i8* null)
  br label %if.end.7053

if.end.7053:                                      ; preds = %if.then.7052, %sw.bb.7049
  store i32 24, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  call void @S_set_csh()
  %3809 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line7054 = getelementptr inbounds %struct.cop, %struct.cop* %3809, i32 0, i32 13
  %3810 = load i32, i32* %cop_line7054, align 4
  %3811 = load i32, i32* @PL_copline, align 4
  %cmp7055 = icmp ult i32 %3810, %3811
  br i1 %cmp7055, label %cond.true.7057, label %cond.false.7059

cond.true.7057:                                   ; preds = %if.end.7053
  %3812 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line7058 = getelementptr inbounds %struct.cop, %struct.cop* %3812, i32 0, i32 13
  %3813 = load i32, i32* %cop_line7058, align 4
  br label %cond.end.7060

cond.false.7059:                                  ; preds = %if.end.7053
  %3814 = load i32, i32* @PL_copline, align 4
  br label %cond.end.7060

cond.end.7060:                                    ; preds = %cond.false.7059, %cond.true.7057
  %cond7061 = phi i32 [ %3813, %cond.true.7057 ], [ %3814, %cond.false.7059 ]
  store i32 %cond7061, i32* @PL_copline, align 4
  store i32 0, i32* @PL_expect, align 4
  %3815 = load i8*, i8** %s, align 8
  store i8* %3815, i8** @PL_bufptr, align 8
  %call7062 = call i32 @S_sublex_start()
  store i32 %call7062, i32* %retval
  br label %return

sw.bb.7063:                                       ; preds = %reserved_word
  store i32 184, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %3816 = load i8*, i8** %s, align 8
  store i8* %3816, i8** @PL_bufptr, align 8
  store i32 286, i32* %retval
  br label %return

sw.bb.7064:                                       ; preds = %reserved_word
  %3817 = load i8*, i8** %s, align 8
  %call7065 = call i8* @S_skipspace(i8* %3817)
  store i8* %call7065, i8** %s, align 8
  %3818 = load i8*, i8** %s, align 8
  %3819 = load i8, i8* %3818, align 1
  %conv7066 = sext i8 %3819 to i32
  %cmp7067 = icmp sge i32 %conv7066, 48
  br i1 %cmp7067, label %land.lhs.true.7069, label %if.else.7075

land.lhs.true.7069:                               ; preds = %sw.bb.7064
  %3820 = load i8*, i8** %s, align 8
  %3821 = load i8, i8* %3820, align 1
  %conv7070 = sext i8 %3821 to i32
  %cmp7071 = icmp sle i32 %conv7070, 57
  br i1 %cmp7071, label %if.then.7073, label %if.else.7075

if.then.7073:                                     ; preds = %land.lhs.true.7069
  %3822 = load i8*, i8** %s, align 8
  %call7074 = call i8* @S_force_version(i8* %3822, i32 0)
  store i8* %call7074, i8** %s, align 8
  br label %if.end.7158

if.else.7075:                                     ; preds = %land.lhs.true.7069, %sw.bb.7064
  %3823 = load i8*, i8** %s, align 8
  %3824 = load i8, i8* %3823, align 1
  %conv7076 = sext i8 %3824 to i32
  %cmp7077 = icmp ne i32 %conv7076, 118
  br i1 %cmp7077, label %if.then.7094, label %lor.lhs.false.7079

lor.lhs.false.7079:                               ; preds = %if.else.7075
  %3825 = load i8*, i8** %s, align 8
  %arrayidx7080 = getelementptr inbounds i8, i8* %3825, i64 1
  %3826 = load i8, i8* %arrayidx7080, align 1
  %conv7081 = sext i8 %3826 to i32
  %cmp7082 = icmp sge i32 %conv7081, 48
  br i1 %cmp7082, label %land.lhs.true.7084, label %if.then.7094

land.lhs.true.7084:                               ; preds = %lor.lhs.false.7079
  %3827 = load i8*, i8** %s, align 8
  %arrayidx7085 = getelementptr inbounds i8, i8* %3827, i64 1
  %3828 = load i8, i8* %arrayidx7085, align 1
  %conv7086 = sext i8 %3828 to i32
  %cmp7087 = icmp sle i32 %conv7086, 57
  br i1 %cmp7087, label %lor.lhs.false.7089, label %if.then.7094

lor.lhs.false.7089:                               ; preds = %land.lhs.true.7084
  %3829 = load i8*, i8** %s, align 8
  %call7090 = call i8* @S_force_version(i8* %3829, i32 1)
  store i8* %call7090, i8** %s, align 8
  %3830 = load i8*, i8** %s, align 8
  %3831 = load i8, i8* %3830, align 1
  %conv7091 = sext i8 %3831 to i32
  %cmp7092 = icmp eq i32 %conv7091, 118
  br i1 %cmp7092, label %if.then.7094, label %if.end.7157

if.then.7094:                                     ; preds = %lor.lhs.false.7089, %land.lhs.true.7084, %lor.lhs.false.7079, %if.else.7075
  store i8 0, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i32 0), align 1
  %3832 = load i8*, i8** %s, align 8
  %call7095 = call i8* @S_force_word(i8* %3832, i32 257, i32 1, i32 1, i32 0)
  store i8* %call7095, i8** %s, align 8
  %3833 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private7096 = getelementptr inbounds %struct.cop, %struct.cop* %3833, i32 0, i32 7
  %3834 = load i8, i8* %op_private7096, align 1
  %conv7097 = zext i8 %3834 to i32
  %and7098 = and i32 %conv7097, 8
  %tobool7099 = icmp ne i32 %and7098, 0
  br i1 %tobool7099, label %cond.true.7118, label %lor.lhs.false.7100

lor.lhs.false.7100:                               ; preds = %if.then.7094
  %3835 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %tobool7101 = icmp ne %struct.sv* %3835, null
  br i1 %tobool7101, label %land.lhs.true.7102, label %lor.lhs.false.7111

land.lhs.true.7102:                               ; preds = %lor.lhs.false.7100
  %3836 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_flags7103 = getelementptr inbounds %struct.sv, %struct.sv* %3836, i32 0, i32 2
  %3837 = load i32, i32* %sv_flags7103, align 4
  %and7104 = and i32 %3837, 536870912
  %tobool7105 = icmp ne i32 %and7104, 0
  br i1 %tobool7105, label %land.lhs.true.7106, label %lor.lhs.false.7111

land.lhs.true.7106:                               ; preds = %land.lhs.true.7102
  %3838 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private7107 = getelementptr inbounds %struct.cop, %struct.cop* %3838, i32 0, i32 7
  %3839 = load i8, i8* %op_private7107, align 1
  %conv7108 = zext i8 %3839 to i32
  %and7109 = and i32 %conv7108, 8
  %tobool7110 = icmp ne i32 %and7109, 0
  br i1 %tobool7110, label %lor.lhs.false.7111, label %lor.lhs.false.7114

lor.lhs.false.7111:                               ; preds = %land.lhs.true.7106, %land.lhs.true.7102, %lor.lhs.false.7100
  %3840 = load i32, i32* @PL_hints, align 4
  %and7112 = and i32 %3840, 8388608
  %tobool7113 = icmp ne i32 %and7112, 0
  br i1 %tobool7113, label %lor.lhs.false.7114, label %cond.true.7118

lor.lhs.false.7114:                               ; preds = %lor.lhs.false.7111, %land.lhs.true.7106
  %3841 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i32 0), align 1
  %conv7115 = zext i8 %3841 to i32
  %cmp7116 = icmp slt i32 %conv7115, 192
  br i1 %cmp7116, label %cond.true.7118, label %cond.false.7138

cond.true.7118:                                   ; preds = %lor.lhs.false.7114, %lor.lhs.false.7111, %if.then.7094
  %3842 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i32 0), align 1
  %conv7119 = sext i8 %3842 to i32
  %cmp7120 = icmp sge i32 %conv7119, 65
  br i1 %cmp7120, label %land.lhs.true.7122, label %lor.lhs.false.7126

land.lhs.true.7122:                               ; preds = %cond.true.7118
  %3843 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i32 0), align 1
  %conv7123 = sext i8 %3843 to i32
  %cmp7124 = icmp sle i32 %conv7123, 90
  br i1 %cmp7124, label %if.then.7145, label %lor.lhs.false.7126

lor.lhs.false.7126:                               ; preds = %land.lhs.true.7122, %cond.true.7118
  %3844 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i32 0), align 1
  %conv7127 = sext i8 %3844 to i32
  %cmp7128 = icmp sge i32 %conv7127, 97
  br i1 %cmp7128, label %land.lhs.true.7130, label %lor.lhs.false.7134

land.lhs.true.7130:                               ; preds = %lor.lhs.false.7126
  %3845 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i32 0), align 1
  %conv7131 = sext i8 %3845 to i32
  %cmp7132 = icmp sle i32 %conv7131, 122
  br i1 %cmp7132, label %if.then.7145, label %lor.lhs.false.7134

lor.lhs.false.7134:                               ; preds = %land.lhs.true.7130, %lor.lhs.false.7126
  %3846 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i32 0), align 1
  %conv7135 = sext i8 %3846 to i32
  %cmp7136 = icmp eq i32 %conv7135, 95
  br i1 %cmp7136, label %if.then.7145, label %if.else.7149

cond.false.7138:                                  ; preds = %lor.lhs.false.7114
  %call7139 = call signext i8 @Perl_is_utf8_idcont(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i32 0))
  %conv7140 = sext i8 %call7139 to i32
  %tobool7141 = icmp ne i32 %conv7140, 0
  br i1 %tobool7141, label %land.lhs.true.7142, label %if.else.7149

land.lhs.true.7142:                               ; preds = %cond.false.7138
  %call7143 = call signext i8 @Perl_is_utf8_digit(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i32 0))
  %tobool7144 = icmp ne i8 %call7143, 0
  br i1 %tobool7144, label %if.else.7149, label %if.then.7145

if.then.7145:                                     ; preds = %land.lhs.true.7142, %lor.lhs.false.7134, %land.lhs.true.7130, %land.lhs.true.7122
  %call7146 = call i64 @strlen(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i32 0))
  %conv7147 = trunc i64 %call7146 to i32
  %call7148 = call %struct.hv* @Perl_gv_stashpvn(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i32 0), i32 %conv7147, i32 1)
  br label %if.end.7156

if.else.7149:                                     ; preds = %land.lhs.true.7142, %cond.false.7138, %lor.lhs.false.7134
  %3847 = load i8*, i8** %s, align 8
  %3848 = load i8, i8* %3847, align 1
  %conv7150 = sext i8 %3848 to i32
  %cmp7151 = icmp eq i32 %conv7150, 60
  br i1 %cmp7151, label %if.then.7153, label %if.end.7155

if.then.7153:                                     ; preds = %if.else.7149
  %call7154 = call i32 @Perl_yyerror(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.104, i32 0, i32 0))
  br label %if.end.7155

if.end.7155:                                      ; preds = %if.then.7153, %if.else.7149
  br label %if.end.7156

if.end.7156:                                      ; preds = %if.end.7155, %if.then.7145
  br label %if.end.7157

if.end.7157:                                      ; preds = %if.end.7156, %lor.lhs.false.7089
  br label %if.end.7158

if.end.7158:                                      ; preds = %if.end.7157, %if.then.7073
  store i32 309, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %3849 = load i8*, i8** %s, align 8
  store i8* %3849, i8** @PL_bufptr, align 8
  %3850 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %3850, i8** @PL_last_uni, align 8
  store i16 309, i16* @PL_last_lop_op, align 2
  %3851 = load i8*, i8** %s, align 8
  %3852 = load i8, i8* %3851, align 1
  %conv7159 = sext i8 %3852 to i32
  %cmp7160 = icmp eq i32 %conv7159, 40
  br i1 %cmp7160, label %lor.end.7167, label %lor.rhs.7162

lor.rhs.7162:                                     ; preds = %if.end.7158
  %3853 = load i8*, i8** %s, align 8
  %call7163 = call i8* @S_skipspace(i8* %3853)
  store i8* %call7163, i8** %s, align 8
  %3854 = load i8*, i8** %s, align 8
  %3855 = load i8, i8* %3854, align 1
  %conv7164 = sext i8 %3855 to i32
  %cmp7165 = icmp eq i32 %conv7164, 40
  br label %lor.end.7167

lor.end.7167:                                     ; preds = %lor.rhs.7162, %if.end.7158
  %3856 = phi i1 [ true, %if.end.7158 ], [ %cmp7165, %lor.rhs.7162 ]
  %cond7169 = select i1 %3856, i32 283, i32 285
  store i32 %cond7169, i32* %retval
  br label %return

sw.bb.7170:                                       ; preds = %reserved_word
  store i32 172, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %3857 = load i8*, i8** %s, align 8
  store i8* %3857, i8** @PL_bufptr, align 8
  %3858 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %3858, i8** @PL_last_uni, align 8
  store i16 172, i16* @PL_last_lop_op, align 2
  %3859 = load i8*, i8** %s, align 8
  %3860 = load i8, i8* %3859, align 1
  %conv7171 = sext i8 %3860 to i32
  %cmp7172 = icmp eq i32 %conv7171, 40
  br i1 %cmp7172, label %lor.end.7179, label %lor.rhs.7174

lor.rhs.7174:                                     ; preds = %sw.bb.7170
  %3861 = load i8*, i8** %s, align 8
  %call7175 = call i8* @S_skipspace(i8* %3861)
  store i8* %call7175, i8** %s, align 8
  %3862 = load i8*, i8** %s, align 8
  %3863 = load i8, i8* %3862, align 1
  %conv7176 = sext i8 %3863 to i32
  %cmp7177 = icmp eq i32 %conv7176, 40
  br label %lor.end.7179

lor.end.7179:                                     ; preds = %lor.rhs.7174, %sw.bb.7170
  %3864 = phi i1 [ true, %sw.bb.7170 ], [ %cmp7177, %lor.rhs.7174 ]
  %cond7181 = select i1 %3864, i32 283, i32 285
  store i32 %cond7181, i32* %retval
  br label %return

sw.bb.7182:                                       ; preds = %reserved_word
  %3865 = load i8*, i8** %s, align 8
  %call7183 = call i8* @S_force_word(i8* %3865, i32 257, i32 1, i32 0, i32 0)
  store i8* %call7183, i8** %s, align 8
  store i32 187, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %3866 = load i8*, i8** %s, align 8
  store i8* %3866, i8** @PL_bufptr, align 8
  store i32 280, i32* %retval
  br label %return

sw.bb.7184:                                       ; preds = %reserved_word
  %3867 = load i8*, i8** %s, align 8
  %call7185 = call i32 @S_lop(i32 269, i32 1, i8* %3867)
  store i32 %call7185, i32* %retval
  br label %return

sw.bb.7186:                                       ; preds = %reserved_word
  store i32 101, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %3868 = load i8*, i8** %s, align 8
  store i8* %3868, i8** @PL_bufptr, align 8
  %3869 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %3869, i8** @PL_last_uni, align 8
  store i16 101, i16* @PL_last_lop_op, align 2
  %3870 = load i8*, i8** %s, align 8
  %3871 = load i8, i8* %3870, align 1
  %conv7187 = sext i8 %3871 to i32
  %cmp7188 = icmp eq i32 %conv7187, 40
  br i1 %cmp7188, label %lor.end.7195, label %lor.rhs.7190

lor.rhs.7190:                                     ; preds = %sw.bb.7186
  %3872 = load i8*, i8** %s, align 8
  %call7191 = call i8* @S_skipspace(i8* %3872)
  store i8* %call7191, i8** %s, align 8
  %3873 = load i8*, i8** %s, align 8
  %3874 = load i8, i8* %3873, align 1
  %conv7192 = sext i8 %3874 to i32
  %cmp7193 = icmp eq i32 %conv7192, 40
  br label %lor.end.7195

lor.end.7195:                                     ; preds = %lor.rhs.7190, %sw.bb.7186
  %3875 = phi i1 [ true, %sw.bb.7186 ], [ %cmp7193, %lor.rhs.7190 ]
  %cond7197 = select i1 %3875, i32 283, i32 285
  store i32 %cond7197, i32* %retval
  br label %return

sw.bb.7198:                                       ; preds = %reserved_word
  store i32 274, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %3876 = load i8*, i8** %s, align 8
  store i8* %3876, i8** @PL_bufptr, align 8
  %3877 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %3877, i8** @PL_last_uni, align 8
  store i16 274, i16* @PL_last_lop_op, align 2
  %3878 = load i8*, i8** %s, align 8
  %3879 = load i8, i8* %3878, align 1
  %conv7199 = sext i8 %3879 to i32
  %cmp7200 = icmp eq i32 %conv7199, 40
  br i1 %cmp7200, label %lor.end.7207, label %lor.rhs.7202

lor.rhs.7202:                                     ; preds = %sw.bb.7198
  %3880 = load i8*, i8** %s, align 8
  %call7203 = call i8* @S_skipspace(i8* %3880)
  store i8* %call7203, i8** %s, align 8
  %3881 = load i8*, i8** %s, align 8
  %3882 = load i8, i8* %3881, align 1
  %conv7204 = sext i8 %3882 to i32
  %cmp7205 = icmp eq i32 %conv7204, 40
  br label %lor.end.7207

lor.end.7207:                                     ; preds = %lor.rhs.7202, %sw.bb.7198
  %3883 = phi i1 [ true, %sw.bb.7198 ], [ %cmp7205, %lor.rhs.7202 ]
  %cond7209 = select i1 %3883, i32 283, i32 285
  store i32 %cond7209, i32* %retval
  br label %return

sw.bb.7210:                                       ; preds = %reserved_word
  %3884 = load i8*, i8** %s, align 8
  %call7211 = call i32 @S_lop(i32 114, i32 1, i8* %3884)
  store i32 %call7211, i32* %retval
  br label %return

sw.bb.7212:                                       ; preds = %reserved_word
  %3885 = load i8*, i8** %s, align 8
  %call7213 = call i32 @S_lop(i32 205, i32 1, i8* %3885)
  store i32 %call7213, i32* %retval
  br label %return

sw.bb.7214:                                       ; preds = %reserved_word
  store i32 276, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %3886 = load i8*, i8** %s, align 8
  store i8* %3886, i8** @PL_bufptr, align 8
  %3887 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %3887, i8** @PL_last_uni, align 8
  store i16 276, i16* @PL_last_lop_op, align 2
  %3888 = load i8*, i8** %s, align 8
  %3889 = load i8, i8* %3888, align 1
  %conv7215 = sext i8 %3889 to i32
  %cmp7216 = icmp eq i32 %conv7215, 40
  br i1 %cmp7216, label %lor.end.7223, label %lor.rhs.7218

lor.rhs.7218:                                     ; preds = %sw.bb.7214
  %3890 = load i8*, i8** %s, align 8
  %call7219 = call i8* @S_skipspace(i8* %3890)
  store i8* %call7219, i8** %s, align 8
  %3891 = load i8*, i8** %s, align 8
  %3892 = load i8, i8* %3891, align 1
  %conv7220 = sext i8 %3892 to i32
  %cmp7221 = icmp eq i32 %conv7220, 40
  br label %lor.end.7223

lor.end.7223:                                     ; preds = %lor.rhs.7218, %sw.bb.7214
  %3893 = phi i1 [ true, %sw.bb.7214 ], [ %cmp7221, %lor.rhs.7218 ]
  %cond7225 = select i1 %3893, i32 283, i32 285
  store i32 %cond7225, i32* %retval
  br label %return

sw.bb.7226:                                       ; preds = %reserved_word
  call void @S_set_csh()
  store i32 26, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %3894 = load i8*, i8** %s, align 8
  store i8* %3894, i8** @PL_bufptr, align 8
  %3895 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %3895, i8** @PL_last_uni, align 8
  store i16 26, i16* @PL_last_lop_op, align 2
  %3896 = load i8*, i8** %s, align 8
  %3897 = load i8, i8* %3896, align 1
  %conv7227 = sext i8 %3897 to i32
  %cmp7228 = icmp eq i32 %conv7227, 40
  br i1 %cmp7228, label %lor.end.7235, label %lor.rhs.7230

lor.rhs.7230:                                     ; preds = %sw.bb.7226
  %3898 = load i8*, i8** %s, align 8
  %call7231 = call i8* @S_skipspace(i8* %3898)
  store i8* %call7231, i8** %s, align 8
  %3899 = load i8*, i8** %s, align 8
  %3900 = load i8, i8* %3899, align 1
  %conv7232 = sext i8 %3900 to i32
  %cmp7233 = icmp eq i32 %conv7232, 40
  br label %lor.end.7235

lor.end.7235:                                     ; preds = %lor.rhs.7230, %sw.bb.7226
  %3901 = phi i1 [ true, %sw.bb.7226 ], [ %cmp7233, %lor.rhs.7230 ]
  %cond7237 = select i1 %3901, i32 283, i32 285
  store i32 %cond7237, i32* %retval
  br label %return

sw.bb.7238:                                       ; preds = %reserved_word
  call void @S_set_csh()
  store i32 24, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %3902 = load i8*, i8** %s, align 8
  store i8* %3902, i8** @PL_bufptr, align 8
  %3903 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %3903, i8** @PL_last_uni, align 8
  store i16 24, i16* @PL_last_lop_op, align 2
  %3904 = load i8*, i8** %s, align 8
  %3905 = load i8, i8* %3904, align 1
  %conv7239 = sext i8 %3905 to i32
  %cmp7240 = icmp eq i32 %conv7239, 40
  br i1 %cmp7240, label %lor.end.7247, label %lor.rhs.7242

lor.rhs.7242:                                     ; preds = %sw.bb.7238
  %3906 = load i8*, i8** %s, align 8
  %call7243 = call i8* @S_skipspace(i8* %3906)
  store i8* %call7243, i8** %s, align 8
  %3907 = load i8*, i8** %s, align 8
  %3908 = load i8, i8* %3907, align 1
  %conv7244 = sext i8 %3908 to i32
  %cmp7245 = icmp eq i32 %conv7244, 40
  br label %lor.end.7247

lor.end.7247:                                     ; preds = %lor.rhs.7242, %sw.bb.7238
  %3909 = phi i1 [ true, %sw.bb.7238 ], [ %cmp7245, %lor.rhs.7242 ]
  %cond7249 = select i1 %3909, i32 283, i32 285
  store i32 %cond7249, i32* %retval
  br label %return

sw.bb.7250:                                       ; preds = %reserved_word
  store i32 279, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %3910 = load i8*, i8** %s, align 8
  store i8* %3910, i8** @PL_bufptr, align 8
  %3911 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %3911, i8** @PL_last_uni, align 8
  store i16 279, i16* @PL_last_lop_op, align 2
  %3912 = load i8*, i8** %s, align 8
  %3913 = load i8, i8* %3912, align 1
  %conv7251 = sext i8 %3913 to i32
  %cmp7252 = icmp eq i32 %conv7251, 40
  br i1 %cmp7252, label %lor.end.7259, label %lor.rhs.7254

lor.rhs.7254:                                     ; preds = %sw.bb.7250
  %3914 = load i8*, i8** %s, align 8
  %call7255 = call i8* @S_skipspace(i8* %3914)
  store i8* %call7255, i8** %s, align 8
  %3915 = load i8*, i8** %s, align 8
  %3916 = load i8, i8* %3915, align 1
  %conv7256 = sext i8 %3916 to i32
  %cmp7257 = icmp eq i32 %conv7256, 40
  br label %lor.end.7259

lor.end.7259:                                     ; preds = %lor.rhs.7254, %sw.bb.7250
  %3917 = phi i1 [ true, %sw.bb.7250 ], [ %cmp7257, %lor.rhs.7254 ]
  %cond7261 = select i1 %3917, i32 283, i32 285
  store i32 %cond7261, i32* %retval
  br label %return

sw.bb.7262:                                       ; preds = %reserved_word
  %3918 = load i8*, i8** %s, align 8
  %call7263 = call i32 @S_lop(i32 215, i32 1, i8* %3918)
  store i32 %call7263, i32* %retval
  br label %return

sw.bb.7264:                                       ; preds = %reserved_word
  %3919 = load i8*, i8** %s, align 8
  %call7265 = call i32 @S_lop(i32 151, i32 1, i8* %3919)
  store i32 %call7265, i32* %retval
  br label %return

sw.bb.7266:                                       ; preds = %reserved_word
  store i32 272, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %3920 = load i8*, i8** %s, align 8
  store i8* %3920, i8** @PL_bufptr, align 8
  %3921 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %3921, i8** @PL_last_uni, align 8
  store i16 272, i16* @PL_last_lop_op, align 2
  %3922 = load i8*, i8** %s, align 8
  %3923 = load i8, i8* %3922, align 1
  %conv7267 = sext i8 %3923 to i32
  %cmp7268 = icmp eq i32 %conv7267, 40
  br i1 %cmp7268, label %lor.end.7275, label %lor.rhs.7270

lor.rhs.7270:                                     ; preds = %sw.bb.7266
  %3924 = load i8*, i8** %s, align 8
  %call7271 = call i8* @S_skipspace(i8* %3924)
  store i8* %call7271, i8** %s, align 8
  %3925 = load i8*, i8** %s, align 8
  %3926 = load i8, i8* %3925, align 1
  %conv7272 = sext i8 %3926 to i32
  %cmp7273 = icmp eq i32 %conv7272, 40
  br label %lor.end.7275

lor.end.7275:                                     ; preds = %lor.rhs.7270, %sw.bb.7266
  %3927 = phi i1 [ true, %sw.bb.7266 ], [ %cmp7273, %lor.rhs.7270 ]
  %cond7277 = select i1 %3927, i32 283, i32 285
  store i32 %cond7277, i32* %retval
  br label %return

sw.bb.7278:                                       ; preds = %reserved_word
  store i32 22, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %3928 = load i8*, i8** %s, align 8
  store i8* %3928, i8** @PL_bufptr, align 8
  %3929 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %3929, i8** @PL_last_uni, align 8
  store i16 22, i16* @PL_last_lop_op, align 2
  %3930 = load i8*, i8** %s, align 8
  %3931 = load i8, i8* %3930, align 1
  %conv7279 = sext i8 %3931 to i32
  %cmp7280 = icmp eq i32 %conv7279, 40
  br i1 %cmp7280, label %lor.end.7287, label %lor.rhs.7282

lor.rhs.7282:                                     ; preds = %sw.bb.7278
  %3932 = load i8*, i8** %s, align 8
  %call7283 = call i8* @S_skipspace(i8* %3932)
  store i8* %call7283, i8** %s, align 8
  %3933 = load i8*, i8** %s, align 8
  %3934 = load i8, i8* %3933, align 1
  %conv7284 = sext i8 %3934 to i32
  %cmp7285 = icmp eq i32 %conv7284, 40
  br label %lor.end.7287

lor.end.7287:                                     ; preds = %lor.rhs.7282, %sw.bb.7278
  %3935 = phi i1 [ true, %sw.bb.7278 ], [ %cmp7285, %lor.rhs.7282 ]
  %cond7289 = select i1 %3935, i32 283, i32 285
  store i32 %cond7289, i32* %retval
  br label %return

sw.bb.7290:                                       ; preds = %reserved_word
  %3936 = load i8*, i8** %s, align 8
  %call7291 = call i8* @S_scan_subst(i8* %3936)
  store i8* %call7291, i8** %s, align 8
  %3937 = load %struct.op*, %struct.op** bitcast (%union.YYSTYPE* @PL_yylval to %struct.op**), align 8
  %tobool7292 = icmp ne %struct.op* %3937, null
  br i1 %tobool7292, label %if.then.7293, label %if.else.7303

if.then.7293:                                     ; preds = %sw.bb.7290
  %3938 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line7294 = getelementptr inbounds %struct.cop, %struct.cop* %3938, i32 0, i32 13
  %3939 = load i32, i32* %cop_line7294, align 4
  %3940 = load i32, i32* @PL_copline, align 4
  %cmp7295 = icmp ult i32 %3939, %3940
  br i1 %cmp7295, label %cond.true.7297, label %cond.false.7299

cond.true.7297:                                   ; preds = %if.then.7293
  %3941 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line7298 = getelementptr inbounds %struct.cop, %struct.cop* %3941, i32 0, i32 13
  %3942 = load i32, i32* %cop_line7298, align 4
  br label %cond.end.7300

cond.false.7299:                                  ; preds = %if.then.7293
  %3943 = load i32, i32* @PL_copline, align 4
  br label %cond.end.7300

cond.end.7300:                                    ; preds = %cond.false.7299, %cond.true.7297
  %cond7301 = phi i32 [ %3942, %cond.true.7297 ], [ %3943, %cond.false.7299 ]
  store i32 %cond7301, i32* @PL_copline, align 4
  store i32 0, i32* @PL_expect, align 4
  %3944 = load i8*, i8** %s, align 8
  store i8* %3944, i8** @PL_bufptr, align 8
  %call7302 = call i32 @S_sublex_start()
  store i32 %call7302, i32* %retval
  br label %return

if.else.7303:                                     ; preds = %sw.bb.7290
  %3945 = load i8*, i8** %s, align 8
  store i8* %3945, i8** @PL_bufptr, align 8
  store i32 1, i32* %retval
  br label %return

sw.bb.7304:                                       ; preds = %reserved_word
  store i32 40, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %3946 = load i8*, i8** %s, align 8
  store i8* %3946, i8** @PL_bufptr, align 8
  %3947 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %3947, i8** @PL_last_uni, align 8
  store i16 40, i16* @PL_last_lop_op, align 2
  %3948 = load i8*, i8** %s, align 8
  %3949 = load i8, i8* %3948, align 1
  %conv7305 = sext i8 %3949 to i32
  %cmp7306 = icmp eq i32 %conv7305, 40
  br i1 %cmp7306, label %lor.end.7313, label %lor.rhs.7308

lor.rhs.7308:                                     ; preds = %sw.bb.7304
  %3950 = load i8*, i8** %s, align 8
  %call7309 = call i8* @S_skipspace(i8* %3950)
  store i8* %call7309, i8** %s, align 8
  %3951 = load i8*, i8** %s, align 8
  %3952 = load i8, i8* %3951, align 1
  %conv7310 = sext i8 %3952 to i32
  %cmp7311 = icmp eq i32 %conv7310, 40
  br label %lor.end.7313

lor.end.7313:                                     ; preds = %lor.rhs.7308, %sw.bb.7304
  %3953 = phi i1 [ true, %sw.bb.7304 ], [ %cmp7311, %lor.rhs.7308 ]
  %cond7315 = select i1 %3953, i32 283, i32 285
  store i32 %cond7315, i32* %retval
  br label %return

sw.bb.7316:                                       ; preds = %reserved_word
  store i32 2, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %3954 = load i8*, i8** %s, align 8
  store i8* %3954, i8** @PL_bufptr, align 8
  %3955 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %3955, i8** @PL_last_uni, align 8
  store i16 2, i16* @PL_last_lop_op, align 2
  %3956 = load i8*, i8** %s, align 8
  %3957 = load i8, i8* %3956, align 1
  %conv7317 = sext i8 %3957 to i32
  %cmp7318 = icmp eq i32 %conv7317, 40
  br i1 %cmp7318, label %lor.end.7325, label %lor.rhs.7320

lor.rhs.7320:                                     ; preds = %sw.bb.7316
  %3958 = load i8*, i8** %s, align 8
  %call7321 = call i8* @S_skipspace(i8* %3958)
  store i8* %call7321, i8** %s, align 8
  %3959 = load i8*, i8** %s, align 8
  %3960 = load i8, i8* %3959, align 1
  %conv7322 = sext i8 %3960 to i32
  %cmp7323 = icmp eq i32 %conv7322, 40
  br label %lor.end.7325

lor.end.7325:                                     ; preds = %lor.rhs.7320, %sw.bb.7316
  %3961 = phi i1 [ true, %sw.bb.7316 ], [ %cmp7323, %lor.rhs.7320 ]
  %cond7327 = select i1 %3961, i32 283, i32 285
  store i32 %cond7327, i32* %retval
  br label %return

sw.bb.7328:                                       ; preds = %reserved_word
  %3962 = load i8*, i8** %s, align 8
  %call7329 = call i32 @S_lop(i32 203, i32 1, i8* %3962)
  store i32 %call7329, i32* %retval
  br label %return

sw.bb.7330:                                       ; preds = %reserved_word
  %3963 = load i8*, i8** %s, align 8
  %call7331 = call i32 @S_lop(i32 218, i32 1, i8* %3963)
  store i32 %call7331, i32* %retval
  br label %return

sw.bb.7332:                                       ; preds = %reserved_word
  %3964 = load i8*, i8** %s, align 8
  %call7333 = call i32 @S_lop(i32 307, i32 1, i8* %3964)
  store i32 %call7333, i32* %retval
  br label %return

sw.bb.7334:                                       ; preds = %reserved_word
  %3965 = load i8*, i8** %s, align 8
  %call7335 = call i32 @S_lop(i32 306, i32 1, i8* %3965)
  store i32 %call7335, i32* %retval
  br label %return

sw.bb.7336:                                       ; preds = %reserved_word
  %3966 = load i8*, i8** %s, align 8
  %call7337 = call i32 @S_lop(i32 308, i32 1, i8* %3966)
  store i32 %call7337, i32* %retval
  br label %return

sw.bb.7338:                                       ; preds = %reserved_word
  %3967 = load i8*, i8** %s, align 8
  %call7339 = call i32 @S_lop(i32 214, i32 1, i8* %3967)
  store i32 %call7339, i32* %retval
  br label %return

sw.bb.7340:                                       ; preds = %reserved_word
  %3968 = load i8*, i8** %s, align 8
  %call7341 = call i32 @S_lop(i32 289, i32 1, i8* %3968)
  store i32 %call7341, i32* %retval
  br label %return

sw.bb.7342:                                       ; preds = %reserved_word
  %3969 = load i8*, i8** %s, align 8
  %call7343 = call i32 @S_lop(i32 291, i32 1, i8* %3969)
  store i32 %call7343, i32* %retval
  br label %return

sw.bb.7344:                                       ; preds = %reserved_word
  store i32 327, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %3970 = load i8*, i8** %s, align 8
  store i8* %3970, i8** @PL_bufptr, align 8
  %3971 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %3971, i8** @PL_last_uni, align 8
  store i16 327, i16* @PL_last_lop_op, align 2
  %3972 = load i8*, i8** %s, align 8
  %3973 = load i8, i8* %3972, align 1
  %conv7345 = sext i8 %3973 to i32
  %cmp7346 = icmp eq i32 %conv7345, 40
  br i1 %cmp7346, label %lor.end.7353, label %lor.rhs.7348

lor.rhs.7348:                                     ; preds = %sw.bb.7344
  %3974 = load i8*, i8** %s, align 8
  %call7349 = call i8* @S_skipspace(i8* %3974)
  store i8* %call7349, i8** %s, align 8
  %3975 = load i8*, i8** %s, align 8
  %3976 = load i8, i8* %3975, align 1
  %conv7350 = sext i8 %3976 to i32
  %cmp7351 = icmp eq i32 %conv7350, 40
  br label %lor.end.7353

lor.end.7353:                                     ; preds = %lor.rhs.7348, %sw.bb.7344
  %3977 = phi i1 [ true, %sw.bb.7344 ], [ %cmp7351, %lor.rhs.7348 ]
  %cond7355 = select i1 %3977, i32 283, i32 285
  store i32 %cond7355, i32* %retval
  br label %return

sw.bb.7356:                                       ; preds = %reserved_word
  store i32 328, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %3978 = load i8*, i8** %s, align 8
  store i8* %3978, i8** @PL_bufptr, align 8
  %3979 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %3979, i8** @PL_last_uni, align 8
  store i16 328, i16* @PL_last_lop_op, align 2
  %3980 = load i8*, i8** %s, align 8
  %3981 = load i8, i8* %3980, align 1
  %conv7357 = sext i8 %3981 to i32
  %cmp7358 = icmp eq i32 %conv7357, 40
  br i1 %cmp7358, label %lor.end.7365, label %lor.rhs.7360

lor.rhs.7360:                                     ; preds = %sw.bb.7356
  %3982 = load i8*, i8** %s, align 8
  %call7361 = call i8* @S_skipspace(i8* %3982)
  store i8* %call7361, i8** %s, align 8
  %3983 = load i8*, i8** %s, align 8
  %3984 = load i8, i8* %3983, align 1
  %conv7362 = sext i8 %3984 to i32
  %cmp7363 = icmp eq i32 %conv7362, 40
  br label %lor.end.7365

lor.end.7365:                                     ; preds = %lor.rhs.7360, %sw.bb.7356
  %3985 = phi i1 [ true, %sw.bb.7356 ], [ %cmp7363, %lor.rhs.7360 ]
  %cond7367 = select i1 %3985, i32 283, i32 285
  store i32 %cond7367, i32* %retval
  br label %return

sw.bb.7368:                                       ; preds = %reserved_word
  store i32 330, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %3986 = load i8*, i8** %s, align 8
  store i8* %3986, i8** @PL_bufptr, align 8
  %3987 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %3987, i8** @PL_last_uni, align 8
  store i16 330, i16* @PL_last_lop_op, align 2
  %3988 = load i8*, i8** %s, align 8
  %3989 = load i8, i8* %3988, align 1
  %conv7369 = sext i8 %3989 to i32
  %cmp7370 = icmp eq i32 %conv7369, 40
  br i1 %cmp7370, label %lor.end.7377, label %lor.rhs.7372

lor.rhs.7372:                                     ; preds = %sw.bb.7368
  %3990 = load i8*, i8** %s, align 8
  %call7373 = call i8* @S_skipspace(i8* %3990)
  store i8* %call7373, i8** %s, align 8
  %3991 = load i8*, i8** %s, align 8
  %3992 = load i8, i8* %3991, align 1
  %conv7374 = sext i8 %3992 to i32
  %cmp7375 = icmp eq i32 %conv7374, 40
  br label %lor.end.7377

lor.end.7377:                                     ; preds = %lor.rhs.7372, %sw.bb.7368
  %3993 = phi i1 [ true, %sw.bb.7368 ], [ %cmp7375, %lor.rhs.7372 ]
  %cond7379 = select i1 %3993, i32 283, i32 285
  store i32 %cond7379, i32* %retval
  br label %return

sw.bb.7380:                                       ; preds = %reserved_word
  store i32 329, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %3994 = load i8*, i8** %s, align 8
  store i8* %3994, i8** @PL_bufptr, align 8
  %3995 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %3995, i8** @PL_last_uni, align 8
  store i16 329, i16* @PL_last_lop_op, align 2
  %3996 = load i8*, i8** %s, align 8
  %3997 = load i8, i8* %3996, align 1
  %conv7381 = sext i8 %3997 to i32
  %cmp7382 = icmp eq i32 %conv7381, 40
  br i1 %cmp7382, label %lor.end.7389, label %lor.rhs.7384

lor.rhs.7384:                                     ; preds = %sw.bb.7380
  %3998 = load i8*, i8** %s, align 8
  %call7385 = call i8* @S_skipspace(i8* %3998)
  store i8* %call7385, i8** %s, align 8
  %3999 = load i8*, i8** %s, align 8
  %4000 = load i8, i8* %3999, align 1
  %conv7386 = sext i8 %4000 to i32
  %cmp7387 = icmp eq i32 %conv7386, 40
  br label %lor.end.7389

lor.end.7389:                                     ; preds = %lor.rhs.7384, %sw.bb.7380
  %4001 = phi i1 [ true, %sw.bb.7380 ], [ %cmp7387, %lor.rhs.7384 ]
  %cond7391 = select i1 %4001, i32 283, i32 285
  store i32 %cond7391, i32* %retval
  br label %return

sw.bb.7392:                                       ; preds = %reserved_word
  store i32 338, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 0, i32* @PL_expect, align 4
  %4002 = load i8*, i8** %s, align 8
  store i8* %4002, i8** @PL_bufptr, align 8
  store i32 282, i32* %retval
  br label %return

sw.bb.7393:                                       ; preds = %reserved_word
  store i32 343, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 0, i32* @PL_expect, align 4
  %4003 = load i8*, i8** %s, align 8
  store i8* %4003, i8** @PL_bufptr, align 8
  store i32 282, i32* %retval
  br label %return

sw.bb.7394:                                       ; preds = %reserved_word
  %4004 = load i8*, i8** %s, align 8
  %call7395 = call i32 @S_lop(i32 278, i32 1, i8* %4004)
  store i32 %call7395, i32* %retval
  br label %return

sw.bb.7396:                                       ; preds = %reserved_word
  %4005 = load i8*, i8** %s, align 8
  %call7397 = call i32 @S_lop(i32 231, i32 1, i8* %4005)
  store i32 %call7397, i32* %retval
  br label %return

sw.bb.7398:                                       ; preds = %reserved_word
  store i32 148, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %4006 = load i8*, i8** %s, align 8
  store i8* %4006, i8** @PL_bufptr, align 8
  %4007 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %4007, i8** @PL_last_uni, align 8
  store i16 148, i16* @PL_last_lop_op, align 2
  %4008 = load i8*, i8** %s, align 8
  %4009 = load i8, i8* %4008, align 1
  %conv7399 = sext i8 %4009 to i32
  %cmp7400 = icmp eq i32 %conv7399, 40
  br i1 %cmp7400, label %lor.end.7407, label %lor.rhs.7402

lor.rhs.7402:                                     ; preds = %sw.bb.7398
  %4010 = load i8*, i8** %s, align 8
  %call7403 = call i8* @S_skipspace(i8* %4010)
  store i8* %call7403, i8** %s, align 8
  %4011 = load i8*, i8** %s, align 8
  %4012 = load i8, i8* %4011, align 1
  %conv7404 = sext i8 %4012 to i32
  %cmp7405 = icmp eq i32 %conv7404, 40
  br label %lor.end.7407

lor.end.7407:                                     ; preds = %lor.rhs.7402, %sw.bb.7398
  %4013 = phi i1 [ true, %sw.bb.7398 ], [ %cmp7405, %lor.rhs.7402 ]
  %cond7409 = select i1 %4013, i32 283, i32 285
  store i32 %cond7409, i32* %retval
  br label %return

sw.bb.7410:                                       ; preds = %reserved_word
  %4014 = load i8*, i8** %s, align 8
  %call7411 = call i32 @S_lop(i32 299, i32 1, i8* %4014)
  store i32 %call7411, i32* %retval
  br label %return

sw.bb.7412:                                       ; preds = %reserved_word
  %4015 = load i8*, i8** %s, align 8
  %call7413 = call i32 @S_lop(i32 298, i32 1, i8* %4015)
  store i32 %call7413, i32* %retval
  br label %return

sw.bb.7414:                                       ; preds = %reserved_word
  %4016 = load i8*, i8** %s, align 8
  %call7415 = call i32 @S_lop(i32 300, i32 1, i8* %4016)
  store i32 %call7415, i32* %retval
  br label %return

sw.bb.7416:                                       ; preds = %reserved_word
  %4017 = load i8*, i8** %s, align 8
  %call7417 = call i32 @S_lop(i32 301, i32 1, i8* %4017)
  store i32 %call7417, i32* %retval
  br label %return

sw.bb.7418:                                       ; preds = %reserved_word
  %4018 = load i8*, i8** %s, align 8
  %call7419 = call i32 @S_lop(i32 229, i32 1, i8* %4018)
  store i32 %call7419, i32* %retval
  br label %return

sw.bb.7420:                                       ; preds = %reserved_word
  store i32 99, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %4019 = load i8*, i8** %s, align 8
  store i8* %4019, i8** @PL_bufptr, align 8
  %4020 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %4020, i8** @PL_last_uni, align 8
  store i16 99, i16* @PL_last_lop_op, align 2
  %4021 = load i8*, i8** %s, align 8
  %4022 = load i8, i8* %4021, align 1
  %conv7421 = sext i8 %4022 to i32
  %cmp7422 = icmp eq i32 %conv7421, 40
  br i1 %cmp7422, label %lor.end.7429, label %lor.rhs.7424

lor.rhs.7424:                                     ; preds = %sw.bb.7420
  %4023 = load i8*, i8** %s, align 8
  %call7425 = call i8* @S_skipspace(i8* %4023)
  store i8* %call7425, i8** %s, align 8
  %4024 = load i8*, i8** %s, align 8
  %4025 = load i8, i8* %4024, align 1
  %conv7426 = sext i8 %4025 to i32
  %cmp7427 = icmp eq i32 %conv7426, 40
  br label %lor.end.7429

lor.end.7429:                                     ; preds = %lor.rhs.7424, %sw.bb.7420
  %4026 = phi i1 [ true, %sw.bb.7420 ], [ %cmp7427, %lor.rhs.7424 ]
  %cond7431 = select i1 %4026, i32 283, i32 285
  store i32 %cond7431, i32* %retval
  br label %return

sw.bb.7432:                                       ; preds = %reserved_word
  store i32 297, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %4027 = load i8*, i8** %s, align 8
  store i8* %4027, i8** @PL_bufptr, align 8
  %4028 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %4028, i8** @PL_last_uni, align 8
  store i16 297, i16* @PL_last_lop_op, align 2
  %4029 = load i8*, i8** %s, align 8
  %4030 = load i8, i8* %4029, align 1
  %conv7433 = sext i8 %4030 to i32
  %cmp7434 = icmp eq i32 %conv7433, 40
  br i1 %cmp7434, label %lor.end.7441, label %lor.rhs.7436

lor.rhs.7436:                                     ; preds = %sw.bb.7432
  %4031 = load i8*, i8** %s, align 8
  %call7437 = call i8* @S_skipspace(i8* %4031)
  store i8* %call7437, i8** %s, align 8
  %4032 = load i8*, i8** %s, align 8
  %4033 = load i8, i8* %4032, align 1
  %conv7438 = sext i8 %4033 to i32
  %cmp7439 = icmp eq i32 %conv7438, 40
  br label %lor.end.7441

lor.end.7441:                                     ; preds = %lor.rhs.7436, %sw.bb.7432
  %4034 = phi i1 [ true, %sw.bb.7432 ], [ %cmp7439, %lor.rhs.7436 ]
  %cond7443 = select i1 %4034, i32 283, i32 285
  store i32 %cond7443, i32* %retval
  br label %return

sw.bb.7444:                                       ; preds = %reserved_word
  %4035 = load i8*, i8** %s, align 8
  %call7445 = call i32 @S_lop(i32 223, i32 1, i8* %4035)
  store i32 %call7445, i32* %retval
  br label %return

sw.bb.7446:                                       ; preds = %reserved_word
  %4036 = load i8*, i8** %s, align 8
  %call7447 = call i32 @S_lop(i32 224, i32 1, i8* %4036)
  store i32 %call7447, i32* %retval
  br label %return

sw.bb.7448:                                       ; preds = %reserved_word
  %4037 = load i8*, i8** %s, align 8
  call void @S_checkcomma(i8* %4037, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.105, i32 0, i32 0))
  %4038 = load i8*, i8** %s, align 8
  %call7449 = call i8* @S_skipspace(i8* %4038)
  store i8* %call7449, i8** %s, align 8
  %4039 = load i8*, i8** %s, align 8
  %4040 = load i8, i8* %4039, align 1
  %conv7450 = sext i8 %4040 to i32
  %cmp7451 = icmp eq i32 %conv7450, 59
  br i1 %cmp7451, label %if.then.7457, label %lor.lhs.false.7453

lor.lhs.false.7453:                               ; preds = %sw.bb.7448
  %4041 = load i8*, i8** %s, align 8
  %4042 = load i8, i8* %4041, align 1
  %conv7454 = sext i8 %4042 to i32
  %cmp7455 = icmp eq i32 %conv7454, 41
  br i1 %cmp7455, label %if.then.7457, label %if.end.7458

if.then.7457:                                     ; preds = %lor.lhs.false.7453, %sw.bb.7448
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.106, i32 0, i32 0))
  br label %if.end.7458

if.end.7458:                                      ; preds = %if.then.7457, %lor.lhs.false.7453
  store i32 1, i32* @PL_expect, align 4
  %4043 = load i8*, i8** %s, align 8
  %call7459 = call i8* @S_force_word(i8* %4043, i32 257, i32 1, i32 1, i32 0)
  store i8* %call7459, i8** %s, align 8
  %4044 = load i8*, i8** %s, align 8
  %call7460 = call i32 @S_lop(i32 150, i32 2, i8* %4044)
  store i32 %call7460, i32* %retval
  br label %return

sw.bb.7461:                                       ; preds = %reserved_word
  %4045 = load i8*, i8** %s, align 8
  %call7462 = call i32 @S_lop(i32 139, i32 1, i8* %4045)
  store i32 %call7462, i32* %retval
  br label %return

sw.bb.7463:                                       ; preds = %reserved_word
  %4046 = load i8*, i8** %s, align 8
  %call7464 = call i32 @S_lop(i32 115, i32 1, i8* %4046)
  store i32 %call7464, i32* %retval
  br label %return

sw.bb.7465:                                       ; preds = %reserved_word
  %4047 = load i8*, i8** %s, align 8
  %call7466 = call i32 @S_lop(i32 145, i32 1, i8* %4047)
  store i32 %call7466, i32* %retval
  br label %return

sw.bb.7467:                                       ; preds = %reserved_word
  store i32 105, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %4048 = load i8*, i8** %s, align 8
  store i8* %4048, i8** @PL_bufptr, align 8
  %4049 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %4049, i8** @PL_last_uni, align 8
  store i16 105, i16* @PL_last_lop_op, align 2
  %4050 = load i8*, i8** %s, align 8
  %4051 = load i8, i8* %4050, align 1
  %conv7468 = sext i8 %4051 to i32
  %cmp7469 = icmp eq i32 %conv7468, 40
  br i1 %cmp7469, label %lor.end.7476, label %lor.rhs.7471

lor.rhs.7471:                                     ; preds = %sw.bb.7467
  %4052 = load i8*, i8** %s, align 8
  %call7472 = call i8* @S_skipspace(i8* %4052)
  store i8* %call7472, i8** %s, align 8
  %4053 = load i8*, i8** %s, align 8
  %4054 = load i8, i8* %4053, align 1
  %conv7473 = sext i8 %4054 to i32
  %cmp7474 = icmp eq i32 %conv7473, 40
  br label %lor.end.7476

lor.end.7476:                                     ; preds = %lor.rhs.7471, %sw.bb.7467
  %4055 = phi i1 [ true, %sw.bb.7467 ], [ %cmp7474, %lor.rhs.7471 ]
  %cond7478 = select i1 %4055, i32 283, i32 285
  store i32 %cond7478, i32* %retval
  br label %return

sw.bb.7479:                                       ; preds = %reserved_word
  store i32 102, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %4056 = load i8*, i8** %s, align 8
  store i8* %4056, i8** @PL_bufptr, align 8
  %4057 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %4057, i8** @PL_last_uni, align 8
  store i16 102, i16* @PL_last_lop_op, align 2
  %4058 = load i8*, i8** %s, align 8
  %4059 = load i8, i8* %4058, align 1
  %conv7480 = sext i8 %4059 to i32
  %cmp7481 = icmp eq i32 %conv7480, 40
  br i1 %cmp7481, label %lor.end.7488, label %lor.rhs.7483

lor.rhs.7483:                                     ; preds = %sw.bb.7479
  %4060 = load i8*, i8** %s, align 8
  %call7484 = call i8* @S_skipspace(i8* %4060)
  store i8* %call7484, i8** %s, align 8
  %4061 = load i8*, i8** %s, align 8
  %4062 = load i8, i8* %4061, align 1
  %conv7485 = sext i8 %4062 to i32
  %cmp7486 = icmp eq i32 %conv7485, 40
  br label %lor.end.7488

lor.end.7488:                                     ; preds = %lor.rhs.7483, %sw.bb.7479
  %4063 = phi i1 [ true, %sw.bb.7479 ], [ %cmp7486, %lor.rhs.7483 ]
  %cond7490 = select i1 %4063, i32 283, i32 285
  store i32 %cond7490, i32* %retval
  br label %return

sw.bb.7491:                                       ; preds = %reserved_word
  store i32 235, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %4064 = load i8*, i8** %s, align 8
  store i8* %4064, i8** @PL_bufptr, align 8
  %4065 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %4065, i8** @PL_last_uni, align 8
  store i16 235, i16* @PL_last_lop_op, align 2
  %4066 = load i8*, i8** %s, align 8
  %4067 = load i8, i8* %4066, align 1
  %conv7492 = sext i8 %4067 to i32
  %cmp7493 = icmp eq i32 %conv7492, 40
  br i1 %cmp7493, label %lor.end.7500, label %lor.rhs.7495

lor.rhs.7495:                                     ; preds = %sw.bb.7491
  %4068 = load i8*, i8** %s, align 8
  %call7496 = call i8* @S_skipspace(i8* %4068)
  store i8* %call7496, i8** %s, align 8
  %4069 = load i8*, i8** %s, align 8
  %4070 = load i8, i8* %4069, align 1
  %conv7497 = sext i8 %4070 to i32
  %cmp7498 = icmp eq i32 %conv7497, 40
  br label %lor.end.7500

lor.end.7500:                                     ; preds = %lor.rhs.7495, %sw.bb.7491
  %4071 = phi i1 [ true, %sw.bb.7491 ], [ %cmp7498, %lor.rhs.7495 ]
  %cond7502 = select i1 %4071, i32 283, i32 285
  store i32 %cond7502, i32* %retval
  br label %return

sw.bb.7503:                                       ; preds = %reserved_word
  store i32 44, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %4072 = load i8*, i8** %s, align 8
  store i8* %4072, i8** @PL_bufptr, align 8
  %4073 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %4073, i8** @PL_last_uni, align 8
  store i16 44, i16* @PL_last_lop_op, align 2
  %4074 = load i8*, i8** %s, align 8
  %4075 = load i8, i8* %4074, align 1
  %conv7504 = sext i8 %4075 to i32
  %cmp7505 = icmp eq i32 %conv7504, 40
  br i1 %cmp7505, label %lor.end.7512, label %lor.rhs.7507

lor.rhs.7507:                                     ; preds = %sw.bb.7503
  %4076 = load i8*, i8** %s, align 8
  %call7508 = call i8* @S_skipspace(i8* %4076)
  store i8* %call7508, i8** %s, align 8
  %4077 = load i8*, i8** %s, align 8
  %4078 = load i8, i8* %4077, align 1
  %conv7509 = sext i8 %4078 to i32
  %cmp7510 = icmp eq i32 %conv7509, 40
  br label %lor.end.7512

lor.end.7512:                                     ; preds = %lor.rhs.7507, %sw.bb.7503
  %4079 = phi i1 [ true, %sw.bb.7503 ], [ %cmp7510, %lor.rhs.7507 ]
  %cond7514 = select i1 %4079, i32 283, i32 285
  store i32 %cond7514, i32* %retval
  br label %return

sw.bb.7515:                                       ; preds = %reserved_word
  %4080 = load i8*, i8** %s, align 8
  %call7516 = call i32 @S_lop(i32 111, i32 1, i8* %4080)
  store i32 %call7516, i32* %retval
  br label %return

sw.bb.7517:                                       ; preds = %reserved_word, %reserved_word
  br label %really_sub

really_sub:                                       ; preds = %sw.bb.7517, %if.then.6490, %if.then.5574
  store i64 0, i64* %tboffset, align 8
  %4081 = load i32, i32* %tmp, align 4
  store i32 %4081, i32* %key, align 4
  %4082 = load i8*, i8** %s, align 8
  %call7526 = call i8* @S_skipspace(i8* %4082)
  store i8* %call7526, i8** %s, align 8
  %4083 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private7527 = getelementptr inbounds %struct.cop, %struct.cop* %4083, i32 0, i32 7
  %4084 = load i8, i8* %op_private7527, align 1
  %conv7528 = zext i8 %4084 to i32
  %and7529 = and i32 %conv7528, 8
  %tobool7530 = icmp ne i32 %and7529, 0
  br i1 %tobool7530, label %cond.true.7549, label %lor.lhs.false.7531

lor.lhs.false.7531:                               ; preds = %really_sub
  %4085 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %tobool7532 = icmp ne %struct.sv* %4085, null
  br i1 %tobool7532, label %land.lhs.true.7533, label %lor.lhs.false.7542

land.lhs.true.7533:                               ; preds = %lor.lhs.false.7531
  %4086 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_flags7534 = getelementptr inbounds %struct.sv, %struct.sv* %4086, i32 0, i32 2
  %4087 = load i32, i32* %sv_flags7534, align 4
  %and7535 = and i32 %4087, 536870912
  %tobool7536 = icmp ne i32 %and7535, 0
  br i1 %tobool7536, label %land.lhs.true.7537, label %lor.lhs.false.7542

land.lhs.true.7537:                               ; preds = %land.lhs.true.7533
  %4088 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private7538 = getelementptr inbounds %struct.cop, %struct.cop* %4088, i32 0, i32 7
  %4089 = load i8, i8* %op_private7538, align 1
  %conv7539 = zext i8 %4089 to i32
  %and7540 = and i32 %conv7539, 8
  %tobool7541 = icmp ne i32 %and7540, 0
  br i1 %tobool7541, label %lor.lhs.false.7542, label %lor.lhs.false.7545

lor.lhs.false.7542:                               ; preds = %land.lhs.true.7537, %land.lhs.true.7533, %lor.lhs.false.7531
  %4090 = load i32, i32* @PL_hints, align 4
  %and7543 = and i32 %4090, 8388608
  %tobool7544 = icmp ne i32 %and7543, 0
  br i1 %tobool7544, label %lor.lhs.false.7545, label %cond.true.7549

lor.lhs.false.7545:                               ; preds = %lor.lhs.false.7542, %land.lhs.true.7537
  %4091 = load i8*, i8** %s, align 8
  %4092 = load i8, i8* %4091, align 1
  %conv7546 = zext i8 %4092 to i32
  %cmp7547 = icmp slt i32 %conv7546, 192
  br i1 %cmp7547, label %cond.true.7549, label %cond.false.7569

cond.true.7549:                                   ; preds = %lor.lhs.false.7545, %lor.lhs.false.7542, %really_sub
  %4093 = load i8*, i8** %s, align 8
  %4094 = load i8, i8* %4093, align 1
  %conv7550 = sext i8 %4094 to i32
  %cmp7551 = icmp sge i32 %conv7550, 65
  br i1 %cmp7551, label %land.lhs.true.7553, label %lor.lhs.false.7557

land.lhs.true.7553:                               ; preds = %cond.true.7549
  %4095 = load i8*, i8** %s, align 8
  %4096 = load i8, i8* %4095, align 1
  %conv7554 = sext i8 %4096 to i32
  %cmp7555 = icmp sle i32 %conv7554, 90
  br i1 %cmp7555, label %if.then.7589, label %lor.lhs.false.7557

lor.lhs.false.7557:                               ; preds = %land.lhs.true.7553, %cond.true.7549
  %4097 = load i8*, i8** %s, align 8
  %4098 = load i8, i8* %4097, align 1
  %conv7558 = sext i8 %4098 to i32
  %cmp7559 = icmp sge i32 %conv7558, 97
  br i1 %cmp7559, label %land.lhs.true.7561, label %lor.lhs.false.7565

land.lhs.true.7561:                               ; preds = %lor.lhs.false.7557
  %4099 = load i8*, i8** %s, align 8
  %4100 = load i8, i8* %4099, align 1
  %conv7562 = sext i8 %4100 to i32
  %cmp7563 = icmp sle i32 %conv7562, 122
  br i1 %cmp7563, label %if.then.7589, label %lor.lhs.false.7565

lor.lhs.false.7565:                               ; preds = %land.lhs.true.7561, %lor.lhs.false.7557
  %4101 = load i8*, i8** %s, align 8
  %4102 = load i8, i8* %4101, align 1
  %conv7566 = sext i8 %4102 to i32
  %cmp7567 = icmp eq i32 %conv7566, 95
  br i1 %cmp7567, label %if.then.7589, label %lor.lhs.false.7576

cond.false.7569:                                  ; preds = %lor.lhs.false.7545
  %4103 = load i8*, i8** %s, align 8
  %call7570 = call signext i8 @Perl_is_utf8_idcont(i8* %4103)
  %conv7571 = sext i8 %call7570 to i32
  %tobool7572 = icmp ne i32 %conv7571, 0
  br i1 %tobool7572, label %land.lhs.true.7573, label %lor.lhs.false.7576

land.lhs.true.7573:                               ; preds = %cond.false.7569
  %4104 = load i8*, i8** %s, align 8
  %call7574 = call signext i8 @Perl_is_utf8_digit(i8* %4104)
  %tobool7575 = icmp ne i8 %call7574, 0
  br i1 %tobool7575, label %lor.lhs.false.7576, label %if.then.7589

lor.lhs.false.7576:                               ; preds = %land.lhs.true.7573, %cond.false.7569, %lor.lhs.false.7565
  %4105 = load i8*, i8** %s, align 8
  %4106 = load i8, i8* %4105, align 1
  %conv7577 = sext i8 %4106 to i32
  %cmp7578 = icmp eq i32 %conv7577, 39
  br i1 %cmp7578, label %if.then.7589, label %lor.lhs.false.7580

lor.lhs.false.7580:                               ; preds = %lor.lhs.false.7576
  %4107 = load i8*, i8** %s, align 8
  %4108 = load i8, i8* %4107, align 1
  %conv7581 = sext i8 %4108 to i32
  %cmp7582 = icmp eq i32 %conv7581, 58
  br i1 %cmp7582, label %land.lhs.true.7584, label %if.else.7604

land.lhs.true.7584:                               ; preds = %lor.lhs.false.7580
  %4109 = load i8*, i8** %s, align 8
  %arrayidx7585 = getelementptr inbounds i8, i8* %4109, i64 1
  %4110 = load i8, i8* %arrayidx7585, align 1
  %conv7586 = sext i8 %4110 to i32
  %cmp7587 = icmp eq i32 %conv7586, 58
  br i1 %cmp7587, label %if.then.7589, label %if.else.7604

if.then.7589:                                     ; preds = %land.lhs.true.7584, %lor.lhs.false.7576, %land.lhs.true.7573, %lor.lhs.false.7565, %land.lhs.true.7561, %land.lhs.true.7553
  store i32 4, i32* @PL_expect, align 4
  store i32 5, i32* %attrful, align 4
  %4111 = load i8*, i8** %s, align 8
  %4112 = load i8*, i8** @PL_oldbufptr, align 8
  %sub.ptr.lhs.cast7590 = ptrtoint i8* %4111 to i64
  %sub.ptr.rhs.cast7591 = ptrtoint i8* %4112 to i64
  %sub.ptr.sub7592 = sub i64 %sub.ptr.lhs.cast7590, %sub.ptr.rhs.cast7591
  store i64 %sub.ptr.sub7592, i64* %tboffset, align 8
  %4113 = load i8*, i8** %s, align 8
  %arraydecay7593 = getelementptr inbounds [256 x i8], [256 x i8]* %tmpbuf7519, i32 0, i32 0
  %call7594 = call i8* @S_scan_word(i8* %4113, i8* %arraydecay7593, i64 256, i32 1, i64* %len)
  store i8* %call7594, i8** %d, align 8
  %arraydecay7595 = getelementptr inbounds [256 x i8], [256 x i8]* %tmpbuf7519, i32 0, i32 0
  %call7596 = call i8* @strchr(i8* %arraydecay7595, i32 58)
  %tobool7597 = icmp ne i8* %call7596, null
  br i1 %tobool7597, label %if.then.7598, label %if.else.7600

if.then.7598:                                     ; preds = %if.then.7589
  %4114 = load %struct.sv*, %struct.sv** @PL_subname, align 8
  %arraydecay7599 = getelementptr inbounds [256 x i8], [256 x i8]* %tmpbuf7519, i32 0, i32 0
  call void @Perl_sv_setpv(%struct.sv* %4114, i8* %arraydecay7599)
  br label %if.end.7602

if.else.7600:                                     ; preds = %if.then.7589
  %4115 = load %struct.sv*, %struct.sv** @PL_subname, align 8
  %4116 = load %struct.sv*, %struct.sv** @PL_curstname, align 8
  call void @Perl_sv_setsv_flags(%struct.sv* %4115, %struct.sv* %4116, i32 2)
  %4117 = load %struct.sv*, %struct.sv** @PL_subname, align 8
  call void @Perl_sv_catpvn_flags(%struct.sv* %4117, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.75, i32 0, i32 0), i64 2, i32 2)
  %4118 = load %struct.sv*, %struct.sv** @PL_subname, align 8
  %arraydecay7601 = getelementptr inbounds [256 x i8], [256 x i8]* %tmpbuf7519, i32 0, i32 0
  %4119 = load i64, i64* %len, align 8
  call void @Perl_sv_catpvn_flags(%struct.sv* %4118, i8* %arraydecay7601, i64 %4119, i32 2)
  br label %if.end.7602

if.end.7602:                                      ; preds = %if.else.7600, %if.then.7598
  %4120 = load i8*, i8** %d, align 8
  %call7603 = call i8* @S_skipspace(i8* %4120)
  store i8* %call7603, i8** %s, align 8
  store i8 1, i8* %have_name, align 1
  br label %if.end.7609

if.else.7604:                                     ; preds = %land.lhs.true.7584, %lor.lhs.false.7580
  %4121 = load i32, i32* %key, align 4
  %cmp7605 = icmp eq i32 %4121, 127
  br i1 %cmp7605, label %if.then.7607, label %if.end.7608

if.then.7607:                                     ; preds = %if.else.7604
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.107, i32 0, i32 0))
  br label %if.end.7608

if.end.7608:                                      ; preds = %if.then.7607, %if.else.7604
  store i32 7, i32* @PL_expect, align 4
  store i32 6, i32* %attrful, align 4
  %4122 = load %struct.sv*, %struct.sv** @PL_subname, align 8
  call void @Perl_sv_setpv(%struct.sv* %4122, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.108, i32 0, i32 0))
  store i8 0, i8* %have_name, align 1
  br label %if.end.7609

if.end.7609:                                      ; preds = %if.end.7608, %if.end.7602
  %4123 = load i32, i32* %key, align 4
  %cmp7610 = icmp eq i32 %4123, 65
  br i1 %cmp7610, label %if.then.7612, label %if.end.7624

if.then.7612:                                     ; preds = %if.end.7609
  %4124 = load i8*, i8** %s, align 8
  %4125 = load i8, i8* %4124, align 1
  %conv7613 = sext i8 %4125 to i32
  %cmp7614 = icmp eq i32 %conv7613, 61
  br i1 %cmp7614, label %if.then.7616, label %if.end.7618

if.then.7616:                                     ; preds = %if.then.7612
  %4126 = load i32, i32* @PL_lex_brackets, align 4
  %add7617 = add nsw i32 %4126, 1
  store i32 %add7617, i32* @PL_lex_formbrack, align 4
  br label %if.end.7618

if.end.7618:                                      ; preds = %if.then.7616, %if.then.7612
  %4127 = load i8, i8* %have_name, align 1
  %tobool7619 = icmp ne i8 %4127, 0
  br i1 %tobool7619, label %if.then.7620, label %if.end.7623

if.then.7620:                                     ; preds = %if.end.7618
  %4128 = load i8*, i8** @PL_oldbufptr, align 8
  %4129 = load i64, i64* %tboffset, align 8
  %add.ptr7621 = getelementptr inbounds i8, i8* %4128, i64 %4129
  %call7622 = call i8* @S_force_word(i8* %add.ptr7621, i32 257, i32 0, i32 1, i32 1)
  br label %if.end.7623

if.end.7623:                                      ; preds = %if.then.7620, %if.end.7618
  store i32 1, i32* @PL_expect, align 4
  %4130 = load i8*, i8** %s, align 8
  store i8* %4130, i8** @PL_bufptr, align 8
  store i32 267, i32* %retval
  br label %return

if.end.7624:                                      ; preds = %if.end.7609
  %4131 = load i8*, i8** %s, align 8
  %4132 = load i8, i8* %4131, align 1
  %conv7625 = sext i8 %4132 to i32
  %cmp7626 = icmp eq i32 %conv7625, 40
  br i1 %cmp7626, label %if.then.7628, label %if.else.7710

if.then.7628:                                     ; preds = %if.end.7624
  %4133 = load i8*, i8** %s, align 8
  %call7631 = call i8* @S_scan_str(i8* %4133, i32 0, i32 0)
  store i8* %call7631, i8** %s, align 8
  %4134 = load i8*, i8** %s, align 8
  %tobool7632 = icmp ne i8* %4134, null
  br i1 %tobool7632, label %if.end.7634, label %if.then.7633

if.then.7633:                                     ; preds = %if.then.7628
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.109, i32 0, i32 0))
  br label %if.end.7634

if.end.7634:                                      ; preds = %if.then.7633, %if.then.7628
  %4135 = load %struct.sv*, %struct.sv** @PL_lex_stuff, align 8
  %sv_any7635 = getelementptr inbounds %struct.sv, %struct.sv* %4135, i32 0, i32 0
  %4136 = load i8*, i8** %sv_any7635, align 8
  %4137 = bitcast i8* %4136 to %struct.xpv*
  %xpv_pv7636 = getelementptr inbounds %struct.xpv, %struct.xpv* %4137, i32 0, i32 0
  %4138 = load i8*, i8** %xpv_pv7636, align 8
  store i8* %4138, i8** %d, align 8
  store i32 0, i32* %tmp, align 4
  store i8 0, i8* %bad_proto, align 1
  %4139 = load i8*, i8** %d, align 8
  store i8* %4139, i8** %p7630, align 8
  br label %for.cond.7637

for.cond.7637:                                    ; preds = %for.inc.7669, %if.end.7634
  %4140 = load i8*, i8** %p7630, align 8
  %4141 = load i8, i8* %4140, align 1
  %tobool7638 = icmp ne i8 %4141, 0
  br i1 %tobool7638, label %for.body.7639, label %for.end.7671

for.body.7639:                                    ; preds = %for.cond.7637
  %4142 = load i8*, i8** %p7630, align 8
  %4143 = load i8, i8* %4142, align 1
  %conv7640 = sext i8 %4143 to i32
  %cmp7641 = icmp eq i32 %conv7640, 32
  br i1 %cmp7641, label %if.end.7668, label %lor.lhs.false.7643

lor.lhs.false.7643:                               ; preds = %for.body.7639
  %4144 = load i8*, i8** %p7630, align 8
  %4145 = load i8, i8* %4144, align 1
  %conv7644 = sext i8 %4145 to i32
  %cmp7645 = icmp eq i32 %conv7644, 9
  br i1 %cmp7645, label %if.end.7668, label %lor.lhs.false.7647

lor.lhs.false.7647:                               ; preds = %lor.lhs.false.7643
  %4146 = load i8*, i8** %p7630, align 8
  %4147 = load i8, i8* %4146, align 1
  %conv7648 = sext i8 %4147 to i32
  %cmp7649 = icmp eq i32 %conv7648, 10
  br i1 %cmp7649, label %if.end.7668, label %lor.lhs.false.7651

lor.lhs.false.7651:                               ; preds = %lor.lhs.false.7647
  %4148 = load i8*, i8** %p7630, align 8
  %4149 = load i8, i8* %4148, align 1
  %conv7652 = sext i8 %4149 to i32
  %cmp7653 = icmp eq i32 %conv7652, 13
  br i1 %cmp7653, label %if.end.7668, label %lor.lhs.false.7655

lor.lhs.false.7655:                               ; preds = %lor.lhs.false.7651
  %4150 = load i8*, i8** %p7630, align 8
  %4151 = load i8, i8* %4150, align 1
  %conv7656 = sext i8 %4151 to i32
  %cmp7657 = icmp eq i32 %conv7656, 12
  br i1 %cmp7657, label %if.end.7668, label %if.then.7659

if.then.7659:                                     ; preds = %lor.lhs.false.7655
  %4152 = load i8*, i8** %p7630, align 8
  %4153 = load i8, i8* %4152, align 1
  %4154 = load i32, i32* %tmp, align 4
  %inc7660 = add nsw i32 %4154, 1
  store i32 %inc7660, i32* %tmp, align 4
  %idxprom7661 = sext i32 %4154 to i64
  %4155 = load i8*, i8** %d, align 8
  %arrayidx7662 = getelementptr inbounds i8, i8* %4155, i64 %idxprom7661
  store i8 %4153, i8* %arrayidx7662, align 1
  %4156 = load i8*, i8** %p7630, align 8
  %4157 = load i8, i8* %4156, align 1
  %conv7663 = sext i8 %4157 to i32
  %call7664 = call i8* @strchr(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.110, i32 0, i32 0), i32 %conv7663)
  %tobool7665 = icmp ne i8* %call7664, null
  br i1 %tobool7665, label %if.end.7667, label %if.then.7666

if.then.7666:                                     ; preds = %if.then.7659
  store i8 1, i8* %bad_proto, align 1
  br label %if.end.7667

if.end.7667:                                      ; preds = %if.then.7666, %if.then.7659
  br label %if.end.7668

if.end.7668:                                      ; preds = %if.end.7667, %lor.lhs.false.7655, %lor.lhs.false.7651, %lor.lhs.false.7647, %lor.lhs.false.7643, %for.body.7639
  br label %for.inc.7669

for.inc.7669:                                     ; preds = %if.end.7668
  %4158 = load i8*, i8** %p7630, align 8
  %incdec.ptr7670 = getelementptr inbounds i8, i8* %4158, i32 1
  store i8* %incdec.ptr7670, i8** %p7630, align 8
  br label %for.cond.7637

for.end.7671:                                     ; preds = %for.cond.7637
  %4159 = load i32, i32* %tmp, align 4
  %idxprom7672 = sext i32 %4159 to i64
  %4160 = load i8*, i8** %d, align 8
  %arrayidx7673 = getelementptr inbounds i8, i8* %4160, i64 %idxprom7672
  store i8 0, i8* %arrayidx7673, align 1
  %4161 = load i8, i8* %bad_proto, align 1
  %conv7674 = sext i8 %4161 to i32
  %tobool7675 = icmp ne i32 %conv7674, 0
  br i1 %tobool7675, label %land.lhs.true.7676, label %if.end.7705

land.lhs.true.7676:                               ; preds = %for.end.7671
  %4162 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings7677 = getelementptr inbounds %struct.cop, %struct.cop* %4162, i32 0, i32 14
  %4163 = load %struct.sv*, %struct.sv** %cop_warnings7677, align 8
  %cmp7678 = icmp ne %struct.sv* %4163, null
  br i1 %cmp7678, label %land.lhs.true.7680, label %lor.lhs.false.7696

land.lhs.true.7680:                               ; preds = %land.lhs.true.7676
  %4164 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings7681 = getelementptr inbounds %struct.cop, %struct.cop* %4164, i32 0, i32 14
  %4165 = load %struct.sv*, %struct.sv** %cop_warnings7681, align 8
  %cmp7682 = icmp ne %struct.sv* %4165, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 2)
  br i1 %cmp7682, label %land.lhs.true.7684, label %lor.lhs.false.7696

land.lhs.true.7684:                               ; preds = %land.lhs.true.7680
  %4166 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings7685 = getelementptr inbounds %struct.cop, %struct.cop* %4166, i32 0, i32 14
  %4167 = load %struct.sv*, %struct.sv** %cop_warnings7685, align 8
  %cmp7686 = icmp eq %struct.sv* %4167, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 1)
  br i1 %cmp7686, label %if.then.7704, label %lor.lhs.false.7688

lor.lhs.false.7688:                               ; preds = %land.lhs.true.7684
  %4168 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings7689 = getelementptr inbounds %struct.cop, %struct.cop* %4168, i32 0, i32 14
  %4169 = load %struct.sv*, %struct.sv** %cop_warnings7689, align 8
  %sv_any7690 = getelementptr inbounds %struct.sv, %struct.sv* %4169, i32 0, i32 0
  %4170 = load i8*, i8** %sv_any7690, align 8
  %4171 = bitcast i8* %4170 to %struct.xpv*
  %xpv_pv7691 = getelementptr inbounds %struct.xpv, %struct.xpv* %4171, i32 0, i32 0
  %4172 = load i8*, i8** %xpv_pv7691, align 8
  %arrayidx7692 = getelementptr inbounds i8, i8* %4172, i64 7
  %4173 = load i8, i8* %arrayidx7692, align 1
  %conv7693 = sext i8 %4173 to i32
  %and7694 = and i32 %conv7693, 1
  %tobool7695 = icmp ne i32 %and7694, 0
  br i1 %tobool7695, label %if.then.7704, label %lor.lhs.false.7696

lor.lhs.false.7696:                               ; preds = %lor.lhs.false.7688, %land.lhs.true.7680, %land.lhs.true.7676
  %4174 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings7697 = getelementptr inbounds %struct.cop, %struct.cop* %4174, i32 0, i32 14
  %4175 = load %struct.sv*, %struct.sv** %cop_warnings7697, align 8
  %cmp7698 = icmp eq %struct.sv* %4175, null
  br i1 %cmp7698, label %land.lhs.true.7700, label %if.end.7705

land.lhs.true.7700:                               ; preds = %lor.lhs.false.7696
  %4176 = load i8, i8* @PL_dowarn, align 1
  %conv7701 = zext i8 %4176 to i32
  %and7702 = and i32 %conv7701, 1
  %tobool7703 = icmp ne i32 %and7702, 0
  br i1 %tobool7703, label %if.then.7704, label %if.end.7705

if.then.7704:                                     ; preds = %land.lhs.true.7700, %lor.lhs.false.7688, %land.lhs.true.7684
  %4177 = load %struct.sv*, %struct.sv** @PL_subname, align 8
  %4178 = load i8*, i8** %d, align 8
  call void (i32, i8*, ...) @Perl_warner(i32 28, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.111, i32 0, i32 0), %struct.sv* %4177, i8* %4178)
  br label %if.end.7705

if.end.7705:                                      ; preds = %if.then.7704, %land.lhs.true.7700, %lor.lhs.false.7696, %for.end.7671
  %4179 = load i32, i32* %tmp, align 4
  %conv7706 = sext i32 %4179 to i64
  %4180 = load %struct.sv*, %struct.sv** @PL_lex_stuff, align 8
  %sv_any7707 = getelementptr inbounds %struct.sv, %struct.sv* %4180, i32 0, i32 0
  %4181 = load i8*, i8** %sv_any7707, align 8
  %4182 = bitcast i8* %4181 to %struct.xpv*
  %xpv_cur7708 = getelementptr inbounds %struct.xpv, %struct.xpv* %4182, i32 0, i32 1
  store i64 %conv7706, i64* %xpv_cur7708, align 8
  store i8 1, i8* %have_proto, align 1
  %4183 = load i8*, i8** %s, align 8
  %call7709 = call i8* @S_skipspace(i8* %4183)
  store i8* %call7709, i8** %s, align 8
  br label %if.end.7711

if.else.7710:                                     ; preds = %if.end.7624
  store i8 0, i8* %have_proto, align 1
  br label %if.end.7711

if.end.7711:                                      ; preds = %if.else.7710, %if.end.7705
  %4184 = load i8*, i8** %s, align 8
  %4185 = load i8, i8* %4184, align 1
  %conv7712 = sext i8 %4185 to i32
  %cmp7713 = icmp eq i32 %conv7712, 58
  br i1 %cmp7713, label %land.lhs.true.7715, label %if.else.7721

land.lhs.true.7715:                               ; preds = %if.end.7711
  %4186 = load i8*, i8** %s, align 8
  %arrayidx7716 = getelementptr inbounds i8, i8* %4186, i64 1
  %4187 = load i8, i8* %arrayidx7716, align 1
  %conv7717 = sext i8 %4187 to i32
  %cmp7718 = icmp ne i32 %conv7717, 58
  br i1 %cmp7718, label %if.then.7720, label %if.else.7721

if.then.7720:                                     ; preds = %land.lhs.true.7715
  %4188 = load i32, i32* %attrful, align 4
  store i32 %4188, i32* @PL_expect, align 4
  br label %if.end.7739

if.else.7721:                                     ; preds = %land.lhs.true.7715, %if.end.7711
  %4189 = load i8*, i8** %s, align 8
  %4190 = load i8, i8* %4189, align 1
  %conv7722 = sext i8 %4190 to i32
  %cmp7723 = icmp ne i32 %conv7722, 123
  br i1 %cmp7723, label %land.lhs.true.7725, label %if.end.7738

land.lhs.true.7725:                               ; preds = %if.else.7721
  %4191 = load i32, i32* %key, align 4
  %cmp7726 = icmp eq i32 %4191, 206
  br i1 %cmp7726, label %if.then.7728, label %if.end.7738

if.then.7728:                                     ; preds = %land.lhs.true.7725
  %4192 = load i8, i8* %have_name, align 1
  %tobool7729 = icmp ne i8 %4192, 0
  br i1 %tobool7729, label %if.else.7731, label %if.then.7730

if.then.7730:                                     ; preds = %if.then.7728
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.112, i32 0, i32 0))
  br label %if.end.7737

if.else.7731:                                     ; preds = %if.then.7728
  %4193 = load i8*, i8** %s, align 8
  %4194 = load i8, i8* %4193, align 1
  %conv7732 = sext i8 %4194 to i32
  %cmp7733 = icmp ne i32 %conv7732, 59
  br i1 %cmp7733, label %if.then.7735, label %if.end.7736

if.then.7735:                                     ; preds = %if.else.7731
  %4195 = load %struct.sv*, %struct.sv** @PL_subname, align 8
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.113, i32 0, i32 0), %struct.sv* %4195)
  br label %if.end.7736

if.end.7736:                                      ; preds = %if.then.7735, %if.else.7731
  br label %if.end.7737

if.end.7737:                                      ; preds = %if.end.7736, %if.then.7730
  br label %if.end.7738

if.end.7738:                                      ; preds = %if.end.7737, %land.lhs.true.7725, %if.else.7721
  br label %if.end.7739

if.end.7739:                                      ; preds = %if.end.7738, %if.then.7720
  %4196 = load i8, i8* %have_proto, align 1
  %tobool7740 = icmp ne i8 %4196, 0
  br i1 %tobool7740, label %if.then.7741, label %if.end.7746

if.then.7741:                                     ; preds = %if.end.7739
  %4197 = load %struct.sv*, %struct.sv** @PL_lex_stuff, align 8
  %call7742 = call %struct.op* @Perl_newSVOP(i32 5, i32 0, %struct.sv* %4197)
  %4198 = load i32, i32* @PL_nexttoke, align 4
  %idxprom7743 = sext i32 %4198 to i64
  %arrayidx7744 = getelementptr inbounds [5 x %union.YYSTYPE], [5 x %union.YYSTYPE]* @PL_nextval, i32 0, i64 %idxprom7743
  %opval7745 = bitcast %union.YYSTYPE* %arrayidx7744 to %struct.op**
  store %struct.op* %call7742, %struct.op** %opval7745, align 8
  store %struct.sv* null, %struct.sv** @PL_lex_stuff, align 8
  call void @S_force_next(i32 260)
  br label %if.end.7746

if.end.7746:                                      ; preds = %if.then.7741, %if.end.7739
  %4199 = load i8, i8* %have_name, align 1
  %tobool7747 = icmp ne i8 %4199, 0
  br i1 %tobool7747, label %if.end.7751, label %if.then.7748

if.then.7748:                                     ; preds = %if.end.7746
  %4200 = load %struct.sv*, %struct.sv** @PL_subname, align 8
  %4201 = load %struct.hv*, %struct.hv** @PL_curstash, align 8
  %tobool7749 = icmp ne %struct.hv* %4201, null
  %cond7750 = select i1 %tobool7749, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.80, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.81, i32 0, i32 0)
  call void @Perl_sv_setpv(%struct.sv* %4200, i8* %cond7750)
  %4202 = load i8*, i8** %s, align 8
  store i8* %4202, i8** @PL_bufptr, align 8
  store i32 269, i32* %retval
  br label %return

if.end.7751:                                      ; preds = %if.end.7746
  %4203 = load i8*, i8** @PL_oldbufptr, align 8
  %4204 = load i64, i64* %tboffset, align 8
  %add.ptr7752 = getelementptr inbounds i8, i8* %4203, i64 %4204
  %call7753 = call i8* @S_force_word(i8* %add.ptr7752, i32 257, i32 0, i32 1, i32 1)
  %4205 = load i32, i32* %key, align 4
  %cmp7754 = icmp eq i32 %4205, 127
  br i1 %cmp7754, label %if.then.7756, label %if.end.7757

if.then.7756:                                     ; preds = %if.end.7751
  %4206 = load i8*, i8** %s, align 8
  store i8* %4206, i8** @PL_bufptr, align 8
  store i32 297, i32* %retval
  br label %return

if.end.7757:                                      ; preds = %if.end.7751
  %4207 = load i8*, i8** %s, align 8
  store i8* %4207, i8** @PL_bufptr, align 8
  store i32 268, i32* %retval
  br label %return

sw.bb.7758:                                       ; preds = %reserved_word
  call void @S_set_csh()
  %4208 = load i8*, i8** %s, align 8
  %call7759 = call i32 @S_lop(i32 284, i32 2, i8* %4208)
  store i32 %call7759, i32* %retval
  br label %return

sw.bb.7760:                                       ; preds = %reserved_word
  %4209 = load i8*, i8** %s, align 8
  %call7761 = call i32 @S_lop(i32 271, i32 1, i8* %4209)
  store i32 %call7761, i32* %retval
  br label %return

sw.bb.7762:                                       ; preds = %reserved_word
  %4210 = load i8*, i8** %s, align 8
  %call7763 = call i32 @S_lop(i32 346, i32 1, i8* %4210)
  store i32 %call7763, i32* %retval
  br label %return

sw.bb.7764:                                       ; preds = %reserved_word
  %4211 = load i8*, i8** %s, align 8
  %call7765 = call i32 @S_lop(i32 210, i32 1, i8* %4211)
  store i32 %call7765, i32* %retval
  br label %return

sw.bb.7766:                                       ; preds = %reserved_word
  %4212 = load i8*, i8** %s, align 8
  %call7767 = call i32 @S_lop(i32 211, i32 1, i8* %4212)
  store i32 %call7767, i32* %retval
  br label %return

sw.bb.7768:                                       ; preds = %reserved_word
  %4213 = load i8*, i8** %s, align 8
  %call7769 = call i32 @S_lop(i32 212, i32 1, i8* %4213)
  store i32 %call7769, i32* %retval
  br label %return

sw.bb.7770:                                       ; preds = %reserved_word
  %4214 = load i8*, i8** %s, align 8
  %call7771 = call i32 @S_lop(i32 213, i32 1, i8* %4214)
  store i32 %call7771, i32* %retval
  br label %return

sw.bb.7772:                                       ; preds = %reserved_word
  %4215 = load i8*, i8** %s, align 8
  %call7773 = call i8* @S_scan_trans(i8* %4215)
  store i8* %call7773, i8** %s, align 8
  %4216 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line7774 = getelementptr inbounds %struct.cop, %struct.cop* %4216, i32 0, i32 13
  %4217 = load i32, i32* %cop_line7774, align 4
  %4218 = load i32, i32* @PL_copline, align 4
  %cmp7775 = icmp ult i32 %4217, %4218
  br i1 %cmp7775, label %cond.true.7777, label %cond.false.7779

cond.true.7777:                                   ; preds = %sw.bb.7772
  %4219 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line7778 = getelementptr inbounds %struct.cop, %struct.cop* %4219, i32 0, i32 13
  %4220 = load i32, i32* %cop_line7778, align 4
  br label %cond.end.7780

cond.false.7779:                                  ; preds = %sw.bb.7772
  %4221 = load i32, i32* @PL_copline, align 4
  br label %cond.end.7780

cond.end.7780:                                    ; preds = %cond.false.7779, %cond.true.7777
  %cond7781 = phi i32 [ %4220, %cond.true.7777 ], [ %4221, %cond.false.7779 ]
  store i32 %cond7781, i32* @PL_copline, align 4
  store i32 0, i32* @PL_expect, align 4
  %4222 = load i8*, i8** %s, align 8
  store i8* %4222, i8** @PL_bufptr, align 8
  %call7782 = call i32 @S_sublex_start()
  store i32 %call7782, i32* %retval
  br label %return

sw.bb.7783:                                       ; preds = %reserved_word
  store i32 217, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %4223 = load i8*, i8** %s, align 8
  store i8* %4223, i8** @PL_bufptr, align 8
  %4224 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %4224, i8** @PL_last_uni, align 8
  store i16 217, i16* @PL_last_lop_op, align 2
  %4225 = load i8*, i8** %s, align 8
  %4226 = load i8, i8* %4225, align 1
  %conv7784 = sext i8 %4226 to i32
  %cmp7785 = icmp eq i32 %conv7784, 40
  br i1 %cmp7785, label %lor.end.7792, label %lor.rhs.7787

lor.rhs.7787:                                     ; preds = %sw.bb.7783
  %4227 = load i8*, i8** %s, align 8
  %call7788 = call i8* @S_skipspace(i8* %4227)
  store i8* %call7788, i8** %s, align 8
  %4228 = load i8*, i8** %s, align 8
  %4229 = load i8, i8* %4228, align 1
  %conv7789 = sext i8 %4229 to i32
  %cmp7790 = icmp eq i32 %conv7789, 40
  br label %lor.end.7792

lor.end.7792:                                     ; preds = %lor.rhs.7787, %sw.bb.7783
  %4230 = phi i1 [ true, %sw.bb.7783 ], [ %cmp7790, %lor.rhs.7787 ]
  %cond7794 = select i1 %4230, i32 283, i32 285
  store i32 %cond7794, i32* %retval
  br label %return

sw.bb.7795:                                       ; preds = %reserved_word
  store i32 277, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %4231 = load i8*, i8** %s, align 8
  store i8* %4231, i8** @PL_bufptr, align 8
  %4232 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %4232, i8** @PL_last_uni, align 8
  store i16 277, i16* @PL_last_lop_op, align 2
  %4233 = load i8*, i8** %s, align 8
  %4234 = load i8, i8* %4233, align 1
  %conv7796 = sext i8 %4234 to i32
  %cmp7797 = icmp eq i32 %conv7796, 40
  br i1 %cmp7797, label %lor.end.7804, label %lor.rhs.7799

lor.rhs.7799:                                     ; preds = %sw.bb.7795
  %4235 = load i8*, i8** %s, align 8
  %call7800 = call i8* @S_skipspace(i8* %4235)
  store i8* %call7800, i8** %s, align 8
  %4236 = load i8*, i8** %s, align 8
  %4237 = load i8, i8* %4236, align 1
  %conv7801 = sext i8 %4237 to i32
  %cmp7802 = icmp eq i32 %conv7801, 40
  br label %lor.end.7804

lor.end.7804:                                     ; preds = %lor.rhs.7799, %sw.bb.7795
  %4238 = phi i1 [ true, %sw.bb.7795 ], [ %cmp7802, %lor.rhs.7799 ]
  %cond7806 = select i1 %4238, i32 283, i32 285
  store i32 %cond7806, i32* %retval
  br label %return

sw.bb.7807:                                       ; preds = %reserved_word
  %4239 = load i8*, i8** %s, align 8
  %call7808 = call i32 @S_lop(i32 197, i32 1, i8* %4239)
  store i32 %call7808, i32* %retval
  br label %return

sw.bb.7809:                                       ; preds = %reserved_word
  store i32 199, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %4240 = load i8*, i8** %s, align 8
  store i8* %4240, i8** @PL_bufptr, align 8
  %4241 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %4241, i8** @PL_last_uni, align 8
  store i16 199, i16* @PL_last_lop_op, align 2
  %4242 = load i8*, i8** %s, align 8
  %4243 = load i8, i8* %4242, align 1
  %conv7810 = sext i8 %4243 to i32
  %cmp7811 = icmp eq i32 %conv7810, 40
  br i1 %cmp7811, label %lor.end.7818, label %lor.rhs.7813

lor.rhs.7813:                                     ; preds = %sw.bb.7809
  %4244 = load i8*, i8** %s, align 8
  %call7814 = call i8* @S_skipspace(i8* %4244)
  store i8* %call7814, i8** %s, align 8
  %4245 = load i8*, i8** %s, align 8
  %4246 = load i8, i8* %4245, align 1
  %conv7815 = sext i8 %4246 to i32
  %cmp7816 = icmp eq i32 %conv7815, 40
  br label %lor.end.7818

lor.end.7818:                                     ; preds = %lor.rhs.7813, %sw.bb.7809
  %4247 = phi i1 [ true, %sw.bb.7809 ], [ %cmp7816, %lor.rhs.7813 ]
  %cond7820 = select i1 %4247, i32 283, i32 285
  store i32 %cond7820, i32* %retval
  br label %return

sw.bb.7821:                                       ; preds = %reserved_word
  store i32 292, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 0, i32* @PL_expect, align 4
  %4248 = load i8*, i8** %s, align 8
  store i8* %4248, i8** @PL_bufptr, align 8
  store i32 282, i32* %retval
  br label %return

sw.bb.7822:                                       ; preds = %reserved_word
  store i32 293, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 0, i32* @PL_expect, align 4
  %4249 = load i8*, i8** %s, align 8
  store i8* %4249, i8** @PL_bufptr, align 8
  store i32 282, i32* %retval
  br label %return

sw.bb.7823:                                       ; preds = %reserved_word
  %4250 = load i8*, i8** %s, align 8
  %call7824 = call i32 @S_lop(i32 219, i32 1, i8* %4250)
  store i32 %call7824, i32* %retval
  br label %return

sw.bb.7825:                                       ; preds = %reserved_word
  store i32 122, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %4251 = load i8*, i8** %s, align 8
  store i8* %4251, i8** @PL_bufptr, align 8
  %4252 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %4252, i8** @PL_last_uni, align 8
  store i16 122, i16* @PL_last_lop_op, align 2
  %4253 = load i8*, i8** %s, align 8
  %4254 = load i8, i8* %4253, align 1
  %conv7826 = sext i8 %4254 to i32
  %cmp7827 = icmp eq i32 %conv7826, 40
  br i1 %cmp7827, label %lor.end.7834, label %lor.rhs.7829

lor.rhs.7829:                                     ; preds = %sw.bb.7825
  %4255 = load i8*, i8** %s, align 8
  %call7830 = call i8* @S_skipspace(i8* %4255)
  store i8* %call7830, i8** %s, align 8
  %4256 = load i8*, i8** %s, align 8
  %4257 = load i8, i8* %4256, align 1
  %conv7831 = sext i8 %4257 to i32
  %cmp7832 = icmp eq i32 %conv7831, 40
  br label %lor.end.7834

lor.end.7834:                                     ; preds = %lor.rhs.7829, %sw.bb.7825
  %4258 = phi i1 [ true, %sw.bb.7825 ], [ %cmp7832, %lor.rhs.7829 ]
  %cond7836 = select i1 %4258, i32 283, i32 285
  store i32 %cond7836, i32* %retval
  br label %return

sw.bb.7837:                                       ; preds = %reserved_word
  store i32 120, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %4259 = load i8*, i8** %s, align 8
  store i8* %4259, i8** @PL_bufptr, align 8
  %4260 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %4260, i8** @PL_last_uni, align 8
  store i16 120, i16* @PL_last_lop_op, align 2
  %4261 = load i8*, i8** %s, align 8
  %4262 = load i8, i8* %4261, align 1
  %conv7838 = sext i8 %4262 to i32
  %cmp7839 = icmp eq i32 %conv7838, 40
  br i1 %cmp7839, label %lor.end.7846, label %lor.rhs.7841

lor.rhs.7841:                                     ; preds = %sw.bb.7837
  %4263 = load i8*, i8** %s, align 8
  %call7842 = call i8* @S_skipspace(i8* %4263)
  store i8* %call7842, i8** %s, align 8
  %4264 = load i8*, i8** %s, align 8
  %4265 = load i8, i8* %4264, align 1
  %conv7843 = sext i8 %4265 to i32
  %cmp7844 = icmp eq i32 %conv7843, 40
  br label %lor.end.7846

lor.end.7846:                                     ; preds = %lor.rhs.7841, %sw.bb.7837
  %4266 = phi i1 [ true, %sw.bb.7837 ], [ %cmp7844, %lor.rhs.7841 ]
  %cond7848 = select i1 %4266, i32 283, i32 285
  store i32 %cond7848, i32* %retval
  br label %return

sw.bb.7849:                                       ; preds = %reserved_word
  store i32 198, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %4267 = load i8*, i8** %s, align 8
  store i8* %4267, i8** @PL_bufptr, align 8
  %4268 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %4268, i8** @PL_last_uni, align 8
  store i16 198, i16* @PL_last_lop_op, align 2
  %4269 = load i8*, i8** %s, align 8
  %4270 = load i8, i8* %4269, align 1
  %conv7850 = sext i8 %4270 to i32
  %cmp7851 = icmp eq i32 %conv7850, 40
  br i1 %cmp7851, label %lor.end.7858, label %lor.rhs.7853

lor.rhs.7853:                                     ; preds = %sw.bb.7849
  %4271 = load i8*, i8** %s, align 8
  %call7854 = call i8* @S_skipspace(i8* %4271)
  store i8* %call7854, i8** %s, align 8
  %4272 = load i8*, i8** %s, align 8
  %4273 = load i8, i8* %4272, align 1
  %conv7855 = sext i8 %4273 to i32
  %cmp7856 = icmp eq i32 %conv7855, 40
  br label %lor.end.7858

lor.end.7858:                                     ; preds = %lor.rhs.7853, %sw.bb.7849
  %4274 = phi i1 [ true, %sw.bb.7849 ], [ %cmp7856, %lor.rhs.7853 ]
  %cond7860 = select i1 %4274, i32 283, i32 285
  store i32 %cond7860, i32* %retval
  br label %return

sw.bb.7861:                                       ; preds = %reserved_word
  %4275 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line7862 = getelementptr inbounds %struct.cop, %struct.cop* %4275, i32 0, i32 13
  %4276 = load i32, i32* %cop_line7862, align 4
  store i32 %4276, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %4277 = load i8*, i8** %s, align 8
  store i8* %4277, i8** @PL_bufptr, align 8
  store i32 273, i32* %retval
  br label %return

sw.bb.7863:                                       ; preds = %reserved_word
  %4278 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line7864 = getelementptr inbounds %struct.cop, %struct.cop* %4278, i32 0, i32 13
  %4279 = load i32, i32* %cop_line7864, align 4
  store i32 %4279, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %4280 = load i8*, i8** %s, align 8
  store i8* %4280, i8** @PL_bufptr, align 8
  store i32 275, i32* %retval
  br label %return

sw.bb.7865:                                       ; preds = %reserved_word
  %4281 = load i8*, i8** %s, align 8
  %call7866 = call i32 @S_lop(i32 266, i32 1, i8* %4281)
  store i32 %call7866, i32* %retval
  br label %return

sw.bb.7867:                                       ; preds = %reserved_word
  store i32 43, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %4282 = load i8*, i8** %s, align 8
  store i8* %4282, i8** @PL_bufptr, align 8
  %4283 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %4283, i8** @PL_last_uni, align 8
  store i16 43, i16* @PL_last_lop_op, align 2
  %4284 = load i8*, i8** %s, align 8
  %4285 = load i8, i8* %4284, align 1
  %conv7868 = sext i8 %4285 to i32
  %cmp7869 = icmp eq i32 %conv7868, 40
  br i1 %cmp7869, label %lor.end.7876, label %lor.rhs.7871

lor.rhs.7871:                                     ; preds = %sw.bb.7867
  %4286 = load i8*, i8** %s, align 8
  %call7872 = call i8* @S_skipspace(i8* %4286)
  store i8* %call7872, i8** %s, align 8
  %4287 = load i8*, i8** %s, align 8
  %4288 = load i8, i8* %4287, align 1
  %conv7873 = sext i8 %4288 to i32
  %cmp7874 = icmp eq i32 %conv7873, 40
  br label %lor.end.7876

lor.end.7876:                                     ; preds = %lor.rhs.7871, %sw.bb.7867
  %4289 = phi i1 [ true, %sw.bb.7867 ], [ %cmp7874, %lor.rhs.7871 ]
  %cond7878 = select i1 %4289, i32 283, i32 285
  store i32 %cond7878, i32* %retval
  br label %return

sw.bb.7879:                                       ; preds = %reserved_word
  %4290 = load i8*, i8** %s, align 8
  %call7880 = call i32 @S_lop(i32 137, i32 1, i8* %4290)
  store i32 %call7880, i32* %retval
  br label %return

sw.bb.7881:                                       ; preds = %reserved_word
  %4291 = load i8*, i8** %s, align 8
  %call7882 = call i32 @S_lop(i32 268, i32 1, i8* %4291)
  store i32 %call7882, i32* %retval
  br label %return

sw.bb.7883:                                       ; preds = %reserved_word
  store i32 195, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %4292 = load i8*, i8** %s, align 8
  store i8* %4292, i8** @PL_bufptr, align 8
  %4293 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %4293, i8** @PL_last_uni, align 8
  store i16 195, i16* @PL_last_lop_op, align 2
  %4294 = load i8*, i8** %s, align 8
  %4295 = load i8, i8* %4294, align 1
  %conv7884 = sext i8 %4295 to i32
  %cmp7885 = icmp eq i32 %conv7884, 40
  br i1 %cmp7885, label %lor.end.7892, label %lor.rhs.7887

lor.rhs.7887:                                     ; preds = %sw.bb.7883
  %4296 = load i8*, i8** %s, align 8
  %call7888 = call i8* @S_skipspace(i8* %4296)
  store i8* %call7888, i8** %s, align 8
  %4297 = load i8*, i8** %s, align 8
  %4298 = load i8, i8* %4297, align 1
  %conv7889 = sext i8 %4298 to i32
  %cmp7890 = icmp eq i32 %conv7889, 40
  br label %lor.end.7892

lor.end.7892:                                     ; preds = %lor.rhs.7887, %sw.bb.7883
  %4299 = phi i1 [ true, %sw.bb.7883 ], [ %cmp7890, %lor.rhs.7887 ]
  %cond7894 = select i1 %4299, i32 283, i32 285
  store i32 %cond7894, i32* %retval
  br label %return

sw.bb.7895:                                       ; preds = %reserved_word
  %4300 = load i8*, i8** %s, align 8
  %call7896 = call i32 @S_lop(i32 149, i32 1, i8* %4300)
  store i32 %call7896, i32* %retval
  br label %return

sw.bb.7897:                                       ; preds = %reserved_word
  %4301 = load i32, i32* @PL_expect, align 4
  %cmp7898 = icmp ne i32 %4301, 3
  br i1 %cmp7898, label %if.then.7900, label %if.end.7902

if.then.7900:                                     ; preds = %sw.bb.7897
  %call7901 = call i32 @Perl_yyerror(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.114, i32 0, i32 0))
  br label %if.end.7902

if.end.7902:                                      ; preds = %if.then.7900, %sw.bb.7897
  %4302 = load i8*, i8** %s, align 8
  %call7903 = call i8* @S_skipspace(i8* %4302)
  store i8* %call7903, i8** %s, align 8
  %4303 = load i8*, i8** %s, align 8
  %4304 = load i8, i8* %4303, align 1
  %conv7904 = sext i8 %4304 to i32
  %cmp7905 = icmp sge i32 %conv7904, 48
  br i1 %cmp7905, label %land.lhs.true.7907, label %lor.lhs.false.7911

land.lhs.true.7907:                               ; preds = %if.end.7902
  %4305 = load i8*, i8** %s, align 8
  %4306 = load i8, i8* %4305, align 1
  %conv7908 = sext i8 %4306 to i32
  %cmp7909 = icmp sle i32 %conv7908, 57
  br i1 %cmp7909, label %if.then.7925, label %lor.lhs.false.7911

lor.lhs.false.7911:                               ; preds = %land.lhs.true.7907, %if.end.7902
  %4307 = load i8*, i8** %s, align 8
  %4308 = load i8, i8* %4307, align 1
  %conv7912 = sext i8 %4308 to i32
  %cmp7913 = icmp eq i32 %conv7912, 118
  br i1 %cmp7913, label %land.lhs.true.7915, label %if.else.7948

land.lhs.true.7915:                               ; preds = %lor.lhs.false.7911
  %4309 = load i8*, i8** %s, align 8
  %arrayidx7916 = getelementptr inbounds i8, i8* %4309, i64 1
  %4310 = load i8, i8* %arrayidx7916, align 1
  %conv7917 = sext i8 %4310 to i32
  %cmp7918 = icmp sge i32 %conv7917, 48
  br i1 %cmp7918, label %land.lhs.true.7920, label %if.else.7948

land.lhs.true.7920:                               ; preds = %land.lhs.true.7915
  %4311 = load i8*, i8** %s, align 8
  %arrayidx7921 = getelementptr inbounds i8, i8* %4311, i64 1
  %4312 = load i8, i8* %arrayidx7921, align 1
  %conv7922 = sext i8 %4312 to i32
  %cmp7923 = icmp sle i32 %conv7922, 57
  br i1 %cmp7923, label %if.then.7925, label %if.else.7948

if.then.7925:                                     ; preds = %land.lhs.true.7920, %land.lhs.true.7907
  %4313 = load i8*, i8** %s, align 8
  %call7926 = call i8* @S_force_version(i8* %4313, i32 1)
  store i8* %call7926, i8** %s, align 8
  %4314 = load i8*, i8** %s, align 8
  %4315 = load i8, i8* %4314, align 1
  %conv7927 = sext i8 %4315 to i32
  %cmp7928 = icmp eq i32 %conv7927, 59
  br i1 %cmp7928, label %if.then.7935, label %lor.lhs.false.7930

lor.lhs.false.7930:                               ; preds = %if.then.7925
  %4316 = load i8*, i8** %s, align 8
  %call7931 = call i8* @S_skipspace(i8* %4316)
  store i8* %call7931, i8** %s, align 8
  %4317 = load i8*, i8** %s, align 8
  %4318 = load i8, i8* %4317, align 1
  %conv7932 = sext i8 %4318 to i32
  %cmp7933 = icmp eq i32 %conv7932, 59
  br i1 %cmp7933, label %if.then.7935, label %if.else.7939

if.then.7935:                                     ; preds = %lor.lhs.false.7930, %if.then.7925
  %4319 = load i32, i32* @PL_nexttoke, align 4
  %idxprom7936 = sext i32 %4319 to i64
  %arrayidx7937 = getelementptr inbounds [5 x %union.YYSTYPE], [5 x %union.YYSTYPE]* @PL_nextval, i32 0, i64 %idxprom7936
  %opval7938 = bitcast %union.YYSTYPE* %arrayidx7937 to %struct.op**
  store %struct.op* null, %struct.op** %opval7938, align 8
  call void @S_force_next(i32 257)
  br label %if.end.7947

if.else.7939:                                     ; preds = %lor.lhs.false.7930
  %4320 = load i8*, i8** %s, align 8
  %4321 = load i8, i8* %4320, align 1
  %conv7940 = sext i8 %4321 to i32
  %cmp7941 = icmp eq i32 %conv7940, 118
  br i1 %cmp7941, label %if.then.7943, label %if.end.7946

if.then.7943:                                     ; preds = %if.else.7939
  %4322 = load i8*, i8** %s, align 8
  %call7944 = call i8* @S_force_word(i8* %4322, i32 257, i32 0, i32 1, i32 0)
  store i8* %call7944, i8** %s, align 8
  %4323 = load i8*, i8** %s, align 8
  %call7945 = call i8* @S_force_version(i8* %4323, i32 0)
  store i8* %call7945, i8** %s, align 8
  br label %if.end.7946

if.end.7946:                                      ; preds = %if.then.7943, %if.else.7939
  br label %if.end.7947

if.end.7947:                                      ; preds = %if.end.7946, %if.then.7935
  br label %if.end.7951

if.else.7948:                                     ; preds = %land.lhs.true.7920, %land.lhs.true.7915, %lor.lhs.false.7911
  %4324 = load i8*, i8** %s, align 8
  %call7949 = call i8* @S_force_word(i8* %4324, i32 257, i32 0, i32 1, i32 0)
  store i8* %call7949, i8** %s, align 8
  %4325 = load i8*, i8** %s, align 8
  %call7950 = call i8* @S_force_version(i8* %4325, i32 0)
  store i8* %call7950, i8** %s, align 8
  br label %if.end.7951

if.end.7951:                                      ; preds = %if.else.7948, %if.end.7947
  store i32 1, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %4326 = load i8*, i8** %s, align 8
  store i8* %4326, i8** @PL_bufptr, align 8
  store i32 271, i32* %retval
  br label %return

sw.bb.7952:                                       ; preds = %reserved_word
  store i32 130, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %4327 = load i8*, i8** %s, align 8
  store i8* %4327, i8** @PL_bufptr, align 8
  %4328 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %4328, i8** @PL_last_uni, align 8
  store i16 130, i16* @PL_last_lop_op, align 2
  %4329 = load i8*, i8** %s, align 8
  %4330 = load i8, i8* %4329, align 1
  %conv7953 = sext i8 %4330 to i32
  %cmp7954 = icmp eq i32 %conv7953, 40
  br i1 %cmp7954, label %lor.end.7961, label %lor.rhs.7956

lor.rhs.7956:                                     ; preds = %sw.bb.7952
  %4331 = load i8*, i8** %s, align 8
  %call7957 = call i8* @S_skipspace(i8* %4331)
  store i8* %call7957, i8** %s, align 8
  %4332 = load i8*, i8** %s, align 8
  %4333 = load i8, i8* %4332, align 1
  %conv7958 = sext i8 %4333 to i32
  %cmp7959 = icmp eq i32 %conv7958, 40
  br label %lor.end.7961

lor.end.7961:                                     ; preds = %lor.rhs.7956, %sw.bb.7952
  %4334 = phi i1 [ true, %sw.bb.7952 ], [ %cmp7959, %lor.rhs.7956 ]
  %cond7963 = select i1 %4334, i32 283, i32 285
  store i32 %cond7963, i32* %retval
  br label %return

sw.bb.7964:                                       ; preds = %reserved_word
  %4335 = load i8*, i8** %s, align 8
  %call7965 = call i32 @S_lop(i32 112, i32 1, i8* %4335)
  store i32 %call7965, i32* %retval
  br label %return

sw.bb.7966:                                       ; preds = %reserved_word
  %4336 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line7967 = getelementptr inbounds %struct.cop, %struct.cop* %4336, i32 0, i32 13
  %4337 = load i32, i32* %cop_line7967, align 4
  store i32 %4337, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %4338 = load i8*, i8** %s, align 8
  store i8* %4338, i8** @PL_bufptr, align 8
  store i32 272, i32* %retval
  br label %return

sw.bb.7968:                                       ; preds = %reserved_word
  %4339 = load i32, i32* @PL_hints, align 4
  %or7969 = or i32 %4339, 256
  store i32 %or7969, i32* @PL_hints, align 4
  %4340 = load i8*, i8** %s, align 8
  %call7970 = call i32 @S_lop(i32 170, i32 1, i8* %4340)
  store i32 %call7970, i32* %retval
  br label %return

sw.bb.7971:                                       ; preds = %reserved_word
  store i32 282, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 0, i32* @PL_expect, align 4
  %4341 = load i8*, i8** %s, align 8
  store i8* %4341, i8** @PL_bufptr, align 8
  store i32 282, i32* %retval
  br label %return

sw.bb.7972:                                       ; preds = %reserved_word
  %4342 = load i8*, i8** %s, align 8
  %call7973 = call i32 @S_lop(i32 283, i32 1, i8* %4342)
  store i32 %call7973, i32* %retval
  br label %return

sw.bb.7974:                                       ; preds = %reserved_word
  store i32 4, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 0, i32* @PL_expect, align 4
  %4343 = load i8*, i8** %s, align 8
  store i8* %4343, i8** @PL_bufptr, align 8
  store i32 282, i32* %retval
  br label %return

sw.bb.7975:                                       ; preds = %reserved_word
  %call7976 = call %struct.gv* @Perl_gv_fetchpv(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.115, i32 0, i32 0), i32 1, i32 4)
  store i32 206, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %4344 = load i8*, i8** %s, align 8
  store i8* %4344, i8** @PL_bufptr, align 8
  %4345 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %4345, i8** @PL_last_uni, align 8
  store i16 206, i16* @PL_last_lop_op, align 2
  %4346 = load i8*, i8** %s, align 8
  %4347 = load i8, i8* %4346, align 1
  %conv7977 = sext i8 %4347 to i32
  %cmp7978 = icmp eq i32 %conv7977, 40
  br i1 %cmp7978, label %lor.end.7985, label %lor.rhs.7980

lor.rhs.7980:                                     ; preds = %sw.bb.7975
  %4348 = load i8*, i8** %s, align 8
  %call7981 = call i8* @S_skipspace(i8* %4348)
  store i8* %call7981, i8** %s, align 8
  %4349 = load i8*, i8** %s, align 8
  %4350 = load i8, i8* %4349, align 1
  %conv7982 = sext i8 %4350 to i32
  %cmp7983 = icmp eq i32 %conv7982, 40
  br label %lor.end.7985

lor.end.7985:                                     ; preds = %lor.rhs.7980, %sw.bb.7975
  %4351 = phi i1 [ true, %sw.bb.7975 ], [ %cmp7983, %lor.rhs.7980 ]
  %cond7987 = select i1 %4351, i32 283, i32 285
  store i32 %cond7987, i32* %retval
  br label %return

sw.bb.7988:                                       ; preds = %reserved_word
  %4352 = load i32, i32* @PL_expect, align 4
  %cmp7989 = icmp eq i32 %4352, 0
  br i1 %cmp7989, label %if.then.7991, label %if.end.7993

if.then.7991:                                     ; preds = %sw.bb.7988
  store i32 61, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %4353 = load i8*, i8** %s, align 8
  store i8* %4353, i8** @PL_bufptr, align 8
  %call7992 = call i32 @S_ao(i32 289)
  store i32 %call7992, i32* %retval
  br label %return

if.end.7993:                                      ; preds = %sw.bb.7988
  call void @S_check_uni()
  br label %just_a_word

sw.bb.7994:                                       ; preds = %reserved_word
  store i32 161, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 1, i32* @PL_expect, align 4
  %4354 = load i8*, i8** %s, align 8
  store i8* %4354, i8** @PL_bufptr, align 8
  store i32 300, i32* %retval
  br label %return

sw.bb.7995:                                       ; preds = %reserved_word
  %4355 = load i8*, i8** %s, align 8
  %call7996 = call i8* @S_scan_trans(i8* %4355)
  store i8* %call7996, i8** %s, align 8
  %4356 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line7997 = getelementptr inbounds %struct.cop, %struct.cop* %4356, i32 0, i32 13
  %4357 = load i32, i32* %cop_line7997, align 4
  %4358 = load i32, i32* @PL_copline, align 4
  %cmp7998 = icmp ult i32 %4357, %4358
  br i1 %cmp7998, label %cond.true.8000, label %cond.false.8002

cond.true.8000:                                   ; preds = %sw.bb.7995
  %4359 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line8001 = getelementptr inbounds %struct.cop, %struct.cop* %4359, i32 0, i32 13
  %4360 = load i32, i32* %cop_line8001, align 4
  br label %cond.end.8003

cond.false.8002:                                  ; preds = %sw.bb.7995
  %4361 = load i32, i32* @PL_copline, align 4
  br label %cond.end.8003

cond.end.8003:                                    ; preds = %cond.false.8002, %cond.true.8000
  %cond8004 = phi i32 [ %4360, %cond.true.8000 ], [ %4361, %cond.false.8002 ]
  store i32 %cond8004, i32* @PL_copline, align 4
  store i32 0, i32* @PL_expect, align 4
  %4362 = load i8*, i8** %s, align 8
  store i8* %4362, i8** @PL_bufptr, align 8
  %call8005 = call i32 @S_sublex_start()
  store i32 %call8005, i32* %retval
  br label %return

return:                                           ; preds = %cond.end.8003, %sw.bb.7994, %if.then.7991, %lor.end.7985, %sw.bb.7974, %sw.bb.7972, %sw.bb.7971, %sw.bb.7968, %sw.bb.7966, %sw.bb.7964, %lor.end.7961, %if.end.7951, %sw.bb.7895, %lor.end.7892, %sw.bb.7881, %sw.bb.7879, %lor.end.7876, %sw.bb.7865, %sw.bb.7863, %sw.bb.7861, %lor.end.7858, %lor.end.7846, %lor.end.7834, %sw.bb.7823, %sw.bb.7822, %sw.bb.7821, %lor.end.7818, %sw.bb.7807, %lor.end.7804, %lor.end.7792, %cond.end.7780, %sw.bb.7770, %sw.bb.7768, %sw.bb.7766, %sw.bb.7764, %sw.bb.7762, %sw.bb.7760, %sw.bb.7758, %if.end.7757, %if.then.7756, %if.then.7748, %if.end.7623, %sw.bb.7515, %lor.end.7512, %lor.end.7500, %lor.end.7488, %lor.end.7476, %sw.bb.7465, %sw.bb.7463, %sw.bb.7461, %if.end.7458, %sw.bb.7446, %sw.bb.7444, %lor.end.7441, %lor.end.7429, %sw.bb.7418, %sw.bb.7416, %sw.bb.7414, %sw.bb.7412, %sw.bb.7410, %lor.end.7407, %sw.bb.7396, %sw.bb.7394, %sw.bb.7393, %sw.bb.7392, %lor.end.7389, %lor.end.7377, %lor.end.7365, %lor.end.7353, %sw.bb.7342, %sw.bb.7340, %sw.bb.7338, %sw.bb.7336, %sw.bb.7334, %sw.bb.7332, %sw.bb.7330, %sw.bb.7328, %lor.end.7325, %lor.end.7313, %if.else.7303, %cond.end.7300, %lor.end.7287, %lor.end.7275, %sw.bb.7264, %sw.bb.7262, %lor.end.7259, %lor.end.7247, %lor.end.7235, %lor.end.7223, %sw.bb.7212, %sw.bb.7210, %lor.end.7207, %lor.end.7195, %sw.bb.7184, %sw.bb.7182, %lor.end.7179, %lor.end.7167, %sw.bb.7063, %cond.end.7060, %cond.end.7046, %cond.end.7035, %if.end.7015, %lor.end.6818, %cond.end.6806, %sw.bb.6793, %sw.bb.6791, %sw.bb.6789, %lor.end.6786, %lor.end.6774, %sw.bb.6763, %lor.end.6760, %sw.bb.6749, %sw.bb.6747, %sw.bb.6745, %lor.end.6742, %lor.end.6730, %sw.bb.6720, %if.end.6718, %if.else.6525, %if.then.6524, %if.end.6512, %sw.bb.6506, %sw.bb.6504, %if.end.6503, %sw.bb.6430, %sw.bb.6428, %sw.bb.6426, %sw.bb.6424, %sw.bb.6422, %sw.bb.6420, %cond.end.6417, %lor.end.6406, %lor.end.6394, %sw.bb.6383, %sw.bb.6381, %lor.end.6378, %lor.end.6366, %sw.bb.6356, %sw.bb.6355, %lor.end.6352, %sw.bb.6342, %lor.end.6339, %lor.end.6327, %sw.bb.6316, %sw.bb.6314, %lor.end.6311, %sw.bb.6300, %sw.bb.6298, %lor.end.6295, %sw.bb.6284, %sw.bb.6282, %lor.end.6279, %sw.bb.6268, %sw.bb.6267, %lor.end.6264, %lor.end.6252, %sw.bb.6242, %sw.bb.6240, %lor.end.6237, %sw.bb.6227, %sw.bb.6225, %sw.bb.6223, %sw.bb.6222, %sw.bb.6220, %lor.end.6217, %sw.bb.6207, %sw.bb.6205, %lor.end.6202, %lor.end.6190, %lor.end.6178, %lor.end.6166, %sw.bb.6156, %sw.bb.6155, %sw.bb.6153, %lor.end.6150, %sw.bb.6139, %lor.end.6136, %sw.bb.6126, %lor.end.6123, %lor.end.6111, %sw.bb.6100, %sw.bb.6098, %sw.bb.6097, %sw.bb.6096, %sw.bb.6094, %lor.end.6091, %sw.bb.6080, %sw.bb.6079, %sw.bb.6077, %if.end.6076, %sw.bb.5886, %sw.bb.5885, %sw.bb.5884, %sw.bb.5883, %sw.bb.5882, %sw.bb.5881, %sw.bb.5879, %lor.end.5876, %lor.end.5864, %lor.end.5852, %lor.end.5840, %lor.end.5823, %lor.end.5811, %sw.bb.5801, %sw.bb.5799, %sw.bb.5798, %sw.bb.5796, %lor.end.5793, %sw.bb.5781, %lor.end.5778, %lor.end.5766, %sw.bb.5754, %if.end.5753, %if.then.5746, %lor.end.5738, %lor.end.5726, %lor.end.5714, %sw.bb.5703, %sw.bb.5701, %sw.bb.5699, %sw.bb.5697, %lor.end.5694, %sw.bb.5684, %lor.end.5681, %lor.end.5669, %lor.end.5657, %sw.bb.5646, %lor.end.5643, %sw.bb.5632, %sw.bb.5630, %sw.bb.5628, %sw.bb.5626, %sw.bb.5625, %sw.bb.5623, %lor.end.5620, %lor.end.5608, %cond.end.5410, %cond.end.5393, %cond.end.5380, %if.end.5346, %if.end.5238, %if.then.5234, %if.then.5218, %cond.end.5207, %land.end.5168, %if.then.5115, %if.then.5055, %if.end.5030, %cond.end.4975, %if.then.4887, %cond.end.4446, %cond.end.4389, %if.then.4280, %cond.end.4261, %cond.end.4220, %if.end.4164, %cond.end.4115, %cond.end.4097, %if.then.4047, %cond.end.4035, %if.then.4022, %cond.end.4011, %if.end.3996, %if.end.3991, %if.end.3934, %if.then.3932, %cond.end.3924, %cond.end.3830, %if.then.3673, %if.end.3665, %cond.end.3053, %if.end.3035, %if.end.3022, %if.then.3021, %if.then.2943, %if.end.2925, %if.then.2924, %if.then.2919, %if.end.2911, %if.end.2909, %if.then.2908, %if.then.2898, %cond.end.2889, %if.end.2859, %if.then.2858, %if.then.2854, %if.end.2847, %if.then.2706, %if.then.2702, %if.then.2698, %if.end.2689, %if.then.2687, %cond.end.2679, %if.else.2671, %if.end.2664, %if.then.2573, %if.end.2566, %if.then.2563, %if.then.2535, %if.end.2507, %if.then.2471, %if.then.2122, %if.end.1956, %if.end.1786, %if.then.1773, %cond.end.1759, %cond.end.1716, %if.then.1708, %cond.end.1697, %if.end.1688, %sw.epilog.1678, %if.end.1677, %if.end.1671, %if.end.1534, %sw.bb.1422, %sw.bb.1417, %cond.end.1415, %if.then.1407, %if.then.1401, %if.end.1396, %if.then.1393, %cond.end.1386, %if.then.1378, %if.end.1371, %if.then.1328, %if.else.1324, %cond.end.1322, %if.end.1304, %if.then.1261, %cond.end.1255, %if.then.1247, %if.then.1241, %if.else.1184, %cond.end.1182, %if.then.1160, %if.then.1123, %if.then.1035, %if.then.982, %if.end.463, %if.end.319, %if.end.255, %if.end.249, %if.else.247, %if.then.245, %if.then.210, %if.then.192, %if.end.183, %if.then.181, %if.then.158, %sw.bb.153, %if.else.151, %if.then.149, %if.then.84, %if.then.56, %if.end.44, %if.end.38, %if.end.8, %if.then
  %4363 = load i32, i32* %retval
  ret i32 %4363
}

; Function Attrs: nounwind uwtable
define internal i32 @S_pending_ident() #0 {
entry:
  %retval = alloca i32, align 4
  %d = alloca i8*, align 8
  %tmp = alloca i32, align 4
  %pit = alloca i8, align 1
  %sym = alloca %struct.sv*, align 8
  %gv = alloca %struct.gv*, align 8
  store i32 0, i32* %tmp, align 4
  %0 = load i8, i8* @PL_pending_ident, align 1
  store i8 %0, i8* %pit, align 1
  store i8 0, i8* @PL_pending_ident, align 1
  %1 = load i32, i32* @PL_in_my, align 4
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %if.then, label %if.end.17

if.then:                                          ; preds = %entry
  %2 = load i32, i32* @PL_in_my, align 4
  %cmp = icmp eq i32 %2, 137
  br i1 %cmp, label %if.then.2, label %if.else

if.then.2:                                        ; preds = %if.then
  %call = call i8* @strchr(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i32 0), i32 58)
  %tobool3 = icmp ne i8* %call, null
  br i1 %tobool3, label %if.then.4, label %if.end

if.then.4:                                        ; preds = %if.then.2
  %call5 = call i8* (i8*, ...) @Perl_form(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.188, i32 0, i32 0), i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i32 0))
  %call6 = call i32 @Perl_yyerror(i8* %call5)
  br label %if.end

if.end:                                           ; preds = %if.then.4, %if.then.2
  %call7 = call i64 @Perl_allocmy(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i32 0))
  %conv = trunc i64 %call7 to i32
  store i32 %conv, i32* %tmp, align 4
  br label %if.end.16

if.else:                                          ; preds = %if.then
  %call8 = call i8* @strchr(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i32 0), i32 58)
  %tobool9 = icmp ne i8* %call8, null
  br i1 %tobool9, label %if.then.10, label %if.end.13

if.then.10:                                       ; preds = %if.else
  %call11 = call i8* (i8*, ...) @Perl_form(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @PL_no_myglob, i32 0, i32 0), i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i32 0))
  %call12 = call i32 @Perl_yyerror(i8* %call11)
  br label %if.end.13

if.end.13:                                        ; preds = %if.then.10, %if.else
  %call14 = call %struct.op* @Perl_newOP(i32 12, i32 0)
  store %struct.op* %call14, %struct.op** bitcast (%union.YYSTYPE* @PL_yylval to %struct.op**), align 8
  %call15 = call i64 @Perl_allocmy(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i32 0))
  %3 = load %struct.op*, %struct.op** bitcast (%union.YYSTYPE* @PL_yylval to %struct.op**), align 8
  %op_targ = getelementptr inbounds %struct.op, %struct.op* %3, i32 0, i32 3
  store i64 %call15, i64* %op_targ, align 8
  store i32 262, i32* %retval
  br label %return

if.end.16:                                        ; preds = %if.end
  br label %if.end.17

if.end.17:                                        ; preds = %if.end.16, %entry
  %call18 = call i8* @strchr(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i32 0), i32 58)
  %tobool19 = icmp ne i8* %call18, null
  br i1 %tobool19, label %if.end.88, label %if.then.20

if.then.20:                                       ; preds = %if.end.17
  %4 = load i32, i32* @PL_in_my, align 4
  %tobool21 = icmp ne i32 %4, 0
  br i1 %tobool21, label %if.end.25, label %if.then.22

if.then.22:                                       ; preds = %if.then.20
  %call23 = call i64 @Perl_pad_findmy(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i32 0))
  %conv24 = trunc i64 %call23 to i32
  store i32 %conv24, i32* %tmp, align 4
  br label %if.end.25

if.end.25:                                        ; preds = %if.then.22, %if.then.20
  %5 = load i32, i32* %tmp, align 4
  %conv26 = sext i32 %5 to i64
  %cmp27 = icmp ne i64 %conv26, -1
  br i1 %cmp27, label %if.then.29, label %if.end.87

if.then.29:                                       ; preds = %if.end.25
  %6 = load %struct.av*, %struct.av** @PL_comppad_name, align 8
  %7 = load i32, i32* %tmp, align 4
  %call30 = call %struct.sv** @Perl_av_fetch(%struct.av* %6, i32 %7, i32 0)
  %8 = load %struct.sv*, %struct.sv** %call30, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %8, i32 0, i32 2
  %9 = load i32, i32* %sv_flags, align 4
  %and = and i32 %9, -2147483648
  %tobool31 = icmp ne i32 %and, 0
  br i1 %tobool31, label %if.then.32, label %if.end.49

if.then.32:                                       ; preds = %if.then.29
  %10 = load %struct.av*, %struct.av** @PL_comppad_name, align 8
  %11 = load i32, i32* %tmp, align 4
  %call34 = call %struct.sv** @Perl_av_fetch(%struct.av* %10, i32 %11, i32 0)
  %12 = load %struct.sv*, %struct.sv** %call34, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %12, i32 0, i32 0
  %13 = load i8*, i8** %sv_any, align 8
  %14 = bitcast i8* %13 to %struct.xpvgv*
  %xgv_stash = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %14, i32 0, i32 10
  %15 = load %struct.hv*, %struct.hv** %xgv_stash, align 8
  %sv_any35 = getelementptr inbounds %struct.hv, %struct.hv* %15, i32 0, i32 0
  %16 = load %struct.xpvhv*, %struct.xpvhv** %sv_any35, align 8
  %xhv_name = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %16, i32 0, i32 10
  %17 = load i8*, i8** %xhv_name, align 8
  %call36 = call %struct.sv* @Perl_newSVpv(i8* %17, i64 0)
  store %struct.sv* %call36, %struct.sv** %sym, align 8
  %18 = load %struct.sv*, %struct.sv** %sym, align 8
  call void @Perl_sv_catpvn_flags(%struct.sv* %18, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.75, i32 0, i32 0), i64 2, i32 2)
  %19 = load %struct.sv*, %struct.sv** %sym, align 8
  call void @Perl_sv_catpv(%struct.sv* %19, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i64 1))
  %20 = load %struct.sv*, %struct.sv** %sym, align 8
  %call37 = call %struct.op* @Perl_newSVOP(i32 5, i32 0, %struct.sv* %20)
  store %struct.op* %call37, %struct.op** bitcast (%union.YYSTYPE* @PL_yylval to %struct.op**), align 8
  %21 = load %struct.op*, %struct.op** bitcast (%union.YYSTYPE* @PL_yylval to %struct.op**), align 8
  %op_private = getelementptr inbounds %struct.op, %struct.op* %21, i32 0, i32 7
  store i8 16, i8* %op_private, align 1
  %22 = load %struct.sv*, %struct.sv** %sym, align 8
  %sv_any38 = getelementptr inbounds %struct.sv, %struct.sv* %22, i32 0, i32 0
  %23 = load i8*, i8** %sv_any38, align 8
  %24 = bitcast i8* %23 to %struct.xpv*
  %xpv_pv = getelementptr inbounds %struct.xpv, %struct.xpv* %24, i32 0, i32 0
  %25 = load i8*, i8** %xpv_pv, align 8
  %26 = load volatile i32, i32* @PL_in_eval, align 4
  %tobool39 = icmp ne i32 %26, 0
  %cond = select i1 %tobool39, i32 10, i32 2
  %27 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i64 0), align 1
  %conv40 = sext i8 %27 to i32
  %cmp41 = icmp eq i32 %conv40, 36
  br i1 %cmp41, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then.32
  br label %cond.end

cond.false:                                       ; preds = %if.then.32
  %28 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i64 0), align 1
  %conv43 = sext i8 %28 to i32
  %cmp44 = icmp eq i32 %conv43, 64
  %cond46 = select i1 %cmp44, i32 10, i32 11
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond47 = phi i32 [ 4, %cond.true ], [ %cond46, %cond.false ]
  %call48 = call %struct.gv* @Perl_gv_fetchpv(i8* %25, i32 %cond, i32 %cond47)
  store i32 257, i32* %retval
  br label %return

if.end.49:                                        ; preds = %if.then.29
  %29 = load i16, i16* @PL_last_lop_op, align 2
  %conv50 = zext i16 %29 to i32
  %cmp51 = icmp eq i32 %conv50, 150
  br i1 %cmp51, label %land.lhs.true, label %if.end.83

land.lhs.true:                                    ; preds = %if.end.49
  %30 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i64 0), align 1
  %conv53 = sext i8 %30 to i32
  %cmp54 = icmp eq i32 %conv53, 36
  br i1 %cmp54, label %land.lhs.true.56, label %if.end.83

land.lhs.true.56:                                 ; preds = %land.lhs.true
  %31 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i64 1), align 1
  %conv57 = sext i8 %31 to i32
  %cmp58 = icmp eq i32 %conv57, 97
  br i1 %cmp58, label %land.lhs.true.63, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true.56
  %32 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i64 1), align 1
  %conv60 = sext i8 %32 to i32
  %cmp61 = icmp eq i32 %conv60, 98
  br i1 %cmp61, label %land.lhs.true.63, label %if.end.83

land.lhs.true.63:                                 ; preds = %lor.lhs.false, %land.lhs.true.56
  %33 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i64 2), align 1
  %tobool64 = icmp ne i8 %33, 0
  br i1 %tobool64, label %if.end.83, label %if.then.65

if.then.65:                                       ; preds = %land.lhs.true.63
  %34 = load volatile i32, i32* @PL_in_eval, align 4
  %tobool66 = icmp ne i32 %34, 0
  br i1 %tobool66, label %cond.true.67, label %cond.false.68

cond.true.67:                                     ; preds = %if.then.65
  %35 = load i8*, i8** @PL_oldoldbufptr, align 8
  br label %cond.end.69

cond.false.68:                                    ; preds = %if.then.65
  %36 = load i8*, i8** @PL_linestart, align 8
  br label %cond.end.69

cond.end.69:                                      ; preds = %cond.false.68, %cond.true.67
  %cond70 = phi i8* [ %35, %cond.true.67 ], [ %36, %cond.false.68 ]
  store i8* %cond70, i8** %d, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %cond.end.69
  %37 = load i8*, i8** %d, align 8
  %38 = load i8*, i8** @PL_bufend, align 8
  %cmp71 = icmp ult i8* %37, %38
  br i1 %cmp71, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %for.cond
  %39 = load i8*, i8** %d, align 8
  %40 = load i8, i8* %39, align 1
  %conv73 = sext i8 %40 to i32
  %cmp74 = icmp ne i32 %conv73, 10
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %41 = phi i1 [ false, %for.cond ], [ %cmp74, %land.rhs ]
  br i1 %41, label %for.body, label %for.end

for.body:                                         ; preds = %land.end
  %42 = load i8*, i8** %d, align 8
  %call76 = call i32 @strncmp(i8* %42, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.189, i32 0, i32 0), i64 3)
  %tobool77 = icmp ne i32 %call76, 0
  br i1 %tobool77, label %lor.lhs.false.78, label %if.then.81

lor.lhs.false.78:                                 ; preds = %for.body
  %43 = load i8*, i8** %d, align 8
  %call79 = call i32 @strncmp(i8* %43, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.190, i32 0, i32 0), i64 3)
  %tobool80 = icmp ne i32 %call79, 0
  br i1 %tobool80, label %if.end.82, label %if.then.81

if.then.81:                                       ; preds = %lor.lhs.false.78, %for.body
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.191, i32 0, i32 0), i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i32 0))
  br label %if.end.82

if.end.82:                                        ; preds = %if.then.81, %lor.lhs.false.78
  br label %for.inc

for.inc:                                          ; preds = %if.end.82
  %44 = load i8*, i8** %d, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %44, i32 1
  store i8* %incdec.ptr, i8** %d, align 8
  br label %for.cond

for.end:                                          ; preds = %land.end
  br label %if.end.83

if.end.83:                                        ; preds = %for.end, %land.lhs.true.63, %lor.lhs.false, %land.lhs.true, %if.end.49
  %call84 = call %struct.op* @Perl_newOP(i32 12, i32 0)
  store %struct.op* %call84, %struct.op** bitcast (%union.YYSTYPE* @PL_yylval to %struct.op**), align 8
  %45 = load i32, i32* %tmp, align 4
  %conv85 = sext i32 %45 to i64
  %46 = load %struct.op*, %struct.op** bitcast (%union.YYSTYPE* @PL_yylval to %struct.op**), align 8
  %op_targ86 = getelementptr inbounds %struct.op, %struct.op* %46, i32 0, i32 3
  store i64 %conv85, i64* %op_targ86, align 8
  store i32 262, i32* %retval
  br label %return

if.end.87:                                        ; preds = %if.end.25
  br label %if.end.88

if.end.88:                                        ; preds = %if.end.87, %if.end.17
  %47 = load i8, i8* %pit, align 1
  %conv89 = sext i8 %47 to i32
  %cmp90 = icmp eq i32 %conv89, 64
  br i1 %cmp90, label %land.lhs.true.92, label %if.end.140

land.lhs.true.92:                                 ; preds = %if.end.88
  %48 = load i32, i32* @PL_lex_state, align 4
  %cmp93 = icmp ne i32 %48, 10
  br i1 %cmp93, label %land.lhs.true.95, label %if.end.140

land.lhs.true.95:                                 ; preds = %land.lhs.true.92
  %49 = load i32, i32* @PL_lex_brackets, align 4
  %tobool96 = icmp ne i32 %49, 0
  br i1 %tobool96, label %if.end.140, label %if.then.97

if.then.97:                                       ; preds = %land.lhs.true.95
  %call99 = call %struct.gv* @Perl_gv_fetchpv(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i64 1), i32 0, i32 10)
  store %struct.gv* %call99, %struct.gv** %gv, align 8
  %50 = load %struct.gv*, %struct.gv** %gv, align 8
  %tobool100 = icmp ne %struct.gv* %50, null
  br i1 %tobool100, label %lor.lhs.false.101, label %land.lhs.true.112

lor.lhs.false.101:                                ; preds = %if.then.97
  %51 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i64 0), align 1
  %conv102 = sext i8 %51 to i32
  %cmp103 = icmp eq i32 %conv102, 64
  br i1 %cmp103, label %cond.true.105, label %cond.false.108

cond.true.105:                                    ; preds = %lor.lhs.false.101
  %52 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_any106 = getelementptr inbounds %struct.gv, %struct.gv* %52, i32 0, i32 0
  %53 = load %struct.xpvgv*, %struct.xpvgv** %sv_any106, align 8
  %xgv_gp = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %53, i32 0, i32 7
  %54 = load %struct.gp*, %struct.gp** %xgv_gp, align 8
  %gp_av = getelementptr inbounds %struct.gp, %struct.gp* %54, i32 0, i32 4
  %55 = load %struct.av*, %struct.av** %gp_av, align 8
  %tobool107 = icmp ne %struct.av* %55, null
  br i1 %tobool107, label %if.end.139, label %land.lhs.true.112

cond.false.108:                                   ; preds = %lor.lhs.false.101
  %56 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_any109 = getelementptr inbounds %struct.gv, %struct.gv* %56, i32 0, i32 0
  %57 = load %struct.xpvgv*, %struct.xpvgv** %sv_any109, align 8
  %xgv_gp110 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %57, i32 0, i32 7
  %58 = load %struct.gp*, %struct.gp** %xgv_gp110, align 8
  %gp_hv = getelementptr inbounds %struct.gp, %struct.gp* %58, i32 0, i32 5
  %59 = load %struct.hv*, %struct.hv** %gp_hv, align 8
  %tobool111 = icmp ne %struct.hv* %59, null
  br i1 %tobool111, label %if.end.139, label %land.lhs.true.112

land.lhs.true.112:                                ; preds = %cond.false.108, %cond.true.105, %if.then.97
  %60 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings = getelementptr inbounds %struct.cop, %struct.cop* %60, i32 0, i32 14
  %61 = load %struct.sv*, %struct.sv** %cop_warnings, align 8
  %cmp113 = icmp ne %struct.sv* %61, null
  br i1 %cmp113, label %land.lhs.true.115, label %lor.lhs.false.130

land.lhs.true.115:                                ; preds = %land.lhs.true.112
  %62 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings116 = getelementptr inbounds %struct.cop, %struct.cop* %62, i32 0, i32 14
  %63 = load %struct.sv*, %struct.sv** %cop_warnings116, align 8
  %cmp117 = icmp ne %struct.sv* %63, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 2)
  br i1 %cmp117, label %land.lhs.true.119, label %lor.lhs.false.130

land.lhs.true.119:                                ; preds = %land.lhs.true.115
  %64 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings120 = getelementptr inbounds %struct.cop, %struct.cop* %64, i32 0, i32 14
  %65 = load %struct.sv*, %struct.sv** %cop_warnings120, align 8
  %cmp121 = icmp eq %struct.sv* %65, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 1)
  br i1 %cmp121, label %if.then.138, label %lor.lhs.false.123

lor.lhs.false.123:                                ; preds = %land.lhs.true.119
  %66 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings124 = getelementptr inbounds %struct.cop, %struct.cop* %66, i32 0, i32 14
  %67 = load %struct.sv*, %struct.sv** %cop_warnings124, align 8
  %sv_any125 = getelementptr inbounds %struct.sv, %struct.sv* %67, i32 0, i32 0
  %68 = load i8*, i8** %sv_any125, align 8
  %69 = bitcast i8* %68 to %struct.xpv*
  %xpv_pv126 = getelementptr inbounds %struct.xpv, %struct.xpv* %69, i32 0, i32 0
  %70 = load i8*, i8** %xpv_pv126, align 8
  %arrayidx = getelementptr inbounds i8, i8* %70, i64 7
  %71 = load i8, i8* %arrayidx, align 1
  %conv127 = sext i8 %71 to i32
  %and128 = and i32 %conv127, 4
  %tobool129 = icmp ne i32 %and128, 0
  br i1 %tobool129, label %if.then.138, label %lor.lhs.false.130

lor.lhs.false.130:                                ; preds = %lor.lhs.false.123, %land.lhs.true.115, %land.lhs.true.112
  %72 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings131 = getelementptr inbounds %struct.cop, %struct.cop* %72, i32 0, i32 14
  %73 = load %struct.sv*, %struct.sv** %cop_warnings131, align 8
  %cmp132 = icmp eq %struct.sv* %73, null
  br i1 %cmp132, label %land.lhs.true.134, label %if.end.139

land.lhs.true.134:                                ; preds = %lor.lhs.false.130
  %74 = load i8, i8* @PL_dowarn, align 1
  %conv135 = zext i8 %74 to i32
  %and136 = and i32 %conv135, 1
  %tobool137 = icmp ne i32 %and136, 0
  br i1 %tobool137, label %if.then.138, label %if.end.139

if.then.138:                                      ; preds = %land.lhs.true.134, %lor.lhs.false.123, %land.lhs.true.119
  call void (i32, i8*, ...) @Perl_warner(i32 29, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.192, i32 0, i32 0), i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i32 0))
  br label %if.end.139

if.end.139:                                       ; preds = %if.then.138, %land.lhs.true.134, %lor.lhs.false.130, %cond.false.108, %cond.true.105
  br label %if.end.140

if.end.140:                                       ; preds = %if.end.139, %land.lhs.true.95, %land.lhs.true.92, %if.end.88
  %call141 = call %struct.sv* @Perl_newSVpv(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i64 1), i64 0)
  %call142 = call %struct.op* @Perl_newSVOP(i32 5, i32 0, %struct.sv* %call141)
  store %struct.op* %call142, %struct.op** bitcast (%union.YYSTYPE* @PL_yylval to %struct.op**), align 8
  %75 = load %struct.op*, %struct.op** bitcast (%union.YYSTYPE* @PL_yylval to %struct.op**), align 8
  %op_private143 = getelementptr inbounds %struct.op, %struct.op* %75, i32 0, i32 7
  store i8 16, i8* %op_private143, align 1
  %76 = load volatile i32, i32* @PL_in_eval, align 4
  %tobool144 = icmp ne i32 %76, 0
  %cond145 = select i1 %tobool144, i32 10, i32 1
  %77 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i64 0), align 1
  %conv146 = sext i8 %77 to i32
  %cmp147 = icmp eq i32 %conv146, 36
  br i1 %cmp147, label %cond.true.149, label %cond.false.150

cond.true.149:                                    ; preds = %if.end.140
  br label %cond.end.155

cond.false.150:                                   ; preds = %if.end.140
  %78 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i64 0), align 1
  %conv151 = sext i8 %78 to i32
  %cmp152 = icmp eq i32 %conv151, 64
  %cond154 = select i1 %cmp152, i32 10, i32 11
  br label %cond.end.155

cond.end.155:                                     ; preds = %cond.false.150, %cond.true.149
  %cond156 = phi i32 [ 4, %cond.true.149 ], [ %cond154, %cond.false.150 ]
  %call157 = call %struct.gv* @Perl_gv_fetchpv(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i64 1), i32 %cond145, i32 %cond156)
  store i32 257, i32* %retval
  br label %return

return:                                           ; preds = %cond.end.155, %if.end.83, %cond.end, %if.end.13
  %79 = load i32, i32* %retval
  ret i32 %79
}

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #2

declare i32 @strncmp(i8*, i8*, i64) #1

declare i8* @strchr(i8*, i32) #1

declare i8* @Perl_safesysrealloc(i8*, i64) #1

; Function Attrs: nounwind uwtable
define internal void @S_force_next(i32 %type) #0 {
entry:
  %type.addr = alloca i32, align 4
  store i32 %type, i32* %type.addr, align 4
  %0 = load i32, i32* %type.addr, align 4
  %1 = load i32, i32* @PL_nexttoke, align 4
  %idxprom = sext i32 %1 to i64
  %arrayidx = getelementptr inbounds [5 x i32], [5 x i32]* @PL_nexttype, i32 0, i64 %idxprom
  store i32 %0, i32* %arrayidx, align 4
  %2 = load i32, i32* @PL_nexttoke, align 4
  %inc = add nsw i32 %2, 1
  store i32 %inc, i32* @PL_nexttoke, align 4
  %3 = load i32, i32* @PL_lex_state, align 4
  %cmp = icmp ne i32 %3, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %4 = load i32, i32* @PL_lex_state, align 4
  store i32 %4, i32* @PL_lex_defer, align 4
  %5 = load i32, i32* @PL_expect, align 4
  store i32 %5, i32* @PL_lex_expect, align 4
  store i32 0, i32* @PL_lex_state, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

declare void @Perl_croak(i8*, ...) #1

; Function Attrs: nounwind uwtable
define internal i32 @S_ao(i32 %toketype) #0 {
entry:
  %toketype.addr = alloca i32, align 4
  store i32 %toketype, i32* %toketype.addr, align 4
  %0 = load i8*, i8** @PL_bufptr, align 8
  %1 = load i8, i8* %0, align 1
  %conv = sext i8 %1 to i32
  %cmp = icmp eq i32 %conv, 61
  br i1 %cmp, label %if.then, label %if.end.9

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** @PL_bufptr, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %2, i32 1
  store i8* %incdec.ptr, i8** @PL_bufptr, align 8
  %3 = load i32, i32* %toketype.addr, align 4
  %cmp2 = icmp eq i32 %3, 305
  br i1 %cmp2, label %if.then.4, label %if.else

if.then.4:                                        ; preds = %if.then
  store i32 163, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  br label %if.end.8

if.else:                                          ; preds = %if.then
  %4 = load i32, i32* %toketype.addr, align 4
  %cmp5 = icmp eq i32 %4, 304
  br i1 %cmp5, label %if.then.7, label %if.end

if.then.7:                                        ; preds = %if.else
  store i32 164, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  br label %if.end

if.end:                                           ; preds = %if.then.7, %if.else
  br label %if.end.8

if.end.8:                                         ; preds = %if.end, %if.then.4
  store i32 303, i32* %toketype.addr, align 4
  br label %if.end.9

if.end.9:                                         ; preds = %if.end.8, %entry
  %5 = load i32, i32* %toketype.addr, align 4
  ret i32 %5
}

; Function Attrs: nounwind uwtable
define internal i32 @S_sublex_push() #0 {
entry:
  call void @Perl_push_scope()
  %0 = load i32, i32* getelementptr inbounds (%struct._sublex_info, %struct._sublex_info* @PL_sublex_info, i32 0, i32 0), align 4
  store i32 %0, i32* @PL_lex_state, align 4
  call void @Perl_save_I32(i32* @PL_lex_dojoin)
  call void @Perl_save_I32(i32* @PL_lex_brackets)
  call void @Perl_save_I32(i32* @PL_lex_casemods)
  call void @Perl_save_I32(i32* @PL_lex_starts)
  call void @Perl_save_I32(i32* @PL_lex_state)
  call void @Perl_save_vptr(i8* bitcast (%struct.op** @PL_lex_inpat to i8*))
  call void @Perl_save_I32(i32* @PL_lex_inwhat)
  %1 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line = getelementptr inbounds %struct.cop, %struct.cop* %1, i32 0, i32 13
  call void @Perl_save_I32(i32* %cop_line)
  call void @Perl_save_pptr(i8** @PL_bufptr)
  call void @Perl_save_pptr(i8** @PL_bufend)
  call void @Perl_save_pptr(i8** @PL_oldbufptr)
  call void @Perl_save_pptr(i8** @PL_oldoldbufptr)
  call void @Perl_save_pptr(i8** @PL_last_lop)
  call void @Perl_save_pptr(i8** @PL_last_uni)
  call void @Perl_save_pptr(i8** @PL_linestart)
  call void @Perl_save_sptr(%struct.sv** @PL_linestr)
  call void @Perl_save_generic_pvref(i8** @PL_lex_brackstack)
  call void @Perl_save_generic_pvref(i8** @PL_lex_casestack)
  %2 = load %struct.sv*, %struct.sv** @PL_lex_stuff, align 8
  store %struct.sv* %2, %struct.sv** @PL_linestr, align 8
  store %struct.sv* null, %struct.sv** @PL_lex_stuff, align 8
  %3 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %3, i32 0, i32 0
  %4 = load i8*, i8** %sv_any, align 8
  %5 = bitcast i8* %4 to %struct.xpv*
  %xpv_pv = getelementptr inbounds %struct.xpv, %struct.xpv* %5, i32 0, i32 0
  %6 = load i8*, i8** %xpv_pv, align 8
  store i8* %6, i8** @PL_linestart, align 8
  store i8* %6, i8** @PL_oldoldbufptr, align 8
  store i8* %6, i8** @PL_oldbufptr, align 8
  store i8* %6, i8** @PL_bufptr, align 8
  store i8* %6, i8** @PL_bufend, align 8
  %7 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_any1 = getelementptr inbounds %struct.sv, %struct.sv* %7, i32 0, i32 0
  %8 = load i8*, i8** %sv_any1, align 8
  %9 = bitcast i8* %8 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %9, i32 0, i32 1
  %10 = load i64, i64* %xpv_cur, align 8
  %11 = load i8*, i8** @PL_bufend, align 8
  %add.ptr = getelementptr inbounds i8, i8* %11, i64 %10
  store i8* %add.ptr, i8** @PL_bufend, align 8
  store i8* null, i8** @PL_last_uni, align 8
  store i8* null, i8** @PL_last_lop, align 8
  %12 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  call void @Perl_save_freesv(%struct.sv* %12)
  store i32 0, i32* @PL_lex_dojoin, align 4
  store i32 0, i32* @PL_lex_brackets, align 4
  %call = call i8* @Perl_safesysmalloc(i64 120)
  store i8* %call, i8** @PL_lex_brackstack, align 8
  %call2 = call i8* @Perl_safesysmalloc(i64 12)
  store i8* %call2, i8** @PL_lex_casestack, align 8
  store i32 0, i32* @PL_lex_casemods, align 4
  %13 = load i8*, i8** @PL_lex_casestack, align 8
  store i8 0, i8* %13, align 1
  store i32 0, i32* @PL_lex_starts, align 4
  store i32 3, i32* @PL_lex_state, align 4
  %14 = load i32, i32* @PL_multi_start, align 4
  %15 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line3 = getelementptr inbounds %struct.cop, %struct.cop* %15, i32 0, i32 13
  store i32 %14, i32* %cop_line3, align 4
  %16 = load i32, i32* getelementptr inbounds (%struct._sublex_info, %struct._sublex_info* @PL_sublex_info, i32 0, i32 1), align 4
  store i32 %16, i32* @PL_lex_inwhat, align 4
  %17 = load i32, i32* @PL_lex_inwhat, align 4
  %cmp = icmp eq i32 %17, 31
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %18 = load i32, i32* @PL_lex_inwhat, align 4
  %cmp4 = icmp eq i32 %18, 32
  br i1 %cmp4, label %if.then, label %lor.lhs.false.5

lor.lhs.false.5:                                  ; preds = %lor.lhs.false
  %19 = load i32, i32* @PL_lex_inwhat, align 4
  %cmp6 = icmp eq i32 %19, 33
  br i1 %cmp6, label %if.then, label %if.else

if.then:                                          ; preds = %lor.lhs.false.5, %lor.lhs.false, %entry
  %20 = load %struct.op*, %struct.op** getelementptr inbounds (%struct._sublex_info, %struct._sublex_info* @PL_sublex_info, i32 0, i32 2), align 8
  store %struct.op* %20, %struct.op** @PL_lex_inpat, align 8
  br label %if.end

if.else:                                          ; preds = %lor.lhs.false.5
  store %struct.op* null, %struct.op** @PL_lex_inpat, align 8
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret i32 40
}

; Function Attrs: nounwind uwtable
define internal i32 @S_sublex_done() #0 {
entry:
  %retval = alloca i32, align 4
  %sv = alloca %struct.sv*, align 8
  %0 = load i32, i32* @PL_lex_starts, align 4
  %inc = add nsw i32 %0, 1
  store i32 %inc, i32* @PL_lex_starts, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.end.5, label %if.then

if.then:                                          ; preds = %entry
  %call = call %struct.sv* @Perl_newSVpvn(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.24, i32 0, i32 0), i64 0)
  store %struct.sv* %call, %struct.sv** %sv, align 8
  %1 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %1, i32 0, i32 2
  %2 = load i32, i32* %sv_flags, align 4
  %and = and i32 %2, 536870912
  %tobool1 = icmp ne i32 %and, 0
  br i1 %tobool1, label %if.then.2, label %if.end

if.then.2:                                        ; preds = %if.then
  %3 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags3 = getelementptr inbounds %struct.sv, %struct.sv* %3, i32 0, i32 2
  %4 = load i32, i32* %sv_flags3, align 4
  %or = or i32 %4, 536870912
  store i32 %or, i32* %sv_flags3, align 4
  br label %if.end

if.end:                                           ; preds = %if.then.2, %if.then
  store i32 0, i32* @PL_expect, align 4
  %5 = load %struct.sv*, %struct.sv** %sv, align 8
  %call4 = call %struct.op* @Perl_newSVOP(i32 5, i32 0, %struct.sv* %5)
  store %struct.op* %call4, %struct.op** bitcast (%union.YYSTYPE* @PL_yylval to %struct.op**), align 8
  store i32 260, i32* %retval
  br label %return

if.end.5:                                         ; preds = %entry
  %6 = load i32, i32* @PL_lex_casemods, align 4
  %tobool6 = icmp ne i32 %6, 0
  br i1 %tobool6, label %if.then.7, label %if.end.9

if.then.7:                                        ; preds = %if.end.5
  store i32 8, i32* @PL_lex_state, align 4
  %call8 = call i32 @Perl_yylex()
  store i32 %call8, i32* %retval
  br label %return

if.end.9:                                         ; preds = %if.end.5
  %7 = load %struct.sv*, %struct.sv** @PL_lex_repl, align 8
  %tobool10 = icmp ne %struct.sv* %7, null
  br i1 %tobool10, label %land.lhs.true, label %if.else.20

land.lhs.true:                                    ; preds = %if.end.9
  %8 = load i32, i32* @PL_lex_inwhat, align 4
  %cmp = icmp eq i32 %8, 33
  br i1 %cmp, label %if.then.12, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true
  %9 = load i32, i32* @PL_lex_inwhat, align 4
  %cmp11 = icmp eq i32 %9, 35
  br i1 %cmp11, label %if.then.12, label %if.else.20

if.then.12:                                       ; preds = %lor.lhs.false, %land.lhs.true
  %10 = load %struct.sv*, %struct.sv** @PL_lex_repl, align 8
  store %struct.sv* %10, %struct.sv** @PL_linestr, align 8
  store %struct.op* null, %struct.op** @PL_lex_inpat, align 8
  %11 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %11, i32 0, i32 0
  %12 = load i8*, i8** %sv_any, align 8
  %13 = bitcast i8* %12 to %struct.xpv*
  %xpv_pv = getelementptr inbounds %struct.xpv, %struct.xpv* %13, i32 0, i32 0
  %14 = load i8*, i8** %xpv_pv, align 8
  store i8* %14, i8** @PL_linestart, align 8
  store i8* %14, i8** @PL_oldoldbufptr, align 8
  store i8* %14, i8** @PL_oldbufptr, align 8
  store i8* %14, i8** @PL_bufptr, align 8
  store i8* %14, i8** @PL_bufend, align 8
  %15 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_any13 = getelementptr inbounds %struct.sv, %struct.sv* %15, i32 0, i32 0
  %16 = load i8*, i8** %sv_any13, align 8
  %17 = bitcast i8* %16 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %17, i32 0, i32 1
  %18 = load i64, i64* %xpv_cur, align 8
  %19 = load i8*, i8** @PL_bufend, align 8
  %add.ptr = getelementptr inbounds i8, i8* %19, i64 %18
  store i8* %add.ptr, i8** @PL_bufend, align 8
  store i8* null, i8** @PL_last_uni, align 8
  store i8* null, i8** @PL_last_lop, align 8
  %20 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  call void @Perl_save_freesv(%struct.sv* %20)
  store i32 0, i32* @PL_lex_dojoin, align 4
  store i32 0, i32* @PL_lex_brackets, align 4
  store i32 0, i32* @PL_lex_casemods, align 4
  %21 = load i8*, i8** @PL_lex_casestack, align 8
  store i8 0, i8* %21, align 1
  store i32 0, i32* @PL_lex_starts, align 4
  %22 = load %struct.sv*, %struct.sv** @PL_lex_repl, align 8
  %sv_flags14 = getelementptr inbounds %struct.sv, %struct.sv* %22, i32 0, i32 2
  %23 = load i32, i32* %sv_flags14, align 4
  %and15 = and i32 %23, 1073741824
  %tobool16 = icmp ne i32 %and15, 0
  br i1 %tobool16, label %if.then.17, label %if.else

if.then.17:                                       ; preds = %if.then.12
  store i32 9, i32* @PL_lex_state, align 4
  %24 = load i32, i32* @PL_lex_starts, align 4
  %inc18 = add nsw i32 %24, 1
  store i32 %inc18, i32* @PL_lex_starts, align 4
  br label %if.end.19

if.else:                                          ; preds = %if.then.12
  store i32 3, i32* @PL_lex_state, align 4
  store %struct.sv* null, %struct.sv** @PL_lex_repl, align 8
  br label %if.end.19

if.end.19:                                        ; preds = %if.else, %if.then.17
  store i32 44, i32* %retval
  br label %return

if.else.20:                                       ; preds = %lor.lhs.false, %if.end.9
  call void @Perl_pop_scope()
  %25 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_any21 = getelementptr inbounds %struct.sv, %struct.sv* %25, i32 0, i32 0
  %26 = load i8*, i8** %sv_any21, align 8
  %27 = bitcast i8* %26 to %struct.xpv*
  %xpv_pv22 = getelementptr inbounds %struct.xpv, %struct.xpv* %27, i32 0, i32 0
  %28 = load i8*, i8** %xpv_pv22, align 8
  store i8* %28, i8** @PL_bufend, align 8
  %29 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_any23 = getelementptr inbounds %struct.sv, %struct.sv* %29, i32 0, i32 0
  %30 = load i8*, i8** %sv_any23, align 8
  %31 = bitcast i8* %30 to %struct.xpv*
  %xpv_cur24 = getelementptr inbounds %struct.xpv, %struct.xpv* %31, i32 0, i32 1
  %32 = load i64, i64* %xpv_cur24, align 8
  %33 = load i8*, i8** @PL_bufend, align 8
  %add.ptr25 = getelementptr inbounds i8, i8* %33, i64 %32
  store i8* %add.ptr25, i8** @PL_bufend, align 8
  store i32 0, i32* @PL_expect, align 4
  store i32 0, i32* getelementptr inbounds (%struct._sublex_info, %struct._sublex_info* @PL_sublex_info, i32 0, i32 1), align 4
  store i32 41, i32* %retval
  br label %return

return:                                           ; preds = %if.else.20, %if.end.19, %if.then.7, %if.end
  %34 = load i32, i32* %retval
  ret i32 %34
}

; Function Attrs: nounwind uwtable
define internal void @S_force_ident(i8* %s, i32 %kind) #0 {
entry:
  %s.addr = alloca i8*, align 8
  %kind.addr = alloca i32, align 4
  %o = alloca %struct.op*, align 8
  store i8* %s, i8** %s.addr, align 8
  store i32 %kind, i32* %kind.addr, align 4
  %0 = load i8*, i8** %s.addr, align 8
  %tobool = icmp ne i8* %0, null
  br i1 %tobool, label %land.lhs.true, label %if.end.18

land.lhs.true:                                    ; preds = %entry
  %1 = load i8*, i8** %s.addr, align 8
  %2 = load i8, i8* %1, align 1
  %conv = sext i8 %2 to i32
  %tobool1 = icmp ne i32 %conv, 0
  br i1 %tobool1, label %if.then, label %if.end.18

if.then:                                          ; preds = %land.lhs.true
  %3 = load i8*, i8** %s.addr, align 8
  %call = call %struct.sv* @Perl_newSVpv(i8* %3, i64 0)
  %call2 = call %struct.op* @Perl_newSVOP(i32 5, i32 0, %struct.sv* %call)
  store %struct.op* %call2, %struct.op** %o, align 8
  %4 = load %struct.op*, %struct.op** %o, align 8
  %5 = load i32, i32* @PL_nexttoke, align 4
  %idxprom = sext i32 %5 to i64
  %arrayidx = getelementptr inbounds [5 x %union.YYSTYPE], [5 x %union.YYSTYPE]* @PL_nextval, i32 0, i64 %idxprom
  %opval = bitcast %union.YYSTYPE* %arrayidx to %struct.op**
  store %struct.op* %4, %struct.op** %opval, align 8
  call void @S_force_next(i32 257)
  %6 = load i32, i32* %kind.addr, align 4
  %tobool3 = icmp ne i32 %6, 0
  br i1 %tobool3, label %if.then.4, label %if.end

if.then.4:                                        ; preds = %if.then
  %7 = load %struct.op*, %struct.op** %o, align 8
  %op_private = getelementptr inbounds %struct.op, %struct.op* %7, i32 0, i32 7
  store i8 16, i8* %op_private, align 1
  %8 = load i8*, i8** %s.addr, align 8
  %9 = load volatile i32, i32* @PL_in_eval, align 4
  %tobool5 = icmp ne i32 %9, 0
  %cond = select i1 %tobool5, i32 10, i32 1
  %10 = load i32, i32* %kind.addr, align 4
  %cmp = icmp eq i32 %10, 36
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then.4
  br label %cond.end.15

cond.false:                                       ; preds = %if.then.4
  %11 = load i32, i32* %kind.addr, align 4
  %cmp7 = icmp eq i32 %11, 64
  br i1 %cmp7, label %cond.true.9, label %cond.false.10

cond.true.9:                                      ; preds = %cond.false
  br label %cond.end

cond.false.10:                                    ; preds = %cond.false
  %12 = load i32, i32* %kind.addr, align 4
  %cmp11 = icmp eq i32 %12, 37
  %cond13 = select i1 %cmp11, i32 11, i32 13
  br label %cond.end

cond.end:                                         ; preds = %cond.false.10, %cond.true.9
  %cond14 = phi i32 [ 10, %cond.true.9 ], [ %cond13, %cond.false.10 ]
  br label %cond.end.15

cond.end.15:                                      ; preds = %cond.end, %cond.true
  %cond16 = phi i32 [ 4, %cond.true ], [ %cond14, %cond.end ]
  %call17 = call %struct.gv* @Perl_gv_fetchpv(i8* %8, i32 %cond, i32 %cond16)
  br label %if.end

if.end:                                           ; preds = %cond.end.15, %if.then
  br label %if.end.18

if.end.18:                                        ; preds = %if.end, %land.lhs.true, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @S_intuit_more(i8* %s) #0 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca i8*, align 8
  %weight = alloca i32, align 4
  %seen = alloca [256 x i8], align 16
  %un_char = alloca i8, align 1
  %last_un_char = alloca i8, align 1
  %send = alloca i8*, align 8
  %tmpbuf = alloca [1024 x i8], align 16
  %d = alloca i8*, align 8
  store i8* %s, i8** %s.addr, align 8
  %0 = load i32, i32* @PL_lex_brackets, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** %s.addr, align 8
  %2 = load i8, i8* %1, align 1
  %conv = sext i8 %2 to i32
  %cmp = icmp eq i32 %conv, 45
  br i1 %cmp, label %land.lhs.true, label %if.end.15

land.lhs.true:                                    ; preds = %if.end
  %3 = load i8*, i8** %s.addr, align 8
  %arrayidx = getelementptr inbounds i8, i8* %3, i64 1
  %4 = load i8, i8* %arrayidx, align 1
  %conv2 = sext i8 %4 to i32
  %cmp3 = icmp eq i32 %conv2, 62
  br i1 %cmp3, label %land.lhs.true.5, label %if.end.15

land.lhs.true.5:                                  ; preds = %land.lhs.true
  %5 = load i8*, i8** %s.addr, align 8
  %arrayidx6 = getelementptr inbounds i8, i8* %5, i64 2
  %6 = load i8, i8* %arrayidx6, align 1
  %conv7 = sext i8 %6 to i32
  %cmp8 = icmp eq i32 %conv7, 91
  br i1 %cmp8, label %if.then.14, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true.5
  %7 = load i8*, i8** %s.addr, align 8
  %arrayidx10 = getelementptr inbounds i8, i8* %7, i64 2
  %8 = load i8, i8* %arrayidx10, align 1
  %conv11 = sext i8 %8 to i32
  %cmp12 = icmp eq i32 %conv11, 123
  br i1 %cmp12, label %if.then.14, label %if.end.15

if.then.14:                                       ; preds = %lor.lhs.false, %land.lhs.true.5
  store i32 1, i32* %retval
  br label %return

if.end.15:                                        ; preds = %lor.lhs.false, %land.lhs.true, %if.end
  %9 = load i8*, i8** %s.addr, align 8
  %10 = load i8, i8* %9, align 1
  %conv16 = sext i8 %10 to i32
  %cmp17 = icmp ne i32 %conv16, 123
  br i1 %cmp17, label %land.lhs.true.19, label %if.end.24

land.lhs.true.19:                                 ; preds = %if.end.15
  %11 = load i8*, i8** %s.addr, align 8
  %12 = load i8, i8* %11, align 1
  %conv20 = sext i8 %12 to i32
  %cmp21 = icmp ne i32 %conv20, 91
  br i1 %cmp21, label %if.then.23, label %if.end.24

if.then.23:                                       ; preds = %land.lhs.true.19
  store i32 0, i32* %retval
  br label %return

if.end.24:                                        ; preds = %land.lhs.true.19, %if.end.15
  %13 = load %struct.op*, %struct.op** @PL_lex_inpat, align 8
  %tobool25 = icmp ne %struct.op* %13, null
  br i1 %tobool25, label %if.end.27, label %if.then.26

if.then.26:                                       ; preds = %if.end.24
  store i32 1, i32* %retval
  br label %return

if.end.27:                                        ; preds = %if.end.24
  %14 = load i8*, i8** %s.addr, align 8
  %15 = load i8, i8* %14, align 1
  %conv28 = sext i8 %15 to i32
  %cmp29 = icmp eq i32 %conv28, 123
  br i1 %cmp29, label %if.then.31, label %if.end.71

if.then.31:                                       ; preds = %if.end.27
  %16 = load i8*, i8** %s.addr, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %16, i32 1
  store i8* %incdec.ptr, i8** %s.addr, align 8
  %17 = load i8*, i8** %s.addr, align 8
  %18 = load i8, i8* %17, align 1
  %conv32 = sext i8 %18 to i32
  %cmp33 = icmp sge i32 %conv32, 48
  br i1 %cmp33, label %land.lhs.true.35, label %if.then.39

land.lhs.true.35:                                 ; preds = %if.then.31
  %19 = load i8*, i8** %s.addr, align 8
  %20 = load i8, i8* %19, align 1
  %conv36 = sext i8 %20 to i32
  %cmp37 = icmp sle i32 %conv36, 57
  br i1 %cmp37, label %if.end.40, label %if.then.39

if.then.39:                                       ; preds = %land.lhs.true.35, %if.then.31
  store i32 1, i32* %retval
  br label %return

if.end.40:                                        ; preds = %land.lhs.true.35
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end.40
  %21 = load i8*, i8** %s.addr, align 8
  %22 = load i8, i8* %21, align 1
  %conv41 = sext i8 %22 to i32
  %cmp42 = icmp sge i32 %conv41, 48
  br i1 %cmp42, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %23 = load i8*, i8** %s.addr, align 8
  %24 = load i8, i8* %23, align 1
  %conv44 = sext i8 %24 to i32
  %cmp45 = icmp sle i32 %conv44, 57
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %25 = phi i1 [ false, %while.cond ], [ %cmp45, %land.rhs ]
  br i1 %25, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %26 = load i8*, i8** %s.addr, align 8
  %incdec.ptr47 = getelementptr inbounds i8, i8* %26, i32 1
  store i8* %incdec.ptr47, i8** %s.addr, align 8
  br label %while.cond

while.end:                                        ; preds = %land.end
  %27 = load i8*, i8** %s.addr, align 8
  %28 = load i8, i8* %27, align 1
  %conv48 = sext i8 %28 to i32
  %cmp49 = icmp eq i32 %conv48, 44
  br i1 %cmp49, label %if.then.51, label %if.end.53

if.then.51:                                       ; preds = %while.end
  %29 = load i8*, i8** %s.addr, align 8
  %incdec.ptr52 = getelementptr inbounds i8, i8* %29, i32 1
  store i8* %incdec.ptr52, i8** %s.addr, align 8
  br label %if.end.53

if.end.53:                                        ; preds = %if.then.51, %while.end
  br label %while.cond.54

while.cond.54:                                    ; preds = %while.body.63, %if.end.53
  %30 = load i8*, i8** %s.addr, align 8
  %31 = load i8, i8* %30, align 1
  %conv55 = sext i8 %31 to i32
  %cmp56 = icmp sge i32 %conv55, 48
  br i1 %cmp56, label %land.rhs.58, label %land.end.62

land.rhs.58:                                      ; preds = %while.cond.54
  %32 = load i8*, i8** %s.addr, align 8
  %33 = load i8, i8* %32, align 1
  %conv59 = sext i8 %33 to i32
  %cmp60 = icmp sle i32 %conv59, 57
  br label %land.end.62

land.end.62:                                      ; preds = %land.rhs.58, %while.cond.54
  %34 = phi i1 [ false, %while.cond.54 ], [ %cmp60, %land.rhs.58 ]
  br i1 %34, label %while.body.63, label %while.end.65

while.body.63:                                    ; preds = %land.end.62
  %35 = load i8*, i8** %s.addr, align 8
  %incdec.ptr64 = getelementptr inbounds i8, i8* %35, i32 1
  store i8* %incdec.ptr64, i8** %s.addr, align 8
  br label %while.cond.54

while.end.65:                                     ; preds = %land.end.62
  %36 = load i8*, i8** %s.addr, align 8
  %37 = load i8, i8* %36, align 1
  %conv66 = sext i8 %37 to i32
  %cmp67 = icmp eq i32 %conv66, 125
  br i1 %cmp67, label %if.then.69, label %if.end.70

if.then.69:                                       ; preds = %while.end.65
  store i32 0, i32* %retval
  br label %return

if.end.70:                                        ; preds = %while.end.65
  store i32 1, i32* %retval
  br label %return

if.end.71:                                        ; preds = %if.end.27
  %38 = load i8*, i8** %s.addr, align 8
  %incdec.ptr72 = getelementptr inbounds i8, i8* %38, i32 1
  store i8* %incdec.ptr72, i8** %s.addr, align 8
  %39 = load i8*, i8** %s.addr, align 8
  %40 = load i8, i8* %39, align 1
  %conv73 = sext i8 %40 to i32
  %cmp74 = icmp eq i32 %conv73, 93
  br i1 %cmp74, label %if.then.80, label %lor.lhs.false.76

lor.lhs.false.76:                                 ; preds = %if.end.71
  %41 = load i8*, i8** %s.addr, align 8
  %42 = load i8, i8* %41, align 1
  %conv77 = sext i8 %42 to i32
  %cmp78 = icmp eq i32 %conv77, 94
  br i1 %cmp78, label %if.then.80, label %if.else

if.then.80:                                       ; preds = %lor.lhs.false.76, %if.end.71
  store i32 0, i32* %retval
  br label %return

if.else:                                          ; preds = %lor.lhs.false.76
  store i32 2, i32* %weight, align 4
  store i8 -1, i8* %un_char, align 1
  %43 = load i8*, i8** %s.addr, align 8
  %call = call i8* @strchr(i8* %43, i32 93)
  store i8* %call, i8** %send, align 8
  %44 = load i8*, i8** %send, align 8
  %tobool81 = icmp ne i8* %44, null
  br i1 %tobool81, label %if.end.83, label %if.then.82

if.then.82:                                       ; preds = %if.else
  store i32 1, i32* %retval
  br label %return

if.end.83:                                        ; preds = %if.else
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %seen, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* %arraydecay, i8 0, i64 256, i32 1, i1 false)
  %45 = load i8*, i8** %s.addr, align 8
  %46 = load i8, i8* %45, align 1
  %conv84 = sext i8 %46 to i32
  %cmp85 = icmp eq i32 %conv84, 36
  br i1 %cmp85, label %if.then.87, label %if.else.88

if.then.87:                                       ; preds = %if.end.83
  %47 = load i32, i32* %weight, align 4
  %sub = sub nsw i32 %47, 3
  store i32 %sub, i32* %weight, align 4
  br label %if.end.123

if.else.88:                                       ; preds = %if.end.83
  %48 = load i8*, i8** %s.addr, align 8
  %49 = load i8, i8* %48, align 1
  %conv89 = sext i8 %49 to i32
  %cmp90 = icmp sge i32 %conv89, 48
  br i1 %cmp90, label %land.lhs.true.92, label %if.end.122

land.lhs.true.92:                                 ; preds = %if.else.88
  %50 = load i8*, i8** %s.addr, align 8
  %51 = load i8, i8* %50, align 1
  %conv93 = sext i8 %51 to i32
  %cmp94 = icmp sle i32 %conv93, 57
  br i1 %cmp94, label %if.then.96, label %if.end.122

if.then.96:                                       ; preds = %land.lhs.true.92
  %52 = load i8*, i8** %s.addr, align 8
  %arrayidx97 = getelementptr inbounds i8, i8* %52, i64 1
  %53 = load i8, i8* %arrayidx97, align 1
  %conv98 = sext i8 %53 to i32
  %cmp99 = icmp ne i32 %conv98, 93
  br i1 %cmp99, label %if.then.101, label %if.else.119

if.then.101:                                      ; preds = %if.then.96
  %54 = load i8*, i8** %s.addr, align 8
  %arrayidx102 = getelementptr inbounds i8, i8* %54, i64 1
  %55 = load i8, i8* %arrayidx102, align 1
  %conv103 = sext i8 %55 to i32
  %cmp104 = icmp sge i32 %conv103, 48
  br i1 %cmp104, label %land.lhs.true.106, label %if.end.118

land.lhs.true.106:                                ; preds = %if.then.101
  %56 = load i8*, i8** %s.addr, align 8
  %arrayidx107 = getelementptr inbounds i8, i8* %56, i64 1
  %57 = load i8, i8* %arrayidx107, align 1
  %conv108 = sext i8 %57 to i32
  %cmp109 = icmp sle i32 %conv108, 57
  br i1 %cmp109, label %land.lhs.true.111, label %if.end.118

land.lhs.true.111:                                ; preds = %land.lhs.true.106
  %58 = load i8*, i8** %s.addr, align 8
  %arrayidx112 = getelementptr inbounds i8, i8* %58, i64 2
  %59 = load i8, i8* %arrayidx112, align 1
  %conv113 = sext i8 %59 to i32
  %cmp114 = icmp eq i32 %conv113, 93
  br i1 %cmp114, label %if.then.116, label %if.end.118

if.then.116:                                      ; preds = %land.lhs.true.111
  %60 = load i32, i32* %weight, align 4
  %sub117 = sub nsw i32 %60, 10
  store i32 %sub117, i32* %weight, align 4
  br label %if.end.118

if.end.118:                                       ; preds = %if.then.116, %land.lhs.true.111, %land.lhs.true.106, %if.then.101
  br label %if.end.121

if.else.119:                                      ; preds = %if.then.96
  %61 = load i32, i32* %weight, align 4
  %sub120 = sub nsw i32 %61, 100
  store i32 %sub120, i32* %weight, align 4
  br label %if.end.121

if.end.121:                                       ; preds = %if.else.119, %if.end.118
  br label %if.end.122

if.end.122:                                       ; preds = %if.end.121, %land.lhs.true.92, %if.else.88
  br label %if.end.123

if.end.123:                                       ; preds = %if.end.122, %if.then.87
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.123
  %62 = load i8*, i8** %s.addr, align 8
  %63 = load i8*, i8** %send, align 8
  %cmp124 = icmp ult i8* %62, %63
  br i1 %cmp124, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %64 = load i8, i8* %un_char, align 1
  store i8 %64, i8* %last_un_char, align 1
  %65 = load i8*, i8** %s.addr, align 8
  %66 = load i8, i8* %65, align 1
  store i8 %66, i8* %un_char, align 1
  %67 = load i8*, i8** %s.addr, align 8
  %68 = load i8, i8* %67, align 1
  %conv126 = sext i8 %68 to i32
  switch i32 %conv126, label %sw.default [
    i32 64, label %sw.bb
    i32 38, label %sw.bb
    i32 36, label %sw.bb
    i32 92, label %sw.bb.229
    i32 45, label %sw.bb.293
  ]

sw.bb:                                            ; preds = %for.body, %for.body, %for.body
  %69 = load i8, i8* %un_char, align 1
  %idxprom = zext i8 %69 to i64
  %arrayidx127 = getelementptr inbounds [256 x i8], [256 x i8]* %seen, i32 0, i64 %idxprom
  %70 = load i8, i8* %arrayidx127, align 1
  %conv128 = sext i8 %70 to i32
  %mul = mul nsw i32 %conv128, 10
  %71 = load i32, i32* %weight, align 4
  %sub129 = sub nsw i32 %71, %mul
  store i32 %sub129, i32* %weight, align 4
  %72 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private = getelementptr inbounds %struct.cop, %struct.cop* %72, i32 0, i32 7
  %73 = load i8, i8* %op_private, align 1
  %conv130 = zext i8 %73 to i32
  %and = and i32 %conv130, 8
  %tobool131 = icmp ne i32 %and, 0
  br i1 %tobool131, label %cond.true, label %lor.lhs.false.132

lor.lhs.false.132:                                ; preds = %sw.bb
  %74 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %tobool133 = icmp ne %struct.sv* %74, null
  br i1 %tobool133, label %land.lhs.true.134, label %lor.lhs.false.142

land.lhs.true.134:                                ; preds = %lor.lhs.false.132
  %75 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %75, i32 0, i32 2
  %76 = load i32, i32* %sv_flags, align 4
  %and135 = and i32 %76, 536870912
  %tobool136 = icmp ne i32 %and135, 0
  br i1 %tobool136, label %land.lhs.true.137, label %lor.lhs.false.142

land.lhs.true.137:                                ; preds = %land.lhs.true.134
  %77 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private138 = getelementptr inbounds %struct.cop, %struct.cop* %77, i32 0, i32 7
  %78 = load i8, i8* %op_private138, align 1
  %conv139 = zext i8 %78 to i32
  %and140 = and i32 %conv139, 8
  %tobool141 = icmp ne i32 %and140, 0
  br i1 %tobool141, label %lor.lhs.false.142, label %lor.lhs.false.145

lor.lhs.false.142:                                ; preds = %land.lhs.true.137, %land.lhs.true.134, %lor.lhs.false.132
  %79 = load i32, i32* @PL_hints, align 4
  %and143 = and i32 %79, 8388608
  %tobool144 = icmp ne i32 %and143, 0
  br i1 %tobool144, label %lor.lhs.false.145, label %cond.true

lor.lhs.false.145:                                ; preds = %lor.lhs.false.142, %land.lhs.true.137
  %80 = load i8*, i8** %s.addr, align 8
  %add.ptr = getelementptr inbounds i8, i8* %80, i64 1
  %81 = load i8, i8* %add.ptr, align 1
  %conv146 = zext i8 %81 to i32
  %cmp147 = icmp slt i32 %conv146, 192
  br i1 %cmp147, label %cond.true, label %cond.false

cond.true:                                        ; preds = %lor.lhs.false.145, %lor.lhs.false.142, %sw.bb
  %82 = load i8*, i8** %s.addr, align 8
  %add.ptr149 = getelementptr inbounds i8, i8* %82, i64 1
  %83 = load i8, i8* %add.ptr149, align 1
  %conv150 = sext i8 %83 to i32
  %cmp151 = icmp sge i32 %conv150, 65
  br i1 %cmp151, label %land.lhs.true.153, label %lor.lhs.false.158

land.lhs.true.153:                                ; preds = %cond.true
  %84 = load i8*, i8** %s.addr, align 8
  %add.ptr154 = getelementptr inbounds i8, i8* %84, i64 1
  %85 = load i8, i8* %add.ptr154, align 1
  %conv155 = sext i8 %85 to i32
  %cmp156 = icmp sle i32 %conv155, 90
  br i1 %cmp156, label %if.then.187, label %lor.lhs.false.158

lor.lhs.false.158:                                ; preds = %land.lhs.true.153, %cond.true
  %86 = load i8*, i8** %s.addr, align 8
  %add.ptr159 = getelementptr inbounds i8, i8* %86, i64 1
  %87 = load i8, i8* %add.ptr159, align 1
  %conv160 = sext i8 %87 to i32
  %cmp161 = icmp sge i32 %conv160, 97
  br i1 %cmp161, label %land.lhs.true.163, label %lor.lhs.false.168

land.lhs.true.163:                                ; preds = %lor.lhs.false.158
  %88 = load i8*, i8** %s.addr, align 8
  %add.ptr164 = getelementptr inbounds i8, i8* %88, i64 1
  %89 = load i8, i8* %add.ptr164, align 1
  %conv165 = sext i8 %89 to i32
  %cmp166 = icmp sle i32 %conv165, 122
  br i1 %cmp166, label %if.then.187, label %lor.lhs.false.168

lor.lhs.false.168:                                ; preds = %land.lhs.true.163, %lor.lhs.false.158
  %90 = load i8*, i8** %s.addr, align 8
  %add.ptr169 = getelementptr inbounds i8, i8* %90, i64 1
  %91 = load i8, i8* %add.ptr169, align 1
  %conv170 = sext i8 %91 to i32
  %cmp171 = icmp sge i32 %conv170, 48
  br i1 %cmp171, label %land.lhs.true.173, label %lor.lhs.false.178

land.lhs.true.173:                                ; preds = %lor.lhs.false.168
  %92 = load i8*, i8** %s.addr, align 8
  %add.ptr174 = getelementptr inbounds i8, i8* %92, i64 1
  %93 = load i8, i8* %add.ptr174, align 1
  %conv175 = sext i8 %93 to i32
  %cmp176 = icmp sle i32 %conv175, 57
  br i1 %cmp176, label %if.then.187, label %lor.lhs.false.178

lor.lhs.false.178:                                ; preds = %land.lhs.true.173, %lor.lhs.false.168
  %94 = load i8*, i8** %s.addr, align 8
  %add.ptr179 = getelementptr inbounds i8, i8* %94, i64 1
  %95 = load i8, i8* %add.ptr179, align 1
  %conv180 = sext i8 %95 to i32
  %cmp181 = icmp eq i32 %conv180, 95
  br i1 %cmp181, label %if.then.187, label %if.else.204

cond.false:                                       ; preds = %lor.lhs.false.145
  %96 = load i8*, i8** %s.addr, align 8
  %add.ptr183 = getelementptr inbounds i8, i8* %96, i64 1
  %call184 = call signext i8 @Perl_is_utf8_alnum(i8* %add.ptr183)
  %conv185 = sext i8 %call184 to i32
  %tobool186 = icmp ne i32 %conv185, 0
  br i1 %tobool186, label %if.then.187, label %if.else.204

if.then.187:                                      ; preds = %cond.false, %lor.lhs.false.178, %land.lhs.true.173, %land.lhs.true.163, %land.lhs.true.153
  %97 = load i8*, i8** %s.addr, align 8
  %98 = load i8*, i8** %send, align 8
  %arraydecay188 = getelementptr inbounds [1024 x i8], [1024 x i8]* %tmpbuf, i32 0, i32 0
  %call189 = call i8* @S_scan_ident(i8* %97, i8* %98, i8* %arraydecay188, i64 1024, i32 0)
  %arraydecay190 = getelementptr inbounds [1024 x i8], [1024 x i8]* %tmpbuf, i32 0, i32 0
  %call191 = call i64 @strlen(i8* %arraydecay190)
  %conv192 = trunc i64 %call191 to i32
  %cmp193 = icmp sgt i32 %conv192, 1
  br i1 %cmp193, label %land.lhs.true.195, label %if.else.201

land.lhs.true.195:                                ; preds = %if.then.187
  %arraydecay196 = getelementptr inbounds [1024 x i8], [1024 x i8]* %tmpbuf, i32 0, i32 0
  %call197 = call %struct.gv* @Perl_gv_fetchpv(i8* %arraydecay196, i32 0, i32 4)
  %tobool198 = icmp ne %struct.gv* %call197, null
  br i1 %tobool198, label %if.then.199, label %if.else.201

if.then.199:                                      ; preds = %land.lhs.true.195
  %99 = load i32, i32* %weight, align 4
  %sub200 = sub nsw i32 %99, 100
  store i32 %sub200, i32* %weight, align 4
  br label %if.end.203

if.else.201:                                      ; preds = %land.lhs.true.195, %if.then.187
  %100 = load i32, i32* %weight, align 4
  %sub202 = sub nsw i32 %100, 10
  store i32 %sub202, i32* %weight, align 4
  br label %if.end.203

if.end.203:                                       ; preds = %if.else.201, %if.then.199
  br label %if.end.228

if.else.204:                                      ; preds = %cond.false, %lor.lhs.false.178
  %101 = load i8*, i8** %s.addr, align 8
  %102 = load i8, i8* %101, align 1
  %conv205 = sext i8 %102 to i32
  %cmp206 = icmp eq i32 %conv205, 36
  br i1 %cmp206, label %land.lhs.true.208, label %if.end.227

land.lhs.true.208:                                ; preds = %if.else.204
  %103 = load i8*, i8** %s.addr, align 8
  %arrayidx209 = getelementptr inbounds i8, i8* %103, i64 1
  %104 = load i8, i8* %arrayidx209, align 1
  %conv210 = sext i8 %104 to i32
  %tobool211 = icmp ne i32 %conv210, 0
  br i1 %tobool211, label %land.lhs.true.212, label %if.end.227

land.lhs.true.212:                                ; preds = %land.lhs.true.208
  %105 = load i8*, i8** %s.addr, align 8
  %arrayidx213 = getelementptr inbounds i8, i8* %105, i64 1
  %106 = load i8, i8* %arrayidx213, align 1
  %conv214 = sext i8 %106 to i32
  %call215 = call i8* @strchr(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.152, i32 0, i32 0), i32 %conv214)
  %tobool216 = icmp ne i8* %call215, null
  br i1 %tobool216, label %if.then.217, label %if.end.227

if.then.217:                                      ; preds = %land.lhs.true.212
  %107 = load i8*, i8** %s.addr, align 8
  %arrayidx218 = getelementptr inbounds i8, i8* %107, i64 2
  %108 = load i8, i8* %arrayidx218, align 1
  %conv219 = sext i8 %108 to i32
  %call220 = call i8* @strchr(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.153, i32 0, i32 0), i32 %conv219)
  %tobool221 = icmp ne i8* %call220, null
  br i1 %tobool221, label %if.then.222, label %if.else.224

if.then.222:                                      ; preds = %if.then.217
  %109 = load i32, i32* %weight, align 4
  %sub223 = sub nsw i32 %109, 10
  store i32 %sub223, i32* %weight, align 4
  br label %if.end.226

if.else.224:                                      ; preds = %if.then.217
  %110 = load i32, i32* %weight, align 4
  %sub225 = sub nsw i32 %110, 1
  store i32 %sub225, i32* %weight, align 4
  br label %if.end.226

if.end.226:                                       ; preds = %if.else.224, %if.then.222
  br label %if.end.227

if.end.227:                                       ; preds = %if.end.226, %land.lhs.true.212, %land.lhs.true.208, %if.else.204
  br label %if.end.228

if.end.228:                                       ; preds = %if.end.227, %if.end.203
  br label %sw.epilog

sw.bb.229:                                        ; preds = %for.body
  store i8 -2, i8* %un_char, align 1
  %111 = load i8*, i8** %s.addr, align 8
  %arrayidx230 = getelementptr inbounds i8, i8* %111, i64 1
  %112 = load i8, i8* %arrayidx230, align 1
  %tobool231 = icmp ne i8 %112, 0
  br i1 %tobool231, label %if.then.232, label %if.else.290

if.then.232:                                      ; preds = %sw.bb.229
  %113 = load i8*, i8** %s.addr, align 8
  %arrayidx233 = getelementptr inbounds i8, i8* %113, i64 1
  %114 = load i8, i8* %arrayidx233, align 1
  %conv234 = sext i8 %114 to i32
  %call235 = call i8* @strchr(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.154, i32 0, i32 0), i32 %conv234)
  %tobool236 = icmp ne i8* %call235, null
  br i1 %tobool236, label %if.then.237, label %if.else.238

if.then.237:                                      ; preds = %if.then.232
  %115 = load i32, i32* %weight, align 4
  %add = add nsw i32 %115, 100
  store i32 %add, i32* %weight, align 4
  br label %if.end.289

if.else.238:                                      ; preds = %if.then.232
  %arrayidx239 = getelementptr inbounds [256 x i8], [256 x i8]* %seen, i32 0, i64 39
  %116 = load i8, i8* %arrayidx239, align 1
  %conv240 = sext i8 %116 to i32
  %tobool241 = icmp ne i32 %conv240, 0
  br i1 %tobool241, label %if.then.246, label %lor.lhs.false.242

lor.lhs.false.242:                                ; preds = %if.else.238
  %arrayidx243 = getelementptr inbounds [256 x i8], [256 x i8]* %seen, i32 0, i64 34
  %117 = load i8, i8* %arrayidx243, align 1
  %conv244 = sext i8 %117 to i32
  %tobool245 = icmp ne i32 %conv244, 0
  br i1 %tobool245, label %if.then.246, label %if.else.248

if.then.246:                                      ; preds = %lor.lhs.false.242, %if.else.238
  %118 = load i32, i32* %weight, align 4
  %add247 = add nsw i32 %118, 1
  store i32 %add247, i32* %weight, align 4
  br label %if.end.288

if.else.248:                                      ; preds = %lor.lhs.false.242
  %119 = load i8*, i8** %s.addr, align 8
  %arrayidx249 = getelementptr inbounds i8, i8* %119, i64 1
  %120 = load i8, i8* %arrayidx249, align 1
  %conv250 = sext i8 %120 to i32
  %call251 = call i8* @strchr(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.155, i32 0, i32 0), i32 %conv250)
  %tobool252 = icmp ne i8* %call251, null
  br i1 %tobool252, label %if.then.253, label %if.else.255

if.then.253:                                      ; preds = %if.else.248
  %121 = load i32, i32* %weight, align 4
  %add254 = add nsw i32 %121, 40
  store i32 %add254, i32* %weight, align 4
  br label %if.end.287

if.else.255:                                      ; preds = %if.else.248
  %122 = load i8*, i8** %s.addr, align 8
  %arrayidx256 = getelementptr inbounds i8, i8* %122, i64 1
  %123 = load i8, i8* %arrayidx256, align 1
  %conv257 = sext i8 %123 to i32
  %cmp258 = icmp sge i32 %conv257, 48
  br i1 %cmp258, label %land.lhs.true.260, label %if.end.286

land.lhs.true.260:                                ; preds = %if.else.255
  %124 = load i8*, i8** %s.addr, align 8
  %arrayidx261 = getelementptr inbounds i8, i8* %124, i64 1
  %125 = load i8, i8* %arrayidx261, align 1
  %conv262 = sext i8 %125 to i32
  %cmp263 = icmp sle i32 %conv262, 57
  br i1 %cmp263, label %if.then.265, label %if.end.286

if.then.265:                                      ; preds = %land.lhs.true.260
  %126 = load i32, i32* %weight, align 4
  %add266 = add nsw i32 %126, 40
  store i32 %add266, i32* %weight, align 4
  br label %while.cond.267

while.cond.267:                                   ; preds = %while.body.283, %if.then.265
  %127 = load i8*, i8** %s.addr, align 8
  %arrayidx268 = getelementptr inbounds i8, i8* %127, i64 1
  %128 = load i8, i8* %arrayidx268, align 1
  %conv269 = sext i8 %128 to i32
  %tobool270 = icmp ne i32 %conv269, 0
  br i1 %tobool270, label %land.rhs.271, label %land.end.282

land.rhs.271:                                     ; preds = %while.cond.267
  %129 = load i8*, i8** %s.addr, align 8
  %arrayidx272 = getelementptr inbounds i8, i8* %129, i64 1
  %130 = load i8, i8* %arrayidx272, align 1
  %conv273 = sext i8 %130 to i32
  %cmp274 = icmp sge i32 %conv273, 48
  br i1 %cmp274, label %land.rhs.276, label %land.end.281

land.rhs.276:                                     ; preds = %land.rhs.271
  %131 = load i8*, i8** %s.addr, align 8
  %arrayidx277 = getelementptr inbounds i8, i8* %131, i64 1
  %132 = load i8, i8* %arrayidx277, align 1
  %conv278 = sext i8 %132 to i32
  %cmp279 = icmp sle i32 %conv278, 57
  br label %land.end.281

land.end.281:                                     ; preds = %land.rhs.276, %land.rhs.271
  %133 = phi i1 [ false, %land.rhs.271 ], [ %cmp279, %land.rhs.276 ]
  br label %land.end.282

land.end.282:                                     ; preds = %land.end.281, %while.cond.267
  %134 = phi i1 [ false, %while.cond.267 ], [ %133, %land.end.281 ]
  br i1 %134, label %while.body.283, label %while.end.285

while.body.283:                                   ; preds = %land.end.282
  %135 = load i8*, i8** %s.addr, align 8
  %incdec.ptr284 = getelementptr inbounds i8, i8* %135, i32 1
  store i8* %incdec.ptr284, i8** %s.addr, align 8
  br label %while.cond.267

while.end.285:                                    ; preds = %land.end.282
  br label %if.end.286

if.end.286:                                       ; preds = %while.end.285, %land.lhs.true.260, %if.else.255
  br label %if.end.287

if.end.287:                                       ; preds = %if.end.286, %if.then.253
  br label %if.end.288

if.end.288:                                       ; preds = %if.end.287, %if.then.246
  br label %if.end.289

if.end.289:                                       ; preds = %if.end.288, %if.then.237
  br label %if.end.292

if.else.290:                                      ; preds = %sw.bb.229
  %136 = load i32, i32* %weight, align 4
  %add291 = add nsw i32 %136, 100
  store i32 %add291, i32* %weight, align 4
  br label %if.end.292

if.end.292:                                       ; preds = %if.else.290, %if.end.289
  br label %sw.epilog

sw.bb.293:                                        ; preds = %for.body
  %137 = load i8*, i8** %s.addr, align 8
  %arrayidx294 = getelementptr inbounds i8, i8* %137, i64 1
  %138 = load i8, i8* %arrayidx294, align 1
  %conv295 = sext i8 %138 to i32
  %cmp296 = icmp eq i32 %conv295, 92
  br i1 %cmp296, label %if.then.298, label %if.end.300

if.then.298:                                      ; preds = %sw.bb.293
  %139 = load i32, i32* %weight, align 4
  %add299 = add nsw i32 %139, 50
  store i32 %add299, i32* %weight, align 4
  br label %if.end.300

if.end.300:                                       ; preds = %if.then.298, %sw.bb.293
  %140 = load i8, i8* %last_un_char, align 1
  %conv301 = zext i8 %140 to i32
  %call302 = call i8* @strchr(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.156, i32 0, i32 0), i32 %conv301)
  %tobool303 = icmp ne i8* %call302, null
  br i1 %tobool303, label %if.then.304, label %if.end.306

if.then.304:                                      ; preds = %if.end.300
  %141 = load i32, i32* %weight, align 4
  %add305 = add nsw i32 %141, 30
  store i32 %add305, i32* %weight, align 4
  br label %if.end.306

if.end.306:                                       ; preds = %if.then.304, %if.end.300
  %142 = load i8*, i8** %s.addr, align 8
  %arrayidx307 = getelementptr inbounds i8, i8* %142, i64 1
  %143 = load i8, i8* %arrayidx307, align 1
  %conv308 = sext i8 %143 to i32
  %call309 = call i8* @strchr(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.157, i32 0, i32 0), i32 %conv308)
  %tobool310 = icmp ne i8* %call309, null
  br i1 %tobool310, label %if.then.311, label %if.end.313

if.then.311:                                      ; preds = %if.end.306
  %144 = load i32, i32* %weight, align 4
  %add312 = add nsw i32 %144, 30
  store i32 %add312, i32* %weight, align 4
  br label %if.end.313

if.end.313:                                       ; preds = %if.then.311, %if.end.306
  %145 = load i8, i8* %last_un_char, align 1
  %conv314 = zext i8 %145 to i32
  %cmp315 = icmp eq i32 %conv314, 255
  br i1 %cmp315, label %land.lhs.true.317, label %if.end.334

land.lhs.true.317:                                ; preds = %if.end.313
  %146 = load i8*, i8** %s.addr, align 8
  %arrayidx318 = getelementptr inbounds i8, i8* %146, i64 1
  %147 = load i8, i8* %arrayidx318, align 1
  %conv319 = sext i8 %147 to i32
  %cmp320 = icmp sge i32 %conv319, 48
  br i1 %cmp320, label %land.lhs.true.322, label %lor.lhs.false.327

land.lhs.true.322:                                ; preds = %land.lhs.true.317
  %148 = load i8*, i8** %s.addr, align 8
  %arrayidx323 = getelementptr inbounds i8, i8* %148, i64 1
  %149 = load i8, i8* %arrayidx323, align 1
  %conv324 = sext i8 %149 to i32
  %cmp325 = icmp sle i32 %conv324, 57
  br i1 %cmp325, label %if.then.332, label %lor.lhs.false.327

lor.lhs.false.327:                                ; preds = %land.lhs.true.322, %land.lhs.true.317
  %150 = load i8*, i8** %s.addr, align 8
  %arrayidx328 = getelementptr inbounds i8, i8* %150, i64 1
  %151 = load i8, i8* %arrayidx328, align 1
  %conv329 = sext i8 %151 to i32
  %cmp330 = icmp eq i32 %conv329, 36
  br i1 %cmp330, label %if.then.332, label %if.end.334

if.then.332:                                      ; preds = %lor.lhs.false.327, %land.lhs.true.322
  %152 = load i32, i32* %weight, align 4
  %sub333 = sub nsw i32 %152, 5
  store i32 %sub333, i32* %weight, align 4
  br label %if.end.334

if.end.334:                                       ; preds = %if.then.332, %lor.lhs.false.327, %if.end.313
  br label %sw.epilog

sw.default:                                       ; preds = %for.body
  %153 = load i8, i8* %last_un_char, align 1
  %conv335 = zext i8 %153 to i32
  %cmp336 = icmp sge i32 %conv335, 65
  br i1 %cmp336, label %land.lhs.true.338, label %lor.lhs.false.342

land.lhs.true.338:                                ; preds = %sw.default
  %154 = load i8, i8* %last_un_char, align 1
  %conv339 = zext i8 %154 to i32
  %cmp340 = icmp sle i32 %conv339, 90
  br i1 %cmp340, label %if.end.444, label %lor.lhs.false.342

lor.lhs.false.342:                                ; preds = %land.lhs.true.338, %sw.default
  %155 = load i8, i8* %last_un_char, align 1
  %conv343 = zext i8 %155 to i32
  %cmp344 = icmp sge i32 %conv343, 97
  br i1 %cmp344, label %land.lhs.true.346, label %lor.lhs.false.350

land.lhs.true.346:                                ; preds = %lor.lhs.false.342
  %156 = load i8, i8* %last_un_char, align 1
  %conv347 = zext i8 %156 to i32
  %cmp348 = icmp sle i32 %conv347, 122
  br i1 %cmp348, label %if.end.444, label %lor.lhs.false.350

lor.lhs.false.350:                                ; preds = %land.lhs.true.346, %lor.lhs.false.342
  %157 = load i8, i8* %last_un_char, align 1
  %conv351 = zext i8 %157 to i32
  %cmp352 = icmp sge i32 %conv351, 48
  br i1 %cmp352, label %land.lhs.true.354, label %lor.lhs.false.358

land.lhs.true.354:                                ; preds = %lor.lhs.false.350
  %158 = load i8, i8* %last_un_char, align 1
  %conv355 = zext i8 %158 to i32
  %cmp356 = icmp sle i32 %conv355, 57
  br i1 %cmp356, label %if.end.444, label %lor.lhs.false.358

lor.lhs.false.358:                                ; preds = %land.lhs.true.354, %lor.lhs.false.350
  %159 = load i8, i8* %last_un_char, align 1
  %conv359 = zext i8 %159 to i32
  %cmp360 = icmp eq i32 %conv359, 95
  br i1 %cmp360, label %if.end.444, label %land.lhs.true.362

land.lhs.true.362:                                ; preds = %lor.lhs.false.358
  %160 = load i8, i8* %last_un_char, align 1
  %conv363 = zext i8 %160 to i32
  %cmp364 = icmp eq i32 %conv363, 36
  br i1 %cmp364, label %if.end.444, label %lor.lhs.false.366

lor.lhs.false.366:                                ; preds = %land.lhs.true.362
  %161 = load i8, i8* %last_un_char, align 1
  %conv367 = zext i8 %161 to i32
  %cmp368 = icmp eq i32 %conv367, 64
  br i1 %cmp368, label %if.end.444, label %lor.lhs.false.370

lor.lhs.false.370:                                ; preds = %lor.lhs.false.366
  %162 = load i8, i8* %last_un_char, align 1
  %conv371 = zext i8 %162 to i32
  %cmp372 = icmp eq i32 %conv371, 38
  br i1 %cmp372, label %if.end.444, label %land.lhs.true.374

land.lhs.true.374:                                ; preds = %lor.lhs.false.370
  %163 = load i8*, i8** %s.addr, align 8
  %164 = load i8, i8* %163, align 1
  %conv375 = sext i8 %164 to i32
  %cmp376 = icmp sge i32 %conv375, 65
  br i1 %cmp376, label %land.lhs.true.378, label %lor.lhs.false.382

land.lhs.true.378:                                ; preds = %land.lhs.true.374
  %165 = load i8*, i8** %s.addr, align 8
  %166 = load i8, i8* %165, align 1
  %conv379 = sext i8 %166 to i32
  %cmp380 = icmp sle i32 %conv379, 90
  br i1 %cmp380, label %land.lhs.true.390, label %lor.lhs.false.382

lor.lhs.false.382:                                ; preds = %land.lhs.true.378, %land.lhs.true.374
  %167 = load i8*, i8** %s.addr, align 8
  %168 = load i8, i8* %167, align 1
  %conv383 = sext i8 %168 to i32
  %cmp384 = icmp sge i32 %conv383, 97
  br i1 %cmp384, label %land.lhs.true.386, label %if.end.444

land.lhs.true.386:                                ; preds = %lor.lhs.false.382
  %169 = load i8*, i8** %s.addr, align 8
  %170 = load i8, i8* %169, align 1
  %conv387 = sext i8 %170 to i32
  %cmp388 = icmp sle i32 %conv387, 122
  br i1 %cmp388, label %land.lhs.true.390, label %if.end.444

land.lhs.true.390:                                ; preds = %land.lhs.true.386, %land.lhs.true.378
  %171 = load i8*, i8** %s.addr, align 8
  %arrayidx391 = getelementptr inbounds i8, i8* %171, i64 1
  %172 = load i8, i8* %arrayidx391, align 1
  %conv392 = sext i8 %172 to i32
  %tobool393 = icmp ne i32 %conv392, 0
  br i1 %tobool393, label %land.lhs.true.394, label %if.end.444

land.lhs.true.394:                                ; preds = %land.lhs.true.390
  %173 = load i8*, i8** %s.addr, align 8
  %arrayidx395 = getelementptr inbounds i8, i8* %173, i64 1
  %174 = load i8, i8* %arrayidx395, align 1
  %conv396 = sext i8 %174 to i32
  %cmp397 = icmp sge i32 %conv396, 65
  br i1 %cmp397, label %land.lhs.true.399, label %lor.lhs.false.404

land.lhs.true.399:                                ; preds = %land.lhs.true.394
  %175 = load i8*, i8** %s.addr, align 8
  %arrayidx400 = getelementptr inbounds i8, i8* %175, i64 1
  %176 = load i8, i8* %arrayidx400, align 1
  %conv401 = sext i8 %176 to i32
  %cmp402 = icmp sle i32 %conv401, 90
  br i1 %cmp402, label %if.then.414, label %lor.lhs.false.404

lor.lhs.false.404:                                ; preds = %land.lhs.true.399, %land.lhs.true.394
  %177 = load i8*, i8** %s.addr, align 8
  %arrayidx405 = getelementptr inbounds i8, i8* %177, i64 1
  %178 = load i8, i8* %arrayidx405, align 1
  %conv406 = sext i8 %178 to i32
  %cmp407 = icmp sge i32 %conv406, 97
  br i1 %cmp407, label %land.lhs.true.409, label %if.end.444

land.lhs.true.409:                                ; preds = %lor.lhs.false.404
  %179 = load i8*, i8** %s.addr, align 8
  %arrayidx410 = getelementptr inbounds i8, i8* %179, i64 1
  %180 = load i8, i8* %arrayidx410, align 1
  %conv411 = sext i8 %180 to i32
  %cmp412 = icmp sle i32 %conv411, 122
  br i1 %cmp412, label %if.then.414, label %if.end.444

if.then.414:                                      ; preds = %land.lhs.true.409, %land.lhs.true.399
  %arraydecay415 = getelementptr inbounds [1024 x i8], [1024 x i8]* %tmpbuf, i32 0, i32 0
  store i8* %arraydecay415, i8** %d, align 8
  br label %while.cond.416

while.cond.416:                                   ; preds = %while.body.432, %if.then.414
  %181 = load i8*, i8** %s.addr, align 8
  %182 = load i8, i8* %181, align 1
  %conv417 = sext i8 %182 to i32
  %cmp418 = icmp sge i32 %conv417, 65
  br i1 %cmp418, label %land.lhs.true.420, label %lor.rhs

land.lhs.true.420:                                ; preds = %while.cond.416
  %183 = load i8*, i8** %s.addr, align 8
  %184 = load i8, i8* %183, align 1
  %conv421 = sext i8 %184 to i32
  %cmp422 = icmp sle i32 %conv421, 90
  br i1 %cmp422, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %land.lhs.true.420, %while.cond.416
  %185 = load i8*, i8** %s.addr, align 8
  %186 = load i8, i8* %185, align 1
  %conv424 = sext i8 %186 to i32
  %cmp425 = icmp sge i32 %conv424, 97
  br i1 %cmp425, label %land.rhs.427, label %land.end.431

land.rhs.427:                                     ; preds = %lor.rhs
  %187 = load i8*, i8** %s.addr, align 8
  %188 = load i8, i8* %187, align 1
  %conv428 = sext i8 %188 to i32
  %cmp429 = icmp sle i32 %conv428, 122
  br label %land.end.431

land.end.431:                                     ; preds = %land.rhs.427, %lor.rhs
  %189 = phi i1 [ false, %lor.rhs ], [ %cmp429, %land.rhs.427 ]
  br label %lor.end

lor.end:                                          ; preds = %land.end.431, %land.lhs.true.420
  %190 = phi i1 [ true, %land.lhs.true.420 ], [ %189, %land.end.431 ]
  br i1 %190, label %while.body.432, label %while.end.435

while.body.432:                                   ; preds = %lor.end
  %191 = load i8*, i8** %s.addr, align 8
  %incdec.ptr433 = getelementptr inbounds i8, i8* %191, i32 1
  store i8* %incdec.ptr433, i8** %s.addr, align 8
  %192 = load i8, i8* %191, align 1
  %193 = load i8*, i8** %d, align 8
  %incdec.ptr434 = getelementptr inbounds i8, i8* %193, i32 1
  store i8* %incdec.ptr434, i8** %d, align 8
  store i8 %192, i8* %193, align 1
  br label %while.cond.416

while.end.435:                                    ; preds = %lor.end
  %194 = load i8*, i8** %d, align 8
  store i8 0, i8* %194, align 1
  %arraydecay436 = getelementptr inbounds [1024 x i8], [1024 x i8]* %tmpbuf, i32 0, i32 0
  %195 = load i8*, i8** %d, align 8
  %arraydecay437 = getelementptr inbounds [1024 x i8], [1024 x i8]* %tmpbuf, i32 0, i32 0
  %sub.ptr.lhs.cast = ptrtoint i8* %195 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %arraydecay437 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %conv438 = trunc i64 %sub.ptr.sub to i32
  %call439 = call i32 @Perl_keyword(i8* %arraydecay436, i32 %conv438)
  %tobool440 = icmp ne i32 %call439, 0
  br i1 %tobool440, label %if.then.441, label %if.end.443

if.then.441:                                      ; preds = %while.end.435
  %196 = load i32, i32* %weight, align 4
  %sub442 = sub nsw i32 %196, 150
  store i32 %sub442, i32* %weight, align 4
  br label %if.end.443

if.end.443:                                       ; preds = %if.then.441, %while.end.435
  br label %if.end.444

if.end.444:                                       ; preds = %if.end.443, %land.lhs.true.409, %lor.lhs.false.404, %land.lhs.true.390, %land.lhs.true.386, %lor.lhs.false.382, %lor.lhs.false.370, %lor.lhs.false.366, %land.lhs.true.362, %lor.lhs.false.358, %land.lhs.true.354, %land.lhs.true.346, %land.lhs.true.338
  %197 = load i8, i8* %un_char, align 1
  %conv445 = zext i8 %197 to i32
  %198 = load i8, i8* %last_un_char, align 1
  %conv446 = zext i8 %198 to i32
  %add447 = add nsw i32 %conv446, 1
  %cmp448 = icmp eq i32 %conv445, %add447
  br i1 %cmp448, label %if.then.450, label %if.end.452

if.then.450:                                      ; preds = %if.end.444
  %199 = load i32, i32* %weight, align 4
  %add451 = add nsw i32 %199, 5
  store i32 %add451, i32* %weight, align 4
  br label %if.end.452

if.end.452:                                       ; preds = %if.then.450, %if.end.444
  %200 = load i8, i8* %un_char, align 1
  %idxprom453 = zext i8 %200 to i64
  %arrayidx454 = getelementptr inbounds [256 x i8], [256 x i8]* %seen, i32 0, i64 %idxprom453
  %201 = load i8, i8* %arrayidx454, align 1
  %conv455 = sext i8 %201 to i32
  %202 = load i32, i32* %weight, align 4
  %sub456 = sub nsw i32 %202, %conv455
  store i32 %sub456, i32* %weight, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end.452, %if.end.334, %if.end.292, %if.end.228
  %203 = load i8, i8* %un_char, align 1
  %idxprom457 = zext i8 %203 to i64
  %arrayidx458 = getelementptr inbounds [256 x i8], [256 x i8]* %seen, i32 0, i64 %idxprom457
  %204 = load i8, i8* %arrayidx458, align 1
  %inc = add i8 %204, 1
  store i8 %inc, i8* %arrayidx458, align 1
  br label %for.inc

for.inc:                                          ; preds = %sw.epilog
  %205 = load i8*, i8** %s.addr, align 8
  %incdec.ptr459 = getelementptr inbounds i8, i8* %205, i32 1
  store i8* %incdec.ptr459, i8** %s.addr, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %206 = load i32, i32* %weight, align 4
  %cmp460 = icmp sge i32 %206, 0
  br i1 %cmp460, label %if.then.462, label %if.end.463

if.then.462:                                      ; preds = %for.end
  store i32 0, i32* %retval
  br label %return

if.end.463:                                       ; preds = %for.end
  br label %if.end.464

if.end.464:                                       ; preds = %if.end.463
  store i32 1, i32* %retval
  br label %return

return:                                           ; preds = %if.end.464, %if.then.462, %if.then.82, %if.then.80, %if.end.70, %if.then.69, %if.then.39, %if.then.26, %if.then.23, %if.then.14, %if.then
  %207 = load i32, i32* %retval
  ret i32 %207
}

; Function Attrs: nounwind uwtable
define internal %struct.sv* @S_tokeq(%struct.sv* %sv) #0 {
entry:
  %retval = alloca %struct.sv*, align 8
  %sv.addr = alloca %struct.sv*, align 8
  %s = alloca i8*, align 8
  %send = alloca i8*, align 8
  %d = alloca i8*, align 8
  %len = alloca i64, align 8
  %pv = alloca %struct.sv*, align 8
  %tmp = alloca i64, align 8
  store %struct.sv* %sv, %struct.sv** %sv.addr, align 8
  store i64 0, i64* %len, align 8
  %0 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  store %struct.sv* %0, %struct.sv** %pv, align 8
  %1 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %1, i32 0, i32 0
  %2 = load i8*, i8** %sv_any, align 8
  %3 = bitcast i8* %2 to %struct.xpv*
  %xpv_len = getelementptr inbounds %struct.xpv, %struct.xpv* %3, i32 0, i32 2
  %4 = load i64, i64* %xpv_len, align 8
  %tobool = icmp ne i64 %4, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  br label %finish

if.end:                                           ; preds = %entry
  %5 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %5, i32 0, i32 2
  %6 = load i32, i32* %sv_flags, align 4
  %and = and i32 %6, 10223616
  %cmp = icmp eq i32 %and, 262144
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end
  %7 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_any1 = getelementptr inbounds %struct.sv, %struct.sv* %7, i32 0, i32 0
  %8 = load i8*, i8** %sv_any1, align 8
  %9 = bitcast i8* %8 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %9, i32 0, i32 1
  %10 = load i64, i64* %xpv_cur, align 8
  store i64 %10, i64* %len, align 8
  %11 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_any2 = getelementptr inbounds %struct.sv, %struct.sv* %11, i32 0, i32 0
  %12 = load i8*, i8** %sv_any2, align 8
  %13 = bitcast i8* %12 to %struct.xpv*
  %xpv_pv = getelementptr inbounds %struct.xpv, %struct.xpv* %13, i32 0, i32 0
  %14 = load i8*, i8** %xpv_pv, align 8
  br label %cond.end

cond.false:                                       ; preds = %if.end
  %15 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %call = call i8* @Perl_sv_pvn_force_flags(%struct.sv* %15, i64* %len, i32 2)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %14, %cond.true ], [ %call, %cond.false ]
  store i8* %cond, i8** %s, align 8
  %16 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags3 = getelementptr inbounds %struct.sv, %struct.sv* %16, i32 0, i32 2
  %17 = load i32, i32* %sv_flags3, align 4
  %and4 = and i32 %17, 255
  %cmp5 = icmp uge i32 %and4, 5
  br i1 %cmp5, label %land.lhs.true, label %if.end.9

land.lhs.true:                                    ; preds = %cond.end
  %18 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_any6 = getelementptr inbounds %struct.sv, %struct.sv* %18, i32 0, i32 0
  %19 = load i8*, i8** %sv_any6, align 8
  %20 = bitcast i8* %19 to %struct.xpviv*
  %xiv_iv = getelementptr inbounds %struct.xpviv, %struct.xpviv* %20, i32 0, i32 3
  %21 = load i64, i64* %xiv_iv, align 8
  %cmp7 = icmp eq i64 %21, -1
  br i1 %cmp7, label %if.then.8, label %if.end.9

if.then.8:                                        ; preds = %land.lhs.true
  br label %finish

if.end.9:                                         ; preds = %land.lhs.true, %cond.end
  %22 = load i8*, i8** %s, align 8
  %23 = load i64, i64* %len, align 8
  %add.ptr = getelementptr inbounds i8, i8* %22, i64 %23
  store i8* %add.ptr, i8** %send, align 8
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end.9
  %24 = load i8*, i8** %s, align 8
  %25 = load i8*, i8** %send, align 8
  %cmp10 = icmp ult i8* %24, %25
  br i1 %cmp10, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %26 = load i8*, i8** %s, align 8
  %27 = load i8, i8* %26, align 1
  %conv = sext i8 %27 to i32
  %cmp11 = icmp ne i32 %conv, 92
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %28 = phi i1 [ false, %while.cond ], [ %cmp11, %land.rhs ]
  br i1 %28, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %29 = load i8*, i8** %s, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %29, i32 1
  store i8* %incdec.ptr, i8** %s, align 8
  br label %while.cond

while.end:                                        ; preds = %land.end
  %30 = load i8*, i8** %s, align 8
  %31 = load i8*, i8** %send, align 8
  %cmp13 = icmp eq i8* %30, %31
  br i1 %cmp13, label %if.then.15, label %if.end.16

if.then.15:                                       ; preds = %while.end
  br label %finish

if.end.16:                                        ; preds = %while.end
  %32 = load i8*, i8** %s, align 8
  store i8* %32, i8** %d, align 8
  %33 = load i32, i32* @PL_hints, align 4
  %and17 = and i32 %33, 32768
  %tobool18 = icmp ne i32 %and17, 0
  br i1 %tobool18, label %if.then.19, label %if.end.30

if.then.19:                                       ; preds = %if.end.16
  %34 = load %struct.sv*, %struct.sv** %pv, align 8
  %sv_any20 = getelementptr inbounds %struct.sv, %struct.sv* %34, i32 0, i32 0
  %35 = load i8*, i8** %sv_any20, align 8
  %36 = bitcast i8* %35 to %struct.xpv*
  %xpv_pv21 = getelementptr inbounds %struct.xpv, %struct.xpv* %36, i32 0, i32 0
  %37 = load i8*, i8** %xpv_pv21, align 8
  %38 = load i64, i64* %len, align 8
  %call22 = call %struct.sv* @Perl_newSVpvn(i8* %37, i64 %38)
  %call23 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call22)
  store %struct.sv* %call23, %struct.sv** %pv, align 8
  %39 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags24 = getelementptr inbounds %struct.sv, %struct.sv* %39, i32 0, i32 2
  %40 = load i32, i32* %sv_flags24, align 4
  %and25 = and i32 %40, 536870912
  %tobool26 = icmp ne i32 %and25, 0
  br i1 %tobool26, label %if.then.27, label %if.end.29

if.then.27:                                       ; preds = %if.then.19
  %41 = load %struct.sv*, %struct.sv** %pv, align 8
  %sv_flags28 = getelementptr inbounds %struct.sv, %struct.sv* %41, i32 0, i32 2
  %42 = load i32, i32* %sv_flags28, align 4
  %or = or i32 %42, 536870912
  store i32 %or, i32* %sv_flags28, align 4
  br label %if.end.29

if.end.29:                                        ; preds = %if.then.27, %if.then.19
  br label %if.end.30

if.end.30:                                        ; preds = %if.end.29, %if.end.16
  br label %while.cond.31

while.cond.31:                                    ; preds = %if.end.49, %if.end.30
  %43 = load i8*, i8** %s, align 8
  %44 = load i8*, i8** %send, align 8
  %cmp32 = icmp ult i8* %43, %44
  br i1 %cmp32, label %while.body.34, label %while.end.52

while.body.34:                                    ; preds = %while.cond.31
  %45 = load i8*, i8** %s, align 8
  %46 = load i8, i8* %45, align 1
  %conv35 = sext i8 %46 to i32
  %cmp36 = icmp eq i32 %conv35, 92
  br i1 %cmp36, label %if.then.38, label %if.end.49

if.then.38:                                       ; preds = %while.body.34
  %47 = load i8*, i8** %s, align 8
  %add.ptr39 = getelementptr inbounds i8, i8* %47, i64 1
  %48 = load i8*, i8** %send, align 8
  %cmp40 = icmp ult i8* %add.ptr39, %48
  br i1 %cmp40, label %land.lhs.true.42, label %if.end.48

land.lhs.true.42:                                 ; preds = %if.then.38
  %49 = load i8*, i8** %s, align 8
  %arrayidx = getelementptr inbounds i8, i8* %49, i64 1
  %50 = load i8, i8* %arrayidx, align 1
  %conv43 = sext i8 %50 to i32
  %cmp44 = icmp eq i32 %conv43, 92
  br i1 %cmp44, label %if.then.46, label %if.end.48

if.then.46:                                       ; preds = %land.lhs.true.42
  %51 = load i8*, i8** %s, align 8
  %incdec.ptr47 = getelementptr inbounds i8, i8* %51, i32 1
  store i8* %incdec.ptr47, i8** %s, align 8
  br label %if.end.48

if.end.48:                                        ; preds = %if.then.46, %land.lhs.true.42, %if.then.38
  br label %if.end.49

if.end.49:                                        ; preds = %if.end.48, %while.body.34
  %52 = load i8*, i8** %s, align 8
  %incdec.ptr50 = getelementptr inbounds i8, i8* %52, i32 1
  store i8* %incdec.ptr50, i8** %s, align 8
  %53 = load i8, i8* %52, align 1
  %54 = load i8*, i8** %d, align 8
  %incdec.ptr51 = getelementptr inbounds i8, i8* %54, i32 1
  store i8* %incdec.ptr51, i8** %d, align 8
  store i8 %53, i8* %54, align 1
  br label %while.cond.31

while.end.52:                                     ; preds = %while.cond.31
  %55 = load i8*, i8** %d, align 8
  store i8 0, i8* %55, align 1
  %56 = load i8*, i8** %d, align 8
  %57 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_any53 = getelementptr inbounds %struct.sv, %struct.sv* %57, i32 0, i32 0
  %58 = load i8*, i8** %sv_any53, align 8
  %59 = bitcast i8* %58 to %struct.xpv*
  %xpv_pv54 = getelementptr inbounds %struct.xpv, %struct.xpv* %59, i32 0, i32 0
  %60 = load i8*, i8** %xpv_pv54, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %56 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %60 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %61 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_any55 = getelementptr inbounds %struct.sv, %struct.sv* %61, i32 0, i32 0
  %62 = load i8*, i8** %sv_any55, align 8
  %63 = bitcast i8* %62 to %struct.xpv*
  %xpv_cur56 = getelementptr inbounds %struct.xpv, %struct.xpv* %63, i32 0, i32 1
  store i64 %sub.ptr.sub, i64* %xpv_cur56, align 8
  store i64 %sub.ptr.sub, i64* %tmp
  %64 = load i64, i64* %tmp
  br label %finish

finish:                                           ; preds = %while.end.52, %if.then.15, %if.then.8, %if.then
  %65 = load i32, i32* @PL_hints, align 4
  %and57 = and i32 %65, 32768
  %tobool58 = icmp ne i32 %and57, 0
  br i1 %tobool58, label %if.then.59, label %if.end.61

if.then.59:                                       ; preds = %finish
  %66 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %67 = load %struct.sv*, %struct.sv** %pv, align 8
  %call60 = call %struct.sv* @S_new_constant(i8* null, i64 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i32 0, i32 0), %struct.sv* %66, %struct.sv* %67, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i32 0, i32 0))
  store %struct.sv* %call60, %struct.sv** %retval
  br label %return

if.end.61:                                        ; preds = %finish
  %68 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  store %struct.sv* %68, %struct.sv** %retval
  br label %return

return:                                           ; preds = %if.end.61, %if.then.59
  %69 = load %struct.sv*, %struct.sv** %retval
  ret %struct.sv* %69
}

; Function Attrs: nounwind uwtable
define internal %struct.sv* @S_new_constant(i8* %s, i64 %len, i8* %key, %struct.sv* %sv, %struct.sv* %pv, i8* %type) #0 {
entry:
  %retval = alloca %struct.sv*, align 8
  %s.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  %key.addr = alloca i8*, align 8
  %sv.addr = alloca %struct.sv*, align 8
  %pv.addr = alloca %struct.sv*, align 8
  %type.addr = alloca i8*, align 8
  %sp = alloca %struct.sv**, align 8
  %table = alloca %struct.hv*, align 8
  %res = alloca %struct.sv*, align 8
  %cvp = alloca %struct.sv**, align 8
  %cv = alloca %struct.sv*, align 8
  %typesv = alloca %struct.sv*, align 8
  %why1 = alloca i8*, align 8
  %why2 = alloca i8*, align 8
  %why3 = alloca i8*, align 8
  %msg = alloca %struct.sv*, align 8
  %next = alloca %struct.stackinfo*, align 8
  %tmp = alloca %struct.av*, align 8
  %tmp56 = alloca i32, align 4
  %n_a = alloca i64, align 8
  %sp199 = alloca %struct.sv**, align 8
  %prev = alloca %struct.stackinfo*, align 8
  %tmp249 = alloca %struct.av*, align 8
  %tmp251 = alloca %struct.stackinfo*, align 8
  store i8* %s, i8** %s.addr, align 8
  store i64 %len, i64* %len.addr, align 8
  store i8* %key, i8** %key.addr, align 8
  store %struct.sv* %sv, %struct.sv** %sv.addr, align 8
  store %struct.sv* %pv, %struct.sv** %pv.addr, align 8
  store i8* %type, i8** %type.addr, align 8
  %0 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %0, %struct.sv*** %sp, align 8
  %1 = load %struct.gv*, %struct.gv** @PL_hintgv, align 8
  %sv_any = getelementptr inbounds %struct.gv, %struct.gv* %1, i32 0, i32 0
  %2 = load %struct.xpvgv*, %struct.xpvgv** %sv_any, align 8
  %xgv_gp = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %2, i32 0, i32 7
  %3 = load %struct.gp*, %struct.gp** %xgv_gp, align 8
  %gp_hv = getelementptr inbounds %struct.gp, %struct.gp* %3, i32 0, i32 5
  %4 = load %struct.hv*, %struct.hv** %gp_hv, align 8
  store %struct.hv* %4, %struct.hv** %table, align 8
  %5 = load %struct.hv*, %struct.hv** %table, align 8
  %tobool = icmp ne %struct.hv* %5, null
  br i1 %tobool, label %lor.lhs.false, label %if.then

lor.lhs.false:                                    ; preds = %entry
  %6 = load i32, i32* @PL_hints, align 4
  %and = and i32 %6, 131072
  %tobool1 = icmp ne i32 %and, 0
  br i1 %tobool1, label %if.end, label %if.then

if.then:                                          ; preds = %lor.lhs.false, %entry
  %7 = load i8*, i8** %key.addr, align 8
  %call = call i32 @strcmp(i8* %7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.168, i32 0, i32 0))
  %tobool2 = icmp ne i32 %call, 0
  %lnot = xor i1 %tobool2, true
  %cond = select i1 %lnot, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.196, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.24, i32 0, i32 0)
  store i8* %cond, i8** %why2, align 8
  %8 = load i8*, i8** %type.addr, align 8
  %tobool3 = icmp ne i8* %8, null
  br i1 %tobool3, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then
  %9 = load i8*, i8** %type.addr, align 8
  br label %cond.end

cond.false:                                       ; preds = %if.then
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond4 = phi i8* [ %9, %cond.true ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.198, i32 0, i32 0), %cond.false ]
  %10 = load i8*, i8** %why2, align 8
  %call5 = call %struct.sv* (i8*, ...) @Perl_newSVpvf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.197, i32 0, i32 0), i8* %cond4, i8* %10)
  store %struct.sv* %call5, %struct.sv** %msg, align 8
  br label %msgdone

report:                                           ; preds = %if.then.255, %if.then.20
  %11 = load i8*, i8** %type.addr, align 8
  %tobool6 = icmp ne i8* %11, null
  br i1 %tobool6, label %cond.true.7, label %cond.false.8

cond.true.7:                                      ; preds = %report
  %12 = load i8*, i8** %type.addr, align 8
  br label %cond.end.9

cond.false.8:                                     ; preds = %report
  br label %cond.end.9

cond.end.9:                                       ; preds = %cond.false.8, %cond.true.7
  %cond10 = phi i8* [ %12, %cond.true.7 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.198, i32 0, i32 0), %cond.false.8 ]
  %13 = load i8*, i8** %why1, align 8
  %14 = load i8*, i8** %why2, align 8
  %15 = load i8*, i8** %why3, align 8
  %call11 = call %struct.sv* (i8*, ...) @Perl_newSVpvf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.199, i32 0, i32 0), i8* %cond10, i8* %13, i8* %14, i8* %15)
  store %struct.sv* %call11, %struct.sv** %msg, align 8
  br label %msgdone

msgdone:                                          ; preds = %cond.end.9, %cond.end
  %16 = load %struct.sv*, %struct.sv** %msg, align 8
  %sv_any12 = getelementptr inbounds %struct.sv, %struct.sv* %16, i32 0, i32 0
  %17 = load i8*, i8** %sv_any12, align 8
  %18 = bitcast i8* %17 to %struct.xpv*
  %xpv_pv = getelementptr inbounds %struct.xpv, %struct.xpv* %18, i32 0, i32 0
  %19 = load i8*, i8** %xpv_pv, align 8
  %call13 = call i32 @Perl_yyerror(i8* %19)
  %20 = load %struct.sv*, %struct.sv** %msg, align 8
  call void @Perl_sv_free(%struct.sv* %20)
  %21 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  store %struct.sv* %21, %struct.sv** %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %22 = load %struct.hv*, %struct.hv** %table, align 8
  %23 = load i8*, i8** %key.addr, align 8
  %24 = load i8*, i8** %key.addr, align 8
  %call14 = call i64 @strlen(i8* %24)
  %conv = trunc i64 %call14 to i32
  %call15 = call %struct.sv** @Perl_hv_fetch(%struct.hv* %22, i8* %23, i32 %conv, i32 0)
  store %struct.sv** %call15, %struct.sv*** %cvp, align 8
  %25 = load %struct.sv**, %struct.sv*** %cvp, align 8
  %tobool16 = icmp ne %struct.sv** %25, null
  br i1 %tobool16, label %lor.lhs.false.17, label %if.then.20

lor.lhs.false.17:                                 ; preds = %if.end
  %26 = load %struct.sv**, %struct.sv*** %cvp, align 8
  %27 = load %struct.sv*, %struct.sv** %26, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %27, i32 0, i32 2
  %28 = load i32, i32* %sv_flags, align 4
  %and18 = and i32 %28, 118423552
  %tobool19 = icmp ne i32 %and18, 0
  br i1 %tobool19, label %if.end.21, label %if.then.20

if.then.20:                                       ; preds = %lor.lhs.false.17, %if.end
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.200, i32 0, i32 0), i8** %why1, align 8
  %29 = load i8*, i8** %key.addr, align 8
  store i8* %29, i8** %why2, align 8
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.201, i32 0, i32 0), i8** %why3, align 8
  br label %report

if.end.21:                                        ; preds = %lor.lhs.false.17
  %30 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %call22 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %30)
  %31 = load %struct.sv**, %struct.sv*** %cvp, align 8
  %32 = load %struct.sv*, %struct.sv** %31, align 8
  store %struct.sv* %32, %struct.sv** %cv, align 8
  %33 = load %struct.sv*, %struct.sv** %pv.addr, align 8
  %tobool23 = icmp ne %struct.sv* %33, null
  br i1 %tobool23, label %if.end.28, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end.21
  %34 = load i8*, i8** %s.addr, align 8
  %tobool24 = icmp ne i8* %34, null
  br i1 %tobool24, label %if.then.25, label %if.end.28

if.then.25:                                       ; preds = %land.lhs.true
  %35 = load i8*, i8** %s.addr, align 8
  %36 = load i64, i64* %len.addr, align 8
  %call26 = call %struct.sv* @Perl_newSVpvn(i8* %35, i64 %36)
  %call27 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call26)
  store %struct.sv* %call27, %struct.sv** %pv.addr, align 8
  br label %if.end.28

if.end.28:                                        ; preds = %if.then.25, %land.lhs.true, %if.end.21
  %37 = load i8*, i8** %type.addr, align 8
  %tobool29 = icmp ne i8* %37, null
  br i1 %tobool29, label %land.lhs.true.30, label %if.else

land.lhs.true.30:                                 ; preds = %if.end.28
  %38 = load %struct.sv*, %struct.sv** %pv.addr, align 8
  %tobool31 = icmp ne %struct.sv* %38, null
  br i1 %tobool31, label %if.then.32, label %if.else

if.then.32:                                       ; preds = %land.lhs.true.30
  %39 = load i8*, i8** %type.addr, align 8
  %call33 = call %struct.sv* @Perl_newSVpv(i8* %39, i64 0)
  %call34 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call33)
  store %struct.sv* %call34, %struct.sv** %typesv, align 8
  br label %if.end.35

if.else:                                          ; preds = %land.lhs.true.30, %if.end.28
  store %struct.sv* @PL_sv_undef, %struct.sv** %typesv, align 8
  br label %if.end.35

if.end.35:                                        ; preds = %if.else, %if.then.32
  %40 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_next = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %40, i32 0, i32 6
  %41 = load %struct.stackinfo*, %struct.stackinfo** %si_next, align 8
  store %struct.stackinfo* %41, %struct.stackinfo** %next, align 8
  %42 = load %struct.stackinfo*, %struct.stackinfo** %next, align 8
  %tobool36 = icmp ne %struct.stackinfo* %42, null
  br i1 %tobool36, label %if.end.40, label %if.then.37

if.then.37:                                       ; preds = %if.end.35
  %call38 = call %struct.stackinfo* @Perl_new_stackinfo(i32 32, i32 13)
  store %struct.stackinfo* %call38, %struct.stackinfo** %next, align 8
  %43 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %44 = load %struct.stackinfo*, %struct.stackinfo** %next, align 8
  %si_prev = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %44, i32 0, i32 5
  store %struct.stackinfo* %43, %struct.stackinfo** %si_prev, align 8
  %45 = load %struct.stackinfo*, %struct.stackinfo** %next, align 8
  %46 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_next39 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %46, i32 0, i32 6
  store %struct.stackinfo* %45, %struct.stackinfo** %si_next39, align 8
  br label %if.end.40

if.end.40:                                        ; preds = %if.then.37, %if.end.35
  %47 = load %struct.stackinfo*, %struct.stackinfo** %next, align 8
  %si_type = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %47, i32 0, i32 4
  store i32 5, i32* %si_type, align 4
  %48 = load %struct.stackinfo*, %struct.stackinfo** %next, align 8
  %si_cxix = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %48, i32 0, i32 2
  store i32 -1, i32* %si_cxix, align 4
  %49 = load %struct.stackinfo*, %struct.stackinfo** %next, align 8
  %si_stack = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %49, i32 0, i32 0
  %50 = load %struct.av*, %struct.av** %si_stack, align 8
  %sv_any41 = getelementptr inbounds %struct.av, %struct.av* %50, i32 0, i32 0
  %51 = load %struct.xpvav*, %struct.xpvav** %sv_any41, align 8
  %xav_fill = getelementptr inbounds %struct.xpvav, %struct.xpvav* %51, i32 0, i32 1
  store i64 0, i64* %xav_fill, align 8
  %52 = load %struct.sv**, %struct.sv*** %sp, align 8
  %53 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %52 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.sv** %53 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  %54 = load %struct.av*, %struct.av** @PL_curstack, align 8
  %sv_any42 = getelementptr inbounds %struct.av, %struct.av* %54, i32 0, i32 0
  %55 = load %struct.xpvav*, %struct.xpvav** %sv_any42, align 8
  %xav_fill43 = getelementptr inbounds %struct.xpvav, %struct.xpvav* %55, i32 0, i32 1
  store i64 %sub.ptr.div, i64* %xav_fill43, align 8
  %56 = load %struct.stackinfo*, %struct.stackinfo** %next, align 8
  %si_stack44 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %56, i32 0, i32 0
  %57 = load %struct.av*, %struct.av** %si_stack44, align 8
  %sv_any45 = getelementptr inbounds %struct.av, %struct.av* %57, i32 0, i32 0
  %58 = load %struct.xpvav*, %struct.xpvav** %sv_any45, align 8
  %xav_array = getelementptr inbounds %struct.xpvav, %struct.xpvav* %58, i32 0, i32 0
  %59 = load i8*, i8** %xav_array, align 8
  %60 = bitcast i8* %59 to %struct.sv**
  store %struct.sv** %60, %struct.sv*** @PL_stack_base, align 8
  %61 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %62 = load %struct.stackinfo*, %struct.stackinfo** %next, align 8
  %si_stack46 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %62, i32 0, i32 0
  %63 = load %struct.av*, %struct.av** %si_stack46, align 8
  %sv_any47 = getelementptr inbounds %struct.av, %struct.av* %63, i32 0, i32 0
  %64 = load %struct.xpvav*, %struct.xpvav** %sv_any47, align 8
  %xav_max = getelementptr inbounds %struct.xpvav, %struct.xpvav* %64, i32 0, i32 2
  %65 = load i64, i64* %xav_max, align 8
  %add.ptr = getelementptr inbounds %struct.sv*, %struct.sv** %61, i64 %65
  store %struct.sv** %add.ptr, %struct.sv*** @PL_stack_max, align 8
  %66 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %67 = load %struct.stackinfo*, %struct.stackinfo** %next, align 8
  %si_stack48 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %67, i32 0, i32 0
  %68 = load %struct.av*, %struct.av** %si_stack48, align 8
  %sv_any49 = getelementptr inbounds %struct.av, %struct.av* %68, i32 0, i32 0
  %69 = load %struct.xpvav*, %struct.xpvav** %sv_any49, align 8
  %xav_fill50 = getelementptr inbounds %struct.xpvav, %struct.xpvav* %69, i32 0, i32 1
  %70 = load i64, i64* %xav_fill50, align 8
  %add.ptr51 = getelementptr inbounds %struct.sv*, %struct.sv** %66, i64 %70
  store %struct.sv** %add.ptr51, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %add.ptr51, %struct.sv*** %sp, align 8
  %71 = load %struct.stackinfo*, %struct.stackinfo** %next, align 8
  %si_stack52 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %71, i32 0, i32 0
  %72 = load %struct.av*, %struct.av** %si_stack52, align 8
  store %struct.av* %72, %struct.av** @PL_curstack, align 8
  store %struct.av* %72, %struct.av** %tmp
  %73 = load %struct.av*, %struct.av** %tmp
  %74 = load %struct.stackinfo*, %struct.stackinfo** %next, align 8
  store %struct.stackinfo* %74, %struct.stackinfo** @PL_curstackinfo, align 8
  call void @Perl_push_scope()
  call void @Perl_save_int(i32* @PL_tmps_floor)
  %75 = load i32, i32* @PL_tmps_ix, align 4
  store i32 %75, i32* @PL_tmps_floor, align 4
  %76 = load i32*, i32** @PL_markstack_ptr, align 8
  %incdec.ptr = getelementptr inbounds i32, i32* %76, i32 1
  store i32* %incdec.ptr, i32** @PL_markstack_ptr, align 8
  %77 = load i32*, i32** @PL_markstack_max, align 8
  %cmp = icmp eq i32* %incdec.ptr, %77
  br i1 %cmp, label %if.then.54, label %if.end.55

if.then.54:                                       ; preds = %if.end.40
  call void @Perl_markstack_grow()
  br label %if.end.55

if.end.55:                                        ; preds = %if.then.54, %if.end.40
  %78 = load %struct.sv**, %struct.sv*** %sp, align 8
  %79 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %sub.ptr.lhs.cast57 = ptrtoint %struct.sv** %78 to i64
  %sub.ptr.rhs.cast58 = ptrtoint %struct.sv** %79 to i64
  %sub.ptr.sub59 = sub i64 %sub.ptr.lhs.cast57, %sub.ptr.rhs.cast58
  %sub.ptr.div60 = sdiv exact i64 %sub.ptr.sub59, 8
  %conv61 = trunc i64 %sub.ptr.div60 to i32
  %80 = load i32*, i32** @PL_markstack_ptr, align 8
  store i32 %conv61, i32* %80, align 4
  store i32 %conv61, i32* %tmp56
  %81 = load i32, i32* %tmp56
  %82 = load %struct.sv**, %struct.sv*** @PL_stack_max, align 8
  %83 = load %struct.sv**, %struct.sv*** %sp, align 8
  %sub.ptr.lhs.cast62 = ptrtoint %struct.sv** %82 to i64
  %sub.ptr.rhs.cast63 = ptrtoint %struct.sv** %83 to i64
  %sub.ptr.sub64 = sub i64 %sub.ptr.lhs.cast62, %sub.ptr.rhs.cast63
  %sub.ptr.div65 = sdiv exact i64 %sub.ptr.sub64, 8
  %cmp66 = icmp slt i64 %sub.ptr.div65, 3
  br i1 %cmp66, label %if.then.68, label %if.end.70

if.then.68:                                       ; preds = %if.end.55
  %84 = load %struct.sv**, %struct.sv*** %sp, align 8
  %85 = load %struct.sv**, %struct.sv*** %sp, align 8
  %call69 = call %struct.sv** @Perl_stack_grow(%struct.sv** %84, %struct.sv** %85, i32 3)
  store %struct.sv** %call69, %struct.sv*** %sp, align 8
  br label %if.end.70

if.end.70:                                        ; preds = %if.then.68, %if.end.55
  %86 = load %struct.sv*, %struct.sv** %pv.addr, align 8
  %tobool71 = icmp ne %struct.sv* %86, null
  br i1 %tobool71, label %if.then.72, label %if.end.74

if.then.72:                                       ; preds = %if.end.70
  %87 = load %struct.sv*, %struct.sv** %pv.addr, align 8
  %88 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr73 = getelementptr inbounds %struct.sv*, %struct.sv** %88, i32 1
  store %struct.sv** %incdec.ptr73, %struct.sv*** %sp, align 8
  store %struct.sv* %87, %struct.sv** %incdec.ptr73, align 8
  br label %if.end.74

if.end.74:                                        ; preds = %if.then.72, %if.end.70
  %89 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %90 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr75 = getelementptr inbounds %struct.sv*, %struct.sv** %90, i32 1
  store %struct.sv** %incdec.ptr75, %struct.sv*** %sp, align 8
  store %struct.sv* %89, %struct.sv** %incdec.ptr75, align 8
  %91 = load %struct.sv*, %struct.sv** %pv.addr, align 8
  %tobool76 = icmp ne %struct.sv* %91, null
  br i1 %tobool76, label %if.then.77, label %if.end.79

if.then.77:                                       ; preds = %if.end.74
  %92 = load %struct.sv*, %struct.sv** %typesv, align 8
  %93 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr78 = getelementptr inbounds %struct.sv*, %struct.sv** %93, i32 1
  store %struct.sv** %incdec.ptr78, %struct.sv*** %sp, align 8
  store %struct.sv* %92, %struct.sv** %incdec.ptr78, align 8
  br label %if.end.79

if.end.79:                                        ; preds = %if.then.77, %if.end.74
  %94 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %94, %struct.sv*** @PL_stack_sp, align 8
  %95 = load %struct.sv*, %struct.sv** %cv, align 8
  %96 = load volatile i32, i32* @PL_in_eval, align 4
  %tobool80 = icmp ne i32 %96, 0
  %cond81 = select i1 %tobool80, i32 0, i32 4
  %or = or i32 0, %cond81
  %call82 = call i32 @Perl_call_sv(%struct.sv* %95, i32 %or)
  %97 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %97, %struct.sv*** %sp, align 8
  %98 = load volatile i32, i32* @PL_in_eval, align 4
  %tobool83 = icmp ne i32 %98, 0
  br i1 %tobool83, label %if.else.184, label %land.lhs.true.84

land.lhs.true.84:                                 ; preds = %if.end.79
  %99 = load %struct.gv*, %struct.gv** @PL_errgv, align 8
  %sv_any85 = getelementptr inbounds %struct.gv, %struct.gv* %99, i32 0, i32 0
  %100 = load %struct.xpvgv*, %struct.xpvgv** %sv_any85, align 8
  %xgv_gp86 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %100, i32 0, i32 7
  %101 = load %struct.gp*, %struct.gp** %xgv_gp86, align 8
  %gp_sv = getelementptr inbounds %struct.gp, %struct.gp* %101, i32 0, i32 0
  %102 = load %struct.sv*, %struct.sv** %gp_sv, align 8
  %tobool87 = icmp ne %struct.sv* %102, null
  br i1 %tobool87, label %cond.false.89, label %cond.true.88

cond.true.88:                                     ; preds = %land.lhs.true.84
  br i1 false, label %if.then.150, label %if.else.184

cond.false.89:                                    ; preds = %land.lhs.true.84
  %103 = load %struct.gv*, %struct.gv** @PL_errgv, align 8
  %sv_any90 = getelementptr inbounds %struct.gv, %struct.gv* %103, i32 0, i32 0
  %104 = load %struct.xpvgv*, %struct.xpvgv** %sv_any90, align 8
  %xgv_gp91 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %104, i32 0, i32 7
  %105 = load %struct.gp*, %struct.gp** %xgv_gp91, align 8
  %gp_sv92 = getelementptr inbounds %struct.gp, %struct.gp* %105, i32 0, i32 0
  %106 = load %struct.sv*, %struct.sv** %gp_sv92, align 8
  %sv_flags93 = getelementptr inbounds %struct.sv, %struct.sv* %106, i32 0, i32 2
  %107 = load i32, i32* %sv_flags93, align 4
  %and94 = and i32 %107, 262144
  %tobool95 = icmp ne i32 %and94, 0
  br i1 %tobool95, label %cond.true.96, label %cond.false.115

cond.true.96:                                     ; preds = %cond.false.89
  %108 = load %struct.gv*, %struct.gv** @PL_errgv, align 8
  %sv_any97 = getelementptr inbounds %struct.gv, %struct.gv* %108, i32 0, i32 0
  %109 = load %struct.xpvgv*, %struct.xpvgv** %sv_any97, align 8
  %xgv_gp98 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %109, i32 0, i32 7
  %110 = load %struct.gp*, %struct.gp** %xgv_gp98, align 8
  %gp_sv99 = getelementptr inbounds %struct.gp, %struct.gp* %110, i32 0, i32 0
  %111 = load %struct.sv*, %struct.sv** %gp_sv99, align 8
  %sv_any100 = getelementptr inbounds %struct.sv, %struct.sv* %111, i32 0, i32 0
  %112 = load i8*, i8** %sv_any100, align 8
  %113 = bitcast i8* %112 to %struct.xpv*
  store %struct.xpv* %113, %struct.xpv** @PL_Xpv, align 8
  %tobool101 = icmp ne %struct.xpv* %113, null
  br i1 %tobool101, label %land.lhs.true.102, label %cond.false.114

land.lhs.true.102:                                ; preds = %cond.true.96
  %114 = load %struct.xpv*, %struct.xpv** @PL_Xpv, align 8
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %114, i32 0, i32 1
  %115 = load i64, i64* %xpv_cur, align 8
  %cmp103 = icmp ugt i64 %115, 1
  br i1 %cmp103, label %cond.true.113, label %lor.lhs.false.105

lor.lhs.false.105:                                ; preds = %land.lhs.true.102
  %116 = load %struct.xpv*, %struct.xpv** @PL_Xpv, align 8
  %xpv_cur106 = getelementptr inbounds %struct.xpv, %struct.xpv* %116, i32 0, i32 1
  %117 = load i64, i64* %xpv_cur106, align 8
  %tobool107 = icmp ne i64 %117, 0
  br i1 %tobool107, label %land.lhs.true.108, label %cond.false.114

land.lhs.true.108:                                ; preds = %lor.lhs.false.105
  %118 = load %struct.xpv*, %struct.xpv** @PL_Xpv, align 8
  %xpv_pv109 = getelementptr inbounds %struct.xpv, %struct.xpv* %118, i32 0, i32 0
  %119 = load i8*, i8** %xpv_pv109, align 8
  %120 = load i8, i8* %119, align 1
  %conv110 = sext i8 %120 to i32
  %cmp111 = icmp ne i32 %conv110, 48
  br i1 %cmp111, label %cond.true.113, label %cond.false.114

cond.true.113:                                    ; preds = %land.lhs.true.108, %land.lhs.true.102
  br i1 true, label %if.then.150, label %if.else.184

cond.false.114:                                   ; preds = %land.lhs.true.108, %lor.lhs.false.105, %cond.true.96
  br i1 false, label %if.then.150, label %if.else.184

cond.false.115:                                   ; preds = %cond.false.89
  %121 = load %struct.gv*, %struct.gv** @PL_errgv, align 8
  %sv_any116 = getelementptr inbounds %struct.gv, %struct.gv* %121, i32 0, i32 0
  %122 = load %struct.xpvgv*, %struct.xpvgv** %sv_any116, align 8
  %xgv_gp117 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %122, i32 0, i32 7
  %123 = load %struct.gp*, %struct.gp** %xgv_gp117, align 8
  %gp_sv118 = getelementptr inbounds %struct.gp, %struct.gp* %123, i32 0, i32 0
  %124 = load %struct.sv*, %struct.sv** %gp_sv118, align 8
  %sv_flags119 = getelementptr inbounds %struct.sv, %struct.sv* %124, i32 0, i32 2
  %125 = load i32, i32* %sv_flags119, align 4
  %and120 = and i32 %125, 65536
  %tobool121 = icmp ne i32 %and120, 0
  br i1 %tobool121, label %cond.true.122, label %cond.false.129

cond.true.122:                                    ; preds = %cond.false.115
  %126 = load %struct.gv*, %struct.gv** @PL_errgv, align 8
  %sv_any123 = getelementptr inbounds %struct.gv, %struct.gv* %126, i32 0, i32 0
  %127 = load %struct.xpvgv*, %struct.xpvgv** %sv_any123, align 8
  %xgv_gp124 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %127, i32 0, i32 7
  %128 = load %struct.gp*, %struct.gp** %xgv_gp124, align 8
  %gp_sv125 = getelementptr inbounds %struct.gp, %struct.gp* %128, i32 0, i32 0
  %129 = load %struct.sv*, %struct.sv** %gp_sv125, align 8
  %sv_any126 = getelementptr inbounds %struct.sv, %struct.sv* %129, i32 0, i32 0
  %130 = load i8*, i8** %sv_any126, align 8
  %131 = bitcast i8* %130 to %struct.xpviv*
  %xiv_iv = getelementptr inbounds %struct.xpviv, %struct.xpviv* %131, i32 0, i32 3
  %132 = load i64, i64* %xiv_iv, align 8
  %cmp127 = icmp ne i64 %132, 0
  br i1 %cmp127, label %if.then.150, label %if.else.184

cond.false.129:                                   ; preds = %cond.false.115
  %133 = load %struct.gv*, %struct.gv** @PL_errgv, align 8
  %sv_any130 = getelementptr inbounds %struct.gv, %struct.gv* %133, i32 0, i32 0
  %134 = load %struct.xpvgv*, %struct.xpvgv** %sv_any130, align 8
  %xgv_gp131 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %134, i32 0, i32 7
  %135 = load %struct.gp*, %struct.gp** %xgv_gp131, align 8
  %gp_sv132 = getelementptr inbounds %struct.gp, %struct.gp* %135, i32 0, i32 0
  %136 = load %struct.sv*, %struct.sv** %gp_sv132, align 8
  %sv_flags133 = getelementptr inbounds %struct.sv, %struct.sv* %136, i32 0, i32 2
  %137 = load i32, i32* %sv_flags133, align 4
  %and134 = and i32 %137, 131072
  %tobool135 = icmp ne i32 %and134, 0
  br i1 %tobool135, label %cond.true.136, label %cond.false.143

cond.true.136:                                    ; preds = %cond.false.129
  %138 = load %struct.gv*, %struct.gv** @PL_errgv, align 8
  %sv_any137 = getelementptr inbounds %struct.gv, %struct.gv* %138, i32 0, i32 0
  %139 = load %struct.xpvgv*, %struct.xpvgv** %sv_any137, align 8
  %xgv_gp138 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %139, i32 0, i32 7
  %140 = load %struct.gp*, %struct.gp** %xgv_gp138, align 8
  %gp_sv139 = getelementptr inbounds %struct.gp, %struct.gp* %140, i32 0, i32 0
  %141 = load %struct.sv*, %struct.sv** %gp_sv139, align 8
  %sv_any140 = getelementptr inbounds %struct.sv, %struct.sv* %141, i32 0, i32 0
  %142 = load i8*, i8** %sv_any140, align 8
  %143 = bitcast i8* %142 to %struct.xpvnv*
  %xnv_nv = getelementptr inbounds %struct.xpvnv, %struct.xpvnv* %143, i32 0, i32 4
  %144 = load double, double* %xnv_nv, align 8
  %cmp141 = fcmp une double %144, 0.000000e+00
  br i1 %cmp141, label %if.then.150, label %if.else.184

cond.false.143:                                   ; preds = %cond.false.129
  %145 = load %struct.gv*, %struct.gv** @PL_errgv, align 8
  %sv_any144 = getelementptr inbounds %struct.gv, %struct.gv* %145, i32 0, i32 0
  %146 = load %struct.xpvgv*, %struct.xpvgv** %sv_any144, align 8
  %xgv_gp145 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %146, i32 0, i32 7
  %147 = load %struct.gp*, %struct.gp** %xgv_gp145, align 8
  %gp_sv146 = getelementptr inbounds %struct.gp, %struct.gp* %147, i32 0, i32 0
  %148 = load %struct.sv*, %struct.sv** %gp_sv146, align 8
  %call147 = call signext i8 @Perl_sv_2bool(%struct.sv* %148)
  %conv148 = sext i8 %call147 to i32
  %tobool149 = icmp ne i32 %conv148, 0
  br i1 %tobool149, label %if.then.150, label %if.else.184

if.then.150:                                      ; preds = %cond.false.143, %cond.true.136, %cond.true.122, %cond.false.114, %cond.true.113, %cond.true.88
  %149 = load %struct.gv*, %struct.gv** @PL_errgv, align 8
  %sv_any152 = getelementptr inbounds %struct.gv, %struct.gv* %149, i32 0, i32 0
  %150 = load %struct.xpvgv*, %struct.xpvgv** %sv_any152, align 8
  %xgv_gp153 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %150, i32 0, i32 7
  %151 = load %struct.gp*, %struct.gp** %xgv_gp153, align 8
  %gp_sv154 = getelementptr inbounds %struct.gp, %struct.gp* %151, i32 0, i32 0
  %152 = load %struct.sv*, %struct.sv** %gp_sv154, align 8
  call void @Perl_sv_catpv(%struct.sv* %152, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.202, i32 0, i32 0))
  %153 = load %struct.gv*, %struct.gv** @PL_errgv, align 8
  %sv_any155 = getelementptr inbounds %struct.gv, %struct.gv* %153, i32 0, i32 0
  %154 = load %struct.xpvgv*, %struct.xpvgv** %sv_any155, align 8
  %xgv_gp156 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %154, i32 0, i32 7
  %155 = load %struct.gp*, %struct.gp** %xgv_gp156, align 8
  %gp_sv157 = getelementptr inbounds %struct.gp, %struct.gp* %155, i32 0, i32 0
  %156 = load %struct.sv*, %struct.sv** %gp_sv157, align 8
  %sv_flags158 = getelementptr inbounds %struct.sv, %struct.sv* %156, i32 0, i32 2
  %157 = load i32, i32* %sv_flags158, align 4
  %and159 = and i32 %157, 262144
  %cmp160 = icmp eq i32 %and159, 262144
  br i1 %cmp160, label %cond.true.162, label %cond.false.173

cond.true.162:                                    ; preds = %if.then.150
  %158 = load %struct.gv*, %struct.gv** @PL_errgv, align 8
  %sv_any163 = getelementptr inbounds %struct.gv, %struct.gv* %158, i32 0, i32 0
  %159 = load %struct.xpvgv*, %struct.xpvgv** %sv_any163, align 8
  %xgv_gp164 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %159, i32 0, i32 7
  %160 = load %struct.gp*, %struct.gp** %xgv_gp164, align 8
  %gp_sv165 = getelementptr inbounds %struct.gp, %struct.gp* %160, i32 0, i32 0
  %161 = load %struct.sv*, %struct.sv** %gp_sv165, align 8
  %sv_any166 = getelementptr inbounds %struct.sv, %struct.sv* %161, i32 0, i32 0
  %162 = load i8*, i8** %sv_any166, align 8
  %163 = bitcast i8* %162 to %struct.xpv*
  %xpv_cur167 = getelementptr inbounds %struct.xpv, %struct.xpv* %163, i32 0, i32 1
  %164 = load i64, i64* %xpv_cur167, align 8
  store i64 %164, i64* %n_a, align 8
  %165 = load %struct.gv*, %struct.gv** @PL_errgv, align 8
  %sv_any168 = getelementptr inbounds %struct.gv, %struct.gv* %165, i32 0, i32 0
  %166 = load %struct.xpvgv*, %struct.xpvgv** %sv_any168, align 8
  %xgv_gp169 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %166, i32 0, i32 7
  %167 = load %struct.gp*, %struct.gp** %xgv_gp169, align 8
  %gp_sv170 = getelementptr inbounds %struct.gp, %struct.gp* %167, i32 0, i32 0
  %168 = load %struct.sv*, %struct.sv** %gp_sv170, align 8
  %sv_any171 = getelementptr inbounds %struct.sv, %struct.sv* %168, i32 0, i32 0
  %169 = load i8*, i8** %sv_any171, align 8
  %170 = bitcast i8* %169 to %struct.xpv*
  %xpv_pv172 = getelementptr inbounds %struct.xpv, %struct.xpv* %170, i32 0, i32 0
  %171 = load i8*, i8** %xpv_pv172, align 8
  br label %cond.end.178

cond.false.173:                                   ; preds = %if.then.150
  %172 = load %struct.gv*, %struct.gv** @PL_errgv, align 8
  %sv_any174 = getelementptr inbounds %struct.gv, %struct.gv* %172, i32 0, i32 0
  %173 = load %struct.xpvgv*, %struct.xpvgv** %sv_any174, align 8
  %xgv_gp175 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %173, i32 0, i32 7
  %174 = load %struct.gp*, %struct.gp** %xgv_gp175, align 8
  %gp_sv176 = getelementptr inbounds %struct.gp, %struct.gp* %174, i32 0, i32 0
  %175 = load %struct.sv*, %struct.sv** %gp_sv176, align 8
  %call177 = call i8* @Perl_sv_2pv_flags(%struct.sv* %175, i64* %n_a, i32 2)
  br label %cond.end.178

cond.end.178:                                     ; preds = %cond.false.173, %cond.true.162
  %cond179 = phi i8* [ %171, %cond.true.162 ], [ %call177, %cond.false.173 ]
  %call180 = call i32 @Perl_yyerror(i8* %cond179)
  %176 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr181 = getelementptr inbounds %struct.sv*, %struct.sv** %176, i32 -1
  store %struct.sv** %incdec.ptr181, %struct.sv*** %sp, align 8
  %177 = load %struct.sv*, %struct.sv** %176, align 8
  %178 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  store %struct.sv* %178, %struct.sv** @PL_Sv, align 8
  %179 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %tobool182 = icmp ne %struct.sv* %179, null
  br i1 %tobool182, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %cond.end.178
  %180 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_refcnt = getelementptr inbounds %struct.sv, %struct.sv* %180, i32 0, i32 1
  %181 = load i32, i32* %sv_refcnt, align 4
  %inc = add i32 %181, 1
  store i32 %inc, i32* %sv_refcnt, align 4
  %tobool183 = icmp ne i32 %inc, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %cond.end.178
  %182 = phi i1 [ false, %cond.end.178 ], [ %tobool183, %land.rhs ]
  %land.ext = zext i1 %182 to i32
  %183 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  store %struct.sv* %183, %struct.sv** %res, align 8
  br label %if.end.193

if.else.184:                                      ; preds = %cond.false.143, %cond.true.136, %cond.true.122, %cond.false.114, %cond.true.113, %cond.true.88, %if.end.79
  %184 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr185 = getelementptr inbounds %struct.sv*, %struct.sv** %184, i32 -1
  store %struct.sv** %incdec.ptr185, %struct.sv*** %sp, align 8
  %185 = load %struct.sv*, %struct.sv** %184, align 8
  store %struct.sv* %185, %struct.sv** %res, align 8
  %186 = load %struct.sv*, %struct.sv** %res, align 8
  store %struct.sv* %186, %struct.sv** @PL_Sv, align 8
  %187 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %tobool186 = icmp ne %struct.sv* %187, null
  br i1 %tobool186, label %land.rhs.187, label %land.end.191

land.rhs.187:                                     ; preds = %if.else.184
  %188 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_refcnt188 = getelementptr inbounds %struct.sv, %struct.sv* %188, i32 0, i32 1
  %189 = load i32, i32* %sv_refcnt188, align 4
  %inc189 = add i32 %189, 1
  store i32 %inc189, i32* %sv_refcnt188, align 4
  %tobool190 = icmp ne i32 %inc189, 0
  br label %land.end.191

land.end.191:                                     ; preds = %land.rhs.187, %if.else.184
  %190 = phi i1 [ false, %if.else.184 ], [ %tobool190, %land.rhs.187 ]
  %land.ext192 = zext i1 %190 to i32
  %191 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  br label %if.end.193

if.end.193:                                       ; preds = %land.end.191, %land.end
  %192 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %192, %struct.sv*** @PL_stack_sp, align 8
  %193 = load i32, i32* @PL_tmps_ix, align 4
  %194 = load i32, i32* @PL_tmps_floor, align 4
  %cmp194 = icmp sgt i32 %193, %194
  br i1 %cmp194, label %if.then.196, label %if.end.197

if.then.196:                                      ; preds = %if.end.193
  call void @Perl_free_tmps()
  br label %if.end.197

if.end.197:                                       ; preds = %if.then.196, %if.end.193
  call void @Perl_pop_scope()
  %195 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %195, %struct.sv*** %sp199, align 8
  %196 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_prev201 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %196, i32 0, i32 5
  %197 = load %struct.stackinfo*, %struct.stackinfo** %si_prev201, align 8
  store %struct.stackinfo* %197, %struct.stackinfo** %prev, align 8
  %198 = load %struct.stackinfo*, %struct.stackinfo** %prev, align 8
  %tobool202 = icmp ne %struct.stackinfo* %198, null
  br i1 %tobool202, label %if.end.231, label %if.then.203

if.then.203:                                      ; preds = %if.end.197
  %199 = load %struct.gv*, %struct.gv** @PL_stderrgv, align 8
  %tobool204 = icmp ne %struct.gv* %199, null
  br i1 %tobool204, label %land.lhs.true.205, label %cond.false.226

land.lhs.true.205:                                ; preds = %if.then.203
  %200 = load %struct.gv*, %struct.gv** @PL_stderrgv, align 8
  %sv_flags206 = getelementptr inbounds %struct.gv, %struct.gv* %200, i32 0, i32 2
  %201 = load i32, i32* %sv_flags206, align 4
  %and207 = and i32 %201, 255
  %cmp208 = icmp eq i32 %and207, 13
  br i1 %cmp208, label %land.lhs.true.210, label %cond.false.226

land.lhs.true.210:                                ; preds = %land.lhs.true.205
  %202 = load %struct.gv*, %struct.gv** @PL_stderrgv, align 8
  %sv_any211 = getelementptr inbounds %struct.gv, %struct.gv* %202, i32 0, i32 0
  %203 = load %struct.xpvgv*, %struct.xpvgv** %sv_any211, align 8
  %xgv_gp212 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %203, i32 0, i32 7
  %204 = load %struct.gp*, %struct.gp** %xgv_gp212, align 8
  %gp_io = getelementptr inbounds %struct.gp, %struct.gp* %204, i32 0, i32 2
  %205 = load %struct.io*, %struct.io** %gp_io, align 8
  %tobool213 = icmp ne %struct.io* %205, null
  br i1 %tobool213, label %land.lhs.true.214, label %cond.false.226

land.lhs.true.214:                                ; preds = %land.lhs.true.210
  %206 = load %struct.gv*, %struct.gv** @PL_stderrgv, align 8
  %sv_any215 = getelementptr inbounds %struct.gv, %struct.gv* %206, i32 0, i32 0
  %207 = load %struct.xpvgv*, %struct.xpvgv** %sv_any215, align 8
  %xgv_gp216 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %207, i32 0, i32 7
  %208 = load %struct.gp*, %struct.gp** %xgv_gp216, align 8
  %gp_io217 = getelementptr inbounds %struct.gp, %struct.gp* %208, i32 0, i32 2
  %209 = load %struct.io*, %struct.io** %gp_io217, align 8
  %sv_any218 = getelementptr inbounds %struct.io, %struct.io* %209, i32 0, i32 0
  %210 = load %struct.xpvio*, %struct.xpvio** %sv_any218, align 8
  %xio_ofp = getelementptr inbounds %struct.xpvio, %struct.xpvio* %210, i32 0, i32 8
  %211 = load %struct._PerlIO**, %struct._PerlIO*** %xio_ofp, align 8
  %tobool219 = icmp ne %struct._PerlIO** %211, null
  br i1 %tobool219, label %cond.true.220, label %cond.false.226

cond.true.220:                                    ; preds = %land.lhs.true.214
  %212 = load %struct.gv*, %struct.gv** @PL_stderrgv, align 8
  %sv_any221 = getelementptr inbounds %struct.gv, %struct.gv* %212, i32 0, i32 0
  %213 = load %struct.xpvgv*, %struct.xpvgv** %sv_any221, align 8
  %xgv_gp222 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %213, i32 0, i32 7
  %214 = load %struct.gp*, %struct.gp** %xgv_gp222, align 8
  %gp_io223 = getelementptr inbounds %struct.gp, %struct.gp* %214, i32 0, i32 2
  %215 = load %struct.io*, %struct.io** %gp_io223, align 8
  %sv_any224 = getelementptr inbounds %struct.io, %struct.io* %215, i32 0, i32 0
  %216 = load %struct.xpvio*, %struct.xpvio** %sv_any224, align 8
  %xio_ofp225 = getelementptr inbounds %struct.xpvio, %struct.xpvio* %216, i32 0, i32 8
  %217 = load %struct._PerlIO**, %struct._PerlIO*** %xio_ofp225, align 8
  br label %cond.end.228

cond.false.226:                                   ; preds = %land.lhs.true.214, %land.lhs.true.210, %land.lhs.true.205, %if.then.203
  %call227 = call %struct._PerlIO** @Perl_PerlIO_stderr()
  br label %cond.end.228

cond.end.228:                                     ; preds = %cond.false.226, %cond.true.220
  %cond229 = phi %struct._PerlIO** [ %217, %cond.true.220 ], [ %call227, %cond.false.226 ]
  %call230 = call i32 (%struct._PerlIO**, i8*, ...) @PerlIO_printf(%struct._PerlIO** %cond229, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.203, i32 0, i32 0))
  call void @Perl_my_exit(i32 1)
  br label %if.end.231

if.end.231:                                       ; preds = %cond.end.228, %if.end.197
  %218 = load %struct.sv**, %struct.sv*** %sp199, align 8
  %219 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %sub.ptr.lhs.cast232 = ptrtoint %struct.sv** %218 to i64
  %sub.ptr.rhs.cast233 = ptrtoint %struct.sv** %219 to i64
  %sub.ptr.sub234 = sub i64 %sub.ptr.lhs.cast232, %sub.ptr.rhs.cast233
  %sub.ptr.div235 = sdiv exact i64 %sub.ptr.sub234, 8
  %220 = load %struct.av*, %struct.av** @PL_curstack, align 8
  %sv_any236 = getelementptr inbounds %struct.av, %struct.av* %220, i32 0, i32 0
  %221 = load %struct.xpvav*, %struct.xpvav** %sv_any236, align 8
  %xav_fill237 = getelementptr inbounds %struct.xpvav, %struct.xpvav* %221, i32 0, i32 1
  store i64 %sub.ptr.div235, i64* %xav_fill237, align 8
  %222 = load %struct.stackinfo*, %struct.stackinfo** %prev, align 8
  %si_stack238 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %222, i32 0, i32 0
  %223 = load %struct.av*, %struct.av** %si_stack238, align 8
  %sv_any239 = getelementptr inbounds %struct.av, %struct.av* %223, i32 0, i32 0
  %224 = load %struct.xpvav*, %struct.xpvav** %sv_any239, align 8
  %xav_array240 = getelementptr inbounds %struct.xpvav, %struct.xpvav* %224, i32 0, i32 0
  %225 = load i8*, i8** %xav_array240, align 8
  %226 = bitcast i8* %225 to %struct.sv**
  store %struct.sv** %226, %struct.sv*** @PL_stack_base, align 8
  %227 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %228 = load %struct.stackinfo*, %struct.stackinfo** %prev, align 8
  %si_stack241 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %228, i32 0, i32 0
  %229 = load %struct.av*, %struct.av** %si_stack241, align 8
  %sv_any242 = getelementptr inbounds %struct.av, %struct.av* %229, i32 0, i32 0
  %230 = load %struct.xpvav*, %struct.xpvav** %sv_any242, align 8
  %xav_max243 = getelementptr inbounds %struct.xpvav, %struct.xpvav* %230, i32 0, i32 2
  %231 = load i64, i64* %xav_max243, align 8
  %add.ptr244 = getelementptr inbounds %struct.sv*, %struct.sv** %227, i64 %231
  store %struct.sv** %add.ptr244, %struct.sv*** @PL_stack_max, align 8
  %232 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %233 = load %struct.stackinfo*, %struct.stackinfo** %prev, align 8
  %si_stack245 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %233, i32 0, i32 0
  %234 = load %struct.av*, %struct.av** %si_stack245, align 8
  %sv_any246 = getelementptr inbounds %struct.av, %struct.av* %234, i32 0, i32 0
  %235 = load %struct.xpvav*, %struct.xpvav** %sv_any246, align 8
  %xav_fill247 = getelementptr inbounds %struct.xpvav, %struct.xpvav* %235, i32 0, i32 1
  %236 = load i64, i64* %xav_fill247, align 8
  %add.ptr248 = getelementptr inbounds %struct.sv*, %struct.sv** %232, i64 %236
  store %struct.sv** %add.ptr248, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %add.ptr248, %struct.sv*** %sp199, align 8
  %237 = load %struct.stackinfo*, %struct.stackinfo** %prev, align 8
  %si_stack250 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %237, i32 0, i32 0
  %238 = load %struct.av*, %struct.av** %si_stack250, align 8
  store %struct.av* %238, %struct.av** @PL_curstack, align 8
  store %struct.av* %238, %struct.av** %tmp249
  %239 = load %struct.av*, %struct.av** %tmp249
  %240 = load %struct.stackinfo*, %struct.stackinfo** %prev, align 8
  store %struct.stackinfo* %240, %struct.stackinfo** @PL_curstackinfo, align 8
  store %struct.stackinfo* %240, %struct.stackinfo** %tmp251
  %241 = load %struct.stackinfo*, %struct.stackinfo** %tmp251
  %242 = load %struct.sv*, %struct.sv** %res, align 8
  %sv_flags252 = getelementptr inbounds %struct.sv, %struct.sv* %242, i32 0, i32 2
  %243 = load i32, i32* %sv_flags252, align 4
  %and253 = and i32 %243, 118423552
  %tobool254 = icmp ne i32 %and253, 0
  br i1 %tobool254, label %if.end.256, label %if.then.255

if.then.255:                                      ; preds = %if.end.231
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.204, i32 0, i32 0), i8** %why1, align 8
  %244 = load i8*, i8** %key.addr, align 8
  store i8* %244, i8** %why2, align 8
  store i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.205, i32 0, i32 0), i8** %why3, align 8
  %245 = load %struct.sv*, %struct.sv** %res, align 8
  store %struct.sv* %245, %struct.sv** %sv.addr, align 8
  br label %report

if.end.256:                                       ; preds = %if.end.231
  %246 = load %struct.sv*, %struct.sv** %res, align 8
  store %struct.sv* %246, %struct.sv** %retval
  br label %return

return:                                           ; preds = %if.end.256, %msgdone
  %247 = load %struct.sv*, %struct.sv** %retval
  ret %struct.sv* %247
}

declare %struct.op* @Perl_newSVOP(i32, i32, %struct.sv*) #1

; Function Attrs: nounwind uwtable
define internal i8* @S_scan_const(i8* %start) #0 {
entry:
  %start.addr = alloca i8*, align 8
  %send = alloca i8*, align 8
  %sv = alloca %struct.sv*, align 8
  %s = alloca i8*, align 8
  %d = alloca i8*, align 8
  %dorange = alloca i8, align 1
  %didrange = alloca i8, align 1
  %has_utf8 = alloca i32, align 4
  %this_utf8 = alloca i32, align 4
  %uv = alloca i64, align 8
  %leaveit = alloca i8*, align 8
  %i = alloca i32, align 4
  %min = alloca i32, align 4
  %max = alloca i32, align 4
  %c = alloca i8*, align 8
  %e = alloca i8*, align 8
  %count = alloca i32, align 4
  %regparse = alloca i8*, align 8
  %c154 = alloca i8, align 1
  %flags = alloca i32, align 4
  %len = alloca i64, align 8
  %e498 = alloca i8*, align 8
  %flags500 = alloca i32, align 4
  %len501 = alloca i64, align 8
  %len513 = alloca i64, align 8
  %flags514 = alloca i32, align 4
  %hicount = alloca i32, align 4
  %c526 = alloca i8*, align 8
  %offset = alloca i64, align 8
  %src = alloca i8*, align 8
  %dst = alloca i8*, align 8
  %ch = alloca i8, align 1
  %e633 = alloca i8*, align 8
  %res = alloca %struct.sv*, align 8
  %len635 = alloca i64, align 8
  %str = alloca i8*, align 8
  %flags655 = alloca i32, align 4
  %ostart = alloca i8*, align 8
  %tmp = alloca i64, align 8
  %odest = alloca i8*, align 8
  %c779 = alloca i8, align 1
  %len825 = alloca i64, align 8
  %uv827 = alloca i64, align 8
  %need = alloca i64, align 8
  %off = alloca i64, align 8
  %tmp916 = alloca i64, align 8
  %tmp970 = alloca i64, align 8
  store i8* %start, i8** %start.addr, align 8
  %0 = load i8*, i8** @PL_bufend, align 8
  store i8* %0, i8** %send, align 8
  %1 = load i8*, i8** %send, align 8
  %2 = load i8*, i8** %start.addr, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %1 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %2 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %call = call %struct.sv* @Perl_newSV(i64 %sub.ptr.sub)
  store %struct.sv* %call, %struct.sv** %sv, align 8
  %3 = load i8*, i8** %start.addr, align 8
  store i8* %3, i8** %s, align 8
  %4 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %4, i32 0, i32 0
  %5 = load i8*, i8** %sv_any, align 8
  %6 = bitcast i8* %5 to %struct.xpv*
  %xpv_pv = getelementptr inbounds %struct.xpv, %struct.xpv* %6, i32 0, i32 0
  %7 = load i8*, i8** %xpv_pv, align 8
  store i8* %7, i8** %d, align 8
  store i8 0, i8* %dorange, align 1
  store i8 0, i8* %didrange, align 1
  store i32 0, i32* %has_utf8, align 4
  %8 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %tobool = icmp ne %struct.sv* %8, null
  br i1 %tobool, label %land.lhs.true, label %lor.rhs

land.lhs.true:                                    ; preds = %entry
  %9 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %9, i32 0, i32 2
  %10 = load i32, i32* %sv_flags, align 4
  %and = and i32 %10, 536870912
  %tobool1 = icmp ne i32 %and, 0
  br i1 %tobool1, label %land.lhs.true.2, label %lor.rhs

land.lhs.true.2:                                  ; preds = %land.lhs.true
  %11 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private = getelementptr inbounds %struct.cop, %struct.cop* %11, i32 0, i32 7
  %12 = load i8, i8* %op_private, align 1
  %conv = zext i8 %12 to i32
  %and3 = and i32 %conv, 8
  %tobool4 = icmp ne i32 %and3, 0
  br i1 %tobool4, label %lor.rhs, label %lor.end

lor.rhs:                                          ; preds = %land.lhs.true.2, %land.lhs.true, %entry
  %13 = load i32, i32* @PL_hints, align 4
  %and5 = and i32 %13, 8388608
  %tobool6 = icmp ne i32 %and5, 0
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %land.lhs.true.2
  %14 = phi i1 [ true, %land.lhs.true.2 ], [ %tobool6, %lor.rhs ]
  %lor.ext = zext i1 %14 to i32
  store i32 %lor.ext, i32* %this_utf8, align 4
  %15 = load %struct.op*, %struct.op** @PL_lex_inpat, align 8
  %tobool7 = icmp ne %struct.op* %15, null
  %cond = select i1 %tobool7, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.158, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.24, i32 0, i32 0)
  store i8* %cond, i8** %leaveit, align 8
  %16 = load i32, i32* @PL_lex_inwhat, align 4
  %cmp = icmp eq i32 %16, 35
  br i1 %cmp, label %land.lhs.true.9, label %if.end

land.lhs.true.9:                                  ; preds = %lor.end
  %17 = load %struct.op*, %struct.op** getelementptr inbounds (%struct._sublex_info, %struct._sublex_info* @PL_sublex_info, i32 0, i32 2), align 8
  %tobool10 = icmp ne %struct.op* %17, null
  br i1 %tobool10, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true.9
  %18 = load %struct.op*, %struct.op** getelementptr inbounds (%struct._sublex_info, %struct._sublex_info* @PL_sublex_info, i32 0, i32 2), align 8
  %op_private11 = getelementptr inbounds %struct.op, %struct.op* %18, i32 0, i32 7
  %19 = load i8, i8* %op_private11, align 1
  %conv12 = zext i8 %19 to i32
  %and13 = and i32 %conv12, 3
  store i32 %and13, i32* %has_utf8, align 4
  %20 = load %struct.op*, %struct.op** getelementptr inbounds (%struct._sublex_info, %struct._sublex_info* @PL_sublex_info, i32 0, i32 2), align 8
  %op_private14 = getelementptr inbounds %struct.op, %struct.op* %20, i32 0, i32 7
  %21 = load i8, i8* %op_private14, align 1
  %conv15 = zext i8 %21 to i32
  %22 = load %struct.sv*, %struct.sv** @PL_lex_repl, align 8
  %tobool16 = icmp ne %struct.sv* %22, null
  %cond17 = select i1 %tobool16, i32 1, i32 2
  %and18 = and i32 %conv15, %cond17
  store i32 %and18, i32* %this_utf8, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true.9, %lor.end
  br label %while.cond

while.cond:                                       ; preds = %if.end.914, %sw.epilog, %if.end.799, %if.end.772, %if.end.626, %if.then.504, %if.then.423, %if.then.344, %if.then.91, %for.end, %while.end, %if.end
  %23 = load i8*, i8** %s, align 8
  %24 = load i8*, i8** %send, align 8
  %cmp19 = icmp ult i8* %23, %24
  br i1 %cmp19, label %lor.end.24, label %lor.rhs.21

lor.rhs.21:                                       ; preds = %while.cond
  %25 = load i8, i8* %dorange, align 1
  %conv22 = sext i8 %25 to i32
  %tobool23 = icmp ne i32 %conv22, 0
  br label %lor.end.24

lor.end.24:                                       ; preds = %lor.rhs.21, %while.cond
  %26 = phi i1 [ true, %while.cond ], [ %tobool23, %lor.rhs.21 ]
  br i1 %26, label %while.body, label %while.end.915

while.body:                                       ; preds = %lor.end.24
  %27 = load i32, i32* @PL_lex_inwhat, align 4
  %cmp26 = icmp eq i32 %27, 35
  br i1 %cmp26, label %if.then.28, label %if.else.99

if.then.28:                                       ; preds = %while.body
  %28 = load i8, i8* %dorange, align 1
  %tobool29 = icmp ne i8 %28, 0
  br i1 %tobool29, label %if.then.30, label %if.else

if.then.30:                                       ; preds = %if.then.28
  %29 = load i32, i32* %has_utf8, align 4
  %tobool31 = icmp ne i32 %29, 0
  br i1 %tobool31, label %if.then.32, label %if.end.39

if.then.32:                                       ; preds = %if.then.30
  %30 = load i8*, i8** %d, align 8
  %call33 = call i8* @Perl_utf8_hop(i8* %30, i32 -1)
  store i8* %call33, i8** %c, align 8
  %31 = load i8*, i8** %d, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %31, i32 1
  store i8* %incdec.ptr, i8** %d, align 8
  store i8* %31, i8** %e, align 8
  br label %while.cond.34

while.cond.34:                                    ; preds = %while.body.38, %if.then.32
  %32 = load i8*, i8** %e, align 8
  %incdec.ptr35 = getelementptr inbounds i8, i8* %32, i32 -1
  store i8* %incdec.ptr35, i8** %e, align 8
  %33 = load i8*, i8** %c, align 8
  %cmp36 = icmp ugt i8* %32, %33
  br i1 %cmp36, label %while.body.38, label %while.end

while.body.38:                                    ; preds = %while.cond.34
  %34 = load i8*, i8** %e, align 8
  %35 = load i8, i8* %34, align 1
  %36 = load i8*, i8** %e, align 8
  %add.ptr = getelementptr inbounds i8, i8* %36, i64 1
  store i8 %35, i8* %add.ptr, align 1
  br label %while.cond.34

while.end:                                        ; preds = %while.cond.34
  %37 = load i8*, i8** %c, align 8
  store i8 -1, i8* %37, align 1
  store i8 0, i8* %dorange, align 1
  store i8 1, i8* %didrange, align 1
  br label %while.cond

if.end.39:                                        ; preds = %if.then.30
  %38 = load i8*, i8** %d, align 8
  %39 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any40 = getelementptr inbounds %struct.sv, %struct.sv* %39, i32 0, i32 0
  %40 = load i8*, i8** %sv_any40, align 8
  %41 = bitcast i8* %40 to %struct.xpv*
  %xpv_pv41 = getelementptr inbounds %struct.xpv, %struct.xpv* %41, i32 0, i32 0
  %42 = load i8*, i8** %xpv_pv41, align 8
  %sub.ptr.lhs.cast42 = ptrtoint i8* %38 to i64
  %sub.ptr.rhs.cast43 = ptrtoint i8* %42 to i64
  %sub.ptr.sub44 = sub i64 %sub.ptr.lhs.cast42, %sub.ptr.rhs.cast43
  %conv45 = trunc i64 %sub.ptr.sub44 to i32
  store i32 %conv45, i32* %i, align 4
  %43 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any46 = getelementptr inbounds %struct.sv, %struct.sv* %43, i32 0, i32 0
  %44 = load i8*, i8** %sv_any46, align 8
  %45 = bitcast i8* %44 to %struct.xpv*
  %xpv_len = getelementptr inbounds %struct.xpv, %struct.xpv* %45, i32 0, i32 2
  %46 = load i64, i64* %xpv_len, align 8
  %47 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any47 = getelementptr inbounds %struct.sv, %struct.sv* %47, i32 0, i32 0
  %48 = load i8*, i8** %sv_any47, align 8
  %49 = bitcast i8* %48 to %struct.xpv*
  %xpv_len48 = getelementptr inbounds %struct.xpv, %struct.xpv* %49, i32 0, i32 2
  %50 = load i64, i64* %xpv_len48, align 8
  %add = add i64 %50, 256
  %cmp49 = icmp ult i64 %46, %add
  br i1 %cmp49, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end.39
  %51 = load %struct.sv*, %struct.sv** %sv, align 8
  %52 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any51 = getelementptr inbounds %struct.sv, %struct.sv* %52, i32 0, i32 0
  %53 = load i8*, i8** %sv_any51, align 8
  %54 = bitcast i8* %53 to %struct.xpv*
  %xpv_len52 = getelementptr inbounds %struct.xpv, %struct.xpv* %54, i32 0, i32 2
  %55 = load i64, i64* %xpv_len52, align 8
  %add53 = add i64 %55, 256
  %call54 = call i8* @Perl_sv_grow(%struct.sv* %51, i64 %add53)
  br label %cond.end

cond.false:                                       ; preds = %if.end.39
  %56 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any55 = getelementptr inbounds %struct.sv, %struct.sv* %56, i32 0, i32 0
  %57 = load i8*, i8** %sv_any55, align 8
  %58 = bitcast i8* %57 to %struct.xpv*
  %xpv_pv56 = getelementptr inbounds %struct.xpv, %struct.xpv* %58, i32 0, i32 0
  %59 = load i8*, i8** %xpv_pv56, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond57 = phi i8* [ %call54, %cond.true ], [ %59, %cond.false ]
  %60 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any58 = getelementptr inbounds %struct.sv, %struct.sv* %60, i32 0, i32 0
  %61 = load i8*, i8** %sv_any58, align 8
  %62 = bitcast i8* %61 to %struct.xpv*
  %xpv_pv59 = getelementptr inbounds %struct.xpv, %struct.xpv* %62, i32 0, i32 0
  %63 = load i8*, i8** %xpv_pv59, align 8
  %64 = load i32, i32* %i, align 4
  %idx.ext = sext i32 %64 to i64
  %add.ptr60 = getelementptr inbounds i8, i8* %63, i64 %idx.ext
  store i8* %add.ptr60, i8** %d, align 8
  %65 = load i8*, i8** %d, align 8
  %add.ptr61 = getelementptr inbounds i8, i8* %65, i64 -2
  store i8* %add.ptr61, i8** %d, align 8
  %66 = load i8*, i8** %d, align 8
  %67 = load i8, i8* %66, align 1
  %conv62 = zext i8 %67 to i32
  store i32 %conv62, i32* %min, align 4
  %68 = load i8*, i8** %d, align 8
  %arrayidx = getelementptr inbounds i8, i8* %68, i64 1
  %69 = load i8, i8* %arrayidx, align 1
  %conv63 = zext i8 %69 to i32
  store i32 %conv63, i32* %max, align 4
  %70 = load i32, i32* %min, align 4
  %71 = load i32, i32* %max, align 4
  %cmp64 = icmp sgt i32 %70, %71
  br i1 %cmp64, label %if.then.66, label %if.end.71

if.then.66:                                       ; preds = %cond.end
  %72 = load i32, i32* %min, align 4
  %conv67 = trunc i32 %72 to i8
  %conv68 = sext i8 %conv67 to i32
  %73 = load i32, i32* %max, align 4
  %conv69 = trunc i32 %73 to i8
  %conv70 = sext i8 %conv69 to i32
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.159, i32 0, i32 0), i32 %conv68, i32 %conv70)
  br label %if.end.71

if.end.71:                                        ; preds = %if.then.66, %cond.end
  %74 = load i32, i32* %min, align 4
  store i32 %74, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.71
  %75 = load i32, i32* %i, align 4
  %76 = load i32, i32* %max, align 4
  %cmp72 = icmp sle i32 %75, %76
  br i1 %cmp72, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %77 = load i32, i32* %i, align 4
  %conv74 = trunc i32 %77 to i8
  %78 = load i8*, i8** %d, align 8
  %incdec.ptr75 = getelementptr inbounds i8, i8* %78, i32 1
  store i8* %incdec.ptr75, i8** %d, align 8
  store i8 %conv74, i8* %78, align 1
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %79 = load i32, i32* %i, align 4
  %inc = add nsw i32 %79, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i8 0, i8* %dorange, align 1
  store i8 1, i8* %didrange, align 1
  br label %while.cond

if.else:                                          ; preds = %if.then.28
  %80 = load i8*, i8** %s, align 8
  %81 = load i8, i8* %80, align 1
  %conv76 = sext i8 %81 to i32
  %cmp77 = icmp eq i32 %conv76, 45
  br i1 %cmp77, label %land.lhs.true.79, label %if.else.96

land.lhs.true.79:                                 ; preds = %if.else
  %82 = load i8*, i8** %s, align 8
  %add.ptr80 = getelementptr inbounds i8, i8* %82, i64 1
  %83 = load i8*, i8** %send, align 8
  %cmp81 = icmp ult i8* %add.ptr80, %83
  br i1 %cmp81, label %land.lhs.true.83, label %if.else.96

land.lhs.true.83:                                 ; preds = %land.lhs.true.79
  %84 = load i8*, i8** %s, align 8
  %85 = load i8*, i8** %start.addr, align 8
  %cmp84 = icmp ne i8* %84, %85
  br i1 %cmp84, label %if.then.86, label %if.else.96

if.then.86:                                       ; preds = %land.lhs.true.83
  %86 = load i8, i8* %didrange, align 1
  %tobool87 = icmp ne i8 %86, 0
  br i1 %tobool87, label %if.then.88, label %if.end.89

if.then.88:                                       ; preds = %if.then.86
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.160, i32 0, i32 0))
  br label %if.end.89

if.end.89:                                        ; preds = %if.then.88, %if.then.86
  %87 = load i32, i32* %has_utf8, align 4
  %tobool90 = icmp ne i32 %87, 0
  br i1 %tobool90, label %if.then.91, label %if.end.94

if.then.91:                                       ; preds = %if.end.89
  %88 = load i8*, i8** %d, align 8
  %incdec.ptr92 = getelementptr inbounds i8, i8* %88, i32 1
  store i8* %incdec.ptr92, i8** %d, align 8
  store i8 -1, i8* %88, align 1
  %89 = load i8*, i8** %s, align 8
  %incdec.ptr93 = getelementptr inbounds i8, i8* %89, i32 1
  store i8* %incdec.ptr93, i8** %s, align 8
  br label %while.cond

if.end.94:                                        ; preds = %if.end.89
  store i8 1, i8* %dorange, align 1
  %90 = load i8*, i8** %s, align 8
  %incdec.ptr95 = getelementptr inbounds i8, i8* %90, i32 1
  store i8* %incdec.ptr95, i8** %s, align 8
  br label %if.end.97

if.else.96:                                       ; preds = %land.lhs.true.83, %land.lhs.true.79, %if.else
  store i8 0, i8* %didrange, align 1
  br label %if.end.97

if.end.97:                                        ; preds = %if.else.96, %if.end.94
  br label %if.end.98

if.end.98:                                        ; preds = %if.end.97
  br label %if.end.325

if.else.99:                                       ; preds = %while.body
  %91 = load i8*, i8** %s, align 8
  %92 = load i8, i8* %91, align 1
  %conv100 = sext i8 %92 to i32
  %cmp101 = icmp eq i32 %conv100, 40
  br i1 %cmp101, label %land.lhs.true.103, label %if.else.202

land.lhs.true.103:                                ; preds = %if.else.99
  %93 = load %struct.op*, %struct.op** @PL_lex_inpat, align 8
  %tobool104 = icmp ne %struct.op* %93, null
  br i1 %tobool104, label %land.lhs.true.105, label %if.else.202

land.lhs.true.105:                                ; preds = %land.lhs.true.103
  %94 = load i8*, i8** %s, align 8
  %arrayidx106 = getelementptr inbounds i8, i8* %94, i64 1
  %95 = load i8, i8* %arrayidx106, align 1
  %conv107 = sext i8 %95 to i32
  %cmp108 = icmp eq i32 %conv107, 63
  br i1 %cmp108, label %if.then.110, label %if.else.202

if.then.110:                                      ; preds = %land.lhs.true.105
  %96 = load i8*, i8** %s, align 8
  %arrayidx111 = getelementptr inbounds i8, i8* %96, i64 2
  %97 = load i8, i8* %arrayidx111, align 1
  %conv112 = sext i8 %97 to i32
  %cmp113 = icmp eq i32 %conv112, 35
  br i1 %cmp113, label %if.then.115, label %if.else.127

if.then.115:                                      ; preds = %if.then.110
  br label %while.cond.116

while.cond.116:                                   ; preds = %while.body.123, %if.then.115
  %98 = load i8*, i8** %s, align 8
  %add.ptr117 = getelementptr inbounds i8, i8* %98, i64 1
  %99 = load i8*, i8** %send, align 8
  %cmp118 = icmp ult i8* %add.ptr117, %99
  br i1 %cmp118, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond.116
  %100 = load i8*, i8** %s, align 8
  %101 = load i8, i8* %100, align 1
  %conv120 = sext i8 %101 to i32
  %cmp121 = icmp ne i32 %conv120, 41
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond.116
  %102 = phi i1 [ false, %while.cond.116 ], [ %cmp121, %land.rhs ]
  br i1 %102, label %while.body.123, label %while.end.126

while.body.123:                                   ; preds = %land.end
  %103 = load i8*, i8** %s, align 8
  %incdec.ptr124 = getelementptr inbounds i8, i8* %103, i32 1
  store i8* %incdec.ptr124, i8** %s, align 8
  %104 = load i8, i8* %103, align 1
  %105 = load i8*, i8** %d, align 8
  %incdec.ptr125 = getelementptr inbounds i8, i8* %105, i32 1
  store i8* %incdec.ptr125, i8** %d, align 8
  store i8 %104, i8* %105, align 1
  br label %while.cond.116

while.end.126:                                    ; preds = %land.end
  br label %if.end.201

if.else.127:                                      ; preds = %if.then.110
  %106 = load i8*, i8** %s, align 8
  %arrayidx128 = getelementptr inbounds i8, i8* %106, i64 2
  %107 = load i8, i8* %arrayidx128, align 1
  %conv129 = sext i8 %107 to i32
  %cmp130 = icmp eq i32 %conv129, 123
  br i1 %cmp130, label %if.then.146, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.else.127
  %108 = load i8*, i8** %s, align 8
  %arrayidx132 = getelementptr inbounds i8, i8* %108, i64 2
  %109 = load i8, i8* %arrayidx132, align 1
  %conv133 = sext i8 %109 to i32
  %cmp134 = icmp eq i32 %conv133, 112
  br i1 %cmp134, label %land.lhs.true.141, label %lor.lhs.false.136

lor.lhs.false.136:                                ; preds = %lor.lhs.false
  %110 = load i8*, i8** %s, align 8
  %arrayidx137 = getelementptr inbounds i8, i8* %110, i64 2
  %111 = load i8, i8* %arrayidx137, align 1
  %conv138 = sext i8 %111 to i32
  %cmp139 = icmp eq i32 %conv138, 63
  br i1 %cmp139, label %land.lhs.true.141, label %if.end.200

land.lhs.true.141:                                ; preds = %lor.lhs.false.136, %lor.lhs.false
  %112 = load i8*, i8** %s, align 8
  %arrayidx142 = getelementptr inbounds i8, i8* %112, i64 3
  %113 = load i8, i8* %arrayidx142, align 1
  %conv143 = sext i8 %113 to i32
  %cmp144 = icmp eq i32 %conv143, 123
  br i1 %cmp144, label %if.then.146, label %if.end.200

if.then.146:                                      ; preds = %land.lhs.true.141, %if.else.127
  store i32 1, i32* %count, align 4
  %114 = load i8*, i8** %s, align 8
  %115 = load i8*, i8** %s, align 8
  %arrayidx147 = getelementptr inbounds i8, i8* %115, i64 2
  %116 = load i8, i8* %arrayidx147, align 1
  %conv148 = sext i8 %116 to i32
  %cmp149 = icmp eq i32 %conv148, 123
  %cond151 = select i1 %cmp149, i32 3, i32 4
  %idx.ext152 = sext i32 %cond151 to i64
  %add.ptr153 = getelementptr inbounds i8, i8* %114, i64 %idx.ext152
  store i8* %add.ptr153, i8** %regparse, align 8
  br label %while.cond.155

while.cond.155:                                   ; preds = %if.end.184, %if.then.146
  %117 = load i32, i32* %count, align 4
  %tobool156 = icmp ne i32 %117, 0
  br i1 %tobool156, label %land.rhs.157, label %land.end.160

land.rhs.157:                                     ; preds = %while.cond.155
  %118 = load i8*, i8** %regparse, align 8
  %119 = load i8, i8* %118, align 1
  store i8 %119, i8* %c154, align 1
  %conv158 = sext i8 %119 to i32
  %tobool159 = icmp ne i32 %conv158, 0
  br label %land.end.160

land.end.160:                                     ; preds = %land.rhs.157, %while.cond.155
  %120 = phi i1 [ false, %while.cond.155 ], [ %tobool159, %land.rhs.157 ]
  br i1 %120, label %while.body.161, label %while.end.186

while.body.161:                                   ; preds = %land.end.160
  %121 = load i8, i8* %c154, align 1
  %conv162 = sext i8 %121 to i32
  %cmp163 = icmp eq i32 %conv162, 92
  br i1 %cmp163, label %land.lhs.true.165, label %if.else.171

land.lhs.true.165:                                ; preds = %while.body.161
  %122 = load i8*, i8** %regparse, align 8
  %arrayidx166 = getelementptr inbounds i8, i8* %122, i64 1
  %123 = load i8, i8* %arrayidx166, align 1
  %conv167 = sext i8 %123 to i32
  %tobool168 = icmp ne i32 %conv167, 0
  br i1 %tobool168, label %if.then.169, label %if.else.171

if.then.169:                                      ; preds = %land.lhs.true.165
  %124 = load i8*, i8** %regparse, align 8
  %incdec.ptr170 = getelementptr inbounds i8, i8* %124, i32 1
  store i8* %incdec.ptr170, i8** %regparse, align 8
  br label %if.end.184

if.else.171:                                      ; preds = %land.lhs.true.165, %while.body.161
  %125 = load i8, i8* %c154, align 1
  %conv172 = sext i8 %125 to i32
  %cmp173 = icmp eq i32 %conv172, 123
  br i1 %cmp173, label %if.then.175, label %if.else.177

if.then.175:                                      ; preds = %if.else.171
  %126 = load i32, i32* %count, align 4
  %inc176 = add nsw i32 %126, 1
  store i32 %inc176, i32* %count, align 4
  br label %if.end.183

if.else.177:                                      ; preds = %if.else.171
  %127 = load i8, i8* %c154, align 1
  %conv178 = sext i8 %127 to i32
  %cmp179 = icmp eq i32 %conv178, 125
  br i1 %cmp179, label %if.then.181, label %if.end.182

if.then.181:                                      ; preds = %if.else.177
  %128 = load i32, i32* %count, align 4
  %dec = add nsw i32 %128, -1
  store i32 %dec, i32* %count, align 4
  br label %if.end.182

if.end.182:                                       ; preds = %if.then.181, %if.else.177
  br label %if.end.183

if.end.183:                                       ; preds = %if.end.182, %if.then.175
  br label %if.end.184

if.end.184:                                       ; preds = %if.end.183, %if.then.169
  %129 = load i8*, i8** %regparse, align 8
  %incdec.ptr185 = getelementptr inbounds i8, i8* %129, i32 1
  store i8* %incdec.ptr185, i8** %regparse, align 8
  br label %while.cond.155

while.end.186:                                    ; preds = %land.end.160
  %130 = load i8*, i8** %regparse, align 8
  %131 = load i8, i8* %130, align 1
  %conv187 = sext i8 %131 to i32
  %cmp188 = icmp ne i32 %conv187, 41
  br i1 %cmp188, label %if.then.190, label %if.end.192

if.then.190:                                      ; preds = %while.end.186
  %132 = load i8*, i8** %regparse, align 8
  %incdec.ptr191 = getelementptr inbounds i8, i8* %132, i32 -1
  store i8* %incdec.ptr191, i8** %regparse, align 8
  br label %if.end.192

if.end.192:                                       ; preds = %if.then.190, %while.end.186
  br label %while.cond.193

while.cond.193:                                   ; preds = %while.body.196, %if.end.192
  %133 = load i8*, i8** %s, align 8
  %134 = load i8*, i8** %regparse, align 8
  %cmp194 = icmp ult i8* %133, %134
  br i1 %cmp194, label %while.body.196, label %while.end.199

while.body.196:                                   ; preds = %while.cond.193
  %135 = load i8*, i8** %s, align 8
  %incdec.ptr197 = getelementptr inbounds i8, i8* %135, i32 1
  store i8* %incdec.ptr197, i8** %s, align 8
  %136 = load i8, i8* %135, align 1
  %137 = load i8*, i8** %d, align 8
  %incdec.ptr198 = getelementptr inbounds i8, i8* %137, i32 1
  store i8* %incdec.ptr198, i8** %d, align 8
  store i8 %136, i8* %137, align 1
  br label %while.cond.193

while.end.199:                                    ; preds = %while.cond.193
  br label %if.end.200

if.end.200:                                       ; preds = %while.end.199, %land.lhs.true.141, %lor.lhs.false.136
  br label %if.end.201

if.end.201:                                       ; preds = %if.end.200, %while.end.126
  br label %if.end.324

if.else.202:                                      ; preds = %land.lhs.true.105, %land.lhs.true.103, %if.else.99
  %138 = load i8*, i8** %s, align 8
  %139 = load i8, i8* %138, align 1
  %conv203 = sext i8 %139 to i32
  %cmp204 = icmp eq i32 %conv203, 35
  br i1 %cmp204, label %land.lhs.true.206, label %if.else.225

land.lhs.true.206:                                ; preds = %if.else.202
  %140 = load %struct.op*, %struct.op** @PL_lex_inpat, align 8
  %tobool207 = icmp ne %struct.op* %140, null
  br i1 %tobool207, label %land.lhs.true.208, label %if.else.225

land.lhs.true.208:                                ; preds = %land.lhs.true.206
  %141 = load %struct.op*, %struct.op** @PL_lex_inpat, align 8
  %142 = bitcast %struct.op* %141 to %struct.pmop*
  %op_pmflags = getelementptr inbounds %struct.pmop, %struct.pmop* %142, i32 0, i32 14
  %143 = load i32, i32* %op_pmflags, align 4
  %and209 = and i32 %143, 32768
  %tobool210 = icmp ne i32 %and209, 0
  br i1 %tobool210, label %if.then.211, label %if.else.225

if.then.211:                                      ; preds = %land.lhs.true.208
  br label %while.cond.212

while.cond.212:                                   ; preds = %while.body.221, %if.then.211
  %144 = load i8*, i8** %s, align 8
  %add.ptr213 = getelementptr inbounds i8, i8* %144, i64 1
  %145 = load i8*, i8** %send, align 8
  %cmp214 = icmp ult i8* %add.ptr213, %145
  br i1 %cmp214, label %land.rhs.216, label %land.end.220

land.rhs.216:                                     ; preds = %while.cond.212
  %146 = load i8*, i8** %s, align 8
  %147 = load i8, i8* %146, align 1
  %conv217 = sext i8 %147 to i32
  %cmp218 = icmp ne i32 %conv217, 10
  br label %land.end.220

land.end.220:                                     ; preds = %land.rhs.216, %while.cond.212
  %148 = phi i1 [ false, %while.cond.212 ], [ %cmp218, %land.rhs.216 ]
  br i1 %148, label %while.body.221, label %while.end.224

while.body.221:                                   ; preds = %land.end.220
  %149 = load i8*, i8** %s, align 8
  %incdec.ptr222 = getelementptr inbounds i8, i8* %149, i32 1
  store i8* %incdec.ptr222, i8** %s, align 8
  %150 = load i8, i8* %149, align 1
  %151 = load i8*, i8** %d, align 8
  %incdec.ptr223 = getelementptr inbounds i8, i8* %151, i32 1
  store i8* %incdec.ptr223, i8** %d, align 8
  store i8 %150, i8* %151, align 1
  br label %while.cond.212

while.end.224:                                    ; preds = %land.end.220
  br label %if.end.323

if.else.225:                                      ; preds = %land.lhs.true.208, %land.lhs.true.206, %if.else.202
  %152 = load i8*, i8** %s, align 8
  %153 = load i8, i8* %152, align 1
  %conv226 = sext i8 %153 to i32
  %cmp227 = icmp eq i32 %conv226, 64
  br i1 %cmp227, label %land.lhs.true.229, label %if.else.303

land.lhs.true.229:                                ; preds = %if.else.225
  %154 = load i8*, i8** %s, align 8
  %arrayidx230 = getelementptr inbounds i8, i8* %154, i64 1
  %155 = load i8, i8* %arrayidx230, align 1
  %conv231 = sext i8 %155 to i32
  %tobool232 = icmp ne i32 %conv231, 0
  br i1 %tobool232, label %land.lhs.true.233, label %if.else.303

land.lhs.true.233:                                ; preds = %land.lhs.true.229
  %156 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private234 = getelementptr inbounds %struct.cop, %struct.cop* %156, i32 0, i32 7
  %157 = load i8, i8* %op_private234, align 1
  %conv235 = zext i8 %157 to i32
  %and236 = and i32 %conv235, 8
  %tobool237 = icmp ne i32 %and236, 0
  br i1 %tobool237, label %cond.true.257, label %lor.lhs.false.238

lor.lhs.false.238:                                ; preds = %land.lhs.true.233
  %158 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %tobool239 = icmp ne %struct.sv* %158, null
  br i1 %tobool239, label %land.lhs.true.240, label %lor.lhs.false.249

land.lhs.true.240:                                ; preds = %lor.lhs.false.238
  %159 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_flags241 = getelementptr inbounds %struct.sv, %struct.sv* %159, i32 0, i32 2
  %160 = load i32, i32* %sv_flags241, align 4
  %and242 = and i32 %160, 536870912
  %tobool243 = icmp ne i32 %and242, 0
  br i1 %tobool243, label %land.lhs.true.244, label %lor.lhs.false.249

land.lhs.true.244:                                ; preds = %land.lhs.true.240
  %161 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private245 = getelementptr inbounds %struct.cop, %struct.cop* %161, i32 0, i32 7
  %162 = load i8, i8* %op_private245, align 1
  %conv246 = zext i8 %162 to i32
  %and247 = and i32 %conv246, 8
  %tobool248 = icmp ne i32 %and247, 0
  br i1 %tobool248, label %lor.lhs.false.249, label %lor.lhs.false.252

lor.lhs.false.249:                                ; preds = %land.lhs.true.244, %land.lhs.true.240, %lor.lhs.false.238
  %163 = load i32, i32* @PL_hints, align 4
  %and250 = and i32 %163, 8388608
  %tobool251 = icmp ne i32 %and250, 0
  br i1 %tobool251, label %lor.lhs.false.252, label %cond.true.257

lor.lhs.false.252:                                ; preds = %lor.lhs.false.249, %land.lhs.true.244
  %164 = load i8*, i8** %s, align 8
  %add.ptr253 = getelementptr inbounds i8, i8* %164, i64 1
  %165 = load i8, i8* %add.ptr253, align 1
  %conv254 = zext i8 %165 to i32
  %cmp255 = icmp slt i32 %conv254, 192
  br i1 %cmp255, label %cond.true.257, label %cond.false.292

cond.true.257:                                    ; preds = %lor.lhs.false.252, %lor.lhs.false.249, %land.lhs.true.233
  %166 = load i8*, i8** %s, align 8
  %add.ptr258 = getelementptr inbounds i8, i8* %166, i64 1
  %167 = load i8, i8* %add.ptr258, align 1
  %conv259 = sext i8 %167 to i32
  %cmp260 = icmp sge i32 %conv259, 65
  br i1 %cmp260, label %land.lhs.true.262, label %lor.lhs.false.267

land.lhs.true.262:                                ; preds = %cond.true.257
  %168 = load i8*, i8** %s, align 8
  %add.ptr263 = getelementptr inbounds i8, i8* %168, i64 1
  %169 = load i8, i8* %add.ptr263, align 1
  %conv264 = sext i8 %169 to i32
  %cmp265 = icmp sle i32 %conv264, 90
  br i1 %cmp265, label %if.then.302, label %lor.lhs.false.267

lor.lhs.false.267:                                ; preds = %land.lhs.true.262, %cond.true.257
  %170 = load i8*, i8** %s, align 8
  %add.ptr268 = getelementptr inbounds i8, i8* %170, i64 1
  %171 = load i8, i8* %add.ptr268, align 1
  %conv269 = sext i8 %171 to i32
  %cmp270 = icmp sge i32 %conv269, 97
  br i1 %cmp270, label %land.lhs.true.272, label %lor.lhs.false.277

land.lhs.true.272:                                ; preds = %lor.lhs.false.267
  %172 = load i8*, i8** %s, align 8
  %add.ptr273 = getelementptr inbounds i8, i8* %172, i64 1
  %173 = load i8, i8* %add.ptr273, align 1
  %conv274 = sext i8 %173 to i32
  %cmp275 = icmp sle i32 %conv274, 122
  br i1 %cmp275, label %if.then.302, label %lor.lhs.false.277

lor.lhs.false.277:                                ; preds = %land.lhs.true.272, %lor.lhs.false.267
  %174 = load i8*, i8** %s, align 8
  %add.ptr278 = getelementptr inbounds i8, i8* %174, i64 1
  %175 = load i8, i8* %add.ptr278, align 1
  %conv279 = sext i8 %175 to i32
  %cmp280 = icmp sge i32 %conv279, 48
  br i1 %cmp280, label %land.lhs.true.282, label %lor.lhs.false.287

land.lhs.true.282:                                ; preds = %lor.lhs.false.277
  %176 = load i8*, i8** %s, align 8
  %add.ptr283 = getelementptr inbounds i8, i8* %176, i64 1
  %177 = load i8, i8* %add.ptr283, align 1
  %conv284 = sext i8 %177 to i32
  %cmp285 = icmp sle i32 %conv284, 57
  br i1 %cmp285, label %if.then.302, label %lor.lhs.false.287

lor.lhs.false.287:                                ; preds = %land.lhs.true.282, %lor.lhs.false.277
  %178 = load i8*, i8** %s, align 8
  %add.ptr288 = getelementptr inbounds i8, i8* %178, i64 1
  %179 = load i8, i8* %add.ptr288, align 1
  %conv289 = sext i8 %179 to i32
  %cmp290 = icmp eq i32 %conv289, 95
  br i1 %cmp290, label %if.then.302, label %lor.lhs.false.297

cond.false.292:                                   ; preds = %lor.lhs.false.252
  %180 = load i8*, i8** %s, align 8
  %add.ptr293 = getelementptr inbounds i8, i8* %180, i64 1
  %call294 = call signext i8 @Perl_is_utf8_alnum(i8* %add.ptr293)
  %conv295 = sext i8 %call294 to i32
  %tobool296 = icmp ne i32 %conv295, 0
  br i1 %tobool296, label %if.then.302, label %lor.lhs.false.297

lor.lhs.false.297:                                ; preds = %cond.false.292, %lor.lhs.false.287
  %181 = load i8*, i8** %s, align 8
  %arrayidx298 = getelementptr inbounds i8, i8* %181, i64 1
  %182 = load i8, i8* %arrayidx298, align 1
  %conv299 = sext i8 %182 to i32
  %call300 = call i8* @strchr(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.161, i32 0, i32 0), i32 %conv299)
  %tobool301 = icmp ne i8* %call300, null
  br i1 %tobool301, label %if.then.302, label %if.else.303

if.then.302:                                      ; preds = %lor.lhs.false.297, %cond.false.292, %lor.lhs.false.287, %land.lhs.true.282, %land.lhs.true.272, %land.lhs.true.262
  br label %while.end.915

if.else.303:                                      ; preds = %lor.lhs.false.297, %land.lhs.true.229, %if.else.225
  %183 = load i8*, i8** %s, align 8
  %184 = load i8, i8* %183, align 1
  %conv304 = sext i8 %184 to i32
  %cmp305 = icmp eq i32 %conv304, 36
  br i1 %cmp305, label %if.then.307, label %if.end.321

if.then.307:                                      ; preds = %if.else.303
  %185 = load %struct.op*, %struct.op** @PL_lex_inpat, align 8
  %tobool308 = icmp ne %struct.op* %185, null
  br i1 %tobool308, label %if.end.310, label %if.then.309

if.then.309:                                      ; preds = %if.then.307
  br label %while.end.915

if.end.310:                                       ; preds = %if.then.307
  %186 = load i8*, i8** %s, align 8
  %add.ptr311 = getelementptr inbounds i8, i8* %186, i64 1
  %187 = load i8*, i8** %send, align 8
  %cmp312 = icmp ult i8* %add.ptr311, %187
  br i1 %cmp312, label %land.lhs.true.314, label %if.end.320

land.lhs.true.314:                                ; preds = %if.end.310
  %188 = load i8*, i8** %s, align 8
  %arrayidx315 = getelementptr inbounds i8, i8* %188, i64 1
  %189 = load i8, i8* %arrayidx315, align 1
  %conv316 = sext i8 %189 to i32
  %call317 = call i8* @strchr(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.162, i32 0, i32 0), i32 %conv316)
  %tobool318 = icmp ne i8* %call317, null
  br i1 %tobool318, label %if.end.320, label %if.then.319

if.then.319:                                      ; preds = %land.lhs.true.314
  br label %while.end.915

if.end.320:                                       ; preds = %land.lhs.true.314, %if.end.310
  br label %if.end.321

if.end.321:                                       ; preds = %if.end.320, %if.else.303
  br label %if.end.322

if.end.322:                                       ; preds = %if.end.321
  br label %if.end.323

if.end.323:                                       ; preds = %if.end.322, %while.end.224
  br label %if.end.324

if.end.324:                                       ; preds = %if.end.323, %if.end.201
  br label %if.end.325

if.end.325:                                       ; preds = %if.end.324, %if.end.98
  %190 = load i8*, i8** %s, align 8
  %191 = load i8, i8* %190, align 1
  %conv326 = sext i8 %191 to i32
  %cmp327 = icmp eq i32 %conv326, 92
  br i1 %cmp327, label %land.lhs.true.329, label %if.end.815

land.lhs.true.329:                                ; preds = %if.end.325
  %192 = load i8*, i8** %s, align 8
  %add.ptr330 = getelementptr inbounds i8, i8* %192, i64 1
  %193 = load i8*, i8** %send, align 8
  %cmp331 = icmp ult i8* %add.ptr330, %193
  br i1 %cmp331, label %if.then.333, label %if.end.815

if.then.333:                                      ; preds = %land.lhs.true.329
  %194 = load i8*, i8** %s, align 8
  %incdec.ptr334 = getelementptr inbounds i8, i8* %194, i32 1
  store i8* %incdec.ptr334, i8** %s, align 8
  %195 = load i8*, i8** %leaveit, align 8
  %196 = load i8, i8* %195, align 1
  %conv335 = sext i8 %196 to i32
  %tobool336 = icmp ne i32 %conv335, 0
  br i1 %tobool336, label %land.lhs.true.337, label %if.end.348

land.lhs.true.337:                                ; preds = %if.then.333
  %197 = load i8*, i8** %s, align 8
  %198 = load i8, i8* %197, align 1
  %conv338 = sext i8 %198 to i32
  %tobool339 = icmp ne i32 %conv338, 0
  br i1 %tobool339, label %land.lhs.true.340, label %if.end.348

land.lhs.true.340:                                ; preds = %land.lhs.true.337
  %199 = load i8*, i8** %leaveit, align 8
  %200 = load i8*, i8** %s, align 8
  %201 = load i8, i8* %200, align 1
  %conv341 = sext i8 %201 to i32
  %call342 = call i8* @strchr(i8* %199, i32 %conv341)
  %tobool343 = icmp ne i8* %call342, null
  br i1 %tobool343, label %if.then.344, label %if.end.348

if.then.344:                                      ; preds = %land.lhs.true.340
  %202 = load i8*, i8** %d, align 8
  %incdec.ptr345 = getelementptr inbounds i8, i8* %202, i32 1
  store i8* %incdec.ptr345, i8** %d, align 8
  store i8 92, i8* %202, align 1
  %203 = load i8*, i8** %s, align 8
  %incdec.ptr346 = getelementptr inbounds i8, i8* %203, i32 1
  store i8* %incdec.ptr346, i8** %s, align 8
  %204 = load i8, i8* %203, align 1
  %205 = load i8*, i8** %d, align 8
  %incdec.ptr347 = getelementptr inbounds i8, i8* %205, i32 1
  store i8* %incdec.ptr347, i8** %d, align 8
  store i8 %204, i8* %205, align 1
  br label %while.cond

if.end.348:                                       ; preds = %land.lhs.true.340, %land.lhs.true.337, %if.then.333
  %206 = load i32, i32* @PL_lex_inwhat, align 4
  %cmp349 = icmp eq i32 %206, 33
  br i1 %cmp349, label %land.lhs.true.351, label %if.end.407

land.lhs.true.351:                                ; preds = %if.end.348
  %207 = load %struct.op*, %struct.op** @PL_lex_inpat, align 8
  %tobool352 = icmp ne %struct.op* %207, null
  br i1 %tobool352, label %if.end.407, label %land.lhs.true.353

land.lhs.true.353:                                ; preds = %land.lhs.true.351
  %208 = load i8*, i8** %s, align 8
  %209 = load i8, i8* %208, align 1
  %conv354 = sext i8 %209 to i32
  %cmp355 = icmp sge i32 %conv354, 48
  br i1 %cmp355, label %land.lhs.true.357, label %if.end.407

land.lhs.true.357:                                ; preds = %land.lhs.true.353
  %210 = load i8*, i8** %s, align 8
  %211 = load i8, i8* %210, align 1
  %conv358 = sext i8 %211 to i32
  %cmp359 = icmp sle i32 %conv358, 57
  br i1 %cmp359, label %land.lhs.true.361, label %if.end.407

land.lhs.true.361:                                ; preds = %land.lhs.true.357
  %212 = load i8*, i8** %s, align 8
  %213 = load i8, i8* %212, align 1
  %conv362 = sext i8 %213 to i32
  %cmp363 = icmp ne i32 %conv362, 48
  br i1 %cmp363, label %land.lhs.true.365, label %if.end.407

land.lhs.true.365:                                ; preds = %land.lhs.true.361
  %214 = load i8*, i8** %s, align 8
  %arrayidx366 = getelementptr inbounds i8, i8* %214, i64 1
  %215 = load i8, i8* %arrayidx366, align 1
  %conv367 = sext i8 %215 to i32
  %cmp368 = icmp sge i32 %conv367, 48
  br i1 %cmp368, label %land.lhs.true.370, label %if.then.375

land.lhs.true.370:                                ; preds = %land.lhs.true.365
  %216 = load i8*, i8** %s, align 8
  %arrayidx371 = getelementptr inbounds i8, i8* %216, i64 1
  %217 = load i8, i8* %arrayidx371, align 1
  %conv372 = sext i8 %217 to i32
  %cmp373 = icmp sle i32 %conv372, 57
  br i1 %cmp373, label %if.end.407, label %if.then.375

if.then.375:                                      ; preds = %land.lhs.true.370, %land.lhs.true.365
  %218 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings = getelementptr inbounds %struct.cop, %struct.cop* %218, i32 0, i32 14
  %219 = load %struct.sv*, %struct.sv** %cop_warnings, align 8
  %cmp376 = icmp ne %struct.sv* %219, null
  br i1 %cmp376, label %land.lhs.true.378, label %lor.lhs.false.394

land.lhs.true.378:                                ; preds = %if.then.375
  %220 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings379 = getelementptr inbounds %struct.cop, %struct.cop* %220, i32 0, i32 14
  %221 = load %struct.sv*, %struct.sv** %cop_warnings379, align 8
  %cmp380 = icmp ne %struct.sv* %221, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 2)
  br i1 %cmp380, label %land.lhs.true.382, label %lor.lhs.false.394

land.lhs.true.382:                                ; preds = %land.lhs.true.378
  %222 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings383 = getelementptr inbounds %struct.cop, %struct.cop* %222, i32 0, i32 14
  %223 = load %struct.sv*, %struct.sv** %cop_warnings383, align 8
  %cmp384 = icmp eq %struct.sv* %223, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 1)
  br i1 %cmp384, label %if.then.402, label %lor.lhs.false.386

lor.lhs.false.386:                                ; preds = %land.lhs.true.382
  %224 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings387 = getelementptr inbounds %struct.cop, %struct.cop* %224, i32 0, i32 14
  %225 = load %struct.sv*, %struct.sv** %cop_warnings387, align 8
  %sv_any388 = getelementptr inbounds %struct.sv, %struct.sv* %225, i32 0, i32 0
  %226 = load i8*, i8** %sv_any388, align 8
  %227 = bitcast i8* %226 to %struct.xpv*
  %xpv_pv389 = getelementptr inbounds %struct.xpv, %struct.xpv* %227, i32 0, i32 0
  %228 = load i8*, i8** %xpv_pv389, align 8
  %arrayidx390 = getelementptr inbounds i8, i8* %228, i64 7
  %229 = load i8, i8* %arrayidx390, align 1
  %conv391 = sext i8 %229 to i32
  %and392 = and i32 %conv391, 1
  %tobool393 = icmp ne i32 %and392, 0
  br i1 %tobool393, label %if.then.402, label %lor.lhs.false.394

lor.lhs.false.394:                                ; preds = %lor.lhs.false.386, %land.lhs.true.378, %if.then.375
  %230 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings395 = getelementptr inbounds %struct.cop, %struct.cop* %230, i32 0, i32 14
  %231 = load %struct.sv*, %struct.sv** %cop_warnings395, align 8
  %cmp396 = icmp eq %struct.sv* %231, null
  br i1 %cmp396, label %land.lhs.true.398, label %if.end.405

land.lhs.true.398:                                ; preds = %lor.lhs.false.394
  %232 = load i8, i8* @PL_dowarn, align 1
  %conv399 = zext i8 %232 to i32
  %and400 = and i32 %conv399, 1
  %tobool401 = icmp ne i32 %and400, 0
  br i1 %tobool401, label %if.then.402, label %if.end.405

if.then.402:                                      ; preds = %land.lhs.true.398, %lor.lhs.false.386, %land.lhs.true.382
  %233 = load i8*, i8** %s, align 8
  %234 = load i8, i8* %233, align 1
  %conv403 = sext i8 %234 to i32
  %235 = load i8*, i8** %s, align 8
  %236 = load i8, i8* %235, align 1
  %conv404 = sext i8 %236 to i32
  call void (i32, i8*, ...) @Perl_warner(i32 28, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.163, i32 0, i32 0), i32 %conv403, i32 %conv404)
  br label %if.end.405

if.end.405:                                       ; preds = %if.then.402, %land.lhs.true.398, %lor.lhs.false.394
  %237 = load i8*, i8** %s, align 8
  %incdec.ptr406 = getelementptr inbounds i8, i8* %237, i32 -1
  store i8* %incdec.ptr406, i8** %s, align 8
  store i8 36, i8* %incdec.ptr406, align 1
  br label %while.end.915

if.end.407:                                       ; preds = %land.lhs.true.370, %land.lhs.true.361, %land.lhs.true.357, %land.lhs.true.353, %land.lhs.true.351, %if.end.348
  %238 = load i32, i32* @PL_lex_inwhat, align 4
  %cmp408 = icmp ne i32 %238, 35
  br i1 %cmp408, label %land.lhs.true.410, label %if.end.419

land.lhs.true.410:                                ; preds = %if.end.407
  %239 = load i8*, i8** %s, align 8
  %240 = load i8, i8* %239, align 1
  %conv411 = sext i8 %240 to i32
  %tobool412 = icmp ne i32 %conv411, 0
  br i1 %tobool412, label %land.lhs.true.413, label %if.end.419

land.lhs.true.413:                                ; preds = %land.lhs.true.410
  %241 = load i8*, i8** %s, align 8
  %242 = load i8, i8* %241, align 1
  %conv414 = sext i8 %242 to i32
  %call415 = call i8* @strchr(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.164, i32 0, i32 0), i32 %conv414)
  %tobool416 = icmp ne i8* %call415, null
  br i1 %tobool416, label %if.then.417, label %if.end.419

if.then.417:                                      ; preds = %land.lhs.true.413
  %243 = load i8*, i8** %s, align 8
  %incdec.ptr418 = getelementptr inbounds i8, i8* %243, i32 -1
  store i8* %incdec.ptr418, i8** %s, align 8
  br label %while.end.915

if.end.419:                                       ; preds = %land.lhs.true.413, %land.lhs.true.410, %if.end.407
  %244 = load i8*, i8** %s, align 8
  %245 = load i8, i8* %244, align 1
  %conv420 = sext i8 %245 to i32
  switch i32 %conv420, label %sw.default [
    i32 45, label %sw.bb
    i32 48, label %sw.bb.489
    i32 49, label %sw.bb.489
    i32 50, label %sw.bb.489
    i32 51, label %sw.bb.489
    i32 52, label %sw.bb.489
    i32 53, label %sw.bb.489
    i32 54, label %sw.bb.489
    i32 55, label %sw.bb.489
    i32 120, label %sw.bb.492
    i32 78, label %sw.bb.627
    i32 99, label %sw.bb.773
    i32 98, label %sw.bb.800
    i32 110, label %sw.bb.802
    i32 114, label %sw.bb.804
    i32 102, label %sw.bb.806
    i32 116, label %sw.bb.808
    i32 101, label %sw.bb.810
    i32 97, label %sw.bb.812
  ]

sw.bb:                                            ; preds = %if.end.419
  %246 = load i32, i32* @PL_lex_inwhat, align 4
  %cmp421 = icmp eq i32 %246, 35
  br i1 %cmp421, label %if.then.423, label %if.end.426

if.then.423:                                      ; preds = %sw.bb
  %247 = load i8*, i8** %s, align 8
  %incdec.ptr424 = getelementptr inbounds i8, i8* %247, i32 1
  store i8* %incdec.ptr424, i8** %s, align 8
  %248 = load i8, i8* %247, align 1
  %249 = load i8*, i8** %d, align 8
  %incdec.ptr425 = getelementptr inbounds i8, i8* %249, i32 1
  store i8* %incdec.ptr425, i8** %d, align 8
  store i8 %248, i8* %249, align 1
  br label %while.cond

if.end.426:                                       ; preds = %sw.bb
  br label %sw.default

sw.default:                                       ; preds = %if.end.419, %if.end.426
  %250 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings427 = getelementptr inbounds %struct.cop, %struct.cop* %250, i32 0, i32 14
  %251 = load %struct.sv*, %struct.sv** %cop_warnings427, align 8
  %cmp428 = icmp ne %struct.sv* %251, null
  br i1 %cmp428, label %land.lhs.true.430, label %lor.lhs.false.446

land.lhs.true.430:                                ; preds = %sw.default
  %252 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings431 = getelementptr inbounds %struct.cop, %struct.cop* %252, i32 0, i32 14
  %253 = load %struct.sv*, %struct.sv** %cop_warnings431, align 8
  %cmp432 = icmp ne %struct.sv* %253, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 2)
  br i1 %cmp432, label %land.lhs.true.434, label %lor.lhs.false.446

land.lhs.true.434:                                ; preds = %land.lhs.true.430
  %254 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings435 = getelementptr inbounds %struct.cop, %struct.cop* %254, i32 0, i32 14
  %255 = load %struct.sv*, %struct.sv** %cop_warnings435, align 8
  %cmp436 = icmp eq %struct.sv* %255, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 1)
  br i1 %cmp436, label %land.lhs.true.454, label %lor.lhs.false.438

lor.lhs.false.438:                                ; preds = %land.lhs.true.434
  %256 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings439 = getelementptr inbounds %struct.cop, %struct.cop* %256, i32 0, i32 14
  %257 = load %struct.sv*, %struct.sv** %cop_warnings439, align 8
  %sv_any440 = getelementptr inbounds %struct.sv, %struct.sv* %257, i32 0, i32 0
  %258 = load i8*, i8** %sv_any440, align 8
  %259 = bitcast i8* %258 to %struct.xpv*
  %xpv_pv441 = getelementptr inbounds %struct.xpv, %struct.xpv* %259, i32 0, i32 0
  %260 = load i8*, i8** %xpv_pv441, align 8
  %arrayidx442 = getelementptr inbounds i8, i8* %260, i64 3
  %261 = load i8, i8* %arrayidx442, align 1
  %conv443 = sext i8 %261 to i32
  %and444 = and i32 %conv443, 1
  %tobool445 = icmp ne i32 %and444, 0
  br i1 %tobool445, label %land.lhs.true.454, label %lor.lhs.false.446

lor.lhs.false.446:                                ; preds = %lor.lhs.false.438, %land.lhs.true.430, %sw.default
  %262 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings447 = getelementptr inbounds %struct.cop, %struct.cop* %262, i32 0, i32 14
  %263 = load %struct.sv*, %struct.sv** %cop_warnings447, align 8
  %cmp448 = icmp eq %struct.sv* %263, null
  br i1 %cmp448, label %land.lhs.true.450, label %if.end.488

land.lhs.true.450:                                ; preds = %lor.lhs.false.446
  %264 = load i8, i8* @PL_dowarn, align 1
  %conv451 = zext i8 %264 to i32
  %and452 = and i32 %conv451, 1
  %tobool453 = icmp ne i32 %and452, 0
  br i1 %tobool453, label %land.lhs.true.454, label %if.end.488

land.lhs.true.454:                                ; preds = %land.lhs.true.450, %lor.lhs.false.438, %land.lhs.true.434
  %265 = load i8*, i8** %s, align 8
  %266 = load i8, i8* %265, align 1
  %conv455 = sext i8 %266 to i32
  %cmp456 = icmp sge i32 %conv455, 65
  br i1 %cmp456, label %land.lhs.true.458, label %lor.lhs.false.462

land.lhs.true.458:                                ; preds = %land.lhs.true.454
  %267 = load i8*, i8** %s, align 8
  %268 = load i8, i8* %267, align 1
  %conv459 = sext i8 %268 to i32
  %cmp460 = icmp sle i32 %conv459, 90
  br i1 %cmp460, label %land.lhs.true.482, label %lor.lhs.false.462

lor.lhs.false.462:                                ; preds = %land.lhs.true.458, %land.lhs.true.454
  %269 = load i8*, i8** %s, align 8
  %270 = load i8, i8* %269, align 1
  %conv463 = sext i8 %270 to i32
  %cmp464 = icmp sge i32 %conv463, 97
  br i1 %cmp464, label %land.lhs.true.466, label %lor.lhs.false.470

land.lhs.true.466:                                ; preds = %lor.lhs.false.462
  %271 = load i8*, i8** %s, align 8
  %272 = load i8, i8* %271, align 1
  %conv467 = sext i8 %272 to i32
  %cmp468 = icmp sle i32 %conv467, 122
  br i1 %cmp468, label %land.lhs.true.482, label %lor.lhs.false.470

lor.lhs.false.470:                                ; preds = %land.lhs.true.466, %lor.lhs.false.462
  %273 = load i8*, i8** %s, align 8
  %274 = load i8, i8* %273, align 1
  %conv471 = sext i8 %274 to i32
  %cmp472 = icmp sge i32 %conv471, 48
  br i1 %cmp472, label %land.lhs.true.474, label %lor.lhs.false.478

land.lhs.true.474:                                ; preds = %lor.lhs.false.470
  %275 = load i8*, i8** %s, align 8
  %276 = load i8, i8* %275, align 1
  %conv475 = sext i8 %276 to i32
  %cmp476 = icmp sle i32 %conv475, 57
  br i1 %cmp476, label %land.lhs.true.482, label %lor.lhs.false.478

lor.lhs.false.478:                                ; preds = %land.lhs.true.474, %lor.lhs.false.470
  %277 = load i8*, i8** %s, align 8
  %278 = load i8, i8* %277, align 1
  %conv479 = sext i8 %278 to i32
  %cmp480 = icmp eq i32 %conv479, 95
  br i1 %cmp480, label %land.lhs.true.482, label %if.end.488

land.lhs.true.482:                                ; preds = %lor.lhs.false.478, %land.lhs.true.474, %land.lhs.true.466, %land.lhs.true.458
  %279 = load i8*, i8** %s, align 8
  %280 = load i8, i8* %279, align 1
  %conv483 = sext i8 %280 to i32
  %cmp484 = icmp ne i32 %conv483, 95
  br i1 %cmp484, label %if.then.486, label %if.end.488

if.then.486:                                      ; preds = %land.lhs.true.482
  %281 = load i8*, i8** %s, align 8
  %282 = load i8, i8* %281, align 1
  %conv487 = sext i8 %282 to i32
  call void (i32, i8*, ...) @Perl_warner(i32 12, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.165, i32 0, i32 0), i32 %conv487)
  br label %if.end.488

if.end.488:                                       ; preds = %if.then.486, %land.lhs.true.482, %lor.lhs.false.478, %land.lhs.true.450, %lor.lhs.false.446
  br label %default_action

sw.bb.489:                                        ; preds = %if.end.419, %if.end.419, %if.end.419, %if.end.419, %if.end.419, %if.end.419, %if.end.419, %if.end.419
  store i32 0, i32* %flags, align 4
  store i64 3, i64* %len, align 8
  %283 = load i8*, i8** %s, align 8
  %call490 = call i64 @Perl_grok_oct(i8* %283, i64* %len, i32* %flags, double* null)
  store i64 %call490, i64* %uv, align 8
  %284 = load i64, i64* %len, align 8
  %285 = load i8*, i8** %s, align 8
  %add.ptr491 = getelementptr inbounds i8, i8* %285, i64 %284
  store i8* %add.ptr491, i8** %s, align 8
  br label %NUM_ESCAPE_INSERT

sw.bb.492:                                        ; preds = %if.end.419
  %286 = load i8*, i8** %s, align 8
  %incdec.ptr493 = getelementptr inbounds i8, i8* %286, i32 1
  store i8* %incdec.ptr493, i8** %s, align 8
  %287 = load i8*, i8** %s, align 8
  %288 = load i8, i8* %287, align 1
  %conv494 = sext i8 %288 to i32
  %cmp495 = icmp eq i32 %conv494, 123
  br i1 %cmp495, label %if.then.497, label %if.else.512

if.then.497:                                      ; preds = %sw.bb.492
  %289 = load i8*, i8** %s, align 8
  %call499 = call i8* @strchr(i8* %289, i32 125)
  store i8* %call499, i8** %e498, align 8
  store i32 3, i32* %flags500, align 4
  %290 = load i8*, i8** %s, align 8
  %incdec.ptr502 = getelementptr inbounds i8, i8* %290, i32 1
  store i8* %incdec.ptr502, i8** %s, align 8
  %291 = load i8*, i8** %e498, align 8
  %tobool503 = icmp ne i8* %291, null
  br i1 %tobool503, label %if.end.506, label %if.then.504

if.then.504:                                      ; preds = %if.then.497
  %call505 = call i32 @Perl_yyerror(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.166, i32 0, i32 0))
  br label %while.cond

if.end.506:                                       ; preds = %if.then.497
  %292 = load i8*, i8** %e498, align 8
  %293 = load i8*, i8** %s, align 8
  %sub.ptr.lhs.cast507 = ptrtoint i8* %292 to i64
  %sub.ptr.rhs.cast508 = ptrtoint i8* %293 to i64
  %sub.ptr.sub509 = sub i64 %sub.ptr.lhs.cast507, %sub.ptr.rhs.cast508
  store i64 %sub.ptr.sub509, i64* %len501, align 8
  %294 = load i8*, i8** %s, align 8
  %call510 = call i64 @Perl_grok_hex(i8* %294, i64* %len501, i32* %flags500, double* null)
  store i64 %call510, i64* %uv, align 8
  %295 = load i8*, i8** %e498, align 8
  %add.ptr511 = getelementptr inbounds i8, i8* %295, i64 1
  store i8* %add.ptr511, i8** %s, align 8
  br label %if.end.517

if.else.512:                                      ; preds = %sw.bb.492
  store i64 2, i64* %len513, align 8
  store i32 2, i32* %flags514, align 4
  %296 = load i8*, i8** %s, align 8
  %call515 = call i64 @Perl_grok_hex(i8* %296, i64* %len513, i32* %flags514, double* null)
  store i64 %call515, i64* %uv, align 8
  %297 = load i64, i64* %len513, align 8
  %298 = load i8*, i8** %s, align 8
  %add.ptr516 = getelementptr inbounds i8, i8* %298, i64 %297
  store i8* %add.ptr516, i8** %s, align 8
  br label %if.end.517

if.end.517:                                       ; preds = %if.else.512, %if.end.506
  br label %NUM_ESCAPE_INSERT

NUM_ESCAPE_INSERT:                                ; preds = %if.then.654, %if.end.517, %sw.bb.489
  %299 = load i64, i64* %uv, align 8
  %cmp518 = icmp ult i64 %299, 128
  br i1 %cmp518, label %if.else.623, label %if.then.520

if.then.520:                                      ; preds = %NUM_ESCAPE_INSERT
  %300 = load i32, i32* %has_utf8, align 4
  %tobool521 = icmp ne i32 %300, 0
  br i1 %tobool521, label %if.end.600, label %land.lhs.true.522

land.lhs.true.522:                                ; preds = %if.then.520
  %301 = load i64, i64* %uv, align 8
  %cmp523 = icmp ugt i64 %301, 255
  br i1 %cmp523, label %if.then.525, label %if.end.600

if.then.525:                                      ; preds = %land.lhs.true.522
  store i32 0, i32* %hicount, align 4
  %302 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any527 = getelementptr inbounds %struct.sv, %struct.sv* %302, i32 0, i32 0
  %303 = load i8*, i8** %sv_any527, align 8
  %304 = bitcast i8* %303 to %struct.xpv*
  %xpv_pv528 = getelementptr inbounds %struct.xpv, %struct.xpv* %304, i32 0, i32 0
  %305 = load i8*, i8** %xpv_pv528, align 8
  store i8* %305, i8** %c526, align 8
  br label %for.cond.529

for.cond.529:                                     ; preds = %for.inc.539, %if.then.525
  %306 = load i8*, i8** %c526, align 8
  %307 = load i8*, i8** %d, align 8
  %cmp530 = icmp ult i8* %306, %307
  br i1 %cmp530, label %for.body.532, label %for.end.541

for.body.532:                                     ; preds = %for.cond.529
  %308 = load i8*, i8** %c526, align 8
  %309 = load i8, i8* %308, align 1
  %conv533 = zext i8 %309 to i64
  %cmp534 = icmp ult i64 %conv533, 128
  br i1 %cmp534, label %if.end.538, label %if.then.536

if.then.536:                                      ; preds = %for.body.532
  %310 = load i32, i32* %hicount, align 4
  %inc537 = add nsw i32 %310, 1
  store i32 %inc537, i32* %hicount, align 4
  br label %if.end.538

if.end.538:                                       ; preds = %if.then.536, %for.body.532
  br label %for.inc.539

for.inc.539:                                      ; preds = %if.end.538
  %311 = load i8*, i8** %c526, align 8
  %incdec.ptr540 = getelementptr inbounds i8, i8* %311, i32 1
  store i8* %incdec.ptr540, i8** %c526, align 8
  br label %for.cond.529

for.end.541:                                      ; preds = %for.cond.529
  %312 = load i32, i32* %hicount, align 4
  %tobool542 = icmp ne i32 %312, 0
  br i1 %tobool542, label %if.then.543, label %if.end.599

if.then.543:                                      ; preds = %for.end.541
  %313 = load i8*, i8** %d, align 8
  %314 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any544 = getelementptr inbounds %struct.sv, %struct.sv* %314, i32 0, i32 0
  %315 = load i8*, i8** %sv_any544, align 8
  %316 = bitcast i8* %315 to %struct.xpv*
  %xpv_pv545 = getelementptr inbounds %struct.xpv, %struct.xpv* %316, i32 0, i32 0
  %317 = load i8*, i8** %xpv_pv545, align 8
  %sub.ptr.lhs.cast546 = ptrtoint i8* %313 to i64
  %sub.ptr.rhs.cast547 = ptrtoint i8* %317 to i64
  %sub.ptr.sub548 = sub i64 %sub.ptr.lhs.cast546, %sub.ptr.rhs.cast547
  store i64 %sub.ptr.sub548, i64* %offset, align 8
  %318 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any549 = getelementptr inbounds %struct.sv, %struct.sv* %318, i32 0, i32 0
  %319 = load i8*, i8** %sv_any549, align 8
  %320 = bitcast i8* %319 to %struct.xpv*
  %xpv_len550 = getelementptr inbounds %struct.xpv, %struct.xpv* %320, i32 0, i32 2
  %321 = load i64, i64* %xpv_len550, align 8
  %322 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any551 = getelementptr inbounds %struct.sv, %struct.sv* %322, i32 0, i32 0
  %323 = load i8*, i8** %sv_any551, align 8
  %324 = bitcast i8* %323 to %struct.xpv*
  %xpv_len552 = getelementptr inbounds %struct.xpv, %struct.xpv* %324, i32 0, i32 2
  %325 = load i64, i64* %xpv_len552, align 8
  %326 = load i32, i32* %hicount, align 4
  %conv553 = sext i32 %326 to i64
  %add554 = add i64 %325, %conv553
  %add555 = add i64 %add554, 1
  %cmp556 = icmp ult i64 %321, %add555
  br i1 %cmp556, label %cond.true.558, label %cond.false.565

cond.true.558:                                    ; preds = %if.then.543
  %327 = load %struct.sv*, %struct.sv** %sv, align 8
  %328 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any559 = getelementptr inbounds %struct.sv, %struct.sv* %328, i32 0, i32 0
  %329 = load i8*, i8** %sv_any559, align 8
  %330 = bitcast i8* %329 to %struct.xpv*
  %xpv_len560 = getelementptr inbounds %struct.xpv, %struct.xpv* %330, i32 0, i32 2
  %331 = load i64, i64* %xpv_len560, align 8
  %332 = load i32, i32* %hicount, align 4
  %conv561 = sext i32 %332 to i64
  %add562 = add i64 %331, %conv561
  %add563 = add i64 %add562, 1
  %call564 = call i8* @Perl_sv_grow(%struct.sv* %327, i64 %add563)
  br label %cond.end.568

cond.false.565:                                   ; preds = %if.then.543
  %333 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any566 = getelementptr inbounds %struct.sv, %struct.sv* %333, i32 0, i32 0
  %334 = load i8*, i8** %sv_any566, align 8
  %335 = bitcast i8* %334 to %struct.xpv*
  %xpv_pv567 = getelementptr inbounds %struct.xpv, %struct.xpv* %335, i32 0, i32 0
  %336 = load i8*, i8** %xpv_pv567, align 8
  br label %cond.end.568

cond.end.568:                                     ; preds = %cond.false.565, %cond.true.558
  %cond569 = phi i8* [ %call564, %cond.true.558 ], [ %336, %cond.false.565 ]
  %337 = load i64, i64* %offset, align 8
  %add.ptr570 = getelementptr inbounds i8, i8* %cond569, i64 %337
  store i8* %add.ptr570, i8** %d, align 8
  %338 = load i8*, i8** %d, align 8
  %add.ptr571 = getelementptr inbounds i8, i8* %338, i64 -1
  store i8* %add.ptr571, i8** %src, align 8
  %339 = load i8*, i8** %src, align 8
  %340 = load i32, i32* %hicount, align 4
  %idx.ext572 = sext i32 %340 to i64
  %add.ptr573 = getelementptr inbounds i8, i8* %339, i64 %idx.ext572
  store i8* %add.ptr573, i8** %dst, align 8
  %341 = load i32, i32* %hicount, align 4
  %342 = load i8*, i8** %d, align 8
  %idx.ext574 = sext i32 %341 to i64
  %add.ptr575 = getelementptr inbounds i8, i8* %342, i64 %idx.ext574
  store i8* %add.ptr575, i8** %d, align 8
  br label %while.cond.576

while.cond.576:                                   ; preds = %if.end.596, %cond.end.568
  %343 = load i8*, i8** %src, align 8
  %344 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any577 = getelementptr inbounds %struct.sv, %struct.sv* %344, i32 0, i32 0
  %345 = load i8*, i8** %sv_any577, align 8
  %346 = bitcast i8* %345 to %struct.xpv*
  %xpv_pv578 = getelementptr inbounds %struct.xpv, %struct.xpv* %346, i32 0, i32 0
  %347 = load i8*, i8** %xpv_pv578, align 8
  %cmp579 = icmp uge i8* %343, %347
  br i1 %cmp579, label %while.body.581, label %while.end.598

while.body.581:                                   ; preds = %while.cond.576
  %348 = load i8*, i8** %src, align 8
  %349 = load i8, i8* %348, align 1
  %conv582 = zext i8 %349 to i64
  %cmp583 = icmp ult i64 %conv582, 128
  br i1 %cmp583, label %if.else.594, label %if.then.585

if.then.585:                                      ; preds = %while.body.581
  %350 = load i8*, i8** %src, align 8
  %351 = load i8, i8* %350, align 1
  store i8 %351, i8* %ch, align 1
  %352 = load i8, i8* %ch, align 1
  %conv586 = zext i8 %352 to i32
  %and587 = and i32 %conv586, 63
  %or = or i32 %and587, 128
  %conv588 = trunc i32 %or to i8
  %353 = load i8*, i8** %dst, align 8
  %incdec.ptr589 = getelementptr inbounds i8, i8* %353, i32 -1
  store i8* %incdec.ptr589, i8** %dst, align 8
  store i8 %conv588, i8* %353, align 1
  %354 = load i8, i8* %ch, align 1
  %conv590 = zext i8 %354 to i32
  %shr = ashr i32 %conv590, 6
  %or591 = or i32 %shr, 8128
  %conv592 = trunc i32 %or591 to i8
  %355 = load i8*, i8** %dst, align 8
  %incdec.ptr593 = getelementptr inbounds i8, i8* %355, i32 -1
  store i8* %incdec.ptr593, i8** %dst, align 8
  store i8 %conv592, i8* %355, align 1
  br label %if.end.596

if.else.594:                                      ; preds = %while.body.581
  %356 = load i8*, i8** %src, align 8
  %357 = load i8, i8* %356, align 1
  %358 = load i8*, i8** %dst, align 8
  %incdec.ptr595 = getelementptr inbounds i8, i8* %358, i32 -1
  store i8* %incdec.ptr595, i8** %dst, align 8
  store i8 %357, i8* %358, align 1
  br label %if.end.596

if.end.596:                                       ; preds = %if.else.594, %if.then.585
  %359 = load i8*, i8** %src, align 8
  %incdec.ptr597 = getelementptr inbounds i8, i8* %359, i32 -1
  store i8* %incdec.ptr597, i8** %src, align 8
  br label %while.cond.576

while.end.598:                                    ; preds = %while.cond.576
  br label %if.end.599

if.end.599:                                       ; preds = %while.end.598, %for.end.541
  br label %if.end.600

if.end.600:                                       ; preds = %if.end.599, %land.lhs.true.522, %if.then.520
  %360 = load i32, i32* %has_utf8, align 4
  %tobool601 = icmp ne i32 %360, 0
  br i1 %tobool601, label %if.then.605, label %lor.lhs.false.602

lor.lhs.false.602:                                ; preds = %if.end.600
  %361 = load i64, i64* %uv, align 8
  %cmp603 = icmp ugt i64 %361, 255
  br i1 %cmp603, label %if.then.605, label %if.else.619

if.then.605:                                      ; preds = %lor.lhs.false.602, %if.end.600
  %362 = load i8*, i8** %d, align 8
  %363 = load i64, i64* %uv, align 8
  %call606 = call i8* @Perl_uvuni_to_utf8(i8* %362, i64 %363)
  store i8* %call606, i8** %d, align 8
  store i32 1, i32* %has_utf8, align 4
  %364 = load i32, i32* @PL_lex_inwhat, align 4
  %cmp607 = icmp eq i32 %364, 35
  br i1 %cmp607, label %land.lhs.true.609, label %if.end.618

land.lhs.true.609:                                ; preds = %if.then.605
  %365 = load %struct.op*, %struct.op** getelementptr inbounds (%struct._sublex_info, %struct._sublex_info* @PL_sublex_info, i32 0, i32 2), align 8
  %tobool610 = icmp ne %struct.op* %365, null
  br i1 %tobool610, label %if.then.611, label %if.end.618

if.then.611:                                      ; preds = %land.lhs.true.609
  %366 = load %struct.sv*, %struct.sv** @PL_lex_repl, align 8
  %tobool612 = icmp ne %struct.sv* %366, null
  %cond613 = select i1 %tobool612, i32 1, i32 2
  %367 = load %struct.op*, %struct.op** getelementptr inbounds (%struct._sublex_info, %struct._sublex_info* @PL_sublex_info, i32 0, i32 2), align 8
  %op_private614 = getelementptr inbounds %struct.op, %struct.op* %367, i32 0, i32 7
  %368 = load i8, i8* %op_private614, align 1
  %conv615 = zext i8 %368 to i32
  %or616 = or i32 %conv615, %cond613
  %conv617 = trunc i32 %or616 to i8
  store i8 %conv617, i8* %op_private614, align 1
  br label %if.end.618

if.end.618:                                       ; preds = %if.then.611, %land.lhs.true.609, %if.then.605
  br label %if.end.622

if.else.619:                                      ; preds = %lor.lhs.false.602
  %369 = load i64, i64* %uv, align 8
  %conv620 = trunc i64 %369 to i8
  %370 = load i8*, i8** %d, align 8
  %incdec.ptr621 = getelementptr inbounds i8, i8* %370, i32 1
  store i8* %incdec.ptr621, i8** %d, align 8
  store i8 %conv620, i8* %370, align 1
  br label %if.end.622

if.end.622:                                       ; preds = %if.else.619, %if.end.618
  br label %if.end.626

if.else.623:                                      ; preds = %NUM_ESCAPE_INSERT
  %371 = load i64, i64* %uv, align 8
  %conv624 = trunc i64 %371 to i8
  %372 = load i8*, i8** %d, align 8
  %incdec.ptr625 = getelementptr inbounds i8, i8* %372, i32 1
  store i8* %incdec.ptr625, i8** %d, align 8
  store i8 %conv624, i8* %372, align 1
  br label %if.end.626

if.end.626:                                       ; preds = %if.else.623, %if.end.622
  br label %while.cond

sw.bb.627:                                        ; preds = %if.end.419
  %373 = load i8*, i8** %s, align 8
  %incdec.ptr628 = getelementptr inbounds i8, i8* %373, i32 1
  store i8* %incdec.ptr628, i8** %s, align 8
  %374 = load i8*, i8** %s, align 8
  %375 = load i8, i8* %374, align 1
  %conv629 = sext i8 %375 to i32
  %cmp630 = icmp eq i32 %conv629, 123
  br i1 %cmp630, label %if.then.632, label %if.else.770

if.then.632:                                      ; preds = %sw.bb.627
  %376 = load i8*, i8** %s, align 8
  %call634 = call i8* @strchr(i8* %376, i32 125)
  store i8* %call634, i8** %e633, align 8
  %377 = load i8*, i8** %e633, align 8
  %tobool636 = icmp ne i8* %377, null
  br i1 %tobool636, label %if.end.640, label %if.then.637

if.then.637:                                      ; preds = %if.then.632
  %call638 = call i32 @Perl_yyerror(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.167, i32 0, i32 0))
  %378 = load i8*, i8** %s, align 8
  %add.ptr639 = getelementptr inbounds i8, i8* %378, i64 -1
  store i8* %add.ptr639, i8** %e633, align 8
  br label %cont_scan

if.end.640:                                       ; preds = %if.then.632
  %379 = load i8*, i8** %e633, align 8
  %380 = load i8*, i8** %s, align 8
  %add.ptr641 = getelementptr inbounds i8, i8* %380, i64 2
  %cmp642 = icmp ugt i8* %379, %add.ptr641
  br i1 %cmp642, label %land.lhs.true.644, label %if.end.662

land.lhs.true.644:                                ; preds = %if.end.640
  %381 = load i8*, i8** %s, align 8
  %arrayidx645 = getelementptr inbounds i8, i8* %381, i64 1
  %382 = load i8, i8* %arrayidx645, align 1
  %conv646 = sext i8 %382 to i32
  %cmp647 = icmp eq i32 %conv646, 85
  br i1 %cmp647, label %land.lhs.true.649, label %if.end.662

land.lhs.true.649:                                ; preds = %land.lhs.true.644
  %383 = load i8*, i8** %s, align 8
  %arrayidx650 = getelementptr inbounds i8, i8* %383, i64 2
  %384 = load i8, i8* %arrayidx650, align 1
  %conv651 = sext i8 %384 to i32
  %cmp652 = icmp eq i32 %conv651, 43
  br i1 %cmp652, label %if.then.654, label %if.end.662

if.then.654:                                      ; preds = %land.lhs.true.649
  store i32 3, i32* %flags655, align 4
  %385 = load i8*, i8** %s, align 8
  %add.ptr656 = getelementptr inbounds i8, i8* %385, i64 3
  store i8* %add.ptr656, i8** %s, align 8
  %386 = load i8*, i8** %e633, align 8
  %387 = load i8*, i8** %s, align 8
  %sub.ptr.lhs.cast657 = ptrtoint i8* %386 to i64
  %sub.ptr.rhs.cast658 = ptrtoint i8* %387 to i64
  %sub.ptr.sub659 = sub i64 %sub.ptr.lhs.cast657, %sub.ptr.rhs.cast658
  store i64 %sub.ptr.sub659, i64* %len635, align 8
  %388 = load i8*, i8** %s, align 8
  %call660 = call i64 @Perl_grok_hex(i8* %388, i64* %len635, i32* %flags655, double* null)
  store i64 %call660, i64* %uv, align 8
  %389 = load i8*, i8** %e633, align 8
  %add.ptr661 = getelementptr inbounds i8, i8* %389, i64 1
  store i8* %add.ptr661, i8** %s, align 8
  br label %NUM_ESCAPE_INSERT

if.end.662:                                       ; preds = %land.lhs.true.649, %land.lhs.true.644, %if.end.640
  %390 = load i8*, i8** %s, align 8
  %add.ptr663 = getelementptr inbounds i8, i8* %390, i64 1
  %391 = load i8*, i8** %e633, align 8
  %392 = load i8*, i8** %s, align 8
  %sub.ptr.lhs.cast664 = ptrtoint i8* %391 to i64
  %sub.ptr.rhs.cast665 = ptrtoint i8* %392 to i64
  %sub.ptr.sub666 = sub i64 %sub.ptr.lhs.cast664, %sub.ptr.rhs.cast665
  %sub = sub nsw i64 %sub.ptr.sub666, 1
  %call667 = call %struct.sv* @Perl_newSVpvn(i8* %add.ptr663, i64 %sub)
  store %struct.sv* %call667, %struct.sv** %res, align 8
  %393 = load %struct.sv*, %struct.sv** %res, align 8
  %call668 = call %struct.sv* @S_new_constant(i8* null, i64 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.168, i32 0, i32 0), %struct.sv* %393, %struct.sv* null, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.169, i32 0, i32 0))
  store %struct.sv* %call668, %struct.sv** %res, align 8
  %394 = load i32, i32* %has_utf8, align 4
  %tobool669 = icmp ne i32 %394, 0
  br i1 %tobool669, label %if.then.670, label %if.end.672

if.then.670:                                      ; preds = %if.end.662
  %395 = load %struct.sv*, %struct.sv** %res, align 8
  %call671 = call i64 @Perl_sv_utf8_upgrade_flags(%struct.sv* %395, i32 2)
  br label %if.end.672

if.end.672:                                       ; preds = %if.then.670, %if.end.662
  %396 = load %struct.sv*, %struct.sv** %res, align 8
  %sv_flags673 = getelementptr inbounds %struct.sv, %struct.sv* %396, i32 0, i32 2
  %397 = load i32, i32* %sv_flags673, align 4
  %and674 = and i32 %397, 262144
  %cmp675 = icmp eq i32 %and674, 262144
  br i1 %cmp675, label %cond.true.677, label %cond.false.681

cond.true.677:                                    ; preds = %if.end.672
  %398 = load %struct.sv*, %struct.sv** %res, align 8
  %sv_any678 = getelementptr inbounds %struct.sv, %struct.sv* %398, i32 0, i32 0
  %399 = load i8*, i8** %sv_any678, align 8
  %400 = bitcast i8* %399 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %400, i32 0, i32 1
  %401 = load i64, i64* %xpv_cur, align 8
  store i64 %401, i64* %len635, align 8
  %402 = load %struct.sv*, %struct.sv** %res, align 8
  %sv_any679 = getelementptr inbounds %struct.sv, %struct.sv* %402, i32 0, i32 0
  %403 = load i8*, i8** %sv_any679, align 8
  %404 = bitcast i8* %403 to %struct.xpv*
  %xpv_pv680 = getelementptr inbounds %struct.xpv, %struct.xpv* %404, i32 0, i32 0
  %405 = load i8*, i8** %xpv_pv680, align 8
  br label %cond.end.683

cond.false.681:                                   ; preds = %if.end.672
  %406 = load %struct.sv*, %struct.sv** %res, align 8
  %call682 = call i8* @Perl_sv_2pv_flags(%struct.sv* %406, i64* %len635, i32 2)
  br label %cond.end.683

cond.end.683:                                     ; preds = %cond.false.681, %cond.true.677
  %cond684 = phi i8* [ %405, %cond.true.677 ], [ %call682, %cond.false.681 ]
  store i8* %cond684, i8** %str, align 8
  %407 = load i32, i32* %has_utf8, align 4
  %tobool685 = icmp ne i32 %407, 0
  br i1 %tobool685, label %if.end.723, label %land.lhs.true.686

land.lhs.true.686:                                ; preds = %cond.end.683
  %408 = load %struct.sv*, %struct.sv** %res, align 8
  %sv_flags687 = getelementptr inbounds %struct.sv, %struct.sv* %408, i32 0, i32 2
  %409 = load i32, i32* %sv_flags687, align 4
  %and688 = and i32 %409, 536870912
  %tobool689 = icmp ne i32 %and688, 0
  br i1 %tobool689, label %if.then.690, label %if.end.723

if.then.690:                                      ; preds = %land.lhs.true.686
  %410 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any691 = getelementptr inbounds %struct.sv, %struct.sv* %410, i32 0, i32 0
  %411 = load i8*, i8** %sv_any691, align 8
  %412 = bitcast i8* %411 to %struct.xpv*
  %xpv_pv692 = getelementptr inbounds %struct.xpv, %struct.xpv* %412, i32 0, i32 0
  %413 = load i8*, i8** %xpv_pv692, align 8
  store i8* %413, i8** %ostart, align 8
  %414 = load i8*, i8** %d, align 8
  %415 = load i8*, i8** %ostart, align 8
  %sub.ptr.lhs.cast693 = ptrtoint i8* %414 to i64
  %sub.ptr.rhs.cast694 = ptrtoint i8* %415 to i64
  %sub.ptr.sub695 = sub i64 %sub.ptr.lhs.cast693, %sub.ptr.rhs.cast694
  %416 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any696 = getelementptr inbounds %struct.sv, %struct.sv* %416, i32 0, i32 0
  %417 = load i8*, i8** %sv_any696, align 8
  %418 = bitcast i8* %417 to %struct.xpv*
  %xpv_cur697 = getelementptr inbounds %struct.xpv, %struct.xpv* %418, i32 0, i32 1
  store i64 %sub.ptr.sub695, i64* %xpv_cur697, align 8
  store i64 %sub.ptr.sub695, i64* %tmp
  %419 = load i64, i64* %tmp
  %420 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags698 = getelementptr inbounds %struct.sv, %struct.sv* %420, i32 0, i32 2
  %421 = load i32, i32* %sv_flags698, align 4
  %or699 = or i32 %421, 67371008
  store i32 %or699, i32* %sv_flags698, align 4
  %422 = load i8*, i8** %d, align 8
  store i8 0, i8* %422, align 1
  %423 = load %struct.sv*, %struct.sv** %sv, align 8
  %call700 = call i64 @Perl_sv_utf8_upgrade_flags(%struct.sv* %423, i32 2)
  %424 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any701 = getelementptr inbounds %struct.sv, %struct.sv* %424, i32 0, i32 0
  %425 = load i8*, i8** %sv_any701, align 8
  %426 = bitcast i8* %425 to %struct.xpv*
  %xpv_len702 = getelementptr inbounds %struct.xpv, %struct.xpv* %426, i32 0, i32 2
  %427 = load i64, i64* %xpv_len702, align 8
  %428 = load i8*, i8** %send, align 8
  %429 = load i8*, i8** %start.addr, align 8
  %sub.ptr.lhs.cast703 = ptrtoint i8* %428 to i64
  %sub.ptr.rhs.cast704 = ptrtoint i8* %429 to i64
  %sub.ptr.sub705 = sub i64 %sub.ptr.lhs.cast703, %sub.ptr.rhs.cast704
  %cmp706 = icmp ult i64 %427, %sub.ptr.sub705
  br i1 %cmp706, label %cond.true.708, label %cond.false.713

cond.true.708:                                    ; preds = %if.then.690
  %430 = load %struct.sv*, %struct.sv** %sv, align 8
  %431 = load i8*, i8** %send, align 8
  %432 = load i8*, i8** %start.addr, align 8
  %sub.ptr.lhs.cast709 = ptrtoint i8* %431 to i64
  %sub.ptr.rhs.cast710 = ptrtoint i8* %432 to i64
  %sub.ptr.sub711 = sub i64 %sub.ptr.lhs.cast709, %sub.ptr.rhs.cast710
  %call712 = call i8* @Perl_sv_grow(%struct.sv* %430, i64 %sub.ptr.sub711)
  br label %cond.end.716

cond.false.713:                                   ; preds = %if.then.690
  %433 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any714 = getelementptr inbounds %struct.sv, %struct.sv* %433, i32 0, i32 0
  %434 = load i8*, i8** %sv_any714, align 8
  %435 = bitcast i8* %434 to %struct.xpv*
  %xpv_pv715 = getelementptr inbounds %struct.xpv, %struct.xpv* %435, i32 0, i32 0
  %436 = load i8*, i8** %xpv_pv715, align 8
  br label %cond.end.716

cond.end.716:                                     ; preds = %cond.false.713, %cond.true.708
  %cond717 = phi i8* [ %call712, %cond.true.708 ], [ %436, %cond.false.713 ]
  %437 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any718 = getelementptr inbounds %struct.sv, %struct.sv* %437, i32 0, i32 0
  %438 = load i8*, i8** %sv_any718, align 8
  %439 = bitcast i8* %438 to %struct.xpv*
  %xpv_pv719 = getelementptr inbounds %struct.xpv, %struct.xpv* %439, i32 0, i32 0
  %440 = load i8*, i8** %xpv_pv719, align 8
  %441 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any720 = getelementptr inbounds %struct.sv, %struct.sv* %441, i32 0, i32 0
  %442 = load i8*, i8** %sv_any720, align 8
  %443 = bitcast i8* %442 to %struct.xpv*
  %xpv_cur721 = getelementptr inbounds %struct.xpv, %struct.xpv* %443, i32 0, i32 1
  %444 = load i64, i64* %xpv_cur721, align 8
  %add.ptr722 = getelementptr inbounds i8, i8* %440, i64 %444
  store i8* %add.ptr722, i8** %d, align 8
  store i32 1, i32* %has_utf8, align 4
  br label %if.end.723

if.end.723:                                       ; preds = %cond.end.716, %land.lhs.true.686, %cond.end.683
  %445 = load i64, i64* %len635, align 8
  %446 = load i8*, i8** %e633, align 8
  %447 = load i8*, i8** %s, align 8
  %sub.ptr.lhs.cast724 = ptrtoint i8* %446 to i64
  %sub.ptr.rhs.cast725 = ptrtoint i8* %447 to i64
  %sub.ptr.sub726 = sub i64 %sub.ptr.lhs.cast724, %sub.ptr.rhs.cast725
  %add727 = add nsw i64 %sub.ptr.sub726, 4
  %cmp728 = icmp ugt i64 %445, %add727
  br i1 %cmp728, label %if.then.730, label %if.end.767

if.then.730:                                      ; preds = %if.end.723
  %448 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any732 = getelementptr inbounds %struct.sv, %struct.sv* %448, i32 0, i32 0
  %449 = load i8*, i8** %sv_any732, align 8
  %450 = bitcast i8* %449 to %struct.xpv*
  %xpv_pv733 = getelementptr inbounds %struct.xpv, %struct.xpv* %450, i32 0, i32 0
  %451 = load i8*, i8** %xpv_pv733, align 8
  store i8* %451, i8** %odest, align 8
  %452 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any734 = getelementptr inbounds %struct.sv, %struct.sv* %452, i32 0, i32 0
  %453 = load i8*, i8** %sv_any734, align 8
  %454 = bitcast i8* %453 to %struct.xpv*
  %xpv_len735 = getelementptr inbounds %struct.xpv, %struct.xpv* %454, i32 0, i32 2
  %455 = load i64, i64* %xpv_len735, align 8
  %456 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any736 = getelementptr inbounds %struct.sv, %struct.sv* %456, i32 0, i32 0
  %457 = load i8*, i8** %sv_any736, align 8
  %458 = bitcast i8* %457 to %struct.xpv*
  %xpv_len737 = getelementptr inbounds %struct.xpv, %struct.xpv* %458, i32 0, i32 2
  %459 = load i64, i64* %xpv_len737, align 8
  %460 = load i64, i64* %len635, align 8
  %add738 = add i64 %459, %460
  %461 = load i8*, i8** %e633, align 8
  %462 = load i8*, i8** %s, align 8
  %sub.ptr.lhs.cast739 = ptrtoint i8* %461 to i64
  %sub.ptr.rhs.cast740 = ptrtoint i8* %462 to i64
  %sub.ptr.sub741 = sub i64 %sub.ptr.lhs.cast739, %sub.ptr.rhs.cast740
  %add742 = add nsw i64 %sub.ptr.sub741, 4
  %sub743 = sub i64 %add738, %add742
  %cmp744 = icmp ult i64 %455, %sub743
  br i1 %cmp744, label %cond.true.746, label %cond.false.756

cond.true.746:                                    ; preds = %if.then.730
  %463 = load %struct.sv*, %struct.sv** %sv, align 8
  %464 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any747 = getelementptr inbounds %struct.sv, %struct.sv* %464, i32 0, i32 0
  %465 = load i8*, i8** %sv_any747, align 8
  %466 = bitcast i8* %465 to %struct.xpv*
  %xpv_len748 = getelementptr inbounds %struct.xpv, %struct.xpv* %466, i32 0, i32 2
  %467 = load i64, i64* %xpv_len748, align 8
  %468 = load i64, i64* %len635, align 8
  %add749 = add i64 %467, %468
  %469 = load i8*, i8** %e633, align 8
  %470 = load i8*, i8** %s, align 8
  %sub.ptr.lhs.cast750 = ptrtoint i8* %469 to i64
  %sub.ptr.rhs.cast751 = ptrtoint i8* %470 to i64
  %sub.ptr.sub752 = sub i64 %sub.ptr.lhs.cast750, %sub.ptr.rhs.cast751
  %add753 = add nsw i64 %sub.ptr.sub752, 4
  %sub754 = sub i64 %add749, %add753
  %call755 = call i8* @Perl_sv_grow(%struct.sv* %463, i64 %sub754)
  br label %cond.end.759

cond.false.756:                                   ; preds = %if.then.730
  %471 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any757 = getelementptr inbounds %struct.sv, %struct.sv* %471, i32 0, i32 0
  %472 = load i8*, i8** %sv_any757, align 8
  %473 = bitcast i8* %472 to %struct.xpv*
  %xpv_pv758 = getelementptr inbounds %struct.xpv, %struct.xpv* %473, i32 0, i32 0
  %474 = load i8*, i8** %xpv_pv758, align 8
  br label %cond.end.759

cond.end.759:                                     ; preds = %cond.false.756, %cond.true.746
  %cond760 = phi i8* [ %call755, %cond.true.746 ], [ %474, %cond.false.756 ]
  %475 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any761 = getelementptr inbounds %struct.sv, %struct.sv* %475, i32 0, i32 0
  %476 = load i8*, i8** %sv_any761, align 8
  %477 = bitcast i8* %476 to %struct.xpv*
  %xpv_pv762 = getelementptr inbounds %struct.xpv, %struct.xpv* %477, i32 0, i32 0
  %478 = load i8*, i8** %xpv_pv762, align 8
  %479 = load i8*, i8** %d, align 8
  %480 = load i8*, i8** %odest, align 8
  %sub.ptr.lhs.cast763 = ptrtoint i8* %479 to i64
  %sub.ptr.rhs.cast764 = ptrtoint i8* %480 to i64
  %sub.ptr.sub765 = sub i64 %sub.ptr.lhs.cast763, %sub.ptr.rhs.cast764
  %add.ptr766 = getelementptr inbounds i8, i8* %478, i64 %sub.ptr.sub765
  store i8* %add.ptr766, i8** %d, align 8
  br label %if.end.767

if.end.767:                                       ; preds = %cond.end.759, %if.end.723
  %481 = load i8*, i8** %d, align 8
  %482 = load i8*, i8** %str, align 8
  %483 = load i64, i64* %len635, align 8
  %mul = mul i64 %483, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %481, i8* %482, i64 %mul, i32 1, i1 false)
  %484 = load i64, i64* %len635, align 8
  %485 = load i8*, i8** %d, align 8
  %add.ptr768 = getelementptr inbounds i8, i8* %485, i64 %484
  store i8* %add.ptr768, i8** %d, align 8
  %486 = load %struct.sv*, %struct.sv** %res, align 8
  call void @Perl_sv_free(%struct.sv* %486)
  br label %cont_scan

cont_scan:                                        ; preds = %if.end.767, %if.then.637
  %487 = load i8*, i8** %e633, align 8
  %add.ptr769 = getelementptr inbounds i8, i8* %487, i64 1
  store i8* %add.ptr769, i8** %s, align 8
  br label %if.end.772

if.else.770:                                      ; preds = %sw.bb.627
  %call771 = call i32 @Perl_yyerror(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.170, i32 0, i32 0))
  br label %if.end.772

if.end.772:                                       ; preds = %if.else.770, %cont_scan
  br label %while.cond

sw.bb.773:                                        ; preds = %if.end.419
  %488 = load i8*, i8** %s, align 8
  %incdec.ptr774 = getelementptr inbounds i8, i8* %488, i32 1
  store i8* %incdec.ptr774, i8** %s, align 8
  %489 = load i8*, i8** %s, align 8
  %490 = load i8*, i8** %send, align 8
  %cmp775 = icmp ult i8* %489, %490
  br i1 %cmp775, label %if.then.777, label %if.else.797

if.then.777:                                      ; preds = %sw.bb.773
  %491 = load i8*, i8** %s, align 8
  %incdec.ptr780 = getelementptr inbounds i8, i8* %491, i32 1
  store i8* %incdec.ptr780, i8** %s, align 8
  %492 = load i8, i8* %491, align 1
  store i8 %492, i8* %c779, align 1
  %493 = load i8, i8* %c779, align 1
  %conv781 = zext i8 %493 to i32
  %cmp782 = icmp sge i32 %conv781, 97
  br i1 %cmp782, label %land.lhs.true.784, label %cond.false.791

land.lhs.true.784:                                ; preds = %if.then.777
  %494 = load i8, i8* %c779, align 1
  %conv785 = zext i8 %494 to i32
  %cmp786 = icmp sle i32 %conv785, 122
  br i1 %cmp786, label %cond.true.788, label %cond.false.791

cond.true.788:                                    ; preds = %land.lhs.true.784
  %495 = load i8, i8* %c779, align 1
  %conv789 = zext i8 %495 to i32
  %sub790 = sub nsw i32 %conv789, 32
  br label %cond.end.793

cond.false.791:                                   ; preds = %land.lhs.true.784, %if.then.777
  %496 = load i8, i8* %c779, align 1
  %conv792 = zext i8 %496 to i32
  br label %cond.end.793

cond.end.793:                                     ; preds = %cond.false.791, %cond.true.788
  %cond794 = phi i32 [ %sub790, %cond.true.788 ], [ %conv792, %cond.false.791 ]
  %xor = xor i32 %cond794, 64
  %conv795 = trunc i32 %xor to i8
  %497 = load i8*, i8** %d, align 8
  %incdec.ptr796 = getelementptr inbounds i8, i8* %497, i32 1
  store i8* %incdec.ptr796, i8** %d, align 8
  store i8 %conv795, i8* %497, align 1
  br label %if.end.799

if.else.797:                                      ; preds = %sw.bb.773
  %call798 = call i32 @Perl_yyerror(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.171, i32 0, i32 0))
  br label %if.end.799

if.end.799:                                       ; preds = %if.else.797, %cond.end.793
  br label %while.cond

sw.bb.800:                                        ; preds = %if.end.419
  %498 = load i8*, i8** %d, align 8
  %incdec.ptr801 = getelementptr inbounds i8, i8* %498, i32 1
  store i8* %incdec.ptr801, i8** %d, align 8
  store i8 8, i8* %498, align 1
  br label %sw.epilog

sw.bb.802:                                        ; preds = %if.end.419
  %499 = load i8*, i8** %d, align 8
  %incdec.ptr803 = getelementptr inbounds i8, i8* %499, i32 1
  store i8* %incdec.ptr803, i8** %d, align 8
  store i8 10, i8* %499, align 1
  br label %sw.epilog

sw.bb.804:                                        ; preds = %if.end.419
  %500 = load i8*, i8** %d, align 8
  %incdec.ptr805 = getelementptr inbounds i8, i8* %500, i32 1
  store i8* %incdec.ptr805, i8** %d, align 8
  store i8 13, i8* %500, align 1
  br label %sw.epilog

sw.bb.806:                                        ; preds = %if.end.419
  %501 = load i8*, i8** %d, align 8
  %incdec.ptr807 = getelementptr inbounds i8, i8* %501, i32 1
  store i8* %incdec.ptr807, i8** %d, align 8
  store i8 12, i8* %501, align 1
  br label %sw.epilog

sw.bb.808:                                        ; preds = %if.end.419
  %502 = load i8*, i8** %d, align 8
  %incdec.ptr809 = getelementptr inbounds i8, i8* %502, i32 1
  store i8* %incdec.ptr809, i8** %d, align 8
  store i8 9, i8* %502, align 1
  br label %sw.epilog

sw.bb.810:                                        ; preds = %if.end.419
  %503 = load i8*, i8** %d, align 8
  %incdec.ptr811 = getelementptr inbounds i8, i8* %503, i32 1
  store i8* %incdec.ptr811, i8** %d, align 8
  store i8 27, i8* %503, align 1
  br label %sw.epilog

sw.bb.812:                                        ; preds = %if.end.419
  %504 = load i8*, i8** %d, align 8
  %incdec.ptr813 = getelementptr inbounds i8, i8* %504, i32 1
  store i8* %incdec.ptr813, i8** %d, align 8
  store i8 7, i8* %504, align 1
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb.812, %sw.bb.810, %sw.bb.808, %sw.bb.806, %sw.bb.804, %sw.bb.802, %sw.bb.800
  %505 = load i8*, i8** %s, align 8
  %incdec.ptr814 = getelementptr inbounds i8, i8* %505, i32 1
  store i8* %incdec.ptr814, i8** %s, align 8
  br label %while.cond

if.end.815:                                       ; preds = %land.lhs.true.329, %if.end.325
  br label %default_action

default_action:                                   ; preds = %if.end.815, %if.end.488
  %506 = load i32, i32* %has_utf8, align 4
  %tobool816 = icmp ne i32 %506, 0
  br i1 %tobool816, label %land.lhs.true.819, label %lor.lhs.false.817

lor.lhs.false.817:                                ; preds = %default_action
  %507 = load i32, i32* %this_utf8, align 4
  %tobool818 = icmp ne i32 %507, 0
  br i1 %tobool818, label %land.lhs.true.819, label %if.else.911

land.lhs.true.819:                                ; preds = %lor.lhs.false.817, %default_action
  %508 = load i8*, i8** %s, align 8
  %509 = load i8, i8* %508, align 1
  %conv820 = zext i8 %509 to i64
  %cmp821 = icmp ult i64 %conv820, 128
  br i1 %cmp821, label %if.else.911, label %if.then.823

if.then.823:                                      ; preds = %land.lhs.true.819
  store i64 1, i64* %len825, align 8
  %510 = load i32, i32* %this_utf8, align 4
  %tobool828 = icmp ne i32 %510, 0
  br i1 %tobool828, label %cond.true.829, label %cond.false.834

cond.true.829:                                    ; preds = %if.then.823
  %511 = load i8*, i8** %s, align 8
  %512 = load i8*, i8** %send, align 8
  %513 = load i8*, i8** %s, align 8
  %sub.ptr.lhs.cast830 = ptrtoint i8* %512 to i64
  %sub.ptr.rhs.cast831 = ptrtoint i8* %513 to i64
  %sub.ptr.sub832 = sub i64 %sub.ptr.lhs.cast830, %sub.ptr.rhs.cast831
  %call833 = call i64 @Perl_utf8n_to_uvuni(i8* %511, i64 %sub.ptr.sub832, i64* %len825, i32 0)
  br label %cond.end.836

cond.false.834:                                   ; preds = %if.then.823
  %514 = load i8*, i8** %s, align 8
  %515 = load i8, i8* %514, align 1
  %conv835 = zext i8 %515 to i64
  br label %cond.end.836

cond.end.836:                                     ; preds = %cond.false.834, %cond.true.829
  %cond837 = phi i64 [ %call833, %cond.true.829 ], [ %conv835, %cond.false.834 ]
  store i64 %cond837, i64* %uv827, align 8
  %516 = load i64, i64* %uv827, align 8
  %cmp839 = icmp ult i64 %516, 128
  br i1 %cmp839, label %cond.true.841, label %cond.false.842

cond.true.841:                                    ; preds = %cond.end.836
  br label %cond.end.876

cond.false.842:                                   ; preds = %cond.end.836
  %517 = load i64, i64* %uv827, align 8
  %cmp843 = icmp ult i64 %517, 2048
  br i1 %cmp843, label %cond.true.845, label %cond.false.846

cond.true.845:                                    ; preds = %cond.false.842
  br label %cond.end.874

cond.false.846:                                   ; preds = %cond.false.842
  %518 = load i64, i64* %uv827, align 8
  %cmp847 = icmp ult i64 %518, 65536
  br i1 %cmp847, label %cond.true.849, label %cond.false.850

cond.true.849:                                    ; preds = %cond.false.846
  br label %cond.end.872

cond.false.850:                                   ; preds = %cond.false.846
  %519 = load i64, i64* %uv827, align 8
  %cmp851 = icmp ult i64 %519, 2097152
  br i1 %cmp851, label %cond.true.853, label %cond.false.854

cond.true.853:                                    ; preds = %cond.false.850
  br label %cond.end.870

cond.false.854:                                   ; preds = %cond.false.850
  %520 = load i64, i64* %uv827, align 8
  %cmp855 = icmp ult i64 %520, 67108864
  br i1 %cmp855, label %cond.true.857, label %cond.false.858

cond.true.857:                                    ; preds = %cond.false.854
  br label %cond.end.868

cond.false.858:                                   ; preds = %cond.false.854
  %521 = load i64, i64* %uv827, align 8
  %cmp859 = icmp ult i64 %521, 2147483648
  br i1 %cmp859, label %cond.true.861, label %cond.false.862

cond.true.861:                                    ; preds = %cond.false.858
  br label %cond.end.866

cond.false.862:                                   ; preds = %cond.false.858
  %522 = load i64, i64* %uv827, align 8
  %cmp863 = icmp ult i64 %522, 68719476736
  %cond865 = select i1 %cmp863, i32 7, i32 13
  br label %cond.end.866

cond.end.866:                                     ; preds = %cond.false.862, %cond.true.861
  %cond867 = phi i32 [ 6, %cond.true.861 ], [ %cond865, %cond.false.862 ]
  br label %cond.end.868

cond.end.868:                                     ; preds = %cond.end.866, %cond.true.857
  %cond869 = phi i32 [ 5, %cond.true.857 ], [ %cond867, %cond.end.866 ]
  br label %cond.end.870

cond.end.870:                                     ; preds = %cond.end.868, %cond.true.853
  %cond871 = phi i32 [ 4, %cond.true.853 ], [ %cond869, %cond.end.868 ]
  br label %cond.end.872

cond.end.872:                                     ; preds = %cond.end.870, %cond.true.849
  %cond873 = phi i32 [ 3, %cond.true.849 ], [ %cond871, %cond.end.870 ]
  br label %cond.end.874

cond.end.874:                                     ; preds = %cond.end.872, %cond.true.845
  %cond875 = phi i32 [ 2, %cond.true.845 ], [ %cond873, %cond.end.872 ]
  br label %cond.end.876

cond.end.876:                                     ; preds = %cond.end.874, %cond.true.841
  %cond877 = phi i32 [ 1, %cond.true.841 ], [ %cond875, %cond.end.874 ]
  %conv878 = sext i32 %cond877 to i64
  store i64 %conv878, i64* %need, align 8
  %523 = load i64, i64* %len825, align 8
  %524 = load i8*, i8** %s, align 8
  %add.ptr879 = getelementptr inbounds i8, i8* %524, i64 %523
  store i8* %add.ptr879, i8** %s, align 8
  %525 = load i64, i64* %need, align 8
  %526 = load i64, i64* %len825, align 8
  %cmp880 = icmp ugt i64 %525, %526
  br i1 %cmp880, label %if.then.882, label %if.end.909

if.then.882:                                      ; preds = %cond.end.876
  %527 = load i8*, i8** %d, align 8
  %528 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any884 = getelementptr inbounds %struct.sv, %struct.sv* %528, i32 0, i32 0
  %529 = load i8*, i8** %sv_any884, align 8
  %530 = bitcast i8* %529 to %struct.xpv*
  %xpv_pv885 = getelementptr inbounds %struct.xpv, %struct.xpv* %530, i32 0, i32 0
  %531 = load i8*, i8** %xpv_pv885, align 8
  %sub.ptr.lhs.cast886 = ptrtoint i8* %527 to i64
  %sub.ptr.rhs.cast887 = ptrtoint i8* %531 to i64
  %sub.ptr.sub888 = sub i64 %sub.ptr.lhs.cast886, %sub.ptr.rhs.cast887
  store i64 %sub.ptr.sub888, i64* %off, align 8
  %532 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any889 = getelementptr inbounds %struct.sv, %struct.sv* %532, i32 0, i32 0
  %533 = load i8*, i8** %sv_any889, align 8
  %534 = bitcast i8* %533 to %struct.xpv*
  %xpv_len890 = getelementptr inbounds %struct.xpv, %struct.xpv* %534, i32 0, i32 2
  %535 = load i64, i64* %xpv_len890, align 8
  %536 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any891 = getelementptr inbounds %struct.sv, %struct.sv* %536, i32 0, i32 0
  %537 = load i8*, i8** %sv_any891, align 8
  %538 = bitcast i8* %537 to %struct.xpv*
  %xpv_len892 = getelementptr inbounds %struct.xpv, %struct.xpv* %538, i32 0, i32 2
  %539 = load i64, i64* %xpv_len892, align 8
  %540 = load i64, i64* %need, align 8
  %541 = load i64, i64* %len825, align 8
  %sub893 = sub i64 %540, %541
  %add894 = add i64 %539, %sub893
  %cmp895 = icmp ult i64 %535, %add894
  br i1 %cmp895, label %cond.true.897, label %cond.false.903

cond.true.897:                                    ; preds = %if.then.882
  %542 = load %struct.sv*, %struct.sv** %sv, align 8
  %543 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any898 = getelementptr inbounds %struct.sv, %struct.sv* %543, i32 0, i32 0
  %544 = load i8*, i8** %sv_any898, align 8
  %545 = bitcast i8* %544 to %struct.xpv*
  %xpv_len899 = getelementptr inbounds %struct.xpv, %struct.xpv* %545, i32 0, i32 2
  %546 = load i64, i64* %xpv_len899, align 8
  %547 = load i64, i64* %need, align 8
  %548 = load i64, i64* %len825, align 8
  %sub900 = sub i64 %547, %548
  %add901 = add i64 %546, %sub900
  %call902 = call i8* @Perl_sv_grow(%struct.sv* %542, i64 %add901)
  br label %cond.end.906

cond.false.903:                                   ; preds = %if.then.882
  %549 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any904 = getelementptr inbounds %struct.sv, %struct.sv* %549, i32 0, i32 0
  %550 = load i8*, i8** %sv_any904, align 8
  %551 = bitcast i8* %550 to %struct.xpv*
  %xpv_pv905 = getelementptr inbounds %struct.xpv, %struct.xpv* %551, i32 0, i32 0
  %552 = load i8*, i8** %xpv_pv905, align 8
  br label %cond.end.906

cond.end.906:                                     ; preds = %cond.false.903, %cond.true.897
  %cond907 = phi i8* [ %call902, %cond.true.897 ], [ %552, %cond.false.903 ]
  %553 = load i64, i64* %off, align 8
  %add.ptr908 = getelementptr inbounds i8, i8* %cond907, i64 %553
  store i8* %add.ptr908, i8** %d, align 8
  br label %if.end.909

if.end.909:                                       ; preds = %cond.end.906, %cond.end.876
  %554 = load i8*, i8** %d, align 8
  %555 = load i64, i64* %uv827, align 8
  %call910 = call i8* @Perl_uvuni_to_utf8(i8* %554, i64 %555)
  store i8* %call910, i8** %d, align 8
  store i32 1, i32* %has_utf8, align 4
  br label %if.end.914

if.else.911:                                      ; preds = %land.lhs.true.819, %lor.lhs.false.817
  %556 = load i8*, i8** %s, align 8
  %incdec.ptr912 = getelementptr inbounds i8, i8* %556, i32 1
  store i8* %incdec.ptr912, i8** %s, align 8
  %557 = load i8, i8* %556, align 1
  %558 = load i8*, i8** %d, align 8
  %incdec.ptr913 = getelementptr inbounds i8, i8* %558, i32 1
  store i8* %incdec.ptr913, i8** %d, align 8
  store i8 %557, i8* %558, align 1
  br label %if.end.914

if.end.914:                                       ; preds = %if.else.911, %if.end.909
  br label %while.cond

while.end.915:                                    ; preds = %if.then.417, %if.end.405, %if.then.319, %if.then.309, %if.then.302, %lor.end.24
  %559 = load i8*, i8** %d, align 8
  store i8 0, i8* %559, align 1
  %560 = load i8*, i8** %d, align 8
  %561 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any917 = getelementptr inbounds %struct.sv, %struct.sv* %561, i32 0, i32 0
  %562 = load i8*, i8** %sv_any917, align 8
  %563 = bitcast i8* %562 to %struct.xpv*
  %xpv_pv918 = getelementptr inbounds %struct.xpv, %struct.xpv* %563, i32 0, i32 0
  %564 = load i8*, i8** %xpv_pv918, align 8
  %sub.ptr.lhs.cast919 = ptrtoint i8* %560 to i64
  %sub.ptr.rhs.cast920 = ptrtoint i8* %564 to i64
  %sub.ptr.sub921 = sub i64 %sub.ptr.lhs.cast919, %sub.ptr.rhs.cast920
  %565 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any922 = getelementptr inbounds %struct.sv, %struct.sv* %565, i32 0, i32 0
  %566 = load i8*, i8** %sv_any922, align 8
  %567 = bitcast i8* %566 to %struct.xpv*
  %xpv_cur923 = getelementptr inbounds %struct.xpv, %struct.xpv* %567, i32 0, i32 1
  store i64 %sub.ptr.sub921, i64* %xpv_cur923, align 8
  store i64 %sub.ptr.sub921, i64* %tmp916
  %568 = load i64, i64* %tmp916
  %569 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any924 = getelementptr inbounds %struct.sv, %struct.sv* %569, i32 0, i32 0
  %570 = load i8*, i8** %sv_any924, align 8
  %571 = bitcast i8* %570 to %struct.xpv*
  %xpv_cur925 = getelementptr inbounds %struct.xpv, %struct.xpv* %571, i32 0, i32 1
  %572 = load i64, i64* %xpv_cur925, align 8
  %573 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any926 = getelementptr inbounds %struct.sv, %struct.sv* %573, i32 0, i32 0
  %574 = load i8*, i8** %sv_any926, align 8
  %575 = bitcast i8* %574 to %struct.xpv*
  %xpv_len927 = getelementptr inbounds %struct.xpv, %struct.xpv* %575, i32 0, i32 2
  %576 = load i64, i64* %xpv_len927, align 8
  %cmp928 = icmp uge i64 %572, %576
  br i1 %cmp928, label %if.then.930, label %if.end.931

if.then.930:                                      ; preds = %while.end.915
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.172, i32 0, i32 0))
  br label %if.end.931

if.end.931:                                       ; preds = %if.then.930, %while.end.915
  %577 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags932 = getelementptr inbounds %struct.sv, %struct.sv* %577, i32 0, i32 2
  %578 = load i32, i32* %sv_flags932, align 4
  %or933 = or i32 %578, 67371008
  store i32 %or933, i32* %sv_flags932, align 4
  %579 = load %struct.sv*, %struct.sv** @PL_encoding, align 8
  %tobool934 = icmp ne %struct.sv* %579, null
  br i1 %tobool934, label %land.lhs.true.935, label %if.end.944

land.lhs.true.935:                                ; preds = %if.end.931
  %580 = load i32, i32* %has_utf8, align 4
  %tobool936 = icmp ne i32 %580, 0
  br i1 %tobool936, label %if.end.944, label %if.then.937

if.then.937:                                      ; preds = %land.lhs.true.935
  %581 = load %struct.sv*, %struct.sv** %sv, align 8
  %582 = load %struct.sv*, %struct.sv** @PL_encoding, align 8
  %call938 = call i8* @Perl_sv_recode_to_utf8(%struct.sv* %581, %struct.sv* %582)
  %583 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags939 = getelementptr inbounds %struct.sv, %struct.sv* %583, i32 0, i32 2
  %584 = load i32, i32* %sv_flags939, align 4
  %and940 = and i32 %584, 536870912
  %tobool941 = icmp ne i32 %and940, 0
  br i1 %tobool941, label %if.then.942, label %if.end.943

if.then.942:                                      ; preds = %if.then.937
  store i32 1, i32* %has_utf8, align 4
  br label %if.end.943

if.end.943:                                       ; preds = %if.then.942, %if.then.937
  br label %if.end.944

if.end.944:                                       ; preds = %if.end.943, %land.lhs.true.935, %if.end.931
  %585 = load i32, i32* %has_utf8, align 4
  %tobool945 = icmp ne i32 %585, 0
  br i1 %tobool945, label %if.then.946, label %if.end.961

if.then.946:                                      ; preds = %if.end.944
  %586 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags947 = getelementptr inbounds %struct.sv, %struct.sv* %586, i32 0, i32 2
  %587 = load i32, i32* %sv_flags947, align 4
  %or948 = or i32 %587, 536870912
  store i32 %or948, i32* %sv_flags947, align 4
  %588 = load i32, i32* @PL_lex_inwhat, align 4
  %cmp949 = icmp eq i32 %588, 35
  br i1 %cmp949, label %land.lhs.true.951, label %if.end.960

land.lhs.true.951:                                ; preds = %if.then.946
  %589 = load %struct.op*, %struct.op** getelementptr inbounds (%struct._sublex_info, %struct._sublex_info* @PL_sublex_info, i32 0, i32 2), align 8
  %tobool952 = icmp ne %struct.op* %589, null
  br i1 %tobool952, label %if.then.953, label %if.end.960

if.then.953:                                      ; preds = %land.lhs.true.951
  %590 = load %struct.sv*, %struct.sv** @PL_lex_repl, align 8
  %tobool954 = icmp ne %struct.sv* %590, null
  %cond955 = select i1 %tobool954, i32 1, i32 2
  %591 = load %struct.op*, %struct.op** getelementptr inbounds (%struct._sublex_info, %struct._sublex_info* @PL_sublex_info, i32 0, i32 2), align 8
  %op_private956 = getelementptr inbounds %struct.op, %struct.op* %591, i32 0, i32 7
  %592 = load i8, i8* %op_private956, align 1
  %conv957 = zext i8 %592 to i32
  %or958 = or i32 %conv957, %cond955
  %conv959 = trunc i32 %or958 to i8
  store i8 %conv959, i8* %op_private956, align 1
  br label %if.end.960

if.end.960:                                       ; preds = %if.then.953, %land.lhs.true.951, %if.then.946
  br label %if.end.961

if.end.961:                                       ; preds = %if.end.960, %if.end.944
  %593 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any962 = getelementptr inbounds %struct.sv, %struct.sv* %593, i32 0, i32 0
  %594 = load i8*, i8** %sv_any962, align 8
  %595 = bitcast i8* %594 to %struct.xpv*
  %xpv_cur963 = getelementptr inbounds %struct.xpv, %struct.xpv* %595, i32 0, i32 1
  %596 = load i64, i64* %xpv_cur963, align 8
  %add964 = add i64 %596, 5
  %597 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any965 = getelementptr inbounds %struct.sv, %struct.sv* %597, i32 0, i32 0
  %598 = load i8*, i8** %sv_any965, align 8
  %599 = bitcast i8* %598 to %struct.xpv*
  %xpv_len966 = getelementptr inbounds %struct.xpv, %struct.xpv* %599, i32 0, i32 2
  %600 = load i64, i64* %xpv_len966, align 8
  %cmp967 = icmp ult i64 %add964, %600
  br i1 %cmp967, label %if.then.969, label %if.end.984

if.then.969:                                      ; preds = %if.end.961
  %601 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any971 = getelementptr inbounds %struct.sv, %struct.sv* %601, i32 0, i32 0
  %602 = load i8*, i8** %sv_any971, align 8
  %603 = bitcast i8* %602 to %struct.xpv*
  %xpv_cur972 = getelementptr inbounds %struct.xpv, %struct.xpv* %603, i32 0, i32 1
  %604 = load i64, i64* %xpv_cur972, align 8
  %add973 = add i64 %604, 1
  %605 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any974 = getelementptr inbounds %struct.sv, %struct.sv* %605, i32 0, i32 0
  %606 = load i8*, i8** %sv_any974, align 8
  %607 = bitcast i8* %606 to %struct.xpv*
  %xpv_len975 = getelementptr inbounds %struct.xpv, %struct.xpv* %607, i32 0, i32 2
  store i64 %add973, i64* %xpv_len975, align 8
  store i64 %add973, i64* %tmp970
  %608 = load i64, i64* %tmp970
  %609 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any976 = getelementptr inbounds %struct.sv, %struct.sv* %609, i32 0, i32 0
  %610 = load i8*, i8** %sv_any976, align 8
  %611 = bitcast i8* %610 to %struct.xpv*
  %xpv_pv977 = getelementptr inbounds %struct.xpv, %struct.xpv* %611, i32 0, i32 0
  %612 = load i8*, i8** %xpv_pv977, align 8
  %613 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any978 = getelementptr inbounds %struct.sv, %struct.sv* %613, i32 0, i32 0
  %614 = load i8*, i8** %sv_any978, align 8
  %615 = bitcast i8* %614 to %struct.xpv*
  %xpv_len979 = getelementptr inbounds %struct.xpv, %struct.xpv* %615, i32 0, i32 2
  %616 = load i64, i64* %xpv_len979, align 8
  %mul980 = mul i64 %616, 1
  %call981 = call i8* @Perl_safesysrealloc(i8* %612, i64 %mul980)
  %617 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any982 = getelementptr inbounds %struct.sv, %struct.sv* %617, i32 0, i32 0
  %618 = load i8*, i8** %sv_any982, align 8
  %619 = bitcast i8* %618 to %struct.xpv*
  %xpv_pv983 = getelementptr inbounds %struct.xpv, %struct.xpv* %619, i32 0, i32 0
  store i8* %call981, i8** %xpv_pv983, align 8
  br label %if.end.984

if.end.984:                                       ; preds = %if.then.969, %if.end.961
  %620 = load i8*, i8** %s, align 8
  %621 = load i8*, i8** @PL_bufptr, align 8
  %cmp985 = icmp ugt i8* %620, %621
  br i1 %cmp985, label %if.then.987, label %if.else.1013

if.then.987:                                      ; preds = %if.end.984
  %622 = load i32, i32* @PL_hints, align 4
  %623 = load %struct.op*, %struct.op** @PL_lex_inpat, align 8
  %tobool988 = icmp ne %struct.op* %623, null
  %cond989 = select i1 %tobool988, i32 65536, i32 32768
  %and990 = and i32 %622, %cond989
  %tobool991 = icmp ne i32 %and990, 0
  br i1 %tobool991, label %if.then.992, label %if.end.1011

if.then.992:                                      ; preds = %if.then.987
  %624 = load i8*, i8** %start.addr, align 8
  %625 = load i8*, i8** %s, align 8
  %626 = load i8*, i8** %start.addr, align 8
  %sub.ptr.lhs.cast993 = ptrtoint i8* %625 to i64
  %sub.ptr.rhs.cast994 = ptrtoint i8* %626 to i64
  %sub.ptr.sub995 = sub i64 %sub.ptr.lhs.cast993, %sub.ptr.rhs.cast994
  %627 = load %struct.op*, %struct.op** @PL_lex_inpat, align 8
  %tobool996 = icmp ne %struct.op* %627, null
  %cond997 = select i1 %tobool996, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i32 0, i32 0)
  %628 = load %struct.sv*, %struct.sv** %sv, align 8
  %629 = load i32, i32* @PL_lex_inwhat, align 4
  %cmp998 = icmp eq i32 %629, 35
  br i1 %cmp998, label %cond.true.1000, label %cond.false.1001

cond.true.1000:                                   ; preds = %if.then.992
  br label %cond.end.1008

cond.false.1001:                                  ; preds = %if.then.992
  %630 = load i32, i32* @PL_lex_inwhat, align 4
  %cmp1002 = icmp eq i32 %630, 33
  br i1 %cmp1002, label %land.rhs.1004, label %land.end.1006

land.rhs.1004:                                    ; preds = %cond.false.1001
  %631 = load %struct.op*, %struct.op** @PL_lex_inpat, align 8
  %tobool1005 = icmp ne %struct.op* %631, null
  %lnot = xor i1 %tobool1005, true
  br label %land.end.1006

land.end.1006:                                    ; preds = %land.rhs.1004, %cond.false.1001
  %632 = phi i1 [ false, %cond.false.1001 ], [ %lnot, %land.rhs.1004 ]
  %cond1007 = select i1 %632, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.174, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.175, i32 0, i32 0)
  br label %cond.end.1008

cond.end.1008:                                    ; preds = %land.end.1006, %cond.true.1000
  %cond1009 = phi i8* [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.173, i32 0, i32 0), %cond.true.1000 ], [ %cond1007, %land.end.1006 ]
  %call1010 = call %struct.sv* @S_new_constant(i8* %624, i64 %sub.ptr.sub995, i8* %cond997, %struct.sv* %628, %struct.sv* null, i8* %cond1009)
  store %struct.sv* %call1010, %struct.sv** %sv, align 8
  br label %if.end.1011

if.end.1011:                                      ; preds = %cond.end.1008, %if.then.987
  %633 = load %struct.sv*, %struct.sv** %sv, align 8
  %call1012 = call %struct.op* @Perl_newSVOP(i32 5, i32 0, %struct.sv* %633)
  store %struct.op* %call1012, %struct.op** bitcast (%union.YYSTYPE* @PL_yylval to %struct.op**), align 8
  br label %if.end.1014

if.else.1013:                                     ; preds = %if.end.984
  %634 = load %struct.sv*, %struct.sv** %sv, align 8
  call void @Perl_sv_free(%struct.sv* %634)
  br label %if.end.1014

if.end.1014:                                      ; preds = %if.else.1013, %if.end.1011
  %635 = load i8*, i8** %s, align 8
  ret i8* %635
}

; Function Attrs: nounwind uwtable
define internal i8* @S_scan_formline(i8* %s) #0 {
entry:
  %s.addr = alloca i8*, align 8
  %eol = alloca i8*, align 8
  %t = alloca i8*, align 8
  %stuff = alloca %struct.sv*, align 8
  %needargs = alloca i8, align 1
  %eofmt = alloca i8, align 1
  %end = alloca i8*, align 8
  store i8* %s, i8** %s.addr, align 8
  %call = call %struct.sv* @Perl_newSVpvn(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.24, i32 0, i32 0), i64 0)
  store %struct.sv* %call, %struct.sv** %stuff, align 8
  store i8 0, i8* %needargs, align 1
  store i8 0, i8* %eofmt, align 1
  br label %while.cond

while.cond:                                       ; preds = %if.end.109, %entry
  %0 = load i8, i8* %needargs, align 1
  %tobool = icmp ne i8 %0, 0
  %lnot = xor i1 %tobool, true
  br i1 %lnot, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %1 = load i8*, i8** %s.addr, align 8
  %2 = load i8, i8* %1, align 1
  %conv = sext i8 %2 to i32
  %cmp = icmp eq i32 %conv, 46
  br i1 %cmp, label %if.then, label %if.end.18

if.then:                                          ; preds = %while.body
  %3 = load i8*, i8** %s.addr, align 8
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 1
  store i8* %add.ptr, i8** %t, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then
  %4 = load i8*, i8** %t, align 8
  %5 = load i8, i8* %4, align 1
  %conv2 = sext i8 %5 to i32
  %cmp3 = icmp eq i32 %conv2, 32
  br i1 %cmp3, label %lor.end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.cond
  %6 = load i8*, i8** %t, align 8
  %7 = load i8, i8* %6, align 1
  %conv5 = sext i8 %7 to i32
  %cmp6 = icmp eq i32 %conv5, 9
  br i1 %cmp6, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %lor.lhs.false
  %8 = load i8*, i8** %t, align 8
  %9 = load i8, i8* %8, align 1
  %conv8 = sext i8 %9 to i32
  %cmp9 = icmp eq i32 %conv8, 13
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %for.cond
  %10 = phi i1 [ true, %lor.lhs.false ], [ true, %for.cond ], [ %cmp9, %lor.rhs ]
  br i1 %10, label %for.body, label %for.end

for.body:                                         ; preds = %lor.end
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %11 = load i8*, i8** %t, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %11, i32 1
  store i8* %incdec.ptr, i8** %t, align 8
  br label %for.cond

for.end:                                          ; preds = %lor.end
  %12 = load i8*, i8** %t, align 8
  %13 = load i8, i8* %12, align 1
  %conv11 = sext i8 %13 to i32
  %cmp12 = icmp eq i32 %conv11, 10
  br i1 %cmp12, label %if.then.17, label %lor.lhs.false.14

lor.lhs.false.14:                                 ; preds = %for.end
  %14 = load i8*, i8** %t, align 8
  %15 = load i8*, i8** @PL_bufend, align 8
  %cmp15 = icmp eq i8* %14, %15
  br i1 %cmp15, label %if.then.17, label %if.end

if.then.17:                                       ; preds = %lor.lhs.false.14, %for.end
  store i8 1, i8* %eofmt, align 1
  br label %while.end

if.end:                                           ; preds = %lor.lhs.false.14
  br label %if.end.18

if.end.18:                                        ; preds = %if.end, %while.body
  %16 = load volatile i32, i32* @PL_in_eval, align 4
  %tobool19 = icmp ne i32 %16, 0
  br i1 %tobool19, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %if.end.18
  %17 = load volatile %struct._PerlIO**, %struct._PerlIO*** @PL_rsfp, align 8
  %tobool20 = icmp ne %struct._PerlIO** %17, null
  br i1 %tobool20, label %if.else, label %if.then.21

if.then.21:                                       ; preds = %land.lhs.true
  %18 = load i8*, i8** %s.addr, align 8
  %19 = load i8*, i8** @PL_bufend, align 8
  %20 = load i8*, i8** %s.addr, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %19 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %20 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %call22 = call i8* @memchr(i8* %18, i32 10, i64 %sub.ptr.sub)
  store i8* %call22, i8** %eol, align 8
  %21 = load i8*, i8** %eol, align 8
  %incdec.ptr23 = getelementptr inbounds i8, i8* %21, i32 1
  store i8* %incdec.ptr23, i8** %eol, align 8
  %tobool24 = icmp ne i8* %21, null
  br i1 %tobool24, label %if.end.26, label %if.then.25

if.then.25:                                       ; preds = %if.then.21
  %22 = load i8*, i8** @PL_bufend, align 8
  store i8* %22, i8** %eol, align 8
  br label %if.end.26

if.end.26:                                        ; preds = %if.then.25, %if.then.21
  br label %if.end.29

if.else:                                          ; preds = %land.lhs.true, %if.end.18
  %23 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %23, i32 0, i32 0
  %24 = load i8*, i8** %sv_any, align 8
  %25 = bitcast i8* %24 to %struct.xpv*
  %xpv_pv = getelementptr inbounds %struct.xpv, %struct.xpv* %25, i32 0, i32 0
  %26 = load i8*, i8** %xpv_pv, align 8
  %27 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_any27 = getelementptr inbounds %struct.sv, %struct.sv* %27, i32 0, i32 0
  %28 = load i8*, i8** %sv_any27, align 8
  %29 = bitcast i8* %28 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %29, i32 0, i32 1
  %30 = load i64, i64* %xpv_cur, align 8
  %add.ptr28 = getelementptr inbounds i8, i8* %26, i64 %30
  store i8* %add.ptr28, i8** @PL_bufend, align 8
  store i8* %add.ptr28, i8** %eol, align 8
  br label %if.end.29

if.end.29:                                        ; preds = %if.else, %if.end.26
  %31 = load i8*, i8** %s.addr, align 8
  %32 = load i8, i8* %31, align 1
  %conv30 = sext i8 %32 to i32
  %cmp31 = icmp ne i32 %conv30, 35
  br i1 %cmp31, label %if.then.33, label %if.end.97

if.then.33:                                       ; preds = %if.end.29
  %33 = load i8*, i8** %s.addr, align 8
  store i8* %33, i8** %t, align 8
  br label %for.cond.34

for.cond.34:                                      ; preds = %for.inc.60, %if.then.33
  %34 = load i8*, i8** %t, align 8
  %35 = load i8*, i8** %eol, align 8
  %cmp35 = icmp ult i8* %34, %35
  br i1 %cmp35, label %for.body.37, label %for.end.62

for.body.37:                                      ; preds = %for.cond.34
  %36 = load i8*, i8** %t, align 8
  %37 = load i8, i8* %36, align 1
  %conv38 = sext i8 %37 to i32
  %cmp39 = icmp eq i32 %conv38, 126
  br i1 %cmp39, label %land.lhs.true.41, label %if.end.50

land.lhs.true.41:                                 ; preds = %for.body.37
  %38 = load i8*, i8** %t, align 8
  %arrayidx = getelementptr inbounds i8, i8* %38, i64 1
  %39 = load i8, i8* %arrayidx, align 1
  %conv42 = sext i8 %39 to i32
  %cmp43 = icmp eq i32 %conv42, 126
  br i1 %cmp43, label %land.lhs.true.45, label %if.end.50

land.lhs.true.45:                                 ; preds = %land.lhs.true.41
  %40 = load %struct.sv*, %struct.sv** %stuff, align 8
  %sv_any46 = getelementptr inbounds %struct.sv, %struct.sv* %40, i32 0, i32 0
  %41 = load i8*, i8** %sv_any46, align 8
  %42 = bitcast i8* %41 to %struct.xpv*
  %xpv_cur47 = getelementptr inbounds %struct.xpv, %struct.xpv* %42, i32 0, i32 1
  %43 = load i64, i64* %xpv_cur47, align 8
  %tobool48 = icmp ne i64 %43, 0
  br i1 %tobool48, label %if.then.49, label %if.end.50

if.then.49:                                       ; preds = %land.lhs.true.45
  store i8 0, i8* %needargs, align 1
  br label %enough

if.end.50:                                        ; preds = %land.lhs.true.45, %land.lhs.true.41, %for.body.37
  %44 = load i8*, i8** %t, align 8
  %45 = load i8, i8* %44, align 1
  %conv51 = sext i8 %45 to i32
  %cmp52 = icmp eq i32 %conv51, 64
  br i1 %cmp52, label %if.then.58, label %lor.lhs.false.54

lor.lhs.false.54:                                 ; preds = %if.end.50
  %46 = load i8*, i8** %t, align 8
  %47 = load i8, i8* %46, align 1
  %conv55 = sext i8 %47 to i32
  %cmp56 = icmp eq i32 %conv55, 94
  br i1 %cmp56, label %if.then.58, label %if.end.59

if.then.58:                                       ; preds = %lor.lhs.false.54, %if.end.50
  store i8 1, i8* %needargs, align 1
  br label %if.end.59

if.end.59:                                        ; preds = %if.then.58, %lor.lhs.false.54
  br label %for.inc.60

for.inc.60:                                       ; preds = %if.end.59
  %48 = load i8*, i8** %t, align 8
  %incdec.ptr61 = getelementptr inbounds i8, i8* %48, i32 1
  store i8* %incdec.ptr61, i8** %t, align 8
  br label %for.cond.34

for.end.62:                                       ; preds = %for.cond.34
  %49 = load i8*, i8** %eol, align 8
  %50 = load i8*, i8** %s.addr, align 8
  %cmp63 = icmp ugt i8* %49, %50
  br i1 %cmp63, label %if.then.65, label %if.else.95

if.then.65:                                       ; preds = %for.end.62
  %51 = load %struct.sv*, %struct.sv** %stuff, align 8
  %52 = load i8*, i8** %s.addr, align 8
  %53 = load i8*, i8** %eol, align 8
  %54 = load i8*, i8** %s.addr, align 8
  %sub.ptr.lhs.cast66 = ptrtoint i8* %53 to i64
  %sub.ptr.rhs.cast67 = ptrtoint i8* %54 to i64
  %sub.ptr.sub68 = sub i64 %sub.ptr.lhs.cast66, %sub.ptr.rhs.cast67
  call void @Perl_sv_catpvn_flags(%struct.sv* %51, i8* %52, i64 %sub.ptr.sub68, i32 2)
  %55 = load i8*, i8** %eol, align 8
  %56 = load i8*, i8** %s.addr, align 8
  %sub.ptr.lhs.cast69 = ptrtoint i8* %55 to i64
  %sub.ptr.rhs.cast70 = ptrtoint i8* %56 to i64
  %sub.ptr.sub71 = sub i64 %sub.ptr.lhs.cast69, %sub.ptr.rhs.cast70
  %cmp72 = icmp sgt i64 %sub.ptr.sub71, 1
  br i1 %cmp72, label %land.lhs.true.74, label %if.end.94

land.lhs.true.74:                                 ; preds = %if.then.65
  %57 = load i8*, i8** %eol, align 8
  %arrayidx75 = getelementptr inbounds i8, i8* %57, i64 -2
  %58 = load i8, i8* %arrayidx75, align 1
  %conv76 = sext i8 %58 to i32
  %cmp77 = icmp eq i32 %conv76, 13
  br i1 %cmp77, label %land.lhs.true.79, label %if.end.94

land.lhs.true.79:                                 ; preds = %land.lhs.true.74
  %59 = load i8*, i8** %eol, align 8
  %arrayidx80 = getelementptr inbounds i8, i8* %59, i64 -1
  %60 = load i8, i8* %arrayidx80, align 1
  %conv81 = sext i8 %60 to i32
  %cmp82 = icmp eq i32 %conv81, 10
  br i1 %cmp82, label %if.then.84, label %if.end.94

if.then.84:                                       ; preds = %land.lhs.true.79
  %61 = load %struct.sv*, %struct.sv** %stuff, align 8
  %sv_any85 = getelementptr inbounds %struct.sv, %struct.sv* %61, i32 0, i32 0
  %62 = load i8*, i8** %sv_any85, align 8
  %63 = bitcast i8* %62 to %struct.xpv*
  %xpv_pv86 = getelementptr inbounds %struct.xpv, %struct.xpv* %63, i32 0, i32 0
  %64 = load i8*, i8** %xpv_pv86, align 8
  %65 = load %struct.sv*, %struct.sv** %stuff, align 8
  %sv_any87 = getelementptr inbounds %struct.sv, %struct.sv* %65, i32 0, i32 0
  %66 = load i8*, i8** %sv_any87, align 8
  %67 = bitcast i8* %66 to %struct.xpv*
  %xpv_cur88 = getelementptr inbounds %struct.xpv, %struct.xpv* %67, i32 0, i32 1
  %68 = load i64, i64* %xpv_cur88, align 8
  %add.ptr89 = getelementptr inbounds i8, i8* %64, i64 %68
  store i8* %add.ptr89, i8** %end, align 8
  %69 = load i8*, i8** %end, align 8
  %arrayidx90 = getelementptr inbounds i8, i8* %69, i64 -2
  store i8 10, i8* %arrayidx90, align 1
  %70 = load i8*, i8** %end, align 8
  %arrayidx91 = getelementptr inbounds i8, i8* %70, i64 -1
  store i8 0, i8* %arrayidx91, align 1
  %71 = load %struct.sv*, %struct.sv** %stuff, align 8
  %sv_any92 = getelementptr inbounds %struct.sv, %struct.sv* %71, i32 0, i32 0
  %72 = load i8*, i8** %sv_any92, align 8
  %73 = bitcast i8* %72 to %struct.xpv*
  %xpv_cur93 = getelementptr inbounds %struct.xpv, %struct.xpv* %73, i32 0, i32 1
  %74 = load i64, i64* %xpv_cur93, align 8
  %dec = add i64 %74, -1
  store i64 %dec, i64* %xpv_cur93, align 8
  br label %if.end.94

if.end.94:                                        ; preds = %if.then.84, %land.lhs.true.79, %land.lhs.true.74, %if.then.65
  br label %if.end.96

if.else.95:                                       ; preds = %for.end.62
  br label %while.end

if.end.96:                                        ; preds = %if.end.94
  br label %if.end.97

if.end.97:                                        ; preds = %if.end.96, %if.end.29
  %75 = load i8*, i8** %eol, align 8
  store i8* %75, i8** %s.addr, align 8
  %76 = load volatile %struct._PerlIO**, %struct._PerlIO*** @PL_rsfp, align 8
  %tobool98 = icmp ne %struct._PerlIO** %76, null
  br i1 %tobool98, label %if.then.99, label %if.end.109

if.then.99:                                       ; preds = %if.end.97
  %77 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %78 = load volatile %struct._PerlIO**, %struct._PerlIO*** @PL_rsfp, align 8
  %call100 = call i8* @S_filter_gets(%struct.sv* %77, %struct._PerlIO** %78, i64 0)
  store i8* %call100, i8** %s.addr, align 8
  %79 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_any101 = getelementptr inbounds %struct.sv, %struct.sv* %79, i32 0, i32 0
  %80 = load i8*, i8** %sv_any101, align 8
  %81 = bitcast i8* %80 to %struct.xpv*
  %xpv_pv102 = getelementptr inbounds %struct.xpv, %struct.xpv* %81, i32 0, i32 0
  %82 = load i8*, i8** %xpv_pv102, align 8
  store i8* %82, i8** @PL_linestart, align 8
  store i8* %82, i8** @PL_bufptr, align 8
  store i8* %82, i8** @PL_oldbufptr, align 8
  store i8* %82, i8** @PL_oldoldbufptr, align 8
  %83 = load i8*, i8** @PL_bufptr, align 8
  %84 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_any103 = getelementptr inbounds %struct.sv, %struct.sv* %84, i32 0, i32 0
  %85 = load i8*, i8** %sv_any103, align 8
  %86 = bitcast i8* %85 to %struct.xpv*
  %xpv_cur104 = getelementptr inbounds %struct.xpv, %struct.xpv* %86, i32 0, i32 1
  %87 = load i64, i64* %xpv_cur104, align 8
  %add.ptr105 = getelementptr inbounds i8, i8* %83, i64 %87
  store i8* %add.ptr105, i8** @PL_bufend, align 8
  store i8* null, i8** @PL_last_uni, align 8
  store i8* null, i8** @PL_last_lop, align 8
  %88 = load i8*, i8** %s.addr, align 8
  %tobool106 = icmp ne i8* %88, null
  br i1 %tobool106, label %if.end.108, label %if.then.107

if.then.107:                                      ; preds = %if.then.99
  %89 = load i8*, i8** @PL_bufptr, align 8
  store i8* %89, i8** %s.addr, align 8
  br label %while.end

if.end.108:                                       ; preds = %if.then.99
  br label %if.end.109

if.end.109:                                       ; preds = %if.end.108, %if.end.97
  %90 = load i8*, i8** %s.addr, align 8
  call void @S_incline(i8* %90)
  br label %while.cond

while.end:                                        ; preds = %if.then.107, %if.else.95, %if.then.17, %while.cond
  br label %enough

enough:                                           ; preds = %while.end, %if.then.49
  %91 = load %struct.sv*, %struct.sv** %stuff, align 8
  %sv_any110 = getelementptr inbounds %struct.sv, %struct.sv* %91, i32 0, i32 0
  %92 = load i8*, i8** %sv_any110, align 8
  %93 = bitcast i8* %92 to %struct.xpv*
  %xpv_cur111 = getelementptr inbounds %struct.xpv, %struct.xpv* %93, i32 0, i32 1
  %94 = load i64, i64* %xpv_cur111, align 8
  %tobool112 = icmp ne i64 %94, 0
  br i1 %tobool112, label %if.then.113, label %if.else.157

if.then.113:                                      ; preds = %enough
  store i32 1, i32* @PL_expect, align 4
  %95 = load i8, i8* %needargs, align 1
  %tobool114 = icmp ne i8 %95, 0
  br i1 %tobool114, label %if.then.115, label %if.else.117

if.then.115:                                      ; preds = %if.then.113
  store i32 10, i32* @PL_lex_state, align 4
  %96 = load i32, i32* @PL_nexttoke, align 4
  %idxprom = sext i32 %96 to i64
  %arrayidx116 = getelementptr inbounds [5 x %union.YYSTYPE], [5 x %union.YYSTYPE]* @PL_nextval, i32 0, i64 %idxprom
  %ival = bitcast %union.YYSTYPE* %arrayidx116 to i32*
  store i32 0, i32* %ival, align 4
  call void @S_force_next(i32 44)
  br label %if.end.118

if.else.117:                                      ; preds = %if.then.113
  store i32 1, i32* @PL_lex_state, align 4
  br label %if.end.118

if.end.118:                                       ; preds = %if.else.117, %if.then.115
  %97 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private = getelementptr inbounds %struct.cop, %struct.cop* %97, i32 0, i32 7
  %98 = load i8, i8* %op_private, align 1
  %conv119 = zext i8 %98 to i32
  %and = and i32 %conv119, 8
  %tobool120 = icmp ne i32 %and, 0
  br i1 %tobool120, label %if.end.150, label %if.then.121

if.then.121:                                      ; preds = %if.end.118
  %99 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %tobool122 = icmp ne %struct.sv* %99, null
  br i1 %tobool122, label %land.lhs.true.123, label %lor.lhs.false.131

land.lhs.true.123:                                ; preds = %if.then.121
  %100 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %100, i32 0, i32 2
  %101 = load i32, i32* %sv_flags, align 4
  %and124 = and i32 %101, 536870912
  %tobool125 = icmp ne i32 %and124, 0
  br i1 %tobool125, label %land.lhs.true.126, label %lor.lhs.false.131

land.lhs.true.126:                                ; preds = %land.lhs.true.123
  %102 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private127 = getelementptr inbounds %struct.cop, %struct.cop* %102, i32 0, i32 7
  %103 = load i8, i8* %op_private127, align 1
  %conv128 = zext i8 %103 to i32
  %and129 = and i32 %conv128, 8
  %tobool130 = icmp ne i32 %and129, 0
  br i1 %tobool130, label %lor.lhs.false.131, label %land.lhs.true.134

lor.lhs.false.131:                                ; preds = %land.lhs.true.126, %land.lhs.true.123, %if.then.121
  %104 = load i32, i32* @PL_hints, align 4
  %and132 = and i32 %104, 8388608
  %tobool133 = icmp ne i32 %and132, 0
  br i1 %tobool133, label %land.lhs.true.134, label %if.else.144

land.lhs.true.134:                                ; preds = %lor.lhs.false.131, %land.lhs.true.126
  %105 = load %struct.sv*, %struct.sv** %stuff, align 8
  %sv_any135 = getelementptr inbounds %struct.sv, %struct.sv* %105, i32 0, i32 0
  %106 = load i8*, i8** %sv_any135, align 8
  %107 = bitcast i8* %106 to %struct.xpv*
  %xpv_pv136 = getelementptr inbounds %struct.xpv, %struct.xpv* %107, i32 0, i32 0
  %108 = load i8*, i8** %xpv_pv136, align 8
  %109 = load %struct.sv*, %struct.sv** %stuff, align 8
  %sv_any137 = getelementptr inbounds %struct.sv, %struct.sv* %109, i32 0, i32 0
  %110 = load i8*, i8** %sv_any137, align 8
  %111 = bitcast i8* %110 to %struct.xpv*
  %xpv_cur138 = getelementptr inbounds %struct.xpv, %struct.xpv* %111, i32 0, i32 1
  %112 = load i64, i64* %xpv_cur138, align 8
  %call139 = call signext i8 @Perl_is_utf8_string(i8* %108, i64 %112)
  %conv140 = sext i8 %call139 to i32
  %tobool141 = icmp ne i32 %conv140, 0
  br i1 %tobool141, label %if.then.142, label %if.else.144

if.then.142:                                      ; preds = %land.lhs.true.134
  %113 = load %struct.sv*, %struct.sv** %stuff, align 8
  %sv_flags143 = getelementptr inbounds %struct.sv, %struct.sv* %113, i32 0, i32 2
  %114 = load i32, i32* %sv_flags143, align 4
  %or = or i32 %114, 536870912
  store i32 %or, i32* %sv_flags143, align 4
  br label %if.end.149

if.else.144:                                      ; preds = %land.lhs.true.134, %lor.lhs.false.131
  %115 = load %struct.sv*, %struct.sv** @PL_encoding, align 8
  %tobool145 = icmp ne %struct.sv* %115, null
  br i1 %tobool145, label %if.then.146, label %if.end.148

if.then.146:                                      ; preds = %if.else.144
  %116 = load %struct.sv*, %struct.sv** %stuff, align 8
  %117 = load %struct.sv*, %struct.sv** @PL_encoding, align 8
  %call147 = call i8* @Perl_sv_recode_to_utf8(%struct.sv* %116, %struct.sv* %117)
  br label %if.end.148

if.end.148:                                       ; preds = %if.then.146, %if.else.144
  br label %if.end.149

if.end.149:                                       ; preds = %if.end.148, %if.then.142
  br label %if.end.150

if.end.150:                                       ; preds = %if.end.149, %if.end.118
  %118 = load %struct.sv*, %struct.sv** %stuff, align 8
  %call151 = call %struct.op* @Perl_newSVOP(i32 5, i32 0, %struct.sv* %118)
  %119 = load i32, i32* @PL_nexttoke, align 4
  %idxprom152 = sext i32 %119 to i64
  %arrayidx153 = getelementptr inbounds [5 x %union.YYSTYPE], [5 x %union.YYSTYPE]* @PL_nextval, i32 0, i64 %idxprom152
  %opval = bitcast %union.YYSTYPE* %arrayidx153 to %struct.op**
  store %struct.op* %call151, %struct.op** %opval, align 8
  call void @S_force_next(i32 260)
  %120 = load i32, i32* @PL_nexttoke, align 4
  %idxprom154 = sext i32 %120 to i64
  %arrayidx155 = getelementptr inbounds [5 x %union.YYSTYPE], [5 x %union.YYSTYPE]* @PL_nextval, i32 0, i64 %idxprom154
  %ival156 = bitcast %union.YYSTYPE* %arrayidx155 to i32*
  store i32 116, i32* %ival156, align 4
  call void @S_force_next(i32 286)
  br label %if.end.161

if.else.157:                                      ; preds = %enough
  %121 = load %struct.sv*, %struct.sv** %stuff, align 8
  call void @Perl_sv_free(%struct.sv* %121)
  %122 = load i8, i8* %eofmt, align 1
  %tobool158 = icmp ne i8 %122, 0
  br i1 %tobool158, label %if.then.159, label %if.end.160

if.then.159:                                      ; preds = %if.else.157
  store i32 0, i32* @PL_lex_formbrack, align 4
  br label %if.end.160

if.end.160:                                       ; preds = %if.then.159, %if.else.157
  %123 = load i8*, i8** %s.addr, align 8
  store i8* %123, i8** @PL_bufptr, align 8
  br label %if.end.161

if.end.161:                                       ; preds = %if.end.160, %if.end.150
  %124 = load i8*, i8** %s.addr, align 8
  ret i8* %124
}

declare signext i8 @Perl_is_utf8_idcont(i8*) #1

declare signext i8 @Perl_is_utf8_digit(i8*) #1

; Function Attrs: nounwind uwtable
define i32 @Perl_yyerror(i8* %s) #0 {
entry:
  %s.addr = alloca i8*, align 8
  %where = alloca i8*, align 8
  %context = alloca i8*, align 8
  %contlen = alloca i32, align 4
  %msg = alloca %struct.sv*, align 8
  %where_sv = alloca %struct.sv*, align 8
  store i8* %s, i8** %s.addr, align 8
  store i8* null, i8** %where, align 8
  store i8* null, i8** %context, align 8
  store i32 -1, i32* %contlen, align 4
  %0 = load i32, i32* @PL_yychar, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %lor.lhs.false, label %if.then

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* @PL_yychar, align 4
  %cmp = icmp eq i32 %1, 59
  br i1 %cmp, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %lor.lhs.false
  %2 = load volatile %struct._PerlIO**, %struct._PerlIO*** @PL_rsfp, align 8
  %tobool1 = icmp ne %struct._PerlIO** %2, null
  br i1 %tobool1, label %if.else, label %if.then

if.then:                                          ; preds = %land.lhs.true, %entry
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.135, i32 0, i32 0), i8** %where, align 8
  br label %if.end.122

if.else:                                          ; preds = %land.lhs.true, %lor.lhs.false
  %3 = load i8*, i8** @PL_bufptr, align 8
  %4 = load i8*, i8** @PL_oldoldbufptr, align 8
  %cmp2 = icmp ugt i8* %3, %4
  br i1 %cmp2, label %land.lhs.true.3, label %if.else.31

land.lhs.true.3:                                  ; preds = %if.else
  %5 = load i8*, i8** @PL_bufptr, align 8
  %6 = load i8*, i8** @PL_oldoldbufptr, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %5 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %6 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %cmp4 = icmp slt i64 %sub.ptr.sub, 200
  br i1 %cmp4, label %land.lhs.true.5, label %if.else.31

land.lhs.true.5:                                  ; preds = %land.lhs.true.3
  %7 = load i8*, i8** @PL_oldoldbufptr, align 8
  %8 = load i8*, i8** @PL_oldbufptr, align 8
  %cmp6 = icmp ne i8* %7, %8
  br i1 %cmp6, label %land.lhs.true.7, label %if.else.31

land.lhs.true.7:                                  ; preds = %land.lhs.true.5
  %9 = load i8*, i8** @PL_oldbufptr, align 8
  %10 = load i8*, i8** @PL_bufptr, align 8
  %cmp8 = icmp ne i8* %9, %10
  br i1 %cmp8, label %if.then.9, label %if.else.31

if.then.9:                                        ; preds = %land.lhs.true.7
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.then.9
  %11 = load i8*, i8** @PL_oldoldbufptr, align 8
  %12 = load i8, i8* %11, align 1
  %conv = sext i8 %12 to i32
  %cmp10 = icmp eq i32 %conv, 32
  br i1 %cmp10, label %lor.end, label %lor.lhs.false.12

lor.lhs.false.12:                                 ; preds = %while.cond
  %13 = load i8*, i8** @PL_oldoldbufptr, align 8
  %14 = load i8, i8* %13, align 1
  %conv13 = sext i8 %14 to i32
  %cmp14 = icmp eq i32 %conv13, 9
  br i1 %cmp14, label %lor.end, label %lor.lhs.false.16

lor.lhs.false.16:                                 ; preds = %lor.lhs.false.12
  %15 = load i8*, i8** @PL_oldoldbufptr, align 8
  %16 = load i8, i8* %15, align 1
  %conv17 = sext i8 %16 to i32
  %cmp18 = icmp eq i32 %conv17, 10
  br i1 %cmp18, label %lor.end, label %lor.lhs.false.20

lor.lhs.false.20:                                 ; preds = %lor.lhs.false.16
  %17 = load i8*, i8** @PL_oldoldbufptr, align 8
  %18 = load i8, i8* %17, align 1
  %conv21 = sext i8 %18 to i32
  %cmp22 = icmp eq i32 %conv21, 13
  br i1 %cmp22, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %lor.lhs.false.20
  %19 = load i8*, i8** @PL_oldoldbufptr, align 8
  %20 = load i8, i8* %19, align 1
  %conv24 = sext i8 %20 to i32
  %cmp25 = icmp eq i32 %conv24, 12
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false.20, %lor.lhs.false.16, %lor.lhs.false.12, %while.cond
  %21 = phi i1 [ true, %lor.lhs.false.20 ], [ true, %lor.lhs.false.16 ], [ true, %lor.lhs.false.12 ], [ true, %while.cond ], [ %cmp25, %lor.rhs ]
  br i1 %21, label %while.body, label %while.end

while.body:                                       ; preds = %lor.end
  %22 = load i8*, i8** @PL_oldoldbufptr, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %22, i32 1
  store i8* %incdec.ptr, i8** @PL_oldoldbufptr, align 8
  br label %while.cond

while.end:                                        ; preds = %lor.end
  %23 = load i8*, i8** @PL_oldoldbufptr, align 8
  store i8* %23, i8** %context, align 8
  %24 = load i8*, i8** @PL_bufptr, align 8
  %25 = load i8*, i8** @PL_oldoldbufptr, align 8
  %sub.ptr.lhs.cast27 = ptrtoint i8* %24 to i64
  %sub.ptr.rhs.cast28 = ptrtoint i8* %25 to i64
  %sub.ptr.sub29 = sub i64 %sub.ptr.lhs.cast27, %sub.ptr.rhs.cast28
  %conv30 = trunc i64 %sub.ptr.sub29 to i32
  store i32 %conv30, i32* %contlen, align 4
  br label %if.end.121

if.else.31:                                       ; preds = %land.lhs.true.7, %land.lhs.true.5, %land.lhs.true.3, %if.else
  %26 = load i8*, i8** @PL_bufptr, align 8
  %27 = load i8*, i8** @PL_oldbufptr, align 8
  %cmp32 = icmp ugt i8* %26, %27
  br i1 %cmp32, label %land.lhs.true.34, label %if.else.72

land.lhs.true.34:                                 ; preds = %if.else.31
  %28 = load i8*, i8** @PL_bufptr, align 8
  %29 = load i8*, i8** @PL_oldbufptr, align 8
  %sub.ptr.lhs.cast35 = ptrtoint i8* %28 to i64
  %sub.ptr.rhs.cast36 = ptrtoint i8* %29 to i64
  %sub.ptr.sub37 = sub i64 %sub.ptr.lhs.cast35, %sub.ptr.rhs.cast36
  %cmp38 = icmp slt i64 %sub.ptr.sub37, 200
  br i1 %cmp38, label %land.lhs.true.40, label %if.else.72

land.lhs.true.40:                                 ; preds = %land.lhs.true.34
  %30 = load i8*, i8** @PL_oldbufptr, align 8
  %31 = load i8*, i8** @PL_bufptr, align 8
  %cmp41 = icmp ne i8* %30, %31
  br i1 %cmp41, label %if.then.43, label %if.else.72

if.then.43:                                       ; preds = %land.lhs.true.40
  br label %while.cond.44

while.cond.44:                                    ; preds = %while.body.65, %if.then.43
  %32 = load i8*, i8** @PL_oldbufptr, align 8
  %33 = load i8, i8* %32, align 1
  %conv45 = sext i8 %33 to i32
  %cmp46 = icmp eq i32 %conv45, 32
  br i1 %cmp46, label %lor.end.64, label %lor.lhs.false.48

lor.lhs.false.48:                                 ; preds = %while.cond.44
  %34 = load i8*, i8** @PL_oldbufptr, align 8
  %35 = load i8, i8* %34, align 1
  %conv49 = sext i8 %35 to i32
  %cmp50 = icmp eq i32 %conv49, 9
  br i1 %cmp50, label %lor.end.64, label %lor.lhs.false.52

lor.lhs.false.52:                                 ; preds = %lor.lhs.false.48
  %36 = load i8*, i8** @PL_oldbufptr, align 8
  %37 = load i8, i8* %36, align 1
  %conv53 = sext i8 %37 to i32
  %cmp54 = icmp eq i32 %conv53, 10
  br i1 %cmp54, label %lor.end.64, label %lor.lhs.false.56

lor.lhs.false.56:                                 ; preds = %lor.lhs.false.52
  %38 = load i8*, i8** @PL_oldbufptr, align 8
  %39 = load i8, i8* %38, align 1
  %conv57 = sext i8 %39 to i32
  %cmp58 = icmp eq i32 %conv57, 13
  br i1 %cmp58, label %lor.end.64, label %lor.rhs.60

lor.rhs.60:                                       ; preds = %lor.lhs.false.56
  %40 = load i8*, i8** @PL_oldbufptr, align 8
  %41 = load i8, i8* %40, align 1
  %conv61 = sext i8 %41 to i32
  %cmp62 = icmp eq i32 %conv61, 12
  br label %lor.end.64

lor.end.64:                                       ; preds = %lor.rhs.60, %lor.lhs.false.56, %lor.lhs.false.52, %lor.lhs.false.48, %while.cond.44
  %42 = phi i1 [ true, %lor.lhs.false.56 ], [ true, %lor.lhs.false.52 ], [ true, %lor.lhs.false.48 ], [ true, %while.cond.44 ], [ %cmp62, %lor.rhs.60 ]
  br i1 %42, label %while.body.65, label %while.end.67

while.body.65:                                    ; preds = %lor.end.64
  %43 = load i8*, i8** @PL_oldbufptr, align 8
  %incdec.ptr66 = getelementptr inbounds i8, i8* %43, i32 1
  store i8* %incdec.ptr66, i8** @PL_oldbufptr, align 8
  br label %while.cond.44

while.end.67:                                     ; preds = %lor.end.64
  %44 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %44, i8** %context, align 8
  %45 = load i8*, i8** @PL_bufptr, align 8
  %46 = load i8*, i8** @PL_oldbufptr, align 8
  %sub.ptr.lhs.cast68 = ptrtoint i8* %45 to i64
  %sub.ptr.rhs.cast69 = ptrtoint i8* %46 to i64
  %sub.ptr.sub70 = sub i64 %sub.ptr.lhs.cast68, %sub.ptr.rhs.cast69
  %conv71 = trunc i64 %sub.ptr.sub70 to i32
  store i32 %conv71, i32* %contlen, align 4
  br label %if.end.120

if.else.72:                                       ; preds = %land.lhs.true.40, %land.lhs.true.34, %if.else.31
  %47 = load i32, i32* @PL_yychar, align 4
  %cmp73 = icmp sgt i32 %47, 255
  br i1 %cmp73, label %if.then.75, label %if.else.76

if.then.75:                                       ; preds = %if.else.72
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.136, i32 0, i32 0), i8** %where, align 8
  br label %if.end.119

if.else.76:                                       ; preds = %if.else.72
  %48 = load i32, i32* @PL_yychar, align 4
  %and = and i32 %48, 127
  %cmp77 = icmp eq i32 %and, 127
  br i1 %cmp77, label %if.then.79, label %if.else.94

if.then.79:                                       ; preds = %if.else.76
  %49 = load i32, i32* @PL_lex_state, align 4
  %cmp80 = icmp eq i32 %49, 10
  br i1 %cmp80, label %if.then.88, label %lor.lhs.false.82

lor.lhs.false.82:                                 ; preds = %if.then.79
  %50 = load i32, i32* @PL_lex_state, align 4
  %cmp83 = icmp eq i32 %50, 0
  br i1 %cmp83, label %land.lhs.true.85, label %if.else.89

land.lhs.true.85:                                 ; preds = %lor.lhs.false.82
  %51 = load i32, i32* @PL_lex_defer, align 4
  %cmp86 = icmp eq i32 %51, 10
  br i1 %cmp86, label %if.then.88, label %if.else.89

if.then.88:                                       ; preds = %land.lhs.true.85, %if.then.79
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.137, i32 0, i32 0), i8** %where, align 8
  br label %if.end.93

if.else.89:                                       ; preds = %land.lhs.true.85, %lor.lhs.false.82
  %52 = load %struct.op*, %struct.op** @PL_lex_inpat, align 8
  %tobool90 = icmp ne %struct.op* %52, null
  br i1 %tobool90, label %if.then.91, label %if.else.92

if.then.91:                                       ; preds = %if.else.89
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.138, i32 0, i32 0), i8** %where, align 8
  br label %if.end

if.else.92:                                       ; preds = %if.else.89
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.139, i32 0, i32 0), i8** %where, align 8
  br label %if.end

if.end:                                           ; preds = %if.else.92, %if.then.91
  br label %if.end.93

if.end.93:                                        ; preds = %if.end, %if.then.88
  br label %if.end.118

if.else.94:                                       ; preds = %if.else.76
  %call = call %struct.sv* @Perl_newSVpvn(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.140, i32 0, i32 0), i64 10)
  %call95 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call)
  store %struct.sv* %call95, %struct.sv** %where_sv, align 8
  %53 = load i32, i32* @PL_yychar, align 4
  %cmp96 = icmp slt i32 %53, 32
  br i1 %cmp96, label %if.then.98, label %if.else.104

if.then.98:                                       ; preds = %if.else.94
  %54 = load %struct.sv*, %struct.sv** %where_sv, align 8
  %55 = load i32, i32* @PL_yychar, align 4
  %cmp99 = icmp sge i32 %55, 97
  br i1 %cmp99, label %land.lhs.true.101, label %cond.false

land.lhs.true.101:                                ; preds = %if.then.98
  %56 = load i32, i32* @PL_yychar, align 4
  %cmp102 = icmp sle i32 %56, 122
  br i1 %cmp102, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true.101
  %57 = load i32, i32* @PL_yychar, align 4
  %sub = sub nsw i32 %57, 32
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true.101, %if.then.98
  %58 = load i32, i32* @PL_yychar, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub, %cond.true ], [ %58, %cond.false ]
  %xor = xor i32 %cond, 64
  call void (%struct.sv*, i8*, ...) @Perl_sv_catpvf(%struct.sv* %54, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.141, i32 0, i32 0), i32 %xor)
  br label %if.end.117

if.else.104:                                      ; preds = %if.else.94
  %59 = load i32, i32* @PL_yychar, align 4
  %and105 = and i32 %59, -128
  %cmp106 = icmp eq i32 %and105, 0
  br i1 %cmp106, label %land.lhs.true.108, label %if.else.114

land.lhs.true.108:                                ; preds = %if.else.104
  %60 = load i32, i32* @PL_yychar, align 4
  %idxprom = sext i32 %60 to i64
  %call109 = call i16** @__ctype_b_loc()
  %61 = load i16*, i16** %call109, align 8
  %arrayidx = getelementptr inbounds i16, i16* %61, i64 %idxprom
  %62 = load i16, i16* %arrayidx, align 2
  %conv110 = zext i16 %62 to i32
  %and111 = and i32 %conv110, 16384
  %tobool112 = icmp ne i32 %and111, 0
  br i1 %tobool112, label %if.then.113, label %if.else.114

if.then.113:                                      ; preds = %land.lhs.true.108
  %63 = load %struct.sv*, %struct.sv** %where_sv, align 8
  %64 = load i32, i32* @PL_yychar, align 4
  call void (%struct.sv*, i8*, ...) @Perl_sv_catpvf(%struct.sv* %63, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.142, i32 0, i32 0), i32 %64)
  br label %if.end.116

if.else.114:                                      ; preds = %land.lhs.true.108, %if.else.104
  %65 = load %struct.sv*, %struct.sv** %where_sv, align 8
  %66 = load i32, i32* @PL_yychar, align 4
  %and115 = and i32 %66, 255
  call void (%struct.sv*, i8*, ...) @Perl_sv_catpvf(%struct.sv* %65, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.143, i32 0, i32 0), i32 %and115)
  br label %if.end.116

if.end.116:                                       ; preds = %if.else.114, %if.then.113
  br label %if.end.117

if.end.117:                                       ; preds = %if.end.116, %cond.end
  %67 = load %struct.sv*, %struct.sv** %where_sv, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %67, i32 0, i32 0
  %68 = load i8*, i8** %sv_any, align 8
  %69 = bitcast i8* %68 to %struct.xpv*
  %xpv_pv = getelementptr inbounds %struct.xpv, %struct.xpv* %69, i32 0, i32 0
  %70 = load i8*, i8** %xpv_pv, align 8
  store i8* %70, i8** %where, align 8
  br label %if.end.118

if.end.118:                                       ; preds = %if.end.117, %if.end.93
  br label %if.end.119

if.end.119:                                       ; preds = %if.end.118, %if.then.75
  br label %if.end.120

if.end.120:                                       ; preds = %if.end.119, %while.end.67
  br label %if.end.121

if.end.121:                                       ; preds = %if.end.120, %while.end
  br label %if.end.122

if.end.122:                                       ; preds = %if.end.121, %if.then
  %71 = load i8*, i8** %s.addr, align 8
  %call123 = call %struct.sv* @Perl_newSVpv(i8* %71, i64 0)
  %call124 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call123)
  store %struct.sv* %call124, %struct.sv** %msg, align 8
  %72 = load %struct.sv*, %struct.sv** %msg, align 8
  %73 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_filegv = getelementptr inbounds %struct.cop, %struct.cop* %73, i32 0, i32 10
  %74 = load %struct.gv*, %struct.gv** %cop_filegv, align 8
  %tobool125 = icmp ne %struct.gv* %74, null
  br i1 %tobool125, label %cond.true.126, label %cond.false.130

cond.true.126:                                    ; preds = %if.end.122
  %75 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_filegv127 = getelementptr inbounds %struct.cop, %struct.cop* %75, i32 0, i32 10
  %76 = load %struct.gv*, %struct.gv** %cop_filegv127, align 8
  %sv_any128 = getelementptr inbounds %struct.gv, %struct.gv* %76, i32 0, i32 0
  %77 = load %struct.xpvgv*, %struct.xpvgv** %sv_any128, align 8
  %xgv_gp = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %77, i32 0, i32 7
  %78 = load %struct.gp*, %struct.gp** %xgv_gp, align 8
  %gp_sv = getelementptr inbounds %struct.gp, %struct.gp* %78, i32 0, i32 0
  %79 = load %struct.sv*, %struct.sv** %gp_sv, align 8
  %tobool129 = icmp ne %struct.sv* %79, null
  br i1 %tobool129, label %cond.true.131, label %cond.false.144

cond.false.130:                                   ; preds = %if.end.122
  br i1 false, label %cond.true.131, label %cond.false.144

cond.true.131:                                    ; preds = %cond.false.130, %cond.true.126
  %80 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_filegv132 = getelementptr inbounds %struct.cop, %struct.cop* %80, i32 0, i32 10
  %81 = load %struct.gv*, %struct.gv** %cop_filegv132, align 8
  %tobool133 = icmp ne %struct.gv* %81, null
  br i1 %tobool133, label %cond.true.134, label %cond.false.139

cond.true.134:                                    ; preds = %cond.true.131
  %82 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_filegv135 = getelementptr inbounds %struct.cop, %struct.cop* %82, i32 0, i32 10
  %83 = load %struct.gv*, %struct.gv** %cop_filegv135, align 8
  %sv_any136 = getelementptr inbounds %struct.gv, %struct.gv* %83, i32 0, i32 0
  %84 = load %struct.xpvgv*, %struct.xpvgv** %sv_any136, align 8
  %xgv_gp137 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %84, i32 0, i32 7
  %85 = load %struct.gp*, %struct.gp** %xgv_gp137, align 8
  %gp_sv138 = getelementptr inbounds %struct.gp, %struct.gp* %85, i32 0, i32 0
  %86 = load %struct.sv*, %struct.sv** %gp_sv138, align 8
  br label %cond.end.140

cond.false.139:                                   ; preds = %cond.true.131
  br label %cond.end.140

cond.end.140:                                     ; preds = %cond.false.139, %cond.true.134
  %cond141 = phi %struct.sv* [ %86, %cond.true.134 ], [ null, %cond.false.139 ]
  %sv_any142 = getelementptr inbounds %struct.sv, %struct.sv* %cond141, i32 0, i32 0
  %87 = load i8*, i8** %sv_any142, align 8
  %88 = bitcast i8* %87 to %struct.xpv*
  %xpv_pv143 = getelementptr inbounds %struct.xpv, %struct.xpv* %88, i32 0, i32 0
  %89 = load i8*, i8** %xpv_pv143, align 8
  br label %cond.end.145

cond.false.144:                                   ; preds = %cond.false.130, %cond.true.126
  br label %cond.end.145

cond.end.145:                                     ; preds = %cond.false.144, %cond.end.140
  %cond146 = phi i8* [ %89, %cond.end.140 ], [ null, %cond.false.144 ]
  %90 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line = getelementptr inbounds %struct.cop, %struct.cop* %90, i32 0, i32 13
  %91 = load i32, i32* %cop_line, align 4
  %conv147 = zext i32 %91 to i64
  call void (%struct.sv*, i8*, ...) @Perl_sv_catpvf(%struct.sv* %72, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.144, i32 0, i32 0), i8* %cond146, i64 %conv147)
  %92 = load i8*, i8** %context, align 8
  %tobool148 = icmp ne i8* %92, null
  br i1 %tobool148, label %if.then.149, label %if.else.150

if.then.149:                                      ; preds = %cond.end.145
  %93 = load %struct.sv*, %struct.sv** %msg, align 8
  %94 = load i32, i32* %contlen, align 4
  %95 = load i8*, i8** %context, align 8
  call void (%struct.sv*, i8*, ...) @Perl_sv_catpvf(%struct.sv* %93, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.145, i32 0, i32 0), i32 %94, i8* %95)
  br label %if.end.151

if.else.150:                                      ; preds = %cond.end.145
  %96 = load %struct.sv*, %struct.sv** %msg, align 8
  %97 = load i8*, i8** %where, align 8
  call void (%struct.sv*, i8*, ...) @Perl_sv_catpvf(%struct.sv* %96, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.146, i32 0, i32 0), i8* %97)
  br label %if.end.151

if.end.151:                                       ; preds = %if.else.150, %if.then.149
  %98 = load i32, i32* @PL_multi_start, align 4
  %99 = load i32, i32* @PL_multi_end, align 4
  %cmp152 = icmp slt i32 %98, %99
  br i1 %cmp152, label %land.lhs.true.154, label %if.end.161

land.lhs.true.154:                                ; preds = %if.end.151
  %100 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line155 = getelementptr inbounds %struct.cop, %struct.cop* %100, i32 0, i32 13
  %101 = load i32, i32* %cop_line155, align 4
  %102 = load i32, i32* @PL_multi_end, align 4
  %sub156 = sub i32 %101, %102
  %cmp157 = icmp ule i32 %sub156, 1
  br i1 %cmp157, label %if.then.159, label %if.end.161

if.then.159:                                      ; preds = %land.lhs.true.154
  %103 = load %struct.sv*, %struct.sv** %msg, align 8
  %104 = load i32, i32* @PL_multi_open, align 4
  %105 = load i32, i32* @PL_multi_close, align 4
  %106 = load i32, i32* @PL_multi_start, align 4
  %conv160 = sext i32 %106 to i64
  call void (%struct.sv*, i8*, ...) @Perl_sv_catpvf(%struct.sv* %103, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.147, i32 0, i32 0), i32 %104, i32 %105, i64 %conv160)
  store i32 0, i32* @PL_multi_end, align 4
  br label %if.end.161

if.end.161:                                       ; preds = %if.then.159, %land.lhs.true.154, %if.end.151
  %107 = load volatile i32, i32* @PL_in_eval, align 4
  %and162 = and i32 %107, 2
  %tobool163 = icmp ne i32 %and162, 0
  br i1 %tobool163, label %land.lhs.true.164, label %if.else.184

land.lhs.true.164:                                ; preds = %if.end.161
  %108 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings = getelementptr inbounds %struct.cop, %struct.cop* %108, i32 0, i32 14
  %109 = load %struct.sv*, %struct.sv** %cop_warnings, align 8
  %cmp165 = icmp eq %struct.sv* %109, null
  br i1 %cmp165, label %if.then.183, label %lor.lhs.false.167

lor.lhs.false.167:                                ; preds = %land.lhs.true.164
  %110 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings168 = getelementptr inbounds %struct.cop, %struct.cop* %110, i32 0, i32 14
  %111 = load %struct.sv*, %struct.sv** %cop_warnings168, align 8
  %cmp169 = icmp eq %struct.sv* %111, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 1)
  br i1 %cmp169, label %if.then.183, label %lor.lhs.false.171

lor.lhs.false.171:                                ; preds = %lor.lhs.false.167
  %112 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings172 = getelementptr inbounds %struct.cop, %struct.cop* %112, i32 0, i32 14
  %113 = load %struct.sv*, %struct.sv** %cop_warnings172, align 8
  %cmp173 = icmp ne %struct.sv* %113, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 2)
  br i1 %cmp173, label %land.lhs.true.175, label %if.else.184

land.lhs.true.175:                                ; preds = %lor.lhs.false.171
  %114 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings176 = getelementptr inbounds %struct.cop, %struct.cop* %114, i32 0, i32 14
  %115 = load %struct.sv*, %struct.sv** %cop_warnings176, align 8
  %sv_any177 = getelementptr inbounds %struct.sv, %struct.sv* %115, i32 0, i32 0
  %116 = load i8*, i8** %sv_any177, align 8
  %117 = bitcast i8* %116 to %struct.xpv*
  %xpv_pv178 = getelementptr inbounds %struct.xpv, %struct.xpv* %117, i32 0, i32 0
  %118 = load i8*, i8** %xpv_pv178, align 8
  %arrayidx179 = getelementptr inbounds i8, i8* %118, i64 7
  %119 = load i8, i8* %arrayidx179, align 1
  %conv180 = sext i8 %119 to i32
  %and181 = and i32 %conv180, 1
  %tobool182 = icmp ne i32 %and181, 0
  br i1 %tobool182, label %if.then.183, label %if.else.184

if.then.183:                                      ; preds = %land.lhs.true.175, %lor.lhs.false.167, %land.lhs.true.164
  %120 = load %struct.sv*, %struct.sv** %msg, align 8
  call void (i32, i8*, ...) @Perl_warner(i32 28, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.148, i32 0, i32 0), %struct.sv* %120)
  br label %if.end.185

if.else.184:                                      ; preds = %land.lhs.true.175, %lor.lhs.false.171, %if.end.161
  %121 = load %struct.sv*, %struct.sv** %msg, align 8
  call void @Perl_qerror(%struct.sv* %121)
  br label %if.end.185

if.end.185:                                       ; preds = %if.else.184, %if.then.183
  %122 = load i32, i32* @PL_error_count, align 4
  %cmp186 = icmp sge i32 %122, 10
  br i1 %cmp186, label %if.then.188, label %if.end.252

if.then.188:                                      ; preds = %if.end.185
  %123 = load volatile i32, i32* @PL_in_eval, align 4
  %tobool189 = icmp ne i32 %123, 0
  br i1 %tobool189, label %land.lhs.true.190, label %if.else.225

land.lhs.true.190:                                ; preds = %if.then.188
  %124 = load %struct.gv*, %struct.gv** @PL_errgv, align 8
  %sv_any191 = getelementptr inbounds %struct.gv, %struct.gv* %124, i32 0, i32 0
  %125 = load %struct.xpvgv*, %struct.xpvgv** %sv_any191, align 8
  %xgv_gp192 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %125, i32 0, i32 7
  %126 = load %struct.gp*, %struct.gp** %xgv_gp192, align 8
  %gp_sv193 = getelementptr inbounds %struct.gp, %struct.gp* %126, i32 0, i32 0
  %127 = load %struct.sv*, %struct.sv** %gp_sv193, align 8
  %sv_any194 = getelementptr inbounds %struct.sv, %struct.sv* %127, i32 0, i32 0
  %128 = load i8*, i8** %sv_any194, align 8
  %129 = bitcast i8* %128 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %129, i32 0, i32 1
  %130 = load i64, i64* %xpv_cur, align 8
  %tobool195 = icmp ne i64 %130, 0
  br i1 %tobool195, label %if.then.196, label %if.else.225

if.then.196:                                      ; preds = %land.lhs.true.190
  %131 = load %struct.gv*, %struct.gv** @PL_errgv, align 8
  %sv_any197 = getelementptr inbounds %struct.gv, %struct.gv* %131, i32 0, i32 0
  %132 = load %struct.xpvgv*, %struct.xpvgv** %sv_any197, align 8
  %xgv_gp198 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %132, i32 0, i32 7
  %133 = load %struct.gp*, %struct.gp** %xgv_gp198, align 8
  %gp_sv199 = getelementptr inbounds %struct.gp, %struct.gp* %133, i32 0, i32 0
  %134 = load %struct.sv*, %struct.sv** %gp_sv199, align 8
  %135 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_filegv200 = getelementptr inbounds %struct.cop, %struct.cop* %135, i32 0, i32 10
  %136 = load %struct.gv*, %struct.gv** %cop_filegv200, align 8
  %tobool201 = icmp ne %struct.gv* %136, null
  br i1 %tobool201, label %cond.true.202, label %cond.false.208

cond.true.202:                                    ; preds = %if.then.196
  %137 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_filegv203 = getelementptr inbounds %struct.cop, %struct.cop* %137, i32 0, i32 10
  %138 = load %struct.gv*, %struct.gv** %cop_filegv203, align 8
  %sv_any204 = getelementptr inbounds %struct.gv, %struct.gv* %138, i32 0, i32 0
  %139 = load %struct.xpvgv*, %struct.xpvgv** %sv_any204, align 8
  %xgv_gp205 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %139, i32 0, i32 7
  %140 = load %struct.gp*, %struct.gp** %xgv_gp205, align 8
  %gp_sv206 = getelementptr inbounds %struct.gp, %struct.gp* %140, i32 0, i32 0
  %141 = load %struct.sv*, %struct.sv** %gp_sv206, align 8
  %tobool207 = icmp ne %struct.sv* %141, null
  br i1 %tobool207, label %cond.true.209, label %cond.false.222

cond.false.208:                                   ; preds = %if.then.196
  br i1 false, label %cond.true.209, label %cond.false.222

cond.true.209:                                    ; preds = %cond.false.208, %cond.true.202
  %142 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_filegv210 = getelementptr inbounds %struct.cop, %struct.cop* %142, i32 0, i32 10
  %143 = load %struct.gv*, %struct.gv** %cop_filegv210, align 8
  %tobool211 = icmp ne %struct.gv* %143, null
  br i1 %tobool211, label %cond.true.212, label %cond.false.217

cond.true.212:                                    ; preds = %cond.true.209
  %144 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_filegv213 = getelementptr inbounds %struct.cop, %struct.cop* %144, i32 0, i32 10
  %145 = load %struct.gv*, %struct.gv** %cop_filegv213, align 8
  %sv_any214 = getelementptr inbounds %struct.gv, %struct.gv* %145, i32 0, i32 0
  %146 = load %struct.xpvgv*, %struct.xpvgv** %sv_any214, align 8
  %xgv_gp215 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %146, i32 0, i32 7
  %147 = load %struct.gp*, %struct.gp** %xgv_gp215, align 8
  %gp_sv216 = getelementptr inbounds %struct.gp, %struct.gp* %147, i32 0, i32 0
  %148 = load %struct.sv*, %struct.sv** %gp_sv216, align 8
  br label %cond.end.218

cond.false.217:                                   ; preds = %cond.true.209
  br label %cond.end.218

cond.end.218:                                     ; preds = %cond.false.217, %cond.true.212
  %cond219 = phi %struct.sv* [ %148, %cond.true.212 ], [ null, %cond.false.217 ]
  %sv_any220 = getelementptr inbounds %struct.sv, %struct.sv* %cond219, i32 0, i32 0
  %149 = load i8*, i8** %sv_any220, align 8
  %150 = bitcast i8* %149 to %struct.xpv*
  %xpv_pv221 = getelementptr inbounds %struct.xpv, %struct.xpv* %150, i32 0, i32 0
  %151 = load i8*, i8** %xpv_pv221, align 8
  br label %cond.end.223

cond.false.222:                                   ; preds = %cond.false.208, %cond.true.202
  br label %cond.end.223

cond.end.223:                                     ; preds = %cond.false.222, %cond.end.218
  %cond224 = phi i8* [ %151, %cond.end.218 ], [ null, %cond.false.222 ]
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.149, i32 0, i32 0), %struct.sv* %134, i8* %cond224)
  br label %if.end.251

if.else.225:                                      ; preds = %land.lhs.true.190, %if.then.188
  %152 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_filegv226 = getelementptr inbounds %struct.cop, %struct.cop* %152, i32 0, i32 10
  %153 = load %struct.gv*, %struct.gv** %cop_filegv226, align 8
  %tobool227 = icmp ne %struct.gv* %153, null
  br i1 %tobool227, label %cond.true.228, label %cond.false.234

cond.true.228:                                    ; preds = %if.else.225
  %154 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_filegv229 = getelementptr inbounds %struct.cop, %struct.cop* %154, i32 0, i32 10
  %155 = load %struct.gv*, %struct.gv** %cop_filegv229, align 8
  %sv_any230 = getelementptr inbounds %struct.gv, %struct.gv* %155, i32 0, i32 0
  %156 = load %struct.xpvgv*, %struct.xpvgv** %sv_any230, align 8
  %xgv_gp231 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %156, i32 0, i32 7
  %157 = load %struct.gp*, %struct.gp** %xgv_gp231, align 8
  %gp_sv232 = getelementptr inbounds %struct.gp, %struct.gp* %157, i32 0, i32 0
  %158 = load %struct.sv*, %struct.sv** %gp_sv232, align 8
  %tobool233 = icmp ne %struct.sv* %158, null
  br i1 %tobool233, label %cond.true.235, label %cond.false.248

cond.false.234:                                   ; preds = %if.else.225
  br i1 false, label %cond.true.235, label %cond.false.248

cond.true.235:                                    ; preds = %cond.false.234, %cond.true.228
  %159 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_filegv236 = getelementptr inbounds %struct.cop, %struct.cop* %159, i32 0, i32 10
  %160 = load %struct.gv*, %struct.gv** %cop_filegv236, align 8
  %tobool237 = icmp ne %struct.gv* %160, null
  br i1 %tobool237, label %cond.true.238, label %cond.false.243

cond.true.238:                                    ; preds = %cond.true.235
  %161 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_filegv239 = getelementptr inbounds %struct.cop, %struct.cop* %161, i32 0, i32 10
  %162 = load %struct.gv*, %struct.gv** %cop_filegv239, align 8
  %sv_any240 = getelementptr inbounds %struct.gv, %struct.gv* %162, i32 0, i32 0
  %163 = load %struct.xpvgv*, %struct.xpvgv** %sv_any240, align 8
  %xgv_gp241 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %163, i32 0, i32 7
  %164 = load %struct.gp*, %struct.gp** %xgv_gp241, align 8
  %gp_sv242 = getelementptr inbounds %struct.gp, %struct.gp* %164, i32 0, i32 0
  %165 = load %struct.sv*, %struct.sv** %gp_sv242, align 8
  br label %cond.end.244

cond.false.243:                                   ; preds = %cond.true.235
  br label %cond.end.244

cond.end.244:                                     ; preds = %cond.false.243, %cond.true.238
  %cond245 = phi %struct.sv* [ %165, %cond.true.238 ], [ null, %cond.false.243 ]
  %sv_any246 = getelementptr inbounds %struct.sv, %struct.sv* %cond245, i32 0, i32 0
  %166 = load i8*, i8** %sv_any246, align 8
  %167 = bitcast i8* %166 to %struct.xpv*
  %xpv_pv247 = getelementptr inbounds %struct.xpv, %struct.xpv* %167, i32 0, i32 0
  %168 = load i8*, i8** %xpv_pv247, align 8
  br label %cond.end.249

cond.false.248:                                   ; preds = %cond.false.234, %cond.true.228
  br label %cond.end.249

cond.end.249:                                     ; preds = %cond.false.248, %cond.end.244
  %cond250 = phi i8* [ %168, %cond.end.244 ], [ null, %cond.false.248 ]
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.150, i32 0, i32 0), i8* %cond250)
  br label %if.end.251

if.end.251:                                       ; preds = %cond.end.249, %cond.end.223
  br label %if.end.252

if.end.252:                                       ; preds = %if.end.251, %if.end.185
  store i32 0, i32* @PL_in_my, align 4
  store %struct.hv* null, %struct.hv** @PL_in_my_stash, align 8
  ret i32 0
}

declare void @Perl_sv_setpv(%struct.sv*, i8*) #1

; Function Attrs: nounwind uwtable
define internal i8* @S_incl_perldb() #0 {
entry:
  %retval = alloca i8*, align 8
  %pdb = alloca i8*, align 8
  %0 = load i32, i32* @PL_perldb, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.then, label %if.end.4

if.then:                                          ; preds = %entry
  %call = call i8* @getenv(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.176, i32 0, i32 0))
  store i8* %call, i8** %pdb, align 8
  %1 = load i8*, i8** %pdb, align 8
  %tobool1 = icmp ne i8* %1, null
  br i1 %tobool1, label %if.then.2, label %if.end

if.then.2:                                        ; preds = %if.then
  %2 = load i8*, i8** %pdb, align 8
  store i8* %2, i8** %retval
  br label %return

if.end:                                           ; preds = %if.then
  %call3 = call i32* @__errno_location()
  store i32 0, i32* %call3, align 4
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.177, i32 0, i32 0), i8** %retval
  br label %return

if.end.4:                                         ; preds = %entry
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.24, i32 0, i32 0), i8** %retval
  br label %return

return:                                           ; preds = %if.end.4, %if.end, %if.then.2
  %3 = load i8*, i8** %retval
  ret i8* %3
}

declare %struct.sv* @Perl_av_shift(%struct.av*) #1

declare void @Perl_sv_catsv_flags(%struct.sv*, %struct.sv*, i32) #1

declare void @Perl_sv_catpv(%struct.sv*, i8*) #1

declare void @Perl_sv_catpvf(%struct.sv*, i8*, ...) #1

declare void @Perl_sv_setsv_flags(%struct.sv*, %struct.sv*, i32) #1

declare i32 @Perl_sv_backoff(%struct.sv*) #1

; Function Attrs: nounwind uwtable
define internal i8* @S_filter_gets(%struct.sv* %sv, %struct._PerlIO** %fp, i64 %append) #0 {
entry:
  %retval = alloca i8*, align 8
  %sv.addr = alloca %struct.sv*, align 8
  %fp.addr = alloca %struct._PerlIO**, align 8
  %append.addr = alloca i64, align 8
  %tmp = alloca i64, align 8
  store %struct.sv* %sv, %struct.sv** %sv.addr, align 8
  store %struct._PerlIO** %fp, %struct._PerlIO*** %fp.addr, align 8
  store i64 %append, i64* %append.addr, align 8
  %0 = load %struct.av*, %struct.av** @PL_rsfp_filters, align 8
  %tobool = icmp ne %struct.av* %0, null
  br i1 %tobool, label %if.then, label %if.else.5

if.then:                                          ; preds = %entry
  %1 = load i64, i64* %append.addr, align 8
  %tobool1 = icmp ne i64 %1, 0
  br i1 %tobool1, label %if.end, label %if.then.2

if.then.2:                                        ; preds = %if.then
  %2 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %2, i32 0, i32 0
  %3 = load i8*, i8** %sv_any, align 8
  %4 = bitcast i8* %3 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %4, i32 0, i32 1
  store i64 0, i64* %xpv_cur, align 8
  store i64 0, i64* %tmp
  %5 = load i64, i64* %tmp
  br label %if.end

if.end:                                           ; preds = %if.then.2, %if.then
  %6 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %call = call i32 @Perl_filter_read(i32 0, %struct.sv* %6, i32 0)
  %cmp = icmp sgt i32 %call, 0
  br i1 %cmp, label %if.then.3, label %if.else

if.then.3:                                        ; preds = %if.end
  %7 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_any4 = getelementptr inbounds %struct.sv, %struct.sv* %7, i32 0, i32 0
  %8 = load i8*, i8** %sv_any4, align 8
  %9 = bitcast i8* %8 to %struct.xpv*
  %xpv_pv = getelementptr inbounds %struct.xpv, %struct.xpv* %9, i32 0, i32 0
  %10 = load i8*, i8** %xpv_pv, align 8
  store i8* %10, i8** %retval
  br label %return

if.else:                                          ; preds = %if.end
  store i8* null, i8** %retval
  br label %return

if.else.5:                                        ; preds = %entry
  %11 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %12 = load %struct._PerlIO**, %struct._PerlIO*** %fp.addr, align 8
  %13 = load i64, i64* %append.addr, align 8
  %conv = trunc i64 %13 to i32
  %call6 = call i8* @Perl_sv_gets(%struct.sv* %11, %struct._PerlIO** %12, i32 %conv)
  store i8* %call6, i8** %retval
  br label %return

return:                                           ; preds = %if.else.5, %if.else, %if.then.3
  %14 = load i8*, i8** %retval
  ret i8* %14
}

declare i32 @Perl_my_pclose(%struct._PerlIO**) #1

declare %struct._PerlIO** @Perl_PerlIO_stdin() #1

declare void @Perl_PerlIO_clearerr(%struct._PerlIO**) #1

declare i32 @Perl_PerlIO_close(%struct._PerlIO**) #1

declare i64 @Perl_PerlIO_tell(%struct._PerlIO**) #1

; Function Attrs: nounwind uwtable
define internal i8* @S_swallow_bom(i8* %s) #0 {
entry:
  %s.addr = alloca i8*, align 8
  %slen = alloca i64, align 8
  %news = alloca i8*, align 8
  %newlen = alloca i32, align 4
  %news40 = alloca i8*, align 8
  %newlen41 = alloca i32, align 4
  store i8* %s, i8** %s.addr, align 8
  %0 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %0, i32 0, i32 0
  %1 = load i8*, i8** %sv_any, align 8
  %2 = bitcast i8* %1 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %2, i32 0, i32 1
  %3 = load i64, i64* %xpv_cur, align 8
  store i64 %3, i64* %slen, align 8
  %4 = load i8*, i8** %s.addr, align 8
  %arrayidx = getelementptr inbounds i8, i8* %4, i64 0
  %5 = load i8, i8* %arrayidx, align 1
  %conv = zext i8 %5 to i32
  switch i32 %conv, label %sw.default [
    i32 255, label %sw.bb
    i32 254, label %sw.bb.30
    i32 239, label %sw.bb.67
    i32 0, label %sw.bb.83
  ]

sw.bb:                                            ; preds = %entry
  %6 = load i8*, i8** %s.addr, align 8
  %arrayidx1 = getelementptr inbounds i8, i8* %6, i64 1
  %7 = load i8, i8* %arrayidx1, align 1
  %conv2 = zext i8 %7 to i32
  %cmp = icmp eq i32 %conv2, 254
  br i1 %cmp, label %if.then, label %if.end.29

if.then:                                          ; preds = %sw.bb
  %8 = load i8*, i8** %s.addr, align 8
  %arrayidx4 = getelementptr inbounds i8, i8* %8, i64 2
  %9 = load i8, i8* %arrayidx4, align 1
  %conv5 = zext i8 %9 to i32
  %cmp6 = icmp eq i32 %conv5, 0
  br i1 %cmp6, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %if.then
  %10 = load i8*, i8** %s.addr, align 8
  %arrayidx8 = getelementptr inbounds i8, i8* %10, i64 3
  %11 = load i8, i8* %arrayidx8, align 1
  %conv9 = zext i8 %11 to i32
  %cmp10 = icmp eq i32 %conv9, 0
  br i1 %cmp10, label %if.then.12, label %if.end

if.then.12:                                       ; preds = %land.lhs.true
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.229, i32 0, i32 0))
  br label %if.end

if.end:                                           ; preds = %if.then.12, %land.lhs.true, %if.then
  %12 = load i8*, i8** %s.addr, align 8
  %add.ptr = getelementptr inbounds i8, i8* %12, i64 2
  store i8* %add.ptr, i8** %s.addr, align 8
  br label %utf16le

utf16le:                                          ; preds = %if.then.133, %if.end
  %13 = load i8*, i8** @PL_bufend, align 8
  %14 = load i8*, i8** %s.addr, align 8
  %cmp13 = icmp ugt i8* %13, %14
  br i1 %cmp13, label %if.then.15, label %if.end.28

if.then.15:                                       ; preds = %utf16le
  %call = call %struct.sv* @Perl_filter_add(i32 (i32, %struct.sv*, i32)* @utf16rev_textfilter, %struct.sv* null)
  %15 = load i8*, i8** @PL_bufend, align 8
  %16 = load i8*, i8** %s.addr, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %15 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %16 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %mul = mul nsw i64 %sub.ptr.sub, 3
  %div = sdiv i64 %mul, 2
  %add = add nsw i64 %div, 1
  %mul16 = mul i64 %add, 1
  %call17 = call i8* @Perl_safesysmalloc(i64 %mul16)
  store i8* %call17, i8** %news, align 8
  %17 = load i8*, i8** %s.addr, align 8
  %18 = load i8*, i8** %news, align 8
  %19 = load i8*, i8** @PL_bufend, align 8
  %20 = load i8*, i8** %s.addr, align 8
  %sub.ptr.lhs.cast18 = ptrtoint i8* %19 to i64
  %sub.ptr.rhs.cast19 = ptrtoint i8* %20 to i64
  %sub.ptr.sub20 = sub i64 %sub.ptr.lhs.cast18, %sub.ptr.rhs.cast19
  %sub = sub nsw i64 %sub.ptr.sub20, 1
  %conv21 = trunc i64 %sub to i32
  %call22 = call i8* @Perl_utf16_to_utf8_reversed(i8* %17, i8* %18, i32 %conv21, i32* %newlen)
  %21 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %22 = load i8*, i8** %news, align 8
  %23 = load i32, i32* %newlen, align 4
  %conv23 = sext i32 %23 to i64
  call void @Perl_sv_setpvn(%struct.sv* %21, i8* %22, i64 %conv23)
  %24 = load i8*, i8** %news, align 8
  call void @Perl_safesysfree(i8* %24)
  %25 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %25, i32 0, i32 2
  %26 = load i32, i32* %sv_flags, align 4
  %or = or i32 %26, 536870912
  store i32 %or, i32* %sv_flags, align 4
  %27 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_any24 = getelementptr inbounds %struct.sv, %struct.sv* %27, i32 0, i32 0
  %28 = load i8*, i8** %sv_any24, align 8
  %29 = bitcast i8* %28 to %struct.xpv*
  %xpv_pv = getelementptr inbounds %struct.xpv, %struct.xpv* %29, i32 0, i32 0
  %30 = load i8*, i8** %xpv_pv, align 8
  store i8* %30, i8** %s.addr, align 8
  %31 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_any25 = getelementptr inbounds %struct.sv, %struct.sv* %31, i32 0, i32 0
  %32 = load i8*, i8** %sv_any25, align 8
  %33 = bitcast i8* %32 to %struct.xpv*
  %xpv_pv26 = getelementptr inbounds %struct.xpv, %struct.xpv* %33, i32 0, i32 0
  %34 = load i8*, i8** %xpv_pv26, align 8
  %35 = load i32, i32* %newlen, align 4
  %idx.ext = sext i32 %35 to i64
  %add.ptr27 = getelementptr inbounds i8, i8* %34, i64 %idx.ext
  store i8* %add.ptr27, i8** @PL_bufend, align 8
  br label %if.end.28

if.end.28:                                        ; preds = %if.then.15, %utf16le
  br label %if.end.29

if.end.29:                                        ; preds = %if.end.28, %sw.bb
  br label %sw.epilog

sw.bb.30:                                         ; preds = %entry
  %36 = load i8*, i8** %s.addr, align 8
  %arrayidx31 = getelementptr inbounds i8, i8* %36, i64 1
  %37 = load i8, i8* %arrayidx31, align 1
  %conv32 = zext i8 %37 to i32
  %cmp33 = icmp eq i32 %conv32, 255
  br i1 %cmp33, label %if.then.35, label %if.end.66

if.then.35:                                       ; preds = %sw.bb.30
  %38 = load i8*, i8** %s.addr, align 8
  %add.ptr36 = getelementptr inbounds i8, i8* %38, i64 2
  store i8* %add.ptr36, i8** %s.addr, align 8
  br label %utf16be

utf16be:                                          ; preds = %if.then.112, %if.then.35
  %39 = load i8*, i8** @PL_bufend, align 8
  %40 = load i8*, i8** %s.addr, align 8
  %cmp37 = icmp ugt i8* %39, %40
  br i1 %cmp37, label %if.then.39, label %if.end.65

if.then.39:                                       ; preds = %utf16be
  %call42 = call %struct.sv* @Perl_filter_add(i32 (i32, %struct.sv*, i32)* @utf16_textfilter, %struct.sv* null)
  %41 = load i8*, i8** @PL_bufend, align 8
  %42 = load i8*, i8** %s.addr, align 8
  %sub.ptr.lhs.cast43 = ptrtoint i8* %41 to i64
  %sub.ptr.rhs.cast44 = ptrtoint i8* %42 to i64
  %sub.ptr.sub45 = sub i64 %sub.ptr.lhs.cast43, %sub.ptr.rhs.cast44
  %mul46 = mul nsw i64 %sub.ptr.sub45, 3
  %div47 = sdiv i64 %mul46, 2
  %add48 = add nsw i64 %div47, 1
  %mul49 = mul i64 %add48, 1
  %call50 = call i8* @Perl_safesysmalloc(i64 %mul49)
  store i8* %call50, i8** %news40, align 8
  %43 = load i8*, i8** %s.addr, align 8
  %44 = load i8*, i8** %news40, align 8
  %45 = load i8*, i8** @PL_bufend, align 8
  %46 = load i8*, i8** %s.addr, align 8
  %sub.ptr.lhs.cast51 = ptrtoint i8* %45 to i64
  %sub.ptr.rhs.cast52 = ptrtoint i8* %46 to i64
  %sub.ptr.sub53 = sub i64 %sub.ptr.lhs.cast51, %sub.ptr.rhs.cast52
  %conv54 = trunc i64 %sub.ptr.sub53 to i32
  %call55 = call i8* @Perl_utf16_to_utf8(i8* %43, i8* %44, i32 %conv54, i32* %newlen41)
  %47 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %48 = load i8*, i8** %news40, align 8
  %49 = load i32, i32* %newlen41, align 4
  %conv56 = sext i32 %49 to i64
  call void @Perl_sv_setpvn(%struct.sv* %47, i8* %48, i64 %conv56)
  %50 = load i8*, i8** %news40, align 8
  call void @Perl_safesysfree(i8* %50)
  %51 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_flags57 = getelementptr inbounds %struct.sv, %struct.sv* %51, i32 0, i32 2
  %52 = load i32, i32* %sv_flags57, align 4
  %or58 = or i32 %52, 536870912
  store i32 %or58, i32* %sv_flags57, align 4
  %53 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_any59 = getelementptr inbounds %struct.sv, %struct.sv* %53, i32 0, i32 0
  %54 = load i8*, i8** %sv_any59, align 8
  %55 = bitcast i8* %54 to %struct.xpv*
  %xpv_pv60 = getelementptr inbounds %struct.xpv, %struct.xpv* %55, i32 0, i32 0
  %56 = load i8*, i8** %xpv_pv60, align 8
  store i8* %56, i8** %s.addr, align 8
  %57 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_any61 = getelementptr inbounds %struct.sv, %struct.sv* %57, i32 0, i32 0
  %58 = load i8*, i8** %sv_any61, align 8
  %59 = bitcast i8* %58 to %struct.xpv*
  %xpv_pv62 = getelementptr inbounds %struct.xpv, %struct.xpv* %59, i32 0, i32 0
  %60 = load i8*, i8** %xpv_pv62, align 8
  %61 = load i32, i32* %newlen41, align 4
  %idx.ext63 = sext i32 %61 to i64
  %add.ptr64 = getelementptr inbounds i8, i8* %60, i64 %idx.ext63
  store i8* %add.ptr64, i8** @PL_bufend, align 8
  br label %if.end.65

if.end.65:                                        ; preds = %if.then.39, %utf16be
  br label %if.end.66

if.end.66:                                        ; preds = %if.end.65, %sw.bb.30
  br label %sw.epilog

sw.bb.67:                                         ; preds = %entry
  %62 = load i64, i64* %slen, align 8
  %cmp68 = icmp ugt i64 %62, 2
  br i1 %cmp68, label %land.lhs.true.70, label %if.end.82

land.lhs.true.70:                                 ; preds = %sw.bb.67
  %63 = load i8*, i8** %s.addr, align 8
  %arrayidx71 = getelementptr inbounds i8, i8* %63, i64 1
  %64 = load i8, i8* %arrayidx71, align 1
  %conv72 = zext i8 %64 to i32
  %cmp73 = icmp eq i32 %conv72, 187
  br i1 %cmp73, label %land.lhs.true.75, label %if.end.82

land.lhs.true.75:                                 ; preds = %land.lhs.true.70
  %65 = load i8*, i8** %s.addr, align 8
  %arrayidx76 = getelementptr inbounds i8, i8* %65, i64 2
  %66 = load i8, i8* %arrayidx76, align 1
  %conv77 = zext i8 %66 to i32
  %cmp78 = icmp eq i32 %conv77, 191
  br i1 %cmp78, label %if.then.80, label %if.end.82

if.then.80:                                       ; preds = %land.lhs.true.75
  %67 = load i8*, i8** %s.addr, align 8
  %add.ptr81 = getelementptr inbounds i8, i8* %67, i64 3
  store i8* %add.ptr81, i8** %s.addr, align 8
  br label %if.end.82

if.end.82:                                        ; preds = %if.then.80, %land.lhs.true.75, %land.lhs.true.70, %sw.bb.67
  br label %sw.epilog

sw.bb.83:                                         ; preds = %entry
  %68 = load i64, i64* %slen, align 8
  %cmp84 = icmp ugt i64 %68, 3
  br i1 %cmp84, label %if.then.86, label %if.end.115

if.then.86:                                       ; preds = %sw.bb.83
  %69 = load i8*, i8** %s.addr, align 8
  %arrayidx87 = getelementptr inbounds i8, i8* %69, i64 1
  %70 = load i8, i8* %arrayidx87, align 1
  %conv88 = zext i8 %70 to i32
  %cmp89 = icmp eq i32 %conv88, 0
  br i1 %cmp89, label %if.then.91, label %if.else

if.then.91:                                       ; preds = %if.then.86
  %71 = load i8*, i8** %s.addr, align 8
  %arrayidx92 = getelementptr inbounds i8, i8* %71, i64 2
  %72 = load i8, i8* %arrayidx92, align 1
  %conv93 = zext i8 %72 to i32
  %cmp94 = icmp eq i32 %conv93, 254
  br i1 %cmp94, label %land.lhs.true.96, label %if.end.102

land.lhs.true.96:                                 ; preds = %if.then.91
  %73 = load i8*, i8** %s.addr, align 8
  %arrayidx97 = getelementptr inbounds i8, i8* %73, i64 3
  %74 = load i8, i8* %arrayidx97, align 1
  %conv98 = zext i8 %74 to i32
  %cmp99 = icmp eq i32 %conv98, 255
  br i1 %cmp99, label %if.then.101, label %if.end.102

if.then.101:                                      ; preds = %land.lhs.true.96
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.230, i32 0, i32 0))
  br label %if.end.102

if.end.102:                                       ; preds = %if.then.101, %land.lhs.true.96, %if.then.91
  br label %if.end.114

if.else:                                          ; preds = %if.then.86
  %75 = load i8*, i8** %s.addr, align 8
  %arrayidx103 = getelementptr inbounds i8, i8* %75, i64 2
  %76 = load i8, i8* %arrayidx103, align 1
  %conv104 = zext i8 %76 to i32
  %cmp105 = icmp eq i32 %conv104, 0
  br i1 %cmp105, label %land.lhs.true.107, label %if.end.113

land.lhs.true.107:                                ; preds = %if.else
  %77 = load i8*, i8** %s.addr, align 8
  %arrayidx108 = getelementptr inbounds i8, i8* %77, i64 3
  %78 = load i8, i8* %arrayidx108, align 1
  %conv109 = zext i8 %78 to i32
  %cmp110 = icmp ne i32 %conv109, 0
  br i1 %cmp110, label %if.then.112, label %if.end.113

if.then.112:                                      ; preds = %land.lhs.true.107
  br label %utf16be

if.end.113:                                       ; preds = %land.lhs.true.107, %if.else
  br label %if.end.114

if.end.114:                                       ; preds = %if.end.113, %if.end.102
  br label %if.end.115

if.end.115:                                       ; preds = %if.end.114, %sw.bb.83
  br label %sw.default

sw.default:                                       ; preds = %entry, %if.end.115
  %79 = load i64, i64* %slen, align 8
  %cmp116 = icmp ugt i64 %79, 3
  br i1 %cmp116, label %land.lhs.true.118, label %if.end.134

land.lhs.true.118:                                ; preds = %sw.default
  %80 = load i8*, i8** %s.addr, align 8
  %arrayidx119 = getelementptr inbounds i8, i8* %80, i64 1
  %81 = load i8, i8* %arrayidx119, align 1
  %conv120 = zext i8 %81 to i32
  %cmp121 = icmp eq i32 %conv120, 0
  br i1 %cmp121, label %land.lhs.true.123, label %if.end.134

land.lhs.true.123:                                ; preds = %land.lhs.true.118
  %82 = load i8*, i8** %s.addr, align 8
  %arrayidx124 = getelementptr inbounds i8, i8* %82, i64 2
  %83 = load i8, i8* %arrayidx124, align 1
  %conv125 = zext i8 %83 to i32
  %cmp126 = icmp ne i32 %conv125, 0
  br i1 %cmp126, label %land.lhs.true.128, label %if.end.134

land.lhs.true.128:                                ; preds = %land.lhs.true.123
  %84 = load i8*, i8** %s.addr, align 8
  %arrayidx129 = getelementptr inbounds i8, i8* %84, i64 3
  %85 = load i8, i8* %arrayidx129, align 1
  %conv130 = zext i8 %85 to i32
  %cmp131 = icmp eq i32 %conv130, 0
  br i1 %cmp131, label %if.then.133, label %if.end.134

if.then.133:                                      ; preds = %land.lhs.true.128
  br label %utf16le

if.end.134:                                       ; preds = %land.lhs.true.128, %land.lhs.true.123, %land.lhs.true.118, %sw.default
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end.134, %if.end.82, %if.end.66, %if.end.29
  %86 = load i8*, i8** %s.addr, align 8
  ret i8* %86
}

; Function Attrs: nounwind uwtable
define internal void @S_incline(i8* %s) #0 {
entry:
  %s.addr = alloca i8*, align 8
  %t = alloca i8*, align 8
  %n = alloca i8*, align 8
  %e = alloca i8*, align 8
  %ch = alloca i8, align 1
  store i8* %s, i8** %s.addr, align 8
  %0 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line = getelementptr inbounds %struct.cop, %struct.cop* %0, i32 0, i32 13
  %1 = load i32, i32* %cop_line, align 4
  %inc = add i32 %1, 1
  store i32 %inc, i32* %cop_line, align 4
  %2 = load i8*, i8** %s.addr, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %2, i32 1
  store i8* %incdec.ptr, i8** %s.addr, align 8
  %3 = load i8, i8* %2, align 1
  %conv = sext i8 %3 to i32
  %cmp = icmp ne i32 %conv, 35
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %return

if.end:                                           ; preds = %entry
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end
  %4 = load i8*, i8** %s.addr, align 8
  %5 = load i8, i8* %4, align 1
  %conv2 = sext i8 %5 to i32
  %cmp3 = icmp eq i32 %conv2, 32
  br i1 %cmp3, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %while.cond
  %6 = load i8*, i8** %s.addr, align 8
  %7 = load i8, i8* %6, align 1
  %conv5 = sext i8 %7 to i32
  %cmp6 = icmp eq i32 %conv5, 9
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %while.cond
  %8 = phi i1 [ true, %while.cond ], [ %cmp6, %lor.rhs ]
  br i1 %8, label %while.body, label %while.end

while.body:                                       ; preds = %lor.end
  %9 = load i8*, i8** %s.addr, align 8
  %incdec.ptr8 = getelementptr inbounds i8, i8* %9, i32 1
  store i8* %incdec.ptr8, i8** %s.addr, align 8
  br label %while.cond

while.end:                                        ; preds = %lor.end
  %10 = load i8*, i8** %s.addr, align 8
  %call = call i32 @strncmp(i8* %10, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.178, i32 0, i32 0), i64 4)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.else, label %if.then.9

if.then.9:                                        ; preds = %while.end
  %11 = load i8*, i8** %s.addr, align 8
  %add.ptr = getelementptr inbounds i8, i8* %11, i64 4
  store i8* %add.ptr, i8** %s.addr, align 8
  br label %if.end.10

if.else:                                          ; preds = %while.end
  br label %return

if.end.10:                                        ; preds = %if.then.9
  %12 = load i8*, i8** %s.addr, align 8
  %13 = load i8, i8* %12, align 1
  %conv11 = sext i8 %13 to i32
  %cmp12 = icmp eq i32 %conv11, 32
  br i1 %cmp12, label %if.then.17, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end.10
  %14 = load i8*, i8** %s.addr, align 8
  %15 = load i8, i8* %14, align 1
  %conv14 = sext i8 %15 to i32
  %cmp15 = icmp eq i32 %conv14, 9
  br i1 %cmp15, label %if.then.17, label %if.else.19

if.then.17:                                       ; preds = %lor.lhs.false, %if.end.10
  %16 = load i8*, i8** %s.addr, align 8
  %incdec.ptr18 = getelementptr inbounds i8, i8* %16, i32 1
  store i8* %incdec.ptr18, i8** %s.addr, align 8
  br label %if.end.20

if.else.19:                                       ; preds = %lor.lhs.false
  br label %return

if.end.20:                                        ; preds = %if.then.17
  br label %while.cond.21

while.cond.21:                                    ; preds = %while.body.30, %if.end.20
  %17 = load i8*, i8** %s.addr, align 8
  %18 = load i8, i8* %17, align 1
  %conv22 = sext i8 %18 to i32
  %cmp23 = icmp eq i32 %conv22, 32
  br i1 %cmp23, label %lor.end.29, label %lor.rhs.25

lor.rhs.25:                                       ; preds = %while.cond.21
  %19 = load i8*, i8** %s.addr, align 8
  %20 = load i8, i8* %19, align 1
  %conv26 = sext i8 %20 to i32
  %cmp27 = icmp eq i32 %conv26, 9
  br label %lor.end.29

lor.end.29:                                       ; preds = %lor.rhs.25, %while.cond.21
  %21 = phi i1 [ true, %while.cond.21 ], [ %cmp27, %lor.rhs.25 ]
  br i1 %21, label %while.body.30, label %while.end.32

while.body.30:                                    ; preds = %lor.end.29
  %22 = load i8*, i8** %s.addr, align 8
  %incdec.ptr31 = getelementptr inbounds i8, i8* %22, i32 1
  store i8* %incdec.ptr31, i8** %s.addr, align 8
  br label %while.cond.21

while.end.32:                                     ; preds = %lor.end.29
  %23 = load i8*, i8** %s.addr, align 8
  %24 = load i8, i8* %23, align 1
  %conv33 = sext i8 %24 to i32
  %cmp34 = icmp sge i32 %conv33, 48
  br i1 %cmp34, label %land.lhs.true, label %if.then.39

land.lhs.true:                                    ; preds = %while.end.32
  %25 = load i8*, i8** %s.addr, align 8
  %26 = load i8, i8* %25, align 1
  %conv36 = sext i8 %26 to i32
  %cmp37 = icmp sle i32 %conv36, 57
  br i1 %cmp37, label %if.end.40, label %if.then.39

if.then.39:                                       ; preds = %land.lhs.true, %while.end.32
  br label %return

if.end.40:                                        ; preds = %land.lhs.true
  %27 = load i8*, i8** %s.addr, align 8
  store i8* %27, i8** %n, align 8
  br label %while.cond.41

while.cond.41:                                    ; preds = %while.body.48, %if.end.40
  %28 = load i8*, i8** %s.addr, align 8
  %29 = load i8, i8* %28, align 1
  %conv42 = sext i8 %29 to i32
  %cmp43 = icmp sge i32 %conv42, 48
  br i1 %cmp43, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond.41
  %30 = load i8*, i8** %s.addr, align 8
  %31 = load i8, i8* %30, align 1
  %conv45 = sext i8 %31 to i32
  %cmp46 = icmp sle i32 %conv45, 57
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond.41
  %32 = phi i1 [ false, %while.cond.41 ], [ %cmp46, %land.rhs ]
  br i1 %32, label %while.body.48, label %while.end.50

while.body.48:                                    ; preds = %land.end
  %33 = load i8*, i8** %s.addr, align 8
  %incdec.ptr49 = getelementptr inbounds i8, i8* %33, i32 1
  store i8* %incdec.ptr49, i8** %s.addr, align 8
  br label %while.cond.41

while.end.50:                                     ; preds = %land.end
  br label %while.cond.51

while.cond.51:                                    ; preds = %while.body.60, %while.end.50
  %34 = load i8*, i8** %s.addr, align 8
  %35 = load i8, i8* %34, align 1
  %conv52 = sext i8 %35 to i32
  %cmp53 = icmp eq i32 %conv52, 32
  br i1 %cmp53, label %lor.end.59, label %lor.rhs.55

lor.rhs.55:                                       ; preds = %while.cond.51
  %36 = load i8*, i8** %s.addr, align 8
  %37 = load i8, i8* %36, align 1
  %conv56 = sext i8 %37 to i32
  %cmp57 = icmp eq i32 %conv56, 9
  br label %lor.end.59

lor.end.59:                                       ; preds = %lor.rhs.55, %while.cond.51
  %38 = phi i1 [ true, %while.cond.51 ], [ %cmp57, %lor.rhs.55 ]
  br i1 %38, label %while.body.60, label %while.end.62

while.body.60:                                    ; preds = %lor.end.59
  %39 = load i8*, i8** %s.addr, align 8
  %incdec.ptr61 = getelementptr inbounds i8, i8* %39, i32 1
  store i8* %incdec.ptr61, i8** %s.addr, align 8
  br label %while.cond.51

while.end.62:                                     ; preds = %lor.end.59
  %40 = load i8*, i8** %s.addr, align 8
  %41 = load i8, i8* %40, align 1
  %conv63 = sext i8 %41 to i32
  %cmp64 = icmp eq i32 %conv63, 34
  br i1 %cmp64, label %land.lhs.true.66, label %if.else.73

land.lhs.true.66:                                 ; preds = %while.end.62
  %42 = load i8*, i8** %s.addr, align 8
  %add.ptr67 = getelementptr inbounds i8, i8* %42, i64 1
  %call68 = call i8* @strchr(i8* %add.ptr67, i32 34)
  store i8* %call68, i8** %t, align 8
  %tobool69 = icmp ne i8* %call68, null
  br i1 %tobool69, label %if.then.70, label %if.else.73

if.then.70:                                       ; preds = %land.lhs.true.66
  %43 = load i8*, i8** %s.addr, align 8
  %incdec.ptr71 = getelementptr inbounds i8, i8* %43, i32 1
  store i8* %incdec.ptr71, i8** %s.addr, align 8
  %44 = load i8*, i8** %t, align 8
  %add.ptr72 = getelementptr inbounds i8, i8* %44, i64 1
  store i8* %add.ptr72, i8** %e, align 8
  br label %if.end.95

if.else.73:                                       ; preds = %land.lhs.true.66, %while.end.62
  %45 = load i8*, i8** %s.addr, align 8
  store i8* %45, i8** %t, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.else.73
  %46 = load i8*, i8** %t, align 8
  %47 = load i8, i8* %46, align 1
  %conv74 = sext i8 %47 to i32
  %cmp75 = icmp eq i32 %conv74, 32
  br i1 %cmp75, label %lor.end.93, label %lor.lhs.false.77

lor.lhs.false.77:                                 ; preds = %for.cond
  %48 = load i8*, i8** %t, align 8
  %49 = load i8, i8* %48, align 1
  %conv78 = sext i8 %49 to i32
  %cmp79 = icmp eq i32 %conv78, 9
  br i1 %cmp79, label %lor.end.93, label %lor.lhs.false.81

lor.lhs.false.81:                                 ; preds = %lor.lhs.false.77
  %50 = load i8*, i8** %t, align 8
  %51 = load i8, i8* %50, align 1
  %conv82 = sext i8 %51 to i32
  %cmp83 = icmp eq i32 %conv82, 10
  br i1 %cmp83, label %lor.end.93, label %lor.lhs.false.85

lor.lhs.false.85:                                 ; preds = %lor.lhs.false.81
  %52 = load i8*, i8** %t, align 8
  %53 = load i8, i8* %52, align 1
  %conv86 = sext i8 %53 to i32
  %cmp87 = icmp eq i32 %conv86, 13
  br i1 %cmp87, label %lor.end.93, label %lor.rhs.89

lor.rhs.89:                                       ; preds = %lor.lhs.false.85
  %54 = load i8*, i8** %t, align 8
  %55 = load i8, i8* %54, align 1
  %conv90 = sext i8 %55 to i32
  %cmp91 = icmp eq i32 %conv90, 12
  br label %lor.end.93

lor.end.93:                                       ; preds = %lor.rhs.89, %lor.lhs.false.85, %lor.lhs.false.81, %lor.lhs.false.77, %for.cond
  %56 = phi i1 [ true, %lor.lhs.false.85 ], [ true, %lor.lhs.false.81 ], [ true, %lor.lhs.false.77 ], [ true, %for.cond ], [ %cmp91, %lor.rhs.89 ]
  %lnot = xor i1 %56, true
  br i1 %lnot, label %for.body, label %for.end

for.body:                                         ; preds = %lor.end.93
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %57 = load i8*, i8** %t, align 8
  %incdec.ptr94 = getelementptr inbounds i8, i8* %57, i32 1
  store i8* %incdec.ptr94, i8** %t, align 8
  br label %for.cond

for.end:                                          ; preds = %lor.end.93
  %58 = load i8*, i8** %t, align 8
  store i8* %58, i8** %e, align 8
  br label %if.end.95

if.end.95:                                        ; preds = %for.end, %if.then.70
  br label %while.cond.96

while.cond.96:                                    ; preds = %while.body.113, %if.end.95
  %59 = load i8*, i8** %e, align 8
  %60 = load i8, i8* %59, align 1
  %conv97 = sext i8 %60 to i32
  %cmp98 = icmp eq i32 %conv97, 32
  br i1 %cmp98, label %lor.end.112, label %lor.lhs.false.100

lor.lhs.false.100:                                ; preds = %while.cond.96
  %61 = load i8*, i8** %e, align 8
  %62 = load i8, i8* %61, align 1
  %conv101 = sext i8 %62 to i32
  %cmp102 = icmp eq i32 %conv101, 9
  br i1 %cmp102, label %lor.end.112, label %lor.lhs.false.104

lor.lhs.false.104:                                ; preds = %lor.lhs.false.100
  %63 = load i8*, i8** %e, align 8
  %64 = load i8, i8* %63, align 1
  %conv105 = sext i8 %64 to i32
  %cmp106 = icmp eq i32 %conv105, 13
  br i1 %cmp106, label %lor.end.112, label %lor.rhs.108

lor.rhs.108:                                      ; preds = %lor.lhs.false.104
  %65 = load i8*, i8** %e, align 8
  %66 = load i8, i8* %65, align 1
  %conv109 = sext i8 %66 to i32
  %cmp110 = icmp eq i32 %conv109, 12
  br label %lor.end.112

lor.end.112:                                      ; preds = %lor.rhs.108, %lor.lhs.false.104, %lor.lhs.false.100, %while.cond.96
  %67 = phi i1 [ true, %lor.lhs.false.104 ], [ true, %lor.lhs.false.100 ], [ true, %while.cond.96 ], [ %cmp110, %lor.rhs.108 ]
  br i1 %67, label %while.body.113, label %while.end.115

while.body.113:                                   ; preds = %lor.end.112
  %68 = load i8*, i8** %e, align 8
  %incdec.ptr114 = getelementptr inbounds i8, i8* %68, i32 1
  store i8* %incdec.ptr114, i8** %e, align 8
  br label %while.cond.96

while.end.115:                                    ; preds = %lor.end.112
  %69 = load i8*, i8** %e, align 8
  %70 = load i8, i8* %69, align 1
  %conv116 = sext i8 %70 to i32
  %cmp117 = icmp ne i32 %conv116, 10
  br i1 %cmp117, label %land.lhs.true.119, label %if.end.124

land.lhs.true.119:                                ; preds = %while.end.115
  %71 = load i8*, i8** %e, align 8
  %72 = load i8, i8* %71, align 1
  %conv120 = sext i8 %72 to i32
  %cmp121 = icmp ne i32 %conv120, 0
  br i1 %cmp121, label %if.then.123, label %if.end.124

if.then.123:                                      ; preds = %land.lhs.true.119
  br label %return

if.end.124:                                       ; preds = %land.lhs.true.119, %while.end.115
  %73 = load i8*, i8** %t, align 8
  %74 = load i8, i8* %73, align 1
  store i8 %74, i8* %ch, align 1
  %75 = load i8*, i8** %t, align 8
  store i8 0, i8* %75, align 1
  %76 = load i8*, i8** %t, align 8
  %77 = load i8*, i8** %s.addr, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %76 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %77 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %cmp125 = icmp sgt i64 %sub.ptr.sub, 0
  br i1 %cmp125, label %if.then.127, label %if.end.136

if.then.127:                                      ; preds = %if.end.124
  %78 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_filegv = getelementptr inbounds %struct.cop, %struct.cop* %78, i32 0, i32 10
  %79 = load %struct.gv*, %struct.gv** %cop_filegv, align 8
  %80 = bitcast %struct.gv* %79 to %struct.sv*
  call void @Perl_sv_free(%struct.sv* %80)
  %81 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_filegv128 = getelementptr inbounds %struct.cop, %struct.cop* %81, i32 0, i32 10
  store %struct.gv* null, %struct.gv** %cop_filegv128, align 8
  %82 = load i8*, i8** %s.addr, align 8
  %call129 = call %struct.gv* @Perl_gv_fetchfile(i8* %82)
  %83 = bitcast %struct.gv* %call129 to %struct.sv*
  store %struct.sv* %83, %struct.sv** @PL_Sv, align 8
  %84 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %tobool130 = icmp ne %struct.sv* %84, null
  br i1 %tobool130, label %land.rhs.131, label %land.end.134

land.rhs.131:                                     ; preds = %if.then.127
  %85 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_refcnt = getelementptr inbounds %struct.sv, %struct.sv* %85, i32 0, i32 1
  %86 = load i32, i32* %sv_refcnt, align 4
  %inc132 = add i32 %86, 1
  store i32 %inc132, i32* %sv_refcnt, align 4
  %tobool133 = icmp ne i32 %inc132, 0
  br label %land.end.134

land.end.134:                                     ; preds = %land.rhs.131, %if.then.127
  %87 = phi i1 [ false, %if.then.127 ], [ %tobool133, %land.rhs.131 ]
  %land.ext = zext i1 %87 to i32
  %88 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %89 = bitcast %struct.sv* %88 to %struct.gv*
  %90 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_filegv135 = getelementptr inbounds %struct.cop, %struct.cop* %90, i32 0, i32 10
  store %struct.gv* %89, %struct.gv** %cop_filegv135, align 8
  br label %if.end.136

if.end.136:                                       ; preds = %land.end.134, %if.end.124
  %91 = load i8, i8* %ch, align 1
  %92 = load i8*, i8** %t, align 8
  store i8 %91, i8* %92, align 1
  %93 = load i8*, i8** %n, align 8
  %call137 = call i32 @atoi(i8* %93)
  %sub = sub nsw i32 %call137, 1
  %94 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line138 = getelementptr inbounds %struct.cop, %struct.cop* %94, i32 0, i32 13
  store i32 %sub, i32* %cop_line138, align 4
  br label %return

return:                                           ; preds = %if.end.136, %if.then.123, %if.then.39, %if.else.19, %if.else, %if.then
  ret void
}

declare i8* @Perl_instr(i8*, i8*) #1

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #2

declare i32 @execv(i8*, i8**) #1

declare i8* @Perl_moreswitches(i8*) #1

declare void @Perl_init_argv_symbols(i32, i8**) #1

declare %struct.gv* @Perl_gv_fetchfile(i8*) #1

; Function Attrs: nounwind uwtable
define internal i8* @S_force_word(i8* %start, i32 %token, i32 %check_keyword, i32 %allow_pack, i32 %allow_initial_tick) #0 {
entry:
  %retval = alloca i8*, align 8
  %start.addr = alloca i8*, align 8
  %token.addr = alloca i32, align 4
  %check_keyword.addr = alloca i32, align 4
  %allow_pack.addr = alloca i32, align 4
  %allow_initial_tick.addr = alloca i32, align 4
  %s = alloca i8*, align 8
  %len = alloca i64, align 8
  store i8* %start, i8** %start.addr, align 8
  store i32 %token, i32* %token.addr, align 4
  store i32 %check_keyword, i32* %check_keyword.addr, align 4
  store i32 %allow_pack, i32* %allow_pack.addr, align 4
  store i32 %allow_initial_tick, i32* %allow_initial_tick.addr, align 4
  %0 = load i8*, i8** %start.addr, align 8
  %call = call i8* @S_skipspace(i8* %0)
  store i8* %call, i8** %start.addr, align 8
  %1 = load i8*, i8** %start.addr, align 8
  store i8* %1, i8** %s, align 8
  %2 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private = getelementptr inbounds %struct.cop, %struct.cop* %2, i32 0, i32 7
  %3 = load i8, i8* %op_private, align 1
  %conv = zext i8 %3 to i32
  %and = and i32 %conv, 8
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %cond.true, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %4 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %tobool1 = icmp ne %struct.sv* %4, null
  br i1 %tobool1, label %land.lhs.true, label %lor.lhs.false.9

land.lhs.true:                                    ; preds = %lor.lhs.false
  %5 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %5, i32 0, i32 2
  %6 = load i32, i32* %sv_flags, align 4
  %and2 = and i32 %6, 536870912
  %tobool3 = icmp ne i32 %and2, 0
  br i1 %tobool3, label %land.lhs.true.4, label %lor.lhs.false.9

land.lhs.true.4:                                  ; preds = %land.lhs.true
  %7 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private5 = getelementptr inbounds %struct.cop, %struct.cop* %7, i32 0, i32 7
  %8 = load i8, i8* %op_private5, align 1
  %conv6 = zext i8 %8 to i32
  %and7 = and i32 %conv6, 8
  %tobool8 = icmp ne i32 %and7, 0
  br i1 %tobool8, label %lor.lhs.false.9, label %lor.lhs.false.12

lor.lhs.false.9:                                  ; preds = %land.lhs.true.4, %land.lhs.true, %lor.lhs.false
  %9 = load i32, i32* @PL_hints, align 4
  %and10 = and i32 %9, 8388608
  %tobool11 = icmp ne i32 %and10, 0
  br i1 %tobool11, label %lor.lhs.false.12, label %cond.true

lor.lhs.false.12:                                 ; preds = %lor.lhs.false.9, %land.lhs.true.4
  %10 = load i8*, i8** %s, align 8
  %11 = load i8, i8* %10, align 1
  %conv13 = zext i8 %11 to i32
  %cmp = icmp slt i32 %conv13, 192
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %lor.lhs.false.12, %lor.lhs.false.9, %entry
  %12 = load i8*, i8** %s, align 8
  %13 = load i8, i8* %12, align 1
  %conv15 = sext i8 %13 to i32
  %cmp16 = icmp sge i32 %conv15, 65
  br i1 %cmp16, label %land.lhs.true.18, label %lor.lhs.false.22

land.lhs.true.18:                                 ; preds = %cond.true
  %14 = load i8*, i8** %s, align 8
  %15 = load i8, i8* %14, align 1
  %conv19 = sext i8 %15 to i32
  %cmp20 = icmp sle i32 %conv19, 90
  br i1 %cmp20, label %if.then, label %lor.lhs.false.22

lor.lhs.false.22:                                 ; preds = %land.lhs.true.18, %cond.true
  %16 = load i8*, i8** %s, align 8
  %17 = load i8, i8* %16, align 1
  %conv23 = sext i8 %17 to i32
  %cmp24 = icmp sge i32 %conv23, 97
  br i1 %cmp24, label %land.lhs.true.26, label %lor.lhs.false.30

land.lhs.true.26:                                 ; preds = %lor.lhs.false.22
  %18 = load i8*, i8** %s, align 8
  %19 = load i8, i8* %18, align 1
  %conv27 = sext i8 %19 to i32
  %cmp28 = icmp sle i32 %conv27, 122
  br i1 %cmp28, label %if.then, label %lor.lhs.false.30

lor.lhs.false.30:                                 ; preds = %land.lhs.true.26, %lor.lhs.false.22
  %20 = load i8*, i8** %s, align 8
  %21 = load i8, i8* %20, align 1
  %conv31 = sext i8 %21 to i32
  %cmp32 = icmp eq i32 %conv31, 95
  br i1 %cmp32, label %if.then, label %lor.lhs.false.40

cond.false:                                       ; preds = %lor.lhs.false.12
  %22 = load i8*, i8** %s, align 8
  %call34 = call signext i8 @Perl_is_utf8_idcont(i8* %22)
  %conv35 = sext i8 %call34 to i32
  %tobool36 = icmp ne i32 %conv35, 0
  br i1 %tobool36, label %land.lhs.true.37, label %lor.lhs.false.40

land.lhs.true.37:                                 ; preds = %cond.false
  %23 = load i8*, i8** %s, align 8
  %call38 = call signext i8 @Perl_is_utf8_digit(i8* %23)
  %tobool39 = icmp ne i8 %call38, 0
  br i1 %tobool39, label %lor.lhs.false.40, label %if.then

lor.lhs.false.40:                                 ; preds = %land.lhs.true.37, %cond.false, %lor.lhs.false.30
  %24 = load i32, i32* %allow_pack.addr, align 4
  %tobool41 = icmp ne i32 %24, 0
  br i1 %tobool41, label %land.lhs.true.42, label %lor.lhs.false.46

land.lhs.true.42:                                 ; preds = %lor.lhs.false.40
  %25 = load i8*, i8** %s, align 8
  %26 = load i8, i8* %25, align 1
  %conv43 = sext i8 %26 to i32
  %cmp44 = icmp eq i32 %conv43, 58
  br i1 %cmp44, label %if.then, label %lor.lhs.false.46

lor.lhs.false.46:                                 ; preds = %land.lhs.true.42, %lor.lhs.false.40
  %27 = load i32, i32* %allow_initial_tick.addr, align 4
  %tobool47 = icmp ne i32 %27, 0
  br i1 %tobool47, label %land.lhs.true.48, label %if.end.106

land.lhs.true.48:                                 ; preds = %lor.lhs.false.46
  %28 = load i8*, i8** %s, align 8
  %29 = load i8, i8* %28, align 1
  %conv49 = sext i8 %29 to i32
  %cmp50 = icmp eq i32 %conv49, 39
  br i1 %cmp50, label %if.then, label %if.end.106

if.then:                                          ; preds = %land.lhs.true.48, %land.lhs.true.42, %land.lhs.true.37, %lor.lhs.false.30, %land.lhs.true.26, %land.lhs.true.18
  %30 = load i8*, i8** %s, align 8
  %31 = load i32, i32* %allow_pack.addr, align 4
  %call52 = call i8* @S_scan_word(i8* %30, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i32 0), i64 256, i32 %31, i64* %len)
  store i8* %call52, i8** %s, align 8
  %32 = load i32, i32* %check_keyword.addr, align 4
  %tobool53 = icmp ne i32 %32, 0
  br i1 %tobool53, label %land.lhs.true.54, label %if.end

land.lhs.true.54:                                 ; preds = %if.then
  %33 = load i64, i64* %len, align 8
  %conv55 = trunc i64 %33 to i32
  %call56 = call i32 @Perl_keyword(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i32 0), i32 %conv55)
  %tobool57 = icmp ne i32 %call56, 0
  br i1 %tobool57, label %if.then.58, label %if.end

if.then.58:                                       ; preds = %land.lhs.true.54
  %34 = load i8*, i8** %start.addr, align 8
  store i8* %34, i8** %retval
  br label %return

if.end:                                           ; preds = %land.lhs.true.54, %if.then
  %35 = load i32, i32* %token.addr, align 4
  %cmp59 = icmp eq i32 %35, 258
  br i1 %cmp59, label %if.then.61, label %if.end.68

if.then.61:                                       ; preds = %if.end
  %36 = load i8*, i8** %s, align 8
  %call62 = call i8* @S_skipspace(i8* %36)
  store i8* %call62, i8** %s, align 8
  %37 = load i8*, i8** %s, align 8
  %38 = load i8, i8* %37, align 1
  %conv63 = sext i8 %38 to i32
  %cmp64 = icmp eq i32 %conv63, 40
  br i1 %cmp64, label %if.then.66, label %if.else

if.then.66:                                       ; preds = %if.then.61
  store i32 1, i32* @PL_expect, align 4
  br label %if.end.67

if.else:                                          ; preds = %if.then.61
  store i32 0, i32* @PL_expect, align 4
  br label %if.end.67

if.end.67:                                        ; preds = %if.else, %if.then.66
  br label %if.end.68

if.end.68:                                        ; preds = %if.end.67, %if.end
  %call69 = call %struct.sv* @Perl_newSVpv(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i32 0), i64 0)
  %call70 = call %struct.op* @Perl_newSVOP(i32 5, i32 0, %struct.sv* %call69)
  %39 = load i32, i32* @PL_nexttoke, align 4
  %idxprom = sext i32 %39 to i64
  %arrayidx = getelementptr inbounds [5 x %union.YYSTYPE], [5 x %union.YYSTYPE]* @PL_nextval, i32 0, i64 %idxprom
  %opval = bitcast %union.YYSTYPE* %arrayidx to %struct.op**
  store %struct.op* %call70, %struct.op** %opval, align 8
  %40 = load i32, i32* @PL_nexttoke, align 4
  %idxprom71 = sext i32 %40 to i64
  %arrayidx72 = getelementptr inbounds [5 x %union.YYSTYPE], [5 x %union.YYSTYPE]* @PL_nextval, i32 0, i64 %idxprom71
  %opval73 = bitcast %union.YYSTYPE* %arrayidx72 to %struct.op**
  %41 = load %struct.op*, %struct.op** %opval73, align 8
  %op_private74 = getelementptr inbounds %struct.op, %struct.op* %41, i32 0, i32 7
  %42 = load i8, i8* %op_private74, align 1
  %conv75 = zext i8 %42 to i32
  %or = or i32 %conv75, 64
  %conv76 = trunc i32 %or to i8
  store i8 %conv76, i8* %op_private74, align 1
  %43 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %tobool77 = icmp ne %struct.sv* %43, null
  br i1 %tobool77, label %land.lhs.true.78, label %lor.lhs.false.87

land.lhs.true.78:                                 ; preds = %if.end.68
  %44 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_flags79 = getelementptr inbounds %struct.sv, %struct.sv* %44, i32 0, i32 2
  %45 = load i32, i32* %sv_flags79, align 4
  %and80 = and i32 %45, 536870912
  %tobool81 = icmp ne i32 %and80, 0
  br i1 %tobool81, label %land.lhs.true.82, label %lor.lhs.false.87

land.lhs.true.82:                                 ; preds = %land.lhs.true.78
  %46 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private83 = getelementptr inbounds %struct.cop, %struct.cop* %46, i32 0, i32 7
  %47 = load i8, i8* %op_private83, align 1
  %conv84 = zext i8 %47 to i32
  %and85 = and i32 %conv84, 8
  %tobool86 = icmp ne i32 %and85, 0
  br i1 %tobool86, label %lor.lhs.false.87, label %land.lhs.true.90

lor.lhs.false.87:                                 ; preds = %land.lhs.true.82, %land.lhs.true.78, %if.end.68
  %48 = load i32, i32* @PL_hints, align 4
  %and88 = and i32 %48, 8388608
  %tobool89 = icmp ne i32 %and88, 0
  br i1 %tobool89, label %land.lhs.true.90, label %if.end.105

land.lhs.true.90:                                 ; preds = %lor.lhs.false.87, %land.lhs.true.82
  %49 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private91 = getelementptr inbounds %struct.cop, %struct.cop* %49, i32 0, i32 7
  %50 = load i8, i8* %op_private91, align 1
  %conv92 = zext i8 %50 to i32
  %and93 = and i32 %conv92, 8
  %tobool94 = icmp ne i32 %and93, 0
  br i1 %tobool94, label %if.end.105, label %land.lhs.true.95

land.lhs.true.95:                                 ; preds = %land.lhs.true.90
  %51 = load i64, i64* %len, align 8
  %call96 = call signext i8 @Perl_is_utf8_string(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i32 0), i64 %51)
  %conv97 = sext i8 %call96 to i32
  %tobool98 = icmp ne i32 %conv97, 0
  br i1 %tobool98, label %if.then.99, label %if.end.105

if.then.99:                                       ; preds = %land.lhs.true.95
  %52 = load i32, i32* @PL_nexttoke, align 4
  %idxprom100 = sext i32 %52 to i64
  %arrayidx101 = getelementptr inbounds [5 x %union.YYSTYPE], [5 x %union.YYSTYPE]* @PL_nextval, i32 0, i64 %idxprom100
  %opval102 = bitcast %union.YYSTYPE* %arrayidx101 to %struct.op**
  %53 = load %struct.op*, %struct.op** %opval102, align 8
  %54 = bitcast %struct.op* %53 to %struct.svop*
  %op_sv = getelementptr inbounds %struct.svop, %struct.svop* %54, i32 0, i32 8
  %55 = load %struct.sv*, %struct.sv** %op_sv, align 8
  %sv_flags103 = getelementptr inbounds %struct.sv, %struct.sv* %55, i32 0, i32 2
  %56 = load i32, i32* %sv_flags103, align 4
  %or104 = or i32 %56, 536870912
  store i32 %or104, i32* %sv_flags103, align 4
  br label %if.end.105

if.end.105:                                       ; preds = %if.then.99, %land.lhs.true.95, %land.lhs.true.90, %lor.lhs.false.87
  %57 = load i32, i32* %token.addr, align 4
  call void @S_force_next(i32 %57)
  br label %if.end.106

if.end.106:                                       ; preds = %if.end.105, %land.lhs.true.48, %lor.lhs.false.46
  %58 = load i8*, i8** %s, align 8
  store i8* %58, i8** %retval
  br label %return

return:                                           ; preds = %if.end.106, %if.then.58
  %59 = load i8*, i8** %retval
  ret i8* %59
}

declare %struct.gv* @Perl_gv_fetchpv(i8*, i32, i32) #1

; Function Attrs: nounwind uwtable
define internal i8* @S_skipspace(i8* %s) #0 {
entry:
  %retval = alloca i8*, align 8
  %s.addr = alloca i8*, align 8
  %prevlen = alloca i64, align 8
  %oldprevlen = alloca i64, align 8
  %oldoldprevlen = alloca i64, align 8
  %oldloplen = alloca i64, align 8
  %oldunilen = alloca i64, align 8
  %sv = alloca %struct.sv*, align 8
  store i8* %s, i8** %s.addr, align 8
  %0 = load i32, i32* @PL_lex_formbrack, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* @PL_lex_brackets, align 4
  %2 = load i32, i32* @PL_lex_formbrack, align 4
  %cmp = icmp sle i32 %1, %2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.then
  %3 = load i8*, i8** %s.addr, align 8
  %4 = load i8*, i8** @PL_bufend, align 8
  %cmp1 = icmp ult i8* %3, %4
  br i1 %cmp1, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %5 = load i8*, i8** %s.addr, align 8
  %6 = load i8, i8* %5, align 1
  %conv = sext i8 %6 to i32
  %cmp2 = icmp eq i32 %conv, 32
  br i1 %cmp2, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %land.rhs
  %7 = load i8*, i8** %s.addr, align 8
  %8 = load i8, i8* %7, align 1
  %conv4 = sext i8 %8 to i32
  %cmp5 = icmp eq i32 %conv4, 9
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %land.rhs
  %9 = phi i1 [ true, %land.rhs ], [ %cmp5, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %while.cond
  %10 = phi i1 [ false, %while.cond ], [ %9, %lor.end ]
  br i1 %10, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %11 = load i8*, i8** %s.addr, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %11, i32 1
  store i8* %incdec.ptr, i8** %s.addr, align 8
  br label %while.cond

while.end:                                        ; preds = %land.end
  %12 = load i8*, i8** %s.addr, align 8
  store i8* %12, i8** %retval
  br label %return

if.end:                                           ; preds = %land.lhs.true, %entry
  br label %for.cond

for.cond:                                         ; preds = %if.end.167, %if.then.68, %if.end
  store i64 0, i64* %oldloplen, align 8
  store i64 0, i64* %oldunilen, align 8
  br label %while.cond.7

while.cond.7:                                     ; preds = %if.end.41, %for.cond
  %13 = load i8*, i8** %s.addr, align 8
  %14 = load i8*, i8** @PL_bufend, align 8
  %cmp8 = icmp ult i8* %13, %14
  br i1 %cmp8, label %land.rhs.10, label %land.end.30

land.rhs.10:                                      ; preds = %while.cond.7
  %15 = load i8*, i8** %s.addr, align 8
  %16 = load i8, i8* %15, align 1
  %conv11 = sext i8 %16 to i32
  %cmp12 = icmp eq i32 %conv11, 32
  br i1 %cmp12, label %lor.end.29, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.rhs.10
  %17 = load i8*, i8** %s.addr, align 8
  %18 = load i8, i8* %17, align 1
  %conv14 = sext i8 %18 to i32
  %cmp15 = icmp eq i32 %conv14, 9
  br i1 %cmp15, label %lor.end.29, label %lor.lhs.false.17

lor.lhs.false.17:                                 ; preds = %lor.lhs.false
  %19 = load i8*, i8** %s.addr, align 8
  %20 = load i8, i8* %19, align 1
  %conv18 = sext i8 %20 to i32
  %cmp19 = icmp eq i32 %conv18, 10
  br i1 %cmp19, label %lor.end.29, label %lor.lhs.false.21

lor.lhs.false.21:                                 ; preds = %lor.lhs.false.17
  %21 = load i8*, i8** %s.addr, align 8
  %22 = load i8, i8* %21, align 1
  %conv22 = sext i8 %22 to i32
  %cmp23 = icmp eq i32 %conv22, 13
  br i1 %cmp23, label %lor.end.29, label %lor.rhs.25

lor.rhs.25:                                       ; preds = %lor.lhs.false.21
  %23 = load i8*, i8** %s.addr, align 8
  %24 = load i8, i8* %23, align 1
  %conv26 = sext i8 %24 to i32
  %cmp27 = icmp eq i32 %conv26, 12
  br label %lor.end.29

lor.end.29:                                       ; preds = %lor.rhs.25, %lor.lhs.false.21, %lor.lhs.false.17, %lor.lhs.false, %land.rhs.10
  %25 = phi i1 [ true, %lor.lhs.false.21 ], [ true, %lor.lhs.false.17 ], [ true, %lor.lhs.false ], [ true, %land.rhs.10 ], [ %cmp27, %lor.rhs.25 ]
  br label %land.end.30

land.end.30:                                      ; preds = %lor.end.29, %while.cond.7
  %26 = phi i1 [ false, %while.cond.7 ], [ %25, %lor.end.29 ]
  br i1 %26, label %while.body.31, label %while.end.42

while.body.31:                                    ; preds = %land.end.30
  %27 = load i8*, i8** %s.addr, align 8
  %incdec.ptr32 = getelementptr inbounds i8, i8* %27, i32 1
  store i8* %incdec.ptr32, i8** %s.addr, align 8
  %28 = load i8, i8* %27, align 1
  %conv33 = sext i8 %28 to i32
  %cmp34 = icmp eq i32 %conv33, 10
  br i1 %cmp34, label %land.lhs.true.36, label %if.end.41

land.lhs.true.36:                                 ; preds = %while.body.31
  %29 = load volatile i32, i32* @PL_in_eval, align 4
  %tobool37 = icmp ne i32 %29, 0
  br i1 %tobool37, label %land.lhs.true.38, label %if.end.41

land.lhs.true.38:                                 ; preds = %land.lhs.true.36
  %30 = load volatile %struct._PerlIO**, %struct._PerlIO*** @PL_rsfp, align 8
  %tobool39 = icmp ne %struct._PerlIO** %30, null
  br i1 %tobool39, label %if.end.41, label %if.then.40

if.then.40:                                       ; preds = %land.lhs.true.38
  %31 = load i8*, i8** %s.addr, align 8
  call void @S_incline(i8* %31)
  br label %if.end.41

if.end.41:                                        ; preds = %if.then.40, %land.lhs.true.38, %land.lhs.true.36, %while.body.31
  br label %while.cond.7

while.end.42:                                     ; preds = %land.end.30
  %32 = load i8*, i8** %s.addr, align 8
  %33 = load i8*, i8** @PL_bufend, align 8
  %cmp43 = icmp ult i8* %32, %33
  br i1 %cmp43, label %land.lhs.true.45, label %if.end.71

land.lhs.true.45:                                 ; preds = %while.end.42
  %34 = load i8*, i8** %s.addr, align 8
  %35 = load i8, i8* %34, align 1
  %conv46 = sext i8 %35 to i32
  %cmp47 = icmp eq i32 %conv46, 35
  br i1 %cmp47, label %if.then.49, label %if.end.71

if.then.49:                                       ; preds = %land.lhs.true.45
  br label %while.cond.50

while.cond.50:                                    ; preds = %while.body.58, %if.then.49
  %36 = load i8*, i8** %s.addr, align 8
  %37 = load i8*, i8** @PL_bufend, align 8
  %cmp51 = icmp ult i8* %36, %37
  br i1 %cmp51, label %land.rhs.53, label %land.end.57

land.rhs.53:                                      ; preds = %while.cond.50
  %38 = load i8*, i8** %s.addr, align 8
  %39 = load i8, i8* %38, align 1
  %conv54 = sext i8 %39 to i32
  %cmp55 = icmp ne i32 %conv54, 10
  br label %land.end.57

land.end.57:                                      ; preds = %land.rhs.53, %while.cond.50
  %40 = phi i1 [ false, %while.cond.50 ], [ %cmp55, %land.rhs.53 ]
  br i1 %40, label %while.body.58, label %while.end.60

while.body.58:                                    ; preds = %land.end.57
  %41 = load i8*, i8** %s.addr, align 8
  %incdec.ptr59 = getelementptr inbounds i8, i8* %41, i32 1
  store i8* %incdec.ptr59, i8** %s.addr, align 8
  br label %while.cond.50

while.end.60:                                     ; preds = %land.end.57
  %42 = load i8*, i8** %s.addr, align 8
  %43 = load i8*, i8** @PL_bufend, align 8
  %cmp61 = icmp ult i8* %42, %43
  br i1 %cmp61, label %if.then.63, label %if.end.70

if.then.63:                                       ; preds = %while.end.60
  %44 = load i8*, i8** %s.addr, align 8
  %incdec.ptr64 = getelementptr inbounds i8, i8* %44, i32 1
  store i8* %incdec.ptr64, i8** %s.addr, align 8
  %45 = load volatile i32, i32* @PL_in_eval, align 4
  %tobool65 = icmp ne i32 %45, 0
  br i1 %tobool65, label %land.lhs.true.66, label %if.end.69

land.lhs.true.66:                                 ; preds = %if.then.63
  %46 = load volatile %struct._PerlIO**, %struct._PerlIO*** @PL_rsfp, align 8
  %tobool67 = icmp ne %struct._PerlIO** %46, null
  br i1 %tobool67, label %if.end.69, label %if.then.68

if.then.68:                                       ; preds = %land.lhs.true.66
  %47 = load i8*, i8** %s.addr, align 8
  call void @S_incline(i8* %47)
  br label %for.cond

if.end.69:                                        ; preds = %land.lhs.true.66, %if.then.63
  br label %if.end.70

if.end.70:                                        ; preds = %if.end.69, %while.end.60
  br label %if.end.71

if.end.71:                                        ; preds = %if.end.70, %land.lhs.true.45, %while.end.42
  %48 = load i8*, i8** %s.addr, align 8
  %49 = load i8*, i8** @PL_bufend, align 8
  %cmp72 = icmp ult i8* %48, %49
  br i1 %cmp72, label %if.then.81, label %lor.lhs.false.74

lor.lhs.false.74:                                 ; preds = %if.end.71
  %50 = load volatile %struct._PerlIO**, %struct._PerlIO*** @PL_rsfp, align 8
  %tobool75 = icmp ne %struct._PerlIO** %50, null
  br i1 %tobool75, label %lor.lhs.false.76, label %if.then.81

lor.lhs.false.76:                                 ; preds = %lor.lhs.false.74
  %51 = load i32, i32* getelementptr inbounds (%struct._sublex_info, %struct._sublex_info* @PL_sublex_info, i32 0, i32 1), align 4
  %tobool77 = icmp ne i32 %51, 0
  br i1 %tobool77, label %if.then.81, label %lor.lhs.false.78

lor.lhs.false.78:                                 ; preds = %lor.lhs.false.76
  %52 = load i32, i32* @PL_lex_state, align 4
  %cmp79 = icmp eq i32 %52, 1
  br i1 %cmp79, label %if.then.81, label %if.end.82

if.then.81:                                       ; preds = %lor.lhs.false.78, %lor.lhs.false.76, %lor.lhs.false.74, %if.end.71
  %53 = load i8*, i8** %s.addr, align 8
  store i8* %53, i8** %retval
  br label %return

if.end.82:                                        ; preds = %lor.lhs.false.78
  %54 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %55 = load volatile %struct._PerlIO**, %struct._PerlIO*** @PL_rsfp, align 8
  %56 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %56, i32 0, i32 0
  %57 = load i8*, i8** %sv_any, align 8
  %58 = bitcast i8* %57 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %58, i32 0, i32 1
  %59 = load i64, i64* %xpv_cur, align 8
  store i64 %59, i64* %prevlen, align 8
  %call = call i8* @S_filter_gets(%struct.sv* %54, %struct._PerlIO** %55, i64 %59)
  store i8* %call, i8** %s.addr, align 8
  %cmp83 = icmp eq i8* %call, null
  br i1 %cmp83, label %if.then.85, label %if.end.113

if.then.85:                                       ; preds = %if.end.82
  %60 = load i8, i8* @PL_minus_p, align 1
  %tobool86 = icmp ne i8 %60, 0
  br i1 %tobool86, label %if.then.87, label %if.else

if.then.87:                                       ; preds = %if.then.85
  %61 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  call void @Perl_sv_setpv(%struct.sv* %61, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.179, i32 0, i32 0))
  store i8 0, i8* @PL_minus_p, align 1
  store i8 0, i8* @PL_minus_n, align 1
  br label %if.end.92

if.else:                                          ; preds = %if.then.85
  %62 = load i8, i8* @PL_minus_n, align 1
  %tobool88 = icmp ne i8 %62, 0
  br i1 %tobool88, label %if.then.89, label %if.else.90

if.then.89:                                       ; preds = %if.else
  %63 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  call void @Perl_sv_setpvn(%struct.sv* %63, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.23, i32 0, i32 0), i64 2)
  store i8 0, i8* @PL_minus_n, align 1
  br label %if.end.91

if.else.90:                                       ; preds = %if.else
  %64 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  call void @Perl_sv_setpvn(%struct.sv* %64, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i32 0, i32 0), i64 1)
  br label %if.end.91

if.end.91:                                        ; preds = %if.else.90, %if.then.89
  br label %if.end.92

if.end.92:                                        ; preds = %if.end.91, %if.then.87
  %65 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_any93 = getelementptr inbounds %struct.sv, %struct.sv* %65, i32 0, i32 0
  %66 = load i8*, i8** %sv_any93, align 8
  %67 = bitcast i8* %66 to %struct.xpv*
  %xpv_pv = getelementptr inbounds %struct.xpv, %struct.xpv* %67, i32 0, i32 0
  %68 = load i8*, i8** %xpv_pv, align 8
  store i8* %68, i8** @PL_linestart, align 8
  store i8* %68, i8** %s.addr, align 8
  store i8* %68, i8** @PL_bufptr, align 8
  store i8* %68, i8** @PL_oldbufptr, align 8
  store i8* %68, i8** @PL_oldoldbufptr, align 8
  %69 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_any94 = getelementptr inbounds %struct.sv, %struct.sv* %69, i32 0, i32 0
  %70 = load i8*, i8** %sv_any94, align 8
  %71 = bitcast i8* %70 to %struct.xpv*
  %xpv_pv95 = getelementptr inbounds %struct.xpv, %struct.xpv* %71, i32 0, i32 0
  %72 = load i8*, i8** %xpv_pv95, align 8
  %73 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_any96 = getelementptr inbounds %struct.sv, %struct.sv* %73, i32 0, i32 0
  %74 = load i8*, i8** %sv_any96, align 8
  %75 = bitcast i8* %74 to %struct.xpv*
  %xpv_cur97 = getelementptr inbounds %struct.xpv, %struct.xpv* %75, i32 0, i32 1
  %76 = load i64, i64* %xpv_cur97, align 8
  %add.ptr = getelementptr inbounds i8, i8* %72, i64 %76
  store i8* %add.ptr, i8** @PL_bufend, align 8
  store i8* null, i8** @PL_last_uni, align 8
  store i8* null, i8** @PL_last_lop, align 8
  %77 = load i8, i8* @PL_preprocess, align 1
  %conv98 = sext i8 %77 to i32
  %tobool99 = icmp ne i32 %conv98, 0
  br i1 %tobool99, label %land.lhs.true.100, label %if.else.104

land.lhs.true.100:                                ; preds = %if.end.92
  %78 = load volatile i32, i32* @PL_in_eval, align 4
  %tobool101 = icmp ne i32 %78, 0
  br i1 %tobool101, label %if.else.104, label %if.then.102

if.then.102:                                      ; preds = %land.lhs.true.100
  %79 = load volatile %struct._PerlIO**, %struct._PerlIO*** @PL_rsfp, align 8
  %call103 = call i32 @Perl_my_pclose(%struct._PerlIO** %79)
  br label %if.end.112

if.else.104:                                      ; preds = %land.lhs.true.100, %if.end.92
  %80 = load volatile %struct._PerlIO**, %struct._PerlIO*** @PL_rsfp, align 8
  %call105 = call %struct._PerlIO** @Perl_PerlIO_stdin()
  %cmp106 = icmp eq %struct._PerlIO** %80, %call105
  br i1 %cmp106, label %if.then.108, label %if.else.109

if.then.108:                                      ; preds = %if.else.104
  %81 = load volatile %struct._PerlIO**, %struct._PerlIO*** @PL_rsfp, align 8
  call void @Perl_PerlIO_clearerr(%struct._PerlIO** %81)
  br label %if.end.111

if.else.109:                                      ; preds = %if.else.104
  %82 = load volatile %struct._PerlIO**, %struct._PerlIO*** @PL_rsfp, align 8
  %call110 = call i32 @Perl_PerlIO_close(%struct._PerlIO** %82)
  br label %if.end.111

if.end.111:                                       ; preds = %if.else.109, %if.then.108
  br label %if.end.112

if.end.112:                                       ; preds = %if.end.111, %if.then.102
  store volatile %struct._PerlIO** null, %struct._PerlIO*** @PL_rsfp, align 8
  %83 = load i8*, i8** %s.addr, align 8
  store i8* %83, i8** %retval
  br label %return

if.end.113:                                       ; preds = %if.end.82
  %84 = load i8*, i8** @PL_oldbufptr, align 8
  %85 = load i8*, i8** @PL_bufend, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %84 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %85 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  store i64 %sub.ptr.sub, i64* %oldprevlen, align 8
  %86 = load i8*, i8** @PL_oldoldbufptr, align 8
  %87 = load i8*, i8** @PL_bufend, align 8
  %sub.ptr.lhs.cast114 = ptrtoint i8* %86 to i64
  %sub.ptr.rhs.cast115 = ptrtoint i8* %87 to i64
  %sub.ptr.sub116 = sub i64 %sub.ptr.lhs.cast114, %sub.ptr.rhs.cast115
  store i64 %sub.ptr.sub116, i64* %oldoldprevlen, align 8
  %88 = load i8*, i8** @PL_last_uni, align 8
  %tobool117 = icmp ne i8* %88, null
  br i1 %tobool117, label %if.then.118, label %if.end.122

if.then.118:                                      ; preds = %if.end.113
  %89 = load i8*, i8** @PL_last_uni, align 8
  %90 = load i8*, i8** @PL_bufend, align 8
  %sub.ptr.lhs.cast119 = ptrtoint i8* %89 to i64
  %sub.ptr.rhs.cast120 = ptrtoint i8* %90 to i64
  %sub.ptr.sub121 = sub i64 %sub.ptr.lhs.cast119, %sub.ptr.rhs.cast120
  store i64 %sub.ptr.sub121, i64* %oldunilen, align 8
  br label %if.end.122

if.end.122:                                       ; preds = %if.then.118, %if.end.113
  %91 = load i8*, i8** @PL_last_lop, align 8
  %tobool123 = icmp ne i8* %91, null
  br i1 %tobool123, label %if.then.124, label %if.end.128

if.then.124:                                      ; preds = %if.end.122
  %92 = load i8*, i8** @PL_last_lop, align 8
  %93 = load i8*, i8** @PL_bufend, align 8
  %sub.ptr.lhs.cast125 = ptrtoint i8* %92 to i64
  %sub.ptr.rhs.cast126 = ptrtoint i8* %93 to i64
  %sub.ptr.sub127 = sub i64 %sub.ptr.lhs.cast125, %sub.ptr.rhs.cast126
  store i64 %sub.ptr.sub127, i64* %oldloplen, align 8
  br label %if.end.128

if.end.128:                                       ; preds = %if.then.124, %if.end.122
  %94 = load i8*, i8** %s.addr, align 8
  %95 = load i64, i64* %prevlen, align 8
  %add.ptr129 = getelementptr inbounds i8, i8* %94, i64 %95
  store i8* %add.ptr129, i8** @PL_bufptr, align 8
  store i8* %add.ptr129, i8** @PL_linestart, align 8
  %96 = load i8*, i8** %s.addr, align 8
  %97 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_any130 = getelementptr inbounds %struct.sv, %struct.sv* %97, i32 0, i32 0
  %98 = load i8*, i8** %sv_any130, align 8
  %99 = bitcast i8* %98 to %struct.xpv*
  %xpv_cur131 = getelementptr inbounds %struct.xpv, %struct.xpv* %99, i32 0, i32 1
  %100 = load i64, i64* %xpv_cur131, align 8
  %add.ptr132 = getelementptr inbounds i8, i8* %96, i64 %100
  store i8* %add.ptr132, i8** @PL_bufend, align 8
  %101 = load i8*, i8** @PL_bufptr, align 8
  store i8* %101, i8** %s.addr, align 8
  %102 = load i8*, i8** %s.addr, align 8
  %103 = load i64, i64* %oldprevlen, align 8
  %add.ptr133 = getelementptr inbounds i8, i8* %102, i64 %103
  store i8* %add.ptr133, i8** @PL_oldbufptr, align 8
  %104 = load i8*, i8** %s.addr, align 8
  %105 = load i64, i64* %oldoldprevlen, align 8
  %add.ptr134 = getelementptr inbounds i8, i8* %104, i64 %105
  store i8* %add.ptr134, i8** @PL_oldoldbufptr, align 8
  %106 = load i8*, i8** @PL_last_uni, align 8
  %tobool135 = icmp ne i8* %106, null
  br i1 %tobool135, label %if.then.136, label %if.end.138

if.then.136:                                      ; preds = %if.end.128
  %107 = load i8*, i8** %s.addr, align 8
  %108 = load i64, i64* %oldunilen, align 8
  %add.ptr137 = getelementptr inbounds i8, i8* %107, i64 %108
  store i8* %add.ptr137, i8** @PL_last_uni, align 8
  br label %if.end.138

if.end.138:                                       ; preds = %if.then.136, %if.end.128
  %109 = load i8*, i8** @PL_last_lop, align 8
  %tobool139 = icmp ne i8* %109, null
  br i1 %tobool139, label %if.then.140, label %if.end.142

if.then.140:                                      ; preds = %if.end.138
  %110 = load i8*, i8** %s.addr, align 8
  %111 = load i64, i64* %oldloplen, align 8
  %add.ptr141 = getelementptr inbounds i8, i8* %110, i64 %111
  store i8* %add.ptr141, i8** @PL_last_lop, align 8
  br label %if.end.142

if.end.142:                                       ; preds = %if.then.140, %if.end.138
  %112 = load i8*, i8** %s.addr, align 8
  call void @S_incline(i8* %112)
  %113 = load i32, i32* @PL_perldb, align 4
  %tobool143 = icmp ne i32 %113, 0
  br i1 %tobool143, label %land.lhs.true.144, label %if.end.167

land.lhs.true.144:                                ; preds = %if.end.142
  %114 = load i32, i32* @PL_perldb, align 4
  %and = and i32 %114, 2
  %tobool145 = icmp ne i32 %and, 0
  br i1 %tobool145, label %land.lhs.true.146, label %if.end.167

land.lhs.true.146:                                ; preds = %land.lhs.true.144
  %115 = load %struct.hv*, %struct.hv** @PL_curstash, align 8
  %116 = load %struct.hv*, %struct.hv** @PL_debstash, align 8
  %cmp147 = icmp ne %struct.hv* %115, %116
  br i1 %cmp147, label %if.then.149, label %if.end.167

if.then.149:                                      ; preds = %land.lhs.true.146
  %call150 = call %struct.sv* @Perl_newSV(i64 0)
  store %struct.sv* %call150, %struct.sv** %sv, align 8
  %117 = load %struct.sv*, %struct.sv** %sv, align 8
  %call151 = call signext i8 @Perl_sv_upgrade(%struct.sv* %117, i32 7)
  %118 = load %struct.sv*, %struct.sv** %sv, align 8
  %119 = load i8*, i8** @PL_bufptr, align 8
  %120 = load i8*, i8** @PL_bufend, align 8
  %121 = load i8*, i8** @PL_bufptr, align 8
  %sub.ptr.lhs.cast152 = ptrtoint i8* %120 to i64
  %sub.ptr.rhs.cast153 = ptrtoint i8* %121 to i64
  %sub.ptr.sub154 = sub i64 %sub.ptr.lhs.cast152, %sub.ptr.rhs.cast153
  call void @Perl_sv_setpvn(%struct.sv* %118, i8* %119, i64 %sub.ptr.sub154)
  %122 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %122, i32 0, i32 2
  %123 = load i32, i32* %sv_flags, align 4
  %and155 = and i32 %123, 2097152
  %tobool156 = icmp ne i32 %and155, 0
  br i1 %tobool156, label %land.rhs.157, label %land.end.160

land.rhs.157:                                     ; preds = %if.then.149
  %124 = load %struct.sv*, %struct.sv** %sv, align 8
  %call158 = call i32 @Perl_sv_backoff(%struct.sv* %124)
  %tobool159 = icmp ne i32 %call158, 0
  br label %land.end.160

land.end.160:                                     ; preds = %land.rhs.157, %if.then.149
  %125 = phi i1 [ false, %if.then.149 ], [ %tobool159, %land.rhs.157 ]
  %land.ext = zext i1 %125 to i32
  %126 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags161 = getelementptr inbounds %struct.sv, %struct.sv* %126, i32 0, i32 2
  %127 = load i32, i32* %sv_flags161, align 4
  %or = or i32 %127, 16842752
  store i32 %or, i32* %sv_flags161, align 4
  %128 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any162 = getelementptr inbounds %struct.sv, %struct.sv* %128, i32 0, i32 0
  %129 = load i8*, i8** %sv_any162, align 8
  %130 = bitcast i8* %129 to %struct.xpviv*
  %xiv_iv = getelementptr inbounds %struct.xpviv, %struct.xpviv* %130, i32 0, i32 3
  store i64 0, i64* %xiv_iv, align 8
  %131 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_filegv = getelementptr inbounds %struct.cop, %struct.cop* %131, i32 0, i32 10
  %132 = load %struct.gv*, %struct.gv** %cop_filegv, align 8
  %tobool163 = icmp ne %struct.gv* %132, null
  br i1 %tobool163, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.end.160
  %133 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_filegv164 = getelementptr inbounds %struct.cop, %struct.cop* %133, i32 0, i32 10
  %134 = load %struct.gv*, %struct.gv** %cop_filegv164, align 8
  %sv_any165 = getelementptr inbounds %struct.gv, %struct.gv* %134, i32 0, i32 0
  %135 = load %struct.xpvgv*, %struct.xpvgv** %sv_any165, align 8
  %xgv_gp = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %135, i32 0, i32 7
  %136 = load %struct.gp*, %struct.gp** %xgv_gp, align 8
  %gp_av = getelementptr inbounds %struct.gp, %struct.gp* %136, i32 0, i32 4
  %137 = load %struct.av*, %struct.av** %gp_av, align 8
  br label %cond.end

cond.false:                                       ; preds = %land.end.160
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.av* [ %137, %cond.true ], [ null, %cond.false ]
  %138 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line = getelementptr inbounds %struct.cop, %struct.cop* %138, i32 0, i32 13
  %139 = load i32, i32* %cop_line, align 4
  %140 = load %struct.sv*, %struct.sv** %sv, align 8
  %call166 = call %struct.sv** @Perl_av_store(%struct.av* %cond, i32 %139, %struct.sv* %140)
  br label %if.end.167

if.end.167:                                       ; preds = %cond.end, %land.lhs.true.146, %land.lhs.true.144, %if.end.142
  br label %for.cond

return:                                           ; preds = %if.end.112, %if.then.81, %while.end
  %141 = load i8*, i8** %retval
  ret i8* %141
}

; Function Attrs: nounwind uwtable
define internal void @S_check_uni() #0 {
entry:
  %s = alloca i8*, align 8
  %t = alloca i8*, align 8
  %ch = alloca i8, align 1
  %0 = load i8*, i8** @PL_oldoldbufptr, align 8
  %1 = load i8*, i8** @PL_last_uni, align 8
  %cmp = icmp ne i8* %0, %1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %if.end.92

if.end:                                           ; preds = %entry
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end
  %2 = load i8*, i8** @PL_last_uni, align 8
  %3 = load i8, i8* %2, align 1
  %conv = sext i8 %3 to i32
  %cmp1 = icmp eq i32 %conv, 32
  br i1 %cmp1, label %lor.end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %while.cond
  %4 = load i8*, i8** @PL_last_uni, align 8
  %5 = load i8, i8* %4, align 1
  %conv3 = sext i8 %5 to i32
  %cmp4 = icmp eq i32 %conv3, 9
  br i1 %cmp4, label %lor.end, label %lor.lhs.false.6

lor.lhs.false.6:                                  ; preds = %lor.lhs.false
  %6 = load i8*, i8** @PL_last_uni, align 8
  %7 = load i8, i8* %6, align 1
  %conv7 = sext i8 %7 to i32
  %cmp8 = icmp eq i32 %conv7, 10
  br i1 %cmp8, label %lor.end, label %lor.lhs.false.10

lor.lhs.false.10:                                 ; preds = %lor.lhs.false.6
  %8 = load i8*, i8** @PL_last_uni, align 8
  %9 = load i8, i8* %8, align 1
  %conv11 = sext i8 %9 to i32
  %cmp12 = icmp eq i32 %conv11, 13
  br i1 %cmp12, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %lor.lhs.false.10
  %10 = load i8*, i8** @PL_last_uni, align 8
  %11 = load i8, i8* %10, align 1
  %conv14 = sext i8 %11 to i32
  %cmp15 = icmp eq i32 %conv14, 12
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false.10, %lor.lhs.false.6, %lor.lhs.false, %while.cond
  %12 = phi i1 [ true, %lor.lhs.false.10 ], [ true, %lor.lhs.false.6 ], [ true, %lor.lhs.false ], [ true, %while.cond ], [ %cmp15, %lor.rhs ]
  br i1 %12, label %while.body, label %while.end

while.body:                                       ; preds = %lor.end
  %13 = load i8*, i8** @PL_last_uni, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %13, i32 1
  store i8* %incdec.ptr, i8** @PL_last_uni, align 8
  br label %while.cond

while.end:                                        ; preds = %lor.end
  %14 = load i8*, i8** @PL_last_uni, align 8
  store i8* %14, i8** %s, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %while.end
  %15 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private = getelementptr inbounds %struct.cop, %struct.cop* %15, i32 0, i32 7
  %16 = load i8, i8* %op_private, align 1
  %conv17 = zext i8 %16 to i32
  %and = and i32 %conv17, 8
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %cond.true, label %lor.lhs.false.18

lor.lhs.false.18:                                 ; preds = %for.cond
  %17 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %tobool19 = icmp ne %struct.sv* %17, null
  br i1 %tobool19, label %land.lhs.true, label %lor.lhs.false.27

land.lhs.true:                                    ; preds = %lor.lhs.false.18
  %18 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %18, i32 0, i32 2
  %19 = load i32, i32* %sv_flags, align 4
  %and20 = and i32 %19, 536870912
  %tobool21 = icmp ne i32 %and20, 0
  br i1 %tobool21, label %land.lhs.true.22, label %lor.lhs.false.27

land.lhs.true.22:                                 ; preds = %land.lhs.true
  %20 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private23 = getelementptr inbounds %struct.cop, %struct.cop* %20, i32 0, i32 7
  %21 = load i8, i8* %op_private23, align 1
  %conv24 = zext i8 %21 to i32
  %and25 = and i32 %conv24, 8
  %tobool26 = icmp ne i32 %and25, 0
  br i1 %tobool26, label %lor.lhs.false.27, label %lor.lhs.false.30

lor.lhs.false.27:                                 ; preds = %land.lhs.true.22, %land.lhs.true, %lor.lhs.false.18
  %22 = load i32, i32* @PL_hints, align 4
  %and28 = and i32 %22, 8388608
  %tobool29 = icmp ne i32 %and28, 0
  br i1 %tobool29, label %lor.lhs.false.30, label %cond.true

lor.lhs.false.30:                                 ; preds = %lor.lhs.false.27, %land.lhs.true.22
  %23 = load i8*, i8** %s, align 8
  %24 = load i8, i8* %23, align 1
  %conv31 = zext i8 %24 to i32
  %cmp32 = icmp slt i32 %conv31, 192
  br i1 %cmp32, label %cond.true, label %cond.false

cond.true:                                        ; preds = %lor.lhs.false.30, %lor.lhs.false.27, %for.cond
  %25 = load i8*, i8** %s, align 8
  %26 = load i8, i8* %25, align 1
  %conv34 = sext i8 %26 to i32
  %cmp35 = icmp sge i32 %conv34, 65
  br i1 %cmp35, label %land.lhs.true.37, label %lor.lhs.false.41

land.lhs.true.37:                                 ; preds = %cond.true
  %27 = load i8*, i8** %s, align 8
  %28 = load i8, i8* %27, align 1
  %conv38 = sext i8 %28 to i32
  %cmp39 = icmp sle i32 %conv38, 90
  br i1 %cmp39, label %lor.end.67, label %lor.lhs.false.41

lor.lhs.false.41:                                 ; preds = %land.lhs.true.37, %cond.true
  %29 = load i8*, i8** %s, align 8
  %30 = load i8, i8* %29, align 1
  %conv42 = sext i8 %30 to i32
  %cmp43 = icmp sge i32 %conv42, 97
  br i1 %cmp43, label %land.lhs.true.45, label %lor.lhs.false.49

land.lhs.true.45:                                 ; preds = %lor.lhs.false.41
  %31 = load i8*, i8** %s, align 8
  %32 = load i8, i8* %31, align 1
  %conv46 = sext i8 %32 to i32
  %cmp47 = icmp sle i32 %conv46, 122
  br i1 %cmp47, label %lor.end.67, label %lor.lhs.false.49

lor.lhs.false.49:                                 ; preds = %land.lhs.true.45, %lor.lhs.false.41
  %33 = load i8*, i8** %s, align 8
  %34 = load i8, i8* %33, align 1
  %conv50 = sext i8 %34 to i32
  %cmp51 = icmp sge i32 %conv50, 48
  br i1 %cmp51, label %land.lhs.true.53, label %lor.lhs.false.57

land.lhs.true.53:                                 ; preds = %lor.lhs.false.49
  %35 = load i8*, i8** %s, align 8
  %36 = load i8, i8* %35, align 1
  %conv54 = sext i8 %36 to i32
  %cmp55 = icmp sle i32 %conv54, 57
  br i1 %cmp55, label %lor.end.67, label %lor.lhs.false.57

lor.lhs.false.57:                                 ; preds = %land.lhs.true.53, %lor.lhs.false.49
  %37 = load i8*, i8** %s, align 8
  %38 = load i8, i8* %37, align 1
  %conv58 = sext i8 %38 to i32
  %cmp59 = icmp eq i32 %conv58, 95
  br i1 %cmp59, label %lor.end.67, label %lor.rhs.63

cond.false:                                       ; preds = %lor.lhs.false.30
  %39 = load i8*, i8** %s, align 8
  %call = call signext i8 @Perl_is_utf8_alnum(i8* %39)
  %conv61 = sext i8 %call to i32
  %tobool62 = icmp ne i32 %conv61, 0
  br i1 %tobool62, label %lor.end.67, label %lor.rhs.63

lor.rhs.63:                                       ; preds = %cond.false, %lor.lhs.false.57
  %40 = load i8*, i8** %s, align 8
  %41 = load i8, i8* %40, align 1
  %conv64 = sext i8 %41 to i32
  %cmp65 = icmp eq i32 %conv64, 45
  br label %lor.end.67

lor.end.67:                                       ; preds = %lor.rhs.63, %cond.false, %lor.lhs.false.57, %land.lhs.true.53, %land.lhs.true.45, %land.lhs.true.37
  %42 = phi i1 [ true, %cond.false ], [ true, %lor.lhs.false.57 ], [ true, %land.lhs.true.53 ], [ true, %land.lhs.true.45 ], [ true, %land.lhs.true.37 ], [ %cmp65, %lor.rhs.63 ]
  br i1 %42, label %for.body, label %for.end

for.body:                                         ; preds = %lor.end.67
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %43 = load i8*, i8** %s, align 8
  %incdec.ptr68 = getelementptr inbounds i8, i8* %43, i32 1
  store i8* %incdec.ptr68, i8** %s, align 8
  br label %for.cond

for.end:                                          ; preds = %lor.end.67
  %44 = load i8*, i8** %s, align 8
  %call69 = call i8* @strchr(i8* %44, i32 40)
  store i8* %call69, i8** %t, align 8
  %tobool70 = icmp ne i8* %call69, null
  br i1 %tobool70, label %land.lhs.true.71, label %if.end.75

land.lhs.true.71:                                 ; preds = %for.end
  %45 = load i8*, i8** %t, align 8
  %46 = load i8*, i8** @PL_bufptr, align 8
  %cmp72 = icmp ult i8* %45, %46
  br i1 %cmp72, label %if.then.74, label %if.end.75

if.then.74:                                       ; preds = %land.lhs.true.71
  br label %if.end.92

if.end.75:                                        ; preds = %land.lhs.true.71, %for.end
  %47 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings = getelementptr inbounds %struct.cop, %struct.cop* %47, i32 0, i32 14
  %48 = load %struct.sv*, %struct.sv** %cop_warnings, align 8
  %cmp76 = icmp eq %struct.sv* %48, null
  br i1 %cmp76, label %if.then.91, label %lor.lhs.false.78

lor.lhs.false.78:                                 ; preds = %if.end.75
  %49 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings79 = getelementptr inbounds %struct.cop, %struct.cop* %49, i32 0, i32 14
  %50 = load %struct.sv*, %struct.sv** %cop_warnings79, align 8
  %cmp80 = icmp eq %struct.sv* %50, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 1)
  br i1 %cmp80, label %if.then.91, label %lor.lhs.false.82

lor.lhs.false.82:                                 ; preds = %lor.lhs.false.78
  %51 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings83 = getelementptr inbounds %struct.cop, %struct.cop* %51, i32 0, i32 14
  %52 = load %struct.sv*, %struct.sv** %cop_warnings83, align 8
  %cmp84 = icmp ne %struct.sv* %52, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 2)
  br i1 %cmp84, label %land.lhs.true.86, label %if.end.92

land.lhs.true.86:                                 ; preds = %lor.lhs.false.82
  %53 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings87 = getelementptr inbounds %struct.cop, %struct.cop* %53, i32 0, i32 14
  %54 = load %struct.sv*, %struct.sv** %cop_warnings87, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %54, i32 0, i32 0
  %55 = load i8*, i8** %sv_any, align 8
  %56 = bitcast i8* %55 to %struct.xpv*
  %xpv_pv = getelementptr inbounds %struct.xpv, %struct.xpv* %56, i32 0, i32 0
  %57 = load i8*, i8** %xpv_pv, align 8
  %arrayidx = getelementptr inbounds i8, i8* %57, i64 7
  %58 = load i8, i8* %arrayidx, align 1
  %conv88 = sext i8 %58 to i32
  %and89 = and i32 %conv88, 4
  %tobool90 = icmp ne i32 %and89, 0
  br i1 %tobool90, label %if.then.91, label %if.end.92

if.then.91:                                       ; preds = %land.lhs.true.86, %lor.lhs.false.78, %if.end.75
  %59 = load i8*, i8** %s, align 8
  %60 = load i8, i8* %59, align 1
  store i8 %60, i8* %ch, align 1
  %61 = load i8*, i8** %s, align 8
  store i8 0, i8* %61, align 1
  %62 = load i8*, i8** @PL_last_uni, align 8
  call void (i32, i8*, ...) @Perl_warner(i32 29, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.180, i32 0, i32 0), i8* %62)
  %63 = load i8, i8* %ch, align 1
  %64 = load i8*, i8** %s, align 8
  store i8 %63, i8* %64, align 1
  br label %if.end.92

if.end.92:                                        ; preds = %if.then, %if.then.74, %if.then.91, %land.lhs.true.86, %lor.lhs.false.82
  ret void
}

; Function Attrs: nounwind uwtable
define internal i8* @S_scan_ident(i8* %s, i8* %send, i8* %dest, i64 %destlen, i32 %ck_uni) #0 {
entry:
  %retval = alloca i8*, align 8
  %s.addr = alloca i8*, align 8
  %send.addr = alloca i8*, align 8
  %dest.addr = alloca i8*, align 8
  %destlen.addr = alloca i64, align 8
  %ck_uni.addr = alloca i32, align 4
  %d = alloca i8*, align 8
  %e = alloca i8*, align 8
  %bracket = alloca i8*, align 8
  %funny = alloca i8, align 1
  %t = alloca i8*, align 8
  %ch = alloca i8, align 1
  %brack = alloca i8*, align 8
  store i8* %s, i8** %s.addr, align 8
  store i8* %send, i8** %send.addr, align 8
  store i8* %dest, i8** %dest.addr, align 8
  store i64 %destlen, i64* %destlen.addr, align 8
  store i32 %ck_uni, i32* %ck_uni.addr, align 4
  store i8* null, i8** %bracket, align 8
  %0 = load i8*, i8** %s.addr, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i32 1
  store i8* %incdec.ptr, i8** %s.addr, align 8
  %1 = load i8, i8* %0, align 1
  store i8 %1, i8* %funny, align 1
  %2 = load i8*, i8** %s.addr, align 8
  %3 = load i8, i8* %2, align 1
  %conv = sext i8 %3 to i32
  %cmp = icmp eq i32 %conv, 32
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %4 = load i8*, i8** %s.addr, align 8
  %5 = load i8, i8* %4, align 1
  %conv2 = sext i8 %5 to i32
  %cmp3 = icmp eq i32 %conv2, 9
  br i1 %cmp3, label %if.then, label %lor.lhs.false.5

lor.lhs.false.5:                                  ; preds = %lor.lhs.false
  %6 = load i8*, i8** %s.addr, align 8
  %7 = load i8, i8* %6, align 1
  %conv6 = sext i8 %7 to i32
  %cmp7 = icmp eq i32 %conv6, 10
  br i1 %cmp7, label %if.then, label %lor.lhs.false.9

lor.lhs.false.9:                                  ; preds = %lor.lhs.false.5
  %8 = load i8*, i8** %s.addr, align 8
  %9 = load i8, i8* %8, align 1
  %conv10 = sext i8 %9 to i32
  %cmp11 = icmp eq i32 %conv10, 13
  br i1 %cmp11, label %if.then, label %lor.lhs.false.13

lor.lhs.false.13:                                 ; preds = %lor.lhs.false.9
  %10 = load i8*, i8** %s.addr, align 8
  %11 = load i8, i8* %10, align 1
  %conv14 = sext i8 %11 to i32
  %cmp15 = icmp eq i32 %conv14, 12
  br i1 %cmp15, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false.13, %lor.lhs.false.9, %lor.lhs.false.5, %lor.lhs.false, %entry
  %12 = load i8*, i8** %s.addr, align 8
  %call = call i8* @S_skipspace(i8* %12)
  store i8* %call, i8** %s.addr, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %lor.lhs.false.13
  %13 = load i8*, i8** %dest.addr, align 8
  store i8* %13, i8** %d, align 8
  %14 = load i8*, i8** %d, align 8
  %15 = load i64, i64* %destlen.addr, align 8
  %add.ptr = getelementptr inbounds i8, i8* %14, i64 %15
  %add.ptr17 = getelementptr inbounds i8, i8* %add.ptr, i64 -3
  store i8* %add.ptr17, i8** %e, align 8
  %16 = load i8*, i8** %s.addr, align 8
  %17 = load i8, i8* %16, align 1
  %conv18 = sext i8 %17 to i32
  %cmp19 = icmp sge i32 %conv18, 48
  br i1 %cmp19, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %if.end
  %18 = load i8*, i8** %s.addr, align 8
  %19 = load i8, i8* %18, align 1
  %conv21 = sext i8 %19 to i32
  %cmp22 = icmp sle i32 %conv21, 57
  br i1 %cmp22, label %if.then.24, label %if.else

if.then.24:                                       ; preds = %land.lhs.true
  br label %while.cond

while.cond:                                       ; preds = %if.end.34, %if.then.24
  %20 = load i8*, i8** %s.addr, align 8
  %21 = load i8, i8* %20, align 1
  %conv25 = sext i8 %21 to i32
  %cmp26 = icmp sge i32 %conv25, 48
  br i1 %cmp26, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %22 = load i8*, i8** %s.addr, align 8
  %23 = load i8, i8* %22, align 1
  %conv28 = sext i8 %23 to i32
  %cmp29 = icmp sle i32 %conv28, 57
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %24 = phi i1 [ false, %while.cond ], [ %cmp29, %land.rhs ]
  br i1 %24, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %25 = load i8*, i8** %d, align 8
  %26 = load i8*, i8** %e, align 8
  %cmp31 = icmp uge i8* %25, %26
  br i1 %cmp31, label %if.then.33, label %if.end.34

if.then.33:                                       ; preds = %while.body
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @ident_too_long, i32 0, i32 0))
  br label %if.end.34

if.end.34:                                        ; preds = %if.then.33, %while.body
  %27 = load i8*, i8** %s.addr, align 8
  %incdec.ptr35 = getelementptr inbounds i8, i8* %27, i32 1
  store i8* %incdec.ptr35, i8** %s.addr, align 8
  %28 = load i8, i8* %27, align 1
  %29 = load i8*, i8** %d, align 8
  %incdec.ptr36 = getelementptr inbounds i8, i8* %29, i32 1
  store i8* %incdec.ptr36, i8** %d, align 8
  store i8 %28, i8* %29, align 1
  br label %while.cond

while.end:                                        ; preds = %land.end
  br label %if.end.207

if.else:                                          ; preds = %land.lhs.true, %if.end
  br label %for.cond

for.cond:                                         ; preds = %if.end.206, %if.else
  %30 = load i8*, i8** %d, align 8
  %31 = load i8*, i8** %e, align 8
  %cmp37 = icmp uge i8* %30, %31
  br i1 %cmp37, label %if.then.39, label %if.end.40

if.then.39:                                       ; preds = %for.cond
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @ident_too_long, i32 0, i32 0))
  br label %if.end.40

if.end.40:                                        ; preds = %if.then.39, %for.cond
  %32 = load i8*, i8** %s.addr, align 8
  %33 = load i8, i8* %32, align 1
  %conv41 = sext i8 %33 to i32
  %cmp42 = icmp sge i32 %conv41, 65
  br i1 %cmp42, label %land.lhs.true.44, label %lor.lhs.false.48

land.lhs.true.44:                                 ; preds = %if.end.40
  %34 = load i8*, i8** %s.addr, align 8
  %35 = load i8, i8* %34, align 1
  %conv45 = sext i8 %35 to i32
  %cmp46 = icmp sle i32 %conv45, 90
  br i1 %cmp46, label %if.then.68, label %lor.lhs.false.48

lor.lhs.false.48:                                 ; preds = %land.lhs.true.44, %if.end.40
  %36 = load i8*, i8** %s.addr, align 8
  %37 = load i8, i8* %36, align 1
  %conv49 = sext i8 %37 to i32
  %cmp50 = icmp sge i32 %conv49, 97
  br i1 %cmp50, label %land.lhs.true.52, label %lor.lhs.false.56

land.lhs.true.52:                                 ; preds = %lor.lhs.false.48
  %38 = load i8*, i8** %s.addr, align 8
  %39 = load i8, i8* %38, align 1
  %conv53 = sext i8 %39 to i32
  %cmp54 = icmp sle i32 %conv53, 122
  br i1 %cmp54, label %if.then.68, label %lor.lhs.false.56

lor.lhs.false.56:                                 ; preds = %land.lhs.true.52, %lor.lhs.false.48
  %40 = load i8*, i8** %s.addr, align 8
  %41 = load i8, i8* %40, align 1
  %conv57 = sext i8 %41 to i32
  %cmp58 = icmp sge i32 %conv57, 48
  br i1 %cmp58, label %land.lhs.true.60, label %lor.lhs.false.64

land.lhs.true.60:                                 ; preds = %lor.lhs.false.56
  %42 = load i8*, i8** %s.addr, align 8
  %43 = load i8, i8* %42, align 1
  %conv61 = sext i8 %43 to i32
  %cmp62 = icmp sle i32 %conv61, 57
  br i1 %cmp62, label %if.then.68, label %lor.lhs.false.64

lor.lhs.false.64:                                 ; preds = %land.lhs.true.60, %lor.lhs.false.56
  %44 = load i8*, i8** %s.addr, align 8
  %45 = load i8, i8* %44, align 1
  %conv65 = sext i8 %45 to i32
  %cmp66 = icmp eq i32 %conv65, 95
  br i1 %cmp66, label %if.then.68, label %if.else.71

if.then.68:                                       ; preds = %lor.lhs.false.64, %land.lhs.true.60, %land.lhs.true.52, %land.lhs.true.44
  %46 = load i8*, i8** %s.addr, align 8
  %incdec.ptr69 = getelementptr inbounds i8, i8* %46, i32 1
  store i8* %incdec.ptr69, i8** %s.addr, align 8
  %47 = load i8, i8* %46, align 1
  %48 = load i8*, i8** %d, align 8
  %incdec.ptr70 = getelementptr inbounds i8, i8* %48, i32 1
  store i8* %incdec.ptr70, i8** %d, align 8
  store i8 %47, i8* %48, align 1
  br label %if.end.206

if.else.71:                                       ; preds = %lor.lhs.false.64
  %49 = load i8*, i8** %s.addr, align 8
  %50 = load i8, i8* %49, align 1
  %conv72 = sext i8 %50 to i32
  %cmp73 = icmp eq i32 %conv72, 39
  br i1 %cmp73, label %land.lhs.true.75, label %if.else.131

land.lhs.true.75:                                 ; preds = %if.else.71
  %51 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private = getelementptr inbounds %struct.cop, %struct.cop* %51, i32 0, i32 7
  %52 = load i8, i8* %op_private, align 1
  %conv76 = zext i8 %52 to i32
  %and = and i32 %conv76, 8
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %cond.true, label %lor.lhs.false.77

lor.lhs.false.77:                                 ; preds = %land.lhs.true.75
  %53 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %tobool78 = icmp ne %struct.sv* %53, null
  br i1 %tobool78, label %land.lhs.true.79, label %lor.lhs.false.87

land.lhs.true.79:                                 ; preds = %lor.lhs.false.77
  %54 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %54, i32 0, i32 2
  %55 = load i32, i32* %sv_flags, align 4
  %and80 = and i32 %55, 536870912
  %tobool81 = icmp ne i32 %and80, 0
  br i1 %tobool81, label %land.lhs.true.82, label %lor.lhs.false.87

land.lhs.true.82:                                 ; preds = %land.lhs.true.79
  %56 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private83 = getelementptr inbounds %struct.cop, %struct.cop* %56, i32 0, i32 7
  %57 = load i8, i8* %op_private83, align 1
  %conv84 = zext i8 %57 to i32
  %and85 = and i32 %conv84, 8
  %tobool86 = icmp ne i32 %and85, 0
  br i1 %tobool86, label %lor.lhs.false.87, label %lor.lhs.false.90

lor.lhs.false.87:                                 ; preds = %land.lhs.true.82, %land.lhs.true.79, %lor.lhs.false.77
  %58 = load i32, i32* @PL_hints, align 4
  %and88 = and i32 %58, 8388608
  %tobool89 = icmp ne i32 %and88, 0
  br i1 %tobool89, label %lor.lhs.false.90, label %cond.true

lor.lhs.false.90:                                 ; preds = %lor.lhs.false.87, %land.lhs.true.82
  %59 = load i8*, i8** %s.addr, align 8
  %add.ptr91 = getelementptr inbounds i8, i8* %59, i64 1
  %60 = load i8, i8* %add.ptr91, align 1
  %conv92 = zext i8 %60 to i32
  %cmp93 = icmp slt i32 %conv92, 192
  br i1 %cmp93, label %cond.true, label %cond.false

cond.true:                                        ; preds = %lor.lhs.false.90, %lor.lhs.false.87, %land.lhs.true.75
  %61 = load i8*, i8** %s.addr, align 8
  %add.ptr95 = getelementptr inbounds i8, i8* %61, i64 1
  %62 = load i8, i8* %add.ptr95, align 1
  %conv96 = sext i8 %62 to i32
  %cmp97 = icmp sge i32 %conv96, 65
  br i1 %cmp97, label %land.lhs.true.99, label %lor.lhs.false.104

land.lhs.true.99:                                 ; preds = %cond.true
  %63 = load i8*, i8** %s.addr, align 8
  %add.ptr100 = getelementptr inbounds i8, i8* %63, i64 1
  %64 = load i8, i8* %add.ptr100, align 1
  %conv101 = sext i8 %64 to i32
  %cmp102 = icmp sle i32 %conv101, 90
  br i1 %cmp102, label %if.then.127, label %lor.lhs.false.104

lor.lhs.false.104:                                ; preds = %land.lhs.true.99, %cond.true
  %65 = load i8*, i8** %s.addr, align 8
  %add.ptr105 = getelementptr inbounds i8, i8* %65, i64 1
  %66 = load i8, i8* %add.ptr105, align 1
  %conv106 = sext i8 %66 to i32
  %cmp107 = icmp sge i32 %conv106, 97
  br i1 %cmp107, label %land.lhs.true.109, label %lor.lhs.false.114

land.lhs.true.109:                                ; preds = %lor.lhs.false.104
  %67 = load i8*, i8** %s.addr, align 8
  %add.ptr110 = getelementptr inbounds i8, i8* %67, i64 1
  %68 = load i8, i8* %add.ptr110, align 1
  %conv111 = sext i8 %68 to i32
  %cmp112 = icmp sle i32 %conv111, 122
  br i1 %cmp112, label %if.then.127, label %lor.lhs.false.114

lor.lhs.false.114:                                ; preds = %land.lhs.true.109, %lor.lhs.false.104
  %69 = load i8*, i8** %s.addr, align 8
  %add.ptr115 = getelementptr inbounds i8, i8* %69, i64 1
  %70 = load i8, i8* %add.ptr115, align 1
  %conv116 = sext i8 %70 to i32
  %cmp117 = icmp eq i32 %conv116, 95
  br i1 %cmp117, label %if.then.127, label %if.else.131

cond.false:                                       ; preds = %lor.lhs.false.90
  %71 = load i8*, i8** %s.addr, align 8
  %add.ptr119 = getelementptr inbounds i8, i8* %71, i64 1
  %call120 = call signext i8 @Perl_is_utf8_idcont(i8* %add.ptr119)
  %conv121 = sext i8 %call120 to i32
  %tobool122 = icmp ne i32 %conv121, 0
  br i1 %tobool122, label %land.lhs.true.123, label %if.else.131

land.lhs.true.123:                                ; preds = %cond.false
  %72 = load i8*, i8** %s.addr, align 8
  %add.ptr124 = getelementptr inbounds i8, i8* %72, i64 1
  %call125 = call signext i8 @Perl_is_utf8_digit(i8* %add.ptr124)
  %tobool126 = icmp ne i8 %call125, 0
  br i1 %tobool126, label %if.else.131, label %if.then.127

if.then.127:                                      ; preds = %land.lhs.true.123, %lor.lhs.false.114, %land.lhs.true.109, %land.lhs.true.99
  %73 = load i8*, i8** %d, align 8
  %incdec.ptr128 = getelementptr inbounds i8, i8* %73, i32 1
  store i8* %incdec.ptr128, i8** %d, align 8
  store i8 58, i8* %73, align 1
  %74 = load i8*, i8** %d, align 8
  %incdec.ptr129 = getelementptr inbounds i8, i8* %74, i32 1
  store i8* %incdec.ptr129, i8** %d, align 8
  store i8 58, i8* %74, align 1
  %75 = load i8*, i8** %s.addr, align 8
  %incdec.ptr130 = getelementptr inbounds i8, i8* %75, i32 1
  store i8* %incdec.ptr130, i8** %s.addr, align 8
  br label %if.end.205

if.else.131:                                      ; preds = %land.lhs.true.123, %cond.false, %lor.lhs.false.114, %if.else.71
  %76 = load i8*, i8** %s.addr, align 8
  %77 = load i8, i8* %76, align 1
  %conv132 = sext i8 %77 to i32
  %cmp133 = icmp eq i32 %conv132, 58
  br i1 %cmp133, label %land.lhs.true.135, label %if.else.144

land.lhs.true.135:                                ; preds = %if.else.131
  %78 = load i8*, i8** %s.addr, align 8
  %arrayidx = getelementptr inbounds i8, i8* %78, i64 1
  %79 = load i8, i8* %arrayidx, align 1
  %conv136 = sext i8 %79 to i32
  %cmp137 = icmp eq i32 %conv136, 58
  br i1 %cmp137, label %if.then.139, label %if.else.144

if.then.139:                                      ; preds = %land.lhs.true.135
  %80 = load i8*, i8** %s.addr, align 8
  %incdec.ptr140 = getelementptr inbounds i8, i8* %80, i32 1
  store i8* %incdec.ptr140, i8** %s.addr, align 8
  %81 = load i8, i8* %80, align 1
  %82 = load i8*, i8** %d, align 8
  %incdec.ptr141 = getelementptr inbounds i8, i8* %82, i32 1
  store i8* %incdec.ptr141, i8** %d, align 8
  store i8 %81, i8* %82, align 1
  %83 = load i8*, i8** %s.addr, align 8
  %incdec.ptr142 = getelementptr inbounds i8, i8* %83, i32 1
  store i8* %incdec.ptr142, i8** %s.addr, align 8
  %84 = load i8, i8* %83, align 1
  %85 = load i8*, i8** %d, align 8
  %incdec.ptr143 = getelementptr inbounds i8, i8* %85, i32 1
  store i8* %incdec.ptr143, i8** %d, align 8
  store i8 %84, i8* %85, align 1
  br label %if.end.204

if.else.144:                                      ; preds = %land.lhs.true.135, %if.else.131
  %86 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %tobool145 = icmp ne %struct.sv* %86, null
  br i1 %tobool145, label %land.lhs.true.146, label %lor.lhs.false.155

land.lhs.true.146:                                ; preds = %if.else.144
  %87 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_flags147 = getelementptr inbounds %struct.sv, %struct.sv* %87, i32 0, i32 2
  %88 = load i32, i32* %sv_flags147, align 4
  %and148 = and i32 %88, 536870912
  %tobool149 = icmp ne i32 %and148, 0
  br i1 %tobool149, label %land.lhs.true.150, label %lor.lhs.false.155

land.lhs.true.150:                                ; preds = %land.lhs.true.146
  %89 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private151 = getelementptr inbounds %struct.cop, %struct.cop* %89, i32 0, i32 7
  %90 = load i8, i8* %op_private151, align 1
  %conv152 = zext i8 %90 to i32
  %and153 = and i32 %conv152, 8
  %tobool154 = icmp ne i32 %and153, 0
  br i1 %tobool154, label %lor.lhs.false.155, label %land.lhs.true.158

lor.lhs.false.155:                                ; preds = %land.lhs.true.150, %land.lhs.true.146, %if.else.144
  %91 = load i32, i32* @PL_hints, align 4
  %and156 = and i32 %91, 8388608
  %tobool157 = icmp ne i32 %and156, 0
  br i1 %tobool157, label %land.lhs.true.158, label %if.else.202

land.lhs.true.158:                                ; preds = %lor.lhs.false.155, %land.lhs.true.150
  %92 = load i8*, i8** %s.addr, align 8
  %93 = load i8, i8* %92, align 1
  %conv159 = zext i8 %93 to i32
  %cmp160 = icmp sge i32 %conv159, 192
  br i1 %cmp160, label %land.lhs.true.162, label %if.else.202

land.lhs.true.162:                                ; preds = %land.lhs.true.158
  %94 = load i8*, i8** %s.addr, align 8
  %95 = load i8, i8* %94, align 1
  %conv163 = zext i8 %95 to i32
  %cmp164 = icmp sle i32 %conv163, 253
  br i1 %cmp164, label %land.lhs.true.166, label %if.else.202

land.lhs.true.166:                                ; preds = %land.lhs.true.162
  %96 = load i8*, i8** %s.addr, align 8
  %call167 = call signext i8 @Perl_is_utf8_alnum(i8* %96)
  %conv168 = sext i8 %call167 to i32
  %tobool169 = icmp ne i32 %conv168, 0
  br i1 %tobool169, label %if.then.170, label %if.else.202

if.then.170:                                      ; preds = %land.lhs.true.166
  %97 = load i8*, i8** %s.addr, align 8
  %98 = load i8*, i8** %s.addr, align 8
  %99 = load i8, i8* %98, align 1
  %idxprom = zext i8 %99 to i64
  %arrayidx171 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i32 0, i64 %idxprom
  %100 = load i8, i8* %arrayidx171, align 1
  %conv172 = zext i8 %100 to i32
  %idx.ext = sext i32 %conv172 to i64
  %add.ptr173 = getelementptr inbounds i8, i8* %97, i64 %idx.ext
  store i8* %add.ptr173, i8** %t, align 8
  br label %while.cond.174

while.cond.174:                                   ; preds = %while.body.183, %if.then.170
  %101 = load i8*, i8** %t, align 8
  %102 = load i8, i8* %101, align 1
  %conv175 = zext i8 %102 to i32
  %and176 = and i32 %conv175, 128
  %tobool177 = icmp ne i32 %and176, 0
  br i1 %tobool177, label %land.rhs.178, label %land.end.182

land.rhs.178:                                     ; preds = %while.cond.174
  %103 = load i8*, i8** %t, align 8
  %call179 = call signext i8 @Perl_is_utf8_mark(i8* %103)
  %conv180 = sext i8 %call179 to i32
  %tobool181 = icmp ne i32 %conv180, 0
  br label %land.end.182

land.end.182:                                     ; preds = %land.rhs.178, %while.cond.174
  %104 = phi i1 [ false, %while.cond.174 ], [ %tobool181, %land.rhs.178 ]
  br i1 %104, label %while.body.183, label %while.end.189

while.body.183:                                   ; preds = %land.end.182
  %105 = load i8*, i8** %t, align 8
  %106 = load i8, i8* %105, align 1
  %idxprom184 = zext i8 %106 to i64
  %arrayidx185 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i32 0, i64 %idxprom184
  %107 = load i8, i8* %arrayidx185, align 1
  %conv186 = zext i8 %107 to i32
  %108 = load i8*, i8** %t, align 8
  %idx.ext187 = sext i32 %conv186 to i64
  %add.ptr188 = getelementptr inbounds i8, i8* %108, i64 %idx.ext187
  store i8* %add.ptr188, i8** %t, align 8
  br label %while.cond.174

while.end.189:                                    ; preds = %land.end.182
  %109 = load i8*, i8** %d, align 8
  %110 = load i8*, i8** %t, align 8
  %111 = load i8*, i8** %s.addr, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %110 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %111 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %add.ptr190 = getelementptr inbounds i8, i8* %109, i64 %sub.ptr.sub
  %112 = load i8*, i8** %e, align 8
  %cmp191 = icmp ugt i8* %add.ptr190, %112
  br i1 %cmp191, label %if.then.193, label %if.end.194

if.then.193:                                      ; preds = %while.end.189
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @ident_too_long, i32 0, i32 0))
  br label %if.end.194

if.end.194:                                       ; preds = %if.then.193, %while.end.189
  %113 = load i8*, i8** %d, align 8
  %114 = load i8*, i8** %s.addr, align 8
  %115 = load i8*, i8** %t, align 8
  %116 = load i8*, i8** %s.addr, align 8
  %sub.ptr.lhs.cast195 = ptrtoint i8* %115 to i64
  %sub.ptr.rhs.cast196 = ptrtoint i8* %116 to i64
  %sub.ptr.sub197 = sub i64 %sub.ptr.lhs.cast195, %sub.ptr.rhs.cast196
  %mul = mul i64 %sub.ptr.sub197, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %113, i8* %114, i64 %mul, i32 1, i1 false)
  %117 = load i8*, i8** %t, align 8
  %118 = load i8*, i8** %s.addr, align 8
  %sub.ptr.lhs.cast198 = ptrtoint i8* %117 to i64
  %sub.ptr.rhs.cast199 = ptrtoint i8* %118 to i64
  %sub.ptr.sub200 = sub i64 %sub.ptr.lhs.cast198, %sub.ptr.rhs.cast199
  %119 = load i8*, i8** %d, align 8
  %add.ptr201 = getelementptr inbounds i8, i8* %119, i64 %sub.ptr.sub200
  store i8* %add.ptr201, i8** %d, align 8
  %120 = load i8*, i8** %t, align 8
  store i8* %120, i8** %s.addr, align 8
  br label %if.end.203

if.else.202:                                      ; preds = %land.lhs.true.166, %land.lhs.true.162, %land.lhs.true.158, %lor.lhs.false.155
  br label %for.end

if.end.203:                                       ; preds = %if.end.194
  br label %if.end.204

if.end.204:                                       ; preds = %if.end.203, %if.then.139
  br label %if.end.205

if.end.205:                                       ; preds = %if.end.204, %if.then.127
  br label %if.end.206

if.end.206:                                       ; preds = %if.end.205, %if.then.68
  br label %for.cond

for.end:                                          ; preds = %if.else.202
  br label %if.end.207

if.end.207:                                       ; preds = %for.end, %while.end
  %121 = load i8*, i8** %d, align 8
  store i8 0, i8* %121, align 1
  %122 = load i8*, i8** %dest.addr, align 8
  store i8* %122, i8** %d, align 8
  %123 = load i8*, i8** %d, align 8
  %124 = load i8, i8* %123, align 1
  %tobool208 = icmp ne i8 %124, 0
  br i1 %tobool208, label %if.then.209, label %if.end.214

if.then.209:                                      ; preds = %if.end.207
  %125 = load i32, i32* @PL_lex_state, align 4
  %cmp210 = icmp ne i32 %125, 10
  br i1 %cmp210, label %if.then.212, label %if.end.213

if.then.212:                                      ; preds = %if.then.209
  store i32 4, i32* @PL_lex_state, align 4
  br label %if.end.213

if.end.213:                                       ; preds = %if.then.212, %if.then.209
  %126 = load i8*, i8** %s.addr, align 8
  store i8* %126, i8** %retval
  br label %return

if.end.214:                                       ; preds = %if.end.207
  %127 = load i8*, i8** %s.addr, align 8
  %128 = load i8, i8* %127, align 1
  %conv215 = sext i8 %128 to i32
  %cmp216 = icmp eq i32 %conv215, 36
  br i1 %cmp216, label %land.lhs.true.218, label %if.end.301

land.lhs.true.218:                                ; preds = %if.end.214
  %129 = load i8*, i8** %s.addr, align 8
  %arrayidx219 = getelementptr inbounds i8, i8* %129, i64 1
  %130 = load i8, i8* %arrayidx219, align 1
  %conv220 = sext i8 %130 to i32
  %tobool221 = icmp ne i32 %conv220, 0
  br i1 %tobool221, label %land.lhs.true.222, label %if.end.301

land.lhs.true.222:                                ; preds = %land.lhs.true.218
  %131 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private223 = getelementptr inbounds %struct.cop, %struct.cop* %131, i32 0, i32 7
  %132 = load i8, i8* %op_private223, align 1
  %conv224 = zext i8 %132 to i32
  %and225 = and i32 %conv224, 8
  %tobool226 = icmp ne i32 %and225, 0
  br i1 %tobool226, label %cond.true.246, label %lor.lhs.false.227

lor.lhs.false.227:                                ; preds = %land.lhs.true.222
  %133 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %tobool228 = icmp ne %struct.sv* %133, null
  br i1 %tobool228, label %land.lhs.true.229, label %lor.lhs.false.238

land.lhs.true.229:                                ; preds = %lor.lhs.false.227
  %134 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_flags230 = getelementptr inbounds %struct.sv, %struct.sv* %134, i32 0, i32 2
  %135 = load i32, i32* %sv_flags230, align 4
  %and231 = and i32 %135, 536870912
  %tobool232 = icmp ne i32 %and231, 0
  br i1 %tobool232, label %land.lhs.true.233, label %lor.lhs.false.238

land.lhs.true.233:                                ; preds = %land.lhs.true.229
  %136 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private234 = getelementptr inbounds %struct.cop, %struct.cop* %136, i32 0, i32 7
  %137 = load i8, i8* %op_private234, align 1
  %conv235 = zext i8 %137 to i32
  %and236 = and i32 %conv235, 8
  %tobool237 = icmp ne i32 %and236, 0
  br i1 %tobool237, label %lor.lhs.false.238, label %lor.lhs.false.241

lor.lhs.false.238:                                ; preds = %land.lhs.true.233, %land.lhs.true.229, %lor.lhs.false.227
  %138 = load i32, i32* @PL_hints, align 4
  %and239 = and i32 %138, 8388608
  %tobool240 = icmp ne i32 %and239, 0
  br i1 %tobool240, label %lor.lhs.false.241, label %cond.true.246

lor.lhs.false.241:                                ; preds = %lor.lhs.false.238, %land.lhs.true.233
  %139 = load i8*, i8** %s.addr, align 8
  %add.ptr242 = getelementptr inbounds i8, i8* %139, i64 1
  %140 = load i8, i8* %add.ptr242, align 1
  %conv243 = zext i8 %140 to i32
  %cmp244 = icmp slt i32 %conv243, 192
  br i1 %cmp244, label %cond.true.246, label %cond.false.281

cond.true.246:                                    ; preds = %lor.lhs.false.241, %lor.lhs.false.238, %land.lhs.true.222
  %141 = load i8*, i8** %s.addr, align 8
  %add.ptr247 = getelementptr inbounds i8, i8* %141, i64 1
  %142 = load i8, i8* %add.ptr247, align 1
  %conv248 = sext i8 %142 to i32
  %cmp249 = icmp sge i32 %conv248, 65
  br i1 %cmp249, label %land.lhs.true.251, label %lor.lhs.false.256

land.lhs.true.251:                                ; preds = %cond.true.246
  %143 = load i8*, i8** %s.addr, align 8
  %add.ptr252 = getelementptr inbounds i8, i8* %143, i64 1
  %144 = load i8, i8* %add.ptr252, align 1
  %conv253 = sext i8 %144 to i32
  %cmp254 = icmp sle i32 %conv253, 90
  br i1 %cmp254, label %if.then.300, label %lor.lhs.false.256

lor.lhs.false.256:                                ; preds = %land.lhs.true.251, %cond.true.246
  %145 = load i8*, i8** %s.addr, align 8
  %add.ptr257 = getelementptr inbounds i8, i8* %145, i64 1
  %146 = load i8, i8* %add.ptr257, align 1
  %conv258 = sext i8 %146 to i32
  %cmp259 = icmp sge i32 %conv258, 97
  br i1 %cmp259, label %land.lhs.true.261, label %lor.lhs.false.266

land.lhs.true.261:                                ; preds = %lor.lhs.false.256
  %147 = load i8*, i8** %s.addr, align 8
  %add.ptr262 = getelementptr inbounds i8, i8* %147, i64 1
  %148 = load i8, i8* %add.ptr262, align 1
  %conv263 = sext i8 %148 to i32
  %cmp264 = icmp sle i32 %conv263, 122
  br i1 %cmp264, label %if.then.300, label %lor.lhs.false.266

lor.lhs.false.266:                                ; preds = %land.lhs.true.261, %lor.lhs.false.256
  %149 = load i8*, i8** %s.addr, align 8
  %add.ptr267 = getelementptr inbounds i8, i8* %149, i64 1
  %150 = load i8, i8* %add.ptr267, align 1
  %conv268 = sext i8 %150 to i32
  %cmp269 = icmp sge i32 %conv268, 48
  br i1 %cmp269, label %land.lhs.true.271, label %lor.lhs.false.276

land.lhs.true.271:                                ; preds = %lor.lhs.false.266
  %151 = load i8*, i8** %s.addr, align 8
  %add.ptr272 = getelementptr inbounds i8, i8* %151, i64 1
  %152 = load i8, i8* %add.ptr272, align 1
  %conv273 = sext i8 %152 to i32
  %cmp274 = icmp sle i32 %conv273, 57
  br i1 %cmp274, label %if.then.300, label %lor.lhs.false.276

lor.lhs.false.276:                                ; preds = %land.lhs.true.271, %lor.lhs.false.266
  %153 = load i8*, i8** %s.addr, align 8
  %add.ptr277 = getelementptr inbounds i8, i8* %153, i64 1
  %154 = load i8, i8* %add.ptr277, align 1
  %conv278 = sext i8 %154 to i32
  %cmp279 = icmp eq i32 %conv278, 95
  br i1 %cmp279, label %if.then.300, label %lor.lhs.false.286

cond.false.281:                                   ; preds = %lor.lhs.false.241
  %155 = load i8*, i8** %s.addr, align 8
  %add.ptr282 = getelementptr inbounds i8, i8* %155, i64 1
  %call283 = call signext i8 @Perl_is_utf8_alnum(i8* %add.ptr282)
  %conv284 = sext i8 %call283 to i32
  %tobool285 = icmp ne i32 %conv284, 0
  br i1 %tobool285, label %if.then.300, label %lor.lhs.false.286

lor.lhs.false.286:                                ; preds = %cond.false.281, %lor.lhs.false.276
  %156 = load i8*, i8** %s.addr, align 8
  %arrayidx287 = getelementptr inbounds i8, i8* %156, i64 1
  %157 = load i8, i8* %arrayidx287, align 1
  %conv288 = sext i8 %157 to i32
  %cmp289 = icmp eq i32 %conv288, 36
  br i1 %cmp289, label %if.then.300, label %lor.lhs.false.291

lor.lhs.false.291:                                ; preds = %lor.lhs.false.286
  %158 = load i8*, i8** %s.addr, align 8
  %arrayidx292 = getelementptr inbounds i8, i8* %158, i64 1
  %159 = load i8, i8* %arrayidx292, align 1
  %conv293 = sext i8 %159 to i32
  %cmp294 = icmp eq i32 %conv293, 123
  br i1 %cmp294, label %if.then.300, label %lor.lhs.false.296

lor.lhs.false.296:                                ; preds = %lor.lhs.false.291
  %160 = load i8*, i8** %s.addr, align 8
  %add.ptr297 = getelementptr inbounds i8, i8* %160, i64 1
  %call298 = call i32 @strncmp(i8* %add.ptr297, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.75, i32 0, i32 0), i64 2)
  %tobool299 = icmp ne i32 %call298, 0
  br i1 %tobool299, label %if.end.301, label %if.then.300

if.then.300:                                      ; preds = %lor.lhs.false.296, %lor.lhs.false.291, %lor.lhs.false.286, %cond.false.281, %lor.lhs.false.276, %land.lhs.true.271, %land.lhs.true.261, %land.lhs.true.251
  %161 = load i8*, i8** %s.addr, align 8
  store i8* %161, i8** %retval
  br label %return

if.end.301:                                       ; preds = %lor.lhs.false.296, %land.lhs.true.218, %if.end.214
  %162 = load i8*, i8** %s.addr, align 8
  %163 = load i8, i8* %162, align 1
  %conv302 = sext i8 %163 to i32
  %cmp303 = icmp eq i32 %conv302, 123
  br i1 %cmp303, label %if.then.305, label %if.else.307

if.then.305:                                      ; preds = %if.end.301
  %164 = load i8*, i8** %s.addr, align 8
  store i8* %164, i8** %bracket, align 8
  %165 = load i8*, i8** %s.addr, align 8
  %incdec.ptr306 = getelementptr inbounds i8, i8* %165, i32 1
  store i8* %incdec.ptr306, i8** %s.addr, align 8
  br label %if.end.311

if.else.307:                                      ; preds = %if.end.301
  %166 = load i32, i32* %ck_uni.addr, align 4
  %tobool308 = icmp ne i32 %166, 0
  br i1 %tobool308, label %if.then.309, label %if.end.310

if.then.309:                                      ; preds = %if.else.307
  call void @S_check_uni()
  br label %if.end.310

if.end.310:                                       ; preds = %if.then.309, %if.else.307
  br label %if.end.311

if.end.311:                                       ; preds = %if.end.310, %if.then.305
  %167 = load i8*, i8** %s.addr, align 8
  %168 = load i8*, i8** %send.addr, align 8
  %cmp312 = icmp ult i8* %167, %168
  br i1 %cmp312, label %if.then.314, label %if.end.316

if.then.314:                                      ; preds = %if.end.311
  %169 = load i8*, i8** %s.addr, align 8
  %incdec.ptr315 = getelementptr inbounds i8, i8* %169, i32 1
  store i8* %incdec.ptr315, i8** %s.addr, align 8
  %170 = load i8, i8* %169, align 1
  %171 = load i8*, i8** %d, align 8
  store i8 %170, i8* %171, align 1
  br label %if.end.316

if.end.316:                                       ; preds = %if.then.314, %if.end.311
  %172 = load i8*, i8** %d, align 8
  %arrayidx317 = getelementptr inbounds i8, i8* %172, i64 1
  store i8 0, i8* %arrayidx317, align 1
  %173 = load i8*, i8** %d, align 8
  %174 = load i8, i8* %173, align 1
  %conv318 = sext i8 %174 to i32
  %cmp319 = icmp eq i32 %conv318, 94
  br i1 %cmp319, label %land.lhs.true.321, label %if.end.350

land.lhs.true.321:                                ; preds = %if.end.316
  %175 = load i8*, i8** %s.addr, align 8
  %176 = load i8, i8* %175, align 1
  %conv322 = sext i8 %176 to i32
  %tobool323 = icmp ne i32 %conv322, 0
  br i1 %tobool323, label %land.lhs.true.324, label %if.end.350

land.lhs.true.324:                                ; preds = %land.lhs.true.321
  %177 = load i8*, i8** %s.addr, align 8
  %178 = load i8, i8* %177, align 1
  %conv325 = sext i8 %178 to i32
  %cmp326 = icmp sge i32 %conv325, 65
  br i1 %cmp326, label %land.lhs.true.328, label %lor.lhs.false.332

land.lhs.true.328:                                ; preds = %land.lhs.true.324
  %179 = load i8*, i8** %s.addr, align 8
  %180 = load i8, i8* %179, align 1
  %conv329 = sext i8 %180 to i32
  %cmp330 = icmp sle i32 %conv329, 90
  br i1 %cmp330, label %if.then.336, label %lor.lhs.false.332

lor.lhs.false.332:                                ; preds = %land.lhs.true.328, %land.lhs.true.324
  %181 = load i8*, i8** %s.addr, align 8
  %182 = load i8, i8* %181, align 1
  %conv333 = sext i8 %182 to i32
  %call334 = call i8* @strchr(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.206, i32 0, i32 0), i32 %conv333)
  %tobool335 = icmp ne i8* %call334, null
  br i1 %tobool335, label %if.then.336, label %if.end.350

if.then.336:                                      ; preds = %lor.lhs.false.332, %land.lhs.true.328
  %183 = load i8*, i8** %s.addr, align 8
  %184 = load i8, i8* %183, align 1
  %conv337 = sext i8 %184 to i32
  %cmp338 = icmp sge i32 %conv337, 97
  br i1 %cmp338, label %land.lhs.true.340, label %cond.false.346

land.lhs.true.340:                                ; preds = %if.then.336
  %185 = load i8*, i8** %s.addr, align 8
  %186 = load i8, i8* %185, align 1
  %conv341 = sext i8 %186 to i32
  %cmp342 = icmp sle i32 %conv341, 122
  br i1 %cmp342, label %cond.true.344, label %cond.false.346

cond.true.344:                                    ; preds = %land.lhs.true.340
  %187 = load i8*, i8** %s.addr, align 8
  %188 = load i8, i8* %187, align 1
  %conv345 = sext i8 %188 to i32
  %sub = sub nsw i32 %conv345, 32
  br label %cond.end

cond.false.346:                                   ; preds = %land.lhs.true.340, %if.then.336
  %189 = load i8*, i8** %s.addr, align 8
  %190 = load i8, i8* %189, align 1
  %conv347 = sext i8 %190 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false.346, %cond.true.344
  %cond = phi i32 [ %sub, %cond.true.344 ], [ %conv347, %cond.false.346 ]
  %xor = xor i32 %cond, 64
  %conv348 = trunc i32 %xor to i8
  %191 = load i8*, i8** %d, align 8
  store i8 %conv348, i8* %191, align 1
  %192 = load i8*, i8** %s.addr, align 8
  %incdec.ptr349 = getelementptr inbounds i8, i8* %192, i32 1
  store i8* %incdec.ptr349, i8** %s.addr, align 8
  br label %if.end.350

if.end.350:                                       ; preds = %cond.end, %lor.lhs.false.332, %land.lhs.true.321, %if.end.316
  %193 = load i8*, i8** %bracket, align 8
  %tobool351 = icmp ne i8* %193, null
  br i1 %tobool351, label %if.then.352, label %if.else.845

if.then.352:                                      ; preds = %if.end.350
  %194 = load i8*, i8** %s.addr, align 8
  %arrayidx353 = getelementptr inbounds i8, i8* %194, i64 -1
  %195 = load i8, i8* %arrayidx353, align 1
  %conv354 = sext i8 %195 to i32
  %cmp355 = icmp eq i32 %conv354, 32
  br i1 %cmp355, label %if.then.377, label %lor.lhs.false.357

lor.lhs.false.357:                                ; preds = %if.then.352
  %196 = load i8*, i8** %s.addr, align 8
  %arrayidx358 = getelementptr inbounds i8, i8* %196, i64 -1
  %197 = load i8, i8* %arrayidx358, align 1
  %conv359 = sext i8 %197 to i32
  %cmp360 = icmp eq i32 %conv359, 9
  br i1 %cmp360, label %if.then.377, label %lor.lhs.false.362

lor.lhs.false.362:                                ; preds = %lor.lhs.false.357
  %198 = load i8*, i8** %s.addr, align 8
  %arrayidx363 = getelementptr inbounds i8, i8* %198, i64 -1
  %199 = load i8, i8* %arrayidx363, align 1
  %conv364 = sext i8 %199 to i32
  %cmp365 = icmp eq i32 %conv364, 10
  br i1 %cmp365, label %if.then.377, label %lor.lhs.false.367

lor.lhs.false.367:                                ; preds = %lor.lhs.false.362
  %200 = load i8*, i8** %s.addr, align 8
  %arrayidx368 = getelementptr inbounds i8, i8* %200, i64 -1
  %201 = load i8, i8* %arrayidx368, align 1
  %conv369 = sext i8 %201 to i32
  %cmp370 = icmp eq i32 %conv369, 13
  br i1 %cmp370, label %if.then.377, label %lor.lhs.false.372

lor.lhs.false.372:                                ; preds = %lor.lhs.false.367
  %202 = load i8*, i8** %s.addr, align 8
  %arrayidx373 = getelementptr inbounds i8, i8* %202, i64 -1
  %203 = load i8, i8* %arrayidx373, align 1
  %conv374 = sext i8 %203 to i32
  %cmp375 = icmp eq i32 %conv374, 12
  br i1 %cmp375, label %if.then.377, label %if.end.393

if.then.377:                                      ; preds = %lor.lhs.false.372, %lor.lhs.false.367, %lor.lhs.false.362, %lor.lhs.false.357, %if.then.352
  br label %while.cond.378

while.cond.378:                                   ; preds = %if.end.391, %if.then.377
  %204 = load i8*, i8** %s.addr, align 8
  %205 = load i8*, i8** %send.addr, align 8
  %cmp379 = icmp ult i8* %204, %205
  br i1 %cmp379, label %while.body.381, label %while.end.392

while.body.381:                                   ; preds = %while.cond.378
  %206 = load i8*, i8** %s.addr, align 8
  %incdec.ptr382 = getelementptr inbounds i8, i8* %206, i32 1
  store i8* %incdec.ptr382, i8** %s.addr, align 8
  %207 = load i8, i8* %206, align 1
  store i8 %207, i8* %ch, align 1
  %208 = load i8, i8* %ch, align 1
  %conv383 = sext i8 %208 to i32
  %cmp384 = icmp eq i32 %conv383, 32
  br i1 %cmp384, label %if.end.391, label %lor.lhs.false.386

lor.lhs.false.386:                                ; preds = %while.body.381
  %209 = load i8, i8* %ch, align 1
  %conv387 = sext i8 %209 to i32
  %cmp388 = icmp eq i32 %conv387, 9
  br i1 %cmp388, label %if.end.391, label %if.then.390

if.then.390:                                      ; preds = %lor.lhs.false.386
  %210 = load i8, i8* %ch, align 1
  %211 = load i8*, i8** %d, align 8
  store i8 %210, i8* %211, align 1
  br label %while.end.392

if.end.391:                                       ; preds = %lor.lhs.false.386, %while.body.381
  br label %while.cond.378

while.end.392:                                    ; preds = %if.then.390, %while.cond.378
  br label %if.end.393

if.end.393:                                       ; preds = %while.end.392, %lor.lhs.false.372
  %212 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private394 = getelementptr inbounds %struct.cop, %struct.cop* %212, i32 0, i32 7
  %213 = load i8, i8* %op_private394, align 1
  %conv395 = zext i8 %213 to i32
  %and396 = and i32 %conv395, 8
  %tobool397 = icmp ne i32 %and396, 0
  br i1 %tobool397, label %cond.true.416, label %lor.lhs.false.398

lor.lhs.false.398:                                ; preds = %if.end.393
  %214 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %tobool399 = icmp ne %struct.sv* %214, null
  br i1 %tobool399, label %land.lhs.true.400, label %lor.lhs.false.409

land.lhs.true.400:                                ; preds = %lor.lhs.false.398
  %215 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_flags401 = getelementptr inbounds %struct.sv, %struct.sv* %215, i32 0, i32 2
  %216 = load i32, i32* %sv_flags401, align 4
  %and402 = and i32 %216, 536870912
  %tobool403 = icmp ne i32 %and402, 0
  br i1 %tobool403, label %land.lhs.true.404, label %lor.lhs.false.409

land.lhs.true.404:                                ; preds = %land.lhs.true.400
  %217 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private405 = getelementptr inbounds %struct.cop, %struct.cop* %217, i32 0, i32 7
  %218 = load i8, i8* %op_private405, align 1
  %conv406 = zext i8 %218 to i32
  %and407 = and i32 %conv406, 8
  %tobool408 = icmp ne i32 %and407, 0
  br i1 %tobool408, label %lor.lhs.false.409, label %lor.lhs.false.412

lor.lhs.false.409:                                ; preds = %land.lhs.true.404, %land.lhs.true.400, %lor.lhs.false.398
  %219 = load i32, i32* @PL_hints, align 4
  %and410 = and i32 %219, 8388608
  %tobool411 = icmp ne i32 %and410, 0
  br i1 %tobool411, label %lor.lhs.false.412, label %cond.true.416

lor.lhs.false.412:                                ; preds = %lor.lhs.false.409, %land.lhs.true.404
  %220 = load i8*, i8** %d, align 8
  %221 = load i8, i8* %220, align 1
  %conv413 = zext i8 %221 to i32
  %cmp414 = icmp slt i32 %conv413, 192
  br i1 %cmp414, label %cond.true.416, label %cond.false.436

cond.true.416:                                    ; preds = %lor.lhs.false.412, %lor.lhs.false.409, %if.end.393
  %222 = load i8*, i8** %d, align 8
  %223 = load i8, i8* %222, align 1
  %conv417 = sext i8 %223 to i32
  %cmp418 = icmp sge i32 %conv417, 65
  br i1 %cmp418, label %land.lhs.true.420, label %lor.lhs.false.424

land.lhs.true.420:                                ; preds = %cond.true.416
  %224 = load i8*, i8** %d, align 8
  %225 = load i8, i8* %224, align 1
  %conv421 = sext i8 %225 to i32
  %cmp422 = icmp sle i32 %conv421, 90
  br i1 %cmp422, label %if.then.443, label %lor.lhs.false.424

lor.lhs.false.424:                                ; preds = %land.lhs.true.420, %cond.true.416
  %226 = load i8*, i8** %d, align 8
  %227 = load i8, i8* %226, align 1
  %conv425 = sext i8 %227 to i32
  %cmp426 = icmp sge i32 %conv425, 97
  br i1 %cmp426, label %land.lhs.true.428, label %lor.lhs.false.432

land.lhs.true.428:                                ; preds = %lor.lhs.false.424
  %228 = load i8*, i8** %d, align 8
  %229 = load i8, i8* %228, align 1
  %conv429 = sext i8 %229 to i32
  %cmp430 = icmp sle i32 %conv429, 122
  br i1 %cmp430, label %if.then.443, label %lor.lhs.false.432

lor.lhs.false.432:                                ; preds = %land.lhs.true.428, %lor.lhs.false.424
  %230 = load i8*, i8** %d, align 8
  %231 = load i8, i8* %230, align 1
  %conv433 = sext i8 %231 to i32
  %cmp434 = icmp eq i32 %conv433, 95
  br i1 %cmp434, label %if.then.443, label %if.else.670

cond.false.436:                                   ; preds = %lor.lhs.false.412
  %232 = load i8*, i8** %d, align 8
  %call437 = call signext i8 @Perl_is_utf8_idcont(i8* %232)
  %conv438 = sext i8 %call437 to i32
  %tobool439 = icmp ne i32 %conv438, 0
  br i1 %tobool439, label %land.lhs.true.440, label %if.else.670

land.lhs.true.440:                                ; preds = %cond.false.436
  %233 = load i8*, i8** %d, align 8
  %call441 = call signext i8 @Perl_is_utf8_digit(i8* %233)
  %tobool442 = icmp ne i8 %call441, 0
  br i1 %tobool442, label %if.else.670, label %if.then.443

if.then.443:                                      ; preds = %land.lhs.true.440, %lor.lhs.false.432, %land.lhs.true.428, %land.lhs.true.420
  %234 = load i8*, i8** %d, align 8
  %incdec.ptr444 = getelementptr inbounds i8, i8* %234, i32 1
  store i8* %incdec.ptr444, i8** %d, align 8
  %235 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %tobool445 = icmp ne %struct.sv* %235, null
  br i1 %tobool445, label %land.lhs.true.446, label %lor.lhs.false.455

land.lhs.true.446:                                ; preds = %if.then.443
  %236 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_flags447 = getelementptr inbounds %struct.sv, %struct.sv* %236, i32 0, i32 2
  %237 = load i32, i32* %sv_flags447, align 4
  %and448 = and i32 %237, 536870912
  %tobool449 = icmp ne i32 %and448, 0
  br i1 %tobool449, label %land.lhs.true.450, label %lor.lhs.false.455

land.lhs.true.450:                                ; preds = %land.lhs.true.446
  %238 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private451 = getelementptr inbounds %struct.cop, %struct.cop* %238, i32 0, i32 7
  %239 = load i8, i8* %op_private451, align 1
  %conv452 = zext i8 %239 to i32
  %and453 = and i32 %conv452, 8
  %tobool454 = icmp ne i32 %and453, 0
  br i1 %tobool454, label %lor.lhs.false.455, label %if.then.458

lor.lhs.false.455:                                ; preds = %land.lhs.true.450, %land.lhs.true.446, %if.then.443
  %240 = load i32, i32* @PL_hints, align 4
  %and456 = and i32 %240, 8388608
  %tobool457 = icmp ne i32 %and456, 0
  br i1 %tobool457, label %if.then.458, label %if.else.554

if.then.458:                                      ; preds = %lor.lhs.false.455, %land.lhs.true.450
  %241 = load i8*, i8** %s.addr, align 8
  store i8* %241, i8** %e, align 8
  br label %while.cond.459

while.cond.459:                                   ; preds = %while.end.544, %if.then.458
  %242 = load i8*, i8** %e, align 8
  %243 = load i8*, i8** %send.addr, align 8
  %cmp460 = icmp ult i8* %242, %243
  br i1 %cmp460, label %land.lhs.true.462, label %lor.rhs

land.lhs.true.462:                                ; preds = %while.cond.459
  %244 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private463 = getelementptr inbounds %struct.cop, %struct.cop* %244, i32 0, i32 7
  %245 = load i8, i8* %op_private463, align 1
  %conv464 = zext i8 %245 to i32
  %and465 = and i32 %conv464, 8
  %tobool466 = icmp ne i32 %and465, 0
  br i1 %tobool466, label %cond.true.485, label %lor.lhs.false.467

lor.lhs.false.467:                                ; preds = %land.lhs.true.462
  %246 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %tobool468 = icmp ne %struct.sv* %246, null
  br i1 %tobool468, label %land.lhs.true.469, label %lor.lhs.false.478

land.lhs.true.469:                                ; preds = %lor.lhs.false.467
  %247 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_flags470 = getelementptr inbounds %struct.sv, %struct.sv* %247, i32 0, i32 2
  %248 = load i32, i32* %sv_flags470, align 4
  %and471 = and i32 %248, 536870912
  %tobool472 = icmp ne i32 %and471, 0
  br i1 %tobool472, label %land.lhs.true.473, label %lor.lhs.false.478

land.lhs.true.473:                                ; preds = %land.lhs.true.469
  %249 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private474 = getelementptr inbounds %struct.cop, %struct.cop* %249, i32 0, i32 7
  %250 = load i8, i8* %op_private474, align 1
  %conv475 = zext i8 %250 to i32
  %and476 = and i32 %conv475, 8
  %tobool477 = icmp ne i32 %and476, 0
  br i1 %tobool477, label %lor.lhs.false.478, label %lor.lhs.false.481

lor.lhs.false.478:                                ; preds = %land.lhs.true.473, %land.lhs.true.469, %lor.lhs.false.467
  %251 = load i32, i32* @PL_hints, align 4
  %and479 = and i32 %251, 8388608
  %tobool480 = icmp ne i32 %and479, 0
  br i1 %tobool480, label %lor.lhs.false.481, label %cond.true.485

lor.lhs.false.481:                                ; preds = %lor.lhs.false.478, %land.lhs.true.473
  %252 = load i8*, i8** %e, align 8
  %253 = load i8, i8* %252, align 1
  %conv482 = zext i8 %253 to i32
  %cmp483 = icmp slt i32 %conv482, 192
  br i1 %cmp483, label %cond.true.485, label %cond.false.513

cond.true.485:                                    ; preds = %lor.lhs.false.481, %lor.lhs.false.478, %land.lhs.true.462
  %254 = load i8*, i8** %e, align 8
  %255 = load i8, i8* %254, align 1
  %conv486 = sext i8 %255 to i32
  %cmp487 = icmp sge i32 %conv486, 65
  br i1 %cmp487, label %land.lhs.true.489, label %lor.lhs.false.493

land.lhs.true.489:                                ; preds = %cond.true.485
  %256 = load i8*, i8** %e, align 8
  %257 = load i8, i8* %256, align 1
  %conv490 = sext i8 %257 to i32
  %cmp491 = icmp sle i32 %conv490, 90
  br i1 %cmp491, label %lor.end, label %lor.lhs.false.493

lor.lhs.false.493:                                ; preds = %land.lhs.true.489, %cond.true.485
  %258 = load i8*, i8** %e, align 8
  %259 = load i8, i8* %258, align 1
  %conv494 = sext i8 %259 to i32
  %cmp495 = icmp sge i32 %conv494, 97
  br i1 %cmp495, label %land.lhs.true.497, label %lor.lhs.false.501

land.lhs.true.497:                                ; preds = %lor.lhs.false.493
  %260 = load i8*, i8** %e, align 8
  %261 = load i8, i8* %260, align 1
  %conv498 = sext i8 %261 to i32
  %cmp499 = icmp sle i32 %conv498, 122
  br i1 %cmp499, label %lor.end, label %lor.lhs.false.501

lor.lhs.false.501:                                ; preds = %land.lhs.true.497, %lor.lhs.false.493
  %262 = load i8*, i8** %e, align 8
  %263 = load i8, i8* %262, align 1
  %conv502 = sext i8 %263 to i32
  %cmp503 = icmp sge i32 %conv502, 48
  br i1 %cmp503, label %land.lhs.true.505, label %lor.lhs.false.509

land.lhs.true.505:                                ; preds = %lor.lhs.false.501
  %264 = load i8*, i8** %e, align 8
  %265 = load i8, i8* %264, align 1
  %conv506 = sext i8 %265 to i32
  %cmp507 = icmp sle i32 %conv506, 57
  br i1 %cmp507, label %lor.end, label %lor.lhs.false.509

lor.lhs.false.509:                                ; preds = %land.lhs.true.505, %lor.lhs.false.501
  %266 = load i8*, i8** %e, align 8
  %267 = load i8, i8* %266, align 1
  %conv510 = sext i8 %267 to i32
  %cmp511 = icmp eq i32 %conv510, 95
  br i1 %cmp511, label %lor.end, label %lor.rhs

cond.false.513:                                   ; preds = %lor.lhs.false.481
  %268 = load i8*, i8** %e, align 8
  %call514 = call signext i8 @Perl_is_utf8_alnum(i8* %268)
  %conv515 = sext i8 %call514 to i32
  %tobool516 = icmp ne i32 %conv515, 0
  br i1 %tobool516, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %cond.false.513, %lor.lhs.false.509, %while.cond.459
  %269 = load i8*, i8** %e, align 8
  %270 = load i8, i8* %269, align 1
  %conv517 = sext i8 %270 to i32
  %cmp518 = icmp eq i32 %conv517, 58
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %cond.false.513, %lor.lhs.false.509, %land.lhs.true.505, %land.lhs.true.497, %land.lhs.true.489
  %271 = phi i1 [ true, %cond.false.513 ], [ true, %lor.lhs.false.509 ], [ true, %land.lhs.true.505 ], [ true, %land.lhs.true.497 ], [ true, %land.lhs.true.489 ], [ %cmp518, %lor.rhs ]
  br i1 %271, label %while.body.520, label %while.end.545

while.body.520:                                   ; preds = %lor.end
  %272 = load i8*, i8** %e, align 8
  %273 = load i8, i8* %272, align 1
  %idxprom521 = zext i8 %273 to i64
  %arrayidx522 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i32 0, i64 %idxprom521
  %274 = load i8, i8* %arrayidx522, align 1
  %conv523 = zext i8 %274 to i32
  %275 = load i8*, i8** %e, align 8
  %idx.ext524 = sext i32 %conv523 to i64
  %add.ptr525 = getelementptr inbounds i8, i8* %275, i64 %idx.ext524
  store i8* %add.ptr525, i8** %e, align 8
  br label %while.cond.526

while.cond.526:                                   ; preds = %while.body.538, %while.body.520
  %276 = load i8*, i8** %e, align 8
  %277 = load i8*, i8** %send.addr, align 8
  %cmp527 = icmp ult i8* %276, %277
  br i1 %cmp527, label %land.lhs.true.529, label %land.end.537

land.lhs.true.529:                                ; preds = %while.cond.526
  %278 = load i8*, i8** %e, align 8
  %279 = load i8, i8* %278, align 1
  %conv530 = zext i8 %279 to i32
  %and531 = and i32 %conv530, 128
  %tobool532 = icmp ne i32 %and531, 0
  br i1 %tobool532, label %land.rhs.533, label %land.end.537

land.rhs.533:                                     ; preds = %land.lhs.true.529
  %280 = load i8*, i8** %e, align 8
  %call534 = call signext i8 @Perl_is_utf8_mark(i8* %280)
  %conv535 = sext i8 %call534 to i32
  %tobool536 = icmp ne i32 %conv535, 0
  br label %land.end.537

land.end.537:                                     ; preds = %land.rhs.533, %land.lhs.true.529, %while.cond.526
  %281 = phi i1 [ false, %land.lhs.true.529 ], [ false, %while.cond.526 ], [ %tobool536, %land.rhs.533 ]
  br i1 %281, label %while.body.538, label %while.end.544

while.body.538:                                   ; preds = %land.end.537
  %282 = load i8*, i8** %e, align 8
  %283 = load i8, i8* %282, align 1
  %idxprom539 = zext i8 %283 to i64
  %arrayidx540 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i32 0, i64 %idxprom539
  %284 = load i8, i8* %arrayidx540, align 1
  %conv541 = zext i8 %284 to i32
  %285 = load i8*, i8** %e, align 8
  %idx.ext542 = sext i32 %conv541 to i64
  %add.ptr543 = getelementptr inbounds i8, i8* %285, i64 %idx.ext542
  store i8* %add.ptr543, i8** %e, align 8
  br label %while.cond.526

while.end.544:                                    ; preds = %land.end.537
  br label %while.cond.459

while.end.545:                                    ; preds = %lor.end
  %286 = load i8*, i8** %d, align 8
  %287 = load i8*, i8** %s.addr, align 8
  %288 = load i8*, i8** %e, align 8
  %289 = load i8*, i8** %s.addr, align 8
  %sub.ptr.lhs.cast546 = ptrtoint i8* %288 to i64
  %sub.ptr.rhs.cast547 = ptrtoint i8* %289 to i64
  %sub.ptr.sub548 = sub i64 %sub.ptr.lhs.cast546, %sub.ptr.rhs.cast547
  %mul549 = mul i64 %sub.ptr.sub548, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %286, i8* %287, i64 %mul549, i32 1, i1 false)
  %290 = load i8*, i8** %e, align 8
  %291 = load i8*, i8** %s.addr, align 8
  %sub.ptr.lhs.cast550 = ptrtoint i8* %290 to i64
  %sub.ptr.rhs.cast551 = ptrtoint i8* %291 to i64
  %sub.ptr.sub552 = sub i64 %sub.ptr.lhs.cast550, %sub.ptr.rhs.cast551
  %292 = load i8*, i8** %d, align 8
  %add.ptr553 = getelementptr inbounds i8, i8* %292, i64 %sub.ptr.sub552
  store i8* %add.ptr553, i8** %d, align 8
  %293 = load i8*, i8** %e, align 8
  store i8* %293, i8** %s.addr, align 8
  br label %if.end.599

if.else.554:                                      ; preds = %lor.lhs.false.455
  br label %while.cond.555

while.cond.555:                                   ; preds = %while.body.591, %if.else.554
  %294 = load i8*, i8** %s.addr, align 8
  %295 = load i8, i8* %294, align 1
  %conv556 = sext i8 %295 to i32
  %cmp557 = icmp sge i32 %conv556, 65
  br i1 %cmp557, label %land.lhs.true.559, label %lor.lhs.false.563

land.lhs.true.559:                                ; preds = %while.cond.555
  %296 = load i8*, i8** %s.addr, align 8
  %297 = load i8, i8* %296, align 1
  %conv560 = sext i8 %297 to i32
  %cmp561 = icmp sle i32 %conv560, 90
  br i1 %cmp561, label %land.rhs.587, label %lor.lhs.false.563

lor.lhs.false.563:                                ; preds = %land.lhs.true.559, %while.cond.555
  %298 = load i8*, i8** %s.addr, align 8
  %299 = load i8, i8* %298, align 1
  %conv564 = sext i8 %299 to i32
  %cmp565 = icmp sge i32 %conv564, 97
  br i1 %cmp565, label %land.lhs.true.567, label %lor.lhs.false.571

land.lhs.true.567:                                ; preds = %lor.lhs.false.563
  %300 = load i8*, i8** %s.addr, align 8
  %301 = load i8, i8* %300, align 1
  %conv568 = sext i8 %301 to i32
  %cmp569 = icmp sle i32 %conv568, 122
  br i1 %cmp569, label %land.rhs.587, label %lor.lhs.false.571

lor.lhs.false.571:                                ; preds = %land.lhs.true.567, %lor.lhs.false.563
  %302 = load i8*, i8** %s.addr, align 8
  %303 = load i8, i8* %302, align 1
  %conv572 = sext i8 %303 to i32
  %cmp573 = icmp sge i32 %conv572, 48
  br i1 %cmp573, label %land.lhs.true.575, label %lor.lhs.false.579

land.lhs.true.575:                                ; preds = %lor.lhs.false.571
  %304 = load i8*, i8** %s.addr, align 8
  %305 = load i8, i8* %304, align 1
  %conv576 = sext i8 %305 to i32
  %cmp577 = icmp sle i32 %conv576, 57
  br i1 %cmp577, label %land.rhs.587, label %lor.lhs.false.579

lor.lhs.false.579:                                ; preds = %land.lhs.true.575, %lor.lhs.false.571
  %306 = load i8*, i8** %s.addr, align 8
  %307 = load i8, i8* %306, align 1
  %conv580 = sext i8 %307 to i32
  %cmp581 = icmp eq i32 %conv580, 95
  br i1 %cmp581, label %land.rhs.587, label %lor.lhs.false.583

lor.lhs.false.583:                                ; preds = %lor.lhs.false.579
  %308 = load i8*, i8** %s.addr, align 8
  %309 = load i8, i8* %308, align 1
  %conv584 = sext i8 %309 to i32
  %cmp585 = icmp eq i32 %conv584, 58
  br i1 %cmp585, label %land.rhs.587, label %land.end.590

land.rhs.587:                                     ; preds = %lor.lhs.false.583, %lor.lhs.false.579, %land.lhs.true.575, %land.lhs.true.567, %land.lhs.true.559
  %310 = load i8*, i8** %d, align 8
  %311 = load i8*, i8** %e, align 8
  %cmp588 = icmp ult i8* %310, %311
  br label %land.end.590

land.end.590:                                     ; preds = %land.rhs.587, %lor.lhs.false.583
  %312 = phi i1 [ false, %lor.lhs.false.583 ], [ %cmp588, %land.rhs.587 ]
  br i1 %312, label %while.body.591, label %while.end.594

while.body.591:                                   ; preds = %land.end.590
  %313 = load i8*, i8** %s.addr, align 8
  %incdec.ptr592 = getelementptr inbounds i8, i8* %313, i32 1
  store i8* %incdec.ptr592, i8** %s.addr, align 8
  %314 = load i8, i8* %313, align 1
  %315 = load i8*, i8** %d, align 8
  %incdec.ptr593 = getelementptr inbounds i8, i8* %315, i32 1
  store i8* %incdec.ptr593, i8** %d, align 8
  store i8 %314, i8* %315, align 1
  br label %while.cond.555

while.end.594:                                    ; preds = %land.end.590
  %316 = load i8*, i8** %d, align 8
  %317 = load i8*, i8** %e, align 8
  %cmp595 = icmp uge i8* %316, %317
  br i1 %cmp595, label %if.then.597, label %if.end.598

if.then.597:                                      ; preds = %while.end.594
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @ident_too_long, i32 0, i32 0))
  br label %if.end.598

if.end.598:                                       ; preds = %if.then.597, %while.end.594
  br label %if.end.599

if.end.599:                                       ; preds = %if.end.598, %while.end.545
  %318 = load i8*, i8** %d, align 8
  store i8 0, i8* %318, align 1
  br label %while.cond.600

while.cond.600:                                   ; preds = %while.body.613, %if.end.599
  %319 = load i8*, i8** %s.addr, align 8
  %320 = load i8*, i8** %send.addr, align 8
  %cmp601 = icmp ult i8* %319, %320
  br i1 %cmp601, label %land.rhs.603, label %land.end.612

land.rhs.603:                                     ; preds = %while.cond.600
  %321 = load i8*, i8** %s.addr, align 8
  %322 = load i8, i8* %321, align 1
  %conv604 = sext i8 %322 to i32
  %cmp605 = icmp eq i32 %conv604, 32
  br i1 %cmp605, label %lor.end.611, label %lor.rhs.607

lor.rhs.607:                                      ; preds = %land.rhs.603
  %323 = load i8*, i8** %s.addr, align 8
  %324 = load i8, i8* %323, align 1
  %conv608 = sext i8 %324 to i32
  %cmp609 = icmp eq i32 %conv608, 9
  br label %lor.end.611

lor.end.611:                                      ; preds = %lor.rhs.607, %land.rhs.603
  %325 = phi i1 [ true, %land.rhs.603 ], [ %cmp609, %lor.rhs.607 ]
  br label %land.end.612

land.end.612:                                     ; preds = %lor.end.611, %while.cond.600
  %326 = phi i1 [ false, %while.cond.600 ], [ %325, %lor.end.611 ]
  br i1 %326, label %while.body.613, label %while.end.615

while.body.613:                                   ; preds = %land.end.612
  %327 = load i8*, i8** %s.addr, align 8
  %incdec.ptr614 = getelementptr inbounds i8, i8* %327, i32 1
  store i8* %incdec.ptr614, i8** %s.addr, align 8
  br label %while.cond.600

while.end.615:                                    ; preds = %land.end.612
  %328 = load i8*, i8** %s.addr, align 8
  %329 = load i8, i8* %328, align 1
  %conv616 = sext i8 %329 to i32
  %cmp617 = icmp eq i32 %conv616, 91
  br i1 %cmp617, label %if.then.626, label %lor.lhs.false.619

lor.lhs.false.619:                                ; preds = %while.end.615
  %330 = load i8*, i8** %s.addr, align 8
  %331 = load i8, i8* %330, align 1
  %conv620 = sext i8 %331 to i32
  %cmp621 = icmp eq i32 %conv620, 123
  br i1 %cmp621, label %land.lhs.true.623, label %if.end.669

land.lhs.true.623:                                ; preds = %lor.lhs.false.619
  %332 = load i8*, i8** %dest.addr, align 8
  %call624 = call i32 @strcmp(i8* %332, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.96, i32 0, i32 0))
  %tobool625 = icmp ne i32 %call624, 0
  br i1 %tobool625, label %if.then.626, label %if.end.669

if.then.626:                                      ; preds = %land.lhs.true.623, %while.end.615
  %333 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings = getelementptr inbounds %struct.cop, %struct.cop* %333, i32 0, i32 14
  %334 = load %struct.sv*, %struct.sv** %cop_warnings, align 8
  %cmp627 = icmp ne %struct.sv* %334, null
  br i1 %cmp627, label %land.lhs.true.629, label %lor.lhs.false.643

land.lhs.true.629:                                ; preds = %if.then.626
  %335 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings630 = getelementptr inbounds %struct.cop, %struct.cop* %335, i32 0, i32 14
  %336 = load %struct.sv*, %struct.sv** %cop_warnings630, align 8
  %cmp631 = icmp ne %struct.sv* %336, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 2)
  br i1 %cmp631, label %land.lhs.true.633, label %lor.lhs.false.643

land.lhs.true.633:                                ; preds = %land.lhs.true.629
  %337 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings634 = getelementptr inbounds %struct.cop, %struct.cop* %337, i32 0, i32 14
  %338 = load %struct.sv*, %struct.sv** %cop_warnings634, align 8
  %cmp635 = icmp eq %struct.sv* %338, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 1)
  br i1 %cmp635, label %land.lhs.true.651, label %lor.lhs.false.637

lor.lhs.false.637:                                ; preds = %land.lhs.true.633
  %339 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings638 = getelementptr inbounds %struct.cop, %struct.cop* %339, i32 0, i32 14
  %340 = load %struct.sv*, %struct.sv** %cop_warnings638, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %340, i32 0, i32 0
  %341 = load i8*, i8** %sv_any, align 8
  %342 = bitcast i8* %341 to %struct.xpv*
  %xpv_pv = getelementptr inbounds %struct.xpv, %struct.xpv* %342, i32 0, i32 0
  %343 = load i8*, i8** %xpv_pv, align 8
  %arrayidx639 = getelementptr inbounds i8, i8* %343, i64 7
  %344 = load i8, i8* %arrayidx639, align 1
  %conv640 = sext i8 %344 to i32
  %and641 = and i32 %conv640, 4
  %tobool642 = icmp ne i32 %and641, 0
  br i1 %tobool642, label %land.lhs.true.651, label %lor.lhs.false.643

lor.lhs.false.643:                                ; preds = %lor.lhs.false.637, %land.lhs.true.629, %if.then.626
  %345 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings644 = getelementptr inbounds %struct.cop, %struct.cop* %345, i32 0, i32 14
  %346 = load %struct.sv*, %struct.sv** %cop_warnings644, align 8
  %cmp645 = icmp eq %struct.sv* %346, null
  br i1 %cmp645, label %land.lhs.true.647, label %if.end.665

land.lhs.true.647:                                ; preds = %lor.lhs.false.643
  %347 = load i8, i8* @PL_dowarn, align 1
  %conv648 = zext i8 %347 to i32
  %and649 = and i32 %conv648, 1
  %tobool650 = icmp ne i32 %and649, 0
  br i1 %tobool650, label %land.lhs.true.651, label %if.end.665

land.lhs.true.651:                                ; preds = %land.lhs.true.647, %lor.lhs.false.637, %land.lhs.true.633
  %348 = load i8*, i8** %dest.addr, align 8
  %349 = load i8*, i8** %d, align 8
  %350 = load i8*, i8** %dest.addr, align 8
  %sub.ptr.lhs.cast652 = ptrtoint i8* %349 to i64
  %sub.ptr.rhs.cast653 = ptrtoint i8* %350 to i64
  %sub.ptr.sub654 = sub i64 %sub.ptr.lhs.cast652, %sub.ptr.rhs.cast653
  %conv655 = trunc i64 %sub.ptr.sub654 to i32
  %call656 = call i32 @Perl_keyword(i8* %348, i32 %conv655)
  %tobool657 = icmp ne i32 %call656, 0
  br i1 %tobool657, label %if.then.658, label %if.end.665

if.then.658:                                      ; preds = %land.lhs.true.651
  %351 = load i8*, i8** %s.addr, align 8
  %352 = load i8, i8* %351, align 1
  %conv659 = sext i8 %352 to i32
  %cmp660 = icmp eq i32 %conv659, 91
  %cond662 = select i1 %cmp660, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.207, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.208, i32 0, i32 0)
  store i8* %cond662, i8** %brack, align 8
  %353 = load i8, i8* %funny, align 1
  %conv663 = sext i8 %353 to i32
  %354 = load i8*, i8** %dest.addr, align 8
  %355 = load i8*, i8** %brack, align 8
  %356 = load i8, i8* %funny, align 1
  %conv664 = sext i8 %356 to i32
  %357 = load i8*, i8** %dest.addr, align 8
  %358 = load i8*, i8** %brack, align 8
  call void (i32, i8*, ...) @Perl_warner(i32 29, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.209, i32 0, i32 0), i32 %conv663, i8* %354, i8* %355, i32 %conv664, i8* %357, i8* %358)
  br label %if.end.665

if.end.665:                                       ; preds = %if.then.658, %land.lhs.true.651, %land.lhs.true.647, %lor.lhs.false.643
  %359 = load i8*, i8** %bracket, align 8
  %incdec.ptr666 = getelementptr inbounds i8, i8* %359, i32 1
  store i8* %incdec.ptr666, i8** %bracket, align 8
  %360 = load i32, i32* @PL_lex_brackets, align 4
  %inc = add nsw i32 %360, 1
  store i32 %inc, i32* @PL_lex_brackets, align 4
  %idxprom667 = sext i32 %360 to i64
  %361 = load i8*, i8** @PL_lex_brackstack, align 8
  %arrayidx668 = getelementptr inbounds i8, i8* %361, i64 %idxprom667
  store i8 -128, i8* %arrayidx668, align 1
  %362 = load i8*, i8** %s.addr, align 8
  store i8* %362, i8** %retval
  br label %return

if.end.669:                                       ; preds = %land.lhs.true.623, %lor.lhs.false.619
  br label %if.end.781

if.else.670:                                      ; preds = %land.lhs.true.440, %cond.false.436, %lor.lhs.false.432
  %363 = load i8*, i8** %d, align 8
  %364 = load i8, i8* %363, align 1
  %conv671 = sext i8 %364 to i32
  %cmp672 = icmp sge i32 %conv671, 65
  br i1 %cmp672, label %land.lhs.true.674, label %lor.lhs.false.678

land.lhs.true.674:                                ; preds = %if.else.670
  %365 = load i8*, i8** %d, align 8
  %366 = load i8, i8* %365, align 1
  %conv675 = sext i8 %366 to i32
  %cmp676 = icmp sle i32 %conv675, 90
  br i1 %cmp676, label %if.end.780, label %lor.lhs.false.678

lor.lhs.false.678:                                ; preds = %land.lhs.true.674, %if.else.670
  %367 = load i8*, i8** %d, align 8
  %368 = load i8, i8* %367, align 1
  %conv679 = sext i8 %368 to i32
  %cmp680 = icmp sge i32 %conv679, 97
  br i1 %cmp680, label %land.lhs.true.682, label %lor.lhs.false.686

land.lhs.true.682:                                ; preds = %lor.lhs.false.678
  %369 = load i8*, i8** %d, align 8
  %370 = load i8, i8* %369, align 1
  %conv683 = sext i8 %370 to i32
  %cmp684 = icmp sle i32 %conv683, 122
  br i1 %cmp684, label %if.end.780, label %lor.lhs.false.686

lor.lhs.false.686:                                ; preds = %land.lhs.true.682, %lor.lhs.false.678
  %371 = load i8*, i8** %d, align 8
  %372 = load i8, i8* %371, align 1
  %conv687 = sext i8 %372 to i32
  %cmp688 = icmp sge i32 %conv687, 48
  br i1 %cmp688, label %land.lhs.true.690, label %lor.lhs.false.694

land.lhs.true.690:                                ; preds = %lor.lhs.false.686
  %373 = load i8*, i8** %d, align 8
  %374 = load i8, i8* %373, align 1
  %conv691 = sext i8 %374 to i32
  %cmp692 = icmp sle i32 %conv691, 57
  br i1 %cmp692, label %if.end.780, label %lor.lhs.false.694

lor.lhs.false.694:                                ; preds = %land.lhs.true.690, %lor.lhs.false.686
  %375 = load i8*, i8** %d, align 8
  %376 = load i8, i8* %375, align 1
  %conv695 = sext i8 %376 to i32
  %cmp696 = icmp eq i32 %conv695, 95
  br i1 %cmp696, label %if.end.780, label %land.lhs.true.698

land.lhs.true.698:                                ; preds = %lor.lhs.false.694
  %377 = load i8*, i8** %d, align 8
  %378 = load i8, i8* %377, align 1
  %conv699 = sext i8 %378 to i32
  %cmp700 = icmp sgt i32 %conv699, 32
  br i1 %cmp700, label %land.lhs.true.702, label %lor.lhs.false.706

land.lhs.true.702:                                ; preds = %land.lhs.true.698
  %379 = load i8*, i8** %d, align 8
  %380 = load i8, i8* %379, align 1
  %conv703 = sext i8 %380 to i32
  %cmp704 = icmp slt i32 %conv703, 127
  br i1 %cmp704, label %if.end.780, label %lor.lhs.false.706

lor.lhs.false.706:                                ; preds = %land.lhs.true.702, %land.lhs.true.698
  %381 = load i8*, i8** %d, align 8
  %382 = load i8, i8* %381, align 1
  %conv707 = sext i8 %382 to i32
  %cmp708 = icmp eq i32 %conv707, 32
  br i1 %cmp708, label %if.end.780, label %land.lhs.true.710

land.lhs.true.710:                                ; preds = %lor.lhs.false.706
  %383 = load i8*, i8** %s.addr, align 8
  %384 = load i8, i8* %383, align 1
  %conv711 = sext i8 %384 to i32
  %cmp712 = icmp sge i32 %conv711, 65
  br i1 %cmp712, label %land.lhs.true.714, label %lor.lhs.false.718

land.lhs.true.714:                                ; preds = %land.lhs.true.710
  %385 = load i8*, i8** %s.addr, align 8
  %386 = load i8, i8* %385, align 1
  %conv715 = sext i8 %386 to i32
  %cmp716 = icmp sle i32 %conv715, 90
  br i1 %cmp716, label %if.then.738, label %lor.lhs.false.718

lor.lhs.false.718:                                ; preds = %land.lhs.true.714, %land.lhs.true.710
  %387 = load i8*, i8** %s.addr, align 8
  %388 = load i8, i8* %387, align 1
  %conv719 = sext i8 %388 to i32
  %cmp720 = icmp sge i32 %conv719, 97
  br i1 %cmp720, label %land.lhs.true.722, label %lor.lhs.false.726

land.lhs.true.722:                                ; preds = %lor.lhs.false.718
  %389 = load i8*, i8** %s.addr, align 8
  %390 = load i8, i8* %389, align 1
  %conv723 = sext i8 %390 to i32
  %cmp724 = icmp sle i32 %conv723, 122
  br i1 %cmp724, label %if.then.738, label %lor.lhs.false.726

lor.lhs.false.726:                                ; preds = %land.lhs.true.722, %lor.lhs.false.718
  %391 = load i8*, i8** %s.addr, align 8
  %392 = load i8, i8* %391, align 1
  %conv727 = sext i8 %392 to i32
  %cmp728 = icmp sge i32 %conv727, 48
  br i1 %cmp728, label %land.lhs.true.730, label %lor.lhs.false.734

land.lhs.true.730:                                ; preds = %lor.lhs.false.726
  %393 = load i8*, i8** %s.addr, align 8
  %394 = load i8, i8* %393, align 1
  %conv731 = sext i8 %394 to i32
  %cmp732 = icmp sle i32 %conv731, 57
  br i1 %cmp732, label %if.then.738, label %lor.lhs.false.734

lor.lhs.false.734:                                ; preds = %land.lhs.true.730, %lor.lhs.false.726
  %395 = load i8*, i8** %s.addr, align 8
  %396 = load i8, i8* %395, align 1
  %conv735 = sext i8 %396 to i32
  %cmp736 = icmp eq i32 %conv735, 95
  br i1 %cmp736, label %if.then.738, label %if.end.780

if.then.738:                                      ; preds = %lor.lhs.false.734, %land.lhs.true.730, %land.lhs.true.722, %land.lhs.true.714
  %397 = load i8*, i8** %d, align 8
  %incdec.ptr739 = getelementptr inbounds i8, i8* %397, i32 1
  store i8* %incdec.ptr739, i8** %d, align 8
  br label %while.cond.740

while.cond.740:                                   ; preds = %while.body.772, %if.then.738
  %398 = load i8*, i8** %s.addr, align 8
  %399 = load i8, i8* %398, align 1
  %conv741 = sext i8 %399 to i32
  %cmp742 = icmp sge i32 %conv741, 65
  br i1 %cmp742, label %land.lhs.true.744, label %lor.lhs.false.748

land.lhs.true.744:                                ; preds = %while.cond.740
  %400 = load i8*, i8** %s.addr, align 8
  %401 = load i8, i8* %400, align 1
  %conv745 = sext i8 %401 to i32
  %cmp746 = icmp sle i32 %conv745, 90
  br i1 %cmp746, label %land.rhs.768, label %lor.lhs.false.748

lor.lhs.false.748:                                ; preds = %land.lhs.true.744, %while.cond.740
  %402 = load i8*, i8** %s.addr, align 8
  %403 = load i8, i8* %402, align 1
  %conv749 = sext i8 %403 to i32
  %cmp750 = icmp sge i32 %conv749, 97
  br i1 %cmp750, label %land.lhs.true.752, label %lor.lhs.false.756

land.lhs.true.752:                                ; preds = %lor.lhs.false.748
  %404 = load i8*, i8** %s.addr, align 8
  %405 = load i8, i8* %404, align 1
  %conv753 = sext i8 %405 to i32
  %cmp754 = icmp sle i32 %conv753, 122
  br i1 %cmp754, label %land.rhs.768, label %lor.lhs.false.756

lor.lhs.false.756:                                ; preds = %land.lhs.true.752, %lor.lhs.false.748
  %406 = load i8*, i8** %s.addr, align 8
  %407 = load i8, i8* %406, align 1
  %conv757 = sext i8 %407 to i32
  %cmp758 = icmp sge i32 %conv757, 48
  br i1 %cmp758, label %land.lhs.true.760, label %lor.lhs.false.764

land.lhs.true.760:                                ; preds = %lor.lhs.false.756
  %408 = load i8*, i8** %s.addr, align 8
  %409 = load i8, i8* %408, align 1
  %conv761 = sext i8 %409 to i32
  %cmp762 = icmp sle i32 %conv761, 57
  br i1 %cmp762, label %land.rhs.768, label %lor.lhs.false.764

lor.lhs.false.764:                                ; preds = %land.lhs.true.760, %lor.lhs.false.756
  %410 = load i8*, i8** %s.addr, align 8
  %411 = load i8, i8* %410, align 1
  %conv765 = sext i8 %411 to i32
  %cmp766 = icmp eq i32 %conv765, 95
  br i1 %cmp766, label %land.rhs.768, label %land.end.771

land.rhs.768:                                     ; preds = %lor.lhs.false.764, %land.lhs.true.760, %land.lhs.true.752, %land.lhs.true.744
  %412 = load i8*, i8** %d, align 8
  %413 = load i8*, i8** %e, align 8
  %cmp769 = icmp ult i8* %412, %413
  br label %land.end.771

land.end.771:                                     ; preds = %land.rhs.768, %lor.lhs.false.764
  %414 = phi i1 [ false, %lor.lhs.false.764 ], [ %cmp769, %land.rhs.768 ]
  br i1 %414, label %while.body.772, label %while.end.775

while.body.772:                                   ; preds = %land.end.771
  %415 = load i8*, i8** %s.addr, align 8
  %incdec.ptr773 = getelementptr inbounds i8, i8* %415, i32 1
  store i8* %incdec.ptr773, i8** %s.addr, align 8
  %416 = load i8, i8* %415, align 1
  %417 = load i8*, i8** %d, align 8
  %incdec.ptr774 = getelementptr inbounds i8, i8* %417, i32 1
  store i8* %incdec.ptr774, i8** %d, align 8
  store i8 %416, i8* %417, align 1
  br label %while.cond.740

while.end.775:                                    ; preds = %land.end.771
  %418 = load i8*, i8** %d, align 8
  %419 = load i8*, i8** %e, align 8
  %cmp776 = icmp uge i8* %418, %419
  br i1 %cmp776, label %if.then.778, label %if.end.779

if.then.778:                                      ; preds = %while.end.775
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @ident_too_long, i32 0, i32 0))
  br label %if.end.779

if.end.779:                                       ; preds = %if.then.778, %while.end.775
  %420 = load i8*, i8** %d, align 8
  store i8 0, i8* %420, align 1
  br label %if.end.780

if.end.780:                                       ; preds = %if.end.779, %lor.lhs.false.734, %lor.lhs.false.706, %land.lhs.true.702, %lor.lhs.false.694, %land.lhs.true.690, %land.lhs.true.682, %land.lhs.true.674
  br label %if.end.781

if.end.781:                                       ; preds = %if.end.780, %if.end.669
  %421 = load i8*, i8** %s.addr, align 8
  %422 = load i8, i8* %421, align 1
  %conv782 = sext i8 %422 to i32
  %cmp783 = icmp eq i32 %conv782, 125
  br i1 %cmp783, label %if.then.785, label %if.else.843

if.then.785:                                      ; preds = %if.end.781
  %423 = load i8*, i8** %s.addr, align 8
  %incdec.ptr786 = getelementptr inbounds i8, i8* %423, i32 1
  store i8* %incdec.ptr786, i8** %s.addr, align 8
  %424 = load i32, i32* @PL_lex_state, align 4
  %cmp787 = icmp eq i32 %424, 9
  br i1 %cmp787, label %land.lhs.true.789, label %if.end.792

land.lhs.true.789:                                ; preds = %if.then.785
  %425 = load i32, i32* @PL_lex_brackets, align 4
  %tobool790 = icmp ne i32 %425, 0
  br i1 %tobool790, label %if.end.792, label %if.then.791

if.then.791:                                      ; preds = %land.lhs.true.789
  store i32 5, i32* @PL_lex_state, align 4
  store i32 2, i32* @PL_expect, align 4
  br label %if.end.792

if.end.792:                                       ; preds = %if.then.791, %land.lhs.true.789, %if.then.785
  %426 = load i8, i8* %funny, align 1
  %conv793 = sext i8 %426 to i32
  %cmp794 = icmp eq i32 %conv793, 35
  br i1 %cmp794, label %if.then.796, label %if.end.797

if.then.796:                                      ; preds = %if.end.792
  store i8 64, i8* %funny, align 1
  br label %if.end.797

if.end.797:                                       ; preds = %if.then.796, %if.end.792
  %427 = load i32, i32* @PL_lex_state, align 4
  %cmp798 = icmp eq i32 %427, 10
  br i1 %cmp798, label %if.then.800, label %if.end.842

if.then.800:                                      ; preds = %if.end.797
  %428 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings801 = getelementptr inbounds %struct.cop, %struct.cop* %428, i32 0, i32 14
  %429 = load %struct.sv*, %struct.sv** %cop_warnings801, align 8
  %cmp802 = icmp ne %struct.sv* %429, null
  br i1 %cmp802, label %land.lhs.true.804, label %lor.lhs.false.820

land.lhs.true.804:                                ; preds = %if.then.800
  %430 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings805 = getelementptr inbounds %struct.cop, %struct.cop* %430, i32 0, i32 14
  %431 = load %struct.sv*, %struct.sv** %cop_warnings805, align 8
  %cmp806 = icmp ne %struct.sv* %431, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 2)
  br i1 %cmp806, label %land.lhs.true.808, label %lor.lhs.false.820

land.lhs.true.808:                                ; preds = %land.lhs.true.804
  %432 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings809 = getelementptr inbounds %struct.cop, %struct.cop* %432, i32 0, i32 14
  %433 = load %struct.sv*, %struct.sv** %cop_warnings809, align 8
  %cmp810 = icmp eq %struct.sv* %433, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 1)
  br i1 %cmp810, label %land.lhs.true.828, label %lor.lhs.false.812

lor.lhs.false.812:                                ; preds = %land.lhs.true.808
  %434 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings813 = getelementptr inbounds %struct.cop, %struct.cop* %434, i32 0, i32 14
  %435 = load %struct.sv*, %struct.sv** %cop_warnings813, align 8
  %sv_any814 = getelementptr inbounds %struct.sv, %struct.sv* %435, i32 0, i32 0
  %436 = load i8*, i8** %sv_any814, align 8
  %437 = bitcast i8* %436 to %struct.xpv*
  %xpv_pv815 = getelementptr inbounds %struct.xpv, %struct.xpv* %437, i32 0, i32 0
  %438 = load i8*, i8** %xpv_pv815, align 8
  %arrayidx816 = getelementptr inbounds i8, i8* %438, i64 7
  %439 = load i8, i8* %arrayidx816, align 1
  %conv817 = sext i8 %439 to i32
  %and818 = and i32 %conv817, 4
  %tobool819 = icmp ne i32 %and818, 0
  br i1 %tobool819, label %land.lhs.true.828, label %lor.lhs.false.820

lor.lhs.false.820:                                ; preds = %lor.lhs.false.812, %land.lhs.true.804, %if.then.800
  %440 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings821 = getelementptr inbounds %struct.cop, %struct.cop* %440, i32 0, i32 14
  %441 = load %struct.sv*, %struct.sv** %cop_warnings821, align 8
  %cmp822 = icmp eq %struct.sv* %441, null
  br i1 %cmp822, label %land.lhs.true.824, label %if.end.841

land.lhs.true.824:                                ; preds = %lor.lhs.false.820
  %442 = load i8, i8* @PL_dowarn, align 1
  %conv825 = zext i8 %442 to i32
  %and826 = and i32 %conv825, 1
  %tobool827 = icmp ne i32 %and826, 0
  br i1 %tobool827, label %land.lhs.true.828, label %if.end.841

land.lhs.true.828:                                ; preds = %land.lhs.true.824, %lor.lhs.false.812, %land.lhs.true.808
  %443 = load i8*, i8** %dest.addr, align 8
  %444 = load i8*, i8** %d, align 8
  %445 = load i8*, i8** %dest.addr, align 8
  %sub.ptr.lhs.cast829 = ptrtoint i8* %444 to i64
  %sub.ptr.rhs.cast830 = ptrtoint i8* %445 to i64
  %sub.ptr.sub831 = sub i64 %sub.ptr.lhs.cast829, %sub.ptr.rhs.cast830
  %conv832 = trunc i64 %sub.ptr.sub831 to i32
  %call833 = call i32 @Perl_keyword(i8* %443, i32 %conv832)
  %tobool834 = icmp ne i32 %call833, 0
  br i1 %tobool834, label %if.then.838, label %lor.lhs.false.835

lor.lhs.false.835:                                ; preds = %land.lhs.true.828
  %446 = load i8*, i8** %dest.addr, align 8
  %call836 = call %struct.cv* @Perl_get_cv(i8* %446, i32 0)
  %tobool837 = icmp ne %struct.cv* %call836, null
  br i1 %tobool837, label %if.then.838, label %if.end.841

if.then.838:                                      ; preds = %lor.lhs.false.835, %land.lhs.true.828
  %447 = load i8, i8* %funny, align 1
  %conv839 = sext i8 %447 to i32
  %448 = load i8*, i8** %dest.addr, align 8
  %449 = load i8, i8* %funny, align 1
  %conv840 = sext i8 %449 to i32
  %450 = load i8*, i8** %dest.addr, align 8
  call void (i32, i8*, ...) @Perl_warner(i32 29, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.210, i32 0, i32 0), i32 %conv839, i8* %448, i32 %conv840, i8* %450)
  br label %if.end.841

if.end.841:                                       ; preds = %if.then.838, %lor.lhs.false.835, %land.lhs.true.824, %lor.lhs.false.820
  br label %if.end.842

if.end.842:                                       ; preds = %if.end.841, %if.end.797
  br label %if.end.844

if.else.843:                                      ; preds = %if.end.781
  %451 = load i8*, i8** %bracket, align 8
  store i8* %451, i8** %s.addr, align 8
  %452 = load i8*, i8** %dest.addr, align 8
  store i8 0, i8* %452, align 1
  br label %if.end.844

if.end.844:                                       ; preds = %if.else.843, %if.end.842
  br label %if.end.855

if.else.845:                                      ; preds = %if.end.350
  %453 = load i32, i32* @PL_lex_state, align 4
  %cmp846 = icmp eq i32 %453, 9
  br i1 %cmp846, label %land.lhs.true.848, label %if.end.854

land.lhs.true.848:                                ; preds = %if.else.845
  %454 = load i32, i32* @PL_lex_brackets, align 4
  %tobool849 = icmp ne i32 %454, 0
  br i1 %tobool849, label %if.end.854, label %land.lhs.true.850

land.lhs.true.850:                                ; preds = %land.lhs.true.848
  %455 = load i8*, i8** %s.addr, align 8
  %call851 = call i32 @S_intuit_more(i8* %455)
  %tobool852 = icmp ne i32 %call851, 0
  br i1 %tobool852, label %if.end.854, label %if.then.853

if.then.853:                                      ; preds = %land.lhs.true.850
  store i32 5, i32* @PL_lex_state, align 4
  br label %if.end.854

if.end.854:                                       ; preds = %if.then.853, %land.lhs.true.850, %land.lhs.true.848, %if.else.845
  br label %if.end.855

if.end.855:                                       ; preds = %if.end.854, %if.end.844
  %456 = load i8*, i8** %s.addr, align 8
  store i8* %456, i8** %retval
  br label %return

return:                                           ; preds = %if.end.855, %if.end.665, %if.then.300, %if.end.213
  %457 = load i8*, i8** %retval
  ret i8* %457
}

; Function Attrs: nounwind uwtable
define internal i8* @S_scan_word(i8* %s, i8* %dest, i64 %destlen, i32 %allow_package, i64* %slp) #0 {
entry:
  %s.addr = alloca i8*, align 8
  %dest.addr = alloca i8*, align 8
  %destlen.addr = alloca i64, align 8
  %allow_package.addr = alloca i32, align 4
  %slp.addr = alloca i64*, align 8
  %d = alloca i8*, align 8
  %e = alloca i8*, align 8
  %t = alloca i8*, align 8
  store i8* %s, i8** %s.addr, align 8
  store i8* %dest, i8** %dest.addr, align 8
  store i64 %destlen, i64* %destlen.addr, align 8
  store i32 %allow_package, i32* %allow_package.addr, align 4
  store i64* %slp, i64** %slp.addr, align 8
  %0 = load i8*, i8** %dest.addr, align 8
  store i8* %0, i8** %d, align 8
  %1 = load i8*, i8** %d, align 8
  %2 = load i64, i64* %destlen.addr, align 8
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %2
  %add.ptr1 = getelementptr inbounds i8, i8* %add.ptr, i64 -3
  store i8* %add.ptr1, i8** %e, align 8
  br label %for.cond

for.cond:                                         ; preds = %if.end.168, %entry
  %3 = load i8*, i8** %d, align 8
  %4 = load i8*, i8** %e, align 8
  %cmp = icmp uge i8* %3, %4
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %for.cond
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @ident_too_long, i32 0, i32 0))
  br label %if.end

if.end:                                           ; preds = %if.then, %for.cond
  %5 = load i8*, i8** %s.addr, align 8
  %6 = load i8, i8* %5, align 1
  %conv = sext i8 %6 to i32
  %cmp2 = icmp sge i32 %conv, 65
  br i1 %cmp2, label %land.lhs.true, label %lor.lhs.false

land.lhs.true:                                    ; preds = %if.end
  %7 = load i8*, i8** %s.addr, align 8
  %8 = load i8, i8* %7, align 1
  %conv4 = sext i8 %8 to i32
  %cmp5 = icmp sle i32 %conv4, 90
  br i1 %cmp5, label %if.then.26, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true, %if.end
  %9 = load i8*, i8** %s.addr, align 8
  %10 = load i8, i8* %9, align 1
  %conv7 = sext i8 %10 to i32
  %cmp8 = icmp sge i32 %conv7, 97
  br i1 %cmp8, label %land.lhs.true.10, label %lor.lhs.false.14

land.lhs.true.10:                                 ; preds = %lor.lhs.false
  %11 = load i8*, i8** %s.addr, align 8
  %12 = load i8, i8* %11, align 1
  %conv11 = sext i8 %12 to i32
  %cmp12 = icmp sle i32 %conv11, 122
  br i1 %cmp12, label %if.then.26, label %lor.lhs.false.14

lor.lhs.false.14:                                 ; preds = %land.lhs.true.10, %lor.lhs.false
  %13 = load i8*, i8** %s.addr, align 8
  %14 = load i8, i8* %13, align 1
  %conv15 = sext i8 %14 to i32
  %cmp16 = icmp sge i32 %conv15, 48
  br i1 %cmp16, label %land.lhs.true.18, label %lor.lhs.false.22

land.lhs.true.18:                                 ; preds = %lor.lhs.false.14
  %15 = load i8*, i8** %s.addr, align 8
  %16 = load i8, i8* %15, align 1
  %conv19 = sext i8 %16 to i32
  %cmp20 = icmp sle i32 %conv19, 57
  br i1 %cmp20, label %if.then.26, label %lor.lhs.false.22

lor.lhs.false.22:                                 ; preds = %land.lhs.true.18, %lor.lhs.false.14
  %17 = load i8*, i8** %s.addr, align 8
  %18 = load i8, i8* %17, align 1
  %conv23 = sext i8 %18 to i32
  %cmp24 = icmp eq i32 %conv23, 95
  br i1 %cmp24, label %if.then.26, label %if.else

if.then.26:                                       ; preds = %lor.lhs.false.22, %land.lhs.true.18, %land.lhs.true.10, %land.lhs.true
  %19 = load i8*, i8** %s.addr, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %19, i32 1
  store i8* %incdec.ptr, i8** %s.addr, align 8
  %20 = load i8, i8* %19, align 1
  %21 = load i8*, i8** %d, align 8
  %incdec.ptr27 = getelementptr inbounds i8, i8* %21, i32 1
  store i8* %incdec.ptr27, i8** %d, align 8
  store i8 %20, i8* %21, align 1
  br label %if.end.168

if.else:                                          ; preds = %lor.lhs.false.22
  %22 = load i8*, i8** %s.addr, align 8
  %23 = load i8, i8* %22, align 1
  %conv28 = sext i8 %23 to i32
  %cmp29 = icmp eq i32 %conv28, 39
  br i1 %cmp29, label %land.lhs.true.31, label %if.else.88

land.lhs.true.31:                                 ; preds = %if.else
  %24 = load i32, i32* %allow_package.addr, align 4
  %tobool = icmp ne i32 %24, 0
  br i1 %tobool, label %land.lhs.true.32, label %if.else.88

land.lhs.true.32:                                 ; preds = %land.lhs.true.31
  %25 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private = getelementptr inbounds %struct.cop, %struct.cop* %25, i32 0, i32 7
  %26 = load i8, i8* %op_private, align 1
  %conv33 = zext i8 %26 to i32
  %and = and i32 %conv33, 8
  %tobool34 = icmp ne i32 %and, 0
  br i1 %tobool34, label %cond.true, label %lor.lhs.false.35

lor.lhs.false.35:                                 ; preds = %land.lhs.true.32
  %27 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %tobool36 = icmp ne %struct.sv* %27, null
  br i1 %tobool36, label %land.lhs.true.37, label %lor.lhs.false.45

land.lhs.true.37:                                 ; preds = %lor.lhs.false.35
  %28 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %28, i32 0, i32 2
  %29 = load i32, i32* %sv_flags, align 4
  %and38 = and i32 %29, 536870912
  %tobool39 = icmp ne i32 %and38, 0
  br i1 %tobool39, label %land.lhs.true.40, label %lor.lhs.false.45

land.lhs.true.40:                                 ; preds = %land.lhs.true.37
  %30 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private41 = getelementptr inbounds %struct.cop, %struct.cop* %30, i32 0, i32 7
  %31 = load i8, i8* %op_private41, align 1
  %conv42 = zext i8 %31 to i32
  %and43 = and i32 %conv42, 8
  %tobool44 = icmp ne i32 %and43, 0
  br i1 %tobool44, label %lor.lhs.false.45, label %lor.lhs.false.48

lor.lhs.false.45:                                 ; preds = %land.lhs.true.40, %land.lhs.true.37, %lor.lhs.false.35
  %32 = load i32, i32* @PL_hints, align 4
  %and46 = and i32 %32, 8388608
  %tobool47 = icmp ne i32 %and46, 0
  br i1 %tobool47, label %lor.lhs.false.48, label %cond.true

lor.lhs.false.48:                                 ; preds = %lor.lhs.false.45, %land.lhs.true.40
  %33 = load i8*, i8** %s.addr, align 8
  %add.ptr49 = getelementptr inbounds i8, i8* %33, i64 1
  %34 = load i8, i8* %add.ptr49, align 1
  %conv50 = zext i8 %34 to i32
  %cmp51 = icmp slt i32 %conv50, 192
  br i1 %cmp51, label %cond.true, label %cond.false

cond.true:                                        ; preds = %lor.lhs.false.48, %lor.lhs.false.45, %land.lhs.true.32
  %35 = load i8*, i8** %s.addr, align 8
  %add.ptr53 = getelementptr inbounds i8, i8* %35, i64 1
  %36 = load i8, i8* %add.ptr53, align 1
  %conv54 = sext i8 %36 to i32
  %cmp55 = icmp sge i32 %conv54, 65
  br i1 %cmp55, label %land.lhs.true.57, label %lor.lhs.false.62

land.lhs.true.57:                                 ; preds = %cond.true
  %37 = load i8*, i8** %s.addr, align 8
  %add.ptr58 = getelementptr inbounds i8, i8* %37, i64 1
  %38 = load i8, i8* %add.ptr58, align 1
  %conv59 = sext i8 %38 to i32
  %cmp60 = icmp sle i32 %conv59, 90
  br i1 %cmp60, label %if.then.84, label %lor.lhs.false.62

lor.lhs.false.62:                                 ; preds = %land.lhs.true.57, %cond.true
  %39 = load i8*, i8** %s.addr, align 8
  %add.ptr63 = getelementptr inbounds i8, i8* %39, i64 1
  %40 = load i8, i8* %add.ptr63, align 1
  %conv64 = sext i8 %40 to i32
  %cmp65 = icmp sge i32 %conv64, 97
  br i1 %cmp65, label %land.lhs.true.67, label %lor.lhs.false.72

land.lhs.true.67:                                 ; preds = %lor.lhs.false.62
  %41 = load i8*, i8** %s.addr, align 8
  %add.ptr68 = getelementptr inbounds i8, i8* %41, i64 1
  %42 = load i8, i8* %add.ptr68, align 1
  %conv69 = sext i8 %42 to i32
  %cmp70 = icmp sle i32 %conv69, 122
  br i1 %cmp70, label %if.then.84, label %lor.lhs.false.72

lor.lhs.false.72:                                 ; preds = %land.lhs.true.67, %lor.lhs.false.62
  %43 = load i8*, i8** %s.addr, align 8
  %add.ptr73 = getelementptr inbounds i8, i8* %43, i64 1
  %44 = load i8, i8* %add.ptr73, align 1
  %conv74 = sext i8 %44 to i32
  %cmp75 = icmp eq i32 %conv74, 95
  br i1 %cmp75, label %if.then.84, label %if.else.88

cond.false:                                       ; preds = %lor.lhs.false.48
  %45 = load i8*, i8** %s.addr, align 8
  %add.ptr77 = getelementptr inbounds i8, i8* %45, i64 1
  %call = call signext i8 @Perl_is_utf8_idcont(i8* %add.ptr77)
  %conv78 = sext i8 %call to i32
  %tobool79 = icmp ne i32 %conv78, 0
  br i1 %tobool79, label %land.lhs.true.80, label %if.else.88

land.lhs.true.80:                                 ; preds = %cond.false
  %46 = load i8*, i8** %s.addr, align 8
  %add.ptr81 = getelementptr inbounds i8, i8* %46, i64 1
  %call82 = call signext i8 @Perl_is_utf8_digit(i8* %add.ptr81)
  %tobool83 = icmp ne i8 %call82, 0
  br i1 %tobool83, label %if.else.88, label %if.then.84

if.then.84:                                       ; preds = %land.lhs.true.80, %lor.lhs.false.72, %land.lhs.true.67, %land.lhs.true.57
  %47 = load i8*, i8** %d, align 8
  %incdec.ptr85 = getelementptr inbounds i8, i8* %47, i32 1
  store i8* %incdec.ptr85, i8** %d, align 8
  store i8 58, i8* %47, align 1
  %48 = load i8*, i8** %d, align 8
  %incdec.ptr86 = getelementptr inbounds i8, i8* %48, i32 1
  store i8* %incdec.ptr86, i8** %d, align 8
  store i8 58, i8* %48, align 1
  %49 = load i8*, i8** %s.addr, align 8
  %incdec.ptr87 = getelementptr inbounds i8, i8* %49, i32 1
  store i8* %incdec.ptr87, i8** %s.addr, align 8
  br label %if.end.167

if.else.88:                                       ; preds = %land.lhs.true.80, %cond.false, %lor.lhs.false.72, %land.lhs.true.31, %if.else
  %50 = load i8*, i8** %s.addr, align 8
  %51 = load i8, i8* %50, align 1
  %conv89 = sext i8 %51 to i32
  %cmp90 = icmp eq i32 %conv89, 58
  br i1 %cmp90, label %land.lhs.true.92, label %if.else.108

land.lhs.true.92:                                 ; preds = %if.else.88
  %52 = load i8*, i8** %s.addr, align 8
  %arrayidx = getelementptr inbounds i8, i8* %52, i64 1
  %53 = load i8, i8* %arrayidx, align 1
  %conv93 = sext i8 %53 to i32
  %cmp94 = icmp eq i32 %conv93, 58
  br i1 %cmp94, label %land.lhs.true.96, label %if.else.108

land.lhs.true.96:                                 ; preds = %land.lhs.true.92
  %54 = load i32, i32* %allow_package.addr, align 4
  %tobool97 = icmp ne i32 %54, 0
  br i1 %tobool97, label %land.lhs.true.98, label %if.else.108

land.lhs.true.98:                                 ; preds = %land.lhs.true.96
  %55 = load i8*, i8** %s.addr, align 8
  %arrayidx99 = getelementptr inbounds i8, i8* %55, i64 2
  %56 = load i8, i8* %arrayidx99, align 1
  %conv100 = sext i8 %56 to i32
  %cmp101 = icmp ne i32 %conv100, 36
  br i1 %cmp101, label %if.then.103, label %if.else.108

if.then.103:                                      ; preds = %land.lhs.true.98
  %57 = load i8*, i8** %s.addr, align 8
  %incdec.ptr104 = getelementptr inbounds i8, i8* %57, i32 1
  store i8* %incdec.ptr104, i8** %s.addr, align 8
  %58 = load i8, i8* %57, align 1
  %59 = load i8*, i8** %d, align 8
  %incdec.ptr105 = getelementptr inbounds i8, i8* %59, i32 1
  store i8* %incdec.ptr105, i8** %d, align 8
  store i8 %58, i8* %59, align 1
  %60 = load i8*, i8** %s.addr, align 8
  %incdec.ptr106 = getelementptr inbounds i8, i8* %60, i32 1
  store i8* %incdec.ptr106, i8** %s.addr, align 8
  %61 = load i8, i8* %60, align 1
  %62 = load i8*, i8** %d, align 8
  %incdec.ptr107 = getelementptr inbounds i8, i8* %62, i32 1
  store i8* %incdec.ptr107, i8** %d, align 8
  store i8 %61, i8* %62, align 1
  br label %if.end.166

if.else.108:                                      ; preds = %land.lhs.true.98, %land.lhs.true.96, %land.lhs.true.92, %if.else.88
  %63 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %tobool109 = icmp ne %struct.sv* %63, null
  br i1 %tobool109, label %land.lhs.true.110, label %lor.lhs.false.119

land.lhs.true.110:                                ; preds = %if.else.108
  %64 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_flags111 = getelementptr inbounds %struct.sv, %struct.sv* %64, i32 0, i32 2
  %65 = load i32, i32* %sv_flags111, align 4
  %and112 = and i32 %65, 536870912
  %tobool113 = icmp ne i32 %and112, 0
  br i1 %tobool113, label %land.lhs.true.114, label %lor.lhs.false.119

land.lhs.true.114:                                ; preds = %land.lhs.true.110
  %66 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private115 = getelementptr inbounds %struct.cop, %struct.cop* %66, i32 0, i32 7
  %67 = load i8, i8* %op_private115, align 1
  %conv116 = zext i8 %67 to i32
  %and117 = and i32 %conv116, 8
  %tobool118 = icmp ne i32 %and117, 0
  br i1 %tobool118, label %lor.lhs.false.119, label %land.lhs.true.122

lor.lhs.false.119:                                ; preds = %land.lhs.true.114, %land.lhs.true.110, %if.else.108
  %68 = load i32, i32* @PL_hints, align 4
  %and120 = and i32 %68, 8388608
  %tobool121 = icmp ne i32 %and120, 0
  br i1 %tobool121, label %land.lhs.true.122, label %if.else.161

land.lhs.true.122:                                ; preds = %lor.lhs.false.119, %land.lhs.true.114
  %69 = load i8*, i8** %s.addr, align 8
  %70 = load i8, i8* %69, align 1
  %conv123 = zext i8 %70 to i32
  %cmp124 = icmp sge i32 %conv123, 192
  br i1 %cmp124, label %land.lhs.true.126, label %if.else.161

land.lhs.true.126:                                ; preds = %land.lhs.true.122
  %71 = load i8*, i8** %s.addr, align 8
  %72 = load i8, i8* %71, align 1
  %conv127 = zext i8 %72 to i32
  %cmp128 = icmp sle i32 %conv127, 253
  br i1 %cmp128, label %land.lhs.true.130, label %if.else.161

land.lhs.true.130:                                ; preds = %land.lhs.true.126
  %73 = load i8*, i8** %s.addr, align 8
  %call131 = call signext i8 @Perl_is_utf8_alnum(i8* %73)
  %conv132 = sext i8 %call131 to i32
  %tobool133 = icmp ne i32 %conv132, 0
  br i1 %tobool133, label %if.then.134, label %if.else.161

if.then.134:                                      ; preds = %land.lhs.true.130
  %74 = load i8*, i8** %s.addr, align 8
  %75 = load i8*, i8** %s.addr, align 8
  %76 = load i8, i8* %75, align 1
  %idxprom = zext i8 %76 to i64
  %arrayidx135 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i32 0, i64 %idxprom
  %77 = load i8, i8* %arrayidx135, align 1
  %conv136 = zext i8 %77 to i32
  %idx.ext = sext i32 %conv136 to i64
  %add.ptr137 = getelementptr inbounds i8, i8* %74, i64 %idx.ext
  store i8* %add.ptr137, i8** %t, align 8
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.then.134
  %78 = load i8*, i8** %t, align 8
  %79 = load i8, i8* %78, align 1
  %conv138 = zext i8 %79 to i32
  %and139 = and i32 %conv138, 128
  %tobool140 = icmp ne i32 %and139, 0
  br i1 %tobool140, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %80 = load i8*, i8** %t, align 8
  %call141 = call signext i8 @Perl_is_utf8_mark(i8* %80)
  %conv142 = sext i8 %call141 to i32
  %tobool143 = icmp ne i32 %conv142, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %81 = phi i1 [ false, %while.cond ], [ %tobool143, %land.rhs ]
  br i1 %81, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %82 = load i8*, i8** %t, align 8
  %83 = load i8, i8* %82, align 1
  %idxprom144 = zext i8 %83 to i64
  %arrayidx145 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i32 0, i64 %idxprom144
  %84 = load i8, i8* %arrayidx145, align 1
  %conv146 = zext i8 %84 to i32
  %85 = load i8*, i8** %t, align 8
  %idx.ext147 = sext i32 %conv146 to i64
  %add.ptr148 = getelementptr inbounds i8, i8* %85, i64 %idx.ext147
  store i8* %add.ptr148, i8** %t, align 8
  br label %while.cond

while.end:                                        ; preds = %land.end
  %86 = load i8*, i8** %d, align 8
  %87 = load i8*, i8** %t, align 8
  %88 = load i8*, i8** %s.addr, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %87 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %88 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %add.ptr149 = getelementptr inbounds i8, i8* %86, i64 %sub.ptr.sub
  %89 = load i8*, i8** %e, align 8
  %cmp150 = icmp ugt i8* %add.ptr149, %89
  br i1 %cmp150, label %if.then.152, label %if.end.153

if.then.152:                                      ; preds = %while.end
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @ident_too_long, i32 0, i32 0))
  br label %if.end.153

if.end.153:                                       ; preds = %if.then.152, %while.end
  %90 = load i8*, i8** %d, align 8
  %91 = load i8*, i8** %s.addr, align 8
  %92 = load i8*, i8** %t, align 8
  %93 = load i8*, i8** %s.addr, align 8
  %sub.ptr.lhs.cast154 = ptrtoint i8* %92 to i64
  %sub.ptr.rhs.cast155 = ptrtoint i8* %93 to i64
  %sub.ptr.sub156 = sub i64 %sub.ptr.lhs.cast154, %sub.ptr.rhs.cast155
  %mul = mul i64 %sub.ptr.sub156, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %90, i8* %91, i64 %mul, i32 1, i1 false)
  %94 = load i8*, i8** %t, align 8
  %95 = load i8*, i8** %s.addr, align 8
  %sub.ptr.lhs.cast157 = ptrtoint i8* %94 to i64
  %sub.ptr.rhs.cast158 = ptrtoint i8* %95 to i64
  %sub.ptr.sub159 = sub i64 %sub.ptr.lhs.cast157, %sub.ptr.rhs.cast158
  %96 = load i8*, i8** %d, align 8
  %add.ptr160 = getelementptr inbounds i8, i8* %96, i64 %sub.ptr.sub159
  store i8* %add.ptr160, i8** %d, align 8
  %97 = load i8*, i8** %t, align 8
  store i8* %97, i8** %s.addr, align 8
  br label %if.end.165

if.else.161:                                      ; preds = %land.lhs.true.130, %land.lhs.true.126, %land.lhs.true.122, %lor.lhs.false.119
  %98 = load i8*, i8** %d, align 8
  store i8 0, i8* %98, align 1
  %99 = load i8*, i8** %d, align 8
  %100 = load i8*, i8** %dest.addr, align 8
  %sub.ptr.lhs.cast162 = ptrtoint i8* %99 to i64
  %sub.ptr.rhs.cast163 = ptrtoint i8* %100 to i64
  %sub.ptr.sub164 = sub i64 %sub.ptr.lhs.cast162, %sub.ptr.rhs.cast163
  %101 = load i64*, i64** %slp.addr, align 8
  store i64 %sub.ptr.sub164, i64* %101, align 8
  %102 = load i8*, i8** %s.addr, align 8
  ret i8* %102

if.end.165:                                       ; preds = %if.end.153
  br label %if.end.166

if.end.166:                                       ; preds = %if.end.165, %if.then.103
  br label %if.end.167

if.end.167:                                       ; preds = %if.end.166, %if.then.84
  br label %if.end.168

if.end.168:                                       ; preds = %if.end.167, %if.then.26
  br label %for.cond
}

; Function Attrs: nounwind uwtable
define i32 @Perl_keyword(i8* %name, i32 %len) #0 {
entry:
  %retval = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %len.addr = alloca i32, align 4
  store i8* %name, i8** %name.addr, align 8
  store i32 %len, i32* %len.addr, align 4
  %0 = load i32, i32* %len.addr, align 4
  switch i32 %0, label %sw.default.5110 [
    i32 1, label %sw.bb
    i32 2, label %sw.bb.6
    i32 3, label %sw.bb.83
    i32 4, label %sw.bb.358
    i32 5, label %sw.bb.890
    i32 6, label %sw.bb.1532
    i32 7, label %sw.bb.2257
    i32 8, label %sw.bb.3021
    i32 9, label %sw.bb.3722
    i32 10, label %sw.bb.4062
    i32 11, label %sw.bb.4396
    i32 12, label %sw.bb.4729
    i32 13, label %sw.bb.4808
    i32 14, label %sw.bb.4956
    i32 16, label %sw.bb.5028
  ]

sw.bb:                                            ; preds = %entry
  %1 = load i8*, i8** %name.addr, align 8
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0
  %2 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %2 to i32
  switch i32 %conv, label %sw.default [
    i32 109, label %sw.bb.1
    i32 113, label %sw.bb.2
    i32 115, label %sw.bb.3
    i32 120, label %sw.bb.4
    i32 121, label %sw.bb.5
  ]

sw.bb.1:                                          ; preds = %sw.bb
  store i32 120, i32* %retval
  br label %return

sw.bb.2:                                          ; preds = %sw.bb
  store i32 147, i32* %retval
  br label %return

sw.bb.3:                                          ; preds = %sw.bb
  store i32 170, i32* %retval
  br label %return

sw.bb.4:                                          ; preds = %sw.bb
  store i32 -243, i32* %retval
  br label %return

sw.bb.5:                                          ; preds = %sw.bb
  store i32 245, i32* %retval
  br label %return

sw.default:                                       ; preds = %sw.bb
  br label %unknown

sw.bb.6:                                          ; preds = %entry
  %3 = load i8*, i8** %name.addr, align 8
  %arrayidx7 = getelementptr inbounds i8, i8* %3, i64 0
  %4 = load i8, i8* %arrayidx7, align 1
  %conv8 = sext i8 %4 to i32
  switch i32 %conv8, label %sw.default.82 [
    i32 100, label %sw.bb.9
    i32 101, label %sw.bb.13
    i32 103, label %sw.bb.20
    i32 105, label %sw.bb.26
    i32 108, label %sw.bb.33
    i32 109, label %sw.bb.40
    i32 110, label %sw.bb.47
    i32 111, label %sw.bb.53
    i32 113, label %sw.bb.60
    i32 116, label %sw.bb.68
    i32 117, label %sw.bb.75
  ]

sw.bb.9:                                          ; preds = %sw.bb.6
  %5 = load i8*, i8** %name.addr, align 8
  %arrayidx10 = getelementptr inbounds i8, i8* %5, i64 1
  %6 = load i8, i8* %arrayidx10, align 1
  %conv11 = sext i8 %6 to i32
  %cmp = icmp eq i32 %conv11, 111
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %sw.bb.9
  store i32 41, i32* %retval
  br label %return

if.end:                                           ; preds = %sw.bb.9
  br label %unknown

sw.bb.13:                                         ; preds = %sw.bb.6
  %7 = load i8*, i8** %name.addr, align 8
  %arrayidx14 = getelementptr inbounds i8, i8* %7, i64 1
  %8 = load i8, i8* %arrayidx14, align 1
  %conv15 = sext i8 %8 to i32
  %cmp16 = icmp eq i32 %conv15, 113
  br i1 %cmp16, label %if.then.18, label %if.end.19

if.then.18:                                       ; preds = %sw.bb.13
  store i32 -53, i32* %retval
  br label %return

if.end.19:                                        ; preds = %sw.bb.13
  br label %unknown

sw.bb.20:                                         ; preds = %sw.bb.6
  %9 = load i8*, i8** %name.addr, align 8
  %arrayidx21 = getelementptr inbounds i8, i8* %9, i64 1
  %10 = load i8, i8* %arrayidx21, align 1
  %conv22 = sext i8 %10 to i32
  switch i32 %conv22, label %sw.default.25 [
    i32 101, label %sw.bb.23
    i32 116, label %sw.bb.24
  ]

sw.bb.23:                                         ; preds = %sw.bb.20
  store i32 -67, i32* %retval
  br label %return

sw.bb.24:                                         ; preds = %sw.bb.20
  store i32 -98, i32* %retval
  br label %return

sw.default.25:                                    ; preds = %sw.bb.20
  br label %unknown

sw.bb.26:                                         ; preds = %sw.bb.6
  %11 = load i8*, i8** %name.addr, align 8
  %arrayidx27 = getelementptr inbounds i8, i8* %11, i64 1
  %12 = load i8, i8* %arrayidx27, align 1
  %conv28 = sext i8 %12 to i32
  %cmp29 = icmp eq i32 %conv28, 102
  br i1 %cmp29, label %if.then.31, label %if.end.32

if.then.31:                                       ; preds = %sw.bb.26
  store i32 100, i32* %retval
  br label %return

if.end.32:                                        ; preds = %sw.bb.26
  br label %unknown

sw.bb.33:                                         ; preds = %sw.bb.6
  %13 = load i8*, i8** %name.addr, align 8
  %arrayidx34 = getelementptr inbounds i8, i8* %13, i64 1
  %14 = load i8, i8* %arrayidx34, align 1
  %conv35 = sext i8 %14 to i32
  switch i32 %conv35, label %sw.default.39 [
    i32 99, label %sw.bb.36
    i32 101, label %sw.bb.37
    i32 116, label %sw.bb.38
  ]

sw.bb.36:                                         ; preds = %sw.bb.33
  store i32 -108, i32* %retval
  br label %return

sw.bb.37:                                         ; preds = %sw.bb.33
  store i32 -110, i32* %retval
  br label %return

sw.bb.38:                                         ; preds = %sw.bb.33
  store i32 -119, i32* %retval
  br label %return

sw.default.39:                                    ; preds = %sw.bb.33
  br label %unknown

sw.bb.40:                                         ; preds = %sw.bb.6
  %15 = load i8*, i8** %name.addr, align 8
  %arrayidx41 = getelementptr inbounds i8, i8* %15, i64 1
  %16 = load i8, i8* %arrayidx41, align 1
  %conv42 = sext i8 %16 to i32
  %cmp43 = icmp eq i32 %conv42, 121
  br i1 %cmp43, label %if.then.45, label %if.end.46

if.then.45:                                       ; preds = %sw.bb.40
  store i32 127, i32* %retval
  br label %return

if.end.46:                                        ; preds = %sw.bb.40
  br label %unknown

sw.bb.47:                                         ; preds = %sw.bb.6
  %17 = load i8*, i8** %name.addr, align 8
  %arrayidx48 = getelementptr inbounds i8, i8* %17, i64 1
  %18 = load i8, i8* %arrayidx48, align 1
  %conv49 = sext i8 %18 to i32
  switch i32 %conv49, label %sw.default.52 [
    i32 101, label %sw.bb.50
    i32 111, label %sw.bb.51
  ]

sw.bb.50:                                         ; preds = %sw.bb.47
  store i32 -128, i32* %retval
  br label %return

sw.bb.51:                                         ; preds = %sw.bb.47
  store i32 130, i32* %retval
  br label %return

sw.default.52:                                    ; preds = %sw.bb.47
  br label %unknown

sw.bb.53:                                         ; preds = %sw.bb.6
  %19 = load i8*, i8** %name.addr, align 8
  %arrayidx54 = getelementptr inbounds i8, i8* %19, i64 1
  %20 = load i8, i8* %arrayidx54, align 1
  %conv55 = sext i8 %20 to i32
  %cmp56 = icmp eq i32 %conv55, 114
  br i1 %cmp56, label %if.then.58, label %if.end.59

if.then.58:                                       ; preds = %sw.bb.53
  store i32 -135, i32* %retval
  br label %return

if.end.59:                                        ; preds = %sw.bb.53
  br label %unknown

sw.bb.60:                                         ; preds = %sw.bb.6
  %21 = load i8*, i8** %name.addr, align 8
  %arrayidx61 = getelementptr inbounds i8, i8* %21, i64 1
  %22 = load i8, i8* %arrayidx61, align 1
  %conv62 = sext i8 %22 to i32
  switch i32 %conv62, label %sw.default.67 [
    i32 113, label %sw.bb.63
    i32 114, label %sw.bb.64
    i32 119, label %sw.bb.65
    i32 120, label %sw.bb.66
  ]

sw.bb.63:                                         ; preds = %sw.bb.60
  store i32 148, i32* %retval
  br label %return

sw.bb.64:                                         ; preds = %sw.bb.60
  store i32 149, i32* %retval
  br label %return

sw.bb.65:                                         ; preds = %sw.bb.60
  store i32 151, i32* %retval
  br label %return

sw.bb.66:                                         ; preds = %sw.bb.60
  store i32 152, i32* %retval
  br label %return

sw.default.67:                                    ; preds = %sw.bb.60
  br label %unknown

sw.bb.68:                                         ; preds = %sw.bb.6
  %23 = load i8*, i8** %name.addr, align 8
  %arrayidx69 = getelementptr inbounds i8, i8* %23, i64 1
  %24 = load i8, i8* %arrayidx69, align 1
  %conv70 = sext i8 %24 to i32
  %cmp71 = icmp eq i32 %conv70, 114
  br i1 %cmp71, label %if.then.73, label %if.end.74

if.then.73:                                       ; preds = %sw.bb.68
  store i32 221, i32* %retval
  br label %return

if.end.74:                                        ; preds = %sw.bb.68
  br label %unknown

sw.bb.75:                                         ; preds = %sw.bb.6
  %25 = load i8*, i8** %name.addr, align 8
  %arrayidx76 = getelementptr inbounds i8, i8* %25, i64 1
  %26 = load i8, i8* %arrayidx76, align 1
  %conv77 = sext i8 %26 to i32
  %cmp78 = icmp eq i32 %conv77, 99
  br i1 %cmp78, label %if.then.80, label %if.end.81

if.then.80:                                       ; preds = %sw.bb.75
  store i32 -223, i32* %retval
  br label %return

if.end.81:                                        ; preds = %sw.bb.75
  br label %unknown

sw.default.82:                                    ; preds = %sw.bb.6
  br label %unknown

sw.bb.83:                                         ; preds = %entry
  %27 = load i8*, i8** %name.addr, align 8
  %arrayidx84 = getelementptr inbounds i8, i8* %27, i64 0
  %28 = load i8, i8* %arrayidx84, align 1
  %conv85 = sext i8 %28 to i32
  switch i32 %conv85, label %sw.default.357 [
    i32 69, label %sw.bb.86
    i32 97, label %sw.bb.97
    i32 99, label %sw.bb.115
    i32 100, label %sw.bb.140
    i32 101, label %sw.bb.152
    i32 102, label %sw.bb.170
    i32 104, label %sw.bb.182
    i32 105, label %sw.bb.194
    i32 108, label %sw.bb.206
    i32 109, label %sw.bb.218
    i32 110, label %sw.bb.230
    i32 111, label %sw.bb.242
    i32 112, label %sw.bb.267
    i32 114, label %sw.bb.279
    i32 115, label %sw.bb.291
    i32 116, label %sw.bb.309
    i32 117, label %sw.bb.321
    i32 118, label %sw.bb.333
    i32 120, label %sw.bb.345
  ]

sw.bb.86:                                         ; preds = %sw.bb.83
  %29 = load i8*, i8** %name.addr, align 8
  %arrayidx87 = getelementptr inbounds i8, i8* %29, i64 1
  %30 = load i8, i8* %arrayidx87, align 1
  %conv88 = sext i8 %30 to i32
  %cmp89 = icmp eq i32 %conv88, 78
  br i1 %cmp89, label %land.lhs.true, label %if.end.96

land.lhs.true:                                    ; preds = %sw.bb.86
  %31 = load i8*, i8** %name.addr, align 8
  %arrayidx91 = getelementptr inbounds i8, i8* %31, i64 2
  %32 = load i8, i8* %arrayidx91, align 1
  %conv92 = sext i8 %32 to i32
  %cmp93 = icmp eq i32 %conv92, 68
  br i1 %cmp93, label %if.then.95, label %if.end.96

if.then.95:                                       ; preds = %land.lhs.true
  store i32 10, i32* %retval
  br label %return

if.end.96:                                        ; preds = %land.lhs.true, %sw.bb.86
  br label %unknown

sw.bb.97:                                         ; preds = %sw.bb.83
  %33 = load i8*, i8** %name.addr, align 8
  %arrayidx98 = getelementptr inbounds i8, i8* %33, i64 1
  %34 = load i8, i8* %arrayidx98, align 1
  %conv99 = sext i8 %34 to i32
  switch i32 %conv99, label %sw.default.114 [
    i32 98, label %sw.bb.100
    i32 110, label %sw.bb.107
  ]

sw.bb.100:                                        ; preds = %sw.bb.97
  %35 = load i8*, i8** %name.addr, align 8
  %arrayidx101 = getelementptr inbounds i8, i8* %35, i64 2
  %36 = load i8, i8* %arrayidx101, align 1
  %conv102 = sext i8 %36 to i32
  %cmp103 = icmp eq i32 %conv102, 115
  br i1 %cmp103, label %if.then.105, label %if.end.106

if.then.105:                                      ; preds = %sw.bb.100
  store i32 -13, i32* %retval
  br label %return

if.end.106:                                       ; preds = %sw.bb.100
  br label %unknown

sw.bb.107:                                        ; preds = %sw.bb.97
  %37 = load i8*, i8** %name.addr, align 8
  %arrayidx108 = getelementptr inbounds i8, i8* %37, i64 2
  %38 = load i8, i8* %arrayidx108, align 1
  %conv109 = sext i8 %38 to i32
  %cmp110 = icmp eq i32 %conv109, 100
  br i1 %cmp110, label %if.then.112, label %if.end.113

if.then.112:                                      ; preds = %sw.bb.107
  store i32 -16, i32* %retval
  br label %return

if.end.113:                                       ; preds = %sw.bb.107
  br label %unknown

sw.default.114:                                   ; preds = %sw.bb.97
  br label %unknown

sw.bb.115:                                        ; preds = %sw.bb.83
  %39 = load i8*, i8** %name.addr, align 8
  %arrayidx116 = getelementptr inbounds i8, i8* %39, i64 1
  %40 = load i8, i8* %arrayidx116, align 1
  %conv117 = sext i8 %40 to i32
  switch i32 %conv117, label %sw.default.139 [
    i32 104, label %sw.bb.118
    i32 109, label %sw.bb.125
    i32 111, label %sw.bb.132
  ]

sw.bb.118:                                        ; preds = %sw.bb.115
  %41 = load i8*, i8** %name.addr, align 8
  %arrayidx119 = getelementptr inbounds i8, i8* %41, i64 2
  %42 = load i8, i8* %arrayidx119, align 1
  %conv120 = sext i8 %42 to i32
  %cmp121 = icmp eq i32 %conv120, 114
  br i1 %cmp121, label %if.then.123, label %if.end.124

if.then.123:                                      ; preds = %sw.bb.118
  store i32 -27, i32* %retval
  br label %return

if.end.124:                                       ; preds = %sw.bb.118
  br label %unknown

sw.bb.125:                                        ; preds = %sw.bb.115
  %43 = load i8*, i8** %name.addr, align 8
  %arrayidx126 = getelementptr inbounds i8, i8* %43, i64 2
  %44 = load i8, i8* %arrayidx126, align 1
  %conv127 = sext i8 %44 to i32
  %cmp128 = icmp eq i32 %conv127, 112
  br i1 %cmp128, label %if.then.130, label %if.end.131

if.then.130:                                      ; preds = %sw.bb.125
  store i32 -31, i32* %retval
  br label %return

if.end.131:                                       ; preds = %sw.bb.125
  br label %unknown

sw.bb.132:                                        ; preds = %sw.bb.115
  %45 = load i8*, i8** %name.addr, align 8
  %arrayidx133 = getelementptr inbounds i8, i8* %45, i64 2
  %46 = load i8, i8* %arrayidx133, align 1
  %conv134 = sext i8 %46 to i32
  %cmp135 = icmp eq i32 %conv134, 115
  br i1 %cmp135, label %if.then.137, label %if.end.138

if.then.137:                                      ; preds = %sw.bb.132
  store i32 -34, i32* %retval
  br label %return

if.end.138:                                       ; preds = %sw.bb.132
  br label %unknown

sw.default.139:                                   ; preds = %sw.bb.115
  br label %unknown

sw.bb.140:                                        ; preds = %sw.bb.83
  %47 = load i8*, i8** %name.addr, align 8
  %arrayidx141 = getelementptr inbounds i8, i8* %47, i64 1
  %48 = load i8, i8* %arrayidx141, align 1
  %conv142 = sext i8 %48 to i32
  %cmp143 = icmp eq i32 %conv142, 105
  br i1 %cmp143, label %land.lhs.true.145, label %if.end.151

land.lhs.true.145:                                ; preds = %sw.bb.140
  %49 = load i8*, i8** %name.addr, align 8
  %arrayidx146 = getelementptr inbounds i8, i8* %49, i64 2
  %50 = load i8, i8* %arrayidx146, align 1
  %conv147 = sext i8 %50 to i32
  %cmp148 = icmp eq i32 %conv147, 101
  br i1 %cmp148, label %if.then.150, label %if.end.151

if.then.150:                                      ; preds = %land.lhs.true.145
  store i32 -40, i32* %retval
  br label %return

if.end.151:                                       ; preds = %land.lhs.true.145, %sw.bb.140
  br label %unknown

sw.bb.152:                                        ; preds = %sw.bb.83
  %51 = load i8*, i8** %name.addr, align 8
  %arrayidx153 = getelementptr inbounds i8, i8* %51, i64 1
  %52 = load i8, i8* %arrayidx153, align 1
  %conv154 = sext i8 %52 to i32
  switch i32 %conv154, label %sw.default.169 [
    i32 111, label %sw.bb.155
    i32 120, label %sw.bb.162
  ]

sw.bb.155:                                        ; preds = %sw.bb.152
  %53 = load i8*, i8** %name.addr, align 8
  %arrayidx156 = getelementptr inbounds i8, i8* %53, i64 2
  %54 = load i8, i8* %arrayidx156, align 1
  %conv157 = sext i8 %54 to i32
  %cmp158 = icmp eq i32 %conv157, 102
  br i1 %cmp158, label %if.then.160, label %if.end.161

if.then.160:                                      ; preds = %sw.bb.155
  store i32 -52, i32* %retval
  br label %return

if.end.161:                                       ; preds = %sw.bb.155
  br label %unknown

sw.bb.162:                                        ; preds = %sw.bb.152
  %55 = load i8*, i8** %name.addr, align 8
  %arrayidx163 = getelementptr inbounds i8, i8* %55, i64 2
  %56 = load i8, i8* %arrayidx163, align 1
  %conv164 = sext i8 %56 to i32
  %cmp165 = icmp eq i32 %conv164, 112
  br i1 %cmp165, label %if.then.167, label %if.end.168

if.then.167:                                      ; preds = %sw.bb.162
  store i32 -58, i32* %retval
  br label %return

if.end.168:                                       ; preds = %sw.bb.162
  br label %unknown

sw.default.169:                                   ; preds = %sw.bb.152
  br label %unknown

sw.bb.170:                                        ; preds = %sw.bb.83
  %57 = load i8*, i8** %name.addr, align 8
  %arrayidx171 = getelementptr inbounds i8, i8* %57, i64 1
  %58 = load i8, i8* %arrayidx171, align 1
  %conv172 = sext i8 %58 to i32
  %cmp173 = icmp eq i32 %conv172, 111
  br i1 %cmp173, label %land.lhs.true.175, label %if.end.181

land.lhs.true.175:                                ; preds = %sw.bb.170
  %59 = load i8*, i8** %name.addr, align 8
  %arrayidx176 = getelementptr inbounds i8, i8* %59, i64 2
  %60 = load i8, i8* %arrayidx176, align 1
  %conv177 = sext i8 %60 to i32
  %cmp178 = icmp eq i32 %conv177, 114
  br i1 %cmp178, label %if.then.180, label %if.end.181

if.then.180:                                      ; preds = %land.lhs.true.175
  store i32 62, i32* %retval
  br label %return

if.end.181:                                       ; preds = %land.lhs.true.175, %sw.bb.170
  br label %unknown

sw.bb.182:                                        ; preds = %sw.bb.83
  %61 = load i8*, i8** %name.addr, align 8
  %arrayidx183 = getelementptr inbounds i8, i8* %61, i64 1
  %62 = load i8, i8* %arrayidx183, align 1
  %conv184 = sext i8 %62 to i32
  %cmp185 = icmp eq i32 %conv184, 101
  br i1 %cmp185, label %land.lhs.true.187, label %if.end.193

land.lhs.true.187:                                ; preds = %sw.bb.182
  %63 = load i8*, i8** %name.addr, align 8
  %arrayidx188 = getelementptr inbounds i8, i8* %63, i64 2
  %64 = load i8, i8* %arrayidx188, align 1
  %conv189 = sext i8 %64 to i32
  %cmp190 = icmp eq i32 %conv189, 120
  br i1 %cmp190, label %if.then.192, label %if.end.193

if.then.192:                                      ; preds = %land.lhs.true.187
  store i32 -99, i32* %retval
  br label %return

if.end.193:                                       ; preds = %land.lhs.true.187, %sw.bb.182
  br label %unknown

sw.bb.194:                                        ; preds = %sw.bb.83
  %65 = load i8*, i8** %name.addr, align 8
  %arrayidx195 = getelementptr inbounds i8, i8* %65, i64 1
  %66 = load i8, i8* %arrayidx195, align 1
  %conv196 = sext i8 %66 to i32
  %cmp197 = icmp eq i32 %conv196, 110
  br i1 %cmp197, label %land.lhs.true.199, label %if.end.205

land.lhs.true.199:                                ; preds = %sw.bb.194
  %67 = load i8*, i8** %name.addr, align 8
  %arrayidx200 = getelementptr inbounds i8, i8* %67, i64 2
  %68 = load i8, i8* %arrayidx200, align 1
  %conv201 = sext i8 %68 to i32
  %cmp202 = icmp eq i32 %conv201, 116
  br i1 %cmp202, label %if.then.204, label %if.end.205

if.then.204:                                      ; preds = %land.lhs.true.199
  store i32 -102, i32* %retval
  br label %return

if.end.205:                                       ; preds = %land.lhs.true.199, %sw.bb.194
  br label %unknown

sw.bb.206:                                        ; preds = %sw.bb.83
  %69 = load i8*, i8** %name.addr, align 8
  %arrayidx207 = getelementptr inbounds i8, i8* %69, i64 1
  %70 = load i8, i8* %arrayidx207, align 1
  %conv208 = sext i8 %70 to i32
  %cmp209 = icmp eq i32 %conv208, 111
  br i1 %cmp209, label %land.lhs.true.211, label %if.end.217

land.lhs.true.211:                                ; preds = %sw.bb.206
  %71 = load i8*, i8** %name.addr, align 8
  %arrayidx212 = getelementptr inbounds i8, i8* %71, i64 2
  %72 = load i8, i8* %arrayidx212, align 1
  %conv213 = sext i8 %72 to i32
  %cmp214 = icmp eq i32 %conv213, 103
  br i1 %cmp214, label %if.then.216, label %if.end.217

if.then.216:                                      ; preds = %land.lhs.true.211
  store i32 -117, i32* %retval
  br label %return

if.end.217:                                       ; preds = %land.lhs.true.211, %sw.bb.206
  br label %unknown

sw.bb.218:                                        ; preds = %sw.bb.83
  %73 = load i8*, i8** %name.addr, align 8
  %arrayidx219 = getelementptr inbounds i8, i8* %73, i64 1
  %74 = load i8, i8* %arrayidx219, align 1
  %conv220 = sext i8 %74 to i32
  %cmp221 = icmp eq i32 %conv220, 97
  br i1 %cmp221, label %land.lhs.true.223, label %if.end.229

land.lhs.true.223:                                ; preds = %sw.bb.218
  %75 = load i8*, i8** %name.addr, align 8
  %arrayidx224 = getelementptr inbounds i8, i8* %75, i64 2
  %76 = load i8, i8* %arrayidx224, align 1
  %conv225 = sext i8 %76 to i32
  %cmp226 = icmp eq i32 %conv225, 112
  br i1 %cmp226, label %if.then.228, label %if.end.229

if.then.228:                                      ; preds = %land.lhs.true.223
  store i32 121, i32* %retval
  br label %return

if.end.229:                                       ; preds = %land.lhs.true.223, %sw.bb.218
  br label %unknown

sw.bb.230:                                        ; preds = %sw.bb.83
  %77 = load i8*, i8** %name.addr, align 8
  %arrayidx231 = getelementptr inbounds i8, i8* %77, i64 1
  %78 = load i8, i8* %arrayidx231, align 1
  %conv232 = sext i8 %78 to i32
  %cmp233 = icmp eq i32 %conv232, 111
  br i1 %cmp233, label %land.lhs.true.235, label %if.end.241

land.lhs.true.235:                                ; preds = %sw.bb.230
  %79 = load i8*, i8** %name.addr, align 8
  %arrayidx236 = getelementptr inbounds i8, i8* %79, i64 2
  %80 = load i8, i8* %arrayidx236, align 1
  %conv237 = sext i8 %80 to i32
  %cmp238 = icmp eq i32 %conv237, 116
  br i1 %cmp238, label %if.then.240, label %if.end.241

if.then.240:                                      ; preds = %land.lhs.true.235
  store i32 -131, i32* %retval
  br label %return

if.end.241:                                       ; preds = %land.lhs.true.235, %sw.bb.230
  br label %unknown

sw.bb.242:                                        ; preds = %sw.bb.83
  %81 = load i8*, i8** %name.addr, align 8
  %arrayidx243 = getelementptr inbounds i8, i8* %81, i64 1
  %82 = load i8, i8* %arrayidx243, align 1
  %conv244 = sext i8 %82 to i32
  switch i32 %conv244, label %sw.default.266 [
    i32 99, label %sw.bb.245
    i32 114, label %sw.bb.252
    i32 117, label %sw.bb.259
  ]

sw.bb.245:                                        ; preds = %sw.bb.242
  %83 = load i8*, i8** %name.addr, align 8
  %arrayidx246 = getelementptr inbounds i8, i8* %83, i64 2
  %84 = load i8, i8* %arrayidx246, align 1
  %conv247 = sext i8 %84 to i32
  %cmp248 = icmp eq i32 %conv247, 116
  br i1 %cmp248, label %if.then.250, label %if.end.251

if.then.250:                                      ; preds = %sw.bb.245
  store i32 -132, i32* %retval
  br label %return

if.end.251:                                       ; preds = %sw.bb.245
  br label %unknown

sw.bb.252:                                        ; preds = %sw.bb.242
  %85 = load i8*, i8** %name.addr, align 8
  %arrayidx253 = getelementptr inbounds i8, i8* %85, i64 2
  %86 = load i8, i8* %arrayidx253, align 1
  %conv254 = sext i8 %86 to i32
  %cmp255 = icmp eq i32 %conv254, 100
  br i1 %cmp255, label %if.then.257, label %if.end.258

if.then.257:                                      ; preds = %sw.bb.252
  store i32 -136, i32* %retval
  br label %return

if.end.258:                                       ; preds = %sw.bb.252
  br label %unknown

sw.bb.259:                                        ; preds = %sw.bb.242
  %87 = load i8*, i8** %name.addr, align 8
  %arrayidx260 = getelementptr inbounds i8, i8* %87, i64 2
  %88 = load i8, i8* %arrayidx260, align 1
  %conv261 = sext i8 %88 to i32
  %cmp262 = icmp eq i32 %conv261, 114
  br i1 %cmp262, label %if.then.264, label %if.end.265

if.then.264:                                      ; preds = %sw.bb.259
  store i32 137, i32* %retval
  br label %return

if.end.265:                                       ; preds = %sw.bb.259
  br label %unknown

sw.default.266:                                   ; preds = %sw.bb.242
  br label %unknown

sw.bb.267:                                        ; preds = %sw.bb.83
  %89 = load i8*, i8** %name.addr, align 8
  %arrayidx268 = getelementptr inbounds i8, i8* %89, i64 1
  %90 = load i8, i8* %arrayidx268, align 1
  %conv269 = sext i8 %90 to i32
  %cmp270 = icmp eq i32 %conv269, 111
  br i1 %cmp270, label %if.then.272, label %if.end.278

if.then.272:                                      ; preds = %sw.bb.267
  %91 = load i8*, i8** %name.addr, align 8
  %arrayidx273 = getelementptr inbounds i8, i8* %91, i64 2
  %92 = load i8, i8* %arrayidx273, align 1
  %conv274 = sext i8 %92 to i32
  switch i32 %conv274, label %sw.default.277 [
    i32 112, label %sw.bb.275
    i32 115, label %sw.bb.276
  ]

sw.bb.275:                                        ; preds = %if.then.272
  store i32 -141, i32* %retval
  br label %return

sw.bb.276:                                        ; preds = %if.then.272
  store i32 142, i32* %retval
  br label %return

sw.default.277:                                   ; preds = %if.then.272
  br label %unknown

if.end.278:                                       ; preds = %sw.bb.267
  br label %unknown

sw.bb.279:                                        ; preds = %sw.bb.83
  %93 = load i8*, i8** %name.addr, align 8
  %arrayidx280 = getelementptr inbounds i8, i8* %93, i64 1
  %94 = load i8, i8* %arrayidx280, align 1
  %conv281 = sext i8 %94 to i32
  %cmp282 = icmp eq i32 %conv281, 101
  br i1 %cmp282, label %land.lhs.true.284, label %if.end.290

land.lhs.true.284:                                ; preds = %sw.bb.279
  %95 = load i8*, i8** %name.addr, align 8
  %arrayidx285 = getelementptr inbounds i8, i8* %95, i64 2
  %96 = load i8, i8* %arrayidx285, align 1
  %conv286 = sext i8 %96 to i32
  %cmp287 = icmp eq i32 %conv286, 102
  br i1 %cmp287, label %if.then.289, label %if.end.290

if.then.289:                                      ; preds = %land.lhs.true.284
  store i32 -161, i32* %retval
  br label %return

if.end.290:                                       ; preds = %land.lhs.true.284, %sw.bb.279
  br label %unknown

sw.bb.291:                                        ; preds = %sw.bb.83
  %97 = load i8*, i8** %name.addr, align 8
  %arrayidx292 = getelementptr inbounds i8, i8* %97, i64 1
  %98 = load i8, i8* %arrayidx292, align 1
  %conv293 = sext i8 %98 to i32
  switch i32 %conv293, label %sw.default.308 [
    i32 105, label %sw.bb.294
    i32 117, label %sw.bb.301
  ]

sw.bb.294:                                        ; preds = %sw.bb.291
  %99 = load i8*, i8** %name.addr, align 8
  %arrayidx295 = getelementptr inbounds i8, i8* %99, i64 2
  %100 = load i8, i8* %arrayidx295, align 1
  %conv296 = sext i8 %100 to i32
  %cmp297 = icmp eq i32 %conv296, 110
  br i1 %cmp297, label %if.then.299, label %if.end.300

if.then.299:                                      ; preds = %sw.bb.294
  store i32 -194, i32* %retval
  br label %return

if.end.300:                                       ; preds = %sw.bb.294
  br label %unknown

sw.bb.301:                                        ; preds = %sw.bb.291
  %101 = load i8*, i8** %name.addr, align 8
  %arrayidx302 = getelementptr inbounds i8, i8* %101, i64 2
  %102 = load i8, i8* %arrayidx302, align 1
  %conv303 = sext i8 %102 to i32
  %cmp304 = icmp eq i32 %conv303, 98
  br i1 %cmp304, label %if.then.306, label %if.end.307

if.then.306:                                      ; preds = %sw.bb.301
  store i32 206, i32* %retval
  br label %return

if.end.307:                                       ; preds = %sw.bb.301
  br label %unknown

sw.default.308:                                   ; preds = %sw.bb.291
  br label %unknown

sw.bb.309:                                        ; preds = %sw.bb.83
  %103 = load i8*, i8** %name.addr, align 8
  %arrayidx310 = getelementptr inbounds i8, i8* %103, i64 1
  %104 = load i8, i8* %arrayidx310, align 1
  %conv311 = sext i8 %104 to i32
  %cmp312 = icmp eq i32 %conv311, 105
  br i1 %cmp312, label %land.lhs.true.314, label %if.end.320

land.lhs.true.314:                                ; preds = %sw.bb.309
  %105 = load i8*, i8** %name.addr, align 8
  %arrayidx315 = getelementptr inbounds i8, i8* %105, i64 2
  %106 = load i8, i8* %arrayidx315, align 1
  %conv316 = sext i8 %106 to i32
  %cmp317 = icmp eq i32 %conv316, 101
  br i1 %cmp317, label %if.then.319, label %if.end.320

if.then.319:                                      ; preds = %land.lhs.true.314
  store i32 217, i32* %retval
  br label %return

if.end.320:                                       ; preds = %land.lhs.true.314, %sw.bb.309
  br label %unknown

sw.bb.321:                                        ; preds = %sw.bb.83
  %107 = load i8*, i8** %name.addr, align 8
  %arrayidx322 = getelementptr inbounds i8, i8* %107, i64 1
  %108 = load i8, i8* %arrayidx322, align 1
  %conv323 = sext i8 %108 to i32
  %cmp324 = icmp eq i32 %conv323, 115
  br i1 %cmp324, label %land.lhs.true.326, label %if.end.332

land.lhs.true.326:                                ; preds = %sw.bb.321
  %109 = load i8*, i8** %name.addr, align 8
  %arrayidx327 = getelementptr inbounds i8, i8* %109, i64 2
  %110 = load i8, i8* %arrayidx327, align 1
  %conv328 = sext i8 %110 to i32
  %cmp329 = icmp eq i32 %conv328, 101
  br i1 %cmp329, label %if.then.331, label %if.end.332

if.then.331:                                      ; preds = %land.lhs.true.326
  store i32 233, i32* %retval
  br label %return

if.end.332:                                       ; preds = %land.lhs.true.326, %sw.bb.321
  br label %unknown

sw.bb.333:                                        ; preds = %sw.bb.83
  %111 = load i8*, i8** %name.addr, align 8
  %arrayidx334 = getelementptr inbounds i8, i8* %111, i64 1
  %112 = load i8, i8* %arrayidx334, align 1
  %conv335 = sext i8 %112 to i32
  %cmp336 = icmp eq i32 %conv335, 101
  br i1 %cmp336, label %land.lhs.true.338, label %if.end.344

land.lhs.true.338:                                ; preds = %sw.bb.333
  %113 = load i8*, i8** %name.addr, align 8
  %arrayidx339 = getelementptr inbounds i8, i8* %113, i64 2
  %114 = load i8, i8* %arrayidx339, align 1
  %conv340 = sext i8 %114 to i32
  %cmp341 = icmp eq i32 %conv340, 99
  br i1 %cmp341, label %if.then.343, label %if.end.344

if.then.343:                                      ; preds = %land.lhs.true.338
  store i32 -236, i32* %retval
  br label %return

if.end.344:                                       ; preds = %land.lhs.true.338, %sw.bb.333
  br label %unknown

sw.bb.345:                                        ; preds = %sw.bb.83
  %115 = load i8*, i8** %name.addr, align 8
  %arrayidx346 = getelementptr inbounds i8, i8* %115, i64 1
  %116 = load i8, i8* %arrayidx346, align 1
  %conv347 = sext i8 %116 to i32
  %cmp348 = icmp eq i32 %conv347, 111
  br i1 %cmp348, label %land.lhs.true.350, label %if.end.356

land.lhs.true.350:                                ; preds = %sw.bb.345
  %117 = load i8*, i8** %name.addr, align 8
  %arrayidx351 = getelementptr inbounds i8, i8* %117, i64 2
  %118 = load i8, i8* %arrayidx351, align 1
  %conv352 = sext i8 %118 to i32
  %cmp353 = icmp eq i32 %conv352, 114
  br i1 %cmp353, label %if.then.355, label %if.end.356

if.then.355:                                      ; preds = %land.lhs.true.350
  store i32 -244, i32* %retval
  br label %return

if.end.356:                                       ; preds = %land.lhs.true.350, %sw.bb.345
  br label %unknown

sw.default.357:                                   ; preds = %sw.bb.83
  br label %unknown

sw.bb.358:                                        ; preds = %entry
  %119 = load i8*, i8** %name.addr, align 8
  %arrayidx359 = getelementptr inbounds i8, i8* %119, i64 0
  %120 = load i8, i8* %arrayidx359, align 1
  %conv360 = sext i8 %120 to i32
  switch i32 %conv360, label %sw.default.889 [
    i32 67, label %sw.bb.361
    i32 73, label %sw.bb.378
    i32 98, label %sw.bb.395
    i32 99, label %sw.bb.412
    i32 100, label %sw.bb.429
    i32 101, label %sw.bb.446
    i32 102, label %sw.bb.504
    i32 103, label %sw.bb.521
    i32 106, label %sw.bb.573
    i32 107, label %sw.bb.590
    i32 108, label %sw.bb.618
    i32 110, label %sw.bb.658
    i32 111, label %sw.bb.675
    i32 112, label %sw.bb.692
    i32 114, label %sw.bb.732
    i32 115, label %sw.bb.773
    i32 116, label %sw.bb.831
    i32 119, label %sw.bb.865
  ]

sw.bb.361:                                        ; preds = %sw.bb.358
  %121 = load i8*, i8** %name.addr, align 8
  %arrayidx362 = getelementptr inbounds i8, i8* %121, i64 1
  %122 = load i8, i8* %arrayidx362, align 1
  %conv363 = sext i8 %122 to i32
  %cmp364 = icmp eq i32 %conv363, 79
  br i1 %cmp364, label %land.lhs.true.366, label %if.end.377

land.lhs.true.366:                                ; preds = %sw.bb.361
  %123 = load i8*, i8** %name.addr, align 8
  %arrayidx367 = getelementptr inbounds i8, i8* %123, i64 2
  %124 = load i8, i8* %arrayidx367, align 1
  %conv368 = sext i8 %124 to i32
  %cmp369 = icmp eq i32 %conv368, 82
  br i1 %cmp369, label %land.lhs.true.371, label %if.end.377

land.lhs.true.371:                                ; preds = %land.lhs.true.366
  %125 = load i8*, i8** %name.addr, align 8
  %arrayidx372 = getelementptr inbounds i8, i8* %125, i64 3
  %126 = load i8, i8* %arrayidx372, align 1
  %conv373 = sext i8 %126 to i32
  %cmp374 = icmp eq i32 %conv373, 69
  br i1 %cmp374, label %if.then.376, label %if.end.377

if.then.376:                                      ; preds = %land.lhs.true.371
  store i32 -8, i32* %retval
  br label %return

if.end.377:                                       ; preds = %land.lhs.true.371, %land.lhs.true.366, %sw.bb.361
  br label %unknown

sw.bb.378:                                        ; preds = %sw.bb.358
  %127 = load i8*, i8** %name.addr, align 8
  %arrayidx379 = getelementptr inbounds i8, i8* %127, i64 1
  %128 = load i8, i8* %arrayidx379, align 1
  %conv380 = sext i8 %128 to i32
  %cmp381 = icmp eq i32 %conv380, 78
  br i1 %cmp381, label %land.lhs.true.383, label %if.end.394

land.lhs.true.383:                                ; preds = %sw.bb.378
  %129 = load i8*, i8** %name.addr, align 8
  %arrayidx384 = getelementptr inbounds i8, i8* %129, i64 2
  %130 = load i8, i8* %arrayidx384, align 1
  %conv385 = sext i8 %130 to i32
  %cmp386 = icmp eq i32 %conv385, 73
  br i1 %cmp386, label %land.lhs.true.388, label %if.end.394

land.lhs.true.388:                                ; preds = %land.lhs.true.383
  %131 = load i8*, i8** %name.addr, align 8
  %arrayidx389 = getelementptr inbounds i8, i8* %131, i64 3
  %132 = load i8, i8* %arrayidx389, align 1
  %conv390 = sext i8 %132 to i32
  %cmp391 = icmp eq i32 %conv390, 84
  br i1 %cmp391, label %if.then.393, label %if.end.394

if.then.393:                                      ; preds = %land.lhs.true.388
  store i32 11, i32* %retval
  br label %return

if.end.394:                                       ; preds = %land.lhs.true.388, %land.lhs.true.383, %sw.bb.378
  br label %unknown

sw.bb.395:                                        ; preds = %sw.bb.358
  %133 = load i8*, i8** %name.addr, align 8
  %arrayidx396 = getelementptr inbounds i8, i8* %133, i64 1
  %134 = load i8, i8* %arrayidx396, align 1
  %conv397 = sext i8 %134 to i32
  %cmp398 = icmp eq i32 %conv397, 105
  br i1 %cmp398, label %land.lhs.true.400, label %if.end.411

land.lhs.true.400:                                ; preds = %sw.bb.395
  %135 = load i8*, i8** %name.addr, align 8
  %arrayidx401 = getelementptr inbounds i8, i8* %135, i64 2
  %136 = load i8, i8* %arrayidx401, align 1
  %conv402 = sext i8 %136 to i32
  %cmp403 = icmp eq i32 %conv402, 110
  br i1 %cmp403, label %land.lhs.true.405, label %if.end.411

land.lhs.true.405:                                ; preds = %land.lhs.true.400
  %137 = load i8*, i8** %name.addr, align 8
  %arrayidx406 = getelementptr inbounds i8, i8* %137, i64 3
  %138 = load i8, i8* %arrayidx406, align 1
  %conv407 = sext i8 %138 to i32
  %cmp408 = icmp eq i32 %conv407, 100
  br i1 %cmp408, label %if.then.410, label %if.end.411

if.then.410:                                      ; preds = %land.lhs.true.405
  store i32 -18, i32* %retval
  br label %return

if.end.411:                                       ; preds = %land.lhs.true.405, %land.lhs.true.400, %sw.bb.395
  br label %unknown

sw.bb.412:                                        ; preds = %sw.bb.358
  %139 = load i8*, i8** %name.addr, align 8
  %arrayidx413 = getelementptr inbounds i8, i8* %139, i64 1
  %140 = load i8, i8* %arrayidx413, align 1
  %conv414 = sext i8 %140 to i32
  %cmp415 = icmp eq i32 %conv414, 104
  br i1 %cmp415, label %land.lhs.true.417, label %if.end.428

land.lhs.true.417:                                ; preds = %sw.bb.412
  %141 = load i8*, i8** %name.addr, align 8
  %arrayidx418 = getelementptr inbounds i8, i8* %141, i64 2
  %142 = load i8, i8* %arrayidx418, align 1
  %conv419 = sext i8 %142 to i32
  %cmp420 = icmp eq i32 %conv419, 111
  br i1 %cmp420, label %land.lhs.true.422, label %if.end.428

land.lhs.true.422:                                ; preds = %land.lhs.true.417
  %143 = load i8*, i8** %name.addr, align 8
  %arrayidx423 = getelementptr inbounds i8, i8* %143, i64 3
  %144 = load i8, i8* %arrayidx423, align 1
  %conv424 = sext i8 %144 to i32
  %cmp425 = icmp eq i32 %conv424, 112
  br i1 %cmp425, label %if.then.427, label %if.end.428

if.then.427:                                      ; preds = %land.lhs.true.422
  store i32 -25, i32* %retval
  br label %return

if.end.428:                                       ; preds = %land.lhs.true.422, %land.lhs.true.417, %sw.bb.412
  br label %unknown

sw.bb.429:                                        ; preds = %sw.bb.358
  %145 = load i8*, i8** %name.addr, align 8
  %arrayidx430 = getelementptr inbounds i8, i8* %145, i64 1
  %146 = load i8, i8* %arrayidx430, align 1
  %conv431 = sext i8 %146 to i32
  %cmp432 = icmp eq i32 %conv431, 117
  br i1 %cmp432, label %land.lhs.true.434, label %if.end.445

land.lhs.true.434:                                ; preds = %sw.bb.429
  %147 = load i8*, i8** %name.addr, align 8
  %arrayidx435 = getelementptr inbounds i8, i8* %147, i64 2
  %148 = load i8, i8* %arrayidx435, align 1
  %conv436 = sext i8 %148 to i32
  %cmp437 = icmp eq i32 %conv436, 109
  br i1 %cmp437, label %land.lhs.true.439, label %if.end.445

land.lhs.true.439:                                ; preds = %land.lhs.true.434
  %149 = load i8*, i8** %name.addr, align 8
  %arrayidx440 = getelementptr inbounds i8, i8* %149, i64 3
  %150 = load i8, i8* %arrayidx440, align 1
  %conv441 = sext i8 %150 to i32
  %cmp442 = icmp eq i32 %conv441, 112
  br i1 %cmp442, label %if.then.444, label %if.end.445

if.then.444:                                      ; preds = %land.lhs.true.439
  store i32 -42, i32* %retval
  br label %return

if.end.445:                                       ; preds = %land.lhs.true.439, %land.lhs.true.434, %sw.bb.429
  br label %unknown

sw.bb.446:                                        ; preds = %sw.bb.358
  %151 = load i8*, i8** %name.addr, align 8
  %arrayidx447 = getelementptr inbounds i8, i8* %151, i64 1
  %152 = load i8, i8* %arrayidx447, align 1
  %conv448 = sext i8 %152 to i32
  switch i32 %conv448, label %sw.default.503 [
    i32 97, label %sw.bb.449
    i32 108, label %sw.bb.461
    i32 118, label %sw.bb.473
    i32 120, label %sw.bb.485
  ]

sw.bb.449:                                        ; preds = %sw.bb.446
  %153 = load i8*, i8** %name.addr, align 8
  %arrayidx450 = getelementptr inbounds i8, i8* %153, i64 2
  %154 = load i8, i8* %arrayidx450, align 1
  %conv451 = sext i8 %154 to i32
  %cmp452 = icmp eq i32 %conv451, 99
  br i1 %cmp452, label %land.lhs.true.454, label %if.end.460

land.lhs.true.454:                                ; preds = %sw.bb.449
  %155 = load i8*, i8** %name.addr, align 8
  %arrayidx455 = getelementptr inbounds i8, i8* %155, i64 3
  %156 = load i8, i8* %arrayidx455, align 1
  %conv456 = sext i8 %156 to i32
  %cmp457 = icmp eq i32 %conv456, 104
  br i1 %cmp457, label %if.then.459, label %if.end.460

if.then.459:                                      ; preds = %land.lhs.true.454
  store i32 -43, i32* %retval
  br label %return

if.end.460:                                       ; preds = %land.lhs.true.454, %sw.bb.449
  br label %unknown

sw.bb.461:                                        ; preds = %sw.bb.446
  %157 = load i8*, i8** %name.addr, align 8
  %arrayidx462 = getelementptr inbounds i8, i8* %157, i64 2
  %158 = load i8, i8* %arrayidx462, align 1
  %conv463 = sext i8 %158 to i32
  %cmp464 = icmp eq i32 %conv463, 115
  br i1 %cmp464, label %land.lhs.true.466, label %if.end.472

land.lhs.true.466:                                ; preds = %sw.bb.461
  %159 = load i8*, i8** %name.addr, align 8
  %arrayidx467 = getelementptr inbounds i8, i8* %159, i64 3
  %160 = load i8, i8* %arrayidx467, align 1
  %conv468 = sext i8 %160 to i32
  %cmp469 = icmp eq i32 %conv468, 101
  br i1 %cmp469, label %if.then.471, label %if.end.472

if.then.471:                                      ; preds = %land.lhs.true.466
  store i32 44, i32* %retval
  br label %return

if.end.472:                                       ; preds = %land.lhs.true.466, %sw.bb.461
  br label %unknown

sw.bb.473:                                        ; preds = %sw.bb.446
  %161 = load i8*, i8** %name.addr, align 8
  %arrayidx474 = getelementptr inbounds i8, i8* %161, i64 2
  %162 = load i8, i8* %arrayidx474, align 1
  %conv475 = sext i8 %162 to i32
  %cmp476 = icmp eq i32 %conv475, 97
  br i1 %cmp476, label %land.lhs.true.478, label %if.end.484

land.lhs.true.478:                                ; preds = %sw.bb.473
  %163 = load i8*, i8** %name.addr, align 8
  %arrayidx479 = getelementptr inbounds i8, i8* %163, i64 3
  %164 = load i8, i8* %arrayidx479, align 1
  %conv480 = sext i8 %164 to i32
  %cmp481 = icmp eq i32 %conv480, 108
  br i1 %cmp481, label %if.then.483, label %if.end.484

if.then.483:                                      ; preds = %land.lhs.true.478
  store i32 54, i32* %retval
  br label %return

if.end.484:                                       ; preds = %land.lhs.true.478, %sw.bb.473
  br label %unknown

sw.bb.485:                                        ; preds = %sw.bb.446
  %165 = load i8*, i8** %name.addr, align 8
  %arrayidx486 = getelementptr inbounds i8, i8* %165, i64 2
  %166 = load i8, i8* %arrayidx486, align 1
  %conv487 = sext i8 %166 to i32
  switch i32 %conv487, label %sw.default.502 [
    i32 101, label %sw.bb.488
    i32 105, label %sw.bb.495
  ]

sw.bb.488:                                        ; preds = %sw.bb.485
  %167 = load i8*, i8** %name.addr, align 8
  %arrayidx489 = getelementptr inbounds i8, i8* %167, i64 3
  %168 = load i8, i8* %arrayidx489, align 1
  %conv490 = sext i8 %168 to i32
  %cmp491 = icmp eq i32 %conv490, 99
  br i1 %cmp491, label %if.then.493, label %if.end.494

if.then.493:                                      ; preds = %sw.bb.488
  store i32 -55, i32* %retval
  br label %return

if.end.494:                                       ; preds = %sw.bb.488
  br label %unknown

sw.bb.495:                                        ; preds = %sw.bb.485
  %169 = load i8*, i8** %name.addr, align 8
  %arrayidx496 = getelementptr inbounds i8, i8* %169, i64 3
  %170 = load i8, i8* %arrayidx496, align 1
  %conv497 = sext i8 %170 to i32
  %cmp498 = icmp eq i32 %conv497, 116
  br i1 %cmp498, label %if.then.500, label %if.end.501

if.then.500:                                      ; preds = %sw.bb.495
  store i32 -57, i32* %retval
  br label %return

if.end.501:                                       ; preds = %sw.bb.495
  br label %unknown

sw.default.502:                                   ; preds = %sw.bb.485
  br label %unknown

sw.default.503:                                   ; preds = %sw.bb.446
  br label %unknown

sw.bb.504:                                        ; preds = %sw.bb.358
  %171 = load i8*, i8** %name.addr, align 8
  %arrayidx505 = getelementptr inbounds i8, i8* %171, i64 1
  %172 = load i8, i8* %arrayidx505, align 1
  %conv506 = sext i8 %172 to i32
  %cmp507 = icmp eq i32 %conv506, 111
  br i1 %cmp507, label %land.lhs.true.509, label %if.end.520

land.lhs.true.509:                                ; preds = %sw.bb.504
  %173 = load i8*, i8** %name.addr, align 8
  %arrayidx510 = getelementptr inbounds i8, i8* %173, i64 2
  %174 = load i8, i8* %arrayidx510, align 1
  %conv511 = sext i8 %174 to i32
  %cmp512 = icmp eq i32 %conv511, 114
  br i1 %cmp512, label %land.lhs.true.514, label %if.end.520

land.lhs.true.514:                                ; preds = %land.lhs.true.509
  %175 = load i8*, i8** %name.addr, align 8
  %arrayidx515 = getelementptr inbounds i8, i8* %175, i64 3
  %176 = load i8, i8* %arrayidx515, align 1
  %conv516 = sext i8 %176 to i32
  %cmp517 = icmp eq i32 %conv516, 107
  br i1 %cmp517, label %if.then.519, label %if.end.520

if.then.519:                                      ; preds = %land.lhs.true.514
  store i32 -64, i32* %retval
  br label %return

if.end.520:                                       ; preds = %land.lhs.true.514, %land.lhs.true.509, %sw.bb.504
  br label %unknown

sw.bb.521:                                        ; preds = %sw.bb.358
  %177 = load i8*, i8** %name.addr, align 8
  %arrayidx522 = getelementptr inbounds i8, i8* %177, i64 1
  %178 = load i8, i8* %arrayidx522, align 1
  %conv523 = sext i8 %178 to i32
  switch i32 %conv523, label %sw.default.572 [
    i32 101, label %sw.bb.524
    i32 108, label %sw.bb.536
    i32 111, label %sw.bb.548
    i32 114, label %sw.bb.560
  ]

sw.bb.524:                                        ; preds = %sw.bb.521
  %179 = load i8*, i8** %name.addr, align 8
  %arrayidx525 = getelementptr inbounds i8, i8* %179, i64 2
  %180 = load i8, i8* %arrayidx525, align 1
  %conv526 = sext i8 %180 to i32
  %cmp527 = icmp eq i32 %conv526, 116
  br i1 %cmp527, label %land.lhs.true.529, label %if.end.535

land.lhs.true.529:                                ; preds = %sw.bb.524
  %181 = load i8*, i8** %name.addr, align 8
  %arrayidx530 = getelementptr inbounds i8, i8* %181, i64 3
  %182 = load i8, i8* %arrayidx530, align 1
  %conv531 = sext i8 %182 to i32
  %cmp532 = icmp eq i32 %conv531, 99
  br i1 %cmp532, label %if.then.534, label %if.end.535

if.then.534:                                      ; preds = %land.lhs.true.529
  store i32 -68, i32* %retval
  br label %return

if.end.535:                                       ; preds = %land.lhs.true.529, %sw.bb.524
  br label %unknown

sw.bb.536:                                        ; preds = %sw.bb.521
  %183 = load i8*, i8** %name.addr, align 8
  %arrayidx537 = getelementptr inbounds i8, i8* %183, i64 2
  %184 = load i8, i8* %arrayidx537, align 1
  %conv538 = sext i8 %184 to i32
  %cmp539 = icmp eq i32 %conv538, 111
  br i1 %cmp539, label %land.lhs.true.541, label %if.end.547

land.lhs.true.541:                                ; preds = %sw.bb.536
  %185 = load i8*, i8** %name.addr, align 8
  %arrayidx542 = getelementptr inbounds i8, i8* %185, i64 3
  %186 = load i8, i8* %arrayidx542, align 1
  %conv543 = sext i8 %186 to i32
  %cmp544 = icmp eq i32 %conv543, 98
  br i1 %cmp544, label %if.then.546, label %if.end.547

if.then.546:                                      ; preds = %land.lhs.true.541
  store i32 94, i32* %retval
  br label %return

if.end.547:                                       ; preds = %land.lhs.true.541, %sw.bb.536
  br label %unknown

sw.bb.548:                                        ; preds = %sw.bb.521
  %187 = load i8*, i8** %name.addr, align 8
  %arrayidx549 = getelementptr inbounds i8, i8* %187, i64 2
  %188 = load i8, i8* %arrayidx549, align 1
  %conv550 = sext i8 %188 to i32
  %cmp551 = icmp eq i32 %conv550, 116
  br i1 %cmp551, label %land.lhs.true.553, label %if.end.559

land.lhs.true.553:                                ; preds = %sw.bb.548
  %189 = load i8*, i8** %name.addr, align 8
  %arrayidx554 = getelementptr inbounds i8, i8* %189, i64 3
  %190 = load i8, i8* %arrayidx554, align 1
  %conv555 = sext i8 %190 to i32
  %cmp556 = icmp eq i32 %conv555, 111
  br i1 %cmp556, label %if.then.558, label %if.end.559

if.then.558:                                      ; preds = %land.lhs.true.553
  store i32 96, i32* %retval
  br label %return

if.end.559:                                       ; preds = %land.lhs.true.553, %sw.bb.548
  br label %unknown

sw.bb.560:                                        ; preds = %sw.bb.521
  %191 = load i8*, i8** %name.addr, align 8
  %arrayidx561 = getelementptr inbounds i8, i8* %191, i64 2
  %192 = load i8, i8* %arrayidx561, align 1
  %conv562 = sext i8 %192 to i32
  %cmp563 = icmp eq i32 %conv562, 101
  br i1 %cmp563, label %land.lhs.true.565, label %if.end.571

land.lhs.true.565:                                ; preds = %sw.bb.560
  %193 = load i8*, i8** %name.addr, align 8
  %arrayidx566 = getelementptr inbounds i8, i8* %193, i64 3
  %194 = load i8, i8* %arrayidx566, align 1
  %conv567 = sext i8 %194 to i32
  %cmp568 = icmp eq i32 %conv567, 112
  br i1 %cmp568, label %if.then.570, label %if.end.571

if.then.570:                                      ; preds = %land.lhs.true.565
  store i32 97, i32* %retval
  br label %return

if.end.571:                                       ; preds = %land.lhs.true.565, %sw.bb.560
  br label %unknown

sw.default.572:                                   ; preds = %sw.bb.521
  br label %unknown

sw.bb.573:                                        ; preds = %sw.bb.358
  %195 = load i8*, i8** %name.addr, align 8
  %arrayidx574 = getelementptr inbounds i8, i8* %195, i64 1
  %196 = load i8, i8* %arrayidx574, align 1
  %conv575 = sext i8 %196 to i32
  %cmp576 = icmp eq i32 %conv575, 111
  br i1 %cmp576, label %land.lhs.true.578, label %if.end.589

land.lhs.true.578:                                ; preds = %sw.bb.573
  %197 = load i8*, i8** %name.addr, align 8
  %arrayidx579 = getelementptr inbounds i8, i8* %197, i64 2
  %198 = load i8, i8* %arrayidx579, align 1
  %conv580 = sext i8 %198 to i32
  %cmp581 = icmp eq i32 %conv580, 105
  br i1 %cmp581, label %land.lhs.true.583, label %if.end.589

land.lhs.true.583:                                ; preds = %land.lhs.true.578
  %199 = load i8*, i8** %name.addr, align 8
  %arrayidx584 = getelementptr inbounds i8, i8* %199, i64 3
  %200 = load i8, i8* %arrayidx584, align 1
  %conv585 = sext i8 %200 to i32
  %cmp586 = icmp eq i32 %conv585, 110
  br i1 %cmp586, label %if.then.588, label %if.end.589

if.then.588:                                      ; preds = %land.lhs.true.583
  store i32 -104, i32* %retval
  br label %return

if.end.589:                                       ; preds = %land.lhs.true.583, %land.lhs.true.578, %sw.bb.573
  br label %unknown

sw.bb.590:                                        ; preds = %sw.bb.358
  %201 = load i8*, i8** %name.addr, align 8
  %arrayidx591 = getelementptr inbounds i8, i8* %201, i64 1
  %202 = load i8, i8* %arrayidx591, align 1
  %conv592 = sext i8 %202 to i32
  switch i32 %conv592, label %sw.default.617 [
    i32 101, label %sw.bb.593
    i32 105, label %sw.bb.605
  ]

sw.bb.593:                                        ; preds = %sw.bb.590
  %203 = load i8*, i8** %name.addr, align 8
  %arrayidx594 = getelementptr inbounds i8, i8* %203, i64 2
  %204 = load i8, i8* %arrayidx594, align 1
  %conv595 = sext i8 %204 to i32
  %cmp596 = icmp eq i32 %conv595, 121
  br i1 %cmp596, label %land.lhs.true.598, label %if.end.604

land.lhs.true.598:                                ; preds = %sw.bb.593
  %205 = load i8*, i8** %name.addr, align 8
  %arrayidx599 = getelementptr inbounds i8, i8* %205, i64 3
  %206 = load i8, i8* %arrayidx599, align 1
  %conv600 = sext i8 %206 to i32
  %cmp601 = icmp eq i32 %conv600, 115
  br i1 %cmp601, label %if.then.603, label %if.end.604

if.then.603:                                      ; preds = %land.lhs.true.598
  store i32 -105, i32* %retval
  br label %return

if.end.604:                                       ; preds = %land.lhs.true.598, %sw.bb.593
  br label %unknown

sw.bb.605:                                        ; preds = %sw.bb.590
  %207 = load i8*, i8** %name.addr, align 8
  %arrayidx606 = getelementptr inbounds i8, i8* %207, i64 2
  %208 = load i8, i8* %arrayidx606, align 1
  %conv607 = sext i8 %208 to i32
  %cmp608 = icmp eq i32 %conv607, 108
  br i1 %cmp608, label %land.lhs.true.610, label %if.end.616

land.lhs.true.610:                                ; preds = %sw.bb.605
  %209 = load i8*, i8** %name.addr, align 8
  %arrayidx611 = getelementptr inbounds i8, i8* %209, i64 3
  %210 = load i8, i8* %arrayidx611, align 1
  %conv612 = sext i8 %210 to i32
  %cmp613 = icmp eq i32 %conv612, 108
  br i1 %cmp613, label %if.then.615, label %if.end.616

if.then.615:                                      ; preds = %land.lhs.true.610
  store i32 -106, i32* %retval
  br label %return

if.end.616:                                       ; preds = %land.lhs.true.610, %sw.bb.605
  br label %unknown

sw.default.617:                                   ; preds = %sw.bb.590
  br label %unknown

sw.bb.618:                                        ; preds = %sw.bb.358
  %211 = load i8*, i8** %name.addr, align 8
  %arrayidx619 = getelementptr inbounds i8, i8* %211, i64 1
  %212 = load i8, i8* %arrayidx619, align 1
  %conv620 = sext i8 %212 to i32
  switch i32 %conv620, label %sw.default.657 [
    i32 97, label %sw.bb.621
    i32 105, label %sw.bb.633
    i32 111, label %sw.bb.645
  ]

sw.bb.621:                                        ; preds = %sw.bb.618
  %213 = load i8*, i8** %name.addr, align 8
  %arrayidx622 = getelementptr inbounds i8, i8* %213, i64 2
  %214 = load i8, i8* %arrayidx622, align 1
  %conv623 = sext i8 %214 to i32
  %cmp624 = icmp eq i32 %conv623, 115
  br i1 %cmp624, label %land.lhs.true.626, label %if.end.632

land.lhs.true.626:                                ; preds = %sw.bb.621
  %215 = load i8*, i8** %name.addr, align 8
  %arrayidx627 = getelementptr inbounds i8, i8* %215, i64 3
  %216 = load i8, i8* %arrayidx627, align 1
  %conv628 = sext i8 %216 to i32
  %cmp629 = icmp eq i32 %conv628, 116
  br i1 %cmp629, label %if.then.631, label %if.end.632

if.then.631:                                      ; preds = %land.lhs.true.626
  store i32 107, i32* %retval
  br label %return

if.end.632:                                       ; preds = %land.lhs.true.626, %sw.bb.621
  br label %unknown

sw.bb.633:                                        ; preds = %sw.bb.618
  %217 = load i8*, i8** %name.addr, align 8
  %arrayidx634 = getelementptr inbounds i8, i8* %217, i64 2
  %218 = load i8, i8* %arrayidx634, align 1
  %conv635 = sext i8 %218 to i32
  %cmp636 = icmp eq i32 %conv635, 110
  br i1 %cmp636, label %land.lhs.true.638, label %if.end.644

land.lhs.true.638:                                ; preds = %sw.bb.633
  %219 = load i8*, i8** %name.addr, align 8
  %arrayidx639 = getelementptr inbounds i8, i8* %219, i64 3
  %220 = load i8, i8* %arrayidx639, align 1
  %conv640 = sext i8 %220 to i32
  %cmp641 = icmp eq i32 %conv640, 107
  br i1 %cmp641, label %if.then.643, label %if.end.644

if.then.643:                                      ; preds = %land.lhs.true.638
  store i32 -112, i32* %retval
  br label %return

if.end.644:                                       ; preds = %land.lhs.true.638, %sw.bb.633
  br label %unknown

sw.bb.645:                                        ; preds = %sw.bb.618
  %221 = load i8*, i8** %name.addr, align 8
  %arrayidx646 = getelementptr inbounds i8, i8* %221, i64 2
  %222 = load i8, i8* %arrayidx646, align 1
  %conv647 = sext i8 %222 to i32
  %cmp648 = icmp eq i32 %conv647, 99
  br i1 %cmp648, label %land.lhs.true.650, label %if.end.656

land.lhs.true.650:                                ; preds = %sw.bb.645
  %223 = load i8*, i8** %name.addr, align 8
  %arrayidx651 = getelementptr inbounds i8, i8* %223, i64 3
  %224 = load i8, i8* %arrayidx651, align 1
  %conv652 = sext i8 %224 to i32
  %cmp653 = icmp eq i32 %conv652, 107
  br i1 %cmp653, label %if.then.655, label %if.end.656

if.then.655:                                      ; preds = %land.lhs.true.650
  store i32 -116, i32* %retval
  br label %return

if.end.656:                                       ; preds = %land.lhs.true.650, %sw.bb.645
  br label %unknown

sw.default.657:                                   ; preds = %sw.bb.618
  br label %unknown

sw.bb.658:                                        ; preds = %sw.bb.358
  %225 = load i8*, i8** %name.addr, align 8
  %arrayidx659 = getelementptr inbounds i8, i8* %225, i64 1
  %226 = load i8, i8* %arrayidx659, align 1
  %conv660 = sext i8 %226 to i32
  %cmp661 = icmp eq i32 %conv660, 101
  br i1 %cmp661, label %land.lhs.true.663, label %if.end.674

land.lhs.true.663:                                ; preds = %sw.bb.658
  %227 = load i8*, i8** %name.addr, align 8
  %arrayidx664 = getelementptr inbounds i8, i8* %227, i64 2
  %228 = load i8, i8* %arrayidx664, align 1
  %conv665 = sext i8 %228 to i32
  %cmp666 = icmp eq i32 %conv665, 120
  br i1 %cmp666, label %land.lhs.true.668, label %if.end.674

land.lhs.true.668:                                ; preds = %land.lhs.true.663
  %229 = load i8*, i8** %name.addr, align 8
  %arrayidx669 = getelementptr inbounds i8, i8* %229, i64 3
  %230 = load i8, i8* %arrayidx669, align 1
  %conv670 = sext i8 %230 to i32
  %cmp671 = icmp eq i32 %conv670, 116
  br i1 %cmp671, label %if.then.673, label %if.end.674

if.then.673:                                      ; preds = %land.lhs.true.668
  store i32 129, i32* %retval
  br label %return

if.end.674:                                       ; preds = %land.lhs.true.668, %land.lhs.true.663, %sw.bb.658
  br label %unknown

sw.bb.675:                                        ; preds = %sw.bb.358
  %231 = load i8*, i8** %name.addr, align 8
  %arrayidx676 = getelementptr inbounds i8, i8* %231, i64 1
  %232 = load i8, i8* %arrayidx676, align 1
  %conv677 = sext i8 %232 to i32
  %cmp678 = icmp eq i32 %conv677, 112
  br i1 %cmp678, label %land.lhs.true.680, label %if.end.691

land.lhs.true.680:                                ; preds = %sw.bb.675
  %233 = load i8*, i8** %name.addr, align 8
  %arrayidx681 = getelementptr inbounds i8, i8* %233, i64 2
  %234 = load i8, i8* %arrayidx681, align 1
  %conv682 = sext i8 %234 to i32
  %cmp683 = icmp eq i32 %conv682, 101
  br i1 %cmp683, label %land.lhs.true.685, label %if.end.691

land.lhs.true.685:                                ; preds = %land.lhs.true.680
  %235 = load i8*, i8** %name.addr, align 8
  %arrayidx686 = getelementptr inbounds i8, i8* %235, i64 3
  %236 = load i8, i8* %arrayidx686, align 1
  %conv687 = sext i8 %236 to i32
  %cmp688 = icmp eq i32 %conv687, 110
  br i1 %cmp688, label %if.then.690, label %if.end.691

if.then.690:                                      ; preds = %land.lhs.true.685
  store i32 -133, i32* %retval
  br label %return

if.end.691:                                       ; preds = %land.lhs.true.685, %land.lhs.true.680, %sw.bb.675
  br label %unknown

sw.bb.692:                                        ; preds = %sw.bb.358
  %237 = load i8*, i8** %name.addr, align 8
  %arrayidx693 = getelementptr inbounds i8, i8* %237, i64 1
  %238 = load i8, i8* %arrayidx693, align 1
  %conv694 = sext i8 %238 to i32
  switch i32 %conv694, label %sw.default.731 [
    i32 97, label %sw.bb.695
    i32 105, label %sw.bb.707
    i32 117, label %sw.bb.719
  ]

sw.bb.695:                                        ; preds = %sw.bb.692
  %239 = load i8*, i8** %name.addr, align 8
  %arrayidx696 = getelementptr inbounds i8, i8* %239, i64 2
  %240 = load i8, i8* %arrayidx696, align 1
  %conv697 = sext i8 %240 to i32
  %cmp698 = icmp eq i32 %conv697, 99
  br i1 %cmp698, label %land.lhs.true.700, label %if.end.706

land.lhs.true.700:                                ; preds = %sw.bb.695
  %241 = load i8*, i8** %name.addr, align 8
  %arrayidx701 = getelementptr inbounds i8, i8* %241, i64 3
  %242 = load i8, i8* %arrayidx701, align 1
  %conv702 = sext i8 %242 to i32
  %cmp703 = icmp eq i32 %conv702, 107
  br i1 %cmp703, label %if.then.705, label %if.end.706

if.then.705:                                      ; preds = %land.lhs.true.700
  store i32 -138, i32* %retval
  br label %return

if.end.706:                                       ; preds = %land.lhs.true.700, %sw.bb.695
  br label %unknown

sw.bb.707:                                        ; preds = %sw.bb.692
  %243 = load i8*, i8** %name.addr, align 8
  %arrayidx708 = getelementptr inbounds i8, i8* %243, i64 2
  %244 = load i8, i8* %arrayidx708, align 1
  %conv709 = sext i8 %244 to i32
  %cmp710 = icmp eq i32 %conv709, 112
  br i1 %cmp710, label %land.lhs.true.712, label %if.end.718

land.lhs.true.712:                                ; preds = %sw.bb.707
  %245 = load i8*, i8** %name.addr, align 8
  %arrayidx713 = getelementptr inbounds i8, i8* %245, i64 3
  %246 = load i8, i8* %arrayidx713, align 1
  %conv714 = sext i8 %246 to i32
  %cmp715 = icmp eq i32 %conv714, 101
  br i1 %cmp715, label %if.then.717, label %if.end.718

if.then.717:                                      ; preds = %land.lhs.true.712
  store i32 -140, i32* %retval
  br label %return

if.end.718:                                       ; preds = %land.lhs.true.712, %sw.bb.707
  br label %unknown

sw.bb.719:                                        ; preds = %sw.bb.692
  %247 = load i8*, i8** %name.addr, align 8
  %arrayidx720 = getelementptr inbounds i8, i8* %247, i64 2
  %248 = load i8, i8* %arrayidx720, align 1
  %conv721 = sext i8 %248 to i32
  %cmp722 = icmp eq i32 %conv721, 115
  br i1 %cmp722, label %land.lhs.true.724, label %if.end.730

land.lhs.true.724:                                ; preds = %sw.bb.719
  %249 = load i8*, i8** %name.addr, align 8
  %arrayidx725 = getelementptr inbounds i8, i8* %249, i64 3
  %250 = load i8, i8* %arrayidx725, align 1
  %conv726 = sext i8 %250 to i32
  %cmp727 = icmp eq i32 %conv726, 104
  br i1 %cmp727, label %if.then.729, label %if.end.730

if.then.729:                                      ; preds = %land.lhs.true.724
  store i32 -146, i32* %retval
  br label %return

if.end.730:                                       ; preds = %land.lhs.true.724, %sw.bb.719
  br label %unknown

sw.default.731:                                   ; preds = %sw.bb.692
  br label %unknown

sw.bb.732:                                        ; preds = %sw.bb.358
  %251 = load i8*, i8** %name.addr, align 8
  %arrayidx733 = getelementptr inbounds i8, i8* %251, i64 1
  %252 = load i8, i8* %arrayidx733, align 1
  %conv734 = sext i8 %252 to i32
  switch i32 %conv734, label %sw.default.772 [
    i32 97, label %sw.bb.735
    i32 101, label %sw.bb.747
  ]

sw.bb.735:                                        ; preds = %sw.bb.732
  %253 = load i8*, i8** %name.addr, align 8
  %arrayidx736 = getelementptr inbounds i8, i8* %253, i64 2
  %254 = load i8, i8* %arrayidx736, align 1
  %conv737 = sext i8 %254 to i32
  %cmp738 = icmp eq i32 %conv737, 110
  br i1 %cmp738, label %land.lhs.true.740, label %if.end.746

land.lhs.true.740:                                ; preds = %sw.bb.735
  %255 = load i8*, i8** %name.addr, align 8
  %arrayidx741 = getelementptr inbounds i8, i8* %255, i64 3
  %256 = load i8, i8* %arrayidx741, align 1
  %conv742 = sext i8 %256 to i32
  %cmp743 = icmp eq i32 %conv742, 100
  br i1 %cmp743, label %if.then.745, label %if.end.746

if.then.745:                                      ; preds = %land.lhs.true.740
  store i32 -153, i32* %retval
  br label %return

if.end.746:                                       ; preds = %land.lhs.true.740, %sw.bb.735
  br label %unknown

sw.bb.747:                                        ; preds = %sw.bb.732
  %257 = load i8*, i8** %name.addr, align 8
  %arrayidx748 = getelementptr inbounds i8, i8* %257, i64 2
  %258 = load i8, i8* %arrayidx748, align 1
  %conv749 = sext i8 %258 to i32
  switch i32 %conv749, label %sw.default.771 [
    i32 97, label %sw.bb.750
    i32 99, label %sw.bb.757
    i32 100, label %sw.bb.764
  ]

sw.bb.750:                                        ; preds = %sw.bb.747
  %259 = load i8*, i8** %name.addr, align 8
  %arrayidx751 = getelementptr inbounds i8, i8* %259, i64 3
  %260 = load i8, i8* %arrayidx751, align 1
  %conv752 = sext i8 %260 to i32
  %cmp753 = icmp eq i32 %conv752, 100
  br i1 %cmp753, label %if.then.755, label %if.end.756

if.then.755:                                      ; preds = %sw.bb.750
  store i32 -154, i32* %retval
  br label %return

if.end.756:                                       ; preds = %sw.bb.750
  br label %unknown

sw.bb.757:                                        ; preds = %sw.bb.747
  %261 = load i8*, i8** %name.addr, align 8
  %arrayidx758 = getelementptr inbounds i8, i8* %261, i64 3
  %262 = load i8, i8* %arrayidx758, align 1
  %conv759 = sext i8 %262 to i32
  %cmp760 = icmp eq i32 %conv759, 118
  br i1 %cmp760, label %if.then.762, label %if.end.763

if.then.762:                                      ; preds = %sw.bb.757
  store i32 -159, i32* %retval
  br label %return

if.end.763:                                       ; preds = %sw.bb.757
  br label %unknown

sw.bb.764:                                        ; preds = %sw.bb.747
  %263 = load i8*, i8** %name.addr, align 8
  %arrayidx765 = getelementptr inbounds i8, i8* %263, i64 3
  %264 = load i8, i8* %arrayidx765, align 1
  %conv766 = sext i8 %264 to i32
  %cmp767 = icmp eq i32 %conv766, 111
  br i1 %cmp767, label %if.then.769, label %if.end.770

if.then.769:                                      ; preds = %sw.bb.764
  store i32 160, i32* %retval
  br label %return

if.end.770:                                       ; preds = %sw.bb.764
  br label %unknown

sw.default.771:                                   ; preds = %sw.bb.747
  br label %unknown

sw.default.772:                                   ; preds = %sw.bb.732
  br label %unknown

sw.bb.773:                                        ; preds = %sw.bb.358
  %265 = load i8*, i8** %name.addr, align 8
  %arrayidx774 = getelementptr inbounds i8, i8* %265, i64 1
  %266 = load i8, i8* %arrayidx774, align 1
  %conv775 = sext i8 %266 to i32
  switch i32 %conv775, label %sw.default.830 [
    i32 101, label %sw.bb.776
    i32 111, label %sw.bb.794
    i32 113, label %sw.bb.806
    i32 116, label %sw.bb.818
  ]

sw.bb.776:                                        ; preds = %sw.bb.773
  %267 = load i8*, i8** %name.addr, align 8
  %arrayidx777 = getelementptr inbounds i8, i8* %267, i64 2
  %268 = load i8, i8* %arrayidx777, align 1
  %conv778 = sext i8 %268 to i32
  switch i32 %conv778, label %sw.default.793 [
    i32 101, label %sw.bb.779
    i32 110, label %sw.bb.786
  ]

sw.bb.779:                                        ; preds = %sw.bb.776
  %269 = load i8*, i8** %name.addr, align 8
  %arrayidx780 = getelementptr inbounds i8, i8* %269, i64 3
  %270 = load i8, i8* %arrayidx780, align 1
  %conv781 = sext i8 %270 to i32
  %cmp782 = icmp eq i32 %conv781, 107
  br i1 %cmp782, label %if.then.784, label %if.end.785

if.then.784:                                      ; preds = %sw.bb.779
  store i32 -172, i32* %retval
  br label %return

if.end.785:                                       ; preds = %sw.bb.779
  br label %unknown

sw.bb.786:                                        ; preds = %sw.bb.776
  %271 = load i8*, i8** %name.addr, align 8
  %arrayidx787 = getelementptr inbounds i8, i8* %271, i64 3
  %272 = load i8, i8* %arrayidx787, align 1
  %conv788 = sext i8 %272 to i32
  %cmp789 = icmp eq i32 %conv788, 100
  br i1 %cmp789, label %if.then.791, label %if.end.792

if.then.791:                                      ; preds = %sw.bb.786
  store i32 -178, i32* %retval
  br label %return

if.end.792:                                       ; preds = %sw.bb.786
  br label %unknown

sw.default.793:                                   ; preds = %sw.bb.776
  br label %unknown

sw.bb.794:                                        ; preds = %sw.bb.773
  %273 = load i8*, i8** %name.addr, align 8
  %arrayidx795 = getelementptr inbounds i8, i8* %273, i64 2
  %274 = load i8, i8* %arrayidx795, align 1
  %conv796 = sext i8 %274 to i32
  %cmp797 = icmp eq i32 %conv796, 114
  br i1 %cmp797, label %land.lhs.true.799, label %if.end.805

land.lhs.true.799:                                ; preds = %sw.bb.794
  %275 = load i8*, i8** %name.addr, align 8
  %arrayidx800 = getelementptr inbounds i8, i8* %275, i64 3
  %276 = load i8, i8* %arrayidx800, align 1
  %conv801 = sext i8 %276 to i32
  %cmp802 = icmp eq i32 %conv801, 116
  br i1 %cmp802, label %if.then.804, label %if.end.805

if.then.804:                                      ; preds = %land.lhs.true.799
  store i32 198, i32* %retval
  br label %return

if.end.805:                                       ; preds = %land.lhs.true.799, %sw.bb.794
  br label %unknown

sw.bb.806:                                        ; preds = %sw.bb.773
  %277 = load i8*, i8** %name.addr, align 8
  %arrayidx807 = getelementptr inbounds i8, i8* %277, i64 2
  %278 = load i8, i8* %arrayidx807, align 1
  %conv808 = sext i8 %278 to i32
  %cmp809 = icmp eq i32 %conv808, 114
  br i1 %cmp809, label %land.lhs.true.811, label %if.end.817

land.lhs.true.811:                                ; preds = %sw.bb.806
  %279 = load i8*, i8** %name.addr, align 8
  %arrayidx812 = getelementptr inbounds i8, i8* %279, i64 3
  %280 = load i8, i8* %arrayidx812, align 1
  %conv813 = sext i8 %280 to i32
  %cmp814 = icmp eq i32 %conv813, 116
  br i1 %cmp814, label %if.then.816, label %if.end.817

if.then.816:                                      ; preds = %land.lhs.true.811
  store i32 -202, i32* %retval
  br label %return

if.end.817:                                       ; preds = %land.lhs.true.811, %sw.bb.806
  br label %unknown

sw.bb.818:                                        ; preds = %sw.bb.773
  %281 = load i8*, i8** %name.addr, align 8
  %arrayidx819 = getelementptr inbounds i8, i8* %281, i64 2
  %282 = load i8, i8* %arrayidx819, align 1
  %conv820 = sext i8 %282 to i32
  %cmp821 = icmp eq i32 %conv820, 97
  br i1 %cmp821, label %land.lhs.true.823, label %if.end.829

land.lhs.true.823:                                ; preds = %sw.bb.818
  %283 = load i8*, i8** %name.addr, align 8
  %arrayidx824 = getelementptr inbounds i8, i8* %283, i64 3
  %284 = load i8, i8* %arrayidx824, align 1
  %conv825 = sext i8 %284 to i32
  %cmp826 = icmp eq i32 %conv825, 116
  br i1 %cmp826, label %if.then.828, label %if.end.829

if.then.828:                                      ; preds = %land.lhs.true.823
  store i32 -204, i32* %retval
  br label %return

if.end.829:                                       ; preds = %land.lhs.true.823, %sw.bb.818
  br label %unknown

sw.default.830:                                   ; preds = %sw.bb.773
  br label %unknown

sw.bb.831:                                        ; preds = %sw.bb.358
  %285 = load i8*, i8** %name.addr, align 8
  %arrayidx832 = getelementptr inbounds i8, i8* %285, i64 1
  %286 = load i8, i8* %arrayidx832, align 1
  %conv833 = sext i8 %286 to i32
  switch i32 %conv833, label %sw.default.864 [
    i32 101, label %sw.bb.834
    i32 105, label %sw.bb.846
  ]

sw.bb.834:                                        ; preds = %sw.bb.831
  %287 = load i8*, i8** %name.addr, align 8
  %arrayidx835 = getelementptr inbounds i8, i8* %287, i64 2
  %288 = load i8, i8* %arrayidx835, align 1
  %conv836 = sext i8 %288 to i32
  %cmp837 = icmp eq i32 %conv836, 108
  br i1 %cmp837, label %land.lhs.true.839, label %if.end.845

land.lhs.true.839:                                ; preds = %sw.bb.834
  %289 = load i8*, i8** %name.addr, align 8
  %arrayidx840 = getelementptr inbounds i8, i8* %289, i64 3
  %290 = load i8, i8* %arrayidx840, align 1
  %conv841 = sext i8 %290 to i32
  %cmp842 = icmp eq i32 %conv841, 108
  br i1 %cmp842, label %if.then.844, label %if.end.845

if.then.844:                                      ; preds = %land.lhs.true.839
  store i32 -215, i32* %retval
  br label %return

if.end.845:                                       ; preds = %land.lhs.true.839, %sw.bb.834
  br label %unknown

sw.bb.846:                                        ; preds = %sw.bb.831
  %291 = load i8*, i8** %name.addr, align 8
  %arrayidx847 = getelementptr inbounds i8, i8* %291, i64 2
  %292 = load i8, i8* %arrayidx847, align 1
  %conv848 = sext i8 %292 to i32
  switch i32 %conv848, label %sw.default.863 [
    i32 101, label %sw.bb.849
    i32 109, label %sw.bb.856
  ]

sw.bb.849:                                        ; preds = %sw.bb.846
  %293 = load i8*, i8** %name.addr, align 8
  %arrayidx850 = getelementptr inbounds i8, i8* %293, i64 3
  %294 = load i8, i8* %arrayidx850, align 1
  %conv851 = sext i8 %294 to i32
  %cmp852 = icmp eq i32 %conv851, 100
  br i1 %cmp852, label %if.then.854, label %if.end.855

if.then.854:                                      ; preds = %sw.bb.849
  store i32 218, i32* %retval
  br label %return

if.end.855:                                       ; preds = %sw.bb.849
  br label %unknown

sw.bb.856:                                        ; preds = %sw.bb.846
  %295 = load i8*, i8** %name.addr, align 8
  %arrayidx857 = getelementptr inbounds i8, i8* %295, i64 3
  %296 = load i8, i8* %arrayidx857, align 1
  %conv858 = sext i8 %296 to i32
  %cmp859 = icmp eq i32 %conv858, 101
  br i1 %cmp859, label %if.then.861, label %if.end.862

if.then.861:                                      ; preds = %sw.bb.856
  store i32 -219, i32* %retval
  br label %return

if.end.862:                                       ; preds = %sw.bb.856
  br label %unknown

sw.default.863:                                   ; preds = %sw.bb.846
  br label %unknown

sw.default.864:                                   ; preds = %sw.bb.831
  br label %unknown

sw.bb.865:                                        ; preds = %sw.bb.358
  %297 = load i8*, i8** %name.addr, align 8
  %arrayidx866 = getelementptr inbounds i8, i8* %297, i64 1
  %298 = load i8, i8* %arrayidx866, align 1
  %conv867 = sext i8 %298 to i32
  %cmp868 = icmp eq i32 %conv867, 97
  br i1 %cmp868, label %if.then.870, label %if.end.888

if.then.870:                                      ; preds = %sw.bb.865
  %299 = load i8*, i8** %name.addr, align 8
  %arrayidx871 = getelementptr inbounds i8, i8* %299, i64 2
  %300 = load i8, i8* %arrayidx871, align 1
  %conv872 = sext i8 %300 to i32
  switch i32 %conv872, label %sw.default.887 [
    i32 105, label %sw.bb.873
    i32 114, label %sw.bb.880
  ]

sw.bb.873:                                        ; preds = %if.then.870
  %301 = load i8*, i8** %name.addr, align 8
  %arrayidx874 = getelementptr inbounds i8, i8* %301, i64 3
  %302 = load i8, i8* %arrayidx874, align 1
  %conv875 = sext i8 %302 to i32
  %cmp876 = icmp eq i32 %conv875, 116
  br i1 %cmp876, label %if.then.878, label %if.end.879

if.then.878:                                      ; preds = %sw.bb.873
  store i32 -237, i32* %retval
  br label %return

if.end.879:                                       ; preds = %sw.bb.873
  br label %unknown

sw.bb.880:                                        ; preds = %if.then.870
  %303 = load i8*, i8** %name.addr, align 8
  %arrayidx881 = getelementptr inbounds i8, i8* %303, i64 3
  %304 = load i8, i8* %arrayidx881, align 1
  %conv882 = sext i8 %304 to i32
  %cmp883 = icmp eq i32 %conv882, 110
  br i1 %cmp883, label %if.then.885, label %if.end.886

if.then.885:                                      ; preds = %sw.bb.880
  store i32 -240, i32* %retval
  br label %return

if.end.886:                                       ; preds = %sw.bb.880
  br label %unknown

sw.default.887:                                   ; preds = %if.then.870
  br label %unknown

if.end.888:                                       ; preds = %sw.bb.865
  br label %unknown

sw.default.889:                                   ; preds = %sw.bb.358
  br label %unknown

sw.bb.890:                                        ; preds = %entry
  %305 = load i8*, i8** %name.addr, align 8
  %arrayidx891 = getelementptr inbounds i8, i8* %305, i64 0
  %306 = load i8, i8* %arrayidx891, align 1
  %conv892 = sext i8 %306 to i32
  switch i32 %conv892, label %sw.default.1531 [
    i32 66, label %sw.bb.893
    i32 67, label %sw.bb.915
    i32 97, label %sw.bb.937
    i32 98, label %sw.bb.975
    i32 99, label %sw.bb.997
    i32 101, label %sw.bb.1081
    i32 102, label %sw.bb.1103
    i32 105, label %sw.bb.1141
    i32 108, label %sw.bb.1179
    i32 109, label %sw.bb.1217
    i32 112, label %sw.bb.1239
    i32 114, label %sw.bb.1261
    i32 115, label %sw.bb.1299
    i32 116, label %sw.bb.1405
    i32 117, label %sw.bb.1427
    i32 119, label %sw.bb.1493
  ]

sw.bb.893:                                        ; preds = %sw.bb.890
  %307 = load i8*, i8** %name.addr, align 8
  %arrayidx894 = getelementptr inbounds i8, i8* %307, i64 1
  %308 = load i8, i8* %arrayidx894, align 1
  %conv895 = sext i8 %308 to i32
  %cmp896 = icmp eq i32 %conv895, 69
  br i1 %cmp896, label %land.lhs.true.898, label %if.end.914

land.lhs.true.898:                                ; preds = %sw.bb.893
  %309 = load i8*, i8** %name.addr, align 8
  %arrayidx899 = getelementptr inbounds i8, i8* %309, i64 2
  %310 = load i8, i8* %arrayidx899, align 1
  %conv900 = sext i8 %310 to i32
  %cmp901 = icmp eq i32 %conv900, 71
  br i1 %cmp901, label %land.lhs.true.903, label %if.end.914

land.lhs.true.903:                                ; preds = %land.lhs.true.898
  %311 = load i8*, i8** %name.addr, align 8
  %arrayidx904 = getelementptr inbounds i8, i8* %311, i64 3
  %312 = load i8, i8* %arrayidx904, align 1
  %conv905 = sext i8 %312 to i32
  %cmp906 = icmp eq i32 %conv905, 73
  br i1 %cmp906, label %land.lhs.true.908, label %if.end.914

land.lhs.true.908:                                ; preds = %land.lhs.true.903
  %313 = load i8*, i8** %name.addr, align 8
  %arrayidx909 = getelementptr inbounds i8, i8* %313, i64 4
  %314 = load i8, i8* %arrayidx909, align 1
  %conv910 = sext i8 %314 to i32
  %cmp911 = icmp eq i32 %conv910, 78
  br i1 %cmp911, label %if.then.913, label %if.end.914

if.then.913:                                      ; preds = %land.lhs.true.908
  store i32 7, i32* %retval
  br label %return

if.end.914:                                       ; preds = %land.lhs.true.908, %land.lhs.true.903, %land.lhs.true.898, %sw.bb.893
  br label %unknown

sw.bb.915:                                        ; preds = %sw.bb.890
  %315 = load i8*, i8** %name.addr, align 8
  %arrayidx916 = getelementptr inbounds i8, i8* %315, i64 1
  %316 = load i8, i8* %arrayidx916, align 1
  %conv917 = sext i8 %316 to i32
  %cmp918 = icmp eq i32 %conv917, 72
  br i1 %cmp918, label %land.lhs.true.920, label %if.end.936

land.lhs.true.920:                                ; preds = %sw.bb.915
  %317 = load i8*, i8** %name.addr, align 8
  %arrayidx921 = getelementptr inbounds i8, i8* %317, i64 2
  %318 = load i8, i8* %arrayidx921, align 1
  %conv922 = sext i8 %318 to i32
  %cmp923 = icmp eq i32 %conv922, 69
  br i1 %cmp923, label %land.lhs.true.925, label %if.end.936

land.lhs.true.925:                                ; preds = %land.lhs.true.920
  %319 = load i8*, i8** %name.addr, align 8
  %arrayidx926 = getelementptr inbounds i8, i8* %319, i64 3
  %320 = load i8, i8* %arrayidx926, align 1
  %conv927 = sext i8 %320 to i32
  %cmp928 = icmp eq i32 %conv927, 67
  br i1 %cmp928, label %land.lhs.true.930, label %if.end.936

land.lhs.true.930:                                ; preds = %land.lhs.true.925
  %321 = load i8*, i8** %name.addr, align 8
  %arrayidx931 = getelementptr inbounds i8, i8* %321, i64 4
  %322 = load i8, i8* %arrayidx931, align 1
  %conv932 = sext i8 %322 to i32
  %cmp933 = icmp eq i32 %conv932, 75
  br i1 %cmp933, label %if.then.935, label %if.end.936

if.then.935:                                      ; preds = %land.lhs.true.930
  store i32 12, i32* %retval
  br label %return

if.end.936:                                       ; preds = %land.lhs.true.930, %land.lhs.true.925, %land.lhs.true.920, %sw.bb.915
  br label %unknown

sw.bb.937:                                        ; preds = %sw.bb.890
  %323 = load i8*, i8** %name.addr, align 8
  %arrayidx938 = getelementptr inbounds i8, i8* %323, i64 1
  %324 = load i8, i8* %arrayidx938, align 1
  %conv939 = sext i8 %324 to i32
  switch i32 %conv939, label %sw.default.974 [
    i32 108, label %sw.bb.940
    i32 116, label %sw.bb.957
  ]

sw.bb.940:                                        ; preds = %sw.bb.937
  %325 = load i8*, i8** %name.addr, align 8
  %arrayidx941 = getelementptr inbounds i8, i8* %325, i64 2
  %326 = load i8, i8* %arrayidx941, align 1
  %conv942 = sext i8 %326 to i32
  %cmp943 = icmp eq i32 %conv942, 97
  br i1 %cmp943, label %land.lhs.true.945, label %if.end.956

land.lhs.true.945:                                ; preds = %sw.bb.940
  %327 = load i8*, i8** %name.addr, align 8
  %arrayidx946 = getelementptr inbounds i8, i8* %327, i64 3
  %328 = load i8, i8* %arrayidx946, align 1
  %conv947 = sext i8 %328 to i32
  %cmp948 = icmp eq i32 %conv947, 114
  br i1 %cmp948, label %land.lhs.true.950, label %if.end.956

land.lhs.true.950:                                ; preds = %land.lhs.true.945
  %329 = load i8*, i8** %name.addr, align 8
  %arrayidx951 = getelementptr inbounds i8, i8* %329, i64 4
  %330 = load i8, i8* %arrayidx951, align 1
  %conv952 = sext i8 %330 to i32
  %cmp953 = icmp eq i32 %conv952, 109
  br i1 %cmp953, label %if.then.955, label %if.end.956

if.then.955:                                      ; preds = %land.lhs.true.950
  store i32 -15, i32* %retval
  br label %return

if.end.956:                                       ; preds = %land.lhs.true.950, %land.lhs.true.945, %sw.bb.940
  br label %unknown

sw.bb.957:                                        ; preds = %sw.bb.937
  %331 = load i8*, i8** %name.addr, align 8
  %arrayidx958 = getelementptr inbounds i8, i8* %331, i64 2
  %332 = load i8, i8* %arrayidx958, align 1
  %conv959 = sext i8 %332 to i32
  %cmp960 = icmp eq i32 %conv959, 97
  br i1 %cmp960, label %land.lhs.true.962, label %if.end.973

land.lhs.true.962:                                ; preds = %sw.bb.957
  %333 = load i8*, i8** %name.addr, align 8
  %arrayidx963 = getelementptr inbounds i8, i8* %333, i64 3
  %334 = load i8, i8* %arrayidx963, align 1
  %conv964 = sext i8 %334 to i32
  %cmp965 = icmp eq i32 %conv964, 110
  br i1 %cmp965, label %land.lhs.true.967, label %if.end.973

land.lhs.true.967:                                ; preds = %land.lhs.true.962
  %335 = load i8*, i8** %name.addr, align 8
  %arrayidx968 = getelementptr inbounds i8, i8* %335, i64 4
  %336 = load i8, i8* %arrayidx968, align 1
  %conv969 = sext i8 %336 to i32
  %cmp970 = icmp eq i32 %conv969, 50
  br i1 %cmp970, label %if.then.972, label %if.end.973

if.then.972:                                      ; preds = %land.lhs.true.967
  store i32 -17, i32* %retval
  br label %return

if.end.973:                                       ; preds = %land.lhs.true.967, %land.lhs.true.962, %sw.bb.957
  br label %unknown

sw.default.974:                                   ; preds = %sw.bb.937
  br label %unknown

sw.bb.975:                                        ; preds = %sw.bb.890
  %337 = load i8*, i8** %name.addr, align 8
  %arrayidx976 = getelementptr inbounds i8, i8* %337, i64 1
  %338 = load i8, i8* %arrayidx976, align 1
  %conv977 = sext i8 %338 to i32
  %cmp978 = icmp eq i32 %conv977, 108
  br i1 %cmp978, label %land.lhs.true.980, label %if.end.996

land.lhs.true.980:                                ; preds = %sw.bb.975
  %339 = load i8*, i8** %name.addr, align 8
  %arrayidx981 = getelementptr inbounds i8, i8* %339, i64 2
  %340 = load i8, i8* %arrayidx981, align 1
  %conv982 = sext i8 %340 to i32
  %cmp983 = icmp eq i32 %conv982, 101
  br i1 %cmp983, label %land.lhs.true.985, label %if.end.996

land.lhs.true.985:                                ; preds = %land.lhs.true.980
  %341 = load i8*, i8** %name.addr, align 8
  %arrayidx986 = getelementptr inbounds i8, i8* %341, i64 3
  %342 = load i8, i8* %arrayidx986, align 1
  %conv987 = sext i8 %342 to i32
  %cmp988 = icmp eq i32 %conv987, 115
  br i1 %cmp988, label %land.lhs.true.990, label %if.end.996

land.lhs.true.990:                                ; preds = %land.lhs.true.985
  %343 = load i8*, i8** %name.addr, align 8
  %arrayidx991 = getelementptr inbounds i8, i8* %343, i64 4
  %344 = load i8, i8* %arrayidx991, align 1
  %conv992 = sext i8 %344 to i32
  %cmp993 = icmp eq i32 %conv992, 115
  br i1 %cmp993, label %if.then.995, label %if.end.996

if.then.995:                                      ; preds = %land.lhs.true.990
  store i32 -20, i32* %retval
  br label %return

if.end.996:                                       ; preds = %land.lhs.true.990, %land.lhs.true.985, %land.lhs.true.980, %sw.bb.975
  br label %unknown

sw.bb.997:                                        ; preds = %sw.bb.890
  %345 = load i8*, i8** %name.addr, align 8
  %arrayidx998 = getelementptr inbounds i8, i8* %345, i64 1
  %346 = load i8, i8* %arrayidx998, align 1
  %conv999 = sext i8 %346 to i32
  switch i32 %conv999, label %sw.default.1080 [
    i32 104, label %sw.bb.1000
    i32 108, label %sw.bb.1046
    i32 114, label %sw.bb.1063
  ]

sw.bb.1000:                                       ; preds = %sw.bb.997
  %347 = load i8*, i8** %name.addr, align 8
  %arrayidx1001 = getelementptr inbounds i8, i8* %347, i64 2
  %348 = load i8, i8* %arrayidx1001, align 1
  %conv1002 = sext i8 %348 to i32
  switch i32 %conv1002, label %sw.default.1045 [
    i32 100, label %sw.bb.1003
    i32 109, label %sw.bb.1015
    i32 111, label %sw.bb.1027
  ]

sw.bb.1003:                                       ; preds = %sw.bb.1000
  %349 = load i8*, i8** %name.addr, align 8
  %arrayidx1004 = getelementptr inbounds i8, i8* %349, i64 3
  %350 = load i8, i8* %arrayidx1004, align 1
  %conv1005 = sext i8 %350 to i32
  %cmp1006 = icmp eq i32 %conv1005, 105
  br i1 %cmp1006, label %land.lhs.true.1008, label %if.end.1014

land.lhs.true.1008:                               ; preds = %sw.bb.1003
  %351 = load i8*, i8** %name.addr, align 8
  %arrayidx1009 = getelementptr inbounds i8, i8* %351, i64 4
  %352 = load i8, i8* %arrayidx1009, align 1
  %conv1010 = sext i8 %352 to i32
  %cmp1011 = icmp eq i32 %conv1010, 114
  br i1 %cmp1011, label %if.then.1013, label %if.end.1014

if.then.1013:                                     ; preds = %land.lhs.true.1008
  store i32 -22, i32* %retval
  br label %return

if.end.1014:                                      ; preds = %land.lhs.true.1008, %sw.bb.1003
  br label %unknown

sw.bb.1015:                                       ; preds = %sw.bb.1000
  %353 = load i8*, i8** %name.addr, align 8
  %arrayidx1016 = getelementptr inbounds i8, i8* %353, i64 3
  %354 = load i8, i8* %arrayidx1016, align 1
  %conv1017 = sext i8 %354 to i32
  %cmp1018 = icmp eq i32 %conv1017, 111
  br i1 %cmp1018, label %land.lhs.true.1020, label %if.end.1026

land.lhs.true.1020:                               ; preds = %sw.bb.1015
  %355 = load i8*, i8** %name.addr, align 8
  %arrayidx1021 = getelementptr inbounds i8, i8* %355, i64 4
  %356 = load i8, i8* %arrayidx1021, align 1
  %conv1022 = sext i8 %356 to i32
  %cmp1023 = icmp eq i32 %conv1022, 100
  br i1 %cmp1023, label %if.then.1025, label %if.end.1026

if.then.1025:                                     ; preds = %land.lhs.true.1020
  store i32 -23, i32* %retval
  br label %return

if.end.1026:                                      ; preds = %land.lhs.true.1020, %sw.bb.1015
  br label %unknown

sw.bb.1027:                                       ; preds = %sw.bb.1000
  %357 = load i8*, i8** %name.addr, align 8
  %arrayidx1028 = getelementptr inbounds i8, i8* %357, i64 3
  %358 = load i8, i8* %arrayidx1028, align 1
  %conv1029 = sext i8 %358 to i32
  switch i32 %conv1029, label %sw.default.1044 [
    i32 109, label %sw.bb.1030
    i32 119, label %sw.bb.1037
  ]

sw.bb.1030:                                       ; preds = %sw.bb.1027
  %359 = load i8*, i8** %name.addr, align 8
  %arrayidx1031 = getelementptr inbounds i8, i8* %359, i64 4
  %360 = load i8, i8* %arrayidx1031, align 1
  %conv1032 = sext i8 %360 to i32
  %cmp1033 = icmp eq i32 %conv1032, 112
  br i1 %cmp1033, label %if.then.1035, label %if.end.1036

if.then.1035:                                     ; preds = %sw.bb.1030
  store i32 -24, i32* %retval
  br label %return

if.end.1036:                                      ; preds = %sw.bb.1030
  br label %unknown

sw.bb.1037:                                       ; preds = %sw.bb.1027
  %361 = load i8*, i8** %name.addr, align 8
  %arrayidx1038 = getelementptr inbounds i8, i8* %361, i64 4
  %362 = load i8, i8* %arrayidx1038, align 1
  %conv1039 = sext i8 %362 to i32
  %cmp1040 = icmp eq i32 %conv1039, 110
  br i1 %cmp1040, label %if.then.1042, label %if.end.1043

if.then.1042:                                     ; preds = %sw.bb.1037
  store i32 -26, i32* %retval
  br label %return

if.end.1043:                                      ; preds = %sw.bb.1037
  br label %unknown

sw.default.1044:                                  ; preds = %sw.bb.1027
  br label %unknown

sw.default.1045:                                  ; preds = %sw.bb.1000
  br label %unknown

sw.bb.1046:                                       ; preds = %sw.bb.997
  %363 = load i8*, i8** %name.addr, align 8
  %arrayidx1047 = getelementptr inbounds i8, i8* %363, i64 2
  %364 = load i8, i8* %arrayidx1047, align 1
  %conv1048 = sext i8 %364 to i32
  %cmp1049 = icmp eq i32 %conv1048, 111
  br i1 %cmp1049, label %land.lhs.true.1051, label %if.end.1062

land.lhs.true.1051:                               ; preds = %sw.bb.1046
  %365 = load i8*, i8** %name.addr, align 8
  %arrayidx1052 = getelementptr inbounds i8, i8* %365, i64 3
  %366 = load i8, i8* %arrayidx1052, align 1
  %conv1053 = sext i8 %366 to i32
  %cmp1054 = icmp eq i32 %conv1053, 115
  br i1 %cmp1054, label %land.lhs.true.1056, label %if.end.1062

land.lhs.true.1056:                               ; preds = %land.lhs.true.1051
  %367 = load i8*, i8** %name.addr, align 8
  %arrayidx1057 = getelementptr inbounds i8, i8* %367, i64 4
  %368 = load i8, i8* %arrayidx1057, align 1
  %conv1058 = sext i8 %368 to i32
  %cmp1059 = icmp eq i32 %conv1058, 101
  br i1 %cmp1059, label %if.then.1061, label %if.end.1062

if.then.1061:                                     ; preds = %land.lhs.true.1056
  store i32 -29, i32* %retval
  br label %return

if.end.1062:                                      ; preds = %land.lhs.true.1056, %land.lhs.true.1051, %sw.bb.1046
  br label %unknown

sw.bb.1063:                                       ; preds = %sw.bb.997
  %369 = load i8*, i8** %name.addr, align 8
  %arrayidx1064 = getelementptr inbounds i8, i8* %369, i64 2
  %370 = load i8, i8* %arrayidx1064, align 1
  %conv1065 = sext i8 %370 to i32
  %cmp1066 = icmp eq i32 %conv1065, 121
  br i1 %cmp1066, label %land.lhs.true.1068, label %if.end.1079

land.lhs.true.1068:                               ; preds = %sw.bb.1063
  %371 = load i8*, i8** %name.addr, align 8
  %arrayidx1069 = getelementptr inbounds i8, i8* %371, i64 3
  %372 = load i8, i8* %arrayidx1069, align 1
  %conv1070 = sext i8 %372 to i32
  %cmp1071 = icmp eq i32 %conv1070, 112
  br i1 %cmp1071, label %land.lhs.true.1073, label %if.end.1079

land.lhs.true.1073:                               ; preds = %land.lhs.true.1068
  %373 = load i8*, i8** %name.addr, align 8
  %arrayidx1074 = getelementptr inbounds i8, i8* %373, i64 4
  %374 = load i8, i8* %arrayidx1074, align 1
  %conv1075 = sext i8 %374 to i32
  %cmp1076 = icmp eq i32 %conv1075, 116
  br i1 %cmp1076, label %if.then.1078, label %if.end.1079

if.then.1078:                                     ; preds = %land.lhs.true.1073
  store i32 -35, i32* %retval
  br label %return

if.end.1079:                                      ; preds = %land.lhs.true.1073, %land.lhs.true.1068, %sw.bb.1063
  br label %unknown

sw.default.1080:                                  ; preds = %sw.bb.997
  br label %unknown

sw.bb.1081:                                       ; preds = %sw.bb.890
  %375 = load i8*, i8** %name.addr, align 8
  %arrayidx1082 = getelementptr inbounds i8, i8* %375, i64 1
  %376 = load i8, i8* %arrayidx1082, align 1
  %conv1083 = sext i8 %376 to i32
  %cmp1084 = icmp eq i32 %conv1083, 108
  br i1 %cmp1084, label %land.lhs.true.1086, label %if.end.1102

land.lhs.true.1086:                               ; preds = %sw.bb.1081
  %377 = load i8*, i8** %name.addr, align 8
  %arrayidx1087 = getelementptr inbounds i8, i8* %377, i64 2
  %378 = load i8, i8* %arrayidx1087, align 1
  %conv1088 = sext i8 %378 to i32
  %cmp1089 = icmp eq i32 %conv1088, 115
  br i1 %cmp1089, label %land.lhs.true.1091, label %if.end.1102

land.lhs.true.1091:                               ; preds = %land.lhs.true.1086
  %379 = load i8*, i8** %name.addr, align 8
  %arrayidx1092 = getelementptr inbounds i8, i8* %379, i64 3
  %380 = load i8, i8* %arrayidx1092, align 1
  %conv1093 = sext i8 %380 to i32
  %cmp1094 = icmp eq i32 %conv1093, 105
  br i1 %cmp1094, label %land.lhs.true.1096, label %if.end.1102

land.lhs.true.1096:                               ; preds = %land.lhs.true.1091
  %381 = load i8*, i8** %name.addr, align 8
  %arrayidx1097 = getelementptr inbounds i8, i8* %381, i64 4
  %382 = load i8, i8* %arrayidx1097, align 1
  %conv1098 = sext i8 %382 to i32
  %cmp1099 = icmp eq i32 %conv1098, 102
  br i1 %cmp1099, label %if.then.1101, label %if.end.1102

if.then.1101:                                     ; preds = %land.lhs.true.1096
  store i32 45, i32* %retval
  br label %return

if.end.1102:                                      ; preds = %land.lhs.true.1096, %land.lhs.true.1091, %land.lhs.true.1086, %sw.bb.1081
  br label %unknown

sw.bb.1103:                                       ; preds = %sw.bb.890
  %383 = load i8*, i8** %name.addr, align 8
  %arrayidx1104 = getelementptr inbounds i8, i8* %383, i64 1
  %384 = load i8, i8* %arrayidx1104, align 1
  %conv1105 = sext i8 %384 to i32
  switch i32 %conv1105, label %sw.default.1140 [
    i32 99, label %sw.bb.1106
    i32 108, label %sw.bb.1123
  ]

sw.bb.1106:                                       ; preds = %sw.bb.1103
  %385 = load i8*, i8** %name.addr, align 8
  %arrayidx1107 = getelementptr inbounds i8, i8* %385, i64 2
  %386 = load i8, i8* %arrayidx1107, align 1
  %conv1108 = sext i8 %386 to i32
  %cmp1109 = icmp eq i32 %conv1108, 110
  br i1 %cmp1109, label %land.lhs.true.1111, label %if.end.1122

land.lhs.true.1111:                               ; preds = %sw.bb.1106
  %387 = load i8*, i8** %name.addr, align 8
  %arrayidx1112 = getelementptr inbounds i8, i8* %387, i64 3
  %388 = load i8, i8* %arrayidx1112, align 1
  %conv1113 = sext i8 %388 to i32
  %cmp1114 = icmp eq i32 %conv1113, 116
  br i1 %cmp1114, label %land.lhs.true.1116, label %if.end.1122

land.lhs.true.1116:                               ; preds = %land.lhs.true.1111
  %389 = load i8*, i8** %name.addr, align 8
  %arrayidx1117 = getelementptr inbounds i8, i8* %389, i64 4
  %390 = load i8, i8* %arrayidx1117, align 1
  %conv1118 = sext i8 %390 to i32
  %cmp1119 = icmp eq i32 %conv1118, 108
  br i1 %cmp1119, label %if.then.1121, label %if.end.1122

if.then.1121:                                     ; preds = %land.lhs.true.1116
  store i32 -59, i32* %retval
  br label %return

if.end.1122:                                      ; preds = %land.lhs.true.1116, %land.lhs.true.1111, %sw.bb.1106
  br label %unknown

sw.bb.1123:                                       ; preds = %sw.bb.1103
  %391 = load i8*, i8** %name.addr, align 8
  %arrayidx1124 = getelementptr inbounds i8, i8* %391, i64 2
  %392 = load i8, i8* %arrayidx1124, align 1
  %conv1125 = sext i8 %392 to i32
  %cmp1126 = icmp eq i32 %conv1125, 111
  br i1 %cmp1126, label %land.lhs.true.1128, label %if.end.1139

land.lhs.true.1128:                               ; preds = %sw.bb.1123
  %393 = load i8*, i8** %name.addr, align 8
  %arrayidx1129 = getelementptr inbounds i8, i8* %393, i64 3
  %394 = load i8, i8* %arrayidx1129, align 1
  %conv1130 = sext i8 %394 to i32
  %cmp1131 = icmp eq i32 %conv1130, 99
  br i1 %cmp1131, label %land.lhs.true.1133, label %if.end.1139

land.lhs.true.1133:                               ; preds = %land.lhs.true.1128
  %395 = load i8*, i8** %name.addr, align 8
  %arrayidx1134 = getelementptr inbounds i8, i8* %395, i64 4
  %396 = load i8, i8* %arrayidx1134, align 1
  %conv1135 = sext i8 %396 to i32
  %cmp1136 = icmp eq i32 %conv1135, 107
  br i1 %cmp1136, label %if.then.1138, label %if.end.1139

if.then.1138:                                     ; preds = %land.lhs.true.1133
  store i32 -61, i32* %retval
  br label %return

if.end.1139:                                      ; preds = %land.lhs.true.1133, %land.lhs.true.1128, %sw.bb.1123
  br label %unknown

sw.default.1140:                                  ; preds = %sw.bb.1103
  br label %unknown

sw.bb.1141:                                       ; preds = %sw.bb.890
  %397 = load i8*, i8** %name.addr, align 8
  %arrayidx1142 = getelementptr inbounds i8, i8* %397, i64 1
  %398 = load i8, i8* %arrayidx1142, align 1
  %conv1143 = sext i8 %398 to i32
  switch i32 %conv1143, label %sw.default.1178 [
    i32 110, label %sw.bb.1144
    i32 111, label %sw.bb.1161
  ]

sw.bb.1144:                                       ; preds = %sw.bb.1141
  %399 = load i8*, i8** %name.addr, align 8
  %arrayidx1145 = getelementptr inbounds i8, i8* %399, i64 2
  %400 = load i8, i8* %arrayidx1145, align 1
  %conv1146 = sext i8 %400 to i32
  %cmp1147 = icmp eq i32 %conv1146, 100
  br i1 %cmp1147, label %land.lhs.true.1149, label %if.end.1160

land.lhs.true.1149:                               ; preds = %sw.bb.1144
  %401 = load i8*, i8** %name.addr, align 8
  %arrayidx1150 = getelementptr inbounds i8, i8* %401, i64 3
  %402 = load i8, i8* %arrayidx1150, align 1
  %conv1151 = sext i8 %402 to i32
  %cmp1152 = icmp eq i32 %conv1151, 101
  br i1 %cmp1152, label %land.lhs.true.1154, label %if.end.1160

land.lhs.true.1154:                               ; preds = %land.lhs.true.1149
  %403 = load i8*, i8** %name.addr, align 8
  %arrayidx1155 = getelementptr inbounds i8, i8* %403, i64 4
  %404 = load i8, i8* %arrayidx1155, align 1
  %conv1156 = sext i8 %404 to i32
  %cmp1157 = icmp eq i32 %conv1156, 120
  br i1 %cmp1157, label %if.then.1159, label %if.end.1160

if.then.1159:                                     ; preds = %land.lhs.true.1154
  store i32 -101, i32* %retval
  br label %return

if.end.1160:                                      ; preds = %land.lhs.true.1154, %land.lhs.true.1149, %sw.bb.1144
  br label %unknown

sw.bb.1161:                                       ; preds = %sw.bb.1141
  %405 = load i8*, i8** %name.addr, align 8
  %arrayidx1162 = getelementptr inbounds i8, i8* %405, i64 2
  %406 = load i8, i8* %arrayidx1162, align 1
  %conv1163 = sext i8 %406 to i32
  %cmp1164 = icmp eq i32 %conv1163, 99
  br i1 %cmp1164, label %land.lhs.true.1166, label %if.end.1177

land.lhs.true.1166:                               ; preds = %sw.bb.1161
  %407 = load i8*, i8** %name.addr, align 8
  %arrayidx1167 = getelementptr inbounds i8, i8* %407, i64 3
  %408 = load i8, i8* %arrayidx1167, align 1
  %conv1168 = sext i8 %408 to i32
  %cmp1169 = icmp eq i32 %conv1168, 116
  br i1 %cmp1169, label %land.lhs.true.1171, label %if.end.1177

land.lhs.true.1171:                               ; preds = %land.lhs.true.1166
  %409 = load i8*, i8** %name.addr, align 8
  %arrayidx1172 = getelementptr inbounds i8, i8* %409, i64 4
  %410 = load i8, i8* %arrayidx1172, align 1
  %conv1173 = sext i8 %410 to i32
  %cmp1174 = icmp eq i32 %conv1173, 108
  br i1 %cmp1174, label %if.then.1176, label %if.end.1177

if.then.1176:                                     ; preds = %land.lhs.true.1171
  store i32 -103, i32* %retval
  br label %return

if.end.1177:                                      ; preds = %land.lhs.true.1171, %land.lhs.true.1166, %sw.bb.1161
  br label %unknown

sw.default.1178:                                  ; preds = %sw.bb.1141
  br label %unknown

sw.bb.1179:                                       ; preds = %sw.bb.890
  %411 = load i8*, i8** %name.addr, align 8
  %arrayidx1180 = getelementptr inbounds i8, i8* %411, i64 1
  %412 = load i8, i8* %arrayidx1180, align 1
  %conv1181 = sext i8 %412 to i32
  switch i32 %conv1181, label %sw.default.1216 [
    i32 111, label %sw.bb.1182
    i32 115, label %sw.bb.1199
  ]

sw.bb.1182:                                       ; preds = %sw.bb.1179
  %413 = load i8*, i8** %name.addr, align 8
  %arrayidx1183 = getelementptr inbounds i8, i8* %413, i64 2
  %414 = load i8, i8* %arrayidx1183, align 1
  %conv1184 = sext i8 %414 to i32
  %cmp1185 = icmp eq i32 %conv1184, 99
  br i1 %cmp1185, label %land.lhs.true.1187, label %if.end.1198

land.lhs.true.1187:                               ; preds = %sw.bb.1182
  %415 = load i8*, i8** %name.addr, align 8
  %arrayidx1188 = getelementptr inbounds i8, i8* %415, i64 3
  %416 = load i8, i8* %arrayidx1188, align 1
  %conv1189 = sext i8 %416 to i32
  %cmp1190 = icmp eq i32 %conv1189, 97
  br i1 %cmp1190, label %land.lhs.true.1192, label %if.end.1198

land.lhs.true.1192:                               ; preds = %land.lhs.true.1187
  %417 = load i8*, i8** %name.addr, align 8
  %arrayidx1193 = getelementptr inbounds i8, i8* %417, i64 4
  %418 = load i8, i8* %arrayidx1193, align 1
  %conv1194 = sext i8 %418 to i32
  %cmp1195 = icmp eq i32 %conv1194, 108
  br i1 %cmp1195, label %if.then.1197, label %if.end.1198

if.then.1197:                                     ; preds = %land.lhs.true.1192
  store i32 114, i32* %retval
  br label %return

if.end.1198:                                      ; preds = %land.lhs.true.1192, %land.lhs.true.1187, %sw.bb.1182
  br label %unknown

sw.bb.1199:                                       ; preds = %sw.bb.1179
  %419 = load i8*, i8** %name.addr, align 8
  %arrayidx1200 = getelementptr inbounds i8, i8* %419, i64 2
  %420 = load i8, i8* %arrayidx1200, align 1
  %conv1201 = sext i8 %420 to i32
  %cmp1202 = icmp eq i32 %conv1201, 116
  br i1 %cmp1202, label %land.lhs.true.1204, label %if.end.1215

land.lhs.true.1204:                               ; preds = %sw.bb.1199
  %421 = load i8*, i8** %name.addr, align 8
  %arrayidx1205 = getelementptr inbounds i8, i8* %421, i64 3
  %422 = load i8, i8* %arrayidx1205, align 1
  %conv1206 = sext i8 %422 to i32
  %cmp1207 = icmp eq i32 %conv1206, 97
  br i1 %cmp1207, label %land.lhs.true.1209, label %if.end.1215

land.lhs.true.1209:                               ; preds = %land.lhs.true.1204
  %423 = load i8*, i8** %name.addr, align 8
  %arrayidx1210 = getelementptr inbounds i8, i8* %423, i64 4
  %424 = load i8, i8* %arrayidx1210, align 1
  %conv1211 = sext i8 %424 to i32
  %cmp1212 = icmp eq i32 %conv1211, 116
  br i1 %cmp1212, label %if.then.1214, label %if.end.1215

if.then.1214:                                     ; preds = %land.lhs.true.1209
  store i32 -118, i32* %retval
  br label %return

if.end.1215:                                      ; preds = %land.lhs.true.1209, %land.lhs.true.1204, %sw.bb.1199
  br label %unknown

sw.default.1216:                                  ; preds = %sw.bb.1179
  br label %unknown

sw.bb.1217:                                       ; preds = %sw.bb.890
  %425 = load i8*, i8** %name.addr, align 8
  %arrayidx1218 = getelementptr inbounds i8, i8* %425, i64 1
  %426 = load i8, i8* %arrayidx1218, align 1
  %conv1219 = sext i8 %426 to i32
  %cmp1220 = icmp eq i32 %conv1219, 107
  br i1 %cmp1220, label %land.lhs.true.1222, label %if.end.1238

land.lhs.true.1222:                               ; preds = %sw.bb.1217
  %427 = load i8*, i8** %name.addr, align 8
  %arrayidx1223 = getelementptr inbounds i8, i8* %427, i64 2
  %428 = load i8, i8* %arrayidx1223, align 1
  %conv1224 = sext i8 %428 to i32
  %cmp1225 = icmp eq i32 %conv1224, 100
  br i1 %cmp1225, label %land.lhs.true.1227, label %if.end.1238

land.lhs.true.1227:                               ; preds = %land.lhs.true.1222
  %429 = load i8*, i8** %name.addr, align 8
  %arrayidx1228 = getelementptr inbounds i8, i8* %429, i64 3
  %430 = load i8, i8* %arrayidx1228, align 1
  %conv1229 = sext i8 %430 to i32
  %cmp1230 = icmp eq i32 %conv1229, 105
  br i1 %cmp1230, label %land.lhs.true.1232, label %if.end.1238

land.lhs.true.1232:                               ; preds = %land.lhs.true.1227
  %431 = load i8*, i8** %name.addr, align 8
  %arrayidx1233 = getelementptr inbounds i8, i8* %431, i64 4
  %432 = load i8, i8* %arrayidx1233, align 1
  %conv1234 = sext i8 %432 to i32
  %cmp1235 = icmp eq i32 %conv1234, 114
  br i1 %cmp1235, label %if.then.1237, label %if.end.1238

if.then.1237:                                     ; preds = %land.lhs.true.1232
  store i32 -122, i32* %retval
  br label %return

if.end.1238:                                      ; preds = %land.lhs.true.1232, %land.lhs.true.1227, %land.lhs.true.1222, %sw.bb.1217
  br label %unknown

sw.bb.1239:                                       ; preds = %sw.bb.890
  %433 = load i8*, i8** %name.addr, align 8
  %arrayidx1240 = getelementptr inbounds i8, i8* %433, i64 1
  %434 = load i8, i8* %arrayidx1240, align 1
  %conv1241 = sext i8 %434 to i32
  %cmp1242 = icmp eq i32 %conv1241, 114
  br i1 %cmp1242, label %land.lhs.true.1244, label %if.end.1260

land.lhs.true.1244:                               ; preds = %sw.bb.1239
  %435 = load i8*, i8** %name.addr, align 8
  %arrayidx1245 = getelementptr inbounds i8, i8* %435, i64 2
  %436 = load i8, i8* %arrayidx1245, align 1
  %conv1246 = sext i8 %436 to i32
  %cmp1247 = icmp eq i32 %conv1246, 105
  br i1 %cmp1247, label %land.lhs.true.1249, label %if.end.1260

land.lhs.true.1249:                               ; preds = %land.lhs.true.1244
  %437 = load i8*, i8** %name.addr, align 8
  %arrayidx1250 = getelementptr inbounds i8, i8* %437, i64 3
  %438 = load i8, i8* %arrayidx1250, align 1
  %conv1251 = sext i8 %438 to i32
  %cmp1252 = icmp eq i32 %conv1251, 110
  br i1 %cmp1252, label %land.lhs.true.1254, label %if.end.1260

land.lhs.true.1254:                               ; preds = %land.lhs.true.1249
  %439 = load i8*, i8** %name.addr, align 8
  %arrayidx1255 = getelementptr inbounds i8, i8* %439, i64 4
  %440 = load i8, i8* %arrayidx1255, align 1
  %conv1256 = sext i8 %440 to i32
  %cmp1257 = icmp eq i32 %conv1256, 116
  br i1 %cmp1257, label %if.then.1259, label %if.end.1260

if.then.1259:                                     ; preds = %land.lhs.true.1254
  store i32 143, i32* %retval
  br label %return

if.end.1260:                                      ; preds = %land.lhs.true.1254, %land.lhs.true.1249, %land.lhs.true.1244, %sw.bb.1239
  br label %unknown

sw.bb.1261:                                       ; preds = %sw.bb.890
  %441 = load i8*, i8** %name.addr, align 8
  %arrayidx1262 = getelementptr inbounds i8, i8* %441, i64 1
  %442 = load i8, i8* %arrayidx1262, align 1
  %conv1263 = sext i8 %442 to i32
  switch i32 %conv1263, label %sw.default.1298 [
    i32 101, label %sw.bb.1264
    i32 109, label %sw.bb.1281
  ]

sw.bb.1264:                                       ; preds = %sw.bb.1261
  %443 = load i8*, i8** %name.addr, align 8
  %arrayidx1265 = getelementptr inbounds i8, i8* %443, i64 2
  %444 = load i8, i8* %arrayidx1265, align 1
  %conv1266 = sext i8 %444 to i32
  %cmp1267 = icmp eq i32 %conv1266, 115
  br i1 %cmp1267, label %land.lhs.true.1269, label %if.end.1280

land.lhs.true.1269:                               ; preds = %sw.bb.1264
  %445 = load i8*, i8** %name.addr, align 8
  %arrayidx1270 = getelementptr inbounds i8, i8* %445, i64 3
  %446 = load i8, i8* %arrayidx1270, align 1
  %conv1271 = sext i8 %446 to i32
  %cmp1272 = icmp eq i32 %conv1271, 101
  br i1 %cmp1272, label %land.lhs.true.1274, label %if.end.1280

land.lhs.true.1274:                               ; preds = %land.lhs.true.1269
  %447 = load i8*, i8** %name.addr, align 8
  %arrayidx1275 = getelementptr inbounds i8, i8* %447, i64 4
  %448 = load i8, i8* %arrayidx1275, align 1
  %conv1276 = sext i8 %448 to i32
  %cmp1277 = icmp eq i32 %conv1276, 116
  br i1 %cmp1277, label %if.then.1279, label %if.end.1280

if.then.1279:                                     ; preds = %land.lhs.true.1274
  store i32 -164, i32* %retval
  br label %return

if.end.1280:                                      ; preds = %land.lhs.true.1274, %land.lhs.true.1269, %sw.bb.1264
  br label %unknown

sw.bb.1281:                                       ; preds = %sw.bb.1261
  %449 = load i8*, i8** %name.addr, align 8
  %arrayidx1282 = getelementptr inbounds i8, i8* %449, i64 2
  %450 = load i8, i8* %arrayidx1282, align 1
  %conv1283 = sext i8 %450 to i32
  %cmp1284 = icmp eq i32 %conv1283, 100
  br i1 %cmp1284, label %land.lhs.true.1286, label %if.end.1297

land.lhs.true.1286:                               ; preds = %sw.bb.1281
  %451 = load i8*, i8** %name.addr, align 8
  %arrayidx1287 = getelementptr inbounds i8, i8* %451, i64 3
  %452 = load i8, i8* %arrayidx1287, align 1
  %conv1288 = sext i8 %452 to i32
  %cmp1289 = icmp eq i32 %conv1288, 105
  br i1 %cmp1289, label %land.lhs.true.1291, label %if.end.1297

land.lhs.true.1291:                               ; preds = %land.lhs.true.1286
  %453 = load i8*, i8** %name.addr, align 8
  %arrayidx1292 = getelementptr inbounds i8, i8* %453, i64 4
  %454 = load i8, i8* %arrayidx1292, align 1
  %conv1293 = sext i8 %454 to i32
  %cmp1294 = icmp eq i32 %conv1293, 114
  br i1 %cmp1294, label %if.then.1296, label %if.end.1297

if.then.1296:                                     ; preds = %land.lhs.true.1291
  store i32 -169, i32* %retval
  br label %return

if.end.1297:                                      ; preds = %land.lhs.true.1291, %land.lhs.true.1286, %sw.bb.1281
  br label %unknown

sw.default.1298:                                  ; preds = %sw.bb.1261
  br label %unknown

sw.bb.1299:                                       ; preds = %sw.bb.890
  %455 = load i8*, i8** %name.addr, align 8
  %arrayidx1300 = getelementptr inbounds i8, i8* %455, i64 1
  %456 = load i8, i8* %arrayidx1300, align 1
  %conv1301 = sext i8 %456 to i32
  switch i32 %conv1301, label %sw.default.1404 [
    i32 101, label %sw.bb.1302
    i32 104, label %sw.bb.1319
    i32 108, label %sw.bb.1336
    i32 112, label %sw.bb.1353
    i32 114, label %sw.bb.1370
    i32 116, label %sw.bb.1387
  ]

sw.bb.1302:                                       ; preds = %sw.bb.1299
  %457 = load i8*, i8** %name.addr, align 8
  %arrayidx1303 = getelementptr inbounds i8, i8* %457, i64 2
  %458 = load i8, i8* %arrayidx1303, align 1
  %conv1304 = sext i8 %458 to i32
  %cmp1305 = icmp eq i32 %conv1304, 109
  br i1 %cmp1305, label %land.lhs.true.1307, label %if.end.1318

land.lhs.true.1307:                               ; preds = %sw.bb.1302
  %459 = load i8*, i8** %name.addr, align 8
  %arrayidx1308 = getelementptr inbounds i8, i8* %459, i64 3
  %460 = load i8, i8* %arrayidx1308, align 1
  %conv1309 = sext i8 %460 to i32
  %cmp1310 = icmp eq i32 %conv1309, 111
  br i1 %cmp1310, label %land.lhs.true.1312, label %if.end.1318

land.lhs.true.1312:                               ; preds = %land.lhs.true.1307
  %461 = load i8*, i8** %name.addr, align 8
  %arrayidx1313 = getelementptr inbounds i8, i8* %461, i64 4
  %462 = load i8, i8* %arrayidx1313, align 1
  %conv1314 = sext i8 %462 to i32
  %cmp1315 = icmp eq i32 %conv1314, 112
  br i1 %cmp1315, label %if.then.1317, label %if.end.1318

if.then.1317:                                     ; preds = %land.lhs.true.1312
  store i32 -177, i32* %retval
  br label %return

if.end.1318:                                      ; preds = %land.lhs.true.1312, %land.lhs.true.1307, %sw.bb.1302
  br label %unknown

sw.bb.1319:                                       ; preds = %sw.bb.1299
  %463 = load i8*, i8** %name.addr, align 8
  %arrayidx1320 = getelementptr inbounds i8, i8* %463, i64 2
  %464 = load i8, i8* %arrayidx1320, align 1
  %conv1321 = sext i8 %464 to i32
  %cmp1322 = icmp eq i32 %conv1321, 105
  br i1 %cmp1322, label %land.lhs.true.1324, label %if.end.1335

land.lhs.true.1324:                               ; preds = %sw.bb.1319
  %465 = load i8*, i8** %name.addr, align 8
  %arrayidx1325 = getelementptr inbounds i8, i8* %465, i64 3
  %466 = load i8, i8* %arrayidx1325, align 1
  %conv1326 = sext i8 %466 to i32
  %cmp1327 = icmp eq i32 %conv1326, 102
  br i1 %cmp1327, label %land.lhs.true.1329, label %if.end.1335

land.lhs.true.1329:                               ; preds = %land.lhs.true.1324
  %467 = load i8*, i8** %name.addr, align 8
  %arrayidx1330 = getelementptr inbounds i8, i8* %467, i64 4
  %468 = load i8, i8* %arrayidx1330, align 1
  %conv1331 = sext i8 %468 to i32
  %cmp1332 = icmp eq i32 %conv1331, 116
  br i1 %cmp1332, label %if.then.1334, label %if.end.1335

if.then.1334:                                     ; preds = %land.lhs.true.1329
  store i32 -188, i32* %retval
  br label %return

if.end.1335:                                      ; preds = %land.lhs.true.1329, %land.lhs.true.1324, %sw.bb.1319
  br label %unknown

sw.bb.1336:                                       ; preds = %sw.bb.1299
  %469 = load i8*, i8** %name.addr, align 8
  %arrayidx1337 = getelementptr inbounds i8, i8* %469, i64 2
  %470 = load i8, i8* %arrayidx1337, align 1
  %conv1338 = sext i8 %470 to i32
  %cmp1339 = icmp eq i32 %conv1338, 101
  br i1 %cmp1339, label %land.lhs.true.1341, label %if.end.1352

land.lhs.true.1341:                               ; preds = %sw.bb.1336
  %471 = load i8*, i8** %name.addr, align 8
  %arrayidx1342 = getelementptr inbounds i8, i8* %471, i64 3
  %472 = load i8, i8* %arrayidx1342, align 1
  %conv1343 = sext i8 %472 to i32
  %cmp1344 = icmp eq i32 %conv1343, 101
  br i1 %cmp1344, label %land.lhs.true.1346, label %if.end.1352

land.lhs.true.1346:                               ; preds = %land.lhs.true.1341
  %473 = load i8*, i8** %name.addr, align 8
  %arrayidx1347 = getelementptr inbounds i8, i8* %473, i64 4
  %474 = load i8, i8* %arrayidx1347, align 1
  %conv1348 = sext i8 %474 to i32
  %cmp1349 = icmp eq i32 %conv1348, 112
  br i1 %cmp1349, label %if.then.1351, label %if.end.1352

if.then.1351:                                     ; preds = %land.lhs.true.1346
  store i32 -195, i32* %retval
  br label %return

if.end.1352:                                      ; preds = %land.lhs.true.1346, %land.lhs.true.1341, %sw.bb.1336
  br label %unknown

sw.bb.1353:                                       ; preds = %sw.bb.1299
  %475 = load i8*, i8** %name.addr, align 8
  %arrayidx1354 = getelementptr inbounds i8, i8* %475, i64 2
  %476 = load i8, i8* %arrayidx1354, align 1
  %conv1355 = sext i8 %476 to i32
  %cmp1356 = icmp eq i32 %conv1355, 108
  br i1 %cmp1356, label %land.lhs.true.1358, label %if.end.1369

land.lhs.true.1358:                               ; preds = %sw.bb.1353
  %477 = load i8*, i8** %name.addr, align 8
  %arrayidx1359 = getelementptr inbounds i8, i8* %477, i64 3
  %478 = load i8, i8* %arrayidx1359, align 1
  %conv1360 = sext i8 %478 to i32
  %cmp1361 = icmp eq i32 %conv1360, 105
  br i1 %cmp1361, label %land.lhs.true.1363, label %if.end.1369

land.lhs.true.1363:                               ; preds = %land.lhs.true.1358
  %479 = load i8*, i8** %name.addr, align 8
  %arrayidx1364 = getelementptr inbounds i8, i8* %479, i64 4
  %480 = load i8, i8* %arrayidx1364, align 1
  %conv1365 = sext i8 %480 to i32
  %cmp1366 = icmp eq i32 %conv1365, 116
  br i1 %cmp1366, label %if.then.1368, label %if.end.1369

if.then.1368:                                     ; preds = %land.lhs.true.1363
  store i32 200, i32* %retval
  br label %return

if.end.1369:                                      ; preds = %land.lhs.true.1363, %land.lhs.true.1358, %sw.bb.1353
  br label %unknown

sw.bb.1370:                                       ; preds = %sw.bb.1299
  %481 = load i8*, i8** %name.addr, align 8
  %arrayidx1371 = getelementptr inbounds i8, i8* %481, i64 2
  %482 = load i8, i8* %arrayidx1371, align 1
  %conv1372 = sext i8 %482 to i32
  %cmp1373 = icmp eq i32 %conv1372, 97
  br i1 %cmp1373, label %land.lhs.true.1375, label %if.end.1386

land.lhs.true.1375:                               ; preds = %sw.bb.1370
  %483 = load i8*, i8** %name.addr, align 8
  %arrayidx1376 = getelementptr inbounds i8, i8* %483, i64 3
  %484 = load i8, i8* %arrayidx1376, align 1
  %conv1377 = sext i8 %484 to i32
  %cmp1378 = icmp eq i32 %conv1377, 110
  br i1 %cmp1378, label %land.lhs.true.1380, label %if.end.1386

land.lhs.true.1380:                               ; preds = %land.lhs.true.1375
  %485 = load i8*, i8** %name.addr, align 8
  %arrayidx1381 = getelementptr inbounds i8, i8* %485, i64 4
  %486 = load i8, i8* %arrayidx1381, align 1
  %conv1382 = sext i8 %486 to i32
  %cmp1383 = icmp eq i32 %conv1382, 100
  br i1 %cmp1383, label %if.then.1385, label %if.end.1386

if.then.1385:                                     ; preds = %land.lhs.true.1380
  store i32 -203, i32* %retval
  br label %return

if.end.1386:                                      ; preds = %land.lhs.true.1380, %land.lhs.true.1375, %sw.bb.1370
  br label %unknown

sw.bb.1387:                                       ; preds = %sw.bb.1299
  %487 = load i8*, i8** %name.addr, align 8
  %arrayidx1388 = getelementptr inbounds i8, i8* %487, i64 2
  %488 = load i8, i8* %arrayidx1388, align 1
  %conv1389 = sext i8 %488 to i32
  %cmp1390 = icmp eq i32 %conv1389, 117
  br i1 %cmp1390, label %land.lhs.true.1392, label %if.end.1403

land.lhs.true.1392:                               ; preds = %sw.bb.1387
  %489 = load i8*, i8** %name.addr, align 8
  %arrayidx1393 = getelementptr inbounds i8, i8* %489, i64 3
  %490 = load i8, i8* %arrayidx1393, align 1
  %conv1394 = sext i8 %490 to i32
  %cmp1395 = icmp eq i32 %conv1394, 100
  br i1 %cmp1395, label %land.lhs.true.1397, label %if.end.1403

land.lhs.true.1397:                               ; preds = %land.lhs.true.1392
  %491 = load i8*, i8** %name.addr, align 8
  %arrayidx1398 = getelementptr inbounds i8, i8* %491, i64 4
  %492 = load i8, i8* %arrayidx1398, align 1
  %conv1399 = sext i8 %492 to i32
  %cmp1400 = icmp eq i32 %conv1399, 121
  br i1 %cmp1400, label %if.then.1402, label %if.end.1403

if.then.1402:                                     ; preds = %land.lhs.true.1397
  store i32 205, i32* %retval
  br label %return

if.end.1403:                                      ; preds = %land.lhs.true.1397, %land.lhs.true.1392, %sw.bb.1387
  br label %unknown

sw.default.1404:                                  ; preds = %sw.bb.1299
  br label %unknown

sw.bb.1405:                                       ; preds = %sw.bb.890
  %493 = load i8*, i8** %name.addr, align 8
  %arrayidx1406 = getelementptr inbounds i8, i8* %493, i64 1
  %494 = load i8, i8* %arrayidx1406, align 1
  %conv1407 = sext i8 %494 to i32
  %cmp1408 = icmp eq i32 %conv1407, 105
  br i1 %cmp1408, label %land.lhs.true.1410, label %if.end.1426

land.lhs.true.1410:                               ; preds = %sw.bb.1405
  %495 = load i8*, i8** %name.addr, align 8
  %arrayidx1411 = getelementptr inbounds i8, i8* %495, i64 2
  %496 = load i8, i8* %arrayidx1411, align 1
  %conv1412 = sext i8 %496 to i32
  %cmp1413 = icmp eq i32 %conv1412, 109
  br i1 %cmp1413, label %land.lhs.true.1415, label %if.end.1426

land.lhs.true.1415:                               ; preds = %land.lhs.true.1410
  %497 = load i8*, i8** %name.addr, align 8
  %arrayidx1416 = getelementptr inbounds i8, i8* %497, i64 3
  %498 = load i8, i8* %arrayidx1416, align 1
  %conv1417 = sext i8 %498 to i32
  %cmp1418 = icmp eq i32 %conv1417, 101
  br i1 %cmp1418, label %land.lhs.true.1420, label %if.end.1426

land.lhs.true.1420:                               ; preds = %land.lhs.true.1415
  %499 = load i8*, i8** %name.addr, align 8
  %arrayidx1421 = getelementptr inbounds i8, i8* %499, i64 4
  %500 = load i8, i8* %arrayidx1421, align 1
  %conv1422 = sext i8 %500 to i32
  %cmp1423 = icmp eq i32 %conv1422, 115
  br i1 %cmp1423, label %if.then.1425, label %if.end.1426

if.then.1425:                                     ; preds = %land.lhs.true.1420
  store i32 -220, i32* %retval
  br label %return

if.end.1426:                                      ; preds = %land.lhs.true.1420, %land.lhs.true.1415, %land.lhs.true.1410, %sw.bb.1405
  br label %unknown

sw.bb.1427:                                       ; preds = %sw.bb.890
  %501 = load i8*, i8** %name.addr, align 8
  %arrayidx1428 = getelementptr inbounds i8, i8* %501, i64 1
  %502 = load i8, i8* %arrayidx1428, align 1
  %conv1429 = sext i8 %502 to i32
  switch i32 %conv1429, label %sw.default.1492 [
    i32 109, label %sw.bb.1430
    i32 110, label %sw.bb.1447
    i32 116, label %sw.bb.1475
  ]

sw.bb.1430:                                       ; preds = %sw.bb.1427
  %503 = load i8*, i8** %name.addr, align 8
  %arrayidx1431 = getelementptr inbounds i8, i8* %503, i64 2
  %504 = load i8, i8* %arrayidx1431, align 1
  %conv1432 = sext i8 %504 to i32
  %cmp1433 = icmp eq i32 %conv1432, 97
  br i1 %cmp1433, label %land.lhs.true.1435, label %if.end.1446

land.lhs.true.1435:                               ; preds = %sw.bb.1430
  %505 = load i8*, i8** %name.addr, align 8
  %arrayidx1436 = getelementptr inbounds i8, i8* %505, i64 3
  %506 = load i8, i8* %arrayidx1436, align 1
  %conv1437 = sext i8 %506 to i32
  %cmp1438 = icmp eq i32 %conv1437, 115
  br i1 %cmp1438, label %land.lhs.true.1440, label %if.end.1446

land.lhs.true.1440:                               ; preds = %land.lhs.true.1435
  %507 = load i8*, i8** %name.addr, align 8
  %arrayidx1441 = getelementptr inbounds i8, i8* %507, i64 4
  %508 = load i8, i8* %arrayidx1441, align 1
  %conv1442 = sext i8 %508 to i32
  %cmp1443 = icmp eq i32 %conv1442, 107
  br i1 %cmp1443, label %if.then.1445, label %if.end.1446

if.then.1445:                                     ; preds = %land.lhs.true.1440
  store i32 -225, i32* %retval
  br label %return

if.end.1446:                                      ; preds = %land.lhs.true.1440, %land.lhs.true.1435, %sw.bb.1430
  br label %unknown

sw.bb.1447:                                       ; preds = %sw.bb.1427
  %509 = load i8*, i8** %name.addr, align 8
  %arrayidx1448 = getelementptr inbounds i8, i8* %509, i64 2
  %510 = load i8, i8* %arrayidx1448, align 1
  %conv1449 = sext i8 %510 to i32
  switch i32 %conv1449, label %sw.default.1474 [
    i32 100, label %sw.bb.1450
    i32 116, label %sw.bb.1462
  ]

sw.bb.1450:                                       ; preds = %sw.bb.1447
  %511 = load i8*, i8** %name.addr, align 8
  %arrayidx1451 = getelementptr inbounds i8, i8* %511, i64 3
  %512 = load i8, i8* %arrayidx1451, align 1
  %conv1452 = sext i8 %512 to i32
  %cmp1453 = icmp eq i32 %conv1452, 101
  br i1 %cmp1453, label %land.lhs.true.1455, label %if.end.1461

land.lhs.true.1455:                               ; preds = %sw.bb.1450
  %513 = load i8*, i8** %name.addr, align 8
  %arrayidx1456 = getelementptr inbounds i8, i8* %513, i64 4
  %514 = load i8, i8* %arrayidx1456, align 1
  %conv1457 = sext i8 %514 to i32
  %cmp1458 = icmp eq i32 %conv1457, 102
  br i1 %cmp1458, label %if.then.1460, label %if.end.1461

if.then.1460:                                     ; preds = %land.lhs.true.1455
  store i32 226, i32* %retval
  br label %return

if.end.1461:                                      ; preds = %land.lhs.true.1455, %sw.bb.1450
  br label %unknown

sw.bb.1462:                                       ; preds = %sw.bb.1447
  %515 = load i8*, i8** %name.addr, align 8
  %arrayidx1463 = getelementptr inbounds i8, i8* %515, i64 3
  %516 = load i8, i8* %arrayidx1463, align 1
  %conv1464 = sext i8 %516 to i32
  %cmp1465 = icmp eq i32 %conv1464, 105
  br i1 %cmp1465, label %if.then.1467, label %if.end.1473

if.then.1467:                                     ; preds = %sw.bb.1462
  %517 = load i8*, i8** %name.addr, align 8
  %arrayidx1468 = getelementptr inbounds i8, i8* %517, i64 4
  %518 = load i8, i8* %arrayidx1468, align 1
  %conv1469 = sext i8 %518 to i32
  switch i32 %conv1469, label %sw.default.1472 [
    i32 101, label %sw.bb.1470
    i32 108, label %sw.bb.1471
  ]

sw.bb.1470:                                       ; preds = %if.then.1467
  store i32 231, i32* %retval
  br label %return

sw.bb.1471:                                       ; preds = %if.then.1467
  store i32 232, i32* %retval
  br label %return

sw.default.1472:                                  ; preds = %if.then.1467
  br label %unknown

if.end.1473:                                      ; preds = %sw.bb.1462
  br label %unknown

sw.default.1474:                                  ; preds = %sw.bb.1447
  br label %unknown

sw.bb.1475:                                       ; preds = %sw.bb.1427
  %519 = load i8*, i8** %name.addr, align 8
  %arrayidx1476 = getelementptr inbounds i8, i8* %519, i64 2
  %520 = load i8, i8* %arrayidx1476, align 1
  %conv1477 = sext i8 %520 to i32
  %cmp1478 = icmp eq i32 %conv1477, 105
  br i1 %cmp1478, label %land.lhs.true.1480, label %if.end.1491

land.lhs.true.1480:                               ; preds = %sw.bb.1475
  %521 = load i8*, i8** %name.addr, align 8
  %arrayidx1481 = getelementptr inbounds i8, i8* %521, i64 3
  %522 = load i8, i8* %arrayidx1481, align 1
  %conv1482 = sext i8 %522 to i32
  %cmp1483 = icmp eq i32 %conv1482, 109
  br i1 %cmp1483, label %land.lhs.true.1485, label %if.end.1491

land.lhs.true.1485:                               ; preds = %land.lhs.true.1480
  %523 = load i8*, i8** %name.addr, align 8
  %arrayidx1486 = getelementptr inbounds i8, i8* %523, i64 4
  %524 = load i8, i8* %arrayidx1486, align 1
  %conv1487 = sext i8 %524 to i32
  %cmp1488 = icmp eq i32 %conv1487, 101
  br i1 %cmp1488, label %if.then.1490, label %if.end.1491

if.then.1490:                                     ; preds = %land.lhs.true.1485
  store i32 -234, i32* %retval
  br label %return

if.end.1491:                                      ; preds = %land.lhs.true.1485, %land.lhs.true.1480, %sw.bb.1475
  br label %unknown

sw.default.1492:                                  ; preds = %sw.bb.1427
  br label %unknown

sw.bb.1493:                                       ; preds = %sw.bb.890
  %525 = load i8*, i8** %name.addr, align 8
  %arrayidx1494 = getelementptr inbounds i8, i8* %525, i64 1
  %526 = load i8, i8* %arrayidx1494, align 1
  %conv1495 = sext i8 %526 to i32
  switch i32 %conv1495, label %sw.default.1530 [
    i32 104, label %sw.bb.1496
    i32 114, label %sw.bb.1513
  ]

sw.bb.1496:                                       ; preds = %sw.bb.1493
  %527 = load i8*, i8** %name.addr, align 8
  %arrayidx1497 = getelementptr inbounds i8, i8* %527, i64 2
  %528 = load i8, i8* %arrayidx1497, align 1
  %conv1498 = sext i8 %528 to i32
  %cmp1499 = icmp eq i32 %conv1498, 105
  br i1 %cmp1499, label %land.lhs.true.1501, label %if.end.1512

land.lhs.true.1501:                               ; preds = %sw.bb.1496
  %529 = load i8*, i8** %name.addr, align 8
  %arrayidx1502 = getelementptr inbounds i8, i8* %529, i64 3
  %530 = load i8, i8* %arrayidx1502, align 1
  %conv1503 = sext i8 %530 to i32
  %cmp1504 = icmp eq i32 %conv1503, 108
  br i1 %cmp1504, label %land.lhs.true.1506, label %if.end.1512

land.lhs.true.1506:                               ; preds = %land.lhs.true.1501
  %531 = load i8*, i8** %name.addr, align 8
  %arrayidx1507 = getelementptr inbounds i8, i8* %531, i64 4
  %532 = load i8, i8* %arrayidx1507, align 1
  %conv1508 = sext i8 %532 to i32
  %cmp1509 = icmp eq i32 %conv1508, 101
  br i1 %cmp1509, label %if.then.1511, label %if.end.1512

if.then.1511:                                     ; preds = %land.lhs.true.1506
  store i32 241, i32* %retval
  br label %return

if.end.1512:                                      ; preds = %land.lhs.true.1506, %land.lhs.true.1501, %sw.bb.1496
  br label %unknown

sw.bb.1513:                                       ; preds = %sw.bb.1493
  %533 = load i8*, i8** %name.addr, align 8
  %arrayidx1514 = getelementptr inbounds i8, i8* %533, i64 2
  %534 = load i8, i8* %arrayidx1514, align 1
  %conv1515 = sext i8 %534 to i32
  %cmp1516 = icmp eq i32 %conv1515, 105
  br i1 %cmp1516, label %land.lhs.true.1518, label %if.end.1529

land.lhs.true.1518:                               ; preds = %sw.bb.1513
  %535 = load i8*, i8** %name.addr, align 8
  %arrayidx1519 = getelementptr inbounds i8, i8* %535, i64 3
  %536 = load i8, i8* %arrayidx1519, align 1
  %conv1520 = sext i8 %536 to i32
  %cmp1521 = icmp eq i32 %conv1520, 116
  br i1 %cmp1521, label %land.lhs.true.1523, label %if.end.1529

land.lhs.true.1523:                               ; preds = %land.lhs.true.1518
  %537 = load i8*, i8** %name.addr, align 8
  %arrayidx1524 = getelementptr inbounds i8, i8* %537, i64 4
  %538 = load i8, i8* %arrayidx1524, align 1
  %conv1525 = sext i8 %538 to i32
  %cmp1526 = icmp eq i32 %conv1525, 101
  br i1 %cmp1526, label %if.then.1528, label %if.end.1529

if.then.1528:                                     ; preds = %land.lhs.true.1523
  store i32 -242, i32* %retval
  br label %return

if.end.1529:                                      ; preds = %land.lhs.true.1523, %land.lhs.true.1518, %sw.bb.1513
  br label %unknown

sw.default.1530:                                  ; preds = %sw.bb.1493
  br label %unknown

sw.default.1531:                                  ; preds = %sw.bb.890
  br label %unknown

sw.bb.1532:                                       ; preds = %entry
  %539 = load i8*, i8** %name.addr, align 8
  %arrayidx1533 = getelementptr inbounds i8, i8* %539, i64 0
  %540 = load i8, i8* %arrayidx1533, align 1
  %conv1534 = sext i8 %540 to i32
  switch i32 %conv1534, label %sw.default.2256 [
    i32 97, label %sw.bb.1535
    i32 99, label %sw.bb.1562
    i32 100, label %sw.bb.1610
    i32 101, label %sw.bb.1637
    i32 102, label %sw.bb.1700
    i32 103, label %sw.bb.1748
    i32 108, label %sw.bb.1775
    i32 109, label %sw.bb.1823
    i32 112, label %sw.bb.1886
    i32 114, label %sw.bb.1913
    i32 115, label %sw.bb.1977
    i32 117, label %sw.bb.2174
    i32 118, label %sw.bb.2229
  ]

sw.bb.1535:                                       ; preds = %sw.bb.1532
  %541 = load i8*, i8** %name.addr, align 8
  %arrayidx1536 = getelementptr inbounds i8, i8* %541, i64 1
  %542 = load i8, i8* %arrayidx1536, align 1
  %conv1537 = sext i8 %542 to i32
  %cmp1538 = icmp eq i32 %conv1537, 99
  br i1 %cmp1538, label %land.lhs.true.1540, label %if.end.1561

land.lhs.true.1540:                               ; preds = %sw.bb.1535
  %543 = load i8*, i8** %name.addr, align 8
  %arrayidx1541 = getelementptr inbounds i8, i8* %543, i64 2
  %544 = load i8, i8* %arrayidx1541, align 1
  %conv1542 = sext i8 %544 to i32
  %cmp1543 = icmp eq i32 %conv1542, 99
  br i1 %cmp1543, label %land.lhs.true.1545, label %if.end.1561

land.lhs.true.1545:                               ; preds = %land.lhs.true.1540
  %545 = load i8*, i8** %name.addr, align 8
  %arrayidx1546 = getelementptr inbounds i8, i8* %545, i64 3
  %546 = load i8, i8* %arrayidx1546, align 1
  %conv1547 = sext i8 %546 to i32
  %cmp1548 = icmp eq i32 %conv1547, 101
  br i1 %cmp1548, label %land.lhs.true.1550, label %if.end.1561

land.lhs.true.1550:                               ; preds = %land.lhs.true.1545
  %547 = load i8*, i8** %name.addr, align 8
  %arrayidx1551 = getelementptr inbounds i8, i8* %547, i64 4
  %548 = load i8, i8* %arrayidx1551, align 1
  %conv1552 = sext i8 %548 to i32
  %cmp1553 = icmp eq i32 %conv1552, 112
  br i1 %cmp1553, label %land.lhs.true.1555, label %if.end.1561

land.lhs.true.1555:                               ; preds = %land.lhs.true.1550
  %549 = load i8*, i8** %name.addr, align 8
  %arrayidx1556 = getelementptr inbounds i8, i8* %549, i64 5
  %550 = load i8, i8* %arrayidx1556, align 1
  %conv1557 = sext i8 %550 to i32
  %cmp1558 = icmp eq i32 %conv1557, 116
  br i1 %cmp1558, label %if.then.1560, label %if.end.1561

if.then.1560:                                     ; preds = %land.lhs.true.1555
  store i32 -14, i32* %retval
  br label %return

if.end.1561:                                      ; preds = %land.lhs.true.1555, %land.lhs.true.1550, %land.lhs.true.1545, %land.lhs.true.1540, %sw.bb.1535
  br label %unknown

sw.bb.1562:                                       ; preds = %sw.bb.1532
  %551 = load i8*, i8** %name.addr, align 8
  %arrayidx1563 = getelementptr inbounds i8, i8* %551, i64 1
  %552 = load i8, i8* %arrayidx1563, align 1
  %conv1564 = sext i8 %552 to i32
  switch i32 %conv1564, label %sw.default.1609 [
    i32 97, label %sw.bb.1565
    i32 104, label %sw.bb.1587
  ]

sw.bb.1565:                                       ; preds = %sw.bb.1562
  %553 = load i8*, i8** %name.addr, align 8
  %arrayidx1566 = getelementptr inbounds i8, i8* %553, i64 2
  %554 = load i8, i8* %arrayidx1566, align 1
  %conv1567 = sext i8 %554 to i32
  %cmp1568 = icmp eq i32 %conv1567, 108
  br i1 %cmp1568, label %land.lhs.true.1570, label %if.end.1586

land.lhs.true.1570:                               ; preds = %sw.bb.1565
  %555 = load i8*, i8** %name.addr, align 8
  %arrayidx1571 = getelementptr inbounds i8, i8* %555, i64 3
  %556 = load i8, i8* %arrayidx1571, align 1
  %conv1572 = sext i8 %556 to i32
  %cmp1573 = icmp eq i32 %conv1572, 108
  br i1 %cmp1573, label %land.lhs.true.1575, label %if.end.1586

land.lhs.true.1575:                               ; preds = %land.lhs.true.1570
  %557 = load i8*, i8** %name.addr, align 8
  %arrayidx1576 = getelementptr inbounds i8, i8* %557, i64 4
  %558 = load i8, i8* %arrayidx1576, align 1
  %conv1577 = sext i8 %558 to i32
  %cmp1578 = icmp eq i32 %conv1577, 101
  br i1 %cmp1578, label %land.lhs.true.1580, label %if.end.1586

land.lhs.true.1580:                               ; preds = %land.lhs.true.1575
  %559 = load i8*, i8** %name.addr, align 8
  %arrayidx1581 = getelementptr inbounds i8, i8* %559, i64 5
  %560 = load i8, i8* %arrayidx1581, align 1
  %conv1582 = sext i8 %560 to i32
  %cmp1583 = icmp eq i32 %conv1582, 114
  br i1 %cmp1583, label %if.then.1585, label %if.end.1586

if.then.1585:                                     ; preds = %land.lhs.true.1580
  store i32 -21, i32* %retval
  br label %return

if.end.1586:                                      ; preds = %land.lhs.true.1580, %land.lhs.true.1575, %land.lhs.true.1570, %sw.bb.1565
  br label %unknown

sw.bb.1587:                                       ; preds = %sw.bb.1562
  %561 = load i8*, i8** %name.addr, align 8
  %arrayidx1588 = getelementptr inbounds i8, i8* %561, i64 2
  %562 = load i8, i8* %arrayidx1588, align 1
  %conv1589 = sext i8 %562 to i32
  %cmp1590 = icmp eq i32 %conv1589, 114
  br i1 %cmp1590, label %land.lhs.true.1592, label %if.end.1608

land.lhs.true.1592:                               ; preds = %sw.bb.1587
  %563 = load i8*, i8** %name.addr, align 8
  %arrayidx1593 = getelementptr inbounds i8, i8* %563, i64 3
  %564 = load i8, i8* %arrayidx1593, align 1
  %conv1594 = sext i8 %564 to i32
  %cmp1595 = icmp eq i32 %conv1594, 111
  br i1 %cmp1595, label %land.lhs.true.1597, label %if.end.1608

land.lhs.true.1597:                               ; preds = %land.lhs.true.1592
  %565 = load i8*, i8** %name.addr, align 8
  %arrayidx1598 = getelementptr inbounds i8, i8* %565, i64 4
  %566 = load i8, i8* %arrayidx1598, align 1
  %conv1599 = sext i8 %566 to i32
  %cmp1600 = icmp eq i32 %conv1599, 111
  br i1 %cmp1600, label %land.lhs.true.1602, label %if.end.1608

land.lhs.true.1602:                               ; preds = %land.lhs.true.1597
  %567 = load i8*, i8** %name.addr, align 8
  %arrayidx1603 = getelementptr inbounds i8, i8* %567, i64 5
  %568 = load i8, i8* %arrayidx1603, align 1
  %conv1604 = sext i8 %568 to i32
  %cmp1605 = icmp eq i32 %conv1604, 116
  br i1 %cmp1605, label %if.then.1607, label %if.end.1608

if.then.1607:                                     ; preds = %land.lhs.true.1602
  store i32 -28, i32* %retval
  br label %return

if.end.1608:                                      ; preds = %land.lhs.true.1602, %land.lhs.true.1597, %land.lhs.true.1592, %sw.bb.1587
  br label %unknown

sw.default.1609:                                  ; preds = %sw.bb.1562
  br label %unknown

sw.bb.1610:                                       ; preds = %sw.bb.1532
  %569 = load i8*, i8** %name.addr, align 8
  %arrayidx1611 = getelementptr inbounds i8, i8* %569, i64 1
  %570 = load i8, i8* %arrayidx1611, align 1
  %conv1612 = sext i8 %570 to i32
  %cmp1613 = icmp eq i32 %conv1612, 101
  br i1 %cmp1613, label %land.lhs.true.1615, label %if.end.1636

land.lhs.true.1615:                               ; preds = %sw.bb.1610
  %571 = load i8*, i8** %name.addr, align 8
  %arrayidx1616 = getelementptr inbounds i8, i8* %571, i64 2
  %572 = load i8, i8* %arrayidx1616, align 1
  %conv1617 = sext i8 %572 to i32
  %cmp1618 = icmp eq i32 %conv1617, 108
  br i1 %cmp1618, label %land.lhs.true.1620, label %if.end.1636

land.lhs.true.1620:                               ; preds = %land.lhs.true.1615
  %573 = load i8*, i8** %name.addr, align 8
  %arrayidx1621 = getelementptr inbounds i8, i8* %573, i64 3
  %574 = load i8, i8* %arrayidx1621, align 1
  %conv1622 = sext i8 %574 to i32
  %cmp1623 = icmp eq i32 %conv1622, 101
  br i1 %cmp1623, label %land.lhs.true.1625, label %if.end.1636

land.lhs.true.1625:                               ; preds = %land.lhs.true.1620
  %575 = load i8*, i8** %name.addr, align 8
  %arrayidx1626 = getelementptr inbounds i8, i8* %575, i64 4
  %576 = load i8, i8* %arrayidx1626, align 1
  %conv1627 = sext i8 %576 to i32
  %cmp1628 = icmp eq i32 %conv1627, 116
  br i1 %cmp1628, label %land.lhs.true.1630, label %if.end.1636

land.lhs.true.1630:                               ; preds = %land.lhs.true.1625
  %577 = load i8*, i8** %name.addr, align 8
  %arrayidx1631 = getelementptr inbounds i8, i8* %577, i64 5
  %578 = load i8, i8* %arrayidx1631, align 1
  %conv1632 = sext i8 %578 to i32
  %cmp1633 = icmp eq i32 %conv1632, 101
  br i1 %cmp1633, label %if.then.1635, label %if.end.1636

if.then.1635:                                     ; preds = %land.lhs.true.1630
  store i32 39, i32* %retval
  br label %return

if.end.1636:                                      ; preds = %land.lhs.true.1630, %land.lhs.true.1625, %land.lhs.true.1620, %land.lhs.true.1615, %sw.bb.1610
  br label %unknown

sw.bb.1637:                                       ; preds = %sw.bb.1532
  %579 = load i8*, i8** %name.addr, align 8
  %arrayidx1638 = getelementptr inbounds i8, i8* %579, i64 1
  %580 = load i8, i8* %arrayidx1638, align 1
  %conv1639 = sext i8 %580 to i32
  switch i32 %conv1639, label %sw.default.1699 [
    i32 108, label %sw.bb.1640
    i32 120, label %sw.bb.1677
  ]

sw.bb.1640:                                       ; preds = %sw.bb.1637
  %581 = load i8*, i8** %name.addr, align 8
  %arrayidx1641 = getelementptr inbounds i8, i8* %581, i64 2
  %582 = load i8, i8* %arrayidx1641, align 1
  %conv1642 = sext i8 %582 to i32
  %cmp1643 = icmp eq i32 %conv1642, 115
  br i1 %cmp1643, label %land.lhs.true.1645, label %if.end.1676

land.lhs.true.1645:                               ; preds = %sw.bb.1640
  %583 = load i8*, i8** %name.addr, align 8
  %arrayidx1646 = getelementptr inbounds i8, i8* %583, i64 3
  %584 = load i8, i8* %arrayidx1646, align 1
  %conv1647 = sext i8 %584 to i32
  %cmp1648 = icmp eq i32 %conv1647, 101
  br i1 %cmp1648, label %land.lhs.true.1650, label %if.end.1676

land.lhs.true.1650:                               ; preds = %land.lhs.true.1645
  %585 = load i8*, i8** %name.addr, align 8
  %arrayidx1651 = getelementptr inbounds i8, i8* %585, i64 4
  %586 = load i8, i8* %arrayidx1651, align 1
  %conv1652 = sext i8 %586 to i32
  %cmp1653 = icmp eq i32 %conv1652, 105
  br i1 %cmp1653, label %land.lhs.true.1655, label %if.end.1676

land.lhs.true.1655:                               ; preds = %land.lhs.true.1650
  %587 = load i8*, i8** %name.addr, align 8
  %arrayidx1656 = getelementptr inbounds i8, i8* %587, i64 5
  %588 = load i8, i8* %arrayidx1656, align 1
  %conv1657 = sext i8 %588 to i32
  %cmp1658 = icmp eq i32 %conv1657, 102
  br i1 %cmp1658, label %if.then.1660, label %if.end.1676

if.then.1660:                                     ; preds = %land.lhs.true.1655
  %589 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings = getelementptr inbounds %struct.cop, %struct.cop* %589, i32 0, i32 14
  %590 = load %struct.sv*, %struct.sv** %cop_warnings, align 8
  %cmp1661 = icmp eq %struct.sv* %590, null
  br i1 %cmp1661, label %if.then.1674, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then.1660
  %591 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings1663 = getelementptr inbounds %struct.cop, %struct.cop* %591, i32 0, i32 14
  %592 = load %struct.sv*, %struct.sv** %cop_warnings1663, align 8
  %cmp1664 = icmp eq %struct.sv* %592, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 1)
  br i1 %cmp1664, label %if.then.1674, label %lor.lhs.false.1666

lor.lhs.false.1666:                               ; preds = %lor.lhs.false
  %593 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings1667 = getelementptr inbounds %struct.cop, %struct.cop* %593, i32 0, i32 14
  %594 = load %struct.sv*, %struct.sv** %cop_warnings1667, align 8
  %cmp1668 = icmp ne %struct.sv* %594, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 2)
  br i1 %cmp1668, label %land.lhs.true.1670, label %if.end.1675

land.lhs.true.1670:                               ; preds = %lor.lhs.false.1666
  %595 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings1671 = getelementptr inbounds %struct.cop, %struct.cop* %595, i32 0, i32 14
  %596 = load %struct.sv*, %struct.sv** %cop_warnings1671, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %596, i32 0, i32 0
  %597 = load i8*, i8** %sv_any, align 8
  %598 = bitcast i8* %597 to %struct.xpv*
  %xpv_pv = getelementptr inbounds %struct.xpv, %struct.xpv* %598, i32 0, i32 0
  %599 = load i8*, i8** %xpv_pv, align 8
  %arrayidx1672 = getelementptr inbounds i8, i8* %599, i64 7
  %600 = load i8, i8* %arrayidx1672, align 1
  %conv1673 = sext i8 %600 to i32
  %and = and i32 %conv1673, 1
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then.1674, label %if.end.1675

if.then.1674:                                     ; preds = %land.lhs.true.1670, %lor.lhs.false, %if.then.1660
  call void (i32, i8*, ...) @Perl_warner(i32 28, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.116, i32 0, i32 0))
  br label %if.end.1675

if.end.1675:                                      ; preds = %if.then.1674, %land.lhs.true.1670, %lor.lhs.false.1666
  br label %if.end.1676

if.end.1676:                                      ; preds = %if.end.1675, %land.lhs.true.1655, %land.lhs.true.1650, %land.lhs.true.1645, %sw.bb.1640
  br label %unknown

sw.bb.1677:                                       ; preds = %sw.bb.1637
  %601 = load i8*, i8** %name.addr, align 8
  %arrayidx1678 = getelementptr inbounds i8, i8* %601, i64 2
  %602 = load i8, i8* %arrayidx1678, align 1
  %conv1679 = sext i8 %602 to i32
  %cmp1680 = icmp eq i32 %conv1679, 105
  br i1 %cmp1680, label %land.lhs.true.1682, label %if.end.1698

land.lhs.true.1682:                               ; preds = %sw.bb.1677
  %603 = load i8*, i8** %name.addr, align 8
  %arrayidx1683 = getelementptr inbounds i8, i8* %603, i64 3
  %604 = load i8, i8* %arrayidx1683, align 1
  %conv1684 = sext i8 %604 to i32
  %cmp1685 = icmp eq i32 %conv1684, 115
  br i1 %cmp1685, label %land.lhs.true.1687, label %if.end.1698

land.lhs.true.1687:                               ; preds = %land.lhs.true.1682
  %605 = load i8*, i8** %name.addr, align 8
  %arrayidx1688 = getelementptr inbounds i8, i8* %605, i64 4
  %606 = load i8, i8* %arrayidx1688, align 1
  %conv1689 = sext i8 %606 to i32
  %cmp1690 = icmp eq i32 %conv1689, 116
  br i1 %cmp1690, label %land.lhs.true.1692, label %if.end.1698

land.lhs.true.1692:                               ; preds = %land.lhs.true.1687
  %607 = load i8*, i8** %name.addr, align 8
  %arrayidx1693 = getelementptr inbounds i8, i8* %607, i64 5
  %608 = load i8, i8* %arrayidx1693, align 1
  %conv1694 = sext i8 %608 to i32
  %cmp1695 = icmp eq i32 %conv1694, 115
  br i1 %cmp1695, label %if.then.1697, label %if.end.1698

if.then.1697:                                     ; preds = %land.lhs.true.1692
  store i32 56, i32* %retval
  br label %return

if.end.1698:                                      ; preds = %land.lhs.true.1692, %land.lhs.true.1687, %land.lhs.true.1682, %sw.bb.1677
  br label %unknown

sw.default.1699:                                  ; preds = %sw.bb.1637
  br label %unknown

sw.bb.1700:                                       ; preds = %sw.bb.1532
  %609 = load i8*, i8** %name.addr, align 8
  %arrayidx1701 = getelementptr inbounds i8, i8* %609, i64 1
  %610 = load i8, i8* %arrayidx1701, align 1
  %conv1702 = sext i8 %610 to i32
  switch i32 %conv1702, label %sw.default.1747 [
    i32 105, label %sw.bb.1703
    i32 111, label %sw.bb.1725
  ]

sw.bb.1703:                                       ; preds = %sw.bb.1700
  %611 = load i8*, i8** %name.addr, align 8
  %arrayidx1704 = getelementptr inbounds i8, i8* %611, i64 2
  %612 = load i8, i8* %arrayidx1704, align 1
  %conv1705 = sext i8 %612 to i32
  %cmp1706 = icmp eq i32 %conv1705, 108
  br i1 %cmp1706, label %land.lhs.true.1708, label %if.end.1724

land.lhs.true.1708:                               ; preds = %sw.bb.1703
  %613 = load i8*, i8** %name.addr, align 8
  %arrayidx1709 = getelementptr inbounds i8, i8* %613, i64 3
  %614 = load i8, i8* %arrayidx1709, align 1
  %conv1710 = sext i8 %614 to i32
  %cmp1711 = icmp eq i32 %conv1710, 101
  br i1 %cmp1711, label %land.lhs.true.1713, label %if.end.1724

land.lhs.true.1713:                               ; preds = %land.lhs.true.1708
  %615 = load i8*, i8** %name.addr, align 8
  %arrayidx1714 = getelementptr inbounds i8, i8* %615, i64 4
  %616 = load i8, i8* %arrayidx1714, align 1
  %conv1715 = sext i8 %616 to i32
  %cmp1716 = icmp eq i32 %conv1715, 110
  br i1 %cmp1716, label %land.lhs.true.1718, label %if.end.1724

land.lhs.true.1718:                               ; preds = %land.lhs.true.1713
  %617 = load i8*, i8** %name.addr, align 8
  %arrayidx1719 = getelementptr inbounds i8, i8* %617, i64 5
  %618 = load i8, i8* %arrayidx1719, align 1
  %conv1720 = sext i8 %618 to i32
  %cmp1721 = icmp eq i32 %conv1720, 111
  br i1 %cmp1721, label %if.then.1723, label %if.end.1724

if.then.1723:                                     ; preds = %land.lhs.true.1718
  store i32 -60, i32* %retval
  br label %return

if.end.1724:                                      ; preds = %land.lhs.true.1718, %land.lhs.true.1713, %land.lhs.true.1708, %sw.bb.1703
  br label %unknown

sw.bb.1725:                                       ; preds = %sw.bb.1700
  %619 = load i8*, i8** %name.addr, align 8
  %arrayidx1726 = getelementptr inbounds i8, i8* %619, i64 2
  %620 = load i8, i8* %arrayidx1726, align 1
  %conv1727 = sext i8 %620 to i32
  %cmp1728 = icmp eq i32 %conv1727, 114
  br i1 %cmp1728, label %land.lhs.true.1730, label %if.end.1746

land.lhs.true.1730:                               ; preds = %sw.bb.1725
  %621 = load i8*, i8** %name.addr, align 8
  %arrayidx1731 = getelementptr inbounds i8, i8* %621, i64 3
  %622 = load i8, i8* %arrayidx1731, align 1
  %conv1732 = sext i8 %622 to i32
  %cmp1733 = icmp eq i32 %conv1732, 109
  br i1 %cmp1733, label %land.lhs.true.1735, label %if.end.1746

land.lhs.true.1735:                               ; preds = %land.lhs.true.1730
  %623 = load i8*, i8** %name.addr, align 8
  %arrayidx1736 = getelementptr inbounds i8, i8* %623, i64 4
  %624 = load i8, i8* %arrayidx1736, align 1
  %conv1737 = sext i8 %624 to i32
  %cmp1738 = icmp eq i32 %conv1737, 97
  br i1 %cmp1738, label %land.lhs.true.1740, label %if.end.1746

land.lhs.true.1740:                               ; preds = %land.lhs.true.1735
  %625 = load i8*, i8** %name.addr, align 8
  %arrayidx1741 = getelementptr inbounds i8, i8* %625, i64 5
  %626 = load i8, i8* %arrayidx1741, align 1
  %conv1742 = sext i8 %626 to i32
  %cmp1743 = icmp eq i32 %conv1742, 116
  br i1 %cmp1743, label %if.then.1745, label %if.end.1746

if.then.1745:                                     ; preds = %land.lhs.true.1740
  store i32 65, i32* %retval
  br label %return

if.end.1746:                                      ; preds = %land.lhs.true.1740, %land.lhs.true.1735, %land.lhs.true.1730, %sw.bb.1725
  br label %unknown

sw.default.1747:                                  ; preds = %sw.bb.1700
  br label %unknown

sw.bb.1748:                                       ; preds = %sw.bb.1532
  %627 = load i8*, i8** %name.addr, align 8
  %arrayidx1749 = getelementptr inbounds i8, i8* %627, i64 1
  %628 = load i8, i8* %arrayidx1749, align 1
  %conv1750 = sext i8 %628 to i32
  %cmp1751 = icmp eq i32 %conv1750, 109
  br i1 %cmp1751, label %land.lhs.true.1753, label %if.end.1774

land.lhs.true.1753:                               ; preds = %sw.bb.1748
  %629 = load i8*, i8** %name.addr, align 8
  %arrayidx1754 = getelementptr inbounds i8, i8* %629, i64 2
  %630 = load i8, i8* %arrayidx1754, align 1
  %conv1755 = sext i8 %630 to i32
  %cmp1756 = icmp eq i32 %conv1755, 116
  br i1 %cmp1756, label %land.lhs.true.1758, label %if.end.1774

land.lhs.true.1758:                               ; preds = %land.lhs.true.1753
  %631 = load i8*, i8** %name.addr, align 8
  %arrayidx1759 = getelementptr inbounds i8, i8* %631, i64 3
  %632 = load i8, i8* %arrayidx1759, align 1
  %conv1760 = sext i8 %632 to i32
  %cmp1761 = icmp eq i32 %conv1760, 105
  br i1 %cmp1761, label %land.lhs.true.1763, label %if.end.1774

land.lhs.true.1763:                               ; preds = %land.lhs.true.1758
  %633 = load i8*, i8** %name.addr, align 8
  %arrayidx1764 = getelementptr inbounds i8, i8* %633, i64 4
  %634 = load i8, i8* %arrayidx1764, align 1
  %conv1765 = sext i8 %634 to i32
  %cmp1766 = icmp eq i32 %conv1765, 109
  br i1 %cmp1766, label %land.lhs.true.1768, label %if.end.1774

land.lhs.true.1768:                               ; preds = %land.lhs.true.1763
  %635 = load i8*, i8** %name.addr, align 8
  %arrayidx1769 = getelementptr inbounds i8, i8* %635, i64 5
  %636 = load i8, i8* %arrayidx1769, align 1
  %conv1770 = sext i8 %636 to i32
  %cmp1771 = icmp eq i32 %conv1770, 101
  br i1 %cmp1771, label %if.then.1773, label %if.end.1774

if.then.1773:                                     ; preds = %land.lhs.true.1768
  store i32 -95, i32* %retval
  br label %return

if.end.1774:                                      ; preds = %land.lhs.true.1768, %land.lhs.true.1763, %land.lhs.true.1758, %land.lhs.true.1753, %sw.bb.1748
  br label %unknown

sw.bb.1775:                                       ; preds = %sw.bb.1532
  %637 = load i8*, i8** %name.addr, align 8
  %arrayidx1776 = getelementptr inbounds i8, i8* %637, i64 1
  %638 = load i8, i8* %arrayidx1776, align 1
  %conv1777 = sext i8 %638 to i32
  switch i32 %conv1777, label %sw.default.1822 [
    i32 101, label %sw.bb.1778
    i32 105, label %sw.bb.1800
  ]

sw.bb.1778:                                       ; preds = %sw.bb.1775
  %639 = load i8*, i8** %name.addr, align 8
  %arrayidx1779 = getelementptr inbounds i8, i8* %639, i64 2
  %640 = load i8, i8* %arrayidx1779, align 1
  %conv1780 = sext i8 %640 to i32
  %cmp1781 = icmp eq i32 %conv1780, 110
  br i1 %cmp1781, label %land.lhs.true.1783, label %if.end.1799

land.lhs.true.1783:                               ; preds = %sw.bb.1778
  %641 = load i8*, i8** %name.addr, align 8
  %arrayidx1784 = getelementptr inbounds i8, i8* %641, i64 3
  %642 = load i8, i8* %arrayidx1784, align 1
  %conv1785 = sext i8 %642 to i32
  %cmp1786 = icmp eq i32 %conv1785, 103
  br i1 %cmp1786, label %land.lhs.true.1788, label %if.end.1799

land.lhs.true.1788:                               ; preds = %land.lhs.true.1783
  %643 = load i8*, i8** %name.addr, align 8
  %arrayidx1789 = getelementptr inbounds i8, i8* %643, i64 4
  %644 = load i8, i8* %arrayidx1789, align 1
  %conv1790 = sext i8 %644 to i32
  %cmp1791 = icmp eq i32 %conv1790, 116
  br i1 %cmp1791, label %land.lhs.true.1793, label %if.end.1799

land.lhs.true.1793:                               ; preds = %land.lhs.true.1788
  %645 = load i8*, i8** %name.addr, align 8
  %arrayidx1794 = getelementptr inbounds i8, i8* %645, i64 5
  %646 = load i8, i8* %arrayidx1794, align 1
  %conv1795 = sext i8 %646 to i32
  %cmp1796 = icmp eq i32 %conv1795, 104
  br i1 %cmp1796, label %if.then.1798, label %if.end.1799

if.then.1798:                                     ; preds = %land.lhs.true.1793
  store i32 -111, i32* %retval
  br label %return

if.end.1799:                                      ; preds = %land.lhs.true.1793, %land.lhs.true.1788, %land.lhs.true.1783, %sw.bb.1778
  br label %unknown

sw.bb.1800:                                       ; preds = %sw.bb.1775
  %647 = load i8*, i8** %name.addr, align 8
  %arrayidx1801 = getelementptr inbounds i8, i8* %647, i64 2
  %648 = load i8, i8* %arrayidx1801, align 1
  %conv1802 = sext i8 %648 to i32
  %cmp1803 = icmp eq i32 %conv1802, 115
  br i1 %cmp1803, label %land.lhs.true.1805, label %if.end.1821

land.lhs.true.1805:                               ; preds = %sw.bb.1800
  %649 = load i8*, i8** %name.addr, align 8
  %arrayidx1806 = getelementptr inbounds i8, i8* %649, i64 3
  %650 = load i8, i8* %arrayidx1806, align 1
  %conv1807 = sext i8 %650 to i32
  %cmp1808 = icmp eq i32 %conv1807, 116
  br i1 %cmp1808, label %land.lhs.true.1810, label %if.end.1821

land.lhs.true.1810:                               ; preds = %land.lhs.true.1805
  %651 = load i8*, i8** %name.addr, align 8
  %arrayidx1811 = getelementptr inbounds i8, i8* %651, i64 4
  %652 = load i8, i8* %arrayidx1811, align 1
  %conv1812 = sext i8 %652 to i32
  %cmp1813 = icmp eq i32 %conv1812, 101
  br i1 %cmp1813, label %land.lhs.true.1815, label %if.end.1821

land.lhs.true.1815:                               ; preds = %land.lhs.true.1810
  %653 = load i8*, i8** %name.addr, align 8
  %arrayidx1816 = getelementptr inbounds i8, i8* %653, i64 5
  %654 = load i8, i8* %arrayidx1816, align 1
  %conv1817 = sext i8 %654 to i32
  %cmp1818 = icmp eq i32 %conv1817, 110
  br i1 %cmp1818, label %if.then.1820, label %if.end.1821

if.then.1820:                                     ; preds = %land.lhs.true.1815
  store i32 -113, i32* %retval
  br label %return

if.end.1821:                                      ; preds = %land.lhs.true.1815, %land.lhs.true.1810, %land.lhs.true.1805, %sw.bb.1800
  br label %unknown

sw.default.1822:                                  ; preds = %sw.bb.1775
  br label %unknown

sw.bb.1823:                                       ; preds = %sw.bb.1532
  %655 = load i8*, i8** %name.addr, align 8
  %arrayidx1824 = getelementptr inbounds i8, i8* %655, i64 1
  %656 = load i8, i8* %arrayidx1824, align 1
  %conv1825 = sext i8 %656 to i32
  %cmp1826 = icmp eq i32 %conv1825, 115
  br i1 %cmp1826, label %land.lhs.true.1828, label %if.end.1885

land.lhs.true.1828:                               ; preds = %sw.bb.1823
  %657 = load i8*, i8** %name.addr, align 8
  %arrayidx1829 = getelementptr inbounds i8, i8* %657, i64 2
  %658 = load i8, i8* %arrayidx1829, align 1
  %conv1830 = sext i8 %658 to i32
  %cmp1831 = icmp eq i32 %conv1830, 103
  br i1 %cmp1831, label %if.then.1833, label %if.end.1885

if.then.1833:                                     ; preds = %land.lhs.true.1828
  %659 = load i8*, i8** %name.addr, align 8
  %arrayidx1834 = getelementptr inbounds i8, i8* %659, i64 3
  %660 = load i8, i8* %arrayidx1834, align 1
  %conv1835 = sext i8 %660 to i32
  switch i32 %conv1835, label %sw.default.1884 [
    i32 99, label %sw.bb.1836
    i32 103, label %sw.bb.1848
    i32 114, label %sw.bb.1860
    i32 115, label %sw.bb.1872
  ]

sw.bb.1836:                                       ; preds = %if.then.1833
  %661 = load i8*, i8** %name.addr, align 8
  %arrayidx1837 = getelementptr inbounds i8, i8* %661, i64 4
  %662 = load i8, i8* %arrayidx1837, align 1
  %conv1838 = sext i8 %662 to i32
  %cmp1839 = icmp eq i32 %conv1838, 116
  br i1 %cmp1839, label %land.lhs.true.1841, label %if.end.1847

land.lhs.true.1841:                               ; preds = %sw.bb.1836
  %663 = load i8*, i8** %name.addr, align 8
  %arrayidx1842 = getelementptr inbounds i8, i8* %663, i64 5
  %664 = load i8, i8* %arrayidx1842, align 1
  %conv1843 = sext i8 %664 to i32
  %cmp1844 = icmp eq i32 %conv1843, 108
  br i1 %cmp1844, label %if.then.1846, label %if.end.1847

if.then.1846:                                     ; preds = %land.lhs.true.1841
  store i32 -123, i32* %retval
  br label %return

if.end.1847:                                      ; preds = %land.lhs.true.1841, %sw.bb.1836
  br label %unknown

sw.bb.1848:                                       ; preds = %if.then.1833
  %665 = load i8*, i8** %name.addr, align 8
  %arrayidx1849 = getelementptr inbounds i8, i8* %665, i64 4
  %666 = load i8, i8* %arrayidx1849, align 1
  %conv1850 = sext i8 %666 to i32
  %cmp1851 = icmp eq i32 %conv1850, 101
  br i1 %cmp1851, label %land.lhs.true.1853, label %if.end.1859

land.lhs.true.1853:                               ; preds = %sw.bb.1848
  %667 = load i8*, i8** %name.addr, align 8
  %arrayidx1854 = getelementptr inbounds i8, i8* %667, i64 5
  %668 = load i8, i8* %arrayidx1854, align 1
  %conv1855 = sext i8 %668 to i32
  %cmp1856 = icmp eq i32 %conv1855, 116
  br i1 %cmp1856, label %if.then.1858, label %if.end.1859

if.then.1858:                                     ; preds = %land.lhs.true.1853
  store i32 -124, i32* %retval
  br label %return

if.end.1859:                                      ; preds = %land.lhs.true.1853, %sw.bb.1848
  br label %unknown

sw.bb.1860:                                       ; preds = %if.then.1833
  %669 = load i8*, i8** %name.addr, align 8
  %arrayidx1861 = getelementptr inbounds i8, i8* %669, i64 4
  %670 = load i8, i8* %arrayidx1861, align 1
  %conv1862 = sext i8 %670 to i32
  %cmp1863 = icmp eq i32 %conv1862, 99
  br i1 %cmp1863, label %land.lhs.true.1865, label %if.end.1871

land.lhs.true.1865:                               ; preds = %sw.bb.1860
  %671 = load i8*, i8** %name.addr, align 8
  %arrayidx1866 = getelementptr inbounds i8, i8* %671, i64 5
  %672 = load i8, i8* %arrayidx1866, align 1
  %conv1867 = sext i8 %672 to i32
  %cmp1868 = icmp eq i32 %conv1867, 118
  br i1 %cmp1868, label %if.then.1870, label %if.end.1871

if.then.1870:                                     ; preds = %land.lhs.true.1865
  store i32 -125, i32* %retval
  br label %return

if.end.1871:                                      ; preds = %land.lhs.true.1865, %sw.bb.1860
  br label %unknown

sw.bb.1872:                                       ; preds = %if.then.1833
  %673 = load i8*, i8** %name.addr, align 8
  %arrayidx1873 = getelementptr inbounds i8, i8* %673, i64 4
  %674 = load i8, i8* %arrayidx1873, align 1
  %conv1874 = sext i8 %674 to i32
  %cmp1875 = icmp eq i32 %conv1874, 110
  br i1 %cmp1875, label %land.lhs.true.1877, label %if.end.1883

land.lhs.true.1877:                               ; preds = %sw.bb.1872
  %675 = load i8*, i8** %name.addr, align 8
  %arrayidx1878 = getelementptr inbounds i8, i8* %675, i64 5
  %676 = load i8, i8* %arrayidx1878, align 1
  %conv1879 = sext i8 %676 to i32
  %cmp1880 = icmp eq i32 %conv1879, 100
  br i1 %cmp1880, label %if.then.1882, label %if.end.1883

if.then.1882:                                     ; preds = %land.lhs.true.1877
  store i32 -126, i32* %retval
  br label %return

if.end.1883:                                      ; preds = %land.lhs.true.1877, %sw.bb.1872
  br label %unknown

sw.default.1884:                                  ; preds = %if.then.1833
  br label %unknown

if.end.1885:                                      ; preds = %land.lhs.true.1828, %sw.bb.1823
  br label %unknown

sw.bb.1886:                                       ; preds = %sw.bb.1532
  %677 = load i8*, i8** %name.addr, align 8
  %arrayidx1887 = getelementptr inbounds i8, i8* %677, i64 1
  %678 = load i8, i8* %arrayidx1887, align 1
  %conv1888 = sext i8 %678 to i32
  %cmp1889 = icmp eq i32 %conv1888, 114
  br i1 %cmp1889, label %land.lhs.true.1891, label %if.end.1912

land.lhs.true.1891:                               ; preds = %sw.bb.1886
  %679 = load i8*, i8** %name.addr, align 8
  %arrayidx1892 = getelementptr inbounds i8, i8* %679, i64 2
  %680 = load i8, i8* %arrayidx1892, align 1
  %conv1893 = sext i8 %680 to i32
  %cmp1894 = icmp eq i32 %conv1893, 105
  br i1 %cmp1894, label %land.lhs.true.1896, label %if.end.1912

land.lhs.true.1896:                               ; preds = %land.lhs.true.1891
  %681 = load i8*, i8** %name.addr, align 8
  %arrayidx1897 = getelementptr inbounds i8, i8* %681, i64 3
  %682 = load i8, i8* %arrayidx1897, align 1
  %conv1898 = sext i8 %682 to i32
  %cmp1899 = icmp eq i32 %conv1898, 110
  br i1 %cmp1899, label %land.lhs.true.1901, label %if.end.1912

land.lhs.true.1901:                               ; preds = %land.lhs.true.1896
  %683 = load i8*, i8** %name.addr, align 8
  %arrayidx1902 = getelementptr inbounds i8, i8* %683, i64 4
  %684 = load i8, i8* %arrayidx1902, align 1
  %conv1903 = sext i8 %684 to i32
  %cmp1904 = icmp eq i32 %conv1903, 116
  br i1 %cmp1904, label %land.lhs.true.1906, label %if.end.1912

land.lhs.true.1906:                               ; preds = %land.lhs.true.1901
  %685 = load i8*, i8** %name.addr, align 8
  %arrayidx1907 = getelementptr inbounds i8, i8* %685, i64 5
  %686 = load i8, i8* %arrayidx1907, align 1
  %conv1908 = sext i8 %686 to i32
  %cmp1909 = icmp eq i32 %conv1908, 102
  br i1 %cmp1909, label %if.then.1911, label %if.end.1912

if.then.1911:                                     ; preds = %land.lhs.true.1906
  store i32 144, i32* %retval
  br label %return

if.end.1912:                                      ; preds = %land.lhs.true.1906, %land.lhs.true.1901, %land.lhs.true.1896, %land.lhs.true.1891, %sw.bb.1886
  br label %unknown

sw.bb.1913:                                       ; preds = %sw.bb.1532
  %687 = load i8*, i8** %name.addr, align 8
  %arrayidx1914 = getelementptr inbounds i8, i8* %687, i64 1
  %688 = load i8, i8* %arrayidx1914, align 1
  %conv1915 = sext i8 %688 to i32
  switch i32 %conv1915, label %sw.default.1976 [
    i32 101, label %sw.bb.1916
    i32 105, label %sw.bb.1954
  ]

sw.bb.1916:                                       ; preds = %sw.bb.1913
  %689 = load i8*, i8** %name.addr, align 8
  %arrayidx1917 = getelementptr inbounds i8, i8* %689, i64 2
  %690 = load i8, i8* %arrayidx1917, align 1
  %conv1918 = sext i8 %690 to i32
  switch i32 %conv1918, label %sw.default.1953 [
    i32 110, label %sw.bb.1919
    i32 116, label %sw.bb.1936
  ]

sw.bb.1919:                                       ; preds = %sw.bb.1916
  %691 = load i8*, i8** %name.addr, align 8
  %arrayidx1920 = getelementptr inbounds i8, i8* %691, i64 3
  %692 = load i8, i8* %arrayidx1920, align 1
  %conv1921 = sext i8 %692 to i32
  %cmp1922 = icmp eq i32 %conv1921, 97
  br i1 %cmp1922, label %land.lhs.true.1924, label %if.end.1935

land.lhs.true.1924:                               ; preds = %sw.bb.1919
  %693 = load i8*, i8** %name.addr, align 8
  %arrayidx1925 = getelementptr inbounds i8, i8* %693, i64 4
  %694 = load i8, i8* %arrayidx1925, align 1
  %conv1926 = sext i8 %694 to i32
  %cmp1927 = icmp eq i32 %conv1926, 109
  br i1 %cmp1927, label %land.lhs.true.1929, label %if.end.1935

land.lhs.true.1929:                               ; preds = %land.lhs.true.1924
  %695 = load i8*, i8** %name.addr, align 8
  %arrayidx1930 = getelementptr inbounds i8, i8* %695, i64 5
  %696 = load i8, i8* %arrayidx1930, align 1
  %conv1931 = sext i8 %696 to i32
  %cmp1932 = icmp eq i32 %conv1931, 101
  br i1 %cmp1932, label %if.then.1934, label %if.end.1935

if.then.1934:                                     ; preds = %land.lhs.true.1929
  store i32 -162, i32* %retval
  br label %return

if.end.1935:                                      ; preds = %land.lhs.true.1929, %land.lhs.true.1924, %sw.bb.1919
  br label %unknown

sw.bb.1936:                                       ; preds = %sw.bb.1916
  %697 = load i8*, i8** %name.addr, align 8
  %arrayidx1937 = getelementptr inbounds i8, i8* %697, i64 3
  %698 = load i8, i8* %arrayidx1937, align 1
  %conv1938 = sext i8 %698 to i32
  %cmp1939 = icmp eq i32 %conv1938, 117
  br i1 %cmp1939, label %land.lhs.true.1941, label %if.end.1952

land.lhs.true.1941:                               ; preds = %sw.bb.1936
  %699 = load i8*, i8** %name.addr, align 8
  %arrayidx1942 = getelementptr inbounds i8, i8* %699, i64 4
  %700 = load i8, i8* %arrayidx1942, align 1
  %conv1943 = sext i8 %700 to i32
  %cmp1944 = icmp eq i32 %conv1943, 114
  br i1 %cmp1944, label %land.lhs.true.1946, label %if.end.1952

land.lhs.true.1946:                               ; preds = %land.lhs.true.1941
  %701 = load i8*, i8** %name.addr, align 8
  %arrayidx1947 = getelementptr inbounds i8, i8* %701, i64 5
  %702 = load i8, i8* %arrayidx1947, align 1
  %conv1948 = sext i8 %702 to i32
  %cmp1949 = icmp eq i32 %conv1948, 110
  br i1 %cmp1949, label %if.then.1951, label %if.end.1952

if.then.1951:                                     ; preds = %land.lhs.true.1946
  store i32 165, i32* %retval
  br label %return

if.end.1952:                                      ; preds = %land.lhs.true.1946, %land.lhs.true.1941, %sw.bb.1936
  br label %unknown

sw.default.1953:                                  ; preds = %sw.bb.1916
  br label %unknown

sw.bb.1954:                                       ; preds = %sw.bb.1913
  %703 = load i8*, i8** %name.addr, align 8
  %arrayidx1955 = getelementptr inbounds i8, i8* %703, i64 2
  %704 = load i8, i8* %arrayidx1955, align 1
  %conv1956 = sext i8 %704 to i32
  %cmp1957 = icmp eq i32 %conv1956, 110
  br i1 %cmp1957, label %land.lhs.true.1959, label %if.end.1975

land.lhs.true.1959:                               ; preds = %sw.bb.1954
  %705 = load i8*, i8** %name.addr, align 8
  %arrayidx1960 = getelementptr inbounds i8, i8* %705, i64 3
  %706 = load i8, i8* %arrayidx1960, align 1
  %conv1961 = sext i8 %706 to i32
  %cmp1962 = icmp eq i32 %conv1961, 100
  br i1 %cmp1962, label %land.lhs.true.1964, label %if.end.1975

land.lhs.true.1964:                               ; preds = %land.lhs.true.1959
  %707 = load i8*, i8** %name.addr, align 8
  %arrayidx1965 = getelementptr inbounds i8, i8* %707, i64 4
  %708 = load i8, i8* %arrayidx1965, align 1
  %conv1966 = sext i8 %708 to i32
  %cmp1967 = icmp eq i32 %conv1966, 101
  br i1 %cmp1967, label %land.lhs.true.1969, label %if.end.1975

land.lhs.true.1969:                               ; preds = %land.lhs.true.1964
  %709 = load i8*, i8** %name.addr, align 8
  %arrayidx1970 = getelementptr inbounds i8, i8* %709, i64 5
  %710 = load i8, i8* %arrayidx1970, align 1
  %conv1971 = sext i8 %710 to i32
  %cmp1972 = icmp eq i32 %conv1971, 120
  br i1 %cmp1972, label %if.then.1974, label %if.end.1975

if.then.1974:                                     ; preds = %land.lhs.true.1969
  store i32 -168, i32* %retval
  br label %return

if.end.1975:                                      ; preds = %land.lhs.true.1969, %land.lhs.true.1964, %land.lhs.true.1959, %sw.bb.1954
  br label %unknown

sw.default.1976:                                  ; preds = %sw.bb.1913
  br label %unknown

sw.bb.1977:                                       ; preds = %sw.bb.1532
  %711 = load i8*, i8** %name.addr, align 8
  %arrayidx1978 = getelementptr inbounds i8, i8* %711, i64 1
  %712 = load i8, i8* %arrayidx1978, align 1
  %conv1979 = sext i8 %712 to i32
  switch i32 %conv1979, label %sw.default.2173 [
    i32 99, label %sw.bb.1980
    i32 101, label %sw.bb.2002
    i32 104, label %sw.bb.2051
    i32 111, label %sw.bb.2085
    i32 112, label %sw.bb.2107
    i32 117, label %sw.bb.2129
    i32 121, label %sw.bb.2151
  ]

sw.bb.1980:                                       ; preds = %sw.bb.1977
  %713 = load i8*, i8** %name.addr, align 8
  %arrayidx1981 = getelementptr inbounds i8, i8* %713, i64 2
  %714 = load i8, i8* %arrayidx1981, align 1
  %conv1982 = sext i8 %714 to i32
  %cmp1983 = icmp eq i32 %conv1982, 97
  br i1 %cmp1983, label %land.lhs.true.1985, label %if.end.2001

land.lhs.true.1985:                               ; preds = %sw.bb.1980
  %715 = load i8*, i8** %name.addr, align 8
  %arrayidx1986 = getelementptr inbounds i8, i8* %715, i64 3
  %716 = load i8, i8* %arrayidx1986, align 1
  %conv1987 = sext i8 %716 to i32
  %cmp1988 = icmp eq i32 %conv1987, 108
  br i1 %cmp1988, label %land.lhs.true.1990, label %if.end.2001

land.lhs.true.1990:                               ; preds = %land.lhs.true.1985
  %717 = load i8*, i8** %name.addr, align 8
  %arrayidx1991 = getelementptr inbounds i8, i8* %717, i64 4
  %718 = load i8, i8* %arrayidx1991, align 1
  %conv1992 = sext i8 %718 to i32
  %cmp1993 = icmp eq i32 %conv1992, 97
  br i1 %cmp1993, label %land.lhs.true.1995, label %if.end.2001

land.lhs.true.1995:                               ; preds = %land.lhs.true.1990
  %719 = load i8*, i8** %name.addr, align 8
  %arrayidx1996 = getelementptr inbounds i8, i8* %719, i64 5
  %720 = load i8, i8* %arrayidx1996, align 1
  %conv1997 = sext i8 %720 to i32
  %cmp1998 = icmp eq i32 %conv1997, 114
  br i1 %cmp1998, label %if.then.2000, label %if.end.2001

if.then.2000:                                     ; preds = %land.lhs.true.1995
  store i32 171, i32* %retval
  br label %return

if.end.2001:                                      ; preds = %land.lhs.true.1995, %land.lhs.true.1990, %land.lhs.true.1985, %sw.bb.1980
  br label %unknown

sw.bb.2002:                                       ; preds = %sw.bb.1977
  %721 = load i8*, i8** %name.addr, align 8
  %arrayidx2003 = getelementptr inbounds i8, i8* %721, i64 2
  %722 = load i8, i8* %arrayidx2003, align 1
  %conv2004 = sext i8 %722 to i32
  switch i32 %conv2004, label %sw.default.2050 [
    i32 108, label %sw.bb.2005
    i32 109, label %sw.bb.2022
  ]

sw.bb.2005:                                       ; preds = %sw.bb.2002
  %723 = load i8*, i8** %name.addr, align 8
  %arrayidx2006 = getelementptr inbounds i8, i8* %723, i64 3
  %724 = load i8, i8* %arrayidx2006, align 1
  %conv2007 = sext i8 %724 to i32
  %cmp2008 = icmp eq i32 %conv2007, 101
  br i1 %cmp2008, label %land.lhs.true.2010, label %if.end.2021

land.lhs.true.2010:                               ; preds = %sw.bb.2005
  %725 = load i8*, i8** %name.addr, align 8
  %arrayidx2011 = getelementptr inbounds i8, i8* %725, i64 4
  %726 = load i8, i8* %arrayidx2011, align 1
  %conv2012 = sext i8 %726 to i32
  %cmp2013 = icmp eq i32 %conv2012, 99
  br i1 %cmp2013, label %land.lhs.true.2015, label %if.end.2021

land.lhs.true.2015:                               ; preds = %land.lhs.true.2010
  %727 = load i8*, i8** %name.addr, align 8
  %arrayidx2016 = getelementptr inbounds i8, i8* %727, i64 5
  %728 = load i8, i8* %arrayidx2016, align 1
  %conv2017 = sext i8 %728 to i32
  %cmp2018 = icmp eq i32 %conv2017, 116
  br i1 %cmp2018, label %if.then.2020, label %if.end.2021

if.then.2020:                                     ; preds = %land.lhs.true.2015
  store i32 -174, i32* %retval
  br label %return

if.end.2021:                                      ; preds = %land.lhs.true.2015, %land.lhs.true.2010, %sw.bb.2005
  br label %unknown

sw.bb.2022:                                       ; preds = %sw.bb.2002
  %729 = load i8*, i8** %name.addr, align 8
  %arrayidx2023 = getelementptr inbounds i8, i8* %729, i64 3
  %730 = load i8, i8* %arrayidx2023, align 1
  %conv2024 = sext i8 %730 to i32
  switch i32 %conv2024, label %sw.default.2049 [
    i32 99, label %sw.bb.2025
    i32 103, label %sw.bb.2037
  ]

sw.bb.2025:                                       ; preds = %sw.bb.2022
  %731 = load i8*, i8** %name.addr, align 8
  %arrayidx2026 = getelementptr inbounds i8, i8* %731, i64 4
  %732 = load i8, i8* %arrayidx2026, align 1
  %conv2027 = sext i8 %732 to i32
  %cmp2028 = icmp eq i32 %conv2027, 116
  br i1 %cmp2028, label %land.lhs.true.2030, label %if.end.2036

land.lhs.true.2030:                               ; preds = %sw.bb.2025
  %733 = load i8*, i8** %name.addr, align 8
  %arrayidx2031 = getelementptr inbounds i8, i8* %733, i64 5
  %734 = load i8, i8* %arrayidx2031, align 1
  %conv2032 = sext i8 %734 to i32
  %cmp2033 = icmp eq i32 %conv2032, 108
  br i1 %cmp2033, label %if.then.2035, label %if.end.2036

if.then.2035:                                     ; preds = %land.lhs.true.2030
  store i32 -175, i32* %retval
  br label %return

if.end.2036:                                      ; preds = %land.lhs.true.2030, %sw.bb.2025
  br label %unknown

sw.bb.2037:                                       ; preds = %sw.bb.2022
  %735 = load i8*, i8** %name.addr, align 8
  %arrayidx2038 = getelementptr inbounds i8, i8* %735, i64 4
  %736 = load i8, i8* %arrayidx2038, align 1
  %conv2039 = sext i8 %736 to i32
  %cmp2040 = icmp eq i32 %conv2039, 101
  br i1 %cmp2040, label %land.lhs.true.2042, label %if.end.2048

land.lhs.true.2042:                               ; preds = %sw.bb.2037
  %737 = load i8*, i8** %name.addr, align 8
  %arrayidx2043 = getelementptr inbounds i8, i8* %737, i64 5
  %738 = load i8, i8* %arrayidx2043, align 1
  %conv2044 = sext i8 %738 to i32
  %cmp2045 = icmp eq i32 %conv2044, 116
  br i1 %cmp2045, label %if.then.2047, label %if.end.2048

if.then.2047:                                     ; preds = %land.lhs.true.2042
  store i32 -176, i32* %retval
  br label %return

if.end.2048:                                      ; preds = %land.lhs.true.2042, %sw.bb.2037
  br label %unknown

sw.default.2049:                                  ; preds = %sw.bb.2022
  br label %unknown

sw.default.2050:                                  ; preds = %sw.bb.2002
  br label %unknown

sw.bb.2051:                                       ; preds = %sw.bb.1977
  %739 = load i8*, i8** %name.addr, align 8
  %arrayidx2052 = getelementptr inbounds i8, i8* %739, i64 2
  %740 = load i8, i8* %arrayidx2052, align 1
  %conv2053 = sext i8 %740 to i32
  %cmp2054 = icmp eq i32 %conv2053, 109
  br i1 %cmp2054, label %if.then.2056, label %if.end.2084

if.then.2056:                                     ; preds = %sw.bb.2051
  %741 = load i8*, i8** %name.addr, align 8
  %arrayidx2057 = getelementptr inbounds i8, i8* %741, i64 3
  %742 = load i8, i8* %arrayidx2057, align 1
  %conv2058 = sext i8 %742 to i32
  switch i32 %conv2058, label %sw.default.2083 [
    i32 99, label %sw.bb.2059
    i32 103, label %sw.bb.2071
  ]

sw.bb.2059:                                       ; preds = %if.then.2056
  %743 = load i8*, i8** %name.addr, align 8
  %arrayidx2060 = getelementptr inbounds i8, i8* %743, i64 4
  %744 = load i8, i8* %arrayidx2060, align 1
  %conv2061 = sext i8 %744 to i32
  %cmp2062 = icmp eq i32 %conv2061, 116
  br i1 %cmp2062, label %land.lhs.true.2064, label %if.end.2070

land.lhs.true.2064:                               ; preds = %sw.bb.2059
  %745 = load i8*, i8** %name.addr, align 8
  %arrayidx2065 = getelementptr inbounds i8, i8* %745, i64 5
  %746 = load i8, i8* %arrayidx2065, align 1
  %conv2066 = sext i8 %746 to i32
  %cmp2067 = icmp eq i32 %conv2066, 108
  br i1 %cmp2067, label %if.then.2069, label %if.end.2070

if.then.2069:                                     ; preds = %land.lhs.true.2064
  store i32 -189, i32* %retval
  br label %return

if.end.2070:                                      ; preds = %land.lhs.true.2064, %sw.bb.2059
  br label %unknown

sw.bb.2071:                                       ; preds = %if.then.2056
  %747 = load i8*, i8** %name.addr, align 8
  %arrayidx2072 = getelementptr inbounds i8, i8* %747, i64 4
  %748 = load i8, i8* %arrayidx2072, align 1
  %conv2073 = sext i8 %748 to i32
  %cmp2074 = icmp eq i32 %conv2073, 101
  br i1 %cmp2074, label %land.lhs.true.2076, label %if.end.2082

land.lhs.true.2076:                               ; preds = %sw.bb.2071
  %749 = load i8*, i8** %name.addr, align 8
  %arrayidx2077 = getelementptr inbounds i8, i8* %749, i64 5
  %750 = load i8, i8* %arrayidx2077, align 1
  %conv2078 = sext i8 %750 to i32
  %cmp2079 = icmp eq i32 %conv2078, 116
  br i1 %cmp2079, label %if.then.2081, label %if.end.2082

if.then.2081:                                     ; preds = %land.lhs.true.2076
  store i32 -190, i32* %retval
  br label %return

if.end.2082:                                      ; preds = %land.lhs.true.2076, %sw.bb.2071
  br label %unknown

sw.default.2083:                                  ; preds = %if.then.2056
  br label %unknown

if.end.2084:                                      ; preds = %sw.bb.2051
  br label %unknown

sw.bb.2085:                                       ; preds = %sw.bb.1977
  %751 = load i8*, i8** %name.addr, align 8
  %arrayidx2086 = getelementptr inbounds i8, i8* %751, i64 2
  %752 = load i8, i8* %arrayidx2086, align 1
  %conv2087 = sext i8 %752 to i32
  %cmp2088 = icmp eq i32 %conv2087, 99
  br i1 %cmp2088, label %land.lhs.true.2090, label %if.end.2106

land.lhs.true.2090:                               ; preds = %sw.bb.2085
  %753 = load i8*, i8** %name.addr, align 8
  %arrayidx2091 = getelementptr inbounds i8, i8* %753, i64 3
  %754 = load i8, i8* %arrayidx2091, align 1
  %conv2092 = sext i8 %754 to i32
  %cmp2093 = icmp eq i32 %conv2092, 107
  br i1 %cmp2093, label %land.lhs.true.2095, label %if.end.2106

land.lhs.true.2095:                               ; preds = %land.lhs.true.2090
  %755 = load i8*, i8** %name.addr, align 8
  %arrayidx2096 = getelementptr inbounds i8, i8* %755, i64 4
  %756 = load i8, i8* %arrayidx2096, align 1
  %conv2097 = sext i8 %756 to i32
  %cmp2098 = icmp eq i32 %conv2097, 101
  br i1 %cmp2098, label %land.lhs.true.2100, label %if.end.2106

land.lhs.true.2100:                               ; preds = %land.lhs.true.2095
  %757 = load i8*, i8** %name.addr, align 8
  %arrayidx2101 = getelementptr inbounds i8, i8* %757, i64 5
  %758 = load i8, i8* %arrayidx2101, align 1
  %conv2102 = sext i8 %758 to i32
  %cmp2103 = icmp eq i32 %conv2102, 116
  br i1 %cmp2103, label %if.then.2105, label %if.end.2106

if.then.2105:                                     ; preds = %land.lhs.true.2100
  store i32 -196, i32* %retval
  br label %return

if.end.2106:                                      ; preds = %land.lhs.true.2100, %land.lhs.true.2095, %land.lhs.true.2090, %sw.bb.2085
  br label %unknown

sw.bb.2107:                                       ; preds = %sw.bb.1977
  %759 = load i8*, i8** %name.addr, align 8
  %arrayidx2108 = getelementptr inbounds i8, i8* %759, i64 2
  %760 = load i8, i8* %arrayidx2108, align 1
  %conv2109 = sext i8 %760 to i32
  %cmp2110 = icmp eq i32 %conv2109, 108
  br i1 %cmp2110, label %land.lhs.true.2112, label %if.end.2128

land.lhs.true.2112:                               ; preds = %sw.bb.2107
  %761 = load i8*, i8** %name.addr, align 8
  %arrayidx2113 = getelementptr inbounds i8, i8* %761, i64 3
  %762 = load i8, i8* %arrayidx2113, align 1
  %conv2114 = sext i8 %762 to i32
  %cmp2115 = icmp eq i32 %conv2114, 105
  br i1 %cmp2115, label %land.lhs.true.2117, label %if.end.2128

land.lhs.true.2117:                               ; preds = %land.lhs.true.2112
  %763 = load i8*, i8** %name.addr, align 8
  %arrayidx2118 = getelementptr inbounds i8, i8* %763, i64 4
  %764 = load i8, i8* %arrayidx2118, align 1
  %conv2119 = sext i8 %764 to i32
  %cmp2120 = icmp eq i32 %conv2119, 99
  br i1 %cmp2120, label %land.lhs.true.2122, label %if.end.2128

land.lhs.true.2122:                               ; preds = %land.lhs.true.2117
  %765 = load i8*, i8** %name.addr, align 8
  %arrayidx2123 = getelementptr inbounds i8, i8* %765, i64 5
  %766 = load i8, i8* %arrayidx2123, align 1
  %conv2124 = sext i8 %766 to i32
  %cmp2125 = icmp eq i32 %conv2124, 101
  br i1 %cmp2125, label %if.then.2127, label %if.end.2128

if.then.2127:                                     ; preds = %land.lhs.true.2122
  store i32 -199, i32* %retval
  br label %return

if.end.2128:                                      ; preds = %land.lhs.true.2122, %land.lhs.true.2117, %land.lhs.true.2112, %sw.bb.2107
  br label %unknown

sw.bb.2129:                                       ; preds = %sw.bb.1977
  %767 = load i8*, i8** %name.addr, align 8
  %arrayidx2130 = getelementptr inbounds i8, i8* %767, i64 2
  %768 = load i8, i8* %arrayidx2130, align 1
  %conv2131 = sext i8 %768 to i32
  %cmp2132 = icmp eq i32 %conv2131, 98
  br i1 %cmp2132, label %land.lhs.true.2134, label %if.end.2150

land.lhs.true.2134:                               ; preds = %sw.bb.2129
  %769 = load i8*, i8** %name.addr, align 8
  %arrayidx2135 = getelementptr inbounds i8, i8* %769, i64 3
  %770 = load i8, i8* %arrayidx2135, align 1
  %conv2136 = sext i8 %770 to i32
  %cmp2137 = icmp eq i32 %conv2136, 115
  br i1 %cmp2137, label %land.lhs.true.2139, label %if.end.2150

land.lhs.true.2139:                               ; preds = %land.lhs.true.2134
  %771 = load i8*, i8** %name.addr, align 8
  %arrayidx2140 = getelementptr inbounds i8, i8* %771, i64 4
  %772 = load i8, i8* %arrayidx2140, align 1
  %conv2141 = sext i8 %772 to i32
  %cmp2142 = icmp eq i32 %conv2141, 116
  br i1 %cmp2142, label %land.lhs.true.2144, label %if.end.2150

land.lhs.true.2144:                               ; preds = %land.lhs.true.2139
  %773 = load i8*, i8** %name.addr, align 8
  %arrayidx2145 = getelementptr inbounds i8, i8* %773, i64 5
  %774 = load i8, i8* %arrayidx2145, align 1
  %conv2146 = sext i8 %774 to i32
  %cmp2147 = icmp eq i32 %conv2146, 114
  br i1 %cmp2147, label %if.then.2149, label %if.end.2150

if.then.2149:                                     ; preds = %land.lhs.true.2144
  store i32 -207, i32* %retval
  br label %return

if.end.2150:                                      ; preds = %land.lhs.true.2144, %land.lhs.true.2139, %land.lhs.true.2134, %sw.bb.2129
  br label %unknown

sw.bb.2151:                                       ; preds = %sw.bb.1977
  %775 = load i8*, i8** %name.addr, align 8
  %arrayidx2152 = getelementptr inbounds i8, i8* %775, i64 2
  %776 = load i8, i8* %arrayidx2152, align 1
  %conv2153 = sext i8 %776 to i32
  %cmp2154 = icmp eq i32 %conv2153, 115
  br i1 %cmp2154, label %land.lhs.true.2156, label %if.end.2172

land.lhs.true.2156:                               ; preds = %sw.bb.2151
  %777 = load i8*, i8** %name.addr, align 8
  %arrayidx2157 = getelementptr inbounds i8, i8* %777, i64 3
  %778 = load i8, i8* %arrayidx2157, align 1
  %conv2158 = sext i8 %778 to i32
  %cmp2159 = icmp eq i32 %conv2158, 116
  br i1 %cmp2159, label %land.lhs.true.2161, label %if.end.2172

land.lhs.true.2161:                               ; preds = %land.lhs.true.2156
  %779 = load i8*, i8** %name.addr, align 8
  %arrayidx2162 = getelementptr inbounds i8, i8* %779, i64 4
  %780 = load i8, i8* %arrayidx2162, align 1
  %conv2163 = sext i8 %780 to i32
  %cmp2164 = icmp eq i32 %conv2163, 101
  br i1 %cmp2164, label %land.lhs.true.2166, label %if.end.2172

land.lhs.true.2166:                               ; preds = %land.lhs.true.2161
  %781 = load i8*, i8** %name.addr, align 8
  %arrayidx2167 = getelementptr inbounds i8, i8* %781, i64 5
  %782 = load i8, i8* %arrayidx2167, align 1
  %conv2168 = sext i8 %782 to i32
  %cmp2169 = icmp eq i32 %conv2168, 109
  br i1 %cmp2169, label %if.then.2171, label %if.end.2172

if.then.2171:                                     ; preds = %land.lhs.true.2166
  store i32 -213, i32* %retval
  br label %return

if.end.2172:                                      ; preds = %land.lhs.true.2166, %land.lhs.true.2161, %land.lhs.true.2156, %sw.bb.2151
  br label %unknown

sw.default.2173:                                  ; preds = %sw.bb.1977
  br label %unknown

sw.bb.2174:                                       ; preds = %sw.bb.1532
  %783 = load i8*, i8** %name.addr, align 8
  %arrayidx2175 = getelementptr inbounds i8, i8* %783, i64 1
  %784 = load i8, i8* %arrayidx2175, align 1
  %conv2176 = sext i8 %784 to i32
  %cmp2177 = icmp eq i32 %conv2176, 110
  br i1 %cmp2177, label %if.then.2179, label %if.end.2228

if.then.2179:                                     ; preds = %sw.bb.2174
  %785 = load i8*, i8** %name.addr, align 8
  %arrayidx2180 = getelementptr inbounds i8, i8* %785, i64 2
  %786 = load i8, i8* %arrayidx2180, align 1
  %conv2181 = sext i8 %786 to i32
  switch i32 %conv2181, label %sw.default.2227 [
    i32 108, label %sw.bb.2182
    i32 112, label %sw.bb.2210
  ]

sw.bb.2182:                                       ; preds = %if.then.2179
  %787 = load i8*, i8** %name.addr, align 8
  %arrayidx2183 = getelementptr inbounds i8, i8* %787, i64 3
  %788 = load i8, i8* %arrayidx2183, align 1
  %conv2184 = sext i8 %788 to i32
  switch i32 %conv2184, label %sw.default.2209 [
    i32 101, label %sw.bb.2185
    i32 105, label %sw.bb.2197
  ]

sw.bb.2185:                                       ; preds = %sw.bb.2182
  %789 = load i8*, i8** %name.addr, align 8
  %arrayidx2186 = getelementptr inbounds i8, i8* %789, i64 4
  %790 = load i8, i8* %arrayidx2186, align 1
  %conv2187 = sext i8 %790 to i32
  %cmp2188 = icmp eq i32 %conv2187, 115
  br i1 %cmp2188, label %land.lhs.true.2190, label %if.end.2196

land.lhs.true.2190:                               ; preds = %sw.bb.2185
  %791 = load i8*, i8** %name.addr, align 8
  %arrayidx2191 = getelementptr inbounds i8, i8* %791, i64 5
  %792 = load i8, i8* %arrayidx2191, align 1
  %conv2192 = sext i8 %792 to i32
  %cmp2193 = icmp eq i32 %conv2192, 115
  br i1 %cmp2193, label %if.then.2195, label %if.end.2196

if.then.2195:                                     ; preds = %land.lhs.true.2190
  store i32 227, i32* %retval
  br label %return

if.end.2196:                                      ; preds = %land.lhs.true.2190, %sw.bb.2185
  br label %unknown

sw.bb.2197:                                       ; preds = %sw.bb.2182
  %793 = load i8*, i8** %name.addr, align 8
  %arrayidx2198 = getelementptr inbounds i8, i8* %793, i64 4
  %794 = load i8, i8* %arrayidx2198, align 1
  %conv2199 = sext i8 %794 to i32
  %cmp2200 = icmp eq i32 %conv2199, 110
  br i1 %cmp2200, label %land.lhs.true.2202, label %if.end.2208

land.lhs.true.2202:                               ; preds = %sw.bb.2197
  %795 = load i8*, i8** %name.addr, align 8
  %arrayidx2203 = getelementptr inbounds i8, i8* %795, i64 5
  %796 = load i8, i8* %arrayidx2203, align 1
  %conv2204 = sext i8 %796 to i32
  %cmp2205 = icmp eq i32 %conv2204, 107
  br i1 %cmp2205, label %if.then.2207, label %if.end.2208

if.then.2207:                                     ; preds = %land.lhs.true.2202
  store i32 -228, i32* %retval
  br label %return

if.end.2208:                                      ; preds = %land.lhs.true.2202, %sw.bb.2197
  br label %unknown

sw.default.2209:                                  ; preds = %sw.bb.2182
  br label %unknown

sw.bb.2210:                                       ; preds = %if.then.2179
  %797 = load i8*, i8** %name.addr, align 8
  %arrayidx2211 = getelementptr inbounds i8, i8* %797, i64 3
  %798 = load i8, i8* %arrayidx2211, align 1
  %conv2212 = sext i8 %798 to i32
  %cmp2213 = icmp eq i32 %conv2212, 97
  br i1 %cmp2213, label %land.lhs.true.2215, label %if.end.2226

land.lhs.true.2215:                               ; preds = %sw.bb.2210
  %799 = load i8*, i8** %name.addr, align 8
  %arrayidx2216 = getelementptr inbounds i8, i8* %799, i64 4
  %800 = load i8, i8* %arrayidx2216, align 1
  %conv2217 = sext i8 %800 to i32
  %cmp2218 = icmp eq i32 %conv2217, 99
  br i1 %cmp2218, label %land.lhs.true.2220, label %if.end.2226

land.lhs.true.2220:                               ; preds = %land.lhs.true.2215
  %801 = load i8*, i8** %name.addr, align 8
  %arrayidx2221 = getelementptr inbounds i8, i8* %801, i64 5
  %802 = load i8, i8* %arrayidx2221, align 1
  %conv2222 = sext i8 %802 to i32
  %cmp2223 = icmp eq i32 %conv2222, 107
  br i1 %cmp2223, label %if.then.2225, label %if.end.2226

if.then.2225:                                     ; preds = %land.lhs.true.2220
  store i32 -229, i32* %retval
  br label %return

if.end.2226:                                      ; preds = %land.lhs.true.2220, %land.lhs.true.2215, %sw.bb.2210
  br label %unknown

sw.default.2227:                                  ; preds = %if.then.2179
  br label %unknown

if.end.2228:                                      ; preds = %sw.bb.2174
  br label %unknown

sw.bb.2229:                                       ; preds = %sw.bb.1532
  %803 = load i8*, i8** %name.addr, align 8
  %arrayidx2230 = getelementptr inbounds i8, i8* %803, i64 1
  %804 = load i8, i8* %arrayidx2230, align 1
  %conv2231 = sext i8 %804 to i32
  %cmp2232 = icmp eq i32 %conv2231, 97
  br i1 %cmp2232, label %land.lhs.true.2234, label %if.end.2255

land.lhs.true.2234:                               ; preds = %sw.bb.2229
  %805 = load i8*, i8** %name.addr, align 8
  %arrayidx2235 = getelementptr inbounds i8, i8* %805, i64 2
  %806 = load i8, i8* %arrayidx2235, align 1
  %conv2236 = sext i8 %806 to i32
  %cmp2237 = icmp eq i32 %conv2236, 108
  br i1 %cmp2237, label %land.lhs.true.2239, label %if.end.2255

land.lhs.true.2239:                               ; preds = %land.lhs.true.2234
  %807 = load i8*, i8** %name.addr, align 8
  %arrayidx2240 = getelementptr inbounds i8, i8* %807, i64 3
  %808 = load i8, i8* %arrayidx2240, align 1
  %conv2241 = sext i8 %808 to i32
  %cmp2242 = icmp eq i32 %conv2241, 117
  br i1 %cmp2242, label %land.lhs.true.2244, label %if.end.2255

land.lhs.true.2244:                               ; preds = %land.lhs.true.2239
  %809 = load i8*, i8** %name.addr, align 8
  %arrayidx2245 = getelementptr inbounds i8, i8* %809, i64 4
  %810 = load i8, i8* %arrayidx2245, align 1
  %conv2246 = sext i8 %810 to i32
  %cmp2247 = icmp eq i32 %conv2246, 101
  br i1 %cmp2247, label %land.lhs.true.2249, label %if.end.2255

land.lhs.true.2249:                               ; preds = %land.lhs.true.2244
  %811 = load i8*, i8** %name.addr, align 8
  %arrayidx2250 = getelementptr inbounds i8, i8* %811, i64 5
  %812 = load i8, i8* %arrayidx2250, align 1
  %conv2251 = sext i8 %812 to i32
  %cmp2252 = icmp eq i32 %conv2251, 115
  br i1 %cmp2252, label %if.then.2254, label %if.end.2255

if.then.2254:                                     ; preds = %land.lhs.true.2249
  store i32 -235, i32* %retval
  br label %return

if.end.2255:                                      ; preds = %land.lhs.true.2249, %land.lhs.true.2244, %land.lhs.true.2239, %land.lhs.true.2234, %sw.bb.2229
  br label %unknown

sw.default.2256:                                  ; preds = %sw.bb.1532
  br label %unknown

sw.bb.2257:                                       ; preds = %entry
  %813 = load i8*, i8** %name.addr, align 8
  %arrayidx2258 = getelementptr inbounds i8, i8* %813, i64 0
  %814 = load i8, i8* %arrayidx2258, align 1
  %conv2259 = sext i8 %814 to i32
  switch i32 %conv2259, label %sw.default.3020 [
    i32 68, label %sw.bb.2260
    i32 95, label %sw.bb.2292
    i32 98, label %sw.bb.2324
    i32 99, label %sw.bb.2356
    i32 100, label %sw.bb.2388
    i32 102, label %sw.bb.2446
    i32 103, label %sw.bb.2478
    i32 108, label %sw.bb.2522
    i32 111, label %sw.bb.2554
    i32 112, label %sw.bb.2586
    i32 114, label %sw.bb.2618
    i32 115, label %sw.bb.2694
    i32 116, label %sw.bb.2898
    i32 117, label %sw.bb.2930
    i32 119, label %sw.bb.2988
  ]

sw.bb.2260:                                       ; preds = %sw.bb.2257
  %815 = load i8*, i8** %name.addr, align 8
  %arrayidx2261 = getelementptr inbounds i8, i8* %815, i64 1
  %816 = load i8, i8* %arrayidx2261, align 1
  %conv2262 = sext i8 %816 to i32
  %cmp2263 = icmp eq i32 %conv2262, 69
  br i1 %cmp2263, label %land.lhs.true.2265, label %if.end.2291

land.lhs.true.2265:                               ; preds = %sw.bb.2260
  %817 = load i8*, i8** %name.addr, align 8
  %arrayidx2266 = getelementptr inbounds i8, i8* %817, i64 2
  %818 = load i8, i8* %arrayidx2266, align 1
  %conv2267 = sext i8 %818 to i32
  %cmp2268 = icmp eq i32 %conv2267, 83
  br i1 %cmp2268, label %land.lhs.true.2270, label %if.end.2291

land.lhs.true.2270:                               ; preds = %land.lhs.true.2265
  %819 = load i8*, i8** %name.addr, align 8
  %arrayidx2271 = getelementptr inbounds i8, i8* %819, i64 3
  %820 = load i8, i8* %arrayidx2271, align 1
  %conv2272 = sext i8 %820 to i32
  %cmp2273 = icmp eq i32 %conv2272, 84
  br i1 %cmp2273, label %land.lhs.true.2275, label %if.end.2291

land.lhs.true.2275:                               ; preds = %land.lhs.true.2270
  %821 = load i8*, i8** %name.addr, align 8
  %arrayidx2276 = getelementptr inbounds i8, i8* %821, i64 4
  %822 = load i8, i8* %arrayidx2276, align 1
  %conv2277 = sext i8 %822 to i32
  %cmp2278 = icmp eq i32 %conv2277, 82
  br i1 %cmp2278, label %land.lhs.true.2280, label %if.end.2291

land.lhs.true.2280:                               ; preds = %land.lhs.true.2275
  %823 = load i8*, i8** %name.addr, align 8
  %arrayidx2281 = getelementptr inbounds i8, i8* %823, i64 5
  %824 = load i8, i8* %arrayidx2281, align 1
  %conv2282 = sext i8 %824 to i32
  %cmp2283 = icmp eq i32 %conv2282, 79
  br i1 %cmp2283, label %land.lhs.true.2285, label %if.end.2291

land.lhs.true.2285:                               ; preds = %land.lhs.true.2280
  %825 = load i8*, i8** %name.addr, align 8
  %arrayidx2286 = getelementptr inbounds i8, i8* %825, i64 6
  %826 = load i8, i8* %arrayidx2286, align 1
  %conv2287 = sext i8 %826 to i32
  %cmp2288 = icmp eq i32 %conv2287, 89
  br i1 %cmp2288, label %if.then.2290, label %if.end.2291

if.then.2290:                                     ; preds = %land.lhs.true.2285
  store i32 9, i32* %retval
  br label %return

if.end.2291:                                      ; preds = %land.lhs.true.2285, %land.lhs.true.2280, %land.lhs.true.2275, %land.lhs.true.2270, %land.lhs.true.2265, %sw.bb.2260
  br label %unknown

sw.bb.2292:                                       ; preds = %sw.bb.2257
  %827 = load i8*, i8** %name.addr, align 8
  %arrayidx2293 = getelementptr inbounds i8, i8* %827, i64 1
  %828 = load i8, i8* %arrayidx2293, align 1
  %conv2294 = sext i8 %828 to i32
  %cmp2295 = icmp eq i32 %conv2294, 95
  br i1 %cmp2295, label %land.lhs.true.2297, label %if.end.2323

land.lhs.true.2297:                               ; preds = %sw.bb.2292
  %829 = load i8*, i8** %name.addr, align 8
  %arrayidx2298 = getelementptr inbounds i8, i8* %829, i64 2
  %830 = load i8, i8* %arrayidx2298, align 1
  %conv2299 = sext i8 %830 to i32
  %cmp2300 = icmp eq i32 %conv2299, 69
  br i1 %cmp2300, label %land.lhs.true.2302, label %if.end.2323

land.lhs.true.2302:                               ; preds = %land.lhs.true.2297
  %831 = load i8*, i8** %name.addr, align 8
  %arrayidx2303 = getelementptr inbounds i8, i8* %831, i64 3
  %832 = load i8, i8* %arrayidx2303, align 1
  %conv2304 = sext i8 %832 to i32
  %cmp2305 = icmp eq i32 %conv2304, 78
  br i1 %cmp2305, label %land.lhs.true.2307, label %if.end.2323

land.lhs.true.2307:                               ; preds = %land.lhs.true.2302
  %833 = load i8*, i8** %name.addr, align 8
  %arrayidx2308 = getelementptr inbounds i8, i8* %833, i64 4
  %834 = load i8, i8* %arrayidx2308, align 1
  %conv2309 = sext i8 %834 to i32
  %cmp2310 = icmp eq i32 %conv2309, 68
  br i1 %cmp2310, label %land.lhs.true.2312, label %if.end.2323

land.lhs.true.2312:                               ; preds = %land.lhs.true.2307
  %835 = load i8*, i8** %name.addr, align 8
  %arrayidx2313 = getelementptr inbounds i8, i8* %835, i64 5
  %836 = load i8, i8* %arrayidx2313, align 1
  %conv2314 = sext i8 %836 to i32
  %cmp2315 = icmp eq i32 %conv2314, 95
  br i1 %cmp2315, label %land.lhs.true.2317, label %if.end.2323

land.lhs.true.2317:                               ; preds = %land.lhs.true.2312
  %837 = load i8*, i8** %name.addr, align 8
  %arrayidx2318 = getelementptr inbounds i8, i8* %837, i64 6
  %838 = load i8, i8* %arrayidx2318, align 1
  %conv2319 = sext i8 %838 to i32
  %cmp2320 = icmp eq i32 %conv2319, 95
  br i1 %cmp2320, label %if.then.2322, label %if.end.2323

if.then.2322:                                     ; preds = %land.lhs.true.2317
  store i32 5, i32* %retval
  br label %return

if.end.2323:                                      ; preds = %land.lhs.true.2317, %land.lhs.true.2312, %land.lhs.true.2307, %land.lhs.true.2302, %land.lhs.true.2297, %sw.bb.2292
  br label %unknown

sw.bb.2324:                                       ; preds = %sw.bb.2257
  %839 = load i8*, i8** %name.addr, align 8
  %arrayidx2325 = getelementptr inbounds i8, i8* %839, i64 1
  %840 = load i8, i8* %arrayidx2325, align 1
  %conv2326 = sext i8 %840 to i32
  %cmp2327 = icmp eq i32 %conv2326, 105
  br i1 %cmp2327, label %land.lhs.true.2329, label %if.end.2355

land.lhs.true.2329:                               ; preds = %sw.bb.2324
  %841 = load i8*, i8** %name.addr, align 8
  %arrayidx2330 = getelementptr inbounds i8, i8* %841, i64 2
  %842 = load i8, i8* %arrayidx2330, align 1
  %conv2331 = sext i8 %842 to i32
  %cmp2332 = icmp eq i32 %conv2331, 110
  br i1 %cmp2332, label %land.lhs.true.2334, label %if.end.2355

land.lhs.true.2334:                               ; preds = %land.lhs.true.2329
  %843 = load i8*, i8** %name.addr, align 8
  %arrayidx2335 = getelementptr inbounds i8, i8* %843, i64 3
  %844 = load i8, i8* %arrayidx2335, align 1
  %conv2336 = sext i8 %844 to i32
  %cmp2337 = icmp eq i32 %conv2336, 109
  br i1 %cmp2337, label %land.lhs.true.2339, label %if.end.2355

land.lhs.true.2339:                               ; preds = %land.lhs.true.2334
  %845 = load i8*, i8** %name.addr, align 8
  %arrayidx2340 = getelementptr inbounds i8, i8* %845, i64 4
  %846 = load i8, i8* %arrayidx2340, align 1
  %conv2341 = sext i8 %846 to i32
  %cmp2342 = icmp eq i32 %conv2341, 111
  br i1 %cmp2342, label %land.lhs.true.2344, label %if.end.2355

land.lhs.true.2344:                               ; preds = %land.lhs.true.2339
  %847 = load i8*, i8** %name.addr, align 8
  %arrayidx2345 = getelementptr inbounds i8, i8* %847, i64 5
  %848 = load i8, i8* %arrayidx2345, align 1
  %conv2346 = sext i8 %848 to i32
  %cmp2347 = icmp eq i32 %conv2346, 100
  br i1 %cmp2347, label %land.lhs.true.2349, label %if.end.2355

land.lhs.true.2349:                               ; preds = %land.lhs.true.2344
  %849 = load i8*, i8** %name.addr, align 8
  %arrayidx2350 = getelementptr inbounds i8, i8* %849, i64 6
  %850 = load i8, i8* %arrayidx2350, align 1
  %conv2351 = sext i8 %850 to i32
  %cmp2352 = icmp eq i32 %conv2351, 101
  br i1 %cmp2352, label %if.then.2354, label %if.end.2355

if.then.2354:                                     ; preds = %land.lhs.true.2349
  store i32 -19, i32* %retval
  br label %return

if.end.2355:                                      ; preds = %land.lhs.true.2349, %land.lhs.true.2344, %land.lhs.true.2339, %land.lhs.true.2334, %land.lhs.true.2329, %sw.bb.2324
  br label %unknown

sw.bb.2356:                                       ; preds = %sw.bb.2257
  %851 = load i8*, i8** %name.addr, align 8
  %arrayidx2357 = getelementptr inbounds i8, i8* %851, i64 1
  %852 = load i8, i8* %arrayidx2357, align 1
  %conv2358 = sext i8 %852 to i32
  %cmp2359 = icmp eq i32 %conv2358, 111
  br i1 %cmp2359, label %land.lhs.true.2361, label %if.end.2387

land.lhs.true.2361:                               ; preds = %sw.bb.2356
  %853 = load i8*, i8** %name.addr, align 8
  %arrayidx2362 = getelementptr inbounds i8, i8* %853, i64 2
  %854 = load i8, i8* %arrayidx2362, align 1
  %conv2363 = sext i8 %854 to i32
  %cmp2364 = icmp eq i32 %conv2363, 110
  br i1 %cmp2364, label %land.lhs.true.2366, label %if.end.2387

land.lhs.true.2366:                               ; preds = %land.lhs.true.2361
  %855 = load i8*, i8** %name.addr, align 8
  %arrayidx2367 = getelementptr inbounds i8, i8* %855, i64 3
  %856 = load i8, i8* %arrayidx2367, align 1
  %conv2368 = sext i8 %856 to i32
  %cmp2369 = icmp eq i32 %conv2368, 110
  br i1 %cmp2369, label %land.lhs.true.2371, label %if.end.2387

land.lhs.true.2371:                               ; preds = %land.lhs.true.2366
  %857 = load i8*, i8** %name.addr, align 8
  %arrayidx2372 = getelementptr inbounds i8, i8* %857, i64 4
  %858 = load i8, i8* %arrayidx2372, align 1
  %conv2373 = sext i8 %858 to i32
  %cmp2374 = icmp eq i32 %conv2373, 101
  br i1 %cmp2374, label %land.lhs.true.2376, label %if.end.2387

land.lhs.true.2376:                               ; preds = %land.lhs.true.2371
  %859 = load i8*, i8** %name.addr, align 8
  %arrayidx2377 = getelementptr inbounds i8, i8* %859, i64 5
  %860 = load i8, i8* %arrayidx2377, align 1
  %conv2378 = sext i8 %860 to i32
  %cmp2379 = icmp eq i32 %conv2378, 99
  br i1 %cmp2379, label %land.lhs.true.2381, label %if.end.2387

land.lhs.true.2381:                               ; preds = %land.lhs.true.2376
  %861 = load i8*, i8** %name.addr, align 8
  %arrayidx2382 = getelementptr inbounds i8, i8* %861, i64 6
  %862 = load i8, i8* %arrayidx2382, align 1
  %conv2383 = sext i8 %862 to i32
  %cmp2384 = icmp eq i32 %conv2383, 116
  br i1 %cmp2384, label %if.then.2386, label %if.end.2387

if.then.2386:                                     ; preds = %land.lhs.true.2381
  store i32 -32, i32* %retval
  br label %return

if.end.2387:                                      ; preds = %land.lhs.true.2381, %land.lhs.true.2376, %land.lhs.true.2371, %land.lhs.true.2366, %land.lhs.true.2361, %sw.bb.2356
  br label %unknown

sw.bb.2388:                                       ; preds = %sw.bb.2257
  %863 = load i8*, i8** %name.addr, align 8
  %arrayidx2389 = getelementptr inbounds i8, i8* %863, i64 1
  %864 = load i8, i8* %arrayidx2389, align 1
  %conv2390 = sext i8 %864 to i32
  switch i32 %conv2390, label %sw.default.2445 [
    i32 98, label %sw.bb.2391
    i32 101, label %sw.bb.2418
  ]

sw.bb.2391:                                       ; preds = %sw.bb.2388
  %865 = load i8*, i8** %name.addr, align 8
  %arrayidx2392 = getelementptr inbounds i8, i8* %865, i64 2
  %866 = load i8, i8* %arrayidx2392, align 1
  %conv2393 = sext i8 %866 to i32
  %cmp2394 = icmp eq i32 %conv2393, 109
  br i1 %cmp2394, label %land.lhs.true.2396, label %if.end.2417

land.lhs.true.2396:                               ; preds = %sw.bb.2391
  %867 = load i8*, i8** %name.addr, align 8
  %arrayidx2397 = getelementptr inbounds i8, i8* %867, i64 3
  %868 = load i8, i8* %arrayidx2397, align 1
  %conv2398 = sext i8 %868 to i32
  %cmp2399 = icmp eq i32 %conv2398, 111
  br i1 %cmp2399, label %land.lhs.true.2401, label %if.end.2417

land.lhs.true.2401:                               ; preds = %land.lhs.true.2396
  %869 = load i8*, i8** %name.addr, align 8
  %arrayidx2402 = getelementptr inbounds i8, i8* %869, i64 4
  %870 = load i8, i8* %arrayidx2402, align 1
  %conv2403 = sext i8 %870 to i32
  %cmp2404 = icmp eq i32 %conv2403, 112
  br i1 %cmp2404, label %land.lhs.true.2406, label %if.end.2417

land.lhs.true.2406:                               ; preds = %land.lhs.true.2401
  %871 = load i8*, i8** %name.addr, align 8
  %arrayidx2407 = getelementptr inbounds i8, i8* %871, i64 5
  %872 = load i8, i8* %arrayidx2407, align 1
  %conv2408 = sext i8 %872 to i32
  %cmp2409 = icmp eq i32 %conv2408, 101
  br i1 %cmp2409, label %land.lhs.true.2411, label %if.end.2417

land.lhs.true.2411:                               ; preds = %land.lhs.true.2406
  %873 = load i8*, i8** %name.addr, align 8
  %arrayidx2412 = getelementptr inbounds i8, i8* %873, i64 6
  %874 = load i8, i8* %arrayidx2412, align 1
  %conv2413 = sext i8 %874 to i32
  %cmp2414 = icmp eq i32 %conv2413, 110
  br i1 %cmp2414, label %if.then.2416, label %if.end.2417

if.then.2416:                                     ; preds = %land.lhs.true.2411
  store i32 -37, i32* %retval
  br label %return

if.end.2417:                                      ; preds = %land.lhs.true.2411, %land.lhs.true.2406, %land.lhs.true.2401, %land.lhs.true.2396, %sw.bb.2391
  br label %unknown

sw.bb.2418:                                       ; preds = %sw.bb.2388
  %875 = load i8*, i8** %name.addr, align 8
  %arrayidx2419 = getelementptr inbounds i8, i8* %875, i64 2
  %876 = load i8, i8* %arrayidx2419, align 1
  %conv2420 = sext i8 %876 to i32
  %cmp2421 = icmp eq i32 %conv2420, 102
  br i1 %cmp2421, label %land.lhs.true.2423, label %if.end.2444

land.lhs.true.2423:                               ; preds = %sw.bb.2418
  %877 = load i8*, i8** %name.addr, align 8
  %arrayidx2424 = getelementptr inbounds i8, i8* %877, i64 3
  %878 = load i8, i8* %arrayidx2424, align 1
  %conv2425 = sext i8 %878 to i32
  %cmp2426 = icmp eq i32 %conv2425, 105
  br i1 %cmp2426, label %land.lhs.true.2428, label %if.end.2444

land.lhs.true.2428:                               ; preds = %land.lhs.true.2423
  %879 = load i8*, i8** %name.addr, align 8
  %arrayidx2429 = getelementptr inbounds i8, i8* %879, i64 4
  %880 = load i8, i8* %arrayidx2429, align 1
  %conv2430 = sext i8 %880 to i32
  %cmp2431 = icmp eq i32 %conv2430, 110
  br i1 %cmp2431, label %land.lhs.true.2433, label %if.end.2444

land.lhs.true.2433:                               ; preds = %land.lhs.true.2428
  %881 = load i8*, i8** %name.addr, align 8
  %arrayidx2434 = getelementptr inbounds i8, i8* %881, i64 5
  %882 = load i8, i8* %arrayidx2434, align 1
  %conv2435 = sext i8 %882 to i32
  %cmp2436 = icmp eq i32 %conv2435, 101
  br i1 %cmp2436, label %land.lhs.true.2438, label %if.end.2444

land.lhs.true.2438:                               ; preds = %land.lhs.true.2433
  %883 = load i8*, i8** %name.addr, align 8
  %arrayidx2439 = getelementptr inbounds i8, i8* %883, i64 6
  %884 = load i8, i8* %arrayidx2439, align 1
  %conv2440 = sext i8 %884 to i32
  %cmp2441 = icmp eq i32 %conv2440, 100
  br i1 %cmp2441, label %if.then.2443, label %if.end.2444

if.then.2443:                                     ; preds = %land.lhs.true.2438
  store i32 38, i32* %retval
  br label %return

if.end.2444:                                      ; preds = %land.lhs.true.2438, %land.lhs.true.2433, %land.lhs.true.2428, %land.lhs.true.2423, %sw.bb.2418
  br label %unknown

sw.default.2445:                                  ; preds = %sw.bb.2388
  br label %unknown

sw.bb.2446:                                       ; preds = %sw.bb.2257
  %885 = load i8*, i8** %name.addr, align 8
  %arrayidx2447 = getelementptr inbounds i8, i8* %885, i64 1
  %886 = load i8, i8* %arrayidx2447, align 1
  %conv2448 = sext i8 %886 to i32
  %cmp2449 = icmp eq i32 %conv2448, 111
  br i1 %cmp2449, label %land.lhs.true.2451, label %if.end.2477

land.lhs.true.2451:                               ; preds = %sw.bb.2446
  %887 = load i8*, i8** %name.addr, align 8
  %arrayidx2452 = getelementptr inbounds i8, i8* %887, i64 2
  %888 = load i8, i8* %arrayidx2452, align 1
  %conv2453 = sext i8 %888 to i32
  %cmp2454 = icmp eq i32 %conv2453, 114
  br i1 %cmp2454, label %land.lhs.true.2456, label %if.end.2477

land.lhs.true.2456:                               ; preds = %land.lhs.true.2451
  %889 = load i8*, i8** %name.addr, align 8
  %arrayidx2457 = getelementptr inbounds i8, i8* %889, i64 3
  %890 = load i8, i8* %arrayidx2457, align 1
  %conv2458 = sext i8 %890 to i32
  %cmp2459 = icmp eq i32 %conv2458, 101
  br i1 %cmp2459, label %land.lhs.true.2461, label %if.end.2477

land.lhs.true.2461:                               ; preds = %land.lhs.true.2456
  %891 = load i8*, i8** %name.addr, align 8
  %arrayidx2462 = getelementptr inbounds i8, i8* %891, i64 4
  %892 = load i8, i8* %arrayidx2462, align 1
  %conv2463 = sext i8 %892 to i32
  %cmp2464 = icmp eq i32 %conv2463, 97
  br i1 %cmp2464, label %land.lhs.true.2466, label %if.end.2477

land.lhs.true.2466:                               ; preds = %land.lhs.true.2461
  %893 = load i8*, i8** %name.addr, align 8
  %arrayidx2467 = getelementptr inbounds i8, i8* %893, i64 5
  %894 = load i8, i8* %arrayidx2467, align 1
  %conv2468 = sext i8 %894 to i32
  %cmp2469 = icmp eq i32 %conv2468, 99
  br i1 %cmp2469, label %land.lhs.true.2471, label %if.end.2477

land.lhs.true.2471:                               ; preds = %land.lhs.true.2466
  %895 = load i8*, i8** %name.addr, align 8
  %arrayidx2472 = getelementptr inbounds i8, i8* %895, i64 6
  %896 = load i8, i8* %arrayidx2472, align 1
  %conv2473 = sext i8 %896 to i32
  %cmp2474 = icmp eq i32 %conv2473, 104
  br i1 %cmp2474, label %if.then.2476, label %if.end.2477

if.then.2476:                                     ; preds = %land.lhs.true.2471
  store i32 63, i32* %retval
  br label %return

if.end.2477:                                      ; preds = %land.lhs.true.2471, %land.lhs.true.2466, %land.lhs.true.2461, %land.lhs.true.2456, %land.lhs.true.2451, %sw.bb.2446
  br label %unknown

sw.bb.2478:                                       ; preds = %sw.bb.2257
  %897 = load i8*, i8** %name.addr, align 8
  %arrayidx2479 = getelementptr inbounds i8, i8* %897, i64 1
  %898 = load i8, i8* %arrayidx2479, align 1
  %conv2480 = sext i8 %898 to i32
  %cmp2481 = icmp eq i32 %conv2480, 101
  br i1 %cmp2481, label %land.lhs.true.2483, label %if.end.2521

land.lhs.true.2483:                               ; preds = %sw.bb.2478
  %899 = load i8*, i8** %name.addr, align 8
  %arrayidx2484 = getelementptr inbounds i8, i8* %899, i64 2
  %900 = load i8, i8* %arrayidx2484, align 1
  %conv2485 = sext i8 %900 to i32
  %cmp2486 = icmp eq i32 %conv2485, 116
  br i1 %cmp2486, label %land.lhs.true.2488, label %if.end.2521

land.lhs.true.2488:                               ; preds = %land.lhs.true.2483
  %901 = load i8*, i8** %name.addr, align 8
  %arrayidx2489 = getelementptr inbounds i8, i8* %901, i64 3
  %902 = load i8, i8* %arrayidx2489, align 1
  %conv2490 = sext i8 %902 to i32
  %cmp2491 = icmp eq i32 %conv2490, 112
  br i1 %cmp2491, label %if.then.2493, label %if.end.2521

if.then.2493:                                     ; preds = %land.lhs.true.2488
  %903 = load i8*, i8** %name.addr, align 8
  %arrayidx2494 = getelementptr inbounds i8, i8* %903, i64 4
  %904 = load i8, i8* %arrayidx2494, align 1
  %conv2495 = sext i8 %904 to i32
  switch i32 %conv2495, label %sw.default.2520 [
    i32 103, label %sw.bb.2496
    i32 112, label %sw.bb.2508
  ]

sw.bb.2496:                                       ; preds = %if.then.2493
  %905 = load i8*, i8** %name.addr, align 8
  %arrayidx2497 = getelementptr inbounds i8, i8* %905, i64 5
  %906 = load i8, i8* %arrayidx2497, align 1
  %conv2498 = sext i8 %906 to i32
  %cmp2499 = icmp eq i32 %conv2498, 114
  br i1 %cmp2499, label %land.lhs.true.2501, label %if.end.2507

land.lhs.true.2501:                               ; preds = %sw.bb.2496
  %907 = load i8*, i8** %name.addr, align 8
  %arrayidx2502 = getelementptr inbounds i8, i8* %907, i64 6
  %908 = load i8, i8* %arrayidx2502, align 1
  %conv2503 = sext i8 %908 to i32
  %cmp2504 = icmp eq i32 %conv2503, 112
  br i1 %cmp2504, label %if.then.2506, label %if.end.2507

if.then.2506:                                     ; preds = %land.lhs.true.2501
  store i32 -80, i32* %retval
  br label %return

if.end.2507:                                      ; preds = %land.lhs.true.2501, %sw.bb.2496
  br label %unknown

sw.bb.2508:                                       ; preds = %if.then.2493
  %909 = load i8*, i8** %name.addr, align 8
  %arrayidx2509 = getelementptr inbounds i8, i8* %909, i64 5
  %910 = load i8, i8* %arrayidx2509, align 1
  %conv2510 = sext i8 %910 to i32
  %cmp2511 = icmp eq i32 %conv2510, 105
  br i1 %cmp2511, label %land.lhs.true.2513, label %if.end.2519

land.lhs.true.2513:                               ; preds = %sw.bb.2508
  %911 = load i8*, i8** %name.addr, align 8
  %arrayidx2514 = getelementptr inbounds i8, i8* %911, i64 6
  %912 = load i8, i8* %arrayidx2514, align 1
  %conv2515 = sext i8 %912 to i32
  %cmp2516 = icmp eq i32 %conv2515, 100
  br i1 %cmp2516, label %if.then.2518, label %if.end.2519

if.then.2518:                                     ; preds = %land.lhs.true.2513
  store i32 -81, i32* %retval
  br label %return

if.end.2519:                                      ; preds = %land.lhs.true.2513, %sw.bb.2508
  br label %unknown

sw.default.2520:                                  ; preds = %if.then.2493
  br label %unknown

if.end.2521:                                      ; preds = %land.lhs.true.2488, %land.lhs.true.2483, %sw.bb.2478
  br label %unknown

sw.bb.2522:                                       ; preds = %sw.bb.2257
  %913 = load i8*, i8** %name.addr, align 8
  %arrayidx2523 = getelementptr inbounds i8, i8* %913, i64 1
  %914 = load i8, i8* %arrayidx2523, align 1
  %conv2524 = sext i8 %914 to i32
  %cmp2525 = icmp eq i32 %conv2524, 99
  br i1 %cmp2525, label %land.lhs.true.2527, label %if.end.2553

land.lhs.true.2527:                               ; preds = %sw.bb.2522
  %915 = load i8*, i8** %name.addr, align 8
  %arrayidx2528 = getelementptr inbounds i8, i8* %915, i64 2
  %916 = load i8, i8* %arrayidx2528, align 1
  %conv2529 = sext i8 %916 to i32
  %cmp2530 = icmp eq i32 %conv2529, 102
  br i1 %cmp2530, label %land.lhs.true.2532, label %if.end.2553

land.lhs.true.2532:                               ; preds = %land.lhs.true.2527
  %917 = load i8*, i8** %name.addr, align 8
  %arrayidx2533 = getelementptr inbounds i8, i8* %917, i64 3
  %918 = load i8, i8* %arrayidx2533, align 1
  %conv2534 = sext i8 %918 to i32
  %cmp2535 = icmp eq i32 %conv2534, 105
  br i1 %cmp2535, label %land.lhs.true.2537, label %if.end.2553

land.lhs.true.2537:                               ; preds = %land.lhs.true.2532
  %919 = load i8*, i8** %name.addr, align 8
  %arrayidx2538 = getelementptr inbounds i8, i8* %919, i64 4
  %920 = load i8, i8* %arrayidx2538, align 1
  %conv2539 = sext i8 %920 to i32
  %cmp2540 = icmp eq i32 %conv2539, 114
  br i1 %cmp2540, label %land.lhs.true.2542, label %if.end.2553

land.lhs.true.2542:                               ; preds = %land.lhs.true.2537
  %921 = load i8*, i8** %name.addr, align 8
  %arrayidx2543 = getelementptr inbounds i8, i8* %921, i64 5
  %922 = load i8, i8* %arrayidx2543, align 1
  %conv2544 = sext i8 %922 to i32
  %cmp2545 = icmp eq i32 %conv2544, 115
  br i1 %cmp2545, label %land.lhs.true.2547, label %if.end.2553

land.lhs.true.2547:                               ; preds = %land.lhs.true.2542
  %923 = load i8*, i8** %name.addr, align 8
  %arrayidx2548 = getelementptr inbounds i8, i8* %923, i64 6
  %924 = load i8, i8* %arrayidx2548, align 1
  %conv2549 = sext i8 %924 to i32
  %cmp2550 = icmp eq i32 %conv2549, 116
  br i1 %cmp2550, label %if.then.2552, label %if.end.2553

if.then.2552:                                     ; preds = %land.lhs.true.2547
  store i32 -109, i32* %retval
  br label %return

if.end.2553:                                      ; preds = %land.lhs.true.2547, %land.lhs.true.2542, %land.lhs.true.2537, %land.lhs.true.2532, %land.lhs.true.2527, %sw.bb.2522
  br label %unknown

sw.bb.2554:                                       ; preds = %sw.bb.2257
  %925 = load i8*, i8** %name.addr, align 8
  %arrayidx2555 = getelementptr inbounds i8, i8* %925, i64 1
  %926 = load i8, i8* %arrayidx2555, align 1
  %conv2556 = sext i8 %926 to i32
  %cmp2557 = icmp eq i32 %conv2556, 112
  br i1 %cmp2557, label %land.lhs.true.2559, label %if.end.2585

land.lhs.true.2559:                               ; preds = %sw.bb.2554
  %927 = load i8*, i8** %name.addr, align 8
  %arrayidx2560 = getelementptr inbounds i8, i8* %927, i64 2
  %928 = load i8, i8* %arrayidx2560, align 1
  %conv2561 = sext i8 %928 to i32
  %cmp2562 = icmp eq i32 %conv2561, 101
  br i1 %cmp2562, label %land.lhs.true.2564, label %if.end.2585

land.lhs.true.2564:                               ; preds = %land.lhs.true.2559
  %929 = load i8*, i8** %name.addr, align 8
  %arrayidx2565 = getelementptr inbounds i8, i8* %929, i64 3
  %930 = load i8, i8* %arrayidx2565, align 1
  %conv2566 = sext i8 %930 to i32
  %cmp2567 = icmp eq i32 %conv2566, 110
  br i1 %cmp2567, label %land.lhs.true.2569, label %if.end.2585

land.lhs.true.2569:                               ; preds = %land.lhs.true.2564
  %931 = load i8*, i8** %name.addr, align 8
  %arrayidx2570 = getelementptr inbounds i8, i8* %931, i64 4
  %932 = load i8, i8* %arrayidx2570, align 1
  %conv2571 = sext i8 %932 to i32
  %cmp2572 = icmp eq i32 %conv2571, 100
  br i1 %cmp2572, label %land.lhs.true.2574, label %if.end.2585

land.lhs.true.2574:                               ; preds = %land.lhs.true.2569
  %933 = load i8*, i8** %name.addr, align 8
  %arrayidx2575 = getelementptr inbounds i8, i8* %933, i64 5
  %934 = load i8, i8* %arrayidx2575, align 1
  %conv2576 = sext i8 %934 to i32
  %cmp2577 = icmp eq i32 %conv2576, 105
  br i1 %cmp2577, label %land.lhs.true.2579, label %if.end.2585

land.lhs.true.2579:                               ; preds = %land.lhs.true.2574
  %935 = load i8*, i8** %name.addr, align 8
  %arrayidx2580 = getelementptr inbounds i8, i8* %935, i64 6
  %936 = load i8, i8* %arrayidx2580, align 1
  %conv2581 = sext i8 %936 to i32
  %cmp2582 = icmp eq i32 %conv2581, 114
  br i1 %cmp2582, label %if.then.2584, label %if.end.2585

if.then.2584:                                     ; preds = %land.lhs.true.2579
  store i32 -134, i32* %retval
  br label %return

if.end.2585:                                      ; preds = %land.lhs.true.2579, %land.lhs.true.2574, %land.lhs.true.2569, %land.lhs.true.2564, %land.lhs.true.2559, %sw.bb.2554
  br label %unknown

sw.bb.2586:                                       ; preds = %sw.bb.2257
  %937 = load i8*, i8** %name.addr, align 8
  %arrayidx2587 = getelementptr inbounds i8, i8* %937, i64 1
  %938 = load i8, i8* %arrayidx2587, align 1
  %conv2588 = sext i8 %938 to i32
  %cmp2589 = icmp eq i32 %conv2588, 97
  br i1 %cmp2589, label %land.lhs.true.2591, label %if.end.2617

land.lhs.true.2591:                               ; preds = %sw.bb.2586
  %939 = load i8*, i8** %name.addr, align 8
  %arrayidx2592 = getelementptr inbounds i8, i8* %939, i64 2
  %940 = load i8, i8* %arrayidx2592, align 1
  %conv2593 = sext i8 %940 to i32
  %cmp2594 = icmp eq i32 %conv2593, 99
  br i1 %cmp2594, label %land.lhs.true.2596, label %if.end.2617

land.lhs.true.2596:                               ; preds = %land.lhs.true.2591
  %941 = load i8*, i8** %name.addr, align 8
  %arrayidx2597 = getelementptr inbounds i8, i8* %941, i64 3
  %942 = load i8, i8* %arrayidx2597, align 1
  %conv2598 = sext i8 %942 to i32
  %cmp2599 = icmp eq i32 %conv2598, 107
  br i1 %cmp2599, label %land.lhs.true.2601, label %if.end.2617

land.lhs.true.2601:                               ; preds = %land.lhs.true.2596
  %943 = load i8*, i8** %name.addr, align 8
  %arrayidx2602 = getelementptr inbounds i8, i8* %943, i64 4
  %944 = load i8, i8* %arrayidx2602, align 1
  %conv2603 = sext i8 %944 to i32
  %cmp2604 = icmp eq i32 %conv2603, 97
  br i1 %cmp2604, label %land.lhs.true.2606, label %if.end.2617

land.lhs.true.2606:                               ; preds = %land.lhs.true.2601
  %945 = load i8*, i8** %name.addr, align 8
  %arrayidx2607 = getelementptr inbounds i8, i8* %945, i64 5
  %946 = load i8, i8* %arrayidx2607, align 1
  %conv2608 = sext i8 %946 to i32
  %cmp2609 = icmp eq i32 %conv2608, 103
  br i1 %cmp2609, label %land.lhs.true.2611, label %if.end.2617

land.lhs.true.2611:                               ; preds = %land.lhs.true.2606
  %947 = load i8*, i8** %name.addr, align 8
  %arrayidx2612 = getelementptr inbounds i8, i8* %947, i64 6
  %948 = load i8, i8* %arrayidx2612, align 1
  %conv2613 = sext i8 %948 to i32
  %cmp2614 = icmp eq i32 %conv2613, 101
  br i1 %cmp2614, label %if.then.2616, label %if.end.2617

if.then.2616:                                     ; preds = %land.lhs.true.2611
  store i32 139, i32* %retval
  br label %return

if.end.2617:                                      ; preds = %land.lhs.true.2611, %land.lhs.true.2606, %land.lhs.true.2601, %land.lhs.true.2596, %land.lhs.true.2591, %sw.bb.2586
  br label %unknown

sw.bb.2618:                                       ; preds = %sw.bb.2257
  %949 = load i8*, i8** %name.addr, align 8
  %arrayidx2619 = getelementptr inbounds i8, i8* %949, i64 1
  %950 = load i8, i8* %arrayidx2619, align 1
  %conv2620 = sext i8 %950 to i32
  %cmp2621 = icmp eq i32 %conv2620, 101
  br i1 %cmp2621, label %if.then.2623, label %if.end.2693

if.then.2623:                                     ; preds = %sw.bb.2618
  %951 = load i8*, i8** %name.addr, align 8
  %arrayidx2624 = getelementptr inbounds i8, i8* %951, i64 2
  %952 = load i8, i8* %arrayidx2624, align 1
  %conv2625 = sext i8 %952 to i32
  switch i32 %conv2625, label %sw.default.2692 [
    i32 97, label %sw.bb.2626
    i32 113, label %sw.bb.2648
    i32 118, label %sw.bb.2670
  ]

sw.bb.2626:                                       ; preds = %if.then.2623
  %953 = load i8*, i8** %name.addr, align 8
  %arrayidx2627 = getelementptr inbounds i8, i8* %953, i64 3
  %954 = load i8, i8* %arrayidx2627, align 1
  %conv2628 = sext i8 %954 to i32
  %cmp2629 = icmp eq i32 %conv2628, 100
  br i1 %cmp2629, label %land.lhs.true.2631, label %if.end.2647

land.lhs.true.2631:                               ; preds = %sw.bb.2626
  %955 = load i8*, i8** %name.addr, align 8
  %arrayidx2632 = getelementptr inbounds i8, i8* %955, i64 4
  %956 = load i8, i8* %arrayidx2632, align 1
  %conv2633 = sext i8 %956 to i32
  %cmp2634 = icmp eq i32 %conv2633, 100
  br i1 %cmp2634, label %land.lhs.true.2636, label %if.end.2647

land.lhs.true.2636:                               ; preds = %land.lhs.true.2631
  %957 = load i8*, i8** %name.addr, align 8
  %arrayidx2637 = getelementptr inbounds i8, i8* %957, i64 5
  %958 = load i8, i8* %arrayidx2637, align 1
  %conv2638 = sext i8 %958 to i32
  %cmp2639 = icmp eq i32 %conv2638, 105
  br i1 %cmp2639, label %land.lhs.true.2641, label %if.end.2647

land.lhs.true.2641:                               ; preds = %land.lhs.true.2636
  %959 = load i8*, i8** %name.addr, align 8
  %arrayidx2642 = getelementptr inbounds i8, i8* %959, i64 6
  %960 = load i8, i8* %arrayidx2642, align 1
  %conv2643 = sext i8 %960 to i32
  %cmp2644 = icmp eq i32 %conv2643, 114
  br i1 %cmp2644, label %if.then.2646, label %if.end.2647

if.then.2646:                                     ; preds = %land.lhs.true.2641
  store i32 -155, i32* %retval
  br label %return

if.end.2647:                                      ; preds = %land.lhs.true.2641, %land.lhs.true.2636, %land.lhs.true.2631, %sw.bb.2626
  br label %unknown

sw.bb.2648:                                       ; preds = %if.then.2623
  %961 = load i8*, i8** %name.addr, align 8
  %arrayidx2649 = getelementptr inbounds i8, i8* %961, i64 3
  %962 = load i8, i8* %arrayidx2649, align 1
  %conv2650 = sext i8 %962 to i32
  %cmp2651 = icmp eq i32 %conv2650, 117
  br i1 %cmp2651, label %land.lhs.true.2653, label %if.end.2669

land.lhs.true.2653:                               ; preds = %sw.bb.2648
  %963 = load i8*, i8** %name.addr, align 8
  %arrayidx2654 = getelementptr inbounds i8, i8* %963, i64 4
  %964 = load i8, i8* %arrayidx2654, align 1
  %conv2655 = sext i8 %964 to i32
  %cmp2656 = icmp eq i32 %conv2655, 105
  br i1 %cmp2656, label %land.lhs.true.2658, label %if.end.2669

land.lhs.true.2658:                               ; preds = %land.lhs.true.2653
  %965 = load i8*, i8** %name.addr, align 8
  %arrayidx2659 = getelementptr inbounds i8, i8* %965, i64 5
  %966 = load i8, i8* %arrayidx2659, align 1
  %conv2660 = sext i8 %966 to i32
  %cmp2661 = icmp eq i32 %conv2660, 114
  br i1 %cmp2661, label %land.lhs.true.2663, label %if.end.2669

land.lhs.true.2663:                               ; preds = %land.lhs.true.2658
  %967 = load i8*, i8** %name.addr, align 8
  %arrayidx2664 = getelementptr inbounds i8, i8* %967, i64 6
  %968 = load i8, i8* %arrayidx2664, align 1
  %conv2665 = sext i8 %968 to i32
  %cmp2666 = icmp eq i32 %conv2665, 101
  br i1 %cmp2666, label %if.then.2668, label %if.end.2669

if.then.2668:                                     ; preds = %land.lhs.true.2663
  store i32 163, i32* %retval
  br label %return

if.end.2669:                                      ; preds = %land.lhs.true.2663, %land.lhs.true.2658, %land.lhs.true.2653, %sw.bb.2648
  br label %unknown

sw.bb.2670:                                       ; preds = %if.then.2623
  %969 = load i8*, i8** %name.addr, align 8
  %arrayidx2671 = getelementptr inbounds i8, i8* %969, i64 3
  %970 = load i8, i8* %arrayidx2671, align 1
  %conv2672 = sext i8 %970 to i32
  %cmp2673 = icmp eq i32 %conv2672, 101
  br i1 %cmp2673, label %land.lhs.true.2675, label %if.end.2691

land.lhs.true.2675:                               ; preds = %sw.bb.2670
  %971 = load i8*, i8** %name.addr, align 8
  %arrayidx2676 = getelementptr inbounds i8, i8* %971, i64 4
  %972 = load i8, i8* %arrayidx2676, align 1
  %conv2677 = sext i8 %972 to i32
  %cmp2678 = icmp eq i32 %conv2677, 114
  br i1 %cmp2678, label %land.lhs.true.2680, label %if.end.2691

land.lhs.true.2680:                               ; preds = %land.lhs.true.2675
  %973 = load i8*, i8** %name.addr, align 8
  %arrayidx2681 = getelementptr inbounds i8, i8* %973, i64 5
  %974 = load i8, i8* %arrayidx2681, align 1
  %conv2682 = sext i8 %974 to i32
  %cmp2683 = icmp eq i32 %conv2682, 115
  br i1 %cmp2683, label %land.lhs.true.2685, label %if.end.2691

land.lhs.true.2685:                               ; preds = %land.lhs.true.2680
  %975 = load i8*, i8** %name.addr, align 8
  %arrayidx2686 = getelementptr inbounds i8, i8* %975, i64 6
  %976 = load i8, i8* %arrayidx2686, align 1
  %conv2687 = sext i8 %976 to i32
  %cmp2688 = icmp eq i32 %conv2687, 101
  br i1 %cmp2688, label %if.then.2690, label %if.end.2691

if.then.2690:                                     ; preds = %land.lhs.true.2685
  store i32 -166, i32* %retval
  br label %return

if.end.2691:                                      ; preds = %land.lhs.true.2685, %land.lhs.true.2680, %land.lhs.true.2675, %sw.bb.2670
  br label %unknown

sw.default.2692:                                  ; preds = %if.then.2623
  br label %unknown

if.end.2693:                                      ; preds = %sw.bb.2618
  br label %unknown

sw.bb.2694:                                       ; preds = %sw.bb.2257
  %977 = load i8*, i8** %name.addr, align 8
  %arrayidx2695 = getelementptr inbounds i8, i8* %977, i64 1
  %978 = load i8, i8* %arrayidx2695, align 1
  %conv2696 = sext i8 %978 to i32
  switch i32 %conv2696, label %sw.default.2897 [
    i32 101, label %sw.bb.2697
    i32 104, label %sw.bb.2745
    i32 112, label %sw.bb.2772
    i32 121, label %sw.bb.2799
  ]

sw.bb.2697:                                       ; preds = %sw.bb.2694
  %979 = load i8*, i8** %name.addr, align 8
  %arrayidx2698 = getelementptr inbounds i8, i8* %979, i64 2
  %980 = load i8, i8* %arrayidx2698, align 1
  %conv2699 = sext i8 %980 to i32
  switch i32 %conv2699, label %sw.default.2744 [
    i32 101, label %sw.bb.2700
    i32 116, label %sw.bb.2722
  ]

sw.bb.2700:                                       ; preds = %sw.bb.2697
  %981 = load i8*, i8** %name.addr, align 8
  %arrayidx2701 = getelementptr inbounds i8, i8* %981, i64 3
  %982 = load i8, i8* %arrayidx2701, align 1
  %conv2702 = sext i8 %982 to i32
  %cmp2703 = icmp eq i32 %conv2702, 107
  br i1 %cmp2703, label %land.lhs.true.2705, label %if.end.2721

land.lhs.true.2705:                               ; preds = %sw.bb.2700
  %983 = load i8*, i8** %name.addr, align 8
  %arrayidx2706 = getelementptr inbounds i8, i8* %983, i64 4
  %984 = load i8, i8* %arrayidx2706, align 1
  %conv2707 = sext i8 %984 to i32
  %cmp2708 = icmp eq i32 %conv2707, 100
  br i1 %cmp2708, label %land.lhs.true.2710, label %if.end.2721

land.lhs.true.2710:                               ; preds = %land.lhs.true.2705
  %985 = load i8*, i8** %name.addr, align 8
  %arrayidx2711 = getelementptr inbounds i8, i8* %985, i64 5
  %986 = load i8, i8* %arrayidx2711, align 1
  %conv2712 = sext i8 %986 to i32
  %cmp2713 = icmp eq i32 %conv2712, 105
  br i1 %cmp2713, label %land.lhs.true.2715, label %if.end.2721

land.lhs.true.2715:                               ; preds = %land.lhs.true.2710
  %987 = load i8*, i8** %name.addr, align 8
  %arrayidx2716 = getelementptr inbounds i8, i8* %987, i64 6
  %988 = load i8, i8* %arrayidx2716, align 1
  %conv2717 = sext i8 %988 to i32
  %cmp2718 = icmp eq i32 %conv2717, 114
  br i1 %cmp2718, label %if.then.2720, label %if.end.2721

if.then.2720:                                     ; preds = %land.lhs.true.2715
  store i32 -173, i32* %retval
  br label %return

if.end.2721:                                      ; preds = %land.lhs.true.2715, %land.lhs.true.2710, %land.lhs.true.2705, %sw.bb.2700
  br label %unknown

sw.bb.2722:                                       ; preds = %sw.bb.2697
  %989 = load i8*, i8** %name.addr, align 8
  %arrayidx2723 = getelementptr inbounds i8, i8* %989, i64 3
  %990 = load i8, i8* %arrayidx2723, align 1
  %conv2724 = sext i8 %990 to i32
  %cmp2725 = icmp eq i32 %conv2724, 112
  br i1 %cmp2725, label %land.lhs.true.2727, label %if.end.2743

land.lhs.true.2727:                               ; preds = %sw.bb.2722
  %991 = load i8*, i8** %name.addr, align 8
  %arrayidx2728 = getelementptr inbounds i8, i8* %991, i64 4
  %992 = load i8, i8* %arrayidx2728, align 1
  %conv2729 = sext i8 %992 to i32
  %cmp2730 = icmp eq i32 %conv2729, 103
  br i1 %cmp2730, label %land.lhs.true.2732, label %if.end.2743

land.lhs.true.2732:                               ; preds = %land.lhs.true.2727
  %993 = load i8*, i8** %name.addr, align 8
  %arrayidx2733 = getelementptr inbounds i8, i8* %993, i64 5
  %994 = load i8, i8* %arrayidx2733, align 1
  %conv2734 = sext i8 %994 to i32
  %cmp2735 = icmp eq i32 %conv2734, 114
  br i1 %cmp2735, label %land.lhs.true.2737, label %if.end.2743

land.lhs.true.2737:                               ; preds = %land.lhs.true.2732
  %995 = load i8*, i8** %name.addr, align 8
  %arrayidx2738 = getelementptr inbounds i8, i8* %995, i64 6
  %996 = load i8, i8* %arrayidx2738, align 1
  %conv2739 = sext i8 %996 to i32
  %cmp2740 = icmp eq i32 %conv2739, 112
  br i1 %cmp2740, label %if.then.2742, label %if.end.2743

if.then.2742:                                     ; preds = %land.lhs.true.2737
  store i32 -182, i32* %retval
  br label %return

if.end.2743:                                      ; preds = %land.lhs.true.2737, %land.lhs.true.2732, %land.lhs.true.2727, %sw.bb.2722
  br label %unknown

sw.default.2744:                                  ; preds = %sw.bb.2697
  br label %unknown

sw.bb.2745:                                       ; preds = %sw.bb.2694
  %997 = load i8*, i8** %name.addr, align 8
  %arrayidx2746 = getelementptr inbounds i8, i8* %997, i64 2
  %998 = load i8, i8* %arrayidx2746, align 1
  %conv2747 = sext i8 %998 to i32
  %cmp2748 = icmp eq i32 %conv2747, 109
  br i1 %cmp2748, label %land.lhs.true.2750, label %if.end.2771

land.lhs.true.2750:                               ; preds = %sw.bb.2745
  %999 = load i8*, i8** %name.addr, align 8
  %arrayidx2751 = getelementptr inbounds i8, i8* %999, i64 3
  %1000 = load i8, i8* %arrayidx2751, align 1
  %conv2752 = sext i8 %1000 to i32
  %cmp2753 = icmp eq i32 %conv2752, 114
  br i1 %cmp2753, label %land.lhs.true.2755, label %if.end.2771

land.lhs.true.2755:                               ; preds = %land.lhs.true.2750
  %1001 = load i8*, i8** %name.addr, align 8
  %arrayidx2756 = getelementptr inbounds i8, i8* %1001, i64 4
  %1002 = load i8, i8* %arrayidx2756, align 1
  %conv2757 = sext i8 %1002 to i32
  %cmp2758 = icmp eq i32 %conv2757, 101
  br i1 %cmp2758, label %land.lhs.true.2760, label %if.end.2771

land.lhs.true.2760:                               ; preds = %land.lhs.true.2755
  %1003 = load i8*, i8** %name.addr, align 8
  %arrayidx2761 = getelementptr inbounds i8, i8* %1003, i64 5
  %1004 = load i8, i8* %arrayidx2761, align 1
  %conv2762 = sext i8 %1004 to i32
  %cmp2763 = icmp eq i32 %conv2762, 97
  br i1 %cmp2763, label %land.lhs.true.2765, label %if.end.2771

land.lhs.true.2765:                               ; preds = %land.lhs.true.2760
  %1005 = load i8*, i8** %name.addr, align 8
  %arrayidx2766 = getelementptr inbounds i8, i8* %1005, i64 6
  %1006 = load i8, i8* %arrayidx2766, align 1
  %conv2767 = sext i8 %1006 to i32
  %cmp2768 = icmp eq i32 %conv2767, 100
  br i1 %cmp2768, label %if.then.2770, label %if.end.2771

if.then.2770:                                     ; preds = %land.lhs.true.2765
  store i32 -191, i32* %retval
  br label %return

if.end.2771:                                      ; preds = %land.lhs.true.2765, %land.lhs.true.2760, %land.lhs.true.2755, %land.lhs.true.2750, %sw.bb.2745
  br label %unknown

sw.bb.2772:                                       ; preds = %sw.bb.2694
  %1007 = load i8*, i8** %name.addr, align 8
  %arrayidx2773 = getelementptr inbounds i8, i8* %1007, i64 2
  %1008 = load i8, i8* %arrayidx2773, align 1
  %conv2774 = sext i8 %1008 to i32
  %cmp2775 = icmp eq i32 %conv2774, 114
  br i1 %cmp2775, label %land.lhs.true.2777, label %if.end.2798

land.lhs.true.2777:                               ; preds = %sw.bb.2772
  %1009 = load i8*, i8** %name.addr, align 8
  %arrayidx2778 = getelementptr inbounds i8, i8* %1009, i64 3
  %1010 = load i8, i8* %arrayidx2778, align 1
  %conv2779 = sext i8 %1010 to i32
  %cmp2780 = icmp eq i32 %conv2779, 105
  br i1 %cmp2780, label %land.lhs.true.2782, label %if.end.2798

land.lhs.true.2782:                               ; preds = %land.lhs.true.2777
  %1011 = load i8*, i8** %name.addr, align 8
  %arrayidx2783 = getelementptr inbounds i8, i8* %1011, i64 4
  %1012 = load i8, i8* %arrayidx2783, align 1
  %conv2784 = sext i8 %1012 to i32
  %cmp2785 = icmp eq i32 %conv2784, 110
  br i1 %cmp2785, label %land.lhs.true.2787, label %if.end.2798

land.lhs.true.2787:                               ; preds = %land.lhs.true.2782
  %1013 = load i8*, i8** %name.addr, align 8
  %arrayidx2788 = getelementptr inbounds i8, i8* %1013, i64 5
  %1014 = load i8, i8* %arrayidx2788, align 1
  %conv2789 = sext i8 %1014 to i32
  %cmp2790 = icmp eq i32 %conv2789, 116
  br i1 %cmp2790, label %land.lhs.true.2792, label %if.end.2798

land.lhs.true.2792:                               ; preds = %land.lhs.true.2787
  %1015 = load i8*, i8** %name.addr, align 8
  %arrayidx2793 = getelementptr inbounds i8, i8* %1015, i64 6
  %1016 = load i8, i8* %arrayidx2793, align 1
  %conv2794 = sext i8 %1016 to i32
  %cmp2795 = icmp eq i32 %conv2794, 102
  br i1 %cmp2795, label %if.then.2797, label %if.end.2798

if.then.2797:                                     ; preds = %land.lhs.true.2792
  store i32 -201, i32* %retval
  br label %return

if.end.2798:                                      ; preds = %land.lhs.true.2792, %land.lhs.true.2787, %land.lhs.true.2782, %land.lhs.true.2777, %sw.bb.2772
  br label %unknown

sw.bb.2799:                                       ; preds = %sw.bb.2694
  %1017 = load i8*, i8** %name.addr, align 8
  %arrayidx2800 = getelementptr inbounds i8, i8* %1017, i64 2
  %1018 = load i8, i8* %arrayidx2800, align 1
  %conv2801 = sext i8 %1018 to i32
  switch i32 %conv2801, label %sw.default.2896 [
    i32 109, label %sw.bb.2802
    i32 115, label %sw.bb.2824
  ]

sw.bb.2802:                                       ; preds = %sw.bb.2799
  %1019 = load i8*, i8** %name.addr, align 8
  %arrayidx2803 = getelementptr inbounds i8, i8* %1019, i64 3
  %1020 = load i8, i8* %arrayidx2803, align 1
  %conv2804 = sext i8 %1020 to i32
  %cmp2805 = icmp eq i32 %conv2804, 108
  br i1 %cmp2805, label %land.lhs.true.2807, label %if.end.2823

land.lhs.true.2807:                               ; preds = %sw.bb.2802
  %1021 = load i8*, i8** %name.addr, align 8
  %arrayidx2808 = getelementptr inbounds i8, i8* %1021, i64 4
  %1022 = load i8, i8* %arrayidx2808, align 1
  %conv2809 = sext i8 %1022 to i32
  %cmp2810 = icmp eq i32 %conv2809, 105
  br i1 %cmp2810, label %land.lhs.true.2812, label %if.end.2823

land.lhs.true.2812:                               ; preds = %land.lhs.true.2807
  %1023 = load i8*, i8** %name.addr, align 8
  %arrayidx2813 = getelementptr inbounds i8, i8* %1023, i64 5
  %1024 = load i8, i8* %arrayidx2813, align 1
  %conv2814 = sext i8 %1024 to i32
  %cmp2815 = icmp eq i32 %conv2814, 110
  br i1 %cmp2815, label %land.lhs.true.2817, label %if.end.2823

land.lhs.true.2817:                               ; preds = %land.lhs.true.2812
  %1025 = load i8*, i8** %name.addr, align 8
  %arrayidx2818 = getelementptr inbounds i8, i8* %1025, i64 6
  %1026 = load i8, i8* %arrayidx2818, align 1
  %conv2819 = sext i8 %1026 to i32
  %cmp2820 = icmp eq i32 %conv2819, 107
  br i1 %cmp2820, label %if.then.2822, label %if.end.2823

if.then.2822:                                     ; preds = %land.lhs.true.2817
  store i32 -208, i32* %retval
  br label %return

if.end.2823:                                      ; preds = %land.lhs.true.2817, %land.lhs.true.2812, %land.lhs.true.2807, %sw.bb.2802
  br label %unknown

sw.bb.2824:                                       ; preds = %sw.bb.2799
  %1027 = load i8*, i8** %name.addr, align 8
  %arrayidx2825 = getelementptr inbounds i8, i8* %1027, i64 3
  %1028 = load i8, i8* %arrayidx2825, align 1
  %conv2826 = sext i8 %1028 to i32
  switch i32 %conv2826, label %sw.default.2895 [
    i32 99, label %sw.bb.2827
    i32 111, label %sw.bb.2844
    i32 114, label %sw.bb.2861
    i32 115, label %sw.bb.2878
  ]

sw.bb.2827:                                       ; preds = %sw.bb.2824
  %1029 = load i8*, i8** %name.addr, align 8
  %arrayidx2828 = getelementptr inbounds i8, i8* %1029, i64 4
  %1030 = load i8, i8* %arrayidx2828, align 1
  %conv2829 = sext i8 %1030 to i32
  %cmp2830 = icmp eq i32 %conv2829, 97
  br i1 %cmp2830, label %land.lhs.true.2832, label %if.end.2843

land.lhs.true.2832:                               ; preds = %sw.bb.2827
  %1031 = load i8*, i8** %name.addr, align 8
  %arrayidx2833 = getelementptr inbounds i8, i8* %1031, i64 5
  %1032 = load i8, i8* %arrayidx2833, align 1
  %conv2834 = sext i8 %1032 to i32
  %cmp2835 = icmp eq i32 %conv2834, 108
  br i1 %cmp2835, label %land.lhs.true.2837, label %if.end.2843

land.lhs.true.2837:                               ; preds = %land.lhs.true.2832
  %1033 = load i8*, i8** %name.addr, align 8
  %arrayidx2838 = getelementptr inbounds i8, i8* %1033, i64 6
  %1034 = load i8, i8* %arrayidx2838, align 1
  %conv2839 = sext i8 %1034 to i32
  %cmp2840 = icmp eq i32 %conv2839, 108
  br i1 %cmp2840, label %if.then.2842, label %if.end.2843

if.then.2842:                                     ; preds = %land.lhs.true.2837
  store i32 -209, i32* %retval
  br label %return

if.end.2843:                                      ; preds = %land.lhs.true.2837, %land.lhs.true.2832, %sw.bb.2827
  br label %unknown

sw.bb.2844:                                       ; preds = %sw.bb.2824
  %1035 = load i8*, i8** %name.addr, align 8
  %arrayidx2845 = getelementptr inbounds i8, i8* %1035, i64 4
  %1036 = load i8, i8* %arrayidx2845, align 1
  %conv2846 = sext i8 %1036 to i32
  %cmp2847 = icmp eq i32 %conv2846, 112
  br i1 %cmp2847, label %land.lhs.true.2849, label %if.end.2860

land.lhs.true.2849:                               ; preds = %sw.bb.2844
  %1037 = load i8*, i8** %name.addr, align 8
  %arrayidx2850 = getelementptr inbounds i8, i8* %1037, i64 5
  %1038 = load i8, i8* %arrayidx2850, align 1
  %conv2851 = sext i8 %1038 to i32
  %cmp2852 = icmp eq i32 %conv2851, 101
  br i1 %cmp2852, label %land.lhs.true.2854, label %if.end.2860

land.lhs.true.2854:                               ; preds = %land.lhs.true.2849
  %1039 = load i8*, i8** %name.addr, align 8
  %arrayidx2855 = getelementptr inbounds i8, i8* %1039, i64 6
  %1040 = load i8, i8* %arrayidx2855, align 1
  %conv2856 = sext i8 %1040 to i32
  %cmp2857 = icmp eq i32 %conv2856, 110
  br i1 %cmp2857, label %if.then.2859, label %if.end.2860

if.then.2859:                                     ; preds = %land.lhs.true.2854
  store i32 -210, i32* %retval
  br label %return

if.end.2860:                                      ; preds = %land.lhs.true.2854, %land.lhs.true.2849, %sw.bb.2844
  br label %unknown

sw.bb.2861:                                       ; preds = %sw.bb.2824
  %1041 = load i8*, i8** %name.addr, align 8
  %arrayidx2862 = getelementptr inbounds i8, i8* %1041, i64 4
  %1042 = load i8, i8* %arrayidx2862, align 1
  %conv2863 = sext i8 %1042 to i32
  %cmp2864 = icmp eq i32 %conv2863, 101
  br i1 %cmp2864, label %land.lhs.true.2866, label %if.end.2877

land.lhs.true.2866:                               ; preds = %sw.bb.2861
  %1043 = load i8*, i8** %name.addr, align 8
  %arrayidx2867 = getelementptr inbounds i8, i8* %1043, i64 5
  %1044 = load i8, i8* %arrayidx2867, align 1
  %conv2868 = sext i8 %1044 to i32
  %cmp2869 = icmp eq i32 %conv2868, 97
  br i1 %cmp2869, label %land.lhs.true.2871, label %if.end.2877

land.lhs.true.2871:                               ; preds = %land.lhs.true.2866
  %1045 = load i8*, i8** %name.addr, align 8
  %arrayidx2872 = getelementptr inbounds i8, i8* %1045, i64 6
  %1046 = load i8, i8* %arrayidx2872, align 1
  %conv2873 = sext i8 %1046 to i32
  %cmp2874 = icmp eq i32 %conv2873, 100
  br i1 %cmp2874, label %if.then.2876, label %if.end.2877

if.then.2876:                                     ; preds = %land.lhs.true.2871
  store i32 -211, i32* %retval
  br label %return

if.end.2877:                                      ; preds = %land.lhs.true.2871, %land.lhs.true.2866, %sw.bb.2861
  br label %unknown

sw.bb.2878:                                       ; preds = %sw.bb.2824
  %1047 = load i8*, i8** %name.addr, align 8
  %arrayidx2879 = getelementptr inbounds i8, i8* %1047, i64 4
  %1048 = load i8, i8* %arrayidx2879, align 1
  %conv2880 = sext i8 %1048 to i32
  %cmp2881 = icmp eq i32 %conv2880, 101
  br i1 %cmp2881, label %land.lhs.true.2883, label %if.end.2894

land.lhs.true.2883:                               ; preds = %sw.bb.2878
  %1049 = load i8*, i8** %name.addr, align 8
  %arrayidx2884 = getelementptr inbounds i8, i8* %1049, i64 5
  %1050 = load i8, i8* %arrayidx2884, align 1
  %conv2885 = sext i8 %1050 to i32
  %cmp2886 = icmp eq i32 %conv2885, 101
  br i1 %cmp2886, label %land.lhs.true.2888, label %if.end.2894

land.lhs.true.2888:                               ; preds = %land.lhs.true.2883
  %1051 = load i8*, i8** %name.addr, align 8
  %arrayidx2889 = getelementptr inbounds i8, i8* %1051, i64 6
  %1052 = load i8, i8* %arrayidx2889, align 1
  %conv2890 = sext i8 %1052 to i32
  %cmp2891 = icmp eq i32 %conv2890, 107
  br i1 %cmp2891, label %if.then.2893, label %if.end.2894

if.then.2893:                                     ; preds = %land.lhs.true.2888
  store i32 -212, i32* %retval
  br label %return

if.end.2894:                                      ; preds = %land.lhs.true.2888, %land.lhs.true.2883, %sw.bb.2878
  br label %unknown

sw.default.2895:                                  ; preds = %sw.bb.2824
  br label %unknown

sw.default.2896:                                  ; preds = %sw.bb.2799
  br label %unknown

sw.default.2897:                                  ; preds = %sw.bb.2694
  br label %unknown

sw.bb.2898:                                       ; preds = %sw.bb.2257
  %1053 = load i8*, i8** %name.addr, align 8
  %arrayidx2899 = getelementptr inbounds i8, i8* %1053, i64 1
  %1054 = load i8, i8* %arrayidx2899, align 1
  %conv2900 = sext i8 %1054 to i32
  %cmp2901 = icmp eq i32 %conv2900, 101
  br i1 %cmp2901, label %land.lhs.true.2903, label %if.end.2929

land.lhs.true.2903:                               ; preds = %sw.bb.2898
  %1055 = load i8*, i8** %name.addr, align 8
  %arrayidx2904 = getelementptr inbounds i8, i8* %1055, i64 2
  %1056 = load i8, i8* %arrayidx2904, align 1
  %conv2905 = sext i8 %1056 to i32
  %cmp2906 = icmp eq i32 %conv2905, 108
  br i1 %cmp2906, label %land.lhs.true.2908, label %if.end.2929

land.lhs.true.2908:                               ; preds = %land.lhs.true.2903
  %1057 = load i8*, i8** %name.addr, align 8
  %arrayidx2909 = getelementptr inbounds i8, i8* %1057, i64 3
  %1058 = load i8, i8* %arrayidx2909, align 1
  %conv2910 = sext i8 %1058 to i32
  %cmp2911 = icmp eq i32 %conv2910, 108
  br i1 %cmp2911, label %land.lhs.true.2913, label %if.end.2929

land.lhs.true.2913:                               ; preds = %land.lhs.true.2908
  %1059 = load i8*, i8** %name.addr, align 8
  %arrayidx2914 = getelementptr inbounds i8, i8* %1059, i64 4
  %1060 = load i8, i8* %arrayidx2914, align 1
  %conv2915 = sext i8 %1060 to i32
  %cmp2916 = icmp eq i32 %conv2915, 100
  br i1 %cmp2916, label %land.lhs.true.2918, label %if.end.2929

land.lhs.true.2918:                               ; preds = %land.lhs.true.2913
  %1061 = load i8*, i8** %name.addr, align 8
  %arrayidx2919 = getelementptr inbounds i8, i8* %1061, i64 5
  %1062 = load i8, i8* %arrayidx2919, align 1
  %conv2920 = sext i8 %1062 to i32
  %cmp2921 = icmp eq i32 %conv2920, 105
  br i1 %cmp2921, label %land.lhs.true.2923, label %if.end.2929

land.lhs.true.2923:                               ; preds = %land.lhs.true.2918
  %1063 = load i8*, i8** %name.addr, align 8
  %arrayidx2924 = getelementptr inbounds i8, i8* %1063, i64 6
  %1064 = load i8, i8* %arrayidx2924, align 1
  %conv2925 = sext i8 %1064 to i32
  %cmp2926 = icmp eq i32 %conv2925, 114
  br i1 %cmp2926, label %if.then.2928, label %if.end.2929

if.then.2928:                                     ; preds = %land.lhs.true.2923
  store i32 -216, i32* %retval
  br label %return

if.end.2929:                                      ; preds = %land.lhs.true.2923, %land.lhs.true.2918, %land.lhs.true.2913, %land.lhs.true.2908, %land.lhs.true.2903, %sw.bb.2898
  br label %unknown

sw.bb.2930:                                       ; preds = %sw.bb.2257
  %1065 = load i8*, i8** %name.addr, align 8
  %arrayidx2931 = getelementptr inbounds i8, i8* %1065, i64 1
  %1066 = load i8, i8* %arrayidx2931, align 1
  %conv2932 = sext i8 %1066 to i32
  switch i32 %conv2932, label %sw.default.2987 [
    i32 99, label %sw.bb.2933
    i32 110, label %sw.bb.2960
  ]

sw.bb.2933:                                       ; preds = %sw.bb.2930
  %1067 = load i8*, i8** %name.addr, align 8
  %arrayidx2934 = getelementptr inbounds i8, i8* %1067, i64 2
  %1068 = load i8, i8* %arrayidx2934, align 1
  %conv2935 = sext i8 %1068 to i32
  %cmp2936 = icmp eq i32 %conv2935, 102
  br i1 %cmp2936, label %land.lhs.true.2938, label %if.end.2959

land.lhs.true.2938:                               ; preds = %sw.bb.2933
  %1069 = load i8*, i8** %name.addr, align 8
  %arrayidx2939 = getelementptr inbounds i8, i8* %1069, i64 3
  %1070 = load i8, i8* %arrayidx2939, align 1
  %conv2940 = sext i8 %1070 to i32
  %cmp2941 = icmp eq i32 %conv2940, 105
  br i1 %cmp2941, label %land.lhs.true.2943, label %if.end.2959

land.lhs.true.2943:                               ; preds = %land.lhs.true.2938
  %1071 = load i8*, i8** %name.addr, align 8
  %arrayidx2944 = getelementptr inbounds i8, i8* %1071, i64 4
  %1072 = load i8, i8* %arrayidx2944, align 1
  %conv2945 = sext i8 %1072 to i32
  %cmp2946 = icmp eq i32 %conv2945, 114
  br i1 %cmp2946, label %land.lhs.true.2948, label %if.end.2959

land.lhs.true.2948:                               ; preds = %land.lhs.true.2943
  %1073 = load i8*, i8** %name.addr, align 8
  %arrayidx2949 = getelementptr inbounds i8, i8* %1073, i64 5
  %1074 = load i8, i8* %arrayidx2949, align 1
  %conv2950 = sext i8 %1074 to i32
  %cmp2951 = icmp eq i32 %conv2950, 115
  br i1 %cmp2951, label %land.lhs.true.2953, label %if.end.2959

land.lhs.true.2953:                               ; preds = %land.lhs.true.2948
  %1075 = load i8*, i8** %name.addr, align 8
  %arrayidx2954 = getelementptr inbounds i8, i8* %1075, i64 6
  %1076 = load i8, i8* %arrayidx2954, align 1
  %conv2955 = sext i8 %1076 to i32
  %cmp2956 = icmp eq i32 %conv2955, 116
  br i1 %cmp2956, label %if.then.2958, label %if.end.2959

if.then.2958:                                     ; preds = %land.lhs.true.2953
  store i32 -224, i32* %retval
  br label %return

if.end.2959:                                      ; preds = %land.lhs.true.2953, %land.lhs.true.2948, %land.lhs.true.2943, %land.lhs.true.2938, %sw.bb.2933
  br label %unknown

sw.bb.2960:                                       ; preds = %sw.bb.2930
  %1077 = load i8*, i8** %name.addr, align 8
  %arrayidx2961 = getelementptr inbounds i8, i8* %1077, i64 2
  %1078 = load i8, i8* %arrayidx2961, align 1
  %conv2962 = sext i8 %1078 to i32
  %cmp2963 = icmp eq i32 %conv2962, 115
  br i1 %cmp2963, label %land.lhs.true.2965, label %if.end.2986

land.lhs.true.2965:                               ; preds = %sw.bb.2960
  %1079 = load i8*, i8** %name.addr, align 8
  %arrayidx2966 = getelementptr inbounds i8, i8* %1079, i64 3
  %1080 = load i8, i8* %arrayidx2966, align 1
  %conv2967 = sext i8 %1080 to i32
  %cmp2968 = icmp eq i32 %conv2967, 104
  br i1 %cmp2968, label %land.lhs.true.2970, label %if.end.2986

land.lhs.true.2970:                               ; preds = %land.lhs.true.2965
  %1081 = load i8*, i8** %name.addr, align 8
  %arrayidx2971 = getelementptr inbounds i8, i8* %1081, i64 4
  %1082 = load i8, i8* %arrayidx2971, align 1
  %conv2972 = sext i8 %1082 to i32
  %cmp2973 = icmp eq i32 %conv2972, 105
  br i1 %cmp2973, label %land.lhs.true.2975, label %if.end.2986

land.lhs.true.2975:                               ; preds = %land.lhs.true.2970
  %1083 = load i8*, i8** %name.addr, align 8
  %arrayidx2976 = getelementptr inbounds i8, i8* %1083, i64 5
  %1084 = load i8, i8* %arrayidx2976, align 1
  %conv2977 = sext i8 %1084 to i32
  %cmp2978 = icmp eq i32 %conv2977, 102
  br i1 %cmp2978, label %land.lhs.true.2980, label %if.end.2986

land.lhs.true.2980:                               ; preds = %land.lhs.true.2975
  %1085 = load i8*, i8** %name.addr, align 8
  %arrayidx2981 = getelementptr inbounds i8, i8* %1085, i64 6
  %1086 = load i8, i8* %arrayidx2981, align 1
  %conv2982 = sext i8 %1086 to i32
  %cmp2983 = icmp eq i32 %conv2982, 116
  br i1 %cmp2983, label %if.then.2985, label %if.end.2986

if.then.2985:                                     ; preds = %land.lhs.true.2980
  store i32 -230, i32* %retval
  br label %return

if.end.2986:                                      ; preds = %land.lhs.true.2980, %land.lhs.true.2975, %land.lhs.true.2970, %land.lhs.true.2965, %sw.bb.2960
  br label %unknown

sw.default.2987:                                  ; preds = %sw.bb.2930
  br label %unknown

sw.bb.2988:                                       ; preds = %sw.bb.2257
  %1087 = load i8*, i8** %name.addr, align 8
  %arrayidx2989 = getelementptr inbounds i8, i8* %1087, i64 1
  %1088 = load i8, i8* %arrayidx2989, align 1
  %conv2990 = sext i8 %1088 to i32
  %cmp2991 = icmp eq i32 %conv2990, 97
  br i1 %cmp2991, label %land.lhs.true.2993, label %if.end.3019

land.lhs.true.2993:                               ; preds = %sw.bb.2988
  %1089 = load i8*, i8** %name.addr, align 8
  %arrayidx2994 = getelementptr inbounds i8, i8* %1089, i64 2
  %1090 = load i8, i8* %arrayidx2994, align 1
  %conv2995 = sext i8 %1090 to i32
  %cmp2996 = icmp eq i32 %conv2995, 105
  br i1 %cmp2996, label %land.lhs.true.2998, label %if.end.3019

land.lhs.true.2998:                               ; preds = %land.lhs.true.2993
  %1091 = load i8*, i8** %name.addr, align 8
  %arrayidx2999 = getelementptr inbounds i8, i8* %1091, i64 3
  %1092 = load i8, i8* %arrayidx2999, align 1
  %conv3000 = sext i8 %1092 to i32
  %cmp3001 = icmp eq i32 %conv3000, 116
  br i1 %cmp3001, label %land.lhs.true.3003, label %if.end.3019

land.lhs.true.3003:                               ; preds = %land.lhs.true.2998
  %1093 = load i8*, i8** %name.addr, align 8
  %arrayidx3004 = getelementptr inbounds i8, i8* %1093, i64 4
  %1094 = load i8, i8* %arrayidx3004, align 1
  %conv3005 = sext i8 %1094 to i32
  %cmp3006 = icmp eq i32 %conv3005, 112
  br i1 %cmp3006, label %land.lhs.true.3008, label %if.end.3019

land.lhs.true.3008:                               ; preds = %land.lhs.true.3003
  %1095 = load i8*, i8** %name.addr, align 8
  %arrayidx3009 = getelementptr inbounds i8, i8* %1095, i64 5
  %1096 = load i8, i8* %arrayidx3009, align 1
  %conv3010 = sext i8 %1096 to i32
  %cmp3011 = icmp eq i32 %conv3010, 105
  br i1 %cmp3011, label %land.lhs.true.3013, label %if.end.3019

land.lhs.true.3013:                               ; preds = %land.lhs.true.3008
  %1097 = load i8*, i8** %name.addr, align 8
  %arrayidx3014 = getelementptr inbounds i8, i8* %1097, i64 6
  %1098 = load i8, i8* %arrayidx3014, align 1
  %conv3015 = sext i8 %1098 to i32
  %cmp3016 = icmp eq i32 %conv3015, 100
  br i1 %cmp3016, label %if.then.3018, label %if.end.3019

if.then.3018:                                     ; preds = %land.lhs.true.3013
  store i32 -238, i32* %retval
  br label %return

if.end.3019:                                      ; preds = %land.lhs.true.3013, %land.lhs.true.3008, %land.lhs.true.3003, %land.lhs.true.2998, %land.lhs.true.2993, %sw.bb.2988
  br label %unknown

sw.default.3020:                                  ; preds = %sw.bb.2257
  br label %unknown

sw.bb.3021:                                       ; preds = %entry
  %1099 = load i8*, i8** %name.addr, align 8
  %arrayidx3022 = getelementptr inbounds i8, i8* %1099, i64 0
  %1100 = load i8, i8* %arrayidx3022, align 1
  %conv3023 = sext i8 %1100 to i32
  switch i32 %conv3023, label %sw.default.3721 [
    i32 65, label %sw.bb.3024
    i32 95, label %sw.bb.3061
    i32 99, label %sw.bb.3152
    i32 100, label %sw.bb.3220
    i32 101, label %sw.bb.3257
    i32 102, label %sw.bb.3316
    i32 103, label %sw.bb.3353
    i32 114, label %sw.bb.3482
    i32 115, label %sw.bb.3536
    i32 116, label %sw.bb.3684
  ]

sw.bb.3024:                                       ; preds = %sw.bb.3021
  %1101 = load i8*, i8** %name.addr, align 8
  %arrayidx3025 = getelementptr inbounds i8, i8* %1101, i64 1
  %1102 = load i8, i8* %arrayidx3025, align 1
  %conv3026 = sext i8 %1102 to i32
  %cmp3027 = icmp eq i32 %conv3026, 85
  br i1 %cmp3027, label %land.lhs.true.3029, label %if.end.3060

land.lhs.true.3029:                               ; preds = %sw.bb.3024
  %1103 = load i8*, i8** %name.addr, align 8
  %arrayidx3030 = getelementptr inbounds i8, i8* %1103, i64 2
  %1104 = load i8, i8* %arrayidx3030, align 1
  %conv3031 = sext i8 %1104 to i32
  %cmp3032 = icmp eq i32 %conv3031, 84
  br i1 %cmp3032, label %land.lhs.true.3034, label %if.end.3060

land.lhs.true.3034:                               ; preds = %land.lhs.true.3029
  %1105 = load i8*, i8** %name.addr, align 8
  %arrayidx3035 = getelementptr inbounds i8, i8* %1105, i64 3
  %1106 = load i8, i8* %arrayidx3035, align 1
  %conv3036 = sext i8 %1106 to i32
  %cmp3037 = icmp eq i32 %conv3036, 79
  br i1 %cmp3037, label %land.lhs.true.3039, label %if.end.3060

land.lhs.true.3039:                               ; preds = %land.lhs.true.3034
  %1107 = load i8*, i8** %name.addr, align 8
  %arrayidx3040 = getelementptr inbounds i8, i8* %1107, i64 4
  %1108 = load i8, i8* %arrayidx3040, align 1
  %conv3041 = sext i8 %1108 to i32
  %cmp3042 = icmp eq i32 %conv3041, 76
  br i1 %cmp3042, label %land.lhs.true.3044, label %if.end.3060

land.lhs.true.3044:                               ; preds = %land.lhs.true.3039
  %1109 = load i8*, i8** %name.addr, align 8
  %arrayidx3045 = getelementptr inbounds i8, i8* %1109, i64 5
  %1110 = load i8, i8* %arrayidx3045, align 1
  %conv3046 = sext i8 %1110 to i32
  %cmp3047 = icmp eq i32 %conv3046, 79
  br i1 %cmp3047, label %land.lhs.true.3049, label %if.end.3060

land.lhs.true.3049:                               ; preds = %land.lhs.true.3044
  %1111 = load i8*, i8** %name.addr, align 8
  %arrayidx3050 = getelementptr inbounds i8, i8* %1111, i64 6
  %1112 = load i8, i8* %arrayidx3050, align 1
  %conv3051 = sext i8 %1112 to i32
  %cmp3052 = icmp eq i32 %conv3051, 65
  br i1 %cmp3052, label %land.lhs.true.3054, label %if.end.3060

land.lhs.true.3054:                               ; preds = %land.lhs.true.3049
  %1113 = load i8*, i8** %name.addr, align 8
  %arrayidx3055 = getelementptr inbounds i8, i8* %1113, i64 7
  %1114 = load i8, i8* %arrayidx3055, align 1
  %conv3056 = sext i8 %1114 to i32
  %cmp3057 = icmp eq i32 %conv3056, 68
  br i1 %cmp3057, label %if.then.3059, label %if.end.3060

if.then.3059:                                     ; preds = %land.lhs.true.3054
  store i32 6, i32* %retval
  br label %return

if.end.3060:                                      ; preds = %land.lhs.true.3054, %land.lhs.true.3049, %land.lhs.true.3044, %land.lhs.true.3039, %land.lhs.true.3034, %land.lhs.true.3029, %sw.bb.3024
  br label %unknown

sw.bb.3061:                                       ; preds = %sw.bb.3021
  %1115 = load i8*, i8** %name.addr, align 8
  %arrayidx3062 = getelementptr inbounds i8, i8* %1115, i64 1
  %1116 = load i8, i8* %arrayidx3062, align 1
  %conv3063 = sext i8 %1116 to i32
  %cmp3064 = icmp eq i32 %conv3063, 95
  br i1 %cmp3064, label %if.then.3066, label %if.end.3151

if.then.3066:                                     ; preds = %sw.bb.3061
  %1117 = load i8*, i8** %name.addr, align 8
  %arrayidx3067 = getelementptr inbounds i8, i8* %1117, i64 2
  %1118 = load i8, i8* %arrayidx3067, align 1
  %conv3068 = sext i8 %1118 to i32
  switch i32 %conv3068, label %sw.default.3150 [
    i32 68, label %sw.bb.3069
    i32 70, label %sw.bb.3096
    i32 76, label %sw.bb.3123
  ]

sw.bb.3069:                                       ; preds = %if.then.3066
  %1119 = load i8*, i8** %name.addr, align 8
  %arrayidx3070 = getelementptr inbounds i8, i8* %1119, i64 3
  %1120 = load i8, i8* %arrayidx3070, align 1
  %conv3071 = sext i8 %1120 to i32
  %cmp3072 = icmp eq i32 %conv3071, 65
  br i1 %cmp3072, label %land.lhs.true.3074, label %if.end.3095

land.lhs.true.3074:                               ; preds = %sw.bb.3069
  %1121 = load i8*, i8** %name.addr, align 8
  %arrayidx3075 = getelementptr inbounds i8, i8* %1121, i64 4
  %1122 = load i8, i8* %arrayidx3075, align 1
  %conv3076 = sext i8 %1122 to i32
  %cmp3077 = icmp eq i32 %conv3076, 84
  br i1 %cmp3077, label %land.lhs.true.3079, label %if.end.3095

land.lhs.true.3079:                               ; preds = %land.lhs.true.3074
  %1123 = load i8*, i8** %name.addr, align 8
  %arrayidx3080 = getelementptr inbounds i8, i8* %1123, i64 5
  %1124 = load i8, i8* %arrayidx3080, align 1
  %conv3081 = sext i8 %1124 to i32
  %cmp3082 = icmp eq i32 %conv3081, 65
  br i1 %cmp3082, label %land.lhs.true.3084, label %if.end.3095

land.lhs.true.3084:                               ; preds = %land.lhs.true.3079
  %1125 = load i8*, i8** %name.addr, align 8
  %arrayidx3085 = getelementptr inbounds i8, i8* %1125, i64 6
  %1126 = load i8, i8* %arrayidx3085, align 1
  %conv3086 = sext i8 %1126 to i32
  %cmp3087 = icmp eq i32 %conv3086, 95
  br i1 %cmp3087, label %land.lhs.true.3089, label %if.end.3095

land.lhs.true.3089:                               ; preds = %land.lhs.true.3084
  %1127 = load i8*, i8** %name.addr, align 8
  %arrayidx3090 = getelementptr inbounds i8, i8* %1127, i64 7
  %1128 = load i8, i8* %arrayidx3090, align 1
  %conv3091 = sext i8 %1128 to i32
  %cmp3092 = icmp eq i32 %conv3091, 95
  br i1 %cmp3092, label %if.then.3094, label %if.end.3095

if.then.3094:                                     ; preds = %land.lhs.true.3089
  store i32 4, i32* %retval
  br label %return

if.end.3095:                                      ; preds = %land.lhs.true.3089, %land.lhs.true.3084, %land.lhs.true.3079, %land.lhs.true.3074, %sw.bb.3069
  br label %unknown

sw.bb.3096:                                       ; preds = %if.then.3066
  %1129 = load i8*, i8** %name.addr, align 8
  %arrayidx3097 = getelementptr inbounds i8, i8* %1129, i64 3
  %1130 = load i8, i8* %arrayidx3097, align 1
  %conv3098 = sext i8 %1130 to i32
  %cmp3099 = icmp eq i32 %conv3098, 73
  br i1 %cmp3099, label %land.lhs.true.3101, label %if.end.3122

land.lhs.true.3101:                               ; preds = %sw.bb.3096
  %1131 = load i8*, i8** %name.addr, align 8
  %arrayidx3102 = getelementptr inbounds i8, i8* %1131, i64 4
  %1132 = load i8, i8* %arrayidx3102, align 1
  %conv3103 = sext i8 %1132 to i32
  %cmp3104 = icmp eq i32 %conv3103, 76
  br i1 %cmp3104, label %land.lhs.true.3106, label %if.end.3122

land.lhs.true.3106:                               ; preds = %land.lhs.true.3101
  %1133 = load i8*, i8** %name.addr, align 8
  %arrayidx3107 = getelementptr inbounds i8, i8* %1133, i64 5
  %1134 = load i8, i8* %arrayidx3107, align 1
  %conv3108 = sext i8 %1134 to i32
  %cmp3109 = icmp eq i32 %conv3108, 69
  br i1 %cmp3109, label %land.lhs.true.3111, label %if.end.3122

land.lhs.true.3111:                               ; preds = %land.lhs.true.3106
  %1135 = load i8*, i8** %name.addr, align 8
  %arrayidx3112 = getelementptr inbounds i8, i8* %1135, i64 6
  %1136 = load i8, i8* %arrayidx3112, align 1
  %conv3113 = sext i8 %1136 to i32
  %cmp3114 = icmp eq i32 %conv3113, 95
  br i1 %cmp3114, label %land.lhs.true.3116, label %if.end.3122

land.lhs.true.3116:                               ; preds = %land.lhs.true.3111
  %1137 = load i8*, i8** %name.addr, align 8
  %arrayidx3117 = getelementptr inbounds i8, i8* %1137, i64 7
  %1138 = load i8, i8* %arrayidx3117, align 1
  %conv3118 = sext i8 %1138 to i32
  %cmp3119 = icmp eq i32 %conv3118, 95
  br i1 %cmp3119, label %if.then.3121, label %if.end.3122

if.then.3121:                                     ; preds = %land.lhs.true.3116
  store i32 -1, i32* %retval
  br label %return

if.end.3122:                                      ; preds = %land.lhs.true.3116, %land.lhs.true.3111, %land.lhs.true.3106, %land.lhs.true.3101, %sw.bb.3096
  br label %unknown

sw.bb.3123:                                       ; preds = %if.then.3066
  %1139 = load i8*, i8** %name.addr, align 8
  %arrayidx3124 = getelementptr inbounds i8, i8* %1139, i64 3
  %1140 = load i8, i8* %arrayidx3124, align 1
  %conv3125 = sext i8 %1140 to i32
  %cmp3126 = icmp eq i32 %conv3125, 73
  br i1 %cmp3126, label %land.lhs.true.3128, label %if.end.3149

land.lhs.true.3128:                               ; preds = %sw.bb.3123
  %1141 = load i8*, i8** %name.addr, align 8
  %arrayidx3129 = getelementptr inbounds i8, i8* %1141, i64 4
  %1142 = load i8, i8* %arrayidx3129, align 1
  %conv3130 = sext i8 %1142 to i32
  %cmp3131 = icmp eq i32 %conv3130, 78
  br i1 %cmp3131, label %land.lhs.true.3133, label %if.end.3149

land.lhs.true.3133:                               ; preds = %land.lhs.true.3128
  %1143 = load i8*, i8** %name.addr, align 8
  %arrayidx3134 = getelementptr inbounds i8, i8* %1143, i64 5
  %1144 = load i8, i8* %arrayidx3134, align 1
  %conv3135 = sext i8 %1144 to i32
  %cmp3136 = icmp eq i32 %conv3135, 69
  br i1 %cmp3136, label %land.lhs.true.3138, label %if.end.3149

land.lhs.true.3138:                               ; preds = %land.lhs.true.3133
  %1145 = load i8*, i8** %name.addr, align 8
  %arrayidx3139 = getelementptr inbounds i8, i8* %1145, i64 6
  %1146 = load i8, i8* %arrayidx3139, align 1
  %conv3140 = sext i8 %1146 to i32
  %cmp3141 = icmp eq i32 %conv3140, 95
  br i1 %cmp3141, label %land.lhs.true.3143, label %if.end.3149

land.lhs.true.3143:                               ; preds = %land.lhs.true.3138
  %1147 = load i8*, i8** %name.addr, align 8
  %arrayidx3144 = getelementptr inbounds i8, i8* %1147, i64 7
  %1148 = load i8, i8* %arrayidx3144, align 1
  %conv3145 = sext i8 %1148 to i32
  %cmp3146 = icmp eq i32 %conv3145, 95
  br i1 %cmp3146, label %if.then.3148, label %if.end.3149

if.then.3148:                                     ; preds = %land.lhs.true.3143
  store i32 -2, i32* %retval
  br label %return

if.end.3149:                                      ; preds = %land.lhs.true.3143, %land.lhs.true.3138, %land.lhs.true.3133, %land.lhs.true.3128, %sw.bb.3123
  br label %unknown

sw.default.3150:                                  ; preds = %if.then.3066
  br label %unknown

if.end.3151:                                      ; preds = %sw.bb.3061
  br label %unknown

sw.bb.3152:                                       ; preds = %sw.bb.3021
  %1149 = load i8*, i8** %name.addr, align 8
  %arrayidx3153 = getelementptr inbounds i8, i8* %1149, i64 1
  %1150 = load i8, i8* %arrayidx3153, align 1
  %conv3154 = sext i8 %1150 to i32
  switch i32 %conv3154, label %sw.default.3219 [
    i32 108, label %sw.bb.3155
    i32 111, label %sw.bb.3187
  ]

sw.bb.3155:                                       ; preds = %sw.bb.3152
  %1151 = load i8*, i8** %name.addr, align 8
  %arrayidx3156 = getelementptr inbounds i8, i8* %1151, i64 2
  %1152 = load i8, i8* %arrayidx3156, align 1
  %conv3157 = sext i8 %1152 to i32
  %cmp3158 = icmp eq i32 %conv3157, 111
  br i1 %cmp3158, label %land.lhs.true.3160, label %if.end.3186

land.lhs.true.3160:                               ; preds = %sw.bb.3155
  %1153 = load i8*, i8** %name.addr, align 8
  %arrayidx3161 = getelementptr inbounds i8, i8* %1153, i64 3
  %1154 = load i8, i8* %arrayidx3161, align 1
  %conv3162 = sext i8 %1154 to i32
  %cmp3163 = icmp eq i32 %conv3162, 115
  br i1 %cmp3163, label %land.lhs.true.3165, label %if.end.3186

land.lhs.true.3165:                               ; preds = %land.lhs.true.3160
  %1155 = load i8*, i8** %name.addr, align 8
  %arrayidx3166 = getelementptr inbounds i8, i8* %1155, i64 4
  %1156 = load i8, i8* %arrayidx3166, align 1
  %conv3167 = sext i8 %1156 to i32
  %cmp3168 = icmp eq i32 %conv3167, 101
  br i1 %cmp3168, label %land.lhs.true.3170, label %if.end.3186

land.lhs.true.3170:                               ; preds = %land.lhs.true.3165
  %1157 = load i8*, i8** %name.addr, align 8
  %arrayidx3171 = getelementptr inbounds i8, i8* %1157, i64 5
  %1158 = load i8, i8* %arrayidx3171, align 1
  %conv3172 = sext i8 %1158 to i32
  %cmp3173 = icmp eq i32 %conv3172, 100
  br i1 %cmp3173, label %land.lhs.true.3175, label %if.end.3186

land.lhs.true.3175:                               ; preds = %land.lhs.true.3170
  %1159 = load i8*, i8** %name.addr, align 8
  %arrayidx3176 = getelementptr inbounds i8, i8* %1159, i64 6
  %1160 = load i8, i8* %arrayidx3176, align 1
  %conv3177 = sext i8 %1160 to i32
  %cmp3178 = icmp eq i32 %conv3177, 105
  br i1 %cmp3178, label %land.lhs.true.3180, label %if.end.3186

land.lhs.true.3180:                               ; preds = %land.lhs.true.3175
  %1161 = load i8*, i8** %name.addr, align 8
  %arrayidx3181 = getelementptr inbounds i8, i8* %1161, i64 7
  %1162 = load i8, i8* %arrayidx3181, align 1
  %conv3182 = sext i8 %1162 to i32
  %cmp3183 = icmp eq i32 %conv3182, 114
  br i1 %cmp3183, label %if.then.3185, label %if.end.3186

if.then.3185:                                     ; preds = %land.lhs.true.3180
  store i32 -30, i32* %retval
  br label %return

if.end.3186:                                      ; preds = %land.lhs.true.3180, %land.lhs.true.3175, %land.lhs.true.3170, %land.lhs.true.3165, %land.lhs.true.3160, %sw.bb.3155
  br label %unknown

sw.bb.3187:                                       ; preds = %sw.bb.3152
  %1163 = load i8*, i8** %name.addr, align 8
  %arrayidx3188 = getelementptr inbounds i8, i8* %1163, i64 2
  %1164 = load i8, i8* %arrayidx3188, align 1
  %conv3189 = sext i8 %1164 to i32
  %cmp3190 = icmp eq i32 %conv3189, 110
  br i1 %cmp3190, label %land.lhs.true.3192, label %if.end.3218

land.lhs.true.3192:                               ; preds = %sw.bb.3187
  %1165 = load i8*, i8** %name.addr, align 8
  %arrayidx3193 = getelementptr inbounds i8, i8* %1165, i64 3
  %1166 = load i8, i8* %arrayidx3193, align 1
  %conv3194 = sext i8 %1166 to i32
  %cmp3195 = icmp eq i32 %conv3194, 116
  br i1 %cmp3195, label %land.lhs.true.3197, label %if.end.3218

land.lhs.true.3197:                               ; preds = %land.lhs.true.3192
  %1167 = load i8*, i8** %name.addr, align 8
  %arrayidx3198 = getelementptr inbounds i8, i8* %1167, i64 4
  %1168 = load i8, i8* %arrayidx3198, align 1
  %conv3199 = sext i8 %1168 to i32
  %cmp3200 = icmp eq i32 %conv3199, 105
  br i1 %cmp3200, label %land.lhs.true.3202, label %if.end.3218

land.lhs.true.3202:                               ; preds = %land.lhs.true.3197
  %1169 = load i8*, i8** %name.addr, align 8
  %arrayidx3203 = getelementptr inbounds i8, i8* %1169, i64 5
  %1170 = load i8, i8* %arrayidx3203, align 1
  %conv3204 = sext i8 %1170 to i32
  %cmp3205 = icmp eq i32 %conv3204, 110
  br i1 %cmp3205, label %land.lhs.true.3207, label %if.end.3218

land.lhs.true.3207:                               ; preds = %land.lhs.true.3202
  %1171 = load i8*, i8** %name.addr, align 8
  %arrayidx3208 = getelementptr inbounds i8, i8* %1171, i64 6
  %1172 = load i8, i8* %arrayidx3208, align 1
  %conv3209 = sext i8 %1172 to i32
  %cmp3210 = icmp eq i32 %conv3209, 117
  br i1 %cmp3210, label %land.lhs.true.3212, label %if.end.3218

land.lhs.true.3212:                               ; preds = %land.lhs.true.3207
  %1173 = load i8*, i8** %name.addr, align 8
  %arrayidx3213 = getelementptr inbounds i8, i8* %1173, i64 7
  %1174 = load i8, i8* %arrayidx3213, align 1
  %conv3214 = sext i8 %1174 to i32
  %cmp3215 = icmp eq i32 %conv3214, 101
  br i1 %cmp3215, label %if.then.3217, label %if.end.3218

if.then.3217:                                     ; preds = %land.lhs.true.3212
  store i32 -33, i32* %retval
  br label %return

if.end.3218:                                      ; preds = %land.lhs.true.3212, %land.lhs.true.3207, %land.lhs.true.3202, %land.lhs.true.3197, %land.lhs.true.3192, %sw.bb.3187
  br label %unknown

sw.default.3219:                                  ; preds = %sw.bb.3152
  br label %unknown

sw.bb.3220:                                       ; preds = %sw.bb.3021
  %1175 = load i8*, i8** %name.addr, align 8
  %arrayidx3221 = getelementptr inbounds i8, i8* %1175, i64 1
  %1176 = load i8, i8* %arrayidx3221, align 1
  %conv3222 = sext i8 %1176 to i32
  %cmp3223 = icmp eq i32 %conv3222, 98
  br i1 %cmp3223, label %land.lhs.true.3225, label %if.end.3256

land.lhs.true.3225:                               ; preds = %sw.bb.3220
  %1177 = load i8*, i8** %name.addr, align 8
  %arrayidx3226 = getelementptr inbounds i8, i8* %1177, i64 2
  %1178 = load i8, i8* %arrayidx3226, align 1
  %conv3227 = sext i8 %1178 to i32
  %cmp3228 = icmp eq i32 %conv3227, 109
  br i1 %cmp3228, label %land.lhs.true.3230, label %if.end.3256

land.lhs.true.3230:                               ; preds = %land.lhs.true.3225
  %1179 = load i8*, i8** %name.addr, align 8
  %arrayidx3231 = getelementptr inbounds i8, i8* %1179, i64 3
  %1180 = load i8, i8* %arrayidx3231, align 1
  %conv3232 = sext i8 %1180 to i32
  %cmp3233 = icmp eq i32 %conv3232, 99
  br i1 %cmp3233, label %land.lhs.true.3235, label %if.end.3256

land.lhs.true.3235:                               ; preds = %land.lhs.true.3230
  %1181 = load i8*, i8** %name.addr, align 8
  %arrayidx3236 = getelementptr inbounds i8, i8* %1181, i64 4
  %1182 = load i8, i8* %arrayidx3236, align 1
  %conv3237 = sext i8 %1182 to i32
  %cmp3238 = icmp eq i32 %conv3237, 108
  br i1 %cmp3238, label %land.lhs.true.3240, label %if.end.3256

land.lhs.true.3240:                               ; preds = %land.lhs.true.3235
  %1183 = load i8*, i8** %name.addr, align 8
  %arrayidx3241 = getelementptr inbounds i8, i8* %1183, i64 5
  %1184 = load i8, i8* %arrayidx3241, align 1
  %conv3242 = sext i8 %1184 to i32
  %cmp3243 = icmp eq i32 %conv3242, 111
  br i1 %cmp3243, label %land.lhs.true.3245, label %if.end.3256

land.lhs.true.3245:                               ; preds = %land.lhs.true.3240
  %1185 = load i8*, i8** %name.addr, align 8
  %arrayidx3246 = getelementptr inbounds i8, i8* %1185, i64 6
  %1186 = load i8, i8* %arrayidx3246, align 1
  %conv3247 = sext i8 %1186 to i32
  %cmp3248 = icmp eq i32 %conv3247, 115
  br i1 %cmp3248, label %land.lhs.true.3250, label %if.end.3256

land.lhs.true.3250:                               ; preds = %land.lhs.true.3245
  %1187 = load i8*, i8** %name.addr, align 8
  %arrayidx3251 = getelementptr inbounds i8, i8* %1187, i64 7
  %1188 = load i8, i8* %arrayidx3251, align 1
  %conv3252 = sext i8 %1188 to i32
  %cmp3253 = icmp eq i32 %conv3252, 101
  br i1 %cmp3253, label %if.then.3255, label %if.end.3256

if.then.3255:                                     ; preds = %land.lhs.true.3250
  store i32 -36, i32* %retval
  br label %return

if.end.3256:                                      ; preds = %land.lhs.true.3250, %land.lhs.true.3245, %land.lhs.true.3240, %land.lhs.true.3235, %land.lhs.true.3230, %land.lhs.true.3225, %sw.bb.3220
  br label %unknown

sw.bb.3257:                                       ; preds = %sw.bb.3021
  %1189 = load i8*, i8** %name.addr, align 8
  %arrayidx3258 = getelementptr inbounds i8, i8* %1189, i64 1
  %1190 = load i8, i8* %arrayidx3258, align 1
  %conv3259 = sext i8 %1190 to i32
  %cmp3260 = icmp eq i32 %conv3259, 110
  br i1 %cmp3260, label %land.lhs.true.3262, label %if.end.3315

land.lhs.true.3262:                               ; preds = %sw.bb.3257
  %1191 = load i8*, i8** %name.addr, align 8
  %arrayidx3263 = getelementptr inbounds i8, i8* %1191, i64 2
  %1192 = load i8, i8* %arrayidx3263, align 1
  %conv3264 = sext i8 %1192 to i32
  %cmp3265 = icmp eq i32 %conv3264, 100
  br i1 %cmp3265, label %if.then.3267, label %if.end.3315

if.then.3267:                                     ; preds = %land.lhs.true.3262
  %1193 = load i8*, i8** %name.addr, align 8
  %arrayidx3268 = getelementptr inbounds i8, i8* %1193, i64 3
  %1194 = load i8, i8* %arrayidx3268, align 1
  %conv3269 = sext i8 %1194 to i32
  switch i32 %conv3269, label %sw.default.3314 [
    i32 103, label %sw.bb.3270
    i32 112, label %sw.bb.3292
  ]

sw.bb.3270:                                       ; preds = %if.then.3267
  %1195 = load i8*, i8** %name.addr, align 8
  %arrayidx3271 = getelementptr inbounds i8, i8* %1195, i64 4
  %1196 = load i8, i8* %arrayidx3271, align 1
  %conv3272 = sext i8 %1196 to i32
  %cmp3273 = icmp eq i32 %conv3272, 114
  br i1 %cmp3273, label %land.lhs.true.3275, label %if.end.3291

land.lhs.true.3275:                               ; preds = %sw.bb.3270
  %1197 = load i8*, i8** %name.addr, align 8
  %arrayidx3276 = getelementptr inbounds i8, i8* %1197, i64 5
  %1198 = load i8, i8* %arrayidx3276, align 1
  %conv3277 = sext i8 %1198 to i32
  %cmp3278 = icmp eq i32 %conv3277, 101
  br i1 %cmp3278, label %land.lhs.true.3280, label %if.end.3291

land.lhs.true.3280:                               ; preds = %land.lhs.true.3275
  %1199 = load i8*, i8** %name.addr, align 8
  %arrayidx3281 = getelementptr inbounds i8, i8* %1199, i64 6
  %1200 = load i8, i8* %arrayidx3281, align 1
  %conv3282 = sext i8 %1200 to i32
  %cmp3283 = icmp eq i32 %conv3282, 110
  br i1 %cmp3283, label %land.lhs.true.3285, label %if.end.3291

land.lhs.true.3285:                               ; preds = %land.lhs.true.3280
  %1201 = load i8*, i8** %name.addr, align 8
  %arrayidx3286 = getelementptr inbounds i8, i8* %1201, i64 7
  %1202 = load i8, i8* %arrayidx3286, align 1
  %conv3287 = sext i8 %1202 to i32
  %cmp3288 = icmp eq i32 %conv3287, 116
  br i1 %cmp3288, label %if.then.3290, label %if.end.3291

if.then.3290:                                     ; preds = %land.lhs.true.3285
  store i32 -46, i32* %retval
  br label %return

if.end.3291:                                      ; preds = %land.lhs.true.3285, %land.lhs.true.3280, %land.lhs.true.3275, %sw.bb.3270
  br label %unknown

sw.bb.3292:                                       ; preds = %if.then.3267
  %1203 = load i8*, i8** %name.addr, align 8
  %arrayidx3293 = getelementptr inbounds i8, i8* %1203, i64 4
  %1204 = load i8, i8* %arrayidx3293, align 1
  %conv3294 = sext i8 %1204 to i32
  %cmp3295 = icmp eq i32 %conv3294, 119
  br i1 %cmp3295, label %land.lhs.true.3297, label %if.end.3313

land.lhs.true.3297:                               ; preds = %sw.bb.3292
  %1205 = load i8*, i8** %name.addr, align 8
  %arrayidx3298 = getelementptr inbounds i8, i8* %1205, i64 5
  %1206 = load i8, i8* %arrayidx3298, align 1
  %conv3299 = sext i8 %1206 to i32
  %cmp3300 = icmp eq i32 %conv3299, 101
  br i1 %cmp3300, label %land.lhs.true.3302, label %if.end.3313

land.lhs.true.3302:                               ; preds = %land.lhs.true.3297
  %1207 = load i8*, i8** %name.addr, align 8
  %arrayidx3303 = getelementptr inbounds i8, i8* %1207, i64 6
  %1208 = load i8, i8* %arrayidx3303, align 1
  %conv3304 = sext i8 %1208 to i32
  %cmp3305 = icmp eq i32 %conv3304, 110
  br i1 %cmp3305, label %land.lhs.true.3307, label %if.end.3313

land.lhs.true.3307:                               ; preds = %land.lhs.true.3302
  %1209 = load i8*, i8** %name.addr, align 8
  %arrayidx3308 = getelementptr inbounds i8, i8* %1209, i64 7
  %1210 = load i8, i8* %arrayidx3308, align 1
  %conv3309 = sext i8 %1210 to i32
  %cmp3310 = icmp eq i32 %conv3309, 116
  br i1 %cmp3310, label %if.then.3312, label %if.end.3313

if.then.3312:                                     ; preds = %land.lhs.true.3307
  store i32 -50, i32* %retval
  br label %return

if.end.3313:                                      ; preds = %land.lhs.true.3307, %land.lhs.true.3302, %land.lhs.true.3297, %sw.bb.3292
  br label %unknown

sw.default.3314:                                  ; preds = %if.then.3267
  br label %unknown

if.end.3315:                                      ; preds = %land.lhs.true.3262, %sw.bb.3257
  br label %unknown

sw.bb.3316:                                       ; preds = %sw.bb.3021
  %1211 = load i8*, i8** %name.addr, align 8
  %arrayidx3317 = getelementptr inbounds i8, i8* %1211, i64 1
  %1212 = load i8, i8* %arrayidx3317, align 1
  %conv3318 = sext i8 %1212 to i32
  %cmp3319 = icmp eq i32 %conv3318, 111
  br i1 %cmp3319, label %land.lhs.true.3321, label %if.end.3352

land.lhs.true.3321:                               ; preds = %sw.bb.3316
  %1213 = load i8*, i8** %name.addr, align 8
  %arrayidx3322 = getelementptr inbounds i8, i8* %1213, i64 2
  %1214 = load i8, i8* %arrayidx3322, align 1
  %conv3323 = sext i8 %1214 to i32
  %cmp3324 = icmp eq i32 %conv3323, 114
  br i1 %cmp3324, label %land.lhs.true.3326, label %if.end.3352

land.lhs.true.3326:                               ; preds = %land.lhs.true.3321
  %1215 = load i8*, i8** %name.addr, align 8
  %arrayidx3327 = getelementptr inbounds i8, i8* %1215, i64 3
  %1216 = load i8, i8* %arrayidx3327, align 1
  %conv3328 = sext i8 %1216 to i32
  %cmp3329 = icmp eq i32 %conv3328, 109
  br i1 %cmp3329, label %land.lhs.true.3331, label %if.end.3352

land.lhs.true.3331:                               ; preds = %land.lhs.true.3326
  %1217 = load i8*, i8** %name.addr, align 8
  %arrayidx3332 = getelementptr inbounds i8, i8* %1217, i64 4
  %1218 = load i8, i8* %arrayidx3332, align 1
  %conv3333 = sext i8 %1218 to i32
  %cmp3334 = icmp eq i32 %conv3333, 108
  br i1 %cmp3334, label %land.lhs.true.3336, label %if.end.3352

land.lhs.true.3336:                               ; preds = %land.lhs.true.3331
  %1219 = load i8*, i8** %name.addr, align 8
  %arrayidx3337 = getelementptr inbounds i8, i8* %1219, i64 5
  %1220 = load i8, i8* %arrayidx3337, align 1
  %conv3338 = sext i8 %1220 to i32
  %cmp3339 = icmp eq i32 %conv3338, 105
  br i1 %cmp3339, label %land.lhs.true.3341, label %if.end.3352

land.lhs.true.3341:                               ; preds = %land.lhs.true.3336
  %1221 = load i8*, i8** %name.addr, align 8
  %arrayidx3342 = getelementptr inbounds i8, i8* %1221, i64 6
  %1222 = load i8, i8* %arrayidx3342, align 1
  %conv3343 = sext i8 %1222 to i32
  %cmp3344 = icmp eq i32 %conv3343, 110
  br i1 %cmp3344, label %land.lhs.true.3346, label %if.end.3352

land.lhs.true.3346:                               ; preds = %land.lhs.true.3341
  %1223 = load i8*, i8** %name.addr, align 8
  %arrayidx3347 = getelementptr inbounds i8, i8* %1223, i64 7
  %1224 = load i8, i8* %arrayidx3347, align 1
  %conv3348 = sext i8 %1224 to i32
  %cmp3349 = icmp eq i32 %conv3348, 101
  br i1 %cmp3349, label %if.then.3351, label %if.end.3352

if.then.3351:                                     ; preds = %land.lhs.true.3346
  store i32 -66, i32* %retval
  br label %return

if.end.3352:                                      ; preds = %land.lhs.true.3346, %land.lhs.true.3341, %land.lhs.true.3336, %land.lhs.true.3331, %land.lhs.true.3326, %land.lhs.true.3321, %sw.bb.3316
  br label %unknown

sw.bb.3353:                                       ; preds = %sw.bb.3021
  %1225 = load i8*, i8** %name.addr, align 8
  %arrayidx3354 = getelementptr inbounds i8, i8* %1225, i64 1
  %1226 = load i8, i8* %arrayidx3354, align 1
  %conv3355 = sext i8 %1226 to i32
  %cmp3356 = icmp eq i32 %conv3355, 101
  br i1 %cmp3356, label %land.lhs.true.3358, label %if.end.3481

land.lhs.true.3358:                               ; preds = %sw.bb.3353
  %1227 = load i8*, i8** %name.addr, align 8
  %arrayidx3359 = getelementptr inbounds i8, i8* %1227, i64 2
  %1228 = load i8, i8* %arrayidx3359, align 1
  %conv3360 = sext i8 %1228 to i32
  %cmp3361 = icmp eq i32 %conv3360, 116
  br i1 %cmp3361, label %if.then.3363, label %if.end.3481

if.then.3363:                                     ; preds = %land.lhs.true.3358
  %1229 = load i8*, i8** %name.addr, align 8
  %arrayidx3364 = getelementptr inbounds i8, i8* %1229, i64 3
  %1230 = load i8, i8* %arrayidx3364, align 1
  %conv3365 = sext i8 %1230 to i32
  switch i32 %conv3365, label %sw.default.3480 [
    i32 103, label %sw.bb.3366
    i32 108, label %sw.bb.3412
    i32 112, label %sw.bb.3434
  ]

sw.bb.3366:                                       ; preds = %if.then.3363
  %1231 = load i8*, i8** %name.addr, align 8
  %arrayidx3367 = getelementptr inbounds i8, i8* %1231, i64 4
  %1232 = load i8, i8* %arrayidx3367, align 1
  %conv3368 = sext i8 %1232 to i32
  %cmp3369 = icmp eq i32 %conv3368, 114
  br i1 %cmp3369, label %if.then.3371, label %if.end.3411

if.then.3371:                                     ; preds = %sw.bb.3366
  %1233 = load i8*, i8** %name.addr, align 8
  %arrayidx3372 = getelementptr inbounds i8, i8* %1233, i64 5
  %1234 = load i8, i8* %arrayidx3372, align 1
  %conv3373 = sext i8 %1234 to i32
  switch i32 %conv3373, label %sw.default.3410 [
    i32 101, label %sw.bb.3374
    i32 103, label %sw.bb.3386
    i32 110, label %sw.bb.3398
  ]

sw.bb.3374:                                       ; preds = %if.then.3371
  %1235 = load i8*, i8** %name.addr, align 8
  %arrayidx3375 = getelementptr inbounds i8, i8* %1235, i64 6
  %1236 = load i8, i8* %arrayidx3375, align 1
  %conv3376 = sext i8 %1236 to i32
  %cmp3377 = icmp eq i32 %conv3376, 110
  br i1 %cmp3377, label %land.lhs.true.3379, label %if.end.3385

land.lhs.true.3379:                               ; preds = %sw.bb.3374
  %1237 = load i8*, i8** %name.addr, align 8
  %arrayidx3380 = getelementptr inbounds i8, i8* %1237, i64 7
  %1238 = load i8, i8* %arrayidx3380, align 1
  %conv3381 = sext i8 %1238 to i32
  %cmp3382 = icmp eq i32 %conv3381, 116
  br i1 %cmp3382, label %if.then.3384, label %if.end.3385

if.then.3384:                                     ; preds = %land.lhs.true.3379
  store i32 -69, i32* %retval
  br label %return

if.end.3385:                                      ; preds = %land.lhs.true.3379, %sw.bb.3374
  br label %unknown

sw.bb.3386:                                       ; preds = %if.then.3371
  %1239 = load i8*, i8** %name.addr, align 8
  %arrayidx3387 = getelementptr inbounds i8, i8* %1239, i64 6
  %1240 = load i8, i8* %arrayidx3387, align 1
  %conv3388 = sext i8 %1240 to i32
  %cmp3389 = icmp eq i32 %conv3388, 105
  br i1 %cmp3389, label %land.lhs.true.3391, label %if.end.3397

land.lhs.true.3391:                               ; preds = %sw.bb.3386
  %1241 = load i8*, i8** %name.addr, align 8
  %arrayidx3392 = getelementptr inbounds i8, i8* %1241, i64 7
  %1242 = load i8, i8* %arrayidx3392, align 1
  %conv3393 = sext i8 %1242 to i32
  %cmp3394 = icmp eq i32 %conv3393, 100
  br i1 %cmp3394, label %if.then.3396, label %if.end.3397

if.then.3396:                                     ; preds = %land.lhs.true.3391
  store i32 -70, i32* %retval
  br label %return

if.end.3397:                                      ; preds = %land.lhs.true.3391, %sw.bb.3386
  br label %unknown

sw.bb.3398:                                       ; preds = %if.then.3371
  %1243 = load i8*, i8** %name.addr, align 8
  %arrayidx3399 = getelementptr inbounds i8, i8* %1243, i64 6
  %1244 = load i8, i8* %arrayidx3399, align 1
  %conv3400 = sext i8 %1244 to i32
  %cmp3401 = icmp eq i32 %conv3400, 97
  br i1 %cmp3401, label %land.lhs.true.3403, label %if.end.3409

land.lhs.true.3403:                               ; preds = %sw.bb.3398
  %1245 = load i8*, i8** %name.addr, align 8
  %arrayidx3404 = getelementptr inbounds i8, i8* %1245, i64 7
  %1246 = load i8, i8* %arrayidx3404, align 1
  %conv3405 = sext i8 %1246 to i32
  %cmp3406 = icmp eq i32 %conv3405, 109
  br i1 %cmp3406, label %if.then.3408, label %if.end.3409

if.then.3408:                                     ; preds = %land.lhs.true.3403
  store i32 -71, i32* %retval
  br label %return

if.end.3409:                                      ; preds = %land.lhs.true.3403, %sw.bb.3398
  br label %unknown

sw.default.3410:                                  ; preds = %if.then.3371
  br label %unknown

if.end.3411:                                      ; preds = %sw.bb.3366
  br label %unknown

sw.bb.3412:                                       ; preds = %if.then.3363
  %1247 = load i8*, i8** %name.addr, align 8
  %arrayidx3413 = getelementptr inbounds i8, i8* %1247, i64 4
  %1248 = load i8, i8* %arrayidx3413, align 1
  %conv3414 = sext i8 %1248 to i32
  %cmp3415 = icmp eq i32 %conv3414, 111
  br i1 %cmp3415, label %land.lhs.true.3417, label %if.end.3433

land.lhs.true.3417:                               ; preds = %sw.bb.3412
  %1249 = load i8*, i8** %name.addr, align 8
  %arrayidx3418 = getelementptr inbounds i8, i8* %1249, i64 5
  %1250 = load i8, i8* %arrayidx3418, align 1
  %conv3419 = sext i8 %1250 to i32
  %cmp3420 = icmp eq i32 %conv3419, 103
  br i1 %cmp3420, label %land.lhs.true.3422, label %if.end.3433

land.lhs.true.3422:                               ; preds = %land.lhs.true.3417
  %1251 = load i8*, i8** %name.addr, align 8
  %arrayidx3423 = getelementptr inbounds i8, i8* %1251, i64 6
  %1252 = load i8, i8* %arrayidx3423, align 1
  %conv3424 = sext i8 %1252 to i32
  %cmp3425 = icmp eq i32 %conv3424, 105
  br i1 %cmp3425, label %land.lhs.true.3427, label %if.end.3433

land.lhs.true.3427:                               ; preds = %land.lhs.true.3422
  %1253 = load i8*, i8** %name.addr, align 8
  %arrayidx3428 = getelementptr inbounds i8, i8* %1253, i64 7
  %1254 = load i8, i8* %arrayidx3428, align 1
  %conv3429 = sext i8 %1254 to i32
  %cmp3430 = icmp eq i32 %conv3429, 110
  br i1 %cmp3430, label %if.then.3432, label %if.end.3433

if.then.3432:                                     ; preds = %land.lhs.true.3427
  store i32 -75, i32* %retval
  br label %return

if.end.3433:                                      ; preds = %land.lhs.true.3427, %land.lhs.true.3422, %land.lhs.true.3417, %sw.bb.3412
  br label %unknown

sw.bb.3434:                                       ; preds = %if.then.3363
  %1255 = load i8*, i8** %name.addr, align 8
  %arrayidx3435 = getelementptr inbounds i8, i8* %1255, i64 4
  %1256 = load i8, i8* %arrayidx3435, align 1
  %conv3436 = sext i8 %1256 to i32
  %cmp3437 = icmp eq i32 %conv3436, 119
  br i1 %cmp3437, label %if.then.3439, label %if.end.3479

if.then.3439:                                     ; preds = %sw.bb.3434
  %1257 = load i8*, i8** %name.addr, align 8
  %arrayidx3440 = getelementptr inbounds i8, i8* %1257, i64 5
  %1258 = load i8, i8* %arrayidx3440, align 1
  %conv3441 = sext i8 %1258 to i32
  switch i32 %conv3441, label %sw.default.3478 [
    i32 101, label %sw.bb.3442
    i32 110, label %sw.bb.3454
    i32 117, label %sw.bb.3466
  ]

sw.bb.3442:                                       ; preds = %if.then.3439
  %1259 = load i8*, i8** %name.addr, align 8
  %arrayidx3443 = getelementptr inbounds i8, i8* %1259, i64 6
  %1260 = load i8, i8* %arrayidx3443, align 1
  %conv3444 = sext i8 %1260 to i32
  %cmp3445 = icmp eq i32 %conv3444, 110
  br i1 %cmp3445, label %land.lhs.true.3447, label %if.end.3453

land.lhs.true.3447:                               ; preds = %sw.bb.3442
  %1261 = load i8*, i8** %name.addr, align 8
  %arrayidx3448 = getelementptr inbounds i8, i8* %1261, i64 7
  %1262 = load i8, i8* %arrayidx3448, align 1
  %conv3449 = sext i8 %1262 to i32
  %cmp3450 = icmp eq i32 %conv3449, 116
  br i1 %cmp3450, label %if.then.3452, label %if.end.3453

if.then.3452:                                     ; preds = %land.lhs.true.3447
  store i32 -86, i32* %retval
  br label %return

if.end.3453:                                      ; preds = %land.lhs.true.3447, %sw.bb.3442
  br label %unknown

sw.bb.3454:                                       ; preds = %if.then.3439
  %1263 = load i8*, i8** %name.addr, align 8
  %arrayidx3455 = getelementptr inbounds i8, i8* %1263, i64 6
  %1264 = load i8, i8* %arrayidx3455, align 1
  %conv3456 = sext i8 %1264 to i32
  %cmp3457 = icmp eq i32 %conv3456, 97
  br i1 %cmp3457, label %land.lhs.true.3459, label %if.end.3465

land.lhs.true.3459:                               ; preds = %sw.bb.3454
  %1265 = load i8*, i8** %name.addr, align 8
  %arrayidx3460 = getelementptr inbounds i8, i8* %1265, i64 7
  %1266 = load i8, i8* %arrayidx3460, align 1
  %conv3461 = sext i8 %1266 to i32
  %cmp3462 = icmp eq i32 %conv3461, 109
  br i1 %cmp3462, label %if.then.3464, label %if.end.3465

if.then.3464:                                     ; preds = %land.lhs.true.3459
  store i32 -87, i32* %retval
  br label %return

if.end.3465:                                      ; preds = %land.lhs.true.3459, %sw.bb.3454
  br label %unknown

sw.bb.3466:                                       ; preds = %if.then.3439
  %1267 = load i8*, i8** %name.addr, align 8
  %arrayidx3467 = getelementptr inbounds i8, i8* %1267, i64 6
  %1268 = load i8, i8* %arrayidx3467, align 1
  %conv3468 = sext i8 %1268 to i32
  %cmp3469 = icmp eq i32 %conv3468, 105
  br i1 %cmp3469, label %land.lhs.true.3471, label %if.end.3477

land.lhs.true.3471:                               ; preds = %sw.bb.3466
  %1269 = load i8*, i8** %name.addr, align 8
  %arrayidx3472 = getelementptr inbounds i8, i8* %1269, i64 7
  %1270 = load i8, i8* %arrayidx3472, align 1
  %conv3473 = sext i8 %1270 to i32
  %cmp3474 = icmp eq i32 %conv3473, 100
  br i1 %cmp3474, label %if.then.3476, label %if.end.3477

if.then.3476:                                     ; preds = %land.lhs.true.3471
  store i32 -88, i32* %retval
  br label %return

if.end.3477:                                      ; preds = %land.lhs.true.3471, %sw.bb.3466
  br label %unknown

sw.default.3478:                                  ; preds = %if.then.3439
  br label %unknown

if.end.3479:                                      ; preds = %sw.bb.3434
  br label %unknown

sw.default.3480:                                  ; preds = %if.then.3363
  br label %unknown

if.end.3481:                                      ; preds = %land.lhs.true.3358, %sw.bb.3353
  br label %unknown

sw.bb.3482:                                       ; preds = %sw.bb.3021
  %1271 = load i8*, i8** %name.addr, align 8
  %arrayidx3483 = getelementptr inbounds i8, i8* %1271, i64 1
  %1272 = load i8, i8* %arrayidx3483, align 1
  %conv3484 = sext i8 %1272 to i32
  %cmp3485 = icmp eq i32 %conv3484, 101
  br i1 %cmp3485, label %land.lhs.true.3487, label %if.end.3535

land.lhs.true.3487:                               ; preds = %sw.bb.3482
  %1273 = load i8*, i8** %name.addr, align 8
  %arrayidx3488 = getelementptr inbounds i8, i8* %1273, i64 2
  %1274 = load i8, i8* %arrayidx3488, align 1
  %conv3489 = sext i8 %1274 to i32
  %cmp3490 = icmp eq i32 %conv3489, 97
  br i1 %cmp3490, label %land.lhs.true.3492, label %if.end.3535

land.lhs.true.3492:                               ; preds = %land.lhs.true.3487
  %1275 = load i8*, i8** %name.addr, align 8
  %arrayidx3493 = getelementptr inbounds i8, i8* %1275, i64 3
  %1276 = load i8, i8* %arrayidx3493, align 1
  %conv3494 = sext i8 %1276 to i32
  %cmp3495 = icmp eq i32 %conv3494, 100
  br i1 %cmp3495, label %if.then.3497, label %if.end.3535

if.then.3497:                                     ; preds = %land.lhs.true.3492
  %1277 = load i8*, i8** %name.addr, align 8
  %arrayidx3498 = getelementptr inbounds i8, i8* %1277, i64 4
  %1278 = load i8, i8* %arrayidx3498, align 1
  %conv3499 = sext i8 %1278 to i32
  switch i32 %conv3499, label %sw.default.3534 [
    i32 108, label %sw.bb.3500
    i32 112, label %sw.bb.3517
  ]

sw.bb.3500:                                       ; preds = %if.then.3497
  %1279 = load i8*, i8** %name.addr, align 8
  %arrayidx3501 = getelementptr inbounds i8, i8* %1279, i64 5
  %1280 = load i8, i8* %arrayidx3501, align 1
  %conv3502 = sext i8 %1280 to i32
  %cmp3503 = icmp eq i32 %conv3502, 105
  br i1 %cmp3503, label %land.lhs.true.3505, label %if.end.3516

land.lhs.true.3505:                               ; preds = %sw.bb.3500
  %1281 = load i8*, i8** %name.addr, align 8
  %arrayidx3506 = getelementptr inbounds i8, i8* %1281, i64 6
  %1282 = load i8, i8* %arrayidx3506, align 1
  %conv3507 = sext i8 %1282 to i32
  %cmp3508 = icmp eq i32 %conv3507, 110
  br i1 %cmp3508, label %if.then.3510, label %if.end.3516

if.then.3510:                                     ; preds = %land.lhs.true.3505
  %1283 = load i8*, i8** %name.addr, align 8
  %arrayidx3511 = getelementptr inbounds i8, i8* %1283, i64 7
  %1284 = load i8, i8* %arrayidx3511, align 1
  %conv3512 = sext i8 %1284 to i32
  switch i32 %conv3512, label %sw.default.3515 [
    i32 101, label %sw.bb.3513
    i32 107, label %sw.bb.3514
  ]

sw.bb.3513:                                       ; preds = %if.then.3510
  store i32 -156, i32* %retval
  br label %return

sw.bb.3514:                                       ; preds = %if.then.3510
  store i32 -157, i32* %retval
  br label %return

sw.default.3515:                                  ; preds = %if.then.3510
  br label %unknown

if.end.3516:                                      ; preds = %land.lhs.true.3505, %sw.bb.3500
  br label %unknown

sw.bb.3517:                                       ; preds = %if.then.3497
  %1285 = load i8*, i8** %name.addr, align 8
  %arrayidx3518 = getelementptr inbounds i8, i8* %1285, i64 5
  %1286 = load i8, i8* %arrayidx3518, align 1
  %conv3519 = sext i8 %1286 to i32
  %cmp3520 = icmp eq i32 %conv3519, 105
  br i1 %cmp3520, label %land.lhs.true.3522, label %if.end.3533

land.lhs.true.3522:                               ; preds = %sw.bb.3517
  %1287 = load i8*, i8** %name.addr, align 8
  %arrayidx3523 = getelementptr inbounds i8, i8* %1287, i64 6
  %1288 = load i8, i8* %arrayidx3523, align 1
  %conv3524 = sext i8 %1288 to i32
  %cmp3525 = icmp eq i32 %conv3524, 112
  br i1 %cmp3525, label %land.lhs.true.3527, label %if.end.3533

land.lhs.true.3527:                               ; preds = %land.lhs.true.3522
  %1289 = load i8*, i8** %name.addr, align 8
  %arrayidx3528 = getelementptr inbounds i8, i8* %1289, i64 7
  %1290 = load i8, i8* %arrayidx3528, align 1
  %conv3529 = sext i8 %1290 to i32
  %cmp3530 = icmp eq i32 %conv3529, 101
  br i1 %cmp3530, label %if.then.3532, label %if.end.3533

if.then.3532:                                     ; preds = %land.lhs.true.3527
  store i32 -158, i32* %retval
  br label %return

if.end.3533:                                      ; preds = %land.lhs.true.3527, %land.lhs.true.3522, %sw.bb.3517
  br label %unknown

sw.default.3534:                                  ; preds = %if.then.3497
  br label %unknown

if.end.3535:                                      ; preds = %land.lhs.true.3492, %land.lhs.true.3487, %sw.bb.3482
  br label %unknown

sw.bb.3536:                                       ; preds = %sw.bb.3021
  %1291 = load i8*, i8** %name.addr, align 8
  %arrayidx3537 = getelementptr inbounds i8, i8* %1291, i64 1
  %1292 = load i8, i8* %arrayidx3537, align 1
  %conv3538 = sext i8 %1292 to i32
  switch i32 %conv3538, label %sw.default.3683 [
    i32 101, label %sw.bb.3539
    i32 104, label %sw.bb.3593
    i32 121, label %sw.bb.3651
  ]

sw.bb.3539:                                       ; preds = %sw.bb.3536
  %1293 = load i8*, i8** %name.addr, align 8
  %arrayidx3540 = getelementptr inbounds i8, i8* %1293, i64 2
  %1294 = load i8, i8* %arrayidx3540, align 1
  %conv3541 = sext i8 %1294 to i32
  %cmp3542 = icmp eq i32 %conv3541, 116
  br i1 %cmp3542, label %if.then.3544, label %if.end.3592

if.then.3544:                                     ; preds = %sw.bb.3539
  %1295 = load i8*, i8** %name.addr, align 8
  %arrayidx3545 = getelementptr inbounds i8, i8* %1295, i64 3
  %1296 = load i8, i8* %arrayidx3545, align 1
  %conv3546 = sext i8 %1296 to i32
  switch i32 %conv3546, label %sw.default.3591 [
    i32 103, label %sw.bb.3547
    i32 112, label %sw.bb.3569
  ]

sw.bb.3547:                                       ; preds = %if.then.3544
  %1297 = load i8*, i8** %name.addr, align 8
  %arrayidx3548 = getelementptr inbounds i8, i8* %1297, i64 4
  %1298 = load i8, i8* %arrayidx3548, align 1
  %conv3549 = sext i8 %1298 to i32
  %cmp3550 = icmp eq i32 %conv3549, 114
  br i1 %cmp3550, label %land.lhs.true.3552, label %if.end.3568

land.lhs.true.3552:                               ; preds = %sw.bb.3547
  %1299 = load i8*, i8** %name.addr, align 8
  %arrayidx3553 = getelementptr inbounds i8, i8* %1299, i64 5
  %1300 = load i8, i8* %arrayidx3553, align 1
  %conv3554 = sext i8 %1300 to i32
  %cmp3555 = icmp eq i32 %conv3554, 101
  br i1 %cmp3555, label %land.lhs.true.3557, label %if.end.3568

land.lhs.true.3557:                               ; preds = %land.lhs.true.3552
  %1301 = load i8*, i8** %name.addr, align 8
  %arrayidx3558 = getelementptr inbounds i8, i8* %1301, i64 6
  %1302 = load i8, i8* %arrayidx3558, align 1
  %conv3559 = sext i8 %1302 to i32
  %cmp3560 = icmp eq i32 %conv3559, 110
  br i1 %cmp3560, label %land.lhs.true.3562, label %if.end.3568

land.lhs.true.3562:                               ; preds = %land.lhs.true.3557
  %1303 = load i8*, i8** %name.addr, align 8
  %arrayidx3563 = getelementptr inbounds i8, i8* %1303, i64 7
  %1304 = load i8, i8* %arrayidx3563, align 1
  %conv3564 = sext i8 %1304 to i32
  %cmp3565 = icmp eq i32 %conv3564, 116
  br i1 %cmp3565, label %if.then.3567, label %if.end.3568

if.then.3567:                                     ; preds = %land.lhs.true.3562
  store i32 -179, i32* %retval
  br label %return

if.end.3568:                                      ; preds = %land.lhs.true.3562, %land.lhs.true.3557, %land.lhs.true.3552, %sw.bb.3547
  br label %unknown

sw.bb.3569:                                       ; preds = %if.then.3544
  %1305 = load i8*, i8** %name.addr, align 8
  %arrayidx3570 = getelementptr inbounds i8, i8* %1305, i64 4
  %1306 = load i8, i8* %arrayidx3570, align 1
  %conv3571 = sext i8 %1306 to i32
  %cmp3572 = icmp eq i32 %conv3571, 119
  br i1 %cmp3572, label %land.lhs.true.3574, label %if.end.3590

land.lhs.true.3574:                               ; preds = %sw.bb.3569
  %1307 = load i8*, i8** %name.addr, align 8
  %arrayidx3575 = getelementptr inbounds i8, i8* %1307, i64 5
  %1308 = load i8, i8* %arrayidx3575, align 1
  %conv3576 = sext i8 %1308 to i32
  %cmp3577 = icmp eq i32 %conv3576, 101
  br i1 %cmp3577, label %land.lhs.true.3579, label %if.end.3590

land.lhs.true.3579:                               ; preds = %land.lhs.true.3574
  %1309 = load i8*, i8** %name.addr, align 8
  %arrayidx3580 = getelementptr inbounds i8, i8* %1309, i64 6
  %1310 = load i8, i8* %arrayidx3580, align 1
  %conv3581 = sext i8 %1310 to i32
  %cmp3582 = icmp eq i32 %conv3581, 110
  br i1 %cmp3582, label %land.lhs.true.3584, label %if.end.3590

land.lhs.true.3584:                               ; preds = %land.lhs.true.3579
  %1311 = load i8*, i8** %name.addr, align 8
  %arrayidx3585 = getelementptr inbounds i8, i8* %1311, i64 7
  %1312 = load i8, i8* %arrayidx3585, align 1
  %conv3586 = sext i8 %1312 to i32
  %cmp3587 = icmp eq i32 %conv3586, 116
  br i1 %cmp3587, label %if.then.3589, label %if.end.3590

if.then.3589:                                     ; preds = %land.lhs.true.3584
  store i32 -185, i32* %retval
  br label %return

if.end.3590:                                      ; preds = %land.lhs.true.3584, %land.lhs.true.3579, %land.lhs.true.3574, %sw.bb.3569
  br label %unknown

sw.default.3591:                                  ; preds = %if.then.3544
  br label %unknown

if.end.3592:                                      ; preds = %sw.bb.3539
  br label %unknown

sw.bb.3593:                                       ; preds = %sw.bb.3536
  %1313 = load i8*, i8** %name.addr, align 8
  %arrayidx3594 = getelementptr inbounds i8, i8* %1313, i64 2
  %1314 = load i8, i8* %arrayidx3594, align 1
  %conv3595 = sext i8 %1314 to i32
  switch i32 %conv3595, label %sw.default.3650 [
    i32 109, label %sw.bb.3596
    i32 117, label %sw.bb.3623
  ]

sw.bb.3596:                                       ; preds = %sw.bb.3593
  %1315 = load i8*, i8** %name.addr, align 8
  %arrayidx3597 = getelementptr inbounds i8, i8* %1315, i64 3
  %1316 = load i8, i8* %arrayidx3597, align 1
  %conv3598 = sext i8 %1316 to i32
  %cmp3599 = icmp eq i32 %conv3598, 119
  br i1 %cmp3599, label %land.lhs.true.3601, label %if.end.3622

land.lhs.true.3601:                               ; preds = %sw.bb.3596
  %1317 = load i8*, i8** %name.addr, align 8
  %arrayidx3602 = getelementptr inbounds i8, i8* %1317, i64 4
  %1318 = load i8, i8* %arrayidx3602, align 1
  %conv3603 = sext i8 %1318 to i32
  %cmp3604 = icmp eq i32 %conv3603, 114
  br i1 %cmp3604, label %land.lhs.true.3606, label %if.end.3622

land.lhs.true.3606:                               ; preds = %land.lhs.true.3601
  %1319 = load i8*, i8** %name.addr, align 8
  %arrayidx3607 = getelementptr inbounds i8, i8* %1319, i64 5
  %1320 = load i8, i8* %arrayidx3607, align 1
  %conv3608 = sext i8 %1320 to i32
  %cmp3609 = icmp eq i32 %conv3608, 105
  br i1 %cmp3609, label %land.lhs.true.3611, label %if.end.3622

land.lhs.true.3611:                               ; preds = %land.lhs.true.3606
  %1321 = load i8*, i8** %name.addr, align 8
  %arrayidx3612 = getelementptr inbounds i8, i8* %1321, i64 6
  %1322 = load i8, i8* %arrayidx3612, align 1
  %conv3613 = sext i8 %1322 to i32
  %cmp3614 = icmp eq i32 %conv3613, 116
  br i1 %cmp3614, label %land.lhs.true.3616, label %if.end.3622

land.lhs.true.3616:                               ; preds = %land.lhs.true.3611
  %1323 = load i8*, i8** %name.addr, align 8
  %arrayidx3617 = getelementptr inbounds i8, i8* %1323, i64 7
  %1324 = load i8, i8* %arrayidx3617, align 1
  %conv3618 = sext i8 %1324 to i32
  %cmp3619 = icmp eq i32 %conv3618, 101
  br i1 %cmp3619, label %if.then.3621, label %if.end.3622

if.then.3621:                                     ; preds = %land.lhs.true.3616
  store i32 -192, i32* %retval
  br label %return

if.end.3622:                                      ; preds = %land.lhs.true.3616, %land.lhs.true.3611, %land.lhs.true.3606, %land.lhs.true.3601, %sw.bb.3596
  br label %unknown

sw.bb.3623:                                       ; preds = %sw.bb.3593
  %1325 = load i8*, i8** %name.addr, align 8
  %arrayidx3624 = getelementptr inbounds i8, i8* %1325, i64 3
  %1326 = load i8, i8* %arrayidx3624, align 1
  %conv3625 = sext i8 %1326 to i32
  %cmp3626 = icmp eq i32 %conv3625, 116
  br i1 %cmp3626, label %land.lhs.true.3628, label %if.end.3649

land.lhs.true.3628:                               ; preds = %sw.bb.3623
  %1327 = load i8*, i8** %name.addr, align 8
  %arrayidx3629 = getelementptr inbounds i8, i8* %1327, i64 4
  %1328 = load i8, i8* %arrayidx3629, align 1
  %conv3630 = sext i8 %1328 to i32
  %cmp3631 = icmp eq i32 %conv3630, 100
  br i1 %cmp3631, label %land.lhs.true.3633, label %if.end.3649

land.lhs.true.3633:                               ; preds = %land.lhs.true.3628
  %1329 = load i8*, i8** %name.addr, align 8
  %arrayidx3634 = getelementptr inbounds i8, i8* %1329, i64 5
  %1330 = load i8, i8* %arrayidx3634, align 1
  %conv3635 = sext i8 %1330 to i32
  %cmp3636 = icmp eq i32 %conv3635, 111
  br i1 %cmp3636, label %land.lhs.true.3638, label %if.end.3649

land.lhs.true.3638:                               ; preds = %land.lhs.true.3633
  %1331 = load i8*, i8** %name.addr, align 8
  %arrayidx3639 = getelementptr inbounds i8, i8* %1331, i64 6
  %1332 = load i8, i8* %arrayidx3639, align 1
  %conv3640 = sext i8 %1332 to i32
  %cmp3641 = icmp eq i32 %conv3640, 119
  br i1 %cmp3641, label %land.lhs.true.3643, label %if.end.3649

land.lhs.true.3643:                               ; preds = %land.lhs.true.3638
  %1333 = load i8*, i8** %name.addr, align 8
  %arrayidx3644 = getelementptr inbounds i8, i8* %1333, i64 7
  %1334 = load i8, i8* %arrayidx3644, align 1
  %conv3645 = sext i8 %1334 to i32
  %cmp3646 = icmp eq i32 %conv3645, 110
  br i1 %cmp3646, label %if.then.3648, label %if.end.3649

if.then.3648:                                     ; preds = %land.lhs.true.3643
  store i32 -193, i32* %retval
  br label %return

if.end.3649:                                      ; preds = %land.lhs.true.3643, %land.lhs.true.3638, %land.lhs.true.3633, %land.lhs.true.3628, %sw.bb.3623
  br label %unknown

sw.default.3650:                                  ; preds = %sw.bb.3593
  br label %unknown

sw.bb.3651:                                       ; preds = %sw.bb.3536
  %1335 = load i8*, i8** %name.addr, align 8
  %arrayidx3652 = getelementptr inbounds i8, i8* %1335, i64 2
  %1336 = load i8, i8* %arrayidx3652, align 1
  %conv3653 = sext i8 %1336 to i32
  %cmp3654 = icmp eq i32 %conv3653, 115
  br i1 %cmp3654, label %land.lhs.true.3656, label %if.end.3682

land.lhs.true.3656:                               ; preds = %sw.bb.3651
  %1337 = load i8*, i8** %name.addr, align 8
  %arrayidx3657 = getelementptr inbounds i8, i8* %1337, i64 3
  %1338 = load i8, i8* %arrayidx3657, align 1
  %conv3658 = sext i8 %1338 to i32
  %cmp3659 = icmp eq i32 %conv3658, 119
  br i1 %cmp3659, label %land.lhs.true.3661, label %if.end.3682

land.lhs.true.3661:                               ; preds = %land.lhs.true.3656
  %1339 = load i8*, i8** %name.addr, align 8
  %arrayidx3662 = getelementptr inbounds i8, i8* %1339, i64 4
  %1340 = load i8, i8* %arrayidx3662, align 1
  %conv3663 = sext i8 %1340 to i32
  %cmp3664 = icmp eq i32 %conv3663, 114
  br i1 %cmp3664, label %land.lhs.true.3666, label %if.end.3682

land.lhs.true.3666:                               ; preds = %land.lhs.true.3661
  %1341 = load i8*, i8** %name.addr, align 8
  %arrayidx3667 = getelementptr inbounds i8, i8* %1341, i64 5
  %1342 = load i8, i8* %arrayidx3667, align 1
  %conv3668 = sext i8 %1342 to i32
  %cmp3669 = icmp eq i32 %conv3668, 105
  br i1 %cmp3669, label %land.lhs.true.3671, label %if.end.3682

land.lhs.true.3671:                               ; preds = %land.lhs.true.3666
  %1343 = load i8*, i8** %name.addr, align 8
  %arrayidx3672 = getelementptr inbounds i8, i8* %1343, i64 6
  %1344 = load i8, i8* %arrayidx3672, align 1
  %conv3673 = sext i8 %1344 to i32
  %cmp3674 = icmp eq i32 %conv3673, 116
  br i1 %cmp3674, label %land.lhs.true.3676, label %if.end.3682

land.lhs.true.3676:                               ; preds = %land.lhs.true.3671
  %1345 = load i8*, i8** %name.addr, align 8
  %arrayidx3677 = getelementptr inbounds i8, i8* %1345, i64 7
  %1346 = load i8, i8* %arrayidx3677, align 1
  %conv3678 = sext i8 %1346 to i32
  %cmp3679 = icmp eq i32 %conv3678, 101
  br i1 %cmp3679, label %if.then.3681, label %if.end.3682

if.then.3681:                                     ; preds = %land.lhs.true.3676
  store i32 -214, i32* %retval
  br label %return

if.end.3682:                                      ; preds = %land.lhs.true.3676, %land.lhs.true.3671, %land.lhs.true.3666, %land.lhs.true.3661, %land.lhs.true.3656, %sw.bb.3651
  br label %unknown

sw.default.3683:                                  ; preds = %sw.bb.3536
  br label %unknown

sw.bb.3684:                                       ; preds = %sw.bb.3021
  %1347 = load i8*, i8** %name.addr, align 8
  %arrayidx3685 = getelementptr inbounds i8, i8* %1347, i64 1
  %1348 = load i8, i8* %arrayidx3685, align 1
  %conv3686 = sext i8 %1348 to i32
  %cmp3687 = icmp eq i32 %conv3686, 114
  br i1 %cmp3687, label %land.lhs.true.3689, label %if.end.3720

land.lhs.true.3689:                               ; preds = %sw.bb.3684
  %1349 = load i8*, i8** %name.addr, align 8
  %arrayidx3690 = getelementptr inbounds i8, i8* %1349, i64 2
  %1350 = load i8, i8* %arrayidx3690, align 1
  %conv3691 = sext i8 %1350 to i32
  %cmp3692 = icmp eq i32 %conv3691, 117
  br i1 %cmp3692, label %land.lhs.true.3694, label %if.end.3720

land.lhs.true.3694:                               ; preds = %land.lhs.true.3689
  %1351 = load i8*, i8** %name.addr, align 8
  %arrayidx3695 = getelementptr inbounds i8, i8* %1351, i64 3
  %1352 = load i8, i8* %arrayidx3695, align 1
  %conv3696 = sext i8 %1352 to i32
  %cmp3697 = icmp eq i32 %conv3696, 110
  br i1 %cmp3697, label %land.lhs.true.3699, label %if.end.3720

land.lhs.true.3699:                               ; preds = %land.lhs.true.3694
  %1353 = load i8*, i8** %name.addr, align 8
  %arrayidx3700 = getelementptr inbounds i8, i8* %1353, i64 4
  %1354 = load i8, i8* %arrayidx3700, align 1
  %conv3701 = sext i8 %1354 to i32
  %cmp3702 = icmp eq i32 %conv3701, 99
  br i1 %cmp3702, label %land.lhs.true.3704, label %if.end.3720

land.lhs.true.3704:                               ; preds = %land.lhs.true.3699
  %1355 = load i8*, i8** %name.addr, align 8
  %arrayidx3705 = getelementptr inbounds i8, i8* %1355, i64 5
  %1356 = load i8, i8* %arrayidx3705, align 1
  %conv3706 = sext i8 %1356 to i32
  %cmp3707 = icmp eq i32 %conv3706, 97
  br i1 %cmp3707, label %land.lhs.true.3709, label %if.end.3720

land.lhs.true.3709:                               ; preds = %land.lhs.true.3704
  %1357 = load i8*, i8** %name.addr, align 8
  %arrayidx3710 = getelementptr inbounds i8, i8* %1357, i64 6
  %1358 = load i8, i8* %arrayidx3710, align 1
  %conv3711 = sext i8 %1358 to i32
  %cmp3712 = icmp eq i32 %conv3711, 116
  br i1 %cmp3712, label %land.lhs.true.3714, label %if.end.3720

land.lhs.true.3714:                               ; preds = %land.lhs.true.3709
  %1359 = load i8*, i8** %name.addr, align 8
  %arrayidx3715 = getelementptr inbounds i8, i8* %1359, i64 7
  %1360 = load i8, i8* %arrayidx3715, align 1
  %conv3716 = sext i8 %1360 to i32
  %cmp3717 = icmp eq i32 %conv3716, 101
  br i1 %cmp3717, label %if.then.3719, label %if.end.3720

if.then.3719:                                     ; preds = %land.lhs.true.3714
  store i32 -222, i32* %retval
  br label %return

if.end.3720:                                      ; preds = %land.lhs.true.3714, %land.lhs.true.3709, %land.lhs.true.3704, %land.lhs.true.3699, %land.lhs.true.3694, %land.lhs.true.3689, %sw.bb.3684
  br label %unknown

sw.default.3721:                                  ; preds = %sw.bb.3021
  br label %unknown

sw.bb.3722:                                       ; preds = %entry
  %1361 = load i8*, i8** %name.addr, align 8
  %arrayidx3723 = getelementptr inbounds i8, i8* %1361, i64 0
  %1362 = load i8, i8* %arrayidx3723, align 1
  %conv3724 = sext i8 %1362 to i32
  switch i32 %conv3724, label %sw.default.4061 [
    i32 101, label %sw.bb.3725
    i32 103, label %sw.bb.3767
    i32 108, label %sw.bb.3809
    i32 112, label %sw.bb.3851
    i32 113, label %sw.bb.3893
    i32 114, label %sw.bb.3935
    i32 115, label %sw.bb.3977
    i32 119, label %sw.bb.4019
  ]

sw.bb.3725:                                       ; preds = %sw.bb.3722
  %1363 = load i8*, i8** %name.addr, align 8
  %arrayidx3726 = getelementptr inbounds i8, i8* %1363, i64 1
  %1364 = load i8, i8* %arrayidx3726, align 1
  %conv3727 = sext i8 %1364 to i32
  %cmp3728 = icmp eq i32 %conv3727, 110
  br i1 %cmp3728, label %land.lhs.true.3730, label %if.end.3766

land.lhs.true.3730:                               ; preds = %sw.bb.3725
  %1365 = load i8*, i8** %name.addr, align 8
  %arrayidx3731 = getelementptr inbounds i8, i8* %1365, i64 2
  %1366 = load i8, i8* %arrayidx3731, align 1
  %conv3732 = sext i8 %1366 to i32
  %cmp3733 = icmp eq i32 %conv3732, 100
  br i1 %cmp3733, label %land.lhs.true.3735, label %if.end.3766

land.lhs.true.3735:                               ; preds = %land.lhs.true.3730
  %1367 = load i8*, i8** %name.addr, align 8
  %arrayidx3736 = getelementptr inbounds i8, i8* %1367, i64 3
  %1368 = load i8, i8* %arrayidx3736, align 1
  %conv3737 = sext i8 %1368 to i32
  %cmp3738 = icmp eq i32 %conv3737, 110
  br i1 %cmp3738, label %land.lhs.true.3740, label %if.end.3766

land.lhs.true.3740:                               ; preds = %land.lhs.true.3735
  %1369 = load i8*, i8** %name.addr, align 8
  %arrayidx3741 = getelementptr inbounds i8, i8* %1369, i64 4
  %1370 = load i8, i8* %arrayidx3741, align 1
  %conv3742 = sext i8 %1370 to i32
  %cmp3743 = icmp eq i32 %conv3742, 101
  br i1 %cmp3743, label %land.lhs.true.3745, label %if.end.3766

land.lhs.true.3745:                               ; preds = %land.lhs.true.3740
  %1371 = load i8*, i8** %name.addr, align 8
  %arrayidx3746 = getelementptr inbounds i8, i8* %1371, i64 5
  %1372 = load i8, i8* %arrayidx3746, align 1
  %conv3747 = sext i8 %1372 to i32
  %cmp3748 = icmp eq i32 %conv3747, 116
  br i1 %cmp3748, label %land.lhs.true.3750, label %if.end.3766

land.lhs.true.3750:                               ; preds = %land.lhs.true.3745
  %1373 = load i8*, i8** %name.addr, align 8
  %arrayidx3751 = getelementptr inbounds i8, i8* %1373, i64 6
  %1374 = load i8, i8* %arrayidx3751, align 1
  %conv3752 = sext i8 %1374 to i32
  %cmp3753 = icmp eq i32 %conv3752, 101
  br i1 %cmp3753, label %land.lhs.true.3755, label %if.end.3766

land.lhs.true.3755:                               ; preds = %land.lhs.true.3750
  %1375 = load i8*, i8** %name.addr, align 8
  %arrayidx3756 = getelementptr inbounds i8, i8* %1375, i64 7
  %1376 = load i8, i8* %arrayidx3756, align 1
  %conv3757 = sext i8 %1376 to i32
  %cmp3758 = icmp eq i32 %conv3757, 110
  br i1 %cmp3758, label %land.lhs.true.3760, label %if.end.3766

land.lhs.true.3760:                               ; preds = %land.lhs.true.3755
  %1377 = load i8*, i8** %name.addr, align 8
  %arrayidx3761 = getelementptr inbounds i8, i8* %1377, i64 8
  %1378 = load i8, i8* %arrayidx3761, align 1
  %conv3762 = sext i8 %1378 to i32
  %cmp3763 = icmp eq i32 %conv3762, 116
  br i1 %cmp3763, label %if.then.3765, label %if.end.3766

if.then.3765:                                     ; preds = %land.lhs.true.3760
  store i32 -48, i32* %retval
  br label %return

if.end.3766:                                      ; preds = %land.lhs.true.3760, %land.lhs.true.3755, %land.lhs.true.3750, %land.lhs.true.3745, %land.lhs.true.3740, %land.lhs.true.3735, %land.lhs.true.3730, %sw.bb.3725
  br label %unknown

sw.bb.3767:                                       ; preds = %sw.bb.3722
  %1379 = load i8*, i8** %name.addr, align 8
  %arrayidx3768 = getelementptr inbounds i8, i8* %1379, i64 1
  %1380 = load i8, i8* %arrayidx3768, align 1
  %conv3769 = sext i8 %1380 to i32
  %cmp3770 = icmp eq i32 %conv3769, 101
  br i1 %cmp3770, label %land.lhs.true.3772, label %if.end.3808

land.lhs.true.3772:                               ; preds = %sw.bb.3767
  %1381 = load i8*, i8** %name.addr, align 8
  %arrayidx3773 = getelementptr inbounds i8, i8* %1381, i64 2
  %1382 = load i8, i8* %arrayidx3773, align 1
  %conv3774 = sext i8 %1382 to i32
  %cmp3775 = icmp eq i32 %conv3774, 116
  br i1 %cmp3775, label %land.lhs.true.3777, label %if.end.3808

land.lhs.true.3777:                               ; preds = %land.lhs.true.3772
  %1383 = load i8*, i8** %name.addr, align 8
  %arrayidx3778 = getelementptr inbounds i8, i8* %1383, i64 3
  %1384 = load i8, i8* %arrayidx3778, align 1
  %conv3779 = sext i8 %1384 to i32
  %cmp3780 = icmp eq i32 %conv3779, 110
  br i1 %cmp3780, label %land.lhs.true.3782, label %if.end.3808

land.lhs.true.3782:                               ; preds = %land.lhs.true.3777
  %1385 = load i8*, i8** %name.addr, align 8
  %arrayidx3783 = getelementptr inbounds i8, i8* %1385, i64 4
  %1386 = load i8, i8* %arrayidx3783, align 1
  %conv3784 = sext i8 %1386 to i32
  %cmp3785 = icmp eq i32 %conv3784, 101
  br i1 %cmp3785, label %land.lhs.true.3787, label %if.end.3808

land.lhs.true.3787:                               ; preds = %land.lhs.true.3782
  %1387 = load i8*, i8** %name.addr, align 8
  %arrayidx3788 = getelementptr inbounds i8, i8* %1387, i64 5
  %1388 = load i8, i8* %arrayidx3788, align 1
  %conv3789 = sext i8 %1388 to i32
  %cmp3790 = icmp eq i32 %conv3789, 116
  br i1 %cmp3790, label %land.lhs.true.3792, label %if.end.3808

land.lhs.true.3792:                               ; preds = %land.lhs.true.3787
  %1389 = load i8*, i8** %name.addr, align 8
  %arrayidx3793 = getelementptr inbounds i8, i8* %1389, i64 6
  %1390 = load i8, i8* %arrayidx3793, align 1
  %conv3794 = sext i8 %1390 to i32
  %cmp3795 = icmp eq i32 %conv3794, 101
  br i1 %cmp3795, label %land.lhs.true.3797, label %if.end.3808

land.lhs.true.3797:                               ; preds = %land.lhs.true.3792
  %1391 = load i8*, i8** %name.addr, align 8
  %arrayidx3798 = getelementptr inbounds i8, i8* %1391, i64 7
  %1392 = load i8, i8* %arrayidx3798, align 1
  %conv3799 = sext i8 %1392 to i32
  %cmp3800 = icmp eq i32 %conv3799, 110
  br i1 %cmp3800, label %land.lhs.true.3802, label %if.end.3808

land.lhs.true.3802:                               ; preds = %land.lhs.true.3797
  %1393 = load i8*, i8** %name.addr, align 8
  %arrayidx3803 = getelementptr inbounds i8, i8* %1393, i64 8
  %1394 = load i8, i8* %arrayidx3803, align 1
  %conv3804 = sext i8 %1394 to i32
  %cmp3805 = icmp eq i32 %conv3804, 116
  br i1 %cmp3805, label %if.then.3807, label %if.end.3808

if.then.3807:                                     ; preds = %land.lhs.true.3802
  store i32 -78, i32* %retval
  br label %return

if.end.3808:                                      ; preds = %land.lhs.true.3802, %land.lhs.true.3797, %land.lhs.true.3792, %land.lhs.true.3787, %land.lhs.true.3782, %land.lhs.true.3777, %land.lhs.true.3772, %sw.bb.3767
  br label %unknown

sw.bb.3809:                                       ; preds = %sw.bb.3722
  %1395 = load i8*, i8** %name.addr, align 8
  %arrayidx3810 = getelementptr inbounds i8, i8* %1395, i64 1
  %1396 = load i8, i8* %arrayidx3810, align 1
  %conv3811 = sext i8 %1396 to i32
  %cmp3812 = icmp eq i32 %conv3811, 111
  br i1 %cmp3812, label %land.lhs.true.3814, label %if.end.3850

land.lhs.true.3814:                               ; preds = %sw.bb.3809
  %1397 = load i8*, i8** %name.addr, align 8
  %arrayidx3815 = getelementptr inbounds i8, i8* %1397, i64 2
  %1398 = load i8, i8* %arrayidx3815, align 1
  %conv3816 = sext i8 %1398 to i32
  %cmp3817 = icmp eq i32 %conv3816, 99
  br i1 %cmp3817, label %land.lhs.true.3819, label %if.end.3850

land.lhs.true.3819:                               ; preds = %land.lhs.true.3814
  %1399 = load i8*, i8** %name.addr, align 8
  %arrayidx3820 = getelementptr inbounds i8, i8* %1399, i64 3
  %1400 = load i8, i8* %arrayidx3820, align 1
  %conv3821 = sext i8 %1400 to i32
  %cmp3822 = icmp eq i32 %conv3821, 97
  br i1 %cmp3822, label %land.lhs.true.3824, label %if.end.3850

land.lhs.true.3824:                               ; preds = %land.lhs.true.3819
  %1401 = load i8*, i8** %name.addr, align 8
  %arrayidx3825 = getelementptr inbounds i8, i8* %1401, i64 4
  %1402 = load i8, i8* %arrayidx3825, align 1
  %conv3826 = sext i8 %1402 to i32
  %cmp3827 = icmp eq i32 %conv3826, 108
  br i1 %cmp3827, label %land.lhs.true.3829, label %if.end.3850

land.lhs.true.3829:                               ; preds = %land.lhs.true.3824
  %1403 = load i8*, i8** %name.addr, align 8
  %arrayidx3830 = getelementptr inbounds i8, i8* %1403, i64 5
  %1404 = load i8, i8* %arrayidx3830, align 1
  %conv3831 = sext i8 %1404 to i32
  %cmp3832 = icmp eq i32 %conv3831, 116
  br i1 %cmp3832, label %land.lhs.true.3834, label %if.end.3850

land.lhs.true.3834:                               ; preds = %land.lhs.true.3829
  %1405 = load i8*, i8** %name.addr, align 8
  %arrayidx3835 = getelementptr inbounds i8, i8* %1405, i64 6
  %1406 = load i8, i8* %arrayidx3835, align 1
  %conv3836 = sext i8 %1406 to i32
  %cmp3837 = icmp eq i32 %conv3836, 105
  br i1 %cmp3837, label %land.lhs.true.3839, label %if.end.3850

land.lhs.true.3839:                               ; preds = %land.lhs.true.3834
  %1407 = load i8*, i8** %name.addr, align 8
  %arrayidx3840 = getelementptr inbounds i8, i8* %1407, i64 7
  %1408 = load i8, i8* %arrayidx3840, align 1
  %conv3841 = sext i8 %1408 to i32
  %cmp3842 = icmp eq i32 %conv3841, 109
  br i1 %cmp3842, label %land.lhs.true.3844, label %if.end.3850

land.lhs.true.3844:                               ; preds = %land.lhs.true.3839
  %1409 = load i8*, i8** %name.addr, align 8
  %arrayidx3845 = getelementptr inbounds i8, i8* %1409, i64 8
  %1410 = load i8, i8* %arrayidx3845, align 1
  %conv3846 = sext i8 %1410 to i32
  %cmp3847 = icmp eq i32 %conv3846, 101
  br i1 %cmp3847, label %if.then.3849, label %if.end.3850

if.then.3849:                                     ; preds = %land.lhs.true.3844
  store i32 -115, i32* %retval
  br label %return

if.end.3850:                                      ; preds = %land.lhs.true.3844, %land.lhs.true.3839, %land.lhs.true.3834, %land.lhs.true.3829, %land.lhs.true.3824, %land.lhs.true.3819, %land.lhs.true.3814, %sw.bb.3809
  br label %unknown

sw.bb.3851:                                       ; preds = %sw.bb.3722
  %1411 = load i8*, i8** %name.addr, align 8
  %arrayidx3852 = getelementptr inbounds i8, i8* %1411, i64 1
  %1412 = load i8, i8* %arrayidx3852, align 1
  %conv3853 = sext i8 %1412 to i32
  %cmp3854 = icmp eq i32 %conv3853, 114
  br i1 %cmp3854, label %land.lhs.true.3856, label %if.end.3892

land.lhs.true.3856:                               ; preds = %sw.bb.3851
  %1413 = load i8*, i8** %name.addr, align 8
  %arrayidx3857 = getelementptr inbounds i8, i8* %1413, i64 2
  %1414 = load i8, i8* %arrayidx3857, align 1
  %conv3858 = sext i8 %1414 to i32
  %cmp3859 = icmp eq i32 %conv3858, 111
  br i1 %cmp3859, label %land.lhs.true.3861, label %if.end.3892

land.lhs.true.3861:                               ; preds = %land.lhs.true.3856
  %1415 = load i8*, i8** %name.addr, align 8
  %arrayidx3862 = getelementptr inbounds i8, i8* %1415, i64 3
  %1416 = load i8, i8* %arrayidx3862, align 1
  %conv3863 = sext i8 %1416 to i32
  %cmp3864 = icmp eq i32 %conv3863, 116
  br i1 %cmp3864, label %land.lhs.true.3866, label %if.end.3892

land.lhs.true.3866:                               ; preds = %land.lhs.true.3861
  %1417 = load i8*, i8** %name.addr, align 8
  %arrayidx3867 = getelementptr inbounds i8, i8* %1417, i64 4
  %1418 = load i8, i8* %arrayidx3867, align 1
  %conv3868 = sext i8 %1418 to i32
  %cmp3869 = icmp eq i32 %conv3868, 111
  br i1 %cmp3869, label %land.lhs.true.3871, label %if.end.3892

land.lhs.true.3871:                               ; preds = %land.lhs.true.3866
  %1419 = load i8*, i8** %name.addr, align 8
  %arrayidx3872 = getelementptr inbounds i8, i8* %1419, i64 5
  %1420 = load i8, i8* %arrayidx3872, align 1
  %conv3873 = sext i8 %1420 to i32
  %cmp3874 = icmp eq i32 %conv3873, 116
  br i1 %cmp3874, label %land.lhs.true.3876, label %if.end.3892

land.lhs.true.3876:                               ; preds = %land.lhs.true.3871
  %1421 = load i8*, i8** %name.addr, align 8
  %arrayidx3877 = getelementptr inbounds i8, i8* %1421, i64 6
  %1422 = load i8, i8* %arrayidx3877, align 1
  %conv3878 = sext i8 %1422 to i32
  %cmp3879 = icmp eq i32 %conv3878, 121
  br i1 %cmp3879, label %land.lhs.true.3881, label %if.end.3892

land.lhs.true.3881:                               ; preds = %land.lhs.true.3876
  %1423 = load i8*, i8** %name.addr, align 8
  %arrayidx3882 = getelementptr inbounds i8, i8* %1423, i64 7
  %1424 = load i8, i8* %arrayidx3882, align 1
  %conv3883 = sext i8 %1424 to i32
  %cmp3884 = icmp eq i32 %conv3883, 112
  br i1 %cmp3884, label %land.lhs.true.3886, label %if.end.3892

land.lhs.true.3886:                               ; preds = %land.lhs.true.3881
  %1425 = load i8*, i8** %name.addr, align 8
  %arrayidx3887 = getelementptr inbounds i8, i8* %1425, i64 8
  %1426 = load i8, i8* %arrayidx3887, align 1
  %conv3888 = sext i8 %1426 to i32
  %cmp3889 = icmp eq i32 %conv3888, 101
  br i1 %cmp3889, label %if.then.3891, label %if.end.3892

if.then.3891:                                     ; preds = %land.lhs.true.3886
  store i32 145, i32* %retval
  br label %return

if.end.3892:                                      ; preds = %land.lhs.true.3886, %land.lhs.true.3881, %land.lhs.true.3876, %land.lhs.true.3871, %land.lhs.true.3866, %land.lhs.true.3861, %land.lhs.true.3856, %sw.bb.3851
  br label %unknown

sw.bb.3893:                                       ; preds = %sw.bb.3722
  %1427 = load i8*, i8** %name.addr, align 8
  %arrayidx3894 = getelementptr inbounds i8, i8* %1427, i64 1
  %1428 = load i8, i8* %arrayidx3894, align 1
  %conv3895 = sext i8 %1428 to i32
  %cmp3896 = icmp eq i32 %conv3895, 117
  br i1 %cmp3896, label %land.lhs.true.3898, label %if.end.3934

land.lhs.true.3898:                               ; preds = %sw.bb.3893
  %1429 = load i8*, i8** %name.addr, align 8
  %arrayidx3899 = getelementptr inbounds i8, i8* %1429, i64 2
  %1430 = load i8, i8* %arrayidx3899, align 1
  %conv3900 = sext i8 %1430 to i32
  %cmp3901 = icmp eq i32 %conv3900, 111
  br i1 %cmp3901, label %land.lhs.true.3903, label %if.end.3934

land.lhs.true.3903:                               ; preds = %land.lhs.true.3898
  %1431 = load i8*, i8** %name.addr, align 8
  %arrayidx3904 = getelementptr inbounds i8, i8* %1431, i64 3
  %1432 = load i8, i8* %arrayidx3904, align 1
  %conv3905 = sext i8 %1432 to i32
  %cmp3906 = icmp eq i32 %conv3905, 116
  br i1 %cmp3906, label %land.lhs.true.3908, label %if.end.3934

land.lhs.true.3908:                               ; preds = %land.lhs.true.3903
  %1433 = load i8*, i8** %name.addr, align 8
  %arrayidx3909 = getelementptr inbounds i8, i8* %1433, i64 4
  %1434 = load i8, i8* %arrayidx3909, align 1
  %conv3910 = sext i8 %1434 to i32
  %cmp3911 = icmp eq i32 %conv3910, 101
  br i1 %cmp3911, label %land.lhs.true.3913, label %if.end.3934

land.lhs.true.3913:                               ; preds = %land.lhs.true.3908
  %1435 = load i8*, i8** %name.addr, align 8
  %arrayidx3914 = getelementptr inbounds i8, i8* %1435, i64 5
  %1436 = load i8, i8* %arrayidx3914, align 1
  %conv3915 = sext i8 %1436 to i32
  %cmp3916 = icmp eq i32 %conv3915, 109
  br i1 %cmp3916, label %land.lhs.true.3918, label %if.end.3934

land.lhs.true.3918:                               ; preds = %land.lhs.true.3913
  %1437 = load i8*, i8** %name.addr, align 8
  %arrayidx3919 = getelementptr inbounds i8, i8* %1437, i64 6
  %1438 = load i8, i8* %arrayidx3919, align 1
  %conv3920 = sext i8 %1438 to i32
  %cmp3921 = icmp eq i32 %conv3920, 101
  br i1 %cmp3921, label %land.lhs.true.3923, label %if.end.3934

land.lhs.true.3923:                               ; preds = %land.lhs.true.3918
  %1439 = load i8*, i8** %name.addr, align 8
  %arrayidx3924 = getelementptr inbounds i8, i8* %1439, i64 7
  %1440 = load i8, i8* %arrayidx3924, align 1
  %conv3925 = sext i8 %1440 to i32
  %cmp3926 = icmp eq i32 %conv3925, 116
  br i1 %cmp3926, label %land.lhs.true.3928, label %if.end.3934

land.lhs.true.3928:                               ; preds = %land.lhs.true.3923
  %1441 = load i8*, i8** %name.addr, align 8
  %arrayidx3929 = getelementptr inbounds i8, i8* %1441, i64 8
  %1442 = load i8, i8* %arrayidx3929, align 1
  %conv3930 = sext i8 %1442 to i32
  %cmp3931 = icmp eq i32 %conv3930, 97
  br i1 %cmp3931, label %if.then.3933, label %if.end.3934

if.then.3933:                                     ; preds = %land.lhs.true.3928
  store i32 -150, i32* %retval
  br label %return

if.end.3934:                                      ; preds = %land.lhs.true.3928, %land.lhs.true.3923, %land.lhs.true.3918, %land.lhs.true.3913, %land.lhs.true.3908, %land.lhs.true.3903, %land.lhs.true.3898, %sw.bb.3893
  br label %unknown

sw.bb.3935:                                       ; preds = %sw.bb.3722
  %1443 = load i8*, i8** %name.addr, align 8
  %arrayidx3936 = getelementptr inbounds i8, i8* %1443, i64 1
  %1444 = load i8, i8* %arrayidx3936, align 1
  %conv3937 = sext i8 %1444 to i32
  %cmp3938 = icmp eq i32 %conv3937, 101
  br i1 %cmp3938, label %land.lhs.true.3940, label %if.end.3976

land.lhs.true.3940:                               ; preds = %sw.bb.3935
  %1445 = load i8*, i8** %name.addr, align 8
  %arrayidx3941 = getelementptr inbounds i8, i8* %1445, i64 2
  %1446 = load i8, i8* %arrayidx3941, align 1
  %conv3942 = sext i8 %1446 to i32
  %cmp3943 = icmp eq i32 %conv3942, 119
  br i1 %cmp3943, label %land.lhs.true.3945, label %if.end.3976

land.lhs.true.3945:                               ; preds = %land.lhs.true.3940
  %1447 = load i8*, i8** %name.addr, align 8
  %arrayidx3946 = getelementptr inbounds i8, i8* %1447, i64 3
  %1448 = load i8, i8* %arrayidx3946, align 1
  %conv3947 = sext i8 %1448 to i32
  %cmp3948 = icmp eq i32 %conv3947, 105
  br i1 %cmp3948, label %land.lhs.true.3950, label %if.end.3976

land.lhs.true.3950:                               ; preds = %land.lhs.true.3945
  %1449 = load i8*, i8** %name.addr, align 8
  %arrayidx3951 = getelementptr inbounds i8, i8* %1449, i64 4
  %1450 = load i8, i8* %arrayidx3951, align 1
  %conv3952 = sext i8 %1450 to i32
  %cmp3953 = icmp eq i32 %conv3952, 110
  br i1 %cmp3953, label %land.lhs.true.3955, label %if.end.3976

land.lhs.true.3955:                               ; preds = %land.lhs.true.3950
  %1451 = load i8*, i8** %name.addr, align 8
  %arrayidx3956 = getelementptr inbounds i8, i8* %1451, i64 5
  %1452 = load i8, i8* %arrayidx3956, align 1
  %conv3957 = sext i8 %1452 to i32
  %cmp3958 = icmp eq i32 %conv3957, 100
  br i1 %cmp3958, label %land.lhs.true.3960, label %if.end.3976

land.lhs.true.3960:                               ; preds = %land.lhs.true.3955
  %1453 = load i8*, i8** %name.addr, align 8
  %arrayidx3961 = getelementptr inbounds i8, i8* %1453, i64 6
  %1454 = load i8, i8* %arrayidx3961, align 1
  %conv3962 = sext i8 %1454 to i32
  %cmp3963 = icmp eq i32 %conv3962, 100
  br i1 %cmp3963, label %land.lhs.true.3965, label %if.end.3976

land.lhs.true.3965:                               ; preds = %land.lhs.true.3960
  %1455 = load i8*, i8** %name.addr, align 8
  %arrayidx3966 = getelementptr inbounds i8, i8* %1455, i64 7
  %1456 = load i8, i8* %arrayidx3966, align 1
  %conv3967 = sext i8 %1456 to i32
  %cmp3968 = icmp eq i32 %conv3967, 105
  br i1 %cmp3968, label %land.lhs.true.3970, label %if.end.3976

land.lhs.true.3970:                               ; preds = %land.lhs.true.3965
  %1457 = load i8*, i8** %name.addr, align 8
  %arrayidx3971 = getelementptr inbounds i8, i8* %1457, i64 8
  %1458 = load i8, i8* %arrayidx3971, align 1
  %conv3972 = sext i8 %1458 to i32
  %cmp3973 = icmp eq i32 %conv3972, 114
  br i1 %cmp3973, label %if.then.3975, label %if.end.3976

if.then.3975:                                     ; preds = %land.lhs.true.3970
  store i32 -167, i32* %retval
  br label %return

if.end.3976:                                      ; preds = %land.lhs.true.3970, %land.lhs.true.3965, %land.lhs.true.3960, %land.lhs.true.3955, %land.lhs.true.3950, %land.lhs.true.3945, %land.lhs.true.3940, %sw.bb.3935
  br label %unknown

sw.bb.3977:                                       ; preds = %sw.bb.3722
  %1459 = load i8*, i8** %name.addr, align 8
  %arrayidx3978 = getelementptr inbounds i8, i8* %1459, i64 1
  %1460 = load i8, i8* %arrayidx3978, align 1
  %conv3979 = sext i8 %1460 to i32
  %cmp3980 = icmp eq i32 %conv3979, 101
  br i1 %cmp3980, label %land.lhs.true.3982, label %if.end.4018

land.lhs.true.3982:                               ; preds = %sw.bb.3977
  %1461 = load i8*, i8** %name.addr, align 8
  %arrayidx3983 = getelementptr inbounds i8, i8* %1461, i64 2
  %1462 = load i8, i8* %arrayidx3983, align 1
  %conv3984 = sext i8 %1462 to i32
  %cmp3985 = icmp eq i32 %conv3984, 116
  br i1 %cmp3985, label %land.lhs.true.3987, label %if.end.4018

land.lhs.true.3987:                               ; preds = %land.lhs.true.3982
  %1463 = load i8*, i8** %name.addr, align 8
  %arrayidx3988 = getelementptr inbounds i8, i8* %1463, i64 3
  %1464 = load i8, i8* %arrayidx3988, align 1
  %conv3989 = sext i8 %1464 to i32
  %cmp3990 = icmp eq i32 %conv3989, 110
  br i1 %cmp3990, label %land.lhs.true.3992, label %if.end.4018

land.lhs.true.3992:                               ; preds = %land.lhs.true.3987
  %1465 = load i8*, i8** %name.addr, align 8
  %arrayidx3993 = getelementptr inbounds i8, i8* %1465, i64 4
  %1466 = load i8, i8* %arrayidx3993, align 1
  %conv3994 = sext i8 %1466 to i32
  %cmp3995 = icmp eq i32 %conv3994, 101
  br i1 %cmp3995, label %land.lhs.true.3997, label %if.end.4018

land.lhs.true.3997:                               ; preds = %land.lhs.true.3992
  %1467 = load i8*, i8** %name.addr, align 8
  %arrayidx3998 = getelementptr inbounds i8, i8* %1467, i64 5
  %1468 = load i8, i8* %arrayidx3998, align 1
  %conv3999 = sext i8 %1468 to i32
  %cmp4000 = icmp eq i32 %conv3999, 116
  br i1 %cmp4000, label %land.lhs.true.4002, label %if.end.4018

land.lhs.true.4002:                               ; preds = %land.lhs.true.3997
  %1469 = load i8*, i8** %name.addr, align 8
  %arrayidx4003 = getelementptr inbounds i8, i8* %1469, i64 6
  %1470 = load i8, i8* %arrayidx4003, align 1
  %conv4004 = sext i8 %1470 to i32
  %cmp4005 = icmp eq i32 %conv4004, 101
  br i1 %cmp4005, label %land.lhs.true.4007, label %if.end.4018

land.lhs.true.4007:                               ; preds = %land.lhs.true.4002
  %1471 = load i8*, i8** %name.addr, align 8
  %arrayidx4008 = getelementptr inbounds i8, i8* %1471, i64 7
  %1472 = load i8, i8* %arrayidx4008, align 1
  %conv4009 = sext i8 %1472 to i32
  %cmp4010 = icmp eq i32 %conv4009, 110
  br i1 %cmp4010, label %land.lhs.true.4012, label %if.end.4018

land.lhs.true.4012:                               ; preds = %land.lhs.true.4007
  %1473 = load i8*, i8** %name.addr, align 8
  %arrayidx4013 = getelementptr inbounds i8, i8* %1473, i64 8
  %1474 = load i8, i8* %arrayidx4013, align 1
  %conv4014 = sext i8 %1474 to i32
  %cmp4015 = icmp eq i32 %conv4014, 116
  br i1 %cmp4015, label %if.then.4017, label %if.end.4018

if.then.4017:                                     ; preds = %land.lhs.true.4012
  store i32 -181, i32* %retval
  br label %return

if.end.4018:                                      ; preds = %land.lhs.true.4012, %land.lhs.true.4007, %land.lhs.true.4002, %land.lhs.true.3997, %land.lhs.true.3992, %land.lhs.true.3987, %land.lhs.true.3982, %sw.bb.3977
  br label %unknown

sw.bb.4019:                                       ; preds = %sw.bb.3722
  %1475 = load i8*, i8** %name.addr, align 8
  %arrayidx4020 = getelementptr inbounds i8, i8* %1475, i64 1
  %1476 = load i8, i8* %arrayidx4020, align 1
  %conv4021 = sext i8 %1476 to i32
  %cmp4022 = icmp eq i32 %conv4021, 97
  br i1 %cmp4022, label %land.lhs.true.4024, label %if.end.4060

land.lhs.true.4024:                               ; preds = %sw.bb.4019
  %1477 = load i8*, i8** %name.addr, align 8
  %arrayidx4025 = getelementptr inbounds i8, i8* %1477, i64 2
  %1478 = load i8, i8* %arrayidx4025, align 1
  %conv4026 = sext i8 %1478 to i32
  %cmp4027 = icmp eq i32 %conv4026, 110
  br i1 %cmp4027, label %land.lhs.true.4029, label %if.end.4060

land.lhs.true.4029:                               ; preds = %land.lhs.true.4024
  %1479 = load i8*, i8** %name.addr, align 8
  %arrayidx4030 = getelementptr inbounds i8, i8* %1479, i64 3
  %1480 = load i8, i8* %arrayidx4030, align 1
  %conv4031 = sext i8 %1480 to i32
  %cmp4032 = icmp eq i32 %conv4031, 116
  br i1 %cmp4032, label %land.lhs.true.4034, label %if.end.4060

land.lhs.true.4034:                               ; preds = %land.lhs.true.4029
  %1481 = load i8*, i8** %name.addr, align 8
  %arrayidx4035 = getelementptr inbounds i8, i8* %1481, i64 4
  %1482 = load i8, i8* %arrayidx4035, align 1
  %conv4036 = sext i8 %1482 to i32
  %cmp4037 = icmp eq i32 %conv4036, 97
  br i1 %cmp4037, label %land.lhs.true.4039, label %if.end.4060

land.lhs.true.4039:                               ; preds = %land.lhs.true.4034
  %1483 = load i8*, i8** %name.addr, align 8
  %arrayidx4040 = getelementptr inbounds i8, i8* %1483, i64 5
  %1484 = load i8, i8* %arrayidx4040, align 1
  %conv4041 = sext i8 %1484 to i32
  %cmp4042 = icmp eq i32 %conv4041, 114
  br i1 %cmp4042, label %land.lhs.true.4044, label %if.end.4060

land.lhs.true.4044:                               ; preds = %land.lhs.true.4039
  %1485 = load i8*, i8** %name.addr, align 8
  %arrayidx4045 = getelementptr inbounds i8, i8* %1485, i64 6
  %1486 = load i8, i8* %arrayidx4045, align 1
  %conv4046 = sext i8 %1486 to i32
  %cmp4047 = icmp eq i32 %conv4046, 114
  br i1 %cmp4047, label %land.lhs.true.4049, label %if.end.4060

land.lhs.true.4049:                               ; preds = %land.lhs.true.4044
  %1487 = load i8*, i8** %name.addr, align 8
  %arrayidx4050 = getelementptr inbounds i8, i8* %1487, i64 7
  %1488 = load i8, i8* %arrayidx4050, align 1
  %conv4051 = sext i8 %1488 to i32
  %cmp4052 = icmp eq i32 %conv4051, 97
  br i1 %cmp4052, label %land.lhs.true.4054, label %if.end.4060

land.lhs.true.4054:                               ; preds = %land.lhs.true.4049
  %1489 = load i8*, i8** %name.addr, align 8
  %arrayidx4055 = getelementptr inbounds i8, i8* %1489, i64 8
  %1490 = load i8, i8* %arrayidx4055, align 1
  %conv4056 = sext i8 %1490 to i32
  %cmp4057 = icmp eq i32 %conv4056, 121
  br i1 %cmp4057, label %if.then.4059, label %if.end.4060

if.then.4059:                                     ; preds = %land.lhs.true.4054
  store i32 -239, i32* %retval
  br label %return

if.end.4060:                                      ; preds = %land.lhs.true.4054, %land.lhs.true.4049, %land.lhs.true.4044, %land.lhs.true.4039, %land.lhs.true.4034, %land.lhs.true.4029, %land.lhs.true.4024, %sw.bb.4019
  br label %unknown

sw.default.4061:                                  ; preds = %sw.bb.3722
  br label %unknown

sw.bb.4062:                                       ; preds = %entry
  %1491 = load i8*, i8** %name.addr, align 8
  %arrayidx4063 = getelementptr inbounds i8, i8* %1491, i64 0
  %1492 = load i8, i8* %arrayidx4063, align 1
  %conv4064 = sext i8 %1492 to i32
  switch i32 %conv4064, label %sw.default.4395 [
    i32 101, label %sw.bb.4065
    i32 103, label %sw.bb.4144
    i32 115, label %sw.bb.4249
  ]

sw.bb.4065:                                       ; preds = %sw.bb.4062
  %1493 = load i8*, i8** %name.addr, align 8
  %arrayidx4066 = getelementptr inbounds i8, i8* %1493, i64 1
  %1494 = load i8, i8* %arrayidx4066, align 1
  %conv4067 = sext i8 %1494 to i32
  %cmp4068 = icmp eq i32 %conv4067, 110
  br i1 %cmp4068, label %land.lhs.true.4070, label %if.end.4143

land.lhs.true.4070:                               ; preds = %sw.bb.4065
  %1495 = load i8*, i8** %name.addr, align 8
  %arrayidx4071 = getelementptr inbounds i8, i8* %1495, i64 2
  %1496 = load i8, i8* %arrayidx4071, align 1
  %conv4072 = sext i8 %1496 to i32
  %cmp4073 = icmp eq i32 %conv4072, 100
  br i1 %cmp4073, label %if.then.4075, label %if.end.4143

if.then.4075:                                     ; preds = %land.lhs.true.4070
  %1497 = load i8*, i8** %name.addr, align 8
  %arrayidx4076 = getelementptr inbounds i8, i8* %1497, i64 3
  %1498 = load i8, i8* %arrayidx4076, align 1
  %conv4077 = sext i8 %1498 to i32
  switch i32 %conv4077, label %sw.default.4142 [
    i32 104, label %sw.bb.4078
    i32 115, label %sw.bb.4110
  ]

sw.bb.4078:                                       ; preds = %if.then.4075
  %1499 = load i8*, i8** %name.addr, align 8
  %arrayidx4079 = getelementptr inbounds i8, i8* %1499, i64 4
  %1500 = load i8, i8* %arrayidx4079, align 1
  %conv4080 = sext i8 %1500 to i32
  %cmp4081 = icmp eq i32 %conv4080, 111
  br i1 %cmp4081, label %land.lhs.true.4083, label %if.end.4109

land.lhs.true.4083:                               ; preds = %sw.bb.4078
  %1501 = load i8*, i8** %name.addr, align 8
  %arrayidx4084 = getelementptr inbounds i8, i8* %1501, i64 5
  %1502 = load i8, i8* %arrayidx4084, align 1
  %conv4085 = sext i8 %1502 to i32
  %cmp4086 = icmp eq i32 %conv4085, 115
  br i1 %cmp4086, label %land.lhs.true.4088, label %if.end.4109

land.lhs.true.4088:                               ; preds = %land.lhs.true.4083
  %1503 = load i8*, i8** %name.addr, align 8
  %arrayidx4089 = getelementptr inbounds i8, i8* %1503, i64 6
  %1504 = load i8, i8* %arrayidx4089, align 1
  %conv4090 = sext i8 %1504 to i32
  %cmp4091 = icmp eq i32 %conv4090, 116
  br i1 %cmp4091, label %land.lhs.true.4093, label %if.end.4109

land.lhs.true.4093:                               ; preds = %land.lhs.true.4088
  %1505 = load i8*, i8** %name.addr, align 8
  %arrayidx4094 = getelementptr inbounds i8, i8* %1505, i64 7
  %1506 = load i8, i8* %arrayidx4094, align 1
  %conv4095 = sext i8 %1506 to i32
  %cmp4096 = icmp eq i32 %conv4095, 101
  br i1 %cmp4096, label %land.lhs.true.4098, label %if.end.4109

land.lhs.true.4098:                               ; preds = %land.lhs.true.4093
  %1507 = load i8*, i8** %name.addr, align 8
  %arrayidx4099 = getelementptr inbounds i8, i8* %1507, i64 8
  %1508 = load i8, i8* %arrayidx4099, align 1
  %conv4100 = sext i8 %1508 to i32
  %cmp4101 = icmp eq i32 %conv4100, 110
  br i1 %cmp4101, label %land.lhs.true.4103, label %if.end.4109

land.lhs.true.4103:                               ; preds = %land.lhs.true.4098
  %1509 = load i8*, i8** %name.addr, align 8
  %arrayidx4104 = getelementptr inbounds i8, i8* %1509, i64 9
  %1510 = load i8, i8* %arrayidx4104, align 1
  %conv4105 = sext i8 %1510 to i32
  %cmp4106 = icmp eq i32 %conv4105, 116
  br i1 %cmp4106, label %if.then.4108, label %if.end.4109

if.then.4108:                                     ; preds = %land.lhs.true.4103
  store i32 -47, i32* %retval
  br label %return

if.end.4109:                                      ; preds = %land.lhs.true.4103, %land.lhs.true.4098, %land.lhs.true.4093, %land.lhs.true.4088, %land.lhs.true.4083, %sw.bb.4078
  br label %unknown

sw.bb.4110:                                       ; preds = %if.then.4075
  %1511 = load i8*, i8** %name.addr, align 8
  %arrayidx4111 = getelementptr inbounds i8, i8* %1511, i64 4
  %1512 = load i8, i8* %arrayidx4111, align 1
  %conv4112 = sext i8 %1512 to i32
  %cmp4113 = icmp eq i32 %conv4112, 101
  br i1 %cmp4113, label %land.lhs.true.4115, label %if.end.4141

land.lhs.true.4115:                               ; preds = %sw.bb.4110
  %1513 = load i8*, i8** %name.addr, align 8
  %arrayidx4116 = getelementptr inbounds i8, i8* %1513, i64 5
  %1514 = load i8, i8* %arrayidx4116, align 1
  %conv4117 = sext i8 %1514 to i32
  %cmp4118 = icmp eq i32 %conv4117, 114
  br i1 %cmp4118, label %land.lhs.true.4120, label %if.end.4141

land.lhs.true.4120:                               ; preds = %land.lhs.true.4115
  %1515 = load i8*, i8** %name.addr, align 8
  %arrayidx4121 = getelementptr inbounds i8, i8* %1515, i64 6
  %1516 = load i8, i8* %arrayidx4121, align 1
  %conv4122 = sext i8 %1516 to i32
  %cmp4123 = icmp eq i32 %conv4122, 118
  br i1 %cmp4123, label %land.lhs.true.4125, label %if.end.4141

land.lhs.true.4125:                               ; preds = %land.lhs.true.4120
  %1517 = load i8*, i8** %name.addr, align 8
  %arrayidx4126 = getelementptr inbounds i8, i8* %1517, i64 7
  %1518 = load i8, i8* %arrayidx4126, align 1
  %conv4127 = sext i8 %1518 to i32
  %cmp4128 = icmp eq i32 %conv4127, 101
  br i1 %cmp4128, label %land.lhs.true.4130, label %if.end.4141

land.lhs.true.4130:                               ; preds = %land.lhs.true.4125
  %1519 = load i8*, i8** %name.addr, align 8
  %arrayidx4131 = getelementptr inbounds i8, i8* %1519, i64 8
  %1520 = load i8, i8* %arrayidx4131, align 1
  %conv4132 = sext i8 %1520 to i32
  %cmp4133 = icmp eq i32 %conv4132, 110
  br i1 %cmp4133, label %land.lhs.true.4135, label %if.end.4141

land.lhs.true.4135:                               ; preds = %land.lhs.true.4130
  %1521 = load i8*, i8** %name.addr, align 8
  %arrayidx4136 = getelementptr inbounds i8, i8* %1521, i64 9
  %1522 = load i8, i8* %arrayidx4136, align 1
  %conv4137 = sext i8 %1522 to i32
  %cmp4138 = icmp eq i32 %conv4137, 116
  br i1 %cmp4138, label %if.then.4140, label %if.end.4141

if.then.4140:                                     ; preds = %land.lhs.true.4135
  store i32 -51, i32* %retval
  br label %return

if.end.4141:                                      ; preds = %land.lhs.true.4135, %land.lhs.true.4130, %land.lhs.true.4125, %land.lhs.true.4120, %land.lhs.true.4115, %sw.bb.4110
  br label %unknown

sw.default.4142:                                  ; preds = %if.then.4075
  br label %unknown

if.end.4143:                                      ; preds = %land.lhs.true.4070, %sw.bb.4065
  br label %unknown

sw.bb.4144:                                       ; preds = %sw.bb.4062
  %1523 = load i8*, i8** %name.addr, align 8
  %arrayidx4145 = getelementptr inbounds i8, i8* %1523, i64 1
  %1524 = load i8, i8* %arrayidx4145, align 1
  %conv4146 = sext i8 %1524 to i32
  %cmp4147 = icmp eq i32 %conv4146, 101
  br i1 %cmp4147, label %land.lhs.true.4149, label %if.end.4248

land.lhs.true.4149:                               ; preds = %sw.bb.4144
  %1525 = load i8*, i8** %name.addr, align 8
  %arrayidx4150 = getelementptr inbounds i8, i8* %1525, i64 2
  %1526 = load i8, i8* %arrayidx4150, align 1
  %conv4151 = sext i8 %1526 to i32
  %cmp4152 = icmp eq i32 %conv4151, 116
  br i1 %cmp4152, label %if.then.4154, label %if.end.4248

if.then.4154:                                     ; preds = %land.lhs.true.4149
  %1527 = load i8*, i8** %name.addr, align 8
  %arrayidx4155 = getelementptr inbounds i8, i8* %1527, i64 3
  %1528 = load i8, i8* %arrayidx4155, align 1
  %conv4156 = sext i8 %1528 to i32
  switch i32 %conv4156, label %sw.default.4247 [
    i32 104, label %sw.bb.4157
    i32 115, label %sw.bb.4189
  ]

sw.bb.4157:                                       ; preds = %if.then.4154
  %1529 = load i8*, i8** %name.addr, align 8
  %arrayidx4158 = getelementptr inbounds i8, i8* %1529, i64 4
  %1530 = load i8, i8* %arrayidx4158, align 1
  %conv4159 = sext i8 %1530 to i32
  %cmp4160 = icmp eq i32 %conv4159, 111
  br i1 %cmp4160, label %land.lhs.true.4162, label %if.end.4188

land.lhs.true.4162:                               ; preds = %sw.bb.4157
  %1531 = load i8*, i8** %name.addr, align 8
  %arrayidx4163 = getelementptr inbounds i8, i8* %1531, i64 5
  %1532 = load i8, i8* %arrayidx4163, align 1
  %conv4164 = sext i8 %1532 to i32
  %cmp4165 = icmp eq i32 %conv4164, 115
  br i1 %cmp4165, label %land.lhs.true.4167, label %if.end.4188

land.lhs.true.4167:                               ; preds = %land.lhs.true.4162
  %1533 = load i8*, i8** %name.addr, align 8
  %arrayidx4168 = getelementptr inbounds i8, i8* %1533, i64 6
  %1534 = load i8, i8* %arrayidx4168, align 1
  %conv4169 = sext i8 %1534 to i32
  %cmp4170 = icmp eq i32 %conv4169, 116
  br i1 %cmp4170, label %land.lhs.true.4172, label %if.end.4188

land.lhs.true.4172:                               ; preds = %land.lhs.true.4167
  %1535 = load i8*, i8** %name.addr, align 8
  %arrayidx4173 = getelementptr inbounds i8, i8* %1535, i64 7
  %1536 = load i8, i8* %arrayidx4173, align 1
  %conv4174 = sext i8 %1536 to i32
  %cmp4175 = icmp eq i32 %conv4174, 101
  br i1 %cmp4175, label %land.lhs.true.4177, label %if.end.4188

land.lhs.true.4177:                               ; preds = %land.lhs.true.4172
  %1537 = load i8*, i8** %name.addr, align 8
  %arrayidx4178 = getelementptr inbounds i8, i8* %1537, i64 8
  %1538 = load i8, i8* %arrayidx4178, align 1
  %conv4179 = sext i8 %1538 to i32
  %cmp4180 = icmp eq i32 %conv4179, 110
  br i1 %cmp4180, label %land.lhs.true.4182, label %if.end.4188

land.lhs.true.4182:                               ; preds = %land.lhs.true.4177
  %1539 = load i8*, i8** %name.addr, align 8
  %arrayidx4183 = getelementptr inbounds i8, i8* %1539, i64 9
  %1540 = load i8, i8* %arrayidx4183, align 1
  %conv4184 = sext i8 %1540 to i32
  %cmp4185 = icmp eq i32 %conv4184, 116
  br i1 %cmp4185, label %if.then.4187, label %if.end.4188

if.then.4187:                                     ; preds = %land.lhs.true.4182
  store i32 -74, i32* %retval
  br label %return

if.end.4188:                                      ; preds = %land.lhs.true.4182, %land.lhs.true.4177, %land.lhs.true.4172, %land.lhs.true.4167, %land.lhs.true.4162, %sw.bb.4157
  br label %unknown

sw.bb.4189:                                       ; preds = %if.then.4154
  %1541 = load i8*, i8** %name.addr, align 8
  %arrayidx4190 = getelementptr inbounds i8, i8* %1541, i64 4
  %1542 = load i8, i8* %arrayidx4190, align 1
  %conv4191 = sext i8 %1542 to i32
  switch i32 %conv4191, label %sw.default.4246 [
    i32 101, label %sw.bb.4192
    i32 111, label %sw.bb.4219
  ]

sw.bb.4192:                                       ; preds = %sw.bb.4189
  %1543 = load i8*, i8** %name.addr, align 8
  %arrayidx4193 = getelementptr inbounds i8, i8* %1543, i64 5
  %1544 = load i8, i8* %arrayidx4193, align 1
  %conv4194 = sext i8 %1544 to i32
  %cmp4195 = icmp eq i32 %conv4194, 114
  br i1 %cmp4195, label %land.lhs.true.4197, label %if.end.4218

land.lhs.true.4197:                               ; preds = %sw.bb.4192
  %1545 = load i8*, i8** %name.addr, align 8
  %arrayidx4198 = getelementptr inbounds i8, i8* %1545, i64 6
  %1546 = load i8, i8* %arrayidx4198, align 1
  %conv4199 = sext i8 %1546 to i32
  %cmp4200 = icmp eq i32 %conv4199, 118
  br i1 %cmp4200, label %land.lhs.true.4202, label %if.end.4218

land.lhs.true.4202:                               ; preds = %land.lhs.true.4197
  %1547 = load i8*, i8** %name.addr, align 8
  %arrayidx4203 = getelementptr inbounds i8, i8* %1547, i64 7
  %1548 = load i8, i8* %arrayidx4203, align 1
  %conv4204 = sext i8 %1548 to i32
  %cmp4205 = icmp eq i32 %conv4204, 101
  br i1 %cmp4205, label %land.lhs.true.4207, label %if.end.4218

land.lhs.true.4207:                               ; preds = %land.lhs.true.4202
  %1549 = load i8*, i8** %name.addr, align 8
  %arrayidx4208 = getelementptr inbounds i8, i8* %1549, i64 8
  %1550 = load i8, i8* %arrayidx4208, align 1
  %conv4209 = sext i8 %1550 to i32
  %cmp4210 = icmp eq i32 %conv4209, 110
  br i1 %cmp4210, label %land.lhs.true.4212, label %if.end.4218

land.lhs.true.4212:                               ; preds = %land.lhs.true.4207
  %1551 = load i8*, i8** %name.addr, align 8
  %arrayidx4213 = getelementptr inbounds i8, i8* %1551, i64 9
  %1552 = load i8, i8* %arrayidx4213, align 1
  %conv4214 = sext i8 %1552 to i32
  %cmp4215 = icmp eq i32 %conv4214, 116
  br i1 %cmp4215, label %if.then.4217, label %if.end.4218

if.then.4217:                                     ; preds = %land.lhs.true.4212
  store i32 -91, i32* %retval
  br label %return

if.end.4218:                                      ; preds = %land.lhs.true.4212, %land.lhs.true.4207, %land.lhs.true.4202, %land.lhs.true.4197, %sw.bb.4192
  br label %unknown

sw.bb.4219:                                       ; preds = %sw.bb.4189
  %1553 = load i8*, i8** %name.addr, align 8
  %arrayidx4220 = getelementptr inbounds i8, i8* %1553, i64 5
  %1554 = load i8, i8* %arrayidx4220, align 1
  %conv4221 = sext i8 %1554 to i32
  %cmp4222 = icmp eq i32 %conv4221, 99
  br i1 %cmp4222, label %land.lhs.true.4224, label %if.end.4245

land.lhs.true.4224:                               ; preds = %sw.bb.4219
  %1555 = load i8*, i8** %name.addr, align 8
  %arrayidx4225 = getelementptr inbounds i8, i8* %1555, i64 6
  %1556 = load i8, i8* %arrayidx4225, align 1
  %conv4226 = sext i8 %1556 to i32
  %cmp4227 = icmp eq i32 %conv4226, 107
  br i1 %cmp4227, label %land.lhs.true.4229, label %if.end.4245

land.lhs.true.4229:                               ; preds = %land.lhs.true.4224
  %1557 = load i8*, i8** %name.addr, align 8
  %arrayidx4230 = getelementptr inbounds i8, i8* %1557, i64 7
  %1558 = load i8, i8* %arrayidx4230, align 1
  %conv4231 = sext i8 %1558 to i32
  %cmp4232 = icmp eq i32 %conv4231, 111
  br i1 %cmp4232, label %land.lhs.true.4234, label %if.end.4245

land.lhs.true.4234:                               ; preds = %land.lhs.true.4229
  %1559 = load i8*, i8** %name.addr, align 8
  %arrayidx4235 = getelementptr inbounds i8, i8* %1559, i64 8
  %1560 = load i8, i8* %arrayidx4235, align 1
  %conv4236 = sext i8 %1560 to i32
  %cmp4237 = icmp eq i32 %conv4236, 112
  br i1 %cmp4237, label %land.lhs.true.4239, label %if.end.4245

land.lhs.true.4239:                               ; preds = %land.lhs.true.4234
  %1561 = load i8*, i8** %name.addr, align 8
  %arrayidx4240 = getelementptr inbounds i8, i8* %1561, i64 9
  %1562 = load i8, i8* %arrayidx4240, align 1
  %conv4241 = sext i8 %1562 to i32
  %cmp4242 = icmp eq i32 %conv4241, 116
  br i1 %cmp4242, label %if.then.4244, label %if.end.4245

if.then.4244:                                     ; preds = %land.lhs.true.4239
  store i32 -93, i32* %retval
  br label %return

if.end.4245:                                      ; preds = %land.lhs.true.4239, %land.lhs.true.4234, %land.lhs.true.4229, %land.lhs.true.4224, %sw.bb.4219
  br label %unknown

sw.default.4246:                                  ; preds = %sw.bb.4189
  br label %unknown

sw.default.4247:                                  ; preds = %if.then.4154
  br label %unknown

if.end.4248:                                      ; preds = %land.lhs.true.4149, %sw.bb.4144
  br label %unknown

sw.bb.4249:                                       ; preds = %sw.bb.4062
  %1563 = load i8*, i8** %name.addr, align 8
  %arrayidx4250 = getelementptr inbounds i8, i8* %1563, i64 1
  %1564 = load i8, i8* %arrayidx4250, align 1
  %conv4251 = sext i8 %1564 to i32
  switch i32 %conv4251, label %sw.default.4394 [
    i32 101, label %sw.bb.4252
    i32 111, label %sw.bb.4352
  ]

sw.bb.4252:                                       ; preds = %sw.bb.4249
  %1565 = load i8*, i8** %name.addr, align 8
  %arrayidx4253 = getelementptr inbounds i8, i8* %1565, i64 2
  %1566 = load i8, i8* %arrayidx4253, align 1
  %conv4254 = sext i8 %1566 to i32
  %cmp4255 = icmp eq i32 %conv4254, 116
  br i1 %cmp4255, label %if.then.4257, label %if.end.4351

if.then.4257:                                     ; preds = %sw.bb.4252
  %1567 = load i8*, i8** %name.addr, align 8
  %arrayidx4258 = getelementptr inbounds i8, i8* %1567, i64 3
  %1568 = load i8, i8* %arrayidx4258, align 1
  %conv4259 = sext i8 %1568 to i32
  switch i32 %conv4259, label %sw.default.4350 [
    i32 104, label %sw.bb.4260
    i32 115, label %sw.bb.4292
  ]

sw.bb.4260:                                       ; preds = %if.then.4257
  %1569 = load i8*, i8** %name.addr, align 8
  %arrayidx4261 = getelementptr inbounds i8, i8* %1569, i64 4
  %1570 = load i8, i8* %arrayidx4261, align 1
  %conv4262 = sext i8 %1570 to i32
  %cmp4263 = icmp eq i32 %conv4262, 111
  br i1 %cmp4263, label %land.lhs.true.4265, label %if.end.4291

land.lhs.true.4265:                               ; preds = %sw.bb.4260
  %1571 = load i8*, i8** %name.addr, align 8
  %arrayidx4266 = getelementptr inbounds i8, i8* %1571, i64 5
  %1572 = load i8, i8* %arrayidx4266, align 1
  %conv4267 = sext i8 %1572 to i32
  %cmp4268 = icmp eq i32 %conv4267, 115
  br i1 %cmp4268, label %land.lhs.true.4270, label %if.end.4291

land.lhs.true.4270:                               ; preds = %land.lhs.true.4265
  %1573 = load i8*, i8** %name.addr, align 8
  %arrayidx4271 = getelementptr inbounds i8, i8* %1573, i64 6
  %1574 = load i8, i8* %arrayidx4271, align 1
  %conv4272 = sext i8 %1574 to i32
  %cmp4273 = icmp eq i32 %conv4272, 116
  br i1 %cmp4273, label %land.lhs.true.4275, label %if.end.4291

land.lhs.true.4275:                               ; preds = %land.lhs.true.4270
  %1575 = load i8*, i8** %name.addr, align 8
  %arrayidx4276 = getelementptr inbounds i8, i8* %1575, i64 7
  %1576 = load i8, i8* %arrayidx4276, align 1
  %conv4277 = sext i8 %1576 to i32
  %cmp4278 = icmp eq i32 %conv4277, 101
  br i1 %cmp4278, label %land.lhs.true.4280, label %if.end.4291

land.lhs.true.4280:                               ; preds = %land.lhs.true.4275
  %1577 = load i8*, i8** %name.addr, align 8
  %arrayidx4281 = getelementptr inbounds i8, i8* %1577, i64 8
  %1578 = load i8, i8* %arrayidx4281, align 1
  %conv4282 = sext i8 %1578 to i32
  %cmp4283 = icmp eq i32 %conv4282, 110
  br i1 %cmp4283, label %land.lhs.true.4285, label %if.end.4291

land.lhs.true.4285:                               ; preds = %land.lhs.true.4280
  %1579 = load i8*, i8** %name.addr, align 8
  %arrayidx4286 = getelementptr inbounds i8, i8* %1579, i64 9
  %1580 = load i8, i8* %arrayidx4286, align 1
  %conv4287 = sext i8 %1580 to i32
  %cmp4288 = icmp eq i32 %conv4287, 116
  br i1 %cmp4288, label %if.then.4290, label %if.end.4291

if.then.4290:                                     ; preds = %land.lhs.true.4285
  store i32 -180, i32* %retval
  br label %return

if.end.4291:                                      ; preds = %land.lhs.true.4285, %land.lhs.true.4280, %land.lhs.true.4275, %land.lhs.true.4270, %land.lhs.true.4265, %sw.bb.4260
  br label %unknown

sw.bb.4292:                                       ; preds = %if.then.4257
  %1581 = load i8*, i8** %name.addr, align 8
  %arrayidx4293 = getelementptr inbounds i8, i8* %1581, i64 4
  %1582 = load i8, i8* %arrayidx4293, align 1
  %conv4294 = sext i8 %1582 to i32
  switch i32 %conv4294, label %sw.default.4349 [
    i32 101, label %sw.bb.4295
    i32 111, label %sw.bb.4322
  ]

sw.bb.4295:                                       ; preds = %sw.bb.4292
  %1583 = load i8*, i8** %name.addr, align 8
  %arrayidx4296 = getelementptr inbounds i8, i8* %1583, i64 5
  %1584 = load i8, i8* %arrayidx4296, align 1
  %conv4297 = sext i8 %1584 to i32
  %cmp4298 = icmp eq i32 %conv4297, 114
  br i1 %cmp4298, label %land.lhs.true.4300, label %if.end.4321

land.lhs.true.4300:                               ; preds = %sw.bb.4295
  %1585 = load i8*, i8** %name.addr, align 8
  %arrayidx4301 = getelementptr inbounds i8, i8* %1585, i64 6
  %1586 = load i8, i8* %arrayidx4301, align 1
  %conv4302 = sext i8 %1586 to i32
  %cmp4303 = icmp eq i32 %conv4302, 118
  br i1 %cmp4303, label %land.lhs.true.4305, label %if.end.4321

land.lhs.true.4305:                               ; preds = %land.lhs.true.4300
  %1587 = load i8*, i8** %name.addr, align 8
  %arrayidx4306 = getelementptr inbounds i8, i8* %1587, i64 7
  %1588 = load i8, i8* %arrayidx4306, align 1
  %conv4307 = sext i8 %1588 to i32
  %cmp4308 = icmp eq i32 %conv4307, 101
  br i1 %cmp4308, label %land.lhs.true.4310, label %if.end.4321

land.lhs.true.4310:                               ; preds = %land.lhs.true.4305
  %1589 = load i8*, i8** %name.addr, align 8
  %arrayidx4311 = getelementptr inbounds i8, i8* %1589, i64 8
  %1590 = load i8, i8* %arrayidx4311, align 1
  %conv4312 = sext i8 %1590 to i32
  %cmp4313 = icmp eq i32 %conv4312, 110
  br i1 %cmp4313, label %land.lhs.true.4315, label %if.end.4321

land.lhs.true.4315:                               ; preds = %land.lhs.true.4310
  %1591 = load i8*, i8** %name.addr, align 8
  %arrayidx4316 = getelementptr inbounds i8, i8* %1591, i64 9
  %1592 = load i8, i8* %arrayidx4316, align 1
  %conv4317 = sext i8 %1592 to i32
  %cmp4318 = icmp eq i32 %conv4317, 116
  br i1 %cmp4318, label %if.then.4320, label %if.end.4321

if.then.4320:                                     ; preds = %land.lhs.true.4315
  store i32 -186, i32* %retval
  br label %return

if.end.4321:                                      ; preds = %land.lhs.true.4315, %land.lhs.true.4310, %land.lhs.true.4305, %land.lhs.true.4300, %sw.bb.4295
  br label %unknown

sw.bb.4322:                                       ; preds = %sw.bb.4292
  %1593 = load i8*, i8** %name.addr, align 8
  %arrayidx4323 = getelementptr inbounds i8, i8* %1593, i64 5
  %1594 = load i8, i8* %arrayidx4323, align 1
  %conv4324 = sext i8 %1594 to i32
  %cmp4325 = icmp eq i32 %conv4324, 99
  br i1 %cmp4325, label %land.lhs.true.4327, label %if.end.4348

land.lhs.true.4327:                               ; preds = %sw.bb.4322
  %1595 = load i8*, i8** %name.addr, align 8
  %arrayidx4328 = getelementptr inbounds i8, i8* %1595, i64 6
  %1596 = load i8, i8* %arrayidx4328, align 1
  %conv4329 = sext i8 %1596 to i32
  %cmp4330 = icmp eq i32 %conv4329, 107
  br i1 %cmp4330, label %land.lhs.true.4332, label %if.end.4348

land.lhs.true.4332:                               ; preds = %land.lhs.true.4327
  %1597 = load i8*, i8** %name.addr, align 8
  %arrayidx4333 = getelementptr inbounds i8, i8* %1597, i64 7
  %1598 = load i8, i8* %arrayidx4333, align 1
  %conv4334 = sext i8 %1598 to i32
  %cmp4335 = icmp eq i32 %conv4334, 111
  br i1 %cmp4335, label %land.lhs.true.4337, label %if.end.4348

land.lhs.true.4337:                               ; preds = %land.lhs.true.4332
  %1599 = load i8*, i8** %name.addr, align 8
  %arrayidx4338 = getelementptr inbounds i8, i8* %1599, i64 8
  %1600 = load i8, i8* %arrayidx4338, align 1
  %conv4339 = sext i8 %1600 to i32
  %cmp4340 = icmp eq i32 %conv4339, 112
  br i1 %cmp4340, label %land.lhs.true.4342, label %if.end.4348

land.lhs.true.4342:                               ; preds = %land.lhs.true.4337
  %1601 = load i8*, i8** %name.addr, align 8
  %arrayidx4343 = getelementptr inbounds i8, i8* %1601, i64 9
  %1602 = load i8, i8* %arrayidx4343, align 1
  %conv4344 = sext i8 %1602 to i32
  %cmp4345 = icmp eq i32 %conv4344, 116
  br i1 %cmp4345, label %if.then.4347, label %if.end.4348

if.then.4347:                                     ; preds = %land.lhs.true.4342
  store i32 -187, i32* %retval
  br label %return

if.end.4348:                                      ; preds = %land.lhs.true.4342, %land.lhs.true.4337, %land.lhs.true.4332, %land.lhs.true.4327, %sw.bb.4322
  br label %unknown

sw.default.4349:                                  ; preds = %sw.bb.4292
  br label %unknown

sw.default.4350:                                  ; preds = %if.then.4257
  br label %unknown

if.end.4351:                                      ; preds = %sw.bb.4252
  br label %unknown

sw.bb.4352:                                       ; preds = %sw.bb.4249
  %1603 = load i8*, i8** %name.addr, align 8
  %arrayidx4353 = getelementptr inbounds i8, i8* %1603, i64 2
  %1604 = load i8, i8* %arrayidx4353, align 1
  %conv4354 = sext i8 %1604 to i32
  %cmp4355 = icmp eq i32 %conv4354, 99
  br i1 %cmp4355, label %land.lhs.true.4357, label %if.end.4393

land.lhs.true.4357:                               ; preds = %sw.bb.4352
  %1605 = load i8*, i8** %name.addr, align 8
  %arrayidx4358 = getelementptr inbounds i8, i8* %1605, i64 3
  %1606 = load i8, i8* %arrayidx4358, align 1
  %conv4359 = sext i8 %1606 to i32
  %cmp4360 = icmp eq i32 %conv4359, 107
  br i1 %cmp4360, label %land.lhs.true.4362, label %if.end.4393

land.lhs.true.4362:                               ; preds = %land.lhs.true.4357
  %1607 = load i8*, i8** %name.addr, align 8
  %arrayidx4363 = getelementptr inbounds i8, i8* %1607, i64 4
  %1608 = load i8, i8* %arrayidx4363, align 1
  %conv4364 = sext i8 %1608 to i32
  %cmp4365 = icmp eq i32 %conv4364, 101
  br i1 %cmp4365, label %land.lhs.true.4367, label %if.end.4393

land.lhs.true.4367:                               ; preds = %land.lhs.true.4362
  %1609 = load i8*, i8** %name.addr, align 8
  %arrayidx4368 = getelementptr inbounds i8, i8* %1609, i64 5
  %1610 = load i8, i8* %arrayidx4368, align 1
  %conv4369 = sext i8 %1610 to i32
  %cmp4370 = icmp eq i32 %conv4369, 116
  br i1 %cmp4370, label %land.lhs.true.4372, label %if.end.4393

land.lhs.true.4372:                               ; preds = %land.lhs.true.4367
  %1611 = load i8*, i8** %name.addr, align 8
  %arrayidx4373 = getelementptr inbounds i8, i8* %1611, i64 6
  %1612 = load i8, i8* %arrayidx4373, align 1
  %conv4374 = sext i8 %1612 to i32
  %cmp4375 = icmp eq i32 %conv4374, 112
  br i1 %cmp4375, label %land.lhs.true.4377, label %if.end.4393

land.lhs.true.4377:                               ; preds = %land.lhs.true.4372
  %1613 = load i8*, i8** %name.addr, align 8
  %arrayidx4378 = getelementptr inbounds i8, i8* %1613, i64 7
  %1614 = load i8, i8* %arrayidx4378, align 1
  %conv4379 = sext i8 %1614 to i32
  %cmp4380 = icmp eq i32 %conv4379, 97
  br i1 %cmp4380, label %land.lhs.true.4382, label %if.end.4393

land.lhs.true.4382:                               ; preds = %land.lhs.true.4377
  %1615 = load i8*, i8** %name.addr, align 8
  %arrayidx4383 = getelementptr inbounds i8, i8* %1615, i64 8
  %1616 = load i8, i8* %arrayidx4383, align 1
  %conv4384 = sext i8 %1616 to i32
  %cmp4385 = icmp eq i32 %conv4384, 105
  br i1 %cmp4385, label %land.lhs.true.4387, label %if.end.4393

land.lhs.true.4387:                               ; preds = %land.lhs.true.4382
  %1617 = load i8*, i8** %name.addr, align 8
  %arrayidx4388 = getelementptr inbounds i8, i8* %1617, i64 9
  %1618 = load i8, i8* %arrayidx4388, align 1
  %conv4389 = sext i8 %1618 to i32
  %cmp4390 = icmp eq i32 %conv4389, 114
  br i1 %cmp4390, label %if.then.4392, label %if.end.4393

if.then.4392:                                     ; preds = %land.lhs.true.4387
  store i32 -197, i32* %retval
  br label %return

if.end.4393:                                      ; preds = %land.lhs.true.4387, %land.lhs.true.4382, %land.lhs.true.4377, %land.lhs.true.4372, %land.lhs.true.4367, %land.lhs.true.4362, %land.lhs.true.4357, %sw.bb.4352
  br label %unknown

sw.default.4394:                                  ; preds = %sw.bb.4249
  br label %unknown

sw.default.4395:                                  ; preds = %sw.bb.4062
  br label %unknown

sw.bb.4396:                                       ; preds = %entry
  %1619 = load i8*, i8** %name.addr, align 8
  %arrayidx4397 = getelementptr inbounds i8, i8* %1619, i64 0
  %1620 = load i8, i8* %arrayidx4397, align 1
  %conv4398 = sext i8 %1620 to i32
  switch i32 %conv4398, label %sw.default.4728 [
    i32 95, label %sw.bb.4399
    i32 101, label %sw.bb.4451
    i32 103, label %sw.bb.4503
    i32 115, label %sw.bb.4649
  ]

sw.bb.4399:                                       ; preds = %sw.bb.4396
  %1621 = load i8*, i8** %name.addr, align 8
  %arrayidx4400 = getelementptr inbounds i8, i8* %1621, i64 1
  %1622 = load i8, i8* %arrayidx4400, align 1
  %conv4401 = sext i8 %1622 to i32
  %cmp4402 = icmp eq i32 %conv4401, 95
  br i1 %cmp4402, label %land.lhs.true.4404, label %if.end.4450

land.lhs.true.4404:                               ; preds = %sw.bb.4399
  %1623 = load i8*, i8** %name.addr, align 8
  %arrayidx4405 = getelementptr inbounds i8, i8* %1623, i64 2
  %1624 = load i8, i8* %arrayidx4405, align 1
  %conv4406 = sext i8 %1624 to i32
  %cmp4407 = icmp eq i32 %conv4406, 80
  br i1 %cmp4407, label %land.lhs.true.4409, label %if.end.4450

land.lhs.true.4409:                               ; preds = %land.lhs.true.4404
  %1625 = load i8*, i8** %name.addr, align 8
  %arrayidx4410 = getelementptr inbounds i8, i8* %1625, i64 3
  %1626 = load i8, i8* %arrayidx4410, align 1
  %conv4411 = sext i8 %1626 to i32
  %cmp4412 = icmp eq i32 %conv4411, 65
  br i1 %cmp4412, label %land.lhs.true.4414, label %if.end.4450

land.lhs.true.4414:                               ; preds = %land.lhs.true.4409
  %1627 = load i8*, i8** %name.addr, align 8
  %arrayidx4415 = getelementptr inbounds i8, i8* %1627, i64 4
  %1628 = load i8, i8* %arrayidx4415, align 1
  %conv4416 = sext i8 %1628 to i32
  %cmp4417 = icmp eq i32 %conv4416, 67
  br i1 %cmp4417, label %land.lhs.true.4419, label %if.end.4450

land.lhs.true.4419:                               ; preds = %land.lhs.true.4414
  %1629 = load i8*, i8** %name.addr, align 8
  %arrayidx4420 = getelementptr inbounds i8, i8* %1629, i64 5
  %1630 = load i8, i8* %arrayidx4420, align 1
  %conv4421 = sext i8 %1630 to i32
  %cmp4422 = icmp eq i32 %conv4421, 75
  br i1 %cmp4422, label %land.lhs.true.4424, label %if.end.4450

land.lhs.true.4424:                               ; preds = %land.lhs.true.4419
  %1631 = load i8*, i8** %name.addr, align 8
  %arrayidx4425 = getelementptr inbounds i8, i8* %1631, i64 6
  %1632 = load i8, i8* %arrayidx4425, align 1
  %conv4426 = sext i8 %1632 to i32
  %cmp4427 = icmp eq i32 %conv4426, 65
  br i1 %cmp4427, label %land.lhs.true.4429, label %if.end.4450

land.lhs.true.4429:                               ; preds = %land.lhs.true.4424
  %1633 = load i8*, i8** %name.addr, align 8
  %arrayidx4430 = getelementptr inbounds i8, i8* %1633, i64 7
  %1634 = load i8, i8* %arrayidx4430, align 1
  %conv4431 = sext i8 %1634 to i32
  %cmp4432 = icmp eq i32 %conv4431, 71
  br i1 %cmp4432, label %land.lhs.true.4434, label %if.end.4450

land.lhs.true.4434:                               ; preds = %land.lhs.true.4429
  %1635 = load i8*, i8** %name.addr, align 8
  %arrayidx4435 = getelementptr inbounds i8, i8* %1635, i64 8
  %1636 = load i8, i8* %arrayidx4435, align 1
  %conv4436 = sext i8 %1636 to i32
  %cmp4437 = icmp eq i32 %conv4436, 69
  br i1 %cmp4437, label %land.lhs.true.4439, label %if.end.4450

land.lhs.true.4439:                               ; preds = %land.lhs.true.4434
  %1637 = load i8*, i8** %name.addr, align 8
  %arrayidx4440 = getelementptr inbounds i8, i8* %1637, i64 9
  %1638 = load i8, i8* %arrayidx4440, align 1
  %conv4441 = sext i8 %1638 to i32
  %cmp4442 = icmp eq i32 %conv4441, 95
  br i1 %cmp4442, label %land.lhs.true.4444, label %if.end.4450

land.lhs.true.4444:                               ; preds = %land.lhs.true.4439
  %1639 = load i8*, i8** %name.addr, align 8
  %arrayidx4445 = getelementptr inbounds i8, i8* %1639, i64 10
  %1640 = load i8, i8* %arrayidx4445, align 1
  %conv4446 = sext i8 %1640 to i32
  %cmp4447 = icmp eq i32 %conv4446, 95
  br i1 %cmp4447, label %if.then.4449, label %if.end.4450

if.then.4449:                                     ; preds = %land.lhs.true.4444
  store i32 -3, i32* %retval
  br label %return

if.end.4450:                                      ; preds = %land.lhs.true.4444, %land.lhs.true.4439, %land.lhs.true.4434, %land.lhs.true.4429, %land.lhs.true.4424, %land.lhs.true.4419, %land.lhs.true.4414, %land.lhs.true.4409, %land.lhs.true.4404, %sw.bb.4399
  br label %unknown

sw.bb.4451:                                       ; preds = %sw.bb.4396
  %1641 = load i8*, i8** %name.addr, align 8
  %arrayidx4452 = getelementptr inbounds i8, i8* %1641, i64 1
  %1642 = load i8, i8* %arrayidx4452, align 1
  %conv4453 = sext i8 %1642 to i32
  %cmp4454 = icmp eq i32 %conv4453, 110
  br i1 %cmp4454, label %land.lhs.true.4456, label %if.end.4502

land.lhs.true.4456:                               ; preds = %sw.bb.4451
  %1643 = load i8*, i8** %name.addr, align 8
  %arrayidx4457 = getelementptr inbounds i8, i8* %1643, i64 2
  %1644 = load i8, i8* %arrayidx4457, align 1
  %conv4458 = sext i8 %1644 to i32
  %cmp4459 = icmp eq i32 %conv4458, 100
  br i1 %cmp4459, label %land.lhs.true.4461, label %if.end.4502

land.lhs.true.4461:                               ; preds = %land.lhs.true.4456
  %1645 = load i8*, i8** %name.addr, align 8
  %arrayidx4462 = getelementptr inbounds i8, i8* %1645, i64 3
  %1646 = load i8, i8* %arrayidx4462, align 1
  %conv4463 = sext i8 %1646 to i32
  %cmp4464 = icmp eq i32 %conv4463, 112
  br i1 %cmp4464, label %land.lhs.true.4466, label %if.end.4502

land.lhs.true.4466:                               ; preds = %land.lhs.true.4461
  %1647 = load i8*, i8** %name.addr, align 8
  %arrayidx4467 = getelementptr inbounds i8, i8* %1647, i64 4
  %1648 = load i8, i8* %arrayidx4467, align 1
  %conv4468 = sext i8 %1648 to i32
  %cmp4469 = icmp eq i32 %conv4468, 114
  br i1 %cmp4469, label %land.lhs.true.4471, label %if.end.4502

land.lhs.true.4471:                               ; preds = %land.lhs.true.4466
  %1649 = load i8*, i8** %name.addr, align 8
  %arrayidx4472 = getelementptr inbounds i8, i8* %1649, i64 5
  %1650 = load i8, i8* %arrayidx4472, align 1
  %conv4473 = sext i8 %1650 to i32
  %cmp4474 = icmp eq i32 %conv4473, 111
  br i1 %cmp4474, label %land.lhs.true.4476, label %if.end.4502

land.lhs.true.4476:                               ; preds = %land.lhs.true.4471
  %1651 = load i8*, i8** %name.addr, align 8
  %arrayidx4477 = getelementptr inbounds i8, i8* %1651, i64 6
  %1652 = load i8, i8* %arrayidx4477, align 1
  %conv4478 = sext i8 %1652 to i32
  %cmp4479 = icmp eq i32 %conv4478, 116
  br i1 %cmp4479, label %land.lhs.true.4481, label %if.end.4502

land.lhs.true.4481:                               ; preds = %land.lhs.true.4476
  %1653 = load i8*, i8** %name.addr, align 8
  %arrayidx4482 = getelementptr inbounds i8, i8* %1653, i64 7
  %1654 = load i8, i8* %arrayidx4482, align 1
  %conv4483 = sext i8 %1654 to i32
  %cmp4484 = icmp eq i32 %conv4483, 111
  br i1 %cmp4484, label %land.lhs.true.4486, label %if.end.4502

land.lhs.true.4486:                               ; preds = %land.lhs.true.4481
  %1655 = load i8*, i8** %name.addr, align 8
  %arrayidx4487 = getelementptr inbounds i8, i8* %1655, i64 8
  %1656 = load i8, i8* %arrayidx4487, align 1
  %conv4488 = sext i8 %1656 to i32
  %cmp4489 = icmp eq i32 %conv4488, 101
  br i1 %cmp4489, label %land.lhs.true.4491, label %if.end.4502

land.lhs.true.4491:                               ; preds = %land.lhs.true.4486
  %1657 = load i8*, i8** %name.addr, align 8
  %arrayidx4492 = getelementptr inbounds i8, i8* %1657, i64 9
  %1658 = load i8, i8* %arrayidx4492, align 1
  %conv4493 = sext i8 %1658 to i32
  %cmp4494 = icmp eq i32 %conv4493, 110
  br i1 %cmp4494, label %land.lhs.true.4496, label %if.end.4502

land.lhs.true.4496:                               ; preds = %land.lhs.true.4491
  %1659 = load i8*, i8** %name.addr, align 8
  %arrayidx4497 = getelementptr inbounds i8, i8* %1659, i64 10
  %1660 = load i8, i8* %arrayidx4497, align 1
  %conv4498 = sext i8 %1660 to i32
  %cmp4499 = icmp eq i32 %conv4498, 116
  br i1 %cmp4499, label %if.then.4501, label %if.end.4502

if.then.4501:                                     ; preds = %land.lhs.true.4496
  store i32 -49, i32* %retval
  br label %return

if.end.4502:                                      ; preds = %land.lhs.true.4496, %land.lhs.true.4491, %land.lhs.true.4486, %land.lhs.true.4481, %land.lhs.true.4476, %land.lhs.true.4471, %land.lhs.true.4466, %land.lhs.true.4461, %land.lhs.true.4456, %sw.bb.4451
  br label %unknown

sw.bb.4503:                                       ; preds = %sw.bb.4396
  %1661 = load i8*, i8** %name.addr, align 8
  %arrayidx4504 = getelementptr inbounds i8, i8* %1661, i64 1
  %1662 = load i8, i8* %arrayidx4504, align 1
  %conv4505 = sext i8 %1662 to i32
  %cmp4506 = icmp eq i32 %conv4505, 101
  br i1 %cmp4506, label %land.lhs.true.4508, label %if.end.4648

land.lhs.true.4508:                               ; preds = %sw.bb.4503
  %1663 = load i8*, i8** %name.addr, align 8
  %arrayidx4509 = getelementptr inbounds i8, i8* %1663, i64 2
  %1664 = load i8, i8* %arrayidx4509, align 1
  %conv4510 = sext i8 %1664 to i32
  %cmp4511 = icmp eq i32 %conv4510, 116
  br i1 %cmp4511, label %if.then.4513, label %if.end.4648

if.then.4513:                                     ; preds = %land.lhs.true.4508
  %1665 = load i8*, i8** %name.addr, align 8
  %arrayidx4514 = getelementptr inbounds i8, i8* %1665, i64 3
  %1666 = load i8, i8* %arrayidx4514, align 1
  %conv4515 = sext i8 %1666 to i32
  switch i32 %conv4515, label %sw.default.4647 [
    i32 112, label %sw.bb.4516
    i32 115, label %sw.bb.4610
  ]

sw.bb.4516:                                       ; preds = %if.then.4513
  %1667 = load i8*, i8** %name.addr, align 8
  %arrayidx4517 = getelementptr inbounds i8, i8* %1667, i64 4
  %1668 = load i8, i8* %arrayidx4517, align 1
  %conv4518 = sext i8 %1668 to i32
  switch i32 %conv4518, label %sw.default.4609 [
    i32 101, label %sw.bb.4519
    i32 114, label %sw.bb.4551
  ]

sw.bb.4519:                                       ; preds = %sw.bb.4516
  %1669 = load i8*, i8** %name.addr, align 8
  %arrayidx4520 = getelementptr inbounds i8, i8* %1669, i64 5
  %1670 = load i8, i8* %arrayidx4520, align 1
  %conv4521 = sext i8 %1670 to i32
  %cmp4522 = icmp eq i32 %conv4521, 101
  br i1 %cmp4522, label %land.lhs.true.4524, label %if.end.4550

land.lhs.true.4524:                               ; preds = %sw.bb.4519
  %1671 = load i8*, i8** %name.addr, align 8
  %arrayidx4525 = getelementptr inbounds i8, i8* %1671, i64 6
  %1672 = load i8, i8* %arrayidx4525, align 1
  %conv4526 = sext i8 %1672 to i32
  %cmp4527 = icmp eq i32 %conv4526, 114
  br i1 %cmp4527, label %land.lhs.true.4529, label %if.end.4550

land.lhs.true.4529:                               ; preds = %land.lhs.true.4524
  %1673 = load i8*, i8** %name.addr, align 8
  %arrayidx4530 = getelementptr inbounds i8, i8* %1673, i64 7
  %1674 = load i8, i8* %arrayidx4530, align 1
  %conv4531 = sext i8 %1674 to i32
  %cmp4532 = icmp eq i32 %conv4531, 110
  br i1 %cmp4532, label %land.lhs.true.4534, label %if.end.4550

land.lhs.true.4534:                               ; preds = %land.lhs.true.4529
  %1675 = load i8*, i8** %name.addr, align 8
  %arrayidx4535 = getelementptr inbounds i8, i8* %1675, i64 8
  %1676 = load i8, i8* %arrayidx4535, align 1
  %conv4536 = sext i8 %1676 to i32
  %cmp4537 = icmp eq i32 %conv4536, 97
  br i1 %cmp4537, label %land.lhs.true.4539, label %if.end.4550

land.lhs.true.4539:                               ; preds = %land.lhs.true.4534
  %1677 = load i8*, i8** %name.addr, align 8
  %arrayidx4540 = getelementptr inbounds i8, i8* %1677, i64 9
  %1678 = load i8, i8* %arrayidx4540, align 1
  %conv4541 = sext i8 %1678 to i32
  %cmp4542 = icmp eq i32 %conv4541, 109
  br i1 %cmp4542, label %land.lhs.true.4544, label %if.end.4550

land.lhs.true.4544:                               ; preds = %land.lhs.true.4539
  %1679 = load i8*, i8** %name.addr, align 8
  %arrayidx4545 = getelementptr inbounds i8, i8* %1679, i64 10
  %1680 = load i8, i8* %arrayidx4545, align 1
  %conv4546 = sext i8 %1680 to i32
  %cmp4547 = icmp eq i32 %conv4546, 101
  br i1 %cmp4547, label %if.then.4549, label %if.end.4550

if.then.4549:                                     ; preds = %land.lhs.true.4544
  store i32 -79, i32* %retval
  br label %return

if.end.4550:                                      ; preds = %land.lhs.true.4544, %land.lhs.true.4539, %land.lhs.true.4534, %land.lhs.true.4529, %land.lhs.true.4524, %sw.bb.4519
  br label %unknown

sw.bb.4551:                                       ; preds = %sw.bb.4516
  %1681 = load i8*, i8** %name.addr, align 8
  %arrayidx4552 = getelementptr inbounds i8, i8* %1681, i64 5
  %1682 = load i8, i8* %arrayidx4552, align 1
  %conv4553 = sext i8 %1682 to i32
  switch i32 %conv4553, label %sw.default.4608 [
    i32 105, label %sw.bb.4554
    i32 111, label %sw.bb.4581
  ]

sw.bb.4554:                                       ; preds = %sw.bb.4551
  %1683 = load i8*, i8** %name.addr, align 8
  %arrayidx4555 = getelementptr inbounds i8, i8* %1683, i64 6
  %1684 = load i8, i8* %arrayidx4555, align 1
  %conv4556 = sext i8 %1684 to i32
  %cmp4557 = icmp eq i32 %conv4556, 111
  br i1 %cmp4557, label %land.lhs.true.4559, label %if.end.4580

land.lhs.true.4559:                               ; preds = %sw.bb.4554
  %1685 = load i8*, i8** %name.addr, align 8
  %arrayidx4560 = getelementptr inbounds i8, i8* %1685, i64 7
  %1686 = load i8, i8* %arrayidx4560, align 1
  %conv4561 = sext i8 %1686 to i32
  %cmp4562 = icmp eq i32 %conv4561, 114
  br i1 %cmp4562, label %land.lhs.true.4564, label %if.end.4580

land.lhs.true.4564:                               ; preds = %land.lhs.true.4559
  %1687 = load i8*, i8** %name.addr, align 8
  %arrayidx4565 = getelementptr inbounds i8, i8* %1687, i64 8
  %1688 = load i8, i8* %arrayidx4565, align 1
  %conv4566 = sext i8 %1688 to i32
  %cmp4567 = icmp eq i32 %conv4566, 105
  br i1 %cmp4567, label %land.lhs.true.4569, label %if.end.4580

land.lhs.true.4569:                               ; preds = %land.lhs.true.4564
  %1689 = load i8*, i8** %name.addr, align 8
  %arrayidx4570 = getelementptr inbounds i8, i8* %1689, i64 9
  %1690 = load i8, i8* %arrayidx4570, align 1
  %conv4571 = sext i8 %1690 to i32
  %cmp4572 = icmp eq i32 %conv4571, 116
  br i1 %cmp4572, label %land.lhs.true.4574, label %if.end.4580

land.lhs.true.4574:                               ; preds = %land.lhs.true.4569
  %1691 = load i8*, i8** %name.addr, align 8
  %arrayidx4575 = getelementptr inbounds i8, i8* %1691, i64 10
  %1692 = load i8, i8* %arrayidx4575, align 1
  %conv4576 = sext i8 %1692 to i32
  %cmp4577 = icmp eq i32 %conv4576, 121
  br i1 %cmp4577, label %if.then.4579, label %if.end.4580

if.then.4579:                                     ; preds = %land.lhs.true.4574
  store i32 -82, i32* %retval
  br label %return

if.end.4580:                                      ; preds = %land.lhs.true.4574, %land.lhs.true.4569, %land.lhs.true.4564, %land.lhs.true.4559, %sw.bb.4554
  br label %unknown

sw.bb.4581:                                       ; preds = %sw.bb.4551
  %1693 = load i8*, i8** %name.addr, align 8
  %arrayidx4582 = getelementptr inbounds i8, i8* %1693, i64 6
  %1694 = load i8, i8* %arrayidx4582, align 1
  %conv4583 = sext i8 %1694 to i32
  %cmp4584 = icmp eq i32 %conv4583, 116
  br i1 %cmp4584, label %land.lhs.true.4586, label %if.end.4607

land.lhs.true.4586:                               ; preds = %sw.bb.4581
  %1695 = load i8*, i8** %name.addr, align 8
  %arrayidx4587 = getelementptr inbounds i8, i8* %1695, i64 7
  %1696 = load i8, i8* %arrayidx4587, align 1
  %conv4588 = sext i8 %1696 to i32
  %cmp4589 = icmp eq i32 %conv4588, 111
  br i1 %cmp4589, label %land.lhs.true.4591, label %if.end.4607

land.lhs.true.4591:                               ; preds = %land.lhs.true.4586
  %1697 = load i8*, i8** %name.addr, align 8
  %arrayidx4592 = getelementptr inbounds i8, i8* %1697, i64 8
  %1698 = load i8, i8* %arrayidx4592, align 1
  %conv4593 = sext i8 %1698 to i32
  %cmp4594 = icmp eq i32 %conv4593, 101
  br i1 %cmp4594, label %land.lhs.true.4596, label %if.end.4607

land.lhs.true.4596:                               ; preds = %land.lhs.true.4591
  %1699 = load i8*, i8** %name.addr, align 8
  %arrayidx4597 = getelementptr inbounds i8, i8* %1699, i64 9
  %1700 = load i8, i8* %arrayidx4597, align 1
  %conv4598 = sext i8 %1700 to i32
  %cmp4599 = icmp eq i32 %conv4598, 110
  br i1 %cmp4599, label %land.lhs.true.4601, label %if.end.4607

land.lhs.true.4601:                               ; preds = %land.lhs.true.4596
  %1701 = load i8*, i8** %name.addr, align 8
  %arrayidx4602 = getelementptr inbounds i8, i8* %1701, i64 10
  %1702 = load i8, i8* %arrayidx4602, align 1
  %conv4603 = sext i8 %1702 to i32
  %cmp4604 = icmp eq i32 %conv4603, 116
  br i1 %cmp4604, label %if.then.4606, label %if.end.4607

if.then.4606:                                     ; preds = %land.lhs.true.4601
  store i32 -85, i32* %retval
  br label %return

if.end.4607:                                      ; preds = %land.lhs.true.4601, %land.lhs.true.4596, %land.lhs.true.4591, %land.lhs.true.4586, %sw.bb.4581
  br label %unknown

sw.default.4608:                                  ; preds = %sw.bb.4551
  br label %unknown

sw.default.4609:                                  ; preds = %sw.bb.4516
  br label %unknown

sw.bb.4610:                                       ; preds = %if.then.4513
  %1703 = load i8*, i8** %name.addr, align 8
  %arrayidx4611 = getelementptr inbounds i8, i8* %1703, i64 4
  %1704 = load i8, i8* %arrayidx4611, align 1
  %conv4612 = sext i8 %1704 to i32
  %cmp4613 = icmp eq i32 %conv4612, 111
  br i1 %cmp4613, label %land.lhs.true.4615, label %if.end.4646

land.lhs.true.4615:                               ; preds = %sw.bb.4610
  %1705 = load i8*, i8** %name.addr, align 8
  %arrayidx4616 = getelementptr inbounds i8, i8* %1705, i64 5
  %1706 = load i8, i8* %arrayidx4616, align 1
  %conv4617 = sext i8 %1706 to i32
  %cmp4618 = icmp eq i32 %conv4617, 99
  br i1 %cmp4618, label %land.lhs.true.4620, label %if.end.4646

land.lhs.true.4620:                               ; preds = %land.lhs.true.4615
  %1707 = load i8*, i8** %name.addr, align 8
  %arrayidx4621 = getelementptr inbounds i8, i8* %1707, i64 6
  %1708 = load i8, i8* %arrayidx4621, align 1
  %conv4622 = sext i8 %1708 to i32
  %cmp4623 = icmp eq i32 %conv4622, 107
  br i1 %cmp4623, label %land.lhs.true.4625, label %if.end.4646

land.lhs.true.4625:                               ; preds = %land.lhs.true.4620
  %1709 = load i8*, i8** %name.addr, align 8
  %arrayidx4626 = getelementptr inbounds i8, i8* %1709, i64 7
  %1710 = load i8, i8* %arrayidx4626, align 1
  %conv4627 = sext i8 %1710 to i32
  %cmp4628 = icmp eq i32 %conv4627, 110
  br i1 %cmp4628, label %land.lhs.true.4630, label %if.end.4646

land.lhs.true.4630:                               ; preds = %land.lhs.true.4625
  %1711 = load i8*, i8** %name.addr, align 8
  %arrayidx4631 = getelementptr inbounds i8, i8* %1711, i64 8
  %1712 = load i8, i8* %arrayidx4631, align 1
  %conv4632 = sext i8 %1712 to i32
  %cmp4633 = icmp eq i32 %conv4632, 97
  br i1 %cmp4633, label %land.lhs.true.4635, label %if.end.4646

land.lhs.true.4635:                               ; preds = %land.lhs.true.4630
  %1713 = load i8*, i8** %name.addr, align 8
  %arrayidx4636 = getelementptr inbounds i8, i8* %1713, i64 9
  %1714 = load i8, i8* %arrayidx4636, align 1
  %conv4637 = sext i8 %1714 to i32
  %cmp4638 = icmp eq i32 %conv4637, 109
  br i1 %cmp4638, label %land.lhs.true.4640, label %if.end.4646

land.lhs.true.4640:                               ; preds = %land.lhs.true.4635
  %1715 = load i8*, i8** %name.addr, align 8
  %arrayidx4641 = getelementptr inbounds i8, i8* %1715, i64 10
  %1716 = load i8, i8* %arrayidx4641, align 1
  %conv4642 = sext i8 %1716 to i32
  %cmp4643 = icmp eq i32 %conv4642, 101
  br i1 %cmp4643, label %if.then.4645, label %if.end.4646

if.then.4645:                                     ; preds = %land.lhs.true.4640
  store i32 -92, i32* %retval
  br label %return

if.end.4646:                                      ; preds = %land.lhs.true.4640, %land.lhs.true.4635, %land.lhs.true.4630, %land.lhs.true.4625, %land.lhs.true.4620, %land.lhs.true.4615, %sw.bb.4610
  br label %unknown

sw.default.4647:                                  ; preds = %if.then.4513
  br label %unknown

if.end.4648:                                      ; preds = %land.lhs.true.4508, %sw.bb.4503
  br label %unknown

sw.bb.4649:                                       ; preds = %sw.bb.4396
  %1717 = load i8*, i8** %name.addr, align 8
  %arrayidx4650 = getelementptr inbounds i8, i8* %1717, i64 1
  %1718 = load i8, i8* %arrayidx4650, align 1
  %conv4651 = sext i8 %1718 to i32
  %cmp4652 = icmp eq i32 %conv4651, 101
  br i1 %cmp4652, label %land.lhs.true.4654, label %if.end.4727

land.lhs.true.4654:                               ; preds = %sw.bb.4649
  %1719 = load i8*, i8** %name.addr, align 8
  %arrayidx4655 = getelementptr inbounds i8, i8* %1719, i64 2
  %1720 = load i8, i8* %arrayidx4655, align 1
  %conv4656 = sext i8 %1720 to i32
  %cmp4657 = icmp eq i32 %conv4656, 116
  br i1 %cmp4657, label %land.lhs.true.4659, label %if.end.4727

land.lhs.true.4659:                               ; preds = %land.lhs.true.4654
  %1721 = load i8*, i8** %name.addr, align 8
  %arrayidx4660 = getelementptr inbounds i8, i8* %1721, i64 3
  %1722 = load i8, i8* %arrayidx4660, align 1
  %conv4661 = sext i8 %1722 to i32
  %cmp4662 = icmp eq i32 %conv4661, 112
  br i1 %cmp4662, label %land.lhs.true.4664, label %if.end.4727

land.lhs.true.4664:                               ; preds = %land.lhs.true.4659
  %1723 = load i8*, i8** %name.addr, align 8
  %arrayidx4665 = getelementptr inbounds i8, i8* %1723, i64 4
  %1724 = load i8, i8* %arrayidx4665, align 1
  %conv4666 = sext i8 %1724 to i32
  %cmp4667 = icmp eq i32 %conv4666, 114
  br i1 %cmp4667, label %if.then.4669, label %if.end.4727

if.then.4669:                                     ; preds = %land.lhs.true.4664
  %1725 = load i8*, i8** %name.addr, align 8
  %arrayidx4670 = getelementptr inbounds i8, i8* %1725, i64 5
  %1726 = load i8, i8* %arrayidx4670, align 1
  %conv4671 = sext i8 %1726 to i32
  switch i32 %conv4671, label %sw.default.4726 [
    i32 105, label %sw.bb.4672
    i32 111, label %sw.bb.4699
  ]

sw.bb.4672:                                       ; preds = %if.then.4669
  %1727 = load i8*, i8** %name.addr, align 8
  %arrayidx4673 = getelementptr inbounds i8, i8* %1727, i64 6
  %1728 = load i8, i8* %arrayidx4673, align 1
  %conv4674 = sext i8 %1728 to i32
  %cmp4675 = icmp eq i32 %conv4674, 111
  br i1 %cmp4675, label %land.lhs.true.4677, label %if.end.4698

land.lhs.true.4677:                               ; preds = %sw.bb.4672
  %1729 = load i8*, i8** %name.addr, align 8
  %arrayidx4678 = getelementptr inbounds i8, i8* %1729, i64 7
  %1730 = load i8, i8* %arrayidx4678, align 1
  %conv4679 = sext i8 %1730 to i32
  %cmp4680 = icmp eq i32 %conv4679, 114
  br i1 %cmp4680, label %land.lhs.true.4682, label %if.end.4698

land.lhs.true.4682:                               ; preds = %land.lhs.true.4677
  %1731 = load i8*, i8** %name.addr, align 8
  %arrayidx4683 = getelementptr inbounds i8, i8* %1731, i64 8
  %1732 = load i8, i8* %arrayidx4683, align 1
  %conv4684 = sext i8 %1732 to i32
  %cmp4685 = icmp eq i32 %conv4684, 105
  br i1 %cmp4685, label %land.lhs.true.4687, label %if.end.4698

land.lhs.true.4687:                               ; preds = %land.lhs.true.4682
  %1733 = load i8*, i8** %name.addr, align 8
  %arrayidx4688 = getelementptr inbounds i8, i8* %1733, i64 9
  %1734 = load i8, i8* %arrayidx4688, align 1
  %conv4689 = sext i8 %1734 to i32
  %cmp4690 = icmp eq i32 %conv4689, 116
  br i1 %cmp4690, label %land.lhs.true.4692, label %if.end.4698

land.lhs.true.4692:                               ; preds = %land.lhs.true.4687
  %1735 = load i8*, i8** %name.addr, align 8
  %arrayidx4693 = getelementptr inbounds i8, i8* %1735, i64 10
  %1736 = load i8, i8* %arrayidx4693, align 1
  %conv4694 = sext i8 %1736 to i32
  %cmp4695 = icmp eq i32 %conv4694, 121
  br i1 %cmp4695, label %if.then.4697, label %if.end.4698

if.then.4697:                                     ; preds = %land.lhs.true.4692
  store i32 -183, i32* %retval
  br label %return

if.end.4698:                                      ; preds = %land.lhs.true.4692, %land.lhs.true.4687, %land.lhs.true.4682, %land.lhs.true.4677, %sw.bb.4672
  br label %unknown

sw.bb.4699:                                       ; preds = %if.then.4669
  %1737 = load i8*, i8** %name.addr, align 8
  %arrayidx4700 = getelementptr inbounds i8, i8* %1737, i64 6
  %1738 = load i8, i8* %arrayidx4700, align 1
  %conv4701 = sext i8 %1738 to i32
  %cmp4702 = icmp eq i32 %conv4701, 116
  br i1 %cmp4702, label %land.lhs.true.4704, label %if.end.4725

land.lhs.true.4704:                               ; preds = %sw.bb.4699
  %1739 = load i8*, i8** %name.addr, align 8
  %arrayidx4705 = getelementptr inbounds i8, i8* %1739, i64 7
  %1740 = load i8, i8* %arrayidx4705, align 1
  %conv4706 = sext i8 %1740 to i32
  %cmp4707 = icmp eq i32 %conv4706, 111
  br i1 %cmp4707, label %land.lhs.true.4709, label %if.end.4725

land.lhs.true.4709:                               ; preds = %land.lhs.true.4704
  %1741 = load i8*, i8** %name.addr, align 8
  %arrayidx4710 = getelementptr inbounds i8, i8* %1741, i64 8
  %1742 = load i8, i8* %arrayidx4710, align 1
  %conv4711 = sext i8 %1742 to i32
  %cmp4712 = icmp eq i32 %conv4711, 101
  br i1 %cmp4712, label %land.lhs.true.4714, label %if.end.4725

land.lhs.true.4714:                               ; preds = %land.lhs.true.4709
  %1743 = load i8*, i8** %name.addr, align 8
  %arrayidx4715 = getelementptr inbounds i8, i8* %1743, i64 9
  %1744 = load i8, i8* %arrayidx4715, align 1
  %conv4716 = sext i8 %1744 to i32
  %cmp4717 = icmp eq i32 %conv4716, 110
  br i1 %cmp4717, label %land.lhs.true.4719, label %if.end.4725

land.lhs.true.4719:                               ; preds = %land.lhs.true.4714
  %1745 = load i8*, i8** %name.addr, align 8
  %arrayidx4720 = getelementptr inbounds i8, i8* %1745, i64 10
  %1746 = load i8, i8* %arrayidx4720, align 1
  %conv4721 = sext i8 %1746 to i32
  %cmp4722 = icmp eq i32 %conv4721, 116
  br i1 %cmp4722, label %if.then.4724, label %if.end.4725

if.then.4724:                                     ; preds = %land.lhs.true.4719
  store i32 -184, i32* %retval
  br label %return

if.end.4725:                                      ; preds = %land.lhs.true.4719, %land.lhs.true.4714, %land.lhs.true.4709, %land.lhs.true.4704, %sw.bb.4699
  br label %unknown

sw.default.4726:                                  ; preds = %if.then.4669
  br label %unknown

if.end.4727:                                      ; preds = %land.lhs.true.4664, %land.lhs.true.4659, %land.lhs.true.4654, %sw.bb.4649
  br label %unknown

sw.default.4728:                                  ; preds = %sw.bb.4396
  br label %unknown

sw.bb.4729:                                       ; preds = %entry
  %1747 = load i8*, i8** %name.addr, align 8
  %arrayidx4730 = getelementptr inbounds i8, i8* %1747, i64 0
  %1748 = load i8, i8* %arrayidx4730, align 1
  %conv4731 = sext i8 %1748 to i32
  %cmp4732 = icmp eq i32 %conv4731, 103
  br i1 %cmp4732, label %land.lhs.true.4734, label %if.end.4807

land.lhs.true.4734:                               ; preds = %sw.bb.4729
  %1749 = load i8*, i8** %name.addr, align 8
  %arrayidx4735 = getelementptr inbounds i8, i8* %1749, i64 1
  %1750 = load i8, i8* %arrayidx4735, align 1
  %conv4736 = sext i8 %1750 to i32
  %cmp4737 = icmp eq i32 %conv4736, 101
  br i1 %cmp4737, label %land.lhs.true.4739, label %if.end.4807

land.lhs.true.4739:                               ; preds = %land.lhs.true.4734
  %1751 = load i8*, i8** %name.addr, align 8
  %arrayidx4740 = getelementptr inbounds i8, i8* %1751, i64 2
  %1752 = load i8, i8* %arrayidx4740, align 1
  %conv4741 = sext i8 %1752 to i32
  %cmp4742 = icmp eq i32 %conv4741, 116
  br i1 %cmp4742, label %land.lhs.true.4744, label %if.end.4807

land.lhs.true.4744:                               ; preds = %land.lhs.true.4739
  %1753 = load i8*, i8** %name.addr, align 8
  %arrayidx4745 = getelementptr inbounds i8, i8* %1753, i64 3
  %1754 = load i8, i8* %arrayidx4745, align 1
  %conv4746 = sext i8 %1754 to i32
  %cmp4747 = icmp eq i32 %conv4746, 110
  br i1 %cmp4747, label %land.lhs.true.4749, label %if.end.4807

land.lhs.true.4749:                               ; preds = %land.lhs.true.4744
  %1755 = load i8*, i8** %name.addr, align 8
  %arrayidx4750 = getelementptr inbounds i8, i8* %1755, i64 4
  %1756 = load i8, i8* %arrayidx4750, align 1
  %conv4751 = sext i8 %1756 to i32
  %cmp4752 = icmp eq i32 %conv4751, 101
  br i1 %cmp4752, label %land.lhs.true.4754, label %if.end.4807

land.lhs.true.4754:                               ; preds = %land.lhs.true.4749
  %1757 = load i8*, i8** %name.addr, align 8
  %arrayidx4755 = getelementptr inbounds i8, i8* %1757, i64 5
  %1758 = load i8, i8* %arrayidx4755, align 1
  %conv4756 = sext i8 %1758 to i32
  %cmp4757 = icmp eq i32 %conv4756, 116
  br i1 %cmp4757, label %land.lhs.true.4759, label %if.end.4807

land.lhs.true.4759:                               ; preds = %land.lhs.true.4754
  %1759 = load i8*, i8** %name.addr, align 8
  %arrayidx4760 = getelementptr inbounds i8, i8* %1759, i64 6
  %1760 = load i8, i8* %arrayidx4760, align 1
  %conv4761 = sext i8 %1760 to i32
  %cmp4762 = icmp eq i32 %conv4761, 98
  br i1 %cmp4762, label %land.lhs.true.4764, label %if.end.4807

land.lhs.true.4764:                               ; preds = %land.lhs.true.4759
  %1761 = load i8*, i8** %name.addr, align 8
  %arrayidx4765 = getelementptr inbounds i8, i8* %1761, i64 7
  %1762 = load i8, i8* %arrayidx4765, align 1
  %conv4766 = sext i8 %1762 to i32
  %cmp4767 = icmp eq i32 %conv4766, 121
  br i1 %cmp4767, label %if.then.4769, label %if.end.4807

if.then.4769:                                     ; preds = %land.lhs.true.4764
  %1763 = load i8*, i8** %name.addr, align 8
  %arrayidx4770 = getelementptr inbounds i8, i8* %1763, i64 8
  %1764 = load i8, i8* %arrayidx4770, align 1
  %conv4771 = sext i8 %1764 to i32
  switch i32 %conv4771, label %sw.default.4806 [
    i32 97, label %sw.bb.4772
    i32 110, label %sw.bb.4789
  ]

sw.bb.4772:                                       ; preds = %if.then.4769
  %1765 = load i8*, i8** %name.addr, align 8
  %arrayidx4773 = getelementptr inbounds i8, i8* %1765, i64 9
  %1766 = load i8, i8* %arrayidx4773, align 1
  %conv4774 = sext i8 %1766 to i32
  %cmp4775 = icmp eq i32 %conv4774, 100
  br i1 %cmp4775, label %land.lhs.true.4777, label %if.end.4788

land.lhs.true.4777:                               ; preds = %sw.bb.4772
  %1767 = load i8*, i8** %name.addr, align 8
  %arrayidx4778 = getelementptr inbounds i8, i8* %1767, i64 10
  %1768 = load i8, i8* %arrayidx4778, align 1
  %conv4779 = sext i8 %1768 to i32
  %cmp4780 = icmp eq i32 %conv4779, 100
  br i1 %cmp4780, label %land.lhs.true.4782, label %if.end.4788

land.lhs.true.4782:                               ; preds = %land.lhs.true.4777
  %1769 = load i8*, i8** %name.addr, align 8
  %arrayidx4783 = getelementptr inbounds i8, i8* %1769, i64 11
  %1770 = load i8, i8* %arrayidx4783, align 1
  %conv4784 = sext i8 %1770 to i32
  %cmp4785 = icmp eq i32 %conv4784, 114
  br i1 %cmp4785, label %if.then.4787, label %if.end.4788

if.then.4787:                                     ; preds = %land.lhs.true.4782
  store i32 -76, i32* %retval
  br label %return

if.end.4788:                                      ; preds = %land.lhs.true.4782, %land.lhs.true.4777, %sw.bb.4772
  br label %unknown

sw.bb.4789:                                       ; preds = %if.then.4769
  %1771 = load i8*, i8** %name.addr, align 8
  %arrayidx4790 = getelementptr inbounds i8, i8* %1771, i64 9
  %1772 = load i8, i8* %arrayidx4790, align 1
  %conv4791 = sext i8 %1772 to i32
  %cmp4792 = icmp eq i32 %conv4791, 97
  br i1 %cmp4792, label %land.lhs.true.4794, label %if.end.4805

land.lhs.true.4794:                               ; preds = %sw.bb.4789
  %1773 = load i8*, i8** %name.addr, align 8
  %arrayidx4795 = getelementptr inbounds i8, i8* %1773, i64 10
  %1774 = load i8, i8* %arrayidx4795, align 1
  %conv4796 = sext i8 %1774 to i32
  %cmp4797 = icmp eq i32 %conv4796, 109
  br i1 %cmp4797, label %land.lhs.true.4799, label %if.end.4805

land.lhs.true.4799:                               ; preds = %land.lhs.true.4794
  %1775 = load i8*, i8** %name.addr, align 8
  %arrayidx4800 = getelementptr inbounds i8, i8* %1775, i64 11
  %1776 = load i8, i8* %arrayidx4800, align 1
  %conv4801 = sext i8 %1776 to i32
  %cmp4802 = icmp eq i32 %conv4801, 101
  br i1 %cmp4802, label %if.then.4804, label %if.end.4805

if.then.4804:                                     ; preds = %land.lhs.true.4799
  store i32 -77, i32* %retval
  br label %return

if.end.4805:                                      ; preds = %land.lhs.true.4799, %land.lhs.true.4794, %sw.bb.4789
  br label %unknown

sw.default.4806:                                  ; preds = %if.then.4769
  br label %unknown

if.end.4807:                                      ; preds = %land.lhs.true.4764, %land.lhs.true.4759, %land.lhs.true.4754, %land.lhs.true.4749, %land.lhs.true.4744, %land.lhs.true.4739, %land.lhs.true.4734, %sw.bb.4729
  br label %unknown

sw.bb.4808:                                       ; preds = %entry
  %1777 = load i8*, i8** %name.addr, align 8
  %arrayidx4809 = getelementptr inbounds i8, i8* %1777, i64 0
  %1778 = load i8, i8* %arrayidx4809, align 1
  %conv4810 = sext i8 %1778 to i32
  %cmp4811 = icmp eq i32 %conv4810, 103
  br i1 %cmp4811, label %land.lhs.true.4813, label %if.end.4955

land.lhs.true.4813:                               ; preds = %sw.bb.4808
  %1779 = load i8*, i8** %name.addr, align 8
  %arrayidx4814 = getelementptr inbounds i8, i8* %1779, i64 1
  %1780 = load i8, i8* %arrayidx4814, align 1
  %conv4815 = sext i8 %1780 to i32
  %cmp4816 = icmp eq i32 %conv4815, 101
  br i1 %cmp4816, label %land.lhs.true.4818, label %if.end.4955

land.lhs.true.4818:                               ; preds = %land.lhs.true.4813
  %1781 = load i8*, i8** %name.addr, align 8
  %arrayidx4819 = getelementptr inbounds i8, i8* %1781, i64 2
  %1782 = load i8, i8* %arrayidx4819, align 1
  %conv4820 = sext i8 %1782 to i32
  %cmp4821 = icmp eq i32 %conv4820, 116
  br i1 %cmp4821, label %if.then.4823, label %if.end.4955

if.then.4823:                                     ; preds = %land.lhs.true.4818
  %1783 = load i8*, i8** %name.addr, align 8
  %arrayidx4824 = getelementptr inbounds i8, i8* %1783, i64 3
  %1784 = load i8, i8* %arrayidx4824, align 1
  %conv4825 = sext i8 %1784 to i32
  switch i32 %conv4825, label %sw.default.4954 [
    i32 104, label %sw.bb.4826
    i32 115, label %sw.bb.4890
  ]

sw.bb.4826:                                       ; preds = %if.then.4823
  %1785 = load i8*, i8** %name.addr, align 8
  %arrayidx4827 = getelementptr inbounds i8, i8* %1785, i64 4
  %1786 = load i8, i8* %arrayidx4827, align 1
  %conv4828 = sext i8 %1786 to i32
  %cmp4829 = icmp eq i32 %conv4828, 111
  br i1 %cmp4829, label %land.lhs.true.4831, label %if.end.4889

land.lhs.true.4831:                               ; preds = %sw.bb.4826
  %1787 = load i8*, i8** %name.addr, align 8
  %arrayidx4832 = getelementptr inbounds i8, i8* %1787, i64 5
  %1788 = load i8, i8* %arrayidx4832, align 1
  %conv4833 = sext i8 %1788 to i32
  %cmp4834 = icmp eq i32 %conv4833, 115
  br i1 %cmp4834, label %land.lhs.true.4836, label %if.end.4889

land.lhs.true.4836:                               ; preds = %land.lhs.true.4831
  %1789 = load i8*, i8** %name.addr, align 8
  %arrayidx4837 = getelementptr inbounds i8, i8* %1789, i64 6
  %1790 = load i8, i8* %arrayidx4837, align 1
  %conv4838 = sext i8 %1790 to i32
  %cmp4839 = icmp eq i32 %conv4838, 116
  br i1 %cmp4839, label %land.lhs.true.4841, label %if.end.4889

land.lhs.true.4841:                               ; preds = %land.lhs.true.4836
  %1791 = load i8*, i8** %name.addr, align 8
  %arrayidx4842 = getelementptr inbounds i8, i8* %1791, i64 7
  %1792 = load i8, i8* %arrayidx4842, align 1
  %conv4843 = sext i8 %1792 to i32
  %cmp4844 = icmp eq i32 %conv4843, 98
  br i1 %cmp4844, label %land.lhs.true.4846, label %if.end.4889

land.lhs.true.4846:                               ; preds = %land.lhs.true.4841
  %1793 = load i8*, i8** %name.addr, align 8
  %arrayidx4847 = getelementptr inbounds i8, i8* %1793, i64 8
  %1794 = load i8, i8* %arrayidx4847, align 1
  %conv4848 = sext i8 %1794 to i32
  %cmp4849 = icmp eq i32 %conv4848, 121
  br i1 %cmp4849, label %if.then.4851, label %if.end.4889

if.then.4851:                                     ; preds = %land.lhs.true.4846
  %1795 = load i8*, i8** %name.addr, align 8
  %arrayidx4852 = getelementptr inbounds i8, i8* %1795, i64 9
  %1796 = load i8, i8* %arrayidx4852, align 1
  %conv4853 = sext i8 %1796 to i32
  switch i32 %conv4853, label %sw.default.4888 [
    i32 97, label %sw.bb.4854
    i32 110, label %sw.bb.4871
  ]

sw.bb.4854:                                       ; preds = %if.then.4851
  %1797 = load i8*, i8** %name.addr, align 8
  %arrayidx4855 = getelementptr inbounds i8, i8* %1797, i64 10
  %1798 = load i8, i8* %arrayidx4855, align 1
  %conv4856 = sext i8 %1798 to i32
  %cmp4857 = icmp eq i32 %conv4856, 100
  br i1 %cmp4857, label %land.lhs.true.4859, label %if.end.4870

land.lhs.true.4859:                               ; preds = %sw.bb.4854
  %1799 = load i8*, i8** %name.addr, align 8
  %arrayidx4860 = getelementptr inbounds i8, i8* %1799, i64 11
  %1800 = load i8, i8* %arrayidx4860, align 1
  %conv4861 = sext i8 %1800 to i32
  %cmp4862 = icmp eq i32 %conv4861, 100
  br i1 %cmp4862, label %land.lhs.true.4864, label %if.end.4870

land.lhs.true.4864:                               ; preds = %land.lhs.true.4859
  %1801 = load i8*, i8** %name.addr, align 8
  %arrayidx4865 = getelementptr inbounds i8, i8* %1801, i64 12
  %1802 = load i8, i8* %arrayidx4865, align 1
  %conv4866 = sext i8 %1802 to i32
  %cmp4867 = icmp eq i32 %conv4866, 114
  br i1 %cmp4867, label %if.then.4869, label %if.end.4870

if.then.4869:                                     ; preds = %land.lhs.true.4864
  store i32 -72, i32* %retval
  br label %return

if.end.4870:                                      ; preds = %land.lhs.true.4864, %land.lhs.true.4859, %sw.bb.4854
  br label %unknown

sw.bb.4871:                                       ; preds = %if.then.4851
  %1803 = load i8*, i8** %name.addr, align 8
  %arrayidx4872 = getelementptr inbounds i8, i8* %1803, i64 10
  %1804 = load i8, i8* %arrayidx4872, align 1
  %conv4873 = sext i8 %1804 to i32
  %cmp4874 = icmp eq i32 %conv4873, 97
  br i1 %cmp4874, label %land.lhs.true.4876, label %if.end.4887

land.lhs.true.4876:                               ; preds = %sw.bb.4871
  %1805 = load i8*, i8** %name.addr, align 8
  %arrayidx4877 = getelementptr inbounds i8, i8* %1805, i64 11
  %1806 = load i8, i8* %arrayidx4877, align 1
  %conv4878 = sext i8 %1806 to i32
  %cmp4879 = icmp eq i32 %conv4878, 109
  br i1 %cmp4879, label %land.lhs.true.4881, label %if.end.4887

land.lhs.true.4881:                               ; preds = %land.lhs.true.4876
  %1807 = load i8*, i8** %name.addr, align 8
  %arrayidx4882 = getelementptr inbounds i8, i8* %1807, i64 12
  %1808 = load i8, i8* %arrayidx4882, align 1
  %conv4883 = sext i8 %1808 to i32
  %cmp4884 = icmp eq i32 %conv4883, 101
  br i1 %cmp4884, label %if.then.4886, label %if.end.4887

if.then.4886:                                     ; preds = %land.lhs.true.4881
  store i32 -73, i32* %retval
  br label %return

if.end.4887:                                      ; preds = %land.lhs.true.4881, %land.lhs.true.4876, %sw.bb.4871
  br label %unknown

sw.default.4888:                                  ; preds = %if.then.4851
  br label %unknown

if.end.4889:                                      ; preds = %land.lhs.true.4846, %land.lhs.true.4841, %land.lhs.true.4836, %land.lhs.true.4831, %sw.bb.4826
  br label %unknown

sw.bb.4890:                                       ; preds = %if.then.4823
  %1809 = load i8*, i8** %name.addr, align 8
  %arrayidx4891 = getelementptr inbounds i8, i8* %1809, i64 4
  %1810 = load i8, i8* %arrayidx4891, align 1
  %conv4892 = sext i8 %1810 to i32
  %cmp4893 = icmp eq i32 %conv4892, 101
  br i1 %cmp4893, label %land.lhs.true.4895, label %if.end.4953

land.lhs.true.4895:                               ; preds = %sw.bb.4890
  %1811 = load i8*, i8** %name.addr, align 8
  %arrayidx4896 = getelementptr inbounds i8, i8* %1811, i64 5
  %1812 = load i8, i8* %arrayidx4896, align 1
  %conv4897 = sext i8 %1812 to i32
  %cmp4898 = icmp eq i32 %conv4897, 114
  br i1 %cmp4898, label %land.lhs.true.4900, label %if.end.4953

land.lhs.true.4900:                               ; preds = %land.lhs.true.4895
  %1813 = load i8*, i8** %name.addr, align 8
  %arrayidx4901 = getelementptr inbounds i8, i8* %1813, i64 6
  %1814 = load i8, i8* %arrayidx4901, align 1
  %conv4902 = sext i8 %1814 to i32
  %cmp4903 = icmp eq i32 %conv4902, 118
  br i1 %cmp4903, label %land.lhs.true.4905, label %if.end.4953

land.lhs.true.4905:                               ; preds = %land.lhs.true.4900
  %1815 = load i8*, i8** %name.addr, align 8
  %arrayidx4906 = getelementptr inbounds i8, i8* %1815, i64 7
  %1816 = load i8, i8* %arrayidx4906, align 1
  %conv4907 = sext i8 %1816 to i32
  %cmp4908 = icmp eq i32 %conv4907, 98
  br i1 %cmp4908, label %land.lhs.true.4910, label %if.end.4953

land.lhs.true.4910:                               ; preds = %land.lhs.true.4905
  %1817 = load i8*, i8** %name.addr, align 8
  %arrayidx4911 = getelementptr inbounds i8, i8* %1817, i64 8
  %1818 = load i8, i8* %arrayidx4911, align 1
  %conv4912 = sext i8 %1818 to i32
  %cmp4913 = icmp eq i32 %conv4912, 121
  br i1 %cmp4913, label %if.then.4915, label %if.end.4953

if.then.4915:                                     ; preds = %land.lhs.true.4910
  %1819 = load i8*, i8** %name.addr, align 8
  %arrayidx4916 = getelementptr inbounds i8, i8* %1819, i64 9
  %1820 = load i8, i8* %arrayidx4916, align 1
  %conv4917 = sext i8 %1820 to i32
  switch i32 %conv4917, label %sw.default.4952 [
    i32 110, label %sw.bb.4918
    i32 112, label %sw.bb.4935
  ]

sw.bb.4918:                                       ; preds = %if.then.4915
  %1821 = load i8*, i8** %name.addr, align 8
  %arrayidx4919 = getelementptr inbounds i8, i8* %1821, i64 10
  %1822 = load i8, i8* %arrayidx4919, align 1
  %conv4920 = sext i8 %1822 to i32
  %cmp4921 = icmp eq i32 %conv4920, 97
  br i1 %cmp4921, label %land.lhs.true.4923, label %if.end.4934

land.lhs.true.4923:                               ; preds = %sw.bb.4918
  %1823 = load i8*, i8** %name.addr, align 8
  %arrayidx4924 = getelementptr inbounds i8, i8* %1823, i64 11
  %1824 = load i8, i8* %arrayidx4924, align 1
  %conv4925 = sext i8 %1824 to i32
  %cmp4926 = icmp eq i32 %conv4925, 109
  br i1 %cmp4926, label %land.lhs.true.4928, label %if.end.4934

land.lhs.true.4928:                               ; preds = %land.lhs.true.4923
  %1825 = load i8*, i8** %name.addr, align 8
  %arrayidx4929 = getelementptr inbounds i8, i8* %1825, i64 12
  %1826 = load i8, i8* %arrayidx4929, align 1
  %conv4930 = sext i8 %1826 to i32
  %cmp4931 = icmp eq i32 %conv4930, 101
  br i1 %cmp4931, label %if.then.4933, label %if.end.4934

if.then.4933:                                     ; preds = %land.lhs.true.4928
  store i32 -89, i32* %retval
  br label %return

if.end.4934:                                      ; preds = %land.lhs.true.4928, %land.lhs.true.4923, %sw.bb.4918
  br label %unknown

sw.bb.4935:                                       ; preds = %if.then.4915
  %1827 = load i8*, i8** %name.addr, align 8
  %arrayidx4936 = getelementptr inbounds i8, i8* %1827, i64 10
  %1828 = load i8, i8* %arrayidx4936, align 1
  %conv4937 = sext i8 %1828 to i32
  %cmp4938 = icmp eq i32 %conv4937, 111
  br i1 %cmp4938, label %land.lhs.true.4940, label %if.end.4951

land.lhs.true.4940:                               ; preds = %sw.bb.4935
  %1829 = load i8*, i8** %name.addr, align 8
  %arrayidx4941 = getelementptr inbounds i8, i8* %1829, i64 11
  %1830 = load i8, i8* %arrayidx4941, align 1
  %conv4942 = sext i8 %1830 to i32
  %cmp4943 = icmp eq i32 %conv4942, 114
  br i1 %cmp4943, label %land.lhs.true.4945, label %if.end.4951

land.lhs.true.4945:                               ; preds = %land.lhs.true.4940
  %1831 = load i8*, i8** %name.addr, align 8
  %arrayidx4946 = getelementptr inbounds i8, i8* %1831, i64 12
  %1832 = load i8, i8* %arrayidx4946, align 1
  %conv4947 = sext i8 %1832 to i32
  %cmp4948 = icmp eq i32 %conv4947, 116
  br i1 %cmp4948, label %if.then.4950, label %if.end.4951

if.then.4950:                                     ; preds = %land.lhs.true.4945
  store i32 -90, i32* %retval
  br label %return

if.end.4951:                                      ; preds = %land.lhs.true.4945, %land.lhs.true.4940, %sw.bb.4935
  br label %unknown

sw.default.4952:                                  ; preds = %if.then.4915
  br label %unknown

if.end.4953:                                      ; preds = %land.lhs.true.4910, %land.lhs.true.4905, %land.lhs.true.4900, %land.lhs.true.4895, %sw.bb.4890
  br label %unknown

sw.default.4954:                                  ; preds = %if.then.4823
  br label %unknown

if.end.4955:                                      ; preds = %land.lhs.true.4818, %land.lhs.true.4813, %sw.bb.4808
  br label %unknown

sw.bb.4956:                                       ; preds = %entry
  %1833 = load i8*, i8** %name.addr, align 8
  %arrayidx4957 = getelementptr inbounds i8, i8* %1833, i64 0
  %1834 = load i8, i8* %arrayidx4957, align 1
  %conv4958 = sext i8 %1834 to i32
  %cmp4959 = icmp eq i32 %conv4958, 103
  br i1 %cmp4959, label %land.lhs.true.4961, label %if.end.5027

land.lhs.true.4961:                               ; preds = %sw.bb.4956
  %1835 = load i8*, i8** %name.addr, align 8
  %arrayidx4962 = getelementptr inbounds i8, i8* %1835, i64 1
  %1836 = load i8, i8* %arrayidx4962, align 1
  %conv4963 = sext i8 %1836 to i32
  %cmp4964 = icmp eq i32 %conv4963, 101
  br i1 %cmp4964, label %land.lhs.true.4966, label %if.end.5027

land.lhs.true.4966:                               ; preds = %land.lhs.true.4961
  %1837 = load i8*, i8** %name.addr, align 8
  %arrayidx4967 = getelementptr inbounds i8, i8* %1837, i64 2
  %1838 = load i8, i8* %arrayidx4967, align 1
  %conv4968 = sext i8 %1838 to i32
  %cmp4969 = icmp eq i32 %conv4968, 116
  br i1 %cmp4969, label %land.lhs.true.4971, label %if.end.5027

land.lhs.true.4971:                               ; preds = %land.lhs.true.4966
  %1839 = load i8*, i8** %name.addr, align 8
  %arrayidx4972 = getelementptr inbounds i8, i8* %1839, i64 3
  %1840 = load i8, i8* %arrayidx4972, align 1
  %conv4973 = sext i8 %1840 to i32
  %cmp4974 = icmp eq i32 %conv4973, 112
  br i1 %cmp4974, label %land.lhs.true.4976, label %if.end.5027

land.lhs.true.4976:                               ; preds = %land.lhs.true.4971
  %1841 = load i8*, i8** %name.addr, align 8
  %arrayidx4977 = getelementptr inbounds i8, i8* %1841, i64 4
  %1842 = load i8, i8* %arrayidx4977, align 1
  %conv4978 = sext i8 %1842 to i32
  %cmp4979 = icmp eq i32 %conv4978, 114
  br i1 %cmp4979, label %land.lhs.true.4981, label %if.end.5027

land.lhs.true.4981:                               ; preds = %land.lhs.true.4976
  %1843 = load i8*, i8** %name.addr, align 8
  %arrayidx4982 = getelementptr inbounds i8, i8* %1843, i64 5
  %1844 = load i8, i8* %arrayidx4982, align 1
  %conv4983 = sext i8 %1844 to i32
  %cmp4984 = icmp eq i32 %conv4983, 111
  br i1 %cmp4984, label %land.lhs.true.4986, label %if.end.5027

land.lhs.true.4986:                               ; preds = %land.lhs.true.4981
  %1845 = load i8*, i8** %name.addr, align 8
  %arrayidx4987 = getelementptr inbounds i8, i8* %1845, i64 6
  %1846 = load i8, i8* %arrayidx4987, align 1
  %conv4988 = sext i8 %1846 to i32
  %cmp4989 = icmp eq i32 %conv4988, 116
  br i1 %cmp4989, label %land.lhs.true.4991, label %if.end.5027

land.lhs.true.4991:                               ; preds = %land.lhs.true.4986
  %1847 = load i8*, i8** %name.addr, align 8
  %arrayidx4992 = getelementptr inbounds i8, i8* %1847, i64 7
  %1848 = load i8, i8* %arrayidx4992, align 1
  %conv4993 = sext i8 %1848 to i32
  %cmp4994 = icmp eq i32 %conv4993, 111
  br i1 %cmp4994, label %land.lhs.true.4996, label %if.end.5027

land.lhs.true.4996:                               ; preds = %land.lhs.true.4991
  %1849 = load i8*, i8** %name.addr, align 8
  %arrayidx4997 = getelementptr inbounds i8, i8* %1849, i64 8
  %1850 = load i8, i8* %arrayidx4997, align 1
  %conv4998 = sext i8 %1850 to i32
  %cmp4999 = icmp eq i32 %conv4998, 98
  br i1 %cmp4999, label %land.lhs.true.5001, label %if.end.5027

land.lhs.true.5001:                               ; preds = %land.lhs.true.4996
  %1851 = load i8*, i8** %name.addr, align 8
  %arrayidx5002 = getelementptr inbounds i8, i8* %1851, i64 9
  %1852 = load i8, i8* %arrayidx5002, align 1
  %conv5003 = sext i8 %1852 to i32
  %cmp5004 = icmp eq i32 %conv5003, 121
  br i1 %cmp5004, label %land.lhs.true.5006, label %if.end.5027

land.lhs.true.5006:                               ; preds = %land.lhs.true.5001
  %1853 = load i8*, i8** %name.addr, align 8
  %arrayidx5007 = getelementptr inbounds i8, i8* %1853, i64 10
  %1854 = load i8, i8* %arrayidx5007, align 1
  %conv5008 = sext i8 %1854 to i32
  %cmp5009 = icmp eq i32 %conv5008, 110
  br i1 %cmp5009, label %land.lhs.true.5011, label %if.end.5027

land.lhs.true.5011:                               ; preds = %land.lhs.true.5006
  %1855 = load i8*, i8** %name.addr, align 8
  %arrayidx5012 = getelementptr inbounds i8, i8* %1855, i64 11
  %1856 = load i8, i8* %arrayidx5012, align 1
  %conv5013 = sext i8 %1856 to i32
  %cmp5014 = icmp eq i32 %conv5013, 97
  br i1 %cmp5014, label %land.lhs.true.5016, label %if.end.5027

land.lhs.true.5016:                               ; preds = %land.lhs.true.5011
  %1857 = load i8*, i8** %name.addr, align 8
  %arrayidx5017 = getelementptr inbounds i8, i8* %1857, i64 12
  %1858 = load i8, i8* %arrayidx5017, align 1
  %conv5018 = sext i8 %1858 to i32
  %cmp5019 = icmp eq i32 %conv5018, 109
  br i1 %cmp5019, label %land.lhs.true.5021, label %if.end.5027

land.lhs.true.5021:                               ; preds = %land.lhs.true.5016
  %1859 = load i8*, i8** %name.addr, align 8
  %arrayidx5022 = getelementptr inbounds i8, i8* %1859, i64 13
  %1860 = load i8, i8* %arrayidx5022, align 1
  %conv5023 = sext i8 %1860 to i32
  %cmp5024 = icmp eq i32 %conv5023, 101
  br i1 %cmp5024, label %if.then.5026, label %if.end.5027

if.then.5026:                                     ; preds = %land.lhs.true.5021
  store i32 -83, i32* %retval
  br label %return

if.end.5027:                                      ; preds = %land.lhs.true.5021, %land.lhs.true.5016, %land.lhs.true.5011, %land.lhs.true.5006, %land.lhs.true.5001, %land.lhs.true.4996, %land.lhs.true.4991, %land.lhs.true.4986, %land.lhs.true.4981, %land.lhs.true.4976, %land.lhs.true.4971, %land.lhs.true.4966, %land.lhs.true.4961, %sw.bb.4956
  br label %unknown

sw.bb.5028:                                       ; preds = %entry
  %1861 = load i8*, i8** %name.addr, align 8
  %arrayidx5029 = getelementptr inbounds i8, i8* %1861, i64 0
  %1862 = load i8, i8* %arrayidx5029, align 1
  %conv5030 = sext i8 %1862 to i32
  %cmp5031 = icmp eq i32 %conv5030, 103
  br i1 %cmp5031, label %land.lhs.true.5033, label %if.end.5109

land.lhs.true.5033:                               ; preds = %sw.bb.5028
  %1863 = load i8*, i8** %name.addr, align 8
  %arrayidx5034 = getelementptr inbounds i8, i8* %1863, i64 1
  %1864 = load i8, i8* %arrayidx5034, align 1
  %conv5035 = sext i8 %1864 to i32
  %cmp5036 = icmp eq i32 %conv5035, 101
  br i1 %cmp5036, label %land.lhs.true.5038, label %if.end.5109

land.lhs.true.5038:                               ; preds = %land.lhs.true.5033
  %1865 = load i8*, i8** %name.addr, align 8
  %arrayidx5039 = getelementptr inbounds i8, i8* %1865, i64 2
  %1866 = load i8, i8* %arrayidx5039, align 1
  %conv5040 = sext i8 %1866 to i32
  %cmp5041 = icmp eq i32 %conv5040, 116
  br i1 %cmp5041, label %land.lhs.true.5043, label %if.end.5109

land.lhs.true.5043:                               ; preds = %land.lhs.true.5038
  %1867 = load i8*, i8** %name.addr, align 8
  %arrayidx5044 = getelementptr inbounds i8, i8* %1867, i64 3
  %1868 = load i8, i8* %arrayidx5044, align 1
  %conv5045 = sext i8 %1868 to i32
  %cmp5046 = icmp eq i32 %conv5045, 112
  br i1 %cmp5046, label %land.lhs.true.5048, label %if.end.5109

land.lhs.true.5048:                               ; preds = %land.lhs.true.5043
  %1869 = load i8*, i8** %name.addr, align 8
  %arrayidx5049 = getelementptr inbounds i8, i8* %1869, i64 4
  %1870 = load i8, i8* %arrayidx5049, align 1
  %conv5050 = sext i8 %1870 to i32
  %cmp5051 = icmp eq i32 %conv5050, 114
  br i1 %cmp5051, label %land.lhs.true.5053, label %if.end.5109

land.lhs.true.5053:                               ; preds = %land.lhs.true.5048
  %1871 = load i8*, i8** %name.addr, align 8
  %arrayidx5054 = getelementptr inbounds i8, i8* %1871, i64 5
  %1872 = load i8, i8* %arrayidx5054, align 1
  %conv5055 = sext i8 %1872 to i32
  %cmp5056 = icmp eq i32 %conv5055, 111
  br i1 %cmp5056, label %land.lhs.true.5058, label %if.end.5109

land.lhs.true.5058:                               ; preds = %land.lhs.true.5053
  %1873 = load i8*, i8** %name.addr, align 8
  %arrayidx5059 = getelementptr inbounds i8, i8* %1873, i64 6
  %1874 = load i8, i8* %arrayidx5059, align 1
  %conv5060 = sext i8 %1874 to i32
  %cmp5061 = icmp eq i32 %conv5060, 116
  br i1 %cmp5061, label %land.lhs.true.5063, label %if.end.5109

land.lhs.true.5063:                               ; preds = %land.lhs.true.5058
  %1875 = load i8*, i8** %name.addr, align 8
  %arrayidx5064 = getelementptr inbounds i8, i8* %1875, i64 7
  %1876 = load i8, i8* %arrayidx5064, align 1
  %conv5065 = sext i8 %1876 to i32
  %cmp5066 = icmp eq i32 %conv5065, 111
  br i1 %cmp5066, label %land.lhs.true.5068, label %if.end.5109

land.lhs.true.5068:                               ; preds = %land.lhs.true.5063
  %1877 = load i8*, i8** %name.addr, align 8
  %arrayidx5069 = getelementptr inbounds i8, i8* %1877, i64 8
  %1878 = load i8, i8* %arrayidx5069, align 1
  %conv5070 = sext i8 %1878 to i32
  %cmp5071 = icmp eq i32 %conv5070, 98
  br i1 %cmp5071, label %land.lhs.true.5073, label %if.end.5109

land.lhs.true.5073:                               ; preds = %land.lhs.true.5068
  %1879 = load i8*, i8** %name.addr, align 8
  %arrayidx5074 = getelementptr inbounds i8, i8* %1879, i64 9
  %1880 = load i8, i8* %arrayidx5074, align 1
  %conv5075 = sext i8 %1880 to i32
  %cmp5076 = icmp eq i32 %conv5075, 121
  br i1 %cmp5076, label %land.lhs.true.5078, label %if.end.5109

land.lhs.true.5078:                               ; preds = %land.lhs.true.5073
  %1881 = load i8*, i8** %name.addr, align 8
  %arrayidx5079 = getelementptr inbounds i8, i8* %1881, i64 10
  %1882 = load i8, i8* %arrayidx5079, align 1
  %conv5080 = sext i8 %1882 to i32
  %cmp5081 = icmp eq i32 %conv5080, 110
  br i1 %cmp5081, label %land.lhs.true.5083, label %if.end.5109

land.lhs.true.5083:                               ; preds = %land.lhs.true.5078
  %1883 = load i8*, i8** %name.addr, align 8
  %arrayidx5084 = getelementptr inbounds i8, i8* %1883, i64 11
  %1884 = load i8, i8* %arrayidx5084, align 1
  %conv5085 = sext i8 %1884 to i32
  %cmp5086 = icmp eq i32 %conv5085, 117
  br i1 %cmp5086, label %land.lhs.true.5088, label %if.end.5109

land.lhs.true.5088:                               ; preds = %land.lhs.true.5083
  %1885 = load i8*, i8** %name.addr, align 8
  %arrayidx5089 = getelementptr inbounds i8, i8* %1885, i64 12
  %1886 = load i8, i8* %arrayidx5089, align 1
  %conv5090 = sext i8 %1886 to i32
  %cmp5091 = icmp eq i32 %conv5090, 109
  br i1 %cmp5091, label %land.lhs.true.5093, label %if.end.5109

land.lhs.true.5093:                               ; preds = %land.lhs.true.5088
  %1887 = load i8*, i8** %name.addr, align 8
  %arrayidx5094 = getelementptr inbounds i8, i8* %1887, i64 13
  %1888 = load i8, i8* %arrayidx5094, align 1
  %conv5095 = sext i8 %1888 to i32
  %cmp5096 = icmp eq i32 %conv5095, 98
  br i1 %cmp5096, label %land.lhs.true.5098, label %if.end.5109

land.lhs.true.5098:                               ; preds = %land.lhs.true.5093
  %1889 = load i8*, i8** %name.addr, align 8
  %arrayidx5099 = getelementptr inbounds i8, i8* %1889, i64 14
  %1890 = load i8, i8* %arrayidx5099, align 1
  %conv5100 = sext i8 %1890 to i32
  %cmp5101 = icmp eq i32 %conv5100, 101
  br i1 %cmp5101, label %land.lhs.true.5103, label %if.end.5109

land.lhs.true.5103:                               ; preds = %land.lhs.true.5098
  %1891 = load i8*, i8** %name.addr, align 8
  %arrayidx5104 = getelementptr inbounds i8, i8* %1891, i64 15
  %1892 = load i8, i8* %arrayidx5104, align 1
  %conv5105 = sext i8 %1892 to i32
  %cmp5106 = icmp eq i32 %conv5105, 114
  br i1 %cmp5106, label %if.then.5108, label %if.end.5109

if.then.5108:                                     ; preds = %land.lhs.true.5103
  store i32 -84, i32* %retval
  br label %return

if.end.5109:                                      ; preds = %land.lhs.true.5103, %land.lhs.true.5098, %land.lhs.true.5093, %land.lhs.true.5088, %land.lhs.true.5083, %land.lhs.true.5078, %land.lhs.true.5073, %land.lhs.true.5068, %land.lhs.true.5063, %land.lhs.true.5058, %land.lhs.true.5053, %land.lhs.true.5048, %land.lhs.true.5043, %land.lhs.true.5038, %land.lhs.true.5033, %sw.bb.5028
  br label %unknown

sw.default.5110:                                  ; preds = %entry
  br label %unknown

unknown:                                          ; preds = %sw.default.5110, %if.end.5109, %if.end.5027, %if.end.4955, %sw.default.4954, %if.end.4953, %sw.default.4952, %if.end.4951, %if.end.4934, %if.end.4889, %sw.default.4888, %if.end.4887, %if.end.4870, %if.end.4807, %sw.default.4806, %if.end.4805, %if.end.4788, %sw.default.4728, %if.end.4727, %sw.default.4726, %if.end.4725, %if.end.4698, %if.end.4648, %sw.default.4647, %if.end.4646, %sw.default.4609, %sw.default.4608, %if.end.4607, %if.end.4580, %if.end.4550, %if.end.4502, %if.end.4450, %sw.default.4395, %sw.default.4394, %if.end.4393, %if.end.4351, %sw.default.4350, %sw.default.4349, %if.end.4348, %if.end.4321, %if.end.4291, %if.end.4248, %sw.default.4247, %sw.default.4246, %if.end.4245, %if.end.4218, %if.end.4188, %if.end.4143, %sw.default.4142, %if.end.4141, %if.end.4109, %sw.default.4061, %if.end.4060, %if.end.4018, %if.end.3976, %if.end.3934, %if.end.3892, %if.end.3850, %if.end.3808, %if.end.3766, %sw.default.3721, %if.end.3720, %sw.default.3683, %if.end.3682, %sw.default.3650, %if.end.3649, %if.end.3622, %if.end.3592, %sw.default.3591, %if.end.3590, %if.end.3568, %if.end.3535, %sw.default.3534, %if.end.3533, %if.end.3516, %sw.default.3515, %if.end.3481, %sw.default.3480, %if.end.3479, %sw.default.3478, %if.end.3477, %if.end.3465, %if.end.3453, %if.end.3433, %if.end.3411, %sw.default.3410, %if.end.3409, %if.end.3397, %if.end.3385, %if.end.3352, %if.end.3315, %sw.default.3314, %if.end.3313, %if.end.3291, %if.end.3256, %sw.default.3219, %if.end.3218, %if.end.3186, %if.end.3151, %sw.default.3150, %if.end.3149, %if.end.3122, %if.end.3095, %if.end.3060, %sw.default.3020, %if.end.3019, %sw.default.2987, %if.end.2986, %if.end.2959, %if.end.2929, %sw.default.2897, %sw.default.2896, %sw.default.2895, %if.end.2894, %if.end.2877, %if.end.2860, %if.end.2843, %if.end.2823, %if.end.2798, %if.end.2771, %sw.default.2744, %if.end.2743, %if.end.2721, %if.end.2693, %sw.default.2692, %if.end.2691, %if.end.2669, %if.end.2647, %if.end.2617, %if.end.2585, %if.end.2553, %if.end.2521, %sw.default.2520, %if.end.2519, %if.end.2507, %if.end.2477, %sw.default.2445, %if.end.2444, %if.end.2417, %if.end.2387, %if.end.2355, %if.end.2323, %if.end.2291, %sw.default.2256, %if.end.2255, %if.end.2228, %sw.default.2227, %if.end.2226, %sw.default.2209, %if.end.2208, %if.end.2196, %sw.default.2173, %if.end.2172, %if.end.2150, %if.end.2128, %if.end.2106, %if.end.2084, %sw.default.2083, %if.end.2082, %if.end.2070, %sw.default.2050, %sw.default.2049, %if.end.2048, %if.end.2036, %if.end.2021, %if.end.2001, %sw.default.1976, %if.end.1975, %sw.default.1953, %if.end.1952, %if.end.1935, %if.end.1912, %if.end.1885, %sw.default.1884, %if.end.1883, %if.end.1871, %if.end.1859, %if.end.1847, %sw.default.1822, %if.end.1821, %if.end.1799, %if.end.1774, %sw.default.1747, %if.end.1746, %if.end.1724, %sw.default.1699, %if.end.1698, %if.end.1676, %if.end.1636, %sw.default.1609, %if.end.1608, %if.end.1586, %if.end.1561, %sw.default.1531, %sw.default.1530, %if.end.1529, %if.end.1512, %sw.default.1492, %if.end.1491, %sw.default.1474, %if.end.1473, %sw.default.1472, %if.end.1461, %if.end.1446, %if.end.1426, %sw.default.1404, %if.end.1403, %if.end.1386, %if.end.1369, %if.end.1352, %if.end.1335, %if.end.1318, %sw.default.1298, %if.end.1297, %if.end.1280, %if.end.1260, %if.end.1238, %sw.default.1216, %if.end.1215, %if.end.1198, %sw.default.1178, %if.end.1177, %if.end.1160, %sw.default.1140, %if.end.1139, %if.end.1122, %if.end.1102, %sw.default.1080, %if.end.1079, %if.end.1062, %sw.default.1045, %sw.default.1044, %if.end.1043, %if.end.1036, %if.end.1026, %if.end.1014, %if.end.996, %sw.default.974, %if.end.973, %if.end.956, %if.end.936, %if.end.914, %sw.default.889, %if.end.888, %sw.default.887, %if.end.886, %if.end.879, %sw.default.864, %sw.default.863, %if.end.862, %if.end.855, %if.end.845, %sw.default.830, %if.end.829, %if.end.817, %if.end.805, %sw.default.793, %if.end.792, %if.end.785, %sw.default.772, %sw.default.771, %if.end.770, %if.end.763, %if.end.756, %if.end.746, %sw.default.731, %if.end.730, %if.end.718, %if.end.706, %if.end.691, %if.end.674, %sw.default.657, %if.end.656, %if.end.644, %if.end.632, %sw.default.617, %if.end.616, %if.end.604, %if.end.589, %sw.default.572, %if.end.571, %if.end.559, %if.end.547, %if.end.535, %if.end.520, %sw.default.503, %sw.default.502, %if.end.501, %if.end.494, %if.end.484, %if.end.472, %if.end.460, %if.end.445, %if.end.428, %if.end.411, %if.end.394, %if.end.377, %sw.default.357, %if.end.356, %if.end.344, %if.end.332, %if.end.320, %sw.default.308, %if.end.307, %if.end.300, %if.end.290, %if.end.278, %sw.default.277, %sw.default.266, %if.end.265, %if.end.258, %if.end.251, %if.end.241, %if.end.229, %if.end.217, %if.end.205, %if.end.193, %if.end.181, %sw.default.169, %if.end.168, %if.end.161, %if.end.151, %sw.default.139, %if.end.138, %if.end.131, %if.end.124, %sw.default.114, %if.end.113, %if.end.106, %if.end.96, %sw.default.82, %if.end.81, %if.end.74, %sw.default.67, %if.end.59, %sw.default.52, %if.end.46, %sw.default.39, %if.end.32, %sw.default.25, %if.end.19, %if.end, %sw.default
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %unknown, %if.then.5108, %if.then.5026, %if.then.4950, %if.then.4933, %if.then.4886, %if.then.4869, %if.then.4804, %if.then.4787, %if.then.4724, %if.then.4697, %if.then.4645, %if.then.4606, %if.then.4579, %if.then.4549, %if.then.4501, %if.then.4449, %if.then.4392, %if.then.4347, %if.then.4320, %if.then.4290, %if.then.4244, %if.then.4217, %if.then.4187, %if.then.4140, %if.then.4108, %if.then.4059, %if.then.4017, %if.then.3975, %if.then.3933, %if.then.3891, %if.then.3849, %if.then.3807, %if.then.3765, %if.then.3719, %if.then.3681, %if.then.3648, %if.then.3621, %if.then.3589, %if.then.3567, %if.then.3532, %sw.bb.3514, %sw.bb.3513, %if.then.3476, %if.then.3464, %if.then.3452, %if.then.3432, %if.then.3408, %if.then.3396, %if.then.3384, %if.then.3351, %if.then.3312, %if.then.3290, %if.then.3255, %if.then.3217, %if.then.3185, %if.then.3148, %if.then.3121, %if.then.3094, %if.then.3059, %if.then.3018, %if.then.2985, %if.then.2958, %if.then.2928, %if.then.2893, %if.then.2876, %if.then.2859, %if.then.2842, %if.then.2822, %if.then.2797, %if.then.2770, %if.then.2742, %if.then.2720, %if.then.2690, %if.then.2668, %if.then.2646, %if.then.2616, %if.then.2584, %if.then.2552, %if.then.2518, %if.then.2506, %if.then.2476, %if.then.2443, %if.then.2416, %if.then.2386, %if.then.2354, %if.then.2322, %if.then.2290, %if.then.2254, %if.then.2225, %if.then.2207, %if.then.2195, %if.then.2171, %if.then.2149, %if.then.2127, %if.then.2105, %if.then.2081, %if.then.2069, %if.then.2047, %if.then.2035, %if.then.2020, %if.then.2000, %if.then.1974, %if.then.1951, %if.then.1934, %if.then.1911, %if.then.1882, %if.then.1870, %if.then.1858, %if.then.1846, %if.then.1820, %if.then.1798, %if.then.1773, %if.then.1745, %if.then.1723, %if.then.1697, %if.then.1635, %if.then.1607, %if.then.1585, %if.then.1560, %if.then.1528, %if.then.1511, %if.then.1490, %sw.bb.1471, %sw.bb.1470, %if.then.1460, %if.then.1445, %if.then.1425, %if.then.1402, %if.then.1385, %if.then.1368, %if.then.1351, %if.then.1334, %if.then.1317, %if.then.1296, %if.then.1279, %if.then.1259, %if.then.1237, %if.then.1214, %if.then.1197, %if.then.1176, %if.then.1159, %if.then.1138, %if.then.1121, %if.then.1101, %if.then.1078, %if.then.1061, %if.then.1042, %if.then.1035, %if.then.1025, %if.then.1013, %if.then.995, %if.then.972, %if.then.955, %if.then.935, %if.then.913, %if.then.885, %if.then.878, %if.then.861, %if.then.854, %if.then.844, %if.then.828, %if.then.816, %if.then.804, %if.then.791, %if.then.784, %if.then.769, %if.then.762, %if.then.755, %if.then.745, %if.then.729, %if.then.717, %if.then.705, %if.then.690, %if.then.673, %if.then.655, %if.then.643, %if.then.631, %if.then.615, %if.then.603, %if.then.588, %if.then.570, %if.then.558, %if.then.546, %if.then.534, %if.then.519, %if.then.500, %if.then.493, %if.then.483, %if.then.471, %if.then.459, %if.then.444, %if.then.427, %if.then.410, %if.then.393, %if.then.376, %if.then.355, %if.then.343, %if.then.331, %if.then.319, %if.then.306, %if.then.299, %if.then.289, %sw.bb.276, %sw.bb.275, %if.then.264, %if.then.257, %if.then.250, %if.then.240, %if.then.228, %if.then.216, %if.then.204, %if.then.192, %if.then.180, %if.then.167, %if.then.160, %if.then.150, %if.then.137, %if.then.130, %if.then.123, %if.then.112, %if.then.105, %if.then.95, %if.then.80, %if.then.73, %sw.bb.66, %sw.bb.65, %sw.bb.64, %sw.bb.63, %if.then.58, %sw.bb.51, %sw.bb.50, %if.then.45, %sw.bb.38, %sw.bb.37, %sw.bb.36, %if.then.31, %sw.bb.24, %sw.bb.23, %if.then.18, %if.then, %sw.bb.5, %sw.bb.4, %sw.bb.3, %sw.bb.2, %sw.bb.1
  %1893 = load i32, i32* %retval
  ret i32 %1893
}

; Function Attrs: nounwind uwtable
define internal i8* @S_scan_str(i8* %start, i32 %keep_quoted, i32 %keep_delims) #0 {
entry:
  %retval = alloca i8*, align 8
  %start.addr = alloca i8*, align 8
  %keep_quoted.addr = alloca i32, align 4
  %keep_delims.addr = alloca i32, align 4
  %sv = alloca %struct.sv*, align 8
  %tmps = alloca i8*, align 8
  %s = alloca i8*, align 8
  %term = alloca i8, align 1
  %to = alloca i8*, align 8
  %brackets = alloca i32, align 4
  %has_utf8 = alloca i8, align 1
  %termcode = alloca i32, align 4
  %termstr = alloca [13 x i8], align 1
  %termlen = alloca i64, align 8
  %last = alloca i8*, align 8
  %cont = alloca i8, align 1
  %offset = alloca i32, align 4
  %found = alloca i8, align 1
  %ns = alloca i8*, align 8
  %svlast = alloca i8*, align 8
  %t = alloca i8*, align 8
  %tmp = alloca i64, align 8
  %t148 = alloca i8*, align 8
  %w = alloca i8*, align 8
  %tmp191 = alloca i64, align 8
  %tmp208 = alloca i64, align 8
  %tmp421 = alloca i64, align 8
  %tmp463 = alloca i64, align 8
  %sv515 = alloca %struct.sv*, align 8
  %tmp583 = alloca i64, align 8
  store i8* %start, i8** %start.addr, align 8
  store i32 %keep_quoted, i32* %keep_quoted.addr, align 4
  store i32 %keep_delims, i32* %keep_delims.addr, align 4
  %0 = load i8*, i8** %start.addr, align 8
  store i8* %0, i8** %s, align 8
  store i32 1, i32* %brackets, align 4
  store i8 0, i8* %has_utf8, align 1
  store i8* null, i8** %last, align 8
  %1 = load i8*, i8** %s, align 8
  %2 = load i8, i8* %1, align 1
  %conv = sext i8 %2 to i32
  %cmp = icmp eq i32 %conv, 32
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %3 = load i8*, i8** %s, align 8
  %4 = load i8, i8* %3, align 1
  %conv2 = sext i8 %4 to i32
  %cmp3 = icmp eq i32 %conv2, 9
  br i1 %cmp3, label %if.then, label %lor.lhs.false.5

lor.lhs.false.5:                                  ; preds = %lor.lhs.false
  %5 = load i8*, i8** %s, align 8
  %6 = load i8, i8* %5, align 1
  %conv6 = sext i8 %6 to i32
  %cmp7 = icmp eq i32 %conv6, 10
  br i1 %cmp7, label %if.then, label %lor.lhs.false.9

lor.lhs.false.9:                                  ; preds = %lor.lhs.false.5
  %7 = load i8*, i8** %s, align 8
  %8 = load i8, i8* %7, align 1
  %conv10 = sext i8 %8 to i32
  %cmp11 = icmp eq i32 %conv10, 13
  br i1 %cmp11, label %if.then, label %lor.lhs.false.13

lor.lhs.false.13:                                 ; preds = %lor.lhs.false.9
  %9 = load i8*, i8** %s, align 8
  %10 = load i8, i8* %9, align 1
  %conv14 = sext i8 %10 to i32
  %cmp15 = icmp eq i32 %conv14, 12
  br i1 %cmp15, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false.13, %lor.lhs.false.9, %lor.lhs.false.5, %lor.lhs.false, %entry
  %11 = load i8*, i8** %s, align 8
  %call = call i8* @S_skipspace(i8* %11)
  store i8* %call, i8** %s, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %lor.lhs.false.13
  %12 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line = getelementptr inbounds %struct.cop, %struct.cop* %12, i32 0, i32 13
  %13 = load i32, i32* %cop_line, align 4
  %14 = load i32, i32* @PL_copline, align 4
  %cmp17 = icmp ult i32 %13, %14
  br i1 %cmp17, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end
  %15 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line19 = getelementptr inbounds %struct.cop, %struct.cop* %15, i32 0, i32 13
  %16 = load i32, i32* %cop_line19, align 4
  br label %cond.end

cond.false:                                       ; preds = %if.end
  %17 = load i32, i32* @PL_copline, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %16, %cond.true ], [ %17, %cond.false ]
  store i32 %cond, i32* @PL_copline, align 4
  %18 = load i8*, i8** %s, align 8
  %19 = load i8, i8* %18, align 1
  store i8 %19, i8* %term, align 1
  %20 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %tobool = icmp ne %struct.sv* %20, null
  br i1 %tobool, label %land.lhs.true, label %lor.lhs.false.25

land.lhs.true:                                    ; preds = %cond.end
  %21 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %21, i32 0, i32 2
  %22 = load i32, i32* %sv_flags, align 4
  %and = and i32 %22, 536870912
  %tobool20 = icmp ne i32 %and, 0
  br i1 %tobool20, label %land.lhs.true.21, label %lor.lhs.false.25

land.lhs.true.21:                                 ; preds = %land.lhs.true
  %23 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private = getelementptr inbounds %struct.cop, %struct.cop* %23, i32 0, i32 7
  %24 = load i8, i8* %op_private, align 1
  %conv22 = zext i8 %24 to i32
  %and23 = and i32 %conv22, 8
  %tobool24 = icmp ne i32 %and23, 0
  br i1 %tobool24, label %lor.lhs.false.25, label %if.else

lor.lhs.false.25:                                 ; preds = %land.lhs.true.21, %land.lhs.true, %cond.end
  %25 = load i32, i32* @PL_hints, align 4
  %and26 = and i32 %25, 8388608
  %tobool27 = icmp ne i32 %and26, 0
  br i1 %tobool27, label %if.else, label %if.then.28

if.then.28:                                       ; preds = %lor.lhs.false.25
  %26 = load i8, i8* %term, align 1
  %arrayidx = getelementptr inbounds [13 x i8], [13 x i8]* %termstr, i32 0, i64 0
  store i8 %26, i8* %arrayidx, align 1
  %conv29 = zext i8 %26 to i32
  store i32 %conv29, i32* %termcode, align 4
  store i64 1, i64* %termlen, align 8
  br label %if.end.37

if.else:                                          ; preds = %lor.lhs.false.25, %land.lhs.true.21
  %27 = load i8*, i8** %s, align 8
  %call30 = call i64 @Perl_utf8_to_uvchr(i8* %27, i64* %termlen)
  %conv31 = trunc i64 %call30 to i32
  store i32 %conv31, i32* %termcode, align 4
  %arraydecay = getelementptr inbounds [13 x i8], [13 x i8]* %termstr, i32 0, i32 0
  %28 = load i8*, i8** %s, align 8
  %29 = load i64, i64* %termlen, align 8
  %mul = mul i64 %29, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay, i8* %28, i64 %mul, i32 1, i1 false)
  %30 = load i8, i8* %term, align 1
  %conv32 = sext i8 %30 to i64
  %cmp33 = icmp ult i64 %conv32, 128
  br i1 %cmp33, label %if.end.36, label %if.then.35

if.then.35:                                       ; preds = %if.else
  store i8 1, i8* %has_utf8, align 1
  br label %if.end.36

if.end.36:                                        ; preds = %if.then.35, %if.else
  br label %if.end.37

if.end.37:                                        ; preds = %if.end.36, %if.then.28
  %31 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line38 = getelementptr inbounds %struct.cop, %struct.cop* %31, i32 0, i32 13
  %32 = load i32, i32* %cop_line38, align 4
  store i32 %32, i32* @PL_multi_start, align 4
  %33 = load i8, i8* %term, align 1
  %conv39 = sext i8 %33 to i32
  store i32 %conv39, i32* @PL_multi_open, align 4
  %34 = load i8, i8* %term, align 1
  %conv40 = sext i8 %34 to i32
  %tobool41 = icmp ne i32 %conv40, 0
  br i1 %tobool41, label %land.lhs.true.42, label %if.end.50

land.lhs.true.42:                                 ; preds = %if.end.37
  %35 = load i8, i8* %term, align 1
  %conv43 = sext i8 %35 to i32
  %call44 = call i8* @strchr(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.44, i32 0, i32 0), i32 %conv43)
  store i8* %call44, i8** %tmps, align 8
  %tobool45 = icmp ne i8* %call44, null
  br i1 %tobool45, label %if.then.46, label %if.end.50

if.then.46:                                       ; preds = %land.lhs.true.42
  %36 = load i8*, i8** %tmps, align 8
  %arrayidx47 = getelementptr inbounds i8, i8* %36, i64 5
  %37 = load i8, i8* %arrayidx47, align 1
  store i8 %37, i8* %term, align 1
  %arrayidx48 = getelementptr inbounds [13 x i8], [13 x i8]* %termstr, i32 0, i64 0
  store i8 %37, i8* %arrayidx48, align 1
  %conv49 = zext i8 %37 to i32
  store i32 %conv49, i32* %termcode, align 4
  br label %if.end.50

if.end.50:                                        ; preds = %if.then.46, %land.lhs.true.42, %if.end.37
  %38 = load i8, i8* %term, align 1
  %conv51 = sext i8 %38 to i32
  store i32 %conv51, i32* @PL_multi_close, align 4
  %call52 = call %struct.sv* @Perl_newSV(i64 79)
  store %struct.sv* %call52, %struct.sv** %sv, align 8
  %39 = load %struct.sv*, %struct.sv** %sv, align 8
  %call53 = call signext i8 @Perl_sv_upgrade(%struct.sv* %39, i32 5)
  %40 = load i32, i32* %termcode, align 4
  %conv54 = sext i32 %40 to i64
  %41 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %41, i32 0, i32 0
  %42 = load i8*, i8** %sv_any, align 8
  %43 = bitcast i8* %42 to %struct.xpviv*
  %xiv_iv = getelementptr inbounds %struct.xpviv, %struct.xpviv* %43, i32 0, i32 3
  store i64 %conv54, i64* %xiv_iv, align 8
  %44 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags55 = getelementptr inbounds %struct.sv, %struct.sv* %44, i32 0, i32 2
  %45 = load i32, i32* %sv_flags55, align 4
  %and56 = and i32 %45, 1223753727
  store i32 %and56, i32* %sv_flags55, align 4
  %46 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags57 = getelementptr inbounds %struct.sv, %struct.sv* %46, i32 0, i32 2
  %47 = load i32, i32* %sv_flags57, align 4
  %or = or i32 %47, 67371008
  store i32 %or, i32* %sv_flags57, align 4
  %48 = load i32, i32* %keep_delims.addr, align 4
  %tobool58 = icmp ne i32 %48, 0
  br i1 %tobool58, label %if.then.59, label %if.end.60

if.then.59:                                       ; preds = %if.end.50
  %49 = load %struct.sv*, %struct.sv** %sv, align 8
  %50 = load i8*, i8** %s, align 8
  %51 = load i64, i64* %termlen, align 8
  call void @Perl_sv_catpvn_flags(%struct.sv* %49, i8* %50, i64 %51, i32 2)
  br label %if.end.60

if.end.60:                                        ; preds = %if.then.59, %if.end.50
  %52 = load i64, i64* %termlen, align 8
  %53 = load i8*, i8** %s, align 8
  %add.ptr = getelementptr inbounds i8, i8* %53, i64 %52
  store i8* %add.ptr, i8** %s, align 8
  br label %for.cond

for.cond:                                         ; preds = %if.end.538, %if.end.60
  %54 = load %struct.sv*, %struct.sv** @PL_encoding, align 8
  %tobool61 = icmp ne %struct.sv* %54, null
  br i1 %tobool61, label %land.lhs.true.62, label %if.end.220

land.lhs.true.62:                                 ; preds = %for.cond
  %55 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %tobool63 = icmp ne %struct.sv* %55, null
  br i1 %tobool63, label %land.lhs.true.64, label %lor.lhs.false.73

land.lhs.true.64:                                 ; preds = %land.lhs.true.62
  %56 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_flags65 = getelementptr inbounds %struct.sv, %struct.sv* %56, i32 0, i32 2
  %57 = load i32, i32* %sv_flags65, align 4
  %and66 = and i32 %57, 536870912
  %tobool67 = icmp ne i32 %and66, 0
  br i1 %tobool67, label %land.lhs.true.68, label %lor.lhs.false.73

land.lhs.true.68:                                 ; preds = %land.lhs.true.64
  %58 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private69 = getelementptr inbounds %struct.cop, %struct.cop* %58, i32 0, i32 7
  %59 = load i8, i8* %op_private69, align 1
  %conv70 = zext i8 %59 to i32
  %and71 = and i32 %conv70, 8
  %tobool72 = icmp ne i32 %and71, 0
  br i1 %tobool72, label %lor.lhs.false.73, label %if.end.220

lor.lhs.false.73:                                 ; preds = %land.lhs.true.68, %land.lhs.true.64, %land.lhs.true.62
  %60 = load i32, i32* @PL_hints, align 4
  %and74 = and i32 %60, 8388608
  %tobool75 = icmp ne i32 %and74, 0
  br i1 %tobool75, label %if.end.220, label %if.then.76

if.then.76:                                       ; preds = %lor.lhs.false.73
  store i8 1, i8* %cont, align 1
  br label %while.cond

while.cond:                                       ; preds = %if.end.205, %if.end.140, %if.then.76
  %61 = load i8, i8* %cont, align 1
  %tobool77 = icmp ne i8 %61, 0
  br i1 %tobool77, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %62 = load i8*, i8** %s, align 8
  %63 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_any78 = getelementptr inbounds %struct.sv, %struct.sv* %63, i32 0, i32 0
  %64 = load i8*, i8** %sv_any78, align 8
  %65 = bitcast i8* %64 to %struct.xpv*
  %xpv_pv = getelementptr inbounds %struct.xpv, %struct.xpv* %65, i32 0, i32 0
  %66 = load i8*, i8** %xpv_pv, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %62 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %66 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %conv79 = trunc i64 %sub.ptr.sub to i32
  store i32 %conv79, i32* %offset, align 4
  %67 = load %struct.sv*, %struct.sv** %sv, align 8
  %68 = load %struct.sv*, %struct.sv** @PL_encoding, align 8
  %69 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %arraydecay80 = getelementptr inbounds [13 x i8], [13 x i8]* %termstr, i32 0, i32 0
  %70 = load i64, i64* %termlen, align 8
  %conv81 = trunc i64 %70 to i32
  %call82 = call signext i8 @Perl_sv_cat_decode(%struct.sv* %67, %struct.sv* %68, %struct.sv* %69, i32* %offset, i8* %arraydecay80, i32 %conv81)
  store i8 %call82, i8* %found, align 1
  %71 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_any83 = getelementptr inbounds %struct.sv, %struct.sv* %71, i32 0, i32 0
  %72 = load i8*, i8** %sv_any83, align 8
  %73 = bitcast i8* %72 to %struct.xpv*
  %xpv_pv84 = getelementptr inbounds %struct.xpv, %struct.xpv* %73, i32 0, i32 0
  %74 = load i8*, i8** %xpv_pv84, align 8
  %75 = load i32, i32* %offset, align 4
  %idx.ext = sext i32 %75 to i64
  %add.ptr85 = getelementptr inbounds i8, i8* %74, i64 %idx.ext
  store i8* %add.ptr85, i8** %ns, align 8
  %76 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any86 = getelementptr inbounds %struct.sv, %struct.sv* %76, i32 0, i32 0
  %77 = load i8*, i8** %sv_any86, align 8
  %78 = bitcast i8* %77 to %struct.xpv*
  %xpv_pv87 = getelementptr inbounds %struct.xpv, %struct.xpv* %78, i32 0, i32 0
  %79 = load i8*, i8** %xpv_pv87, align 8
  %80 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any88 = getelementptr inbounds %struct.sv, %struct.sv* %80, i32 0, i32 0
  %81 = load i8*, i8** %sv_any88, align 8
  %82 = bitcast i8* %81 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %82, i32 0, i32 1
  %83 = load i64, i64* %xpv_cur, align 8
  %add.ptr89 = getelementptr inbounds i8, i8* %79, i64 %83
  %add.ptr90 = getelementptr inbounds i8, i8* %add.ptr89, i64 -1
  store i8* %add.ptr90, i8** %svlast, align 8
  br label %for.cond.91

for.cond.91:                                      ; preds = %for.inc, %while.body
  %84 = load i8*, i8** %s, align 8
  %85 = load i8*, i8** %ns, align 8
  %cmp92 = icmp ult i8* %84, %85
  br i1 %cmp92, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond.91
  %86 = load i8*, i8** %s, align 8
  %87 = load i8, i8* %86, align 1
  %conv94 = sext i8 %87 to i32
  %cmp95 = icmp eq i32 %conv94, 10
  br i1 %cmp95, label %land.lhs.true.97, label %if.end.101

land.lhs.true.97:                                 ; preds = %for.body
  %88 = load volatile %struct._PerlIO**, %struct._PerlIO*** @PL_rsfp, align 8
  %tobool98 = icmp ne %struct._PerlIO** %88, null
  br i1 %tobool98, label %if.end.101, label %if.then.99

if.then.99:                                       ; preds = %land.lhs.true.97
  %89 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line100 = getelementptr inbounds %struct.cop, %struct.cop* %89, i32 0, i32 13
  %90 = load i32, i32* %cop_line100, align 4
  %inc = add i32 %90, 1
  store i32 %inc, i32* %cop_line100, align 4
  br label %if.end.101

if.end.101:                                       ; preds = %if.then.99, %land.lhs.true.97, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.101
  %91 = load i8*, i8** %s, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %91, i32 1
  store i8* %incdec.ptr, i8** %s, align 8
  br label %for.cond.91

for.end:                                          ; preds = %for.cond.91
  %92 = load i8, i8* %found, align 1
  %tobool102 = icmp ne i8 %92, 0
  br i1 %tobool102, label %if.else.104, label %if.then.103

if.then.103:                                      ; preds = %for.end
  br label %read_more_line

if.else.104:                                      ; preds = %for.end
  %93 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any105 = getelementptr inbounds %struct.sv, %struct.sv* %93, i32 0, i32 0
  %94 = load i8*, i8** %sv_any105, align 8
  %95 = bitcast i8* %94 to %struct.xpv*
  %xpv_cur106 = getelementptr inbounds %struct.xpv, %struct.xpv* %95, i32 0, i32 1
  %96 = load i64, i64* %xpv_cur106, align 8
  %cmp107 = icmp ugt i64 %96, 1
  br i1 %cmp107, label %land.lhs.true.109, label %if.end.142

land.lhs.true.109:                                ; preds = %if.else.104
  %97 = load i8*, i8** %svlast, align 8
  %add.ptr110 = getelementptr inbounds i8, i8* %97, i64 -1
  %98 = load i8, i8* %add.ptr110, align 1
  %conv111 = sext i8 %98 to i32
  %cmp112 = icmp eq i32 %conv111, 92
  br i1 %cmp112, label %if.then.114, label %if.end.142

if.then.114:                                      ; preds = %land.lhs.true.109
  %99 = load i8*, i8** %svlast, align 8
  %add.ptr115 = getelementptr inbounds i8, i8* %99, i64 -2
  store i8* %add.ptr115, i8** %t, align 8
  br label %for.cond.116

for.cond.116:                                     ; preds = %for.body.124, %if.then.114
  %100 = load i8*, i8** %t, align 8
  %101 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any117 = getelementptr inbounds %struct.sv, %struct.sv* %101, i32 0, i32 0
  %102 = load i8*, i8** %sv_any117, align 8
  %103 = bitcast i8* %102 to %struct.xpv*
  %xpv_pv118 = getelementptr inbounds %struct.xpv, %struct.xpv* %103, i32 0, i32 0
  %104 = load i8*, i8** %xpv_pv118, align 8
  %cmp119 = icmp uge i8* %100, %104
  br i1 %cmp119, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %for.cond.116
  %105 = load i8*, i8** %t, align 8
  %106 = load i8, i8* %105, align 1
  %conv121 = sext i8 %106 to i32
  %cmp122 = icmp eq i32 %conv121, 92
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond.116
  %107 = phi i1 [ false, %for.cond.116 ], [ %cmp122, %land.rhs ]
  br i1 %107, label %for.body.124, label %for.end.126

for.body.124:                                     ; preds = %land.end
  %108 = load i8*, i8** %t, align 8
  %incdec.ptr125 = getelementptr inbounds i8, i8* %108, i32 -1
  store i8* %incdec.ptr125, i8** %t, align 8
  br label %for.cond.116

for.end.126:                                      ; preds = %land.end
  %109 = load i8*, i8** %svlast, align 8
  %add.ptr127 = getelementptr inbounds i8, i8* %109, i64 -1
  %110 = load i8*, i8** %t, align 8
  %sub.ptr.lhs.cast128 = ptrtoint i8* %add.ptr127 to i64
  %sub.ptr.rhs.cast129 = ptrtoint i8* %110 to i64
  %sub.ptr.sub130 = sub i64 %sub.ptr.lhs.cast128, %sub.ptr.rhs.cast129
  %rem = srem i64 %sub.ptr.sub130, 2
  %tobool131 = icmp ne i64 %rem, 0
  br i1 %tobool131, label %if.then.132, label %if.end.141

if.then.132:                                      ; preds = %for.end.126
  %111 = load i32, i32* %keep_quoted.addr, align 4
  %tobool133 = icmp ne i32 %111, 0
  br i1 %tobool133, label %if.end.140, label %if.then.134

if.then.134:                                      ; preds = %if.then.132
  %112 = load i8, i8* %term, align 1
  %113 = load i8*, i8** %svlast, align 8
  %add.ptr135 = getelementptr inbounds i8, i8* %113, i64 -1
  store i8 %112, i8* %add.ptr135, align 1
  %114 = load i8*, i8** %svlast, align 8
  store i8 0, i8* %114, align 1
  %115 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any136 = getelementptr inbounds %struct.sv, %struct.sv* %115, i32 0, i32 0
  %116 = load i8*, i8** %sv_any136, align 8
  %117 = bitcast i8* %116 to %struct.xpv*
  %xpv_cur137 = getelementptr inbounds %struct.xpv, %struct.xpv* %117, i32 0, i32 1
  %118 = load i64, i64* %xpv_cur137, align 8
  %sub = sub i64 %118, 1
  %119 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any138 = getelementptr inbounds %struct.sv, %struct.sv* %119, i32 0, i32 0
  %120 = load i8*, i8** %sv_any138, align 8
  %121 = bitcast i8* %120 to %struct.xpv*
  %xpv_cur139 = getelementptr inbounds %struct.xpv, %struct.xpv* %121, i32 0, i32 1
  store i64 %sub, i64* %xpv_cur139, align 8
  store i64 %sub, i64* %tmp
  %122 = load i64, i64* %tmp
  br label %if.end.140

if.end.140:                                       ; preds = %if.then.134, %if.then.132
  br label %while.cond

if.end.141:                                       ; preds = %for.end.126
  br label %if.end.142

if.end.142:                                       ; preds = %if.end.141, %land.lhs.true.109, %if.else.104
  %123 = load i32, i32* @PL_multi_open, align 4
  %124 = load i32, i32* @PL_multi_close, align 4
  %cmp143 = icmp eq i32 %123, %124
  br i1 %cmp143, label %if.then.145, label %if.else.146

if.then.145:                                      ; preds = %if.end.142
  store i8 0, i8* %cont, align 1
  br label %if.end.204

if.else.146:                                      ; preds = %if.end.142
  %125 = load i8*, i8** %last, align 8
  %tobool150 = icmp ne i8* %125, null
  br i1 %tobool150, label %if.end.154, label %if.then.151

if.then.151:                                      ; preds = %if.else.146
  %126 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any152 = getelementptr inbounds %struct.sv, %struct.sv* %126, i32 0, i32 0
  %127 = load i8*, i8** %sv_any152, align 8
  %128 = bitcast i8* %127 to %struct.xpv*
  %xpv_pv153 = getelementptr inbounds %struct.xpv, %struct.xpv* %128, i32 0, i32 0
  %129 = load i8*, i8** %xpv_pv153, align 8
  store i8* %129, i8** %last, align 8
  br label %if.end.154

if.end.154:                                       ; preds = %if.then.151, %if.else.146
  %130 = load i8*, i8** %last, align 8
  store i8* %130, i8** %t148, align 8
  store i8* %130, i8** %w, align 8
  br label %for.cond.155

for.cond.155:                                     ; preds = %for.inc.183, %if.end.154
  %131 = load i8*, i8** %t148, align 8
  %132 = load i8*, i8** %svlast, align 8
  %cmp156 = icmp ult i8* %131, %132
  br i1 %cmp156, label %for.body.158, label %for.end.186

for.body.158:                                     ; preds = %for.cond.155
  %133 = load i8*, i8** %t148, align 8
  %134 = load i8, i8* %133, align 1
  %conv159 = sext i8 %134 to i32
  %cmp160 = icmp eq i32 %conv159, 92
  br i1 %cmp160, label %if.then.162, label %if.else.175

if.then.162:                                      ; preds = %for.body.158
  %135 = load i32, i32* %keep_quoted.addr, align 4
  %tobool163 = icmp ne i32 %135, 0
  br i1 %tobool163, label %if.else.171, label %land.lhs.true.164

land.lhs.true.164:                                ; preds = %if.then.162
  %136 = load i8*, i8** %t148, align 8
  %add.ptr165 = getelementptr inbounds i8, i8* %136, i64 1
  %137 = load i8, i8* %add.ptr165, align 1
  %conv166 = sext i8 %137 to i32
  %138 = load i32, i32* @PL_multi_open, align 4
  %cmp167 = icmp eq i32 %conv166, %138
  br i1 %cmp167, label %if.then.169, label %if.else.171

if.then.169:                                      ; preds = %land.lhs.true.164
  %139 = load i8*, i8** %t148, align 8
  %incdec.ptr170 = getelementptr inbounds i8, i8* %139, i32 1
  store i8* %incdec.ptr170, i8** %t148, align 8
  br label %if.end.174

if.else.171:                                      ; preds = %land.lhs.true.164, %if.then.162
  %140 = load i8*, i8** %t148, align 8
  %incdec.ptr172 = getelementptr inbounds i8, i8* %140, i32 1
  store i8* %incdec.ptr172, i8** %t148, align 8
  %141 = load i8, i8* %140, align 1
  %142 = load i8*, i8** %w, align 8
  %incdec.ptr173 = getelementptr inbounds i8, i8* %142, i32 1
  store i8* %incdec.ptr173, i8** %w, align 8
  store i8 %141, i8* %142, align 1
  br label %if.end.174

if.end.174:                                       ; preds = %if.else.171, %if.then.169
  br label %if.end.182

if.else.175:                                      ; preds = %for.body.158
  %143 = load i8*, i8** %t148, align 8
  %144 = load i8, i8* %143, align 1
  %conv176 = sext i8 %144 to i32
  %145 = load i32, i32* @PL_multi_open, align 4
  %cmp177 = icmp eq i32 %conv176, %145
  br i1 %cmp177, label %if.then.179, label %if.end.181

if.then.179:                                      ; preds = %if.else.175
  %146 = load i32, i32* %brackets, align 4
  %inc180 = add nsw i32 %146, 1
  store i32 %inc180, i32* %brackets, align 4
  br label %if.end.181

if.end.181:                                       ; preds = %if.then.179, %if.else.175
  br label %if.end.182

if.end.182:                                       ; preds = %if.end.181, %if.end.174
  %147 = load i8*, i8** %t148, align 8
  %148 = load i8, i8* %147, align 1
  %149 = load i8*, i8** %w, align 8
  store i8 %148, i8* %149, align 1
  br label %for.inc.183

for.inc.183:                                      ; preds = %if.end.182
  %150 = load i8*, i8** %w, align 8
  %incdec.ptr184 = getelementptr inbounds i8, i8* %150, i32 1
  store i8* %incdec.ptr184, i8** %w, align 8
  %151 = load i8*, i8** %t148, align 8
  %incdec.ptr185 = getelementptr inbounds i8, i8* %151, i32 1
  store i8* %incdec.ptr185, i8** %t148, align 8
  br label %for.cond.155

for.end.186:                                      ; preds = %for.cond.155
  %152 = load i8*, i8** %w, align 8
  %153 = load i8*, i8** %t148, align 8
  %cmp187 = icmp ult i8* %152, %153
  br i1 %cmp187, label %if.then.189, label %if.end.199

if.then.189:                                      ; preds = %for.end.186
  %154 = load i8, i8* %term, align 1
  %155 = load i8*, i8** %w, align 8
  %incdec.ptr190 = getelementptr inbounds i8, i8* %155, i32 1
  store i8* %incdec.ptr190, i8** %w, align 8
  store i8 %154, i8* %155, align 1
  %156 = load i8*, i8** %w, align 8
  store i8 0, i8* %156, align 1
  %157 = load i8*, i8** %w, align 8
  %158 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any192 = getelementptr inbounds %struct.sv, %struct.sv* %158, i32 0, i32 0
  %159 = load i8*, i8** %sv_any192, align 8
  %160 = bitcast i8* %159 to %struct.xpv*
  %xpv_pv193 = getelementptr inbounds %struct.xpv, %struct.xpv* %160, i32 0, i32 0
  %161 = load i8*, i8** %xpv_pv193, align 8
  %sub.ptr.lhs.cast194 = ptrtoint i8* %157 to i64
  %sub.ptr.rhs.cast195 = ptrtoint i8* %161 to i64
  %sub.ptr.sub196 = sub i64 %sub.ptr.lhs.cast194, %sub.ptr.rhs.cast195
  %162 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any197 = getelementptr inbounds %struct.sv, %struct.sv* %162, i32 0, i32 0
  %163 = load i8*, i8** %sv_any197, align 8
  %164 = bitcast i8* %163 to %struct.xpv*
  %xpv_cur198 = getelementptr inbounds %struct.xpv, %struct.xpv* %164, i32 0, i32 1
  store i64 %sub.ptr.sub196, i64* %xpv_cur198, align 8
  store i64 %sub.ptr.sub196, i64* %tmp191
  %165 = load i64, i64* %tmp191
  br label %if.end.199

if.end.199:                                       ; preds = %if.then.189, %for.end.186
  %166 = load i8*, i8** %w, align 8
  store i8* %166, i8** %last, align 8
  %167 = load i32, i32* %brackets, align 4
  %dec = add nsw i32 %167, -1
  store i32 %dec, i32* %brackets, align 4
  %cmp200 = icmp sle i32 %dec, 0
  br i1 %cmp200, label %if.then.202, label %if.end.203

if.then.202:                                      ; preds = %if.end.199
  store i8 0, i8* %cont, align 1
  br label %if.end.203

if.end.203:                                       ; preds = %if.then.202, %if.end.199
  br label %if.end.204

if.end.204:                                       ; preds = %if.end.203, %if.then.145
  br label %if.end.205

if.end.205:                                       ; preds = %if.end.204
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %168 = load i32, i32* %keep_delims.addr, align 4
  %tobool206 = icmp ne i32 %168, 0
  br i1 %tobool206, label %if.end.219, label %if.then.207

if.then.207:                                      ; preds = %while.end
  %169 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any209 = getelementptr inbounds %struct.sv, %struct.sv* %169, i32 0, i32 0
  %170 = load i8*, i8** %sv_any209, align 8
  %171 = bitcast i8* %170 to %struct.xpv*
  %xpv_cur210 = getelementptr inbounds %struct.xpv, %struct.xpv* %171, i32 0, i32 1
  %172 = load i64, i64* %xpv_cur210, align 8
  %sub211 = sub i64 %172, 1
  %173 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any212 = getelementptr inbounds %struct.sv, %struct.sv* %173, i32 0, i32 0
  %174 = load i8*, i8** %sv_any212, align 8
  %175 = bitcast i8* %174 to %struct.xpv*
  %xpv_cur213 = getelementptr inbounds %struct.xpv, %struct.xpv* %175, i32 0, i32 1
  store i64 %sub211, i64* %xpv_cur213, align 8
  store i64 %sub211, i64* %tmp208
  %176 = load i64, i64* %tmp208
  %177 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any214 = getelementptr inbounds %struct.sv, %struct.sv* %177, i32 0, i32 0
  %178 = load i8*, i8** %sv_any214, align 8
  %179 = bitcast i8* %178 to %struct.xpv*
  %xpv_pv215 = getelementptr inbounds %struct.xpv, %struct.xpv* %179, i32 0, i32 0
  %180 = load i8*, i8** %xpv_pv215, align 8
  %181 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any216 = getelementptr inbounds %struct.sv, %struct.sv* %181, i32 0, i32 0
  %182 = load i8*, i8** %sv_any216, align 8
  %183 = bitcast i8* %182 to %struct.xpv*
  %xpv_cur217 = getelementptr inbounds %struct.xpv, %struct.xpv* %183, i32 0, i32 1
  %184 = load i64, i64* %xpv_cur217, align 8
  %add.ptr218 = getelementptr inbounds i8, i8* %180, i64 %184
  store i8 0, i8* %add.ptr218, align 1
  br label %if.end.219

if.end.219:                                       ; preds = %if.then.207, %while.end
  br label %for.end.544

if.end.220:                                       ; preds = %lor.lhs.false.73, %land.lhs.true.68, %for.cond
  %185 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any221 = getelementptr inbounds %struct.sv, %struct.sv* %185, i32 0, i32 0
  %186 = load i8*, i8** %sv_any221, align 8
  %187 = bitcast i8* %186 to %struct.xpv*
  %xpv_len = getelementptr inbounds %struct.xpv, %struct.xpv* %187, i32 0, i32 2
  %188 = load i64, i64* %xpv_len, align 8
  %189 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any222 = getelementptr inbounds %struct.sv, %struct.sv* %189, i32 0, i32 0
  %190 = load i8*, i8** %sv_any222, align 8
  %191 = bitcast i8* %190 to %struct.xpv*
  %xpv_cur223 = getelementptr inbounds %struct.xpv, %struct.xpv* %191, i32 0, i32 1
  %192 = load i64, i64* %xpv_cur223, align 8
  %193 = load i8*, i8** @PL_bufend, align 8
  %194 = load i8*, i8** %s, align 8
  %sub.ptr.lhs.cast224 = ptrtoint i8* %193 to i64
  %sub.ptr.rhs.cast225 = ptrtoint i8* %194 to i64
  %sub.ptr.sub226 = sub i64 %sub.ptr.lhs.cast224, %sub.ptr.rhs.cast225
  %add = add i64 %192, %sub.ptr.sub226
  %add227 = add i64 %add, 1
  %cmp228 = icmp ult i64 %188, %add227
  br i1 %cmp228, label %cond.true.230, label %cond.false.239

cond.true.230:                                    ; preds = %if.end.220
  %195 = load %struct.sv*, %struct.sv** %sv, align 8
  %196 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any231 = getelementptr inbounds %struct.sv, %struct.sv* %196, i32 0, i32 0
  %197 = load i8*, i8** %sv_any231, align 8
  %198 = bitcast i8* %197 to %struct.xpv*
  %xpv_cur232 = getelementptr inbounds %struct.xpv, %struct.xpv* %198, i32 0, i32 1
  %199 = load i64, i64* %xpv_cur232, align 8
  %200 = load i8*, i8** @PL_bufend, align 8
  %201 = load i8*, i8** %s, align 8
  %sub.ptr.lhs.cast233 = ptrtoint i8* %200 to i64
  %sub.ptr.rhs.cast234 = ptrtoint i8* %201 to i64
  %sub.ptr.sub235 = sub i64 %sub.ptr.lhs.cast233, %sub.ptr.rhs.cast234
  %add236 = add i64 %199, %sub.ptr.sub235
  %add237 = add i64 %add236, 1
  %call238 = call i8* @Perl_sv_grow(%struct.sv* %195, i64 %add237)
  br label %cond.end.242

cond.false.239:                                   ; preds = %if.end.220
  %202 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any240 = getelementptr inbounds %struct.sv, %struct.sv* %202, i32 0, i32 0
  %203 = load i8*, i8** %sv_any240, align 8
  %204 = bitcast i8* %203 to %struct.xpv*
  %xpv_pv241 = getelementptr inbounds %struct.xpv, %struct.xpv* %204, i32 0, i32 0
  %205 = load i8*, i8** %xpv_pv241, align 8
  br label %cond.end.242

cond.end.242:                                     ; preds = %cond.false.239, %cond.true.230
  %cond243 = phi i8* [ %call238, %cond.true.230 ], [ %205, %cond.false.239 ]
  %206 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any244 = getelementptr inbounds %struct.sv, %struct.sv* %206, i32 0, i32 0
  %207 = load i8*, i8** %sv_any244, align 8
  %208 = bitcast i8* %207 to %struct.xpv*
  %xpv_pv245 = getelementptr inbounds %struct.xpv, %struct.xpv* %208, i32 0, i32 0
  %209 = load i8*, i8** %xpv_pv245, align 8
  %210 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any246 = getelementptr inbounds %struct.sv, %struct.sv* %210, i32 0, i32 0
  %211 = load i8*, i8** %sv_any246, align 8
  %212 = bitcast i8* %211 to %struct.xpv*
  %xpv_cur247 = getelementptr inbounds %struct.xpv, %struct.xpv* %212, i32 0, i32 1
  %213 = load i64, i64* %xpv_cur247, align 8
  %add.ptr248 = getelementptr inbounds i8, i8* %209, i64 %213
  store i8* %add.ptr248, i8** %to, align 8
  %214 = load i32, i32* @PL_multi_open, align 4
  %215 = load i32, i32* @PL_multi_close, align 4
  %cmp249 = icmp eq i32 %214, %215
  br i1 %cmp249, label %if.then.251, label %if.else.337

if.then.251:                                      ; preds = %cond.end.242
  br label %for.cond.252

for.cond.252:                                     ; preds = %for.inc.333, %if.then.251
  %216 = load i8*, i8** %s, align 8
  %217 = load i8*, i8** @PL_bufend, align 8
  %cmp253 = icmp ult i8* %216, %217
  br i1 %cmp253, label %for.body.255, label %for.end.336

for.body.255:                                     ; preds = %for.cond.252
  %218 = load i8*, i8** %s, align 8
  %219 = load i8, i8* %218, align 1
  %conv256 = sext i8 %219 to i32
  %cmp257 = icmp eq i32 %conv256, 10
  br i1 %cmp257, label %land.lhs.true.259, label %if.end.264

land.lhs.true.259:                                ; preds = %for.body.255
  %220 = load volatile %struct._PerlIO**, %struct._PerlIO*** @PL_rsfp, align 8
  %tobool260 = icmp ne %struct._PerlIO** %220, null
  br i1 %tobool260, label %if.end.264, label %if.then.261

if.then.261:                                      ; preds = %land.lhs.true.259
  %221 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line262 = getelementptr inbounds %struct.cop, %struct.cop* %221, i32 0, i32 13
  %222 = load i32, i32* %cop_line262, align 4
  %inc263 = add i32 %222, 1
  store i32 %inc263, i32* %cop_line262, align 4
  br label %if.end.264

if.end.264:                                       ; preds = %if.then.261, %land.lhs.true.259, %for.body.255
  %223 = load i8*, i8** %s, align 8
  %224 = load i8, i8* %223, align 1
  %conv265 = sext i8 %224 to i32
  %cmp266 = icmp eq i32 %conv265, 92
  br i1 %cmp266, label %land.lhs.true.268, label %if.else.290

land.lhs.true.268:                                ; preds = %if.end.264
  %225 = load i8*, i8** %s, align 8
  %add.ptr269 = getelementptr inbounds i8, i8* %225, i64 1
  %226 = load i8*, i8** @PL_bufend, align 8
  %cmp270 = icmp ult i8* %add.ptr269, %226
  br i1 %cmp270, label %land.lhs.true.272, label %if.else.290

land.lhs.true.272:                                ; preds = %land.lhs.true.268
  %227 = load i8, i8* %term, align 1
  %conv273 = sext i8 %227 to i32
  %cmp274 = icmp ne i32 %conv273, 92
  br i1 %cmp274, label %if.then.276, label %if.else.290

if.then.276:                                      ; preds = %land.lhs.true.272
  %228 = load i32, i32* %keep_quoted.addr, align 4
  %tobool277 = icmp ne i32 %228, 0
  br i1 %tobool277, label %if.else.286, label %land.lhs.true.278

land.lhs.true.278:                                ; preds = %if.then.276
  %229 = load i8*, i8** %s, align 8
  %arrayidx279 = getelementptr inbounds i8, i8* %229, i64 1
  %230 = load i8, i8* %arrayidx279, align 1
  %conv280 = sext i8 %230 to i32
  %231 = load i8, i8* %term, align 1
  %conv281 = sext i8 %231 to i32
  %cmp282 = icmp eq i32 %conv280, %conv281
  br i1 %cmp282, label %if.then.284, label %if.else.286

if.then.284:                                      ; preds = %land.lhs.true.278
  %232 = load i8*, i8** %s, align 8
  %incdec.ptr285 = getelementptr inbounds i8, i8* %232, i32 1
  store i8* %incdec.ptr285, i8** %s, align 8
  br label %if.end.289

if.else.286:                                      ; preds = %land.lhs.true.278, %if.then.276
  %233 = load i8*, i8** %s, align 8
  %incdec.ptr287 = getelementptr inbounds i8, i8* %233, i32 1
  store i8* %incdec.ptr287, i8** %s, align 8
  %234 = load i8, i8* %233, align 1
  %235 = load i8*, i8** %to, align 8
  %incdec.ptr288 = getelementptr inbounds i8, i8* %235, i32 1
  store i8* %incdec.ptr288, i8** %to, align 8
  store i8 %234, i8* %235, align 1
  br label %if.end.289

if.end.289:                                       ; preds = %if.else.286, %if.then.284
  br label %if.end.332

if.else.290:                                      ; preds = %land.lhs.true.272, %land.lhs.true.268, %if.end.264
  %236 = load i8*, i8** %s, align 8
  %237 = load i8, i8* %236, align 1
  %conv291 = sext i8 %237 to i32
  %238 = load i8, i8* %term, align 1
  %conv292 = sext i8 %238 to i32
  %cmp293 = icmp eq i32 %conv291, %conv292
  br i1 %cmp293, label %if.then.295, label %if.else.309

if.then.295:                                      ; preds = %if.else.290
  %239 = load i64, i64* %termlen, align 8
  %cmp296 = icmp eq i64 %239, 1
  br i1 %cmp296, label %if.then.298, label %if.end.299

if.then.298:                                      ; preds = %if.then.295
  br label %for.end.336

if.end.299:                                       ; preds = %if.then.295
  %240 = load i8*, i8** %s, align 8
  %241 = load i64, i64* %termlen, align 8
  %add.ptr300 = getelementptr inbounds i8, i8* %240, i64 %241
  %242 = load i8*, i8** @PL_bufend, align 8
  %cmp301 = icmp ule i8* %add.ptr300, %242
  br i1 %cmp301, label %land.lhs.true.303, label %if.end.308

land.lhs.true.303:                                ; preds = %if.end.299
  %243 = load i8*, i8** %s, align 8
  %arraydecay304 = getelementptr inbounds [13 x i8], [13 x i8]* %termstr, i32 0, i32 0
  %244 = load i64, i64* %termlen, align 8
  %call305 = call i32 @memcmp(i8* %243, i8* %arraydecay304, i64 %244)
  %tobool306 = icmp ne i32 %call305, 0
  br i1 %tobool306, label %if.end.308, label %if.then.307

if.then.307:                                      ; preds = %land.lhs.true.303
  br label %for.end.336

if.end.308:                                       ; preds = %land.lhs.true.303, %if.end.299
  br label %if.end.331

if.else.309:                                      ; preds = %if.else.290
  %245 = load i8, i8* %has_utf8, align 1
  %tobool310 = icmp ne i8 %245, 0
  br i1 %tobool310, label %if.end.330, label %land.lhs.true.311

land.lhs.true.311:                                ; preds = %if.else.309
  %246 = load i8*, i8** %s, align 8
  %247 = load i8, i8* %246, align 1
  %conv312 = zext i8 %247 to i64
  %cmp313 = icmp ult i64 %conv312, 128
  br i1 %cmp313, label %if.end.330, label %land.lhs.true.315

land.lhs.true.315:                                ; preds = %land.lhs.true.311
  %248 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %tobool316 = icmp ne %struct.sv* %248, null
  br i1 %tobool316, label %land.lhs.true.317, label %lor.lhs.false.326

land.lhs.true.317:                                ; preds = %land.lhs.true.315
  %249 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_flags318 = getelementptr inbounds %struct.sv, %struct.sv* %249, i32 0, i32 2
  %250 = load i32, i32* %sv_flags318, align 4
  %and319 = and i32 %250, 536870912
  %tobool320 = icmp ne i32 %and319, 0
  br i1 %tobool320, label %land.lhs.true.321, label %lor.lhs.false.326

land.lhs.true.321:                                ; preds = %land.lhs.true.317
  %251 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private322 = getelementptr inbounds %struct.cop, %struct.cop* %251, i32 0, i32 7
  %252 = load i8, i8* %op_private322, align 1
  %conv323 = zext i8 %252 to i32
  %and324 = and i32 %conv323, 8
  %tobool325 = icmp ne i32 %and324, 0
  br i1 %tobool325, label %lor.lhs.false.326, label %if.then.329

lor.lhs.false.326:                                ; preds = %land.lhs.true.321, %land.lhs.true.317, %land.lhs.true.315
  %253 = load i32, i32* @PL_hints, align 4
  %and327 = and i32 %253, 8388608
  %tobool328 = icmp ne i32 %and327, 0
  br i1 %tobool328, label %if.then.329, label %if.end.330

if.then.329:                                      ; preds = %lor.lhs.false.326, %land.lhs.true.321
  store i8 1, i8* %has_utf8, align 1
  br label %if.end.330

if.end.330:                                       ; preds = %if.then.329, %lor.lhs.false.326, %land.lhs.true.311, %if.else.309
  br label %if.end.331

if.end.331:                                       ; preds = %if.end.330, %if.end.308
  br label %if.end.332

if.end.332:                                       ; preds = %if.end.331, %if.end.289
  %254 = load i8*, i8** %s, align 8
  %255 = load i8, i8* %254, align 1
  %256 = load i8*, i8** %to, align 8
  store i8 %255, i8* %256, align 1
  br label %for.inc.333

for.inc.333:                                      ; preds = %if.end.332
  %257 = load i8*, i8** %s, align 8
  %incdec.ptr334 = getelementptr inbounds i8, i8* %257, i32 1
  store i8* %incdec.ptr334, i8** %s, align 8
  %258 = load i8*, i8** %to, align 8
  %incdec.ptr335 = getelementptr inbounds i8, i8* %258, i32 1
  store i8* %incdec.ptr335, i8** %to, align 8
  br label %for.cond.252

for.end.336:                                      ; preds = %if.then.307, %if.then.298, %for.cond.252
  br label %if.end.420

if.else.337:                                      ; preds = %cond.end.242
  br label %for.cond.338

for.cond.338:                                     ; preds = %for.inc.416, %if.else.337
  %259 = load i8*, i8** %s, align 8
  %260 = load i8*, i8** @PL_bufend, align 8
  %cmp339 = icmp ult i8* %259, %260
  br i1 %cmp339, label %for.body.341, label %for.end.419

for.body.341:                                     ; preds = %for.cond.338
  %261 = load i8*, i8** %s, align 8
  %262 = load i8, i8* %261, align 1
  %conv342 = sext i8 %262 to i32
  %cmp343 = icmp eq i32 %conv342, 10
  br i1 %cmp343, label %land.lhs.true.345, label %if.end.350

land.lhs.true.345:                                ; preds = %for.body.341
  %263 = load volatile %struct._PerlIO**, %struct._PerlIO*** @PL_rsfp, align 8
  %tobool346 = icmp ne %struct._PerlIO** %263, null
  br i1 %tobool346, label %if.end.350, label %if.then.347

if.then.347:                                      ; preds = %land.lhs.true.345
  %264 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line348 = getelementptr inbounds %struct.cop, %struct.cop* %264, i32 0, i32 13
  %265 = load i32, i32* %cop_line348, align 4
  %inc349 = add i32 %265, 1
  store i32 %inc349, i32* %cop_line348, align 4
  br label %if.end.350

if.end.350:                                       ; preds = %if.then.347, %land.lhs.true.345, %for.body.341
  %266 = load i8*, i8** %s, align 8
  %267 = load i8, i8* %266, align 1
  %conv351 = sext i8 %267 to i32
  %cmp352 = icmp eq i32 %conv351, 92
  br i1 %cmp352, label %land.lhs.true.354, label %if.else.376

land.lhs.true.354:                                ; preds = %if.end.350
  %268 = load i8*, i8** %s, align 8
  %add.ptr355 = getelementptr inbounds i8, i8* %268, i64 1
  %269 = load i8*, i8** @PL_bufend, align 8
  %cmp356 = icmp ult i8* %add.ptr355, %269
  br i1 %cmp356, label %if.then.358, label %if.else.376

if.then.358:                                      ; preds = %land.lhs.true.354
  %270 = load i32, i32* %keep_quoted.addr, align 4
  %tobool359 = icmp ne i32 %270, 0
  br i1 %tobool359, label %if.else.372, label %land.lhs.true.360

land.lhs.true.360:                                ; preds = %if.then.358
  %271 = load i8*, i8** %s, align 8
  %arrayidx361 = getelementptr inbounds i8, i8* %271, i64 1
  %272 = load i8, i8* %arrayidx361, align 1
  %conv362 = sext i8 %272 to i32
  %273 = load i32, i32* @PL_multi_open, align 4
  %cmp363 = icmp eq i32 %conv362, %273
  br i1 %cmp363, label %if.then.370, label %lor.lhs.false.365

lor.lhs.false.365:                                ; preds = %land.lhs.true.360
  %274 = load i8*, i8** %s, align 8
  %arrayidx366 = getelementptr inbounds i8, i8* %274, i64 1
  %275 = load i8, i8* %arrayidx366, align 1
  %conv367 = sext i8 %275 to i32
  %276 = load i32, i32* @PL_multi_close, align 4
  %cmp368 = icmp eq i32 %conv367, %276
  br i1 %cmp368, label %if.then.370, label %if.else.372

if.then.370:                                      ; preds = %lor.lhs.false.365, %land.lhs.true.360
  %277 = load i8*, i8** %s, align 8
  %incdec.ptr371 = getelementptr inbounds i8, i8* %277, i32 1
  store i8* %incdec.ptr371, i8** %s, align 8
  br label %if.end.375

if.else.372:                                      ; preds = %lor.lhs.false.365, %if.then.358
  %278 = load i8*, i8** %s, align 8
  %incdec.ptr373 = getelementptr inbounds i8, i8* %278, i32 1
  store i8* %incdec.ptr373, i8** %s, align 8
  %279 = load i8, i8* %278, align 1
  %280 = load i8*, i8** %to, align 8
  %incdec.ptr374 = getelementptr inbounds i8, i8* %280, i32 1
  store i8* %incdec.ptr374, i8** %to, align 8
  store i8 %279, i8* %280, align 1
  br label %if.end.375

if.end.375:                                       ; preds = %if.else.372, %if.then.370
  br label %if.end.415

if.else.376:                                      ; preds = %land.lhs.true.354, %if.end.350
  %281 = load i8*, i8** %s, align 8
  %282 = load i8, i8* %281, align 1
  %conv377 = sext i8 %282 to i32
  %283 = load i32, i32* @PL_multi_close, align 4
  %cmp378 = icmp eq i32 %conv377, %283
  br i1 %cmp378, label %land.lhs.true.380, label %if.else.385

land.lhs.true.380:                                ; preds = %if.else.376
  %284 = load i32, i32* %brackets, align 4
  %dec381 = add nsw i32 %284, -1
  store i32 %dec381, i32* %brackets, align 4
  %cmp382 = icmp sle i32 %dec381, 0
  br i1 %cmp382, label %if.then.384, label %if.else.385

if.then.384:                                      ; preds = %land.lhs.true.380
  br label %for.end.419

if.else.385:                                      ; preds = %land.lhs.true.380, %if.else.376
  %285 = load i8*, i8** %s, align 8
  %286 = load i8, i8* %285, align 1
  %conv386 = sext i8 %286 to i32
  %287 = load i32, i32* @PL_multi_open, align 4
  %cmp387 = icmp eq i32 %conv386, %287
  br i1 %cmp387, label %if.then.389, label %if.else.391

if.then.389:                                      ; preds = %if.else.385
  %288 = load i32, i32* %brackets, align 4
  %inc390 = add nsw i32 %288, 1
  store i32 %inc390, i32* %brackets, align 4
  br label %if.end.413

if.else.391:                                      ; preds = %if.else.385
  %289 = load i8, i8* %has_utf8, align 1
  %tobool392 = icmp ne i8 %289, 0
  br i1 %tobool392, label %if.end.412, label %land.lhs.true.393

land.lhs.true.393:                                ; preds = %if.else.391
  %290 = load i8*, i8** %s, align 8
  %291 = load i8, i8* %290, align 1
  %conv394 = zext i8 %291 to i64
  %cmp395 = icmp ult i64 %conv394, 128
  br i1 %cmp395, label %if.end.412, label %land.lhs.true.397

land.lhs.true.397:                                ; preds = %land.lhs.true.393
  %292 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %tobool398 = icmp ne %struct.sv* %292, null
  br i1 %tobool398, label %land.lhs.true.399, label %lor.lhs.false.408

land.lhs.true.399:                                ; preds = %land.lhs.true.397
  %293 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_flags400 = getelementptr inbounds %struct.sv, %struct.sv* %293, i32 0, i32 2
  %294 = load i32, i32* %sv_flags400, align 4
  %and401 = and i32 %294, 536870912
  %tobool402 = icmp ne i32 %and401, 0
  br i1 %tobool402, label %land.lhs.true.403, label %lor.lhs.false.408

land.lhs.true.403:                                ; preds = %land.lhs.true.399
  %295 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private404 = getelementptr inbounds %struct.cop, %struct.cop* %295, i32 0, i32 7
  %296 = load i8, i8* %op_private404, align 1
  %conv405 = zext i8 %296 to i32
  %and406 = and i32 %conv405, 8
  %tobool407 = icmp ne i32 %and406, 0
  br i1 %tobool407, label %lor.lhs.false.408, label %if.then.411

lor.lhs.false.408:                                ; preds = %land.lhs.true.403, %land.lhs.true.399, %land.lhs.true.397
  %297 = load i32, i32* @PL_hints, align 4
  %and409 = and i32 %297, 8388608
  %tobool410 = icmp ne i32 %and409, 0
  br i1 %tobool410, label %if.then.411, label %if.end.412

if.then.411:                                      ; preds = %lor.lhs.false.408, %land.lhs.true.403
  store i8 1, i8* %has_utf8, align 1
  br label %if.end.412

if.end.412:                                       ; preds = %if.then.411, %lor.lhs.false.408, %land.lhs.true.393, %if.else.391
  br label %if.end.413

if.end.413:                                       ; preds = %if.end.412, %if.then.389
  br label %if.end.414

if.end.414:                                       ; preds = %if.end.413
  br label %if.end.415

if.end.415:                                       ; preds = %if.end.414, %if.end.375
  %298 = load i8*, i8** %s, align 8
  %299 = load i8, i8* %298, align 1
  %300 = load i8*, i8** %to, align 8
  store i8 %299, i8* %300, align 1
  br label %for.inc.416

for.inc.416:                                      ; preds = %if.end.415
  %301 = load i8*, i8** %s, align 8
  %incdec.ptr417 = getelementptr inbounds i8, i8* %301, i32 1
  store i8* %incdec.ptr417, i8** %s, align 8
  %302 = load i8*, i8** %to, align 8
  %incdec.ptr418 = getelementptr inbounds i8, i8* %302, i32 1
  store i8* %incdec.ptr418, i8** %to, align 8
  br label %for.cond.338

for.end.419:                                      ; preds = %if.then.384, %for.cond.338
  br label %if.end.420

if.end.420:                                       ; preds = %for.end.419, %for.end.336
  %303 = load i8*, i8** %to, align 8
  store i8 0, i8* %303, align 1
  %304 = load i8*, i8** %to, align 8
  %305 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any422 = getelementptr inbounds %struct.sv, %struct.sv* %305, i32 0, i32 0
  %306 = load i8*, i8** %sv_any422, align 8
  %307 = bitcast i8* %306 to %struct.xpv*
  %xpv_pv423 = getelementptr inbounds %struct.xpv, %struct.xpv* %307, i32 0, i32 0
  %308 = load i8*, i8** %xpv_pv423, align 8
  %sub.ptr.lhs.cast424 = ptrtoint i8* %304 to i64
  %sub.ptr.rhs.cast425 = ptrtoint i8* %308 to i64
  %sub.ptr.sub426 = sub i64 %sub.ptr.lhs.cast424, %sub.ptr.rhs.cast425
  %309 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any427 = getelementptr inbounds %struct.sv, %struct.sv* %309, i32 0, i32 0
  %310 = load i8*, i8** %sv_any427, align 8
  %311 = bitcast i8* %310 to %struct.xpv*
  %xpv_cur428 = getelementptr inbounds %struct.xpv, %struct.xpv* %311, i32 0, i32 1
  store i64 %sub.ptr.sub426, i64* %xpv_cur428, align 8
  store i64 %sub.ptr.sub426, i64* %tmp421
  %312 = load i64, i64* %tmp421
  %313 = load i8*, i8** %s, align 8
  %314 = load i8*, i8** @PL_bufend, align 8
  %cmp429 = icmp ult i8* %313, %314
  br i1 %cmp429, label %if.then.431, label %if.end.432

if.then.431:                                      ; preds = %if.end.420
  br label %for.end.544

if.end.432:                                       ; preds = %if.end.420
  %315 = load i8*, i8** %to, align 8
  %316 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any433 = getelementptr inbounds %struct.sv, %struct.sv* %316, i32 0, i32 0
  %317 = load i8*, i8** %sv_any433, align 8
  %318 = bitcast i8* %317 to %struct.xpv*
  %xpv_pv434 = getelementptr inbounds %struct.xpv, %struct.xpv* %318, i32 0, i32 0
  %319 = load i8*, i8** %xpv_pv434, align 8
  %sub.ptr.lhs.cast435 = ptrtoint i8* %315 to i64
  %sub.ptr.rhs.cast436 = ptrtoint i8* %319 to i64
  %sub.ptr.sub437 = sub i64 %sub.ptr.lhs.cast435, %sub.ptr.rhs.cast436
  %cmp438 = icmp sge i64 %sub.ptr.sub437, 2
  br i1 %cmp438, label %if.then.440, label %if.else.480

if.then.440:                                      ; preds = %if.end.432
  %320 = load i8*, i8** %to, align 8
  %arrayidx441 = getelementptr inbounds i8, i8* %320, i64 -2
  %321 = load i8, i8* %arrayidx441, align 1
  %conv442 = sext i8 %321 to i32
  %cmp443 = icmp eq i32 %conv442, 13
  br i1 %cmp443, label %land.lhs.true.445, label %lor.lhs.false.450

land.lhs.true.445:                                ; preds = %if.then.440
  %322 = load i8*, i8** %to, align 8
  %arrayidx446 = getelementptr inbounds i8, i8* %322, i64 -1
  %323 = load i8, i8* %arrayidx446, align 1
  %conv447 = sext i8 %323 to i32
  %cmp448 = icmp eq i32 %conv447, 10
  br i1 %cmp448, label %if.then.460, label %lor.lhs.false.450

lor.lhs.false.450:                                ; preds = %land.lhs.true.445, %if.then.440
  %324 = load i8*, i8** %to, align 8
  %arrayidx451 = getelementptr inbounds i8, i8* %324, i64 -2
  %325 = load i8, i8* %arrayidx451, align 1
  %conv452 = sext i8 %325 to i32
  %cmp453 = icmp eq i32 %conv452, 10
  br i1 %cmp453, label %land.lhs.true.455, label %if.else.471

land.lhs.true.455:                                ; preds = %lor.lhs.false.450
  %326 = load i8*, i8** %to, align 8
  %arrayidx456 = getelementptr inbounds i8, i8* %326, i64 -1
  %327 = load i8, i8* %arrayidx456, align 1
  %conv457 = sext i8 %327 to i32
  %cmp458 = icmp eq i32 %conv457, 13
  br i1 %cmp458, label %if.then.460, label %if.else.471

if.then.460:                                      ; preds = %land.lhs.true.455, %land.lhs.true.445
  %328 = load i8*, i8** %to, align 8
  %arrayidx461 = getelementptr inbounds i8, i8* %328, i64 -2
  store i8 10, i8* %arrayidx461, align 1
  %329 = load i8*, i8** %to, align 8
  %incdec.ptr462 = getelementptr inbounds i8, i8* %329, i32 -1
  store i8* %incdec.ptr462, i8** %to, align 8
  %330 = load i8*, i8** %to, align 8
  %331 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any464 = getelementptr inbounds %struct.sv, %struct.sv* %331, i32 0, i32 0
  %332 = load i8*, i8** %sv_any464, align 8
  %333 = bitcast i8* %332 to %struct.xpv*
  %xpv_pv465 = getelementptr inbounds %struct.xpv, %struct.xpv* %333, i32 0, i32 0
  %334 = load i8*, i8** %xpv_pv465, align 8
  %sub.ptr.lhs.cast466 = ptrtoint i8* %330 to i64
  %sub.ptr.rhs.cast467 = ptrtoint i8* %334 to i64
  %sub.ptr.sub468 = sub i64 %sub.ptr.lhs.cast466, %sub.ptr.rhs.cast467
  %335 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any469 = getelementptr inbounds %struct.sv, %struct.sv* %335, i32 0, i32 0
  %336 = load i8*, i8** %sv_any469, align 8
  %337 = bitcast i8* %336 to %struct.xpv*
  %xpv_cur470 = getelementptr inbounds %struct.xpv, %struct.xpv* %337, i32 0, i32 1
  store i64 %sub.ptr.sub468, i64* %xpv_cur470, align 8
  store i64 %sub.ptr.sub468, i64* %tmp463
  %338 = load i64, i64* %tmp463
  br label %if.end.479

if.else.471:                                      ; preds = %land.lhs.true.455, %lor.lhs.false.450
  %339 = load i8*, i8** %to, align 8
  %arrayidx472 = getelementptr inbounds i8, i8* %339, i64 -1
  %340 = load i8, i8* %arrayidx472, align 1
  %conv473 = sext i8 %340 to i32
  %cmp474 = icmp eq i32 %conv473, 13
  br i1 %cmp474, label %if.then.476, label %if.end.478

if.then.476:                                      ; preds = %if.else.471
  %341 = load i8*, i8** %to, align 8
  %arrayidx477 = getelementptr inbounds i8, i8* %341, i64 -1
  store i8 10, i8* %arrayidx477, align 1
  br label %if.end.478

if.end.478:                                       ; preds = %if.then.476, %if.else.471
  br label %if.end.479

if.end.479:                                       ; preds = %if.end.478, %if.then.460
  br label %if.end.496

if.else.480:                                      ; preds = %if.end.432
  %342 = load i8*, i8** %to, align 8
  %343 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any481 = getelementptr inbounds %struct.sv, %struct.sv* %343, i32 0, i32 0
  %344 = load i8*, i8** %sv_any481, align 8
  %345 = bitcast i8* %344 to %struct.xpv*
  %xpv_pv482 = getelementptr inbounds %struct.xpv, %struct.xpv* %345, i32 0, i32 0
  %346 = load i8*, i8** %xpv_pv482, align 8
  %sub.ptr.lhs.cast483 = ptrtoint i8* %342 to i64
  %sub.ptr.rhs.cast484 = ptrtoint i8* %346 to i64
  %sub.ptr.sub485 = sub i64 %sub.ptr.lhs.cast483, %sub.ptr.rhs.cast484
  %cmp486 = icmp eq i64 %sub.ptr.sub485, 1
  br i1 %cmp486, label %land.lhs.true.488, label %if.end.495

land.lhs.true.488:                                ; preds = %if.else.480
  %347 = load i8*, i8** %to, align 8
  %arrayidx489 = getelementptr inbounds i8, i8* %347, i64 -1
  %348 = load i8, i8* %arrayidx489, align 1
  %conv490 = sext i8 %348 to i32
  %cmp491 = icmp eq i32 %conv490, 13
  br i1 %cmp491, label %if.then.493, label %if.end.495

if.then.493:                                      ; preds = %land.lhs.true.488
  %349 = load i8*, i8** %to, align 8
  %arrayidx494 = getelementptr inbounds i8, i8* %349, i64 -1
  store i8 10, i8* %arrayidx494, align 1
  br label %if.end.495

if.end.495:                                       ; preds = %if.then.493, %land.lhs.true.488, %if.else.480
  br label %if.end.496

if.end.496:                                       ; preds = %if.end.495, %if.end.479
  br label %read_more_line

read_more_line:                                   ; preds = %if.end.496, %if.then.103
  %350 = load volatile %struct._PerlIO**, %struct._PerlIO*** @PL_rsfp, align 8
  %tobool497 = icmp ne %struct._PerlIO** %350, null
  br i1 %tobool497, label %lor.lhs.false.498, label %if.then.501

lor.lhs.false.498:                                ; preds = %read_more_line
  %351 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %352 = load volatile %struct._PerlIO**, %struct._PerlIO*** @PL_rsfp, align 8
  %call499 = call i8* @S_filter_gets(%struct.sv* %351, %struct._PerlIO** %352, i64 0)
  store i8* %call499, i8** @PL_linestart, align 8
  store i8* %call499, i8** %s, align 8
  store i8* %call499, i8** @PL_oldbufptr, align 8
  store i8* %call499, i8** @PL_oldoldbufptr, align 8
  %tobool500 = icmp ne i8* %call499, null
  br i1 %tobool500, label %if.end.503, label %if.then.501

if.then.501:                                      ; preds = %lor.lhs.false.498, %read_more_line
  %353 = load %struct.sv*, %struct.sv** %sv, align 8
  call void @Perl_sv_free(%struct.sv* %353)
  %354 = load i32, i32* @PL_multi_start, align 4
  %355 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line502 = getelementptr inbounds %struct.cop, %struct.cop* %355, i32 0, i32 13
  store i32 %354, i32* %cop_line502, align 4
  store i8* null, i8** %retval
  br label %return

if.end.503:                                       ; preds = %lor.lhs.false.498
  %356 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line504 = getelementptr inbounds %struct.cop, %struct.cop* %356, i32 0, i32 13
  %357 = load i32, i32* %cop_line504, align 4
  %inc505 = add i32 %357, 1
  store i32 %inc505, i32* %cop_line504, align 4
  %358 = load i32, i32* @PL_perldb, align 4
  %tobool506 = icmp ne i32 %358, 0
  br i1 %tobool506, label %land.lhs.true.507, label %if.end.538

land.lhs.true.507:                                ; preds = %if.end.503
  %359 = load i32, i32* @PL_perldb, align 4
  %and508 = and i32 %359, 2
  %tobool509 = icmp ne i32 %and508, 0
  br i1 %tobool509, label %land.lhs.true.510, label %if.end.538

land.lhs.true.510:                                ; preds = %land.lhs.true.507
  %360 = load %struct.hv*, %struct.hv** @PL_curstash, align 8
  %361 = load %struct.hv*, %struct.hv** @PL_debstash, align 8
  %cmp511 = icmp ne %struct.hv* %360, %361
  br i1 %cmp511, label %if.then.513, label %if.end.538

if.then.513:                                      ; preds = %land.lhs.true.510
  %call516 = call %struct.sv* @Perl_newSV(i64 0)
  store %struct.sv* %call516, %struct.sv** %sv515, align 8
  %362 = load %struct.sv*, %struct.sv** %sv515, align 8
  %call517 = call signext i8 @Perl_sv_upgrade(%struct.sv* %362, i32 7)
  %363 = load %struct.sv*, %struct.sv** %sv515, align 8
  %364 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  call void @Perl_sv_setsv_flags(%struct.sv* %363, %struct.sv* %364, i32 2)
  %365 = load %struct.sv*, %struct.sv** %sv515, align 8
  %sv_flags518 = getelementptr inbounds %struct.sv, %struct.sv* %365, i32 0, i32 2
  %366 = load i32, i32* %sv_flags518, align 4
  %and519 = and i32 %366, 2097152
  %tobool520 = icmp ne i32 %and519, 0
  br i1 %tobool520, label %land.rhs.521, label %land.end.524

land.rhs.521:                                     ; preds = %if.then.513
  %367 = load %struct.sv*, %struct.sv** %sv515, align 8
  %call522 = call i32 @Perl_sv_backoff(%struct.sv* %367)
  %tobool523 = icmp ne i32 %call522, 0
  br label %land.end.524

land.end.524:                                     ; preds = %land.rhs.521, %if.then.513
  %368 = phi i1 [ false, %if.then.513 ], [ %tobool523, %land.rhs.521 ]
  %land.ext = zext i1 %368 to i32
  %369 = load %struct.sv*, %struct.sv** %sv515, align 8
  %sv_flags525 = getelementptr inbounds %struct.sv, %struct.sv* %369, i32 0, i32 2
  %370 = load i32, i32* %sv_flags525, align 4
  %or526 = or i32 %370, 16842752
  store i32 %or526, i32* %sv_flags525, align 4
  %371 = load %struct.sv*, %struct.sv** %sv515, align 8
  %sv_any527 = getelementptr inbounds %struct.sv, %struct.sv* %371, i32 0, i32 0
  %372 = load i8*, i8** %sv_any527, align 8
  %373 = bitcast i8* %372 to %struct.xpviv*
  %xiv_iv528 = getelementptr inbounds %struct.xpviv, %struct.xpviv* %373, i32 0, i32 3
  store i64 0, i64* %xiv_iv528, align 8
  %374 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_filegv = getelementptr inbounds %struct.cop, %struct.cop* %374, i32 0, i32 10
  %375 = load %struct.gv*, %struct.gv** %cop_filegv, align 8
  %tobool529 = icmp ne %struct.gv* %375, null
  br i1 %tobool529, label %cond.true.530, label %cond.false.533

cond.true.530:                                    ; preds = %land.end.524
  %376 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_filegv531 = getelementptr inbounds %struct.cop, %struct.cop* %376, i32 0, i32 10
  %377 = load %struct.gv*, %struct.gv** %cop_filegv531, align 8
  %sv_any532 = getelementptr inbounds %struct.gv, %struct.gv* %377, i32 0, i32 0
  %378 = load %struct.xpvgv*, %struct.xpvgv** %sv_any532, align 8
  %xgv_gp = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %378, i32 0, i32 7
  %379 = load %struct.gp*, %struct.gp** %xgv_gp, align 8
  %gp_av = getelementptr inbounds %struct.gp, %struct.gp* %379, i32 0, i32 4
  %380 = load %struct.av*, %struct.av** %gp_av, align 8
  br label %cond.end.534

cond.false.533:                                   ; preds = %land.end.524
  br label %cond.end.534

cond.end.534:                                     ; preds = %cond.false.533, %cond.true.530
  %cond535 = phi %struct.av* [ %380, %cond.true.530 ], [ null, %cond.false.533 ]
  %381 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line536 = getelementptr inbounds %struct.cop, %struct.cop* %381, i32 0, i32 13
  %382 = load i32, i32* %cop_line536, align 4
  %383 = load %struct.sv*, %struct.sv** %sv515, align 8
  %call537 = call %struct.sv** @Perl_av_store(%struct.av* %cond535, i32 %382, %struct.sv* %383)
  br label %if.end.538

if.end.538:                                       ; preds = %cond.end.534, %land.lhs.true.510, %land.lhs.true.507, %if.end.503
  %384 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_any539 = getelementptr inbounds %struct.sv, %struct.sv* %384, i32 0, i32 0
  %385 = load i8*, i8** %sv_any539, align 8
  %386 = bitcast i8* %385 to %struct.xpv*
  %xpv_pv540 = getelementptr inbounds %struct.xpv, %struct.xpv* %386, i32 0, i32 0
  %387 = load i8*, i8** %xpv_pv540, align 8
  %388 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_any541 = getelementptr inbounds %struct.sv, %struct.sv* %388, i32 0, i32 0
  %389 = load i8*, i8** %sv_any541, align 8
  %390 = bitcast i8* %389 to %struct.xpv*
  %xpv_cur542 = getelementptr inbounds %struct.xpv, %struct.xpv* %390, i32 0, i32 1
  %391 = load i64, i64* %xpv_cur542, align 8
  %add.ptr543 = getelementptr inbounds i8, i8* %387, i64 %391
  store i8* %add.ptr543, i8** @PL_bufend, align 8
  store i8* null, i8** @PL_last_uni, align 8
  store i8* null, i8** @PL_last_lop, align 8
  br label %for.cond

for.end.544:                                      ; preds = %if.then.431, %if.end.219
  %392 = load %struct.sv*, %struct.sv** @PL_encoding, align 8
  %tobool545 = icmp ne %struct.sv* %392, null
  br i1 %tobool545, label %lor.lhs.false.546, label %if.then.560

lor.lhs.false.546:                                ; preds = %for.end.544
  %393 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %tobool547 = icmp ne %struct.sv* %393, null
  br i1 %tobool547, label %land.lhs.true.548, label %lor.lhs.false.557

land.lhs.true.548:                                ; preds = %lor.lhs.false.546
  %394 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_flags549 = getelementptr inbounds %struct.sv, %struct.sv* %394, i32 0, i32 2
  %395 = load i32, i32* %sv_flags549, align 4
  %and550 = and i32 %395, 536870912
  %tobool551 = icmp ne i32 %and550, 0
  br i1 %tobool551, label %land.lhs.true.552, label %lor.lhs.false.557

land.lhs.true.552:                                ; preds = %land.lhs.true.548
  %396 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private553 = getelementptr inbounds %struct.cop, %struct.cop* %396, i32 0, i32 7
  %397 = load i8, i8* %op_private553, align 1
  %conv554 = zext i8 %397 to i32
  %and555 = and i32 %conv554, 8
  %tobool556 = icmp ne i32 %and555, 0
  br i1 %tobool556, label %lor.lhs.false.557, label %if.then.560

lor.lhs.false.557:                                ; preds = %land.lhs.true.552, %land.lhs.true.548, %lor.lhs.false.546
  %398 = load i32, i32* @PL_hints, align 4
  %and558 = and i32 %398, 8388608
  %tobool559 = icmp ne i32 %and558, 0
  br i1 %tobool559, label %if.then.560, label %if.end.565

if.then.560:                                      ; preds = %lor.lhs.false.557, %land.lhs.true.552, %for.end.544
  %399 = load i32, i32* %keep_delims.addr, align 4
  %tobool561 = icmp ne i32 %399, 0
  br i1 %tobool561, label %if.then.562, label %if.end.563

if.then.562:                                      ; preds = %if.then.560
  %400 = load %struct.sv*, %struct.sv** %sv, align 8
  %401 = load i8*, i8** %s, align 8
  %402 = load i64, i64* %termlen, align 8
  call void @Perl_sv_catpvn_flags(%struct.sv* %400, i8* %401, i64 %402, i32 2)
  br label %if.end.563

if.end.563:                                       ; preds = %if.then.562, %if.then.560
  %403 = load i64, i64* %termlen, align 8
  %404 = load i8*, i8** %s, align 8
  %add.ptr564 = getelementptr inbounds i8, i8* %404, i64 %403
  store i8* %add.ptr564, i8** %s, align 8
  br label %if.end.565

if.end.565:                                       ; preds = %if.end.563, %lor.lhs.false.557
  %405 = load i8, i8* %has_utf8, align 1
  %conv566 = sext i8 %405 to i32
  %tobool567 = icmp ne i32 %conv566, 0
  br i1 %tobool567, label %if.then.570, label %lor.lhs.false.568

lor.lhs.false.568:                                ; preds = %if.end.565
  %406 = load %struct.sv*, %struct.sv** @PL_encoding, align 8
  %tobool569 = icmp ne %struct.sv* %406, null
  br i1 %tobool569, label %if.then.570, label %if.end.573

if.then.570:                                      ; preds = %lor.lhs.false.568, %if.end.565
  %407 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags571 = getelementptr inbounds %struct.sv, %struct.sv* %407, i32 0, i32 2
  %408 = load i32, i32* %sv_flags571, align 4
  %or572 = or i32 %408, 536870912
  store i32 %or572, i32* %sv_flags571, align 4
  br label %if.end.573

if.end.573:                                       ; preds = %if.then.570, %lor.lhs.false.568
  %409 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line574 = getelementptr inbounds %struct.cop, %struct.cop* %409, i32 0, i32 13
  %410 = load i32, i32* %cop_line574, align 4
  store i32 %410, i32* @PL_multi_end, align 4
  %411 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any575 = getelementptr inbounds %struct.sv, %struct.sv* %411, i32 0, i32 0
  %412 = load i8*, i8** %sv_any575, align 8
  %413 = bitcast i8* %412 to %struct.xpv*
  %xpv_cur576 = getelementptr inbounds %struct.xpv, %struct.xpv* %413, i32 0, i32 1
  %414 = load i64, i64* %xpv_cur576, align 8
  %add577 = add i64 %414, 5
  %415 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any578 = getelementptr inbounds %struct.sv, %struct.sv* %415, i32 0, i32 0
  %416 = load i8*, i8** %sv_any578, align 8
  %417 = bitcast i8* %416 to %struct.xpv*
  %xpv_len579 = getelementptr inbounds %struct.xpv, %struct.xpv* %417, i32 0, i32 2
  %418 = load i64, i64* %xpv_len579, align 8
  %cmp580 = icmp ult i64 %add577, %418
  br i1 %cmp580, label %if.then.582, label %if.end.597

if.then.582:                                      ; preds = %if.end.573
  %419 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any584 = getelementptr inbounds %struct.sv, %struct.sv* %419, i32 0, i32 0
  %420 = load i8*, i8** %sv_any584, align 8
  %421 = bitcast i8* %420 to %struct.xpv*
  %xpv_cur585 = getelementptr inbounds %struct.xpv, %struct.xpv* %421, i32 0, i32 1
  %422 = load i64, i64* %xpv_cur585, align 8
  %add586 = add i64 %422, 1
  %423 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any587 = getelementptr inbounds %struct.sv, %struct.sv* %423, i32 0, i32 0
  %424 = load i8*, i8** %sv_any587, align 8
  %425 = bitcast i8* %424 to %struct.xpv*
  %xpv_len588 = getelementptr inbounds %struct.xpv, %struct.xpv* %425, i32 0, i32 2
  store i64 %add586, i64* %xpv_len588, align 8
  store i64 %add586, i64* %tmp583
  %426 = load i64, i64* %tmp583
  %427 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any589 = getelementptr inbounds %struct.sv, %struct.sv* %427, i32 0, i32 0
  %428 = load i8*, i8** %sv_any589, align 8
  %429 = bitcast i8* %428 to %struct.xpv*
  %xpv_pv590 = getelementptr inbounds %struct.xpv, %struct.xpv* %429, i32 0, i32 0
  %430 = load i8*, i8** %xpv_pv590, align 8
  %431 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any591 = getelementptr inbounds %struct.sv, %struct.sv* %431, i32 0, i32 0
  %432 = load i8*, i8** %sv_any591, align 8
  %433 = bitcast i8* %432 to %struct.xpv*
  %xpv_len592 = getelementptr inbounds %struct.xpv, %struct.xpv* %433, i32 0, i32 2
  %434 = load i64, i64* %xpv_len592, align 8
  %mul593 = mul i64 %434, 1
  %call594 = call i8* @Perl_safesysrealloc(i8* %430, i64 %mul593)
  %435 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any595 = getelementptr inbounds %struct.sv, %struct.sv* %435, i32 0, i32 0
  %436 = load i8*, i8** %sv_any595, align 8
  %437 = bitcast i8* %436 to %struct.xpv*
  %xpv_pv596 = getelementptr inbounds %struct.xpv, %struct.xpv* %437, i32 0, i32 0
  store i8* %call594, i8** %xpv_pv596, align 8
  br label %if.end.597

if.end.597:                                       ; preds = %if.then.582, %if.end.573
  %438 = load %struct.sv*, %struct.sv** @PL_lex_stuff, align 8
  %tobool598 = icmp ne %struct.sv* %438, null
  br i1 %tobool598, label %if.then.599, label %if.else.600

if.then.599:                                      ; preds = %if.end.597
  %439 = load %struct.sv*, %struct.sv** %sv, align 8
  store %struct.sv* %439, %struct.sv** @PL_lex_repl, align 8
  br label %if.end.601

if.else.600:                                      ; preds = %if.end.597
  %440 = load %struct.sv*, %struct.sv** %sv, align 8
  store %struct.sv* %440, %struct.sv** @PL_lex_stuff, align 8
  br label %if.end.601

if.end.601:                                       ; preds = %if.else.600, %if.then.599
  %441 = load i8*, i8** %s, align 8
  store i8* %441, i8** %retval
  br label %return

return:                                           ; preds = %if.end.601, %if.then.501
  %442 = load i8*, i8** %retval
  ret i8* %442
}

declare void @Perl_op_free(%struct.op*) #1

declare %struct.sv* @Perl_newSVpvn(i8*, i64) #1

declare %struct.op* @Perl_append_elem(i32, %struct.op*, %struct.op*) #1

declare i8* @Perl_form(i8*, ...) #1

declare signext i8 @Perl_is_utf8_alnum(i8*) #1

; Function Attrs: nounwind uwtable
define internal i8* @S_scan_heredoc(i8* %s) #0 {
entry:
  %s.addr = alloca i8*, align 8
  %herewas = alloca %struct.sv*, align 8
  %op_type = alloca i32, align 4
  %len = alloca i32, align 4
  %tmpstr = alloca %struct.sv*, align 8
  %term = alloca i8, align 1
  %d = alloca i8*, align 8
  %e = alloca i8*, align 8
  %peek = alloca i8*, align 8
  %outer = alloca i32, align 4
  %olds = alloca i8*, align 8
  %tmp = alloca i64, align 8
  %bufptr = alloca i8*, align 8
  %bufend = alloca i8*, align 8
  %olds248 = alloca i8*, align 8
  %tmp405 = alloca i64, align 8
  %sv = alloca %struct.sv*, align 8
  %off = alloca i64, align 8
  %tmp509 = alloca i64, align 8
  store i8* %s, i8** %s.addr, align 8
  store i32 2, i32* %op_type, align 4
  %0 = load volatile %struct._PerlIO**, %struct._PerlIO*** @PL_rsfp, align 8
  %tobool = icmp ne %struct._PerlIO** %0, null
  br i1 %tobool, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %entry
  %1 = load i32, i32* @PL_lex_inwhat, align 4
  %cmp = icmp eq i32 %1, 2
  %lnot = xor i1 %cmp, true
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %2 = phi i1 [ false, %entry ], [ %lnot, %land.rhs ]
  %land.ext = zext i1 %2 to i32
  store i32 %land.ext, i32* %outer, align 4
  %3 = load i8*, i8** %s.addr, align 8
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 2
  store i8* %add.ptr, i8** %s.addr, align 8
  store i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i32 0), i8** %d, align 8
  store i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i64 255), i8** %e, align 8
  %4 = load i32, i32* %outer, align 4
  %tobool1 = icmp ne i32 %4, 0
  br i1 %tobool1, label %if.end, label %if.then

if.then:                                          ; preds = %land.end
  %5 = load i8*, i8** %d, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %5, i32 1
  store i8* %incdec.ptr, i8** %d, align 8
  store i8 10, i8* %5, align 1
  br label %if.end

if.end:                                           ; preds = %if.then, %land.end
  %6 = load i8*, i8** %s.addr, align 8
  store i8* %6, i8** %peek, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %7 = load i8*, i8** %peek, align 8
  %8 = load i8, i8* %7, align 1
  %conv = sext i8 %8 to i32
  %cmp2 = icmp eq i32 %conv, 32
  br i1 %cmp2, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %for.cond
  %9 = load i8*, i8** %peek, align 8
  %10 = load i8, i8* %9, align 1
  %conv4 = sext i8 %10 to i32
  %cmp5 = icmp eq i32 %conv4, 9
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %for.cond
  %11 = phi i1 [ true, %for.cond ], [ %cmp5, %lor.rhs ]
  br i1 %11, label %for.body, label %for.end

for.body:                                         ; preds = %lor.end
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %12 = load i8*, i8** %peek, align 8
  %incdec.ptr7 = getelementptr inbounds i8, i8* %12, i32 1
  store i8* %incdec.ptr7, i8** %peek, align 8
  br label %for.cond

for.end:                                          ; preds = %lor.end
  %13 = load i8*, i8** %peek, align 8
  %14 = load i8, i8* %13, align 1
  %conv8 = sext i8 %14 to i32
  %cmp9 = icmp eq i32 %conv8, 96
  br i1 %cmp9, label %if.then.18, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.end
  %15 = load i8*, i8** %peek, align 8
  %16 = load i8, i8* %15, align 1
  %conv11 = sext i8 %16 to i32
  %cmp12 = icmp eq i32 %conv11, 39
  br i1 %cmp12, label %if.then.18, label %lor.lhs.false.14

lor.lhs.false.14:                                 ; preds = %lor.lhs.false
  %17 = load i8*, i8** %peek, align 8
  %18 = load i8, i8* %17, align 1
  %conv15 = sext i8 %18 to i32
  %cmp16 = icmp eq i32 %conv15, 34
  br i1 %cmp16, label %if.then.18, label %if.else

if.then.18:                                       ; preds = %lor.lhs.false.14, %lor.lhs.false, %for.end
  %19 = load i8*, i8** %peek, align 8
  store i8* %19, i8** %s.addr, align 8
  %20 = load i8*, i8** %s.addr, align 8
  %incdec.ptr19 = getelementptr inbounds i8, i8* %20, i32 1
  store i8* %incdec.ptr19, i8** %s.addr, align 8
  %21 = load i8, i8* %20, align 1
  store i8 %21, i8* %term, align 1
  %22 = load i8*, i8** %d, align 8
  %23 = load i8*, i8** %e, align 8
  %24 = load i8*, i8** %s.addr, align 8
  %25 = load i8*, i8** @PL_bufend, align 8
  %26 = load i8, i8* %term, align 1
  %conv20 = sext i8 %26 to i32
  %call = call i8* @Perl_delimcpy(i8* %22, i8* %23, i8* %24, i8* %25, i32 %conv20, i32* %len)
  store i8* %call, i8** %s.addr, align 8
  %27 = load i32, i32* %len, align 4
  %28 = load i8*, i8** %d, align 8
  %idx.ext = sext i32 %27 to i64
  %add.ptr21 = getelementptr inbounds i8, i8* %28, i64 %idx.ext
  store i8* %add.ptr21, i8** %d, align 8
  %29 = load i8*, i8** %s.addr, align 8
  %30 = load i8*, i8** @PL_bufend, align 8
  %cmp22 = icmp ult i8* %29, %30
  br i1 %cmp22, label %if.then.24, label %if.end.26

if.then.24:                                       ; preds = %if.then.18
  %31 = load i8*, i8** %s.addr, align 8
  %incdec.ptr25 = getelementptr inbounds i8, i8* %31, i32 1
  store i8* %incdec.ptr25, i8** %s.addr, align 8
  br label %if.end.26

if.end.26:                                        ; preds = %if.then.24, %if.then.18
  br label %if.end.149

if.else:                                          ; preds = %lor.lhs.false.14
  %32 = load i8*, i8** %s.addr, align 8
  %33 = load i8, i8* %32, align 1
  %conv27 = sext i8 %33 to i32
  %cmp28 = icmp eq i32 %conv27, 92
  br i1 %cmp28, label %if.then.30, label %if.else.32

if.then.30:                                       ; preds = %if.else
  %34 = load i8*, i8** %s.addr, align 8
  %incdec.ptr31 = getelementptr inbounds i8, i8* %34, i32 1
  store i8* %incdec.ptr31, i8** %s.addr, align 8
  store i8 39, i8* %term, align 1
  br label %if.end.33

if.else.32:                                       ; preds = %if.else
  store i8 34, i8* %term, align 1
  br label %if.end.33

if.end.33:                                        ; preds = %if.else.32, %if.then.30
  %35 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private = getelementptr inbounds %struct.cop, %struct.cop* %35, i32 0, i32 7
  %36 = load i8, i8* %op_private, align 1
  %conv34 = zext i8 %36 to i32
  %and = and i32 %conv34, 8
  %tobool35 = icmp ne i32 %and, 0
  br i1 %tobool35, label %cond.true, label %lor.lhs.false.36

lor.lhs.false.36:                                 ; preds = %if.end.33
  %37 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %tobool37 = icmp ne %struct.sv* %37, null
  br i1 %tobool37, label %land.lhs.true, label %lor.lhs.false.45

land.lhs.true:                                    ; preds = %lor.lhs.false.36
  %38 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %38, i32 0, i32 2
  %39 = load i32, i32* %sv_flags, align 4
  %and38 = and i32 %39, 536870912
  %tobool39 = icmp ne i32 %and38, 0
  br i1 %tobool39, label %land.lhs.true.40, label %lor.lhs.false.45

land.lhs.true.40:                                 ; preds = %land.lhs.true
  %40 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private41 = getelementptr inbounds %struct.cop, %struct.cop* %40, i32 0, i32 7
  %41 = load i8, i8* %op_private41, align 1
  %conv42 = zext i8 %41 to i32
  %and43 = and i32 %conv42, 8
  %tobool44 = icmp ne i32 %and43, 0
  br i1 %tobool44, label %lor.lhs.false.45, label %lor.lhs.false.48

lor.lhs.false.45:                                 ; preds = %land.lhs.true.40, %land.lhs.true, %lor.lhs.false.36
  %42 = load i32, i32* @PL_hints, align 4
  %and46 = and i32 %42, 8388608
  %tobool47 = icmp ne i32 %and46, 0
  br i1 %tobool47, label %lor.lhs.false.48, label %cond.true

lor.lhs.false.48:                                 ; preds = %lor.lhs.false.45, %land.lhs.true.40
  %43 = load i8*, i8** %s.addr, align 8
  %44 = load i8, i8* %43, align 1
  %conv49 = zext i8 %44 to i32
  %cmp50 = icmp slt i32 %conv49, 192
  br i1 %cmp50, label %cond.true, label %cond.false

cond.true:                                        ; preds = %lor.lhs.false.48, %lor.lhs.false.45, %if.end.33
  %45 = load i8*, i8** %s.addr, align 8
  %46 = load i8, i8* %45, align 1
  %conv52 = sext i8 %46 to i32
  %cmp53 = icmp sge i32 %conv52, 65
  br i1 %cmp53, label %land.lhs.true.55, label %lor.lhs.false.59

land.lhs.true.55:                                 ; preds = %cond.true
  %47 = load i8*, i8** %s.addr, align 8
  %48 = load i8, i8* %47, align 1
  %conv56 = sext i8 %48 to i32
  %cmp57 = icmp sle i32 %conv56, 90
  br i1 %cmp57, label %if.end.83, label %lor.lhs.false.59

lor.lhs.false.59:                                 ; preds = %land.lhs.true.55, %cond.true
  %49 = load i8*, i8** %s.addr, align 8
  %50 = load i8, i8* %49, align 1
  %conv60 = sext i8 %50 to i32
  %cmp61 = icmp sge i32 %conv60, 97
  br i1 %cmp61, label %land.lhs.true.63, label %lor.lhs.false.67

land.lhs.true.63:                                 ; preds = %lor.lhs.false.59
  %51 = load i8*, i8** %s.addr, align 8
  %52 = load i8, i8* %51, align 1
  %conv64 = sext i8 %52 to i32
  %cmp65 = icmp sle i32 %conv64, 122
  br i1 %cmp65, label %if.end.83, label %lor.lhs.false.67

lor.lhs.false.67:                                 ; preds = %land.lhs.true.63, %lor.lhs.false.59
  %53 = load i8*, i8** %s.addr, align 8
  %54 = load i8, i8* %53, align 1
  %conv68 = sext i8 %54 to i32
  %cmp69 = icmp sge i32 %conv68, 48
  br i1 %cmp69, label %land.lhs.true.71, label %lor.lhs.false.75

land.lhs.true.71:                                 ; preds = %lor.lhs.false.67
  %55 = load i8*, i8** %s.addr, align 8
  %56 = load i8, i8* %55, align 1
  %conv72 = sext i8 %56 to i32
  %cmp73 = icmp sle i32 %conv72, 57
  br i1 %cmp73, label %if.end.83, label %lor.lhs.false.75

lor.lhs.false.75:                                 ; preds = %land.lhs.true.71, %lor.lhs.false.67
  %57 = load i8*, i8** %s.addr, align 8
  %58 = load i8, i8* %57, align 1
  %conv76 = sext i8 %58 to i32
  %cmp77 = icmp eq i32 %conv76, 95
  br i1 %cmp77, label %if.end.83, label %if.then.82

cond.false:                                       ; preds = %lor.lhs.false.48
  %59 = load i8*, i8** %s.addr, align 8
  %call79 = call signext i8 @Perl_is_utf8_alnum(i8* %59)
  %conv80 = sext i8 %call79 to i32
  %tobool81 = icmp ne i32 %conv80, 0
  br i1 %tobool81, label %if.end.83, label %if.then.82

if.then.82:                                       ; preds = %cond.false, %lor.lhs.false.75
  call void @Perl_deprecate_old(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.222, i32 0, i32 0))
  br label %if.end.83

if.end.83:                                        ; preds = %if.then.82, %cond.false, %lor.lhs.false.75, %land.lhs.true.71, %land.lhs.true.63, %land.lhs.true.55
  br label %for.cond.84

for.cond.84:                                      ; preds = %for.inc.146, %if.end.83
  %60 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private85 = getelementptr inbounds %struct.cop, %struct.cop* %60, i32 0, i32 7
  %61 = load i8, i8* %op_private85, align 1
  %conv86 = zext i8 %61 to i32
  %and87 = and i32 %conv86, 8
  %tobool88 = icmp ne i32 %and87, 0
  br i1 %tobool88, label %cond.true.107, label %lor.lhs.false.89

lor.lhs.false.89:                                 ; preds = %for.cond.84
  %62 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %tobool90 = icmp ne %struct.sv* %62, null
  br i1 %tobool90, label %land.lhs.true.91, label %lor.lhs.false.100

land.lhs.true.91:                                 ; preds = %lor.lhs.false.89
  %63 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_flags92 = getelementptr inbounds %struct.sv, %struct.sv* %63, i32 0, i32 2
  %64 = load i32, i32* %sv_flags92, align 4
  %and93 = and i32 %64, 536870912
  %tobool94 = icmp ne i32 %and93, 0
  br i1 %tobool94, label %land.lhs.true.95, label %lor.lhs.false.100

land.lhs.true.95:                                 ; preds = %land.lhs.true.91
  %65 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private96 = getelementptr inbounds %struct.cop, %struct.cop* %65, i32 0, i32 7
  %66 = load i8, i8* %op_private96, align 1
  %conv97 = zext i8 %66 to i32
  %and98 = and i32 %conv97, 8
  %tobool99 = icmp ne i32 %and98, 0
  br i1 %tobool99, label %lor.lhs.false.100, label %lor.lhs.false.103

lor.lhs.false.100:                                ; preds = %land.lhs.true.95, %land.lhs.true.91, %lor.lhs.false.89
  %67 = load i32, i32* @PL_hints, align 4
  %and101 = and i32 %67, 8388608
  %tobool102 = icmp ne i32 %and101, 0
  br i1 %tobool102, label %lor.lhs.false.103, label %cond.true.107

lor.lhs.false.103:                                ; preds = %lor.lhs.false.100, %land.lhs.true.95
  %68 = load i8*, i8** %s.addr, align 8
  %69 = load i8, i8* %68, align 1
  %conv104 = zext i8 %69 to i32
  %cmp105 = icmp slt i32 %conv104, 192
  br i1 %cmp105, label %cond.true.107, label %cond.false.136

cond.true.107:                                    ; preds = %lor.lhs.false.103, %lor.lhs.false.100, %for.cond.84
  %70 = load i8*, i8** %s.addr, align 8
  %71 = load i8, i8* %70, align 1
  %conv108 = sext i8 %71 to i32
  %cmp109 = icmp sge i32 %conv108, 65
  br i1 %cmp109, label %land.lhs.true.111, label %lor.lhs.false.115

land.lhs.true.111:                                ; preds = %cond.true.107
  %72 = load i8*, i8** %s.addr, align 8
  %73 = load i8, i8* %72, align 1
  %conv112 = sext i8 %73 to i32
  %cmp113 = icmp sle i32 %conv112, 90
  br i1 %cmp113, label %lor.end.135, label %lor.lhs.false.115

lor.lhs.false.115:                                ; preds = %land.lhs.true.111, %cond.true.107
  %74 = load i8*, i8** %s.addr, align 8
  %75 = load i8, i8* %74, align 1
  %conv116 = sext i8 %75 to i32
  %cmp117 = icmp sge i32 %conv116, 97
  br i1 %cmp117, label %land.lhs.true.119, label %lor.lhs.false.123

land.lhs.true.119:                                ; preds = %lor.lhs.false.115
  %76 = load i8*, i8** %s.addr, align 8
  %77 = load i8, i8* %76, align 1
  %conv120 = sext i8 %77 to i32
  %cmp121 = icmp sle i32 %conv120, 122
  br i1 %cmp121, label %lor.end.135, label %lor.lhs.false.123

lor.lhs.false.123:                                ; preds = %land.lhs.true.119, %lor.lhs.false.115
  %78 = load i8*, i8** %s.addr, align 8
  %79 = load i8, i8* %78, align 1
  %conv124 = sext i8 %79 to i32
  %cmp125 = icmp sge i32 %conv124, 48
  br i1 %cmp125, label %land.lhs.true.127, label %lor.rhs.131

land.lhs.true.127:                                ; preds = %lor.lhs.false.123
  %80 = load i8*, i8** %s.addr, align 8
  %81 = load i8, i8* %80, align 1
  %conv128 = sext i8 %81 to i32
  %cmp129 = icmp sle i32 %conv128, 57
  br i1 %cmp129, label %lor.end.135, label %lor.rhs.131

lor.rhs.131:                                      ; preds = %land.lhs.true.127, %lor.lhs.false.123
  %82 = load i8*, i8** %s.addr, align 8
  %83 = load i8, i8* %82, align 1
  %conv132 = sext i8 %83 to i32
  %cmp133 = icmp eq i32 %conv132, 95
  br label %lor.end.135

lor.end.135:                                      ; preds = %lor.rhs.131, %land.lhs.true.127, %land.lhs.true.119, %land.lhs.true.111
  %84 = phi i1 [ true, %land.lhs.true.127 ], [ true, %land.lhs.true.119 ], [ true, %land.lhs.true.111 ], [ %cmp133, %lor.rhs.131 ]
  %lor.ext = zext i1 %84 to i32
  br label %cond.end

cond.false.136:                                   ; preds = %lor.lhs.false.103
  %85 = load i8*, i8** %s.addr, align 8
  %call137 = call signext i8 @Perl_is_utf8_alnum(i8* %85)
  %conv138 = sext i8 %call137 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false.136, %lor.end.135
  %cond = phi i32 [ %lor.ext, %lor.end.135 ], [ %conv138, %cond.false.136 ]
  %tobool139 = icmp ne i32 %cond, 0
  br i1 %tobool139, label %for.body.140, label %for.end.148

for.body.140:                                     ; preds = %cond.end
  %86 = load i8*, i8** %d, align 8
  %87 = load i8*, i8** %e, align 8
  %cmp141 = icmp ult i8* %86, %87
  br i1 %cmp141, label %if.then.143, label %if.end.145

if.then.143:                                      ; preds = %for.body.140
  %88 = load i8*, i8** %s.addr, align 8
  %89 = load i8, i8* %88, align 1
  %90 = load i8*, i8** %d, align 8
  %incdec.ptr144 = getelementptr inbounds i8, i8* %90, i32 1
  store i8* %incdec.ptr144, i8** %d, align 8
  store i8 %89, i8* %90, align 1
  br label %if.end.145

if.end.145:                                       ; preds = %if.then.143, %for.body.140
  br label %for.inc.146

for.inc.146:                                      ; preds = %if.end.145
  %91 = load i8*, i8** %s.addr, align 8
  %incdec.ptr147 = getelementptr inbounds i8, i8* %91, i32 1
  store i8* %incdec.ptr147, i8** %s.addr, align 8
  br label %for.cond.84

for.end.148:                                      ; preds = %cond.end
  br label %if.end.149

if.end.149:                                       ; preds = %for.end.148, %if.end.26
  %92 = load i8*, i8** %d, align 8
  %cmp150 = icmp uge i8* %92, getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i64 255)
  br i1 %cmp150, label %if.then.152, label %if.end.153

if.then.152:                                      ; preds = %if.end.149
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.223, i32 0, i32 0))
  br label %if.end.153

if.end.153:                                       ; preds = %if.then.152, %if.end.149
  %93 = load i8*, i8** %d, align 8
  %incdec.ptr154 = getelementptr inbounds i8, i8* %93, i32 1
  store i8* %incdec.ptr154, i8** %d, align 8
  store i8 10, i8* %93, align 1
  %94 = load i8*, i8** %d, align 8
  store i8 0, i8* %94, align 1
  %95 = load i8*, i8** %d, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %95 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, ptrtoint ([256 x i8]* @PL_tokenbuf to i64)
  %conv155 = trunc i64 %sub.ptr.sub to i32
  store i32 %conv155, i32* %len, align 4
  %96 = load i8*, i8** %s.addr, align 8
  %call156 = call i8* @strchr(i8* %96, i32 13)
  store i8* %call156, i8** %d, align 8
  %97 = load i8*, i8** %d, align 8
  %tobool157 = icmp ne i8* %97, null
  br i1 %tobool157, label %if.then.158, label %if.end.193

if.then.158:                                      ; preds = %if.end.153
  %98 = load i8*, i8** %s.addr, align 8
  store i8* %98, i8** %olds, align 8
  %99 = load i8*, i8** %d, align 8
  store i8* %99, i8** %s.addr, align 8
  br label %while.cond

while.cond:                                       ; preds = %if.end.189, %if.then.158
  %100 = load i8*, i8** %s.addr, align 8
  %101 = load i8*, i8** @PL_bufend, align 8
  %cmp159 = icmp ult i8* %100, %101
  br i1 %cmp159, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %102 = load i8*, i8** %s.addr, align 8
  %103 = load i8, i8* %102, align 1
  %conv161 = sext i8 %103 to i32
  %cmp162 = icmp eq i32 %conv161, 13
  br i1 %cmp162, label %if.then.164, label %if.else.173

if.then.164:                                      ; preds = %while.body
  %104 = load i8*, i8** %d, align 8
  %incdec.ptr165 = getelementptr inbounds i8, i8* %104, i32 1
  store i8* %incdec.ptr165, i8** %d, align 8
  store i8 10, i8* %104, align 1
  %105 = load i8*, i8** %s.addr, align 8
  %incdec.ptr166 = getelementptr inbounds i8, i8* %105, i32 1
  store i8* %incdec.ptr166, i8** %s.addr, align 8
  %106 = load i8, i8* %incdec.ptr166, align 1
  %conv167 = sext i8 %106 to i32
  %cmp168 = icmp eq i32 %conv167, 10
  br i1 %cmp168, label %if.then.170, label %if.end.172

if.then.170:                                      ; preds = %if.then.164
  %107 = load i8*, i8** %s.addr, align 8
  %incdec.ptr171 = getelementptr inbounds i8, i8* %107, i32 1
  store i8* %incdec.ptr171, i8** %s.addr, align 8
  br label %if.end.172

if.end.172:                                       ; preds = %if.then.170, %if.then.164
  br label %if.end.189

if.else.173:                                      ; preds = %while.body
  %108 = load i8*, i8** %s.addr, align 8
  %109 = load i8, i8* %108, align 1
  %conv174 = sext i8 %109 to i32
  %cmp175 = icmp eq i32 %conv174, 10
  br i1 %cmp175, label %land.lhs.true.177, label %if.else.185

land.lhs.true.177:                                ; preds = %if.else.173
  %110 = load i8*, i8** %s.addr, align 8
  %arrayidx = getelementptr inbounds i8, i8* %110, i64 1
  %111 = load i8, i8* %arrayidx, align 1
  %conv178 = sext i8 %111 to i32
  %cmp179 = icmp eq i32 %conv178, 13
  br i1 %cmp179, label %if.then.181, label %if.else.185

if.then.181:                                      ; preds = %land.lhs.true.177
  %112 = load i8*, i8** %s.addr, align 8
  %incdec.ptr182 = getelementptr inbounds i8, i8* %112, i32 1
  store i8* %incdec.ptr182, i8** %s.addr, align 8
  %113 = load i8, i8* %112, align 1
  %114 = load i8*, i8** %d, align 8
  %incdec.ptr183 = getelementptr inbounds i8, i8* %114, i32 1
  store i8* %incdec.ptr183, i8** %d, align 8
  store i8 %113, i8* %114, align 1
  %115 = load i8*, i8** %s.addr, align 8
  %incdec.ptr184 = getelementptr inbounds i8, i8* %115, i32 1
  store i8* %incdec.ptr184, i8** %s.addr, align 8
  br label %if.end.188

if.else.185:                                      ; preds = %land.lhs.true.177, %if.else.173
  %116 = load i8*, i8** %s.addr, align 8
  %incdec.ptr186 = getelementptr inbounds i8, i8* %116, i32 1
  store i8* %incdec.ptr186, i8** %s.addr, align 8
  %117 = load i8, i8* %116, align 1
  %118 = load i8*, i8** %d, align 8
  %incdec.ptr187 = getelementptr inbounds i8, i8* %118, i32 1
  store i8* %incdec.ptr187, i8** %d, align 8
  store i8 %117, i8* %118, align 1
  br label %if.end.188

if.end.188:                                       ; preds = %if.else.185, %if.then.181
  br label %if.end.189

if.end.189:                                       ; preds = %if.end.188, %if.end.172
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %119 = load i8*, i8** %d, align 8
  store i8 0, i8* %119, align 1
  %120 = load i8*, i8** %d, align 8
  store i8* %120, i8** @PL_bufend, align 8
  %121 = load i8*, i8** @PL_bufend, align 8
  %122 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %122, i32 0, i32 0
  %123 = load i8*, i8** %sv_any, align 8
  %124 = bitcast i8* %123 to %struct.xpv*
  %xpv_pv = getelementptr inbounds %struct.xpv, %struct.xpv* %124, i32 0, i32 0
  %125 = load i8*, i8** %xpv_pv, align 8
  %sub.ptr.lhs.cast190 = ptrtoint i8* %121 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %125 to i64
  %sub.ptr.sub191 = sub i64 %sub.ptr.lhs.cast190, %sub.ptr.rhs.cast
  %126 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_any192 = getelementptr inbounds %struct.sv, %struct.sv* %126, i32 0, i32 0
  %127 = load i8*, i8** %sv_any192, align 8
  %128 = bitcast i8* %127 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %128, i32 0, i32 1
  store i64 %sub.ptr.sub191, i64* %xpv_cur, align 8
  store i64 %sub.ptr.sub191, i64* %tmp
  %129 = load i64, i64* %tmp
  %130 = load i8*, i8** %olds, align 8
  store i8* %130, i8** %s.addr, align 8
  br label %if.end.193

if.end.193:                                       ; preds = %while.end, %if.end.153
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.21, i32 0, i32 0), i8** %d, align 8
  %131 = load i32, i32* %outer, align 4
  %tobool194 = icmp ne i32 %131, 0
  br i1 %tobool194, label %if.then.199, label %lor.lhs.false.195

lor.lhs.false.195:                                ; preds = %if.end.193
  %132 = load i8*, i8** %s.addr, align 8
  %133 = load i8*, i8** @PL_bufend, align 8
  %134 = load i8*, i8** %d, align 8
  %135 = load i8*, i8** %d, align 8
  %add.ptr196 = getelementptr inbounds i8, i8* %135, i64 1
  %call197 = call i8* @Perl_ninstr(i8* %132, i8* %133, i8* %134, i8* %add.ptr196)
  store i8* %call197, i8** %d, align 8
  %tobool198 = icmp ne i8* %call197, null
  br i1 %tobool198, label %if.else.204, label %if.then.199

if.then.199:                                      ; preds = %lor.lhs.false.195, %if.end.193
  %136 = load i8*, i8** %s.addr, align 8
  %137 = load i8*, i8** @PL_bufend, align 8
  %138 = load i8*, i8** %s.addr, align 8
  %sub.ptr.lhs.cast200 = ptrtoint i8* %137 to i64
  %sub.ptr.rhs.cast201 = ptrtoint i8* %138 to i64
  %sub.ptr.sub202 = sub i64 %sub.ptr.lhs.cast200, %sub.ptr.rhs.cast201
  %call203 = call %struct.sv* @Perl_newSVpvn(i8* %136, i64 %sub.ptr.sub202)
  store %struct.sv* %call203, %struct.sv** %herewas, align 8
  br label %if.end.210

if.else.204:                                      ; preds = %lor.lhs.false.195
  %139 = load i8*, i8** %s.addr, align 8
  %incdec.ptr205 = getelementptr inbounds i8, i8* %139, i32 -1
  store i8* %incdec.ptr205, i8** %s.addr, align 8
  %140 = load i8*, i8** %s.addr, align 8
  %141 = load i8*, i8** %d, align 8
  %142 = load i8*, i8** %s.addr, align 8
  %sub.ptr.lhs.cast206 = ptrtoint i8* %141 to i64
  %sub.ptr.rhs.cast207 = ptrtoint i8* %142 to i64
  %sub.ptr.sub208 = sub i64 %sub.ptr.lhs.cast206, %sub.ptr.rhs.cast207
  %call209 = call %struct.sv* @Perl_newSVpvn(i8* %140, i64 %sub.ptr.sub208)
  store %struct.sv* %call209, %struct.sv** %herewas, align 8
  br label %if.end.210

if.end.210:                                       ; preds = %if.else.204, %if.then.199
  %143 = load %struct.sv*, %struct.sv** %herewas, align 8
  %sv_any211 = getelementptr inbounds %struct.sv, %struct.sv* %143, i32 0, i32 0
  %144 = load i8*, i8** %sv_any211, align 8
  %145 = bitcast i8* %144 to %struct.xpv*
  %xpv_cur212 = getelementptr inbounds %struct.xpv, %struct.xpv* %145, i32 0, i32 1
  %146 = load i64, i64* %xpv_cur212, align 8
  %147 = load i8*, i8** %s.addr, align 8
  %add.ptr213 = getelementptr inbounds i8, i8* %147, i64 %146
  store i8* %add.ptr213, i8** %s.addr, align 8
  %call214 = call %struct.sv* @Perl_newSV(i64 79)
  store %struct.sv* %call214, %struct.sv** %tmpstr, align 8
  %148 = load %struct.sv*, %struct.sv** %tmpstr, align 8
  %call215 = call signext i8 @Perl_sv_upgrade(%struct.sv* %148, i32 5)
  %149 = load i8, i8* %term, align 1
  %conv216 = sext i8 %149 to i32
  %cmp217 = icmp eq i32 %conv216, 39
  br i1 %cmp217, label %if.then.219, label %if.else.221

if.then.219:                                      ; preds = %if.end.210
  store i32 5, i32* %op_type, align 4
  %150 = load %struct.sv*, %struct.sv** %tmpstr, align 8
  %sv_any220 = getelementptr inbounds %struct.sv, %struct.sv* %150, i32 0, i32 0
  %151 = load i8*, i8** %sv_any220, align 8
  %152 = bitcast i8* %151 to %struct.xpviv*
  %xiv_iv = getelementptr inbounds %struct.xpviv, %struct.xpviv* %152, i32 0, i32 3
  store i64 -1, i64* %xiv_iv, align 8
  br label %if.end.229

if.else.221:                                      ; preds = %if.end.210
  %153 = load i8, i8* %term, align 1
  %conv222 = sext i8 %153 to i32
  %cmp223 = icmp eq i32 %conv222, 96
  br i1 %cmp223, label %if.then.225, label %if.end.228

if.then.225:                                      ; preds = %if.else.221
  store i32 24, i32* %op_type, align 4
  %154 = load %struct.sv*, %struct.sv** %tmpstr, align 8
  %sv_any226 = getelementptr inbounds %struct.sv, %struct.sv* %154, i32 0, i32 0
  %155 = load i8*, i8** %sv_any226, align 8
  %156 = bitcast i8* %155 to %struct.xpviv*
  %xiv_iv227 = getelementptr inbounds %struct.xpviv, %struct.xpviv* %156, i32 0, i32 3
  store i64 92, i64* %xiv_iv227, align 8
  br label %if.end.228

if.end.228:                                       ; preds = %if.then.225, %if.else.221
  br label %if.end.229

if.end.229:                                       ; preds = %if.end.228, %if.then.219
  %157 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line = getelementptr inbounds %struct.cop, %struct.cop* %157, i32 0, i32 13
  %158 = load i32, i32* %cop_line, align 4
  %159 = load i32, i32* @PL_copline, align 4
  %cmp230 = icmp ult i32 %158, %159
  br i1 %cmp230, label %cond.true.232, label %cond.false.234

cond.true.232:                                    ; preds = %if.end.229
  %160 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line233 = getelementptr inbounds %struct.cop, %struct.cop* %160, i32 0, i32 13
  %161 = load i32, i32* %cop_line233, align 4
  br label %cond.end.235

cond.false.234:                                   ; preds = %if.end.229
  %162 = load i32, i32* @PL_copline, align 4
  br label %cond.end.235

cond.end.235:                                     ; preds = %cond.false.234, %cond.true.232
  %cond236 = phi i32 [ %161, %cond.true.232 ], [ %162, %cond.false.234 ]
  store i32 %cond236, i32* @PL_copline, align 4
  %163 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line237 = getelementptr inbounds %struct.cop, %struct.cop* %163, i32 0, i32 13
  %164 = load i32, i32* %cop_line237, align 4
  store i32 %164, i32* @PL_multi_start, align 4
  store i32 60, i32* @PL_multi_close, align 4
  store i32 60, i32* @PL_multi_open, align 4
  %165 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i32 0), align 1
  store i8 %165, i8* %term, align 1
  %166 = load i32, i32* @PL_lex_inwhat, align 4
  %cmp238 = icmp eq i32 %166, 33
  br i1 %cmp238, label %land.lhs.true.240, label %if.else.303

land.lhs.true.240:                                ; preds = %cond.end.235
  %167 = load volatile i32, i32* @PL_in_eval, align 4
  %tobool241 = icmp ne i32 %167, 0
  br i1 %tobool241, label %land.lhs.true.242, label %if.else.303

land.lhs.true.242:                                ; preds = %land.lhs.true.240
  %168 = load volatile %struct._PerlIO**, %struct._PerlIO*** @PL_rsfp, align 8
  %tobool243 = icmp ne %struct._PerlIO** %168, null
  br i1 %tobool243, label %if.else.303, label %if.then.244

if.then.244:                                      ; preds = %land.lhs.true.242
  %169 = load i8*, i8** getelementptr inbounds (%struct._sublex_info, %struct._sublex_info* @PL_sublex_info, i32 0, i32 3), align 8
  store i8* %169, i8** %bufptr, align 8
  %170 = load i8*, i8** getelementptr inbounds (%struct._sublex_info, %struct._sublex_info* @PL_sublex_info, i32 0, i32 4), align 8
  store i8* %170, i8** %bufend, align 8
  %171 = load i8*, i8** %s.addr, align 8
  %172 = load %struct.sv*, %struct.sv** %herewas, align 8
  %sv_any249 = getelementptr inbounds %struct.sv, %struct.sv* %172, i32 0, i32 0
  %173 = load i8*, i8** %sv_any249, align 8
  %174 = bitcast i8* %173 to %struct.xpv*
  %xpv_cur250 = getelementptr inbounds %struct.xpv, %struct.xpv* %174, i32 0, i32 1
  %175 = load i64, i64* %xpv_cur250, align 8
  %idx.neg = sub i64 0, %175
  %add.ptr251 = getelementptr inbounds i8, i8* %171, i64 %idx.neg
  store i8* %add.ptr251, i8** %olds248, align 8
  %176 = load i8*, i8** %bufptr, align 8
  %call252 = call i8* @strchr(i8* %176, i32 10)
  store i8* %call252, i8** %s.addr, align 8
  %177 = load i8*, i8** %s.addr, align 8
  %tobool253 = icmp ne i8* %177, null
  br i1 %tobool253, label %if.end.255, label %if.then.254

if.then.254:                                      ; preds = %if.then.244
  %178 = load i8*, i8** %bufend, align 8
  store i8* %178, i8** %s.addr, align 8
  br label %if.end.255

if.end.255:                                       ; preds = %if.then.254, %if.then.244
  %179 = load i8*, i8** %s.addr, align 8
  store i8* %179, i8** %d, align 8
  br label %while.cond.256

while.cond.256:                                   ; preds = %if.end.279, %if.end.255
  %180 = load i8*, i8** %s.addr, align 8
  %181 = load i8*, i8** %bufend, align 8
  %cmp257 = icmp ult i8* %180, %181
  br i1 %cmp257, label %land.rhs.259, label %land.end.270

land.rhs.259:                                     ; preds = %while.cond.256
  %182 = load i8*, i8** %s.addr, align 8
  %183 = load i8, i8* %182, align 1
  %conv260 = sext i8 %183 to i32
  %184 = load i8, i8* %term, align 1
  %conv261 = sext i8 %184 to i32
  %cmp262 = icmp ne i32 %conv260, %conv261
  br i1 %cmp262, label %lor.end.268, label %lor.rhs.264

lor.rhs.264:                                      ; preds = %land.rhs.259
  %185 = load i8*, i8** %s.addr, align 8
  %186 = load i32, i32* %len, align 4
  %conv265 = sext i32 %186 to i64
  %call266 = call i32 @memcmp(i8* %185, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i32 0), i64 %conv265)
  %tobool267 = icmp ne i32 %call266, 0
  br label %lor.end.268

lor.end.268:                                      ; preds = %lor.rhs.264, %land.rhs.259
  %187 = phi i1 [ true, %land.rhs.259 ], [ %tobool267, %lor.rhs.264 ]
  br label %land.end.270

land.end.270:                                     ; preds = %lor.end.268, %while.cond.256
  %188 = phi i1 [ false, %while.cond.256 ], [ %187, %lor.end.268 ]
  br i1 %188, label %while.body.272, label %while.end.280

while.body.272:                                   ; preds = %land.end.270
  %189 = load i8*, i8** %s.addr, align 8
  %incdec.ptr273 = getelementptr inbounds i8, i8* %189, i32 1
  store i8* %incdec.ptr273, i8** %s.addr, align 8
  %190 = load i8, i8* %189, align 1
  %conv274 = sext i8 %190 to i32
  %cmp275 = icmp eq i32 %conv274, 10
  br i1 %cmp275, label %if.then.277, label %if.end.279

if.then.277:                                      ; preds = %while.body.272
  %191 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line278 = getelementptr inbounds %struct.cop, %struct.cop* %191, i32 0, i32 13
  %192 = load i32, i32* %cop_line278, align 4
  %inc = add i32 %192, 1
  store i32 %inc, i32* %cop_line278, align 4
  br label %if.end.279

if.end.279:                                       ; preds = %if.then.277, %while.body.272
  br label %while.cond.256

while.end.280:                                    ; preds = %land.end.270
  %193 = load i8*, i8** %s.addr, align 8
  %194 = load i8*, i8** %bufend, align 8
  %cmp281 = icmp uge i8* %193, %194
  br i1 %cmp281, label %if.then.283, label %if.end.285

if.then.283:                                      ; preds = %while.end.280
  %195 = load i32, i32* @PL_multi_start, align 4
  %196 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line284 = getelementptr inbounds %struct.cop, %struct.cop* %196, i32 0, i32 13
  store i32 %195, i32* %cop_line284, align 4
  call void @S_missingterm(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i32 0))
  br label %if.end.285

if.end.285:                                       ; preds = %if.then.283, %while.end.280
  %197 = load %struct.sv*, %struct.sv** %herewas, align 8
  %198 = load i8*, i8** %bufptr, align 8
  %199 = load i8*, i8** %d, align 8
  %200 = load i8*, i8** %bufptr, align 8
  %sub.ptr.lhs.cast286 = ptrtoint i8* %199 to i64
  %sub.ptr.rhs.cast287 = ptrtoint i8* %200 to i64
  %sub.ptr.sub288 = sub i64 %sub.ptr.lhs.cast286, %sub.ptr.rhs.cast287
  %add = add nsw i64 %sub.ptr.sub288, 1
  call void @Perl_sv_setpvn(%struct.sv* %197, i8* %198, i64 %add)
  %201 = load %struct.sv*, %struct.sv** %tmpstr, align 8
  %202 = load i8*, i8** %d, align 8
  %add.ptr289 = getelementptr inbounds i8, i8* %202, i64 1
  %203 = load i8*, i8** %s.addr, align 8
  %204 = load i8*, i8** %d, align 8
  %sub.ptr.lhs.cast290 = ptrtoint i8* %203 to i64
  %sub.ptr.rhs.cast291 = ptrtoint i8* %204 to i64
  %sub.ptr.sub292 = sub i64 %sub.ptr.lhs.cast290, %sub.ptr.rhs.cast291
  call void @Perl_sv_setpvn(%struct.sv* %201, i8* %add.ptr289, i64 %sub.ptr.sub292)
  %205 = load i32, i32* %len, align 4
  %sub = sub nsw i32 %205, 1
  %206 = load i8*, i8** %s.addr, align 8
  %idx.ext293 = sext i32 %sub to i64
  %add.ptr294 = getelementptr inbounds i8, i8* %206, i64 %idx.ext293
  store i8* %add.ptr294, i8** %s.addr, align 8
  %207 = load %struct.sv*, %struct.sv** %herewas, align 8
  %208 = load i8*, i8** %s.addr, align 8
  %209 = load i8*, i8** %bufend, align 8
  %210 = load i8*, i8** %s.addr, align 8
  %sub.ptr.lhs.cast295 = ptrtoint i8* %209 to i64
  %sub.ptr.rhs.cast296 = ptrtoint i8* %210 to i64
  %sub.ptr.sub297 = sub i64 %sub.ptr.lhs.cast295, %sub.ptr.rhs.cast296
  call void @Perl_sv_catpvn_flags(%struct.sv* %207, i8* %208, i64 %sub.ptr.sub297, i32 2)
  %211 = load i8*, i8** %bufptr, align 8
  %212 = load %struct.sv*, %struct.sv** %herewas, align 8
  %sv_any298 = getelementptr inbounds %struct.sv, %struct.sv* %212, i32 0, i32 0
  %213 = load i8*, i8** %sv_any298, align 8
  %214 = bitcast i8* %213 to %struct.xpv*
  %xpv_pv299 = getelementptr inbounds %struct.xpv, %struct.xpv* %214, i32 0, i32 0
  %215 = load i8*, i8** %xpv_pv299, align 8
  %216 = load %struct.sv*, %struct.sv** %herewas, align 8
  %sv_any300 = getelementptr inbounds %struct.sv, %struct.sv* %216, i32 0, i32 0
  %217 = load i8*, i8** %sv_any300, align 8
  %218 = bitcast i8* %217 to %struct.xpv*
  %xpv_cur301 = getelementptr inbounds %struct.xpv, %struct.xpv* %218, i32 0, i32 1
  %219 = load i64, i64* %xpv_cur301, align 8
  %add302 = add i64 %219, 1
  %mul = mul i64 %add302, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %211, i8* %215, i64 %mul, i32 1, i1 false)
  %220 = load i8*, i8** %olds248, align 8
  store i8* %220, i8** %s.addr, align 8
  br label %retval.500

if.else.303:                                      ; preds = %land.lhs.true.242, %land.lhs.true.240, %cond.end.235
  %221 = load i32, i32* %outer, align 4
  %tobool304 = icmp ne i32 %221, 0
  br i1 %tobool304, label %if.else.356, label %if.then.305

if.then.305:                                      ; preds = %if.else.303
  %222 = load i8*, i8** %s.addr, align 8
  store i8* %222, i8** %d, align 8
  br label %while.cond.306

while.cond.306:                                   ; preds = %if.end.330, %if.then.305
  %223 = load i8*, i8** %s.addr, align 8
  %224 = load i8*, i8** @PL_bufend, align 8
  %cmp307 = icmp ult i8* %223, %224
  br i1 %cmp307, label %land.rhs.309, label %land.end.320

land.rhs.309:                                     ; preds = %while.cond.306
  %225 = load i8*, i8** %s.addr, align 8
  %226 = load i8, i8* %225, align 1
  %conv310 = sext i8 %226 to i32
  %227 = load i8, i8* %term, align 1
  %conv311 = sext i8 %227 to i32
  %cmp312 = icmp ne i32 %conv310, %conv311
  br i1 %cmp312, label %lor.end.318, label %lor.rhs.314

lor.rhs.314:                                      ; preds = %land.rhs.309
  %228 = load i8*, i8** %s.addr, align 8
  %229 = load i32, i32* %len, align 4
  %conv315 = sext i32 %229 to i64
  %call316 = call i32 @memcmp(i8* %228, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i32 0), i64 %conv315)
  %tobool317 = icmp ne i32 %call316, 0
  br label %lor.end.318

lor.end.318:                                      ; preds = %lor.rhs.314, %land.rhs.309
  %230 = phi i1 [ true, %land.rhs.309 ], [ %tobool317, %lor.rhs.314 ]
  br label %land.end.320

land.end.320:                                     ; preds = %lor.end.318, %while.cond.306
  %231 = phi i1 [ false, %while.cond.306 ], [ %230, %lor.end.318 ]
  br i1 %231, label %while.body.322, label %while.end.331

while.body.322:                                   ; preds = %land.end.320
  %232 = load i8*, i8** %s.addr, align 8
  %incdec.ptr323 = getelementptr inbounds i8, i8* %232, i32 1
  store i8* %incdec.ptr323, i8** %s.addr, align 8
  %233 = load i8, i8* %232, align 1
  %conv324 = sext i8 %233 to i32
  %cmp325 = icmp eq i32 %conv324, 10
  br i1 %cmp325, label %if.then.327, label %if.end.330

if.then.327:                                      ; preds = %while.body.322
  %234 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line328 = getelementptr inbounds %struct.cop, %struct.cop* %234, i32 0, i32 13
  %235 = load i32, i32* %cop_line328, align 4
  %inc329 = add i32 %235, 1
  store i32 %inc329, i32* %cop_line328, align 4
  br label %if.end.330

if.end.330:                                       ; preds = %if.then.327, %while.body.322
  br label %while.cond.306

while.end.331:                                    ; preds = %land.end.320
  %236 = load i8*, i8** %s.addr, align 8
  %237 = load i8*, i8** @PL_bufend, align 8
  %cmp332 = icmp uge i8* %236, %237
  br i1 %cmp332, label %if.then.334, label %if.end.336

if.then.334:                                      ; preds = %while.end.331
  %238 = load i32, i32* @PL_multi_start, align 4
  %239 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line335 = getelementptr inbounds %struct.cop, %struct.cop* %239, i32 0, i32 13
  store i32 %238, i32* %cop_line335, align 4
  call void @S_missingterm(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i32 0))
  br label %if.end.336

if.end.336:                                       ; preds = %if.then.334, %while.end.331
  %240 = load %struct.sv*, %struct.sv** %tmpstr, align 8
  %241 = load i8*, i8** %d, align 8
  %add.ptr337 = getelementptr inbounds i8, i8* %241, i64 1
  %242 = load i8*, i8** %s.addr, align 8
  %243 = load i8*, i8** %d, align 8
  %sub.ptr.lhs.cast338 = ptrtoint i8* %242 to i64
  %sub.ptr.rhs.cast339 = ptrtoint i8* %243 to i64
  %sub.ptr.sub340 = sub i64 %sub.ptr.lhs.cast338, %sub.ptr.rhs.cast339
  call void @Perl_sv_setpvn(%struct.sv* %240, i8* %add.ptr337, i64 %sub.ptr.sub340)
  %244 = load i32, i32* %len, align 4
  %sub341 = sub nsw i32 %244, 1
  %245 = load i8*, i8** %s.addr, align 8
  %idx.ext342 = sext i32 %sub341 to i64
  %add.ptr343 = getelementptr inbounds i8, i8* %245, i64 %idx.ext342
  store i8* %add.ptr343, i8** %s.addr, align 8
  %246 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line344 = getelementptr inbounds %struct.cop, %struct.cop* %246, i32 0, i32 13
  %247 = load i32, i32* %cop_line344, align 4
  %inc345 = add i32 %247, 1
  store i32 %inc345, i32* %cop_line344, align 4
  %248 = load %struct.sv*, %struct.sv** %herewas, align 8
  %249 = load i8*, i8** %s.addr, align 8
  %250 = load i8*, i8** @PL_bufend, align 8
  %251 = load i8*, i8** %s.addr, align 8
  %sub.ptr.lhs.cast346 = ptrtoint i8* %250 to i64
  %sub.ptr.rhs.cast347 = ptrtoint i8* %251 to i64
  %sub.ptr.sub348 = sub i64 %sub.ptr.lhs.cast346, %sub.ptr.rhs.cast347
  call void @Perl_sv_catpvn_flags(%struct.sv* %248, i8* %249, i64 %sub.ptr.sub348, i32 2)
  %252 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %253 = load %struct.sv*, %struct.sv** %herewas, align 8
  call void @Perl_sv_setsv_flags(%struct.sv* %252, %struct.sv* %253, i32 2)
  %254 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_any349 = getelementptr inbounds %struct.sv, %struct.sv* %254, i32 0, i32 0
  %255 = load i8*, i8** %sv_any349, align 8
  %256 = bitcast i8* %255 to %struct.xpv*
  %xpv_pv350 = getelementptr inbounds %struct.xpv, %struct.xpv* %256, i32 0, i32 0
  %257 = load i8*, i8** %xpv_pv350, align 8
  store i8* %257, i8** @PL_linestart, align 8
  store i8* %257, i8** %s.addr, align 8
  store i8* %257, i8** @PL_bufptr, align 8
  store i8* %257, i8** @PL_oldbufptr, align 8
  store i8* %257, i8** @PL_oldoldbufptr, align 8
  %258 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_any351 = getelementptr inbounds %struct.sv, %struct.sv* %258, i32 0, i32 0
  %259 = load i8*, i8** %sv_any351, align 8
  %260 = bitcast i8* %259 to %struct.xpv*
  %xpv_pv352 = getelementptr inbounds %struct.xpv, %struct.xpv* %260, i32 0, i32 0
  %261 = load i8*, i8** %xpv_pv352, align 8
  %262 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_any353 = getelementptr inbounds %struct.sv, %struct.sv* %262, i32 0, i32 0
  %263 = load i8*, i8** %sv_any353, align 8
  %264 = bitcast i8* %263 to %struct.xpv*
  %xpv_cur354 = getelementptr inbounds %struct.xpv, %struct.xpv* %264, i32 0, i32 1
  %265 = load i64, i64* %xpv_cur354, align 8
  %add.ptr355 = getelementptr inbounds i8, i8* %261, i64 %265
  store i8* %add.ptr355, i8** @PL_bufend, align 8
  store i8* null, i8** @PL_last_uni, align 8
  store i8* null, i8** @PL_last_lop, align 8
  br label %if.end.357

if.else.356:                                      ; preds = %if.else.303
  %266 = load %struct.sv*, %struct.sv** %tmpstr, align 8
  call void @Perl_sv_setpvn(%struct.sv* %266, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.24, i32 0, i32 0), i64 0)
  br label %if.end.357

if.end.357:                                       ; preds = %if.else.356, %if.end.336
  br label %if.end.358

if.end.358:                                       ; preds = %if.end.357
  br label %while.cond.359

while.cond.359:                                   ; preds = %if.end.497, %if.end.358
  %267 = load i8*, i8** %s.addr, align 8
  %268 = load i8*, i8** @PL_bufend, align 8
  %cmp360 = icmp uge i8* %267, %268
  br i1 %cmp360, label %while.body.362, label %while.end.498

while.body.362:                                   ; preds = %while.cond.359
  %269 = load i32, i32* %outer, align 4
  %tobool363 = icmp ne i32 %269, 0
  br i1 %tobool363, label %lor.lhs.false.364, label %if.then.367

lor.lhs.false.364:                                ; preds = %while.body.362
  %270 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %271 = load volatile %struct._PerlIO**, %struct._PerlIO*** @PL_rsfp, align 8
  %call365 = call i8* @S_filter_gets(%struct.sv* %270, %struct._PerlIO** %271, i64 0)
  store i8* %call365, i8** @PL_linestart, align 8
  store i8* %call365, i8** %s.addr, align 8
  store i8* %call365, i8** @PL_oldbufptr, align 8
  store i8* %call365, i8** @PL_oldoldbufptr, align 8
  %tobool366 = icmp ne i8* %call365, null
  br i1 %tobool366, label %if.end.369, label %if.then.367

if.then.367:                                      ; preds = %lor.lhs.false.364, %while.body.362
  %272 = load i32, i32* @PL_multi_start, align 4
  %273 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line368 = getelementptr inbounds %struct.cop, %struct.cop* %273, i32 0, i32 13
  store i32 %272, i32* %cop_line368, align 4
  call void @S_missingterm(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i32 0))
  br label %if.end.369

if.end.369:                                       ; preds = %if.then.367, %lor.lhs.false.364
  %274 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line370 = getelementptr inbounds %struct.cop, %struct.cop* %274, i32 0, i32 13
  %275 = load i32, i32* %cop_line370, align 4
  %inc371 = add i32 %275, 1
  store i32 %inc371, i32* %cop_line370, align 4
  %276 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_any372 = getelementptr inbounds %struct.sv, %struct.sv* %276, i32 0, i32 0
  %277 = load i8*, i8** %sv_any372, align 8
  %278 = bitcast i8* %277 to %struct.xpv*
  %xpv_pv373 = getelementptr inbounds %struct.xpv, %struct.xpv* %278, i32 0, i32 0
  %279 = load i8*, i8** %xpv_pv373, align 8
  %280 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_any374 = getelementptr inbounds %struct.sv, %struct.sv* %280, i32 0, i32 0
  %281 = load i8*, i8** %sv_any374, align 8
  %282 = bitcast i8* %281 to %struct.xpv*
  %xpv_cur375 = getelementptr inbounds %struct.xpv, %struct.xpv* %282, i32 0, i32 1
  %283 = load i64, i64* %xpv_cur375, align 8
  %add.ptr376 = getelementptr inbounds i8, i8* %279, i64 %283
  store i8* %add.ptr376, i8** @PL_bufend, align 8
  store i8* null, i8** @PL_last_uni, align 8
  store i8* null, i8** @PL_last_lop, align 8
  %284 = load i8*, i8** @PL_bufend, align 8
  %285 = load i8*, i8** @PL_linestart, align 8
  %sub.ptr.lhs.cast377 = ptrtoint i8* %284 to i64
  %sub.ptr.rhs.cast378 = ptrtoint i8* %285 to i64
  %sub.ptr.sub379 = sub i64 %sub.ptr.lhs.cast377, %sub.ptr.rhs.cast378
  %cmp380 = icmp sge i64 %sub.ptr.sub379, 2
  br i1 %cmp380, label %if.then.382, label %if.else.422

if.then.382:                                      ; preds = %if.end.369
  %286 = load i8*, i8** @PL_bufend, align 8
  %arrayidx383 = getelementptr inbounds i8, i8* %286, i64 -2
  %287 = load i8, i8* %arrayidx383, align 1
  %conv384 = sext i8 %287 to i32
  %cmp385 = icmp eq i32 %conv384, 13
  br i1 %cmp385, label %land.lhs.true.387, label %lor.lhs.false.392

land.lhs.true.387:                                ; preds = %if.then.382
  %288 = load i8*, i8** @PL_bufend, align 8
  %arrayidx388 = getelementptr inbounds i8, i8* %288, i64 -1
  %289 = load i8, i8* %arrayidx388, align 1
  %conv389 = sext i8 %289 to i32
  %cmp390 = icmp eq i32 %conv389, 10
  br i1 %cmp390, label %if.then.402, label %lor.lhs.false.392

lor.lhs.false.392:                                ; preds = %land.lhs.true.387, %if.then.382
  %290 = load i8*, i8** @PL_bufend, align 8
  %arrayidx393 = getelementptr inbounds i8, i8* %290, i64 -2
  %291 = load i8, i8* %arrayidx393, align 1
  %conv394 = sext i8 %291 to i32
  %cmp395 = icmp eq i32 %conv394, 10
  br i1 %cmp395, label %land.lhs.true.397, label %if.else.413

land.lhs.true.397:                                ; preds = %lor.lhs.false.392
  %292 = load i8*, i8** @PL_bufend, align 8
  %arrayidx398 = getelementptr inbounds i8, i8* %292, i64 -1
  %293 = load i8, i8* %arrayidx398, align 1
  %conv399 = sext i8 %293 to i32
  %cmp400 = icmp eq i32 %conv399, 13
  br i1 %cmp400, label %if.then.402, label %if.else.413

if.then.402:                                      ; preds = %land.lhs.true.397, %land.lhs.true.387
  %294 = load i8*, i8** @PL_bufend, align 8
  %arrayidx403 = getelementptr inbounds i8, i8* %294, i64 -2
  store i8 10, i8* %arrayidx403, align 1
  %295 = load i8*, i8** @PL_bufend, align 8
  %incdec.ptr404 = getelementptr inbounds i8, i8* %295, i32 -1
  store i8* %incdec.ptr404, i8** @PL_bufend, align 8
  %296 = load i8*, i8** @PL_bufend, align 8
  %297 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_any406 = getelementptr inbounds %struct.sv, %struct.sv* %297, i32 0, i32 0
  %298 = load i8*, i8** %sv_any406, align 8
  %299 = bitcast i8* %298 to %struct.xpv*
  %xpv_pv407 = getelementptr inbounds %struct.xpv, %struct.xpv* %299, i32 0, i32 0
  %300 = load i8*, i8** %xpv_pv407, align 8
  %sub.ptr.lhs.cast408 = ptrtoint i8* %296 to i64
  %sub.ptr.rhs.cast409 = ptrtoint i8* %300 to i64
  %sub.ptr.sub410 = sub i64 %sub.ptr.lhs.cast408, %sub.ptr.rhs.cast409
  %301 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_any411 = getelementptr inbounds %struct.sv, %struct.sv* %301, i32 0, i32 0
  %302 = load i8*, i8** %sv_any411, align 8
  %303 = bitcast i8* %302 to %struct.xpv*
  %xpv_cur412 = getelementptr inbounds %struct.xpv, %struct.xpv* %303, i32 0, i32 1
  store i64 %sub.ptr.sub410, i64* %xpv_cur412, align 8
  store i64 %sub.ptr.sub410, i64* %tmp405
  %304 = load i64, i64* %tmp405
  br label %if.end.421

if.else.413:                                      ; preds = %land.lhs.true.397, %lor.lhs.false.392
  %305 = load i8*, i8** @PL_bufend, align 8
  %arrayidx414 = getelementptr inbounds i8, i8* %305, i64 -1
  %306 = load i8, i8* %arrayidx414, align 1
  %conv415 = sext i8 %306 to i32
  %cmp416 = icmp eq i32 %conv415, 13
  br i1 %cmp416, label %if.then.418, label %if.end.420

if.then.418:                                      ; preds = %if.else.413
  %307 = load i8*, i8** @PL_bufend, align 8
  %arrayidx419 = getelementptr inbounds i8, i8* %307, i64 -1
  store i8 10, i8* %arrayidx419, align 1
  br label %if.end.420

if.end.420:                                       ; preds = %if.then.418, %if.else.413
  br label %if.end.421

if.end.421:                                       ; preds = %if.end.420, %if.then.402
  br label %if.end.436

if.else.422:                                      ; preds = %if.end.369
  %308 = load i8*, i8** @PL_bufend, align 8
  %309 = load i8*, i8** @PL_linestart, align 8
  %sub.ptr.lhs.cast423 = ptrtoint i8* %308 to i64
  %sub.ptr.rhs.cast424 = ptrtoint i8* %309 to i64
  %sub.ptr.sub425 = sub i64 %sub.ptr.lhs.cast423, %sub.ptr.rhs.cast424
  %cmp426 = icmp eq i64 %sub.ptr.sub425, 1
  br i1 %cmp426, label %land.lhs.true.428, label %if.end.435

land.lhs.true.428:                                ; preds = %if.else.422
  %310 = load i8*, i8** @PL_bufend, align 8
  %arrayidx429 = getelementptr inbounds i8, i8* %310, i64 -1
  %311 = load i8, i8* %arrayidx429, align 1
  %conv430 = sext i8 %311 to i32
  %cmp431 = icmp eq i32 %conv430, 13
  br i1 %cmp431, label %if.then.433, label %if.end.435

if.then.433:                                      ; preds = %land.lhs.true.428
  %312 = load i8*, i8** @PL_bufend, align 8
  %arrayidx434 = getelementptr inbounds i8, i8* %312, i64 -1
  store i8 10, i8* %arrayidx434, align 1
  br label %if.end.435

if.end.435:                                       ; preds = %if.then.433, %land.lhs.true.428, %if.else.422
  br label %if.end.436

if.end.436:                                       ; preds = %if.end.435, %if.end.421
  %313 = load i32, i32* @PL_perldb, align 4
  %tobool437 = icmp ne i32 %313, 0
  br i1 %tobool437, label %land.lhs.true.438, label %if.end.468

land.lhs.true.438:                                ; preds = %if.end.436
  %314 = load i32, i32* @PL_perldb, align 4
  %and439 = and i32 %314, 2
  %tobool440 = icmp ne i32 %and439, 0
  br i1 %tobool440, label %land.lhs.true.441, label %if.end.468

land.lhs.true.441:                                ; preds = %land.lhs.true.438
  %315 = load %struct.hv*, %struct.hv** @PL_curstash, align 8
  %316 = load %struct.hv*, %struct.hv** @PL_debstash, align 8
  %cmp442 = icmp ne %struct.hv* %315, %316
  br i1 %cmp442, label %if.then.444, label %if.end.468

if.then.444:                                      ; preds = %land.lhs.true.441
  %call446 = call %struct.sv* @Perl_newSV(i64 0)
  store %struct.sv* %call446, %struct.sv** %sv, align 8
  %317 = load %struct.sv*, %struct.sv** %sv, align 8
  %call447 = call signext i8 @Perl_sv_upgrade(%struct.sv* %317, i32 7)
  %318 = load %struct.sv*, %struct.sv** %sv, align 8
  %319 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  call void @Perl_sv_setsv_flags(%struct.sv* %318, %struct.sv* %319, i32 2)
  %320 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags448 = getelementptr inbounds %struct.sv, %struct.sv* %320, i32 0, i32 2
  %321 = load i32, i32* %sv_flags448, align 4
  %and449 = and i32 %321, 2097152
  %tobool450 = icmp ne i32 %and449, 0
  br i1 %tobool450, label %land.rhs.451, label %land.end.454

land.rhs.451:                                     ; preds = %if.then.444
  %322 = load %struct.sv*, %struct.sv** %sv, align 8
  %call452 = call i32 @Perl_sv_backoff(%struct.sv* %322)
  %tobool453 = icmp ne i32 %call452, 0
  br label %land.end.454

land.end.454:                                     ; preds = %land.rhs.451, %if.then.444
  %323 = phi i1 [ false, %if.then.444 ], [ %tobool453, %land.rhs.451 ]
  %land.ext455 = zext i1 %323 to i32
  %324 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags456 = getelementptr inbounds %struct.sv, %struct.sv* %324, i32 0, i32 2
  %325 = load i32, i32* %sv_flags456, align 4
  %or = or i32 %325, 16842752
  store i32 %or, i32* %sv_flags456, align 4
  %326 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any457 = getelementptr inbounds %struct.sv, %struct.sv* %326, i32 0, i32 0
  %327 = load i8*, i8** %sv_any457, align 8
  %328 = bitcast i8* %327 to %struct.xpviv*
  %xiv_iv458 = getelementptr inbounds %struct.xpviv, %struct.xpviv* %328, i32 0, i32 3
  store i64 0, i64* %xiv_iv458, align 8
  %329 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_filegv = getelementptr inbounds %struct.cop, %struct.cop* %329, i32 0, i32 10
  %330 = load %struct.gv*, %struct.gv** %cop_filegv, align 8
  %tobool459 = icmp ne %struct.gv* %330, null
  br i1 %tobool459, label %cond.true.460, label %cond.false.463

cond.true.460:                                    ; preds = %land.end.454
  %331 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_filegv461 = getelementptr inbounds %struct.cop, %struct.cop* %331, i32 0, i32 10
  %332 = load %struct.gv*, %struct.gv** %cop_filegv461, align 8
  %sv_any462 = getelementptr inbounds %struct.gv, %struct.gv* %332, i32 0, i32 0
  %333 = load %struct.xpvgv*, %struct.xpvgv** %sv_any462, align 8
  %xgv_gp = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %333, i32 0, i32 7
  %334 = load %struct.gp*, %struct.gp** %xgv_gp, align 8
  %gp_av = getelementptr inbounds %struct.gp, %struct.gp* %334, i32 0, i32 4
  %335 = load %struct.av*, %struct.av** %gp_av, align 8
  br label %cond.end.464

cond.false.463:                                   ; preds = %land.end.454
  br label %cond.end.464

cond.end.464:                                     ; preds = %cond.false.463, %cond.true.460
  %cond465 = phi %struct.av* [ %335, %cond.true.460 ], [ null, %cond.false.463 ]
  %336 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line466 = getelementptr inbounds %struct.cop, %struct.cop* %336, i32 0, i32 13
  %337 = load i32, i32* %cop_line466, align 4
  %338 = load %struct.sv*, %struct.sv** %sv, align 8
  %call467 = call %struct.sv** @Perl_av_store(%struct.av* %cond465, i32 %337, %struct.sv* %338)
  br label %if.end.468

if.end.468:                                       ; preds = %cond.end.464, %land.lhs.true.441, %land.lhs.true.438, %if.end.436
  %339 = load i8*, i8** %s.addr, align 8
  %340 = load i8, i8* %339, align 1
  %conv469 = sext i8 %340 to i32
  %341 = load i8, i8* %term, align 1
  %conv470 = sext i8 %341 to i32
  %cmp471 = icmp eq i32 %conv469, %conv470
  br i1 %cmp471, label %land.lhs.true.473, label %if.else.496

land.lhs.true.473:                                ; preds = %if.end.468
  %342 = load i8*, i8** %s.addr, align 8
  %343 = load i32, i32* %len, align 4
  %conv474 = sext i32 %343 to i64
  %call475 = call i32 @memcmp(i8* %342, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i32 0), i64 %conv474)
  %tobool476 = icmp ne i32 %call475, 0
  br i1 %tobool476, label %if.else.496, label %if.then.477

if.then.477:                                      ; preds = %land.lhs.true.473
  %344 = load i8*, i8** @PL_bufend, align 8
  %add.ptr479 = getelementptr inbounds i8, i8* %344, i64 -1
  %345 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_any480 = getelementptr inbounds %struct.sv, %struct.sv* %345, i32 0, i32 0
  %346 = load i8*, i8** %sv_any480, align 8
  %347 = bitcast i8* %346 to %struct.xpv*
  %xpv_pv481 = getelementptr inbounds %struct.xpv, %struct.xpv* %347, i32 0, i32 0
  %348 = load i8*, i8** %xpv_pv481, align 8
  %sub.ptr.lhs.cast482 = ptrtoint i8* %add.ptr479 to i64
  %sub.ptr.rhs.cast483 = ptrtoint i8* %348 to i64
  %sub.ptr.sub484 = sub i64 %sub.ptr.lhs.cast482, %sub.ptr.rhs.cast483
  store i64 %sub.ptr.sub484, i64* %off, align 8
  %349 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_any485 = getelementptr inbounds %struct.sv, %struct.sv* %349, i32 0, i32 0
  %350 = load i8*, i8** %sv_any485, align 8
  %351 = bitcast i8* %350 to %struct.xpv*
  %xpv_pv486 = getelementptr inbounds %struct.xpv, %struct.xpv* %351, i32 0, i32 0
  %352 = load i8*, i8** %xpv_pv486, align 8
  %353 = load i64, i64* %off, align 8
  %add.ptr487 = getelementptr inbounds i8, i8* %352, i64 %353
  store i8 32, i8* %add.ptr487, align 1
  %354 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %355 = load %struct.sv*, %struct.sv** %herewas, align 8
  call void @Perl_sv_catsv_flags(%struct.sv* %354, %struct.sv* %355, i32 2)
  %356 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_any488 = getelementptr inbounds %struct.sv, %struct.sv* %356, i32 0, i32 0
  %357 = load i8*, i8** %sv_any488, align 8
  %358 = bitcast i8* %357 to %struct.xpv*
  %xpv_pv489 = getelementptr inbounds %struct.xpv, %struct.xpv* %358, i32 0, i32 0
  %359 = load i8*, i8** %xpv_pv489, align 8
  %360 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_any490 = getelementptr inbounds %struct.sv, %struct.sv* %360, i32 0, i32 0
  %361 = load i8*, i8** %sv_any490, align 8
  %362 = bitcast i8* %361 to %struct.xpv*
  %xpv_cur491 = getelementptr inbounds %struct.xpv, %struct.xpv* %362, i32 0, i32 1
  %363 = load i64, i64* %xpv_cur491, align 8
  %add.ptr492 = getelementptr inbounds i8, i8* %359, i64 %363
  store i8* %add.ptr492, i8** @PL_bufend, align 8
  %364 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_any493 = getelementptr inbounds %struct.sv, %struct.sv* %364, i32 0, i32 0
  %365 = load i8*, i8** %sv_any493, align 8
  %366 = bitcast i8* %365 to %struct.xpv*
  %xpv_pv494 = getelementptr inbounds %struct.xpv, %struct.xpv* %366, i32 0, i32 0
  %367 = load i8*, i8** %xpv_pv494, align 8
  %368 = load i64, i64* %off, align 8
  %add.ptr495 = getelementptr inbounds i8, i8* %367, i64 %368
  store i8* %add.ptr495, i8** %s.addr, align 8
  br label %if.end.497

if.else.496:                                      ; preds = %land.lhs.true.473, %if.end.468
  %369 = load i8*, i8** @PL_bufend, align 8
  store i8* %369, i8** %s.addr, align 8
  %370 = load %struct.sv*, %struct.sv** %tmpstr, align 8
  %371 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  call void @Perl_sv_catsv_flags(%struct.sv* %370, %struct.sv* %371, i32 2)
  br label %if.end.497

if.end.497:                                       ; preds = %if.else.496, %if.then.477
  br label %while.cond.359

while.end.498:                                    ; preds = %while.cond.359
  %372 = load i8*, i8** %s.addr, align 8
  %incdec.ptr499 = getelementptr inbounds i8, i8* %372, i32 1
  store i8* %incdec.ptr499, i8** %s.addr, align 8
  br label %retval.500

retval.500:                                       ; preds = %while.end.498, %if.end.285
  %373 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line501 = getelementptr inbounds %struct.cop, %struct.cop* %373, i32 0, i32 13
  %374 = load i32, i32* %cop_line501, align 4
  store i32 %374, i32* @PL_multi_end, align 4
  %375 = load %struct.sv*, %struct.sv** %tmpstr, align 8
  %sv_any502 = getelementptr inbounds %struct.sv, %struct.sv* %375, i32 0, i32 0
  %376 = load i8*, i8** %sv_any502, align 8
  %377 = bitcast i8* %376 to %struct.xpv*
  %xpv_cur503 = getelementptr inbounds %struct.xpv, %struct.xpv* %377, i32 0, i32 1
  %378 = load i64, i64* %xpv_cur503, align 8
  %add504 = add i64 %378, 5
  %379 = load %struct.sv*, %struct.sv** %tmpstr, align 8
  %sv_any505 = getelementptr inbounds %struct.sv, %struct.sv* %379, i32 0, i32 0
  %380 = load i8*, i8** %sv_any505, align 8
  %381 = bitcast i8* %380 to %struct.xpv*
  %xpv_len = getelementptr inbounds %struct.xpv, %struct.xpv* %381, i32 0, i32 2
  %382 = load i64, i64* %xpv_len, align 8
  %cmp506 = icmp ult i64 %add504, %382
  br i1 %cmp506, label %if.then.508, label %if.end.523

if.then.508:                                      ; preds = %retval.500
  %383 = load %struct.sv*, %struct.sv** %tmpstr, align 8
  %sv_any510 = getelementptr inbounds %struct.sv, %struct.sv* %383, i32 0, i32 0
  %384 = load i8*, i8** %sv_any510, align 8
  %385 = bitcast i8* %384 to %struct.xpv*
  %xpv_cur511 = getelementptr inbounds %struct.xpv, %struct.xpv* %385, i32 0, i32 1
  %386 = load i64, i64* %xpv_cur511, align 8
  %add512 = add i64 %386, 1
  %387 = load %struct.sv*, %struct.sv** %tmpstr, align 8
  %sv_any513 = getelementptr inbounds %struct.sv, %struct.sv* %387, i32 0, i32 0
  %388 = load i8*, i8** %sv_any513, align 8
  %389 = bitcast i8* %388 to %struct.xpv*
  %xpv_len514 = getelementptr inbounds %struct.xpv, %struct.xpv* %389, i32 0, i32 2
  store i64 %add512, i64* %xpv_len514, align 8
  store i64 %add512, i64* %tmp509
  %390 = load i64, i64* %tmp509
  %391 = load %struct.sv*, %struct.sv** %tmpstr, align 8
  %sv_any515 = getelementptr inbounds %struct.sv, %struct.sv* %391, i32 0, i32 0
  %392 = load i8*, i8** %sv_any515, align 8
  %393 = bitcast i8* %392 to %struct.xpv*
  %xpv_pv516 = getelementptr inbounds %struct.xpv, %struct.xpv* %393, i32 0, i32 0
  %394 = load i8*, i8** %xpv_pv516, align 8
  %395 = load %struct.sv*, %struct.sv** %tmpstr, align 8
  %sv_any517 = getelementptr inbounds %struct.sv, %struct.sv* %395, i32 0, i32 0
  %396 = load i8*, i8** %sv_any517, align 8
  %397 = bitcast i8* %396 to %struct.xpv*
  %xpv_len518 = getelementptr inbounds %struct.xpv, %struct.xpv* %397, i32 0, i32 2
  %398 = load i64, i64* %xpv_len518, align 8
  %mul519 = mul i64 %398, 1
  %call520 = call i8* @Perl_safesysrealloc(i8* %394, i64 %mul519)
  %399 = load %struct.sv*, %struct.sv** %tmpstr, align 8
  %sv_any521 = getelementptr inbounds %struct.sv, %struct.sv* %399, i32 0, i32 0
  %400 = load i8*, i8** %sv_any521, align 8
  %401 = bitcast i8* %400 to %struct.xpv*
  %xpv_pv522 = getelementptr inbounds %struct.xpv, %struct.xpv* %401, i32 0, i32 0
  store i8* %call520, i8** %xpv_pv522, align 8
  br label %if.end.523

if.end.523:                                       ; preds = %if.then.508, %retval.500
  %402 = load %struct.sv*, %struct.sv** %herewas, align 8
  call void @Perl_sv_free(%struct.sv* %402)
  %403 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private524 = getelementptr inbounds %struct.cop, %struct.cop* %403, i32 0, i32 7
  %404 = load i8, i8* %op_private524, align 1
  %conv525 = zext i8 %404 to i32
  %and526 = and i32 %conv525, 8
  %tobool527 = icmp ne i32 %and526, 0
  br i1 %tobool527, label %if.end.559, label %if.then.528

if.then.528:                                      ; preds = %if.end.523
  %405 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %tobool529 = icmp ne %struct.sv* %405, null
  br i1 %tobool529, label %land.lhs.true.530, label %lor.lhs.false.539

land.lhs.true.530:                                ; preds = %if.then.528
  %406 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_flags531 = getelementptr inbounds %struct.sv, %struct.sv* %406, i32 0, i32 2
  %407 = load i32, i32* %sv_flags531, align 4
  %and532 = and i32 %407, 536870912
  %tobool533 = icmp ne i32 %and532, 0
  br i1 %tobool533, label %land.lhs.true.534, label %lor.lhs.false.539

land.lhs.true.534:                                ; preds = %land.lhs.true.530
  %408 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private535 = getelementptr inbounds %struct.cop, %struct.cop* %408, i32 0, i32 7
  %409 = load i8, i8* %op_private535, align 1
  %conv536 = zext i8 %409 to i32
  %and537 = and i32 %conv536, 8
  %tobool538 = icmp ne i32 %and537, 0
  br i1 %tobool538, label %lor.lhs.false.539, label %land.lhs.true.542

lor.lhs.false.539:                                ; preds = %land.lhs.true.534, %land.lhs.true.530, %if.then.528
  %410 = load i32, i32* @PL_hints, align 4
  %and540 = and i32 %410, 8388608
  %tobool541 = icmp ne i32 %and540, 0
  br i1 %tobool541, label %land.lhs.true.542, label %if.else.553

land.lhs.true.542:                                ; preds = %lor.lhs.false.539, %land.lhs.true.534
  %411 = load %struct.sv*, %struct.sv** %tmpstr, align 8
  %sv_any543 = getelementptr inbounds %struct.sv, %struct.sv* %411, i32 0, i32 0
  %412 = load i8*, i8** %sv_any543, align 8
  %413 = bitcast i8* %412 to %struct.xpv*
  %xpv_pv544 = getelementptr inbounds %struct.xpv, %struct.xpv* %413, i32 0, i32 0
  %414 = load i8*, i8** %xpv_pv544, align 8
  %415 = load %struct.sv*, %struct.sv** %tmpstr, align 8
  %sv_any545 = getelementptr inbounds %struct.sv, %struct.sv* %415, i32 0, i32 0
  %416 = load i8*, i8** %sv_any545, align 8
  %417 = bitcast i8* %416 to %struct.xpv*
  %xpv_cur546 = getelementptr inbounds %struct.xpv, %struct.xpv* %417, i32 0, i32 1
  %418 = load i64, i64* %xpv_cur546, align 8
  %call547 = call signext i8 @Perl_is_utf8_string(i8* %414, i64 %418)
  %conv548 = sext i8 %call547 to i32
  %tobool549 = icmp ne i32 %conv548, 0
  br i1 %tobool549, label %if.then.550, label %if.else.553

if.then.550:                                      ; preds = %land.lhs.true.542
  %419 = load %struct.sv*, %struct.sv** %tmpstr, align 8
  %sv_flags551 = getelementptr inbounds %struct.sv, %struct.sv* %419, i32 0, i32 2
  %420 = load i32, i32* %sv_flags551, align 4
  %or552 = or i32 %420, 536870912
  store i32 %or552, i32* %sv_flags551, align 4
  br label %if.end.558

if.else.553:                                      ; preds = %land.lhs.true.542, %lor.lhs.false.539
  %421 = load %struct.sv*, %struct.sv** @PL_encoding, align 8
  %tobool554 = icmp ne %struct.sv* %421, null
  br i1 %tobool554, label %if.then.555, label %if.end.557

if.then.555:                                      ; preds = %if.else.553
  %422 = load %struct.sv*, %struct.sv** %tmpstr, align 8
  %423 = load %struct.sv*, %struct.sv** @PL_encoding, align 8
  %call556 = call i8* @Perl_sv_recode_to_utf8(%struct.sv* %422, %struct.sv* %423)
  br label %if.end.557

if.end.557:                                       ; preds = %if.then.555, %if.else.553
  br label %if.end.558

if.end.558:                                       ; preds = %if.end.557, %if.then.550
  br label %if.end.559

if.end.559:                                       ; preds = %if.end.558, %if.end.523
  %424 = load %struct.sv*, %struct.sv** %tmpstr, align 8
  store %struct.sv* %424, %struct.sv** @PL_lex_stuff, align 8
  %425 = load i32, i32* %op_type, align 4
  store i32 %425, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  %426 = load i8*, i8** %s.addr, align 8
  ret i8* %426
}

; Function Attrs: nounwind uwtable
define internal i8* @S_scan_inputsymbol(i8* %start) #0 {
entry:
  %retval = alloca i8*, align 8
  %start.addr = alloca i8*, align 8
  %s = alloca i8*, align 8
  %d = alloca i8*, align 8
  %e = alloca i8*, align 8
  %end = alloca i8*, align 8
  %len = alloca i32, align 4
  %readline_overriden = alloca i8, align 1
  %gv_readline = alloca %struct.gv*, align 8
  %gvp = alloca %struct.gv**, align 8
  %tmp = alloca i32, align 4
  %sym = alloca %struct.sv*, align 8
  %o = alloca %struct.op*, align 8
  %gv = alloca %struct.gv*, align 8
  %gv191 = alloca %struct.gv*, align 8
  store i8* %start, i8** %start.addr, align 8
  %0 = load i8*, i8** %start.addr, align 8
  store i8* %0, i8** %s, align 8
  store i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i32 0), i8** %d, align 8
  store i8* getelementptr inbounds (i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i32 0), i64 256), i8** %e, align 8
  %1 = load i8*, i8** %s, align 8
  %call = call i8* @strchr(i8* %1, i32 10)
  store i8* %call, i8** %end, align 8
  %2 = load i8*, i8** %end, align 8
  %tobool = icmp ne i8* %2, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %3 = load i8*, i8** @PL_bufend, align 8
  store i8* %3, i8** %end, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %4 = load i8*, i8** %d, align 8
  %5 = load i8*, i8** %e, align 8
  %6 = load i8*, i8** %s, align 8
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 1
  %7 = load i8*, i8** %end, align 8
  %call1 = call i8* @Perl_delimcpy(i8* %4, i8* %5, i8* %add.ptr, i8* %7, i32 62, i32* %len)
  store i8* %call1, i8** %s, align 8
  %8 = load i32, i32* %len, align 4
  %conv = sext i32 %8 to i64
  %cmp = icmp uge i64 %conv, 256
  br i1 %cmp, label %if.then.3, label %if.end.4

if.then.3:                                        ; preds = %if.end
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.224, i32 0, i32 0))
  br label %if.end.4

if.end.4:                                         ; preds = %if.then.3, %if.end
  %9 = load i8*, i8** %s, align 8
  %10 = load i8*, i8** %end, align 8
  %cmp5 = icmp uge i8* %9, %10
  br i1 %cmp5, label %if.then.7, label %if.end.8

if.then.7:                                        ; preds = %if.end.4
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.225, i32 0, i32 0))
  br label %if.end.8

if.end.8:                                         ; preds = %if.then.7, %if.end.4
  %11 = load i8*, i8** %s, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %11, i32 1
  store i8* %incdec.ptr, i8** %s, align 8
  %12 = load i8*, i8** %d, align 8
  %13 = load i8, i8* %12, align 1
  %conv9 = sext i8 %13 to i32
  %cmp10 = icmp eq i32 %conv9, 36
  br i1 %cmp10, label %land.lhs.true, label %if.end.16

land.lhs.true:                                    ; preds = %if.end.8
  %14 = load i8*, i8** %d, align 8
  %arrayidx = getelementptr inbounds i8, i8* %14, i64 1
  %15 = load i8, i8* %arrayidx, align 1
  %conv12 = sext i8 %15 to i32
  %tobool13 = icmp ne i32 %conv12, 0
  br i1 %tobool13, label %if.then.14, label %if.end.16

if.then.14:                                       ; preds = %land.lhs.true
  %16 = load i8*, i8** %d, align 8
  %incdec.ptr15 = getelementptr inbounds i8, i8* %16, i32 1
  store i8* %incdec.ptr15, i8** %d, align 8
  br label %if.end.16

if.end.16:                                        ; preds = %if.then.14, %land.lhs.true, %if.end.8
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end.16
  %17 = load i8*, i8** %d, align 8
  %18 = load i8, i8* %17, align 1
  %conv17 = sext i8 %18 to i32
  %tobool18 = icmp ne i32 %conv17, 0
  br i1 %tobool18, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %19 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private = getelementptr inbounds %struct.cop, %struct.cop* %19, i32 0, i32 7
  %20 = load i8, i8* %op_private, align 1
  %conv19 = zext i8 %20 to i32
  %and = and i32 %conv19, 8
  %tobool20 = icmp ne i32 %and, 0
  br i1 %tobool20, label %cond.true, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.rhs
  %21 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %tobool21 = icmp ne %struct.sv* %21, null
  br i1 %tobool21, label %land.lhs.true.22, label %lor.lhs.false.30

land.lhs.true.22:                                 ; preds = %lor.lhs.false
  %22 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %22, i32 0, i32 2
  %23 = load i32, i32* %sv_flags, align 4
  %and23 = and i32 %23, 536870912
  %tobool24 = icmp ne i32 %and23, 0
  br i1 %tobool24, label %land.lhs.true.25, label %lor.lhs.false.30

land.lhs.true.25:                                 ; preds = %land.lhs.true.22
  %24 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private26 = getelementptr inbounds %struct.cop, %struct.cop* %24, i32 0, i32 7
  %25 = load i8, i8* %op_private26, align 1
  %conv27 = zext i8 %25 to i32
  %and28 = and i32 %conv27, 8
  %tobool29 = icmp ne i32 %and28, 0
  br i1 %tobool29, label %lor.lhs.false.30, label %lor.lhs.false.33

lor.lhs.false.30:                                 ; preds = %land.lhs.true.25, %land.lhs.true.22, %lor.lhs.false
  %26 = load i32, i32* @PL_hints, align 4
  %and31 = and i32 %26, 8388608
  %tobool32 = icmp ne i32 %and31, 0
  br i1 %tobool32, label %lor.lhs.false.33, label %cond.true

lor.lhs.false.33:                                 ; preds = %lor.lhs.false.30, %land.lhs.true.25
  %27 = load i8*, i8** %d, align 8
  %28 = load i8, i8* %27, align 1
  %conv34 = zext i8 %28 to i32
  %cmp35 = icmp slt i32 %conv34, 192
  br i1 %cmp35, label %cond.true, label %cond.false

cond.true:                                        ; preds = %lor.lhs.false.33, %lor.lhs.false.30, %land.rhs
  %29 = load i8*, i8** %d, align 8
  %30 = load i8, i8* %29, align 1
  %conv37 = sext i8 %30 to i32
  %cmp38 = icmp sge i32 %conv37, 65
  br i1 %cmp38, label %land.lhs.true.40, label %lor.lhs.false.44

land.lhs.true.40:                                 ; preds = %cond.true
  %31 = load i8*, i8** %d, align 8
  %32 = load i8, i8* %31, align 1
  %conv41 = sext i8 %32 to i32
  %cmp42 = icmp sle i32 %conv41, 90
  br i1 %cmp42, label %lor.end, label %lor.lhs.false.44

lor.lhs.false.44:                                 ; preds = %land.lhs.true.40, %cond.true
  %33 = load i8*, i8** %d, align 8
  %34 = load i8, i8* %33, align 1
  %conv45 = sext i8 %34 to i32
  %cmp46 = icmp sge i32 %conv45, 97
  br i1 %cmp46, label %land.lhs.true.48, label %lor.lhs.false.52

land.lhs.true.48:                                 ; preds = %lor.lhs.false.44
  %35 = load i8*, i8** %d, align 8
  %36 = load i8, i8* %35, align 1
  %conv49 = sext i8 %36 to i32
  %cmp50 = icmp sle i32 %conv49, 122
  br i1 %cmp50, label %lor.end, label %lor.lhs.false.52

lor.lhs.false.52:                                 ; preds = %land.lhs.true.48, %lor.lhs.false.44
  %37 = load i8*, i8** %d, align 8
  %38 = load i8, i8* %37, align 1
  %conv53 = sext i8 %38 to i32
  %cmp54 = icmp sge i32 %conv53, 48
  br i1 %cmp54, label %land.lhs.true.56, label %lor.lhs.false.60

land.lhs.true.56:                                 ; preds = %lor.lhs.false.52
  %39 = load i8*, i8** %d, align 8
  %40 = load i8, i8* %39, align 1
  %conv57 = sext i8 %40 to i32
  %cmp58 = icmp sle i32 %conv57, 57
  br i1 %cmp58, label %lor.end, label %lor.lhs.false.60

lor.lhs.false.60:                                 ; preds = %land.lhs.true.56, %lor.lhs.false.52
  %41 = load i8*, i8** %d, align 8
  %42 = load i8, i8* %41, align 1
  %conv61 = sext i8 %42 to i32
  %cmp62 = icmp eq i32 %conv61, 95
  br i1 %cmp62, label %lor.end, label %lor.lhs.false.67

cond.false:                                       ; preds = %lor.lhs.false.33
  %43 = load i8*, i8** %d, align 8
  %call64 = call signext i8 @Perl_is_utf8_alnum(i8* %43)
  %conv65 = sext i8 %call64 to i32
  %tobool66 = icmp ne i32 %conv65, 0
  br i1 %tobool66, label %lor.end, label %lor.lhs.false.67

lor.lhs.false.67:                                 ; preds = %cond.false, %lor.lhs.false.60
  %44 = load i8*, i8** %d, align 8
  %45 = load i8, i8* %44, align 1
  %conv68 = sext i8 %45 to i32
  %cmp69 = icmp eq i32 %conv68, 39
  br i1 %cmp69, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %lor.lhs.false.67
  %46 = load i8*, i8** %d, align 8
  %47 = load i8, i8* %46, align 1
  %conv71 = sext i8 %47 to i32
  %cmp72 = icmp eq i32 %conv71, 58
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false.67, %cond.false, %lor.lhs.false.60, %land.lhs.true.56, %land.lhs.true.48, %land.lhs.true.40
  %48 = phi i1 [ true, %lor.lhs.false.67 ], [ true, %cond.false ], [ true, %lor.lhs.false.60 ], [ true, %land.lhs.true.56 ], [ true, %land.lhs.true.48 ], [ true, %land.lhs.true.40 ], [ %cmp72, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %while.cond
  %49 = phi i1 [ false, %while.cond ], [ %48, %lor.end ]
  br i1 %49, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %50 = load i8*, i8** %d, align 8
  %incdec.ptr74 = getelementptr inbounds i8, i8* %50, i32 1
  store i8* %incdec.ptr74, i8** %d, align 8
  br label %while.cond

while.end:                                        ; preds = %land.end
  %51 = load i8*, i8** %d, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %51 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, ptrtoint ([256 x i8]* @PL_tokenbuf to i64)
  %52 = load i32, i32* %len, align 4
  %conv75 = sext i32 %52 to i64
  %cmp76 = icmp ne i64 %sub.ptr.sub, %conv75
  br i1 %cmp76, label %if.then.78, label %if.else

if.then.78:                                       ; preds = %while.end
  store i32 25, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  call void @S_set_csh()
  %53 = load i8*, i8** %start.addr, align 8
  %call79 = call i8* @S_scan_str(i8* %53, i32 0, i32 0)
  store i8* %call79, i8** %s, align 8
  %54 = load i8*, i8** %s, align 8
  %tobool80 = icmp ne i8* %54, null
  br i1 %tobool80, label %if.end.82, label %if.then.81

if.then.81:                                       ; preds = %if.then.78
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.226, i32 0, i32 0))
  br label %if.end.82

if.end.82:                                        ; preds = %if.then.81, %if.then.78
  %55 = load i8*, i8** %s, align 8
  store i8* %55, i8** %retval
  br label %return

if.else:                                          ; preds = %while.end
  store i8 0, i8* %readline_overriden, align 1
  store %struct.gv* null, %struct.gv** %gv_readline, align 8
  store i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i32 0), i8** %d, align 8
  %56 = load i32, i32* %len, align 4
  %tobool83 = icmp ne i32 %56, 0
  br i1 %tobool83, label %if.end.85, label %if.then.84

if.then.84:                                       ; preds = %if.else
  %57 = load i8*, i8** %d, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %57, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.227, i32 0, i32 0), i64 5, i32 1, i1 false)
  br label %if.end.85

if.end.85:                                        ; preds = %if.then.84, %if.else
  %call86 = call %struct.gv* @Perl_gv_fetchpv(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.228, i32 0, i32 0), i32 0, i32 12)
  store %struct.gv* %call86, %struct.gv** %gv_readline, align 8
  %tobool87 = icmp ne %struct.gv* %call86, null
  br i1 %tobool87, label %land.lhs.true.88, label %lor.lhs.false.100

land.lhs.true.88:                                 ; preds = %if.end.85
  %58 = load %struct.gv*, %struct.gv** %gv_readline, align 8
  %sv_any = getelementptr inbounds %struct.gv, %struct.gv* %58, i32 0, i32 0
  %59 = load %struct.xpvgv*, %struct.xpvgv** %sv_any, align 8
  %xgv_gp = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %59, i32 0, i32 7
  %60 = load %struct.gp*, %struct.gp** %xgv_gp, align 8
  %gp_cvgen = getelementptr inbounds %struct.gp, %struct.gp* %60, i32 0, i32 8
  %61 = load i32, i32* %gp_cvgen, align 4
  %tobool89 = icmp ne i32 %61, 0
  br i1 %tobool89, label %cond.true.90, label %cond.false.91

cond.true.90:                                     ; preds = %land.lhs.true.88
  br i1 false, label %land.lhs.true.95, label %lor.lhs.false.100

cond.false.91:                                    ; preds = %land.lhs.true.88
  %62 = load %struct.gv*, %struct.gv** %gv_readline, align 8
  %sv_any92 = getelementptr inbounds %struct.gv, %struct.gv* %62, i32 0, i32 0
  %63 = load %struct.xpvgv*, %struct.xpvgv** %sv_any92, align 8
  %xgv_gp93 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %63, i32 0, i32 7
  %64 = load %struct.gp*, %struct.gp** %xgv_gp93, align 8
  %gp_cv = getelementptr inbounds %struct.gp, %struct.gp* %64, i32 0, i32 7
  %65 = load %struct.cv*, %struct.cv** %gp_cv, align 8
  %tobool94 = icmp ne %struct.cv* %65, null
  br i1 %tobool94, label %land.lhs.true.95, label %lor.lhs.false.100

land.lhs.true.95:                                 ; preds = %cond.false.91, %cond.true.90
  %66 = load %struct.gv*, %struct.gv** %gv_readline, align 8
  %sv_any96 = getelementptr inbounds %struct.gv, %struct.gv* %66, i32 0, i32 0
  %67 = load %struct.xpvgv*, %struct.xpvgv** %sv_any96, align 8
  %xgv_flags = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %67, i32 0, i32 11
  %68 = load i8, i8* %xgv_flags, align 1
  %conv97 = zext i8 %68 to i32
  %and98 = and i32 %conv97, 128
  %tobool99 = icmp ne i32 %and98, 0
  br i1 %tobool99, label %if.then.123, label %lor.lhs.false.100

lor.lhs.false.100:                                ; preds = %land.lhs.true.95, %cond.false.91, %cond.true.90, %if.end.85
  %69 = load %struct.hv*, %struct.hv** @PL_globalstash, align 8
  %call101 = call %struct.sv** @Perl_hv_fetch(%struct.hv* %69, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.228, i32 0, i32 0), i32 8, i32 0)
  %70 = bitcast %struct.sv** %call101 to %struct.gv**
  store %struct.gv** %70, %struct.gv*** %gvp, align 8
  %tobool102 = icmp ne %struct.gv** %70, null
  br i1 %tobool102, label %land.lhs.true.103, label %if.end.124

land.lhs.true.103:                                ; preds = %lor.lhs.false.100
  %71 = load %struct.gv**, %struct.gv*** %gvp, align 8
  %72 = load %struct.gv*, %struct.gv** %71, align 8
  store %struct.gv* %72, %struct.gv** %gv_readline, align 8
  %cmp104 = icmp ne %struct.gv* %72, bitcast (%struct.sv* @PL_sv_undef to %struct.gv*)
  br i1 %cmp104, label %land.lhs.true.106, label %if.end.124

land.lhs.true.106:                                ; preds = %land.lhs.true.103
  %73 = load %struct.gv*, %struct.gv** %gv_readline, align 8
  %sv_any107 = getelementptr inbounds %struct.gv, %struct.gv* %73, i32 0, i32 0
  %74 = load %struct.xpvgv*, %struct.xpvgv** %sv_any107, align 8
  %xgv_gp108 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %74, i32 0, i32 7
  %75 = load %struct.gp*, %struct.gp** %xgv_gp108, align 8
  %gp_cvgen109 = getelementptr inbounds %struct.gp, %struct.gp* %75, i32 0, i32 8
  %76 = load i32, i32* %gp_cvgen109, align 4
  %tobool110 = icmp ne i32 %76, 0
  br i1 %tobool110, label %cond.true.111, label %cond.false.112

cond.true.111:                                    ; preds = %land.lhs.true.106
  br i1 false, label %land.lhs.true.117, label %if.end.124

cond.false.112:                                   ; preds = %land.lhs.true.106
  %77 = load %struct.gv*, %struct.gv** %gv_readline, align 8
  %sv_any113 = getelementptr inbounds %struct.gv, %struct.gv* %77, i32 0, i32 0
  %78 = load %struct.xpvgv*, %struct.xpvgv** %sv_any113, align 8
  %xgv_gp114 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %78, i32 0, i32 7
  %79 = load %struct.gp*, %struct.gp** %xgv_gp114, align 8
  %gp_cv115 = getelementptr inbounds %struct.gp, %struct.gp* %79, i32 0, i32 7
  %80 = load %struct.cv*, %struct.cv** %gp_cv115, align 8
  %tobool116 = icmp ne %struct.cv* %80, null
  br i1 %tobool116, label %land.lhs.true.117, label %if.end.124

land.lhs.true.117:                                ; preds = %cond.false.112, %cond.true.111
  %81 = load %struct.gv*, %struct.gv** %gv_readline, align 8
  %sv_any118 = getelementptr inbounds %struct.gv, %struct.gv* %81, i32 0, i32 0
  %82 = load %struct.xpvgv*, %struct.xpvgv** %sv_any118, align 8
  %xgv_flags119 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %82, i32 0, i32 11
  %83 = load i8, i8* %xgv_flags119, align 1
  %conv120 = zext i8 %83 to i32
  %and121 = and i32 %conv120, 128
  %tobool122 = icmp ne i32 %and121, 0
  br i1 %tobool122, label %if.then.123, label %if.end.124

if.then.123:                                      ; preds = %land.lhs.true.117, %land.lhs.true.95
  store i8 1, i8* %readline_overriden, align 1
  br label %if.end.124

if.end.124:                                       ; preds = %if.then.123, %land.lhs.true.117, %cond.false.112, %cond.true.111, %land.lhs.true.103, %lor.lhs.false.100
  %84 = load i8*, i8** %d, align 8
  %85 = load i8, i8* %84, align 1
  %conv125 = sext i8 %85 to i32
  %cmp126 = icmp eq i32 %conv125, 36
  br i1 %cmp126, label %if.then.128, label %if.else.189

if.then.128:                                      ; preds = %if.end.124
  %86 = load i8*, i8** %d, align 8
  %call129 = call i64 @Perl_pad_findmy(i8* %86)
  %conv130 = trunc i64 %call129 to i32
  store i32 %conv130, i32* %tmp, align 4
  %conv131 = sext i32 %conv130 to i64
  %cmp132 = icmp ne i64 %conv131, -1
  br i1 %cmp132, label %if.then.134, label %if.else.162

if.then.134:                                      ; preds = %if.then.128
  %87 = load %struct.av*, %struct.av** @PL_comppad_name, align 8
  %88 = load i32, i32* %tmp, align 4
  %call135 = call %struct.sv** @Perl_av_fetch(%struct.av* %87, i32 %88, i32 0)
  %89 = load %struct.sv*, %struct.sv** %call135, align 8
  %sv_flags136 = getelementptr inbounds %struct.sv, %struct.sv* %89, i32 0, i32 2
  %90 = load i32, i32* %sv_flags136, align 4
  %and137 = and i32 %90, -2147483648
  %tobool138 = icmp ne i32 %and137, 0
  br i1 %tobool138, label %if.then.139, label %if.else.148

if.then.139:                                      ; preds = %if.then.134
  %91 = load %struct.av*, %struct.av** @PL_comppad_name, align 8
  %92 = load i32, i32* %tmp, align 4
  %call141 = call %struct.sv** @Perl_av_fetch(%struct.av* %91, i32 %92, i32 0)
  %93 = load %struct.sv*, %struct.sv** %call141, align 8
  %sv_any142 = getelementptr inbounds %struct.sv, %struct.sv* %93, i32 0, i32 0
  %94 = load i8*, i8** %sv_any142, align 8
  %95 = bitcast i8* %94 to %struct.xpvgv*
  %xgv_stash = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %95, i32 0, i32 10
  %96 = load %struct.hv*, %struct.hv** %xgv_stash, align 8
  %sv_any143 = getelementptr inbounds %struct.hv, %struct.hv* %96, i32 0, i32 0
  %97 = load %struct.xpvhv*, %struct.xpvhv** %sv_any143, align 8
  %xhv_name = getelementptr inbounds %struct.xpvhv, %struct.xpvhv* %97, i32 0, i32 10
  %98 = load i8*, i8** %xhv_name, align 8
  %call144 = call %struct.sv* @Perl_newSVpv(i8* %98, i64 0)
  %call145 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call144)
  store %struct.sv* %call145, %struct.sv** %sym, align 8
  %99 = load %struct.sv*, %struct.sv** %sym, align 8
  call void @Perl_sv_catpvn_flags(%struct.sv* %99, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.75, i32 0, i32 0), i64 2, i32 2)
  %100 = load %struct.sv*, %struct.sv** %sym, align 8
  %101 = load i8*, i8** %d, align 8
  %add.ptr146 = getelementptr inbounds i8, i8* %101, i64 1
  call void @Perl_sv_catpv(%struct.sv* %100, i8* %add.ptr146)
  %102 = load %struct.sv*, %struct.sv** %sym, align 8
  %sv_any147 = getelementptr inbounds %struct.sv, %struct.sv* %102, i32 0, i32 0
  %103 = load i8*, i8** %sv_any147, align 8
  %104 = bitcast i8* %103 to %struct.xpv*
  %xpv_pv = getelementptr inbounds %struct.xpv, %struct.xpv* %104, i32 0, i32 0
  %105 = load i8*, i8** %xpv_pv, align 8
  store i8* %105, i8** %d, align 8
  br label %intro_sym

if.else.148:                                      ; preds = %if.then.134
  %call150 = call %struct.op* @Perl_newOP(i32 9, i32 0)
  store %struct.op* %call150, %struct.op** %o, align 8
  %106 = load i32, i32* %tmp, align 4
  %conv151 = sext i32 %106 to i64
  %107 = load %struct.op*, %struct.op** %o, align 8
  %op_targ = getelementptr inbounds %struct.op, %struct.op* %107, i32 0, i32 3
  store i64 %conv151, i64* %op_targ, align 8
  %108 = load i8, i8* %readline_overriden, align 1
  %conv152 = sext i8 %108 to i32
  %tobool153 = icmp ne i32 %conv152, 0
  br i1 %tobool153, label %cond.true.154, label %cond.false.159

cond.true.154:                                    ; preds = %if.else.148
  %109 = load %struct.op*, %struct.op** %o, align 8
  %110 = load %struct.gv*, %struct.gv** %gv_readline, align 8
  %call155 = call %struct.op* @Perl_newGVOP(i32 7, i32 0, %struct.gv* %110)
  %call156 = call %struct.op* @Perl_newCVREF(i32 0, %struct.op* %call155)
  %call157 = call %struct.op* @Perl_append_elem(i32 141, %struct.op* %109, %struct.op* %call156)
  %call158 = call %struct.op* @Perl_newUNOP(i32 166, i32 64, %struct.op* %call157)
  br label %cond.end

cond.false.159:                                   ; preds = %if.else.148
  %111 = load %struct.op*, %struct.op** %o, align 8
  %call160 = call %struct.op* @Perl_newUNOP(i32 26, i32 0, %struct.op* %111)
  br label %cond.end

cond.end:                                         ; preds = %cond.false.159, %cond.true.154
  %cond = phi %struct.op* [ %call158, %cond.true.154 ], [ %call160, %cond.false.159 ]
  store %struct.op* %cond, %struct.op** @PL_lex_op, align 8
  br label %if.end.161

if.end.161:                                       ; preds = %cond.end
  br label %if.end.183

if.else.162:                                      ; preds = %if.then.128
  %112 = load i8*, i8** %d, align 8
  %incdec.ptr164 = getelementptr inbounds i8, i8* %112, i32 1
  store i8* %incdec.ptr164, i8** %d, align 8
  br label %intro_sym

intro_sym:                                        ; preds = %if.else.162, %if.then.139
  %113 = load i8*, i8** %d, align 8
  %114 = load volatile i32, i32* @PL_in_eval, align 4
  %tobool165 = icmp ne i32 %114, 0
  %cond166 = select i1 %tobool165, i32 10, i32 2
  %call167 = call %struct.gv* @Perl_gv_fetchpv(i8* %113, i32 %cond166, i32 4)
  store %struct.gv* %call167, %struct.gv** %gv, align 8
  %115 = load i8, i8* %readline_overriden, align 1
  %conv168 = sext i8 %115 to i32
  %tobool169 = icmp ne i32 %conv168, 0
  br i1 %tobool169, label %cond.true.170, label %cond.false.177

cond.true.170:                                    ; preds = %intro_sym
  %116 = load %struct.gv*, %struct.gv** %gv, align 8
  %call171 = call %struct.op* @Perl_newGVOP(i32 7, i32 0, %struct.gv* %116)
  %call172 = call %struct.op* @Perl_newUNOP(i32 15, i32 0, %struct.op* %call171)
  %117 = load %struct.gv*, %struct.gv** %gv_readline, align 8
  %call173 = call %struct.op* @Perl_newGVOP(i32 7, i32 0, %struct.gv* %117)
  %call174 = call %struct.op* @Perl_newCVREF(i32 0, %struct.op* %call173)
  %call175 = call %struct.op* @Perl_append_elem(i32 141, %struct.op* %call172, %struct.op* %call174)
  %call176 = call %struct.op* @Perl_newUNOP(i32 166, i32 64, %struct.op* %call175)
  br label %cond.end.181

cond.false.177:                                   ; preds = %intro_sym
  %118 = load %struct.gv*, %struct.gv** %gv, align 8
  %call178 = call %struct.op* @Perl_newGVOP(i32 7, i32 0, %struct.gv* %118)
  %call179 = call %struct.op* @Perl_newUNOP(i32 15, i32 0, %struct.op* %call178)
  %call180 = call %struct.op* @Perl_newUNOP(i32 26, i32 0, %struct.op* %call179)
  br label %cond.end.181

cond.end.181:                                     ; preds = %cond.false.177, %cond.true.170
  %cond182 = phi %struct.op* [ %call176, %cond.true.170 ], [ %call180, %cond.false.177 ]
  store %struct.op* %cond182, %struct.op** @PL_lex_op, align 8
  br label %if.end.183

if.end.183:                                       ; preds = %cond.end.181, %if.end.161
  %119 = load i8, i8* %readline_overriden, align 1
  %tobool184 = icmp ne i8 %119, 0
  br i1 %tobool184, label %if.end.188, label %if.then.185

if.then.185:                                      ; preds = %if.end.183
  %120 = load %struct.op*, %struct.op** @PL_lex_op, align 8
  %op_flags = getelementptr inbounds %struct.op, %struct.op* %120, i32 0, i32 6
  %121 = load i8, i8* %op_flags, align 1
  %conv186 = zext i8 %121 to i32
  %or = or i32 %conv186, 128
  %conv187 = trunc i32 %or to i8
  store i8 %conv187, i8* %op_flags, align 1
  br label %if.end.188

if.end.188:                                       ; preds = %if.then.185, %if.end.183
  store i32 0, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  br label %if.end.206

if.else.189:                                      ; preds = %if.end.124
  %122 = load i8*, i8** %d, align 8
  %call192 = call %struct.gv* @Perl_gv_fetchpv(i8* %122, i32 1, i32 15)
  store %struct.gv* %call192, %struct.gv** %gv191, align 8
  %123 = load i8, i8* %readline_overriden, align 1
  %conv193 = sext i8 %123 to i32
  %tobool194 = icmp ne i32 %conv193, 0
  br i1 %tobool194, label %cond.true.195, label %cond.false.201

cond.true.195:                                    ; preds = %if.else.189
  %124 = load %struct.gv*, %struct.gv** %gv191, align 8
  %call196 = call %struct.op* @Perl_newGVOP(i32 7, i32 0, %struct.gv* %124)
  %125 = load %struct.gv*, %struct.gv** %gv_readline, align 8
  %call197 = call %struct.op* @Perl_newGVOP(i32 7, i32 0, %struct.gv* %125)
  %call198 = call %struct.op* @Perl_newCVREF(i32 0, %struct.op* %call197)
  %call199 = call %struct.op* @Perl_append_elem(i32 141, %struct.op* %call196, %struct.op* %call198)
  %call200 = call %struct.op* @Perl_newUNOP(i32 166, i32 64, %struct.op* %call199)
  br label %cond.end.204

cond.false.201:                                   ; preds = %if.else.189
  %126 = load %struct.gv*, %struct.gv** %gv191, align 8
  %call202 = call %struct.op* @Perl_newGVOP(i32 7, i32 0, %struct.gv* %126)
  %call203 = call %struct.op* @Perl_newUNOP(i32 26, i32 0, %struct.op* %call202)
  br label %cond.end.204

cond.end.204:                                     ; preds = %cond.false.201, %cond.true.195
  %cond205 = phi %struct.op* [ %call200, %cond.true.195 ], [ %call203, %cond.false.201 ]
  store %struct.op* %cond205, %struct.op** @PL_lex_op, align 8
  store i32 0, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  br label %if.end.206

if.end.206:                                       ; preds = %cond.end.204, %if.end.188
  br label %if.end.207

if.end.207:                                       ; preds = %if.end.206
  %127 = load i8*, i8** %s, align 8
  store i8* %127, i8** %retval
  br label %return

return:                                           ; preds = %if.end.207, %if.end.82
  %128 = load i8*, i8** %retval
  ret i8* %128
}

; Function Attrs: nounwind uwtable
define internal i32 @S_sublex_start() #0 {
entry:
  %retval = alloca i32, align 4
  %op_type = alloca i32, align 4
  %sv = alloca %struct.sv*, align 8
  %len = alloca i64, align 8
  %p = alloca i8*, align 8
  %nsv = alloca %struct.sv*, align 8
  %0 = load i32, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  store i32 %0, i32* %op_type, align 4
  %1 = load i32, i32* %op_type, align 4
  %cmp = icmp eq i32 %1, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load %struct.op*, %struct.op** @PL_lex_op, align 8
  store %struct.op* %2, %struct.op** bitcast (%union.YYSTYPE* @PL_yylval to %struct.op**), align 8
  store %struct.op* null, %struct.op** @PL_lex_op, align 8
  store i32 260, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %3 = load i32, i32* %op_type, align 4
  %cmp1 = icmp eq i32 %3, 5
  br i1 %cmp1, label %if.then.3, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %4 = load i32, i32* %op_type, align 4
  %cmp2 = icmp eq i32 %4, 26
  br i1 %cmp2, label %if.then.3, label %if.end.19

if.then.3:                                        ; preds = %lor.lhs.false, %if.end
  %5 = load %struct.sv*, %struct.sv** @PL_lex_stuff, align 8
  %call = call %struct.sv* @S_tokeq(%struct.sv* %5)
  store %struct.sv* %call, %struct.sv** %sv, align 8
  %6 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %6, i32 0, i32 2
  %7 = load i32, i32* %sv_flags, align 4
  %and = and i32 %7, 255
  %cmp4 = icmp eq i32 %and, 5
  br i1 %cmp4, label %if.then.5, label %if.end.17

if.then.5:                                        ; preds = %if.then.3
  %8 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags6 = getelementptr inbounds %struct.sv, %struct.sv* %8, i32 0, i32 2
  %9 = load i32, i32* %sv_flags6, align 4
  %and7 = and i32 %9, 262144
  %cmp8 = icmp eq i32 %and7, 262144
  br i1 %cmp8, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then.5
  %10 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %10, i32 0, i32 0
  %11 = load i8*, i8** %sv_any, align 8
  %12 = bitcast i8* %11 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %12, i32 0, i32 1
  %13 = load i64, i64* %xpv_cur, align 8
  store i64 %13, i64* %len, align 8
  %14 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any9 = getelementptr inbounds %struct.sv, %struct.sv* %14, i32 0, i32 0
  %15 = load i8*, i8** %sv_any9, align 8
  %16 = bitcast i8* %15 to %struct.xpv*
  %xpv_pv = getelementptr inbounds %struct.xpv, %struct.xpv* %16, i32 0, i32 0
  %17 = load i8*, i8** %xpv_pv, align 8
  br label %cond.end

cond.false:                                       ; preds = %if.then.5
  %18 = load %struct.sv*, %struct.sv** %sv, align 8
  %call10 = call i8* @Perl_sv_2pv_flags(%struct.sv* %18, i64* %len, i32 2)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %17, %cond.true ], [ %call10, %cond.false ]
  store i8* %cond, i8** %p, align 8
  %19 = load i8*, i8** %p, align 8
  %20 = load i64, i64* %len, align 8
  %call11 = call %struct.sv* @Perl_newSVpvn(i8* %19, i64 %20)
  store %struct.sv* %call11, %struct.sv** %nsv, align 8
  %21 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags12 = getelementptr inbounds %struct.sv, %struct.sv* %21, i32 0, i32 2
  %22 = load i32, i32* %sv_flags12, align 4
  %and13 = and i32 %22, 536870912
  %tobool = icmp ne i32 %and13, 0
  br i1 %tobool, label %if.then.14, label %if.end.16

if.then.14:                                       ; preds = %cond.end
  %23 = load %struct.sv*, %struct.sv** %nsv, align 8
  %sv_flags15 = getelementptr inbounds %struct.sv, %struct.sv* %23, i32 0, i32 2
  %24 = load i32, i32* %sv_flags15, align 4
  %or = or i32 %24, 536870912
  store i32 %or, i32* %sv_flags15, align 4
  br label %if.end.16

if.end.16:                                        ; preds = %if.then.14, %cond.end
  %25 = load %struct.sv*, %struct.sv** %sv, align 8
  call void @Perl_sv_free(%struct.sv* %25)
  %26 = load %struct.sv*, %struct.sv** %nsv, align 8
  store %struct.sv* %26, %struct.sv** %sv, align 8
  br label %if.end.17

if.end.17:                                        ; preds = %if.end.16, %if.then.3
  %27 = load i32, i32* %op_type, align 4
  %28 = load %struct.sv*, %struct.sv** %sv, align 8
  %call18 = call %struct.op* @Perl_newSVOP(i32 %27, i32 0, %struct.sv* %28)
  store %struct.op* %call18, %struct.op** bitcast (%union.YYSTYPE* @PL_yylval to %struct.op**), align 8
  store %struct.sv* null, %struct.sv** @PL_lex_stuff, align 8
  store i32 260, i32* %retval
  br label %return

if.end.19:                                        ; preds = %lor.lhs.false
  %29 = load i32, i32* @PL_lex_state, align 4
  store i32 %29, i32* getelementptr inbounds (%struct._sublex_info, %struct._sublex_info* @PL_sublex_info, i32 0, i32 0), align 4
  %30 = load i32, i32* %op_type, align 4
  store i32 %30, i32* getelementptr inbounds (%struct._sublex_info, %struct._sublex_info* @PL_sublex_info, i32 0, i32 1), align 4
  %31 = load %struct.op*, %struct.op** @PL_lex_op, align 8
  store %struct.op* %31, %struct.op** getelementptr inbounds (%struct._sublex_info, %struct._sublex_info* @PL_sublex_info, i32 0, i32 2), align 8
  store i32 7, i32* @PL_lex_state, align 4
  store i32 1, i32* @PL_expect, align 4
  %32 = load %struct.op*, %struct.op** @PL_lex_op, align 8
  %tobool20 = icmp ne %struct.op* %32, null
  br i1 %tobool20, label %if.then.21, label %if.else

if.then.21:                                       ; preds = %if.end.19
  %33 = load %struct.op*, %struct.op** @PL_lex_op, align 8
  store %struct.op* %33, %struct.op** bitcast (%union.YYSTYPE* @PL_yylval to %struct.op**), align 8
  store %struct.op* null, %struct.op** @PL_lex_op, align 8
  store i32 261, i32* %retval
  br label %return

if.else:                                          ; preds = %if.end.19
  store i32 284, i32* %retval
  br label %return

return:                                           ; preds = %if.else, %if.then.21, %if.end.17, %if.then
  %34 = load i32, i32* %retval
  ret i32 %34
}

; Function Attrs: nounwind uwtable
define internal void @S_depcom() #0 {
entry:
  call void @Perl_deprecate_old(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.181, i32 0, i32 0))
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @S_no_op(i8* %what, i8* %s) #0 {
entry:
  %what.addr = alloca i8*, align 8
  %s.addr = alloca i8*, align 8
  %oldbp = alloca i8*, align 8
  %is_first = alloca i8, align 1
  %t = alloca i8*, align 8
  store i8* %what, i8** %what.addr, align 8
  store i8* %s, i8** %s.addr, align 8
  %0 = load i8*, i8** @PL_bufptr, align 8
  store i8* %0, i8** %oldbp, align 8
  %1 = load i8*, i8** @PL_oldbufptr, align 8
  %2 = load i8*, i8** @PL_linestart, align 8
  %cmp = icmp eq i8* %1, %2
  %conv = zext i1 %cmp to i32
  %conv1 = trunc i32 %conv to i8
  store i8 %conv1, i8* %is_first, align 1
  %3 = load i8*, i8** %s.addr, align 8
  %tobool = icmp ne i8* %3, null
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %4 = load i8*, i8** %oldbp, align 8
  store i8* %4, i8** %s.addr, align 8
  br label %if.end

if.else:                                          ; preds = %entry
  %5 = load i8*, i8** %s.addr, align 8
  store i8* %5, i8** @PL_bufptr, align 8
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %6 = load i8*, i8** %what.addr, align 8
  %call = call i8* (i8*, ...) @Perl_form(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.182, i32 0, i32 0), i8* %6)
  %call2 = call i32 @Perl_yywarn(i8* %call)
  %7 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings = getelementptr inbounds %struct.cop, %struct.cop* %7, i32 0, i32 14
  %8 = load %struct.sv*, %struct.sv** %cop_warnings, align 8
  %cmp3 = icmp eq %struct.sv* %8, null
  br i1 %cmp3, label %if.then.15, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %9 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings5 = getelementptr inbounds %struct.cop, %struct.cop* %9, i32 0, i32 14
  %10 = load %struct.sv*, %struct.sv** %cop_warnings5, align 8
  %cmp6 = icmp eq %struct.sv* %10, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 1)
  br i1 %cmp6, label %if.then.15, label %lor.lhs.false.8

lor.lhs.false.8:                                  ; preds = %lor.lhs.false
  %11 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings9 = getelementptr inbounds %struct.cop, %struct.cop* %11, i32 0, i32 14
  %12 = load %struct.sv*, %struct.sv** %cop_warnings9, align 8
  %cmp10 = icmp ne %struct.sv* %12, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 2)
  br i1 %cmp10, label %land.lhs.true, label %if.end.156

land.lhs.true:                                    ; preds = %lor.lhs.false.8
  %13 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings12 = getelementptr inbounds %struct.cop, %struct.cop* %13, i32 0, i32 14
  %14 = load %struct.sv*, %struct.sv** %cop_warnings12, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %14, i32 0, i32 0
  %15 = load i8*, i8** %sv_any, align 8
  %16 = bitcast i8* %15 to %struct.xpv*
  %xpv_pv = getelementptr inbounds %struct.xpv, %struct.xpv* %16, i32 0, i32 0
  %17 = load i8*, i8** %xpv_pv, align 8
  %arrayidx = getelementptr inbounds i8, i8* %17, i64 7
  %18 = load i8, i8* %arrayidx, align 1
  %conv13 = sext i8 %18 to i32
  %and = and i32 %conv13, 1
  %tobool14 = icmp ne i32 %and, 0
  br i1 %tobool14, label %if.then.15, label %if.end.156

if.then.15:                                       ; preds = %land.lhs.true, %lor.lhs.false, %if.end
  %19 = load i8, i8* %is_first, align 1
  %tobool16 = icmp ne i8 %19, 0
  br i1 %tobool16, label %if.then.17, label %if.else.18

if.then.17:                                       ; preds = %if.then.15
  call void (i32, i8*, ...) @Perl_warner(i32 28, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.183, i32 0, i32 0))
  br label %if.end.155

if.else.18:                                       ; preds = %if.then.15
  %20 = load i8*, i8** @PL_oldoldbufptr, align 8
  %tobool19 = icmp ne i8* %20, null
  br i1 %tobool19, label %land.lhs.true.20, label %if.else.150

land.lhs.true.20:                                 ; preds = %if.else.18
  %21 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private = getelementptr inbounds %struct.cop, %struct.cop* %21, i32 0, i32 7
  %22 = load i8, i8* %op_private, align 1
  %conv21 = zext i8 %22 to i32
  %and22 = and i32 %conv21, 8
  %tobool23 = icmp ne i32 %and22, 0
  br i1 %tobool23, label %cond.true, label %lor.lhs.false.24

lor.lhs.false.24:                                 ; preds = %land.lhs.true.20
  %23 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %tobool25 = icmp ne %struct.sv* %23, null
  br i1 %tobool25, label %land.lhs.true.26, label %lor.lhs.false.34

land.lhs.true.26:                                 ; preds = %lor.lhs.false.24
  %24 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %24, i32 0, i32 2
  %25 = load i32, i32* %sv_flags, align 4
  %and27 = and i32 %25, 536870912
  %tobool28 = icmp ne i32 %and27, 0
  br i1 %tobool28, label %land.lhs.true.29, label %lor.lhs.false.34

land.lhs.true.29:                                 ; preds = %land.lhs.true.26
  %26 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private30 = getelementptr inbounds %struct.cop, %struct.cop* %26, i32 0, i32 7
  %27 = load i8, i8* %op_private30, align 1
  %conv31 = zext i8 %27 to i32
  %and32 = and i32 %conv31, 8
  %tobool33 = icmp ne i32 %and32, 0
  br i1 %tobool33, label %lor.lhs.false.34, label %lor.lhs.false.37

lor.lhs.false.34:                                 ; preds = %land.lhs.true.29, %land.lhs.true.26, %lor.lhs.false.24
  %28 = load i32, i32* @PL_hints, align 4
  %and35 = and i32 %28, 8388608
  %tobool36 = icmp ne i32 %and35, 0
  br i1 %tobool36, label %lor.lhs.false.37, label %cond.true

lor.lhs.false.37:                                 ; preds = %lor.lhs.false.34, %land.lhs.true.29
  %29 = load i8*, i8** @PL_oldoldbufptr, align 8
  %30 = load i8, i8* %29, align 1
  %conv38 = zext i8 %30 to i32
  %cmp39 = icmp slt i32 %conv38, 192
  br i1 %cmp39, label %cond.true, label %cond.false

cond.true:                                        ; preds = %lor.lhs.false.37, %lor.lhs.false.34, %land.lhs.true.20
  %31 = load i8*, i8** @PL_oldoldbufptr, align 8
  %32 = load i8, i8* %31, align 1
  %conv41 = sext i8 %32 to i32
  %cmp42 = icmp sge i32 %conv41, 65
  br i1 %cmp42, label %land.lhs.true.44, label %lor.lhs.false.48

land.lhs.true.44:                                 ; preds = %cond.true
  %33 = load i8*, i8** @PL_oldoldbufptr, align 8
  %34 = load i8, i8* %33, align 1
  %conv45 = sext i8 %34 to i32
  %cmp46 = icmp sle i32 %conv45, 90
  br i1 %cmp46, label %if.then.66, label %lor.lhs.false.48

lor.lhs.false.48:                                 ; preds = %land.lhs.true.44, %cond.true
  %35 = load i8*, i8** @PL_oldoldbufptr, align 8
  %36 = load i8, i8* %35, align 1
  %conv49 = sext i8 %36 to i32
  %cmp50 = icmp sge i32 %conv49, 97
  br i1 %cmp50, label %land.lhs.true.52, label %lor.lhs.false.56

land.lhs.true.52:                                 ; preds = %lor.lhs.false.48
  %37 = load i8*, i8** @PL_oldoldbufptr, align 8
  %38 = load i8, i8* %37, align 1
  %conv53 = sext i8 %38 to i32
  %cmp54 = icmp sle i32 %conv53, 122
  br i1 %cmp54, label %if.then.66, label %lor.lhs.false.56

lor.lhs.false.56:                                 ; preds = %land.lhs.true.52, %lor.lhs.false.48
  %39 = load i8*, i8** @PL_oldoldbufptr, align 8
  %40 = load i8, i8* %39, align 1
  %conv57 = sext i8 %40 to i32
  %cmp58 = icmp eq i32 %conv57, 95
  br i1 %cmp58, label %if.then.66, label %if.else.150

cond.false:                                       ; preds = %lor.lhs.false.37
  %41 = load i8*, i8** @PL_oldoldbufptr, align 8
  %call60 = call signext i8 @Perl_is_utf8_idcont(i8* %41)
  %conv61 = sext i8 %call60 to i32
  %tobool62 = icmp ne i32 %conv61, 0
  br i1 %tobool62, label %land.lhs.true.63, label %if.else.150

land.lhs.true.63:                                 ; preds = %cond.false
  %42 = load i8*, i8** @PL_oldoldbufptr, align 8
  %call64 = call signext i8 @Perl_is_utf8_digit(i8* %42)
  %tobool65 = icmp ne i8 %call64, 0
  br i1 %tobool65, label %if.else.150, label %if.then.66

if.then.66:                                       ; preds = %land.lhs.true.63, %lor.lhs.false.56, %land.lhs.true.52, %land.lhs.true.44
  %43 = load i8*, i8** @PL_oldoldbufptr, align 8
  store i8* %43, i8** %t, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then.66
  %44 = load i8*, i8** %t, align 8
  %45 = load i8, i8* %44, align 1
  %conv67 = sext i8 %45 to i32
  %tobool68 = icmp ne i32 %conv67, 0
  br i1 %tobool68, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %for.cond
  %46 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private69 = getelementptr inbounds %struct.cop, %struct.cop* %46, i32 0, i32 7
  %47 = load i8, i8* %op_private69, align 1
  %conv70 = zext i8 %47 to i32
  %and71 = and i32 %conv70, 8
  %tobool72 = icmp ne i32 %and71, 0
  br i1 %tobool72, label %cond.true.91, label %lor.lhs.false.73

lor.lhs.false.73:                                 ; preds = %land.rhs
  %48 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %tobool74 = icmp ne %struct.sv* %48, null
  br i1 %tobool74, label %land.lhs.true.75, label %lor.lhs.false.84

land.lhs.true.75:                                 ; preds = %lor.lhs.false.73
  %49 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_flags76 = getelementptr inbounds %struct.sv, %struct.sv* %49, i32 0, i32 2
  %50 = load i32, i32* %sv_flags76, align 4
  %and77 = and i32 %50, 536870912
  %tobool78 = icmp ne i32 %and77, 0
  br i1 %tobool78, label %land.lhs.true.79, label %lor.lhs.false.84

land.lhs.true.79:                                 ; preds = %land.lhs.true.75
  %51 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private80 = getelementptr inbounds %struct.cop, %struct.cop* %51, i32 0, i32 7
  %52 = load i8, i8* %op_private80, align 1
  %conv81 = zext i8 %52 to i32
  %and82 = and i32 %conv81, 8
  %tobool83 = icmp ne i32 %and82, 0
  br i1 %tobool83, label %lor.lhs.false.84, label %lor.lhs.false.87

lor.lhs.false.84:                                 ; preds = %land.lhs.true.79, %land.lhs.true.75, %lor.lhs.false.73
  %53 = load i32, i32* @PL_hints, align 4
  %and85 = and i32 %53, 8388608
  %tobool86 = icmp ne i32 %and85, 0
  br i1 %tobool86, label %lor.lhs.false.87, label %cond.true.91

lor.lhs.false.87:                                 ; preds = %lor.lhs.false.84, %land.lhs.true.79
  %54 = load i8*, i8** %t, align 8
  %55 = load i8, i8* %54, align 1
  %conv88 = zext i8 %55 to i32
  %cmp89 = icmp slt i32 %conv88, 192
  br i1 %cmp89, label %cond.true.91, label %cond.false.119

cond.true.91:                                     ; preds = %lor.lhs.false.87, %lor.lhs.false.84, %land.rhs
  %56 = load i8*, i8** %t, align 8
  %57 = load i8, i8* %56, align 1
  %conv92 = sext i8 %57 to i32
  %cmp93 = icmp sge i32 %conv92, 65
  br i1 %cmp93, label %land.lhs.true.95, label %lor.lhs.false.99

land.lhs.true.95:                                 ; preds = %cond.true.91
  %58 = load i8*, i8** %t, align 8
  %59 = load i8, i8* %58, align 1
  %conv96 = sext i8 %59 to i32
  %cmp97 = icmp sle i32 %conv96, 90
  br i1 %cmp97, label %lor.end, label %lor.lhs.false.99

lor.lhs.false.99:                                 ; preds = %land.lhs.true.95, %cond.true.91
  %60 = load i8*, i8** %t, align 8
  %61 = load i8, i8* %60, align 1
  %conv100 = sext i8 %61 to i32
  %cmp101 = icmp sge i32 %conv100, 97
  br i1 %cmp101, label %land.lhs.true.103, label %lor.lhs.false.107

land.lhs.true.103:                                ; preds = %lor.lhs.false.99
  %62 = load i8*, i8** %t, align 8
  %63 = load i8, i8* %62, align 1
  %conv104 = sext i8 %63 to i32
  %cmp105 = icmp sle i32 %conv104, 122
  br i1 %cmp105, label %lor.end, label %lor.lhs.false.107

lor.lhs.false.107:                                ; preds = %land.lhs.true.103, %lor.lhs.false.99
  %64 = load i8*, i8** %t, align 8
  %65 = load i8, i8* %64, align 1
  %conv108 = sext i8 %65 to i32
  %cmp109 = icmp sge i32 %conv108, 48
  br i1 %cmp109, label %land.lhs.true.111, label %lor.lhs.false.115

land.lhs.true.111:                                ; preds = %lor.lhs.false.107
  %66 = load i8*, i8** %t, align 8
  %67 = load i8, i8* %66, align 1
  %conv112 = sext i8 %67 to i32
  %cmp113 = icmp sle i32 %conv112, 57
  br i1 %cmp113, label %lor.end, label %lor.lhs.false.115

lor.lhs.false.115:                                ; preds = %land.lhs.true.111, %lor.lhs.false.107
  %68 = load i8*, i8** %t, align 8
  %69 = load i8, i8* %68, align 1
  %conv116 = sext i8 %69 to i32
  %cmp117 = icmp eq i32 %conv116, 95
  br i1 %cmp117, label %lor.end, label %lor.rhs

cond.false.119:                                   ; preds = %lor.lhs.false.87
  %70 = load i8*, i8** %t, align 8
  %call120 = call signext i8 @Perl_is_utf8_alnum(i8* %70)
  %conv121 = sext i8 %call120 to i32
  %tobool122 = icmp ne i32 %conv121, 0
  br i1 %tobool122, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %cond.false.119, %lor.lhs.false.115
  %71 = load i8*, i8** %t, align 8
  %72 = load i8, i8* %71, align 1
  %conv123 = sext i8 %72 to i32
  %cmp124 = icmp eq i32 %conv123, 58
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %cond.false.119, %lor.lhs.false.115, %land.lhs.true.111, %land.lhs.true.103, %land.lhs.true.95
  %73 = phi i1 [ true, %cond.false.119 ], [ true, %lor.lhs.false.115 ], [ true, %land.lhs.true.111 ], [ true, %land.lhs.true.103 ], [ true, %land.lhs.true.95 ], [ %cmp124, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %for.cond
  %74 = phi i1 [ false, %for.cond ], [ %73, %lor.end ]
  br i1 %74, label %for.body, label %for.end

for.body:                                         ; preds = %land.end
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %75 = load i8*, i8** %t, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %75, i32 1
  store i8* %incdec.ptr, i8** %t, align 8
  br label %for.cond

for.end:                                          ; preds = %land.end
  %76 = load i8*, i8** %t, align 8
  %77 = load i8*, i8** @PL_bufptr, align 8
  %cmp126 = icmp ult i8* %76, %77
  br i1 %cmp126, label %land.lhs.true.128, label %if.end.149

land.lhs.true.128:                                ; preds = %for.end
  %78 = load i8*, i8** %t, align 8
  %79 = load i8, i8* %78, align 1
  %conv129 = sext i8 %79 to i32
  %cmp130 = icmp eq i32 %conv129, 32
  br i1 %cmp130, label %if.then.148, label %lor.lhs.false.132

lor.lhs.false.132:                                ; preds = %land.lhs.true.128
  %80 = load i8*, i8** %t, align 8
  %81 = load i8, i8* %80, align 1
  %conv133 = sext i8 %81 to i32
  %cmp134 = icmp eq i32 %conv133, 9
  br i1 %cmp134, label %if.then.148, label %lor.lhs.false.136

lor.lhs.false.136:                                ; preds = %lor.lhs.false.132
  %82 = load i8*, i8** %t, align 8
  %83 = load i8, i8* %82, align 1
  %conv137 = sext i8 %83 to i32
  %cmp138 = icmp eq i32 %conv137, 10
  br i1 %cmp138, label %if.then.148, label %lor.lhs.false.140

lor.lhs.false.140:                                ; preds = %lor.lhs.false.136
  %84 = load i8*, i8** %t, align 8
  %85 = load i8, i8* %84, align 1
  %conv141 = sext i8 %85 to i32
  %cmp142 = icmp eq i32 %conv141, 13
  br i1 %cmp142, label %if.then.148, label %lor.lhs.false.144

lor.lhs.false.144:                                ; preds = %lor.lhs.false.140
  %86 = load i8*, i8** %t, align 8
  %87 = load i8, i8* %86, align 1
  %conv145 = sext i8 %87 to i32
  %cmp146 = icmp eq i32 %conv145, 12
  br i1 %cmp146, label %if.then.148, label %if.end.149

if.then.148:                                      ; preds = %lor.lhs.false.144, %lor.lhs.false.140, %lor.lhs.false.136, %lor.lhs.false.132, %land.lhs.true.128
  %88 = load i8*, i8** %t, align 8
  %89 = load i8*, i8** @PL_oldoldbufptr, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %88 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %89 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %90 = load i8*, i8** @PL_oldoldbufptr, align 8
  call void (i32, i8*, ...) @Perl_warner(i32 28, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.184, i32 0, i32 0), i64 %sub.ptr.sub, i8* %90)
  br label %if.end.149

if.end.149:                                       ; preds = %if.then.148, %lor.lhs.false.144, %for.end
  br label %if.end.154

if.else.150:                                      ; preds = %land.lhs.true.63, %cond.false, %lor.lhs.false.56, %if.else.18
  %91 = load i8*, i8** %s.addr, align 8
  %92 = load i8*, i8** %oldbp, align 8
  %sub.ptr.lhs.cast151 = ptrtoint i8* %91 to i64
  %sub.ptr.rhs.cast152 = ptrtoint i8* %92 to i64
  %sub.ptr.sub153 = sub i64 %sub.ptr.lhs.cast151, %sub.ptr.rhs.cast152
  %93 = load i8*, i8** %oldbp, align 8
  call void (i32, i8*, ...) @Perl_warner(i32 28, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.185, i32 0, i32 0), i64 %sub.ptr.sub153, i8* %93)
  br label %if.end.154

if.end.154:                                       ; preds = %if.else.150, %if.end.149
  br label %if.end.155

if.end.155:                                       ; preds = %if.end.154, %if.then.17
  br label %if.end.156

if.end.156:                                       ; preds = %if.end.155, %land.lhs.true, %lor.lhs.false.8
  %94 = load i8*, i8** %oldbp, align 8
  store i8* %94, i8** @PL_bufptr, align 8
  ret void
}

declare %struct.sv* @Perl_newSViv(i64) #1

declare i32 @strcmp(i8*, i8*) #1

declare %struct.cv* @Perl_get_cv(i8*, i32) #1

declare i32 @memcmp(i8*, i8*, i64) #1

; Function Attrs: nounwind uwtable
define internal i8* @S_scan_pat(i8* %start, i32 %type) #0 {
entry:
  %start.addr = alloca i8*, align 8
  %type.addr = alloca i32, align 4
  %pm = alloca %struct.pmop*, align 8
  %s = alloca i8*, align 8
  store i8* %start, i8** %start.addr, align 8
  store i32 %type, i32* %type.addr, align 4
  %0 = load i8*, i8** %start.addr, align 8
  %call = call i8* @S_scan_str(i8* %0, i32 0, i32 0)
  store i8* %call, i8** %s, align 8
  %1 = load i8*, i8** %s, align 8
  %tobool = icmp ne i8* %1, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.211, i32 0, i32 0))
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %2 = load i32, i32* %type.addr, align 4
  %call1 = call %struct.op* @Perl_newPMOP(i32 %2, i32 0)
  %3 = bitcast %struct.op* %call1 to %struct.pmop*
  store %struct.pmop* %3, %struct.pmop** %pm, align 8
  %4 = load i32, i32* @PL_multi_open, align 4
  %cmp = icmp eq i32 %4, 63
  br i1 %cmp, label %if.then.2, label %if.end.3

if.then.2:                                        ; preds = %if.end
  %5 = load %struct.pmop*, %struct.pmop** %pm, align 8
  %op_pmflags = getelementptr inbounds %struct.pmop, %struct.pmop* %5, i32 0, i32 14
  %6 = load i32, i32* %op_pmflags, align 4
  %or = or i32 %6, 2
  store i32 %or, i32* %op_pmflags, align 4
  br label %if.end.3

if.end.3:                                         ; preds = %if.then.2, %if.end
  %7 = load i32, i32* %type.addr, align 4
  %cmp4 = icmp eq i32 %7, 32
  br i1 %cmp4, label %if.then.5, label %if.else

if.then.5:                                        ; preds = %if.end.3
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.then.5
  %8 = load i8*, i8** %s, align 8
  %9 = load i8, i8* %8, align 1
  %conv = sext i8 %9 to i32
  %tobool6 = icmp ne i32 %conv, 0
  br i1 %tobool6, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %10 = load i8*, i8** %s, align 8
  %11 = load i8, i8* %10, align 1
  %conv7 = sext i8 %11 to i32
  %call8 = call i8* @strchr(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.212, i32 0, i32 0), i32 %conv7)
  %tobool9 = icmp ne i8* %call8, null
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %12 = phi i1 [ false, %while.cond ], [ %tobool9, %land.rhs ]
  br i1 %12, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %13 = load %struct.pmop*, %struct.pmop** %pm, align 8
  %op_pmflags10 = getelementptr inbounds %struct.pmop, %struct.pmop* %13, i32 0, i32 14
  %14 = load i8*, i8** %s, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %14, i32 1
  store i8* %incdec.ptr, i8** %s, align 8
  %15 = load i8, i8* %14, align 1
  %conv11 = sext i8 %15 to i32
  call void @Perl_pmflag(i32* %op_pmflags10, i32 %conv11)
  br label %while.cond

while.end:                                        ; preds = %land.end
  br label %if.end.25

if.else:                                          ; preds = %if.end.3
  br label %while.cond.12

while.cond.12:                                    ; preds = %while.body.20, %if.else
  %16 = load i8*, i8** %s, align 8
  %17 = load i8, i8* %16, align 1
  %conv13 = sext i8 %17 to i32
  %tobool14 = icmp ne i32 %conv13, 0
  br i1 %tobool14, label %land.rhs.15, label %land.end.19

land.rhs.15:                                      ; preds = %while.cond.12
  %18 = load i8*, i8** %s, align 8
  %19 = load i8, i8* %18, align 1
  %conv16 = sext i8 %19 to i32
  %call17 = call i8* @strchr(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.213, i32 0, i32 0), i32 %conv16)
  %tobool18 = icmp ne i8* %call17, null
  br label %land.end.19

land.end.19:                                      ; preds = %land.rhs.15, %while.cond.12
  %20 = phi i1 [ false, %while.cond.12 ], [ %tobool18, %land.rhs.15 ]
  br i1 %20, label %while.body.20, label %while.end.24

while.body.20:                                    ; preds = %land.end.19
  %21 = load %struct.pmop*, %struct.pmop** %pm, align 8
  %op_pmflags21 = getelementptr inbounds %struct.pmop, %struct.pmop* %21, i32 0, i32 14
  %22 = load i8*, i8** %s, align 8
  %incdec.ptr22 = getelementptr inbounds i8, i8* %22, i32 1
  store i8* %incdec.ptr22, i8** %s, align 8
  %23 = load i8, i8* %22, align 1
  %conv23 = sext i8 %23 to i32
  call void @Perl_pmflag(i32* %op_pmflags21, i32 %conv23)
  br label %while.cond.12

while.end.24:                                     ; preds = %land.end.19
  br label %if.end.25

if.end.25:                                        ; preds = %while.end.24, %while.end
  %24 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings = getelementptr inbounds %struct.cop, %struct.cop* %24, i32 0, i32 14
  %25 = load %struct.sv*, %struct.sv** %cop_warnings, align 8
  %cmp26 = icmp ne %struct.sv* %25, null
  br i1 %cmp26, label %land.lhs.true, label %lor.lhs.false.38

land.lhs.true:                                    ; preds = %if.end.25
  %26 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings28 = getelementptr inbounds %struct.cop, %struct.cop* %26, i32 0, i32 14
  %27 = load %struct.sv*, %struct.sv** %cop_warnings28, align 8
  %cmp29 = icmp ne %struct.sv* %27, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 2)
  br i1 %cmp29, label %land.lhs.true.31, label %lor.lhs.false.38

land.lhs.true.31:                                 ; preds = %land.lhs.true
  %28 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings32 = getelementptr inbounds %struct.cop, %struct.cop* %28, i32 0, i32 14
  %29 = load %struct.sv*, %struct.sv** %cop_warnings32, align 8
  %cmp33 = icmp eq %struct.sv* %29, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 1)
  br i1 %cmp33, label %land.lhs.true.46, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true.31
  %30 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings35 = getelementptr inbounds %struct.cop, %struct.cop* %30, i32 0, i32 14
  %31 = load %struct.sv*, %struct.sv** %cop_warnings35, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %31, i32 0, i32 0
  %32 = load i8*, i8** %sv_any, align 8
  %33 = bitcast i8* %32 to %struct.xpv*
  %xpv_pv = getelementptr inbounds %struct.xpv, %struct.xpv* %33, i32 0, i32 0
  %34 = load i8*, i8** %xpv_pv, align 8
  %arrayidx = getelementptr inbounds i8, i8* %34, i64 5
  %35 = load i8, i8* %arrayidx, align 1
  %conv36 = sext i8 %35 to i32
  %and = and i32 %conv36, 1
  %tobool37 = icmp ne i32 %and, 0
  br i1 %tobool37, label %land.lhs.true.46, label %lor.lhs.false.38

lor.lhs.false.38:                                 ; preds = %lor.lhs.false, %land.lhs.true, %if.end.25
  %36 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings39 = getelementptr inbounds %struct.cop, %struct.cop* %36, i32 0, i32 14
  %37 = load %struct.sv*, %struct.sv** %cop_warnings39, align 8
  %cmp40 = icmp eq %struct.sv* %37, null
  br i1 %cmp40, label %land.lhs.true.42, label %if.end.55

land.lhs.true.42:                                 ; preds = %lor.lhs.false.38
  %38 = load i8, i8* @PL_dowarn, align 1
  %conv43 = zext i8 %38 to i32
  %and44 = and i32 %conv43, 1
  %tobool45 = icmp ne i32 %and44, 0
  br i1 %tobool45, label %land.lhs.true.46, label %if.end.55

land.lhs.true.46:                                 ; preds = %land.lhs.true.42, %lor.lhs.false, %land.lhs.true.31
  %39 = load %struct.pmop*, %struct.pmop** %pm, align 8
  %op_pmflags47 = getelementptr inbounds %struct.pmop, %struct.pmop* %39, i32 0, i32 14
  %40 = load i32, i32* %op_pmflags47, align 4
  %and48 = and i32 %40, 512
  %tobool49 = icmp ne i32 %and48, 0
  br i1 %tobool49, label %land.lhs.true.50, label %if.end.55

land.lhs.true.50:                                 ; preds = %land.lhs.true.46
  %41 = load %struct.pmop*, %struct.pmop** %pm, align 8
  %op_pmflags51 = getelementptr inbounds %struct.pmop, %struct.pmop* %41, i32 0, i32 14
  %42 = load i32, i32* %op_pmflags51, align 4
  %and52 = and i32 %42, 256
  %tobool53 = icmp ne i32 %and52, 0
  br i1 %tobool53, label %if.end.55, label %if.then.54

if.then.54:                                       ; preds = %land.lhs.true.50
  call void (i32, i8*, ...) @Perl_warner(i32 20, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @c_without_g, i32 0, i32 0))
  br label %if.end.55

if.end.55:                                        ; preds = %if.then.54, %land.lhs.true.50, %land.lhs.true.46, %land.lhs.true.42, %lor.lhs.false.38
  %43 = load %struct.pmop*, %struct.pmop** %pm, align 8
  %op_pmflags56 = getelementptr inbounds %struct.pmop, %struct.pmop* %43, i32 0, i32 14
  %44 = load i32, i32* %op_pmflags56, align 4
  %45 = load %struct.pmop*, %struct.pmop** %pm, align 8
  %op_pmpermflags = getelementptr inbounds %struct.pmop, %struct.pmop* %45, i32 0, i32 15
  store i32 %44, i32* %op_pmpermflags, align 4
  %46 = load %struct.pmop*, %struct.pmop** %pm, align 8
  %47 = bitcast %struct.pmop* %46 to %struct.op*
  store %struct.op* %47, %struct.op** @PL_lex_op, align 8
  store i32 31, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  %48 = load i8*, i8** %s, align 8
  ret i8* %48
}

; Function Attrs: nounwind uwtable
define i8* @Perl_scan_num(i8* %start, %union.YYSTYPE* %lvalp) #0 {
entry:
  %start.addr = alloca i8*, align 8
  %lvalp.addr = alloca %union.YYSTYPE*, align 8
  %s = alloca i8*, align 8
  %d = alloca i8*, align 8
  %e = alloca i8*, align 8
  %nv = alloca double, align 8
  %sv = alloca %struct.sv*, align 8
  %floatit = alloca i8, align 1
  %lastub = alloca i8*, align 8
  %n = alloca double, align 8
  %u = alloca i64, align 8
  %shift = alloca i32, align 4
  %overflowed = alloca i8, align 1
  %just_zero = alloca i8, align 1
  %base = alloca i8*, align 8
  %Base = alloca i8*, align 8
  %max = alloca i8*, align 8
  %x = alloca i64, align 8
  %b = alloca i64, align 8
  %uv = alloca i64, align 8
  %flags = alloca i32, align 4
  store i8* %start, i8** %start.addr, align 8
  store %union.YYSTYPE* %lvalp, %union.YYSTYPE** %lvalp.addr, align 8
  %0 = load i8*, i8** %start.addr, align 8
  store i8* %0, i8** %s, align 8
  store %struct.sv* null, %struct.sv** %sv, align 8
  store i8* null, i8** %lastub, align 8
  %1 = load i8*, i8** %s, align 8
  %2 = load i8, i8* %1, align 1
  %conv = sext i8 %2 to i32
  switch i32 %conv, label %sw.default [
    i32 48, label %sw.bb
    i32 49, label %sw.bb.291
    i32 50, label %sw.bb.291
    i32 51, label %sw.bb.291
    i32 52, label %sw.bb.291
    i32 53, label %sw.bb.291
    i32 54, label %sw.bb.291
    i32 55, label %sw.bb.291
    i32 56, label %sw.bb.291
    i32 57, label %sw.bb.291
    i32 46, label %sw.bb.291
    i32 118, label %sw.bb.765
  ]

sw.default:                                       ; preds = %entry
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.117, i32 0, i32 0))
  br label %sw.bb

sw.bb:                                            ; preds = %entry, %sw.default
  store double 0.000000e+00, double* %n, align 8
  store i64 0, i64* %u, align 8
  store i8 0, i8* %overflowed, align 1
  store i8 1, i8* %just_zero, align 1
  %3 = load i8*, i8** %s, align 8
  %arrayidx = getelementptr inbounds i8, i8* %3, i64 1
  %4 = load i8, i8* %arrayidx, align 1
  %conv1 = sext i8 %4 to i32
  %cmp = icmp eq i32 %conv1, 120
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %sw.bb
  store i32 4, i32* %shift, align 4
  %5 = load i8*, i8** %s, align 8
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 2
  store i8* %add.ptr, i8** %s, align 8
  store i8 0, i8* %just_zero, align 1
  br label %if.end.26

if.else:                                          ; preds = %sw.bb
  %6 = load i8*, i8** %s, align 8
  %arrayidx3 = getelementptr inbounds i8, i8* %6, i64 1
  %7 = load i8, i8* %arrayidx3, align 1
  %conv4 = sext i8 %7 to i32
  %cmp5 = icmp eq i32 %conv4, 98
  br i1 %cmp5, label %if.then.7, label %if.else.9

if.then.7:                                        ; preds = %if.else
  store i32 1, i32* %shift, align 4
  %8 = load i8*, i8** %s, align 8
  %add.ptr8 = getelementptr inbounds i8, i8* %8, i64 2
  store i8* %add.ptr8, i8** %s, align 8
  store i8 0, i8* %just_zero, align 1
  br label %if.end.25

if.else.9:                                        ; preds = %if.else
  %9 = load i8*, i8** %s, align 8
  %arrayidx10 = getelementptr inbounds i8, i8* %9, i64 1
  %10 = load i8, i8* %arrayidx10, align 1
  %conv11 = sext i8 %10 to i32
  %cmp12 = icmp eq i32 %conv11, 46
  br i1 %cmp12, label %if.then.23, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.else.9
  %11 = load i8*, i8** %s, align 8
  %arrayidx14 = getelementptr inbounds i8, i8* %11, i64 1
  %12 = load i8, i8* %arrayidx14, align 1
  %conv15 = sext i8 %12 to i32
  %cmp16 = icmp eq i32 %conv15, 101
  br i1 %cmp16, label %if.then.23, label %lor.lhs.false.18

lor.lhs.false.18:                                 ; preds = %lor.lhs.false
  %13 = load i8*, i8** %s, align 8
  %arrayidx19 = getelementptr inbounds i8, i8* %13, i64 1
  %14 = load i8, i8* %arrayidx19, align 1
  %conv20 = sext i8 %14 to i32
  %cmp21 = icmp eq i32 %conv20, 69
  br i1 %cmp21, label %if.then.23, label %if.else.24

if.then.23:                                       ; preds = %lor.lhs.false.18, %lor.lhs.false, %if.else.9
  br label %decimal

if.else.24:                                       ; preds = %lor.lhs.false.18
  store i32 3, i32* %shift, align 4
  %15 = load i8*, i8** %s, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr, i8** %s, align 8
  br label %if.end

if.end:                                           ; preds = %if.else.24
  br label %if.end.25

if.end.25:                                        ; preds = %if.end, %if.then.7
  br label %if.end.26

if.end.26:                                        ; preds = %if.end.25, %if.then
  %16 = load i8*, i8** %s, align 8
  %17 = load i8, i8* %16, align 1
  %conv27 = sext i8 %17 to i32
  %cmp28 = icmp eq i32 %conv27, 95
  br i1 %cmp28, label %if.then.30, label %if.end.55

if.then.30:                                       ; preds = %if.end.26
  %18 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings = getelementptr inbounds %struct.cop, %struct.cop* %18, i32 0, i32 14
  %19 = load %struct.sv*, %struct.sv** %cop_warnings, align 8
  %cmp31 = icmp ne %struct.sv* %19, null
  br i1 %cmp31, label %land.lhs.true, label %lor.lhs.false.44

land.lhs.true:                                    ; preds = %if.then.30
  %20 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings33 = getelementptr inbounds %struct.cop, %struct.cop* %20, i32 0, i32 14
  %21 = load %struct.sv*, %struct.sv** %cop_warnings33, align 8
  %cmp34 = icmp ne %struct.sv* %21, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 2)
  br i1 %cmp34, label %land.lhs.true.36, label %lor.lhs.false.44

land.lhs.true.36:                                 ; preds = %land.lhs.true
  %22 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings37 = getelementptr inbounds %struct.cop, %struct.cop* %22, i32 0, i32 14
  %23 = load %struct.sv*, %struct.sv** %cop_warnings37, align 8
  %cmp38 = icmp eq %struct.sv* %23, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 1)
  br i1 %cmp38, label %if.then.52, label %lor.lhs.false.40

lor.lhs.false.40:                                 ; preds = %land.lhs.true.36
  %24 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings41 = getelementptr inbounds %struct.cop, %struct.cop* %24, i32 0, i32 14
  %25 = load %struct.sv*, %struct.sv** %cop_warnings41, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %25, i32 0, i32 0
  %26 = load i8*, i8** %sv_any, align 8
  %27 = bitcast i8* %26 to %struct.xpv*
  %xpv_pv = getelementptr inbounds %struct.xpv, %struct.xpv* %27, i32 0, i32 0
  %28 = load i8*, i8** %xpv_pv, align 8
  %arrayidx42 = getelementptr inbounds i8, i8* %28, i64 7
  %29 = load i8, i8* %arrayidx42, align 1
  %conv43 = sext i8 %29 to i32
  %and = and i32 %conv43, 1
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then.52, label %lor.lhs.false.44

lor.lhs.false.44:                                 ; preds = %lor.lhs.false.40, %land.lhs.true, %if.then.30
  %30 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings45 = getelementptr inbounds %struct.cop, %struct.cop* %30, i32 0, i32 14
  %31 = load %struct.sv*, %struct.sv** %cop_warnings45, align 8
  %cmp46 = icmp eq %struct.sv* %31, null
  br i1 %cmp46, label %land.lhs.true.48, label %if.end.53

land.lhs.true.48:                                 ; preds = %lor.lhs.false.44
  %32 = load i8, i8* @PL_dowarn, align 1
  %conv49 = zext i8 %32 to i32
  %and50 = and i32 %conv49, 1
  %tobool51 = icmp ne i32 %and50, 0
  br i1 %tobool51, label %if.then.52, label %if.end.53

if.then.52:                                       ; preds = %land.lhs.true.48, %lor.lhs.false.40, %land.lhs.true.36
  call void (i32, i8*, ...) @Perl_warner(i32 28, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.127, i32 0, i32 0))
  br label %if.end.53

if.end.53:                                        ; preds = %if.then.52, %land.lhs.true.48, %lor.lhs.false.44
  %33 = load i8*, i8** %s, align 8
  %incdec.ptr54 = getelementptr inbounds i8, i8* %33, i32 1
  store i8* %incdec.ptr54, i8** %s, align 8
  store i8* %33, i8** %lastub, align 8
  br label %if.end.55

if.end.55:                                        ; preds = %if.end.53, %if.end.26
  %34 = load i32, i32* %shift, align 4
  %idxprom = sext i32 %34 to i64
  %arrayidx56 = getelementptr inbounds [5 x i8*], [5 x i8*]* @Perl_scan_num.bases, i32 0, i64 %idxprom
  %35 = load i8*, i8** %arrayidx56, align 8
  store i8* %35, i8** %base, align 8
  %36 = load i32, i32* %shift, align 4
  %idxprom57 = sext i32 %36 to i64
  %arrayidx58 = getelementptr inbounds [5 x i8*], [5 x i8*]* @Perl_scan_num.Bases, i32 0, i64 %idxprom57
  %37 = load i8*, i8** %arrayidx58, align 8
  store i8* %37, i8** %Base, align 8
  %38 = load i32, i32* %shift, align 4
  %idxprom59 = sext i32 %38 to i64
  %arrayidx60 = getelementptr inbounds [5 x i8*], [5 x i8*]* @Perl_scan_num.maxima, i32 0, i64 %idxprom59
  %39 = load i8*, i8** %arrayidx60, align 8
  store i8* %39, i8** %max, align 8
  br label %for.cond

for.cond:                                         ; preds = %sw.epilog, %if.end.55
  %40 = load i8*, i8** %s, align 8
  %41 = load i8, i8* %40, align 1
  %conv61 = sext i8 %41 to i32
  switch i32 %conv61, label %sw.default.62 [
    i32 95, label %sw.bb.63
    i32 56, label %sw.bb.100
    i32 57, label %sw.bb.100
    i32 50, label %sw.bb.107
    i32 51, label %sw.bb.107
    i32 52, label %sw.bb.107
    i32 53, label %sw.bb.107
    i32 54, label %sw.bb.107
    i32 55, label %sw.bb.107
    i32 48, label %sw.bb.115
    i32 49, label %sw.bb.115
    i32 97, label %sw.bb.120
    i32 98, label %sw.bb.120
    i32 99, label %sw.bb.120
    i32 100, label %sw.bb.120
    i32 101, label %sw.bb.120
    i32 102, label %sw.bb.120
    i32 65, label %sw.bb.120
    i32 66, label %sw.bb.120
    i32 67, label %sw.bb.120
    i32 68, label %sw.bb.120
    i32 69, label %sw.bb.120
    i32 70, label %sw.bb.120
  ]

sw.default.62:                                    ; preds = %for.cond
  br label %out

sw.bb.63:                                         ; preds = %for.cond
  %42 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings64 = getelementptr inbounds %struct.cop, %struct.cop* %42, i32 0, i32 14
  %43 = load %struct.sv*, %struct.sv** %cop_warnings64, align 8
  %cmp65 = icmp ne %struct.sv* %43, null
  br i1 %cmp65, label %land.lhs.true.67, label %lor.lhs.false.83

land.lhs.true.67:                                 ; preds = %sw.bb.63
  %44 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings68 = getelementptr inbounds %struct.cop, %struct.cop* %44, i32 0, i32 14
  %45 = load %struct.sv*, %struct.sv** %cop_warnings68, align 8
  %cmp69 = icmp ne %struct.sv* %45, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 2)
  br i1 %cmp69, label %land.lhs.true.71, label %lor.lhs.false.83

land.lhs.true.71:                                 ; preds = %land.lhs.true.67
  %46 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings72 = getelementptr inbounds %struct.cop, %struct.cop* %46, i32 0, i32 14
  %47 = load %struct.sv*, %struct.sv** %cop_warnings72, align 8
  %cmp73 = icmp eq %struct.sv* %47, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 1)
  br i1 %cmp73, label %land.lhs.true.91, label %lor.lhs.false.75

lor.lhs.false.75:                                 ; preds = %land.lhs.true.71
  %48 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings76 = getelementptr inbounds %struct.cop, %struct.cop* %48, i32 0, i32 14
  %49 = load %struct.sv*, %struct.sv** %cop_warnings76, align 8
  %sv_any77 = getelementptr inbounds %struct.sv, %struct.sv* %49, i32 0, i32 0
  %50 = load i8*, i8** %sv_any77, align 8
  %51 = bitcast i8* %50 to %struct.xpv*
  %xpv_pv78 = getelementptr inbounds %struct.xpv, %struct.xpv* %51, i32 0, i32 0
  %52 = load i8*, i8** %xpv_pv78, align 8
  %arrayidx79 = getelementptr inbounds i8, i8* %52, i64 7
  %53 = load i8, i8* %arrayidx79, align 1
  %conv80 = sext i8 %53 to i32
  %and81 = and i32 %conv80, 1
  %tobool82 = icmp ne i32 %and81, 0
  br i1 %tobool82, label %land.lhs.true.91, label %lor.lhs.false.83

lor.lhs.false.83:                                 ; preds = %lor.lhs.false.75, %land.lhs.true.67, %sw.bb.63
  %54 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings84 = getelementptr inbounds %struct.cop, %struct.cop* %54, i32 0, i32 14
  %55 = load %struct.sv*, %struct.sv** %cop_warnings84, align 8
  %cmp85 = icmp eq %struct.sv* %55, null
  br i1 %cmp85, label %land.lhs.true.87, label %if.end.98

land.lhs.true.87:                                 ; preds = %lor.lhs.false.83
  %56 = load i8, i8* @PL_dowarn, align 1
  %conv88 = zext i8 %56 to i32
  %and89 = and i32 %conv88, 1
  %tobool90 = icmp ne i32 %and89, 0
  br i1 %tobool90, label %land.lhs.true.91, label %if.end.98

land.lhs.true.91:                                 ; preds = %land.lhs.true.87, %lor.lhs.false.75, %land.lhs.true.71
  %57 = load i8*, i8** %lastub, align 8
  %tobool92 = icmp ne i8* %57, null
  br i1 %tobool92, label %land.lhs.true.93, label %if.end.98

land.lhs.true.93:                                 ; preds = %land.lhs.true.91
  %58 = load i8*, i8** %s, align 8
  %59 = load i8*, i8** %lastub, align 8
  %add.ptr94 = getelementptr inbounds i8, i8* %59, i64 1
  %cmp95 = icmp eq i8* %58, %add.ptr94
  br i1 %cmp95, label %if.then.97, label %if.end.98

if.then.97:                                       ; preds = %land.lhs.true.93
  call void (i32, i8*, ...) @Perl_warner(i32 28, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.127, i32 0, i32 0))
  br label %if.end.98

if.end.98:                                        ; preds = %if.then.97, %land.lhs.true.93, %land.lhs.true.91, %land.lhs.true.87, %lor.lhs.false.83
  %60 = load i8*, i8** %s, align 8
  %incdec.ptr99 = getelementptr inbounds i8, i8* %60, i32 1
  store i8* %incdec.ptr99, i8** %s, align 8
  store i8* %60, i8** %lastub, align 8
  br label %sw.epilog

sw.bb.100:                                        ; preds = %for.cond, %for.cond
  %61 = load i32, i32* %shift, align 4
  %cmp101 = icmp eq i32 %61, 3
  br i1 %cmp101, label %if.then.103, label %if.end.106

if.then.103:                                      ; preds = %sw.bb.100
  %62 = load i8*, i8** %s, align 8
  %63 = load i8, i8* %62, align 1
  %conv104 = sext i8 %63 to i32
  %call = call i8* (i8*, ...) @Perl_form(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.128, i32 0, i32 0), i32 %conv104)
  %call105 = call i32 @Perl_yyerror(i8* %call)
  br label %if.end.106

if.end.106:                                       ; preds = %if.then.103, %sw.bb.100
  br label %sw.bb.107

sw.bb.107:                                        ; preds = %for.cond, %for.cond, %for.cond, %for.cond, %for.cond, %for.cond, %if.end.106
  %64 = load i32, i32* %shift, align 4
  %cmp108 = icmp eq i32 %64, 1
  br i1 %cmp108, label %if.then.110, label %if.end.114

if.then.110:                                      ; preds = %sw.bb.107
  %65 = load i8*, i8** %s, align 8
  %66 = load i8, i8* %65, align 1
  %conv111 = sext i8 %66 to i32
  %call112 = call i8* (i8*, ...) @Perl_form(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.129, i32 0, i32 0), i32 %conv111)
  %call113 = call i32 @Perl_yyerror(i8* %call112)
  br label %if.end.114

if.end.114:                                       ; preds = %if.then.110, %sw.bb.107
  br label %sw.bb.115

sw.bb.115:                                        ; preds = %for.cond, %for.cond, %if.end.114
  %67 = load i8*, i8** %s, align 8
  %incdec.ptr116 = getelementptr inbounds i8, i8* %67, i32 1
  store i8* %incdec.ptr116, i8** %s, align 8
  %68 = load i8, i8* %67, align 1
  %conv117 = sext i8 %68 to i32
  %and118 = and i32 %conv117, 15
  %conv119 = sext i32 %and118 to i64
  store i64 %conv119, i64* %b, align 8
  br label %digit

sw.bb.120:                                        ; preds = %for.cond, %for.cond, %for.cond, %for.cond, %for.cond, %for.cond, %for.cond, %for.cond, %for.cond, %for.cond, %for.cond, %for.cond
  %69 = load i32, i32* %shift, align 4
  %cmp121 = icmp ne i32 %69, 4
  br i1 %cmp121, label %if.then.123, label %if.end.124

if.then.123:                                      ; preds = %sw.bb.120
  br label %out

if.end.124:                                       ; preds = %sw.bb.120
  %70 = load i8*, i8** %s, align 8
  %incdec.ptr125 = getelementptr inbounds i8, i8* %70, i32 1
  store i8* %incdec.ptr125, i8** %s, align 8
  %71 = load i8, i8* %70, align 1
  %conv126 = sext i8 %71 to i32
  %and127 = and i32 %conv126, 7
  %add = add nsw i32 %and127, 9
  %conv128 = sext i32 %add to i64
  store i64 %conv128, i64* %b, align 8
  br label %digit

digit:                                            ; preds = %if.end.124, %sw.bb.115
  store i8 0, i8* %just_zero, align 1
  %72 = load i8, i8* %overflowed, align 1
  %tobool129 = icmp ne i8 %72, 0
  br i1 %tobool129, label %if.end.162, label %if.then.130

if.then.130:                                      ; preds = %digit
  %73 = load i64, i64* %u, align 8
  %74 = load i32, i32* %shift, align 4
  %sh_prom = zext i32 %74 to i64
  %shl = shl i64 %73, %sh_prom
  store i64 %shl, i64* %x, align 8
  %75 = load i64, i64* %x, align 8
  %76 = load i32, i32* %shift, align 4
  %sh_prom131 = zext i32 %76 to i64
  %shr = lshr i64 %75, %sh_prom131
  %77 = load i64, i64* %u, align 8
  %cmp132 = icmp ne i64 %shr, %77
  br i1 %cmp132, label %land.lhs.true.134, label %if.else.160

land.lhs.true.134:                                ; preds = %if.then.130
  %78 = load i32, i32* @PL_hints, align 4
  %and135 = and i32 %78, 16384
  %tobool136 = icmp ne i32 %and135, 0
  br i1 %tobool136, label %if.else.160, label %if.then.137

if.then.137:                                      ; preds = %land.lhs.true.134
  store i8 1, i8* %overflowed, align 1
  %79 = load i64, i64* %u, align 8
  %conv138 = uitofp i64 %79 to double
  store double %conv138, double* %n, align 8
  %80 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings139 = getelementptr inbounds %struct.cop, %struct.cop* %80, i32 0, i32 14
  %81 = load %struct.sv*, %struct.sv** %cop_warnings139, align 8
  %cmp140 = icmp eq %struct.sv* %81, null
  br i1 %cmp140, label %if.then.158, label %lor.lhs.false.142

lor.lhs.false.142:                                ; preds = %if.then.137
  %82 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings143 = getelementptr inbounds %struct.cop, %struct.cop* %82, i32 0, i32 14
  %83 = load %struct.sv*, %struct.sv** %cop_warnings143, align 8
  %cmp144 = icmp eq %struct.sv* %83, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 1)
  br i1 %cmp144, label %if.then.158, label %lor.lhs.false.146

lor.lhs.false.146:                                ; preds = %lor.lhs.false.142
  %84 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings147 = getelementptr inbounds %struct.cop, %struct.cop* %84, i32 0, i32 14
  %85 = load %struct.sv*, %struct.sv** %cop_warnings147, align 8
  %cmp148 = icmp ne %struct.sv* %85, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 2)
  br i1 %cmp148, label %land.lhs.true.150, label %if.end.159

land.lhs.true.150:                                ; preds = %lor.lhs.false.146
  %86 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings151 = getelementptr inbounds %struct.cop, %struct.cop* %86, i32 0, i32 14
  %87 = load %struct.sv*, %struct.sv** %cop_warnings151, align 8
  %sv_any152 = getelementptr inbounds %struct.sv, %struct.sv* %87, i32 0, i32 0
  %88 = load i8*, i8** %sv_any152, align 8
  %89 = bitcast i8* %88 to %struct.xpv*
  %xpv_pv153 = getelementptr inbounds %struct.xpv, %struct.xpv* %89, i32 0, i32 0
  %90 = load i8*, i8** %xpv_pv153, align 8
  %arrayidx154 = getelementptr inbounds i8, i8* %90, i64 3
  %91 = load i8, i8* %arrayidx154, align 1
  %conv155 = sext i8 %91 to i32
  %and156 = and i32 %conv155, 64
  %tobool157 = icmp ne i32 %and156, 0
  br i1 %tobool157, label %if.then.158, label %if.end.159

if.then.158:                                      ; preds = %land.lhs.true.150, %lor.lhs.false.142, %if.then.137
  %92 = load i8*, i8** %base, align 8
  call void (i32, i8*, ...) @Perl_warner(i32 15, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.130, i32 0, i32 0), i8* %92)
  br label %if.end.159

if.end.159:                                       ; preds = %if.then.158, %land.lhs.true.150, %lor.lhs.false.146
  br label %if.end.161

if.else.160:                                      ; preds = %land.lhs.true.134, %if.then.130
  %93 = load i64, i64* %x, align 8
  %94 = load i64, i64* %b, align 8
  %or = or i64 %93, %94
  store i64 %or, i64* %u, align 8
  br label %if.end.161

if.end.161:                                       ; preds = %if.else.160, %if.end.159
  br label %if.end.162

if.end.162:                                       ; preds = %if.end.161, %digit
  %95 = load i8, i8* %overflowed, align 1
  %tobool163 = icmp ne i8 %95, 0
  br i1 %tobool163, label %if.then.164, label %if.end.169

if.then.164:                                      ; preds = %if.end.162
  %96 = load i32, i32* %shift, align 4
  %idxprom165 = sext i32 %96 to i64
  %arrayidx166 = getelementptr inbounds [5 x double], [5 x double]* @Perl_scan_num.nvshift, i32 0, i64 %idxprom165
  %97 = load double, double* %arrayidx166, align 8
  %98 = load double, double* %n, align 8
  %mul = fmul double %98, %97
  store double %mul, double* %n, align 8
  %99 = load i64, i64* %b, align 8
  %conv167 = uitofp i64 %99 to double
  %100 = load double, double* %n, align 8
  %add168 = fadd double %100, %conv167
  store double %add168, double* %n, align 8
  br label %if.end.169

if.end.169:                                       ; preds = %if.then.164, %if.end.162
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end.169, %if.end.98
  br label %for.cond

out:                                              ; preds = %if.then.123, %sw.default.62
  %101 = load i8*, i8** %s, align 8
  %arrayidx170 = getelementptr inbounds i8, i8* %101, i64 -1
  %102 = load i8, i8* %arrayidx170, align 1
  %conv171 = sext i8 %102 to i32
  %cmp172 = icmp eq i32 %conv171, 95
  br i1 %cmp172, label %if.then.174, label %if.end.204

if.then.174:                                      ; preds = %out
  %103 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings175 = getelementptr inbounds %struct.cop, %struct.cop* %103, i32 0, i32 14
  %104 = load %struct.sv*, %struct.sv** %cop_warnings175, align 8
  %cmp176 = icmp ne %struct.sv* %104, null
  br i1 %cmp176, label %land.lhs.true.178, label %lor.lhs.false.194

land.lhs.true.178:                                ; preds = %if.then.174
  %105 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings179 = getelementptr inbounds %struct.cop, %struct.cop* %105, i32 0, i32 14
  %106 = load %struct.sv*, %struct.sv** %cop_warnings179, align 8
  %cmp180 = icmp ne %struct.sv* %106, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 2)
  br i1 %cmp180, label %land.lhs.true.182, label %lor.lhs.false.194

land.lhs.true.182:                                ; preds = %land.lhs.true.178
  %107 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings183 = getelementptr inbounds %struct.cop, %struct.cop* %107, i32 0, i32 14
  %108 = load %struct.sv*, %struct.sv** %cop_warnings183, align 8
  %cmp184 = icmp eq %struct.sv* %108, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 1)
  br i1 %cmp184, label %if.then.202, label %lor.lhs.false.186

lor.lhs.false.186:                                ; preds = %land.lhs.true.182
  %109 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings187 = getelementptr inbounds %struct.cop, %struct.cop* %109, i32 0, i32 14
  %110 = load %struct.sv*, %struct.sv** %cop_warnings187, align 8
  %sv_any188 = getelementptr inbounds %struct.sv, %struct.sv* %110, i32 0, i32 0
  %111 = load i8*, i8** %sv_any188, align 8
  %112 = bitcast i8* %111 to %struct.xpv*
  %xpv_pv189 = getelementptr inbounds %struct.xpv, %struct.xpv* %112, i32 0, i32 0
  %113 = load i8*, i8** %xpv_pv189, align 8
  %arrayidx190 = getelementptr inbounds i8, i8* %113, i64 7
  %114 = load i8, i8* %arrayidx190, align 1
  %conv191 = sext i8 %114 to i32
  %and192 = and i32 %conv191, 1
  %tobool193 = icmp ne i32 %and192, 0
  br i1 %tobool193, label %if.then.202, label %lor.lhs.false.194

lor.lhs.false.194:                                ; preds = %lor.lhs.false.186, %land.lhs.true.178, %if.then.174
  %115 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings195 = getelementptr inbounds %struct.cop, %struct.cop* %115, i32 0, i32 14
  %116 = load %struct.sv*, %struct.sv** %cop_warnings195, align 8
  %cmp196 = icmp eq %struct.sv* %116, null
  br i1 %cmp196, label %land.lhs.true.198, label %if.end.203

land.lhs.true.198:                                ; preds = %lor.lhs.false.194
  %117 = load i8, i8* @PL_dowarn, align 1
  %conv199 = zext i8 %117 to i32
  %and200 = and i32 %conv199, 1
  %tobool201 = icmp ne i32 %and200, 0
  br i1 %tobool201, label %if.then.202, label %if.end.203

if.then.202:                                      ; preds = %land.lhs.true.198, %lor.lhs.false.186, %land.lhs.true.182
  call void (i32, i8*, ...) @Perl_warner(i32 28, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.127, i32 0, i32 0))
  br label %if.end.203

if.end.203:                                       ; preds = %if.then.202, %land.lhs.true.198, %lor.lhs.false.194
  br label %if.end.204

if.end.204:                                       ; preds = %if.end.203, %out
  %call205 = call %struct.sv* @Perl_newSV(i64 0)
  store %struct.sv* %call205, %struct.sv** %sv, align 8
  %118 = load i8, i8* %overflowed, align 1
  %tobool206 = icmp ne i8 %118, 0
  br i1 %tobool206, label %if.then.207, label %if.else.240

if.then.207:                                      ; preds = %if.end.204
  %119 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings208 = getelementptr inbounds %struct.cop, %struct.cop* %119, i32 0, i32 14
  %120 = load %struct.sv*, %struct.sv** %cop_warnings208, align 8
  %cmp209 = icmp ne %struct.sv* %120, null
  br i1 %cmp209, label %land.lhs.true.211, label %lor.lhs.false.227

land.lhs.true.211:                                ; preds = %if.then.207
  %121 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings212 = getelementptr inbounds %struct.cop, %struct.cop* %121, i32 0, i32 14
  %122 = load %struct.sv*, %struct.sv** %cop_warnings212, align 8
  %cmp213 = icmp ne %struct.sv* %122, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 2)
  br i1 %cmp213, label %land.lhs.true.215, label %lor.lhs.false.227

land.lhs.true.215:                                ; preds = %land.lhs.true.211
  %123 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings216 = getelementptr inbounds %struct.cop, %struct.cop* %123, i32 0, i32 14
  %124 = load %struct.sv*, %struct.sv** %cop_warnings216, align 8
  %cmp217 = icmp eq %struct.sv* %124, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 1)
  br i1 %cmp217, label %land.lhs.true.235, label %lor.lhs.false.219

lor.lhs.false.219:                                ; preds = %land.lhs.true.215
  %125 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings220 = getelementptr inbounds %struct.cop, %struct.cop* %125, i32 0, i32 14
  %126 = load %struct.sv*, %struct.sv** %cop_warnings220, align 8
  %sv_any221 = getelementptr inbounds %struct.sv, %struct.sv* %126, i32 0, i32 0
  %127 = load i8*, i8** %sv_any221, align 8
  %128 = bitcast i8* %127 to %struct.xpv*
  %xpv_pv222 = getelementptr inbounds %struct.xpv, %struct.xpv* %128, i32 0, i32 0
  %129 = load i8*, i8** %xpv_pv222, align 8
  %arrayidx223 = getelementptr inbounds i8, i8* %129, i64 4
  %130 = load i8, i8* %arrayidx223, align 1
  %conv224 = sext i8 %130 to i32
  %and225 = and i32 %conv224, 4
  %tobool226 = icmp ne i32 %and225, 0
  br i1 %tobool226, label %land.lhs.true.235, label %lor.lhs.false.227

lor.lhs.false.227:                                ; preds = %lor.lhs.false.219, %land.lhs.true.211, %if.then.207
  %131 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings228 = getelementptr inbounds %struct.cop, %struct.cop* %131, i32 0, i32 14
  %132 = load %struct.sv*, %struct.sv** %cop_warnings228, align 8
  %cmp229 = icmp eq %struct.sv* %132, null
  br i1 %cmp229, label %land.lhs.true.231, label %if.end.239

land.lhs.true.231:                                ; preds = %lor.lhs.false.227
  %133 = load i8, i8* @PL_dowarn, align 1
  %conv232 = zext i8 %133 to i32
  %and233 = and i32 %conv232, 1
  %tobool234 = icmp ne i32 %and233, 0
  br i1 %tobool234, label %land.lhs.true.235, label %if.end.239

land.lhs.true.235:                                ; preds = %land.lhs.true.231, %lor.lhs.false.219, %land.lhs.true.215
  %134 = load double, double* %n, align 8
  %cmp236 = fcmp ogt double %134, 0x41EFFFFFFFE00000
  br i1 %cmp236, label %if.then.238, label %if.end.239

if.then.238:                                      ; preds = %land.lhs.true.235
  %135 = load i8*, i8** %Base, align 8
  %136 = load i8*, i8** %max, align 8
  call void (i32, i8*, ...) @Perl_warner(i32 17, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.131, i32 0, i32 0), i8* %135, i8* %136)
  br label %if.end.239

if.end.239:                                       ; preds = %if.then.238, %land.lhs.true.235, %land.lhs.true.231, %lor.lhs.false.227
  %137 = load %struct.sv*, %struct.sv** %sv, align 8
  %138 = load double, double* %n, align 8
  call void @Perl_sv_setnv(%struct.sv* %137, double %138)
  br label %if.end.273

if.else.240:                                      ; preds = %if.end.204
  %139 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings241 = getelementptr inbounds %struct.cop, %struct.cop* %139, i32 0, i32 14
  %140 = load %struct.sv*, %struct.sv** %cop_warnings241, align 8
  %cmp242 = icmp ne %struct.sv* %140, null
  br i1 %cmp242, label %land.lhs.true.244, label %lor.lhs.false.260

land.lhs.true.244:                                ; preds = %if.else.240
  %141 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings245 = getelementptr inbounds %struct.cop, %struct.cop* %141, i32 0, i32 14
  %142 = load %struct.sv*, %struct.sv** %cop_warnings245, align 8
  %cmp246 = icmp ne %struct.sv* %142, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 2)
  br i1 %cmp246, label %land.lhs.true.248, label %lor.lhs.false.260

land.lhs.true.248:                                ; preds = %land.lhs.true.244
  %143 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings249 = getelementptr inbounds %struct.cop, %struct.cop* %143, i32 0, i32 14
  %144 = load %struct.sv*, %struct.sv** %cop_warnings249, align 8
  %cmp250 = icmp eq %struct.sv* %144, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 1)
  br i1 %cmp250, label %land.lhs.true.268, label %lor.lhs.false.252

lor.lhs.false.252:                                ; preds = %land.lhs.true.248
  %145 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings253 = getelementptr inbounds %struct.cop, %struct.cop* %145, i32 0, i32 14
  %146 = load %struct.sv*, %struct.sv** %cop_warnings253, align 8
  %sv_any254 = getelementptr inbounds %struct.sv, %struct.sv* %146, i32 0, i32 0
  %147 = load i8*, i8** %sv_any254, align 8
  %148 = bitcast i8* %147 to %struct.xpv*
  %xpv_pv255 = getelementptr inbounds %struct.xpv, %struct.xpv* %148, i32 0, i32 0
  %149 = load i8*, i8** %xpv_pv255, align 8
  %arrayidx256 = getelementptr inbounds i8, i8* %149, i64 4
  %150 = load i8, i8* %arrayidx256, align 1
  %conv257 = sext i8 %150 to i32
  %and258 = and i32 %conv257, 4
  %tobool259 = icmp ne i32 %and258, 0
  br i1 %tobool259, label %land.lhs.true.268, label %lor.lhs.false.260

lor.lhs.false.260:                                ; preds = %lor.lhs.false.252, %land.lhs.true.244, %if.else.240
  %151 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings261 = getelementptr inbounds %struct.cop, %struct.cop* %151, i32 0, i32 14
  %152 = load %struct.sv*, %struct.sv** %cop_warnings261, align 8
  %cmp262 = icmp eq %struct.sv* %152, null
  br i1 %cmp262, label %land.lhs.true.264, label %if.end.272

land.lhs.true.264:                                ; preds = %lor.lhs.false.260
  %153 = load i8, i8* @PL_dowarn, align 1
  %conv265 = zext i8 %153 to i32
  %and266 = and i32 %conv265, 1
  %tobool267 = icmp ne i32 %and266, 0
  br i1 %tobool267, label %land.lhs.true.268, label %if.end.272

land.lhs.true.268:                                ; preds = %land.lhs.true.264, %lor.lhs.false.252, %land.lhs.true.248
  %154 = load i64, i64* %u, align 8
  %cmp269 = icmp ugt i64 %154, 4294967295
  br i1 %cmp269, label %if.then.271, label %if.end.272

if.then.271:                                      ; preds = %land.lhs.true.268
  %155 = load i8*, i8** %Base, align 8
  %156 = load i8*, i8** %max, align 8
  call void (i32, i8*, ...) @Perl_warner(i32 17, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.131, i32 0, i32 0), i8* %155, i8* %156)
  br label %if.end.272

if.end.272:                                       ; preds = %if.then.271, %land.lhs.true.268, %land.lhs.true.264, %lor.lhs.false.260
  %157 = load %struct.sv*, %struct.sv** %sv, align 8
  %158 = load i64, i64* %u, align 8
  call void @Perl_sv_setuv(%struct.sv* %157, i64 %158)
  br label %if.end.273

if.end.273:                                       ; preds = %if.end.272, %if.end.239
  %159 = load i8, i8* %just_zero, align 1
  %conv274 = sext i8 %159 to i32
  %tobool275 = icmp ne i32 %conv274, 0
  br i1 %tobool275, label %land.lhs.true.276, label %if.else.281

land.lhs.true.276:                                ; preds = %if.end.273
  %160 = load i32, i32* @PL_hints, align 4
  %and277 = and i32 %160, 4096
  %tobool278 = icmp ne i32 %and277, 0
  br i1 %tobool278, label %if.then.279, label %if.else.281

if.then.279:                                      ; preds = %land.lhs.true.276
  %161 = load i8*, i8** %start.addr, align 8
  %162 = load i8*, i8** %s, align 8
  %163 = load i8*, i8** %start.addr, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %162 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %163 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %164 = load %struct.sv*, %struct.sv** %sv, align 8
  %call280 = call %struct.sv* @S_new_constant(i8* %161, i64 %sub.ptr.sub, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.132, i32 0, i32 0), %struct.sv* %164, %struct.sv* null, i8* null)
  store %struct.sv* %call280, %struct.sv** %sv, align 8
  br label %if.end.290

if.else.281:                                      ; preds = %land.lhs.true.276, %if.end.273
  %165 = load i32, i32* @PL_hints, align 4
  %and282 = and i32 %165, 16384
  %tobool283 = icmp ne i32 %and282, 0
  br i1 %tobool283, label %if.then.284, label %if.end.289

if.then.284:                                      ; preds = %if.else.281
  %166 = load i8*, i8** %start.addr, align 8
  %167 = load i8*, i8** %s, align 8
  %168 = load i8*, i8** %start.addr, align 8
  %sub.ptr.lhs.cast285 = ptrtoint i8* %167 to i64
  %sub.ptr.rhs.cast286 = ptrtoint i8* %168 to i64
  %sub.ptr.sub287 = sub i64 %sub.ptr.lhs.cast285, %sub.ptr.rhs.cast286
  %169 = load %struct.sv*, %struct.sv** %sv, align 8
  %call288 = call %struct.sv* @S_new_constant(i8* %166, i64 %sub.ptr.sub287, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.118, i32 0, i32 0), %struct.sv* %169, %struct.sv* null, i8* null)
  store %struct.sv* %call288, %struct.sv** %sv, align 8
  br label %if.end.289

if.end.289:                                       ; preds = %if.then.284, %if.else.281
  br label %if.end.290

if.end.290:                                       ; preds = %if.end.289, %if.then.279
  br label %sw.epilog.768

sw.bb.291:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  br label %decimal

decimal:                                          ; preds = %sw.bb.291, %if.then.23
  store i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i32 0), i8** %d, align 8
  store i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i64 250), i8** %e, align 8
  store i8 0, i8* %floatit, align 1
  br label %while.cond

while.cond:                                       ; preds = %if.end.349, %decimal
  %170 = load i8*, i8** %s, align 8
  %171 = load i8, i8* %170, align 1
  %conv292 = sext i8 %171 to i32
  %cmp293 = icmp sge i32 %conv292, 48
  br i1 %cmp293, label %land.lhs.true.295, label %lor.rhs

land.lhs.true.295:                                ; preds = %while.cond
  %172 = load i8*, i8** %s, align 8
  %173 = load i8, i8* %172, align 1
  %conv296 = sext i8 %173 to i32
  %cmp297 = icmp sle i32 %conv296, 57
  br i1 %cmp297, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %land.lhs.true.295, %while.cond
  %174 = load i8*, i8** %s, align 8
  %175 = load i8, i8* %174, align 1
  %conv299 = sext i8 %175 to i32
  %cmp300 = icmp eq i32 %conv299, 95
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %land.lhs.true.295
  %176 = phi i1 [ true, %land.lhs.true.295 ], [ %cmp300, %lor.rhs ]
  br i1 %176, label %while.body, label %while.end

while.body:                                       ; preds = %lor.end
  %177 = load i8*, i8** %s, align 8
  %178 = load i8, i8* %177, align 1
  %conv302 = sext i8 %178 to i32
  %cmp303 = icmp eq i32 %conv302, 95
  br i1 %cmp303, label %if.then.305, label %if.else.342

if.then.305:                                      ; preds = %while.body
  %179 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings306 = getelementptr inbounds %struct.cop, %struct.cop* %179, i32 0, i32 14
  %180 = load %struct.sv*, %struct.sv** %cop_warnings306, align 8
  %cmp307 = icmp ne %struct.sv* %180, null
  br i1 %cmp307, label %land.lhs.true.309, label %lor.lhs.false.325

land.lhs.true.309:                                ; preds = %if.then.305
  %181 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings310 = getelementptr inbounds %struct.cop, %struct.cop* %181, i32 0, i32 14
  %182 = load %struct.sv*, %struct.sv** %cop_warnings310, align 8
  %cmp311 = icmp ne %struct.sv* %182, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 2)
  br i1 %cmp311, label %land.lhs.true.313, label %lor.lhs.false.325

land.lhs.true.313:                                ; preds = %land.lhs.true.309
  %183 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings314 = getelementptr inbounds %struct.cop, %struct.cop* %183, i32 0, i32 14
  %184 = load %struct.sv*, %struct.sv** %cop_warnings314, align 8
  %cmp315 = icmp eq %struct.sv* %184, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 1)
  br i1 %cmp315, label %land.lhs.true.333, label %lor.lhs.false.317

lor.lhs.false.317:                                ; preds = %land.lhs.true.313
  %185 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings318 = getelementptr inbounds %struct.cop, %struct.cop* %185, i32 0, i32 14
  %186 = load %struct.sv*, %struct.sv** %cop_warnings318, align 8
  %sv_any319 = getelementptr inbounds %struct.sv, %struct.sv* %186, i32 0, i32 0
  %187 = load i8*, i8** %sv_any319, align 8
  %188 = bitcast i8* %187 to %struct.xpv*
  %xpv_pv320 = getelementptr inbounds %struct.xpv, %struct.xpv* %188, i32 0, i32 0
  %189 = load i8*, i8** %xpv_pv320, align 8
  %arrayidx321 = getelementptr inbounds i8, i8* %189, i64 7
  %190 = load i8, i8* %arrayidx321, align 1
  %conv322 = sext i8 %190 to i32
  %and323 = and i32 %conv322, 1
  %tobool324 = icmp ne i32 %and323, 0
  br i1 %tobool324, label %land.lhs.true.333, label %lor.lhs.false.325

lor.lhs.false.325:                                ; preds = %lor.lhs.false.317, %land.lhs.true.309, %if.then.305
  %191 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings326 = getelementptr inbounds %struct.cop, %struct.cop* %191, i32 0, i32 14
  %192 = load %struct.sv*, %struct.sv** %cop_warnings326, align 8
  %cmp327 = icmp eq %struct.sv* %192, null
  br i1 %cmp327, label %land.lhs.true.329, label %if.end.340

land.lhs.true.329:                                ; preds = %lor.lhs.false.325
  %193 = load i8, i8* @PL_dowarn, align 1
  %conv330 = zext i8 %193 to i32
  %and331 = and i32 %conv330, 1
  %tobool332 = icmp ne i32 %and331, 0
  br i1 %tobool332, label %land.lhs.true.333, label %if.end.340

land.lhs.true.333:                                ; preds = %land.lhs.true.329, %lor.lhs.false.317, %land.lhs.true.313
  %194 = load i8*, i8** %lastub, align 8
  %tobool334 = icmp ne i8* %194, null
  br i1 %tobool334, label %land.lhs.true.335, label %if.end.340

land.lhs.true.335:                                ; preds = %land.lhs.true.333
  %195 = load i8*, i8** %s, align 8
  %196 = load i8*, i8** %lastub, align 8
  %add.ptr336 = getelementptr inbounds i8, i8* %196, i64 1
  %cmp337 = icmp eq i8* %195, %add.ptr336
  br i1 %cmp337, label %if.then.339, label %if.end.340

if.then.339:                                      ; preds = %land.lhs.true.335
  call void (i32, i8*, ...) @Perl_warner(i32 28, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.127, i32 0, i32 0))
  br label %if.end.340

if.end.340:                                       ; preds = %if.then.339, %land.lhs.true.335, %land.lhs.true.333, %land.lhs.true.329, %lor.lhs.false.325
  %197 = load i8*, i8** %s, align 8
  %incdec.ptr341 = getelementptr inbounds i8, i8* %197, i32 1
  store i8* %incdec.ptr341, i8** %s, align 8
  store i8* %197, i8** %lastub, align 8
  br label %if.end.349

if.else.342:                                      ; preds = %while.body
  %198 = load i8*, i8** %d, align 8
  %199 = load i8*, i8** %e, align 8
  %cmp343 = icmp uge i8* %198, %199
  br i1 %cmp343, label %if.then.345, label %if.end.346

if.then.345:                                      ; preds = %if.else.342
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @Perl_scan_num.number_too_long, i32 0, i32 0))
  br label %if.end.346

if.end.346:                                       ; preds = %if.then.345, %if.else.342
  %200 = load i8*, i8** %s, align 8
  %incdec.ptr347 = getelementptr inbounds i8, i8* %200, i32 1
  store i8* %incdec.ptr347, i8** %s, align 8
  %201 = load i8, i8* %200, align 1
  %202 = load i8*, i8** %d, align 8
  %incdec.ptr348 = getelementptr inbounds i8, i8* %202, i32 1
  store i8* %incdec.ptr348, i8** %d, align 8
  store i8 %201, i8* %202, align 1
  br label %if.end.349

if.end.349:                                       ; preds = %if.end.346, %if.end.340
  br label %while.cond

while.end:                                        ; preds = %lor.end
  %203 = load i8*, i8** %lastub, align 8
  %tobool350 = icmp ne i8* %203, null
  br i1 %tobool350, label %land.lhs.true.351, label %if.end.385

land.lhs.true.351:                                ; preds = %while.end
  %204 = load i8*, i8** %s, align 8
  %205 = load i8*, i8** %lastub, align 8
  %add.ptr352 = getelementptr inbounds i8, i8* %205, i64 1
  %cmp353 = icmp eq i8* %204, %add.ptr352
  br i1 %cmp353, label %if.then.355, label %if.end.385

if.then.355:                                      ; preds = %land.lhs.true.351
  %206 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings356 = getelementptr inbounds %struct.cop, %struct.cop* %206, i32 0, i32 14
  %207 = load %struct.sv*, %struct.sv** %cop_warnings356, align 8
  %cmp357 = icmp ne %struct.sv* %207, null
  br i1 %cmp357, label %land.lhs.true.359, label %lor.lhs.false.375

land.lhs.true.359:                                ; preds = %if.then.355
  %208 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings360 = getelementptr inbounds %struct.cop, %struct.cop* %208, i32 0, i32 14
  %209 = load %struct.sv*, %struct.sv** %cop_warnings360, align 8
  %cmp361 = icmp ne %struct.sv* %209, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 2)
  br i1 %cmp361, label %land.lhs.true.363, label %lor.lhs.false.375

land.lhs.true.363:                                ; preds = %land.lhs.true.359
  %210 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings364 = getelementptr inbounds %struct.cop, %struct.cop* %210, i32 0, i32 14
  %211 = load %struct.sv*, %struct.sv** %cop_warnings364, align 8
  %cmp365 = icmp eq %struct.sv* %211, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 1)
  br i1 %cmp365, label %if.then.383, label %lor.lhs.false.367

lor.lhs.false.367:                                ; preds = %land.lhs.true.363
  %212 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings368 = getelementptr inbounds %struct.cop, %struct.cop* %212, i32 0, i32 14
  %213 = load %struct.sv*, %struct.sv** %cop_warnings368, align 8
  %sv_any369 = getelementptr inbounds %struct.sv, %struct.sv* %213, i32 0, i32 0
  %214 = load i8*, i8** %sv_any369, align 8
  %215 = bitcast i8* %214 to %struct.xpv*
  %xpv_pv370 = getelementptr inbounds %struct.xpv, %struct.xpv* %215, i32 0, i32 0
  %216 = load i8*, i8** %xpv_pv370, align 8
  %arrayidx371 = getelementptr inbounds i8, i8* %216, i64 7
  %217 = load i8, i8* %arrayidx371, align 1
  %conv372 = sext i8 %217 to i32
  %and373 = and i32 %conv372, 1
  %tobool374 = icmp ne i32 %and373, 0
  br i1 %tobool374, label %if.then.383, label %lor.lhs.false.375

lor.lhs.false.375:                                ; preds = %lor.lhs.false.367, %land.lhs.true.359, %if.then.355
  %218 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings376 = getelementptr inbounds %struct.cop, %struct.cop* %218, i32 0, i32 14
  %219 = load %struct.sv*, %struct.sv** %cop_warnings376, align 8
  %cmp377 = icmp eq %struct.sv* %219, null
  br i1 %cmp377, label %land.lhs.true.379, label %if.end.384

land.lhs.true.379:                                ; preds = %lor.lhs.false.375
  %220 = load i8, i8* @PL_dowarn, align 1
  %conv380 = zext i8 %220 to i32
  %and381 = and i32 %conv380, 1
  %tobool382 = icmp ne i32 %and381, 0
  br i1 %tobool382, label %if.then.383, label %if.end.384

if.then.383:                                      ; preds = %land.lhs.true.379, %lor.lhs.false.367, %land.lhs.true.363
  call void (i32, i8*, ...) @Perl_warner(i32 28, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.127, i32 0, i32 0))
  br label %if.end.384

if.end.384:                                       ; preds = %if.then.383, %land.lhs.true.379, %lor.lhs.false.375
  br label %if.end.385

if.end.385:                                       ; preds = %if.end.384, %land.lhs.true.351, %while.end
  %221 = load i8*, i8** %s, align 8
  %222 = load i8, i8* %221, align 1
  %conv386 = sext i8 %222 to i32
  %cmp387 = icmp eq i32 %conv386, 46
  br i1 %cmp387, label %land.lhs.true.389, label %if.end.541

land.lhs.true.389:                                ; preds = %if.end.385
  %223 = load i8*, i8** %s, align 8
  %arrayidx390 = getelementptr inbounds i8, i8* %223, i64 1
  %224 = load i8, i8* %arrayidx390, align 1
  %conv391 = sext i8 %224 to i32
  %cmp392 = icmp ne i32 %conv391, 46
  br i1 %cmp392, label %if.then.394, label %if.end.541

if.then.394:                                      ; preds = %land.lhs.true.389
  store i8 1, i8* %floatit, align 1
  %225 = load i8*, i8** %s, align 8
  %incdec.ptr395 = getelementptr inbounds i8, i8* %225, i32 1
  store i8* %incdec.ptr395, i8** %s, align 8
  %226 = load i8, i8* %225, align 1
  %227 = load i8*, i8** %d, align 8
  %incdec.ptr396 = getelementptr inbounds i8, i8* %227, i32 1
  store i8* %incdec.ptr396, i8** %d, align 8
  store i8 %226, i8* %227, align 1
  %228 = load i8*, i8** %s, align 8
  %229 = load i8, i8* %228, align 1
  %conv397 = sext i8 %229 to i32
  %cmp398 = icmp eq i32 %conv397, 95
  br i1 %cmp398, label %if.then.400, label %if.end.430

if.then.400:                                      ; preds = %if.then.394
  %230 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings401 = getelementptr inbounds %struct.cop, %struct.cop* %230, i32 0, i32 14
  %231 = load %struct.sv*, %struct.sv** %cop_warnings401, align 8
  %cmp402 = icmp ne %struct.sv* %231, null
  br i1 %cmp402, label %land.lhs.true.404, label %lor.lhs.false.420

land.lhs.true.404:                                ; preds = %if.then.400
  %232 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings405 = getelementptr inbounds %struct.cop, %struct.cop* %232, i32 0, i32 14
  %233 = load %struct.sv*, %struct.sv** %cop_warnings405, align 8
  %cmp406 = icmp ne %struct.sv* %233, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 2)
  br i1 %cmp406, label %land.lhs.true.408, label %lor.lhs.false.420

land.lhs.true.408:                                ; preds = %land.lhs.true.404
  %234 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings409 = getelementptr inbounds %struct.cop, %struct.cop* %234, i32 0, i32 14
  %235 = load %struct.sv*, %struct.sv** %cop_warnings409, align 8
  %cmp410 = icmp eq %struct.sv* %235, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 1)
  br i1 %cmp410, label %if.then.428, label %lor.lhs.false.412

lor.lhs.false.412:                                ; preds = %land.lhs.true.408
  %236 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings413 = getelementptr inbounds %struct.cop, %struct.cop* %236, i32 0, i32 14
  %237 = load %struct.sv*, %struct.sv** %cop_warnings413, align 8
  %sv_any414 = getelementptr inbounds %struct.sv, %struct.sv* %237, i32 0, i32 0
  %238 = load i8*, i8** %sv_any414, align 8
  %239 = bitcast i8* %238 to %struct.xpv*
  %xpv_pv415 = getelementptr inbounds %struct.xpv, %struct.xpv* %239, i32 0, i32 0
  %240 = load i8*, i8** %xpv_pv415, align 8
  %arrayidx416 = getelementptr inbounds i8, i8* %240, i64 7
  %241 = load i8, i8* %arrayidx416, align 1
  %conv417 = sext i8 %241 to i32
  %and418 = and i32 %conv417, 1
  %tobool419 = icmp ne i32 %and418, 0
  br i1 %tobool419, label %if.then.428, label %lor.lhs.false.420

lor.lhs.false.420:                                ; preds = %lor.lhs.false.412, %land.lhs.true.404, %if.then.400
  %242 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings421 = getelementptr inbounds %struct.cop, %struct.cop* %242, i32 0, i32 14
  %243 = load %struct.sv*, %struct.sv** %cop_warnings421, align 8
  %cmp422 = icmp eq %struct.sv* %243, null
  br i1 %cmp422, label %land.lhs.true.424, label %if.end.429

land.lhs.true.424:                                ; preds = %lor.lhs.false.420
  %244 = load i8, i8* @PL_dowarn, align 1
  %conv425 = zext i8 %244 to i32
  %and426 = and i32 %conv425, 1
  %tobool427 = icmp ne i32 %and426, 0
  br i1 %tobool427, label %if.then.428, label %if.end.429

if.then.428:                                      ; preds = %land.lhs.true.424, %lor.lhs.false.412, %land.lhs.true.408
  call void (i32, i8*, ...) @Perl_warner(i32 28, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.127, i32 0, i32 0))
  br label %if.end.429

if.end.429:                                       ; preds = %if.then.428, %land.lhs.true.424, %lor.lhs.false.420
  %245 = load i8*, i8** %s, align 8
  store i8* %245, i8** %lastub, align 8
  br label %if.end.430

if.end.430:                                       ; preds = %if.end.429, %if.then.394
  br label %for.cond.431

for.cond.431:                                     ; preds = %for.inc, %if.end.430
  %246 = load i8*, i8** %s, align 8
  %247 = load i8, i8* %246, align 1
  %conv432 = sext i8 %247 to i32
  %cmp433 = icmp sge i32 %conv432, 48
  br i1 %cmp433, label %land.lhs.true.435, label %lor.rhs.439

land.lhs.true.435:                                ; preds = %for.cond.431
  %248 = load i8*, i8** %s, align 8
  %249 = load i8, i8* %248, align 1
  %conv436 = sext i8 %249 to i32
  %cmp437 = icmp sle i32 %conv436, 57
  br i1 %cmp437, label %lor.end.443, label %lor.rhs.439

lor.rhs.439:                                      ; preds = %land.lhs.true.435, %for.cond.431
  %250 = load i8*, i8** %s, align 8
  %251 = load i8, i8* %250, align 1
  %conv440 = sext i8 %251 to i32
  %cmp441 = icmp eq i32 %conv440, 95
  br label %lor.end.443

lor.end.443:                                      ; preds = %lor.rhs.439, %land.lhs.true.435
  %252 = phi i1 [ true, %land.lhs.true.435 ], [ %cmp441, %lor.rhs.439 ]
  br i1 %252, label %for.body, label %for.end

for.body:                                         ; preds = %lor.end.443
  %253 = load i8*, i8** %d, align 8
  %254 = load i8*, i8** %e, align 8
  %cmp444 = icmp uge i8* %253, %254
  br i1 %cmp444, label %if.then.446, label %if.end.447

if.then.446:                                      ; preds = %for.body
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @Perl_scan_num.number_too_long, i32 0, i32 0))
  br label %if.end.447

if.end.447:                                       ; preds = %if.then.446, %for.body
  %255 = load i8*, i8** %s, align 8
  %256 = load i8, i8* %255, align 1
  %conv448 = sext i8 %256 to i32
  %cmp449 = icmp eq i32 %conv448, 95
  br i1 %cmp449, label %if.then.451, label %if.else.487

if.then.451:                                      ; preds = %if.end.447
  %257 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings452 = getelementptr inbounds %struct.cop, %struct.cop* %257, i32 0, i32 14
  %258 = load %struct.sv*, %struct.sv** %cop_warnings452, align 8
  %cmp453 = icmp ne %struct.sv* %258, null
  br i1 %cmp453, label %land.lhs.true.455, label %lor.lhs.false.471

land.lhs.true.455:                                ; preds = %if.then.451
  %259 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings456 = getelementptr inbounds %struct.cop, %struct.cop* %259, i32 0, i32 14
  %260 = load %struct.sv*, %struct.sv** %cop_warnings456, align 8
  %cmp457 = icmp ne %struct.sv* %260, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 2)
  br i1 %cmp457, label %land.lhs.true.459, label %lor.lhs.false.471

land.lhs.true.459:                                ; preds = %land.lhs.true.455
  %261 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings460 = getelementptr inbounds %struct.cop, %struct.cop* %261, i32 0, i32 14
  %262 = load %struct.sv*, %struct.sv** %cop_warnings460, align 8
  %cmp461 = icmp eq %struct.sv* %262, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 1)
  br i1 %cmp461, label %land.lhs.true.479, label %lor.lhs.false.463

lor.lhs.false.463:                                ; preds = %land.lhs.true.459
  %263 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings464 = getelementptr inbounds %struct.cop, %struct.cop* %263, i32 0, i32 14
  %264 = load %struct.sv*, %struct.sv** %cop_warnings464, align 8
  %sv_any465 = getelementptr inbounds %struct.sv, %struct.sv* %264, i32 0, i32 0
  %265 = load i8*, i8** %sv_any465, align 8
  %266 = bitcast i8* %265 to %struct.xpv*
  %xpv_pv466 = getelementptr inbounds %struct.xpv, %struct.xpv* %266, i32 0, i32 0
  %267 = load i8*, i8** %xpv_pv466, align 8
  %arrayidx467 = getelementptr inbounds i8, i8* %267, i64 7
  %268 = load i8, i8* %arrayidx467, align 1
  %conv468 = sext i8 %268 to i32
  %and469 = and i32 %conv468, 1
  %tobool470 = icmp ne i32 %and469, 0
  br i1 %tobool470, label %land.lhs.true.479, label %lor.lhs.false.471

lor.lhs.false.471:                                ; preds = %lor.lhs.false.463, %land.lhs.true.455, %if.then.451
  %269 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings472 = getelementptr inbounds %struct.cop, %struct.cop* %269, i32 0, i32 14
  %270 = load %struct.sv*, %struct.sv** %cop_warnings472, align 8
  %cmp473 = icmp eq %struct.sv* %270, null
  br i1 %cmp473, label %land.lhs.true.475, label %if.end.486

land.lhs.true.475:                                ; preds = %lor.lhs.false.471
  %271 = load i8, i8* @PL_dowarn, align 1
  %conv476 = zext i8 %271 to i32
  %and477 = and i32 %conv476, 1
  %tobool478 = icmp ne i32 %and477, 0
  br i1 %tobool478, label %land.lhs.true.479, label %if.end.486

land.lhs.true.479:                                ; preds = %land.lhs.true.475, %lor.lhs.false.463, %land.lhs.true.459
  %272 = load i8*, i8** %lastub, align 8
  %tobool480 = icmp ne i8* %272, null
  br i1 %tobool480, label %land.lhs.true.481, label %if.end.486

land.lhs.true.481:                                ; preds = %land.lhs.true.479
  %273 = load i8*, i8** %s, align 8
  %274 = load i8*, i8** %lastub, align 8
  %add.ptr482 = getelementptr inbounds i8, i8* %274, i64 1
  %cmp483 = icmp eq i8* %273, %add.ptr482
  br i1 %cmp483, label %if.then.485, label %if.end.486

if.then.485:                                      ; preds = %land.lhs.true.481
  call void (i32, i8*, ...) @Perl_warner(i32 28, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.127, i32 0, i32 0))
  br label %if.end.486

if.end.486:                                       ; preds = %if.then.485, %land.lhs.true.481, %land.lhs.true.479, %land.lhs.true.475, %lor.lhs.false.471
  %275 = load i8*, i8** %s, align 8
  store i8* %275, i8** %lastub, align 8
  br label %if.end.489

if.else.487:                                      ; preds = %if.end.447
  %276 = load i8*, i8** %s, align 8
  %277 = load i8, i8* %276, align 1
  %278 = load i8*, i8** %d, align 8
  %incdec.ptr488 = getelementptr inbounds i8, i8* %278, i32 1
  store i8* %incdec.ptr488, i8** %d, align 8
  store i8 %277, i8* %278, align 1
  br label %if.end.489

if.end.489:                                       ; preds = %if.else.487, %if.end.486
  br label %for.inc

for.inc:                                          ; preds = %if.end.489
  %279 = load i8*, i8** %s, align 8
  %incdec.ptr490 = getelementptr inbounds i8, i8* %279, i32 1
  store i8* %incdec.ptr490, i8** %s, align 8
  br label %for.cond.431

for.end:                                          ; preds = %lor.end.443
  %280 = load i8*, i8** %s, align 8
  %arrayidx491 = getelementptr inbounds i8, i8* %280, i64 -1
  %281 = load i8, i8* %arrayidx491, align 1
  %conv492 = sext i8 %281 to i32
  %cmp493 = icmp eq i32 %conv492, 95
  br i1 %cmp493, label %if.then.495, label %if.end.525

if.then.495:                                      ; preds = %for.end
  %282 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings496 = getelementptr inbounds %struct.cop, %struct.cop* %282, i32 0, i32 14
  %283 = load %struct.sv*, %struct.sv** %cop_warnings496, align 8
  %cmp497 = icmp ne %struct.sv* %283, null
  br i1 %cmp497, label %land.lhs.true.499, label %lor.lhs.false.515

land.lhs.true.499:                                ; preds = %if.then.495
  %284 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings500 = getelementptr inbounds %struct.cop, %struct.cop* %284, i32 0, i32 14
  %285 = load %struct.sv*, %struct.sv** %cop_warnings500, align 8
  %cmp501 = icmp ne %struct.sv* %285, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 2)
  br i1 %cmp501, label %land.lhs.true.503, label %lor.lhs.false.515

land.lhs.true.503:                                ; preds = %land.lhs.true.499
  %286 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings504 = getelementptr inbounds %struct.cop, %struct.cop* %286, i32 0, i32 14
  %287 = load %struct.sv*, %struct.sv** %cop_warnings504, align 8
  %cmp505 = icmp eq %struct.sv* %287, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 1)
  br i1 %cmp505, label %if.then.523, label %lor.lhs.false.507

lor.lhs.false.507:                                ; preds = %land.lhs.true.503
  %288 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings508 = getelementptr inbounds %struct.cop, %struct.cop* %288, i32 0, i32 14
  %289 = load %struct.sv*, %struct.sv** %cop_warnings508, align 8
  %sv_any509 = getelementptr inbounds %struct.sv, %struct.sv* %289, i32 0, i32 0
  %290 = load i8*, i8** %sv_any509, align 8
  %291 = bitcast i8* %290 to %struct.xpv*
  %xpv_pv510 = getelementptr inbounds %struct.xpv, %struct.xpv* %291, i32 0, i32 0
  %292 = load i8*, i8** %xpv_pv510, align 8
  %arrayidx511 = getelementptr inbounds i8, i8* %292, i64 7
  %293 = load i8, i8* %arrayidx511, align 1
  %conv512 = sext i8 %293 to i32
  %and513 = and i32 %conv512, 1
  %tobool514 = icmp ne i32 %and513, 0
  br i1 %tobool514, label %if.then.523, label %lor.lhs.false.515

lor.lhs.false.515:                                ; preds = %lor.lhs.false.507, %land.lhs.true.499, %if.then.495
  %294 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings516 = getelementptr inbounds %struct.cop, %struct.cop* %294, i32 0, i32 14
  %295 = load %struct.sv*, %struct.sv** %cop_warnings516, align 8
  %cmp517 = icmp eq %struct.sv* %295, null
  br i1 %cmp517, label %land.lhs.true.519, label %if.end.524

land.lhs.true.519:                                ; preds = %lor.lhs.false.515
  %296 = load i8, i8* @PL_dowarn, align 1
  %conv520 = zext i8 %296 to i32
  %and521 = and i32 %conv520, 1
  %tobool522 = icmp ne i32 %and521, 0
  br i1 %tobool522, label %if.then.523, label %if.end.524

if.then.523:                                      ; preds = %land.lhs.true.519, %lor.lhs.false.507, %land.lhs.true.503
  call void (i32, i8*, ...) @Perl_warner(i32 28, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.127, i32 0, i32 0))
  br label %if.end.524

if.end.524:                                       ; preds = %if.then.523, %land.lhs.true.519, %lor.lhs.false.515
  br label %if.end.525

if.end.525:                                       ; preds = %if.end.524, %for.end
  %297 = load i8*, i8** %s, align 8
  %298 = load i8, i8* %297, align 1
  %conv526 = sext i8 %298 to i32
  %cmp527 = icmp eq i32 %conv526, 46
  br i1 %cmp527, label %land.lhs.true.529, label %if.end.540

land.lhs.true.529:                                ; preds = %if.end.525
  %299 = load i8*, i8** %s, align 8
  %arrayidx530 = getelementptr inbounds i8, i8* %299, i64 1
  %300 = load i8, i8* %arrayidx530, align 1
  %conv531 = sext i8 %300 to i32
  %cmp532 = icmp sge i32 %conv531, 48
  br i1 %cmp532, label %land.lhs.true.534, label %if.end.540

land.lhs.true.534:                                ; preds = %land.lhs.true.529
  %301 = load i8*, i8** %s, align 8
  %arrayidx535 = getelementptr inbounds i8, i8* %301, i64 1
  %302 = load i8, i8* %arrayidx535, align 1
  %conv536 = sext i8 %302 to i32
  %cmp537 = icmp sle i32 %conv536, 57
  br i1 %cmp537, label %if.then.539, label %if.end.540

if.then.539:                                      ; preds = %land.lhs.true.534
  %303 = load i8*, i8** %start.addr, align 8
  store i8* %303, i8** %s, align 8
  br label %vstring

if.end.540:                                       ; preds = %land.lhs.true.534, %land.lhs.true.529, %if.end.525
  br label %if.end.541

if.end.541:                                       ; preds = %if.end.540, %land.lhs.true.389, %if.end.385
  %304 = load i8*, i8** %s, align 8
  %305 = load i8, i8* %304, align 1
  %conv542 = sext i8 %305 to i32
  %cmp543 = icmp eq i32 %conv542, 101
  br i1 %cmp543, label %land.lhs.true.549, label %lor.lhs.false.545

lor.lhs.false.545:                                ; preds = %if.end.541
  %306 = load i8*, i8** %s, align 8
  %307 = load i8, i8* %306, align 1
  %conv546 = sext i8 %307 to i32
  %cmp547 = icmp eq i32 %conv546, 69
  br i1 %cmp547, label %land.lhs.true.549, label %if.end.720

land.lhs.true.549:                                ; preds = %lor.lhs.false.545, %if.end.541
  %308 = load i8*, i8** %s, align 8
  %arrayidx550 = getelementptr inbounds i8, i8* %308, i64 1
  %309 = load i8, i8* %arrayidx550, align 1
  %conv551 = sext i8 %309 to i32
  %call552 = call i8* @strchr(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.133, i32 0, i32 0), i32 %conv551)
  %tobool553 = icmp ne i8* %call552, null
  br i1 %tobool553, label %if.then.554, label %if.end.720

if.then.554:                                      ; preds = %land.lhs.true.549
  store i8 1, i8* %floatit, align 1
  %310 = load i8*, i8** %s, align 8
  %incdec.ptr555 = getelementptr inbounds i8, i8* %310, i32 1
  store i8* %incdec.ptr555, i8** %s, align 8
  %311 = load i8*, i8** %d, align 8
  %incdec.ptr556 = getelementptr inbounds i8, i8* %311, i32 1
  store i8* %incdec.ptr556, i8** %d, align 8
  store i8 101, i8* %311, align 1
  %312 = load i8*, i8** %s, align 8
  %313 = load i8, i8* %312, align 1
  %conv557 = sext i8 %313 to i32
  %cmp558 = icmp eq i32 %conv557, 95
  br i1 %cmp558, label %if.then.560, label %if.end.591

if.then.560:                                      ; preds = %if.then.554
  %314 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings561 = getelementptr inbounds %struct.cop, %struct.cop* %314, i32 0, i32 14
  %315 = load %struct.sv*, %struct.sv** %cop_warnings561, align 8
  %cmp562 = icmp ne %struct.sv* %315, null
  br i1 %cmp562, label %land.lhs.true.564, label %lor.lhs.false.580

land.lhs.true.564:                                ; preds = %if.then.560
  %316 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings565 = getelementptr inbounds %struct.cop, %struct.cop* %316, i32 0, i32 14
  %317 = load %struct.sv*, %struct.sv** %cop_warnings565, align 8
  %cmp566 = icmp ne %struct.sv* %317, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 2)
  br i1 %cmp566, label %land.lhs.true.568, label %lor.lhs.false.580

land.lhs.true.568:                                ; preds = %land.lhs.true.564
  %318 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings569 = getelementptr inbounds %struct.cop, %struct.cop* %318, i32 0, i32 14
  %319 = load %struct.sv*, %struct.sv** %cop_warnings569, align 8
  %cmp570 = icmp eq %struct.sv* %319, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 1)
  br i1 %cmp570, label %if.then.588, label %lor.lhs.false.572

lor.lhs.false.572:                                ; preds = %land.lhs.true.568
  %320 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings573 = getelementptr inbounds %struct.cop, %struct.cop* %320, i32 0, i32 14
  %321 = load %struct.sv*, %struct.sv** %cop_warnings573, align 8
  %sv_any574 = getelementptr inbounds %struct.sv, %struct.sv* %321, i32 0, i32 0
  %322 = load i8*, i8** %sv_any574, align 8
  %323 = bitcast i8* %322 to %struct.xpv*
  %xpv_pv575 = getelementptr inbounds %struct.xpv, %struct.xpv* %323, i32 0, i32 0
  %324 = load i8*, i8** %xpv_pv575, align 8
  %arrayidx576 = getelementptr inbounds i8, i8* %324, i64 7
  %325 = load i8, i8* %arrayidx576, align 1
  %conv577 = sext i8 %325 to i32
  %and578 = and i32 %conv577, 1
  %tobool579 = icmp ne i32 %and578, 0
  br i1 %tobool579, label %if.then.588, label %lor.lhs.false.580

lor.lhs.false.580:                                ; preds = %lor.lhs.false.572, %land.lhs.true.564, %if.then.560
  %326 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings581 = getelementptr inbounds %struct.cop, %struct.cop* %326, i32 0, i32 14
  %327 = load %struct.sv*, %struct.sv** %cop_warnings581, align 8
  %cmp582 = icmp eq %struct.sv* %327, null
  br i1 %cmp582, label %land.lhs.true.584, label %if.end.589

land.lhs.true.584:                                ; preds = %lor.lhs.false.580
  %328 = load i8, i8* @PL_dowarn, align 1
  %conv585 = zext i8 %328 to i32
  %and586 = and i32 %conv585, 1
  %tobool587 = icmp ne i32 %and586, 0
  br i1 %tobool587, label %if.then.588, label %if.end.589

if.then.588:                                      ; preds = %land.lhs.true.584, %lor.lhs.false.572, %land.lhs.true.568
  call void (i32, i8*, ...) @Perl_warner(i32 28, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.127, i32 0, i32 0))
  br label %if.end.589

if.end.589:                                       ; preds = %if.then.588, %land.lhs.true.584, %lor.lhs.false.580
  %329 = load i8*, i8** %s, align 8
  %incdec.ptr590 = getelementptr inbounds i8, i8* %329, i32 1
  store i8* %incdec.ptr590, i8** %s, align 8
  store i8* %329, i8** %lastub, align 8
  br label %if.end.591

if.end.591:                                       ; preds = %if.end.589, %if.then.554
  %330 = load i8*, i8** %s, align 8
  %331 = load i8, i8* %330, align 1
  %conv592 = sext i8 %331 to i32
  %cmp593 = icmp eq i32 %conv592, 43
  br i1 %cmp593, label %if.then.599, label %lor.lhs.false.595

lor.lhs.false.595:                                ; preds = %if.end.591
  %332 = load i8*, i8** %s, align 8
  %333 = load i8, i8* %332, align 1
  %conv596 = sext i8 %333 to i32
  %cmp597 = icmp eq i32 %conv596, 45
  br i1 %cmp597, label %if.then.599, label %if.end.602

if.then.599:                                      ; preds = %lor.lhs.false.595, %if.end.591
  %334 = load i8*, i8** %s, align 8
  %incdec.ptr600 = getelementptr inbounds i8, i8* %334, i32 1
  store i8* %incdec.ptr600, i8** %s, align 8
  %335 = load i8, i8* %334, align 1
  %336 = load i8*, i8** %d, align 8
  %incdec.ptr601 = getelementptr inbounds i8, i8* %336, i32 1
  store i8* %incdec.ptr601, i8** %d, align 8
  store i8 %335, i8* %336, align 1
  br label %if.end.602

if.end.602:                                       ; preds = %if.then.599, %lor.lhs.false.595
  %337 = load i8*, i8** %s, align 8
  %338 = load i8, i8* %337, align 1
  %conv603 = sext i8 %338 to i32
  %cmp604 = icmp eq i32 %conv603, 95
  br i1 %cmp604, label %if.then.606, label %if.end.637

if.then.606:                                      ; preds = %if.end.602
  %339 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings607 = getelementptr inbounds %struct.cop, %struct.cop* %339, i32 0, i32 14
  %340 = load %struct.sv*, %struct.sv** %cop_warnings607, align 8
  %cmp608 = icmp ne %struct.sv* %340, null
  br i1 %cmp608, label %land.lhs.true.610, label %lor.lhs.false.626

land.lhs.true.610:                                ; preds = %if.then.606
  %341 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings611 = getelementptr inbounds %struct.cop, %struct.cop* %341, i32 0, i32 14
  %342 = load %struct.sv*, %struct.sv** %cop_warnings611, align 8
  %cmp612 = icmp ne %struct.sv* %342, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 2)
  br i1 %cmp612, label %land.lhs.true.614, label %lor.lhs.false.626

land.lhs.true.614:                                ; preds = %land.lhs.true.610
  %343 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings615 = getelementptr inbounds %struct.cop, %struct.cop* %343, i32 0, i32 14
  %344 = load %struct.sv*, %struct.sv** %cop_warnings615, align 8
  %cmp616 = icmp eq %struct.sv* %344, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 1)
  br i1 %cmp616, label %if.then.634, label %lor.lhs.false.618

lor.lhs.false.618:                                ; preds = %land.lhs.true.614
  %345 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings619 = getelementptr inbounds %struct.cop, %struct.cop* %345, i32 0, i32 14
  %346 = load %struct.sv*, %struct.sv** %cop_warnings619, align 8
  %sv_any620 = getelementptr inbounds %struct.sv, %struct.sv* %346, i32 0, i32 0
  %347 = load i8*, i8** %sv_any620, align 8
  %348 = bitcast i8* %347 to %struct.xpv*
  %xpv_pv621 = getelementptr inbounds %struct.xpv, %struct.xpv* %348, i32 0, i32 0
  %349 = load i8*, i8** %xpv_pv621, align 8
  %arrayidx622 = getelementptr inbounds i8, i8* %349, i64 7
  %350 = load i8, i8* %arrayidx622, align 1
  %conv623 = sext i8 %350 to i32
  %and624 = and i32 %conv623, 1
  %tobool625 = icmp ne i32 %and624, 0
  br i1 %tobool625, label %if.then.634, label %lor.lhs.false.626

lor.lhs.false.626:                                ; preds = %lor.lhs.false.618, %land.lhs.true.610, %if.then.606
  %351 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings627 = getelementptr inbounds %struct.cop, %struct.cop* %351, i32 0, i32 14
  %352 = load %struct.sv*, %struct.sv** %cop_warnings627, align 8
  %cmp628 = icmp eq %struct.sv* %352, null
  br i1 %cmp628, label %land.lhs.true.630, label %if.end.635

land.lhs.true.630:                                ; preds = %lor.lhs.false.626
  %353 = load i8, i8* @PL_dowarn, align 1
  %conv631 = zext i8 %353 to i32
  %and632 = and i32 %conv631, 1
  %tobool633 = icmp ne i32 %and632, 0
  br i1 %tobool633, label %if.then.634, label %if.end.635

if.then.634:                                      ; preds = %land.lhs.true.630, %lor.lhs.false.618, %land.lhs.true.614
  call void (i32, i8*, ...) @Perl_warner(i32 28, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.127, i32 0, i32 0))
  br label %if.end.635

if.end.635:                                       ; preds = %if.then.634, %land.lhs.true.630, %lor.lhs.false.626
  %354 = load i8*, i8** %s, align 8
  %incdec.ptr636 = getelementptr inbounds i8, i8* %354, i32 1
  store i8* %incdec.ptr636, i8** %s, align 8
  store i8* %354, i8** %lastub, align 8
  br label %if.end.637

if.end.637:                                       ; preds = %if.end.635, %if.end.602
  br label %while.cond.638

while.cond.638:                                   ; preds = %if.end.718, %if.end.637
  %355 = load i8*, i8** %s, align 8
  %356 = load i8, i8* %355, align 1
  %conv639 = sext i8 %356 to i32
  %cmp640 = icmp sge i32 %conv639, 48
  br i1 %cmp640, label %land.lhs.true.642, label %lor.rhs.646

land.lhs.true.642:                                ; preds = %while.cond.638
  %357 = load i8*, i8** %s, align 8
  %358 = load i8, i8* %357, align 1
  %conv643 = sext i8 %358 to i32
  %cmp644 = icmp sle i32 %conv643, 57
  br i1 %cmp644, label %lor.end.650, label %lor.rhs.646

lor.rhs.646:                                      ; preds = %land.lhs.true.642, %while.cond.638
  %359 = load i8*, i8** %s, align 8
  %360 = load i8, i8* %359, align 1
  %conv647 = sext i8 %360 to i32
  %cmp648 = icmp eq i32 %conv647, 95
  br label %lor.end.650

lor.end.650:                                      ; preds = %lor.rhs.646, %land.lhs.true.642
  %361 = phi i1 [ true, %land.lhs.true.642 ], [ %cmp648, %lor.rhs.646 ]
  br i1 %361, label %while.body.651, label %while.end.719

while.body.651:                                   ; preds = %lor.end.650
  %362 = load i8*, i8** %s, align 8
  %363 = load i8, i8* %362, align 1
  %conv652 = sext i8 %363 to i32
  %cmp653 = icmp sge i32 %conv652, 48
  br i1 %cmp653, label %land.lhs.true.655, label %if.else.666

land.lhs.true.655:                                ; preds = %while.body.651
  %364 = load i8*, i8** %s, align 8
  %365 = load i8, i8* %364, align 1
  %conv656 = sext i8 %365 to i32
  %cmp657 = icmp sle i32 %conv656, 57
  br i1 %cmp657, label %if.then.659, label %if.else.666

if.then.659:                                      ; preds = %land.lhs.true.655
  %366 = load i8*, i8** %d, align 8
  %367 = load i8*, i8** %e, align 8
  %cmp660 = icmp uge i8* %366, %367
  br i1 %cmp660, label %if.then.662, label %if.end.663

if.then.662:                                      ; preds = %if.then.659
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @Perl_scan_num.number_too_long, i32 0, i32 0))
  br label %if.end.663

if.end.663:                                       ; preds = %if.then.662, %if.then.659
  %368 = load i8*, i8** %s, align 8
  %incdec.ptr664 = getelementptr inbounds i8, i8* %368, i32 1
  store i8* %incdec.ptr664, i8** %s, align 8
  %369 = load i8, i8* %368, align 1
  %370 = load i8*, i8** %d, align 8
  %incdec.ptr665 = getelementptr inbounds i8, i8* %370, i32 1
  store i8* %incdec.ptr665, i8** %d, align 8
  store i8 %369, i8* %370, align 1
  br label %if.end.718

if.else.666:                                      ; preds = %land.lhs.true.655, %while.body.651
  %371 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings667 = getelementptr inbounds %struct.cop, %struct.cop* %371, i32 0, i32 14
  %372 = load %struct.sv*, %struct.sv** %cop_warnings667, align 8
  %cmp668 = icmp ne %struct.sv* %372, null
  br i1 %cmp668, label %land.lhs.true.670, label %lor.lhs.false.686

land.lhs.true.670:                                ; preds = %if.else.666
  %373 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings671 = getelementptr inbounds %struct.cop, %struct.cop* %373, i32 0, i32 14
  %374 = load %struct.sv*, %struct.sv** %cop_warnings671, align 8
  %cmp672 = icmp ne %struct.sv* %374, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 2)
  br i1 %cmp672, label %land.lhs.true.674, label %lor.lhs.false.686

land.lhs.true.674:                                ; preds = %land.lhs.true.670
  %375 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings675 = getelementptr inbounds %struct.cop, %struct.cop* %375, i32 0, i32 14
  %376 = load %struct.sv*, %struct.sv** %cop_warnings675, align 8
  %cmp676 = icmp eq %struct.sv* %376, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 1)
  br i1 %cmp676, label %land.lhs.true.694, label %lor.lhs.false.678

lor.lhs.false.678:                                ; preds = %land.lhs.true.674
  %377 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings679 = getelementptr inbounds %struct.cop, %struct.cop* %377, i32 0, i32 14
  %378 = load %struct.sv*, %struct.sv** %cop_warnings679, align 8
  %sv_any680 = getelementptr inbounds %struct.sv, %struct.sv* %378, i32 0, i32 0
  %379 = load i8*, i8** %sv_any680, align 8
  %380 = bitcast i8* %379 to %struct.xpv*
  %xpv_pv681 = getelementptr inbounds %struct.xpv, %struct.xpv* %380, i32 0, i32 0
  %381 = load i8*, i8** %xpv_pv681, align 8
  %arrayidx682 = getelementptr inbounds i8, i8* %381, i64 7
  %382 = load i8, i8* %arrayidx682, align 1
  %conv683 = sext i8 %382 to i32
  %and684 = and i32 %conv683, 1
  %tobool685 = icmp ne i32 %and684, 0
  br i1 %tobool685, label %land.lhs.true.694, label %lor.lhs.false.686

lor.lhs.false.686:                                ; preds = %lor.lhs.false.678, %land.lhs.true.670, %if.else.666
  %383 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings687 = getelementptr inbounds %struct.cop, %struct.cop* %383, i32 0, i32 14
  %384 = load %struct.sv*, %struct.sv** %cop_warnings687, align 8
  %cmp688 = icmp eq %struct.sv* %384, null
  br i1 %cmp688, label %land.lhs.true.690, label %if.end.716

land.lhs.true.690:                                ; preds = %lor.lhs.false.686
  %385 = load i8, i8* @PL_dowarn, align 1
  %conv691 = zext i8 %385 to i32
  %and692 = and i32 %conv691, 1
  %tobool693 = icmp ne i32 %and692, 0
  br i1 %tobool693, label %land.lhs.true.694, label %if.end.716

land.lhs.true.694:                                ; preds = %land.lhs.true.690, %lor.lhs.false.678, %land.lhs.true.674
  %386 = load i8*, i8** %lastub, align 8
  %tobool695 = icmp ne i8* %386, null
  br i1 %tobool695, label %land.lhs.true.696, label %lor.lhs.false.700

land.lhs.true.696:                                ; preds = %land.lhs.true.694
  %387 = load i8*, i8** %s, align 8
  %388 = load i8*, i8** %lastub, align 8
  %add.ptr697 = getelementptr inbounds i8, i8* %388, i64 1
  %cmp698 = icmp eq i8* %387, %add.ptr697
  br i1 %cmp698, label %if.then.715, label %lor.lhs.false.700

lor.lhs.false.700:                                ; preds = %land.lhs.true.696, %land.lhs.true.694
  %389 = load i8*, i8** %s, align 8
  %arrayidx701 = getelementptr inbounds i8, i8* %389, i64 1
  %390 = load i8, i8* %arrayidx701, align 1
  %conv702 = sext i8 %390 to i32
  %cmp703 = icmp sge i32 %conv702, 48
  br i1 %cmp703, label %land.lhs.true.705, label %land.lhs.true.710

land.lhs.true.705:                                ; preds = %lor.lhs.false.700
  %391 = load i8*, i8** %s, align 8
  %arrayidx706 = getelementptr inbounds i8, i8* %391, i64 1
  %392 = load i8, i8* %arrayidx706, align 1
  %conv707 = sext i8 %392 to i32
  %cmp708 = icmp sle i32 %conv707, 57
  br i1 %cmp708, label %if.end.716, label %land.lhs.true.710

land.lhs.true.710:                                ; preds = %land.lhs.true.705, %lor.lhs.false.700
  %393 = load i8*, i8** %s, align 8
  %arrayidx711 = getelementptr inbounds i8, i8* %393, i64 1
  %394 = load i8, i8* %arrayidx711, align 1
  %conv712 = sext i8 %394 to i32
  %cmp713 = icmp ne i32 %conv712, 95
  br i1 %cmp713, label %if.then.715, label %if.end.716

if.then.715:                                      ; preds = %land.lhs.true.710, %land.lhs.true.696
  call void (i32, i8*, ...) @Perl_warner(i32 28, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.127, i32 0, i32 0))
  br label %if.end.716

if.end.716:                                       ; preds = %if.then.715, %land.lhs.true.710, %land.lhs.true.705, %land.lhs.true.690, %lor.lhs.false.686
  %395 = load i8*, i8** %s, align 8
  %incdec.ptr717 = getelementptr inbounds i8, i8* %395, i32 1
  store i8* %incdec.ptr717, i8** %s, align 8
  store i8* %395, i8** %lastub, align 8
  br label %if.end.718

if.end.718:                                       ; preds = %if.end.716, %if.end.663
  br label %while.cond.638

while.end.719:                                    ; preds = %lor.end.650
  br label %if.end.720

if.end.720:                                       ; preds = %while.end.719, %land.lhs.true.549, %lor.lhs.false.545
  %call721 = call %struct.sv* @Perl_newSV(i64 0)
  store %struct.sv* %call721, %struct.sv** %sv, align 8
  %396 = load i8, i8* %floatit, align 1
  %tobool722 = icmp ne i8 %396, 0
  br i1 %tobool722, label %if.end.747, label %if.then.723

if.then.723:                                      ; preds = %if.end.720
  %397 = load i8*, i8** %d, align 8
  %sub.ptr.lhs.cast724 = ptrtoint i8* %397 to i64
  %sub.ptr.sub725 = sub i64 %sub.ptr.lhs.cast724, ptrtoint ([256 x i8]* @PL_tokenbuf to i64)
  %call726 = call i32 @Perl_grok_number(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i32 0), i64 %sub.ptr.sub725, i64* %uv)
  store i32 %call726, i32* %flags, align 4
  %398 = load i32, i32* %flags, align 4
  %cmp727 = icmp eq i32 %398, 1
  br i1 %cmp727, label %if.then.729, label %if.else.735

if.then.729:                                      ; preds = %if.then.723
  %399 = load i64, i64* %uv, align 8
  %cmp730 = icmp ule i64 %399, 9223372036854775807
  br i1 %cmp730, label %if.then.732, label %if.else.733

if.then.732:                                      ; preds = %if.then.729
  %400 = load %struct.sv*, %struct.sv** %sv, align 8
  %401 = load i64, i64* %uv, align 8
  call void @Perl_sv_setiv(%struct.sv* %400, i64 %401)
  br label %if.end.734

if.else.733:                                      ; preds = %if.then.729
  %402 = load %struct.sv*, %struct.sv** %sv, align 8
  %403 = load i64, i64* %uv, align 8
  call void @Perl_sv_setuv(%struct.sv* %402, i64 %403)
  br label %if.end.734

if.end.734:                                       ; preds = %if.else.733, %if.then.732
  br label %if.end.746

if.else.735:                                      ; preds = %if.then.723
  %404 = load i32, i32* %flags, align 4
  %cmp736 = icmp eq i32 %404, 9
  br i1 %cmp736, label %if.then.738, label %if.else.744

if.then.738:                                      ; preds = %if.else.735
  %405 = load i64, i64* %uv, align 8
  %cmp739 = icmp ule i64 %405, -9223372036854775808
  br i1 %cmp739, label %if.then.741, label %if.else.742

if.then.741:                                      ; preds = %if.then.738
  %406 = load %struct.sv*, %struct.sv** %sv, align 8
  %407 = load i64, i64* %uv, align 8
  %sub = sub nsw i64 0, %407
  call void @Perl_sv_setiv(%struct.sv* %406, i64 %sub)
  br label %if.end.743

if.else.742:                                      ; preds = %if.then.738
  store i8 1, i8* %floatit, align 1
  br label %if.end.743

if.end.743:                                       ; preds = %if.else.742, %if.then.741
  br label %if.end.745

if.else.744:                                      ; preds = %if.else.735
  store i8 1, i8* %floatit, align 1
  br label %if.end.745

if.end.745:                                       ; preds = %if.else.744, %if.end.743
  br label %if.end.746

if.end.746:                                       ; preds = %if.end.745, %if.end.734
  br label %if.end.747

if.end.747:                                       ; preds = %if.end.746, %if.end.720
  %408 = load i8, i8* %floatit, align 1
  %tobool748 = icmp ne i8 %408, 0
  br i1 %tobool748, label %if.then.749, label %if.end.751

if.then.749:                                      ; preds = %if.end.747
  %409 = load i8*, i8** %d, align 8
  store i8 0, i8* %409, align 1
  %call750 = call double @Perl_my_atof(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i32 0))
  store double %call750, double* %nv, align 8
  %410 = load %struct.sv*, %struct.sv** %sv, align 8
  %411 = load double, double* %nv, align 8
  call void @Perl_sv_setnv(%struct.sv* %410, double %411)
  br label %if.end.751

if.end.751:                                       ; preds = %if.then.749, %if.end.747
  %412 = load i8, i8* %floatit, align 1
  %conv752 = sext i8 %412 to i32
  %tobool753 = icmp ne i32 %conv752, 0
  br i1 %tobool753, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end.751
  %413 = load i32, i32* @PL_hints, align 4
  %and754 = and i32 %413, 8192
  %tobool755 = icmp ne i32 %and754, 0
  br i1 %tobool755, label %if.then.758, label %if.end.764

cond.false:                                       ; preds = %if.end.751
  %414 = load i32, i32* @PL_hints, align 4
  %and756 = and i32 %414, 4096
  %tobool757 = icmp ne i32 %and756, 0
  br i1 %tobool757, label %if.then.758, label %if.end.764

if.then.758:                                      ; preds = %cond.false, %cond.true
  %415 = load i8*, i8** %d, align 8
  %sub.ptr.lhs.cast759 = ptrtoint i8* %415 to i64
  %sub.ptr.sub760 = sub i64 %sub.ptr.lhs.cast759, ptrtoint ([256 x i8]* @PL_tokenbuf to i64)
  %416 = load i8, i8* %floatit, align 1
  %conv761 = sext i8 %416 to i32
  %tobool762 = icmp ne i32 %conv761, 0
  %cond = select i1 %tobool762, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.134, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.132, i32 0, i32 0)
  %417 = load %struct.sv*, %struct.sv** %sv, align 8
  %call763 = call %struct.sv* @S_new_constant(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i32 0), i64 %sub.ptr.sub760, i8* %cond, %struct.sv* %417, %struct.sv* null, i8* null)
  store %struct.sv* %call763, %struct.sv** %sv, align 8
  br label %if.end.764

if.end.764:                                       ; preds = %if.then.758, %cond.false, %cond.true
  br label %sw.epilog.768

sw.bb.765:                                        ; preds = %entry
  br label %vstring

vstring:                                          ; preds = %sw.bb.765, %if.then.539
  %call766 = call %struct.sv* @Perl_newSV(i64 5)
  store %struct.sv* %call766, %struct.sv** %sv, align 8
  %418 = load i8*, i8** %s, align 8
  %419 = load %struct.sv*, %struct.sv** %sv, align 8
  %call767 = call i8* @Perl_scan_vstring(i8* %418, %struct.sv* %419)
  store i8* %call767, i8** %s, align 8
  br label %sw.epilog.768

sw.epilog.768:                                    ; preds = %vstring, %if.end.764, %if.end.290
  %420 = load %struct.sv*, %struct.sv** %sv, align 8
  %tobool769 = icmp ne %struct.sv* %420, null
  br i1 %tobool769, label %if.then.770, label %if.else.772

if.then.770:                                      ; preds = %sw.epilog.768
  %421 = load %struct.sv*, %struct.sv** %sv, align 8
  %call771 = call %struct.op* @Perl_newSVOP(i32 5, i32 0, %struct.sv* %421)
  %422 = load %union.YYSTYPE*, %union.YYSTYPE** %lvalp.addr, align 8
  %opval = bitcast %union.YYSTYPE* %422 to %struct.op**
  store %struct.op* %call771, %struct.op** %opval, align 8
  br label %if.end.774

if.else.772:                                      ; preds = %sw.epilog.768
  %423 = load %union.YYSTYPE*, %union.YYSTYPE** %lvalp.addr, align 8
  %opval773 = bitcast %union.YYSTYPE* %423 to %struct.op**
  store %struct.op* null, %struct.op** %opval773, align 8
  br label %if.end.774

if.end.774:                                       ; preds = %if.else.772, %if.then.770
  %424 = load i8*, i8** %s, align 8
  ret i8* %424
}

; Function Attrs: nounwind uwtable
define internal void @S_missingterm(i8* %s) #0 {
entry:
  %s.addr = alloca i8*, align 8
  %tmpbuf = alloca [3 x i8], align 1
  %q = alloca i8, align 1
  %nl = alloca i8*, align 8
  store i8* %s, i8** %s.addr, align 8
  %0 = load i8*, i8** %s.addr, align 8
  %tobool = icmp ne i8* %0, null
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %s.addr, align 8
  %call = call i8* @strrchr(i8* %1, i32 10)
  store i8* %call, i8** %nl, align 8
  %2 = load i8*, i8** %nl, align 8
  %tobool1 = icmp ne i8* %2, null
  br i1 %tobool1, label %if.then.2, label %if.end

if.then.2:                                        ; preds = %if.then
  %3 = load i8*, i8** %nl, align 8
  store i8 0, i8* %3, align 1
  br label %if.end

if.end:                                           ; preds = %if.then.2, %if.then
  br label %if.end.15

if.else:                                          ; preds = %entry
  %4 = load i32, i32* @PL_multi_close, align 4
  %cmp = icmp slt i32 %4, 32
  br i1 %cmp, label %if.then.4, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.else
  %5 = load i32, i32* @PL_multi_close, align 4
  %cmp3 = icmp eq i32 %5, 127
  br i1 %cmp3, label %if.then.4, label %if.else.9

if.then.4:                                        ; preds = %lor.lhs.false, %if.else
  %arraydecay = getelementptr inbounds [3 x i8], [3 x i8]* %tmpbuf, i32 0, i32 0
  store i8 94, i8* %arraydecay, align 1
  %6 = load i32, i32* @PL_multi_close, align 4
  %cmp5 = icmp sge i32 %6, 97
  br i1 %cmp5, label %land.lhs.true, label %cond.false

land.lhs.true:                                    ; preds = %if.then.4
  %7 = load i32, i32* @PL_multi_close, align 4
  %cmp6 = icmp sle i32 %7, 122
  br i1 %cmp6, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true
  %8 = load i32, i32* @PL_multi_close, align 4
  %sub = sub nsw i32 %8, 32
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true, %if.then.4
  %9 = load i32, i32* @PL_multi_close, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub, %cond.true ], [ %9, %cond.false ]
  %xor = xor i32 %cond, 64
  %conv = trunc i32 %xor to i8
  %arrayidx = getelementptr inbounds [3 x i8], [3 x i8]* %tmpbuf, i32 0, i64 1
  store i8 %conv, i8* %arrayidx, align 1
  %arrayidx7 = getelementptr inbounds [3 x i8], [3 x i8]* %tmpbuf, i32 0, i64 2
  store i8 0, i8* %arrayidx7, align 1
  %arraydecay8 = getelementptr inbounds [3 x i8], [3 x i8]* %tmpbuf, i32 0, i32 0
  store i8* %arraydecay8, i8** %s.addr, align 8
  br label %if.end.14

if.else.9:                                        ; preds = %lor.lhs.false
  %10 = load i32, i32* @PL_multi_close, align 4
  %conv10 = trunc i32 %10 to i8
  %arraydecay11 = getelementptr inbounds [3 x i8], [3 x i8]* %tmpbuf, i32 0, i32 0
  store i8 %conv10, i8* %arraydecay11, align 1
  %arrayidx12 = getelementptr inbounds [3 x i8], [3 x i8]* %tmpbuf, i32 0, i64 1
  store i8 0, i8* %arrayidx12, align 1
  %arraydecay13 = getelementptr inbounds [3 x i8], [3 x i8]* %tmpbuf, i32 0, i32 0
  store i8* %arraydecay13, i8** %s.addr, align 8
  br label %if.end.14

if.end.14:                                        ; preds = %if.else.9, %cond.end
  br label %if.end.15

if.end.15:                                        ; preds = %if.end.14, %if.end
  %11 = load i8*, i8** %s.addr, align 8
  %call16 = call i8* @strchr(i8* %11, i32 34)
  %tobool17 = icmp ne i8* %call16, null
  %cond18 = select i1 %tobool17, i32 39, i32 34
  %conv19 = trunc i32 %cond18 to i8
  store i8 %conv19, i8* %q, align 1
  %12 = load i8, i8* %q, align 1
  %conv20 = sext i8 %12 to i32
  %13 = load i8*, i8** %s.addr, align 8
  %14 = load i8, i8* %q, align 1
  %conv21 = sext i8 %14 to i32
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.186, i32 0, i32 0), i32 %conv20, i8* %13, i32 %conv21)
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @S_set_csh() #0 {
entry:
  %0 = load i32, i32* @PL_cshlen, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** @PL_cshname, align 8
  %call = call i64 @strlen(i8* %1)
  %conv = trunc i64 %call to i32
  store i32 %conv, i32* @PL_cshlen, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

declare i8* @Perl_savepv(i8*) #1

declare %struct.sv* @Perl_newSVpv(i8*, i64) #1

declare signext i8 @Perl_is_utf8_string(i8*, i64) #1

declare %struct.sv** @Perl_hv_fetch(%struct.hv*, i8*, i32, i32) #1

declare %struct.gv* @Perl_gv_HVadd(%struct.gv*) #1

; Function Attrs: nounwind uwtable
define internal i32 @S_intuit_method(i8* %start, %struct.gv* %gv) #0 {
entry:
  %retval = alloca i32, align 4
  %start.addr = alloca i8*, align 8
  %gv.addr = alloca %struct.gv*, align 8
  %s = alloca i8*, align 8
  %tmpbuf = alloca [256 x i8], align 16
  %len = alloca i64, align 8
  %indirgv = alloca %struct.gv*, align 8
  %cv = alloca %struct.cv*, align 8
  %proto = alloca i8*, align 8
  store i8* %start, i8** %start.addr, align 8
  store %struct.gv* %gv, %struct.gv** %gv.addr, align 8
  %0 = load i8*, i8** %start.addr, align 8
  %1 = load i8*, i8** %start.addr, align 8
  %2 = load i8, i8* %1, align 1
  %conv = sext i8 %2 to i32
  %cmp = icmp eq i32 %conv, 36
  %conv1 = zext i1 %cmp to i32
  %idx.ext = sext i32 %conv1 to i64
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 %idx.ext
  store i8* %add.ptr, i8** %s, align 8
  %3 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %tobool = icmp ne %struct.gv* %3, null
  br i1 %tobool, label %if.then, label %if.end.35

if.then:                                          ; preds = %entry
  %4 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %tobool2 = icmp ne %struct.gv* %4, null
  br i1 %tobool2, label %land.lhs.true, label %cond.false

land.lhs.true:                                    ; preds = %if.then
  %5 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %6 = bitcast %struct.gv* %5 to %struct.sv*
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %6, i32 0, i32 2
  %7 = load i32, i32* %sv_flags, align 4
  %and = and i32 %7, 255
  %cmp3 = icmp eq i32 %and, 13
  br i1 %cmp3, label %land.lhs.true.5, label %cond.false

land.lhs.true.5:                                  ; preds = %land.lhs.true
  %8 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_any = getelementptr inbounds %struct.gv, %struct.gv* %8, i32 0, i32 0
  %9 = load %struct.xpvgv*, %struct.xpvgv** %sv_any, align 8
  %xgv_gp = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %9, i32 0, i32 7
  %10 = load %struct.gp*, %struct.gp** %xgv_gp, align 8
  %tobool6 = icmp ne %struct.gp* %10, null
  br i1 %tobool6, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true.5
  %11 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_any7 = getelementptr inbounds %struct.gv, %struct.gv* %11, i32 0, i32 0
  %12 = load %struct.xpvgv*, %struct.xpvgv** %sv_any7, align 8
  %xgv_gp8 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %12, i32 0, i32 7
  %13 = load %struct.gp*, %struct.gp** %xgv_gp8, align 8
  %gp_io = getelementptr inbounds %struct.gp, %struct.gp* %13, i32 0, i32 2
  %14 = load %struct.io*, %struct.io** %gp_io, align 8
  %tobool9 = icmp ne %struct.io* %14, null
  br i1 %tobool9, label %if.then.10, label %if.end

cond.false:                                       ; preds = %land.lhs.true.5, %land.lhs.true, %if.then
  br i1 false, label %if.then.10, label %if.end

if.then.10:                                       ; preds = %cond.false, %cond.true
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %cond.false, %cond.true
  %15 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_any11 = getelementptr inbounds %struct.gv, %struct.gv* %15, i32 0, i32 0
  %16 = load %struct.xpvgv*, %struct.xpvgv** %sv_any11, align 8
  %xgv_gp12 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %16, i32 0, i32 7
  %17 = load %struct.gp*, %struct.gp** %xgv_gp12, align 8
  %gp_cvgen = getelementptr inbounds %struct.gp, %struct.gp* %17, i32 0, i32 8
  %18 = load i32, i32* %gp_cvgen, align 4
  %tobool13 = icmp ne i32 %18, 0
  br i1 %tobool13, label %cond.true.14, label %cond.false.15

cond.true.14:                                     ; preds = %if.end
  br label %cond.end

cond.false.15:                                    ; preds = %if.end
  %19 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %sv_any16 = getelementptr inbounds %struct.gv, %struct.gv* %19, i32 0, i32 0
  %20 = load %struct.xpvgv*, %struct.xpvgv** %sv_any16, align 8
  %xgv_gp17 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %20, i32 0, i32 7
  %21 = load %struct.gp*, %struct.gp** %xgv_gp17, align 8
  %gp_cv = getelementptr inbounds %struct.gp, %struct.gp* %21, i32 0, i32 7
  %22 = load %struct.cv*, %struct.cv** %gp_cv, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false.15, %cond.true.14
  %cond = phi %struct.cv* [ null, %cond.true.14 ], [ %22, %cond.false.15 ]
  store %struct.cv* %cond, %struct.cv** %cv, align 8
  %tobool18 = icmp ne %struct.cv* %cond, null
  br i1 %tobool18, label %if.then.19, label %if.else

if.then.19:                                       ; preds = %cond.end
  %23 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any20 = getelementptr inbounds %struct.cv, %struct.cv* %23, i32 0, i32 0
  %24 = load %struct.xpvcv*, %struct.xpvcv** %sv_any20, align 8
  %25 = bitcast %struct.xpvcv* %24 to %struct.xpv*
  %xpv_pv = getelementptr inbounds %struct.xpv, %struct.xpv* %25, i32 0, i32 0
  %26 = load i8*, i8** %xpv_pv, align 8
  store i8* %26, i8** %proto, align 8
  %27 = load i8*, i8** %proto, align 8
  %tobool21 = icmp ne i8* %27, null
  br i1 %tobool21, label %if.then.22, label %if.end.33

if.then.22:                                       ; preds = %if.then.19
  %28 = load i8*, i8** %proto, align 8
  %29 = load i8, i8* %28, align 1
  %conv23 = sext i8 %29 to i32
  %cmp24 = icmp eq i32 %conv23, 59
  br i1 %cmp24, label %if.then.26, label %if.end.27

if.then.26:                                       ; preds = %if.then.22
  %30 = load i8*, i8** %proto, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %30, i32 1
  store i8* %incdec.ptr, i8** %proto, align 8
  br label %if.end.27

if.end.27:                                        ; preds = %if.then.26, %if.then.22
  %31 = load i8*, i8** %proto, align 8
  %32 = load i8, i8* %31, align 1
  %conv28 = sext i8 %32 to i32
  %cmp29 = icmp eq i32 %conv28, 42
  br i1 %cmp29, label %if.then.31, label %if.end.32

if.then.31:                                       ; preds = %if.end.27
  store i32 0, i32* %retval
  br label %return

if.end.32:                                        ; preds = %if.end.27
  br label %if.end.33

if.end.33:                                        ; preds = %if.end.32, %if.then.19
  br label %if.end.34

if.else:                                          ; preds = %cond.end
  store %struct.gv* null, %struct.gv** %gv.addr, align 8
  br label %if.end.34

if.end.34:                                        ; preds = %if.else, %if.end.33
  br label %if.end.35

if.end.35:                                        ; preds = %if.end.34, %entry
  %33 = load i8*, i8** %s, align 8
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %tmpbuf, i32 0, i32 0
  %call = call i8* @S_scan_word(i8* %33, i8* %arraydecay, i64 256, i32 1, i64* %len)
  store i8* %call, i8** %s, align 8
  %34 = load i8*, i8** %start.addr, align 8
  %35 = load i8, i8* %34, align 1
  %conv36 = sext i8 %35 to i32
  %cmp37 = icmp eq i32 %conv36, 36
  br i1 %cmp37, label %if.then.39, label %if.end.59

if.then.39:                                       ; preds = %if.end.35
  %36 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %tobool40 = icmp ne %struct.gv* %36, null
  br i1 %tobool40, label %if.then.52, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then.39
  %37 = load i16, i16* @PL_last_lop_op, align 2
  %conv41 = zext i16 %37 to i32
  %cmp42 = icmp eq i32 %conv41, 209
  br i1 %cmp42, label %if.then.52, label %lor.lhs.false.44

lor.lhs.false.44:                                 ; preds = %lor.lhs.false
  %38 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i32 0), align 1
  %conv45 = sext i8 %38 to i32
  %cmp46 = icmp sge i32 %conv45, 65
  br i1 %cmp46, label %land.lhs.true.48, label %if.end.53

land.lhs.true.48:                                 ; preds = %lor.lhs.false.44
  %39 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @PL_tokenbuf, i32 0, i32 0), align 1
  %conv49 = sext i8 %39 to i32
  %cmp50 = icmp sle i32 %conv49, 90
  br i1 %cmp50, label %if.then.52, label %if.end.53

if.then.52:                                       ; preds = %land.lhs.true.48, %lor.lhs.false, %if.then.39
  store i32 0, i32* %retval
  br label %return

if.end.53:                                        ; preds = %land.lhs.true.48, %lor.lhs.false.44
  %40 = load i8*, i8** %s, align 8
  %call54 = call i8* @S_skipspace(i8* %40)
  store i8* %call54, i8** %s, align 8
  %41 = load i8*, i8** %start.addr, align 8
  store i8* %41, i8** @PL_bufptr, align 8
  store i32 2, i32* @PL_expect, align 4
  %42 = load i8*, i8** %s, align 8
  %43 = load i8, i8* %42, align 1
  %conv55 = sext i8 %43 to i32
  %cmp56 = icmp eq i32 %conv55, 40
  %cond58 = select i1 %cmp56, i32 259, i32 258
  store i32 %cond58, i32* %retval
  br label %return

if.end.59:                                        ; preds = %if.end.35
  %arraydecay60 = getelementptr inbounds [256 x i8], [256 x i8]* %tmpbuf, i32 0, i32 0
  %44 = load i64, i64* %len, align 8
  %conv61 = trunc i64 %44 to i32
  %call62 = call i32 @Perl_keyword(i8* %arraydecay60, i32 %conv61)
  %tobool63 = icmp ne i32 %call62, 0
  br i1 %tobool63, label %if.end.147, label %if.then.64

if.then.64:                                       ; preds = %if.end.59
  %45 = load i64, i64* %len, align 8
  %cmp65 = icmp ugt i64 %45, 2
  br i1 %cmp65, label %land.lhs.true.67, label %if.end.80

land.lhs.true.67:                                 ; preds = %if.then.64
  %46 = load i64, i64* %len, align 8
  %sub = sub i64 %46, 2
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* %tmpbuf, i32 0, i64 %sub
  %47 = load i8, i8* %arrayidx, align 1
  %conv68 = sext i8 %47 to i32
  %cmp69 = icmp eq i32 %conv68, 58
  br i1 %cmp69, label %land.lhs.true.71, label %if.end.80

land.lhs.true.71:                                 ; preds = %land.lhs.true.67
  %48 = load i64, i64* %len, align 8
  %sub72 = sub i64 %48, 1
  %arrayidx73 = getelementptr inbounds [256 x i8], [256 x i8]* %tmpbuf, i32 0, i64 %sub72
  %49 = load i8, i8* %arrayidx73, align 1
  %conv74 = sext i8 %49 to i32
  %cmp75 = icmp eq i32 %conv74, 58
  br i1 %cmp75, label %if.then.77, label %if.end.80

if.then.77:                                       ; preds = %land.lhs.true.71
  %50 = load i64, i64* %len, align 8
  %sub78 = sub i64 %50, 2
  store i64 %sub78, i64* %len, align 8
  %51 = load i64, i64* %len, align 8
  %arrayidx79 = getelementptr inbounds [256 x i8], [256 x i8]* %tmpbuf, i32 0, i64 %51
  store i8 0, i8* %arrayidx79, align 1
  br label %bare_package

if.end.80:                                        ; preds = %land.lhs.true.71, %land.lhs.true.67, %if.then.64
  %arraydecay81 = getelementptr inbounds [256 x i8], [256 x i8]* %tmpbuf, i32 0, i32 0
  %call82 = call %struct.gv* @Perl_gv_fetchpv(i8* %arraydecay81, i32 0, i32 12)
  store %struct.gv* %call82, %struct.gv** %indirgv, align 8
  %52 = load %struct.gv*, %struct.gv** %indirgv, align 8
  %tobool83 = icmp ne %struct.gv* %52, null
  br i1 %tobool83, label %land.lhs.true.84, label %if.end.96

land.lhs.true.84:                                 ; preds = %if.end.80
  %53 = load %struct.gv*, %struct.gv** %indirgv, align 8
  %sv_any85 = getelementptr inbounds %struct.gv, %struct.gv* %53, i32 0, i32 0
  %54 = load %struct.xpvgv*, %struct.xpvgv** %sv_any85, align 8
  %xgv_gp86 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %54, i32 0, i32 7
  %55 = load %struct.gp*, %struct.gp** %xgv_gp86, align 8
  %gp_cvgen87 = getelementptr inbounds %struct.gp, %struct.gp* %55, i32 0, i32 8
  %56 = load i32, i32* %gp_cvgen87, align 4
  %tobool88 = icmp ne i32 %56, 0
  br i1 %tobool88, label %cond.true.89, label %cond.false.90

cond.true.89:                                     ; preds = %land.lhs.true.84
  br i1 false, label %if.then.95, label %if.end.96

cond.false.90:                                    ; preds = %land.lhs.true.84
  %57 = load %struct.gv*, %struct.gv** %indirgv, align 8
  %sv_any91 = getelementptr inbounds %struct.gv, %struct.gv* %57, i32 0, i32 0
  %58 = load %struct.xpvgv*, %struct.xpvgv** %sv_any91, align 8
  %xgv_gp92 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %58, i32 0, i32 7
  %59 = load %struct.gp*, %struct.gp** %xgv_gp92, align 8
  %gp_cv93 = getelementptr inbounds %struct.gp, %struct.gp* %59, i32 0, i32 7
  %60 = load %struct.cv*, %struct.cv** %gp_cv93, align 8
  %tobool94 = icmp ne %struct.cv* %60, null
  br i1 %tobool94, label %if.then.95, label %if.end.96

if.then.95:                                       ; preds = %cond.false.90, %cond.true.89
  store i32 0, i32* %retval
  br label %return

if.end.96:                                        ; preds = %cond.false.90, %cond.true.89, %if.end.80
  %61 = load %struct.gv*, %struct.gv** %gv.addr, align 8
  %tobool97 = icmp ne %struct.gv* %61, null
  br i1 %tobool97, label %lor.lhs.false.98, label %if.then.120

lor.lhs.false.98:                                 ; preds = %if.end.96
  %62 = load %struct.gv*, %struct.gv** %indirgv, align 8
  %tobool99 = icmp ne %struct.gv* %62, null
  br i1 %tobool99, label %land.lhs.true.100, label %cond.false.114

land.lhs.true.100:                                ; preds = %lor.lhs.false.98
  %63 = load %struct.gv*, %struct.gv** %indirgv, align 8
  %64 = bitcast %struct.gv* %63 to %struct.sv*
  %sv_flags101 = getelementptr inbounds %struct.sv, %struct.sv* %64, i32 0, i32 2
  %65 = load i32, i32* %sv_flags101, align 4
  %and102 = and i32 %65, 255
  %cmp103 = icmp eq i32 %and102, 13
  br i1 %cmp103, label %land.lhs.true.105, label %cond.false.114

land.lhs.true.105:                                ; preds = %land.lhs.true.100
  %66 = load %struct.gv*, %struct.gv** %indirgv, align 8
  %sv_any106 = getelementptr inbounds %struct.gv, %struct.gv* %66, i32 0, i32 0
  %67 = load %struct.xpvgv*, %struct.xpvgv** %sv_any106, align 8
  %xgv_gp107 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %67, i32 0, i32 7
  %68 = load %struct.gp*, %struct.gp** %xgv_gp107, align 8
  %tobool108 = icmp ne %struct.gp* %68, null
  br i1 %tobool108, label %cond.true.109, label %cond.false.114

cond.true.109:                                    ; preds = %land.lhs.true.105
  %69 = load %struct.gv*, %struct.gv** %indirgv, align 8
  %sv_any110 = getelementptr inbounds %struct.gv, %struct.gv* %69, i32 0, i32 0
  %70 = load %struct.xpvgv*, %struct.xpvgv** %sv_any110, align 8
  %xgv_gp111 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %70, i32 0, i32 7
  %71 = load %struct.gp*, %struct.gp** %xgv_gp111, align 8
  %gp_io112 = getelementptr inbounds %struct.gp, %struct.gp* %71, i32 0, i32 2
  %72 = load %struct.io*, %struct.io** %gp_io112, align 8
  %tobool113 = icmp ne %struct.io* %72, null
  br i1 %tobool113, label %if.then.120, label %lor.lhs.false.115

cond.false.114:                                   ; preds = %land.lhs.true.105, %land.lhs.true.100, %lor.lhs.false.98
  br i1 false, label %if.then.120, label %lor.lhs.false.115

lor.lhs.false.115:                                ; preds = %cond.false.114, %cond.true.109
  %arraydecay116 = getelementptr inbounds [256 x i8], [256 x i8]* %tmpbuf, i32 0, i32 0
  %73 = load i64, i64* %len, align 8
  %conv117 = trunc i64 %73 to i32
  %call118 = call %struct.hv* @Perl_gv_stashpvn(i8* %arraydecay116, i32 %conv117, i32 0)
  %tobool119 = icmp ne %struct.hv* %call118, null
  br i1 %tobool119, label %if.then.120, label %if.end.146

if.then.120:                                      ; preds = %lor.lhs.false.115, %cond.false.114, %cond.true.109, %if.end.96
  %74 = load i8*, i8** %s, align 8
  %call121 = call i8* @S_skipspace(i8* %74)
  store i8* %call121, i8** %s, align 8
  %75 = load i8*, i8** @PL_bufend, align 8
  %76 = load i8*, i8** %s, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %75 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %76 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %cmp122 = icmp sge i64 %sub.ptr.sub, 2
  br i1 %cmp122, label %land.lhs.true.124, label %if.end.134

land.lhs.true.124:                                ; preds = %if.then.120
  %77 = load i8*, i8** %s, align 8
  %78 = load i8, i8* %77, align 1
  %conv125 = sext i8 %78 to i32
  %cmp126 = icmp eq i32 %conv125, 61
  br i1 %cmp126, label %land.lhs.true.128, label %if.end.134

land.lhs.true.128:                                ; preds = %land.lhs.true.124
  %79 = load i8*, i8** %s, align 8
  %add.ptr129 = getelementptr inbounds i8, i8* %79, i64 1
  %80 = load i8, i8* %add.ptr129, align 1
  %conv130 = sext i8 %80 to i32
  %cmp131 = icmp eq i32 %conv130, 62
  br i1 %cmp131, label %if.then.133, label %if.end.134

if.then.133:                                      ; preds = %land.lhs.true.128
  store i32 0, i32* %retval
  br label %return

if.end.134:                                       ; preds = %land.lhs.true.128, %land.lhs.true.124, %if.then.120
  br label %bare_package

bare_package:                                     ; preds = %if.end.134, %if.then.77
  %arraydecay135 = getelementptr inbounds [256 x i8], [256 x i8]* %tmpbuf, i32 0, i32 0
  %81 = load i64, i64* %len, align 8
  %call136 = call %struct.sv* @Perl_newSVpvn(i8* %arraydecay135, i64 %81)
  %call137 = call %struct.op* @Perl_newSVOP(i32 5, i32 0, %struct.sv* %call136)
  %82 = load i32, i32* @PL_nexttoke, align 4
  %idxprom = sext i32 %82 to i64
  %arrayidx138 = getelementptr inbounds [5 x %union.YYSTYPE], [5 x %union.YYSTYPE]* @PL_nextval, i32 0, i64 %idxprom
  %opval = bitcast %union.YYSTYPE* %arrayidx138 to %struct.op**
  store %struct.op* %call137, %struct.op** %opval, align 8
  %83 = load i32, i32* @PL_nexttoke, align 4
  %idxprom139 = sext i32 %83 to i64
  %arrayidx140 = getelementptr inbounds [5 x %union.YYSTYPE], [5 x %union.YYSTYPE]* @PL_nextval, i32 0, i64 %idxprom139
  %opval141 = bitcast %union.YYSTYPE* %arrayidx140 to %struct.op**
  %84 = load %struct.op*, %struct.op** %opval141, align 8
  %op_private = getelementptr inbounds %struct.op, %struct.op* %84, i32 0, i32 7
  store i8 64, i8* %op_private, align 1
  store i32 1, i32* @PL_expect, align 4
  call void @S_force_next(i32 257)
  %85 = load i8*, i8** %s, align 8
  store i8* %85, i8** @PL_bufptr, align 8
  %86 = load i8*, i8** %s, align 8
  %87 = load i8, i8* %86, align 1
  %conv142 = sext i8 %87 to i32
  %cmp143 = icmp eq i32 %conv142, 40
  %cond145 = select i1 %cmp143, i32 259, i32 258
  store i32 %cond145, i32* %retval
  br label %return

if.end.146:                                       ; preds = %lor.lhs.false.115
  br label %if.end.147

if.end.147:                                       ; preds = %if.end.146, %if.end.59
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end.147, %bare_package, %if.then.133, %if.then.95, %if.end.53, %if.then.52, %if.then.31, %if.then.10
  %88 = load i32, i32* %retval
  ret i32 %88
}

declare %struct.sv* @Perl_cv_const_sv(%struct.cv*) #1

declare %struct.op* @Perl_newCVREF(i32, %struct.op*) #1

declare %struct.op* @Perl_newGVOP(i32, i32, %struct.gv*) #1

declare %struct.hv* @Perl_gv_stashpv(i8*, i32) #1

declare %struct.sv* @Perl_newSVpvf(i8*, ...) #1

declare %struct.io* @Perl_newIO() #1

declare i32 @Perl_PerlIO_fileno(%struct._PerlIO**) #1

declare i32 @fcntl(i32, i32, ...) #1

declare i32 @PerlIO_apply_layers(%struct._PerlIO**, i8*, i8*) #1

declare void @Perl_push_scope() #1

declare void @Perl_markstack_grow() #1

declare %struct.sv** @Perl_stack_grow(%struct.sv**, %struct.sv**, i32) #1

declare i32 @Perl_call_method(i8*, i32) #1

declare void @Perl_free_tmps() #1

declare void @Perl_pop_scope() #1

; Function Attrs: nounwind uwtable
define internal i32 @S_lop(i32 %f, i32 %x, i8* %s) #0 {
entry:
  %retval = alloca i32, align 4
  %f.addr = alloca i32, align 4
  %x.addr = alloca i32, align 4
  %s.addr = alloca i8*, align 8
  store i32 %f, i32* %f.addr, align 4
  store i32 %x, i32* %x.addr, align 4
  store i8* %s, i8** %s.addr, align 8
  %0 = load i32, i32* %f.addr, align 4
  store i32 %0, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  %1 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line = getelementptr inbounds %struct.cop, %struct.cop* %1, i32 0, i32 13
  %2 = load i32, i32* %cop_line, align 4
  %3 = load i32, i32* @PL_copline, align 4
  %cmp = icmp ult i32 %2, %3
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %4 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line1 = getelementptr inbounds %struct.cop, %struct.cop* %4, i32 0, i32 13
  %5 = load i32, i32* %cop_line1, align 4
  br label %cond.end

cond.false:                                       ; preds = %entry
  %6 = load i32, i32* @PL_copline, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %5, %cond.true ], [ %6, %cond.false ]
  store i32 %cond, i32* @PL_copline, align 4
  %7 = load i32, i32* %x.addr, align 4
  store i32 %7, i32* @PL_expect, align 4
  %8 = load i8*, i8** %s.addr, align 8
  store i8* %8, i8** @PL_bufptr, align 8
  %9 = load i8*, i8** @PL_oldbufptr, align 8
  store i8* %9, i8** @PL_last_lop, align 8
  %10 = load i32, i32* %f.addr, align 4
  %conv = trunc i32 %10 to i16
  store i16 %conv, i16* @PL_last_lop_op, align 2
  %11 = load i32, i32* @PL_nexttoke, align 4
  %tobool = icmp ne i32 %11, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end
  store i32 286, i32* %retval
  br label %return

if.end:                                           ; preds = %cond.end
  %12 = load i8*, i8** %s.addr, align 8
  %13 = load i8, i8* %12, align 1
  %conv2 = sext i8 %13 to i32
  %cmp3 = icmp eq i32 %conv2, 40
  br i1 %cmp3, label %if.then.5, label %if.end.6

if.then.5:                                        ; preds = %if.end
  store i32 284, i32* %retval
  br label %return

if.end.6:                                         ; preds = %if.end
  %14 = load i8*, i8** %s.addr, align 8
  %call = call i8* @S_skipspace(i8* %14)
  store i8* %call, i8** %s.addr, align 8
  %15 = load i8*, i8** %s.addr, align 8
  %16 = load i8, i8* %15, align 1
  %conv7 = sext i8 %16 to i32
  %cmp8 = icmp eq i32 %conv7, 40
  br i1 %cmp8, label %if.then.10, label %if.else

if.then.10:                                       ; preds = %if.end.6
  store i32 284, i32* %retval
  br label %return

if.else:                                          ; preds = %if.end.6
  store i32 286, i32* %retval
  br label %return

return:                                           ; preds = %if.else, %if.then.10, %if.then.5, %if.then
  %17 = load i32, i32* %retval
  ret i32 %17
}

; Function Attrs: nounwind uwtable
define internal %struct.hv* @S_find_in_my_stash(i8* %pkgname, i32 %len) #0 {
entry:
  %retval = alloca %struct.hv*, align 8
  %pkgname.addr = alloca i8*, align 8
  %len.addr = alloca i32, align 4
  %gv = alloca %struct.gv*, align 8
  %sv = alloca %struct.sv*, align 8
  store i8* %pkgname, i8** %pkgname.addr, align 8
  store i32 %len, i32* %len.addr, align 4
  %0 = load i32, i32* %len.addr, align 4
  %cmp = icmp eq i32 %0, 11
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %1 = load i8*, i8** %pkgname.addr, align 8
  %2 = load i8, i8* %1, align 1
  %conv = sext i8 %2 to i32
  %cmp1 = icmp eq i32 %conv, 95
  br i1 %cmp1, label %land.lhs.true.3, label %if.end

land.lhs.true.3:                                  ; preds = %land.lhs.true
  %3 = load i8*, i8** %pkgname.addr, align 8
  %call = call i32 @strcmp(i8* %3, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.187, i32 0, i32 0))
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %land.lhs.true.3
  %4 = load %struct.hv*, %struct.hv** @PL_curstash, align 8
  store %struct.hv* %4, %struct.hv** %retval
  br label %return

if.end:                                           ; preds = %land.lhs.true.3, %land.lhs.true, %entry
  %5 = load i32, i32* %len.addr, align 4
  %cmp4 = icmp sgt i32 %5, 2
  br i1 %cmp4, label %land.lhs.true.6, label %if.end.21

land.lhs.true.6:                                  ; preds = %if.end
  %6 = load i32, i32* %len.addr, align 4
  %sub = sub nsw i32 %6, 2
  %idxprom = sext i32 %sub to i64
  %7 = load i8*, i8** %pkgname.addr, align 8
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 %idxprom
  %8 = load i8, i8* %arrayidx, align 1
  %conv7 = sext i8 %8 to i32
  %cmp8 = icmp eq i32 %conv7, 58
  br i1 %cmp8, label %land.lhs.true.10, label %if.end.21

land.lhs.true.10:                                 ; preds = %land.lhs.true.6
  %9 = load i32, i32* %len.addr, align 4
  %sub11 = sub nsw i32 %9, 1
  %idxprom12 = sext i32 %sub11 to i64
  %10 = load i8*, i8** %pkgname.addr, align 8
  %arrayidx13 = getelementptr inbounds i8, i8* %10, i64 %idxprom12
  %11 = load i8, i8* %arrayidx13, align 1
  %conv14 = sext i8 %11 to i32
  %cmp15 = icmp eq i32 %conv14, 58
  br i1 %cmp15, label %land.lhs.true.17, label %if.end.21

land.lhs.true.17:                                 ; preds = %land.lhs.true.10
  %12 = load i8*, i8** %pkgname.addr, align 8
  %call18 = call %struct.gv* @Perl_gv_fetchpv(i8* %12, i32 0, i32 11)
  store %struct.gv* %call18, %struct.gv** %gv, align 8
  %tobool19 = icmp ne %struct.gv* %call18, null
  br i1 %tobool19, label %if.then.20, label %if.end.21

if.then.20:                                       ; preds = %land.lhs.true.17
  %13 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_any = getelementptr inbounds %struct.gv, %struct.gv* %13, i32 0, i32 0
  %14 = load %struct.xpvgv*, %struct.xpvgv** %sv_any, align 8
  %xgv_gp = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %14, i32 0, i32 7
  %15 = load %struct.gp*, %struct.gp** %xgv_gp, align 8
  %gp_hv = getelementptr inbounds %struct.gp, %struct.gp* %15, i32 0, i32 5
  %16 = load %struct.hv*, %struct.hv** %gp_hv, align 8
  store %struct.hv* %16, %struct.hv** %retval
  br label %return

if.end.21:                                        ; preds = %land.lhs.true.17, %land.lhs.true.10, %land.lhs.true.6, %if.end
  %17 = load i8*, i8** %pkgname.addr, align 8
  %call22 = call %struct.gv* @Perl_gv_fetchpv(i8* %17, i32 0, i32 12)
  store %struct.gv* %call22, %struct.gv** %gv, align 8
  %tobool23 = icmp ne %struct.gv* %call22, null
  br i1 %tobool23, label %if.then.24, label %if.end.40

if.then.24:                                       ; preds = %if.end.21
  %18 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_any25 = getelementptr inbounds %struct.gv, %struct.gv* %18, i32 0, i32 0
  %19 = load %struct.xpvgv*, %struct.xpvgv** %sv_any25, align 8
  %xgv_gp26 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %19, i32 0, i32 7
  %20 = load %struct.gp*, %struct.gp** %xgv_gp26, align 8
  %gp_cv = getelementptr inbounds %struct.gp, %struct.gp* %20, i32 0, i32 7
  %21 = load %struct.cv*, %struct.cv** %gp_cv, align 8
  %tobool27 = icmp ne %struct.cv* %21, null
  br i1 %tobool27, label %land.lhs.true.28, label %if.end.39

land.lhs.true.28:                                 ; preds = %if.then.24
  %22 = load %struct.gv*, %struct.gv** %gv, align 8
  %sv_any29 = getelementptr inbounds %struct.gv, %struct.gv* %22, i32 0, i32 0
  %23 = load %struct.xpvgv*, %struct.xpvgv** %sv_any29, align 8
  %xgv_gp30 = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %23, i32 0, i32 7
  %24 = load %struct.gp*, %struct.gp** %xgv_gp30, align 8
  %gp_cv31 = getelementptr inbounds %struct.gp, %struct.gp* %24, i32 0, i32 7
  %25 = load %struct.cv*, %struct.cv** %gp_cv31, align 8
  %call32 = call %struct.sv* @Perl_cv_const_sv(%struct.cv* %25)
  store %struct.sv* %call32, %struct.sv** %sv, align 8
  %tobool33 = icmp ne %struct.sv* %call32, null
  br i1 %tobool33, label %if.then.34, label %if.end.39

if.then.34:                                       ; preds = %land.lhs.true.28
  %26 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %26, i32 0, i32 2
  %27 = load i32, i32* %sv_flags, align 4
  %and = and i32 %27, 262144
  %cmp35 = icmp eq i32 %and, 262144
  br i1 %cmp35, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then.34
  %28 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any37 = getelementptr inbounds %struct.sv, %struct.sv* %28, i32 0, i32 0
  %29 = load i8*, i8** %sv_any37, align 8
  %30 = bitcast i8* %29 to %struct.xpv*
  %xpv_pv = getelementptr inbounds %struct.xpv, %struct.xpv* %30, i32 0, i32 0
  %31 = load i8*, i8** %xpv_pv, align 8
  br label %cond.end

cond.false:                                       ; preds = %if.then.34
  %32 = load %struct.sv*, %struct.sv** %sv, align 8
  %call38 = call i8* @Perl_sv_2pv_nolen(%struct.sv* %32)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %31, %cond.true ], [ %call38, %cond.false ]
  store i8* %cond, i8** %pkgname.addr, align 8
  br label %if.end.39

if.end.39:                                        ; preds = %cond.end, %land.lhs.true.28, %if.then.24
  br label %if.end.40

if.end.40:                                        ; preds = %if.end.39, %if.end.21
  %33 = load i8*, i8** %pkgname.addr, align 8
  %call41 = call %struct.hv* @Perl_gv_stashpv(i8* %33, i32 0)
  store %struct.hv* %call41, %struct.hv** %retval
  br label %return

return:                                           ; preds = %if.end.40, %if.then.20, %if.then
  %34 = load %struct.hv*, %struct.hv** %retval
  ret %struct.hv* %34
}

declare i32 @sprintf(i8*, i8*, ...) #1

; Function Attrs: nounwind uwtable
define internal i8* @S_force_version(i8* %s, i32 %guessing) #0 {
entry:
  %retval = alloca i8*, align 8
  %s.addr = alloca i8*, align 8
  %guessing.addr = alloca i32, align 4
  %version = alloca %struct.op*, align 8
  %d = alloca i8*, align 8
  %ver = alloca %struct.sv*, align 8
  store i8* %s, i8** %s.addr, align 8
  store i32 %guessing, i32* %guessing.addr, align 4
  store %struct.op* null, %struct.op** %version, align 8
  %0 = load i8*, i8** %s.addr, align 8
  %call = call i8* @S_skipspace(i8* %0)
  store i8* %call, i8** %s.addr, align 8
  %1 = load i8*, i8** %s.addr, align 8
  store i8* %1, i8** %d, align 8
  %2 = load i8*, i8** %d, align 8
  %3 = load i8, i8* %2, align 1
  %conv = sext i8 %3 to i32
  %cmp = icmp eq i32 %conv, 118
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %4 = load i8*, i8** %d, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %4, i32 1
  store i8* %incdec.ptr, i8** %d, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %5 = load i8*, i8** %d, align 8
  %6 = load i8, i8* %5, align 1
  %conv2 = sext i8 %6 to i32
  %cmp3 = icmp sge i32 %conv2, 48
  br i1 %cmp3, label %land.lhs.true, label %if.end.75

land.lhs.true:                                    ; preds = %if.end
  %7 = load i8*, i8** %d, align 8
  %8 = load i8, i8* %7, align 1
  %conv5 = sext i8 %8 to i32
  %cmp6 = icmp sle i32 %conv5, 57
  br i1 %cmp6, label %if.then.8, label %if.end.75

if.then.8:                                        ; preds = %land.lhs.true
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.then.8
  %9 = load i8*, i8** %d, align 8
  %10 = load i8, i8* %9, align 1
  %conv9 = sext i8 %10 to i32
  %cmp10 = icmp sge i32 %conv9, 48
  br i1 %cmp10, label %land.lhs.true.12, label %lor.lhs.false

land.lhs.true.12:                                 ; preds = %while.cond
  %11 = load i8*, i8** %d, align 8
  %12 = load i8, i8* %11, align 1
  %conv13 = sext i8 %12 to i32
  %cmp14 = icmp sle i32 %conv13, 57
  br i1 %cmp14, label %lor.end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true.12, %while.cond
  %13 = load i8*, i8** %d, align 8
  %14 = load i8, i8* %13, align 1
  %conv16 = sext i8 %14 to i32
  %cmp17 = icmp eq i32 %conv16, 95
  br i1 %cmp17, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %lor.lhs.false
  %15 = load i8*, i8** %d, align 8
  %16 = load i8, i8* %15, align 1
  %conv19 = sext i8 %16 to i32
  %cmp20 = icmp eq i32 %conv19, 46
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %land.lhs.true.12
  %17 = phi i1 [ true, %lor.lhs.false ], [ true, %land.lhs.true.12 ], [ %cmp20, %lor.rhs ]
  br i1 %17, label %while.body, label %while.end

while.body:                                       ; preds = %lor.end
  %18 = load i8*, i8** %d, align 8
  %incdec.ptr22 = getelementptr inbounds i8, i8* %18, i32 1
  store i8* %incdec.ptr22, i8** %d, align 8
  br label %while.cond

while.end:                                        ; preds = %lor.end
  %19 = load i8*, i8** %d, align 8
  %20 = load i8, i8* %19, align 1
  %conv23 = sext i8 %20 to i32
  %cmp24 = icmp eq i32 %conv23, 59
  br i1 %cmp24, label %if.then.51, label %lor.lhs.false.26

lor.lhs.false.26:                                 ; preds = %while.end
  %21 = load i8*, i8** %d, align 8
  %22 = load i8, i8* %21, align 1
  %conv27 = sext i8 %22 to i32
  %cmp28 = icmp eq i32 %conv27, 32
  br i1 %cmp28, label %if.then.51, label %lor.lhs.false.30

lor.lhs.false.30:                                 ; preds = %lor.lhs.false.26
  %23 = load i8*, i8** %d, align 8
  %24 = load i8, i8* %23, align 1
  %conv31 = sext i8 %24 to i32
  %cmp32 = icmp eq i32 %conv31, 9
  br i1 %cmp32, label %if.then.51, label %lor.lhs.false.34

lor.lhs.false.34:                                 ; preds = %lor.lhs.false.30
  %25 = load i8*, i8** %d, align 8
  %26 = load i8, i8* %25, align 1
  %conv35 = sext i8 %26 to i32
  %cmp36 = icmp eq i32 %conv35, 10
  br i1 %cmp36, label %if.then.51, label %lor.lhs.false.38

lor.lhs.false.38:                                 ; preds = %lor.lhs.false.34
  %27 = load i8*, i8** %d, align 8
  %28 = load i8, i8* %27, align 1
  %conv39 = sext i8 %28 to i32
  %cmp40 = icmp eq i32 %conv39, 13
  br i1 %cmp40, label %if.then.51, label %lor.lhs.false.42

lor.lhs.false.42:                                 ; preds = %lor.lhs.false.38
  %29 = load i8*, i8** %d, align 8
  %30 = load i8, i8* %29, align 1
  %conv43 = sext i8 %30 to i32
  %cmp44 = icmp eq i32 %conv43, 12
  br i1 %cmp44, label %if.then.51, label %lor.lhs.false.46

lor.lhs.false.46:                                 ; preds = %lor.lhs.false.42
  %31 = load i8*, i8** %d, align 8
  %32 = load i8, i8* %31, align 1
  %conv47 = sext i8 %32 to i32
  %cmp48 = icmp eq i32 %conv47, 125
  br i1 %cmp48, label %if.then.51, label %lor.lhs.false.50

lor.lhs.false.50:                                 ; preds = %lor.lhs.false.46
  %33 = load i8*, i8** %d, align 8
  %34 = load i8, i8* %33, align 1
  %tobool = icmp ne i8 %34, 0
  br i1 %tobool, label %if.else, label %if.then.51

if.then.51:                                       ; preds = %lor.lhs.false.50, %lor.lhs.false.46, %lor.lhs.false.42, %lor.lhs.false.38, %lor.lhs.false.34, %lor.lhs.false.30, %lor.lhs.false.26, %while.end
  %35 = load i8*, i8** %s.addr, align 8
  %call52 = call i8* @Perl_scan_num(i8* %35, %union.YYSTYPE* @PL_yylval)
  store i8* %call52, i8** %s.addr, align 8
  %36 = load %struct.op*, %struct.op** bitcast (%union.YYSTYPE* @PL_yylval to %struct.op**), align 8
  store %struct.op* %36, %struct.op** %version, align 8
  %37 = load %struct.op*, %struct.op** %version, align 8
  %38 = bitcast %struct.op* %37 to %struct.svop*
  %op_sv = getelementptr inbounds %struct.svop, %struct.svop* %38, i32 0, i32 8
  %39 = load %struct.sv*, %struct.sv** %op_sv, align 8
  store %struct.sv* %39, %struct.sv** %ver, align 8
  %40 = load %struct.sv*, %struct.sv** %ver, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %40, i32 0, i32 2
  %41 = load i32, i32* %sv_flags, align 4
  %and = and i32 %41, 262144
  %tobool53 = icmp ne i32 %and, 0
  br i1 %tobool53, label %land.lhs.true.54, label %if.end.70

land.lhs.true.54:                                 ; preds = %if.then.51
  %42 = load %struct.sv*, %struct.sv** %ver, align 8
  %sv_flags55 = getelementptr inbounds %struct.sv, %struct.sv* %42, i32 0, i32 2
  %43 = load i32, i32* %sv_flags55, align 4
  %and56 = and i32 %43, 196608
  %tobool57 = icmp ne i32 %and56, 0
  br i1 %tobool57, label %if.end.70, label %if.then.58

if.then.58:                                       ; preds = %land.lhs.true.54
  %44 = load %struct.sv*, %struct.sv** %ver, align 8
  %sv_flags59 = getelementptr inbounds %struct.sv, %struct.sv* %44, i32 0, i32 2
  %45 = load i32, i32* %sv_flags59, align 4
  %and60 = and i32 %45, 255
  %cmp61 = icmp uge i32 %and60, 6
  br i1 %cmp61, label %lor.end.67, label %lor.rhs.63

lor.rhs.63:                                       ; preds = %if.then.58
  %46 = load %struct.sv*, %struct.sv** %ver, align 8
  %call64 = call signext i8 @Perl_sv_upgrade(%struct.sv* %46, i32 6)
  %conv65 = sext i8 %call64 to i32
  %tobool66 = icmp ne i32 %conv65, 0
  br label %lor.end.67

lor.end.67:                                       ; preds = %lor.rhs.63, %if.then.58
  %47 = phi i1 [ true, %if.then.58 ], [ %tobool66, %lor.rhs.63 ]
  %lor.ext = zext i1 %47 to i32
  %48 = load %struct.sv*, %struct.sv** %ver, align 8
  %call68 = call double @Perl_str_to_version(%struct.sv* %48)
  %49 = load %struct.sv*, %struct.sv** %ver, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %49, i32 0, i32 0
  %50 = load i8*, i8** %sv_any, align 8
  %51 = bitcast i8* %50 to %struct.xpvnv*
  %xnv_nv = getelementptr inbounds %struct.xpvnv, %struct.xpvnv* %51, i32 0, i32 4
  store double %call68, double* %xnv_nv, align 8
  %52 = load %struct.sv*, %struct.sv** %ver, align 8
  %sv_flags69 = getelementptr inbounds %struct.sv, %struct.sv* %52, i32 0, i32 2
  %53 = load i32, i32* %sv_flags69, align 4
  %or = or i32 %53, 33685504
  store i32 %or, i32* %sv_flags69, align 4
  br label %if.end.70

if.end.70:                                        ; preds = %lor.end.67, %land.lhs.true.54, %if.then.51
  br label %if.end.74

if.else:                                          ; preds = %lor.lhs.false.50
  %54 = load i32, i32* %guessing.addr, align 4
  %tobool71 = icmp ne i32 %54, 0
  br i1 %tobool71, label %if.then.72, label %if.end.73

if.then.72:                                       ; preds = %if.else
  %55 = load i8*, i8** %s.addr, align 8
  store i8* %55, i8** %retval
  br label %return

if.end.73:                                        ; preds = %if.else
  br label %if.end.74

if.end.74:                                        ; preds = %if.end.73, %if.end.70
  br label %if.end.75

if.end.75:                                        ; preds = %if.end.74, %land.lhs.true, %if.end
  %56 = load %struct.op*, %struct.op** %version, align 8
  %57 = load i32, i32* @PL_nexttoke, align 4
  %idxprom = sext i32 %57 to i64
  %arrayidx = getelementptr inbounds [5 x %union.YYSTYPE], [5 x %union.YYSTYPE]* @PL_nextval, i32 0, i64 %idxprom
  %opval = bitcast %union.YYSTYPE* %arrayidx to %struct.op**
  store %struct.op* %56, %struct.op** %opval, align 8
  call void @S_force_next(i32 257)
  %58 = load i8*, i8** %s.addr, align 8
  store i8* %58, i8** %retval
  br label %return

return:                                           ; preds = %if.end.75, %if.then.72
  %59 = load i8*, i8** %retval
  ret i8* %59
}

; Function Attrs: nounwind uwtable
define internal void @S_checkcomma(i8* %s, i8* %name, i8* %what) #0 {
entry:
  %s.addr = alloca i8*, align 8
  %name.addr = alloca i8*, align 8
  %what.addr = alloca i8*, align 8
  %w = alloca i8*, align 8
  %level = alloca i32, align 4
  %kw = alloca i32, align 4
  store i8* %s, i8** %s.addr, align 8
  store i8* %name, i8** %name.addr, align 8
  store i8* %what, i8** %what.addr, align 8
  %0 = load i8*, i8** %s.addr, align 8
  %1 = load i8, i8* %0, align 1
  %conv = sext i8 %1 to i32
  %cmp = icmp eq i32 %conv, 32
  br i1 %cmp, label %land.lhs.true, label %if.end.76

land.lhs.true:                                    ; preds = %entry
  %2 = load i8*, i8** %s.addr, align 8
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 1
  %3 = load i8, i8* %arrayidx, align 1
  %conv2 = sext i8 %3 to i32
  %cmp3 = icmp eq i32 %conv2, 40
  br i1 %cmp3, label %if.then, label %if.end.76

if.then:                                          ; preds = %land.lhs.true
  %4 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings = getelementptr inbounds %struct.cop, %struct.cop* %4, i32 0, i32 14
  %5 = load %struct.sv*, %struct.sv** %cop_warnings, align 8
  %cmp5 = icmp ne %struct.sv* %5, null
  br i1 %cmp5, label %land.lhs.true.7, label %lor.lhs.false.18

land.lhs.true.7:                                  ; preds = %if.then
  %6 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings8 = getelementptr inbounds %struct.cop, %struct.cop* %6, i32 0, i32 14
  %7 = load %struct.sv*, %struct.sv** %cop_warnings8, align 8
  %cmp9 = icmp ne %struct.sv* %7, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 2)
  br i1 %cmp9, label %land.lhs.true.11, label %lor.lhs.false.18

land.lhs.true.11:                                 ; preds = %land.lhs.true.7
  %8 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings12 = getelementptr inbounds %struct.cop, %struct.cop* %8, i32 0, i32 14
  %9 = load %struct.sv*, %struct.sv** %cop_warnings12, align 8
  %cmp13 = icmp eq %struct.sv* %9, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 1)
  br i1 %cmp13, label %if.then.26, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true.11
  %10 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings15 = getelementptr inbounds %struct.cop, %struct.cop* %10, i32 0, i32 14
  %11 = load %struct.sv*, %struct.sv** %cop_warnings15, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %11, i32 0, i32 0
  %12 = load i8*, i8** %sv_any, align 8
  %13 = bitcast i8* %12 to %struct.xpv*
  %xpv_pv = getelementptr inbounds %struct.xpv, %struct.xpv* %13, i32 0, i32 0
  %14 = load i8*, i8** %xpv_pv, align 8
  %arrayidx16 = getelementptr inbounds i8, i8* %14, i64 7
  %15 = load i8, i8* %arrayidx16, align 1
  %conv17 = sext i8 %15 to i32
  %and = and i32 %conv17, 1
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then.26, label %lor.lhs.false.18

lor.lhs.false.18:                                 ; preds = %lor.lhs.false, %land.lhs.true.7, %if.then
  %16 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings19 = getelementptr inbounds %struct.cop, %struct.cop* %16, i32 0, i32 14
  %17 = load %struct.sv*, %struct.sv** %cop_warnings19, align 8
  %cmp20 = icmp eq %struct.sv* %17, null
  br i1 %cmp20, label %land.lhs.true.22, label %if.end.75

land.lhs.true.22:                                 ; preds = %lor.lhs.false.18
  %18 = load i8, i8* @PL_dowarn, align 1
  %conv23 = zext i8 %18 to i32
  %and24 = and i32 %conv23, 1
  %tobool25 = icmp ne i32 %and24, 0
  br i1 %tobool25, label %if.then.26, label %if.end.75

if.then.26:                                       ; preds = %land.lhs.true.22, %lor.lhs.false, %land.lhs.true.11
  store i32 1, i32* %level, align 4
  %19 = load i8*, i8** %s.addr, align 8
  %add.ptr = getelementptr inbounds i8, i8* %19, i64 2
  store i8* %add.ptr, i8** %w, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then.26
  %20 = load i8*, i8** %w, align 8
  %21 = load i8, i8* %20, align 1
  %conv27 = sext i8 %21 to i32
  %tobool28 = icmp ne i32 %conv27, 0
  br i1 %tobool28, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %for.cond
  %22 = load i32, i32* %level, align 4
  %tobool29 = icmp ne i32 %22, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %23 = phi i1 [ false, %for.cond ], [ %tobool29, %land.rhs ]
  br i1 %23, label %for.body, label %for.end

for.body:                                         ; preds = %land.end
  %24 = load i8*, i8** %w, align 8
  %25 = load i8, i8* %24, align 1
  %conv30 = sext i8 %25 to i32
  %cmp31 = icmp eq i32 %conv30, 40
  br i1 %cmp31, label %if.then.33, label %if.else

if.then.33:                                       ; preds = %for.body
  %26 = load i32, i32* %level, align 4
  %inc = add nsw i32 %26, 1
  store i32 %inc, i32* %level, align 4
  br label %if.end.38

if.else:                                          ; preds = %for.body
  %27 = load i8*, i8** %w, align 8
  %28 = load i8, i8* %27, align 1
  %conv34 = sext i8 %28 to i32
  %cmp35 = icmp eq i32 %conv34, 41
  br i1 %cmp35, label %if.then.37, label %if.end

if.then.37:                                       ; preds = %if.else
  %29 = load i32, i32* %level, align 4
  %dec = add nsw i32 %29, -1
  store i32 %dec, i32* %level, align 4
  br label %if.end

if.end:                                           ; preds = %if.then.37, %if.else
  br label %if.end.38

if.end.38:                                        ; preds = %if.end, %if.then.33
  br label %for.inc

for.inc:                                          ; preds = %if.end.38
  %30 = load i8*, i8** %w, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %30, i32 1
  store i8* %incdec.ptr, i8** %w, align 8
  br label %for.cond

for.end:                                          ; preds = %land.end
  %31 = load i8*, i8** %w, align 8
  %32 = load i8, i8* %31, align 1
  %tobool39 = icmp ne i8 %32, 0
  br i1 %tobool39, label %if.then.40, label %if.end.68

if.then.40:                                       ; preds = %for.end
  br label %for.cond.41

for.cond.41:                                      ; preds = %for.inc.65, %if.then.40
  %33 = load i8*, i8** %w, align 8
  %34 = load i8, i8* %33, align 1
  %conv42 = sext i8 %34 to i32
  %tobool43 = icmp ne i32 %conv42, 0
  br i1 %tobool43, label %land.rhs.44, label %land.end.63

land.rhs.44:                                      ; preds = %for.cond.41
  %35 = load i8*, i8** %w, align 8
  %36 = load i8, i8* %35, align 1
  %conv45 = sext i8 %36 to i32
  %cmp46 = icmp eq i32 %conv45, 32
  br i1 %cmp46, label %lor.end, label %lor.lhs.false.48

lor.lhs.false.48:                                 ; preds = %land.rhs.44
  %37 = load i8*, i8** %w, align 8
  %38 = load i8, i8* %37, align 1
  %conv49 = sext i8 %38 to i32
  %cmp50 = icmp eq i32 %conv49, 9
  br i1 %cmp50, label %lor.end, label %lor.lhs.false.52

lor.lhs.false.52:                                 ; preds = %lor.lhs.false.48
  %39 = load i8*, i8** %w, align 8
  %40 = load i8, i8* %39, align 1
  %conv53 = sext i8 %40 to i32
  %cmp54 = icmp eq i32 %conv53, 10
  br i1 %cmp54, label %lor.end, label %lor.lhs.false.56

lor.lhs.false.56:                                 ; preds = %lor.lhs.false.52
  %41 = load i8*, i8** %w, align 8
  %42 = load i8, i8* %41, align 1
  %conv57 = sext i8 %42 to i32
  %cmp58 = icmp eq i32 %conv57, 13
  br i1 %cmp58, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %lor.lhs.false.56
  %43 = load i8*, i8** %w, align 8
  %44 = load i8, i8* %43, align 1
  %conv60 = sext i8 %44 to i32
  %cmp61 = icmp eq i32 %conv60, 12
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false.56, %lor.lhs.false.52, %lor.lhs.false.48, %land.rhs.44
  %45 = phi i1 [ true, %lor.lhs.false.56 ], [ true, %lor.lhs.false.52 ], [ true, %lor.lhs.false.48 ], [ true, %land.rhs.44 ], [ %cmp61, %lor.rhs ]
  br label %land.end.63

land.end.63:                                      ; preds = %lor.end, %for.cond.41
  %46 = phi i1 [ false, %for.cond.41 ], [ %45, %lor.end ]
  br i1 %46, label %for.body.64, label %for.end.67

for.body.64:                                      ; preds = %land.end.63
  br label %for.inc.65

for.inc.65:                                       ; preds = %for.body.64
  %47 = load i8*, i8** %w, align 8
  %incdec.ptr66 = getelementptr inbounds i8, i8* %47, i32 1
  store i8* %incdec.ptr66, i8** %w, align 8
  br label %for.cond.41

for.end.67:                                       ; preds = %land.end.63
  br label %if.end.68

if.end.68:                                        ; preds = %for.end.67, %for.end
  %48 = load i8*, i8** %w, align 8
  %49 = load i8, i8* %48, align 1
  %tobool69 = icmp ne i8 %49, 0
  br i1 %tobool69, label %lor.lhs.false.70, label %if.then.73

lor.lhs.false.70:                                 ; preds = %if.end.68
  %50 = load i8*, i8** %w, align 8
  %51 = load i8, i8* %50, align 1
  %conv71 = sext i8 %51 to i32
  %call = call i8* @strchr(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.193, i32 0, i32 0), i32 %conv71)
  %tobool72 = icmp ne i8* %call, null
  br i1 %tobool72, label %if.end.74, label %if.then.73

if.then.73:                                       ; preds = %lor.lhs.false.70, %if.end.68
  %52 = load i8*, i8** %name.addr, align 8
  call void (i32, i8*, ...) @Perl_warner(i32 28, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.194, i32 0, i32 0), i8* %52)
  br label %if.end.74

if.end.74:                                        ; preds = %if.then.73, %lor.lhs.false.70
  br label %if.end.75

if.end.75:                                        ; preds = %if.end.74, %land.lhs.true.22, %lor.lhs.false.18
  br label %if.end.76

if.end.76:                                        ; preds = %if.end.75, %land.lhs.true, %entry
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end.76
  %53 = load i8*, i8** %s.addr, align 8
  %54 = load i8*, i8** @PL_bufend, align 8
  %cmp77 = icmp ult i8* %53, %54
  br i1 %cmp77, label %land.rhs.79, label %land.end.100

land.rhs.79:                                      ; preds = %while.cond
  %55 = load i8*, i8** %s.addr, align 8
  %56 = load i8, i8* %55, align 1
  %conv80 = sext i8 %56 to i32
  %cmp81 = icmp eq i32 %conv80, 32
  br i1 %cmp81, label %lor.end.99, label %lor.lhs.false.83

lor.lhs.false.83:                                 ; preds = %land.rhs.79
  %57 = load i8*, i8** %s.addr, align 8
  %58 = load i8, i8* %57, align 1
  %conv84 = sext i8 %58 to i32
  %cmp85 = icmp eq i32 %conv84, 9
  br i1 %cmp85, label %lor.end.99, label %lor.lhs.false.87

lor.lhs.false.87:                                 ; preds = %lor.lhs.false.83
  %59 = load i8*, i8** %s.addr, align 8
  %60 = load i8, i8* %59, align 1
  %conv88 = sext i8 %60 to i32
  %cmp89 = icmp eq i32 %conv88, 10
  br i1 %cmp89, label %lor.end.99, label %lor.lhs.false.91

lor.lhs.false.91:                                 ; preds = %lor.lhs.false.87
  %61 = load i8*, i8** %s.addr, align 8
  %62 = load i8, i8* %61, align 1
  %conv92 = sext i8 %62 to i32
  %cmp93 = icmp eq i32 %conv92, 13
  br i1 %cmp93, label %lor.end.99, label %lor.rhs.95

lor.rhs.95:                                       ; preds = %lor.lhs.false.91
  %63 = load i8*, i8** %s.addr, align 8
  %64 = load i8, i8* %63, align 1
  %conv96 = sext i8 %64 to i32
  %cmp97 = icmp eq i32 %conv96, 12
  br label %lor.end.99

lor.end.99:                                       ; preds = %lor.rhs.95, %lor.lhs.false.91, %lor.lhs.false.87, %lor.lhs.false.83, %land.rhs.79
  %65 = phi i1 [ true, %lor.lhs.false.91 ], [ true, %lor.lhs.false.87 ], [ true, %lor.lhs.false.83 ], [ true, %land.rhs.79 ], [ %cmp97, %lor.rhs.95 ]
  br label %land.end.100

land.end.100:                                     ; preds = %lor.end.99, %while.cond
  %66 = phi i1 [ false, %while.cond ], [ %65, %lor.end.99 ]
  br i1 %66, label %while.body, label %while.end

while.body:                                       ; preds = %land.end.100
  %67 = load i8*, i8** %s.addr, align 8
  %incdec.ptr101 = getelementptr inbounds i8, i8* %67, i32 1
  store i8* %incdec.ptr101, i8** %s.addr, align 8
  br label %while.cond

while.end:                                        ; preds = %land.end.100
  %68 = load i8*, i8** %s.addr, align 8
  %69 = load i8, i8* %68, align 1
  %conv102 = sext i8 %69 to i32
  %cmp103 = icmp eq i32 %conv102, 40
  br i1 %cmp103, label %if.then.105, label %if.end.107

if.then.105:                                      ; preds = %while.end
  %70 = load i8*, i8** %s.addr, align 8
  %incdec.ptr106 = getelementptr inbounds i8, i8* %70, i32 1
  store i8* %incdec.ptr106, i8** %s.addr, align 8
  br label %if.end.107

if.end.107:                                       ; preds = %if.then.105, %while.end
  br label %while.cond.108

while.cond.108:                                   ; preds = %while.body.133, %if.end.107
  %71 = load i8*, i8** %s.addr, align 8
  %72 = load i8*, i8** @PL_bufend, align 8
  %cmp109 = icmp ult i8* %71, %72
  br i1 %cmp109, label %land.rhs.111, label %land.end.132

land.rhs.111:                                     ; preds = %while.cond.108
  %73 = load i8*, i8** %s.addr, align 8
  %74 = load i8, i8* %73, align 1
  %conv112 = sext i8 %74 to i32
  %cmp113 = icmp eq i32 %conv112, 32
  br i1 %cmp113, label %lor.end.131, label %lor.lhs.false.115

lor.lhs.false.115:                                ; preds = %land.rhs.111
  %75 = load i8*, i8** %s.addr, align 8
  %76 = load i8, i8* %75, align 1
  %conv116 = sext i8 %76 to i32
  %cmp117 = icmp eq i32 %conv116, 9
  br i1 %cmp117, label %lor.end.131, label %lor.lhs.false.119

lor.lhs.false.119:                                ; preds = %lor.lhs.false.115
  %77 = load i8*, i8** %s.addr, align 8
  %78 = load i8, i8* %77, align 1
  %conv120 = sext i8 %78 to i32
  %cmp121 = icmp eq i32 %conv120, 10
  br i1 %cmp121, label %lor.end.131, label %lor.lhs.false.123

lor.lhs.false.123:                                ; preds = %lor.lhs.false.119
  %79 = load i8*, i8** %s.addr, align 8
  %80 = load i8, i8* %79, align 1
  %conv124 = sext i8 %80 to i32
  %cmp125 = icmp eq i32 %conv124, 13
  br i1 %cmp125, label %lor.end.131, label %lor.rhs.127

lor.rhs.127:                                      ; preds = %lor.lhs.false.123
  %81 = load i8*, i8** %s.addr, align 8
  %82 = load i8, i8* %81, align 1
  %conv128 = sext i8 %82 to i32
  %cmp129 = icmp eq i32 %conv128, 12
  br label %lor.end.131

lor.end.131:                                      ; preds = %lor.rhs.127, %lor.lhs.false.123, %lor.lhs.false.119, %lor.lhs.false.115, %land.rhs.111
  %83 = phi i1 [ true, %lor.lhs.false.123 ], [ true, %lor.lhs.false.119 ], [ true, %lor.lhs.false.115 ], [ true, %land.rhs.111 ], [ %cmp129, %lor.rhs.127 ]
  br label %land.end.132

land.end.132:                                     ; preds = %lor.end.131, %while.cond.108
  %84 = phi i1 [ false, %while.cond.108 ], [ %83, %lor.end.131 ]
  br i1 %84, label %while.body.133, label %while.end.135

while.body.133:                                   ; preds = %land.end.132
  %85 = load i8*, i8** %s.addr, align 8
  %incdec.ptr134 = getelementptr inbounds i8, i8* %85, i32 1
  store i8* %incdec.ptr134, i8** %s.addr, align 8
  br label %while.cond.108

while.end.135:                                    ; preds = %land.end.132
  %86 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private = getelementptr inbounds %struct.cop, %struct.cop* %86, i32 0, i32 7
  %87 = load i8, i8* %op_private, align 1
  %conv136 = zext i8 %87 to i32
  %and137 = and i32 %conv136, 8
  %tobool138 = icmp ne i32 %and137, 0
  br i1 %tobool138, label %cond.true, label %lor.lhs.false.139

lor.lhs.false.139:                                ; preds = %while.end.135
  %88 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %tobool140 = icmp ne %struct.sv* %88, null
  br i1 %tobool140, label %land.lhs.true.141, label %lor.lhs.false.149

land.lhs.true.141:                                ; preds = %lor.lhs.false.139
  %89 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %89, i32 0, i32 2
  %90 = load i32, i32* %sv_flags, align 4
  %and142 = and i32 %90, 536870912
  %tobool143 = icmp ne i32 %and142, 0
  br i1 %tobool143, label %land.lhs.true.144, label %lor.lhs.false.149

land.lhs.true.144:                                ; preds = %land.lhs.true.141
  %91 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private145 = getelementptr inbounds %struct.cop, %struct.cop* %91, i32 0, i32 7
  %92 = load i8, i8* %op_private145, align 1
  %conv146 = zext i8 %92 to i32
  %and147 = and i32 %conv146, 8
  %tobool148 = icmp ne i32 %and147, 0
  br i1 %tobool148, label %lor.lhs.false.149, label %lor.lhs.false.152

lor.lhs.false.149:                                ; preds = %land.lhs.true.144, %land.lhs.true.141, %lor.lhs.false.139
  %93 = load i32, i32* @PL_hints, align 4
  %and150 = and i32 %93, 8388608
  %tobool151 = icmp ne i32 %and150, 0
  br i1 %tobool151, label %lor.lhs.false.152, label %cond.true

lor.lhs.false.152:                                ; preds = %lor.lhs.false.149, %land.lhs.true.144
  %94 = load i8*, i8** %s.addr, align 8
  %95 = load i8, i8* %94, align 1
  %conv153 = zext i8 %95 to i32
  %cmp154 = icmp slt i32 %conv153, 192
  br i1 %cmp154, label %cond.true, label %cond.false

cond.true:                                        ; preds = %lor.lhs.false.152, %lor.lhs.false.149, %while.end.135
  %96 = load i8*, i8** %s.addr, align 8
  %97 = load i8, i8* %96, align 1
  %conv156 = sext i8 %97 to i32
  %cmp157 = icmp sge i32 %conv156, 65
  br i1 %cmp157, label %land.lhs.true.159, label %lor.lhs.false.163

land.lhs.true.159:                                ; preds = %cond.true
  %98 = load i8*, i8** %s.addr, align 8
  %99 = load i8, i8* %98, align 1
  %conv160 = sext i8 %99 to i32
  %cmp161 = icmp sle i32 %conv160, 90
  br i1 %cmp161, label %if.then.181, label %lor.lhs.false.163

lor.lhs.false.163:                                ; preds = %land.lhs.true.159, %cond.true
  %100 = load i8*, i8** %s.addr, align 8
  %101 = load i8, i8* %100, align 1
  %conv164 = sext i8 %101 to i32
  %cmp165 = icmp sge i32 %conv164, 97
  br i1 %cmp165, label %land.lhs.true.167, label %lor.lhs.false.171

land.lhs.true.167:                                ; preds = %lor.lhs.false.163
  %102 = load i8*, i8** %s.addr, align 8
  %103 = load i8, i8* %102, align 1
  %conv168 = sext i8 %103 to i32
  %cmp169 = icmp sle i32 %conv168, 122
  br i1 %cmp169, label %if.then.181, label %lor.lhs.false.171

lor.lhs.false.171:                                ; preds = %land.lhs.true.167, %lor.lhs.false.163
  %104 = load i8*, i8** %s.addr, align 8
  %105 = load i8, i8* %104, align 1
  %conv172 = sext i8 %105 to i32
  %cmp173 = icmp eq i32 %conv172, 95
  br i1 %cmp173, label %if.then.181, label %if.end.288

cond.false:                                       ; preds = %lor.lhs.false.152
  %106 = load i8*, i8** %s.addr, align 8
  %call175 = call signext i8 @Perl_is_utf8_idcont(i8* %106)
  %conv176 = sext i8 %call175 to i32
  %tobool177 = icmp ne i32 %conv176, 0
  br i1 %tobool177, label %land.lhs.true.178, label %if.end.288

land.lhs.true.178:                                ; preds = %cond.false
  %107 = load i8*, i8** %s.addr, align 8
  %call179 = call signext i8 @Perl_is_utf8_digit(i8* %107)
  %tobool180 = icmp ne i8 %call179, 0
  br i1 %tobool180, label %if.end.288, label %if.then.181

if.then.181:                                      ; preds = %land.lhs.true.178, %lor.lhs.false.171, %land.lhs.true.167, %land.lhs.true.159
  %108 = load i8*, i8** %s.addr, align 8
  %incdec.ptr182 = getelementptr inbounds i8, i8* %108, i32 1
  store i8* %incdec.ptr182, i8** %s.addr, align 8
  store i8* %108, i8** %w, align 8
  br label %while.cond.183

while.cond.183:                                   ; preds = %while.body.239, %if.then.181
  %109 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private184 = getelementptr inbounds %struct.cop, %struct.cop* %109, i32 0, i32 7
  %110 = load i8, i8* %op_private184, align 1
  %conv185 = zext i8 %110 to i32
  %and186 = and i32 %conv185, 8
  %tobool187 = icmp ne i32 %and186, 0
  br i1 %tobool187, label %cond.true.206, label %lor.lhs.false.188

lor.lhs.false.188:                                ; preds = %while.cond.183
  %111 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %tobool189 = icmp ne %struct.sv* %111, null
  br i1 %tobool189, label %land.lhs.true.190, label %lor.lhs.false.199

land.lhs.true.190:                                ; preds = %lor.lhs.false.188
  %112 = load %struct.sv*, %struct.sv** @PL_linestr, align 8
  %sv_flags191 = getelementptr inbounds %struct.sv, %struct.sv* %112, i32 0, i32 2
  %113 = load i32, i32* %sv_flags191, align 4
  %and192 = and i32 %113, 536870912
  %tobool193 = icmp ne i32 %and192, 0
  br i1 %tobool193, label %land.lhs.true.194, label %lor.lhs.false.199

land.lhs.true.194:                                ; preds = %land.lhs.true.190
  %114 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private195 = getelementptr inbounds %struct.cop, %struct.cop* %114, i32 0, i32 7
  %115 = load i8, i8* %op_private195, align 1
  %conv196 = zext i8 %115 to i32
  %and197 = and i32 %conv196, 8
  %tobool198 = icmp ne i32 %and197, 0
  br i1 %tobool198, label %lor.lhs.false.199, label %lor.lhs.false.202

lor.lhs.false.199:                                ; preds = %land.lhs.true.194, %land.lhs.true.190, %lor.lhs.false.188
  %116 = load i32, i32* @PL_hints, align 4
  %and200 = and i32 %116, 8388608
  %tobool201 = icmp ne i32 %and200, 0
  br i1 %tobool201, label %lor.lhs.false.202, label %cond.true.206

lor.lhs.false.202:                                ; preds = %lor.lhs.false.199, %land.lhs.true.194
  %117 = load i8*, i8** %s.addr, align 8
  %118 = load i8, i8* %117, align 1
  %conv203 = zext i8 %118 to i32
  %cmp204 = icmp slt i32 %conv203, 192
  br i1 %cmp204, label %cond.true.206, label %cond.false.235

cond.true.206:                                    ; preds = %lor.lhs.false.202, %lor.lhs.false.199, %while.cond.183
  %119 = load i8*, i8** %s.addr, align 8
  %120 = load i8, i8* %119, align 1
  %conv207 = sext i8 %120 to i32
  %cmp208 = icmp sge i32 %conv207, 65
  br i1 %cmp208, label %land.lhs.true.210, label %lor.lhs.false.214

land.lhs.true.210:                                ; preds = %cond.true.206
  %121 = load i8*, i8** %s.addr, align 8
  %122 = load i8, i8* %121, align 1
  %conv211 = sext i8 %122 to i32
  %cmp212 = icmp sle i32 %conv211, 90
  br i1 %cmp212, label %lor.end.234, label %lor.lhs.false.214

lor.lhs.false.214:                                ; preds = %land.lhs.true.210, %cond.true.206
  %123 = load i8*, i8** %s.addr, align 8
  %124 = load i8, i8* %123, align 1
  %conv215 = sext i8 %124 to i32
  %cmp216 = icmp sge i32 %conv215, 97
  br i1 %cmp216, label %land.lhs.true.218, label %lor.lhs.false.222

land.lhs.true.218:                                ; preds = %lor.lhs.false.214
  %125 = load i8*, i8** %s.addr, align 8
  %126 = load i8, i8* %125, align 1
  %conv219 = sext i8 %126 to i32
  %cmp220 = icmp sle i32 %conv219, 122
  br i1 %cmp220, label %lor.end.234, label %lor.lhs.false.222

lor.lhs.false.222:                                ; preds = %land.lhs.true.218, %lor.lhs.false.214
  %127 = load i8*, i8** %s.addr, align 8
  %128 = load i8, i8* %127, align 1
  %conv223 = sext i8 %128 to i32
  %cmp224 = icmp sge i32 %conv223, 48
  br i1 %cmp224, label %land.lhs.true.226, label %lor.rhs.230

land.lhs.true.226:                                ; preds = %lor.lhs.false.222
  %129 = load i8*, i8** %s.addr, align 8
  %130 = load i8, i8* %129, align 1
  %conv227 = sext i8 %130 to i32
  %cmp228 = icmp sle i32 %conv227, 57
  br i1 %cmp228, label %lor.end.234, label %lor.rhs.230

lor.rhs.230:                                      ; preds = %land.lhs.true.226, %lor.lhs.false.222
  %131 = load i8*, i8** %s.addr, align 8
  %132 = load i8, i8* %131, align 1
  %conv231 = sext i8 %132 to i32
  %cmp232 = icmp eq i32 %conv231, 95
  br label %lor.end.234

lor.end.234:                                      ; preds = %lor.rhs.230, %land.lhs.true.226, %land.lhs.true.218, %land.lhs.true.210
  %133 = phi i1 [ true, %land.lhs.true.226 ], [ true, %land.lhs.true.218 ], [ true, %land.lhs.true.210 ], [ %cmp232, %lor.rhs.230 ]
  %lor.ext = zext i1 %133 to i32
  br label %cond.end

cond.false.235:                                   ; preds = %lor.lhs.false.202
  %134 = load i8*, i8** %s.addr, align 8
  %call236 = call signext i8 @Perl_is_utf8_alnum(i8* %134)
  %conv237 = sext i8 %call236 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false.235, %lor.end.234
  %cond = phi i32 [ %lor.ext, %lor.end.234 ], [ %conv237, %cond.false.235 ]
  %tobool238 = icmp ne i32 %cond, 0
  br i1 %tobool238, label %while.body.239, label %while.end.241

while.body.239:                                   ; preds = %cond.end
  %135 = load i8*, i8** %s.addr, align 8
  %incdec.ptr240 = getelementptr inbounds i8, i8* %135, i32 1
  store i8* %incdec.ptr240, i8** %s.addr, align 8
  br label %while.cond.183

while.end.241:                                    ; preds = %cond.end
  br label %while.cond.242

while.cond.242:                                   ; preds = %while.body.268, %while.end.241
  %136 = load i8*, i8** %s.addr, align 8
  %137 = load i8*, i8** @PL_bufend, align 8
  %cmp243 = icmp ult i8* %136, %137
  br i1 %cmp243, label %land.rhs.245, label %land.end.267

land.rhs.245:                                     ; preds = %while.cond.242
  %138 = load i8*, i8** %s.addr, align 8
  %139 = load i8, i8* %138, align 1
  %conv246 = sext i8 %139 to i32
  %cmp247 = icmp eq i32 %conv246, 32
  br i1 %cmp247, label %lor.end.265, label %lor.lhs.false.249

lor.lhs.false.249:                                ; preds = %land.rhs.245
  %140 = load i8*, i8** %s.addr, align 8
  %141 = load i8, i8* %140, align 1
  %conv250 = sext i8 %141 to i32
  %cmp251 = icmp eq i32 %conv250, 9
  br i1 %cmp251, label %lor.end.265, label %lor.lhs.false.253

lor.lhs.false.253:                                ; preds = %lor.lhs.false.249
  %142 = load i8*, i8** %s.addr, align 8
  %143 = load i8, i8* %142, align 1
  %conv254 = sext i8 %143 to i32
  %cmp255 = icmp eq i32 %conv254, 10
  br i1 %cmp255, label %lor.end.265, label %lor.lhs.false.257

lor.lhs.false.257:                                ; preds = %lor.lhs.false.253
  %144 = load i8*, i8** %s.addr, align 8
  %145 = load i8, i8* %144, align 1
  %conv258 = sext i8 %145 to i32
  %cmp259 = icmp eq i32 %conv258, 13
  br i1 %cmp259, label %lor.end.265, label %lor.rhs.261

lor.rhs.261:                                      ; preds = %lor.lhs.false.257
  %146 = load i8*, i8** %s.addr, align 8
  %147 = load i8, i8* %146, align 1
  %conv262 = sext i8 %147 to i32
  %cmp263 = icmp eq i32 %conv262, 12
  br label %lor.end.265

lor.end.265:                                      ; preds = %lor.rhs.261, %lor.lhs.false.257, %lor.lhs.false.253, %lor.lhs.false.249, %land.rhs.245
  %148 = phi i1 [ true, %lor.lhs.false.257 ], [ true, %lor.lhs.false.253 ], [ true, %lor.lhs.false.249 ], [ true, %land.rhs.245 ], [ %cmp263, %lor.rhs.261 ]
  br label %land.end.267

land.end.267:                                     ; preds = %lor.end.265, %while.cond.242
  %149 = phi i1 [ false, %while.cond.242 ], [ %148, %lor.end.265 ]
  br i1 %149, label %while.body.268, label %while.end.270

while.body.268:                                   ; preds = %land.end.267
  %150 = load i8*, i8** %s.addr, align 8
  %incdec.ptr269 = getelementptr inbounds i8, i8* %150, i32 1
  store i8* %incdec.ptr269, i8** %s.addr, align 8
  br label %while.cond.242

while.end.270:                                    ; preds = %land.end.267
  %151 = load i8*, i8** %s.addr, align 8
  %152 = load i8, i8* %151, align 1
  %conv271 = sext i8 %152 to i32
  %cmp272 = icmp eq i32 %conv271, 44
  br i1 %cmp272, label %if.then.274, label %if.end.287

if.then.274:                                      ; preds = %while.end.270
  %153 = load i8*, i8** %s.addr, align 8
  store i8 0, i8* %153, align 1
  %154 = load i8*, i8** %w, align 8
  %155 = load i8*, i8** %s.addr, align 8
  %156 = load i8*, i8** %w, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %155 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %156 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %conv275 = trunc i64 %sub.ptr.sub to i32
  %call276 = call i32 @Perl_keyword(i8* %154, i32 %conv275)
  %tobool277 = icmp ne i32 %call276, 0
  br i1 %tobool277, label %lor.end.282, label %lor.rhs.278

lor.rhs.278:                                      ; preds = %if.then.274
  %157 = load i8*, i8** %w, align 8
  %call279 = call %struct.cv* @Perl_get_cv(i8* %157, i32 0)
  %cmp280 = icmp ne %struct.cv* %call279, null
  br label %lor.end.282

lor.end.282:                                      ; preds = %lor.rhs.278, %if.then.274
  %158 = phi i1 [ true, %if.then.274 ], [ %cmp280, %lor.rhs.278 ]
  %lor.ext283 = zext i1 %158 to i32
  store i32 %lor.ext283, i32* %kw, align 4
  %159 = load i8*, i8** %s.addr, align 8
  store i8 44, i8* %159, align 1
  %160 = load i32, i32* %kw, align 4
  %tobool284 = icmp ne i32 %160, 0
  br i1 %tobool284, label %if.then.285, label %if.end.286

if.then.285:                                      ; preds = %lor.end.282
  br label %if.end.288

if.end.286:                                       ; preds = %lor.end.282
  %161 = load i8*, i8** %what.addr, align 8
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.195, i32 0, i32 0), i8* %161)
  br label %if.end.287

if.end.287:                                       ; preds = %if.end.286, %while.end.270
  br label %if.end.288

if.end.288:                                       ; preds = %if.then.285, %if.end.287, %land.lhs.true.178, %cond.false, %lor.lhs.false.171
  ret void
}

declare i8* @Perl_sv_pvn_force_flags(%struct.sv*, i64*, i32) #1

declare %struct.hv* @Perl_gv_stashpvn(i8*, i32, i32) #1

declare i64 @strlen(i8*) #1

; Function Attrs: nounwind uwtable
define internal i8* @S_scan_subst(i8* %start) #0 {
entry:
  %start.addr = alloca i8*, align 8
  %s = alloca i8*, align 8
  %pm = alloca %struct.pmop*, align 8
  %first_start = alloca i32, align 4
  %es = alloca i32, align 4
  %repl = alloca %struct.sv*, align 8
  store i8* %start, i8** %start.addr, align 8
  store i32 0, i32* %es, align 4
  store i32 0, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  %0 = load i8*, i8** %start.addr, align 8
  %call = call i8* @S_scan_str(i8* %0, i32 0, i32 0)
  store i8* %call, i8** %s, align 8
  %1 = load i8*, i8** %s, align 8
  %tobool = icmp ne i8* %1, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.214, i32 0, i32 0))
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %2 = load i8*, i8** %s, align 8
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 -1
  %3 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %3 to i32
  %4 = load i32, i32* @PL_multi_open, align 4
  %cmp = icmp eq i32 %conv, %4
  br i1 %cmp, label %if.then.2, label %if.end.3

if.then.2:                                        ; preds = %if.end
  %5 = load i8*, i8** %s, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %5, i32 -1
  store i8* %incdec.ptr, i8** %s, align 8
  br label %if.end.3

if.end.3:                                         ; preds = %if.then.2, %if.end
  %6 = load i32, i32* @PL_multi_start, align 4
  store i32 %6, i32* %first_start, align 4
  %7 = load i8*, i8** %s, align 8
  %call4 = call i8* @S_scan_str(i8* %7, i32 0, i32 0)
  store i8* %call4, i8** %s, align 8
  %8 = load i8*, i8** %s, align 8
  %tobool5 = icmp ne i8* %8, null
  br i1 %tobool5, label %if.end.10, label %if.then.6

if.then.6:                                        ; preds = %if.end.3
  %9 = load %struct.sv*, %struct.sv** @PL_lex_stuff, align 8
  %tobool7 = icmp ne %struct.sv* %9, null
  br i1 %tobool7, label %if.then.8, label %if.end.9

if.then.8:                                        ; preds = %if.then.6
  %10 = load %struct.sv*, %struct.sv** @PL_lex_stuff, align 8
  call void @Perl_sv_free(%struct.sv* %10)
  store %struct.sv* null, %struct.sv** @PL_lex_stuff, align 8
  br label %if.end.9

if.end.9:                                         ; preds = %if.then.8, %if.then.6
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.215, i32 0, i32 0))
  br label %if.end.10

if.end.10:                                        ; preds = %if.end.9, %if.end.3
  %11 = load i32, i32* %first_start, align 4
  store i32 %11, i32* @PL_multi_start, align 4
  %call11 = call %struct.op* @Perl_newPMOP(i32 33, i32 0)
  %12 = bitcast %struct.op* %call11 to %struct.pmop*
  store %struct.pmop* %12, %struct.pmop** %pm, align 8
  br label %while.cond

while.cond:                                       ; preds = %if.end.26, %if.end.10
  %13 = load i8*, i8** %s, align 8
  %14 = load i8, i8* %13, align 1
  %tobool12 = icmp ne i8 %14, 0
  br i1 %tobool12, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %15 = load i8*, i8** %s, align 8
  %16 = load i8, i8* %15, align 1
  %conv13 = sext i8 %16 to i32
  %cmp14 = icmp eq i32 %conv13, 101
  br i1 %cmp14, label %if.then.16, label %if.else

if.then.16:                                       ; preds = %while.body
  %17 = load i8*, i8** %s, align 8
  %incdec.ptr17 = getelementptr inbounds i8, i8* %17, i32 1
  store i8* %incdec.ptr17, i8** %s, align 8
  %18 = load i32, i32* %es, align 4
  %inc = add nsw i32 %18, 1
  store i32 %inc, i32* %es, align 4
  br label %if.end.26

if.else:                                          ; preds = %while.body
  %19 = load i8*, i8** %s, align 8
  %20 = load i8, i8* %19, align 1
  %conv18 = sext i8 %20 to i32
  %call19 = call i8* @strchr(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.213, i32 0, i32 0), i32 %conv18)
  %tobool20 = icmp ne i8* %call19, null
  br i1 %tobool20, label %if.then.21, label %if.else.24

if.then.21:                                       ; preds = %if.else
  %21 = load %struct.pmop*, %struct.pmop** %pm, align 8
  %op_pmflags = getelementptr inbounds %struct.pmop, %struct.pmop* %21, i32 0, i32 14
  %22 = load i8*, i8** %s, align 8
  %incdec.ptr22 = getelementptr inbounds i8, i8* %22, i32 1
  store i8* %incdec.ptr22, i8** %s, align 8
  %23 = load i8, i8* %22, align 1
  %conv23 = sext i8 %23 to i32
  call void @Perl_pmflag(i32* %op_pmflags, i32 %conv23)
  br label %if.end.25

if.else.24:                                       ; preds = %if.else
  br label %while.end

if.end.25:                                        ; preds = %if.then.21
  br label %if.end.26

if.end.26:                                        ; preds = %if.end.25, %if.then.16
  br label %while.cond

while.end:                                        ; preds = %if.else.24, %while.cond
  %24 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings = getelementptr inbounds %struct.cop, %struct.cop* %24, i32 0, i32 14
  %25 = load %struct.sv*, %struct.sv** %cop_warnings, align 8
  %cmp27 = icmp ne %struct.sv* %25, null
  br i1 %cmp27, label %land.lhs.true, label %lor.lhs.false.40

land.lhs.true:                                    ; preds = %while.end
  %26 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings29 = getelementptr inbounds %struct.cop, %struct.cop* %26, i32 0, i32 14
  %27 = load %struct.sv*, %struct.sv** %cop_warnings29, align 8
  %cmp30 = icmp ne %struct.sv* %27, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 2)
  br i1 %cmp30, label %land.lhs.true.32, label %lor.lhs.false.40

land.lhs.true.32:                                 ; preds = %land.lhs.true
  %28 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings33 = getelementptr inbounds %struct.cop, %struct.cop* %28, i32 0, i32 14
  %29 = load %struct.sv*, %struct.sv** %cop_warnings33, align 8
  %cmp34 = icmp eq %struct.sv* %29, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 1)
  br i1 %cmp34, label %land.lhs.true.48, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true.32
  %30 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings36 = getelementptr inbounds %struct.cop, %struct.cop* %30, i32 0, i32 14
  %31 = load %struct.sv*, %struct.sv** %cop_warnings36, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %31, i32 0, i32 0
  %32 = load i8*, i8** %sv_any, align 8
  %33 = bitcast i8* %32 to %struct.xpv*
  %xpv_pv = getelementptr inbounds %struct.xpv, %struct.xpv* %33, i32 0, i32 0
  %34 = load i8*, i8** %xpv_pv, align 8
  %arrayidx37 = getelementptr inbounds i8, i8* %34, i64 5
  %35 = load i8, i8* %arrayidx37, align 1
  %conv38 = sext i8 %35 to i32
  %and = and i32 %conv38, 1
  %tobool39 = icmp ne i32 %and, 0
  br i1 %tobool39, label %land.lhs.true.48, label %lor.lhs.false.40

lor.lhs.false.40:                                 ; preds = %lor.lhs.false, %land.lhs.true, %while.end
  %36 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings41 = getelementptr inbounds %struct.cop, %struct.cop* %36, i32 0, i32 14
  %37 = load %struct.sv*, %struct.sv** %cop_warnings41, align 8
  %cmp42 = icmp eq %struct.sv* %37, null
  br i1 %cmp42, label %land.lhs.true.44, label %if.end.53

land.lhs.true.44:                                 ; preds = %lor.lhs.false.40
  %38 = load i8, i8* @PL_dowarn, align 1
  %conv45 = zext i8 %38 to i32
  %and46 = and i32 %conv45, 1
  %tobool47 = icmp ne i32 %and46, 0
  br i1 %tobool47, label %land.lhs.true.48, label %if.end.53

land.lhs.true.48:                                 ; preds = %land.lhs.true.44, %lor.lhs.false, %land.lhs.true.32
  %39 = load %struct.pmop*, %struct.pmop** %pm, align 8
  %op_pmflags49 = getelementptr inbounds %struct.pmop, %struct.pmop* %39, i32 0, i32 14
  %40 = load i32, i32* %op_pmflags49, align 4
  %and50 = and i32 %40, 512
  %tobool51 = icmp ne i32 %and50, 0
  br i1 %tobool51, label %if.then.52, label %if.end.53

if.then.52:                                       ; preds = %land.lhs.true.48
  call void (i32, i8*, ...) @Perl_warner(i32 20, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @c_in_subst, i32 0, i32 0))
  br label %if.end.53

if.end.53:                                        ; preds = %if.then.52, %land.lhs.true.48, %land.lhs.true.44, %lor.lhs.false.40
  %41 = load i32, i32* %es, align 4
  %tobool54 = icmp ne i32 %41, 0
  br i1 %tobool54, label %if.then.55, label %if.end.65

if.then.55:                                       ; preds = %if.end.53
  %42 = load i8*, i8** %s, align 8
  store i8* %42, i8** getelementptr inbounds (%struct._sublex_info, %struct._sublex_info* @PL_sublex_info, i32 0, i32 3), align 8
  %43 = load i8*, i8** @PL_bufend, align 8
  store i8* %43, i8** getelementptr inbounds (%struct._sublex_info, %struct._sublex_info* @PL_sublex_info, i32 0, i32 4), align 8
  store i32 0, i32* @PL_multi_end, align 4
  %44 = load %struct.pmop*, %struct.pmop** %pm, align 8
  %op_pmflags56 = getelementptr inbounds %struct.pmop, %struct.pmop* %44, i32 0, i32 14
  %45 = load i32, i32* %op_pmflags56, align 4
  %or = or i32 %45, 1024
  store i32 %or, i32* %op_pmflags56, align 4
  %call57 = call %struct.sv* @Perl_newSVpvn(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.24, i32 0, i32 0), i64 0)
  store %struct.sv* %call57, %struct.sv** %repl, align 8
  br label %while.cond.58

while.cond.58:                                    ; preds = %while.body.61, %if.then.55
  %46 = load i32, i32* %es, align 4
  %dec = add nsw i32 %46, -1
  store i32 %dec, i32* %es, align 4
  %cmp59 = icmp sgt i32 %46, 0
  br i1 %cmp59, label %while.body.61, label %while.end.63

while.body.61:                                    ; preds = %while.cond.58
  %47 = load %struct.sv*, %struct.sv** %repl, align 8
  %48 = load i32, i32* %es, align 4
  %tobool62 = icmp ne i32 %48, 0
  %cond = select i1 %tobool62, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.216, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.217, i32 0, i32 0)
  call void @Perl_sv_catpv(%struct.sv* %47, i8* %cond)
  br label %while.cond.58

while.end.63:                                     ; preds = %while.cond.58
  %49 = load %struct.sv*, %struct.sv** %repl, align 8
  call void @Perl_sv_catpvn_flags(%struct.sv* %49, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.218, i32 0, i32 0), i64 2, i32 2)
  %50 = load %struct.sv*, %struct.sv** %repl, align 8
  %51 = load %struct.sv*, %struct.sv** @PL_lex_repl, align 8
  call void @Perl_sv_catsv_flags(%struct.sv* %50, %struct.sv* %51, i32 2)
  %52 = load %struct.sv*, %struct.sv** %repl, align 8
  call void @Perl_sv_catpvn_flags(%struct.sv* %52, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.219, i32 0, i32 0), i64 2, i32 2)
  %53 = load %struct.sv*, %struct.sv** %repl, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %53, i32 0, i32 2
  %54 = load i32, i32* %sv_flags, align 4
  %or64 = or i32 %54, 1073741824
  store i32 %or64, i32* %sv_flags, align 4
  %55 = load %struct.sv*, %struct.sv** @PL_lex_repl, align 8
  call void @Perl_sv_free(%struct.sv* %55)
  %56 = load %struct.sv*, %struct.sv** %repl, align 8
  store %struct.sv* %56, %struct.sv** @PL_lex_repl, align 8
  br label %if.end.65

if.end.65:                                        ; preds = %while.end.63, %if.end.53
  %57 = load %struct.pmop*, %struct.pmop** %pm, align 8
  %op_pmflags66 = getelementptr inbounds %struct.pmop, %struct.pmop* %57, i32 0, i32 14
  %58 = load i32, i32* %op_pmflags66, align 4
  %59 = load %struct.pmop*, %struct.pmop** %pm, align 8
  %op_pmpermflags = getelementptr inbounds %struct.pmop, %struct.pmop* %59, i32 0, i32 15
  store i32 %58, i32* %op_pmpermflags, align 4
  %60 = load %struct.pmop*, %struct.pmop** %pm, align 8
  %61 = bitcast %struct.pmop* %60 to %struct.op*
  store %struct.op* %61, %struct.op** @PL_lex_op, align 8
  store i32 33, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  %62 = load i8*, i8** %s, align 8
  ret i8* %62
}

; Function Attrs: nounwind uwtable
define internal i8* @S_scan_trans(i8* %start) #0 {
entry:
  %start.addr = alloca i8*, align 8
  %s = alloca i8*, align 8
  %o = alloca %struct.op*, align 8
  %tbl = alloca i16*, align 8
  %squash = alloca i32, align 4
  %del = alloca i32, align 4
  %complement = alloca i32, align 4
  store i8* %start, i8** %start.addr, align 8
  store i32 0, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  %0 = load i8*, i8** %start.addr, align 8
  %call = call i8* @S_scan_str(i8* %0, i32 0, i32 0)
  store i8* %call, i8** %s, align 8
  %1 = load i8*, i8** %s, align 8
  %tobool = icmp ne i8* %1, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.220, i32 0, i32 0))
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %2 = load i8*, i8** %s, align 8
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 -1
  %3 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %3 to i32
  %4 = load i32, i32* @PL_multi_open, align 4
  %cmp = icmp eq i32 %conv, %4
  br i1 %cmp, label %if.then.2, label %if.end.3

if.then.2:                                        ; preds = %if.end
  %5 = load i8*, i8** %s, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %5, i32 -1
  store i8* %incdec.ptr, i8** %s, align 8
  br label %if.end.3

if.end.3:                                         ; preds = %if.then.2, %if.end
  %6 = load i8*, i8** %s, align 8
  %call4 = call i8* @S_scan_str(i8* %6, i32 0, i32 0)
  store i8* %call4, i8** %s, align 8
  %7 = load i8*, i8** %s, align 8
  %tobool5 = icmp ne i8* %7, null
  br i1 %tobool5, label %if.end.10, label %if.then.6

if.then.6:                                        ; preds = %if.end.3
  %8 = load %struct.sv*, %struct.sv** @PL_lex_stuff, align 8
  %tobool7 = icmp ne %struct.sv* %8, null
  br i1 %tobool7, label %if.then.8, label %if.end.9

if.then.8:                                        ; preds = %if.then.6
  %9 = load %struct.sv*, %struct.sv** @PL_lex_stuff, align 8
  call void @Perl_sv_free(%struct.sv* %9)
  store %struct.sv* null, %struct.sv** @PL_lex_stuff, align 8
  br label %if.end.9

if.end.9:                                         ; preds = %if.then.8, %if.then.6
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.221, i32 0, i32 0))
  br label %if.end.10

if.end.10:                                        ; preds = %if.end.9, %if.end.3
  store i32 0, i32* %squash, align 4
  store i32 0, i32* %del, align 4
  store i32 0, i32* %complement, align 4
  br label %while.body

while.body:                                       ; preds = %if.end.10, %sw.epilog
  %10 = load i8*, i8** %s, align 8
  %11 = load i8, i8* %10, align 1
  %conv11 = sext i8 %11 to i32
  switch i32 %conv11, label %sw.default [
    i32 99, label %sw.bb
    i32 100, label %sw.bb.12
    i32 115, label %sw.bb.13
  ]

sw.bb:                                            ; preds = %while.body
  store i32 32, i32* %complement, align 4
  br label %sw.epilog

sw.bb.12:                                         ; preds = %while.body
  store i32 16, i32* %del, align 4
  br label %sw.epilog

sw.bb.13:                                         ; preds = %while.body
  store i32 8, i32* %squash, align 4
  br label %sw.epilog

sw.default:                                       ; preds = %while.body
  br label %no_more

sw.epilog:                                        ; preds = %sw.bb.13, %sw.bb.12, %sw.bb
  %12 = load i8*, i8** %s, align 8
  %incdec.ptr14 = getelementptr inbounds i8, i8* %12, i32 1
  store i8* %incdec.ptr14, i8** %s, align 8
  br label %while.body

no_more:                                          ; preds = %sw.default
  %13 = load i32, i32* %complement, align 4
  %tobool15 = icmp ne i32 %13, 0
  br i1 %tobool15, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %no_more
  %14 = load i32, i32* %del, align 4
  %tobool16 = icmp ne i32 %14, 0
  %lnot = xor i1 %tobool16, true
  br label %land.end

land.end:                                         ; preds = %land.rhs, %no_more
  %15 = phi i1 [ false, %no_more ], [ %lnot, %land.rhs ]
  %cond = select i1 %15, i32 258, i32 256
  %conv17 = sext i32 %cond to i64
  %mul = mul i64 %conv17, 2
  %call18 = call i8* @Perl_safesysmalloc(i64 %mul)
  %16 = bitcast i8* %call18 to i16*
  store i16* %16, i16** %tbl, align 8
  %17 = load i16*, i16** %tbl, align 8
  %18 = bitcast i16* %17 to i8*
  %call19 = call %struct.op* @Perl_newPVOP(i32 35, i32 0, i8* %18)
  store %struct.op* %call19, %struct.op** %o, align 8
  %19 = load i32, i32* %del, align 4
  %20 = load i32, i32* %squash, align 4
  %or = or i32 %19, %20
  %21 = load i32, i32* %complement, align 4
  %or20 = or i32 %or, %21
  %22 = load %struct.sv*, %struct.sv** @PL_lex_stuff, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %22, i32 0, i32 2
  %23 = load i32, i32* %sv_flags, align 4
  %and = and i32 %23, 536870912
  %tobool21 = icmp ne i32 %and, 0
  br i1 %tobool21, label %land.rhs.22, label %land.end.27

land.rhs.22:                                      ; preds = %land.end
  %24 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private = getelementptr inbounds %struct.cop, %struct.cop* %24, i32 0, i32 7
  %25 = load i8, i8* %op_private, align 1
  %conv23 = zext i8 %25 to i32
  %and24 = and i32 %conv23, 8
  %tobool25 = icmp ne i32 %and24, 0
  %lnot26 = xor i1 %tobool25, true
  br label %land.end.27

land.end.27:                                      ; preds = %land.rhs.22, %land.end
  %26 = phi i1 [ false, %land.end ], [ %lnot26, %land.rhs.22 ]
  %cond28 = select i1 %26, i32 1, i32 0
  %or29 = or i32 %or20, %cond28
  %27 = load %struct.sv*, %struct.sv** @PL_lex_repl, align 8
  %sv_flags30 = getelementptr inbounds %struct.sv, %struct.sv* %27, i32 0, i32 2
  %28 = load i32, i32* %sv_flags30, align 4
  %and31 = and i32 %28, 536870912
  %tobool32 = icmp ne i32 %and31, 0
  br i1 %tobool32, label %land.rhs.33, label %land.end.39

land.rhs.33:                                      ; preds = %land.end.27
  %29 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %op_private34 = getelementptr inbounds %struct.cop, %struct.cop* %29, i32 0, i32 7
  %30 = load i8, i8* %op_private34, align 1
  %conv35 = zext i8 %30 to i32
  %and36 = and i32 %conv35, 8
  %tobool37 = icmp ne i32 %and36, 0
  %lnot38 = xor i1 %tobool37, true
  br label %land.end.39

land.end.39:                                      ; preds = %land.rhs.33, %land.end.27
  %31 = phi i1 [ false, %land.end.27 ], [ %lnot38, %land.rhs.33 ]
  %cond40 = select i1 %31, i32 2, i32 0
  %or41 = or i32 %or29, %cond40
  %conv42 = trunc i32 %or41 to i8
  %32 = load %struct.op*, %struct.op** %o, align 8
  %op_private43 = getelementptr inbounds %struct.op, %struct.op* %32, i32 0, i32 7
  store i8 %conv42, i8* %op_private43, align 1
  %33 = load %struct.op*, %struct.op** %o, align 8
  store %struct.op* %33, %struct.op** @PL_lex_op, align 8
  store i32 35, i32* bitcast (%union.YYSTYPE* @PL_yylval to i32*), align 4
  %34 = load i8*, i8** %s, align 8
  ret i8* %34
}

; Function Attrs: nounwind uwtable
define void @Perl_pmflag(i32* %pmfl, i32 %ch) #0 {
entry:
  %pmfl.addr = alloca i32*, align 8
  %ch.addr = alloca i32, align 4
  store i32* %pmfl, i32** %pmfl.addr, align 8
  store i32 %ch, i32* %ch.addr, align 4
  %0 = load i32, i32* %ch.addr, align 4
  %cmp = icmp eq i32 %0, 105
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = load i32*, i32** %pmfl.addr, align 8
  %2 = load i32, i32* %1, align 4
  %or = or i32 %2, 16384
  store i32 %or, i32* %1, align 4
  br label %if.end.29

if.else:                                          ; preds = %entry
  %3 = load i32, i32* %ch.addr, align 4
  %cmp1 = icmp eq i32 %3, 103
  br i1 %cmp1, label %if.then.2, label %if.else.4

if.then.2:                                        ; preds = %if.else
  %4 = load i32*, i32** %pmfl.addr, align 8
  %5 = load i32, i32* %4, align 4
  %or3 = or i32 %5, 256
  store i32 %or3, i32* %4, align 4
  br label %if.end.28

if.else.4:                                        ; preds = %if.else
  %6 = load i32, i32* %ch.addr, align 4
  %cmp5 = icmp eq i32 %6, 99
  br i1 %cmp5, label %if.then.6, label %if.else.8

if.then.6:                                        ; preds = %if.else.4
  %7 = load i32*, i32** %pmfl.addr, align 8
  %8 = load i32, i32* %7, align 4
  %or7 = or i32 %8, 512
  store i32 %or7, i32* %7, align 4
  br label %if.end.27

if.else.8:                                        ; preds = %if.else.4
  %9 = load i32, i32* %ch.addr, align 4
  %cmp9 = icmp eq i32 %9, 111
  br i1 %cmp9, label %if.then.10, label %if.else.12

if.then.10:                                       ; preds = %if.else.8
  %10 = load i32*, i32** %pmfl.addr, align 8
  %11 = load i32, i32* %10, align 4
  %or11 = or i32 %11, 128
  store i32 %or11, i32* %10, align 4
  br label %if.end.26

if.else.12:                                       ; preds = %if.else.8
  %12 = load i32, i32* %ch.addr, align 4
  %cmp13 = icmp eq i32 %12, 109
  br i1 %cmp13, label %if.then.14, label %if.else.16

if.then.14:                                       ; preds = %if.else.12
  %13 = load i32*, i32** %pmfl.addr, align 8
  %14 = load i32, i32* %13, align 4
  %or15 = or i32 %14, 4096
  store i32 %or15, i32* %13, align 4
  br label %if.end.25

if.else.16:                                       ; preds = %if.else.12
  %15 = load i32, i32* %ch.addr, align 4
  %cmp17 = icmp eq i32 %15, 115
  br i1 %cmp17, label %if.then.18, label %if.else.20

if.then.18:                                       ; preds = %if.else.16
  %16 = load i32*, i32** %pmfl.addr, align 8
  %17 = load i32, i32* %16, align 4
  %or19 = or i32 %17, 8192
  store i32 %or19, i32* %16, align 4
  br label %if.end.24

if.else.20:                                       ; preds = %if.else.16
  %18 = load i32, i32* %ch.addr, align 4
  %cmp21 = icmp eq i32 %18, 120
  br i1 %cmp21, label %if.then.22, label %if.end

if.then.22:                                       ; preds = %if.else.20
  %19 = load i32*, i32** %pmfl.addr, align 8
  %20 = load i32, i32* %19, align 4
  %or23 = or i32 %20, 32768
  store i32 %or23, i32* %19, align 4
  br label %if.end

if.end:                                           ; preds = %if.then.22, %if.else.20
  br label %if.end.24

if.end.24:                                        ; preds = %if.end, %if.then.18
  br label %if.end.25

if.end.25:                                        ; preds = %if.end.24, %if.then.14
  br label %if.end.26

if.end.26:                                        ; preds = %if.end.25, %if.then.10
  br label %if.end.27

if.end.27:                                        ; preds = %if.end.26, %if.then.6
  br label %if.end.28

if.end.28:                                        ; preds = %if.end.27, %if.then.2
  br label %if.end.29

if.end.29:                                        ; preds = %if.end.28, %if.then
  ret void
}

declare void @Perl_sv_setnv(%struct.sv*, double) #1

declare void @Perl_sv_setuv(%struct.sv*, i64) #1

declare i32 @Perl_grok_number(i8*, i64, i64*) #1

declare void @Perl_sv_setiv(%struct.sv*, i64) #1

declare double @Perl_my_atof(i8*) #1

; Function Attrs: nounwind uwtable
define i8* @Perl_scan_vstring(i8* %s, %struct.sv* %sv) #0 {
entry:
  %retval = alloca i8*, align 8
  %s.addr = alloca i8*, align 8
  %sv.addr = alloca %struct.sv*, align 8
  %pos = alloca i8*, align 8
  %start = alloca i8*, align 8
  %next = alloca i8*, align 8
  %rev = alloca i64, align 8
  %tmpbuf = alloca [14 x i8], align 1
  %tmpend = alloca i8*, align 8
  %end = alloca i8*, align 8
  %mult = alloca i64, align 8
  %orev = alloca i64, align 8
  store i8* %s, i8** %s.addr, align 8
  store %struct.sv* %sv, %struct.sv** %sv.addr, align 8
  %0 = load i8*, i8** %s.addr, align 8
  store i8* %0, i8** %pos, align 8
  %1 = load i8*, i8** %s.addr, align 8
  store i8* %1, i8** %start, align 8
  %2 = load i8*, i8** %pos, align 8
  %3 = load i8, i8* %2, align 1
  %conv = sext i8 %3 to i32
  %cmp = icmp eq i32 %conv, 118
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %4 = load i8*, i8** %pos, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %4, i32 1
  store i8* %incdec.ptr, i8** %pos, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end
  %5 = load i8*, i8** %pos, align 8
  %6 = load i8*, i8** @PL_bufend, align 8
  %cmp2 = icmp ult i8* %5, %6
  br i1 %cmp2, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %7 = load i8*, i8** %pos, align 8
  %8 = load i8, i8* %7, align 1
  %conv4 = sext i8 %8 to i32
  %cmp5 = icmp sge i32 %conv4, 48
  br i1 %cmp5, label %land.lhs.true, label %lor.rhs

land.lhs.true:                                    ; preds = %land.rhs
  %9 = load i8*, i8** %pos, align 8
  %10 = load i8, i8* %9, align 1
  %conv7 = sext i8 %10 to i32
  %cmp8 = icmp sle i32 %conv7, 57
  br i1 %cmp8, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %land.lhs.true, %land.rhs
  %11 = load i8*, i8** %pos, align 8
  %12 = load i8, i8* %11, align 1
  %conv10 = sext i8 %12 to i32
  %cmp11 = icmp eq i32 %conv10, 95
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %land.lhs.true
  %13 = phi i1 [ true, %land.lhs.true ], [ %cmp11, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %while.cond
  %14 = phi i1 [ false, %while.cond ], [ %13, %lor.end ]
  br i1 %14, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %15 = load i8*, i8** %pos, align 8
  %incdec.ptr13 = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr13, i8** %pos, align 8
  br label %while.cond

while.end:                                        ; preds = %land.end
  %16 = load i8*, i8** %pos, align 8
  %17 = load i8, i8* %16, align 1
  %conv14 = sext i8 %17 to i32
  %cmp15 = icmp ne i32 %conv14, 46
  br i1 %cmp15, label %if.then.17, label %if.end.60

if.then.17:                                       ; preds = %while.end
  %18 = load i8*, i8** %pos, align 8
  store i8* %18, i8** %next, align 8
  br label %while.cond.18

while.cond.18:                                    ; preds = %while.body.42, %if.then.17
  %19 = load i8*, i8** %next, align 8
  %20 = load i8*, i8** @PL_bufend, align 8
  %cmp19 = icmp ult i8* %19, %20
  br i1 %cmp19, label %land.rhs.21, label %land.end.41

land.rhs.21:                                      ; preds = %while.cond.18
  %21 = load i8*, i8** %next, align 8
  %22 = load i8, i8* %21, align 1
  %conv22 = sext i8 %22 to i32
  %cmp23 = icmp eq i32 %conv22, 32
  br i1 %cmp23, label %lor.end.40, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.rhs.21
  %23 = load i8*, i8** %next, align 8
  %24 = load i8, i8* %23, align 1
  %conv25 = sext i8 %24 to i32
  %cmp26 = icmp eq i32 %conv25, 9
  br i1 %cmp26, label %lor.end.40, label %lor.lhs.false.28

lor.lhs.false.28:                                 ; preds = %lor.lhs.false
  %25 = load i8*, i8** %next, align 8
  %26 = load i8, i8* %25, align 1
  %conv29 = sext i8 %26 to i32
  %cmp30 = icmp eq i32 %conv29, 10
  br i1 %cmp30, label %lor.end.40, label %lor.lhs.false.32

lor.lhs.false.32:                                 ; preds = %lor.lhs.false.28
  %27 = load i8*, i8** %next, align 8
  %28 = load i8, i8* %27, align 1
  %conv33 = sext i8 %28 to i32
  %cmp34 = icmp eq i32 %conv33, 13
  br i1 %cmp34, label %lor.end.40, label %lor.rhs.36

lor.rhs.36:                                       ; preds = %lor.lhs.false.32
  %29 = load i8*, i8** %next, align 8
  %30 = load i8, i8* %29, align 1
  %conv37 = sext i8 %30 to i32
  %cmp38 = icmp eq i32 %conv37, 12
  br label %lor.end.40

lor.end.40:                                       ; preds = %lor.rhs.36, %lor.lhs.false.32, %lor.lhs.false.28, %lor.lhs.false, %land.rhs.21
  %31 = phi i1 [ true, %lor.lhs.false.32 ], [ true, %lor.lhs.false.28 ], [ true, %lor.lhs.false ], [ true, %land.rhs.21 ], [ %cmp38, %lor.rhs.36 ]
  br label %land.end.41

land.end.41:                                      ; preds = %lor.end.40, %while.cond.18
  %32 = phi i1 [ false, %while.cond.18 ], [ %31, %lor.end.40 ]
  br i1 %32, label %while.body.42, label %while.end.44

while.body.42:                                    ; preds = %land.end.41
  %33 = load i8*, i8** %next, align 8
  %incdec.ptr43 = getelementptr inbounds i8, i8* %33, i32 1
  store i8* %incdec.ptr43, i8** %next, align 8
  br label %while.cond.18

while.end.44:                                     ; preds = %land.end.41
  %34 = load i8*, i8** @PL_bufend, align 8
  %35 = load i8*, i8** %next, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %34 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %35 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %cmp45 = icmp sge i64 %sub.ptr.sub, 2
  br i1 %cmp45, label %land.lhs.true.47, label %if.end.59

land.lhs.true.47:                                 ; preds = %while.end.44
  %36 = load i8*, i8** %next, align 8
  %37 = load i8, i8* %36, align 1
  %conv48 = sext i8 %37 to i32
  %cmp49 = icmp eq i32 %conv48, 61
  br i1 %cmp49, label %land.lhs.true.51, label %if.end.59

land.lhs.true.51:                                 ; preds = %land.lhs.true.47
  %38 = load i8*, i8** %next, align 8
  %arrayidx = getelementptr inbounds i8, i8* %38, i64 1
  %39 = load i8, i8* %arrayidx, align 1
  %conv52 = sext i8 %39 to i32
  %cmp53 = icmp eq i32 %conv52, 62
  br i1 %cmp53, label %if.then.55, label %if.end.59

if.then.55:                                       ; preds = %land.lhs.true.51
  %40 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %41 = load i8*, i8** %s.addr, align 8
  %42 = load i8*, i8** %pos, align 8
  %43 = load i8*, i8** %s.addr, align 8
  %sub.ptr.lhs.cast56 = ptrtoint i8* %42 to i64
  %sub.ptr.rhs.cast57 = ptrtoint i8* %43 to i64
  %sub.ptr.sub58 = sub i64 %sub.ptr.lhs.cast56, %sub.ptr.rhs.cast57
  call void @Perl_sv_setpvn(%struct.sv* %40, i8* %41, i64 %sub.ptr.sub58)
  %44 = load i8*, i8** %pos, align 8
  store i8* %44, i8** %retval
  br label %return

if.end.59:                                        ; preds = %land.lhs.true.51, %land.lhs.true.47, %while.end.44
  br label %if.end.60

if.end.60:                                        ; preds = %if.end.59, %while.end
  %45 = load i8*, i8** %pos, align 8
  %46 = load i8, i8* %45, align 1
  %conv61 = sext i8 %46 to i32
  %cmp62 = icmp sge i32 %conv61, 65
  br i1 %cmp62, label %land.lhs.true.64, label %lor.lhs.false.68

land.lhs.true.64:                                 ; preds = %if.end.60
  %47 = load i8*, i8** %pos, align 8
  %48 = load i8, i8* %47, align 1
  %conv65 = sext i8 %48 to i32
  %cmp66 = icmp sle i32 %conv65, 90
  br i1 %cmp66, label %if.end.172, label %lor.lhs.false.68

lor.lhs.false.68:                                 ; preds = %land.lhs.true.64, %if.end.60
  %49 = load i8*, i8** %pos, align 8
  %50 = load i8, i8* %49, align 1
  %conv69 = sext i8 %50 to i32
  %cmp70 = icmp sge i32 %conv69, 97
  br i1 %cmp70, label %land.lhs.true.72, label %if.then.76

land.lhs.true.72:                                 ; preds = %lor.lhs.false.68
  %51 = load i8*, i8** %pos, align 8
  %52 = load i8, i8* %51, align 1
  %conv73 = sext i8 %52 to i32
  %cmp74 = icmp sle i32 %conv73, 122
  br i1 %cmp74, label %if.end.172, label %if.then.76

if.then.76:                                       ; preds = %land.lhs.true.72, %lor.lhs.false.68
  %53 = load i8*, i8** %s.addr, align 8
  %54 = load i8, i8* %53, align 1
  %conv77 = sext i8 %54 to i32
  %cmp78 = icmp eq i32 %conv77, 118
  br i1 %cmp78, label %if.then.80, label %if.end.82

if.then.80:                                       ; preds = %if.then.76
  %55 = load i8*, i8** %s.addr, align 8
  %incdec.ptr81 = getelementptr inbounds i8, i8* %55, i32 1
  store i8* %incdec.ptr81, i8** %s.addr, align 8
  br label %if.end.82

if.end.82:                                        ; preds = %if.then.80, %if.then.76
  %56 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  call void @Perl_sv_setpvn(%struct.sv* %56, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.24, i32 0, i32 0), i64 0)
  br label %for.cond

for.cond:                                         ; preds = %while.end.163, %if.end.82
  store i64 0, i64* %rev, align 8
  %57 = load i8*, i8** %pos, align 8
  store i8* %57, i8** %end, align 8
  store i64 1, i64* %mult, align 8
  br label %while.cond.83

while.cond.83:                                    ; preds = %if.end.114, %if.then.91, %for.cond
  %58 = load i8*, i8** %end, align 8
  %incdec.ptr84 = getelementptr inbounds i8, i8* %58, i32 -1
  store i8* %incdec.ptr84, i8** %end, align 8
  %59 = load i8*, i8** %s.addr, align 8
  %cmp85 = icmp uge i8* %incdec.ptr84, %59
  br i1 %cmp85, label %while.body.87, label %while.end.115

while.body.87:                                    ; preds = %while.cond.83
  %60 = load i8*, i8** %end, align 8
  %61 = load i8, i8* %60, align 1
  %conv88 = sext i8 %61 to i32
  %cmp89 = icmp eq i32 %conv88, 95
  br i1 %cmp89, label %if.then.91, label %if.end.92

if.then.91:                                       ; preds = %while.body.87
  br label %while.cond.83

if.end.92:                                        ; preds = %while.body.87
  %62 = load i64, i64* %rev, align 8
  store i64 %62, i64* %orev, align 8
  %63 = load i8*, i8** %end, align 8
  %64 = load i8, i8* %63, align 1
  %conv93 = sext i8 %64 to i32
  %sub = sub nsw i32 %conv93, 48
  %conv94 = sext i32 %sub to i64
  %65 = load i64, i64* %mult, align 8
  %mul = mul i64 %conv94, %65
  %66 = load i64, i64* %rev, align 8
  %add = add i64 %66, %mul
  store i64 %add, i64* %rev, align 8
  %67 = load i64, i64* %mult, align 8
  %mul95 = mul i64 %67, 10
  store i64 %mul95, i64* %mult, align 8
  %68 = load i64, i64* %orev, align 8
  %69 = load i64, i64* %rev, align 8
  %cmp96 = icmp ugt i64 %68, %69
  br i1 %cmp96, label %land.lhs.true.98, label %if.end.114

land.lhs.true.98:                                 ; preds = %if.end.92
  %70 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings = getelementptr inbounds %struct.cop, %struct.cop* %70, i32 0, i32 14
  %71 = load %struct.sv*, %struct.sv** %cop_warnings, align 8
  %cmp99 = icmp eq %struct.sv* %71, null
  br i1 %cmp99, label %if.then.113, label %lor.lhs.false.101

lor.lhs.false.101:                                ; preds = %land.lhs.true.98
  %72 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings102 = getelementptr inbounds %struct.cop, %struct.cop* %72, i32 0, i32 14
  %73 = load %struct.sv*, %struct.sv** %cop_warnings102, align 8
  %cmp103 = icmp eq %struct.sv* %73, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 1)
  br i1 %cmp103, label %if.then.113, label %lor.lhs.false.105

lor.lhs.false.105:                                ; preds = %lor.lhs.false.101
  %74 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings106 = getelementptr inbounds %struct.cop, %struct.cop* %74, i32 0, i32 14
  %75 = load %struct.sv*, %struct.sv** %cop_warnings106, align 8
  %cmp107 = icmp ne %struct.sv* %75, getelementptr inbounds (%struct.sv, %struct.sv* null, i64 2)
  br i1 %cmp107, label %land.lhs.true.109, label %if.end.114

land.lhs.true.109:                                ; preds = %lor.lhs.false.105
  %76 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_warnings110 = getelementptr inbounds %struct.cop, %struct.cop* %76, i32 0, i32 14
  %77 = load %struct.sv*, %struct.sv** %cop_warnings110, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %77, i32 0, i32 0
  %78 = load i8*, i8** %sv_any, align 8
  %79 = bitcast i8* %78 to %struct.xpv*
  %xpv_pv = getelementptr inbounds %struct.xpv, %struct.xpv* %79, i32 0, i32 0
  %80 = load i8*, i8** %xpv_pv, align 8
  %arrayidx111 = getelementptr inbounds i8, i8* %80, i64 3
  %81 = load i8, i8* %arrayidx111, align 1
  %conv112 = sext i8 %81 to i32
  %and = and i32 %conv112, 64
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then.113, label %if.end.114

if.then.113:                                      ; preds = %land.lhs.true.109, %lor.lhs.false.101, %land.lhs.true.98
  call void (i32, i8*, ...) @Perl_warner(i32 15, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.151, i32 0, i32 0))
  br label %if.end.114

if.end.114:                                       ; preds = %if.then.113, %land.lhs.true.109, %lor.lhs.false.105, %if.end.92
  br label %while.cond.83

while.end.115:                                    ; preds = %while.cond.83
  %arraydecay = getelementptr inbounds [14 x i8], [14 x i8]* %tmpbuf, i32 0, i32 0
  %82 = load i64, i64* %rev, align 8
  %call = call i8* @Perl_uvuni_to_utf8(i8* %arraydecay, i64 %82)
  store i8* %call, i8** %tmpend, align 8
  %83 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %arraydecay116 = getelementptr inbounds [14 x i8], [14 x i8]* %tmpbuf, i32 0, i32 0
  %84 = load i8*, i8** %tmpend, align 8
  %arraydecay117 = getelementptr inbounds [14 x i8], [14 x i8]* %tmpbuf, i32 0, i32 0
  %sub.ptr.lhs.cast118 = ptrtoint i8* %84 to i64
  %sub.ptr.rhs.cast119 = ptrtoint i8* %arraydecay117 to i64
  %sub.ptr.sub120 = sub i64 %sub.ptr.lhs.cast118, %sub.ptr.rhs.cast119
  call void @Perl_sv_catpvn_flags(%struct.sv* %83, i8* %arraydecay116, i64 %sub.ptr.sub120, i32 2)
  %85 = load i64, i64* %rev, align 8
  %cmp121 = icmp ult i64 %85, 128
  br i1 %cmp121, label %if.end.124, label %if.then.123

if.then.123:                                      ; preds = %while.end.115
  %86 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %86, i32 0, i32 2
  %87 = load i32, i32* %sv_flags, align 4
  %or = or i32 %87, 536870912
  store i32 %or, i32* %sv_flags, align 4
  br label %if.end.124

if.end.124:                                       ; preds = %if.then.123, %while.end.115
  %88 = load i8*, i8** %pos, align 8
  %add.ptr = getelementptr inbounds i8, i8* %88, i64 1
  %89 = load i8*, i8** @PL_bufend, align 8
  %cmp125 = icmp ult i8* %add.ptr, %89
  br i1 %cmp125, label %land.lhs.true.127, label %if.else

land.lhs.true.127:                                ; preds = %if.end.124
  %90 = load i8*, i8** %pos, align 8
  %91 = load i8, i8* %90, align 1
  %conv128 = sext i8 %91 to i32
  %cmp129 = icmp eq i32 %conv128, 46
  br i1 %cmp129, label %land.lhs.true.131, label %if.else

land.lhs.true.131:                                ; preds = %land.lhs.true.127
  %92 = load i8*, i8** %pos, align 8
  %arrayidx132 = getelementptr inbounds i8, i8* %92, i64 1
  %93 = load i8, i8* %arrayidx132, align 1
  %conv133 = sext i8 %93 to i32
  %cmp134 = icmp sge i32 %conv133, 48
  br i1 %cmp134, label %land.lhs.true.136, label %if.else

land.lhs.true.136:                                ; preds = %land.lhs.true.131
  %94 = load i8*, i8** %pos, align 8
  %arrayidx137 = getelementptr inbounds i8, i8* %94, i64 1
  %95 = load i8, i8* %arrayidx137, align 1
  %conv138 = sext i8 %95 to i32
  %cmp139 = icmp sle i32 %conv138, 57
  br i1 %cmp139, label %if.then.141, label %if.else

if.then.141:                                      ; preds = %land.lhs.true.136
  %96 = load i8*, i8** %pos, align 8
  %incdec.ptr142 = getelementptr inbounds i8, i8* %96, i32 1
  store i8* %incdec.ptr142, i8** %pos, align 8
  store i8* %incdec.ptr142, i8** %s.addr, align 8
  br label %if.end.143

if.else:                                          ; preds = %land.lhs.true.136, %land.lhs.true.131, %land.lhs.true.127, %if.end.124
  %97 = load i8*, i8** %pos, align 8
  store i8* %97, i8** %s.addr, align 8
  br label %for.end

if.end.143:                                       ; preds = %if.then.141
  br label %while.cond.144

while.cond.144:                                   ; preds = %while.body.161, %if.end.143
  %98 = load i8*, i8** %pos, align 8
  %99 = load i8*, i8** @PL_bufend, align 8
  %cmp145 = icmp ult i8* %98, %99
  br i1 %cmp145, label %land.rhs.147, label %land.end.160

land.rhs.147:                                     ; preds = %while.cond.144
  %100 = load i8*, i8** %pos, align 8
  %101 = load i8, i8* %100, align 1
  %conv148 = sext i8 %101 to i32
  %cmp149 = icmp sge i32 %conv148, 48
  br i1 %cmp149, label %land.lhs.true.151, label %lor.rhs.155

land.lhs.true.151:                                ; preds = %land.rhs.147
  %102 = load i8*, i8** %pos, align 8
  %103 = load i8, i8* %102, align 1
  %conv152 = sext i8 %103 to i32
  %cmp153 = icmp sle i32 %conv152, 57
  br i1 %cmp153, label %lor.end.159, label %lor.rhs.155

lor.rhs.155:                                      ; preds = %land.lhs.true.151, %land.rhs.147
  %104 = load i8*, i8** %pos, align 8
  %105 = load i8, i8* %104, align 1
  %conv156 = sext i8 %105 to i32
  %cmp157 = icmp eq i32 %conv156, 95
  br label %lor.end.159

lor.end.159:                                      ; preds = %lor.rhs.155, %land.lhs.true.151
  %106 = phi i1 [ true, %land.lhs.true.151 ], [ %cmp157, %lor.rhs.155 ]
  br label %land.end.160

land.end.160:                                     ; preds = %lor.end.159, %while.cond.144
  %107 = phi i1 [ false, %while.cond.144 ], [ %106, %lor.end.159 ]
  br i1 %107, label %while.body.161, label %while.end.163

while.body.161:                                   ; preds = %land.end.160
  %108 = load i8*, i8** %pos, align 8
  %incdec.ptr162 = getelementptr inbounds i8, i8* %108, i32 1
  store i8* %incdec.ptr162, i8** %pos, align 8
  br label %while.cond.144

while.end.163:                                    ; preds = %land.end.160
  br label %for.cond

for.end:                                          ; preds = %if.else
  %109 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags164 = getelementptr inbounds %struct.sv, %struct.sv* %109, i32 0, i32 2
  %110 = load i32, i32* %sv_flags164, align 4
  %or165 = or i32 %110, 67371008
  store i32 %or165, i32* %sv_flags164, align 4
  %111 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %112 = load i8*, i8** %start, align 8
  %113 = load i8*, i8** %pos, align 8
  %114 = load i8*, i8** %start, align 8
  %sub.ptr.lhs.cast166 = ptrtoint i8* %113 to i64
  %sub.ptr.rhs.cast167 = ptrtoint i8* %114 to i64
  %sub.ptr.sub168 = sub i64 %sub.ptr.lhs.cast166, %sub.ptr.rhs.cast167
  %conv169 = trunc i64 %sub.ptr.sub168 to i32
  call void @Perl_sv_magic(%struct.sv* %111, %struct.sv* null, i32 86, i8* %112, i32 %conv169)
  %115 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags170 = getelementptr inbounds %struct.sv, %struct.sv* %115, i32 0, i32 2
  %116 = load i32, i32* %sv_flags170, align 4
  %or171 = or i32 %116, 32768
  store i32 %or171, i32* %sv_flags170, align 4
  br label %if.end.172

if.end.172:                                       ; preds = %for.end, %land.lhs.true.72, %land.lhs.true.64
  %117 = load i8*, i8** %s.addr, align 8
  store i8* %117, i8** %retval
  br label %return

return:                                           ; preds = %if.end.172, %if.then.55
  %118 = load i8*, i8** %retval
  ret i8* %118
}

; Function Attrs: nounwind uwtable
define i32 @Perl_start_subparse(i32 %is_format, i32 %flags) #0 {
entry:
  %is_format.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  %oldsavestack_ix = alloca i32, align 4
  %outsidecv = alloca %struct.cv*, align 8
  store i32 %is_format, i32* %is_format.addr, align 4
  store i32 %flags, i32* %flags.addr, align 4
  %0 = load i32, i32* @PL_savestack_ix, align 4
  store i32 %0, i32* %oldsavestack_ix, align 4
  %1 = load %struct.cv*, %struct.cv** @PL_compcv, align 8
  store %struct.cv* %1, %struct.cv** %outsidecv, align 8
  %2 = load %struct.cv*, %struct.cv** @PL_compcv, align 8
  %tobool = icmp ne %struct.cv* %2, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  call void @Perl_save_I32(i32* @PL_subline)
  %3 = load %struct.sv*, %struct.sv** @PL_subname, align 8
  call void @Perl_save_item(%struct.sv* %3)
  call void @Perl_save_sptr(%struct.sv** bitcast (%struct.cv** @PL_compcv to %struct.sv**))
  %call = call %struct.sv* @Perl_newSV(i64 0)
  %4 = bitcast %struct.sv* %call to %struct.cv*
  store %struct.cv* %4, %struct.cv** @PL_compcv, align 8
  %5 = load %struct.cv*, %struct.cv** @PL_compcv, align 8
  %6 = bitcast %struct.cv* %5 to %struct.sv*
  %7 = load i32, i32* %is_format.addr, align 4
  %tobool1 = icmp ne i32 %7, 0
  %cond = select i1 %tobool1, i32 14, i32 12
  %call2 = call signext i8 @Perl_sv_upgrade(%struct.sv* %6, i32 %cond)
  %8 = load i32, i32* %flags.addr, align 4
  %9 = load %struct.cv*, %struct.cv** @PL_compcv, align 8
  %sv_any = getelementptr inbounds %struct.cv, %struct.cv* %9, i32 0, i32 0
  %10 = load %struct.xpvcv*, %struct.xpvcv** %sv_any, align 8
  %xcv_flags = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %10, i32 0, i32 17
  %11 = load i16, i16* %xcv_flags, align 2
  %conv = zext i16 %11 to i32
  %or = or i32 %conv, %8
  %conv3 = trunc i32 %or to i16
  store i16 %conv3, i16* %xcv_flags, align 2
  %12 = load volatile %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_line = getelementptr inbounds %struct.cop, %struct.cop* %12, i32 0, i32 13
  %13 = load i32, i32* %cop_line, align 4
  store i32 %13, i32* @PL_subline, align 4
  %call4 = call %struct.av* @Perl_pad_new(i32 6)
  %14 = load %struct.cv*, %struct.cv** @PL_compcv, align 8
  %sv_any5 = getelementptr inbounds %struct.cv, %struct.cv* %14, i32 0, i32 0
  %15 = load %struct.xpvcv*, %struct.xpvcv** %sv_any5, align 8
  %xcv_padlist = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %15, i32 0, i32 15
  store %struct.av* %call4, %struct.av** %xcv_padlist, align 8
  %16 = load %struct.cv*, %struct.cv** %outsidecv, align 8
  %17 = bitcast %struct.cv* %16 to %struct.sv*
  store %struct.sv* %17, %struct.sv** @PL_Sv, align 8
  %18 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %tobool6 = icmp ne %struct.sv* %18, null
  br i1 %tobool6, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.end
  %19 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %sv_refcnt = getelementptr inbounds %struct.sv, %struct.sv* %19, i32 0, i32 1
  %20 = load i32, i32* %sv_refcnt, align 4
  %inc = add i32 %20, 1
  store i32 %inc, i32* %sv_refcnt, align 4
  %tobool7 = icmp ne i32 %inc, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end
  %21 = phi i1 [ false, %if.end ], [ %tobool7, %land.rhs ]
  %land.ext = zext i1 %21 to i32
  %22 = load %struct.sv*, %struct.sv** @PL_Sv, align 8
  %23 = bitcast %struct.sv* %22 to %struct.cv*
  %24 = load %struct.cv*, %struct.cv** @PL_compcv, align 8
  %sv_any8 = getelementptr inbounds %struct.cv, %struct.cv* %24, i32 0, i32 0
  %25 = load %struct.xpvcv*, %struct.xpvcv** %sv_any8, align 8
  %xcv_outside = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %25, i32 0, i32 16
  store %struct.cv* %23, %struct.cv** %xcv_outside, align 8
  %26 = load i32, i32* @PL_cop_seqmax, align 4
  %27 = load %struct.cv*, %struct.cv** @PL_compcv, align 8
  %sv_any9 = getelementptr inbounds %struct.cv, %struct.cv* %27, i32 0, i32 0
  %28 = load %struct.xpvcv*, %struct.xpvcv** %sv_any9, align 8
  %xcv_outside_seq = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %28, i32 0, i32 18
  store i32 %26, i32* %xcv_outside_seq, align 4
  %29 = load i32, i32* %oldsavestack_ix, align 4
  ret i32 %29
}

declare void @Perl_save_item(%struct.sv*) #1

declare %struct.av* @Perl_pad_new(i32) #1

; Function Attrs: nounwind uwtable
define i32 @Perl_yywarn(i8* %s) #0 {
entry:
  %s.addr = alloca i8*, align 8
  store i8* %s, i8** %s.addr, align 8
  %0 = load volatile i32, i32* @PL_in_eval, align 4
  %or = or i32 %0, 2
  store volatile i32 %or, i32* @PL_in_eval, align 4
  %1 = load i8*, i8** %s.addr, align 8
  %call = call i32 @Perl_yyerror(i8* %1)
  %2 = load volatile i32, i32* @PL_in_eval, align 4
  %and = and i32 %2, -3
  store volatile i32 %and, i32* @PL_in_eval, align 4
  ret i32 0
}

declare i16** @__ctype_b_loc() #1

declare void @Perl_qerror(%struct.sv*) #1

declare void @Perl_sv_setpvn(%struct.sv*, i8*, i64) #1

declare i8* @Perl_uvuni_to_utf8(i8*, i64) #1

declare void @Perl_sv_magic(%struct.sv*, %struct.sv*, i32, i8*, i32) #1

declare void @Perl_save_freesv(%struct.sv*) #1

declare i8* @Perl_utf8_hop(i8*, i32) #1

declare i64 @Perl_grok_oct(i8*, i64*, i32*, double*) #1

declare i64 @Perl_grok_hex(i8*, i64*, i32*, double*) #1

declare i64 @Perl_sv_utf8_upgrade_flags(%struct.sv*, i32) #1

declare i8* @Perl_sv_recode_to_utf8(%struct.sv*, %struct.sv*) #1

declare i8* @getenv(i8*) #1

declare i32* @__errno_location() #1

declare i32 @atoi(i8*) #1

declare i8* @strrchr(i8*, i32) #1

declare i8* @Perl_sv_2pv_nolen(%struct.sv*) #1

declare i64 @Perl_allocmy(i8*) #1

declare %struct.op* @Perl_newOP(i32, i32) #1

declare i64 @Perl_pad_findmy(i8*) #1

declare %struct.sv** @Perl_av_fetch(%struct.av*, i32, i32) #1

declare %struct.stackinfo* @Perl_new_stackinfo(i32, i32) #1

declare i32 @Perl_call_sv(%struct.sv*, i32) #1

declare signext i8 @Perl_sv_2bool(%struct.sv*) #1

declare i32 @PerlIO_printf(%struct._PerlIO**, i8*, ...) #1

declare %struct._PerlIO** @Perl_PerlIO_stderr() #1

declare void @Perl_my_exit(i32) #1

declare signext i8 @Perl_is_utf8_mark(i8*) #1

declare %struct.op* @Perl_newPMOP(i32, i32) #1

declare %struct.op* @Perl_newPVOP(i32, i32, i8*) #1

declare i8* @Perl_delimcpy(i8*, i8*, i8*, i8*, i32, i32*) #1

declare i8* @Perl_ninstr(i8*, i8*, i8*, i8*) #1

declare %struct.op* @Perl_newUNOP(i32, i32, %struct.op*) #1

declare i64 @Perl_utf8_to_uvchr(i8*, i64*) #1

declare signext i8 @Perl_sv_cat_decode(%struct.sv*, %struct.sv*, %struct.sv*, i32*, i8*, i32) #1

declare i8* @memchr(i8*, i32, i64) #1

; Function Attrs: nounwind uwtable
define internal i32 @utf16rev_textfilter(i32 %idx, %struct.sv* %sv, i32 %maxlen) #0 {
entry:
  %idx.addr = alloca i32, align 4
  %sv.addr = alloca %struct.sv*, align 8
  %maxlen.addr = alloca i32, align 4
  %old = alloca i64, align 8
  %count = alloca i32, align 4
  %tmps = alloca i8*, align 8
  %newlen = alloca i32, align 4
  store i32 %idx, i32* %idx.addr, align 4
  store %struct.sv* %sv, %struct.sv** %sv.addr, align 8
  store i32 %maxlen, i32* %maxlen.addr, align 4
  %0 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %0, i32 0, i32 0
  %1 = load i8*, i8** %sv_any, align 8
  %2 = bitcast i8* %1 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %2, i32 0, i32 1
  %3 = load i64, i64* %xpv_cur, align 8
  store i64 %3, i64* %old, align 8
  %4 = load i32, i32* %idx.addr, align 4
  %add = add nsw i32 %4, 1
  %5 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %6 = load i32, i32* %maxlen.addr, align 4
  %call = call i32 @Perl_filter_read(i32 %add, %struct.sv* %5, i32 %6)
  store i32 %call, i32* %count, align 4
  %7 = load i32, i32* %count, align 4
  %tobool = icmp ne i32 %7, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %8 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_any1 = getelementptr inbounds %struct.sv, %struct.sv* %8, i32 0, i32 0
  %9 = load i8*, i8** %sv_any1, align 8
  %10 = bitcast i8* %9 to %struct.xpv*
  %xpv_cur2 = getelementptr inbounds %struct.xpv, %struct.xpv* %10, i32 0, i32 1
  %11 = load i64, i64* %xpv_cur2, align 8
  %mul = mul i64 %11, 3
  %div = udiv i64 %mul, 2
  %add3 = add i64 %div, 1
  %mul4 = mul i64 %add3, 1
  %call5 = call i8* @Perl_safesysmalloc(i64 %mul4)
  store i8* %call5, i8** %tmps, align 8
  %12 = load i8*, i8** %tmps, align 8
  %13 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_any6 = getelementptr inbounds %struct.sv, %struct.sv* %13, i32 0, i32 0
  %14 = load i8*, i8** %sv_any6, align 8
  %15 = bitcast i8* %14 to %struct.xpv*
  %xpv_pv = getelementptr inbounds %struct.xpv, %struct.xpv* %15, i32 0, i32 0
  %16 = load i8*, i8** %xpv_pv, align 8
  %17 = load i64, i64* %old, align 8
  %mul7 = mul i64 %17, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %16, i64 %mul7, i32 1, i1 false)
  %18 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_any8 = getelementptr inbounds %struct.sv, %struct.sv* %18, i32 0, i32 0
  %19 = load i8*, i8** %sv_any8, align 8
  %20 = bitcast i8* %19 to %struct.xpv*
  %xpv_pv9 = getelementptr inbounds %struct.xpv, %struct.xpv* %20, i32 0, i32 0
  %21 = load i8*, i8** %xpv_pv9, align 8
  %22 = load i64, i64* %old, align 8
  %add.ptr = getelementptr inbounds i8, i8* %21, i64 %22
  %23 = load i8*, i8** %tmps, align 8
  %24 = load i64, i64* %old, align 8
  %add.ptr10 = getelementptr inbounds i8, i8* %23, i64 %24
  %25 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_any11 = getelementptr inbounds %struct.sv, %struct.sv* %25, i32 0, i32 0
  %26 = load i8*, i8** %sv_any11, align 8
  %27 = bitcast i8* %26 to %struct.xpv*
  %xpv_cur12 = getelementptr inbounds %struct.xpv, %struct.xpv* %27, i32 0, i32 1
  %28 = load i64, i64* %xpv_cur12, align 8
  %29 = load i64, i64* %old, align 8
  %sub = sub i64 %28, %29
  %conv = trunc i64 %sub to i32
  %call13 = call i8* @Perl_utf16_to_utf8(i8* %add.ptr, i8* %add.ptr10, i32 %conv, i32* %newlen)
  %30 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %31 = load i8*, i8** %tmps, align 8
  %32 = load i32, i32* %newlen, align 4
  %conv14 = sext i32 %32 to i64
  %33 = load i64, i64* %old, align 8
  %add15 = add i64 %conv14, %33
  call void @Perl_sv_usepvn(%struct.sv* %30, i8* %31, i64 %add15)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %34 = load i32, i32* %count, align 4
  ret i32 %34
}

declare i8* @Perl_utf16_to_utf8_reversed(i8*, i8*, i32, i32*) #1

declare void @Perl_safesysfree(i8*) #1

; Function Attrs: nounwind uwtable
define internal i32 @utf16_textfilter(i32 %idx, %struct.sv* %sv, i32 %maxlen) #0 {
entry:
  %idx.addr = alloca i32, align 4
  %sv.addr = alloca %struct.sv*, align 8
  %maxlen.addr = alloca i32, align 4
  %old = alloca i64, align 8
  %count = alloca i32, align 4
  %tmps = alloca i8*, align 8
  %newlen = alloca i32, align 4
  store i32 %idx, i32* %idx.addr, align 4
  store %struct.sv* %sv, %struct.sv** %sv.addr, align 8
  store i32 %maxlen, i32* %maxlen.addr, align 4
  %0 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %0, i32 0, i32 0
  %1 = load i8*, i8** %sv_any, align 8
  %2 = bitcast i8* %1 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %2, i32 0, i32 1
  %3 = load i64, i64* %xpv_cur, align 8
  store i64 %3, i64* %old, align 8
  %4 = load i32, i32* %idx.addr, align 4
  %add = add nsw i32 %4, 1
  %5 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %6 = load i32, i32* %maxlen.addr, align 4
  %call = call i32 @Perl_filter_read(i32 %add, %struct.sv* %5, i32 %6)
  store i32 %call, i32* %count, align 4
  %7 = load i32, i32* %count, align 4
  %tobool = icmp ne i32 %7, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %8 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_any1 = getelementptr inbounds %struct.sv, %struct.sv* %8, i32 0, i32 0
  %9 = load i8*, i8** %sv_any1, align 8
  %10 = bitcast i8* %9 to %struct.xpv*
  %xpv_cur2 = getelementptr inbounds %struct.xpv, %struct.xpv* %10, i32 0, i32 1
  %11 = load i64, i64* %xpv_cur2, align 8
  %mul = mul i64 %11, 3
  %div = udiv i64 %mul, 2
  %add3 = add i64 %div, 1
  %mul4 = mul i64 %add3, 1
  %call5 = call i8* @Perl_safesysmalloc(i64 %mul4)
  store i8* %call5, i8** %tmps, align 8
  %12 = load i8*, i8** %tmps, align 8
  %13 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_any6 = getelementptr inbounds %struct.sv, %struct.sv* %13, i32 0, i32 0
  %14 = load i8*, i8** %sv_any6, align 8
  %15 = bitcast i8* %14 to %struct.xpv*
  %xpv_pv = getelementptr inbounds %struct.xpv, %struct.xpv* %15, i32 0, i32 0
  %16 = load i8*, i8** %xpv_pv, align 8
  %17 = load i64, i64* %old, align 8
  %mul7 = mul i64 %17, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %16, i64 %mul7, i32 1, i1 false)
  %18 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_any8 = getelementptr inbounds %struct.sv, %struct.sv* %18, i32 0, i32 0
  %19 = load i8*, i8** %sv_any8, align 8
  %20 = bitcast i8* %19 to %struct.xpv*
  %xpv_pv9 = getelementptr inbounds %struct.xpv, %struct.xpv* %20, i32 0, i32 0
  %21 = load i8*, i8** %xpv_pv9, align 8
  %22 = load i64, i64* %old, align 8
  %add.ptr = getelementptr inbounds i8, i8* %21, i64 %22
  %23 = load i8*, i8** %tmps, align 8
  %24 = load i64, i64* %old, align 8
  %add.ptr10 = getelementptr inbounds i8, i8* %23, i64 %24
  %25 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_any11 = getelementptr inbounds %struct.sv, %struct.sv* %25, i32 0, i32 0
  %26 = load i8*, i8** %sv_any11, align 8
  %27 = bitcast i8* %26 to %struct.xpv*
  %xpv_cur12 = getelementptr inbounds %struct.xpv, %struct.xpv* %27, i32 0, i32 1
  %28 = load i64, i64* %xpv_cur12, align 8
  %29 = load i64, i64* %old, align 8
  %sub = sub i64 %28, %29
  %conv = trunc i64 %sub to i32
  %call13 = call i8* @Perl_utf16_to_utf8(i8* %add.ptr, i8* %add.ptr10, i32 %conv, i32* %newlen)
  %30 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %31 = load i8*, i8** %tmps, align 8
  %32 = load i32, i32* %newlen, align 4
  %conv14 = sext i32 %32 to i64
  %33 = load i64, i64* %old, align 8
  %add15 = add i64 %conv14, %33
  call void @Perl_sv_usepvn(%struct.sv* %30, i8* %31, i64 %add15)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %34 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_any16 = getelementptr inbounds %struct.sv, %struct.sv* %34, i32 0, i32 0
  %35 = load i8*, i8** %sv_any16, align 8
  %36 = bitcast i8* %35 to %struct.xpv*
  %xpv_cur17 = getelementptr inbounds %struct.xpv, %struct.xpv* %36, i32 0, i32 1
  %37 = load i64, i64* %xpv_cur17, align 8
  %conv18 = trunc i64 %37 to i32
  ret i32 %conv18
}

declare i8* @Perl_utf16_to_utf8(i8*, i8*, i32, i32*) #1

declare void @Perl_sv_usepvn(%struct.sv*, i8*, i64) #1

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"clang version 3.7.0 (tags/RELEASE_370/final)"}
