; ModuleID = 'macroblock.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.ImageParameters = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32**, i32**, i32, i32***, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [9 x [16 x [16 x i16]]], [5 x [16 x [16 x i16]]], [9 x [8 x [8 x i16]]], [2 x [4 x [16 x [16 x i16]]]], [16 x [16 x i16]], [16 x [16 x i32]], i32****, i32***, %struct.Picture*, %struct.Slice*, %struct.macroblock*, [1200 x %struct.syntaxelement], i32*, i32*, i32, i32, i32, i32, [4 x [4 x i32]], i32, i32, i32, i32, i32, double, i32, i32, i32, i32, i16******, i16******, i16******, i16******, [15 x i16], i32, i32, i32, i32, i32, i32, i32, i32, [6 x [15 x i32]], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1 x i32], i32, i32, [2 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.DecRefPicMarking_s*, i32, i32, i32, i32, i32, double, i32, i32, i32, i32, i32, i32, i32, double*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32], i32, i32, i32 }
%struct.Picture = type { i32, i32, [100 x %struct.Slice*], i32, float, float, float }
%struct.Slice = type { i32, i32, i32, i32, i32, i32, %struct.datapartition*, %struct.MotionInfoContexts*, %struct.TextureInfoContexts*, %struct.RMPNIbuffer_s*, i32, i32*, i32*, i32*, i32, i32*, i32*, i32*, i32 (i32)*, [3 x [2 x i32]] }
%struct.datapartition = type { %struct.Bitstream*, %struct.EncodingEnvironment, i32 (%struct.syntaxelement*, %struct.datapartition*)* }
%struct.Bitstream = type { i32, i32, i8, i32, i32, i8, i8, i32, i32, i8*, i32 }
%struct.EncodingEnvironment = type { i32, i32, i32, i32, i32, i8*, i32*, i32, i32, i32, i32, i32, i8*, i32*, i32, i32, i32, i32, i32, i32 }
%struct.syntaxelement = type { i32, i32, i32, i32, i32, i32, i32, i32, void (i32, i32, i32*, i32*)*, void (%struct.syntaxelement*, %struct.EncodingEnvironment*)* }
%struct.MotionInfoContexts = type { [3 x [11 x %struct.BiContextType]], [2 x [9 x %struct.BiContextType]], [2 x [10 x %struct.BiContextType]], [2 x [6 x %struct.BiContextType]], [4 x %struct.BiContextType], [4 x %struct.BiContextType], [3 x %struct.BiContextType] }
%struct.BiContextType = type { i16, i8, i64 }
%struct.TextureInfoContexts = type { [2 x %struct.BiContextType], [4 x %struct.BiContextType], [3 x [4 x %struct.BiContextType]], [10 x [4 x %struct.BiContextType]], [10 x [15 x %struct.BiContextType]], [10 x [15 x %struct.BiContextType]], [10 x [5 x %struct.BiContextType]], [10 x [5 x %struct.BiContextType]], [10 x [15 x %struct.BiContextType]], [10 x [15 x %struct.BiContextType]] }
%struct.RMPNIbuffer_s = type { i32, i32, %struct.RMPNIbuffer_s* }
%struct.macroblock = type { i32, i32, i32, i32, i32, [8 x i32], %struct.macroblock*, %struct.macroblock*, i32, [2 x [4 x [4 x [2 x i32]]]], [16 x i32], [16 x i32], i32, i64, [4 x i32], [4 x i32], i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, double, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.DecRefPicMarking_s = type { i32, i32, i32, i32, i32, %struct.DecRefPicMarking_s* }
%struct.StatParameters = type { i32, i32, float, float, i32, i32, i32, i32, [5 x [2 x i32]], [5 x [15 x i32]], [5 x [15 x i32]], [4 x i32], i32*, i32*, i32, i32, i32, float, float, float, [5 x [15 x i32]], [5 x [15 x i32]], [5 x i32], [5 x i32], [5 x i32], [5 x i32], [5 x i32], [5 x i32], [5 x i32], i32, i32, i32*, i32, i32 }
%struct.InputParameters = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [8 x [2 x i32]], [8 x [2 x i32]], i32, i32, i32, i32, [200 x i8], [200 x i8], [200 x i8], [200 x i8], [200 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1024 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, double, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [200 x i8], [200 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [200 x i8], i32, i32, i32*, i32*, i8*, i32*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [8 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [6 x double], [200 x i8], i32 }
%struct.storable_picture = type { i32, i32, i32, i32, i32, i32, [6 x [33 x i64]], [6 x [33 x i64]], [6 x [33 x i64]], [6 x [33 x i64]], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16**, i16*, i16*, i16**, i16**, i16***, i8*, i16***, i64***, i64***, i16****, i8**, i8**, %struct.storable_picture*, %struct.storable_picture*, %struct.storable_picture*, i32, i32, i32, i32, i32, i32, i32 }
%struct.seq_parameter_set_rbsp_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [8 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, [256 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.vui_seq_parameters_t }
%struct.vui_seq_parameters_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.hrd_parameters_t, i32, %struct.hrd_parameters_t, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.hrd_parameters_t = type { i32, i32, i32, [32 x i32], [32 x i32], [32 x i32], i32, i32, i32, i32 }
%struct.pic_parameter_set_rbsp_t = type { i32, i32, i32, i32, i32, i32, [8 x i32], i32, i32, i32, [8 x i32], [8 x i32], [8 x i32], i32, i32, i32, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.pix_pos = type { i32, i32, i32, i32, i32, i32 }

@MODTAB = constant [3 x [2 x i32]] [[2 x i32] [i32 0, i32 4], [2 x i32] [i32 16, i32 12], [2 x i32] [i32 8, i32 20]], align 16
@NCBP = constant [2 x [48 x [2 x i8]]] [[48 x [2 x i8]] [[2 x i8] c"\01\00", [2 x i8] c"\0A\01", [2 x i8] c"\0B\02", [2 x i8] c"\06\05", [2 x i8] c"\0C\03", [2 x i8] c"\07\06", [2 x i8] c"\0E\0E", [2 x i8] c"\02\0A", [2 x i8] c"\0D\04", [2 x i8] c"\0F\0F", [2 x i8] c"\08\07", [2 x i8] c"\03\0B", [2 x i8] c"\09\08", [2 x i8] c"\04\0C", [2 x i8] c"\05\0D", [2 x i8] c"\00\09", [2 x i8] zeroinitializer, [2 x i8] zeroinitializer, [2 x i8] zeroinitializer, [2 x i8] zeroinitializer, [2 x i8] zeroinitializer, [2 x i8] zeroinitializer, [2 x i8] zeroinitializer, [2 x i8] zeroinitializer, [2 x i8] zeroinitializer, [2 x i8] zeroinitializer, [2 x i8] zeroinitializer, [2 x i8] zeroinitializer, [2 x i8] zeroinitializer, [2 x i8] zeroinitializer, [2 x i8] zeroinitializer, [2 x i8] zeroinitializer, [2 x i8] zeroinitializer, [2 x i8] zeroinitializer, [2 x i8] zeroinitializer, [2 x i8] zeroinitializer, [2 x i8] zeroinitializer, [2 x i8] zeroinitializer, [2 x i8] zeroinitializer, [2 x i8] zeroinitializer, [2 x i8] zeroinitializer, [2 x i8] zeroinitializer, [2 x i8] zeroinitializer, [2 x i8] zeroinitializer, [2 x i8] zeroinitializer, [2 x i8] zeroinitializer, [2 x i8] zeroinitializer, [2 x i8] zeroinitializer], [48 x [2 x i8]] [[2 x i8] c"\03\00", [2 x i8] c"\1D\02", [2 x i8] c"\1E\03", [2 x i8] c"\11\07", [2 x i8] c"\1F\04", [2 x i8] c"\12\08", [2 x i8] c"%\11", [2 x i8] c"\08\0D", [2 x i8] c" \05", [2 x i8] c"&\12", [2 x i8] c"\13\09", [2 x i8] c"\09\0E", [2 x i8] c"\14\0A", [2 x i8] c"\0A\0F", [2 x i8] c"\0B\10", [2 x i8] c"\02\0B", [2 x i8] c"\10\01", [2 x i8] c"! ", [2 x i8] c"\22!", [2 x i8] c"\15$", [2 x i8] c"#\22", [2 x i8] c"\16%", [2 x i8] c"',", [2 x i8] c"\04(", [2 x i8] c"$#", [2 x i8] c"(-", [2 x i8] c"\17&", [2 x i8] c"\05)", [2 x i8] c"\18'", [2 x i8] c"\06*", [2 x i8] c"\07+", [2 x i8] c"\01\13", [2 x i8] c")\06", [2 x i8] c"*\18", [2 x i8] c"+\19", [2 x i8] c"\19\14", [2 x i8] c",\1A", [2 x i8] c"\1A\15", [2 x i8] c"..", [2 x i8] c"\0C\1C", [2 x i8] c"-\1B", [2 x i8] c"//", [2 x i8] c"\1B\16", [2 x i8] c"\0D\1D", [2 x i8] c"\1C\17", [2 x i8] c"\0E\1E", [2 x i8] c"\0F\1F", [2 x i8] c"\00\0C"]], align 16
@subblk_offset_x = constant [3 x [8 x [4 x i8]]] [[8 x [4 x i8]] [[4 x i8] c"\00\04\00\04", [4 x i8] c"\00\04\00\04", [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer], [8 x [4 x i8]] [[4 x i8] c"\00\04\00\04", [4 x i8] c"\00\04\00\04", [4 x i8] c"\00\04\00\04", [4 x i8] c"\00\04\00\04", [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer], [8 x [4 x i8]] [[4 x i8] c"\00\04\00\04", [4 x i8] c"\08\0C\08\0C", [4 x i8] c"\00\04\00\04", [4 x i8] c"\08\0C\08\0C", [4 x i8] c"\00\04\00\04", [4 x i8] c"\08\0C\08\0C", [4 x i8] c"\00\04\00\04", [4 x i8] c"\08\0C\08\0C"]], align 16
@subblk_offset_y = constant [3 x [8 x [4 x i8]]] [[8 x [4 x i8]] [[4 x i8] c"\00\00\04\04", [4 x i8] c"\00\00\04\04", [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer], [8 x [4 x i8]] [[4 x i8] c"\00\00\04\04", [4 x i8] c"\08\08\0C\0C", [4 x i8] c"\00\00\04\04", [4 x i8] c"\08\08\0C\0C", [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer], [8 x [4 x i8]] [[4 x i8] c"\00\00\04\04", [4 x i8] c"\00\00\04\04", [4 x i8] c"\08\08\0C\0C", [4 x i8] c"\08\08\0C\0C", [4 x i8] c"\00\00\04\04", [4 x i8] c"\00\00\04\04", [4 x i8] c"\08\08\0C\0C", [4 x i8] c"\08\08\0C\0C"]], align 16
@img = external global %struct.ImageParameters*, align 8
@imgY_org_bot = external global i16**, align 8
@imgY_org_top = external global i16**, align 8
@imgY_org = external global i16**, align 8
@imgUV_org_bot = external global i16***, align 8
@imgUV_org_top = external global i16***, align 8
@imgUV_org = external global i16***, align 8
@imgY_org_frm = external global i16**, align 8
@imgUV_org_frm = external global i16***, align 8
@stats = external global %struct.StatParameters*, align 8
@input = external global %struct.InputParameters*, align 8
@enc_picture = external global %struct.storable_picture*, align 8
@DELTA_QP2 = external global i32, align 4
@DELTA_QP = external global i32, align 4
@QP2 = external global i32, align 4
@QP = external global i32, align 4
@active_sps = external global %struct.seq_parameter_set_rbsp_t*, align 8
@dq = common global i32 0, align 4
@predict_error = common global i32 0, align 4
@active_pps = external global %struct.pic_parameter_set_rbsp_t*, align 8
@assignSE2partition = external global [2 x i32*], align 16
@terminate_macroblock.skip = internal global i32 0, align 4
@errortext = external global [300 x i8], align 16
@.str = private unnamed_addr constant [28 x i8] c"Slice Mode %d not supported\00", align 1
@LumaPrediction4x4.fw_pred = internal global [16 x i32] zeroinitializer, align 16
@LumaPrediction4x4.bw_pred = internal global [16 x i32] zeroinitializer, align 16
@listX = external global [6 x %struct.storable_picture**], align 16
@wbp_weight = external global i32****, align 8
@wp_luma_round = external global i32, align 4
@luma_log_weight_denom = external global i32, align 4
@wp_offset = external global i32***, align 8
@wp_weight = external global i32***, align 8
@LumaPrediction4x4Bi.fw_pred = internal global [16 x i32] zeroinitializer, align 16
@LumaPrediction4x4Bi.bw_pred = internal global [16 x i32] zeroinitializer, align 16
@mprRGB = external global [3 x [16 x [16 x i32]]], align 16
@resTrans_R = external global [16 x [16 x i32]], align 16
@resTrans_B = external global [16 x [16 x i32]], align 16
@resTrans_G = external global [16 x [16 x i32]], align 16
@rec_resG = external global [16 x [16 x i32]], align 16
@ChromaPrediction4x4.fw_pred = internal global [16 x i32] zeroinitializer, align 16
@ChromaPrediction4x4.bw_pred = internal global [16 x i32] zeroinitializer, align 16
@wp_chroma_round = external global i32, align 4
@chroma_log_weight_denom = external global i32, align 4
@ChromaResidualCoding.block8x8_idx = private unnamed_addr constant [3 x [4 x [4 x i32]]] [[4 x [4 x i32]] [[4 x i32] [i32 0, i32 1, i32 0, i32 0], [4 x i32] [i32 2, i32 3, i32 0, i32 0], [4 x i32] zeroinitializer, [4 x i32] zeroinitializer], [4 x [4 x i32]] [[4 x i32] [i32 0, i32 1, i32 0, i32 0], [4 x i32] [i32 0, i32 1, i32 0, i32 0], [4 x i32] [i32 2, i32 3, i32 0, i32 0], [4 x i32] [i32 2, i32 3, i32 0, i32 0]], [4 x [4 x i32]] [[4 x i32] [i32 0, i32 0, i32 1, i32 1], [4 x i32] [i32 0, i32 0, i32 1, i32 1], [4 x i32] [i32 2, i32 2, i32 3, i32 3], [4 x i32] [i32 2, i32 2, i32 3, i32 3]]], align 16
@rec_resR = external global [16 x [16 x i32]], align 16
@rec_resB = external global [16 x [16 x i32]], align 16
@IntraChromaPrediction.block_pos = private unnamed_addr constant [3 x [4 x [4 x i32]]] [[4 x [4 x i32]] [[4 x i32] [i32 0, i32 1, i32 2, i32 3], [4 x i32] zeroinitializer, [4 x i32] zeroinitializer, [4 x i32] zeroinitializer], [4 x [4 x i32]] [[4 x i32] [i32 0, i32 1, i32 2, i32 3], [4 x i32] [i32 2, i32 3, i32 2, i32 3], [4 x i32] zeroinitializer, [4 x i32] zeroinitializer], [4 x [4 x i32]] [[4 x i32] [i32 0, i32 1, i32 2, i32 3], [4 x i32] [i32 1, i32 1, i32 3, i32 3], [4 x i32] [i32 2, i32 3, i32 2, i32 3], [4 x i32] [i32 3, i32 3, i32 3, i32 3]]], align 16
@MBType2Value.dir1offset = internal constant [3 x i32] [i32 1, i32 2, i32 3], align 4
@MBType2Value.dir2offset = internal constant [3 x [3 x i32]] [[3 x i32] [i32 0, i32 4, i32 8], [3 x i32] [i32 6, i32 2, i32 10], [3 x i32] [i32 12, i32 14, i32 16]], align 16
@B8Mode2Value.b8start = internal constant [8 x i32] [i32 0, i32 0, i32 0, i32 0, i32 1, i32 4, i32 5, i32 10], align 16
@B8Mode2Value.b8inc = internal constant [8 x i32] [i32 0, i32 0, i32 0, i32 0, i32 1, i32 2, i32 2, i32 1], align 16
@last_dquant = external global i32, align 4
@intras = external global i32, align 4
@cabac_encoding = external global i32, align 4
@listXsize = external global [6 x i32], align 16
@writeChromaCoeff.chroma_dc_context = private unnamed_addr constant [3 x i32] [i32 6, i32 8, i32 9], align 4
@writeChromaCoeff.chroma_ac_param = internal global [3 x [8 x [4 x i8]]] [[8 x [4 x i8]] [[4 x i8] c"\04\14\05\15", [4 x i8] c"$4%5", [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer], [8 x [4 x i8]] [[4 x i8] c"\04\14\05\15", [4 x i8] c"\06\16\07\17", [4 x i8] c"$4%5", [4 x i8] c"&6'7", [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer], [8 x [4 x i8]] [[4 x i8] c"\04\14\05\15", [4 x i8] c"$4%5", [4 x i8] c"\06\16\07\17", [4 x i8] c"&6'7", [4 x i8] c"\08\18\09\19", [4 x i8] c"(8)9", [4 x i8] c"\0A\1A\0B\1B", [4 x i8] c"*:+;"]], align 16
@predict_nnz_chroma.j_off_tab = private unnamed_addr constant [12 x i32] [i32 0, i32 0, i32 0, i32 0, i32 4, i32 4, i32 4, i32 4, i32 8, i32 8, i32 8, i32 8], align 16
@writeCoeff4x4_CAVLC.incVlc = private unnamed_addr constant [7 x i32] [i32 0, i32 3, i32 6, i32 12, i32 24, i32 48, i32 32768], align 16
@.str.1 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"Luma\00", align 1
@.str.3 = private unnamed_addr constant [8 x i8] c"Lum16DC\00", align 1
@.str.4 = private unnamed_addr constant [8 x i8] c"Lum16AC\00", align 1
@.str.5 = private unnamed_addr constant [6 x i8] c"ChrDC\00", align 1
@.str.6 = private unnamed_addr constant [6 x i8] c"ChrAC\00", align 1
@.str.7 = private unnamed_addr constant [40 x i8] c"writeCoeff4x4_CAVLC: Invalid block type\00", align 1
@.str.8 = private unnamed_addr constant [18 x i8] c"ERROR: level > 1\0A\00", align 1

; Function Attrs: nounwind uwtable
define void @set_MB_parameters(i32 %mb_addr) #0 {
entry:
  %mb_addr.addr = alloca i32, align 4
  store i32 %mb_addr, i32* %mb_addr.addr, align 4
  %0 = load i32, i32* %mb_addr.addr, align 4
  %1 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1, i32 0, i32 3
  store i32 %0, i32* %current_mb_nr, align 4
  %2 = load i32, i32* %mb_addr.addr, align 4
  %3 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_x = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %3, i32 0, i32 29
  %4 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_y = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %4, i32 0, i32 30
  call void @get_mb_block_pos(i32 %2, i32* %mb_x, i32* %mb_y)
  %5 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_x1 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %5, i32 0, i32 29
  %6 = load i32, i32* %mb_x1, align 4
  %shl = shl i32 %6, 2
  %7 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %block_x = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %7, i32 0, i32 31
  store i32 %shl, i32* %block_x, align 4
  %8 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_y2 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %8, i32 0, i32 30
  %9 = load i32, i32* %mb_y2, align 4
  %shl3 = shl i32 %9, 2
  %10 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %block_y = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %10, i32 0, i32 32
  store i32 %shl3, i32* %block_y, align 4
  %11 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %block_x4 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %11, i32 0, i32 31
  %12 = load i32, i32* %block_x4, align 4
  %shl5 = shl i32 %12, 2
  %13 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %13, i32 0, i32 33
  store i32 %shl5, i32* %pix_x, align 4
  %14 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %block_y6 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %14, i32 0, i32 32
  %15 = load i32, i32* %block_y6, align 4
  %shl7 = shl i32 %15, 2
  %16 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %16, i32 0, i32 34
  store i32 %shl7, i32* %pix_y, align 4
  %17 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x8 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %17, i32 0, i32 33
  %18 = load i32, i32* %pix_x8, align 4
  %19 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %opix_x = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %19, i32 0, i32 37
  store i32 %18, i32* %opix_x, align 4
  %20 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %MbaffFrameFlag = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %20, i32 0, i32 90
  %21 = load i32, i32* %MbaffFrameFlag, align 4
  %tobool = icmp ne i32 %21, 0
  br i1 %tobool, label %if.then, label %if.else.23

if.then:                                          ; preds = %entry
  %22 = load i32, i32* %mb_addr.addr, align 4
  %idxprom = sext i32 %22 to i64
  %23 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %23, i32 0, i32 51
  %24 = load %struct.macroblock*, %struct.macroblock** %mb_data, align 8
  %arrayidx = getelementptr inbounds %struct.macroblock, %struct.macroblock* %24, i64 %idxprom
  %mb_field = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx, i32 0, i32 22
  %25 = load i32, i32* %mb_field, align 4
  %tobool9 = icmp ne i32 %25, 0
  br i1 %tobool9, label %if.then.10, label %if.else

if.then.10:                                       ; preds = %if.then
  %26 = load i32, i32* %mb_addr.addr, align 4
  %rem = srem i32 %26, 2
  %tobool11 = icmp ne i32 %rem, 0
  br i1 %tobool11, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then.10
  %27 = load i16**, i16*** @imgY_org_bot, align 8
  br label %cond.end

cond.false:                                       ; preds = %if.then.10
  %28 = load i16**, i16*** @imgY_org_top, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i16** [ %27, %cond.true ], [ %28, %cond.false ]
  store i16** %cond, i16*** @imgY_org, align 8
  %29 = load i32, i32* %mb_addr.addr, align 4
  %rem12 = srem i32 %29, 2
  %tobool13 = icmp ne i32 %rem12, 0
  br i1 %tobool13, label %cond.true.14, label %cond.false.15

cond.true.14:                                     ; preds = %cond.end
  %30 = load i16***, i16**** @imgUV_org_bot, align 8
  br label %cond.end.16

cond.false.15:                                    ; preds = %cond.end
  %31 = load i16***, i16**** @imgUV_org_top, align 8
  br label %cond.end.16

cond.end.16:                                      ; preds = %cond.false.15, %cond.true.14
  %cond17 = phi i16*** [ %30, %cond.true.14 ], [ %31, %cond.false.15 ]
  store i16*** %cond17, i16**** @imgUV_org, align 8
  %32 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_y18 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %32, i32 0, i32 30
  %33 = load i32, i32* %mb_y18, align 4
  %shr = ashr i32 %33, 1
  %shl19 = shl i32 %shr, 4
  %34 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %opix_y = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %34, i32 0, i32 38
  store i32 %shl19, i32* %opix_y, align 4
  br label %if.end

if.else:                                          ; preds = %if.then
  %35 = load i16**, i16*** @imgY_org_frm, align 8
  store i16** %35, i16*** @imgY_org, align 8
  %36 = load i16***, i16**** @imgUV_org_frm, align 8
  store i16*** %36, i16**** @imgUV_org, align 8
  %37 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %block_y20 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %37, i32 0, i32 32
  %38 = load i32, i32* %block_y20, align 4
  %shl21 = shl i32 %38, 2
  %39 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %opix_y22 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %39, i32 0, i32 38
  store i32 %shl21, i32* %opix_y22, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %cond.end.16
  br label %if.end.27

if.else.23:                                       ; preds = %entry
  %40 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %block_y24 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %40, i32 0, i32 32
  %41 = load i32, i32* %block_y24, align 4
  %shl25 = shl i32 %41, 2
  %42 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %opix_y26 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %42, i32 0, i32 38
  store i32 %shl25, i32* %opix_y26, align 4
  br label %if.end.27

if.end.27:                                        ; preds = %if.else.23, %if.end
  %43 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %yuv_format = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %43, i32 0, i32 159
  %44 = load i32, i32* %yuv_format, align 4
  %cmp = icmp ne i32 %44, 0
  br i1 %cmp, label %if.then.28, label %if.end.42

if.then.28:                                       ; preds = %if.end.27
  %45 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x29 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %45, i32 0, i32 33
  %46 = load i32, i32* %pix_x29, align 4
  %47 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_cr_size_x = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %47, i32 0, i32 161
  %48 = load i32, i32* %mb_cr_size_x, align 4
  %div = sdiv i32 16, %48
  %div30 = sdiv i32 %46, %div
  %49 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_c_x = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %49, i32 0, i32 35
  store i32 %div30, i32* %pix_c_x, align 4
  %50 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y31 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %50, i32 0, i32 34
  %51 = load i32, i32* %pix_y31, align 4
  %52 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_cr_size_y = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %52, i32 0, i32 162
  %53 = load i32, i32* %mb_cr_size_y, align 4
  %div32 = sdiv i32 16, %53
  %div33 = sdiv i32 %51, %div32
  %54 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_c_y = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %54, i32 0, i32 36
  store i32 %div33, i32* %pix_c_y, align 4
  %55 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %opix_x34 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %55, i32 0, i32 37
  %56 = load i32, i32* %opix_x34, align 4
  %57 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_cr_size_x35 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %57, i32 0, i32 161
  %58 = load i32, i32* %mb_cr_size_x35, align 4
  %div36 = sdiv i32 16, %58
  %div37 = sdiv i32 %56, %div36
  %59 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %opix_c_x = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %59, i32 0, i32 39
  store i32 %div37, i32* %opix_c_x, align 4
  %60 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %opix_y38 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %60, i32 0, i32 38
  %61 = load i32, i32* %opix_y38, align 4
  %62 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_cr_size_y39 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %62, i32 0, i32 162
  %63 = load i32, i32* %mb_cr_size_y39, align 4
  %div40 = sdiv i32 16, %63
  %div41 = sdiv i32 %61, %div40
  %64 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %opix_c_y = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %64, i32 0, i32 40
  store i32 %div41, i32* %opix_c_y, align 4
  br label %if.end.42

if.end.42:                                        ; preds = %if.then.28, %if.end.27
  ret void
}

declare void @get_mb_block_pos(i32, i32*, i32*) #1

; Function Attrs: nounwind uwtable
define i32 @clip1a(i32 %a) #0 {
entry:
  %a.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  %0 = load i32, i32* %a.addr, align 4
  %1 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1, i32 0, i32 155
  %2 = load i32, i32* %max_imgpel_value, align 4
  %cmp = icmp sgt i32 %0, %2
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %3 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value1 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %3, i32 0, i32 155
  %4 = load i32, i32* %max_imgpel_value1, align 4
  br label %cond.end.5

cond.false:                                       ; preds = %entry
  %5 = load i32, i32* %a.addr, align 4
  %cmp2 = icmp slt i32 %5, 0
  br i1 %cmp2, label %cond.true.3, label %cond.false.4

cond.true.3:                                      ; preds = %cond.false
  br label %cond.end

cond.false.4:                                     ; preds = %cond.false
  %6 = load i32, i32* %a.addr, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false.4, %cond.true.3
  %cond = phi i32 [ 0, %cond.true.3 ], [ %6, %cond.false.4 ]
  br label %cond.end.5

cond.end.5:                                       ; preds = %cond.end, %cond.true
  %cond6 = phi i32 [ %4, %cond.true ], [ %cond, %cond.end ]
  ret i32 %cond6
}

; Function Attrs: nounwind uwtable
define i32 @clip1a_chr(i32 %a) #0 {
entry:
  %a.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  %0 = load i32, i32* %a.addr, align 4
  %1 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value_uv = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1, i32 0, i32 156
  %2 = load i32, i32* %max_imgpel_value_uv, align 4
  %cmp = icmp sgt i32 %0, %2
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %3 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value_uv1 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %3, i32 0, i32 156
  %4 = load i32, i32* %max_imgpel_value_uv1, align 4
  br label %cond.end.5

cond.false:                                       ; preds = %entry
  %5 = load i32, i32* %a.addr, align 4
  %cmp2 = icmp slt i32 %5, 0
  br i1 %cmp2, label %cond.true.3, label %cond.false.4

cond.true.3:                                      ; preds = %cond.false
  br label %cond.end

cond.false.4:                                     ; preds = %cond.false
  %6 = load i32, i32* %a.addr, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false.4, %cond.true.3
  %cond = phi i32 [ 0, %cond.true.3 ], [ %6, %cond.false.4 ]
  br label %cond.end.5

cond.end.5:                                       ; preds = %cond.end, %cond.true
  %cond6 = phi i32 [ %4, %cond.true ], [ %cond, %cond.end ]
  ret i32 %cond6
}

; Function Attrs: nounwind uwtable
define void @proceed2nextMacroblock() #0 {
entry:
  %currMB = alloca %struct.macroblock*, align 8
  %bitCount = alloca i32*, align 8
  %i = alloca i32, align 4
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i32 0, i32 3
  %1 = load i32, i32* %current_mb_nr, align 4
  %idxprom = sext i32 %1 to i64
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 51
  %3 = load %struct.macroblock*, %struct.macroblock** %mb_data, align 8
  %arrayidx = getelementptr inbounds %struct.macroblock, %struct.macroblock* %3, i64 %idxprom
  store %struct.macroblock* %arrayidx, %struct.macroblock** %currMB, align 8
  %4 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %bitcounter = getelementptr inbounds %struct.macroblock, %struct.macroblock* %4, i32 0, i32 5
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %bitcounter, i32 0, i32 0
  store i32* %arraydecay, i32** %bitCount, align 8
  %5 = load i32*, i32** %bitCount, align 8
  %arrayidx1 = getelementptr inbounds i32, i32* %5, i64 2
  %6 = load i32, i32* %arrayidx1, align 4
  %7 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %7, i32 0, i32 6
  %8 = load i32, i32* %type, align 4
  %idxprom2 = sext i32 %8 to i64
  %9 = load %struct.StatParameters*, %struct.StatParameters** @stats, align 8
  %bit_use_mb_type = getelementptr inbounds %struct.StatParameters, %struct.StatParameters* %9, i32 0, i32 23
  %arrayidx3 = getelementptr inbounds [5 x i32], [5 x i32]* %bit_use_mb_type, i32 0, i64 %idxprom2
  %10 = load i32, i32* %arrayidx3, align 4
  %add = add nsw i32 %10, %6
  store i32 %add, i32* %arrayidx3, align 4
  %11 = load i32*, i32** %bitCount, align 8
  %arrayidx4 = getelementptr inbounds i32, i32* %11, i64 5
  %12 = load i32, i32* %arrayidx4, align 4
  %13 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type5 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %13, i32 0, i32 6
  %14 = load i32, i32* %type5, align 4
  %idxprom6 = sext i32 %14 to i64
  %15 = load %struct.StatParameters*, %struct.StatParameters** @stats, align 8
  %bit_use_coeffY = getelementptr inbounds %struct.StatParameters, %struct.StatParameters* %15, i32 0, i32 26
  %arrayidx7 = getelementptr inbounds [5 x i32], [5 x i32]* %bit_use_coeffY, i32 0, i64 %idxprom6
  %16 = load i32, i32* %arrayidx7, align 4
  %add8 = add nsw i32 %16, %12
  store i32 %add8, i32* %arrayidx7, align 4
  %17 = load i32*, i32** %bitCount, align 8
  %arrayidx9 = getelementptr inbounds i32, i32* %17, i64 4
  %18 = load i32, i32* %arrayidx9, align 4
  %19 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type10 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %19, i32 0, i32 6
  %20 = load i32, i32* %type10, align 4
  %idxprom11 = sext i32 %20 to i64
  %21 = load %struct.StatParameters*, %struct.StatParameters** @stats, align 8
  %tmp_bit_use_cbp = getelementptr inbounds %struct.StatParameters, %struct.StatParameters* %21, i32 0, i32 25
  %arrayidx12 = getelementptr inbounds [5 x i32], [5 x i32]* %tmp_bit_use_cbp, i32 0, i64 %idxprom11
  %22 = load i32, i32* %arrayidx12, align 4
  %add13 = add nsw i32 %22, %18
  store i32 %add13, i32* %arrayidx12, align 4
  %23 = load i32*, i32** %bitCount, align 8
  %arrayidx14 = getelementptr inbounds i32, i32* %23, i64 6
  %24 = load i32, i32* %arrayidx14, align 4
  %25 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type15 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %25, i32 0, i32 6
  %26 = load i32, i32* %type15, align 4
  %idxprom16 = sext i32 %26 to i64
  %27 = load %struct.StatParameters*, %struct.StatParameters** @stats, align 8
  %bit_use_coeffC = getelementptr inbounds %struct.StatParameters, %struct.StatParameters* %27, i32 0, i32 27
  %arrayidx17 = getelementptr inbounds [5 x i32], [5 x i32]* %bit_use_coeffC, i32 0, i64 %idxprom16
  %28 = load i32, i32* %arrayidx17, align 4
  %add18 = add nsw i32 %28, %24
  store i32 %add18, i32* %arrayidx17, align 4
  %29 = load i32*, i32** %bitCount, align 8
  %arrayidx19 = getelementptr inbounds i32, i32* %29, i64 7
  %30 = load i32, i32* %arrayidx19, align 4
  %31 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type20 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %31, i32 0, i32 6
  %32 = load i32, i32* %type20, align 4
  %idxprom21 = sext i32 %32 to i64
  %33 = load %struct.StatParameters*, %struct.StatParameters** @stats, align 8
  %bit_use_delta_quant = getelementptr inbounds %struct.StatParameters, %struct.StatParameters* %33, i32 0, i32 28
  %arrayidx22 = getelementptr inbounds [5 x i32], [5 x i32]* %bit_use_delta_quant, i32 0, i64 %idxprom21
  %34 = load i32, i32* %arrayidx22, align 4
  %add23 = add nsw i32 %34, %30
  store i32 %add23, i32* %arrayidx22, align 4
  %35 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type = getelementptr inbounds %struct.macroblock, %struct.macroblock* %35, i32 0, i32 8
  %36 = load i32, i32* %mb_type, align 4
  %cmp = icmp eq i32 %36, 9
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %37 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type24 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %37, i32 0, i32 8
  %38 = load i32, i32* %mb_type24, align 4
  %cmp25 = icmp eq i32 %38, 10
  br i1 %cmp25, label %if.then, label %lor.lhs.false.26

lor.lhs.false.26:                                 ; preds = %lor.lhs.false
  %39 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type27 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %39, i32 0, i32 8
  %40 = load i32, i32* %mb_type27, align 4
  %cmp28 = icmp eq i32 %40, 13
  br i1 %cmp28, label %if.then, label %if.end.49

if.then:                                          ; preds = %lor.lhs.false.26, %lor.lhs.false, %entry
  %41 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %c_ipred_mode = getelementptr inbounds %struct.macroblock, %struct.macroblock* %41, i32 0, i32 20
  %42 = load i32, i32* %c_ipred_mode, align 4
  %idxprom29 = sext i32 %42 to i64
  %43 = load %struct.StatParameters*, %struct.StatParameters** @stats, align 8
  %intra_chroma_mode = getelementptr inbounds %struct.StatParameters, %struct.StatParameters* %43, i32 0, i32 11
  %arrayidx30 = getelementptr inbounds [4 x i32], [4 x i32]* %intra_chroma_mode, i32 0, i64 %idxprom29
  %44 = load i32, i32* %arrayidx30, align 4
  %inc = add nsw i32 %44, 1
  store i32 %inc, i32* %arrayidx30, align 4
  %45 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %cbp = getelementptr inbounds %struct.macroblock, %struct.macroblock* %45, i32 0, i32 12
  %46 = load i32, i32* %cbp, align 4
  %and = and i32 %46, 15
  %cmp31 = icmp ne i32 %and, 0
  br i1 %cmp31, label %if.then.32, label %if.end.48

if.then.32:                                       ; preds = %if.then
  %47 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %luma_transform_size_8x8_flag = getelementptr inbounds %struct.macroblock, %struct.macroblock* %47, i32 0, i32 32
  %48 = load i32, i32* %luma_transform_size_8x8_flag, align 4
  %tobool = icmp ne i32 %48, 0
  br i1 %tobool, label %if.then.33, label %if.else

if.then.33:                                       ; preds = %if.then.32
  %49 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type34 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %49, i32 0, i32 8
  %50 = load i32, i32* %mb_type34, align 4
  %idxprom35 = sext i32 %50 to i64
  %51 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type36 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %51, i32 0, i32 6
  %52 = load i32, i32* %type36, align 4
  %idxprom37 = sext i32 %52 to i64
  %53 = load %struct.StatParameters*, %struct.StatParameters** @stats, align 8
  %mode_use_transform_8x8 = getelementptr inbounds %struct.StatParameters, %struct.StatParameters* %53, i32 0, i32 9
  %arrayidx38 = getelementptr inbounds [5 x [15 x i32]], [5 x [15 x i32]]* %mode_use_transform_8x8, i32 0, i64 %idxprom37
  %arrayidx39 = getelementptr inbounds [15 x i32], [15 x i32]* %arrayidx38, i32 0, i64 %idxprom35
  %54 = load i32, i32* %arrayidx39, align 4
  %inc40 = add nsw i32 %54, 1
  store i32 %inc40, i32* %arrayidx39, align 4
  br label %if.end

if.else:                                          ; preds = %if.then.32
  %55 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type41 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %55, i32 0, i32 8
  %56 = load i32, i32* %mb_type41, align 4
  %idxprom42 = sext i32 %56 to i64
  %57 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type43 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %57, i32 0, i32 6
  %58 = load i32, i32* %type43, align 4
  %idxprom44 = sext i32 %58 to i64
  %59 = load %struct.StatParameters*, %struct.StatParameters** @stats, align 8
  %mode_use_transform_4x4 = getelementptr inbounds %struct.StatParameters, %struct.StatParameters* %59, i32 0, i32 10
  %arrayidx45 = getelementptr inbounds [5 x [15 x i32]], [5 x [15 x i32]]* %mode_use_transform_4x4, i32 0, i64 %idxprom44
  %arrayidx46 = getelementptr inbounds [15 x i32], [15 x i32]* %arrayidx45, i32 0, i64 %idxprom42
  %60 = load i32, i32* %arrayidx46, align 4
  %inc47 = add nsw i32 %60, 1
  store i32 %inc47, i32* %arrayidx46, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.33
  br label %if.end.48

if.end.48:                                        ; preds = %if.end, %if.then
  br label %if.end.49

if.end.49:                                        ; preds = %if.end.48, %lor.lhs.false.26
  %61 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type50 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %61, i32 0, i32 8
  %62 = load i32, i32* %mb_type50, align 4
  %idxprom51 = sext i32 %62 to i64
  %63 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type52 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %63, i32 0, i32 6
  %64 = load i32, i32* %type52, align 4
  %idxprom53 = sext i32 %64 to i64
  %65 = load %struct.StatParameters*, %struct.StatParameters** @stats, align 8
  %mode_use = getelementptr inbounds %struct.StatParameters, %struct.StatParameters* %65, i32 0, i32 20
  %arrayidx54 = getelementptr inbounds [5 x [15 x i32]], [5 x [15 x i32]]* %mode_use, i32 0, i64 %idxprom53
  %arrayidx55 = getelementptr inbounds [15 x i32], [15 x i32]* %arrayidx54, i32 0, i64 %idxprom51
  %66 = load i32, i32* %arrayidx55, align 4
  %inc56 = add nsw i32 %66, 1
  store i32 %inc56, i32* %arrayidx55, align 4
  %67 = load i32*, i32** %bitCount, align 8
  %arrayidx57 = getelementptr inbounds i32, i32* %67, i64 3
  %68 = load i32, i32* %arrayidx57, align 4
  %69 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type58 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %69, i32 0, i32 8
  %70 = load i32, i32* %mb_type58, align 4
  %idxprom59 = sext i32 %70 to i64
  %71 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type60 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %71, i32 0, i32 6
  %72 = load i32, i32* %type60, align 4
  %idxprom61 = sext i32 %72 to i64
  %73 = load %struct.StatParameters*, %struct.StatParameters** @stats, align 8
  %bit_use_mode = getelementptr inbounds %struct.StatParameters, %struct.StatParameters* %73, i32 0, i32 21
  %arrayidx62 = getelementptr inbounds [5 x [15 x i32]], [5 x [15 x i32]]* %bit_use_mode, i32 0, i64 %idxprom61
  %arrayidx63 = getelementptr inbounds [15 x i32], [15 x i32]* %arrayidx62, i32 0, i64 %idxprom59
  %74 = load i32, i32* %arrayidx63, align 4
  %add64 = add nsw i32 %74, %68
  store i32 %add64, i32* %arrayidx63, align 4
  %75 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type65 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %75, i32 0, i32 6
  %76 = load i32, i32* %type65, align 4
  %cmp66 = icmp ne i32 %76, 2
  br i1 %cmp66, label %if.then.67, label %if.end.158

if.then.67:                                       ; preds = %if.end.49
  %77 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type68 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %77, i32 0, i32 8
  %78 = load i32, i32* %mb_type68, align 4
  %cmp69 = icmp eq i32 %78, 8
  br i1 %cmp69, label %if.then.70, label %if.else.124

if.then.70:                                       ; preds = %if.then.67
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then.70
  %79 = load i32, i32* %i, align 4
  %cmp71 = icmp slt i32 %79, 4
  br i1 %cmp71, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %80 = load i32, i32* %i, align 4
  %idxprom72 = sext i32 %80 to i64
  %81 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %b8mode = getelementptr inbounds %struct.macroblock, %struct.macroblock* %81, i32 0, i32 14
  %arrayidx73 = getelementptr inbounds [4 x i32], [4 x i32]* %b8mode, i32 0, i64 %idxprom72
  %82 = load i32, i32* %arrayidx73, align 4
  %cmp74 = icmp sgt i32 %82, 0
  br i1 %cmp74, label %if.then.75, label %if.else.86

if.then.75:                                       ; preds = %for.body
  %83 = load i32, i32* %i, align 4
  %idxprom76 = sext i32 %83 to i64
  %84 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %b8mode77 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %84, i32 0, i32 14
  %arrayidx78 = getelementptr inbounds [4 x i32], [4 x i32]* %b8mode77, i32 0, i64 %idxprom76
  %85 = load i32, i32* %arrayidx78, align 4
  %idxprom79 = sext i32 %85 to i64
  %86 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type80 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %86, i32 0, i32 6
  %87 = load i32, i32* %type80, align 4
  %idxprom81 = sext i32 %87 to i64
  %88 = load %struct.StatParameters*, %struct.StatParameters** @stats, align 8
  %mode_use82 = getelementptr inbounds %struct.StatParameters, %struct.StatParameters* %88, i32 0, i32 20
  %arrayidx83 = getelementptr inbounds [5 x [15 x i32]], [5 x [15 x i32]]* %mode_use82, i32 0, i64 %idxprom81
  %arrayidx84 = getelementptr inbounds [15 x i32], [15 x i32]* %arrayidx83, i32 0, i64 %idxprom79
  %89 = load i32, i32* %arrayidx84, align 4
  %inc85 = add nsw i32 %89, 1
  store i32 %inc85, i32* %arrayidx84, align 4
  br label %if.end.94

if.else.86:                                       ; preds = %for.body
  %90 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %luma_transform_size_8x8_flag87 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %90, i32 0, i32 32
  %91 = load i32, i32* %luma_transform_size_8x8_flag87, align 4
  %idxprom88 = sext i32 %91 to i64
  %92 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type89 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %92, i32 0, i32 6
  %93 = load i32, i32* %type89, align 4
  %idxprom90 = sext i32 %93 to i64
  %94 = load %struct.StatParameters*, %struct.StatParameters** @stats, align 8
  %b8_mode_0_use = getelementptr inbounds %struct.StatParameters, %struct.StatParameters* %94, i32 0, i32 8
  %arrayidx91 = getelementptr inbounds [5 x [2 x i32]], [5 x [2 x i32]]* %b8_mode_0_use, i32 0, i64 %idxprom90
  %arrayidx92 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx91, i32 0, i64 %idxprom88
  %95 = load i32, i32* %arrayidx92, align 4
  %inc93 = add nsw i32 %95, 1
  store i32 %inc93, i32* %arrayidx92, align 4
  br label %if.end.94

if.end.94:                                        ; preds = %if.else.86, %if.then.75
  %96 = load i32, i32* %i, align 4
  %idxprom95 = sext i32 %96 to i64
  %97 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %b8mode96 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %97, i32 0, i32 14
  %arrayidx97 = getelementptr inbounds [4 x i32], [4 x i32]* %b8mode96, i32 0, i64 %idxprom95
  %98 = load i32, i32* %arrayidx97, align 4
  %cmp98 = icmp eq i32 %98, 4
  br i1 %cmp98, label %if.then.99, label %if.end.122

if.then.99:                                       ; preds = %if.end.94
  %99 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %luma_transform_size_8x8_flag100 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %99, i32 0, i32 32
  %100 = load i32, i32* %luma_transform_size_8x8_flag100, align 4
  %tobool101 = icmp ne i32 %100, 0
  br i1 %tobool101, label %land.lhs.true, label %lor.lhs.false.105

land.lhs.true:                                    ; preds = %if.then.99
  %101 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %cbp102 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %101, i32 0, i32 12
  %102 = load i32, i32* %cbp102, align 4
  %and103 = and i32 %102, 15
  %cmp104 = icmp ne i32 %and103, 0
  br i1 %cmp104, label %if.then.107, label %lor.lhs.false.105

lor.lhs.false.105:                                ; preds = %land.lhs.true, %if.then.99
  %103 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %AllowTransform8x8 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %103, i32 0, i32 123
  %104 = load i32, i32* %AllowTransform8x8, align 4
  %cmp106 = icmp eq i32 %104, 2
  br i1 %cmp106, label %if.then.107, label %if.else.114

if.then.107:                                      ; preds = %lor.lhs.false.105, %land.lhs.true
  %105 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type108 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %105, i32 0, i32 6
  %106 = load i32, i32* %type108, align 4
  %idxprom109 = sext i32 %106 to i64
  %107 = load %struct.StatParameters*, %struct.StatParameters** @stats, align 8
  %mode_use_transform_8x8110 = getelementptr inbounds %struct.StatParameters, %struct.StatParameters* %107, i32 0, i32 9
  %arrayidx111 = getelementptr inbounds [5 x [15 x i32]], [5 x [15 x i32]]* %mode_use_transform_8x8110, i32 0, i64 %idxprom109
  %arrayidx112 = getelementptr inbounds [15 x i32], [15 x i32]* %arrayidx111, i32 0, i64 4
  %108 = load i32, i32* %arrayidx112, align 4
  %inc113 = add nsw i32 %108, 1
  store i32 %inc113, i32* %arrayidx112, align 4
  br label %if.end.121

if.else.114:                                      ; preds = %lor.lhs.false.105
  %109 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type115 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %109, i32 0, i32 6
  %110 = load i32, i32* %type115, align 4
  %idxprom116 = sext i32 %110 to i64
  %111 = load %struct.StatParameters*, %struct.StatParameters** @stats, align 8
  %mode_use_transform_4x4117 = getelementptr inbounds %struct.StatParameters, %struct.StatParameters* %111, i32 0, i32 10
  %arrayidx118 = getelementptr inbounds [5 x [15 x i32]], [5 x [15 x i32]]* %mode_use_transform_4x4117, i32 0, i64 %idxprom116
  %arrayidx119 = getelementptr inbounds [15 x i32], [15 x i32]* %arrayidx118, i32 0, i64 4
  %112 = load i32, i32* %arrayidx119, align 4
  %inc120 = add nsw i32 %112, 1
  store i32 %inc120, i32* %arrayidx119, align 4
  br label %if.end.121

if.end.121:                                       ; preds = %if.else.114, %if.then.107
  br label %if.end.122

if.end.122:                                       ; preds = %if.end.121, %if.end.94
  br label %for.inc

for.inc:                                          ; preds = %if.end.122
  %113 = load i32, i32* %i, align 4
  %inc123 = add nsw i32 %113, 1
  store i32 %inc123, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end.157

if.else.124:                                      ; preds = %if.then.67
  %114 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type125 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %114, i32 0, i32 8
  %115 = load i32, i32* %mb_type125, align 4
  %cmp126 = icmp sge i32 %115, 0
  br i1 %cmp126, label %land.lhs.true.127, label %if.end.156

land.lhs.true.127:                                ; preds = %if.else.124
  %116 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type128 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %116, i32 0, i32 8
  %117 = load i32, i32* %mb_type128, align 4
  %cmp129 = icmp sle i32 %117, 3
  br i1 %cmp129, label %land.lhs.true.130, label %if.end.156

land.lhs.true.130:                                ; preds = %land.lhs.true.127
  %118 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %cbp131 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %118, i32 0, i32 12
  %119 = load i32, i32* %cbp131, align 4
  %and132 = and i32 %119, 15
  %cmp133 = icmp ne i32 %and132, 0
  br i1 %cmp133, label %if.then.134, label %if.end.156

if.then.134:                                      ; preds = %land.lhs.true.130
  %120 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %luma_transform_size_8x8_flag135 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %120, i32 0, i32 32
  %121 = load i32, i32* %luma_transform_size_8x8_flag135, align 4
  %tobool136 = icmp ne i32 %121, 0
  br i1 %tobool136, label %if.then.137, label %if.else.146

if.then.137:                                      ; preds = %if.then.134
  %122 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type138 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %122, i32 0, i32 8
  %123 = load i32, i32* %mb_type138, align 4
  %idxprom139 = sext i32 %123 to i64
  %124 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type140 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %124, i32 0, i32 6
  %125 = load i32, i32* %type140, align 4
  %idxprom141 = sext i32 %125 to i64
  %126 = load %struct.StatParameters*, %struct.StatParameters** @stats, align 8
  %mode_use_transform_8x8142 = getelementptr inbounds %struct.StatParameters, %struct.StatParameters* %126, i32 0, i32 9
  %arrayidx143 = getelementptr inbounds [5 x [15 x i32]], [5 x [15 x i32]]* %mode_use_transform_8x8142, i32 0, i64 %idxprom141
  %arrayidx144 = getelementptr inbounds [15 x i32], [15 x i32]* %arrayidx143, i32 0, i64 %idxprom139
  %127 = load i32, i32* %arrayidx144, align 4
  %inc145 = add nsw i32 %127, 1
  store i32 %inc145, i32* %arrayidx144, align 4
  br label %if.end.155

if.else.146:                                      ; preds = %if.then.134
  %128 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type147 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %128, i32 0, i32 8
  %129 = load i32, i32* %mb_type147, align 4
  %idxprom148 = sext i32 %129 to i64
  %130 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type149 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %130, i32 0, i32 6
  %131 = load i32, i32* %type149, align 4
  %idxprom150 = sext i32 %131 to i64
  %132 = load %struct.StatParameters*, %struct.StatParameters** @stats, align 8
  %mode_use_transform_4x4151 = getelementptr inbounds %struct.StatParameters, %struct.StatParameters* %132, i32 0, i32 10
  %arrayidx152 = getelementptr inbounds [5 x [15 x i32]], [5 x [15 x i32]]* %mode_use_transform_4x4151, i32 0, i64 %idxprom150
  %arrayidx153 = getelementptr inbounds [15 x i32], [15 x i32]* %arrayidx152, i32 0, i64 %idxprom148
  %133 = load i32, i32* %arrayidx153, align 4
  %inc154 = add nsw i32 %133, 1
  store i32 %inc154, i32* %arrayidx153, align 4
  br label %if.end.155

if.end.155:                                       ; preds = %if.else.146, %if.then.137
  br label %if.end.156

if.end.156:                                       ; preds = %if.end.155, %land.lhs.true.130, %land.lhs.true.127, %if.else.124
  br label %if.end.157

if.end.157:                                       ; preds = %if.end.156, %for.end
  br label %if.end.158

if.end.158:                                       ; preds = %if.end.157, %if.end.49
  %134 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type159 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %134, i32 0, i32 6
  %135 = load i32, i32* %type159, align 4
  %cmp160 = icmp eq i32 %135, 0
  br i1 %cmp160, label %if.then.164, label %lor.lhs.false.161

lor.lhs.false.161:                                ; preds = %if.end.158
  %136 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type162 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %136, i32 0, i32 6
  %137 = load i32, i32* %type162, align 4
  %cmp163 = icmp eq i32 %137, 3
  br i1 %cmp163, label %if.then.164, label %if.end.167

if.then.164:                                      ; preds = %lor.lhs.false.161, %if.end.158
  %138 = load %struct.StatParameters*, %struct.StatParameters** @stats, align 8
  %quant0 = getelementptr inbounds %struct.StatParameters, %struct.StatParameters* %138, i32 0, i32 0
  %139 = load i32, i32* %quant0, align 4
  %inc165 = add nsw i32 %139, 1
  store i32 %inc165, i32* %quant0, align 4
  %140 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %qp = getelementptr inbounds %struct.macroblock, %struct.macroblock* %140, i32 0, i32 3
  %141 = load i32, i32* %qp, align 4
  %142 = load %struct.StatParameters*, %struct.StatParameters** @stats, align 8
  %quant1 = getelementptr inbounds %struct.StatParameters, %struct.StatParameters* %142, i32 0, i32 1
  %143 = load i32, i32* %quant1, align 4
  %add166 = add nsw i32 %143, %141
  store i32 %add166, i32* %quant1, align 4
  br label %if.end.167

if.end.167:                                       ; preds = %if.then.164, %lor.lhs.false.161
  ret void
}

; Function Attrs: nounwind uwtable
define void @start_macroblock(i32 %mb_addr, i32 %mb_field) #0 {
entry:
  %mb_addr.addr = alloca i32, align 4
  %mb_field.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %l = alloca i32, align 4
  %use_bitstream_backing = alloca i32, align 4
  %currMB = alloca %struct.macroblock*, align 8
  %curr_slice = alloca %struct.Slice*, align 8
  %dataPart = alloca %struct.datapartition*, align 8
  %currStream = alloca %struct.Bitstream*, align 8
  %eep = alloca %struct.EncodingEnvironment*, align 8
  %max_qp_delta = alloca i32, align 4
  %min_qp_delta = alloca i32, align 4
  %prev_mb = alloca i32, align 4
  %currSlice = alloca %struct.Slice*, align 8
  %prev_mb315 = alloca i32, align 4
  store i32 %mb_addr, i32* %mb_addr.addr, align 4
  store i32 %mb_field, i32* %mb_field.addr, align 4
  %0 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %slice_mode = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %0, i32 0, i32 22
  %1 = load i32, i32* %slice_mode, align 4
  %cmp = icmp eq i32 %1, 2
  br i1 %cmp, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %entry
  %2 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %slice_mode1 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %2, i32 0, i32 22
  %3 = load i32, i32* %slice_mode1, align 4
  %cmp2 = icmp eq i32 %3, 3
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %entry
  %4 = phi i1 [ true, %entry ], [ %cmp2, %lor.rhs ]
  %lor.ext = zext i1 %4 to i32
  store i32 %lor.ext, i32* %use_bitstream_backing, align 4
  %5 = load i32, i32* %mb_addr.addr, align 4
  %idxprom = sext i32 %5 to i64
  %6 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %6, i32 0, i32 51
  %7 = load %struct.macroblock*, %struct.macroblock** %mb_data, align 8
  %arrayidx = getelementptr inbounds %struct.macroblock, %struct.macroblock* %7, i64 %idxprom
  store %struct.macroblock* %arrayidx, %struct.macroblock** %currMB, align 8
  %8 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %currentSlice = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %8, i32 0, i32 50
  %9 = load %struct.Slice*, %struct.Slice** %currentSlice, align 8
  store %struct.Slice* %9, %struct.Slice** %curr_slice, align 8
  %10 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %bitdepth_luma_qp_scale = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %10, i32 0, i32 151
  %11 = load i32, i32* %bitdepth_luma_qp_scale, align 4
  %div = sdiv i32 %11, 2
  %add = add nsw i32 25, %div
  store i32 %add, i32* %max_qp_delta, align 4
  %12 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %bitdepth_luma_qp_scale3 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %12, i32 0, i32 151
  %13 = load i32, i32* %bitdepth_luma_qp_scale3, align 4
  %div4 = sdiv i32 %13, 2
  %add5 = add nsw i32 26, %div4
  store i32 %add5, i32* %min_qp_delta, align 4
  %14 = load i32, i32* %mb_field.addr, align 4
  %15 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_field6 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %15, i32 0, i32 22
  store i32 %14, i32* %mb_field6, align 4
  %16 = load i32, i32* %mb_field.addr, align 4
  %conv = trunc i32 %16 to i8
  %17 = load i32, i32* %mb_addr.addr, align 4
  %idxprom7 = sext i32 %17 to i64
  %18 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %mb_field8 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %18, i32 0, i32 31
  %19 = load i8*, i8** %mb_field8, align 8
  %arrayidx9 = getelementptr inbounds i8, i8* %19, i64 %idxprom7
  store i8 %conv, i8* %arrayidx9, align 1
  %20 = load i32, i32* %mb_addr.addr, align 4
  call void @set_MB_parameters(i32 %20)
  %21 = load i32, i32* %use_bitstream_backing, align 4
  %tobool = icmp ne i32 %21, 0
  br i1 %tobool, label %if.then, label %if.end.20

if.then:                                          ; preds = %lor.end
  %22 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %cod_counter = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %22, i32 0, i32 27
  %23 = load i32, i32* %cod_counter, align 4
  %tobool10 = icmp ne i32 %23, 0
  br i1 %tobool10, label %if.end.19, label %if.then.11

if.then.11:                                       ; preds = %if.then
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then.11
  %24 = load i32, i32* %i, align 4
  %25 = load %struct.Slice*, %struct.Slice** %curr_slice, align 8
  %max_part_nr = getelementptr inbounds %struct.Slice, %struct.Slice* %25, i32 0, i32 4
  %26 = load i32, i32* %max_part_nr, align 4
  %cmp12 = icmp slt i32 %24, %26
  br i1 %cmp12, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %27 = load i32, i32* %i, align 4
  %idxprom14 = sext i32 %27 to i64
  %28 = load %struct.Slice*, %struct.Slice** %curr_slice, align 8
  %partArr = getelementptr inbounds %struct.Slice, %struct.Slice* %28, i32 0, i32 6
  %29 = load %struct.datapartition*, %struct.datapartition** %partArr, align 8
  %arrayidx15 = getelementptr inbounds %struct.datapartition, %struct.datapartition* %29, i64 %idxprom14
  store %struct.datapartition* %arrayidx15, %struct.datapartition** %dataPart, align 8
  %30 = load %struct.datapartition*, %struct.datapartition** %dataPart, align 8
  %bitstream = getelementptr inbounds %struct.datapartition, %struct.datapartition* %30, i32 0, i32 0
  %31 = load %struct.Bitstream*, %struct.Bitstream** %bitstream, align 8
  store %struct.Bitstream* %31, %struct.Bitstream** %currStream, align 8
  %32 = load %struct.Bitstream*, %struct.Bitstream** %currStream, align 8
  %bits_to_go = getelementptr inbounds %struct.Bitstream, %struct.Bitstream* %32, i32 0, i32 1
  %33 = load i32, i32* %bits_to_go, align 4
  %34 = load %struct.Bitstream*, %struct.Bitstream** %currStream, align 8
  %stored_bits_to_go = getelementptr inbounds %struct.Bitstream, %struct.Bitstream* %34, i32 0, i32 4
  store i32 %33, i32* %stored_bits_to_go, align 4
  %35 = load %struct.Bitstream*, %struct.Bitstream** %currStream, align 8
  %byte_pos = getelementptr inbounds %struct.Bitstream, %struct.Bitstream* %35, i32 0, i32 0
  %36 = load i32, i32* %byte_pos, align 4
  %37 = load %struct.Bitstream*, %struct.Bitstream** %currStream, align 8
  %stored_byte_pos = getelementptr inbounds %struct.Bitstream, %struct.Bitstream* %37, i32 0, i32 3
  store i32 %36, i32* %stored_byte_pos, align 4
  %38 = load %struct.Bitstream*, %struct.Bitstream** %currStream, align 8
  %byte_buf = getelementptr inbounds %struct.Bitstream, %struct.Bitstream* %38, i32 0, i32 2
  %39 = load i8, i8* %byte_buf, align 1
  %40 = load %struct.Bitstream*, %struct.Bitstream** %currStream, align 8
  %stored_byte_buf = getelementptr inbounds %struct.Bitstream, %struct.Bitstream* %40, i32 0, i32 5
  store i8 %39, i8* %stored_byte_buf, align 1
  %41 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %symbol_mode = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %41, i32 0, i32 59
  %42 = load i32, i32* %symbol_mode, align 4
  %cmp16 = icmp eq i32 %42, 1
  br i1 %cmp16, label %if.then.18, label %if.end

if.then.18:                                       ; preds = %for.body
  %43 = load %struct.datapartition*, %struct.datapartition** %dataPart, align 8
  %ee_cabac = getelementptr inbounds %struct.datapartition, %struct.datapartition* %43, i32 0, i32 1
  store %struct.EncodingEnvironment* %ee_cabac, %struct.EncodingEnvironment** %eep, align 8
  %44 = load %struct.EncodingEnvironment*, %struct.EncodingEnvironment** %eep, align 8
  %Elow = getelementptr inbounds %struct.EncodingEnvironment, %struct.EncodingEnvironment* %44, i32 0, i32 0
  %45 = load i32, i32* %Elow, align 4
  %46 = load %struct.EncodingEnvironment*, %struct.EncodingEnvironment** %eep, align 8
  %ElowS = getelementptr inbounds %struct.EncodingEnvironment, %struct.EncodingEnvironment* %46, i32 0, i32 7
  store i32 %45, i32* %ElowS, align 4
  %47 = load %struct.EncodingEnvironment*, %struct.EncodingEnvironment** %eep, align 8
  %Erange = getelementptr inbounds %struct.EncodingEnvironment, %struct.EncodingEnvironment* %47, i32 0, i32 1
  %48 = load i32, i32* %Erange, align 4
  %49 = load %struct.EncodingEnvironment*, %struct.EncodingEnvironment** %eep, align 8
  %ErangeS = getelementptr inbounds %struct.EncodingEnvironment, %struct.EncodingEnvironment* %49, i32 0, i32 8
  store i32 %48, i32* %ErangeS, align 4
  %50 = load %struct.EncodingEnvironment*, %struct.EncodingEnvironment** %eep, align 8
  %Ebuffer = getelementptr inbounds %struct.EncodingEnvironment, %struct.EncodingEnvironment* %50, i32 0, i32 2
  %51 = load i32, i32* %Ebuffer, align 4
  %52 = load %struct.EncodingEnvironment*, %struct.EncodingEnvironment** %eep, align 8
  %EbufferS = getelementptr inbounds %struct.EncodingEnvironment, %struct.EncodingEnvironment* %52, i32 0, i32 9
  store i32 %51, i32* %EbufferS, align 4
  %53 = load %struct.EncodingEnvironment*, %struct.EncodingEnvironment** %eep, align 8
  %Ebits_to_go = getelementptr inbounds %struct.EncodingEnvironment, %struct.EncodingEnvironment* %53, i32 0, i32 3
  %54 = load i32, i32* %Ebits_to_go, align 4
  %55 = load %struct.EncodingEnvironment*, %struct.EncodingEnvironment** %eep, align 8
  %Ebits_to_goS = getelementptr inbounds %struct.EncodingEnvironment, %struct.EncodingEnvironment* %55, i32 0, i32 10
  store i32 %54, i32* %Ebits_to_goS, align 4
  %56 = load %struct.EncodingEnvironment*, %struct.EncodingEnvironment** %eep, align 8
  %Ebits_to_follow = getelementptr inbounds %struct.EncodingEnvironment, %struct.EncodingEnvironment* %56, i32 0, i32 4
  %57 = load i32, i32* %Ebits_to_follow, align 4
  %58 = load %struct.EncodingEnvironment*, %struct.EncodingEnvironment** %eep, align 8
  %Ebits_to_followS = getelementptr inbounds %struct.EncodingEnvironment, %struct.EncodingEnvironment* %58, i32 0, i32 11
  store i32 %57, i32* %Ebits_to_followS, align 4
  %59 = load %struct.EncodingEnvironment*, %struct.EncodingEnvironment** %eep, align 8
  %Ecodestrm = getelementptr inbounds %struct.EncodingEnvironment, %struct.EncodingEnvironment* %59, i32 0, i32 5
  %60 = load i8*, i8** %Ecodestrm, align 8
  %61 = load %struct.EncodingEnvironment*, %struct.EncodingEnvironment** %eep, align 8
  %EcodestrmS = getelementptr inbounds %struct.EncodingEnvironment, %struct.EncodingEnvironment* %61, i32 0, i32 12
  store i8* %60, i8** %EcodestrmS, align 8
  %62 = load %struct.EncodingEnvironment*, %struct.EncodingEnvironment** %eep, align 8
  %Ecodestrm_len = getelementptr inbounds %struct.EncodingEnvironment, %struct.EncodingEnvironment* %62, i32 0, i32 6
  %63 = load i32*, i32** %Ecodestrm_len, align 8
  %64 = load %struct.EncodingEnvironment*, %struct.EncodingEnvironment** %eep, align 8
  %Ecodestrm_lenS = getelementptr inbounds %struct.EncodingEnvironment, %struct.EncodingEnvironment* %64, i32 0, i32 13
  store i32* %63, i32** %Ecodestrm_lenS, align 8
  %65 = load %struct.EncodingEnvironment*, %struct.EncodingEnvironment** %eep, align 8
  %C = getelementptr inbounds %struct.EncodingEnvironment, %struct.EncodingEnvironment* %65, i32 0, i32 14
  %66 = load i32, i32* %C, align 4
  %67 = load %struct.EncodingEnvironment*, %struct.EncodingEnvironment** %eep, align 8
  %CS = getelementptr inbounds %struct.EncodingEnvironment, %struct.EncodingEnvironment* %67, i32 0, i32 15
  store i32 %66, i32* %CS, align 4
  %68 = load %struct.EncodingEnvironment*, %struct.EncodingEnvironment** %eep, align 8
  %B = getelementptr inbounds %struct.EncodingEnvironment, %struct.EncodingEnvironment* %68, i32 0, i32 18
  %69 = load i32, i32* %B, align 4
  %70 = load %struct.EncodingEnvironment*, %struct.EncodingEnvironment** %eep, align 8
  %BS = getelementptr inbounds %struct.EncodingEnvironment, %struct.EncodingEnvironment* %70, i32 0, i32 19
  store i32 %69, i32* %BS, align 4
  %71 = load %struct.EncodingEnvironment*, %struct.EncodingEnvironment** %eep, align 8
  %E = getelementptr inbounds %struct.EncodingEnvironment, %struct.EncodingEnvironment* %71, i32 0, i32 16
  %72 = load i32, i32* %E, align 4
  %73 = load %struct.EncodingEnvironment*, %struct.EncodingEnvironment** %eep, align 8
  %ES = getelementptr inbounds %struct.EncodingEnvironment, %struct.EncodingEnvironment* %73, i32 0, i32 17
  store i32 %72, i32* %ES, align 4
  br label %if.end

if.end:                                           ; preds = %if.then.18, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %74 = load i32, i32* %i, align 4
  %inc = add nsw i32 %74, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end.19

if.end.19:                                        ; preds = %for.end, %if.then
  br label %if.end.20

if.end.20:                                        ; preds = %if.end.19, %lor.end
  %75 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_slice_nr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %75, i32 0, i32 5
  %76 = load i32, i32* %current_slice_nr, align 4
  %77 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %slice_nr = getelementptr inbounds %struct.macroblock, %struct.macroblock* %77, i32 0, i32 1
  store i32 %76, i32* %slice_nr, align 4
  %78 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %qpsp = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %78, i32 0, i32 11
  %79 = load i32, i32* %qpsp, align 4
  %80 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %qpsp21 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %80, i32 0, i32 4
  store i32 %79, i32* %qpsp21, align 4
  %81 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %RCEnable = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %81, i32 0, i32 127
  %82 = load i32, i32* %RCEnable, align 4
  %tobool22 = icmp ne i32 %82, 0
  br i1 %tobool22, label %if.then.23, label %if.else.313

if.then.23:                                       ; preds = %if.end.20
  %83 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %83, i32 0, i32 3
  %84 = load i32, i32* %current_mb_nr, align 4
  %call = call i32 @FmoGetPreviousMBNr(i32 %84)
  store i32 %call, i32* %prev_mb, align 4
  %85 = load i32, i32* %prev_mb, align 4
  %cmp24 = icmp sgt i32 %85, -1
  br i1 %cmp24, label %if.then.26, label %if.else

if.then.26:                                       ; preds = %if.then.23
  %86 = load i32, i32* %prev_mb, align 4
  %idxprom27 = sext i32 %86 to i64
  %87 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data28 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %87, i32 0, i32 51
  %88 = load %struct.macroblock*, %struct.macroblock** %mb_data28, align 8
  %arrayidx29 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %88, i64 %idxprom27
  %qp = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx29, i32 0, i32 3
  %89 = load i32, i32* %qp, align 4
  %90 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %prev_qp = getelementptr inbounds %struct.macroblock, %struct.macroblock* %90, i32 0, i32 36
  store i32 %89, i32* %prev_qp, align 4
  %91 = load i32, i32* %prev_mb, align 4
  %idxprom30 = sext i32 %91 to i64
  %92 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data31 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %92, i32 0, i32 51
  %93 = load %struct.macroblock*, %struct.macroblock** %mb_data31, align 8
  %arrayidx32 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %93, i64 %idxprom30
  %delta_qp = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx32, i32 0, i32 2
  %94 = load i32, i32* %delta_qp, align 4
  %95 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %prev_delta_qp = getelementptr inbounds %struct.macroblock, %struct.macroblock* %95, i32 0, i32 37
  store i32 %94, i32* %prev_delta_qp, align 4
  br label %if.end.36

if.else:                                          ; preds = %if.then.23
  %96 = load %struct.Slice*, %struct.Slice** %curr_slice, align 8
  %qp33 = getelementptr inbounds %struct.Slice, %struct.Slice* %96, i32 0, i32 1
  %97 = load i32, i32* %qp33, align 4
  %98 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %prev_qp34 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %98, i32 0, i32 36
  store i32 %97, i32* %prev_qp34, align 4
  %99 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %prev_delta_qp35 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %99, i32 0, i32 37
  store i32 0, i32* %prev_delta_qp35, align 4
  br label %if.end.36

if.end.36:                                        ; preds = %if.else, %if.then.26
  %100 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %basicunit = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %100, i32 0, i32 130
  %101 = load i32, i32* %basicunit, align 4
  %102 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %102, i32 0, i32 136
  %103 = load i32, i32* %Frame_Total_Number_MB, align 4
  %cmp37 = icmp eq i32 %101, %103
  br i1 %cmp37, label %if.then.39, label %if.else.43

if.then.39:                                       ; preds = %if.end.36
  %104 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %delta_qp40 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %104, i32 0, i32 2
  store i32 0, i32* %delta_qp40, align 4
  %105 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %qp41 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %105, i32 0, i32 10
  %106 = load i32, i32* %qp41, align 4
  %107 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %qp42 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %107, i32 0, i32 3
  store i32 %106, i32* %qp42, align 4
  br label %if.end.312

if.else.43:                                       ; preds = %if.end.36
  %108 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %108, i32 0, i32 6
  %109 = load i32, i32* %type, align 4
  %cmp44 = icmp eq i32 %109, 2
  br i1 %cmp44, label %if.then.49, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.else.43
  %110 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type46 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %110, i32 0, i32 6
  %111 = load i32, i32* %type46, align 4
  %cmp47 = icmp eq i32 %111, 1
  br i1 %cmp47, label %if.then.49, label %if.else.53

if.then.49:                                       ; preds = %lor.lhs.false, %if.else.43
  %112 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %delta_qp50 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %112, i32 0, i32 2
  store i32 0, i32* %delta_qp50, align 4
  %113 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %qp51 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %113, i32 0, i32 10
  %114 = load i32, i32* %qp51, align 4
  %115 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %qp52 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %115, i32 0, i32 3
  store i32 %114, i32* %qp52, align 4
  br label %if.end.311

if.else.53:                                       ; preds = %lor.lhs.false
  %116 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type54 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %116, i32 0, i32 6
  %117 = load i32, i32* %type54, align 4
  %cmp55 = icmp eq i32 %117, 0
  br i1 %cmp55, label %if.then.57, label %if.end.310

if.then.57:                                       ; preds = %if.else.53
  %118 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %write_macroblock = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %118, i32 0, i32 140
  %119 = load i32, i32* %write_macroblock, align 4
  %tobool58 = icmp ne i32 %119, 0
  br i1 %tobool58, label %if.else.127, label %if.then.59

if.then.59:                                       ; preds = %if.then.57
  %120 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_field60 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %120, i32 0, i32 22
  %121 = load i32, i32* %mb_field60, align 4
  %tobool61 = icmp ne i32 %121, 0
  br i1 %tobool61, label %if.else.114, label %if.then.62

if.then.62:                                       ; preds = %if.then.59
  %122 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr63 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %122, i32 0, i32 3
  %123 = load i32, i32* %current_mb_nr63, align 4
  %cmp64 = icmp eq i32 %123, 0
  br i1 %cmp64, label %if.then.66, label %if.else.72

if.then.66:                                       ; preds = %if.then.62
  %124 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %delta_qp67 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %124, i32 0, i32 2
  store i32 0, i32* %delta_qp67, align 4
  %125 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %qp68 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %125, i32 0, i32 10
  %126 = load i32, i32* %qp68, align 4
  %127 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %qp69 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %127, i32 0, i32 3
  store i32 %126, i32* %qp69, align 4
  %128 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %delta_qp70 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %128, i32 0, i32 2
  %129 = load i32, i32* %delta_qp70, align 4
  store i32 %129, i32* @DELTA_QP2, align 4
  store i32 %129, i32* @DELTA_QP, align 4
  %130 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %qp71 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %130, i32 0, i32 3
  %131 = load i32, i32* %qp71, align 4
  store i32 %131, i32* @QP2, align 4
  store i32 %131, i32* @QP, align 4
  br label %if.end.113

if.else.72:                                       ; preds = %if.then.62
  %132 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %132, i32 0, i32 92
  %133 = load i32, i32* %MbInterlace, align 4
  %tobool73 = icmp ne i32 %133, 0
  br i1 %tobool73, label %land.lhs.true, label %if.then.75

land.lhs.true:                                    ; preds = %if.else.72
  %134 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %bot_MB = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %134, i32 0, i32 141
  %135 = load i32, i32* %bot_MB, align 4
  %tobool74 = icmp ne i32 %135, 0
  br i1 %tobool74, label %if.else.108, label %if.then.75

if.then.75:                                       ; preds = %land.lhs.true, %if.else.72
  %136 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr76 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %136, i32 0, i32 3
  %137 = load i32, i32* %current_mb_nr76, align 4
  %sub = sub nsw i32 %137, 1
  %idxprom77 = sext i32 %sub to i64
  %138 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data78 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %138, i32 0, i32 51
  %139 = load %struct.macroblock*, %struct.macroblock** %mb_data78, align 8
  %arrayidx79 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %139, i64 %idxprom77
  %prev_cbp = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx79, i32 0, i32 38
  %140 = load i32, i32* %prev_cbp, align 4
  %cmp80 = icmp eq i32 %140, 1
  br i1 %cmp80, label %if.then.82, label %if.else.86

if.then.82:                                       ; preds = %if.then.75
  %141 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %delta_qp83 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %141, i32 0, i32 2
  store i32 0, i32* %delta_qp83, align 4
  %142 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %qp84 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %142, i32 0, i32 10
  %143 = load i32, i32* %qp84, align 4
  %144 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %qp85 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %144, i32 0, i32 3
  store i32 %143, i32* %qp85, align 4
  br label %if.end.105

if.else.86:                                       ; preds = %if.then.75
  %145 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr87 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %145, i32 0, i32 3
  %146 = load i32, i32* %current_mb_nr87, align 4
  %sub88 = sub nsw i32 %146, 1
  %idxprom89 = sext i32 %sub88 to i64
  %147 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data90 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %147, i32 0, i32 51
  %148 = load %struct.macroblock*, %struct.macroblock** %mb_data90, align 8
  %arrayidx91 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %148, i64 %idxprom89
  %prev_qp92 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx91, i32 0, i32 36
  %149 = load i32, i32* %prev_qp92, align 4
  %150 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %qp93 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %150, i32 0, i32 3
  store i32 %149, i32* %qp93, align 4
  %151 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %qp94 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %151, i32 0, i32 3
  %152 = load i32, i32* %qp94, align 4
  %153 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr95 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %153, i32 0, i32 3
  %154 = load i32, i32* %current_mb_nr95, align 4
  %sub96 = sub nsw i32 %154, 1
  %idxprom97 = sext i32 %sub96 to i64
  %155 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data98 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %155, i32 0, i32 51
  %156 = load %struct.macroblock*, %struct.macroblock** %mb_data98, align 8
  %arrayidx99 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %156, i64 %idxprom97
  %qp100 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx99, i32 0, i32 3
  %157 = load i32, i32* %qp100, align 4
  %sub101 = sub nsw i32 %152, %157
  %158 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %delta_qp102 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %158, i32 0, i32 2
  store i32 %sub101, i32* %delta_qp102, align 4
  %159 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %qp103 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %159, i32 0, i32 3
  %160 = load i32, i32* %qp103, align 4
  %161 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %qp104 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %161, i32 0, i32 10
  store i32 %160, i32* %qp104, align 4
  br label %if.end.105

if.end.105:                                       ; preds = %if.else.86, %if.then.82
  %162 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %delta_qp106 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %162, i32 0, i32 2
  %163 = load i32, i32* %delta_qp106, align 4
  store i32 %163, i32* @DELTA_QP2, align 4
  store i32 %163, i32* @DELTA_QP, align 4
  %164 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %qp107 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %164, i32 0, i32 3
  %165 = load i32, i32* %qp107, align 4
  store i32 %165, i32* @QP2, align 4
  store i32 %165, i32* @QP, align 4
  br label %if.end.112

if.else.108:                                      ; preds = %land.lhs.true
  %166 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %delta_qp109 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %166, i32 0, i32 2
  store i32 0, i32* %delta_qp109, align 4
  %167 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %qp110 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %167, i32 0, i32 10
  %168 = load i32, i32* %qp110, align 4
  %169 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %qp111 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %169, i32 0, i32 3
  store i32 %168, i32* %qp111, align 4
  br label %if.end.112

if.end.112:                                       ; preds = %if.else.108, %if.end.105
  br label %if.end.113

if.end.113:                                       ; preds = %if.end.112, %if.then.66
  br label %if.end.126

if.else.114:                                      ; preds = %if.then.59
  %170 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %bot_MB115 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %170, i32 0, i32 141
  %171 = load i32, i32* %bot_MB115, align 4
  %tobool116 = icmp ne i32 %171, 0
  br i1 %tobool116, label %if.else.121, label %if.then.117

if.then.117:                                      ; preds = %if.else.114
  %172 = load i32, i32* @DELTA_QP2, align 4
  %173 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %delta_qp118 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %173, i32 0, i32 2
  store i32 %172, i32* %delta_qp118, align 4
  %174 = load i32, i32* @QP2, align 4
  %175 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %qp119 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %175, i32 0, i32 10
  store i32 %174, i32* %qp119, align 4
  %176 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %qp120 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %176, i32 0, i32 3
  store i32 %174, i32* %qp120, align 4
  br label %if.end.125

if.else.121:                                      ; preds = %if.else.114
  %177 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %qp122 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %177, i32 0, i32 10
  %178 = load i32, i32* %qp122, align 4
  %179 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %qp123 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %179, i32 0, i32 3
  store i32 %178, i32* %qp123, align 4
  %180 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %delta_qp124 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %180, i32 0, i32 2
  store i32 0, i32* %delta_qp124, align 4
  br label %if.end.125

if.end.125:                                       ; preds = %if.else.121, %if.then.117
  br label %if.end.126

if.end.126:                                       ; preds = %if.end.125, %if.end.113
  br label %if.end.146

if.else.127:                                      ; preds = %if.then.57
  %181 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %bot_MB128 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %181, i32 0, i32 141
  %182 = load i32, i32* %bot_MB128, align 4
  %tobool129 = icmp ne i32 %182, 0
  br i1 %tobool129, label %if.else.141, label %if.then.130

if.then.130:                                      ; preds = %if.else.127
  %183 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %write_macroblock_frame = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %183, i32 0, i32 142
  %184 = load i32, i32* %write_macroblock_frame, align 4
  %tobool131 = icmp ne i32 %184, 0
  br i1 %tobool131, label %if.then.132, label %if.else.136

if.then.132:                                      ; preds = %if.then.130
  %185 = load i32, i32* @DELTA_QP, align 4
  %186 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %delta_qp133 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %186, i32 0, i32 2
  store i32 %185, i32* %delta_qp133, align 4
  %187 = load i32, i32* @QP, align 4
  %188 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %qp134 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %188, i32 0, i32 3
  store i32 %187, i32* %qp134, align 4
  %189 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %qp135 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %189, i32 0, i32 10
  store i32 %187, i32* %qp135, align 4
  br label %if.end.140

if.else.136:                                      ; preds = %if.then.130
  %190 = load i32, i32* @DELTA_QP2, align 4
  %191 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %delta_qp137 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %191, i32 0, i32 2
  store i32 %190, i32* %delta_qp137, align 4
  %192 = load i32, i32* @QP2, align 4
  %193 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %qp138 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %193, i32 0, i32 3
  store i32 %192, i32* %qp138, align 4
  %194 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %qp139 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %194, i32 0, i32 10
  store i32 %192, i32* %qp139, align 4
  br label %if.end.140

if.end.140:                                       ; preds = %if.else.136, %if.then.132
  br label %if.end.145

if.else.141:                                      ; preds = %if.else.127
  %195 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %delta_qp142 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %195, i32 0, i32 2
  store i32 0, i32* %delta_qp142, align 4
  %196 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %qp143 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %196, i32 0, i32 10
  %197 = load i32, i32* %qp143, align 4
  %198 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %qp144 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %198, i32 0, i32 3
  store i32 %197, i32* %qp144, align 4
  br label %if.end.145

if.end.145:                                       ; preds = %if.else.141, %if.end.140
  br label %if.end.146

if.end.146:                                       ; preds = %if.end.145, %if.end.126
  %199 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace147 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %199, i32 0, i32 92
  %200 = load i32, i32* %MbInterlace147, align 4
  %tobool148 = icmp ne i32 %200, 0
  br i1 %tobool148, label %land.lhs.true.149, label %if.then.152

land.lhs.true.149:                                ; preds = %if.end.146
  %201 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %bot_MB150 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %201, i32 0, i32 141
  %202 = load i32, i32* %bot_MB150, align 4
  %tobool151 = icmp ne i32 %202, 0
  br i1 %tobool151, label %if.else.306, label %if.then.152

if.then.152:                                      ; preds = %land.lhs.true.149, %if.end.146
  %203 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_field153 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %203, i32 0, i32 22
  %204 = load i32, i32* %mb_field153, align 4
  %tobool154 = icmp ne i32 %204, 0
  br i1 %tobool154, label %if.else.303, label %if.then.155

if.then.155:                                      ; preds = %if.then.152
  %205 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedMacroBlocks = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %205, i32 0, i32 138
  %206 = load i32, i32* %NumberofCodedMacroBlocks, align 4
  %cmp156 = icmp sgt i32 %206, 0
  br i1 %cmp156, label %land.lhs.true.158, label %if.end.228

land.lhs.true.158:                                ; preds = %if.then.155
  %207 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedMacroBlocks159 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %207, i32 0, i32 138
  %208 = load i32, i32* %NumberofCodedMacroBlocks159, align 4
  %209 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %209, i32 0, i32 139
  %210 = load i32, i32* %BasicUnit, align 4
  %rem = srem i32 %208, %210
  %cmp160 = icmp eq i32 %rem, 0
  br i1 %cmp160, label %if.then.162, label %if.end.228

if.then.162:                                      ; preds = %land.lhs.true.158
  %211 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %frame_mbs_only_flag = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %211, i32 0, i32 25
  %212 = load i32, i32* %frame_mbs_only_flag, align 4
  %tobool163 = icmp ne i32 %212, 0
  br i1 %tobool163, label %if.then.164, label %if.else.166

if.then.164:                                      ; preds = %if.then.162
  call void (...) @updateRCModel()
  %213 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TopFieldFlag = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %213, i32 0, i32 133
  %214 = load i32, i32* %TopFieldFlag, align 4
  %call165 = call i32 @updateQuantizationParameter(i32 %214)
  %215 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnitQP = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %215, i32 0, i32 132
  store i32 %call165, i32* %BasicUnitQP, align 4
  br label %if.end.227

if.else.166:                                      ; preds = %if.then.162
  %216 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %216, i32 0, i32 91
  %217 = load i32, i32* %PicInterlace, align 4
  %cmp167 = icmp eq i32 %217, 2
  br i1 %cmp167, label %land.lhs.true.169, label %if.else.179

land.lhs.true.169:                                ; preds = %if.else.166
  %218 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace170 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %218, i32 0, i32 92
  %219 = load i32, i32* %MbInterlace170, align 4
  %tobool171 = icmp ne i32 %219, 0
  br i1 %tobool171, label %if.else.179, label %land.lhs.true.172

land.lhs.true.172:                                ; preds = %land.lhs.true.169
  %220 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %IFLAG = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %220, i32 0, i32 137
  %221 = load i32, i32* %IFLAG, align 4
  %cmp173 = icmp eq i32 %221, 0
  br i1 %cmp173, label %if.then.175, label %if.else.179

if.then.175:                                      ; preds = %land.lhs.true.172
  call void (...) @updateRCModel()
  %222 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TopFieldFlag176 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %222, i32 0, i32 133
  %223 = load i32, i32* %TopFieldFlag176, align 4
  %call177 = call i32 @updateQuantizationParameter(i32 %223)
  %224 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnitQP178 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %224, i32 0, i32 132
  store i32 %call177, i32* %BasicUnitQP178, align 4
  br label %if.end.226

if.else.179:                                      ; preds = %land.lhs.true.172, %land.lhs.true.169, %if.else.166
  %225 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace180 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %225, i32 0, i32 91
  %226 = load i32, i32* %PicInterlace180, align 4
  %cmp181 = icmp eq i32 %226, 1
  br i1 %cmp181, label %land.lhs.true.183, label %if.else.194

land.lhs.true.183:                                ; preds = %if.else.179
  %227 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace184 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %227, i32 0, i32 92
  %228 = load i32, i32* %MbInterlace184, align 4
  %tobool185 = icmp ne i32 %228, 0
  br i1 %tobool185, label %if.else.194, label %land.lhs.true.186

land.lhs.true.186:                                ; preds = %land.lhs.true.183
  %229 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %IFLAG187 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %229, i32 0, i32 137
  %230 = load i32, i32* %IFLAG187, align 4
  %cmp188 = icmp eq i32 %230, 0
  br i1 %cmp188, label %if.then.190, label %if.else.194

if.then.190:                                      ; preds = %land.lhs.true.186
  call void (...) @updateRCModel()
  %231 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TopFieldFlag191 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %231, i32 0, i32 133
  %232 = load i32, i32* %TopFieldFlag191, align 4
  %call192 = call i32 @updateQuantizationParameter(i32 %232)
  %233 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnitQP193 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %233, i32 0, i32 132
  store i32 %call192, i32* %BasicUnitQP193, align 4
  br label %if.end.225

if.else.194:                                      ; preds = %land.lhs.true.186, %land.lhs.true.183, %if.else.179
  %234 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace195 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %234, i32 0, i32 92
  %235 = load i32, i32* %MbInterlace195, align 4
  %tobool196 = icmp ne i32 %235, 0
  br i1 %tobool196, label %land.lhs.true.197, label %if.else.208

land.lhs.true.197:                                ; preds = %if.else.194
  %236 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %IFLAG198 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %236, i32 0, i32 137
  %237 = load i32, i32* %IFLAG198, align 4
  %cmp199 = icmp eq i32 %237, 0
  br i1 %cmp199, label %land.lhs.true.201, label %if.else.208

land.lhs.true.201:                                ; preds = %land.lhs.true.197
  %238 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %238, i32 0, i32 134
  %239 = load i32, i32* %FieldControl, align 4
  %cmp202 = icmp eq i32 %239, 1
  br i1 %cmp202, label %if.then.204, label %if.else.208

if.then.204:                                      ; preds = %land.lhs.true.201
  call void (...) @updateRCModel()
  %240 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TopFieldFlag205 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %240, i32 0, i32 133
  %241 = load i32, i32* %TopFieldFlag205, align 4
  %call206 = call i32 @updateQuantizationParameter(i32 %241)
  %242 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnitQP207 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %242, i32 0, i32 132
  store i32 %call206, i32* %BasicUnitQP207, align 4
  br label %if.end.224

if.else.208:                                      ; preds = %land.lhs.true.201, %land.lhs.true.197, %if.else.194
  %243 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace209 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %243, i32 0, i32 92
  %244 = load i32, i32* %MbInterlace209, align 4
  %tobool210 = icmp ne i32 %244, 0
  br i1 %tobool210, label %land.lhs.true.211, label %if.end.223

land.lhs.true.211:                                ; preds = %if.else.208
  %245 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %IFLAG212 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %245, i32 0, i32 137
  %246 = load i32, i32* %IFLAG212, align 4
  %cmp213 = icmp eq i32 %246, 0
  br i1 %cmp213, label %land.lhs.true.215, label %if.end.223

land.lhs.true.215:                                ; preds = %land.lhs.true.211
  %247 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl216 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %247, i32 0, i32 134
  %248 = load i32, i32* %FieldControl216, align 4
  %cmp217 = icmp eq i32 %248, 0
  br i1 %cmp217, label %if.then.219, label %if.end.223

if.then.219:                                      ; preds = %land.lhs.true.215
  call void (...) @updateRCModel()
  %249 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TopFieldFlag220 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %249, i32 0, i32 133
  %250 = load i32, i32* %TopFieldFlag220, align 4
  %call221 = call i32 @updateQuantizationParameter(i32 %250)
  %251 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnitQP222 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %251, i32 0, i32 132
  store i32 %call221, i32* %BasicUnitQP222, align 4
  br label %if.end.223

if.end.223:                                       ; preds = %if.then.219, %land.lhs.true.215, %land.lhs.true.211, %if.else.208
  br label %if.end.224

if.end.224:                                       ; preds = %if.end.223, %if.then.204
  br label %if.end.225

if.end.225:                                       ; preds = %if.end.224, %if.then.190
  br label %if.end.226

if.end.226:                                       ; preds = %if.end.225, %if.then.175
  br label %if.end.227

if.end.227:                                       ; preds = %if.end.226, %if.then.164
  br label %if.end.228

if.end.228:                                       ; preds = %if.end.227, %land.lhs.true.158, %if.then.155
  %252 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr229 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %252, i32 0, i32 3
  %253 = load i32, i32* %current_mb_nr229, align 4
  %cmp230 = icmp eq i32 %253, 0
  br i1 %cmp230, label %if.then.232, label %if.end.235

if.then.232:                                      ; preds = %if.end.228
  %254 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %qp233 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %254, i32 0, i32 10
  %255 = load i32, i32* %qp233, align 4
  %256 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnitQP234 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %256, i32 0, i32 132
  store i32 %255, i32* %BasicUnitQP234, align 4
  br label %if.end.235

if.end.235:                                       ; preds = %if.then.232, %if.end.228
  %257 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnitQP236 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %257, i32 0, i32 132
  %258 = load i32, i32* %BasicUnitQP236, align 4
  %259 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %predict_qp = getelementptr inbounds %struct.macroblock, %struct.macroblock* %259, i32 0, i32 39
  store i32 %258, i32* %predict_qp, align 4
  %260 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %predict_qp237 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %260, i32 0, i32 39
  %261 = load i32, i32* %predict_qp237, align 4
  %262 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %qp238 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %262, i32 0, i32 3
  %263 = load i32, i32* %qp238, align 4
  %264 = load i32, i32* %max_qp_delta, align 4
  %add239 = add nsw i32 %263, %264
  %cmp240 = icmp sgt i32 %261, %add239
  br i1 %cmp240, label %if.then.242, label %if.else.246

if.then.242:                                      ; preds = %if.end.235
  %265 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %qp243 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %265, i32 0, i32 3
  %266 = load i32, i32* %qp243, align 4
  %267 = load i32, i32* %max_qp_delta, align 4
  %add244 = add nsw i32 %266, %267
  %268 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %predict_qp245 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %268, i32 0, i32 39
  store i32 %add244, i32* %predict_qp245, align 4
  br label %if.end.257

if.else.246:                                      ; preds = %if.end.235
  %269 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %predict_qp247 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %269, i32 0, i32 39
  %270 = load i32, i32* %predict_qp247, align 4
  %271 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %qp248 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %271, i32 0, i32 3
  %272 = load i32, i32* %qp248, align 4
  %273 = load i32, i32* %min_qp_delta, align 4
  %sub249 = sub nsw i32 %272, %273
  %cmp250 = icmp slt i32 %270, %sub249
  br i1 %cmp250, label %if.then.252, label %if.end.256

if.then.252:                                      ; preds = %if.else.246
  %274 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %qp253 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %274, i32 0, i32 3
  %275 = load i32, i32* %qp253, align 4
  %276 = load i32, i32* %min_qp_delta, align 4
  %sub254 = sub nsw i32 %275, %276
  %277 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %predict_qp255 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %277, i32 0, i32 39
  store i32 %sub254, i32* %predict_qp255, align 4
  br label %if.end.256

if.end.256:                                       ; preds = %if.then.252, %if.else.246
  br label %if.end.257

if.end.257:                                       ; preds = %if.end.256, %if.then.242
  %278 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %delta_qp258 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %278, i32 0, i32 2
  %279 = load i32, i32* %delta_qp258, align 4
  %280 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %predict_qp259 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %280, i32 0, i32 39
  %281 = load i32, i32* %predict_qp259, align 4
  %add260 = add nsw i32 %279, %281
  %282 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %qp261 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %282, i32 0, i32 3
  %283 = load i32, i32* %qp261, align 4
  %sub262 = sub nsw i32 %add260, %283
  store i32 %sub262, i32* @dq, align 4
  %284 = load i32, i32* @dq, align 4
  %285 = load i32, i32* %min_qp_delta, align 4
  %sub263 = sub nsw i32 0, %285
  %cmp264 = icmp slt i32 %284, %sub263
  br i1 %cmp264, label %if.then.266, label %if.else.275

if.then.266:                                      ; preds = %if.end.257
  %286 = load i32, i32* %min_qp_delta, align 4
  %sub267 = sub nsw i32 0, %286
  store i32 %sub267, i32* @dq, align 4
  %287 = load i32, i32* @dq, align 4
  %288 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %delta_qp268 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %288, i32 0, i32 2
  %289 = load i32, i32* %delta_qp268, align 4
  %sub269 = sub nsw i32 %287, %289
  store i32 %sub269, i32* @predict_error, align 4
  %290 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %qp270 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %290, i32 0, i32 10
  %291 = load i32, i32* %qp270, align 4
  %292 = load i32, i32* @predict_error, align 4
  %add271 = add nsw i32 %291, %292
  %293 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %qp272 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %293, i32 0, i32 10
  store i32 %add271, i32* %qp272, align 4
  %294 = load i32, i32* %min_qp_delta, align 4
  %sub273 = sub nsw i32 0, %294
  %295 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %delta_qp274 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %295, i32 0, i32 2
  store i32 %sub273, i32* %delta_qp274, align 4
  br label %if.end.293

if.else.275:                                      ; preds = %if.end.257
  %296 = load i32, i32* @dq, align 4
  %297 = load i32, i32* %max_qp_delta, align 4
  %cmp276 = icmp sgt i32 %296, %297
  br i1 %cmp276, label %if.then.278, label %if.else.285

if.then.278:                                      ; preds = %if.else.275
  %298 = load i32, i32* %max_qp_delta, align 4
  store i32 %298, i32* @dq, align 4
  %299 = load i32, i32* @dq, align 4
  %300 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %delta_qp279 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %300, i32 0, i32 2
  %301 = load i32, i32* %delta_qp279, align 4
  %sub280 = sub nsw i32 %299, %301
  store i32 %sub280, i32* @predict_error, align 4
  %302 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %qp281 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %302, i32 0, i32 10
  %303 = load i32, i32* %qp281, align 4
  %304 = load i32, i32* @predict_error, align 4
  %add282 = add nsw i32 %303, %304
  %305 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %qp283 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %305, i32 0, i32 10
  store i32 %add282, i32* %qp283, align 4
  %306 = load i32, i32* %max_qp_delta, align 4
  %307 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %delta_qp284 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %307, i32 0, i32 2
  store i32 %306, i32* %delta_qp284, align 4
  br label %if.end.292

if.else.285:                                      ; preds = %if.else.275
  %308 = load i32, i32* @dq, align 4
  %309 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %delta_qp286 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %309, i32 0, i32 2
  store i32 %308, i32* %delta_qp286, align 4
  %310 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %predict_qp287 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %310, i32 0, i32 39
  %311 = load i32, i32* %predict_qp287, align 4
  %312 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %qp288 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %312, i32 0, i32 3
  %313 = load i32, i32* %qp288, align 4
  %sub289 = sub nsw i32 %311, %313
  store i32 %sub289, i32* @predict_error, align 4
  %314 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %predict_qp290 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %314, i32 0, i32 39
  %315 = load i32, i32* %predict_qp290, align 4
  %316 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %qp291 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %316, i32 0, i32 10
  store i32 %315, i32* %qp291, align 4
  br label %if.end.292

if.end.292:                                       ; preds = %if.else.285, %if.then.278
  br label %if.end.293

if.end.293:                                       ; preds = %if.end.292, %if.then.266
  %317 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %qp294 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %317, i32 0, i32 10
  %318 = load i32, i32* %qp294, align 4
  %319 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %qp295 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %319, i32 0, i32 3
  store i32 %318, i32* %qp295, align 4
  %320 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace296 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %320, i32 0, i32 92
  %321 = load i32, i32* %MbInterlace296, align 4
  %tobool297 = icmp ne i32 %321, 0
  br i1 %tobool297, label %if.then.298, label %if.end.302

if.then.298:                                      ; preds = %if.end.293
  %322 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %delta_qp299 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %322, i32 0, i32 2
  %323 = load i32, i32* %delta_qp299, align 4
  store i32 %323, i32* @DELTA_QP2, align 4
  store i32 %323, i32* @DELTA_QP, align 4
  %324 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %qp300 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %324, i32 0, i32 3
  %325 = load i32, i32* %qp300, align 4
  store i32 %325, i32* @QP2, align 4
  store i32 %325, i32* @QP, align 4
  %326 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %delta_qp301 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %326, i32 0, i32 2
  %327 = load i32, i32* %delta_qp301, align 4
  store i32 %327, i32* @DELTA_QP2, align 4
  br label %if.end.302

if.end.302:                                       ; preds = %if.then.298, %if.end.293
  %328 = load i32, i32* @predict_error, align 4
  %329 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %predict_error = getelementptr inbounds %struct.macroblock, %struct.macroblock* %329, i32 0, i32 40
  store i32 %328, i32* %predict_error, align 4
  br label %if.end.305

if.else.303:                                      ; preds = %if.then.152
  %330 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %predict_error304 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %330, i32 0, i32 40
  %331 = load i32, i32* %predict_error304, align 4
  store i32 %331, i32* @predict_error, align 4
  br label %if.end.305

if.end.305:                                       ; preds = %if.else.303, %if.end.302
  br label %if.end.309

if.else.306:                                      ; preds = %land.lhs.true.149
  %332 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %qp307 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %332, i32 0, i32 10
  %333 = load i32, i32* %qp307, align 4
  %334 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %prev_qp308 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %334, i32 0, i32 36
  store i32 %333, i32* %prev_qp308, align 4
  br label %if.end.309

if.end.309:                                       ; preds = %if.else.306, %if.end.305
  br label %if.end.310

if.end.310:                                       ; preds = %if.end.309, %if.else.53
  br label %if.end.311

if.end.311:                                       ; preds = %if.end.310, %if.then.49
  br label %if.end.312

if.end.312:                                       ; preds = %if.end.311, %if.then.39
  br label %if.end.344

if.else.313:                                      ; preds = %if.end.20
  %335 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %currentSlice314 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %335, i32 0, i32 50
  %336 = load %struct.Slice*, %struct.Slice** %currentSlice314, align 8
  store %struct.Slice* %336, %struct.Slice** %currSlice, align 8
  %337 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr316 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %337, i32 0, i32 3
  %338 = load i32, i32* %current_mb_nr316, align 4
  %call317 = call i32 @FmoGetPreviousMBNr(i32 %338)
  store i32 %call317, i32* %prev_mb315, align 4
  %339 = load i32, i32* %prev_mb315, align 4
  %cmp318 = icmp sgt i32 %339, -1
  br i1 %cmp318, label %if.then.320, label %if.else.331

if.then.320:                                      ; preds = %if.else.313
  %340 = load i32, i32* %prev_mb315, align 4
  %idxprom321 = sext i32 %340 to i64
  %341 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data322 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %341, i32 0, i32 51
  %342 = load %struct.macroblock*, %struct.macroblock** %mb_data322, align 8
  %arrayidx323 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %342, i64 %idxprom321
  %qp324 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx323, i32 0, i32 3
  %343 = load i32, i32* %qp324, align 4
  %344 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %prev_qp325 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %344, i32 0, i32 36
  store i32 %343, i32* %prev_qp325, align 4
  %345 = load i32, i32* %prev_mb315, align 4
  %idxprom326 = sext i32 %345 to i64
  %346 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data327 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %346, i32 0, i32 51
  %347 = load %struct.macroblock*, %struct.macroblock** %mb_data327, align 8
  %arrayidx328 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %347, i64 %idxprom326
  %delta_qp329 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx328, i32 0, i32 2
  %348 = load i32, i32* %delta_qp329, align 4
  %349 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %prev_delta_qp330 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %349, i32 0, i32 37
  store i32 %348, i32* %prev_delta_qp330, align 4
  br label %if.end.335

if.else.331:                                      ; preds = %if.else.313
  %350 = load %struct.Slice*, %struct.Slice** %currSlice, align 8
  %qp332 = getelementptr inbounds %struct.Slice, %struct.Slice* %350, i32 0, i32 1
  %351 = load i32, i32* %qp332, align 4
  %352 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %prev_qp333 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %352, i32 0, i32 36
  store i32 %351, i32* %prev_qp333, align 4
  %353 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %prev_delta_qp334 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %353, i32 0, i32 37
  store i32 0, i32* %prev_delta_qp334, align 4
  br label %if.end.335

if.end.335:                                       ; preds = %if.else.331, %if.then.320
  %354 = load %struct.Slice*, %struct.Slice** %currSlice, align 8
  %qp336 = getelementptr inbounds %struct.Slice, %struct.Slice* %354, i32 0, i32 1
  %355 = load i32, i32* %qp336, align 4
  %356 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %qp337 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %356, i32 0, i32 3
  store i32 %355, i32* %qp337, align 4
  %357 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %qp338 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %357, i32 0, i32 3
  %358 = load i32, i32* %qp338, align 4
  %359 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %prev_qp339 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %359, i32 0, i32 36
  %360 = load i32, i32* %prev_qp339, align 4
  %sub340 = sub nsw i32 %358, %360
  %361 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %delta_qp341 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %361, i32 0, i32 2
  store i32 %sub340, i32* %delta_qp341, align 4
  %362 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %delta_qp342 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %362, i32 0, i32 2
  %363 = load i32, i32* %delta_qp342, align 4
  store i32 %363, i32* @DELTA_QP2, align 4
  store i32 %363, i32* @DELTA_QP, align 4
  %364 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %qp343 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %364, i32 0, i32 3
  %365 = load i32, i32* %qp343, align 4
  store i32 %365, i32* @QP2, align 4
  store i32 %365, i32* @QP, align 4
  br label %if.end.344

if.end.344:                                       ; preds = %if.end.335, %if.end.312
  %366 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %currSEnr = getelementptr inbounds %struct.macroblock, %struct.macroblock* %366, i32 0, i32 0
  store i32 0, i32* %currSEnr, align 4
  %367 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %deblocking_filter_control_present_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %367, i32 0, i32 26
  %368 = load i32, i32* %deblocking_filter_control_present_flag, align 4
  %tobool345 = icmp ne i32 %368, 0
  br i1 %tobool345, label %if.then.346, label %if.else.350

if.then.346:                                      ; preds = %if.end.344
  %369 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %LFDisableIdc = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %369, i32 0, i32 75
  %370 = load i32, i32* %LFDisableIdc, align 4
  %371 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %LFDisableIdc347 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %371, i32 0, i32 41
  store i32 %370, i32* %LFDisableIdc347, align 4
  %372 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %LFAlphaC0Offset = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %372, i32 0, i32 76
  %373 = load i32, i32* %LFAlphaC0Offset, align 4
  %374 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %LFAlphaC0Offset348 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %374, i32 0, i32 42
  store i32 %373, i32* %LFAlphaC0Offset348, align 4
  %375 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %LFBetaOffset = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %375, i32 0, i32 77
  %376 = load i32, i32* %LFBetaOffset, align 4
  %377 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %LFBetaOffset349 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %377, i32 0, i32 43
  store i32 %376, i32* %LFBetaOffset349, align 4
  br label %if.end.354

if.else.350:                                      ; preds = %if.end.344
  %378 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %LFDisableIdc351 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %378, i32 0, i32 41
  store i32 0, i32* %LFDisableIdc351, align 4
  %379 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %LFAlphaC0Offset352 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %379, i32 0, i32 42
  store i32 0, i32* %LFAlphaC0Offset352, align 4
  %380 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %LFBetaOffset353 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %380, i32 0, i32 43
  store i32 0, i32* %LFBetaOffset353, align 4
  br label %if.end.354

if.end.354:                                       ; preds = %if.else.350, %if.then.346
  call void (...) @CheckAvailabilityOfNeighbors()
  %381 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %symbol_mode355 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %381, i32 0, i32 59
  %382 = load i32, i32* %symbol_mode355, align 4
  %cmp356 = icmp eq i32 %382, 1
  br i1 %cmp356, label %if.then.358, label %if.end.359

if.then.358:                                      ; preds = %if.end.354
  call void (...) @CheckAvailabilityOfNeighborsCABAC()
  br label %if.end.359

if.end.359:                                       ; preds = %if.then.358, %if.end.354
  store i32 0, i32* %l, align 4
  br label %for.cond.360

for.cond.360:                                     ; preds = %for.inc.395, %if.end.359
  %383 = load i32, i32* %l, align 4
  %cmp361 = icmp slt i32 %383, 2
  br i1 %cmp361, label %for.body.363, label %for.end.397

for.body.363:                                     ; preds = %for.cond.360
  store i32 0, i32* %j, align 4
  br label %for.cond.364

for.cond.364:                                     ; preds = %for.inc.392, %for.body.363
  %384 = load i32, i32* %j, align 4
  %cmp365 = icmp slt i32 %384, 4
  br i1 %cmp365, label %for.body.367, label %for.end.394

for.body.367:                                     ; preds = %for.cond.364
  store i32 0, i32* %i, align 4
  br label %for.cond.368

for.cond.368:                                     ; preds = %for.inc.389, %for.body.367
  %385 = load i32, i32* %i, align 4
  %cmp369 = icmp slt i32 %385, 4
  br i1 %cmp369, label %for.body.371, label %for.end.391

for.body.371:                                     ; preds = %for.cond.368
  store i32 0, i32* %k, align 4
  br label %for.cond.372

for.cond.372:                                     ; preds = %for.inc.386, %for.body.371
  %386 = load i32, i32* %k, align 4
  %cmp373 = icmp slt i32 %386, 2
  br i1 %cmp373, label %for.body.375, label %for.end.388

for.body.375:                                     ; preds = %for.cond.372
  %387 = load i32, i32* %k, align 4
  %idxprom376 = sext i32 %387 to i64
  %388 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %block_y = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %388, i32 0, i32 32
  %389 = load i32, i32* %block_y, align 4
  %390 = load i32, i32* %j, align 4
  %add377 = add nsw i32 %389, %390
  %idxprom378 = sext i32 %add377 to i64
  %391 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %block_x = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %391, i32 0, i32 31
  %392 = load i32, i32* %block_x, align 4
  %393 = load i32, i32* %i, align 4
  %add379 = add nsw i32 %392, %393
  %idxprom380 = sext i32 %add379 to i64
  %394 = load i32, i32* %l, align 4
  %idxprom381 = sext i32 %394 to i64
  %395 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %mv = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %395, i32 0, i32 35
  %396 = load i16****, i16***** %mv, align 8
  %arrayidx382 = getelementptr inbounds i16***, i16**** %396, i64 %idxprom381
  %397 = load i16***, i16**** %arrayidx382, align 8
  %arrayidx383 = getelementptr inbounds i16**, i16*** %397, i64 %idxprom380
  %398 = load i16**, i16*** %arrayidx383, align 8
  %arrayidx384 = getelementptr inbounds i16*, i16** %398, i64 %idxprom378
  %399 = load i16*, i16** %arrayidx384, align 8
  %arrayidx385 = getelementptr inbounds i16, i16* %399, i64 %idxprom376
  store i16 0, i16* %arrayidx385, align 2
  br label %for.inc.386

for.inc.386:                                      ; preds = %for.body.375
  %400 = load i32, i32* %k, align 4
  %inc387 = add nsw i32 %400, 1
  store i32 %inc387, i32* %k, align 4
  br label %for.cond.372

for.end.388:                                      ; preds = %for.cond.372
  br label %for.inc.389

for.inc.389:                                      ; preds = %for.end.388
  %401 = load i32, i32* %i, align 4
  %inc390 = add nsw i32 %401, 1
  store i32 %inc390, i32* %i, align 4
  br label %for.cond.368

for.end.391:                                      ; preds = %for.cond.368
  br label %for.inc.392

for.inc.392:                                      ; preds = %for.end.391
  %402 = load i32, i32* %j, align 4
  %inc393 = add nsw i32 %402, 1
  store i32 %inc393, i32* %j, align 4
  br label %for.cond.364

for.end.394:                                      ; preds = %for.cond.364
  br label %for.inc.395

for.inc.395:                                      ; preds = %for.end.394
  %403 = load i32, i32* %l, align 4
  %inc396 = add nsw i32 %403, 1
  store i32 %inc396, i32* %l, align 4
  br label %for.cond.360

for.end.397:                                      ; preds = %for.cond.360
  store i32 0, i32* %j, align 4
  br label %for.cond.398

for.cond.398:                                     ; preds = %for.inc.436, %for.end.397
  %404 = load i32, i32* %j, align 4
  %cmp399 = icmp slt i32 %404, 4
  br i1 %cmp399, label %for.body.401, label %for.end.438

for.body.401:                                     ; preds = %for.cond.398
  store i32 0, i32* %i, align 4
  br label %for.cond.402

for.cond.402:                                     ; preds = %for.inc.433, %for.body.401
  %405 = load i32, i32* %i, align 4
  %cmp403 = icmp slt i32 %405, 4
  br i1 %cmp403, label %for.body.405, label %for.end.435

for.body.405:                                     ; preds = %for.cond.402
  store i32 0, i32* %l, align 4
  br label %for.cond.406

for.cond.406:                                     ; preds = %for.inc.430, %for.body.405
  %406 = load i32, i32* %l, align 4
  %cmp407 = icmp slt i32 %406, 2
  br i1 %cmp407, label %for.body.409, label %for.end.432

for.body.409:                                     ; preds = %for.cond.406
  %407 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %block_y410 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %407, i32 0, i32 32
  %408 = load i32, i32* %block_y410, align 4
  %409 = load i32, i32* %j, align 4
  %add411 = add nsw i32 %408, %409
  %idxprom412 = sext i32 %add411 to i64
  %410 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %block_x413 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %410, i32 0, i32 31
  %411 = load i32, i32* %block_x413, align 4
  %412 = load i32, i32* %i, align 4
  %add414 = add nsw i32 %411, %412
  %idxprom415 = sext i32 %add414 to i64
  %413 = load i32, i32* %l, align 4
  %idxprom416 = sext i32 %413 to i64
  %414 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %414, i32 0, i32 32
  %415 = load i16***, i16**** %ref_idx, align 8
  %arrayidx417 = getelementptr inbounds i16**, i16*** %415, i64 %idxprom416
  %416 = load i16**, i16*** %arrayidx417, align 8
  %arrayidx418 = getelementptr inbounds i16*, i16** %416, i64 %idxprom415
  %417 = load i16*, i16** %arrayidx418, align 8
  %arrayidx419 = getelementptr inbounds i16, i16* %417, i64 %idxprom412
  store i16 -1, i16* %arrayidx419, align 2
  %418 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %block_y420 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %418, i32 0, i32 32
  %419 = load i32, i32* %block_y420, align 4
  %420 = load i32, i32* %j, align 4
  %add421 = add nsw i32 %419, %420
  %idxprom422 = sext i32 %add421 to i64
  %421 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %block_x423 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %421, i32 0, i32 31
  %422 = load i32, i32* %block_x423, align 4
  %423 = load i32, i32* %i, align 4
  %add424 = add nsw i32 %422, %423
  %idxprom425 = sext i32 %add424 to i64
  %424 = load i32, i32* %l, align 4
  %idxprom426 = sext i32 %424 to i64
  %425 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_pic_id = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %425, i32 0, i32 33
  %426 = load i64***, i64**** %ref_pic_id, align 8
  %arrayidx427 = getelementptr inbounds i64**, i64*** %426, i64 %idxprom426
  %427 = load i64**, i64*** %arrayidx427, align 8
  %arrayidx428 = getelementptr inbounds i64*, i64** %427, i64 %idxprom425
  %428 = load i64*, i64** %arrayidx428, align 8
  %arrayidx429 = getelementptr inbounds i64, i64* %428, i64 %idxprom422
  store i64 -1, i64* %arrayidx429, align 8
  br label %for.inc.430

for.inc.430:                                      ; preds = %for.body.409
  %429 = load i32, i32* %l, align 4
  %inc431 = add nsw i32 %429, 1
  store i32 %inc431, i32* %l, align 4
  br label %for.cond.406

for.end.432:                                      ; preds = %for.cond.406
  br label %for.inc.433

for.inc.433:                                      ; preds = %for.end.432
  %430 = load i32, i32* %i, align 4
  %inc434 = add nsw i32 %430, 1
  store i32 %inc434, i32* %i, align 4
  br label %for.cond.402

for.end.435:                                      ; preds = %for.cond.402
  br label %for.inc.436

for.inc.436:                                      ; preds = %for.end.435
  %431 = load i32, i32* %j, align 4
  %inc437 = add nsw i32 %431, 1
  store i32 %inc437, i32* %j, align 4
  br label %for.cond.398

for.end.438:                                      ; preds = %for.cond.398
  %432 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type = getelementptr inbounds %struct.macroblock, %struct.macroblock* %432, i32 0, i32 8
  store i32 0, i32* %mb_type, align 4
  %433 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %cbp_blk = getelementptr inbounds %struct.macroblock, %struct.macroblock* %433, i32 0, i32 13
  store i64 0, i64* %cbp_blk, align 8
  %434 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %cbp = getelementptr inbounds %struct.macroblock, %struct.macroblock* %434, i32 0, i32 12
  store i32 0, i32* %cbp, align 4
  store i32 0, i32* %l, align 4
  br label %for.cond.439

for.cond.439:                                     ; preds = %for.inc.472, %for.end.438
  %435 = load i32, i32* %l, align 4
  %cmp440 = icmp slt i32 %435, 2
  br i1 %cmp440, label %for.body.442, label %for.end.474

for.body.442:                                     ; preds = %for.cond.439
  store i32 0, i32* %j, align 4
  br label %for.cond.443

for.cond.443:                                     ; preds = %for.inc.469, %for.body.442
  %436 = load i32, i32* %j, align 4
  %cmp444 = icmp slt i32 %436, 4
  br i1 %cmp444, label %for.body.446, label %for.end.471

for.body.446:                                     ; preds = %for.cond.443
  store i32 0, i32* %i, align 4
  br label %for.cond.447

for.cond.447:                                     ; preds = %for.inc.466, %for.body.446
  %437 = load i32, i32* %i, align 4
  %cmp448 = icmp slt i32 %437, 4
  br i1 %cmp448, label %for.body.450, label %for.end.468

for.body.450:                                     ; preds = %for.cond.447
  store i32 0, i32* %k, align 4
  br label %for.cond.451

for.cond.451:                                     ; preds = %for.inc.463, %for.body.450
  %438 = load i32, i32* %k, align 4
  %cmp452 = icmp slt i32 %438, 2
  br i1 %cmp452, label %for.body.454, label %for.end.465

for.body.454:                                     ; preds = %for.cond.451
  %439 = load i32, i32* %k, align 4
  %idxprom455 = sext i32 %439 to i64
  %440 = load i32, i32* %i, align 4
  %idxprom456 = sext i32 %440 to i64
  %441 = load i32, i32* %j, align 4
  %idxprom457 = sext i32 %441 to i64
  %442 = load i32, i32* %l, align 4
  %idxprom458 = sext i32 %442 to i64
  %443 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mvd = getelementptr inbounds %struct.macroblock, %struct.macroblock* %443, i32 0, i32 9
  %arrayidx459 = getelementptr inbounds [2 x [4 x [4 x [2 x i32]]]], [2 x [4 x [4 x [2 x i32]]]]* %mvd, i32 0, i64 %idxprom458
  %arrayidx460 = getelementptr inbounds [4 x [4 x [2 x i32]]], [4 x [4 x [2 x i32]]]* %arrayidx459, i32 0, i64 %idxprom457
  %arrayidx461 = getelementptr inbounds [4 x [2 x i32]], [4 x [2 x i32]]* %arrayidx460, i32 0, i64 %idxprom456
  %arrayidx462 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx461, i32 0, i64 %idxprom455
  store i32 0, i32* %arrayidx462, align 4
  br label %for.inc.463

for.inc.463:                                      ; preds = %for.body.454
  %444 = load i32, i32* %k, align 4
  %inc464 = add nsw i32 %444, 1
  store i32 %inc464, i32* %k, align 4
  br label %for.cond.451

for.end.465:                                      ; preds = %for.cond.451
  br label %for.inc.466

for.inc.466:                                      ; preds = %for.end.465
  %445 = load i32, i32* %i, align 4
  %inc467 = add nsw i32 %445, 1
  store i32 %inc467, i32* %i, align 4
  br label %for.cond.447

for.end.468:                                      ; preds = %for.cond.447
  br label %for.inc.469

for.inc.469:                                      ; preds = %for.end.468
  %446 = load i32, i32* %j, align 4
  %inc470 = add nsw i32 %446, 1
  store i32 %inc470, i32* %j, align 4
  br label %for.cond.443

for.end.471:                                      ; preds = %for.cond.443
  br label %for.inc.472

for.inc.472:                                      ; preds = %for.end.471
  %447 = load i32, i32* %l, align 4
  %inc473 = add nsw i32 %447, 1
  store i32 %inc473, i32* %l, align 4
  br label %for.cond.439

for.end.474:                                      ; preds = %for.cond.439
  %448 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %cbp_bits = getelementptr inbounds %struct.macroblock, %struct.macroblock* %448, i32 0, i32 16
  store i64 0, i64* %cbp_bits, align 8
  %449 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %c_ipred_mode = getelementptr inbounds %struct.macroblock, %struct.macroblock* %449, i32 0, i32 20
  store i32 0, i32* %c_ipred_mode, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond.475

for.cond.475:                                     ; preds = %for.inc.481, %for.end.474
  %450 = load i32, i32* %i, align 4
  %cmp476 = icmp slt i32 %450, 16
  br i1 %cmp476, label %for.body.478, label %for.end.483

for.body.478:                                     ; preds = %for.cond.475
  %451 = load i32, i32* %i, align 4
  %idxprom479 = sext i32 %451 to i64
  %452 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %intra_pred_modes = getelementptr inbounds %struct.macroblock, %struct.macroblock* %452, i32 0, i32 10
  %arrayidx480 = getelementptr inbounds [16 x i32], [16 x i32]* %intra_pred_modes, i32 0, i64 %idxprom479
  store i32 2, i32* %arrayidx480, align 4
  br label %for.inc.481

for.inc.481:                                      ; preds = %for.body.478
  %453 = load i32, i32* %i, align 4
  %inc482 = add nsw i32 %453, 1
  store i32 %inc482, i32* %i, align 4
  br label %for.cond.475

for.end.483:                                      ; preds = %for.cond.475
  store i32 0, i32* %i, align 4
  br label %for.cond.484

for.cond.484:                                     ; preds = %for.inc.490, %for.end.483
  %454 = load i32, i32* %i, align 4
  %cmp485 = icmp slt i32 %454, 16
  br i1 %cmp485, label %for.body.487, label %for.end.492

for.body.487:                                     ; preds = %for.cond.484
  %455 = load i32, i32* %i, align 4
  %idxprom488 = sext i32 %455 to i64
  %456 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %intra_pred_modes8x8 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %456, i32 0, i32 11
  %arrayidx489 = getelementptr inbounds [16 x i32], [16 x i32]* %intra_pred_modes8x8, i32 0, i64 %idxprom488
  store i32 2, i32* %arrayidx489, align 4
  br label %for.inc.490

for.inc.490:                                      ; preds = %for.body.487
  %457 = load i32, i32* %i, align 4
  %inc491 = add nsw i32 %457, 1
  store i32 %inc491, i32* %i, align 4
  br label %for.cond.484

for.end.492:                                      ; preds = %for.cond.484
  %458 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %UseConstrainedIntraPred = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %458, i32 0, i32 24
  %459 = load i32, i32* %UseConstrainedIntraPred, align 4
  %tobool493 = icmp ne i32 %459, 0
  br i1 %tobool493, label %if.then.494, label %if.end.498

if.then.494:                                      ; preds = %for.end.492
  %460 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr495 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %460, i32 0, i32 3
  %461 = load i32, i32* %current_mb_nr495, align 4
  %idxprom496 = sext i32 %461 to i64
  %462 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %intra_block = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %462, i32 0, i32 54
  %463 = load i32*, i32** %intra_block, align 8
  %arrayidx497 = getelementptr inbounds i32, i32* %463, i64 %idxprom496
  store i32 1, i32* %arrayidx497, align 4
  br label %if.end.498

if.end.498:                                       ; preds = %if.then.494, %for.end.492
  %464 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %LFDisableIdc499 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %464, i32 0, i32 75
  %465 = load i32, i32* %LFDisableIdc499, align 4
  %466 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %lf_disable = getelementptr inbounds %struct.macroblock, %struct.macroblock* %466, i32 0, i32 17
  store i32 %465, i32* %lf_disable, align 4
  %467 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %LFAlphaC0Offset500 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %467, i32 0, i32 76
  %468 = load i32, i32* %LFAlphaC0Offset500, align 4
  %469 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %lf_alpha_c0_offset = getelementptr inbounds %struct.macroblock, %struct.macroblock* %469, i32 0, i32 18
  store i32 %468, i32* %lf_alpha_c0_offset, align 4
  %470 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %LFBetaOffset501 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %470, i32 0, i32 77
  %471 = load i32, i32* %LFBetaOffset501, align 4
  %472 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %lf_beta_offset = getelementptr inbounds %struct.macroblock, %struct.macroblock* %472, i32 0, i32 19
  store i32 %471, i32* %lf_beta_offset, align 4
  %473 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr502 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %473, i32 0, i32 3
  %474 = load i32, i32* %current_mb_nr502, align 4
  %cmp503 = icmp eq i32 %474, 0
  br i1 %cmp503, label %if.then.505, label %if.else.507

if.then.505:                                      ; preds = %if.end.498
  %475 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %bitcounter = getelementptr inbounds %struct.macroblock, %struct.macroblock* %475, i32 0, i32 5
  %arrayidx506 = getelementptr inbounds [8 x i32], [8 x i32]* %bitcounter, i32 0, i64 0
  store i32 0, i32* %arrayidx506, align 4
  br label %if.end.521

if.else.507:                                      ; preds = %if.end.498
  %476 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %slice_nr508 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %476, i32 0, i32 1
  %477 = load i32, i32* %slice_nr508, align 4
  %478 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr509 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %478, i32 0, i32 3
  %479 = load i32, i32* %current_mb_nr509, align 4
  %sub510 = sub nsw i32 %479, 1
  %idxprom511 = sext i32 %sub510 to i64
  %480 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data512 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %480, i32 0, i32 51
  %481 = load %struct.macroblock*, %struct.macroblock** %mb_data512, align 8
  %arrayidx513 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %481, i64 %idxprom511
  %slice_nr514 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx513, i32 0, i32 1
  %482 = load i32, i32* %slice_nr514, align 4
  %cmp515 = icmp eq i32 %477, %482
  br i1 %cmp515, label %if.then.517, label %if.end.520

if.then.517:                                      ; preds = %if.else.507
  %483 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %bitcounter518 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %483, i32 0, i32 5
  %arrayidx519 = getelementptr inbounds [8 x i32], [8 x i32]* %bitcounter518, i32 0, i64 0
  store i32 0, i32* %arrayidx519, align 4
  br label %if.end.520

if.end.520:                                       ; preds = %if.then.517, %if.else.507
  br label %if.end.521

if.end.521:                                       ; preds = %if.end.520, %if.then.505
  %484 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %bitcounter522 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %484, i32 0, i32 5
  %arrayidx523 = getelementptr inbounds [8 x i32], [8 x i32]* %bitcounter522, i32 0, i64 2
  store i32 0, i32* %arrayidx523, align 4
  %485 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %bitcounter524 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %485, i32 0, i32 5
  %arrayidx525 = getelementptr inbounds [8 x i32], [8 x i32]* %bitcounter524, i32 0, i64 5
  store i32 0, i32* %arrayidx525, align 4
  %486 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %bitcounter526 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %486, i32 0, i32 5
  %arrayidx527 = getelementptr inbounds [8 x i32], [8 x i32]* %bitcounter526, i32 0, i64 3
  store i32 0, i32* %arrayidx527, align 4
  %487 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %bitcounter528 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %487, i32 0, i32 5
  %arrayidx529 = getelementptr inbounds [8 x i32], [8 x i32]* %bitcounter528, i32 0, i64 4
  store i32 0, i32* %arrayidx529, align 4
  %488 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %bitcounter530 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %488, i32 0, i32 5
  %arrayidx531 = getelementptr inbounds [8 x i32], [8 x i32]* %bitcounter530, i32 0, i64 7
  store i32 0, i32* %arrayidx531, align 4
  %489 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %bitcounter532 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %489, i32 0, i32 5
  %arrayidx533 = getelementptr inbounds [8 x i32], [8 x i32]* %bitcounter532, i32 0, i64 6
  store i32 0, i32* %arrayidx533, align 4
  %490 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %FMEnable = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %490, i32 0, i32 134
  %491 = load i32, i32* %FMEnable, align 4
  %tobool534 = icmp ne i32 %491, 0
  br i1 %tobool534, label %if.end.536, label %if.then.535

if.then.535:                                      ; preds = %if.end.521
  call void (...) @ResetFastFullIntegerSearch()
  br label %if.end.536

if.end.536:                                       ; preds = %if.then.535, %if.end.521
  ret void
}

declare i32 @FmoGetPreviousMBNr(i32) #1

declare void @updateRCModel(...) #1

declare i32 @updateQuantizationParameter(i32) #1

declare void @CheckAvailabilityOfNeighbors(...) #1

declare void @CheckAvailabilityOfNeighborsCABAC(...) #1

declare void @ResetFastFullIntegerSearch(...) #1

; Function Attrs: nounwind uwtable
define void @terminate_macroblock(i32* %end_of_slice, i32* %recode_macroblock) #0 {
entry:
  %end_of_slice.addr = alloca i32*, align 8
  %recode_macroblock.addr = alloca i32*, align 8
  %i = alloca i32, align 4
  %currSlice = alloca %struct.Slice*, align 8
  %currMB = alloca %struct.macroblock*, align 8
  %currSE = alloca %struct.syntaxelement*, align 8
  %partMap = alloca i32*, align 8
  %dataPart = alloca %struct.datapartition*, align 8
  %currStream = alloca %struct.Bitstream*, align 8
  %rlc_bits = alloca i32, align 4
  %eep = alloca %struct.EncodingEnvironment*, align 8
  %use_bitstream_backing = alloca i32, align 4
  %new_slice = alloca i32, align 4
  store i32* %end_of_slice, i32** %end_of_slice.addr, align 8
  store i32* %recode_macroblock, i32** %recode_macroblock.addr, align 8
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %currentSlice = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i32 0, i32 50
  %1 = load %struct.Slice*, %struct.Slice** %currentSlice, align 8
  store %struct.Slice* %1, %struct.Slice** %currSlice, align 8
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 3
  %3 = load i32, i32* %current_mb_nr, align 4
  %idxprom = sext i32 %3 to i64
  %4 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %4, i32 0, i32 51
  %5 = load %struct.macroblock*, %struct.macroblock** %mb_data, align 8
  %arrayidx = getelementptr inbounds %struct.macroblock, %struct.macroblock* %5, i64 %idxprom
  store %struct.macroblock* %arrayidx, %struct.macroblock** %currMB, align 8
  %6 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %currSEnr = getelementptr inbounds %struct.macroblock, %struct.macroblock* %6, i32 0, i32 0
  %7 = load i32, i32* %currSEnr, align 4
  %idxprom1 = sext i32 %7 to i64
  %8 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %MB_SyntaxElements = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %8, i32 0, i32 52
  %arrayidx2 = getelementptr inbounds [1200 x %struct.syntaxelement], [1200 x %struct.syntaxelement]* %MB_SyntaxElements, i32 0, i64 %idxprom1
  store %struct.syntaxelement* %arrayidx2, %struct.syntaxelement** %currSE, align 8
  %9 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %partition_mode = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %9, i32 0, i32 61
  %10 = load i32, i32* %partition_mode, align 4
  %idxprom3 = sext i32 %10 to i64
  %arrayidx4 = getelementptr inbounds [2 x i32*], [2 x i32*]* @assignSE2partition, i32 0, i64 %idxprom3
  %11 = load i32*, i32** %arrayidx4, align 8
  store i32* %11, i32** %partMap, align 8
  store i32 0, i32* %rlc_bits, align 4
  %12 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %slice_mode = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %12, i32 0, i32 22
  %13 = load i32, i32* %slice_mode, align 4
  %cmp = icmp eq i32 %13, 2
  br i1 %cmp, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %entry
  %14 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %slice_mode5 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %14, i32 0, i32 22
  %15 = load i32, i32* %slice_mode5, align 4
  %cmp6 = icmp eq i32 %15, 3
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %entry
  %16 = phi i1 [ true, %entry ], [ %cmp6, %lor.rhs ]
  %lor.ext = zext i1 %16 to i32
  store i32 %lor.ext, i32* %use_bitstream_backing, align 4
  store i32 0, i32* %new_slice, align 4
  %17 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr7 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %17, i32 0, i32 3
  %18 = load i32, i32* %current_mb_nr7, align 4
  %cmp8 = icmp eq i32 %18, 0
  br i1 %cmp8, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %lor.end
  %19 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr9 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %19, i32 0, i32 3
  %20 = load i32, i32* %current_mb_nr9, align 4
  %call = call i32 @FmoGetPreviousMBNr(i32 %20)
  %cmp10 = icmp slt i32 %call, 0
  br i1 %cmp10, label %if.then, label %if.else

if.then:                                          ; preds = %lor.lhs.false, %lor.end
  store i32 1, i32* %new_slice, align 4
  br label %if.end.18

if.else:                                          ; preds = %lor.lhs.false
  %21 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr11 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %21, i32 0, i32 3
  %22 = load i32, i32* %current_mb_nr11, align 4
  %call12 = call i32 @FmoGetPreviousMBNr(i32 %22)
  %idxprom13 = sext i32 %call12 to i64
  %23 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data14 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %23, i32 0, i32 51
  %24 = load %struct.macroblock*, %struct.macroblock** %mb_data14, align 8
  %arrayidx15 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %24, i64 %idxprom13
  %slice_nr = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx15, i32 0, i32 1
  %25 = load i32, i32* %slice_nr, align 4
  %26 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_slice_nr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %26, i32 0, i32 5
  %27 = load i32, i32* %current_slice_nr, align 4
  %cmp16 = icmp ne i32 %25, %27
  br i1 %cmp16, label %if.then.17, label %if.end

if.then.17:                                       ; preds = %if.else
  store i32 1, i32* %new_slice, align 4
  br label %if.end

if.end:                                           ; preds = %if.then.17, %if.else
  br label %if.end.18

if.end.18:                                        ; preds = %if.end, %if.then
  %28 = load i32*, i32** %recode_macroblock.addr, align 8
  store i32 0, i32* %28, align 4
  %29 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %slice_mode19 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %29, i32 0, i32 22
  %30 = load i32, i32* %slice_mode19, align 4
  switch i32 %30, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb.29
    i32 2, label %sw.bb.42
    i32 3, label %sw.bb.96
  ]

sw.bb:                                            ; preds = %if.end.18
  %31 = load %struct.Slice*, %struct.Slice** %currSlice, align 8
  %num_mb = getelementptr inbounds %struct.Slice, %struct.Slice* %31, i32 0, i32 5
  %32 = load i32, i32* %num_mb, align 4
  %inc = add nsw i32 %32, 1
  store i32 %inc, i32* %num_mb, align 4
  %33 = load i32*, i32** %recode_macroblock.addr, align 8
  store i32 0, i32* %33, align 4
  %34 = load %struct.Slice*, %struct.Slice** %currSlice, align 8
  %num_mb20 = getelementptr inbounds %struct.Slice, %struct.Slice* %34, i32 0, i32 5
  %35 = load i32, i32* %num_mb20, align 4
  %36 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %total_number_mb = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %36, i32 0, i32 4
  %37 = load i32, i32* %total_number_mb, align 4
  %cmp21 = icmp eq i32 %35, %37
  br i1 %cmp21, label %if.then.22, label %if.end.23

if.then.22:                                       ; preds = %sw.bb
  %38 = load i32*, i32** %end_of_slice.addr, align 8
  store i32 1, i32* %38, align 4
  br label %if.end.23

if.end.23:                                        ; preds = %if.then.22, %sw.bb
  %39 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr24 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %39, i32 0, i32 3
  %40 = load i32, i32* %current_mb_nr24, align 4
  %41 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr25 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %41, i32 0, i32 3
  %42 = load i32, i32* %current_mb_nr25, align 4
  %call26 = call i32 @FmoMB2SliceGroup(i32 %42)
  %call27 = call i32 @FmoGetLastCodedMBOfSliceGroup(i32 %call26)
  %cmp28 = icmp eq i32 %40, %call27
  %conv = zext i1 %cmp28 to i32
  %43 = load i32*, i32** %end_of_slice.addr, align 8
  %44 = load i32, i32* %43, align 4
  %or = or i32 %44, %conv
  store i32 %or, i32* %43, align 4
  br label %sw.epilog

sw.bb.29:                                         ; preds = %if.end.18
  %45 = load %struct.Slice*, %struct.Slice** %currSlice, align 8
  %num_mb30 = getelementptr inbounds %struct.Slice, %struct.Slice* %45, i32 0, i32 5
  %46 = load i32, i32* %num_mb30, align 4
  %inc31 = add nsw i32 %46, 1
  store i32 %inc31, i32* %num_mb30, align 4
  %47 = load i32*, i32** %recode_macroblock.addr, align 8
  store i32 0, i32* %47, align 4
  %48 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr32 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %48, i32 0, i32 3
  %49 = load i32, i32* %current_mb_nr32, align 4
  %50 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr33 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %50, i32 0, i32 3
  %51 = load i32, i32* %current_mb_nr33, align 4
  %call34 = call i32 @FmoMB2SliceGroup(i32 %51)
  %call35 = call i32 @FmoGetLastCodedMBOfSliceGroup(i32 %call34)
  %cmp36 = icmp eq i32 %49, %call35
  %conv37 = zext i1 %cmp36 to i32
  %52 = load i32*, i32** %end_of_slice.addr, align 8
  store i32 %conv37, i32* %52, align 4
  %53 = load %struct.Slice*, %struct.Slice** %currSlice, align 8
  %num_mb38 = getelementptr inbounds %struct.Slice, %struct.Slice* %53, i32 0, i32 5
  %54 = load i32, i32* %num_mb38, align 4
  %55 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %slice_argument = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %55, i32 0, i32 23
  %56 = load i32, i32* %slice_argument, align 4
  %cmp39 = icmp sge i32 %54, %56
  %conv40 = zext i1 %cmp39 to i32
  %57 = load i32*, i32** %end_of_slice.addr, align 8
  %58 = load i32, i32* %57, align 4
  %or41 = or i32 %58, %conv40
  store i32 %or41, i32* %57, align 4
  br label %sw.epilog

sw.bb.42:                                         ; preds = %if.end.18
  %59 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %cod_counter = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %59, i32 0, i32 27
  %60 = load i32, i32* %cod_counter, align 4
  %tobool = icmp ne i32 %60, 0
  br i1 %tobool, label %if.then.43, label %if.end.54

if.then.43:                                       ; preds = %sw.bb.42
  %61 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %cod_counter44 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %61, i32 0, i32 27
  %62 = load i32, i32* %cod_counter44, align 4
  %63 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %value1 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %63, i32 0, i32 1
  store i32 %62, i32* %value1, align 4
  %64 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %value2 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %64, i32 0, i32 2
  store i32 0, i32* %value2, align 4
  %65 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %mapping = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %65, i32 0, i32 8
  store void (i32, i32, i32*, i32*)* @ue_linfo, void (i32, i32, i32*, i32*)** %mapping, align 8
  %66 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %type = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %66, i32 0, i32 0
  store i32 2, i32* %type, align 4
  %67 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %type45 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %67, i32 0, i32 0
  %68 = load i32, i32* %type45, align 4
  %idxprom46 = sext i32 %68 to i64
  %69 = load i32*, i32** %partMap, align 8
  %arrayidx47 = getelementptr inbounds i32, i32* %69, i64 %idxprom46
  %70 = load i32, i32* %arrayidx47, align 4
  %idxprom48 = sext i32 %70 to i64
  %71 = load %struct.Slice*, %struct.Slice** %currSlice, align 8
  %partArr = getelementptr inbounds %struct.Slice, %struct.Slice* %71, i32 0, i32 6
  %72 = load %struct.datapartition*, %struct.datapartition** %partArr, align 8
  %arrayidx49 = getelementptr inbounds %struct.datapartition, %struct.datapartition* %72, i64 %idxprom48
  store %struct.datapartition* %arrayidx49, %struct.datapartition** %dataPart, align 8
  %73 = load %struct.datapartition*, %struct.datapartition** %dataPart, align 8
  %writeSyntaxElement = getelementptr inbounds %struct.datapartition, %struct.datapartition* %73, i32 0, i32 2
  %74 = load i32 (%struct.syntaxelement*, %struct.datapartition*)*, i32 (%struct.syntaxelement*, %struct.datapartition*)** %writeSyntaxElement, align 8
  %75 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %76 = load %struct.datapartition*, %struct.datapartition** %dataPart, align 8
  %call50 = call i32 %74(%struct.syntaxelement* %75, %struct.datapartition* %76)
  %77 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %len = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %77, i32 0, i32 3
  %78 = load i32, i32* %len, align 4
  store i32 %78, i32* %rlc_bits, align 4
  %79 = load %struct.datapartition*, %struct.datapartition** %dataPart, align 8
  %bitstream = getelementptr inbounds %struct.datapartition, %struct.datapartition* %79, i32 0, i32 0
  %80 = load %struct.Bitstream*, %struct.Bitstream** %bitstream, align 8
  store %struct.Bitstream* %80, %struct.Bitstream** %currStream, align 8
  %81 = load %struct.Bitstream*, %struct.Bitstream** %currStream, align 8
  %bits_to_go = getelementptr inbounds %struct.Bitstream, %struct.Bitstream* %81, i32 0, i32 1
  %82 = load i32, i32* %bits_to_go, align 4
  %83 = load %struct.Bitstream*, %struct.Bitstream** %currStream, align 8
  %bits_to_go_skip = getelementptr inbounds %struct.Bitstream, %struct.Bitstream* %83, i32 0, i32 8
  store i32 %82, i32* %bits_to_go_skip, align 4
  %84 = load %struct.Bitstream*, %struct.Bitstream** %currStream, align 8
  %byte_pos = getelementptr inbounds %struct.Bitstream, %struct.Bitstream* %84, i32 0, i32 0
  %85 = load i32, i32* %byte_pos, align 4
  %86 = load %struct.Bitstream*, %struct.Bitstream** %currStream, align 8
  %byte_pos_skip = getelementptr inbounds %struct.Bitstream, %struct.Bitstream* %86, i32 0, i32 7
  store i32 %85, i32* %byte_pos_skip, align 4
  %87 = load %struct.Bitstream*, %struct.Bitstream** %currStream, align 8
  %byte_buf = getelementptr inbounds %struct.Bitstream, %struct.Bitstream* %87, i32 0, i32 2
  %88 = load i8, i8* %byte_buf, align 1
  %89 = load %struct.Bitstream*, %struct.Bitstream** %currStream, align 8
  %byte_buf_skip = getelementptr inbounds %struct.Bitstream, %struct.Bitstream* %89, i32 0, i32 6
  store i8 %88, i8* %byte_buf_skip, align 1
  %90 = load %struct.Bitstream*, %struct.Bitstream** %currStream, align 8
  %stored_bits_to_go = getelementptr inbounds %struct.Bitstream, %struct.Bitstream* %90, i32 0, i32 4
  %91 = load i32, i32* %stored_bits_to_go, align 4
  %92 = load %struct.Bitstream*, %struct.Bitstream** %currStream, align 8
  %bits_to_go51 = getelementptr inbounds %struct.Bitstream, %struct.Bitstream* %92, i32 0, i32 1
  store i32 %91, i32* %bits_to_go51, align 4
  %93 = load %struct.Bitstream*, %struct.Bitstream** %currStream, align 8
  %stored_byte_pos = getelementptr inbounds %struct.Bitstream, %struct.Bitstream* %93, i32 0, i32 3
  %94 = load i32, i32* %stored_byte_pos, align 4
  %95 = load %struct.Bitstream*, %struct.Bitstream** %currStream, align 8
  %byte_pos52 = getelementptr inbounds %struct.Bitstream, %struct.Bitstream* %95, i32 0, i32 0
  store i32 %94, i32* %byte_pos52, align 4
  %96 = load %struct.Bitstream*, %struct.Bitstream** %currStream, align 8
  %stored_byte_buf = getelementptr inbounds %struct.Bitstream, %struct.Bitstream* %96, i32 0, i32 5
  %97 = load i8, i8* %stored_byte_buf, align 1
  %98 = load %struct.Bitstream*, %struct.Bitstream** %currStream, align 8
  %byte_buf53 = getelementptr inbounds %struct.Bitstream, %struct.Bitstream* %98, i32 0, i32 2
  store i8 %97, i8* %byte_buf53, align 1
  store i32 1, i32* @terminate_macroblock.skip, align 4
  br label %if.end.54

if.end.54:                                        ; preds = %if.then.43, %sw.bb.42
  %99 = load i32, i32* %new_slice, align 4
  %tobool55 = icmp ne i32 %99, 0
  br i1 %tobool55, label %if.end.66, label %if.then.56

if.then.56:                                       ; preds = %if.end.54
  %100 = load i32, i32* %rlc_bits, align 4
  %call57 = call i32 @slice_too_big(i32 %100)
  %tobool58 = icmp ne i32 %call57, 0
  br i1 %tobool58, label %if.then.59, label %if.else.60

if.then.59:                                       ; preds = %if.then.56
  %101 = load i32*, i32** %recode_macroblock.addr, align 8
  store i32 1, i32* %101, align 4
  %102 = load i32*, i32** %end_of_slice.addr, align 8
  store i32 1, i32* %102, align 4
  br label %if.end.65

if.else.60:                                       ; preds = %if.then.56
  %103 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %cod_counter61 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %103, i32 0, i32 27
  %104 = load i32, i32* %cod_counter61, align 4
  %tobool62 = icmp ne i32 %104, 0
  br i1 %tobool62, label %if.end.64, label %if.then.63

if.then.63:                                       ; preds = %if.else.60
  store i32 0, i32* @terminate_macroblock.skip, align 4
  br label %if.end.64

if.end.64:                                        ; preds = %if.then.63, %if.else.60
  br label %if.end.65

if.end.65:                                        ; preds = %if.end.64, %if.then.59
  br label %if.end.66

if.end.66:                                        ; preds = %if.end.65, %if.end.54
  %105 = load i32*, i32** %recode_macroblock.addr, align 8
  %106 = load i32, i32* %105, align 4
  %cmp67 = icmp eq i32 %106, 0
  br i1 %cmp67, label %land.lhs.true, label %if.end.80

land.lhs.true:                                    ; preds = %if.end.66
  %107 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr69 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %107, i32 0, i32 3
  %108 = load i32, i32* %current_mb_nr69, align 4
  %109 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr70 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %109, i32 0, i32 3
  %110 = load i32, i32* %current_mb_nr70, align 4
  %call71 = call i32 @FmoMB2SliceGroup(i32 %110)
  %call72 = call i32 @FmoGetLastCodedMBOfSliceGroup(i32 %call71)
  %cmp73 = icmp eq i32 %108, %call72
  br i1 %cmp73, label %if.then.75, label %if.end.80

if.then.75:                                       ; preds = %land.lhs.true
  %111 = load i32*, i32** %end_of_slice.addr, align 8
  store i32 1, i32* %111, align 4
  %112 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %cod_counter76 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %112, i32 0, i32 27
  %113 = load i32, i32* %cod_counter76, align 4
  %tobool77 = icmp ne i32 %113, 0
  br i1 %tobool77, label %if.end.79, label %if.then.78

if.then.78:                                       ; preds = %if.then.75
  store i32 0, i32* @terminate_macroblock.skip, align 4
  br label %if.end.79

if.end.79:                                        ; preds = %if.then.78, %if.then.75
  br label %if.end.80

if.end.80:                                        ; preds = %if.end.79, %land.lhs.true, %if.end.66
  %114 = load i32, i32* %new_slice, align 4
  %tobool81 = icmp ne i32 %114, 0
  br i1 %tobool81, label %land.lhs.true.82, label %if.end.90

land.lhs.true.82:                                 ; preds = %if.end.80
  %115 = load i32, i32* %rlc_bits, align 4
  %call83 = call i32 @slice_too_big(i32 %115)
  %tobool84 = icmp ne i32 %call83, 0
  br i1 %tobool84, label %if.then.85, label %if.end.90

if.then.85:                                       ; preds = %land.lhs.true.82
  %116 = load i32*, i32** %end_of_slice.addr, align 8
  store i32 1, i32* %116, align 4
  %117 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %cod_counter86 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %117, i32 0, i32 27
  %118 = load i32, i32* %cod_counter86, align 4
  %tobool87 = icmp ne i32 %118, 0
  br i1 %tobool87, label %if.end.89, label %if.then.88

if.then.88:                                       ; preds = %if.then.85
  store i32 0, i32* @terminate_macroblock.skip, align 4
  br label %if.end.89

if.end.89:                                        ; preds = %if.then.88, %if.then.85
  br label %if.end.90

if.end.90:                                        ; preds = %if.end.89, %land.lhs.true.82, %if.end.80
  %119 = load i32*, i32** %recode_macroblock.addr, align 8
  %120 = load i32, i32* %119, align 4
  %tobool91 = icmp ne i32 %120, 0
  br i1 %tobool91, label %if.end.95, label %if.then.92

if.then.92:                                       ; preds = %if.end.90
  %121 = load %struct.Slice*, %struct.Slice** %currSlice, align 8
  %num_mb93 = getelementptr inbounds %struct.Slice, %struct.Slice* %121, i32 0, i32 5
  %122 = load i32, i32* %num_mb93, align 4
  %inc94 = add nsw i32 %122, 1
  store i32 %inc94, i32* %num_mb93, align 4
  br label %if.end.95

if.end.95:                                        ; preds = %if.then.92, %if.end.90
  br label %sw.epilog

sw.bb.96:                                         ; preds = %if.end.18
  %123 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr97 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %123, i32 0, i32 3
  %124 = load i32, i32* %current_mb_nr97, align 4
  %cmp98 = icmp sgt i32 %124, 0
  br i1 %cmp98, label %land.lhs.true.100, label %if.end.107

land.lhs.true.100:                                ; preds = %sw.bb.96
  %125 = load i32, i32* %new_slice, align 4
  %tobool101 = icmp ne i32 %125, 0
  br i1 %tobool101, label %if.end.107, label %if.then.102

if.then.102:                                      ; preds = %land.lhs.true.100
  %126 = load %struct.Slice*, %struct.Slice** %currSlice, align 8
  %slice_too_big = getelementptr inbounds %struct.Slice, %struct.Slice* %126, i32 0, i32 18
  %127 = load i32 (i32)*, i32 (i32)** %slice_too_big, align 8
  %128 = load i32, i32* %rlc_bits, align 4
  %call103 = call i32 %127(i32 %128)
  %tobool104 = icmp ne i32 %call103, 0
  br i1 %tobool104, label %if.then.105, label %if.end.106

if.then.105:                                      ; preds = %if.then.102
  %129 = load i32*, i32** %recode_macroblock.addr, align 8
  store i32 1, i32* %129, align 4
  %130 = load i32*, i32** %end_of_slice.addr, align 8
  store i32 1, i32* %130, align 4
  br label %if.end.106

if.end.106:                                       ; preds = %if.then.105, %if.then.102
  br label %if.end.107

if.end.107:                                       ; preds = %if.end.106, %land.lhs.true.100, %sw.bb.96
  %131 = load i32*, i32** %recode_macroblock.addr, align 8
  %132 = load i32, i32* %131, align 4
  %cmp108 = icmp eq i32 %132, 0
  br i1 %cmp108, label %land.lhs.true.110, label %if.end.118

land.lhs.true.110:                                ; preds = %if.end.107
  %133 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr111 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %133, i32 0, i32 3
  %134 = load i32, i32* %current_mb_nr111, align 4
  %135 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr112 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %135, i32 0, i32 3
  %136 = load i32, i32* %current_mb_nr112, align 4
  %call113 = call i32 @FmoMB2SliceGroup(i32 %136)
  %call114 = call i32 @FmoGetLastCodedMBOfSliceGroup(i32 %call113)
  %cmp115 = icmp eq i32 %134, %call114
  br i1 %cmp115, label %if.then.117, label %if.end.118

if.then.117:                                      ; preds = %land.lhs.true.110
  %137 = load i32*, i32** %end_of_slice.addr, align 8
  store i32 1, i32* %137, align 4
  br label %if.end.118

if.end.118:                                       ; preds = %if.then.117, %land.lhs.true.110, %if.end.107
  br label %sw.epilog

sw.default:                                       ; preds = %if.end.18
  %138 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %slice_mode119 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %138, i32 0, i32 22
  %139 = load i32, i32* %slice_mode119, align 4
  %call120 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i32 0, i32 0), i64 300, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i32 0, i32 0), i32 %139) #3
  call void @error(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i32 0, i32 0), i32 600)
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %if.end.118, %if.end.95, %sw.bb.29, %if.end.23
  %140 = load i32*, i32** %recode_macroblock.addr, align 8
  %141 = load i32, i32* %140, align 4
  %cmp121 = icmp eq i32 %141, 1
  br i1 %cmp121, label %if.then.123, label %if.end.141

if.then.123:                                      ; preds = %sw.epilog
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then.123
  %142 = load i32, i32* %i, align 4
  %143 = load %struct.Slice*, %struct.Slice** %currSlice, align 8
  %max_part_nr = getelementptr inbounds %struct.Slice, %struct.Slice* %143, i32 0, i32 4
  %144 = load i32, i32* %max_part_nr, align 4
  %cmp124 = icmp slt i32 %142, %144
  br i1 %cmp124, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %145 = load i32, i32* %i, align 4
  %idxprom126 = sext i32 %145 to i64
  %146 = load %struct.Slice*, %struct.Slice** %currSlice, align 8
  %partArr127 = getelementptr inbounds %struct.Slice, %struct.Slice* %146, i32 0, i32 6
  %147 = load %struct.datapartition*, %struct.datapartition** %partArr127, align 8
  %arrayidx128 = getelementptr inbounds %struct.datapartition, %struct.datapartition* %147, i64 %idxprom126
  store %struct.datapartition* %arrayidx128, %struct.datapartition** %dataPart, align 8
  %148 = load %struct.datapartition*, %struct.datapartition** %dataPart, align 8
  %bitstream129 = getelementptr inbounds %struct.datapartition, %struct.datapartition* %148, i32 0, i32 0
  %149 = load %struct.Bitstream*, %struct.Bitstream** %bitstream129, align 8
  store %struct.Bitstream* %149, %struct.Bitstream** %currStream, align 8
  %150 = load %struct.Bitstream*, %struct.Bitstream** %currStream, align 8
  %stored_bits_to_go130 = getelementptr inbounds %struct.Bitstream, %struct.Bitstream* %150, i32 0, i32 4
  %151 = load i32, i32* %stored_bits_to_go130, align 4
  %152 = load %struct.Bitstream*, %struct.Bitstream** %currStream, align 8
  %bits_to_go131 = getelementptr inbounds %struct.Bitstream, %struct.Bitstream* %152, i32 0, i32 1
  store i32 %151, i32* %bits_to_go131, align 4
  %153 = load %struct.Bitstream*, %struct.Bitstream** %currStream, align 8
  %stored_byte_pos132 = getelementptr inbounds %struct.Bitstream, %struct.Bitstream* %153, i32 0, i32 3
  %154 = load i32, i32* %stored_byte_pos132, align 4
  %155 = load %struct.Bitstream*, %struct.Bitstream** %currStream, align 8
  %byte_pos133 = getelementptr inbounds %struct.Bitstream, %struct.Bitstream* %155, i32 0, i32 0
  store i32 %154, i32* %byte_pos133, align 4
  %156 = load %struct.Bitstream*, %struct.Bitstream** %currStream, align 8
  %stored_byte_buf134 = getelementptr inbounds %struct.Bitstream, %struct.Bitstream* %156, i32 0, i32 5
  %157 = load i8, i8* %stored_byte_buf134, align 1
  %158 = load %struct.Bitstream*, %struct.Bitstream** %currStream, align 8
  %byte_buf135 = getelementptr inbounds %struct.Bitstream, %struct.Bitstream* %158, i32 0, i32 2
  store i8 %157, i8* %byte_buf135, align 1
  %159 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %symbol_mode = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %159, i32 0, i32 59
  %160 = load i32, i32* %symbol_mode, align 4
  %cmp136 = icmp eq i32 %160, 1
  br i1 %cmp136, label %if.then.138, label %if.end.139

if.then.138:                                      ; preds = %for.body
  %161 = load %struct.datapartition*, %struct.datapartition** %dataPart, align 8
  %ee_cabac = getelementptr inbounds %struct.datapartition, %struct.datapartition* %161, i32 0, i32 1
  store %struct.EncodingEnvironment* %ee_cabac, %struct.EncodingEnvironment** %eep, align 8
  %162 = load %struct.EncodingEnvironment*, %struct.EncodingEnvironment** %eep, align 8
  %ElowS = getelementptr inbounds %struct.EncodingEnvironment, %struct.EncodingEnvironment* %162, i32 0, i32 7
  %163 = load i32, i32* %ElowS, align 4
  %164 = load %struct.EncodingEnvironment*, %struct.EncodingEnvironment** %eep, align 8
  %Elow = getelementptr inbounds %struct.EncodingEnvironment, %struct.EncodingEnvironment* %164, i32 0, i32 0
  store i32 %163, i32* %Elow, align 4
  %165 = load %struct.EncodingEnvironment*, %struct.EncodingEnvironment** %eep, align 8
  %ErangeS = getelementptr inbounds %struct.EncodingEnvironment, %struct.EncodingEnvironment* %165, i32 0, i32 8
  %166 = load i32, i32* %ErangeS, align 4
  %167 = load %struct.EncodingEnvironment*, %struct.EncodingEnvironment** %eep, align 8
  %Erange = getelementptr inbounds %struct.EncodingEnvironment, %struct.EncodingEnvironment* %167, i32 0, i32 1
  store i32 %166, i32* %Erange, align 4
  %168 = load %struct.EncodingEnvironment*, %struct.EncodingEnvironment** %eep, align 8
  %EbufferS = getelementptr inbounds %struct.EncodingEnvironment, %struct.EncodingEnvironment* %168, i32 0, i32 9
  %169 = load i32, i32* %EbufferS, align 4
  %170 = load %struct.EncodingEnvironment*, %struct.EncodingEnvironment** %eep, align 8
  %Ebuffer = getelementptr inbounds %struct.EncodingEnvironment, %struct.EncodingEnvironment* %170, i32 0, i32 2
  store i32 %169, i32* %Ebuffer, align 4
  %171 = load %struct.EncodingEnvironment*, %struct.EncodingEnvironment** %eep, align 8
  %Ebits_to_goS = getelementptr inbounds %struct.EncodingEnvironment, %struct.EncodingEnvironment* %171, i32 0, i32 10
  %172 = load i32, i32* %Ebits_to_goS, align 4
  %173 = load %struct.EncodingEnvironment*, %struct.EncodingEnvironment** %eep, align 8
  %Ebits_to_go = getelementptr inbounds %struct.EncodingEnvironment, %struct.EncodingEnvironment* %173, i32 0, i32 3
  store i32 %172, i32* %Ebits_to_go, align 4
  %174 = load %struct.EncodingEnvironment*, %struct.EncodingEnvironment** %eep, align 8
  %Ebits_to_followS = getelementptr inbounds %struct.EncodingEnvironment, %struct.EncodingEnvironment* %174, i32 0, i32 11
  %175 = load i32, i32* %Ebits_to_followS, align 4
  %176 = load %struct.EncodingEnvironment*, %struct.EncodingEnvironment** %eep, align 8
  %Ebits_to_follow = getelementptr inbounds %struct.EncodingEnvironment, %struct.EncodingEnvironment* %176, i32 0, i32 4
  store i32 %175, i32* %Ebits_to_follow, align 4
  %177 = load %struct.EncodingEnvironment*, %struct.EncodingEnvironment** %eep, align 8
  %EcodestrmS = getelementptr inbounds %struct.EncodingEnvironment, %struct.EncodingEnvironment* %177, i32 0, i32 12
  %178 = load i8*, i8** %EcodestrmS, align 8
  %179 = load %struct.EncodingEnvironment*, %struct.EncodingEnvironment** %eep, align 8
  %Ecodestrm = getelementptr inbounds %struct.EncodingEnvironment, %struct.EncodingEnvironment* %179, i32 0, i32 5
  store i8* %178, i8** %Ecodestrm, align 8
  %180 = load %struct.EncodingEnvironment*, %struct.EncodingEnvironment** %eep, align 8
  %Ecodestrm_lenS = getelementptr inbounds %struct.EncodingEnvironment, %struct.EncodingEnvironment* %180, i32 0, i32 13
  %181 = load i32*, i32** %Ecodestrm_lenS, align 8
  %182 = load %struct.EncodingEnvironment*, %struct.EncodingEnvironment** %eep, align 8
  %Ecodestrm_len = getelementptr inbounds %struct.EncodingEnvironment, %struct.EncodingEnvironment* %182, i32 0, i32 6
  store i32* %181, i32** %Ecodestrm_len, align 8
  %183 = load %struct.EncodingEnvironment*, %struct.EncodingEnvironment** %eep, align 8
  %CS = getelementptr inbounds %struct.EncodingEnvironment, %struct.EncodingEnvironment* %183, i32 0, i32 15
  %184 = load i32, i32* %CS, align 4
  %185 = load %struct.EncodingEnvironment*, %struct.EncodingEnvironment** %eep, align 8
  %C = getelementptr inbounds %struct.EncodingEnvironment, %struct.EncodingEnvironment* %185, i32 0, i32 14
  store i32 %184, i32* %C, align 4
  %186 = load %struct.EncodingEnvironment*, %struct.EncodingEnvironment** %eep, align 8
  %BS = getelementptr inbounds %struct.EncodingEnvironment, %struct.EncodingEnvironment* %186, i32 0, i32 19
  %187 = load i32, i32* %BS, align 4
  %188 = load %struct.EncodingEnvironment*, %struct.EncodingEnvironment** %eep, align 8
  %B = getelementptr inbounds %struct.EncodingEnvironment, %struct.EncodingEnvironment* %188, i32 0, i32 18
  store i32 %187, i32* %B, align 4
  %189 = load %struct.EncodingEnvironment*, %struct.EncodingEnvironment** %eep, align 8
  %ES = getelementptr inbounds %struct.EncodingEnvironment, %struct.EncodingEnvironment* %189, i32 0, i32 17
  %190 = load i32, i32* %ES, align 4
  %191 = load %struct.EncodingEnvironment*, %struct.EncodingEnvironment** %eep, align 8
  %E = getelementptr inbounds %struct.EncodingEnvironment, %struct.EncodingEnvironment* %191, i32 0, i32 16
  store i32 %190, i32* %E, align 4
  br label %if.end.139

if.end.139:                                       ; preds = %if.then.138, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.139
  %192 = load i32, i32* %i, align 4
  %inc140 = add nsw i32 %192, 1
  store i32 %inc140, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end.141

if.end.141:                                       ; preds = %for.end, %sw.epilog
  %193 = load i32*, i32** %end_of_slice.addr, align 8
  %194 = load i32, i32* %193, align 4
  %cmp142 = icmp eq i32 %194, 1
  br i1 %cmp142, label %land.lhs.true.144, label %if.end.189

land.lhs.true.144:                                ; preds = %if.end.141
  %195 = load i32, i32* @terminate_macroblock.skip, align 4
  %cmp145 = icmp eq i32 %195, 1
  br i1 %cmp145, label %if.then.147, label %if.end.189

if.then.147:                                      ; preds = %land.lhs.true.144
  %196 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %cod_counter148 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %196, i32 0, i32 27
  %197 = load i32, i32* %cod_counter148, align 4
  %tobool149 = icmp ne i32 %197, 0
  br i1 %tobool149, label %land.lhs.true.150, label %if.else.175

land.lhs.true.150:                                ; preds = %if.then.147
  %198 = load i32*, i32** %recode_macroblock.addr, align 8
  %199 = load i32, i32* %198, align 4
  %cmp151 = icmp eq i32 %199, 1
  br i1 %cmp151, label %if.then.153, label %if.else.175

if.then.153:                                      ; preds = %land.lhs.true.150
  %200 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %cod_counter154 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %200, i32 0, i32 27
  %201 = load i32, i32* %cod_counter154, align 4
  %dec = add nsw i32 %201, -1
  store i32 %dec, i32* %cod_counter154, align 4
  %202 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %cod_counter155 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %202, i32 0, i32 27
  %203 = load i32, i32* %cod_counter155, align 4
  %tobool156 = icmp ne i32 %203, 0
  br i1 %tobool156, label %if.then.157, label %if.end.174

if.then.157:                                      ; preds = %if.then.153
  %204 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %cod_counter158 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %204, i32 0, i32 27
  %205 = load i32, i32* %cod_counter158, align 4
  %206 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %value1159 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %206, i32 0, i32 1
  store i32 %205, i32* %value1159, align 4
  %207 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %value2160 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %207, i32 0, i32 2
  store i32 0, i32* %value2160, align 4
  %208 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %mapping161 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %208, i32 0, i32 8
  store void (i32, i32, i32*, i32*)* @ue_linfo, void (i32, i32, i32*, i32*)** %mapping161, align 8
  %209 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %type162 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %209, i32 0, i32 0
  store i32 2, i32* %type162, align 4
  %210 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %type163 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %210, i32 0, i32 0
  %211 = load i32, i32* %type163, align 4
  %idxprom164 = sext i32 %211 to i64
  %212 = load i32*, i32** %partMap, align 8
  %arrayidx165 = getelementptr inbounds i32, i32* %212, i64 %idxprom164
  %213 = load i32, i32* %arrayidx165, align 4
  %idxprom166 = sext i32 %213 to i64
  %214 = load %struct.Slice*, %struct.Slice** %currSlice, align 8
  %partArr167 = getelementptr inbounds %struct.Slice, %struct.Slice* %214, i32 0, i32 6
  %215 = load %struct.datapartition*, %struct.datapartition** %partArr167, align 8
  %arrayidx168 = getelementptr inbounds %struct.datapartition, %struct.datapartition* %215, i64 %idxprom166
  store %struct.datapartition* %arrayidx168, %struct.datapartition** %dataPart, align 8
  %216 = load %struct.datapartition*, %struct.datapartition** %dataPart, align 8
  %writeSyntaxElement169 = getelementptr inbounds %struct.datapartition, %struct.datapartition* %216, i32 0, i32 2
  %217 = load i32 (%struct.syntaxelement*, %struct.datapartition*)*, i32 (%struct.syntaxelement*, %struct.datapartition*)** %writeSyntaxElement169, align 8
  %218 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %219 = load %struct.datapartition*, %struct.datapartition** %dataPart, align 8
  %call170 = call i32 %217(%struct.syntaxelement* %218, %struct.datapartition* %219)
  %220 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %len171 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %220, i32 0, i32 3
  %221 = load i32, i32* %len171, align 4
  store i32 %221, i32* %rlc_bits, align 4
  %222 = load i32, i32* %rlc_bits, align 4
  %223 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %bitcounter = getelementptr inbounds %struct.macroblock, %struct.macroblock* %223, i32 0, i32 5
  %arrayidx172 = getelementptr inbounds [8 x i32], [8 x i32]* %bitcounter, i32 0, i64 2
  %224 = load i32, i32* %arrayidx172, align 4
  %add = add nsw i32 %224, %222
  store i32 %add, i32* %arrayidx172, align 4
  %225 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %cod_counter173 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %225, i32 0, i32 27
  store i32 0, i32* %cod_counter173, align 4
  br label %if.end.174

if.end.174:                                       ; preds = %if.then.157, %if.then.153
  br label %if.end.188

if.else.175:                                      ; preds = %land.lhs.true.150, %if.then.147
  %226 = load i32*, i32** %partMap, align 8
  %arrayidx176 = getelementptr inbounds i32, i32* %226, i64 2
  %227 = load i32, i32* %arrayidx176, align 4
  %idxprom177 = sext i32 %227 to i64
  %228 = load %struct.Slice*, %struct.Slice** %currSlice, align 8
  %partArr178 = getelementptr inbounds %struct.Slice, %struct.Slice* %228, i32 0, i32 6
  %229 = load %struct.datapartition*, %struct.datapartition** %partArr178, align 8
  %arrayidx179 = getelementptr inbounds %struct.datapartition, %struct.datapartition* %229, i64 %idxprom177
  store %struct.datapartition* %arrayidx179, %struct.datapartition** %dataPart, align 8
  %230 = load %struct.datapartition*, %struct.datapartition** %dataPart, align 8
  %bitstream180 = getelementptr inbounds %struct.datapartition, %struct.datapartition* %230, i32 0, i32 0
  %231 = load %struct.Bitstream*, %struct.Bitstream** %bitstream180, align 8
  store %struct.Bitstream* %231, %struct.Bitstream** %currStream, align 8
  %232 = load %struct.Bitstream*, %struct.Bitstream** %currStream, align 8
  %bits_to_go_skip181 = getelementptr inbounds %struct.Bitstream, %struct.Bitstream* %232, i32 0, i32 8
  %233 = load i32, i32* %bits_to_go_skip181, align 4
  %234 = load %struct.Bitstream*, %struct.Bitstream** %currStream, align 8
  %bits_to_go182 = getelementptr inbounds %struct.Bitstream, %struct.Bitstream* %234, i32 0, i32 1
  store i32 %233, i32* %bits_to_go182, align 4
  %235 = load %struct.Bitstream*, %struct.Bitstream** %currStream, align 8
  %byte_pos_skip183 = getelementptr inbounds %struct.Bitstream, %struct.Bitstream* %235, i32 0, i32 7
  %236 = load i32, i32* %byte_pos_skip183, align 4
  %237 = load %struct.Bitstream*, %struct.Bitstream** %currStream, align 8
  %byte_pos184 = getelementptr inbounds %struct.Bitstream, %struct.Bitstream* %237, i32 0, i32 0
  store i32 %236, i32* %byte_pos184, align 4
  %238 = load %struct.Bitstream*, %struct.Bitstream** %currStream, align 8
  %byte_buf_skip185 = getelementptr inbounds %struct.Bitstream, %struct.Bitstream* %238, i32 0, i32 6
  %239 = load i8, i8* %byte_buf_skip185, align 1
  %240 = load %struct.Bitstream*, %struct.Bitstream** %currStream, align 8
  %byte_buf186 = getelementptr inbounds %struct.Bitstream, %struct.Bitstream* %240, i32 0, i32 2
  store i8 %239, i8* %byte_buf186, align 1
  %241 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %cod_counter187 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %241, i32 0, i32 27
  store i32 0, i32* %cod_counter187, align 4
  store i32 0, i32* @terminate_macroblock.skip, align 4
  br label %if.end.188

if.end.188:                                       ; preds = %if.else.175, %if.end.174
  br label %if.end.189

if.end.189:                                       ; preds = %if.end.188, %land.lhs.true.144, %if.end.141
  %242 = load i32*, i32** %end_of_slice.addr, align 8
  %243 = load i32, i32* %242, align 4
  %cmp190 = icmp eq i32 %243, 1
  br i1 %cmp190, label %land.lhs.true.192, label %if.end.218

land.lhs.true.192:                                ; preds = %if.end.189
  %244 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %cod_counter193 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %244, i32 0, i32 27
  %245 = load i32, i32* %cod_counter193, align 4
  %tobool194 = icmp ne i32 %245, 0
  br i1 %tobool194, label %land.lhs.true.195, label %if.end.218

land.lhs.true.195:                                ; preds = %land.lhs.true.192
  %246 = load i32, i32* %use_bitstream_backing, align 4
  %tobool196 = icmp ne i32 %246, 0
  br i1 %tobool196, label %if.end.218, label %if.then.197

if.then.197:                                      ; preds = %land.lhs.true.195
  %247 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %cod_counter198 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %247, i32 0, i32 27
  %248 = load i32, i32* %cod_counter198, align 4
  %249 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %value1199 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %249, i32 0, i32 1
  store i32 %248, i32* %value1199, align 4
  %250 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %value2200 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %250, i32 0, i32 2
  store i32 0, i32* %value2200, align 4
  %251 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %mapping201 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %251, i32 0, i32 8
  store void (i32, i32, i32*, i32*)* @ue_linfo, void (i32, i32, i32*, i32*)** %mapping201, align 8
  %252 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %type202 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %252, i32 0, i32 0
  store i32 2, i32* %type202, align 4
  %253 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %type203 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %253, i32 0, i32 0
  %254 = load i32, i32* %type203, align 4
  %idxprom204 = sext i32 %254 to i64
  %255 = load i32*, i32** %partMap, align 8
  %arrayidx205 = getelementptr inbounds i32, i32* %255, i64 %idxprom204
  %256 = load i32, i32* %arrayidx205, align 4
  %idxprom206 = sext i32 %256 to i64
  %257 = load %struct.Slice*, %struct.Slice** %currSlice, align 8
  %partArr207 = getelementptr inbounds %struct.Slice, %struct.Slice* %257, i32 0, i32 6
  %258 = load %struct.datapartition*, %struct.datapartition** %partArr207, align 8
  %arrayidx208 = getelementptr inbounds %struct.datapartition, %struct.datapartition* %258, i64 %idxprom206
  store %struct.datapartition* %arrayidx208, %struct.datapartition** %dataPart, align 8
  %259 = load %struct.datapartition*, %struct.datapartition** %dataPart, align 8
  %writeSyntaxElement209 = getelementptr inbounds %struct.datapartition, %struct.datapartition* %259, i32 0, i32 2
  %260 = load i32 (%struct.syntaxelement*, %struct.datapartition*)*, i32 (%struct.syntaxelement*, %struct.datapartition*)** %writeSyntaxElement209, align 8
  %261 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %262 = load %struct.datapartition*, %struct.datapartition** %dataPart, align 8
  %call210 = call i32 %260(%struct.syntaxelement* %261, %struct.datapartition* %262)
  %263 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %currSEnr211 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %263, i32 0, i32 0
  %264 = load i32, i32* %currSEnr211, align 4
  %inc212 = add nsw i32 %264, 1
  store i32 %inc212, i32* %currSEnr211, align 4
  %265 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %len213 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %265, i32 0, i32 3
  %266 = load i32, i32* %len213, align 4
  store i32 %266, i32* %rlc_bits, align 4
  %267 = load i32, i32* %rlc_bits, align 4
  %268 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %bitcounter214 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %268, i32 0, i32 5
  %arrayidx215 = getelementptr inbounds [8 x i32], [8 x i32]* %bitcounter214, i32 0, i64 2
  %269 = load i32, i32* %arrayidx215, align 4
  %add216 = add nsw i32 %269, %267
  store i32 %add216, i32* %arrayidx215, align 4
  %270 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %cod_counter217 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %270, i32 0, i32 27
  store i32 0, i32* %cod_counter217, align 4
  br label %if.end.218

if.end.218:                                       ; preds = %if.then.197, %land.lhs.true.195, %land.lhs.true.192, %if.end.189
  ret void
}

declare i32 @FmoGetLastCodedMBOfSliceGroup(i32) #1

declare i32 @FmoMB2SliceGroup(i32) #1

declare void @ue_linfo(i32, i32, i32*, i32*) #1

; Function Attrs: nounwind uwtable
define i32 @slice_too_big(i32 %rlc_bits) #0 {
entry:
  %retval = alloca i32, align 4
  %rlc_bits.addr = alloca i32, align 4
  %currSlice = alloca %struct.Slice*, align 8
  %dataPart = alloca %struct.datapartition*, align 8
  %currStream = alloca %struct.Bitstream*, align 8
  %eep = alloca %struct.EncodingEnvironment*, align 8
  %i = alloca i32, align 4
  %size_in_bytes = alloca i32, align 4
  store i32 %rlc_bits, i32* %rlc_bits.addr, align 4
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %currentSlice = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i32 0, i32 50
  %1 = load %struct.Slice*, %struct.Slice** %currentSlice, align 8
  store %struct.Slice* %1, %struct.Slice** %currSlice, align 8
  %2 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %symbol_mode = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %2, i32 0, i32 59
  %3 = load i32, i32* %symbol_mode, align 4
  %cmp = icmp eq i32 %3, 0
  br i1 %cmp, label %if.then, label %if.end.13

if.then:                                          ; preds = %entry
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then
  %4 = load i32, i32* %i, align 4
  %5 = load %struct.Slice*, %struct.Slice** %currSlice, align 8
  %max_part_nr = getelementptr inbounds %struct.Slice, %struct.Slice* %5, i32 0, i32 4
  %6 = load i32, i32* %max_part_nr, align 4
  %cmp1 = icmp slt i32 %4, %6
  br i1 %cmp1, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %7 = load i32, i32* %i, align 4
  %idxprom = sext i32 %7 to i64
  %8 = load %struct.Slice*, %struct.Slice** %currSlice, align 8
  %partArr = getelementptr inbounds %struct.Slice, %struct.Slice* %8, i32 0, i32 6
  %9 = load %struct.datapartition*, %struct.datapartition** %partArr, align 8
  %arrayidx = getelementptr inbounds %struct.datapartition, %struct.datapartition* %9, i64 %idxprom
  store %struct.datapartition* %arrayidx, %struct.datapartition** %dataPart, align 8
  %10 = load %struct.datapartition*, %struct.datapartition** %dataPart, align 8
  %bitstream = getelementptr inbounds %struct.datapartition, %struct.datapartition* %10, i32 0, i32 0
  %11 = load %struct.Bitstream*, %struct.Bitstream** %bitstream, align 8
  store %struct.Bitstream* %11, %struct.Bitstream** %currStream, align 8
  %12 = load %struct.Bitstream*, %struct.Bitstream** %currStream, align 8
  %byte_pos = getelementptr inbounds %struct.Bitstream, %struct.Bitstream* %12, i32 0, i32 0
  %13 = load i32, i32* %byte_pos, align 4
  store i32 %13, i32* %size_in_bytes, align 4
  %14 = load %struct.Bitstream*, %struct.Bitstream** %currStream, align 8
  %bits_to_go = getelementptr inbounds %struct.Bitstream, %struct.Bitstream* %14, i32 0, i32 1
  %15 = load i32, i32* %bits_to_go, align 4
  %cmp2 = icmp slt i32 %15, 8
  br i1 %cmp2, label %if.then.3, label %if.end

if.then.3:                                        ; preds = %for.body
  %16 = load i32, i32* %size_in_bytes, align 4
  %inc = add nsw i32 %16, 1
  store i32 %inc, i32* %size_in_bytes, align 4
  br label %if.end

if.end:                                           ; preds = %if.then.3, %for.body
  %17 = load %struct.Bitstream*, %struct.Bitstream** %currStream, align 8
  %bits_to_go4 = getelementptr inbounds %struct.Bitstream, %struct.Bitstream* %17, i32 0, i32 1
  %18 = load i32, i32* %bits_to_go4, align 4
  %19 = load i32, i32* %rlc_bits.addr, align 4
  %cmp5 = icmp slt i32 %18, %19
  br i1 %cmp5, label %if.then.6, label %if.end.8

if.then.6:                                        ; preds = %if.end
  %20 = load i32, i32* %size_in_bytes, align 4
  %inc7 = add nsw i32 %20, 1
  store i32 %inc7, i32* %size_in_bytes, align 4
  br label %if.end.8

if.end.8:                                         ; preds = %if.then.6, %if.end
  %21 = load i32, i32* %size_in_bytes, align 4
  %22 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %slice_argument = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %22, i32 0, i32 23
  %23 = load i32, i32* %slice_argument, align 4
  %cmp9 = icmp sgt i32 %21, %23
  br i1 %cmp9, label %if.then.10, label %if.end.11

if.then.10:                                       ; preds = %if.end.8
  store i32 1, i32* %retval
  br label %return

if.end.11:                                        ; preds = %if.end.8
  br label %for.inc

for.inc:                                          ; preds = %if.end.11
  %24 = load i32, i32* %i, align 4
  %inc12 = add nsw i32 %24, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end.13

if.end.13:                                        ; preds = %for.end, %entry
  %25 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %symbol_mode14 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %25, i32 0, i32 59
  %26 = load i32, i32* %symbol_mode14, align 4
  %cmp15 = icmp eq i32 %26, 1
  br i1 %cmp15, label %if.then.16, label %if.end.31

if.then.16:                                       ; preds = %if.end.13
  store i32 0, i32* %i, align 4
  br label %for.cond.17

for.cond.17:                                      ; preds = %for.inc.28, %if.then.16
  %27 = load i32, i32* %i, align 4
  %28 = load %struct.Slice*, %struct.Slice** %currSlice, align 8
  %max_part_nr18 = getelementptr inbounds %struct.Slice, %struct.Slice* %28, i32 0, i32 4
  %29 = load i32, i32* %max_part_nr18, align 4
  %cmp19 = icmp slt i32 %27, %29
  br i1 %cmp19, label %for.body.20, label %for.end.30

for.body.20:                                      ; preds = %for.cond.17
  %30 = load i32, i32* %i, align 4
  %idxprom21 = sext i32 %30 to i64
  %31 = load %struct.Slice*, %struct.Slice** %currSlice, align 8
  %partArr22 = getelementptr inbounds %struct.Slice, %struct.Slice* %31, i32 0, i32 6
  %32 = load %struct.datapartition*, %struct.datapartition** %partArr22, align 8
  %arrayidx23 = getelementptr inbounds %struct.datapartition, %struct.datapartition* %32, i64 %idxprom21
  store %struct.datapartition* %arrayidx23, %struct.datapartition** %dataPart, align 8
  %33 = load %struct.datapartition*, %struct.datapartition** %dataPart, align 8
  %ee_cabac = getelementptr inbounds %struct.datapartition, %struct.datapartition* %33, i32 0, i32 1
  store %struct.EncodingEnvironment* %ee_cabac, %struct.EncodingEnvironment** %eep, align 8
  %34 = load %struct.EncodingEnvironment*, %struct.EncodingEnvironment** %eep, align 8
  %call = call i32 @arienco_bits_written(%struct.EncodingEnvironment* %34)
  %35 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %slice_argument24 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %35, i32 0, i32 23
  %36 = load i32, i32* %slice_argument24, align 4
  %mul = mul nsw i32 %36, 8
  %cmp25 = icmp sgt i32 %call, %mul
  br i1 %cmp25, label %if.then.26, label %if.end.27

if.then.26:                                       ; preds = %for.body.20
  store i32 1, i32* %retval
  br label %return

if.end.27:                                        ; preds = %for.body.20
  br label %for.inc.28

for.inc.28:                                       ; preds = %if.end.27
  %37 = load i32, i32* %i, align 4
  %inc29 = add nsw i32 %37, 1
  store i32 %inc29, i32* %i, align 4
  br label %for.cond.17

for.end.30:                                       ; preds = %for.cond.17
  br label %if.end.31

if.end.31:                                        ; preds = %for.end.30, %if.end.13
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end.31, %if.then.26, %if.then.10
  %38 = load i32, i32* %retval
  ret i32 %38
}

; Function Attrs: nounwind
declare i32 @snprintf(i8*, i64, i8*, ...) #2

declare void @error(i8*, i32) #1

declare i32 @arienco_bits_written(%struct.EncodingEnvironment*) #1

; Function Attrs: nounwind uwtable
define void @OneComponentLumaPrediction4x4(i32* %mpred, i32 %pic_pix_x, i32 %pic_pix_y, i16* %mv, i16 signext %ref, %struct.storable_picture** %list) #0 {
entry:
  %mpred.addr = alloca i32*, align 8
  %pic_pix_x.addr = alloca i32, align 4
  %pic_pix_y.addr = alloca i32, align 4
  %mv.addr = alloca i16*, align 8
  %ref.addr = alloca i16, align 2
  %list.addr = alloca %struct.storable_picture**, align 8
  %ref_pic = alloca i16**, align 8
  %pix_add = alloca i32, align 4
  %j0 = alloca i32, align 4
  %j1 = alloca i32, align 4
  %j2 = alloca i32, align 4
  %j3 = alloca i32, align 4
  %i0 = alloca i32, align 4
  %i1 = alloca i32, align 4
  %i2 = alloca i32, align 4
  %i3 = alloca i32, align 4
  %get_pel = alloca i16 (i16**, i32, i32, i32, i32)*, align 8
  %img_width = alloca i32, align 4
  %img_height = alloca i32, align 4
  store i32* %mpred, i32** %mpred.addr, align 8
  store i32 %pic_pix_x, i32* %pic_pix_x.addr, align 4
  store i32 %pic_pix_y, i32* %pic_pix_y.addr, align 4
  store i16* %mv, i16** %mv.addr, align 8
  store i16 %ref, i16* %ref.addr, align 2
  store %struct.storable_picture** %list, %struct.storable_picture*** %list.addr, align 8
  store i32 4, i32* %pix_add, align 4
  %0 = load i32, i32* %pic_pix_y.addr, align 4
  %shl = shl i32 %0, 2
  %1 = load i16*, i16** %mv.addr, align 8
  %arrayidx = getelementptr inbounds i16, i16* %1, i64 1
  %2 = load i16, i16* %arrayidx, align 2
  %conv = sext i16 %2 to i32
  %add = add nsw i32 %shl, %conv
  store i32 %add, i32* %j0, align 4
  %3 = load i32, i32* %j0, align 4
  %4 = load i32, i32* %pix_add, align 4
  %add1 = add nsw i32 %3, %4
  store i32 %add1, i32* %j1, align 4
  %5 = load i32, i32* %j1, align 4
  %6 = load i32, i32* %pix_add, align 4
  %add2 = add nsw i32 %5, %6
  store i32 %add2, i32* %j2, align 4
  %7 = load i32, i32* %j2, align 4
  %8 = load i32, i32* %pix_add, align 4
  %add3 = add nsw i32 %7, %8
  store i32 %add3, i32* %j3, align 4
  %9 = load i32, i32* %pic_pix_x.addr, align 4
  %shl4 = shl i32 %9, 2
  %10 = load i16*, i16** %mv.addr, align 8
  %arrayidx5 = getelementptr inbounds i16, i16* %10, i64 0
  %11 = load i16, i16* %arrayidx5, align 2
  %conv6 = sext i16 %11 to i32
  %add7 = add nsw i32 %shl4, %conv6
  store i32 %add7, i32* %i0, align 4
  %12 = load i32, i32* %i0, align 4
  %13 = load i32, i32* %pix_add, align 4
  %add8 = add nsw i32 %12, %13
  store i32 %add8, i32* %i1, align 4
  %14 = load i32, i32* %i1, align 4
  %15 = load i32, i32* %pix_add, align 4
  %add9 = add nsw i32 %14, %15
  store i32 %add9, i32* %i2, align 4
  %16 = load i32, i32* %i2, align 4
  %17 = load i32, i32* %pix_add, align 4
  %add10 = add nsw i32 %16, %17
  store i32 %add10, i32* %i3, align 4
  store i16 (i16**, i32, i32, i32, i32)* @UMVPelY_14, i16 (i16**, i32, i32, i32, i32)** %get_pel, align 8
  %18 = load i16, i16* %ref.addr, align 2
  %idxprom = sext i16 %18 to i64
  %19 = load %struct.storable_picture**, %struct.storable_picture*** %list.addr, align 8
  %arrayidx11 = getelementptr inbounds %struct.storable_picture*, %struct.storable_picture** %19, i64 %idxprom
  %20 = load %struct.storable_picture*, %struct.storable_picture** %arrayidx11, align 8
  %size_x = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %20, i32 0, i32 18
  %21 = load i32, i32* %size_x, align 4
  store i32 %21, i32* %img_width, align 4
  %22 = load i16, i16* %ref.addr, align 2
  %idxprom12 = sext i16 %22 to i64
  %23 = load %struct.storable_picture**, %struct.storable_picture*** %list.addr, align 8
  %arrayidx13 = getelementptr inbounds %struct.storable_picture*, %struct.storable_picture** %23, i64 %idxprom12
  %24 = load %struct.storable_picture*, %struct.storable_picture** %arrayidx13, align 8
  %size_y = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %24, i32 0, i32 19
  %25 = load i32, i32* %size_y, align 4
  store i32 %25, i32* %img_height, align 4
  %26 = load i16, i16* %ref.addr, align 2
  %idxprom14 = sext i16 %26 to i64
  %27 = load %struct.storable_picture**, %struct.storable_picture*** %list.addr, align 8
  %arrayidx15 = getelementptr inbounds %struct.storable_picture*, %struct.storable_picture** %27, i64 %idxprom14
  %28 = load %struct.storable_picture*, %struct.storable_picture** %arrayidx15, align 8
  %imgY_ups = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %28, i32 0, i32 28
  %29 = load i16**, i16*** %imgY_ups, align 8
  store i16** %29, i16*** %ref_pic, align 8
  %30 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** %get_pel, align 8
  %31 = load i16**, i16*** %ref_pic, align 8
  %32 = load i32, i32* %j0, align 4
  %33 = load i32, i32* %i0, align 4
  %34 = load i32, i32* %img_height, align 4
  %35 = load i32, i32* %img_width, align 4
  %call = call zeroext i16 %30(i16** %31, i32 %32, i32 %33, i32 %34, i32 %35)
  %conv16 = zext i16 %call to i32
  %36 = load i32*, i32** %mpred.addr, align 8
  %incdec.ptr = getelementptr inbounds i32, i32* %36, i32 1
  store i32* %incdec.ptr, i32** %mpred.addr, align 8
  store i32 %conv16, i32* %36, align 4
  %37 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** %get_pel, align 8
  %38 = load i16**, i16*** %ref_pic, align 8
  %39 = load i32, i32* %j0, align 4
  %40 = load i32, i32* %i1, align 4
  %41 = load i32, i32* %img_height, align 4
  %42 = load i32, i32* %img_width, align 4
  %call17 = call zeroext i16 %37(i16** %38, i32 %39, i32 %40, i32 %41, i32 %42)
  %conv18 = zext i16 %call17 to i32
  %43 = load i32*, i32** %mpred.addr, align 8
  %incdec.ptr19 = getelementptr inbounds i32, i32* %43, i32 1
  store i32* %incdec.ptr19, i32** %mpred.addr, align 8
  store i32 %conv18, i32* %43, align 4
  %44 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** %get_pel, align 8
  %45 = load i16**, i16*** %ref_pic, align 8
  %46 = load i32, i32* %j0, align 4
  %47 = load i32, i32* %i2, align 4
  %48 = load i32, i32* %img_height, align 4
  %49 = load i32, i32* %img_width, align 4
  %call20 = call zeroext i16 %44(i16** %45, i32 %46, i32 %47, i32 %48, i32 %49)
  %conv21 = zext i16 %call20 to i32
  %50 = load i32*, i32** %mpred.addr, align 8
  %incdec.ptr22 = getelementptr inbounds i32, i32* %50, i32 1
  store i32* %incdec.ptr22, i32** %mpred.addr, align 8
  store i32 %conv21, i32* %50, align 4
  %51 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** %get_pel, align 8
  %52 = load i16**, i16*** %ref_pic, align 8
  %53 = load i32, i32* %j0, align 4
  %54 = load i32, i32* %i3, align 4
  %55 = load i32, i32* %img_height, align 4
  %56 = load i32, i32* %img_width, align 4
  %call23 = call zeroext i16 %51(i16** %52, i32 %53, i32 %54, i32 %55, i32 %56)
  %conv24 = zext i16 %call23 to i32
  %57 = load i32*, i32** %mpred.addr, align 8
  %incdec.ptr25 = getelementptr inbounds i32, i32* %57, i32 1
  store i32* %incdec.ptr25, i32** %mpred.addr, align 8
  store i32 %conv24, i32* %57, align 4
  %58 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** %get_pel, align 8
  %59 = load i16**, i16*** %ref_pic, align 8
  %60 = load i32, i32* %j1, align 4
  %61 = load i32, i32* %i0, align 4
  %62 = load i32, i32* %img_height, align 4
  %63 = load i32, i32* %img_width, align 4
  %call26 = call zeroext i16 %58(i16** %59, i32 %60, i32 %61, i32 %62, i32 %63)
  %conv27 = zext i16 %call26 to i32
  %64 = load i32*, i32** %mpred.addr, align 8
  %incdec.ptr28 = getelementptr inbounds i32, i32* %64, i32 1
  store i32* %incdec.ptr28, i32** %mpred.addr, align 8
  store i32 %conv27, i32* %64, align 4
  %65 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** %get_pel, align 8
  %66 = load i16**, i16*** %ref_pic, align 8
  %67 = load i32, i32* %j1, align 4
  %68 = load i32, i32* %i1, align 4
  %69 = load i32, i32* %img_height, align 4
  %70 = load i32, i32* %img_width, align 4
  %call29 = call zeroext i16 %65(i16** %66, i32 %67, i32 %68, i32 %69, i32 %70)
  %conv30 = zext i16 %call29 to i32
  %71 = load i32*, i32** %mpred.addr, align 8
  %incdec.ptr31 = getelementptr inbounds i32, i32* %71, i32 1
  store i32* %incdec.ptr31, i32** %mpred.addr, align 8
  store i32 %conv30, i32* %71, align 4
  %72 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** %get_pel, align 8
  %73 = load i16**, i16*** %ref_pic, align 8
  %74 = load i32, i32* %j1, align 4
  %75 = load i32, i32* %i2, align 4
  %76 = load i32, i32* %img_height, align 4
  %77 = load i32, i32* %img_width, align 4
  %call32 = call zeroext i16 %72(i16** %73, i32 %74, i32 %75, i32 %76, i32 %77)
  %conv33 = zext i16 %call32 to i32
  %78 = load i32*, i32** %mpred.addr, align 8
  %incdec.ptr34 = getelementptr inbounds i32, i32* %78, i32 1
  store i32* %incdec.ptr34, i32** %mpred.addr, align 8
  store i32 %conv33, i32* %78, align 4
  %79 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** %get_pel, align 8
  %80 = load i16**, i16*** %ref_pic, align 8
  %81 = load i32, i32* %j1, align 4
  %82 = load i32, i32* %i3, align 4
  %83 = load i32, i32* %img_height, align 4
  %84 = load i32, i32* %img_width, align 4
  %call35 = call zeroext i16 %79(i16** %80, i32 %81, i32 %82, i32 %83, i32 %84)
  %conv36 = zext i16 %call35 to i32
  %85 = load i32*, i32** %mpred.addr, align 8
  %incdec.ptr37 = getelementptr inbounds i32, i32* %85, i32 1
  store i32* %incdec.ptr37, i32** %mpred.addr, align 8
  store i32 %conv36, i32* %85, align 4
  %86 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** %get_pel, align 8
  %87 = load i16**, i16*** %ref_pic, align 8
  %88 = load i32, i32* %j2, align 4
  %89 = load i32, i32* %i0, align 4
  %90 = load i32, i32* %img_height, align 4
  %91 = load i32, i32* %img_width, align 4
  %call38 = call zeroext i16 %86(i16** %87, i32 %88, i32 %89, i32 %90, i32 %91)
  %conv39 = zext i16 %call38 to i32
  %92 = load i32*, i32** %mpred.addr, align 8
  %incdec.ptr40 = getelementptr inbounds i32, i32* %92, i32 1
  store i32* %incdec.ptr40, i32** %mpred.addr, align 8
  store i32 %conv39, i32* %92, align 4
  %93 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** %get_pel, align 8
  %94 = load i16**, i16*** %ref_pic, align 8
  %95 = load i32, i32* %j2, align 4
  %96 = load i32, i32* %i1, align 4
  %97 = load i32, i32* %img_height, align 4
  %98 = load i32, i32* %img_width, align 4
  %call41 = call zeroext i16 %93(i16** %94, i32 %95, i32 %96, i32 %97, i32 %98)
  %conv42 = zext i16 %call41 to i32
  %99 = load i32*, i32** %mpred.addr, align 8
  %incdec.ptr43 = getelementptr inbounds i32, i32* %99, i32 1
  store i32* %incdec.ptr43, i32** %mpred.addr, align 8
  store i32 %conv42, i32* %99, align 4
  %100 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** %get_pel, align 8
  %101 = load i16**, i16*** %ref_pic, align 8
  %102 = load i32, i32* %j2, align 4
  %103 = load i32, i32* %i2, align 4
  %104 = load i32, i32* %img_height, align 4
  %105 = load i32, i32* %img_width, align 4
  %call44 = call zeroext i16 %100(i16** %101, i32 %102, i32 %103, i32 %104, i32 %105)
  %conv45 = zext i16 %call44 to i32
  %106 = load i32*, i32** %mpred.addr, align 8
  %incdec.ptr46 = getelementptr inbounds i32, i32* %106, i32 1
  store i32* %incdec.ptr46, i32** %mpred.addr, align 8
  store i32 %conv45, i32* %106, align 4
  %107 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** %get_pel, align 8
  %108 = load i16**, i16*** %ref_pic, align 8
  %109 = load i32, i32* %j2, align 4
  %110 = load i32, i32* %i3, align 4
  %111 = load i32, i32* %img_height, align 4
  %112 = load i32, i32* %img_width, align 4
  %call47 = call zeroext i16 %107(i16** %108, i32 %109, i32 %110, i32 %111, i32 %112)
  %conv48 = zext i16 %call47 to i32
  %113 = load i32*, i32** %mpred.addr, align 8
  %incdec.ptr49 = getelementptr inbounds i32, i32* %113, i32 1
  store i32* %incdec.ptr49, i32** %mpred.addr, align 8
  store i32 %conv48, i32* %113, align 4
  %114 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** %get_pel, align 8
  %115 = load i16**, i16*** %ref_pic, align 8
  %116 = load i32, i32* %j3, align 4
  %117 = load i32, i32* %i0, align 4
  %118 = load i32, i32* %img_height, align 4
  %119 = load i32, i32* %img_width, align 4
  %call50 = call zeroext i16 %114(i16** %115, i32 %116, i32 %117, i32 %118, i32 %119)
  %conv51 = zext i16 %call50 to i32
  %120 = load i32*, i32** %mpred.addr, align 8
  %incdec.ptr52 = getelementptr inbounds i32, i32* %120, i32 1
  store i32* %incdec.ptr52, i32** %mpred.addr, align 8
  store i32 %conv51, i32* %120, align 4
  %121 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** %get_pel, align 8
  %122 = load i16**, i16*** %ref_pic, align 8
  %123 = load i32, i32* %j3, align 4
  %124 = load i32, i32* %i1, align 4
  %125 = load i32, i32* %img_height, align 4
  %126 = load i32, i32* %img_width, align 4
  %call53 = call zeroext i16 %121(i16** %122, i32 %123, i32 %124, i32 %125, i32 %126)
  %conv54 = zext i16 %call53 to i32
  %127 = load i32*, i32** %mpred.addr, align 8
  %incdec.ptr55 = getelementptr inbounds i32, i32* %127, i32 1
  store i32* %incdec.ptr55, i32** %mpred.addr, align 8
  store i32 %conv54, i32* %127, align 4
  %128 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** %get_pel, align 8
  %129 = load i16**, i16*** %ref_pic, align 8
  %130 = load i32, i32* %j3, align 4
  %131 = load i32, i32* %i2, align 4
  %132 = load i32, i32* %img_height, align 4
  %133 = load i32, i32* %img_width, align 4
  %call56 = call zeroext i16 %128(i16** %129, i32 %130, i32 %131, i32 %132, i32 %133)
  %conv57 = zext i16 %call56 to i32
  %134 = load i32*, i32** %mpred.addr, align 8
  %incdec.ptr58 = getelementptr inbounds i32, i32* %134, i32 1
  store i32* %incdec.ptr58, i32** %mpred.addr, align 8
  store i32 %conv57, i32* %134, align 4
  %135 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** %get_pel, align 8
  %136 = load i16**, i16*** %ref_pic, align 8
  %137 = load i32, i32* %j3, align 4
  %138 = load i32, i32* %i3, align 4
  %139 = load i32, i32* %img_height, align 4
  %140 = load i32, i32* %img_width, align 4
  %call59 = call zeroext i16 %135(i16** %136, i32 %137, i32 %138, i32 %139, i32 %140)
  %conv60 = zext i16 %call59 to i32
  %141 = load i32*, i32** %mpred.addr, align 8
  %incdec.ptr61 = getelementptr inbounds i32, i32* %141, i32 1
  store i32* %incdec.ptr61, i32** %mpred.addr, align 8
  store i32 %conv60, i32* %141, align 4
  ret void
}

declare zeroext i16 @UMVPelY_14(i16**, i32, i32, i32, i32) #1

; Function Attrs: nounwind uwtable
define void @copyblock4x4(i32* %mpred, [4 x i32]* %block) #0 {
entry:
  %mpred.addr = alloca i32*, align 8
  %block.addr = alloca [4 x i32]*, align 8
  store i32* %mpred, i32** %mpred.addr, align 8
  store [4 x i32]* %block, [4 x i32]** %block.addr, align 8
  %0 = load [4 x i32]*, [4 x i32]** %block.addr, align 8
  %arrayidx = getelementptr inbounds [4 x i32], [4 x i32]* %0, i64 0
  %arrayidx1 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx, i32 0, i64 0
  %1 = load i32, i32* %arrayidx1, align 4
  %2 = load i32*, i32** %mpred.addr, align 8
  %incdec.ptr = getelementptr inbounds i32, i32* %2, i32 1
  store i32* %incdec.ptr, i32** %mpred.addr, align 8
  store i32 %1, i32* %2, align 4
  %3 = load [4 x i32]*, [4 x i32]** %block.addr, align 8
  %arrayidx2 = getelementptr inbounds [4 x i32], [4 x i32]* %3, i64 1
  %arrayidx3 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx2, i32 0, i64 0
  %4 = load i32, i32* %arrayidx3, align 4
  %5 = load i32*, i32** %mpred.addr, align 8
  %incdec.ptr4 = getelementptr inbounds i32, i32* %5, i32 1
  store i32* %incdec.ptr4, i32** %mpred.addr, align 8
  store i32 %4, i32* %5, align 4
  %6 = load [4 x i32]*, [4 x i32]** %block.addr, align 8
  %arrayidx5 = getelementptr inbounds [4 x i32], [4 x i32]* %6, i64 2
  %arrayidx6 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx5, i32 0, i64 0
  %7 = load i32, i32* %arrayidx6, align 4
  %8 = load i32*, i32** %mpred.addr, align 8
  %incdec.ptr7 = getelementptr inbounds i32, i32* %8, i32 1
  store i32* %incdec.ptr7, i32** %mpred.addr, align 8
  store i32 %7, i32* %8, align 4
  %9 = load [4 x i32]*, [4 x i32]** %block.addr, align 8
  %arrayidx8 = getelementptr inbounds [4 x i32], [4 x i32]* %9, i64 3
  %arrayidx9 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx8, i32 0, i64 0
  %10 = load i32, i32* %arrayidx9, align 4
  %11 = load i32*, i32** %mpred.addr, align 8
  %incdec.ptr10 = getelementptr inbounds i32, i32* %11, i32 1
  store i32* %incdec.ptr10, i32** %mpred.addr, align 8
  store i32 %10, i32* %11, align 4
  %12 = load [4 x i32]*, [4 x i32]** %block.addr, align 8
  %arrayidx11 = getelementptr inbounds [4 x i32], [4 x i32]* %12, i64 0
  %arrayidx12 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx11, i32 0, i64 1
  %13 = load i32, i32* %arrayidx12, align 4
  %14 = load i32*, i32** %mpred.addr, align 8
  %incdec.ptr13 = getelementptr inbounds i32, i32* %14, i32 1
  store i32* %incdec.ptr13, i32** %mpred.addr, align 8
  store i32 %13, i32* %14, align 4
  %15 = load [4 x i32]*, [4 x i32]** %block.addr, align 8
  %arrayidx14 = getelementptr inbounds [4 x i32], [4 x i32]* %15, i64 1
  %arrayidx15 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx14, i32 0, i64 1
  %16 = load i32, i32* %arrayidx15, align 4
  %17 = load i32*, i32** %mpred.addr, align 8
  %incdec.ptr16 = getelementptr inbounds i32, i32* %17, i32 1
  store i32* %incdec.ptr16, i32** %mpred.addr, align 8
  store i32 %16, i32* %17, align 4
  %18 = load [4 x i32]*, [4 x i32]** %block.addr, align 8
  %arrayidx17 = getelementptr inbounds [4 x i32], [4 x i32]* %18, i64 2
  %arrayidx18 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx17, i32 0, i64 1
  %19 = load i32, i32* %arrayidx18, align 4
  %20 = load i32*, i32** %mpred.addr, align 8
  %incdec.ptr19 = getelementptr inbounds i32, i32* %20, i32 1
  store i32* %incdec.ptr19, i32** %mpred.addr, align 8
  store i32 %19, i32* %20, align 4
  %21 = load [4 x i32]*, [4 x i32]** %block.addr, align 8
  %arrayidx20 = getelementptr inbounds [4 x i32], [4 x i32]* %21, i64 3
  %arrayidx21 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx20, i32 0, i64 1
  %22 = load i32, i32* %arrayidx21, align 4
  %23 = load i32*, i32** %mpred.addr, align 8
  %incdec.ptr22 = getelementptr inbounds i32, i32* %23, i32 1
  store i32* %incdec.ptr22, i32** %mpred.addr, align 8
  store i32 %22, i32* %23, align 4
  %24 = load [4 x i32]*, [4 x i32]** %block.addr, align 8
  %arrayidx23 = getelementptr inbounds [4 x i32], [4 x i32]* %24, i64 0
  %arrayidx24 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx23, i32 0, i64 2
  %25 = load i32, i32* %arrayidx24, align 4
  %26 = load i32*, i32** %mpred.addr, align 8
  %incdec.ptr25 = getelementptr inbounds i32, i32* %26, i32 1
  store i32* %incdec.ptr25, i32** %mpred.addr, align 8
  store i32 %25, i32* %26, align 4
  %27 = load [4 x i32]*, [4 x i32]** %block.addr, align 8
  %arrayidx26 = getelementptr inbounds [4 x i32], [4 x i32]* %27, i64 1
  %arrayidx27 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx26, i32 0, i64 2
  %28 = load i32, i32* %arrayidx27, align 4
  %29 = load i32*, i32** %mpred.addr, align 8
  %incdec.ptr28 = getelementptr inbounds i32, i32* %29, i32 1
  store i32* %incdec.ptr28, i32** %mpred.addr, align 8
  store i32 %28, i32* %29, align 4
  %30 = load [4 x i32]*, [4 x i32]** %block.addr, align 8
  %arrayidx29 = getelementptr inbounds [4 x i32], [4 x i32]* %30, i64 2
  %arrayidx30 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx29, i32 0, i64 2
  %31 = load i32, i32* %arrayidx30, align 4
  %32 = load i32*, i32** %mpred.addr, align 8
  %incdec.ptr31 = getelementptr inbounds i32, i32* %32, i32 1
  store i32* %incdec.ptr31, i32** %mpred.addr, align 8
  store i32 %31, i32* %32, align 4
  %33 = load [4 x i32]*, [4 x i32]** %block.addr, align 8
  %arrayidx32 = getelementptr inbounds [4 x i32], [4 x i32]* %33, i64 3
  %arrayidx33 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx32, i32 0, i64 2
  %34 = load i32, i32* %arrayidx33, align 4
  %35 = load i32*, i32** %mpred.addr, align 8
  %incdec.ptr34 = getelementptr inbounds i32, i32* %35, i32 1
  store i32* %incdec.ptr34, i32** %mpred.addr, align 8
  store i32 %34, i32* %35, align 4
  %36 = load [4 x i32]*, [4 x i32]** %block.addr, align 8
  %arrayidx35 = getelementptr inbounds [4 x i32], [4 x i32]* %36, i64 0
  %arrayidx36 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx35, i32 0, i64 3
  %37 = load i32, i32* %arrayidx36, align 4
  %38 = load i32*, i32** %mpred.addr, align 8
  %incdec.ptr37 = getelementptr inbounds i32, i32* %38, i32 1
  store i32* %incdec.ptr37, i32** %mpred.addr, align 8
  store i32 %37, i32* %38, align 4
  %39 = load [4 x i32]*, [4 x i32]** %block.addr, align 8
  %arrayidx38 = getelementptr inbounds [4 x i32], [4 x i32]* %39, i64 1
  %arrayidx39 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx38, i32 0, i64 3
  %40 = load i32, i32* %arrayidx39, align 4
  %41 = load i32*, i32** %mpred.addr, align 8
  %incdec.ptr40 = getelementptr inbounds i32, i32* %41, i32 1
  store i32* %incdec.ptr40, i32** %mpred.addr, align 8
  store i32 %40, i32* %41, align 4
  %42 = load [4 x i32]*, [4 x i32]** %block.addr, align 8
  %arrayidx41 = getelementptr inbounds [4 x i32], [4 x i32]* %42, i64 2
  %arrayidx42 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx41, i32 0, i64 3
  %43 = load i32, i32* %arrayidx42, align 4
  %44 = load i32*, i32** %mpred.addr, align 8
  %incdec.ptr43 = getelementptr inbounds i32, i32* %44, i32 1
  store i32* %incdec.ptr43, i32** %mpred.addr, align 8
  store i32 %43, i32* %44, align 4
  %45 = load [4 x i32]*, [4 x i32]** %block.addr, align 8
  %arrayidx44 = getelementptr inbounds [4 x i32], [4 x i32]* %45, i64 3
  %arrayidx45 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx44, i32 0, i64 3
  %46 = load i32, i32* %arrayidx45, align 4
  %47 = load i32*, i32** %mpred.addr, align 8
  %incdec.ptr46 = getelementptr inbounds i32, i32* %47, i32 1
  store i32* %incdec.ptr46, i32** %mpred.addr, align 8
  store i32 %46, i32* %47, align 4
  ret void
}

; Function Attrs: nounwind uwtable
define void @LumaPrediction4x4(i32 %block_x, i32 %block_y, i32 %p_dir, i32 %fw_mode, i32 %bw_mode, i16 signext %fw_ref_idx, i16 signext %bw_ref_idx) #0 {
entry:
  %block_x.addr = alloca i32, align 4
  %block_y.addr = alloca i32, align 4
  %p_dir.addr = alloca i32, align 4
  %fw_mode.addr = alloca i32, align 4
  %bw_mode.addr = alloca i32, align 4
  %fw_ref_idx.addr = alloca i16, align 2
  %bw_ref_idx.addr = alloca i16, align 2
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %block_x4 = alloca i32, align 4
  %block_y4 = alloca i32, align 4
  %pic_opix_x = alloca i32, align 4
  %pic_opix_y = alloca i32, align 4
  %bx = alloca i32, align 4
  %by = alloca i32, align 4
  %fpred = alloca i32*, align 8
  %bpred = alloca i32*, align 8
  %currMB = alloca %struct.macroblock*, align 8
  %apply_weights = alloca i32, align 4
  %mv_array = alloca i16******, align 8
  %list_offset = alloca i32, align 4
  store i32 %block_x, i32* %block_x.addr, align 4
  store i32 %block_y, i32* %block_y.addr, align 4
  store i32 %p_dir, i32* %p_dir.addr, align 4
  store i32 %fw_mode, i32* %fw_mode.addr, align 4
  store i32 %bw_mode, i32* %bw_mode.addr, align 4
  store i16 %fw_ref_idx, i16* %fw_ref_idx.addr, align 2
  store i16 %bw_ref_idx, i16* %bw_ref_idx.addr, align 2
  %0 = load i32, i32* %block_x.addr, align 4
  %add = add nsw i32 %0, 4
  store i32 %add, i32* %block_x4, align 4
  %1 = load i32, i32* %block_y.addr, align 4
  %add1 = add nsw i32 %1, 4
  store i32 %add1, i32* %block_y4, align 4
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %opix_x = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 37
  %3 = load i32, i32* %opix_x, align 4
  %4 = load i32, i32* %block_x.addr, align 4
  %add2 = add nsw i32 %3, %4
  store i32 %add2, i32* %pic_opix_x, align 4
  %5 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %opix_y = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %5, i32 0, i32 38
  %6 = load i32, i32* %opix_y, align 4
  %7 = load i32, i32* %block_y.addr, align 4
  %add3 = add nsw i32 %6, %7
  store i32 %add3, i32* %pic_opix_y, align 4
  %8 = load i32, i32* %block_x.addr, align 4
  %shr = ashr i32 %8, 2
  store i32 %shr, i32* %bx, align 4
  %9 = load i32, i32* %block_y.addr, align 4
  %shr4 = ashr i32 %9, 2
  store i32 %shr4, i32* %by, align 4
  store i32* getelementptr inbounds ([16 x i32], [16 x i32]* @LumaPrediction4x4.fw_pred, i32 0, i32 0), i32** %fpred, align 8
  store i32* getelementptr inbounds ([16 x i32], [16 x i32]* @LumaPrediction4x4.bw_pred, i32 0, i32 0), i32** %bpred, align 8
  %10 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %10, i32 0, i32 3
  %11 = load i32, i32* %current_mb_nr, align 4
  %idxprom = sext i32 %11 to i64
  %12 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %12, i32 0, i32 51
  %13 = load %struct.macroblock*, %struct.macroblock** %mb_data, align 8
  %arrayidx = getelementptr inbounds %struct.macroblock, %struct.macroblock* %13, i64 %idxprom
  store %struct.macroblock* %arrayidx, %struct.macroblock** %currMB, align 8
  %14 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %weighted_pred_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %14, i32 0, i32 19
  %15 = load i32, i32* %weighted_pred_flag, align 4
  %tobool = icmp ne i32 %15, 0
  br i1 %tobool, label %land.lhs.true, label %lor.rhs

land.lhs.true:                                    ; preds = %entry
  %16 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %16, i32 0, i32 6
  %17 = load i32, i32* %type, align 4
  %cmp = icmp eq i32 %17, 0
  br i1 %cmp, label %lor.end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true
  %18 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type5 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %18, i32 0, i32 6
  %19 = load i32, i32* %type5, align 4
  %cmp6 = icmp eq i32 %19, 3
  br i1 %cmp6, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %lor.lhs.false, %entry
  %20 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %weighted_bipred_idc = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %20, i32 0, i32 20
  %21 = load i32, i32* %weighted_bipred_idc, align 4
  %tobool7 = icmp ne i32 %21, 0
  br i1 %tobool7, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %lor.rhs
  %22 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type8 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %22, i32 0, i32 6
  %23 = load i32, i32* %type8, align 4
  %cmp9 = icmp eq i32 %23, 1
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.rhs
  %24 = phi i1 [ false, %lor.rhs ], [ %cmp9, %land.rhs ]
  br label %lor.end

lor.end:                                          ; preds = %land.end, %lor.lhs.false, %land.lhs.true
  %25 = phi i1 [ true, %lor.lhs.false ], [ true, %land.lhs.true ], [ %24, %land.end ]
  %lor.ext = zext i1 %25 to i32
  store i32 %lor.ext, i32* %apply_weights, align 4
  %26 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %all_mv = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %26, i32 0, i32 71
  %27 = load i16******, i16******* %all_mv, align 8
  store i16****** %27, i16******* %mv_array, align 8
  %28 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %MbaffFrameFlag = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %28, i32 0, i32 90
  %29 = load i32, i32* %MbaffFrameFlag, align 4
  %tobool10 = icmp ne i32 %29, 0
  br i1 %tobool10, label %land.lhs.true.11, label %cond.false

land.lhs.true.11:                                 ; preds = %lor.end
  %30 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_field = getelementptr inbounds %struct.macroblock, %struct.macroblock* %30, i32 0, i32 22
  %31 = load i32, i32* %mb_field, align 4
  %tobool12 = icmp ne i32 %31, 0
  br i1 %tobool12, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true.11
  %32 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr13 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %32, i32 0, i32 3
  %33 = load i32, i32* %current_mb_nr13, align 4
  %rem = srem i32 %33, 2
  %tobool14 = icmp ne i32 %rem, 0
  %cond = select i1 %tobool14, i32 4, i32 2
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true.11, %lor.end
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond15 = phi i32 [ %cond, %cond.true ], [ 0, %cond.false ]
  store i32 %cond15, i32* %list_offset, align 4
  %34 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %bi_pred_me = getelementptr inbounds %struct.macroblock, %struct.macroblock* %34, i32 0, i32 34
  %35 = load i32, i32* %bi_pred_me, align 4
  %tobool16 = icmp ne i32 %35, 0
  br i1 %tobool16, label %land.lhs.true.17, label %if.end

land.lhs.true.17:                                 ; preds = %cond.end
  %36 = load i16, i16* %fw_ref_idx.addr, align 2
  %conv = sext i16 %36 to i32
  %cmp18 = icmp eq i32 %conv, 0
  br i1 %cmp18, label %land.lhs.true.20, label %if.end

land.lhs.true.20:                                 ; preds = %land.lhs.true.17
  %37 = load i16, i16* %bw_ref_idx.addr, align 2
  %conv21 = sext i16 %37 to i32
  %cmp22 = icmp eq i32 %conv21, 0
  br i1 %cmp22, label %land.lhs.true.24, label %if.end

land.lhs.true.24:                                 ; preds = %land.lhs.true.20
  %38 = load i32, i32* %p_dir.addr, align 4
  %cmp25 = icmp eq i32 %38, 2
  br i1 %cmp25, label %land.lhs.true.27, label %if.end

land.lhs.true.27:                                 ; preds = %land.lhs.true.24
  %39 = load i32, i32* %fw_mode.addr, align 4
  %cmp28 = icmp eq i32 %39, 1
  br i1 %cmp28, label %land.lhs.true.30, label %if.end

land.lhs.true.30:                                 ; preds = %land.lhs.true.27
  %40 = load i32, i32* %bw_mode.addr, align 4
  %cmp31 = icmp eq i32 %40, 1
  br i1 %cmp31, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true.30
  %41 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %bi_pred_me33 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %41, i32 0, i32 34
  %42 = load i32, i32* %bi_pred_me33, align 4
  %cmp34 = icmp eq i32 %42, 1
  br i1 %cmp34, label %cond.true.36, label %cond.false.37

cond.true.36:                                     ; preds = %if.then
  %43 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %bipred_mv1 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %43, i32 0, i32 72
  %44 = load i16******, i16******* %bipred_mv1, align 8
  br label %cond.end.38

cond.false.37:                                    ; preds = %if.then
  %45 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %bipred_mv2 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %45, i32 0, i32 73
  %46 = load i16******, i16******* %bipred_mv2, align 8
  br label %cond.end.38

cond.end.38:                                      ; preds = %cond.false.37, %cond.true.36
  %cond39 = phi i16****** [ %44, %cond.true.36 ], [ %46, %cond.false.37 ]
  store i16****** %cond39, i16******* %mv_array, align 8
  br label %if.end

if.end:                                           ; preds = %cond.end.38, %land.lhs.true.30, %land.lhs.true.27, %land.lhs.true.24, %land.lhs.true.20, %land.lhs.true.17, %cond.end
  %47 = load i32, i32* %p_dir.addr, align 4
  %cmp40 = icmp eq i32 %47, 0
  br i1 %cmp40, label %if.then.45, label %lor.lhs.false.42

lor.lhs.false.42:                                 ; preds = %if.end
  %48 = load i32, i32* %p_dir.addr, align 4
  %cmp43 = icmp eq i32 %48, 2
  br i1 %cmp43, label %if.then.45, label %if.end.58

if.then.45:                                       ; preds = %lor.lhs.false.42, %if.end
  %49 = load i32, i32* %pic_opix_x, align 4
  %50 = load i32, i32* %pic_opix_y, align 4
  %51 = load i32, i32* %fw_mode.addr, align 4
  %idxprom46 = sext i32 %51 to i64
  %52 = load i16, i16* %fw_ref_idx.addr, align 2
  %idxprom47 = sext i16 %52 to i64
  %53 = load i32, i32* %by, align 4
  %idxprom48 = sext i32 %53 to i64
  %54 = load i32, i32* %bx, align 4
  %idxprom49 = sext i32 %54 to i64
  %55 = load i16******, i16******* %mv_array, align 8
  %arrayidx50 = getelementptr inbounds i16*****, i16****** %55, i64 %idxprom49
  %56 = load i16*****, i16****** %arrayidx50, align 8
  %arrayidx51 = getelementptr inbounds i16****, i16***** %56, i64 %idxprom48
  %57 = load i16****, i16***** %arrayidx51, align 8
  %arrayidx52 = getelementptr inbounds i16***, i16**** %57, i64 0
  %58 = load i16***, i16**** %arrayidx52, align 8
  %arrayidx53 = getelementptr inbounds i16**, i16*** %58, i64 %idxprom47
  %59 = load i16**, i16*** %arrayidx53, align 8
  %arrayidx54 = getelementptr inbounds i16*, i16** %59, i64 %idxprom46
  %60 = load i16*, i16** %arrayidx54, align 8
  %61 = load i16, i16* %fw_ref_idx.addr, align 2
  %62 = load i32, i32* %list_offset, align 4
  %add55 = add nsw i32 0, %62
  %idxprom56 = sext i32 %add55 to i64
  %arrayidx57 = getelementptr inbounds [6 x %struct.storable_picture**], [6 x %struct.storable_picture**]* @listX, i32 0, i64 %idxprom56
  %63 = load %struct.storable_picture**, %struct.storable_picture*** %arrayidx57, align 8
  call void @OneComponentLumaPrediction4x4(i32* getelementptr inbounds ([16 x i32], [16 x i32]* @LumaPrediction4x4.fw_pred, i32 0, i32 0), i32 %49, i32 %50, i16* %60, i16 signext %61, %struct.storable_picture** %63)
  br label %if.end.58

if.end.58:                                        ; preds = %if.then.45, %lor.lhs.false.42
  %64 = load i32, i32* %p_dir.addr, align 4
  %cmp59 = icmp eq i32 %64, 1
  br i1 %cmp59, label %if.then.64, label %lor.lhs.false.61

lor.lhs.false.61:                                 ; preds = %if.end.58
  %65 = load i32, i32* %p_dir.addr, align 4
  %cmp62 = icmp eq i32 %65, 2
  br i1 %cmp62, label %if.then.64, label %if.end.77

if.then.64:                                       ; preds = %lor.lhs.false.61, %if.end.58
  %66 = load i32, i32* %pic_opix_x, align 4
  %67 = load i32, i32* %pic_opix_y, align 4
  %68 = load i32, i32* %bw_mode.addr, align 4
  %idxprom65 = sext i32 %68 to i64
  %69 = load i16, i16* %bw_ref_idx.addr, align 2
  %idxprom66 = sext i16 %69 to i64
  %70 = load i32, i32* %by, align 4
  %idxprom67 = sext i32 %70 to i64
  %71 = load i32, i32* %bx, align 4
  %idxprom68 = sext i32 %71 to i64
  %72 = load i16******, i16******* %mv_array, align 8
  %arrayidx69 = getelementptr inbounds i16*****, i16****** %72, i64 %idxprom68
  %73 = load i16*****, i16****** %arrayidx69, align 8
  %arrayidx70 = getelementptr inbounds i16****, i16***** %73, i64 %idxprom67
  %74 = load i16****, i16***** %arrayidx70, align 8
  %arrayidx71 = getelementptr inbounds i16***, i16**** %74, i64 1
  %75 = load i16***, i16**** %arrayidx71, align 8
  %arrayidx72 = getelementptr inbounds i16**, i16*** %75, i64 %idxprom66
  %76 = load i16**, i16*** %arrayidx72, align 8
  %arrayidx73 = getelementptr inbounds i16*, i16** %76, i64 %idxprom65
  %77 = load i16*, i16** %arrayidx73, align 8
  %78 = load i16, i16* %bw_ref_idx.addr, align 2
  %79 = load i32, i32* %list_offset, align 4
  %add74 = add nsw i32 1, %79
  %idxprom75 = sext i32 %add74 to i64
  %arrayidx76 = getelementptr inbounds [6 x %struct.storable_picture**], [6 x %struct.storable_picture**]* @listX, i32 0, i64 %idxprom75
  %80 = load %struct.storable_picture**, %struct.storable_picture*** %arrayidx76, align 8
  call void @OneComponentLumaPrediction4x4(i32* getelementptr inbounds ([16 x i32], [16 x i32]* @LumaPrediction4x4.bw_pred, i32 0, i32 0), i32 %66, i32 %67, i16* %77, i16 signext %78, %struct.storable_picture** %80)
  br label %if.end.77

if.end.77:                                        ; preds = %if.then.64, %lor.lhs.false.61
  %81 = load i32, i32* %apply_weights, align 4
  %tobool78 = icmp ne i32 %81, 0
  br i1 %tobool78, label %if.then.79, label %if.else.202

if.then.79:                                       ; preds = %if.end.77
  %82 = load i32, i32* %p_dir.addr, align 4
  %cmp80 = icmp eq i32 %82, 2
  br i1 %cmp80, label %if.then.82, label %if.else

if.then.82:                                       ; preds = %if.then.79
  %83 = load i32, i32* %block_y.addr, align 4
  store i32 %83, i32* %j, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc.125, %if.then.82
  %84 = load i32, i32* %j, align 4
  %85 = load i32, i32* %block_y4, align 4
  %cmp83 = icmp slt i32 %84, %85
  br i1 %cmp83, label %for.body, label %for.end.127

for.body:                                         ; preds = %for.cond
  %86 = load i32, i32* %block_x.addr, align 4
  store i32 %86, i32* %i, align 4
  br label %for.cond.85

for.cond.85:                                      ; preds = %for.inc, %for.body
  %87 = load i32, i32* %i, align 4
  %88 = load i32, i32* %block_x4, align 4
  %cmp86 = icmp slt i32 %87, %88
  br i1 %cmp86, label %for.body.88, label %for.end

for.body.88:                                      ; preds = %for.cond.85
  %89 = load i16, i16* %bw_ref_idx.addr, align 2
  %idxprom89 = sext i16 %89 to i64
  %90 = load i16, i16* %fw_ref_idx.addr, align 2
  %idxprom90 = sext i16 %90 to i64
  %91 = load i32****, i32***** @wbp_weight, align 8
  %arrayidx91 = getelementptr inbounds i32***, i32**** %91, i64 0
  %92 = load i32***, i32**** %arrayidx91, align 8
  %arrayidx92 = getelementptr inbounds i32**, i32*** %92, i64 %idxprom90
  %93 = load i32**, i32*** %arrayidx92, align 8
  %arrayidx93 = getelementptr inbounds i32*, i32** %93, i64 %idxprom89
  %94 = load i32*, i32** %arrayidx93, align 8
  %arrayidx94 = getelementptr inbounds i32, i32* %94, i64 0
  %95 = load i32, i32* %arrayidx94, align 4
  %96 = load i32*, i32** %fpred, align 8
  %incdec.ptr = getelementptr inbounds i32, i32* %96, i32 1
  store i32* %incdec.ptr, i32** %fpred, align 8
  %97 = load i32, i32* %96, align 4
  %mul = mul nsw i32 %95, %97
  %98 = load i16, i16* %bw_ref_idx.addr, align 2
  %idxprom95 = sext i16 %98 to i64
  %99 = load i16, i16* %fw_ref_idx.addr, align 2
  %idxprom96 = sext i16 %99 to i64
  %100 = load i32****, i32***** @wbp_weight, align 8
  %arrayidx97 = getelementptr inbounds i32***, i32**** %100, i64 1
  %101 = load i32***, i32**** %arrayidx97, align 8
  %arrayidx98 = getelementptr inbounds i32**, i32*** %101, i64 %idxprom96
  %102 = load i32**, i32*** %arrayidx98, align 8
  %arrayidx99 = getelementptr inbounds i32*, i32** %102, i64 %idxprom95
  %103 = load i32*, i32** %arrayidx99, align 8
  %arrayidx100 = getelementptr inbounds i32, i32* %103, i64 0
  %104 = load i32, i32* %arrayidx100, align 4
  %105 = load i32*, i32** %bpred, align 8
  %incdec.ptr101 = getelementptr inbounds i32, i32* %105, i32 1
  store i32* %incdec.ptr101, i32** %bpred, align 8
  %106 = load i32, i32* %105, align 4
  %mul102 = mul nsw i32 %104, %106
  %add103 = add nsw i32 %mul, %mul102
  %107 = load i32, i32* @wp_luma_round, align 4
  %mul104 = mul nsw i32 2, %107
  %add105 = add nsw i32 %add103, %mul104
  %108 = load i32, i32* @luma_log_weight_denom, align 4
  %add106 = add nsw i32 %108, 1
  %shr107 = ashr i32 %add105, %add106
  %109 = load i16, i16* %fw_ref_idx.addr, align 2
  %idxprom108 = sext i16 %109 to i64
  %110 = load i32***, i32**** @wp_offset, align 8
  %arrayidx109 = getelementptr inbounds i32**, i32*** %110, i64 0
  %111 = load i32**, i32*** %arrayidx109, align 8
  %arrayidx110 = getelementptr inbounds i32*, i32** %111, i64 %idxprom108
  %112 = load i32*, i32** %arrayidx110, align 8
  %arrayidx111 = getelementptr inbounds i32, i32* %112, i64 0
  %113 = load i32, i32* %arrayidx111, align 4
  %114 = load i16, i16* %bw_ref_idx.addr, align 2
  %idxprom112 = sext i16 %114 to i64
  %115 = load i32***, i32**** @wp_offset, align 8
  %arrayidx113 = getelementptr inbounds i32**, i32*** %115, i64 1
  %116 = load i32**, i32*** %arrayidx113, align 8
  %arrayidx114 = getelementptr inbounds i32*, i32** %116, i64 %idxprom112
  %117 = load i32*, i32** %arrayidx114, align 8
  %arrayidx115 = getelementptr inbounds i32, i32* %117, i64 0
  %118 = load i32, i32* %arrayidx115, align 4
  %add116 = add nsw i32 %113, %118
  %add117 = add nsw i32 %add116, 1
  %shr118 = ashr i32 %add117, 1
  %add119 = add nsw i32 %shr107, %shr118
  %call = call i32 @clip1a(i32 %add119)
  %conv120 = trunc i32 %call to i16
  %119 = load i32, i32* %j, align 4
  %idxprom121 = sext i32 %119 to i64
  %120 = load i32, i32* %i, align 4
  %idxprom122 = sext i32 %120 to i64
  %121 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mpr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %121, i32 0, i32 45
  %arrayidx123 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %mpr, i32 0, i64 %idxprom122
  %arrayidx124 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx123, i32 0, i64 %idxprom121
  store i16 %conv120, i16* %arrayidx124, align 2
  br label %for.inc

for.inc:                                          ; preds = %for.body.88
  %122 = load i32, i32* %i, align 4
  %inc = add nsw i32 %122, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond.85

for.end:                                          ; preds = %for.cond.85
  br label %for.inc.125

for.inc.125:                                      ; preds = %for.end
  %123 = load i32, i32* %j, align 4
  %inc126 = add nsw i32 %123, 1
  store i32 %inc126, i32* %j, align 4
  br label %for.cond

for.end.127:                                      ; preds = %for.cond
  br label %if.end.201

if.else:                                          ; preds = %if.then.79
  %124 = load i32, i32* %p_dir.addr, align 4
  %cmp128 = icmp eq i32 %124, 0
  br i1 %cmp128, label %if.then.130, label %if.else.165

if.then.130:                                      ; preds = %if.else
  %125 = load i32, i32* %block_y.addr, align 4
  store i32 %125, i32* %j, align 4
  br label %for.cond.131

for.cond.131:                                     ; preds = %for.inc.162, %if.then.130
  %126 = load i32, i32* %j, align 4
  %127 = load i32, i32* %block_y4, align 4
  %cmp132 = icmp slt i32 %126, %127
  br i1 %cmp132, label %for.body.134, label %for.end.164

for.body.134:                                     ; preds = %for.cond.131
  %128 = load i32, i32* %block_x.addr, align 4
  store i32 %128, i32* %i, align 4
  br label %for.cond.135

for.cond.135:                                     ; preds = %for.inc.159, %for.body.134
  %129 = load i32, i32* %i, align 4
  %130 = load i32, i32* %block_x4, align 4
  %cmp136 = icmp slt i32 %129, %130
  br i1 %cmp136, label %for.body.138, label %for.end.161

for.body.138:                                     ; preds = %for.cond.135
  %131 = load i16, i16* %fw_ref_idx.addr, align 2
  %idxprom139 = sext i16 %131 to i64
  %132 = load i32***, i32**** @wp_weight, align 8
  %arrayidx140 = getelementptr inbounds i32**, i32*** %132, i64 0
  %133 = load i32**, i32*** %arrayidx140, align 8
  %arrayidx141 = getelementptr inbounds i32*, i32** %133, i64 %idxprom139
  %134 = load i32*, i32** %arrayidx141, align 8
  %arrayidx142 = getelementptr inbounds i32, i32* %134, i64 0
  %135 = load i32, i32* %arrayidx142, align 4
  %136 = load i32*, i32** %fpred, align 8
  %incdec.ptr143 = getelementptr inbounds i32, i32* %136, i32 1
  store i32* %incdec.ptr143, i32** %fpred, align 8
  %137 = load i32, i32* %136, align 4
  %mul144 = mul nsw i32 %135, %137
  %138 = load i32, i32* @wp_luma_round, align 4
  %add145 = add nsw i32 %mul144, %138
  %139 = load i32, i32* @luma_log_weight_denom, align 4
  %shr146 = ashr i32 %add145, %139
  %140 = load i16, i16* %fw_ref_idx.addr, align 2
  %idxprom147 = sext i16 %140 to i64
  %141 = load i32***, i32**** @wp_offset, align 8
  %arrayidx148 = getelementptr inbounds i32**, i32*** %141, i64 0
  %142 = load i32**, i32*** %arrayidx148, align 8
  %arrayidx149 = getelementptr inbounds i32*, i32** %142, i64 %idxprom147
  %143 = load i32*, i32** %arrayidx149, align 8
  %arrayidx150 = getelementptr inbounds i32, i32* %143, i64 0
  %144 = load i32, i32* %arrayidx150, align 4
  %add151 = add nsw i32 %shr146, %144
  %call152 = call i32 @clip1a(i32 %add151)
  %conv153 = trunc i32 %call152 to i16
  %145 = load i32, i32* %j, align 4
  %idxprom154 = sext i32 %145 to i64
  %146 = load i32, i32* %i, align 4
  %idxprom155 = sext i32 %146 to i64
  %147 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mpr156 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %147, i32 0, i32 45
  %arrayidx157 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %mpr156, i32 0, i64 %idxprom155
  %arrayidx158 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx157, i32 0, i64 %idxprom154
  store i16 %conv153, i16* %arrayidx158, align 2
  br label %for.inc.159

for.inc.159:                                      ; preds = %for.body.138
  %148 = load i32, i32* %i, align 4
  %inc160 = add nsw i32 %148, 1
  store i32 %inc160, i32* %i, align 4
  br label %for.cond.135

for.end.161:                                      ; preds = %for.cond.135
  br label %for.inc.162

for.inc.162:                                      ; preds = %for.end.161
  %149 = load i32, i32* %j, align 4
  %inc163 = add nsw i32 %149, 1
  store i32 %inc163, i32* %j, align 4
  br label %for.cond.131

for.end.164:                                      ; preds = %for.cond.131
  br label %if.end.200

if.else.165:                                      ; preds = %if.else
  %150 = load i32, i32* %block_y.addr, align 4
  store i32 %150, i32* %j, align 4
  br label %for.cond.166

for.cond.166:                                     ; preds = %for.inc.197, %if.else.165
  %151 = load i32, i32* %j, align 4
  %152 = load i32, i32* %block_y4, align 4
  %cmp167 = icmp slt i32 %151, %152
  br i1 %cmp167, label %for.body.169, label %for.end.199

for.body.169:                                     ; preds = %for.cond.166
  %153 = load i32, i32* %block_x.addr, align 4
  store i32 %153, i32* %i, align 4
  br label %for.cond.170

for.cond.170:                                     ; preds = %for.inc.194, %for.body.169
  %154 = load i32, i32* %i, align 4
  %155 = load i32, i32* %block_x4, align 4
  %cmp171 = icmp slt i32 %154, %155
  br i1 %cmp171, label %for.body.173, label %for.end.196

for.body.173:                                     ; preds = %for.cond.170
  %156 = load i16, i16* %bw_ref_idx.addr, align 2
  %idxprom174 = sext i16 %156 to i64
  %157 = load i32***, i32**** @wp_weight, align 8
  %arrayidx175 = getelementptr inbounds i32**, i32*** %157, i64 1
  %158 = load i32**, i32*** %arrayidx175, align 8
  %arrayidx176 = getelementptr inbounds i32*, i32** %158, i64 %idxprom174
  %159 = load i32*, i32** %arrayidx176, align 8
  %arrayidx177 = getelementptr inbounds i32, i32* %159, i64 0
  %160 = load i32, i32* %arrayidx177, align 4
  %161 = load i32*, i32** %bpred, align 8
  %incdec.ptr178 = getelementptr inbounds i32, i32* %161, i32 1
  store i32* %incdec.ptr178, i32** %bpred, align 8
  %162 = load i32, i32* %161, align 4
  %mul179 = mul nsw i32 %160, %162
  %163 = load i32, i32* @wp_luma_round, align 4
  %add180 = add nsw i32 %mul179, %163
  %164 = load i32, i32* @luma_log_weight_denom, align 4
  %shr181 = ashr i32 %add180, %164
  %165 = load i16, i16* %bw_ref_idx.addr, align 2
  %idxprom182 = sext i16 %165 to i64
  %166 = load i32***, i32**** @wp_offset, align 8
  %arrayidx183 = getelementptr inbounds i32**, i32*** %166, i64 1
  %167 = load i32**, i32*** %arrayidx183, align 8
  %arrayidx184 = getelementptr inbounds i32*, i32** %167, i64 %idxprom182
  %168 = load i32*, i32** %arrayidx184, align 8
  %arrayidx185 = getelementptr inbounds i32, i32* %168, i64 0
  %169 = load i32, i32* %arrayidx185, align 4
  %add186 = add nsw i32 %shr181, %169
  %call187 = call i32 @clip1a(i32 %add186)
  %conv188 = trunc i32 %call187 to i16
  %170 = load i32, i32* %j, align 4
  %idxprom189 = sext i32 %170 to i64
  %171 = load i32, i32* %i, align 4
  %idxprom190 = sext i32 %171 to i64
  %172 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mpr191 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %172, i32 0, i32 45
  %arrayidx192 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %mpr191, i32 0, i64 %idxprom190
  %arrayidx193 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx192, i32 0, i64 %idxprom189
  store i16 %conv188, i16* %arrayidx193, align 2
  br label %for.inc.194

for.inc.194:                                      ; preds = %for.body.173
  %173 = load i32, i32* %i, align 4
  %inc195 = add nsw i32 %173, 1
  store i32 %inc195, i32* %i, align 4
  br label %for.cond.170

for.end.196:                                      ; preds = %for.cond.170
  br label %for.inc.197

for.inc.197:                                      ; preds = %for.end.196
  %174 = load i32, i32* %j, align 4
  %inc198 = add nsw i32 %174, 1
  store i32 %inc198, i32* %j, align 4
  br label %for.cond.166

for.end.199:                                      ; preds = %for.cond.166
  br label %if.end.200

if.end.200:                                       ; preds = %for.end.199, %for.end.164
  br label %if.end.201

if.end.201:                                       ; preds = %if.end.200, %for.end.127
  br label %if.end.279

if.else.202:                                      ; preds = %if.end.77
  %175 = load i32, i32* %p_dir.addr, align 4
  %cmp203 = icmp eq i32 %175, 2
  br i1 %cmp203, label %if.then.205, label %if.else.230

if.then.205:                                      ; preds = %if.else.202
  %176 = load i32, i32* %block_y.addr, align 4
  store i32 %176, i32* %j, align 4
  br label %for.cond.206

for.cond.206:                                     ; preds = %for.inc.227, %if.then.205
  %177 = load i32, i32* %j, align 4
  %178 = load i32, i32* %block_y4, align 4
  %cmp207 = icmp slt i32 %177, %178
  br i1 %cmp207, label %for.body.209, label %for.end.229

for.body.209:                                     ; preds = %for.cond.206
  %179 = load i32, i32* %block_x.addr, align 4
  store i32 %179, i32* %i, align 4
  br label %for.cond.210

for.cond.210:                                     ; preds = %for.inc.224, %for.body.209
  %180 = load i32, i32* %i, align 4
  %181 = load i32, i32* %block_x4, align 4
  %cmp211 = icmp slt i32 %180, %181
  br i1 %cmp211, label %for.body.213, label %for.end.226

for.body.213:                                     ; preds = %for.cond.210
  %182 = load i32*, i32** %fpred, align 8
  %incdec.ptr214 = getelementptr inbounds i32, i32* %182, i32 1
  store i32* %incdec.ptr214, i32** %fpred, align 8
  %183 = load i32, i32* %182, align 4
  %184 = load i32*, i32** %bpred, align 8
  %incdec.ptr215 = getelementptr inbounds i32, i32* %184, i32 1
  store i32* %incdec.ptr215, i32** %bpred, align 8
  %185 = load i32, i32* %184, align 4
  %add216 = add nsw i32 %183, %185
  %add217 = add nsw i32 %add216, 1
  %div = sdiv i32 %add217, 2
  %conv218 = trunc i32 %div to i16
  %186 = load i32, i32* %j, align 4
  %idxprom219 = sext i32 %186 to i64
  %187 = load i32, i32* %i, align 4
  %idxprom220 = sext i32 %187 to i64
  %188 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mpr221 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %188, i32 0, i32 45
  %arrayidx222 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %mpr221, i32 0, i64 %idxprom220
  %arrayidx223 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx222, i32 0, i64 %idxprom219
  store i16 %conv218, i16* %arrayidx223, align 2
  br label %for.inc.224

for.inc.224:                                      ; preds = %for.body.213
  %189 = load i32, i32* %i, align 4
  %inc225 = add nsw i32 %189, 1
  store i32 %inc225, i32* %i, align 4
  br label %for.cond.210

for.end.226:                                      ; preds = %for.cond.210
  br label %for.inc.227

for.inc.227:                                      ; preds = %for.end.226
  %190 = load i32, i32* %j, align 4
  %inc228 = add nsw i32 %190, 1
  store i32 %inc228, i32* %j, align 4
  br label %for.cond.206

for.end.229:                                      ; preds = %for.cond.206
  br label %if.end.278

if.else.230:                                      ; preds = %if.else.202
  %191 = load i32, i32* %p_dir.addr, align 4
  %cmp231 = icmp eq i32 %191, 0
  br i1 %cmp231, label %if.then.233, label %if.else.255

if.then.233:                                      ; preds = %if.else.230
  %192 = load i32, i32* %block_y.addr, align 4
  store i32 %192, i32* %j, align 4
  br label %for.cond.234

for.cond.234:                                     ; preds = %for.inc.252, %if.then.233
  %193 = load i32, i32* %j, align 4
  %194 = load i32, i32* %block_y4, align 4
  %cmp235 = icmp slt i32 %193, %194
  br i1 %cmp235, label %for.body.237, label %for.end.254

for.body.237:                                     ; preds = %for.cond.234
  %195 = load i32, i32* %block_x.addr, align 4
  store i32 %195, i32* %i, align 4
  br label %for.cond.238

for.cond.238:                                     ; preds = %for.inc.249, %for.body.237
  %196 = load i32, i32* %i, align 4
  %197 = load i32, i32* %block_x4, align 4
  %cmp239 = icmp slt i32 %196, %197
  br i1 %cmp239, label %for.body.241, label %for.end.251

for.body.241:                                     ; preds = %for.cond.238
  %198 = load i32*, i32** %fpred, align 8
  %incdec.ptr242 = getelementptr inbounds i32, i32* %198, i32 1
  store i32* %incdec.ptr242, i32** %fpred, align 8
  %199 = load i32, i32* %198, align 4
  %conv243 = trunc i32 %199 to i16
  %200 = load i32, i32* %j, align 4
  %idxprom244 = sext i32 %200 to i64
  %201 = load i32, i32* %i, align 4
  %idxprom245 = sext i32 %201 to i64
  %202 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mpr246 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %202, i32 0, i32 45
  %arrayidx247 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %mpr246, i32 0, i64 %idxprom245
  %arrayidx248 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx247, i32 0, i64 %idxprom244
  store i16 %conv243, i16* %arrayidx248, align 2
  br label %for.inc.249

for.inc.249:                                      ; preds = %for.body.241
  %203 = load i32, i32* %i, align 4
  %inc250 = add nsw i32 %203, 1
  store i32 %inc250, i32* %i, align 4
  br label %for.cond.238

for.end.251:                                      ; preds = %for.cond.238
  br label %for.inc.252

for.inc.252:                                      ; preds = %for.end.251
  %204 = load i32, i32* %j, align 4
  %inc253 = add nsw i32 %204, 1
  store i32 %inc253, i32* %j, align 4
  br label %for.cond.234

for.end.254:                                      ; preds = %for.cond.234
  br label %if.end.277

if.else.255:                                      ; preds = %if.else.230
  %205 = load i32, i32* %block_y.addr, align 4
  store i32 %205, i32* %j, align 4
  br label %for.cond.256

for.cond.256:                                     ; preds = %for.inc.274, %if.else.255
  %206 = load i32, i32* %j, align 4
  %207 = load i32, i32* %block_y4, align 4
  %cmp257 = icmp slt i32 %206, %207
  br i1 %cmp257, label %for.body.259, label %for.end.276

for.body.259:                                     ; preds = %for.cond.256
  %208 = load i32, i32* %block_x.addr, align 4
  store i32 %208, i32* %i, align 4
  br label %for.cond.260

for.cond.260:                                     ; preds = %for.inc.271, %for.body.259
  %209 = load i32, i32* %i, align 4
  %210 = load i32, i32* %block_x4, align 4
  %cmp261 = icmp slt i32 %209, %210
  br i1 %cmp261, label %for.body.263, label %for.end.273

for.body.263:                                     ; preds = %for.cond.260
  %211 = load i32*, i32** %bpred, align 8
  %incdec.ptr264 = getelementptr inbounds i32, i32* %211, i32 1
  store i32* %incdec.ptr264, i32** %bpred, align 8
  %212 = load i32, i32* %211, align 4
  %conv265 = trunc i32 %212 to i16
  %213 = load i32, i32* %j, align 4
  %idxprom266 = sext i32 %213 to i64
  %214 = load i32, i32* %i, align 4
  %idxprom267 = sext i32 %214 to i64
  %215 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mpr268 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %215, i32 0, i32 45
  %arrayidx269 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %mpr268, i32 0, i64 %idxprom267
  %arrayidx270 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx269, i32 0, i64 %idxprom266
  store i16 %conv265, i16* %arrayidx270, align 2
  br label %for.inc.271

for.inc.271:                                      ; preds = %for.body.263
  %216 = load i32, i32* %i, align 4
  %inc272 = add nsw i32 %216, 1
  store i32 %inc272, i32* %i, align 4
  br label %for.cond.260

for.end.273:                                      ; preds = %for.cond.260
  br label %for.inc.274

for.inc.274:                                      ; preds = %for.end.273
  %217 = load i32, i32* %j, align 4
  %inc275 = add nsw i32 %217, 1
  store i32 %inc275, i32* %j, align 4
  br label %for.cond.256

for.end.276:                                      ; preds = %for.cond.256
  br label %if.end.277

if.end.277:                                       ; preds = %for.end.276, %for.end.254
  br label %if.end.278

if.end.278:                                       ; preds = %if.end.277, %for.end.229
  br label %if.end.279

if.end.279:                                       ; preds = %if.end.278, %if.end.201
  ret void
}

; Function Attrs: nounwind uwtable
define void @LumaPrediction4x4Bi(i32 %block_x, i32 %block_y, i32 %p_dir, i32 %fw_mode, i32 %bw_mode, i16 signext %fw_ref_idx, i16 signext %bw_ref_idx, i32 %list) #0 {
entry:
  %block_x.addr = alloca i32, align 4
  %block_y.addr = alloca i32, align 4
  %p_dir.addr = alloca i32, align 4
  %fw_mode.addr = alloca i32, align 4
  %bw_mode.addr = alloca i32, align 4
  %fw_ref_idx.addr = alloca i16, align 2
  %bw_ref_idx.addr = alloca i16, align 2
  %list.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %block_x4 = alloca i32, align 4
  %block_y4 = alloca i32, align 4
  %pic_opix_x = alloca i32, align 4
  %pic_opix_y = alloca i32, align 4
  %bx = alloca i32, align 4
  %by = alloca i32, align 4
  %fpred = alloca i32*, align 8
  %bpred = alloca i32*, align 8
  %currMB = alloca %struct.macroblock*, align 8
  %apply_weights = alloca i32, align 4
  %list_offset = alloca i32, align 4
  %bipred_mv = alloca i16******, align 8
  store i32 %block_x, i32* %block_x.addr, align 4
  store i32 %block_y, i32* %block_y.addr, align 4
  store i32 %p_dir, i32* %p_dir.addr, align 4
  store i32 %fw_mode, i32* %fw_mode.addr, align 4
  store i32 %bw_mode, i32* %bw_mode.addr, align 4
  store i16 %fw_ref_idx, i16* %fw_ref_idx.addr, align 2
  store i16 %bw_ref_idx, i16* %bw_ref_idx.addr, align 2
  store i32 %list, i32* %list.addr, align 4
  %0 = load i32, i32* %block_x.addr, align 4
  %add = add nsw i32 %0, 4
  store i32 %add, i32* %block_x4, align 4
  %1 = load i32, i32* %block_y.addr, align 4
  %add1 = add nsw i32 %1, 4
  store i32 %add1, i32* %block_y4, align 4
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %opix_x = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 37
  %3 = load i32, i32* %opix_x, align 4
  %4 = load i32, i32* %block_x.addr, align 4
  %add2 = add nsw i32 %3, %4
  store i32 %add2, i32* %pic_opix_x, align 4
  %5 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %opix_y = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %5, i32 0, i32 38
  %6 = load i32, i32* %opix_y, align 4
  %7 = load i32, i32* %block_y.addr, align 4
  %add3 = add nsw i32 %6, %7
  store i32 %add3, i32* %pic_opix_y, align 4
  %8 = load i32, i32* %block_x.addr, align 4
  %shr = ashr i32 %8, 2
  store i32 %shr, i32* %bx, align 4
  %9 = load i32, i32* %block_y.addr, align 4
  %shr4 = ashr i32 %9, 2
  store i32 %shr4, i32* %by, align 4
  store i32* getelementptr inbounds ([16 x i32], [16 x i32]* @LumaPrediction4x4Bi.fw_pred, i32 0, i32 0), i32** %fpred, align 8
  store i32* getelementptr inbounds ([16 x i32], [16 x i32]* @LumaPrediction4x4Bi.bw_pred, i32 0, i32 0), i32** %bpred, align 8
  %10 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %10, i32 0, i32 3
  %11 = load i32, i32* %current_mb_nr, align 4
  %idxprom = sext i32 %11 to i64
  %12 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %12, i32 0, i32 51
  %13 = load %struct.macroblock*, %struct.macroblock** %mb_data, align 8
  %arrayidx = getelementptr inbounds %struct.macroblock, %struct.macroblock* %13, i64 %idxprom
  store %struct.macroblock* %arrayidx, %struct.macroblock** %currMB, align 8
  %14 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %weighted_pred_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %14, i32 0, i32 19
  %15 = load i32, i32* %weighted_pred_flag, align 4
  %tobool = icmp ne i32 %15, 0
  br i1 %tobool, label %land.lhs.true, label %lor.rhs

land.lhs.true:                                    ; preds = %entry
  %16 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %16, i32 0, i32 6
  %17 = load i32, i32* %type, align 4
  %cmp = icmp eq i32 %17, 0
  br i1 %cmp, label %lor.end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true
  %18 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type5 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %18, i32 0, i32 6
  %19 = load i32, i32* %type5, align 4
  %cmp6 = icmp eq i32 %19, 3
  br i1 %cmp6, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %lor.lhs.false, %entry
  %20 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %weighted_bipred_idc = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %20, i32 0, i32 20
  %21 = load i32, i32* %weighted_bipred_idc, align 4
  %tobool7 = icmp ne i32 %21, 0
  br i1 %tobool7, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %lor.rhs
  %22 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type8 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %22, i32 0, i32 6
  %23 = load i32, i32* %type8, align 4
  %cmp9 = icmp eq i32 %23, 1
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.rhs
  %24 = phi i1 [ false, %lor.rhs ], [ %cmp9, %land.rhs ]
  br label %lor.end

lor.end:                                          ; preds = %land.end, %lor.lhs.false, %land.lhs.true
  %25 = phi i1 [ true, %lor.lhs.false ], [ true, %land.lhs.true ], [ %24, %land.end ]
  %lor.ext = zext i1 %25 to i32
  store i32 %lor.ext, i32* %apply_weights, align 4
  %26 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %MbaffFrameFlag = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %26, i32 0, i32 90
  %27 = load i32, i32* %MbaffFrameFlag, align 4
  %tobool10 = icmp ne i32 %27, 0
  br i1 %tobool10, label %land.lhs.true.11, label %cond.false

land.lhs.true.11:                                 ; preds = %lor.end
  %28 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_field = getelementptr inbounds %struct.macroblock, %struct.macroblock* %28, i32 0, i32 22
  %29 = load i32, i32* %mb_field, align 4
  %tobool12 = icmp ne i32 %29, 0
  br i1 %tobool12, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true.11
  %30 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr13 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %30, i32 0, i32 3
  %31 = load i32, i32* %current_mb_nr13, align 4
  %rem = srem i32 %31, 2
  %tobool14 = icmp ne i32 %rem, 0
  %cond = select i1 %tobool14, i32 4, i32 2
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true.11, %lor.end
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond15 = phi i32 [ %cond, %cond.true ], [ 0, %cond.false ]
  store i32 %cond15, i32* %list_offset, align 4
  %32 = load i32, i32* %list.addr, align 4
  %tobool16 = icmp ne i32 %32, 0
  br i1 %tobool16, label %cond.true.17, label %cond.false.18

cond.true.17:                                     ; preds = %cond.end
  %33 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %bipred_mv1 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %33, i32 0, i32 72
  %34 = load i16******, i16******* %bipred_mv1, align 8
  br label %cond.end.19

cond.false.18:                                    ; preds = %cond.end
  %35 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %bipred_mv2 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %35, i32 0, i32 73
  %36 = load i16******, i16******* %bipred_mv2, align 8
  br label %cond.end.19

cond.end.19:                                      ; preds = %cond.false.18, %cond.true.17
  %cond20 = phi i16****** [ %34, %cond.true.17 ], [ %36, %cond.false.18 ]
  store i16****** %cond20, i16******* %bipred_mv, align 8
  %37 = load i32, i32* %p_dir.addr, align 4
  %cmp21 = icmp eq i32 %37, 0
  br i1 %cmp21, label %if.then, label %lor.lhs.false.22

lor.lhs.false.22:                                 ; preds = %cond.end.19
  %38 = load i32, i32* %p_dir.addr, align 4
  %cmp23 = icmp eq i32 %38, 2
  br i1 %cmp23, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false.22, %cond.end.19
  %39 = load i32, i32* %pic_opix_x, align 4
  %40 = load i32, i32* %pic_opix_y, align 4
  %41 = load i32, i32* %fw_mode.addr, align 4
  %idxprom24 = sext i32 %41 to i64
  %42 = load i16, i16* %fw_ref_idx.addr, align 2
  %idxprom25 = sext i16 %42 to i64
  %43 = load i32, i32* %by, align 4
  %idxprom26 = sext i32 %43 to i64
  %44 = load i32, i32* %bx, align 4
  %idxprom27 = sext i32 %44 to i64
  %45 = load i16******, i16******* %bipred_mv, align 8
  %arrayidx28 = getelementptr inbounds i16*****, i16****** %45, i64 %idxprom27
  %46 = load i16*****, i16****** %arrayidx28, align 8
  %arrayidx29 = getelementptr inbounds i16****, i16***** %46, i64 %idxprom26
  %47 = load i16****, i16***** %arrayidx29, align 8
  %arrayidx30 = getelementptr inbounds i16***, i16**** %47, i64 0
  %48 = load i16***, i16**** %arrayidx30, align 8
  %arrayidx31 = getelementptr inbounds i16**, i16*** %48, i64 %idxprom25
  %49 = load i16**, i16*** %arrayidx31, align 8
  %arrayidx32 = getelementptr inbounds i16*, i16** %49, i64 %idxprom24
  %50 = load i16*, i16** %arrayidx32, align 8
  %51 = load i16, i16* %fw_ref_idx.addr, align 2
  %52 = load i32, i32* %list_offset, align 4
  %add33 = add nsw i32 0, %52
  %idxprom34 = sext i32 %add33 to i64
  %arrayidx35 = getelementptr inbounds [6 x %struct.storable_picture**], [6 x %struct.storable_picture**]* @listX, i32 0, i64 %idxprom34
  %53 = load %struct.storable_picture**, %struct.storable_picture*** %arrayidx35, align 8
  call void @OneComponentLumaPrediction4x4(i32* getelementptr inbounds ([16 x i32], [16 x i32]* @LumaPrediction4x4Bi.fw_pred, i32 0, i32 0), i32 %39, i32 %40, i16* %50, i16 signext %51, %struct.storable_picture** %53)
  br label %if.end

if.end:                                           ; preds = %if.then, %lor.lhs.false.22
  %54 = load i32, i32* %p_dir.addr, align 4
  %cmp36 = icmp eq i32 %54, 1
  br i1 %cmp36, label %if.then.39, label %lor.lhs.false.37

lor.lhs.false.37:                                 ; preds = %if.end
  %55 = load i32, i32* %p_dir.addr, align 4
  %cmp38 = icmp eq i32 %55, 2
  br i1 %cmp38, label %if.then.39, label %if.end.52

if.then.39:                                       ; preds = %lor.lhs.false.37, %if.end
  %56 = load i32, i32* %pic_opix_x, align 4
  %57 = load i32, i32* %pic_opix_y, align 4
  %58 = load i32, i32* %bw_mode.addr, align 4
  %idxprom40 = sext i32 %58 to i64
  %59 = load i16, i16* %bw_ref_idx.addr, align 2
  %idxprom41 = sext i16 %59 to i64
  %60 = load i32, i32* %by, align 4
  %idxprom42 = sext i32 %60 to i64
  %61 = load i32, i32* %bx, align 4
  %idxprom43 = sext i32 %61 to i64
  %62 = load i16******, i16******* %bipred_mv, align 8
  %arrayidx44 = getelementptr inbounds i16*****, i16****** %62, i64 %idxprom43
  %63 = load i16*****, i16****** %arrayidx44, align 8
  %arrayidx45 = getelementptr inbounds i16****, i16***** %63, i64 %idxprom42
  %64 = load i16****, i16***** %arrayidx45, align 8
  %arrayidx46 = getelementptr inbounds i16***, i16**** %64, i64 1
  %65 = load i16***, i16**** %arrayidx46, align 8
  %arrayidx47 = getelementptr inbounds i16**, i16*** %65, i64 %idxprom41
  %66 = load i16**, i16*** %arrayidx47, align 8
  %arrayidx48 = getelementptr inbounds i16*, i16** %66, i64 %idxprom40
  %67 = load i16*, i16** %arrayidx48, align 8
  %68 = load i16, i16* %bw_ref_idx.addr, align 2
  %69 = load i32, i32* %list_offset, align 4
  %add49 = add nsw i32 1, %69
  %idxprom50 = sext i32 %add49 to i64
  %arrayidx51 = getelementptr inbounds [6 x %struct.storable_picture**], [6 x %struct.storable_picture**]* @listX, i32 0, i64 %idxprom50
  %70 = load %struct.storable_picture**, %struct.storable_picture*** %arrayidx51, align 8
  call void @OneComponentLumaPrediction4x4(i32* getelementptr inbounds ([16 x i32], [16 x i32]* @LumaPrediction4x4Bi.bw_pred, i32 0, i32 0), i32 %56, i32 %57, i16* %67, i16 signext %68, %struct.storable_picture** %70)
  br label %if.end.52

if.end.52:                                        ; preds = %if.then.39, %lor.lhs.false.37
  %71 = load i32, i32* %apply_weights, align 4
  %tobool53 = icmp ne i32 %71, 0
  br i1 %tobool53, label %if.then.54, label %if.else.173

if.then.54:                                       ; preds = %if.end.52
  %72 = load i32, i32* %p_dir.addr, align 4
  %cmp55 = icmp eq i32 %72, 2
  br i1 %cmp55, label %if.then.56, label %if.else

if.then.56:                                       ; preds = %if.then.54
  %73 = load i32, i32* %block_y.addr, align 4
  store i32 %73, i32* %j, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc.96, %if.then.56
  %74 = load i32, i32* %j, align 4
  %75 = load i32, i32* %block_y4, align 4
  %cmp57 = icmp slt i32 %74, %75
  br i1 %cmp57, label %for.body, label %for.end.98

for.body:                                         ; preds = %for.cond
  %76 = load i32, i32* %block_x.addr, align 4
  store i32 %76, i32* %i, align 4
  br label %for.cond.58

for.cond.58:                                      ; preds = %for.inc, %for.body
  %77 = load i32, i32* %i, align 4
  %78 = load i32, i32* %block_x4, align 4
  %cmp59 = icmp slt i32 %77, %78
  br i1 %cmp59, label %for.body.60, label %for.end

for.body.60:                                      ; preds = %for.cond.58
  %79 = load i16, i16* %bw_ref_idx.addr, align 2
  %idxprom61 = sext i16 %79 to i64
  %80 = load i16, i16* %fw_ref_idx.addr, align 2
  %idxprom62 = sext i16 %80 to i64
  %81 = load i32****, i32***** @wbp_weight, align 8
  %arrayidx63 = getelementptr inbounds i32***, i32**** %81, i64 0
  %82 = load i32***, i32**** %arrayidx63, align 8
  %arrayidx64 = getelementptr inbounds i32**, i32*** %82, i64 %idxprom62
  %83 = load i32**, i32*** %arrayidx64, align 8
  %arrayidx65 = getelementptr inbounds i32*, i32** %83, i64 %idxprom61
  %84 = load i32*, i32** %arrayidx65, align 8
  %arrayidx66 = getelementptr inbounds i32, i32* %84, i64 0
  %85 = load i32, i32* %arrayidx66, align 4
  %86 = load i32*, i32** %fpred, align 8
  %incdec.ptr = getelementptr inbounds i32, i32* %86, i32 1
  store i32* %incdec.ptr, i32** %fpred, align 8
  %87 = load i32, i32* %86, align 4
  %mul = mul nsw i32 %85, %87
  %88 = load i16, i16* %bw_ref_idx.addr, align 2
  %idxprom67 = sext i16 %88 to i64
  %89 = load i16, i16* %fw_ref_idx.addr, align 2
  %idxprom68 = sext i16 %89 to i64
  %90 = load i32****, i32***** @wbp_weight, align 8
  %arrayidx69 = getelementptr inbounds i32***, i32**** %90, i64 1
  %91 = load i32***, i32**** %arrayidx69, align 8
  %arrayidx70 = getelementptr inbounds i32**, i32*** %91, i64 %idxprom68
  %92 = load i32**, i32*** %arrayidx70, align 8
  %arrayidx71 = getelementptr inbounds i32*, i32** %92, i64 %idxprom67
  %93 = load i32*, i32** %arrayidx71, align 8
  %arrayidx72 = getelementptr inbounds i32, i32* %93, i64 0
  %94 = load i32, i32* %arrayidx72, align 4
  %95 = load i32*, i32** %bpred, align 8
  %incdec.ptr73 = getelementptr inbounds i32, i32* %95, i32 1
  store i32* %incdec.ptr73, i32** %bpred, align 8
  %96 = load i32, i32* %95, align 4
  %mul74 = mul nsw i32 %94, %96
  %add75 = add nsw i32 %mul, %mul74
  %97 = load i32, i32* @wp_luma_round, align 4
  %mul76 = mul nsw i32 2, %97
  %add77 = add nsw i32 %add75, %mul76
  %98 = load i32, i32* @luma_log_weight_denom, align 4
  %add78 = add nsw i32 %98, 1
  %shr79 = ashr i32 %add77, %add78
  %99 = load i16, i16* %fw_ref_idx.addr, align 2
  %idxprom80 = sext i16 %99 to i64
  %100 = load i32***, i32**** @wp_offset, align 8
  %arrayidx81 = getelementptr inbounds i32**, i32*** %100, i64 0
  %101 = load i32**, i32*** %arrayidx81, align 8
  %arrayidx82 = getelementptr inbounds i32*, i32** %101, i64 %idxprom80
  %102 = load i32*, i32** %arrayidx82, align 8
  %arrayidx83 = getelementptr inbounds i32, i32* %102, i64 0
  %103 = load i32, i32* %arrayidx83, align 4
  %104 = load i16, i16* %bw_ref_idx.addr, align 2
  %idxprom84 = sext i16 %104 to i64
  %105 = load i32***, i32**** @wp_offset, align 8
  %arrayidx85 = getelementptr inbounds i32**, i32*** %105, i64 1
  %106 = load i32**, i32*** %arrayidx85, align 8
  %arrayidx86 = getelementptr inbounds i32*, i32** %106, i64 %idxprom84
  %107 = load i32*, i32** %arrayidx86, align 8
  %arrayidx87 = getelementptr inbounds i32, i32* %107, i64 0
  %108 = load i32, i32* %arrayidx87, align 4
  %add88 = add nsw i32 %103, %108
  %add89 = add nsw i32 %add88, 1
  %shr90 = ashr i32 %add89, 1
  %add91 = add nsw i32 %shr79, %shr90
  %call = call i32 @clip1a(i32 %add91)
  %conv = trunc i32 %call to i16
  %109 = load i32, i32* %j, align 4
  %idxprom92 = sext i32 %109 to i64
  %110 = load i32, i32* %i, align 4
  %idxprom93 = sext i32 %110 to i64
  %111 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mpr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %111, i32 0, i32 45
  %arrayidx94 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %mpr, i32 0, i64 %idxprom93
  %arrayidx95 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx94, i32 0, i64 %idxprom92
  store i16 %conv, i16* %arrayidx95, align 2
  br label %for.inc

for.inc:                                          ; preds = %for.body.60
  %112 = load i32, i32* %i, align 4
  %inc = add nsw i32 %112, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond.58

for.end:                                          ; preds = %for.cond.58
  br label %for.inc.96

for.inc.96:                                       ; preds = %for.end
  %113 = load i32, i32* %j, align 4
  %inc97 = add nsw i32 %113, 1
  store i32 %inc97, i32* %j, align 4
  br label %for.cond

for.end.98:                                       ; preds = %for.cond
  br label %if.end.172

if.else:                                          ; preds = %if.then.54
  %114 = load i32, i32* %p_dir.addr, align 4
  %cmp99 = icmp eq i32 %114, 0
  br i1 %cmp99, label %if.then.101, label %if.else.136

if.then.101:                                      ; preds = %if.else
  %115 = load i32, i32* %block_y.addr, align 4
  store i32 %115, i32* %j, align 4
  br label %for.cond.102

for.cond.102:                                     ; preds = %for.inc.133, %if.then.101
  %116 = load i32, i32* %j, align 4
  %117 = load i32, i32* %block_y4, align 4
  %cmp103 = icmp slt i32 %116, %117
  br i1 %cmp103, label %for.body.105, label %for.end.135

for.body.105:                                     ; preds = %for.cond.102
  %118 = load i32, i32* %block_x.addr, align 4
  store i32 %118, i32* %i, align 4
  br label %for.cond.106

for.cond.106:                                     ; preds = %for.inc.130, %for.body.105
  %119 = load i32, i32* %i, align 4
  %120 = load i32, i32* %block_x4, align 4
  %cmp107 = icmp slt i32 %119, %120
  br i1 %cmp107, label %for.body.109, label %for.end.132

for.body.109:                                     ; preds = %for.cond.106
  %121 = load i16, i16* %fw_ref_idx.addr, align 2
  %idxprom110 = sext i16 %121 to i64
  %122 = load i32***, i32**** @wp_weight, align 8
  %arrayidx111 = getelementptr inbounds i32**, i32*** %122, i64 0
  %123 = load i32**, i32*** %arrayidx111, align 8
  %arrayidx112 = getelementptr inbounds i32*, i32** %123, i64 %idxprom110
  %124 = load i32*, i32** %arrayidx112, align 8
  %arrayidx113 = getelementptr inbounds i32, i32* %124, i64 0
  %125 = load i32, i32* %arrayidx113, align 4
  %126 = load i32*, i32** %fpred, align 8
  %incdec.ptr114 = getelementptr inbounds i32, i32* %126, i32 1
  store i32* %incdec.ptr114, i32** %fpred, align 8
  %127 = load i32, i32* %126, align 4
  %mul115 = mul nsw i32 %125, %127
  %128 = load i32, i32* @wp_luma_round, align 4
  %add116 = add nsw i32 %mul115, %128
  %129 = load i32, i32* @luma_log_weight_denom, align 4
  %shr117 = ashr i32 %add116, %129
  %130 = load i16, i16* %fw_ref_idx.addr, align 2
  %idxprom118 = sext i16 %130 to i64
  %131 = load i32***, i32**** @wp_offset, align 8
  %arrayidx119 = getelementptr inbounds i32**, i32*** %131, i64 0
  %132 = load i32**, i32*** %arrayidx119, align 8
  %arrayidx120 = getelementptr inbounds i32*, i32** %132, i64 %idxprom118
  %133 = load i32*, i32** %arrayidx120, align 8
  %arrayidx121 = getelementptr inbounds i32, i32* %133, i64 0
  %134 = load i32, i32* %arrayidx121, align 4
  %add122 = add nsw i32 %shr117, %134
  %call123 = call i32 @clip1a(i32 %add122)
  %conv124 = trunc i32 %call123 to i16
  %135 = load i32, i32* %j, align 4
  %idxprom125 = sext i32 %135 to i64
  %136 = load i32, i32* %i, align 4
  %idxprom126 = sext i32 %136 to i64
  %137 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mpr127 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %137, i32 0, i32 45
  %arrayidx128 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %mpr127, i32 0, i64 %idxprom126
  %arrayidx129 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx128, i32 0, i64 %idxprom125
  store i16 %conv124, i16* %arrayidx129, align 2
  br label %for.inc.130

for.inc.130:                                      ; preds = %for.body.109
  %138 = load i32, i32* %i, align 4
  %inc131 = add nsw i32 %138, 1
  store i32 %inc131, i32* %i, align 4
  br label %for.cond.106

for.end.132:                                      ; preds = %for.cond.106
  br label %for.inc.133

for.inc.133:                                      ; preds = %for.end.132
  %139 = load i32, i32* %j, align 4
  %inc134 = add nsw i32 %139, 1
  store i32 %inc134, i32* %j, align 4
  br label %for.cond.102

for.end.135:                                      ; preds = %for.cond.102
  br label %if.end.171

if.else.136:                                      ; preds = %if.else
  %140 = load i32, i32* %block_y.addr, align 4
  store i32 %140, i32* %j, align 4
  br label %for.cond.137

for.cond.137:                                     ; preds = %for.inc.168, %if.else.136
  %141 = load i32, i32* %j, align 4
  %142 = load i32, i32* %block_y4, align 4
  %cmp138 = icmp slt i32 %141, %142
  br i1 %cmp138, label %for.body.140, label %for.end.170

for.body.140:                                     ; preds = %for.cond.137
  %143 = load i32, i32* %block_x.addr, align 4
  store i32 %143, i32* %i, align 4
  br label %for.cond.141

for.cond.141:                                     ; preds = %for.inc.165, %for.body.140
  %144 = load i32, i32* %i, align 4
  %145 = load i32, i32* %block_x4, align 4
  %cmp142 = icmp slt i32 %144, %145
  br i1 %cmp142, label %for.body.144, label %for.end.167

for.body.144:                                     ; preds = %for.cond.141
  %146 = load i16, i16* %bw_ref_idx.addr, align 2
  %idxprom145 = sext i16 %146 to i64
  %147 = load i32***, i32**** @wp_weight, align 8
  %arrayidx146 = getelementptr inbounds i32**, i32*** %147, i64 1
  %148 = load i32**, i32*** %arrayidx146, align 8
  %arrayidx147 = getelementptr inbounds i32*, i32** %148, i64 %idxprom145
  %149 = load i32*, i32** %arrayidx147, align 8
  %arrayidx148 = getelementptr inbounds i32, i32* %149, i64 0
  %150 = load i32, i32* %arrayidx148, align 4
  %151 = load i32*, i32** %bpred, align 8
  %incdec.ptr149 = getelementptr inbounds i32, i32* %151, i32 1
  store i32* %incdec.ptr149, i32** %bpred, align 8
  %152 = load i32, i32* %151, align 4
  %mul150 = mul nsw i32 %150, %152
  %153 = load i32, i32* @wp_luma_round, align 4
  %add151 = add nsw i32 %mul150, %153
  %154 = load i32, i32* @luma_log_weight_denom, align 4
  %shr152 = ashr i32 %add151, %154
  %155 = load i16, i16* %bw_ref_idx.addr, align 2
  %idxprom153 = sext i16 %155 to i64
  %156 = load i32***, i32**** @wp_offset, align 8
  %arrayidx154 = getelementptr inbounds i32**, i32*** %156, i64 1
  %157 = load i32**, i32*** %arrayidx154, align 8
  %arrayidx155 = getelementptr inbounds i32*, i32** %157, i64 %idxprom153
  %158 = load i32*, i32** %arrayidx155, align 8
  %arrayidx156 = getelementptr inbounds i32, i32* %158, i64 0
  %159 = load i32, i32* %arrayidx156, align 4
  %add157 = add nsw i32 %shr152, %159
  %call158 = call i32 @clip1a(i32 %add157)
  %conv159 = trunc i32 %call158 to i16
  %160 = load i32, i32* %j, align 4
  %idxprom160 = sext i32 %160 to i64
  %161 = load i32, i32* %i, align 4
  %idxprom161 = sext i32 %161 to i64
  %162 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mpr162 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %162, i32 0, i32 45
  %arrayidx163 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %mpr162, i32 0, i64 %idxprom161
  %arrayidx164 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx163, i32 0, i64 %idxprom160
  store i16 %conv159, i16* %arrayidx164, align 2
  br label %for.inc.165

for.inc.165:                                      ; preds = %for.body.144
  %163 = load i32, i32* %i, align 4
  %inc166 = add nsw i32 %163, 1
  store i32 %inc166, i32* %i, align 4
  br label %for.cond.141

for.end.167:                                      ; preds = %for.cond.141
  br label %for.inc.168

for.inc.168:                                      ; preds = %for.end.167
  %164 = load i32, i32* %j, align 4
  %inc169 = add nsw i32 %164, 1
  store i32 %inc169, i32* %j, align 4
  br label %for.cond.137

for.end.170:                                      ; preds = %for.cond.137
  br label %if.end.171

if.end.171:                                       ; preds = %for.end.170, %for.end.135
  br label %if.end.172

if.end.172:                                       ; preds = %if.end.171, %for.end.98
  br label %if.end.250

if.else.173:                                      ; preds = %if.end.52
  %165 = load i32, i32* %p_dir.addr, align 4
  %cmp174 = icmp eq i32 %165, 2
  br i1 %cmp174, label %if.then.176, label %if.else.201

if.then.176:                                      ; preds = %if.else.173
  %166 = load i32, i32* %block_y.addr, align 4
  store i32 %166, i32* %j, align 4
  br label %for.cond.177

for.cond.177:                                     ; preds = %for.inc.198, %if.then.176
  %167 = load i32, i32* %j, align 4
  %168 = load i32, i32* %block_y4, align 4
  %cmp178 = icmp slt i32 %167, %168
  br i1 %cmp178, label %for.body.180, label %for.end.200

for.body.180:                                     ; preds = %for.cond.177
  %169 = load i32, i32* %block_x.addr, align 4
  store i32 %169, i32* %i, align 4
  br label %for.cond.181

for.cond.181:                                     ; preds = %for.inc.195, %for.body.180
  %170 = load i32, i32* %i, align 4
  %171 = load i32, i32* %block_x4, align 4
  %cmp182 = icmp slt i32 %170, %171
  br i1 %cmp182, label %for.body.184, label %for.end.197

for.body.184:                                     ; preds = %for.cond.181
  %172 = load i32*, i32** %fpred, align 8
  %incdec.ptr185 = getelementptr inbounds i32, i32* %172, i32 1
  store i32* %incdec.ptr185, i32** %fpred, align 8
  %173 = load i32, i32* %172, align 4
  %174 = load i32*, i32** %bpred, align 8
  %incdec.ptr186 = getelementptr inbounds i32, i32* %174, i32 1
  store i32* %incdec.ptr186, i32** %bpred, align 8
  %175 = load i32, i32* %174, align 4
  %add187 = add nsw i32 %173, %175
  %add188 = add nsw i32 %add187, 1
  %div = sdiv i32 %add188, 2
  %conv189 = trunc i32 %div to i16
  %176 = load i32, i32* %j, align 4
  %idxprom190 = sext i32 %176 to i64
  %177 = load i32, i32* %i, align 4
  %idxprom191 = sext i32 %177 to i64
  %178 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mpr192 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %178, i32 0, i32 45
  %arrayidx193 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %mpr192, i32 0, i64 %idxprom191
  %arrayidx194 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx193, i32 0, i64 %idxprom190
  store i16 %conv189, i16* %arrayidx194, align 2
  br label %for.inc.195

for.inc.195:                                      ; preds = %for.body.184
  %179 = load i32, i32* %i, align 4
  %inc196 = add nsw i32 %179, 1
  store i32 %inc196, i32* %i, align 4
  br label %for.cond.181

for.end.197:                                      ; preds = %for.cond.181
  br label %for.inc.198

for.inc.198:                                      ; preds = %for.end.197
  %180 = load i32, i32* %j, align 4
  %inc199 = add nsw i32 %180, 1
  store i32 %inc199, i32* %j, align 4
  br label %for.cond.177

for.end.200:                                      ; preds = %for.cond.177
  br label %if.end.249

if.else.201:                                      ; preds = %if.else.173
  %181 = load i32, i32* %p_dir.addr, align 4
  %cmp202 = icmp eq i32 %181, 0
  br i1 %cmp202, label %if.then.204, label %if.else.226

if.then.204:                                      ; preds = %if.else.201
  %182 = load i32, i32* %block_y.addr, align 4
  store i32 %182, i32* %j, align 4
  br label %for.cond.205

for.cond.205:                                     ; preds = %for.inc.223, %if.then.204
  %183 = load i32, i32* %j, align 4
  %184 = load i32, i32* %block_y4, align 4
  %cmp206 = icmp slt i32 %183, %184
  br i1 %cmp206, label %for.body.208, label %for.end.225

for.body.208:                                     ; preds = %for.cond.205
  %185 = load i32, i32* %block_x.addr, align 4
  store i32 %185, i32* %i, align 4
  br label %for.cond.209

for.cond.209:                                     ; preds = %for.inc.220, %for.body.208
  %186 = load i32, i32* %i, align 4
  %187 = load i32, i32* %block_x4, align 4
  %cmp210 = icmp slt i32 %186, %187
  br i1 %cmp210, label %for.body.212, label %for.end.222

for.body.212:                                     ; preds = %for.cond.209
  %188 = load i32*, i32** %fpred, align 8
  %incdec.ptr213 = getelementptr inbounds i32, i32* %188, i32 1
  store i32* %incdec.ptr213, i32** %fpred, align 8
  %189 = load i32, i32* %188, align 4
  %conv214 = trunc i32 %189 to i16
  %190 = load i32, i32* %j, align 4
  %idxprom215 = sext i32 %190 to i64
  %191 = load i32, i32* %i, align 4
  %idxprom216 = sext i32 %191 to i64
  %192 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mpr217 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %192, i32 0, i32 45
  %arrayidx218 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %mpr217, i32 0, i64 %idxprom216
  %arrayidx219 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx218, i32 0, i64 %idxprom215
  store i16 %conv214, i16* %arrayidx219, align 2
  br label %for.inc.220

for.inc.220:                                      ; preds = %for.body.212
  %193 = load i32, i32* %i, align 4
  %inc221 = add nsw i32 %193, 1
  store i32 %inc221, i32* %i, align 4
  br label %for.cond.209

for.end.222:                                      ; preds = %for.cond.209
  br label %for.inc.223

for.inc.223:                                      ; preds = %for.end.222
  %194 = load i32, i32* %j, align 4
  %inc224 = add nsw i32 %194, 1
  store i32 %inc224, i32* %j, align 4
  br label %for.cond.205

for.end.225:                                      ; preds = %for.cond.205
  br label %if.end.248

if.else.226:                                      ; preds = %if.else.201
  %195 = load i32, i32* %block_y.addr, align 4
  store i32 %195, i32* %j, align 4
  br label %for.cond.227

for.cond.227:                                     ; preds = %for.inc.245, %if.else.226
  %196 = load i32, i32* %j, align 4
  %197 = load i32, i32* %block_y4, align 4
  %cmp228 = icmp slt i32 %196, %197
  br i1 %cmp228, label %for.body.230, label %for.end.247

for.body.230:                                     ; preds = %for.cond.227
  %198 = load i32, i32* %block_x.addr, align 4
  store i32 %198, i32* %i, align 4
  br label %for.cond.231

for.cond.231:                                     ; preds = %for.inc.242, %for.body.230
  %199 = load i32, i32* %i, align 4
  %200 = load i32, i32* %block_x4, align 4
  %cmp232 = icmp slt i32 %199, %200
  br i1 %cmp232, label %for.body.234, label %for.end.244

for.body.234:                                     ; preds = %for.cond.231
  %201 = load i32*, i32** %bpred, align 8
  %incdec.ptr235 = getelementptr inbounds i32, i32* %201, i32 1
  store i32* %incdec.ptr235, i32** %bpred, align 8
  %202 = load i32, i32* %201, align 4
  %conv236 = trunc i32 %202 to i16
  %203 = load i32, i32* %j, align 4
  %idxprom237 = sext i32 %203 to i64
  %204 = load i32, i32* %i, align 4
  %idxprom238 = sext i32 %204 to i64
  %205 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mpr239 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %205, i32 0, i32 45
  %arrayidx240 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %mpr239, i32 0, i64 %idxprom238
  %arrayidx241 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx240, i32 0, i64 %idxprom237
  store i16 %conv236, i16* %arrayidx241, align 2
  br label %for.inc.242

for.inc.242:                                      ; preds = %for.body.234
  %206 = load i32, i32* %i, align 4
  %inc243 = add nsw i32 %206, 1
  store i32 %inc243, i32* %i, align 4
  br label %for.cond.231

for.end.244:                                      ; preds = %for.cond.231
  br label %for.inc.245

for.inc.245:                                      ; preds = %for.end.244
  %207 = load i32, i32* %j, align 4
  %inc246 = add nsw i32 %207, 1
  store i32 %inc246, i32* %j, align 4
  br label %for.cond.227

for.end.247:                                      ; preds = %for.cond.227
  br label %if.end.248

if.end.248:                                       ; preds = %for.end.247, %for.end.225
  br label %if.end.249

if.end.249:                                       ; preds = %if.end.248, %for.end.200
  br label %if.end.250

if.end.250:                                       ; preds = %if.end.249, %if.end.172
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @LumaResidualCoding8x8(i32* %cbp, i64* %cbp_blk, i32 %block8x8, i16 signext %p_dir, i32 %fw_mode, i32 %bw_mode, i16 signext %fw_refframe, i16 signext %bw_refframe) #0 {
entry:
  %cbp.addr = alloca i32*, align 8
  %cbp_blk.addr = alloca i64*, align 8
  %block8x8.addr = alloca i32, align 4
  %p_dir.addr = alloca i16, align 2
  %fw_mode.addr = alloca i32, align 4
  %bw_mode.addr = alloca i32, align 4
  %fw_refframe.addr = alloca i16, align 2
  %bw_refframe.addr = alloca i16, align 2
  %block_y = alloca i32, align 4
  %block_x = alloca i32, align 4
  %pic_pix_y = alloca i32, align 4
  %pic_pix_x = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %nonzero = alloca i32, align 4
  %cbp_blk_mask = alloca i32, align 4
  %coeff_cost = alloca i32, align 4
  %mb_y = alloca i32, align 4
  %mb_x = alloca i32, align 4
  %cbp_mask = alloca i32, align 4
  %bxx = alloca i32, align 4
  %byy = alloca i32, align 4
  %scrFlag = alloca i32, align 4
  %skipped = alloca i32, align 4
  %currMB = alloca %struct.macroblock*, align 8
  %need_8x8_transform = alloca i32, align 4
  %residue_R = alloca i32, align 4
  %residue_G = alloca i32, align 4
  %residue_B = alloca i32, align 4
  %temp = alloca i32, align 4
  store i32* %cbp, i32** %cbp.addr, align 8
  store i64* %cbp_blk, i64** %cbp_blk.addr, align 8
  store i32 %block8x8, i32* %block8x8.addr, align 4
  store i16 %p_dir, i16* %p_dir.addr, align 2
  store i32 %fw_mode, i32* %fw_mode.addr, align 4
  store i32 %bw_mode, i32* %bw_mode.addr, align 4
  store i16 %fw_refframe, i16* %fw_refframe.addr, align 2
  store i16 %bw_refframe, i16* %bw_refframe.addr, align 2
  store i32 0, i32* %nonzero, align 4
  store i32 0, i32* %coeff_cost, align 4
  %0 = load i32, i32* %block8x8.addr, align 4
  %div = sdiv i32 %0, 2
  %shl = shl i32 %div, 3
  store i32 %shl, i32* %mb_y, align 4
  %1 = load i32, i32* %block8x8.addr, align 4
  %rem = srem i32 %1, 2
  %shl1 = shl i32 %rem, 3
  store i32 %shl1, i32* %mb_x, align 4
  %2 = load i32, i32* %block8x8.addr, align 4
  %shl2 = shl i32 1, %2
  store i32 %shl2, i32* %cbp_mask, align 4
  store i32 0, i32* %scrFlag, align 4
  %3 = load i32, i32* %fw_mode.addr, align 4
  %cmp = icmp eq i32 %3, 0
  br i1 %cmp, label %land.lhs.true, label %land.end

land.lhs.true:                                    ; preds = %entry
  %4 = load i32, i32* %bw_mode.addr, align 4
  %cmp3 = icmp eq i32 %4, 0
  br i1 %cmp3, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %land.lhs.true
  %5 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %5, i32 0, i32 6
  %6 = load i32, i32* %type, align 4
  %cmp4 = icmp ne i32 %6, 1
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %7 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %cmp4, %land.rhs ]
  %land.ext = zext i1 %7 to i32
  store i32 %land.ext, i32* %skipped, align 4
  %8 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %8, i32 0, i32 3
  %9 = load i32, i32* %current_mb_nr, align 4
  %idxprom = sext i32 %9 to i64
  %10 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %10, i32 0, i32 51
  %11 = load %struct.macroblock*, %struct.macroblock** %mb_data, align 8
  %arrayidx = getelementptr inbounds %struct.macroblock, %struct.macroblock* %11, i64 %idxprom
  store %struct.macroblock* %arrayidx, %struct.macroblock** %currMB, align 8
  %12 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %luma_transform_size_8x8_flag = getelementptr inbounds %struct.macroblock, %struct.macroblock* %12, i32 0, i32 32
  %13 = load i32, i32* %luma_transform_size_8x8_flag, align 4
  store i32 %13, i32* %need_8x8_transform, align 4
  %14 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type5 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %14, i32 0, i32 6
  %15 = load i32, i32* %type5, align 4
  %cmp6 = icmp eq i32 %15, 1
  br i1 %cmp6, label %if.then, label %if.end

if.then:                                          ; preds = %land.end
  store i32 1, i32* %scrFlag, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %land.end
  store i32 0, i32* %byy, align 4
  %16 = load i32, i32* %mb_y, align 4
  store i32 %16, i32* %block_y, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc.375, %if.end
  %17 = load i32, i32* %block_y, align 4
  %18 = load i32, i32* %mb_y, align 4
  %add = add nsw i32 %18, 8
  %cmp7 = icmp slt i32 %17, %add
  br i1 %cmp7, label %for.body, label %for.end.378

for.body:                                         ; preds = %for.cond
  %19 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %opix_y = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %19, i32 0, i32 38
  %20 = load i32, i32* %opix_y, align 4
  %21 = load i32, i32* %block_y, align 4
  %add8 = add nsw i32 %20, %21
  store i32 %add8, i32* %pic_pix_y, align 4
  store i32 0, i32* %bxx, align 4
  %22 = load i32, i32* %mb_x, align 4
  store i32 %22, i32* %block_x, align 4
  br label %for.cond.9

for.cond.9:                                       ; preds = %for.inc.371, %for.body
  %23 = load i32, i32* %block_x, align 4
  %24 = load i32, i32* %mb_x, align 4
  %add10 = add nsw i32 %24, 8
  %cmp11 = icmp slt i32 %23, %add10
  br i1 %cmp11, label %for.body.12, label %for.end.374

for.body.12:                                      ; preds = %for.cond.9
  %25 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %opix_x = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %25, i32 0, i32 37
  %26 = load i32, i32* %opix_x, align 4
  %27 = load i32, i32* %block_x, align 4
  %add13 = add nsw i32 %26, %27
  store i32 %add13, i32* %pic_pix_x, align 4
  %28 = load i32, i32* %block_x, align 4
  %shr = ashr i32 %28, 2
  %29 = load i32, i32* %block_y, align 4
  %add14 = add nsw i32 %shr, %29
  store i32 %add14, i32* %cbp_blk_mask, align 4
  %30 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %residue_transform_flag = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %30, i32 0, i32 164
  %31 = load i32, i32* %residue_transform_flag, align 4
  %tobool = icmp ne i32 %31, 0
  br i1 %tobool, label %if.then.15, label %if.end.69

if.then.15:                                       ; preds = %for.body.12
  %32 = load i32, i32* %block_x, align 4
  %33 = load i32, i32* %block_y, align 4
  %34 = load i16, i16* %p_dir.addr, align 2
  %conv = sext i16 %34 to i32
  %35 = load i32, i32* %fw_mode.addr, align 4
  %36 = load i32, i32* %bw_mode.addr, align 4
  %37 = load i16, i16* %fw_refframe.addr, align 2
  %38 = load i16, i16* %bw_refframe.addr, align 2
  call void @ChromaPrediction4x4(i32 0, i32 %32, i32 %33, i32 %conv, i32 %35, i32 %36, i16 signext %37, i16 signext %38)
  store i32 0, i32* %j, align 4
  br label %for.cond.16

for.cond.16:                                      ; preds = %for.inc.37, %if.then.15
  %39 = load i32, i32* %j, align 4
  %cmp17 = icmp slt i32 %39, 4
  br i1 %cmp17, label %for.body.19, label %for.end.39

for.body.19:                                      ; preds = %for.cond.16
  store i32 0, i32* %i, align 4
  br label %for.cond.20

for.cond.20:                                      ; preds = %for.inc, %for.body.19
  %40 = load i32, i32* %i, align 4
  %cmp21 = icmp slt i32 %40, 4
  br i1 %cmp21, label %for.body.23, label %for.end

for.body.23:                                      ; preds = %for.cond.20
  %41 = load i32, i32* %j, align 4
  %42 = load i32, i32* %block_y, align 4
  %add24 = add nsw i32 %41, %42
  %idxprom25 = sext i32 %add24 to i64
  %43 = load i32, i32* %i, align 4
  %44 = load i32, i32* %block_x, align 4
  %add26 = add nsw i32 %43, %44
  %idxprom27 = sext i32 %add26 to i64
  %45 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mpr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %45, i32 0, i32 45
  %arrayidx28 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %mpr, i32 0, i64 %idxprom27
  %arrayidx29 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx28, i32 0, i64 %idxprom25
  %46 = load i16, i16* %arrayidx29, align 2
  %conv30 = zext i16 %46 to i32
  %47 = load i32, i32* %j, align 4
  %48 = load i32, i32* %block_y, align 4
  %add31 = add nsw i32 %47, %48
  %idxprom32 = sext i32 %add31 to i64
  %49 = load i32, i32* %i, align 4
  %50 = load i32, i32* %block_x, align 4
  %add33 = add nsw i32 %49, %50
  %idxprom34 = sext i32 %add33 to i64
  %arrayidx35 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* getelementptr inbounds ([3 x [16 x [16 x i32]]], [3 x [16 x [16 x i32]]]* @mprRGB, i32 0, i64 1), i32 0, i64 %idxprom34
  %arrayidx36 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx35, i32 0, i64 %idxprom32
  store i32 %conv30, i32* %arrayidx36, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body.23
  %51 = load i32, i32* %i, align 4
  %inc = add nsw i32 %51, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond.20

for.end:                                          ; preds = %for.cond.20
  br label %for.inc.37

for.inc.37:                                       ; preds = %for.end
  %52 = load i32, i32* %j, align 4
  %inc38 = add nsw i32 %52, 1
  store i32 %inc38, i32* %j, align 4
  br label %for.cond.16

for.end.39:                                       ; preds = %for.cond.16
  %53 = load i32, i32* %block_x, align 4
  %54 = load i32, i32* %block_y, align 4
  %55 = load i16, i16* %p_dir.addr, align 2
  %conv40 = sext i16 %55 to i32
  %56 = load i32, i32* %fw_mode.addr, align 4
  %57 = load i32, i32* %bw_mode.addr, align 4
  %58 = load i16, i16* %fw_refframe.addr, align 2
  %59 = load i16, i16* %bw_refframe.addr, align 2
  call void @ChromaPrediction4x4(i32 1, i32 %53, i32 %54, i32 %conv40, i32 %56, i32 %57, i16 signext %58, i16 signext %59)
  store i32 0, i32* %j, align 4
  br label %for.cond.41

for.cond.41:                                      ; preds = %for.inc.66, %for.end.39
  %60 = load i32, i32* %j, align 4
  %cmp42 = icmp slt i32 %60, 4
  br i1 %cmp42, label %for.body.44, label %for.end.68

for.body.44:                                      ; preds = %for.cond.41
  store i32 0, i32* %i, align 4
  br label %for.cond.45

for.cond.45:                                      ; preds = %for.inc.63, %for.body.44
  %61 = load i32, i32* %i, align 4
  %cmp46 = icmp slt i32 %61, 4
  br i1 %cmp46, label %for.body.48, label %for.end.65

for.body.48:                                      ; preds = %for.cond.45
  %62 = load i32, i32* %j, align 4
  %63 = load i32, i32* %block_y, align 4
  %add49 = add nsw i32 %62, %63
  %idxprom50 = sext i32 %add49 to i64
  %64 = load i32, i32* %i, align 4
  %65 = load i32, i32* %block_x, align 4
  %add51 = add nsw i32 %64, %65
  %idxprom52 = sext i32 %add51 to i64
  %66 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mpr53 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %66, i32 0, i32 45
  %arrayidx54 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %mpr53, i32 0, i64 %idxprom52
  %arrayidx55 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx54, i32 0, i64 %idxprom50
  %67 = load i16, i16* %arrayidx55, align 2
  %conv56 = zext i16 %67 to i32
  %68 = load i32, i32* %j, align 4
  %69 = load i32, i32* %block_y, align 4
  %add57 = add nsw i32 %68, %69
  %idxprom58 = sext i32 %add57 to i64
  %70 = load i32, i32* %i, align 4
  %71 = load i32, i32* %block_x, align 4
  %add59 = add nsw i32 %70, %71
  %idxprom60 = sext i32 %add59 to i64
  %arrayidx61 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* getelementptr inbounds ([3 x [16 x [16 x i32]]], [3 x [16 x [16 x i32]]]* @mprRGB, i32 0, i64 2), i32 0, i64 %idxprom60
  %arrayidx62 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx61, i32 0, i64 %idxprom58
  store i32 %conv56, i32* %arrayidx62, align 4
  br label %for.inc.63

for.inc.63:                                       ; preds = %for.body.48
  %72 = load i32, i32* %i, align 4
  %inc64 = add nsw i32 %72, 1
  store i32 %inc64, i32* %i, align 4
  br label %for.cond.45

for.end.65:                                       ; preds = %for.cond.45
  br label %for.inc.66

for.inc.66:                                       ; preds = %for.end.65
  %73 = load i32, i32* %j, align 4
  %inc67 = add nsw i32 %73, 1
  store i32 %inc67, i32* %j, align 4
  br label %for.cond.41

for.end.68:                                       ; preds = %for.cond.41
  br label %if.end.69

if.end.69:                                        ; preds = %for.end.68, %for.body.12
  %74 = load i32, i32* %block_x, align 4
  %75 = load i32, i32* %block_y, align 4
  %76 = load i16, i16* %p_dir.addr, align 2
  %conv70 = sext i16 %76 to i32
  %77 = load i32, i32* %fw_mode.addr, align 4
  %78 = load i32, i32* %bw_mode.addr, align 4
  %79 = load i16, i16* %fw_refframe.addr, align 2
  %80 = load i16, i16* %bw_refframe.addr, align 2
  call void @LumaPrediction4x4(i32 %74, i32 %75, i32 %conv70, i32 %77, i32 %78, i16 signext %79, i16 signext %80)
  %81 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %residue_transform_flag71 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %81, i32 0, i32 164
  %82 = load i32, i32* %residue_transform_flag71, align 4
  %tobool72 = icmp ne i32 %82, 0
  br i1 %tobool72, label %if.then.73, label %if.end.102

if.then.73:                                       ; preds = %if.end.69
  store i32 0, i32* %j, align 4
  br label %for.cond.74

for.cond.74:                                      ; preds = %for.inc.99, %if.then.73
  %83 = load i32, i32* %j, align 4
  %cmp75 = icmp slt i32 %83, 4
  br i1 %cmp75, label %for.body.77, label %for.end.101

for.body.77:                                      ; preds = %for.cond.74
  store i32 0, i32* %i, align 4
  br label %for.cond.78

for.cond.78:                                      ; preds = %for.inc.96, %for.body.77
  %84 = load i32, i32* %i, align 4
  %cmp79 = icmp slt i32 %84, 4
  br i1 %cmp79, label %for.body.81, label %for.end.98

for.body.81:                                      ; preds = %for.cond.78
  %85 = load i32, i32* %j, align 4
  %86 = load i32, i32* %block_y, align 4
  %add82 = add nsw i32 %85, %86
  %idxprom83 = sext i32 %add82 to i64
  %87 = load i32, i32* %i, align 4
  %88 = load i32, i32* %block_x, align 4
  %add84 = add nsw i32 %87, %88
  %idxprom85 = sext i32 %add84 to i64
  %89 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mpr86 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %89, i32 0, i32 45
  %arrayidx87 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %mpr86, i32 0, i64 %idxprom85
  %arrayidx88 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx87, i32 0, i64 %idxprom83
  %90 = load i16, i16* %arrayidx88, align 2
  %conv89 = zext i16 %90 to i32
  %91 = load i32, i32* %j, align 4
  %92 = load i32, i32* %block_y, align 4
  %add90 = add nsw i32 %91, %92
  %idxprom91 = sext i32 %add90 to i64
  %93 = load i32, i32* %i, align 4
  %94 = load i32, i32* %block_x, align 4
  %add92 = add nsw i32 %93, %94
  %idxprom93 = sext i32 %add92 to i64
  %arrayidx94 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* getelementptr inbounds ([3 x [16 x [16 x i32]]], [3 x [16 x [16 x i32]]]* @mprRGB, i32 0, i64 0), i32 0, i64 %idxprom93
  %arrayidx95 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx94, i32 0, i64 %idxprom91
  store i32 %conv89, i32* %arrayidx95, align 4
  br label %for.inc.96

for.inc.96:                                       ; preds = %for.body.81
  %95 = load i32, i32* %i, align 4
  %inc97 = add nsw i32 %95, 1
  store i32 %inc97, i32* %i, align 4
  br label %for.cond.78

for.end.98:                                       ; preds = %for.cond.78
  br label %for.inc.99

for.inc.99:                                       ; preds = %for.end.98
  %96 = load i32, i32* %j, align 4
  %inc100 = add nsw i32 %96, 1
  store i32 %inc100, i32* %j, align 4
  br label %for.cond.74

for.end.101:                                      ; preds = %for.cond.74
  br label %if.end.102

if.end.102:                                       ; preds = %for.end.101, %if.end.69
  %97 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %residue_transform_flag103 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %97, i32 0, i32 164
  %98 = load i32, i32* %residue_transform_flag103, align 4
  %tobool104 = icmp ne i32 %98, 0
  br i1 %tobool104, label %if.else.198, label %if.then.105

if.then.105:                                      ; preds = %if.end.102
  %99 = load i32, i32* %need_8x8_transform, align 4
  %tobool106 = icmp ne i32 %99, 0
  br i1 %tobool106, label %if.else.159, label %if.then.107

if.then.107:                                      ; preds = %if.then.105
  store i32 0, i32* %j, align 4
  br label %for.cond.108

for.cond.108:                                     ; preds = %for.inc.138, %if.then.107
  %100 = load i32, i32* %j, align 4
  %cmp109 = icmp slt i32 %100, 4
  br i1 %cmp109, label %for.body.111, label %for.end.140

for.body.111:                                     ; preds = %for.cond.108
  store i32 0, i32* %i, align 4
  br label %for.cond.112

for.cond.112:                                     ; preds = %for.inc.135, %for.body.111
  %101 = load i32, i32* %i, align 4
  %cmp113 = icmp slt i32 %101, 4
  br i1 %cmp113, label %for.body.115, label %for.end.137

for.body.115:                                     ; preds = %for.cond.112
  %102 = load i32, i32* %pic_pix_x, align 4
  %103 = load i32, i32* %i, align 4
  %add116 = add nsw i32 %102, %103
  %idxprom117 = sext i32 %add116 to i64
  %104 = load i32, i32* %pic_pix_y, align 4
  %105 = load i32, i32* %j, align 4
  %add118 = add nsw i32 %104, %105
  %idxprom119 = sext i32 %add118 to i64
  %106 = load i16**, i16*** @imgY_org, align 8
  %arrayidx120 = getelementptr inbounds i16*, i16** %106, i64 %idxprom119
  %107 = load i16*, i16** %arrayidx120, align 8
  %arrayidx121 = getelementptr inbounds i16, i16* %107, i64 %idxprom117
  %108 = load i16, i16* %arrayidx121, align 2
  %conv122 = zext i16 %108 to i32
  %109 = load i32, i32* %j, align 4
  %110 = load i32, i32* %block_y, align 4
  %add123 = add nsw i32 %109, %110
  %idxprom124 = sext i32 %add123 to i64
  %111 = load i32, i32* %i, align 4
  %112 = load i32, i32* %block_x, align 4
  %add125 = add nsw i32 %111, %112
  %idxprom126 = sext i32 %add125 to i64
  %113 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mpr127 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %113, i32 0, i32 45
  %arrayidx128 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %mpr127, i32 0, i64 %idxprom126
  %arrayidx129 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx128, i32 0, i64 %idxprom124
  %114 = load i16, i16* %arrayidx129, align 2
  %conv130 = zext i16 %114 to i32
  %sub = sub nsw i32 %conv122, %conv130
  %115 = load i32, i32* %j, align 4
  %idxprom131 = sext i32 %115 to i64
  %116 = load i32, i32* %i, align 4
  %idxprom132 = sext i32 %116 to i64
  %117 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %117, i32 0, i32 46
  %arrayidx133 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7, i32 0, i64 %idxprom132
  %arrayidx134 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx133, i32 0, i64 %idxprom131
  store i32 %sub, i32* %arrayidx134, align 4
  br label %for.inc.135

for.inc.135:                                      ; preds = %for.body.115
  %118 = load i32, i32* %i, align 4
  %inc136 = add nsw i32 %118, 1
  store i32 %inc136, i32* %i, align 4
  br label %for.cond.112

for.end.137:                                      ; preds = %for.cond.112
  br label %for.inc.138

for.inc.138:                                      ; preds = %for.end.137
  %119 = load i32, i32* %j, align 4
  %inc139 = add nsw i32 %119, 1
  store i32 %inc139, i32* %j, align 4
  br label %for.cond.108

for.end.140:                                      ; preds = %for.cond.108
  %120 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NoResidueDirect = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %120, i32 0, i32 88
  %121 = load i32, i32* %NoResidueDirect, align 4
  %cmp141 = icmp ne i32 %121, 1
  br i1 %cmp141, label %land.lhs.true.143, label %if.end.158

land.lhs.true.143:                                ; preds = %for.end.140
  %122 = load i32, i32* %skipped, align 4
  %tobool144 = icmp ne i32 %122, 0
  br i1 %tobool144, label %if.end.158, label %if.then.145

if.then.145:                                      ; preds = %land.lhs.true.143
  %123 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type146 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %123, i32 0, i32 6
  %124 = load i32, i32* %type146, align 4
  %cmp147 = icmp ne i32 %124, 3
  br i1 %cmp147, label %if.then.149, label %if.else

if.then.149:                                      ; preds = %if.then.145
  %125 = load i32, i32* %block_x, align 4
  %126 = load i32, i32* %block_y, align 4
  %call = call i32 @dct_luma(i32 %125, i32 %126, i32* %coeff_cost, i32 0)
  store i32 %call, i32* %nonzero, align 4
  br label %if.end.151

if.else:                                          ; preds = %if.then.145
  %127 = load i32, i32* %block_x, align 4
  %128 = load i32, i32* %block_y, align 4
  %call150 = call i32 @dct_luma_sp(i32 %127, i32 %128, i32* %coeff_cost)
  store i32 %call150, i32* %nonzero, align 4
  br label %if.end.151

if.end.151:                                       ; preds = %if.else, %if.then.149
  %129 = load i32, i32* %nonzero, align 4
  %tobool152 = icmp ne i32 %129, 0
  br i1 %tobool152, label %if.then.153, label %if.end.157

if.then.153:                                      ; preds = %if.end.151
  %130 = load i32, i32* %cbp_blk_mask, align 4
  %shl154 = shl i32 1, %130
  %conv155 = sext i32 %shl154 to i64
  %131 = load i64*, i64** %cbp_blk.addr, align 8
  %132 = load i64, i64* %131, align 8
  %or = or i64 %132, %conv155
  store i64 %or, i64* %131, align 8
  %133 = load i32, i32* %cbp_mask, align 4
  %134 = load i32*, i32** %cbp.addr, align 8
  %135 = load i32, i32* %134, align 4
  %or156 = or i32 %135, %133
  store i32 %or156, i32* %134, align 4
  br label %if.end.157

if.end.157:                                       ; preds = %if.then.153, %if.end.151
  br label %if.end.158

if.end.158:                                       ; preds = %if.end.157, %land.lhs.true.143, %for.end.140
  br label %if.end.197

if.else.159:                                      ; preds = %if.then.105
  store i32 0, i32* %j, align 4
  br label %for.cond.160

for.cond.160:                                     ; preds = %for.inc.194, %if.else.159
  %136 = load i32, i32* %j, align 4
  %cmp161 = icmp slt i32 %136, 4
  br i1 %cmp161, label %for.body.163, label %for.end.196

for.body.163:                                     ; preds = %for.cond.160
  store i32 0, i32* %i, align 4
  br label %for.cond.164

for.cond.164:                                     ; preds = %for.inc.191, %for.body.163
  %137 = load i32, i32* %i, align 4
  %cmp165 = icmp slt i32 %137, 4
  br i1 %cmp165, label %for.body.167, label %for.end.193

for.body.167:                                     ; preds = %for.cond.164
  %138 = load i32, i32* %pic_pix_x, align 4
  %139 = load i32, i32* %i, align 4
  %add168 = add nsw i32 %138, %139
  %idxprom169 = sext i32 %add168 to i64
  %140 = load i32, i32* %pic_pix_y, align 4
  %141 = load i32, i32* %j, align 4
  %add170 = add nsw i32 %140, %141
  %idxprom171 = sext i32 %add170 to i64
  %142 = load i16**, i16*** @imgY_org, align 8
  %arrayidx172 = getelementptr inbounds i16*, i16** %142, i64 %idxprom171
  %143 = load i16*, i16** %arrayidx172, align 8
  %arrayidx173 = getelementptr inbounds i16, i16* %143, i64 %idxprom169
  %144 = load i16, i16* %arrayidx173, align 2
  %conv174 = zext i16 %144 to i32
  %145 = load i32, i32* %j, align 4
  %146 = load i32, i32* %block_y, align 4
  %add175 = add nsw i32 %145, %146
  %idxprom176 = sext i32 %add175 to i64
  %147 = load i32, i32* %i, align 4
  %148 = load i32, i32* %block_x, align 4
  %add177 = add nsw i32 %147, %148
  %idxprom178 = sext i32 %add177 to i64
  %149 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mpr179 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %149, i32 0, i32 45
  %arrayidx180 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %mpr179, i32 0, i64 %idxprom178
  %arrayidx181 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx180, i32 0, i64 %idxprom176
  %150 = load i16, i16* %arrayidx181, align 2
  %conv182 = zext i16 %150 to i32
  %sub183 = sub nsw i32 %conv174, %conv182
  %151 = load i32, i32* %j, align 4
  %152 = load i32, i32* %byy, align 4
  %add184 = add nsw i32 %151, %152
  %idxprom185 = sext i32 %add184 to i64
  %153 = load i32, i32* %i, align 4
  %154 = load i32, i32* %bxx, align 4
  %add186 = add nsw i32 %153, %154
  %idxprom187 = sext i32 %add186 to i64
  %155 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7188 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %155, i32 0, i32 46
  %arrayidx189 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7188, i32 0, i64 %idxprom187
  %arrayidx190 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx189, i32 0, i64 %idxprom185
  store i32 %sub183, i32* %arrayidx190, align 4
  br label %for.inc.191

for.inc.191:                                      ; preds = %for.body.167
  %156 = load i32, i32* %i, align 4
  %inc192 = add nsw i32 %156, 1
  store i32 %inc192, i32* %i, align 4
  br label %for.cond.164

for.end.193:                                      ; preds = %for.cond.164
  br label %for.inc.194

for.inc.194:                                      ; preds = %for.end.193
  %157 = load i32, i32* %j, align 4
  %inc195 = add nsw i32 %157, 1
  store i32 %inc195, i32* %j, align 4
  br label %for.cond.160

for.end.196:                                      ; preds = %for.cond.160
  br label %if.end.197

if.end.197:                                       ; preds = %for.end.196, %if.end.158
  br label %if.end.370

if.else.198:                                      ; preds = %if.end.102
  store i32 0, i32* %j, align 4
  br label %for.cond.199

for.cond.199:                                     ; preds = %for.inc.318, %if.else.198
  %158 = load i32, i32* %j, align 4
  %cmp200 = icmp slt i32 %158, 4
  br i1 %cmp200, label %for.body.202, label %for.end.320

for.body.202:                                     ; preds = %for.cond.199
  store i32 0, i32* %i, align 4
  br label %for.cond.203

for.cond.203:                                     ; preds = %for.inc.315, %for.body.202
  %159 = load i32, i32* %i, align 4
  %cmp204 = icmp slt i32 %159, 4
  br i1 %cmp204, label %for.body.206, label %for.end.317

for.body.206:                                     ; preds = %for.cond.203
  %160 = load i32, i32* %pic_pix_x, align 4
  %161 = load i32, i32* %i, align 4
  %add207 = add nsw i32 %160, %161
  %idxprom208 = sext i32 %add207 to i64
  %162 = load i32, i32* %pic_pix_y, align 4
  %163 = load i32, i32* %j, align 4
  %add209 = add nsw i32 %162, %163
  %idxprom210 = sext i32 %add209 to i64
  %164 = load i16***, i16**** @imgUV_org, align 8
  %arrayidx211 = getelementptr inbounds i16**, i16*** %164, i64 0
  %165 = load i16**, i16*** %arrayidx211, align 8
  %arrayidx212 = getelementptr inbounds i16*, i16** %165, i64 %idxprom210
  %166 = load i16*, i16** %arrayidx212, align 8
  %arrayidx213 = getelementptr inbounds i16, i16* %166, i64 %idxprom208
  %167 = load i16, i16* %arrayidx213, align 2
  %conv214 = zext i16 %167 to i32
  %168 = load i32, i32* %j, align 4
  %169 = load i32, i32* %block_y, align 4
  %add215 = add nsw i32 %168, %169
  %idxprom216 = sext i32 %add215 to i64
  %170 = load i32, i32* %i, align 4
  %171 = load i32, i32* %block_x, align 4
  %add217 = add nsw i32 %170, %171
  %idxprom218 = sext i32 %add217 to i64
  %arrayidx219 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* getelementptr inbounds ([3 x [16 x [16 x i32]]], [3 x [16 x [16 x i32]]]* @mprRGB, i32 0, i64 1), i32 0, i64 %idxprom218
  %arrayidx220 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx219, i32 0, i64 %idxprom216
  %172 = load i32, i32* %arrayidx220, align 4
  %sub221 = sub nsw i32 %conv214, %172
  store i32 %sub221, i32* %residue_B, align 4
  %173 = load i32, i32* %pic_pix_x, align 4
  %174 = load i32, i32* %i, align 4
  %add222 = add nsw i32 %173, %174
  %idxprom223 = sext i32 %add222 to i64
  %175 = load i32, i32* %pic_pix_y, align 4
  %176 = load i32, i32* %j, align 4
  %add224 = add nsw i32 %175, %176
  %idxprom225 = sext i32 %add224 to i64
  %177 = load i16**, i16*** @imgY_org, align 8
  %arrayidx226 = getelementptr inbounds i16*, i16** %177, i64 %idxprom225
  %178 = load i16*, i16** %arrayidx226, align 8
  %arrayidx227 = getelementptr inbounds i16, i16* %178, i64 %idxprom223
  %179 = load i16, i16* %arrayidx227, align 2
  %conv228 = zext i16 %179 to i32
  %180 = load i32, i32* %j, align 4
  %181 = load i32, i32* %block_y, align 4
  %add229 = add nsw i32 %180, %181
  %idxprom230 = sext i32 %add229 to i64
  %182 = load i32, i32* %i, align 4
  %183 = load i32, i32* %block_x, align 4
  %add231 = add nsw i32 %182, %183
  %idxprom232 = sext i32 %add231 to i64
  %arrayidx233 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* getelementptr inbounds ([3 x [16 x [16 x i32]]], [3 x [16 x [16 x i32]]]* @mprRGB, i32 0, i64 0), i32 0, i64 %idxprom232
  %arrayidx234 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx233, i32 0, i64 %idxprom230
  %184 = load i32, i32* %arrayidx234, align 4
  %sub235 = sub nsw i32 %conv228, %184
  store i32 %sub235, i32* %residue_G, align 4
  %185 = load i32, i32* %pic_pix_x, align 4
  %186 = load i32, i32* %i, align 4
  %add236 = add nsw i32 %185, %186
  %idxprom237 = sext i32 %add236 to i64
  %187 = load i32, i32* %pic_pix_y, align 4
  %188 = load i32, i32* %j, align 4
  %add238 = add nsw i32 %187, %188
  %idxprom239 = sext i32 %add238 to i64
  %189 = load i16***, i16**** @imgUV_org, align 8
  %arrayidx240 = getelementptr inbounds i16**, i16*** %189, i64 1
  %190 = load i16**, i16*** %arrayidx240, align 8
  %arrayidx241 = getelementptr inbounds i16*, i16** %190, i64 %idxprom239
  %191 = load i16*, i16** %arrayidx241, align 8
  %arrayidx242 = getelementptr inbounds i16, i16* %191, i64 %idxprom237
  %192 = load i16, i16* %arrayidx242, align 2
  %conv243 = zext i16 %192 to i32
  %193 = load i32, i32* %j, align 4
  %194 = load i32, i32* %block_y, align 4
  %add244 = add nsw i32 %193, %194
  %idxprom245 = sext i32 %add244 to i64
  %195 = load i32, i32* %i, align 4
  %196 = load i32, i32* %block_x, align 4
  %add246 = add nsw i32 %195, %196
  %idxprom247 = sext i32 %add246 to i64
  %arrayidx248 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* getelementptr inbounds ([3 x [16 x [16 x i32]]], [3 x [16 x [16 x i32]]]* @mprRGB, i32 0, i64 2), i32 0, i64 %idxprom247
  %arrayidx249 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx248, i32 0, i64 %idxprom245
  %197 = load i32, i32* %arrayidx249, align 4
  %sub250 = sub nsw i32 %conv243, %197
  store i32 %sub250, i32* %residue_R, align 4
  %198 = load i32, i32* %residue_R, align 4
  %199 = load i32, i32* %residue_B, align 4
  %sub251 = sub nsw i32 %198, %199
  %200 = load i32, i32* %j, align 4
  %201 = load i32, i32* %block_y, align 4
  %add252 = add nsw i32 %200, %201
  %idxprom253 = sext i32 %add252 to i64
  %202 = load i32, i32* %i, align 4
  %203 = load i32, i32* %block_x, align 4
  %add254 = add nsw i32 %202, %203
  %idxprom255 = sext i32 %add254 to i64
  %arrayidx256 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* @resTrans_R, i32 0, i64 %idxprom255
  %arrayidx257 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx256, i32 0, i64 %idxprom253
  store i32 %sub251, i32* %arrayidx257, align 4
  %204 = load i32, i32* %residue_B, align 4
  %205 = load i32, i32* %j, align 4
  %206 = load i32, i32* %block_y, align 4
  %add258 = add nsw i32 %205, %206
  %idxprom259 = sext i32 %add258 to i64
  %207 = load i32, i32* %i, align 4
  %208 = load i32, i32* %block_x, align 4
  %add260 = add nsw i32 %207, %208
  %idxprom261 = sext i32 %add260 to i64
  %arrayidx262 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* @resTrans_R, i32 0, i64 %idxprom261
  %arrayidx263 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx262, i32 0, i64 %idxprom259
  %209 = load i32, i32* %arrayidx263, align 4
  %shr264 = ashr i32 %209, 1
  %add265 = add nsw i32 %204, %shr264
  store i32 %add265, i32* %temp, align 4
  %210 = load i32, i32* %residue_G, align 4
  %211 = load i32, i32* %temp, align 4
  %sub266 = sub nsw i32 %210, %211
  %212 = load i32, i32* %j, align 4
  %213 = load i32, i32* %block_y, align 4
  %add267 = add nsw i32 %212, %213
  %idxprom268 = sext i32 %add267 to i64
  %214 = load i32, i32* %i, align 4
  %215 = load i32, i32* %block_x, align 4
  %add269 = add nsw i32 %214, %215
  %idxprom270 = sext i32 %add269 to i64
  %arrayidx271 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* @resTrans_B, i32 0, i64 %idxprom270
  %arrayidx272 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx271, i32 0, i64 %idxprom268
  store i32 %sub266, i32* %arrayidx272, align 4
  %216 = load i32, i32* %temp, align 4
  %217 = load i32, i32* %j, align 4
  %218 = load i32, i32* %block_y, align 4
  %add273 = add nsw i32 %217, %218
  %idxprom274 = sext i32 %add273 to i64
  %219 = load i32, i32* %i, align 4
  %220 = load i32, i32* %block_x, align 4
  %add275 = add nsw i32 %219, %220
  %idxprom276 = sext i32 %add275 to i64
  %arrayidx277 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* @resTrans_B, i32 0, i64 %idxprom276
  %arrayidx278 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx277, i32 0, i64 %idxprom274
  %221 = load i32, i32* %arrayidx278, align 4
  %shr279 = ashr i32 %221, 1
  %add280 = add nsw i32 %216, %shr279
  %222 = load i32, i32* %j, align 4
  %223 = load i32, i32* %block_y, align 4
  %add281 = add nsw i32 %222, %223
  %idxprom282 = sext i32 %add281 to i64
  %224 = load i32, i32* %i, align 4
  %225 = load i32, i32* %block_x, align 4
  %add283 = add nsw i32 %224, %225
  %idxprom284 = sext i32 %add283 to i64
  %arrayidx285 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* @resTrans_G, i32 0, i64 %idxprom284
  %arrayidx286 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx285, i32 0, i64 %idxprom282
  store i32 %add280, i32* %arrayidx286, align 4
  %226 = load i32, i32* %need_8x8_transform, align 4
  %tobool287 = icmp ne i32 %226, 0
  br i1 %tobool287, label %if.else.300, label %if.then.288

if.then.288:                                      ; preds = %for.body.206
  %227 = load i32, i32* %j, align 4
  %228 = load i32, i32* %block_y, align 4
  %add289 = add nsw i32 %227, %228
  %idxprom290 = sext i32 %add289 to i64
  %229 = load i32, i32* %i, align 4
  %230 = load i32, i32* %block_x, align 4
  %add291 = add nsw i32 %229, %230
  %idxprom292 = sext i32 %add291 to i64
  %arrayidx293 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* @resTrans_G, i32 0, i64 %idxprom292
  %arrayidx294 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx293, i32 0, i64 %idxprom290
  %231 = load i32, i32* %arrayidx294, align 4
  %232 = load i32, i32* %j, align 4
  %idxprom295 = sext i32 %232 to i64
  %233 = load i32, i32* %i, align 4
  %idxprom296 = sext i32 %233 to i64
  %234 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7297 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %234, i32 0, i32 46
  %arrayidx298 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7297, i32 0, i64 %idxprom296
  %arrayidx299 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx298, i32 0, i64 %idxprom295
  store i32 %231, i32* %arrayidx299, align 4
  br label %if.end.314

if.else.300:                                      ; preds = %for.body.206
  %235 = load i32, i32* %j, align 4
  %236 = load i32, i32* %block_y, align 4
  %add301 = add nsw i32 %235, %236
  %idxprom302 = sext i32 %add301 to i64
  %237 = load i32, i32* %i, align 4
  %238 = load i32, i32* %block_x, align 4
  %add303 = add nsw i32 %237, %238
  %idxprom304 = sext i32 %add303 to i64
  %arrayidx305 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* @resTrans_G, i32 0, i64 %idxprom304
  %arrayidx306 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx305, i32 0, i64 %idxprom302
  %239 = load i32, i32* %arrayidx306, align 4
  %240 = load i32, i32* %j, align 4
  %241 = load i32, i32* %byy, align 4
  %add307 = add nsw i32 %240, %241
  %idxprom308 = sext i32 %add307 to i64
  %242 = load i32, i32* %i, align 4
  %243 = load i32, i32* %bxx, align 4
  %add309 = add nsw i32 %242, %243
  %idxprom310 = sext i32 %add309 to i64
  %244 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7311 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %244, i32 0, i32 46
  %arrayidx312 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7311, i32 0, i64 %idxprom310
  %arrayidx313 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx312, i32 0, i64 %idxprom308
  store i32 %239, i32* %arrayidx313, align 4
  br label %if.end.314

if.end.314:                                       ; preds = %if.else.300, %if.then.288
  br label %for.inc.315

for.inc.315:                                      ; preds = %if.end.314
  %245 = load i32, i32* %i, align 4
  %inc316 = add nsw i32 %245, 1
  store i32 %inc316, i32* %i, align 4
  br label %for.cond.203

for.end.317:                                      ; preds = %for.cond.203
  br label %for.inc.318

for.inc.318:                                      ; preds = %for.end.317
  %246 = load i32, i32* %j, align 4
  %inc319 = add nsw i32 %246, 1
  store i32 %inc319, i32* %j, align 4
  br label %for.cond.199

for.end.320:                                      ; preds = %for.cond.199
  %247 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NoResidueDirect321 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %247, i32 0, i32 88
  %248 = load i32, i32* %NoResidueDirect321, align 4
  %cmp322 = icmp ne i32 %248, 1
  br i1 %cmp322, label %land.lhs.true.324, label %if.end.369

land.lhs.true.324:                                ; preds = %for.end.320
  %249 = load i32, i32* %skipped, align 4
  %tobool325 = icmp ne i32 %249, 0
  br i1 %tobool325, label %if.end.369, label %land.lhs.true.326

land.lhs.true.326:                                ; preds = %land.lhs.true.324
  %250 = load i32, i32* %need_8x8_transform, align 4
  %tobool327 = icmp ne i32 %250, 0
  br i1 %tobool327, label %if.end.369, label %if.then.328

if.then.328:                                      ; preds = %land.lhs.true.326
  %251 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type329 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %251, i32 0, i32 6
  %252 = load i32, i32* %type329, align 4
  %cmp330 = icmp ne i32 %252, 3
  br i1 %cmp330, label %if.then.332, label %if.else.334

if.then.332:                                      ; preds = %if.then.328
  %253 = load i32, i32* %block_x, align 4
  %254 = load i32, i32* %block_y, align 4
  %call333 = call i32 @dct_luma(i32 %253, i32 %254, i32* %coeff_cost, i32 0)
  store i32 %call333, i32* %nonzero, align 4
  br label %if.end.336

if.else.334:                                      ; preds = %if.then.328
  %255 = load i32, i32* %block_x, align 4
  %256 = load i32, i32* %block_y, align 4
  %call335 = call i32 @dct_luma_sp(i32 %255, i32 %256, i32* %coeff_cost)
  store i32 %call335, i32* %nonzero, align 4
  br label %if.end.336

if.end.336:                                       ; preds = %if.else.334, %if.then.332
  store i32 0, i32* %j, align 4
  br label %for.cond.337

for.cond.337:                                     ; preds = %for.inc.359, %if.end.336
  %257 = load i32, i32* %j, align 4
  %cmp338 = icmp slt i32 %257, 4
  br i1 %cmp338, label %for.body.340, label %for.end.361

for.body.340:                                     ; preds = %for.cond.337
  store i32 0, i32* %i, align 4
  br label %for.cond.341

for.cond.341:                                     ; preds = %for.inc.356, %for.body.340
  %258 = load i32, i32* %i, align 4
  %cmp342 = icmp slt i32 %258, 4
  br i1 %cmp342, label %for.body.344, label %for.end.358

for.body.344:                                     ; preds = %for.cond.341
  %259 = load i32, i32* %j, align 4
  %idxprom345 = sext i32 %259 to i64
  %260 = load i32, i32* %i, align 4
  %idxprom346 = sext i32 %260 to i64
  %261 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7347 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %261, i32 0, i32 46
  %arrayidx348 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7347, i32 0, i64 %idxprom346
  %arrayidx349 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx348, i32 0, i64 %idxprom345
  %262 = load i32, i32* %arrayidx349, align 4
  %263 = load i32, i32* %j, align 4
  %264 = load i32, i32* %block_y, align 4
  %add350 = add nsw i32 %263, %264
  %idxprom351 = sext i32 %add350 to i64
  %265 = load i32, i32* %i, align 4
  %266 = load i32, i32* %block_x, align 4
  %add352 = add nsw i32 %265, %266
  %idxprom353 = sext i32 %add352 to i64
  %arrayidx354 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* @rec_resG, i32 0, i64 %idxprom353
  %arrayidx355 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx354, i32 0, i64 %idxprom351
  store i32 %262, i32* %arrayidx355, align 4
  br label %for.inc.356

for.inc.356:                                      ; preds = %for.body.344
  %267 = load i32, i32* %i, align 4
  %inc357 = add nsw i32 %267, 1
  store i32 %inc357, i32* %i, align 4
  br label %for.cond.341

for.end.358:                                      ; preds = %for.cond.341
  br label %for.inc.359

for.inc.359:                                      ; preds = %for.end.358
  %268 = load i32, i32* %j, align 4
  %inc360 = add nsw i32 %268, 1
  store i32 %inc360, i32* %j, align 4
  br label %for.cond.337

for.end.361:                                      ; preds = %for.cond.337
  %269 = load i32, i32* %nonzero, align 4
  %tobool362 = icmp ne i32 %269, 0
  br i1 %tobool362, label %if.then.363, label %if.end.368

if.then.363:                                      ; preds = %for.end.361
  %270 = load i32, i32* %cbp_blk_mask, align 4
  %shl364 = shl i32 1, %270
  %conv365 = sext i32 %shl364 to i64
  %271 = load i64*, i64** %cbp_blk.addr, align 8
  %272 = load i64, i64* %271, align 8
  %or366 = or i64 %272, %conv365
  store i64 %or366, i64* %271, align 8
  %273 = load i32, i32* %cbp_mask, align 4
  %274 = load i32*, i32** %cbp.addr, align 8
  %275 = load i32, i32* %274, align 4
  %or367 = or i32 %275, %273
  store i32 %or367, i32* %274, align 4
  br label %if.end.368

if.end.368:                                       ; preds = %if.then.363, %for.end.361
  br label %if.end.369

if.end.369:                                       ; preds = %if.end.368, %land.lhs.true.326, %land.lhs.true.324, %for.end.320
  br label %if.end.370

if.end.370:                                       ; preds = %if.end.369, %if.end.197
  br label %for.inc.371

for.inc.371:                                      ; preds = %if.end.370
  %276 = load i32, i32* %bxx, align 4
  %add372 = add nsw i32 %276, 4
  store i32 %add372, i32* %bxx, align 4
  %277 = load i32, i32* %block_x, align 4
  %add373 = add nsw i32 %277, 4
  store i32 %add373, i32* %block_x, align 4
  br label %for.cond.9

for.end.374:                                      ; preds = %for.cond.9
  br label %for.inc.375

for.inc.375:                                      ; preds = %for.end.374
  %278 = load i32, i32* %byy, align 4
  %add376 = add nsw i32 %278, 4
  store i32 %add376, i32* %byy, align 4
  %279 = load i32, i32* %block_y, align 4
  %add377 = add nsw i32 %279, 4
  store i32 %add377, i32* %block_y, align 4
  br label %for.cond

for.end.378:                                      ; preds = %for.cond
  %280 = load i32, i32* %need_8x8_transform, align 4
  %tobool379 = icmp ne i32 %280, 0
  br i1 %tobool379, label %if.then.380, label %if.end.433

if.then.380:                                      ; preds = %for.end.378
  %281 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NoResidueDirect381 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %281, i32 0, i32 88
  %282 = load i32, i32* %NoResidueDirect381, align 4
  %cmp382 = icmp ne i32 %282, 1
  br i1 %cmp382, label %land.lhs.true.384, label %if.end.432

land.lhs.true.384:                                ; preds = %if.then.380
  %283 = load i32, i32* %skipped, align 4
  %tobool385 = icmp ne i32 %283, 0
  br i1 %tobool385, label %if.end.432, label %if.then.386

if.then.386:                                      ; preds = %land.lhs.true.384
  %284 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type387 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %284, i32 0, i32 6
  %285 = load i32, i32* %type387, align 4
  %cmp388 = icmp ne i32 %285, 3
  br i1 %cmp388, label %if.then.390, label %if.end.392

if.then.390:                                      ; preds = %if.then.386
  %286 = load i32, i32* %block8x8.addr, align 4
  %call391 = call i32 @dct_luma8x8(i32 %286, i32* %coeff_cost, i32 0)
  store i32 %call391, i32* %nonzero, align 4
  br label %if.end.392

if.end.392:                                       ; preds = %if.then.390, %if.then.386
  %287 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %residue_transform_flag393 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %287, i32 0, i32 164
  %288 = load i32, i32* %residue_transform_flag393, align 4
  %tobool394 = icmp ne i32 %288, 0
  br i1 %tobool394, label %if.then.395, label %if.end.421

if.then.395:                                      ; preds = %if.end.392
  store i32 0, i32* %j, align 4
  br label %for.cond.396

for.cond.396:                                     ; preds = %for.inc.418, %if.then.395
  %289 = load i32, i32* %j, align 4
  %cmp397 = icmp slt i32 %289, 8
  br i1 %cmp397, label %for.body.399, label %for.end.420

for.body.399:                                     ; preds = %for.cond.396
  store i32 0, i32* %i, align 4
  br label %for.cond.400

for.cond.400:                                     ; preds = %for.inc.415, %for.body.399
  %290 = load i32, i32* %i, align 4
  %cmp401 = icmp slt i32 %290, 8
  br i1 %cmp401, label %for.body.403, label %for.end.417

for.body.403:                                     ; preds = %for.cond.400
  %291 = load i32, i32* %j, align 4
  %idxprom404 = sext i32 %291 to i64
  %292 = load i32, i32* %i, align 4
  %idxprom405 = sext i32 %292 to i64
  %293 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7406 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %293, i32 0, i32 46
  %arrayidx407 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7406, i32 0, i64 %idxprom405
  %arrayidx408 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx407, i32 0, i64 %idxprom404
  %294 = load i32, i32* %arrayidx408, align 4
  %295 = load i32, i32* %mb_y, align 4
  %296 = load i32, i32* %j, align 4
  %add409 = add nsw i32 %295, %296
  %idxprom410 = sext i32 %add409 to i64
  %297 = load i32, i32* %mb_x, align 4
  %298 = load i32, i32* %i, align 4
  %add411 = add nsw i32 %297, %298
  %idxprom412 = sext i32 %add411 to i64
  %arrayidx413 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* @rec_resG, i32 0, i64 %idxprom412
  %arrayidx414 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx413, i32 0, i64 %idxprom410
  store i32 %294, i32* %arrayidx414, align 4
  br label %for.inc.415

for.inc.415:                                      ; preds = %for.body.403
  %299 = load i32, i32* %i, align 4
  %inc416 = add nsw i32 %299, 1
  store i32 %inc416, i32* %i, align 4
  br label %for.cond.400

for.end.417:                                      ; preds = %for.cond.400
  br label %for.inc.418

for.inc.418:                                      ; preds = %for.end.417
  %300 = load i32, i32* %j, align 4
  %inc419 = add nsw i32 %300, 1
  store i32 %inc419, i32* %j, align 4
  br label %for.cond.396

for.end.420:                                      ; preds = %for.cond.396
  br label %if.end.421

if.end.421:                                       ; preds = %for.end.420, %if.end.392
  %301 = load i32, i32* %nonzero, align 4
  %tobool422 = icmp ne i32 %301, 0
  br i1 %tobool422, label %if.then.423, label %if.end.431

if.then.423:                                      ; preds = %if.end.421
  %302 = load i32, i32* %block8x8.addr, align 4
  %mul = mul nsw i32 4, %302
  %303 = load i32, i32* %block8x8.addr, align 4
  %rem424 = srem i32 %303, 2
  %mul425 = mul nsw i32 2, %rem424
  %sub426 = sub nsw i32 %mul, %mul425
  %shl427 = shl i32 51, %sub426
  %conv428 = sext i32 %shl427 to i64
  %304 = load i64*, i64** %cbp_blk.addr, align 8
  %305 = load i64, i64* %304, align 8
  %or429 = or i64 %305, %conv428
  store i64 %or429, i64* %304, align 8
  %306 = load i32, i32* %cbp_mask, align 4
  %307 = load i32*, i32** %cbp.addr, align 8
  %308 = load i32, i32* %307, align 4
  %or430 = or i32 %308, %306
  store i32 %or430, i32* %307, align 4
  br label %if.end.431

if.end.431:                                       ; preds = %if.then.423, %if.end.421
  br label %if.end.432

if.end.432:                                       ; preds = %if.end.431, %land.lhs.true.384, %if.then.380
  br label %if.end.433

if.end.433:                                       ; preds = %if.end.432, %for.end.378
  %309 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NoResidueDirect434 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %309, i32 0, i32 88
  %310 = load i32, i32* %NoResidueDirect434, align 4
  %cmp435 = icmp ne i32 %310, 1
  br i1 %cmp435, label %land.lhs.true.437, label %if.end.514

land.lhs.true.437:                                ; preds = %if.end.433
  %311 = load i32, i32* %skipped, align 4
  %tobool438 = icmp ne i32 %311, 0
  br i1 %tobool438, label %if.end.514, label %land.lhs.true.439

land.lhs.true.439:                                ; preds = %land.lhs.true.437
  %312 = load i32, i32* %coeff_cost, align 4
  %cmp440 = icmp sle i32 %312, 4
  br i1 %cmp440, label %land.lhs.true.442, label %if.end.514

land.lhs.true.442:                                ; preds = %land.lhs.true.439
  %313 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %qp = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %313, i32 0, i32 10
  %314 = load i32, i32* %qp, align 4
  %315 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %bitdepth_luma_qp_scale = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %315, i32 0, i32 151
  %316 = load i32, i32* %bitdepth_luma_qp_scale, align 4
  %add443 = add nsw i32 %314, %316
  %cmp444 = icmp ne i32 %add443, 0
  br i1 %cmp444, label %if.then.448, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true.442
  %317 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %lossless_qpprime_flag = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %317, i32 0, i32 160
  %318 = load i32, i32* %lossless_qpprime_flag, align 4
  %cmp446 = icmp eq i32 %318, 0
  br i1 %cmp446, label %if.then.448, label %if.end.514

if.then.448:                                      ; preds = %lor.lhs.false, %land.lhs.true.442
  store i32 0, i32* %coeff_cost, align 4
  %319 = load i32, i32* %cbp_mask, align 4
  %sub449 = sub nsw i32 63, %319
  %320 = load i32*, i32** %cbp.addr, align 8
  %321 = load i32, i32* %320, align 4
  %and = and i32 %321, %sub449
  store i32 %and, i32* %320, align 4
  %322 = load i32, i32* %block8x8.addr, align 4
  %mul450 = mul nsw i32 4, %322
  %323 = load i32, i32* %block8x8.addr, align 4
  %rem451 = srem i32 %323, 2
  %mul452 = mul nsw i32 2, %rem451
  %sub453 = sub nsw i32 %mul450, %mul452
  %shl454 = shl i32 51, %sub453
  %neg = xor i32 %shl454, -1
  %conv455 = sext i32 %neg to i64
  %324 = load i64*, i64** %cbp_blk.addr, align 8
  %325 = load i64, i64* %324, align 8
  %and456 = and i64 %325, %conv455
  store i64 %and456, i64* %324, align 8
  %326 = load i32, i32* %mb_x, align 4
  store i32 %326, i32* %i, align 4
  br label %for.cond.457

for.cond.457:                                     ; preds = %for.inc.490, %if.then.448
  %327 = load i32, i32* %i, align 4
  %328 = load i32, i32* %mb_x, align 4
  %add458 = add nsw i32 %328, 8
  %cmp459 = icmp slt i32 %327, %add458
  br i1 %cmp459, label %for.body.461, label %for.end.492

for.body.461:                                     ; preds = %for.cond.457
  %329 = load i32, i32* %mb_y, align 4
  store i32 %329, i32* %j, align 4
  br label %for.cond.462

for.cond.462:                                     ; preds = %for.inc.487, %for.body.461
  %330 = load i32, i32* %j, align 4
  %331 = load i32, i32* %mb_y, align 4
  %add463 = add nsw i32 %331, 8
  %cmp464 = icmp slt i32 %330, %add463
  br i1 %cmp464, label %for.body.466, label %for.end.489

for.body.466:                                     ; preds = %for.cond.462
  %332 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %residue_transform_flag467 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %332, i32 0, i32 164
  %333 = load i32, i32* %residue_transform_flag467, align 4
  %tobool468 = icmp ne i32 %333, 0
  br i1 %tobool468, label %if.else.481, label %if.then.469

if.then.469:                                      ; preds = %for.body.466
  %334 = load i32, i32* %j, align 4
  %idxprom470 = sext i32 %334 to i64
  %335 = load i32, i32* %i, align 4
  %idxprom471 = sext i32 %335 to i64
  %336 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mpr472 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %336, i32 0, i32 45
  %arrayidx473 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %mpr472, i32 0, i64 %idxprom471
  %arrayidx474 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx473, i32 0, i64 %idxprom470
  %337 = load i16, i16* %arrayidx474, align 2
  %338 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %338, i32 0, i32 33
  %339 = load i32, i32* %pix_x, align 4
  %340 = load i32, i32* %i, align 4
  %add475 = add nsw i32 %339, %340
  %idxprom476 = sext i32 %add475 to i64
  %341 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %341, i32 0, i32 34
  %342 = load i32, i32* %pix_y, align 4
  %343 = load i32, i32* %j, align 4
  %add477 = add nsw i32 %342, %343
  %idxprom478 = sext i32 %add477 to i64
  %344 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %imgY = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %344, i32 0, i32 25
  %345 = load i16**, i16*** %imgY, align 8
  %arrayidx479 = getelementptr inbounds i16*, i16** %345, i64 %idxprom478
  %346 = load i16*, i16** %arrayidx479, align 8
  %arrayidx480 = getelementptr inbounds i16, i16* %346, i64 %idxprom476
  store i16 %337, i16* %arrayidx480, align 2
  br label %if.end.486

if.else.481:                                      ; preds = %for.body.466
  %347 = load i32, i32* %j, align 4
  %idxprom482 = sext i32 %347 to i64
  %348 = load i32, i32* %i, align 4
  %idxprom483 = sext i32 %348 to i64
  %arrayidx484 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* @rec_resG, i32 0, i64 %idxprom483
  %arrayidx485 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx484, i32 0, i64 %idxprom482
  store i32 0, i32* %arrayidx485, align 4
  br label %if.end.486

if.end.486:                                       ; preds = %if.else.481, %if.then.469
  br label %for.inc.487

for.inc.487:                                      ; preds = %if.end.486
  %349 = load i32, i32* %j, align 4
  %inc488 = add nsw i32 %349, 1
  store i32 %inc488, i32* %j, align 4
  br label %for.cond.462

for.end.489:                                      ; preds = %for.cond.462
  br label %for.inc.490

for.inc.490:                                      ; preds = %for.end.489
  %350 = load i32, i32* %i, align 4
  %inc491 = add nsw i32 %350, 1
  store i32 %inc491, i32* %i, align 4
  br label %for.cond.457

for.end.492:                                      ; preds = %for.cond.457
  %351 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type493 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %351, i32 0, i32 6
  %352 = load i32, i32* %type493, align 4
  %cmp494 = icmp eq i32 %352, 3
  br i1 %cmp494, label %if.then.496, label %if.end.513

if.then.496:                                      ; preds = %for.end.492
  %353 = load i32, i32* %mb_x, align 4
  store i32 %353, i32* %i, align 4
  br label %for.cond.497

for.cond.497:                                     ; preds = %for.inc.510, %if.then.496
  %354 = load i32, i32* %i, align 4
  %355 = load i32, i32* %mb_x, align 4
  %add498 = add nsw i32 %355, 8
  %cmp499 = icmp slt i32 %354, %add498
  br i1 %cmp499, label %for.body.501, label %for.end.512

for.body.501:                                     ; preds = %for.cond.497
  %356 = load i32, i32* %mb_y, align 4
  store i32 %356, i32* %j, align 4
  br label %for.cond.502

for.cond.502:                                     ; preds = %for.inc.507, %for.body.501
  %357 = load i32, i32* %j, align 4
  %358 = load i32, i32* %mb_y, align 4
  %add503 = add nsw i32 %358, 8
  %cmp504 = icmp slt i32 %357, %add503
  br i1 %cmp504, label %for.body.506, label %for.end.509

for.body.506:                                     ; preds = %for.cond.502
  %359 = load i32, i32* %i, align 4
  %360 = load i32, i32* %j, align 4
  call void @copyblock_sp(i32 %359, i32 %360)
  br label %for.inc.507

for.inc.507:                                      ; preds = %for.body.506
  %361 = load i32, i32* %j, align 4
  %add508 = add nsw i32 %361, 4
  store i32 %add508, i32* %j, align 4
  br label %for.cond.502

for.end.509:                                      ; preds = %for.cond.502
  br label %for.inc.510

for.inc.510:                                      ; preds = %for.end.509
  %362 = load i32, i32* %i, align 4
  %add511 = add nsw i32 %362, 4
  store i32 %add511, i32* %i, align 4
  br label %for.cond.497

for.end.512:                                      ; preds = %for.cond.497
  br label %if.end.513

if.end.513:                                       ; preds = %for.end.512, %for.end.492
  br label %if.end.514

if.end.514:                                       ; preds = %if.end.513, %lor.lhs.false, %land.lhs.true.439, %land.lhs.true.437, %if.end.433
  %363 = load i32, i32* %coeff_cost, align 4
  ret i32 %363
}

; Function Attrs: nounwind uwtable
define void @ChromaPrediction4x4(i32 %uv, i32 %block_x, i32 %block_y, i32 %p_dir, i32 %fw_mode, i32 %bw_mode, i16 signext %fw_ref_idx, i16 signext %bw_ref_idx) #0 {
entry:
  %uv.addr = alloca i32, align 4
  %block_x.addr = alloca i32, align 4
  %block_y.addr = alloca i32, align 4
  %p_dir.addr = alloca i32, align 4
  %fw_mode.addr = alloca i32, align 4
  %bw_mode.addr = alloca i32, align 4
  %fw_ref_idx.addr = alloca i16, align 2
  %bw_ref_idx.addr = alloca i16, align 2
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %block_x4 = alloca i32, align 4
  %block_y4 = alloca i32, align 4
  %fpred = alloca i32*, align 8
  %bpred = alloca i32*, align 8
  %mv_array = alloca i16******, align 8
  %currMB = alloca %struct.macroblock*, align 8
  %apply_weights = alloca i32, align 4
  store i32 %uv, i32* %uv.addr, align 4
  store i32 %block_x, i32* %block_x.addr, align 4
  store i32 %block_y, i32* %block_y.addr, align 4
  store i32 %p_dir, i32* %p_dir.addr, align 4
  store i32 %fw_mode, i32* %fw_mode.addr, align 4
  store i32 %bw_mode, i32* %bw_mode.addr, align 4
  store i16 %fw_ref_idx, i16* %fw_ref_idx.addr, align 2
  store i16 %bw_ref_idx, i16* %bw_ref_idx.addr, align 2
  %0 = load i32, i32* %block_x.addr, align 4
  %add = add nsw i32 %0, 4
  store i32 %add, i32* %block_x4, align 4
  %1 = load i32, i32* %block_y.addr, align 4
  %add1 = add nsw i32 %1, 4
  store i32 %add1, i32* %block_y4, align 4
  store i32* getelementptr inbounds ([16 x i32], [16 x i32]* @ChromaPrediction4x4.fw_pred, i32 0, i32 0), i32** %fpred, align 8
  store i32* getelementptr inbounds ([16 x i32], [16 x i32]* @ChromaPrediction4x4.bw_pred, i32 0, i32 0), i32** %bpred, align 8
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %all_mv = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 71
  %3 = load i16******, i16******* %all_mv, align 8
  store i16****** %3, i16******* %mv_array, align 8
  %4 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %4, i32 0, i32 3
  %5 = load i32, i32* %current_mb_nr, align 4
  %idxprom = sext i32 %5 to i64
  %6 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %6, i32 0, i32 51
  %7 = load %struct.macroblock*, %struct.macroblock** %mb_data, align 8
  %arrayidx = getelementptr inbounds %struct.macroblock, %struct.macroblock* %7, i64 %idxprom
  store %struct.macroblock* %arrayidx, %struct.macroblock** %currMB, align 8
  %8 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %weighted_pred_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %8, i32 0, i32 19
  %9 = load i32, i32* %weighted_pred_flag, align 4
  %tobool = icmp ne i32 %9, 0
  br i1 %tobool, label %land.lhs.true, label %lor.rhs

land.lhs.true:                                    ; preds = %entry
  %10 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %10, i32 0, i32 6
  %11 = load i32, i32* %type, align 4
  %cmp = icmp eq i32 %11, 0
  br i1 %cmp, label %lor.end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true
  %12 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type2 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %12, i32 0, i32 6
  %13 = load i32, i32* %type2, align 4
  %cmp3 = icmp eq i32 %13, 3
  br i1 %cmp3, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %lor.lhs.false, %entry
  %14 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %weighted_bipred_idc = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %14, i32 0, i32 20
  %15 = load i32, i32* %weighted_bipred_idc, align 4
  %tobool4 = icmp ne i32 %15, 0
  br i1 %tobool4, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %lor.rhs
  %16 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type5 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %16, i32 0, i32 6
  %17 = load i32, i32* %type5, align 4
  %cmp6 = icmp eq i32 %17, 1
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.rhs
  %18 = phi i1 [ false, %lor.rhs ], [ %cmp6, %land.rhs ]
  br label %lor.end

lor.end:                                          ; preds = %land.end, %lor.lhs.false, %land.lhs.true
  %19 = phi i1 [ true, %lor.lhs.false ], [ true, %land.lhs.true ], [ %18, %land.end ]
  %lor.ext = zext i1 %19 to i32
  store i32 %lor.ext, i32* %apply_weights, align 4
  %20 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %bi_pred_me = getelementptr inbounds %struct.macroblock, %struct.macroblock* %20, i32 0, i32 34
  %21 = load i32, i32* %bi_pred_me, align 4
  %tobool7 = icmp ne i32 %21, 0
  br i1 %tobool7, label %land.lhs.true.8, label %if.end

land.lhs.true.8:                                  ; preds = %lor.end
  %22 = load i16, i16* %fw_ref_idx.addr, align 2
  %conv = sext i16 %22 to i32
  %cmp9 = icmp eq i32 %conv, 0
  br i1 %cmp9, label %land.lhs.true.11, label %if.end

land.lhs.true.11:                                 ; preds = %land.lhs.true.8
  %23 = load i16, i16* %bw_ref_idx.addr, align 2
  %conv12 = sext i16 %23 to i32
  %cmp13 = icmp eq i32 %conv12, 0
  br i1 %cmp13, label %land.lhs.true.15, label %if.end

land.lhs.true.15:                                 ; preds = %land.lhs.true.11
  %24 = load i32, i32* %p_dir.addr, align 4
  %cmp16 = icmp eq i32 %24, 2
  br i1 %cmp16, label %land.lhs.true.18, label %if.end

land.lhs.true.18:                                 ; preds = %land.lhs.true.15
  %25 = load i32, i32* %fw_mode.addr, align 4
  %cmp19 = icmp eq i32 %25, 1
  br i1 %cmp19, label %land.lhs.true.21, label %if.end

land.lhs.true.21:                                 ; preds = %land.lhs.true.18
  %26 = load i32, i32* %bw_mode.addr, align 4
  %cmp22 = icmp eq i32 %26, 1
  br i1 %cmp22, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true.21
  %27 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %bi_pred_me24 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %27, i32 0, i32 34
  %28 = load i32, i32* %bi_pred_me24, align 4
  %cmp25 = icmp eq i32 %28, 1
  br i1 %cmp25, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then
  %29 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %bipred_mv1 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %29, i32 0, i32 72
  %30 = load i16******, i16******* %bipred_mv1, align 8
  br label %cond.end

cond.false:                                       ; preds = %if.then
  %31 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %bipred_mv2 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %31, i32 0, i32 73
  %32 = load i16******, i16******* %bipred_mv2, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i16****** [ %30, %cond.true ], [ %32, %cond.false ]
  store i16****** %cond, i16******* %mv_array, align 8
  br label %if.end

if.end:                                           ; preds = %cond.end, %land.lhs.true.21, %land.lhs.true.18, %land.lhs.true.15, %land.lhs.true.11, %land.lhs.true.8, %lor.end
  %33 = load i32, i32* %p_dir.addr, align 4
  %cmp27 = icmp eq i32 %33, -1
  br i1 %cmp27, label %if.then.29, label %if.end.30

if.then.29:                                       ; preds = %if.end
  %34 = load i32, i32* %uv.addr, align 4
  %35 = load i32, i32* %block_x.addr, align 4
  %36 = load i32, i32* %block_y.addr, align 4
  call void @IntraChromaPrediction4x4(i32 %34, i32 %35, i32 %36)
  br label %if.end.261

if.end.30:                                        ; preds = %if.end
  %37 = load i32, i32* %p_dir.addr, align 4
  %cmp31 = icmp eq i32 %37, 0
  br i1 %cmp31, label %if.then.36, label %lor.lhs.false.33

lor.lhs.false.33:                                 ; preds = %if.end.30
  %38 = load i32, i32* %p_dir.addr, align 4
  %cmp34 = icmp eq i32 %38, 2
  br i1 %cmp34, label %if.then.36, label %if.end.37

if.then.36:                                       ; preds = %lor.lhs.false.33, %if.end.30
  %39 = load i32, i32* %block_x.addr, align 4
  %40 = load i32, i32* %block_y.addr, align 4
  %41 = load i16******, i16******* %mv_array, align 8
  %42 = load i16, i16* %fw_ref_idx.addr, align 2
  %43 = load i32, i32* %fw_mode.addr, align 4
  %44 = load i32, i32* %uv.addr, align 4
  call void @OneComponentChromaPrediction4x4(i32* getelementptr inbounds ([16 x i32], [16 x i32]* @ChromaPrediction4x4.fw_pred, i32 0, i32 0), i32 %39, i32 %40, i16****** %41, i32 0, i16 signext %42, i32 %43, i32 %44)
  br label %if.end.37

if.end.37:                                        ; preds = %if.then.36, %lor.lhs.false.33
  %45 = load i32, i32* %p_dir.addr, align 4
  %cmp38 = icmp eq i32 %45, 1
  br i1 %cmp38, label %if.then.43, label %lor.lhs.false.40

lor.lhs.false.40:                                 ; preds = %if.end.37
  %46 = load i32, i32* %p_dir.addr, align 4
  %cmp41 = icmp eq i32 %46, 2
  br i1 %cmp41, label %if.then.43, label %if.end.44

if.then.43:                                       ; preds = %lor.lhs.false.40, %if.end.37
  %47 = load i32, i32* %block_x.addr, align 4
  %48 = load i32, i32* %block_y.addr, align 4
  %49 = load i16******, i16******* %mv_array, align 8
  %50 = load i16, i16* %bw_ref_idx.addr, align 2
  %51 = load i32, i32* %bw_mode.addr, align 4
  %52 = load i32, i32* %uv.addr, align 4
  call void @OneComponentChromaPrediction4x4(i32* getelementptr inbounds ([16 x i32], [16 x i32]* @ChromaPrediction4x4.bw_pred, i32 0, i32 0), i32 %47, i32 %48, i16****** %49, i32 1, i16 signext %50, i32 %51, i32 %52)
  br label %if.end.44

if.end.44:                                        ; preds = %if.then.43, %lor.lhs.false.40
  %53 = load i32, i32* %apply_weights, align 4
  %tobool45 = icmp ne i32 %53, 0
  br i1 %tobool45, label %if.then.46, label %if.else.184

if.then.46:                                       ; preds = %if.end.44
  %54 = load i32, i32* %p_dir.addr, align 4
  %cmp47 = icmp eq i32 %54, 2
  br i1 %cmp47, label %if.then.49, label %if.else

if.then.49:                                       ; preds = %if.then.46
  %55 = load i32, i32* %block_y.addr, align 4
  store i32 %55, i32* %j, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc.99, %if.then.49
  %56 = load i32, i32* %j, align 4
  %57 = load i32, i32* %block_y4, align 4
  %cmp50 = icmp slt i32 %56, %57
  br i1 %cmp50, label %for.body, label %for.end.101

for.body:                                         ; preds = %for.cond
  %58 = load i32, i32* %block_x.addr, align 4
  store i32 %58, i32* %i, align 4
  br label %for.cond.52

for.cond.52:                                      ; preds = %for.inc, %for.body
  %59 = load i32, i32* %i, align 4
  %60 = load i32, i32* %block_x4, align 4
  %cmp53 = icmp slt i32 %59, %60
  br i1 %cmp53, label %for.body.55, label %for.end

for.body.55:                                      ; preds = %for.cond.52
  %61 = load i32, i32* %uv.addr, align 4
  %add56 = add nsw i32 %61, 1
  %idxprom57 = sext i32 %add56 to i64
  %62 = load i16, i16* %bw_ref_idx.addr, align 2
  %idxprom58 = sext i16 %62 to i64
  %63 = load i16, i16* %fw_ref_idx.addr, align 2
  %idxprom59 = sext i16 %63 to i64
  %64 = load i32****, i32***** @wbp_weight, align 8
  %arrayidx60 = getelementptr inbounds i32***, i32**** %64, i64 0
  %65 = load i32***, i32**** %arrayidx60, align 8
  %arrayidx61 = getelementptr inbounds i32**, i32*** %65, i64 %idxprom59
  %66 = load i32**, i32*** %arrayidx61, align 8
  %arrayidx62 = getelementptr inbounds i32*, i32** %66, i64 %idxprom58
  %67 = load i32*, i32** %arrayidx62, align 8
  %arrayidx63 = getelementptr inbounds i32, i32* %67, i64 %idxprom57
  %68 = load i32, i32* %arrayidx63, align 4
  %69 = load i32*, i32** %fpred, align 8
  %incdec.ptr = getelementptr inbounds i32, i32* %69, i32 1
  store i32* %incdec.ptr, i32** %fpred, align 8
  %70 = load i32, i32* %69, align 4
  %mul = mul nsw i32 %68, %70
  %71 = load i32, i32* %uv.addr, align 4
  %add64 = add nsw i32 %71, 1
  %idxprom65 = sext i32 %add64 to i64
  %72 = load i16, i16* %bw_ref_idx.addr, align 2
  %idxprom66 = sext i16 %72 to i64
  %73 = load i16, i16* %fw_ref_idx.addr, align 2
  %idxprom67 = sext i16 %73 to i64
  %74 = load i32****, i32***** @wbp_weight, align 8
  %arrayidx68 = getelementptr inbounds i32***, i32**** %74, i64 1
  %75 = load i32***, i32**** %arrayidx68, align 8
  %arrayidx69 = getelementptr inbounds i32**, i32*** %75, i64 %idxprom67
  %76 = load i32**, i32*** %arrayidx69, align 8
  %arrayidx70 = getelementptr inbounds i32*, i32** %76, i64 %idxprom66
  %77 = load i32*, i32** %arrayidx70, align 8
  %arrayidx71 = getelementptr inbounds i32, i32* %77, i64 %idxprom65
  %78 = load i32, i32* %arrayidx71, align 4
  %79 = load i32*, i32** %bpred, align 8
  %incdec.ptr72 = getelementptr inbounds i32, i32* %79, i32 1
  store i32* %incdec.ptr72, i32** %bpred, align 8
  %80 = load i32, i32* %79, align 4
  %mul73 = mul nsw i32 %78, %80
  %add74 = add nsw i32 %mul, %mul73
  %81 = load i32, i32* @wp_chroma_round, align 4
  %mul75 = mul nsw i32 2, %81
  %add76 = add nsw i32 %add74, %mul75
  %82 = load i32, i32* @chroma_log_weight_denom, align 4
  %add77 = add nsw i32 %82, 1
  %shr = ashr i32 %add76, %add77
  %83 = load i32, i32* %uv.addr, align 4
  %add78 = add nsw i32 %83, 1
  %idxprom79 = sext i32 %add78 to i64
  %84 = load i16, i16* %fw_ref_idx.addr, align 2
  %idxprom80 = sext i16 %84 to i64
  %85 = load i32***, i32**** @wp_offset, align 8
  %arrayidx81 = getelementptr inbounds i32**, i32*** %85, i64 0
  %86 = load i32**, i32*** %arrayidx81, align 8
  %arrayidx82 = getelementptr inbounds i32*, i32** %86, i64 %idxprom80
  %87 = load i32*, i32** %arrayidx82, align 8
  %arrayidx83 = getelementptr inbounds i32, i32* %87, i64 %idxprom79
  %88 = load i32, i32* %arrayidx83, align 4
  %89 = load i32, i32* %uv.addr, align 4
  %add84 = add nsw i32 %89, 1
  %idxprom85 = sext i32 %add84 to i64
  %90 = load i16, i16* %bw_ref_idx.addr, align 2
  %idxprom86 = sext i16 %90 to i64
  %91 = load i32***, i32**** @wp_offset, align 8
  %arrayidx87 = getelementptr inbounds i32**, i32*** %91, i64 1
  %92 = load i32**, i32*** %arrayidx87, align 8
  %arrayidx88 = getelementptr inbounds i32*, i32** %92, i64 %idxprom86
  %93 = load i32*, i32** %arrayidx88, align 8
  %arrayidx89 = getelementptr inbounds i32, i32* %93, i64 %idxprom85
  %94 = load i32, i32* %arrayidx89, align 4
  %add90 = add nsw i32 %88, %94
  %add91 = add nsw i32 %add90, 1
  %shr92 = ashr i32 %add91, 1
  %add93 = add nsw i32 %shr, %shr92
  %call = call i32 @clip1a_chr(i32 %add93)
  %conv94 = trunc i32 %call to i16
  %95 = load i32, i32* %j, align 4
  %idxprom95 = sext i32 %95 to i64
  %96 = load i32, i32* %i, align 4
  %idxprom96 = sext i32 %96 to i64
  %97 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mpr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %97, i32 0, i32 45
  %arrayidx97 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %mpr, i32 0, i64 %idxprom96
  %arrayidx98 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx97, i32 0, i64 %idxprom95
  store i16 %conv94, i16* %arrayidx98, align 2
  br label %for.inc

for.inc:                                          ; preds = %for.body.55
  %98 = load i32, i32* %i, align 4
  %inc = add nsw i32 %98, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond.52

for.end:                                          ; preds = %for.cond.52
  br label %for.inc.99

for.inc.99:                                       ; preds = %for.end
  %99 = load i32, i32* %j, align 4
  %inc100 = add nsw i32 %99, 1
  store i32 %inc100, i32* %j, align 4
  br label %for.cond

for.end.101:                                      ; preds = %for.cond
  br label %if.end.183

if.else:                                          ; preds = %if.then.46
  %100 = load i32, i32* %p_dir.addr, align 4
  %cmp102 = icmp eq i32 %100, 0
  br i1 %cmp102, label %if.then.104, label %if.else.143

if.then.104:                                      ; preds = %if.else
  %101 = load i32, i32* %block_y.addr, align 4
  store i32 %101, i32* %j, align 4
  br label %for.cond.105

for.cond.105:                                     ; preds = %for.inc.140, %if.then.104
  %102 = load i32, i32* %j, align 4
  %103 = load i32, i32* %block_y4, align 4
  %cmp106 = icmp slt i32 %102, %103
  br i1 %cmp106, label %for.body.108, label %for.end.142

for.body.108:                                     ; preds = %for.cond.105
  %104 = load i32, i32* %block_x.addr, align 4
  store i32 %104, i32* %i, align 4
  br label %for.cond.109

for.cond.109:                                     ; preds = %for.inc.137, %for.body.108
  %105 = load i32, i32* %i, align 4
  %106 = load i32, i32* %block_x4, align 4
  %cmp110 = icmp slt i32 %105, %106
  br i1 %cmp110, label %for.body.112, label %for.end.139

for.body.112:                                     ; preds = %for.cond.109
  %107 = load i32, i32* %uv.addr, align 4
  %add113 = add nsw i32 %107, 1
  %idxprom114 = sext i32 %add113 to i64
  %108 = load i16, i16* %fw_ref_idx.addr, align 2
  %idxprom115 = sext i16 %108 to i64
  %109 = load i32***, i32**** @wp_weight, align 8
  %arrayidx116 = getelementptr inbounds i32**, i32*** %109, i64 0
  %110 = load i32**, i32*** %arrayidx116, align 8
  %arrayidx117 = getelementptr inbounds i32*, i32** %110, i64 %idxprom115
  %111 = load i32*, i32** %arrayidx117, align 8
  %arrayidx118 = getelementptr inbounds i32, i32* %111, i64 %idxprom114
  %112 = load i32, i32* %arrayidx118, align 4
  %113 = load i32*, i32** %fpred, align 8
  %incdec.ptr119 = getelementptr inbounds i32, i32* %113, i32 1
  store i32* %incdec.ptr119, i32** %fpred, align 8
  %114 = load i32, i32* %113, align 4
  %mul120 = mul nsw i32 %112, %114
  %115 = load i32, i32* @wp_chroma_round, align 4
  %add121 = add nsw i32 %mul120, %115
  %116 = load i32, i32* @chroma_log_weight_denom, align 4
  %shr122 = ashr i32 %add121, %116
  %117 = load i32, i32* %uv.addr, align 4
  %add123 = add nsw i32 %117, 1
  %idxprom124 = sext i32 %add123 to i64
  %118 = load i16, i16* %fw_ref_idx.addr, align 2
  %idxprom125 = sext i16 %118 to i64
  %119 = load i32***, i32**** @wp_offset, align 8
  %arrayidx126 = getelementptr inbounds i32**, i32*** %119, i64 0
  %120 = load i32**, i32*** %arrayidx126, align 8
  %arrayidx127 = getelementptr inbounds i32*, i32** %120, i64 %idxprom125
  %121 = load i32*, i32** %arrayidx127, align 8
  %arrayidx128 = getelementptr inbounds i32, i32* %121, i64 %idxprom124
  %122 = load i32, i32* %arrayidx128, align 4
  %add129 = add nsw i32 %shr122, %122
  %call130 = call i32 @clip1a_chr(i32 %add129)
  %conv131 = trunc i32 %call130 to i16
  %123 = load i32, i32* %j, align 4
  %idxprom132 = sext i32 %123 to i64
  %124 = load i32, i32* %i, align 4
  %idxprom133 = sext i32 %124 to i64
  %125 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mpr134 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %125, i32 0, i32 45
  %arrayidx135 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %mpr134, i32 0, i64 %idxprom133
  %arrayidx136 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx135, i32 0, i64 %idxprom132
  store i16 %conv131, i16* %arrayidx136, align 2
  br label %for.inc.137

for.inc.137:                                      ; preds = %for.body.112
  %126 = load i32, i32* %i, align 4
  %inc138 = add nsw i32 %126, 1
  store i32 %inc138, i32* %i, align 4
  br label %for.cond.109

for.end.139:                                      ; preds = %for.cond.109
  br label %for.inc.140

for.inc.140:                                      ; preds = %for.end.139
  %127 = load i32, i32* %j, align 4
  %inc141 = add nsw i32 %127, 1
  store i32 %inc141, i32* %j, align 4
  br label %for.cond.105

for.end.142:                                      ; preds = %for.cond.105
  br label %if.end.182

if.else.143:                                      ; preds = %if.else
  %128 = load i32, i32* %block_y.addr, align 4
  store i32 %128, i32* %j, align 4
  br label %for.cond.144

for.cond.144:                                     ; preds = %for.inc.179, %if.else.143
  %129 = load i32, i32* %j, align 4
  %130 = load i32, i32* %block_y4, align 4
  %cmp145 = icmp slt i32 %129, %130
  br i1 %cmp145, label %for.body.147, label %for.end.181

for.body.147:                                     ; preds = %for.cond.144
  %131 = load i32, i32* %block_x.addr, align 4
  store i32 %131, i32* %i, align 4
  br label %for.cond.148

for.cond.148:                                     ; preds = %for.inc.176, %for.body.147
  %132 = load i32, i32* %i, align 4
  %133 = load i32, i32* %block_x4, align 4
  %cmp149 = icmp slt i32 %132, %133
  br i1 %cmp149, label %for.body.151, label %for.end.178

for.body.151:                                     ; preds = %for.cond.148
  %134 = load i32, i32* %uv.addr, align 4
  %add152 = add nsw i32 %134, 1
  %idxprom153 = sext i32 %add152 to i64
  %135 = load i16, i16* %bw_ref_idx.addr, align 2
  %idxprom154 = sext i16 %135 to i64
  %136 = load i32***, i32**** @wp_weight, align 8
  %arrayidx155 = getelementptr inbounds i32**, i32*** %136, i64 1
  %137 = load i32**, i32*** %arrayidx155, align 8
  %arrayidx156 = getelementptr inbounds i32*, i32** %137, i64 %idxprom154
  %138 = load i32*, i32** %arrayidx156, align 8
  %arrayidx157 = getelementptr inbounds i32, i32* %138, i64 %idxprom153
  %139 = load i32, i32* %arrayidx157, align 4
  %140 = load i32*, i32** %bpred, align 8
  %incdec.ptr158 = getelementptr inbounds i32, i32* %140, i32 1
  store i32* %incdec.ptr158, i32** %bpred, align 8
  %141 = load i32, i32* %140, align 4
  %mul159 = mul nsw i32 %139, %141
  %142 = load i32, i32* @wp_chroma_round, align 4
  %add160 = add nsw i32 %mul159, %142
  %143 = load i32, i32* @chroma_log_weight_denom, align 4
  %shr161 = ashr i32 %add160, %143
  %144 = load i32, i32* %uv.addr, align 4
  %add162 = add nsw i32 %144, 1
  %idxprom163 = sext i32 %add162 to i64
  %145 = load i16, i16* %bw_ref_idx.addr, align 2
  %idxprom164 = sext i16 %145 to i64
  %146 = load i32***, i32**** @wp_offset, align 8
  %arrayidx165 = getelementptr inbounds i32**, i32*** %146, i64 1
  %147 = load i32**, i32*** %arrayidx165, align 8
  %arrayidx166 = getelementptr inbounds i32*, i32** %147, i64 %idxprom164
  %148 = load i32*, i32** %arrayidx166, align 8
  %arrayidx167 = getelementptr inbounds i32, i32* %148, i64 %idxprom163
  %149 = load i32, i32* %arrayidx167, align 4
  %add168 = add nsw i32 %shr161, %149
  %call169 = call i32 @clip1a_chr(i32 %add168)
  %conv170 = trunc i32 %call169 to i16
  %150 = load i32, i32* %j, align 4
  %idxprom171 = sext i32 %150 to i64
  %151 = load i32, i32* %i, align 4
  %idxprom172 = sext i32 %151 to i64
  %152 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mpr173 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %152, i32 0, i32 45
  %arrayidx174 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %mpr173, i32 0, i64 %idxprom172
  %arrayidx175 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx174, i32 0, i64 %idxprom171
  store i16 %conv170, i16* %arrayidx175, align 2
  br label %for.inc.176

for.inc.176:                                      ; preds = %for.body.151
  %153 = load i32, i32* %i, align 4
  %inc177 = add nsw i32 %153, 1
  store i32 %inc177, i32* %i, align 4
  br label %for.cond.148

for.end.178:                                      ; preds = %for.cond.148
  br label %for.inc.179

for.inc.179:                                      ; preds = %for.end.178
  %154 = load i32, i32* %j, align 4
  %inc180 = add nsw i32 %154, 1
  store i32 %inc180, i32* %j, align 4
  br label %for.cond.144

for.end.181:                                      ; preds = %for.cond.144
  br label %if.end.182

if.end.182:                                       ; preds = %for.end.181, %for.end.142
  br label %if.end.183

if.end.183:                                       ; preds = %if.end.182, %for.end.101
  br label %if.end.261

if.else.184:                                      ; preds = %if.end.44
  %155 = load i32, i32* %p_dir.addr, align 4
  %cmp185 = icmp eq i32 %155, 2
  br i1 %cmp185, label %if.then.187, label %if.else.212

if.then.187:                                      ; preds = %if.else.184
  %156 = load i32, i32* %block_y.addr, align 4
  store i32 %156, i32* %j, align 4
  br label %for.cond.188

for.cond.188:                                     ; preds = %for.inc.209, %if.then.187
  %157 = load i32, i32* %j, align 4
  %158 = load i32, i32* %block_y4, align 4
  %cmp189 = icmp slt i32 %157, %158
  br i1 %cmp189, label %for.body.191, label %for.end.211

for.body.191:                                     ; preds = %for.cond.188
  %159 = load i32, i32* %block_x.addr, align 4
  store i32 %159, i32* %i, align 4
  br label %for.cond.192

for.cond.192:                                     ; preds = %for.inc.206, %for.body.191
  %160 = load i32, i32* %i, align 4
  %161 = load i32, i32* %block_x4, align 4
  %cmp193 = icmp slt i32 %160, %161
  br i1 %cmp193, label %for.body.195, label %for.end.208

for.body.195:                                     ; preds = %for.cond.192
  %162 = load i32*, i32** %fpred, align 8
  %incdec.ptr196 = getelementptr inbounds i32, i32* %162, i32 1
  store i32* %incdec.ptr196, i32** %fpred, align 8
  %163 = load i32, i32* %162, align 4
  %164 = load i32*, i32** %bpred, align 8
  %incdec.ptr197 = getelementptr inbounds i32, i32* %164, i32 1
  store i32* %incdec.ptr197, i32** %bpred, align 8
  %165 = load i32, i32* %164, align 4
  %add198 = add nsw i32 %163, %165
  %add199 = add nsw i32 %add198, 1
  %div = sdiv i32 %add199, 2
  %conv200 = trunc i32 %div to i16
  %166 = load i32, i32* %j, align 4
  %idxprom201 = sext i32 %166 to i64
  %167 = load i32, i32* %i, align 4
  %idxprom202 = sext i32 %167 to i64
  %168 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mpr203 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %168, i32 0, i32 45
  %arrayidx204 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %mpr203, i32 0, i64 %idxprom202
  %arrayidx205 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx204, i32 0, i64 %idxprom201
  store i16 %conv200, i16* %arrayidx205, align 2
  br label %for.inc.206

for.inc.206:                                      ; preds = %for.body.195
  %169 = load i32, i32* %i, align 4
  %inc207 = add nsw i32 %169, 1
  store i32 %inc207, i32* %i, align 4
  br label %for.cond.192

for.end.208:                                      ; preds = %for.cond.192
  br label %for.inc.209

for.inc.209:                                      ; preds = %for.end.208
  %170 = load i32, i32* %j, align 4
  %inc210 = add nsw i32 %170, 1
  store i32 %inc210, i32* %j, align 4
  br label %for.cond.188

for.end.211:                                      ; preds = %for.cond.188
  br label %if.end.260

if.else.212:                                      ; preds = %if.else.184
  %171 = load i32, i32* %p_dir.addr, align 4
  %cmp213 = icmp eq i32 %171, 0
  br i1 %cmp213, label %if.then.215, label %if.else.237

if.then.215:                                      ; preds = %if.else.212
  %172 = load i32, i32* %block_y.addr, align 4
  store i32 %172, i32* %j, align 4
  br label %for.cond.216

for.cond.216:                                     ; preds = %for.inc.234, %if.then.215
  %173 = load i32, i32* %j, align 4
  %174 = load i32, i32* %block_y4, align 4
  %cmp217 = icmp slt i32 %173, %174
  br i1 %cmp217, label %for.body.219, label %for.end.236

for.body.219:                                     ; preds = %for.cond.216
  %175 = load i32, i32* %block_x.addr, align 4
  store i32 %175, i32* %i, align 4
  br label %for.cond.220

for.cond.220:                                     ; preds = %for.inc.231, %for.body.219
  %176 = load i32, i32* %i, align 4
  %177 = load i32, i32* %block_x4, align 4
  %cmp221 = icmp slt i32 %176, %177
  br i1 %cmp221, label %for.body.223, label %for.end.233

for.body.223:                                     ; preds = %for.cond.220
  %178 = load i32*, i32** %fpred, align 8
  %incdec.ptr224 = getelementptr inbounds i32, i32* %178, i32 1
  store i32* %incdec.ptr224, i32** %fpred, align 8
  %179 = load i32, i32* %178, align 4
  %conv225 = trunc i32 %179 to i16
  %180 = load i32, i32* %j, align 4
  %idxprom226 = sext i32 %180 to i64
  %181 = load i32, i32* %i, align 4
  %idxprom227 = sext i32 %181 to i64
  %182 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mpr228 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %182, i32 0, i32 45
  %arrayidx229 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %mpr228, i32 0, i64 %idxprom227
  %arrayidx230 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx229, i32 0, i64 %idxprom226
  store i16 %conv225, i16* %arrayidx230, align 2
  br label %for.inc.231

for.inc.231:                                      ; preds = %for.body.223
  %183 = load i32, i32* %i, align 4
  %inc232 = add nsw i32 %183, 1
  store i32 %inc232, i32* %i, align 4
  br label %for.cond.220

for.end.233:                                      ; preds = %for.cond.220
  br label %for.inc.234

for.inc.234:                                      ; preds = %for.end.233
  %184 = load i32, i32* %j, align 4
  %inc235 = add nsw i32 %184, 1
  store i32 %inc235, i32* %j, align 4
  br label %for.cond.216

for.end.236:                                      ; preds = %for.cond.216
  br label %if.end.259

if.else.237:                                      ; preds = %if.else.212
  %185 = load i32, i32* %block_y.addr, align 4
  store i32 %185, i32* %j, align 4
  br label %for.cond.238

for.cond.238:                                     ; preds = %for.inc.256, %if.else.237
  %186 = load i32, i32* %j, align 4
  %187 = load i32, i32* %block_y4, align 4
  %cmp239 = icmp slt i32 %186, %187
  br i1 %cmp239, label %for.body.241, label %for.end.258

for.body.241:                                     ; preds = %for.cond.238
  %188 = load i32, i32* %block_x.addr, align 4
  store i32 %188, i32* %i, align 4
  br label %for.cond.242

for.cond.242:                                     ; preds = %for.inc.253, %for.body.241
  %189 = load i32, i32* %i, align 4
  %190 = load i32, i32* %block_x4, align 4
  %cmp243 = icmp slt i32 %189, %190
  br i1 %cmp243, label %for.body.245, label %for.end.255

for.body.245:                                     ; preds = %for.cond.242
  %191 = load i32*, i32** %bpred, align 8
  %incdec.ptr246 = getelementptr inbounds i32, i32* %191, i32 1
  store i32* %incdec.ptr246, i32** %bpred, align 8
  %192 = load i32, i32* %191, align 4
  %conv247 = trunc i32 %192 to i16
  %193 = load i32, i32* %j, align 4
  %idxprom248 = sext i32 %193 to i64
  %194 = load i32, i32* %i, align 4
  %idxprom249 = sext i32 %194 to i64
  %195 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mpr250 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %195, i32 0, i32 45
  %arrayidx251 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %mpr250, i32 0, i64 %idxprom249
  %arrayidx252 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx251, i32 0, i64 %idxprom248
  store i16 %conv247, i16* %arrayidx252, align 2
  br label %for.inc.253

for.inc.253:                                      ; preds = %for.body.245
  %196 = load i32, i32* %i, align 4
  %inc254 = add nsw i32 %196, 1
  store i32 %inc254, i32* %i, align 4
  br label %for.cond.242

for.end.255:                                      ; preds = %for.cond.242
  br label %for.inc.256

for.inc.256:                                      ; preds = %for.end.255
  %197 = load i32, i32* %j, align 4
  %inc257 = add nsw i32 %197, 1
  store i32 %inc257, i32* %j, align 4
  br label %for.cond.238

for.end.258:                                      ; preds = %for.cond.238
  br label %if.end.259

if.end.259:                                       ; preds = %for.end.258, %for.end.236
  br label %if.end.260

if.end.260:                                       ; preds = %if.end.259, %for.end.211
  br label %if.end.261

if.end.261:                                       ; preds = %if.then.29, %if.end.260, %if.end.183
  ret void
}

declare i32 @dct_luma(i32, i32, i32*, i32) #1

declare i32 @dct_luma_sp(i32, i32, i32*) #1

declare i32 @dct_luma8x8(i32, i32*, i32) #1

declare void @copyblock_sp(i32, i32) #1

; Function Attrs: nounwind uwtable
define void @SetModesAndRefframe(i32 %b8, i16* %p_dir, i32* %fw_mode, i32* %bw_mode, i16* %fw_ref, i16* %bw_ref) #0 {
entry:
  %b8.addr = alloca i32, align 4
  %p_dir.addr = alloca i16*, align 8
  %fw_mode.addr = alloca i32*, align 8
  %bw_mode.addr = alloca i32*, align 8
  %fw_ref.addr = alloca i16*, align 8
  %bw_ref.addr = alloca i16*, align 8
  %currMB = alloca %struct.macroblock*, align 8
  %j = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 %b8, i32* %b8.addr, align 4
  store i16* %p_dir, i16** %p_dir.addr, align 8
  store i32* %fw_mode, i32** %fw_mode.addr, align 8
  store i32* %bw_mode, i32** %bw_mode.addr, align 8
  store i16* %fw_ref, i16** %fw_ref.addr, align 8
  store i16* %bw_ref, i16** %bw_ref.addr, align 8
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i32 0, i32 3
  %1 = load i32, i32* %current_mb_nr, align 4
  %idxprom = sext i32 %1 to i64
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 51
  %3 = load %struct.macroblock*, %struct.macroblock** %mb_data, align 8
  %arrayidx = getelementptr inbounds %struct.macroblock, %struct.macroblock* %3, i64 %idxprom
  store %struct.macroblock* %arrayidx, %struct.macroblock** %currMB, align 8
  %4 = load i32, i32* %b8.addr, align 4
  %div = sdiv i32 %4, 2
  %mul = mul nsw i32 2, %div
  store i32 %mul, i32* %j, align 4
  %5 = load i32, i32* %b8.addr, align 4
  %rem = srem i32 %5, 2
  %mul1 = mul nsw i32 2, %rem
  store i32 %mul1, i32* %i, align 4
  %6 = load i16*, i16** %bw_ref.addr, align 8
  store i16 -1, i16* %6, align 2
  %7 = load i16*, i16** %fw_ref.addr, align 8
  store i16 -1, i16* %7, align 2
  %8 = load i32*, i32** %bw_mode.addr, align 8
  store i32 -1, i32* %8, align 4
  %9 = load i32*, i32** %fw_mode.addr, align 8
  store i32 -1, i32* %9, align 4
  %10 = load i32, i32* %b8.addr, align 4
  %idxprom2 = sext i32 %10 to i64
  %11 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %b8pdir = getelementptr inbounds %struct.macroblock, %struct.macroblock* %11, i32 0, i32 15
  %arrayidx3 = getelementptr inbounds [4 x i32], [4 x i32]* %b8pdir, i32 0, i64 %idxprom2
  %12 = load i32, i32* %arrayidx3, align 4
  %conv = trunc i32 %12 to i16
  %13 = load i16*, i16** %p_dir.addr, align 8
  store i16 %conv, i16* %13, align 2
  %14 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %14, i32 0, i32 6
  %15 = load i32, i32* %type, align 4
  %cmp = icmp ne i32 %15, 1
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %16 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %block_y = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %16, i32 0, i32 32
  %17 = load i32, i32* %block_y, align 4
  %18 = load i32, i32* %j, align 4
  %add = add nsw i32 %17, %18
  %idxprom5 = sext i32 %add to i64
  %19 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %block_x = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %19, i32 0, i32 31
  %20 = load i32, i32* %block_x, align 4
  %21 = load i32, i32* %i, align 4
  %add6 = add nsw i32 %20, %21
  %idxprom7 = sext i32 %add6 to i64
  %22 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %22, i32 0, i32 32
  %23 = load i16***, i16**** %ref_idx, align 8
  %arrayidx8 = getelementptr inbounds i16**, i16*** %23, i64 0
  %24 = load i16**, i16*** %arrayidx8, align 8
  %arrayidx9 = getelementptr inbounds i16*, i16** %24, i64 %idxprom7
  %25 = load i16*, i16** %arrayidx9, align 8
  %arrayidx10 = getelementptr inbounds i16, i16* %25, i64 %idxprom5
  %26 = load i16, i16* %arrayidx10, align 2
  %27 = load i16*, i16** %fw_ref.addr, align 8
  store i16 %26, i16* %27, align 2
  %28 = load i16*, i16** %bw_ref.addr, align 8
  store i16 0, i16* %28, align 2
  %29 = load i32, i32* %b8.addr, align 4
  %idxprom11 = sext i32 %29 to i64
  %30 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %b8mode = getelementptr inbounds %struct.macroblock, %struct.macroblock* %30, i32 0, i32 14
  %arrayidx12 = getelementptr inbounds [4 x i32], [4 x i32]* %b8mode, i32 0, i64 %idxprom11
  %31 = load i32, i32* %arrayidx12, align 4
  %32 = load i32*, i32** %fw_mode.addr, align 8
  store i32 %31, i32* %32, align 4
  %33 = load i32*, i32** %bw_mode.addr, align 8
  store i32 0, i32* %33, align 4
  br label %if.end.88

if.else:                                          ; preds = %entry
  %34 = load i32, i32* %b8.addr, align 4
  %idxprom13 = sext i32 %34 to i64
  %35 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %b8pdir14 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %35, i32 0, i32 15
  %arrayidx15 = getelementptr inbounds [4 x i32], [4 x i32]* %b8pdir14, i32 0, i64 %idxprom13
  %36 = load i32, i32* %arrayidx15, align 4
  %cmp16 = icmp eq i32 %36, -1
  br i1 %cmp16, label %if.then.18, label %if.else.19

if.then.18:                                       ; preds = %if.else
  %37 = load i16*, i16** %fw_ref.addr, align 8
  store i16 -1, i16* %37, align 2
  %38 = load i16*, i16** %bw_ref.addr, align 8
  store i16 -1, i16* %38, align 2
  %39 = load i32*, i32** %fw_mode.addr, align 8
  store i32 0, i32* %39, align 4
  %40 = load i32*, i32** %bw_mode.addr, align 8
  store i32 0, i32* %40, align 4
  br label %if.end.87

if.else.19:                                       ; preds = %if.else
  %41 = load i32, i32* %b8.addr, align 4
  %idxprom20 = sext i32 %41 to i64
  %42 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %b8pdir21 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %42, i32 0, i32 15
  %arrayidx22 = getelementptr inbounds [4 x i32], [4 x i32]* %b8pdir21, i32 0, i64 %idxprom20
  %43 = load i32, i32* %arrayidx22, align 4
  %cmp23 = icmp eq i32 %43, 0
  br i1 %cmp23, label %if.then.25, label %if.else.39

if.then.25:                                       ; preds = %if.else.19
  %44 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %block_y26 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %44, i32 0, i32 32
  %45 = load i32, i32* %block_y26, align 4
  %46 = load i32, i32* %j, align 4
  %add27 = add nsw i32 %45, %46
  %idxprom28 = sext i32 %add27 to i64
  %47 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %block_x29 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %47, i32 0, i32 31
  %48 = load i32, i32* %block_x29, align 4
  %49 = load i32, i32* %i, align 4
  %add30 = add nsw i32 %48, %49
  %idxprom31 = sext i32 %add30 to i64
  %50 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx32 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %50, i32 0, i32 32
  %51 = load i16***, i16**** %ref_idx32, align 8
  %arrayidx33 = getelementptr inbounds i16**, i16*** %51, i64 0
  %52 = load i16**, i16*** %arrayidx33, align 8
  %arrayidx34 = getelementptr inbounds i16*, i16** %52, i64 %idxprom31
  %53 = load i16*, i16** %arrayidx34, align 8
  %arrayidx35 = getelementptr inbounds i16, i16* %53, i64 %idxprom28
  %54 = load i16, i16* %arrayidx35, align 2
  %55 = load i16*, i16** %fw_ref.addr, align 8
  store i16 %54, i16* %55, align 2
  %56 = load i16*, i16** %bw_ref.addr, align 8
  store i16 0, i16* %56, align 2
  %57 = load i32, i32* %b8.addr, align 4
  %idxprom36 = sext i32 %57 to i64
  %58 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %b8mode37 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %58, i32 0, i32 14
  %arrayidx38 = getelementptr inbounds [4 x i32], [4 x i32]* %b8mode37, i32 0, i64 %idxprom36
  %59 = load i32, i32* %arrayidx38, align 4
  %60 = load i32*, i32** %fw_mode.addr, align 8
  store i32 %59, i32* %60, align 4
  %61 = load i32*, i32** %bw_mode.addr, align 8
  store i32 0, i32* %61, align 4
  br label %if.end.86

if.else.39:                                       ; preds = %if.else.19
  %62 = load i32, i32* %b8.addr, align 4
  %idxprom40 = sext i32 %62 to i64
  %63 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %b8pdir41 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %63, i32 0, i32 15
  %arrayidx42 = getelementptr inbounds [4 x i32], [4 x i32]* %b8pdir41, i32 0, i64 %idxprom40
  %64 = load i32, i32* %arrayidx42, align 4
  %cmp43 = icmp eq i32 %64, 1
  br i1 %cmp43, label %if.then.45, label %if.else.59

if.then.45:                                       ; preds = %if.else.39
  %65 = load i16*, i16** %fw_ref.addr, align 8
  store i16 0, i16* %65, align 2
  %66 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %block_y46 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %66, i32 0, i32 32
  %67 = load i32, i32* %block_y46, align 4
  %68 = load i32, i32* %j, align 4
  %add47 = add nsw i32 %67, %68
  %idxprom48 = sext i32 %add47 to i64
  %69 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %block_x49 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %69, i32 0, i32 31
  %70 = load i32, i32* %block_x49, align 4
  %71 = load i32, i32* %i, align 4
  %add50 = add nsw i32 %70, %71
  %idxprom51 = sext i32 %add50 to i64
  %72 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx52 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %72, i32 0, i32 32
  %73 = load i16***, i16**** %ref_idx52, align 8
  %arrayidx53 = getelementptr inbounds i16**, i16*** %73, i64 1
  %74 = load i16**, i16*** %arrayidx53, align 8
  %arrayidx54 = getelementptr inbounds i16*, i16** %74, i64 %idxprom51
  %75 = load i16*, i16** %arrayidx54, align 8
  %arrayidx55 = getelementptr inbounds i16, i16* %75, i64 %idxprom48
  %76 = load i16, i16* %arrayidx55, align 2
  %77 = load i16*, i16** %bw_ref.addr, align 8
  store i16 %76, i16* %77, align 2
  %78 = load i32*, i32** %fw_mode.addr, align 8
  store i32 0, i32* %78, align 4
  %79 = load i32, i32* %b8.addr, align 4
  %idxprom56 = sext i32 %79 to i64
  %80 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %b8mode57 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %80, i32 0, i32 14
  %arrayidx58 = getelementptr inbounds [4 x i32], [4 x i32]* %b8mode57, i32 0, i64 %idxprom56
  %81 = load i32, i32* %arrayidx58, align 4
  %82 = load i32*, i32** %bw_mode.addr, align 8
  store i32 %81, i32* %82, align 4
  br label %if.end

if.else.59:                                       ; preds = %if.else.39
  %83 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %block_y60 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %83, i32 0, i32 32
  %84 = load i32, i32* %block_y60, align 4
  %85 = load i32, i32* %j, align 4
  %add61 = add nsw i32 %84, %85
  %idxprom62 = sext i32 %add61 to i64
  %86 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %block_x63 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %86, i32 0, i32 31
  %87 = load i32, i32* %block_x63, align 4
  %88 = load i32, i32* %i, align 4
  %add64 = add nsw i32 %87, %88
  %idxprom65 = sext i32 %add64 to i64
  %89 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx66 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %89, i32 0, i32 32
  %90 = load i16***, i16**** %ref_idx66, align 8
  %arrayidx67 = getelementptr inbounds i16**, i16*** %90, i64 0
  %91 = load i16**, i16*** %arrayidx67, align 8
  %arrayidx68 = getelementptr inbounds i16*, i16** %91, i64 %idxprom65
  %92 = load i16*, i16** %arrayidx68, align 8
  %arrayidx69 = getelementptr inbounds i16, i16* %92, i64 %idxprom62
  %93 = load i16, i16* %arrayidx69, align 2
  %94 = load i16*, i16** %fw_ref.addr, align 8
  store i16 %93, i16* %94, align 2
  %95 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %block_y70 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %95, i32 0, i32 32
  %96 = load i32, i32* %block_y70, align 4
  %97 = load i32, i32* %j, align 4
  %add71 = add nsw i32 %96, %97
  %idxprom72 = sext i32 %add71 to i64
  %98 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %block_x73 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %98, i32 0, i32 31
  %99 = load i32, i32* %block_x73, align 4
  %100 = load i32, i32* %i, align 4
  %add74 = add nsw i32 %99, %100
  %idxprom75 = sext i32 %add74 to i64
  %101 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx76 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %101, i32 0, i32 32
  %102 = load i16***, i16**** %ref_idx76, align 8
  %arrayidx77 = getelementptr inbounds i16**, i16*** %102, i64 1
  %103 = load i16**, i16*** %arrayidx77, align 8
  %arrayidx78 = getelementptr inbounds i16*, i16** %103, i64 %idxprom75
  %104 = load i16*, i16** %arrayidx78, align 8
  %arrayidx79 = getelementptr inbounds i16, i16* %104, i64 %idxprom72
  %105 = load i16, i16* %arrayidx79, align 2
  %106 = load i16*, i16** %bw_ref.addr, align 8
  store i16 %105, i16* %106, align 2
  %107 = load i32, i32* %b8.addr, align 4
  %idxprom80 = sext i32 %107 to i64
  %108 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %b8mode81 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %108, i32 0, i32 14
  %arrayidx82 = getelementptr inbounds [4 x i32], [4 x i32]* %b8mode81, i32 0, i64 %idxprom80
  %109 = load i32, i32* %arrayidx82, align 4
  %110 = load i32*, i32** %fw_mode.addr, align 8
  store i32 %109, i32* %110, align 4
  %111 = load i32, i32* %b8.addr, align 4
  %idxprom83 = sext i32 %111 to i64
  %112 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %b8mode84 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %112, i32 0, i32 14
  %arrayidx85 = getelementptr inbounds [4 x i32], [4 x i32]* %b8mode84, i32 0, i64 %idxprom83
  %113 = load i32, i32* %arrayidx85, align 4
  %114 = load i32*, i32** %bw_mode.addr, align 8
  store i32 %113, i32* %114, align 4
  br label %if.end

if.end:                                           ; preds = %if.else.59, %if.then.45
  br label %if.end.86

if.end.86:                                        ; preds = %if.end, %if.then.25
  br label %if.end.87

if.end.87:                                        ; preds = %if.end.86, %if.then.18
  br label %if.end.88

if.end.88:                                        ; preds = %if.end.87, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define void @LumaResidualCoding() #0 {
entry:
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %block8x8 = alloca i32, align 4
  %b8_x = alloca i32, align 4
  %b8_y = alloca i32, align 4
  %fw_mode = alloca i32, align 4
  %bw_mode = alloca i32, align 4
  %p_dir = alloca i16, align 2
  %refframe = alloca i16, align 2
  %sum_cnt_nonz = alloca i32, align 4
  %currMB = alloca %struct.macroblock*, align 8
  %bw_ref = alloca i16, align 2
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i32 0, i32 3
  %1 = load i32, i32* %current_mb_nr, align 4
  %idxprom = sext i32 %1 to i64
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 51
  %3 = load %struct.macroblock*, %struct.macroblock** %mb_data, align 8
  %arrayidx = getelementptr inbounds %struct.macroblock, %struct.macroblock* %3, i64 %idxprom
  store %struct.macroblock* %arrayidx, %struct.macroblock** %currMB, align 8
  %4 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %cbp = getelementptr inbounds %struct.macroblock, %struct.macroblock* %4, i32 0, i32 12
  store i32 0, i32* %cbp, align 4
  %5 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %cbp_blk = getelementptr inbounds %struct.macroblock, %struct.macroblock* %5, i32 0, i32 13
  store i64 0, i64* %cbp_blk, align 8
  store i32 0, i32* %sum_cnt_nonz, align 4
  store i32 0, i32* %block8x8, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load i32, i32* %block8x8, align 4
  %cmp = icmp slt i32 %6, 4
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %7 = load i32, i32* %block8x8, align 4
  call void @SetModesAndRefframe(i32 %7, i16* %p_dir, i32* %fw_mode, i32* %bw_mode, i16* %refframe, i16* %bw_ref)
  %8 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %cbp1 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %8, i32 0, i32 12
  %9 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %cbp_blk2 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i32 0, i32 13
  %10 = load i32, i32* %block8x8, align 4
  %11 = load i16, i16* %p_dir, align 2
  %12 = load i32, i32* %fw_mode, align 4
  %13 = load i32, i32* %bw_mode, align 4
  %14 = load i16, i16* %refframe, align 2
  %15 = load i16, i16* %bw_ref, align 2
  %call = call i32 @LumaResidualCoding8x8(i32* %cbp1, i64* %cbp_blk2, i32 %10, i16 signext %11, i32 %12, i32 %13, i16 signext %14, i16 signext %15)
  %16 = load i32, i32* %sum_cnt_nonz, align 4
  %add = add nsw i32 %16, %call
  store i32 %add, i32* %sum_cnt_nonz, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %17 = load i32, i32* %block8x8, align 4
  %inc = add nsw i32 %17, 1
  store i32 %inc, i32* %block8x8, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %18 = load i32, i32* %sum_cnt_nonz, align 4
  %cmp3 = icmp sle i32 %18, 5
  br i1 %cmp3, label %land.lhs.true, label %if.end.63

land.lhs.true:                                    ; preds = %for.end
  %19 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %qp = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %19, i32 0, i32 10
  %20 = load i32, i32* %qp, align 4
  %21 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %bitdepth_luma_qp_scale = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %21, i32 0, i32 151
  %22 = load i32, i32* %bitdepth_luma_qp_scale, align 4
  %add4 = add nsw i32 %20, %22
  %cmp5 = icmp ne i32 %add4, 0
  br i1 %cmp5, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true
  %23 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %lossless_qpprime_flag = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %23, i32 0, i32 160
  %24 = load i32, i32* %lossless_qpprime_flag, align 4
  %cmp6 = icmp eq i32 %24, 0
  br i1 %cmp6, label %if.then, label %if.end.63

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  %25 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %cbp7 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %25, i32 0, i32 12
  %26 = load i32, i32* %cbp7, align 4
  %and = and i32 %26, 16777200
  store i32 %and, i32* %cbp7, align 4
  %27 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %cbp_blk8 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %27, i32 0, i32 13
  %28 = load i64, i64* %cbp_blk8, align 8
  %and9 = and i64 %28, 16711680
  store i64 %and9, i64* %cbp_blk8, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond.10

for.cond.10:                                      ; preds = %for.inc.34, %if.then
  %29 = load i32, i32* %i, align 4
  %cmp11 = icmp slt i32 %29, 16
  br i1 %cmp11, label %for.body.12, label %for.end.36

for.body.12:                                      ; preds = %for.cond.10
  store i32 0, i32* %j, align 4
  br label %for.cond.13

for.cond.13:                                      ; preds = %for.inc.31, %for.body.12
  %30 = load i32, i32* %j, align 4
  %cmp14 = icmp slt i32 %30, 16
  br i1 %cmp14, label %for.body.15, label %for.end.33

for.body.15:                                      ; preds = %for.cond.13
  %31 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %residue_transform_flag = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %31, i32 0, i32 164
  %32 = load i32, i32* %residue_transform_flag, align 4
  %tobool = icmp ne i32 %32, 0
  br i1 %tobool, label %if.else, label %if.then.16

if.then.16:                                       ; preds = %for.body.15
  %33 = load i32, i32* %j, align 4
  %idxprom17 = sext i32 %33 to i64
  %34 = load i32, i32* %i, align 4
  %idxprom18 = sext i32 %34 to i64
  %35 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mpr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %35, i32 0, i32 45
  %arrayidx19 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %mpr, i32 0, i64 %idxprom18
  %arrayidx20 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx19, i32 0, i64 %idxprom17
  %36 = load i16, i16* %arrayidx20, align 2
  %37 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %37, i32 0, i32 33
  %38 = load i32, i32* %pix_x, align 4
  %39 = load i32, i32* %i, align 4
  %add21 = add nsw i32 %38, %39
  %idxprom22 = sext i32 %add21 to i64
  %40 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %40, i32 0, i32 34
  %41 = load i32, i32* %pix_y, align 4
  %42 = load i32, i32* %j, align 4
  %add23 = add nsw i32 %41, %42
  %idxprom24 = sext i32 %add23 to i64
  %43 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %imgY = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %43, i32 0, i32 25
  %44 = load i16**, i16*** %imgY, align 8
  %arrayidx25 = getelementptr inbounds i16*, i16** %44, i64 %idxprom24
  %45 = load i16*, i16** %arrayidx25, align 8
  %arrayidx26 = getelementptr inbounds i16, i16* %45, i64 %idxprom22
  store i16 %36, i16* %arrayidx26, align 2
  br label %if.end

if.else:                                          ; preds = %for.body.15
  %46 = load i32, i32* %j, align 4
  %idxprom27 = sext i32 %46 to i64
  %47 = load i32, i32* %i, align 4
  %idxprom28 = sext i32 %47 to i64
  %arrayidx29 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* @rec_resG, i32 0, i64 %idxprom28
  %arrayidx30 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx29, i32 0, i64 %idxprom27
  store i32 0, i32* %arrayidx30, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.16
  br label %for.inc.31

for.inc.31:                                       ; preds = %if.end
  %48 = load i32, i32* %j, align 4
  %inc32 = add nsw i32 %48, 1
  store i32 %inc32, i32* %j, align 4
  br label %for.cond.13

for.end.33:                                       ; preds = %for.cond.13
  br label %for.inc.34

for.inc.34:                                       ; preds = %for.end.33
  %49 = load i32, i32* %i, align 4
  %inc35 = add nsw i32 %49, 1
  store i32 %inc35, i32* %i, align 4
  br label %for.cond.10

for.end.36:                                       ; preds = %for.cond.10
  %50 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %50, i32 0, i32 6
  %51 = load i32, i32* %type, align 4
  %cmp37 = icmp eq i32 %51, 3
  br i1 %cmp37, label %if.then.38, label %if.end.62

if.then.38:                                       ; preds = %for.end.36
  store i32 0, i32* %block8x8, align 4
  br label %for.cond.39

for.cond.39:                                      ; preds = %for.inc.59, %if.then.38
  %52 = load i32, i32* %block8x8, align 4
  %cmp40 = icmp slt i32 %52, 4
  br i1 %cmp40, label %for.body.41, label %for.end.61

for.body.41:                                      ; preds = %for.cond.39
  %53 = load i32, i32* %block8x8, align 4
  %and42 = and i32 %53, 1
  %shl = shl i32 %and42, 3
  store i32 %shl, i32* %b8_x, align 4
  %54 = load i32, i32* %block8x8, align 4
  %and43 = and i32 %54, 2
  %shl44 = shl i32 %and43, 2
  store i32 %shl44, i32* %b8_y, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond.45

for.cond.45:                                      ; preds = %for.inc.56, %for.body.41
  %55 = load i32, i32* %i, align 4
  %cmp46 = icmp slt i32 %55, 8
  br i1 %cmp46, label %for.body.47, label %for.end.58

for.body.47:                                      ; preds = %for.cond.45
  store i32 0, i32* %j, align 4
  br label %for.cond.48

for.cond.48:                                      ; preds = %for.inc.53, %for.body.47
  %56 = load i32, i32* %j, align 4
  %cmp49 = icmp slt i32 %56, 8
  br i1 %cmp49, label %for.body.50, label %for.end.55

for.body.50:                                      ; preds = %for.cond.48
  %57 = load i32, i32* %b8_x, align 4
  %58 = load i32, i32* %i, align 4
  %add51 = add nsw i32 %57, %58
  %59 = load i32, i32* %b8_y, align 4
  %60 = load i32, i32* %j, align 4
  %add52 = add nsw i32 %59, %60
  call void @copyblock_sp(i32 %add51, i32 %add52)
  br label %for.inc.53

for.inc.53:                                       ; preds = %for.body.50
  %61 = load i32, i32* %j, align 4
  %add54 = add nsw i32 %61, 4
  store i32 %add54, i32* %j, align 4
  br label %for.cond.48

for.end.55:                                       ; preds = %for.cond.48
  br label %for.inc.56

for.inc.56:                                       ; preds = %for.end.55
  %62 = load i32, i32* %i, align 4
  %add57 = add nsw i32 %62, 4
  store i32 %add57, i32* %i, align 4
  br label %for.cond.45

for.end.58:                                       ; preds = %for.cond.45
  br label %for.inc.59

for.inc.59:                                       ; preds = %for.end.58
  %63 = load i32, i32* %block8x8, align 4
  %inc60 = add nsw i32 %63, 1
  store i32 %inc60, i32* %block8x8, align 4
  br label %for.cond.39

for.end.61:                                       ; preds = %for.cond.39
  br label %if.end.62

if.end.62:                                        ; preds = %for.end.61, %for.end.36
  br label %if.end.63

if.end.63:                                        ; preds = %if.end.62, %lor.lhs.false, %for.end
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @TransformDecision(i32 %block_check, i32* %cost) #0 {
entry:
  %retval = alloca i32, align 4
  %block_check.addr = alloca i32, align 4
  %cost.addr = alloca i32*, align 8
  %block_y = alloca i32, align 4
  %block_x = alloca i32, align 4
  %pic_pix_y = alloca i32, align 4
  %pic_pix_x = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %mb_y = alloca i32, align 4
  %mb_x = alloca i32, align 4
  %block8x8 = alloca i32, align 4
  %fw_mode = alloca i32, align 4
  %bw_mode = alloca i32, align 4
  %p_dir = alloca i16, align 2
  %fw_ref = alloca i16, align 2
  %bw_ref = alloca i16, align 2
  %num_blks = alloca i32, align 4
  %cost8x8 = alloca i32, align 4
  %cost4x4 = alloca i32, align 4
  %diff = alloca [64 x i32], align 16
  %diff_ptr = alloca i32*, align 8
  store i32 %block_check, i32* %block_check.addr, align 4
  store i32* %cost, i32** %cost.addr, align 8
  store i32 0, i32* %cost8x8, align 4
  store i32 0, i32* %cost4x4, align 4
  %0 = load i32, i32* %block_check.addr, align 4
  %cmp = icmp eq i32 %0, -1
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store i32 0, i32* %block8x8, align 4
  store i32 4, i32* %num_blks, align 4
  br label %if.end

if.else:                                          ; preds = %entry
  %1 = load i32, i32* %block_check.addr, align 4
  store i32 %1, i32* %block8x8, align 4
  %2 = load i32, i32* %block_check.addr, align 4
  %add = add nsw i32 %2, 1
  store i32 %add, i32* %num_blks, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.cond

for.cond:                                         ; preds = %for.inc.51, %if.end
  %3 = load i32, i32* %block8x8, align 4
  %4 = load i32, i32* %num_blks, align 4
  %cmp1 = icmp slt i32 %3, %4
  br i1 %cmp1, label %for.body, label %for.end.53

for.body:                                         ; preds = %for.cond
  %5 = load i32, i32* %block8x8, align 4
  call void @SetModesAndRefframe(i32 %5, i16* %p_dir, i32* %fw_mode, i32* %bw_mode, i16* %fw_ref, i16* %bw_ref)
  %6 = load i32, i32* %block8x8, align 4
  %div = sdiv i32 %6, 2
  %shl = shl i32 %div, 3
  store i32 %shl, i32* %mb_y, align 4
  %7 = load i32, i32* %block8x8, align 4
  %rem = srem i32 %7, 2
  %shl2 = shl i32 %rem, 3
  store i32 %shl2, i32* %mb_x, align 4
  store i32 0, i32* %k, align 4
  %8 = load i32, i32* %mb_y, align 4
  store i32 %8, i32* %block_y, align 4
  br label %for.cond.3

for.cond.3:                                       ; preds = %for.inc.45, %for.body
  %9 = load i32, i32* %block_y, align 4
  %10 = load i32, i32* %mb_y, align 4
  %add4 = add nsw i32 %10, 8
  %cmp5 = icmp slt i32 %9, %add4
  br i1 %cmp5, label %for.body.6, label %for.end.47

for.body.6:                                       ; preds = %for.cond.3
  %11 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %opix_y = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %11, i32 0, i32 38
  %12 = load i32, i32* %opix_y, align 4
  %13 = load i32, i32* %block_y, align 4
  %add7 = add nsw i32 %12, %13
  store i32 %add7, i32* %pic_pix_y, align 4
  %14 = load i32, i32* %mb_x, align 4
  store i32 %14, i32* %block_x, align 4
  br label %for.cond.8

for.cond.8:                                       ; preds = %for.inc.42, %for.body.6
  %15 = load i32, i32* %block_x, align 4
  %16 = load i32, i32* %mb_x, align 4
  %add9 = add nsw i32 %16, 8
  %cmp10 = icmp slt i32 %15, %add9
  br i1 %cmp10, label %for.body.11, label %for.end.44

for.body.11:                                      ; preds = %for.cond.8
  %17 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %opix_x = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %17, i32 0, i32 37
  %18 = load i32, i32* %opix_x, align 4
  %19 = load i32, i32* %block_x, align 4
  %add12 = add nsw i32 %18, %19
  store i32 %add12, i32* %pic_pix_x, align 4
  %20 = load i32, i32* %block_x, align 4
  %21 = load i32, i32* %block_y, align 4
  %22 = load i16, i16* %p_dir, align 2
  %conv = sext i16 %22 to i32
  %23 = load i32, i32* %fw_mode, align 4
  %24 = load i32, i32* %bw_mode, align 4
  %25 = load i16, i16* %fw_ref, align 2
  %26 = load i16, i16* %bw_ref, align 2
  call void @LumaPrediction4x4(i32 %20, i32 %21, i32 %conv, i32 %23, i32 %24, i16 signext %25, i16 signext %26)
  %27 = load i32, i32* %k, align 4
  %idxprom = sext i32 %27 to i64
  %arrayidx = getelementptr inbounds [64 x i32], [64 x i32]* %diff, i32 0, i64 %idxprom
  store i32* %arrayidx, i32** %diff_ptr, align 8
  store i32 0, i32* %j, align 4
  br label %for.cond.13

for.cond.13:                                      ; preds = %for.inc.38, %for.body.11
  %28 = load i32, i32* %j, align 4
  %cmp14 = icmp slt i32 %28, 4
  br i1 %cmp14, label %for.body.16, label %for.end.40

for.body.16:                                      ; preds = %for.cond.13
  store i32 0, i32* %i, align 4
  br label %for.cond.17

for.cond.17:                                      ; preds = %for.inc, %for.body.16
  %29 = load i32, i32* %i, align 4
  %cmp18 = icmp slt i32 %29, 4
  br i1 %cmp18, label %for.body.20, label %for.end

for.body.20:                                      ; preds = %for.cond.17
  %30 = load i32, i32* %pic_pix_x, align 4
  %31 = load i32, i32* %i, align 4
  %add21 = add nsw i32 %30, %31
  %idxprom22 = sext i32 %add21 to i64
  %32 = load i32, i32* %pic_pix_y, align 4
  %33 = load i32, i32* %j, align 4
  %add23 = add nsw i32 %32, %33
  %idxprom24 = sext i32 %add23 to i64
  %34 = load i16**, i16*** @imgY_org, align 8
  %arrayidx25 = getelementptr inbounds i16*, i16** %34, i64 %idxprom24
  %35 = load i16*, i16** %arrayidx25, align 8
  %arrayidx26 = getelementptr inbounds i16, i16* %35, i64 %idxprom22
  %36 = load i16, i16* %arrayidx26, align 2
  %conv27 = zext i16 %36 to i32
  %37 = load i32, i32* %j, align 4
  %38 = load i32, i32* %block_y, align 4
  %add28 = add nsw i32 %37, %38
  %idxprom29 = sext i32 %add28 to i64
  %39 = load i32, i32* %i, align 4
  %40 = load i32, i32* %block_x, align 4
  %add30 = add nsw i32 %39, %40
  %idxprom31 = sext i32 %add30 to i64
  %41 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mpr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %41, i32 0, i32 45
  %arrayidx32 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %mpr, i32 0, i64 %idxprom31
  %arrayidx33 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx32, i32 0, i64 %idxprom29
  %42 = load i16, i16* %arrayidx33, align 2
  %conv34 = zext i16 %42 to i32
  %sub = sub nsw i32 %conv27, %conv34
  %43 = load i32, i32* %k, align 4
  %idxprom35 = sext i32 %43 to i64
  %arrayidx36 = getelementptr inbounds [64 x i32], [64 x i32]* %diff, i32 0, i64 %idxprom35
  store i32 %sub, i32* %arrayidx36, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body.20
  %44 = load i32, i32* %i, align 4
  %inc = add nsw i32 %44, 1
  store i32 %inc, i32* %i, align 4
  %45 = load i32, i32* %k, align 4
  %inc37 = add nsw i32 %45, 1
  store i32 %inc37, i32* %k, align 4
  br label %for.cond.17

for.end:                                          ; preds = %for.cond.17
  br label %for.inc.38

for.inc.38:                                       ; preds = %for.end
  %46 = load i32, i32* %j, align 4
  %inc39 = add nsw i32 %46, 1
  store i32 %inc39, i32* %j, align 4
  br label %for.cond.13

for.end.40:                                       ; preds = %for.cond.13
  %47 = load i32*, i32** %diff_ptr, align 8
  %48 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamard = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %48, i32 0, i32 6
  %49 = load i32, i32* %hadamard, align 4
  %call = call i32 @SATD(i32* %47, i32 %49)
  %50 = load i32, i32* %cost4x4, align 4
  %add41 = add nsw i32 %50, %call
  store i32 %add41, i32* %cost4x4, align 4
  br label %for.inc.42

for.inc.42:                                       ; preds = %for.end.40
  %51 = load i32, i32* %block_x, align 4
  %add43 = add nsw i32 %51, 4
  store i32 %add43, i32* %block_x, align 4
  br label %for.cond.8

for.end.44:                                       ; preds = %for.cond.8
  br label %for.inc.45

for.inc.45:                                       ; preds = %for.end.44
  %52 = load i32, i32* %block_y, align 4
  %add46 = add nsw i32 %52, 4
  store i32 %add46, i32* %block_y, align 4
  br label %for.cond.3

for.end.47:                                       ; preds = %for.cond.3
  %arraydecay = getelementptr inbounds [64 x i32], [64 x i32]* %diff, i32 0, i32 0
  %53 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamard48 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %53, i32 0, i32 6
  %54 = load i32, i32* %hadamard48, align 4
  %call49 = call i32 @SATD8X8(i32* %arraydecay, i32 %54)
  %55 = load i32, i32* %cost8x8, align 4
  %add50 = add nsw i32 %55, %call49
  store i32 %add50, i32* %cost8x8, align 4
  br label %for.inc.51

for.inc.51:                                       ; preds = %for.end.47
  %56 = load i32, i32* %block8x8, align 4
  %inc52 = add nsw i32 %56, 1
  store i32 %inc52, i32* %block8x8, align 4
  br label %for.cond

for.end.53:                                       ; preds = %for.cond
  %57 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %AllowTransform8x8 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %57, i32 0, i32 123
  %58 = load i32, i32* %AllowTransform8x8, align 4
  %cmp54 = icmp eq i32 %58, 2
  br i1 %cmp54, label %if.then.56, label %if.else.57

if.then.56:                                       ; preds = %for.end.53
  store i32 1, i32* %retval
  br label %return

if.else.57:                                       ; preds = %for.end.53
  %59 = load i32, i32* %cost8x8, align 4
  %60 = load i32, i32* %cost4x4, align 4
  %cmp58 = icmp slt i32 %59, %60
  br i1 %cmp58, label %if.then.60, label %if.else.61

if.then.60:                                       ; preds = %if.else.57
  store i32 1, i32* %retval
  br label %return

if.else.61:                                       ; preds = %if.else.57
  %61 = load i32*, i32** %cost.addr, align 8
  %62 = load i32, i32* %61, align 4
  %63 = load i32, i32* %cost8x8, align 4
  %sub62 = sub nsw i32 %62, %63
  %64 = load i32, i32* %cost4x4, align 4
  %add63 = add nsw i32 %sub62, %64
  %65 = load i32*, i32** %cost.addr, align 8
  store i32 %add63, i32* %65, align 4
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.else.61, %if.then.60, %if.then.56
  %66 = load i32, i32* %retval
  ret i32 %66
}

declare i32 @SATD(i32*, i32) #1

declare i32 @SATD8X8(i32*, i32) #1

; Function Attrs: nounwind uwtable
define void @OneComponentChromaPrediction4x4(i32* %mpred, i32 %block_c_x, i32 %block_c_y, i16****** %mv, i32 %list_idx, i16 signext %ref, i32 %blocktype, i32 %uv) #0 {
entry:
  %mpred.addr = alloca i32*, align 8
  %block_c_x.addr = alloca i32, align 4
  %block_c_y.addr = alloca i32, align 4
  %mv.addr = alloca i16******, align 8
  %list_idx.addr = alloca i32, align 4
  %ref.addr = alloca i16, align 2
  %blocktype.addr = alloca i32, align 4
  %uv.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %ii = alloca i32, align 4
  %jj = alloca i32, align 4
  %ii0 = alloca i32, align 4
  %jj0 = alloca i32, align 4
  %ii1 = alloca i32, align 4
  %jj1 = alloca i32, align 4
  %if0 = alloca i32, align 4
  %if1 = alloca i32, align 4
  %jf0 = alloca i32, align 4
  %jf1 = alloca i32, align 4
  %mvb = alloca i16*, align 8
  %refimage = alloca i16**, align 8
  %f1_x = alloca i32, align 4
  %f2_x = alloca i32, align 4
  %f1_y = alloca i32, align 4
  %f2_y = alloca i32, align 4
  %f3 = alloca i32, align 4
  %f4 = alloca i32, align 4
  %list_offset = alloca i32, align 4
  %max_y_cr = alloca i32, align 4
  %list = alloca %struct.storable_picture**, align 8
  %curr_mb_field = alloca i32, align 4
  store i32* %mpred, i32** %mpred.addr, align 8
  store i32 %block_c_x, i32* %block_c_x.addr, align 4
  store i32 %block_c_y, i32* %block_c_y.addr, align 4
  store i16****** %mv, i16******* %mv.addr, align 8
  store i32 %list_idx, i32* %list_idx.addr, align 4
  store i16 %ref, i16* %ref.addr, align 2
  store i32 %blocktype, i32* %blocktype.addr, align 4
  store i32 %uv, i32* %uv.addr, align 4
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_cr_size_x = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i32 0, i32 161
  %1 = load i32, i32* %mb_cr_size_x, align 4
  %div = sdiv i32 64, %1
  store i32 %div, i32* %f1_x, align 4
  %2 = load i32, i32* %f1_x, align 4
  %sub = sub nsw i32 %2, 1
  store i32 %sub, i32* %f2_x, align 4
  %3 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_cr_size_y = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %3, i32 0, i32 162
  %4 = load i32, i32* %mb_cr_size_y, align 4
  %div1 = sdiv i32 64, %4
  store i32 %div1, i32* %f1_y, align 4
  %5 = load i32, i32* %f1_y, align 4
  %sub2 = sub nsw i32 %5, 1
  store i32 %sub2, i32* %f2_y, align 4
  %6 = load i32, i32* %f1_x, align 4
  %7 = load i32, i32* %f1_y, align 4
  %mul = mul nsw i32 %6, %7
  store i32 %mul, i32* %f3, align 4
  %8 = load i32, i32* %f3, align 4
  %shr = ashr i32 %8, 1
  store i32 %shr, i32* %f4, align 4
  %9 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %MbaffFrameFlag = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %9, i32 0, i32 90
  %10 = load i32, i32* %MbaffFrameFlag, align 4
  %tobool = icmp ne i32 %10, 0
  br i1 %tobool, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %entry
  %11 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %11, i32 0, i32 3
  %12 = load i32, i32* %current_mb_nr, align 4
  %idxprom = sext i32 %12 to i64
  %13 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %13, i32 0, i32 51
  %14 = load %struct.macroblock*, %struct.macroblock** %mb_data, align 8
  %arrayidx = getelementptr inbounds %struct.macroblock, %struct.macroblock* %14, i64 %idxprom
  %mb_field = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx, i32 0, i32 22
  %15 = load i32, i32* %mb_field, align 4
  %tobool3 = icmp ne i32 %15, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %16 = phi i1 [ false, %entry ], [ %tobool3, %land.rhs ]
  %land.ext = zext i1 %16 to i32
  store i32 %land.ext, i32* %curr_mb_field, align 4
  %17 = load i32, i32* %curr_mb_field, align 4
  %tobool4 = icmp ne i32 %17, 0
  br i1 %tobool4, label %if.then, label %if.else.10

if.then:                                          ; preds = %land.end
  %18 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr5 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %18, i32 0, i32 3
  %19 = load i32, i32* %current_mb_nr5, align 4
  %rem = srem i32 %19, 2
  %tobool6 = icmp ne i32 %rem, 0
  br i1 %tobool6, label %if.then.7, label %if.else

if.then.7:                                        ; preds = %if.then
  store i32 4, i32* %list_offset, align 4
  br label %if.end

if.else:                                          ; preds = %if.then
  store i32 2, i32* %list_offset, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.7
  %20 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %height_cr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %20, i32 0, i32 16
  %21 = load i32, i32* %height_cr, align 4
  %div8 = sdiv i32 %21, 2
  %sub9 = sub nsw i32 %div8, 1
  store i32 %sub9, i32* %max_y_cr, align 4
  br label %if.end.13

if.else.10:                                       ; preds = %land.end
  store i32 0, i32* %list_offset, align 4
  %22 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %height_cr11 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %22, i32 0, i32 16
  %23 = load i32, i32* %height_cr11, align 4
  %sub12 = sub nsw i32 %23, 1
  store i32 %sub12, i32* %max_y_cr, align 4
  br label %if.end.13

if.end.13:                                        ; preds = %if.else.10, %if.end
  %24 = load i32, i32* %list_idx.addr, align 4
  %25 = load i32, i32* %list_offset, align 4
  %add = add nsw i32 %24, %25
  %idxprom14 = sext i32 %add to i64
  %arrayidx15 = getelementptr inbounds [6 x %struct.storable_picture**], [6 x %struct.storable_picture**]* @listX, i32 0, i64 %idxprom14
  %26 = load %struct.storable_picture**, %struct.storable_picture*** %arrayidx15, align 8
  store %struct.storable_picture** %26, %struct.storable_picture*** %list, align 8
  %27 = load i32, i32* %uv.addr, align 4
  %idxprom16 = sext i32 %27 to i64
  %28 = load i16, i16* %ref.addr, align 2
  %idxprom17 = sext i16 %28 to i64
  %29 = load %struct.storable_picture**, %struct.storable_picture*** %list, align 8
  %arrayidx18 = getelementptr inbounds %struct.storable_picture*, %struct.storable_picture** %29, i64 %idxprom17
  %30 = load %struct.storable_picture*, %struct.storable_picture** %arrayidx18, align 8
  %imgUV = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %30, i32 0, i32 30
  %31 = load i16***, i16**** %imgUV, align 8
  %arrayidx19 = getelementptr inbounds i16**, i16*** %31, i64 %idxprom16
  %32 = load i16**, i16*** %arrayidx19, align 8
  store i16** %32, i16*** %refimage, align 8
  store i32 0, i32* %j, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc.198, %if.end.13
  %33 = load i32, i32* %j, align 4
  %cmp = icmp slt i32 %33, 4
  br i1 %cmp, label %for.body, label %for.end.200

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4
  br label %for.cond.20

for.cond.20:                                      ; preds = %for.inc, %for.body
  %34 = load i32, i32* %i, align 4
  %cmp21 = icmp slt i32 %34, 4
  br i1 %cmp21, label %for.body.22, label %for.end

for.body.22:                                      ; preds = %for.cond.20
  %35 = load i32, i32* %blocktype.addr, align 4
  %idxprom23 = sext i32 %35 to i64
  %36 = load i16, i16* %ref.addr, align 2
  %idxprom24 = sext i16 %36 to i64
  %37 = load i32, i32* %list_idx.addr, align 4
  %idxprom25 = sext i32 %37 to i64
  %38 = load i32, i32* %j, align 4
  %39 = load i32, i32* %block_c_y.addr, align 4
  %add26 = add nsw i32 %38, %39
  %40 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_cr_size_y27 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %40, i32 0, i32 162
  %41 = load i32, i32* %mb_cr_size_y27, align 4
  %div28 = sdiv i32 %41, 4
  %div29 = sdiv i32 %add26, %div28
  %idxprom30 = sext i32 %div29 to i64
  %42 = load i32, i32* %i, align 4
  %43 = load i32, i32* %block_c_x.addr, align 4
  %add31 = add nsw i32 %42, %43
  %44 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_cr_size_x32 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %44, i32 0, i32 161
  %45 = load i32, i32* %mb_cr_size_x32, align 4
  %div33 = sdiv i32 %45, 4
  %div34 = sdiv i32 %add31, %div33
  %idxprom35 = sext i32 %div34 to i64
  %46 = load i16******, i16******* %mv.addr, align 8
  %arrayidx36 = getelementptr inbounds i16*****, i16****** %46, i64 %idxprom35
  %47 = load i16*****, i16****** %arrayidx36, align 8
  %arrayidx37 = getelementptr inbounds i16****, i16***** %47, i64 %idxprom30
  %48 = load i16****, i16***** %arrayidx37, align 8
  %arrayidx38 = getelementptr inbounds i16***, i16**** %48, i64 %idxprom25
  %49 = load i16***, i16**** %arrayidx38, align 8
  %arrayidx39 = getelementptr inbounds i16**, i16*** %49, i64 %idxprom24
  %50 = load i16**, i16*** %arrayidx39, align 8
  %arrayidx40 = getelementptr inbounds i16*, i16** %50, i64 %idxprom23
  %51 = load i16*, i16** %arrayidx40, align 8
  store i16* %51, i16** %mvb, align 8
  %52 = load i32, i32* %i, align 4
  %53 = load i32, i32* %block_c_x.addr, align 4
  %add41 = add nsw i32 %52, %53
  %54 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %opix_c_x = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %54, i32 0, i32 39
  %55 = load i32, i32* %opix_c_x, align 4
  %add42 = add nsw i32 %add41, %55
  %56 = load i32, i32* %f1_x, align 4
  %mul43 = mul nsw i32 %add42, %56
  %57 = load i16*, i16** %mvb, align 8
  %arrayidx44 = getelementptr inbounds i16, i16* %57, i64 0
  %58 = load i16, i16* %arrayidx44, align 2
  %conv = sext i16 %58 to i32
  %add45 = add nsw i32 %mul43, %conv
  store i32 %add45, i32* %ii, align 4
  %59 = load i32, i32* %j, align 4
  %60 = load i32, i32* %block_c_y.addr, align 4
  %add46 = add nsw i32 %59, %60
  %61 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %opix_c_y = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %61, i32 0, i32 40
  %62 = load i32, i32* %opix_c_y, align 4
  %add47 = add nsw i32 %add46, %62
  %63 = load i32, i32* %f1_y, align 4
  %mul48 = mul nsw i32 %add47, %63
  %64 = load i16*, i16** %mvb, align 8
  %arrayidx49 = getelementptr inbounds i16, i16* %64, i64 1
  %65 = load i16, i16* %arrayidx49, align 2
  %conv50 = sext i16 %65 to i32
  %add51 = add nsw i32 %mul48, %conv50
  store i32 %add51, i32* %jj, align 4
  %66 = load i16, i16* %ref.addr, align 2
  %idxprom52 = sext i16 %66 to i64
  %67 = load %struct.storable_picture**, %struct.storable_picture*** %list, align 8
  %arrayidx53 = getelementptr inbounds %struct.storable_picture*, %struct.storable_picture** %67, i64 %idxprom52
  %68 = load %struct.storable_picture*, %struct.storable_picture** %arrayidx53, align 8
  %chroma_vector_adjustment = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %68, i32 0, i32 22
  %69 = load i32, i32* %chroma_vector_adjustment, align 4
  %70 = load i32, i32* %jj, align 4
  %add54 = add nsw i32 %70, %69
  store i32 %add54, i32* %jj, align 4
  %71 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %width_cr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %71, i32 0, i32 14
  %72 = load i32, i32* %width_cr, align 4
  %sub55 = sub nsw i32 %72, 1
  %73 = load i32, i32* %ii, align 4
  %74 = load i32, i32* %f1_x, align 4
  %div56 = sdiv i32 %73, %74
  %cmp57 = icmp slt i32 %sub55, %div56
  br i1 %cmp57, label %cond.true, label %cond.false

cond.true:                                        ; preds = %for.body.22
  %75 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %width_cr59 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %75, i32 0, i32 14
  %76 = load i32, i32* %width_cr59, align 4
  %sub60 = sub nsw i32 %76, 1
  br label %cond.end

cond.false:                                       ; preds = %for.body.22
  %77 = load i32, i32* %ii, align 4
  %78 = load i32, i32* %f1_x, align 4
  %div61 = sdiv i32 %77, %78
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub60, %cond.true ], [ %div61, %cond.false ]
  %cmp62 = icmp sgt i32 0, %cond
  br i1 %cmp62, label %cond.true.64, label %cond.false.65

cond.true.64:                                     ; preds = %cond.end
  br label %cond.end.78

cond.false.65:                                    ; preds = %cond.end
  %79 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %width_cr66 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %79, i32 0, i32 14
  %80 = load i32, i32* %width_cr66, align 4
  %sub67 = sub nsw i32 %80, 1
  %81 = load i32, i32* %ii, align 4
  %82 = load i32, i32* %f1_x, align 4
  %div68 = sdiv i32 %81, %82
  %cmp69 = icmp slt i32 %sub67, %div68
  br i1 %cmp69, label %cond.true.71, label %cond.false.74

cond.true.71:                                     ; preds = %cond.false.65
  %83 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %width_cr72 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %83, i32 0, i32 14
  %84 = load i32, i32* %width_cr72, align 4
  %sub73 = sub nsw i32 %84, 1
  br label %cond.end.76

cond.false.74:                                    ; preds = %cond.false.65
  %85 = load i32, i32* %ii, align 4
  %86 = load i32, i32* %f1_x, align 4
  %div75 = sdiv i32 %85, %86
  br label %cond.end.76

cond.end.76:                                      ; preds = %cond.false.74, %cond.true.71
  %cond77 = phi i32 [ %sub73, %cond.true.71 ], [ %div75, %cond.false.74 ]
  br label %cond.end.78

cond.end.78:                                      ; preds = %cond.end.76, %cond.true.64
  %cond79 = phi i32 [ 0, %cond.true.64 ], [ %cond77, %cond.end.76 ]
  store i32 %cond79, i32* %ii0, align 4
  %87 = load i32, i32* %max_y_cr, align 4
  %88 = load i32, i32* %jj, align 4
  %89 = load i32, i32* %f1_y, align 4
  %div80 = sdiv i32 %88, %89
  %cmp81 = icmp slt i32 %87, %div80
  br i1 %cmp81, label %cond.true.83, label %cond.false.84

cond.true.83:                                     ; preds = %cond.end.78
  %90 = load i32, i32* %max_y_cr, align 4
  br label %cond.end.86

cond.false.84:                                    ; preds = %cond.end.78
  %91 = load i32, i32* %jj, align 4
  %92 = load i32, i32* %f1_y, align 4
  %div85 = sdiv i32 %91, %92
  br label %cond.end.86

cond.end.86:                                      ; preds = %cond.false.84, %cond.true.83
  %cond87 = phi i32 [ %90, %cond.true.83 ], [ %div85, %cond.false.84 ]
  %cmp88 = icmp sgt i32 0, %cond87
  br i1 %cmp88, label %cond.true.90, label %cond.false.91

cond.true.90:                                     ; preds = %cond.end.86
  br label %cond.end.100

cond.false.91:                                    ; preds = %cond.end.86
  %93 = load i32, i32* %max_y_cr, align 4
  %94 = load i32, i32* %jj, align 4
  %95 = load i32, i32* %f1_y, align 4
  %div92 = sdiv i32 %94, %95
  %cmp93 = icmp slt i32 %93, %div92
  br i1 %cmp93, label %cond.true.95, label %cond.false.96

cond.true.95:                                     ; preds = %cond.false.91
  %96 = load i32, i32* %max_y_cr, align 4
  br label %cond.end.98

cond.false.96:                                    ; preds = %cond.false.91
  %97 = load i32, i32* %jj, align 4
  %98 = load i32, i32* %f1_y, align 4
  %div97 = sdiv i32 %97, %98
  br label %cond.end.98

cond.end.98:                                      ; preds = %cond.false.96, %cond.true.95
  %cond99 = phi i32 [ %96, %cond.true.95 ], [ %div97, %cond.false.96 ]
  br label %cond.end.100

cond.end.100:                                     ; preds = %cond.end.98, %cond.true.90
  %cond101 = phi i32 [ 0, %cond.true.90 ], [ %cond99, %cond.end.98 ]
  store i32 %cond101, i32* %jj0, align 4
  %99 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %width_cr102 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %99, i32 0, i32 14
  %100 = load i32, i32* %width_cr102, align 4
  %sub103 = sub nsw i32 %100, 1
  %101 = load i32, i32* %ii, align 4
  %102 = load i32, i32* %f2_x, align 4
  %add104 = add nsw i32 %101, %102
  %103 = load i32, i32* %f1_x, align 4
  %div105 = sdiv i32 %add104, %103
  %cmp106 = icmp slt i32 %sub103, %div105
  br i1 %cmp106, label %cond.true.108, label %cond.false.111

cond.true.108:                                    ; preds = %cond.end.100
  %104 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %width_cr109 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %104, i32 0, i32 14
  %105 = load i32, i32* %width_cr109, align 4
  %sub110 = sub nsw i32 %105, 1
  br label %cond.end.114

cond.false.111:                                   ; preds = %cond.end.100
  %106 = load i32, i32* %ii, align 4
  %107 = load i32, i32* %f2_x, align 4
  %add112 = add nsw i32 %106, %107
  %108 = load i32, i32* %f1_x, align 4
  %div113 = sdiv i32 %add112, %108
  br label %cond.end.114

cond.end.114:                                     ; preds = %cond.false.111, %cond.true.108
  %cond115 = phi i32 [ %sub110, %cond.true.108 ], [ %div113, %cond.false.111 ]
  %cmp116 = icmp sgt i32 0, %cond115
  br i1 %cmp116, label %cond.true.118, label %cond.false.119

cond.true.118:                                    ; preds = %cond.end.114
  br label %cond.end.134

cond.false.119:                                   ; preds = %cond.end.114
  %109 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %width_cr120 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %109, i32 0, i32 14
  %110 = load i32, i32* %width_cr120, align 4
  %sub121 = sub nsw i32 %110, 1
  %111 = load i32, i32* %ii, align 4
  %112 = load i32, i32* %f2_x, align 4
  %add122 = add nsw i32 %111, %112
  %113 = load i32, i32* %f1_x, align 4
  %div123 = sdiv i32 %add122, %113
  %cmp124 = icmp slt i32 %sub121, %div123
  br i1 %cmp124, label %cond.true.126, label %cond.false.129

cond.true.126:                                    ; preds = %cond.false.119
  %114 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %width_cr127 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %114, i32 0, i32 14
  %115 = load i32, i32* %width_cr127, align 4
  %sub128 = sub nsw i32 %115, 1
  br label %cond.end.132

cond.false.129:                                   ; preds = %cond.false.119
  %116 = load i32, i32* %ii, align 4
  %117 = load i32, i32* %f2_x, align 4
  %add130 = add nsw i32 %116, %117
  %118 = load i32, i32* %f1_x, align 4
  %div131 = sdiv i32 %add130, %118
  br label %cond.end.132

cond.end.132:                                     ; preds = %cond.false.129, %cond.true.126
  %cond133 = phi i32 [ %sub128, %cond.true.126 ], [ %div131, %cond.false.129 ]
  br label %cond.end.134

cond.end.134:                                     ; preds = %cond.end.132, %cond.true.118
  %cond135 = phi i32 [ 0, %cond.true.118 ], [ %cond133, %cond.end.132 ]
  store i32 %cond135, i32* %ii1, align 4
  %119 = load i32, i32* %max_y_cr, align 4
  %120 = load i32, i32* %jj, align 4
  %121 = load i32, i32* %f2_y, align 4
  %add136 = add nsw i32 %120, %121
  %122 = load i32, i32* %f1_y, align 4
  %div137 = sdiv i32 %add136, %122
  %cmp138 = icmp slt i32 %119, %div137
  br i1 %cmp138, label %cond.true.140, label %cond.false.141

cond.true.140:                                    ; preds = %cond.end.134
  %123 = load i32, i32* %max_y_cr, align 4
  br label %cond.end.144

cond.false.141:                                   ; preds = %cond.end.134
  %124 = load i32, i32* %jj, align 4
  %125 = load i32, i32* %f2_y, align 4
  %add142 = add nsw i32 %124, %125
  %126 = load i32, i32* %f1_y, align 4
  %div143 = sdiv i32 %add142, %126
  br label %cond.end.144

cond.end.144:                                     ; preds = %cond.false.141, %cond.true.140
  %cond145 = phi i32 [ %123, %cond.true.140 ], [ %div143, %cond.false.141 ]
  %cmp146 = icmp sgt i32 0, %cond145
  br i1 %cmp146, label %cond.true.148, label %cond.false.149

cond.true.148:                                    ; preds = %cond.end.144
  br label %cond.end.160

cond.false.149:                                   ; preds = %cond.end.144
  %127 = load i32, i32* %max_y_cr, align 4
  %128 = load i32, i32* %jj, align 4
  %129 = load i32, i32* %f2_y, align 4
  %add150 = add nsw i32 %128, %129
  %130 = load i32, i32* %f1_y, align 4
  %div151 = sdiv i32 %add150, %130
  %cmp152 = icmp slt i32 %127, %div151
  br i1 %cmp152, label %cond.true.154, label %cond.false.155

cond.true.154:                                    ; preds = %cond.false.149
  %131 = load i32, i32* %max_y_cr, align 4
  br label %cond.end.158

cond.false.155:                                   ; preds = %cond.false.149
  %132 = load i32, i32* %jj, align 4
  %133 = load i32, i32* %f2_y, align 4
  %add156 = add nsw i32 %132, %133
  %134 = load i32, i32* %f1_y, align 4
  %div157 = sdiv i32 %add156, %134
  br label %cond.end.158

cond.end.158:                                     ; preds = %cond.false.155, %cond.true.154
  %cond159 = phi i32 [ %131, %cond.true.154 ], [ %div157, %cond.false.155 ]
  br label %cond.end.160

cond.end.160:                                     ; preds = %cond.end.158, %cond.true.148
  %cond161 = phi i32 [ 0, %cond.true.148 ], [ %cond159, %cond.end.158 ]
  store i32 %cond161, i32* %jj1, align 4
  %135 = load i32, i32* %ii, align 4
  %136 = load i32, i32* %f2_x, align 4
  %and = and i32 %135, %136
  store i32 %and, i32* %if1, align 4
  %137 = load i32, i32* %f1_x, align 4
  %138 = load i32, i32* %if1, align 4
  %sub162 = sub nsw i32 %137, %138
  store i32 %sub162, i32* %if0, align 4
  %139 = load i32, i32* %jj, align 4
  %140 = load i32, i32* %f2_y, align 4
  %and163 = and i32 %139, %140
  store i32 %and163, i32* %jf1, align 4
  %141 = load i32, i32* %f1_y, align 4
  %142 = load i32, i32* %jf1, align 4
  %sub164 = sub nsw i32 %141, %142
  store i32 %sub164, i32* %jf0, align 4
  %143 = load i32, i32* %if0, align 4
  %144 = load i32, i32* %jf0, align 4
  %mul165 = mul nsw i32 %143, %144
  %145 = load i32, i32* %ii0, align 4
  %idxprom166 = sext i32 %145 to i64
  %146 = load i32, i32* %jj0, align 4
  %idxprom167 = sext i32 %146 to i64
  %147 = load i16**, i16*** %refimage, align 8
  %arrayidx168 = getelementptr inbounds i16*, i16** %147, i64 %idxprom167
  %148 = load i16*, i16** %arrayidx168, align 8
  %arrayidx169 = getelementptr inbounds i16, i16* %148, i64 %idxprom166
  %149 = load i16, i16* %arrayidx169, align 2
  %conv170 = zext i16 %149 to i32
  %mul171 = mul nsw i32 %mul165, %conv170
  %150 = load i32, i32* %if1, align 4
  %151 = load i32, i32* %jf0, align 4
  %mul172 = mul nsw i32 %150, %151
  %152 = load i32, i32* %ii1, align 4
  %idxprom173 = sext i32 %152 to i64
  %153 = load i32, i32* %jj0, align 4
  %idxprom174 = sext i32 %153 to i64
  %154 = load i16**, i16*** %refimage, align 8
  %arrayidx175 = getelementptr inbounds i16*, i16** %154, i64 %idxprom174
  %155 = load i16*, i16** %arrayidx175, align 8
  %arrayidx176 = getelementptr inbounds i16, i16* %155, i64 %idxprom173
  %156 = load i16, i16* %arrayidx176, align 2
  %conv177 = zext i16 %156 to i32
  %mul178 = mul nsw i32 %mul172, %conv177
  %add179 = add nsw i32 %mul171, %mul178
  %157 = load i32, i32* %if0, align 4
  %158 = load i32, i32* %jf1, align 4
  %mul180 = mul nsw i32 %157, %158
  %159 = load i32, i32* %ii0, align 4
  %idxprom181 = sext i32 %159 to i64
  %160 = load i32, i32* %jj1, align 4
  %idxprom182 = sext i32 %160 to i64
  %161 = load i16**, i16*** %refimage, align 8
  %arrayidx183 = getelementptr inbounds i16*, i16** %161, i64 %idxprom182
  %162 = load i16*, i16** %arrayidx183, align 8
  %arrayidx184 = getelementptr inbounds i16, i16* %162, i64 %idxprom181
  %163 = load i16, i16* %arrayidx184, align 2
  %conv185 = zext i16 %163 to i32
  %mul186 = mul nsw i32 %mul180, %conv185
  %add187 = add nsw i32 %add179, %mul186
  %164 = load i32, i32* %if1, align 4
  %165 = load i32, i32* %jf1, align 4
  %mul188 = mul nsw i32 %164, %165
  %166 = load i32, i32* %ii1, align 4
  %idxprom189 = sext i32 %166 to i64
  %167 = load i32, i32* %jj1, align 4
  %idxprom190 = sext i32 %167 to i64
  %168 = load i16**, i16*** %refimage, align 8
  %arrayidx191 = getelementptr inbounds i16*, i16** %168, i64 %idxprom190
  %169 = load i16*, i16** %arrayidx191, align 8
  %arrayidx192 = getelementptr inbounds i16, i16* %169, i64 %idxprom189
  %170 = load i16, i16* %arrayidx192, align 2
  %conv193 = zext i16 %170 to i32
  %mul194 = mul nsw i32 %mul188, %conv193
  %add195 = add nsw i32 %add187, %mul194
  %171 = load i32, i32* %f4, align 4
  %add196 = add nsw i32 %add195, %171
  %172 = load i32, i32* %f3, align 4
  %div197 = sdiv i32 %add196, %172
  %173 = load i32*, i32** %mpred.addr, align 8
  %incdec.ptr = getelementptr inbounds i32, i32* %173, i32 1
  store i32* %incdec.ptr, i32** %mpred.addr, align 8
  store i32 %div197, i32* %173, align 4
  br label %for.inc

for.inc:                                          ; preds = %cond.end.160
  %174 = load i32, i32* %i, align 4
  %inc = add nsw i32 %174, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond.20

for.end:                                          ; preds = %for.cond.20
  br label %for.inc.198

for.inc.198:                                      ; preds = %for.end
  %175 = load i32, i32* %j, align 4
  %inc199 = add nsw i32 %175, 1
  store i32 %inc199, i32* %j, align 4
  br label %for.cond

for.end.200:                                      ; preds = %for.cond
  ret void
}

; Function Attrs: nounwind uwtable
define void @IntraChromaPrediction4x4(i32 %uv, i32 %block_x, i32 %block_y) #0 {
entry:
  %uv.addr = alloca i32, align 4
  %block_x.addr = alloca i32, align 4
  %block_y.addr = alloca i32, align 4
  %mode = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i32 %uv, i32* %uv.addr, align 4
  store i32 %block_x, i32* %block_x.addr, align 4
  store i32 %block_y, i32* %block_y.addr, align 4
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i32 0, i32 3
  %1 = load i32, i32* %current_mb_nr, align 4
  %idxprom = sext i32 %1 to i64
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 51
  %3 = load %struct.macroblock*, %struct.macroblock** %mb_data, align 8
  %arrayidx = getelementptr inbounds %struct.macroblock, %struct.macroblock* %3, i64 %idxprom
  %c_ipred_mode = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx, i32 0, i32 20
  %4 = load i32, i32* %c_ipred_mode, align 4
  store i32 %4, i32* %mode, align 4
  %5 = load i32, i32* %block_y.addr, align 4
  store i32 %5, i32* %j, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc.17, %entry
  %6 = load i32, i32* %j, align 4
  %7 = load i32, i32* %block_y.addr, align 4
  %add = add nsw i32 %7, 4
  %cmp = icmp slt i32 %6, %add
  br i1 %cmp, label %for.body, label %for.end.19

for.body:                                         ; preds = %for.cond
  %8 = load i32, i32* %block_x.addr, align 4
  store i32 %8, i32* %i, align 4
  br label %for.cond.1

for.cond.1:                                       ; preds = %for.inc, %for.body
  %9 = load i32, i32* %i, align 4
  %10 = load i32, i32* %block_x.addr, align 4
  %add2 = add nsw i32 %10, 4
  %cmp3 = icmp slt i32 %9, %add2
  br i1 %cmp3, label %for.body.4, label %for.end

for.body.4:                                       ; preds = %for.cond.1
  %11 = load i32, i32* %j, align 4
  %idxprom5 = sext i32 %11 to i64
  %12 = load i32, i32* %i, align 4
  %idxprom6 = sext i32 %12 to i64
  %13 = load i32, i32* %mode, align 4
  %idxprom7 = sext i32 %13 to i64
  %14 = load i32, i32* %uv.addr, align 4
  %idxprom8 = sext i32 %14 to i64
  %15 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mprr_c = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %15, i32 0, i32 44
  %arrayidx9 = getelementptr inbounds [2 x [4 x [16 x [16 x i16]]]], [2 x [4 x [16 x [16 x i16]]]]* %mprr_c, i32 0, i64 %idxprom8
  %arrayidx10 = getelementptr inbounds [4 x [16 x [16 x i16]]], [4 x [16 x [16 x i16]]]* %arrayidx9, i32 0, i64 %idxprom7
  %arrayidx11 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %arrayidx10, i32 0, i64 %idxprom6
  %arrayidx12 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx11, i32 0, i64 %idxprom5
  %16 = load i16, i16* %arrayidx12, align 2
  %17 = load i32, i32* %j, align 4
  %idxprom13 = sext i32 %17 to i64
  %18 = load i32, i32* %i, align 4
  %idxprom14 = sext i32 %18 to i64
  %19 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mpr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %19, i32 0, i32 45
  %arrayidx15 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %mpr, i32 0, i64 %idxprom14
  %arrayidx16 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx15, i32 0, i64 %idxprom13
  store i16 %16, i16* %arrayidx16, align 2
  br label %for.inc

for.inc:                                          ; preds = %for.body.4
  %20 = load i32, i32* %i, align 4
  %inc = add nsw i32 %20, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond.1

for.end:                                          ; preds = %for.cond.1
  br label %for.inc.17

for.inc.17:                                       ; preds = %for.end
  %21 = load i32, i32* %j, align 4
  %inc18 = add nsw i32 %21, 1
  store i32 %inc18, i32* %j, align 4
  br label %for.cond

for.end.19:                                       ; preds = %for.cond
  ret void
}

; Function Attrs: nounwind uwtable
define void @ChromaResidualCoding(i32* %cr_cbp) #0 {
entry:
  %cr_cbp.addr = alloca i32*, align 8
  %uv = alloca i32, align 4
  %block8 = alloca i32, align 4
  %block_y = alloca i32, align 4
  %block_x = alloca i32, align 4
  %j = alloca i32, align 4
  %i = alloca i32, align 4
  %fw_mode = alloca i32, align 4
  %bw_mode = alloca i32, align 4
  %p_dir = alloca i16, align 2
  %refframe = alloca i16, align 2
  %bw_ref = alloca i16, align 2
  %skipped = alloca i32, align 4
  %yuv = alloca i32, align 4
  %block8x8_idx = alloca [3 x [4 x [4 x i32]]], align 16
  %residue_R = alloca i32, align 4
  %residue_G = alloca i32, align 4
  %residue_B = alloca i32, align 4
  %temp = alloca i32, align 4
  store i32* %cr_cbp, i32** %cr_cbp.addr, align 8
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i32 0, i32 3
  %1 = load i32, i32* %current_mb_nr, align 4
  %idxprom = sext i32 %1 to i64
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 51
  %3 = load %struct.macroblock*, %struct.macroblock** %mb_data, align 8
  %arrayidx = getelementptr inbounds %struct.macroblock, %struct.macroblock* %3, i64 %idxprom
  %mb_type = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx, i32 0, i32 8
  %4 = load i32, i32* %mb_type, align 4
  %cmp = icmp eq i32 %4, 0
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %entry
  %5 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %5, i32 0, i32 6
  %6 = load i32, i32* %type, align 4
  %cmp1 = icmp eq i32 %6, 0
  br i1 %cmp1, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %land.rhs
  %7 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type2 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %7, i32 0, i32 6
  %8 = load i32, i32* %type2, align 4
  %cmp3 = icmp eq i32 %8, 3
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %land.rhs
  %9 = phi i1 [ true, %land.rhs ], [ %cmp3, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %entry
  %10 = phi i1 [ false, %entry ], [ %9, %lor.end ]
  %land.ext = zext i1 %10 to i32
  store i32 %land.ext, i32* %skipped, align 4
  %11 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %yuv_format = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %11, i32 0, i32 159
  %12 = load i32, i32* %yuv_format, align 4
  %sub = sub nsw i32 %12, 1
  store i32 %sub, i32* %yuv, align 4
  %13 = bitcast [3 x [4 x [4 x i32]]]* %block8x8_idx to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* bitcast ([3 x [4 x [4 x i32]]]* @ChromaResidualCoding.block8x8_idx to i8*), i64 192, i32 16, i1 false)
  %14 = load i32*, i32** %cr_cbp.addr, align 8
  store i32 0, i32* %14, align 4
  store i32 0, i32* %uv, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc.297, %land.end
  %15 = load i32, i32* %uv, align 4
  %cmp4 = icmp slt i32 %15, 2
  br i1 %cmp4, label %for.body, label %for.end.299

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %block8, align 4
  store i32 0, i32* %block_y, align 4
  br label %for.cond.5

for.cond.5:                                       ; preds = %for.inc.18, %for.body
  %16 = load i32, i32* %block_y, align 4
  %17 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_cr_size_y = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %17, i32 0, i32 162
  %18 = load i32, i32* %mb_cr_size_y, align 4
  %cmp6 = icmp slt i32 %16, %18
  br i1 %cmp6, label %for.body.7, label %for.end.20

for.body.7:                                       ; preds = %for.cond.5
  store i32 0, i32* %block_x, align 4
  br label %for.cond.8

for.cond.8:                                       ; preds = %for.inc, %for.body.7
  %19 = load i32, i32* %block_x, align 4
  %20 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_cr_size_x = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %20, i32 0, i32 161
  %21 = load i32, i32* %mb_cr_size_x, align 4
  %cmp9 = icmp slt i32 %19, %21
  br i1 %cmp9, label %for.body.10, label %for.end

for.body.10:                                      ; preds = %for.cond.8
  %22 = load i32, i32* %block_x, align 4
  %shr = ashr i32 %22, 2
  %idxprom11 = sext i32 %shr to i64
  %23 = load i32, i32* %block_y, align 4
  %shr12 = ashr i32 %23, 2
  %idxprom13 = sext i32 %shr12 to i64
  %24 = load i32, i32* %yuv, align 4
  %idxprom14 = sext i32 %24 to i64
  %arrayidx15 = getelementptr inbounds [3 x [4 x [4 x i32]]], [3 x [4 x [4 x i32]]]* %block8x8_idx, i32 0, i64 %idxprom14
  %arrayidx16 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx15, i32 0, i64 %idxprom13
  %arrayidx17 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx16, i32 0, i64 %idxprom11
  %25 = load i32, i32* %arrayidx17, align 4
  store i32 %25, i32* %block8, align 4
  %26 = load i32, i32* %block8, align 4
  call void @SetModesAndRefframe(i32 %26, i16* %p_dir, i32* %fw_mode, i32* %bw_mode, i16* %refframe, i16* %bw_ref)
  %27 = load i32, i32* %uv, align 4
  %28 = load i32, i32* %block_x, align 4
  %29 = load i32, i32* %block_y, align 4
  %30 = load i16, i16* %p_dir, align 2
  %conv = sext i16 %30 to i32
  %31 = load i32, i32* %fw_mode, align 4
  %32 = load i32, i32* %bw_mode, align 4
  %33 = load i16, i16* %refframe, align 2
  %34 = load i16, i16* %bw_ref, align 2
  call void @ChromaPrediction4x4(i32 %27, i32 %28, i32 %29, i32 %conv, i32 %31, i32 %32, i16 signext %33, i16 signext %34)
  br label %for.inc

for.inc:                                          ; preds = %for.body.10
  %35 = load i32, i32* %block_x, align 4
  %add = add nsw i32 %35, 4
  store i32 %add, i32* %block_x, align 4
  br label %for.cond.8

for.end:                                          ; preds = %for.cond.8
  br label %for.inc.18

for.inc.18:                                       ; preds = %for.end
  %36 = load i32, i32* %block_y, align 4
  %add19 = add nsw i32 %36, 4
  store i32 %add19, i32* %block_y, align 4
  br label %for.cond.5

for.end.20:                                       ; preds = %for.cond.5
  %37 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NoResidueDirect = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %37, i32 0, i32 88
  %38 = load i32, i32* %NoResidueDirect, align 4
  %tobool = icmp ne i32 %38, 0
  br i1 %tobool, label %if.then, label %if.else.63

if.then:                                          ; preds = %for.end.20
  store i32 0, i32* %j, align 4
  br label %for.cond.21

for.cond.21:                                      ; preds = %for.inc.60, %if.then
  %39 = load i32, i32* %j, align 4
  %40 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_cr_size_y22 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %40, i32 0, i32 162
  %41 = load i32, i32* %mb_cr_size_y22, align 4
  %cmp23 = icmp slt i32 %39, %41
  br i1 %cmp23, label %for.body.25, label %for.end.62

for.body.25:                                      ; preds = %for.cond.21
  store i32 0, i32* %i, align 4
  br label %for.cond.26

for.cond.26:                                      ; preds = %for.inc.58, %for.body.25
  %42 = load i32, i32* %i, align 4
  %43 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_cr_size_x27 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %43, i32 0, i32 161
  %44 = load i32, i32* %mb_cr_size_x27, align 4
  %cmp28 = icmp slt i32 %42, %44
  br i1 %cmp28, label %for.body.30, label %for.end.59

for.body.30:                                      ; preds = %for.cond.26
  %45 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %residue_transform_flag = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %45, i32 0, i32 164
  %46 = load i32, i32* %residue_transform_flag, align 4
  %tobool31 = icmp ne i32 %46, 0
  br i1 %tobool31, label %if.else, label %if.then.32

if.then.32:                                       ; preds = %for.body.30
  %47 = load i32, i32* %j, align 4
  %idxprom33 = sext i32 %47 to i64
  %48 = load i32, i32* %i, align 4
  %idxprom34 = sext i32 %48 to i64
  %49 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mpr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %49, i32 0, i32 45
  %arrayidx35 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %mpr, i32 0, i64 %idxprom34
  %arrayidx36 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx35, i32 0, i64 %idxprom33
  %50 = load i16, i16* %arrayidx36, align 2
  %51 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_c_x = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %51, i32 0, i32 35
  %52 = load i32, i32* %pix_c_x, align 4
  %53 = load i32, i32* %i, align 4
  %add37 = add nsw i32 %52, %53
  %idxprom38 = sext i32 %add37 to i64
  %54 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_c_y = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %54, i32 0, i32 36
  %55 = load i32, i32* %pix_c_y, align 4
  %56 = load i32, i32* %j, align 4
  %add39 = add nsw i32 %55, %56
  %idxprom40 = sext i32 %add39 to i64
  %57 = load i32, i32* %uv, align 4
  %idxprom41 = sext i32 %57 to i64
  %58 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %imgUV = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %58, i32 0, i32 30
  %59 = load i16***, i16**** %imgUV, align 8
  %arrayidx42 = getelementptr inbounds i16**, i16*** %59, i64 %idxprom41
  %60 = load i16**, i16*** %arrayidx42, align 8
  %arrayidx43 = getelementptr inbounds i16*, i16** %60, i64 %idxprom40
  %61 = load i16*, i16** %arrayidx43, align 8
  %arrayidx44 = getelementptr inbounds i16, i16* %61, i64 %idxprom38
  store i16 %50, i16* %arrayidx44, align 2
  br label %if.end.57

if.else:                                          ; preds = %for.body.30
  %62 = load i32, i32* %uv, align 4
  %cmp45 = icmp eq i32 %62, 0
  br i1 %cmp45, label %if.then.47, label %if.else.52

if.then.47:                                       ; preds = %if.else
  %63 = load i32, i32* %j, align 4
  %idxprom48 = sext i32 %63 to i64
  %64 = load i32, i32* %i, align 4
  %idxprom49 = sext i32 %64 to i64
  %arrayidx50 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* @rec_resR, i32 0, i64 %idxprom49
  %arrayidx51 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx50, i32 0, i64 %idxprom48
  store i32 0, i32* %arrayidx51, align 4
  br label %if.end

if.else.52:                                       ; preds = %if.else
  %65 = load i32, i32* %j, align 4
  %idxprom53 = sext i32 %65 to i64
  %66 = load i32, i32* %i, align 4
  %idxprom54 = sext i32 %66 to i64
  %arrayidx55 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* @rec_resB, i32 0, i64 %idxprom54
  %arrayidx56 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx55, i32 0, i64 %idxprom53
  store i32 0, i32* %arrayidx56, align 4
  br label %if.end

if.end:                                           ; preds = %if.else.52, %if.then.47
  br label %if.end.57

if.end.57:                                        ; preds = %if.end, %if.then.32
  br label %for.inc.58

for.inc.58:                                       ; preds = %if.end.57
  %67 = load i32, i32* %i, align 4
  %inc = add nsw i32 %67, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond.26

for.end.59:                                       ; preds = %for.cond.26
  br label %for.inc.60

for.inc.60:                                       ; preds = %for.end.59
  %68 = load i32, i32* %j, align 4
  %inc61 = add nsw i32 %68, 1
  store i32 %inc61, i32* %j, align 4
  br label %for.cond.21

for.end.62:                                       ; preds = %for.cond.21
  br label %if.end.208

if.else.63:                                       ; preds = %for.end.20
  %69 = load i32, i32* %skipped, align 4
  %tobool64 = icmp ne i32 %69, 0
  br i1 %tobool64, label %land.lhs.true, label %if.else.87

land.lhs.true:                                    ; preds = %if.else.63
  %70 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type65 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %70, i32 0, i32 6
  %71 = load i32, i32* %type65, align 4
  %cmp66 = icmp eq i32 %71, 3
  br i1 %cmp66, label %if.then.68, label %if.else.87

if.then.68:                                       ; preds = %land.lhs.true
  store i32 0, i32* %j, align 4
  br label %for.cond.69

for.cond.69:                                      ; preds = %for.inc.84, %if.then.68
  %72 = load i32, i32* %j, align 4
  %cmp70 = icmp slt i32 %72, 8
  br i1 %cmp70, label %for.body.72, label %for.end.86

for.body.72:                                      ; preds = %for.cond.69
  store i32 0, i32* %i, align 4
  br label %for.cond.73

for.cond.73:                                      ; preds = %for.inc.81, %for.body.72
  %73 = load i32, i32* %i, align 4
  %cmp74 = icmp slt i32 %73, 8
  br i1 %cmp74, label %for.body.76, label %for.end.83

for.body.76:                                      ; preds = %for.cond.73
  %74 = load i32, i32* %j, align 4
  %idxprom77 = sext i32 %74 to i64
  %75 = load i32, i32* %i, align 4
  %idxprom78 = sext i32 %75 to i64
  %76 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %76, i32 0, i32 46
  %arrayidx79 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7, i32 0, i64 %idxprom78
  %arrayidx80 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx79, i32 0, i64 %idxprom77
  store i32 0, i32* %arrayidx80, align 4
  br label %for.inc.81

for.inc.81:                                       ; preds = %for.body.76
  %77 = load i32, i32* %i, align 4
  %inc82 = add nsw i32 %77, 1
  store i32 %inc82, i32* %i, align 4
  br label %for.cond.73

for.end.83:                                       ; preds = %for.cond.73
  br label %for.inc.84

for.inc.84:                                       ; preds = %for.end.83
  %78 = load i32, i32* %j, align 4
  %inc85 = add nsw i32 %78, 1
  store i32 %inc85, i32* %j, align 4
  br label %for.cond.69

for.end.86:                                       ; preds = %for.cond.69
  br label %if.end.207

if.else.87:                                       ; preds = %land.lhs.true, %if.else.63
  %79 = load i32, i32* %skipped, align 4
  %tobool88 = icmp ne i32 %79, 0
  br i1 %tobool88, label %if.then.89, label %if.else.140

if.then.89:                                       ; preds = %if.else.87
  store i32 0, i32* %j, align 4
  br label %for.cond.90

for.cond.90:                                      ; preds = %for.inc.137, %if.then.89
  %80 = load i32, i32* %j, align 4
  %81 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_cr_size_y91 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %81, i32 0, i32 162
  %82 = load i32, i32* %mb_cr_size_y91, align 4
  %cmp92 = icmp slt i32 %80, %82
  br i1 %cmp92, label %for.body.94, label %for.end.139

for.body.94:                                      ; preds = %for.cond.90
  store i32 0, i32* %i, align 4
  br label %for.cond.95

for.cond.95:                                      ; preds = %for.inc.134, %for.body.94
  %83 = load i32, i32* %i, align 4
  %84 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_cr_size_x96 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %84, i32 0, i32 161
  %85 = load i32, i32* %mb_cr_size_x96, align 4
  %cmp97 = icmp slt i32 %83, %85
  br i1 %cmp97, label %for.body.99, label %for.end.136

for.body.99:                                      ; preds = %for.cond.95
  %86 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %residue_transform_flag100 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %86, i32 0, i32 164
  %87 = load i32, i32* %residue_transform_flag100, align 4
  %tobool101 = icmp ne i32 %87, 0
  br i1 %tobool101, label %if.else.119, label %if.then.102

if.then.102:                                      ; preds = %for.body.99
  %88 = load i32, i32* %j, align 4
  %idxprom103 = sext i32 %88 to i64
  %89 = load i32, i32* %i, align 4
  %idxprom104 = sext i32 %89 to i64
  %90 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mpr105 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %90, i32 0, i32 45
  %arrayidx106 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %mpr105, i32 0, i64 %idxprom104
  %arrayidx107 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx106, i32 0, i64 %idxprom103
  %91 = load i16, i16* %arrayidx107, align 2
  %92 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_c_x108 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %92, i32 0, i32 35
  %93 = load i32, i32* %pix_c_x108, align 4
  %94 = load i32, i32* %i, align 4
  %add109 = add nsw i32 %93, %94
  %idxprom110 = sext i32 %add109 to i64
  %95 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_c_y111 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %95, i32 0, i32 36
  %96 = load i32, i32* %pix_c_y111, align 4
  %97 = load i32, i32* %j, align 4
  %add112 = add nsw i32 %96, %97
  %idxprom113 = sext i32 %add112 to i64
  %98 = load i32, i32* %uv, align 4
  %idxprom114 = sext i32 %98 to i64
  %99 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %imgUV115 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %99, i32 0, i32 30
  %100 = load i16***, i16**** %imgUV115, align 8
  %arrayidx116 = getelementptr inbounds i16**, i16*** %100, i64 %idxprom114
  %101 = load i16**, i16*** %arrayidx116, align 8
  %arrayidx117 = getelementptr inbounds i16*, i16** %101, i64 %idxprom113
  %102 = load i16*, i16** %arrayidx117, align 8
  %arrayidx118 = getelementptr inbounds i16, i16* %102, i64 %idxprom110
  store i16 %91, i16* %arrayidx118, align 2
  br label %if.end.133

if.else.119:                                      ; preds = %for.body.99
  %103 = load i32, i32* %uv, align 4
  %cmp120 = icmp eq i32 %103, 0
  br i1 %cmp120, label %if.then.122, label %if.else.127

if.then.122:                                      ; preds = %if.else.119
  %104 = load i32, i32* %j, align 4
  %idxprom123 = sext i32 %104 to i64
  %105 = load i32, i32* %i, align 4
  %idxprom124 = sext i32 %105 to i64
  %arrayidx125 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* @rec_resR, i32 0, i64 %idxprom124
  %arrayidx126 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx125, i32 0, i64 %idxprom123
  store i32 0, i32* %arrayidx126, align 4
  br label %if.end.132

if.else.127:                                      ; preds = %if.else.119
  %106 = load i32, i32* %j, align 4
  %idxprom128 = sext i32 %106 to i64
  %107 = load i32, i32* %i, align 4
  %idxprom129 = sext i32 %107 to i64
  %arrayidx130 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* @rec_resB, i32 0, i64 %idxprom129
  %arrayidx131 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx130, i32 0, i64 %idxprom128
  store i32 0, i32* %arrayidx131, align 4
  br label %if.end.132

if.end.132:                                       ; preds = %if.else.127, %if.then.122
  br label %if.end.133

if.end.133:                                       ; preds = %if.end.132, %if.then.102
  br label %for.inc.134

for.inc.134:                                      ; preds = %if.end.133
  %108 = load i32, i32* %i, align 4
  %inc135 = add nsw i32 %108, 1
  store i32 %inc135, i32* %i, align 4
  br label %for.cond.95

for.end.136:                                      ; preds = %for.cond.95
  br label %for.inc.137

for.inc.137:                                      ; preds = %for.end.136
  %109 = load i32, i32* %j, align 4
  %inc138 = add nsw i32 %109, 1
  store i32 %inc138, i32* %j, align 4
  br label %for.cond.90

for.end.139:                                      ; preds = %for.cond.90
  br label %if.end.206

if.else.140:                                      ; preds = %if.else.87
  store i32 0, i32* %j, align 4
  br label %for.cond.141

for.cond.141:                                     ; preds = %for.inc.203, %if.else.140
  %110 = load i32, i32* %j, align 4
  %111 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_cr_size_y142 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %111, i32 0, i32 162
  %112 = load i32, i32* %mb_cr_size_y142, align 4
  %cmp143 = icmp slt i32 %110, %112
  br i1 %cmp143, label %for.body.145, label %for.end.205

for.body.145:                                     ; preds = %for.cond.141
  store i32 0, i32* %i, align 4
  br label %for.cond.146

for.cond.146:                                     ; preds = %for.inc.200, %for.body.145
  %113 = load i32, i32* %i, align 4
  %114 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_cr_size_x147 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %114, i32 0, i32 161
  %115 = load i32, i32* %mb_cr_size_x147, align 4
  %cmp148 = icmp slt i32 %113, %115
  br i1 %cmp148, label %for.body.150, label %for.end.202

for.body.150:                                     ; preds = %for.cond.146
  %116 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %residue_transform_flag151 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %116, i32 0, i32 164
  %117 = load i32, i32* %residue_transform_flag151, align 4
  %tobool152 = icmp ne i32 %117, 0
  br i1 %tobool152, label %if.else.175, label %if.then.153

if.then.153:                                      ; preds = %for.body.150
  %118 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %opix_c_x = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %118, i32 0, i32 39
  %119 = load i32, i32* %opix_c_x, align 4
  %120 = load i32, i32* %i, align 4
  %add154 = add nsw i32 %119, %120
  %idxprom155 = sext i32 %add154 to i64
  %121 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %opix_c_y = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %121, i32 0, i32 40
  %122 = load i32, i32* %opix_c_y, align 4
  %123 = load i32, i32* %j, align 4
  %add156 = add nsw i32 %122, %123
  %idxprom157 = sext i32 %add156 to i64
  %124 = load i32, i32* %uv, align 4
  %idxprom158 = sext i32 %124 to i64
  %125 = load i16***, i16**** @imgUV_org, align 8
  %arrayidx159 = getelementptr inbounds i16**, i16*** %125, i64 %idxprom158
  %126 = load i16**, i16*** %arrayidx159, align 8
  %arrayidx160 = getelementptr inbounds i16*, i16** %126, i64 %idxprom157
  %127 = load i16*, i16** %arrayidx160, align 8
  %arrayidx161 = getelementptr inbounds i16, i16* %127, i64 %idxprom155
  %128 = load i16, i16* %arrayidx161, align 2
  %conv162 = zext i16 %128 to i32
  %129 = load i32, i32* %j, align 4
  %idxprom163 = sext i32 %129 to i64
  %130 = load i32, i32* %i, align 4
  %idxprom164 = sext i32 %130 to i64
  %131 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mpr165 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %131, i32 0, i32 45
  %arrayidx166 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %mpr165, i32 0, i64 %idxprom164
  %arrayidx167 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx166, i32 0, i64 %idxprom163
  %132 = load i16, i16* %arrayidx167, align 2
  %conv168 = zext i16 %132 to i32
  %sub169 = sub nsw i32 %conv162, %conv168
  %133 = load i32, i32* %j, align 4
  %idxprom170 = sext i32 %133 to i64
  %134 = load i32, i32* %i, align 4
  %idxprom171 = sext i32 %134 to i64
  %135 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7172 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %135, i32 0, i32 46
  %arrayidx173 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7172, i32 0, i64 %idxprom171
  %arrayidx174 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx173, i32 0, i64 %idxprom170
  store i32 %sub169, i32* %arrayidx174, align 4
  br label %if.end.199

if.else.175:                                      ; preds = %for.body.150
  %136 = load i32, i32* %uv, align 4
  %cmp176 = icmp eq i32 %136, 0
  br i1 %cmp176, label %if.then.178, label %if.else.188

if.then.178:                                      ; preds = %if.else.175
  %137 = load i32, i32* %j, align 4
  %idxprom179 = sext i32 %137 to i64
  %138 = load i32, i32* %i, align 4
  %idxprom180 = sext i32 %138 to i64
  %arrayidx181 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* @resTrans_R, i32 0, i64 %idxprom180
  %arrayidx182 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx181, i32 0, i64 %idxprom179
  %139 = load i32, i32* %arrayidx182, align 4
  %140 = load i32, i32* %j, align 4
  %idxprom183 = sext i32 %140 to i64
  %141 = load i32, i32* %i, align 4
  %idxprom184 = sext i32 %141 to i64
  %142 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7185 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %142, i32 0, i32 46
  %arrayidx186 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7185, i32 0, i64 %idxprom184
  %arrayidx187 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx186, i32 0, i64 %idxprom183
  store i32 %139, i32* %arrayidx187, align 4
  br label %if.end.198

if.else.188:                                      ; preds = %if.else.175
  %143 = load i32, i32* %j, align 4
  %idxprom189 = sext i32 %143 to i64
  %144 = load i32, i32* %i, align 4
  %idxprom190 = sext i32 %144 to i64
  %arrayidx191 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* @resTrans_B, i32 0, i64 %idxprom190
  %arrayidx192 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx191, i32 0, i64 %idxprom189
  %145 = load i32, i32* %arrayidx192, align 4
  %146 = load i32, i32* %j, align 4
  %idxprom193 = sext i32 %146 to i64
  %147 = load i32, i32* %i, align 4
  %idxprom194 = sext i32 %147 to i64
  %148 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7195 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %148, i32 0, i32 46
  %arrayidx196 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7195, i32 0, i64 %idxprom194
  %arrayidx197 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx196, i32 0, i64 %idxprom193
  store i32 %145, i32* %arrayidx197, align 4
  br label %if.end.198

if.end.198:                                       ; preds = %if.else.188, %if.then.178
  br label %if.end.199

if.end.199:                                       ; preds = %if.end.198, %if.then.153
  br label %for.inc.200

for.inc.200:                                      ; preds = %if.end.199
  %149 = load i32, i32* %i, align 4
  %inc201 = add nsw i32 %149, 1
  store i32 %inc201, i32* %i, align 4
  br label %for.cond.146

for.end.202:                                      ; preds = %for.cond.146
  br label %for.inc.203

for.inc.203:                                      ; preds = %for.end.202
  %150 = load i32, i32* %j, align 4
  %inc204 = add nsw i32 %150, 1
  store i32 %inc204, i32* %j, align 4
  br label %for.cond.141

for.end.205:                                      ; preds = %for.cond.141
  br label %if.end.206

if.end.206:                                       ; preds = %for.end.205, %for.end.139
  br label %if.end.207

if.end.207:                                       ; preds = %if.end.206, %for.end.86
  br label %if.end.208

if.end.208:                                       ; preds = %if.end.207, %for.end.62
  %151 = load i32, i32* %skipped, align 4
  %tobool209 = icmp ne i32 %151, 0
  br i1 %tobool209, label %land.lhs.true.210, label %if.else.215

land.lhs.true.210:                                ; preds = %if.end.208
  %152 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type211 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %152, i32 0, i32 6
  %153 = load i32, i32* %type211, align 4
  %cmp212 = icmp eq i32 %153, 3
  br i1 %cmp212, label %if.then.214, label %if.else.215

if.then.214:                                      ; preds = %land.lhs.true.210
  %154 = load i32, i32* %uv, align 4
  %155 = load i32*, i32** %cr_cbp.addr, align 8
  %156 = load i32, i32* %155, align 4
  %call = call i32 @dct_chroma_sp(i32 %154, i32 %156)
  %157 = load i32*, i32** %cr_cbp.addr, align 8
  store i32 %call, i32* %157, align 4
  br label %if.end.296

if.else.215:                                      ; preds = %land.lhs.true.210, %if.end.208
  %158 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NoResidueDirect216 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %158, i32 0, i32 88
  %159 = load i32, i32* %NoResidueDirect216, align 4
  %tobool217 = icmp ne i32 %159, 0
  br i1 %tobool217, label %if.end.295, label %land.lhs.true.218

land.lhs.true.218:                                ; preds = %if.else.215
  %160 = load i32, i32* %skipped, align 4
  %tobool219 = icmp ne i32 %160, 0
  br i1 %tobool219, label %if.end.295, label %if.then.220

if.then.220:                                      ; preds = %land.lhs.true.218
  %161 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type221 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %161, i32 0, i32 6
  %162 = load i32, i32* %type221, align 4
  %cmp222 = icmp ne i32 %162, 3
  br i1 %cmp222, label %if.then.247, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then.220
  %163 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr224 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %163, i32 0, i32 3
  %164 = load i32, i32* %current_mb_nr224, align 4
  %idxprom225 = sext i32 %164 to i64
  %165 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data226 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %165, i32 0, i32 51
  %166 = load %struct.macroblock*, %struct.macroblock** %mb_data226, align 8
  %arrayidx227 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %166, i64 %idxprom225
  %mb_type228 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx227, i32 0, i32 8
  %167 = load i32, i32* %mb_type228, align 4
  %cmp229 = icmp eq i32 %167, 9
  br i1 %cmp229, label %if.then.247, label %lor.lhs.false.231

lor.lhs.false.231:                                ; preds = %lor.lhs.false
  %168 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr232 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %168, i32 0, i32 3
  %169 = load i32, i32* %current_mb_nr232, align 4
  %idxprom233 = sext i32 %169 to i64
  %170 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data234 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %170, i32 0, i32 51
  %171 = load %struct.macroblock*, %struct.macroblock** %mb_data234, align 8
  %arrayidx235 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %171, i64 %idxprom233
  %mb_type236 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx235, i32 0, i32 8
  %172 = load i32, i32* %mb_type236, align 4
  %cmp237 = icmp eq i32 %172, 10
  br i1 %cmp237, label %if.then.247, label %lor.lhs.false.239

lor.lhs.false.239:                                ; preds = %lor.lhs.false.231
  %173 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr240 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %173, i32 0, i32 3
  %174 = load i32, i32* %current_mb_nr240, align 4
  %idxprom241 = sext i32 %174 to i64
  %175 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data242 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %175, i32 0, i32 51
  %176 = load %struct.macroblock*, %struct.macroblock** %mb_data242, align 8
  %arrayidx243 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %176, i64 %idxprom241
  %mb_type244 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx243, i32 0, i32 8
  %177 = load i32, i32* %mb_type244, align 4
  %cmp245 = icmp eq i32 %177, 13
  br i1 %cmp245, label %if.then.247, label %if.else.249

if.then.247:                                      ; preds = %lor.lhs.false.239, %lor.lhs.false.231, %lor.lhs.false, %if.then.220
  %178 = load i32, i32* %uv, align 4
  %179 = load i32*, i32** %cr_cbp.addr, align 8
  %180 = load i32, i32* %179, align 4
  %call248 = call i32 @dct_chroma(i32 %178, i32 %180)
  %181 = load i32*, i32** %cr_cbp.addr, align 8
  store i32 %call248, i32* %181, align 4
  br label %if.end.251

if.else.249:                                      ; preds = %lor.lhs.false.239
  %182 = load i32, i32* %uv, align 4
  %183 = load i32*, i32** %cr_cbp.addr, align 8
  %184 = load i32, i32* %183, align 4
  %call250 = call i32 @dct_chroma_sp(i32 %182, i32 %184)
  %185 = load i32*, i32** %cr_cbp.addr, align 8
  store i32 %call250, i32* %185, align 4
  br label %if.end.251

if.end.251:                                       ; preds = %if.else.249, %if.then.247
  %186 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %residue_transform_flag252 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %186, i32 0, i32 164
  %187 = load i32, i32* %residue_transform_flag252, align 4
  %tobool253 = icmp ne i32 %187, 0
  br i1 %tobool253, label %if.then.254, label %if.end.294

if.then.254:                                      ; preds = %if.end.251
  store i32 0, i32* %j, align 4
  br label %for.cond.255

for.cond.255:                                     ; preds = %for.inc.291, %if.then.254
  %188 = load i32, i32* %j, align 4
  %189 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_cr_size_y256 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %189, i32 0, i32 162
  %190 = load i32, i32* %mb_cr_size_y256, align 4
  %cmp257 = icmp slt i32 %188, %190
  br i1 %cmp257, label %for.body.259, label %for.end.293

for.body.259:                                     ; preds = %for.cond.255
  store i32 0, i32* %i, align 4
  br label %for.cond.260

for.cond.260:                                     ; preds = %for.inc.288, %for.body.259
  %191 = load i32, i32* %i, align 4
  %192 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_cr_size_x261 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %192, i32 0, i32 161
  %193 = load i32, i32* %mb_cr_size_x261, align 4
  %cmp262 = icmp slt i32 %191, %193
  br i1 %cmp262, label %for.body.264, label %for.end.290

for.body.264:                                     ; preds = %for.cond.260
  %194 = load i32, i32* %uv, align 4
  %cmp265 = icmp eq i32 %194, 0
  br i1 %cmp265, label %if.then.267, label %if.else.277

if.then.267:                                      ; preds = %for.body.264
  %195 = load i32, i32* %j, align 4
  %idxprom268 = sext i32 %195 to i64
  %196 = load i32, i32* %i, align 4
  %idxprom269 = sext i32 %196 to i64
  %197 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7270 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %197, i32 0, i32 46
  %arrayidx271 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7270, i32 0, i64 %idxprom269
  %arrayidx272 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx271, i32 0, i64 %idxprom268
  %198 = load i32, i32* %arrayidx272, align 4
  %199 = load i32, i32* %j, align 4
  %idxprom273 = sext i32 %199 to i64
  %200 = load i32, i32* %i, align 4
  %idxprom274 = sext i32 %200 to i64
  %arrayidx275 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* @rec_resR, i32 0, i64 %idxprom274
  %arrayidx276 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx275, i32 0, i64 %idxprom273
  store i32 %198, i32* %arrayidx276, align 4
  br label %if.end.287

if.else.277:                                      ; preds = %for.body.264
  %201 = load i32, i32* %j, align 4
  %idxprom278 = sext i32 %201 to i64
  %202 = load i32, i32* %i, align 4
  %idxprom279 = sext i32 %202 to i64
  %203 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %m7280 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %203, i32 0, i32 46
  %arrayidx281 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %m7280, i32 0, i64 %idxprom279
  %arrayidx282 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx281, i32 0, i64 %idxprom278
  %204 = load i32, i32* %arrayidx282, align 4
  %205 = load i32, i32* %j, align 4
  %idxprom283 = sext i32 %205 to i64
  %206 = load i32, i32* %i, align 4
  %idxprom284 = sext i32 %206 to i64
  %arrayidx285 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* @rec_resB, i32 0, i64 %idxprom284
  %arrayidx286 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx285, i32 0, i64 %idxprom283
  store i32 %204, i32* %arrayidx286, align 4
  br label %if.end.287

if.end.287:                                       ; preds = %if.else.277, %if.then.267
  br label %for.inc.288

for.inc.288:                                      ; preds = %if.end.287
  %207 = load i32, i32* %i, align 4
  %inc289 = add nsw i32 %207, 1
  store i32 %inc289, i32* %i, align 4
  br label %for.cond.260

for.end.290:                                      ; preds = %for.cond.260
  br label %for.inc.291

for.inc.291:                                      ; preds = %for.end.290
  %208 = load i32, i32* %j, align 4
  %inc292 = add nsw i32 %208, 1
  store i32 %inc292, i32* %j, align 4
  br label %for.cond.255

for.end.293:                                      ; preds = %for.cond.255
  br label %if.end.294

if.end.294:                                       ; preds = %for.end.293, %if.end.251
  br label %if.end.295

if.end.295:                                       ; preds = %if.end.294, %land.lhs.true.218, %if.else.215
  br label %if.end.296

if.end.296:                                       ; preds = %if.end.295, %if.then.214
  br label %for.inc.297

for.inc.297:                                      ; preds = %if.end.296
  %209 = load i32, i32* %uv, align 4
  %inc298 = add nsw i32 %209, 1
  store i32 %inc298, i32* %uv, align 4
  br label %for.cond

for.end.299:                                      ; preds = %for.cond
  %210 = load i32*, i32** %cr_cbp.addr, align 8
  %211 = load i32, i32* %210, align 4
  %shl = shl i32 %211, 4
  %212 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr300 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %212, i32 0, i32 3
  %213 = load i32, i32* %current_mb_nr300, align 4
  %idxprom301 = sext i32 %213 to i64
  %214 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data302 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %214, i32 0, i32 51
  %215 = load %struct.macroblock*, %struct.macroblock** %mb_data302, align 8
  %arrayidx303 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %215, i64 %idxprom301
  %cbp = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx303, i32 0, i32 12
  %216 = load i32, i32* %cbp, align 4
  %add304 = add nsw i32 %216, %shl
  store i32 %add304, i32* %cbp, align 4
  %217 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %residue_transform_flag305 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %217, i32 0, i32 164
  %218 = load i32, i32* %residue_transform_flag305, align 4
  %tobool306 = icmp ne i32 %218, 0
  br i1 %tobool306, label %if.then.307, label %if.end.491

if.then.307:                                      ; preds = %for.end.299
  store i32 0, i32* %j, align 4
  br label %for.cond.308

for.cond.308:                                     ; preds = %for.inc.488, %if.then.307
  %219 = load i32, i32* %j, align 4
  %cmp309 = icmp slt i32 %219, 16
  br i1 %cmp309, label %for.body.311, label %for.end.490

for.body.311:                                     ; preds = %for.cond.308
  store i32 0, i32* %i, align 4
  br label %for.cond.312

for.cond.312:                                     ; preds = %for.inc.485, %for.body.311
  %220 = load i32, i32* %i, align 4
  %cmp313 = icmp slt i32 %220, 16
  br i1 %cmp313, label %for.body.315, label %for.end.487

for.body.315:                                     ; preds = %for.cond.312
  %221 = load i32, i32* %j, align 4
  %idxprom316 = sext i32 %221 to i64
  %222 = load i32, i32* %i, align 4
  %idxprom317 = sext i32 %222 to i64
  %arrayidx318 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* @rec_resG, i32 0, i64 %idxprom317
  %arrayidx319 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx318, i32 0, i64 %idxprom316
  %223 = load i32, i32* %arrayidx319, align 4
  %224 = load i32, i32* %j, align 4
  %idxprom320 = sext i32 %224 to i64
  %225 = load i32, i32* %i, align 4
  %idxprom321 = sext i32 %225 to i64
  %arrayidx322 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* @rec_resB, i32 0, i64 %idxprom321
  %arrayidx323 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx322, i32 0, i64 %idxprom320
  %226 = load i32, i32* %arrayidx323, align 4
  %shr324 = ashr i32 %226, 1
  %sub325 = sub nsw i32 %223, %shr324
  store i32 %sub325, i32* %temp, align 4
  %227 = load i32, i32* %j, align 4
  %idxprom326 = sext i32 %227 to i64
  %228 = load i32, i32* %i, align 4
  %idxprom327 = sext i32 %228 to i64
  %arrayidx328 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* @rec_resB, i32 0, i64 %idxprom327
  %arrayidx329 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx328, i32 0, i64 %idxprom326
  %229 = load i32, i32* %arrayidx329, align 4
  %230 = load i32, i32* %temp, align 4
  %add330 = add nsw i32 %229, %230
  store i32 %add330, i32* %residue_G, align 4
  %231 = load i32, i32* %temp, align 4
  %232 = load i32, i32* %j, align 4
  %idxprom331 = sext i32 %232 to i64
  %233 = load i32, i32* %i, align 4
  %idxprom332 = sext i32 %233 to i64
  %arrayidx333 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* @rec_resR, i32 0, i64 %idxprom332
  %arrayidx334 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx333, i32 0, i64 %idxprom331
  %234 = load i32, i32* %arrayidx334, align 4
  %shr335 = ashr i32 %234, 1
  %sub336 = sub nsw i32 %231, %shr335
  store i32 %sub336, i32* %residue_B, align 4
  %235 = load i32, i32* %residue_B, align 4
  %236 = load i32, i32* %j, align 4
  %idxprom337 = sext i32 %236 to i64
  %237 = load i32, i32* %i, align 4
  %idxprom338 = sext i32 %237 to i64
  %arrayidx339 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* @rec_resR, i32 0, i64 %idxprom338
  %arrayidx340 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx339, i32 0, i64 %idxprom337
  %238 = load i32, i32* %arrayidx340, align 4
  %add341 = add nsw i32 %235, %238
  store i32 %add341, i32* %residue_R, align 4
  %239 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value_uv = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %239, i32 0, i32 156
  %240 = load i32, i32* %max_imgpel_value_uv, align 4
  %241 = load i32, i32* %residue_B, align 4
  %242 = load i32, i32* %j, align 4
  %idxprom342 = sext i32 %242 to i64
  %243 = load i32, i32* %i, align 4
  %idxprom343 = sext i32 %243 to i64
  %arrayidx344 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* getelementptr inbounds ([3 x [16 x [16 x i32]]], [3 x [16 x [16 x i32]]]* @mprRGB, i32 0, i64 1), i32 0, i64 %idxprom343
  %arrayidx345 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx344, i32 0, i64 %idxprom342
  %244 = load i32, i32* %arrayidx345, align 4
  %add346 = add nsw i32 %241, %244
  %cmp347 = icmp sgt i32 0, %add346
  br i1 %cmp347, label %cond.true, label %cond.false

cond.true:                                        ; preds = %for.body.315
  br label %cond.end

cond.false:                                       ; preds = %for.body.315
  %245 = load i32, i32* %residue_B, align 4
  %246 = load i32, i32* %j, align 4
  %idxprom349 = sext i32 %246 to i64
  %247 = load i32, i32* %i, align 4
  %idxprom350 = sext i32 %247 to i64
  %arrayidx351 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* getelementptr inbounds ([3 x [16 x [16 x i32]]], [3 x [16 x [16 x i32]]]* @mprRGB, i32 0, i64 1), i32 0, i64 %idxprom350
  %arrayidx352 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx351, i32 0, i64 %idxprom349
  %248 = load i32, i32* %arrayidx352, align 4
  %add353 = add nsw i32 %245, %248
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %add353, %cond.false ]
  %cmp354 = icmp slt i32 %240, %cond
  br i1 %cmp354, label %cond.true.356, label %cond.false.358

cond.true.356:                                    ; preds = %cond.end
  %249 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value_uv357 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %249, i32 0, i32 156
  %250 = load i32, i32* %max_imgpel_value_uv357, align 4
  br label %cond.end.375

cond.false.358:                                   ; preds = %cond.end
  %251 = load i32, i32* %residue_B, align 4
  %252 = load i32, i32* %j, align 4
  %idxprom359 = sext i32 %252 to i64
  %253 = load i32, i32* %i, align 4
  %idxprom360 = sext i32 %253 to i64
  %arrayidx361 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* getelementptr inbounds ([3 x [16 x [16 x i32]]], [3 x [16 x [16 x i32]]]* @mprRGB, i32 0, i64 1), i32 0, i64 %idxprom360
  %arrayidx362 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx361, i32 0, i64 %idxprom359
  %254 = load i32, i32* %arrayidx362, align 4
  %add363 = add nsw i32 %251, %254
  %cmp364 = icmp sgt i32 0, %add363
  br i1 %cmp364, label %cond.true.366, label %cond.false.367

cond.true.366:                                    ; preds = %cond.false.358
  br label %cond.end.373

cond.false.367:                                   ; preds = %cond.false.358
  %255 = load i32, i32* %residue_B, align 4
  %256 = load i32, i32* %j, align 4
  %idxprom368 = sext i32 %256 to i64
  %257 = load i32, i32* %i, align 4
  %idxprom369 = sext i32 %257 to i64
  %arrayidx370 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* getelementptr inbounds ([3 x [16 x [16 x i32]]], [3 x [16 x [16 x i32]]]* @mprRGB, i32 0, i64 1), i32 0, i64 %idxprom369
  %arrayidx371 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx370, i32 0, i64 %idxprom368
  %258 = load i32, i32* %arrayidx371, align 4
  %add372 = add nsw i32 %255, %258
  br label %cond.end.373

cond.end.373:                                     ; preds = %cond.false.367, %cond.true.366
  %cond374 = phi i32 [ 0, %cond.true.366 ], [ %add372, %cond.false.367 ]
  br label %cond.end.375

cond.end.375:                                     ; preds = %cond.end.373, %cond.true.356
  %cond376 = phi i32 [ %250, %cond.true.356 ], [ %cond374, %cond.end.373 ]
  %conv377 = trunc i32 %cond376 to i16
  %259 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %259, i32 0, i32 33
  %260 = load i32, i32* %pix_x, align 4
  %261 = load i32, i32* %i, align 4
  %add378 = add nsw i32 %260, %261
  %idxprom379 = sext i32 %add378 to i64
  %262 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %262, i32 0, i32 34
  %263 = load i32, i32* %pix_y, align 4
  %264 = load i32, i32* %j, align 4
  %add380 = add nsw i32 %263, %264
  %idxprom381 = sext i32 %add380 to i64
  %265 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %imgUV382 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %265, i32 0, i32 30
  %266 = load i16***, i16**** %imgUV382, align 8
  %arrayidx383 = getelementptr inbounds i16**, i16*** %266, i64 0
  %267 = load i16**, i16*** %arrayidx383, align 8
  %arrayidx384 = getelementptr inbounds i16*, i16** %267, i64 %idxprom381
  %268 = load i16*, i16** %arrayidx384, align 8
  %arrayidx385 = getelementptr inbounds i16, i16* %268, i64 %idxprom379
  store i16 %conv377, i16* %arrayidx385, align 2
  %269 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %269, i32 0, i32 155
  %270 = load i32, i32* %max_imgpel_value, align 4
  %271 = load i32, i32* %residue_G, align 4
  %272 = load i32, i32* %j, align 4
  %idxprom386 = sext i32 %272 to i64
  %273 = load i32, i32* %i, align 4
  %idxprom387 = sext i32 %273 to i64
  %arrayidx388 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* getelementptr inbounds ([3 x [16 x [16 x i32]]], [3 x [16 x [16 x i32]]]* @mprRGB, i32 0, i64 0), i32 0, i64 %idxprom387
  %arrayidx389 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx388, i32 0, i64 %idxprom386
  %274 = load i32, i32* %arrayidx389, align 4
  %add390 = add nsw i32 %271, %274
  %cmp391 = icmp sgt i32 0, %add390
  br i1 %cmp391, label %cond.true.393, label %cond.false.394

cond.true.393:                                    ; preds = %cond.end.375
  br label %cond.end.400

cond.false.394:                                   ; preds = %cond.end.375
  %275 = load i32, i32* %residue_G, align 4
  %276 = load i32, i32* %j, align 4
  %idxprom395 = sext i32 %276 to i64
  %277 = load i32, i32* %i, align 4
  %idxprom396 = sext i32 %277 to i64
  %arrayidx397 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* getelementptr inbounds ([3 x [16 x [16 x i32]]], [3 x [16 x [16 x i32]]]* @mprRGB, i32 0, i64 0), i32 0, i64 %idxprom396
  %arrayidx398 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx397, i32 0, i64 %idxprom395
  %278 = load i32, i32* %arrayidx398, align 4
  %add399 = add nsw i32 %275, %278
  br label %cond.end.400

cond.end.400:                                     ; preds = %cond.false.394, %cond.true.393
  %cond401 = phi i32 [ 0, %cond.true.393 ], [ %add399, %cond.false.394 ]
  %cmp402 = icmp slt i32 %270, %cond401
  br i1 %cmp402, label %cond.true.404, label %cond.false.406

cond.true.404:                                    ; preds = %cond.end.400
  %279 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value405 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %279, i32 0, i32 155
  %280 = load i32, i32* %max_imgpel_value405, align 4
  br label %cond.end.423

cond.false.406:                                   ; preds = %cond.end.400
  %281 = load i32, i32* %residue_G, align 4
  %282 = load i32, i32* %j, align 4
  %idxprom407 = sext i32 %282 to i64
  %283 = load i32, i32* %i, align 4
  %idxprom408 = sext i32 %283 to i64
  %arrayidx409 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* getelementptr inbounds ([3 x [16 x [16 x i32]]], [3 x [16 x [16 x i32]]]* @mprRGB, i32 0, i64 0), i32 0, i64 %idxprom408
  %arrayidx410 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx409, i32 0, i64 %idxprom407
  %284 = load i32, i32* %arrayidx410, align 4
  %add411 = add nsw i32 %281, %284
  %cmp412 = icmp sgt i32 0, %add411
  br i1 %cmp412, label %cond.true.414, label %cond.false.415

cond.true.414:                                    ; preds = %cond.false.406
  br label %cond.end.421

cond.false.415:                                   ; preds = %cond.false.406
  %285 = load i32, i32* %residue_G, align 4
  %286 = load i32, i32* %j, align 4
  %idxprom416 = sext i32 %286 to i64
  %287 = load i32, i32* %i, align 4
  %idxprom417 = sext i32 %287 to i64
  %arrayidx418 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* getelementptr inbounds ([3 x [16 x [16 x i32]]], [3 x [16 x [16 x i32]]]* @mprRGB, i32 0, i64 0), i32 0, i64 %idxprom417
  %arrayidx419 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx418, i32 0, i64 %idxprom416
  %288 = load i32, i32* %arrayidx419, align 4
  %add420 = add nsw i32 %285, %288
  br label %cond.end.421

cond.end.421:                                     ; preds = %cond.false.415, %cond.true.414
  %cond422 = phi i32 [ 0, %cond.true.414 ], [ %add420, %cond.false.415 ]
  br label %cond.end.423

cond.end.423:                                     ; preds = %cond.end.421, %cond.true.404
  %cond424 = phi i32 [ %280, %cond.true.404 ], [ %cond422, %cond.end.421 ]
  %conv425 = trunc i32 %cond424 to i16
  %289 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x426 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %289, i32 0, i32 33
  %290 = load i32, i32* %pix_x426, align 4
  %291 = load i32, i32* %i, align 4
  %add427 = add nsw i32 %290, %291
  %idxprom428 = sext i32 %add427 to i64
  %292 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y429 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %292, i32 0, i32 34
  %293 = load i32, i32* %pix_y429, align 4
  %294 = load i32, i32* %j, align 4
  %add430 = add nsw i32 %293, %294
  %idxprom431 = sext i32 %add430 to i64
  %295 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %imgY = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %295, i32 0, i32 25
  %296 = load i16**, i16*** %imgY, align 8
  %arrayidx432 = getelementptr inbounds i16*, i16** %296, i64 %idxprom431
  %297 = load i16*, i16** %arrayidx432, align 8
  %arrayidx433 = getelementptr inbounds i16, i16* %297, i64 %idxprom428
  store i16 %conv425, i16* %arrayidx433, align 2
  %298 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value_uv434 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %298, i32 0, i32 156
  %299 = load i32, i32* %max_imgpel_value_uv434, align 4
  %300 = load i32, i32* %residue_R, align 4
  %301 = load i32, i32* %j, align 4
  %idxprom435 = sext i32 %301 to i64
  %302 = load i32, i32* %i, align 4
  %idxprom436 = sext i32 %302 to i64
  %arrayidx437 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* getelementptr inbounds ([3 x [16 x [16 x i32]]], [3 x [16 x [16 x i32]]]* @mprRGB, i32 0, i64 2), i32 0, i64 %idxprom436
  %arrayidx438 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx437, i32 0, i64 %idxprom435
  %303 = load i32, i32* %arrayidx438, align 4
  %add439 = add nsw i32 %300, %303
  %cmp440 = icmp sgt i32 0, %add439
  br i1 %cmp440, label %cond.true.442, label %cond.false.443

cond.true.442:                                    ; preds = %cond.end.423
  br label %cond.end.449

cond.false.443:                                   ; preds = %cond.end.423
  %304 = load i32, i32* %residue_R, align 4
  %305 = load i32, i32* %j, align 4
  %idxprom444 = sext i32 %305 to i64
  %306 = load i32, i32* %i, align 4
  %idxprom445 = sext i32 %306 to i64
  %arrayidx446 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* getelementptr inbounds ([3 x [16 x [16 x i32]]], [3 x [16 x [16 x i32]]]* @mprRGB, i32 0, i64 2), i32 0, i64 %idxprom445
  %arrayidx447 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx446, i32 0, i64 %idxprom444
  %307 = load i32, i32* %arrayidx447, align 4
  %add448 = add nsw i32 %304, %307
  br label %cond.end.449

cond.end.449:                                     ; preds = %cond.false.443, %cond.true.442
  %cond450 = phi i32 [ 0, %cond.true.442 ], [ %add448, %cond.false.443 ]
  %cmp451 = icmp slt i32 %299, %cond450
  br i1 %cmp451, label %cond.true.453, label %cond.false.455

cond.true.453:                                    ; preds = %cond.end.449
  %308 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value_uv454 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %308, i32 0, i32 156
  %309 = load i32, i32* %max_imgpel_value_uv454, align 4
  br label %cond.end.472

cond.false.455:                                   ; preds = %cond.end.449
  %310 = load i32, i32* %residue_R, align 4
  %311 = load i32, i32* %j, align 4
  %idxprom456 = sext i32 %311 to i64
  %312 = load i32, i32* %i, align 4
  %idxprom457 = sext i32 %312 to i64
  %arrayidx458 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* getelementptr inbounds ([3 x [16 x [16 x i32]]], [3 x [16 x [16 x i32]]]* @mprRGB, i32 0, i64 2), i32 0, i64 %idxprom457
  %arrayidx459 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx458, i32 0, i64 %idxprom456
  %313 = load i32, i32* %arrayidx459, align 4
  %add460 = add nsw i32 %310, %313
  %cmp461 = icmp sgt i32 0, %add460
  br i1 %cmp461, label %cond.true.463, label %cond.false.464

cond.true.463:                                    ; preds = %cond.false.455
  br label %cond.end.470

cond.false.464:                                   ; preds = %cond.false.455
  %314 = load i32, i32* %residue_R, align 4
  %315 = load i32, i32* %j, align 4
  %idxprom465 = sext i32 %315 to i64
  %316 = load i32, i32* %i, align 4
  %idxprom466 = sext i32 %316 to i64
  %arrayidx467 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* getelementptr inbounds ([3 x [16 x [16 x i32]]], [3 x [16 x [16 x i32]]]* @mprRGB, i32 0, i64 2), i32 0, i64 %idxprom466
  %arrayidx468 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx467, i32 0, i64 %idxprom465
  %317 = load i32, i32* %arrayidx468, align 4
  %add469 = add nsw i32 %314, %317
  br label %cond.end.470

cond.end.470:                                     ; preds = %cond.false.464, %cond.true.463
  %cond471 = phi i32 [ 0, %cond.true.463 ], [ %add469, %cond.false.464 ]
  br label %cond.end.472

cond.end.472:                                     ; preds = %cond.end.470, %cond.true.453
  %cond473 = phi i32 [ %309, %cond.true.453 ], [ %cond471, %cond.end.470 ]
  %conv474 = trunc i32 %cond473 to i16
  %318 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x475 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %318, i32 0, i32 33
  %319 = load i32, i32* %pix_x475, align 4
  %320 = load i32, i32* %i, align 4
  %add476 = add nsw i32 %319, %320
  %idxprom477 = sext i32 %add476 to i64
  %321 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y478 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %321, i32 0, i32 34
  %322 = load i32, i32* %pix_y478, align 4
  %323 = load i32, i32* %j, align 4
  %add479 = add nsw i32 %322, %323
  %idxprom480 = sext i32 %add479 to i64
  %324 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %imgUV481 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %324, i32 0, i32 30
  %325 = load i16***, i16**** %imgUV481, align 8
  %arrayidx482 = getelementptr inbounds i16**, i16*** %325, i64 1
  %326 = load i16**, i16*** %arrayidx482, align 8
  %arrayidx483 = getelementptr inbounds i16*, i16** %326, i64 %idxprom480
  %327 = load i16*, i16** %arrayidx483, align 8
  %arrayidx484 = getelementptr inbounds i16, i16* %327, i64 %idxprom477
  store i16 %conv474, i16* %arrayidx484, align 2
  br label %for.inc.485

for.inc.485:                                      ; preds = %cond.end.472
  %328 = load i32, i32* %i, align 4
  %inc486 = add nsw i32 %328, 1
  store i32 %inc486, i32* %i, align 4
  br label %for.cond.312

for.end.487:                                      ; preds = %for.cond.312
  br label %for.inc.488

for.inc.488:                                      ; preds = %for.end.487
  %329 = load i32, i32* %j, align 4
  %inc489 = add nsw i32 %329, 1
  store i32 %inc489, i32* %j, align 4
  br label %for.cond.308

for.end.490:                                      ; preds = %for.cond.308
  br label %if.end.491

if.end.491:                                       ; preds = %for.end.490, %for.end.299
  ret void
}

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #3

declare i32 @dct_chroma_sp(i32, i32) #1

declare i32 @dct_chroma(i32, i32) #1

; Function Attrs: nounwind uwtable
define void @IntraChromaPrediction(i32* %mb_up, i32* %mb_left, i32* %mb_up_left) #0 {
entry:
  %mb_up.addr = alloca i32*, align 8
  %mb_left.addr = alloca i32*, align 8
  %mb_up_left.addr = alloca i32*, align 8
  %currMB = alloca %struct.macroblock*, align 8
  %s = alloca i32, align 4
  %s0 = alloca i32, align 4
  %s1 = alloca i32, align 4
  %s2 = alloca i32, align 4
  %s3 = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %image = alloca i16**, align 8
  %block_x = alloca i32, align 4
  %block_y = alloca i32, align 4
  %mb_nr = alloca i32, align 4
  %mb_available_up = alloca i32, align 4
  %mb_available_left = alloca [2 x i32], align 4
  %mb_available_up_left = alloca i32, align 4
  %ih = alloca i32, align 4
  %iv = alloca i32, align 4
  %ib = alloca i32, align 4
  %ic = alloca i32, align 4
  %iaa = alloca i32, align 4
  %uv = alloca i32, align 4
  %hline = alloca [16 x i32], align 16
  %vline = alloca [16 x i32], align 16
  %mode = alloca i32, align 4
  %best_mode = alloca i32, align 4
  %cost = alloca i32, align 4
  %min_cost = alloca i32, align 4
  %diff = alloca [16 x i32], align 16
  %up = alloca %struct.pix_pos, align 4
  %left = alloca [17 x %struct.pix_pos], align 16
  %cr_MB_x = alloca i32, align 4
  %cr_MB_y = alloca i32, align 4
  %blk_x = alloca i32, align 4
  %blk_y = alloca i32, align 4
  %b8 = alloca i32, align 4
  %b4 = alloca i32, align 4
  %yuv = alloca i32, align 4
  %block_pos = alloca [3 x [4 x [4 x i32]]], align 16
  store i32* %mb_up, i32** %mb_up.addr, align 8
  store i32* %mb_left, i32** %mb_left.addr, align 8
  store i32* %mb_up_left, i32** %mb_up_left.addr, align 8
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i32 0, i32 3
  %1 = load i32, i32* %current_mb_nr, align 4
  %idxprom = sext i32 %1 to i64
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 51
  %3 = load %struct.macroblock*, %struct.macroblock** %mb_data, align 8
  %arrayidx = getelementptr inbounds %struct.macroblock, %struct.macroblock* %3, i64 %idxprom
  store %struct.macroblock* %arrayidx, %struct.macroblock** %currMB, align 8
  %4 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr1 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %4, i32 0, i32 3
  %5 = load i32, i32* %current_mb_nr1, align 4
  store i32 %5, i32* %mb_nr, align 4
  store i32 0, i32* %best_mode, align 4
  %6 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_cr_size_x = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %6, i32 0, i32 161
  %7 = load i32, i32* %mb_cr_size_x, align 4
  store i32 %7, i32* %cr_MB_x, align 4
  %8 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_cr_size_y = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %8, i32 0, i32 162
  %9 = load i32, i32* %mb_cr_size_y, align 4
  store i32 %9, i32* %cr_MB_y, align 4
  %10 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %yuv_format = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %10, i32 0, i32 159
  %11 = load i32, i32* %yuv_format, align 4
  %sub = sub nsw i32 %11, 1
  store i32 %sub, i32* %yuv, align 4
  %12 = bitcast [3 x [4 x [4 x i32]]]* %block_pos to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* bitcast ([3 x [4 x [4 x i32]]]* @IntraChromaPrediction.block_pos to i8*), i64 192, i32 16, i1 false)
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %13 = load i32, i32* %i, align 4
  %14 = load i32, i32* %cr_MB_y, align 4
  %add = add nsw i32 %14, 1
  %cmp = icmp slt i32 %13, %add
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %15 = load i32, i32* %mb_nr, align 4
  %16 = load i32, i32* %i, align 4
  %sub2 = sub nsw i32 %16, 1
  %17 = load i32, i32* %i, align 4
  %idxprom3 = sext i32 %17 to i64
  %arrayidx4 = getelementptr inbounds [17 x %struct.pix_pos], [17 x %struct.pix_pos]* %left, i32 0, i64 %idxprom3
  call void @getNeighbour(i32 %15, i32 -1, i32 %sub2, i32 0, %struct.pix_pos* %arrayidx4)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %18 = load i32, i32* %i, align 4
  %inc = add nsw i32 %18, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %19 = load i32, i32* %mb_nr, align 4
  call void @getNeighbour(i32 %19, i32 0, i32 -1, i32 0, %struct.pix_pos* %up)
  %available = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %up, i32 0, i32 0
  %20 = load i32, i32* %available, align 4
  store i32 %20, i32* %mb_available_up, align 4
  %arrayidx5 = getelementptr inbounds [17 x %struct.pix_pos], [17 x %struct.pix_pos]* %left, i32 0, i64 0
  %available6 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %arrayidx5, i32 0, i32 0
  %21 = load i32, i32* %available6, align 4
  store i32 %21, i32* %mb_available_up_left, align 4
  %arrayidx7 = getelementptr inbounds [17 x %struct.pix_pos], [17 x %struct.pix_pos]* %left, i32 0, i64 1
  %available8 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %arrayidx7, i32 0, i32 0
  %22 = load i32, i32* %available8, align 4
  %arrayidx9 = getelementptr inbounds [2 x i32], [2 x i32]* %mb_available_left, i32 0, i64 1
  store i32 %22, i32* %arrayidx9, align 4
  %arrayidx10 = getelementptr inbounds [2 x i32], [2 x i32]* %mb_available_left, i32 0, i64 0
  store i32 %22, i32* %arrayidx10, align 4
  %23 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %UseConstrainedIntraPred = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %23, i32 0, i32 24
  %24 = load i32, i32* %UseConstrainedIntraPred, align 4
  %tobool = icmp ne i32 %24, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %for.end
  %available11 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %up, i32 0, i32 0
  %25 = load i32, i32* %available11, align 4
  %tobool12 = icmp ne i32 %25, 0
  br i1 %tobool12, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then
  %mb_addr = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %up, i32 0, i32 1
  %26 = load i32, i32* %mb_addr, align 4
  %idxprom13 = sext i32 %26 to i64
  %27 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %intra_block = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %27, i32 0, i32 54
  %28 = load i32*, i32** %intra_block, align 8
  %arrayidx14 = getelementptr inbounds i32, i32* %28, i64 %idxprom13
  %29 = load i32, i32* %arrayidx14, align 4
  br label %cond.end

cond.false:                                       ; preds = %if.then
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %29, %cond.true ], [ 0, %cond.false ]
  store i32 %cond, i32* %mb_available_up, align 4
  store i32 0, i32* %i, align 4
  %arrayidx15 = getelementptr inbounds [2 x i32], [2 x i32]* %mb_available_left, i32 0, i64 0
  store i32 1, i32* %arrayidx15, align 4
  br label %for.cond.16

for.cond.16:                                      ; preds = %for.inc.36, %cond.end
  %30 = load i32, i32* %i, align 4
  %31 = load i32, i32* %cr_MB_y, align 4
  %div = sdiv i32 %31, 2
  %cmp17 = icmp slt i32 %30, %div
  br i1 %cmp17, label %for.body.18, label %for.end.38

for.body.18:                                      ; preds = %for.cond.16
  %32 = load i32, i32* %i, align 4
  %add19 = add nsw i32 %32, 1
  %idxprom20 = sext i32 %add19 to i64
  %arrayidx21 = getelementptr inbounds [17 x %struct.pix_pos], [17 x %struct.pix_pos]* %left, i32 0, i64 %idxprom20
  %available22 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %arrayidx21, i32 0, i32 0
  %33 = load i32, i32* %available22, align 4
  %tobool23 = icmp ne i32 %33, 0
  br i1 %tobool23, label %cond.true.24, label %cond.false.32

cond.true.24:                                     ; preds = %for.body.18
  %34 = load i32, i32* %i, align 4
  %add25 = add nsw i32 %34, 1
  %idxprom26 = sext i32 %add25 to i64
  %arrayidx27 = getelementptr inbounds [17 x %struct.pix_pos], [17 x %struct.pix_pos]* %left, i32 0, i64 %idxprom26
  %mb_addr28 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %arrayidx27, i32 0, i32 1
  %35 = load i32, i32* %mb_addr28, align 4
  %idxprom29 = sext i32 %35 to i64
  %36 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %intra_block30 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %36, i32 0, i32 54
  %37 = load i32*, i32** %intra_block30, align 8
  %arrayidx31 = getelementptr inbounds i32, i32* %37, i64 %idxprom29
  %38 = load i32, i32* %arrayidx31, align 4
  br label %cond.end.33

cond.false.32:                                    ; preds = %for.body.18
  br label %cond.end.33

cond.end.33:                                      ; preds = %cond.false.32, %cond.true.24
  %cond34 = phi i32 [ %38, %cond.true.24 ], [ 0, %cond.false.32 ]
  %arrayidx35 = getelementptr inbounds [2 x i32], [2 x i32]* %mb_available_left, i32 0, i64 0
  %39 = load i32, i32* %arrayidx35, align 4
  %and = and i32 %39, %cond34
  store i32 %and, i32* %arrayidx35, align 4
  br label %for.inc.36

for.inc.36:                                       ; preds = %cond.end.33
  %40 = load i32, i32* %i, align 4
  %inc37 = add nsw i32 %40, 1
  store i32 %inc37, i32* %i, align 4
  br label %for.cond.16

for.end.38:                                       ; preds = %for.cond.16
  %41 = load i32, i32* %cr_MB_y, align 4
  %div39 = sdiv i32 %41, 2
  store i32 %div39, i32* %i, align 4
  %arrayidx40 = getelementptr inbounds [2 x i32], [2 x i32]* %mb_available_left, i32 0, i64 1
  store i32 1, i32* %arrayidx40, align 4
  br label %for.cond.41

for.cond.41:                                      ; preds = %for.inc.62, %for.end.38
  %42 = load i32, i32* %i, align 4
  %43 = load i32, i32* %cr_MB_y, align 4
  %cmp42 = icmp slt i32 %42, %43
  br i1 %cmp42, label %for.body.43, label %for.end.64

for.body.43:                                      ; preds = %for.cond.41
  %44 = load i32, i32* %i, align 4
  %add44 = add nsw i32 %44, 1
  %idxprom45 = sext i32 %add44 to i64
  %arrayidx46 = getelementptr inbounds [17 x %struct.pix_pos], [17 x %struct.pix_pos]* %left, i32 0, i64 %idxprom45
  %available47 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %arrayidx46, i32 0, i32 0
  %45 = load i32, i32* %available47, align 4
  %tobool48 = icmp ne i32 %45, 0
  br i1 %tobool48, label %cond.true.49, label %cond.false.57

cond.true.49:                                     ; preds = %for.body.43
  %46 = load i32, i32* %i, align 4
  %add50 = add nsw i32 %46, 1
  %idxprom51 = sext i32 %add50 to i64
  %arrayidx52 = getelementptr inbounds [17 x %struct.pix_pos], [17 x %struct.pix_pos]* %left, i32 0, i64 %idxprom51
  %mb_addr53 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %arrayidx52, i32 0, i32 1
  %47 = load i32, i32* %mb_addr53, align 4
  %idxprom54 = sext i32 %47 to i64
  %48 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %intra_block55 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %48, i32 0, i32 54
  %49 = load i32*, i32** %intra_block55, align 8
  %arrayidx56 = getelementptr inbounds i32, i32* %49, i64 %idxprom54
  %50 = load i32, i32* %arrayidx56, align 4
  br label %cond.end.58

cond.false.57:                                    ; preds = %for.body.43
  br label %cond.end.58

cond.end.58:                                      ; preds = %cond.false.57, %cond.true.49
  %cond59 = phi i32 [ %50, %cond.true.49 ], [ 0, %cond.false.57 ]
  %arrayidx60 = getelementptr inbounds [2 x i32], [2 x i32]* %mb_available_left, i32 0, i64 1
  %51 = load i32, i32* %arrayidx60, align 4
  %and61 = and i32 %51, %cond59
  store i32 %and61, i32* %arrayidx60, align 4
  br label %for.inc.62

for.inc.62:                                       ; preds = %cond.end.58
  %52 = load i32, i32* %i, align 4
  %inc63 = add nsw i32 %52, 1
  store i32 %inc63, i32* %i, align 4
  br label %for.cond.41

for.end.64:                                       ; preds = %for.cond.41
  %arrayidx65 = getelementptr inbounds [17 x %struct.pix_pos], [17 x %struct.pix_pos]* %left, i32 0, i64 0
  %available66 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %arrayidx65, i32 0, i32 0
  %53 = load i32, i32* %available66, align 4
  %tobool67 = icmp ne i32 %53, 0
  br i1 %tobool67, label %cond.true.68, label %cond.false.74

cond.true.68:                                     ; preds = %for.end.64
  %arrayidx69 = getelementptr inbounds [17 x %struct.pix_pos], [17 x %struct.pix_pos]* %left, i32 0, i64 0
  %mb_addr70 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %arrayidx69, i32 0, i32 1
  %54 = load i32, i32* %mb_addr70, align 4
  %idxprom71 = sext i32 %54 to i64
  %55 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %intra_block72 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %55, i32 0, i32 54
  %56 = load i32*, i32** %intra_block72, align 8
  %arrayidx73 = getelementptr inbounds i32, i32* %56, i64 %idxprom71
  %57 = load i32, i32* %arrayidx73, align 4
  br label %cond.end.75

cond.false.74:                                    ; preds = %for.end.64
  br label %cond.end.75

cond.end.75:                                      ; preds = %cond.false.74, %cond.true.68
  %cond76 = phi i32 [ %57, %cond.true.68 ], [ 0, %cond.false.74 ]
  store i32 %cond76, i32* %mb_available_up_left, align 4
  br label %if.end

if.end:                                           ; preds = %cond.end.75, %for.end
  %58 = load i32*, i32** %mb_up.addr, align 8
  %tobool77 = icmp ne i32* %58, null
  br i1 %tobool77, label %if.then.78, label %if.end.79

if.then.78:                                       ; preds = %if.end
  %59 = load i32, i32* %mb_available_up, align 4
  %60 = load i32*, i32** %mb_up.addr, align 8
  store i32 %59, i32* %60, align 4
  br label %if.end.79

if.end.79:                                        ; preds = %if.then.78, %if.end
  %61 = load i32*, i32** %mb_left.addr, align 8
  %tobool80 = icmp ne i32* %61, null
  br i1 %tobool80, label %if.then.81, label %if.end.86

if.then.81:                                       ; preds = %if.end.79
  %arrayidx82 = getelementptr inbounds [2 x i32], [2 x i32]* %mb_available_left, i32 0, i64 0
  %62 = load i32, i32* %arrayidx82, align 4
  %tobool83 = icmp ne i32 %62, 0
  br i1 %tobool83, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.then.81
  %arrayidx84 = getelementptr inbounds [2 x i32], [2 x i32]* %mb_available_left, i32 0, i64 1
  %63 = load i32, i32* %arrayidx84, align 4
  %tobool85 = icmp ne i32 %63, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.then.81
  %64 = phi i1 [ false, %if.then.81 ], [ %tobool85, %land.rhs ]
  %land.ext = zext i1 %64 to i32
  %65 = load i32*, i32** %mb_left.addr, align 8
  store i32 %land.ext, i32* %65, align 4
  br label %if.end.86

if.end.86:                                        ; preds = %land.end, %if.end.79
  %66 = load i32*, i32** %mb_up_left.addr, align 8
  %tobool87 = icmp ne i32* %66, null
  br i1 %tobool87, label %if.then.88, label %if.end.89

if.then.88:                                       ; preds = %if.end.86
  %67 = load i32, i32* %mb_available_up_left, align 4
  %68 = load i32*, i32** %mb_up_left.addr, align 8
  store i32 %67, i32* %68, align 4
  br label %if.end.89

if.end.89:                                        ; preds = %if.then.88, %if.end.86
  store i32 0, i32* %uv, align 4
  br label %for.cond.90

for.cond.90:                                      ; preds = %for.inc.699, %if.end.89
  %69 = load i32, i32* %uv, align 4
  %cmp91 = icmp slt i32 %69, 2
  br i1 %cmp91, label %for.body.92, label %for.end.701

for.body.92:                                      ; preds = %for.cond.90
  %70 = load i32, i32* %uv, align 4
  %idxprom93 = sext i32 %70 to i64
  %71 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %imgUV = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %71, i32 0, i32 30
  %72 = load i16***, i16**** %imgUV, align 8
  %arrayidx94 = getelementptr inbounds i16**, i16*** %72, i64 %idxprom93
  %73 = load i16**, i16*** %arrayidx94, align 8
  store i16** %73, i16*** %image, align 8
  store i32 0, i32* %b8, align 4
  br label %for.cond.95

for.cond.95:                                      ; preds = %for.inc.393, %for.body.92
  %74 = load i32, i32* %b8, align 4
  %75 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %num_blk8x8_uv = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %75, i32 0, i32 157
  %76 = load i32, i32* %num_blk8x8_uv, align 4
  %div96 = sdiv i32 %76, 2
  %cmp97 = icmp slt i32 %74, %div96
  br i1 %cmp97, label %for.body.98, label %for.end.395

for.body.98:                                      ; preds = %for.cond.95
  store i32 0, i32* %b4, align 4
  br label %for.cond.99

for.cond.99:                                      ; preds = %for.inc.390, %for.body.98
  %77 = load i32, i32* %b4, align 4
  %cmp100 = icmp slt i32 %77, 4
  br i1 %cmp100, label %for.body.101, label %for.end.392

for.body.101:                                     ; preds = %for.cond.99
  %78 = load i32, i32* %b4, align 4
  %idxprom102 = sext i32 %78 to i64
  %79 = load i32, i32* %b8, align 4
  %idxprom103 = sext i32 %79 to i64
  %80 = load i32, i32* %yuv, align 4
  %idxprom104 = sext i32 %80 to i64
  %arrayidx105 = getelementptr inbounds [3 x [8 x [4 x i8]]], [3 x [8 x [4 x i8]]]* @subblk_offset_y, i32 0, i64 %idxprom104
  %arrayidx106 = getelementptr inbounds [8 x [4 x i8]], [8 x [4 x i8]]* %arrayidx105, i32 0, i64 %idxprom103
  %arrayidx107 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx106, i32 0, i64 %idxprom102
  %81 = load i8, i8* %arrayidx107, align 1
  %conv = zext i8 %81 to i32
  store i32 %conv, i32* %block_y, align 4
  %82 = load i32, i32* %b4, align 4
  %idxprom108 = sext i32 %82 to i64
  %83 = load i32, i32* %b8, align 4
  %idxprom109 = sext i32 %83 to i64
  %84 = load i32, i32* %yuv, align 4
  %idxprom110 = sext i32 %84 to i64
  %arrayidx111 = getelementptr inbounds [3 x [8 x [4 x i8]]], [3 x [8 x [4 x i8]]]* @subblk_offset_x, i32 0, i64 %idxprom110
  %arrayidx112 = getelementptr inbounds [8 x [4 x i8]], [8 x [4 x i8]]* %arrayidx111, i32 0, i64 %idxprom109
  %arrayidx113 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx112, i32 0, i64 %idxprom108
  %85 = load i8, i8* %arrayidx113, align 1
  %conv114 = zext i8 %85 to i32
  store i32 %conv114, i32* %block_x, align 4
  %86 = load i32, i32* %block_x, align 4
  store i32 %86, i32* %blk_x, align 4
  %87 = load i32, i32* %block_y, align 4
  %add115 = add nsw i32 %87, 1
  store i32 %add115, i32* %blk_y, align 4
  %88 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %dc_pred_value = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %88, i32 0, i32 154
  %89 = load i32, i32* %dc_pred_value, align 4
  store i32 %89, i32* %s, align 4
  store i32 0, i32* %s3, align 4
  store i32 0, i32* %s2, align 4
  store i32 0, i32* %s1, align 4
  store i32 0, i32* %s0, align 4
  %90 = load i32, i32* %b4, align 4
  %idxprom116 = sext i32 %90 to i64
  %91 = load i32, i32* %b8, align 4
  %idxprom117 = sext i32 %91 to i64
  %92 = load i32, i32* %yuv, align 4
  %idxprom118 = sext i32 %92 to i64
  %arrayidx119 = getelementptr inbounds [3 x [4 x [4 x i32]]], [3 x [4 x [4 x i32]]]* %block_pos, i32 0, i64 %idxprom118
  %arrayidx120 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx119, i32 0, i64 %idxprom117
  %arrayidx121 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx120, i32 0, i64 %idxprom116
  %93 = load i32, i32* %arrayidx121, align 4
  switch i32 %93, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb.183
    i32 2, label %sw.bb.241
    i32 3, label %sw.bb.299
  ]

sw.bb:                                            ; preds = %for.body.101
  %94 = load i32, i32* %mb_available_up, align 4
  %tobool122 = icmp ne i32 %94, 0
  br i1 %tobool122, label %if.then.123, label %if.end.139

if.then.123:                                      ; preds = %sw.bb
  %95 = load i32, i32* %blk_x, align 4
  store i32 %95, i32* %i, align 4
  br label %for.cond.124

for.cond.124:                                     ; preds = %for.inc.136, %if.then.123
  %96 = load i32, i32* %i, align 4
  %97 = load i32, i32* %blk_x, align 4
  %add125 = add nsw i32 %97, 4
  %cmp126 = icmp slt i32 %96, %add125
  br i1 %cmp126, label %for.body.128, label %for.end.138

for.body.128:                                     ; preds = %for.cond.124
  %pos_x = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %up, i32 0, i32 4
  %98 = load i32, i32* %pos_x, align 4
  %99 = load i32, i32* %i, align 4
  %add129 = add nsw i32 %98, %99
  %idxprom130 = sext i32 %add129 to i64
  %pos_y = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %up, i32 0, i32 5
  %100 = load i32, i32* %pos_y, align 4
  %idxprom131 = sext i32 %100 to i64
  %101 = load i16**, i16*** %image, align 8
  %arrayidx132 = getelementptr inbounds i16*, i16** %101, i64 %idxprom131
  %102 = load i16*, i16** %arrayidx132, align 8
  %arrayidx133 = getelementptr inbounds i16, i16* %102, i64 %idxprom130
  %103 = load i16, i16* %arrayidx133, align 2
  %conv134 = zext i16 %103 to i32
  %104 = load i32, i32* %s0, align 4
  %add135 = add nsw i32 %104, %conv134
  store i32 %add135, i32* %s0, align 4
  br label %for.inc.136

for.inc.136:                                      ; preds = %for.body.128
  %105 = load i32, i32* %i, align 4
  %inc137 = add nsw i32 %105, 1
  store i32 %inc137, i32* %i, align 4
  br label %for.cond.124

for.end.138:                                      ; preds = %for.cond.124
  br label %if.end.139

if.end.139:                                       ; preds = %for.end.138, %sw.bb
  %arrayidx140 = getelementptr inbounds [2 x i32], [2 x i32]* %mb_available_left, i32 0, i64 0
  %106 = load i32, i32* %arrayidx140, align 4
  %tobool141 = icmp ne i32 %106, 0
  br i1 %tobool141, label %if.then.142, label %if.end.163

if.then.142:                                      ; preds = %if.end.139
  %107 = load i32, i32* %blk_y, align 4
  store i32 %107, i32* %i, align 4
  br label %for.cond.143

for.cond.143:                                     ; preds = %for.inc.160, %if.then.142
  %108 = load i32, i32* %i, align 4
  %109 = load i32, i32* %blk_y, align 4
  %add144 = add nsw i32 %109, 4
  %cmp145 = icmp slt i32 %108, %add144
  br i1 %cmp145, label %for.body.147, label %for.end.162

for.body.147:                                     ; preds = %for.cond.143
  %110 = load i32, i32* %i, align 4
  %idxprom148 = sext i32 %110 to i64
  %arrayidx149 = getelementptr inbounds [17 x %struct.pix_pos], [17 x %struct.pix_pos]* %left, i32 0, i64 %idxprom148
  %pos_x150 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %arrayidx149, i32 0, i32 4
  %111 = load i32, i32* %pos_x150, align 4
  %idxprom151 = sext i32 %111 to i64
  %112 = load i32, i32* %i, align 4
  %idxprom152 = sext i32 %112 to i64
  %arrayidx153 = getelementptr inbounds [17 x %struct.pix_pos], [17 x %struct.pix_pos]* %left, i32 0, i64 %idxprom152
  %pos_y154 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %arrayidx153, i32 0, i32 5
  %113 = load i32, i32* %pos_y154, align 4
  %idxprom155 = sext i32 %113 to i64
  %114 = load i16**, i16*** %image, align 8
  %arrayidx156 = getelementptr inbounds i16*, i16** %114, i64 %idxprom155
  %115 = load i16*, i16** %arrayidx156, align 8
  %arrayidx157 = getelementptr inbounds i16, i16* %115, i64 %idxprom151
  %116 = load i16, i16* %arrayidx157, align 2
  %conv158 = zext i16 %116 to i32
  %117 = load i32, i32* %s2, align 4
  %add159 = add nsw i32 %117, %conv158
  store i32 %add159, i32* %s2, align 4
  br label %for.inc.160

for.inc.160:                                      ; preds = %for.body.147
  %118 = load i32, i32* %i, align 4
  %inc161 = add nsw i32 %118, 1
  store i32 %inc161, i32* %i, align 4
  br label %for.cond.143

for.end.162:                                      ; preds = %for.cond.143
  br label %if.end.163

if.end.163:                                       ; preds = %for.end.162, %if.end.139
  %119 = load i32, i32* %mb_available_up, align 4
  %tobool164 = icmp ne i32 %119, 0
  br i1 %tobool164, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %if.end.163
  %arrayidx165 = getelementptr inbounds [2 x i32], [2 x i32]* %mb_available_left, i32 0, i64 0
  %120 = load i32, i32* %arrayidx165, align 4
  %tobool166 = icmp ne i32 %120, 0
  br i1 %tobool166, label %if.then.167, label %if.else

if.then.167:                                      ; preds = %land.lhs.true
  %121 = load i32, i32* %s0, align 4
  %122 = load i32, i32* %s2, align 4
  %add168 = add nsw i32 %121, %122
  %add169 = add nsw i32 %add168, 4
  %shr = ashr i32 %add169, 3
  store i32 %shr, i32* %s, align 4
  br label %if.end.182

if.else:                                          ; preds = %land.lhs.true, %if.end.163
  %123 = load i32, i32* %mb_available_up, align 4
  %tobool170 = icmp ne i32 %123, 0
  br i1 %tobool170, label %if.then.171, label %if.else.174

if.then.171:                                      ; preds = %if.else
  %124 = load i32, i32* %s0, align 4
  %add172 = add nsw i32 %124, 2
  %shr173 = ashr i32 %add172, 2
  store i32 %shr173, i32* %s, align 4
  br label %if.end.181

if.else.174:                                      ; preds = %if.else
  %arrayidx175 = getelementptr inbounds [2 x i32], [2 x i32]* %mb_available_left, i32 0, i64 0
  %125 = load i32, i32* %arrayidx175, align 4
  %tobool176 = icmp ne i32 %125, 0
  br i1 %tobool176, label %if.then.177, label %if.end.180

if.then.177:                                      ; preds = %if.else.174
  %126 = load i32, i32* %s2, align 4
  %add178 = add nsw i32 %126, 2
  %shr179 = ashr i32 %add178, 2
  store i32 %shr179, i32* %s, align 4
  br label %if.end.180

if.end.180:                                       ; preds = %if.then.177, %if.else.174
  br label %if.end.181

if.end.181:                                       ; preds = %if.end.180, %if.then.171
  br label %if.end.182

if.end.182:                                       ; preds = %if.end.181, %if.then.167
  br label %sw.epilog

sw.bb.183:                                        ; preds = %for.body.101
  %127 = load i32, i32* %mb_available_up, align 4
  %tobool184 = icmp ne i32 %127, 0
  br i1 %tobool184, label %if.then.185, label %if.else.203

if.then.185:                                      ; preds = %sw.bb.183
  %128 = load i32, i32* %blk_x, align 4
  store i32 %128, i32* %i, align 4
  br label %for.cond.186

for.cond.186:                                     ; preds = %for.inc.200, %if.then.185
  %129 = load i32, i32* %i, align 4
  %130 = load i32, i32* %blk_x, align 4
  %add187 = add nsw i32 %130, 4
  %cmp188 = icmp slt i32 %129, %add187
  br i1 %cmp188, label %for.body.190, label %for.end.202

for.body.190:                                     ; preds = %for.cond.186
  %pos_x191 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %up, i32 0, i32 4
  %131 = load i32, i32* %pos_x191, align 4
  %132 = load i32, i32* %i, align 4
  %add192 = add nsw i32 %131, %132
  %idxprom193 = sext i32 %add192 to i64
  %pos_y194 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %up, i32 0, i32 5
  %133 = load i32, i32* %pos_y194, align 4
  %idxprom195 = sext i32 %133 to i64
  %134 = load i16**, i16*** %image, align 8
  %arrayidx196 = getelementptr inbounds i16*, i16** %134, i64 %idxprom195
  %135 = load i16*, i16** %arrayidx196, align 8
  %arrayidx197 = getelementptr inbounds i16, i16* %135, i64 %idxprom193
  %136 = load i16, i16* %arrayidx197, align 2
  %conv198 = zext i16 %136 to i32
  %137 = load i32, i32* %s1, align 4
  %add199 = add nsw i32 %137, %conv198
  store i32 %add199, i32* %s1, align 4
  br label %for.inc.200

for.inc.200:                                      ; preds = %for.body.190
  %138 = load i32, i32* %i, align 4
  %inc201 = add nsw i32 %138, 1
  store i32 %inc201, i32* %i, align 4
  br label %for.cond.186

for.end.202:                                      ; preds = %for.cond.186
  br label %if.end.228

if.else.203:                                      ; preds = %sw.bb.183
  %arrayidx204 = getelementptr inbounds [2 x i32], [2 x i32]* %mb_available_left, i32 0, i64 0
  %139 = load i32, i32* %arrayidx204, align 4
  %tobool205 = icmp ne i32 %139, 0
  br i1 %tobool205, label %if.then.206, label %if.end.227

if.then.206:                                      ; preds = %if.else.203
  %140 = load i32, i32* %blk_y, align 4
  store i32 %140, i32* %i, align 4
  br label %for.cond.207

for.cond.207:                                     ; preds = %for.inc.224, %if.then.206
  %141 = load i32, i32* %i, align 4
  %142 = load i32, i32* %blk_y, align 4
  %add208 = add nsw i32 %142, 4
  %cmp209 = icmp slt i32 %141, %add208
  br i1 %cmp209, label %for.body.211, label %for.end.226

for.body.211:                                     ; preds = %for.cond.207
  %143 = load i32, i32* %i, align 4
  %idxprom212 = sext i32 %143 to i64
  %arrayidx213 = getelementptr inbounds [17 x %struct.pix_pos], [17 x %struct.pix_pos]* %left, i32 0, i64 %idxprom212
  %pos_x214 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %arrayidx213, i32 0, i32 4
  %144 = load i32, i32* %pos_x214, align 4
  %idxprom215 = sext i32 %144 to i64
  %145 = load i32, i32* %i, align 4
  %idxprom216 = sext i32 %145 to i64
  %arrayidx217 = getelementptr inbounds [17 x %struct.pix_pos], [17 x %struct.pix_pos]* %left, i32 0, i64 %idxprom216
  %pos_y218 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %arrayidx217, i32 0, i32 5
  %146 = load i32, i32* %pos_y218, align 4
  %idxprom219 = sext i32 %146 to i64
  %147 = load i16**, i16*** %image, align 8
  %arrayidx220 = getelementptr inbounds i16*, i16** %147, i64 %idxprom219
  %148 = load i16*, i16** %arrayidx220, align 8
  %arrayidx221 = getelementptr inbounds i16, i16* %148, i64 %idxprom215
  %149 = load i16, i16* %arrayidx221, align 2
  %conv222 = zext i16 %149 to i32
  %150 = load i32, i32* %s2, align 4
  %add223 = add nsw i32 %150, %conv222
  store i32 %add223, i32* %s2, align 4
  br label %for.inc.224

for.inc.224:                                      ; preds = %for.body.211
  %151 = load i32, i32* %i, align 4
  %inc225 = add nsw i32 %151, 1
  store i32 %inc225, i32* %i, align 4
  br label %for.cond.207

for.end.226:                                      ; preds = %for.cond.207
  br label %if.end.227

if.end.227:                                       ; preds = %for.end.226, %if.else.203
  br label %if.end.228

if.end.228:                                       ; preds = %if.end.227, %for.end.202
  %152 = load i32, i32* %mb_available_up, align 4
  %tobool229 = icmp ne i32 %152, 0
  br i1 %tobool229, label %if.then.230, label %if.else.233

if.then.230:                                      ; preds = %if.end.228
  %153 = load i32, i32* %s1, align 4
  %add231 = add nsw i32 %153, 2
  %shr232 = ashr i32 %add231, 2
  store i32 %shr232, i32* %s, align 4
  br label %if.end.240

if.else.233:                                      ; preds = %if.end.228
  %arrayidx234 = getelementptr inbounds [2 x i32], [2 x i32]* %mb_available_left, i32 0, i64 0
  %154 = load i32, i32* %arrayidx234, align 4
  %tobool235 = icmp ne i32 %154, 0
  br i1 %tobool235, label %if.then.236, label %if.end.239

if.then.236:                                      ; preds = %if.else.233
  %155 = load i32, i32* %s2, align 4
  %add237 = add nsw i32 %155, 2
  %shr238 = ashr i32 %add237, 2
  store i32 %shr238, i32* %s, align 4
  br label %if.end.239

if.end.239:                                       ; preds = %if.then.236, %if.else.233
  br label %if.end.240

if.end.240:                                       ; preds = %if.end.239, %if.then.230
  br label %sw.epilog

sw.bb.241:                                        ; preds = %for.body.101
  %arrayidx242 = getelementptr inbounds [2 x i32], [2 x i32]* %mb_available_left, i32 0, i64 1
  %156 = load i32, i32* %arrayidx242, align 4
  %tobool243 = icmp ne i32 %156, 0
  br i1 %tobool243, label %if.then.244, label %if.else.265

if.then.244:                                      ; preds = %sw.bb.241
  %157 = load i32, i32* %blk_y, align 4
  store i32 %157, i32* %i, align 4
  br label %for.cond.245

for.cond.245:                                     ; preds = %for.inc.262, %if.then.244
  %158 = load i32, i32* %i, align 4
  %159 = load i32, i32* %blk_y, align 4
  %add246 = add nsw i32 %159, 4
  %cmp247 = icmp slt i32 %158, %add246
  br i1 %cmp247, label %for.body.249, label %for.end.264

for.body.249:                                     ; preds = %for.cond.245
  %160 = load i32, i32* %i, align 4
  %idxprom250 = sext i32 %160 to i64
  %arrayidx251 = getelementptr inbounds [17 x %struct.pix_pos], [17 x %struct.pix_pos]* %left, i32 0, i64 %idxprom250
  %pos_x252 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %arrayidx251, i32 0, i32 4
  %161 = load i32, i32* %pos_x252, align 4
  %idxprom253 = sext i32 %161 to i64
  %162 = load i32, i32* %i, align 4
  %idxprom254 = sext i32 %162 to i64
  %arrayidx255 = getelementptr inbounds [17 x %struct.pix_pos], [17 x %struct.pix_pos]* %left, i32 0, i64 %idxprom254
  %pos_y256 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %arrayidx255, i32 0, i32 5
  %163 = load i32, i32* %pos_y256, align 4
  %idxprom257 = sext i32 %163 to i64
  %164 = load i16**, i16*** %image, align 8
  %arrayidx258 = getelementptr inbounds i16*, i16** %164, i64 %idxprom257
  %165 = load i16*, i16** %arrayidx258, align 8
  %arrayidx259 = getelementptr inbounds i16, i16* %165, i64 %idxprom253
  %166 = load i16, i16* %arrayidx259, align 2
  %conv260 = zext i16 %166 to i32
  %167 = load i32, i32* %s3, align 4
  %add261 = add nsw i32 %167, %conv260
  store i32 %add261, i32* %s3, align 4
  br label %for.inc.262

for.inc.262:                                      ; preds = %for.body.249
  %168 = load i32, i32* %i, align 4
  %inc263 = add nsw i32 %168, 1
  store i32 %inc263, i32* %i, align 4
  br label %for.cond.245

for.end.264:                                      ; preds = %for.cond.245
  br label %if.end.286

if.else.265:                                      ; preds = %sw.bb.241
  %169 = load i32, i32* %mb_available_up, align 4
  %tobool266 = icmp ne i32 %169, 0
  br i1 %tobool266, label %if.then.267, label %if.end.285

if.then.267:                                      ; preds = %if.else.265
  %170 = load i32, i32* %blk_x, align 4
  store i32 %170, i32* %i, align 4
  br label %for.cond.268

for.cond.268:                                     ; preds = %for.inc.282, %if.then.267
  %171 = load i32, i32* %i, align 4
  %172 = load i32, i32* %blk_x, align 4
  %add269 = add nsw i32 %172, 4
  %cmp270 = icmp slt i32 %171, %add269
  br i1 %cmp270, label %for.body.272, label %for.end.284

for.body.272:                                     ; preds = %for.cond.268
  %pos_x273 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %up, i32 0, i32 4
  %173 = load i32, i32* %pos_x273, align 4
  %174 = load i32, i32* %i, align 4
  %add274 = add nsw i32 %173, %174
  %idxprom275 = sext i32 %add274 to i64
  %pos_y276 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %up, i32 0, i32 5
  %175 = load i32, i32* %pos_y276, align 4
  %idxprom277 = sext i32 %175 to i64
  %176 = load i16**, i16*** %image, align 8
  %arrayidx278 = getelementptr inbounds i16*, i16** %176, i64 %idxprom277
  %177 = load i16*, i16** %arrayidx278, align 8
  %arrayidx279 = getelementptr inbounds i16, i16* %177, i64 %idxprom275
  %178 = load i16, i16* %arrayidx279, align 2
  %conv280 = zext i16 %178 to i32
  %179 = load i32, i32* %s0, align 4
  %add281 = add nsw i32 %179, %conv280
  store i32 %add281, i32* %s0, align 4
  br label %for.inc.282

for.inc.282:                                      ; preds = %for.body.272
  %180 = load i32, i32* %i, align 4
  %inc283 = add nsw i32 %180, 1
  store i32 %inc283, i32* %i, align 4
  br label %for.cond.268

for.end.284:                                      ; preds = %for.cond.268
  br label %if.end.285

if.end.285:                                       ; preds = %for.end.284, %if.else.265
  br label %if.end.286

if.end.286:                                       ; preds = %if.end.285, %for.end.264
  %arrayidx287 = getelementptr inbounds [2 x i32], [2 x i32]* %mb_available_left, i32 0, i64 1
  %181 = load i32, i32* %arrayidx287, align 4
  %tobool288 = icmp ne i32 %181, 0
  br i1 %tobool288, label %if.then.289, label %if.else.292

if.then.289:                                      ; preds = %if.end.286
  %182 = load i32, i32* %s3, align 4
  %add290 = add nsw i32 %182, 2
  %shr291 = ashr i32 %add290, 2
  store i32 %shr291, i32* %s, align 4
  br label %if.end.298

if.else.292:                                      ; preds = %if.end.286
  %183 = load i32, i32* %mb_available_up, align 4
  %tobool293 = icmp ne i32 %183, 0
  br i1 %tobool293, label %if.then.294, label %if.end.297

if.then.294:                                      ; preds = %if.else.292
  %184 = load i32, i32* %s0, align 4
  %add295 = add nsw i32 %184, 2
  %shr296 = ashr i32 %add295, 2
  store i32 %shr296, i32* %s, align 4
  br label %if.end.297

if.end.297:                                       ; preds = %if.then.294, %if.else.292
  br label %if.end.298

if.end.298:                                       ; preds = %if.end.297, %if.then.289
  br label %sw.epilog

sw.bb.299:                                        ; preds = %for.body.101
  %185 = load i32, i32* %mb_available_up, align 4
  %tobool300 = icmp ne i32 %185, 0
  br i1 %tobool300, label %if.then.301, label %if.end.319

if.then.301:                                      ; preds = %sw.bb.299
  %186 = load i32, i32* %blk_x, align 4
  store i32 %186, i32* %i, align 4
  br label %for.cond.302

for.cond.302:                                     ; preds = %for.inc.316, %if.then.301
  %187 = load i32, i32* %i, align 4
  %188 = load i32, i32* %blk_x, align 4
  %add303 = add nsw i32 %188, 4
  %cmp304 = icmp slt i32 %187, %add303
  br i1 %cmp304, label %for.body.306, label %for.end.318

for.body.306:                                     ; preds = %for.cond.302
  %pos_x307 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %up, i32 0, i32 4
  %189 = load i32, i32* %pos_x307, align 4
  %190 = load i32, i32* %i, align 4
  %add308 = add nsw i32 %189, %190
  %idxprom309 = sext i32 %add308 to i64
  %pos_y310 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %up, i32 0, i32 5
  %191 = load i32, i32* %pos_y310, align 4
  %idxprom311 = sext i32 %191 to i64
  %192 = load i16**, i16*** %image, align 8
  %arrayidx312 = getelementptr inbounds i16*, i16** %192, i64 %idxprom311
  %193 = load i16*, i16** %arrayidx312, align 8
  %arrayidx313 = getelementptr inbounds i16, i16* %193, i64 %idxprom309
  %194 = load i16, i16* %arrayidx313, align 2
  %conv314 = zext i16 %194 to i32
  %195 = load i32, i32* %s1, align 4
  %add315 = add nsw i32 %195, %conv314
  store i32 %add315, i32* %s1, align 4
  br label %for.inc.316

for.inc.316:                                      ; preds = %for.body.306
  %196 = load i32, i32* %i, align 4
  %inc317 = add nsw i32 %196, 1
  store i32 %inc317, i32* %i, align 4
  br label %for.cond.302

for.end.318:                                      ; preds = %for.cond.302
  br label %if.end.319

if.end.319:                                       ; preds = %for.end.318, %sw.bb.299
  %arrayidx320 = getelementptr inbounds [2 x i32], [2 x i32]* %mb_available_left, i32 0, i64 1
  %197 = load i32, i32* %arrayidx320, align 4
  %tobool321 = icmp ne i32 %197, 0
  br i1 %tobool321, label %if.then.322, label %if.end.343

if.then.322:                                      ; preds = %if.end.319
  %198 = load i32, i32* %blk_y, align 4
  store i32 %198, i32* %i, align 4
  br label %for.cond.323

for.cond.323:                                     ; preds = %for.inc.340, %if.then.322
  %199 = load i32, i32* %i, align 4
  %200 = load i32, i32* %blk_y, align 4
  %add324 = add nsw i32 %200, 4
  %cmp325 = icmp slt i32 %199, %add324
  br i1 %cmp325, label %for.body.327, label %for.end.342

for.body.327:                                     ; preds = %for.cond.323
  %201 = load i32, i32* %i, align 4
  %idxprom328 = sext i32 %201 to i64
  %arrayidx329 = getelementptr inbounds [17 x %struct.pix_pos], [17 x %struct.pix_pos]* %left, i32 0, i64 %idxprom328
  %pos_x330 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %arrayidx329, i32 0, i32 4
  %202 = load i32, i32* %pos_x330, align 4
  %idxprom331 = sext i32 %202 to i64
  %203 = load i32, i32* %i, align 4
  %idxprom332 = sext i32 %203 to i64
  %arrayidx333 = getelementptr inbounds [17 x %struct.pix_pos], [17 x %struct.pix_pos]* %left, i32 0, i64 %idxprom332
  %pos_y334 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %arrayidx333, i32 0, i32 5
  %204 = load i32, i32* %pos_y334, align 4
  %idxprom335 = sext i32 %204 to i64
  %205 = load i16**, i16*** %image, align 8
  %arrayidx336 = getelementptr inbounds i16*, i16** %205, i64 %idxprom335
  %206 = load i16*, i16** %arrayidx336, align 8
  %arrayidx337 = getelementptr inbounds i16, i16* %206, i64 %idxprom331
  %207 = load i16, i16* %arrayidx337, align 2
  %conv338 = zext i16 %207 to i32
  %208 = load i32, i32* %s3, align 4
  %add339 = add nsw i32 %208, %conv338
  store i32 %add339, i32* %s3, align 4
  br label %for.inc.340

for.inc.340:                                      ; preds = %for.body.327
  %209 = load i32, i32* %i, align 4
  %inc341 = add nsw i32 %209, 1
  store i32 %inc341, i32* %i, align 4
  br label %for.cond.323

for.end.342:                                      ; preds = %for.cond.323
  br label %if.end.343

if.end.343:                                       ; preds = %for.end.342, %if.end.319
  %210 = load i32, i32* %mb_available_up, align 4
  %tobool344 = icmp ne i32 %210, 0
  br i1 %tobool344, label %land.lhs.true.345, label %if.else.352

land.lhs.true.345:                                ; preds = %if.end.343
  %arrayidx346 = getelementptr inbounds [2 x i32], [2 x i32]* %mb_available_left, i32 0, i64 1
  %211 = load i32, i32* %arrayidx346, align 4
  %tobool347 = icmp ne i32 %211, 0
  br i1 %tobool347, label %if.then.348, label %if.else.352

if.then.348:                                      ; preds = %land.lhs.true.345
  %212 = load i32, i32* %s1, align 4
  %213 = load i32, i32* %s3, align 4
  %add349 = add nsw i32 %212, %213
  %add350 = add nsw i32 %add349, 4
  %shr351 = ashr i32 %add350, 3
  store i32 %shr351, i32* %s, align 4
  br label %if.end.365

if.else.352:                                      ; preds = %land.lhs.true.345, %if.end.343
  %214 = load i32, i32* %mb_available_up, align 4
  %tobool353 = icmp ne i32 %214, 0
  br i1 %tobool353, label %if.then.354, label %if.else.357

if.then.354:                                      ; preds = %if.else.352
  %215 = load i32, i32* %s1, align 4
  %add355 = add nsw i32 %215, 2
  %shr356 = ashr i32 %add355, 2
  store i32 %shr356, i32* %s, align 4
  br label %if.end.364

if.else.357:                                      ; preds = %if.else.352
  %arrayidx358 = getelementptr inbounds [2 x i32], [2 x i32]* %mb_available_left, i32 0, i64 1
  %216 = load i32, i32* %arrayidx358, align 4
  %tobool359 = icmp ne i32 %216, 0
  br i1 %tobool359, label %if.then.360, label %if.end.363

if.then.360:                                      ; preds = %if.else.357
  %217 = load i32, i32* %s3, align 4
  %add361 = add nsw i32 %217, 2
  %shr362 = ashr i32 %add361, 2
  store i32 %shr362, i32* %s, align 4
  br label %if.end.363

if.end.363:                                       ; preds = %if.then.360, %if.else.357
  br label %if.end.364

if.end.364:                                       ; preds = %if.end.363, %if.then.354
  br label %if.end.365

if.end.365:                                       ; preds = %if.end.364, %if.then.348
  br label %sw.epilog

sw.epilog:                                        ; preds = %for.body.101, %if.end.365, %if.end.298, %if.end.240, %if.end.182
  %218 = load i32, i32* %block_y, align 4
  store i32 %218, i32* %j, align 4
  br label %for.cond.366

for.cond.366:                                     ; preds = %for.inc.387, %sw.epilog
  %219 = load i32, i32* %j, align 4
  %220 = load i32, i32* %block_y, align 4
  %add367 = add nsw i32 %220, 4
  %cmp368 = icmp slt i32 %219, %add367
  br i1 %cmp368, label %for.body.370, label %for.end.389

for.body.370:                                     ; preds = %for.cond.366
  %221 = load i32, i32* %block_x, align 4
  store i32 %221, i32* %i, align 4
  br label %for.cond.371

for.cond.371:                                     ; preds = %for.inc.384, %for.body.370
  %222 = load i32, i32* %i, align 4
  %223 = load i32, i32* %block_x, align 4
  %add372 = add nsw i32 %223, 4
  %cmp373 = icmp slt i32 %222, %add372
  br i1 %cmp373, label %for.body.375, label %for.end.386

for.body.375:                                     ; preds = %for.cond.371
  %224 = load i32, i32* %s, align 4
  %conv376 = trunc i32 %224 to i16
  %225 = load i32, i32* %j, align 4
  %idxprom377 = sext i32 %225 to i64
  %226 = load i32, i32* %i, align 4
  %idxprom378 = sext i32 %226 to i64
  %227 = load i32, i32* %uv, align 4
  %idxprom379 = sext i32 %227 to i64
  %228 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mprr_c = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %228, i32 0, i32 44
  %arrayidx380 = getelementptr inbounds [2 x [4 x [16 x [16 x i16]]]], [2 x [4 x [16 x [16 x i16]]]]* %mprr_c, i32 0, i64 %idxprom379
  %arrayidx381 = getelementptr inbounds [4 x [16 x [16 x i16]]], [4 x [16 x [16 x i16]]]* %arrayidx380, i32 0, i64 0
  %arrayidx382 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %arrayidx381, i32 0, i64 %idxprom378
  %arrayidx383 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx382, i32 0, i64 %idxprom377
  store i16 %conv376, i16* %arrayidx383, align 2
  br label %for.inc.384

for.inc.384:                                      ; preds = %for.body.375
  %229 = load i32, i32* %i, align 4
  %inc385 = add nsw i32 %229, 1
  store i32 %inc385, i32* %i, align 4
  br label %for.cond.371

for.end.386:                                      ; preds = %for.cond.371
  br label %for.inc.387

for.inc.387:                                      ; preds = %for.end.386
  %230 = load i32, i32* %j, align 4
  %inc388 = add nsw i32 %230, 1
  store i32 %inc388, i32* %j, align 4
  br label %for.cond.366

for.end.389:                                      ; preds = %for.cond.366
  br label %for.inc.390

for.inc.390:                                      ; preds = %for.end.389
  %231 = load i32, i32* %b4, align 4
  %inc391 = add nsw i32 %231, 1
  store i32 %inc391, i32* %b4, align 4
  br label %for.cond.99

for.end.392:                                      ; preds = %for.cond.99
  br label %for.inc.393

for.inc.393:                                      ; preds = %for.end.392
  %232 = load i32, i32* %b8, align 4
  %inc394 = add nsw i32 %232, 1
  store i32 %inc394, i32* %b8, align 4
  br label %for.cond.95

for.end.395:                                      ; preds = %for.cond.95
  %233 = load i32, i32* %mb_available_up, align 4
  %tobool396 = icmp ne i32 %233, 0
  br i1 %tobool396, label %if.then.397, label %if.end.440

if.then.397:                                      ; preds = %for.end.395
  store i32 0, i32* %i, align 4
  br label %for.cond.398

for.cond.398:                                     ; preds = %for.inc.412, %if.then.397
  %234 = load i32, i32* %i, align 4
  %235 = load i32, i32* %cr_MB_x, align 4
  %cmp399 = icmp slt i32 %234, %235
  br i1 %cmp399, label %for.body.401, label %for.end.414

for.body.401:                                     ; preds = %for.cond.398
  %pos_x402 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %up, i32 0, i32 4
  %236 = load i32, i32* %pos_x402, align 4
  %237 = load i32, i32* %i, align 4
  %add403 = add nsw i32 %236, %237
  %idxprom404 = sext i32 %add403 to i64
  %pos_y405 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %up, i32 0, i32 5
  %238 = load i32, i32* %pos_y405, align 4
  %idxprom406 = sext i32 %238 to i64
  %239 = load i16**, i16*** %image, align 8
  %arrayidx407 = getelementptr inbounds i16*, i16** %239, i64 %idxprom406
  %240 = load i16*, i16** %arrayidx407, align 8
  %arrayidx408 = getelementptr inbounds i16, i16* %240, i64 %idxprom404
  %241 = load i16, i16* %arrayidx408, align 2
  %conv409 = zext i16 %241 to i32
  %242 = load i32, i32* %i, align 4
  %idxprom410 = sext i32 %242 to i64
  %arrayidx411 = getelementptr inbounds [16 x i32], [16 x i32]* %hline, i32 0, i64 %idxprom410
  store i32 %conv409, i32* %arrayidx411, align 4
  br label %for.inc.412

for.inc.412:                                      ; preds = %for.body.401
  %243 = load i32, i32* %i, align 4
  %inc413 = add nsw i32 %243, 1
  store i32 %inc413, i32* %i, align 4
  br label %for.cond.398

for.end.414:                                      ; preds = %for.cond.398
  store i32 0, i32* %i, align 4
  br label %for.cond.415

for.cond.415:                                     ; preds = %for.inc.437, %for.end.414
  %244 = load i32, i32* %i, align 4
  %245 = load i32, i32* %cr_MB_x, align 4
  %cmp416 = icmp slt i32 %244, %245
  br i1 %cmp416, label %for.body.418, label %for.end.439

for.body.418:                                     ; preds = %for.cond.415
  store i32 0, i32* %j, align 4
  br label %for.cond.419

for.cond.419:                                     ; preds = %for.inc.434, %for.body.418
  %246 = load i32, i32* %j, align 4
  %247 = load i32, i32* %cr_MB_y, align 4
  %cmp420 = icmp slt i32 %246, %247
  br i1 %cmp420, label %for.body.422, label %for.end.436

for.body.422:                                     ; preds = %for.cond.419
  %248 = load i32, i32* %i, align 4
  %idxprom423 = sext i32 %248 to i64
  %arrayidx424 = getelementptr inbounds [16 x i32], [16 x i32]* %hline, i32 0, i64 %idxprom423
  %249 = load i32, i32* %arrayidx424, align 4
  %conv425 = trunc i32 %249 to i16
  %250 = load i32, i32* %j, align 4
  %idxprom426 = sext i32 %250 to i64
  %251 = load i32, i32* %i, align 4
  %idxprom427 = sext i32 %251 to i64
  %252 = load i32, i32* %uv, align 4
  %idxprom428 = sext i32 %252 to i64
  %253 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mprr_c429 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %253, i32 0, i32 44
  %arrayidx430 = getelementptr inbounds [2 x [4 x [16 x [16 x i16]]]], [2 x [4 x [16 x [16 x i16]]]]* %mprr_c429, i32 0, i64 %idxprom428
  %arrayidx431 = getelementptr inbounds [4 x [16 x [16 x i16]]], [4 x [16 x [16 x i16]]]* %arrayidx430, i32 0, i64 2
  %arrayidx432 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %arrayidx431, i32 0, i64 %idxprom427
  %arrayidx433 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx432, i32 0, i64 %idxprom426
  store i16 %conv425, i16* %arrayidx433, align 2
  br label %for.inc.434

for.inc.434:                                      ; preds = %for.body.422
  %254 = load i32, i32* %j, align 4
  %inc435 = add nsw i32 %254, 1
  store i32 %inc435, i32* %j, align 4
  br label %for.cond.419

for.end.436:                                      ; preds = %for.cond.419
  br label %for.inc.437

for.inc.437:                                      ; preds = %for.end.436
  %255 = load i32, i32* %i, align 4
  %inc438 = add nsw i32 %255, 1
  store i32 %inc438, i32* %i, align 4
  br label %for.cond.415

for.end.439:                                      ; preds = %for.cond.415
  br label %if.end.440

if.end.440:                                       ; preds = %for.end.439, %for.end.395
  %arrayidx441 = getelementptr inbounds [2 x i32], [2 x i32]* %mb_available_left, i32 0, i64 0
  %256 = load i32, i32* %arrayidx441, align 4
  %tobool442 = icmp ne i32 %256, 0
  br i1 %tobool442, label %land.lhs.true.443, label %if.end.494

land.lhs.true.443:                                ; preds = %if.end.440
  %arrayidx444 = getelementptr inbounds [2 x i32], [2 x i32]* %mb_available_left, i32 0, i64 1
  %257 = load i32, i32* %arrayidx444, align 4
  %tobool445 = icmp ne i32 %257, 0
  br i1 %tobool445, label %if.then.446, label %if.end.494

if.then.446:                                      ; preds = %land.lhs.true.443
  store i32 0, i32* %i, align 4
  br label %for.cond.447

for.cond.447:                                     ; preds = %for.inc.466, %if.then.446
  %258 = load i32, i32* %i, align 4
  %259 = load i32, i32* %cr_MB_y, align 4
  %cmp448 = icmp slt i32 %258, %259
  br i1 %cmp448, label %for.body.450, label %for.end.468

for.body.450:                                     ; preds = %for.cond.447
  %260 = load i32, i32* %i, align 4
  %add451 = add nsw i32 %260, 1
  %idxprom452 = sext i32 %add451 to i64
  %arrayidx453 = getelementptr inbounds [17 x %struct.pix_pos], [17 x %struct.pix_pos]* %left, i32 0, i64 %idxprom452
  %pos_x454 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %arrayidx453, i32 0, i32 4
  %261 = load i32, i32* %pos_x454, align 4
  %idxprom455 = sext i32 %261 to i64
  %262 = load i32, i32* %i, align 4
  %add456 = add nsw i32 %262, 1
  %idxprom457 = sext i32 %add456 to i64
  %arrayidx458 = getelementptr inbounds [17 x %struct.pix_pos], [17 x %struct.pix_pos]* %left, i32 0, i64 %idxprom457
  %pos_y459 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %arrayidx458, i32 0, i32 5
  %263 = load i32, i32* %pos_y459, align 4
  %idxprom460 = sext i32 %263 to i64
  %264 = load i16**, i16*** %image, align 8
  %arrayidx461 = getelementptr inbounds i16*, i16** %264, i64 %idxprom460
  %265 = load i16*, i16** %arrayidx461, align 8
  %arrayidx462 = getelementptr inbounds i16, i16* %265, i64 %idxprom455
  %266 = load i16, i16* %arrayidx462, align 2
  %conv463 = zext i16 %266 to i32
  %267 = load i32, i32* %i, align 4
  %idxprom464 = sext i32 %267 to i64
  %arrayidx465 = getelementptr inbounds [16 x i32], [16 x i32]* %vline, i32 0, i64 %idxprom464
  store i32 %conv463, i32* %arrayidx465, align 4
  br label %for.inc.466

for.inc.466:                                      ; preds = %for.body.450
  %268 = load i32, i32* %i, align 4
  %inc467 = add nsw i32 %268, 1
  store i32 %inc467, i32* %i, align 4
  br label %for.cond.447

for.end.468:                                      ; preds = %for.cond.447
  store i32 0, i32* %i, align 4
  br label %for.cond.469

for.cond.469:                                     ; preds = %for.inc.491, %for.end.468
  %269 = load i32, i32* %i, align 4
  %270 = load i32, i32* %cr_MB_x, align 4
  %cmp470 = icmp slt i32 %269, %270
  br i1 %cmp470, label %for.body.472, label %for.end.493

for.body.472:                                     ; preds = %for.cond.469
  store i32 0, i32* %j, align 4
  br label %for.cond.473

for.cond.473:                                     ; preds = %for.inc.488, %for.body.472
  %271 = load i32, i32* %j, align 4
  %272 = load i32, i32* %cr_MB_y, align 4
  %cmp474 = icmp slt i32 %271, %272
  br i1 %cmp474, label %for.body.476, label %for.end.490

for.body.476:                                     ; preds = %for.cond.473
  %273 = load i32, i32* %j, align 4
  %idxprom477 = sext i32 %273 to i64
  %arrayidx478 = getelementptr inbounds [16 x i32], [16 x i32]* %vline, i32 0, i64 %idxprom477
  %274 = load i32, i32* %arrayidx478, align 4
  %conv479 = trunc i32 %274 to i16
  %275 = load i32, i32* %j, align 4
  %idxprom480 = sext i32 %275 to i64
  %276 = load i32, i32* %i, align 4
  %idxprom481 = sext i32 %276 to i64
  %277 = load i32, i32* %uv, align 4
  %idxprom482 = sext i32 %277 to i64
  %278 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mprr_c483 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %278, i32 0, i32 44
  %arrayidx484 = getelementptr inbounds [2 x [4 x [16 x [16 x i16]]]], [2 x [4 x [16 x [16 x i16]]]]* %mprr_c483, i32 0, i64 %idxprom482
  %arrayidx485 = getelementptr inbounds [4 x [16 x [16 x i16]]], [4 x [16 x [16 x i16]]]* %arrayidx484, i32 0, i64 1
  %arrayidx486 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %arrayidx485, i32 0, i64 %idxprom481
  %arrayidx487 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx486, i32 0, i64 %idxprom480
  store i16 %conv479, i16* %arrayidx487, align 2
  br label %for.inc.488

for.inc.488:                                      ; preds = %for.body.476
  %279 = load i32, i32* %j, align 4
  %inc489 = add nsw i32 %279, 1
  store i32 %inc489, i32* %j, align 4
  br label %for.cond.473

for.end.490:                                      ; preds = %for.cond.473
  br label %for.inc.491

for.inc.491:                                      ; preds = %for.end.490
  %280 = load i32, i32* %i, align 4
  %inc492 = add nsw i32 %280, 1
  store i32 %inc492, i32* %i, align 4
  br label %for.cond.469

for.end.493:                                      ; preds = %for.cond.469
  br label %if.end.494

if.end.494:                                       ; preds = %for.end.493, %land.lhs.true.443, %if.end.440
  %arrayidx495 = getelementptr inbounds [2 x i32], [2 x i32]* %mb_available_left, i32 0, i64 0
  %281 = load i32, i32* %arrayidx495, align 4
  %tobool496 = icmp ne i32 %281, 0
  br i1 %tobool496, label %land.lhs.true.497, label %if.end.698

land.lhs.true.497:                                ; preds = %if.end.494
  %arrayidx498 = getelementptr inbounds [2 x i32], [2 x i32]* %mb_available_left, i32 0, i64 1
  %282 = load i32, i32* %arrayidx498, align 4
  %tobool499 = icmp ne i32 %282, 0
  br i1 %tobool499, label %land.lhs.true.500, label %if.end.698

land.lhs.true.500:                                ; preds = %land.lhs.true.497
  %283 = load i32, i32* %mb_available_up, align 4
  %tobool501 = icmp ne i32 %283, 0
  br i1 %tobool501, label %land.lhs.true.502, label %if.end.698

land.lhs.true.502:                                ; preds = %land.lhs.true.500
  %284 = load i32, i32* %mb_available_up_left, align 4
  %tobool503 = icmp ne i32 %284, 0
  br i1 %tobool503, label %if.then.504, label %if.end.698

if.then.504:                                      ; preds = %land.lhs.true.502
  %285 = load i32, i32* %cr_MB_x, align 4
  %div505 = sdiv i32 %285, 2
  %286 = load i32, i32* %cr_MB_x, align 4
  %sub506 = sub nsw i32 %286, 1
  %idxprom507 = sext i32 %sub506 to i64
  %arrayidx508 = getelementptr inbounds [16 x i32], [16 x i32]* %hline, i32 0, i64 %idxprom507
  %287 = load i32, i32* %arrayidx508, align 4
  %arrayidx509 = getelementptr inbounds [17 x %struct.pix_pos], [17 x %struct.pix_pos]* %left, i32 0, i64 0
  %pos_x510 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %arrayidx509, i32 0, i32 4
  %288 = load i32, i32* %pos_x510, align 4
  %idxprom511 = sext i32 %288 to i64
  %arrayidx512 = getelementptr inbounds [17 x %struct.pix_pos], [17 x %struct.pix_pos]* %left, i32 0, i64 0
  %pos_y513 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %arrayidx512, i32 0, i32 5
  %289 = load i32, i32* %pos_y513, align 4
  %idxprom514 = sext i32 %289 to i64
  %290 = load i16**, i16*** %image, align 8
  %arrayidx515 = getelementptr inbounds i16*, i16** %290, i64 %idxprom514
  %291 = load i16*, i16** %arrayidx515, align 8
  %arrayidx516 = getelementptr inbounds i16, i16* %291, i64 %idxprom511
  %292 = load i16, i16* %arrayidx516, align 2
  %conv517 = zext i16 %292 to i32
  %sub518 = sub nsw i32 %287, %conv517
  %mul = mul nsw i32 %div505, %sub518
  store i32 %mul, i32* %ih, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond.519

for.cond.519:                                     ; preds = %for.inc.538, %if.then.504
  %293 = load i32, i32* %i, align 4
  %294 = load i32, i32* %cr_MB_x, align 4
  %div520 = sdiv i32 %294, 2
  %sub521 = sub nsw i32 %div520, 1
  %cmp522 = icmp slt i32 %293, %sub521
  br i1 %cmp522, label %for.body.524, label %for.end.540

for.body.524:                                     ; preds = %for.cond.519
  %295 = load i32, i32* %i, align 4
  %add525 = add nsw i32 %295, 1
  %296 = load i32, i32* %cr_MB_x, align 4
  %div526 = sdiv i32 %296, 2
  %297 = load i32, i32* %i, align 4
  %add527 = add nsw i32 %div526, %297
  %idxprom528 = sext i32 %add527 to i64
  %arrayidx529 = getelementptr inbounds [16 x i32], [16 x i32]* %hline, i32 0, i64 %idxprom528
  %298 = load i32, i32* %arrayidx529, align 4
  %299 = load i32, i32* %cr_MB_x, align 4
  %div530 = sdiv i32 %299, 2
  %sub531 = sub nsw i32 %div530, 2
  %300 = load i32, i32* %i, align 4
  %sub532 = sub nsw i32 %sub531, %300
  %idxprom533 = sext i32 %sub532 to i64
  %arrayidx534 = getelementptr inbounds [16 x i32], [16 x i32]* %hline, i32 0, i64 %idxprom533
  %301 = load i32, i32* %arrayidx534, align 4
  %sub535 = sub nsw i32 %298, %301
  %mul536 = mul nsw i32 %add525, %sub535
  %302 = load i32, i32* %ih, align 4
  %add537 = add nsw i32 %302, %mul536
  store i32 %add537, i32* %ih, align 4
  br label %for.inc.538

for.inc.538:                                      ; preds = %for.body.524
  %303 = load i32, i32* %i, align 4
  %inc539 = add nsw i32 %303, 1
  store i32 %inc539, i32* %i, align 4
  br label %for.cond.519

for.end.540:                                      ; preds = %for.cond.519
  %304 = load i32, i32* %cr_MB_y, align 4
  %div541 = sdiv i32 %304, 2
  %305 = load i32, i32* %cr_MB_y, align 4
  %sub542 = sub nsw i32 %305, 1
  %idxprom543 = sext i32 %sub542 to i64
  %arrayidx544 = getelementptr inbounds [16 x i32], [16 x i32]* %vline, i32 0, i64 %idxprom543
  %306 = load i32, i32* %arrayidx544, align 4
  %arrayidx545 = getelementptr inbounds [17 x %struct.pix_pos], [17 x %struct.pix_pos]* %left, i32 0, i64 0
  %pos_x546 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %arrayidx545, i32 0, i32 4
  %307 = load i32, i32* %pos_x546, align 4
  %idxprom547 = sext i32 %307 to i64
  %arrayidx548 = getelementptr inbounds [17 x %struct.pix_pos], [17 x %struct.pix_pos]* %left, i32 0, i64 0
  %pos_y549 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %arrayidx548, i32 0, i32 5
  %308 = load i32, i32* %pos_y549, align 4
  %idxprom550 = sext i32 %308 to i64
  %309 = load i16**, i16*** %image, align 8
  %arrayidx551 = getelementptr inbounds i16*, i16** %309, i64 %idxprom550
  %310 = load i16*, i16** %arrayidx551, align 8
  %arrayidx552 = getelementptr inbounds i16, i16* %310, i64 %idxprom547
  %311 = load i16, i16* %arrayidx552, align 2
  %conv553 = zext i16 %311 to i32
  %sub554 = sub nsw i32 %306, %conv553
  %mul555 = mul nsw i32 %div541, %sub554
  store i32 %mul555, i32* %iv, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond.556

for.cond.556:                                     ; preds = %for.inc.575, %for.end.540
  %312 = load i32, i32* %i, align 4
  %313 = load i32, i32* %cr_MB_y, align 4
  %div557 = sdiv i32 %313, 2
  %sub558 = sub nsw i32 %div557, 1
  %cmp559 = icmp slt i32 %312, %sub558
  br i1 %cmp559, label %for.body.561, label %for.end.577

for.body.561:                                     ; preds = %for.cond.556
  %314 = load i32, i32* %i, align 4
  %add562 = add nsw i32 %314, 1
  %315 = load i32, i32* %cr_MB_y, align 4
  %div563 = sdiv i32 %315, 2
  %316 = load i32, i32* %i, align 4
  %add564 = add nsw i32 %div563, %316
  %idxprom565 = sext i32 %add564 to i64
  %arrayidx566 = getelementptr inbounds [16 x i32], [16 x i32]* %vline, i32 0, i64 %idxprom565
  %317 = load i32, i32* %arrayidx566, align 4
  %318 = load i32, i32* %cr_MB_y, align 4
  %div567 = sdiv i32 %318, 2
  %sub568 = sub nsw i32 %div567, 2
  %319 = load i32, i32* %i, align 4
  %sub569 = sub nsw i32 %sub568, %319
  %idxprom570 = sext i32 %sub569 to i64
  %arrayidx571 = getelementptr inbounds [16 x i32], [16 x i32]* %vline, i32 0, i64 %idxprom570
  %320 = load i32, i32* %arrayidx571, align 4
  %sub572 = sub nsw i32 %317, %320
  %mul573 = mul nsw i32 %add562, %sub572
  %321 = load i32, i32* %iv, align 4
  %add574 = add nsw i32 %321, %mul573
  store i32 %add574, i32* %iv, align 4
  br label %for.inc.575

for.inc.575:                                      ; preds = %for.body.561
  %322 = load i32, i32* %i, align 4
  %inc576 = add nsw i32 %322, 1
  store i32 %inc576, i32* %i, align 4
  br label %for.cond.556

for.end.577:                                      ; preds = %for.cond.556
  %323 = load i32, i32* %cr_MB_x, align 4
  %cmp578 = icmp eq i32 %323, 8
  %cond580 = select i1 %cmp578, i32 17, i32 5
  %324 = load i32, i32* %ih, align 4
  %mul581 = mul nsw i32 %cond580, %324
  %325 = load i32, i32* %cr_MB_x, align 4
  %mul582 = mul nsw i32 2, %325
  %add583 = add nsw i32 %mul581, %mul582
  %326 = load i32, i32* %cr_MB_x, align 4
  %cmp584 = icmp eq i32 %326, 8
  %cond586 = select i1 %cmp584, i32 5, i32 6
  %shr587 = ashr i32 %add583, %cond586
  store i32 %shr587, i32* %ib, align 4
  %327 = load i32, i32* %cr_MB_y, align 4
  %cmp588 = icmp eq i32 %327, 8
  %cond590 = select i1 %cmp588, i32 17, i32 5
  %328 = load i32, i32* %iv, align 4
  %mul591 = mul nsw i32 %cond590, %328
  %329 = load i32, i32* %cr_MB_y, align 4
  %mul592 = mul nsw i32 2, %329
  %add593 = add nsw i32 %mul591, %mul592
  %330 = load i32, i32* %cr_MB_y, align 4
  %cmp594 = icmp eq i32 %330, 8
  %cond596 = select i1 %cmp594, i32 5, i32 6
  %shr597 = ashr i32 %add593, %cond596
  store i32 %shr597, i32* %ic, align 4
  %331 = load i32, i32* %cr_MB_x, align 4
  %sub598 = sub nsw i32 %331, 1
  %idxprom599 = sext i32 %sub598 to i64
  %arrayidx600 = getelementptr inbounds [16 x i32], [16 x i32]* %hline, i32 0, i64 %idxprom599
  %332 = load i32, i32* %arrayidx600, align 4
  %333 = load i32, i32* %cr_MB_y, align 4
  %sub601 = sub nsw i32 %333, 1
  %idxprom602 = sext i32 %sub601 to i64
  %arrayidx603 = getelementptr inbounds [16 x i32], [16 x i32]* %vline, i32 0, i64 %idxprom602
  %334 = load i32, i32* %arrayidx603, align 4
  %add604 = add nsw i32 %332, %334
  %mul605 = mul nsw i32 16, %add604
  store i32 %mul605, i32* %iaa, align 4
  store i32 0, i32* %j, align 4
  br label %for.cond.606

for.cond.606:                                     ; preds = %for.inc.695, %for.end.577
  %335 = load i32, i32* %j, align 4
  %336 = load i32, i32* %cr_MB_y, align 4
  %cmp607 = icmp slt i32 %335, %336
  br i1 %cmp607, label %for.body.609, label %for.end.697

for.body.609:                                     ; preds = %for.cond.606
  store i32 0, i32* %i, align 4
  br label %for.cond.610

for.cond.610:                                     ; preds = %for.inc.692, %for.body.609
  %337 = load i32, i32* %i, align 4
  %338 = load i32, i32* %cr_MB_x, align 4
  %cmp611 = icmp slt i32 %337, %338
  br i1 %cmp611, label %for.body.613, label %for.end.694

for.body.613:                                     ; preds = %for.cond.610
  %339 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value_uv = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %339, i32 0, i32 156
  %340 = load i32, i32* %max_imgpel_value_uv, align 4
  %341 = load i32, i32* %iaa, align 4
  %342 = load i32, i32* %i, align 4
  %343 = load i32, i32* %cr_MB_x, align 4
  %div614 = sdiv i32 %343, 2
  %sub615 = sub nsw i32 %342, %div614
  %add616 = add nsw i32 %sub615, 1
  %344 = load i32, i32* %ib, align 4
  %mul617 = mul nsw i32 %add616, %344
  %add618 = add nsw i32 %341, %mul617
  %345 = load i32, i32* %j, align 4
  %346 = load i32, i32* %cr_MB_y, align 4
  %div619 = sdiv i32 %346, 2
  %sub620 = sub nsw i32 %345, %div619
  %add621 = add nsw i32 %sub620, 1
  %347 = load i32, i32* %ic, align 4
  %mul622 = mul nsw i32 %add621, %347
  %add623 = add nsw i32 %add618, %mul622
  %add624 = add nsw i32 %add623, 16
  %shr625 = ashr i32 %add624, 5
  %cmp626 = icmp slt i32 %340, %shr625
  br i1 %cmp626, label %cond.true.628, label %cond.false.630

cond.true.628:                                    ; preds = %for.body.613
  %348 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value_uv629 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %348, i32 0, i32 156
  %349 = load i32, i32* %max_imgpel_value_uv629, align 4
  br label %cond.end.643

cond.false.630:                                   ; preds = %for.body.613
  %350 = load i32, i32* %iaa, align 4
  %351 = load i32, i32* %i, align 4
  %352 = load i32, i32* %cr_MB_x, align 4
  %div631 = sdiv i32 %352, 2
  %sub632 = sub nsw i32 %351, %div631
  %add633 = add nsw i32 %sub632, 1
  %353 = load i32, i32* %ib, align 4
  %mul634 = mul nsw i32 %add633, %353
  %add635 = add nsw i32 %350, %mul634
  %354 = load i32, i32* %j, align 4
  %355 = load i32, i32* %cr_MB_y, align 4
  %div636 = sdiv i32 %355, 2
  %sub637 = sub nsw i32 %354, %div636
  %add638 = add nsw i32 %sub637, 1
  %356 = load i32, i32* %ic, align 4
  %mul639 = mul nsw i32 %add638, %356
  %add640 = add nsw i32 %add635, %mul639
  %add641 = add nsw i32 %add640, 16
  %shr642 = ashr i32 %add641, 5
  br label %cond.end.643

cond.end.643:                                     ; preds = %cond.false.630, %cond.true.628
  %cond644 = phi i32 [ %349, %cond.true.628 ], [ %shr642, %cond.false.630 ]
  %cmp645 = icmp sgt i32 0, %cond644
  br i1 %cmp645, label %cond.true.647, label %cond.false.648

cond.true.647:                                    ; preds = %cond.end.643
  br label %cond.end.681

cond.false.648:                                   ; preds = %cond.end.643
  %357 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value_uv649 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %357, i32 0, i32 156
  %358 = load i32, i32* %max_imgpel_value_uv649, align 4
  %359 = load i32, i32* %iaa, align 4
  %360 = load i32, i32* %i, align 4
  %361 = load i32, i32* %cr_MB_x, align 4
  %div650 = sdiv i32 %361, 2
  %sub651 = sub nsw i32 %360, %div650
  %add652 = add nsw i32 %sub651, 1
  %362 = load i32, i32* %ib, align 4
  %mul653 = mul nsw i32 %add652, %362
  %add654 = add nsw i32 %359, %mul653
  %363 = load i32, i32* %j, align 4
  %364 = load i32, i32* %cr_MB_y, align 4
  %div655 = sdiv i32 %364, 2
  %sub656 = sub nsw i32 %363, %div655
  %add657 = add nsw i32 %sub656, 1
  %365 = load i32, i32* %ic, align 4
  %mul658 = mul nsw i32 %add657, %365
  %add659 = add nsw i32 %add654, %mul658
  %add660 = add nsw i32 %add659, 16
  %shr661 = ashr i32 %add660, 5
  %cmp662 = icmp slt i32 %358, %shr661
  br i1 %cmp662, label %cond.true.664, label %cond.false.666

cond.true.664:                                    ; preds = %cond.false.648
  %366 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value_uv665 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %366, i32 0, i32 156
  %367 = load i32, i32* %max_imgpel_value_uv665, align 4
  br label %cond.end.679

cond.false.666:                                   ; preds = %cond.false.648
  %368 = load i32, i32* %iaa, align 4
  %369 = load i32, i32* %i, align 4
  %370 = load i32, i32* %cr_MB_x, align 4
  %div667 = sdiv i32 %370, 2
  %sub668 = sub nsw i32 %369, %div667
  %add669 = add nsw i32 %sub668, 1
  %371 = load i32, i32* %ib, align 4
  %mul670 = mul nsw i32 %add669, %371
  %add671 = add nsw i32 %368, %mul670
  %372 = load i32, i32* %j, align 4
  %373 = load i32, i32* %cr_MB_y, align 4
  %div672 = sdiv i32 %373, 2
  %sub673 = sub nsw i32 %372, %div672
  %add674 = add nsw i32 %sub673, 1
  %374 = load i32, i32* %ic, align 4
  %mul675 = mul nsw i32 %add674, %374
  %add676 = add nsw i32 %add671, %mul675
  %add677 = add nsw i32 %add676, 16
  %shr678 = ashr i32 %add677, 5
  br label %cond.end.679

cond.end.679:                                     ; preds = %cond.false.666, %cond.true.664
  %cond680 = phi i32 [ %367, %cond.true.664 ], [ %shr678, %cond.false.666 ]
  br label %cond.end.681

cond.end.681:                                     ; preds = %cond.end.679, %cond.true.647
  %cond682 = phi i32 [ 0, %cond.true.647 ], [ %cond680, %cond.end.679 ]
  %conv683 = trunc i32 %cond682 to i16
  %375 = load i32, i32* %j, align 4
  %idxprom684 = sext i32 %375 to i64
  %376 = load i32, i32* %i, align 4
  %idxprom685 = sext i32 %376 to i64
  %377 = load i32, i32* %uv, align 4
  %idxprom686 = sext i32 %377 to i64
  %378 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mprr_c687 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %378, i32 0, i32 44
  %arrayidx688 = getelementptr inbounds [2 x [4 x [16 x [16 x i16]]]], [2 x [4 x [16 x [16 x i16]]]]* %mprr_c687, i32 0, i64 %idxprom686
  %arrayidx689 = getelementptr inbounds [4 x [16 x [16 x i16]]], [4 x [16 x [16 x i16]]]* %arrayidx688, i32 0, i64 3
  %arrayidx690 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %arrayidx689, i32 0, i64 %idxprom685
  %arrayidx691 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx690, i32 0, i64 %idxprom684
  store i16 %conv683, i16* %arrayidx691, align 2
  br label %for.inc.692

for.inc.692:                                      ; preds = %cond.end.681
  %379 = load i32, i32* %i, align 4
  %inc693 = add nsw i32 %379, 1
  store i32 %inc693, i32* %i, align 4
  br label %for.cond.610

for.end.694:                                      ; preds = %for.cond.610
  br label %for.inc.695

for.inc.695:                                      ; preds = %for.end.694
  %380 = load i32, i32* %j, align 4
  %inc696 = add nsw i32 %380, 1
  store i32 %inc696, i32* %j, align 4
  br label %for.cond.606

for.end.697:                                      ; preds = %for.cond.606
  br label %if.end.698

if.end.698:                                       ; preds = %for.end.697, %land.lhs.true.502, %land.lhs.true.500, %land.lhs.true.497, %if.end.494
  br label %for.inc.699

for.inc.699:                                      ; preds = %if.end.698
  %381 = load i32, i32* %uv, align 4
  %inc700 = add nsw i32 %381, 1
  store i32 %inc700, i32* %uv, align 4
  br label %for.cond.90

for.end.701:                                      ; preds = %for.cond.90
  %382 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %rdopt = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %382, i32 0, i32 85
  %383 = load i32, i32* %rdopt, align 4
  %tobool702 = icmp ne i32 %383, 0
  br i1 %tobool702, label %if.end.824, label %if.then.703

if.then.703:                                      ; preds = %for.end.701
  store i32 2147483647, i32* %min_cost, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond.704

for.cond.704:                                     ; preds = %for.inc.710, %if.then.703
  %384 = load i32, i32* %i, align 4
  %385 = load i32, i32* %cr_MB_y, align 4
  %cmp705 = icmp slt i32 %384, %385
  br i1 %cmp705, label %for.body.707, label %for.end.712

for.body.707:                                     ; preds = %for.cond.704
  %386 = load i32, i32* %mb_nr, align 4
  %387 = load i32, i32* %i, align 4
  %388 = load i32, i32* %i, align 4
  %idxprom708 = sext i32 %388 to i64
  %arrayidx709 = getelementptr inbounds [17 x %struct.pix_pos], [17 x %struct.pix_pos]* %left, i32 0, i64 %idxprom708
  call void @getNeighbour(i32 %386, i32 0, i32 %387, i32 0, %struct.pix_pos* %arrayidx709)
  br label %for.inc.710

for.inc.710:                                      ; preds = %for.body.707
  %389 = load i32, i32* %i, align 4
  %inc711 = add nsw i32 %389, 1
  store i32 %inc711, i32* %i, align 4
  br label %for.cond.704

for.end.712:                                      ; preds = %for.cond.704
  store i32 0, i32* %mode, align 4
  br label %for.cond.713

for.cond.713:                                     ; preds = %for.inc.821, %for.end.712
  %390 = load i32, i32* %mode, align 4
  %cmp714 = icmp sle i32 %390, 3
  br i1 %cmp714, label %for.body.716, label %for.end.823

for.body.716:                                     ; preds = %for.cond.713
  %391 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %ChromaIntraDisable = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %391, i32 0, i32 75
  %392 = load i32, i32* %ChromaIntraDisable, align 4
  %cmp717 = icmp eq i32 %392, 1
  br i1 %cmp717, label %land.lhs.true.719, label %if.end.723

land.lhs.true.719:                                ; preds = %for.body.716
  %393 = load i32, i32* %mode, align 4
  %cmp720 = icmp ne i32 %393, 0
  br i1 %cmp720, label %if.then.722, label %if.end.723

if.then.722:                                      ; preds = %land.lhs.true.719
  br label %for.inc.821

if.end.723:                                       ; preds = %land.lhs.true.719, %for.body.716
  %394 = load i32, i32* %mode, align 4
  %cmp724 = icmp eq i32 %394, 2
  br i1 %cmp724, label %land.lhs.true.726, label %lor.lhs.false

land.lhs.true.726:                                ; preds = %if.end.723
  %395 = load i32, i32* %mb_available_up, align 4
  %tobool727 = icmp ne i32 %395, 0
  br i1 %tobool727, label %lor.lhs.false, label %if.then.749

lor.lhs.false:                                    ; preds = %land.lhs.true.726, %if.end.723
  %396 = load i32, i32* %mode, align 4
  %cmp728 = icmp eq i32 %396, 1
  br i1 %cmp728, label %land.lhs.true.730, label %lor.lhs.false.736

land.lhs.true.730:                                ; preds = %lor.lhs.false
  %arrayidx731 = getelementptr inbounds [2 x i32], [2 x i32]* %mb_available_left, i32 0, i64 0
  %397 = load i32, i32* %arrayidx731, align 4
  %tobool732 = icmp ne i32 %397, 0
  br i1 %tobool732, label %lor.lhs.false.733, label %if.then.749

lor.lhs.false.733:                                ; preds = %land.lhs.true.730
  %arrayidx734 = getelementptr inbounds [2 x i32], [2 x i32]* %mb_available_left, i32 0, i64 1
  %398 = load i32, i32* %arrayidx734, align 4
  %tobool735 = icmp ne i32 %398, 0
  br i1 %tobool735, label %lor.lhs.false.736, label %if.then.749

lor.lhs.false.736:                                ; preds = %lor.lhs.false.733, %lor.lhs.false
  %399 = load i32, i32* %mode, align 4
  %cmp737 = icmp eq i32 %399, 3
  br i1 %cmp737, label %land.lhs.true.739, label %if.end.750

land.lhs.true.739:                                ; preds = %lor.lhs.false.736
  %arrayidx740 = getelementptr inbounds [2 x i32], [2 x i32]* %mb_available_left, i32 0, i64 0
  %400 = load i32, i32* %arrayidx740, align 4
  %tobool741 = icmp ne i32 %400, 0
  br i1 %tobool741, label %lor.lhs.false.742, label %if.then.749

lor.lhs.false.742:                                ; preds = %land.lhs.true.739
  %arrayidx743 = getelementptr inbounds [2 x i32], [2 x i32]* %mb_available_left, i32 0, i64 1
  %401 = load i32, i32* %arrayidx743, align 4
  %tobool744 = icmp ne i32 %401, 0
  br i1 %tobool744, label %lor.lhs.false.745, label %if.then.749

lor.lhs.false.745:                                ; preds = %lor.lhs.false.742
  %402 = load i32, i32* %mb_available_up, align 4
  %tobool746 = icmp ne i32 %402, 0
  br i1 %tobool746, label %lor.lhs.false.747, label %if.then.749

lor.lhs.false.747:                                ; preds = %lor.lhs.false.745
  %403 = load i32, i32* %mb_available_up_left, align 4
  %tobool748 = icmp ne i32 %403, 0
  br i1 %tobool748, label %if.end.750, label %if.then.749

if.then.749:                                      ; preds = %lor.lhs.false.747, %lor.lhs.false.745, %lor.lhs.false.742, %land.lhs.true.739, %lor.lhs.false.733, %land.lhs.true.730, %land.lhs.true.726
  br label %for.inc.821

if.end.750:                                       ; preds = %lor.lhs.false.747, %lor.lhs.false.736
  store i32 0, i32* %cost, align 4
  store i32 0, i32* %uv, align 4
  br label %for.cond.751

for.cond.751:                                     ; preds = %for.inc.814, %if.end.750
  %404 = load i32, i32* %uv, align 4
  %cmp752 = icmp slt i32 %404, 2
  br i1 %cmp752, label %for.body.754, label %for.end.816

for.body.754:                                     ; preds = %for.cond.751
  %405 = load i32, i32* %uv, align 4
  %idxprom755 = sext i32 %405 to i64
  %406 = load i16***, i16**** @imgUV_org, align 8
  %arrayidx756 = getelementptr inbounds i16**, i16*** %406, i64 %idxprom755
  %407 = load i16**, i16*** %arrayidx756, align 8
  store i16** %407, i16*** %image, align 8
  store i32 0, i32* %block_y, align 4
  br label %for.cond.757

for.cond.757:                                     ; preds = %for.inc.811, %for.body.754
  %408 = load i32, i32* %block_y, align 4
  %409 = load i32, i32* %cr_MB_y, align 4
  %cmp758 = icmp slt i32 %408, %409
  br i1 %cmp758, label %for.body.760, label %for.end.813

for.body.760:                                     ; preds = %for.cond.757
  store i32 0, i32* %block_x, align 4
  br label %for.cond.761

for.cond.761:                                     ; preds = %for.inc.808, %for.body.760
  %410 = load i32, i32* %block_x, align 4
  %411 = load i32, i32* %cr_MB_x, align 4
  %cmp762 = icmp slt i32 %410, %411
  br i1 %cmp762, label %for.body.764, label %for.end.810

for.body.764:                                     ; preds = %for.cond.761
  store i32 0, i32* %k, align 4
  %412 = load i32, i32* %block_y, align 4
  store i32 %412, i32* %j, align 4
  br label %for.cond.765

for.cond.765:                                     ; preds = %for.inc.804, %for.body.764
  %413 = load i32, i32* %j, align 4
  %414 = load i32, i32* %block_y, align 4
  %add766 = add nsw i32 %414, 4
  %cmp767 = icmp slt i32 %413, %add766
  br i1 %cmp767, label %for.body.769, label %for.end.806

for.body.769:                                     ; preds = %for.cond.765
  %415 = load i32, i32* %block_x, align 4
  store i32 %415, i32* %i, align 4
  br label %for.cond.770

for.cond.770:                                     ; preds = %for.inc.800, %for.body.769
  %416 = load i32, i32* %i, align 4
  %417 = load i32, i32* %block_x, align 4
  %add771 = add nsw i32 %417, 4
  %cmp772 = icmp slt i32 %416, %add771
  br i1 %cmp772, label %for.body.774, label %for.end.803

for.body.774:                                     ; preds = %for.cond.770
  %418 = load i32, i32* %j, align 4
  %idxprom775 = sext i32 %418 to i64
  %arrayidx776 = getelementptr inbounds [17 x %struct.pix_pos], [17 x %struct.pix_pos]* %left, i32 0, i64 %idxprom775
  %pos_x777 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %arrayidx776, i32 0, i32 4
  %419 = load i32, i32* %pos_x777, align 4
  %420 = load i32, i32* %i, align 4
  %add778 = add nsw i32 %419, %420
  %idxprom779 = sext i32 %add778 to i64
  %421 = load i32, i32* %j, align 4
  %idxprom780 = sext i32 %421 to i64
  %arrayidx781 = getelementptr inbounds [17 x %struct.pix_pos], [17 x %struct.pix_pos]* %left, i32 0, i64 %idxprom780
  %pos_y782 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %arrayidx781, i32 0, i32 5
  %422 = load i32, i32* %pos_y782, align 4
  %idxprom783 = sext i32 %422 to i64
  %423 = load i16**, i16*** %image, align 8
  %arrayidx784 = getelementptr inbounds i16*, i16** %423, i64 %idxprom783
  %424 = load i16*, i16** %arrayidx784, align 8
  %arrayidx785 = getelementptr inbounds i16, i16* %424, i64 %idxprom779
  %425 = load i16, i16* %arrayidx785, align 2
  %conv786 = zext i16 %425 to i32
  %426 = load i32, i32* %j, align 4
  %idxprom787 = sext i32 %426 to i64
  %427 = load i32, i32* %i, align 4
  %idxprom788 = sext i32 %427 to i64
  %428 = load i32, i32* %mode, align 4
  %idxprom789 = sext i32 %428 to i64
  %429 = load i32, i32* %uv, align 4
  %idxprom790 = sext i32 %429 to i64
  %430 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mprr_c791 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %430, i32 0, i32 44
  %arrayidx792 = getelementptr inbounds [2 x [4 x [16 x [16 x i16]]]], [2 x [4 x [16 x [16 x i16]]]]* %mprr_c791, i32 0, i64 %idxprom790
  %arrayidx793 = getelementptr inbounds [4 x [16 x [16 x i16]]], [4 x [16 x [16 x i16]]]* %arrayidx792, i32 0, i64 %idxprom789
  %arrayidx794 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %arrayidx793, i32 0, i64 %idxprom788
  %arrayidx795 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx794, i32 0, i64 %idxprom787
  %431 = load i16, i16* %arrayidx795, align 2
  %conv796 = zext i16 %431 to i32
  %sub797 = sub nsw i32 %conv786, %conv796
  %432 = load i32, i32* %k, align 4
  %idxprom798 = sext i32 %432 to i64
  %arrayidx799 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i32 0, i64 %idxprom798
  store i32 %sub797, i32* %arrayidx799, align 4
  br label %for.inc.800

for.inc.800:                                      ; preds = %for.body.774
  %433 = load i32, i32* %i, align 4
  %inc801 = add nsw i32 %433, 1
  store i32 %inc801, i32* %i, align 4
  %434 = load i32, i32* %k, align 4
  %inc802 = add nsw i32 %434, 1
  store i32 %inc802, i32* %k, align 4
  br label %for.cond.770

for.end.803:                                      ; preds = %for.cond.770
  br label %for.inc.804

for.inc.804:                                      ; preds = %for.end.803
  %435 = load i32, i32* %j, align 4
  %inc805 = add nsw i32 %435, 1
  store i32 %inc805, i32* %j, align 4
  br label %for.cond.765

for.end.806:                                      ; preds = %for.cond.765
  %arraydecay = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i32 0, i32 0
  %436 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamard = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %436, i32 0, i32 6
  %437 = load i32, i32* %hadamard, align 4
  %call = call i32 @SATD(i32* %arraydecay, i32 %437)
  %438 = load i32, i32* %cost, align 4
  %add807 = add nsw i32 %438, %call
  store i32 %add807, i32* %cost, align 4
  br label %for.inc.808

for.inc.808:                                      ; preds = %for.end.806
  %439 = load i32, i32* %block_x, align 4
  %add809 = add nsw i32 %439, 4
  store i32 %add809, i32* %block_x, align 4
  br label %for.cond.761

for.end.810:                                      ; preds = %for.cond.761
  br label %for.inc.811

for.inc.811:                                      ; preds = %for.end.810
  %440 = load i32, i32* %block_y, align 4
  %add812 = add nsw i32 %440, 4
  store i32 %add812, i32* %block_y, align 4
  br label %for.cond.757

for.end.813:                                      ; preds = %for.cond.757
  br label %for.inc.814

for.inc.814:                                      ; preds = %for.end.813
  %441 = load i32, i32* %uv, align 4
  %inc815 = add nsw i32 %441, 1
  store i32 %inc815, i32* %uv, align 4
  br label %for.cond.751

for.end.816:                                      ; preds = %for.cond.751
  %442 = load i32, i32* %cost, align 4
  %443 = load i32, i32* %min_cost, align 4
  %cmp817 = icmp slt i32 %442, %443
  br i1 %cmp817, label %if.then.819, label %if.end.820

if.then.819:                                      ; preds = %for.end.816
  %444 = load i32, i32* %mode, align 4
  store i32 %444, i32* %best_mode, align 4
  %445 = load i32, i32* %cost, align 4
  store i32 %445, i32* %min_cost, align 4
  br label %if.end.820

if.end.820:                                       ; preds = %if.then.819, %for.end.816
  br label %for.inc.821

for.inc.821:                                      ; preds = %if.end.820, %if.then.749, %if.then.722
  %446 = load i32, i32* %mode, align 4
  %inc822 = add nsw i32 %446, 1
  store i32 %inc822, i32* %mode, align 4
  br label %for.cond.713

for.end.823:                                      ; preds = %for.cond.713
  %447 = load i32, i32* %best_mode, align 4
  %448 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %c_ipred_mode = getelementptr inbounds %struct.macroblock, %struct.macroblock* %448, i32 0, i32 20
  store i32 %447, i32* %c_ipred_mode, align 4
  br label %if.end.824

if.end.824:                                       ; preds = %for.end.823, %for.end.701
  ret void
}

declare void @getNeighbour(i32, i32, i32, i32, %struct.pix_pos*) #1

; Function Attrs: nounwind uwtable
define i32 @ZeroRef(%struct.macroblock* %currMB) #0 {
entry:
  %retval = alloca i32, align 4
  %currMB.addr = alloca %struct.macroblock*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store %struct.macroblock* %currMB, %struct.macroblock** %currMB.addr, align 8
  store i32 0, i32* %j, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc.10, %entry
  %0 = load i32, i32* %j, align 4
  %cmp = icmp slt i32 %0, 4
  br i1 %cmp, label %for.body, label %for.end.12

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4
  br label %for.cond.1

for.cond.1:                                       ; preds = %for.inc, %for.body
  %1 = load i32, i32* %i, align 4
  %cmp2 = icmp slt i32 %1, 4
  br i1 %cmp2, label %for.body.3, label %for.end

for.body.3:                                       ; preds = %for.cond.1
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %block_y = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 32
  %3 = load i32, i32* %block_y, align 4
  %4 = load i32, i32* %j, align 4
  %add = add nsw i32 %3, %4
  %idxprom = sext i32 %add to i64
  %5 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %block_x = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %5, i32 0, i32 31
  %6 = load i32, i32* %block_x, align 4
  %7 = load i32, i32* %i, align 4
  %add4 = add nsw i32 %6, %7
  %idxprom5 = sext i32 %add4 to i64
  %8 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %8, i32 0, i32 32
  %9 = load i16***, i16**** %ref_idx, align 8
  %arrayidx = getelementptr inbounds i16**, i16*** %9, i64 0
  %10 = load i16**, i16*** %arrayidx, align 8
  %arrayidx6 = getelementptr inbounds i16*, i16** %10, i64 %idxprom5
  %11 = load i16*, i16** %arrayidx6, align 8
  %arrayidx7 = getelementptr inbounds i16, i16* %11, i64 %idxprom
  %12 = load i16, i16* %arrayidx7, align 2
  %conv = sext i16 %12 to i32
  %cmp8 = icmp ne i32 %conv, 0
  br i1 %cmp8, label %if.then, label %if.end

if.then:                                          ; preds = %for.body.3
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %for.body.3
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %13 = load i32, i32* %i, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond.1

for.end:                                          ; preds = %for.cond.1
  br label %for.inc.10

for.inc.10:                                       ; preds = %for.end
  %14 = load i32, i32* %j, align 4
  %inc11 = add nsw i32 %14, 1
  store i32 %inc11, i32* %j, align 4
  br label %for.cond

for.end.12:                                       ; preds = %for.cond
  store i32 1, i32* %retval
  br label %return

return:                                           ; preds = %for.end.12, %if.then
  %15 = load i32, i32* %retval
  ret i32 %15
}

; Function Attrs: nounwind uwtable
define i32 @MBType2Value(%struct.macroblock* %currMB) #0 {
entry:
  %retval = alloca i32, align 4
  %currMB.addr = alloca %struct.macroblock*, align 8
  %mbtype = alloca i32, align 4
  %pdir0 = alloca i32, align 4
  %pdir1 = alloca i32, align 4
  store %struct.macroblock* %currMB, %struct.macroblock** %currMB.addr, align 8
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i32 0, i32 6
  %1 = load i32, i32* %type, align 4
  %cmp = icmp ne i32 %1, 1
  br i1 %cmp, label %if.then, label %if.else.22

if.then:                                          ; preds = %entry
  %2 = load %struct.macroblock*, %struct.macroblock** %currMB.addr, align 8
  %mb_type = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i32 0, i32 8
  %3 = load i32, i32* %mb_type, align 4
  %cmp1 = icmp eq i32 %3, 13
  br i1 %cmp1, label %if.then.4, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then
  %4 = load %struct.macroblock*, %struct.macroblock** %currMB.addr, align 8
  %mb_type2 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %4, i32 0, i32 8
  %5 = load i32, i32* %mb_type2, align 4
  %cmp3 = icmp eq i32 %5, 9
  br i1 %cmp3, label %if.then.4, label %if.else

if.then.4:                                        ; preds = %lor.lhs.false, %if.then
  %6 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type5 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %6, i32 0, i32 6
  %7 = load i32, i32* %type5, align 4
  %cmp6 = icmp eq i32 %7, 2
  %cond = select i1 %cmp6, i32 0, i32 6
  store i32 %cond, i32* %retval
  br label %return

if.else:                                          ; preds = %lor.lhs.false
  %8 = load %struct.macroblock*, %struct.macroblock** %currMB.addr, align 8
  %mb_type7 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %8, i32 0, i32 8
  %9 = load i32, i32* %mb_type7, align 4
  %cmp8 = icmp eq i32 %9, 10
  br i1 %cmp8, label %if.then.9, label %if.else.13

if.then.9:                                        ; preds = %if.else
  %10 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type10 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %10, i32 0, i32 6
  %11 = load i32, i32* %type10, align 4
  %cmp11 = icmp eq i32 %11, 2
  %cond12 = select i1 %cmp11, i32 0, i32 6
  %12 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %i16offset = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %12, i32 0, i32 85
  %13 = load i32, i32* %i16offset, align 4
  %add = add nsw i32 %cond12, %13
  store i32 %add, i32* %retval
  br label %return

if.else.13:                                       ; preds = %if.else
  %14 = load %struct.macroblock*, %struct.macroblock** %currMB.addr, align 8
  %mb_type14 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %14, i32 0, i32 8
  %15 = load i32, i32* %mb_type14, align 4
  %cmp15 = icmp eq i32 %15, 8
  br i1 %cmp15, label %if.then.16, label %if.else.20

if.then.16:                                       ; preds = %if.else.13
  %16 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %symbol_mode = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %16, i32 0, i32 59
  %17 = load i32, i32* %symbol_mode, align 4
  %cmp17 = icmp eq i32 %17, 0
  br i1 %cmp17, label %land.lhs.true, label %if.else.19

land.lhs.true:                                    ; preds = %if.then.16
  %18 = load %struct.macroblock*, %struct.macroblock** %currMB.addr, align 8
  %call = call i32 @ZeroRef(%struct.macroblock* %18)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then.18, label %if.else.19

if.then.18:                                       ; preds = %land.lhs.true
  store i32 5, i32* %retval
  br label %return

if.else.19:                                       ; preds = %land.lhs.true, %if.then.16
  store i32 4, i32* %retval
  br label %return

if.else.20:                                       ; preds = %if.else.13
  %19 = load %struct.macroblock*, %struct.macroblock** %currMB.addr, align 8
  %mb_type21 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %19, i32 0, i32 8
  %20 = load i32, i32* %mb_type21, align 4
  store i32 %20, i32* %retval
  br label %return

if.else.22:                                       ; preds = %entry
  %21 = load %struct.macroblock*, %struct.macroblock** %currMB.addr, align 8
  %mb_type23 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %21, i32 0, i32 8
  %22 = load i32, i32* %mb_type23, align 4
  store i32 %22, i32* %mbtype, align 4
  %23 = load %struct.macroblock*, %struct.macroblock** %currMB.addr, align 8
  %b8pdir = getelementptr inbounds %struct.macroblock, %struct.macroblock* %23, i32 0, i32 15
  %arrayidx = getelementptr inbounds [4 x i32], [4 x i32]* %b8pdir, i32 0, i64 0
  %24 = load i32, i32* %arrayidx, align 4
  store i32 %24, i32* %pdir0, align 4
  %25 = load %struct.macroblock*, %struct.macroblock** %currMB.addr, align 8
  %b8pdir24 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %25, i32 0, i32 15
  %arrayidx25 = getelementptr inbounds [4 x i32], [4 x i32]* %b8pdir24, i32 0, i64 3
  %26 = load i32, i32* %arrayidx25, align 4
  store i32 %26, i32* %pdir1, align 4
  %27 = load i32, i32* %mbtype, align 4
  %cmp26 = icmp eq i32 %27, 0
  br i1 %cmp26, label %if.then.27, label %if.else.28

if.then.27:                                       ; preds = %if.else.22
  store i32 0, i32* %retval
  br label %return

if.else.28:                                       ; preds = %if.else.22
  %28 = load i32, i32* %mbtype, align 4
  %cmp29 = icmp eq i32 %28, 9
  br i1 %cmp29, label %if.then.32, label %lor.lhs.false.30

lor.lhs.false.30:                                 ; preds = %if.else.28
  %29 = load i32, i32* %mbtype, align 4
  %cmp31 = icmp eq i32 %29, 13
  br i1 %cmp31, label %if.then.32, label %if.else.33

if.then.32:                                       ; preds = %lor.lhs.false.30, %if.else.28
  store i32 23, i32* %retval
  br label %return

if.else.33:                                       ; preds = %lor.lhs.false.30
  %30 = load i32, i32* %mbtype, align 4
  %cmp34 = icmp eq i32 %30, 10
  br i1 %cmp34, label %if.then.35, label %if.else.38

if.then.35:                                       ; preds = %if.else.33
  %31 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %i16offset36 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %31, i32 0, i32 85
  %32 = load i32, i32* %i16offset36, align 4
  %add37 = add nsw i32 23, %32
  store i32 %add37, i32* %retval
  br label %return

if.else.38:                                       ; preds = %if.else.33
  %33 = load i32, i32* %mbtype, align 4
  %cmp39 = icmp eq i32 %33, 8
  br i1 %cmp39, label %if.then.40, label %if.else.41

if.then.40:                                       ; preds = %if.else.38
  store i32 22, i32* %retval
  br label %return

if.else.41:                                       ; preds = %if.else.38
  %34 = load i32, i32* %mbtype, align 4
  %cmp42 = icmp eq i32 %34, 1
  br i1 %cmp42, label %if.then.43, label %if.else.45

if.then.43:                                       ; preds = %if.else.41
  %35 = load i32, i32* %pdir0, align 4
  %idxprom = sext i32 %35 to i64
  %arrayidx44 = getelementptr inbounds [3 x i32], [3 x i32]* @MBType2Value.dir1offset, i32 0, i64 %idxprom
  %36 = load i32, i32* %arrayidx44, align 4
  store i32 %36, i32* %retval
  br label %return

if.else.45:                                       ; preds = %if.else.41
  %37 = load i32, i32* %mbtype, align 4
  %cmp46 = icmp eq i32 %37, 2
  br i1 %cmp46, label %if.then.47, label %if.else.53

if.then.47:                                       ; preds = %if.else.45
  %38 = load i32, i32* %pdir1, align 4
  %idxprom48 = sext i32 %38 to i64
  %39 = load i32, i32* %pdir0, align 4
  %idxprom49 = sext i32 %39 to i64
  %arrayidx50 = getelementptr inbounds [3 x [3 x i32]], [3 x [3 x i32]]* @MBType2Value.dir2offset, i32 0, i64 %idxprom49
  %arrayidx51 = getelementptr inbounds [3 x i32], [3 x i32]* %arrayidx50, i32 0, i64 %idxprom48
  %40 = load i32, i32* %arrayidx51, align 4
  %add52 = add nsw i32 4, %40
  store i32 %add52, i32* %retval
  br label %return

if.else.53:                                       ; preds = %if.else.45
  %41 = load i32, i32* %pdir1, align 4
  %idxprom54 = sext i32 %41 to i64
  %42 = load i32, i32* %pdir0, align 4
  %idxprom55 = sext i32 %42 to i64
  %arrayidx56 = getelementptr inbounds [3 x [3 x i32]], [3 x [3 x i32]]* @MBType2Value.dir2offset, i32 0, i64 %idxprom55
  %arrayidx57 = getelementptr inbounds [3 x i32], [3 x i32]* %arrayidx56, i32 0, i64 %idxprom54
  %43 = load i32, i32* %arrayidx57, align 4
  %add58 = add nsw i32 5, %43
  store i32 %add58, i32* %retval
  br label %return

return:                                           ; preds = %if.else.53, %if.then.47, %if.then.43, %if.then.40, %if.then.35, %if.then.32, %if.then.27, %if.else.20, %if.else.19, %if.then.18, %if.then.9, %if.then.4
  %44 = load i32, i32* %retval
  ret i32 %44
}

; Function Attrs: nounwind uwtable
define i32 @writeIntra4x4Modes(i32 %only_this_block) #0 {
entry:
  %only_this_block.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %bs_x = alloca i32, align 4
  %bs_y = alloca i32, align 4
  %ii = alloca i32, align 4
  %jj = alloca i32, align 4
  %block8x8 = alloca i32, align 4
  %rate = alloca i32, align 4
  %ipred_array = alloca [16 x i32], align 16
  %cont_array = alloca [16 x i32], align 16
  %ipred_number = alloca i32, align 4
  %currMB = alloca %struct.macroblock*, align 8
  %currSE = alloca %struct.syntaxelement*, align 8
  %bitCount = alloca i32*, align 8
  %currSlice = alloca %struct.Slice*, align 8
  %dataPart = alloca %struct.datapartition*, align 8
  %partMap = alloca i32*, align 8
  store i32 %only_this_block, i32* %only_this_block.addr, align 4
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i32 0, i32 3
  %1 = load i32, i32* %current_mb_nr, align 4
  %idxprom = sext i32 %1 to i64
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 51
  %3 = load %struct.macroblock*, %struct.macroblock** %mb_data, align 8
  %arrayidx = getelementptr inbounds %struct.macroblock, %struct.macroblock* %3, i64 %idxprom
  store %struct.macroblock* %arrayidx, %struct.macroblock** %currMB, align 8
  %4 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %currSEnr = getelementptr inbounds %struct.macroblock, %struct.macroblock* %4, i32 0, i32 0
  %5 = load i32, i32* %currSEnr, align 4
  %idxprom1 = sext i32 %5 to i64
  %6 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %MB_SyntaxElements = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %6, i32 0, i32 52
  %arrayidx2 = getelementptr inbounds [1200 x %struct.syntaxelement], [1200 x %struct.syntaxelement]* %MB_SyntaxElements, i32 0, i64 %idxprom1
  store %struct.syntaxelement* %arrayidx2, %struct.syntaxelement** %currSE, align 8
  %7 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %bitcounter = getelementptr inbounds %struct.macroblock, %struct.macroblock* %7, i32 0, i32 5
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %bitcounter, i32 0, i32 0
  store i32* %arraydecay, i32** %bitCount, align 8
  %8 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %currentSlice = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %8, i32 0, i32 50
  %9 = load %struct.Slice*, %struct.Slice** %currentSlice, align 8
  store %struct.Slice* %9, %struct.Slice** %currSlice, align 8
  %10 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %partition_mode = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %10, i32 0, i32 61
  %11 = load i32, i32* %partition_mode, align 4
  %idxprom3 = sext i32 %11 to i64
  %arrayidx4 = getelementptr inbounds [2 x i32*], [2 x i32*]* @assignSE2partition, i32 0, i64 %idxprom3
  %12 = load i32*, i32** %arrayidx4, align 8
  store i32* %12, i32** %partMap, align 8
  store i32 0, i32* %ipred_number, align 4
  store i32 0, i32* %block8x8, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc.45, %entry
  %13 = load i32, i32* %block8x8, align 4
  %cmp = icmp slt i32 %13, 4
  br i1 %cmp, label %for.body, label %for.end.47

for.body:                                         ; preds = %for.cond
  %14 = load i32, i32* %block8x8, align 4
  %idxprom5 = sext i32 %14 to i64
  %15 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %b8mode = getelementptr inbounds %struct.macroblock, %struct.macroblock* %15, i32 0, i32 14
  %arrayidx6 = getelementptr inbounds [4 x i32], [4 x i32]* %b8mode, i32 0, i64 %idxprom5
  %16 = load i32, i32* %arrayidx6, align 4
  %cmp7 = icmp eq i32 %16, 11
  br i1 %cmp7, label %land.lhs.true, label %lor.lhs.false.10

land.lhs.true:                                    ; preds = %for.body
  %17 = load i32, i32* %only_this_block.addr, align 4
  %cmp8 = icmp slt i32 %17, 0
  br i1 %cmp8, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true
  %18 = load i32, i32* %only_this_block.addr, align 4
  %19 = load i32, i32* %block8x8, align 4
  %cmp9 = icmp eq i32 %18, %19
  br i1 %cmp9, label %if.then, label %lor.lhs.false.10

lor.lhs.false.10:                                 ; preds = %lor.lhs.false, %for.body
  %20 = load i32, i32* %block8x8, align 4
  %idxprom11 = sext i32 %20 to i64
  %21 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %b8mode12 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %21, i32 0, i32 14
  %arrayidx13 = getelementptr inbounds [4 x i32], [4 x i32]* %b8mode12, i32 0, i64 %idxprom11
  %22 = load i32, i32* %arrayidx13, align 4
  %cmp14 = icmp eq i32 %22, 13
  br i1 %cmp14, label %land.lhs.true.15, label %if.end

land.lhs.true.15:                                 ; preds = %lor.lhs.false.10
  %23 = load i32, i32* %only_this_block.addr, align 4
  %cmp16 = icmp slt i32 %23, 0
  br i1 %cmp16, label %if.then, label %lor.lhs.false.17

lor.lhs.false.17:                                 ; preds = %land.lhs.true.15
  %24 = load i32, i32* %only_this_block.addr, align 4
  %25 = load i32, i32* %block8x8, align 4
  %cmp18 = icmp eq i32 %24, %25
  br i1 %cmp18, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false.17, %land.lhs.true.15, %lor.lhs.false, %land.lhs.true
  %26 = load i32, i32* %block8x8, align 4
  %idxprom19 = sext i32 %26 to i64
  %27 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %b8mode20 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %27, i32 0, i32 14
  %arrayidx21 = getelementptr inbounds [4 x i32], [4 x i32]* %b8mode20, i32 0, i64 %idxprom19
  %28 = load i32, i32* %arrayidx21, align 4
  %cmp22 = icmp eq i32 %28, 13
  %cond = select i1 %cmp22, i32 8, i32 4
  store i32 %cond, i32* %bs_y, align 4
  store i32 %cond, i32* %bs_x, align 4
  %29 = load i32, i32* %bs_x, align 4
  %shr = ashr i32 %29, 2
  store i32 %shr, i32* %ii, align 4
  %30 = load i32, i32* %bs_y, align 4
  %shr23 = ashr i32 %30, 2
  store i32 %shr23, i32* %jj, align 4
  store i32 0, i32* %j, align 4
  br label %for.cond.24

for.cond.24:                                      ; preds = %for.inc.42, %if.then
  %31 = load i32, i32* %j, align 4
  %cmp25 = icmp slt i32 %31, 2
  br i1 %cmp25, label %for.body.26, label %for.end.44

for.body.26:                                      ; preds = %for.cond.24
  store i32 0, i32* %i, align 4
  br label %for.cond.27

for.cond.27:                                      ; preds = %for.inc, %for.body.26
  %32 = load i32, i32* %i, align 4
  %cmp28 = icmp slt i32 %32, 2
  br i1 %cmp28, label %for.body.29, label %for.end

for.body.29:                                      ; preds = %for.cond.27
  %33 = load i32, i32* %block8x8, align 4
  %shl = shl i32 %33, 2
  %34 = load i32, i32* %j, align 4
  %shl30 = shl i32 %34, 1
  %or = or i32 %shl, %shl30
  %35 = load i32, i32* %i, align 4
  %or31 = or i32 %or, %35
  %idxprom32 = sext i32 %or31 to i64
  %36 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %intra_pred_modes = getelementptr inbounds %struct.macroblock, %struct.macroblock* %36, i32 0, i32 10
  %arrayidx33 = getelementptr inbounds [16 x i32], [16 x i32]* %intra_pred_modes, i32 0, i64 %idxprom32
  %37 = load i32, i32* %arrayidx33, align 4
  %38 = load i32, i32* %ipred_number, align 4
  %idxprom34 = sext i32 %38 to i64
  %arrayidx35 = getelementptr inbounds [16 x i32], [16 x i32]* %ipred_array, i32 0, i64 %idxprom34
  store i32 %37, i32* %arrayidx35, align 4
  %39 = load i32, i32* %block8x8, align 4
  %shl36 = shl i32 %39, 2
  %40 = load i32, i32* %j, align 4
  %shl37 = shl i32 %40, 1
  %add = add nsw i32 %shl36, %shl37
  %41 = load i32, i32* %i, align 4
  %add38 = add nsw i32 %add, %41
  %42 = load i32, i32* %ipred_number, align 4
  %idxprom39 = sext i32 %42 to i64
  %arrayidx40 = getelementptr inbounds [16 x i32], [16 x i32]* %cont_array, i32 0, i64 %idxprom39
  store i32 %add38, i32* %arrayidx40, align 4
  %43 = load i32, i32* %ipred_number, align 4
  %inc = add nsw i32 %43, 1
  store i32 %inc, i32* %ipred_number, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body.29
  %44 = load i32, i32* %ii, align 4
  %45 = load i32, i32* %i, align 4
  %add41 = add nsw i32 %45, %44
  store i32 %add41, i32* %i, align 4
  br label %for.cond.27

for.end:                                          ; preds = %for.cond.27
  br label %for.inc.42

for.inc.42:                                       ; preds = %for.end
  %46 = load i32, i32* %jj, align 4
  %47 = load i32, i32* %j, align 4
  %add43 = add nsw i32 %47, %46
  store i32 %add43, i32* %j, align 4
  br label %for.cond.24

for.end.44:                                       ; preds = %for.cond.24
  br label %if.end

if.end:                                           ; preds = %for.end.44, %lor.lhs.false.17, %lor.lhs.false.10
  br label %for.inc.45

for.inc.45:                                       ; preds = %if.end
  %48 = load i32, i32* %block8x8, align 4
  %inc46 = add nsw i32 %48, 1
  store i32 %inc46, i32* %block8x8, align 4
  br label %for.cond

for.end.47:                                       ; preds = %for.cond
  store i32 0, i32* %rate, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond.48

for.cond.48:                                      ; preds = %for.inc.72, %for.end.47
  %49 = load i32, i32* %i, align 4
  %50 = load i32, i32* %ipred_number, align 4
  %cmp49 = icmp slt i32 %49, %50
  br i1 %cmp49, label %for.body.50, label %for.end.74

for.body.50:                                      ; preds = %for.cond.48
  %51 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %IntraChromaPredModeFlag = getelementptr inbounds %struct.macroblock, %struct.macroblock* %51, i32 0, i32 21
  store i32 1, i32* %IntraChromaPredModeFlag, align 4
  %52 = load i32, i32* %i, align 4
  %idxprom51 = sext i32 %52 to i64
  %arrayidx52 = getelementptr inbounds [16 x i32], [16 x i32]* %cont_array, i32 0, i64 %idxprom51
  %53 = load i32, i32* %arrayidx52, align 4
  %54 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %context = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %54, i32 0, i32 6
  store i32 %53, i32* %context, align 4
  %55 = load i32, i32* %i, align 4
  %idxprom53 = sext i32 %55 to i64
  %arrayidx54 = getelementptr inbounds [16 x i32], [16 x i32]* %ipred_array, i32 0, i64 %idxprom53
  %56 = load i32, i32* %arrayidx54, align 4
  %57 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %value1 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %57, i32 0, i32 1
  store i32 %56, i32* %value1, align 4
  %58 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %value2 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %58, i32 0, i32 2
  store i32 0, i32* %value2, align 4
  %59 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %symbol_mode = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %59, i32 0, i32 59
  %60 = load i32, i32* %symbol_mode, align 4
  %cmp55 = icmp ne i32 %60, 0
  br i1 %cmp55, label %if.then.56, label %if.end.57

if.then.56:                                       ; preds = %for.body.50
  %61 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %writing = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %61, i32 0, i32 9
  store void (%struct.syntaxelement*, %struct.EncodingEnvironment*)* @writeIntraPredMode_CABAC, void (%struct.syntaxelement*, %struct.EncodingEnvironment*)** %writing, align 8
  br label %if.end.57

if.end.57:                                        ; preds = %if.then.56, %for.body.50
  %62 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %type = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %62, i32 0, i32 0
  store i32 4, i32* %type, align 4
  %63 = load i32*, i32** %partMap, align 8
  %arrayidx58 = getelementptr inbounds i32, i32* %63, i64 4
  %64 = load i32, i32* %arrayidx58, align 4
  %idxprom59 = sext i32 %64 to i64
  %65 = load %struct.Slice*, %struct.Slice** %currSlice, align 8
  %partArr = getelementptr inbounds %struct.Slice, %struct.Slice* %65, i32 0, i32 6
  %66 = load %struct.datapartition*, %struct.datapartition** %partArr, align 8
  %arrayidx60 = getelementptr inbounds %struct.datapartition, %struct.datapartition* %66, i64 %idxprom59
  store %struct.datapartition* %arrayidx60, %struct.datapartition** %dataPart, align 8
  %67 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %symbol_mode61 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %67, i32 0, i32 59
  %68 = load i32, i32* %symbol_mode61, align 4
  %cmp62 = icmp eq i32 %68, 0
  br i1 %cmp62, label %if.then.63, label %if.else

if.then.63:                                       ; preds = %if.end.57
  %69 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %70 = load %struct.datapartition*, %struct.datapartition** %dataPart, align 8
  %call = call i32 @writeSyntaxElement_Intra4x4PredictionMode(%struct.syntaxelement* %69, %struct.datapartition* %70)
  br label %if.end.65

if.else:                                          ; preds = %if.end.57
  %71 = load %struct.datapartition*, %struct.datapartition** %dataPart, align 8
  %writeSyntaxElement = getelementptr inbounds %struct.datapartition, %struct.datapartition* %71, i32 0, i32 2
  %72 = load i32 (%struct.syntaxelement*, %struct.datapartition*)*, i32 (%struct.syntaxelement*, %struct.datapartition*)** %writeSyntaxElement, align 8
  %73 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %74 = load %struct.datapartition*, %struct.datapartition** %dataPart, align 8
  %call64 = call i32 %72(%struct.syntaxelement* %73, %struct.datapartition* %74)
  br label %if.end.65

if.end.65:                                        ; preds = %if.else, %if.then.63
  %75 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %len = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %75, i32 0, i32 3
  %76 = load i32, i32* %len, align 4
  %77 = load i32*, i32** %bitCount, align 8
  %arrayidx66 = getelementptr inbounds i32, i32* %77, i64 5
  %78 = load i32, i32* %arrayidx66, align 4
  %add67 = add nsw i32 %78, %76
  store i32 %add67, i32* %arrayidx66, align 4
  %79 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %len68 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %79, i32 0, i32 3
  %80 = load i32, i32* %len68, align 4
  %81 = load i32, i32* %rate, align 4
  %add69 = add nsw i32 %81, %80
  store i32 %add69, i32* %rate, align 4
  %82 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %incdec.ptr = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %82, i32 1
  store %struct.syntaxelement* %incdec.ptr, %struct.syntaxelement** %currSE, align 8
  %83 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %currSEnr70 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %83, i32 0, i32 0
  %84 = load i32, i32* %currSEnr70, align 4
  %inc71 = add nsw i32 %84, 1
  store i32 %inc71, i32* %currSEnr70, align 4
  br label %for.inc.72

for.inc.72:                                       ; preds = %if.end.65
  %85 = load i32, i32* %i, align 4
  %inc73 = add nsw i32 %85, 1
  store i32 %inc73, i32* %i, align 4
  br label %for.cond.48

for.end.74:                                       ; preds = %for.cond.48
  %86 = load i32, i32* %rate, align 4
  ret i32 %86
}

declare void @writeIntraPredMode_CABAC(%struct.syntaxelement*, %struct.EncodingEnvironment*) #1

declare i32 @writeSyntaxElement_Intra4x4PredictionMode(%struct.syntaxelement*, %struct.datapartition*) #1

; Function Attrs: nounwind uwtable
define i32 @B8Mode2Value(i32 %b8mode, i32 %b8pdir) #0 {
entry:
  %retval = alloca i32, align 4
  %b8mode.addr = alloca i32, align 4
  %b8pdir.addr = alloca i32, align 4
  store i32 %b8mode, i32* %b8mode.addr, align 4
  store i32 %b8pdir, i32* %b8pdir.addr, align 4
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i32 0, i32 6
  %1 = load i32, i32* %type, align 4
  %cmp = icmp ne i32 %1, 1
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %b8mode.addr, align 4
  %sub = sub nsw i32 %2, 4
  store i32 %sub, i32* %retval
  br label %return

if.else:                                          ; preds = %entry
  %3 = load i32, i32* %b8mode.addr, align 4
  %idxprom = sext i32 %3 to i64
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* @B8Mode2Value.b8start, i32 0, i64 %idxprom
  %4 = load i32, i32* %arrayidx, align 4
  %5 = load i32, i32* %b8mode.addr, align 4
  %idxprom1 = sext i32 %5 to i64
  %arrayidx2 = getelementptr inbounds [8 x i32], [8 x i32]* @B8Mode2Value.b8inc, i32 0, i64 %idxprom1
  %6 = load i32, i32* %arrayidx2, align 4
  %7 = load i32, i32* %b8pdir.addr, align 4
  %mul = mul nsw i32 %6, %7
  %add = add nsw i32 %4, %mul
  store i32 %add, i32* %retval
  br label %return

return:                                           ; preds = %if.else, %if.then
  %8 = load i32, i32* %retval
  ret i32 %8
}

; Function Attrs: nounwind uwtable
define i32 @writeMBLayer(i32 %rdopt) #0 {
entry:
  %rdopt.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %mb_nr = alloca i32, align 4
  %currMB = alloca %struct.macroblock*, align 8
  %prevMB = alloca %struct.macroblock*, align 8
  %currSE = alloca %struct.syntaxelement*, align 8
  %bitCount = alloca i32*, align 8
  %currSlice = alloca %struct.Slice*, align 8
  %dataPart = alloca %struct.datapartition*, align 8
  %partMap = alloca i32*, align 8
  %no_bits = alloca i32, align 4
  %skip = alloca i32, align 4
  %mb_type18 = alloca i32, align 4
  %prevMbSkipped = alloca i32, align 4
  %mb_field_tmp = alloca i32, align 4
  %topMB = alloca %struct.macroblock*, align 8
  %WriteFrameFieldMBInHeader = alloca i32, align 4
  store i32 %rdopt, i32* %rdopt.addr, align 4
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i32 0, i32 3
  %1 = load i32, i32* %current_mb_nr, align 4
  store i32 %1, i32* %mb_nr, align 4
  %2 = load i32, i32* %mb_nr, align 4
  %idxprom = sext i32 %2 to i64
  %3 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %3, i32 0, i32 51
  %4 = load %struct.macroblock*, %struct.macroblock** %mb_data, align 8
  %arrayidx = getelementptr inbounds %struct.macroblock, %struct.macroblock* %4, i64 %idxprom
  store %struct.macroblock* %arrayidx, %struct.macroblock** %currMB, align 8
  %5 = load i32, i32* %mb_nr, align 4
  %tobool = icmp ne i32 %5, 0
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %6 = load i32, i32* %mb_nr, align 4
  %sub = sub nsw i32 %6, 1
  %idxprom1 = sext i32 %sub to i64
  %7 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data2 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %7, i32 0, i32 51
  %8 = load %struct.macroblock*, %struct.macroblock** %mb_data2, align 8
  %arrayidx3 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %8, i64 %idxprom1
  br label %cond.end

cond.false:                                       ; preds = %entry
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.macroblock* [ %arrayidx3, %cond.true ], [ null, %cond.false ]
  store %struct.macroblock* %cond, %struct.macroblock** %prevMB, align 8
  %9 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %currSEnr = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i32 0, i32 0
  %10 = load i32, i32* %currSEnr, align 4
  %idxprom4 = sext i32 %10 to i64
  %11 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %MB_SyntaxElements = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %11, i32 0, i32 52
  %arrayidx5 = getelementptr inbounds [1200 x %struct.syntaxelement], [1200 x %struct.syntaxelement]* %MB_SyntaxElements, i32 0, i64 %idxprom4
  store %struct.syntaxelement* %arrayidx5, %struct.syntaxelement** %currSE, align 8
  %12 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %bitcounter = getelementptr inbounds %struct.macroblock, %struct.macroblock* %12, i32 0, i32 5
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %bitcounter, i32 0, i32 0
  store i32* %arraydecay, i32** %bitCount, align 8
  %13 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %currentSlice = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %13, i32 0, i32 50
  %14 = load %struct.Slice*, %struct.Slice** %currentSlice, align 8
  store %struct.Slice* %14, %struct.Slice** %currSlice, align 8
  %15 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %partition_mode = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %15, i32 0, i32 61
  %16 = load i32, i32* %partition_mode, align 4
  %idxprom6 = sext i32 %16 to i64
  %arrayidx7 = getelementptr inbounds [2 x i32*], [2 x i32*]* @assignSE2partition, i32 0, i64 %idxprom6
  %17 = load i32*, i32** %arrayidx7, align 8
  store i32* %17, i32** %partMap, align 8
  store i32 0, i32* %no_bits, align 4
  %18 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type = getelementptr inbounds %struct.macroblock, %struct.macroblock* %18, i32 0, i32 8
  %19 = load i32, i32* %mb_type, align 4
  %tobool8 = icmp ne i32 %19, 0
  br i1 %tobool8, label %cond.true.9, label %cond.false.10

cond.true.9:                                      ; preds = %cond.end
  br label %cond.end.16

cond.false.10:                                    ; preds = %cond.end
  %20 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %20, i32 0, i32 6
  %21 = load i32, i32* %type, align 4
  %cmp = icmp eq i32 %21, 1
  br i1 %cmp, label %cond.true.11, label %cond.false.13

cond.true.11:                                     ; preds = %cond.false.10
  %22 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %cbp = getelementptr inbounds %struct.macroblock, %struct.macroblock* %22, i32 0, i32 12
  %23 = load i32, i32* %cbp, align 4
  %tobool12 = icmp ne i32 %23, 0
  %lnot = xor i1 %tobool12, true
  %lnot.ext = zext i1 %lnot to i32
  br label %cond.end.14

cond.false.13:                                    ; preds = %cond.false.10
  br label %cond.end.14

cond.end.14:                                      ; preds = %cond.false.13, %cond.true.11
  %cond15 = phi i32 [ %lnot.ext, %cond.true.11 ], [ 1, %cond.false.13 ]
  br label %cond.end.16

cond.end.16:                                      ; preds = %cond.end.14, %cond.true.9
  %cond17 = phi i32 [ 0, %cond.true.9 ], [ %cond15, %cond.end.14 ]
  store i32 %cond17, i32* %skip, align 4
  store i32 0, i32* %prevMbSkipped, align 4
  store %struct.macroblock* null, %struct.macroblock** %topMB, align 8
  store i32 0, i32* %WriteFrameFieldMBInHeader, align 4
  %24 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %MbaffFrameFlag = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %24, i32 0, i32 90
  %25 = load i32, i32* %MbaffFrameFlag, align 4
  %tobool19 = icmp ne i32 %25, 0
  br i1 %tobool19, label %if.then, label %if.end.52

if.then:                                          ; preds = %cond.end.16
  %26 = load i32, i32* %mb_nr, align 4
  %rem = srem i32 %26, 2
  %cmp20 = icmp eq i32 0, %rem
  br i1 %cmp20, label %if.then.21, label %if.else

if.then.21:                                       ; preds = %if.then
  store i32 1, i32* %WriteFrameFieldMBInHeader, align 4
  store i32 0, i32* %prevMbSkipped, align 4
  br label %if.end.51

if.else:                                          ; preds = %if.then
  %27 = load %struct.macroblock*, %struct.macroblock** %prevMB, align 8
  %mb_type22 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %27, i32 0, i32 8
  %28 = load i32, i32* %mb_type22, align 4
  %tobool23 = icmp ne i32 %28, 0
  br i1 %tobool23, label %cond.true.24, label %cond.false.25

cond.true.24:                                     ; preds = %if.else
  br i1 false, label %if.then.32, label %if.end

cond.false.25:                                    ; preds = %if.else
  %29 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type26 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %29, i32 0, i32 6
  %30 = load i32, i32* %type26, align 4
  %cmp27 = icmp eq i32 %30, 1
  br i1 %cmp27, label %cond.true.28, label %cond.false.31

cond.true.28:                                     ; preds = %cond.false.25
  %31 = load %struct.macroblock*, %struct.macroblock** %prevMB, align 8
  %cbp29 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %31, i32 0, i32 12
  %32 = load i32, i32* %cbp29, align 4
  %tobool30 = icmp ne i32 %32, 0
  br i1 %tobool30, label %if.end, label %if.then.32

cond.false.31:                                    ; preds = %cond.false.25
  br i1 true, label %if.then.32, label %if.end

if.then.32:                                       ; preds = %cond.false.31, %cond.true.28, %cond.true.24
  store i32 1, i32* %WriteFrameFieldMBInHeader, align 4
  br label %if.end

if.end:                                           ; preds = %if.then.32, %cond.false.31, %cond.true.28, %cond.true.24
  %33 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr33 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %33, i32 0, i32 3
  %34 = load i32, i32* %current_mb_nr33, align 4
  %sub34 = sub nsw i32 %34, 1
  %idxprom35 = sext i32 %sub34 to i64
  %35 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data36 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %35, i32 0, i32 51
  %36 = load %struct.macroblock*, %struct.macroblock** %mb_data36, align 8
  %arrayidx37 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %36, i64 %idxprom35
  store %struct.macroblock* %arrayidx37, %struct.macroblock** %topMB, align 8
  %37 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type38 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %37, i32 0, i32 6
  %38 = load i32, i32* %type38, align 4
  %cmp39 = icmp eq i32 %38, 1
  br i1 %cmp39, label %if.else.43, label %if.then.40

if.then.40:                                       ; preds = %if.end
  %39 = load %struct.macroblock*, %struct.macroblock** %topMB, align 8
  %mb_type41 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %39, i32 0, i32 8
  %40 = load i32, i32* %mb_type41, align 4
  %cmp42 = icmp eq i32 %40, 0
  %conv = zext i1 %cmp42 to i32
  store i32 %conv, i32* %prevMbSkipped, align 4
  br label %if.end.50

if.else.43:                                       ; preds = %if.end
  %41 = load %struct.macroblock*, %struct.macroblock** %topMB, align 8
  %mb_type44 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %41, i32 0, i32 8
  %42 = load i32, i32* %mb_type44, align 4
  %cmp45 = icmp eq i32 %42, 0
  br i1 %cmp45, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.else.43
  %43 = load %struct.macroblock*, %struct.macroblock** %topMB, align 8
  %cbp47 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %43, i32 0, i32 12
  %44 = load i32, i32* %cbp47, align 4
  %cmp48 = icmp eq i32 %44, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.else.43
  %45 = phi i1 [ false, %if.else.43 ], [ %cmp48, %land.rhs ]
  %land.ext = zext i1 %45 to i32
  store i32 %land.ext, i32* %prevMbSkipped, align 4
  br label %if.end.50

if.end.50:                                        ; preds = %land.end, %if.then.40
  br label %if.end.51

if.end.51:                                        ; preds = %if.end.50, %if.then.21
  br label %if.end.52

if.end.52:                                        ; preds = %if.end.51, %cond.end.16
  %46 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type53 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %46, i32 0, i32 8
  %47 = load i32, i32* %mb_type53, align 4
  %cmp54 = icmp eq i32 %47, 9
  br i1 %cmp54, label %lor.end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end.52
  %48 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type56 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %48, i32 0, i32 8
  %49 = load i32, i32* %mb_type56, align 4
  %cmp57 = icmp eq i32 %49, 10
  br i1 %cmp57, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %lor.lhs.false
  %50 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type59 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %50, i32 0, i32 8
  %51 = load i32, i32* %mb_type59, align 4
  %cmp60 = icmp eq i32 %51, 13
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %if.end.52
  %52 = phi i1 [ true, %lor.lhs.false ], [ true, %if.end.52 ], [ %cmp60, %lor.rhs ]
  %lor.ext = zext i1 %52 to i32
  %53 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %IntraChromaPredModeFlag = getelementptr inbounds %struct.macroblock, %struct.macroblock* %53, i32 0, i32 21
  store i32 %lor.ext, i32* %IntraChromaPredModeFlag, align 4
  %54 = load i32*, i32** %partMap, align 8
  %arrayidx62 = getelementptr inbounds i32, i32* %54, i64 2
  %55 = load i32, i32* %arrayidx62, align 4
  %idxprom63 = sext i32 %55 to i64
  %56 = load %struct.Slice*, %struct.Slice** %currSlice, align 8
  %partArr = getelementptr inbounds %struct.Slice, %struct.Slice* %56, i32 0, i32 6
  %57 = load %struct.datapartition*, %struct.datapartition** %partArr, align 8
  %arrayidx64 = getelementptr inbounds %struct.datapartition, %struct.datapartition* %57, i64 %idxprom63
  store %struct.datapartition* %arrayidx64, %struct.datapartition** %dataPart, align 8
  %58 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type65 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %58, i32 0, i32 6
  %59 = load i32, i32* %type65, align 4
  %cmp66 = icmp eq i32 %59, 2
  br i1 %cmp66, label %if.then.68, label %if.else.120

if.then.68:                                       ; preds = %lor.end
  %60 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %MbaffFrameFlag69 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %60, i32 0, i32 90
  %61 = load i32, i32* %MbaffFrameFlag69, align 4
  %tobool70 = icmp ne i32 %61, 0
  br i1 %tobool70, label %land.lhs.true, label %if.end.97

land.lhs.true:                                    ; preds = %if.then.68
  %62 = load i32, i32* %skip, align 4
  %tobool71 = icmp ne i32 %62, 0
  br i1 %tobool71, label %if.end.97, label %if.then.72

if.then.72:                                       ; preds = %land.lhs.true
  %63 = load i32, i32* %WriteFrameFieldMBInHeader, align 4
  %tobool73 = icmp ne i32 %63, 0
  br i1 %tobool73, label %if.then.74, label %if.end.96

if.then.74:                                       ; preds = %if.then.72
  %64 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_field = getelementptr inbounds %struct.macroblock, %struct.macroblock* %64, i32 0, i32 22
  %65 = load i32, i32* %mb_field, align 4
  %66 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %value1 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %66, i32 0, i32 1
  store i32 %65, i32* %value1, align 4
  %67 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %value2 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %67, i32 0, i32 2
  store i32 0, i32* %value2, align 4
  %68 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %type75 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %68, i32 0, i32 0
  store i32 2, i32* %type75, align 4
  %69 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %symbol_mode = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %69, i32 0, i32 59
  %70 = load i32, i32* %symbol_mode, align 4
  %cmp76 = icmp eq i32 %70, 0
  br i1 %cmp76, label %if.then.78, label %if.else.79

if.then.78:                                       ; preds = %if.then.74
  %71 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %mapping = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %71, i32 0, i32 8
  store void (i32, i32, i32*, i32*)* @ue_linfo, void (i32, i32, i32*, i32*)** %mapping, align 8
  br label %if.end.80

if.else.79:                                       ; preds = %if.then.74
  %72 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %writing = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %72, i32 0, i32 9
  store void (%struct.syntaxelement*, %struct.EncodingEnvironment*)* @writeFieldModeInfo_CABAC, void (%struct.syntaxelement*, %struct.EncodingEnvironment*)** %writing, align 8
  br label %if.end.80

if.end.80:                                        ; preds = %if.else.79, %if.then.78
  %73 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %symbol_mode81 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %73, i32 0, i32 59
  %74 = load i32, i32* %symbol_mode81, align 4
  %cmp82 = icmp eq i32 %74, 0
  br i1 %cmp82, label %if.then.84, label %if.else.88

if.then.84:                                       ; preds = %if.end.80
  %75 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_field85 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %75, i32 0, i32 22
  %76 = load i32, i32* %mb_field85, align 4
  %tobool86 = icmp ne i32 %76, 0
  %cond87 = select i1 %tobool86, i32 1, i32 0
  %77 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %bitpattern = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %77, i32 0, i32 5
  store i32 %cond87, i32* %bitpattern, align 4
  %78 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %len = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %78, i32 0, i32 3
  store i32 1, i32* %len, align 4
  %79 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %80 = load %struct.datapartition*, %struct.datapartition** %dataPart, align 8
  %bitstream = getelementptr inbounds %struct.datapartition, %struct.datapartition* %80, i32 0, i32 0
  %81 = load %struct.Bitstream*, %struct.Bitstream** %bitstream, align 8
  %call = call i32 @writeSyntaxElement2Buf_Fixed(%struct.syntaxelement* %79, %struct.Bitstream* %81)
  br label %if.end.90

if.else.88:                                       ; preds = %if.end.80
  %82 = load %struct.datapartition*, %struct.datapartition** %dataPart, align 8
  %writeSyntaxElement = getelementptr inbounds %struct.datapartition, %struct.datapartition* %82, i32 0, i32 2
  %83 = load i32 (%struct.syntaxelement*, %struct.datapartition*)*, i32 (%struct.syntaxelement*, %struct.datapartition*)** %writeSyntaxElement, align 8
  %84 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %85 = load %struct.datapartition*, %struct.datapartition** %dataPart, align 8
  %call89 = call i32 %83(%struct.syntaxelement* %84, %struct.datapartition* %85)
  br label %if.end.90

if.end.90:                                        ; preds = %if.else.88, %if.then.84
  %86 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %len91 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %86, i32 0, i32 3
  %87 = load i32, i32* %len91, align 4
  %88 = load i32*, i32** %bitCount, align 8
  %arrayidx92 = getelementptr inbounds i32, i32* %88, i64 2
  %89 = load i32, i32* %arrayidx92, align 4
  %add = add nsw i32 %89, %87
  store i32 %add, i32* %arrayidx92, align 4
  %90 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %len93 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %90, i32 0, i32 3
  %91 = load i32, i32* %len93, align 4
  %92 = load i32, i32* %no_bits, align 4
  %add94 = add nsw i32 %92, %91
  store i32 %add94, i32* %no_bits, align 4
  %93 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %incdec.ptr = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %93, i32 1
  store %struct.syntaxelement* %incdec.ptr, %struct.syntaxelement** %currSE, align 8
  %94 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %currSEnr95 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %94, i32 0, i32 0
  %95 = load i32, i32* %currSEnr95, align 4
  %inc = add nsw i32 %95, 1
  store i32 %inc, i32* %currSEnr95, align 4
  br label %if.end.96

if.end.96:                                        ; preds = %if.end.90, %if.then.72
  br label %if.end.97

if.end.97:                                        ; preds = %if.end.96, %land.lhs.true, %if.then.68
  %96 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %call98 = call i32 @MBType2Value(%struct.macroblock* %96)
  %97 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %value199 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %97, i32 0, i32 1
  store i32 %call98, i32* %value199, align 4
  %98 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %value2100 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %98, i32 0, i32 2
  store i32 0, i32* %value2100, align 4
  %99 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %type101 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %99, i32 0, i32 0
  store i32 2, i32* %type101, align 4
  %100 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %symbol_mode102 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %100, i32 0, i32 59
  %101 = load i32, i32* %symbol_mode102, align 4
  %cmp103 = icmp eq i32 %101, 0
  br i1 %cmp103, label %if.then.105, label %if.else.107

if.then.105:                                      ; preds = %if.end.97
  %102 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %mapping106 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %102, i32 0, i32 8
  store void (i32, i32, i32*, i32*)* @ue_linfo, void (i32, i32, i32*, i32*)** %mapping106, align 8
  br label %if.end.109

if.else.107:                                      ; preds = %if.end.97
  %103 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %writing108 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %103, i32 0, i32 9
  store void (%struct.syntaxelement*, %struct.EncodingEnvironment*)* @writeMB_typeInfo_CABAC, void (%struct.syntaxelement*, %struct.EncodingEnvironment*)** %writing108, align 8
  br label %if.end.109

if.end.109:                                       ; preds = %if.else.107, %if.then.105
  %104 = load %struct.datapartition*, %struct.datapartition** %dataPart, align 8
  %writeSyntaxElement110 = getelementptr inbounds %struct.datapartition, %struct.datapartition* %104, i32 0, i32 2
  %105 = load i32 (%struct.syntaxelement*, %struct.datapartition*)*, i32 (%struct.syntaxelement*, %struct.datapartition*)** %writeSyntaxElement110, align 8
  %106 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %107 = load %struct.datapartition*, %struct.datapartition** %dataPart, align 8
  %call111 = call i32 %105(%struct.syntaxelement* %106, %struct.datapartition* %107)
  %108 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %len112 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %108, i32 0, i32 3
  %109 = load i32, i32* %len112, align 4
  %110 = load i32*, i32** %bitCount, align 8
  %arrayidx113 = getelementptr inbounds i32, i32* %110, i64 2
  %111 = load i32, i32* %arrayidx113, align 4
  %add114 = add nsw i32 %111, %109
  store i32 %add114, i32* %arrayidx113, align 4
  %112 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %len115 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %112, i32 0, i32 3
  %113 = load i32, i32* %len115, align 4
  %114 = load i32, i32* %no_bits, align 4
  %add116 = add nsw i32 %114, %113
  store i32 %add116, i32* %no_bits, align 4
  %115 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %incdec.ptr117 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %115, i32 1
  store %struct.syntaxelement* %incdec.ptr117, %struct.syntaxelement** %currSE, align 8
  %116 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %currSEnr118 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %116, i32 0, i32 0
  %117 = load i32, i32* %currSEnr118, align 4
  %inc119 = add nsw i32 %117, 1
  store i32 %inc119, i32* %currSEnr118, align 4
  br label %if.end.348

if.else.120:                                      ; preds = %lor.end
  %118 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %symbol_mode121 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %118, i32 0, i32 59
  %119 = load i32, i32* %symbol_mode121, align 4
  %cmp122 = icmp eq i32 %119, 1
  br i1 %cmp122, label %if.then.124, label %if.else.227

if.then.124:                                      ; preds = %if.else.120
  %120 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %MbaffFrameFlag125 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %120, i32 0, i32 90
  %121 = load i32, i32* %MbaffFrameFlag125, align 4
  %tobool126 = icmp ne i32 %121, 0
  br i1 %tobool126, label %land.lhs.true.127, label %if.end.139

land.lhs.true.127:                                ; preds = %if.then.124
  %122 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr128 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %122, i32 0, i32 3
  %123 = load i32, i32* %current_mb_nr128, align 4
  %rem129 = srem i32 %123, 2
  %cmp130 = icmp eq i32 %rem129, 0
  br i1 %cmp130, label %if.then.134, label %lor.lhs.false.132

lor.lhs.false.132:                                ; preds = %land.lhs.true.127
  %124 = load i32, i32* %prevMbSkipped, align 4
  %tobool133 = icmp ne i32 %124, 0
  br i1 %tobool133, label %if.then.134, label %if.end.139

if.then.134:                                      ; preds = %lor.lhs.false.132, %land.lhs.true.127
  %125 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_field135 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %125, i32 0, i32 22
  %126 = load i32, i32* %mb_field135, align 4
  store i32 %126, i32* %mb_field_tmp, align 4
  %call136 = call i32 (...) @field_flag_inference()
  %127 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_field137 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %127, i32 0, i32 22
  store i32 %call136, i32* %mb_field137, align 4
  call void (...) @CheckAvailabilityOfNeighborsCABAC()
  %128 = load i32, i32* %mb_field_tmp, align 4
  %129 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_field138 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %129, i32 0, i32 22
  store i32 %128, i32* %mb_field138, align 4
  br label %if.end.139

if.end.139:                                       ; preds = %if.then.134, %lor.lhs.false.132, %if.then.124
  %130 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %call140 = call i32 @MBType2Value(%struct.macroblock* %130)
  store i32 %call140, i32* %mb_type18, align 4
  %131 = load i32, i32* %mb_type18, align 4
  %132 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %value1141 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %132, i32 0, i32 1
  store i32 %131, i32* %value1141, align 4
  %133 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %cbp142 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %133, i32 0, i32 12
  %134 = load i32, i32* %cbp142, align 4
  %135 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %value2143 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %135, i32 0, i32 2
  store i32 %134, i32* %value2143, align 4
  %136 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %type144 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %136, i32 0, i32 0
  store i32 2, i32* %type144, align 4
  %137 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %writing145 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %137, i32 0, i32 9
  store void (%struct.syntaxelement*, %struct.EncodingEnvironment*)* @writeMB_skip_flagInfo_CABAC, void (%struct.syntaxelement*, %struct.EncodingEnvironment*)** %writing145, align 8
  %138 = load %struct.datapartition*, %struct.datapartition** %dataPart, align 8
  %writeSyntaxElement146 = getelementptr inbounds %struct.datapartition, %struct.datapartition* %138, i32 0, i32 2
  %139 = load i32 (%struct.syntaxelement*, %struct.datapartition*)*, i32 (%struct.syntaxelement*, %struct.datapartition*)** %writeSyntaxElement146, align 8
  %140 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %141 = load %struct.datapartition*, %struct.datapartition** %dataPart, align 8
  %call147 = call i32 %139(%struct.syntaxelement* %140, %struct.datapartition* %141)
  %142 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %len148 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %142, i32 0, i32 3
  %143 = load i32, i32* %len148, align 4
  %144 = load i32*, i32** %bitCount, align 8
  %arrayidx149 = getelementptr inbounds i32, i32* %144, i64 2
  %145 = load i32, i32* %arrayidx149, align 4
  %add150 = add nsw i32 %145, %143
  store i32 %add150, i32* %arrayidx149, align 4
  %146 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %len151 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %146, i32 0, i32 3
  %147 = load i32, i32* %len151, align 4
  %148 = load i32, i32* %no_bits, align 4
  %add152 = add nsw i32 %148, %147
  store i32 %add152, i32* %no_bits, align 4
  %149 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %incdec.ptr153 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %149, i32 1
  store %struct.syntaxelement* %incdec.ptr153, %struct.syntaxelement** %currSE, align 8
  %150 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %currSEnr154 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %150, i32 0, i32 0
  %151 = load i32, i32* %currSEnr154, align 4
  %inc155 = add nsw i32 %151, 1
  store i32 %inc155, i32* %currSEnr154, align 4
  call void (...) @CheckAvailabilityOfNeighborsCABAC()
  %152 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %MbaffFrameFlag156 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %152, i32 0, i32 90
  %153 = load i32, i32* %MbaffFrameFlag156, align 4
  %tobool157 = icmp ne i32 %153, 0
  br i1 %tobool157, label %land.lhs.true.158, label %if.end.199

land.lhs.true.158:                                ; preds = %if.end.139
  %154 = load i32, i32* %skip, align 4
  %tobool159 = icmp ne i32 %154, 0
  br i1 %tobool159, label %if.end.199, label %if.then.160

if.then.160:                                      ; preds = %land.lhs.true.158
  %155 = load i32, i32* %WriteFrameFieldMBInHeader, align 4
  %tobool161 = icmp ne i32 %155, 0
  br i1 %tobool161, label %if.then.162, label %if.end.198

if.then.162:                                      ; preds = %if.then.160
  %156 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_field163 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %156, i32 0, i32 22
  %157 = load i32, i32* %mb_field163, align 4
  %158 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %value1164 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %158, i32 0, i32 1
  store i32 %157, i32* %value1164, align 4
  %159 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %value2165 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %159, i32 0, i32 2
  store i32 0, i32* %value2165, align 4
  %160 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %type166 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %160, i32 0, i32 0
  store i32 2, i32* %type166, align 4
  %161 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %symbol_mode167 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %161, i32 0, i32 59
  %162 = load i32, i32* %symbol_mode167, align 4
  %cmp168 = icmp eq i32 %162, 0
  br i1 %cmp168, label %if.then.170, label %if.else.172

if.then.170:                                      ; preds = %if.then.162
  %163 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %mapping171 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %163, i32 0, i32 8
  store void (i32, i32, i32*, i32*)* @ue_linfo, void (i32, i32, i32*, i32*)** %mapping171, align 8
  br label %if.end.174

if.else.172:                                      ; preds = %if.then.162
  %164 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %writing173 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %164, i32 0, i32 9
  store void (%struct.syntaxelement*, %struct.EncodingEnvironment*)* @writeFieldModeInfo_CABAC, void (%struct.syntaxelement*, %struct.EncodingEnvironment*)** %writing173, align 8
  br label %if.end.174

if.end.174:                                       ; preds = %if.else.172, %if.then.170
  %165 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %symbol_mode175 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %165, i32 0, i32 59
  %166 = load i32, i32* %symbol_mode175, align 4
  %cmp176 = icmp eq i32 %166, 0
  br i1 %cmp176, label %if.then.178, label %if.else.186

if.then.178:                                      ; preds = %if.end.174
  %167 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_field179 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %167, i32 0, i32 22
  %168 = load i32, i32* %mb_field179, align 4
  %tobool180 = icmp ne i32 %168, 0
  %cond181 = select i1 %tobool180, i32 1, i32 0
  %169 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %bitpattern182 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %169, i32 0, i32 5
  store i32 %cond181, i32* %bitpattern182, align 4
  %170 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %len183 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %170, i32 0, i32 3
  store i32 1, i32* %len183, align 4
  %171 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %172 = load %struct.datapartition*, %struct.datapartition** %dataPart, align 8
  %bitstream184 = getelementptr inbounds %struct.datapartition, %struct.datapartition* %172, i32 0, i32 0
  %173 = load %struct.Bitstream*, %struct.Bitstream** %bitstream184, align 8
  %call185 = call i32 @writeSyntaxElement2Buf_Fixed(%struct.syntaxelement* %171, %struct.Bitstream* %173)
  br label %if.end.189

if.else.186:                                      ; preds = %if.end.174
  %174 = load %struct.datapartition*, %struct.datapartition** %dataPart, align 8
  %writeSyntaxElement187 = getelementptr inbounds %struct.datapartition, %struct.datapartition* %174, i32 0, i32 2
  %175 = load i32 (%struct.syntaxelement*, %struct.datapartition*)*, i32 (%struct.syntaxelement*, %struct.datapartition*)** %writeSyntaxElement187, align 8
  %176 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %177 = load %struct.datapartition*, %struct.datapartition** %dataPart, align 8
  %call188 = call i32 %175(%struct.syntaxelement* %176, %struct.datapartition* %177)
  br label %if.end.189

if.end.189:                                       ; preds = %if.else.186, %if.then.178
  %178 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %len190 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %178, i32 0, i32 3
  %179 = load i32, i32* %len190, align 4
  %180 = load i32*, i32** %bitCount, align 8
  %arrayidx191 = getelementptr inbounds i32, i32* %180, i64 2
  %181 = load i32, i32* %arrayidx191, align 4
  %add192 = add nsw i32 %181, %179
  store i32 %add192, i32* %arrayidx191, align 4
  %182 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %len193 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %182, i32 0, i32 3
  %183 = load i32, i32* %len193, align 4
  %184 = load i32, i32* %no_bits, align 4
  %add194 = add nsw i32 %184, %183
  store i32 %add194, i32* %no_bits, align 4
  %185 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %incdec.ptr195 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %185, i32 1
  store %struct.syntaxelement* %incdec.ptr195, %struct.syntaxelement** %currSE, align 8
  %186 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %currSEnr196 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %186, i32 0, i32 0
  %187 = load i32, i32* %currSEnr196, align 4
  %inc197 = add nsw i32 %187, 1
  store i32 %inc197, i32* %currSEnr196, align 4
  br label %if.end.198

if.end.198:                                       ; preds = %if.end.189, %if.then.160
  br label %if.end.199

if.end.199:                                       ; preds = %if.end.198, %land.lhs.true.158, %if.end.139
  %188 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type200 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %188, i32 0, i32 8
  %189 = load i32, i32* %mb_type200, align 4
  %cmp201 = icmp ne i32 %189, 0
  br i1 %cmp201, label %if.then.211, label %lor.lhs.false.203

lor.lhs.false.203:                                ; preds = %if.end.199
  %190 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type204 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %190, i32 0, i32 6
  %191 = load i32, i32* %type204, align 4
  %cmp205 = icmp eq i32 %191, 1
  br i1 %cmp205, label %land.lhs.true.207, label %if.end.226

land.lhs.true.207:                                ; preds = %lor.lhs.false.203
  %192 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %cbp208 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %192, i32 0, i32 12
  %193 = load i32, i32* %cbp208, align 4
  %cmp209 = icmp ne i32 %193, 0
  br i1 %cmp209, label %if.then.211, label %if.end.226

if.then.211:                                      ; preds = %land.lhs.true.207, %if.end.199
  %194 = load i32, i32* %mb_type18, align 4
  %195 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %value1212 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %195, i32 0, i32 1
  store i32 %194, i32* %value1212, align 4
  %196 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %value2213 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %196, i32 0, i32 2
  store i32 0, i32* %value2213, align 4
  %197 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %type214 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %197, i32 0, i32 0
  store i32 2, i32* %type214, align 4
  %198 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %writing215 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %198, i32 0, i32 9
  store void (%struct.syntaxelement*, %struct.EncodingEnvironment*)* @writeMB_typeInfo_CABAC, void (%struct.syntaxelement*, %struct.EncodingEnvironment*)** %writing215, align 8
  %199 = load %struct.datapartition*, %struct.datapartition** %dataPart, align 8
  %writeSyntaxElement216 = getelementptr inbounds %struct.datapartition, %struct.datapartition* %199, i32 0, i32 2
  %200 = load i32 (%struct.syntaxelement*, %struct.datapartition*)*, i32 (%struct.syntaxelement*, %struct.datapartition*)** %writeSyntaxElement216, align 8
  %201 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %202 = load %struct.datapartition*, %struct.datapartition** %dataPart, align 8
  %call217 = call i32 %200(%struct.syntaxelement* %201, %struct.datapartition* %202)
  %203 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %len218 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %203, i32 0, i32 3
  %204 = load i32, i32* %len218, align 4
  %205 = load i32*, i32** %bitCount, align 8
  %arrayidx219 = getelementptr inbounds i32, i32* %205, i64 2
  %206 = load i32, i32* %arrayidx219, align 4
  %add220 = add nsw i32 %206, %204
  store i32 %add220, i32* %arrayidx219, align 4
  %207 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %len221 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %207, i32 0, i32 3
  %208 = load i32, i32* %len221, align 4
  %209 = load i32, i32* %no_bits, align 4
  %add222 = add nsw i32 %209, %208
  store i32 %add222, i32* %no_bits, align 4
  %210 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %incdec.ptr223 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %210, i32 1
  store %struct.syntaxelement* %incdec.ptr223, %struct.syntaxelement** %currSE, align 8
  %211 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %currSEnr224 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %211, i32 0, i32 0
  %212 = load i32, i32* %currSEnr224, align 4
  %inc225 = add nsw i32 %212, 1
  store i32 %inc225, i32* %currSEnr224, align 4
  br label %if.end.226

if.end.226:                                       ; preds = %if.then.211, %land.lhs.true.207, %lor.lhs.false.203
  br label %if.end.347

if.else.227:                                      ; preds = %if.else.120
  %213 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type228 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %213, i32 0, i32 8
  %214 = load i32, i32* %mb_type228, align 4
  %cmp229 = icmp ne i32 %214, 0
  br i1 %cmp229, label %if.then.239, label %lor.lhs.false.231

lor.lhs.false.231:                                ; preds = %if.else.227
  %215 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type232 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %215, i32 0, i32 6
  %216 = load i32, i32* %type232, align 4
  %cmp233 = icmp eq i32 %216, 1
  br i1 %cmp233, label %land.lhs.true.235, label %if.else.304

land.lhs.true.235:                                ; preds = %lor.lhs.false.231
  %217 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %cbp236 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %217, i32 0, i32 12
  %218 = load i32, i32* %cbp236, align 4
  %cmp237 = icmp ne i32 %218, 0
  br i1 %cmp237, label %if.then.239, label %if.else.304

if.then.239:                                      ; preds = %land.lhs.true.235, %if.else.227
  %219 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %cod_counter = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %219, i32 0, i32 27
  %220 = load i32, i32* %cod_counter, align 4
  %221 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %value1240 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %221, i32 0, i32 1
  store i32 %220, i32* %value1240, align 4
  %222 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %value2241 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %222, i32 0, i32 2
  store i32 0, i32* %value2241, align 4
  %223 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %mapping242 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %223, i32 0, i32 8
  store void (i32, i32, i32*, i32*)* @ue_linfo, void (i32, i32, i32*, i32*)** %mapping242, align 8
  %224 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %type243 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %224, i32 0, i32 0
  store i32 2, i32* %type243, align 4
  %225 = load %struct.datapartition*, %struct.datapartition** %dataPart, align 8
  %writeSyntaxElement244 = getelementptr inbounds %struct.datapartition, %struct.datapartition* %225, i32 0, i32 2
  %226 = load i32 (%struct.syntaxelement*, %struct.datapartition*)*, i32 (%struct.syntaxelement*, %struct.datapartition*)** %writeSyntaxElement244, align 8
  %227 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %228 = load %struct.datapartition*, %struct.datapartition** %dataPart, align 8
  %call245 = call i32 %226(%struct.syntaxelement* %227, %struct.datapartition* %228)
  %229 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %len246 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %229, i32 0, i32 3
  %230 = load i32, i32* %len246, align 4
  %231 = load i32*, i32** %bitCount, align 8
  %arrayidx247 = getelementptr inbounds i32, i32* %231, i64 2
  %232 = load i32, i32* %arrayidx247, align 4
  %add248 = add nsw i32 %232, %230
  store i32 %add248, i32* %arrayidx247, align 4
  %233 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %len249 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %233, i32 0, i32 3
  %234 = load i32, i32* %len249, align 4
  %235 = load i32, i32* %no_bits, align 4
  %add250 = add nsw i32 %235, %234
  store i32 %add250, i32* %no_bits, align 4
  %236 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %incdec.ptr251 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %236, i32 1
  store %struct.syntaxelement* %incdec.ptr251, %struct.syntaxelement** %currSE, align 8
  %237 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %currSEnr252 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %237, i32 0, i32 0
  %238 = load i32, i32* %currSEnr252, align 4
  %inc253 = add nsw i32 %238, 1
  store i32 %inc253, i32* %currSEnr252, align 4
  %239 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %cod_counter254 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %239, i32 0, i32 27
  store i32 0, i32* %cod_counter254, align 4
  %240 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %MbaffFrameFlag255 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %240, i32 0, i32 90
  %241 = load i32, i32* %MbaffFrameFlag255, align 4
  %tobool256 = icmp ne i32 %241, 0
  br i1 %tobool256, label %land.lhs.true.257, label %if.end.282

land.lhs.true.257:                                ; preds = %if.then.239
  %242 = load i32, i32* %skip, align 4
  %tobool258 = icmp ne i32 %242, 0
  br i1 %tobool258, label %if.end.282, label %if.then.259

if.then.259:                                      ; preds = %land.lhs.true.257
  %243 = load i32, i32* %WriteFrameFieldMBInHeader, align 4
  %tobool260 = icmp ne i32 %243, 0
  br i1 %tobool260, label %if.then.261, label %if.end.281

if.then.261:                                      ; preds = %if.then.259
  %244 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_field262 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %244, i32 0, i32 22
  %245 = load i32, i32* %mb_field262, align 4
  %246 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %value1263 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %246, i32 0, i32 1
  store i32 %245, i32* %value1263, align 4
  %247 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %type264 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %247, i32 0, i32 0
  store i32 2, i32* %type264, align 4
  %248 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %mapping265 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %248, i32 0, i32 8
  store void (i32, i32, i32*, i32*)* @ue_linfo, void (i32, i32, i32*, i32*)** %mapping265, align 8
  %249 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_field266 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %249, i32 0, i32 22
  %250 = load i32, i32* %mb_field266, align 4
  %tobool267 = icmp ne i32 %250, 0
  %cond268 = select i1 %tobool267, i32 1, i32 0
  %251 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %bitpattern269 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %251, i32 0, i32 5
  store i32 %cond268, i32* %bitpattern269, align 4
  %252 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %len270 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %252, i32 0, i32 3
  store i32 1, i32* %len270, align 4
  %253 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %254 = load %struct.datapartition*, %struct.datapartition** %dataPart, align 8
  %bitstream271 = getelementptr inbounds %struct.datapartition, %struct.datapartition* %254, i32 0, i32 0
  %255 = load %struct.Bitstream*, %struct.Bitstream** %bitstream271, align 8
  %call272 = call i32 @writeSyntaxElement2Buf_Fixed(%struct.syntaxelement* %253, %struct.Bitstream* %255)
  %256 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %len273 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %256, i32 0, i32 3
  %257 = load i32, i32* %len273, align 4
  %258 = load i32*, i32** %bitCount, align 8
  %arrayidx274 = getelementptr inbounds i32, i32* %258, i64 2
  %259 = load i32, i32* %arrayidx274, align 4
  %add275 = add nsw i32 %259, %257
  store i32 %add275, i32* %arrayidx274, align 4
  %260 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %len276 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %260, i32 0, i32 3
  %261 = load i32, i32* %len276, align 4
  %262 = load i32, i32* %no_bits, align 4
  %add277 = add nsw i32 %262, %261
  store i32 %add277, i32* %no_bits, align 4
  %263 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %incdec.ptr278 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %263, i32 1
  store %struct.syntaxelement* %incdec.ptr278, %struct.syntaxelement** %currSE, align 8
  %264 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %currSEnr279 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %264, i32 0, i32 0
  %265 = load i32, i32* %currSEnr279, align 4
  %inc280 = add nsw i32 %265, 1
  store i32 %inc280, i32* %currSEnr279, align 4
  br label %if.end.281

if.end.281:                                       ; preds = %if.then.261, %if.then.259
  br label %if.end.282

if.end.282:                                       ; preds = %if.end.281, %land.lhs.true.257, %if.then.239
  %266 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %call283 = call i32 @MBType2Value(%struct.macroblock* %266)
  %267 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %value1284 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %267, i32 0, i32 1
  store i32 %call283, i32* %value1284, align 4
  %268 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type285 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %268, i32 0, i32 6
  %269 = load i32, i32* %type285, align 4
  %cmp286 = icmp ne i32 %269, 1
  br i1 %cmp286, label %if.then.288, label %if.end.290

if.then.288:                                      ; preds = %if.end.282
  %270 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %value1289 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %270, i32 0, i32 1
  %271 = load i32, i32* %value1289, align 4
  %dec = add nsw i32 %271, -1
  store i32 %dec, i32* %value1289, align 4
  br label %if.end.290

if.end.290:                                       ; preds = %if.then.288, %if.end.282
  %272 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %mapping291 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %272, i32 0, i32 8
  store void (i32, i32, i32*, i32*)* @ue_linfo, void (i32, i32, i32*, i32*)** %mapping291, align 8
  %273 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %type292 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %273, i32 0, i32 0
  store i32 2, i32* %type292, align 4
  %274 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %value2293 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %274, i32 0, i32 2
  store i32 0, i32* %value2293, align 4
  %275 = load %struct.datapartition*, %struct.datapartition** %dataPart, align 8
  %writeSyntaxElement294 = getelementptr inbounds %struct.datapartition, %struct.datapartition* %275, i32 0, i32 2
  %276 = load i32 (%struct.syntaxelement*, %struct.datapartition*)*, i32 (%struct.syntaxelement*, %struct.datapartition*)** %writeSyntaxElement294, align 8
  %277 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %278 = load %struct.datapartition*, %struct.datapartition** %dataPart, align 8
  %call295 = call i32 %276(%struct.syntaxelement* %277, %struct.datapartition* %278)
  %279 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %len296 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %279, i32 0, i32 3
  %280 = load i32, i32* %len296, align 4
  %281 = load i32*, i32** %bitCount, align 8
  %arrayidx297 = getelementptr inbounds i32, i32* %281, i64 2
  %282 = load i32, i32* %arrayidx297, align 4
  %add298 = add nsw i32 %282, %280
  store i32 %add298, i32* %arrayidx297, align 4
  %283 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %len299 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %283, i32 0, i32 3
  %284 = load i32, i32* %len299, align 4
  %285 = load i32, i32* %no_bits, align 4
  %add300 = add nsw i32 %285, %284
  store i32 %add300, i32* %no_bits, align 4
  %286 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %incdec.ptr301 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %286, i32 1
  store %struct.syntaxelement* %incdec.ptr301, %struct.syntaxelement** %currSE, align 8
  %287 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %currSEnr302 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %287, i32 0, i32 0
  %288 = load i32, i32* %currSEnr302, align 4
  %inc303 = add nsw i32 %288, 1
  store i32 %inc303, i32* %currSEnr302, align 4
  br label %if.end.346

if.else.304:                                      ; preds = %land.lhs.true.235, %lor.lhs.false.231
  %289 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %cod_counter305 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %289, i32 0, i32 27
  %290 = load i32, i32* %cod_counter305, align 4
  %inc306 = add nsw i32 %290, 1
  store i32 %inc306, i32* %cod_counter305, align 4
  store i32 0, i32* %j, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc.322, %if.else.304
  %291 = load i32, i32* %j, align 4
  %292 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %num_blk8x8_uv = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %292, i32 0, i32 157
  %293 = load i32, i32* %num_blk8x8_uv, align 4
  %add307 = add nsw i32 4, %293
  %cmp308 = icmp slt i32 %291, %add307
  br i1 %cmp308, label %for.body, label %for.end.324

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4
  br label %for.cond.310

for.cond.310:                                     ; preds = %for.inc, %for.body
  %294 = load i32, i32* %i, align 4
  %cmp311 = icmp slt i32 %294, 4
  br i1 %cmp311, label %for.body.313, label %for.end

for.body.313:                                     ; preds = %for.cond.310
  %295 = load i32, i32* %j, align 4
  %idxprom314 = sext i32 %295 to i64
  %296 = load i32, i32* %i, align 4
  %idxprom315 = sext i32 %296 to i64
  %297 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr316 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %297, i32 0, i32 3
  %298 = load i32, i32* %current_mb_nr316, align 4
  %idxprom317 = sext i32 %298 to i64
  %299 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %nz_coeff = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %299, i32 0, i32 28
  %300 = load i32***, i32**** %nz_coeff, align 8
  %arrayidx318 = getelementptr inbounds i32**, i32*** %300, i64 %idxprom317
  %301 = load i32**, i32*** %arrayidx318, align 8
  %arrayidx319 = getelementptr inbounds i32*, i32** %301, i64 %idxprom315
  %302 = load i32*, i32** %arrayidx319, align 8
  %arrayidx320 = getelementptr inbounds i32, i32* %302, i64 %idxprom314
  store i32 0, i32* %arrayidx320, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body.313
  %303 = load i32, i32* %i, align 4
  %inc321 = add nsw i32 %303, 1
  store i32 %inc321, i32* %i, align 4
  br label %for.cond.310

for.end:                                          ; preds = %for.cond.310
  br label %for.inc.322

for.inc.322:                                      ; preds = %for.end
  %304 = load i32, i32* %j, align 4
  %inc323 = add nsw i32 %304, 1
  store i32 %inc323, i32* %j, align 4
  br label %for.cond

for.end.324:                                      ; preds = %for.cond
  %305 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr325 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %305, i32 0, i32 3
  %306 = load i32, i32* %current_mb_nr325, align 4
  %307 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %total_number_mb = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %307, i32 0, i32 4
  %308 = load i32, i32* %total_number_mb, align 4
  %cmp326 = icmp eq i32 %306, %308
  br i1 %cmp326, label %if.then.328, label %if.end.345

if.then.328:                                      ; preds = %for.end.324
  %309 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %cod_counter329 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %309, i32 0, i32 27
  %310 = load i32, i32* %cod_counter329, align 4
  %311 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %value1330 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %311, i32 0, i32 1
  store i32 %310, i32* %value1330, align 4
  %312 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %value2331 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %312, i32 0, i32 2
  store i32 0, i32* %value2331, align 4
  %313 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %mapping332 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %313, i32 0, i32 8
  store void (i32, i32, i32*, i32*)* @ue_linfo, void (i32, i32, i32*, i32*)** %mapping332, align 8
  %314 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %type333 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %314, i32 0, i32 0
  store i32 2, i32* %type333, align 4
  %315 = load %struct.datapartition*, %struct.datapartition** %dataPart, align 8
  %writeSyntaxElement334 = getelementptr inbounds %struct.datapartition, %struct.datapartition* %315, i32 0, i32 2
  %316 = load i32 (%struct.syntaxelement*, %struct.datapartition*)*, i32 (%struct.syntaxelement*, %struct.datapartition*)** %writeSyntaxElement334, align 8
  %317 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %318 = load %struct.datapartition*, %struct.datapartition** %dataPart, align 8
  %call335 = call i32 %316(%struct.syntaxelement* %317, %struct.datapartition* %318)
  %319 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %len336 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %319, i32 0, i32 3
  %320 = load i32, i32* %len336, align 4
  %321 = load i32*, i32** %bitCount, align 8
  %arrayidx337 = getelementptr inbounds i32, i32* %321, i64 2
  %322 = load i32, i32* %arrayidx337, align 4
  %add338 = add nsw i32 %322, %320
  store i32 %add338, i32* %arrayidx337, align 4
  %323 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %len339 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %323, i32 0, i32 3
  %324 = load i32, i32* %len339, align 4
  %325 = load i32, i32* %no_bits, align 4
  %add340 = add nsw i32 %325, %324
  store i32 %add340, i32* %no_bits, align 4
  %326 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %incdec.ptr341 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %326, i32 1
  store %struct.syntaxelement* %incdec.ptr341, %struct.syntaxelement** %currSE, align 8
  %327 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %currSEnr342 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %327, i32 0, i32 0
  %328 = load i32, i32* %currSEnr342, align 4
  %inc343 = add nsw i32 %328, 1
  store i32 %inc343, i32* %currSEnr342, align 4
  %329 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %cod_counter344 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %329, i32 0, i32 27
  store i32 0, i32* %cod_counter344, align 4
  br label %if.end.345

if.end.345:                                       ; preds = %if.then.328, %for.end.324
  br label %if.end.346

if.end.346:                                       ; preds = %if.end.345, %if.end.290
  br label %if.end.347

if.end.347:                                       ; preds = %if.end.346, %if.end.226
  br label %if.end.348

if.end.348:                                       ; preds = %if.end.347, %if.end.109
  %330 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type349 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %330, i32 0, i32 8
  %331 = load i32, i32* %mb_type349, align 4
  %cmp350 = icmp eq i32 %331, 0
  br i1 %cmp350, label %land.lhs.true.352, label %land.end.360

land.lhs.true.352:                                ; preds = %if.end.348
  %332 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type353 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %332, i32 0, i32 6
  %333 = load i32, i32* %type353, align 4
  %cmp354 = icmp eq i32 %333, 1
  br i1 %cmp354, label %land.rhs.356, label %land.end.360

land.rhs.356:                                     ; preds = %land.lhs.true.352
  %334 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %direct_8x8_inference_flag = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %334, i32 0, i32 27
  %335 = load i32, i32* %direct_8x8_inference_flag, align 4
  %tobool357 = icmp ne i32 %335, 0
  %lnot358 = xor i1 %tobool357, true
  br label %land.end.360

land.end.360:                                     ; preds = %land.rhs.356, %land.lhs.true.352, %if.end.348
  %336 = phi i1 [ false, %land.lhs.true.352 ], [ false, %if.end.348 ], [ %lnot358, %land.rhs.356 ]
  %cond362 = select i1 %336, i32 0, i32 1
  %337 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %NoMbPartLessThan8x8Flag = getelementptr inbounds %struct.macroblock, %struct.macroblock* %337, i32 0, i32 33
  store i32 %cond362, i32* %NoMbPartLessThan8x8Flag, align 4
  %338 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type363 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %338, i32 0, i32 8
  %339 = load i32, i32* %mb_type363, align 4
  %cmp364 = icmp eq i32 %339, 8
  br i1 %cmp364, label %if.then.366, label %if.end.427

if.then.366:                                      ; preds = %land.end.360
  %340 = load i32*, i32** %partMap, align 8
  %arrayidx367 = getelementptr inbounds i32, i32* %340, i64 2
  %341 = load i32, i32* %arrayidx367, align 4
  %idxprom368 = sext i32 %341 to i64
  %342 = load %struct.Slice*, %struct.Slice** %currSlice, align 8
  %partArr369 = getelementptr inbounds %struct.Slice, %struct.Slice* %342, i32 0, i32 6
  %343 = load %struct.datapartition*, %struct.datapartition** %partArr369, align 8
  %arrayidx370 = getelementptr inbounds %struct.datapartition, %struct.datapartition* %343, i64 %idxprom368
  store %struct.datapartition* %arrayidx370, %struct.datapartition** %dataPart, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond.371

for.cond.371:                                     ; preds = %for.inc.418, %if.then.366
  %344 = load i32, i32* %i, align 4
  %cmp372 = icmp slt i32 %344, 4
  br i1 %cmp372, label %for.body.374, label %for.end.420

for.body.374:                                     ; preds = %for.cond.371
  %345 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %symbol_mode375 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %345, i32 0, i32 59
  %346 = load i32, i32* %symbol_mode375, align 4
  %cmp376 = icmp eq i32 %346, 0
  br i1 %cmp376, label %if.then.378, label %if.else.380

if.then.378:                                      ; preds = %for.body.374
  %347 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %mapping379 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %347, i32 0, i32 8
  store void (i32, i32, i32*, i32*)* @ue_linfo, void (i32, i32, i32*, i32*)** %mapping379, align 8
  br label %if.end.382

if.else.380:                                      ; preds = %for.body.374
  %348 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %writing381 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %348, i32 0, i32 9
  store void (%struct.syntaxelement*, %struct.EncodingEnvironment*)* @writeB8_typeInfo_CABAC, void (%struct.syntaxelement*, %struct.EncodingEnvironment*)** %writing381, align 8
  br label %if.end.382

if.end.382:                                       ; preds = %if.else.380, %if.then.378
  %349 = load i32, i32* %i, align 4
  %idxprom383 = sext i32 %349 to i64
  %350 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %b8mode = getelementptr inbounds %struct.macroblock, %struct.macroblock* %350, i32 0, i32 14
  %arrayidx384 = getelementptr inbounds [4 x i32], [4 x i32]* %b8mode, i32 0, i64 %idxprom383
  %351 = load i32, i32* %arrayidx384, align 4
  %352 = load i32, i32* %i, align 4
  %idxprom385 = sext i32 %352 to i64
  %353 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %b8pdir = getelementptr inbounds %struct.macroblock, %struct.macroblock* %353, i32 0, i32 15
  %arrayidx386 = getelementptr inbounds [4 x i32], [4 x i32]* %b8pdir, i32 0, i64 %idxprom385
  %354 = load i32, i32* %arrayidx386, align 4
  %call387 = call i32 @B8Mode2Value(i32 %351, i32 %354)
  %355 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %value1388 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %355, i32 0, i32 1
  store i32 %call387, i32* %value1388, align 4
  %356 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %value2389 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %356, i32 0, i32 2
  store i32 0, i32* %value2389, align 4
  %357 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %type390 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %357, i32 0, i32 0
  store i32 2, i32* %type390, align 4
  %358 = load %struct.datapartition*, %struct.datapartition** %dataPart, align 8
  %writeSyntaxElement391 = getelementptr inbounds %struct.datapartition, %struct.datapartition* %358, i32 0, i32 2
  %359 = load i32 (%struct.syntaxelement*, %struct.datapartition*)*, i32 (%struct.syntaxelement*, %struct.datapartition*)** %writeSyntaxElement391, align 8
  %360 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %361 = load %struct.datapartition*, %struct.datapartition** %dataPart, align 8
  %call392 = call i32 %359(%struct.syntaxelement* %360, %struct.datapartition* %361)
  %362 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %len393 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %362, i32 0, i32 3
  %363 = load i32, i32* %len393, align 4
  %364 = load i32*, i32** %bitCount, align 8
  %arrayidx394 = getelementptr inbounds i32, i32* %364, i64 2
  %365 = load i32, i32* %arrayidx394, align 4
  %add395 = add nsw i32 %365, %363
  store i32 %add395, i32* %arrayidx394, align 4
  %366 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %len396 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %366, i32 0, i32 3
  %367 = load i32, i32* %len396, align 4
  %368 = load i32, i32* %no_bits, align 4
  %add397 = add nsw i32 %368, %367
  store i32 %add397, i32* %no_bits, align 4
  %369 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %incdec.ptr398 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %369, i32 1
  store %struct.syntaxelement* %incdec.ptr398, %struct.syntaxelement** %currSE, align 8
  %370 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %currSEnr399 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %370, i32 0, i32 0
  %371 = load i32, i32* %currSEnr399, align 4
  %inc400 = add nsw i32 %371, 1
  store i32 %inc400, i32* %currSEnr399, align 4
  %372 = load i32, i32* %i, align 4
  %idxprom401 = sext i32 %372 to i64
  %373 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %b8mode402 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %373, i32 0, i32 14
  %arrayidx403 = getelementptr inbounds [4 x i32], [4 x i32]* %b8mode402, i32 0, i64 %idxprom401
  %374 = load i32, i32* %arrayidx403, align 4
  %cmp404 = icmp eq i32 %374, 0
  br i1 %cmp404, label %land.lhs.true.406, label %lor.rhs.409

land.lhs.true.406:                                ; preds = %if.end.382
  %375 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %direct_8x8_inference_flag407 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %375, i32 0, i32 27
  %376 = load i32, i32* %direct_8x8_inference_flag407, align 4
  %tobool408 = icmp ne i32 %376, 0
  br i1 %tobool408, label %lor.end.415, label %lor.rhs.409

lor.rhs.409:                                      ; preds = %land.lhs.true.406, %if.end.382
  %377 = load i32, i32* %i, align 4
  %idxprom410 = sext i32 %377 to i64
  %378 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %b8mode411 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %378, i32 0, i32 14
  %arrayidx412 = getelementptr inbounds [4 x i32], [4 x i32]* %b8mode411, i32 0, i64 %idxprom410
  %379 = load i32, i32* %arrayidx412, align 4
  %cmp413 = icmp eq i32 %379, 4
  br label %lor.end.415

lor.end.415:                                      ; preds = %lor.rhs.409, %land.lhs.true.406
  %380 = phi i1 [ true, %land.lhs.true.406 ], [ %cmp413, %lor.rhs.409 ]
  %lor.ext416 = zext i1 %380 to i32
  %381 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %NoMbPartLessThan8x8Flag417 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %381, i32 0, i32 33
  %382 = load i32, i32* %NoMbPartLessThan8x8Flag417, align 4
  %and = and i32 %382, %lor.ext416
  store i32 %and, i32* %NoMbPartLessThan8x8Flag417, align 4
  br label %for.inc.418

for.inc.418:                                      ; preds = %lor.end.415
  %383 = load i32, i32* %i, align 4
  %inc419 = add nsw i32 %383, 1
  store i32 %inc419, i32* %i, align 4
  br label %for.cond.371

for.end.420:                                      ; preds = %for.cond.371
  %call421 = call i32 @writeMotionInfo2NAL()
  %384 = load i32, i32* %no_bits, align 4
  %add422 = add nsw i32 %384, %call421
  store i32 %add422, i32* %no_bits, align 4
  %385 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %currSEnr423 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %385, i32 0, i32 0
  %386 = load i32, i32* %currSEnr423, align 4
  %idxprom424 = sext i32 %386 to i64
  %387 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %MB_SyntaxElements425 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %387, i32 0, i32 52
  %arrayidx426 = getelementptr inbounds [1200 x %struct.syntaxelement], [1200 x %struct.syntaxelement]* %MB_SyntaxElements425, i32 0, i64 %idxprom424
  store %struct.syntaxelement* %arrayidx426, %struct.syntaxelement** %currSE, align 8
  br label %if.end.427

if.end.427:                                       ; preds = %for.end.420, %land.end.360
  %388 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type428 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %388, i32 0, i32 8
  %389 = load i32, i32* %mb_type428, align 4
  %cmp429 = icmp eq i32 %389, 13
  br i1 %cmp429, label %land.lhs.true.435, label %lor.lhs.false.431

lor.lhs.false.431:                                ; preds = %if.end.427
  %390 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type432 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %390, i32 0, i32 8
  %391 = load i32, i32* %mb_type432, align 4
  %cmp433 = icmp eq i32 %391, 9
  br i1 %cmp433, label %land.lhs.true.435, label %if.end.469

land.lhs.true.435:                                ; preds = %lor.lhs.false.431, %if.end.427
  %392 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %AllowTransform8x8 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %392, i32 0, i32 123
  %393 = load i32, i32* %AllowTransform8x8, align 4
  %tobool436 = icmp ne i32 %393, 0
  br i1 %tobool436, label %if.then.437, label %if.end.469

if.then.437:                                      ; preds = %land.lhs.true.435
  %394 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %luma_transform_size_8x8_flag = getelementptr inbounds %struct.macroblock, %struct.macroblock* %394, i32 0, i32 32
  %395 = load i32, i32* %luma_transform_size_8x8_flag, align 4
  %396 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %value1438 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %396, i32 0, i32 1
  store i32 %395, i32* %value1438, align 4
  %397 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %type439 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %397, i32 0, i32 0
  store i32 20, i32* %type439, align 4
  %398 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %symbol_mode440 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %398, i32 0, i32 59
  %399 = load i32, i32* %symbol_mode440, align 4
  %cmp441 = icmp eq i32 %399, 0
  br i1 %cmp441, label %if.then.443, label %if.else.445

if.then.443:                                      ; preds = %if.then.437
  %400 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %mapping444 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %400, i32 0, i32 8
  store void (i32, i32, i32*, i32*)* @ue_linfo, void (i32, i32, i32*, i32*)** %mapping444, align 8
  br label %if.end.447

if.else.445:                                      ; preds = %if.then.437
  %401 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %writing446 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %401, i32 0, i32 9
  store void (%struct.syntaxelement*, %struct.EncodingEnvironment*)* @writeMB_transform_size_CABAC, void (%struct.syntaxelement*, %struct.EncodingEnvironment*)** %writing446, align 8
  br label %if.end.447

if.end.447:                                       ; preds = %if.else.445, %if.then.443
  %402 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %symbol_mode448 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %402, i32 0, i32 59
  %403 = load i32, i32* %symbol_mode448, align 4
  %cmp449 = icmp eq i32 %403, 0
  br i1 %cmp449, label %if.then.451, label %if.else.457

if.then.451:                                      ; preds = %if.end.447
  %404 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %luma_transform_size_8x8_flag452 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %404, i32 0, i32 32
  %405 = load i32, i32* %luma_transform_size_8x8_flag452, align 4
  %406 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %bitpattern453 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %406, i32 0, i32 5
  store i32 %405, i32* %bitpattern453, align 4
  %407 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %len454 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %407, i32 0, i32 3
  store i32 1, i32* %len454, align 4
  %408 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %409 = load %struct.datapartition*, %struct.datapartition** %dataPart, align 8
  %bitstream455 = getelementptr inbounds %struct.datapartition, %struct.datapartition* %409, i32 0, i32 0
  %410 = load %struct.Bitstream*, %struct.Bitstream** %bitstream455, align 8
  %call456 = call i32 @writeSyntaxElement2Buf_Fixed(%struct.syntaxelement* %408, %struct.Bitstream* %410)
  br label %if.end.460

if.else.457:                                      ; preds = %if.end.447
  %411 = load %struct.datapartition*, %struct.datapartition** %dataPart, align 8
  %writeSyntaxElement458 = getelementptr inbounds %struct.datapartition, %struct.datapartition* %411, i32 0, i32 2
  %412 = load i32 (%struct.syntaxelement*, %struct.datapartition*)*, i32 (%struct.syntaxelement*, %struct.datapartition*)** %writeSyntaxElement458, align 8
  %413 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %414 = load %struct.datapartition*, %struct.datapartition** %dataPart, align 8
  %call459 = call i32 %412(%struct.syntaxelement* %413, %struct.datapartition* %414)
  br label %if.end.460

if.end.460:                                       ; preds = %if.else.457, %if.then.451
  %415 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %len461 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %415, i32 0, i32 3
  %416 = load i32, i32* %len461, align 4
  %417 = load i32*, i32** %bitCount, align 8
  %arrayidx462 = getelementptr inbounds i32, i32* %417, i64 2
  %418 = load i32, i32* %arrayidx462, align 4
  %add463 = add nsw i32 %418, %416
  store i32 %add463, i32* %arrayidx462, align 4
  %419 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %len464 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %419, i32 0, i32 3
  %420 = load i32, i32* %len464, align 4
  %421 = load i32, i32* %no_bits, align 4
  %add465 = add nsw i32 %421, %420
  store i32 %add465, i32* %no_bits, align 4
  %422 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %incdec.ptr466 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %422, i32 1
  store %struct.syntaxelement* %incdec.ptr466, %struct.syntaxelement** %currSE, align 8
  %423 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %currSEnr467 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %423, i32 0, i32 0
  %424 = load i32, i32* %currSEnr467, align 4
  %inc468 = add nsw i32 %424, 1
  store i32 %inc468, i32* %currSEnr467, align 4
  br label %if.end.469

if.end.469:                                       ; preds = %if.end.460, %land.lhs.true.435, %lor.lhs.false.431
  %call470 = call i32 @writeIntra4x4Modes(i32 -1)
  %425 = load i32, i32* %no_bits, align 4
  %add471 = add nsw i32 %425, %call470
  store i32 %add471, i32* %no_bits, align 4
  %426 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %IntraChromaPredModeFlag472 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %426, i32 0, i32 21
  %427 = load i32, i32* %IntraChromaPredModeFlag472, align 4
  %tobool473 = icmp ne i32 %427, 0
  br i1 %tobool473, label %land.lhs.true.474, label %if.else.480

land.lhs.true.474:                                ; preds = %if.end.469
  %428 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %yuv_format = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %428, i32 0, i32 159
  %429 = load i32, i32* %yuv_format, align 4
  %cmp475 = icmp ne i32 %429, 0
  br i1 %cmp475, label %if.then.477, label %if.else.480

if.then.477:                                      ; preds = %land.lhs.true.474
  %call478 = call i32 @writeChromaIntraPredMode()
  %430 = load i32, i32* %no_bits, align 4
  %add479 = add nsw i32 %430, %call478
  store i32 %add479, i32* %no_bits, align 4
  br label %if.end.484

if.else.480:                                      ; preds = %land.lhs.true.474, %if.end.469
  %431 = load i32, i32* %rdopt.addr, align 4
  %tobool481 = icmp ne i32 %431, 0
  br i1 %tobool481, label %if.end.483, label %if.then.482

if.then.482:                                      ; preds = %if.else.480
  %432 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %c_ipred_mode = getelementptr inbounds %struct.macroblock, %struct.macroblock* %432, i32 0, i32 20
  store i32 0, i32* %c_ipred_mode, align 4
  br label %if.end.483

if.end.483:                                       ; preds = %if.then.482, %if.else.480
  br label %if.end.484

if.end.484:                                       ; preds = %if.end.483, %if.then.477
  %433 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type485 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %433, i32 0, i32 8
  %434 = load i32, i32* %mb_type485, align 4
  %cmp486 = icmp ne i32 %434, 0
  br i1 %cmp486, label %land.lhs.true.488, label %if.end.495

land.lhs.true.488:                                ; preds = %if.end.484
  %435 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type489 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %435, i32 0, i32 8
  %436 = load i32, i32* %mb_type489, align 4
  %cmp490 = icmp ne i32 %436, 8
  br i1 %cmp490, label %if.then.492, label %if.end.495

if.then.492:                                      ; preds = %land.lhs.true.488
  %call493 = call i32 @writeMotionInfo2NAL()
  %437 = load i32, i32* %no_bits, align 4
  %add494 = add nsw i32 %437, %call493
  store i32 %add494, i32* %no_bits, align 4
  br label %if.end.495

if.end.495:                                       ; preds = %if.then.492, %land.lhs.true.488, %if.end.484
  %438 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type496 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %438, i32 0, i32 8
  %439 = load i32, i32* %mb_type496, align 4
  %cmp497 = icmp ne i32 %439, 0
  br i1 %cmp497, label %if.then.507, label %lor.lhs.false.499

lor.lhs.false.499:                                ; preds = %if.end.495
  %440 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type500 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %440, i32 0, i32 6
  %441 = load i32, i32* %type500, align 4
  %cmp501 = icmp eq i32 %441, 1
  br i1 %cmp501, label %land.lhs.true.503, label %if.end.517

land.lhs.true.503:                                ; preds = %lor.lhs.false.499
  %442 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %cbp504 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %442, i32 0, i32 12
  %443 = load i32, i32* %cbp504, align 4
  %cmp505 = icmp ne i32 %443, 0
  br i1 %cmp505, label %if.then.507, label %if.end.517

if.then.507:                                      ; preds = %land.lhs.true.503, %if.end.495
  %call508 = call i32 @writeCBPandLumaCoeff()
  %444 = load i32, i32* %no_bits, align 4
  %add509 = add nsw i32 %444, %call508
  store i32 %add509, i32* %no_bits, align 4
  %445 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %yuv_format510 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %445, i32 0, i32 159
  %446 = load i32, i32* %yuv_format510, align 4
  %cmp511 = icmp ne i32 %446, 0
  br i1 %cmp511, label %if.then.513, label %if.end.516

if.then.513:                                      ; preds = %if.then.507
  %call514 = call i32 @writeChromaCoeff()
  %447 = load i32, i32* %no_bits, align 4
  %add515 = add nsw i32 %447, %call514
  store i32 %add515, i32* %no_bits, align 4
  br label %if.end.516

if.end.516:                                       ; preds = %if.then.513, %if.then.507
  br label %if.end.517

if.end.517:                                       ; preds = %if.end.516, %land.lhs.true.503, %lor.lhs.false.499
  %448 = load i32, i32* %no_bits, align 4
  ret i32 %448
}

declare void @writeFieldModeInfo_CABAC(%struct.syntaxelement*, %struct.EncodingEnvironment*) #1

declare i32 @writeSyntaxElement2Buf_Fixed(%struct.syntaxelement*, %struct.Bitstream*) #1

declare void @writeMB_typeInfo_CABAC(%struct.syntaxelement*, %struct.EncodingEnvironment*) #1

declare i32 @field_flag_inference(...) #1

declare void @writeMB_skip_flagInfo_CABAC(%struct.syntaxelement*, %struct.EncodingEnvironment*) #1

declare void @writeB8_typeInfo_CABAC(%struct.syntaxelement*, %struct.EncodingEnvironment*) #1

declare void @writeMB_transform_size_CABAC(%struct.syntaxelement*, %struct.EncodingEnvironment*) #1

; Function Attrs: nounwind uwtable
define void @write_terminating_bit(i16 signext %bit) #0 {
entry:
  %bit.addr = alloca i16, align 2
  %dataPart = alloca %struct.datapartition*, align 8
  %partMap = alloca i32*, align 8
  %eep_dp = alloca %struct.EncodingEnvironment*, align 8
  store i16 %bit, i16* %bit.addr, align 2
  %0 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %partition_mode = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %0, i32 0, i32 61
  %1 = load i32, i32* %partition_mode, align 4
  %idxprom = sext i32 %1 to i64
  %arrayidx = getelementptr inbounds [2 x i32*], [2 x i32*]* @assignSE2partition, i32 0, i64 %idxprom
  %2 = load i32*, i32** %arrayidx, align 8
  store i32* %2, i32** %partMap, align 8
  %3 = load i32*, i32** %partMap, align 8
  %arrayidx1 = getelementptr inbounds i32, i32* %3, i64 2
  %4 = load i32, i32* %arrayidx1, align 4
  %idxprom2 = sext i32 %4 to i64
  %5 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %currentSlice = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %5, i32 0, i32 50
  %6 = load %struct.Slice*, %struct.Slice** %currentSlice, align 8
  %partArr = getelementptr inbounds %struct.Slice, %struct.Slice* %6, i32 0, i32 6
  %7 = load %struct.datapartition*, %struct.datapartition** %partArr, align 8
  %arrayidx3 = getelementptr inbounds %struct.datapartition, %struct.datapartition* %7, i64 %idxprom2
  store %struct.datapartition* %arrayidx3, %struct.datapartition** %dataPart, align 8
  %8 = load %struct.datapartition*, %struct.datapartition** %dataPart, align 8
  %bitstream = getelementptr inbounds %struct.datapartition, %struct.datapartition* %8, i32 0, i32 0
  %9 = load %struct.Bitstream*, %struct.Bitstream** %bitstream, align 8
  %write_flag = getelementptr inbounds %struct.Bitstream, %struct.Bitstream* %9, i32 0, i32 10
  store i32 1, i32* %write_flag, align 4
  %10 = load %struct.datapartition*, %struct.datapartition** %dataPart, align 8
  %ee_cabac = getelementptr inbounds %struct.datapartition, %struct.datapartition* %10, i32 0, i32 1
  store %struct.EncodingEnvironment* %ee_cabac, %struct.EncodingEnvironment** %eep_dp, align 8
  %11 = load %struct.EncodingEnvironment*, %struct.EncodingEnvironment** %eep_dp, align 8
  %12 = load i16, i16* %bit.addr, align 2
  call void @biari_encode_symbol_final(%struct.EncodingEnvironment* %11, i16 signext %12)
  ret void
}

declare void @biari_encode_symbol_final(%struct.EncodingEnvironment*, i16 signext) #1

; Function Attrs: nounwind uwtable
define i32 @writeChromaIntraPredMode() #0 {
entry:
  %currMB = alloca %struct.macroblock*, align 8
  %currSE = alloca %struct.syntaxelement*, align 8
  %currSlice = alloca %struct.Slice*, align 8
  %bitCount = alloca i32*, align 8
  %partMap = alloca i32*, align 8
  %rate = alloca i32, align 4
  %dataPart = alloca %struct.datapartition*, align 8
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i32 0, i32 3
  %1 = load i32, i32* %current_mb_nr, align 4
  %idxprom = sext i32 %1 to i64
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 51
  %3 = load %struct.macroblock*, %struct.macroblock** %mb_data, align 8
  %arrayidx = getelementptr inbounds %struct.macroblock, %struct.macroblock* %3, i64 %idxprom
  store %struct.macroblock* %arrayidx, %struct.macroblock** %currMB, align 8
  %4 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %currSEnr = getelementptr inbounds %struct.macroblock, %struct.macroblock* %4, i32 0, i32 0
  %5 = load i32, i32* %currSEnr, align 4
  %idxprom1 = sext i32 %5 to i64
  %6 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %MB_SyntaxElements = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %6, i32 0, i32 52
  %arrayidx2 = getelementptr inbounds [1200 x %struct.syntaxelement], [1200 x %struct.syntaxelement]* %MB_SyntaxElements, i32 0, i64 %idxprom1
  store %struct.syntaxelement* %arrayidx2, %struct.syntaxelement** %currSE, align 8
  %7 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %currentSlice = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %7, i32 0, i32 50
  %8 = load %struct.Slice*, %struct.Slice** %currentSlice, align 8
  store %struct.Slice* %8, %struct.Slice** %currSlice, align 8
  %9 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %bitcounter = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i32 0, i32 5
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %bitcounter, i32 0, i32 0
  store i32* %arraydecay, i32** %bitCount, align 8
  %10 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %partition_mode = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %10, i32 0, i32 61
  %11 = load i32, i32* %partition_mode, align 4
  %idxprom3 = sext i32 %11 to i64
  %arrayidx4 = getelementptr inbounds [2 x i32*], [2 x i32*]* @assignSE2partition, i32 0, i64 %idxprom3
  %12 = load i32*, i32** %arrayidx4, align 8
  store i32* %12, i32** %partMap, align 8
  store i32 0, i32* %rate, align 4
  %13 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %symbol_mode = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %13, i32 0, i32 59
  %14 = load i32, i32* %symbol_mode, align 4
  %cmp = icmp eq i32 %14, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %15 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %mapping = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %15, i32 0, i32 8
  store void (i32, i32, i32*, i32*)* @ue_linfo, void (i32, i32, i32*, i32*)** %mapping, align 8
  br label %if.end

if.else:                                          ; preds = %entry
  %16 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %writing = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %16, i32 0, i32 9
  store void (%struct.syntaxelement*, %struct.EncodingEnvironment*)* @writeCIPredMode_CABAC, void (%struct.syntaxelement*, %struct.EncodingEnvironment*)** %writing, align 8
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %17 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %c_ipred_mode = getelementptr inbounds %struct.macroblock, %struct.macroblock* %17, i32 0, i32 20
  %18 = load i32, i32* %c_ipred_mode, align 4
  %19 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %value1 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %19, i32 0, i32 1
  store i32 %18, i32* %value1, align 4
  %20 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %value2 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %20, i32 0, i32 2
  store i32 0, i32* %value2, align 4
  %21 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %type = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %21, i32 0, i32 0
  store i32 4, i32* %type, align 4
  %22 = load i32*, i32** %partMap, align 8
  %arrayidx5 = getelementptr inbounds i32, i32* %22, i64 4
  %23 = load i32, i32* %arrayidx5, align 4
  %idxprom6 = sext i32 %23 to i64
  %24 = load %struct.Slice*, %struct.Slice** %currSlice, align 8
  %partArr = getelementptr inbounds %struct.Slice, %struct.Slice* %24, i32 0, i32 6
  %25 = load %struct.datapartition*, %struct.datapartition** %partArr, align 8
  %arrayidx7 = getelementptr inbounds %struct.datapartition, %struct.datapartition* %25, i64 %idxprom6
  store %struct.datapartition* %arrayidx7, %struct.datapartition** %dataPart, align 8
  %26 = load %struct.datapartition*, %struct.datapartition** %dataPart, align 8
  %writeSyntaxElement = getelementptr inbounds %struct.datapartition, %struct.datapartition* %26, i32 0, i32 2
  %27 = load i32 (%struct.syntaxelement*, %struct.datapartition*)*, i32 (%struct.syntaxelement*, %struct.datapartition*)** %writeSyntaxElement, align 8
  %28 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %29 = load %struct.datapartition*, %struct.datapartition** %dataPart, align 8
  %call = call i32 %27(%struct.syntaxelement* %28, %struct.datapartition* %29)
  %30 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %len = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %30, i32 0, i32 3
  %31 = load i32, i32* %len, align 4
  %32 = load i32*, i32** %bitCount, align 8
  %arrayidx8 = getelementptr inbounds i32, i32* %32, i64 6
  %33 = load i32, i32* %arrayidx8, align 4
  %add = add nsw i32 %33, %31
  store i32 %add, i32* %arrayidx8, align 4
  %34 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %len9 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %34, i32 0, i32 3
  %35 = load i32, i32* %len9, align 4
  %36 = load i32, i32* %rate, align 4
  %add10 = add nsw i32 %36, %35
  store i32 %add10, i32* %rate, align 4
  %37 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %incdec.ptr = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %37, i32 1
  store %struct.syntaxelement* %incdec.ptr, %struct.syntaxelement** %currSE, align 8
  %38 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %currSEnr11 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %38, i32 0, i32 0
  %39 = load i32, i32* %currSEnr11, align 4
  %inc = add nsw i32 %39, 1
  store i32 %inc, i32* %currSEnr11, align 4
  %40 = load i32, i32* %rate, align 4
  ret i32 %40
}

declare void @writeCIPredMode_CABAC(%struct.syntaxelement*, %struct.EncodingEnvironment*) #1

; Function Attrs: nounwind uwtable
define void @set_last_dquant() #0 {
entry:
  %currMB = alloca %struct.macroblock*, align 8
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i32 0, i32 3
  %1 = load i32, i32* %current_mb_nr, align 4
  %idxprom = sext i32 %1 to i64
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 51
  %3 = load %struct.macroblock*, %struct.macroblock** %mb_data, align 8
  %arrayidx = getelementptr inbounds %struct.macroblock, %struct.macroblock* %3, i64 %idxprom
  store %struct.macroblock* %arrayidx, %struct.macroblock** %currMB, align 8
  %4 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type = getelementptr inbounds %struct.macroblock, %struct.macroblock* %4, i32 0, i32 8
  %5 = load i32, i32* %mb_type, align 4
  %cmp = icmp ne i32 %5, 9
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false

land.lhs.true:                                    ; preds = %entry
  %6 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type1 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %6, i32 0, i32 8
  %7 = load i32, i32* %mb_type1, align 4
  %cmp2 = icmp ne i32 %7, 10
  br i1 %cmp2, label %land.lhs.true.3, label %lor.lhs.false

land.lhs.true.3:                                  ; preds = %land.lhs.true
  %8 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type4 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %8, i32 0, i32 8
  %9 = load i32, i32* %mb_type4, align 4
  %cmp5 = icmp ne i32 %9, 13
  br i1 %cmp5, label %land.lhs.true.6, label %lor.lhs.false

land.lhs.true.6:                                  ; preds = %land.lhs.true.3
  %10 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type7 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %10, i32 0, i32 8
  %11 = load i32, i32* %mb_type7, align 4
  %cmp8 = icmp ne i32 %11, 0
  br i1 %cmp8, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true.6, %land.lhs.true.3, %land.lhs.true, %entry
  %12 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type9 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %12, i32 0, i32 8
  %13 = load i32, i32* %mb_type9, align 4
  %cmp10 = icmp eq i32 %13, 9
  br i1 %cmp10, label %if.then, label %lor.lhs.false.11

lor.lhs.false.11:                                 ; preds = %lor.lhs.false
  %14 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type12 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %14, i32 0, i32 8
  %15 = load i32, i32* %mb_type12, align 4
  %cmp13 = icmp eq i32 %15, 10
  br i1 %cmp13, label %if.then, label %lor.lhs.false.14

lor.lhs.false.14:                                 ; preds = %lor.lhs.false.11
  %16 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type15 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %16, i32 0, i32 8
  %17 = load i32, i32* %mb_type15, align 4
  %cmp16 = icmp eq i32 %17, 13
  br i1 %cmp16, label %if.then, label %lor.lhs.false.17

lor.lhs.false.17:                                 ; preds = %lor.lhs.false.14
  %18 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %18, i32 0, i32 6
  %19 = load i32, i32* %type, align 4
  %cmp18 = icmp eq i32 %19, 1
  br i1 %cmp18, label %land.lhs.true.19, label %if.else

land.lhs.true.19:                                 ; preds = %lor.lhs.false.17
  %20 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %cbp = getelementptr inbounds %struct.macroblock, %struct.macroblock* %20, i32 0, i32 12
  %21 = load i32, i32* %cbp, align 4
  %cmp20 = icmp ne i32 %21, 0
  br i1 %cmp20, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true.19, %lor.lhs.false.14, %lor.lhs.false.11, %lor.lhs.false, %land.lhs.true.6
  %22 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %delta_qp = getelementptr inbounds %struct.macroblock, %struct.macroblock* %22, i32 0, i32 2
  %23 = load i32, i32* %delta_qp, align 4
  store i32 %23, i32* @last_dquant, align 4
  br label %if.end

if.else:                                          ; preds = %land.lhs.true.19, %lor.lhs.false.17
  store i32 0, i32* @last_dquant, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define void @write_one_macroblock(i32 %eos_bit) #0 {
entry:
  %eos_bit.addr = alloca i32, align 4
  %currMB = alloca %struct.macroblock*, align 8
  %bitCount = alloca i32*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i32 %eos_bit, i32* %eos_bit.addr, align 4
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i32 0, i32 3
  %1 = load i32, i32* %current_mb_nr, align 4
  %idxprom = sext i32 %1 to i64
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 51
  %3 = load %struct.macroblock*, %struct.macroblock** %mb_data, align 8
  %arrayidx = getelementptr inbounds %struct.macroblock, %struct.macroblock* %3, i64 %idxprom
  store %struct.macroblock* %arrayidx, %struct.macroblock** %currMB, align 8
  %4 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %bitcounter = getelementptr inbounds %struct.macroblock, %struct.macroblock* %4, i32 0, i32 5
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %bitcounter, i32 0, i32 0
  store i32* %arraydecay, i32** %bitCount, align 8
  %5 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr1 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %5, i32 0, i32 3
  %6 = load i32, i32* %current_mb_nr1, align 4
  %cmp = icmp eq i32 %6, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* @intras, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %7 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type = getelementptr inbounds %struct.macroblock, %struct.macroblock* %7, i32 0, i32 8
  %8 = load i32, i32* %mb_type, align 4
  %cmp2 = icmp eq i32 %8, 9
  br i1 %cmp2, label %if.then.8, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %9 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type3 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i32 0, i32 8
  %10 = load i32, i32* %mb_type3, align 4
  %cmp4 = icmp eq i32 %10, 10
  br i1 %cmp4, label %if.then.8, label %lor.lhs.false.5

lor.lhs.false.5:                                  ; preds = %lor.lhs.false
  %11 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type6 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %11, i32 0, i32 8
  %12 = load i32, i32* %mb_type6, align 4
  %cmp7 = icmp eq i32 %12, 13
  br i1 %cmp7, label %if.then.8, label %if.end.9

if.then.8:                                        ; preds = %lor.lhs.false.5, %lor.lhs.false, %if.end
  %13 = load i32, i32* @intras, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* @intras, align 4
  br label %if.end.9

if.end.9:                                         ; preds = %if.then.8, %lor.lhs.false.5
  %14 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %symbol_mode = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %14, i32 0, i32 59
  %15 = load i32, i32* %symbol_mode, align 4
  %cmp10 = icmp eq i32 %15, 1
  br i1 %cmp10, label %land.lhs.true, label %if.end.15

land.lhs.true:                                    ; preds = %if.end.9
  %16 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr11 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %16, i32 0, i32 3
  %17 = load i32, i32* %current_mb_nr11, align 4
  %18 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %currentSlice = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %18, i32 0, i32 50
  %19 = load %struct.Slice*, %struct.Slice** %currentSlice, align 8
  %start_mb_nr = getelementptr inbounds %struct.Slice, %struct.Slice* %19, i32 0, i32 3
  %20 = load i32, i32* %start_mb_nr, align 4
  %cmp12 = icmp ne i32 %17, %20
  br i1 %cmp12, label %land.lhs.true.13, label %if.end.15

land.lhs.true.13:                                 ; preds = %land.lhs.true
  %21 = load i32, i32* %eos_bit.addr, align 4
  %tobool = icmp ne i32 %21, 0
  br i1 %tobool, label %if.then.14, label %if.end.15

if.then.14:                                       ; preds = %land.lhs.true.13
  call void @write_terminating_bit(i16 signext 0)
  br label %if.end.15

if.end.15:                                        ; preds = %if.then.14, %land.lhs.true.13, %land.lhs.true, %if.end.9
  store i32 1, i32* @cabac_encoding, align 4
  %call = call i32 @writeMBLayer(i32 0)
  %22 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type16 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %22, i32 0, i32 8
  %23 = load i32, i32* %mb_type16, align 4
  %cmp17 = icmp ne i32 %23, 0
  br i1 %cmp17, label %if.end.38, label %lor.lhs.false.18

lor.lhs.false.18:                                 ; preds = %if.end.15
  %24 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %24, i32 0, i32 6
  %25 = load i32, i32* %type, align 4
  %cmp19 = icmp eq i32 %25, 1
  br i1 %cmp19, label %land.lhs.true.20, label %if.then.22

land.lhs.true.20:                                 ; preds = %lor.lhs.false.18
  %26 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %cbp = getelementptr inbounds %struct.macroblock, %struct.macroblock* %26, i32 0, i32 12
  %27 = load i32, i32* %cbp, align 4
  %cmp21 = icmp ne i32 %27, 0
  br i1 %cmp21, label %if.end.38, label %if.then.22

if.then.22:                                       ; preds = %land.lhs.true.20, %lor.lhs.false.18
  store i32 0, i32* %j, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc.35, %if.then.22
  %28 = load i32, i32* %j, align 4
  %29 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %num_blk8x8_uv = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %29, i32 0, i32 157
  %30 = load i32, i32* %num_blk8x8_uv, align 4
  %add = add nsw i32 4, %30
  %cmp23 = icmp slt i32 %28, %add
  br i1 %cmp23, label %for.body, label %for.end.37

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4
  br label %for.cond.24

for.cond.24:                                      ; preds = %for.inc, %for.body
  %31 = load i32, i32* %i, align 4
  %cmp25 = icmp slt i32 %31, 4
  br i1 %cmp25, label %for.body.26, label %for.end

for.body.26:                                      ; preds = %for.cond.24
  %32 = load i32, i32* %j, align 4
  %idxprom27 = sext i32 %32 to i64
  %33 = load i32, i32* %i, align 4
  %idxprom28 = sext i32 %33 to i64
  %34 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr29 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %34, i32 0, i32 3
  %35 = load i32, i32* %current_mb_nr29, align 4
  %idxprom30 = sext i32 %35 to i64
  %36 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %nz_coeff = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %36, i32 0, i32 28
  %37 = load i32***, i32**** %nz_coeff, align 8
  %arrayidx31 = getelementptr inbounds i32**, i32*** %37, i64 %idxprom30
  %38 = load i32**, i32*** %arrayidx31, align 8
  %arrayidx32 = getelementptr inbounds i32*, i32** %38, i64 %idxprom28
  %39 = load i32*, i32** %arrayidx32, align 8
  %arrayidx33 = getelementptr inbounds i32, i32* %39, i64 %idxprom27
  store i32 0, i32* %arrayidx33, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body.26
  %40 = load i32, i32* %i, align 4
  %inc34 = add nsw i32 %40, 1
  store i32 %inc34, i32* %i, align 4
  br label %for.cond.24

for.end:                                          ; preds = %for.cond.24
  br label %for.inc.35

for.inc.35:                                       ; preds = %for.end
  %41 = load i32, i32* %j, align 4
  %inc36 = add nsw i32 %41, 1
  store i32 %inc36, i32* %j, align 4
  br label %for.cond

for.end.37:                                       ; preds = %for.cond
  br label %if.end.38

if.end.38:                                        ; preds = %for.end.37, %land.lhs.true.20, %if.end.15
  call void @set_last_dquant()
  %42 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %UseConstrainedIntraPred = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %42, i32 0, i32 24
  %43 = load i32, i32* %UseConstrainedIntraPred, align 4
  %tobool39 = icmp ne i32 %43, 0
  br i1 %tobool39, label %land.lhs.true.40, label %if.end.60

land.lhs.true.40:                                 ; preds = %if.end.38
  %44 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type41 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %44, i32 0, i32 6
  %45 = load i32, i32* %type41, align 4
  %cmp42 = icmp eq i32 %45, 0
  br i1 %cmp42, label %if.then.46, label %lor.lhs.false.43

lor.lhs.false.43:                                 ; preds = %land.lhs.true.40
  %46 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type44 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %46, i32 0, i32 6
  %47 = load i32, i32* %type44, align 4
  %cmp45 = icmp eq i32 %47, 1
  br i1 %cmp45, label %if.then.46, label %if.end.60

if.then.46:                                       ; preds = %lor.lhs.false.43, %land.lhs.true.40
  %48 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type47 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %48, i32 0, i32 8
  %49 = load i32, i32* %mb_type47, align 4
  %cmp48 = icmp eq i32 %49, 9
  br i1 %cmp48, label %if.end.59, label %lor.lhs.false.49

lor.lhs.false.49:                                 ; preds = %if.then.46
  %50 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type50 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %50, i32 0, i32 8
  %51 = load i32, i32* %mb_type50, align 4
  %cmp51 = icmp eq i32 %51, 10
  br i1 %cmp51, label %if.end.59, label %lor.lhs.false.52

lor.lhs.false.52:                                 ; preds = %lor.lhs.false.49
  %52 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type53 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %52, i32 0, i32 8
  %53 = load i32, i32* %mb_type53, align 4
  %cmp54 = icmp eq i32 %53, 13
  br i1 %cmp54, label %if.end.59, label %if.then.55

if.then.55:                                       ; preds = %lor.lhs.false.52
  %54 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr56 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %54, i32 0, i32 3
  %55 = load i32, i32* %current_mb_nr56, align 4
  %idxprom57 = sext i32 %55 to i64
  %56 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %intra_block = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %56, i32 0, i32 54
  %57 = load i32*, i32** %intra_block, align 8
  %arrayidx58 = getelementptr inbounds i32, i32* %57, i64 %idxprom57
  store i32 0, i32* %arrayidx58, align 4
  br label %if.end.59

if.end.59:                                        ; preds = %if.then.55, %lor.lhs.false.52, %lor.lhs.false.49, %if.then.46
  br label %if.end.60

if.end.60:                                        ; preds = %if.end.59, %lor.lhs.false.43, %if.end.38
  %58 = load i32*, i32** %bitCount, align 8
  %arrayidx61 = getelementptr inbounds i32, i32* %58, i64 2
  %59 = load i32, i32* %arrayidx61, align 4
  %60 = load i32*, i32** %bitCount, align 8
  %arrayidx62 = getelementptr inbounds i32, i32* %60, i64 5
  %61 = load i32, i32* %arrayidx62, align 4
  %add63 = add nsw i32 %59, %61
  %62 = load i32*, i32** %bitCount, align 8
  %arrayidx64 = getelementptr inbounds i32, i32* %62, i64 3
  %63 = load i32, i32* %arrayidx64, align 4
  %add65 = add nsw i32 %add63, %63
  %64 = load i32*, i32** %bitCount, align 8
  %arrayidx66 = getelementptr inbounds i32, i32* %64, i64 4
  %65 = load i32, i32* %arrayidx66, align 4
  %add67 = add nsw i32 %add65, %65
  %66 = load i32*, i32** %bitCount, align 8
  %arrayidx68 = getelementptr inbounds i32, i32* %66, i64 7
  %67 = load i32, i32* %arrayidx68, align 4
  %add69 = add nsw i32 %add67, %67
  %68 = load i32*, i32** %bitCount, align 8
  %arrayidx70 = getelementptr inbounds i32, i32* %68, i64 6
  %69 = load i32, i32* %arrayidx70, align 4
  %add71 = add nsw i32 %add69, %69
  %70 = load i32*, i32** %bitCount, align 8
  %arrayidx72 = getelementptr inbounds i32, i32* %70, i64 1
  store i32 %add71, i32* %arrayidx72, align 4
  %71 = load i32*, i32** %bitCount, align 8
  %arrayidx73 = getelementptr inbounds i32, i32* %71, i64 2
  %72 = load i32, i32* %arrayidx73, align 4
  %73 = load i32*, i32** %bitCount, align 8
  %arrayidx74 = getelementptr inbounds i32, i32* %73, i64 3
  %74 = load i32, i32* %arrayidx74, align 4
  %add75 = add nsw i32 %72, %74
  %75 = load i32*, i32** %bitCount, align 8
  %arrayidx76 = getelementptr inbounds i32, i32* %75, i64 4
  %76 = load i32, i32* %arrayidx76, align 4
  %add77 = add nsw i32 %add75, %76
  %77 = load i32*, i32** %bitCount, align 8
  %arrayidx78 = getelementptr inbounds i32, i32* %77, i64 7
  %78 = load i32, i32* %arrayidx78, align 4
  %add79 = add nsw i32 %add77, %78
  %79 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofMBHeaderBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %79, i32 0, i32 125
  store i32 %add79, i32* %NumberofMBHeaderBits, align 4
  %80 = load i32*, i32** %bitCount, align 8
  %arrayidx80 = getelementptr inbounds i32, i32* %80, i64 5
  %81 = load i32, i32* %arrayidx80, align 4
  %82 = load i32*, i32** %bitCount, align 8
  %arrayidx81 = getelementptr inbounds i32, i32* %82, i64 6
  %83 = load i32, i32* %arrayidx81, align 4
  %add82 = add nsw i32 %81, %83
  %84 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofMBTextureBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %84, i32 0, i32 124
  store i32 %add82, i32* %NumberofMBTextureBits, align 4
  %85 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofMBTextureBits83 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %85, i32 0, i32 124
  %86 = load i32, i32* %NumberofMBTextureBits83, align 4
  %87 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofTextureBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %87, i32 0, i32 120
  %88 = load i32, i32* %NumberofTextureBits, align 4
  %add84 = add nsw i32 %88, %86
  store i32 %add84, i32* %NumberofTextureBits, align 4
  %89 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofMBHeaderBits85 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %89, i32 0, i32 125
  %90 = load i32, i32* %NumberofMBHeaderBits85, align 4
  %91 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofHeaderBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %91, i32 0, i32 119
  %92 = load i32, i32* %NumberofHeaderBits, align 4
  %add86 = add nsw i32 %92, %90
  store i32 %add86, i32* %NumberofHeaderBits, align 4
  %93 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %93, i32 0, i32 139
  %94 = load i32, i32* %BasicUnit, align 4
  %95 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %95, i32 0, i32 136
  %96 = load i32, i32* %Frame_Total_Number_MB, align 4
  %cmp87 = icmp slt i32 %94, %96
  br i1 %cmp87, label %if.then.88, label %if.end.93

if.then.88:                                       ; preds = %if.end.60
  %97 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofMBHeaderBits89 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %97, i32 0, i32 125
  %98 = load i32, i32* %NumberofMBHeaderBits89, align 4
  %99 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitHeaderBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %99, i32 0, i32 121
  %100 = load i32, i32* %NumberofBasicUnitHeaderBits, align 4
  %add90 = add nsw i32 %100, %98
  store i32 %add90, i32* %NumberofBasicUnitHeaderBits, align 4
  %101 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofMBTextureBits91 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %101, i32 0, i32 124
  %102 = load i32, i32* %NumberofMBTextureBits91, align 4
  %103 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitTextureBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %103, i32 0, i32 122
  %104 = load i32, i32* %NumberofBasicUnitTextureBits, align 4
  %add92 = add nsw i32 %104, %102
  store i32 %add92, i32* %NumberofBasicUnitTextureBits, align 4
  br label %if.end.93

if.end.93:                                        ; preds = %if.then.88, %if.end.60
  %105 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedMacroBlocks = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %105, i32 0, i32 138
  %106 = load i32, i32* %NumberofCodedMacroBlocks, align 4
  %inc94 = add nsw i32 %106, 1
  store i32 %inc94, i32* %NumberofCodedMacroBlocks, align 4
  %107 = load i32*, i32** %bitCount, align 8
  %arrayidx95 = getelementptr inbounds i32, i32* %107, i64 1
  %108 = load i32, i32* %arrayidx95, align 4
  %109 = load %struct.StatParameters*, %struct.StatParameters** @stats, align 8
  %bit_slice = getelementptr inbounds %struct.StatParameters, %struct.StatParameters* %109, i32 0, i32 6
  %110 = load i32, i32* %bit_slice, align 4
  %add96 = add nsw i32 %110, %108
  store i32 %add96, i32* %bit_slice, align 4
  store i32 0, i32* @cabac_encoding, align 4
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @BType2CtxRef(i32 %btype) #0 {
entry:
  %retval = alloca i32, align 4
  %btype.addr = alloca i32, align 4
  store i32 %btype, i32* %btype.addr, align 4
  %0 = load i32, i32* %btype.addr, align 4
  %cmp = icmp slt i32 %0, 4
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  br label %return

if.else:                                          ; preds = %entry
  store i32 1, i32* %retval
  br label %return

return:                                           ; preds = %if.else, %if.then
  %1 = load i32, i32* %retval
  ret i32 %1
}

; Function Attrs: nounwind uwtable
define i32 @writeReferenceFrame(i32 %mode, i32 %i, i32 %j, i32 %fwd_flag, i32 %ref) #0 {
entry:
  %retval = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %i.addr = alloca i32, align 4
  %j.addr = alloca i32, align 4
  %fwd_flag.addr = alloca i32, align 4
  %ref.addr = alloca i32, align 4
  %currMB = alloca %struct.macroblock*, align 8
  %currSE = alloca %struct.syntaxelement*, align 8
  %currSlice = alloca %struct.Slice*, align 8
  %bitCount = alloca i32*, align 8
  %partMap = alloca i32*, align 8
  %rate = alloca i32, align 4
  %dataPart = alloca %struct.datapartition*, align 8
  %list_offset = alloca i32, align 4
  %num_ref = alloca i32, align 4
  %flag_mode = alloca i32, align 4
  store i32 %mode, i32* %mode.addr, align 4
  store i32 %i, i32* %i.addr, align 4
  store i32 %j, i32* %j.addr, align 4
  store i32 %fwd_flag, i32* %fwd_flag.addr, align 4
  store i32 %ref, i32* %ref.addr, align 4
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i32 0, i32 3
  %1 = load i32, i32* %current_mb_nr, align 4
  %idxprom = sext i32 %1 to i64
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 51
  %3 = load %struct.macroblock*, %struct.macroblock** %mb_data, align 8
  %arrayidx = getelementptr inbounds %struct.macroblock, %struct.macroblock* %3, i64 %idxprom
  store %struct.macroblock* %arrayidx, %struct.macroblock** %currMB, align 8
  %4 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %currSEnr = getelementptr inbounds %struct.macroblock, %struct.macroblock* %4, i32 0, i32 0
  %5 = load i32, i32* %currSEnr, align 4
  %idxprom1 = sext i32 %5 to i64
  %6 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %MB_SyntaxElements = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %6, i32 0, i32 52
  %arrayidx2 = getelementptr inbounds [1200 x %struct.syntaxelement], [1200 x %struct.syntaxelement]* %MB_SyntaxElements, i32 0, i64 %idxprom1
  store %struct.syntaxelement* %arrayidx2, %struct.syntaxelement** %currSE, align 8
  %7 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %currentSlice = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %7, i32 0, i32 50
  %8 = load %struct.Slice*, %struct.Slice** %currentSlice, align 8
  store %struct.Slice* %8, %struct.Slice** %currSlice, align 8
  %9 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %bitcounter = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i32 0, i32 5
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %bitcounter, i32 0, i32 0
  store i32* %arraydecay, i32** %bitCount, align 8
  %10 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %partition_mode = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %10, i32 0, i32 61
  %11 = load i32, i32* %partition_mode, align 4
  %idxprom3 = sext i32 %11 to i64
  %arrayidx4 = getelementptr inbounds [2 x i32*], [2 x i32*]* @assignSE2partition, i32 0, i64 %idxprom3
  %12 = load i32*, i32** %arrayidx4, align 8
  store i32* %12, i32** %partMap, align 8
  store i32 0, i32* %rate, align 4
  %13 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %MbaffFrameFlag = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %13, i32 0, i32 90
  %14 = load i32, i32* %MbaffFrameFlag, align 4
  %tobool = icmp ne i32 %14, 0
  br i1 %tobool, label %land.lhs.true, label %cond.false

land.lhs.true:                                    ; preds = %entry
  %15 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_field = getelementptr inbounds %struct.macroblock, %struct.macroblock* %15, i32 0, i32 22
  %16 = load i32, i32* %mb_field, align 4
  %tobool5 = icmp ne i32 %16, 0
  br i1 %tobool5, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true
  %17 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr6 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %17, i32 0, i32 3
  %18 = load i32, i32* %current_mb_nr6, align 4
  %rem = srem i32 %18, 2
  %tobool7 = icmp ne i32 %rem, 0
  %cond = select i1 %tobool7, i32 4, i32 2
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true, %entry
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond8 = phi i32 [ %cond, %cond.true ], [ 0, %cond.false ]
  store i32 %cond8, i32* %list_offset, align 4
  %19 = load i32, i32* %fwd_flag.addr, align 4
  %tobool9 = icmp ne i32 %19, 0
  br i1 %tobool9, label %cond.true.10, label %cond.false.13

cond.true.10:                                     ; preds = %cond.end
  %20 = load i32, i32* %list_offset, align 4
  %add = add nsw i32 0, %20
  %idxprom11 = sext i32 %add to i64
  %arrayidx12 = getelementptr inbounds [6 x i32], [6 x i32]* @listXsize, i32 0, i64 %idxprom11
  %21 = load i32, i32* %arrayidx12, align 4
  br label %cond.end.17

cond.false.13:                                    ; preds = %cond.end
  %22 = load i32, i32* %list_offset, align 4
  %add14 = add nsw i32 1, %22
  %idxprom15 = sext i32 %add14 to i64
  %arrayidx16 = getelementptr inbounds [6 x i32], [6 x i32]* @listXsize, i32 0, i64 %idxprom15
  %23 = load i32, i32* %arrayidx16, align 4
  br label %cond.end.17

cond.end.17:                                      ; preds = %cond.false.13, %cond.true.10
  %cond18 = phi i32 [ %21, %cond.true.10 ], [ %23, %cond.false.13 ]
  store i32 %cond18, i32* %num_ref, align 4
  store i32 0, i32* %flag_mode, align 4
  %24 = load i32, i32* %num_ref, align 4
  %cmp = icmp eq i32 %24, 1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end.17
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %cond.end.17
  %25 = load i32, i32* %num_ref, align 4
  %cmp19 = icmp eq i32 %25, 2
  br i1 %cmp19, label %if.then.20, label %if.end.21

if.then.20:                                       ; preds = %if.end
  store i32 1, i32* %flag_mode, align 4
  br label %if.end.21

if.end.21:                                        ; preds = %if.then.20, %if.end
  %26 = load i32, i32* %ref.addr, align 4
  %27 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %value1 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %27, i32 0, i32 1
  store i32 %26, i32* %value1, align 4
  %28 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %value2 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %28, i32 0, i32 2
  store i32 0, i32* %value2, align 4
  %29 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %type = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %29, i32 0, i32 0
  store i32 3, i32* %type, align 4
  %30 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %type22 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %30, i32 0, i32 0
  %31 = load i32, i32* %type22, align 4
  %idxprom23 = sext i32 %31 to i64
  %32 = load i32*, i32** %partMap, align 8
  %arrayidx24 = getelementptr inbounds i32, i32* %32, i64 %idxprom23
  %33 = load i32, i32* %arrayidx24, align 4
  %idxprom25 = sext i32 %33 to i64
  %34 = load %struct.Slice*, %struct.Slice** %currSlice, align 8
  %partArr = getelementptr inbounds %struct.Slice, %struct.Slice* %34, i32 0, i32 6
  %35 = load %struct.datapartition*, %struct.datapartition** %partArr, align 8
  %arrayidx26 = getelementptr inbounds %struct.datapartition, %struct.datapartition* %35, i64 %idxprom25
  store %struct.datapartition* %arrayidx26, %struct.datapartition** %dataPart, align 8
  %36 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %symbol_mode = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %36, i32 0, i32 59
  %37 = load i32, i32* %symbol_mode, align 4
  %cmp27 = icmp eq i32 %37, 0
  br i1 %cmp27, label %if.then.28, label %if.else.34

if.then.28:                                       ; preds = %if.end.21
  %38 = load i32, i32* %flag_mode, align 4
  %tobool29 = icmp ne i32 %38, 0
  br i1 %tobool29, label %if.then.30, label %if.else

if.then.30:                                       ; preds = %if.then.28
  %39 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %value131 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %39, i32 0, i32 1
  %40 = load i32, i32* %value131, align 4
  %sub = sub nsw i32 1, %40
  %41 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %bitpattern = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %41, i32 0, i32 5
  store i32 %sub, i32* %bitpattern, align 4
  %42 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %len = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %42, i32 0, i32 3
  store i32 1, i32* %len, align 4
  %43 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %44 = load %struct.datapartition*, %struct.datapartition** %dataPart, align 8
  %bitstream = getelementptr inbounds %struct.datapartition, %struct.datapartition* %44, i32 0, i32 0
  %45 = load %struct.Bitstream*, %struct.Bitstream** %bitstream, align 8
  %call = call i32 @writeSyntaxElement2Buf_Fixed(%struct.syntaxelement* %43, %struct.Bitstream* %45)
  br label %if.end.33

if.else:                                          ; preds = %if.then.28
  %46 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %mapping = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %46, i32 0, i32 8
  store void (i32, i32, i32*, i32*)* @ue_linfo, void (i32, i32, i32*, i32*)** %mapping, align 8
  %47 = load %struct.datapartition*, %struct.datapartition** %dataPart, align 8
  %writeSyntaxElement = getelementptr inbounds %struct.datapartition, %struct.datapartition* %47, i32 0, i32 2
  %48 = load i32 (%struct.syntaxelement*, %struct.datapartition*)*, i32 (%struct.syntaxelement*, %struct.datapartition*)** %writeSyntaxElement, align 8
  %49 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %50 = load %struct.datapartition*, %struct.datapartition** %dataPart, align 8
  %call32 = call i32 %48(%struct.syntaxelement* %49, %struct.datapartition* %50)
  br label %if.end.33

if.end.33:                                        ; preds = %if.else, %if.then.30
  br label %if.end.41

if.else.34:                                       ; preds = %if.end.21
  %51 = load i32, i32* %mode.addr, align 4
  %call35 = call i32 @BType2CtxRef(i32 %51)
  %52 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %context = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %52, i32 0, i32 6
  store i32 %call35, i32* %context, align 4
  %53 = load i32, i32* %i.addr, align 4
  %54 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %subblock_x = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %54, i32 0, i32 18
  store i32 %53, i32* %subblock_x, align 4
  %55 = load i32, i32* %j.addr, align 4
  %56 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %subblock_y = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %56, i32 0, i32 19
  store i32 %55, i32* %subblock_y, align 4
  %57 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %writing = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %57, i32 0, i32 9
  store void (%struct.syntaxelement*, %struct.EncodingEnvironment*)* @writeRefFrame_CABAC, void (%struct.syntaxelement*, %struct.EncodingEnvironment*)** %writing, align 8
  %58 = load i32, i32* %fwd_flag.addr, align 4
  %tobool36 = icmp ne i32 %58, 0
  %cond37 = select i1 %tobool36, i32 0, i32 1
  %59 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %value238 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %59, i32 0, i32 2
  store i32 %cond37, i32* %value238, align 4
  %60 = load %struct.datapartition*, %struct.datapartition** %dataPart, align 8
  %writeSyntaxElement39 = getelementptr inbounds %struct.datapartition, %struct.datapartition* %60, i32 0, i32 2
  %61 = load i32 (%struct.syntaxelement*, %struct.datapartition*)*, i32 (%struct.syntaxelement*, %struct.datapartition*)** %writeSyntaxElement39, align 8
  %62 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %63 = load %struct.datapartition*, %struct.datapartition** %dataPart, align 8
  %call40 = call i32 %61(%struct.syntaxelement* %62, %struct.datapartition* %63)
  br label %if.end.41

if.end.41:                                        ; preds = %if.else.34, %if.end.33
  %64 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %len42 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %64, i32 0, i32 3
  %65 = load i32, i32* %len42, align 4
  %66 = load i32*, i32** %bitCount, align 8
  %arrayidx43 = getelementptr inbounds i32, i32* %66, i64 3
  %67 = load i32, i32* %arrayidx43, align 4
  %add44 = add nsw i32 %67, %65
  store i32 %add44, i32* %arrayidx43, align 4
  %68 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %len45 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %68, i32 0, i32 3
  %69 = load i32, i32* %len45, align 4
  %70 = load i32, i32* %rate, align 4
  %add46 = add nsw i32 %70, %69
  store i32 %add46, i32* %rate, align 4
  %71 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %incdec.ptr = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %71, i32 1
  store %struct.syntaxelement* %incdec.ptr, %struct.syntaxelement** %currSE, align 8
  %72 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %currSEnr47 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %72, i32 0, i32 0
  %73 = load i32, i32* %currSEnr47, align 4
  %inc = add nsw i32 %73, 1
  store i32 %inc, i32* %currSEnr47, align 4
  %74 = load i32, i32* %rate, align 4
  store i32 %74, i32* %retval
  br label %return

return:                                           ; preds = %if.end.41, %if.then
  %75 = load i32, i32* %retval
  ret i32 %75
}

declare void @writeRefFrame_CABAC(%struct.syntaxelement*, %struct.EncodingEnvironment*) #1

; Function Attrs: nounwind uwtable
define i32 @writeMotionVector8x8(i32 %i0, i32 %j0, i32 %i1, i32 %j1, i32 %refframe, i32 %list_idx, i32 %mv_mode) #0 {
entry:
  %i0.addr = alloca i32, align 4
  %j0.addr = alloca i32, align 4
  %i1.addr = alloca i32, align 4
  %j1.addr = alloca i32, align 4
  %refframe.addr = alloca i32, align 4
  %list_idx.addr = alloca i32, align 4
  %mv_mode.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %l = alloca i32, align 4
  %m = alloca i32, align 4
  %curr_mvd = alloca i32, align 4
  %dataPart = alloca %struct.datapartition*, align 8
  %rate = alloca i32, align 4
  %step_h = alloca i32, align 4
  %step_v = alloca i32, align 4
  %currMB = alloca %struct.macroblock*, align 8
  %currSE = alloca %struct.syntaxelement*, align 8
  %currSlice = alloca %struct.Slice*, align 8
  %bitCount = alloca i32*, align 8
  %partMap = alloca i32*, align 8
  %refindex = alloca i32, align 4
  %all_mv = alloca i16******, align 8
  %pred_mv = alloca i16******, align 8
  store i32 %i0, i32* %i0.addr, align 4
  store i32 %j0, i32* %j0.addr, align 4
  store i32 %i1, i32* %i1.addr, align 4
  store i32 %j1, i32* %j1.addr, align 4
  store i32 %refframe, i32* %refframe.addr, align 4
  store i32 %list_idx, i32* %list_idx.addr, align 4
  store i32 %mv_mode, i32* %mv_mode.addr, align 4
  store i32 0, i32* %rate, align 4
  %0 = load i32, i32* %mv_mode.addr, align 4
  %idxprom = sext i32 %0 to i64
  %1 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %part_size = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %1, i32 0, i32 21
  %arrayidx = getelementptr inbounds [8 x [2 x i32]], [8 x [2 x i32]]* %part_size, i32 0, i64 %idxprom
  %arrayidx1 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx, i32 0, i64 0
  %2 = load i32, i32* %arrayidx1, align 4
  store i32 %2, i32* %step_h, align 4
  %3 = load i32, i32* %mv_mode.addr, align 4
  %idxprom2 = sext i32 %3 to i64
  %4 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %part_size3 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %4, i32 0, i32 21
  %arrayidx4 = getelementptr inbounds [8 x [2 x i32]], [8 x [2 x i32]]* %part_size3, i32 0, i64 %idxprom2
  %arrayidx5 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx4, i32 0, i64 1
  %5 = load i32, i32* %arrayidx5, align 4
  store i32 %5, i32* %step_v, align 4
  %6 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %6, i32 0, i32 3
  %7 = load i32, i32* %current_mb_nr, align 4
  %idxprom6 = sext i32 %7 to i64
  %8 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %8, i32 0, i32 51
  %9 = load %struct.macroblock*, %struct.macroblock** %mb_data, align 8
  %arrayidx7 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 %idxprom6
  store %struct.macroblock* %arrayidx7, %struct.macroblock** %currMB, align 8
  %10 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %currSEnr = getelementptr inbounds %struct.macroblock, %struct.macroblock* %10, i32 0, i32 0
  %11 = load i32, i32* %currSEnr, align 4
  %idxprom8 = sext i32 %11 to i64
  %12 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %MB_SyntaxElements = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %12, i32 0, i32 52
  %arrayidx9 = getelementptr inbounds [1200 x %struct.syntaxelement], [1200 x %struct.syntaxelement]* %MB_SyntaxElements, i32 0, i64 %idxprom8
  store %struct.syntaxelement* %arrayidx9, %struct.syntaxelement** %currSE, align 8
  %13 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %currentSlice = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %13, i32 0, i32 50
  %14 = load %struct.Slice*, %struct.Slice** %currentSlice, align 8
  store %struct.Slice* %14, %struct.Slice** %currSlice, align 8
  %15 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %bitcounter = getelementptr inbounds %struct.macroblock, %struct.macroblock* %15, i32 0, i32 5
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %bitcounter, i32 0, i32 0
  store i32* %arraydecay, i32** %bitCount, align 8
  %16 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %partition_mode = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %16, i32 0, i32 61
  %17 = load i32, i32* %partition_mode, align 4
  %idxprom10 = sext i32 %17 to i64
  %arrayidx11 = getelementptr inbounds [2 x i32*], [2 x i32*]* @assignSE2partition, i32 0, i64 %idxprom10
  %18 = load i32*, i32** %arrayidx11, align 8
  store i32* %18, i32** %partMap, align 8
  %19 = load i32, i32* %refframe.addr, align 4
  store i32 %19, i32* %refindex, align 4
  %20 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %all_mv12 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %20, i32 0, i32 71
  %21 = load i16******, i16******* %all_mv12, align 8
  store i16****** %21, i16******* %all_mv, align 8
  %22 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pred_mv13 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %22, i32 0, i32 70
  %23 = load i16******, i16******* %pred_mv13, align 8
  store i16****** %23, i16******* %pred_mv, align 8
  %24 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %bi_pred_me = getelementptr inbounds %struct.macroblock, %struct.macroblock* %24, i32 0, i32 34
  %25 = load i32, i32* %bi_pred_me, align 4
  %tobool = icmp ne i32 %25, 0
  br i1 %tobool, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %26 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %b8pdir = getelementptr inbounds %struct.macroblock, %struct.macroblock* %26, i32 0, i32 15
  %arrayidx14 = getelementptr inbounds [4 x i32], [4 x i32]* %b8pdir, i32 0, i64 0
  %27 = load i32, i32* %arrayidx14, align 4
  %cmp = icmp eq i32 %27, 2
  br i1 %cmp, label %land.lhs.true.15, label %if.end

land.lhs.true.15:                                 ; preds = %land.lhs.true
  %28 = load i32, i32* %mv_mode.addr, align 4
  %cmp16 = icmp eq i32 %28, 1
  br i1 %cmp16, label %land.lhs.true.17, label %if.end

land.lhs.true.17:                                 ; preds = %land.lhs.true.15
  %29 = load i32, i32* %refindex, align 4
  %cmp18 = icmp eq i32 %29, 0
  br i1 %cmp18, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true.17
  %30 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %bi_pred_me19 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %30, i32 0, i32 34
  %31 = load i32, i32* %bi_pred_me19, align 4
  %cmp20 = icmp eq i32 %31, 1
  br i1 %cmp20, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then
  %32 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %bipred_mv1 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %32, i32 0, i32 72
  %33 = load i16******, i16******* %bipred_mv1, align 8
  br label %cond.end

cond.false:                                       ; preds = %if.then
  %34 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %bipred_mv2 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %34, i32 0, i32 73
  %35 = load i16******, i16******* %bipred_mv2, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i16****** [ %33, %cond.true ], [ %35, %cond.false ]
  store i16****** %cond, i16******* %all_mv, align 8
  br label %if.end

if.end:                                           ; preds = %cond.end, %land.lhs.true.17, %land.lhs.true.15, %land.lhs.true, %entry
  %36 = load i32, i32* %j0.addr, align 4
  store i32 %36, i32* %j, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc.94, %if.end
  %37 = load i32, i32* %j, align 4
  %38 = load i32, i32* %j1.addr, align 4
  %cmp21 = icmp slt i32 %37, %38
  br i1 %cmp21, label %for.body, label %for.end.96

for.body:                                         ; preds = %for.cond
  %39 = load i32, i32* %i0.addr, align 4
  store i32 %39, i32* %i, align 4
  br label %for.cond.22

for.cond.22:                                      ; preds = %for.inc.91, %for.body
  %40 = load i32, i32* %i, align 4
  %41 = load i32, i32* %i1.addr, align 4
  %cmp23 = icmp slt i32 %40, %41
  br i1 %cmp23, label %for.body.24, label %for.end.93

for.body.24:                                      ; preds = %for.cond.22
  store i32 0, i32* %k, align 4
  br label %for.cond.25

for.cond.25:                                      ; preds = %for.inc.88, %for.body.24
  %42 = load i32, i32* %k, align 4
  %cmp26 = icmp slt i32 %42, 2
  br i1 %cmp26, label %for.body.27, label %for.end.90

for.body.27:                                      ; preds = %for.cond.25
  %43 = load i32, i32* %k, align 4
  %idxprom28 = sext i32 %43 to i64
  %44 = load i32, i32* %mv_mode.addr, align 4
  %idxprom29 = sext i32 %44 to i64
  %45 = load i32, i32* %refindex, align 4
  %idxprom30 = sext i32 %45 to i64
  %46 = load i32, i32* %list_idx.addr, align 4
  %idxprom31 = sext i32 %46 to i64
  %47 = load i32, i32* %j, align 4
  %idxprom32 = sext i32 %47 to i64
  %48 = load i32, i32* %i, align 4
  %idxprom33 = sext i32 %48 to i64
  %49 = load i16******, i16******* %all_mv, align 8
  %arrayidx34 = getelementptr inbounds i16*****, i16****** %49, i64 %idxprom33
  %50 = load i16*****, i16****** %arrayidx34, align 8
  %arrayidx35 = getelementptr inbounds i16****, i16***** %50, i64 %idxprom32
  %51 = load i16****, i16***** %arrayidx35, align 8
  %arrayidx36 = getelementptr inbounds i16***, i16**** %51, i64 %idxprom31
  %52 = load i16***, i16**** %arrayidx36, align 8
  %arrayidx37 = getelementptr inbounds i16**, i16*** %52, i64 %idxprom30
  %53 = load i16**, i16*** %arrayidx37, align 8
  %arrayidx38 = getelementptr inbounds i16*, i16** %53, i64 %idxprom29
  %54 = load i16*, i16** %arrayidx38, align 8
  %arrayidx39 = getelementptr inbounds i16, i16* %54, i64 %idxprom28
  %55 = load i16, i16* %arrayidx39, align 2
  %conv = sext i16 %55 to i32
  %56 = load i32, i32* %k, align 4
  %idxprom40 = sext i32 %56 to i64
  %57 = load i32, i32* %mv_mode.addr, align 4
  %idxprom41 = sext i32 %57 to i64
  %58 = load i32, i32* %refindex, align 4
  %idxprom42 = sext i32 %58 to i64
  %59 = load i32, i32* %list_idx.addr, align 4
  %idxprom43 = sext i32 %59 to i64
  %60 = load i32, i32* %j, align 4
  %idxprom44 = sext i32 %60 to i64
  %61 = load i32, i32* %i, align 4
  %idxprom45 = sext i32 %61 to i64
  %62 = load i16******, i16******* %pred_mv, align 8
  %arrayidx46 = getelementptr inbounds i16*****, i16****** %62, i64 %idxprom45
  %63 = load i16*****, i16****** %arrayidx46, align 8
  %arrayidx47 = getelementptr inbounds i16****, i16***** %63, i64 %idxprom44
  %64 = load i16****, i16***** %arrayidx47, align 8
  %arrayidx48 = getelementptr inbounds i16***, i16**** %64, i64 %idxprom43
  %65 = load i16***, i16**** %arrayidx48, align 8
  %arrayidx49 = getelementptr inbounds i16**, i16*** %65, i64 %idxprom42
  %66 = load i16**, i16*** %arrayidx49, align 8
  %arrayidx50 = getelementptr inbounds i16*, i16** %66, i64 %idxprom41
  %67 = load i16*, i16** %arrayidx50, align 8
  %arrayidx51 = getelementptr inbounds i16, i16* %67, i64 %idxprom40
  %68 = load i16, i16* %arrayidx51, align 2
  %conv52 = sext i16 %68 to i32
  %sub = sub nsw i32 %conv, %conv52
  store i32 %sub, i32* %curr_mvd, align 4
  store i32 0, i32* %l, align 4
  br label %for.cond.53

for.cond.53:                                      ; preds = %for.inc.70, %for.body.27
  %69 = load i32, i32* %l, align 4
  %70 = load i32, i32* %step_v, align 4
  %cmp54 = icmp slt i32 %69, %70
  br i1 %cmp54, label %for.body.56, label %for.end.72

for.body.56:                                      ; preds = %for.cond.53
  store i32 0, i32* %m, align 4
  br label %for.cond.57

for.cond.57:                                      ; preds = %for.inc, %for.body.56
  %71 = load i32, i32* %m, align 4
  %72 = load i32, i32* %step_h, align 4
  %cmp58 = icmp slt i32 %71, %72
  br i1 %cmp58, label %for.body.60, label %for.end

for.body.60:                                      ; preds = %for.cond.57
  %73 = load i32, i32* %curr_mvd, align 4
  %74 = load i32, i32* %k, align 4
  %idxprom61 = sext i32 %74 to i64
  %75 = load i32, i32* %i, align 4
  %76 = load i32, i32* %m, align 4
  %add = add nsw i32 %75, %76
  %idxprom62 = sext i32 %add to i64
  %77 = load i32, i32* %j, align 4
  %78 = load i32, i32* %l, align 4
  %add63 = add nsw i32 %77, %78
  %idxprom64 = sext i32 %add63 to i64
  %79 = load i32, i32* %list_idx.addr, align 4
  %idxprom65 = sext i32 %79 to i64
  %80 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mvd = getelementptr inbounds %struct.macroblock, %struct.macroblock* %80, i32 0, i32 9
  %arrayidx66 = getelementptr inbounds [2 x [4 x [4 x [2 x i32]]]], [2 x [4 x [4 x [2 x i32]]]]* %mvd, i32 0, i64 %idxprom65
  %arrayidx67 = getelementptr inbounds [4 x [4 x [2 x i32]]], [4 x [4 x [2 x i32]]]* %arrayidx66, i32 0, i64 %idxprom64
  %arrayidx68 = getelementptr inbounds [4 x [2 x i32]], [4 x [2 x i32]]* %arrayidx67, i32 0, i64 %idxprom62
  %arrayidx69 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx68, i32 0, i64 %idxprom61
  store i32 %73, i32* %arrayidx69, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body.60
  %81 = load i32, i32* %m, align 4
  %inc = add nsw i32 %81, 1
  store i32 %inc, i32* %m, align 4
  br label %for.cond.57

for.end:                                          ; preds = %for.cond.57
  br label %for.inc.70

for.inc.70:                                       ; preds = %for.end
  %82 = load i32, i32* %l, align 4
  %inc71 = add nsw i32 %82, 1
  store i32 %inc71, i32* %l, align 4
  br label %for.cond.53

for.end.72:                                       ; preds = %for.cond.53
  %83 = load i32, i32* %curr_mvd, align 4
  %84 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %value1 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %84, i32 0, i32 1
  store i32 %83, i32* %value1, align 4
  %85 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %value2 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %85, i32 0, i32 2
  store i32 0, i32* %value2, align 4
  %86 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %type = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %86, i32 0, i32 0
  store i32 5, i32* %type, align 4
  %87 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %symbol_mode = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %87, i32 0, i32 59
  %88 = load i32, i32* %symbol_mode, align 4
  %cmp73 = icmp eq i32 %88, 0
  br i1 %cmp73, label %if.then.75, label %if.else

if.then.75:                                       ; preds = %for.end.72
  %89 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %mapping = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %89, i32 0, i32 8
  store void (i32, i32, i32*, i32*)* @se_linfo, void (i32, i32, i32*, i32*)** %mapping, align 8
  br label %if.end.78

if.else:                                          ; preds = %for.end.72
  %90 = load i32, i32* %i, align 4
  %91 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %subblock_x = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %91, i32 0, i32 18
  store i32 %90, i32* %subblock_x, align 4
  %92 = load i32, i32* %j, align 4
  %93 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %subblock_y = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %93, i32 0, i32 19
  store i32 %92, i32* %subblock_y, align 4
  %94 = load i32, i32* %k, align 4
  %mul = mul nsw i32 2, %94
  %95 = load i32, i32* %list_idx.addr, align 4
  %add76 = add nsw i32 %mul, %95
  %96 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %value277 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %96, i32 0, i32 2
  store i32 %add76, i32* %value277, align 4
  %97 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %writing = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %97, i32 0, i32 9
  store void (%struct.syntaxelement*, %struct.EncodingEnvironment*)* @writeMVD_CABAC, void (%struct.syntaxelement*, %struct.EncodingEnvironment*)** %writing, align 8
  br label %if.end.78

if.end.78:                                        ; preds = %if.else, %if.then.75
  %98 = load i32*, i32** %partMap, align 8
  %arrayidx79 = getelementptr inbounds i32, i32* %98, i64 5
  %99 = load i32, i32* %arrayidx79, align 4
  %idxprom80 = sext i32 %99 to i64
  %100 = load %struct.Slice*, %struct.Slice** %currSlice, align 8
  %partArr = getelementptr inbounds %struct.Slice, %struct.Slice* %100, i32 0, i32 6
  %101 = load %struct.datapartition*, %struct.datapartition** %partArr, align 8
  %arrayidx81 = getelementptr inbounds %struct.datapartition, %struct.datapartition* %101, i64 %idxprom80
  store %struct.datapartition* %arrayidx81, %struct.datapartition** %dataPart, align 8
  %102 = load %struct.datapartition*, %struct.datapartition** %dataPart, align 8
  %writeSyntaxElement = getelementptr inbounds %struct.datapartition, %struct.datapartition* %102, i32 0, i32 2
  %103 = load i32 (%struct.syntaxelement*, %struct.datapartition*)*, i32 (%struct.syntaxelement*, %struct.datapartition*)** %writeSyntaxElement, align 8
  %104 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %105 = load %struct.datapartition*, %struct.datapartition** %dataPart, align 8
  %call = call i32 %103(%struct.syntaxelement* %104, %struct.datapartition* %105)
  %106 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %len = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %106, i32 0, i32 3
  %107 = load i32, i32* %len, align 4
  %108 = load i32*, i32** %bitCount, align 8
  %arrayidx82 = getelementptr inbounds i32, i32* %108, i64 3
  %109 = load i32, i32* %arrayidx82, align 4
  %add83 = add nsw i32 %109, %107
  store i32 %add83, i32* %arrayidx82, align 4
  %110 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %len84 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %110, i32 0, i32 3
  %111 = load i32, i32* %len84, align 4
  %112 = load i32, i32* %rate, align 4
  %add85 = add nsw i32 %112, %111
  store i32 %add85, i32* %rate, align 4
  %113 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %incdec.ptr = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %113, i32 1
  store %struct.syntaxelement* %incdec.ptr, %struct.syntaxelement** %currSE, align 8
  %114 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %currSEnr86 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %114, i32 0, i32 0
  %115 = load i32, i32* %currSEnr86, align 4
  %inc87 = add nsw i32 %115, 1
  store i32 %inc87, i32* %currSEnr86, align 4
  br label %for.inc.88

for.inc.88:                                       ; preds = %if.end.78
  %116 = load i32, i32* %k, align 4
  %inc89 = add nsw i32 %116, 1
  store i32 %inc89, i32* %k, align 4
  br label %for.cond.25

for.end.90:                                       ; preds = %for.cond.25
  br label %for.inc.91

for.inc.91:                                       ; preds = %for.end.90
  %117 = load i32, i32* %step_h, align 4
  %118 = load i32, i32* %i, align 4
  %add92 = add nsw i32 %118, %117
  store i32 %add92, i32* %i, align 4
  br label %for.cond.22

for.end.93:                                       ; preds = %for.cond.22
  br label %for.inc.94

for.inc.94:                                       ; preds = %for.end.93
  %119 = load i32, i32* %step_v, align 4
  %120 = load i32, i32* %j, align 4
  %add95 = add nsw i32 %120, %119
  store i32 %add95, i32* %j, align 4
  br label %for.cond

for.end.96:                                       ; preds = %for.cond
  %121 = load i32, i32* %rate, align 4
  ret i32 %121
}

declare void @se_linfo(i32, i32, i32*, i32*) #1

declare void @writeMVD_CABAC(%struct.syntaxelement*, %struct.EncodingEnvironment*) #1

; Function Attrs: nounwind uwtable
define i32 @writeMotionInfo2NAL() #0 {
entry:
  %k = alloca i32, align 4
  %j0 = alloca i32, align 4
  %i0 = alloca i32, align 4
  %refframe = alloca i32, align 4
  %currMB = alloca %struct.macroblock*, align 8
  %no_bits = alloca i32, align 4
  %bframe = alloca i32, align 4
  %step_h0 = alloca i32, align 4
  %step_v0 = alloca i32, align 4
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i32 0, i32 3
  %1 = load i32, i32* %current_mb_nr, align 4
  %idxprom = sext i32 %1 to i64
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 51
  %3 = load %struct.macroblock*, %struct.macroblock** %mb_data, align 8
  %arrayidx = getelementptr inbounds %struct.macroblock, %struct.macroblock* %3, i64 %idxprom
  store %struct.macroblock* %arrayidx, %struct.macroblock** %currMB, align 8
  store i32 0, i32* %no_bits, align 4
  %4 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %4, i32 0, i32 6
  %5 = load i32, i32* %type, align 4
  %cmp = icmp eq i32 %5, 1
  %conv = zext i1 %cmp to i32
  store i32 %conv, i32* %bframe, align 4
  %6 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type = getelementptr inbounds %struct.macroblock, %struct.macroblock* %6, i32 0, i32 8
  %7 = load i32, i32* %mb_type, align 4
  %cmp1 = icmp eq i32 %7, 8
  br i1 %cmp1, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  %8 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type3 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %8, i32 0, i32 8
  %9 = load i32, i32* %mb_type3, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 4, %cond.true ], [ %9, %cond.false ]
  %idxprom4 = sext i32 %cond to i64
  %10 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %blc_size = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %10, i32 0, i32 20
  %arrayidx5 = getelementptr inbounds [8 x [2 x i32]], [8 x [2 x i32]]* %blc_size, i32 0, i64 %idxprom4
  %arrayidx6 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx5, i32 0, i64 0
  %11 = load i32, i32* %arrayidx6, align 4
  %shr = ashr i32 %11, 2
  store i32 %shr, i32* %step_h0, align 4
  %12 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type7 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %12, i32 0, i32 8
  %13 = load i32, i32* %mb_type7, align 4
  %cmp8 = icmp eq i32 %13, 8
  br i1 %cmp8, label %cond.true.10, label %cond.false.11

cond.true.10:                                     ; preds = %cond.end
  br label %cond.end.13

cond.false.11:                                    ; preds = %cond.end
  %14 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type12 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %14, i32 0, i32 8
  %15 = load i32, i32* %mb_type12, align 4
  br label %cond.end.13

cond.end.13:                                      ; preds = %cond.false.11, %cond.true.10
  %cond14 = phi i32 [ 4, %cond.true.10 ], [ %15, %cond.false.11 ]
  %idxprom15 = sext i32 %cond14 to i64
  %16 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %blc_size16 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %16, i32 0, i32 20
  %arrayidx17 = getelementptr inbounds [8 x [2 x i32]], [8 x [2 x i32]]* %blc_size16, i32 0, i64 %idxprom15
  %arrayidx18 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx17, i32 0, i64 1
  %17 = load i32, i32* %arrayidx18, align 4
  %shr19 = ashr i32 %17, 2
  store i32 %shr19, i32* %step_v0, align 4
  %18 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type20 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %18, i32 0, i32 8
  %19 = load i32, i32* %mb_type20, align 4
  %cmp21 = icmp ne i32 %19, 9
  br i1 %cmp21, label %land.lhs.true, label %if.end.134

land.lhs.true:                                    ; preds = %cond.end.13
  %20 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type23 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %20, i32 0, i32 8
  %21 = load i32, i32* %mb_type23, align 4
  %cmp24 = icmp ne i32 %21, 10
  br i1 %cmp24, label %land.lhs.true.26, label %if.end.134

land.lhs.true.26:                                 ; preds = %land.lhs.true
  %22 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type27 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %22, i32 0, i32 8
  %23 = load i32, i32* %mb_type27, align 4
  %cmp28 = icmp ne i32 %23, 13
  br i1 %cmp28, label %land.lhs.true.30, label %if.end.134

land.lhs.true.30:                                 ; preds = %land.lhs.true.26
  %24 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type31 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %24, i32 0, i32 8
  %25 = load i32, i32* %mb_type31, align 4
  %cmp32 = icmp ne i32 %25, 0
  br i1 %cmp32, label %if.then, label %if.end.134

if.then:                                          ; preds = %land.lhs.true.30
  %26 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type34 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %26, i32 0, i32 8
  %27 = load i32, i32* %mb_type34, align 4
  %cmp35 = icmp eq i32 %27, 8
  br i1 %cmp35, label %lor.lhs.false, label %if.then.42

lor.lhs.false:                                    ; preds = %if.then
  %28 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %call = call i32 @ZeroRef(%struct.macroblock* %28)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %lor.lhs.false.37, label %if.then.42

lor.lhs.false.37:                                 ; preds = %lor.lhs.false
  %29 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %symbol_mode = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %29, i32 0, i32 59
  %30 = load i32, i32* %symbol_mode, align 4
  %cmp38 = icmp eq i32 %30, 1
  br i1 %cmp38, label %if.then.42, label %lor.lhs.false.40

lor.lhs.false.40:                                 ; preds = %lor.lhs.false.37
  %31 = load i32, i32* %bframe, align 4
  %tobool41 = icmp ne i32 %31, 0
  br i1 %tobool41, label %if.then.42, label %if.end.133

if.then.42:                                       ; preds = %lor.lhs.false.40, %lor.lhs.false.37, %lor.lhs.false, %if.then
  store i32 0, i32* %j0, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc.79, %if.then.42
  %32 = load i32, i32* %j0, align 4
  %cmp43 = icmp slt i32 %32, 4
  br i1 %cmp43, label %for.body, label %for.end.81

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i0, align 4
  br label %for.cond.45

for.cond.45:                                      ; preds = %for.inc, %for.body
  %33 = load i32, i32* %i0, align 4
  %cmp46 = icmp slt i32 %33, 4
  br i1 %cmp46, label %for.body.48, label %for.end

for.body.48:                                      ; preds = %for.cond.45
  %34 = load i32, i32* %j0, align 4
  %35 = load i32, i32* %i0, align 4
  %div = sdiv i32 %35, 2
  %add = add nsw i32 %34, %div
  store i32 %add, i32* %k, align 4
  %36 = load i32, i32* %k, align 4
  %idxprom49 = sext i32 %36 to i64
  %37 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %b8pdir = getelementptr inbounds %struct.macroblock, %struct.macroblock* %37, i32 0, i32 15
  %arrayidx50 = getelementptr inbounds [4 x i32], [4 x i32]* %b8pdir, i32 0, i64 %idxprom49
  %38 = load i32, i32* %arrayidx50, align 4
  %cmp51 = icmp eq i32 %38, 0
  br i1 %cmp51, label %land.lhs.true.59, label %lor.lhs.false.53

lor.lhs.false.53:                                 ; preds = %for.body.48
  %39 = load i32, i32* %k, align 4
  %idxprom54 = sext i32 %39 to i64
  %40 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %b8pdir55 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %40, i32 0, i32 15
  %arrayidx56 = getelementptr inbounds [4 x i32], [4 x i32]* %b8pdir55, i32 0, i64 %idxprom54
  %41 = load i32, i32* %arrayidx56, align 4
  %cmp57 = icmp eq i32 %41, 2
  br i1 %cmp57, label %land.lhs.true.59, label %if.end

land.lhs.true.59:                                 ; preds = %lor.lhs.false.53, %for.body.48
  %42 = load i32, i32* %k, align 4
  %idxprom60 = sext i32 %42 to i64
  %43 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %b8mode = getelementptr inbounds %struct.macroblock, %struct.macroblock* %43, i32 0, i32 14
  %arrayidx61 = getelementptr inbounds [4 x i32], [4 x i32]* %b8mode, i32 0, i64 %idxprom60
  %44 = load i32, i32* %arrayidx61, align 4
  %cmp62 = icmp ne i32 %44, 0
  br i1 %cmp62, label %if.then.64, label %if.end

if.then.64:                                       ; preds = %land.lhs.true.59
  %45 = load i32, i32* %k, align 4
  %idxprom65 = sext i32 %45 to i64
  %46 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %b8mode66 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %46, i32 0, i32 14
  %arrayidx67 = getelementptr inbounds [4 x i32], [4 x i32]* %b8mode66, i32 0, i64 %idxprom65
  %47 = load i32, i32* %arrayidx67, align 4
  %48 = load i32, i32* %i0, align 4
  %49 = load i32, i32* %j0, align 4
  %50 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %block_y = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %50, i32 0, i32 32
  %51 = load i32, i32* %block_y, align 4
  %52 = load i32, i32* %j0, align 4
  %add68 = add nsw i32 %51, %52
  %idxprom69 = sext i32 %add68 to i64
  %53 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %block_x = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %53, i32 0, i32 31
  %54 = load i32, i32* %block_x, align 4
  %55 = load i32, i32* %i0, align 4
  %add70 = add nsw i32 %54, %55
  %idxprom71 = sext i32 %add70 to i64
  %56 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %56, i32 0, i32 32
  %57 = load i16***, i16**** %ref_idx, align 8
  %arrayidx72 = getelementptr inbounds i16**, i16*** %57, i64 0
  %58 = load i16**, i16*** %arrayidx72, align 8
  %arrayidx73 = getelementptr inbounds i16*, i16** %58, i64 %idxprom71
  %59 = load i16*, i16** %arrayidx73, align 8
  %arrayidx74 = getelementptr inbounds i16, i16* %59, i64 %idxprom69
  %60 = load i16, i16* %arrayidx74, align 2
  %conv75 = sext i16 %60 to i32
  %call76 = call i32 @writeReferenceFrame(i32 %47, i32 %48, i32 %49, i32 1, i32 %conv75)
  %61 = load i32, i32* %no_bits, align 4
  %add77 = add nsw i32 %61, %call76
  store i32 %add77, i32* %no_bits, align 4
  br label %if.end

if.end:                                           ; preds = %if.then.64, %land.lhs.true.59, %lor.lhs.false.53
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %62 = load i32, i32* %step_h0, align 4
  %63 = load i32, i32* %i0, align 4
  %add78 = add nsw i32 %63, %62
  store i32 %add78, i32* %i0, align 4
  br label %for.cond.45

for.end:                                          ; preds = %for.cond.45
  br label %for.inc.79

for.inc.79:                                       ; preds = %for.end
  %64 = load i32, i32* %step_v0, align 4
  %65 = load i32, i32* %j0, align 4
  %add80 = add nsw i32 %65, %64
  store i32 %add80, i32* %j0, align 4
  br label %for.cond

for.end.81:                                       ; preds = %for.cond
  store i32 0, i32* %j0, align 4
  br label %for.cond.82

for.cond.82:                                      ; preds = %for.inc.130, %for.end.81
  %66 = load i32, i32* %j0, align 4
  %cmp83 = icmp slt i32 %66, 4
  br i1 %cmp83, label %for.body.85, label %for.end.132

for.body.85:                                      ; preds = %for.cond.82
  store i32 0, i32* %i0, align 4
  br label %for.cond.86

for.cond.86:                                      ; preds = %for.inc.127, %for.body.85
  %67 = load i32, i32* %i0, align 4
  %cmp87 = icmp slt i32 %67, 4
  br i1 %cmp87, label %for.body.89, label %for.end.129

for.body.89:                                      ; preds = %for.cond.86
  %68 = load i32, i32* %j0, align 4
  %69 = load i32, i32* %i0, align 4
  %div90 = sdiv i32 %69, 2
  %add91 = add nsw i32 %68, %div90
  store i32 %add91, i32* %k, align 4
  %70 = load i32, i32* %k, align 4
  %idxprom92 = sext i32 %70 to i64
  %71 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %b8pdir93 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %71, i32 0, i32 15
  %arrayidx94 = getelementptr inbounds [4 x i32], [4 x i32]* %b8pdir93, i32 0, i64 %idxprom92
  %72 = load i32, i32* %arrayidx94, align 4
  %cmp95 = icmp eq i32 %72, 1
  br i1 %cmp95, label %land.lhs.true.103, label %lor.lhs.false.97

lor.lhs.false.97:                                 ; preds = %for.body.89
  %73 = load i32, i32* %k, align 4
  %idxprom98 = sext i32 %73 to i64
  %74 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %b8pdir99 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %74, i32 0, i32 15
  %arrayidx100 = getelementptr inbounds [4 x i32], [4 x i32]* %b8pdir99, i32 0, i64 %idxprom98
  %75 = load i32, i32* %arrayidx100, align 4
  %cmp101 = icmp eq i32 %75, 2
  br i1 %cmp101, label %land.lhs.true.103, label %if.end.126

land.lhs.true.103:                                ; preds = %lor.lhs.false.97, %for.body.89
  %76 = load i32, i32* %k, align 4
  %idxprom104 = sext i32 %76 to i64
  %77 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %b8mode105 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %77, i32 0, i32 14
  %arrayidx106 = getelementptr inbounds [4 x i32], [4 x i32]* %b8mode105, i32 0, i64 %idxprom104
  %78 = load i32, i32* %arrayidx106, align 4
  %cmp107 = icmp ne i32 %78, 0
  br i1 %cmp107, label %if.then.109, label %if.end.126

if.then.109:                                      ; preds = %land.lhs.true.103
  %79 = load i32, i32* %k, align 4
  %idxprom110 = sext i32 %79 to i64
  %80 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %b8mode111 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %80, i32 0, i32 14
  %arrayidx112 = getelementptr inbounds [4 x i32], [4 x i32]* %b8mode111, i32 0, i64 %idxprom110
  %81 = load i32, i32* %arrayidx112, align 4
  %82 = load i32, i32* %i0, align 4
  %83 = load i32, i32* %j0, align 4
  %84 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %block_y113 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %84, i32 0, i32 32
  %85 = load i32, i32* %block_y113, align 4
  %86 = load i32, i32* %j0, align 4
  %add114 = add nsw i32 %85, %86
  %idxprom115 = sext i32 %add114 to i64
  %87 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %block_x116 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %87, i32 0, i32 31
  %88 = load i32, i32* %block_x116, align 4
  %89 = load i32, i32* %i0, align 4
  %add117 = add nsw i32 %88, %89
  %idxprom118 = sext i32 %add117 to i64
  %90 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx119 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %90, i32 0, i32 32
  %91 = load i16***, i16**** %ref_idx119, align 8
  %arrayidx120 = getelementptr inbounds i16**, i16*** %91, i64 1
  %92 = load i16**, i16*** %arrayidx120, align 8
  %arrayidx121 = getelementptr inbounds i16*, i16** %92, i64 %idxprom118
  %93 = load i16*, i16** %arrayidx121, align 8
  %arrayidx122 = getelementptr inbounds i16, i16* %93, i64 %idxprom115
  %94 = load i16, i16* %arrayidx122, align 2
  %conv123 = sext i16 %94 to i32
  %call124 = call i32 @writeReferenceFrame(i32 %81, i32 %82, i32 %83, i32 0, i32 %conv123)
  %95 = load i32, i32* %no_bits, align 4
  %add125 = add nsw i32 %95, %call124
  store i32 %add125, i32* %no_bits, align 4
  br label %if.end.126

if.end.126:                                       ; preds = %if.then.109, %land.lhs.true.103, %lor.lhs.false.97
  br label %for.inc.127

for.inc.127:                                      ; preds = %if.end.126
  %96 = load i32, i32* %step_h0, align 4
  %97 = load i32, i32* %i0, align 4
  %add128 = add nsw i32 %97, %96
  store i32 %add128, i32* %i0, align 4
  br label %for.cond.86

for.end.129:                                      ; preds = %for.cond.86
  br label %for.inc.130

for.inc.130:                                      ; preds = %for.end.129
  %98 = load i32, i32* %step_v0, align 4
  %99 = load i32, i32* %j0, align 4
  %add131 = add nsw i32 %99, %98
  store i32 %add131, i32* %j0, align 4
  br label %for.cond.82

for.end.132:                                      ; preds = %for.cond.82
  br label %if.end.133

if.end.133:                                       ; preds = %for.end.132, %lor.lhs.false.40
  br label %if.end.134

if.end.134:                                       ; preds = %if.end.133, %land.lhs.true.30, %land.lhs.true.26, %land.lhs.true, %cond.end.13
  %100 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type135 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %100, i32 0, i32 8
  %101 = load i32, i32* %mb_type135, align 4
  %cmp136 = icmp ne i32 %101, 9
  br i1 %cmp136, label %land.lhs.true.138, label %if.end.204

land.lhs.true.138:                                ; preds = %if.end.134
  %102 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type139 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %102, i32 0, i32 8
  %103 = load i32, i32* %mb_type139, align 4
  %cmp140 = icmp ne i32 %103, 10
  br i1 %cmp140, label %land.lhs.true.142, label %if.end.204

land.lhs.true.142:                                ; preds = %land.lhs.true.138
  %104 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type143 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %104, i32 0, i32 8
  %105 = load i32, i32* %mb_type143, align 4
  %cmp144 = icmp ne i32 %105, 13
  br i1 %cmp144, label %land.lhs.true.146, label %if.end.204

land.lhs.true.146:                                ; preds = %land.lhs.true.142
  %106 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type147 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %106, i32 0, i32 8
  %107 = load i32, i32* %mb_type147, align 4
  %cmp148 = icmp ne i32 %107, 0
  br i1 %cmp148, label %if.then.150, label %if.end.204

if.then.150:                                      ; preds = %land.lhs.true.146
  store i32 0, i32* %j0, align 4
  br label %for.cond.151

for.cond.151:                                     ; preds = %for.inc.201, %if.then.150
  %108 = load i32, i32* %j0, align 4
  %cmp152 = icmp slt i32 %108, 4
  br i1 %cmp152, label %for.body.154, label %for.end.203

for.body.154:                                     ; preds = %for.cond.151
  store i32 0, i32* %i0, align 4
  br label %for.cond.155

for.cond.155:                                     ; preds = %for.inc.198, %for.body.154
  %109 = load i32, i32* %i0, align 4
  %cmp156 = icmp slt i32 %109, 4
  br i1 %cmp156, label %for.body.158, label %for.end.200

for.body.158:                                     ; preds = %for.cond.155
  %110 = load i32, i32* %j0, align 4
  %111 = load i32, i32* %i0, align 4
  %div159 = sdiv i32 %111, 2
  %add160 = add nsw i32 %110, %div159
  store i32 %add160, i32* %k, align 4
  %112 = load i32, i32* %k, align 4
  %idxprom161 = sext i32 %112 to i64
  %113 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %b8pdir162 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %113, i32 0, i32 15
  %arrayidx163 = getelementptr inbounds [4 x i32], [4 x i32]* %b8pdir162, i32 0, i64 %idxprom161
  %114 = load i32, i32* %arrayidx163, align 4
  %cmp164 = icmp eq i32 %114, 0
  br i1 %cmp164, label %land.lhs.true.172, label %lor.lhs.false.166

lor.lhs.false.166:                                ; preds = %for.body.158
  %115 = load i32, i32* %k, align 4
  %idxprom167 = sext i32 %115 to i64
  %116 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %b8pdir168 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %116, i32 0, i32 15
  %arrayidx169 = getelementptr inbounds [4 x i32], [4 x i32]* %b8pdir168, i32 0, i64 %idxprom167
  %117 = load i32, i32* %arrayidx169, align 4
  %cmp170 = icmp eq i32 %117, 2
  br i1 %cmp170, label %land.lhs.true.172, label %if.end.197

land.lhs.true.172:                                ; preds = %lor.lhs.false.166, %for.body.158
  %118 = load i32, i32* %k, align 4
  %idxprom173 = sext i32 %118 to i64
  %119 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %b8mode174 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %119, i32 0, i32 14
  %arrayidx175 = getelementptr inbounds [4 x i32], [4 x i32]* %b8mode174, i32 0, i64 %idxprom173
  %120 = load i32, i32* %arrayidx175, align 4
  %cmp176 = icmp ne i32 %120, 0
  br i1 %cmp176, label %if.then.178, label %if.end.197

if.then.178:                                      ; preds = %land.lhs.true.172
  %121 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %block_y179 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %121, i32 0, i32 32
  %122 = load i32, i32* %block_y179, align 4
  %123 = load i32, i32* %j0, align 4
  %add180 = add nsw i32 %122, %123
  %idxprom181 = sext i32 %add180 to i64
  %124 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %block_x182 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %124, i32 0, i32 31
  %125 = load i32, i32* %block_x182, align 4
  %126 = load i32, i32* %i0, align 4
  %add183 = add nsw i32 %125, %126
  %idxprom184 = sext i32 %add183 to i64
  %127 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx185 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %127, i32 0, i32 32
  %128 = load i16***, i16**** %ref_idx185, align 8
  %arrayidx186 = getelementptr inbounds i16**, i16*** %128, i64 0
  %129 = load i16**, i16*** %arrayidx186, align 8
  %arrayidx187 = getelementptr inbounds i16*, i16** %129, i64 %idxprom184
  %130 = load i16*, i16** %arrayidx187, align 8
  %arrayidx188 = getelementptr inbounds i16, i16* %130, i64 %idxprom181
  %131 = load i16, i16* %arrayidx188, align 2
  %conv189 = sext i16 %131 to i32
  store i32 %conv189, i32* %refframe, align 4
  %132 = load i32, i32* %i0, align 4
  %133 = load i32, i32* %j0, align 4
  %134 = load i32, i32* %i0, align 4
  %135 = load i32, i32* %step_h0, align 4
  %add190 = add nsw i32 %134, %135
  %136 = load i32, i32* %j0, align 4
  %137 = load i32, i32* %step_v0, align 4
  %add191 = add nsw i32 %136, %137
  %138 = load i32, i32* %refframe, align 4
  %139 = load i32, i32* %k, align 4
  %idxprom192 = sext i32 %139 to i64
  %140 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %b8mode193 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %140, i32 0, i32 14
  %arrayidx194 = getelementptr inbounds [4 x i32], [4 x i32]* %b8mode193, i32 0, i64 %idxprom192
  %141 = load i32, i32* %arrayidx194, align 4
  %call195 = call i32 @writeMotionVector8x8(i32 %132, i32 %133, i32 %add190, i32 %add191, i32 %138, i32 0, i32 %141)
  %142 = load i32, i32* %no_bits, align 4
  %add196 = add nsw i32 %142, %call195
  store i32 %add196, i32* %no_bits, align 4
  br label %if.end.197

if.end.197:                                       ; preds = %if.then.178, %land.lhs.true.172, %lor.lhs.false.166
  br label %for.inc.198

for.inc.198:                                      ; preds = %if.end.197
  %143 = load i32, i32* %step_h0, align 4
  %144 = load i32, i32* %i0, align 4
  %add199 = add nsw i32 %144, %143
  store i32 %add199, i32* %i0, align 4
  br label %for.cond.155

for.end.200:                                      ; preds = %for.cond.155
  br label %for.inc.201

for.inc.201:                                      ; preds = %for.end.200
  %145 = load i32, i32* %step_v0, align 4
  %146 = load i32, i32* %j0, align 4
  %add202 = add nsw i32 %146, %145
  store i32 %add202, i32* %j0, align 4
  br label %for.cond.151

for.end.203:                                      ; preds = %for.cond.151
  br label %if.end.204

if.end.204:                                       ; preds = %for.end.203, %land.lhs.true.146, %land.lhs.true.142, %land.lhs.true.138, %if.end.134
  %147 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type205 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %147, i32 0, i32 8
  %148 = load i32, i32* %mb_type205, align 4
  %cmp206 = icmp ne i32 %148, 9
  br i1 %cmp206, label %land.lhs.true.208, label %if.end.276

land.lhs.true.208:                                ; preds = %if.end.204
  %149 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type209 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %149, i32 0, i32 8
  %150 = load i32, i32* %mb_type209, align 4
  %cmp210 = icmp ne i32 %150, 10
  br i1 %cmp210, label %land.lhs.true.212, label %if.end.276

land.lhs.true.212:                                ; preds = %land.lhs.true.208
  %151 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type213 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %151, i32 0, i32 8
  %152 = load i32, i32* %mb_type213, align 4
  %cmp214 = icmp ne i32 %152, 13
  br i1 %cmp214, label %land.lhs.true.216, label %if.end.276

land.lhs.true.216:                                ; preds = %land.lhs.true.212
  %153 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type217 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %153, i32 0, i32 8
  %154 = load i32, i32* %mb_type217, align 4
  %cmp218 = icmp ne i32 %154, 0
  br i1 %cmp218, label %land.lhs.true.220, label %if.end.276

land.lhs.true.220:                                ; preds = %land.lhs.true.216
  %155 = load i32, i32* %bframe, align 4
  %tobool221 = icmp ne i32 %155, 0
  br i1 %tobool221, label %if.then.222, label %if.end.276

if.then.222:                                      ; preds = %land.lhs.true.220
  store i32 0, i32* %j0, align 4
  br label %for.cond.223

for.cond.223:                                     ; preds = %for.inc.273, %if.then.222
  %156 = load i32, i32* %j0, align 4
  %cmp224 = icmp slt i32 %156, 4
  br i1 %cmp224, label %for.body.226, label %for.end.275

for.body.226:                                     ; preds = %for.cond.223
  store i32 0, i32* %i0, align 4
  br label %for.cond.227

for.cond.227:                                     ; preds = %for.inc.270, %for.body.226
  %157 = load i32, i32* %i0, align 4
  %cmp228 = icmp slt i32 %157, 4
  br i1 %cmp228, label %for.body.230, label %for.end.272

for.body.230:                                     ; preds = %for.cond.227
  %158 = load i32, i32* %j0, align 4
  %159 = load i32, i32* %i0, align 4
  %div231 = sdiv i32 %159, 2
  %add232 = add nsw i32 %158, %div231
  store i32 %add232, i32* %k, align 4
  %160 = load i32, i32* %k, align 4
  %idxprom233 = sext i32 %160 to i64
  %161 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %b8pdir234 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %161, i32 0, i32 15
  %arrayidx235 = getelementptr inbounds [4 x i32], [4 x i32]* %b8pdir234, i32 0, i64 %idxprom233
  %162 = load i32, i32* %arrayidx235, align 4
  %cmp236 = icmp eq i32 %162, 1
  br i1 %cmp236, label %land.lhs.true.244, label %lor.lhs.false.238

lor.lhs.false.238:                                ; preds = %for.body.230
  %163 = load i32, i32* %k, align 4
  %idxprom239 = sext i32 %163 to i64
  %164 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %b8pdir240 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %164, i32 0, i32 15
  %arrayidx241 = getelementptr inbounds [4 x i32], [4 x i32]* %b8pdir240, i32 0, i64 %idxprom239
  %165 = load i32, i32* %arrayidx241, align 4
  %cmp242 = icmp eq i32 %165, 2
  br i1 %cmp242, label %land.lhs.true.244, label %if.end.269

land.lhs.true.244:                                ; preds = %lor.lhs.false.238, %for.body.230
  %166 = load i32, i32* %k, align 4
  %idxprom245 = sext i32 %166 to i64
  %167 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %b8mode246 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %167, i32 0, i32 14
  %arrayidx247 = getelementptr inbounds [4 x i32], [4 x i32]* %b8mode246, i32 0, i64 %idxprom245
  %168 = load i32, i32* %arrayidx247, align 4
  %cmp248 = icmp ne i32 %168, 0
  br i1 %cmp248, label %if.then.250, label %if.end.269

if.then.250:                                      ; preds = %land.lhs.true.244
  %169 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %block_y251 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %169, i32 0, i32 32
  %170 = load i32, i32* %block_y251, align 4
  %171 = load i32, i32* %j0, align 4
  %add252 = add nsw i32 %170, %171
  %idxprom253 = sext i32 %add252 to i64
  %172 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %block_x254 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %172, i32 0, i32 31
  %173 = load i32, i32* %block_x254, align 4
  %174 = load i32, i32* %i0, align 4
  %add255 = add nsw i32 %173, %174
  %idxprom256 = sext i32 %add255 to i64
  %175 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx257 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %175, i32 0, i32 32
  %176 = load i16***, i16**** %ref_idx257, align 8
  %arrayidx258 = getelementptr inbounds i16**, i16*** %176, i64 1
  %177 = load i16**, i16*** %arrayidx258, align 8
  %arrayidx259 = getelementptr inbounds i16*, i16** %177, i64 %idxprom256
  %178 = load i16*, i16** %arrayidx259, align 8
  %arrayidx260 = getelementptr inbounds i16, i16* %178, i64 %idxprom253
  %179 = load i16, i16* %arrayidx260, align 2
  %conv261 = sext i16 %179 to i32
  store i32 %conv261, i32* %refframe, align 4
  %180 = load i32, i32* %i0, align 4
  %181 = load i32, i32* %j0, align 4
  %182 = load i32, i32* %i0, align 4
  %183 = load i32, i32* %step_h0, align 4
  %add262 = add nsw i32 %182, %183
  %184 = load i32, i32* %j0, align 4
  %185 = load i32, i32* %step_v0, align 4
  %add263 = add nsw i32 %184, %185
  %186 = load i32, i32* %refframe, align 4
  %187 = load i32, i32* %k, align 4
  %idxprom264 = sext i32 %187 to i64
  %188 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %b8mode265 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %188, i32 0, i32 14
  %arrayidx266 = getelementptr inbounds [4 x i32], [4 x i32]* %b8mode265, i32 0, i64 %idxprom264
  %189 = load i32, i32* %arrayidx266, align 4
  %call267 = call i32 @writeMotionVector8x8(i32 %180, i32 %181, i32 %add262, i32 %add263, i32 %186, i32 1, i32 %189)
  %190 = load i32, i32* %no_bits, align 4
  %add268 = add nsw i32 %190, %call267
  store i32 %add268, i32* %no_bits, align 4
  br label %if.end.269

if.end.269:                                       ; preds = %if.then.250, %land.lhs.true.244, %lor.lhs.false.238
  br label %for.inc.270

for.inc.270:                                      ; preds = %if.end.269
  %191 = load i32, i32* %step_h0, align 4
  %192 = load i32, i32* %i0, align 4
  %add271 = add nsw i32 %192, %191
  store i32 %add271, i32* %i0, align 4
  br label %for.cond.227

for.end.272:                                      ; preds = %for.cond.227
  br label %for.inc.273

for.inc.273:                                      ; preds = %for.end.272
  %193 = load i32, i32* %step_v0, align 4
  %194 = load i32, i32* %j0, align 4
  %add274 = add nsw i32 %194, %193
  store i32 %add274, i32* %j0, align 4
  br label %for.cond.223

for.end.275:                                      ; preds = %for.cond.223
  br label %if.end.276

if.end.276:                                       ; preds = %for.end.275, %land.lhs.true.220, %land.lhs.true.216, %land.lhs.true.212, %land.lhs.true.208, %if.end.204
  %195 = load i32, i32* %no_bits, align 4
  ret i32 %195
}

; Function Attrs: nounwind uwtable
define i32 @writeChromaCoeff() #0 {
entry:
  %rate = alloca i32, align 4
  %currMB = alloca %struct.macroblock*, align 8
  %currSE = alloca %struct.syntaxelement*, align 8
  %bitCount = alloca i32*, align 8
  %currSlice = alloca %struct.Slice*, align 8
  %partMap = alloca i32*, align 8
  %cbp = alloca i32, align 4
  %dataPart = alloca %struct.datapartition*, align 8
  %level = alloca i32, align 4
  %run = alloca i32, align 4
  %k = alloca i32, align 4
  %uv = alloca i32, align 4
  %b8 = alloca i32, align 4
  %b4 = alloca i32, align 4
  %param = alloca i32, align 4
  %ACLevel = alloca i32*, align 8
  %ACRun = alloca i32*, align 8
  %DCLevel = alloca i32*, align 8
  %DCRun = alloca i32*, align 8
  %chroma_dc_context = alloca [3 x i32], align 4
  %yuv = alloca i32, align 4
  store i32 0, i32* %rate, align 4
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i32 0, i32 3
  %1 = load i32, i32* %current_mb_nr, align 4
  %idxprom = sext i32 %1 to i64
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 51
  %3 = load %struct.macroblock*, %struct.macroblock** %mb_data, align 8
  %arrayidx = getelementptr inbounds %struct.macroblock, %struct.macroblock* %3, i64 %idxprom
  store %struct.macroblock* %arrayidx, %struct.macroblock** %currMB, align 8
  %4 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %currSEnr = getelementptr inbounds %struct.macroblock, %struct.macroblock* %4, i32 0, i32 0
  %5 = load i32, i32* %currSEnr, align 4
  %idxprom1 = sext i32 %5 to i64
  %6 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %MB_SyntaxElements = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %6, i32 0, i32 52
  %arrayidx2 = getelementptr inbounds [1200 x %struct.syntaxelement], [1200 x %struct.syntaxelement]* %MB_SyntaxElements, i32 0, i64 %idxprom1
  store %struct.syntaxelement* %arrayidx2, %struct.syntaxelement** %currSE, align 8
  %7 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %bitcounter = getelementptr inbounds %struct.macroblock, %struct.macroblock* %7, i32 0, i32 5
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %bitcounter, i32 0, i32 0
  store i32* %arraydecay, i32** %bitCount, align 8
  %8 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %currentSlice = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %8, i32 0, i32 50
  %9 = load %struct.Slice*, %struct.Slice** %currentSlice, align 8
  store %struct.Slice* %9, %struct.Slice** %currSlice, align 8
  %10 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %partition_mode = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %10, i32 0, i32 61
  %11 = load i32, i32* %partition_mode, align 4
  %idxprom3 = sext i32 %11 to i64
  %arrayidx4 = getelementptr inbounds [2 x i32*], [2 x i32*]* @assignSE2partition, i32 0, i64 %idxprom3
  %12 = load i32*, i32** %arrayidx4, align 8
  store i32* %12, i32** %partMap, align 8
  %13 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %cbp5 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %13, i32 0, i32 12
  %14 = load i32, i32* %cbp5, align 4
  store i32 %14, i32* %cbp, align 4
  %15 = bitcast [3 x i32]* %chroma_dc_context to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* bitcast ([3 x i32]* @writeChromaCoeff.chroma_dc_context to i8*), i64 12, i32 4, i1 false)
  %16 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %yuv_format = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %16, i32 0, i32 159
  %17 = load i32, i32* %yuv_format, align 4
  %sub = sub nsw i32 %17, 1
  store i32 %sub, i32* %yuv, align 4
  %18 = load i32, i32* %cbp, align 4
  %cmp = icmp sgt i32 %18, 15
  br i1 %cmp, label %if.then, label %if.end.62

if.then:                                          ; preds = %entry
  store i32 0, i32* %uv, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc.59, %if.then
  %19 = load i32, i32* %uv, align 4
  %cmp6 = icmp slt i32 %19, 2
  br i1 %cmp6, label %for.body, label %for.end.61

for.body:                                         ; preds = %for.cond
  %20 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %symbol_mode = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %20, i32 0, i32 59
  %21 = load i32, i32* %symbol_mode, align 4
  %cmp7 = icmp eq i32 %21, 0
  br i1 %cmp7, label %if.then.8, label %if.else

if.then.8:                                        ; preds = %for.body
  %22 = load i32, i32* %uv, align 4
  store i32 %22, i32* %param, align 4
  %23 = load i32, i32* %param, align 4
  %call = call i32 @writeCoeff4x4_CAVLC(i32 6, i32 0, i32 0, i32 %23)
  %24 = load i32, i32* %rate, align 4
  %add = add nsw i32 %24, %call
  store i32 %add, i32* %rate, align 4
  br label %if.end.58

if.else:                                          ; preds = %for.body
  %25 = load i32, i32* %uv, align 4
  %add9 = add nsw i32 %25, 1
  %idxprom10 = sext i32 %add9 to i64
  %26 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %cofDC = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %26, i32 0, i32 48
  %27 = load i32***, i32**** %cofDC, align 8
  %arrayidx11 = getelementptr inbounds i32**, i32*** %27, i64 %idxprom10
  %28 = load i32**, i32*** %arrayidx11, align 8
  %arrayidx12 = getelementptr inbounds i32*, i32** %28, i64 0
  %29 = load i32*, i32** %arrayidx12, align 8
  store i32* %29, i32** %DCLevel, align 8
  %30 = load i32, i32* %uv, align 4
  %add13 = add nsw i32 %30, 1
  %idxprom14 = sext i32 %add13 to i64
  %31 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %cofDC15 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %31, i32 0, i32 48
  %32 = load i32***, i32**** %cofDC15, align 8
  %arrayidx16 = getelementptr inbounds i32**, i32*** %32, i64 %idxprom14
  %33 = load i32**, i32*** %arrayidx16, align 8
  %arrayidx17 = getelementptr inbounds i32*, i32** %33, i64 1
  %34 = load i32*, i32** %arrayidx17, align 8
  store i32* %34, i32** %DCRun, align 8
  store i32 1, i32* %level, align 4
  store i32 0, i32* %k, align 4
  br label %for.cond.18

for.cond.18:                                      ; preds = %for.inc, %if.else
  %35 = load i32, i32* %k, align 4
  %36 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %num_cdc_coeff = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %36, i32 0, i32 158
  %37 = load i32, i32* %num_cdc_coeff, align 4
  %cmp19 = icmp sle i32 %35, %37
  br i1 %cmp19, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %for.cond.18
  %38 = load i32, i32* %level, align 4
  %cmp20 = icmp ne i32 %38, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond.18
  %39 = phi i1 [ false, %for.cond.18 ], [ %cmp20, %land.rhs ]
  br i1 %39, label %for.body.21, label %for.end

for.body.21:                                      ; preds = %land.end
  %40 = load i32, i32* %k, align 4
  %idxprom22 = sext i32 %40 to i64
  %41 = load i32*, i32** %DCLevel, align 8
  %arrayidx23 = getelementptr inbounds i32, i32* %41, i64 %idxprom22
  %42 = load i32, i32* %arrayidx23, align 4
  %43 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %value1 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %43, i32 0, i32 1
  store i32 %42, i32* %value1, align 4
  store i32 %42, i32* %level, align 4
  %44 = load i32, i32* %k, align 4
  %idxprom24 = sext i32 %44 to i64
  %45 = load i32*, i32** %DCRun, align 8
  %arrayidx25 = getelementptr inbounds i32, i32* %45, i64 %idxprom24
  %46 = load i32, i32* %arrayidx25, align 4
  %47 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %value2 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %47, i32 0, i32 2
  store i32 %46, i32* %value2, align 4
  store i32 %46, i32* %run, align 4
  %48 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %symbol_mode26 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %48, i32 0, i32 59
  %49 = load i32, i32* %symbol_mode26, align 4
  %cmp27 = icmp eq i32 %49, 0
  br i1 %cmp27, label %if.then.28, label %if.else.29

if.then.28:                                       ; preds = %for.body.21
  %50 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %mapping = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %50, i32 0, i32 8
  store void (i32, i32, i32*, i32*)* @levrun_linfo_c2x2, void (i32, i32, i32*, i32*)** %mapping, align 8
  br label %if.end

if.else.29:                                       ; preds = %for.body.21
  %51 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %writing = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %51, i32 0, i32 9
  store void (%struct.syntaxelement*, %struct.EncodingEnvironment*)* @writeRunLevel_CABAC, void (%struct.syntaxelement*, %struct.EncodingEnvironment*)** %writing, align 8
  br label %if.end

if.end:                                           ; preds = %if.else.29, %if.then.28
  %52 = load i32, i32* %yuv, align 4
  %idxprom30 = sext i32 %52 to i64
  %arrayidx31 = getelementptr inbounds [3 x i32], [3 x i32]* %chroma_dc_context, i32 0, i64 %idxprom30
  %53 = load i32, i32* %arrayidx31, align 4
  %54 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %context = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %54, i32 0, i32 6
  store i32 %53, i32* %context, align 4
  %55 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type = getelementptr inbounds %struct.macroblock, %struct.macroblock* %55, i32 0, i32 8
  %56 = load i32, i32* %mb_type, align 4
  %cmp32 = icmp eq i32 %56, 9
  br i1 %cmp32, label %lor.end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %57 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type33 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %57, i32 0, i32 8
  %58 = load i32, i32* %mb_type33, align 4
  %cmp34 = icmp eq i32 %58, 10
  br i1 %cmp34, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %lor.lhs.false
  %59 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type35 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %59, i32 0, i32 8
  %60 = load i32, i32* %mb_type35, align 4
  %cmp36 = icmp eq i32 %60, 13
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %if.end
  %61 = phi i1 [ true, %lor.lhs.false ], [ true, %if.end ], [ %cmp36, %lor.rhs ]
  %cond = select i1 %61, i32 8, i32 13
  %62 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %type = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %62, i32 0, i32 0
  store i32 %cond, i32* %type, align 4
  %63 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type37 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %63, i32 0, i32 8
  %64 = load i32, i32* %mb_type37, align 4
  %cmp38 = icmp eq i32 %64, 9
  br i1 %cmp38, label %lor.end.45, label %lor.lhs.false.39

lor.lhs.false.39:                                 ; preds = %lor.end
  %65 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type40 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %65, i32 0, i32 8
  %66 = load i32, i32* %mb_type40, align 4
  %cmp41 = icmp eq i32 %66, 10
  br i1 %cmp41, label %lor.end.45, label %lor.rhs.42

lor.rhs.42:                                       ; preds = %lor.lhs.false.39
  %67 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type43 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %67, i32 0, i32 8
  %68 = load i32, i32* %mb_type43, align 4
  %cmp44 = icmp eq i32 %68, 13
  br label %lor.end.45

lor.end.45:                                       ; preds = %lor.rhs.42, %lor.lhs.false.39, %lor.end
  %69 = phi i1 [ true, %lor.lhs.false.39 ], [ true, %lor.end ], [ %cmp44, %lor.rhs.42 ]
  %lor.ext = zext i1 %69 to i32
  %70 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %is_intra_block = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %70, i32 0, i32 20
  store i32 %lor.ext, i32* %is_intra_block, align 4
  %71 = load i32, i32* %uv, align 4
  %72 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %is_v_block = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %72, i32 0, i32 21
  store i32 %71, i32* %is_v_block, align 4
  %73 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %type46 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %73, i32 0, i32 0
  %74 = load i32, i32* %type46, align 4
  %idxprom47 = sext i32 %74 to i64
  %75 = load i32*, i32** %partMap, align 8
  %arrayidx48 = getelementptr inbounds i32, i32* %75, i64 %idxprom47
  %76 = load i32, i32* %arrayidx48, align 4
  %idxprom49 = sext i32 %76 to i64
  %77 = load %struct.Slice*, %struct.Slice** %currSlice, align 8
  %partArr = getelementptr inbounds %struct.Slice, %struct.Slice* %77, i32 0, i32 6
  %78 = load %struct.datapartition*, %struct.datapartition** %partArr, align 8
  %arrayidx50 = getelementptr inbounds %struct.datapartition, %struct.datapartition* %78, i64 %idxprom49
  store %struct.datapartition* %arrayidx50, %struct.datapartition** %dataPart, align 8
  %79 = load %struct.datapartition*, %struct.datapartition** %dataPart, align 8
  %writeSyntaxElement = getelementptr inbounds %struct.datapartition, %struct.datapartition* %79, i32 0, i32 2
  %80 = load i32 (%struct.syntaxelement*, %struct.datapartition*)*, i32 (%struct.syntaxelement*, %struct.datapartition*)** %writeSyntaxElement, align 8
  %81 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %82 = load %struct.datapartition*, %struct.datapartition** %dataPart, align 8
  %call51 = call i32 %80(%struct.syntaxelement* %81, %struct.datapartition* %82)
  %83 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %len = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %83, i32 0, i32 3
  %84 = load i32, i32* %len, align 4
  %85 = load i32*, i32** %bitCount, align 8
  %arrayidx52 = getelementptr inbounds i32, i32* %85, i64 6
  %86 = load i32, i32* %arrayidx52, align 4
  %add53 = add nsw i32 %86, %84
  store i32 %add53, i32* %arrayidx52, align 4
  %87 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %len54 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %87, i32 0, i32 3
  %88 = load i32, i32* %len54, align 4
  %89 = load i32, i32* %rate, align 4
  %add55 = add nsw i32 %89, %88
  store i32 %add55, i32* %rate, align 4
  %90 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %incdec.ptr = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %90, i32 1
  store %struct.syntaxelement* %incdec.ptr, %struct.syntaxelement** %currSE, align 8
  %91 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %currSEnr56 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %91, i32 0, i32 0
  %92 = load i32, i32* %currSEnr56, align 4
  %inc = add nsw i32 %92, 1
  store i32 %inc, i32* %currSEnr56, align 4
  br label %for.inc

for.inc:                                          ; preds = %lor.end.45
  %93 = load i32, i32* %k, align 4
  %inc57 = add nsw i32 %93, 1
  store i32 %inc57, i32* %k, align 4
  br label %for.cond.18

for.end:                                          ; preds = %land.end
  br label %if.end.58

if.end.58:                                        ; preds = %for.end, %if.then.8
  br label %for.inc.59

for.inc.59:                                       ; preds = %if.end.58
  %94 = load i32, i32* %uv, align 4
  %inc60 = add nsw i32 %94, 1
  store i32 %inc60, i32* %uv, align 4
  br label %for.cond

for.end.61:                                       ; preds = %for.cond
  br label %if.end.62

if.end.62:                                        ; preds = %for.end.61, %entry
  store i32 -1, i32* %uv, align 4
  %95 = load i32, i32* %cbp, align 4
  %shr = ashr i32 %95, 4
  %cmp63 = icmp eq i32 %shr, 2
  br i1 %cmp63, label %if.then.64, label %if.end.197

if.then.64:                                       ; preds = %if.end.62
  store i32 4, i32* %b8, align 4
  br label %for.cond.65

for.cond.65:                                      ; preds = %for.inc.194, %if.then.64
  %96 = load i32, i32* %b8, align 4
  %97 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %num_blk8x8_uv = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %97, i32 0, i32 157
  %98 = load i32, i32* %num_blk8x8_uv, align 4
  %add66 = add nsw i32 4, %98
  %cmp67 = icmp slt i32 %96, %add66
  br i1 %cmp67, label %for.body.68, label %for.end.196

for.body.68:                                      ; preds = %for.cond.65
  store i32 0, i32* %b4, align 4
  br label %for.cond.69

for.cond.69:                                      ; preds = %for.inc.191, %for.body.68
  %99 = load i32, i32* %b4, align 4
  %cmp70 = icmp slt i32 %99, 4
  br i1 %cmp70, label %for.body.71, label %for.end.193

for.body.71:                                      ; preds = %for.cond.69
  %100 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %symbol_mode72 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %100, i32 0, i32 59
  %101 = load i32, i32* %symbol_mode72, align 4
  %cmp73 = icmp eq i32 %101, 0
  br i1 %cmp73, label %if.then.74, label %if.else.84

if.then.74:                                       ; preds = %for.body.71
  %102 = load i32, i32* %b4, align 4
  %idxprom75 = sext i32 %102 to i64
  %103 = load i32, i32* %b8, align 4
  %sub76 = sub nsw i32 %103, 4
  %idxprom77 = sext i32 %sub76 to i64
  %104 = load i32, i32* %yuv, align 4
  %idxprom78 = sext i32 %104 to i64
  %arrayidx79 = getelementptr inbounds [3 x [8 x [4 x i8]]], [3 x [8 x [4 x i8]]]* @writeChromaCoeff.chroma_ac_param, i32 0, i64 %idxprom78
  %arrayidx80 = getelementptr inbounds [8 x [4 x i8]], [8 x [4 x i8]]* %arrayidx79, i32 0, i64 %idxprom77
  %arrayidx81 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx80, i32 0, i64 %idxprom75
  %105 = load i8, i8* %arrayidx81, align 1
  %conv = zext i8 %105 to i32
  store i32 %conv, i32* %param, align 4
  %106 = load i32, i32* %b8, align 4
  %107 = load i32, i32* %b4, align 4
  %108 = load i32, i32* %param, align 4
  %call82 = call i32 @writeCoeff4x4_CAVLC(i32 7, i32 %106, i32 %107, i32 %108)
  %109 = load i32, i32* %rate, align 4
  %add83 = add nsw i32 %109, %call82
  store i32 %add83, i32* %rate, align 4
  br label %if.end.190

if.else.84:                                       ; preds = %for.body.71
  %110 = load i32, i32* %b4, align 4
  %idxprom85 = sext i32 %110 to i64
  %111 = load i32, i32* %b8, align 4
  %idxprom86 = sext i32 %111 to i64
  %112 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %cofAC = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %112, i32 0, i32 47
  %113 = load i32****, i32***** %cofAC, align 8
  %arrayidx87 = getelementptr inbounds i32***, i32**** %113, i64 %idxprom86
  %114 = load i32***, i32**** %arrayidx87, align 8
  %arrayidx88 = getelementptr inbounds i32**, i32*** %114, i64 %idxprom85
  %115 = load i32**, i32*** %arrayidx88, align 8
  %arrayidx89 = getelementptr inbounds i32*, i32** %115, i64 0
  %116 = load i32*, i32** %arrayidx89, align 8
  store i32* %116, i32** %ACLevel, align 8
  %117 = load i32, i32* %b4, align 4
  %idxprom90 = sext i32 %117 to i64
  %118 = load i32, i32* %b8, align 4
  %idxprom91 = sext i32 %118 to i64
  %119 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %cofAC92 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %119, i32 0, i32 47
  %120 = load i32****, i32***** %cofAC92, align 8
  %arrayidx93 = getelementptr inbounds i32***, i32**** %120, i64 %idxprom91
  %121 = load i32***, i32**** %arrayidx93, align 8
  %arrayidx94 = getelementptr inbounds i32**, i32*** %121, i64 %idxprom90
  %122 = load i32**, i32*** %arrayidx94, align 8
  %arrayidx95 = getelementptr inbounds i32*, i32** %122, i64 1
  %123 = load i32*, i32** %arrayidx95, align 8
  store i32* %123, i32** %ACRun, align 8
  store i32 1, i32* %level, align 4
  %124 = load i32, i32* %uv, align 4
  %inc96 = add nsw i32 %124, 1
  store i32 %inc96, i32* %uv, align 4
  %125 = load i32, i32* %b4, align 4
  %idxprom97 = sext i32 %125 to i64
  %126 = load i32, i32* %b8, align 4
  %sub98 = sub nsw i32 %126, 4
  %idxprom99 = sext i32 %sub98 to i64
  %127 = load i32, i32* %yuv, align 4
  %idxprom100 = sext i32 %127 to i64
  %arrayidx101 = getelementptr inbounds [3 x [8 x [4 x i8]]], [3 x [8 x [4 x i8]]]* @subblk_offset_y, i32 0, i64 %idxprom100
  %arrayidx102 = getelementptr inbounds [8 x [4 x i8]], [8 x [4 x i8]]* %arrayidx101, i32 0, i64 %idxprom99
  %arrayidx103 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx102, i32 0, i64 %idxprom97
  %128 = load i8, i8* %arrayidx103, align 1
  %conv104 = zext i8 %128 to i32
  %shr105 = ashr i32 %conv104, 2
  %129 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %subblock_y = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %129, i32 0, i32 19
  store i32 %shr105, i32* %subblock_y, align 4
  %130 = load i32, i32* %b4, align 4
  %idxprom106 = sext i32 %130 to i64
  %131 = load i32, i32* %b8, align 4
  %sub107 = sub nsw i32 %131, 4
  %idxprom108 = sext i32 %sub107 to i64
  %132 = load i32, i32* %yuv, align 4
  %idxprom109 = sext i32 %132 to i64
  %arrayidx110 = getelementptr inbounds [3 x [8 x [4 x i8]]], [3 x [8 x [4 x i8]]]* @subblk_offset_x, i32 0, i64 %idxprom109
  %arrayidx111 = getelementptr inbounds [8 x [4 x i8]], [8 x [4 x i8]]* %arrayidx110, i32 0, i64 %idxprom108
  %arrayidx112 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx111, i32 0, i64 %idxprom106
  %133 = load i8, i8* %arrayidx112, align 1
  %conv113 = zext i8 %133 to i32
  %shr114 = ashr i32 %conv113, 2
  %134 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %subblock_x = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %134, i32 0, i32 18
  store i32 %shr114, i32* %subblock_x, align 4
  store i32 0, i32* %k, align 4
  br label %for.cond.115

for.cond.115:                                     ; preds = %for.inc.187, %if.else.84
  %135 = load i32, i32* %k, align 4
  %cmp116 = icmp slt i32 %135, 16
  br i1 %cmp116, label %land.rhs.118, label %land.end.121

land.rhs.118:                                     ; preds = %for.cond.115
  %136 = load i32, i32* %level, align 4
  %cmp119 = icmp ne i32 %136, 0
  br label %land.end.121

land.end.121:                                     ; preds = %land.rhs.118, %for.cond.115
  %137 = phi i1 [ false, %for.cond.115 ], [ %cmp119, %land.rhs.118 ]
  br i1 %137, label %for.body.122, label %for.end.189

for.body.122:                                     ; preds = %land.end.121
  %138 = load i32, i32* %k, align 4
  %idxprom123 = sext i32 %138 to i64
  %139 = load i32*, i32** %ACLevel, align 8
  %arrayidx124 = getelementptr inbounds i32, i32* %139, i64 %idxprom123
  %140 = load i32, i32* %arrayidx124, align 4
  %141 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %value1125 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %141, i32 0, i32 1
  store i32 %140, i32* %value1125, align 4
  store i32 %140, i32* %level, align 4
  %142 = load i32, i32* %k, align 4
  %idxprom126 = sext i32 %142 to i64
  %143 = load i32*, i32** %ACRun, align 8
  %arrayidx127 = getelementptr inbounds i32, i32* %143, i64 %idxprom126
  %144 = load i32, i32* %arrayidx127, align 4
  %145 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %value2128 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %145, i32 0, i32 2
  store i32 %144, i32* %value2128, align 4
  store i32 %144, i32* %run, align 4
  %146 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %symbol_mode129 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %146, i32 0, i32 59
  %147 = load i32, i32* %symbol_mode129, align 4
  %cmp130 = icmp eq i32 %147, 0
  br i1 %cmp130, label %if.then.132, label %if.else.134

if.then.132:                                      ; preds = %for.body.122
  %148 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %mapping133 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %148, i32 0, i32 8
  store void (i32, i32, i32*, i32*)* @levrun_linfo_inter, void (i32, i32, i32*, i32*)** %mapping133, align 8
  br label %if.end.136

if.else.134:                                      ; preds = %for.body.122
  %149 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %writing135 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %149, i32 0, i32 9
  store void (%struct.syntaxelement*, %struct.EncodingEnvironment*)* @writeRunLevel_CABAC, void (%struct.syntaxelement*, %struct.EncodingEnvironment*)** %writing135, align 8
  br label %if.end.136

if.end.136:                                       ; preds = %if.else.134, %if.then.132
  %150 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %context137 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %150, i32 0, i32 6
  store i32 7, i32* %context137, align 4
  %151 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type138 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %151, i32 0, i32 8
  %152 = load i32, i32* %mb_type138, align 4
  %cmp139 = icmp eq i32 %152, 9
  br i1 %cmp139, label %lor.end.149, label %lor.lhs.false.141

lor.lhs.false.141:                                ; preds = %if.end.136
  %153 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type142 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %153, i32 0, i32 8
  %154 = load i32, i32* %mb_type142, align 4
  %cmp143 = icmp eq i32 %154, 10
  br i1 %cmp143, label %lor.end.149, label %lor.rhs.145

lor.rhs.145:                                      ; preds = %lor.lhs.false.141
  %155 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type146 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %155, i32 0, i32 8
  %156 = load i32, i32* %mb_type146, align 4
  %cmp147 = icmp eq i32 %156, 13
  br label %lor.end.149

lor.end.149:                                      ; preds = %lor.rhs.145, %lor.lhs.false.141, %if.end.136
  %157 = phi i1 [ true, %lor.lhs.false.141 ], [ true, %if.end.136 ], [ %cmp147, %lor.rhs.145 ]
  %cond151 = select i1 %157, i32 10, i32 15
  %158 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %type152 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %158, i32 0, i32 0
  store i32 %cond151, i32* %type152, align 4
  %159 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type153 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %159, i32 0, i32 8
  %160 = load i32, i32* %mb_type153, align 4
  %cmp154 = icmp eq i32 %160, 9
  br i1 %cmp154, label %lor.end.164, label %lor.lhs.false.156

lor.lhs.false.156:                                ; preds = %lor.end.149
  %161 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type157 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %161, i32 0, i32 8
  %162 = load i32, i32* %mb_type157, align 4
  %cmp158 = icmp eq i32 %162, 10
  br i1 %cmp158, label %lor.end.164, label %lor.rhs.160

lor.rhs.160:                                      ; preds = %lor.lhs.false.156
  %163 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type161 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %163, i32 0, i32 8
  %164 = load i32, i32* %mb_type161, align 4
  %cmp162 = icmp eq i32 %164, 13
  br label %lor.end.164

lor.end.164:                                      ; preds = %lor.rhs.160, %lor.lhs.false.156, %lor.end.149
  %165 = phi i1 [ true, %lor.lhs.false.156 ], [ true, %lor.end.149 ], [ %cmp162, %lor.rhs.160 ]
  %lor.ext165 = zext i1 %165 to i32
  %166 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %is_intra_block166 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %166, i32 0, i32 20
  store i32 %lor.ext165, i32* %is_intra_block166, align 4
  %167 = load i32, i32* %uv, align 4
  %168 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %num_blk8x8_uv167 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %168, i32 0, i32 157
  %169 = load i32, i32* %num_blk8x8_uv167, align 4
  %shl = shl i32 %169, 1
  %cmp168 = icmp sge i32 %167, %shl
  %conv169 = zext i1 %cmp168 to i32
  %170 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %is_v_block170 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %170, i32 0, i32 21
  store i32 %conv169, i32* %is_v_block170, align 4
  %171 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %type171 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %171, i32 0, i32 0
  %172 = load i32, i32* %type171, align 4
  %idxprom172 = sext i32 %172 to i64
  %173 = load i32*, i32** %partMap, align 8
  %arrayidx173 = getelementptr inbounds i32, i32* %173, i64 %idxprom172
  %174 = load i32, i32* %arrayidx173, align 4
  %idxprom174 = sext i32 %174 to i64
  %175 = load %struct.Slice*, %struct.Slice** %currSlice, align 8
  %partArr175 = getelementptr inbounds %struct.Slice, %struct.Slice* %175, i32 0, i32 6
  %176 = load %struct.datapartition*, %struct.datapartition** %partArr175, align 8
  %arrayidx176 = getelementptr inbounds %struct.datapartition, %struct.datapartition* %176, i64 %idxprom174
  store %struct.datapartition* %arrayidx176, %struct.datapartition** %dataPart, align 8
  %177 = load %struct.datapartition*, %struct.datapartition** %dataPart, align 8
  %writeSyntaxElement177 = getelementptr inbounds %struct.datapartition, %struct.datapartition* %177, i32 0, i32 2
  %178 = load i32 (%struct.syntaxelement*, %struct.datapartition*)*, i32 (%struct.syntaxelement*, %struct.datapartition*)** %writeSyntaxElement177, align 8
  %179 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %180 = load %struct.datapartition*, %struct.datapartition** %dataPart, align 8
  %call178 = call i32 %178(%struct.syntaxelement* %179, %struct.datapartition* %180)
  %181 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %len179 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %181, i32 0, i32 3
  %182 = load i32, i32* %len179, align 4
  %183 = load i32*, i32** %bitCount, align 8
  %arrayidx180 = getelementptr inbounds i32, i32* %183, i64 6
  %184 = load i32, i32* %arrayidx180, align 4
  %add181 = add nsw i32 %184, %182
  store i32 %add181, i32* %arrayidx180, align 4
  %185 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %len182 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %185, i32 0, i32 3
  %186 = load i32, i32* %len182, align 4
  %187 = load i32, i32* %rate, align 4
  %add183 = add nsw i32 %187, %186
  store i32 %add183, i32* %rate, align 4
  %188 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %incdec.ptr184 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %188, i32 1
  store %struct.syntaxelement* %incdec.ptr184, %struct.syntaxelement** %currSE, align 8
  %189 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %currSEnr185 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %189, i32 0, i32 0
  %190 = load i32, i32* %currSEnr185, align 4
  %inc186 = add nsw i32 %190, 1
  store i32 %inc186, i32* %currSEnr185, align 4
  br label %for.inc.187

for.inc.187:                                      ; preds = %lor.end.164
  %191 = load i32, i32* %k, align 4
  %inc188 = add nsw i32 %191, 1
  store i32 %inc188, i32* %k, align 4
  br label %for.cond.115

for.end.189:                                      ; preds = %land.end.121
  br label %if.end.190

if.end.190:                                       ; preds = %for.end.189, %if.then.74
  br label %for.inc.191

for.inc.191:                                      ; preds = %if.end.190
  %192 = load i32, i32* %b4, align 4
  %inc192 = add nsw i32 %192, 1
  store i32 %inc192, i32* %b4, align 4
  br label %for.cond.69

for.end.193:                                      ; preds = %for.cond.69
  br label %for.inc.194

for.inc.194:                                      ; preds = %for.end.193
  %193 = load i32, i32* %b8, align 4
  %inc195 = add nsw i32 %193, 1
  store i32 %inc195, i32* %b8, align 4
  br label %for.cond.65

for.end.196:                                      ; preds = %for.cond.65
  br label %if.end.197

if.end.197:                                       ; preds = %for.end.196, %if.end.62
  %194 = load i32, i32* %rate, align 4
  ret i32 %194
}

; Function Attrs: nounwind uwtable
define i32 @writeCoeff4x4_CAVLC(i32 %block_type, i32 %b8, i32 %b4, i32 %param) #0 {
entry:
  %retval = alloca i32, align 4
  %block_type.addr = alloca i32, align 4
  %b8.addr = alloca i32, align 4
  %b4.addr = alloca i32, align 4
  %param.addr = alloca i32, align 4
  %no_bits = alloca i32, align 4
  %currMB = alloca %struct.macroblock*, align 8
  %currSE = alloca %struct.syntaxelement*, align 8
  %bitCount = alloca i32*, align 8
  %currSlice = alloca %struct.Slice*, align 8
  %dataPart = alloca %struct.datapartition*, align 8
  %partMap = alloca i32*, align 8
  %k = alloca i32, align 4
  %level = alloca i32, align 4
  %run = alloca i32, align 4
  %vlcnum = alloca i32, align 4
  %numcoeff = alloca i32, align 4
  %lastcoeff = alloca i32, align 4
  %numtrailingones = alloca i32, align 4
  %numones = alloca i32, align 4
  %totzeros = alloca i32, align 4
  %zerosleft = alloca i32, align 4
  %numcoef = alloca i32, align 4
  %numcoeff_vlc = alloca i32, align 4
  %code = alloca i32, align 4
  %level_two_or_higher = alloca i32, align 4
  %dptype = alloca i32, align 4
  %bitcounttype = alloca i32, align 4
  %nnz = alloca i32, align 4
  %max_coeff_num = alloca i32, align 4
  %cdc = alloca i32, align 4
  %cac = alloca i32, align 4
  %subblock_x = alloca i32, align 4
  %subblock_y = alloca i32, align 4
  %type = alloca [15 x i8], align 1
  %incVlc = alloca [7 x i32], align 16
  %pLevel = alloca i32*, align 8
  %pRun = alloca i32*, align 8
  store i32 %block_type, i32* %block_type.addr, align 4
  store i32 %b8, i32* %b8.addr, align 4
  store i32 %b4, i32* %b4.addr, align 4
  store i32 %param, i32* %param.addr, align 4
  store i32 0, i32* %no_bits, align 4
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i32 0, i32 3
  %1 = load i32, i32* %current_mb_nr, align 4
  %idxprom = sext i32 %1 to i64
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 51
  %3 = load %struct.macroblock*, %struct.macroblock** %mb_data, align 8
  %arrayidx = getelementptr inbounds %struct.macroblock, %struct.macroblock* %3, i64 %idxprom
  store %struct.macroblock* %arrayidx, %struct.macroblock** %currMB, align 8
  %4 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %currSEnr = getelementptr inbounds %struct.macroblock, %struct.macroblock* %4, i32 0, i32 0
  %5 = load i32, i32* %currSEnr, align 4
  %idxprom1 = sext i32 %5 to i64
  %6 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %MB_SyntaxElements = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %6, i32 0, i32 52
  %arrayidx2 = getelementptr inbounds [1200 x %struct.syntaxelement], [1200 x %struct.syntaxelement]* %MB_SyntaxElements, i32 0, i64 %idxprom1
  store %struct.syntaxelement* %arrayidx2, %struct.syntaxelement** %currSE, align 8
  %7 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %bitcounter = getelementptr inbounds %struct.macroblock, %struct.macroblock* %7, i32 0, i32 5
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %bitcounter, i32 0, i32 0
  store i32* %arraydecay, i32** %bitCount, align 8
  %8 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %currentSlice = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %8, i32 0, i32 50
  %9 = load %struct.Slice*, %struct.Slice** %currentSlice, align 8
  store %struct.Slice* %9, %struct.Slice** %currSlice, align 8
  %10 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %partition_mode = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %10, i32 0, i32 61
  %11 = load i32, i32* %partition_mode, align 4
  %idxprom3 = sext i32 %11 to i64
  %arrayidx4 = getelementptr inbounds [2 x i32*], [2 x i32*]* @assignSE2partition, i32 0, i64 %idxprom3
  %12 = load i32*, i32** %arrayidx4, align 8
  store i32* %12, i32** %partMap, align 8
  store i32 0, i32* %dptype, align 4
  store i32 0, i32* %bitcounttype, align 4
  store i32 0, i32* %max_coeff_num, align 4
  store i32 0, i32* %cdc, align 4
  store i32 0, i32* %cac, align 4
  %13 = bitcast [7 x i32]* %incVlc to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* bitcast ([7 x i32]* @writeCoeff4x4_CAVLC.incVlc to i8*), i64 28, i32 16, i1 false)
  store i32* null, i32** %pLevel, align 8
  store i32* null, i32** %pRun, align 8
  %14 = load i32, i32* %block_type.addr, align 4
  switch i32 %14, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb.22
    i32 2, label %sw.bb.30
    i32 6, label %sw.bb.45
    i32 7, label %sw.bb.68
  ]

sw.bb:                                            ; preds = %entry
  store i32 16, i32* %max_coeff_num, align 4
  store i32 5, i32* %bitcounttype, align 4
  %15 = load i32, i32* %b4.addr, align 4
  %idxprom5 = sext i32 %15 to i64
  %16 = load i32, i32* %b8.addr, align 4
  %idxprom6 = sext i32 %16 to i64
  %17 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %cofAC = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %17, i32 0, i32 47
  %18 = load i32****, i32***** %cofAC, align 8
  %arrayidx7 = getelementptr inbounds i32***, i32**** %18, i64 %idxprom6
  %19 = load i32***, i32**** %arrayidx7, align 8
  %arrayidx8 = getelementptr inbounds i32**, i32*** %19, i64 %idxprom5
  %20 = load i32**, i32*** %arrayidx8, align 8
  %arrayidx9 = getelementptr inbounds i32*, i32** %20, i64 0
  %21 = load i32*, i32** %arrayidx9, align 8
  store i32* %21, i32** %pLevel, align 8
  %22 = load i32, i32* %b4.addr, align 4
  %idxprom10 = sext i32 %22 to i64
  %23 = load i32, i32* %b8.addr, align 4
  %idxprom11 = sext i32 %23 to i64
  %24 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %cofAC12 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %24, i32 0, i32 47
  %25 = load i32****, i32***** %cofAC12, align 8
  %arrayidx13 = getelementptr inbounds i32***, i32**** %25, i64 %idxprom11
  %26 = load i32***, i32**** %arrayidx13, align 8
  %arrayidx14 = getelementptr inbounds i32**, i32*** %26, i64 %idxprom10
  %27 = load i32**, i32*** %arrayidx14, align 8
  %arrayidx15 = getelementptr inbounds i32*, i32** %27, i64 1
  %28 = load i32*, i32** %arrayidx15, align 8
  store i32* %28, i32** %pRun, align 8
  %arraydecay16 = getelementptr inbounds [15 x i8], [15 x i8]* %type, i32 0, i32 0
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay16, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i32 0, i32 0)) #3
  %29 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type = getelementptr inbounds %struct.macroblock, %struct.macroblock* %29, i32 0, i32 8
  %30 = load i32, i32* %mb_type, align 4
  %cmp = icmp eq i32 %30, 9
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %sw.bb
  %31 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type17 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %31, i32 0, i32 8
  %32 = load i32, i32* %mb_type17, align 4
  %cmp18 = icmp eq i32 %32, 10
  br i1 %cmp18, label %if.then, label %lor.lhs.false.19

lor.lhs.false.19:                                 ; preds = %lor.lhs.false
  %33 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type20 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %33, i32 0, i32 8
  %34 = load i32, i32* %mb_type20, align 4
  %cmp21 = icmp eq i32 %34, 13
  br i1 %cmp21, label %if.then, label %if.else

if.then:                                          ; preds = %lor.lhs.false.19, %lor.lhs.false, %sw.bb
  store i32 9, i32* %dptype, align 4
  br label %if.end

if.else:                                          ; preds = %lor.lhs.false.19
  store i32 14, i32* %dptype, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %sw.epilog

sw.bb.22:                                         ; preds = %entry
  store i32 16, i32* %max_coeff_num, align 4
  store i32 5, i32* %bitcounttype, align 4
  %35 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %cofDC = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %35, i32 0, i32 48
  %36 = load i32***, i32**** %cofDC, align 8
  %arrayidx23 = getelementptr inbounds i32**, i32*** %36, i64 0
  %37 = load i32**, i32*** %arrayidx23, align 8
  %arrayidx24 = getelementptr inbounds i32*, i32** %37, i64 0
  %38 = load i32*, i32** %arrayidx24, align 8
  store i32* %38, i32** %pLevel, align 8
  %39 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %cofDC25 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %39, i32 0, i32 48
  %40 = load i32***, i32**** %cofDC25, align 8
  %arrayidx26 = getelementptr inbounds i32**, i32*** %40, i64 0
  %41 = load i32**, i32*** %arrayidx26, align 8
  %arrayidx27 = getelementptr inbounds i32*, i32** %41, i64 1
  %42 = load i32*, i32** %arrayidx27, align 8
  store i32* %42, i32** %pRun, align 8
  %arraydecay28 = getelementptr inbounds [15 x i8], [15 x i8]* %type, i32 0, i32 0
  %call29 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay28, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i32 0, i32 0)) #3
  store i32 7, i32* %dptype, align 4
  br label %sw.epilog

sw.bb.30:                                         ; preds = %entry
  store i32 15, i32* %max_coeff_num, align 4
  store i32 5, i32* %bitcounttype, align 4
  %43 = load i32, i32* %b4.addr, align 4
  %idxprom31 = sext i32 %43 to i64
  %44 = load i32, i32* %b8.addr, align 4
  %idxprom32 = sext i32 %44 to i64
  %45 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %cofAC33 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %45, i32 0, i32 47
  %46 = load i32****, i32***** %cofAC33, align 8
  %arrayidx34 = getelementptr inbounds i32***, i32**** %46, i64 %idxprom32
  %47 = load i32***, i32**** %arrayidx34, align 8
  %arrayidx35 = getelementptr inbounds i32**, i32*** %47, i64 %idxprom31
  %48 = load i32**, i32*** %arrayidx35, align 8
  %arrayidx36 = getelementptr inbounds i32*, i32** %48, i64 0
  %49 = load i32*, i32** %arrayidx36, align 8
  store i32* %49, i32** %pLevel, align 8
  %50 = load i32, i32* %b4.addr, align 4
  %idxprom37 = sext i32 %50 to i64
  %51 = load i32, i32* %b8.addr, align 4
  %idxprom38 = sext i32 %51 to i64
  %52 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %cofAC39 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %52, i32 0, i32 47
  %53 = load i32****, i32***** %cofAC39, align 8
  %arrayidx40 = getelementptr inbounds i32***, i32**** %53, i64 %idxprom38
  %54 = load i32***, i32**** %arrayidx40, align 8
  %arrayidx41 = getelementptr inbounds i32**, i32*** %54, i64 %idxprom37
  %55 = load i32**, i32*** %arrayidx41, align 8
  %arrayidx42 = getelementptr inbounds i32*, i32** %55, i64 1
  %56 = load i32*, i32** %arrayidx42, align 8
  store i32* %56, i32** %pRun, align 8
  %arraydecay43 = getelementptr inbounds [15 x i8], [15 x i8]* %type, i32 0, i32 0
  %call44 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay43, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i32 0, i32 0)) #3
  store i32 9, i32* %dptype, align 4
  br label %sw.epilog

sw.bb.45:                                         ; preds = %entry
  %57 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %num_cdc_coeff = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %57, i32 0, i32 158
  %58 = load i32, i32* %num_cdc_coeff, align 4
  store i32 %58, i32* %max_coeff_num, align 4
  store i32 6, i32* %bitcounttype, align 4
  store i32 1, i32* %cdc, align 4
  %59 = load i32, i32* %param.addr, align 4
  %add = add nsw i32 %59, 1
  %idxprom46 = sext i32 %add to i64
  %60 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %cofDC47 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %60, i32 0, i32 48
  %61 = load i32***, i32**** %cofDC47, align 8
  %arrayidx48 = getelementptr inbounds i32**, i32*** %61, i64 %idxprom46
  %62 = load i32**, i32*** %arrayidx48, align 8
  %arrayidx49 = getelementptr inbounds i32*, i32** %62, i64 0
  %63 = load i32*, i32** %arrayidx49, align 8
  store i32* %63, i32** %pLevel, align 8
  %64 = load i32, i32* %param.addr, align 4
  %add50 = add nsw i32 %64, 1
  %idxprom51 = sext i32 %add50 to i64
  %65 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %cofDC52 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %65, i32 0, i32 48
  %66 = load i32***, i32**** %cofDC52, align 8
  %arrayidx53 = getelementptr inbounds i32**, i32*** %66, i64 %idxprom51
  %67 = load i32**, i32*** %arrayidx53, align 8
  %arrayidx54 = getelementptr inbounds i32*, i32** %67, i64 1
  %68 = load i32*, i32** %arrayidx54, align 8
  store i32* %68, i32** %pRun, align 8
  %arraydecay55 = getelementptr inbounds [15 x i8], [15 x i8]* %type, i32 0, i32 0
  %call56 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay55, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 0)) #3
  %69 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type57 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %69, i32 0, i32 8
  %70 = load i32, i32* %mb_type57, align 4
  %cmp58 = icmp eq i32 %70, 9
  br i1 %cmp58, label %if.then.65, label %lor.lhs.false.59

lor.lhs.false.59:                                 ; preds = %sw.bb.45
  %71 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type60 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %71, i32 0, i32 8
  %72 = load i32, i32* %mb_type60, align 4
  %cmp61 = icmp eq i32 %72, 10
  br i1 %cmp61, label %if.then.65, label %lor.lhs.false.62

lor.lhs.false.62:                                 ; preds = %lor.lhs.false.59
  %73 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type63 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %73, i32 0, i32 8
  %74 = load i32, i32* %mb_type63, align 4
  %cmp64 = icmp eq i32 %74, 13
  br i1 %cmp64, label %if.then.65, label %if.else.66

if.then.65:                                       ; preds = %lor.lhs.false.62, %lor.lhs.false.59, %sw.bb.45
  store i32 8, i32* %dptype, align 4
  br label %if.end.67

if.else.66:                                       ; preds = %lor.lhs.false.62
  store i32 13, i32* %dptype, align 4
  br label %if.end.67

if.end.67:                                        ; preds = %if.else.66, %if.then.65
  br label %sw.epilog

sw.bb.68:                                         ; preds = %entry
  store i32 15, i32* %max_coeff_num, align 4
  store i32 6, i32* %bitcounttype, align 4
  store i32 1, i32* %cac, align 4
  %75 = load i32, i32* %b4.addr, align 4
  %idxprom69 = sext i32 %75 to i64
  %76 = load i32, i32* %b8.addr, align 4
  %idxprom70 = sext i32 %76 to i64
  %77 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %cofAC71 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %77, i32 0, i32 47
  %78 = load i32****, i32***** %cofAC71, align 8
  %arrayidx72 = getelementptr inbounds i32***, i32**** %78, i64 %idxprom70
  %79 = load i32***, i32**** %arrayidx72, align 8
  %arrayidx73 = getelementptr inbounds i32**, i32*** %79, i64 %idxprom69
  %80 = load i32**, i32*** %arrayidx73, align 8
  %arrayidx74 = getelementptr inbounds i32*, i32** %80, i64 0
  %81 = load i32*, i32** %arrayidx74, align 8
  store i32* %81, i32** %pLevel, align 8
  %82 = load i32, i32* %b4.addr, align 4
  %idxprom75 = sext i32 %82 to i64
  %83 = load i32, i32* %b8.addr, align 4
  %idxprom76 = sext i32 %83 to i64
  %84 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %cofAC77 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %84, i32 0, i32 47
  %85 = load i32****, i32***** %cofAC77, align 8
  %arrayidx78 = getelementptr inbounds i32***, i32**** %85, i64 %idxprom76
  %86 = load i32***, i32**** %arrayidx78, align 8
  %arrayidx79 = getelementptr inbounds i32**, i32*** %86, i64 %idxprom75
  %87 = load i32**, i32*** %arrayidx79, align 8
  %arrayidx80 = getelementptr inbounds i32*, i32** %87, i64 1
  %88 = load i32*, i32** %arrayidx80, align 8
  store i32* %88, i32** %pRun, align 8
  %arraydecay81 = getelementptr inbounds [15 x i8], [15 x i8]* %type, i32 0, i32 0
  %call82 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay81, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i32 0, i32 0)) #3
  %89 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type83 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %89, i32 0, i32 8
  %90 = load i32, i32* %mb_type83, align 4
  %cmp84 = icmp eq i32 %90, 9
  br i1 %cmp84, label %if.then.91, label %lor.lhs.false.85

lor.lhs.false.85:                                 ; preds = %sw.bb.68
  %91 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type86 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %91, i32 0, i32 8
  %92 = load i32, i32* %mb_type86, align 4
  %cmp87 = icmp eq i32 %92, 10
  br i1 %cmp87, label %if.then.91, label %lor.lhs.false.88

lor.lhs.false.88:                                 ; preds = %lor.lhs.false.85
  %93 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type89 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %93, i32 0, i32 8
  %94 = load i32, i32* %mb_type89, align 4
  %cmp90 = icmp eq i32 %94, 13
  br i1 %cmp90, label %if.then.91, label %if.else.92

if.then.91:                                       ; preds = %lor.lhs.false.88, %lor.lhs.false.85, %sw.bb.68
  store i32 10, i32* %dptype, align 4
  br label %if.end.93

if.else.92:                                       ; preds = %lor.lhs.false.88
  store i32 15, i32* %dptype, align 4
  br label %if.end.93

if.end.93:                                        ; preds = %if.else.92, %if.then.91
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  call void @error(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.7, i32 0, i32 0), i32 600)
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %if.end.93, %if.end.67, %sw.bb.30, %sw.bb.22, %if.end
  %95 = load i32, i32* %dptype, align 4
  %idxprom94 = sext i32 %95 to i64
  %96 = load i32*, i32** %partMap, align 8
  %arrayidx95 = getelementptr inbounds i32, i32* %96, i64 %idxprom94
  %97 = load i32, i32* %arrayidx95, align 4
  %idxprom96 = sext i32 %97 to i64
  %98 = load %struct.Slice*, %struct.Slice** %currSlice, align 8
  %partArr = getelementptr inbounds %struct.Slice, %struct.Slice* %98, i32 0, i32 6
  %99 = load %struct.datapartition*, %struct.datapartition** %partArr, align 8
  %arrayidx97 = getelementptr inbounds %struct.datapartition, %struct.datapartition* %99, i64 %idxprom96
  store %struct.datapartition* %arrayidx97, %struct.datapartition** %dataPart, align 8
  store i32 0, i32* %numcoeff, align 4
  store i32 0, i32* %numtrailingones, align 4
  store i32 0, i32* %numones, align 4
  store i32 0, i32* %lastcoeff, align 4
  store i32 0, i32* %totzeros, align 4
  store i32 1, i32* %level, align 4
  store i32 0, i32* %k, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %sw.epilog
  %100 = load i32, i32* %k, align 4
  %101 = load i32, i32* %cdc, align 4
  %tobool = icmp ne i32 %101, 0
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %for.cond
  %102 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %num_cdc_coeff98 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %102, i32 0, i32 158
  %103 = load i32, i32* %num_cdc_coeff98, align 4
  br label %cond.end

cond.false:                                       ; preds = %for.cond
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %103, %cond.true ], [ 16, %cond.false ]
  %cmp99 = icmp sle i32 %100, %cond
  br i1 %cmp99, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %cond.end
  %104 = load i32, i32* %level, align 4
  %cmp100 = icmp ne i32 %104, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %cond.end
  %105 = phi i1 [ false, %cond.end ], [ %cmp100, %land.rhs ]
  br i1 %105, label %for.body, label %for.end

for.body:                                         ; preds = %land.end
  %106 = load i32, i32* %k, align 4
  %idxprom101 = sext i32 %106 to i64
  %107 = load i32*, i32** %pLevel, align 8
  %arrayidx102 = getelementptr inbounds i32, i32* %107, i64 %idxprom101
  %108 = load i32, i32* %arrayidx102, align 4
  store i32 %108, i32* %level, align 4
  %109 = load i32, i32* %k, align 4
  %idxprom103 = sext i32 %109 to i64
  %110 = load i32*, i32** %pRun, align 8
  %arrayidx104 = getelementptr inbounds i32, i32* %110, i64 %idxprom103
  %111 = load i32, i32* %arrayidx104, align 4
  store i32 %111, i32* %run, align 4
  %112 = load i32, i32* %level, align 4
  %tobool105 = icmp ne i32 %112, 0
  br i1 %tobool105, label %if.then.106, label %if.end.121

if.then.106:                                      ; preds = %for.body
  %113 = load i32, i32* %run, align 4
  %tobool107 = icmp ne i32 %113, 0
  br i1 %tobool107, label %if.then.108, label %if.end.110

if.then.108:                                      ; preds = %if.then.106
  %114 = load i32, i32* %run, align 4
  %115 = load i32, i32* %totzeros, align 4
  %add109 = add nsw i32 %115, %114
  store i32 %add109, i32* %totzeros, align 4
  br label %if.end.110

if.end.110:                                       ; preds = %if.then.108, %if.then.106
  %116 = load i32, i32* %level, align 4
  %call111 = call i32 @abs(i32 %116) #6
  %cmp112 = icmp eq i32 %call111, 1
  br i1 %cmp112, label %if.then.113, label %if.else.118

if.then.113:                                      ; preds = %if.end.110
  %117 = load i32, i32* %numtrailingones, align 4
  %inc = add nsw i32 %117, 1
  store i32 %inc, i32* %numtrailingones, align 4
  %118 = load i32, i32* %numones, align 4
  %inc114 = add nsw i32 %118, 1
  store i32 %inc114, i32* %numones, align 4
  %119 = load i32, i32* %numtrailingones, align 4
  %cmp115 = icmp sgt i32 %119, 3
  br i1 %cmp115, label %if.then.116, label %if.end.117

if.then.116:                                      ; preds = %if.then.113
  store i32 3, i32* %numtrailingones, align 4
  br label %if.end.117

if.end.117:                                       ; preds = %if.then.116, %if.then.113
  br label %if.end.119

if.else.118:                                      ; preds = %if.end.110
  store i32 0, i32* %numtrailingones, align 4
  br label %if.end.119

if.end.119:                                       ; preds = %if.else.118, %if.end.117
  %120 = load i32, i32* %numcoeff, align 4
  %inc120 = add nsw i32 %120, 1
  store i32 %inc120, i32* %numcoeff, align 4
  %121 = load i32, i32* %k, align 4
  store i32 %121, i32* %lastcoeff, align 4
  br label %if.end.121

if.end.121:                                       ; preds = %if.end.119, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.121
  %122 = load i32, i32* %k, align 4
  %inc122 = add nsw i32 %122, 1
  store i32 %inc122, i32* %k, align 4
  br label %for.cond

for.end:                                          ; preds = %land.end
  %123 = load i32, i32* %cdc, align 4
  %tobool123 = icmp ne i32 %123, 0
  br i1 %tobool123, label %if.else.171, label %if.then.124

if.then.124:                                      ; preds = %for.end
  %124 = load i32, i32* %cac, align 4
  %tobool125 = icmp ne i32 %124, 0
  br i1 %tobool125, label %if.else.148, label %if.then.126

if.then.126:                                      ; preds = %if.then.124
  %125 = load i32, i32* %b8.addr, align 4
  %and = and i32 %125, 1
  %cmp127 = icmp eq i32 %and, 0
  br i1 %cmp127, label %cond.true.128, label %cond.false.132

cond.true.128:                                    ; preds = %if.then.126
  %126 = load i32, i32* %b4.addr, align 4
  %and129 = and i32 %126, 1
  %cmp130 = icmp eq i32 %and129, 0
  %cond131 = select i1 %cmp130, i32 0, i32 1
  br label %cond.end.136

cond.false.132:                                   ; preds = %if.then.126
  %127 = load i32, i32* %b4.addr, align 4
  %and133 = and i32 %127, 1
  %cmp134 = icmp eq i32 %and133, 0
  %cond135 = select i1 %cmp134, i32 2, i32 3
  br label %cond.end.136

cond.end.136:                                     ; preds = %cond.false.132, %cond.true.128
  %cond137 = phi i32 [ %cond131, %cond.true.128 ], [ %cond135, %cond.false.132 ]
  store i32 %cond137, i32* %subblock_x, align 4
  %128 = load i32, i32* %b8.addr, align 4
  %cmp138 = icmp slt i32 %128, 2
  br i1 %cmp138, label %cond.true.139, label %cond.false.142

cond.true.139:                                    ; preds = %cond.end.136
  %129 = load i32, i32* %b4.addr, align 4
  %cmp140 = icmp slt i32 %129, 2
  %cond141 = select i1 %cmp140, i32 0, i32 1
  br label %cond.end.145

cond.false.142:                                   ; preds = %cond.end.136
  %130 = load i32, i32* %b4.addr, align 4
  %cmp143 = icmp slt i32 %130, 2
  %cond144 = select i1 %cmp143, i32 2, i32 3
  br label %cond.end.145

cond.end.145:                                     ; preds = %cond.false.142, %cond.true.139
  %cond146 = phi i32 [ %cond141, %cond.true.139 ], [ %cond144, %cond.false.142 ]
  store i32 %cond146, i32* %subblock_y, align 4
  %131 = load i32, i32* %subblock_x, align 4
  %132 = load i32, i32* %subblock_y, align 4
  %call147 = call i32 @predict_nnz(i32 %131, i32 %132)
  store i32 %call147, i32* %nnz, align 4
  br label %if.end.151

if.else.148:                                      ; preds = %if.then.124
  %133 = load i32, i32* %param.addr, align 4
  %shr = ashr i32 %133, 4
  store i32 %shr, i32* %subblock_x, align 4
  %134 = load i32, i32* %param.addr, align 4
  %and149 = and i32 %134, 15
  store i32 %and149, i32* %subblock_y, align 4
  %135 = load i32, i32* %subblock_x, align 4
  %136 = load i32, i32* %subblock_y, align 4
  %call150 = call i32 @predict_nnz_chroma(i32 %135, i32 %136)
  store i32 %call150, i32* %nnz, align 4
  br label %if.end.151

if.end.151:                                       ; preds = %if.else.148, %cond.end.145
  %137 = load i32, i32* %numcoeff, align 4
  %138 = load i32, i32* %subblock_y, align 4
  %idxprom152 = sext i32 %138 to i64
  %139 = load i32, i32* %subblock_x, align 4
  %idxprom153 = sext i32 %139 to i64
  %140 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr154 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %140, i32 0, i32 3
  %141 = load i32, i32* %current_mb_nr154, align 4
  %idxprom155 = sext i32 %141 to i64
  %142 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %nz_coeff = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %142, i32 0, i32 28
  %143 = load i32***, i32**** %nz_coeff, align 8
  %arrayidx156 = getelementptr inbounds i32**, i32*** %143, i64 %idxprom155
  %144 = load i32**, i32*** %arrayidx156, align 8
  %arrayidx157 = getelementptr inbounds i32*, i32** %144, i64 %idxprom153
  %145 = load i32*, i32** %arrayidx157, align 8
  %arrayidx158 = getelementptr inbounds i32, i32* %145, i64 %idxprom152
  store i32 %137, i32* %arrayidx158, align 4
  %146 = load i32, i32* %nnz, align 4
  %cmp159 = icmp slt i32 %146, 2
  br i1 %cmp159, label %if.then.160, label %if.else.161

if.then.160:                                      ; preds = %if.end.151
  store i32 0, i32* %numcoeff_vlc, align 4
  br label %if.end.170

if.else.161:                                      ; preds = %if.end.151
  %147 = load i32, i32* %nnz, align 4
  %cmp162 = icmp slt i32 %147, 4
  br i1 %cmp162, label %if.then.163, label %if.else.164

if.then.163:                                      ; preds = %if.else.161
  store i32 1, i32* %numcoeff_vlc, align 4
  br label %if.end.169

if.else.164:                                      ; preds = %if.else.161
  %148 = load i32, i32* %nnz, align 4
  %cmp165 = icmp slt i32 %148, 8
  br i1 %cmp165, label %if.then.166, label %if.else.167

if.then.166:                                      ; preds = %if.else.164
  store i32 2, i32* %numcoeff_vlc, align 4
  br label %if.end.168

if.else.167:                                      ; preds = %if.else.164
  store i32 3, i32* %numcoeff_vlc, align 4
  br label %if.end.168

if.end.168:                                       ; preds = %if.else.167, %if.then.166
  br label %if.end.169

if.end.169:                                       ; preds = %if.end.168, %if.then.163
  br label %if.end.170

if.end.170:                                       ; preds = %if.end.169, %if.then.160
  br label %if.end.172

if.else.171:                                      ; preds = %for.end
  store i32 0, i32* %numcoeff_vlc, align 4
  %149 = load i32, i32* %param.addr, align 4
  store i32 %149, i32* %subblock_x, align 4
  %150 = load i32, i32* %param.addr, align 4
  store i32 %150, i32* %subblock_y, align 4
  br label %if.end.172

if.end.172:                                       ; preds = %if.else.171, %if.end.170
  %151 = load i32, i32* %dptype, align 4
  %152 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %type173 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %152, i32 0, i32 0
  store i32 %151, i32* %type173, align 4
  %153 = load i32, i32* %numcoeff, align 4
  %154 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %value1 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %154, i32 0, i32 1
  store i32 %153, i32* %value1, align 4
  %155 = load i32, i32* %numtrailingones, align 4
  %156 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %value2 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %156, i32 0, i32 2
  store i32 %155, i32* %value2, align 4
  %157 = load i32, i32* %numcoeff_vlc, align 4
  %158 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %len = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %158, i32 0, i32 3
  store i32 %157, i32* %len, align 4
  %159 = load i32, i32* %cdc, align 4
  %tobool174 = icmp ne i32 %159, 0
  br i1 %tobool174, label %if.else.177, label %if.then.175

if.then.175:                                      ; preds = %if.end.172
  %160 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %161 = load %struct.datapartition*, %struct.datapartition** %dataPart, align 8
  %call176 = call i32 @writeSyntaxElement_NumCoeffTrailingOnes(%struct.syntaxelement* %160, %struct.datapartition* %161)
  br label %if.end.179

if.else.177:                                      ; preds = %if.end.172
  %162 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %163 = load %struct.datapartition*, %struct.datapartition** %dataPart, align 8
  %call178 = call i32 @writeSyntaxElement_NumCoeffTrailingOnesChromaDC(%struct.syntaxelement* %162, %struct.datapartition* %163)
  br label %if.end.179

if.end.179:                                       ; preds = %if.else.177, %if.then.175
  %164 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %len180 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %164, i32 0, i32 3
  %165 = load i32, i32* %len180, align 4
  %166 = load i32, i32* %bitcounttype, align 4
  %idxprom181 = sext i32 %166 to i64
  %167 = load i32*, i32** %bitCount, align 8
  %arrayidx182 = getelementptr inbounds i32, i32* %167, i64 %idxprom181
  %168 = load i32, i32* %arrayidx182, align 4
  %add183 = add nsw i32 %168, %165
  store i32 %add183, i32* %arrayidx182, align 4
  %169 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %len184 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %169, i32 0, i32 3
  %170 = load i32, i32* %len184, align 4
  %171 = load i32, i32* %no_bits, align 4
  %add185 = add nsw i32 %171, %170
  store i32 %add185, i32* %no_bits, align 4
  %172 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %incdec.ptr = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %172, i32 1
  store %struct.syntaxelement* %incdec.ptr, %struct.syntaxelement** %currSE, align 8
  %173 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %currSEnr186 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %173, i32 0, i32 0
  %174 = load i32, i32* %currSEnr186, align 4
  %inc187 = add nsw i32 %174, 1
  store i32 %inc187, i32* %currSEnr186, align 4
  %175 = load i32, i32* %numcoeff, align 4
  %tobool188 = icmp ne i32 %175, 0
  br i1 %tobool188, label %if.end.190, label %if.then.189

if.then.189:                                      ; preds = %if.end.179
  %176 = load i32, i32* %no_bits, align 4
  store i32 %176, i32* %retval
  br label %return

if.end.190:                                       ; preds = %if.end.179
  %177 = load i32, i32* %numcoeff, align 4
  %tobool191 = icmp ne i32 %177, 0
  br i1 %tobool191, label %if.then.192, label %if.end.345

if.then.192:                                      ; preds = %if.end.190
  store i32 0, i32* %code, align 4
  %178 = load i32, i32* %lastcoeff, align 4
  store i32 %178, i32* %k, align 4
  br label %for.cond.193

for.cond.193:                                     ; preds = %for.inc.206, %if.then.192
  %179 = load i32, i32* %k, align 4
  %180 = load i32, i32* %lastcoeff, align 4
  %181 = load i32, i32* %numtrailingones, align 4
  %sub = sub nsw i32 %180, %181
  %cmp194 = icmp sgt i32 %179, %sub
  br i1 %cmp194, label %for.body.195, label %for.end.207

for.body.195:                                     ; preds = %for.cond.193
  %182 = load i32, i32* %k, align 4
  %idxprom196 = sext i32 %182 to i64
  %183 = load i32*, i32** %pLevel, align 8
  %arrayidx197 = getelementptr inbounds i32, i32* %183, i64 %idxprom196
  %184 = load i32, i32* %arrayidx197, align 4
  store i32 %184, i32* %level, align 4
  %185 = load i32, i32* %level, align 4
  %call198 = call i32 @abs(i32 %185) #6
  %cmp199 = icmp sgt i32 %call198, 1
  br i1 %cmp199, label %if.then.200, label %if.end.202

if.then.200:                                      ; preds = %for.body.195
  %call201 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8, i32 0, i32 0))
  call void @exit(i32 -1) #7
  unreachable

if.end.202:                                       ; preds = %for.body.195
  %186 = load i32, i32* %code, align 4
  %shl = shl i32 %186, 1
  store i32 %shl, i32* %code, align 4
  %187 = load i32, i32* %level, align 4
  %cmp203 = icmp slt i32 %187, 0
  br i1 %cmp203, label %if.then.204, label %if.end.205

if.then.204:                                      ; preds = %if.end.202
  %188 = load i32, i32* %code, align 4
  %or = or i32 %188, 1
  store i32 %or, i32* %code, align 4
  br label %if.end.205

if.end.205:                                       ; preds = %if.then.204, %if.end.202
  br label %for.inc.206

for.inc.206:                                      ; preds = %if.end.205
  %189 = load i32, i32* %k, align 4
  %dec = add nsw i32 %189, -1
  store i32 %dec, i32* %k, align 4
  br label %for.cond.193

for.end.207:                                      ; preds = %for.cond.193
  %190 = load i32, i32* %numtrailingones, align 4
  %tobool208 = icmp ne i32 %190, 0
  br i1 %tobool208, label %if.then.209, label %if.end.223

if.then.209:                                      ; preds = %for.end.207
  %191 = load i32, i32* %dptype, align 4
  %192 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %type210 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %192, i32 0, i32 0
  store i32 %191, i32* %type210, align 4
  %193 = load i32, i32* %numtrailingones, align 4
  %194 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %value2211 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %194, i32 0, i32 2
  store i32 %193, i32* %value2211, align 4
  %195 = load i32, i32* %code, align 4
  %196 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %value1212 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %196, i32 0, i32 1
  store i32 %195, i32* %value1212, align 4
  %197 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %198 = load %struct.datapartition*, %struct.datapartition** %dataPart, align 8
  %call213 = call i32 @writeSyntaxElement_VLC(%struct.syntaxelement* %197, %struct.datapartition* %198)
  %199 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %len214 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %199, i32 0, i32 3
  %200 = load i32, i32* %len214, align 4
  %201 = load i32, i32* %bitcounttype, align 4
  %idxprom215 = sext i32 %201 to i64
  %202 = load i32*, i32** %bitCount, align 8
  %arrayidx216 = getelementptr inbounds i32, i32* %202, i64 %idxprom215
  %203 = load i32, i32* %arrayidx216, align 4
  %add217 = add nsw i32 %203, %200
  store i32 %add217, i32* %arrayidx216, align 4
  %204 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %len218 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %204, i32 0, i32 3
  %205 = load i32, i32* %len218, align 4
  %206 = load i32, i32* %no_bits, align 4
  %add219 = add nsw i32 %206, %205
  store i32 %add219, i32* %no_bits, align 4
  %207 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %incdec.ptr220 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %207, i32 1
  store %struct.syntaxelement* %incdec.ptr220, %struct.syntaxelement** %currSE, align 8
  %208 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %currSEnr221 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %208, i32 0, i32 0
  %209 = load i32, i32* %currSEnr221, align 4
  %inc222 = add nsw i32 %209, 1
  store i32 %inc222, i32* %currSEnr221, align 4
  br label %if.end.223

if.end.223:                                       ; preds = %if.then.209, %for.end.207
  store i32 1, i32* %level_two_or_higher, align 4
  %210 = load i32, i32* %numcoeff, align 4
  %cmp224 = icmp sgt i32 %210, 3
  br i1 %cmp224, label %land.lhs.true, label %if.end.227

land.lhs.true:                                    ; preds = %if.end.223
  %211 = load i32, i32* %numtrailingones, align 4
  %cmp225 = icmp eq i32 %211, 3
  br i1 %cmp225, label %if.then.226, label %if.end.227

if.then.226:                                      ; preds = %land.lhs.true
  store i32 0, i32* %level_two_or_higher, align 4
  br label %if.end.227

if.end.227:                                       ; preds = %if.then.226, %land.lhs.true, %if.end.223
  %212 = load i32, i32* %numcoeff, align 4
  %cmp228 = icmp sgt i32 %212, 10
  br i1 %cmp228, label %land.lhs.true.229, label %if.else.232

land.lhs.true.229:                                ; preds = %if.end.227
  %213 = load i32, i32* %numtrailingones, align 4
  %cmp230 = icmp slt i32 %213, 3
  br i1 %cmp230, label %if.then.231, label %if.else.232

if.then.231:                                      ; preds = %land.lhs.true.229
  store i32 1, i32* %vlcnum, align 4
  br label %if.end.233

if.else.232:                                      ; preds = %land.lhs.true.229, %if.end.227
  store i32 0, i32* %vlcnum, align 4
  br label %if.end.233

if.end.233:                                       ; preds = %if.else.232, %if.then.231
  %214 = load i32, i32* %lastcoeff, align 4
  %215 = load i32, i32* %numtrailingones, align 4
  %sub234 = sub nsw i32 %214, %215
  store i32 %sub234, i32* %k, align 4
  br label %for.cond.235

for.cond.235:                                     ; preds = %for.inc.283, %if.end.233
  %216 = load i32, i32* %k, align 4
  %cmp236 = icmp sge i32 %216, 0
  br i1 %cmp236, label %for.body.237, label %for.end.285

for.body.237:                                     ; preds = %for.cond.235
  %217 = load i32, i32* %k, align 4
  %idxprom238 = sext i32 %217 to i64
  %218 = load i32*, i32** %pLevel, align 8
  %arrayidx239 = getelementptr inbounds i32, i32* %218, i64 %idxprom238
  %219 = load i32, i32* %arrayidx239, align 4
  store i32 %219, i32* %level, align 4
  %220 = load i32, i32* %level, align 4
  %221 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %value1240 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %221, i32 0, i32 1
  store i32 %220, i32* %value1240, align 4
  %222 = load i32, i32* %dptype, align 4
  %223 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %type241 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %223, i32 0, i32 0
  store i32 %222, i32* %type241, align 4
  %224 = load i32, i32* %level_two_or_higher, align 4
  %tobool242 = icmp ne i32 %224, 0
  br i1 %tobool242, label %if.then.243, label %if.end.253

if.then.243:                                      ; preds = %for.body.237
  %225 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %value1244 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %225, i32 0, i32 1
  %226 = load i32, i32* %value1244, align 4
  %cmp245 = icmp sgt i32 %226, 0
  br i1 %cmp245, label %if.then.246, label %if.else.249

if.then.246:                                      ; preds = %if.then.243
  %227 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %value1247 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %227, i32 0, i32 1
  %228 = load i32, i32* %value1247, align 4
  %dec248 = add nsw i32 %228, -1
  store i32 %dec248, i32* %value1247, align 4
  br label %if.end.252

if.else.249:                                      ; preds = %if.then.243
  %229 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %value1250 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %229, i32 0, i32 1
  %230 = load i32, i32* %value1250, align 4
  %inc251 = add nsw i32 %230, 1
  store i32 %inc251, i32* %value1250, align 4
  br label %if.end.252

if.end.252:                                       ; preds = %if.else.249, %if.then.246
  store i32 0, i32* %level_two_or_higher, align 4
  br label %if.end.253

if.end.253:                                       ; preds = %if.end.252, %for.body.237
  %231 = load i32, i32* %vlcnum, align 4
  %cmp254 = icmp eq i32 %231, 0
  br i1 %cmp254, label %if.then.255, label %if.else.257

if.then.255:                                      ; preds = %if.end.253
  %232 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %233 = load %struct.datapartition*, %struct.datapartition** %dataPart, align 8
  %call256 = call i32 @writeSyntaxElement_Level_VLC1(%struct.syntaxelement* %232, %struct.datapartition* %233)
  br label %if.end.259

if.else.257:                                      ; preds = %if.end.253
  %234 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %235 = load i32, i32* %vlcnum, align 4
  %236 = load %struct.datapartition*, %struct.datapartition** %dataPart, align 8
  %call258 = call i32 @writeSyntaxElement_Level_VLCN(%struct.syntaxelement* %234, i32 %235, %struct.datapartition* %236)
  br label %if.end.259

if.end.259:                                       ; preds = %if.else.257, %if.then.255
  %237 = load i32, i32* %level, align 4
  %call260 = call i32 @abs(i32 %237) #6
  %238 = load i32, i32* %vlcnum, align 4
  %idxprom261 = sext i32 %238 to i64
  %arrayidx262 = getelementptr inbounds [7 x i32], [7 x i32]* %incVlc, i32 0, i64 %idxprom261
  %239 = load i32, i32* %arrayidx262, align 4
  %cmp263 = icmp sgt i32 %call260, %239
  br i1 %cmp263, label %if.then.264, label %if.end.266

if.then.264:                                      ; preds = %if.end.259
  %240 = load i32, i32* %vlcnum, align 4
  %inc265 = add nsw i32 %240, 1
  store i32 %inc265, i32* %vlcnum, align 4
  br label %if.end.266

if.end.266:                                       ; preds = %if.then.264, %if.end.259
  %241 = load i32, i32* %k, align 4
  %242 = load i32, i32* %lastcoeff, align 4
  %243 = load i32, i32* %numtrailingones, align 4
  %sub267 = sub nsw i32 %242, %243
  %cmp268 = icmp eq i32 %241, %sub267
  br i1 %cmp268, label %land.lhs.true.269, label %if.end.273

land.lhs.true.269:                                ; preds = %if.end.266
  %244 = load i32, i32* %level, align 4
  %call270 = call i32 @abs(i32 %244) #6
  %cmp271 = icmp sgt i32 %call270, 3
  br i1 %cmp271, label %if.then.272, label %if.end.273

if.then.272:                                      ; preds = %land.lhs.true.269
  store i32 2, i32* %vlcnum, align 4
  br label %if.end.273

if.end.273:                                       ; preds = %if.then.272, %land.lhs.true.269, %if.end.266
  %245 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %len274 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %245, i32 0, i32 3
  %246 = load i32, i32* %len274, align 4
  %247 = load i32, i32* %bitcounttype, align 4
  %idxprom275 = sext i32 %247 to i64
  %248 = load i32*, i32** %bitCount, align 8
  %arrayidx276 = getelementptr inbounds i32, i32* %248, i64 %idxprom275
  %249 = load i32, i32* %arrayidx276, align 4
  %add277 = add nsw i32 %249, %246
  store i32 %add277, i32* %arrayidx276, align 4
  %250 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %len278 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %250, i32 0, i32 3
  %251 = load i32, i32* %len278, align 4
  %252 = load i32, i32* %no_bits, align 4
  %add279 = add nsw i32 %252, %251
  store i32 %add279, i32* %no_bits, align 4
  %253 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %incdec.ptr280 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %253, i32 1
  store %struct.syntaxelement* %incdec.ptr280, %struct.syntaxelement** %currSE, align 8
  %254 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %currSEnr281 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %254, i32 0, i32 0
  %255 = load i32, i32* %currSEnr281, align 4
  %inc282 = add nsw i32 %255, 1
  store i32 %inc282, i32* %currSEnr281, align 4
  br label %for.inc.283

for.inc.283:                                      ; preds = %if.end.273
  %256 = load i32, i32* %k, align 4
  %dec284 = add nsw i32 %256, -1
  store i32 %dec284, i32* %k, align 4
  br label %for.cond.235

for.end.285:                                      ; preds = %for.cond.235
  %257 = load i32, i32* %numcoeff, align 4
  %258 = load i32, i32* %max_coeff_num, align 4
  %cmp286 = icmp slt i32 %257, %258
  br i1 %cmp286, label %if.then.287, label %if.end.307

if.then.287:                                      ; preds = %for.end.285
  %259 = load i32, i32* %dptype, align 4
  %260 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %type288 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %260, i32 0, i32 0
  store i32 %259, i32* %type288, align 4
  %261 = load i32, i32* %totzeros, align 4
  %262 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %value1289 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %262, i32 0, i32 1
  store i32 %261, i32* %value1289, align 4
  %263 = load i32, i32* %numcoeff, align 4
  %sub290 = sub nsw i32 %263, 1
  store i32 %sub290, i32* %vlcnum, align 4
  %264 = load i32, i32* %vlcnum, align 4
  %265 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %len291 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %265, i32 0, i32 3
  store i32 %264, i32* %len291, align 4
  %266 = load i32, i32* %cdc, align 4
  %tobool292 = icmp ne i32 %266, 0
  br i1 %tobool292, label %if.else.295, label %if.then.293

if.then.293:                                      ; preds = %if.then.287
  %267 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %268 = load %struct.datapartition*, %struct.datapartition** %dataPart, align 8
  %call294 = call i32 @writeSyntaxElement_TotalZeros(%struct.syntaxelement* %267, %struct.datapartition* %268)
  br label %if.end.297

if.else.295:                                      ; preds = %if.then.287
  %269 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %270 = load %struct.datapartition*, %struct.datapartition** %dataPart, align 8
  %call296 = call i32 @writeSyntaxElement_TotalZerosChromaDC(%struct.syntaxelement* %269, %struct.datapartition* %270)
  br label %if.end.297

if.end.297:                                       ; preds = %if.else.295, %if.then.293
  %271 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %len298 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %271, i32 0, i32 3
  %272 = load i32, i32* %len298, align 4
  %273 = load i32, i32* %bitcounttype, align 4
  %idxprom299 = sext i32 %273 to i64
  %274 = load i32*, i32** %bitCount, align 8
  %arrayidx300 = getelementptr inbounds i32, i32* %274, i64 %idxprom299
  %275 = load i32, i32* %arrayidx300, align 4
  %add301 = add nsw i32 %275, %272
  store i32 %add301, i32* %arrayidx300, align 4
  %276 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %len302 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %276, i32 0, i32 3
  %277 = load i32, i32* %len302, align 4
  %278 = load i32, i32* %no_bits, align 4
  %add303 = add nsw i32 %278, %277
  store i32 %add303, i32* %no_bits, align 4
  %279 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %incdec.ptr304 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %279, i32 1
  store %struct.syntaxelement* %incdec.ptr304, %struct.syntaxelement** %currSE, align 8
  %280 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %currSEnr305 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %280, i32 0, i32 0
  %281 = load i32, i32* %currSEnr305, align 4
  %inc306 = add nsw i32 %281, 1
  store i32 %inc306, i32* %currSEnr305, align 4
  br label %if.end.307

if.end.307:                                       ; preds = %if.end.297, %for.end.285
  %282 = load i32, i32* %totzeros, align 4
  store i32 %282, i32* %zerosleft, align 4
  %283 = load i32, i32* %numcoeff, align 4
  store i32 %283, i32* %numcoef, align 4
  %284 = load i32, i32* %lastcoeff, align 4
  store i32 %284, i32* %k, align 4
  br label %for.cond.308

for.cond.308:                                     ; preds = %for.inc.342, %if.end.307
  %285 = load i32, i32* %k, align 4
  %cmp309 = icmp sge i32 %285, 0
  br i1 %cmp309, label %for.body.310, label %for.end.344

for.body.310:                                     ; preds = %for.cond.308
  %286 = load i32, i32* %k, align 4
  %idxprom311 = sext i32 %286 to i64
  %287 = load i32*, i32** %pRun, align 8
  %arrayidx312 = getelementptr inbounds i32, i32* %287, i64 %idxprom311
  %288 = load i32, i32* %arrayidx312, align 4
  store i32 %288, i32* %run, align 4
  %289 = load i32, i32* %run, align 4
  %290 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %value1313 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %290, i32 0, i32 1
  store i32 %289, i32* %value1313, align 4
  %291 = load i32, i32* %dptype, align 4
  %292 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %type314 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %292, i32 0, i32 0
  store i32 %291, i32* %type314, align 4
  %293 = load i32, i32* %numcoeff, align 4
  %cmp315 = icmp sle i32 %293, 1
  br i1 %cmp315, label %if.then.318, label %lor.lhs.false.316

lor.lhs.false.316:                                ; preds = %for.body.310
  %294 = load i32, i32* %zerosleft, align 4
  %tobool317 = icmp ne i32 %294, 0
  br i1 %tobool317, label %if.end.319, label %if.then.318

if.then.318:                                      ; preds = %lor.lhs.false.316, %for.body.310
  br label %for.end.344

if.end.319:                                       ; preds = %lor.lhs.false.316
  %295 = load i32, i32* %numcoef, align 4
  %cmp320 = icmp sgt i32 %295, 1
  br i1 %cmp320, label %land.lhs.true.321, label %if.end.341

land.lhs.true.321:                                ; preds = %if.end.319
  %296 = load i32, i32* %zerosleft, align 4
  %tobool322 = icmp ne i32 %296, 0
  br i1 %tobool322, label %if.then.323, label %if.end.341

if.then.323:                                      ; preds = %land.lhs.true.321
  %297 = load i32, i32* %zerosleft, align 4
  %sub324 = sub nsw i32 %297, 1
  store i32 %sub324, i32* %vlcnum, align 4
  %298 = load i32, i32* %vlcnum, align 4
  %cmp325 = icmp sgt i32 %298, 6
  br i1 %cmp325, label %if.then.326, label %if.end.327

if.then.326:                                      ; preds = %if.then.323
  store i32 6, i32* %vlcnum, align 4
  br label %if.end.327

if.end.327:                                       ; preds = %if.then.326, %if.then.323
  %299 = load i32, i32* %vlcnum, align 4
  %300 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %len328 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %300, i32 0, i32 3
  store i32 %299, i32* %len328, align 4
  %301 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %302 = load %struct.datapartition*, %struct.datapartition** %dataPart, align 8
  %call329 = call i32 @writeSyntaxElement_Run(%struct.syntaxelement* %301, %struct.datapartition* %302)
  %303 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %len330 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %303, i32 0, i32 3
  %304 = load i32, i32* %len330, align 4
  %305 = load i32, i32* %bitcounttype, align 4
  %idxprom331 = sext i32 %305 to i64
  %306 = load i32*, i32** %bitCount, align 8
  %arrayidx332 = getelementptr inbounds i32, i32* %306, i64 %idxprom331
  %307 = load i32, i32* %arrayidx332, align 4
  %add333 = add nsw i32 %307, %304
  store i32 %add333, i32* %arrayidx332, align 4
  %308 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %len334 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %308, i32 0, i32 3
  %309 = load i32, i32* %len334, align 4
  %310 = load i32, i32* %no_bits, align 4
  %add335 = add nsw i32 %310, %309
  store i32 %add335, i32* %no_bits, align 4
  %311 = load i32, i32* %run, align 4
  %312 = load i32, i32* %zerosleft, align 4
  %sub336 = sub nsw i32 %312, %311
  store i32 %sub336, i32* %zerosleft, align 4
  %313 = load i32, i32* %numcoef, align 4
  %dec337 = add nsw i32 %313, -1
  store i32 %dec337, i32* %numcoef, align 4
  %314 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %incdec.ptr338 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %314, i32 1
  store %struct.syntaxelement* %incdec.ptr338, %struct.syntaxelement** %currSE, align 8
  %315 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %currSEnr339 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %315, i32 0, i32 0
  %316 = load i32, i32* %currSEnr339, align 4
  %inc340 = add nsw i32 %316, 1
  store i32 %inc340, i32* %currSEnr339, align 4
  br label %if.end.341

if.end.341:                                       ; preds = %if.end.327, %land.lhs.true.321, %if.end.319
  br label %for.inc.342

for.inc.342:                                      ; preds = %if.end.341
  %317 = load i32, i32* %k, align 4
  %dec343 = add nsw i32 %317, -1
  store i32 %dec343, i32* %k, align 4
  br label %for.cond.308

for.end.344:                                      ; preds = %if.then.318, %for.cond.308
  br label %if.end.345

if.end.345:                                       ; preds = %for.end.344, %if.end.190
  %318 = load i32, i32* %no_bits, align 4
  store i32 %318, i32* %retval
  br label %return

return:                                           ; preds = %if.end.345, %if.then.189
  %319 = load i32, i32* %retval
  ret i32 %319
}

declare void @levrun_linfo_c2x2(i32, i32, i32*, i32*) #1

declare void @writeRunLevel_CABAC(%struct.syntaxelement*, %struct.EncodingEnvironment*) #1

declare void @levrun_linfo_inter(i32, i32, i32*, i32*) #1

; Function Attrs: nounwind uwtable
define i32 @writeLumaCoeff4x4_CABAC(i32 %b8, i32 %b4, i32 %intra4x4mode) #0 {
entry:
  %b8.addr = alloca i32, align 4
  %b4.addr = alloca i32, align 4
  %intra4x4mode.addr = alloca i32, align 4
  %rate = alloca i32, align 4
  %currMB = alloca %struct.macroblock*, align 8
  %currSE = alloca %struct.syntaxelement*, align 8
  %currSlice = alloca %struct.Slice*, align 8
  %partMap = alloca i32*, align 8
  %bitCount = alloca i32*, align 8
  %dataPart = alloca %struct.datapartition*, align 8
  %level = alloca i32, align 4
  %run = alloca i32, align 4
  %k = alloca i32, align 4
  %ACLevel = alloca i32*, align 8
  %ACRun = alloca i32*, align 8
  store i32 %b8, i32* %b8.addr, align 4
  store i32 %b4, i32* %b4.addr, align 4
  store i32 %intra4x4mode, i32* %intra4x4mode.addr, align 4
  store i32 0, i32* %rate, align 4
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i32 0, i32 3
  %1 = load i32, i32* %current_mb_nr, align 4
  %idxprom = sext i32 %1 to i64
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 51
  %3 = load %struct.macroblock*, %struct.macroblock** %mb_data, align 8
  %arrayidx = getelementptr inbounds %struct.macroblock, %struct.macroblock* %3, i64 %idxprom
  store %struct.macroblock* %arrayidx, %struct.macroblock** %currMB, align 8
  %4 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %currSEnr = getelementptr inbounds %struct.macroblock, %struct.macroblock* %4, i32 0, i32 0
  %5 = load i32, i32* %currSEnr, align 4
  %idxprom1 = sext i32 %5 to i64
  %6 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %MB_SyntaxElements = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %6, i32 0, i32 52
  %arrayidx2 = getelementptr inbounds [1200 x %struct.syntaxelement], [1200 x %struct.syntaxelement]* %MB_SyntaxElements, i32 0, i64 %idxprom1
  store %struct.syntaxelement* %arrayidx2, %struct.syntaxelement** %currSE, align 8
  %7 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %currentSlice = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %7, i32 0, i32 50
  %8 = load %struct.Slice*, %struct.Slice** %currentSlice, align 8
  store %struct.Slice* %8, %struct.Slice** %currSlice, align 8
  %9 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %partition_mode = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %9, i32 0, i32 61
  %10 = load i32, i32* %partition_mode, align 4
  %idxprom3 = sext i32 %10 to i64
  %arrayidx4 = getelementptr inbounds [2 x i32*], [2 x i32*]* @assignSE2partition, i32 0, i64 %idxprom3
  %11 = load i32*, i32** %arrayidx4, align 8
  store i32* %11, i32** %partMap, align 8
  %12 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %bitcounter = getelementptr inbounds %struct.macroblock, %struct.macroblock* %12, i32 0, i32 5
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %bitcounter, i32 0, i32 0
  store i32* %arraydecay, i32** %bitCount, align 8
  %13 = load i32, i32* %b4.addr, align 4
  %idxprom5 = sext i32 %13 to i64
  %14 = load i32, i32* %b8.addr, align 4
  %idxprom6 = sext i32 %14 to i64
  %15 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %cofAC = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %15, i32 0, i32 47
  %16 = load i32****, i32***** %cofAC, align 8
  %arrayidx7 = getelementptr inbounds i32***, i32**** %16, i64 %idxprom6
  %17 = load i32***, i32**** %arrayidx7, align 8
  %arrayidx8 = getelementptr inbounds i32**, i32*** %17, i64 %idxprom5
  %18 = load i32**, i32*** %arrayidx8, align 8
  %arrayidx9 = getelementptr inbounds i32*, i32** %18, i64 0
  %19 = load i32*, i32** %arrayidx9, align 8
  store i32* %19, i32** %ACLevel, align 8
  %20 = load i32, i32* %b4.addr, align 4
  %idxprom10 = sext i32 %20 to i64
  %21 = load i32, i32* %b8.addr, align 4
  %idxprom11 = sext i32 %21 to i64
  %22 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %cofAC12 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %22, i32 0, i32 47
  %23 = load i32****, i32***** %cofAC12, align 8
  %arrayidx13 = getelementptr inbounds i32***, i32**** %23, i64 %idxprom11
  %24 = load i32***, i32**** %arrayidx13, align 8
  %arrayidx14 = getelementptr inbounds i32**, i32*** %24, i64 %idxprom10
  %25 = load i32**, i32*** %arrayidx14, align 8
  %arrayidx15 = getelementptr inbounds i32*, i32** %25, i64 1
  %26 = load i32*, i32** %arrayidx15, align 8
  store i32* %26, i32** %ACRun, align 8
  %27 = load i32, i32* %b8.addr, align 4
  %and = and i32 %27, 1
  %cmp = icmp eq i32 %and, 0
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %28 = load i32, i32* %b4.addr, align 4
  %and16 = and i32 %28, 1
  %cmp17 = icmp eq i32 %and16, 0
  %cond = select i1 %cmp17, i32 0, i32 1
  br label %cond.end

cond.false:                                       ; preds = %entry
  %29 = load i32, i32* %b4.addr, align 4
  %and18 = and i32 %29, 1
  %cmp19 = icmp eq i32 %and18, 0
  %cond20 = select i1 %cmp19, i32 2, i32 3
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond21 = phi i32 [ %cond, %cond.true ], [ %cond20, %cond.false ]
  %30 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %subblock_x = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %30, i32 0, i32 18
  store i32 %cond21, i32* %subblock_x, align 4
  %31 = load i32, i32* %b8.addr, align 4
  %cmp22 = icmp slt i32 %31, 2
  br i1 %cmp22, label %cond.true.23, label %cond.false.26

cond.true.23:                                     ; preds = %cond.end
  %32 = load i32, i32* %b4.addr, align 4
  %cmp24 = icmp slt i32 %32, 2
  %cond25 = select i1 %cmp24, i32 0, i32 1
  br label %cond.end.29

cond.false.26:                                    ; preds = %cond.end
  %33 = load i32, i32* %b4.addr, align 4
  %cmp27 = icmp slt i32 %33, 2
  %cond28 = select i1 %cmp27, i32 2, i32 3
  br label %cond.end.29

cond.end.29:                                      ; preds = %cond.false.26, %cond.true.23
  %cond30 = phi i32 [ %cond25, %cond.true.23 ], [ %cond28, %cond.false.26 ]
  %34 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %subblock_y = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %34, i32 0, i32 19
  store i32 %cond30, i32* %subblock_y, align 4
  store i32 1, i32* %level, align 4
  store i32 0, i32* %k, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %cond.end.29
  %35 = load i32, i32* %k, align 4
  %cmp31 = icmp sle i32 %35, 16
  br i1 %cmp31, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %for.cond
  %36 = load i32, i32* %level, align 4
  %cmp32 = icmp ne i32 %36, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %37 = phi i1 [ false, %for.cond ], [ %cmp32, %land.rhs ]
  br i1 %37, label %for.body, label %for.end

for.body:                                         ; preds = %land.end
  %38 = load i32, i32* %k, align 4
  %idxprom33 = sext i32 %38 to i64
  %39 = load i32*, i32** %ACLevel, align 8
  %arrayidx34 = getelementptr inbounds i32, i32* %39, i64 %idxprom33
  %40 = load i32, i32* %arrayidx34, align 4
  %41 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %value1 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %41, i32 0, i32 1
  store i32 %40, i32* %value1, align 4
  store i32 %40, i32* %level, align 4
  %42 = load i32, i32* %k, align 4
  %idxprom35 = sext i32 %42 to i64
  %43 = load i32*, i32** %ACRun, align 8
  %arrayidx36 = getelementptr inbounds i32, i32* %43, i64 %idxprom35
  %44 = load i32, i32* %arrayidx36, align 4
  %45 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %value2 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %45, i32 0, i32 2
  store i32 %44, i32* %value2, align 4
  store i32 %44, i32* %run, align 4
  %46 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %writing = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %46, i32 0, i32 9
  store void (%struct.syntaxelement*, %struct.EncodingEnvironment*)* @writeRunLevel_CABAC, void (%struct.syntaxelement*, %struct.EncodingEnvironment*)** %writing, align 8
  %47 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %context = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %47, i32 0, i32 6
  store i32 5, i32* %context, align 4
  %48 = load i32, i32* %k, align 4
  %cmp37 = icmp eq i32 %48, 0
  br i1 %cmp37, label %cond.true.38, label %cond.false.40

cond.true.38:                                     ; preds = %for.body
  %49 = load i32, i32* %intra4x4mode.addr, align 4
  %tobool = icmp ne i32 %49, 0
  %cond39 = select i1 %tobool, i32 7, i32 12
  br label %cond.end.43

cond.false.40:                                    ; preds = %for.body
  %50 = load i32, i32* %intra4x4mode.addr, align 4
  %tobool41 = icmp ne i32 %50, 0
  %cond42 = select i1 %tobool41, i32 9, i32 14
  br label %cond.end.43

cond.end.43:                                      ; preds = %cond.false.40, %cond.true.38
  %cond44 = phi i32 [ %cond39, %cond.true.38 ], [ %cond42, %cond.false.40 ]
  %51 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %type = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %51, i32 0, i32 0
  store i32 %cond44, i32* %type, align 4
  %52 = load i32, i32* %intra4x4mode.addr, align 4
  %53 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %is_intra_block = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %53, i32 0, i32 20
  store i32 %52, i32* %is_intra_block, align 4
  %54 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %type45 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %54, i32 0, i32 0
  %55 = load i32, i32* %type45, align 4
  %idxprom46 = sext i32 %55 to i64
  %56 = load i32*, i32** %partMap, align 8
  %arrayidx47 = getelementptr inbounds i32, i32* %56, i64 %idxprom46
  %57 = load i32, i32* %arrayidx47, align 4
  %idxprom48 = sext i32 %57 to i64
  %58 = load %struct.Slice*, %struct.Slice** %currSlice, align 8
  %partArr = getelementptr inbounds %struct.Slice, %struct.Slice* %58, i32 0, i32 6
  %59 = load %struct.datapartition*, %struct.datapartition** %partArr, align 8
  %arrayidx49 = getelementptr inbounds %struct.datapartition, %struct.datapartition* %59, i64 %idxprom48
  store %struct.datapartition* %arrayidx49, %struct.datapartition** %dataPart, align 8
  %60 = load %struct.datapartition*, %struct.datapartition** %dataPart, align 8
  %writeSyntaxElement = getelementptr inbounds %struct.datapartition, %struct.datapartition* %60, i32 0, i32 2
  %61 = load i32 (%struct.syntaxelement*, %struct.datapartition*)*, i32 (%struct.syntaxelement*, %struct.datapartition*)** %writeSyntaxElement, align 8
  %62 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %63 = load %struct.datapartition*, %struct.datapartition** %dataPart, align 8
  %call = call i32 %61(%struct.syntaxelement* %62, %struct.datapartition* %63)
  %64 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %len = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %64, i32 0, i32 3
  %65 = load i32, i32* %len, align 4
  %66 = load i32*, i32** %bitCount, align 8
  %arrayidx50 = getelementptr inbounds i32, i32* %66, i64 5
  %67 = load i32, i32* %arrayidx50, align 4
  %add = add nsw i32 %67, %65
  store i32 %add, i32* %arrayidx50, align 4
  %68 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %len51 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %68, i32 0, i32 3
  %69 = load i32, i32* %len51, align 4
  %70 = load i32, i32* %rate, align 4
  %add52 = add nsw i32 %70, %69
  store i32 %add52, i32* %rate, align 4
  %71 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %incdec.ptr = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %71, i32 1
  store %struct.syntaxelement* %incdec.ptr, %struct.syntaxelement** %currSE, align 8
  %72 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %currSEnr53 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %72, i32 0, i32 0
  %73 = load i32, i32* %currSEnr53, align 4
  %inc = add nsw i32 %73, 1
  store i32 %inc, i32* %currSEnr53, align 4
  br label %for.inc

for.inc:                                          ; preds = %cond.end.43
  %74 = load i32, i32* %k, align 4
  %inc54 = add nsw i32 %74, 1
  store i32 %inc54, i32* %k, align 4
  br label %for.cond

for.end:                                          ; preds = %land.end
  %75 = load i32, i32* %rate, align 4
  ret i32 %75
}

; Function Attrs: nounwind uwtable
define i32 @writeLumaCoeff8x8_CABAC(i32 %b8, i32 %intra_mode) #0 {
entry:
  %b8.addr = alloca i32, align 4
  %intra_mode.addr = alloca i32, align 4
  %rate = alloca i32, align 4
  %currMB = alloca %struct.macroblock*, align 8
  %currSE = alloca %struct.syntaxelement*, align 8
  %currSlice = alloca %struct.Slice*, align 8
  %partMap = alloca i32*, align 8
  %bitCount = alloca i32*, align 8
  %dataPart = alloca %struct.datapartition*, align 8
  %level = alloca i32, align 4
  %run = alloca i32, align 4
  %k = alloca i32, align 4
  %ACLevel = alloca i32*, align 8
  %ACRun = alloca i32*, align 8
  store i32 %b8, i32* %b8.addr, align 4
  store i32 %intra_mode, i32* %intra_mode.addr, align 4
  store i32 0, i32* %rate, align 4
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i32 0, i32 3
  %1 = load i32, i32* %current_mb_nr, align 4
  %idxprom = sext i32 %1 to i64
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 51
  %3 = load %struct.macroblock*, %struct.macroblock** %mb_data, align 8
  %arrayidx = getelementptr inbounds %struct.macroblock, %struct.macroblock* %3, i64 %idxprom
  store %struct.macroblock* %arrayidx, %struct.macroblock** %currMB, align 8
  %4 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %currSEnr = getelementptr inbounds %struct.macroblock, %struct.macroblock* %4, i32 0, i32 0
  %5 = load i32, i32* %currSEnr, align 4
  %idxprom1 = sext i32 %5 to i64
  %6 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %MB_SyntaxElements = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %6, i32 0, i32 52
  %arrayidx2 = getelementptr inbounds [1200 x %struct.syntaxelement], [1200 x %struct.syntaxelement]* %MB_SyntaxElements, i32 0, i64 %idxprom1
  store %struct.syntaxelement* %arrayidx2, %struct.syntaxelement** %currSE, align 8
  %7 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %currentSlice = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %7, i32 0, i32 50
  %8 = load %struct.Slice*, %struct.Slice** %currentSlice, align 8
  store %struct.Slice* %8, %struct.Slice** %currSlice, align 8
  %9 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %partition_mode = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %9, i32 0, i32 61
  %10 = load i32, i32* %partition_mode, align 4
  %idxprom3 = sext i32 %10 to i64
  %arrayidx4 = getelementptr inbounds [2 x i32*], [2 x i32*]* @assignSE2partition, i32 0, i64 %idxprom3
  %11 = load i32*, i32** %arrayidx4, align 8
  store i32* %11, i32** %partMap, align 8
  %12 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %bitcounter = getelementptr inbounds %struct.macroblock, %struct.macroblock* %12, i32 0, i32 5
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %bitcounter, i32 0, i32 0
  store i32* %arraydecay, i32** %bitCount, align 8
  %13 = load i32, i32* %b8.addr, align 4
  %idxprom5 = sext i32 %13 to i64
  %14 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %cofAC = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %14, i32 0, i32 47
  %15 = load i32****, i32***** %cofAC, align 8
  %arrayidx6 = getelementptr inbounds i32***, i32**** %15, i64 %idxprom5
  %16 = load i32***, i32**** %arrayidx6, align 8
  %arrayidx7 = getelementptr inbounds i32**, i32*** %16, i64 0
  %17 = load i32**, i32*** %arrayidx7, align 8
  %arrayidx8 = getelementptr inbounds i32*, i32** %17, i64 0
  %18 = load i32*, i32** %arrayidx8, align 8
  store i32* %18, i32** %ACLevel, align 8
  %19 = load i32, i32* %b8.addr, align 4
  %idxprom9 = sext i32 %19 to i64
  %20 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %cofAC10 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %20, i32 0, i32 47
  %21 = load i32****, i32***** %cofAC10, align 8
  %arrayidx11 = getelementptr inbounds i32***, i32**** %21, i64 %idxprom9
  %22 = load i32***, i32**** %arrayidx11, align 8
  %arrayidx12 = getelementptr inbounds i32**, i32*** %22, i64 0
  %23 = load i32**, i32*** %arrayidx12, align 8
  %arrayidx13 = getelementptr inbounds i32*, i32** %23, i64 1
  %24 = load i32*, i32** %arrayidx13, align 8
  store i32* %24, i32** %ACRun, align 8
  %25 = load i32, i32* %b8.addr, align 4
  %and = and i32 %25, 1
  %cmp = icmp eq i32 %and, 0
  %cond = select i1 %cmp, i32 0, i32 2
  %26 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %subblock_x = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %26, i32 0, i32 18
  store i32 %cond, i32* %subblock_x, align 4
  %27 = load i32, i32* %b8.addr, align 4
  %cmp14 = icmp slt i32 %27, 2
  %cond15 = select i1 %cmp14, i32 0, i32 2
  %28 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %subblock_y = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %28, i32 0, i32 19
  store i32 %cond15, i32* %subblock_y, align 4
  store i32 1, i32* %level, align 4
  store i32 0, i32* %k, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %29 = load i32, i32* %k, align 4
  %cmp16 = icmp sle i32 %29, 64
  br i1 %cmp16, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %for.cond
  %30 = load i32, i32* %level, align 4
  %cmp17 = icmp ne i32 %30, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %31 = phi i1 [ false, %for.cond ], [ %cmp17, %land.rhs ]
  br i1 %31, label %for.body, label %for.end

for.body:                                         ; preds = %land.end
  %32 = load i32, i32* %k, align 4
  %idxprom18 = sext i32 %32 to i64
  %33 = load i32*, i32** %ACLevel, align 8
  %arrayidx19 = getelementptr inbounds i32, i32* %33, i64 %idxprom18
  %34 = load i32, i32* %arrayidx19, align 4
  %35 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %value1 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %35, i32 0, i32 1
  store i32 %34, i32* %value1, align 4
  store i32 %34, i32* %level, align 4
  %36 = load i32, i32* %k, align 4
  %idxprom20 = sext i32 %36 to i64
  %37 = load i32*, i32** %ACRun, align 8
  %arrayidx21 = getelementptr inbounds i32, i32* %37, i64 %idxprom20
  %38 = load i32, i32* %arrayidx21, align 4
  %39 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %value2 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %39, i32 0, i32 2
  store i32 %38, i32* %value2, align 4
  store i32 %38, i32* %run, align 4
  %40 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %writing = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %40, i32 0, i32 9
  store void (%struct.syntaxelement*, %struct.EncodingEnvironment*)* @writeRunLevel_CABAC, void (%struct.syntaxelement*, %struct.EncodingEnvironment*)** %writing, align 8
  %41 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %context = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %41, i32 0, i32 6
  store i32 2, i32* %context, align 4
  %42 = load i32, i32* %k, align 4
  %cmp22 = icmp eq i32 %42, 0
  br i1 %cmp22, label %cond.true, label %cond.false

cond.true:                                        ; preds = %for.body
  %43 = load i32, i32* %intra_mode.addr, align 4
  %tobool = icmp ne i32 %43, 0
  %cond23 = select i1 %tobool, i32 7, i32 12
  br label %cond.end

cond.false:                                       ; preds = %for.body
  %44 = load i32, i32* %intra_mode.addr, align 4
  %tobool24 = icmp ne i32 %44, 0
  %cond25 = select i1 %tobool24, i32 9, i32 14
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond26 = phi i32 [ %cond23, %cond.true ], [ %cond25, %cond.false ]
  %45 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %type = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %45, i32 0, i32 0
  store i32 %cond26, i32* %type, align 4
  %46 = load i32, i32* %intra_mode.addr, align 4
  %47 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %is_intra_block = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %47, i32 0, i32 20
  store i32 %46, i32* %is_intra_block, align 4
  %48 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type27 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %48, i32 0, i32 6
  %49 = load i32, i32* %type27, align 4
  %cmp28 = icmp ne i32 %49, 1
  br i1 %cmp28, label %if.then, label %if.else

if.then:                                          ; preds = %cond.end
  %50 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %type29 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %50, i32 0, i32 0
  %51 = load i32, i32* %type29, align 4
  %idxprom30 = sext i32 %51 to i64
  %52 = load i32*, i32** %partMap, align 8
  %arrayidx31 = getelementptr inbounds i32, i32* %52, i64 %idxprom30
  %53 = load i32, i32* %arrayidx31, align 4
  %idxprom32 = sext i32 %53 to i64
  %54 = load %struct.Slice*, %struct.Slice** %currSlice, align 8
  %partArr = getelementptr inbounds %struct.Slice, %struct.Slice* %54, i32 0, i32 6
  %55 = load %struct.datapartition*, %struct.datapartition** %partArr, align 8
  %arrayidx33 = getelementptr inbounds %struct.datapartition, %struct.datapartition* %55, i64 %idxprom32
  store %struct.datapartition* %arrayidx33, %struct.datapartition** %dataPart, align 8
  br label %if.end

if.else:                                          ; preds = %cond.end
  %56 = load i32*, i32** %partMap, align 8
  %arrayidx34 = getelementptr inbounds i32, i32* %56, i64 18
  %57 = load i32, i32* %arrayidx34, align 4
  %idxprom35 = sext i32 %57 to i64
  %58 = load %struct.Slice*, %struct.Slice** %currSlice, align 8
  %partArr36 = getelementptr inbounds %struct.Slice, %struct.Slice* %58, i32 0, i32 6
  %59 = load %struct.datapartition*, %struct.datapartition** %partArr36, align 8
  %arrayidx37 = getelementptr inbounds %struct.datapartition, %struct.datapartition* %59, i64 %idxprom35
  store %struct.datapartition* %arrayidx37, %struct.datapartition** %dataPart, align 8
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %60 = load %struct.datapartition*, %struct.datapartition** %dataPart, align 8
  %writeSyntaxElement = getelementptr inbounds %struct.datapartition, %struct.datapartition* %60, i32 0, i32 2
  %61 = load i32 (%struct.syntaxelement*, %struct.datapartition*)*, i32 (%struct.syntaxelement*, %struct.datapartition*)** %writeSyntaxElement, align 8
  %62 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %63 = load %struct.datapartition*, %struct.datapartition** %dataPart, align 8
  %call = call i32 %61(%struct.syntaxelement* %62, %struct.datapartition* %63)
  %64 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %len = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %64, i32 0, i32 3
  %65 = load i32, i32* %len, align 4
  %66 = load i32*, i32** %bitCount, align 8
  %arrayidx38 = getelementptr inbounds i32, i32* %66, i64 5
  %67 = load i32, i32* %arrayidx38, align 4
  %add = add nsw i32 %67, %65
  store i32 %add, i32* %arrayidx38, align 4
  %68 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %len39 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %68, i32 0, i32 3
  %69 = load i32, i32* %len39, align 4
  %70 = load i32, i32* %rate, align 4
  %add40 = add nsw i32 %70, %69
  store i32 %add40, i32* %rate, align 4
  %71 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %incdec.ptr = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %71, i32 1
  store %struct.syntaxelement* %incdec.ptr, %struct.syntaxelement** %currSE, align 8
  %72 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %currSEnr41 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %72, i32 0, i32 0
  %73 = load i32, i32* %currSEnr41, align 4
  %inc = add nsw i32 %73, 1
  store i32 %inc, i32* %currSEnr41, align 4
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %74 = load i32, i32* %k, align 4
  %inc42 = add nsw i32 %74, 1
  store i32 %inc42, i32* %k, align 4
  br label %for.cond

for.end:                                          ; preds = %land.end
  %75 = load i32, i32* %rate, align 4
  ret i32 %75
}

; Function Attrs: nounwind uwtable
define i32 @writeLumaCoeff8x8(i32 %block8x8, i32 %block_mode, i32 %transform_size_flag) #0 {
entry:
  %block8x8.addr = alloca i32, align 4
  %block_mode.addr = alloca i32, align 4
  %transform_size_flag.addr = alloca i32, align 4
  %block4x4 = alloca i32, align 4
  %rate = alloca i32, align 4
  %intra4x4mode = alloca i32, align 4
  store i32 %block8x8, i32* %block8x8.addr, align 4
  store i32 %block_mode, i32* %block_mode.addr, align 4
  store i32 %transform_size_flag, i32* %transform_size_flag.addr, align 4
  store i32 0, i32* %rate, align 4
  %0 = load i32, i32* %block_mode.addr, align 4
  %cmp = icmp eq i32 %0, 11
  %conv = zext i1 %cmp to i32
  store i32 %conv, i32* %intra4x4mode, align 4
  %1 = load i32, i32* %block_mode.addr, align 4
  %cmp1 = icmp eq i32 %1, 13
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %2 = load i32, i32* %transform_size_flag.addr, align 4
  %tobool = icmp ne i32 %2, 0
  br i1 %tobool, label %lor.lhs.false, label %if.then.5

lor.lhs.false:                                    ; preds = %if.end
  %3 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %symbol_mode = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %3, i32 0, i32 59
  %4 = load i32, i32* %symbol_mode, align 4
  %cmp3 = icmp eq i32 %4, 0
  br i1 %cmp3, label %if.then.5, label %if.else.18

if.then.5:                                        ; preds = %lor.lhs.false, %if.end
  store i32 0, i32* %block4x4, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then.5
  %5 = load i32, i32* %block4x4, align 4
  %cmp6 = icmp slt i32 %5, 4
  br i1 %cmp6, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %6 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %symbol_mode8 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %6, i32 0, i32 59
  %7 = load i32, i32* %symbol_mode8, align 4
  %cmp9 = icmp eq i32 %7, 0
  br i1 %cmp9, label %if.then.11, label %if.else

if.then.11:                                       ; preds = %for.body
  %8 = load i32, i32* %block8x8.addr, align 4
  %9 = load i32, i32* %block4x4, align 4
  %10 = load i32, i32* %transform_size_flag.addr, align 4
  %tobool12 = icmp ne i32 %10, 0
  br i1 %tobool12, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then.11
  %11 = load i32, i32* %block_mode.addr, align 4
  %cmp13 = icmp eq i32 %11, 13
  %conv14 = zext i1 %cmp13 to i32
  br label %cond.end

cond.false:                                       ; preds = %if.then.11
  %12 = load i32, i32* %intra4x4mode, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv14, %cond.true ], [ %12, %cond.false ]
  %call = call i32 @writeCoeff4x4_CAVLC(i32 0, i32 %8, i32 %9, i32 %cond)
  %13 = load i32, i32* %rate, align 4
  %add = add nsw i32 %13, %call
  store i32 %add, i32* %rate, align 4
  br label %if.end.17

if.else:                                          ; preds = %for.body
  %14 = load i32, i32* %block8x8.addr, align 4
  %15 = load i32, i32* %block4x4, align 4
  %16 = load i32, i32* %intra4x4mode, align 4
  %call15 = call i32 @writeLumaCoeff4x4_CABAC(i32 %14, i32 %15, i32 %16)
  %17 = load i32, i32* %rate, align 4
  %add16 = add nsw i32 %17, %call15
  store i32 %add16, i32* %rate, align 4
  br label %if.end.17

if.end.17:                                        ; preds = %if.else, %cond.end
  br label %for.inc

for.inc:                                          ; preds = %if.end.17
  %18 = load i32, i32* %block4x4, align 4
  %inc = add nsw i32 %18, 1
  store i32 %inc, i32* %block4x4, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end.28

if.else.18:                                       ; preds = %lor.lhs.false
  %19 = load i32, i32* %block_mode.addr, align 4
  %cmp19 = icmp eq i32 %19, 13
  br i1 %cmp19, label %if.then.21, label %if.else.24

if.then.21:                                       ; preds = %if.else.18
  %20 = load i32, i32* %block8x8.addr, align 4
  %call22 = call i32 @writeLumaCoeff8x8_CABAC(i32 %20, i32 1)
  %21 = load i32, i32* %rate, align 4
  %add23 = add nsw i32 %21, %call22
  store i32 %add23, i32* %rate, align 4
  br label %if.end.27

if.else.24:                                       ; preds = %if.else.18
  %22 = load i32, i32* %block8x8.addr, align 4
  %call25 = call i32 @writeLumaCoeff8x8_CABAC(i32 %22, i32 0)
  %23 = load i32, i32* %rate, align 4
  %add26 = add nsw i32 %23, %call25
  store i32 %add26, i32* %rate, align 4
  br label %if.end.27

if.end.27:                                        ; preds = %if.else.24, %if.then.21
  br label %if.end.28

if.end.28:                                        ; preds = %if.end.27, %for.end
  %24 = load i32, i32* %rate, align 4
  ret i32 %24
}

; Function Attrs: nounwind uwtable
define i32 @writeCBPandLumaCoeff() #0 {
entry:
  %mb_x = alloca i32, align 4
  %mb_y = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %level = alloca i32, align 4
  %run = alloca i32, align 4
  %rate = alloca i32, align 4
  %currMB = alloca %struct.macroblock*, align 8
  %bitCount = alloca i32*, align 8
  %currSE = alloca %struct.syntaxelement*, align 8
  %currSlice = alloca %struct.Slice*, align 8
  %partMap = alloca i32*, align 8
  %cbp = alloca i32, align 4
  %dataPart = alloca %struct.datapartition*, align 8
  %need_transform_size_flag = alloca i32, align 4
  %b8 = alloca i32, align 4
  %b4 = alloca i32, align 4
  %DCLevel = alloca i32*, align 8
  %DCRun = alloca i32*, align 8
  %ACLevel = alloca i32*, align 8
  %ACRun = alloca i32*, align 8
  store i32 0, i32* %rate, align 4
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i32 0, i32 3
  %1 = load i32, i32* %current_mb_nr, align 4
  %idxprom = sext i32 %1 to i64
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 51
  %3 = load %struct.macroblock*, %struct.macroblock** %mb_data, align 8
  %arrayidx = getelementptr inbounds %struct.macroblock, %struct.macroblock* %3, i64 %idxprom
  store %struct.macroblock* %arrayidx, %struct.macroblock** %currMB, align 8
  %4 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %bitcounter = getelementptr inbounds %struct.macroblock, %struct.macroblock* %4, i32 0, i32 5
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %bitcounter, i32 0, i32 0
  store i32* %arraydecay, i32** %bitCount, align 8
  %5 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %currSEnr = getelementptr inbounds %struct.macroblock, %struct.macroblock* %5, i32 0, i32 0
  %6 = load i32, i32* %currSEnr, align 4
  %idxprom1 = sext i32 %6 to i64
  %7 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %MB_SyntaxElements = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %7, i32 0, i32 52
  %arrayidx2 = getelementptr inbounds [1200 x %struct.syntaxelement], [1200 x %struct.syntaxelement]* %MB_SyntaxElements, i32 0, i64 %idxprom1
  store %struct.syntaxelement* %arrayidx2, %struct.syntaxelement** %currSE, align 8
  %8 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %currentSlice = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %8, i32 0, i32 50
  %9 = load %struct.Slice*, %struct.Slice** %currentSlice, align 8
  store %struct.Slice* %9, %struct.Slice** %currSlice, align 8
  %10 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %partition_mode = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %10, i32 0, i32 61
  %11 = load i32, i32* %partition_mode, align 4
  %idxprom3 = sext i32 %11 to i64
  %arrayidx4 = getelementptr inbounds [2 x i32*], [2 x i32*]* @assignSE2partition, i32 0, i64 %idxprom3
  %12 = load i32*, i32** %arrayidx4, align 8
  store i32* %12, i32** %partMap, align 8
  %13 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %cbp5 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %13, i32 0, i32 12
  %14 = load i32, i32* %cbp5, align 4
  store i32 %14, i32* %cbp, align 4
  %15 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %cofDC = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %15, i32 0, i32 48
  %16 = load i32***, i32**** %cofDC, align 8
  %arrayidx6 = getelementptr inbounds i32**, i32*** %16, i64 0
  %17 = load i32**, i32*** %arrayidx6, align 8
  %arrayidx7 = getelementptr inbounds i32*, i32** %17, i64 0
  %18 = load i32*, i32** %arrayidx7, align 8
  store i32* %18, i32** %DCLevel, align 8
  %19 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %cofDC8 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %19, i32 0, i32 48
  %20 = load i32***, i32**** %cofDC8, align 8
  %arrayidx9 = getelementptr inbounds i32**, i32*** %20, i64 0
  %21 = load i32**, i32*** %arrayidx9, align 8
  %arrayidx10 = getelementptr inbounds i32*, i32** %21, i64 1
  %22 = load i32*, i32** %arrayidx10, align 8
  store i32* %22, i32** %DCRun, align 8
  %23 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type = getelementptr inbounds %struct.macroblock, %struct.macroblock* %23, i32 0, i32 8
  %24 = load i32, i32* %mb_type, align 4
  %cmp = icmp eq i32 %24, 10
  br i1 %cmp, label %if.end.94, label %if.then

if.then:                                          ; preds = %entry
  %25 = load i32, i32* %cbp, align 4
  %26 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %value1 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %26, i32 0, i32 1
  store i32 %25, i32* %value1, align 4
  %27 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type11 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %27, i32 0, i32 8
  %28 = load i32, i32* %mb_type11, align 4
  %cmp12 = icmp eq i32 %28, 9
  br i1 %cmp12, label %if.then.18, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then
  %29 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type13 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %29, i32 0, i32 8
  %30 = load i32, i32* %mb_type13, align 4
  %cmp14 = icmp eq i32 %30, 12
  br i1 %cmp14, label %if.then.18, label %lor.lhs.false.15

lor.lhs.false.15:                                 ; preds = %lor.lhs.false
  %31 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type16 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %31, i32 0, i32 8
  %32 = load i32, i32* %mb_type16, align 4
  %cmp17 = icmp eq i32 %32, 13
  br i1 %cmp17, label %if.then.18, label %if.else

if.then.18:                                       ; preds = %lor.lhs.false.15, %lor.lhs.false, %if.then
  %33 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %symbol_mode = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %33, i32 0, i32 59
  %34 = load i32, i32* %symbol_mode, align 4
  %cmp19 = icmp eq i32 %34, 0
  br i1 %cmp19, label %if.then.20, label %if.end

if.then.20:                                       ; preds = %if.then.18
  %35 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %mapping = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %35, i32 0, i32 8
  store void (i32, i32, i32*, i32*)* @cbp_linfo_intra, void (i32, i32, i32*, i32*)** %mapping, align 8
  br label %if.end

if.end:                                           ; preds = %if.then.20, %if.then.18
  %36 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %type = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %36, i32 0, i32 0
  store i32 6, i32* %type, align 4
  br label %if.end.27

if.else:                                          ; preds = %lor.lhs.false.15
  %37 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %symbol_mode21 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %37, i32 0, i32 59
  %38 = load i32, i32* %symbol_mode21, align 4
  %cmp22 = icmp eq i32 %38, 0
  br i1 %cmp22, label %if.then.23, label %if.end.25

if.then.23:                                       ; preds = %if.else
  %39 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %mapping24 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %39, i32 0, i32 8
  store void (i32, i32, i32*, i32*)* @cbp_linfo_inter, void (i32, i32, i32*, i32*)** %mapping24, align 8
  br label %if.end.25

if.end.25:                                        ; preds = %if.then.23, %if.else
  %40 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %type26 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %40, i32 0, i32 0
  store i32 11, i32* %type26, align 4
  br label %if.end.27

if.end.27:                                        ; preds = %if.end.25, %if.end
  %41 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %symbol_mode28 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %41, i32 0, i32 59
  %42 = load i32, i32* %symbol_mode28, align 4
  %cmp29 = icmp eq i32 %42, 1
  br i1 %cmp29, label %if.then.30, label %if.end.31

if.then.30:                                       ; preds = %if.end.27
  %43 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %writing = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %43, i32 0, i32 9
  store void (%struct.syntaxelement*, %struct.EncodingEnvironment*)* @writeCBP_CABAC, void (%struct.syntaxelement*, %struct.EncodingEnvironment*)** %writing, align 8
  br label %if.end.31

if.end.31:                                        ; preds = %if.then.30, %if.end.27
  %44 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %type32 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %44, i32 0, i32 0
  %45 = load i32, i32* %type32, align 4
  %idxprom33 = sext i32 %45 to i64
  %46 = load i32*, i32** %partMap, align 8
  %arrayidx34 = getelementptr inbounds i32, i32* %46, i64 %idxprom33
  %47 = load i32, i32* %arrayidx34, align 4
  %idxprom35 = sext i32 %47 to i64
  %48 = load %struct.Slice*, %struct.Slice** %currSlice, align 8
  %partArr = getelementptr inbounds %struct.Slice, %struct.Slice* %48, i32 0, i32 6
  %49 = load %struct.datapartition*, %struct.datapartition** %partArr, align 8
  %arrayidx36 = getelementptr inbounds %struct.datapartition, %struct.datapartition* %49, i64 %idxprom35
  store %struct.datapartition* %arrayidx36, %struct.datapartition** %dataPart, align 8
  %50 = load %struct.datapartition*, %struct.datapartition** %dataPart, align 8
  %writeSyntaxElement = getelementptr inbounds %struct.datapartition, %struct.datapartition* %50, i32 0, i32 2
  %51 = load i32 (%struct.syntaxelement*, %struct.datapartition*)*, i32 (%struct.syntaxelement*, %struct.datapartition*)** %writeSyntaxElement, align 8
  %52 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %53 = load %struct.datapartition*, %struct.datapartition** %dataPart, align 8
  %call = call i32 %51(%struct.syntaxelement* %52, %struct.datapartition* %53)
  %54 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %len = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %54, i32 0, i32 3
  %55 = load i32, i32* %len, align 4
  %56 = load i32*, i32** %bitCount, align 8
  %arrayidx37 = getelementptr inbounds i32, i32* %56, i64 4
  %57 = load i32, i32* %arrayidx37, align 4
  %add = add nsw i32 %57, %55
  store i32 %add, i32* %arrayidx37, align 4
  %58 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %len38 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %58, i32 0, i32 3
  %59 = load i32, i32* %len38, align 4
  %60 = load i32, i32* %rate, align 4
  %add39 = add nsw i32 %60, %59
  store i32 %add39, i32* %rate, align 4
  %61 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %incdec.ptr = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %61, i32 1
  store %struct.syntaxelement* %incdec.ptr, %struct.syntaxelement** %currSE, align 8
  %62 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %currSEnr40 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %62, i32 0, i32 0
  %63 = load i32, i32* %currSEnr40, align 4
  %inc = add nsw i32 %63, 1
  store i32 %inc, i32* %currSEnr40, align 4
  %64 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type41 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %64, i32 0, i32 8
  %65 = load i32, i32* %mb_type41, align 4
  %cmp42 = icmp sge i32 %65, 1
  br i1 %cmp42, label %land.lhs.true, label %lor.lhs.false.45

land.lhs.true:                                    ; preds = %if.end.31
  %66 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type43 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %66, i32 0, i32 8
  %67 = load i32, i32* %mb_type43, align 4
  %cmp44 = icmp sle i32 %67, 3
  br i1 %cmp44, label %land.lhs.true.54, label %lor.lhs.false.45

lor.lhs.false.45:                                 ; preds = %land.lhs.true, %if.end.31
  %68 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type46 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %68, i32 0, i32 8
  %69 = load i32, i32* %mb_type46, align 4
  %cmp47 = icmp eq i32 %69, 0
  br i1 %cmp47, label %land.lhs.true.48, label %lor.lhs.false.52

land.lhs.true.48:                                 ; preds = %lor.lhs.false.45
  %70 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type49 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %70, i32 0, i32 6
  %71 = load i32, i32* %type49, align 4
  %cmp50 = icmp eq i32 %71, 1
  br i1 %cmp50, label %land.lhs.true.51, label %lor.lhs.false.52

land.lhs.true.51:                                 ; preds = %land.lhs.true.48
  %72 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %direct_8x8_inference_flag = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %72, i32 0, i32 27
  %73 = load i32, i32* %direct_8x8_inference_flag, align 4
  %tobool = icmp ne i32 %73, 0
  br i1 %tobool, label %land.lhs.true.54, label %lor.lhs.false.52

lor.lhs.false.52:                                 ; preds = %land.lhs.true.51, %land.lhs.true.48, %lor.lhs.false.45
  %74 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %NoMbPartLessThan8x8Flag = getelementptr inbounds %struct.macroblock, %struct.macroblock* %74, i32 0, i32 33
  %75 = load i32, i32* %NoMbPartLessThan8x8Flag, align 4
  %tobool53 = icmp ne i32 %75, 0
  br i1 %tobool53, label %land.lhs.true.54, label %land.end

land.lhs.true.54:                                 ; preds = %lor.lhs.false.52, %land.lhs.true.51, %land.lhs.true
  %76 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type55 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %76, i32 0, i32 8
  %77 = load i32, i32* %mb_type55, align 4
  %cmp56 = icmp ne i32 %77, 13
  br i1 %cmp56, label %land.lhs.true.57, label %land.end

land.lhs.true.57:                                 ; preds = %land.lhs.true.54
  %78 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type58 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %78, i32 0, i32 8
  %79 = load i32, i32* %mb_type58, align 4
  %cmp59 = icmp ne i32 %79, 9
  br i1 %cmp59, label %land.lhs.true.60, label %land.end

land.lhs.true.60:                                 ; preds = %land.lhs.true.57
  %80 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %cbp61 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %80, i32 0, i32 12
  %81 = load i32, i32* %cbp61, align 4
  %and = and i32 %81, 15
  %tobool62 = icmp ne i32 %and, 0
  br i1 %tobool62, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %land.lhs.true.60
  %82 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %AllowTransform8x8 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %82, i32 0, i32 123
  %83 = load i32, i32* %AllowTransform8x8, align 4
  %tobool63 = icmp ne i32 %83, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true.60, %land.lhs.true.57, %land.lhs.true.54, %lor.lhs.false.52
  %84 = phi i1 [ false, %land.lhs.true.60 ], [ false, %land.lhs.true.57 ], [ false, %land.lhs.true.54 ], [ false, %lor.lhs.false.52 ], [ %tobool63, %land.rhs ]
  %land.ext = zext i1 %84 to i32
  store i32 %land.ext, i32* %need_transform_size_flag, align 4
  %85 = load i32, i32* %need_transform_size_flag, align 4
  %tobool64 = icmp ne i32 %85, 0
  br i1 %tobool64, label %if.then.65, label %if.end.93

if.then.65:                                       ; preds = %land.end
  %86 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %luma_transform_size_8x8_flag = getelementptr inbounds %struct.macroblock, %struct.macroblock* %86, i32 0, i32 32
  %87 = load i32, i32* %luma_transform_size_8x8_flag, align 4
  %88 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %value166 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %88, i32 0, i32 1
  store i32 %87, i32* %value166, align 4
  %89 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %type67 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %89, i32 0, i32 0
  store i32 20, i32* %type67, align 4
  %90 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %symbol_mode68 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %90, i32 0, i32 59
  %91 = load i32, i32* %symbol_mode68, align 4
  %cmp69 = icmp eq i32 %91, 0
  br i1 %cmp69, label %if.then.70, label %if.else.72

if.then.70:                                       ; preds = %if.then.65
  %92 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %mapping71 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %92, i32 0, i32 8
  store void (i32, i32, i32*, i32*)* @ue_linfo, void (i32, i32, i32*, i32*)** %mapping71, align 8
  br label %if.end.74

if.else.72:                                       ; preds = %if.then.65
  %93 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %writing73 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %93, i32 0, i32 9
  store void (%struct.syntaxelement*, %struct.EncodingEnvironment*)* @writeMB_transform_size_CABAC, void (%struct.syntaxelement*, %struct.EncodingEnvironment*)** %writing73, align 8
  br label %if.end.74

if.end.74:                                        ; preds = %if.else.72, %if.then.70
  %94 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %symbol_mode75 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %94, i32 0, i32 59
  %95 = load i32, i32* %symbol_mode75, align 4
  %cmp76 = icmp eq i32 %95, 0
  br i1 %cmp76, label %if.then.77, label %if.else.81

if.then.77:                                       ; preds = %if.end.74
  %96 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %luma_transform_size_8x8_flag78 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %96, i32 0, i32 32
  %97 = load i32, i32* %luma_transform_size_8x8_flag78, align 4
  %98 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %bitpattern = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %98, i32 0, i32 5
  store i32 %97, i32* %bitpattern, align 4
  %99 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %len79 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %99, i32 0, i32 3
  store i32 1, i32* %len79, align 4
  %100 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %101 = load %struct.datapartition*, %struct.datapartition** %dataPart, align 8
  %bitstream = getelementptr inbounds %struct.datapartition, %struct.datapartition* %101, i32 0, i32 0
  %102 = load %struct.Bitstream*, %struct.Bitstream** %bitstream, align 8
  %call80 = call i32 @writeSyntaxElement2Buf_Fixed(%struct.syntaxelement* %100, %struct.Bitstream* %102)
  br label %if.end.84

if.else.81:                                       ; preds = %if.end.74
  %103 = load %struct.datapartition*, %struct.datapartition** %dataPart, align 8
  %writeSyntaxElement82 = getelementptr inbounds %struct.datapartition, %struct.datapartition* %103, i32 0, i32 2
  %104 = load i32 (%struct.syntaxelement*, %struct.datapartition*)*, i32 (%struct.syntaxelement*, %struct.datapartition*)** %writeSyntaxElement82, align 8
  %105 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %106 = load %struct.datapartition*, %struct.datapartition** %dataPart, align 8
  %call83 = call i32 %104(%struct.syntaxelement* %105, %struct.datapartition* %106)
  br label %if.end.84

if.end.84:                                        ; preds = %if.else.81, %if.then.77
  %107 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %len85 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %107, i32 0, i32 3
  %108 = load i32, i32* %len85, align 4
  %109 = load i32*, i32** %bitCount, align 8
  %arrayidx86 = getelementptr inbounds i32, i32* %109, i64 2
  %110 = load i32, i32* %arrayidx86, align 4
  %add87 = add nsw i32 %110, %108
  store i32 %add87, i32* %arrayidx86, align 4
  %111 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %len88 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %111, i32 0, i32 3
  %112 = load i32, i32* %len88, align 4
  %113 = load i32, i32* %rate, align 4
  %add89 = add nsw i32 %113, %112
  store i32 %add89, i32* %rate, align 4
  %114 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %incdec.ptr90 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %114, i32 1
  store %struct.syntaxelement* %incdec.ptr90, %struct.syntaxelement** %currSE, align 8
  %115 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %currSEnr91 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %115, i32 0, i32 0
  %116 = load i32, i32* %currSEnr91, align 4
  %inc92 = add nsw i32 %116, 1
  store i32 %inc92, i32* %currSEnr91, align 4
  br label %if.end.93

if.end.93:                                        ; preds = %if.end.84, %land.end
  br label %if.end.94

if.end.94:                                        ; preds = %if.end.93, %entry
  %117 = load i32, i32* %cbp, align 4
  %cmp95 = icmp ne i32 %117, 0
  br i1 %cmp95, label %if.then.99, label %lor.lhs.false.96

lor.lhs.false.96:                                 ; preds = %if.end.94
  %118 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type97 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %118, i32 0, i32 8
  %119 = load i32, i32* %mb_type97, align 4
  %cmp98 = icmp eq i32 %119, 10
  br i1 %cmp98, label %if.then.99, label %if.end.138

if.then.99:                                       ; preds = %lor.lhs.false.96, %if.end.94
  %120 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %delta_qp = getelementptr inbounds %struct.macroblock, %struct.macroblock* %120, i32 0, i32 2
  %121 = load i32, i32* %delta_qp, align 4
  %122 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %value1100 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %122, i32 0, i32 1
  store i32 %121, i32* %value1100, align 4
  %123 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %symbol_mode101 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %123, i32 0, i32 59
  %124 = load i32, i32* %symbol_mode101, align 4
  %cmp102 = icmp eq i32 %124, 0
  br i1 %cmp102, label %if.then.103, label %if.else.105

if.then.103:                                      ; preds = %if.then.99
  %125 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %mapping104 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %125, i32 0, i32 8
  store void (i32, i32, i32*, i32*)* @se_linfo, void (i32, i32, i32*, i32*)** %mapping104, align 8
  br label %if.end.107

if.else.105:                                      ; preds = %if.then.99
  %126 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %writing106 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %126, i32 0, i32 9
  store void (%struct.syntaxelement*, %struct.EncodingEnvironment*)* @writeDquant_CABAC, void (%struct.syntaxelement*, %struct.EncodingEnvironment*)** %writing106, align 8
  br label %if.end.107

if.end.107:                                       ; preds = %if.else.105, %if.then.103
  %127 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type108 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %127, i32 0, i32 8
  %128 = load i32, i32* %mb_type108, align 4
  %cmp109 = icmp ne i32 %128, 9
  br i1 %cmp109, label %land.lhs.true.110, label %if.else.118

land.lhs.true.110:                                ; preds = %if.end.107
  %129 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type111 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %129, i32 0, i32 8
  %130 = load i32, i32* %mb_type111, align 4
  %cmp112 = icmp ne i32 %130, 10
  br i1 %cmp112, label %land.lhs.true.113, label %if.else.118

land.lhs.true.113:                                ; preds = %land.lhs.true.110
  %131 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type114 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %131, i32 0, i32 8
  %132 = load i32, i32* %mb_type114, align 4
  %cmp115 = icmp ne i32 %132, 13
  br i1 %cmp115, label %if.then.116, label %if.else.118

if.then.116:                                      ; preds = %land.lhs.true.113
  %133 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %type117 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %133, i32 0, i32 0
  store i32 16, i32* %type117, align 4
  br label %if.end.120

if.else.118:                                      ; preds = %land.lhs.true.113, %land.lhs.true.110, %if.end.107
  %134 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %type119 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %134, i32 0, i32 0
  store i32 17, i32* %type119, align 4
  br label %if.end.120

if.end.120:                                       ; preds = %if.else.118, %if.then.116
  %135 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %type121 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %135, i32 0, i32 0
  %136 = load i32, i32* %type121, align 4
  %idxprom122 = sext i32 %136 to i64
  %137 = load i32*, i32** %partMap, align 8
  %arrayidx123 = getelementptr inbounds i32, i32* %137, i64 %idxprom122
  %138 = load i32, i32* %arrayidx123, align 4
  %idxprom124 = sext i32 %138 to i64
  %139 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %currentSlice125 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %139, i32 0, i32 50
  %140 = load %struct.Slice*, %struct.Slice** %currentSlice125, align 8
  %partArr126 = getelementptr inbounds %struct.Slice, %struct.Slice* %140, i32 0, i32 6
  %141 = load %struct.datapartition*, %struct.datapartition** %partArr126, align 8
  %arrayidx127 = getelementptr inbounds %struct.datapartition, %struct.datapartition* %141, i64 %idxprom124
  store %struct.datapartition* %arrayidx127, %struct.datapartition** %dataPart, align 8
  %142 = load %struct.datapartition*, %struct.datapartition** %dataPart, align 8
  %writeSyntaxElement128 = getelementptr inbounds %struct.datapartition, %struct.datapartition* %142, i32 0, i32 2
  %143 = load i32 (%struct.syntaxelement*, %struct.datapartition*)*, i32 (%struct.syntaxelement*, %struct.datapartition*)** %writeSyntaxElement128, align 8
  %144 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %145 = load %struct.datapartition*, %struct.datapartition** %dataPart, align 8
  %call129 = call i32 %143(%struct.syntaxelement* %144, %struct.datapartition* %145)
  %146 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %len130 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %146, i32 0, i32 3
  %147 = load i32, i32* %len130, align 4
  %148 = load i32*, i32** %bitCount, align 8
  %arrayidx131 = getelementptr inbounds i32, i32* %148, i64 7
  %149 = load i32, i32* %arrayidx131, align 4
  %add132 = add nsw i32 %149, %147
  store i32 %add132, i32* %arrayidx131, align 4
  %150 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %len133 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %150, i32 0, i32 3
  %151 = load i32, i32* %len133, align 4
  %152 = load i32, i32* %rate, align 4
  %add134 = add nsw i32 %152, %151
  store i32 %add134, i32* %rate, align 4
  %153 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %incdec.ptr135 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %153, i32 1
  store %struct.syntaxelement* %incdec.ptr135, %struct.syntaxelement** %currSE, align 8
  %154 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %currSEnr136 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %154, i32 0, i32 0
  %155 = load i32, i32* %currSEnr136, align 4
  %inc137 = add nsw i32 %155, 1
  store i32 %inc137, i32* %currSEnr136, align 4
  br label %if.end.138

if.end.138:                                       ; preds = %if.end.120, %lor.lhs.false.96
  store i32 0, i32* %j, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc.152, %if.end.138
  %156 = load i32, i32* %j, align 4
  %157 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %num_blk8x8_uv = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %157, i32 0, i32 157
  %158 = load i32, i32* %num_blk8x8_uv, align 4
  %add139 = add nsw i32 4, %158
  %cmp140 = icmp slt i32 %156, %add139
  br i1 %cmp140, label %for.body, label %for.end.154

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4
  br label %for.cond.141

for.cond.141:                                     ; preds = %for.inc, %for.body
  %159 = load i32, i32* %i, align 4
  %cmp142 = icmp slt i32 %159, 4
  br i1 %cmp142, label %for.body.143, label %for.end

for.body.143:                                     ; preds = %for.cond.141
  %160 = load i32, i32* %j, align 4
  %idxprom144 = sext i32 %160 to i64
  %161 = load i32, i32* %i, align 4
  %idxprom145 = sext i32 %161 to i64
  %162 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr146 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %162, i32 0, i32 3
  %163 = load i32, i32* %current_mb_nr146, align 4
  %idxprom147 = sext i32 %163 to i64
  %164 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %nz_coeff = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %164, i32 0, i32 28
  %165 = load i32***, i32**** %nz_coeff, align 8
  %arrayidx148 = getelementptr inbounds i32**, i32*** %165, i64 %idxprom147
  %166 = load i32**, i32*** %arrayidx148, align 8
  %arrayidx149 = getelementptr inbounds i32*, i32** %166, i64 %idxprom145
  %167 = load i32*, i32** %arrayidx149, align 8
  %arrayidx150 = getelementptr inbounds i32, i32* %167, i64 %idxprom144
  store i32 0, i32* %arrayidx150, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body.143
  %168 = load i32, i32* %i, align 4
  %inc151 = add nsw i32 %168, 1
  store i32 %inc151, i32* %i, align 4
  br label %for.cond.141

for.end:                                          ; preds = %for.cond.141
  br label %for.inc.152

for.inc.152:                                      ; preds = %for.end
  %169 = load i32, i32* %j, align 4
  %inc153 = add nsw i32 %169, 1
  store i32 %inc153, i32* %j, align 4
  br label %for.cond

for.end.154:                                      ; preds = %for.cond
  %170 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_type155 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %170, i32 0, i32 8
  %171 = load i32, i32* %mb_type155, align 4
  %cmp156 = icmp eq i32 %171, 10
  br i1 %cmp156, label %if.else.173, label %if.then.157

if.then.157:                                      ; preds = %for.end.154
  store i32 0, i32* %i, align 4
  br label %for.cond.158

for.cond.158:                                     ; preds = %for.inc.170, %if.then.157
  %172 = load i32, i32* %i, align 4
  %cmp159 = icmp slt i32 %172, 4
  br i1 %cmp159, label %for.body.160, label %for.end.172

for.body.160:                                     ; preds = %for.cond.158
  %173 = load i32, i32* %cbp, align 4
  %174 = load i32, i32* %i, align 4
  %shl = shl i32 1, %174
  %and161 = and i32 %173, %shl
  %tobool162 = icmp ne i32 %and161, 0
  br i1 %tobool162, label %if.then.163, label %if.end.169

if.then.163:                                      ; preds = %for.body.160
  %175 = load i32, i32* %i, align 4
  %176 = load i32, i32* %i, align 4
  %idxprom164 = sext i32 %176 to i64
  %177 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %b8mode = getelementptr inbounds %struct.macroblock, %struct.macroblock* %177, i32 0, i32 14
  %arrayidx165 = getelementptr inbounds [4 x i32], [4 x i32]* %b8mode, i32 0, i64 %idxprom164
  %178 = load i32, i32* %arrayidx165, align 4
  %179 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %luma_transform_size_8x8_flag166 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %179, i32 0, i32 32
  %180 = load i32, i32* %luma_transform_size_8x8_flag166, align 4
  %call167 = call i32 @writeLumaCoeff8x8(i32 %175, i32 %178, i32 %180)
  %181 = load i32, i32* %rate, align 4
  %add168 = add nsw i32 %181, %call167
  store i32 %add168, i32* %rate, align 4
  br label %if.end.169

if.end.169:                                       ; preds = %if.then.163, %for.body.160
  br label %for.inc.170

for.inc.170:                                      ; preds = %if.end.169
  %182 = load i32, i32* %i, align 4
  %inc171 = add nsw i32 %182, 1
  store i32 %inc171, i32* %i, align 4
  br label %for.cond.158

for.end.172:                                      ; preds = %for.cond.158
  br label %if.end.315

if.else.173:                                      ; preds = %for.end.154
  %183 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %symbol_mode174 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %183, i32 0, i32 59
  %184 = load i32, i32* %symbol_mode174, align 4
  %cmp175 = icmp eq i32 %184, 0
  br i1 %cmp175, label %if.then.176, label %if.else.179

if.then.176:                                      ; preds = %if.else.173
  %call177 = call i32 @writeCoeff4x4_CAVLC(i32 1, i32 0, i32 0, i32 0)
  %185 = load i32, i32* %rate, align 4
  %add178 = add nsw i32 %185, %call177
  store i32 %add178, i32* %rate, align 4
  br label %if.end.219

if.else.179:                                      ; preds = %if.else.173
  store i32 1, i32* %level, align 4
  store i32 0, i32* %k, align 4
  br label %for.cond.180

for.cond.180:                                     ; preds = %for.inc.216, %if.else.179
  %186 = load i32, i32* %k, align 4
  %cmp181 = icmp sle i32 %186, 16
  br i1 %cmp181, label %land.rhs.182, label %land.end.184

land.rhs.182:                                     ; preds = %for.cond.180
  %187 = load i32, i32* %level, align 4
  %cmp183 = icmp ne i32 %187, 0
  br label %land.end.184

land.end.184:                                     ; preds = %land.rhs.182, %for.cond.180
  %188 = phi i1 [ false, %for.cond.180 ], [ %cmp183, %land.rhs.182 ]
  br i1 %188, label %for.body.186, label %for.end.218

for.body.186:                                     ; preds = %land.end.184
  %189 = load i32, i32* %k, align 4
  %idxprom187 = sext i32 %189 to i64
  %190 = load i32*, i32** %DCLevel, align 8
  %arrayidx188 = getelementptr inbounds i32, i32* %190, i64 %idxprom187
  %191 = load i32, i32* %arrayidx188, align 4
  %192 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %value1189 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %192, i32 0, i32 1
  store i32 %191, i32* %value1189, align 4
  store i32 %191, i32* %level, align 4
  %193 = load i32, i32* %k, align 4
  %idxprom190 = sext i32 %193 to i64
  %194 = load i32*, i32** %DCRun, align 8
  %arrayidx191 = getelementptr inbounds i32, i32* %194, i64 %idxprom190
  %195 = load i32, i32* %arrayidx191, align 4
  %196 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %value2 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %196, i32 0, i32 2
  store i32 %195, i32* %value2, align 4
  store i32 %195, i32* %run, align 4
  %197 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %symbol_mode192 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %197, i32 0, i32 59
  %198 = load i32, i32* %symbol_mode192, align 4
  %cmp193 = icmp eq i32 %198, 0
  br i1 %cmp193, label %if.then.194, label %if.else.196

if.then.194:                                      ; preds = %for.body.186
  %199 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %mapping195 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %199, i32 0, i32 8
  store void (i32, i32, i32*, i32*)* @levrun_linfo_inter, void (i32, i32, i32*, i32*)** %mapping195, align 8
  br label %if.end.198

if.else.196:                                      ; preds = %for.body.186
  %200 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %writing197 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %200, i32 0, i32 9
  store void (%struct.syntaxelement*, %struct.EncodingEnvironment*)* @writeRunLevel_CABAC, void (%struct.syntaxelement*, %struct.EncodingEnvironment*)** %writing197, align 8
  br label %if.end.198

if.end.198:                                       ; preds = %if.else.196, %if.then.194
  %201 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %context = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %201, i32 0, i32 6
  store i32 0, i32* %context, align 4
  %202 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %type199 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %202, i32 0, i32 0
  store i32 7, i32* %type199, align 4
  %203 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %is_intra_block = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %203, i32 0, i32 20
  store i32 1, i32* %is_intra_block, align 4
  %204 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %type200 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %204, i32 0, i32 0
  %205 = load i32, i32* %type200, align 4
  %idxprom201 = sext i32 %205 to i64
  %206 = load i32*, i32** %partMap, align 8
  %arrayidx202 = getelementptr inbounds i32, i32* %206, i64 %idxprom201
  %207 = load i32, i32* %arrayidx202, align 4
  %idxprom203 = sext i32 %207 to i64
  %208 = load %struct.Slice*, %struct.Slice** %currSlice, align 8
  %partArr204 = getelementptr inbounds %struct.Slice, %struct.Slice* %208, i32 0, i32 6
  %209 = load %struct.datapartition*, %struct.datapartition** %partArr204, align 8
  %arrayidx205 = getelementptr inbounds %struct.datapartition, %struct.datapartition* %209, i64 %idxprom203
  store %struct.datapartition* %arrayidx205, %struct.datapartition** %dataPart, align 8
  %210 = load %struct.datapartition*, %struct.datapartition** %dataPart, align 8
  %writeSyntaxElement206 = getelementptr inbounds %struct.datapartition, %struct.datapartition* %210, i32 0, i32 2
  %211 = load i32 (%struct.syntaxelement*, %struct.datapartition*)*, i32 (%struct.syntaxelement*, %struct.datapartition*)** %writeSyntaxElement206, align 8
  %212 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %213 = load %struct.datapartition*, %struct.datapartition** %dataPart, align 8
  %call207 = call i32 %211(%struct.syntaxelement* %212, %struct.datapartition* %213)
  %214 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %len208 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %214, i32 0, i32 3
  %215 = load i32, i32* %len208, align 4
  %216 = load i32*, i32** %bitCount, align 8
  %arrayidx209 = getelementptr inbounds i32, i32* %216, i64 5
  %217 = load i32, i32* %arrayidx209, align 4
  %add210 = add nsw i32 %217, %215
  store i32 %add210, i32* %arrayidx209, align 4
  %218 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %len211 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %218, i32 0, i32 3
  %219 = load i32, i32* %len211, align 4
  %220 = load i32, i32* %rate, align 4
  %add212 = add nsw i32 %220, %219
  store i32 %add212, i32* %rate, align 4
  %221 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %incdec.ptr213 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %221, i32 1
  store %struct.syntaxelement* %incdec.ptr213, %struct.syntaxelement** %currSE, align 8
  %222 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %currSEnr214 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %222, i32 0, i32 0
  %223 = load i32, i32* %currSEnr214, align 4
  %inc215 = add nsw i32 %223, 1
  store i32 %inc215, i32* %currSEnr214, align 4
  br label %for.inc.216

for.inc.216:                                      ; preds = %if.end.198
  %224 = load i32, i32* %k, align 4
  %inc217 = add nsw i32 %224, 1
  store i32 %inc217, i32* %k, align 4
  br label %for.cond.180

for.end.218:                                      ; preds = %land.end.184
  br label %if.end.219

if.end.219:                                       ; preds = %for.end.218, %if.then.176
  %225 = load i32, i32* %cbp, align 4
  %and220 = and i32 %225, 15
  %tobool221 = icmp ne i32 %and220, 0
  br i1 %tobool221, label %if.then.222, label %if.end.314

if.then.222:                                      ; preds = %if.end.219
  store i32 0, i32* %mb_y, align 4
  br label %for.cond.223

for.cond.223:                                     ; preds = %for.inc.311, %if.then.222
  %226 = load i32, i32* %mb_y, align 4
  %cmp224 = icmp slt i32 %226, 4
  br i1 %cmp224, label %for.body.225, label %for.end.313

for.body.225:                                     ; preds = %for.cond.223
  store i32 0, i32* %mb_x, align 4
  br label %for.cond.226

for.cond.226:                                     ; preds = %for.inc.308, %for.body.225
  %227 = load i32, i32* %mb_x, align 4
  %cmp227 = icmp slt i32 %227, 4
  br i1 %cmp227, label %for.body.228, label %for.end.310

for.body.228:                                     ; preds = %for.cond.226
  %228 = load i32, i32* %mb_y, align 4
  store i32 %228, i32* %j, align 4
  br label %for.cond.229

for.cond.229:                                     ; preds = %for.inc.305, %for.body.228
  %229 = load i32, i32* %j, align 4
  %230 = load i32, i32* %mb_y, align 4
  %add230 = add nsw i32 %230, 2
  %cmp231 = icmp slt i32 %229, %add230
  br i1 %cmp231, label %for.body.232, label %for.end.307

for.body.232:                                     ; preds = %for.cond.229
  %231 = load i32, i32* %mb_x, align 4
  store i32 %231, i32* %i, align 4
  br label %for.cond.233

for.cond.233:                                     ; preds = %for.inc.302, %for.body.232
  %232 = load i32, i32* %i, align 4
  %233 = load i32, i32* %mb_x, align 4
  %add234 = add nsw i32 %233, 2
  %cmp235 = icmp slt i32 %232, %add234
  br i1 %cmp235, label %for.body.236, label %for.end.304

for.body.236:                                     ; preds = %for.cond.233
  %234 = load i32, i32* %j, align 4
  %div = sdiv i32 %234, 2
  %mul = mul nsw i32 2, %div
  %235 = load i32, i32* %i, align 4
  %div237 = sdiv i32 %235, 2
  %add238 = add nsw i32 %mul, %div237
  store i32 %add238, i32* %b8, align 4
  %236 = load i32, i32* %j, align 4
  %rem = srem i32 %236, 2
  %mul239 = mul nsw i32 2, %rem
  %237 = load i32, i32* %i, align 4
  %rem240 = srem i32 %237, 2
  %add241 = add nsw i32 %mul239, %rem240
  store i32 %add241, i32* %b4, align 4
  %238 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %symbol_mode242 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %238, i32 0, i32 59
  %239 = load i32, i32* %symbol_mode242, align 4
  %cmp243 = icmp eq i32 %239, 0
  br i1 %cmp243, label %if.then.244, label %if.else.247

if.then.244:                                      ; preds = %for.body.236
  %240 = load i32, i32* %b8, align 4
  %241 = load i32, i32* %b4, align 4
  %call245 = call i32 @writeCoeff4x4_CAVLC(i32 2, i32 %240, i32 %241, i32 0)
  %242 = load i32, i32* %rate, align 4
  %add246 = add nsw i32 %242, %call245
  store i32 %add246, i32* %rate, align 4
  br label %if.end.301

if.else.247:                                      ; preds = %for.body.236
  %243 = load i32, i32* %b4, align 4
  %idxprom248 = sext i32 %243 to i64
  %244 = load i32, i32* %b8, align 4
  %idxprom249 = sext i32 %244 to i64
  %245 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %cofAC = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %245, i32 0, i32 47
  %246 = load i32****, i32***** %cofAC, align 8
  %arrayidx250 = getelementptr inbounds i32***, i32**** %246, i64 %idxprom249
  %247 = load i32***, i32**** %arrayidx250, align 8
  %arrayidx251 = getelementptr inbounds i32**, i32*** %247, i64 %idxprom248
  %248 = load i32**, i32*** %arrayidx251, align 8
  %arrayidx252 = getelementptr inbounds i32*, i32** %248, i64 0
  %249 = load i32*, i32** %arrayidx252, align 8
  store i32* %249, i32** %ACLevel, align 8
  %250 = load i32, i32* %b4, align 4
  %idxprom253 = sext i32 %250 to i64
  %251 = load i32, i32* %b8, align 4
  %idxprom254 = sext i32 %251 to i64
  %252 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %cofAC255 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %252, i32 0, i32 47
  %253 = load i32****, i32***** %cofAC255, align 8
  %arrayidx256 = getelementptr inbounds i32***, i32**** %253, i64 %idxprom254
  %254 = load i32***, i32**** %arrayidx256, align 8
  %arrayidx257 = getelementptr inbounds i32**, i32*** %254, i64 %idxprom253
  %255 = load i32**, i32*** %arrayidx257, align 8
  %arrayidx258 = getelementptr inbounds i32*, i32** %255, i64 1
  %256 = load i32*, i32** %arrayidx258, align 8
  store i32* %256, i32** %ACRun, align 8
  %257 = load i32, i32* %j, align 4
  %258 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %subblock_y = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %258, i32 0, i32 19
  store i32 %257, i32* %subblock_y, align 4
  %259 = load i32, i32* %i, align 4
  %260 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %subblock_x = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %260, i32 0, i32 18
  store i32 %259, i32* %subblock_x, align 4
  store i32 1, i32* %level, align 4
  store i32 0, i32* %k, align 4
  br label %for.cond.259

for.cond.259:                                     ; preds = %for.inc.298, %if.else.247
  %261 = load i32, i32* %k, align 4
  %cmp260 = icmp slt i32 %261, 16
  br i1 %cmp260, label %land.rhs.261, label %land.end.263

land.rhs.261:                                     ; preds = %for.cond.259
  %262 = load i32, i32* %level, align 4
  %cmp262 = icmp ne i32 %262, 0
  br label %land.end.263

land.end.263:                                     ; preds = %land.rhs.261, %for.cond.259
  %263 = phi i1 [ false, %for.cond.259 ], [ %cmp262, %land.rhs.261 ]
  br i1 %263, label %for.body.265, label %for.end.300

for.body.265:                                     ; preds = %land.end.263
  %264 = load i32, i32* %k, align 4
  %idxprom266 = sext i32 %264 to i64
  %265 = load i32*, i32** %ACLevel, align 8
  %arrayidx267 = getelementptr inbounds i32, i32* %265, i64 %idxprom266
  %266 = load i32, i32* %arrayidx267, align 4
  %267 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %value1268 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %267, i32 0, i32 1
  store i32 %266, i32* %value1268, align 4
  store i32 %266, i32* %level, align 4
  %268 = load i32, i32* %k, align 4
  %idxprom269 = sext i32 %268 to i64
  %269 = load i32*, i32** %ACRun, align 8
  %arrayidx270 = getelementptr inbounds i32, i32* %269, i64 %idxprom269
  %270 = load i32, i32* %arrayidx270, align 4
  %271 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %value2271 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %271, i32 0, i32 2
  store i32 %270, i32* %value2271, align 4
  store i32 %270, i32* %run, align 4
  %272 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %symbol_mode272 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %272, i32 0, i32 59
  %273 = load i32, i32* %symbol_mode272, align 4
  %cmp273 = icmp eq i32 %273, 0
  br i1 %cmp273, label %if.then.274, label %if.else.276

if.then.274:                                      ; preds = %for.body.265
  %274 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %mapping275 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %274, i32 0, i32 8
  store void (i32, i32, i32*, i32*)* @levrun_linfo_inter, void (i32, i32, i32*, i32*)** %mapping275, align 8
  br label %if.end.278

if.else.276:                                      ; preds = %for.body.265
  %275 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %writing277 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %275, i32 0, i32 9
  store void (%struct.syntaxelement*, %struct.EncodingEnvironment*)* @writeRunLevel_CABAC, void (%struct.syntaxelement*, %struct.EncodingEnvironment*)** %writing277, align 8
  br label %if.end.278

if.end.278:                                       ; preds = %if.else.276, %if.then.274
  %276 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %context279 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %276, i32 0, i32 6
  store i32 1, i32* %context279, align 4
  %277 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %type280 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %277, i32 0, i32 0
  store i32 9, i32* %type280, align 4
  %278 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %is_intra_block281 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %278, i32 0, i32 20
  store i32 1, i32* %is_intra_block281, align 4
  %279 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %type282 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %279, i32 0, i32 0
  %280 = load i32, i32* %type282, align 4
  %idxprom283 = sext i32 %280 to i64
  %281 = load i32*, i32** %partMap, align 8
  %arrayidx284 = getelementptr inbounds i32, i32* %281, i64 %idxprom283
  %282 = load i32, i32* %arrayidx284, align 4
  %idxprom285 = sext i32 %282 to i64
  %283 = load %struct.Slice*, %struct.Slice** %currSlice, align 8
  %partArr286 = getelementptr inbounds %struct.Slice, %struct.Slice* %283, i32 0, i32 6
  %284 = load %struct.datapartition*, %struct.datapartition** %partArr286, align 8
  %arrayidx287 = getelementptr inbounds %struct.datapartition, %struct.datapartition* %284, i64 %idxprom285
  store %struct.datapartition* %arrayidx287, %struct.datapartition** %dataPart, align 8
  %285 = load %struct.datapartition*, %struct.datapartition** %dataPart, align 8
  %writeSyntaxElement288 = getelementptr inbounds %struct.datapartition, %struct.datapartition* %285, i32 0, i32 2
  %286 = load i32 (%struct.syntaxelement*, %struct.datapartition*)*, i32 (%struct.syntaxelement*, %struct.datapartition*)** %writeSyntaxElement288, align 8
  %287 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %288 = load %struct.datapartition*, %struct.datapartition** %dataPart, align 8
  %call289 = call i32 %286(%struct.syntaxelement* %287, %struct.datapartition* %288)
  %289 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %len290 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %289, i32 0, i32 3
  %290 = load i32, i32* %len290, align 4
  %291 = load i32*, i32** %bitCount, align 8
  %arrayidx291 = getelementptr inbounds i32, i32* %291, i64 5
  %292 = load i32, i32* %arrayidx291, align 4
  %add292 = add nsw i32 %292, %290
  store i32 %add292, i32* %arrayidx291, align 4
  %293 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %len293 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %293, i32 0, i32 3
  %294 = load i32, i32* %len293, align 4
  %295 = load i32, i32* %rate, align 4
  %add294 = add nsw i32 %295, %294
  store i32 %add294, i32* %rate, align 4
  %296 = load %struct.syntaxelement*, %struct.syntaxelement** %currSE, align 8
  %incdec.ptr295 = getelementptr inbounds %struct.syntaxelement, %struct.syntaxelement* %296, i32 1
  store %struct.syntaxelement* %incdec.ptr295, %struct.syntaxelement** %currSE, align 8
  %297 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %currSEnr296 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %297, i32 0, i32 0
  %298 = load i32, i32* %currSEnr296, align 4
  %inc297 = add nsw i32 %298, 1
  store i32 %inc297, i32* %currSEnr296, align 4
  br label %for.inc.298

for.inc.298:                                      ; preds = %if.end.278
  %299 = load i32, i32* %k, align 4
  %inc299 = add nsw i32 %299, 1
  store i32 %inc299, i32* %k, align 4
  br label %for.cond.259

for.end.300:                                      ; preds = %land.end.263
  br label %if.end.301

if.end.301:                                       ; preds = %for.end.300, %if.then.244
  br label %for.inc.302

for.inc.302:                                      ; preds = %if.end.301
  %300 = load i32, i32* %i, align 4
  %inc303 = add nsw i32 %300, 1
  store i32 %inc303, i32* %i, align 4
  br label %for.cond.233

for.end.304:                                      ; preds = %for.cond.233
  br label %for.inc.305

for.inc.305:                                      ; preds = %for.end.304
  %301 = load i32, i32* %j, align 4
  %inc306 = add nsw i32 %301, 1
  store i32 %inc306, i32* %j, align 4
  br label %for.cond.229

for.end.307:                                      ; preds = %for.cond.229
  br label %for.inc.308

for.inc.308:                                      ; preds = %for.end.307
  %302 = load i32, i32* %mb_x, align 4
  %add309 = add nsw i32 %302, 2
  store i32 %add309, i32* %mb_x, align 4
  br label %for.cond.226

for.end.310:                                      ; preds = %for.cond.226
  br label %for.inc.311

for.inc.311:                                      ; preds = %for.end.310
  %303 = load i32, i32* %mb_y, align 4
  %add312 = add nsw i32 %303, 2
  store i32 %add312, i32* %mb_y, align 4
  br label %for.cond.223

for.end.313:                                      ; preds = %for.cond.223
  br label %if.end.314

if.end.314:                                       ; preds = %for.end.313, %if.end.219
  br label %if.end.315

if.end.315:                                       ; preds = %if.end.314, %for.end.172
  %304 = load i32, i32* %rate, align 4
  ret i32 %304
}

declare void @cbp_linfo_intra(i32, i32, i32*, i32*) #1

declare void @cbp_linfo_inter(i32, i32, i32*, i32*) #1

declare void @writeCBP_CABAC(%struct.syntaxelement*, %struct.EncodingEnvironment*) #1

declare void @writeDquant_CABAC(%struct.syntaxelement*, %struct.EncodingEnvironment*) #1

; Function Attrs: nounwind uwtable
define i32 @predict_nnz(i32 %i, i32 %j) #0 {
entry:
  %i.addr = alloca i32, align 4
  %j.addr = alloca i32, align 4
  %pix = alloca %struct.pix_pos, align 4
  %pred_nnz = alloca i32, align 4
  %cnt = alloca i32, align 4
  %mb_nr = alloca i32, align 4
  store i32 %i, i32* %i.addr, align 4
  store i32 %j, i32* %j.addr, align 4
  store i32 0, i32* %pred_nnz, align 4
  store i32 0, i32* %cnt, align 4
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i32 0, i32 3
  %1 = load i32, i32* %current_mb_nr, align 4
  store i32 %1, i32* %mb_nr, align 4
  %2 = load i32, i32* %mb_nr, align 4
  %3 = load i32, i32* %i.addr, align 4
  %4 = load i32, i32* %j.addr, align 4
  call void @getLuma4x4Neighbour(i32 %2, i32 %3, i32 %4, i32 -1, i32 0, %struct.pix_pos* %pix)
  %available = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %pix, i32 0, i32 0
  %5 = load i32, i32* %available, align 4
  %tobool = icmp ne i32 %5, 0
  br i1 %tobool, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %6 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %constrained_intra_pred_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %6, i32 0, i32 27
  %7 = load i32, i32* %constrained_intra_pred_flag, align 4
  %tobool1 = icmp ne i32 %7, 0
  br i1 %tobool1, label %land.lhs.true.2, label %if.end

land.lhs.true.2:                                  ; preds = %land.lhs.true
  %8 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %partition_mode = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %8, i32 0, i32 61
  %9 = load i32, i32* %partition_mode, align 4
  %cmp = icmp ne i32 %9, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true.2
  %mb_addr = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %pix, i32 0, i32 1
  %10 = load i32, i32* %mb_addr, align 4
  %idxprom = sext i32 %10 to i64
  %11 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %intra_block = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %11, i32 0, i32 54
  %12 = load i32*, i32** %intra_block, align 8
  %arrayidx = getelementptr inbounds i32, i32* %12, i64 %idxprom
  %13 = load i32, i32* %arrayidx, align 4
  %available3 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %pix, i32 0, i32 0
  %14 = load i32, i32* %available3, align 4
  %and = and i32 %14, %13
  store i32 %and, i32* %available3, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true.2, %land.lhs.true, %entry
  %available4 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %pix, i32 0, i32 0
  %15 = load i32, i32* %available4, align 4
  %tobool5 = icmp ne i32 %15, 0
  br i1 %tobool5, label %if.then.6, label %if.end.14

if.then.6:                                        ; preds = %if.end
  %y = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %pix, i32 0, i32 3
  %16 = load i32, i32* %y, align 4
  %idxprom7 = sext i32 %16 to i64
  %x = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %pix, i32 0, i32 2
  %17 = load i32, i32* %x, align 4
  %idxprom8 = sext i32 %17 to i64
  %mb_addr9 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %pix, i32 0, i32 1
  %18 = load i32, i32* %mb_addr9, align 4
  %idxprom10 = sext i32 %18 to i64
  %19 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %nz_coeff = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %19, i32 0, i32 28
  %20 = load i32***, i32**** %nz_coeff, align 8
  %arrayidx11 = getelementptr inbounds i32**, i32*** %20, i64 %idxprom10
  %21 = load i32**, i32*** %arrayidx11, align 8
  %arrayidx12 = getelementptr inbounds i32*, i32** %21, i64 %idxprom8
  %22 = load i32*, i32** %arrayidx12, align 8
  %arrayidx13 = getelementptr inbounds i32, i32* %22, i64 %idxprom7
  %23 = load i32, i32* %arrayidx13, align 4
  store i32 %23, i32* %pred_nnz, align 4
  %24 = load i32, i32* %cnt, align 4
  %inc = add nsw i32 %24, 1
  store i32 %inc, i32* %cnt, align 4
  br label %if.end.14

if.end.14:                                        ; preds = %if.then.6, %if.end
  %25 = load i32, i32* %mb_nr, align 4
  %26 = load i32, i32* %i.addr, align 4
  %27 = load i32, i32* %j.addr, align 4
  call void @getLuma4x4Neighbour(i32 %25, i32 %26, i32 %27, i32 0, i32 -1, %struct.pix_pos* %pix)
  %available15 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %pix, i32 0, i32 0
  %28 = load i32, i32* %available15, align 4
  %tobool16 = icmp ne i32 %28, 0
  br i1 %tobool16, label %land.lhs.true.17, label %if.end.30

land.lhs.true.17:                                 ; preds = %if.end.14
  %29 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %constrained_intra_pred_flag18 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %29, i32 0, i32 27
  %30 = load i32, i32* %constrained_intra_pred_flag18, align 4
  %tobool19 = icmp ne i32 %30, 0
  br i1 %tobool19, label %land.lhs.true.20, label %if.end.30

land.lhs.true.20:                                 ; preds = %land.lhs.true.17
  %31 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %partition_mode21 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %31, i32 0, i32 61
  %32 = load i32, i32* %partition_mode21, align 4
  %cmp22 = icmp ne i32 %32, 0
  br i1 %cmp22, label %if.then.23, label %if.end.30

if.then.23:                                       ; preds = %land.lhs.true.20
  %mb_addr24 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %pix, i32 0, i32 1
  %33 = load i32, i32* %mb_addr24, align 4
  %idxprom25 = sext i32 %33 to i64
  %34 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %intra_block26 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %34, i32 0, i32 54
  %35 = load i32*, i32** %intra_block26, align 8
  %arrayidx27 = getelementptr inbounds i32, i32* %35, i64 %idxprom25
  %36 = load i32, i32* %arrayidx27, align 4
  %available28 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %pix, i32 0, i32 0
  %37 = load i32, i32* %available28, align 4
  %and29 = and i32 %37, %36
  store i32 %and29, i32* %available28, align 4
  br label %if.end.30

if.end.30:                                        ; preds = %if.then.23, %land.lhs.true.20, %land.lhs.true.17, %if.end.14
  %available31 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %pix, i32 0, i32 0
  %38 = load i32, i32* %available31, align 4
  %tobool32 = icmp ne i32 %38, 0
  br i1 %tobool32, label %if.then.33, label %if.end.45

if.then.33:                                       ; preds = %if.end.30
  %y34 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %pix, i32 0, i32 3
  %39 = load i32, i32* %y34, align 4
  %idxprom35 = sext i32 %39 to i64
  %x36 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %pix, i32 0, i32 2
  %40 = load i32, i32* %x36, align 4
  %idxprom37 = sext i32 %40 to i64
  %mb_addr38 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %pix, i32 0, i32 1
  %41 = load i32, i32* %mb_addr38, align 4
  %idxprom39 = sext i32 %41 to i64
  %42 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %nz_coeff40 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %42, i32 0, i32 28
  %43 = load i32***, i32**** %nz_coeff40, align 8
  %arrayidx41 = getelementptr inbounds i32**, i32*** %43, i64 %idxprom39
  %44 = load i32**, i32*** %arrayidx41, align 8
  %arrayidx42 = getelementptr inbounds i32*, i32** %44, i64 %idxprom37
  %45 = load i32*, i32** %arrayidx42, align 8
  %arrayidx43 = getelementptr inbounds i32, i32* %45, i64 %idxprom35
  %46 = load i32, i32* %arrayidx43, align 4
  %47 = load i32, i32* %pred_nnz, align 4
  %add = add nsw i32 %47, %46
  store i32 %add, i32* %pred_nnz, align 4
  %48 = load i32, i32* %cnt, align 4
  %inc44 = add nsw i32 %48, 1
  store i32 %inc44, i32* %cnt, align 4
  br label %if.end.45

if.end.45:                                        ; preds = %if.then.33, %if.end.30
  %49 = load i32, i32* %cnt, align 4
  %cmp46 = icmp eq i32 %49, 2
  br i1 %cmp46, label %if.then.47, label %if.end.49

if.then.47:                                       ; preds = %if.end.45
  %50 = load i32, i32* %pred_nnz, align 4
  %inc48 = add nsw i32 %50, 1
  store i32 %inc48, i32* %pred_nnz, align 4
  %51 = load i32, i32* %cnt, align 4
  %52 = load i32, i32* %pred_nnz, align 4
  %div = sdiv i32 %52, %51
  store i32 %div, i32* %pred_nnz, align 4
  br label %if.end.49

if.end.49:                                        ; preds = %if.then.47, %if.end.45
  %53 = load i32, i32* %pred_nnz, align 4
  ret i32 %53
}

declare void @getLuma4x4Neighbour(i32, i32, i32, i32, i32, %struct.pix_pos*) #1

; Function Attrs: nounwind uwtable
define i32 @predict_nnz_chroma(i32 %i, i32 %j) #0 {
entry:
  %i.addr = alloca i32, align 4
  %j.addr = alloca i32, align 4
  %pix = alloca %struct.pix_pos, align 4
  %pred_nnz = alloca i32, align 4
  %cnt = alloca i32, align 4
  %mb_nr = alloca i32, align 4
  %j_off_tab = alloca [12 x i32], align 16
  %j_off = alloca i32, align 4
  store i32 %i, i32* %i.addr, align 4
  store i32 %j, i32* %j.addr, align 4
  store i32 0, i32* %pred_nnz, align 4
  store i32 0, i32* %cnt, align 4
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i32 0, i32 3
  %1 = load i32, i32* %current_mb_nr, align 4
  store i32 %1, i32* %mb_nr, align 4
  %2 = bitcast [12 x i32]* %j_off_tab to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %2, i8* bitcast ([12 x i32]* @predict_nnz_chroma.j_off_tab to i8*), i64 48, i32 16, i1 false)
  %3 = load i32, i32* %j.addr, align 4
  %idxprom = sext i32 %3 to i64
  %arrayidx = getelementptr inbounds [12 x i32], [12 x i32]* %j_off_tab, i32 0, i64 %idxprom
  %4 = load i32, i32* %arrayidx, align 4
  store i32 %4, i32* %j_off, align 4
  %5 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %yuv_format = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %5, i32 0, i32 159
  %6 = load i32, i32* %yuv_format, align 4
  %cmp = icmp ne i32 %6, 3
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %7 = load i32, i32* %mb_nr, align 4
  %8 = load i32, i32* %i.addr, align 4
  %rem = srem i32 %8, 2
  %9 = load i32, i32* %j.addr, align 4
  %sub = sub nsw i32 %9, 4
  call void @getChroma4x4Neighbour(i32 %7, i32 %rem, i32 %sub, i32 -1, i32 0, %struct.pix_pos* %pix)
  %available = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %pix, i32 0, i32 0
  %10 = load i32, i32* %available, align 4
  %tobool = icmp ne i32 %10, 0
  br i1 %tobool, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %if.then
  %11 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %constrained_intra_pred_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %11, i32 0, i32 27
  %12 = load i32, i32* %constrained_intra_pred_flag, align 4
  %tobool1 = icmp ne i32 %12, 0
  br i1 %tobool1, label %land.lhs.true.2, label %if.end

land.lhs.true.2:                                  ; preds = %land.lhs.true
  %13 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %partition_mode = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %13, i32 0, i32 61
  %14 = load i32, i32* %partition_mode, align 4
  %cmp3 = icmp ne i32 %14, 0
  br i1 %cmp3, label %if.then.4, label %if.end

if.then.4:                                        ; preds = %land.lhs.true.2
  %mb_addr = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %pix, i32 0, i32 1
  %15 = load i32, i32* %mb_addr, align 4
  %idxprom5 = sext i32 %15 to i64
  %16 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %intra_block = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %16, i32 0, i32 54
  %17 = load i32*, i32** %intra_block, align 8
  %arrayidx6 = getelementptr inbounds i32, i32* %17, i64 %idxprom5
  %18 = load i32, i32* %arrayidx6, align 4
  %available7 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %pix, i32 0, i32 0
  %19 = load i32, i32* %available7, align 4
  %and = and i32 %19, %18
  store i32 %and, i32* %available7, align 4
  br label %if.end

if.end:                                           ; preds = %if.then.4, %land.lhs.true.2, %land.lhs.true, %if.then
  %available8 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %pix, i32 0, i32 0
  %20 = load i32, i32* %available8, align 4
  %tobool9 = icmp ne i32 %20, 0
  br i1 %tobool9, label %if.then.10, label %if.end.19

if.then.10:                                       ; preds = %if.end
  %y = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %pix, i32 0, i32 3
  %21 = load i32, i32* %y, align 4
  %add = add nsw i32 4, %21
  %idxprom11 = sext i32 %add to i64
  %22 = load i32, i32* %i.addr, align 4
  %div = sdiv i32 %22, 2
  %mul = mul nsw i32 2, %div
  %x = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %pix, i32 0, i32 2
  %23 = load i32, i32* %x, align 4
  %add12 = add nsw i32 %mul, %23
  %idxprom13 = sext i32 %add12 to i64
  %mb_addr14 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %pix, i32 0, i32 1
  %24 = load i32, i32* %mb_addr14, align 4
  %idxprom15 = sext i32 %24 to i64
  %25 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %nz_coeff = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %25, i32 0, i32 28
  %26 = load i32***, i32**** %nz_coeff, align 8
  %arrayidx16 = getelementptr inbounds i32**, i32*** %26, i64 %idxprom15
  %27 = load i32**, i32*** %arrayidx16, align 8
  %arrayidx17 = getelementptr inbounds i32*, i32** %27, i64 %idxprom13
  %28 = load i32*, i32** %arrayidx17, align 8
  %arrayidx18 = getelementptr inbounds i32, i32* %28, i64 %idxprom11
  %29 = load i32, i32* %arrayidx18, align 4
  store i32 %29, i32* %pred_nnz, align 4
  %30 = load i32, i32* %cnt, align 4
  %inc = add nsw i32 %30, 1
  store i32 %inc, i32* %cnt, align 4
  br label %if.end.19

if.end.19:                                        ; preds = %if.then.10, %if.end
  %31 = load i32, i32* %mb_nr, align 4
  %32 = load i32, i32* %i.addr, align 4
  %rem20 = srem i32 %32, 2
  %33 = load i32, i32* %j.addr, align 4
  %sub21 = sub nsw i32 %33, 4
  call void @getChroma4x4Neighbour(i32 %31, i32 %rem20, i32 %sub21, i32 0, i32 -1, %struct.pix_pos* %pix)
  %available22 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %pix, i32 0, i32 0
  %34 = load i32, i32* %available22, align 4
  %tobool23 = icmp ne i32 %34, 0
  br i1 %tobool23, label %land.lhs.true.24, label %if.end.37

land.lhs.true.24:                                 ; preds = %if.end.19
  %35 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %constrained_intra_pred_flag25 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %35, i32 0, i32 27
  %36 = load i32, i32* %constrained_intra_pred_flag25, align 4
  %tobool26 = icmp ne i32 %36, 0
  br i1 %tobool26, label %land.lhs.true.27, label %if.end.37

land.lhs.true.27:                                 ; preds = %land.lhs.true.24
  %37 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %partition_mode28 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %37, i32 0, i32 61
  %38 = load i32, i32* %partition_mode28, align 4
  %cmp29 = icmp ne i32 %38, 0
  br i1 %cmp29, label %if.then.30, label %if.end.37

if.then.30:                                       ; preds = %land.lhs.true.27
  %mb_addr31 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %pix, i32 0, i32 1
  %39 = load i32, i32* %mb_addr31, align 4
  %idxprom32 = sext i32 %39 to i64
  %40 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %intra_block33 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %40, i32 0, i32 54
  %41 = load i32*, i32** %intra_block33, align 8
  %arrayidx34 = getelementptr inbounds i32, i32* %41, i64 %idxprom32
  %42 = load i32, i32* %arrayidx34, align 4
  %available35 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %pix, i32 0, i32 0
  %43 = load i32, i32* %available35, align 4
  %and36 = and i32 %43, %42
  store i32 %and36, i32* %available35, align 4
  br label %if.end.37

if.end.37:                                        ; preds = %if.then.30, %land.lhs.true.27, %land.lhs.true.24, %if.end.19
  %available38 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %pix, i32 0, i32 0
  %44 = load i32, i32* %available38, align 4
  %tobool39 = icmp ne i32 %44, 0
  br i1 %tobool39, label %if.then.40, label %if.end.57

if.then.40:                                       ; preds = %if.end.37
  %y41 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %pix, i32 0, i32 3
  %45 = load i32, i32* %y41, align 4
  %add42 = add nsw i32 4, %45
  %idxprom43 = sext i32 %add42 to i64
  %46 = load i32, i32* %i.addr, align 4
  %div44 = sdiv i32 %46, 2
  %mul45 = mul nsw i32 2, %div44
  %x46 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %pix, i32 0, i32 2
  %47 = load i32, i32* %x46, align 4
  %add47 = add nsw i32 %mul45, %47
  %idxprom48 = sext i32 %add47 to i64
  %mb_addr49 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %pix, i32 0, i32 1
  %48 = load i32, i32* %mb_addr49, align 4
  %idxprom50 = sext i32 %48 to i64
  %49 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %nz_coeff51 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %49, i32 0, i32 28
  %50 = load i32***, i32**** %nz_coeff51, align 8
  %arrayidx52 = getelementptr inbounds i32**, i32*** %50, i64 %idxprom50
  %51 = load i32**, i32*** %arrayidx52, align 8
  %arrayidx53 = getelementptr inbounds i32*, i32** %51, i64 %idxprom48
  %52 = load i32*, i32** %arrayidx53, align 8
  %arrayidx54 = getelementptr inbounds i32, i32* %52, i64 %idxprom43
  %53 = load i32, i32* %arrayidx54, align 4
  %54 = load i32, i32* %pred_nnz, align 4
  %add55 = add nsw i32 %54, %53
  store i32 %add55, i32* %pred_nnz, align 4
  %55 = load i32, i32* %cnt, align 4
  %inc56 = add nsw i32 %55, 1
  store i32 %inc56, i32* %cnt, align 4
  br label %if.end.57

if.end.57:                                        ; preds = %if.then.40, %if.end.37
  br label %if.end.125

if.else:                                          ; preds = %entry
  %56 = load i32, i32* %mb_nr, align 4
  %57 = load i32, i32* %i.addr, align 4
  %58 = load i32, i32* %j.addr, align 4
  %59 = load i32, i32* %j_off, align 4
  %sub58 = sub nsw i32 %58, %59
  call void @getChroma4x4Neighbour(i32 %56, i32 %57, i32 %sub58, i32 -1, i32 0, %struct.pix_pos* %pix)
  %available59 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %pix, i32 0, i32 0
  %60 = load i32, i32* %available59, align 4
  %tobool60 = icmp ne i32 %60, 0
  br i1 %tobool60, label %land.lhs.true.61, label %if.end.74

land.lhs.true.61:                                 ; preds = %if.else
  %61 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %constrained_intra_pred_flag62 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %61, i32 0, i32 27
  %62 = load i32, i32* %constrained_intra_pred_flag62, align 4
  %tobool63 = icmp ne i32 %62, 0
  br i1 %tobool63, label %land.lhs.true.64, label %if.end.74

land.lhs.true.64:                                 ; preds = %land.lhs.true.61
  %63 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %partition_mode65 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %63, i32 0, i32 61
  %64 = load i32, i32* %partition_mode65, align 4
  %cmp66 = icmp ne i32 %64, 0
  br i1 %cmp66, label %if.then.67, label %if.end.74

if.then.67:                                       ; preds = %land.lhs.true.64
  %mb_addr68 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %pix, i32 0, i32 1
  %65 = load i32, i32* %mb_addr68, align 4
  %idxprom69 = sext i32 %65 to i64
  %66 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %intra_block70 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %66, i32 0, i32 54
  %67 = load i32*, i32** %intra_block70, align 8
  %arrayidx71 = getelementptr inbounds i32, i32* %67, i64 %idxprom69
  %68 = load i32, i32* %arrayidx71, align 4
  %available72 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %pix, i32 0, i32 0
  %69 = load i32, i32* %available72, align 4
  %and73 = and i32 %69, %68
  store i32 %and73, i32* %available72, align 4
  br label %if.end.74

if.end.74:                                        ; preds = %if.then.67, %land.lhs.true.64, %land.lhs.true.61, %if.else
  %available75 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %pix, i32 0, i32 0
  %70 = load i32, i32* %available75, align 4
  %tobool76 = icmp ne i32 %70, 0
  br i1 %tobool76, label %if.then.77, label %if.end.90

if.then.77:                                       ; preds = %if.end.74
  %71 = load i32, i32* %j_off, align 4
  %y78 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %pix, i32 0, i32 3
  %72 = load i32, i32* %y78, align 4
  %add79 = add nsw i32 %71, %72
  %idxprom80 = sext i32 %add79 to i64
  %x81 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %pix, i32 0, i32 2
  %73 = load i32, i32* %x81, align 4
  %idxprom82 = sext i32 %73 to i64
  %mb_addr83 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %pix, i32 0, i32 1
  %74 = load i32, i32* %mb_addr83, align 4
  %idxprom84 = sext i32 %74 to i64
  %75 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %nz_coeff85 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %75, i32 0, i32 28
  %76 = load i32***, i32**** %nz_coeff85, align 8
  %arrayidx86 = getelementptr inbounds i32**, i32*** %76, i64 %idxprom84
  %77 = load i32**, i32*** %arrayidx86, align 8
  %arrayidx87 = getelementptr inbounds i32*, i32** %77, i64 %idxprom82
  %78 = load i32*, i32** %arrayidx87, align 8
  %arrayidx88 = getelementptr inbounds i32, i32* %78, i64 %idxprom80
  %79 = load i32, i32* %arrayidx88, align 4
  store i32 %79, i32* %pred_nnz, align 4
  %80 = load i32, i32* %cnt, align 4
  %inc89 = add nsw i32 %80, 1
  store i32 %inc89, i32* %cnt, align 4
  br label %if.end.90

if.end.90:                                        ; preds = %if.then.77, %if.end.74
  %81 = load i32, i32* %mb_nr, align 4
  %82 = load i32, i32* %i.addr, align 4
  %83 = load i32, i32* %j.addr, align 4
  %84 = load i32, i32* %j_off, align 4
  %sub91 = sub nsw i32 %83, %84
  call void @getChroma4x4Neighbour(i32 %81, i32 %82, i32 %sub91, i32 0, i32 -1, %struct.pix_pos* %pix)
  %available92 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %pix, i32 0, i32 0
  %85 = load i32, i32* %available92, align 4
  %tobool93 = icmp ne i32 %85, 0
  br i1 %tobool93, label %land.lhs.true.94, label %if.end.107

land.lhs.true.94:                                 ; preds = %if.end.90
  %86 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %constrained_intra_pred_flag95 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %86, i32 0, i32 27
  %87 = load i32, i32* %constrained_intra_pred_flag95, align 4
  %tobool96 = icmp ne i32 %87, 0
  br i1 %tobool96, label %land.lhs.true.97, label %if.end.107

land.lhs.true.97:                                 ; preds = %land.lhs.true.94
  %88 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %partition_mode98 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %88, i32 0, i32 61
  %89 = load i32, i32* %partition_mode98, align 4
  %cmp99 = icmp ne i32 %89, 0
  br i1 %cmp99, label %if.then.100, label %if.end.107

if.then.100:                                      ; preds = %land.lhs.true.97
  %mb_addr101 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %pix, i32 0, i32 1
  %90 = load i32, i32* %mb_addr101, align 4
  %idxprom102 = sext i32 %90 to i64
  %91 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %intra_block103 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %91, i32 0, i32 54
  %92 = load i32*, i32** %intra_block103, align 8
  %arrayidx104 = getelementptr inbounds i32, i32* %92, i64 %idxprom102
  %93 = load i32, i32* %arrayidx104, align 4
  %available105 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %pix, i32 0, i32 0
  %94 = load i32, i32* %available105, align 4
  %and106 = and i32 %94, %93
  store i32 %and106, i32* %available105, align 4
  br label %if.end.107

if.end.107:                                       ; preds = %if.then.100, %land.lhs.true.97, %land.lhs.true.94, %if.end.90
  %available108 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %pix, i32 0, i32 0
  %95 = load i32, i32* %available108, align 4
  %tobool109 = icmp ne i32 %95, 0
  br i1 %tobool109, label %if.then.110, label %if.end.124

if.then.110:                                      ; preds = %if.end.107
  %96 = load i32, i32* %j_off, align 4
  %y111 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %pix, i32 0, i32 3
  %97 = load i32, i32* %y111, align 4
  %add112 = add nsw i32 %96, %97
  %idxprom113 = sext i32 %add112 to i64
  %x114 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %pix, i32 0, i32 2
  %98 = load i32, i32* %x114, align 4
  %idxprom115 = sext i32 %98 to i64
  %mb_addr116 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %pix, i32 0, i32 1
  %99 = load i32, i32* %mb_addr116, align 4
  %idxprom117 = sext i32 %99 to i64
  %100 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %nz_coeff118 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %100, i32 0, i32 28
  %101 = load i32***, i32**** %nz_coeff118, align 8
  %arrayidx119 = getelementptr inbounds i32**, i32*** %101, i64 %idxprom117
  %102 = load i32**, i32*** %arrayidx119, align 8
  %arrayidx120 = getelementptr inbounds i32*, i32** %102, i64 %idxprom115
  %103 = load i32*, i32** %arrayidx120, align 8
  %arrayidx121 = getelementptr inbounds i32, i32* %103, i64 %idxprom113
  %104 = load i32, i32* %arrayidx121, align 4
  %105 = load i32, i32* %pred_nnz, align 4
  %add122 = add nsw i32 %105, %104
  store i32 %add122, i32* %pred_nnz, align 4
  %106 = load i32, i32* %cnt, align 4
  %inc123 = add nsw i32 %106, 1
  store i32 %inc123, i32* %cnt, align 4
  br label %if.end.124

if.end.124:                                       ; preds = %if.then.110, %if.end.107
  br label %if.end.125

if.end.125:                                       ; preds = %if.end.124, %if.end.57
  %107 = load i32, i32* %cnt, align 4
  %cmp126 = icmp eq i32 %107, 2
  br i1 %cmp126, label %if.then.127, label %if.end.130

if.then.127:                                      ; preds = %if.end.125
  %108 = load i32, i32* %pred_nnz, align 4
  %inc128 = add nsw i32 %108, 1
  store i32 %inc128, i32* %pred_nnz, align 4
  %109 = load i32, i32* %cnt, align 4
  %110 = load i32, i32* %pred_nnz, align 4
  %div129 = sdiv i32 %110, %109
  store i32 %div129, i32* %pred_nnz, align 4
  br label %if.end.130

if.end.130:                                       ; preds = %if.then.127, %if.end.125
  %111 = load i32, i32* %pred_nnz, align 4
  ret i32 %111
}

declare void @getChroma4x4Neighbour(i32, i32, i32, i32, i32, %struct.pix_pos*) #1

; Function Attrs: nounwind
declare i32 @sprintf(i8*, i8*, ...) #2

; Function Attrs: nounwind readnone
declare i32 @abs(i32) #4

declare i32 @writeSyntaxElement_NumCoeffTrailingOnes(%struct.syntaxelement*, %struct.datapartition*) #1

declare i32 @writeSyntaxElement_NumCoeffTrailingOnesChromaDC(%struct.syntaxelement*, %struct.datapartition*) #1

declare i32 @printf(i8*, ...) #1

; Function Attrs: noreturn nounwind
declare void @exit(i32) #5

declare i32 @writeSyntaxElement_VLC(%struct.syntaxelement*, %struct.datapartition*) #1

declare i32 @writeSyntaxElement_Level_VLC1(%struct.syntaxelement*, %struct.datapartition*) #1

declare i32 @writeSyntaxElement_Level_VLCN(%struct.syntaxelement*, i32, %struct.datapartition*) #1

declare i32 @writeSyntaxElement_TotalZeros(%struct.syntaxelement*, %struct.datapartition*) #1

declare i32 @writeSyntaxElement_TotalZerosChromaDC(%struct.syntaxelement*, %struct.datapartition*) #1

declare i32 @writeSyntaxElement_Run(%struct.syntaxelement*, %struct.datapartition*) #1

; Function Attrs: nounwind uwtable
define i32 @find_sad_16x16(i32* %intra_mode) #0 {
entry:
  %intra_mode.addr = alloca i32*, align 8
  %current_intra_sad_2 = alloca i32, align 4
  %best_intra_sad2 = alloca i32, align 4
  %M1 = alloca [16 x [16 x i32]], align 16
  %M0 = alloca [4 x [4 x [4 x [4 x i32]]]], align 16
  %M3 = alloca [4 x i32], align 16
  %M4 = alloca [4 x [4 x i32]], align 16
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %ii = alloca i32, align 4
  %jj = alloca i32, align 4
  %mb_nr = alloca i32, align 4
  %up = alloca %struct.pix_pos, align 4
  %left = alloca [17 x %struct.pix_pos], align 16
  %up_avail = alloca i32, align 4
  %left_avail = alloca i32, align 4
  %left_up_avail = alloca i32, align 4
  store i32* %intra_mode, i32** %intra_mode.addr, align 8
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i32 0, i32 3
  %1 = load i32, i32* %current_mb_nr, align 4
  store i32 %1, i32* %mb_nr, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %2, 17
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %mb_nr, align 4
  %4 = load i32, i32* %i, align 4
  %sub = sub nsw i32 %4, 1
  %5 = load i32, i32* %i, align 4
  %idxprom = sext i32 %5 to i64
  %arrayidx = getelementptr inbounds [17 x %struct.pix_pos], [17 x %struct.pix_pos]* %left, i32 0, i64 %idxprom
  call void @getNeighbour(i32 %3, i32 -1, i32 %sub, i32 1, %struct.pix_pos* %arrayidx)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %6 = load i32, i32* %i, align 4
  %inc = add nsw i32 %6, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %7 = load i32, i32* %mb_nr, align 4
  call void @getNeighbour(i32 %7, i32 0, i32 -1, i32 1, %struct.pix_pos* %up)
  %8 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %UseConstrainedIntraPred = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %8, i32 0, i32 24
  %9 = load i32, i32* %UseConstrainedIntraPred, align 4
  %tobool = icmp ne i32 %9, 0
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %for.end
  %available = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %up, i32 0, i32 0
  %10 = load i32, i32* %available, align 4
  store i32 %10, i32* %up_avail, align 4
  %arrayidx1 = getelementptr inbounds [17 x %struct.pix_pos], [17 x %struct.pix_pos]* %left, i32 0, i64 1
  %available2 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %arrayidx1, i32 0, i32 0
  %11 = load i32, i32* %available2, align 4
  store i32 %11, i32* %left_avail, align 4
  %arrayidx3 = getelementptr inbounds [17 x %struct.pix_pos], [17 x %struct.pix_pos]* %left, i32 0, i64 0
  %available4 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %arrayidx3, i32 0, i32 0
  %12 = load i32, i32* %available4, align 4
  store i32 %12, i32* %left_up_avail, align 4
  br label %if.end

if.else:                                          ; preds = %for.end
  %available5 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %up, i32 0, i32 0
  %13 = load i32, i32* %available5, align 4
  %tobool6 = icmp ne i32 %13, 0
  br i1 %tobool6, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.else
  %mb_addr = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %up, i32 0, i32 1
  %14 = load i32, i32* %mb_addr, align 4
  %idxprom7 = sext i32 %14 to i64
  %15 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %intra_block = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %15, i32 0, i32 54
  %16 = load i32*, i32** %intra_block, align 8
  %arrayidx8 = getelementptr inbounds i32, i32* %16, i64 %idxprom7
  %17 = load i32, i32* %arrayidx8, align 4
  br label %cond.end

cond.false:                                       ; preds = %if.else
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %17, %cond.true ], [ 0, %cond.false ]
  store i32 %cond, i32* %up_avail, align 4
  store i32 1, i32* %i, align 4
  store i32 1, i32* %left_avail, align 4
  br label %for.cond.9

for.cond.9:                                       ; preds = %for.inc.26, %cond.end
  %18 = load i32, i32* %i, align 4
  %cmp10 = icmp slt i32 %18, 17
  br i1 %cmp10, label %for.body.11, label %for.end.28

for.body.11:                                      ; preds = %for.cond.9
  %19 = load i32, i32* %i, align 4
  %idxprom12 = sext i32 %19 to i64
  %arrayidx13 = getelementptr inbounds [17 x %struct.pix_pos], [17 x %struct.pix_pos]* %left, i32 0, i64 %idxprom12
  %available14 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %arrayidx13, i32 0, i32 0
  %20 = load i32, i32* %available14, align 4
  %tobool15 = icmp ne i32 %20, 0
  br i1 %tobool15, label %cond.true.16, label %cond.false.23

cond.true.16:                                     ; preds = %for.body.11
  %21 = load i32, i32* %i, align 4
  %idxprom17 = sext i32 %21 to i64
  %arrayidx18 = getelementptr inbounds [17 x %struct.pix_pos], [17 x %struct.pix_pos]* %left, i32 0, i64 %idxprom17
  %mb_addr19 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %arrayidx18, i32 0, i32 1
  %22 = load i32, i32* %mb_addr19, align 4
  %idxprom20 = sext i32 %22 to i64
  %23 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %intra_block21 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %23, i32 0, i32 54
  %24 = load i32*, i32** %intra_block21, align 8
  %arrayidx22 = getelementptr inbounds i32, i32* %24, i64 %idxprom20
  %25 = load i32, i32* %arrayidx22, align 4
  br label %cond.end.24

cond.false.23:                                    ; preds = %for.body.11
  br label %cond.end.24

cond.end.24:                                      ; preds = %cond.false.23, %cond.true.16
  %cond25 = phi i32 [ %25, %cond.true.16 ], [ 0, %cond.false.23 ]
  %26 = load i32, i32* %left_avail, align 4
  %and = and i32 %26, %cond25
  store i32 %and, i32* %left_avail, align 4
  br label %for.inc.26

for.inc.26:                                       ; preds = %cond.end.24
  %27 = load i32, i32* %i, align 4
  %inc27 = add nsw i32 %27, 1
  store i32 %inc27, i32* %i, align 4
  br label %for.cond.9

for.end.28:                                       ; preds = %for.cond.9
  %arrayidx29 = getelementptr inbounds [17 x %struct.pix_pos], [17 x %struct.pix_pos]* %left, i32 0, i64 0
  %available30 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %arrayidx29, i32 0, i32 0
  %28 = load i32, i32* %available30, align 4
  %tobool31 = icmp ne i32 %28, 0
  br i1 %tobool31, label %cond.true.32, label %cond.false.38

cond.true.32:                                     ; preds = %for.end.28
  %arrayidx33 = getelementptr inbounds [17 x %struct.pix_pos], [17 x %struct.pix_pos]* %left, i32 0, i64 0
  %mb_addr34 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %arrayidx33, i32 0, i32 1
  %29 = load i32, i32* %mb_addr34, align 4
  %idxprom35 = sext i32 %29 to i64
  %30 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %intra_block36 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %30, i32 0, i32 54
  %31 = load i32*, i32** %intra_block36, align 8
  %arrayidx37 = getelementptr inbounds i32, i32* %31, i64 %idxprom35
  %32 = load i32, i32* %arrayidx37, align 4
  br label %cond.end.39

cond.false.38:                                    ; preds = %for.end.28
  br label %cond.end.39

cond.end.39:                                      ; preds = %cond.false.38, %cond.true.32
  %cond40 = phi i32 [ %32, %cond.true.32 ], [ 0, %cond.false.38 ]
  store i32 %cond40, i32* %left_up_avail, align 4
  br label %if.end

if.end:                                           ; preds = %cond.end.39, %if.then
  store i32 999999, i32* %best_intra_sad2, align 4
  %33 = load i32*, i32** %intra_mode.addr, align 8
  store i32 2, i32* %33, align 4
  store i32 0, i32* %k, align 4
  br label %for.cond.41

for.cond.41:                                      ; preds = %for.inc.545, %if.end
  %34 = load i32, i32* %k, align 4
  %cmp42 = icmp slt i32 %34, 4
  br i1 %cmp42, label %for.body.43, label %for.end.547

for.body.43:                                      ; preds = %for.cond.41
  %35 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %IntraDisableInterOnly = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %35, i32 0, i32 69
  %36 = load i32, i32* %IntraDisableInterOnly, align 4
  %cmp44 = icmp eq i32 %36, 0
  br i1 %cmp44, label %if.then.46, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body.43
  %37 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %37, i32 0, i32 6
  %38 = load i32, i32* %type, align 4
  %cmp45 = icmp ne i32 %38, 2
  br i1 %cmp45, label %if.then.46, label %if.end.58

if.then.46:                                       ; preds = %lor.lhs.false, %for.body.43
  %39 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %Intra16x16ParDisable = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %39, i32 0, i32 73
  %40 = load i32, i32* %Intra16x16ParDisable, align 4
  %tobool47 = icmp ne i32 %40, 0
  br i1 %tobool47, label %land.lhs.true, label %if.end.52

land.lhs.true:                                    ; preds = %if.then.46
  %41 = load i32, i32* %k, align 4
  %cmp48 = icmp eq i32 %41, 0
  br i1 %cmp48, label %if.then.51, label %lor.lhs.false.49

lor.lhs.false.49:                                 ; preds = %land.lhs.true
  %42 = load i32, i32* %k, align 4
  %cmp50 = icmp eq i32 %42, 1
  br i1 %cmp50, label %if.then.51, label %if.end.52

if.then.51:                                       ; preds = %lor.lhs.false.49, %land.lhs.true
  br label %for.inc.545

if.end.52:                                        ; preds = %lor.lhs.false.49, %if.then.46
  %43 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %Intra16x16PlaneDisable = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %43, i32 0, i32 74
  %44 = load i32, i32* %Intra16x16PlaneDisable, align 4
  %tobool53 = icmp ne i32 %44, 0
  br i1 %tobool53, label %land.lhs.true.54, label %if.end.57

land.lhs.true.54:                                 ; preds = %if.end.52
  %45 = load i32, i32* %k, align 4
  %cmp55 = icmp eq i32 %45, 3
  br i1 %cmp55, label %if.then.56, label %if.end.57

if.then.56:                                       ; preds = %land.lhs.true.54
  br label %for.inc.545

if.end.57:                                        ; preds = %land.lhs.true.54, %if.end.52
  br label %if.end.58

if.end.58:                                        ; preds = %if.end.57, %lor.lhs.false
  %46 = load i32, i32* %k, align 4
  %cmp59 = icmp eq i32 %46, 0
  br i1 %cmp59, label %land.lhs.true.60, label %lor.lhs.false.62

land.lhs.true.60:                                 ; preds = %if.end.58
  %47 = load i32, i32* %up_avail, align 4
  %tobool61 = icmp ne i32 %47, 0
  br i1 %tobool61, label %lor.lhs.false.62, label %if.then.74

lor.lhs.false.62:                                 ; preds = %land.lhs.true.60, %if.end.58
  %48 = load i32, i32* %k, align 4
  %cmp63 = icmp eq i32 %48, 1
  br i1 %cmp63, label %land.lhs.true.64, label %lor.lhs.false.66

land.lhs.true.64:                                 ; preds = %lor.lhs.false.62
  %49 = load i32, i32* %left_avail, align 4
  %tobool65 = icmp ne i32 %49, 0
  br i1 %tobool65, label %lor.lhs.false.66, label %if.then.74

lor.lhs.false.66:                                 ; preds = %land.lhs.true.64, %lor.lhs.false.62
  %50 = load i32, i32* %k, align 4
  %cmp67 = icmp eq i32 %50, 3
  br i1 %cmp67, label %land.lhs.true.68, label %if.else.75

land.lhs.true.68:                                 ; preds = %lor.lhs.false.66
  %51 = load i32, i32* %left_avail, align 4
  %tobool69 = icmp ne i32 %51, 0
  br i1 %tobool69, label %lor.lhs.false.70, label %if.then.74

lor.lhs.false.70:                                 ; preds = %land.lhs.true.68
  %52 = load i32, i32* %up_avail, align 4
  %tobool71 = icmp ne i32 %52, 0
  br i1 %tobool71, label %lor.lhs.false.72, label %if.then.74

lor.lhs.false.72:                                 ; preds = %lor.lhs.false.70
  %53 = load i32, i32* %left_up_avail, align 4
  %tobool73 = icmp ne i32 %53, 0
  br i1 %tobool73, label %if.else.75, label %if.then.74

if.then.74:                                       ; preds = %lor.lhs.false.72, %lor.lhs.false.70, %land.lhs.true.68, %land.lhs.true.64, %land.lhs.true.60
  br label %if.end.544

if.else.75:                                       ; preds = %lor.lhs.false.72, %lor.lhs.false.66
  store i32 0, i32* %j, align 4
  br label %for.cond.76

for.cond.76:                                      ; preds = %for.inc.116, %if.else.75
  %54 = load i32, i32* %j, align 4
  %cmp77 = icmp slt i32 %54, 16
  br i1 %cmp77, label %for.body.78, label %for.end.118

for.body.78:                                      ; preds = %for.cond.76
  store i32 0, i32* %i, align 4
  br label %for.cond.79

for.cond.79:                                      ; preds = %for.inc.113, %for.body.78
  %55 = load i32, i32* %i, align 4
  %cmp80 = icmp slt i32 %55, 16
  br i1 %cmp80, label %for.body.81, label %for.end.115

for.body.81:                                      ; preds = %for.cond.79
  %56 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %opix_x = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %56, i32 0, i32 37
  %57 = load i32, i32* %opix_x, align 4
  %58 = load i32, i32* %i, align 4
  %add = add nsw i32 %57, %58
  %idxprom82 = sext i32 %add to i64
  %59 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %opix_y = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %59, i32 0, i32 38
  %60 = load i32, i32* %opix_y, align 4
  %61 = load i32, i32* %j, align 4
  %add83 = add nsw i32 %60, %61
  %idxprom84 = sext i32 %add83 to i64
  %62 = load i16**, i16*** @imgY_org, align 8
  %arrayidx85 = getelementptr inbounds i16*, i16** %62, i64 %idxprom84
  %63 = load i16*, i16** %arrayidx85, align 8
  %arrayidx86 = getelementptr inbounds i16, i16* %63, i64 %idxprom82
  %64 = load i16, i16* %arrayidx86, align 2
  %conv = zext i16 %64 to i32
  %65 = load i32, i32* %i, align 4
  %idxprom87 = sext i32 %65 to i64
  %66 = load i32, i32* %j, align 4
  %idxprom88 = sext i32 %66 to i64
  %67 = load i32, i32* %k, align 4
  %idxprom89 = sext i32 %67 to i64
  %68 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mprr_2 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %68, i32 0, i32 42
  %arrayidx90 = getelementptr inbounds [5 x [16 x [16 x i16]]], [5 x [16 x [16 x i16]]]* %mprr_2, i32 0, i64 %idxprom89
  %arrayidx91 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %arrayidx90, i32 0, i64 %idxprom88
  %arrayidx92 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx91, i32 0, i64 %idxprom87
  %69 = load i16, i16* %arrayidx92, align 2
  %conv93 = zext i16 %69 to i32
  %sub94 = sub nsw i32 %conv, %conv93
  %70 = load i32, i32* %j, align 4
  %idxprom95 = sext i32 %70 to i64
  %71 = load i32, i32* %i, align 4
  %idxprom96 = sext i32 %71 to i64
  %arrayidx97 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %M1, i32 0, i64 %idxprom96
  %arrayidx98 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx97, i32 0, i64 %idxprom95
  store i32 %sub94, i32* %arrayidx98, align 4
  %72 = load i32, i32* %j, align 4
  %idxprom99 = sext i32 %72 to i64
  %73 = load i32, i32* %i, align 4
  %idxprom100 = sext i32 %73 to i64
  %arrayidx101 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %M1, i32 0, i64 %idxprom100
  %arrayidx102 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx101, i32 0, i64 %idxprom99
  %74 = load i32, i32* %arrayidx102, align 4
  %75 = load i32, i32* %j, align 4
  %div = sdiv i32 %75, 4
  %idxprom103 = sext i32 %div to i64
  %76 = load i32, i32* %j, align 4
  %rem = srem i32 %76, 4
  %idxprom104 = sext i32 %rem to i64
  %77 = load i32, i32* %i, align 4
  %div105 = sdiv i32 %77, 4
  %idxprom106 = sext i32 %div105 to i64
  %78 = load i32, i32* %i, align 4
  %rem107 = srem i32 %78, 4
  %idxprom108 = sext i32 %rem107 to i64
  %arrayidx109 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]], [4 x [4 x [4 x [4 x i32]]]]* %M0, i32 0, i64 %idxprom108
  %arrayidx110 = getelementptr inbounds [4 x [4 x [4 x i32]]], [4 x [4 x [4 x i32]]]* %arrayidx109, i32 0, i64 %idxprom106
  %arrayidx111 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx110, i32 0, i64 %idxprom104
  %arrayidx112 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx111, i32 0, i64 %idxprom103
  store i32 %74, i32* %arrayidx112, align 4
  br label %for.inc.113

for.inc.113:                                      ; preds = %for.body.81
  %79 = load i32, i32* %i, align 4
  %inc114 = add nsw i32 %79, 1
  store i32 %inc114, i32* %i, align 4
  br label %for.cond.79

for.end.115:                                      ; preds = %for.cond.79
  br label %for.inc.116

for.inc.116:                                      ; preds = %for.end.115
  %80 = load i32, i32* %j, align 4
  %inc117 = add nsw i32 %80, 1
  store i32 %inc117, i32* %j, align 4
  br label %for.cond.76

for.end.118:                                      ; preds = %for.cond.76
  store i32 0, i32* %current_intra_sad_2, align 4
  store i32 0, i32* %jj, align 4
  br label %for.cond.119

for.cond.119:                                     ; preds = %for.inc.373, %for.end.118
  %81 = load i32, i32* %jj, align 4
  %cmp120 = icmp slt i32 %81, 4
  br i1 %cmp120, label %for.body.122, label %for.end.375

for.body.122:                                     ; preds = %for.cond.119
  store i32 0, i32* %ii, align 4
  br label %for.cond.123

for.cond.123:                                     ; preds = %for.inc.370, %for.body.122
  %82 = load i32, i32* %ii, align 4
  %cmp124 = icmp slt i32 %82, 4
  br i1 %cmp124, label %for.body.126, label %for.end.372

for.body.126:                                     ; preds = %for.cond.123
  store i32 0, i32* %j, align 4
  br label %for.cond.127

for.cond.127:                                     ; preds = %for.inc.235, %for.body.126
  %83 = load i32, i32* %j, align 4
  %cmp128 = icmp slt i32 %83, 4
  br i1 %cmp128, label %for.body.130, label %for.end.237

for.body.130:                                     ; preds = %for.cond.127
  %84 = load i32, i32* %jj, align 4
  %idxprom131 = sext i32 %84 to i64
  %85 = load i32, i32* %j, align 4
  %idxprom132 = sext i32 %85 to i64
  %86 = load i32, i32* %ii, align 4
  %idxprom133 = sext i32 %86 to i64
  %arrayidx134 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]], [4 x [4 x [4 x [4 x i32]]]]* %M0, i32 0, i64 0
  %arrayidx135 = getelementptr inbounds [4 x [4 x [4 x i32]]], [4 x [4 x [4 x i32]]]* %arrayidx134, i32 0, i64 %idxprom133
  %arrayidx136 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx135, i32 0, i64 %idxprom132
  %arrayidx137 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx136, i32 0, i64 %idxprom131
  %87 = load i32, i32* %arrayidx137, align 4
  %88 = load i32, i32* %jj, align 4
  %idxprom138 = sext i32 %88 to i64
  %89 = load i32, i32* %j, align 4
  %idxprom139 = sext i32 %89 to i64
  %90 = load i32, i32* %ii, align 4
  %idxprom140 = sext i32 %90 to i64
  %arrayidx141 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]], [4 x [4 x [4 x [4 x i32]]]]* %M0, i32 0, i64 3
  %arrayidx142 = getelementptr inbounds [4 x [4 x [4 x i32]]], [4 x [4 x [4 x i32]]]* %arrayidx141, i32 0, i64 %idxprom140
  %arrayidx143 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx142, i32 0, i64 %idxprom139
  %arrayidx144 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx143, i32 0, i64 %idxprom138
  %91 = load i32, i32* %arrayidx144, align 4
  %add145 = add nsw i32 %87, %91
  %arrayidx146 = getelementptr inbounds [4 x i32], [4 x i32]* %M3, i32 0, i64 0
  store i32 %add145, i32* %arrayidx146, align 4
  %92 = load i32, i32* %jj, align 4
  %idxprom147 = sext i32 %92 to i64
  %93 = load i32, i32* %j, align 4
  %idxprom148 = sext i32 %93 to i64
  %94 = load i32, i32* %ii, align 4
  %idxprom149 = sext i32 %94 to i64
  %arrayidx150 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]], [4 x [4 x [4 x [4 x i32]]]]* %M0, i32 0, i64 1
  %arrayidx151 = getelementptr inbounds [4 x [4 x [4 x i32]]], [4 x [4 x [4 x i32]]]* %arrayidx150, i32 0, i64 %idxprom149
  %arrayidx152 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx151, i32 0, i64 %idxprom148
  %arrayidx153 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx152, i32 0, i64 %idxprom147
  %95 = load i32, i32* %arrayidx153, align 4
  %96 = load i32, i32* %jj, align 4
  %idxprom154 = sext i32 %96 to i64
  %97 = load i32, i32* %j, align 4
  %idxprom155 = sext i32 %97 to i64
  %98 = load i32, i32* %ii, align 4
  %idxprom156 = sext i32 %98 to i64
  %arrayidx157 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]], [4 x [4 x [4 x [4 x i32]]]]* %M0, i32 0, i64 2
  %arrayidx158 = getelementptr inbounds [4 x [4 x [4 x i32]]], [4 x [4 x [4 x i32]]]* %arrayidx157, i32 0, i64 %idxprom156
  %arrayidx159 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx158, i32 0, i64 %idxprom155
  %arrayidx160 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx159, i32 0, i64 %idxprom154
  %99 = load i32, i32* %arrayidx160, align 4
  %add161 = add nsw i32 %95, %99
  %arrayidx162 = getelementptr inbounds [4 x i32], [4 x i32]* %M3, i32 0, i64 1
  store i32 %add161, i32* %arrayidx162, align 4
  %100 = load i32, i32* %jj, align 4
  %idxprom163 = sext i32 %100 to i64
  %101 = load i32, i32* %j, align 4
  %idxprom164 = sext i32 %101 to i64
  %102 = load i32, i32* %ii, align 4
  %idxprom165 = sext i32 %102 to i64
  %arrayidx166 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]], [4 x [4 x [4 x [4 x i32]]]]* %M0, i32 0, i64 1
  %arrayidx167 = getelementptr inbounds [4 x [4 x [4 x i32]]], [4 x [4 x [4 x i32]]]* %arrayidx166, i32 0, i64 %idxprom165
  %arrayidx168 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx167, i32 0, i64 %idxprom164
  %arrayidx169 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx168, i32 0, i64 %idxprom163
  %103 = load i32, i32* %arrayidx169, align 4
  %104 = load i32, i32* %jj, align 4
  %idxprom170 = sext i32 %104 to i64
  %105 = load i32, i32* %j, align 4
  %idxprom171 = sext i32 %105 to i64
  %106 = load i32, i32* %ii, align 4
  %idxprom172 = sext i32 %106 to i64
  %arrayidx173 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]], [4 x [4 x [4 x [4 x i32]]]]* %M0, i32 0, i64 2
  %arrayidx174 = getelementptr inbounds [4 x [4 x [4 x i32]]], [4 x [4 x [4 x i32]]]* %arrayidx173, i32 0, i64 %idxprom172
  %arrayidx175 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx174, i32 0, i64 %idxprom171
  %arrayidx176 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx175, i32 0, i64 %idxprom170
  %107 = load i32, i32* %arrayidx176, align 4
  %sub177 = sub nsw i32 %103, %107
  %arrayidx178 = getelementptr inbounds [4 x i32], [4 x i32]* %M3, i32 0, i64 2
  store i32 %sub177, i32* %arrayidx178, align 4
  %108 = load i32, i32* %jj, align 4
  %idxprom179 = sext i32 %108 to i64
  %109 = load i32, i32* %j, align 4
  %idxprom180 = sext i32 %109 to i64
  %110 = load i32, i32* %ii, align 4
  %idxprom181 = sext i32 %110 to i64
  %arrayidx182 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]], [4 x [4 x [4 x [4 x i32]]]]* %M0, i32 0, i64 0
  %arrayidx183 = getelementptr inbounds [4 x [4 x [4 x i32]]], [4 x [4 x [4 x i32]]]* %arrayidx182, i32 0, i64 %idxprom181
  %arrayidx184 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx183, i32 0, i64 %idxprom180
  %arrayidx185 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx184, i32 0, i64 %idxprom179
  %111 = load i32, i32* %arrayidx185, align 4
  %112 = load i32, i32* %jj, align 4
  %idxprom186 = sext i32 %112 to i64
  %113 = load i32, i32* %j, align 4
  %idxprom187 = sext i32 %113 to i64
  %114 = load i32, i32* %ii, align 4
  %idxprom188 = sext i32 %114 to i64
  %arrayidx189 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]], [4 x [4 x [4 x [4 x i32]]]]* %M0, i32 0, i64 3
  %arrayidx190 = getelementptr inbounds [4 x [4 x [4 x i32]]], [4 x [4 x [4 x i32]]]* %arrayidx189, i32 0, i64 %idxprom188
  %arrayidx191 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx190, i32 0, i64 %idxprom187
  %arrayidx192 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx191, i32 0, i64 %idxprom186
  %115 = load i32, i32* %arrayidx192, align 4
  %sub193 = sub nsw i32 %111, %115
  %arrayidx194 = getelementptr inbounds [4 x i32], [4 x i32]* %M3, i32 0, i64 3
  store i32 %sub193, i32* %arrayidx194, align 4
  %arrayidx195 = getelementptr inbounds [4 x i32], [4 x i32]* %M3, i32 0, i64 0
  %116 = load i32, i32* %arrayidx195, align 4
  %arrayidx196 = getelementptr inbounds [4 x i32], [4 x i32]* %M3, i32 0, i64 1
  %117 = load i32, i32* %arrayidx196, align 4
  %add197 = add nsw i32 %116, %117
  %118 = load i32, i32* %jj, align 4
  %idxprom198 = sext i32 %118 to i64
  %119 = load i32, i32* %j, align 4
  %idxprom199 = sext i32 %119 to i64
  %120 = load i32, i32* %ii, align 4
  %idxprom200 = sext i32 %120 to i64
  %arrayidx201 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]], [4 x [4 x [4 x [4 x i32]]]]* %M0, i32 0, i64 0
  %arrayidx202 = getelementptr inbounds [4 x [4 x [4 x i32]]], [4 x [4 x [4 x i32]]]* %arrayidx201, i32 0, i64 %idxprom200
  %arrayidx203 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx202, i32 0, i64 %idxprom199
  %arrayidx204 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx203, i32 0, i64 %idxprom198
  store i32 %add197, i32* %arrayidx204, align 4
  %arrayidx205 = getelementptr inbounds [4 x i32], [4 x i32]* %M3, i32 0, i64 0
  %121 = load i32, i32* %arrayidx205, align 4
  %arrayidx206 = getelementptr inbounds [4 x i32], [4 x i32]* %M3, i32 0, i64 1
  %122 = load i32, i32* %arrayidx206, align 4
  %sub207 = sub nsw i32 %121, %122
  %123 = load i32, i32* %jj, align 4
  %idxprom208 = sext i32 %123 to i64
  %124 = load i32, i32* %j, align 4
  %idxprom209 = sext i32 %124 to i64
  %125 = load i32, i32* %ii, align 4
  %idxprom210 = sext i32 %125 to i64
  %arrayidx211 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]], [4 x [4 x [4 x [4 x i32]]]]* %M0, i32 0, i64 2
  %arrayidx212 = getelementptr inbounds [4 x [4 x [4 x i32]]], [4 x [4 x [4 x i32]]]* %arrayidx211, i32 0, i64 %idxprom210
  %arrayidx213 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx212, i32 0, i64 %idxprom209
  %arrayidx214 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx213, i32 0, i64 %idxprom208
  store i32 %sub207, i32* %arrayidx214, align 4
  %arrayidx215 = getelementptr inbounds [4 x i32], [4 x i32]* %M3, i32 0, i64 2
  %126 = load i32, i32* %arrayidx215, align 4
  %arrayidx216 = getelementptr inbounds [4 x i32], [4 x i32]* %M3, i32 0, i64 3
  %127 = load i32, i32* %arrayidx216, align 4
  %add217 = add nsw i32 %126, %127
  %128 = load i32, i32* %jj, align 4
  %idxprom218 = sext i32 %128 to i64
  %129 = load i32, i32* %j, align 4
  %idxprom219 = sext i32 %129 to i64
  %130 = load i32, i32* %ii, align 4
  %idxprom220 = sext i32 %130 to i64
  %arrayidx221 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]], [4 x [4 x [4 x [4 x i32]]]]* %M0, i32 0, i64 1
  %arrayidx222 = getelementptr inbounds [4 x [4 x [4 x i32]]], [4 x [4 x [4 x i32]]]* %arrayidx221, i32 0, i64 %idxprom220
  %arrayidx223 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx222, i32 0, i64 %idxprom219
  %arrayidx224 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx223, i32 0, i64 %idxprom218
  store i32 %add217, i32* %arrayidx224, align 4
  %arrayidx225 = getelementptr inbounds [4 x i32], [4 x i32]* %M3, i32 0, i64 3
  %131 = load i32, i32* %arrayidx225, align 4
  %arrayidx226 = getelementptr inbounds [4 x i32], [4 x i32]* %M3, i32 0, i64 2
  %132 = load i32, i32* %arrayidx226, align 4
  %sub227 = sub nsw i32 %131, %132
  %133 = load i32, i32* %jj, align 4
  %idxprom228 = sext i32 %133 to i64
  %134 = load i32, i32* %j, align 4
  %idxprom229 = sext i32 %134 to i64
  %135 = load i32, i32* %ii, align 4
  %idxprom230 = sext i32 %135 to i64
  %arrayidx231 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]], [4 x [4 x [4 x [4 x i32]]]]* %M0, i32 0, i64 3
  %arrayidx232 = getelementptr inbounds [4 x [4 x [4 x i32]]], [4 x [4 x [4 x i32]]]* %arrayidx231, i32 0, i64 %idxprom230
  %arrayidx233 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx232, i32 0, i64 %idxprom229
  %arrayidx234 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx233, i32 0, i64 %idxprom228
  store i32 %sub227, i32* %arrayidx234, align 4
  br label %for.inc.235

for.inc.235:                                      ; preds = %for.body.130
  %136 = load i32, i32* %j, align 4
  %inc236 = add nsw i32 %136, 1
  store i32 %inc236, i32* %j, align 4
  br label %for.cond.127

for.end.237:                                      ; preds = %for.cond.127
  store i32 0, i32* %i, align 4
  br label %for.cond.238

for.cond.238:                                     ; preds = %for.inc.367, %for.end.237
  %137 = load i32, i32* %i, align 4
  %cmp239 = icmp slt i32 %137, 4
  br i1 %cmp239, label %for.body.241, label %for.end.369

for.body.241:                                     ; preds = %for.cond.238
  %138 = load i32, i32* %jj, align 4
  %idxprom242 = sext i32 %138 to i64
  %139 = load i32, i32* %ii, align 4
  %idxprom243 = sext i32 %139 to i64
  %140 = load i32, i32* %i, align 4
  %idxprom244 = sext i32 %140 to i64
  %arrayidx245 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]], [4 x [4 x [4 x [4 x i32]]]]* %M0, i32 0, i64 %idxprom244
  %arrayidx246 = getelementptr inbounds [4 x [4 x [4 x i32]]], [4 x [4 x [4 x i32]]]* %arrayidx245, i32 0, i64 %idxprom243
  %arrayidx247 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx246, i32 0, i64 0
  %arrayidx248 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx247, i32 0, i64 %idxprom242
  %141 = load i32, i32* %arrayidx248, align 4
  %142 = load i32, i32* %jj, align 4
  %idxprom249 = sext i32 %142 to i64
  %143 = load i32, i32* %ii, align 4
  %idxprom250 = sext i32 %143 to i64
  %144 = load i32, i32* %i, align 4
  %idxprom251 = sext i32 %144 to i64
  %arrayidx252 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]], [4 x [4 x [4 x [4 x i32]]]]* %M0, i32 0, i64 %idxprom251
  %arrayidx253 = getelementptr inbounds [4 x [4 x [4 x i32]]], [4 x [4 x [4 x i32]]]* %arrayidx252, i32 0, i64 %idxprom250
  %arrayidx254 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx253, i32 0, i64 3
  %arrayidx255 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx254, i32 0, i64 %idxprom249
  %145 = load i32, i32* %arrayidx255, align 4
  %add256 = add nsw i32 %141, %145
  %arrayidx257 = getelementptr inbounds [4 x i32], [4 x i32]* %M3, i32 0, i64 0
  store i32 %add256, i32* %arrayidx257, align 4
  %146 = load i32, i32* %jj, align 4
  %idxprom258 = sext i32 %146 to i64
  %147 = load i32, i32* %ii, align 4
  %idxprom259 = sext i32 %147 to i64
  %148 = load i32, i32* %i, align 4
  %idxprom260 = sext i32 %148 to i64
  %arrayidx261 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]], [4 x [4 x [4 x [4 x i32]]]]* %M0, i32 0, i64 %idxprom260
  %arrayidx262 = getelementptr inbounds [4 x [4 x [4 x i32]]], [4 x [4 x [4 x i32]]]* %arrayidx261, i32 0, i64 %idxprom259
  %arrayidx263 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx262, i32 0, i64 1
  %arrayidx264 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx263, i32 0, i64 %idxprom258
  %149 = load i32, i32* %arrayidx264, align 4
  %150 = load i32, i32* %jj, align 4
  %idxprom265 = sext i32 %150 to i64
  %151 = load i32, i32* %ii, align 4
  %idxprom266 = sext i32 %151 to i64
  %152 = load i32, i32* %i, align 4
  %idxprom267 = sext i32 %152 to i64
  %arrayidx268 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]], [4 x [4 x [4 x [4 x i32]]]]* %M0, i32 0, i64 %idxprom267
  %arrayidx269 = getelementptr inbounds [4 x [4 x [4 x i32]]], [4 x [4 x [4 x i32]]]* %arrayidx268, i32 0, i64 %idxprom266
  %arrayidx270 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx269, i32 0, i64 2
  %arrayidx271 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx270, i32 0, i64 %idxprom265
  %153 = load i32, i32* %arrayidx271, align 4
  %add272 = add nsw i32 %149, %153
  %arrayidx273 = getelementptr inbounds [4 x i32], [4 x i32]* %M3, i32 0, i64 1
  store i32 %add272, i32* %arrayidx273, align 4
  %154 = load i32, i32* %jj, align 4
  %idxprom274 = sext i32 %154 to i64
  %155 = load i32, i32* %ii, align 4
  %idxprom275 = sext i32 %155 to i64
  %156 = load i32, i32* %i, align 4
  %idxprom276 = sext i32 %156 to i64
  %arrayidx277 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]], [4 x [4 x [4 x [4 x i32]]]]* %M0, i32 0, i64 %idxprom276
  %arrayidx278 = getelementptr inbounds [4 x [4 x [4 x i32]]], [4 x [4 x [4 x i32]]]* %arrayidx277, i32 0, i64 %idxprom275
  %arrayidx279 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx278, i32 0, i64 1
  %arrayidx280 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx279, i32 0, i64 %idxprom274
  %157 = load i32, i32* %arrayidx280, align 4
  %158 = load i32, i32* %jj, align 4
  %idxprom281 = sext i32 %158 to i64
  %159 = load i32, i32* %ii, align 4
  %idxprom282 = sext i32 %159 to i64
  %160 = load i32, i32* %i, align 4
  %idxprom283 = sext i32 %160 to i64
  %arrayidx284 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]], [4 x [4 x [4 x [4 x i32]]]]* %M0, i32 0, i64 %idxprom283
  %arrayidx285 = getelementptr inbounds [4 x [4 x [4 x i32]]], [4 x [4 x [4 x i32]]]* %arrayidx284, i32 0, i64 %idxprom282
  %arrayidx286 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx285, i32 0, i64 2
  %arrayidx287 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx286, i32 0, i64 %idxprom281
  %161 = load i32, i32* %arrayidx287, align 4
  %sub288 = sub nsw i32 %157, %161
  %arrayidx289 = getelementptr inbounds [4 x i32], [4 x i32]* %M3, i32 0, i64 2
  store i32 %sub288, i32* %arrayidx289, align 4
  %162 = load i32, i32* %jj, align 4
  %idxprom290 = sext i32 %162 to i64
  %163 = load i32, i32* %ii, align 4
  %idxprom291 = sext i32 %163 to i64
  %164 = load i32, i32* %i, align 4
  %idxprom292 = sext i32 %164 to i64
  %arrayidx293 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]], [4 x [4 x [4 x [4 x i32]]]]* %M0, i32 0, i64 %idxprom292
  %arrayidx294 = getelementptr inbounds [4 x [4 x [4 x i32]]], [4 x [4 x [4 x i32]]]* %arrayidx293, i32 0, i64 %idxprom291
  %arrayidx295 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx294, i32 0, i64 0
  %arrayidx296 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx295, i32 0, i64 %idxprom290
  %165 = load i32, i32* %arrayidx296, align 4
  %166 = load i32, i32* %jj, align 4
  %idxprom297 = sext i32 %166 to i64
  %167 = load i32, i32* %ii, align 4
  %idxprom298 = sext i32 %167 to i64
  %168 = load i32, i32* %i, align 4
  %idxprom299 = sext i32 %168 to i64
  %arrayidx300 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]], [4 x [4 x [4 x [4 x i32]]]]* %M0, i32 0, i64 %idxprom299
  %arrayidx301 = getelementptr inbounds [4 x [4 x [4 x i32]]], [4 x [4 x [4 x i32]]]* %arrayidx300, i32 0, i64 %idxprom298
  %arrayidx302 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx301, i32 0, i64 3
  %arrayidx303 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx302, i32 0, i64 %idxprom297
  %169 = load i32, i32* %arrayidx303, align 4
  %sub304 = sub nsw i32 %165, %169
  %arrayidx305 = getelementptr inbounds [4 x i32], [4 x i32]* %M3, i32 0, i64 3
  store i32 %sub304, i32* %arrayidx305, align 4
  %arrayidx306 = getelementptr inbounds [4 x i32], [4 x i32]* %M3, i32 0, i64 0
  %170 = load i32, i32* %arrayidx306, align 4
  %arrayidx307 = getelementptr inbounds [4 x i32], [4 x i32]* %M3, i32 0, i64 1
  %171 = load i32, i32* %arrayidx307, align 4
  %add308 = add nsw i32 %170, %171
  %172 = load i32, i32* %jj, align 4
  %idxprom309 = sext i32 %172 to i64
  %173 = load i32, i32* %ii, align 4
  %idxprom310 = sext i32 %173 to i64
  %174 = load i32, i32* %i, align 4
  %idxprom311 = sext i32 %174 to i64
  %arrayidx312 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]], [4 x [4 x [4 x [4 x i32]]]]* %M0, i32 0, i64 %idxprom311
  %arrayidx313 = getelementptr inbounds [4 x [4 x [4 x i32]]], [4 x [4 x [4 x i32]]]* %arrayidx312, i32 0, i64 %idxprom310
  %arrayidx314 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx313, i32 0, i64 0
  %arrayidx315 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx314, i32 0, i64 %idxprom309
  store i32 %add308, i32* %arrayidx315, align 4
  %arrayidx316 = getelementptr inbounds [4 x i32], [4 x i32]* %M3, i32 0, i64 0
  %175 = load i32, i32* %arrayidx316, align 4
  %arrayidx317 = getelementptr inbounds [4 x i32], [4 x i32]* %M3, i32 0, i64 1
  %176 = load i32, i32* %arrayidx317, align 4
  %sub318 = sub nsw i32 %175, %176
  %177 = load i32, i32* %jj, align 4
  %idxprom319 = sext i32 %177 to i64
  %178 = load i32, i32* %ii, align 4
  %idxprom320 = sext i32 %178 to i64
  %179 = load i32, i32* %i, align 4
  %idxprom321 = sext i32 %179 to i64
  %arrayidx322 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]], [4 x [4 x [4 x [4 x i32]]]]* %M0, i32 0, i64 %idxprom321
  %arrayidx323 = getelementptr inbounds [4 x [4 x [4 x i32]]], [4 x [4 x [4 x i32]]]* %arrayidx322, i32 0, i64 %idxprom320
  %arrayidx324 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx323, i32 0, i64 2
  %arrayidx325 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx324, i32 0, i64 %idxprom319
  store i32 %sub318, i32* %arrayidx325, align 4
  %arrayidx326 = getelementptr inbounds [4 x i32], [4 x i32]* %M3, i32 0, i64 2
  %180 = load i32, i32* %arrayidx326, align 4
  %arrayidx327 = getelementptr inbounds [4 x i32], [4 x i32]* %M3, i32 0, i64 3
  %181 = load i32, i32* %arrayidx327, align 4
  %add328 = add nsw i32 %180, %181
  %182 = load i32, i32* %jj, align 4
  %idxprom329 = sext i32 %182 to i64
  %183 = load i32, i32* %ii, align 4
  %idxprom330 = sext i32 %183 to i64
  %184 = load i32, i32* %i, align 4
  %idxprom331 = sext i32 %184 to i64
  %arrayidx332 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]], [4 x [4 x [4 x [4 x i32]]]]* %M0, i32 0, i64 %idxprom331
  %arrayidx333 = getelementptr inbounds [4 x [4 x [4 x i32]]], [4 x [4 x [4 x i32]]]* %arrayidx332, i32 0, i64 %idxprom330
  %arrayidx334 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx333, i32 0, i64 1
  %arrayidx335 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx334, i32 0, i64 %idxprom329
  store i32 %add328, i32* %arrayidx335, align 4
  %arrayidx336 = getelementptr inbounds [4 x i32], [4 x i32]* %M3, i32 0, i64 3
  %185 = load i32, i32* %arrayidx336, align 4
  %arrayidx337 = getelementptr inbounds [4 x i32], [4 x i32]* %M3, i32 0, i64 2
  %186 = load i32, i32* %arrayidx337, align 4
  %sub338 = sub nsw i32 %185, %186
  %187 = load i32, i32* %jj, align 4
  %idxprom339 = sext i32 %187 to i64
  %188 = load i32, i32* %ii, align 4
  %idxprom340 = sext i32 %188 to i64
  %189 = load i32, i32* %i, align 4
  %idxprom341 = sext i32 %189 to i64
  %arrayidx342 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]], [4 x [4 x [4 x [4 x i32]]]]* %M0, i32 0, i64 %idxprom341
  %arrayidx343 = getelementptr inbounds [4 x [4 x [4 x i32]]], [4 x [4 x [4 x i32]]]* %arrayidx342, i32 0, i64 %idxprom340
  %arrayidx344 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx343, i32 0, i64 3
  %arrayidx345 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx344, i32 0, i64 %idxprom339
  store i32 %sub338, i32* %arrayidx345, align 4
  store i32 0, i32* %j, align 4
  br label %for.cond.346

for.cond.346:                                     ; preds = %for.inc.364, %for.body.241
  %190 = load i32, i32* %j, align 4
  %cmp347 = icmp slt i32 %190, 4
  br i1 %cmp347, label %for.body.349, label %for.end.366

for.body.349:                                     ; preds = %for.cond.346
  %191 = load i32, i32* %i, align 4
  %192 = load i32, i32* %j, align 4
  %add350 = add nsw i32 %191, %192
  %cmp351 = icmp ne i32 %add350, 0
  br i1 %cmp351, label %if.then.353, label %if.end.363

if.then.353:                                      ; preds = %for.body.349
  %193 = load i32, i32* %jj, align 4
  %idxprom354 = sext i32 %193 to i64
  %194 = load i32, i32* %j, align 4
  %idxprom355 = sext i32 %194 to i64
  %195 = load i32, i32* %ii, align 4
  %idxprom356 = sext i32 %195 to i64
  %196 = load i32, i32* %i, align 4
  %idxprom357 = sext i32 %196 to i64
  %arrayidx358 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]], [4 x [4 x [4 x [4 x i32]]]]* %M0, i32 0, i64 %idxprom357
  %arrayidx359 = getelementptr inbounds [4 x [4 x [4 x i32]]], [4 x [4 x [4 x i32]]]* %arrayidx358, i32 0, i64 %idxprom356
  %arrayidx360 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx359, i32 0, i64 %idxprom355
  %arrayidx361 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx360, i32 0, i64 %idxprom354
  %197 = load i32, i32* %arrayidx361, align 4
  %call = call i32 @abs(i32 %197) #6
  %198 = load i32, i32* %current_intra_sad_2, align 4
  %add362 = add nsw i32 %198, %call
  store i32 %add362, i32* %current_intra_sad_2, align 4
  br label %if.end.363

if.end.363:                                       ; preds = %if.then.353, %for.body.349
  br label %for.inc.364

for.inc.364:                                      ; preds = %if.end.363
  %199 = load i32, i32* %j, align 4
  %inc365 = add nsw i32 %199, 1
  store i32 %inc365, i32* %j, align 4
  br label %for.cond.346

for.end.366:                                      ; preds = %for.cond.346
  br label %for.inc.367

for.inc.367:                                      ; preds = %for.end.366
  %200 = load i32, i32* %i, align 4
  %inc368 = add nsw i32 %200, 1
  store i32 %inc368, i32* %i, align 4
  br label %for.cond.238

for.end.369:                                      ; preds = %for.cond.238
  br label %for.inc.370

for.inc.370:                                      ; preds = %for.end.369
  %201 = load i32, i32* %ii, align 4
  %inc371 = add nsw i32 %201, 1
  store i32 %inc371, i32* %ii, align 4
  br label %for.cond.123

for.end.372:                                      ; preds = %for.cond.123
  br label %for.inc.373

for.inc.373:                                      ; preds = %for.end.372
  %202 = load i32, i32* %jj, align 4
  %inc374 = add nsw i32 %202, 1
  store i32 %inc374, i32* %jj, align 4
  br label %for.cond.119

for.end.375:                                      ; preds = %for.cond.119
  store i32 0, i32* %j, align 4
  br label %for.cond.376

for.cond.376:                                     ; preds = %for.inc.398, %for.end.375
  %203 = load i32, i32* %j, align 4
  %cmp377 = icmp slt i32 %203, 4
  br i1 %cmp377, label %for.body.379, label %for.end.400

for.body.379:                                     ; preds = %for.cond.376
  store i32 0, i32* %i, align 4
  br label %for.cond.380

for.cond.380:                                     ; preds = %for.inc.395, %for.body.379
  %204 = load i32, i32* %i, align 4
  %cmp381 = icmp slt i32 %204, 4
  br i1 %cmp381, label %for.body.383, label %for.end.397

for.body.383:                                     ; preds = %for.cond.380
  %205 = load i32, i32* %j, align 4
  %idxprom384 = sext i32 %205 to i64
  %206 = load i32, i32* %i, align 4
  %idxprom385 = sext i32 %206 to i64
  %arrayidx386 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]], [4 x [4 x [4 x [4 x i32]]]]* %M0, i32 0, i64 0
  %arrayidx387 = getelementptr inbounds [4 x [4 x [4 x i32]]], [4 x [4 x [4 x i32]]]* %arrayidx386, i32 0, i64 %idxprom385
  %arrayidx388 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx387, i32 0, i64 0
  %arrayidx389 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx388, i32 0, i64 %idxprom384
  %207 = load i32, i32* %arrayidx389, align 4
  %div390 = sdiv i32 %207, 4
  %208 = load i32, i32* %j, align 4
  %idxprom391 = sext i32 %208 to i64
  %209 = load i32, i32* %i, align 4
  %idxprom392 = sext i32 %209 to i64
  %arrayidx393 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %M4, i32 0, i64 %idxprom392
  %arrayidx394 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx393, i32 0, i64 %idxprom391
  store i32 %div390, i32* %arrayidx394, align 4
  br label %for.inc.395

for.inc.395:                                      ; preds = %for.body.383
  %210 = load i32, i32* %i, align 4
  %inc396 = add nsw i32 %210, 1
  store i32 %inc396, i32* %i, align 4
  br label %for.cond.380

for.end.397:                                      ; preds = %for.cond.380
  br label %for.inc.398

for.inc.398:                                      ; preds = %for.end.397
  %211 = load i32, i32* %j, align 4
  %inc399 = add nsw i32 %211, 1
  store i32 %inc399, i32* %j, align 4
  br label %for.cond.376

for.end.400:                                      ; preds = %for.cond.376
  store i32 0, i32* %j, align 4
  br label %for.cond.401

for.cond.401:                                     ; preds = %for.inc.461, %for.end.400
  %212 = load i32, i32* %j, align 4
  %cmp402 = icmp slt i32 %212, 4
  br i1 %cmp402, label %for.body.404, label %for.end.463

for.body.404:                                     ; preds = %for.cond.401
  %213 = load i32, i32* %j, align 4
  %idxprom405 = sext i32 %213 to i64
  %arrayidx406 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %M4, i32 0, i64 0
  %arrayidx407 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx406, i32 0, i64 %idxprom405
  %214 = load i32, i32* %arrayidx407, align 4
  %215 = load i32, i32* %j, align 4
  %idxprom408 = sext i32 %215 to i64
  %arrayidx409 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %M4, i32 0, i64 3
  %arrayidx410 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx409, i32 0, i64 %idxprom408
  %216 = load i32, i32* %arrayidx410, align 4
  %add411 = add nsw i32 %214, %216
  %arrayidx412 = getelementptr inbounds [4 x i32], [4 x i32]* %M3, i32 0, i64 0
  store i32 %add411, i32* %arrayidx412, align 4
  %217 = load i32, i32* %j, align 4
  %idxprom413 = sext i32 %217 to i64
  %arrayidx414 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %M4, i32 0, i64 1
  %arrayidx415 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx414, i32 0, i64 %idxprom413
  %218 = load i32, i32* %arrayidx415, align 4
  %219 = load i32, i32* %j, align 4
  %idxprom416 = sext i32 %219 to i64
  %arrayidx417 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %M4, i32 0, i64 2
  %arrayidx418 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx417, i32 0, i64 %idxprom416
  %220 = load i32, i32* %arrayidx418, align 4
  %add419 = add nsw i32 %218, %220
  %arrayidx420 = getelementptr inbounds [4 x i32], [4 x i32]* %M3, i32 0, i64 1
  store i32 %add419, i32* %arrayidx420, align 4
  %221 = load i32, i32* %j, align 4
  %idxprom421 = sext i32 %221 to i64
  %arrayidx422 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %M4, i32 0, i64 1
  %arrayidx423 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx422, i32 0, i64 %idxprom421
  %222 = load i32, i32* %arrayidx423, align 4
  %223 = load i32, i32* %j, align 4
  %idxprom424 = sext i32 %223 to i64
  %arrayidx425 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %M4, i32 0, i64 2
  %arrayidx426 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx425, i32 0, i64 %idxprom424
  %224 = load i32, i32* %arrayidx426, align 4
  %sub427 = sub nsw i32 %222, %224
  %arrayidx428 = getelementptr inbounds [4 x i32], [4 x i32]* %M3, i32 0, i64 2
  store i32 %sub427, i32* %arrayidx428, align 4
  %225 = load i32, i32* %j, align 4
  %idxprom429 = sext i32 %225 to i64
  %arrayidx430 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %M4, i32 0, i64 0
  %arrayidx431 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx430, i32 0, i64 %idxprom429
  %226 = load i32, i32* %arrayidx431, align 4
  %227 = load i32, i32* %j, align 4
  %idxprom432 = sext i32 %227 to i64
  %arrayidx433 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %M4, i32 0, i64 3
  %arrayidx434 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx433, i32 0, i64 %idxprom432
  %228 = load i32, i32* %arrayidx434, align 4
  %sub435 = sub nsw i32 %226, %228
  %arrayidx436 = getelementptr inbounds [4 x i32], [4 x i32]* %M3, i32 0, i64 3
  store i32 %sub435, i32* %arrayidx436, align 4
  %arrayidx437 = getelementptr inbounds [4 x i32], [4 x i32]* %M3, i32 0, i64 0
  %229 = load i32, i32* %arrayidx437, align 4
  %arrayidx438 = getelementptr inbounds [4 x i32], [4 x i32]* %M3, i32 0, i64 1
  %230 = load i32, i32* %arrayidx438, align 4
  %add439 = add nsw i32 %229, %230
  %231 = load i32, i32* %j, align 4
  %idxprom440 = sext i32 %231 to i64
  %arrayidx441 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %M4, i32 0, i64 0
  %arrayidx442 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx441, i32 0, i64 %idxprom440
  store i32 %add439, i32* %arrayidx442, align 4
  %arrayidx443 = getelementptr inbounds [4 x i32], [4 x i32]* %M3, i32 0, i64 0
  %232 = load i32, i32* %arrayidx443, align 4
  %arrayidx444 = getelementptr inbounds [4 x i32], [4 x i32]* %M3, i32 0, i64 1
  %233 = load i32, i32* %arrayidx444, align 4
  %sub445 = sub nsw i32 %232, %233
  %234 = load i32, i32* %j, align 4
  %idxprom446 = sext i32 %234 to i64
  %arrayidx447 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %M4, i32 0, i64 2
  %arrayidx448 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx447, i32 0, i64 %idxprom446
  store i32 %sub445, i32* %arrayidx448, align 4
  %arrayidx449 = getelementptr inbounds [4 x i32], [4 x i32]* %M3, i32 0, i64 2
  %235 = load i32, i32* %arrayidx449, align 4
  %arrayidx450 = getelementptr inbounds [4 x i32], [4 x i32]* %M3, i32 0, i64 3
  %236 = load i32, i32* %arrayidx450, align 4
  %add451 = add nsw i32 %235, %236
  %237 = load i32, i32* %j, align 4
  %idxprom452 = sext i32 %237 to i64
  %arrayidx453 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %M4, i32 0, i64 1
  %arrayidx454 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx453, i32 0, i64 %idxprom452
  store i32 %add451, i32* %arrayidx454, align 4
  %arrayidx455 = getelementptr inbounds [4 x i32], [4 x i32]* %M3, i32 0, i64 3
  %238 = load i32, i32* %arrayidx455, align 4
  %arrayidx456 = getelementptr inbounds [4 x i32], [4 x i32]* %M3, i32 0, i64 2
  %239 = load i32, i32* %arrayidx456, align 4
  %sub457 = sub nsw i32 %238, %239
  %240 = load i32, i32* %j, align 4
  %idxprom458 = sext i32 %240 to i64
  %arrayidx459 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %M4, i32 0, i64 3
  %arrayidx460 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx459, i32 0, i64 %idxprom458
  store i32 %sub457, i32* %arrayidx460, align 4
  br label %for.inc.461

for.inc.461:                                      ; preds = %for.body.404
  %241 = load i32, i32* %j, align 4
  %inc462 = add nsw i32 %241, 1
  store i32 %inc462, i32* %j, align 4
  br label %for.cond.401

for.end.463:                                      ; preds = %for.cond.401
  store i32 0, i32* %i, align 4
  br label %for.cond.464

for.cond.464:                                     ; preds = %for.inc.537, %for.end.463
  %242 = load i32, i32* %i, align 4
  %cmp465 = icmp slt i32 %242, 4
  br i1 %cmp465, label %for.body.467, label %for.end.539

for.body.467:                                     ; preds = %for.cond.464
  %243 = load i32, i32* %i, align 4
  %idxprom468 = sext i32 %243 to i64
  %arrayidx469 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %M4, i32 0, i64 %idxprom468
  %arrayidx470 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx469, i32 0, i64 0
  %244 = load i32, i32* %arrayidx470, align 4
  %245 = load i32, i32* %i, align 4
  %idxprom471 = sext i32 %245 to i64
  %arrayidx472 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %M4, i32 0, i64 %idxprom471
  %arrayidx473 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx472, i32 0, i64 3
  %246 = load i32, i32* %arrayidx473, align 4
  %add474 = add nsw i32 %244, %246
  %arrayidx475 = getelementptr inbounds [4 x i32], [4 x i32]* %M3, i32 0, i64 0
  store i32 %add474, i32* %arrayidx475, align 4
  %247 = load i32, i32* %i, align 4
  %idxprom476 = sext i32 %247 to i64
  %arrayidx477 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %M4, i32 0, i64 %idxprom476
  %arrayidx478 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx477, i32 0, i64 1
  %248 = load i32, i32* %arrayidx478, align 4
  %249 = load i32, i32* %i, align 4
  %idxprom479 = sext i32 %249 to i64
  %arrayidx480 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %M4, i32 0, i64 %idxprom479
  %arrayidx481 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx480, i32 0, i64 2
  %250 = load i32, i32* %arrayidx481, align 4
  %add482 = add nsw i32 %248, %250
  %arrayidx483 = getelementptr inbounds [4 x i32], [4 x i32]* %M3, i32 0, i64 1
  store i32 %add482, i32* %arrayidx483, align 4
  %251 = load i32, i32* %i, align 4
  %idxprom484 = sext i32 %251 to i64
  %arrayidx485 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %M4, i32 0, i64 %idxprom484
  %arrayidx486 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx485, i32 0, i64 1
  %252 = load i32, i32* %arrayidx486, align 4
  %253 = load i32, i32* %i, align 4
  %idxprom487 = sext i32 %253 to i64
  %arrayidx488 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %M4, i32 0, i64 %idxprom487
  %arrayidx489 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx488, i32 0, i64 2
  %254 = load i32, i32* %arrayidx489, align 4
  %sub490 = sub nsw i32 %252, %254
  %arrayidx491 = getelementptr inbounds [4 x i32], [4 x i32]* %M3, i32 0, i64 2
  store i32 %sub490, i32* %arrayidx491, align 4
  %255 = load i32, i32* %i, align 4
  %idxprom492 = sext i32 %255 to i64
  %arrayidx493 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %M4, i32 0, i64 %idxprom492
  %arrayidx494 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx493, i32 0, i64 0
  %256 = load i32, i32* %arrayidx494, align 4
  %257 = load i32, i32* %i, align 4
  %idxprom495 = sext i32 %257 to i64
  %arrayidx496 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %M4, i32 0, i64 %idxprom495
  %arrayidx497 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx496, i32 0, i64 3
  %258 = load i32, i32* %arrayidx497, align 4
  %sub498 = sub nsw i32 %256, %258
  %arrayidx499 = getelementptr inbounds [4 x i32], [4 x i32]* %M3, i32 0, i64 3
  store i32 %sub498, i32* %arrayidx499, align 4
  %arrayidx500 = getelementptr inbounds [4 x i32], [4 x i32]* %M3, i32 0, i64 0
  %259 = load i32, i32* %arrayidx500, align 4
  %arrayidx501 = getelementptr inbounds [4 x i32], [4 x i32]* %M3, i32 0, i64 1
  %260 = load i32, i32* %arrayidx501, align 4
  %add502 = add nsw i32 %259, %260
  %261 = load i32, i32* %i, align 4
  %idxprom503 = sext i32 %261 to i64
  %arrayidx504 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %M4, i32 0, i64 %idxprom503
  %arrayidx505 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx504, i32 0, i64 0
  store i32 %add502, i32* %arrayidx505, align 4
  %arrayidx506 = getelementptr inbounds [4 x i32], [4 x i32]* %M3, i32 0, i64 0
  %262 = load i32, i32* %arrayidx506, align 4
  %arrayidx507 = getelementptr inbounds [4 x i32], [4 x i32]* %M3, i32 0, i64 1
  %263 = load i32, i32* %arrayidx507, align 4
  %sub508 = sub nsw i32 %262, %263
  %264 = load i32, i32* %i, align 4
  %idxprom509 = sext i32 %264 to i64
  %arrayidx510 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %M4, i32 0, i64 %idxprom509
  %arrayidx511 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx510, i32 0, i64 2
  store i32 %sub508, i32* %arrayidx511, align 4
  %arrayidx512 = getelementptr inbounds [4 x i32], [4 x i32]* %M3, i32 0, i64 2
  %265 = load i32, i32* %arrayidx512, align 4
  %arrayidx513 = getelementptr inbounds [4 x i32], [4 x i32]* %M3, i32 0, i64 3
  %266 = load i32, i32* %arrayidx513, align 4
  %add514 = add nsw i32 %265, %266
  %267 = load i32, i32* %i, align 4
  %idxprom515 = sext i32 %267 to i64
  %arrayidx516 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %M4, i32 0, i64 %idxprom515
  %arrayidx517 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx516, i32 0, i64 1
  store i32 %add514, i32* %arrayidx517, align 4
  %arrayidx518 = getelementptr inbounds [4 x i32], [4 x i32]* %M3, i32 0, i64 3
  %268 = load i32, i32* %arrayidx518, align 4
  %arrayidx519 = getelementptr inbounds [4 x i32], [4 x i32]* %M3, i32 0, i64 2
  %269 = load i32, i32* %arrayidx519, align 4
  %sub520 = sub nsw i32 %268, %269
  %270 = load i32, i32* %i, align 4
  %idxprom521 = sext i32 %270 to i64
  %arrayidx522 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %M4, i32 0, i64 %idxprom521
  %arrayidx523 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx522, i32 0, i64 3
  store i32 %sub520, i32* %arrayidx523, align 4
  store i32 0, i32* %j, align 4
  br label %for.cond.524

for.cond.524:                                     ; preds = %for.inc.534, %for.body.467
  %271 = load i32, i32* %j, align 4
  %cmp525 = icmp slt i32 %271, 4
  br i1 %cmp525, label %for.body.527, label %for.end.536

for.body.527:                                     ; preds = %for.cond.524
  %272 = load i32, i32* %j, align 4
  %idxprom528 = sext i32 %272 to i64
  %273 = load i32, i32* %i, align 4
  %idxprom529 = sext i32 %273 to i64
  %arrayidx530 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %M4, i32 0, i64 %idxprom529
  %arrayidx531 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx530, i32 0, i64 %idxprom528
  %274 = load i32, i32* %arrayidx531, align 4
  %call532 = call i32 @abs(i32 %274) #6
  %275 = load i32, i32* %current_intra_sad_2, align 4
  %add533 = add nsw i32 %275, %call532
  store i32 %add533, i32* %current_intra_sad_2, align 4
  br label %for.inc.534

for.inc.534:                                      ; preds = %for.body.527
  %276 = load i32, i32* %j, align 4
  %inc535 = add nsw i32 %276, 1
  store i32 %inc535, i32* %j, align 4
  br label %for.cond.524

for.end.536:                                      ; preds = %for.cond.524
  br label %for.inc.537

for.inc.537:                                      ; preds = %for.end.536
  %277 = load i32, i32* %i, align 4
  %inc538 = add nsw i32 %277, 1
  store i32 %inc538, i32* %i, align 4
  br label %for.cond.464

for.end.539:                                      ; preds = %for.cond.464
  %278 = load i32, i32* %current_intra_sad_2, align 4
  %279 = load i32, i32* %best_intra_sad2, align 4
  %cmp540 = icmp slt i32 %278, %279
  br i1 %cmp540, label %if.then.542, label %if.end.543

if.then.542:                                      ; preds = %for.end.539
  %280 = load i32, i32* %current_intra_sad_2, align 4
  store i32 %280, i32* %best_intra_sad2, align 4
  %281 = load i32, i32* %k, align 4
  %282 = load i32*, i32** %intra_mode.addr, align 8
  store i32 %281, i32* %282, align 4
  br label %if.end.543

if.end.543:                                       ; preds = %if.then.542, %for.end.539
  br label %if.end.544

if.end.544:                                       ; preds = %if.end.543, %if.then.74
  br label %for.inc.545

for.inc.545:                                      ; preds = %if.end.544, %if.then.56, %if.then.51
  %283 = load i32, i32* %k, align 4
  %inc546 = add nsw i32 %283, 1
  store i32 %inc546, i32* %k, align 4
  br label %for.cond.41

for.end.547:                                      ; preds = %for.cond.41
  %284 = load i32, i32* %best_intra_sad2, align 4
  %div548 = sdiv i32 %284, 2
  store i32 %div548, i32* %best_intra_sad2, align 4
  %285 = load i32, i32* %best_intra_sad2, align 4
  ret i32 %285
}

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { nounwind readnone "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone }
attributes #7 = { noreturn nounwind }

!llvm.ident = !{!0}

!0 = !{!"clang version 3.7.0 (tags/RELEASE_370/final)"}
