; ModuleID = 'mv-search.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.InputParameters = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [8 x [2 x i32]], [8 x [2 x i32]], i32, i32, i32, i32, [200 x i8], [200 x i8], [200 x i8], [200 x i8], [200 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1024 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, double, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [200 x i8], [200 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [200 x i8], i32, i32, i32*, i32*, i8*, i32*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [8 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [6 x double], [200 x i8], i32 }
%struct.ImageParameters = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32**, i32**, i32, i32***, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [9 x [16 x [16 x i16]]], [5 x [16 x [16 x i16]]], [9 x [8 x [8 x i16]]], [2 x [4 x [16 x [16 x i16]]]], [16 x [16 x i16]], [16 x [16 x i32]], i32****, i32***, %struct.Picture*, %struct.Slice*, %struct.macroblock*, [1200 x %struct.syntaxelement], i32*, i32*, i32, i32, i32, i32, [4 x [4 x i32]], i32, i32, i32, i32, i32, double, i32, i32, i32, i32, i16******, i16******, i16******, i16******, [15 x i16], i32, i32, i32, i32, i32, i32, i32, i32, [6 x [15 x i32]], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1 x i32], i32, i32, [2 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.DecRefPicMarking_s*, i32, i32, i32, i32, i32, double, i32, i32, i32, i32, i32, i32, i32, double*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32], i32, i32, i32 }
%struct.Picture = type { i32, i32, [100 x %struct.Slice*], i32, float, float, float }
%struct.Slice = type { i32, i32, i32, i32, i32, i32, %struct.datapartition*, %struct.MotionInfoContexts*, %struct.TextureInfoContexts*, %struct.RMPNIbuffer_s*, i32, i32*, i32*, i32*, i32, i32*, i32*, i32*, i32 (i32)*, [3 x [2 x i32]] }
%struct.datapartition = type { %struct.Bitstream*, %struct.EncodingEnvironment, i32 (%struct.syntaxelement*, %struct.datapartition*)* }
%struct.Bitstream = type { i32, i32, i8, i32, i32, i8, i8, i32, i32, i8*, i32 }
%struct.EncodingEnvironment = type { i32, i32, i32, i32, i32, i8*, i32*, i32, i32, i32, i32, i32, i8*, i32*, i32, i32, i32, i32, i32, i32 }
%struct.syntaxelement = type { i32, i32, i32, i32, i32, i32, i32, i32, void (i32, i32, i32*, i32*)*, void (%struct.syntaxelement*, %struct.EncodingEnvironment*)* }
%struct.MotionInfoContexts = type { [3 x [11 x %struct.BiContextType]], [2 x [9 x %struct.BiContextType]], [2 x [10 x %struct.BiContextType]], [2 x [6 x %struct.BiContextType]], [4 x %struct.BiContextType], [4 x %struct.BiContextType], [3 x %struct.BiContextType] }
%struct.BiContextType = type { i16, i8, i64 }
%struct.TextureInfoContexts = type { [2 x %struct.BiContextType], [4 x %struct.BiContextType], [3 x [4 x %struct.BiContextType]], [10 x [4 x %struct.BiContextType]], [10 x [15 x %struct.BiContextType]], [10 x [15 x %struct.BiContextType]], [10 x [5 x %struct.BiContextType]], [10 x [5 x %struct.BiContextType]], [10 x [15 x %struct.BiContextType]], [10 x [15 x %struct.BiContextType]] }
%struct.RMPNIbuffer_s = type { i32, i32, %struct.RMPNIbuffer_s* }
%struct.macroblock = type { i32, i32, i32, i32, i32, [8 x i32], %struct.macroblock*, %struct.macroblock*, i32, [2 x [4 x [4 x [2 x i32]]]], [16 x i32], [16 x i32], i32, i64, [4 x i32], [4 x i32], i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, double, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.DecRefPicMarking_s = type { i32, i32, i32, i32, i32, %struct.DecRefPicMarking_s* }
%struct.pic_parameter_set_rbsp_t = type { i32, i32, i32, i32, i32, i32, [8 x i32], i32, i32, i32, [8 x i32], [8 x i32], [8 x i32], i32, i32, i32, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.storable_picture = type { i32, i32, i32, i32, i32, i32, [6 x [33 x i64]], [6 x [33 x i64]], [6 x [33 x i64]], [6 x [33 x i64]], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16**, i16*, i16*, i16**, i16**, i16***, i8*, i16***, i64***, i64***, i16****, i8**, i8**, %struct.storable_picture*, %struct.storable_picture*, %struct.storable_picture*, i32, i32, i32, i32, i32, i32, i32 }
%struct.colocated_params = type { i32, i32, i32, [6 x [33 x i64]], i16***, i64***, i16****, i8**, [6 x [33 x i64]], i16***, i64***, i16****, i8**, [6 x [33 x i64]], i16***, i64***, i16****, i8**, i32, i8** }
%struct.pix_pos = type { i32, i32, i32, i32, i32, i32 }
%struct.timeb = type { i64, i16, i16, i16 }

@QP2QUANT = constant [40 x i32] [i32 1, i32 1, i32 1, i32 1, i32 2, i32 2, i32 2, i32 2, i32 3, i32 3, i32 3, i32 4, i32 4, i32 4, i32 5, i32 6, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 13, i32 14, i32 16, i32 18, i32 20, i32 23, i32 25, i32 29, i32 32, i32 36, i32 40, i32 45, i32 51, i32 57, i32 64, i32 72, i32 81, i32 91], align 16
@input = external global %struct.InputParameters*, align 8
@BlockSAD = internal global i32***** null, align 8
@.str = private unnamed_addr constant [42 x i8] c"InitializeFastFullIntegerSearch: BlockSAD\00", align 1
@img = external global %struct.ImageParameters*, align 8
@search_setup_done = internal global i32** null, align 8
@.str.1 = private unnamed_addr constant [51 x i8] c"InitializeFastFullIntegerSearch: search_setup_done\00", align 1
@search_center_x = internal global i32** null, align 8
@.str.2 = private unnamed_addr constant [49 x i8] c"InitializeFastFullIntegerSearch: search_center_x\00", align 1
@search_center_y = internal global i32** null, align 8
@.str.3 = private unnamed_addr constant [49 x i8] c"InitializeFastFullIntegerSearch: search_center_y\00", align 1
@pos_00 = internal global i32** null, align 8
@.str.4 = private unnamed_addr constant [40 x i8] c"InitializeFastFullIntegerSearch: pos_00\00", align 1
@max_search_range = internal global i32** null, align 8
@.str.5 = private unnamed_addr constant [50 x i8] c"InitializeFastFullIntegerSearch: max_search_range\00", align 1
@active_pps = external global %struct.pic_parameter_set_rbsp_t*, align 8
@listX = external global [6 x %struct.storable_picture**], align 16
@enc_picture = external global %struct.storable_picture*, align 8
@imgY_org = external global i16**, align 8
@PelYline_11 = internal global i16* (i16*, i32, i32, i32, i32)* null, align 8
@spiral_search_x = common global i32* null, align 8
@spiral_search_y = common global i32* null, align 8
@byte_abs = common global i32* null, align 8
@pred_SAD_space = external global i32, align 4
@FME_blocktype = external global i32, align 4
@all_bwmincost = external global i32*****, align 8
@all_mincost = external global i32*****, align 8
@max_mvd = common global i32 0, align 4
@.str.6 = private unnamed_addr constant [43 x i8] c"Init_Motion_Search_Module: spiral_search_x\00", align 1
@.str.7 = private unnamed_addr constant [43 x i8] c"Init_Motion_Search_Module: spiral_search_y\00", align 1
@mvbits = common global i32* null, align 8
@.str.8 = private unnamed_addr constant [34 x i8] c"Init_Motion_Search_Module: mvbits\00", align 1
@refbits = common global i32* null, align 8
@.str.9 = private unnamed_addr constant [35 x i8] c"Init_Motion_Search_Module: refbits\00", align 1
@.str.10 = private unnamed_addr constant [36 x i8] c"Init_Motion_Search_Module: byte_abs\00", align 1
@motion_cost = common global i32**** null, align 8
@PelY_14 = internal global i16 (i16**, i32, i32, i32, i32)* null, align 8
@wbp_weight = external global i32****, align 8
@luma_log_weight_denom = external global i32, align 4
@wp_offset = external global i32***, align 8
@wp_luma_round = external global i32, align 4
@PelY_14b = internal global i16 (i16**, i32, i32, i32, i32)* null, align 8
@BPredPartitionCost.bx0 = internal global [5 x [4 x i32]] [[4 x i32] zeroinitializer, [4 x i32] zeroinitializer, [4 x i32] zeroinitializer, [4 x i32] [i32 0, i32 2, i32 0, i32 0], [4 x i32] [i32 0, i32 2, i32 0, i32 2]], align 16
@BPredPartitionCost.by0 = internal global [5 x [4 x i32]] [[4 x i32] zeroinitializer, [4 x i32] zeroinitializer, [4 x i32] [i32 0, i32 2, i32 0, i32 0], [4 x i32] zeroinitializer, [4 x i32] [i32 0, i32 0, i32 2, i32 2]], align 16
@BlockMotionSearch.orig_val = internal global [256 x i16] zeroinitializer, align 16
@BlockMotionSearch.orig_pic = internal global [16 x i16*] [i16* getelementptr inbounds ([256 x i16], [256 x i16]* @BlockMotionSearch.orig_val, i32 0, i32 0), i16* bitcast (i8* getelementptr (i8, i8* bitcast ([256 x i16]* @BlockMotionSearch.orig_val to i8*), i64 32) to i16*), i16* bitcast (i8* getelementptr (i8, i8* bitcast ([256 x i16]* @BlockMotionSearch.orig_val to i8*), i64 64) to i16*), i16* bitcast (i8* getelementptr (i8, i8* bitcast ([256 x i16]* @BlockMotionSearch.orig_val to i8*), i64 96) to i16*), i16* bitcast (i8* getelementptr (i8, i8* bitcast ([256 x i16]* @BlockMotionSearch.orig_val to i8*), i64 128) to i16*), i16* bitcast (i8* getelementptr (i8, i8* bitcast ([256 x i16]* @BlockMotionSearch.orig_val to i8*), i64 160) to i16*), i16* bitcast (i8* getelementptr (i8, i8* bitcast ([256 x i16]* @BlockMotionSearch.orig_val to i8*), i64 192) to i16*), i16* bitcast (i8* getelementptr (i8, i8* bitcast ([256 x i16]* @BlockMotionSearch.orig_val to i8*), i64 224) to i16*), i16* bitcast (i8* getelementptr (i8, i8* bitcast ([256 x i16]* @BlockMotionSearch.orig_val to i8*), i64 256) to i16*), i16* bitcast (i8* getelementptr (i8, i8* bitcast ([256 x i16]* @BlockMotionSearch.orig_val to i8*), i64 288) to i16*), i16* bitcast (i8* getelementptr (i8, i8* bitcast ([256 x i16]* @BlockMotionSearch.orig_val to i8*), i64 320) to i16*), i16* bitcast (i8* getelementptr (i8, i8* bitcast ([256 x i16]* @BlockMotionSearch.orig_val to i8*), i64 352) to i16*), i16* bitcast (i8* getelementptr (i8, i8* bitcast ([256 x i16]* @BlockMotionSearch.orig_val to i8*), i64 384) to i16*), i16* bitcast (i8* getelementptr (i8, i8* bitcast ([256 x i16]* @BlockMotionSearch.orig_val to i8*), i64 416) to i16*), i16* bitcast (i8* getelementptr (i8, i8* bitcast ([256 x i16]* @BlockMotionSearch.orig_val to i8*), i64 448) to i16*), i16* bitcast (i8* getelementptr (i8, i8* bitcast ([256 x i16]* @BlockMotionSearch.orig_val to i8*), i64 480) to i16*)], align 16
@Bframe_ctr = external global i32, align 4
@pred_MV_uplayer = external global [2 x i32], align 4
@pred_SAD_uplayer = external global i32, align 4
@flag_intra_SAD = external global i32, align 4
@pred_SAD_time = external global i32, align 4
@pred_MV_time = external global [2 x i32], align 4
@pred_SAD_ref = external global i32, align 4
@pred_MV_ref = external global [2 x i32], align 4
@me_tot_time = external global i32, align 4
@me_time = external global i32, align 4
@BIDPartitionCost.bx0 = internal global [5 x [4 x i32]] [[4 x i32] zeroinitializer, [4 x i32] zeroinitializer, [4 x i32] zeroinitializer, [4 x i32] [i32 0, i32 2, i32 0, i32 0], [4 x i32] [i32 0, i32 2, i32 0, i32 2]], align 16
@BIDPartitionCost.by0 = internal global [5 x [4 x i32]] [[4 x i32] zeroinitializer, [4 x i32] zeroinitializer, [4 x i32] [i32 0, i32 2, i32 0, i32 0], [4 x i32] zeroinitializer, [4 x i32] [i32 0, i32 0, i32 2, i32 2]], align 16
@direct_pdir = external global i16**, align 8
@direct_ref_idx = external global i16***, align 8
@PartitionMotionSearch.bx0 = internal global [5 x [4 x i32]] [[4 x i32] zeroinitializer, [4 x i32] zeroinitializer, [4 x i32] zeroinitializer, [4 x i32] [i32 0, i32 2, i32 0, i32 0], [4 x i32] [i32 0, i32 2, i32 0, i32 2]], align 16
@PartitionMotionSearch.by0 = internal global [5 x [4 x i32]] [[4 x i32] zeroinitializer, [4 x i32] zeroinitializer, [4 x i32] [i32 0, i32 2, i32 0, i32 0], [4 x i32] zeroinitializer, [4 x i32] [i32 0, i32 0, i32 2, i32 2]], align 16
@listXsize = external global [6 x i32], align 16
@Co_located = external global %struct.colocated_params*, align 8

; Function Attrs: nounwind uwtable
define void @InitializeFastFullIntegerSearch() #0 {
entry:
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %list = alloca i32, align 4
  %search_range = alloca i32, align 4
  %max_pos = alloca i32, align 4
  %0 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %search_range1 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %0, i32 0, i32 8
  %1 = load i32, i32* %search_range1, align 4
  store i32 %1, i32* %search_range, align 4
  %2 = load i32, i32* %search_range, align 4
  %mul = mul nsw i32 2, %2
  %add = add nsw i32 %mul, 1
  %3 = load i32, i32* %search_range, align 4
  %mul2 = mul nsw i32 2, %3
  %add3 = add nsw i32 %mul2, 1
  %mul4 = mul nsw i32 %add, %add3
  store i32 %mul4, i32* %max_pos, align 4
  %call = call noalias i8* @malloc(i64 16) #3
  %4 = bitcast i8* %call to i32*****
  store i32***** %4, i32****** @BlockSAD, align 8
  %cmp = icmp eq i32***** %4, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @no_mem_exit(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i32 0, i32 0))
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, i32* %list, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc.67, %if.end
  %5 = load i32, i32* %list, align 4
  %cmp5 = icmp slt i32 %5, 2
  br i1 %cmp5, label %for.body, label %for.end.69

for.body:                                         ; preds = %for.cond
  %6 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_num_references = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %6, i32 0, i32 9
  %7 = load i32, i32* %max_num_references, align 4
  %add6 = add nsw i32 %7, 1
  %conv = sext i32 %add6 to i64
  %mul7 = mul i64 %conv, 8
  %call8 = call noalias i8* @malloc(i64 %mul7) #3
  %8 = bitcast i8* %call8 to i32****
  %9 = load i32, i32* %list, align 4
  %idxprom = sext i32 %9 to i64
  %10 = load i32*****, i32****** @BlockSAD, align 8
  %arrayidx = getelementptr inbounds i32****, i32***** %10, i64 %idxprom
  store i32**** %8, i32***** %arrayidx, align 8
  %cmp9 = icmp eq i32**** %8, null
  br i1 %cmp9, label %if.then.11, label %if.end.12

if.then.11:                                       ; preds = %for.body
  call void @no_mem_exit(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i32 0, i32 0))
  br label %if.end.12

if.end.12:                                        ; preds = %if.then.11, %for.body
  store i32 0, i32* %i, align 4
  br label %for.cond.13

for.cond.13:                                      ; preds = %for.inc.64, %if.end.12
  %11 = load i32, i32* %i, align 4
  %12 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_num_references14 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %12, i32 0, i32 9
  %13 = load i32, i32* %max_num_references14, align 4
  %cmp15 = icmp sle i32 %11, %13
  br i1 %cmp15, label %for.body.17, label %for.end.66

for.body.17:                                      ; preds = %for.cond.13
  %call18 = call noalias i8* @malloc(i64 64) #3
  %14 = bitcast i8* %call18 to i32***
  %15 = load i32, i32* %i, align 4
  %idxprom19 = sext i32 %15 to i64
  %16 = load i32, i32* %list, align 4
  %idxprom20 = sext i32 %16 to i64
  %17 = load i32*****, i32****** @BlockSAD, align 8
  %arrayidx21 = getelementptr inbounds i32****, i32***** %17, i64 %idxprom20
  %18 = load i32****, i32***** %arrayidx21, align 8
  %arrayidx22 = getelementptr inbounds i32***, i32**** %18, i64 %idxprom19
  store i32*** %14, i32**** %arrayidx22, align 8
  %cmp23 = icmp eq i32*** %14, null
  br i1 %cmp23, label %if.then.25, label %if.end.26

if.then.25:                                       ; preds = %for.body.17
  call void @no_mem_exit(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i32 0, i32 0))
  br label %if.end.26

if.end.26:                                        ; preds = %if.then.25, %for.body.17
  store i32 1, i32* %j, align 4
  br label %for.cond.27

for.cond.27:                                      ; preds = %for.inc.61, %if.end.26
  %19 = load i32, i32* %j, align 4
  %cmp28 = icmp slt i32 %19, 8
  br i1 %cmp28, label %for.body.30, label %for.end.63

for.body.30:                                      ; preds = %for.cond.27
  %call31 = call noalias i8* @malloc(i64 128) #3
  %20 = bitcast i8* %call31 to i32**
  %21 = load i32, i32* %j, align 4
  %idxprom32 = sext i32 %21 to i64
  %22 = load i32, i32* %i, align 4
  %idxprom33 = sext i32 %22 to i64
  %23 = load i32, i32* %list, align 4
  %idxprom34 = sext i32 %23 to i64
  %24 = load i32*****, i32****** @BlockSAD, align 8
  %arrayidx35 = getelementptr inbounds i32****, i32***** %24, i64 %idxprom34
  %25 = load i32****, i32***** %arrayidx35, align 8
  %arrayidx36 = getelementptr inbounds i32***, i32**** %25, i64 %idxprom33
  %26 = load i32***, i32**** %arrayidx36, align 8
  %arrayidx37 = getelementptr inbounds i32**, i32*** %26, i64 %idxprom32
  store i32** %20, i32*** %arrayidx37, align 8
  %cmp38 = icmp eq i32** %20, null
  br i1 %cmp38, label %if.then.40, label %if.end.41

if.then.40:                                       ; preds = %for.body.30
  call void @no_mem_exit(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i32 0, i32 0))
  br label %if.end.41

if.end.41:                                        ; preds = %if.then.40, %for.body.30
  store i32 0, i32* %k, align 4
  br label %for.cond.42

for.cond.42:                                      ; preds = %for.inc, %if.end.41
  %27 = load i32, i32* %k, align 4
  %cmp43 = icmp slt i32 %27, 16
  br i1 %cmp43, label %for.body.45, label %for.end

for.body.45:                                      ; preds = %for.cond.42
  %28 = load i32, i32* %max_pos, align 4
  %conv46 = sext i32 %28 to i64
  %mul47 = mul i64 %conv46, 4
  %call48 = call noalias i8* @malloc(i64 %mul47) #3
  %29 = bitcast i8* %call48 to i32*
  %30 = load i32, i32* %k, align 4
  %idxprom49 = sext i32 %30 to i64
  %31 = load i32, i32* %j, align 4
  %idxprom50 = sext i32 %31 to i64
  %32 = load i32, i32* %i, align 4
  %idxprom51 = sext i32 %32 to i64
  %33 = load i32, i32* %list, align 4
  %idxprom52 = sext i32 %33 to i64
  %34 = load i32*****, i32****** @BlockSAD, align 8
  %arrayidx53 = getelementptr inbounds i32****, i32***** %34, i64 %idxprom52
  %35 = load i32****, i32***** %arrayidx53, align 8
  %arrayidx54 = getelementptr inbounds i32***, i32**** %35, i64 %idxprom51
  %36 = load i32***, i32**** %arrayidx54, align 8
  %arrayidx55 = getelementptr inbounds i32**, i32*** %36, i64 %idxprom50
  %37 = load i32**, i32*** %arrayidx55, align 8
  %arrayidx56 = getelementptr inbounds i32*, i32** %37, i64 %idxprom49
  store i32* %29, i32** %arrayidx56, align 8
  %cmp57 = icmp eq i32* %29, null
  br i1 %cmp57, label %if.then.59, label %if.end.60

if.then.59:                                       ; preds = %for.body.45
  call void @no_mem_exit(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i32 0, i32 0))
  br label %if.end.60

if.end.60:                                        ; preds = %if.then.59, %for.body.45
  br label %for.inc

for.inc:                                          ; preds = %if.end.60
  %38 = load i32, i32* %k, align 4
  %inc = add nsw i32 %38, 1
  store i32 %inc, i32* %k, align 4
  br label %for.cond.42

for.end:                                          ; preds = %for.cond.42
  br label %for.inc.61

for.inc.61:                                       ; preds = %for.end
  %39 = load i32, i32* %j, align 4
  %inc62 = add nsw i32 %39, 1
  store i32 %inc62, i32* %j, align 4
  br label %for.cond.27

for.end.63:                                       ; preds = %for.cond.27
  br label %for.inc.64

for.inc.64:                                       ; preds = %for.end.63
  %40 = load i32, i32* %i, align 4
  %inc65 = add nsw i32 %40, 1
  store i32 %inc65, i32* %i, align 4
  br label %for.cond.13

for.end.66:                                       ; preds = %for.cond.13
  br label %for.inc.67

for.inc.67:                                       ; preds = %for.end.66
  %41 = load i32, i32* %list, align 4
  %inc68 = add nsw i32 %41, 1
  store i32 %inc68, i32* %list, align 4
  br label %for.cond

for.end.69:                                       ; preds = %for.cond
  %call70 = call noalias i8* @malloc(i64 16) #3
  %42 = bitcast i8* %call70 to i32**
  store i32** %42, i32*** @search_setup_done, align 8
  %cmp71 = icmp eq i32** %42, null
  br i1 %cmp71, label %if.then.73, label %if.end.74

if.then.73:                                       ; preds = %for.end.69
  call void @no_mem_exit(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1, i32 0, i32 0))
  br label %if.end.74

if.end.74:                                        ; preds = %if.then.73, %for.end.69
  %call75 = call noalias i8* @malloc(i64 16) #3
  %43 = bitcast i8* %call75 to i32**
  store i32** %43, i32*** @search_center_x, align 8
  %cmp76 = icmp eq i32** %43, null
  br i1 %cmp76, label %if.then.78, label %if.end.79

if.then.78:                                       ; preds = %if.end.74
  call void @no_mem_exit(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.2, i32 0, i32 0))
  br label %if.end.79

if.end.79:                                        ; preds = %if.then.78, %if.end.74
  %call80 = call noalias i8* @malloc(i64 16) #3
  %44 = bitcast i8* %call80 to i32**
  store i32** %44, i32*** @search_center_y, align 8
  %cmp81 = icmp eq i32** %44, null
  br i1 %cmp81, label %if.then.83, label %if.end.84

if.then.83:                                       ; preds = %if.end.79
  call void @no_mem_exit(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.3, i32 0, i32 0))
  br label %if.end.84

if.end.84:                                        ; preds = %if.then.83, %if.end.79
  %call85 = call noalias i8* @malloc(i64 16) #3
  %45 = bitcast i8* %call85 to i32**
  store i32** %45, i32*** @pos_00, align 8
  %cmp86 = icmp eq i32** %45, null
  br i1 %cmp86, label %if.then.88, label %if.end.89

if.then.88:                                       ; preds = %if.end.84
  call void @no_mem_exit(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.4, i32 0, i32 0))
  br label %if.end.89

if.end.89:                                        ; preds = %if.then.88, %if.end.84
  %call90 = call noalias i8* @malloc(i64 16) #3
  %46 = bitcast i8* %call90 to i32**
  store i32** %46, i32*** @max_search_range, align 8
  %cmp91 = icmp eq i32** %46, null
  br i1 %cmp91, label %if.then.93, label %if.end.94

if.then.93:                                       ; preds = %if.end.89
  call void @no_mem_exit(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.5, i32 0, i32 0))
  br label %if.end.94

if.end.94:                                        ; preds = %if.then.93, %if.end.89
  store i32 0, i32* %list, align 4
  br label %for.cond.95

for.cond.95:                                      ; preds = %for.inc.154, %if.end.94
  %47 = load i32, i32* %list, align 4
  %cmp96 = icmp slt i32 %47, 2
  br i1 %cmp96, label %for.body.98, label %for.end.156

for.body.98:                                      ; preds = %for.cond.95
  %48 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_num_references99 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %48, i32 0, i32 9
  %49 = load i32, i32* %max_num_references99, align 4
  %add100 = add nsw i32 %49, 1
  %conv101 = sext i32 %add100 to i64
  %mul102 = mul i64 %conv101, 4
  %call103 = call noalias i8* @malloc(i64 %mul102) #3
  %50 = bitcast i8* %call103 to i32*
  %51 = load i32, i32* %list, align 4
  %idxprom104 = sext i32 %51 to i64
  %52 = load i32**, i32*** @search_setup_done, align 8
  %arrayidx105 = getelementptr inbounds i32*, i32** %52, i64 %idxprom104
  store i32* %50, i32** %arrayidx105, align 8
  %cmp106 = icmp eq i32* %50, null
  br i1 %cmp106, label %if.then.108, label %if.end.109

if.then.108:                                      ; preds = %for.body.98
  call void @no_mem_exit(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1, i32 0, i32 0))
  br label %if.end.109

if.end.109:                                       ; preds = %if.then.108, %for.body.98
  %53 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_num_references110 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %53, i32 0, i32 9
  %54 = load i32, i32* %max_num_references110, align 4
  %add111 = add nsw i32 %54, 1
  %conv112 = sext i32 %add111 to i64
  %mul113 = mul i64 %conv112, 4
  %call114 = call noalias i8* @malloc(i64 %mul113) #3
  %55 = bitcast i8* %call114 to i32*
  %56 = load i32, i32* %list, align 4
  %idxprom115 = sext i32 %56 to i64
  %57 = load i32**, i32*** @search_center_x, align 8
  %arrayidx116 = getelementptr inbounds i32*, i32** %57, i64 %idxprom115
  store i32* %55, i32** %arrayidx116, align 8
  %cmp117 = icmp eq i32* %55, null
  br i1 %cmp117, label %if.then.119, label %if.end.120

if.then.119:                                      ; preds = %if.end.109
  call void @no_mem_exit(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.2, i32 0, i32 0))
  br label %if.end.120

if.end.120:                                       ; preds = %if.then.119, %if.end.109
  %58 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_num_references121 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %58, i32 0, i32 9
  %59 = load i32, i32* %max_num_references121, align 4
  %add122 = add nsw i32 %59, 1
  %conv123 = sext i32 %add122 to i64
  %mul124 = mul i64 %conv123, 4
  %call125 = call noalias i8* @malloc(i64 %mul124) #3
  %60 = bitcast i8* %call125 to i32*
  %61 = load i32, i32* %list, align 4
  %idxprom126 = sext i32 %61 to i64
  %62 = load i32**, i32*** @search_center_y, align 8
  %arrayidx127 = getelementptr inbounds i32*, i32** %62, i64 %idxprom126
  store i32* %60, i32** %arrayidx127, align 8
  %cmp128 = icmp eq i32* %60, null
  br i1 %cmp128, label %if.then.130, label %if.end.131

if.then.130:                                      ; preds = %if.end.120
  call void @no_mem_exit(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.3, i32 0, i32 0))
  br label %if.end.131

if.end.131:                                       ; preds = %if.then.130, %if.end.120
  %63 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_num_references132 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %63, i32 0, i32 9
  %64 = load i32, i32* %max_num_references132, align 4
  %add133 = add nsw i32 %64, 1
  %conv134 = sext i32 %add133 to i64
  %mul135 = mul i64 %conv134, 4
  %call136 = call noalias i8* @malloc(i64 %mul135) #3
  %65 = bitcast i8* %call136 to i32*
  %66 = load i32, i32* %list, align 4
  %idxprom137 = sext i32 %66 to i64
  %67 = load i32**, i32*** @pos_00, align 8
  %arrayidx138 = getelementptr inbounds i32*, i32** %67, i64 %idxprom137
  store i32* %65, i32** %arrayidx138, align 8
  %cmp139 = icmp eq i32* %65, null
  br i1 %cmp139, label %if.then.141, label %if.end.142

if.then.141:                                      ; preds = %if.end.131
  call void @no_mem_exit(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.4, i32 0, i32 0))
  br label %if.end.142

if.end.142:                                       ; preds = %if.then.141, %if.end.131
  %68 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_num_references143 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %68, i32 0, i32 9
  %69 = load i32, i32* %max_num_references143, align 4
  %add144 = add nsw i32 %69, 1
  %conv145 = sext i32 %add144 to i64
  %mul146 = mul i64 %conv145, 4
  %call147 = call noalias i8* @malloc(i64 %mul146) #3
  %70 = bitcast i8* %call147 to i32*
  %71 = load i32, i32* %list, align 4
  %idxprom148 = sext i32 %71 to i64
  %72 = load i32**, i32*** @max_search_range, align 8
  %arrayidx149 = getelementptr inbounds i32*, i32** %72, i64 %idxprom148
  store i32* %70, i32** %arrayidx149, align 8
  %cmp150 = icmp eq i32* %70, null
  br i1 %cmp150, label %if.then.152, label %if.end.153

if.then.152:                                      ; preds = %if.end.142
  call void @no_mem_exit(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.5, i32 0, i32 0))
  br label %if.end.153

if.end.153:                                       ; preds = %if.then.152, %if.end.142
  br label %for.inc.154

for.inc.154:                                      ; preds = %if.end.153
  %73 = load i32, i32* %list, align 4
  %inc155 = add nsw i32 %73, 1
  store i32 %inc155, i32* %list, align 4
  br label %for.cond.95

for.end.156:                                      ; preds = %for.cond.95
  %74 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %full_search = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %74, i32 0, i32 78
  %75 = load i32, i32* %full_search, align 4
  %cmp157 = icmp eq i32 %75, 2
  br i1 %cmp157, label %if.then.159, label %if.else

if.then.159:                                      ; preds = %for.end.156
  store i32 0, i32* %list, align 4
  br label %for.cond.160

for.cond.160:                                     ; preds = %for.inc.176, %if.then.159
  %76 = load i32, i32* %list, align 4
  %cmp161 = icmp slt i32 %76, 2
  br i1 %cmp161, label %for.body.163, label %for.end.178

for.body.163:                                     ; preds = %for.cond.160
  store i32 0, i32* %i, align 4
  br label %for.cond.164

for.cond.164:                                     ; preds = %for.inc.173, %for.body.163
  %77 = load i32, i32* %i, align 4
  %78 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_num_references165 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %78, i32 0, i32 9
  %79 = load i32, i32* %max_num_references165, align 4
  %cmp166 = icmp sle i32 %77, %79
  br i1 %cmp166, label %for.body.168, label %for.end.175

for.body.168:                                     ; preds = %for.cond.164
  %80 = load i32, i32* %search_range, align 4
  %81 = load i32, i32* %i, align 4
  %idxprom169 = sext i32 %81 to i64
  %82 = load i32, i32* %list, align 4
  %idxprom170 = sext i32 %82 to i64
  %83 = load i32**, i32*** @max_search_range, align 8
  %arrayidx171 = getelementptr inbounds i32*, i32** %83, i64 %idxprom170
  %84 = load i32*, i32** %arrayidx171, align 8
  %arrayidx172 = getelementptr inbounds i32, i32* %84, i64 %idxprom169
  store i32 %80, i32* %arrayidx172, align 4
  br label %for.inc.173

for.inc.173:                                      ; preds = %for.body.168
  %85 = load i32, i32* %i, align 4
  %inc174 = add nsw i32 %85, 1
  store i32 %inc174, i32* %i, align 4
  br label %for.cond.164

for.end.175:                                      ; preds = %for.cond.164
  br label %for.inc.176

for.inc.176:                                      ; preds = %for.end.175
  %86 = load i32, i32* %list, align 4
  %inc177 = add nsw i32 %86, 1
  store i32 %inc177, i32* %list, align 4
  br label %for.cond.160

for.end.178:                                      ; preds = %for.cond.160
  br label %if.end.206

if.else:                                          ; preds = %for.end.156
  store i32 0, i32* %list, align 4
  br label %for.cond.179

for.cond.179:                                     ; preds = %for.inc.203, %if.else
  %87 = load i32, i32* %list, align 4
  %cmp180 = icmp slt i32 %87, 2
  br i1 %cmp180, label %for.body.182, label %for.end.205

for.body.182:                                     ; preds = %for.cond.179
  %88 = load i32, i32* %search_range, align 4
  %89 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_num_references183 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %89, i32 0, i32 9
  %90 = load i32, i32* %max_num_references183, align 4
  %idxprom184 = sext i32 %90 to i64
  %91 = load i32, i32* %list, align 4
  %idxprom185 = sext i32 %91 to i64
  %92 = load i32**, i32*** @max_search_range, align 8
  %arrayidx186 = getelementptr inbounds i32*, i32** %92, i64 %idxprom185
  %93 = load i32*, i32** %arrayidx186, align 8
  %arrayidx187 = getelementptr inbounds i32, i32* %93, i64 %idxprom184
  store i32 %88, i32* %arrayidx187, align 4
  %94 = load i32, i32* %list, align 4
  %idxprom188 = sext i32 %94 to i64
  %95 = load i32**, i32*** @max_search_range, align 8
  %arrayidx189 = getelementptr inbounds i32*, i32** %95, i64 %idxprom188
  %96 = load i32*, i32** %arrayidx189, align 8
  %arrayidx190 = getelementptr inbounds i32, i32* %96, i64 0
  store i32 %88, i32* %arrayidx190, align 4
  store i32 1, i32* %i, align 4
  br label %for.cond.191

for.cond.191:                                     ; preds = %for.inc.200, %for.body.182
  %97 = load i32, i32* %i, align 4
  %98 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_num_references192 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %98, i32 0, i32 9
  %99 = load i32, i32* %max_num_references192, align 4
  %cmp193 = icmp slt i32 %97, %99
  br i1 %cmp193, label %for.body.195, label %for.end.202

for.body.195:                                     ; preds = %for.cond.191
  %100 = load i32, i32* %search_range, align 4
  %div = sdiv i32 %100, 2
  %101 = load i32, i32* %i, align 4
  %idxprom196 = sext i32 %101 to i64
  %102 = load i32, i32* %list, align 4
  %idxprom197 = sext i32 %102 to i64
  %103 = load i32**, i32*** @max_search_range, align 8
  %arrayidx198 = getelementptr inbounds i32*, i32** %103, i64 %idxprom197
  %104 = load i32*, i32** %arrayidx198, align 8
  %arrayidx199 = getelementptr inbounds i32, i32* %104, i64 %idxprom196
  store i32 %div, i32* %arrayidx199, align 4
  br label %for.inc.200

for.inc.200:                                      ; preds = %for.body.195
  %105 = load i32, i32* %i, align 4
  %inc201 = add nsw i32 %105, 1
  store i32 %inc201, i32* %i, align 4
  br label %for.cond.191

for.end.202:                                      ; preds = %for.cond.191
  br label %for.inc.203

for.inc.203:                                      ; preds = %for.end.202
  %106 = load i32, i32* %list, align 4
  %inc204 = add nsw i32 %106, 1
  store i32 %inc204, i32* %list, align 4
  br label %for.cond.179

for.end.205:                                      ; preds = %for.cond.179
  br label %if.end.206

if.end.206:                                       ; preds = %for.end.205, %for.end.178
  ret void
}

; Function Attrs: nounwind
declare noalias i8* @malloc(i64) #1

declare void @no_mem_exit(i8*) #2

; Function Attrs: nounwind uwtable
define void @ClearFastFullIntegerSearch() #0 {
entry:
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %list = alloca i32, align 4
  store i32 0, i32* %list, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc.34, %entry
  %0 = load i32, i32* %list, align 4
  %cmp = icmp slt i32 %0, 2
  br i1 %cmp, label %for.body, label %for.end.36

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4
  br label %for.cond.1

for.cond.1:                                       ; preds = %for.inc.29, %for.body
  %1 = load i32, i32* %i, align 4
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_num_references = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 9
  %3 = load i32, i32* %max_num_references, align 4
  %cmp2 = icmp sle i32 %1, %3
  br i1 %cmp2, label %for.body.3, label %for.end.31

for.body.3:                                       ; preds = %for.cond.1
  store i32 1, i32* %j, align 4
  br label %for.cond.4

for.cond.4:                                       ; preds = %for.inc.22, %for.body.3
  %4 = load i32, i32* %j, align 4
  %cmp5 = icmp slt i32 %4, 8
  br i1 %cmp5, label %for.body.6, label %for.end.24

for.body.6:                                       ; preds = %for.cond.4
  store i32 0, i32* %k, align 4
  br label %for.cond.7

for.cond.7:                                       ; preds = %for.inc, %for.body.6
  %5 = load i32, i32* %k, align 4
  %cmp8 = icmp slt i32 %5, 16
  br i1 %cmp8, label %for.body.9, label %for.end

for.body.9:                                       ; preds = %for.cond.7
  %6 = load i32, i32* %k, align 4
  %idxprom = sext i32 %6 to i64
  %7 = load i32, i32* %j, align 4
  %idxprom10 = sext i32 %7 to i64
  %8 = load i32, i32* %i, align 4
  %idxprom11 = sext i32 %8 to i64
  %9 = load i32, i32* %list, align 4
  %idxprom12 = sext i32 %9 to i64
  %10 = load i32*****, i32****** @BlockSAD, align 8
  %arrayidx = getelementptr inbounds i32****, i32***** %10, i64 %idxprom12
  %11 = load i32****, i32***** %arrayidx, align 8
  %arrayidx13 = getelementptr inbounds i32***, i32**** %11, i64 %idxprom11
  %12 = load i32***, i32**** %arrayidx13, align 8
  %arrayidx14 = getelementptr inbounds i32**, i32*** %12, i64 %idxprom10
  %13 = load i32**, i32*** %arrayidx14, align 8
  %arrayidx15 = getelementptr inbounds i32*, i32** %13, i64 %idxprom
  %14 = load i32*, i32** %arrayidx15, align 8
  %15 = bitcast i32* %14 to i8*
  call void @free(i8* %15) #3
  br label %for.inc

for.inc:                                          ; preds = %for.body.9
  %16 = load i32, i32* %k, align 4
  %inc = add nsw i32 %16, 1
  store i32 %inc, i32* %k, align 4
  br label %for.cond.7

for.end:                                          ; preds = %for.cond.7
  %17 = load i32, i32* %j, align 4
  %idxprom16 = sext i32 %17 to i64
  %18 = load i32, i32* %i, align 4
  %idxprom17 = sext i32 %18 to i64
  %19 = load i32, i32* %list, align 4
  %idxprom18 = sext i32 %19 to i64
  %20 = load i32*****, i32****** @BlockSAD, align 8
  %arrayidx19 = getelementptr inbounds i32****, i32***** %20, i64 %idxprom18
  %21 = load i32****, i32***** %arrayidx19, align 8
  %arrayidx20 = getelementptr inbounds i32***, i32**** %21, i64 %idxprom17
  %22 = load i32***, i32**** %arrayidx20, align 8
  %arrayidx21 = getelementptr inbounds i32**, i32*** %22, i64 %idxprom16
  %23 = load i32**, i32*** %arrayidx21, align 8
  %24 = bitcast i32** %23 to i8*
  call void @free(i8* %24) #3
  br label %for.inc.22

for.inc.22:                                       ; preds = %for.end
  %25 = load i32, i32* %j, align 4
  %inc23 = add nsw i32 %25, 1
  store i32 %inc23, i32* %j, align 4
  br label %for.cond.4

for.end.24:                                       ; preds = %for.cond.4
  %26 = load i32, i32* %i, align 4
  %idxprom25 = sext i32 %26 to i64
  %27 = load i32, i32* %list, align 4
  %idxprom26 = sext i32 %27 to i64
  %28 = load i32*****, i32****** @BlockSAD, align 8
  %arrayidx27 = getelementptr inbounds i32****, i32***** %28, i64 %idxprom26
  %29 = load i32****, i32***** %arrayidx27, align 8
  %arrayidx28 = getelementptr inbounds i32***, i32**** %29, i64 %idxprom25
  %30 = load i32***, i32**** %arrayidx28, align 8
  %31 = bitcast i32*** %30 to i8*
  call void @free(i8* %31) #3
  br label %for.inc.29

for.inc.29:                                       ; preds = %for.end.24
  %32 = load i32, i32* %i, align 4
  %inc30 = add nsw i32 %32, 1
  store i32 %inc30, i32* %i, align 4
  br label %for.cond.1

for.end.31:                                       ; preds = %for.cond.1
  %33 = load i32, i32* %list, align 4
  %idxprom32 = sext i32 %33 to i64
  %34 = load i32*****, i32****** @BlockSAD, align 8
  %arrayidx33 = getelementptr inbounds i32****, i32***** %34, i64 %idxprom32
  %35 = load i32****, i32***** %arrayidx33, align 8
  %36 = bitcast i32**** %35 to i8*
  call void @free(i8* %36) #3
  br label %for.inc.34

for.inc.34:                                       ; preds = %for.end.31
  %37 = load i32, i32* %list, align 4
  %inc35 = add nsw i32 %37, 1
  store i32 %inc35, i32* %list, align 4
  br label %for.cond

for.end.36:                                       ; preds = %for.cond
  %38 = load i32*****, i32****** @BlockSAD, align 8
  %39 = bitcast i32***** %38 to i8*
  call void @free(i8* %39) #3
  store i32 0, i32* %list, align 4
  br label %for.cond.37

for.cond.37:                                      ; preds = %for.inc.50, %for.end.36
  %40 = load i32, i32* %list, align 4
  %cmp38 = icmp slt i32 %40, 2
  br i1 %cmp38, label %for.body.39, label %for.end.52

for.body.39:                                      ; preds = %for.cond.37
  %41 = load i32, i32* %list, align 4
  %idxprom40 = sext i32 %41 to i64
  %42 = load i32**, i32*** @search_setup_done, align 8
  %arrayidx41 = getelementptr inbounds i32*, i32** %42, i64 %idxprom40
  %43 = load i32*, i32** %arrayidx41, align 8
  %44 = bitcast i32* %43 to i8*
  call void @free(i8* %44) #3
  %45 = load i32, i32* %list, align 4
  %idxprom42 = sext i32 %45 to i64
  %46 = load i32**, i32*** @search_center_x, align 8
  %arrayidx43 = getelementptr inbounds i32*, i32** %46, i64 %idxprom42
  %47 = load i32*, i32** %arrayidx43, align 8
  %48 = bitcast i32* %47 to i8*
  call void @free(i8* %48) #3
  %49 = load i32, i32* %list, align 4
  %idxprom44 = sext i32 %49 to i64
  %50 = load i32**, i32*** @search_center_y, align 8
  %arrayidx45 = getelementptr inbounds i32*, i32** %50, i64 %idxprom44
  %51 = load i32*, i32** %arrayidx45, align 8
  %52 = bitcast i32* %51 to i8*
  call void @free(i8* %52) #3
  %53 = load i32, i32* %list, align 4
  %idxprom46 = sext i32 %53 to i64
  %54 = load i32**, i32*** @pos_00, align 8
  %arrayidx47 = getelementptr inbounds i32*, i32** %54, i64 %idxprom46
  %55 = load i32*, i32** %arrayidx47, align 8
  %56 = bitcast i32* %55 to i8*
  call void @free(i8* %56) #3
  %57 = load i32, i32* %list, align 4
  %idxprom48 = sext i32 %57 to i64
  %58 = load i32**, i32*** @max_search_range, align 8
  %arrayidx49 = getelementptr inbounds i32*, i32** %58, i64 %idxprom48
  %59 = load i32*, i32** %arrayidx49, align 8
  %60 = bitcast i32* %59 to i8*
  call void @free(i8* %60) #3
  br label %for.inc.50

for.inc.50:                                       ; preds = %for.body.39
  %61 = load i32, i32* %list, align 4
  %inc51 = add nsw i32 %61, 1
  store i32 %inc51, i32* %list, align 4
  br label %for.cond.37

for.end.52:                                       ; preds = %for.cond.37
  %62 = load i32**, i32*** @search_setup_done, align 8
  %63 = bitcast i32** %62 to i8*
  call void @free(i8* %63) #3
  %64 = load i32**, i32*** @search_center_x, align 8
  %65 = bitcast i32** %64 to i8*
  call void @free(i8* %65) #3
  %66 = load i32**, i32*** @search_center_y, align 8
  %67 = bitcast i32** %66 to i8*
  call void @free(i8* %67) #3
  %68 = load i32**, i32*** @pos_00, align 8
  %69 = bitcast i32** %68 to i8*
  call void @free(i8* %69) #3
  %70 = load i32**, i32*** @max_search_range, align 8
  %71 = bitcast i32** %70 to i8*
  call void @free(i8* %71) #3
  ret void
}

; Function Attrs: nounwind
declare void @free(i8*) #1

; Function Attrs: nounwind uwtable
define void @ResetFastFullIntegerSearch() #0 {
entry:
  %i = alloca i32, align 4
  %list = alloca i32, align 4
  store i32 0, i32* %list, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc.6, %entry
  %0 = load i32, i32* %list, align 4
  %cmp = icmp slt i32 %0, 2
  br i1 %cmp, label %for.body, label %for.end.8

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4
  br label %for.cond.1

for.cond.1:                                       ; preds = %for.inc, %for.body
  %1 = load i32, i32* %i, align 4
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_num_references = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 9
  %3 = load i32, i32* %max_num_references, align 4
  %cmp2 = icmp sle i32 %1, %3
  br i1 %cmp2, label %for.body.3, label %for.end

for.body.3:                                       ; preds = %for.cond.1
  %4 = load i32, i32* %i, align 4
  %idxprom = sext i32 %4 to i64
  %5 = load i32, i32* %list, align 4
  %idxprom4 = sext i32 %5 to i64
  %6 = load i32**, i32*** @search_setup_done, align 8
  %arrayidx = getelementptr inbounds i32*, i32** %6, i64 %idxprom4
  %7 = load i32*, i32** %arrayidx, align 8
  %arrayidx5 = getelementptr inbounds i32, i32* %7, i64 %idxprom
  store i32 0, i32* %arrayidx5, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body.3
  %8 = load i32, i32* %i, align 4
  %inc = add nsw i32 %8, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond.1

for.end:                                          ; preds = %for.cond.1
  br label %for.inc.6

for.inc.6:                                        ; preds = %for.end
  %9 = load i32, i32* %list, align 4
  %inc7 = add nsw i32 %9, 1
  store i32 %inc7, i32* %list, align 4
  br label %for.cond

for.end.8:                                        ; preds = %for.cond
  ret void
}

; Function Attrs: nounwind uwtable
define void @SetupLargerBlocks(i32 %list, i32 %refindex, i32 %max_pos) #0 {
entry:
  %list.addr = alloca i32, align 4
  %refindex.addr = alloca i32, align 4
  %max_pos.addr = alloca i32, align 4
  %pos = alloca i32, align 4
  %_bo = alloca i32**, align 8
  %_bi = alloca i32**, align 8
  %_bj = alloca i32**, align 8
  %_o = alloca i32*, align 8
  %_i = alloca i32*, align 8
  %_j = alloca i32*, align 8
  store i32 %list, i32* %list.addr, align 4
  store i32 %refindex, i32* %refindex.addr, align 4
  store i32 %max_pos, i32* %max_pos.addr, align 4
  %0 = load i32, i32* %refindex.addr, align 4
  %idxprom = sext i32 %0 to i64
  %1 = load i32, i32* %list.addr, align 4
  %idxprom1 = sext i32 %1 to i64
  %2 = load i32*****, i32****** @BlockSAD, align 8
  %arrayidx = getelementptr inbounds i32****, i32***** %2, i64 %idxprom1
  %3 = load i32****, i32***** %arrayidx, align 8
  %arrayidx2 = getelementptr inbounds i32***, i32**** %3, i64 %idxprom
  %4 = load i32***, i32**** %arrayidx2, align 8
  %arrayidx3 = getelementptr inbounds i32**, i32*** %4, i64 6
  %5 = load i32**, i32*** %arrayidx3, align 8
  store i32** %5, i32*** %_bo, align 8
  %6 = load i32, i32* %refindex.addr, align 4
  %idxprom4 = sext i32 %6 to i64
  %7 = load i32, i32* %list.addr, align 4
  %idxprom5 = sext i32 %7 to i64
  %8 = load i32*****, i32****** @BlockSAD, align 8
  %arrayidx6 = getelementptr inbounds i32****, i32***** %8, i64 %idxprom5
  %9 = load i32****, i32***** %arrayidx6, align 8
  %arrayidx7 = getelementptr inbounds i32***, i32**** %9, i64 %idxprom4
  %10 = load i32***, i32**** %arrayidx7, align 8
  %arrayidx8 = getelementptr inbounds i32**, i32*** %10, i64 7
  %11 = load i32**, i32*** %arrayidx8, align 8
  store i32** %11, i32*** %_bi, align 8
  %12 = load i32**, i32*** %_bi, align 8
  %add.ptr = getelementptr inbounds i32*, i32** %12, i64 4
  store i32** %add.ptr, i32*** %_bj, align 8
  %13 = load i32**, i32*** %_bo, align 8
  %14 = load i32*, i32** %13, align 8
  store i32* %14, i32** %_o, align 8
  %15 = load i32**, i32*** %_bi, align 8
  %16 = load i32*, i32** %15, align 8
  store i32* %16, i32** %_i, align 8
  %17 = load i32**, i32*** %_bj, align 8
  %18 = load i32*, i32** %17, align 8
  store i32* %18, i32** %_j, align 8
  store i32 0, i32* %pos, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %19 = load i32, i32* %pos, align 4
  %20 = load i32, i32* %max_pos.addr, align 4
  %cmp = icmp slt i32 %19, %20
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %21 = load i32, i32* %pos, align 4
  %idxprom9 = sext i32 %21 to i64
  %22 = load i32*, i32** %_i, align 8
  %arrayidx10 = getelementptr inbounds i32, i32* %22, i64 %idxprom9
  %23 = load i32, i32* %arrayidx10, align 4
  %24 = load i32, i32* %pos, align 4
  %idxprom11 = sext i32 %24 to i64
  %25 = load i32*, i32** %_j, align 8
  %arrayidx12 = getelementptr inbounds i32, i32* %25, i64 %idxprom11
  %26 = load i32, i32* %arrayidx12, align 4
  %add = add nsw i32 %23, %26
  %27 = load i32, i32* %pos, align 4
  %idxprom13 = sext i32 %27 to i64
  %28 = load i32*, i32** %_o, align 8
  %arrayidx14 = getelementptr inbounds i32, i32* %28, i64 %idxprom13
  store i32 %add, i32* %arrayidx14, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %29 = load i32, i32* %pos, align 4
  %inc = add nsw i32 %29, 1
  store i32 %inc, i32* %pos, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %30 = load i32**, i32*** %_bo, align 8
  %add.ptr15 = getelementptr inbounds i32*, i32** %30, i64 1
  store i32** %add.ptr15, i32*** %_bo, align 8
  %31 = load i32**, i32*** %_bi, align 8
  %add.ptr16 = getelementptr inbounds i32*, i32** %31, i64 1
  store i32** %add.ptr16, i32*** %_bi, align 8
  %32 = load i32**, i32*** %_bj, align 8
  %add.ptr17 = getelementptr inbounds i32*, i32** %32, i64 1
  store i32** %add.ptr17, i32*** %_bj, align 8
  %33 = load i32**, i32*** %_bo, align 8
  %34 = load i32*, i32** %33, align 8
  store i32* %34, i32** %_o, align 8
  %35 = load i32**, i32*** %_bi, align 8
  %36 = load i32*, i32** %35, align 8
  store i32* %36, i32** %_i, align 8
  %37 = load i32**, i32*** %_bj, align 8
  %38 = load i32*, i32** %37, align 8
  store i32* %38, i32** %_j, align 8
  store i32 0, i32* %pos, align 4
  br label %for.cond.18

for.cond.18:                                      ; preds = %for.inc.28, %for.end
  %39 = load i32, i32* %pos, align 4
  %40 = load i32, i32* %max_pos.addr, align 4
  %cmp19 = icmp slt i32 %39, %40
  br i1 %cmp19, label %for.body.20, label %for.end.30

for.body.20:                                      ; preds = %for.cond.18
  %41 = load i32, i32* %pos, align 4
  %idxprom21 = sext i32 %41 to i64
  %42 = load i32*, i32** %_i, align 8
  %arrayidx22 = getelementptr inbounds i32, i32* %42, i64 %idxprom21
  %43 = load i32, i32* %arrayidx22, align 4
  %44 = load i32, i32* %pos, align 4
  %idxprom23 = sext i32 %44 to i64
  %45 = load i32*, i32** %_j, align 8
  %arrayidx24 = getelementptr inbounds i32, i32* %45, i64 %idxprom23
  %46 = load i32, i32* %arrayidx24, align 4
  %add25 = add nsw i32 %43, %46
  %47 = load i32, i32* %pos, align 4
  %idxprom26 = sext i32 %47 to i64
  %48 = load i32*, i32** %_o, align 8
  %arrayidx27 = getelementptr inbounds i32, i32* %48, i64 %idxprom26
  store i32 %add25, i32* %arrayidx27, align 4
  br label %for.inc.28

for.inc.28:                                       ; preds = %for.body.20
  %49 = load i32, i32* %pos, align 4
  %inc29 = add nsw i32 %49, 1
  store i32 %inc29, i32* %pos, align 4
  br label %for.cond.18

for.end.30:                                       ; preds = %for.cond.18
  %50 = load i32**, i32*** %_bo, align 8
  %add.ptr31 = getelementptr inbounds i32*, i32** %50, i64 1
  store i32** %add.ptr31, i32*** %_bo, align 8
  %51 = load i32**, i32*** %_bi, align 8
  %add.ptr32 = getelementptr inbounds i32*, i32** %51, i64 1
  store i32** %add.ptr32, i32*** %_bi, align 8
  %52 = load i32**, i32*** %_bj, align 8
  %add.ptr33 = getelementptr inbounds i32*, i32** %52, i64 1
  store i32** %add.ptr33, i32*** %_bj, align 8
  %53 = load i32**, i32*** %_bo, align 8
  %54 = load i32*, i32** %53, align 8
  store i32* %54, i32** %_o, align 8
  %55 = load i32**, i32*** %_bi, align 8
  %56 = load i32*, i32** %55, align 8
  store i32* %56, i32** %_i, align 8
  %57 = load i32**, i32*** %_bj, align 8
  %58 = load i32*, i32** %57, align 8
  store i32* %58, i32** %_j, align 8
  store i32 0, i32* %pos, align 4
  br label %for.cond.34

for.cond.34:                                      ; preds = %for.inc.44, %for.end.30
  %59 = load i32, i32* %pos, align 4
  %60 = load i32, i32* %max_pos.addr, align 4
  %cmp35 = icmp slt i32 %59, %60
  br i1 %cmp35, label %for.body.36, label %for.end.46

for.body.36:                                      ; preds = %for.cond.34
  %61 = load i32, i32* %pos, align 4
  %idxprom37 = sext i32 %61 to i64
  %62 = load i32*, i32** %_i, align 8
  %arrayidx38 = getelementptr inbounds i32, i32* %62, i64 %idxprom37
  %63 = load i32, i32* %arrayidx38, align 4
  %64 = load i32, i32* %pos, align 4
  %idxprom39 = sext i32 %64 to i64
  %65 = load i32*, i32** %_j, align 8
  %arrayidx40 = getelementptr inbounds i32, i32* %65, i64 %idxprom39
  %66 = load i32, i32* %arrayidx40, align 4
  %add41 = add nsw i32 %63, %66
  %67 = load i32, i32* %pos, align 4
  %idxprom42 = sext i32 %67 to i64
  %68 = load i32*, i32** %_o, align 8
  %arrayidx43 = getelementptr inbounds i32, i32* %68, i64 %idxprom42
  store i32 %add41, i32* %arrayidx43, align 4
  br label %for.inc.44

for.inc.44:                                       ; preds = %for.body.36
  %69 = load i32, i32* %pos, align 4
  %inc45 = add nsw i32 %69, 1
  store i32 %inc45, i32* %pos, align 4
  br label %for.cond.34

for.end.46:                                       ; preds = %for.cond.34
  %70 = load i32**, i32*** %_bo, align 8
  %add.ptr47 = getelementptr inbounds i32*, i32** %70, i64 1
  store i32** %add.ptr47, i32*** %_bo, align 8
  %71 = load i32**, i32*** %_bi, align 8
  %add.ptr48 = getelementptr inbounds i32*, i32** %71, i64 1
  store i32** %add.ptr48, i32*** %_bi, align 8
  %72 = load i32**, i32*** %_bj, align 8
  %add.ptr49 = getelementptr inbounds i32*, i32** %72, i64 1
  store i32** %add.ptr49, i32*** %_bj, align 8
  %73 = load i32**, i32*** %_bo, align 8
  %74 = load i32*, i32** %73, align 8
  store i32* %74, i32** %_o, align 8
  %75 = load i32**, i32*** %_bi, align 8
  %76 = load i32*, i32** %75, align 8
  store i32* %76, i32** %_i, align 8
  %77 = load i32**, i32*** %_bj, align 8
  %78 = load i32*, i32** %77, align 8
  store i32* %78, i32** %_j, align 8
  store i32 0, i32* %pos, align 4
  br label %for.cond.50

for.cond.50:                                      ; preds = %for.inc.60, %for.end.46
  %79 = load i32, i32* %pos, align 4
  %80 = load i32, i32* %max_pos.addr, align 4
  %cmp51 = icmp slt i32 %79, %80
  br i1 %cmp51, label %for.body.52, label %for.end.62

for.body.52:                                      ; preds = %for.cond.50
  %81 = load i32, i32* %pos, align 4
  %idxprom53 = sext i32 %81 to i64
  %82 = load i32*, i32** %_i, align 8
  %arrayidx54 = getelementptr inbounds i32, i32* %82, i64 %idxprom53
  %83 = load i32, i32* %arrayidx54, align 4
  %84 = load i32, i32* %pos, align 4
  %idxprom55 = sext i32 %84 to i64
  %85 = load i32*, i32** %_j, align 8
  %arrayidx56 = getelementptr inbounds i32, i32* %85, i64 %idxprom55
  %86 = load i32, i32* %arrayidx56, align 4
  %add57 = add nsw i32 %83, %86
  %87 = load i32, i32* %pos, align 4
  %idxprom58 = sext i32 %87 to i64
  %88 = load i32*, i32** %_o, align 8
  %arrayidx59 = getelementptr inbounds i32, i32* %88, i64 %idxprom58
  store i32 %add57, i32* %arrayidx59, align 4
  br label %for.inc.60

for.inc.60:                                       ; preds = %for.body.52
  %89 = load i32, i32* %pos, align 4
  %inc61 = add nsw i32 %89, 1
  store i32 %inc61, i32* %pos, align 4
  br label %for.cond.50

for.end.62:                                       ; preds = %for.cond.50
  %90 = load i32**, i32*** %_bo, align 8
  %add.ptr63 = getelementptr inbounds i32*, i32** %90, i64 5
  store i32** %add.ptr63, i32*** %_bo, align 8
  %91 = load i32**, i32*** %_bi, align 8
  %add.ptr64 = getelementptr inbounds i32*, i32** %91, i64 5
  store i32** %add.ptr64, i32*** %_bi, align 8
  %92 = load i32**, i32*** %_bj, align 8
  %add.ptr65 = getelementptr inbounds i32*, i32** %92, i64 5
  store i32** %add.ptr65, i32*** %_bj, align 8
  %93 = load i32**, i32*** %_bo, align 8
  %94 = load i32*, i32** %93, align 8
  store i32* %94, i32** %_o, align 8
  %95 = load i32**, i32*** %_bi, align 8
  %96 = load i32*, i32** %95, align 8
  store i32* %96, i32** %_i, align 8
  %97 = load i32**, i32*** %_bj, align 8
  %98 = load i32*, i32** %97, align 8
  store i32* %98, i32** %_j, align 8
  store i32 0, i32* %pos, align 4
  br label %for.cond.66

for.cond.66:                                      ; preds = %for.inc.76, %for.end.62
  %99 = load i32, i32* %pos, align 4
  %100 = load i32, i32* %max_pos.addr, align 4
  %cmp67 = icmp slt i32 %99, %100
  br i1 %cmp67, label %for.body.68, label %for.end.78

for.body.68:                                      ; preds = %for.cond.66
  %101 = load i32, i32* %pos, align 4
  %idxprom69 = sext i32 %101 to i64
  %102 = load i32*, i32** %_i, align 8
  %arrayidx70 = getelementptr inbounds i32, i32* %102, i64 %idxprom69
  %103 = load i32, i32* %arrayidx70, align 4
  %104 = load i32, i32* %pos, align 4
  %idxprom71 = sext i32 %104 to i64
  %105 = load i32*, i32** %_j, align 8
  %arrayidx72 = getelementptr inbounds i32, i32* %105, i64 %idxprom71
  %106 = load i32, i32* %arrayidx72, align 4
  %add73 = add nsw i32 %103, %106
  %107 = load i32, i32* %pos, align 4
  %idxprom74 = sext i32 %107 to i64
  %108 = load i32*, i32** %_o, align 8
  %arrayidx75 = getelementptr inbounds i32, i32* %108, i64 %idxprom74
  store i32 %add73, i32* %arrayidx75, align 4
  br label %for.inc.76

for.inc.76:                                       ; preds = %for.body.68
  %109 = load i32, i32* %pos, align 4
  %inc77 = add nsw i32 %109, 1
  store i32 %inc77, i32* %pos, align 4
  br label %for.cond.66

for.end.78:                                       ; preds = %for.cond.66
  %110 = load i32**, i32*** %_bo, align 8
  %add.ptr79 = getelementptr inbounds i32*, i32** %110, i64 1
  store i32** %add.ptr79, i32*** %_bo, align 8
  %111 = load i32**, i32*** %_bi, align 8
  %add.ptr80 = getelementptr inbounds i32*, i32** %111, i64 1
  store i32** %add.ptr80, i32*** %_bi, align 8
  %112 = load i32**, i32*** %_bj, align 8
  %add.ptr81 = getelementptr inbounds i32*, i32** %112, i64 1
  store i32** %add.ptr81, i32*** %_bj, align 8
  %113 = load i32**, i32*** %_bo, align 8
  %114 = load i32*, i32** %113, align 8
  store i32* %114, i32** %_o, align 8
  %115 = load i32**, i32*** %_bi, align 8
  %116 = load i32*, i32** %115, align 8
  store i32* %116, i32** %_i, align 8
  %117 = load i32**, i32*** %_bj, align 8
  %118 = load i32*, i32** %117, align 8
  store i32* %118, i32** %_j, align 8
  store i32 0, i32* %pos, align 4
  br label %for.cond.82

for.cond.82:                                      ; preds = %for.inc.92, %for.end.78
  %119 = load i32, i32* %pos, align 4
  %120 = load i32, i32* %max_pos.addr, align 4
  %cmp83 = icmp slt i32 %119, %120
  br i1 %cmp83, label %for.body.84, label %for.end.94

for.body.84:                                      ; preds = %for.cond.82
  %121 = load i32, i32* %pos, align 4
  %idxprom85 = sext i32 %121 to i64
  %122 = load i32*, i32** %_i, align 8
  %arrayidx86 = getelementptr inbounds i32, i32* %122, i64 %idxprom85
  %123 = load i32, i32* %arrayidx86, align 4
  %124 = load i32, i32* %pos, align 4
  %idxprom87 = sext i32 %124 to i64
  %125 = load i32*, i32** %_j, align 8
  %arrayidx88 = getelementptr inbounds i32, i32* %125, i64 %idxprom87
  %126 = load i32, i32* %arrayidx88, align 4
  %add89 = add nsw i32 %123, %126
  %127 = load i32, i32* %pos, align 4
  %idxprom90 = sext i32 %127 to i64
  %128 = load i32*, i32** %_o, align 8
  %arrayidx91 = getelementptr inbounds i32, i32* %128, i64 %idxprom90
  store i32 %add89, i32* %arrayidx91, align 4
  br label %for.inc.92

for.inc.92:                                       ; preds = %for.body.84
  %129 = load i32, i32* %pos, align 4
  %inc93 = add nsw i32 %129, 1
  store i32 %inc93, i32* %pos, align 4
  br label %for.cond.82

for.end.94:                                       ; preds = %for.cond.82
  %130 = load i32**, i32*** %_bo, align 8
  %add.ptr95 = getelementptr inbounds i32*, i32** %130, i64 1
  store i32** %add.ptr95, i32*** %_bo, align 8
  %131 = load i32**, i32*** %_bi, align 8
  %add.ptr96 = getelementptr inbounds i32*, i32** %131, i64 1
  store i32** %add.ptr96, i32*** %_bi, align 8
  %132 = load i32**, i32*** %_bj, align 8
  %add.ptr97 = getelementptr inbounds i32*, i32** %132, i64 1
  store i32** %add.ptr97, i32*** %_bj, align 8
  %133 = load i32**, i32*** %_bo, align 8
  %134 = load i32*, i32** %133, align 8
  store i32* %134, i32** %_o, align 8
  %135 = load i32**, i32*** %_bi, align 8
  %136 = load i32*, i32** %135, align 8
  store i32* %136, i32** %_i, align 8
  %137 = load i32**, i32*** %_bj, align 8
  %138 = load i32*, i32** %137, align 8
  store i32* %138, i32** %_j, align 8
  store i32 0, i32* %pos, align 4
  br label %for.cond.98

for.cond.98:                                      ; preds = %for.inc.108, %for.end.94
  %139 = load i32, i32* %pos, align 4
  %140 = load i32, i32* %max_pos.addr, align 4
  %cmp99 = icmp slt i32 %139, %140
  br i1 %cmp99, label %for.body.100, label %for.end.110

for.body.100:                                     ; preds = %for.cond.98
  %141 = load i32, i32* %pos, align 4
  %idxprom101 = sext i32 %141 to i64
  %142 = load i32*, i32** %_i, align 8
  %arrayidx102 = getelementptr inbounds i32, i32* %142, i64 %idxprom101
  %143 = load i32, i32* %arrayidx102, align 4
  %144 = load i32, i32* %pos, align 4
  %idxprom103 = sext i32 %144 to i64
  %145 = load i32*, i32** %_j, align 8
  %arrayidx104 = getelementptr inbounds i32, i32* %145, i64 %idxprom103
  %146 = load i32, i32* %arrayidx104, align 4
  %add105 = add nsw i32 %143, %146
  %147 = load i32, i32* %pos, align 4
  %idxprom106 = sext i32 %147 to i64
  %148 = load i32*, i32** %_o, align 8
  %arrayidx107 = getelementptr inbounds i32, i32* %148, i64 %idxprom106
  store i32 %add105, i32* %arrayidx107, align 4
  br label %for.inc.108

for.inc.108:                                      ; preds = %for.body.100
  %149 = load i32, i32* %pos, align 4
  %inc109 = add nsw i32 %149, 1
  store i32 %inc109, i32* %pos, align 4
  br label %for.cond.98

for.end.110:                                      ; preds = %for.cond.98
  %150 = load i32**, i32*** %_bo, align 8
  %add.ptr111 = getelementptr inbounds i32*, i32** %150, i64 1
  store i32** %add.ptr111, i32*** %_bo, align 8
  %151 = load i32**, i32*** %_bi, align 8
  %add.ptr112 = getelementptr inbounds i32*, i32** %151, i64 1
  store i32** %add.ptr112, i32*** %_bi, align 8
  %152 = load i32**, i32*** %_bj, align 8
  %add.ptr113 = getelementptr inbounds i32*, i32** %152, i64 1
  store i32** %add.ptr113, i32*** %_bj, align 8
  %153 = load i32**, i32*** %_bo, align 8
  %154 = load i32*, i32** %153, align 8
  store i32* %154, i32** %_o, align 8
  %155 = load i32**, i32*** %_bi, align 8
  %156 = load i32*, i32** %155, align 8
  store i32* %156, i32** %_i, align 8
  %157 = load i32**, i32*** %_bj, align 8
  %158 = load i32*, i32** %157, align 8
  store i32* %158, i32** %_j, align 8
  store i32 0, i32* %pos, align 4
  br label %for.cond.114

for.cond.114:                                     ; preds = %for.inc.124, %for.end.110
  %159 = load i32, i32* %pos, align 4
  %160 = load i32, i32* %max_pos.addr, align 4
  %cmp115 = icmp slt i32 %159, %160
  br i1 %cmp115, label %for.body.116, label %for.end.126

for.body.116:                                     ; preds = %for.cond.114
  %161 = load i32, i32* %pos, align 4
  %idxprom117 = sext i32 %161 to i64
  %162 = load i32*, i32** %_i, align 8
  %arrayidx118 = getelementptr inbounds i32, i32* %162, i64 %idxprom117
  %163 = load i32, i32* %arrayidx118, align 4
  %164 = load i32, i32* %pos, align 4
  %idxprom119 = sext i32 %164 to i64
  %165 = load i32*, i32** %_j, align 8
  %arrayidx120 = getelementptr inbounds i32, i32* %165, i64 %idxprom119
  %166 = load i32, i32* %arrayidx120, align 4
  %add121 = add nsw i32 %163, %166
  %167 = load i32, i32* %pos, align 4
  %idxprom122 = sext i32 %167 to i64
  %168 = load i32*, i32** %_o, align 8
  %arrayidx123 = getelementptr inbounds i32, i32* %168, i64 %idxprom122
  store i32 %add121, i32* %arrayidx123, align 4
  br label %for.inc.124

for.inc.124:                                      ; preds = %for.body.116
  %169 = load i32, i32* %pos, align 4
  %inc125 = add nsw i32 %169, 1
  store i32 %inc125, i32* %pos, align 4
  br label %for.cond.114

for.end.126:                                      ; preds = %for.cond.114
  %170 = load i32, i32* %refindex.addr, align 4
  %idxprom127 = sext i32 %170 to i64
  %171 = load i32, i32* %list.addr, align 4
  %idxprom128 = sext i32 %171 to i64
  %172 = load i32*****, i32****** @BlockSAD, align 8
  %arrayidx129 = getelementptr inbounds i32****, i32***** %172, i64 %idxprom128
  %173 = load i32****, i32***** %arrayidx129, align 8
  %arrayidx130 = getelementptr inbounds i32***, i32**** %173, i64 %idxprom127
  %174 = load i32***, i32**** %arrayidx130, align 8
  %arrayidx131 = getelementptr inbounds i32**, i32*** %174, i64 5
  %175 = load i32**, i32*** %arrayidx131, align 8
  store i32** %175, i32*** %_bo, align 8
  %176 = load i32, i32* %refindex.addr, align 4
  %idxprom132 = sext i32 %176 to i64
  %177 = load i32, i32* %list.addr, align 4
  %idxprom133 = sext i32 %177 to i64
  %178 = load i32*****, i32****** @BlockSAD, align 8
  %arrayidx134 = getelementptr inbounds i32****, i32***** %178, i64 %idxprom133
  %179 = load i32****, i32***** %arrayidx134, align 8
  %arrayidx135 = getelementptr inbounds i32***, i32**** %179, i64 %idxprom132
  %180 = load i32***, i32**** %arrayidx135, align 8
  %arrayidx136 = getelementptr inbounds i32**, i32*** %180, i64 7
  %181 = load i32**, i32*** %arrayidx136, align 8
  store i32** %181, i32*** %_bi, align 8
  %182 = load i32**, i32*** %_bi, align 8
  %add.ptr137 = getelementptr inbounds i32*, i32** %182, i64 1
  store i32** %add.ptr137, i32*** %_bj, align 8
  %183 = load i32**, i32*** %_bo, align 8
  %184 = load i32*, i32** %183, align 8
  store i32* %184, i32** %_o, align 8
  %185 = load i32**, i32*** %_bi, align 8
  %186 = load i32*, i32** %185, align 8
  store i32* %186, i32** %_i, align 8
  %187 = load i32**, i32*** %_bj, align 8
  %188 = load i32*, i32** %187, align 8
  store i32* %188, i32** %_j, align 8
  store i32 0, i32* %pos, align 4
  br label %for.cond.138

for.cond.138:                                     ; preds = %for.inc.148, %for.end.126
  %189 = load i32, i32* %pos, align 4
  %190 = load i32, i32* %max_pos.addr, align 4
  %cmp139 = icmp slt i32 %189, %190
  br i1 %cmp139, label %for.body.140, label %for.end.150

for.body.140:                                     ; preds = %for.cond.138
  %191 = load i32, i32* %pos, align 4
  %idxprom141 = sext i32 %191 to i64
  %192 = load i32*, i32** %_i, align 8
  %arrayidx142 = getelementptr inbounds i32, i32* %192, i64 %idxprom141
  %193 = load i32, i32* %arrayidx142, align 4
  %194 = load i32, i32* %pos, align 4
  %idxprom143 = sext i32 %194 to i64
  %195 = load i32*, i32** %_j, align 8
  %arrayidx144 = getelementptr inbounds i32, i32* %195, i64 %idxprom143
  %196 = load i32, i32* %arrayidx144, align 4
  %add145 = add nsw i32 %193, %196
  %197 = load i32, i32* %pos, align 4
  %idxprom146 = sext i32 %197 to i64
  %198 = load i32*, i32** %_o, align 8
  %arrayidx147 = getelementptr inbounds i32, i32* %198, i64 %idxprom146
  store i32 %add145, i32* %arrayidx147, align 4
  br label %for.inc.148

for.inc.148:                                      ; preds = %for.body.140
  %199 = load i32, i32* %pos, align 4
  %inc149 = add nsw i32 %199, 1
  store i32 %inc149, i32* %pos, align 4
  br label %for.cond.138

for.end.150:                                      ; preds = %for.cond.138
  %200 = load i32**, i32*** %_bo, align 8
  %add.ptr151 = getelementptr inbounds i32*, i32** %200, i64 2
  store i32** %add.ptr151, i32*** %_bo, align 8
  %201 = load i32**, i32*** %_bi, align 8
  %add.ptr152 = getelementptr inbounds i32*, i32** %201, i64 2
  store i32** %add.ptr152, i32*** %_bi, align 8
  %202 = load i32**, i32*** %_bj, align 8
  %add.ptr153 = getelementptr inbounds i32*, i32** %202, i64 2
  store i32** %add.ptr153, i32*** %_bj, align 8
  %203 = load i32**, i32*** %_bo, align 8
  %204 = load i32*, i32** %203, align 8
  store i32* %204, i32** %_o, align 8
  %205 = load i32**, i32*** %_bi, align 8
  %206 = load i32*, i32** %205, align 8
  store i32* %206, i32** %_i, align 8
  %207 = load i32**, i32*** %_bj, align 8
  %208 = load i32*, i32** %207, align 8
  store i32* %208, i32** %_j, align 8
  store i32 0, i32* %pos, align 4
  br label %for.cond.154

for.cond.154:                                     ; preds = %for.inc.164, %for.end.150
  %209 = load i32, i32* %pos, align 4
  %210 = load i32, i32* %max_pos.addr, align 4
  %cmp155 = icmp slt i32 %209, %210
  br i1 %cmp155, label %for.body.156, label %for.end.166

for.body.156:                                     ; preds = %for.cond.154
  %211 = load i32, i32* %pos, align 4
  %idxprom157 = sext i32 %211 to i64
  %212 = load i32*, i32** %_i, align 8
  %arrayidx158 = getelementptr inbounds i32, i32* %212, i64 %idxprom157
  %213 = load i32, i32* %arrayidx158, align 4
  %214 = load i32, i32* %pos, align 4
  %idxprom159 = sext i32 %214 to i64
  %215 = load i32*, i32** %_j, align 8
  %arrayidx160 = getelementptr inbounds i32, i32* %215, i64 %idxprom159
  %216 = load i32, i32* %arrayidx160, align 4
  %add161 = add nsw i32 %213, %216
  %217 = load i32, i32* %pos, align 4
  %idxprom162 = sext i32 %217 to i64
  %218 = load i32*, i32** %_o, align 8
  %arrayidx163 = getelementptr inbounds i32, i32* %218, i64 %idxprom162
  store i32 %add161, i32* %arrayidx163, align 4
  br label %for.inc.164

for.inc.164:                                      ; preds = %for.body.156
  %219 = load i32, i32* %pos, align 4
  %inc165 = add nsw i32 %219, 1
  store i32 %inc165, i32* %pos, align 4
  br label %for.cond.154

for.end.166:                                      ; preds = %for.cond.154
  %220 = load i32**, i32*** %_bo, align 8
  %add.ptr167 = getelementptr inbounds i32*, i32** %220, i64 2
  store i32** %add.ptr167, i32*** %_bo, align 8
  %221 = load i32**, i32*** %_bi, align 8
  %add.ptr168 = getelementptr inbounds i32*, i32** %221, i64 2
  store i32** %add.ptr168, i32*** %_bi, align 8
  %222 = load i32**, i32*** %_bj, align 8
  %add.ptr169 = getelementptr inbounds i32*, i32** %222, i64 2
  store i32** %add.ptr169, i32*** %_bj, align 8
  %223 = load i32**, i32*** %_bo, align 8
  %224 = load i32*, i32** %223, align 8
  store i32* %224, i32** %_o, align 8
  %225 = load i32**, i32*** %_bi, align 8
  %226 = load i32*, i32** %225, align 8
  store i32* %226, i32** %_i, align 8
  %227 = load i32**, i32*** %_bj, align 8
  %228 = load i32*, i32** %227, align 8
  store i32* %228, i32** %_j, align 8
  store i32 0, i32* %pos, align 4
  br label %for.cond.170

for.cond.170:                                     ; preds = %for.inc.180, %for.end.166
  %229 = load i32, i32* %pos, align 4
  %230 = load i32, i32* %max_pos.addr, align 4
  %cmp171 = icmp slt i32 %229, %230
  br i1 %cmp171, label %for.body.172, label %for.end.182

for.body.172:                                     ; preds = %for.cond.170
  %231 = load i32, i32* %pos, align 4
  %idxprom173 = sext i32 %231 to i64
  %232 = load i32*, i32** %_i, align 8
  %arrayidx174 = getelementptr inbounds i32, i32* %232, i64 %idxprom173
  %233 = load i32, i32* %arrayidx174, align 4
  %234 = load i32, i32* %pos, align 4
  %idxprom175 = sext i32 %234 to i64
  %235 = load i32*, i32** %_j, align 8
  %arrayidx176 = getelementptr inbounds i32, i32* %235, i64 %idxprom175
  %236 = load i32, i32* %arrayidx176, align 4
  %add177 = add nsw i32 %233, %236
  %237 = load i32, i32* %pos, align 4
  %idxprom178 = sext i32 %237 to i64
  %238 = load i32*, i32** %_o, align 8
  %arrayidx179 = getelementptr inbounds i32, i32* %238, i64 %idxprom178
  store i32 %add177, i32* %arrayidx179, align 4
  br label %for.inc.180

for.inc.180:                                      ; preds = %for.body.172
  %239 = load i32, i32* %pos, align 4
  %inc181 = add nsw i32 %239, 1
  store i32 %inc181, i32* %pos, align 4
  br label %for.cond.170

for.end.182:                                      ; preds = %for.cond.170
  %240 = load i32**, i32*** %_bo, align 8
  %add.ptr183 = getelementptr inbounds i32*, i32** %240, i64 2
  store i32** %add.ptr183, i32*** %_bo, align 8
  %241 = load i32**, i32*** %_bi, align 8
  %add.ptr184 = getelementptr inbounds i32*, i32** %241, i64 2
  store i32** %add.ptr184, i32*** %_bi, align 8
  %242 = load i32**, i32*** %_bj, align 8
  %add.ptr185 = getelementptr inbounds i32*, i32** %242, i64 2
  store i32** %add.ptr185, i32*** %_bj, align 8
  %243 = load i32**, i32*** %_bo, align 8
  %244 = load i32*, i32** %243, align 8
  store i32* %244, i32** %_o, align 8
  %245 = load i32**, i32*** %_bi, align 8
  %246 = load i32*, i32** %245, align 8
  store i32* %246, i32** %_i, align 8
  %247 = load i32**, i32*** %_bj, align 8
  %248 = load i32*, i32** %247, align 8
  store i32* %248, i32** %_j, align 8
  store i32 0, i32* %pos, align 4
  br label %for.cond.186

for.cond.186:                                     ; preds = %for.inc.196, %for.end.182
  %249 = load i32, i32* %pos, align 4
  %250 = load i32, i32* %max_pos.addr, align 4
  %cmp187 = icmp slt i32 %249, %250
  br i1 %cmp187, label %for.body.188, label %for.end.198

for.body.188:                                     ; preds = %for.cond.186
  %251 = load i32, i32* %pos, align 4
  %idxprom189 = sext i32 %251 to i64
  %252 = load i32*, i32** %_i, align 8
  %arrayidx190 = getelementptr inbounds i32, i32* %252, i64 %idxprom189
  %253 = load i32, i32* %arrayidx190, align 4
  %254 = load i32, i32* %pos, align 4
  %idxprom191 = sext i32 %254 to i64
  %255 = load i32*, i32** %_j, align 8
  %arrayidx192 = getelementptr inbounds i32, i32* %255, i64 %idxprom191
  %256 = load i32, i32* %arrayidx192, align 4
  %add193 = add nsw i32 %253, %256
  %257 = load i32, i32* %pos, align 4
  %idxprom194 = sext i32 %257 to i64
  %258 = load i32*, i32** %_o, align 8
  %arrayidx195 = getelementptr inbounds i32, i32* %258, i64 %idxprom194
  store i32 %add193, i32* %arrayidx195, align 4
  br label %for.inc.196

for.inc.196:                                      ; preds = %for.body.188
  %259 = load i32, i32* %pos, align 4
  %inc197 = add nsw i32 %259, 1
  store i32 %inc197, i32* %pos, align 4
  br label %for.cond.186

for.end.198:                                      ; preds = %for.cond.186
  %260 = load i32**, i32*** %_bo, align 8
  %add.ptr199 = getelementptr inbounds i32*, i32** %260, i64 2
  store i32** %add.ptr199, i32*** %_bo, align 8
  %261 = load i32**, i32*** %_bi, align 8
  %add.ptr200 = getelementptr inbounds i32*, i32** %261, i64 2
  store i32** %add.ptr200, i32*** %_bi, align 8
  %262 = load i32**, i32*** %_bj, align 8
  %add.ptr201 = getelementptr inbounds i32*, i32** %262, i64 2
  store i32** %add.ptr201, i32*** %_bj, align 8
  %263 = load i32**, i32*** %_bo, align 8
  %264 = load i32*, i32** %263, align 8
  store i32* %264, i32** %_o, align 8
  %265 = load i32**, i32*** %_bi, align 8
  %266 = load i32*, i32** %265, align 8
  store i32* %266, i32** %_i, align 8
  %267 = load i32**, i32*** %_bj, align 8
  %268 = load i32*, i32** %267, align 8
  store i32* %268, i32** %_j, align 8
  store i32 0, i32* %pos, align 4
  br label %for.cond.202

for.cond.202:                                     ; preds = %for.inc.212, %for.end.198
  %269 = load i32, i32* %pos, align 4
  %270 = load i32, i32* %max_pos.addr, align 4
  %cmp203 = icmp slt i32 %269, %270
  br i1 %cmp203, label %for.body.204, label %for.end.214

for.body.204:                                     ; preds = %for.cond.202
  %271 = load i32, i32* %pos, align 4
  %idxprom205 = sext i32 %271 to i64
  %272 = load i32*, i32** %_i, align 8
  %arrayidx206 = getelementptr inbounds i32, i32* %272, i64 %idxprom205
  %273 = load i32, i32* %arrayidx206, align 4
  %274 = load i32, i32* %pos, align 4
  %idxprom207 = sext i32 %274 to i64
  %275 = load i32*, i32** %_j, align 8
  %arrayidx208 = getelementptr inbounds i32, i32* %275, i64 %idxprom207
  %276 = load i32, i32* %arrayidx208, align 4
  %add209 = add nsw i32 %273, %276
  %277 = load i32, i32* %pos, align 4
  %idxprom210 = sext i32 %277 to i64
  %278 = load i32*, i32** %_o, align 8
  %arrayidx211 = getelementptr inbounds i32, i32* %278, i64 %idxprom210
  store i32 %add209, i32* %arrayidx211, align 4
  br label %for.inc.212

for.inc.212:                                      ; preds = %for.body.204
  %279 = load i32, i32* %pos, align 4
  %inc213 = add nsw i32 %279, 1
  store i32 %inc213, i32* %pos, align 4
  br label %for.cond.202

for.end.214:                                      ; preds = %for.cond.202
  %280 = load i32**, i32*** %_bo, align 8
  %add.ptr215 = getelementptr inbounds i32*, i32** %280, i64 2
  store i32** %add.ptr215, i32*** %_bo, align 8
  %281 = load i32**, i32*** %_bi, align 8
  %add.ptr216 = getelementptr inbounds i32*, i32** %281, i64 2
  store i32** %add.ptr216, i32*** %_bi, align 8
  %282 = load i32**, i32*** %_bj, align 8
  %add.ptr217 = getelementptr inbounds i32*, i32** %282, i64 2
  store i32** %add.ptr217, i32*** %_bj, align 8
  %283 = load i32**, i32*** %_bo, align 8
  %284 = load i32*, i32** %283, align 8
  store i32* %284, i32** %_o, align 8
  %285 = load i32**, i32*** %_bi, align 8
  %286 = load i32*, i32** %285, align 8
  store i32* %286, i32** %_i, align 8
  %287 = load i32**, i32*** %_bj, align 8
  %288 = load i32*, i32** %287, align 8
  store i32* %288, i32** %_j, align 8
  store i32 0, i32* %pos, align 4
  br label %for.cond.218

for.cond.218:                                     ; preds = %for.inc.228, %for.end.214
  %289 = load i32, i32* %pos, align 4
  %290 = load i32, i32* %max_pos.addr, align 4
  %cmp219 = icmp slt i32 %289, %290
  br i1 %cmp219, label %for.body.220, label %for.end.230

for.body.220:                                     ; preds = %for.cond.218
  %291 = load i32, i32* %pos, align 4
  %idxprom221 = sext i32 %291 to i64
  %292 = load i32*, i32** %_i, align 8
  %arrayidx222 = getelementptr inbounds i32, i32* %292, i64 %idxprom221
  %293 = load i32, i32* %arrayidx222, align 4
  %294 = load i32, i32* %pos, align 4
  %idxprom223 = sext i32 %294 to i64
  %295 = load i32*, i32** %_j, align 8
  %arrayidx224 = getelementptr inbounds i32, i32* %295, i64 %idxprom223
  %296 = load i32, i32* %arrayidx224, align 4
  %add225 = add nsw i32 %293, %296
  %297 = load i32, i32* %pos, align 4
  %idxprom226 = sext i32 %297 to i64
  %298 = load i32*, i32** %_o, align 8
  %arrayidx227 = getelementptr inbounds i32, i32* %298, i64 %idxprom226
  store i32 %add225, i32* %arrayidx227, align 4
  br label %for.inc.228

for.inc.228:                                      ; preds = %for.body.220
  %299 = load i32, i32* %pos, align 4
  %inc229 = add nsw i32 %299, 1
  store i32 %inc229, i32* %pos, align 4
  br label %for.cond.218

for.end.230:                                      ; preds = %for.cond.218
  %300 = load i32**, i32*** %_bo, align 8
  %add.ptr231 = getelementptr inbounds i32*, i32** %300, i64 2
  store i32** %add.ptr231, i32*** %_bo, align 8
  %301 = load i32**, i32*** %_bi, align 8
  %add.ptr232 = getelementptr inbounds i32*, i32** %301, i64 2
  store i32** %add.ptr232, i32*** %_bi, align 8
  %302 = load i32**, i32*** %_bj, align 8
  %add.ptr233 = getelementptr inbounds i32*, i32** %302, i64 2
  store i32** %add.ptr233, i32*** %_bj, align 8
  %303 = load i32**, i32*** %_bo, align 8
  %304 = load i32*, i32** %303, align 8
  store i32* %304, i32** %_o, align 8
  %305 = load i32**, i32*** %_bi, align 8
  %306 = load i32*, i32** %305, align 8
  store i32* %306, i32** %_i, align 8
  %307 = load i32**, i32*** %_bj, align 8
  %308 = load i32*, i32** %307, align 8
  store i32* %308, i32** %_j, align 8
  store i32 0, i32* %pos, align 4
  br label %for.cond.234

for.cond.234:                                     ; preds = %for.inc.244, %for.end.230
  %309 = load i32, i32* %pos, align 4
  %310 = load i32, i32* %max_pos.addr, align 4
  %cmp235 = icmp slt i32 %309, %310
  br i1 %cmp235, label %for.body.236, label %for.end.246

for.body.236:                                     ; preds = %for.cond.234
  %311 = load i32, i32* %pos, align 4
  %idxprom237 = sext i32 %311 to i64
  %312 = load i32*, i32** %_i, align 8
  %arrayidx238 = getelementptr inbounds i32, i32* %312, i64 %idxprom237
  %313 = load i32, i32* %arrayidx238, align 4
  %314 = load i32, i32* %pos, align 4
  %idxprom239 = sext i32 %314 to i64
  %315 = load i32*, i32** %_j, align 8
  %arrayidx240 = getelementptr inbounds i32, i32* %315, i64 %idxprom239
  %316 = load i32, i32* %arrayidx240, align 4
  %add241 = add nsw i32 %313, %316
  %317 = load i32, i32* %pos, align 4
  %idxprom242 = sext i32 %317 to i64
  %318 = load i32*, i32** %_o, align 8
  %arrayidx243 = getelementptr inbounds i32, i32* %318, i64 %idxprom242
  store i32 %add241, i32* %arrayidx243, align 4
  br label %for.inc.244

for.inc.244:                                      ; preds = %for.body.236
  %319 = load i32, i32* %pos, align 4
  %inc245 = add nsw i32 %319, 1
  store i32 %inc245, i32* %pos, align 4
  br label %for.cond.234

for.end.246:                                      ; preds = %for.cond.234
  %320 = load i32**, i32*** %_bo, align 8
  %add.ptr247 = getelementptr inbounds i32*, i32** %320, i64 2
  store i32** %add.ptr247, i32*** %_bo, align 8
  %321 = load i32**, i32*** %_bi, align 8
  %add.ptr248 = getelementptr inbounds i32*, i32** %321, i64 2
  store i32** %add.ptr248, i32*** %_bi, align 8
  %322 = load i32**, i32*** %_bj, align 8
  %add.ptr249 = getelementptr inbounds i32*, i32** %322, i64 2
  store i32** %add.ptr249, i32*** %_bj, align 8
  %323 = load i32**, i32*** %_bo, align 8
  %324 = load i32*, i32** %323, align 8
  store i32* %324, i32** %_o, align 8
  %325 = load i32**, i32*** %_bi, align 8
  %326 = load i32*, i32** %325, align 8
  store i32* %326, i32** %_i, align 8
  %327 = load i32**, i32*** %_bj, align 8
  %328 = load i32*, i32** %327, align 8
  store i32* %328, i32** %_j, align 8
  store i32 0, i32* %pos, align 4
  br label %for.cond.250

for.cond.250:                                     ; preds = %for.inc.260, %for.end.246
  %329 = load i32, i32* %pos, align 4
  %330 = load i32, i32* %max_pos.addr, align 4
  %cmp251 = icmp slt i32 %329, %330
  br i1 %cmp251, label %for.body.252, label %for.end.262

for.body.252:                                     ; preds = %for.cond.250
  %331 = load i32, i32* %pos, align 4
  %idxprom253 = sext i32 %331 to i64
  %332 = load i32*, i32** %_i, align 8
  %arrayidx254 = getelementptr inbounds i32, i32* %332, i64 %idxprom253
  %333 = load i32, i32* %arrayidx254, align 4
  %334 = load i32, i32* %pos, align 4
  %idxprom255 = sext i32 %334 to i64
  %335 = load i32*, i32** %_j, align 8
  %arrayidx256 = getelementptr inbounds i32, i32* %335, i64 %idxprom255
  %336 = load i32, i32* %arrayidx256, align 4
  %add257 = add nsw i32 %333, %336
  %337 = load i32, i32* %pos, align 4
  %idxprom258 = sext i32 %337 to i64
  %338 = load i32*, i32** %_o, align 8
  %arrayidx259 = getelementptr inbounds i32, i32* %338, i64 %idxprom258
  store i32 %add257, i32* %arrayidx259, align 4
  br label %for.inc.260

for.inc.260:                                      ; preds = %for.body.252
  %339 = load i32, i32* %pos, align 4
  %inc261 = add nsw i32 %339, 1
  store i32 %inc261, i32* %pos, align 4
  br label %for.cond.250

for.end.262:                                      ; preds = %for.cond.250
  %340 = load i32, i32* %refindex.addr, align 4
  %idxprom263 = sext i32 %340 to i64
  %341 = load i32, i32* %list.addr, align 4
  %idxprom264 = sext i32 %341 to i64
  %342 = load i32*****, i32****** @BlockSAD, align 8
  %arrayidx265 = getelementptr inbounds i32****, i32***** %342, i64 %idxprom264
  %343 = load i32****, i32***** %arrayidx265, align 8
  %arrayidx266 = getelementptr inbounds i32***, i32**** %343, i64 %idxprom263
  %344 = load i32***, i32**** %arrayidx266, align 8
  %arrayidx267 = getelementptr inbounds i32**, i32*** %344, i64 4
  %345 = load i32**, i32*** %arrayidx267, align 8
  store i32** %345, i32*** %_bo, align 8
  %346 = load i32, i32* %refindex.addr, align 4
  %idxprom268 = sext i32 %346 to i64
  %347 = load i32, i32* %list.addr, align 4
  %idxprom269 = sext i32 %347 to i64
  %348 = load i32*****, i32****** @BlockSAD, align 8
  %arrayidx270 = getelementptr inbounds i32****, i32***** %348, i64 %idxprom269
  %349 = load i32****, i32***** %arrayidx270, align 8
  %arrayidx271 = getelementptr inbounds i32***, i32**** %349, i64 %idxprom268
  %350 = load i32***, i32**** %arrayidx271, align 8
  %arrayidx272 = getelementptr inbounds i32**, i32*** %350, i64 6
  %351 = load i32**, i32*** %arrayidx272, align 8
  store i32** %351, i32*** %_bi, align 8
  %352 = load i32**, i32*** %_bi, align 8
  %add.ptr273 = getelementptr inbounds i32*, i32** %352, i64 1
  store i32** %add.ptr273, i32*** %_bj, align 8
  %353 = load i32**, i32*** %_bo, align 8
  %354 = load i32*, i32** %353, align 8
  store i32* %354, i32** %_o, align 8
  %355 = load i32**, i32*** %_bi, align 8
  %356 = load i32*, i32** %355, align 8
  store i32* %356, i32** %_i, align 8
  %357 = load i32**, i32*** %_bj, align 8
  %358 = load i32*, i32** %357, align 8
  store i32* %358, i32** %_j, align 8
  store i32 0, i32* %pos, align 4
  br label %for.cond.274

for.cond.274:                                     ; preds = %for.inc.284, %for.end.262
  %359 = load i32, i32* %pos, align 4
  %360 = load i32, i32* %max_pos.addr, align 4
  %cmp275 = icmp slt i32 %359, %360
  br i1 %cmp275, label %for.body.276, label %for.end.286

for.body.276:                                     ; preds = %for.cond.274
  %361 = load i32, i32* %pos, align 4
  %idxprom277 = sext i32 %361 to i64
  %362 = load i32*, i32** %_i, align 8
  %arrayidx278 = getelementptr inbounds i32, i32* %362, i64 %idxprom277
  %363 = load i32, i32* %arrayidx278, align 4
  %364 = load i32, i32* %pos, align 4
  %idxprom279 = sext i32 %364 to i64
  %365 = load i32*, i32** %_j, align 8
  %arrayidx280 = getelementptr inbounds i32, i32* %365, i64 %idxprom279
  %366 = load i32, i32* %arrayidx280, align 4
  %add281 = add nsw i32 %363, %366
  %367 = load i32, i32* %pos, align 4
  %idxprom282 = sext i32 %367 to i64
  %368 = load i32*, i32** %_o, align 8
  %arrayidx283 = getelementptr inbounds i32, i32* %368, i64 %idxprom282
  store i32 %add281, i32* %arrayidx283, align 4
  br label %for.inc.284

for.inc.284:                                      ; preds = %for.body.276
  %369 = load i32, i32* %pos, align 4
  %inc285 = add nsw i32 %369, 1
  store i32 %inc285, i32* %pos, align 4
  br label %for.cond.274

for.end.286:                                      ; preds = %for.cond.274
  %370 = load i32**, i32*** %_bo, align 8
  %add.ptr287 = getelementptr inbounds i32*, i32** %370, i64 2
  store i32** %add.ptr287, i32*** %_bo, align 8
  %371 = load i32**, i32*** %_bi, align 8
  %add.ptr288 = getelementptr inbounds i32*, i32** %371, i64 2
  store i32** %add.ptr288, i32*** %_bi, align 8
  %372 = load i32**, i32*** %_bj, align 8
  %add.ptr289 = getelementptr inbounds i32*, i32** %372, i64 2
  store i32** %add.ptr289, i32*** %_bj, align 8
  %373 = load i32**, i32*** %_bo, align 8
  %374 = load i32*, i32** %373, align 8
  store i32* %374, i32** %_o, align 8
  %375 = load i32**, i32*** %_bi, align 8
  %376 = load i32*, i32** %375, align 8
  store i32* %376, i32** %_i, align 8
  %377 = load i32**, i32*** %_bj, align 8
  %378 = load i32*, i32** %377, align 8
  store i32* %378, i32** %_j, align 8
  store i32 0, i32* %pos, align 4
  br label %for.cond.290

for.cond.290:                                     ; preds = %for.inc.300, %for.end.286
  %379 = load i32, i32* %pos, align 4
  %380 = load i32, i32* %max_pos.addr, align 4
  %cmp291 = icmp slt i32 %379, %380
  br i1 %cmp291, label %for.body.292, label %for.end.302

for.body.292:                                     ; preds = %for.cond.290
  %381 = load i32, i32* %pos, align 4
  %idxprom293 = sext i32 %381 to i64
  %382 = load i32*, i32** %_i, align 8
  %arrayidx294 = getelementptr inbounds i32, i32* %382, i64 %idxprom293
  %383 = load i32, i32* %arrayidx294, align 4
  %384 = load i32, i32* %pos, align 4
  %idxprom295 = sext i32 %384 to i64
  %385 = load i32*, i32** %_j, align 8
  %arrayidx296 = getelementptr inbounds i32, i32* %385, i64 %idxprom295
  %386 = load i32, i32* %arrayidx296, align 4
  %add297 = add nsw i32 %383, %386
  %387 = load i32, i32* %pos, align 4
  %idxprom298 = sext i32 %387 to i64
  %388 = load i32*, i32** %_o, align 8
  %arrayidx299 = getelementptr inbounds i32, i32* %388, i64 %idxprom298
  store i32 %add297, i32* %arrayidx299, align 4
  br label %for.inc.300

for.inc.300:                                      ; preds = %for.body.292
  %389 = load i32, i32* %pos, align 4
  %inc301 = add nsw i32 %389, 1
  store i32 %inc301, i32* %pos, align 4
  br label %for.cond.290

for.end.302:                                      ; preds = %for.cond.290
  %390 = load i32**, i32*** %_bo, align 8
  %add.ptr303 = getelementptr inbounds i32*, i32** %390, i64 6
  store i32** %add.ptr303, i32*** %_bo, align 8
  %391 = load i32**, i32*** %_bi, align 8
  %add.ptr304 = getelementptr inbounds i32*, i32** %391, i64 6
  store i32** %add.ptr304, i32*** %_bi, align 8
  %392 = load i32**, i32*** %_bj, align 8
  %add.ptr305 = getelementptr inbounds i32*, i32** %392, i64 6
  store i32** %add.ptr305, i32*** %_bj, align 8
  %393 = load i32**, i32*** %_bo, align 8
  %394 = load i32*, i32** %393, align 8
  store i32* %394, i32** %_o, align 8
  %395 = load i32**, i32*** %_bi, align 8
  %396 = load i32*, i32** %395, align 8
  store i32* %396, i32** %_i, align 8
  %397 = load i32**, i32*** %_bj, align 8
  %398 = load i32*, i32** %397, align 8
  store i32* %398, i32** %_j, align 8
  store i32 0, i32* %pos, align 4
  br label %for.cond.306

for.cond.306:                                     ; preds = %for.inc.316, %for.end.302
  %399 = load i32, i32* %pos, align 4
  %400 = load i32, i32* %max_pos.addr, align 4
  %cmp307 = icmp slt i32 %399, %400
  br i1 %cmp307, label %for.body.308, label %for.end.318

for.body.308:                                     ; preds = %for.cond.306
  %401 = load i32, i32* %pos, align 4
  %idxprom309 = sext i32 %401 to i64
  %402 = load i32*, i32** %_i, align 8
  %arrayidx310 = getelementptr inbounds i32, i32* %402, i64 %idxprom309
  %403 = load i32, i32* %arrayidx310, align 4
  %404 = load i32, i32* %pos, align 4
  %idxprom311 = sext i32 %404 to i64
  %405 = load i32*, i32** %_j, align 8
  %arrayidx312 = getelementptr inbounds i32, i32* %405, i64 %idxprom311
  %406 = load i32, i32* %arrayidx312, align 4
  %add313 = add nsw i32 %403, %406
  %407 = load i32, i32* %pos, align 4
  %idxprom314 = sext i32 %407 to i64
  %408 = load i32*, i32** %_o, align 8
  %arrayidx315 = getelementptr inbounds i32, i32* %408, i64 %idxprom314
  store i32 %add313, i32* %arrayidx315, align 4
  br label %for.inc.316

for.inc.316:                                      ; preds = %for.body.308
  %409 = load i32, i32* %pos, align 4
  %inc317 = add nsw i32 %409, 1
  store i32 %inc317, i32* %pos, align 4
  br label %for.cond.306

for.end.318:                                      ; preds = %for.cond.306
  %410 = load i32**, i32*** %_bo, align 8
  %add.ptr319 = getelementptr inbounds i32*, i32** %410, i64 2
  store i32** %add.ptr319, i32*** %_bo, align 8
  %411 = load i32**, i32*** %_bi, align 8
  %add.ptr320 = getelementptr inbounds i32*, i32** %411, i64 2
  store i32** %add.ptr320, i32*** %_bi, align 8
  %412 = load i32**, i32*** %_bj, align 8
  %add.ptr321 = getelementptr inbounds i32*, i32** %412, i64 2
  store i32** %add.ptr321, i32*** %_bj, align 8
  %413 = load i32**, i32*** %_bo, align 8
  %414 = load i32*, i32** %413, align 8
  store i32* %414, i32** %_o, align 8
  %415 = load i32**, i32*** %_bi, align 8
  %416 = load i32*, i32** %415, align 8
  store i32* %416, i32** %_i, align 8
  %417 = load i32**, i32*** %_bj, align 8
  %418 = load i32*, i32** %417, align 8
  store i32* %418, i32** %_j, align 8
  store i32 0, i32* %pos, align 4
  br label %for.cond.322

for.cond.322:                                     ; preds = %for.inc.332, %for.end.318
  %419 = load i32, i32* %pos, align 4
  %420 = load i32, i32* %max_pos.addr, align 4
  %cmp323 = icmp slt i32 %419, %420
  br i1 %cmp323, label %for.body.324, label %for.end.334

for.body.324:                                     ; preds = %for.cond.322
  %421 = load i32, i32* %pos, align 4
  %idxprom325 = sext i32 %421 to i64
  %422 = load i32*, i32** %_i, align 8
  %arrayidx326 = getelementptr inbounds i32, i32* %422, i64 %idxprom325
  %423 = load i32, i32* %arrayidx326, align 4
  %424 = load i32, i32* %pos, align 4
  %idxprom327 = sext i32 %424 to i64
  %425 = load i32*, i32** %_j, align 8
  %arrayidx328 = getelementptr inbounds i32, i32* %425, i64 %idxprom327
  %426 = load i32, i32* %arrayidx328, align 4
  %add329 = add nsw i32 %423, %426
  %427 = load i32, i32* %pos, align 4
  %idxprom330 = sext i32 %427 to i64
  %428 = load i32*, i32** %_o, align 8
  %arrayidx331 = getelementptr inbounds i32, i32* %428, i64 %idxprom330
  store i32 %add329, i32* %arrayidx331, align 4
  br label %for.inc.332

for.inc.332:                                      ; preds = %for.body.324
  %429 = load i32, i32* %pos, align 4
  %inc333 = add nsw i32 %429, 1
  store i32 %inc333, i32* %pos, align 4
  br label %for.cond.322

for.end.334:                                      ; preds = %for.cond.322
  %430 = load i32, i32* %refindex.addr, align 4
  %idxprom335 = sext i32 %430 to i64
  %431 = load i32, i32* %list.addr, align 4
  %idxprom336 = sext i32 %431 to i64
  %432 = load i32*****, i32****** @BlockSAD, align 8
  %arrayidx337 = getelementptr inbounds i32****, i32***** %432, i64 %idxprom336
  %433 = load i32****, i32***** %arrayidx337, align 8
  %arrayidx338 = getelementptr inbounds i32***, i32**** %433, i64 %idxprom335
  %434 = load i32***, i32**** %arrayidx338, align 8
  %arrayidx339 = getelementptr inbounds i32**, i32*** %434, i64 3
  %435 = load i32**, i32*** %arrayidx339, align 8
  store i32** %435, i32*** %_bo, align 8
  %436 = load i32, i32* %refindex.addr, align 4
  %idxprom340 = sext i32 %436 to i64
  %437 = load i32, i32* %list.addr, align 4
  %idxprom341 = sext i32 %437 to i64
  %438 = load i32*****, i32****** @BlockSAD, align 8
  %arrayidx342 = getelementptr inbounds i32****, i32***** %438, i64 %idxprom341
  %439 = load i32****, i32***** %arrayidx342, align 8
  %arrayidx343 = getelementptr inbounds i32***, i32**** %439, i64 %idxprom340
  %440 = load i32***, i32**** %arrayidx343, align 8
  %arrayidx344 = getelementptr inbounds i32**, i32*** %440, i64 4
  %441 = load i32**, i32*** %arrayidx344, align 8
  store i32** %441, i32*** %_bi, align 8
  %442 = load i32**, i32*** %_bi, align 8
  %add.ptr345 = getelementptr inbounds i32*, i32** %442, i64 8
  store i32** %add.ptr345, i32*** %_bj, align 8
  %443 = load i32**, i32*** %_bo, align 8
  %444 = load i32*, i32** %443, align 8
  store i32* %444, i32** %_o, align 8
  %445 = load i32**, i32*** %_bi, align 8
  %446 = load i32*, i32** %445, align 8
  store i32* %446, i32** %_i, align 8
  %447 = load i32**, i32*** %_bj, align 8
  %448 = load i32*, i32** %447, align 8
  store i32* %448, i32** %_j, align 8
  store i32 0, i32* %pos, align 4
  br label %for.cond.346

for.cond.346:                                     ; preds = %for.inc.356, %for.end.334
  %449 = load i32, i32* %pos, align 4
  %450 = load i32, i32* %max_pos.addr, align 4
  %cmp347 = icmp slt i32 %449, %450
  br i1 %cmp347, label %for.body.348, label %for.end.358

for.body.348:                                     ; preds = %for.cond.346
  %451 = load i32, i32* %pos, align 4
  %idxprom349 = sext i32 %451 to i64
  %452 = load i32*, i32** %_i, align 8
  %arrayidx350 = getelementptr inbounds i32, i32* %452, i64 %idxprom349
  %453 = load i32, i32* %arrayidx350, align 4
  %454 = load i32, i32* %pos, align 4
  %idxprom351 = sext i32 %454 to i64
  %455 = load i32*, i32** %_j, align 8
  %arrayidx352 = getelementptr inbounds i32, i32* %455, i64 %idxprom351
  %456 = load i32, i32* %arrayidx352, align 4
  %add353 = add nsw i32 %453, %456
  %457 = load i32, i32* %pos, align 4
  %idxprom354 = sext i32 %457 to i64
  %458 = load i32*, i32** %_o, align 8
  %arrayidx355 = getelementptr inbounds i32, i32* %458, i64 %idxprom354
  store i32 %add353, i32* %arrayidx355, align 4
  br label %for.inc.356

for.inc.356:                                      ; preds = %for.body.348
  %459 = load i32, i32* %pos, align 4
  %inc357 = add nsw i32 %459, 1
  store i32 %inc357, i32* %pos, align 4
  br label %for.cond.346

for.end.358:                                      ; preds = %for.cond.346
  %460 = load i32**, i32*** %_bo, align 8
  %add.ptr359 = getelementptr inbounds i32*, i32** %460, i64 2
  store i32** %add.ptr359, i32*** %_bo, align 8
  %461 = load i32**, i32*** %_bi, align 8
  %add.ptr360 = getelementptr inbounds i32*, i32** %461, i64 2
  store i32** %add.ptr360, i32*** %_bi, align 8
  %462 = load i32**, i32*** %_bj, align 8
  %add.ptr361 = getelementptr inbounds i32*, i32** %462, i64 2
  store i32** %add.ptr361, i32*** %_bj, align 8
  %463 = load i32**, i32*** %_bo, align 8
  %464 = load i32*, i32** %463, align 8
  store i32* %464, i32** %_o, align 8
  %465 = load i32**, i32*** %_bi, align 8
  %466 = load i32*, i32** %465, align 8
  store i32* %466, i32** %_i, align 8
  %467 = load i32**, i32*** %_bj, align 8
  %468 = load i32*, i32** %467, align 8
  store i32* %468, i32** %_j, align 8
  store i32 0, i32* %pos, align 4
  br label %for.cond.362

for.cond.362:                                     ; preds = %for.inc.372, %for.end.358
  %469 = load i32, i32* %pos, align 4
  %470 = load i32, i32* %max_pos.addr, align 4
  %cmp363 = icmp slt i32 %469, %470
  br i1 %cmp363, label %for.body.364, label %for.end.374

for.body.364:                                     ; preds = %for.cond.362
  %471 = load i32, i32* %pos, align 4
  %idxprom365 = sext i32 %471 to i64
  %472 = load i32*, i32** %_i, align 8
  %arrayidx366 = getelementptr inbounds i32, i32* %472, i64 %idxprom365
  %473 = load i32, i32* %arrayidx366, align 4
  %474 = load i32, i32* %pos, align 4
  %idxprom367 = sext i32 %474 to i64
  %475 = load i32*, i32** %_j, align 8
  %arrayidx368 = getelementptr inbounds i32, i32* %475, i64 %idxprom367
  %476 = load i32, i32* %arrayidx368, align 4
  %add369 = add nsw i32 %473, %476
  %477 = load i32, i32* %pos, align 4
  %idxprom370 = sext i32 %477 to i64
  %478 = load i32*, i32** %_o, align 8
  %arrayidx371 = getelementptr inbounds i32, i32* %478, i64 %idxprom370
  store i32 %add369, i32* %arrayidx371, align 4
  br label %for.inc.372

for.inc.372:                                      ; preds = %for.body.364
  %479 = load i32, i32* %pos, align 4
  %inc373 = add nsw i32 %479, 1
  store i32 %inc373, i32* %pos, align 4
  br label %for.cond.362

for.end.374:                                      ; preds = %for.cond.362
  %480 = load i32, i32* %refindex.addr, align 4
  %idxprom375 = sext i32 %480 to i64
  %481 = load i32, i32* %list.addr, align 4
  %idxprom376 = sext i32 %481 to i64
  %482 = load i32*****, i32****** @BlockSAD, align 8
  %arrayidx377 = getelementptr inbounds i32****, i32***** %482, i64 %idxprom376
  %483 = load i32****, i32***** %arrayidx377, align 8
  %arrayidx378 = getelementptr inbounds i32***, i32**** %483, i64 %idxprom375
  %484 = load i32***, i32**** %arrayidx378, align 8
  %arrayidx379 = getelementptr inbounds i32**, i32*** %484, i64 2
  %485 = load i32**, i32*** %arrayidx379, align 8
  store i32** %485, i32*** %_bo, align 8
  %486 = load i32, i32* %refindex.addr, align 4
  %idxprom380 = sext i32 %486 to i64
  %487 = load i32, i32* %list.addr, align 4
  %idxprom381 = sext i32 %487 to i64
  %488 = load i32*****, i32****** @BlockSAD, align 8
  %arrayidx382 = getelementptr inbounds i32****, i32***** %488, i64 %idxprom381
  %489 = load i32****, i32***** %arrayidx382, align 8
  %arrayidx383 = getelementptr inbounds i32***, i32**** %489, i64 %idxprom380
  %490 = load i32***, i32**** %arrayidx383, align 8
  %arrayidx384 = getelementptr inbounds i32**, i32*** %490, i64 4
  %491 = load i32**, i32*** %arrayidx384, align 8
  store i32** %491, i32*** %_bi, align 8
  %492 = load i32**, i32*** %_bi, align 8
  %add.ptr385 = getelementptr inbounds i32*, i32** %492, i64 2
  store i32** %add.ptr385, i32*** %_bj, align 8
  %493 = load i32**, i32*** %_bo, align 8
  %494 = load i32*, i32** %493, align 8
  store i32* %494, i32** %_o, align 8
  %495 = load i32**, i32*** %_bi, align 8
  %496 = load i32*, i32** %495, align 8
  store i32* %496, i32** %_i, align 8
  %497 = load i32**, i32*** %_bj, align 8
  %498 = load i32*, i32** %497, align 8
  store i32* %498, i32** %_j, align 8
  store i32 0, i32* %pos, align 4
  br label %for.cond.386

for.cond.386:                                     ; preds = %for.inc.396, %for.end.374
  %499 = load i32, i32* %pos, align 4
  %500 = load i32, i32* %max_pos.addr, align 4
  %cmp387 = icmp slt i32 %499, %500
  br i1 %cmp387, label %for.body.388, label %for.end.398

for.body.388:                                     ; preds = %for.cond.386
  %501 = load i32, i32* %pos, align 4
  %idxprom389 = sext i32 %501 to i64
  %502 = load i32*, i32** %_i, align 8
  %arrayidx390 = getelementptr inbounds i32, i32* %502, i64 %idxprom389
  %503 = load i32, i32* %arrayidx390, align 4
  %504 = load i32, i32* %pos, align 4
  %idxprom391 = sext i32 %504 to i64
  %505 = load i32*, i32** %_j, align 8
  %arrayidx392 = getelementptr inbounds i32, i32* %505, i64 %idxprom391
  %506 = load i32, i32* %arrayidx392, align 4
  %add393 = add nsw i32 %503, %506
  %507 = load i32, i32* %pos, align 4
  %idxprom394 = sext i32 %507 to i64
  %508 = load i32*, i32** %_o, align 8
  %arrayidx395 = getelementptr inbounds i32, i32* %508, i64 %idxprom394
  store i32 %add393, i32* %arrayidx395, align 4
  br label %for.inc.396

for.inc.396:                                      ; preds = %for.body.388
  %509 = load i32, i32* %pos, align 4
  %inc397 = add nsw i32 %509, 1
  store i32 %inc397, i32* %pos, align 4
  br label %for.cond.386

for.end.398:                                      ; preds = %for.cond.386
  %510 = load i32**, i32*** %_bo, align 8
  %add.ptr399 = getelementptr inbounds i32*, i32** %510, i64 8
  store i32** %add.ptr399, i32*** %_bo, align 8
  %511 = load i32**, i32*** %_bi, align 8
  %add.ptr400 = getelementptr inbounds i32*, i32** %511, i64 8
  store i32** %add.ptr400, i32*** %_bi, align 8
  %512 = load i32**, i32*** %_bj, align 8
  %add.ptr401 = getelementptr inbounds i32*, i32** %512, i64 8
  store i32** %add.ptr401, i32*** %_bj, align 8
  %513 = load i32**, i32*** %_bo, align 8
  %514 = load i32*, i32** %513, align 8
  store i32* %514, i32** %_o, align 8
  %515 = load i32**, i32*** %_bi, align 8
  %516 = load i32*, i32** %515, align 8
  store i32* %516, i32** %_i, align 8
  %517 = load i32**, i32*** %_bj, align 8
  %518 = load i32*, i32** %517, align 8
  store i32* %518, i32** %_j, align 8
  store i32 0, i32* %pos, align 4
  br label %for.cond.402

for.cond.402:                                     ; preds = %for.inc.412, %for.end.398
  %519 = load i32, i32* %pos, align 4
  %520 = load i32, i32* %max_pos.addr, align 4
  %cmp403 = icmp slt i32 %519, %520
  br i1 %cmp403, label %for.body.404, label %for.end.414

for.body.404:                                     ; preds = %for.cond.402
  %521 = load i32, i32* %pos, align 4
  %idxprom405 = sext i32 %521 to i64
  %522 = load i32*, i32** %_i, align 8
  %arrayidx406 = getelementptr inbounds i32, i32* %522, i64 %idxprom405
  %523 = load i32, i32* %arrayidx406, align 4
  %524 = load i32, i32* %pos, align 4
  %idxprom407 = sext i32 %524 to i64
  %525 = load i32*, i32** %_j, align 8
  %arrayidx408 = getelementptr inbounds i32, i32* %525, i64 %idxprom407
  %526 = load i32, i32* %arrayidx408, align 4
  %add409 = add nsw i32 %523, %526
  %527 = load i32, i32* %pos, align 4
  %idxprom410 = sext i32 %527 to i64
  %528 = load i32*, i32** %_o, align 8
  %arrayidx411 = getelementptr inbounds i32, i32* %528, i64 %idxprom410
  store i32 %add409, i32* %arrayidx411, align 4
  br label %for.inc.412

for.inc.412:                                      ; preds = %for.body.404
  %529 = load i32, i32* %pos, align 4
  %inc413 = add nsw i32 %529, 1
  store i32 %inc413, i32* %pos, align 4
  br label %for.cond.402

for.end.414:                                      ; preds = %for.cond.402
  %530 = load i32, i32* %refindex.addr, align 4
  %idxprom415 = sext i32 %530 to i64
  %531 = load i32, i32* %list.addr, align 4
  %idxprom416 = sext i32 %531 to i64
  %532 = load i32*****, i32****** @BlockSAD, align 8
  %arrayidx417 = getelementptr inbounds i32****, i32***** %532, i64 %idxprom416
  %533 = load i32****, i32***** %arrayidx417, align 8
  %arrayidx418 = getelementptr inbounds i32***, i32**** %533, i64 %idxprom415
  %534 = load i32***, i32**** %arrayidx418, align 8
  %arrayidx419 = getelementptr inbounds i32**, i32*** %534, i64 1
  %535 = load i32**, i32*** %arrayidx419, align 8
  store i32** %535, i32*** %_bo, align 8
  %536 = load i32, i32* %refindex.addr, align 4
  %idxprom420 = sext i32 %536 to i64
  %537 = load i32, i32* %list.addr, align 4
  %idxprom421 = sext i32 %537 to i64
  %538 = load i32*****, i32****** @BlockSAD, align 8
  %arrayidx422 = getelementptr inbounds i32****, i32***** %538, i64 %idxprom421
  %539 = load i32****, i32***** %arrayidx422, align 8
  %arrayidx423 = getelementptr inbounds i32***, i32**** %539, i64 %idxprom420
  %540 = load i32***, i32**** %arrayidx423, align 8
  %arrayidx424 = getelementptr inbounds i32**, i32*** %540, i64 3
  %541 = load i32**, i32*** %arrayidx424, align 8
  store i32** %541, i32*** %_bi, align 8
  %542 = load i32**, i32*** %_bi, align 8
  %add.ptr425 = getelementptr inbounds i32*, i32** %542, i64 2
  store i32** %add.ptr425, i32*** %_bj, align 8
  %543 = load i32**, i32*** %_bo, align 8
  %544 = load i32*, i32** %543, align 8
  store i32* %544, i32** %_o, align 8
  %545 = load i32**, i32*** %_bi, align 8
  %546 = load i32*, i32** %545, align 8
  store i32* %546, i32** %_i, align 8
  %547 = load i32**, i32*** %_bj, align 8
  %548 = load i32*, i32** %547, align 8
  store i32* %548, i32** %_j, align 8
  store i32 0, i32* %pos, align 4
  br label %for.cond.426

for.cond.426:                                     ; preds = %for.inc.436, %for.end.414
  %549 = load i32, i32* %pos, align 4
  %550 = load i32, i32* %max_pos.addr, align 4
  %cmp427 = icmp slt i32 %549, %550
  br i1 %cmp427, label %for.body.428, label %for.end.438

for.body.428:                                     ; preds = %for.cond.426
  %551 = load i32, i32* %pos, align 4
  %idxprom429 = sext i32 %551 to i64
  %552 = load i32*, i32** %_i, align 8
  %arrayidx430 = getelementptr inbounds i32, i32* %552, i64 %idxprom429
  %553 = load i32, i32* %arrayidx430, align 4
  %554 = load i32, i32* %pos, align 4
  %idxprom431 = sext i32 %554 to i64
  %555 = load i32*, i32** %_j, align 8
  %arrayidx432 = getelementptr inbounds i32, i32* %555, i64 %idxprom431
  %556 = load i32, i32* %arrayidx432, align 4
  %add433 = add nsw i32 %553, %556
  %557 = load i32, i32* %pos, align 4
  %idxprom434 = sext i32 %557 to i64
  %558 = load i32*, i32** %_o, align 8
  %arrayidx435 = getelementptr inbounds i32, i32* %558, i64 %idxprom434
  store i32 %add433, i32* %arrayidx435, align 4
  br label %for.inc.436

for.inc.436:                                      ; preds = %for.body.428
  %559 = load i32, i32* %pos, align 4
  %inc437 = add nsw i32 %559, 1
  store i32 %inc437, i32* %pos, align 4
  br label %for.cond.426

for.end.438:                                      ; preds = %for.cond.426
  ret void
}

; Function Attrs: nounwind uwtable
define void @SetupFastFullPelSearch(i16 signext %ref, i32 %list) #0 {
entry:
  %ref.addr = alloca i16, align 2
  %list.addr = alloca i32, align 4
  %pmv = alloca [2 x i16], align 2
  %orig_blocks = alloca [256 x i16], align 16
  %orgptr = alloca i16*, align 8
  %refptr = alloca i16*, align 8
  %offset_x = alloca i32, align 4
  %offset_y = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %range_partly_outside = alloca i32, align 4
  %ref_x = alloca i32, align 4
  %ref_y = alloca i32, align 4
  %pos = alloca i32, align 4
  %abs_x = alloca i32, align 4
  %abs_y = alloca i32, align 4
  %bindex = alloca i32, align 4
  %blky = alloca i32, align 4
  %LineSadBlk0 = alloca i32, align 4
  %LineSadBlk1 = alloca i32, align 4
  %LineSadBlk2 = alloca i32, align 4
  %LineSadBlk3 = alloca i32, align 4
  %max_width = alloca i32, align 4
  %max_height = alloca i32, align 4
  %img_width = alloca i32, align 4
  %img_height = alloca i32, align 4
  %ref_picture = alloca %struct.storable_picture*, align 8
  %ref_pic = alloca i16*, align 8
  %block_sad = alloca i32**, align 8
  %search_range = alloca i32, align 4
  %max_pos = alloca i32, align 4
  %list_offset = alloca i32, align 4
  %apply_weights = alloca i32, align 4
  store i16 %ref, i16* %ref.addr, align 2
  store i32 %list, i32* %list.addr, align 4
  %arraydecay = getelementptr inbounds [256 x i16], [256 x i16]* %orig_blocks, i32 0, i32 0
  store i16* %arraydecay, i16** %orgptr, align 8
  %0 = load i16, i16* %ref.addr, align 2
  %idxprom = sext i16 %0 to i64
  %1 = load i32, i32* %list.addr, align 4
  %idxprom1 = sext i32 %1 to i64
  %2 = load i32*****, i32****** @BlockSAD, align 8
  %arrayidx = getelementptr inbounds i32****, i32***** %2, i64 %idxprom1
  %3 = load i32****, i32***** %arrayidx, align 8
  %arrayidx2 = getelementptr inbounds i32***, i32**** %3, i64 %idxprom
  %4 = load i32***, i32**** %arrayidx2, align 8
  %arrayidx3 = getelementptr inbounds i32**, i32*** %4, i64 7
  %5 = load i32**, i32*** %arrayidx3, align 8
  store i32** %5, i32*** %block_sad, align 8
  %6 = load i16, i16* %ref.addr, align 2
  %idxprom4 = sext i16 %6 to i64
  %7 = load i32, i32* %list.addr, align 4
  %idxprom5 = sext i32 %7 to i64
  %8 = load i32**, i32*** @max_search_range, align 8
  %arrayidx6 = getelementptr inbounds i32*, i32** %8, i64 %idxprom5
  %9 = load i32*, i32** %arrayidx6, align 8
  %arrayidx7 = getelementptr inbounds i32, i32* %9, i64 %idxprom4
  %10 = load i32, i32* %arrayidx7, align 4
  store i32 %10, i32* %search_range, align 4
  %11 = load i32, i32* %search_range, align 4
  %mul = mul nsw i32 2, %11
  %add = add nsw i32 %mul, 1
  %12 = load i32, i32* %search_range, align 4
  %mul8 = mul nsw i32 2, %12
  %add9 = add nsw i32 %mul8, 1
  %mul10 = mul nsw i32 %add, %add9
  store i32 %mul10, i32* %max_pos, align 4
  %13 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %MbaffFrameFlag = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %13, i32 0, i32 90
  %14 = load i32, i32* %MbaffFrameFlag, align 4
  %tobool = icmp ne i32 %14, 0
  br i1 %tobool, label %land.lhs.true, label %cond.false

land.lhs.true:                                    ; preds = %entry
  %15 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %15, i32 0, i32 3
  %16 = load i32, i32* %current_mb_nr, align 4
  %idxprom11 = sext i32 %16 to i64
  %17 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %17, i32 0, i32 51
  %18 = load %struct.macroblock*, %struct.macroblock** %mb_data, align 8
  %arrayidx12 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %18, i64 %idxprom11
  %mb_field = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx12, i32 0, i32 22
  %19 = load i32, i32* %mb_field, align 4
  %tobool13 = icmp ne i32 %19, 0
  br i1 %tobool13, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true
  %20 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr14 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %20, i32 0, i32 3
  %21 = load i32, i32* %current_mb_nr14, align 4
  %rem = srem i32 %21, 2
  %tobool15 = icmp ne i32 %rem, 0
  %cond = select i1 %tobool15, i32 4, i32 2
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true, %entry
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond16 = phi i32 [ %cond, %cond.true ], [ 0, %cond.false ]
  store i32 %cond16, i32* %list_offset, align 4
  %22 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %weighted_pred_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %22, i32 0, i32 19
  %23 = load i32, i32* %weighted_pred_flag, align 4
  %tobool17 = icmp ne i32 %23, 0
  br i1 %tobool17, label %land.lhs.true.18, label %lor.rhs

land.lhs.true.18:                                 ; preds = %cond.end
  %24 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %24, i32 0, i32 6
  %25 = load i32, i32* %type, align 4
  %cmp = icmp eq i32 %25, 0
  br i1 %cmp, label %lor.end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true.18
  %26 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type19 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %26, i32 0, i32 6
  %27 = load i32, i32* %type19, align 4
  %cmp20 = icmp eq i32 %27, 3
  br i1 %cmp20, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %lor.lhs.false, %cond.end
  %28 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %weighted_bipred_idc = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %28, i32 0, i32 20
  %29 = load i32, i32* %weighted_bipred_idc, align 4
  %tobool21 = icmp ne i32 %29, 0
  br i1 %tobool21, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %lor.rhs
  %30 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type22 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %30, i32 0, i32 6
  %31 = load i32, i32* %type22, align 4
  %cmp23 = icmp eq i32 %31, 1
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.rhs
  %32 = phi i1 [ false, %lor.rhs ], [ %cmp23, %land.rhs ]
  br label %lor.end

lor.end:                                          ; preds = %land.end, %lor.lhs.false, %land.lhs.true.18
  %33 = phi i1 [ true, %lor.lhs.false ], [ true, %land.lhs.true.18 ], [ %32, %land.end ]
  %lor.ext = zext i1 %33 to i32
  store i32 %lor.ext, i32* %apply_weights, align 4
  %34 = load i16, i16* %ref.addr, align 2
  %idxprom24 = sext i16 %34 to i64
  %35 = load i32, i32* %list.addr, align 4
  %36 = load i32, i32* %list_offset, align 4
  %add25 = add nsw i32 %35, %36
  %idxprom26 = sext i32 %add25 to i64
  %arrayidx27 = getelementptr inbounds [6 x %struct.storable_picture**], [6 x %struct.storable_picture**]* @listX, i32 0, i64 %idxprom26
  %37 = load %struct.storable_picture**, %struct.storable_picture*** %arrayidx27, align 8
  %arrayidx28 = getelementptr inbounds %struct.storable_picture*, %struct.storable_picture** %37, i64 %idxprom24
  %38 = load %struct.storable_picture*, %struct.storable_picture** %arrayidx28, align 8
  store %struct.storable_picture* %38, %struct.storable_picture** %ref_picture, align 8
  %39 = load i32, i32* %apply_weights, align 4
  %tobool29 = icmp ne i32 %39, 0
  br i1 %tobool29, label %land.lhs.true.30, label %if.else

land.lhs.true.30:                                 ; preds = %lor.end
  %40 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %UseWeightedReferenceME = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %40, i32 0, i32 48
  %41 = load i32, i32* %UseWeightedReferenceME, align 4
  %tobool31 = icmp ne i32 %41, 0
  br i1 %tobool31, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true.30
  %42 = load %struct.storable_picture*, %struct.storable_picture** %ref_picture, align 8
  %imgY_11_w = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %42, i32 0, i32 27
  %43 = load i16*, i16** %imgY_11_w, align 8
  store i16* %43, i16** %ref_pic, align 8
  br label %if.end

if.else:                                          ; preds = %land.lhs.true.30, %lor.end
  %44 = load %struct.storable_picture*, %struct.storable_picture** %ref_picture, align 8
  %imgY_11 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %44, i32 0, i32 26
  %45 = load i16*, i16** %imgY_11, align 8
  store i16* %45, i16** %ref_pic, align 8
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %46 = load %struct.storable_picture*, %struct.storable_picture** %ref_picture, align 8
  %size_x = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %46, i32 0, i32 18
  %47 = load i32, i32* %size_x, align 4
  %sub = sub nsw i32 %47, 17
  store i32 %sub, i32* %max_width, align 4
  %48 = load %struct.storable_picture*, %struct.storable_picture** %ref_picture, align 8
  %size_y = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %48, i32 0, i32 19
  %49 = load i32, i32* %size_y, align 4
  %sub32 = sub nsw i32 %49, 17
  store i32 %sub32, i32* %max_height, align 4
  %50 = load %struct.storable_picture*, %struct.storable_picture** %ref_picture, align 8
  %size_x33 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %50, i32 0, i32 18
  %51 = load i32, i32* %size_x33, align 4
  store i32 %51, i32* %img_width, align 4
  %52 = load %struct.storable_picture*, %struct.storable_picture** %ref_picture, align 8
  %size_y34 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %52, i32 0, i32 19
  %53 = load i32, i32* %size_y34, align 4
  store i32 %53, i32* %img_height, align 4
  %arraydecay35 = getelementptr inbounds [2 x i16], [2 x i16]* %pmv, i32 0, i32 0
  %54 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %54, i32 0, i32 32
  %55 = load i16***, i16**** %ref_idx, align 8
  %56 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %mv = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %56, i32 0, i32 35
  %57 = load i16****, i16***** %mv, align 8
  %58 = load i16, i16* %ref.addr, align 2
  %59 = load i32, i32* %list.addr, align 4
  call void @SetMotionVectorPredictor(i16* %arraydecay35, i16*** %55, i16**** %57, i16 signext %58, i32 %59, i32 0, i32 0, i32 16, i32 16)
  %arrayidx36 = getelementptr inbounds [2 x i16], [2 x i16]* %pmv, i32 0, i64 0
  %60 = load i16, i16* %arrayidx36, align 2
  %conv = sext i16 %60 to i32
  %div = sdiv i32 %conv, 4
  %61 = load i16, i16* %ref.addr, align 2
  %idxprom37 = sext i16 %61 to i64
  %62 = load i32, i32* %list.addr, align 4
  %idxprom38 = sext i32 %62 to i64
  %63 = load i32**, i32*** @search_center_x, align 8
  %arrayidx39 = getelementptr inbounds i32*, i32** %63, i64 %idxprom38
  %64 = load i32*, i32** %arrayidx39, align 8
  %arrayidx40 = getelementptr inbounds i32, i32* %64, i64 %idxprom37
  store i32 %div, i32* %arrayidx40, align 4
  %arrayidx41 = getelementptr inbounds [2 x i16], [2 x i16]* %pmv, i32 0, i64 1
  %65 = load i16, i16* %arrayidx41, align 2
  %conv42 = sext i16 %65 to i32
  %div43 = sdiv i32 %conv42, 4
  %66 = load i16, i16* %ref.addr, align 2
  %idxprom44 = sext i16 %66 to i64
  %67 = load i32, i32* %list.addr, align 4
  %idxprom45 = sext i32 %67 to i64
  %68 = load i32**, i32*** @search_center_y, align 8
  %arrayidx46 = getelementptr inbounds i32*, i32** %68, i64 %idxprom45
  %69 = load i32*, i32** %arrayidx46, align 8
  %arrayidx47 = getelementptr inbounds i32, i32* %69, i64 %idxprom44
  store i32 %div43, i32* %arrayidx47, align 4
  %70 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %rdopt = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %70, i32 0, i32 85
  %71 = load i32, i32* %rdopt, align 4
  %tobool48 = icmp ne i32 %71, 0
  br i1 %tobool48, label %if.end.130, label %if.then.49

if.then.49:                                       ; preds = %if.end
  %72 = load i32, i32* %search_range, align 4
  %sub50 = sub nsw i32 0, %72
  %73 = load i32, i32* %search_range, align 4
  %74 = load i16, i16* %ref.addr, align 2
  %idxprom51 = sext i16 %74 to i64
  %75 = load i32, i32* %list.addr, align 4
  %idxprom52 = sext i32 %75 to i64
  %76 = load i32**, i32*** @search_center_x, align 8
  %arrayidx53 = getelementptr inbounds i32*, i32** %76, i64 %idxprom52
  %77 = load i32*, i32** %arrayidx53, align 8
  %arrayidx54 = getelementptr inbounds i32, i32* %77, i64 %idxprom51
  %78 = load i32, i32* %arrayidx54, align 4
  %cmp55 = icmp slt i32 %73, %78
  br i1 %cmp55, label %cond.true.57, label %cond.false.58

cond.true.57:                                     ; preds = %if.then.49
  %79 = load i32, i32* %search_range, align 4
  br label %cond.end.63

cond.false.58:                                    ; preds = %if.then.49
  %80 = load i16, i16* %ref.addr, align 2
  %idxprom59 = sext i16 %80 to i64
  %81 = load i32, i32* %list.addr, align 4
  %idxprom60 = sext i32 %81 to i64
  %82 = load i32**, i32*** @search_center_x, align 8
  %arrayidx61 = getelementptr inbounds i32*, i32** %82, i64 %idxprom60
  %83 = load i32*, i32** %arrayidx61, align 8
  %arrayidx62 = getelementptr inbounds i32, i32* %83, i64 %idxprom59
  %84 = load i32, i32* %arrayidx62, align 4
  br label %cond.end.63

cond.end.63:                                      ; preds = %cond.false.58, %cond.true.57
  %cond64 = phi i32 [ %79, %cond.true.57 ], [ %84, %cond.false.58 ]
  %cmp65 = icmp sgt i32 %sub50, %cond64
  br i1 %cmp65, label %cond.true.67, label %cond.false.69

cond.true.67:                                     ; preds = %cond.end.63
  %85 = load i32, i32* %search_range, align 4
  %sub68 = sub nsw i32 0, %85
  br label %cond.end.84

cond.false.69:                                    ; preds = %cond.end.63
  %86 = load i32, i32* %search_range, align 4
  %87 = load i16, i16* %ref.addr, align 2
  %idxprom70 = sext i16 %87 to i64
  %88 = load i32, i32* %list.addr, align 4
  %idxprom71 = sext i32 %88 to i64
  %89 = load i32**, i32*** @search_center_x, align 8
  %arrayidx72 = getelementptr inbounds i32*, i32** %89, i64 %idxprom71
  %90 = load i32*, i32** %arrayidx72, align 8
  %arrayidx73 = getelementptr inbounds i32, i32* %90, i64 %idxprom70
  %91 = load i32, i32* %arrayidx73, align 4
  %cmp74 = icmp slt i32 %86, %91
  br i1 %cmp74, label %cond.true.76, label %cond.false.77

cond.true.76:                                     ; preds = %cond.false.69
  %92 = load i32, i32* %search_range, align 4
  br label %cond.end.82

cond.false.77:                                    ; preds = %cond.false.69
  %93 = load i16, i16* %ref.addr, align 2
  %idxprom78 = sext i16 %93 to i64
  %94 = load i32, i32* %list.addr, align 4
  %idxprom79 = sext i32 %94 to i64
  %95 = load i32**, i32*** @search_center_x, align 8
  %arrayidx80 = getelementptr inbounds i32*, i32** %95, i64 %idxprom79
  %96 = load i32*, i32** %arrayidx80, align 8
  %arrayidx81 = getelementptr inbounds i32, i32* %96, i64 %idxprom78
  %97 = load i32, i32* %arrayidx81, align 4
  br label %cond.end.82

cond.end.82:                                      ; preds = %cond.false.77, %cond.true.76
  %cond83 = phi i32 [ %92, %cond.true.76 ], [ %97, %cond.false.77 ]
  br label %cond.end.84

cond.end.84:                                      ; preds = %cond.end.82, %cond.true.67
  %cond85 = phi i32 [ %sub68, %cond.true.67 ], [ %cond83, %cond.end.82 ]
  %98 = load i16, i16* %ref.addr, align 2
  %idxprom86 = sext i16 %98 to i64
  %99 = load i32, i32* %list.addr, align 4
  %idxprom87 = sext i32 %99 to i64
  %100 = load i32**, i32*** @search_center_x, align 8
  %arrayidx88 = getelementptr inbounds i32*, i32** %100, i64 %idxprom87
  %101 = load i32*, i32** %arrayidx88, align 8
  %arrayidx89 = getelementptr inbounds i32, i32* %101, i64 %idxprom86
  store i32 %cond85, i32* %arrayidx89, align 4
  %102 = load i32, i32* %search_range, align 4
  %sub90 = sub nsw i32 0, %102
  %103 = load i32, i32* %search_range, align 4
  %104 = load i16, i16* %ref.addr, align 2
  %idxprom91 = sext i16 %104 to i64
  %105 = load i32, i32* %list.addr, align 4
  %idxprom92 = sext i32 %105 to i64
  %106 = load i32**, i32*** @search_center_y, align 8
  %arrayidx93 = getelementptr inbounds i32*, i32** %106, i64 %idxprom92
  %107 = load i32*, i32** %arrayidx93, align 8
  %arrayidx94 = getelementptr inbounds i32, i32* %107, i64 %idxprom91
  %108 = load i32, i32* %arrayidx94, align 4
  %cmp95 = icmp slt i32 %103, %108
  br i1 %cmp95, label %cond.true.97, label %cond.false.98

cond.true.97:                                     ; preds = %cond.end.84
  %109 = load i32, i32* %search_range, align 4
  br label %cond.end.103

cond.false.98:                                    ; preds = %cond.end.84
  %110 = load i16, i16* %ref.addr, align 2
  %idxprom99 = sext i16 %110 to i64
  %111 = load i32, i32* %list.addr, align 4
  %idxprom100 = sext i32 %111 to i64
  %112 = load i32**, i32*** @search_center_y, align 8
  %arrayidx101 = getelementptr inbounds i32*, i32** %112, i64 %idxprom100
  %113 = load i32*, i32** %arrayidx101, align 8
  %arrayidx102 = getelementptr inbounds i32, i32* %113, i64 %idxprom99
  %114 = load i32, i32* %arrayidx102, align 4
  br label %cond.end.103

cond.end.103:                                     ; preds = %cond.false.98, %cond.true.97
  %cond104 = phi i32 [ %109, %cond.true.97 ], [ %114, %cond.false.98 ]
  %cmp105 = icmp sgt i32 %sub90, %cond104
  br i1 %cmp105, label %cond.true.107, label %cond.false.109

cond.true.107:                                    ; preds = %cond.end.103
  %115 = load i32, i32* %search_range, align 4
  %sub108 = sub nsw i32 0, %115
  br label %cond.end.124

cond.false.109:                                   ; preds = %cond.end.103
  %116 = load i32, i32* %search_range, align 4
  %117 = load i16, i16* %ref.addr, align 2
  %idxprom110 = sext i16 %117 to i64
  %118 = load i32, i32* %list.addr, align 4
  %idxprom111 = sext i32 %118 to i64
  %119 = load i32**, i32*** @search_center_y, align 8
  %arrayidx112 = getelementptr inbounds i32*, i32** %119, i64 %idxprom111
  %120 = load i32*, i32** %arrayidx112, align 8
  %arrayidx113 = getelementptr inbounds i32, i32* %120, i64 %idxprom110
  %121 = load i32, i32* %arrayidx113, align 4
  %cmp114 = icmp slt i32 %116, %121
  br i1 %cmp114, label %cond.true.116, label %cond.false.117

cond.true.116:                                    ; preds = %cond.false.109
  %122 = load i32, i32* %search_range, align 4
  br label %cond.end.122

cond.false.117:                                   ; preds = %cond.false.109
  %123 = load i16, i16* %ref.addr, align 2
  %idxprom118 = sext i16 %123 to i64
  %124 = load i32, i32* %list.addr, align 4
  %idxprom119 = sext i32 %124 to i64
  %125 = load i32**, i32*** @search_center_y, align 8
  %arrayidx120 = getelementptr inbounds i32*, i32** %125, i64 %idxprom119
  %126 = load i32*, i32** %arrayidx120, align 8
  %arrayidx121 = getelementptr inbounds i32, i32* %126, i64 %idxprom118
  %127 = load i32, i32* %arrayidx121, align 4
  br label %cond.end.122

cond.end.122:                                     ; preds = %cond.false.117, %cond.true.116
  %cond123 = phi i32 [ %122, %cond.true.116 ], [ %127, %cond.false.117 ]
  br label %cond.end.124

cond.end.124:                                     ; preds = %cond.end.122, %cond.true.107
  %cond125 = phi i32 [ %sub108, %cond.true.107 ], [ %cond123, %cond.end.122 ]
  %128 = load i16, i16* %ref.addr, align 2
  %idxprom126 = sext i16 %128 to i64
  %129 = load i32, i32* %list.addr, align 4
  %idxprom127 = sext i32 %129 to i64
  %130 = load i32**, i32*** @search_center_y, align 8
  %arrayidx128 = getelementptr inbounds i32*, i32** %130, i64 %idxprom127
  %131 = load i32*, i32** %arrayidx128, align 8
  %arrayidx129 = getelementptr inbounds i32, i32* %131, i64 %idxprom126
  store i32 %cond125, i32* %arrayidx129, align 4
  br label %if.end.130

if.end.130:                                       ; preds = %cond.end.124, %if.end
  %132 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %opix_x = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %132, i32 0, i32 37
  %133 = load i32, i32* %opix_x, align 4
  %134 = load i16, i16* %ref.addr, align 2
  %idxprom131 = sext i16 %134 to i64
  %135 = load i32, i32* %list.addr, align 4
  %idxprom132 = sext i32 %135 to i64
  %136 = load i32**, i32*** @search_center_x, align 8
  %arrayidx133 = getelementptr inbounds i32*, i32** %136, i64 %idxprom132
  %137 = load i32*, i32** %arrayidx133, align 8
  %arrayidx134 = getelementptr inbounds i32, i32* %137, i64 %idxprom131
  %138 = load i32, i32* %arrayidx134, align 4
  %add135 = add nsw i32 %138, %133
  store i32 %add135, i32* %arrayidx134, align 4
  %139 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %opix_y = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %139, i32 0, i32 38
  %140 = load i32, i32* %opix_y, align 4
  %141 = load i16, i16* %ref.addr, align 2
  %idxprom136 = sext i16 %141 to i64
  %142 = load i32, i32* %list.addr, align 4
  %idxprom137 = sext i32 %142 to i64
  %143 = load i32**, i32*** @search_center_y, align 8
  %arrayidx138 = getelementptr inbounds i32*, i32** %143, i64 %idxprom137
  %144 = load i32*, i32** %arrayidx138, align 8
  %arrayidx139 = getelementptr inbounds i32, i32* %144, i64 %idxprom136
  %145 = load i32, i32* %arrayidx139, align 4
  %add140 = add nsw i32 %145, %140
  store i32 %add140, i32* %arrayidx139, align 4
  %146 = load i16, i16* %ref.addr, align 2
  %idxprom141 = sext i16 %146 to i64
  %147 = load i32, i32* %list.addr, align 4
  %idxprom142 = sext i32 %147 to i64
  %148 = load i32**, i32*** @search_center_x, align 8
  %arrayidx143 = getelementptr inbounds i32*, i32** %148, i64 %idxprom142
  %149 = load i32*, i32** %arrayidx143, align 8
  %arrayidx144 = getelementptr inbounds i32, i32* %149, i64 %idxprom141
  %150 = load i32, i32* %arrayidx144, align 4
  store i32 %150, i32* %offset_x, align 4
  %151 = load i16, i16* %ref.addr, align 2
  %idxprom145 = sext i16 %151 to i64
  %152 = load i32, i32* %list.addr, align 4
  %idxprom146 = sext i32 %152 to i64
  %153 = load i32**, i32*** @search_center_y, align 8
  %arrayidx147 = getelementptr inbounds i32*, i32** %153, i64 %idxprom146
  %154 = load i32*, i32** %arrayidx147, align 8
  %arrayidx148 = getelementptr inbounds i32, i32* %154, i64 %idxprom145
  %155 = load i32, i32* %arrayidx148, align 4
  store i32 %155, i32* %offset_y, align 4
  %156 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %opix_y149 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %156, i32 0, i32 38
  %157 = load i32, i32* %opix_y149, align 4
  store i32 %157, i32* %y, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc.165, %if.end.130
  %158 = load i32, i32* %y, align 4
  %159 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %opix_y150 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %159, i32 0, i32 38
  %160 = load i32, i32* %opix_y150, align 4
  %add151 = add nsw i32 %160, 16
  %cmp152 = icmp slt i32 %158, %add151
  br i1 %cmp152, label %for.body, label %for.end.167

for.body:                                         ; preds = %for.cond
  %161 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %opix_x154 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %161, i32 0, i32 37
  %162 = load i32, i32* %opix_x154, align 4
  store i32 %162, i32* %x, align 4
  br label %for.cond.155

for.cond.155:                                     ; preds = %for.inc, %for.body
  %163 = load i32, i32* %x, align 4
  %164 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %opix_x156 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %164, i32 0, i32 37
  %165 = load i32, i32* %opix_x156, align 4
  %add157 = add nsw i32 %165, 16
  %cmp158 = icmp slt i32 %163, %add157
  br i1 %cmp158, label %for.body.160, label %for.end

for.body.160:                                     ; preds = %for.cond.155
  %166 = load i32, i32* %x, align 4
  %idxprom161 = sext i32 %166 to i64
  %167 = load i32, i32* %y, align 4
  %idxprom162 = sext i32 %167 to i64
  %168 = load i16**, i16*** @imgY_org, align 8
  %arrayidx163 = getelementptr inbounds i16*, i16** %168, i64 %idxprom162
  %169 = load i16*, i16** %arrayidx163, align 8
  %arrayidx164 = getelementptr inbounds i16, i16* %169, i64 %idxprom161
  %170 = load i16, i16* %arrayidx164, align 2
  %171 = load i16*, i16** %orgptr, align 8
  %incdec.ptr = getelementptr inbounds i16, i16* %171, i32 1
  store i16* %incdec.ptr, i16** %orgptr, align 8
  store i16 %170, i16* %171, align 2
  br label %for.inc

for.inc:                                          ; preds = %for.body.160
  %172 = load i32, i32* %x, align 4
  %inc = add nsw i32 %172, 1
  store i32 %inc, i32* %x, align 4
  br label %for.cond.155

for.end:                                          ; preds = %for.cond.155
  br label %for.inc.165

for.inc.165:                                      ; preds = %for.end
  %173 = load i32, i32* %y, align 4
  %inc166 = add nsw i32 %173, 1
  store i32 %inc166, i32* %y, align 4
  br label %for.cond

for.end.167:                                      ; preds = %for.cond
  %174 = load i32, i32* %offset_x, align 4
  %175 = load i32, i32* %search_range, align 4
  %cmp168 = icmp sge i32 %174, %175
  br i1 %cmp168, label %land.lhs.true.170, label %if.else.182

land.lhs.true.170:                                ; preds = %for.end.167
  %176 = load i32, i32* %offset_x, align 4
  %177 = load i32, i32* %max_width, align 4
  %178 = load i32, i32* %search_range, align 4
  %sub171 = sub nsw i32 %177, %178
  %cmp172 = icmp sle i32 %176, %sub171
  br i1 %cmp172, label %land.lhs.true.174, label %if.else.182

land.lhs.true.174:                                ; preds = %land.lhs.true.170
  %179 = load i32, i32* %offset_y, align 4
  %180 = load i32, i32* %search_range, align 4
  %cmp175 = icmp sge i32 %179, %180
  br i1 %cmp175, label %land.lhs.true.177, label %if.else.182

land.lhs.true.177:                                ; preds = %land.lhs.true.174
  %181 = load i32, i32* %offset_y, align 4
  %182 = load i32, i32* %max_height, align 4
  %183 = load i32, i32* %search_range, align 4
  %sub178 = sub nsw i32 %182, %183
  %cmp179 = icmp sle i32 %181, %sub178
  br i1 %cmp179, label %if.then.181, label %if.else.182

if.then.181:                                      ; preds = %land.lhs.true.177
  store i32 0, i32* %range_partly_outside, align 4
  store i16* (i16*, i32, i32, i32, i32)* @FastLine16Y_11, i16* (i16*, i32, i32, i32, i32)** @PelYline_11, align 8
  br label %if.end.183

if.else.182:                                      ; preds = %land.lhs.true.177, %land.lhs.true.174, %land.lhs.true.170, %for.end.167
  store i32 1, i32* %range_partly_outside, align 4
  br label %if.end.183

if.end.183:                                       ; preds = %if.else.182, %if.then.181
  %184 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %rdopt184 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %184, i32 0, i32 85
  %185 = load i32, i32* %rdopt184, align 4
  %tobool185 = icmp ne i32 %185, 0
  br i1 %tobool185, label %if.end.213, label %if.then.186

if.then.186:                                      ; preds = %if.end.183
  %186 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %opix_x187 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %186, i32 0, i32 37
  %187 = load i32, i32* %opix_x187, align 4
  %188 = load i32, i32* %offset_x, align 4
  %sub188 = sub nsw i32 %187, %188
  store i32 %sub188, i32* %ref_x, align 4
  %189 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %opix_y189 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %189, i32 0, i32 38
  %190 = load i32, i32* %opix_y189, align 4
  %191 = load i32, i32* %offset_y, align 4
  %sub190 = sub nsw i32 %190, %191
  store i32 %sub190, i32* %ref_y, align 4
  store i32 0, i32* %pos, align 4
  br label %for.cond.191

for.cond.191:                                     ; preds = %for.inc.210, %if.then.186
  %192 = load i32, i32* %pos, align 4
  %193 = load i32, i32* %max_pos, align 4
  %cmp192 = icmp slt i32 %192, %193
  br i1 %cmp192, label %for.body.194, label %for.end.212

for.body.194:                                     ; preds = %for.cond.191
  %194 = load i32, i32* %ref_x, align 4
  %195 = load i32, i32* %pos, align 4
  %idxprom195 = sext i32 %195 to i64
  %196 = load i32*, i32** @spiral_search_x, align 8
  %arrayidx196 = getelementptr inbounds i32, i32* %196, i64 %idxprom195
  %197 = load i32, i32* %arrayidx196, align 4
  %cmp197 = icmp eq i32 %194, %197
  br i1 %cmp197, label %land.lhs.true.199, label %if.end.209

land.lhs.true.199:                                ; preds = %for.body.194
  %198 = load i32, i32* %ref_y, align 4
  %199 = load i32, i32* %pos, align 4
  %idxprom200 = sext i32 %199 to i64
  %200 = load i32*, i32** @spiral_search_y, align 8
  %arrayidx201 = getelementptr inbounds i32, i32* %200, i64 %idxprom200
  %201 = load i32, i32* %arrayidx201, align 4
  %cmp202 = icmp eq i32 %198, %201
  br i1 %cmp202, label %if.then.204, label %if.end.209

if.then.204:                                      ; preds = %land.lhs.true.199
  %202 = load i32, i32* %pos, align 4
  %203 = load i16, i16* %ref.addr, align 2
  %idxprom205 = sext i16 %203 to i64
  %204 = load i32, i32* %list.addr, align 4
  %idxprom206 = sext i32 %204 to i64
  %205 = load i32**, i32*** @pos_00, align 8
  %arrayidx207 = getelementptr inbounds i32*, i32** %205, i64 %idxprom206
  %206 = load i32*, i32** %arrayidx207, align 8
  %arrayidx208 = getelementptr inbounds i32, i32* %206, i64 %idxprom205
  store i32 %202, i32* %arrayidx208, align 4
  br label %for.end.212

if.end.209:                                       ; preds = %land.lhs.true.199, %for.body.194
  br label %for.inc.210

for.inc.210:                                      ; preds = %if.end.209
  %207 = load i32, i32* %pos, align 4
  %inc211 = add nsw i32 %207, 1
  store i32 %inc211, i32* %pos, align 4
  br label %for.cond.191

for.end.212:                                      ; preds = %if.then.204, %for.cond.191
  br label %if.end.213

if.end.213:                                       ; preds = %for.end.212, %if.end.183
  store i32 0, i32* %pos, align 4
  br label %for.cond.214

for.cond.214:                                     ; preds = %for.inc.405, %if.end.213
  %208 = load i32, i32* %pos, align 4
  %209 = load i32, i32* %max_pos, align 4
  %cmp215 = icmp slt i32 %208, %209
  br i1 %cmp215, label %for.body.217, label %for.end.407

for.body.217:                                     ; preds = %for.cond.214
  %210 = load i32, i32* %offset_y, align 4
  %211 = load i32, i32* %pos, align 4
  %idxprom218 = sext i32 %211 to i64
  %212 = load i32*, i32** @spiral_search_y, align 8
  %arrayidx219 = getelementptr inbounds i32, i32* %212, i64 %idxprom218
  %213 = load i32, i32* %arrayidx219, align 4
  %add220 = add nsw i32 %210, %213
  store i32 %add220, i32* %abs_y, align 4
  %214 = load i32, i32* %offset_x, align 4
  %215 = load i32, i32* %pos, align 4
  %idxprom221 = sext i32 %215 to i64
  %216 = load i32*, i32** @spiral_search_x, align 8
  %arrayidx222 = getelementptr inbounds i32, i32* %216, i64 %idxprom221
  %217 = load i32, i32* %arrayidx222, align 4
  %add223 = add nsw i32 %214, %217
  store i32 %add223, i32* %abs_x, align 4
  %218 = load i32, i32* %range_partly_outside, align 4
  %tobool224 = icmp ne i32 %218, 0
  br i1 %tobool224, label %if.then.225, label %if.end.240

if.then.225:                                      ; preds = %for.body.217
  %219 = load i32, i32* %abs_y, align 4
  %cmp226 = icmp sge i32 %219, 0
  br i1 %cmp226, label %land.lhs.true.228, label %if.else.238

land.lhs.true.228:                                ; preds = %if.then.225
  %220 = load i32, i32* %abs_y, align 4
  %221 = load i32, i32* %max_height, align 4
  %cmp229 = icmp sle i32 %220, %221
  br i1 %cmp229, label %land.lhs.true.231, label %if.else.238

land.lhs.true.231:                                ; preds = %land.lhs.true.228
  %222 = load i32, i32* %abs_x, align 4
  %cmp232 = icmp sge i32 %222, 0
  br i1 %cmp232, label %land.lhs.true.234, label %if.else.238

land.lhs.true.234:                                ; preds = %land.lhs.true.231
  %223 = load i32, i32* %abs_x, align 4
  %224 = load i32, i32* %max_width, align 4
  %cmp235 = icmp sle i32 %223, %224
  br i1 %cmp235, label %if.then.237, label %if.else.238

if.then.237:                                      ; preds = %land.lhs.true.234
  store i16* (i16*, i32, i32, i32, i32)* @FastLine16Y_11, i16* (i16*, i32, i32, i32, i32)** @PelYline_11, align 8
  br label %if.end.239

if.else.238:                                      ; preds = %land.lhs.true.234, %land.lhs.true.231, %land.lhs.true.228, %if.then.225
  store i16* (i16*, i32, i32, i32, i32)* @UMVLine16Y_11, i16* (i16*, i32, i32, i32, i32)** @PelYline_11, align 8
  br label %if.end.239

if.end.239:                                       ; preds = %if.else.238, %if.then.237
  br label %if.end.240

if.end.240:                                       ; preds = %if.end.239, %for.body.217
  %arraydecay241 = getelementptr inbounds [256 x i16], [256 x i16]* %orig_blocks, i32 0, i32 0
  store i16* %arraydecay241, i16** %orgptr, align 8
  store i32 0, i32* %bindex, align 4
  store i32 0, i32* %blky, align 4
  br label %for.cond.242

for.cond.242:                                     ; preds = %for.inc.402, %if.end.240
  %225 = load i32, i32* %blky, align 4
  %cmp243 = icmp slt i32 %225, 4
  br i1 %cmp243, label %for.body.245, label %for.end.404

for.body.245:                                     ; preds = %for.cond.242
  store i32 0, i32* %LineSadBlk3, align 4
  store i32 0, i32* %LineSadBlk2, align 4
  store i32 0, i32* %LineSadBlk1, align 4
  store i32 0, i32* %LineSadBlk0, align 4
  store i32 0, i32* %y, align 4
  br label %for.cond.246

for.cond.246:                                     ; preds = %for.inc.379, %for.body.245
  %226 = load i32, i32* %y, align 4
  %cmp247 = icmp slt i32 %226, 4
  br i1 %cmp247, label %for.body.249, label %for.end.381

for.body.249:                                     ; preds = %for.cond.246
  %227 = load i16* (i16*, i32, i32, i32, i32)*, i16* (i16*, i32, i32, i32, i32)** @PelYline_11, align 8
  %228 = load i16*, i16** %ref_pic, align 8
  %229 = load i32, i32* %abs_y, align 4
  %inc250 = add nsw i32 %229, 1
  store i32 %inc250, i32* %abs_y, align 4
  %230 = load i32, i32* %abs_x, align 4
  %231 = load i32, i32* %img_height, align 4
  %232 = load i32, i32* %img_width, align 4
  %call = call i16* %227(i16* %228, i32 %229, i32 %230, i32 %231, i32 %232)
  store i16* %call, i16** %refptr, align 8
  %233 = load i16*, i16** %refptr, align 8
  %incdec.ptr251 = getelementptr inbounds i16, i16* %233, i32 1
  store i16* %incdec.ptr251, i16** %refptr, align 8
  %234 = load i16, i16* %233, align 2
  %conv252 = zext i16 %234 to i32
  %235 = load i16*, i16** %orgptr, align 8
  %incdec.ptr253 = getelementptr inbounds i16, i16* %235, i32 1
  store i16* %incdec.ptr253, i16** %orgptr, align 8
  %236 = load i16, i16* %235, align 2
  %conv254 = zext i16 %236 to i32
  %sub255 = sub nsw i32 %conv252, %conv254
  %idxprom256 = sext i32 %sub255 to i64
  %237 = load i32*, i32** @byte_abs, align 8
  %arrayidx257 = getelementptr inbounds i32, i32* %237, i64 %idxprom256
  %238 = load i32, i32* %arrayidx257, align 4
  %239 = load i32, i32* %LineSadBlk0, align 4
  %add258 = add nsw i32 %239, %238
  store i32 %add258, i32* %LineSadBlk0, align 4
  %240 = load i16*, i16** %refptr, align 8
  %incdec.ptr259 = getelementptr inbounds i16, i16* %240, i32 1
  store i16* %incdec.ptr259, i16** %refptr, align 8
  %241 = load i16, i16* %240, align 2
  %conv260 = zext i16 %241 to i32
  %242 = load i16*, i16** %orgptr, align 8
  %incdec.ptr261 = getelementptr inbounds i16, i16* %242, i32 1
  store i16* %incdec.ptr261, i16** %orgptr, align 8
  %243 = load i16, i16* %242, align 2
  %conv262 = zext i16 %243 to i32
  %sub263 = sub nsw i32 %conv260, %conv262
  %idxprom264 = sext i32 %sub263 to i64
  %244 = load i32*, i32** @byte_abs, align 8
  %arrayidx265 = getelementptr inbounds i32, i32* %244, i64 %idxprom264
  %245 = load i32, i32* %arrayidx265, align 4
  %246 = load i32, i32* %LineSadBlk0, align 4
  %add266 = add nsw i32 %246, %245
  store i32 %add266, i32* %LineSadBlk0, align 4
  %247 = load i16*, i16** %refptr, align 8
  %incdec.ptr267 = getelementptr inbounds i16, i16* %247, i32 1
  store i16* %incdec.ptr267, i16** %refptr, align 8
  %248 = load i16, i16* %247, align 2
  %conv268 = zext i16 %248 to i32
  %249 = load i16*, i16** %orgptr, align 8
  %incdec.ptr269 = getelementptr inbounds i16, i16* %249, i32 1
  store i16* %incdec.ptr269, i16** %orgptr, align 8
  %250 = load i16, i16* %249, align 2
  %conv270 = zext i16 %250 to i32
  %sub271 = sub nsw i32 %conv268, %conv270
  %idxprom272 = sext i32 %sub271 to i64
  %251 = load i32*, i32** @byte_abs, align 8
  %arrayidx273 = getelementptr inbounds i32, i32* %251, i64 %idxprom272
  %252 = load i32, i32* %arrayidx273, align 4
  %253 = load i32, i32* %LineSadBlk0, align 4
  %add274 = add nsw i32 %253, %252
  store i32 %add274, i32* %LineSadBlk0, align 4
  %254 = load i16*, i16** %refptr, align 8
  %incdec.ptr275 = getelementptr inbounds i16, i16* %254, i32 1
  store i16* %incdec.ptr275, i16** %refptr, align 8
  %255 = load i16, i16* %254, align 2
  %conv276 = zext i16 %255 to i32
  %256 = load i16*, i16** %orgptr, align 8
  %incdec.ptr277 = getelementptr inbounds i16, i16* %256, i32 1
  store i16* %incdec.ptr277, i16** %orgptr, align 8
  %257 = load i16, i16* %256, align 2
  %conv278 = zext i16 %257 to i32
  %sub279 = sub nsw i32 %conv276, %conv278
  %idxprom280 = sext i32 %sub279 to i64
  %258 = load i32*, i32** @byte_abs, align 8
  %arrayidx281 = getelementptr inbounds i32, i32* %258, i64 %idxprom280
  %259 = load i32, i32* %arrayidx281, align 4
  %260 = load i32, i32* %LineSadBlk0, align 4
  %add282 = add nsw i32 %260, %259
  store i32 %add282, i32* %LineSadBlk0, align 4
  %261 = load i16*, i16** %refptr, align 8
  %incdec.ptr283 = getelementptr inbounds i16, i16* %261, i32 1
  store i16* %incdec.ptr283, i16** %refptr, align 8
  %262 = load i16, i16* %261, align 2
  %conv284 = zext i16 %262 to i32
  %263 = load i16*, i16** %orgptr, align 8
  %incdec.ptr285 = getelementptr inbounds i16, i16* %263, i32 1
  store i16* %incdec.ptr285, i16** %orgptr, align 8
  %264 = load i16, i16* %263, align 2
  %conv286 = zext i16 %264 to i32
  %sub287 = sub nsw i32 %conv284, %conv286
  %idxprom288 = sext i32 %sub287 to i64
  %265 = load i32*, i32** @byte_abs, align 8
  %arrayidx289 = getelementptr inbounds i32, i32* %265, i64 %idxprom288
  %266 = load i32, i32* %arrayidx289, align 4
  %267 = load i32, i32* %LineSadBlk1, align 4
  %add290 = add nsw i32 %267, %266
  store i32 %add290, i32* %LineSadBlk1, align 4
  %268 = load i16*, i16** %refptr, align 8
  %incdec.ptr291 = getelementptr inbounds i16, i16* %268, i32 1
  store i16* %incdec.ptr291, i16** %refptr, align 8
  %269 = load i16, i16* %268, align 2
  %conv292 = zext i16 %269 to i32
  %270 = load i16*, i16** %orgptr, align 8
  %incdec.ptr293 = getelementptr inbounds i16, i16* %270, i32 1
  store i16* %incdec.ptr293, i16** %orgptr, align 8
  %271 = load i16, i16* %270, align 2
  %conv294 = zext i16 %271 to i32
  %sub295 = sub nsw i32 %conv292, %conv294
  %idxprom296 = sext i32 %sub295 to i64
  %272 = load i32*, i32** @byte_abs, align 8
  %arrayidx297 = getelementptr inbounds i32, i32* %272, i64 %idxprom296
  %273 = load i32, i32* %arrayidx297, align 4
  %274 = load i32, i32* %LineSadBlk1, align 4
  %add298 = add nsw i32 %274, %273
  store i32 %add298, i32* %LineSadBlk1, align 4
  %275 = load i16*, i16** %refptr, align 8
  %incdec.ptr299 = getelementptr inbounds i16, i16* %275, i32 1
  store i16* %incdec.ptr299, i16** %refptr, align 8
  %276 = load i16, i16* %275, align 2
  %conv300 = zext i16 %276 to i32
  %277 = load i16*, i16** %orgptr, align 8
  %incdec.ptr301 = getelementptr inbounds i16, i16* %277, i32 1
  store i16* %incdec.ptr301, i16** %orgptr, align 8
  %278 = load i16, i16* %277, align 2
  %conv302 = zext i16 %278 to i32
  %sub303 = sub nsw i32 %conv300, %conv302
  %idxprom304 = sext i32 %sub303 to i64
  %279 = load i32*, i32** @byte_abs, align 8
  %arrayidx305 = getelementptr inbounds i32, i32* %279, i64 %idxprom304
  %280 = load i32, i32* %arrayidx305, align 4
  %281 = load i32, i32* %LineSadBlk1, align 4
  %add306 = add nsw i32 %281, %280
  store i32 %add306, i32* %LineSadBlk1, align 4
  %282 = load i16*, i16** %refptr, align 8
  %incdec.ptr307 = getelementptr inbounds i16, i16* %282, i32 1
  store i16* %incdec.ptr307, i16** %refptr, align 8
  %283 = load i16, i16* %282, align 2
  %conv308 = zext i16 %283 to i32
  %284 = load i16*, i16** %orgptr, align 8
  %incdec.ptr309 = getelementptr inbounds i16, i16* %284, i32 1
  store i16* %incdec.ptr309, i16** %orgptr, align 8
  %285 = load i16, i16* %284, align 2
  %conv310 = zext i16 %285 to i32
  %sub311 = sub nsw i32 %conv308, %conv310
  %idxprom312 = sext i32 %sub311 to i64
  %286 = load i32*, i32** @byte_abs, align 8
  %arrayidx313 = getelementptr inbounds i32, i32* %286, i64 %idxprom312
  %287 = load i32, i32* %arrayidx313, align 4
  %288 = load i32, i32* %LineSadBlk1, align 4
  %add314 = add nsw i32 %288, %287
  store i32 %add314, i32* %LineSadBlk1, align 4
  %289 = load i16*, i16** %refptr, align 8
  %incdec.ptr315 = getelementptr inbounds i16, i16* %289, i32 1
  store i16* %incdec.ptr315, i16** %refptr, align 8
  %290 = load i16, i16* %289, align 2
  %conv316 = zext i16 %290 to i32
  %291 = load i16*, i16** %orgptr, align 8
  %incdec.ptr317 = getelementptr inbounds i16, i16* %291, i32 1
  store i16* %incdec.ptr317, i16** %orgptr, align 8
  %292 = load i16, i16* %291, align 2
  %conv318 = zext i16 %292 to i32
  %sub319 = sub nsw i32 %conv316, %conv318
  %idxprom320 = sext i32 %sub319 to i64
  %293 = load i32*, i32** @byte_abs, align 8
  %arrayidx321 = getelementptr inbounds i32, i32* %293, i64 %idxprom320
  %294 = load i32, i32* %arrayidx321, align 4
  %295 = load i32, i32* %LineSadBlk2, align 4
  %add322 = add nsw i32 %295, %294
  store i32 %add322, i32* %LineSadBlk2, align 4
  %296 = load i16*, i16** %refptr, align 8
  %incdec.ptr323 = getelementptr inbounds i16, i16* %296, i32 1
  store i16* %incdec.ptr323, i16** %refptr, align 8
  %297 = load i16, i16* %296, align 2
  %conv324 = zext i16 %297 to i32
  %298 = load i16*, i16** %orgptr, align 8
  %incdec.ptr325 = getelementptr inbounds i16, i16* %298, i32 1
  store i16* %incdec.ptr325, i16** %orgptr, align 8
  %299 = load i16, i16* %298, align 2
  %conv326 = zext i16 %299 to i32
  %sub327 = sub nsw i32 %conv324, %conv326
  %idxprom328 = sext i32 %sub327 to i64
  %300 = load i32*, i32** @byte_abs, align 8
  %arrayidx329 = getelementptr inbounds i32, i32* %300, i64 %idxprom328
  %301 = load i32, i32* %arrayidx329, align 4
  %302 = load i32, i32* %LineSadBlk2, align 4
  %add330 = add nsw i32 %302, %301
  store i32 %add330, i32* %LineSadBlk2, align 4
  %303 = load i16*, i16** %refptr, align 8
  %incdec.ptr331 = getelementptr inbounds i16, i16* %303, i32 1
  store i16* %incdec.ptr331, i16** %refptr, align 8
  %304 = load i16, i16* %303, align 2
  %conv332 = zext i16 %304 to i32
  %305 = load i16*, i16** %orgptr, align 8
  %incdec.ptr333 = getelementptr inbounds i16, i16* %305, i32 1
  store i16* %incdec.ptr333, i16** %orgptr, align 8
  %306 = load i16, i16* %305, align 2
  %conv334 = zext i16 %306 to i32
  %sub335 = sub nsw i32 %conv332, %conv334
  %idxprom336 = sext i32 %sub335 to i64
  %307 = load i32*, i32** @byte_abs, align 8
  %arrayidx337 = getelementptr inbounds i32, i32* %307, i64 %idxprom336
  %308 = load i32, i32* %arrayidx337, align 4
  %309 = load i32, i32* %LineSadBlk2, align 4
  %add338 = add nsw i32 %309, %308
  store i32 %add338, i32* %LineSadBlk2, align 4
  %310 = load i16*, i16** %refptr, align 8
  %incdec.ptr339 = getelementptr inbounds i16, i16* %310, i32 1
  store i16* %incdec.ptr339, i16** %refptr, align 8
  %311 = load i16, i16* %310, align 2
  %conv340 = zext i16 %311 to i32
  %312 = load i16*, i16** %orgptr, align 8
  %incdec.ptr341 = getelementptr inbounds i16, i16* %312, i32 1
  store i16* %incdec.ptr341, i16** %orgptr, align 8
  %313 = load i16, i16* %312, align 2
  %conv342 = zext i16 %313 to i32
  %sub343 = sub nsw i32 %conv340, %conv342
  %idxprom344 = sext i32 %sub343 to i64
  %314 = load i32*, i32** @byte_abs, align 8
  %arrayidx345 = getelementptr inbounds i32, i32* %314, i64 %idxprom344
  %315 = load i32, i32* %arrayidx345, align 4
  %316 = load i32, i32* %LineSadBlk2, align 4
  %add346 = add nsw i32 %316, %315
  store i32 %add346, i32* %LineSadBlk2, align 4
  %317 = load i16*, i16** %refptr, align 8
  %incdec.ptr347 = getelementptr inbounds i16, i16* %317, i32 1
  store i16* %incdec.ptr347, i16** %refptr, align 8
  %318 = load i16, i16* %317, align 2
  %conv348 = zext i16 %318 to i32
  %319 = load i16*, i16** %orgptr, align 8
  %incdec.ptr349 = getelementptr inbounds i16, i16* %319, i32 1
  store i16* %incdec.ptr349, i16** %orgptr, align 8
  %320 = load i16, i16* %319, align 2
  %conv350 = zext i16 %320 to i32
  %sub351 = sub nsw i32 %conv348, %conv350
  %idxprom352 = sext i32 %sub351 to i64
  %321 = load i32*, i32** @byte_abs, align 8
  %arrayidx353 = getelementptr inbounds i32, i32* %321, i64 %idxprom352
  %322 = load i32, i32* %arrayidx353, align 4
  %323 = load i32, i32* %LineSadBlk3, align 4
  %add354 = add nsw i32 %323, %322
  store i32 %add354, i32* %LineSadBlk3, align 4
  %324 = load i16*, i16** %refptr, align 8
  %incdec.ptr355 = getelementptr inbounds i16, i16* %324, i32 1
  store i16* %incdec.ptr355, i16** %refptr, align 8
  %325 = load i16, i16* %324, align 2
  %conv356 = zext i16 %325 to i32
  %326 = load i16*, i16** %orgptr, align 8
  %incdec.ptr357 = getelementptr inbounds i16, i16* %326, i32 1
  store i16* %incdec.ptr357, i16** %orgptr, align 8
  %327 = load i16, i16* %326, align 2
  %conv358 = zext i16 %327 to i32
  %sub359 = sub nsw i32 %conv356, %conv358
  %idxprom360 = sext i32 %sub359 to i64
  %328 = load i32*, i32** @byte_abs, align 8
  %arrayidx361 = getelementptr inbounds i32, i32* %328, i64 %idxprom360
  %329 = load i32, i32* %arrayidx361, align 4
  %330 = load i32, i32* %LineSadBlk3, align 4
  %add362 = add nsw i32 %330, %329
  store i32 %add362, i32* %LineSadBlk3, align 4
  %331 = load i16*, i16** %refptr, align 8
  %incdec.ptr363 = getelementptr inbounds i16, i16* %331, i32 1
  store i16* %incdec.ptr363, i16** %refptr, align 8
  %332 = load i16, i16* %331, align 2
  %conv364 = zext i16 %332 to i32
  %333 = load i16*, i16** %orgptr, align 8
  %incdec.ptr365 = getelementptr inbounds i16, i16* %333, i32 1
  store i16* %incdec.ptr365, i16** %orgptr, align 8
  %334 = load i16, i16* %333, align 2
  %conv366 = zext i16 %334 to i32
  %sub367 = sub nsw i32 %conv364, %conv366
  %idxprom368 = sext i32 %sub367 to i64
  %335 = load i32*, i32** @byte_abs, align 8
  %arrayidx369 = getelementptr inbounds i32, i32* %335, i64 %idxprom368
  %336 = load i32, i32* %arrayidx369, align 4
  %337 = load i32, i32* %LineSadBlk3, align 4
  %add370 = add nsw i32 %337, %336
  store i32 %add370, i32* %LineSadBlk3, align 4
  %338 = load i16*, i16** %refptr, align 8
  %incdec.ptr371 = getelementptr inbounds i16, i16* %338, i32 1
  store i16* %incdec.ptr371, i16** %refptr, align 8
  %339 = load i16, i16* %338, align 2
  %conv372 = zext i16 %339 to i32
  %340 = load i16*, i16** %orgptr, align 8
  %incdec.ptr373 = getelementptr inbounds i16, i16* %340, i32 1
  store i16* %incdec.ptr373, i16** %orgptr, align 8
  %341 = load i16, i16* %340, align 2
  %conv374 = zext i16 %341 to i32
  %sub375 = sub nsw i32 %conv372, %conv374
  %idxprom376 = sext i32 %sub375 to i64
  %342 = load i32*, i32** @byte_abs, align 8
  %arrayidx377 = getelementptr inbounds i32, i32* %342, i64 %idxprom376
  %343 = load i32, i32* %arrayidx377, align 4
  %344 = load i32, i32* %LineSadBlk3, align 4
  %add378 = add nsw i32 %344, %343
  store i32 %add378, i32* %LineSadBlk3, align 4
  br label %for.inc.379

for.inc.379:                                      ; preds = %for.body.249
  %345 = load i32, i32* %y, align 4
  %inc380 = add nsw i32 %345, 1
  store i32 %inc380, i32* %y, align 4
  br label %for.cond.246

for.end.381:                                      ; preds = %for.cond.246
  %346 = load i32, i32* %LineSadBlk0, align 4
  %347 = load i32, i32* %pos, align 4
  %idxprom382 = sext i32 %347 to i64
  %348 = load i32, i32* %bindex, align 4
  %inc383 = add nsw i32 %348, 1
  store i32 %inc383, i32* %bindex, align 4
  %idxprom384 = sext i32 %348 to i64
  %349 = load i32**, i32*** %block_sad, align 8
  %arrayidx385 = getelementptr inbounds i32*, i32** %349, i64 %idxprom384
  %350 = load i32*, i32** %arrayidx385, align 8
  %arrayidx386 = getelementptr inbounds i32, i32* %350, i64 %idxprom382
  store i32 %346, i32* %arrayidx386, align 4
  %351 = load i32, i32* %LineSadBlk1, align 4
  %352 = load i32, i32* %pos, align 4
  %idxprom387 = sext i32 %352 to i64
  %353 = load i32, i32* %bindex, align 4
  %inc388 = add nsw i32 %353, 1
  store i32 %inc388, i32* %bindex, align 4
  %idxprom389 = sext i32 %353 to i64
  %354 = load i32**, i32*** %block_sad, align 8
  %arrayidx390 = getelementptr inbounds i32*, i32** %354, i64 %idxprom389
  %355 = load i32*, i32** %arrayidx390, align 8
  %arrayidx391 = getelementptr inbounds i32, i32* %355, i64 %idxprom387
  store i32 %351, i32* %arrayidx391, align 4
  %356 = load i32, i32* %LineSadBlk2, align 4
  %357 = load i32, i32* %pos, align 4
  %idxprom392 = sext i32 %357 to i64
  %358 = load i32, i32* %bindex, align 4
  %inc393 = add nsw i32 %358, 1
  store i32 %inc393, i32* %bindex, align 4
  %idxprom394 = sext i32 %358 to i64
  %359 = load i32**, i32*** %block_sad, align 8
  %arrayidx395 = getelementptr inbounds i32*, i32** %359, i64 %idxprom394
  %360 = load i32*, i32** %arrayidx395, align 8
  %arrayidx396 = getelementptr inbounds i32, i32* %360, i64 %idxprom392
  store i32 %356, i32* %arrayidx396, align 4
  %361 = load i32, i32* %LineSadBlk3, align 4
  %362 = load i32, i32* %pos, align 4
  %idxprom397 = sext i32 %362 to i64
  %363 = load i32, i32* %bindex, align 4
  %inc398 = add nsw i32 %363, 1
  store i32 %inc398, i32* %bindex, align 4
  %idxprom399 = sext i32 %363 to i64
  %364 = load i32**, i32*** %block_sad, align 8
  %arrayidx400 = getelementptr inbounds i32*, i32** %364, i64 %idxprom399
  %365 = load i32*, i32** %arrayidx400, align 8
  %arrayidx401 = getelementptr inbounds i32, i32* %365, i64 %idxprom397
  store i32 %361, i32* %arrayidx401, align 4
  br label %for.inc.402

for.inc.402:                                      ; preds = %for.end.381
  %366 = load i32, i32* %blky, align 4
  %inc403 = add nsw i32 %366, 1
  store i32 %inc403, i32* %blky, align 4
  br label %for.cond.242

for.end.404:                                      ; preds = %for.cond.242
  br label %for.inc.405

for.inc.405:                                      ; preds = %for.end.404
  %367 = load i32, i32* %pos, align 4
  %inc406 = add nsw i32 %367, 1
  store i32 %inc406, i32* %pos, align 4
  br label %for.cond.214

for.end.407:                                      ; preds = %for.cond.214
  %368 = load i32, i32* %list.addr, align 4
  %369 = load i16, i16* %ref.addr, align 2
  %conv408 = sext i16 %369 to i32
  %370 = load i32, i32* %max_pos, align 4
  call void @SetupLargerBlocks(i32 %368, i32 %conv408, i32 %370)
  %371 = load i16, i16* %ref.addr, align 2
  %idxprom409 = sext i16 %371 to i64
  %372 = load i32, i32* %list.addr, align 4
  %idxprom410 = sext i32 %372 to i64
  %373 = load i32**, i32*** @search_setup_done, align 8
  %arrayidx411 = getelementptr inbounds i32*, i32** %373, i64 %idxprom410
  %374 = load i32*, i32** %arrayidx411, align 8
  %arrayidx412 = getelementptr inbounds i32, i32* %374, i64 %idxprom409
  store i32 1, i32* %arrayidx412, align 4
  ret void
}

; Function Attrs: nounwind uwtable
define void @SetMotionVectorPredictor(i16* %pmv, i16*** %refPic, i16**** %tmp_mv, i16 signext %ref_frame, i32 %list, i32 %block_x, i32 %block_y, i32 %blockshape_x, i32 %blockshape_y) #0 {
entry:
  %pmv.addr = alloca i16*, align 8
  %refPic.addr = alloca i16***, align 8
  %tmp_mv.addr = alloca i16****, align 8
  %ref_frame.addr = alloca i16, align 2
  %list.addr = alloca i32, align 4
  %block_x.addr = alloca i32, align 4
  %block_y.addr = alloca i32, align 4
  %blockshape_x.addr = alloca i32, align 4
  %blockshape_y.addr = alloca i32, align 4
  %mb_x = alloca i32, align 4
  %mb_y = alloca i32, align 4
  %mb_nr = alloca i32, align 4
  %mv_a = alloca i32, align 4
  %mv_b = alloca i32, align 4
  %mv_c = alloca i32, align 4
  %pred_vec = alloca i32, align 4
  %mvPredType = alloca i32, align 4
  %rFrameL = alloca i32, align 4
  %rFrameU = alloca i32, align 4
  %rFrameUR = alloca i32, align 4
  %hv = alloca i32, align 4
  %block_a = alloca %struct.pix_pos, align 4
  %block_b = alloca %struct.pix_pos, align 4
  %block_c = alloca %struct.pix_pos, align 4
  %block_d = alloca %struct.pix_pos, align 4
  %SAD_a = alloca i32, align 4
  %SAD_b = alloca i32, align 4
  %SAD_c = alloca i32, align 4
  %SAD_d = alloca i32, align 4
  %temp_pred_SAD = alloca [2 x i32], align 4
  store i16* %pmv, i16** %pmv.addr, align 8
  store i16*** %refPic, i16**** %refPic.addr, align 8
  store i16**** %tmp_mv, i16***** %tmp_mv.addr, align 8
  store i16 %ref_frame, i16* %ref_frame.addr, align 2
  store i32 %list, i32* %list.addr, align 4
  store i32 %block_x, i32* %block_x.addr, align 4
  store i32 %block_y, i32* %block_y.addr, align 4
  store i32 %blockshape_x, i32* %blockshape_x.addr, align 4
  store i32 %blockshape_y, i32* %blockshape_y.addr, align 4
  %0 = load i32, i32* %block_x.addr, align 4
  %mul = mul nsw i32 4, %0
  store i32 %mul, i32* %mb_x, align 4
  %1 = load i32, i32* %block_y.addr, align 4
  %mul1 = mul nsw i32 4, %1
  store i32 %mul1, i32* %mb_y, align 4
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 3
  %3 = load i32, i32* %current_mb_nr, align 4
  store i32 %3, i32* %mb_nr, align 4
  store i32 0, i32* %pred_vec, align 4
  store i32 0, i32* %SAD_a, align 4
  store i32 0, i32* %SAD_b, align 4
  store i32 0, i32* %SAD_c, align 4
  store i32 0, i32* %SAD_d, align 4
  %4 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %FMEnable = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %4, i32 0, i32 134
  %5 = load i32, i32* %FMEnable, align 4
  %tobool = icmp ne i32 %5, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* @pred_SAD_space, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %6 = load i32, i32* %mb_nr, align 4
  %7 = load i32, i32* %block_x.addr, align 4
  %8 = load i32, i32* %block_y.addr, align 4
  call void @getLuma4x4Neighbour(i32 %6, i32 %7, i32 %8, i32 -1, i32 0, %struct.pix_pos* %block_a)
  %9 = load i32, i32* %mb_nr, align 4
  %10 = load i32, i32* %block_x.addr, align 4
  %11 = load i32, i32* %block_y.addr, align 4
  call void @getLuma4x4Neighbour(i32 %9, i32 %10, i32 %11, i32 0, i32 -1, %struct.pix_pos* %block_b)
  %12 = load i32, i32* %mb_nr, align 4
  %13 = load i32, i32* %block_x.addr, align 4
  %14 = load i32, i32* %block_y.addr, align 4
  %15 = load i32, i32* %blockshape_x.addr, align 4
  call void @getLuma4x4Neighbour(i32 %12, i32 %13, i32 %14, i32 %15, i32 -1, %struct.pix_pos* %block_c)
  %16 = load i32, i32* %mb_nr, align 4
  %17 = load i32, i32* %block_x.addr, align 4
  %18 = load i32, i32* %block_y.addr, align 4
  call void @getLuma4x4Neighbour(i32 %16, i32 %17, i32 %18, i32 -1, i32 -1, %struct.pix_pos* %block_d)
  %19 = load i32, i32* %mb_y, align 4
  %cmp = icmp sgt i32 %19, 0
  br i1 %cmp, label %if.then.2, label %if.end.30

if.then.2:                                        ; preds = %if.end
  %20 = load i32, i32* %mb_x, align 4
  %cmp3 = icmp slt i32 %20, 8
  br i1 %cmp3, label %if.then.4, label %if.else.20

if.then.4:                                        ; preds = %if.then.2
  %21 = load i32, i32* %mb_y, align 4
  %cmp5 = icmp eq i32 %21, 8
  br i1 %cmp5, label %if.then.6, label %if.else.11

if.then.6:                                        ; preds = %if.then.4
  %22 = load i32, i32* %blockshape_x.addr, align 4
  %cmp7 = icmp eq i32 %22, 16
  br i1 %cmp7, label %if.then.8, label %if.else

if.then.8:                                        ; preds = %if.then.6
  %available = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 0
  store i32 0, i32* %available, align 4
  br label %if.end.10

if.else:                                          ; preds = %if.then.6
  %available9 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 0
  %23 = load i32, i32* %available9, align 4
  %and = and i32 %23, 1
  store i32 %and, i32* %available9, align 4
  br label %if.end.10

if.end.10:                                        ; preds = %if.else, %if.then.8
  br label %if.end.19

if.else.11:                                       ; preds = %if.then.4
  %24 = load i32, i32* %mb_x, align 4
  %25 = load i32, i32* %blockshape_x.addr, align 4
  %add = add nsw i32 %24, %25
  %cmp12 = icmp ne i32 %add, 8
  br i1 %cmp12, label %if.then.13, label %if.else.16

if.then.13:                                       ; preds = %if.else.11
  %available14 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 0
  %26 = load i32, i32* %available14, align 4
  %and15 = and i32 %26, 1
  store i32 %and15, i32* %available14, align 4
  br label %if.end.18

if.else.16:                                       ; preds = %if.else.11
  %available17 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 0
  store i32 0, i32* %available17, align 4
  br label %if.end.18

if.end.18:                                        ; preds = %if.else.16, %if.then.13
  br label %if.end.19

if.end.19:                                        ; preds = %if.end.18, %if.end.10
  br label %if.end.29

if.else.20:                                       ; preds = %if.then.2
  %27 = load i32, i32* %mb_x, align 4
  %28 = load i32, i32* %blockshape_x.addr, align 4
  %add21 = add nsw i32 %27, %28
  %cmp22 = icmp ne i32 %add21, 16
  br i1 %cmp22, label %if.then.23, label %if.else.26

if.then.23:                                       ; preds = %if.else.20
  %available24 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 0
  %29 = load i32, i32* %available24, align 4
  %and25 = and i32 %29, 1
  store i32 %and25, i32* %available24, align 4
  br label %if.end.28

if.else.26:                                       ; preds = %if.else.20
  %available27 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 0
  store i32 0, i32* %available27, align 4
  br label %if.end.28

if.end.28:                                        ; preds = %if.else.26, %if.then.23
  br label %if.end.29

if.end.29:                                        ; preds = %if.end.28, %if.end.19
  br label %if.end.30

if.end.30:                                        ; preds = %if.end.29, %if.end
  %available31 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 0
  %30 = load i32, i32* %available31, align 4
  %tobool32 = icmp ne i32 %30, 0
  br i1 %tobool32, label %if.end.34, label %if.then.33

if.then.33:                                       ; preds = %if.end.30
  %31 = bitcast %struct.pix_pos* %block_c to i8*
  %32 = bitcast %struct.pix_pos* %block_d to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %31, i8* %32, i64 24, i32 4, i1 false)
  br label %if.end.34

if.end.34:                                        ; preds = %if.then.33, %if.end.30
  store i32 0, i32* %mvPredType, align 4
  %33 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %MbaffFrameFlag = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %33, i32 0, i32 90
  %34 = load i32, i32* %MbaffFrameFlag, align 4
  %tobool35 = icmp ne i32 %34, 0
  br i1 %tobool35, label %if.else.73, label %if.then.36

if.then.36:                                       ; preds = %if.end.34
  %available37 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_a, i32 0, i32 0
  %35 = load i32, i32* %available37, align 4
  %tobool38 = icmp ne i32 %35, 0
  br i1 %tobool38, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then.36
  %pos_y = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_a, i32 0, i32 5
  %36 = load i32, i32* %pos_y, align 4
  %idxprom = sext i32 %36 to i64
  %pos_x = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_a, i32 0, i32 4
  %37 = load i32, i32* %pos_x, align 4
  %idxprom39 = sext i32 %37 to i64
  %38 = load i32, i32* %list.addr, align 4
  %idxprom40 = sext i32 %38 to i64
  %39 = load i16***, i16**** %refPic.addr, align 8
  %arrayidx = getelementptr inbounds i16**, i16*** %39, i64 %idxprom40
  %40 = load i16**, i16*** %arrayidx, align 8
  %arrayidx41 = getelementptr inbounds i16*, i16** %40, i64 %idxprom39
  %41 = load i16*, i16** %arrayidx41, align 8
  %arrayidx42 = getelementptr inbounds i16, i16* %41, i64 %idxprom
  %42 = load i16, i16* %arrayidx42, align 2
  %conv = sext i16 %42 to i32
  br label %cond.end

cond.false:                                       ; preds = %if.then.36
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ -1, %cond.false ]
  store i32 %cond, i32* %rFrameL, align 4
  %available43 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i32 0, i32 0
  %43 = load i32, i32* %available43, align 4
  %tobool44 = icmp ne i32 %43, 0
  br i1 %tobool44, label %cond.true.45, label %cond.false.55

cond.true.45:                                     ; preds = %cond.end
  %pos_y46 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i32 0, i32 5
  %44 = load i32, i32* %pos_y46, align 4
  %idxprom47 = sext i32 %44 to i64
  %pos_x48 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i32 0, i32 4
  %45 = load i32, i32* %pos_x48, align 4
  %idxprom49 = sext i32 %45 to i64
  %46 = load i32, i32* %list.addr, align 4
  %idxprom50 = sext i32 %46 to i64
  %47 = load i16***, i16**** %refPic.addr, align 8
  %arrayidx51 = getelementptr inbounds i16**, i16*** %47, i64 %idxprom50
  %48 = load i16**, i16*** %arrayidx51, align 8
  %arrayidx52 = getelementptr inbounds i16*, i16** %48, i64 %idxprom49
  %49 = load i16*, i16** %arrayidx52, align 8
  %arrayidx53 = getelementptr inbounds i16, i16* %49, i64 %idxprom47
  %50 = load i16, i16* %arrayidx53, align 2
  %conv54 = sext i16 %50 to i32
  br label %cond.end.56

cond.false.55:                                    ; preds = %cond.end
  br label %cond.end.56

cond.end.56:                                      ; preds = %cond.false.55, %cond.true.45
  %cond57 = phi i32 [ %conv54, %cond.true.45 ], [ -1, %cond.false.55 ]
  store i32 %cond57, i32* %rFrameU, align 4
  %available58 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 0
  %51 = load i32, i32* %available58, align 4
  %tobool59 = icmp ne i32 %51, 0
  br i1 %tobool59, label %cond.true.60, label %cond.false.70

cond.true.60:                                     ; preds = %cond.end.56
  %pos_y61 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 5
  %52 = load i32, i32* %pos_y61, align 4
  %idxprom62 = sext i32 %52 to i64
  %pos_x63 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 4
  %53 = load i32, i32* %pos_x63, align 4
  %idxprom64 = sext i32 %53 to i64
  %54 = load i32, i32* %list.addr, align 4
  %idxprom65 = sext i32 %54 to i64
  %55 = load i16***, i16**** %refPic.addr, align 8
  %arrayidx66 = getelementptr inbounds i16**, i16*** %55, i64 %idxprom65
  %56 = load i16**, i16*** %arrayidx66, align 8
  %arrayidx67 = getelementptr inbounds i16*, i16** %56, i64 %idxprom64
  %57 = load i16*, i16** %arrayidx67, align 8
  %arrayidx68 = getelementptr inbounds i16, i16* %57, i64 %idxprom62
  %58 = load i16, i16* %arrayidx68, align 2
  %conv69 = sext i16 %58 to i32
  br label %cond.end.71

cond.false.70:                                    ; preds = %cond.end.56
  br label %cond.end.71

cond.end.71:                                      ; preds = %cond.false.70, %cond.true.60
  %cond72 = phi i32 [ %conv69, %cond.true.60 ], [ -1, %cond.false.70 ]
  store i32 %cond72, i32* %rFrameUR, align 4
  br label %if.end.289

if.else.73:                                       ; preds = %if.end.34
  %59 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr74 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %59, i32 0, i32 3
  %60 = load i32, i32* %current_mb_nr74, align 4
  %idxprom75 = sext i32 %60 to i64
  %61 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %61, i32 0, i32 51
  %62 = load %struct.macroblock*, %struct.macroblock** %mb_data, align 8
  %arrayidx76 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %62, i64 %idxprom75
  %mb_field = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx76, i32 0, i32 22
  %63 = load i32, i32* %mb_field, align 4
  %tobool77 = icmp ne i32 %63, 0
  br i1 %tobool77, label %if.then.78, label %if.else.183

if.then.78:                                       ; preds = %if.else.73
  %available79 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_a, i32 0, i32 0
  %64 = load i32, i32* %available79, align 4
  %tobool80 = icmp ne i32 %64, 0
  br i1 %tobool80, label %cond.true.81, label %cond.false.110

cond.true.81:                                     ; preds = %if.then.78
  %mb_addr = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_a, i32 0, i32 1
  %65 = load i32, i32* %mb_addr, align 4
  %idxprom82 = sext i32 %65 to i64
  %66 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data83 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %66, i32 0, i32 51
  %67 = load %struct.macroblock*, %struct.macroblock** %mb_data83, align 8
  %arrayidx84 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %67, i64 %idxprom82
  %mb_field85 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx84, i32 0, i32 22
  %68 = load i32, i32* %mb_field85, align 4
  %tobool86 = icmp ne i32 %68, 0
  br i1 %tobool86, label %cond.true.87, label %cond.false.97

cond.true.87:                                     ; preds = %cond.true.81
  %pos_y88 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_a, i32 0, i32 5
  %69 = load i32, i32* %pos_y88, align 4
  %idxprom89 = sext i32 %69 to i64
  %pos_x90 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_a, i32 0, i32 4
  %70 = load i32, i32* %pos_x90, align 4
  %idxprom91 = sext i32 %70 to i64
  %71 = load i32, i32* %list.addr, align 4
  %idxprom92 = sext i32 %71 to i64
  %72 = load i16***, i16**** %refPic.addr, align 8
  %arrayidx93 = getelementptr inbounds i16**, i16*** %72, i64 %idxprom92
  %73 = load i16**, i16*** %arrayidx93, align 8
  %arrayidx94 = getelementptr inbounds i16*, i16** %73, i64 %idxprom91
  %74 = load i16*, i16** %arrayidx94, align 8
  %arrayidx95 = getelementptr inbounds i16, i16* %74, i64 %idxprom89
  %75 = load i16, i16* %arrayidx95, align 2
  %conv96 = sext i16 %75 to i32
  br label %cond.end.108

cond.false.97:                                    ; preds = %cond.true.81
  %pos_y98 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_a, i32 0, i32 5
  %76 = load i32, i32* %pos_y98, align 4
  %idxprom99 = sext i32 %76 to i64
  %pos_x100 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_a, i32 0, i32 4
  %77 = load i32, i32* %pos_x100, align 4
  %idxprom101 = sext i32 %77 to i64
  %78 = load i32, i32* %list.addr, align 4
  %idxprom102 = sext i32 %78 to i64
  %79 = load i16***, i16**** %refPic.addr, align 8
  %arrayidx103 = getelementptr inbounds i16**, i16*** %79, i64 %idxprom102
  %80 = load i16**, i16*** %arrayidx103, align 8
  %arrayidx104 = getelementptr inbounds i16*, i16** %80, i64 %idxprom101
  %81 = load i16*, i16** %arrayidx104, align 8
  %arrayidx105 = getelementptr inbounds i16, i16* %81, i64 %idxprom99
  %82 = load i16, i16* %arrayidx105, align 2
  %conv106 = sext i16 %82 to i32
  %mul107 = mul nsw i32 %conv106, 2
  br label %cond.end.108

cond.end.108:                                     ; preds = %cond.false.97, %cond.true.87
  %cond109 = phi i32 [ %conv96, %cond.true.87 ], [ %mul107, %cond.false.97 ]
  br label %cond.end.111

cond.false.110:                                   ; preds = %if.then.78
  br label %cond.end.111

cond.end.111:                                     ; preds = %cond.false.110, %cond.end.108
  %cond112 = phi i32 [ %cond109, %cond.end.108 ], [ -1, %cond.false.110 ]
  store i32 %cond112, i32* %rFrameL, align 4
  %available113 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i32 0, i32 0
  %83 = load i32, i32* %available113, align 4
  %tobool114 = icmp ne i32 %83, 0
  br i1 %tobool114, label %cond.true.115, label %cond.false.145

cond.true.115:                                    ; preds = %cond.end.111
  %mb_addr116 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i32 0, i32 1
  %84 = load i32, i32* %mb_addr116, align 4
  %idxprom117 = sext i32 %84 to i64
  %85 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data118 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %85, i32 0, i32 51
  %86 = load %struct.macroblock*, %struct.macroblock** %mb_data118, align 8
  %arrayidx119 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %86, i64 %idxprom117
  %mb_field120 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx119, i32 0, i32 22
  %87 = load i32, i32* %mb_field120, align 4
  %tobool121 = icmp ne i32 %87, 0
  br i1 %tobool121, label %cond.true.122, label %cond.false.132

cond.true.122:                                    ; preds = %cond.true.115
  %pos_y123 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i32 0, i32 5
  %88 = load i32, i32* %pos_y123, align 4
  %idxprom124 = sext i32 %88 to i64
  %pos_x125 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i32 0, i32 4
  %89 = load i32, i32* %pos_x125, align 4
  %idxprom126 = sext i32 %89 to i64
  %90 = load i32, i32* %list.addr, align 4
  %idxprom127 = sext i32 %90 to i64
  %91 = load i16***, i16**** %refPic.addr, align 8
  %arrayidx128 = getelementptr inbounds i16**, i16*** %91, i64 %idxprom127
  %92 = load i16**, i16*** %arrayidx128, align 8
  %arrayidx129 = getelementptr inbounds i16*, i16** %92, i64 %idxprom126
  %93 = load i16*, i16** %arrayidx129, align 8
  %arrayidx130 = getelementptr inbounds i16, i16* %93, i64 %idxprom124
  %94 = load i16, i16* %arrayidx130, align 2
  %conv131 = sext i16 %94 to i32
  br label %cond.end.143

cond.false.132:                                   ; preds = %cond.true.115
  %pos_y133 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i32 0, i32 5
  %95 = load i32, i32* %pos_y133, align 4
  %idxprom134 = sext i32 %95 to i64
  %pos_x135 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i32 0, i32 4
  %96 = load i32, i32* %pos_x135, align 4
  %idxprom136 = sext i32 %96 to i64
  %97 = load i32, i32* %list.addr, align 4
  %idxprom137 = sext i32 %97 to i64
  %98 = load i16***, i16**** %refPic.addr, align 8
  %arrayidx138 = getelementptr inbounds i16**, i16*** %98, i64 %idxprom137
  %99 = load i16**, i16*** %arrayidx138, align 8
  %arrayidx139 = getelementptr inbounds i16*, i16** %99, i64 %idxprom136
  %100 = load i16*, i16** %arrayidx139, align 8
  %arrayidx140 = getelementptr inbounds i16, i16* %100, i64 %idxprom134
  %101 = load i16, i16* %arrayidx140, align 2
  %conv141 = sext i16 %101 to i32
  %mul142 = mul nsw i32 %conv141, 2
  br label %cond.end.143

cond.end.143:                                     ; preds = %cond.false.132, %cond.true.122
  %cond144 = phi i32 [ %conv131, %cond.true.122 ], [ %mul142, %cond.false.132 ]
  br label %cond.end.146

cond.false.145:                                   ; preds = %cond.end.111
  br label %cond.end.146

cond.end.146:                                     ; preds = %cond.false.145, %cond.end.143
  %cond147 = phi i32 [ %cond144, %cond.end.143 ], [ -1, %cond.false.145 ]
  store i32 %cond147, i32* %rFrameU, align 4
  %available148 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 0
  %102 = load i32, i32* %available148, align 4
  %tobool149 = icmp ne i32 %102, 0
  br i1 %tobool149, label %cond.true.150, label %cond.false.180

cond.true.150:                                    ; preds = %cond.end.146
  %mb_addr151 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 1
  %103 = load i32, i32* %mb_addr151, align 4
  %idxprom152 = sext i32 %103 to i64
  %104 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data153 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %104, i32 0, i32 51
  %105 = load %struct.macroblock*, %struct.macroblock** %mb_data153, align 8
  %arrayidx154 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %105, i64 %idxprom152
  %mb_field155 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx154, i32 0, i32 22
  %106 = load i32, i32* %mb_field155, align 4
  %tobool156 = icmp ne i32 %106, 0
  br i1 %tobool156, label %cond.true.157, label %cond.false.167

cond.true.157:                                    ; preds = %cond.true.150
  %pos_y158 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 5
  %107 = load i32, i32* %pos_y158, align 4
  %idxprom159 = sext i32 %107 to i64
  %pos_x160 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 4
  %108 = load i32, i32* %pos_x160, align 4
  %idxprom161 = sext i32 %108 to i64
  %109 = load i32, i32* %list.addr, align 4
  %idxprom162 = sext i32 %109 to i64
  %110 = load i16***, i16**** %refPic.addr, align 8
  %arrayidx163 = getelementptr inbounds i16**, i16*** %110, i64 %idxprom162
  %111 = load i16**, i16*** %arrayidx163, align 8
  %arrayidx164 = getelementptr inbounds i16*, i16** %111, i64 %idxprom161
  %112 = load i16*, i16** %arrayidx164, align 8
  %arrayidx165 = getelementptr inbounds i16, i16* %112, i64 %idxprom159
  %113 = load i16, i16* %arrayidx165, align 2
  %conv166 = sext i16 %113 to i32
  br label %cond.end.178

cond.false.167:                                   ; preds = %cond.true.150
  %pos_y168 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 5
  %114 = load i32, i32* %pos_y168, align 4
  %idxprom169 = sext i32 %114 to i64
  %pos_x170 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 4
  %115 = load i32, i32* %pos_x170, align 4
  %idxprom171 = sext i32 %115 to i64
  %116 = load i32, i32* %list.addr, align 4
  %idxprom172 = sext i32 %116 to i64
  %117 = load i16***, i16**** %refPic.addr, align 8
  %arrayidx173 = getelementptr inbounds i16**, i16*** %117, i64 %idxprom172
  %118 = load i16**, i16*** %arrayidx173, align 8
  %arrayidx174 = getelementptr inbounds i16*, i16** %118, i64 %idxprom171
  %119 = load i16*, i16** %arrayidx174, align 8
  %arrayidx175 = getelementptr inbounds i16, i16* %119, i64 %idxprom169
  %120 = load i16, i16* %arrayidx175, align 2
  %conv176 = sext i16 %120 to i32
  %mul177 = mul nsw i32 %conv176, 2
  br label %cond.end.178

cond.end.178:                                     ; preds = %cond.false.167, %cond.true.157
  %cond179 = phi i32 [ %conv166, %cond.true.157 ], [ %mul177, %cond.false.167 ]
  br label %cond.end.181

cond.false.180:                                   ; preds = %cond.end.146
  br label %cond.end.181

cond.end.181:                                     ; preds = %cond.false.180, %cond.end.178
  %cond182 = phi i32 [ %cond179, %cond.end.178 ], [ -1, %cond.false.180 ]
  store i32 %cond182, i32* %rFrameUR, align 4
  br label %if.end.288

if.else.183:                                      ; preds = %if.else.73
  %available184 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_a, i32 0, i32 0
  %121 = load i32, i32* %available184, align 4
  %tobool185 = icmp ne i32 %121, 0
  br i1 %tobool185, label %cond.true.186, label %cond.false.215

cond.true.186:                                    ; preds = %if.else.183
  %mb_addr187 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_a, i32 0, i32 1
  %122 = load i32, i32* %mb_addr187, align 4
  %idxprom188 = sext i32 %122 to i64
  %123 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data189 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %123, i32 0, i32 51
  %124 = load %struct.macroblock*, %struct.macroblock** %mb_data189, align 8
  %arrayidx190 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %124, i64 %idxprom188
  %mb_field191 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx190, i32 0, i32 22
  %125 = load i32, i32* %mb_field191, align 4
  %tobool192 = icmp ne i32 %125, 0
  br i1 %tobool192, label %cond.true.193, label %cond.false.203

cond.true.193:                                    ; preds = %cond.true.186
  %pos_y194 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_a, i32 0, i32 5
  %126 = load i32, i32* %pos_y194, align 4
  %idxprom195 = sext i32 %126 to i64
  %pos_x196 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_a, i32 0, i32 4
  %127 = load i32, i32* %pos_x196, align 4
  %idxprom197 = sext i32 %127 to i64
  %128 = load i32, i32* %list.addr, align 4
  %idxprom198 = sext i32 %128 to i64
  %129 = load i16***, i16**** %refPic.addr, align 8
  %arrayidx199 = getelementptr inbounds i16**, i16*** %129, i64 %idxprom198
  %130 = load i16**, i16*** %arrayidx199, align 8
  %arrayidx200 = getelementptr inbounds i16*, i16** %130, i64 %idxprom197
  %131 = load i16*, i16** %arrayidx200, align 8
  %arrayidx201 = getelementptr inbounds i16, i16* %131, i64 %idxprom195
  %132 = load i16, i16* %arrayidx201, align 2
  %conv202 = sext i16 %132 to i32
  %shr = ashr i32 %conv202, 1
  br label %cond.end.213

cond.false.203:                                   ; preds = %cond.true.186
  %pos_y204 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_a, i32 0, i32 5
  %133 = load i32, i32* %pos_y204, align 4
  %idxprom205 = sext i32 %133 to i64
  %pos_x206 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_a, i32 0, i32 4
  %134 = load i32, i32* %pos_x206, align 4
  %idxprom207 = sext i32 %134 to i64
  %135 = load i32, i32* %list.addr, align 4
  %idxprom208 = sext i32 %135 to i64
  %136 = load i16***, i16**** %refPic.addr, align 8
  %arrayidx209 = getelementptr inbounds i16**, i16*** %136, i64 %idxprom208
  %137 = load i16**, i16*** %arrayidx209, align 8
  %arrayidx210 = getelementptr inbounds i16*, i16** %137, i64 %idxprom207
  %138 = load i16*, i16** %arrayidx210, align 8
  %arrayidx211 = getelementptr inbounds i16, i16* %138, i64 %idxprom205
  %139 = load i16, i16* %arrayidx211, align 2
  %conv212 = sext i16 %139 to i32
  br label %cond.end.213

cond.end.213:                                     ; preds = %cond.false.203, %cond.true.193
  %cond214 = phi i32 [ %shr, %cond.true.193 ], [ %conv212, %cond.false.203 ]
  br label %cond.end.216

cond.false.215:                                   ; preds = %if.else.183
  br label %cond.end.216

cond.end.216:                                     ; preds = %cond.false.215, %cond.end.213
  %cond217 = phi i32 [ %cond214, %cond.end.213 ], [ -1, %cond.false.215 ]
  store i32 %cond217, i32* %rFrameL, align 4
  %available218 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i32 0, i32 0
  %140 = load i32, i32* %available218, align 4
  %tobool219 = icmp ne i32 %140, 0
  br i1 %tobool219, label %cond.true.220, label %cond.false.250

cond.true.220:                                    ; preds = %cond.end.216
  %mb_addr221 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i32 0, i32 1
  %141 = load i32, i32* %mb_addr221, align 4
  %idxprom222 = sext i32 %141 to i64
  %142 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data223 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %142, i32 0, i32 51
  %143 = load %struct.macroblock*, %struct.macroblock** %mb_data223, align 8
  %arrayidx224 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %143, i64 %idxprom222
  %mb_field225 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx224, i32 0, i32 22
  %144 = load i32, i32* %mb_field225, align 4
  %tobool226 = icmp ne i32 %144, 0
  br i1 %tobool226, label %cond.true.227, label %cond.false.238

cond.true.227:                                    ; preds = %cond.true.220
  %pos_y228 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i32 0, i32 5
  %145 = load i32, i32* %pos_y228, align 4
  %idxprom229 = sext i32 %145 to i64
  %pos_x230 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i32 0, i32 4
  %146 = load i32, i32* %pos_x230, align 4
  %idxprom231 = sext i32 %146 to i64
  %147 = load i32, i32* %list.addr, align 4
  %idxprom232 = sext i32 %147 to i64
  %148 = load i16***, i16**** %refPic.addr, align 8
  %arrayidx233 = getelementptr inbounds i16**, i16*** %148, i64 %idxprom232
  %149 = load i16**, i16*** %arrayidx233, align 8
  %arrayidx234 = getelementptr inbounds i16*, i16** %149, i64 %idxprom231
  %150 = load i16*, i16** %arrayidx234, align 8
  %arrayidx235 = getelementptr inbounds i16, i16* %150, i64 %idxprom229
  %151 = load i16, i16* %arrayidx235, align 2
  %conv236 = sext i16 %151 to i32
  %shr237 = ashr i32 %conv236, 1
  br label %cond.end.248

cond.false.238:                                   ; preds = %cond.true.220
  %pos_y239 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i32 0, i32 5
  %152 = load i32, i32* %pos_y239, align 4
  %idxprom240 = sext i32 %152 to i64
  %pos_x241 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i32 0, i32 4
  %153 = load i32, i32* %pos_x241, align 4
  %idxprom242 = sext i32 %153 to i64
  %154 = load i32, i32* %list.addr, align 4
  %idxprom243 = sext i32 %154 to i64
  %155 = load i16***, i16**** %refPic.addr, align 8
  %arrayidx244 = getelementptr inbounds i16**, i16*** %155, i64 %idxprom243
  %156 = load i16**, i16*** %arrayidx244, align 8
  %arrayidx245 = getelementptr inbounds i16*, i16** %156, i64 %idxprom242
  %157 = load i16*, i16** %arrayidx245, align 8
  %arrayidx246 = getelementptr inbounds i16, i16* %157, i64 %idxprom240
  %158 = load i16, i16* %arrayidx246, align 2
  %conv247 = sext i16 %158 to i32
  br label %cond.end.248

cond.end.248:                                     ; preds = %cond.false.238, %cond.true.227
  %cond249 = phi i32 [ %shr237, %cond.true.227 ], [ %conv247, %cond.false.238 ]
  br label %cond.end.251

cond.false.250:                                   ; preds = %cond.end.216
  br label %cond.end.251

cond.end.251:                                     ; preds = %cond.false.250, %cond.end.248
  %cond252 = phi i32 [ %cond249, %cond.end.248 ], [ -1, %cond.false.250 ]
  store i32 %cond252, i32* %rFrameU, align 4
  %available253 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 0
  %159 = load i32, i32* %available253, align 4
  %tobool254 = icmp ne i32 %159, 0
  br i1 %tobool254, label %cond.true.255, label %cond.false.285

cond.true.255:                                    ; preds = %cond.end.251
  %mb_addr256 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 1
  %160 = load i32, i32* %mb_addr256, align 4
  %idxprom257 = sext i32 %160 to i64
  %161 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data258 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %161, i32 0, i32 51
  %162 = load %struct.macroblock*, %struct.macroblock** %mb_data258, align 8
  %arrayidx259 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %162, i64 %idxprom257
  %mb_field260 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx259, i32 0, i32 22
  %163 = load i32, i32* %mb_field260, align 4
  %tobool261 = icmp ne i32 %163, 0
  br i1 %tobool261, label %cond.true.262, label %cond.false.273

cond.true.262:                                    ; preds = %cond.true.255
  %pos_y263 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 5
  %164 = load i32, i32* %pos_y263, align 4
  %idxprom264 = sext i32 %164 to i64
  %pos_x265 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 4
  %165 = load i32, i32* %pos_x265, align 4
  %idxprom266 = sext i32 %165 to i64
  %166 = load i32, i32* %list.addr, align 4
  %idxprom267 = sext i32 %166 to i64
  %167 = load i16***, i16**** %refPic.addr, align 8
  %arrayidx268 = getelementptr inbounds i16**, i16*** %167, i64 %idxprom267
  %168 = load i16**, i16*** %arrayidx268, align 8
  %arrayidx269 = getelementptr inbounds i16*, i16** %168, i64 %idxprom266
  %169 = load i16*, i16** %arrayidx269, align 8
  %arrayidx270 = getelementptr inbounds i16, i16* %169, i64 %idxprom264
  %170 = load i16, i16* %arrayidx270, align 2
  %conv271 = sext i16 %170 to i32
  %shr272 = ashr i32 %conv271, 1
  br label %cond.end.283

cond.false.273:                                   ; preds = %cond.true.255
  %pos_y274 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 5
  %171 = load i32, i32* %pos_y274, align 4
  %idxprom275 = sext i32 %171 to i64
  %pos_x276 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 4
  %172 = load i32, i32* %pos_x276, align 4
  %idxprom277 = sext i32 %172 to i64
  %173 = load i32, i32* %list.addr, align 4
  %idxprom278 = sext i32 %173 to i64
  %174 = load i16***, i16**** %refPic.addr, align 8
  %arrayidx279 = getelementptr inbounds i16**, i16*** %174, i64 %idxprom278
  %175 = load i16**, i16*** %arrayidx279, align 8
  %arrayidx280 = getelementptr inbounds i16*, i16** %175, i64 %idxprom277
  %176 = load i16*, i16** %arrayidx280, align 8
  %arrayidx281 = getelementptr inbounds i16, i16* %176, i64 %idxprom275
  %177 = load i16, i16* %arrayidx281, align 2
  %conv282 = sext i16 %177 to i32
  br label %cond.end.283

cond.end.283:                                     ; preds = %cond.false.273, %cond.true.262
  %cond284 = phi i32 [ %shr272, %cond.true.262 ], [ %conv282, %cond.false.273 ]
  br label %cond.end.286

cond.false.285:                                   ; preds = %cond.end.251
  br label %cond.end.286

cond.end.286:                                     ; preds = %cond.false.285, %cond.end.283
  %cond287 = phi i32 [ %cond284, %cond.end.283 ], [ -1, %cond.false.285 ]
  store i32 %cond287, i32* %rFrameUR, align 4
  br label %if.end.288

if.end.288:                                       ; preds = %cond.end.286, %cond.end.181
  br label %if.end.289

if.end.289:                                       ; preds = %if.end.288, %cond.end.71
  %178 = load i32, i32* %rFrameL, align 4
  %179 = load i16, i16* %ref_frame.addr, align 2
  %conv290 = sext i16 %179 to i32
  %cmp291 = icmp eq i32 %178, %conv290
  br i1 %cmp291, label %land.lhs.true, label %if.else.301

land.lhs.true:                                    ; preds = %if.end.289
  %180 = load i32, i32* %rFrameU, align 4
  %181 = load i16, i16* %ref_frame.addr, align 2
  %conv293 = sext i16 %181 to i32
  %cmp294 = icmp ne i32 %180, %conv293
  br i1 %cmp294, label %land.lhs.true.296, label %if.else.301

land.lhs.true.296:                                ; preds = %land.lhs.true
  %182 = load i32, i32* %rFrameUR, align 4
  %183 = load i16, i16* %ref_frame.addr, align 2
  %conv297 = sext i16 %183 to i32
  %cmp298 = icmp ne i32 %182, %conv297
  br i1 %cmp298, label %if.then.300, label %if.else.301

if.then.300:                                      ; preds = %land.lhs.true.296
  store i32 1, i32* %mvPredType, align 4
  br label %if.end.329

if.else.301:                                      ; preds = %land.lhs.true.296, %land.lhs.true, %if.end.289
  %184 = load i32, i32* %rFrameL, align 4
  %185 = load i16, i16* %ref_frame.addr, align 2
  %conv302 = sext i16 %185 to i32
  %cmp303 = icmp ne i32 %184, %conv302
  br i1 %cmp303, label %land.lhs.true.305, label %if.else.314

land.lhs.true.305:                                ; preds = %if.else.301
  %186 = load i32, i32* %rFrameU, align 4
  %187 = load i16, i16* %ref_frame.addr, align 2
  %conv306 = sext i16 %187 to i32
  %cmp307 = icmp eq i32 %186, %conv306
  br i1 %cmp307, label %land.lhs.true.309, label %if.else.314

land.lhs.true.309:                                ; preds = %land.lhs.true.305
  %188 = load i32, i32* %rFrameUR, align 4
  %189 = load i16, i16* %ref_frame.addr, align 2
  %conv310 = sext i16 %189 to i32
  %cmp311 = icmp ne i32 %188, %conv310
  br i1 %cmp311, label %if.then.313, label %if.else.314

if.then.313:                                      ; preds = %land.lhs.true.309
  store i32 2, i32* %mvPredType, align 4
  br label %if.end.328

if.else.314:                                      ; preds = %land.lhs.true.309, %land.lhs.true.305, %if.else.301
  %190 = load i32, i32* %rFrameL, align 4
  %191 = load i16, i16* %ref_frame.addr, align 2
  %conv315 = sext i16 %191 to i32
  %cmp316 = icmp ne i32 %190, %conv315
  br i1 %cmp316, label %land.lhs.true.318, label %if.end.327

land.lhs.true.318:                                ; preds = %if.else.314
  %192 = load i32, i32* %rFrameU, align 4
  %193 = load i16, i16* %ref_frame.addr, align 2
  %conv319 = sext i16 %193 to i32
  %cmp320 = icmp ne i32 %192, %conv319
  br i1 %cmp320, label %land.lhs.true.322, label %if.end.327

land.lhs.true.322:                                ; preds = %land.lhs.true.318
  %194 = load i32, i32* %rFrameUR, align 4
  %195 = load i16, i16* %ref_frame.addr, align 2
  %conv323 = sext i16 %195 to i32
  %cmp324 = icmp eq i32 %194, %conv323
  br i1 %cmp324, label %if.then.326, label %if.end.327

if.then.326:                                      ; preds = %land.lhs.true.322
  store i32 3, i32* %mvPredType, align 4
  br label %if.end.327

if.end.327:                                       ; preds = %if.then.326, %land.lhs.true.322, %land.lhs.true.318, %if.else.314
  br label %if.end.328

if.end.328:                                       ; preds = %if.end.327, %if.then.313
  br label %if.end.329

if.end.329:                                       ; preds = %if.end.328, %if.then.300
  %196 = load i32, i32* %blockshape_x.addr, align 4
  %cmp330 = icmp eq i32 %196, 8
  br i1 %cmp330, label %land.lhs.true.332, label %if.else.351

land.lhs.true.332:                                ; preds = %if.end.329
  %197 = load i32, i32* %blockshape_y.addr, align 4
  %cmp333 = icmp eq i32 %197, 16
  br i1 %cmp333, label %if.then.335, label %if.else.351

if.then.335:                                      ; preds = %land.lhs.true.332
  %198 = load i32, i32* %mb_x, align 4
  %cmp336 = icmp eq i32 %198, 0
  br i1 %cmp336, label %if.then.338, label %if.else.344

if.then.338:                                      ; preds = %if.then.335
  %199 = load i32, i32* %rFrameL, align 4
  %200 = load i16, i16* %ref_frame.addr, align 2
  %conv339 = sext i16 %200 to i32
  %cmp340 = icmp eq i32 %199, %conv339
  br i1 %cmp340, label %if.then.342, label %if.end.343

if.then.342:                                      ; preds = %if.then.338
  store i32 1, i32* %mvPredType, align 4
  br label %if.end.343

if.end.343:                                       ; preds = %if.then.342, %if.then.338
  br label %if.end.350

if.else.344:                                      ; preds = %if.then.335
  %201 = load i32, i32* %rFrameUR, align 4
  %202 = load i16, i16* %ref_frame.addr, align 2
  %conv345 = sext i16 %202 to i32
  %cmp346 = icmp eq i32 %201, %conv345
  br i1 %cmp346, label %if.then.348, label %if.end.349

if.then.348:                                      ; preds = %if.else.344
  store i32 3, i32* %mvPredType, align 4
  br label %if.end.349

if.end.349:                                       ; preds = %if.then.348, %if.else.344
  br label %if.end.350

if.end.350:                                       ; preds = %if.end.349, %if.end.343
  br label %if.end.374

if.else.351:                                      ; preds = %land.lhs.true.332, %if.end.329
  %203 = load i32, i32* %blockshape_x.addr, align 4
  %cmp352 = icmp eq i32 %203, 16
  br i1 %cmp352, label %land.lhs.true.354, label %if.end.373

land.lhs.true.354:                                ; preds = %if.else.351
  %204 = load i32, i32* %blockshape_y.addr, align 4
  %cmp355 = icmp eq i32 %204, 8
  br i1 %cmp355, label %if.then.357, label %if.end.373

if.then.357:                                      ; preds = %land.lhs.true.354
  %205 = load i32, i32* %mb_y, align 4
  %cmp358 = icmp eq i32 %205, 0
  br i1 %cmp358, label %if.then.360, label %if.else.366

if.then.360:                                      ; preds = %if.then.357
  %206 = load i32, i32* %rFrameU, align 4
  %207 = load i16, i16* %ref_frame.addr, align 2
  %conv361 = sext i16 %207 to i32
  %cmp362 = icmp eq i32 %206, %conv361
  br i1 %cmp362, label %if.then.364, label %if.end.365

if.then.364:                                      ; preds = %if.then.360
  store i32 2, i32* %mvPredType, align 4
  br label %if.end.365

if.end.365:                                       ; preds = %if.then.364, %if.then.360
  br label %if.end.372

if.else.366:                                      ; preds = %if.then.357
  %208 = load i32, i32* %rFrameL, align 4
  %209 = load i16, i16* %ref_frame.addr, align 2
  %conv367 = sext i16 %209 to i32
  %cmp368 = icmp eq i32 %208, %conv367
  br i1 %cmp368, label %if.then.370, label %if.end.371

if.then.370:                                      ; preds = %if.else.366
  store i32 1, i32* %mvPredType, align 4
  br label %if.end.371

if.end.371:                                       ; preds = %if.then.370, %if.else.366
  br label %if.end.372

if.end.372:                                       ; preds = %if.end.371, %if.end.365
  br label %if.end.373

if.end.373:                                       ; preds = %if.end.372, %land.lhs.true.354, %if.else.351
  br label %if.end.374

if.end.374:                                       ; preds = %if.end.373, %if.end.350
  store i32 0, i32* %hv, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.374
  %210 = load i32, i32* %hv, align 4
  %cmp375 = icmp slt i32 %210, 2
  br i1 %cmp375, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %211 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %MbaffFrameFlag377 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %211, i32 0, i32 90
  %212 = load i32, i32* %MbaffFrameFlag377, align 4
  %tobool378 = icmp ne i32 %212, 0
  br i1 %tobool378, label %lor.lhs.false, label %if.then.381

lor.lhs.false:                                    ; preds = %for.body
  %213 = load i32, i32* %hv, align 4
  %cmp379 = icmp eq i32 %213, 0
  br i1 %cmp379, label %if.then.381, label %if.else.433

if.then.381:                                      ; preds = %lor.lhs.false, %for.body
  %available382 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_a, i32 0, i32 0
  %214 = load i32, i32* %available382, align 4
  %tobool383 = icmp ne i32 %214, 0
  br i1 %tobool383, label %cond.true.384, label %cond.false.396

cond.true.384:                                    ; preds = %if.then.381
  %215 = load i32, i32* %hv, align 4
  %idxprom385 = sext i32 %215 to i64
  %pos_y386 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_a, i32 0, i32 5
  %216 = load i32, i32* %pos_y386, align 4
  %idxprom387 = sext i32 %216 to i64
  %pos_x388 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_a, i32 0, i32 4
  %217 = load i32, i32* %pos_x388, align 4
  %idxprom389 = sext i32 %217 to i64
  %218 = load i32, i32* %list.addr, align 4
  %idxprom390 = sext i32 %218 to i64
  %219 = load i16****, i16***** %tmp_mv.addr, align 8
  %arrayidx391 = getelementptr inbounds i16***, i16**** %219, i64 %idxprom390
  %220 = load i16***, i16**** %arrayidx391, align 8
  %arrayidx392 = getelementptr inbounds i16**, i16*** %220, i64 %idxprom389
  %221 = load i16**, i16*** %arrayidx392, align 8
  %arrayidx393 = getelementptr inbounds i16*, i16** %221, i64 %idxprom387
  %222 = load i16*, i16** %arrayidx393, align 8
  %arrayidx394 = getelementptr inbounds i16, i16* %222, i64 %idxprom385
  %223 = load i16, i16* %arrayidx394, align 2
  %conv395 = sext i16 %223 to i32
  br label %cond.end.397

cond.false.396:                                   ; preds = %if.then.381
  br label %cond.end.397

cond.end.397:                                     ; preds = %cond.false.396, %cond.true.384
  %cond398 = phi i32 [ %conv395, %cond.true.384 ], [ 0, %cond.false.396 ]
  store i32 %cond398, i32* %mv_a, align 4
  %available399 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i32 0, i32 0
  %224 = load i32, i32* %available399, align 4
  %tobool400 = icmp ne i32 %224, 0
  br i1 %tobool400, label %cond.true.401, label %cond.false.413

cond.true.401:                                    ; preds = %cond.end.397
  %225 = load i32, i32* %hv, align 4
  %idxprom402 = sext i32 %225 to i64
  %pos_y403 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i32 0, i32 5
  %226 = load i32, i32* %pos_y403, align 4
  %idxprom404 = sext i32 %226 to i64
  %pos_x405 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i32 0, i32 4
  %227 = load i32, i32* %pos_x405, align 4
  %idxprom406 = sext i32 %227 to i64
  %228 = load i32, i32* %list.addr, align 4
  %idxprom407 = sext i32 %228 to i64
  %229 = load i16****, i16***** %tmp_mv.addr, align 8
  %arrayidx408 = getelementptr inbounds i16***, i16**** %229, i64 %idxprom407
  %230 = load i16***, i16**** %arrayidx408, align 8
  %arrayidx409 = getelementptr inbounds i16**, i16*** %230, i64 %idxprom406
  %231 = load i16**, i16*** %arrayidx409, align 8
  %arrayidx410 = getelementptr inbounds i16*, i16** %231, i64 %idxprom404
  %232 = load i16*, i16** %arrayidx410, align 8
  %arrayidx411 = getelementptr inbounds i16, i16* %232, i64 %idxprom402
  %233 = load i16, i16* %arrayidx411, align 2
  %conv412 = sext i16 %233 to i32
  br label %cond.end.414

cond.false.413:                                   ; preds = %cond.end.397
  br label %cond.end.414

cond.end.414:                                     ; preds = %cond.false.413, %cond.true.401
  %cond415 = phi i32 [ %conv412, %cond.true.401 ], [ 0, %cond.false.413 ]
  store i32 %cond415, i32* %mv_b, align 4
  %available416 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 0
  %234 = load i32, i32* %available416, align 4
  %tobool417 = icmp ne i32 %234, 0
  br i1 %tobool417, label %cond.true.418, label %cond.false.430

cond.true.418:                                    ; preds = %cond.end.414
  %235 = load i32, i32* %hv, align 4
  %idxprom419 = sext i32 %235 to i64
  %pos_y420 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 5
  %236 = load i32, i32* %pos_y420, align 4
  %idxprom421 = sext i32 %236 to i64
  %pos_x422 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 4
  %237 = load i32, i32* %pos_x422, align 4
  %idxprom423 = sext i32 %237 to i64
  %238 = load i32, i32* %list.addr, align 4
  %idxprom424 = sext i32 %238 to i64
  %239 = load i16****, i16***** %tmp_mv.addr, align 8
  %arrayidx425 = getelementptr inbounds i16***, i16**** %239, i64 %idxprom424
  %240 = load i16***, i16**** %arrayidx425, align 8
  %arrayidx426 = getelementptr inbounds i16**, i16*** %240, i64 %idxprom423
  %241 = load i16**, i16*** %arrayidx426, align 8
  %arrayidx427 = getelementptr inbounds i16*, i16** %241, i64 %idxprom421
  %242 = load i16*, i16** %arrayidx427, align 8
  %arrayidx428 = getelementptr inbounds i16, i16* %242, i64 %idxprom419
  %243 = load i16, i16* %arrayidx428, align 2
  %conv429 = sext i16 %243 to i32
  br label %cond.end.431

cond.false.430:                                   ; preds = %cond.end.414
  br label %cond.end.431

cond.end.431:                                     ; preds = %cond.false.430, %cond.true.418
  %cond432 = phi i32 [ %conv429, %cond.true.418 ], [ 0, %cond.false.430 ]
  store i32 %cond432, i32* %mv_c, align 4
  br label %if.end.676

if.else.433:                                      ; preds = %lor.lhs.false
  %244 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr434 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %244, i32 0, i32 3
  %245 = load i32, i32* %current_mb_nr434, align 4
  %idxprom435 = sext i32 %245 to i64
  %246 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data436 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %246, i32 0, i32 51
  %247 = load %struct.macroblock*, %struct.macroblock** %mb_data436, align 8
  %arrayidx437 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %247, i64 %idxprom435
  %mb_field438 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx437, i32 0, i32 22
  %248 = load i32, i32* %mb_field438, align 4
  %tobool439 = icmp ne i32 %248, 0
  br i1 %tobool439, label %if.then.440, label %if.else.557

if.then.440:                                      ; preds = %if.else.433
  %available441 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_a, i32 0, i32 0
  %249 = load i32, i32* %available441, align 4
  %tobool442 = icmp ne i32 %249, 0
  br i1 %tobool442, label %cond.true.443, label %cond.false.476

cond.true.443:                                    ; preds = %if.then.440
  %mb_addr444 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_a, i32 0, i32 1
  %250 = load i32, i32* %mb_addr444, align 4
  %idxprom445 = sext i32 %250 to i64
  %251 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data446 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %251, i32 0, i32 51
  %252 = load %struct.macroblock*, %struct.macroblock** %mb_data446, align 8
  %arrayidx447 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %252, i64 %idxprom445
  %mb_field448 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx447, i32 0, i32 22
  %253 = load i32, i32* %mb_field448, align 4
  %tobool449 = icmp ne i32 %253, 0
  br i1 %tobool449, label %cond.true.450, label %cond.false.462

cond.true.450:                                    ; preds = %cond.true.443
  %254 = load i32, i32* %hv, align 4
  %idxprom451 = sext i32 %254 to i64
  %pos_y452 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_a, i32 0, i32 5
  %255 = load i32, i32* %pos_y452, align 4
  %idxprom453 = sext i32 %255 to i64
  %pos_x454 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_a, i32 0, i32 4
  %256 = load i32, i32* %pos_x454, align 4
  %idxprom455 = sext i32 %256 to i64
  %257 = load i32, i32* %list.addr, align 4
  %idxprom456 = sext i32 %257 to i64
  %258 = load i16****, i16***** %tmp_mv.addr, align 8
  %arrayidx457 = getelementptr inbounds i16***, i16**** %258, i64 %idxprom456
  %259 = load i16***, i16**** %arrayidx457, align 8
  %arrayidx458 = getelementptr inbounds i16**, i16*** %259, i64 %idxprom455
  %260 = load i16**, i16*** %arrayidx458, align 8
  %arrayidx459 = getelementptr inbounds i16*, i16** %260, i64 %idxprom453
  %261 = load i16*, i16** %arrayidx459, align 8
  %arrayidx460 = getelementptr inbounds i16, i16* %261, i64 %idxprom451
  %262 = load i16, i16* %arrayidx460, align 2
  %conv461 = sext i16 %262 to i32
  br label %cond.end.474

cond.false.462:                                   ; preds = %cond.true.443
  %263 = load i32, i32* %hv, align 4
  %idxprom463 = sext i32 %263 to i64
  %pos_y464 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_a, i32 0, i32 5
  %264 = load i32, i32* %pos_y464, align 4
  %idxprom465 = sext i32 %264 to i64
  %pos_x466 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_a, i32 0, i32 4
  %265 = load i32, i32* %pos_x466, align 4
  %idxprom467 = sext i32 %265 to i64
  %266 = load i32, i32* %list.addr, align 4
  %idxprom468 = sext i32 %266 to i64
  %267 = load i16****, i16***** %tmp_mv.addr, align 8
  %arrayidx469 = getelementptr inbounds i16***, i16**** %267, i64 %idxprom468
  %268 = load i16***, i16**** %arrayidx469, align 8
  %arrayidx470 = getelementptr inbounds i16**, i16*** %268, i64 %idxprom467
  %269 = load i16**, i16*** %arrayidx470, align 8
  %arrayidx471 = getelementptr inbounds i16*, i16** %269, i64 %idxprom465
  %270 = load i16*, i16** %arrayidx471, align 8
  %arrayidx472 = getelementptr inbounds i16, i16* %270, i64 %idxprom463
  %271 = load i16, i16* %arrayidx472, align 2
  %conv473 = sext i16 %271 to i32
  %div = sdiv i32 %conv473, 2
  br label %cond.end.474

cond.end.474:                                     ; preds = %cond.false.462, %cond.true.450
  %cond475 = phi i32 [ %conv461, %cond.true.450 ], [ %div, %cond.false.462 ]
  br label %cond.end.477

cond.false.476:                                   ; preds = %if.then.440
  br label %cond.end.477

cond.end.477:                                     ; preds = %cond.false.476, %cond.end.474
  %cond478 = phi i32 [ %cond475, %cond.end.474 ], [ 0, %cond.false.476 ]
  store i32 %cond478, i32* %mv_a, align 4
  %available479 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i32 0, i32 0
  %272 = load i32, i32* %available479, align 4
  %tobool480 = icmp ne i32 %272, 0
  br i1 %tobool480, label %cond.true.481, label %cond.false.515

cond.true.481:                                    ; preds = %cond.end.477
  %mb_addr482 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i32 0, i32 1
  %273 = load i32, i32* %mb_addr482, align 4
  %idxprom483 = sext i32 %273 to i64
  %274 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data484 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %274, i32 0, i32 51
  %275 = load %struct.macroblock*, %struct.macroblock** %mb_data484, align 8
  %arrayidx485 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %275, i64 %idxprom483
  %mb_field486 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx485, i32 0, i32 22
  %276 = load i32, i32* %mb_field486, align 4
  %tobool487 = icmp ne i32 %276, 0
  br i1 %tobool487, label %cond.true.488, label %cond.false.500

cond.true.488:                                    ; preds = %cond.true.481
  %277 = load i32, i32* %hv, align 4
  %idxprom489 = sext i32 %277 to i64
  %pos_y490 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i32 0, i32 5
  %278 = load i32, i32* %pos_y490, align 4
  %idxprom491 = sext i32 %278 to i64
  %pos_x492 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i32 0, i32 4
  %279 = load i32, i32* %pos_x492, align 4
  %idxprom493 = sext i32 %279 to i64
  %280 = load i32, i32* %list.addr, align 4
  %idxprom494 = sext i32 %280 to i64
  %281 = load i16****, i16***** %tmp_mv.addr, align 8
  %arrayidx495 = getelementptr inbounds i16***, i16**** %281, i64 %idxprom494
  %282 = load i16***, i16**** %arrayidx495, align 8
  %arrayidx496 = getelementptr inbounds i16**, i16*** %282, i64 %idxprom493
  %283 = load i16**, i16*** %arrayidx496, align 8
  %arrayidx497 = getelementptr inbounds i16*, i16** %283, i64 %idxprom491
  %284 = load i16*, i16** %arrayidx497, align 8
  %arrayidx498 = getelementptr inbounds i16, i16* %284, i64 %idxprom489
  %285 = load i16, i16* %arrayidx498, align 2
  %conv499 = sext i16 %285 to i32
  br label %cond.end.513

cond.false.500:                                   ; preds = %cond.true.481
  %286 = load i32, i32* %hv, align 4
  %idxprom501 = sext i32 %286 to i64
  %pos_y502 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i32 0, i32 5
  %287 = load i32, i32* %pos_y502, align 4
  %idxprom503 = sext i32 %287 to i64
  %pos_x504 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i32 0, i32 4
  %288 = load i32, i32* %pos_x504, align 4
  %idxprom505 = sext i32 %288 to i64
  %289 = load i32, i32* %list.addr, align 4
  %idxprom506 = sext i32 %289 to i64
  %290 = load i16****, i16***** %tmp_mv.addr, align 8
  %arrayidx507 = getelementptr inbounds i16***, i16**** %290, i64 %idxprom506
  %291 = load i16***, i16**** %arrayidx507, align 8
  %arrayidx508 = getelementptr inbounds i16**, i16*** %291, i64 %idxprom505
  %292 = load i16**, i16*** %arrayidx508, align 8
  %arrayidx509 = getelementptr inbounds i16*, i16** %292, i64 %idxprom503
  %293 = load i16*, i16** %arrayidx509, align 8
  %arrayidx510 = getelementptr inbounds i16, i16* %293, i64 %idxprom501
  %294 = load i16, i16* %arrayidx510, align 2
  %conv511 = sext i16 %294 to i32
  %div512 = sdiv i32 %conv511, 2
  br label %cond.end.513

cond.end.513:                                     ; preds = %cond.false.500, %cond.true.488
  %cond514 = phi i32 [ %conv499, %cond.true.488 ], [ %div512, %cond.false.500 ]
  br label %cond.end.516

cond.false.515:                                   ; preds = %cond.end.477
  br label %cond.end.516

cond.end.516:                                     ; preds = %cond.false.515, %cond.end.513
  %cond517 = phi i32 [ %cond514, %cond.end.513 ], [ 0, %cond.false.515 ]
  store i32 %cond517, i32* %mv_b, align 4
  %available518 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 0
  %295 = load i32, i32* %available518, align 4
  %tobool519 = icmp ne i32 %295, 0
  br i1 %tobool519, label %cond.true.520, label %cond.false.554

cond.true.520:                                    ; preds = %cond.end.516
  %mb_addr521 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 1
  %296 = load i32, i32* %mb_addr521, align 4
  %idxprom522 = sext i32 %296 to i64
  %297 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data523 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %297, i32 0, i32 51
  %298 = load %struct.macroblock*, %struct.macroblock** %mb_data523, align 8
  %arrayidx524 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %298, i64 %idxprom522
  %mb_field525 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx524, i32 0, i32 22
  %299 = load i32, i32* %mb_field525, align 4
  %tobool526 = icmp ne i32 %299, 0
  br i1 %tobool526, label %cond.true.527, label %cond.false.539

cond.true.527:                                    ; preds = %cond.true.520
  %300 = load i32, i32* %hv, align 4
  %idxprom528 = sext i32 %300 to i64
  %pos_y529 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 5
  %301 = load i32, i32* %pos_y529, align 4
  %idxprom530 = sext i32 %301 to i64
  %pos_x531 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 4
  %302 = load i32, i32* %pos_x531, align 4
  %idxprom532 = sext i32 %302 to i64
  %303 = load i32, i32* %list.addr, align 4
  %idxprom533 = sext i32 %303 to i64
  %304 = load i16****, i16***** %tmp_mv.addr, align 8
  %arrayidx534 = getelementptr inbounds i16***, i16**** %304, i64 %idxprom533
  %305 = load i16***, i16**** %arrayidx534, align 8
  %arrayidx535 = getelementptr inbounds i16**, i16*** %305, i64 %idxprom532
  %306 = load i16**, i16*** %arrayidx535, align 8
  %arrayidx536 = getelementptr inbounds i16*, i16** %306, i64 %idxprom530
  %307 = load i16*, i16** %arrayidx536, align 8
  %arrayidx537 = getelementptr inbounds i16, i16* %307, i64 %idxprom528
  %308 = load i16, i16* %arrayidx537, align 2
  %conv538 = sext i16 %308 to i32
  br label %cond.end.552

cond.false.539:                                   ; preds = %cond.true.520
  %309 = load i32, i32* %hv, align 4
  %idxprom540 = sext i32 %309 to i64
  %pos_y541 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 5
  %310 = load i32, i32* %pos_y541, align 4
  %idxprom542 = sext i32 %310 to i64
  %pos_x543 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 4
  %311 = load i32, i32* %pos_x543, align 4
  %idxprom544 = sext i32 %311 to i64
  %312 = load i32, i32* %list.addr, align 4
  %idxprom545 = sext i32 %312 to i64
  %313 = load i16****, i16***** %tmp_mv.addr, align 8
  %arrayidx546 = getelementptr inbounds i16***, i16**** %313, i64 %idxprom545
  %314 = load i16***, i16**** %arrayidx546, align 8
  %arrayidx547 = getelementptr inbounds i16**, i16*** %314, i64 %idxprom544
  %315 = load i16**, i16*** %arrayidx547, align 8
  %arrayidx548 = getelementptr inbounds i16*, i16** %315, i64 %idxprom542
  %316 = load i16*, i16** %arrayidx548, align 8
  %arrayidx549 = getelementptr inbounds i16, i16* %316, i64 %idxprom540
  %317 = load i16, i16* %arrayidx549, align 2
  %conv550 = sext i16 %317 to i32
  %div551 = sdiv i32 %conv550, 2
  br label %cond.end.552

cond.end.552:                                     ; preds = %cond.false.539, %cond.true.527
  %cond553 = phi i32 [ %conv538, %cond.true.527 ], [ %div551, %cond.false.539 ]
  br label %cond.end.555

cond.false.554:                                   ; preds = %cond.end.516
  br label %cond.end.555

cond.end.555:                                     ; preds = %cond.false.554, %cond.end.552
  %cond556 = phi i32 [ %cond553, %cond.end.552 ], [ 0, %cond.false.554 ]
  store i32 %cond556, i32* %mv_c, align 4
  br label %if.end.675

if.else.557:                                      ; preds = %if.else.433
  %available558 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_a, i32 0, i32 0
  %318 = load i32, i32* %available558, align 4
  %tobool559 = icmp ne i32 %318, 0
  br i1 %tobool559, label %cond.true.560, label %cond.false.594

cond.true.560:                                    ; preds = %if.else.557
  %mb_addr561 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_a, i32 0, i32 1
  %319 = load i32, i32* %mb_addr561, align 4
  %idxprom562 = sext i32 %319 to i64
  %320 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data563 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %320, i32 0, i32 51
  %321 = load %struct.macroblock*, %struct.macroblock** %mb_data563, align 8
  %arrayidx564 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %321, i64 %idxprom562
  %mb_field565 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx564, i32 0, i32 22
  %322 = load i32, i32* %mb_field565, align 4
  %tobool566 = icmp ne i32 %322, 0
  br i1 %tobool566, label %cond.true.567, label %cond.false.580

cond.true.567:                                    ; preds = %cond.true.560
  %323 = load i32, i32* %hv, align 4
  %idxprom568 = sext i32 %323 to i64
  %pos_y569 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_a, i32 0, i32 5
  %324 = load i32, i32* %pos_y569, align 4
  %idxprom570 = sext i32 %324 to i64
  %pos_x571 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_a, i32 0, i32 4
  %325 = load i32, i32* %pos_x571, align 4
  %idxprom572 = sext i32 %325 to i64
  %326 = load i32, i32* %list.addr, align 4
  %idxprom573 = sext i32 %326 to i64
  %327 = load i16****, i16***** %tmp_mv.addr, align 8
  %arrayidx574 = getelementptr inbounds i16***, i16**** %327, i64 %idxprom573
  %328 = load i16***, i16**** %arrayidx574, align 8
  %arrayidx575 = getelementptr inbounds i16**, i16*** %328, i64 %idxprom572
  %329 = load i16**, i16*** %arrayidx575, align 8
  %arrayidx576 = getelementptr inbounds i16*, i16** %329, i64 %idxprom570
  %330 = load i16*, i16** %arrayidx576, align 8
  %arrayidx577 = getelementptr inbounds i16, i16* %330, i64 %idxprom568
  %331 = load i16, i16* %arrayidx577, align 2
  %conv578 = sext i16 %331 to i32
  %mul579 = mul nsw i32 %conv578, 2
  br label %cond.end.592

cond.false.580:                                   ; preds = %cond.true.560
  %332 = load i32, i32* %hv, align 4
  %idxprom581 = sext i32 %332 to i64
  %pos_y582 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_a, i32 0, i32 5
  %333 = load i32, i32* %pos_y582, align 4
  %idxprom583 = sext i32 %333 to i64
  %pos_x584 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_a, i32 0, i32 4
  %334 = load i32, i32* %pos_x584, align 4
  %idxprom585 = sext i32 %334 to i64
  %335 = load i32, i32* %list.addr, align 4
  %idxprom586 = sext i32 %335 to i64
  %336 = load i16****, i16***** %tmp_mv.addr, align 8
  %arrayidx587 = getelementptr inbounds i16***, i16**** %336, i64 %idxprom586
  %337 = load i16***, i16**** %arrayidx587, align 8
  %arrayidx588 = getelementptr inbounds i16**, i16*** %337, i64 %idxprom585
  %338 = load i16**, i16*** %arrayidx588, align 8
  %arrayidx589 = getelementptr inbounds i16*, i16** %338, i64 %idxprom583
  %339 = load i16*, i16** %arrayidx589, align 8
  %arrayidx590 = getelementptr inbounds i16, i16* %339, i64 %idxprom581
  %340 = load i16, i16* %arrayidx590, align 2
  %conv591 = sext i16 %340 to i32
  br label %cond.end.592

cond.end.592:                                     ; preds = %cond.false.580, %cond.true.567
  %cond593 = phi i32 [ %mul579, %cond.true.567 ], [ %conv591, %cond.false.580 ]
  br label %cond.end.595

cond.false.594:                                   ; preds = %if.else.557
  br label %cond.end.595

cond.end.595:                                     ; preds = %cond.false.594, %cond.end.592
  %cond596 = phi i32 [ %cond593, %cond.end.592 ], [ 0, %cond.false.594 ]
  store i32 %cond596, i32* %mv_a, align 4
  %available597 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i32 0, i32 0
  %341 = load i32, i32* %available597, align 4
  %tobool598 = icmp ne i32 %341, 0
  br i1 %tobool598, label %cond.true.599, label %cond.false.633

cond.true.599:                                    ; preds = %cond.end.595
  %mb_addr600 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i32 0, i32 1
  %342 = load i32, i32* %mb_addr600, align 4
  %idxprom601 = sext i32 %342 to i64
  %343 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data602 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %343, i32 0, i32 51
  %344 = load %struct.macroblock*, %struct.macroblock** %mb_data602, align 8
  %arrayidx603 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %344, i64 %idxprom601
  %mb_field604 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx603, i32 0, i32 22
  %345 = load i32, i32* %mb_field604, align 4
  %tobool605 = icmp ne i32 %345, 0
  br i1 %tobool605, label %cond.true.606, label %cond.false.619

cond.true.606:                                    ; preds = %cond.true.599
  %346 = load i32, i32* %hv, align 4
  %idxprom607 = sext i32 %346 to i64
  %pos_y608 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i32 0, i32 5
  %347 = load i32, i32* %pos_y608, align 4
  %idxprom609 = sext i32 %347 to i64
  %pos_x610 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i32 0, i32 4
  %348 = load i32, i32* %pos_x610, align 4
  %idxprom611 = sext i32 %348 to i64
  %349 = load i32, i32* %list.addr, align 4
  %idxprom612 = sext i32 %349 to i64
  %350 = load i16****, i16***** %tmp_mv.addr, align 8
  %arrayidx613 = getelementptr inbounds i16***, i16**** %350, i64 %idxprom612
  %351 = load i16***, i16**** %arrayidx613, align 8
  %arrayidx614 = getelementptr inbounds i16**, i16*** %351, i64 %idxprom611
  %352 = load i16**, i16*** %arrayidx614, align 8
  %arrayidx615 = getelementptr inbounds i16*, i16** %352, i64 %idxprom609
  %353 = load i16*, i16** %arrayidx615, align 8
  %arrayidx616 = getelementptr inbounds i16, i16* %353, i64 %idxprom607
  %354 = load i16, i16* %arrayidx616, align 2
  %conv617 = sext i16 %354 to i32
  %mul618 = mul nsw i32 %conv617, 2
  br label %cond.end.631

cond.false.619:                                   ; preds = %cond.true.599
  %355 = load i32, i32* %hv, align 4
  %idxprom620 = sext i32 %355 to i64
  %pos_y621 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i32 0, i32 5
  %356 = load i32, i32* %pos_y621, align 4
  %idxprom622 = sext i32 %356 to i64
  %pos_x623 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i32 0, i32 4
  %357 = load i32, i32* %pos_x623, align 4
  %idxprom624 = sext i32 %357 to i64
  %358 = load i32, i32* %list.addr, align 4
  %idxprom625 = sext i32 %358 to i64
  %359 = load i16****, i16***** %tmp_mv.addr, align 8
  %arrayidx626 = getelementptr inbounds i16***, i16**** %359, i64 %idxprom625
  %360 = load i16***, i16**** %arrayidx626, align 8
  %arrayidx627 = getelementptr inbounds i16**, i16*** %360, i64 %idxprom624
  %361 = load i16**, i16*** %arrayidx627, align 8
  %arrayidx628 = getelementptr inbounds i16*, i16** %361, i64 %idxprom622
  %362 = load i16*, i16** %arrayidx628, align 8
  %arrayidx629 = getelementptr inbounds i16, i16* %362, i64 %idxprom620
  %363 = load i16, i16* %arrayidx629, align 2
  %conv630 = sext i16 %363 to i32
  br label %cond.end.631

cond.end.631:                                     ; preds = %cond.false.619, %cond.true.606
  %cond632 = phi i32 [ %mul618, %cond.true.606 ], [ %conv630, %cond.false.619 ]
  br label %cond.end.634

cond.false.633:                                   ; preds = %cond.end.595
  br label %cond.end.634

cond.end.634:                                     ; preds = %cond.false.633, %cond.end.631
  %cond635 = phi i32 [ %cond632, %cond.end.631 ], [ 0, %cond.false.633 ]
  store i32 %cond635, i32* %mv_b, align 4
  %available636 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 0
  %364 = load i32, i32* %available636, align 4
  %tobool637 = icmp ne i32 %364, 0
  br i1 %tobool637, label %cond.true.638, label %cond.false.672

cond.true.638:                                    ; preds = %cond.end.634
  %mb_addr639 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 1
  %365 = load i32, i32* %mb_addr639, align 4
  %idxprom640 = sext i32 %365 to i64
  %366 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data641 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %366, i32 0, i32 51
  %367 = load %struct.macroblock*, %struct.macroblock** %mb_data641, align 8
  %arrayidx642 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %367, i64 %idxprom640
  %mb_field643 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx642, i32 0, i32 22
  %368 = load i32, i32* %mb_field643, align 4
  %tobool644 = icmp ne i32 %368, 0
  br i1 %tobool644, label %cond.true.645, label %cond.false.658

cond.true.645:                                    ; preds = %cond.true.638
  %369 = load i32, i32* %hv, align 4
  %idxprom646 = sext i32 %369 to i64
  %pos_y647 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 5
  %370 = load i32, i32* %pos_y647, align 4
  %idxprom648 = sext i32 %370 to i64
  %pos_x649 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 4
  %371 = load i32, i32* %pos_x649, align 4
  %idxprom650 = sext i32 %371 to i64
  %372 = load i32, i32* %list.addr, align 4
  %idxprom651 = sext i32 %372 to i64
  %373 = load i16****, i16***** %tmp_mv.addr, align 8
  %arrayidx652 = getelementptr inbounds i16***, i16**** %373, i64 %idxprom651
  %374 = load i16***, i16**** %arrayidx652, align 8
  %arrayidx653 = getelementptr inbounds i16**, i16*** %374, i64 %idxprom650
  %375 = load i16**, i16*** %arrayidx653, align 8
  %arrayidx654 = getelementptr inbounds i16*, i16** %375, i64 %idxprom648
  %376 = load i16*, i16** %arrayidx654, align 8
  %arrayidx655 = getelementptr inbounds i16, i16* %376, i64 %idxprom646
  %377 = load i16, i16* %arrayidx655, align 2
  %conv656 = sext i16 %377 to i32
  %mul657 = mul nsw i32 %conv656, 2
  br label %cond.end.670

cond.false.658:                                   ; preds = %cond.true.638
  %378 = load i32, i32* %hv, align 4
  %idxprom659 = sext i32 %378 to i64
  %pos_y660 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 5
  %379 = load i32, i32* %pos_y660, align 4
  %idxprom661 = sext i32 %379 to i64
  %pos_x662 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 4
  %380 = load i32, i32* %pos_x662, align 4
  %idxprom663 = sext i32 %380 to i64
  %381 = load i32, i32* %list.addr, align 4
  %idxprom664 = sext i32 %381 to i64
  %382 = load i16****, i16***** %tmp_mv.addr, align 8
  %arrayidx665 = getelementptr inbounds i16***, i16**** %382, i64 %idxprom664
  %383 = load i16***, i16**** %arrayidx665, align 8
  %arrayidx666 = getelementptr inbounds i16**, i16*** %383, i64 %idxprom663
  %384 = load i16**, i16*** %arrayidx666, align 8
  %arrayidx667 = getelementptr inbounds i16*, i16** %384, i64 %idxprom661
  %385 = load i16*, i16** %arrayidx667, align 8
  %arrayidx668 = getelementptr inbounds i16, i16* %385, i64 %idxprom659
  %386 = load i16, i16* %arrayidx668, align 2
  %conv669 = sext i16 %386 to i32
  br label %cond.end.670

cond.end.670:                                     ; preds = %cond.false.658, %cond.true.645
  %cond671 = phi i32 [ %mul657, %cond.true.645 ], [ %conv669, %cond.false.658 ]
  br label %cond.end.673

cond.false.672:                                   ; preds = %cond.end.634
  br label %cond.end.673

cond.end.673:                                     ; preds = %cond.false.672, %cond.end.670
  %cond674 = phi i32 [ %cond671, %cond.end.670 ], [ 0, %cond.false.672 ]
  store i32 %cond674, i32* %mv_c, align 4
  br label %if.end.675

if.end.675:                                       ; preds = %cond.end.673, %cond.end.555
  br label %if.end.676

if.end.676:                                       ; preds = %if.end.675, %cond.end.431
  %387 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %FMEnable677 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %387, i32 0, i32 134
  %388 = load i32, i32* %FMEnable677, align 4
  %tobool678 = icmp ne i32 %388, 0
  br i1 %tobool678, label %if.then.679, label %if.end.812

if.then.679:                                      ; preds = %if.end.676
  %available680 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_a, i32 0, i32 0
  %389 = load i32, i32* %available680, align 4
  %tobool681 = icmp ne i32 %389, 0
  br i1 %tobool681, label %cond.true.682, label %cond.false.710

cond.true.682:                                    ; preds = %if.then.679
  %390 = load i32, i32* %list.addr, align 4
  %cmp683 = icmp eq i32 %390, 1
  br i1 %cmp683, label %cond.true.685, label %cond.false.696

cond.true.685:                                    ; preds = %cond.true.682
  %391 = load i32, i32* @FME_blocktype, align 4
  %idxprom686 = sext i32 %391 to i64
  %pos_y687 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_a, i32 0, i32 5
  %392 = load i32, i32* %pos_y687, align 4
  %idxprom688 = sext i32 %392 to i64
  %pos_x689 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_a, i32 0, i32 4
  %393 = load i32, i32* %pos_x689, align 4
  %idxprom690 = sext i32 %393 to i64
  %394 = load i32*****, i32****** @all_bwmincost, align 8
  %arrayidx691 = getelementptr inbounds i32****, i32***** %394, i64 %idxprom690
  %395 = load i32****, i32***** %arrayidx691, align 8
  %arrayidx692 = getelementptr inbounds i32***, i32**** %395, i64 %idxprom688
  %396 = load i32***, i32**** %arrayidx692, align 8
  %arrayidx693 = getelementptr inbounds i32**, i32*** %396, i64 0
  %397 = load i32**, i32*** %arrayidx693, align 8
  %arrayidx694 = getelementptr inbounds i32*, i32** %397, i64 %idxprom686
  %398 = load i32*, i32** %arrayidx694, align 8
  %arrayidx695 = getelementptr inbounds i32, i32* %398, i64 0
  %399 = load i32, i32* %arrayidx695, align 4
  br label %cond.end.708

cond.false.696:                                   ; preds = %cond.true.682
  %400 = load i32, i32* @FME_blocktype, align 4
  %idxprom697 = sext i32 %400 to i64
  %401 = load i16, i16* %ref_frame.addr, align 2
  %idxprom698 = sext i16 %401 to i64
  %pos_y699 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_a, i32 0, i32 5
  %402 = load i32, i32* %pos_y699, align 4
  %idxprom700 = sext i32 %402 to i64
  %pos_x701 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_a, i32 0, i32 4
  %403 = load i32, i32* %pos_x701, align 4
  %idxprom702 = sext i32 %403 to i64
  %404 = load i32*****, i32****** @all_mincost, align 8
  %arrayidx703 = getelementptr inbounds i32****, i32***** %404, i64 %idxprom702
  %405 = load i32****, i32***** %arrayidx703, align 8
  %arrayidx704 = getelementptr inbounds i32***, i32**** %405, i64 %idxprom700
  %406 = load i32***, i32**** %arrayidx704, align 8
  %arrayidx705 = getelementptr inbounds i32**, i32*** %406, i64 %idxprom698
  %407 = load i32**, i32*** %arrayidx705, align 8
  %arrayidx706 = getelementptr inbounds i32*, i32** %407, i64 %idxprom697
  %408 = load i32*, i32** %arrayidx706, align 8
  %arrayidx707 = getelementptr inbounds i32, i32* %408, i64 0
  %409 = load i32, i32* %arrayidx707, align 4
  br label %cond.end.708

cond.end.708:                                     ; preds = %cond.false.696, %cond.true.685
  %cond709 = phi i32 [ %399, %cond.true.685 ], [ %409, %cond.false.696 ]
  br label %cond.end.711

cond.false.710:                                   ; preds = %if.then.679
  br label %cond.end.711

cond.end.711:                                     ; preds = %cond.false.710, %cond.end.708
  %cond712 = phi i32 [ %cond709, %cond.end.708 ], [ 0, %cond.false.710 ]
  store i32 %cond712, i32* %SAD_a, align 4
  %available713 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i32 0, i32 0
  %410 = load i32, i32* %available713, align 4
  %tobool714 = icmp ne i32 %410, 0
  br i1 %tobool714, label %cond.true.715, label %cond.false.743

cond.true.715:                                    ; preds = %cond.end.711
  %411 = load i32, i32* %list.addr, align 4
  %cmp716 = icmp eq i32 %411, 1
  br i1 %cmp716, label %cond.true.718, label %cond.false.729

cond.true.718:                                    ; preds = %cond.true.715
  %412 = load i32, i32* @FME_blocktype, align 4
  %idxprom719 = sext i32 %412 to i64
  %pos_y720 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i32 0, i32 5
  %413 = load i32, i32* %pos_y720, align 4
  %idxprom721 = sext i32 %413 to i64
  %pos_x722 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i32 0, i32 4
  %414 = load i32, i32* %pos_x722, align 4
  %idxprom723 = sext i32 %414 to i64
  %415 = load i32*****, i32****** @all_bwmincost, align 8
  %arrayidx724 = getelementptr inbounds i32****, i32***** %415, i64 %idxprom723
  %416 = load i32****, i32***** %arrayidx724, align 8
  %arrayidx725 = getelementptr inbounds i32***, i32**** %416, i64 %idxprom721
  %417 = load i32***, i32**** %arrayidx725, align 8
  %arrayidx726 = getelementptr inbounds i32**, i32*** %417, i64 0
  %418 = load i32**, i32*** %arrayidx726, align 8
  %arrayidx727 = getelementptr inbounds i32*, i32** %418, i64 %idxprom719
  %419 = load i32*, i32** %arrayidx727, align 8
  %arrayidx728 = getelementptr inbounds i32, i32* %419, i64 0
  %420 = load i32, i32* %arrayidx728, align 4
  br label %cond.end.741

cond.false.729:                                   ; preds = %cond.true.715
  %421 = load i32, i32* @FME_blocktype, align 4
  %idxprom730 = sext i32 %421 to i64
  %422 = load i16, i16* %ref_frame.addr, align 2
  %idxprom731 = sext i16 %422 to i64
  %pos_y732 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i32 0, i32 5
  %423 = load i32, i32* %pos_y732, align 4
  %idxprom733 = sext i32 %423 to i64
  %pos_x734 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i32 0, i32 4
  %424 = load i32, i32* %pos_x734, align 4
  %idxprom735 = sext i32 %424 to i64
  %425 = load i32*****, i32****** @all_mincost, align 8
  %arrayidx736 = getelementptr inbounds i32****, i32***** %425, i64 %idxprom735
  %426 = load i32****, i32***** %arrayidx736, align 8
  %arrayidx737 = getelementptr inbounds i32***, i32**** %426, i64 %idxprom733
  %427 = load i32***, i32**** %arrayidx737, align 8
  %arrayidx738 = getelementptr inbounds i32**, i32*** %427, i64 %idxprom731
  %428 = load i32**, i32*** %arrayidx738, align 8
  %arrayidx739 = getelementptr inbounds i32*, i32** %428, i64 %idxprom730
  %429 = load i32*, i32** %arrayidx739, align 8
  %arrayidx740 = getelementptr inbounds i32, i32* %429, i64 0
  %430 = load i32, i32* %arrayidx740, align 4
  br label %cond.end.741

cond.end.741:                                     ; preds = %cond.false.729, %cond.true.718
  %cond742 = phi i32 [ %420, %cond.true.718 ], [ %430, %cond.false.729 ]
  br label %cond.end.744

cond.false.743:                                   ; preds = %cond.end.711
  br label %cond.end.744

cond.end.744:                                     ; preds = %cond.false.743, %cond.end.741
  %cond745 = phi i32 [ %cond742, %cond.end.741 ], [ 0, %cond.false.743 ]
  store i32 %cond745, i32* %SAD_b, align 4
  %available746 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_d, i32 0, i32 0
  %431 = load i32, i32* %available746, align 4
  %tobool747 = icmp ne i32 %431, 0
  br i1 %tobool747, label %cond.true.748, label %cond.false.776

cond.true.748:                                    ; preds = %cond.end.744
  %432 = load i32, i32* %list.addr, align 4
  %cmp749 = icmp eq i32 %432, 1
  br i1 %cmp749, label %cond.true.751, label %cond.false.762

cond.true.751:                                    ; preds = %cond.true.748
  %433 = load i32, i32* @FME_blocktype, align 4
  %idxprom752 = sext i32 %433 to i64
  %pos_y753 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_d, i32 0, i32 5
  %434 = load i32, i32* %pos_y753, align 4
  %idxprom754 = sext i32 %434 to i64
  %pos_x755 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_d, i32 0, i32 4
  %435 = load i32, i32* %pos_x755, align 4
  %idxprom756 = sext i32 %435 to i64
  %436 = load i32*****, i32****** @all_bwmincost, align 8
  %arrayidx757 = getelementptr inbounds i32****, i32***** %436, i64 %idxprom756
  %437 = load i32****, i32***** %arrayidx757, align 8
  %arrayidx758 = getelementptr inbounds i32***, i32**** %437, i64 %idxprom754
  %438 = load i32***, i32**** %arrayidx758, align 8
  %arrayidx759 = getelementptr inbounds i32**, i32*** %438, i64 0
  %439 = load i32**, i32*** %arrayidx759, align 8
  %arrayidx760 = getelementptr inbounds i32*, i32** %439, i64 %idxprom752
  %440 = load i32*, i32** %arrayidx760, align 8
  %arrayidx761 = getelementptr inbounds i32, i32* %440, i64 0
  %441 = load i32, i32* %arrayidx761, align 4
  br label %cond.end.774

cond.false.762:                                   ; preds = %cond.true.748
  %442 = load i32, i32* @FME_blocktype, align 4
  %idxprom763 = sext i32 %442 to i64
  %443 = load i16, i16* %ref_frame.addr, align 2
  %idxprom764 = sext i16 %443 to i64
  %pos_y765 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_d, i32 0, i32 5
  %444 = load i32, i32* %pos_y765, align 4
  %idxprom766 = sext i32 %444 to i64
  %pos_x767 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_d, i32 0, i32 4
  %445 = load i32, i32* %pos_x767, align 4
  %idxprom768 = sext i32 %445 to i64
  %446 = load i32*****, i32****** @all_mincost, align 8
  %arrayidx769 = getelementptr inbounds i32****, i32***** %446, i64 %idxprom768
  %447 = load i32****, i32***** %arrayidx769, align 8
  %arrayidx770 = getelementptr inbounds i32***, i32**** %447, i64 %idxprom766
  %448 = load i32***, i32**** %arrayidx770, align 8
  %arrayidx771 = getelementptr inbounds i32**, i32*** %448, i64 %idxprom764
  %449 = load i32**, i32*** %arrayidx771, align 8
  %arrayidx772 = getelementptr inbounds i32*, i32** %449, i64 %idxprom763
  %450 = load i32*, i32** %arrayidx772, align 8
  %arrayidx773 = getelementptr inbounds i32, i32* %450, i64 0
  %451 = load i32, i32* %arrayidx773, align 4
  br label %cond.end.774

cond.end.774:                                     ; preds = %cond.false.762, %cond.true.751
  %cond775 = phi i32 [ %441, %cond.true.751 ], [ %451, %cond.false.762 ]
  br label %cond.end.777

cond.false.776:                                   ; preds = %cond.end.744
  br label %cond.end.777

cond.end.777:                                     ; preds = %cond.false.776, %cond.end.774
  %cond778 = phi i32 [ %cond775, %cond.end.774 ], [ 0, %cond.false.776 ]
  store i32 %cond778, i32* %SAD_d, align 4
  %available779 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 0
  %452 = load i32, i32* %available779, align 4
  %tobool780 = icmp ne i32 %452, 0
  br i1 %tobool780, label %cond.true.781, label %cond.false.809

cond.true.781:                                    ; preds = %cond.end.777
  %453 = load i32, i32* %list.addr, align 4
  %cmp782 = icmp eq i32 %453, 1
  br i1 %cmp782, label %cond.true.784, label %cond.false.795

cond.true.784:                                    ; preds = %cond.true.781
  %454 = load i32, i32* @FME_blocktype, align 4
  %idxprom785 = sext i32 %454 to i64
  %pos_y786 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 5
  %455 = load i32, i32* %pos_y786, align 4
  %idxprom787 = sext i32 %455 to i64
  %pos_x788 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 4
  %456 = load i32, i32* %pos_x788, align 4
  %idxprom789 = sext i32 %456 to i64
  %457 = load i32*****, i32****** @all_bwmincost, align 8
  %arrayidx790 = getelementptr inbounds i32****, i32***** %457, i64 %idxprom789
  %458 = load i32****, i32***** %arrayidx790, align 8
  %arrayidx791 = getelementptr inbounds i32***, i32**** %458, i64 %idxprom787
  %459 = load i32***, i32**** %arrayidx791, align 8
  %arrayidx792 = getelementptr inbounds i32**, i32*** %459, i64 0
  %460 = load i32**, i32*** %arrayidx792, align 8
  %arrayidx793 = getelementptr inbounds i32*, i32** %460, i64 %idxprom785
  %461 = load i32*, i32** %arrayidx793, align 8
  %arrayidx794 = getelementptr inbounds i32, i32* %461, i64 0
  %462 = load i32, i32* %arrayidx794, align 4
  br label %cond.end.807

cond.false.795:                                   ; preds = %cond.true.781
  %463 = load i32, i32* @FME_blocktype, align 4
  %idxprom796 = sext i32 %463 to i64
  %464 = load i16, i16* %ref_frame.addr, align 2
  %idxprom797 = sext i16 %464 to i64
  %pos_y798 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 5
  %465 = load i32, i32* %pos_y798, align 4
  %idxprom799 = sext i32 %465 to i64
  %pos_x800 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 4
  %466 = load i32, i32* %pos_x800, align 4
  %idxprom801 = sext i32 %466 to i64
  %467 = load i32*****, i32****** @all_mincost, align 8
  %arrayidx802 = getelementptr inbounds i32****, i32***** %467, i64 %idxprom801
  %468 = load i32****, i32***** %arrayidx802, align 8
  %arrayidx803 = getelementptr inbounds i32***, i32**** %468, i64 %idxprom799
  %469 = load i32***, i32**** %arrayidx803, align 8
  %arrayidx804 = getelementptr inbounds i32**, i32*** %469, i64 %idxprom797
  %470 = load i32**, i32*** %arrayidx804, align 8
  %arrayidx805 = getelementptr inbounds i32*, i32** %470, i64 %idxprom796
  %471 = load i32*, i32** %arrayidx805, align 8
  %arrayidx806 = getelementptr inbounds i32, i32* %471, i64 0
  %472 = load i32, i32* %arrayidx806, align 4
  br label %cond.end.807

cond.end.807:                                     ; preds = %cond.false.795, %cond.true.784
  %cond808 = phi i32 [ %462, %cond.true.784 ], [ %472, %cond.false.795 ]
  br label %cond.end.810

cond.false.809:                                   ; preds = %cond.end.777
  %473 = load i32, i32* %SAD_d, align 4
  br label %cond.end.810

cond.end.810:                                     ; preds = %cond.false.809, %cond.end.807
  %cond811 = phi i32 [ %cond808, %cond.end.807 ], [ %473, %cond.false.809 ]
  store i32 %cond811, i32* %SAD_c, align 4
  br label %if.end.812

if.end.812:                                       ; preds = %cond.end.810, %if.end.676
  %474 = load i32, i32* %mvPredType, align 4
  switch i32 %474, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb.892
    i32 2, label %sw.bb.899
    i32 3, label %sw.bb.906
  ]

sw.bb:                                            ; preds = %if.end.812
  %available813 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i32 0, i32 0
  %475 = load i32, i32* %available813, align 4
  %tobool814 = icmp ne i32 %475, 0
  br i1 %tobool814, label %if.else.825, label %lor.lhs.false.815

lor.lhs.false.815:                                ; preds = %sw.bb
  %available816 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 0
  %476 = load i32, i32* %available816, align 4
  %tobool817 = icmp ne i32 %476, 0
  br i1 %tobool817, label %if.else.825, label %if.then.818

if.then.818:                                      ; preds = %lor.lhs.false.815
  %477 = load i32, i32* %mv_a, align 4
  store i32 %477, i32* %pred_vec, align 4
  %478 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %FMEnable819 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %478, i32 0, i32 134
  %479 = load i32, i32* %FMEnable819, align 4
  %tobool820 = icmp ne i32 %479, 0
  br i1 %tobool820, label %if.then.821, label %if.end.824

if.then.821:                                      ; preds = %if.then.818
  %480 = load i32, i32* %SAD_a, align 4
  %481 = load i32, i32* %hv, align 4
  %idxprom822 = sext i32 %481 to i64
  %arrayidx823 = getelementptr inbounds [2 x i32], [2 x i32]* %temp_pred_SAD, i32 0, i64 %idxprom822
  store i32 %480, i32* %arrayidx823, align 4
  br label %if.end.824

if.end.824:                                       ; preds = %if.then.821, %if.then.818
  br label %if.end.865

if.else.825:                                      ; preds = %lor.lhs.false.815, %sw.bb
  %482 = load i32, i32* %mv_a, align 4
  %483 = load i32, i32* %mv_b, align 4
  %add826 = add nsw i32 %482, %483
  %484 = load i32, i32* %mv_c, align 4
  %add827 = add nsw i32 %add826, %484
  %485 = load i32, i32* %mv_a, align 4
  %486 = load i32, i32* %mv_b, align 4
  %487 = load i32, i32* %mv_c, align 4
  %cmp828 = icmp slt i32 %486, %487
  br i1 %cmp828, label %cond.true.830, label %cond.false.831

cond.true.830:                                    ; preds = %if.else.825
  %488 = load i32, i32* %mv_b, align 4
  br label %cond.end.832

cond.false.831:                                   ; preds = %if.else.825
  %489 = load i32, i32* %mv_c, align 4
  br label %cond.end.832

cond.end.832:                                     ; preds = %cond.false.831, %cond.true.830
  %cond833 = phi i32 [ %488, %cond.true.830 ], [ %489, %cond.false.831 ]
  %cmp834 = icmp slt i32 %485, %cond833
  br i1 %cmp834, label %cond.true.836, label %cond.false.837

cond.true.836:                                    ; preds = %cond.end.832
  %490 = load i32, i32* %mv_a, align 4
  br label %cond.end.844

cond.false.837:                                   ; preds = %cond.end.832
  %491 = load i32, i32* %mv_b, align 4
  %492 = load i32, i32* %mv_c, align 4
  %cmp838 = icmp slt i32 %491, %492
  br i1 %cmp838, label %cond.true.840, label %cond.false.841

cond.true.840:                                    ; preds = %cond.false.837
  %493 = load i32, i32* %mv_b, align 4
  br label %cond.end.842

cond.false.841:                                   ; preds = %cond.false.837
  %494 = load i32, i32* %mv_c, align 4
  br label %cond.end.842

cond.end.842:                                     ; preds = %cond.false.841, %cond.true.840
  %cond843 = phi i32 [ %493, %cond.true.840 ], [ %494, %cond.false.841 ]
  br label %cond.end.844

cond.end.844:                                     ; preds = %cond.end.842, %cond.true.836
  %cond845 = phi i32 [ %490, %cond.true.836 ], [ %cond843, %cond.end.842 ]
  %sub = sub nsw i32 %add827, %cond845
  %495 = load i32, i32* %mv_a, align 4
  %496 = load i32, i32* %mv_b, align 4
  %497 = load i32, i32* %mv_c, align 4
  %cmp846 = icmp sgt i32 %496, %497
  br i1 %cmp846, label %cond.true.848, label %cond.false.849

cond.true.848:                                    ; preds = %cond.end.844
  %498 = load i32, i32* %mv_b, align 4
  br label %cond.end.850

cond.false.849:                                   ; preds = %cond.end.844
  %499 = load i32, i32* %mv_c, align 4
  br label %cond.end.850

cond.end.850:                                     ; preds = %cond.false.849, %cond.true.848
  %cond851 = phi i32 [ %498, %cond.true.848 ], [ %499, %cond.false.849 ]
  %cmp852 = icmp sgt i32 %495, %cond851
  br i1 %cmp852, label %cond.true.854, label %cond.false.855

cond.true.854:                                    ; preds = %cond.end.850
  %500 = load i32, i32* %mv_a, align 4
  br label %cond.end.862

cond.false.855:                                   ; preds = %cond.end.850
  %501 = load i32, i32* %mv_b, align 4
  %502 = load i32, i32* %mv_c, align 4
  %cmp856 = icmp sgt i32 %501, %502
  br i1 %cmp856, label %cond.true.858, label %cond.false.859

cond.true.858:                                    ; preds = %cond.false.855
  %503 = load i32, i32* %mv_b, align 4
  br label %cond.end.860

cond.false.859:                                   ; preds = %cond.false.855
  %504 = load i32, i32* %mv_c, align 4
  br label %cond.end.860

cond.end.860:                                     ; preds = %cond.false.859, %cond.true.858
  %cond861 = phi i32 [ %503, %cond.true.858 ], [ %504, %cond.false.859 ]
  br label %cond.end.862

cond.end.862:                                     ; preds = %cond.end.860, %cond.true.854
  %cond863 = phi i32 [ %500, %cond.true.854 ], [ %cond861, %cond.end.860 ]
  %sub864 = sub nsw i32 %sub, %cond863
  store i32 %sub864, i32* %pred_vec, align 4
  br label %if.end.865

if.end.865:                                       ; preds = %cond.end.862, %if.end.824
  %505 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %FMEnable866 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %505, i32 0, i32 134
  %506 = load i32, i32* %FMEnable866, align 4
  %tobool867 = icmp ne i32 %506, 0
  br i1 %tobool867, label %if.then.868, label %if.end.891

if.then.868:                                      ; preds = %if.end.865
  %507 = load i32, i32* %pred_vec, align 4
  %508 = load i32, i32* %mv_a, align 4
  %cmp869 = icmp eq i32 %507, %508
  br i1 %cmp869, label %land.lhs.true.871, label %if.else.877

land.lhs.true.871:                                ; preds = %if.then.868
  %509 = load i32, i32* %SAD_a, align 4
  %cmp872 = icmp ne i32 %509, 0
  br i1 %cmp872, label %if.then.874, label %if.else.877

if.then.874:                                      ; preds = %land.lhs.true.871
  %510 = load i32, i32* %SAD_a, align 4
  %511 = load i32, i32* %hv, align 4
  %idxprom875 = sext i32 %511 to i64
  %arrayidx876 = getelementptr inbounds [2 x i32], [2 x i32]* %temp_pred_SAD, i32 0, i64 %idxprom875
  store i32 %510, i32* %arrayidx876, align 4
  br label %if.end.890

if.else.877:                                      ; preds = %land.lhs.true.871, %if.then.868
  %512 = load i32, i32* %pred_vec, align 4
  %513 = load i32, i32* %mv_b, align 4
  %cmp878 = icmp eq i32 %512, %513
  br i1 %cmp878, label %land.lhs.true.880, label %if.else.886

land.lhs.true.880:                                ; preds = %if.else.877
  %514 = load i32, i32* %SAD_b, align 4
  %cmp881 = icmp ne i32 %514, 0
  br i1 %cmp881, label %if.then.883, label %if.else.886

if.then.883:                                      ; preds = %land.lhs.true.880
  %515 = load i32, i32* %SAD_b, align 4
  %516 = load i32, i32* %hv, align 4
  %idxprom884 = sext i32 %516 to i64
  %arrayidx885 = getelementptr inbounds [2 x i32], [2 x i32]* %temp_pred_SAD, i32 0, i64 %idxprom884
  store i32 %515, i32* %arrayidx885, align 4
  br label %if.end.889

if.else.886:                                      ; preds = %land.lhs.true.880, %if.else.877
  %517 = load i32, i32* %SAD_c, align 4
  %518 = load i32, i32* %hv, align 4
  %idxprom887 = sext i32 %518 to i64
  %arrayidx888 = getelementptr inbounds [2 x i32], [2 x i32]* %temp_pred_SAD, i32 0, i64 %idxprom887
  store i32 %517, i32* %arrayidx888, align 4
  br label %if.end.889

if.end.889:                                       ; preds = %if.else.886, %if.then.883
  br label %if.end.890

if.end.890:                                       ; preds = %if.end.889, %if.then.874
  br label %if.end.891

if.end.891:                                       ; preds = %if.end.890, %if.end.865
  br label %sw.epilog

sw.bb.892:                                        ; preds = %if.end.812
  %519 = load i32, i32* %mv_a, align 4
  store i32 %519, i32* %pred_vec, align 4
  %520 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %FMEnable893 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %520, i32 0, i32 134
  %521 = load i32, i32* %FMEnable893, align 4
  %tobool894 = icmp ne i32 %521, 0
  br i1 %tobool894, label %if.then.895, label %if.end.898

if.then.895:                                      ; preds = %sw.bb.892
  %522 = load i32, i32* %SAD_a, align 4
  %523 = load i32, i32* %hv, align 4
  %idxprom896 = sext i32 %523 to i64
  %arrayidx897 = getelementptr inbounds [2 x i32], [2 x i32]* %temp_pred_SAD, i32 0, i64 %idxprom896
  store i32 %522, i32* %arrayidx897, align 4
  br label %if.end.898

if.end.898:                                       ; preds = %if.then.895, %sw.bb.892
  br label %sw.epilog

sw.bb.899:                                        ; preds = %if.end.812
  %524 = load i32, i32* %mv_b, align 4
  store i32 %524, i32* %pred_vec, align 4
  %525 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %FMEnable900 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %525, i32 0, i32 134
  %526 = load i32, i32* %FMEnable900, align 4
  %tobool901 = icmp ne i32 %526, 0
  br i1 %tobool901, label %if.then.902, label %if.end.905

if.then.902:                                      ; preds = %sw.bb.899
  %527 = load i32, i32* %SAD_b, align 4
  %528 = load i32, i32* %hv, align 4
  %idxprom903 = sext i32 %528 to i64
  %arrayidx904 = getelementptr inbounds [2 x i32], [2 x i32]* %temp_pred_SAD, i32 0, i64 %idxprom903
  store i32 %527, i32* %arrayidx904, align 4
  br label %if.end.905

if.end.905:                                       ; preds = %if.then.902, %sw.bb.899
  br label %sw.epilog

sw.bb.906:                                        ; preds = %if.end.812
  %529 = load i32, i32* %mv_c, align 4
  store i32 %529, i32* %pred_vec, align 4
  %530 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %FMEnable907 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %530, i32 0, i32 134
  %531 = load i32, i32* %FMEnable907, align 4
  %tobool908 = icmp ne i32 %531, 0
  br i1 %tobool908, label %if.then.909, label %if.end.912

if.then.909:                                      ; preds = %sw.bb.906
  %532 = load i32, i32* %SAD_c, align 4
  %533 = load i32, i32* %hv, align 4
  %idxprom910 = sext i32 %533 to i64
  %arrayidx911 = getelementptr inbounds [2 x i32], [2 x i32]* %temp_pred_SAD, i32 0, i64 %idxprom910
  store i32 %532, i32* %arrayidx911, align 4
  br label %if.end.912

if.end.912:                                       ; preds = %if.then.909, %sw.bb.906
  br label %sw.epilog

sw.default:                                       ; preds = %if.end.812
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %if.end.912, %if.end.905, %if.end.898, %if.end.891
  %534 = load i32, i32* %pred_vec, align 4
  %conv913 = trunc i32 %534 to i16
  %535 = load i32, i32* %hv, align 4
  %idxprom914 = sext i32 %535 to i64
  %536 = load i16*, i16** %pmv.addr, align 8
  %arrayidx915 = getelementptr inbounds i16, i16* %536, i64 %idxprom914
  store i16 %conv913, i16* %arrayidx915, align 2
  br label %for.inc

for.inc:                                          ; preds = %sw.epilog
  %537 = load i32, i32* %hv, align 4
  %inc = add nsw i32 %537, 1
  store i32 %inc, i32* %hv, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %538 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %FMEnable916 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %538, i32 0, i32 134
  %539 = load i32, i32* %FMEnable916, align 4
  %tobool917 = icmp ne i32 %539, 0
  br i1 %tobool917, label %if.then.918, label %if.end.929

if.then.918:                                      ; preds = %for.end
  %arrayidx919 = getelementptr inbounds [2 x i32], [2 x i32]* %temp_pred_SAD, i32 0, i64 0
  %540 = load i32, i32* %arrayidx919, align 4
  %arrayidx920 = getelementptr inbounds [2 x i32], [2 x i32]* %temp_pred_SAD, i32 0, i64 1
  %541 = load i32, i32* %arrayidx920, align 4
  %cmp921 = icmp sgt i32 %540, %541
  br i1 %cmp921, label %cond.true.923, label %cond.false.925

cond.true.923:                                    ; preds = %if.then.918
  %arrayidx924 = getelementptr inbounds [2 x i32], [2 x i32]* %temp_pred_SAD, i32 0, i64 1
  %542 = load i32, i32* %arrayidx924, align 4
  br label %cond.end.927

cond.false.925:                                   ; preds = %if.then.918
  %arrayidx926 = getelementptr inbounds [2 x i32], [2 x i32]* %temp_pred_SAD, i32 0, i64 0
  %543 = load i32, i32* %arrayidx926, align 4
  br label %cond.end.927

cond.end.927:                                     ; preds = %cond.false.925, %cond.true.923
  %cond928 = phi i32 [ %542, %cond.true.923 ], [ %543, %cond.false.925 ]
  store i32 %cond928, i32* @pred_SAD_space, align 4
  br label %if.end.929

if.end.929:                                       ; preds = %cond.end.927, %for.end
  ret void
}

declare i16* @FastLine16Y_11(i16*, i32, i32, i32, i32) #2

declare i16* @UMVLine16Y_11(i16*, i32, i32, i32, i32) #2

declare void @getLuma4x4Neighbour(i32, i32, i32, i32, i32, %struct.pix_pos*) #2

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #3

; Function Attrs: nounwind uwtable
define void @Init_Motion_Search_Module() #0 {
entry:
  %bits = alloca i32, align 4
  %i = alloca i32, align 4
  %imin = alloca i32, align 4
  %imax = alloca i32, align 4
  %k = alloca i32, align 4
  %l = alloca i32, align 4
  %byte_abs_range = alloca i32, align 4
  %search_range = alloca i32, align 4
  %number_of_reference_frames = alloca i32, align 4
  %max_search_points = alloca i32, align 4
  %max_ref_bits = alloca i32, align 4
  %max_ref = alloca i32, align 4
  %number_of_subpel_positions = alloca i32, align 4
  %max_mv_bits = alloca i32, align 4
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i32 0, i32 155
  %1 = load i32, i32* %max_imgpel_value, align 4
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value_uv = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 156
  %3 = load i32, i32* %max_imgpel_value_uv, align 4
  %cmp = icmp sgt i32 %1, %3
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %4 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value1 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %4, i32 0, i32 155
  %5 = load i32, i32* %max_imgpel_value1, align 4
  %add = add nsw i32 %5, 1
  %mul = mul nsw i32 %add, 2
  br label %cond.end

cond.false:                                       ; preds = %entry
  %6 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value_uv2 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %6, i32 0, i32 156
  %7 = load i32, i32* %max_imgpel_value_uv2, align 4
  %add3 = add nsw i32 %7, 1
  %mul4 = mul nsw i32 %add3, 2
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %mul, %cond.true ], [ %mul4, %cond.false ]
  store i32 %cond, i32* %byte_abs_range, align 4
  %8 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %search_range5 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %8, i32 0, i32 8
  %9 = load i32, i32* %search_range5, align 4
  store i32 %9, i32* %search_range, align 4
  %10 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_num_references = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %10, i32 0, i32 9
  %11 = load i32, i32* %max_num_references, align 4
  store i32 %11, i32* %number_of_reference_frames, align 4
  %12 = load i32, i32* %search_range, align 4
  %mul6 = mul nsw i32 2, %12
  %add7 = add nsw i32 %mul6, 1
  %13 = load i32, i32* %search_range, align 4
  %mul8 = mul nsw i32 2, %13
  %add9 = add nsw i32 %mul8, 1
  %mul10 = mul nsw i32 %add7, %add9
  %cmp11 = icmp sgt i32 9, %mul10
  br i1 %cmp11, label %cond.true.12, label %cond.false.13

cond.true.12:                                     ; preds = %cond.end
  br label %cond.end.19

cond.false.13:                                    ; preds = %cond.end
  %14 = load i32, i32* %search_range, align 4
  %mul14 = mul nsw i32 2, %14
  %add15 = add nsw i32 %mul14, 1
  %15 = load i32, i32* %search_range, align 4
  %mul16 = mul nsw i32 2, %15
  %add17 = add nsw i32 %mul16, 1
  %mul18 = mul nsw i32 %add15, %add17
  br label %cond.end.19

cond.end.19:                                      ; preds = %cond.false.13, %cond.true.12
  %cond20 = phi i32 [ 9, %cond.true.12 ], [ %mul18, %cond.false.13 ]
  store i32 %cond20, i32* %max_search_points, align 4
  %16 = load i32, i32* %number_of_reference_frames, align 4
  %add21 = add nsw i32 %16, 1
  %cmp22 = icmp sgt i32 16, %add21
  br i1 %cmp22, label %cond.true.23, label %cond.false.24

cond.true.23:                                     ; preds = %cond.end.19
  br label %cond.end.26

cond.false.24:                                    ; preds = %cond.end.19
  %17 = load i32, i32* %number_of_reference_frames, align 4
  %add25 = add nsw i32 %17, 1
  br label %cond.end.26

cond.end.26:                                      ; preds = %cond.false.24, %cond.true.23
  %cond27 = phi i32 [ 16, %cond.true.23 ], [ %add25, %cond.false.24 ]
  %conv = sitofp i32 %cond27 to double
  %call = call double @log(double %conv) #3
  %call28 = call double @log(double 2.000000e+00) #3
  %div = fdiv double %call, %call28
  %add29 = fadd double %div, 1.000000e-10
  %call30 = call double @floor(double %add29) #5
  %conv31 = fptosi double %call30 to i32
  %mul32 = mul nsw i32 2, %conv31
  %add33 = add nsw i32 1, %mul32
  store i32 %add33, i32* %max_ref_bits, align 4
  %18 = load i32, i32* %max_ref_bits, align 4
  %shr = ashr i32 %18, 1
  %add34 = add nsw i32 %shr, 1
  %shl = shl i32 1, %add34
  %sub = sub nsw i32 %shl, 1
  store i32 %sub, i32* %max_ref, align 4
  %19 = load i32, i32* %search_range, align 4
  %mul35 = mul nsw i32 2, %19
  %add36 = add nsw i32 %mul35, 3
  %mul37 = mul nsw i32 4, %add36
  store i32 %mul37, i32* %number_of_subpel_positions, align 4
  %20 = load i32, i32* %number_of_subpel_positions, align 4
  %add38 = add nsw i32 %20, 1
  %conv39 = sitofp i32 %add38 to double
  %call40 = call double @log(double %conv39) #3
  %call41 = call double @log(double 2.000000e+00) #3
  %div42 = fdiv double %call40, %call41
  %add43 = fadd double %div42, 1.000000e-10
  %call44 = call double @ceil(double %add43) #5
  %conv45 = fptosi double %call44 to i32
  %mul46 = mul nsw i32 2, %conv45
  %add47 = add nsw i32 3, %mul46
  store i32 %add47, i32* %max_mv_bits, align 4
  %21 = load i32, i32* %max_mv_bits, align 4
  %shr48 = ashr i32 %21, 1
  %shl49 = shl i32 1, %shr48
  %sub50 = sub nsw i32 %shl49, 1
  store i32 %sub50, i32* @max_mvd, align 4
  %22 = load i32, i32* %max_search_points, align 4
  %conv51 = sext i32 %22 to i64
  %call52 = call noalias i8* @calloc(i64 %conv51, i64 4) #3
  %23 = bitcast i8* %call52 to i32*
  store i32* %23, i32** @spiral_search_x, align 8
  %cmp53 = icmp eq i32* %23, null
  br i1 %cmp53, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end.26
  call void @no_mem_exit(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.6, i32 0, i32 0))
  br label %if.end

if.end:                                           ; preds = %if.then, %cond.end.26
  %24 = load i32, i32* %max_search_points, align 4
  %conv55 = sext i32 %24 to i64
  %call56 = call noalias i8* @calloc(i64 %conv55, i64 4) #3
  %25 = bitcast i8* %call56 to i32*
  store i32* %25, i32** @spiral_search_y, align 8
  %cmp57 = icmp eq i32* %25, null
  br i1 %cmp57, label %if.then.59, label %if.end.60

if.then.59:                                       ; preds = %if.end
  call void @no_mem_exit(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.7, i32 0, i32 0))
  br label %if.end.60

if.end.60:                                        ; preds = %if.then.59, %if.end
  %26 = load i32, i32* @max_mvd, align 4
  %mul61 = mul nsw i32 2, %26
  %add62 = add nsw i32 %mul61, 1
  %conv63 = sext i32 %add62 to i64
  %call64 = call noalias i8* @calloc(i64 %conv63, i64 4) #3
  %27 = bitcast i8* %call64 to i32*
  store i32* %27, i32** @mvbits, align 8
  %cmp65 = icmp eq i32* %27, null
  br i1 %cmp65, label %if.then.67, label %if.end.68

if.then.67:                                       ; preds = %if.end.60
  call void @no_mem_exit(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.8, i32 0, i32 0))
  br label %if.end.68

if.end.68:                                        ; preds = %if.then.67, %if.end.60
  %28 = load i32, i32* %max_ref, align 4
  %conv69 = sext i32 %28 to i64
  %call70 = call noalias i8* @calloc(i64 %conv69, i64 4) #3
  %29 = bitcast i8* %call70 to i32*
  store i32* %29, i32** @refbits, align 8
  %cmp71 = icmp eq i32* %29, null
  br i1 %cmp71, label %if.then.73, label %if.end.74

if.then.73:                                       ; preds = %if.end.68
  call void @no_mem_exit(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.9, i32 0, i32 0))
  br label %if.end.74

if.end.74:                                        ; preds = %if.then.73, %if.end.68
  %30 = load i32, i32* %byte_abs_range, align 4
  %conv75 = sext i32 %30 to i64
  %call76 = call noalias i8* @calloc(i64 %conv75, i64 4) #3
  %31 = bitcast i8* %call76 to i32*
  store i32* %31, i32** @byte_abs, align 8
  %cmp77 = icmp eq i32* %31, null
  br i1 %cmp77, label %if.then.79, label %if.end.80

if.then.79:                                       ; preds = %if.end.74
  call void @no_mem_exit(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.10, i32 0, i32 0))
  br label %if.end.80

if.end.80:                                        ; preds = %if.then.79, %if.end.74
  %32 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_num_references81 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %32, i32 0, i32 9
  %33 = load i32, i32* %max_num_references81, align 4
  %add82 = add nsw i32 %33, 1
  %call83 = call i32 @get_mem4Dint(i32***** @motion_cost, i32 8, i32 2, i32 %add82, i32 4)
  %34 = load i32, i32* @max_mvd, align 4
  %35 = load i32*, i32** @mvbits, align 8
  %idx.ext = sext i32 %34 to i64
  %add.ptr = getelementptr inbounds i32, i32* %35, i64 %idx.ext
  store i32* %add.ptr, i32** @mvbits, align 8
  %36 = load i32, i32* %byte_abs_range, align 4
  %div84 = sdiv i32 %36, 2
  %37 = load i32*, i32** @byte_abs, align 8
  %idx.ext85 = sext i32 %div84 to i64
  %add.ptr86 = getelementptr inbounds i32, i32* %37, i64 %idx.ext85
  store i32* %add.ptr86, i32** @byte_abs, align 8
  %38 = load i32*, i32** @mvbits, align 8
  %arrayidx = getelementptr inbounds i32, i32* %38, i64 0
  store i32 1, i32* %arrayidx, align 4
  store i32 3, i32* %bits, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc.100, %if.end.80
  %39 = load i32, i32* %bits, align 4
  %40 = load i32, i32* %max_mv_bits, align 4
  %cmp87 = icmp sle i32 %39, %40
  br i1 %cmp87, label %for.body, label %for.end.102

for.body:                                         ; preds = %for.cond
  %41 = load i32, i32* %bits, align 4
  %shr89 = ashr i32 %41, 1
  %shl90 = shl i32 1, %shr89
  store i32 %shl90, i32* %imax, align 4
  %42 = load i32, i32* %imax, align 4
  %shr91 = ashr i32 %42, 1
  store i32 %shr91, i32* %imin, align 4
  %43 = load i32, i32* %imin, align 4
  store i32 %43, i32* %i, align 4
  br label %for.cond.92

for.cond.92:                                      ; preds = %for.inc, %for.body
  %44 = load i32, i32* %i, align 4
  %45 = load i32, i32* %imax, align 4
  %cmp93 = icmp slt i32 %44, %45
  br i1 %cmp93, label %for.body.95, label %for.end

for.body.95:                                      ; preds = %for.cond.92
  %46 = load i32, i32* %bits, align 4
  %47 = load i32, i32* %i, align 4
  %idxprom = sext i32 %47 to i64
  %48 = load i32*, i32** @mvbits, align 8
  %arrayidx96 = getelementptr inbounds i32, i32* %48, i64 %idxprom
  store i32 %46, i32* %arrayidx96, align 4
  %49 = load i32, i32* %i, align 4
  %sub97 = sub nsw i32 0, %49
  %idxprom98 = sext i32 %sub97 to i64
  %50 = load i32*, i32** @mvbits, align 8
  %arrayidx99 = getelementptr inbounds i32, i32* %50, i64 %idxprom98
  store i32 %46, i32* %arrayidx99, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body.95
  %51 = load i32, i32* %i, align 4
  %inc = add nsw i32 %51, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond.92

for.end:                                          ; preds = %for.cond.92
  br label %for.inc.100

for.inc.100:                                      ; preds = %for.end
  %52 = load i32, i32* %bits, align 4
  %add101 = add nsw i32 %52, 2
  store i32 %add101, i32* %bits, align 4
  br label %for.cond

for.end.102:                                      ; preds = %for.cond
  %53 = load i32*, i32** @refbits, align 8
  %arrayidx103 = getelementptr inbounds i32, i32* %53, i64 0
  store i32 1, i32* %arrayidx103, align 4
  store i32 3, i32* %bits, align 4
  br label %for.cond.104

for.cond.104:                                     ; preds = %for.inc.122, %for.end.102
  %54 = load i32, i32* %bits, align 4
  %55 = load i32, i32* %max_ref_bits, align 4
  %cmp105 = icmp sle i32 %54, %55
  br i1 %cmp105, label %for.body.107, label %for.end.124

for.body.107:                                     ; preds = %for.cond.104
  %56 = load i32, i32* %bits, align 4
  %shr108 = ashr i32 %56, 1
  %add109 = add nsw i32 %shr108, 1
  %shl110 = shl i32 1, %add109
  %sub111 = sub nsw i32 %shl110, 1
  store i32 %sub111, i32* %imax, align 4
  %57 = load i32, i32* %imax, align 4
  %shr112 = ashr i32 %57, 1
  store i32 %shr112, i32* %imin, align 4
  %58 = load i32, i32* %imin, align 4
  store i32 %58, i32* %i, align 4
  br label %for.cond.113

for.cond.113:                                     ; preds = %for.inc.119, %for.body.107
  %59 = load i32, i32* %i, align 4
  %60 = load i32, i32* %imax, align 4
  %cmp114 = icmp slt i32 %59, %60
  br i1 %cmp114, label %for.body.116, label %for.end.121

for.body.116:                                     ; preds = %for.cond.113
  %61 = load i32, i32* %bits, align 4
  %62 = load i32, i32* %i, align 4
  %idxprom117 = sext i32 %62 to i64
  %63 = load i32*, i32** @refbits, align 8
  %arrayidx118 = getelementptr inbounds i32, i32* %63, i64 %idxprom117
  store i32 %61, i32* %arrayidx118, align 4
  br label %for.inc.119

for.inc.119:                                      ; preds = %for.body.116
  %64 = load i32, i32* %i, align 4
  %inc120 = add nsw i32 %64, 1
  store i32 %inc120, i32* %i, align 4
  br label %for.cond.113

for.end.121:                                      ; preds = %for.cond.113
  br label %for.inc.122

for.inc.122:                                      ; preds = %for.end.121
  %65 = load i32, i32* %bits, align 4
  %add123 = add nsw i32 %65, 2
  store i32 %add123, i32* %bits, align 4
  br label %for.cond.104

for.end.124:                                      ; preds = %for.cond.104
  %66 = load i32*, i32** @byte_abs, align 8
  %arrayidx125 = getelementptr inbounds i32, i32* %66, i64 0
  store i32 0, i32* %arrayidx125, align 4
  store i32 1, i32* %i, align 4
  br label %for.cond.126

for.cond.126:                                     ; preds = %for.inc.136, %for.end.124
  %67 = load i32, i32* %i, align 4
  %68 = load i32, i32* %byte_abs_range, align 4
  %div127 = sdiv i32 %68, 2
  %cmp128 = icmp slt i32 %67, %div127
  br i1 %cmp128, label %for.body.130, label %for.end.138

for.body.130:                                     ; preds = %for.cond.126
  %69 = load i32, i32* %i, align 4
  %70 = load i32, i32* %i, align 4
  %sub131 = sub nsw i32 0, %70
  %idxprom132 = sext i32 %sub131 to i64
  %71 = load i32*, i32** @byte_abs, align 8
  %arrayidx133 = getelementptr inbounds i32, i32* %71, i64 %idxprom132
  store i32 %69, i32* %arrayidx133, align 4
  %72 = load i32, i32* %i, align 4
  %idxprom134 = sext i32 %72 to i64
  %73 = load i32*, i32** @byte_abs, align 8
  %arrayidx135 = getelementptr inbounds i32, i32* %73, i64 %idxprom134
  store i32 %69, i32* %arrayidx135, align 4
  br label %for.inc.136

for.inc.136:                                      ; preds = %for.body.130
  %74 = load i32, i32* %i, align 4
  %inc137 = add nsw i32 %74, 1
  store i32 %inc137, i32* %i, align 4
  br label %for.cond.126

for.end.138:                                      ; preds = %for.cond.126
  %75 = load i32*, i32** @spiral_search_y, align 8
  %arrayidx139 = getelementptr inbounds i32, i32* %75, i64 0
  store i32 0, i32* %arrayidx139, align 4
  %76 = load i32*, i32** @spiral_search_x, align 8
  %arrayidx140 = getelementptr inbounds i32, i32* %76, i64 0
  store i32 0, i32* %arrayidx140, align 4
  store i32 1, i32* %k, align 4
  store i32 1, i32* %l, align 4
  br label %for.cond.141

for.cond.141:                                     ; preds = %for.inc.190, %for.end.138
  %77 = load i32, i32* %l, align 4
  %78 = load i32, i32* %search_range, align 4
  %cmp142 = icmp sgt i32 1, %78
  br i1 %cmp142, label %cond.true.144, label %cond.false.145

cond.true.144:                                    ; preds = %for.cond.141
  br label %cond.end.146

cond.false.145:                                   ; preds = %for.cond.141
  %79 = load i32, i32* %search_range, align 4
  br label %cond.end.146

cond.end.146:                                     ; preds = %cond.false.145, %cond.true.144
  %cond147 = phi i32 [ 1, %cond.true.144 ], [ %79, %cond.false.145 ]
  %cmp148 = icmp sle i32 %77, %cond147
  br i1 %cmp148, label %for.body.150, label %for.end.192

for.body.150:                                     ; preds = %cond.end.146
  %80 = load i32, i32* %l, align 4
  %sub151 = sub nsw i32 0, %80
  %add152 = add nsw i32 %sub151, 1
  store i32 %add152, i32* %i, align 4
  br label %for.cond.153

for.cond.153:                                     ; preds = %for.inc.168, %for.body.150
  %81 = load i32, i32* %i, align 4
  %82 = load i32, i32* %l, align 4
  %cmp154 = icmp slt i32 %81, %82
  br i1 %cmp154, label %for.body.156, label %for.end.170

for.body.156:                                     ; preds = %for.cond.153
  %83 = load i32, i32* %i, align 4
  %84 = load i32, i32* %k, align 4
  %idxprom157 = sext i32 %84 to i64
  %85 = load i32*, i32** @spiral_search_x, align 8
  %arrayidx158 = getelementptr inbounds i32, i32* %85, i64 %idxprom157
  store i32 %83, i32* %arrayidx158, align 4
  %86 = load i32, i32* %l, align 4
  %sub159 = sub nsw i32 0, %86
  %87 = load i32, i32* %k, align 4
  %inc160 = add nsw i32 %87, 1
  store i32 %inc160, i32* %k, align 4
  %idxprom161 = sext i32 %87 to i64
  %88 = load i32*, i32** @spiral_search_y, align 8
  %arrayidx162 = getelementptr inbounds i32, i32* %88, i64 %idxprom161
  store i32 %sub159, i32* %arrayidx162, align 4
  %89 = load i32, i32* %i, align 4
  %90 = load i32, i32* %k, align 4
  %idxprom163 = sext i32 %90 to i64
  %91 = load i32*, i32** @spiral_search_x, align 8
  %arrayidx164 = getelementptr inbounds i32, i32* %91, i64 %idxprom163
  store i32 %89, i32* %arrayidx164, align 4
  %92 = load i32, i32* %l, align 4
  %93 = load i32, i32* %k, align 4
  %inc165 = add nsw i32 %93, 1
  store i32 %inc165, i32* %k, align 4
  %idxprom166 = sext i32 %93 to i64
  %94 = load i32*, i32** @spiral_search_y, align 8
  %arrayidx167 = getelementptr inbounds i32, i32* %94, i64 %idxprom166
  store i32 %92, i32* %arrayidx167, align 4
  br label %for.inc.168

for.inc.168:                                      ; preds = %for.body.156
  %95 = load i32, i32* %i, align 4
  %inc169 = add nsw i32 %95, 1
  store i32 %inc169, i32* %i, align 4
  br label %for.cond.153

for.end.170:                                      ; preds = %for.cond.153
  %96 = load i32, i32* %l, align 4
  %sub171 = sub nsw i32 0, %96
  store i32 %sub171, i32* %i, align 4
  br label %for.cond.172

for.cond.172:                                     ; preds = %for.inc.187, %for.end.170
  %97 = load i32, i32* %i, align 4
  %98 = load i32, i32* %l, align 4
  %cmp173 = icmp sle i32 %97, %98
  br i1 %cmp173, label %for.body.175, label %for.end.189

for.body.175:                                     ; preds = %for.cond.172
  %99 = load i32, i32* %l, align 4
  %sub176 = sub nsw i32 0, %99
  %100 = load i32, i32* %k, align 4
  %idxprom177 = sext i32 %100 to i64
  %101 = load i32*, i32** @spiral_search_x, align 8
  %arrayidx178 = getelementptr inbounds i32, i32* %101, i64 %idxprom177
  store i32 %sub176, i32* %arrayidx178, align 4
  %102 = load i32, i32* %i, align 4
  %103 = load i32, i32* %k, align 4
  %inc179 = add nsw i32 %103, 1
  store i32 %inc179, i32* %k, align 4
  %idxprom180 = sext i32 %103 to i64
  %104 = load i32*, i32** @spiral_search_y, align 8
  %arrayidx181 = getelementptr inbounds i32, i32* %104, i64 %idxprom180
  store i32 %102, i32* %arrayidx181, align 4
  %105 = load i32, i32* %l, align 4
  %106 = load i32, i32* %k, align 4
  %idxprom182 = sext i32 %106 to i64
  %107 = load i32*, i32** @spiral_search_x, align 8
  %arrayidx183 = getelementptr inbounds i32, i32* %107, i64 %idxprom182
  store i32 %105, i32* %arrayidx183, align 4
  %108 = load i32, i32* %i, align 4
  %109 = load i32, i32* %k, align 4
  %inc184 = add nsw i32 %109, 1
  store i32 %inc184, i32* %k, align 4
  %idxprom185 = sext i32 %109 to i64
  %110 = load i32*, i32** @spiral_search_y, align 8
  %arrayidx186 = getelementptr inbounds i32, i32* %110, i64 %idxprom185
  store i32 %108, i32* %arrayidx186, align 4
  br label %for.inc.187

for.inc.187:                                      ; preds = %for.body.175
  %111 = load i32, i32* %i, align 4
  %inc188 = add nsw i32 %111, 1
  store i32 %inc188, i32* %i, align 4
  br label %for.cond.172

for.end.189:                                      ; preds = %for.cond.172
  br label %for.inc.190

for.inc.190:                                      ; preds = %for.end.189
  %112 = load i32, i32* %l, align 4
  %inc191 = add nsw i32 %112, 1
  store i32 %inc191, i32* %l, align 4
  br label %for.cond.141

for.end.192:                                      ; preds = %cond.end.146
  %113 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %FMEnable = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %113, i32 0, i32 134
  %114 = load i32, i32* %FMEnable, align 4
  %tobool = icmp ne i32 %114, 0
  br i1 %tobool, label %if.end.194, label %if.then.193

if.then.193:                                      ; preds = %for.end.192
  call void @InitializeFastFullIntegerSearch()
  br label %if.end.194

if.end.194:                                       ; preds = %if.then.193, %for.end.192
  ret void
}

; Function Attrs: nounwind readnone
declare double @floor(double) #4

; Function Attrs: nounwind
declare double @log(double) #1

; Function Attrs: nounwind readnone
declare double @ceil(double) #4

; Function Attrs: nounwind
declare noalias i8* @calloc(i64, i64) #1

declare i32 @get_mem4Dint(i32*****, i32, i32, i32, i32) #2

; Function Attrs: nounwind uwtable
define void @Clear_Motion_Search_Module() #0 {
entry:
  %0 = load i32, i32* @max_mvd, align 4
  %1 = load i32*, i32** @mvbits, align 8
  %idx.ext = sext i32 %0 to i64
  %idx.neg = sub i64 0, %idx.ext
  %add.ptr = getelementptr inbounds i32, i32* %1, i64 %idx.neg
  store i32* %add.ptr, i32** @mvbits, align 8
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 155
  %3 = load i32, i32* %max_imgpel_value, align 4
  %4 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value_uv = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %4, i32 0, i32 156
  %5 = load i32, i32* %max_imgpel_value_uv, align 4
  %cmp = icmp sgt i32 %3, %5
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %6 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value1 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %6, i32 0, i32 155
  %7 = load i32, i32* %max_imgpel_value1, align 4
  %add = add nsw i32 %7, 1
  br label %cond.end

cond.false:                                       ; preds = %entry
  %8 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value_uv2 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %8, i32 0, i32 156
  %9 = load i32, i32* %max_imgpel_value_uv2, align 4
  %add3 = add nsw i32 %9, 1
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add, %cond.true ], [ %add3, %cond.false ]
  %10 = load i32*, i32** @byte_abs, align 8
  %idx.ext4 = sext i32 %cond to i64
  %idx.neg5 = sub i64 0, %idx.ext4
  %add.ptr6 = getelementptr inbounds i32, i32* %10, i64 %idx.neg5
  store i32* %add.ptr6, i32** @byte_abs, align 8
  %11 = load i32*, i32** @spiral_search_x, align 8
  %12 = bitcast i32* %11 to i8*
  call void @free(i8* %12) #3
  %13 = load i32*, i32** @spiral_search_y, align 8
  %14 = bitcast i32* %13 to i8*
  call void @free(i8* %14) #3
  %15 = load i32*, i32** @mvbits, align 8
  %16 = bitcast i32* %15 to i8*
  call void @free(i8* %16) #3
  %17 = load i32*, i32** @refbits, align 8
  %18 = bitcast i32* %17 to i8*
  call void @free(i8* %18) #3
  %19 = load i32*, i32** @byte_abs, align 8
  %20 = bitcast i32* %19 to i8*
  call void @free(i8* %20) #3
  %21 = load i32****, i32***** @motion_cost, align 8
  call void @free_mem4Dint(i32**** %21, i32 8, i32 2)
  %22 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %FMEnable = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %22, i32 0, i32 134
  %23 = load i32, i32* %FMEnable, align 4
  %tobool = icmp ne i32 %23, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %cond.end
  call void @ClearFastFullIntegerSearch()
  br label %if.end

if.end:                                           ; preds = %if.then, %cond.end
  ret void
}

declare void @free_mem4Dint(i32****, i32, i32) #2

; Function Attrs: nounwind uwtable
define i32 @FullPelBlockMotionSearch(i16** %orig_pic, i16 signext %ref, i32 %list, i32 %pic_pix_x, i32 %pic_pix_y, i32 %blocktype, i16 signext %pred_mv_x, i16 signext %pred_mv_y, i16* %mv_x, i16* %mv_y, i32 %search_range, i32 %min_mcost, double %lambda) #0 {
entry:
  %orig_pic.addr = alloca i16**, align 8
  %ref.addr = alloca i16, align 2
  %list.addr = alloca i32, align 4
  %pic_pix_x.addr = alloca i32, align 4
  %pic_pix_y.addr = alloca i32, align 4
  %blocktype.addr = alloca i32, align 4
  %pred_mv_x.addr = alloca i16, align 2
  %pred_mv_y.addr = alloca i16, align 2
  %mv_x.addr = alloca i16*, align 8
  %mv_y.addr = alloca i16*, align 8
  %search_range.addr = alloca i32, align 4
  %min_mcost.addr = alloca i32, align 4
  %lambda.addr = alloca double, align 8
  %pos = alloca i32, align 4
  %cand_x = alloca i32, align 4
  %cand_y = alloca i32, align 4
  %y = alloca i32, align 4
  %x4 = alloca i32, align 4
  %mcost = alloca i32, align 4
  %orig_line = alloca i16*, align 8
  %ref_line = alloca i16*, align 8
  %get_ref_line = alloca i16* (i32, i16*, i32, i32, i32, i32)*, align 8
  %list_offset = alloca i32, align 4
  %ref_pic = alloca i16*, align 8
  %img_width = alloca i32, align 4
  %img_height = alloca i32, align 4
  %best_pos = alloca i32, align 4
  %max_pos = alloca i32, align 4
  %lambda_factor = alloca i32, align 4
  %blocksize_y = alloca i32, align 4
  %blocksize_x = alloca i32, align 4
  %blocksize_x4 = alloca i32, align 4
  %pred_x = alloca i32, align 4
  %pred_y = alloca i32, align 4
  %center_x = alloca i32, align 4
  %center_y = alloca i32, align 4
  %check_for_00 = alloca i32, align 4
  %apply_weights = alloca i32, align 4
  store i16** %orig_pic, i16*** %orig_pic.addr, align 8
  store i16 %ref, i16* %ref.addr, align 2
  store i32 %list, i32* %list.addr, align 4
  store i32 %pic_pix_x, i32* %pic_pix_x.addr, align 4
  store i32 %pic_pix_y, i32* %pic_pix_y.addr, align 4
  store i32 %blocktype, i32* %blocktype.addr, align 4
  store i16 %pred_mv_x, i16* %pred_mv_x.addr, align 2
  store i16 %pred_mv_y, i16* %pred_mv_y.addr, align 2
  store i16* %mv_x, i16** %mv_x.addr, align 8
  store i16* %mv_y, i16** %mv_y.addr, align 8
  store i32 %search_range, i32* %search_range.addr, align 4
  store i32 %min_mcost, i32* %min_mcost.addr, align 4
  store double %lambda, double* %lambda.addr, align 8
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %MbaffFrameFlag = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i32 0, i32 90
  %1 = load i32, i32* %MbaffFrameFlag, align 4
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %land.lhs.true, label %cond.false

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 3
  %3 = load i32, i32* %current_mb_nr, align 4
  %idxprom = sext i32 %3 to i64
  %4 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %4, i32 0, i32 51
  %5 = load %struct.macroblock*, %struct.macroblock** %mb_data, align 8
  %arrayidx = getelementptr inbounds %struct.macroblock, %struct.macroblock* %5, i64 %idxprom
  %mb_field = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx, i32 0, i32 22
  %6 = load i32, i32* %mb_field, align 4
  %tobool1 = icmp ne i32 %6, 0
  br i1 %tobool1, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true
  %7 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr2 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %7, i32 0, i32 3
  %8 = load i32, i32* %current_mb_nr2, align 4
  %rem = srem i32 %8, 2
  %tobool3 = icmp ne i32 %rem, 0
  %cond = select i1 %tobool3, i32 4, i32 2
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true, %entry
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond4 = phi i32 [ %cond, %cond.true ], [ 0, %cond.false ]
  store i32 %cond4, i32* %list_offset, align 4
  %9 = load i16, i16* %ref.addr, align 2
  %idxprom5 = sext i16 %9 to i64
  %10 = load i32, i32* %list.addr, align 4
  %11 = load i32, i32* %list_offset, align 4
  %add = add nsw i32 %10, %11
  %idxprom6 = sext i32 %add to i64
  %arrayidx7 = getelementptr inbounds [6 x %struct.storable_picture**], [6 x %struct.storable_picture**]* @listX, i32 0, i64 %idxprom6
  %12 = load %struct.storable_picture**, %struct.storable_picture*** %arrayidx7, align 8
  %arrayidx8 = getelementptr inbounds %struct.storable_picture*, %struct.storable_picture** %12, i64 %idxprom5
  %13 = load %struct.storable_picture*, %struct.storable_picture** %arrayidx8, align 8
  %imgY_11 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %13, i32 0, i32 26
  %14 = load i16*, i16** %imgY_11, align 8
  store i16* %14, i16** %ref_pic, align 8
  %15 = load i16, i16* %ref.addr, align 2
  %idxprom9 = sext i16 %15 to i64
  %16 = load i32, i32* %list.addr, align 4
  %17 = load i32, i32* %list_offset, align 4
  %add10 = add nsw i32 %16, %17
  %idxprom11 = sext i32 %add10 to i64
  %arrayidx12 = getelementptr inbounds [6 x %struct.storable_picture**], [6 x %struct.storable_picture**]* @listX, i32 0, i64 %idxprom11
  %18 = load %struct.storable_picture**, %struct.storable_picture*** %arrayidx12, align 8
  %arrayidx13 = getelementptr inbounds %struct.storable_picture*, %struct.storable_picture** %18, i64 %idxprom9
  %19 = load %struct.storable_picture*, %struct.storable_picture** %arrayidx13, align 8
  %size_x = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %19, i32 0, i32 18
  %20 = load i32, i32* %size_x, align 4
  store i32 %20, i32* %img_width, align 4
  %21 = load i16, i16* %ref.addr, align 2
  %idxprom14 = sext i16 %21 to i64
  %22 = load i32, i32* %list.addr, align 4
  %23 = load i32, i32* %list_offset, align 4
  %add15 = add nsw i32 %22, %23
  %idxprom16 = sext i32 %add15 to i64
  %arrayidx17 = getelementptr inbounds [6 x %struct.storable_picture**], [6 x %struct.storable_picture**]* @listX, i32 0, i64 %idxprom16
  %24 = load %struct.storable_picture**, %struct.storable_picture*** %arrayidx17, align 8
  %arrayidx18 = getelementptr inbounds %struct.storable_picture*, %struct.storable_picture** %24, i64 %idxprom14
  %25 = load %struct.storable_picture*, %struct.storable_picture** %arrayidx18, align 8
  %size_y = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %25, i32 0, i32 19
  %26 = load i32, i32* %size_y, align 4
  store i32 %26, i32* %img_height, align 4
  store i32 0, i32* %best_pos, align 4
  %27 = load i32, i32* %search_range.addr, align 4
  %mul = mul nsw i32 2, %27
  %add19 = add nsw i32 %mul, 1
  %28 = load i32, i32* %search_range.addr, align 4
  %mul20 = mul nsw i32 2, %28
  %add21 = add nsw i32 %mul20, 1
  %mul22 = mul nsw i32 %add19, %add21
  store i32 %mul22, i32* %max_pos, align 4
  %29 = load double, double* %lambda.addr, align 8
  %mul23 = fmul double 6.553600e+04, %29
  %add24 = fadd double %mul23, 5.000000e-01
  %conv = fptosi double %add24 to i32
  store i32 %conv, i32* %lambda_factor, align 4
  %30 = load i32, i32* %blocktype.addr, align 4
  %idxprom25 = sext i32 %30 to i64
  %31 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %blc_size = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %31, i32 0, i32 20
  %arrayidx26 = getelementptr inbounds [8 x [2 x i32]], [8 x [2 x i32]]* %blc_size, i32 0, i64 %idxprom25
  %arrayidx27 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx26, i32 0, i64 1
  %32 = load i32, i32* %arrayidx27, align 4
  store i32 %32, i32* %blocksize_y, align 4
  %33 = load i32, i32* %blocktype.addr, align 4
  %idxprom28 = sext i32 %33 to i64
  %34 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %blc_size29 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %34, i32 0, i32 20
  %arrayidx30 = getelementptr inbounds [8 x [2 x i32]], [8 x [2 x i32]]* %blc_size29, i32 0, i64 %idxprom28
  %arrayidx31 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx30, i32 0, i64 0
  %35 = load i32, i32* %arrayidx31, align 4
  store i32 %35, i32* %blocksize_x, align 4
  %36 = load i32, i32* %blocksize_x, align 4
  %shr = ashr i32 %36, 2
  store i32 %shr, i32* %blocksize_x4, align 4
  %37 = load i32, i32* %pic_pix_x.addr, align 4
  %shl = shl i32 %37, 2
  %38 = load i16, i16* %pred_mv_x.addr, align 2
  %conv32 = sext i16 %38 to i32
  %add33 = add nsw i32 %shl, %conv32
  store i32 %add33, i32* %pred_x, align 4
  %39 = load i32, i32* %pic_pix_y.addr, align 4
  %shl34 = shl i32 %39, 2
  %40 = load i16, i16* %pred_mv_y.addr, align 2
  %conv35 = sext i16 %40 to i32
  %add36 = add nsw i32 %shl34, %conv35
  store i32 %add36, i32* %pred_y, align 4
  %41 = load i32, i32* %pic_pix_x.addr, align 4
  %42 = load i16*, i16** %mv_x.addr, align 8
  %43 = load i16, i16* %42, align 2
  %conv37 = sext i16 %43 to i32
  %add38 = add nsw i32 %41, %conv37
  store i32 %add38, i32* %center_x, align 4
  %44 = load i32, i32* %pic_pix_y.addr, align 4
  %45 = load i16*, i16** %mv_y.addr, align 8
  %46 = load i16, i16* %45, align 2
  %conv39 = sext i16 %46 to i32
  %add40 = add nsw i32 %44, %conv39
  store i32 %add40, i32* %center_y, align 4
  %47 = load i32, i32* %blocktype.addr, align 4
  %cmp = icmp eq i32 %47, 1
  br i1 %cmp, label %land.lhs.true.42, label %land.end

land.lhs.true.42:                                 ; preds = %cond.end
  %48 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %rdopt = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %48, i32 0, i32 85
  %49 = load i32, i32* %rdopt, align 4
  %tobool43 = icmp ne i32 %49, 0
  br i1 %tobool43, label %land.end, label %land.lhs.true.44

land.lhs.true.44:                                 ; preds = %land.lhs.true.42
  %50 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %50, i32 0, i32 6
  %51 = load i32, i32* %type, align 4
  %cmp45 = icmp ne i32 %51, 1
  br i1 %cmp45, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %land.lhs.true.44
  %52 = load i16, i16* %ref.addr, align 2
  %conv47 = sext i16 %52 to i32
  %cmp48 = icmp eq i32 %conv47, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true.44, %land.lhs.true.42, %cond.end
  %53 = phi i1 [ false, %land.lhs.true.44 ], [ false, %land.lhs.true.42 ], [ false, %cond.end ], [ %cmp48, %land.rhs ]
  %land.ext = zext i1 %53 to i32
  store i32 %land.ext, i32* %check_for_00, align 4
  %54 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %weighted_pred_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %54, i32 0, i32 19
  %55 = load i32, i32* %weighted_pred_flag, align 4
  %tobool50 = icmp ne i32 %55, 0
  br i1 %tobool50, label %land.lhs.true.51, label %lor.rhs

land.lhs.true.51:                                 ; preds = %land.end
  %56 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type52 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %56, i32 0, i32 6
  %57 = load i32, i32* %type52, align 4
  %cmp53 = icmp eq i32 %57, 0
  br i1 %cmp53, label %lor.end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true.51
  %58 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type55 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %58, i32 0, i32 6
  %59 = load i32, i32* %type55, align 4
  %cmp56 = icmp eq i32 %59, 3
  br i1 %cmp56, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %lor.lhs.false, %land.end
  %60 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %weighted_bipred_idc = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %60, i32 0, i32 20
  %61 = load i32, i32* %weighted_bipred_idc, align 4
  %tobool58 = icmp ne i32 %61, 0
  br i1 %tobool58, label %land.rhs.59, label %land.end.63

land.rhs.59:                                      ; preds = %lor.rhs
  %62 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type60 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %62, i32 0, i32 6
  %63 = load i32, i32* %type60, align 4
  %cmp61 = icmp eq i32 %63, 1
  br label %land.end.63

land.end.63:                                      ; preds = %land.rhs.59, %lor.rhs
  %64 = phi i1 [ false, %lor.rhs ], [ %cmp61, %land.rhs.59 ]
  br label %lor.end

lor.end:                                          ; preds = %land.end.63, %lor.lhs.false, %land.lhs.true.51
  %65 = phi i1 [ true, %lor.lhs.false ], [ true, %land.lhs.true.51 ], [ %64, %land.end.63 ]
  %lor.ext = zext i1 %65 to i32
  store i32 %lor.ext, i32* %apply_weights, align 4
  %66 = load i32, i32* %apply_weights, align 4
  %tobool65 = icmp ne i32 %66, 0
  br i1 %tobool65, label %land.lhs.true.66, label %if.else

land.lhs.true.66:                                 ; preds = %lor.end
  %67 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %UseWeightedReferenceME = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %67, i32 0, i32 48
  %68 = load i32, i32* %UseWeightedReferenceME, align 4
  %tobool67 = icmp ne i32 %68, 0
  br i1 %tobool67, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true.66
  %69 = load i16, i16* %ref.addr, align 2
  %idxprom68 = sext i16 %69 to i64
  %70 = load i32, i32* %list.addr, align 4
  %71 = load i32, i32* %list_offset, align 4
  %add69 = add nsw i32 %70, %71
  %idxprom70 = sext i32 %add69 to i64
  %arrayidx71 = getelementptr inbounds [6 x %struct.storable_picture**], [6 x %struct.storable_picture**]* @listX, i32 0, i64 %idxprom70
  %72 = load %struct.storable_picture**, %struct.storable_picture*** %arrayidx71, align 8
  %arrayidx72 = getelementptr inbounds %struct.storable_picture*, %struct.storable_picture** %72, i64 %idxprom68
  %73 = load %struct.storable_picture*, %struct.storable_picture** %arrayidx72, align 8
  %imgY_11_w = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %73, i32 0, i32 27
  %74 = load i16*, i16** %imgY_11_w, align 8
  store i16* %74, i16** %ref_pic, align 8
  br label %if.end

if.else:                                          ; preds = %land.lhs.true.66, %lor.end
  %75 = load i16, i16* %ref.addr, align 2
  %idxprom73 = sext i16 %75 to i64
  %76 = load i32, i32* %list.addr, align 4
  %77 = load i32, i32* %list_offset, align 4
  %add74 = add nsw i32 %76, %77
  %idxprom75 = sext i32 %add74 to i64
  %arrayidx76 = getelementptr inbounds [6 x %struct.storable_picture**], [6 x %struct.storable_picture**]* @listX, i32 0, i64 %idxprom75
  %78 = load %struct.storable_picture**, %struct.storable_picture*** %arrayidx76, align 8
  %arrayidx77 = getelementptr inbounds %struct.storable_picture*, %struct.storable_picture** %78, i64 %idxprom73
  %79 = load %struct.storable_picture*, %struct.storable_picture** %arrayidx77, align 8
  %imgY_1178 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %79, i32 0, i32 26
  %80 = load i16*, i16** %imgY_1178, align 8
  store i16* %80, i16** %ref_pic, align 8
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %81 = load i32, i32* %center_x, align 4
  %82 = load i32, i32* %search_range.addr, align 4
  %cmp79 = icmp sgt i32 %81, %82
  br i1 %cmp79, label %land.lhs.true.81, label %if.else.96

land.lhs.true.81:                                 ; preds = %if.end
  %83 = load i32, i32* %center_x, align 4
  %84 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %width = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %84, i32 0, i32 13
  %85 = load i32, i32* %width, align 4
  %sub = sub nsw i32 %85, 1
  %86 = load i32, i32* %search_range.addr, align 4
  %sub82 = sub nsw i32 %sub, %86
  %87 = load i32, i32* %blocksize_x, align 4
  %sub83 = sub nsw i32 %sub82, %87
  %cmp84 = icmp slt i32 %83, %sub83
  br i1 %cmp84, label %land.lhs.true.86, label %if.else.96

land.lhs.true.86:                                 ; preds = %land.lhs.true.81
  %88 = load i32, i32* %center_y, align 4
  %89 = load i32, i32* %search_range.addr, align 4
  %cmp87 = icmp sgt i32 %88, %89
  br i1 %cmp87, label %land.lhs.true.89, label %if.else.96

land.lhs.true.89:                                 ; preds = %land.lhs.true.86
  %90 = load i32, i32* %center_y, align 4
  %91 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %height = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %91, i32 0, i32 15
  %92 = load i32, i32* %height, align 4
  %sub90 = sub nsw i32 %92, 1
  %93 = load i32, i32* %search_range.addr, align 4
  %sub91 = sub nsw i32 %sub90, %93
  %94 = load i32, i32* %blocksize_y, align 4
  %sub92 = sub nsw i32 %sub91, %94
  %cmp93 = icmp slt i32 %90, %sub92
  br i1 %cmp93, label %if.then.95, label %if.else.96

if.then.95:                                       ; preds = %land.lhs.true.89
  store i16* (i32, i16*, i32, i32, i32, i32)* @FastLineX, i16* (i32, i16*, i32, i32, i32, i32)** %get_ref_line, align 8
  br label %if.end.97

if.else.96:                                       ; preds = %land.lhs.true.89, %land.lhs.true.86, %land.lhs.true.81, %if.end
  store i16* (i32, i16*, i32, i32, i32, i32)* @UMVLineX, i16* (i32, i16*, i32, i32, i32, i32)** %get_ref_line, align 8
  br label %if.end.97

if.end.97:                                        ; preds = %if.else.96, %if.then.95
  store i32 0, i32* %pos, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc.186, %if.end.97
  %95 = load i32, i32* %pos, align 4
  %96 = load i32, i32* %max_pos, align 4
  %cmp98 = icmp slt i32 %95, %96
  br i1 %cmp98, label %for.body, label %for.end.188

for.body:                                         ; preds = %for.cond
  %97 = load i32, i32* %center_x, align 4
  %98 = load i32, i32* %pos, align 4
  %idxprom100 = sext i32 %98 to i64
  %99 = load i32*, i32** @spiral_search_x, align 8
  %arrayidx101 = getelementptr inbounds i32, i32* %99, i64 %idxprom100
  %100 = load i32, i32* %arrayidx101, align 4
  %add102 = add nsw i32 %97, %100
  store i32 %add102, i32* %cand_x, align 4
  %101 = load i32, i32* %center_y, align 4
  %102 = load i32, i32* %pos, align 4
  %idxprom103 = sext i32 %102 to i64
  %103 = load i32*, i32** @spiral_search_y, align 8
  %arrayidx104 = getelementptr inbounds i32, i32* %103, i64 %idxprom103
  %104 = load i32, i32* %arrayidx104, align 4
  %add105 = add nsw i32 %101, %104
  store i32 %add105, i32* %cand_y, align 4
  %105 = load i32, i32* %lambda_factor, align 4
  %106 = load i32, i32* %cand_x, align 4
  %shl106 = shl i32 %106, 2
  %107 = load i32, i32* %pred_x, align 4
  %sub107 = sub nsw i32 %shl106, %107
  %idxprom108 = sext i32 %sub107 to i64
  %108 = load i32*, i32** @mvbits, align 8
  %arrayidx109 = getelementptr inbounds i32, i32* %108, i64 %idxprom108
  %109 = load i32, i32* %arrayidx109, align 4
  %110 = load i32, i32* %cand_y, align 4
  %shl110 = shl i32 %110, 2
  %111 = load i32, i32* %pred_y, align 4
  %sub111 = sub nsw i32 %shl110, %111
  %idxprom112 = sext i32 %sub111 to i64
  %112 = load i32*, i32** @mvbits, align 8
  %arrayidx113 = getelementptr inbounds i32, i32* %112, i64 %idxprom112
  %113 = load i32, i32* %arrayidx113, align 4
  %add114 = add nsw i32 %109, %113
  %mul115 = mul nsw i32 %105, %add114
  %shr116 = ashr i32 %mul115, 16
  store i32 %shr116, i32* %mcost, align 4
  %114 = load i32, i32* %check_for_00, align 4
  %tobool117 = icmp ne i32 %114, 0
  br i1 %tobool117, label %land.lhs.true.118, label %if.end.128

land.lhs.true.118:                                ; preds = %for.body
  %115 = load i32, i32* %cand_x, align 4
  %116 = load i32, i32* %pic_pix_x.addr, align 4
  %cmp119 = icmp eq i32 %115, %116
  br i1 %cmp119, label %land.lhs.true.121, label %if.end.128

land.lhs.true.121:                                ; preds = %land.lhs.true.118
  %117 = load i32, i32* %cand_y, align 4
  %118 = load i32, i32* %pic_pix_y.addr, align 4
  %cmp122 = icmp eq i32 %117, %118
  br i1 %cmp122, label %if.then.124, label %if.end.128

if.then.124:                                      ; preds = %land.lhs.true.121
  %119 = load i32, i32* %lambda_factor, align 4
  %mul125 = mul nsw i32 %119, 16
  %shr126 = ashr i32 %mul125, 16
  %120 = load i32, i32* %mcost, align 4
  %sub127 = sub nsw i32 %120, %shr126
  store i32 %sub127, i32* %mcost, align 4
  br label %if.end.128

if.end.128:                                       ; preds = %if.then.124, %land.lhs.true.121, %land.lhs.true.118, %for.body
  %121 = load i32, i32* %mcost, align 4
  %122 = load i32, i32* %min_mcost.addr, align 4
  %cmp129 = icmp sge i32 %121, %122
  br i1 %cmp129, label %if.then.131, label %if.end.132

if.then.131:                                      ; preds = %if.end.128
  br label %for.inc.186

if.end.132:                                       ; preds = %if.end.128
  store i32 0, i32* %y, align 4
  br label %for.cond.133

for.cond.133:                                     ; preds = %for.inc.179, %if.end.132
  %123 = load i32, i32* %y, align 4
  %124 = load i32, i32* %blocksize_y, align 4
  %cmp134 = icmp slt i32 %123, %124
  br i1 %cmp134, label %for.body.136, label %for.end.181

for.body.136:                                     ; preds = %for.cond.133
  %125 = load i16* (i32, i16*, i32, i32, i32, i32)*, i16* (i32, i16*, i32, i32, i32, i32)** %get_ref_line, align 8
  %126 = load i32, i32* %blocksize_x, align 4
  %127 = load i16*, i16** %ref_pic, align 8
  %128 = load i32, i32* %cand_y, align 4
  %129 = load i32, i32* %y, align 4
  %add137 = add nsw i32 %128, %129
  %130 = load i32, i32* %cand_x, align 4
  %131 = load i32, i32* %img_height, align 4
  %132 = load i32, i32* %img_width, align 4
  %call = call i16* %125(i32 %126, i16* %127, i32 %add137, i32 %130, i32 %131, i32 %132)
  store i16* %call, i16** %ref_line, align 8
  %133 = load i32, i32* %y, align 4
  %idxprom138 = sext i32 %133 to i64
  %134 = load i16**, i16*** %orig_pic.addr, align 8
  %arrayidx139 = getelementptr inbounds i16*, i16** %134, i64 %idxprom138
  %135 = load i16*, i16** %arrayidx139, align 8
  store i16* %135, i16** %orig_line, align 8
  store i32 0, i32* %x4, align 4
  br label %for.cond.140

for.cond.140:                                     ; preds = %for.inc, %for.body.136
  %136 = load i32, i32* %x4, align 4
  %137 = load i32, i32* %blocksize_x4, align 4
  %cmp141 = icmp slt i32 %136, %137
  br i1 %cmp141, label %for.body.143, label %for.end

for.body.143:                                     ; preds = %for.cond.140
  %138 = load i16*, i16** %orig_line, align 8
  %incdec.ptr = getelementptr inbounds i16, i16* %138, i32 1
  store i16* %incdec.ptr, i16** %orig_line, align 8
  %139 = load i16, i16* %138, align 2
  %conv144 = zext i16 %139 to i32
  %140 = load i16*, i16** %ref_line, align 8
  %incdec.ptr145 = getelementptr inbounds i16, i16* %140, i32 1
  store i16* %incdec.ptr145, i16** %ref_line, align 8
  %141 = load i16, i16* %140, align 2
  %conv146 = zext i16 %141 to i32
  %sub147 = sub nsw i32 %conv144, %conv146
  %idxprom148 = sext i32 %sub147 to i64
  %142 = load i32*, i32** @byte_abs, align 8
  %arrayidx149 = getelementptr inbounds i32, i32* %142, i64 %idxprom148
  %143 = load i32, i32* %arrayidx149, align 4
  %144 = load i32, i32* %mcost, align 4
  %add150 = add nsw i32 %144, %143
  store i32 %add150, i32* %mcost, align 4
  %145 = load i16*, i16** %orig_line, align 8
  %incdec.ptr151 = getelementptr inbounds i16, i16* %145, i32 1
  store i16* %incdec.ptr151, i16** %orig_line, align 8
  %146 = load i16, i16* %145, align 2
  %conv152 = zext i16 %146 to i32
  %147 = load i16*, i16** %ref_line, align 8
  %incdec.ptr153 = getelementptr inbounds i16, i16* %147, i32 1
  store i16* %incdec.ptr153, i16** %ref_line, align 8
  %148 = load i16, i16* %147, align 2
  %conv154 = zext i16 %148 to i32
  %sub155 = sub nsw i32 %conv152, %conv154
  %idxprom156 = sext i32 %sub155 to i64
  %149 = load i32*, i32** @byte_abs, align 8
  %arrayidx157 = getelementptr inbounds i32, i32* %149, i64 %idxprom156
  %150 = load i32, i32* %arrayidx157, align 4
  %151 = load i32, i32* %mcost, align 4
  %add158 = add nsw i32 %151, %150
  store i32 %add158, i32* %mcost, align 4
  %152 = load i16*, i16** %orig_line, align 8
  %incdec.ptr159 = getelementptr inbounds i16, i16* %152, i32 1
  store i16* %incdec.ptr159, i16** %orig_line, align 8
  %153 = load i16, i16* %152, align 2
  %conv160 = zext i16 %153 to i32
  %154 = load i16*, i16** %ref_line, align 8
  %incdec.ptr161 = getelementptr inbounds i16, i16* %154, i32 1
  store i16* %incdec.ptr161, i16** %ref_line, align 8
  %155 = load i16, i16* %154, align 2
  %conv162 = zext i16 %155 to i32
  %sub163 = sub nsw i32 %conv160, %conv162
  %idxprom164 = sext i32 %sub163 to i64
  %156 = load i32*, i32** @byte_abs, align 8
  %arrayidx165 = getelementptr inbounds i32, i32* %156, i64 %idxprom164
  %157 = load i32, i32* %arrayidx165, align 4
  %158 = load i32, i32* %mcost, align 4
  %add166 = add nsw i32 %158, %157
  store i32 %add166, i32* %mcost, align 4
  %159 = load i16*, i16** %orig_line, align 8
  %incdec.ptr167 = getelementptr inbounds i16, i16* %159, i32 1
  store i16* %incdec.ptr167, i16** %orig_line, align 8
  %160 = load i16, i16* %159, align 2
  %conv168 = zext i16 %160 to i32
  %161 = load i16*, i16** %ref_line, align 8
  %incdec.ptr169 = getelementptr inbounds i16, i16* %161, i32 1
  store i16* %incdec.ptr169, i16** %ref_line, align 8
  %162 = load i16, i16* %161, align 2
  %conv170 = zext i16 %162 to i32
  %sub171 = sub nsw i32 %conv168, %conv170
  %idxprom172 = sext i32 %sub171 to i64
  %163 = load i32*, i32** @byte_abs, align 8
  %arrayidx173 = getelementptr inbounds i32, i32* %163, i64 %idxprom172
  %164 = load i32, i32* %arrayidx173, align 4
  %165 = load i32, i32* %mcost, align 4
  %add174 = add nsw i32 %165, %164
  store i32 %add174, i32* %mcost, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body.143
  %166 = load i32, i32* %x4, align 4
  %inc = add nsw i32 %166, 1
  store i32 %inc, i32* %x4, align 4
  br label %for.cond.140

for.end:                                          ; preds = %for.cond.140
  %167 = load i32, i32* %mcost, align 4
  %168 = load i32, i32* %min_mcost.addr, align 4
  %cmp175 = icmp sge i32 %167, %168
  br i1 %cmp175, label %if.then.177, label %if.end.178

if.then.177:                                      ; preds = %for.end
  br label %for.end.181

if.end.178:                                       ; preds = %for.end
  br label %for.inc.179

for.inc.179:                                      ; preds = %if.end.178
  %169 = load i32, i32* %y, align 4
  %inc180 = add nsw i32 %169, 1
  store i32 %inc180, i32* %y, align 4
  br label %for.cond.133

for.end.181:                                      ; preds = %if.then.177, %for.cond.133
  %170 = load i32, i32* %mcost, align 4
  %171 = load i32, i32* %min_mcost.addr, align 4
  %cmp182 = icmp slt i32 %170, %171
  br i1 %cmp182, label %if.then.184, label %if.end.185

if.then.184:                                      ; preds = %for.end.181
  %172 = load i32, i32* %pos, align 4
  store i32 %172, i32* %best_pos, align 4
  %173 = load i32, i32* %mcost, align 4
  store i32 %173, i32* %min_mcost.addr, align 4
  br label %if.end.185

if.end.185:                                       ; preds = %if.then.184, %for.end.181
  br label %for.inc.186

for.inc.186:                                      ; preds = %if.end.185, %if.then.131
  %174 = load i32, i32* %pos, align 4
  %inc187 = add nsw i32 %174, 1
  store i32 %inc187, i32* %pos, align 4
  br label %for.cond

for.end.188:                                      ; preds = %for.cond
  %175 = load i32, i32* %best_pos, align 4
  %tobool189 = icmp ne i32 %175, 0
  br i1 %tobool189, label %if.then.190, label %if.end.201

if.then.190:                                      ; preds = %for.end.188
  %176 = load i32, i32* %best_pos, align 4
  %idxprom191 = sext i32 %176 to i64
  %177 = load i32*, i32** @spiral_search_x, align 8
  %arrayidx192 = getelementptr inbounds i32, i32* %177, i64 %idxprom191
  %178 = load i32, i32* %arrayidx192, align 4
  %179 = load i16*, i16** %mv_x.addr, align 8
  %180 = load i16, i16* %179, align 2
  %conv193 = sext i16 %180 to i32
  %add194 = add nsw i32 %conv193, %178
  %conv195 = trunc i32 %add194 to i16
  store i16 %conv195, i16* %179, align 2
  %181 = load i32, i32* %best_pos, align 4
  %idxprom196 = sext i32 %181 to i64
  %182 = load i32*, i32** @spiral_search_y, align 8
  %arrayidx197 = getelementptr inbounds i32, i32* %182, i64 %idxprom196
  %183 = load i32, i32* %arrayidx197, align 4
  %184 = load i16*, i16** %mv_y.addr, align 8
  %185 = load i16, i16* %184, align 2
  %conv198 = sext i16 %185 to i32
  %add199 = add nsw i32 %conv198, %183
  %conv200 = trunc i32 %add199 to i16
  store i16 %conv200, i16* %184, align 2
  br label %if.end.201

if.end.201:                                       ; preds = %if.then.190, %for.end.188
  %186 = load i32, i32* %min_mcost.addr, align 4
  ret i32 %186
}

declare i16* @FastLineX(i32, i16*, i32, i32, i32, i32) #2

declare i16* @UMVLineX(i32, i16*, i32, i32, i32, i32) #2

; Function Attrs: nounwind uwtable
define i32 @FastFullPelBlockMotionSearch(i16** %orig_pic, i16 signext %ref, i32 %list, i32 %pic_pix_x, i32 %pic_pix_y, i32 %blocktype, i16 signext %pred_mv_x, i16 signext %pred_mv_y, i16* %mv_x, i16* %mv_y, i32 %search_range, i32 %min_mcost, double %lambda) #0 {
entry:
  %orig_pic.addr = alloca i16**, align 8
  %ref.addr = alloca i16, align 2
  %list.addr = alloca i32, align 4
  %pic_pix_x.addr = alloca i32, align 4
  %pic_pix_y.addr = alloca i32, align 4
  %blocktype.addr = alloca i32, align 4
  %pred_mv_x.addr = alloca i16, align 2
  %pred_mv_y.addr = alloca i16, align 2
  %mv_x.addr = alloca i16*, align 8
  %mv_y.addr = alloca i16*, align 8
  %search_range.addr = alloca i32, align 4
  %min_mcost.addr = alloca i32, align 4
  %lambda.addr = alloca double, align 8
  %pos = alloca i32, align 4
  %offset_x = alloca i32, align 4
  %offset_y = alloca i32, align 4
  %cand_x = alloca i32, align 4
  %cand_y = alloca i32, align 4
  %mcost = alloca i32, align 4
  %max_pos = alloca i32, align 4
  %lambda_factor = alloca i32, align 4
  %best_pos = alloca i32, align 4
  %block_index = alloca i32, align 4
  %block_sad = alloca i32*, align 8
  store i16** %orig_pic, i16*** %orig_pic.addr, align 8
  store i16 %ref, i16* %ref.addr, align 2
  store i32 %list, i32* %list.addr, align 4
  store i32 %pic_pix_x, i32* %pic_pix_x.addr, align 4
  store i32 %pic_pix_y, i32* %pic_pix_y.addr, align 4
  store i32 %blocktype, i32* %blocktype.addr, align 4
  store i16 %pred_mv_x, i16* %pred_mv_x.addr, align 2
  store i16 %pred_mv_y, i16* %pred_mv_y.addr, align 2
  store i16* %mv_x, i16** %mv_x.addr, align 8
  store i16* %mv_y, i16** %mv_y.addr, align 8
  store i32 %search_range, i32* %search_range.addr, align 4
  store i32 %min_mcost, i32* %min_mcost.addr, align 4
  store double %lambda, double* %lambda.addr, align 8
  %0 = load i32, i32* %search_range.addr, align 4
  %mul = mul nsw i32 2, %0
  %add = add nsw i32 %mul, 1
  %1 = load i32, i32* %search_range.addr, align 4
  %mul1 = mul nsw i32 2, %1
  %add2 = add nsw i32 %mul1, 1
  %mul3 = mul nsw i32 %add, %add2
  store i32 %mul3, i32* %max_pos, align 4
  %2 = load double, double* %lambda.addr, align 8
  %mul4 = fmul double 6.553600e+04, %2
  %add5 = fadd double %mul4, 5.000000e-01
  %conv = fptosi double %add5 to i32
  store i32 %conv, i32* %lambda_factor, align 4
  store i32 0, i32* %best_pos, align 4
  %3 = load i32, i32* %pic_pix_y.addr, align 4
  %4 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %opix_y = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %4, i32 0, i32 38
  %5 = load i32, i32* %opix_y, align 4
  %sub = sub nsw i32 %3, %5
  %6 = load i32, i32* %pic_pix_x.addr, align 4
  %7 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %opix_x = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %7, i32 0, i32 37
  %8 = load i32, i32* %opix_x, align 4
  %sub6 = sub nsw i32 %6, %8
  %shr = ashr i32 %sub6, 2
  %add7 = add nsw i32 %sub, %shr
  store i32 %add7, i32* %block_index, align 4
  %9 = load i32, i32* %block_index, align 4
  %idxprom = sext i32 %9 to i64
  %10 = load i32, i32* %blocktype.addr, align 4
  %idxprom8 = sext i32 %10 to i64
  %11 = load i16, i16* %ref.addr, align 2
  %idxprom9 = sext i16 %11 to i64
  %12 = load i32, i32* %list.addr, align 4
  %idxprom10 = sext i32 %12 to i64
  %13 = load i32*****, i32****** @BlockSAD, align 8
  %arrayidx = getelementptr inbounds i32****, i32***** %13, i64 %idxprom10
  %14 = load i32****, i32***** %arrayidx, align 8
  %arrayidx11 = getelementptr inbounds i32***, i32**** %14, i64 %idxprom9
  %15 = load i32***, i32**** %arrayidx11, align 8
  %arrayidx12 = getelementptr inbounds i32**, i32*** %15, i64 %idxprom8
  %16 = load i32**, i32*** %arrayidx12, align 8
  %arrayidx13 = getelementptr inbounds i32*, i32** %16, i64 %idxprom
  %17 = load i32*, i32** %arrayidx13, align 8
  store i32* %17, i32** %block_sad, align 8
  %18 = load i16, i16* %ref.addr, align 2
  %idxprom14 = sext i16 %18 to i64
  %19 = load i32, i32* %list.addr, align 4
  %idxprom15 = sext i32 %19 to i64
  %20 = load i32**, i32*** @search_setup_done, align 8
  %arrayidx16 = getelementptr inbounds i32*, i32** %20, i64 %idxprom15
  %21 = load i32*, i32** %arrayidx16, align 8
  %arrayidx17 = getelementptr inbounds i32, i32* %21, i64 %idxprom14
  %22 = load i32, i32* %arrayidx17, align 4
  %tobool = icmp ne i32 %22, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %23 = load i16, i16* %ref.addr, align 2
  %24 = load i32, i32* %list.addr, align 4
  call void @SetupFastFullPelSearch(i16 signext %23, i32 %24)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %25 = load i16, i16* %ref.addr, align 2
  %idxprom18 = sext i16 %25 to i64
  %26 = load i32, i32* %list.addr, align 4
  %idxprom19 = sext i32 %26 to i64
  %27 = load i32**, i32*** @search_center_x, align 8
  %arrayidx20 = getelementptr inbounds i32*, i32** %27, i64 %idxprom19
  %28 = load i32*, i32** %arrayidx20, align 8
  %arrayidx21 = getelementptr inbounds i32, i32* %28, i64 %idxprom18
  %29 = load i32, i32* %arrayidx21, align 4
  %30 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %opix_x22 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %30, i32 0, i32 37
  %31 = load i32, i32* %opix_x22, align 4
  %sub23 = sub nsw i32 %29, %31
  store i32 %sub23, i32* %offset_x, align 4
  %32 = load i16, i16* %ref.addr, align 2
  %idxprom24 = sext i16 %32 to i64
  %33 = load i32, i32* %list.addr, align 4
  %idxprom25 = sext i32 %33 to i64
  %34 = load i32**, i32*** @search_center_y, align 8
  %arrayidx26 = getelementptr inbounds i32*, i32** %34, i64 %idxprom25
  %35 = load i32*, i32** %arrayidx26, align 8
  %arrayidx27 = getelementptr inbounds i32, i32* %35, i64 %idxprom24
  %36 = load i32, i32* %arrayidx27, align 4
  %37 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %opix_y28 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %37, i32 0, i32 38
  %38 = load i32, i32* %opix_y28, align 4
  %sub29 = sub nsw i32 %36, %38
  store i32 %sub29, i32* %offset_y, align 4
  %39 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %rdopt = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %39, i32 0, i32 85
  %40 = load i32, i32* %rdopt, align 4
  %tobool30 = icmp ne i32 %40, 0
  br i1 %tobool30, label %if.end.57, label %if.then.31

if.then.31:                                       ; preds = %if.end
  %41 = load i16, i16* %ref.addr, align 2
  %idxprom32 = sext i16 %41 to i64
  %42 = load i32, i32* %list.addr, align 4
  %idxprom33 = sext i32 %42 to i64
  %43 = load i32**, i32*** @pos_00, align 8
  %arrayidx34 = getelementptr inbounds i32*, i32** %43, i64 %idxprom33
  %44 = load i32*, i32** %arrayidx34, align 8
  %arrayidx35 = getelementptr inbounds i32, i32* %44, i64 %idxprom32
  %45 = load i32, i32* %arrayidx35, align 4
  %idxprom36 = sext i32 %45 to i64
  %46 = load i32*, i32** %block_sad, align 8
  %arrayidx37 = getelementptr inbounds i32, i32* %46, i64 %idxprom36
  %47 = load i32, i32* %arrayidx37, align 4
  %48 = load i32, i32* %lambda_factor, align 4
  %49 = load i16, i16* %pred_mv_x.addr, align 2
  %conv38 = sext i16 %49 to i32
  %sub39 = sub nsw i32 0, %conv38
  %idxprom40 = sext i32 %sub39 to i64
  %50 = load i32*, i32** @mvbits, align 8
  %arrayidx41 = getelementptr inbounds i32, i32* %50, i64 %idxprom40
  %51 = load i32, i32* %arrayidx41, align 4
  %52 = load i16, i16* %pred_mv_y.addr, align 2
  %conv42 = sext i16 %52 to i32
  %sub43 = sub nsw i32 0, %conv42
  %idxprom44 = sext i32 %sub43 to i64
  %53 = load i32*, i32** @mvbits, align 8
  %arrayidx45 = getelementptr inbounds i32, i32* %53, i64 %idxprom44
  %54 = load i32, i32* %arrayidx45, align 4
  %add46 = add nsw i32 %51, %54
  %mul47 = mul nsw i32 %48, %add46
  %shr48 = ashr i32 %mul47, 16
  %add49 = add nsw i32 %47, %shr48
  store i32 %add49, i32* %mcost, align 4
  %55 = load i32, i32* %mcost, align 4
  %56 = load i32, i32* %min_mcost.addr, align 4
  %cmp = icmp slt i32 %55, %56
  br i1 %cmp, label %if.then.51, label %if.end.56

if.then.51:                                       ; preds = %if.then.31
  %57 = load i32, i32* %mcost, align 4
  store i32 %57, i32* %min_mcost.addr, align 4
  %58 = load i16, i16* %ref.addr, align 2
  %idxprom52 = sext i16 %58 to i64
  %59 = load i32, i32* %list.addr, align 4
  %idxprom53 = sext i32 %59 to i64
  %60 = load i32**, i32*** @pos_00, align 8
  %arrayidx54 = getelementptr inbounds i32*, i32** %60, i64 %idxprom53
  %61 = load i32*, i32** %arrayidx54, align 8
  %arrayidx55 = getelementptr inbounds i32, i32* %61, i64 %idxprom52
  %62 = load i32, i32* %arrayidx55, align 4
  store i32 %62, i32* %best_pos, align 4
  br label %if.end.56

if.end.56:                                        ; preds = %if.then.51, %if.then.31
  br label %if.end.57

if.end.57:                                        ; preds = %if.end.56, %if.end
  store i32 0, i32* %pos, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.57
  %63 = load i32, i32* %pos, align 4
  %64 = load i32, i32* %max_pos, align 4
  %cmp58 = icmp slt i32 %63, %64
  br i1 %cmp58, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %65 = load i32*, i32** %block_sad, align 8
  %66 = load i32, i32* %65, align 4
  %67 = load i32, i32* %min_mcost.addr, align 4
  %cmp60 = icmp slt i32 %66, %67
  br i1 %cmp60, label %if.then.62, label %if.end.86

if.then.62:                                       ; preds = %for.body
  %68 = load i32, i32* %offset_x, align 4
  %69 = load i32, i32* %pos, align 4
  %idxprom63 = sext i32 %69 to i64
  %70 = load i32*, i32** @spiral_search_x, align 8
  %arrayidx64 = getelementptr inbounds i32, i32* %70, i64 %idxprom63
  %71 = load i32, i32* %arrayidx64, align 4
  %add65 = add nsw i32 %68, %71
  store i32 %add65, i32* %cand_x, align 4
  %72 = load i32, i32* %offset_y, align 4
  %73 = load i32, i32* %pos, align 4
  %idxprom66 = sext i32 %73 to i64
  %74 = load i32*, i32** @spiral_search_y, align 8
  %arrayidx67 = getelementptr inbounds i32, i32* %74, i64 %idxprom66
  %75 = load i32, i32* %arrayidx67, align 4
  %add68 = add nsw i32 %72, %75
  store i32 %add68, i32* %cand_y, align 4
  %76 = load i32*, i32** %block_sad, align 8
  %77 = load i32, i32* %76, align 4
  store i32 %77, i32* %mcost, align 4
  %78 = load i32, i32* %lambda_factor, align 4
  %79 = load i32, i32* %cand_x, align 4
  %shl = shl i32 %79, 2
  %80 = load i16, i16* %pred_mv_x.addr, align 2
  %conv69 = sext i16 %80 to i32
  %sub70 = sub nsw i32 %shl, %conv69
  %idxprom71 = sext i32 %sub70 to i64
  %81 = load i32*, i32** @mvbits, align 8
  %arrayidx72 = getelementptr inbounds i32, i32* %81, i64 %idxprom71
  %82 = load i32, i32* %arrayidx72, align 4
  %83 = load i32, i32* %cand_y, align 4
  %shl73 = shl i32 %83, 2
  %84 = load i16, i16* %pred_mv_y.addr, align 2
  %conv74 = sext i16 %84 to i32
  %sub75 = sub nsw i32 %shl73, %conv74
  %idxprom76 = sext i32 %sub75 to i64
  %85 = load i32*, i32** @mvbits, align 8
  %arrayidx77 = getelementptr inbounds i32, i32* %85, i64 %idxprom76
  %86 = load i32, i32* %arrayidx77, align 4
  %add78 = add nsw i32 %82, %86
  %mul79 = mul nsw i32 %78, %add78
  %shr80 = ashr i32 %mul79, 16
  %87 = load i32, i32* %mcost, align 4
  %add81 = add nsw i32 %87, %shr80
  store i32 %add81, i32* %mcost, align 4
  %88 = load i32, i32* %mcost, align 4
  %89 = load i32, i32* %min_mcost.addr, align 4
  %cmp82 = icmp slt i32 %88, %89
  br i1 %cmp82, label %if.then.84, label %if.end.85

if.then.84:                                       ; preds = %if.then.62
  %90 = load i32, i32* %mcost, align 4
  store i32 %90, i32* %min_mcost.addr, align 4
  %91 = load i32, i32* %pos, align 4
  store i32 %91, i32* %best_pos, align 4
  br label %if.end.85

if.end.85:                                        ; preds = %if.then.84, %if.then.62
  br label %if.end.86

if.end.86:                                        ; preds = %if.end.85, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.86
  %92 = load i32, i32* %pos, align 4
  %inc = add nsw i32 %92, 1
  store i32 %inc, i32* %pos, align 4
  %93 = load i32*, i32** %block_sad, align 8
  %incdec.ptr = getelementptr inbounds i32, i32* %93, i32 1
  store i32* %incdec.ptr, i32** %block_sad, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %94 = load i32, i32* %offset_x, align 4
  %95 = load i32, i32* %best_pos, align 4
  %idxprom87 = sext i32 %95 to i64
  %96 = load i32*, i32** @spiral_search_x, align 8
  %arrayidx88 = getelementptr inbounds i32, i32* %96, i64 %idxprom87
  %97 = load i32, i32* %arrayidx88, align 4
  %add89 = add nsw i32 %94, %97
  %conv90 = trunc i32 %add89 to i16
  %98 = load i16*, i16** %mv_x.addr, align 8
  store i16 %conv90, i16* %98, align 2
  %99 = load i32, i32* %offset_y, align 4
  %100 = load i32, i32* %best_pos, align 4
  %idxprom91 = sext i32 %100 to i64
  %101 = load i32*, i32** @spiral_search_y, align 8
  %arrayidx92 = getelementptr inbounds i32, i32* %101, i64 %idxprom91
  %102 = load i32, i32* %arrayidx92, align 4
  %add93 = add nsw i32 %99, %102
  %conv94 = trunc i32 %add93 to i16
  %103 = load i16*, i16** %mv_y.addr, align 8
  store i16 %conv94, i16* %103, align 2
  %104 = load i32, i32* %min_mcost.addr, align 4
  ret i32 %104
}

; Function Attrs: nounwind uwtable
define i32 @SATD(i32* %diff, i32 %use_hadamard) #0 {
entry:
  %diff.addr = alloca i32*, align 8
  %use_hadamard.addr = alloca i32, align 4
  %k = alloca i32, align 4
  %satd = alloca i32, align 4
  %m = alloca [16 x i32], align 16
  %dd = alloca i32, align 4
  %d = alloca [16 x i32], align 16
  store i32* %diff, i32** %diff.addr, align 8
  store i32 %use_hadamard, i32* %use_hadamard.addr, align 4
  store i32 0, i32* %satd, align 4
  %0 = load i32, i32* %use_hadamard.addr, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = load i32*, i32** %diff.addr, align 8
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 0
  %2 = load i32, i32* %arrayidx, align 4
  %3 = load i32*, i32** %diff.addr, align 8
  %arrayidx1 = getelementptr inbounds i32, i32* %3, i64 12
  %4 = load i32, i32* %arrayidx1, align 4
  %add = add nsw i32 %2, %4
  %arrayidx2 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 0
  store i32 %add, i32* %arrayidx2, align 4
  %5 = load i32*, i32** %diff.addr, align 8
  %arrayidx3 = getelementptr inbounds i32, i32* %5, i64 4
  %6 = load i32, i32* %arrayidx3, align 4
  %7 = load i32*, i32** %diff.addr, align 8
  %arrayidx4 = getelementptr inbounds i32, i32* %7, i64 8
  %8 = load i32, i32* %arrayidx4, align 4
  %add5 = add nsw i32 %6, %8
  %arrayidx6 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 4
  store i32 %add5, i32* %arrayidx6, align 4
  %9 = load i32*, i32** %diff.addr, align 8
  %arrayidx7 = getelementptr inbounds i32, i32* %9, i64 4
  %10 = load i32, i32* %arrayidx7, align 4
  %11 = load i32*, i32** %diff.addr, align 8
  %arrayidx8 = getelementptr inbounds i32, i32* %11, i64 8
  %12 = load i32, i32* %arrayidx8, align 4
  %sub = sub nsw i32 %10, %12
  %arrayidx9 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 8
  store i32 %sub, i32* %arrayidx9, align 4
  %13 = load i32*, i32** %diff.addr, align 8
  %arrayidx10 = getelementptr inbounds i32, i32* %13, i64 0
  %14 = load i32, i32* %arrayidx10, align 4
  %15 = load i32*, i32** %diff.addr, align 8
  %arrayidx11 = getelementptr inbounds i32, i32* %15, i64 12
  %16 = load i32, i32* %arrayidx11, align 4
  %sub12 = sub nsw i32 %14, %16
  %arrayidx13 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 12
  store i32 %sub12, i32* %arrayidx13, align 4
  %17 = load i32*, i32** %diff.addr, align 8
  %arrayidx14 = getelementptr inbounds i32, i32* %17, i64 1
  %18 = load i32, i32* %arrayidx14, align 4
  %19 = load i32*, i32** %diff.addr, align 8
  %arrayidx15 = getelementptr inbounds i32, i32* %19, i64 13
  %20 = load i32, i32* %arrayidx15, align 4
  %add16 = add nsw i32 %18, %20
  %arrayidx17 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 1
  store i32 %add16, i32* %arrayidx17, align 4
  %21 = load i32*, i32** %diff.addr, align 8
  %arrayidx18 = getelementptr inbounds i32, i32* %21, i64 5
  %22 = load i32, i32* %arrayidx18, align 4
  %23 = load i32*, i32** %diff.addr, align 8
  %arrayidx19 = getelementptr inbounds i32, i32* %23, i64 9
  %24 = load i32, i32* %arrayidx19, align 4
  %add20 = add nsw i32 %22, %24
  %arrayidx21 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 5
  store i32 %add20, i32* %arrayidx21, align 4
  %25 = load i32*, i32** %diff.addr, align 8
  %arrayidx22 = getelementptr inbounds i32, i32* %25, i64 5
  %26 = load i32, i32* %arrayidx22, align 4
  %27 = load i32*, i32** %diff.addr, align 8
  %arrayidx23 = getelementptr inbounds i32, i32* %27, i64 9
  %28 = load i32, i32* %arrayidx23, align 4
  %sub24 = sub nsw i32 %26, %28
  %arrayidx25 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 9
  store i32 %sub24, i32* %arrayidx25, align 4
  %29 = load i32*, i32** %diff.addr, align 8
  %arrayidx26 = getelementptr inbounds i32, i32* %29, i64 1
  %30 = load i32, i32* %arrayidx26, align 4
  %31 = load i32*, i32** %diff.addr, align 8
  %arrayidx27 = getelementptr inbounds i32, i32* %31, i64 13
  %32 = load i32, i32* %arrayidx27, align 4
  %sub28 = sub nsw i32 %30, %32
  %arrayidx29 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 13
  store i32 %sub28, i32* %arrayidx29, align 4
  %33 = load i32*, i32** %diff.addr, align 8
  %arrayidx30 = getelementptr inbounds i32, i32* %33, i64 2
  %34 = load i32, i32* %arrayidx30, align 4
  %35 = load i32*, i32** %diff.addr, align 8
  %arrayidx31 = getelementptr inbounds i32, i32* %35, i64 14
  %36 = load i32, i32* %arrayidx31, align 4
  %add32 = add nsw i32 %34, %36
  %arrayidx33 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 2
  store i32 %add32, i32* %arrayidx33, align 4
  %37 = load i32*, i32** %diff.addr, align 8
  %arrayidx34 = getelementptr inbounds i32, i32* %37, i64 6
  %38 = load i32, i32* %arrayidx34, align 4
  %39 = load i32*, i32** %diff.addr, align 8
  %arrayidx35 = getelementptr inbounds i32, i32* %39, i64 10
  %40 = load i32, i32* %arrayidx35, align 4
  %add36 = add nsw i32 %38, %40
  %arrayidx37 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 6
  store i32 %add36, i32* %arrayidx37, align 4
  %41 = load i32*, i32** %diff.addr, align 8
  %arrayidx38 = getelementptr inbounds i32, i32* %41, i64 6
  %42 = load i32, i32* %arrayidx38, align 4
  %43 = load i32*, i32** %diff.addr, align 8
  %arrayidx39 = getelementptr inbounds i32, i32* %43, i64 10
  %44 = load i32, i32* %arrayidx39, align 4
  %sub40 = sub nsw i32 %42, %44
  %arrayidx41 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 10
  store i32 %sub40, i32* %arrayidx41, align 4
  %45 = load i32*, i32** %diff.addr, align 8
  %arrayidx42 = getelementptr inbounds i32, i32* %45, i64 2
  %46 = load i32, i32* %arrayidx42, align 4
  %47 = load i32*, i32** %diff.addr, align 8
  %arrayidx43 = getelementptr inbounds i32, i32* %47, i64 14
  %48 = load i32, i32* %arrayidx43, align 4
  %sub44 = sub nsw i32 %46, %48
  %arrayidx45 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 14
  store i32 %sub44, i32* %arrayidx45, align 4
  %49 = load i32*, i32** %diff.addr, align 8
  %arrayidx46 = getelementptr inbounds i32, i32* %49, i64 3
  %50 = load i32, i32* %arrayidx46, align 4
  %51 = load i32*, i32** %diff.addr, align 8
  %arrayidx47 = getelementptr inbounds i32, i32* %51, i64 15
  %52 = load i32, i32* %arrayidx47, align 4
  %add48 = add nsw i32 %50, %52
  %arrayidx49 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 3
  store i32 %add48, i32* %arrayidx49, align 4
  %53 = load i32*, i32** %diff.addr, align 8
  %arrayidx50 = getelementptr inbounds i32, i32* %53, i64 7
  %54 = load i32, i32* %arrayidx50, align 4
  %55 = load i32*, i32** %diff.addr, align 8
  %arrayidx51 = getelementptr inbounds i32, i32* %55, i64 11
  %56 = load i32, i32* %arrayidx51, align 4
  %add52 = add nsw i32 %54, %56
  %arrayidx53 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 7
  store i32 %add52, i32* %arrayidx53, align 4
  %57 = load i32*, i32** %diff.addr, align 8
  %arrayidx54 = getelementptr inbounds i32, i32* %57, i64 7
  %58 = load i32, i32* %arrayidx54, align 4
  %59 = load i32*, i32** %diff.addr, align 8
  %arrayidx55 = getelementptr inbounds i32, i32* %59, i64 11
  %60 = load i32, i32* %arrayidx55, align 4
  %sub56 = sub nsw i32 %58, %60
  %arrayidx57 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 11
  store i32 %sub56, i32* %arrayidx57, align 4
  %61 = load i32*, i32** %diff.addr, align 8
  %arrayidx58 = getelementptr inbounds i32, i32* %61, i64 3
  %62 = load i32, i32* %arrayidx58, align 4
  %63 = load i32*, i32** %diff.addr, align 8
  %arrayidx59 = getelementptr inbounds i32, i32* %63, i64 15
  %64 = load i32, i32* %arrayidx59, align 4
  %sub60 = sub nsw i32 %62, %64
  %arrayidx61 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 15
  store i32 %sub60, i32* %arrayidx61, align 4
  %arrayidx62 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 0
  %65 = load i32, i32* %arrayidx62, align 4
  %arrayidx63 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 4
  %66 = load i32, i32* %arrayidx63, align 4
  %add64 = add nsw i32 %65, %66
  %arrayidx65 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i32 0, i64 0
  store i32 %add64, i32* %arrayidx65, align 4
  %arrayidx66 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 0
  %67 = load i32, i32* %arrayidx66, align 4
  %arrayidx67 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 4
  %68 = load i32, i32* %arrayidx67, align 4
  %sub68 = sub nsw i32 %67, %68
  %arrayidx69 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i32 0, i64 8
  store i32 %sub68, i32* %arrayidx69, align 4
  %arrayidx70 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 8
  %69 = load i32, i32* %arrayidx70, align 4
  %arrayidx71 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 12
  %70 = load i32, i32* %arrayidx71, align 4
  %add72 = add nsw i32 %69, %70
  %arrayidx73 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i32 0, i64 4
  store i32 %add72, i32* %arrayidx73, align 4
  %arrayidx74 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 12
  %71 = load i32, i32* %arrayidx74, align 4
  %arrayidx75 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 8
  %72 = load i32, i32* %arrayidx75, align 4
  %sub76 = sub nsw i32 %71, %72
  %arrayidx77 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i32 0, i64 12
  store i32 %sub76, i32* %arrayidx77, align 4
  %arrayidx78 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 1
  %73 = load i32, i32* %arrayidx78, align 4
  %arrayidx79 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 5
  %74 = load i32, i32* %arrayidx79, align 4
  %add80 = add nsw i32 %73, %74
  %arrayidx81 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i32 0, i64 1
  store i32 %add80, i32* %arrayidx81, align 4
  %arrayidx82 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 1
  %75 = load i32, i32* %arrayidx82, align 4
  %arrayidx83 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 5
  %76 = load i32, i32* %arrayidx83, align 4
  %sub84 = sub nsw i32 %75, %76
  %arrayidx85 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i32 0, i64 9
  store i32 %sub84, i32* %arrayidx85, align 4
  %arrayidx86 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 9
  %77 = load i32, i32* %arrayidx86, align 4
  %arrayidx87 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 13
  %78 = load i32, i32* %arrayidx87, align 4
  %add88 = add nsw i32 %77, %78
  %arrayidx89 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i32 0, i64 5
  store i32 %add88, i32* %arrayidx89, align 4
  %arrayidx90 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 13
  %79 = load i32, i32* %arrayidx90, align 4
  %arrayidx91 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 9
  %80 = load i32, i32* %arrayidx91, align 4
  %sub92 = sub nsw i32 %79, %80
  %arrayidx93 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i32 0, i64 13
  store i32 %sub92, i32* %arrayidx93, align 4
  %arrayidx94 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 2
  %81 = load i32, i32* %arrayidx94, align 4
  %arrayidx95 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 6
  %82 = load i32, i32* %arrayidx95, align 4
  %add96 = add nsw i32 %81, %82
  %arrayidx97 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i32 0, i64 2
  store i32 %add96, i32* %arrayidx97, align 4
  %arrayidx98 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 2
  %83 = load i32, i32* %arrayidx98, align 4
  %arrayidx99 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 6
  %84 = load i32, i32* %arrayidx99, align 4
  %sub100 = sub nsw i32 %83, %84
  %arrayidx101 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i32 0, i64 10
  store i32 %sub100, i32* %arrayidx101, align 4
  %arrayidx102 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 10
  %85 = load i32, i32* %arrayidx102, align 4
  %arrayidx103 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 14
  %86 = load i32, i32* %arrayidx103, align 4
  %add104 = add nsw i32 %85, %86
  %arrayidx105 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i32 0, i64 6
  store i32 %add104, i32* %arrayidx105, align 4
  %arrayidx106 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 14
  %87 = load i32, i32* %arrayidx106, align 4
  %arrayidx107 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 10
  %88 = load i32, i32* %arrayidx107, align 4
  %sub108 = sub nsw i32 %87, %88
  %arrayidx109 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i32 0, i64 14
  store i32 %sub108, i32* %arrayidx109, align 4
  %arrayidx110 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 3
  %89 = load i32, i32* %arrayidx110, align 4
  %arrayidx111 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 7
  %90 = load i32, i32* %arrayidx111, align 4
  %add112 = add nsw i32 %89, %90
  %arrayidx113 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i32 0, i64 3
  store i32 %add112, i32* %arrayidx113, align 4
  %arrayidx114 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 3
  %91 = load i32, i32* %arrayidx114, align 4
  %arrayidx115 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 7
  %92 = load i32, i32* %arrayidx115, align 4
  %sub116 = sub nsw i32 %91, %92
  %arrayidx117 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i32 0, i64 11
  store i32 %sub116, i32* %arrayidx117, align 4
  %arrayidx118 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 11
  %93 = load i32, i32* %arrayidx118, align 4
  %arrayidx119 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 15
  %94 = load i32, i32* %arrayidx119, align 4
  %add120 = add nsw i32 %93, %94
  %arrayidx121 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i32 0, i64 7
  store i32 %add120, i32* %arrayidx121, align 4
  %arrayidx122 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 15
  %95 = load i32, i32* %arrayidx122, align 4
  %arrayidx123 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 11
  %96 = load i32, i32* %arrayidx123, align 4
  %sub124 = sub nsw i32 %95, %96
  %arrayidx125 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i32 0, i64 15
  store i32 %sub124, i32* %arrayidx125, align 4
  %arrayidx126 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i32 0, i64 0
  %97 = load i32, i32* %arrayidx126, align 4
  %arrayidx127 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i32 0, i64 3
  %98 = load i32, i32* %arrayidx127, align 4
  %add128 = add nsw i32 %97, %98
  %arrayidx129 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 0
  store i32 %add128, i32* %arrayidx129, align 4
  %arrayidx130 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i32 0, i64 1
  %99 = load i32, i32* %arrayidx130, align 4
  %arrayidx131 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i32 0, i64 2
  %100 = load i32, i32* %arrayidx131, align 4
  %add132 = add nsw i32 %99, %100
  %arrayidx133 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 1
  store i32 %add132, i32* %arrayidx133, align 4
  %arrayidx134 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i32 0, i64 1
  %101 = load i32, i32* %arrayidx134, align 4
  %arrayidx135 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i32 0, i64 2
  %102 = load i32, i32* %arrayidx135, align 4
  %sub136 = sub nsw i32 %101, %102
  %arrayidx137 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 2
  store i32 %sub136, i32* %arrayidx137, align 4
  %arrayidx138 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i32 0, i64 0
  %103 = load i32, i32* %arrayidx138, align 4
  %arrayidx139 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i32 0, i64 3
  %104 = load i32, i32* %arrayidx139, align 4
  %sub140 = sub nsw i32 %103, %104
  %arrayidx141 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 3
  store i32 %sub140, i32* %arrayidx141, align 4
  %arrayidx142 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i32 0, i64 4
  %105 = load i32, i32* %arrayidx142, align 4
  %arrayidx143 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i32 0, i64 7
  %106 = load i32, i32* %arrayidx143, align 4
  %add144 = add nsw i32 %105, %106
  %arrayidx145 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 4
  store i32 %add144, i32* %arrayidx145, align 4
  %arrayidx146 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i32 0, i64 5
  %107 = load i32, i32* %arrayidx146, align 4
  %arrayidx147 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i32 0, i64 6
  %108 = load i32, i32* %arrayidx147, align 4
  %add148 = add nsw i32 %107, %108
  %arrayidx149 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 5
  store i32 %add148, i32* %arrayidx149, align 4
  %arrayidx150 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i32 0, i64 5
  %109 = load i32, i32* %arrayidx150, align 4
  %arrayidx151 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i32 0, i64 6
  %110 = load i32, i32* %arrayidx151, align 4
  %sub152 = sub nsw i32 %109, %110
  %arrayidx153 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 6
  store i32 %sub152, i32* %arrayidx153, align 4
  %arrayidx154 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i32 0, i64 4
  %111 = load i32, i32* %arrayidx154, align 4
  %arrayidx155 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i32 0, i64 7
  %112 = load i32, i32* %arrayidx155, align 4
  %sub156 = sub nsw i32 %111, %112
  %arrayidx157 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 7
  store i32 %sub156, i32* %arrayidx157, align 4
  %arrayidx158 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i32 0, i64 8
  %113 = load i32, i32* %arrayidx158, align 4
  %arrayidx159 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i32 0, i64 11
  %114 = load i32, i32* %arrayidx159, align 4
  %add160 = add nsw i32 %113, %114
  %arrayidx161 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 8
  store i32 %add160, i32* %arrayidx161, align 4
  %arrayidx162 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i32 0, i64 9
  %115 = load i32, i32* %arrayidx162, align 4
  %arrayidx163 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i32 0, i64 10
  %116 = load i32, i32* %arrayidx163, align 4
  %add164 = add nsw i32 %115, %116
  %arrayidx165 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 9
  store i32 %add164, i32* %arrayidx165, align 4
  %arrayidx166 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i32 0, i64 9
  %117 = load i32, i32* %arrayidx166, align 4
  %arrayidx167 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i32 0, i64 10
  %118 = load i32, i32* %arrayidx167, align 4
  %sub168 = sub nsw i32 %117, %118
  %arrayidx169 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 10
  store i32 %sub168, i32* %arrayidx169, align 4
  %arrayidx170 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i32 0, i64 8
  %119 = load i32, i32* %arrayidx170, align 4
  %arrayidx171 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i32 0, i64 11
  %120 = load i32, i32* %arrayidx171, align 4
  %sub172 = sub nsw i32 %119, %120
  %arrayidx173 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 11
  store i32 %sub172, i32* %arrayidx173, align 4
  %arrayidx174 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i32 0, i64 12
  %121 = load i32, i32* %arrayidx174, align 4
  %arrayidx175 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i32 0, i64 15
  %122 = load i32, i32* %arrayidx175, align 4
  %add176 = add nsw i32 %121, %122
  %arrayidx177 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 12
  store i32 %add176, i32* %arrayidx177, align 4
  %arrayidx178 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i32 0, i64 13
  %123 = load i32, i32* %arrayidx178, align 4
  %arrayidx179 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i32 0, i64 14
  %124 = load i32, i32* %arrayidx179, align 4
  %add180 = add nsw i32 %123, %124
  %arrayidx181 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 13
  store i32 %add180, i32* %arrayidx181, align 4
  %arrayidx182 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i32 0, i64 13
  %125 = load i32, i32* %arrayidx182, align 4
  %arrayidx183 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i32 0, i64 14
  %126 = load i32, i32* %arrayidx183, align 4
  %sub184 = sub nsw i32 %125, %126
  %arrayidx185 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 14
  store i32 %sub184, i32* %arrayidx185, align 4
  %arrayidx186 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i32 0, i64 12
  %127 = load i32, i32* %arrayidx186, align 4
  %arrayidx187 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i32 0, i64 15
  %128 = load i32, i32* %arrayidx187, align 4
  %sub188 = sub nsw i32 %127, %128
  %arrayidx189 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 15
  store i32 %sub188, i32* %arrayidx189, align 4
  %arrayidx190 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 0
  %129 = load i32, i32* %arrayidx190, align 4
  %arrayidx191 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 1
  %130 = load i32, i32* %arrayidx191, align 4
  %add192 = add nsw i32 %129, %130
  %arrayidx193 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i32 0, i64 0
  store i32 %add192, i32* %arrayidx193, align 4
  %arrayidx194 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 0
  %131 = load i32, i32* %arrayidx194, align 4
  %arrayidx195 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 1
  %132 = load i32, i32* %arrayidx195, align 4
  %sub196 = sub nsw i32 %131, %132
  %arrayidx197 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i32 0, i64 1
  store i32 %sub196, i32* %arrayidx197, align 4
  %arrayidx198 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 2
  %133 = load i32, i32* %arrayidx198, align 4
  %arrayidx199 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 3
  %134 = load i32, i32* %arrayidx199, align 4
  %add200 = add nsw i32 %133, %134
  %arrayidx201 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i32 0, i64 2
  store i32 %add200, i32* %arrayidx201, align 4
  %arrayidx202 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 3
  %135 = load i32, i32* %arrayidx202, align 4
  %arrayidx203 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 2
  %136 = load i32, i32* %arrayidx203, align 4
  %sub204 = sub nsw i32 %135, %136
  %arrayidx205 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i32 0, i64 3
  store i32 %sub204, i32* %arrayidx205, align 4
  %arrayidx206 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 4
  %137 = load i32, i32* %arrayidx206, align 4
  %arrayidx207 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 5
  %138 = load i32, i32* %arrayidx207, align 4
  %add208 = add nsw i32 %137, %138
  %arrayidx209 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i32 0, i64 4
  store i32 %add208, i32* %arrayidx209, align 4
  %arrayidx210 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 4
  %139 = load i32, i32* %arrayidx210, align 4
  %arrayidx211 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 5
  %140 = load i32, i32* %arrayidx211, align 4
  %sub212 = sub nsw i32 %139, %140
  %arrayidx213 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i32 0, i64 5
  store i32 %sub212, i32* %arrayidx213, align 4
  %arrayidx214 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 6
  %141 = load i32, i32* %arrayidx214, align 4
  %arrayidx215 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 7
  %142 = load i32, i32* %arrayidx215, align 4
  %add216 = add nsw i32 %141, %142
  %arrayidx217 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i32 0, i64 6
  store i32 %add216, i32* %arrayidx217, align 4
  %arrayidx218 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 7
  %143 = load i32, i32* %arrayidx218, align 4
  %arrayidx219 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 6
  %144 = load i32, i32* %arrayidx219, align 4
  %sub220 = sub nsw i32 %143, %144
  %arrayidx221 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i32 0, i64 7
  store i32 %sub220, i32* %arrayidx221, align 4
  %arrayidx222 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 8
  %145 = load i32, i32* %arrayidx222, align 4
  %arrayidx223 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 9
  %146 = load i32, i32* %arrayidx223, align 4
  %add224 = add nsw i32 %145, %146
  %arrayidx225 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i32 0, i64 8
  store i32 %add224, i32* %arrayidx225, align 4
  %arrayidx226 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 8
  %147 = load i32, i32* %arrayidx226, align 4
  %arrayidx227 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 9
  %148 = load i32, i32* %arrayidx227, align 4
  %sub228 = sub nsw i32 %147, %148
  %arrayidx229 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i32 0, i64 9
  store i32 %sub228, i32* %arrayidx229, align 4
  %arrayidx230 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 10
  %149 = load i32, i32* %arrayidx230, align 4
  %arrayidx231 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 11
  %150 = load i32, i32* %arrayidx231, align 4
  %add232 = add nsw i32 %149, %150
  %arrayidx233 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i32 0, i64 10
  store i32 %add232, i32* %arrayidx233, align 4
  %arrayidx234 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 11
  %151 = load i32, i32* %arrayidx234, align 4
  %arrayidx235 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 10
  %152 = load i32, i32* %arrayidx235, align 4
  %sub236 = sub nsw i32 %151, %152
  %arrayidx237 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i32 0, i64 11
  store i32 %sub236, i32* %arrayidx237, align 4
  %arrayidx238 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 12
  %153 = load i32, i32* %arrayidx238, align 4
  %arrayidx239 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 13
  %154 = load i32, i32* %arrayidx239, align 4
  %add240 = add nsw i32 %153, %154
  %arrayidx241 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i32 0, i64 12
  store i32 %add240, i32* %arrayidx241, align 4
  %arrayidx242 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 12
  %155 = load i32, i32* %arrayidx242, align 4
  %arrayidx243 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 13
  %156 = load i32, i32* %arrayidx243, align 4
  %sub244 = sub nsw i32 %155, %156
  %arrayidx245 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i32 0, i64 13
  store i32 %sub244, i32* %arrayidx245, align 4
  %arrayidx246 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 14
  %157 = load i32, i32* %arrayidx246, align 4
  %arrayidx247 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 15
  %158 = load i32, i32* %arrayidx247, align 4
  %add248 = add nsw i32 %157, %158
  %arrayidx249 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i32 0, i64 14
  store i32 %add248, i32* %arrayidx249, align 4
  %arrayidx250 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 15
  %159 = load i32, i32* %arrayidx250, align 4
  %arrayidx251 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i32 0, i64 14
  %160 = load i32, i32* %arrayidx251, align 4
  %sub252 = sub nsw i32 %159, %160
  %arrayidx253 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i32 0, i64 15
  store i32 %sub252, i32* %arrayidx253, align 4
  store i32 0, i32* %k, align 4
  %arrayidx254 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i32 0, i64 0
  %161 = load i32, i32* %arrayidx254, align 4
  store i32 %161, i32* %dd, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then
  %162 = load i32, i32* %k, align 4
  %cmp = icmp slt i32 %162, 16
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %163 = load i32, i32* %dd, align 4
  %cmp255 = icmp slt i32 %163, 0
  br i1 %cmp255, label %cond.true, label %cond.false

cond.true:                                        ; preds = %for.body
  %164 = load i32, i32* %dd, align 4
  %sub256 = sub nsw i32 0, %164
  br label %cond.end

cond.false:                                       ; preds = %for.body
  %165 = load i32, i32* %dd, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub256, %cond.true ], [ %165, %cond.false ]
  %166 = load i32, i32* %satd, align 4
  %add257 = add nsw i32 %166, %cond
  store i32 %add257, i32* %satd, align 4
  br label %for.inc

for.inc:                                          ; preds = %cond.end
  %167 = load i32, i32* %k, align 4
  %inc = add nsw i32 %167, 1
  store i32 %inc, i32* %k, align 4
  %idxprom = sext i32 %inc to i64
  %arrayidx258 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i32 0, i64 %idxprom
  %168 = load i32, i32* %arrayidx258, align 4
  store i32 %168, i32* %dd, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %169 = load i32, i32* %satd, align 4
  %add259 = add nsw i32 %169, 1
  %shr = ashr i32 %add259, 1
  store i32 %shr, i32* %satd, align 4
  br label %if.end

if.else:                                          ; preds = %entry
  store i32 0, i32* %k, align 4
  br label %for.cond.260

for.cond.260:                                     ; preds = %for.inc.268, %if.else
  %170 = load i32, i32* %k, align 4
  %cmp261 = icmp slt i32 %170, 16
  br i1 %cmp261, label %for.body.262, label %for.end.270

for.body.262:                                     ; preds = %for.cond.260
  %171 = load i32, i32* %k, align 4
  %idxprom263 = sext i32 %171 to i64
  %172 = load i32*, i32** %diff.addr, align 8
  %arrayidx264 = getelementptr inbounds i32, i32* %172, i64 %idxprom263
  %173 = load i32, i32* %arrayidx264, align 4
  %idxprom265 = sext i32 %173 to i64
  %174 = load i32*, i32** @byte_abs, align 8
  %arrayidx266 = getelementptr inbounds i32, i32* %174, i64 %idxprom265
  %175 = load i32, i32* %arrayidx266, align 4
  %176 = load i32, i32* %satd, align 4
  %add267 = add nsw i32 %176, %175
  store i32 %add267, i32* %satd, align 4
  br label %for.inc.268

for.inc.268:                                      ; preds = %for.body.262
  %177 = load i32, i32* %k, align 4
  %inc269 = add nsw i32 %177, 1
  store i32 %inc269, i32* %k, align 4
  br label %for.cond.260

for.end.270:                                      ; preds = %for.cond.260
  br label %if.end

if.end:                                           ; preds = %for.end.270, %for.end
  %178 = load i32, i32* %satd, align 4
  ret i32 %178
}

; Function Attrs: nounwind uwtable
define i32 @SATD8X8(i32* %diff, i32 %use_hadamard) #0 {
entry:
  %diff.addr = alloca i32*, align 8
  %use_hadamard.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %sad = alloca i32, align 4
  %m1 = alloca [8 x [8 x i32]], align 16
  %m2 = alloca [8 x [8 x i32]], align 16
  %m3 = alloca [8 x [8 x i32]], align 16
  store i32* %diff, i32** %diff.addr, align 8
  store i32 %use_hadamard, i32* %use_hadamard.addr, align 4
  store i32 0, i32* %sad, align 4
  %0 = load i32, i32* %use_hadamard.addr, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store i32 0, i32* %j, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then
  %1 = load i32, i32* %j, align 4
  %cmp = icmp slt i32 %1, 8
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %j, align 4
  %shl = shl i32 %2, 3
  %idxprom = sext i32 %shl to i64
  %3 = load i32*, i32** %diff.addr, align 8
  %arrayidx = getelementptr inbounds i32, i32* %3, i64 %idxprom
  %4 = load i32, i32* %arrayidx, align 4
  %5 = load i32, i32* %j, align 4
  %shl1 = shl i32 %5, 3
  %add = add nsw i32 %shl1, 4
  %idxprom2 = sext i32 %add to i64
  %6 = load i32*, i32** %diff.addr, align 8
  %arrayidx3 = getelementptr inbounds i32, i32* %6, i64 %idxprom2
  %7 = load i32, i32* %arrayidx3, align 4
  %add4 = add nsw i32 %4, %7
  %8 = load i32, i32* %j, align 4
  %idxprom5 = sext i32 %8 to i64
  %arrayidx6 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i32 0, i64 %idxprom5
  %arrayidx7 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx6, i32 0, i64 0
  store i32 %add4, i32* %arrayidx7, align 4
  %9 = load i32, i32* %j, align 4
  %shl8 = shl i32 %9, 3
  %add9 = add nsw i32 %shl8, 1
  %idxprom10 = sext i32 %add9 to i64
  %10 = load i32*, i32** %diff.addr, align 8
  %arrayidx11 = getelementptr inbounds i32, i32* %10, i64 %idxprom10
  %11 = load i32, i32* %arrayidx11, align 4
  %12 = load i32, i32* %j, align 4
  %shl12 = shl i32 %12, 3
  %add13 = add nsw i32 %shl12, 5
  %idxprom14 = sext i32 %add13 to i64
  %13 = load i32*, i32** %diff.addr, align 8
  %arrayidx15 = getelementptr inbounds i32, i32* %13, i64 %idxprom14
  %14 = load i32, i32* %arrayidx15, align 4
  %add16 = add nsw i32 %11, %14
  %15 = load i32, i32* %j, align 4
  %idxprom17 = sext i32 %15 to i64
  %arrayidx18 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i32 0, i64 %idxprom17
  %arrayidx19 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx18, i32 0, i64 1
  store i32 %add16, i32* %arrayidx19, align 4
  %16 = load i32, i32* %j, align 4
  %shl20 = shl i32 %16, 3
  %add21 = add nsw i32 %shl20, 2
  %idxprom22 = sext i32 %add21 to i64
  %17 = load i32*, i32** %diff.addr, align 8
  %arrayidx23 = getelementptr inbounds i32, i32* %17, i64 %idxprom22
  %18 = load i32, i32* %arrayidx23, align 4
  %19 = load i32, i32* %j, align 4
  %shl24 = shl i32 %19, 3
  %add25 = add nsw i32 %shl24, 6
  %idxprom26 = sext i32 %add25 to i64
  %20 = load i32*, i32** %diff.addr, align 8
  %arrayidx27 = getelementptr inbounds i32, i32* %20, i64 %idxprom26
  %21 = load i32, i32* %arrayidx27, align 4
  %add28 = add nsw i32 %18, %21
  %22 = load i32, i32* %j, align 4
  %idxprom29 = sext i32 %22 to i64
  %arrayidx30 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i32 0, i64 %idxprom29
  %arrayidx31 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx30, i32 0, i64 2
  store i32 %add28, i32* %arrayidx31, align 4
  %23 = load i32, i32* %j, align 4
  %shl32 = shl i32 %23, 3
  %add33 = add nsw i32 %shl32, 3
  %idxprom34 = sext i32 %add33 to i64
  %24 = load i32*, i32** %diff.addr, align 8
  %arrayidx35 = getelementptr inbounds i32, i32* %24, i64 %idxprom34
  %25 = load i32, i32* %arrayidx35, align 4
  %26 = load i32, i32* %j, align 4
  %shl36 = shl i32 %26, 3
  %add37 = add nsw i32 %shl36, 7
  %idxprom38 = sext i32 %add37 to i64
  %27 = load i32*, i32** %diff.addr, align 8
  %arrayidx39 = getelementptr inbounds i32, i32* %27, i64 %idxprom38
  %28 = load i32, i32* %arrayidx39, align 4
  %add40 = add nsw i32 %25, %28
  %29 = load i32, i32* %j, align 4
  %idxprom41 = sext i32 %29 to i64
  %arrayidx42 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i32 0, i64 %idxprom41
  %arrayidx43 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx42, i32 0, i64 3
  store i32 %add40, i32* %arrayidx43, align 4
  %30 = load i32, i32* %j, align 4
  %shl44 = shl i32 %30, 3
  %idxprom45 = sext i32 %shl44 to i64
  %31 = load i32*, i32** %diff.addr, align 8
  %arrayidx46 = getelementptr inbounds i32, i32* %31, i64 %idxprom45
  %32 = load i32, i32* %arrayidx46, align 4
  %33 = load i32, i32* %j, align 4
  %shl47 = shl i32 %33, 3
  %add48 = add nsw i32 %shl47, 4
  %idxprom49 = sext i32 %add48 to i64
  %34 = load i32*, i32** %diff.addr, align 8
  %arrayidx50 = getelementptr inbounds i32, i32* %34, i64 %idxprom49
  %35 = load i32, i32* %arrayidx50, align 4
  %sub = sub nsw i32 %32, %35
  %36 = load i32, i32* %j, align 4
  %idxprom51 = sext i32 %36 to i64
  %arrayidx52 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i32 0, i64 %idxprom51
  %arrayidx53 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx52, i32 0, i64 4
  store i32 %sub, i32* %arrayidx53, align 4
  %37 = load i32, i32* %j, align 4
  %shl54 = shl i32 %37, 3
  %add55 = add nsw i32 %shl54, 1
  %idxprom56 = sext i32 %add55 to i64
  %38 = load i32*, i32** %diff.addr, align 8
  %arrayidx57 = getelementptr inbounds i32, i32* %38, i64 %idxprom56
  %39 = load i32, i32* %arrayidx57, align 4
  %40 = load i32, i32* %j, align 4
  %shl58 = shl i32 %40, 3
  %add59 = add nsw i32 %shl58, 5
  %idxprom60 = sext i32 %add59 to i64
  %41 = load i32*, i32** %diff.addr, align 8
  %arrayidx61 = getelementptr inbounds i32, i32* %41, i64 %idxprom60
  %42 = load i32, i32* %arrayidx61, align 4
  %sub62 = sub nsw i32 %39, %42
  %43 = load i32, i32* %j, align 4
  %idxprom63 = sext i32 %43 to i64
  %arrayidx64 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i32 0, i64 %idxprom63
  %arrayidx65 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx64, i32 0, i64 5
  store i32 %sub62, i32* %arrayidx65, align 4
  %44 = load i32, i32* %j, align 4
  %shl66 = shl i32 %44, 3
  %add67 = add nsw i32 %shl66, 2
  %idxprom68 = sext i32 %add67 to i64
  %45 = load i32*, i32** %diff.addr, align 8
  %arrayidx69 = getelementptr inbounds i32, i32* %45, i64 %idxprom68
  %46 = load i32, i32* %arrayidx69, align 4
  %47 = load i32, i32* %j, align 4
  %shl70 = shl i32 %47, 3
  %add71 = add nsw i32 %shl70, 6
  %idxprom72 = sext i32 %add71 to i64
  %48 = load i32*, i32** %diff.addr, align 8
  %arrayidx73 = getelementptr inbounds i32, i32* %48, i64 %idxprom72
  %49 = load i32, i32* %arrayidx73, align 4
  %sub74 = sub nsw i32 %46, %49
  %50 = load i32, i32* %j, align 4
  %idxprom75 = sext i32 %50 to i64
  %arrayidx76 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i32 0, i64 %idxprom75
  %arrayidx77 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx76, i32 0, i64 6
  store i32 %sub74, i32* %arrayidx77, align 4
  %51 = load i32, i32* %j, align 4
  %shl78 = shl i32 %51, 3
  %add79 = add nsw i32 %shl78, 3
  %idxprom80 = sext i32 %add79 to i64
  %52 = load i32*, i32** %diff.addr, align 8
  %arrayidx81 = getelementptr inbounds i32, i32* %52, i64 %idxprom80
  %53 = load i32, i32* %arrayidx81, align 4
  %54 = load i32, i32* %j, align 4
  %shl82 = shl i32 %54, 3
  %add83 = add nsw i32 %shl82, 7
  %idxprom84 = sext i32 %add83 to i64
  %55 = load i32*, i32** %diff.addr, align 8
  %arrayidx85 = getelementptr inbounds i32, i32* %55, i64 %idxprom84
  %56 = load i32, i32* %arrayidx85, align 4
  %sub86 = sub nsw i32 %53, %56
  %57 = load i32, i32* %j, align 4
  %idxprom87 = sext i32 %57 to i64
  %arrayidx88 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i32 0, i64 %idxprom87
  %arrayidx89 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx88, i32 0, i64 7
  store i32 %sub86, i32* %arrayidx89, align 4
  %58 = load i32, i32* %j, align 4
  %idxprom90 = sext i32 %58 to i64
  %arrayidx91 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i32 0, i64 %idxprom90
  %arrayidx92 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx91, i32 0, i64 0
  %59 = load i32, i32* %arrayidx92, align 4
  %60 = load i32, i32* %j, align 4
  %idxprom93 = sext i32 %60 to i64
  %arrayidx94 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i32 0, i64 %idxprom93
  %arrayidx95 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx94, i32 0, i64 2
  %61 = load i32, i32* %arrayidx95, align 4
  %add96 = add nsw i32 %59, %61
  %62 = load i32, i32* %j, align 4
  %idxprom97 = sext i32 %62 to i64
  %arrayidx98 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i32 0, i64 %idxprom97
  %arrayidx99 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx98, i32 0, i64 0
  store i32 %add96, i32* %arrayidx99, align 4
  %63 = load i32, i32* %j, align 4
  %idxprom100 = sext i32 %63 to i64
  %arrayidx101 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i32 0, i64 %idxprom100
  %arrayidx102 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx101, i32 0, i64 1
  %64 = load i32, i32* %arrayidx102, align 4
  %65 = load i32, i32* %j, align 4
  %idxprom103 = sext i32 %65 to i64
  %arrayidx104 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i32 0, i64 %idxprom103
  %arrayidx105 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx104, i32 0, i64 3
  %66 = load i32, i32* %arrayidx105, align 4
  %add106 = add nsw i32 %64, %66
  %67 = load i32, i32* %j, align 4
  %idxprom107 = sext i32 %67 to i64
  %arrayidx108 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i32 0, i64 %idxprom107
  %arrayidx109 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx108, i32 0, i64 1
  store i32 %add106, i32* %arrayidx109, align 4
  %68 = load i32, i32* %j, align 4
  %idxprom110 = sext i32 %68 to i64
  %arrayidx111 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i32 0, i64 %idxprom110
  %arrayidx112 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx111, i32 0, i64 0
  %69 = load i32, i32* %arrayidx112, align 4
  %70 = load i32, i32* %j, align 4
  %idxprom113 = sext i32 %70 to i64
  %arrayidx114 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i32 0, i64 %idxprom113
  %arrayidx115 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx114, i32 0, i64 2
  %71 = load i32, i32* %arrayidx115, align 4
  %sub116 = sub nsw i32 %69, %71
  %72 = load i32, i32* %j, align 4
  %idxprom117 = sext i32 %72 to i64
  %arrayidx118 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i32 0, i64 %idxprom117
  %arrayidx119 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx118, i32 0, i64 2
  store i32 %sub116, i32* %arrayidx119, align 4
  %73 = load i32, i32* %j, align 4
  %idxprom120 = sext i32 %73 to i64
  %arrayidx121 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i32 0, i64 %idxprom120
  %arrayidx122 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx121, i32 0, i64 1
  %74 = load i32, i32* %arrayidx122, align 4
  %75 = load i32, i32* %j, align 4
  %idxprom123 = sext i32 %75 to i64
  %arrayidx124 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i32 0, i64 %idxprom123
  %arrayidx125 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx124, i32 0, i64 3
  %76 = load i32, i32* %arrayidx125, align 4
  %sub126 = sub nsw i32 %74, %76
  %77 = load i32, i32* %j, align 4
  %idxprom127 = sext i32 %77 to i64
  %arrayidx128 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i32 0, i64 %idxprom127
  %arrayidx129 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx128, i32 0, i64 3
  store i32 %sub126, i32* %arrayidx129, align 4
  %78 = load i32, i32* %j, align 4
  %idxprom130 = sext i32 %78 to i64
  %arrayidx131 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i32 0, i64 %idxprom130
  %arrayidx132 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx131, i32 0, i64 4
  %79 = load i32, i32* %arrayidx132, align 4
  %80 = load i32, i32* %j, align 4
  %idxprom133 = sext i32 %80 to i64
  %arrayidx134 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i32 0, i64 %idxprom133
  %arrayidx135 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx134, i32 0, i64 6
  %81 = load i32, i32* %arrayidx135, align 4
  %add136 = add nsw i32 %79, %81
  %82 = load i32, i32* %j, align 4
  %idxprom137 = sext i32 %82 to i64
  %arrayidx138 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i32 0, i64 %idxprom137
  %arrayidx139 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx138, i32 0, i64 4
  store i32 %add136, i32* %arrayidx139, align 4
  %83 = load i32, i32* %j, align 4
  %idxprom140 = sext i32 %83 to i64
  %arrayidx141 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i32 0, i64 %idxprom140
  %arrayidx142 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx141, i32 0, i64 5
  %84 = load i32, i32* %arrayidx142, align 4
  %85 = load i32, i32* %j, align 4
  %idxprom143 = sext i32 %85 to i64
  %arrayidx144 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i32 0, i64 %idxprom143
  %arrayidx145 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx144, i32 0, i64 7
  %86 = load i32, i32* %arrayidx145, align 4
  %add146 = add nsw i32 %84, %86
  %87 = load i32, i32* %j, align 4
  %idxprom147 = sext i32 %87 to i64
  %arrayidx148 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i32 0, i64 %idxprom147
  %arrayidx149 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx148, i32 0, i64 5
  store i32 %add146, i32* %arrayidx149, align 4
  %88 = load i32, i32* %j, align 4
  %idxprom150 = sext i32 %88 to i64
  %arrayidx151 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i32 0, i64 %idxprom150
  %arrayidx152 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx151, i32 0, i64 4
  %89 = load i32, i32* %arrayidx152, align 4
  %90 = load i32, i32* %j, align 4
  %idxprom153 = sext i32 %90 to i64
  %arrayidx154 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i32 0, i64 %idxprom153
  %arrayidx155 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx154, i32 0, i64 6
  %91 = load i32, i32* %arrayidx155, align 4
  %sub156 = sub nsw i32 %89, %91
  %92 = load i32, i32* %j, align 4
  %idxprom157 = sext i32 %92 to i64
  %arrayidx158 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i32 0, i64 %idxprom157
  %arrayidx159 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx158, i32 0, i64 6
  store i32 %sub156, i32* %arrayidx159, align 4
  %93 = load i32, i32* %j, align 4
  %idxprom160 = sext i32 %93 to i64
  %arrayidx161 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i32 0, i64 %idxprom160
  %arrayidx162 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx161, i32 0, i64 5
  %94 = load i32, i32* %arrayidx162, align 4
  %95 = load i32, i32* %j, align 4
  %idxprom163 = sext i32 %95 to i64
  %arrayidx164 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i32 0, i64 %idxprom163
  %arrayidx165 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx164, i32 0, i64 7
  %96 = load i32, i32* %arrayidx165, align 4
  %sub166 = sub nsw i32 %94, %96
  %97 = load i32, i32* %j, align 4
  %idxprom167 = sext i32 %97 to i64
  %arrayidx168 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i32 0, i64 %idxprom167
  %arrayidx169 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx168, i32 0, i64 7
  store i32 %sub166, i32* %arrayidx169, align 4
  %98 = load i32, i32* %j, align 4
  %idxprom170 = sext i32 %98 to i64
  %arrayidx171 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i32 0, i64 %idxprom170
  %arrayidx172 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx171, i32 0, i64 0
  %99 = load i32, i32* %arrayidx172, align 4
  %100 = load i32, i32* %j, align 4
  %idxprom173 = sext i32 %100 to i64
  %arrayidx174 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i32 0, i64 %idxprom173
  %arrayidx175 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx174, i32 0, i64 1
  %101 = load i32, i32* %arrayidx175, align 4
  %add176 = add nsw i32 %99, %101
  %102 = load i32, i32* %j, align 4
  %idxprom177 = sext i32 %102 to i64
  %arrayidx178 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i32 0, i64 %idxprom177
  %arrayidx179 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx178, i32 0, i64 0
  store i32 %add176, i32* %arrayidx179, align 4
  %103 = load i32, i32* %j, align 4
  %idxprom180 = sext i32 %103 to i64
  %arrayidx181 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i32 0, i64 %idxprom180
  %arrayidx182 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx181, i32 0, i64 0
  %104 = load i32, i32* %arrayidx182, align 4
  %105 = load i32, i32* %j, align 4
  %idxprom183 = sext i32 %105 to i64
  %arrayidx184 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i32 0, i64 %idxprom183
  %arrayidx185 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx184, i32 0, i64 1
  %106 = load i32, i32* %arrayidx185, align 4
  %sub186 = sub nsw i32 %104, %106
  %107 = load i32, i32* %j, align 4
  %idxprom187 = sext i32 %107 to i64
  %arrayidx188 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i32 0, i64 %idxprom187
  %arrayidx189 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx188, i32 0, i64 1
  store i32 %sub186, i32* %arrayidx189, align 4
  %108 = load i32, i32* %j, align 4
  %idxprom190 = sext i32 %108 to i64
  %arrayidx191 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i32 0, i64 %idxprom190
  %arrayidx192 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx191, i32 0, i64 2
  %109 = load i32, i32* %arrayidx192, align 4
  %110 = load i32, i32* %j, align 4
  %idxprom193 = sext i32 %110 to i64
  %arrayidx194 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i32 0, i64 %idxprom193
  %arrayidx195 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx194, i32 0, i64 3
  %111 = load i32, i32* %arrayidx195, align 4
  %add196 = add nsw i32 %109, %111
  %112 = load i32, i32* %j, align 4
  %idxprom197 = sext i32 %112 to i64
  %arrayidx198 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i32 0, i64 %idxprom197
  %arrayidx199 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx198, i32 0, i64 2
  store i32 %add196, i32* %arrayidx199, align 4
  %113 = load i32, i32* %j, align 4
  %idxprom200 = sext i32 %113 to i64
  %arrayidx201 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i32 0, i64 %idxprom200
  %arrayidx202 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx201, i32 0, i64 2
  %114 = load i32, i32* %arrayidx202, align 4
  %115 = load i32, i32* %j, align 4
  %idxprom203 = sext i32 %115 to i64
  %arrayidx204 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i32 0, i64 %idxprom203
  %arrayidx205 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx204, i32 0, i64 3
  %116 = load i32, i32* %arrayidx205, align 4
  %sub206 = sub nsw i32 %114, %116
  %117 = load i32, i32* %j, align 4
  %idxprom207 = sext i32 %117 to i64
  %arrayidx208 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i32 0, i64 %idxprom207
  %arrayidx209 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx208, i32 0, i64 3
  store i32 %sub206, i32* %arrayidx209, align 4
  %118 = load i32, i32* %j, align 4
  %idxprom210 = sext i32 %118 to i64
  %arrayidx211 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i32 0, i64 %idxprom210
  %arrayidx212 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx211, i32 0, i64 4
  %119 = load i32, i32* %arrayidx212, align 4
  %120 = load i32, i32* %j, align 4
  %idxprom213 = sext i32 %120 to i64
  %arrayidx214 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i32 0, i64 %idxprom213
  %arrayidx215 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx214, i32 0, i64 5
  %121 = load i32, i32* %arrayidx215, align 4
  %add216 = add nsw i32 %119, %121
  %122 = load i32, i32* %j, align 4
  %idxprom217 = sext i32 %122 to i64
  %arrayidx218 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i32 0, i64 %idxprom217
  %arrayidx219 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx218, i32 0, i64 4
  store i32 %add216, i32* %arrayidx219, align 4
  %123 = load i32, i32* %j, align 4
  %idxprom220 = sext i32 %123 to i64
  %arrayidx221 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i32 0, i64 %idxprom220
  %arrayidx222 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx221, i32 0, i64 4
  %124 = load i32, i32* %arrayidx222, align 4
  %125 = load i32, i32* %j, align 4
  %idxprom223 = sext i32 %125 to i64
  %arrayidx224 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i32 0, i64 %idxprom223
  %arrayidx225 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx224, i32 0, i64 5
  %126 = load i32, i32* %arrayidx225, align 4
  %sub226 = sub nsw i32 %124, %126
  %127 = load i32, i32* %j, align 4
  %idxprom227 = sext i32 %127 to i64
  %arrayidx228 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i32 0, i64 %idxprom227
  %arrayidx229 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx228, i32 0, i64 5
  store i32 %sub226, i32* %arrayidx229, align 4
  %128 = load i32, i32* %j, align 4
  %idxprom230 = sext i32 %128 to i64
  %arrayidx231 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i32 0, i64 %idxprom230
  %arrayidx232 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx231, i32 0, i64 6
  %129 = load i32, i32* %arrayidx232, align 4
  %130 = load i32, i32* %j, align 4
  %idxprom233 = sext i32 %130 to i64
  %arrayidx234 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i32 0, i64 %idxprom233
  %arrayidx235 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx234, i32 0, i64 7
  %131 = load i32, i32* %arrayidx235, align 4
  %add236 = add nsw i32 %129, %131
  %132 = load i32, i32* %j, align 4
  %idxprom237 = sext i32 %132 to i64
  %arrayidx238 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i32 0, i64 %idxprom237
  %arrayidx239 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx238, i32 0, i64 6
  store i32 %add236, i32* %arrayidx239, align 4
  %133 = load i32, i32* %j, align 4
  %idxprom240 = sext i32 %133 to i64
  %arrayidx241 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i32 0, i64 %idxprom240
  %arrayidx242 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx241, i32 0, i64 6
  %134 = load i32, i32* %arrayidx242, align 4
  %135 = load i32, i32* %j, align 4
  %idxprom243 = sext i32 %135 to i64
  %arrayidx244 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i32 0, i64 %idxprom243
  %arrayidx245 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx244, i32 0, i64 7
  %136 = load i32, i32* %arrayidx245, align 4
  %sub246 = sub nsw i32 %134, %136
  %137 = load i32, i32* %j, align 4
  %idxprom247 = sext i32 %137 to i64
  %arrayidx248 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i32 0, i64 %idxprom247
  %arrayidx249 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx248, i32 0, i64 7
  store i32 %sub246, i32* %arrayidx249, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %138 = load i32, i32* %j, align 4
  %inc = add nsw i32 %138, 1
  store i32 %inc, i32* %j, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4
  br label %for.cond.250

for.cond.250:                                     ; preds = %for.inc.493, %for.end
  %139 = load i32, i32* %i, align 4
  %cmp251 = icmp slt i32 %139, 8
  br i1 %cmp251, label %for.body.252, label %for.end.495

for.body.252:                                     ; preds = %for.cond.250
  %140 = load i32, i32* %i, align 4
  %idxprom253 = sext i32 %140 to i64
  %arrayidx254 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i32 0, i64 0
  %arrayidx255 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx254, i32 0, i64 %idxprom253
  %141 = load i32, i32* %arrayidx255, align 4
  %142 = load i32, i32* %i, align 4
  %idxprom256 = sext i32 %142 to i64
  %arrayidx257 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i32 0, i64 4
  %arrayidx258 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx257, i32 0, i64 %idxprom256
  %143 = load i32, i32* %arrayidx258, align 4
  %add259 = add nsw i32 %141, %143
  %144 = load i32, i32* %i, align 4
  %idxprom260 = sext i32 %144 to i64
  %arrayidx261 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m3, i32 0, i64 0
  %arrayidx262 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx261, i32 0, i64 %idxprom260
  store i32 %add259, i32* %arrayidx262, align 4
  %145 = load i32, i32* %i, align 4
  %idxprom263 = sext i32 %145 to i64
  %arrayidx264 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i32 0, i64 1
  %arrayidx265 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx264, i32 0, i64 %idxprom263
  %146 = load i32, i32* %arrayidx265, align 4
  %147 = load i32, i32* %i, align 4
  %idxprom266 = sext i32 %147 to i64
  %arrayidx267 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i32 0, i64 5
  %arrayidx268 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx267, i32 0, i64 %idxprom266
  %148 = load i32, i32* %arrayidx268, align 4
  %add269 = add nsw i32 %146, %148
  %149 = load i32, i32* %i, align 4
  %idxprom270 = sext i32 %149 to i64
  %arrayidx271 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m3, i32 0, i64 1
  %arrayidx272 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx271, i32 0, i64 %idxprom270
  store i32 %add269, i32* %arrayidx272, align 4
  %150 = load i32, i32* %i, align 4
  %idxprom273 = sext i32 %150 to i64
  %arrayidx274 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i32 0, i64 2
  %arrayidx275 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx274, i32 0, i64 %idxprom273
  %151 = load i32, i32* %arrayidx275, align 4
  %152 = load i32, i32* %i, align 4
  %idxprom276 = sext i32 %152 to i64
  %arrayidx277 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i32 0, i64 6
  %arrayidx278 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx277, i32 0, i64 %idxprom276
  %153 = load i32, i32* %arrayidx278, align 4
  %add279 = add nsw i32 %151, %153
  %154 = load i32, i32* %i, align 4
  %idxprom280 = sext i32 %154 to i64
  %arrayidx281 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m3, i32 0, i64 2
  %arrayidx282 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx281, i32 0, i64 %idxprom280
  store i32 %add279, i32* %arrayidx282, align 4
  %155 = load i32, i32* %i, align 4
  %idxprom283 = sext i32 %155 to i64
  %arrayidx284 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i32 0, i64 3
  %arrayidx285 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx284, i32 0, i64 %idxprom283
  %156 = load i32, i32* %arrayidx285, align 4
  %157 = load i32, i32* %i, align 4
  %idxprom286 = sext i32 %157 to i64
  %arrayidx287 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i32 0, i64 7
  %arrayidx288 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx287, i32 0, i64 %idxprom286
  %158 = load i32, i32* %arrayidx288, align 4
  %add289 = add nsw i32 %156, %158
  %159 = load i32, i32* %i, align 4
  %idxprom290 = sext i32 %159 to i64
  %arrayidx291 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m3, i32 0, i64 3
  %arrayidx292 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx291, i32 0, i64 %idxprom290
  store i32 %add289, i32* %arrayidx292, align 4
  %160 = load i32, i32* %i, align 4
  %idxprom293 = sext i32 %160 to i64
  %arrayidx294 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i32 0, i64 0
  %arrayidx295 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx294, i32 0, i64 %idxprom293
  %161 = load i32, i32* %arrayidx295, align 4
  %162 = load i32, i32* %i, align 4
  %idxprom296 = sext i32 %162 to i64
  %arrayidx297 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i32 0, i64 4
  %arrayidx298 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx297, i32 0, i64 %idxprom296
  %163 = load i32, i32* %arrayidx298, align 4
  %sub299 = sub nsw i32 %161, %163
  %164 = load i32, i32* %i, align 4
  %idxprom300 = sext i32 %164 to i64
  %arrayidx301 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m3, i32 0, i64 4
  %arrayidx302 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx301, i32 0, i64 %idxprom300
  store i32 %sub299, i32* %arrayidx302, align 4
  %165 = load i32, i32* %i, align 4
  %idxprom303 = sext i32 %165 to i64
  %arrayidx304 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i32 0, i64 1
  %arrayidx305 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx304, i32 0, i64 %idxprom303
  %166 = load i32, i32* %arrayidx305, align 4
  %167 = load i32, i32* %i, align 4
  %idxprom306 = sext i32 %167 to i64
  %arrayidx307 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i32 0, i64 5
  %arrayidx308 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx307, i32 0, i64 %idxprom306
  %168 = load i32, i32* %arrayidx308, align 4
  %sub309 = sub nsw i32 %166, %168
  %169 = load i32, i32* %i, align 4
  %idxprom310 = sext i32 %169 to i64
  %arrayidx311 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m3, i32 0, i64 5
  %arrayidx312 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx311, i32 0, i64 %idxprom310
  store i32 %sub309, i32* %arrayidx312, align 4
  %170 = load i32, i32* %i, align 4
  %idxprom313 = sext i32 %170 to i64
  %arrayidx314 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i32 0, i64 2
  %arrayidx315 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx314, i32 0, i64 %idxprom313
  %171 = load i32, i32* %arrayidx315, align 4
  %172 = load i32, i32* %i, align 4
  %idxprom316 = sext i32 %172 to i64
  %arrayidx317 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i32 0, i64 6
  %arrayidx318 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx317, i32 0, i64 %idxprom316
  %173 = load i32, i32* %arrayidx318, align 4
  %sub319 = sub nsw i32 %171, %173
  %174 = load i32, i32* %i, align 4
  %idxprom320 = sext i32 %174 to i64
  %arrayidx321 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m3, i32 0, i64 6
  %arrayidx322 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx321, i32 0, i64 %idxprom320
  store i32 %sub319, i32* %arrayidx322, align 4
  %175 = load i32, i32* %i, align 4
  %idxprom323 = sext i32 %175 to i64
  %arrayidx324 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i32 0, i64 3
  %arrayidx325 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx324, i32 0, i64 %idxprom323
  %176 = load i32, i32* %arrayidx325, align 4
  %177 = load i32, i32* %i, align 4
  %idxprom326 = sext i32 %177 to i64
  %arrayidx327 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i32 0, i64 7
  %arrayidx328 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx327, i32 0, i64 %idxprom326
  %178 = load i32, i32* %arrayidx328, align 4
  %sub329 = sub nsw i32 %176, %178
  %179 = load i32, i32* %i, align 4
  %idxprom330 = sext i32 %179 to i64
  %arrayidx331 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m3, i32 0, i64 7
  %arrayidx332 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx331, i32 0, i64 %idxprom330
  store i32 %sub329, i32* %arrayidx332, align 4
  %180 = load i32, i32* %i, align 4
  %idxprom333 = sext i32 %180 to i64
  %arrayidx334 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m3, i32 0, i64 0
  %arrayidx335 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx334, i32 0, i64 %idxprom333
  %181 = load i32, i32* %arrayidx335, align 4
  %182 = load i32, i32* %i, align 4
  %idxprom336 = sext i32 %182 to i64
  %arrayidx337 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m3, i32 0, i64 2
  %arrayidx338 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx337, i32 0, i64 %idxprom336
  %183 = load i32, i32* %arrayidx338, align 4
  %add339 = add nsw i32 %181, %183
  %184 = load i32, i32* %i, align 4
  %idxprom340 = sext i32 %184 to i64
  %arrayidx341 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i32 0, i64 0
  %arrayidx342 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx341, i32 0, i64 %idxprom340
  store i32 %add339, i32* %arrayidx342, align 4
  %185 = load i32, i32* %i, align 4
  %idxprom343 = sext i32 %185 to i64
  %arrayidx344 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m3, i32 0, i64 1
  %arrayidx345 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx344, i32 0, i64 %idxprom343
  %186 = load i32, i32* %arrayidx345, align 4
  %187 = load i32, i32* %i, align 4
  %idxprom346 = sext i32 %187 to i64
  %arrayidx347 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m3, i32 0, i64 3
  %arrayidx348 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx347, i32 0, i64 %idxprom346
  %188 = load i32, i32* %arrayidx348, align 4
  %add349 = add nsw i32 %186, %188
  %189 = load i32, i32* %i, align 4
  %idxprom350 = sext i32 %189 to i64
  %arrayidx351 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i32 0, i64 1
  %arrayidx352 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx351, i32 0, i64 %idxprom350
  store i32 %add349, i32* %arrayidx352, align 4
  %190 = load i32, i32* %i, align 4
  %idxprom353 = sext i32 %190 to i64
  %arrayidx354 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m3, i32 0, i64 0
  %arrayidx355 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx354, i32 0, i64 %idxprom353
  %191 = load i32, i32* %arrayidx355, align 4
  %192 = load i32, i32* %i, align 4
  %idxprom356 = sext i32 %192 to i64
  %arrayidx357 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m3, i32 0, i64 2
  %arrayidx358 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx357, i32 0, i64 %idxprom356
  %193 = load i32, i32* %arrayidx358, align 4
  %sub359 = sub nsw i32 %191, %193
  %194 = load i32, i32* %i, align 4
  %idxprom360 = sext i32 %194 to i64
  %arrayidx361 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i32 0, i64 2
  %arrayidx362 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx361, i32 0, i64 %idxprom360
  store i32 %sub359, i32* %arrayidx362, align 4
  %195 = load i32, i32* %i, align 4
  %idxprom363 = sext i32 %195 to i64
  %arrayidx364 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m3, i32 0, i64 1
  %arrayidx365 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx364, i32 0, i64 %idxprom363
  %196 = load i32, i32* %arrayidx365, align 4
  %197 = load i32, i32* %i, align 4
  %idxprom366 = sext i32 %197 to i64
  %arrayidx367 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m3, i32 0, i64 3
  %arrayidx368 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx367, i32 0, i64 %idxprom366
  %198 = load i32, i32* %arrayidx368, align 4
  %sub369 = sub nsw i32 %196, %198
  %199 = load i32, i32* %i, align 4
  %idxprom370 = sext i32 %199 to i64
  %arrayidx371 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i32 0, i64 3
  %arrayidx372 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx371, i32 0, i64 %idxprom370
  store i32 %sub369, i32* %arrayidx372, align 4
  %200 = load i32, i32* %i, align 4
  %idxprom373 = sext i32 %200 to i64
  %arrayidx374 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m3, i32 0, i64 4
  %arrayidx375 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx374, i32 0, i64 %idxprom373
  %201 = load i32, i32* %arrayidx375, align 4
  %202 = load i32, i32* %i, align 4
  %idxprom376 = sext i32 %202 to i64
  %arrayidx377 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m3, i32 0, i64 6
  %arrayidx378 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx377, i32 0, i64 %idxprom376
  %203 = load i32, i32* %arrayidx378, align 4
  %add379 = add nsw i32 %201, %203
  %204 = load i32, i32* %i, align 4
  %idxprom380 = sext i32 %204 to i64
  %arrayidx381 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i32 0, i64 4
  %arrayidx382 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx381, i32 0, i64 %idxprom380
  store i32 %add379, i32* %arrayidx382, align 4
  %205 = load i32, i32* %i, align 4
  %idxprom383 = sext i32 %205 to i64
  %arrayidx384 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m3, i32 0, i64 5
  %arrayidx385 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx384, i32 0, i64 %idxprom383
  %206 = load i32, i32* %arrayidx385, align 4
  %207 = load i32, i32* %i, align 4
  %idxprom386 = sext i32 %207 to i64
  %arrayidx387 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m3, i32 0, i64 7
  %arrayidx388 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx387, i32 0, i64 %idxprom386
  %208 = load i32, i32* %arrayidx388, align 4
  %add389 = add nsw i32 %206, %208
  %209 = load i32, i32* %i, align 4
  %idxprom390 = sext i32 %209 to i64
  %arrayidx391 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i32 0, i64 5
  %arrayidx392 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx391, i32 0, i64 %idxprom390
  store i32 %add389, i32* %arrayidx392, align 4
  %210 = load i32, i32* %i, align 4
  %idxprom393 = sext i32 %210 to i64
  %arrayidx394 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m3, i32 0, i64 4
  %arrayidx395 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx394, i32 0, i64 %idxprom393
  %211 = load i32, i32* %arrayidx395, align 4
  %212 = load i32, i32* %i, align 4
  %idxprom396 = sext i32 %212 to i64
  %arrayidx397 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m3, i32 0, i64 6
  %arrayidx398 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx397, i32 0, i64 %idxprom396
  %213 = load i32, i32* %arrayidx398, align 4
  %sub399 = sub nsw i32 %211, %213
  %214 = load i32, i32* %i, align 4
  %idxprom400 = sext i32 %214 to i64
  %arrayidx401 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i32 0, i64 6
  %arrayidx402 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx401, i32 0, i64 %idxprom400
  store i32 %sub399, i32* %arrayidx402, align 4
  %215 = load i32, i32* %i, align 4
  %idxprom403 = sext i32 %215 to i64
  %arrayidx404 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m3, i32 0, i64 5
  %arrayidx405 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx404, i32 0, i64 %idxprom403
  %216 = load i32, i32* %arrayidx405, align 4
  %217 = load i32, i32* %i, align 4
  %idxprom406 = sext i32 %217 to i64
  %arrayidx407 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m3, i32 0, i64 7
  %arrayidx408 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx407, i32 0, i64 %idxprom406
  %218 = load i32, i32* %arrayidx408, align 4
  %sub409 = sub nsw i32 %216, %218
  %219 = load i32, i32* %i, align 4
  %idxprom410 = sext i32 %219 to i64
  %arrayidx411 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i32 0, i64 7
  %arrayidx412 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx411, i32 0, i64 %idxprom410
  store i32 %sub409, i32* %arrayidx412, align 4
  %220 = load i32, i32* %i, align 4
  %idxprom413 = sext i32 %220 to i64
  %arrayidx414 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i32 0, i64 0
  %arrayidx415 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx414, i32 0, i64 %idxprom413
  %221 = load i32, i32* %arrayidx415, align 4
  %222 = load i32, i32* %i, align 4
  %idxprom416 = sext i32 %222 to i64
  %arrayidx417 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i32 0, i64 1
  %arrayidx418 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx417, i32 0, i64 %idxprom416
  %223 = load i32, i32* %arrayidx418, align 4
  %add419 = add nsw i32 %221, %223
  %224 = load i32, i32* %i, align 4
  %idxprom420 = sext i32 %224 to i64
  %arrayidx421 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i32 0, i64 0
  %arrayidx422 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx421, i32 0, i64 %idxprom420
  store i32 %add419, i32* %arrayidx422, align 4
  %225 = load i32, i32* %i, align 4
  %idxprom423 = sext i32 %225 to i64
  %arrayidx424 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i32 0, i64 0
  %arrayidx425 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx424, i32 0, i64 %idxprom423
  %226 = load i32, i32* %arrayidx425, align 4
  %227 = load i32, i32* %i, align 4
  %idxprom426 = sext i32 %227 to i64
  %arrayidx427 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i32 0, i64 1
  %arrayidx428 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx427, i32 0, i64 %idxprom426
  %228 = load i32, i32* %arrayidx428, align 4
  %sub429 = sub nsw i32 %226, %228
  %229 = load i32, i32* %i, align 4
  %idxprom430 = sext i32 %229 to i64
  %arrayidx431 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i32 0, i64 1
  %arrayidx432 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx431, i32 0, i64 %idxprom430
  store i32 %sub429, i32* %arrayidx432, align 4
  %230 = load i32, i32* %i, align 4
  %idxprom433 = sext i32 %230 to i64
  %arrayidx434 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i32 0, i64 2
  %arrayidx435 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx434, i32 0, i64 %idxprom433
  %231 = load i32, i32* %arrayidx435, align 4
  %232 = load i32, i32* %i, align 4
  %idxprom436 = sext i32 %232 to i64
  %arrayidx437 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i32 0, i64 3
  %arrayidx438 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx437, i32 0, i64 %idxprom436
  %233 = load i32, i32* %arrayidx438, align 4
  %add439 = add nsw i32 %231, %233
  %234 = load i32, i32* %i, align 4
  %idxprom440 = sext i32 %234 to i64
  %arrayidx441 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i32 0, i64 2
  %arrayidx442 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx441, i32 0, i64 %idxprom440
  store i32 %add439, i32* %arrayidx442, align 4
  %235 = load i32, i32* %i, align 4
  %idxprom443 = sext i32 %235 to i64
  %arrayidx444 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i32 0, i64 2
  %arrayidx445 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx444, i32 0, i64 %idxprom443
  %236 = load i32, i32* %arrayidx445, align 4
  %237 = load i32, i32* %i, align 4
  %idxprom446 = sext i32 %237 to i64
  %arrayidx447 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i32 0, i64 3
  %arrayidx448 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx447, i32 0, i64 %idxprom446
  %238 = load i32, i32* %arrayidx448, align 4
  %sub449 = sub nsw i32 %236, %238
  %239 = load i32, i32* %i, align 4
  %idxprom450 = sext i32 %239 to i64
  %arrayidx451 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i32 0, i64 3
  %arrayidx452 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx451, i32 0, i64 %idxprom450
  store i32 %sub449, i32* %arrayidx452, align 4
  %240 = load i32, i32* %i, align 4
  %idxprom453 = sext i32 %240 to i64
  %arrayidx454 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i32 0, i64 4
  %arrayidx455 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx454, i32 0, i64 %idxprom453
  %241 = load i32, i32* %arrayidx455, align 4
  %242 = load i32, i32* %i, align 4
  %idxprom456 = sext i32 %242 to i64
  %arrayidx457 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i32 0, i64 5
  %arrayidx458 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx457, i32 0, i64 %idxprom456
  %243 = load i32, i32* %arrayidx458, align 4
  %add459 = add nsw i32 %241, %243
  %244 = load i32, i32* %i, align 4
  %idxprom460 = sext i32 %244 to i64
  %arrayidx461 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i32 0, i64 4
  %arrayidx462 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx461, i32 0, i64 %idxprom460
  store i32 %add459, i32* %arrayidx462, align 4
  %245 = load i32, i32* %i, align 4
  %idxprom463 = sext i32 %245 to i64
  %arrayidx464 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i32 0, i64 4
  %arrayidx465 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx464, i32 0, i64 %idxprom463
  %246 = load i32, i32* %arrayidx465, align 4
  %247 = load i32, i32* %i, align 4
  %idxprom466 = sext i32 %247 to i64
  %arrayidx467 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i32 0, i64 5
  %arrayidx468 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx467, i32 0, i64 %idxprom466
  %248 = load i32, i32* %arrayidx468, align 4
  %sub469 = sub nsw i32 %246, %248
  %249 = load i32, i32* %i, align 4
  %idxprom470 = sext i32 %249 to i64
  %arrayidx471 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i32 0, i64 5
  %arrayidx472 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx471, i32 0, i64 %idxprom470
  store i32 %sub469, i32* %arrayidx472, align 4
  %250 = load i32, i32* %i, align 4
  %idxprom473 = sext i32 %250 to i64
  %arrayidx474 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i32 0, i64 6
  %arrayidx475 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx474, i32 0, i64 %idxprom473
  %251 = load i32, i32* %arrayidx475, align 4
  %252 = load i32, i32* %i, align 4
  %idxprom476 = sext i32 %252 to i64
  %arrayidx477 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i32 0, i64 7
  %arrayidx478 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx477, i32 0, i64 %idxprom476
  %253 = load i32, i32* %arrayidx478, align 4
  %add479 = add nsw i32 %251, %253
  %254 = load i32, i32* %i, align 4
  %idxprom480 = sext i32 %254 to i64
  %arrayidx481 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i32 0, i64 6
  %arrayidx482 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx481, i32 0, i64 %idxprom480
  store i32 %add479, i32* %arrayidx482, align 4
  %255 = load i32, i32* %i, align 4
  %idxprom483 = sext i32 %255 to i64
  %arrayidx484 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i32 0, i64 6
  %arrayidx485 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx484, i32 0, i64 %idxprom483
  %256 = load i32, i32* %arrayidx485, align 4
  %257 = load i32, i32* %i, align 4
  %idxprom486 = sext i32 %257 to i64
  %arrayidx487 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i32 0, i64 7
  %arrayidx488 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx487, i32 0, i64 %idxprom486
  %258 = load i32, i32* %arrayidx488, align 4
  %sub489 = sub nsw i32 %256, %258
  %259 = load i32, i32* %i, align 4
  %idxprom490 = sext i32 %259 to i64
  %arrayidx491 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i32 0, i64 7
  %arrayidx492 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx491, i32 0, i64 %idxprom490
  store i32 %sub489, i32* %arrayidx492, align 4
  br label %for.inc.493

for.inc.493:                                      ; preds = %for.body.252
  %260 = load i32, i32* %i, align 4
  %inc494 = add nsw i32 %260, 1
  store i32 %inc494, i32* %i, align 4
  br label %for.cond.250

for.end.495:                                      ; preds = %for.cond.250
  store i32 0, i32* %j, align 4
  br label %for.cond.496

for.cond.496:                                     ; preds = %for.inc.520, %for.end.495
  %261 = load i32, i32* %j, align 4
  %cmp497 = icmp slt i32 %261, 8
  br i1 %cmp497, label %for.body.498, label %for.end.522

for.body.498:                                     ; preds = %for.cond.496
  store i32 0, i32* %i, align 4
  br label %for.cond.499

for.cond.499:                                     ; preds = %for.inc.517, %for.body.498
  %262 = load i32, i32* %i, align 4
  %cmp500 = icmp slt i32 %262, 8
  br i1 %cmp500, label %for.body.501, label %for.end.519

for.body.501:                                     ; preds = %for.cond.499
  %263 = load i32, i32* %i, align 4
  %idxprom502 = sext i32 %263 to i64
  %264 = load i32, i32* %j, align 4
  %idxprom503 = sext i32 %264 to i64
  %arrayidx504 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i32 0, i64 %idxprom503
  %arrayidx505 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx504, i32 0, i64 %idxprom502
  %265 = load i32, i32* %arrayidx505, align 4
  %cmp506 = icmp slt i32 %265, 0
  br i1 %cmp506, label %cond.true, label %cond.false

cond.true:                                        ; preds = %for.body.501
  %266 = load i32, i32* %i, align 4
  %idxprom507 = sext i32 %266 to i64
  %267 = load i32, i32* %j, align 4
  %idxprom508 = sext i32 %267 to i64
  %arrayidx509 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i32 0, i64 %idxprom508
  %arrayidx510 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx509, i32 0, i64 %idxprom507
  %268 = load i32, i32* %arrayidx510, align 4
  %sub511 = sub nsw i32 0, %268
  br label %cond.end

cond.false:                                       ; preds = %for.body.501
  %269 = load i32, i32* %i, align 4
  %idxprom512 = sext i32 %269 to i64
  %270 = load i32, i32* %j, align 4
  %idxprom513 = sext i32 %270 to i64
  %arrayidx514 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i32 0, i64 %idxprom513
  %arrayidx515 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx514, i32 0, i64 %idxprom512
  %271 = load i32, i32* %arrayidx515, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub511, %cond.true ], [ %271, %cond.false ]
  %272 = load i32, i32* %sad, align 4
  %add516 = add nsw i32 %272, %cond
  store i32 %add516, i32* %sad, align 4
  br label %for.inc.517

for.inc.517:                                      ; preds = %cond.end
  %273 = load i32, i32* %i, align 4
  %inc518 = add nsw i32 %273, 1
  store i32 %inc518, i32* %i, align 4
  br label %for.cond.499

for.end.519:                                      ; preds = %for.cond.499
  br label %for.inc.520

for.inc.520:                                      ; preds = %for.end.519
  %274 = load i32, i32* %j, align 4
  %inc521 = add nsw i32 %274, 1
  store i32 %inc521, i32* %j, align 4
  br label %for.cond.496

for.end.522:                                      ; preds = %for.cond.496
  %275 = load i32, i32* %sad, align 4
  %add523 = add nsw i32 %275, 2
  %shr = ashr i32 %add523, 2
  store i32 %shr, i32* %sad, align 4
  br label %if.end

if.else:                                          ; preds = %entry
  store i32 0, i32* %i, align 4
  br label %for.cond.524

for.cond.524:                                     ; preds = %for.inc.532, %if.else
  %276 = load i32, i32* %i, align 4
  %cmp525 = icmp slt i32 %276, 64
  br i1 %cmp525, label %for.body.526, label %for.end.534

for.body.526:                                     ; preds = %for.cond.524
  %277 = load i32, i32* %i, align 4
  %idxprom527 = sext i32 %277 to i64
  %278 = load i32*, i32** %diff.addr, align 8
  %arrayidx528 = getelementptr inbounds i32, i32* %278, i64 %idxprom527
  %279 = load i32, i32* %arrayidx528, align 4
  %idxprom529 = sext i32 %279 to i64
  %280 = load i32*, i32** @byte_abs, align 8
  %arrayidx530 = getelementptr inbounds i32, i32* %280, i64 %idxprom529
  %281 = load i32, i32* %arrayidx530, align 4
  %282 = load i32, i32* %sad, align 4
  %add531 = add nsw i32 %282, %281
  store i32 %add531, i32* %sad, align 4
  br label %for.inc.532

for.inc.532:                                      ; preds = %for.body.526
  %283 = load i32, i32* %i, align 4
  %inc533 = add nsw i32 %283, 1
  store i32 %inc533, i32* %i, align 4
  br label %for.cond.524

for.end.534:                                      ; preds = %for.cond.524
  br label %if.end

if.end:                                           ; preds = %for.end.534, %for.end.522
  %284 = load i32, i32* %sad, align 4
  ret i32 %284
}

; Function Attrs: nounwind uwtable
define i32 @find_SATD([16 x i32]* %curr_diff, i32 %use_hadamard, i32 %blocktype) #0 {
entry:
  %curr_diff.addr = alloca [16 x i32]*, align 8
  %use_hadamard.addr = alloca i32, align 4
  %blocktype.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %sad = alloca i32, align 4
  %block_size_x = alloca i32, align 4
  %block_size_y = alloca i32, align 4
  %block_size = alloca i32, align 4
  %diff = alloca [256 x i32], align 16
  store [16 x i32]* %curr_diff, [16 x i32]** %curr_diff.addr, align 8
  store i32 %use_hadamard, i32* %use_hadamard.addr, align 4
  store i32 %blocktype, i32* %blocktype.addr, align 4
  store i32 0, i32* %sad, align 4
  %0 = load i32, i32* %blocktype.addr, align 4
  %idxprom = sext i32 %0 to i64
  %1 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %blc_size = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %1, i32 0, i32 20
  %arrayidx = getelementptr inbounds [8 x [2 x i32]], [8 x [2 x i32]]* %blc_size, i32 0, i64 %idxprom
  %arrayidx1 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx, i32 0, i64 0
  %2 = load i32, i32* %arrayidx1, align 4
  store i32 %2, i32* %block_size_x, align 4
  %3 = load i32, i32* %blocktype.addr, align 4
  %idxprom2 = sext i32 %3 to i64
  %4 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %blc_size3 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %4, i32 0, i32 20
  %arrayidx4 = getelementptr inbounds [8 x [2 x i32]], [8 x [2 x i32]]* %blc_size3, i32 0, i64 %idxprom2
  %arrayidx5 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx4, i32 0, i64 1
  %5 = load i32, i32* %arrayidx5, align 4
  store i32 %5, i32* %block_size_y, align 4
  %6 = load i32, i32* %blocktype.addr, align 4
  %cmp = icmp sgt i32 %6, 4
  %cond = select i1 %cmp, i32 4, i32 8
  store i32 %cond, i32* %block_size, align 4
  store i32 0, i32* %k, align 4
  store i32 0, i32* %y, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc.30, %entry
  %7 = load i32, i32* %y, align 4
  %8 = load i32, i32* %block_size_y, align 4
  %cmp6 = icmp slt i32 %7, %8
  br i1 %cmp6, label %for.body, label %for.end.32

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %x, align 4
  br label %for.cond.7

for.cond.7:                                       ; preds = %for.inc.27, %for.body
  %9 = load i32, i32* %x, align 4
  %10 = load i32, i32* %block_size_x, align 4
  %cmp8 = icmp slt i32 %9, %10
  br i1 %cmp8, label %for.body.9, label %for.end.29

for.body.9:                                       ; preds = %for.cond.7
  %11 = load i32, i32* %y, align 4
  store i32 %11, i32* %j, align 4
  br label %for.cond.10

for.cond.10:                                      ; preds = %for.inc.24, %for.body.9
  %12 = load i32, i32* %j, align 4
  %13 = load i32, i32* %y, align 4
  %14 = load i32, i32* %block_size, align 4
  %add = add nsw i32 %13, %14
  %cmp11 = icmp slt i32 %12, %add
  br i1 %cmp11, label %for.body.12, label %for.end.26

for.body.12:                                      ; preds = %for.cond.10
  %15 = load i32, i32* %x, align 4
  store i32 %15, i32* %i, align 4
  br label %for.cond.13

for.cond.13:                                      ; preds = %for.inc, %for.body.12
  %16 = load i32, i32* %i, align 4
  %17 = load i32, i32* %x, align 4
  %18 = load i32, i32* %block_size, align 4
  %add14 = add nsw i32 %17, %18
  %cmp15 = icmp slt i32 %16, %add14
  br i1 %cmp15, label %for.body.16, label %for.end

for.body.16:                                      ; preds = %for.cond.13
  %19 = load i32, i32* %i, align 4
  %idxprom17 = sext i32 %19 to i64
  %20 = load i32, i32* %j, align 4
  %idxprom18 = sext i32 %20 to i64
  %21 = load [16 x i32]*, [16 x i32]** %curr_diff.addr, align 8
  %arrayidx19 = getelementptr inbounds [16 x i32], [16 x i32]* %21, i64 %idxprom18
  %arrayidx20 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx19, i32 0, i64 %idxprom17
  %22 = load i32, i32* %arrayidx20, align 4
  %23 = load i32, i32* %k, align 4
  %idxprom21 = sext i32 %23 to i64
  %arrayidx22 = getelementptr inbounds [256 x i32], [256 x i32]* %diff, i32 0, i64 %idxprom21
  store i32 %22, i32* %arrayidx22, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body.16
  %24 = load i32, i32* %i, align 4
  %inc = add nsw i32 %24, 1
  store i32 %inc, i32* %i, align 4
  %25 = load i32, i32* %k, align 4
  %inc23 = add nsw i32 %25, 1
  store i32 %inc23, i32* %k, align 4
  br label %for.cond.13

for.end:                                          ; preds = %for.cond.13
  br label %for.inc.24

for.inc.24:                                       ; preds = %for.end
  %26 = load i32, i32* %j, align 4
  %inc25 = add nsw i32 %26, 1
  store i32 %inc25, i32* %j, align 4
  br label %for.cond.10

for.end.26:                                       ; preds = %for.cond.10
  br label %for.inc.27

for.inc.27:                                       ; preds = %for.end.26
  %27 = load i32, i32* %block_size, align 4
  %28 = load i32, i32* %x, align 4
  %add28 = add nsw i32 %28, %27
  store i32 %add28, i32* %x, align 4
  br label %for.cond.7

for.end.29:                                       ; preds = %for.cond.7
  br label %for.inc.30

for.inc.30:                                       ; preds = %for.end.29
  %29 = load i32, i32* %block_size, align 4
  %30 = load i32, i32* %y, align 4
  %add31 = add nsw i32 %30, %29
  store i32 %add31, i32* %y, align 4
  br label %for.cond

for.end.32:                                       ; preds = %for.cond
  %31 = load i32, i32* %use_hadamard.addr, align 4
  %tobool = icmp ne i32 %31, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %for.end.32
  %32 = load i32, i32* %blocktype.addr, align 4
  switch i32 %32, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb.45
    i32 3, label %sw.bb.45
    i32 4, label %sw.bb.53
    i32 5, label %sw.bb.57
    i32 6, label %sw.bb.57
    i32 7, label %sw.bb.65
  ]

sw.bb:                                            ; preds = %if.then
  %arraydecay = getelementptr inbounds [256 x i32], [256 x i32]* %diff, i32 0, i32 0
  %33 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamard = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %33, i32 0, i32 6
  %34 = load i32, i32* %hadamard, align 4
  %call = call i32 @SATD8X8(i32* %arraydecay, i32 %34)
  store i32 %call, i32* %sad, align 4
  %arrayidx33 = getelementptr inbounds [256 x i32], [256 x i32]* %diff, i32 0, i64 64
  %35 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamard34 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %35, i32 0, i32 6
  %36 = load i32, i32* %hadamard34, align 4
  %call35 = call i32 @SATD8X8(i32* %arrayidx33, i32 %36)
  %37 = load i32, i32* %sad, align 4
  %add36 = add nsw i32 %37, %call35
  store i32 %add36, i32* %sad, align 4
  %arrayidx37 = getelementptr inbounds [256 x i32], [256 x i32]* %diff, i32 0, i64 128
  %38 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamard38 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %38, i32 0, i32 6
  %39 = load i32, i32* %hadamard38, align 4
  %call39 = call i32 @SATD8X8(i32* %arrayidx37, i32 %39)
  %40 = load i32, i32* %sad, align 4
  %add40 = add nsw i32 %40, %call39
  store i32 %add40, i32* %sad, align 4
  %arrayidx41 = getelementptr inbounds [256 x i32], [256 x i32]* %diff, i32 0, i64 192
  %41 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamard42 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %41, i32 0, i32 6
  %42 = load i32, i32* %hadamard42, align 4
  %call43 = call i32 @SATD8X8(i32* %arrayidx41, i32 %42)
  %43 = load i32, i32* %sad, align 4
  %add44 = add nsw i32 %43, %call43
  store i32 %add44, i32* %sad, align 4
  br label %sw.epilog

sw.bb.45:                                         ; preds = %if.then, %if.then
  %arraydecay46 = getelementptr inbounds [256 x i32], [256 x i32]* %diff, i32 0, i32 0
  %44 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamard47 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %44, i32 0, i32 6
  %45 = load i32, i32* %hadamard47, align 4
  %call48 = call i32 @SATD8X8(i32* %arraydecay46, i32 %45)
  store i32 %call48, i32* %sad, align 4
  %arrayidx49 = getelementptr inbounds [256 x i32], [256 x i32]* %diff, i32 0, i64 64
  %46 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamard50 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %46, i32 0, i32 6
  %47 = load i32, i32* %hadamard50, align 4
  %call51 = call i32 @SATD8X8(i32* %arrayidx49, i32 %47)
  %48 = load i32, i32* %sad, align 4
  %add52 = add nsw i32 %48, %call51
  store i32 %add52, i32* %sad, align 4
  br label %sw.epilog

sw.bb.53:                                         ; preds = %if.then
  %arraydecay54 = getelementptr inbounds [256 x i32], [256 x i32]* %diff, i32 0, i32 0
  %49 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamard55 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %49, i32 0, i32 6
  %50 = load i32, i32* %hadamard55, align 4
  %call56 = call i32 @SATD8X8(i32* %arraydecay54, i32 %50)
  store i32 %call56, i32* %sad, align 4
  br label %sw.epilog

sw.bb.57:                                         ; preds = %if.then, %if.then
  %arraydecay58 = getelementptr inbounds [256 x i32], [256 x i32]* %diff, i32 0, i32 0
  %51 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamard59 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %51, i32 0, i32 6
  %52 = load i32, i32* %hadamard59, align 4
  %call60 = call i32 @SATD(i32* %arraydecay58, i32 %52)
  store i32 %call60, i32* %sad, align 4
  %arrayidx61 = getelementptr inbounds [256 x i32], [256 x i32]* %diff, i32 0, i64 16
  %53 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamard62 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %53, i32 0, i32 6
  %54 = load i32, i32* %hadamard62, align 4
  %call63 = call i32 @SATD(i32* %arrayidx61, i32 %54)
  %55 = load i32, i32* %sad, align 4
  %add64 = add nsw i32 %55, %call63
  store i32 %add64, i32* %sad, align 4
  br label %sw.epilog

sw.bb.65:                                         ; preds = %if.then
  %arraydecay66 = getelementptr inbounds [256 x i32], [256 x i32]* %diff, i32 0, i32 0
  %56 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamard67 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %56, i32 0, i32 6
  %57 = load i32, i32* %hadamard67, align 4
  %call68 = call i32 @SATD(i32* %arraydecay66, i32 %57)
  store i32 %call68, i32* %sad, align 4
  br label %sw.epilog

sw.default:                                       ; preds = %if.then
  store i32 -1, i32* %sad, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb.65, %sw.bb.57, %sw.bb.53, %sw.bb.45, %sw.bb
  br label %if.end

if.else:                                          ; preds = %for.end.32
  store i32 0, i32* %i, align 4
  br label %for.cond.69

for.cond.69:                                      ; preds = %for.inc.77, %if.else
  %58 = load i32, i32* %i, align 4
  %59 = load i32, i32* %block_size_y, align 4
  %60 = load i32, i32* %block_size_x, align 4
  %mul = mul nsw i32 %59, %60
  %cmp70 = icmp slt i32 %58, %mul
  br i1 %cmp70, label %for.body.71, label %for.end.79

for.body.71:                                      ; preds = %for.cond.69
  %61 = load i32, i32* %i, align 4
  %idxprom72 = sext i32 %61 to i64
  %arrayidx73 = getelementptr inbounds [256 x i32], [256 x i32]* %diff, i32 0, i64 %idxprom72
  %62 = load i32, i32* %arrayidx73, align 4
  %idxprom74 = sext i32 %62 to i64
  %63 = load i32*, i32** @byte_abs, align 8
  %arrayidx75 = getelementptr inbounds i32, i32* %63, i64 %idxprom74
  %64 = load i32, i32* %arrayidx75, align 4
  %65 = load i32, i32* %sad, align 4
  %add76 = add nsw i32 %65, %64
  store i32 %add76, i32* %sad, align 4
  br label %for.inc.77

for.inc.77:                                       ; preds = %for.body.71
  %66 = load i32, i32* %i, align 4
  %inc78 = add nsw i32 %66, 1
  store i32 %inc78, i32* %i, align 4
  br label %for.cond.69

for.end.79:                                       ; preds = %for.cond.69
  br label %if.end

if.end:                                           ; preds = %for.end.79, %sw.epilog
  %67 = load i32, i32* %sad, align 4
  ret i32 %67
}

; Function Attrs: nounwind uwtable
define i32 @SubPelBlockMotionSearch(i16** %orig_pic, i16 signext %ref, i32 %list, i32 %pic_pix_x, i32 %pic_pix_y, i32 %blocktype, i16 signext %pred_mv_x, i16 signext %pred_mv_y, i16* %mv_x, i16* %mv_y, i32 %search_pos2, i32 %search_pos4, i32 %min_mcost, double %lambda) #0 {
entry:
  %orig_pic.addr = alloca i16**, align 8
  %ref.addr = alloca i16, align 2
  %list.addr = alloca i32, align 4
  %pic_pix_x.addr = alloca i32, align 4
  %pic_pix_y.addr = alloca i32, align 4
  %blocktype.addr = alloca i32, align 4
  %pred_mv_x.addr = alloca i16, align 2
  %pred_mv_y.addr = alloca i16, align 2
  %mv_x.addr = alloca i16*, align 8
  %mv_y.addr = alloca i16*, align 8
  %search_pos2.addr = alloca i32, align 4
  %search_pos4.addr = alloca i32, align 4
  %min_mcost.addr = alloca i32, align 4
  %lambda.addr = alloca double, align 8
  %curr_diff = alloca [16 x [16 x i32]], align 16
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %diff = alloca [16 x i32], align 16
  %d = alloca i32*, align 8
  %pos = alloca i32, align 4
  %best_pos = alloca i32, align 4
  %mcost = alloca i32, align 4
  %abort_search = alloca i32, align 4
  %y0 = alloca i32, align 4
  %x0 = alloca i32, align 4
  %ry0 = alloca i32, align 4
  %rx0 = alloca i32, align 4
  %ry = alloca i32, align 4
  %cand_mv_x = alloca i32, align 4
  %cand_mv_y = alloca i32, align 4
  %max_pos_x4 = alloca i32, align 4
  %max_pos_y4 = alloca i32, align 4
  %orig_line = alloca i16*, align 8
  %ref_pic = alloca i16**, align 8
  %ref_picture = alloca %struct.storable_picture*, align 8
  %lambda_factor = alloca i32, align 4
  %mv_shift = alloca i32, align 4
  %check_position0 = alloca i32, align 4
  %blocksize_x = alloca i32, align 4
  %blocksize_y = alloca i32, align 4
  %pic4_pix_x = alloca i32, align 4
  %pic4_pix_y = alloca i32, align 4
  %min_pos2 = alloca i32, align 4
  %max_pos2 = alloca i32, align 4
  %list_offset = alloca i32, align 4
  %apply_weights = alloca i32, align 4
  %img_width = alloca i32, align 4
  %img_height = alloca i32, align 4
  %halfpelhadamard = alloca i32, align 4
  %qpelstart = alloca i32, align 4
  store i16** %orig_pic, i16*** %orig_pic.addr, align 8
  store i16 %ref, i16* %ref.addr, align 2
  store i32 %list, i32* %list.addr, align 4
  store i32 %pic_pix_x, i32* %pic_pix_x.addr, align 4
  store i32 %pic_pix_y, i32* %pic_pix_y.addr, align 4
  store i32 %blocktype, i32* %blocktype.addr, align 4
  store i16 %pred_mv_x, i16* %pred_mv_x.addr, align 2
  store i16 %pred_mv_y, i16* %pred_mv_y.addr, align 2
  store i16* %mv_x, i16** %mv_x.addr, align 8
  store i16* %mv_y, i16** %mv_y.addr, align 8
  store i32 %search_pos2, i32* %search_pos2.addr, align 4
  store i32 %search_pos4, i32* %search_pos4.addr, align 4
  store i32 %min_mcost, i32* %min_mcost.addr, align 4
  store double %lambda, double* %lambda.addr, align 8
  %0 = load double, double* %lambda.addr, align 8
  %mul = fmul double 6.553600e+04, %0
  %add = fadd double %mul, 5.000000e-01
  %conv = fptosi double %add to i32
  store i32 %conv, i32* %lambda_factor, align 4
  store i32 0, i32* %mv_shift, align 4
  %1 = load i32, i32* %blocktype.addr, align 4
  %cmp = icmp eq i32 %1, 1
  br i1 %cmp, label %land.lhs.true, label %land.end

land.lhs.true:                                    ; preds = %entry
  %2 = load i16*, i16** %mv_x.addr, align 8
  %3 = load i16, i16* %2, align 2
  %conv2 = sext i16 %3 to i32
  %cmp3 = icmp eq i32 %conv2, 0
  br i1 %cmp3, label %land.lhs.true.5, label %land.end

land.lhs.true.5:                                  ; preds = %land.lhs.true
  %4 = load i16*, i16** %mv_y.addr, align 8
  %5 = load i16, i16* %4, align 2
  %conv6 = sext i16 %5 to i32
  %cmp7 = icmp eq i32 %conv6, 0
  br i1 %cmp7, label %land.lhs.true.9, label %land.end

land.lhs.true.9:                                  ; preds = %land.lhs.true.5
  %6 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamard = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %6, i32 0, i32 6
  %7 = load i32, i32* %hadamard, align 4
  %tobool = icmp ne i32 %7, 0
  br i1 %tobool, label %land.lhs.true.10, label %land.end

land.lhs.true.10:                                 ; preds = %land.lhs.true.9
  %8 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %rdopt = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %8, i32 0, i32 85
  %9 = load i32, i32* %rdopt, align 4
  %tobool11 = icmp ne i32 %9, 0
  br i1 %tobool11, label %land.end, label %land.lhs.true.12

land.lhs.true.12:                                 ; preds = %land.lhs.true.10
  %10 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %10, i32 0, i32 6
  %11 = load i32, i32* %type, align 4
  %cmp13 = icmp ne i32 %11, 1
  br i1 %cmp13, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %land.lhs.true.12
  %12 = load i16, i16* %ref.addr, align 2
  %conv15 = sext i16 %12 to i32
  %cmp16 = icmp eq i32 %conv15, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true.12, %land.lhs.true.10, %land.lhs.true.9, %land.lhs.true.5, %land.lhs.true, %entry
  %13 = phi i1 [ false, %land.lhs.true.12 ], [ false, %land.lhs.true.10 ], [ false, %land.lhs.true.9 ], [ false, %land.lhs.true.5 ], [ false, %land.lhs.true ], [ false, %entry ], [ %cmp16, %land.rhs ]
  %land.ext = zext i1 %13 to i32
  store i32 %land.ext, i32* %check_position0, align 4
  %14 = load i32, i32* %blocktype.addr, align 4
  %idxprom = sext i32 %14 to i64
  %15 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %blc_size = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %15, i32 0, i32 20
  %arrayidx = getelementptr inbounds [8 x [2 x i32]], [8 x [2 x i32]]* %blc_size, i32 0, i64 %idxprom
  %arrayidx18 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx, i32 0, i64 0
  %16 = load i32, i32* %arrayidx18, align 4
  store i32 %16, i32* %blocksize_x, align 4
  %17 = load i32, i32* %blocktype.addr, align 4
  %idxprom19 = sext i32 %17 to i64
  %18 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %blc_size20 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %18, i32 0, i32 20
  %arrayidx21 = getelementptr inbounds [8 x [2 x i32]], [8 x [2 x i32]]* %blc_size20, i32 0, i64 %idxprom19
  %arrayidx22 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx21, i32 0, i64 1
  %19 = load i32, i32* %arrayidx22, align 4
  store i32 %19, i32* %blocksize_y, align 4
  %20 = load i32, i32* %pic_pix_x.addr, align 4
  %shl = shl i32 %20, 2
  store i32 %shl, i32* %pic4_pix_x, align 4
  %21 = load i32, i32* %pic_pix_y.addr, align 4
  %shl23 = shl i32 %21, 2
  store i32 %shl23, i32* %pic4_pix_y, align 4
  %22 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamard24 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %22, i32 0, i32 6
  %23 = load i32, i32* %hadamard24, align 4
  %tobool25 = icmp ne i32 %23, 0
  br i1 %tobool25, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.end
  %24 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamardqpel = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %24, i32 0, i32 7
  %25 = load i32, i32* %hadamardqpel, align 4
  %tobool26 = icmp ne i32 %25, 0
  %cond = select i1 %tobool26, i32 1, i32 0
  br label %cond.end

cond.false:                                       ; preds = %land.end
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond27 = phi i32 [ %cond, %cond.true ], [ 1, %cond.false ]
  store i32 %cond27, i32* %min_pos2, align 4
  %26 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamard28 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %26, i32 0, i32 6
  %27 = load i32, i32* %hadamard28, align 4
  %tobool29 = icmp ne i32 %27, 0
  br i1 %tobool29, label %cond.true.30, label %cond.false.37

cond.true.30:                                     ; preds = %cond.end
  %28 = load i32, i32* %search_pos2.addr, align 4
  %cmp31 = icmp sgt i32 1, %28
  br i1 %cmp31, label %cond.true.33, label %cond.false.34

cond.true.33:                                     ; preds = %cond.true.30
  br label %cond.end.35

cond.false.34:                                    ; preds = %cond.true.30
  %29 = load i32, i32* %search_pos2.addr, align 4
  br label %cond.end.35

cond.end.35:                                      ; preds = %cond.false.34, %cond.true.33
  %cond36 = phi i32 [ 1, %cond.true.33 ], [ %29, %cond.false.34 ]
  br label %cond.end.38

cond.false.37:                                    ; preds = %cond.end
  %30 = load i32, i32* %search_pos2.addr, align 4
  br label %cond.end.38

cond.end.38:                                      ; preds = %cond.false.37, %cond.end.35
  %cond39 = phi i32 [ %cond36, %cond.end.35 ], [ %30, %cond.false.37 ]
  store i32 %cond39, i32* %max_pos2, align 4
  %31 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %MbaffFrameFlag = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %31, i32 0, i32 90
  %32 = load i32, i32* %MbaffFrameFlag, align 4
  %tobool40 = icmp ne i32 %32, 0
  br i1 %tobool40, label %land.lhs.true.41, label %cond.false.49

land.lhs.true.41:                                 ; preds = %cond.end.38
  %33 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %33, i32 0, i32 3
  %34 = load i32, i32* %current_mb_nr, align 4
  %idxprom42 = sext i32 %34 to i64
  %35 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %35, i32 0, i32 51
  %36 = load %struct.macroblock*, %struct.macroblock** %mb_data, align 8
  %arrayidx43 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %36, i64 %idxprom42
  %mb_field = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx43, i32 0, i32 22
  %37 = load i32, i32* %mb_field, align 4
  %tobool44 = icmp ne i32 %37, 0
  br i1 %tobool44, label %cond.true.45, label %cond.false.49

cond.true.45:                                     ; preds = %land.lhs.true.41
  %38 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr46 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %38, i32 0, i32 3
  %39 = load i32, i32* %current_mb_nr46, align 4
  %rem = srem i32 %39, 2
  %tobool47 = icmp ne i32 %rem, 0
  %cond48 = select i1 %tobool47, i32 4, i32 2
  br label %cond.end.50

cond.false.49:                                    ; preds = %land.lhs.true.41, %cond.end.38
  br label %cond.end.50

cond.end.50:                                      ; preds = %cond.false.49, %cond.true.45
  %cond51 = phi i32 [ %cond48, %cond.true.45 ], [ 0, %cond.false.49 ]
  store i32 %cond51, i32* %list_offset, align 4
  %40 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %weighted_pred_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %40, i32 0, i32 19
  %41 = load i32, i32* %weighted_pred_flag, align 4
  %tobool52 = icmp ne i32 %41, 0
  br i1 %tobool52, label %land.lhs.true.53, label %lor.rhs

land.lhs.true.53:                                 ; preds = %cond.end.50
  %42 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type54 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %42, i32 0, i32 6
  %43 = load i32, i32* %type54, align 4
  %cmp55 = icmp eq i32 %43, 0
  br i1 %cmp55, label %lor.end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true.53
  %44 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type57 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %44, i32 0, i32 6
  %45 = load i32, i32* %type57, align 4
  %cmp58 = icmp eq i32 %45, 3
  br i1 %cmp58, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %lor.lhs.false, %cond.end.50
  %46 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %weighted_bipred_idc = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %46, i32 0, i32 20
  %47 = load i32, i32* %weighted_bipred_idc, align 4
  %tobool60 = icmp ne i32 %47, 0
  br i1 %tobool60, label %land.rhs.61, label %land.end.65

land.rhs.61:                                      ; preds = %lor.rhs
  %48 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type62 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %48, i32 0, i32 6
  %49 = load i32, i32* %type62, align 4
  %cmp63 = icmp eq i32 %49, 1
  br label %land.end.65

land.end.65:                                      ; preds = %land.rhs.61, %lor.rhs
  %50 = phi i1 [ false, %lor.rhs ], [ %cmp63, %land.rhs.61 ]
  br label %lor.end

lor.end:                                          ; preds = %land.end.65, %lor.lhs.false, %land.lhs.true.53
  %51 = phi i1 [ true, %lor.lhs.false ], [ true, %land.lhs.true.53 ], [ %50, %land.end.65 ]
  %lor.ext = zext i1 %51 to i32
  store i32 %lor.ext, i32* %apply_weights, align 4
  %52 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamardqpel67 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %52, i32 0, i32 7
  %53 = load i32, i32* %hadamardqpel67, align 4
  %tobool68 = icmp ne i32 %53, 0
  br i1 %tobool68, label %cond.true.69, label %cond.false.70

cond.true.69:                                     ; preds = %lor.end
  br label %cond.end.72

cond.false.70:                                    ; preds = %lor.end
  %54 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamard71 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %54, i32 0, i32 6
  %55 = load i32, i32* %hadamard71, align 4
  br label %cond.end.72

cond.end.72:                                      ; preds = %cond.false.70, %cond.true.69
  %cond73 = phi i32 [ 0, %cond.true.69 ], [ %55, %cond.false.70 ]
  store i32 %cond73, i32* %halfpelhadamard, align 4
  %56 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamardqpel74 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %56, i32 0, i32 7
  %57 = load i32, i32* %hadamardqpel74, align 4
  %tobool75 = icmp ne i32 %57, 0
  %cond76 = select i1 %tobool75, i32 0, i32 1
  store i32 %cond76, i32* %qpelstart, align 4
  %58 = load i16, i16* %ref.addr, align 2
  %idxprom77 = sext i16 %58 to i64
  %59 = load i32, i32* %list.addr, align 4
  %60 = load i32, i32* %list_offset, align 4
  %add78 = add nsw i32 %59, %60
  %idxprom79 = sext i32 %add78 to i64
  %arrayidx80 = getelementptr inbounds [6 x %struct.storable_picture**], [6 x %struct.storable_picture**]* @listX, i32 0, i64 %idxprom79
  %61 = load %struct.storable_picture**, %struct.storable_picture*** %arrayidx80, align 8
  %arrayidx81 = getelementptr inbounds %struct.storable_picture*, %struct.storable_picture** %61, i64 %idxprom77
  %62 = load %struct.storable_picture*, %struct.storable_picture** %arrayidx81, align 8
  store %struct.storable_picture* %62, %struct.storable_picture** %ref_picture, align 8
  %63 = load i32, i32* %apply_weights, align 4
  %tobool82 = icmp ne i32 %63, 0
  br i1 %tobool82, label %land.lhs.true.83, label %if.else

land.lhs.true.83:                                 ; preds = %cond.end.72
  %64 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %UseWeightedReferenceME = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %64, i32 0, i32 48
  %65 = load i32, i32* %UseWeightedReferenceME, align 4
  %tobool84 = icmp ne i32 %65, 0
  br i1 %tobool84, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true.83
  %66 = load i16, i16* %ref.addr, align 2
  %idxprom85 = sext i16 %66 to i64
  %67 = load i32, i32* %list.addr, align 4
  %68 = load i32, i32* %list_offset, align 4
  %add86 = add nsw i32 %67, %68
  %idxprom87 = sext i32 %add86 to i64
  %arrayidx88 = getelementptr inbounds [6 x %struct.storable_picture**], [6 x %struct.storable_picture**]* @listX, i32 0, i64 %idxprom87
  %69 = load %struct.storable_picture**, %struct.storable_picture*** %arrayidx88, align 8
  %arrayidx89 = getelementptr inbounds %struct.storable_picture*, %struct.storable_picture** %69, i64 %idxprom85
  %70 = load %struct.storable_picture*, %struct.storable_picture** %arrayidx89, align 8
  %imgY_ups_w = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %70, i32 0, i32 29
  %71 = load i16**, i16*** %imgY_ups_w, align 8
  store i16** %71, i16*** %ref_pic, align 8
  br label %if.end

if.else:                                          ; preds = %land.lhs.true.83, %cond.end.72
  %72 = load i16, i16* %ref.addr, align 2
  %idxprom90 = sext i16 %72 to i64
  %73 = load i32, i32* %list.addr, align 4
  %74 = load i32, i32* %list_offset, align 4
  %add91 = add nsw i32 %73, %74
  %idxprom92 = sext i32 %add91 to i64
  %arrayidx93 = getelementptr inbounds [6 x %struct.storable_picture**], [6 x %struct.storable_picture**]* @listX, i32 0, i64 %idxprom92
  %75 = load %struct.storable_picture**, %struct.storable_picture*** %arrayidx93, align 8
  %arrayidx94 = getelementptr inbounds %struct.storable_picture*, %struct.storable_picture** %75, i64 %idxprom90
  %76 = load %struct.storable_picture*, %struct.storable_picture** %arrayidx94, align 8
  %imgY_ups = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %76, i32 0, i32 28
  %77 = load i16**, i16*** %imgY_ups, align 8
  store i16** %77, i16*** %ref_pic, align 8
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %78 = load %struct.storable_picture*, %struct.storable_picture** %ref_picture, align 8
  %size_x = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %78, i32 0, i32 18
  %79 = load i32, i32* %size_x, align 4
  store i32 %79, i32* %img_width, align 4
  %80 = load %struct.storable_picture*, %struct.storable_picture** %ref_picture, align 8
  %size_y = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %80, i32 0, i32 19
  %81 = load i32, i32* %size_y, align 4
  store i32 %81, i32* %img_height, align 4
  %82 = load %struct.storable_picture*, %struct.storable_picture** %ref_picture, align 8
  %size_x95 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %82, i32 0, i32 18
  %83 = load i32, i32* %size_x95, align 4
  %84 = load i32, i32* %blocksize_x, align 4
  %sub = sub nsw i32 %83, %84
  %add96 = add nsw i32 %sub, 1
  %shl97 = shl i32 %add96, 2
  store i32 %shl97, i32* %max_pos_x4, align 4
  %85 = load %struct.storable_picture*, %struct.storable_picture** %ref_picture, align 8
  %size_y98 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %85, i32 0, i32 19
  %86 = load i32, i32* %size_y98, align 4
  %87 = load i32, i32* %blocksize_y, align 4
  %sub99 = sub nsw i32 %86, %87
  %add100 = add nsw i32 %sub99, 1
  %shl101 = shl i32 %add100, 2
  store i32 %shl101, i32* %max_pos_y4, align 4
  %88 = load i16*, i16** %mv_x.addr, align 8
  %89 = load i16, i16* %88, align 2
  %conv102 = sext i16 %89 to i32
  %shl103 = shl i32 %conv102, 2
  %conv104 = trunc i32 %shl103 to i16
  store i16 %conv104, i16* %88, align 2
  %90 = load i16*, i16** %mv_y.addr, align 8
  %91 = load i16, i16* %90, align 2
  %conv105 = sext i16 %91 to i32
  %shl106 = shl i32 %conv105, 2
  %conv107 = trunc i32 %shl106 to i16
  store i16 %conv107, i16* %90, align 2
  %92 = load i32, i32* %pic4_pix_x, align 4
  %93 = load i16*, i16** %mv_x.addr, align 8
  %94 = load i16, i16* %93, align 2
  %conv108 = sext i16 %94 to i32
  %add109 = add nsw i32 %92, %conv108
  %cmp110 = icmp sgt i32 %add109, 1
  br i1 %cmp110, label %land.lhs.true.112, label %if.else.130

land.lhs.true.112:                                ; preds = %if.end
  %95 = load i32, i32* %pic4_pix_x, align 4
  %96 = load i16*, i16** %mv_x.addr, align 8
  %97 = load i16, i16* %96, align 2
  %conv113 = sext i16 %97 to i32
  %add114 = add nsw i32 %95, %conv113
  %98 = load i32, i32* %max_pos_x4, align 4
  %sub115 = sub nsw i32 %98, 2
  %cmp116 = icmp slt i32 %add114, %sub115
  br i1 %cmp116, label %land.lhs.true.118, label %if.else.130

land.lhs.true.118:                                ; preds = %land.lhs.true.112
  %99 = load i32, i32* %pic4_pix_y, align 4
  %100 = load i16*, i16** %mv_y.addr, align 8
  %101 = load i16, i16* %100, align 2
  %conv119 = sext i16 %101 to i32
  %add120 = add nsw i32 %99, %conv119
  %cmp121 = icmp sgt i32 %add120, 1
  br i1 %cmp121, label %land.lhs.true.123, label %if.else.130

land.lhs.true.123:                                ; preds = %land.lhs.true.118
  %102 = load i32, i32* %pic4_pix_y, align 4
  %103 = load i16*, i16** %mv_y.addr, align 8
  %104 = load i16, i16* %103, align 2
  %conv124 = sext i16 %104 to i32
  %add125 = add nsw i32 %102, %conv124
  %105 = load i32, i32* %max_pos_y4, align 4
  %sub126 = sub nsw i32 %105, 2
  %cmp127 = icmp slt i32 %add125, %sub126
  br i1 %cmp127, label %if.then.129, label %if.else.130

if.then.129:                                      ; preds = %land.lhs.true.123
  store i16 (i16**, i32, i32, i32, i32)* @FastPelY_14, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  br label %if.end.131

if.else.130:                                      ; preds = %land.lhs.true.123, %land.lhs.true.118, %land.lhs.true.112, %if.end
  store i16 (i16**, i32, i32, i32, i32)* @UMVPelY_14, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  br label %if.end.131

if.end.131:                                       ; preds = %if.else.130, %if.then.129
  store i32 0, i32* %best_pos, align 4
  %106 = load i32, i32* %min_pos2, align 4
  store i32 %106, i32* %pos, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc.382, %if.end.131
  %107 = load i32, i32* %pos, align 4
  %108 = load i32, i32* %max_pos2, align 4
  %cmp132 = icmp slt i32 %107, %108
  br i1 %cmp132, label %for.body, label %for.end.384

for.body:                                         ; preds = %for.cond
  %109 = load i16*, i16** %mv_x.addr, align 8
  %110 = load i16, i16* %109, align 2
  %conv134 = sext i16 %110 to i32
  %111 = load i32, i32* %pos, align 4
  %idxprom135 = sext i32 %111 to i64
  %112 = load i32*, i32** @spiral_search_x, align 8
  %arrayidx136 = getelementptr inbounds i32, i32* %112, i64 %idxprom135
  %113 = load i32, i32* %arrayidx136, align 4
  %shl137 = shl i32 %113, 1
  %add138 = add nsw i32 %conv134, %shl137
  store i32 %add138, i32* %cand_mv_x, align 4
  %114 = load i16*, i16** %mv_y.addr, align 8
  %115 = load i16, i16* %114, align 2
  %conv139 = sext i16 %115 to i32
  %116 = load i32, i32* %pos, align 4
  %idxprom140 = sext i32 %116 to i64
  %117 = load i32*, i32** @spiral_search_y, align 8
  %arrayidx141 = getelementptr inbounds i32, i32* %117, i64 %idxprom140
  %118 = load i32, i32* %arrayidx141, align 4
  %shl142 = shl i32 %118, 1
  %add143 = add nsw i32 %conv139, %shl142
  store i32 %add143, i32* %cand_mv_y, align 4
  %119 = load i32, i32* %lambda_factor, align 4
  %120 = load i32, i32* %cand_mv_x, align 4
  %121 = load i32, i32* %mv_shift, align 4
  %shl144 = shl i32 %120, %121
  %122 = load i16, i16* %pred_mv_x.addr, align 2
  %conv145 = sext i16 %122 to i32
  %sub146 = sub nsw i32 %shl144, %conv145
  %idxprom147 = sext i32 %sub146 to i64
  %123 = load i32*, i32** @mvbits, align 8
  %arrayidx148 = getelementptr inbounds i32, i32* %123, i64 %idxprom147
  %124 = load i32, i32* %arrayidx148, align 4
  %125 = load i32, i32* %cand_mv_y, align 4
  %126 = load i32, i32* %mv_shift, align 4
  %shl149 = shl i32 %125, %126
  %127 = load i16, i16* %pred_mv_y.addr, align 2
  %conv150 = sext i16 %127 to i32
  %sub151 = sub nsw i32 %shl149, %conv150
  %idxprom152 = sext i32 %sub151 to i64
  %128 = load i32*, i32** @mvbits, align 8
  %arrayidx153 = getelementptr inbounds i32, i32* %128, i64 %idxprom152
  %129 = load i32, i32* %arrayidx153, align 4
  %add154 = add nsw i32 %124, %129
  %mul155 = mul nsw i32 %119, %add154
  %shr = ashr i32 %mul155, 16
  store i32 %shr, i32* %mcost, align 4
  %130 = load i32, i32* %check_position0, align 4
  %tobool156 = icmp ne i32 %130, 0
  br i1 %tobool156, label %land.lhs.true.157, label %if.end.164

land.lhs.true.157:                                ; preds = %for.body
  %131 = load i32, i32* %pos, align 4
  %cmp158 = icmp eq i32 %131, 0
  br i1 %cmp158, label %if.then.160, label %if.end.164

if.then.160:                                      ; preds = %land.lhs.true.157
  %132 = load i32, i32* %lambda_factor, align 4
  %mul161 = mul nsw i32 %132, 16
  %shr162 = ashr i32 %mul161, 16
  %133 = load i32, i32* %mcost, align 4
  %sub163 = sub nsw i32 %133, %shr162
  store i32 %sub163, i32* %mcost, align 4
  br label %if.end.164

if.end.164:                                       ; preds = %if.then.160, %land.lhs.true.157, %for.body
  %134 = load i32, i32* %mcost, align 4
  %135 = load i32, i32* %min_mcost.addr, align 4
  %cmp165 = icmp sge i32 %134, %135
  br i1 %cmp165, label %if.then.167, label %if.end.168

if.then.167:                                      ; preds = %if.end.164
  br label %for.inc.382

if.end.168:                                       ; preds = %if.end.164
  store i32 0, i32* %y0, align 4
  store i32 0, i32* %abort_search, align 4
  br label %for.cond.169

for.cond.169:                                     ; preds = %for.inc.368, %if.end.168
  %136 = load i32, i32* %y0, align 4
  %137 = load i32, i32* %blocksize_y, align 4
  %cmp170 = icmp slt i32 %136, %137
  br i1 %cmp170, label %land.rhs.172, label %land.end.174

land.rhs.172:                                     ; preds = %for.cond.169
  %138 = load i32, i32* %abort_search, align 4
  %tobool173 = icmp ne i32 %138, 0
  %lnot = xor i1 %tobool173, true
  br label %land.end.174

land.end.174:                                     ; preds = %land.rhs.172, %for.cond.169
  %139 = phi i1 [ false, %for.cond.169 ], [ %lnot, %land.rhs.172 ]
  br i1 %139, label %for.body.176, label %for.end.370

for.body.176:                                     ; preds = %land.end.174
  %140 = load i32, i32* %pic_pix_y.addr, align 4
  %141 = load i32, i32* %y0, align 4
  %add177 = add nsw i32 %140, %141
  %shl178 = shl i32 %add177, 2
  %142 = load i32, i32* %cand_mv_y, align 4
  %add179 = add nsw i32 %shl178, %142
  store i32 %add179, i32* %ry0, align 4
  store i32 0, i32* %x0, align 4
  br label %for.cond.180

for.cond.180:                                     ; preds = %for.inc.365, %for.body.176
  %143 = load i32, i32* %x0, align 4
  %144 = load i32, i32* %blocksize_x, align 4
  %cmp181 = icmp slt i32 %143, %144
  br i1 %cmp181, label %for.body.183, label %for.end.367

for.body.183:                                     ; preds = %for.cond.180
  %145 = load i32, i32* %pic_pix_x.addr, align 4
  %146 = load i32, i32* %x0, align 4
  %add184 = add nsw i32 %145, %146
  %shl185 = shl i32 %add184, 2
  %147 = load i32, i32* %cand_mv_x, align 4
  %add186 = add nsw i32 %shl185, %147
  store i32 %add186, i32* %rx0, align 4
  %arraydecay = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i32 0, i32 0
  store i32* %arraydecay, i32** %d, align 8
  %148 = load i32, i32* %y0, align 4
  %idxprom187 = sext i32 %148 to i64
  %149 = load i16**, i16*** %orig_pic.addr, align 8
  %arrayidx188 = getelementptr inbounds i16*, i16** %149, i64 %idxprom187
  %150 = load i16*, i16** %arrayidx188, align 8
  store i16* %150, i16** %orig_line, align 8
  %151 = load i32, i32* %ry0, align 4
  store i32 %151, i32* %ry, align 4
  %152 = load i32, i32* %x0, align 4
  %idxprom189 = sext i32 %152 to i64
  %153 = load i16*, i16** %orig_line, align 8
  %arrayidx190 = getelementptr inbounds i16, i16* %153, i64 %idxprom189
  %154 = load i16, i16* %arrayidx190, align 2
  %conv191 = zext i16 %154 to i32
  %155 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %156 = load i16**, i16*** %ref_pic, align 8
  %157 = load i32, i32* %ry, align 4
  %158 = load i32, i32* %rx0, align 4
  %159 = load i32, i32* %img_height, align 4
  %160 = load i32, i32* %img_width, align 4
  %call = call zeroext i16 %155(i16** %156, i32 %157, i32 %158, i32 %159, i32 %160)
  %conv192 = zext i16 %call to i32
  %sub193 = sub nsw i32 %conv191, %conv192
  %161 = load i32*, i32** %d, align 8
  %incdec.ptr = getelementptr inbounds i32, i32* %161, i32 1
  store i32* %incdec.ptr, i32** %d, align 8
  store i32 %sub193, i32* %161, align 4
  %162 = load i32, i32* %x0, align 4
  %add194 = add nsw i32 %162, 1
  %idxprom195 = sext i32 %add194 to i64
  %163 = load i16*, i16** %orig_line, align 8
  %arrayidx196 = getelementptr inbounds i16, i16* %163, i64 %idxprom195
  %164 = load i16, i16* %arrayidx196, align 2
  %conv197 = zext i16 %164 to i32
  %165 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %166 = load i16**, i16*** %ref_pic, align 8
  %167 = load i32, i32* %ry, align 4
  %168 = load i32, i32* %rx0, align 4
  %add198 = add nsw i32 %168, 4
  %169 = load i32, i32* %img_height, align 4
  %170 = load i32, i32* %img_width, align 4
  %call199 = call zeroext i16 %165(i16** %166, i32 %167, i32 %add198, i32 %169, i32 %170)
  %conv200 = zext i16 %call199 to i32
  %sub201 = sub nsw i32 %conv197, %conv200
  %171 = load i32*, i32** %d, align 8
  %incdec.ptr202 = getelementptr inbounds i32, i32* %171, i32 1
  store i32* %incdec.ptr202, i32** %d, align 8
  store i32 %sub201, i32* %171, align 4
  %172 = load i32, i32* %x0, align 4
  %add203 = add nsw i32 %172, 2
  %idxprom204 = sext i32 %add203 to i64
  %173 = load i16*, i16** %orig_line, align 8
  %arrayidx205 = getelementptr inbounds i16, i16* %173, i64 %idxprom204
  %174 = load i16, i16* %arrayidx205, align 2
  %conv206 = zext i16 %174 to i32
  %175 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %176 = load i16**, i16*** %ref_pic, align 8
  %177 = load i32, i32* %ry, align 4
  %178 = load i32, i32* %rx0, align 4
  %add207 = add nsw i32 %178, 8
  %179 = load i32, i32* %img_height, align 4
  %180 = load i32, i32* %img_width, align 4
  %call208 = call zeroext i16 %175(i16** %176, i32 %177, i32 %add207, i32 %179, i32 %180)
  %conv209 = zext i16 %call208 to i32
  %sub210 = sub nsw i32 %conv206, %conv209
  %181 = load i32*, i32** %d, align 8
  %incdec.ptr211 = getelementptr inbounds i32, i32* %181, i32 1
  store i32* %incdec.ptr211, i32** %d, align 8
  store i32 %sub210, i32* %181, align 4
  %182 = load i32, i32* %x0, align 4
  %add212 = add nsw i32 %182, 3
  %idxprom213 = sext i32 %add212 to i64
  %183 = load i16*, i16** %orig_line, align 8
  %arrayidx214 = getelementptr inbounds i16, i16* %183, i64 %idxprom213
  %184 = load i16, i16* %arrayidx214, align 2
  %conv215 = zext i16 %184 to i32
  %185 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %186 = load i16**, i16*** %ref_pic, align 8
  %187 = load i32, i32* %ry, align 4
  %188 = load i32, i32* %rx0, align 4
  %add216 = add nsw i32 %188, 12
  %189 = load i32, i32* %img_height, align 4
  %190 = load i32, i32* %img_width, align 4
  %call217 = call zeroext i16 %185(i16** %186, i32 %187, i32 %add216, i32 %189, i32 %190)
  %conv218 = zext i16 %call217 to i32
  %sub219 = sub nsw i32 %conv215, %conv218
  %191 = load i32*, i32** %d, align 8
  %incdec.ptr220 = getelementptr inbounds i32, i32* %191, i32 1
  store i32* %incdec.ptr220, i32** %d, align 8
  store i32 %sub219, i32* %191, align 4
  %192 = load i32, i32* %y0, align 4
  %add221 = add nsw i32 %192, 1
  %idxprom222 = sext i32 %add221 to i64
  %193 = load i16**, i16*** %orig_pic.addr, align 8
  %arrayidx223 = getelementptr inbounds i16*, i16** %193, i64 %idxprom222
  %194 = load i16*, i16** %arrayidx223, align 8
  store i16* %194, i16** %orig_line, align 8
  %195 = load i32, i32* %ry0, align 4
  %add224 = add nsw i32 %195, 4
  store i32 %add224, i32* %ry, align 4
  %196 = load i32, i32* %x0, align 4
  %idxprom225 = sext i32 %196 to i64
  %197 = load i16*, i16** %orig_line, align 8
  %arrayidx226 = getelementptr inbounds i16, i16* %197, i64 %idxprom225
  %198 = load i16, i16* %arrayidx226, align 2
  %conv227 = zext i16 %198 to i32
  %199 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %200 = load i16**, i16*** %ref_pic, align 8
  %201 = load i32, i32* %ry, align 4
  %202 = load i32, i32* %rx0, align 4
  %203 = load i32, i32* %img_height, align 4
  %204 = load i32, i32* %img_width, align 4
  %call228 = call zeroext i16 %199(i16** %200, i32 %201, i32 %202, i32 %203, i32 %204)
  %conv229 = zext i16 %call228 to i32
  %sub230 = sub nsw i32 %conv227, %conv229
  %205 = load i32*, i32** %d, align 8
  %incdec.ptr231 = getelementptr inbounds i32, i32* %205, i32 1
  store i32* %incdec.ptr231, i32** %d, align 8
  store i32 %sub230, i32* %205, align 4
  %206 = load i32, i32* %x0, align 4
  %add232 = add nsw i32 %206, 1
  %idxprom233 = sext i32 %add232 to i64
  %207 = load i16*, i16** %orig_line, align 8
  %arrayidx234 = getelementptr inbounds i16, i16* %207, i64 %idxprom233
  %208 = load i16, i16* %arrayidx234, align 2
  %conv235 = zext i16 %208 to i32
  %209 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %210 = load i16**, i16*** %ref_pic, align 8
  %211 = load i32, i32* %ry, align 4
  %212 = load i32, i32* %rx0, align 4
  %add236 = add nsw i32 %212, 4
  %213 = load i32, i32* %img_height, align 4
  %214 = load i32, i32* %img_width, align 4
  %call237 = call zeroext i16 %209(i16** %210, i32 %211, i32 %add236, i32 %213, i32 %214)
  %conv238 = zext i16 %call237 to i32
  %sub239 = sub nsw i32 %conv235, %conv238
  %215 = load i32*, i32** %d, align 8
  %incdec.ptr240 = getelementptr inbounds i32, i32* %215, i32 1
  store i32* %incdec.ptr240, i32** %d, align 8
  store i32 %sub239, i32* %215, align 4
  %216 = load i32, i32* %x0, align 4
  %add241 = add nsw i32 %216, 2
  %idxprom242 = sext i32 %add241 to i64
  %217 = load i16*, i16** %orig_line, align 8
  %arrayidx243 = getelementptr inbounds i16, i16* %217, i64 %idxprom242
  %218 = load i16, i16* %arrayidx243, align 2
  %conv244 = zext i16 %218 to i32
  %219 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %220 = load i16**, i16*** %ref_pic, align 8
  %221 = load i32, i32* %ry, align 4
  %222 = load i32, i32* %rx0, align 4
  %add245 = add nsw i32 %222, 8
  %223 = load i32, i32* %img_height, align 4
  %224 = load i32, i32* %img_width, align 4
  %call246 = call zeroext i16 %219(i16** %220, i32 %221, i32 %add245, i32 %223, i32 %224)
  %conv247 = zext i16 %call246 to i32
  %sub248 = sub nsw i32 %conv244, %conv247
  %225 = load i32*, i32** %d, align 8
  %incdec.ptr249 = getelementptr inbounds i32, i32* %225, i32 1
  store i32* %incdec.ptr249, i32** %d, align 8
  store i32 %sub248, i32* %225, align 4
  %226 = load i32, i32* %x0, align 4
  %add250 = add nsw i32 %226, 3
  %idxprom251 = sext i32 %add250 to i64
  %227 = load i16*, i16** %orig_line, align 8
  %arrayidx252 = getelementptr inbounds i16, i16* %227, i64 %idxprom251
  %228 = load i16, i16* %arrayidx252, align 2
  %conv253 = zext i16 %228 to i32
  %229 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %230 = load i16**, i16*** %ref_pic, align 8
  %231 = load i32, i32* %ry, align 4
  %232 = load i32, i32* %rx0, align 4
  %add254 = add nsw i32 %232, 12
  %233 = load i32, i32* %img_height, align 4
  %234 = load i32, i32* %img_width, align 4
  %call255 = call zeroext i16 %229(i16** %230, i32 %231, i32 %add254, i32 %233, i32 %234)
  %conv256 = zext i16 %call255 to i32
  %sub257 = sub nsw i32 %conv253, %conv256
  %235 = load i32*, i32** %d, align 8
  %incdec.ptr258 = getelementptr inbounds i32, i32* %235, i32 1
  store i32* %incdec.ptr258, i32** %d, align 8
  store i32 %sub257, i32* %235, align 4
  %236 = load i32, i32* %y0, align 4
  %add259 = add nsw i32 %236, 2
  %idxprom260 = sext i32 %add259 to i64
  %237 = load i16**, i16*** %orig_pic.addr, align 8
  %arrayidx261 = getelementptr inbounds i16*, i16** %237, i64 %idxprom260
  %238 = load i16*, i16** %arrayidx261, align 8
  store i16* %238, i16** %orig_line, align 8
  %239 = load i32, i32* %ry0, align 4
  %add262 = add nsw i32 %239, 8
  store i32 %add262, i32* %ry, align 4
  %240 = load i32, i32* %x0, align 4
  %idxprom263 = sext i32 %240 to i64
  %241 = load i16*, i16** %orig_line, align 8
  %arrayidx264 = getelementptr inbounds i16, i16* %241, i64 %idxprom263
  %242 = load i16, i16* %arrayidx264, align 2
  %conv265 = zext i16 %242 to i32
  %243 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %244 = load i16**, i16*** %ref_pic, align 8
  %245 = load i32, i32* %ry, align 4
  %246 = load i32, i32* %rx0, align 4
  %247 = load i32, i32* %img_height, align 4
  %248 = load i32, i32* %img_width, align 4
  %call266 = call zeroext i16 %243(i16** %244, i32 %245, i32 %246, i32 %247, i32 %248)
  %conv267 = zext i16 %call266 to i32
  %sub268 = sub nsw i32 %conv265, %conv267
  %249 = load i32*, i32** %d, align 8
  %incdec.ptr269 = getelementptr inbounds i32, i32* %249, i32 1
  store i32* %incdec.ptr269, i32** %d, align 8
  store i32 %sub268, i32* %249, align 4
  %250 = load i32, i32* %x0, align 4
  %add270 = add nsw i32 %250, 1
  %idxprom271 = sext i32 %add270 to i64
  %251 = load i16*, i16** %orig_line, align 8
  %arrayidx272 = getelementptr inbounds i16, i16* %251, i64 %idxprom271
  %252 = load i16, i16* %arrayidx272, align 2
  %conv273 = zext i16 %252 to i32
  %253 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %254 = load i16**, i16*** %ref_pic, align 8
  %255 = load i32, i32* %ry, align 4
  %256 = load i32, i32* %rx0, align 4
  %add274 = add nsw i32 %256, 4
  %257 = load i32, i32* %img_height, align 4
  %258 = load i32, i32* %img_width, align 4
  %call275 = call zeroext i16 %253(i16** %254, i32 %255, i32 %add274, i32 %257, i32 %258)
  %conv276 = zext i16 %call275 to i32
  %sub277 = sub nsw i32 %conv273, %conv276
  %259 = load i32*, i32** %d, align 8
  %incdec.ptr278 = getelementptr inbounds i32, i32* %259, i32 1
  store i32* %incdec.ptr278, i32** %d, align 8
  store i32 %sub277, i32* %259, align 4
  %260 = load i32, i32* %x0, align 4
  %add279 = add nsw i32 %260, 2
  %idxprom280 = sext i32 %add279 to i64
  %261 = load i16*, i16** %orig_line, align 8
  %arrayidx281 = getelementptr inbounds i16, i16* %261, i64 %idxprom280
  %262 = load i16, i16* %arrayidx281, align 2
  %conv282 = zext i16 %262 to i32
  %263 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %264 = load i16**, i16*** %ref_pic, align 8
  %265 = load i32, i32* %ry, align 4
  %266 = load i32, i32* %rx0, align 4
  %add283 = add nsw i32 %266, 8
  %267 = load i32, i32* %img_height, align 4
  %268 = load i32, i32* %img_width, align 4
  %call284 = call zeroext i16 %263(i16** %264, i32 %265, i32 %add283, i32 %267, i32 %268)
  %conv285 = zext i16 %call284 to i32
  %sub286 = sub nsw i32 %conv282, %conv285
  %269 = load i32*, i32** %d, align 8
  %incdec.ptr287 = getelementptr inbounds i32, i32* %269, i32 1
  store i32* %incdec.ptr287, i32** %d, align 8
  store i32 %sub286, i32* %269, align 4
  %270 = load i32, i32* %x0, align 4
  %add288 = add nsw i32 %270, 3
  %idxprom289 = sext i32 %add288 to i64
  %271 = load i16*, i16** %orig_line, align 8
  %arrayidx290 = getelementptr inbounds i16, i16* %271, i64 %idxprom289
  %272 = load i16, i16* %arrayidx290, align 2
  %conv291 = zext i16 %272 to i32
  %273 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %274 = load i16**, i16*** %ref_pic, align 8
  %275 = load i32, i32* %ry, align 4
  %276 = load i32, i32* %rx0, align 4
  %add292 = add nsw i32 %276, 12
  %277 = load i32, i32* %img_height, align 4
  %278 = load i32, i32* %img_width, align 4
  %call293 = call zeroext i16 %273(i16** %274, i32 %275, i32 %add292, i32 %277, i32 %278)
  %conv294 = zext i16 %call293 to i32
  %sub295 = sub nsw i32 %conv291, %conv294
  %279 = load i32*, i32** %d, align 8
  %incdec.ptr296 = getelementptr inbounds i32, i32* %279, i32 1
  store i32* %incdec.ptr296, i32** %d, align 8
  store i32 %sub295, i32* %279, align 4
  %280 = load i32, i32* %y0, align 4
  %add297 = add nsw i32 %280, 3
  %idxprom298 = sext i32 %add297 to i64
  %281 = load i16**, i16*** %orig_pic.addr, align 8
  %arrayidx299 = getelementptr inbounds i16*, i16** %281, i64 %idxprom298
  %282 = load i16*, i16** %arrayidx299, align 8
  store i16* %282, i16** %orig_line, align 8
  %283 = load i32, i32* %ry0, align 4
  %add300 = add nsw i32 %283, 12
  store i32 %add300, i32* %ry, align 4
  %284 = load i32, i32* %x0, align 4
  %idxprom301 = sext i32 %284 to i64
  %285 = load i16*, i16** %orig_line, align 8
  %arrayidx302 = getelementptr inbounds i16, i16* %285, i64 %idxprom301
  %286 = load i16, i16* %arrayidx302, align 2
  %conv303 = zext i16 %286 to i32
  %287 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %288 = load i16**, i16*** %ref_pic, align 8
  %289 = load i32, i32* %ry, align 4
  %290 = load i32, i32* %rx0, align 4
  %291 = load i32, i32* %img_height, align 4
  %292 = load i32, i32* %img_width, align 4
  %call304 = call zeroext i16 %287(i16** %288, i32 %289, i32 %290, i32 %291, i32 %292)
  %conv305 = zext i16 %call304 to i32
  %sub306 = sub nsw i32 %conv303, %conv305
  %293 = load i32*, i32** %d, align 8
  %incdec.ptr307 = getelementptr inbounds i32, i32* %293, i32 1
  store i32* %incdec.ptr307, i32** %d, align 8
  store i32 %sub306, i32* %293, align 4
  %294 = load i32, i32* %x0, align 4
  %add308 = add nsw i32 %294, 1
  %idxprom309 = sext i32 %add308 to i64
  %295 = load i16*, i16** %orig_line, align 8
  %arrayidx310 = getelementptr inbounds i16, i16* %295, i64 %idxprom309
  %296 = load i16, i16* %arrayidx310, align 2
  %conv311 = zext i16 %296 to i32
  %297 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %298 = load i16**, i16*** %ref_pic, align 8
  %299 = load i32, i32* %ry, align 4
  %300 = load i32, i32* %rx0, align 4
  %add312 = add nsw i32 %300, 4
  %301 = load i32, i32* %img_height, align 4
  %302 = load i32, i32* %img_width, align 4
  %call313 = call zeroext i16 %297(i16** %298, i32 %299, i32 %add312, i32 %301, i32 %302)
  %conv314 = zext i16 %call313 to i32
  %sub315 = sub nsw i32 %conv311, %conv314
  %303 = load i32*, i32** %d, align 8
  %incdec.ptr316 = getelementptr inbounds i32, i32* %303, i32 1
  store i32* %incdec.ptr316, i32** %d, align 8
  store i32 %sub315, i32* %303, align 4
  %304 = load i32, i32* %x0, align 4
  %add317 = add nsw i32 %304, 2
  %idxprom318 = sext i32 %add317 to i64
  %305 = load i16*, i16** %orig_line, align 8
  %arrayidx319 = getelementptr inbounds i16, i16* %305, i64 %idxprom318
  %306 = load i16, i16* %arrayidx319, align 2
  %conv320 = zext i16 %306 to i32
  %307 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %308 = load i16**, i16*** %ref_pic, align 8
  %309 = load i32, i32* %ry, align 4
  %310 = load i32, i32* %rx0, align 4
  %add321 = add nsw i32 %310, 8
  %311 = load i32, i32* %img_height, align 4
  %312 = load i32, i32* %img_width, align 4
  %call322 = call zeroext i16 %307(i16** %308, i32 %309, i32 %add321, i32 %311, i32 %312)
  %conv323 = zext i16 %call322 to i32
  %sub324 = sub nsw i32 %conv320, %conv323
  %313 = load i32*, i32** %d, align 8
  %incdec.ptr325 = getelementptr inbounds i32, i32* %313, i32 1
  store i32* %incdec.ptr325, i32** %d, align 8
  store i32 %sub324, i32* %313, align 4
  %314 = load i32, i32* %x0, align 4
  %add326 = add nsw i32 %314, 3
  %idxprom327 = sext i32 %add326 to i64
  %315 = load i16*, i16** %orig_line, align 8
  %arrayidx328 = getelementptr inbounds i16, i16* %315, i64 %idxprom327
  %316 = load i16, i16* %arrayidx328, align 2
  %conv329 = zext i16 %316 to i32
  %317 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %318 = load i16**, i16*** %ref_pic, align 8
  %319 = load i32, i32* %ry, align 4
  %320 = load i32, i32* %rx0, align 4
  %add330 = add nsw i32 %320, 12
  %321 = load i32, i32* %img_height, align 4
  %322 = load i32, i32* %img_width, align 4
  %call331 = call zeroext i16 %317(i16** %318, i32 %319, i32 %add330, i32 %321, i32 %322)
  %conv332 = zext i16 %call331 to i32
  %sub333 = sub nsw i32 %conv329, %conv332
  %323 = load i32*, i32** %d, align 8
  store i32 %sub333, i32* %323, align 4
  %324 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %AllowTransform8x8 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %324, i32 0, i32 123
  %325 = load i32, i32* %AllowTransform8x8, align 4
  %tobool334 = icmp ne i32 %325, 0
  br i1 %tobool334, label %if.else.343, label %if.then.335

if.then.335:                                      ; preds = %for.body.183
  %arraydecay336 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i32 0, i32 0
  %326 = load i32, i32* %halfpelhadamard, align 4
  %call337 = call i32 @SATD(i32* %arraydecay336, i32 %326)
  %327 = load i32, i32* %mcost, align 4
  %add338 = add nsw i32 %327, %call337
  store i32 %add338, i32* %mcost, align 4
  %328 = load i32, i32* %min_mcost.addr, align 4
  %cmp339 = icmp sgt i32 %add338, %328
  br i1 %cmp339, label %if.then.341, label %if.end.342

if.then.341:                                      ; preds = %if.then.335
  store i32 1, i32* %abort_search, align 4
  br label %for.end.367

if.end.342:                                       ; preds = %if.then.335
  br label %if.end.364

if.else.343:                                      ; preds = %for.body.183
  store i32 0, i32* %j, align 4
  store i32 0, i32* %k, align 4
  br label %for.cond.344

for.cond.344:                                     ; preds = %for.inc.361, %if.else.343
  %329 = load i32, i32* %j, align 4
  %cmp345 = icmp slt i32 %329, 4
  br i1 %cmp345, label %for.body.347, label %for.end.363

for.body.347:                                     ; preds = %for.cond.344
  store i32 0, i32* %i, align 4
  br label %for.cond.348

for.cond.348:                                     ; preds = %for.inc, %for.body.347
  %330 = load i32, i32* %i, align 4
  %cmp349 = icmp slt i32 %330, 4
  br i1 %cmp349, label %for.body.351, label %for.end

for.body.351:                                     ; preds = %for.cond.348
  %331 = load i32, i32* %k, align 4
  %idxprom352 = sext i32 %331 to i64
  %arrayidx353 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i32 0, i64 %idxprom352
  %332 = load i32, i32* %arrayidx353, align 4
  %333 = load i32, i32* %x0, align 4
  %334 = load i32, i32* %i, align 4
  %add354 = add nsw i32 %333, %334
  %idxprom355 = sext i32 %add354 to i64
  %335 = load i32, i32* %y0, align 4
  %336 = load i32, i32* %j, align 4
  %add356 = add nsw i32 %335, %336
  %idxprom357 = sext i32 %add356 to i64
  %arrayidx358 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %curr_diff, i32 0, i64 %idxprom357
  %arrayidx359 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx358, i32 0, i64 %idxprom355
  store i32 %332, i32* %arrayidx359, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body.351
  %337 = load i32, i32* %i, align 4
  %inc = add nsw i32 %337, 1
  store i32 %inc, i32* %i, align 4
  %338 = load i32, i32* %k, align 4
  %inc360 = add nsw i32 %338, 1
  store i32 %inc360, i32* %k, align 4
  br label %for.cond.348

for.end:                                          ; preds = %for.cond.348
  br label %for.inc.361

for.inc.361:                                      ; preds = %for.end
  %339 = load i32, i32* %j, align 4
  %inc362 = add nsw i32 %339, 1
  store i32 %inc362, i32* %j, align 4
  br label %for.cond.344

for.end.363:                                      ; preds = %for.cond.344
  br label %if.end.364

if.end.364:                                       ; preds = %for.end.363, %if.end.342
  br label %for.inc.365

for.inc.365:                                      ; preds = %if.end.364
  %340 = load i32, i32* %x0, align 4
  %add366 = add nsw i32 %340, 4
  store i32 %add366, i32* %x0, align 4
  br label %for.cond.180

for.end.367:                                      ; preds = %if.then.341, %for.cond.180
  br label %for.inc.368

for.inc.368:                                      ; preds = %for.end.367
  %341 = load i32, i32* %y0, align 4
  %add369 = add nsw i32 %341, 4
  store i32 %add369, i32* %y0, align 4
  br label %for.cond.169

for.end.370:                                      ; preds = %land.end.174
  %342 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %AllowTransform8x8371 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %342, i32 0, i32 123
  %343 = load i32, i32* %AllowTransform8x8371, align 4
  %tobool372 = icmp ne i32 %343, 0
  br i1 %tobool372, label %if.then.373, label %if.end.377

if.then.373:                                      ; preds = %for.end.370
  %arraydecay374 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %curr_diff, i32 0, i32 0
  %344 = load i32, i32* %halfpelhadamard, align 4
  %345 = load i32, i32* %blocktype.addr, align 4
  %call375 = call i32 @find_SATD([16 x i32]* %arraydecay374, i32 %344, i32 %345)
  %346 = load i32, i32* %mcost, align 4
  %add376 = add nsw i32 %346, %call375
  store i32 %add376, i32* %mcost, align 4
  br label %if.end.377

if.end.377:                                       ; preds = %if.then.373, %for.end.370
  %347 = load i32, i32* %mcost, align 4
  %348 = load i32, i32* %min_mcost.addr, align 4
  %cmp378 = icmp slt i32 %347, %348
  br i1 %cmp378, label %if.then.380, label %if.end.381

if.then.380:                                      ; preds = %if.end.377
  %349 = load i32, i32* %mcost, align 4
  store i32 %349, i32* %min_mcost.addr, align 4
  %350 = load i32, i32* %pos, align 4
  store i32 %350, i32* %best_pos, align 4
  br label %if.end.381

if.end.381:                                       ; preds = %if.then.380, %if.end.377
  br label %for.inc.382

for.inc.382:                                      ; preds = %if.end.381, %if.then.167
  %351 = load i32, i32* %pos, align 4
  %inc383 = add nsw i32 %351, 1
  store i32 %inc383, i32* %pos, align 4
  br label %for.cond

for.end.384:                                      ; preds = %for.cond
  %352 = load i32, i32* %best_pos, align 4
  %tobool385 = icmp ne i32 %352, 0
  br i1 %tobool385, label %if.then.386, label %if.end.399

if.then.386:                                      ; preds = %for.end.384
  %353 = load i32, i32* %best_pos, align 4
  %idxprom387 = sext i32 %353 to i64
  %354 = load i32*, i32** @spiral_search_x, align 8
  %arrayidx388 = getelementptr inbounds i32, i32* %354, i64 %idxprom387
  %355 = load i32, i32* %arrayidx388, align 4
  %shl389 = shl i32 %355, 1
  %356 = load i16*, i16** %mv_x.addr, align 8
  %357 = load i16, i16* %356, align 2
  %conv390 = sext i16 %357 to i32
  %add391 = add nsw i32 %conv390, %shl389
  %conv392 = trunc i32 %add391 to i16
  store i16 %conv392, i16* %356, align 2
  %358 = load i32, i32* %best_pos, align 4
  %idxprom393 = sext i32 %358 to i64
  %359 = load i32*, i32** @spiral_search_y, align 8
  %arrayidx394 = getelementptr inbounds i32, i32* %359, i64 %idxprom393
  %360 = load i32, i32* %arrayidx394, align 4
  %shl395 = shl i32 %360, 1
  %361 = load i16*, i16** %mv_y.addr, align 8
  %362 = load i16, i16* %361, align 2
  %conv396 = sext i16 %362 to i32
  %add397 = add nsw i32 %conv396, %shl395
  %conv398 = trunc i32 %add397 to i16
  store i16 %conv398, i16* %361, align 2
  br label %if.end.399

if.end.399:                                       ; preds = %if.then.386, %for.end.384
  %363 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamardqpel400 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %363, i32 0, i32 7
  %364 = load i32, i32* %hadamardqpel400, align 4
  %tobool401 = icmp ne i32 %364, 0
  br i1 %tobool401, label %if.then.402, label %if.end.403

if.then.402:                                      ; preds = %if.end.399
  store i32 2147483647, i32* %min_mcost.addr, align 4
  br label %if.end.403

if.end.403:                                       ; preds = %if.then.402, %if.end.399
  %365 = load i32, i32* %pic4_pix_x, align 4
  %366 = load i16*, i16** %mv_x.addr, align 8
  %367 = load i16, i16* %366, align 2
  %conv404 = sext i16 %367 to i32
  %add405 = add nsw i32 %365, %conv404
  %cmp406 = icmp sgt i32 %add405, 1
  br i1 %cmp406, label %land.lhs.true.408, label %if.else.426

land.lhs.true.408:                                ; preds = %if.end.403
  %368 = load i32, i32* %pic4_pix_x, align 4
  %369 = load i16*, i16** %mv_x.addr, align 8
  %370 = load i16, i16* %369, align 2
  %conv409 = sext i16 %370 to i32
  %add410 = add nsw i32 %368, %conv409
  %371 = load i32, i32* %max_pos_x4, align 4
  %sub411 = sub nsw i32 %371, 1
  %cmp412 = icmp slt i32 %add410, %sub411
  br i1 %cmp412, label %land.lhs.true.414, label %if.else.426

land.lhs.true.414:                                ; preds = %land.lhs.true.408
  %372 = load i32, i32* %pic4_pix_y, align 4
  %373 = load i16*, i16** %mv_y.addr, align 8
  %374 = load i16, i16* %373, align 2
  %conv415 = sext i16 %374 to i32
  %add416 = add nsw i32 %372, %conv415
  %cmp417 = icmp sgt i32 %add416, 1
  br i1 %cmp417, label %land.lhs.true.419, label %if.else.426

land.lhs.true.419:                                ; preds = %land.lhs.true.414
  %375 = load i32, i32* %pic4_pix_y, align 4
  %376 = load i16*, i16** %mv_y.addr, align 8
  %377 = load i16, i16* %376, align 2
  %conv420 = sext i16 %377 to i32
  %add421 = add nsw i32 %375, %conv420
  %378 = load i32, i32* %max_pos_y4, align 4
  %sub422 = sub nsw i32 %378, 1
  %cmp423 = icmp slt i32 %add421, %sub422
  br i1 %cmp423, label %if.then.425, label %if.else.426

if.then.425:                                      ; preds = %land.lhs.true.419
  store i16 (i16**, i32, i32, i32, i32)* @FastPelY_14, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  br label %if.end.427

if.else.426:                                      ; preds = %land.lhs.true.419, %land.lhs.true.414, %land.lhs.true.408, %if.end.403
  store i16 (i16**, i32, i32, i32, i32)* @UMVPelY_14, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  br label %if.end.427

if.end.427:                                       ; preds = %if.else.426, %if.then.425
  store i32 0, i32* %best_pos, align 4
  %379 = load i32, i32* %qpelstart, align 4
  store i32 %379, i32* %pos, align 4
  br label %for.cond.428

for.cond.428:                                     ; preds = %for.inc.680, %if.end.427
  %380 = load i32, i32* %pos, align 4
  %381 = load i32, i32* %search_pos4.addr, align 4
  %cmp429 = icmp slt i32 %380, %381
  br i1 %cmp429, label %for.body.431, label %for.end.682

for.body.431:                                     ; preds = %for.cond.428
  %382 = load i16*, i16** %mv_x.addr, align 8
  %383 = load i16, i16* %382, align 2
  %conv432 = sext i16 %383 to i32
  %384 = load i32, i32* %pos, align 4
  %idxprom433 = sext i32 %384 to i64
  %385 = load i32*, i32** @spiral_search_x, align 8
  %arrayidx434 = getelementptr inbounds i32, i32* %385, i64 %idxprom433
  %386 = load i32, i32* %arrayidx434, align 4
  %add435 = add nsw i32 %conv432, %386
  store i32 %add435, i32* %cand_mv_x, align 4
  %387 = load i16*, i16** %mv_y.addr, align 8
  %388 = load i16, i16* %387, align 2
  %conv436 = sext i16 %388 to i32
  %389 = load i32, i32* %pos, align 4
  %idxprom437 = sext i32 %389 to i64
  %390 = load i32*, i32** @spiral_search_y, align 8
  %arrayidx438 = getelementptr inbounds i32, i32* %390, i64 %idxprom437
  %391 = load i32, i32* %arrayidx438, align 4
  %add439 = add nsw i32 %conv436, %391
  store i32 %add439, i32* %cand_mv_y, align 4
  %392 = load i32, i32* %lambda_factor, align 4
  %393 = load i32, i32* %cand_mv_x, align 4
  %394 = load i32, i32* %mv_shift, align 4
  %shl440 = shl i32 %393, %394
  %395 = load i16, i16* %pred_mv_x.addr, align 2
  %conv441 = sext i16 %395 to i32
  %sub442 = sub nsw i32 %shl440, %conv441
  %idxprom443 = sext i32 %sub442 to i64
  %396 = load i32*, i32** @mvbits, align 8
  %arrayidx444 = getelementptr inbounds i32, i32* %396, i64 %idxprom443
  %397 = load i32, i32* %arrayidx444, align 4
  %398 = load i32, i32* %cand_mv_y, align 4
  %399 = load i32, i32* %mv_shift, align 4
  %shl445 = shl i32 %398, %399
  %400 = load i16, i16* %pred_mv_y.addr, align 2
  %conv446 = sext i16 %400 to i32
  %sub447 = sub nsw i32 %shl445, %conv446
  %idxprom448 = sext i32 %sub447 to i64
  %401 = load i32*, i32** @mvbits, align 8
  %arrayidx449 = getelementptr inbounds i32, i32* %401, i64 %idxprom448
  %402 = load i32, i32* %arrayidx449, align 4
  %add450 = add nsw i32 %397, %402
  %mul451 = mul nsw i32 %392, %add450
  %shr452 = ashr i32 %mul451, 16
  store i32 %shr452, i32* %mcost, align 4
  %403 = load i32, i32* %mcost, align 4
  %404 = load i32, i32* %min_mcost.addr, align 4
  %cmp453 = icmp sge i32 %403, %404
  br i1 %cmp453, label %if.then.455, label %if.end.456

if.then.455:                                      ; preds = %for.body.431
  br label %for.inc.680

if.end.456:                                       ; preds = %for.body.431
  store i32 0, i32* %y0, align 4
  store i32 0, i32* %abort_search, align 4
  br label %for.cond.457

for.cond.457:                                     ; preds = %for.inc.665, %if.end.456
  %405 = load i32, i32* %y0, align 4
  %406 = load i32, i32* %blocksize_y, align 4
  %cmp458 = icmp slt i32 %405, %406
  br i1 %cmp458, label %land.rhs.460, label %land.end.463

land.rhs.460:                                     ; preds = %for.cond.457
  %407 = load i32, i32* %abort_search, align 4
  %tobool461 = icmp ne i32 %407, 0
  %lnot462 = xor i1 %tobool461, true
  br label %land.end.463

land.end.463:                                     ; preds = %land.rhs.460, %for.cond.457
  %408 = phi i1 [ false, %for.cond.457 ], [ %lnot462, %land.rhs.460 ]
  br i1 %408, label %for.body.465, label %for.end.667

for.body.465:                                     ; preds = %land.end.463
  %409 = load i32, i32* %pic_pix_y.addr, align 4
  %410 = load i32, i32* %y0, align 4
  %add466 = add nsw i32 %409, %410
  %shl467 = shl i32 %add466, 2
  %411 = load i32, i32* %cand_mv_y, align 4
  %add468 = add nsw i32 %shl467, %411
  store i32 %add468, i32* %ry0, align 4
  store i32 0, i32* %x0, align 4
  br label %for.cond.469

for.cond.469:                                     ; preds = %for.inc.662, %for.body.465
  %412 = load i32, i32* %x0, align 4
  %413 = load i32, i32* %blocksize_x, align 4
  %cmp470 = icmp slt i32 %412, %413
  br i1 %cmp470, label %for.body.472, label %for.end.664

for.body.472:                                     ; preds = %for.cond.469
  %414 = load i32, i32* %pic_pix_x.addr, align 4
  %415 = load i32, i32* %x0, align 4
  %add473 = add nsw i32 %414, %415
  %shl474 = shl i32 %add473, 2
  %416 = load i32, i32* %cand_mv_x, align 4
  %add475 = add nsw i32 %shl474, %416
  store i32 %add475, i32* %rx0, align 4
  %arraydecay476 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i32 0, i32 0
  store i32* %arraydecay476, i32** %d, align 8
  %417 = load i32, i32* %y0, align 4
  %idxprom477 = sext i32 %417 to i64
  %418 = load i16**, i16*** %orig_pic.addr, align 8
  %arrayidx478 = getelementptr inbounds i16*, i16** %418, i64 %idxprom477
  %419 = load i16*, i16** %arrayidx478, align 8
  store i16* %419, i16** %orig_line, align 8
  %420 = load i32, i32* %ry0, align 4
  store i32 %420, i32* %ry, align 4
  %421 = load i32, i32* %x0, align 4
  %idxprom479 = sext i32 %421 to i64
  %422 = load i16*, i16** %orig_line, align 8
  %arrayidx480 = getelementptr inbounds i16, i16* %422, i64 %idxprom479
  %423 = load i16, i16* %arrayidx480, align 2
  %conv481 = zext i16 %423 to i32
  %424 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %425 = load i16**, i16*** %ref_pic, align 8
  %426 = load i32, i32* %ry, align 4
  %427 = load i32, i32* %rx0, align 4
  %428 = load i32, i32* %img_height, align 4
  %429 = load i32, i32* %img_width, align 4
  %call482 = call zeroext i16 %424(i16** %425, i32 %426, i32 %427, i32 %428, i32 %429)
  %conv483 = zext i16 %call482 to i32
  %sub484 = sub nsw i32 %conv481, %conv483
  %430 = load i32*, i32** %d, align 8
  %incdec.ptr485 = getelementptr inbounds i32, i32* %430, i32 1
  store i32* %incdec.ptr485, i32** %d, align 8
  store i32 %sub484, i32* %430, align 4
  %431 = load i32, i32* %x0, align 4
  %add486 = add nsw i32 %431, 1
  %idxprom487 = sext i32 %add486 to i64
  %432 = load i16*, i16** %orig_line, align 8
  %arrayidx488 = getelementptr inbounds i16, i16* %432, i64 %idxprom487
  %433 = load i16, i16* %arrayidx488, align 2
  %conv489 = zext i16 %433 to i32
  %434 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %435 = load i16**, i16*** %ref_pic, align 8
  %436 = load i32, i32* %ry, align 4
  %437 = load i32, i32* %rx0, align 4
  %add490 = add nsw i32 %437, 4
  %438 = load i32, i32* %img_height, align 4
  %439 = load i32, i32* %img_width, align 4
  %call491 = call zeroext i16 %434(i16** %435, i32 %436, i32 %add490, i32 %438, i32 %439)
  %conv492 = zext i16 %call491 to i32
  %sub493 = sub nsw i32 %conv489, %conv492
  %440 = load i32*, i32** %d, align 8
  %incdec.ptr494 = getelementptr inbounds i32, i32* %440, i32 1
  store i32* %incdec.ptr494, i32** %d, align 8
  store i32 %sub493, i32* %440, align 4
  %441 = load i32, i32* %x0, align 4
  %add495 = add nsw i32 %441, 2
  %idxprom496 = sext i32 %add495 to i64
  %442 = load i16*, i16** %orig_line, align 8
  %arrayidx497 = getelementptr inbounds i16, i16* %442, i64 %idxprom496
  %443 = load i16, i16* %arrayidx497, align 2
  %conv498 = zext i16 %443 to i32
  %444 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %445 = load i16**, i16*** %ref_pic, align 8
  %446 = load i32, i32* %ry, align 4
  %447 = load i32, i32* %rx0, align 4
  %add499 = add nsw i32 %447, 8
  %448 = load i32, i32* %img_height, align 4
  %449 = load i32, i32* %img_width, align 4
  %call500 = call zeroext i16 %444(i16** %445, i32 %446, i32 %add499, i32 %448, i32 %449)
  %conv501 = zext i16 %call500 to i32
  %sub502 = sub nsw i32 %conv498, %conv501
  %450 = load i32*, i32** %d, align 8
  %incdec.ptr503 = getelementptr inbounds i32, i32* %450, i32 1
  store i32* %incdec.ptr503, i32** %d, align 8
  store i32 %sub502, i32* %450, align 4
  %451 = load i32, i32* %x0, align 4
  %add504 = add nsw i32 %451, 3
  %idxprom505 = sext i32 %add504 to i64
  %452 = load i16*, i16** %orig_line, align 8
  %arrayidx506 = getelementptr inbounds i16, i16* %452, i64 %idxprom505
  %453 = load i16, i16* %arrayidx506, align 2
  %conv507 = zext i16 %453 to i32
  %454 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %455 = load i16**, i16*** %ref_pic, align 8
  %456 = load i32, i32* %ry, align 4
  %457 = load i32, i32* %rx0, align 4
  %add508 = add nsw i32 %457, 12
  %458 = load i32, i32* %img_height, align 4
  %459 = load i32, i32* %img_width, align 4
  %call509 = call zeroext i16 %454(i16** %455, i32 %456, i32 %add508, i32 %458, i32 %459)
  %conv510 = zext i16 %call509 to i32
  %sub511 = sub nsw i32 %conv507, %conv510
  %460 = load i32*, i32** %d, align 8
  %incdec.ptr512 = getelementptr inbounds i32, i32* %460, i32 1
  store i32* %incdec.ptr512, i32** %d, align 8
  store i32 %sub511, i32* %460, align 4
  %461 = load i32, i32* %y0, align 4
  %add513 = add nsw i32 %461, 1
  %idxprom514 = sext i32 %add513 to i64
  %462 = load i16**, i16*** %orig_pic.addr, align 8
  %arrayidx515 = getelementptr inbounds i16*, i16** %462, i64 %idxprom514
  %463 = load i16*, i16** %arrayidx515, align 8
  store i16* %463, i16** %orig_line, align 8
  %464 = load i32, i32* %ry0, align 4
  %add516 = add nsw i32 %464, 4
  store i32 %add516, i32* %ry, align 4
  %465 = load i32, i32* %x0, align 4
  %idxprom517 = sext i32 %465 to i64
  %466 = load i16*, i16** %orig_line, align 8
  %arrayidx518 = getelementptr inbounds i16, i16* %466, i64 %idxprom517
  %467 = load i16, i16* %arrayidx518, align 2
  %conv519 = zext i16 %467 to i32
  %468 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %469 = load i16**, i16*** %ref_pic, align 8
  %470 = load i32, i32* %ry, align 4
  %471 = load i32, i32* %rx0, align 4
  %472 = load i32, i32* %img_height, align 4
  %473 = load i32, i32* %img_width, align 4
  %call520 = call zeroext i16 %468(i16** %469, i32 %470, i32 %471, i32 %472, i32 %473)
  %conv521 = zext i16 %call520 to i32
  %sub522 = sub nsw i32 %conv519, %conv521
  %474 = load i32*, i32** %d, align 8
  %incdec.ptr523 = getelementptr inbounds i32, i32* %474, i32 1
  store i32* %incdec.ptr523, i32** %d, align 8
  store i32 %sub522, i32* %474, align 4
  %475 = load i32, i32* %x0, align 4
  %add524 = add nsw i32 %475, 1
  %idxprom525 = sext i32 %add524 to i64
  %476 = load i16*, i16** %orig_line, align 8
  %arrayidx526 = getelementptr inbounds i16, i16* %476, i64 %idxprom525
  %477 = load i16, i16* %arrayidx526, align 2
  %conv527 = zext i16 %477 to i32
  %478 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %479 = load i16**, i16*** %ref_pic, align 8
  %480 = load i32, i32* %ry, align 4
  %481 = load i32, i32* %rx0, align 4
  %add528 = add nsw i32 %481, 4
  %482 = load i32, i32* %img_height, align 4
  %483 = load i32, i32* %img_width, align 4
  %call529 = call zeroext i16 %478(i16** %479, i32 %480, i32 %add528, i32 %482, i32 %483)
  %conv530 = zext i16 %call529 to i32
  %sub531 = sub nsw i32 %conv527, %conv530
  %484 = load i32*, i32** %d, align 8
  %incdec.ptr532 = getelementptr inbounds i32, i32* %484, i32 1
  store i32* %incdec.ptr532, i32** %d, align 8
  store i32 %sub531, i32* %484, align 4
  %485 = load i32, i32* %x0, align 4
  %add533 = add nsw i32 %485, 2
  %idxprom534 = sext i32 %add533 to i64
  %486 = load i16*, i16** %orig_line, align 8
  %arrayidx535 = getelementptr inbounds i16, i16* %486, i64 %idxprom534
  %487 = load i16, i16* %arrayidx535, align 2
  %conv536 = zext i16 %487 to i32
  %488 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %489 = load i16**, i16*** %ref_pic, align 8
  %490 = load i32, i32* %ry, align 4
  %491 = load i32, i32* %rx0, align 4
  %add537 = add nsw i32 %491, 8
  %492 = load i32, i32* %img_height, align 4
  %493 = load i32, i32* %img_width, align 4
  %call538 = call zeroext i16 %488(i16** %489, i32 %490, i32 %add537, i32 %492, i32 %493)
  %conv539 = zext i16 %call538 to i32
  %sub540 = sub nsw i32 %conv536, %conv539
  %494 = load i32*, i32** %d, align 8
  %incdec.ptr541 = getelementptr inbounds i32, i32* %494, i32 1
  store i32* %incdec.ptr541, i32** %d, align 8
  store i32 %sub540, i32* %494, align 4
  %495 = load i32, i32* %x0, align 4
  %add542 = add nsw i32 %495, 3
  %idxprom543 = sext i32 %add542 to i64
  %496 = load i16*, i16** %orig_line, align 8
  %arrayidx544 = getelementptr inbounds i16, i16* %496, i64 %idxprom543
  %497 = load i16, i16* %arrayidx544, align 2
  %conv545 = zext i16 %497 to i32
  %498 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %499 = load i16**, i16*** %ref_pic, align 8
  %500 = load i32, i32* %ry, align 4
  %501 = load i32, i32* %rx0, align 4
  %add546 = add nsw i32 %501, 12
  %502 = load i32, i32* %img_height, align 4
  %503 = load i32, i32* %img_width, align 4
  %call547 = call zeroext i16 %498(i16** %499, i32 %500, i32 %add546, i32 %502, i32 %503)
  %conv548 = zext i16 %call547 to i32
  %sub549 = sub nsw i32 %conv545, %conv548
  %504 = load i32*, i32** %d, align 8
  %incdec.ptr550 = getelementptr inbounds i32, i32* %504, i32 1
  store i32* %incdec.ptr550, i32** %d, align 8
  store i32 %sub549, i32* %504, align 4
  %505 = load i32, i32* %y0, align 4
  %add551 = add nsw i32 %505, 2
  %idxprom552 = sext i32 %add551 to i64
  %506 = load i16**, i16*** %orig_pic.addr, align 8
  %arrayidx553 = getelementptr inbounds i16*, i16** %506, i64 %idxprom552
  %507 = load i16*, i16** %arrayidx553, align 8
  store i16* %507, i16** %orig_line, align 8
  %508 = load i32, i32* %ry0, align 4
  %add554 = add nsw i32 %508, 8
  store i32 %add554, i32* %ry, align 4
  %509 = load i32, i32* %x0, align 4
  %idxprom555 = sext i32 %509 to i64
  %510 = load i16*, i16** %orig_line, align 8
  %arrayidx556 = getelementptr inbounds i16, i16* %510, i64 %idxprom555
  %511 = load i16, i16* %arrayidx556, align 2
  %conv557 = zext i16 %511 to i32
  %512 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %513 = load i16**, i16*** %ref_pic, align 8
  %514 = load i32, i32* %ry, align 4
  %515 = load i32, i32* %rx0, align 4
  %516 = load i32, i32* %img_height, align 4
  %517 = load i32, i32* %img_width, align 4
  %call558 = call zeroext i16 %512(i16** %513, i32 %514, i32 %515, i32 %516, i32 %517)
  %conv559 = zext i16 %call558 to i32
  %sub560 = sub nsw i32 %conv557, %conv559
  %518 = load i32*, i32** %d, align 8
  %incdec.ptr561 = getelementptr inbounds i32, i32* %518, i32 1
  store i32* %incdec.ptr561, i32** %d, align 8
  store i32 %sub560, i32* %518, align 4
  %519 = load i32, i32* %x0, align 4
  %add562 = add nsw i32 %519, 1
  %idxprom563 = sext i32 %add562 to i64
  %520 = load i16*, i16** %orig_line, align 8
  %arrayidx564 = getelementptr inbounds i16, i16* %520, i64 %idxprom563
  %521 = load i16, i16* %arrayidx564, align 2
  %conv565 = zext i16 %521 to i32
  %522 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %523 = load i16**, i16*** %ref_pic, align 8
  %524 = load i32, i32* %ry, align 4
  %525 = load i32, i32* %rx0, align 4
  %add566 = add nsw i32 %525, 4
  %526 = load i32, i32* %img_height, align 4
  %527 = load i32, i32* %img_width, align 4
  %call567 = call zeroext i16 %522(i16** %523, i32 %524, i32 %add566, i32 %526, i32 %527)
  %conv568 = zext i16 %call567 to i32
  %sub569 = sub nsw i32 %conv565, %conv568
  %528 = load i32*, i32** %d, align 8
  %incdec.ptr570 = getelementptr inbounds i32, i32* %528, i32 1
  store i32* %incdec.ptr570, i32** %d, align 8
  store i32 %sub569, i32* %528, align 4
  %529 = load i32, i32* %x0, align 4
  %add571 = add nsw i32 %529, 2
  %idxprom572 = sext i32 %add571 to i64
  %530 = load i16*, i16** %orig_line, align 8
  %arrayidx573 = getelementptr inbounds i16, i16* %530, i64 %idxprom572
  %531 = load i16, i16* %arrayidx573, align 2
  %conv574 = zext i16 %531 to i32
  %532 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %533 = load i16**, i16*** %ref_pic, align 8
  %534 = load i32, i32* %ry, align 4
  %535 = load i32, i32* %rx0, align 4
  %add575 = add nsw i32 %535, 8
  %536 = load i32, i32* %img_height, align 4
  %537 = load i32, i32* %img_width, align 4
  %call576 = call zeroext i16 %532(i16** %533, i32 %534, i32 %add575, i32 %536, i32 %537)
  %conv577 = zext i16 %call576 to i32
  %sub578 = sub nsw i32 %conv574, %conv577
  %538 = load i32*, i32** %d, align 8
  %incdec.ptr579 = getelementptr inbounds i32, i32* %538, i32 1
  store i32* %incdec.ptr579, i32** %d, align 8
  store i32 %sub578, i32* %538, align 4
  %539 = load i32, i32* %x0, align 4
  %add580 = add nsw i32 %539, 3
  %idxprom581 = sext i32 %add580 to i64
  %540 = load i16*, i16** %orig_line, align 8
  %arrayidx582 = getelementptr inbounds i16, i16* %540, i64 %idxprom581
  %541 = load i16, i16* %arrayidx582, align 2
  %conv583 = zext i16 %541 to i32
  %542 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %543 = load i16**, i16*** %ref_pic, align 8
  %544 = load i32, i32* %ry, align 4
  %545 = load i32, i32* %rx0, align 4
  %add584 = add nsw i32 %545, 12
  %546 = load i32, i32* %img_height, align 4
  %547 = load i32, i32* %img_width, align 4
  %call585 = call zeroext i16 %542(i16** %543, i32 %544, i32 %add584, i32 %546, i32 %547)
  %conv586 = zext i16 %call585 to i32
  %sub587 = sub nsw i32 %conv583, %conv586
  %548 = load i32*, i32** %d, align 8
  %incdec.ptr588 = getelementptr inbounds i32, i32* %548, i32 1
  store i32* %incdec.ptr588, i32** %d, align 8
  store i32 %sub587, i32* %548, align 4
  %549 = load i32, i32* %y0, align 4
  %add589 = add nsw i32 %549, 3
  %idxprom590 = sext i32 %add589 to i64
  %550 = load i16**, i16*** %orig_pic.addr, align 8
  %arrayidx591 = getelementptr inbounds i16*, i16** %550, i64 %idxprom590
  %551 = load i16*, i16** %arrayidx591, align 8
  store i16* %551, i16** %orig_line, align 8
  %552 = load i32, i32* %ry0, align 4
  %add592 = add nsw i32 %552, 12
  store i32 %add592, i32* %ry, align 4
  %553 = load i32, i32* %x0, align 4
  %idxprom593 = sext i32 %553 to i64
  %554 = load i16*, i16** %orig_line, align 8
  %arrayidx594 = getelementptr inbounds i16, i16* %554, i64 %idxprom593
  %555 = load i16, i16* %arrayidx594, align 2
  %conv595 = zext i16 %555 to i32
  %556 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %557 = load i16**, i16*** %ref_pic, align 8
  %558 = load i32, i32* %ry, align 4
  %559 = load i32, i32* %rx0, align 4
  %560 = load i32, i32* %img_height, align 4
  %561 = load i32, i32* %img_width, align 4
  %call596 = call zeroext i16 %556(i16** %557, i32 %558, i32 %559, i32 %560, i32 %561)
  %conv597 = zext i16 %call596 to i32
  %sub598 = sub nsw i32 %conv595, %conv597
  %562 = load i32*, i32** %d, align 8
  %incdec.ptr599 = getelementptr inbounds i32, i32* %562, i32 1
  store i32* %incdec.ptr599, i32** %d, align 8
  store i32 %sub598, i32* %562, align 4
  %563 = load i32, i32* %x0, align 4
  %add600 = add nsw i32 %563, 1
  %idxprom601 = sext i32 %add600 to i64
  %564 = load i16*, i16** %orig_line, align 8
  %arrayidx602 = getelementptr inbounds i16, i16* %564, i64 %idxprom601
  %565 = load i16, i16* %arrayidx602, align 2
  %conv603 = zext i16 %565 to i32
  %566 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %567 = load i16**, i16*** %ref_pic, align 8
  %568 = load i32, i32* %ry, align 4
  %569 = load i32, i32* %rx0, align 4
  %add604 = add nsw i32 %569, 4
  %570 = load i32, i32* %img_height, align 4
  %571 = load i32, i32* %img_width, align 4
  %call605 = call zeroext i16 %566(i16** %567, i32 %568, i32 %add604, i32 %570, i32 %571)
  %conv606 = zext i16 %call605 to i32
  %sub607 = sub nsw i32 %conv603, %conv606
  %572 = load i32*, i32** %d, align 8
  %incdec.ptr608 = getelementptr inbounds i32, i32* %572, i32 1
  store i32* %incdec.ptr608, i32** %d, align 8
  store i32 %sub607, i32* %572, align 4
  %573 = load i32, i32* %x0, align 4
  %add609 = add nsw i32 %573, 2
  %idxprom610 = sext i32 %add609 to i64
  %574 = load i16*, i16** %orig_line, align 8
  %arrayidx611 = getelementptr inbounds i16, i16* %574, i64 %idxprom610
  %575 = load i16, i16* %arrayidx611, align 2
  %conv612 = zext i16 %575 to i32
  %576 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %577 = load i16**, i16*** %ref_pic, align 8
  %578 = load i32, i32* %ry, align 4
  %579 = load i32, i32* %rx0, align 4
  %add613 = add nsw i32 %579, 8
  %580 = load i32, i32* %img_height, align 4
  %581 = load i32, i32* %img_width, align 4
  %call614 = call zeroext i16 %576(i16** %577, i32 %578, i32 %add613, i32 %580, i32 %581)
  %conv615 = zext i16 %call614 to i32
  %sub616 = sub nsw i32 %conv612, %conv615
  %582 = load i32*, i32** %d, align 8
  %incdec.ptr617 = getelementptr inbounds i32, i32* %582, i32 1
  store i32* %incdec.ptr617, i32** %d, align 8
  store i32 %sub616, i32* %582, align 4
  %583 = load i32, i32* %x0, align 4
  %add618 = add nsw i32 %583, 3
  %idxprom619 = sext i32 %add618 to i64
  %584 = load i16*, i16** %orig_line, align 8
  %arrayidx620 = getelementptr inbounds i16, i16* %584, i64 %idxprom619
  %585 = load i16, i16* %arrayidx620, align 2
  %conv621 = zext i16 %585 to i32
  %586 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %587 = load i16**, i16*** %ref_pic, align 8
  %588 = load i32, i32* %ry, align 4
  %589 = load i32, i32* %rx0, align 4
  %add622 = add nsw i32 %589, 12
  %590 = load i32, i32* %img_height, align 4
  %591 = load i32, i32* %img_width, align 4
  %call623 = call zeroext i16 %586(i16** %587, i32 %588, i32 %add622, i32 %590, i32 %591)
  %conv624 = zext i16 %call623 to i32
  %sub625 = sub nsw i32 %conv621, %conv624
  %592 = load i32*, i32** %d, align 8
  store i32 %sub625, i32* %592, align 4
  %593 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %AllowTransform8x8626 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %593, i32 0, i32 123
  %594 = load i32, i32* %AllowTransform8x8626, align 4
  %tobool627 = icmp ne i32 %594, 0
  br i1 %tobool627, label %if.else.637, label %if.then.628

if.then.628:                                      ; preds = %for.body.472
  %arraydecay629 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i32 0, i32 0
  %595 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamard630 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %595, i32 0, i32 6
  %596 = load i32, i32* %hadamard630, align 4
  %call631 = call i32 @SATD(i32* %arraydecay629, i32 %596)
  %597 = load i32, i32* %mcost, align 4
  %add632 = add nsw i32 %597, %call631
  store i32 %add632, i32* %mcost, align 4
  %598 = load i32, i32* %min_mcost.addr, align 4
  %cmp633 = icmp sgt i32 %add632, %598
  br i1 %cmp633, label %if.then.635, label %if.end.636

if.then.635:                                      ; preds = %if.then.628
  store i32 1, i32* %abort_search, align 4
  br label %for.end.664

if.end.636:                                       ; preds = %if.then.628
  br label %if.end.661

if.else.637:                                      ; preds = %for.body.472
  store i32 0, i32* %j, align 4
  store i32 0, i32* %k, align 4
  br label %for.cond.638

for.cond.638:                                     ; preds = %for.inc.658, %if.else.637
  %599 = load i32, i32* %j, align 4
  %cmp639 = icmp slt i32 %599, 4
  br i1 %cmp639, label %for.body.641, label %for.end.660

for.body.641:                                     ; preds = %for.cond.638
  store i32 0, i32* %i, align 4
  br label %for.cond.642

for.cond.642:                                     ; preds = %for.inc.654, %for.body.641
  %600 = load i32, i32* %i, align 4
  %cmp643 = icmp slt i32 %600, 4
  br i1 %cmp643, label %for.body.645, label %for.end.657

for.body.645:                                     ; preds = %for.cond.642
  %601 = load i32, i32* %k, align 4
  %idxprom646 = sext i32 %601 to i64
  %arrayidx647 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i32 0, i64 %idxprom646
  %602 = load i32, i32* %arrayidx647, align 4
  %603 = load i32, i32* %x0, align 4
  %604 = load i32, i32* %i, align 4
  %add648 = add nsw i32 %603, %604
  %idxprom649 = sext i32 %add648 to i64
  %605 = load i32, i32* %y0, align 4
  %606 = load i32, i32* %j, align 4
  %add650 = add nsw i32 %605, %606
  %idxprom651 = sext i32 %add650 to i64
  %arrayidx652 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %curr_diff, i32 0, i64 %idxprom651
  %arrayidx653 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx652, i32 0, i64 %idxprom649
  store i32 %602, i32* %arrayidx653, align 4
  br label %for.inc.654

for.inc.654:                                      ; preds = %for.body.645
  %607 = load i32, i32* %i, align 4
  %inc655 = add nsw i32 %607, 1
  store i32 %inc655, i32* %i, align 4
  %608 = load i32, i32* %k, align 4
  %inc656 = add nsw i32 %608, 1
  store i32 %inc656, i32* %k, align 4
  br label %for.cond.642

for.end.657:                                      ; preds = %for.cond.642
  br label %for.inc.658

for.inc.658:                                      ; preds = %for.end.657
  %609 = load i32, i32* %j, align 4
  %inc659 = add nsw i32 %609, 1
  store i32 %inc659, i32* %j, align 4
  br label %for.cond.638

for.end.660:                                      ; preds = %for.cond.638
  br label %if.end.661

if.end.661:                                       ; preds = %for.end.660, %if.end.636
  br label %for.inc.662

for.inc.662:                                      ; preds = %if.end.661
  %610 = load i32, i32* %x0, align 4
  %add663 = add nsw i32 %610, 4
  store i32 %add663, i32* %x0, align 4
  br label %for.cond.469

for.end.664:                                      ; preds = %if.then.635, %for.cond.469
  br label %for.inc.665

for.inc.665:                                      ; preds = %for.end.664
  %611 = load i32, i32* %y0, align 4
  %add666 = add nsw i32 %611, 4
  store i32 %add666, i32* %y0, align 4
  br label %for.cond.457

for.end.667:                                      ; preds = %land.end.463
  %612 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %AllowTransform8x8668 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %612, i32 0, i32 123
  %613 = load i32, i32* %AllowTransform8x8668, align 4
  %tobool669 = icmp ne i32 %613, 0
  br i1 %tobool669, label %if.then.670, label %if.end.675

if.then.670:                                      ; preds = %for.end.667
  %arraydecay671 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %curr_diff, i32 0, i32 0
  %614 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamard672 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %614, i32 0, i32 6
  %615 = load i32, i32* %hadamard672, align 4
  %616 = load i32, i32* %blocktype.addr, align 4
  %call673 = call i32 @find_SATD([16 x i32]* %arraydecay671, i32 %615, i32 %616)
  %617 = load i32, i32* %mcost, align 4
  %add674 = add nsw i32 %617, %call673
  store i32 %add674, i32* %mcost, align 4
  br label %if.end.675

if.end.675:                                       ; preds = %if.then.670, %for.end.667
  %618 = load i32, i32* %mcost, align 4
  %619 = load i32, i32* %min_mcost.addr, align 4
  %cmp676 = icmp slt i32 %618, %619
  br i1 %cmp676, label %if.then.678, label %if.end.679

if.then.678:                                      ; preds = %if.end.675
  %620 = load i32, i32* %mcost, align 4
  store i32 %620, i32* %min_mcost.addr, align 4
  %621 = load i32, i32* %pos, align 4
  store i32 %621, i32* %best_pos, align 4
  br label %if.end.679

if.end.679:                                       ; preds = %if.then.678, %if.end.675
  br label %for.inc.680

for.inc.680:                                      ; preds = %if.end.679, %if.then.455
  %622 = load i32, i32* %pos, align 4
  %inc681 = add nsw i32 %622, 1
  store i32 %inc681, i32* %pos, align 4
  br label %for.cond.428

for.end.682:                                      ; preds = %for.cond.428
  %623 = load i32, i32* %best_pos, align 4
  %tobool683 = icmp ne i32 %623, 0
  br i1 %tobool683, label %if.then.684, label %if.end.695

if.then.684:                                      ; preds = %for.end.682
  %624 = load i32, i32* %best_pos, align 4
  %idxprom685 = sext i32 %624 to i64
  %625 = load i32*, i32** @spiral_search_x, align 8
  %arrayidx686 = getelementptr inbounds i32, i32* %625, i64 %idxprom685
  %626 = load i32, i32* %arrayidx686, align 4
  %627 = load i16*, i16** %mv_x.addr, align 8
  %628 = load i16, i16* %627, align 2
  %conv687 = sext i16 %628 to i32
  %add688 = add nsw i32 %conv687, %626
  %conv689 = trunc i32 %add688 to i16
  store i16 %conv689, i16* %627, align 2
  %629 = load i32, i32* %best_pos, align 4
  %idxprom690 = sext i32 %629 to i64
  %630 = load i32*, i32** @spiral_search_y, align 8
  %arrayidx691 = getelementptr inbounds i32, i32* %630, i64 %idxprom690
  %631 = load i32, i32* %arrayidx691, align 4
  %632 = load i16*, i16** %mv_y.addr, align 8
  %633 = load i16, i16* %632, align 2
  %conv692 = sext i16 %633 to i32
  %add693 = add nsw i32 %conv692, %631
  %conv694 = trunc i32 %add693 to i16
  store i16 %conv694, i16* %632, align 2
  br label %if.end.695

if.end.695:                                       ; preds = %if.then.684, %for.end.682
  %634 = load i32, i32* %min_mcost.addr, align 4
  ret i32 %634
}

declare zeroext i16 @FastPelY_14(i16**, i32, i32, i32, i32) #2

declare zeroext i16 @UMVPelY_14(i16**, i32, i32, i32, i32) #2

; Function Attrs: nounwind uwtable
define i32 @FullPelBlockMotionBiPred(i16** %orig_pic, i16 signext %ref, i32 %list, i32 %pic_pix_x, i32 %pic_pix_y, i32 %blocktype, i32 %iteration, i16 signext %pred_mv_x1, i16 signext %pred_mv_y1, i16 signext %pred_mv_x2, i16 signext %pred_mv_y2, i16* %mv_x, i16* %mv_y, i16* %s_mv_x, i16* %s_mv_y, i32 %search_range, i32 %min_mcost, double %lambda) #0 {
entry:
  %orig_pic.addr = alloca i16**, align 8
  %ref.addr = alloca i16, align 2
  %list.addr = alloca i32, align 4
  %pic_pix_x.addr = alloca i32, align 4
  %pic_pix_y.addr = alloca i32, align 4
  %blocktype.addr = alloca i32, align 4
  %iteration.addr = alloca i32, align 4
  %pred_mv_x1.addr = alloca i16, align 2
  %pred_mv_y1.addr = alloca i16, align 2
  %pred_mv_x2.addr = alloca i16, align 2
  %pred_mv_y2.addr = alloca i16, align 2
  %mv_x.addr = alloca i16*, align 8
  %mv_y.addr = alloca i16*, align 8
  %s_mv_x.addr = alloca i16*, align 8
  %s_mv_y.addr = alloca i16*, align 8
  %search_range.addr = alloca i32, align 4
  %min_mcost.addr = alloca i32, align 4
  %lambda.addr = alloca double, align 8
  %pos = alloca i32, align 4
  %cand_x = alloca i32, align 4
  %cand_y = alloca i32, align 4
  %y = alloca i32, align 4
  %x4 = alloca i32, align 4
  %mcost = alloca i32, align 4
  %orig_line = alloca i16*, align 8
  %ref2_line = alloca i16*, align 8
  %ref1_line = alloca i16*, align 8
  %get_ref_line1 = alloca i16* (i32, i16*, i32, i32, i32, i32)*, align 8
  %get_ref_line2 = alloca i16* (i32, i16*, i32, i32, i32, i32)*, align 8
  %list_offset = alloca i32, align 4
  %ref1_pic = alloca i16*, align 8
  %ref2_pic = alloca i16*, align 8
  %img_width = alloca i32, align 4
  %img_height = alloca i32, align 4
  %best_pos = alloca i32, align 4
  %max_pos = alloca i32, align 4
  %lambda_factor = alloca i32, align 4
  %blocksize_y = alloca i32, align 4
  %blocksize_x = alloca i32, align 4
  %blocksize_x4 = alloca i32, align 4
  %pred_x1 = alloca i32, align 4
  %pred_y1 = alloca i32, align 4
  %pred_x2 = alloca i32, align 4
  %pred_y2 = alloca i32, align 4
  %center_x = alloca i16, align 2
  %center_y = alloca i16, align 2
  %ref1_center_x = alloca i16, align 2
  %ref1_center_y = alloca i16, align 2
  %bi_diff = alloca i32, align 4
  %apply_weights = alloca i16, align 2
  %weightSpic = alloca i16, align 2
  %weightRpic = alloca i16, align 2
  %offsetSpic = alloca i16, align 2
  %offsetRpic = alloca i16, align 2
  %weightedpel = alloca i16, align 2
  %pixel1 = alloca i16, align 2
  %pixel2 = alloca i16, align 2
  %offsetBi = alloca i16, align 2
  store i16** %orig_pic, i16*** %orig_pic.addr, align 8
  store i16 %ref, i16* %ref.addr, align 2
  store i32 %list, i32* %list.addr, align 4
  store i32 %pic_pix_x, i32* %pic_pix_x.addr, align 4
  store i32 %pic_pix_y, i32* %pic_pix_y.addr, align 4
  store i32 %blocktype, i32* %blocktype.addr, align 4
  store i32 %iteration, i32* %iteration.addr, align 4
  store i16 %pred_mv_x1, i16* %pred_mv_x1.addr, align 2
  store i16 %pred_mv_y1, i16* %pred_mv_y1.addr, align 2
  store i16 %pred_mv_x2, i16* %pred_mv_x2.addr, align 2
  store i16 %pred_mv_y2, i16* %pred_mv_y2.addr, align 2
  store i16* %mv_x, i16** %mv_x.addr, align 8
  store i16* %mv_y, i16** %mv_y.addr, align 8
  store i16* %s_mv_x, i16** %s_mv_x.addr, align 8
  store i16* %s_mv_y, i16** %s_mv_y.addr, align 8
  store i32 %search_range, i32* %search_range.addr, align 4
  store i32 %min_mcost, i32* %min_mcost.addr, align 4
  store double %lambda, double* %lambda.addr, align 8
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %MbaffFrameFlag = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i32 0, i32 90
  %1 = load i32, i32* %MbaffFrameFlag, align 4
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %land.lhs.true, label %cond.false

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 3
  %3 = load i32, i32* %current_mb_nr, align 4
  %idxprom = sext i32 %3 to i64
  %4 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %4, i32 0, i32 51
  %5 = load %struct.macroblock*, %struct.macroblock** %mb_data, align 8
  %arrayidx = getelementptr inbounds %struct.macroblock, %struct.macroblock* %5, i64 %idxprom
  %mb_field = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx, i32 0, i32 22
  %6 = load i32, i32* %mb_field, align 4
  %tobool1 = icmp ne i32 %6, 0
  br i1 %tobool1, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true
  %7 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr2 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %7, i32 0, i32 3
  %8 = load i32, i32* %current_mb_nr2, align 4
  %rem = srem i32 %8, 2
  %tobool3 = icmp ne i32 %rem, 0
  %cond = select i1 %tobool3, i32 4, i32 2
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true, %entry
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond4 = phi i32 [ %cond, %cond.true ], [ 0, %cond.false ]
  store i32 %cond4, i32* %list_offset, align 4
  %9 = load i16, i16* %ref.addr, align 2
  %idxprom5 = sext i16 %9 to i64
  %10 = load i32, i32* %list.addr, align 4
  %11 = load i32, i32* %list_offset, align 4
  %add = add nsw i32 %10, %11
  %idxprom6 = sext i32 %add to i64
  %arrayidx7 = getelementptr inbounds [6 x %struct.storable_picture**], [6 x %struct.storable_picture**]* @listX, i32 0, i64 %idxprom6
  %12 = load %struct.storable_picture**, %struct.storable_picture*** %arrayidx7, align 8
  %arrayidx8 = getelementptr inbounds %struct.storable_picture*, %struct.storable_picture** %12, i64 %idxprom5
  %13 = load %struct.storable_picture*, %struct.storable_picture** %arrayidx8, align 8
  %imgY_11 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %13, i32 0, i32 26
  %14 = load i16*, i16** %imgY_11, align 8
  store i16* %14, i16** %ref1_pic, align 8
  %15 = load i32, i32* %list.addr, align 4
  %cmp = icmp eq i32 %15, 0
  br i1 %cmp, label %cond.true.9, label %cond.false.11

cond.true.9:                                      ; preds = %cond.end
  %16 = load i32, i32* %list_offset, align 4
  %add10 = add nsw i32 1, %16
  br label %cond.end.12

cond.false.11:                                    ; preds = %cond.end
  %17 = load i32, i32* %list_offset, align 4
  br label %cond.end.12

cond.end.12:                                      ; preds = %cond.false.11, %cond.true.9
  %cond13 = phi i32 [ %add10, %cond.true.9 ], [ %17, %cond.false.11 ]
  %idxprom14 = sext i32 %cond13 to i64
  %arrayidx15 = getelementptr inbounds [6 x %struct.storable_picture**], [6 x %struct.storable_picture**]* @listX, i32 0, i64 %idxprom14
  %18 = load %struct.storable_picture**, %struct.storable_picture*** %arrayidx15, align 8
  %arrayidx16 = getelementptr inbounds %struct.storable_picture*, %struct.storable_picture** %18, i64 0
  %19 = load %struct.storable_picture*, %struct.storable_picture** %arrayidx16, align 8
  %imgY_1117 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %19, i32 0, i32 26
  %20 = load i16*, i16** %imgY_1117, align 8
  store i16* %20, i16** %ref2_pic, align 8
  %21 = load i16, i16* %ref.addr, align 2
  %idxprom18 = sext i16 %21 to i64
  %22 = load i32, i32* %list.addr, align 4
  %23 = load i32, i32* %list_offset, align 4
  %add19 = add nsw i32 %22, %23
  %idxprom20 = sext i32 %add19 to i64
  %arrayidx21 = getelementptr inbounds [6 x %struct.storable_picture**], [6 x %struct.storable_picture**]* @listX, i32 0, i64 %idxprom20
  %24 = load %struct.storable_picture**, %struct.storable_picture*** %arrayidx21, align 8
  %arrayidx22 = getelementptr inbounds %struct.storable_picture*, %struct.storable_picture** %24, i64 %idxprom18
  %25 = load %struct.storable_picture*, %struct.storable_picture** %arrayidx22, align 8
  %size_x = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %25, i32 0, i32 18
  %26 = load i32, i32* %size_x, align 4
  store i32 %26, i32* %img_width, align 4
  %27 = load i16, i16* %ref.addr, align 2
  %idxprom23 = sext i16 %27 to i64
  %28 = load i32, i32* %list.addr, align 4
  %29 = load i32, i32* %list_offset, align 4
  %add24 = add nsw i32 %28, %29
  %idxprom25 = sext i32 %add24 to i64
  %arrayidx26 = getelementptr inbounds [6 x %struct.storable_picture**], [6 x %struct.storable_picture**]* @listX, i32 0, i64 %idxprom25
  %30 = load %struct.storable_picture**, %struct.storable_picture*** %arrayidx26, align 8
  %arrayidx27 = getelementptr inbounds %struct.storable_picture*, %struct.storable_picture** %30, i64 %idxprom23
  %31 = load %struct.storable_picture*, %struct.storable_picture** %arrayidx27, align 8
  %size_y = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %31, i32 0, i32 19
  %32 = load i32, i32* %size_y, align 4
  store i32 %32, i32* %img_height, align 4
  store i32 0, i32* %best_pos, align 4
  %33 = load i32, i32* %search_range.addr, align 4
  %mul = mul nsw i32 2, %33
  %add28 = add nsw i32 %mul, 1
  %34 = load i32, i32* %search_range.addr, align 4
  %mul29 = mul nsw i32 2, %34
  %add30 = add nsw i32 %mul29, 1
  %mul31 = mul nsw i32 %add28, %add30
  store i32 %mul31, i32* %max_pos, align 4
  %35 = load double, double* %lambda.addr, align 8
  %mul32 = fmul double 6.553600e+04, %35
  %add33 = fadd double %mul32, 5.000000e-01
  %conv = fptosi double %add33 to i32
  store i32 %conv, i32* %lambda_factor, align 4
  %36 = load i32, i32* %blocktype.addr, align 4
  %idxprom34 = sext i32 %36 to i64
  %37 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %blc_size = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %37, i32 0, i32 20
  %arrayidx35 = getelementptr inbounds [8 x [2 x i32]], [8 x [2 x i32]]* %blc_size, i32 0, i64 %idxprom34
  %arrayidx36 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx35, i32 0, i64 1
  %38 = load i32, i32* %arrayidx36, align 4
  store i32 %38, i32* %blocksize_y, align 4
  %39 = load i32, i32* %blocktype.addr, align 4
  %idxprom37 = sext i32 %39 to i64
  %40 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %blc_size38 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %40, i32 0, i32 20
  %arrayidx39 = getelementptr inbounds [8 x [2 x i32]], [8 x [2 x i32]]* %blc_size38, i32 0, i64 %idxprom37
  %arrayidx40 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx39, i32 0, i64 0
  %41 = load i32, i32* %arrayidx40, align 4
  store i32 %41, i32* %blocksize_x, align 4
  %42 = load i32, i32* %blocksize_x, align 4
  %shr = ashr i32 %42, 2
  store i32 %shr, i32* %blocksize_x4, align 4
  %43 = load i32, i32* %pic_pix_x.addr, align 4
  %shl = shl i32 %43, 2
  %44 = load i16, i16* %pred_mv_x1.addr, align 2
  %conv41 = sext i16 %44 to i32
  %add42 = add nsw i32 %shl, %conv41
  store i32 %add42, i32* %pred_x1, align 4
  %45 = load i32, i32* %pic_pix_y.addr, align 4
  %shl43 = shl i32 %45, 2
  %46 = load i16, i16* %pred_mv_y1.addr, align 2
  %conv44 = sext i16 %46 to i32
  %add45 = add nsw i32 %shl43, %conv44
  store i32 %add45, i32* %pred_y1, align 4
  %47 = load i32, i32* %pic_pix_x.addr, align 4
  %shl46 = shl i32 %47, 2
  %48 = load i16, i16* %pred_mv_x2.addr, align 2
  %conv47 = sext i16 %48 to i32
  %add48 = add nsw i32 %shl46, %conv47
  store i32 %add48, i32* %pred_x2, align 4
  %49 = load i32, i32* %pic_pix_y.addr, align 4
  %shl49 = shl i32 %49, 2
  %50 = load i16, i16* %pred_mv_y2.addr, align 2
  %conv50 = sext i16 %50 to i32
  %add51 = add nsw i32 %shl49, %conv50
  store i32 %add51, i32* %pred_y2, align 4
  %51 = load i32, i32* %pic_pix_x.addr, align 4
  %52 = load i16*, i16** %mv_x.addr, align 8
  %53 = load i16, i16* %52, align 2
  %conv52 = sext i16 %53 to i32
  %add53 = add nsw i32 %51, %conv52
  %conv54 = trunc i32 %add53 to i16
  store i16 %conv54, i16* %center_x, align 2
  %54 = load i32, i32* %pic_pix_y.addr, align 4
  %55 = load i16*, i16** %mv_y.addr, align 8
  %56 = load i16, i16* %55, align 2
  %conv55 = sext i16 %56 to i32
  %add56 = add nsw i32 %54, %conv55
  %conv57 = trunc i32 %add56 to i16
  store i16 %conv57, i16* %center_y, align 2
  %57 = load i32, i32* %pic_pix_x.addr, align 4
  %58 = load i16*, i16** %s_mv_x.addr, align 8
  %59 = load i16, i16* %58, align 2
  %conv58 = sext i16 %59 to i32
  %add59 = add nsw i32 %57, %conv58
  %conv60 = trunc i32 %add59 to i16
  store i16 %conv60, i16* %ref1_center_x, align 2
  %60 = load i32, i32* %pic_pix_y.addr, align 4
  %61 = load i16*, i16** %s_mv_y.addr, align 8
  %62 = load i16, i16* %61, align 2
  %conv61 = sext i16 %62 to i32
  %add62 = add nsw i32 %60, %conv61
  %conv63 = trunc i32 %add62 to i16
  store i16 %conv63, i16* %ref1_center_y, align 2
  %63 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %weighted_bipred_idc = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %63, i32 0, i32 20
  %64 = load i32, i32* %weighted_bipred_idc, align 4
  %cmp64 = icmp ugt i32 %64, 0
  %conv65 = zext i1 %cmp64 to i32
  %conv66 = trunc i32 %conv65 to i16
  store i16 %conv66, i16* %apply_weights, align 2
  %65 = load i16, i16* %apply_weights, align 2
  %conv67 = sext i16 %65 to i32
  %tobool68 = icmp ne i32 %conv67, 0
  br i1 %tobool68, label %cond.true.69, label %cond.false.89

cond.true.69:                                     ; preds = %cond.end.12
  %66 = load i32, i32* %list.addr, align 4
  %cmp70 = icmp eq i32 %66, 0
  br i1 %cmp70, label %cond.true.72, label %cond.false.79

cond.true.72:                                     ; preds = %cond.true.69
  %67 = load i16, i16* %ref.addr, align 2
  %idxprom73 = sext i16 %67 to i64
  %68 = load i32, i32* %list_offset, align 4
  %idxprom74 = sext i32 %68 to i64
  %69 = load i32****, i32***** @wbp_weight, align 8
  %arrayidx75 = getelementptr inbounds i32***, i32**** %69, i64 %idxprom74
  %70 = load i32***, i32**** %arrayidx75, align 8
  %arrayidx76 = getelementptr inbounds i32**, i32*** %70, i64 %idxprom73
  %71 = load i32**, i32*** %arrayidx76, align 8
  %arrayidx77 = getelementptr inbounds i32*, i32** %71, i64 0
  %72 = load i32*, i32** %arrayidx77, align 8
  %arrayidx78 = getelementptr inbounds i32, i32* %72, i64 0
  %73 = load i32, i32* %arrayidx78, align 4
  br label %cond.end.87

cond.false.79:                                    ; preds = %cond.true.69
  %74 = load i16, i16* %ref.addr, align 2
  %idxprom80 = sext i16 %74 to i64
  %75 = load i32, i32* %list_offset, align 4
  %add81 = add nsw i32 %75, 1
  %idxprom82 = sext i32 %add81 to i64
  %76 = load i32****, i32***** @wbp_weight, align 8
  %arrayidx83 = getelementptr inbounds i32***, i32**** %76, i64 %idxprom82
  %77 = load i32***, i32**** %arrayidx83, align 8
  %arrayidx84 = getelementptr inbounds i32**, i32*** %77, i64 0
  %78 = load i32**, i32*** %arrayidx84, align 8
  %arrayidx85 = getelementptr inbounds i32*, i32** %78, i64 %idxprom80
  %79 = load i32*, i32** %arrayidx85, align 8
  %arrayidx86 = getelementptr inbounds i32, i32* %79, i64 0
  %80 = load i32, i32* %arrayidx86, align 4
  br label %cond.end.87

cond.end.87:                                      ; preds = %cond.false.79, %cond.true.72
  %cond88 = phi i32 [ %73, %cond.true.72 ], [ %80, %cond.false.79 ]
  br label %cond.end.91

cond.false.89:                                    ; preds = %cond.end.12
  %81 = load i32, i32* @luma_log_weight_denom, align 4
  %shl90 = shl i32 1, %81
  br label %cond.end.91

cond.end.91:                                      ; preds = %cond.false.89, %cond.end.87
  %cond92 = phi i32 [ %cond88, %cond.end.87 ], [ %shl90, %cond.false.89 ]
  %conv93 = trunc i32 %cond92 to i16
  store i16 %conv93, i16* %weightSpic, align 2
  %82 = load i16, i16* %apply_weights, align 2
  %conv94 = sext i16 %82 to i32
  %tobool95 = icmp ne i32 %conv94, 0
  br i1 %tobool95, label %cond.true.96, label %cond.false.116

cond.true.96:                                     ; preds = %cond.end.91
  %83 = load i32, i32* %list.addr, align 4
  %cmp97 = icmp eq i32 %83, 0
  br i1 %cmp97, label %cond.true.99, label %cond.false.107

cond.true.99:                                     ; preds = %cond.true.96
  %84 = load i16, i16* %ref.addr, align 2
  %idxprom100 = sext i16 %84 to i64
  %85 = load i32, i32* %list_offset, align 4
  %add101 = add nsw i32 %85, 1
  %idxprom102 = sext i32 %add101 to i64
  %86 = load i32****, i32***** @wbp_weight, align 8
  %arrayidx103 = getelementptr inbounds i32***, i32**** %86, i64 %idxprom102
  %87 = load i32***, i32**** %arrayidx103, align 8
  %arrayidx104 = getelementptr inbounds i32**, i32*** %87, i64 %idxprom100
  %88 = load i32**, i32*** %arrayidx104, align 8
  %arrayidx105 = getelementptr inbounds i32*, i32** %88, i64 0
  %89 = load i32*, i32** %arrayidx105, align 8
  %arrayidx106 = getelementptr inbounds i32, i32* %89, i64 0
  %90 = load i32, i32* %arrayidx106, align 4
  br label %cond.end.114

cond.false.107:                                   ; preds = %cond.true.96
  %91 = load i16, i16* %ref.addr, align 2
  %idxprom108 = sext i16 %91 to i64
  %92 = load i32, i32* %list_offset, align 4
  %idxprom109 = sext i32 %92 to i64
  %93 = load i32****, i32***** @wbp_weight, align 8
  %arrayidx110 = getelementptr inbounds i32***, i32**** %93, i64 %idxprom109
  %94 = load i32***, i32**** %arrayidx110, align 8
  %arrayidx111 = getelementptr inbounds i32**, i32*** %94, i64 0
  %95 = load i32**, i32*** %arrayidx111, align 8
  %arrayidx112 = getelementptr inbounds i32*, i32** %95, i64 %idxprom108
  %96 = load i32*, i32** %arrayidx112, align 8
  %arrayidx113 = getelementptr inbounds i32, i32* %96, i64 0
  %97 = load i32, i32* %arrayidx113, align 4
  br label %cond.end.114

cond.end.114:                                     ; preds = %cond.false.107, %cond.true.99
  %cond115 = phi i32 [ %90, %cond.true.99 ], [ %97, %cond.false.107 ]
  br label %cond.end.118

cond.false.116:                                   ; preds = %cond.end.91
  %98 = load i32, i32* @luma_log_weight_denom, align 4
  %shl117 = shl i32 1, %98
  br label %cond.end.118

cond.end.118:                                     ; preds = %cond.false.116, %cond.end.114
  %cond119 = phi i32 [ %cond115, %cond.end.114 ], [ %shl117, %cond.false.116 ]
  %conv120 = trunc i32 %cond119 to i16
  store i16 %conv120, i16* %weightRpic, align 2
  %99 = load i16, i16* %apply_weights, align 2
  %conv121 = sext i16 %99 to i32
  %tobool122 = icmp ne i32 %conv121, 0
  br i1 %tobool122, label %cond.true.123, label %cond.false.140

cond.true.123:                                    ; preds = %cond.end.118
  %100 = load i32, i32* %list.addr, align 4
  %cmp124 = icmp eq i32 %100, 0
  br i1 %cmp124, label %cond.true.126, label %cond.false.132

cond.true.126:                                    ; preds = %cond.true.123
  %101 = load i16, i16* %ref.addr, align 2
  %idxprom127 = sext i16 %101 to i64
  %102 = load i32, i32* %list_offset, align 4
  %idxprom128 = sext i32 %102 to i64
  %103 = load i32***, i32**** @wp_offset, align 8
  %arrayidx129 = getelementptr inbounds i32**, i32*** %103, i64 %idxprom128
  %104 = load i32**, i32*** %arrayidx129, align 8
  %arrayidx130 = getelementptr inbounds i32*, i32** %104, i64 %idxprom127
  %105 = load i32*, i32** %arrayidx130, align 8
  %arrayidx131 = getelementptr inbounds i32, i32* %105, i64 0
  %106 = load i32, i32* %arrayidx131, align 4
  br label %cond.end.138

cond.false.132:                                   ; preds = %cond.true.123
  %107 = load i32, i32* %list_offset, align 4
  %add133 = add nsw i32 %107, 1
  %idxprom134 = sext i32 %add133 to i64
  %108 = load i32***, i32**** @wp_offset, align 8
  %arrayidx135 = getelementptr inbounds i32**, i32*** %108, i64 %idxprom134
  %109 = load i32**, i32*** %arrayidx135, align 8
  %arrayidx136 = getelementptr inbounds i32*, i32** %109, i64 0
  %110 = load i32*, i32** %arrayidx136, align 8
  %arrayidx137 = getelementptr inbounds i32, i32* %110, i64 0
  %111 = load i32, i32* %arrayidx137, align 4
  br label %cond.end.138

cond.end.138:                                     ; preds = %cond.false.132, %cond.true.126
  %cond139 = phi i32 [ %106, %cond.true.126 ], [ %111, %cond.false.132 ]
  br label %cond.end.141

cond.false.140:                                   ; preds = %cond.end.118
  br label %cond.end.141

cond.end.141:                                     ; preds = %cond.false.140, %cond.end.138
  %cond142 = phi i32 [ %cond139, %cond.end.138 ], [ 0, %cond.false.140 ]
  %conv143 = trunc i32 %cond142 to i16
  store i16 %conv143, i16* %offsetSpic, align 2
  %112 = load i16, i16* %apply_weights, align 2
  %conv144 = sext i16 %112 to i32
  %tobool145 = icmp ne i32 %conv144, 0
  br i1 %tobool145, label %cond.true.146, label %cond.false.163

cond.true.146:                                    ; preds = %cond.end.141
  %113 = load i32, i32* %list.addr, align 4
  %cmp147 = icmp eq i32 %113, 0
  br i1 %cmp147, label %cond.true.149, label %cond.false.156

cond.true.149:                                    ; preds = %cond.true.146
  %114 = load i16, i16* %ref.addr, align 2
  %idxprom150 = sext i16 %114 to i64
  %115 = load i32, i32* %list_offset, align 4
  %add151 = add nsw i32 %115, 1
  %idxprom152 = sext i32 %add151 to i64
  %116 = load i32***, i32**** @wp_offset, align 8
  %arrayidx153 = getelementptr inbounds i32**, i32*** %116, i64 %idxprom152
  %117 = load i32**, i32*** %arrayidx153, align 8
  %arrayidx154 = getelementptr inbounds i32*, i32** %117, i64 %idxprom150
  %118 = load i32*, i32** %arrayidx154, align 8
  %arrayidx155 = getelementptr inbounds i32, i32* %118, i64 0
  %119 = load i32, i32* %arrayidx155, align 4
  br label %cond.end.161

cond.false.156:                                   ; preds = %cond.true.146
  %120 = load i32, i32* %list_offset, align 4
  %idxprom157 = sext i32 %120 to i64
  %121 = load i32***, i32**** @wp_offset, align 8
  %arrayidx158 = getelementptr inbounds i32**, i32*** %121, i64 %idxprom157
  %122 = load i32**, i32*** %arrayidx158, align 8
  %arrayidx159 = getelementptr inbounds i32*, i32** %122, i64 0
  %123 = load i32*, i32** %arrayidx159, align 8
  %arrayidx160 = getelementptr inbounds i32, i32* %123, i64 0
  %124 = load i32, i32* %arrayidx160, align 4
  br label %cond.end.161

cond.end.161:                                     ; preds = %cond.false.156, %cond.true.149
  %cond162 = phi i32 [ %119, %cond.true.149 ], [ %124, %cond.false.156 ]
  br label %cond.end.164

cond.false.163:                                   ; preds = %cond.end.141
  br label %cond.end.164

cond.end.164:                                     ; preds = %cond.false.163, %cond.end.161
  %cond165 = phi i32 [ %cond162, %cond.end.161 ], [ 0, %cond.false.163 ]
  %conv166 = trunc i32 %cond165 to i16
  store i16 %conv166, i16* %offsetRpic, align 2
  %125 = load i16, i16* %offsetRpic, align 2
  %conv167 = sext i16 %125 to i32
  %126 = load i16, i16* %offsetSpic, align 2
  %conv168 = sext i16 %126 to i32
  %add169 = add nsw i32 %conv167, %conv168
  %add170 = add nsw i32 %add169, 1
  %shr171 = ashr i32 %add170, 1
  %conv172 = trunc i32 %shr171 to i16
  store i16 %conv172, i16* %offsetBi, align 2
  %127 = load i16, i16* %center_x, align 2
  %conv173 = sext i16 %127 to i32
  %128 = load i32, i32* %search_range.addr, align 4
  %cmp174 = icmp sgt i32 %conv173, %128
  br i1 %cmp174, label %land.lhs.true.176, label %if.else

land.lhs.true.176:                                ; preds = %cond.end.164
  %129 = load i16, i16* %center_x, align 2
  %conv177 = sext i16 %129 to i32
  %130 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %width = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %130, i32 0, i32 13
  %131 = load i32, i32* %width, align 4
  %sub = sub nsw i32 %131, 1
  %132 = load i32, i32* %search_range.addr, align 4
  %sub178 = sub nsw i32 %sub, %132
  %133 = load i32, i32* %blocksize_x, align 4
  %sub179 = sub nsw i32 %sub178, %133
  %cmp180 = icmp slt i32 %conv177, %sub179
  br i1 %cmp180, label %land.lhs.true.182, label %if.else

land.lhs.true.182:                                ; preds = %land.lhs.true.176
  %134 = load i16, i16* %center_y, align 2
  %conv183 = sext i16 %134 to i32
  %135 = load i32, i32* %search_range.addr, align 4
  %cmp184 = icmp sgt i32 %conv183, %135
  br i1 %cmp184, label %land.lhs.true.186, label %if.else

land.lhs.true.186:                                ; preds = %land.lhs.true.182
  %136 = load i16, i16* %center_y, align 2
  %conv187 = sext i16 %136 to i32
  %137 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %height = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %137, i32 0, i32 15
  %138 = load i32, i32* %height, align 4
  %sub188 = sub nsw i32 %138, 1
  %139 = load i32, i32* %search_range.addr, align 4
  %sub189 = sub nsw i32 %sub188, %139
  %140 = load i32, i32* %blocksize_y, align 4
  %sub190 = sub nsw i32 %sub189, %140
  %cmp191 = icmp slt i32 %conv187, %sub190
  br i1 %cmp191, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true.186
  store i16* (i32, i16*, i32, i32, i32, i32)* @FastLineX, i16* (i32, i16*, i32, i32, i32, i32)** %get_ref_line2, align 8
  br label %if.end

if.else:                                          ; preds = %land.lhs.true.186, %land.lhs.true.182, %land.lhs.true.176, %cond.end.164
  store i16* (i32, i16*, i32, i32, i32, i32)* @UMVLineX, i16* (i32, i16*, i32, i32, i32, i32)** %get_ref_line2, align 8
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %141 = load i16, i16* %ref1_center_x, align 2
  %conv193 = sext i16 %141 to i32
  %142 = load i32, i32* %search_range.addr, align 4
  %cmp194 = icmp sgt i32 %conv193, %142
  br i1 %cmp194, label %land.lhs.true.196, label %if.else.217

land.lhs.true.196:                                ; preds = %if.end
  %143 = load i16, i16* %ref1_center_x, align 2
  %conv197 = sext i16 %143 to i32
  %144 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %width198 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %144, i32 0, i32 13
  %145 = load i32, i32* %width198, align 4
  %sub199 = sub nsw i32 %145, 1
  %146 = load i32, i32* %search_range.addr, align 4
  %sub200 = sub nsw i32 %sub199, %146
  %147 = load i32, i32* %blocksize_x, align 4
  %sub201 = sub nsw i32 %sub200, %147
  %cmp202 = icmp slt i32 %conv197, %sub201
  br i1 %cmp202, label %land.lhs.true.204, label %if.else.217

land.lhs.true.204:                                ; preds = %land.lhs.true.196
  %148 = load i16, i16* %ref1_center_y, align 2
  %conv205 = sext i16 %148 to i32
  %149 = load i32, i32* %search_range.addr, align 4
  %cmp206 = icmp sgt i32 %conv205, %149
  br i1 %cmp206, label %land.lhs.true.208, label %if.else.217

land.lhs.true.208:                                ; preds = %land.lhs.true.204
  %150 = load i16, i16* %ref1_center_y, align 2
  %conv209 = sext i16 %150 to i32
  %151 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %height210 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %151, i32 0, i32 15
  %152 = load i32, i32* %height210, align 4
  %sub211 = sub nsw i32 %152, 1
  %153 = load i32, i32* %search_range.addr, align 4
  %sub212 = sub nsw i32 %sub211, %153
  %154 = load i32, i32* %blocksize_y, align 4
  %sub213 = sub nsw i32 %sub212, %154
  %cmp214 = icmp slt i32 %conv209, %sub213
  br i1 %cmp214, label %if.then.216, label %if.else.217

if.then.216:                                      ; preds = %land.lhs.true.208
  store i16* (i32, i16*, i32, i32, i32, i32)* @FastLineX, i16* (i32, i16*, i32, i32, i32, i32)** %get_ref_line1, align 8
  br label %if.end.218

if.else.217:                                      ; preds = %land.lhs.true.208, %land.lhs.true.204, %land.lhs.true.196, %if.end
  store i16* (i32, i16*, i32, i32, i32, i32)* @UMVLineX, i16* (i32, i16*, i32, i32, i32, i32)** %get_ref_line1, align 8
  br label %if.end.218

if.end.218:                                       ; preds = %if.else.217, %if.then.216
  store i32 0, i32* %pos, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc.596, %if.end.218
  %155 = load i32, i32* %pos, align 4
  %156 = load i32, i32* %max_pos, align 4
  %cmp219 = icmp slt i32 %155, %156
  br i1 %cmp219, label %for.body, label %for.end.598

for.body:                                         ; preds = %for.cond
  %157 = load i16, i16* %center_x, align 2
  %conv221 = sext i16 %157 to i32
  %158 = load i32, i32* %pos, align 4
  %idxprom222 = sext i32 %158 to i64
  %159 = load i32*, i32** @spiral_search_x, align 8
  %arrayidx223 = getelementptr inbounds i32, i32* %159, i64 %idxprom222
  %160 = load i32, i32* %arrayidx223, align 4
  %add224 = add nsw i32 %conv221, %160
  store i32 %add224, i32* %cand_x, align 4
  %161 = load i16, i16* %center_y, align 2
  %conv225 = sext i16 %161 to i32
  %162 = load i32, i32* %pos, align 4
  %idxprom226 = sext i32 %162 to i64
  %163 = load i32*, i32** @spiral_search_y, align 8
  %arrayidx227 = getelementptr inbounds i32, i32* %163, i64 %idxprom226
  %164 = load i32, i32* %arrayidx227, align 4
  %add228 = add nsw i32 %conv225, %164
  store i32 %add228, i32* %cand_y, align 4
  %165 = load i32, i32* %lambda_factor, align 4
  %166 = load i16, i16* %ref1_center_x, align 2
  %conv229 = sext i16 %166 to i32
  %shl230 = shl i32 %conv229, 2
  %167 = load i32, i32* %pred_x1, align 4
  %sub231 = sub nsw i32 %shl230, %167
  %idxprom232 = sext i32 %sub231 to i64
  %168 = load i32*, i32** @mvbits, align 8
  %arrayidx233 = getelementptr inbounds i32, i32* %168, i64 %idxprom232
  %169 = load i32, i32* %arrayidx233, align 4
  %170 = load i16, i16* %ref1_center_y, align 2
  %conv234 = sext i16 %170 to i32
  %shl235 = shl i32 %conv234, 2
  %171 = load i32, i32* %pred_y1, align 4
  %sub236 = sub nsw i32 %shl235, %171
  %idxprom237 = sext i32 %sub236 to i64
  %172 = load i32*, i32** @mvbits, align 8
  %arrayidx238 = getelementptr inbounds i32, i32* %172, i64 %idxprom237
  %173 = load i32, i32* %arrayidx238, align 4
  %add239 = add nsw i32 %169, %173
  %mul240 = mul nsw i32 %165, %add239
  %shr241 = ashr i32 %mul240, 16
  store i32 %shr241, i32* %mcost, align 4
  %174 = load i32, i32* %lambda_factor, align 4
  %175 = load i32, i32* %cand_x, align 4
  %shl242 = shl i32 %175, 2
  %176 = load i32, i32* %pred_x2, align 4
  %sub243 = sub nsw i32 %shl242, %176
  %idxprom244 = sext i32 %sub243 to i64
  %177 = load i32*, i32** @mvbits, align 8
  %arrayidx245 = getelementptr inbounds i32, i32* %177, i64 %idxprom244
  %178 = load i32, i32* %arrayidx245, align 4
  %179 = load i32, i32* %cand_y, align 4
  %shl246 = shl i32 %179, 2
  %180 = load i32, i32* %pred_y2, align 4
  %sub247 = sub nsw i32 %shl246, %180
  %idxprom248 = sext i32 %sub247 to i64
  %181 = load i32*, i32** @mvbits, align 8
  %arrayidx249 = getelementptr inbounds i32, i32* %181, i64 %idxprom248
  %182 = load i32, i32* %arrayidx249, align 4
  %add250 = add nsw i32 %178, %182
  %mul251 = mul nsw i32 %174, %add250
  %shr252 = ashr i32 %mul251, 16
  %183 = load i32, i32* %mcost, align 4
  %add253 = add nsw i32 %183, %shr252
  store i32 %add253, i32* %mcost, align 4
  %184 = load i32, i32* %mcost, align 4
  %185 = load i32, i32* %min_mcost.addr, align 4
  %cmp254 = icmp sge i32 %184, %185
  br i1 %cmp254, label %if.then.256, label %if.end.257

if.then.256:                                      ; preds = %for.body
  br label %for.inc.596

if.end.257:                                       ; preds = %for.body
  %186 = load i16, i16* %apply_weights, align 2
  %tobool258 = icmp ne i16 %186, 0
  br i1 %tobool258, label %if.then.259, label %if.else.516

if.then.259:                                      ; preds = %if.end.257
  store i32 0, i32* %y, align 4
  br label %for.cond.260

for.cond.260:                                     ; preds = %for.inc.513, %if.then.259
  %187 = load i32, i32* %y, align 4
  %188 = load i32, i32* %blocksize_y, align 4
  %cmp261 = icmp slt i32 %187, %188
  br i1 %cmp261, label %for.body.263, label %for.end.515

for.body.263:                                     ; preds = %for.cond.260
  %189 = load i16* (i32, i16*, i32, i32, i32, i32)*, i16* (i32, i16*, i32, i32, i32, i32)** %get_ref_line2, align 8
  %190 = load i32, i32* %blocksize_x, align 4
  %191 = load i16*, i16** %ref2_pic, align 8
  %192 = load i32, i32* %cand_y, align 4
  %193 = load i32, i32* %y, align 4
  %add264 = add nsw i32 %192, %193
  %194 = load i32, i32* %cand_x, align 4
  %195 = load i32, i32* %img_height, align 4
  %196 = load i32, i32* %img_width, align 4
  %call = call i16* %189(i32 %190, i16* %191, i32 %add264, i32 %194, i32 %195, i32 %196)
  store i16* %call, i16** %ref2_line, align 8
  %197 = load i16* (i32, i16*, i32, i32, i32, i32)*, i16* (i32, i16*, i32, i32, i32, i32)** %get_ref_line1, align 8
  %198 = load i32, i32* %blocksize_x, align 4
  %199 = load i16*, i16** %ref1_pic, align 8
  %200 = load i16, i16* %ref1_center_y, align 2
  %conv265 = sext i16 %200 to i32
  %201 = load i32, i32* %y, align 4
  %add266 = add nsw i32 %conv265, %201
  %202 = load i16, i16* %ref1_center_x, align 2
  %conv267 = sext i16 %202 to i32
  %203 = load i32, i32* %img_height, align 4
  %204 = load i32, i32* %img_width, align 4
  %call268 = call i16* %197(i32 %198, i16* %199, i32 %add266, i32 %conv267, i32 %203, i32 %204)
  store i16* %call268, i16** %ref1_line, align 8
  %205 = load i32, i32* %y, align 4
  %idxprom269 = sext i32 %205 to i64
  %206 = load i16**, i16*** %orig_pic.addr, align 8
  %arrayidx270 = getelementptr inbounds i16*, i16** %206, i64 %idxprom269
  %207 = load i16*, i16** %arrayidx270, align 8
  store i16* %207, i16** %orig_line, align 8
  store i32 0, i32* %x4, align 4
  br label %for.cond.271

for.cond.271:                                     ; preds = %for.inc, %for.body.263
  %208 = load i32, i32* %x4, align 4
  %209 = load i32, i32* %blocksize_x4, align 4
  %cmp272 = icmp slt i32 %208, %209
  br i1 %cmp272, label %for.body.274, label %for.end

for.body.274:                                     ; preds = %for.cond.271
  %210 = load i16, i16* %weightSpic, align 2
  %conv275 = sext i16 %210 to i32
  %211 = load i16*, i16** %ref1_line, align 8
  %incdec.ptr = getelementptr inbounds i16, i16* %211, i32 1
  store i16* %incdec.ptr, i16** %ref1_line, align 8
  %212 = load i16, i16* %211, align 2
  %conv276 = zext i16 %212 to i32
  %mul277 = mul nsw i32 %conv275, %conv276
  %conv278 = trunc i32 %mul277 to i16
  store i16 %conv278, i16* %pixel1, align 2
  %213 = load i16, i16* %weightRpic, align 2
  %conv279 = sext i16 %213 to i32
  %214 = load i16*, i16** %ref2_line, align 8
  %incdec.ptr280 = getelementptr inbounds i16, i16* %214, i32 1
  store i16* %incdec.ptr280, i16** %ref2_line, align 8
  %215 = load i16, i16* %214, align 2
  %conv281 = zext i16 %215 to i32
  %mul282 = mul nsw i32 %conv279, %conv281
  %conv283 = trunc i32 %mul282 to i16
  store i16 %conv283, i16* %pixel2, align 2
  %216 = load i16, i16* %pixel1, align 2
  %conv284 = sext i16 %216 to i32
  %217 = load i16, i16* %pixel2, align 2
  %conv285 = sext i16 %217 to i32
  %add286 = add nsw i32 %conv284, %conv285
  %218 = load i32, i32* @wp_luma_round, align 4
  %mul287 = mul nsw i32 2, %218
  %add288 = add nsw i32 %add286, %mul287
  %219 = load i32, i32* @luma_log_weight_denom, align 4
  %add289 = add nsw i32 %219, 1
  %shr290 = ashr i32 %add288, %add289
  %220 = load i16, i16* %offsetBi, align 2
  %conv291 = sext i16 %220 to i32
  %add292 = add nsw i32 %shr290, %conv291
  %cmp293 = icmp slt i32 %add292, 0
  br i1 %cmp293, label %cond.true.295, label %cond.false.296

cond.true.295:                                    ; preds = %for.body.274
  br label %cond.end.322

cond.false.296:                                   ; preds = %for.body.274
  %221 = load i16, i16* %pixel1, align 2
  %conv297 = sext i16 %221 to i32
  %222 = load i16, i16* %pixel2, align 2
  %conv298 = sext i16 %222 to i32
  %add299 = add nsw i32 %conv297, %conv298
  %223 = load i32, i32* @wp_luma_round, align 4
  %mul300 = mul nsw i32 2, %223
  %add301 = add nsw i32 %add299, %mul300
  %224 = load i32, i32* @luma_log_weight_denom, align 4
  %add302 = add nsw i32 %224, 1
  %shr303 = ashr i32 %add301, %add302
  %225 = load i16, i16* %offsetBi, align 2
  %conv304 = sext i16 %225 to i32
  %add305 = add nsw i32 %shr303, %conv304
  %226 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %226, i32 0, i32 155
  %227 = load i32, i32* %max_imgpel_value, align 4
  %cmp306 = icmp sgt i32 %add305, %227
  br i1 %cmp306, label %cond.true.308, label %cond.false.310

cond.true.308:                                    ; preds = %cond.false.296
  %228 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value309 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %228, i32 0, i32 155
  %229 = load i32, i32* %max_imgpel_value309, align 4
  br label %cond.end.320

cond.false.310:                                   ; preds = %cond.false.296
  %230 = load i16, i16* %pixel1, align 2
  %conv311 = sext i16 %230 to i32
  %231 = load i16, i16* %pixel2, align 2
  %conv312 = sext i16 %231 to i32
  %add313 = add nsw i32 %conv311, %conv312
  %232 = load i32, i32* @wp_luma_round, align 4
  %mul314 = mul nsw i32 2, %232
  %add315 = add nsw i32 %add313, %mul314
  %233 = load i32, i32* @luma_log_weight_denom, align 4
  %add316 = add nsw i32 %233, 1
  %shr317 = ashr i32 %add315, %add316
  %234 = load i16, i16* %offsetBi, align 2
  %conv318 = sext i16 %234 to i32
  %add319 = add nsw i32 %shr317, %conv318
  br label %cond.end.320

cond.end.320:                                     ; preds = %cond.false.310, %cond.true.308
  %cond321 = phi i32 [ %229, %cond.true.308 ], [ %add319, %cond.false.310 ]
  br label %cond.end.322

cond.end.322:                                     ; preds = %cond.end.320, %cond.true.295
  %cond323 = phi i32 [ 0, %cond.true.295 ], [ %cond321, %cond.end.320 ]
  %conv324 = trunc i32 %cond323 to i16
  store i16 %conv324, i16* %weightedpel, align 2
  %235 = load i16*, i16** %orig_line, align 8
  %incdec.ptr325 = getelementptr inbounds i16, i16* %235, i32 1
  store i16* %incdec.ptr325, i16** %orig_line, align 8
  %236 = load i16, i16* %235, align 2
  %conv326 = zext i16 %236 to i32
  %237 = load i16, i16* %weightedpel, align 2
  %conv327 = sext i16 %237 to i32
  %sub328 = sub nsw i32 %conv326, %conv327
  store i32 %sub328, i32* %bi_diff, align 4
  %238 = load i32, i32* %bi_diff, align 4
  %idxprom329 = sext i32 %238 to i64
  %239 = load i32*, i32** @byte_abs, align 8
  %arrayidx330 = getelementptr inbounds i32, i32* %239, i64 %idxprom329
  %240 = load i32, i32* %arrayidx330, align 4
  %241 = load i32, i32* %mcost, align 4
  %add331 = add nsw i32 %241, %240
  store i32 %add331, i32* %mcost, align 4
  %242 = load i16, i16* %weightSpic, align 2
  %conv332 = sext i16 %242 to i32
  %243 = load i16*, i16** %ref1_line, align 8
  %incdec.ptr333 = getelementptr inbounds i16, i16* %243, i32 1
  store i16* %incdec.ptr333, i16** %ref1_line, align 8
  %244 = load i16, i16* %243, align 2
  %conv334 = zext i16 %244 to i32
  %mul335 = mul nsw i32 %conv332, %conv334
  %conv336 = trunc i32 %mul335 to i16
  store i16 %conv336, i16* %pixel1, align 2
  %245 = load i16, i16* %weightRpic, align 2
  %conv337 = sext i16 %245 to i32
  %246 = load i16*, i16** %ref2_line, align 8
  %incdec.ptr338 = getelementptr inbounds i16, i16* %246, i32 1
  store i16* %incdec.ptr338, i16** %ref2_line, align 8
  %247 = load i16, i16* %246, align 2
  %conv339 = zext i16 %247 to i32
  %mul340 = mul nsw i32 %conv337, %conv339
  %conv341 = trunc i32 %mul340 to i16
  store i16 %conv341, i16* %pixel2, align 2
  %248 = load i16, i16* %pixel1, align 2
  %conv342 = sext i16 %248 to i32
  %249 = load i16, i16* %pixel2, align 2
  %conv343 = sext i16 %249 to i32
  %add344 = add nsw i32 %conv342, %conv343
  %250 = load i32, i32* @wp_luma_round, align 4
  %mul345 = mul nsw i32 2, %250
  %add346 = add nsw i32 %add344, %mul345
  %251 = load i32, i32* @luma_log_weight_denom, align 4
  %add347 = add nsw i32 %251, 1
  %shr348 = ashr i32 %add346, %add347
  %252 = load i16, i16* %offsetBi, align 2
  %conv349 = sext i16 %252 to i32
  %add350 = add nsw i32 %shr348, %conv349
  %cmp351 = icmp slt i32 %add350, 0
  br i1 %cmp351, label %cond.true.353, label %cond.false.354

cond.true.353:                                    ; preds = %cond.end.322
  br label %cond.end.381

cond.false.354:                                   ; preds = %cond.end.322
  %253 = load i16, i16* %pixel1, align 2
  %conv355 = sext i16 %253 to i32
  %254 = load i16, i16* %pixel2, align 2
  %conv356 = sext i16 %254 to i32
  %add357 = add nsw i32 %conv355, %conv356
  %255 = load i32, i32* @wp_luma_round, align 4
  %mul358 = mul nsw i32 2, %255
  %add359 = add nsw i32 %add357, %mul358
  %256 = load i32, i32* @luma_log_weight_denom, align 4
  %add360 = add nsw i32 %256, 1
  %shr361 = ashr i32 %add359, %add360
  %257 = load i16, i16* %offsetBi, align 2
  %conv362 = sext i16 %257 to i32
  %add363 = add nsw i32 %shr361, %conv362
  %258 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value364 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %258, i32 0, i32 155
  %259 = load i32, i32* %max_imgpel_value364, align 4
  %cmp365 = icmp sgt i32 %add363, %259
  br i1 %cmp365, label %cond.true.367, label %cond.false.369

cond.true.367:                                    ; preds = %cond.false.354
  %260 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value368 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %260, i32 0, i32 155
  %261 = load i32, i32* %max_imgpel_value368, align 4
  br label %cond.end.379

cond.false.369:                                   ; preds = %cond.false.354
  %262 = load i16, i16* %pixel1, align 2
  %conv370 = sext i16 %262 to i32
  %263 = load i16, i16* %pixel2, align 2
  %conv371 = sext i16 %263 to i32
  %add372 = add nsw i32 %conv370, %conv371
  %264 = load i32, i32* @wp_luma_round, align 4
  %mul373 = mul nsw i32 2, %264
  %add374 = add nsw i32 %add372, %mul373
  %265 = load i32, i32* @luma_log_weight_denom, align 4
  %add375 = add nsw i32 %265, 1
  %shr376 = ashr i32 %add374, %add375
  %266 = load i16, i16* %offsetBi, align 2
  %conv377 = sext i16 %266 to i32
  %add378 = add nsw i32 %shr376, %conv377
  br label %cond.end.379

cond.end.379:                                     ; preds = %cond.false.369, %cond.true.367
  %cond380 = phi i32 [ %261, %cond.true.367 ], [ %add378, %cond.false.369 ]
  br label %cond.end.381

cond.end.381:                                     ; preds = %cond.end.379, %cond.true.353
  %cond382 = phi i32 [ 0, %cond.true.353 ], [ %cond380, %cond.end.379 ]
  %conv383 = trunc i32 %cond382 to i16
  store i16 %conv383, i16* %weightedpel, align 2
  %267 = load i16*, i16** %orig_line, align 8
  %incdec.ptr384 = getelementptr inbounds i16, i16* %267, i32 1
  store i16* %incdec.ptr384, i16** %orig_line, align 8
  %268 = load i16, i16* %267, align 2
  %conv385 = zext i16 %268 to i32
  %269 = load i16, i16* %weightedpel, align 2
  %conv386 = sext i16 %269 to i32
  %sub387 = sub nsw i32 %conv385, %conv386
  store i32 %sub387, i32* %bi_diff, align 4
  %270 = load i32, i32* %bi_diff, align 4
  %idxprom388 = sext i32 %270 to i64
  %271 = load i32*, i32** @byte_abs, align 8
  %arrayidx389 = getelementptr inbounds i32, i32* %271, i64 %idxprom388
  %272 = load i32, i32* %arrayidx389, align 4
  %273 = load i32, i32* %mcost, align 4
  %add390 = add nsw i32 %273, %272
  store i32 %add390, i32* %mcost, align 4
  %274 = load i16, i16* %weightSpic, align 2
  %conv391 = sext i16 %274 to i32
  %275 = load i16*, i16** %ref1_line, align 8
  %incdec.ptr392 = getelementptr inbounds i16, i16* %275, i32 1
  store i16* %incdec.ptr392, i16** %ref1_line, align 8
  %276 = load i16, i16* %275, align 2
  %conv393 = zext i16 %276 to i32
  %mul394 = mul nsw i32 %conv391, %conv393
  %conv395 = trunc i32 %mul394 to i16
  store i16 %conv395, i16* %pixel1, align 2
  %277 = load i16, i16* %weightRpic, align 2
  %conv396 = sext i16 %277 to i32
  %278 = load i16*, i16** %ref2_line, align 8
  %incdec.ptr397 = getelementptr inbounds i16, i16* %278, i32 1
  store i16* %incdec.ptr397, i16** %ref2_line, align 8
  %279 = load i16, i16* %278, align 2
  %conv398 = zext i16 %279 to i32
  %mul399 = mul nsw i32 %conv396, %conv398
  %conv400 = trunc i32 %mul399 to i16
  store i16 %conv400, i16* %pixel2, align 2
  %280 = load i16, i16* %pixel1, align 2
  %conv401 = sext i16 %280 to i32
  %281 = load i16, i16* %pixel2, align 2
  %conv402 = sext i16 %281 to i32
  %add403 = add nsw i32 %conv401, %conv402
  %282 = load i32, i32* @wp_luma_round, align 4
  %mul404 = mul nsw i32 2, %282
  %add405 = add nsw i32 %add403, %mul404
  %283 = load i32, i32* @luma_log_weight_denom, align 4
  %add406 = add nsw i32 %283, 1
  %shr407 = ashr i32 %add405, %add406
  %284 = load i16, i16* %offsetBi, align 2
  %conv408 = sext i16 %284 to i32
  %add409 = add nsw i32 %shr407, %conv408
  %cmp410 = icmp slt i32 %add409, 0
  br i1 %cmp410, label %cond.true.412, label %cond.false.413

cond.true.412:                                    ; preds = %cond.end.381
  br label %cond.end.440

cond.false.413:                                   ; preds = %cond.end.381
  %285 = load i16, i16* %pixel1, align 2
  %conv414 = sext i16 %285 to i32
  %286 = load i16, i16* %pixel2, align 2
  %conv415 = sext i16 %286 to i32
  %add416 = add nsw i32 %conv414, %conv415
  %287 = load i32, i32* @wp_luma_round, align 4
  %mul417 = mul nsw i32 2, %287
  %add418 = add nsw i32 %add416, %mul417
  %288 = load i32, i32* @luma_log_weight_denom, align 4
  %add419 = add nsw i32 %288, 1
  %shr420 = ashr i32 %add418, %add419
  %289 = load i16, i16* %offsetBi, align 2
  %conv421 = sext i16 %289 to i32
  %add422 = add nsw i32 %shr420, %conv421
  %290 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value423 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %290, i32 0, i32 155
  %291 = load i32, i32* %max_imgpel_value423, align 4
  %cmp424 = icmp sgt i32 %add422, %291
  br i1 %cmp424, label %cond.true.426, label %cond.false.428

cond.true.426:                                    ; preds = %cond.false.413
  %292 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value427 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %292, i32 0, i32 155
  %293 = load i32, i32* %max_imgpel_value427, align 4
  br label %cond.end.438

cond.false.428:                                   ; preds = %cond.false.413
  %294 = load i16, i16* %pixel1, align 2
  %conv429 = sext i16 %294 to i32
  %295 = load i16, i16* %pixel2, align 2
  %conv430 = sext i16 %295 to i32
  %add431 = add nsw i32 %conv429, %conv430
  %296 = load i32, i32* @wp_luma_round, align 4
  %mul432 = mul nsw i32 2, %296
  %add433 = add nsw i32 %add431, %mul432
  %297 = load i32, i32* @luma_log_weight_denom, align 4
  %add434 = add nsw i32 %297, 1
  %shr435 = ashr i32 %add433, %add434
  %298 = load i16, i16* %offsetBi, align 2
  %conv436 = sext i16 %298 to i32
  %add437 = add nsw i32 %shr435, %conv436
  br label %cond.end.438

cond.end.438:                                     ; preds = %cond.false.428, %cond.true.426
  %cond439 = phi i32 [ %293, %cond.true.426 ], [ %add437, %cond.false.428 ]
  br label %cond.end.440

cond.end.440:                                     ; preds = %cond.end.438, %cond.true.412
  %cond441 = phi i32 [ 0, %cond.true.412 ], [ %cond439, %cond.end.438 ]
  %conv442 = trunc i32 %cond441 to i16
  store i16 %conv442, i16* %weightedpel, align 2
  %299 = load i16*, i16** %orig_line, align 8
  %incdec.ptr443 = getelementptr inbounds i16, i16* %299, i32 1
  store i16* %incdec.ptr443, i16** %orig_line, align 8
  %300 = load i16, i16* %299, align 2
  %conv444 = zext i16 %300 to i32
  %301 = load i16, i16* %weightedpel, align 2
  %conv445 = sext i16 %301 to i32
  %sub446 = sub nsw i32 %conv444, %conv445
  store i32 %sub446, i32* %bi_diff, align 4
  %302 = load i32, i32* %bi_diff, align 4
  %idxprom447 = sext i32 %302 to i64
  %303 = load i32*, i32** @byte_abs, align 8
  %arrayidx448 = getelementptr inbounds i32, i32* %303, i64 %idxprom447
  %304 = load i32, i32* %arrayidx448, align 4
  %305 = load i32, i32* %mcost, align 4
  %add449 = add nsw i32 %305, %304
  store i32 %add449, i32* %mcost, align 4
  %306 = load i16, i16* %weightSpic, align 2
  %conv450 = sext i16 %306 to i32
  %307 = load i16*, i16** %ref1_line, align 8
  %incdec.ptr451 = getelementptr inbounds i16, i16* %307, i32 1
  store i16* %incdec.ptr451, i16** %ref1_line, align 8
  %308 = load i16, i16* %307, align 2
  %conv452 = zext i16 %308 to i32
  %mul453 = mul nsw i32 %conv450, %conv452
  %conv454 = trunc i32 %mul453 to i16
  store i16 %conv454, i16* %pixel1, align 2
  %309 = load i16, i16* %weightRpic, align 2
  %conv455 = sext i16 %309 to i32
  %310 = load i16*, i16** %ref2_line, align 8
  %incdec.ptr456 = getelementptr inbounds i16, i16* %310, i32 1
  store i16* %incdec.ptr456, i16** %ref2_line, align 8
  %311 = load i16, i16* %310, align 2
  %conv457 = zext i16 %311 to i32
  %mul458 = mul nsw i32 %conv455, %conv457
  %conv459 = trunc i32 %mul458 to i16
  store i16 %conv459, i16* %pixel2, align 2
  %312 = load i16, i16* %pixel1, align 2
  %conv460 = sext i16 %312 to i32
  %313 = load i16, i16* %pixel2, align 2
  %conv461 = sext i16 %313 to i32
  %add462 = add nsw i32 %conv460, %conv461
  %314 = load i32, i32* @wp_luma_round, align 4
  %mul463 = mul nsw i32 2, %314
  %add464 = add nsw i32 %add462, %mul463
  %315 = load i32, i32* @luma_log_weight_denom, align 4
  %add465 = add nsw i32 %315, 1
  %shr466 = ashr i32 %add464, %add465
  %316 = load i16, i16* %offsetBi, align 2
  %conv467 = sext i16 %316 to i32
  %add468 = add nsw i32 %shr466, %conv467
  %cmp469 = icmp slt i32 %add468, 0
  br i1 %cmp469, label %cond.true.471, label %cond.false.472

cond.true.471:                                    ; preds = %cond.end.440
  br label %cond.end.499

cond.false.472:                                   ; preds = %cond.end.440
  %317 = load i16, i16* %pixel1, align 2
  %conv473 = sext i16 %317 to i32
  %318 = load i16, i16* %pixel2, align 2
  %conv474 = sext i16 %318 to i32
  %add475 = add nsw i32 %conv473, %conv474
  %319 = load i32, i32* @wp_luma_round, align 4
  %mul476 = mul nsw i32 2, %319
  %add477 = add nsw i32 %add475, %mul476
  %320 = load i32, i32* @luma_log_weight_denom, align 4
  %add478 = add nsw i32 %320, 1
  %shr479 = ashr i32 %add477, %add478
  %321 = load i16, i16* %offsetBi, align 2
  %conv480 = sext i16 %321 to i32
  %add481 = add nsw i32 %shr479, %conv480
  %322 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value482 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %322, i32 0, i32 155
  %323 = load i32, i32* %max_imgpel_value482, align 4
  %cmp483 = icmp sgt i32 %add481, %323
  br i1 %cmp483, label %cond.true.485, label %cond.false.487

cond.true.485:                                    ; preds = %cond.false.472
  %324 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value486 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %324, i32 0, i32 155
  %325 = load i32, i32* %max_imgpel_value486, align 4
  br label %cond.end.497

cond.false.487:                                   ; preds = %cond.false.472
  %326 = load i16, i16* %pixel1, align 2
  %conv488 = sext i16 %326 to i32
  %327 = load i16, i16* %pixel2, align 2
  %conv489 = sext i16 %327 to i32
  %add490 = add nsw i32 %conv488, %conv489
  %328 = load i32, i32* @wp_luma_round, align 4
  %mul491 = mul nsw i32 2, %328
  %add492 = add nsw i32 %add490, %mul491
  %329 = load i32, i32* @luma_log_weight_denom, align 4
  %add493 = add nsw i32 %329, 1
  %shr494 = ashr i32 %add492, %add493
  %330 = load i16, i16* %offsetBi, align 2
  %conv495 = sext i16 %330 to i32
  %add496 = add nsw i32 %shr494, %conv495
  br label %cond.end.497

cond.end.497:                                     ; preds = %cond.false.487, %cond.true.485
  %cond498 = phi i32 [ %325, %cond.true.485 ], [ %add496, %cond.false.487 ]
  br label %cond.end.499

cond.end.499:                                     ; preds = %cond.end.497, %cond.true.471
  %cond500 = phi i32 [ 0, %cond.true.471 ], [ %cond498, %cond.end.497 ]
  %conv501 = trunc i32 %cond500 to i16
  store i16 %conv501, i16* %weightedpel, align 2
  %331 = load i16*, i16** %orig_line, align 8
  %incdec.ptr502 = getelementptr inbounds i16, i16* %331, i32 1
  store i16* %incdec.ptr502, i16** %orig_line, align 8
  %332 = load i16, i16* %331, align 2
  %conv503 = zext i16 %332 to i32
  %333 = load i16, i16* %weightedpel, align 2
  %conv504 = sext i16 %333 to i32
  %sub505 = sub nsw i32 %conv503, %conv504
  store i32 %sub505, i32* %bi_diff, align 4
  %334 = load i32, i32* %bi_diff, align 4
  %idxprom506 = sext i32 %334 to i64
  %335 = load i32*, i32** @byte_abs, align 8
  %arrayidx507 = getelementptr inbounds i32, i32* %335, i64 %idxprom506
  %336 = load i32, i32* %arrayidx507, align 4
  %337 = load i32, i32* %mcost, align 4
  %add508 = add nsw i32 %337, %336
  store i32 %add508, i32* %mcost, align 4
  br label %for.inc

for.inc:                                          ; preds = %cond.end.499
  %338 = load i32, i32* %x4, align 4
  %inc = add nsw i32 %338, 1
  store i32 %inc, i32* %x4, align 4
  br label %for.cond.271

for.end:                                          ; preds = %for.cond.271
  %339 = load i32, i32* %mcost, align 4
  %340 = load i32, i32* %min_mcost.addr, align 4
  %cmp509 = icmp sge i32 %339, %340
  br i1 %cmp509, label %if.then.511, label %if.end.512

if.then.511:                                      ; preds = %for.end
  br label %for.end.515

if.end.512:                                       ; preds = %for.end
  br label %for.inc.513

for.inc.513:                                      ; preds = %if.end.512
  %341 = load i32, i32* %y, align 4
  %inc514 = add nsw i32 %341, 1
  store i32 %inc514, i32* %y, align 4
  br label %for.cond.260

for.end.515:                                      ; preds = %if.then.511, %for.cond.260
  br label %if.end.591

if.else.516:                                      ; preds = %if.end.257
  store i32 0, i32* %y, align 4
  br label %for.cond.517

for.cond.517:                                     ; preds = %for.inc.588, %if.else.516
  %342 = load i32, i32* %y, align 4
  %343 = load i32, i32* %blocksize_y, align 4
  %cmp518 = icmp slt i32 %342, %343
  br i1 %cmp518, label %for.body.520, label %for.end.590

for.body.520:                                     ; preds = %for.cond.517
  %344 = load i16* (i32, i16*, i32, i32, i32, i32)*, i16* (i32, i16*, i32, i32, i32, i32)** %get_ref_line2, align 8
  %345 = load i32, i32* %blocksize_x, align 4
  %346 = load i16*, i16** %ref2_pic, align 8
  %347 = load i32, i32* %cand_y, align 4
  %348 = load i32, i32* %y, align 4
  %add521 = add nsw i32 %347, %348
  %349 = load i32, i32* %cand_x, align 4
  %350 = load i32, i32* %img_height, align 4
  %351 = load i32, i32* %img_width, align 4
  %call522 = call i16* %344(i32 %345, i16* %346, i32 %add521, i32 %349, i32 %350, i32 %351)
  store i16* %call522, i16** %ref2_line, align 8
  %352 = load i16* (i32, i16*, i32, i32, i32, i32)*, i16* (i32, i16*, i32, i32, i32, i32)** %get_ref_line1, align 8
  %353 = load i32, i32* %blocksize_x, align 4
  %354 = load i16*, i16** %ref1_pic, align 8
  %355 = load i16, i16* %ref1_center_y, align 2
  %conv523 = sext i16 %355 to i32
  %356 = load i32, i32* %y, align 4
  %add524 = add nsw i32 %conv523, %356
  %357 = load i16, i16* %ref1_center_x, align 2
  %conv525 = sext i16 %357 to i32
  %358 = load i32, i32* %img_height, align 4
  %359 = load i32, i32* %img_width, align 4
  %call526 = call i16* %352(i32 %353, i16* %354, i32 %add524, i32 %conv525, i32 %358, i32 %359)
  store i16* %call526, i16** %ref1_line, align 8
  %360 = load i32, i32* %y, align 4
  %idxprom527 = sext i32 %360 to i64
  %361 = load i16**, i16*** %orig_pic.addr, align 8
  %arrayidx528 = getelementptr inbounds i16*, i16** %361, i64 %idxprom527
  %362 = load i16*, i16** %arrayidx528, align 8
  store i16* %362, i16** %orig_line, align 8
  store i32 0, i32* %x4, align 4
  br label %for.cond.529

for.cond.529:                                     ; preds = %for.inc.581, %for.body.520
  %363 = load i32, i32* %x4, align 4
  %364 = load i32, i32* %blocksize_x4, align 4
  %cmp530 = icmp slt i32 %363, %364
  br i1 %cmp530, label %for.body.532, label %for.end.583

for.body.532:                                     ; preds = %for.cond.529
  %365 = load i16*, i16** %orig_line, align 8
  %incdec.ptr533 = getelementptr inbounds i16, i16* %365, i32 1
  store i16* %incdec.ptr533, i16** %orig_line, align 8
  %366 = load i16, i16* %365, align 2
  %conv534 = zext i16 %366 to i32
  %367 = load i16*, i16** %ref1_line, align 8
  %incdec.ptr535 = getelementptr inbounds i16, i16* %367, i32 1
  store i16* %incdec.ptr535, i16** %ref1_line, align 8
  %368 = load i16, i16* %367, align 2
  %conv536 = zext i16 %368 to i32
  %369 = load i16*, i16** %ref2_line, align 8
  %incdec.ptr537 = getelementptr inbounds i16, i16* %369, i32 1
  store i16* %incdec.ptr537, i16** %ref2_line, align 8
  %370 = load i16, i16* %369, align 2
  %conv538 = zext i16 %370 to i32
  %add539 = add nsw i32 %conv536, %conv538
  %shr540 = ashr i32 %add539, 1
  %sub541 = sub nsw i32 %conv534, %shr540
  store i32 %sub541, i32* %bi_diff, align 4
  %371 = load i32, i32* %bi_diff, align 4
  %idxprom542 = sext i32 %371 to i64
  %372 = load i32*, i32** @byte_abs, align 8
  %arrayidx543 = getelementptr inbounds i32, i32* %372, i64 %idxprom542
  %373 = load i32, i32* %arrayidx543, align 4
  %374 = load i32, i32* %mcost, align 4
  %add544 = add nsw i32 %374, %373
  store i32 %add544, i32* %mcost, align 4
  %375 = load i16*, i16** %orig_line, align 8
  %incdec.ptr545 = getelementptr inbounds i16, i16* %375, i32 1
  store i16* %incdec.ptr545, i16** %orig_line, align 8
  %376 = load i16, i16* %375, align 2
  %conv546 = zext i16 %376 to i32
  %377 = load i16*, i16** %ref1_line, align 8
  %incdec.ptr547 = getelementptr inbounds i16, i16* %377, i32 1
  store i16* %incdec.ptr547, i16** %ref1_line, align 8
  %378 = load i16, i16* %377, align 2
  %conv548 = zext i16 %378 to i32
  %379 = load i16*, i16** %ref2_line, align 8
  %incdec.ptr549 = getelementptr inbounds i16, i16* %379, i32 1
  store i16* %incdec.ptr549, i16** %ref2_line, align 8
  %380 = load i16, i16* %379, align 2
  %conv550 = zext i16 %380 to i32
  %add551 = add nsw i32 %conv548, %conv550
  %shr552 = ashr i32 %add551, 1
  %sub553 = sub nsw i32 %conv546, %shr552
  store i32 %sub553, i32* %bi_diff, align 4
  %381 = load i32, i32* %bi_diff, align 4
  %idxprom554 = sext i32 %381 to i64
  %382 = load i32*, i32** @byte_abs, align 8
  %arrayidx555 = getelementptr inbounds i32, i32* %382, i64 %idxprom554
  %383 = load i32, i32* %arrayidx555, align 4
  %384 = load i32, i32* %mcost, align 4
  %add556 = add nsw i32 %384, %383
  store i32 %add556, i32* %mcost, align 4
  %385 = load i16*, i16** %orig_line, align 8
  %incdec.ptr557 = getelementptr inbounds i16, i16* %385, i32 1
  store i16* %incdec.ptr557, i16** %orig_line, align 8
  %386 = load i16, i16* %385, align 2
  %conv558 = zext i16 %386 to i32
  %387 = load i16*, i16** %ref1_line, align 8
  %incdec.ptr559 = getelementptr inbounds i16, i16* %387, i32 1
  store i16* %incdec.ptr559, i16** %ref1_line, align 8
  %388 = load i16, i16* %387, align 2
  %conv560 = zext i16 %388 to i32
  %389 = load i16*, i16** %ref2_line, align 8
  %incdec.ptr561 = getelementptr inbounds i16, i16* %389, i32 1
  store i16* %incdec.ptr561, i16** %ref2_line, align 8
  %390 = load i16, i16* %389, align 2
  %conv562 = zext i16 %390 to i32
  %add563 = add nsw i32 %conv560, %conv562
  %shr564 = ashr i32 %add563, 1
  %sub565 = sub nsw i32 %conv558, %shr564
  store i32 %sub565, i32* %bi_diff, align 4
  %391 = load i32, i32* %bi_diff, align 4
  %idxprom566 = sext i32 %391 to i64
  %392 = load i32*, i32** @byte_abs, align 8
  %arrayidx567 = getelementptr inbounds i32, i32* %392, i64 %idxprom566
  %393 = load i32, i32* %arrayidx567, align 4
  %394 = load i32, i32* %mcost, align 4
  %add568 = add nsw i32 %394, %393
  store i32 %add568, i32* %mcost, align 4
  %395 = load i16*, i16** %orig_line, align 8
  %incdec.ptr569 = getelementptr inbounds i16, i16* %395, i32 1
  store i16* %incdec.ptr569, i16** %orig_line, align 8
  %396 = load i16, i16* %395, align 2
  %conv570 = zext i16 %396 to i32
  %397 = load i16*, i16** %ref1_line, align 8
  %incdec.ptr571 = getelementptr inbounds i16, i16* %397, i32 1
  store i16* %incdec.ptr571, i16** %ref1_line, align 8
  %398 = load i16, i16* %397, align 2
  %conv572 = zext i16 %398 to i32
  %399 = load i16*, i16** %ref2_line, align 8
  %incdec.ptr573 = getelementptr inbounds i16, i16* %399, i32 1
  store i16* %incdec.ptr573, i16** %ref2_line, align 8
  %400 = load i16, i16* %399, align 2
  %conv574 = zext i16 %400 to i32
  %add575 = add nsw i32 %conv572, %conv574
  %shr576 = ashr i32 %add575, 1
  %sub577 = sub nsw i32 %conv570, %shr576
  store i32 %sub577, i32* %bi_diff, align 4
  %401 = load i32, i32* %bi_diff, align 4
  %idxprom578 = sext i32 %401 to i64
  %402 = load i32*, i32** @byte_abs, align 8
  %arrayidx579 = getelementptr inbounds i32, i32* %402, i64 %idxprom578
  %403 = load i32, i32* %arrayidx579, align 4
  %404 = load i32, i32* %mcost, align 4
  %add580 = add nsw i32 %404, %403
  store i32 %add580, i32* %mcost, align 4
  br label %for.inc.581

for.inc.581:                                      ; preds = %for.body.532
  %405 = load i32, i32* %x4, align 4
  %inc582 = add nsw i32 %405, 1
  store i32 %inc582, i32* %x4, align 4
  br label %for.cond.529

for.end.583:                                      ; preds = %for.cond.529
  %406 = load i32, i32* %mcost, align 4
  %407 = load i32, i32* %min_mcost.addr, align 4
  %cmp584 = icmp sge i32 %406, %407
  br i1 %cmp584, label %if.then.586, label %if.end.587

if.then.586:                                      ; preds = %for.end.583
  br label %for.end.590

if.end.587:                                       ; preds = %for.end.583
  br label %for.inc.588

for.inc.588:                                      ; preds = %if.end.587
  %408 = load i32, i32* %y, align 4
  %inc589 = add nsw i32 %408, 1
  store i32 %inc589, i32* %y, align 4
  br label %for.cond.517

for.end.590:                                      ; preds = %if.then.586, %for.cond.517
  br label %if.end.591

if.end.591:                                       ; preds = %for.end.590, %for.end.515
  %409 = load i32, i32* %mcost, align 4
  %410 = load i32, i32* %min_mcost.addr, align 4
  %cmp592 = icmp slt i32 %409, %410
  br i1 %cmp592, label %if.then.594, label %if.end.595

if.then.594:                                      ; preds = %if.end.591
  %411 = load i32, i32* %pos, align 4
  store i32 %411, i32* %best_pos, align 4
  %412 = load i32, i32* %mcost, align 4
  store i32 %412, i32* %min_mcost.addr, align 4
  br label %if.end.595

if.end.595:                                       ; preds = %if.then.594, %if.end.591
  br label %for.inc.596

for.inc.596:                                      ; preds = %if.end.595, %if.then.256
  %413 = load i32, i32* %pos, align 4
  %inc597 = add nsw i32 %413, 1
  store i32 %inc597, i32* %pos, align 4
  br label %for.cond

for.end.598:                                      ; preds = %for.cond
  %414 = load i32, i32* %best_pos, align 4
  %tobool599 = icmp ne i32 %414, 0
  br i1 %tobool599, label %if.then.600, label %if.end.611

if.then.600:                                      ; preds = %for.end.598
  %415 = load i32, i32* %best_pos, align 4
  %idxprom601 = sext i32 %415 to i64
  %416 = load i32*, i32** @spiral_search_x, align 8
  %arrayidx602 = getelementptr inbounds i32, i32* %416, i64 %idxprom601
  %417 = load i32, i32* %arrayidx602, align 4
  %418 = load i16*, i16** %mv_x.addr, align 8
  %419 = load i16, i16* %418, align 2
  %conv603 = sext i16 %419 to i32
  %add604 = add nsw i32 %conv603, %417
  %conv605 = trunc i32 %add604 to i16
  store i16 %conv605, i16* %418, align 2
  %420 = load i32, i32* %best_pos, align 4
  %idxprom606 = sext i32 %420 to i64
  %421 = load i32*, i32** @spiral_search_y, align 8
  %arrayidx607 = getelementptr inbounds i32, i32* %421, i64 %idxprom606
  %422 = load i32, i32* %arrayidx607, align 4
  %423 = load i16*, i16** %mv_y.addr, align 8
  %424 = load i16, i16* %423, align 2
  %conv608 = sext i16 %424 to i32
  %add609 = add nsw i32 %conv608, %422
  %conv610 = trunc i32 %add609 to i16
  store i16 %conv610, i16* %423, align 2
  br label %if.end.611

if.end.611:                                       ; preds = %if.then.600, %for.end.598
  %425 = load i32, i32* %min_mcost.addr, align 4
  ret i32 %425
}

; Function Attrs: nounwind uwtable
define i32 @SubPelBlockSearchBiPred(i16** %orig_pic, i16 signext %ref, i32 %list, i32 %pic_pix_x, i32 %pic_pix_y, i32 %blocktype, i16 signext %pred_mv_x, i16 signext %pred_mv_y, i16* %mv_x, i16* %mv_y, i16* %s_mv_x, i16* %s_mv_y, i32 %search_pos2, i32 %search_pos4, i32 %min_mcost, double %lambda) #0 {
entry:
  %orig_pic.addr = alloca i16**, align 8
  %ref.addr = alloca i16, align 2
  %list.addr = alloca i32, align 4
  %pic_pix_x.addr = alloca i32, align 4
  %pic_pix_y.addr = alloca i32, align 4
  %blocktype.addr = alloca i32, align 4
  %pred_mv_x.addr = alloca i16, align 2
  %pred_mv_y.addr = alloca i16, align 2
  %mv_x.addr = alloca i16*, align 8
  %mv_y.addr = alloca i16*, align 8
  %s_mv_x.addr = alloca i16*, align 8
  %s_mv_y.addr = alloca i16*, align 8
  %search_pos2.addr = alloca i32, align 4
  %search_pos4.addr = alloca i32, align 4
  %min_mcost.addr = alloca i32, align 4
  %lambda.addr = alloca double, align 8
  %curr_diff = alloca [16 x [16 x i32]], align 16
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %diff = alloca [16 x i32], align 16
  %d = alloca i32*, align 8
  %pos = alloca i16, align 2
  %best_pos = alloca i16, align 2
  %mcost = alloca i16, align 2
  %abort_search = alloca i16, align 2
  %y0 = alloca i16, align 2
  %x0 = alloca i16, align 2
  %ry0 = alloca i16, align 2
  %rx0 = alloca i16, align 2
  %ry = alloca i16, align 2
  %sy0 = alloca i16, align 2
  %sy = alloca i16, align 2
  %sx0 = alloca i16, align 2
  %cand_mv_x = alloca i16, align 2
  %cand_mv_y = alloca i16, align 2
  %max_pos_x4 = alloca i16, align 2
  %max_pos_y4 = alloca i16, align 2
  %orig_line = alloca i16*, align 8
  %ref_picture = alloca %struct.storable_picture*, align 8
  %lambda_factor = alloca i32, align 4
  %mv_shift = alloca i16, align 2
  %blocksize_x = alloca i16, align 2
  %blocksize_y = alloca i16, align 2
  %pic4_pix_x = alloca i16, align 2
  %pic4_pix_y = alloca i16, align 2
  %min_pos2 = alloca i16, align 2
  %max_pos2 = alloca i16, align 2
  %list_offset = alloca i16, align 2
  %apply_weights = alloca i16, align 2
  %weightSpic = alloca i16, align 2
  %weightRpic = alloca i16, align 2
  %offsetSpic = alloca i16, align 2
  %offsetRpic = alloca i16, align 2
  %offsetBi = alloca i16, align 2
  %weightedpel = alloca i32, align 4
  %img_width = alloca i32, align 4
  %img_height = alloca i32, align 4
  %halfpelhadamard = alloca i32, align 4
  %qpelstart = alloca i32, align 4
  %ref1_pic = alloca i16**, align 8
  %ref2_pic = alloca i16**, align 8
  store i16** %orig_pic, i16*** %orig_pic.addr, align 8
  store i16 %ref, i16* %ref.addr, align 2
  store i32 %list, i32* %list.addr, align 4
  store i32 %pic_pix_x, i32* %pic_pix_x.addr, align 4
  store i32 %pic_pix_y, i32* %pic_pix_y.addr, align 4
  store i32 %blocktype, i32* %blocktype.addr, align 4
  store i16 %pred_mv_x, i16* %pred_mv_x.addr, align 2
  store i16 %pred_mv_y, i16* %pred_mv_y.addr, align 2
  store i16* %mv_x, i16** %mv_x.addr, align 8
  store i16* %mv_y, i16** %mv_y.addr, align 8
  store i16* %s_mv_x, i16** %s_mv_x.addr, align 8
  store i16* %s_mv_y, i16** %s_mv_y.addr, align 8
  store i32 %search_pos2, i32* %search_pos2.addr, align 4
  store i32 %search_pos4, i32* %search_pos4.addr, align 4
  store i32 %min_mcost, i32* %min_mcost.addr, align 4
  store double %lambda, double* %lambda.addr, align 8
  %0 = load double, double* %lambda.addr, align 8
  %mul = fmul double 6.553600e+04, %0
  %add = fadd double %mul, 5.000000e-01
  %conv = fptosi double %add to i32
  store i32 %conv, i32* %lambda_factor, align 4
  store i16 0, i16* %mv_shift, align 2
  %1 = load i32, i32* %blocktype.addr, align 4
  %idxprom = sext i32 %1 to i64
  %2 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %blc_size = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %2, i32 0, i32 20
  %arrayidx = getelementptr inbounds [8 x [2 x i32]], [8 x [2 x i32]]* %blc_size, i32 0, i64 %idxprom
  %arrayidx1 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx, i32 0, i64 0
  %3 = load i32, i32* %arrayidx1, align 4
  %conv2 = trunc i32 %3 to i16
  store i16 %conv2, i16* %blocksize_x, align 2
  %4 = load i32, i32* %blocktype.addr, align 4
  %idxprom3 = sext i32 %4 to i64
  %5 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %blc_size4 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %5, i32 0, i32 20
  %arrayidx5 = getelementptr inbounds [8 x [2 x i32]], [8 x [2 x i32]]* %blc_size4, i32 0, i64 %idxprom3
  %arrayidx6 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx5, i32 0, i64 1
  %6 = load i32, i32* %arrayidx6, align 4
  %conv7 = trunc i32 %6 to i16
  store i16 %conv7, i16* %blocksize_y, align 2
  %7 = load i32, i32* %pic_pix_x.addr, align 4
  %shl = shl i32 %7, 2
  %conv8 = trunc i32 %shl to i16
  store i16 %conv8, i16* %pic4_pix_x, align 2
  %8 = load i32, i32* %pic_pix_y.addr, align 4
  %shl9 = shl i32 %8, 2
  %conv10 = trunc i32 %shl9 to i16
  store i16 %conv10, i16* %pic4_pix_y, align 2
  %9 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamard = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %9, i32 0, i32 6
  %10 = load i32, i32* %hadamard, align 4
  %tobool = icmp ne i32 %10, 0
  %cond = select i1 %tobool, i32 0, i32 1
  %conv11 = trunc i32 %cond to i16
  store i16 %conv11, i16* %min_pos2, align 2
  %11 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamard12 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %11, i32 0, i32 6
  %12 = load i32, i32* %hadamard12, align 4
  %tobool13 = icmp ne i32 %12, 0
  br i1 %tobool13, label %cond.true, label %cond.false.17

cond.true:                                        ; preds = %entry
  %13 = load i32, i32* %search_pos2.addr, align 4
  %cmp = icmp sgt i32 1, %13
  br i1 %cmp, label %cond.true.15, label %cond.false

cond.true.15:                                     ; preds = %cond.true
  br label %cond.end

cond.false:                                       ; preds = %cond.true
  %14 = load i32, i32* %search_pos2.addr, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true.15
  %cond16 = phi i32 [ 1, %cond.true.15 ], [ %14, %cond.false ]
  br label %cond.end.18

cond.false.17:                                    ; preds = %entry
  %15 = load i32, i32* %search_pos2.addr, align 4
  br label %cond.end.18

cond.end.18:                                      ; preds = %cond.false.17, %cond.end
  %cond19 = phi i32 [ %cond16, %cond.end ], [ %15, %cond.false.17 ]
  %conv20 = trunc i32 %cond19 to i16
  store i16 %conv20, i16* %max_pos2, align 2
  %16 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %MbaffFrameFlag = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %16, i32 0, i32 90
  %17 = load i32, i32* %MbaffFrameFlag, align 4
  %tobool21 = icmp ne i32 %17, 0
  br i1 %tobool21, label %land.lhs.true, label %cond.false.29

land.lhs.true:                                    ; preds = %cond.end.18
  %18 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %18, i32 0, i32 3
  %19 = load i32, i32* %current_mb_nr, align 4
  %idxprom22 = sext i32 %19 to i64
  %20 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %20, i32 0, i32 51
  %21 = load %struct.macroblock*, %struct.macroblock** %mb_data, align 8
  %arrayidx23 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %21, i64 %idxprom22
  %mb_field = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx23, i32 0, i32 22
  %22 = load i32, i32* %mb_field, align 4
  %tobool24 = icmp ne i32 %22, 0
  br i1 %tobool24, label %cond.true.25, label %cond.false.29

cond.true.25:                                     ; preds = %land.lhs.true
  %23 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr26 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %23, i32 0, i32 3
  %24 = load i32, i32* %current_mb_nr26, align 4
  %rem = srem i32 %24, 2
  %tobool27 = icmp ne i32 %rem, 0
  %cond28 = select i1 %tobool27, i32 4, i32 2
  br label %cond.end.30

cond.false.29:                                    ; preds = %land.lhs.true, %cond.end.18
  br label %cond.end.30

cond.end.30:                                      ; preds = %cond.false.29, %cond.true.25
  %cond31 = phi i32 [ %cond28, %cond.true.25 ], [ 0, %cond.false.29 ]
  %conv32 = trunc i32 %cond31 to i16
  store i16 %conv32, i16* %list_offset, align 2
  %25 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %weighted_bipred_idc = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %25, i32 0, i32 20
  %26 = load i32, i32* %weighted_bipred_idc, align 4
  %conv33 = trunc i32 %26 to i16
  store i16 %conv33, i16* %apply_weights, align 2
  %27 = load i16, i16* %apply_weights, align 2
  %conv34 = sext i16 %27 to i32
  %tobool35 = icmp ne i32 %conv34, 0
  br i1 %tobool35, label %cond.true.36, label %cond.false.57

cond.true.36:                                     ; preds = %cond.end.30
  %28 = load i32, i32* %list.addr, align 4
  %cmp37 = icmp eq i32 %28, 0
  br i1 %cmp37, label %cond.true.39, label %cond.false.46

cond.true.39:                                     ; preds = %cond.true.36
  %29 = load i16, i16* %ref.addr, align 2
  %idxprom40 = sext i16 %29 to i64
  %30 = load i16, i16* %list_offset, align 2
  %idxprom41 = sext i16 %30 to i64
  %31 = load i32****, i32***** @wbp_weight, align 8
  %arrayidx42 = getelementptr inbounds i32***, i32**** %31, i64 %idxprom41
  %32 = load i32***, i32**** %arrayidx42, align 8
  %arrayidx43 = getelementptr inbounds i32**, i32*** %32, i64 %idxprom40
  %33 = load i32**, i32*** %arrayidx43, align 8
  %arrayidx44 = getelementptr inbounds i32*, i32** %33, i64 0
  %34 = load i32*, i32** %arrayidx44, align 8
  %arrayidx45 = getelementptr inbounds i32, i32* %34, i64 0
  %35 = load i32, i32* %arrayidx45, align 4
  br label %cond.end.55

cond.false.46:                                    ; preds = %cond.true.36
  %36 = load i16, i16* %ref.addr, align 2
  %idxprom47 = sext i16 %36 to i64
  %37 = load i16, i16* %list_offset, align 2
  %conv48 = sext i16 %37 to i32
  %add49 = add nsw i32 %conv48, 1
  %idxprom50 = sext i32 %add49 to i64
  %38 = load i32****, i32***** @wbp_weight, align 8
  %arrayidx51 = getelementptr inbounds i32***, i32**** %38, i64 %idxprom50
  %39 = load i32***, i32**** %arrayidx51, align 8
  %arrayidx52 = getelementptr inbounds i32**, i32*** %39, i64 0
  %40 = load i32**, i32*** %arrayidx52, align 8
  %arrayidx53 = getelementptr inbounds i32*, i32** %40, i64 %idxprom47
  %41 = load i32*, i32** %arrayidx53, align 8
  %arrayidx54 = getelementptr inbounds i32, i32* %41, i64 0
  %42 = load i32, i32* %arrayidx54, align 4
  br label %cond.end.55

cond.end.55:                                      ; preds = %cond.false.46, %cond.true.39
  %cond56 = phi i32 [ %35, %cond.true.39 ], [ %42, %cond.false.46 ]
  br label %cond.end.58

cond.false.57:                                    ; preds = %cond.end.30
  br label %cond.end.58

cond.end.58:                                      ; preds = %cond.false.57, %cond.end.55
  %cond59 = phi i32 [ %cond56, %cond.end.55 ], [ 1, %cond.false.57 ]
  %conv60 = trunc i32 %cond59 to i16
  store i16 %conv60, i16* %weightSpic, align 2
  %43 = load i16, i16* %apply_weights, align 2
  %conv61 = sext i16 %43 to i32
  %tobool62 = icmp ne i32 %conv61, 0
  br i1 %tobool62, label %cond.true.63, label %cond.false.84

cond.true.63:                                     ; preds = %cond.end.58
  %44 = load i32, i32* %list.addr, align 4
  %cmp64 = icmp eq i32 %44, 0
  br i1 %cmp64, label %cond.true.66, label %cond.false.75

cond.true.66:                                     ; preds = %cond.true.63
  %45 = load i16, i16* %ref.addr, align 2
  %idxprom67 = sext i16 %45 to i64
  %46 = load i16, i16* %list_offset, align 2
  %conv68 = sext i16 %46 to i32
  %add69 = add nsw i32 %conv68, 1
  %idxprom70 = sext i32 %add69 to i64
  %47 = load i32****, i32***** @wbp_weight, align 8
  %arrayidx71 = getelementptr inbounds i32***, i32**** %47, i64 %idxprom70
  %48 = load i32***, i32**** %arrayidx71, align 8
  %arrayidx72 = getelementptr inbounds i32**, i32*** %48, i64 %idxprom67
  %49 = load i32**, i32*** %arrayidx72, align 8
  %arrayidx73 = getelementptr inbounds i32*, i32** %49, i64 0
  %50 = load i32*, i32** %arrayidx73, align 8
  %arrayidx74 = getelementptr inbounds i32, i32* %50, i64 0
  %51 = load i32, i32* %arrayidx74, align 4
  br label %cond.end.82

cond.false.75:                                    ; preds = %cond.true.63
  %52 = load i16, i16* %ref.addr, align 2
  %idxprom76 = sext i16 %52 to i64
  %53 = load i16, i16* %list_offset, align 2
  %idxprom77 = sext i16 %53 to i64
  %54 = load i32****, i32***** @wbp_weight, align 8
  %arrayidx78 = getelementptr inbounds i32***, i32**** %54, i64 %idxprom77
  %55 = load i32***, i32**** %arrayidx78, align 8
  %arrayidx79 = getelementptr inbounds i32**, i32*** %55, i64 0
  %56 = load i32**, i32*** %arrayidx79, align 8
  %arrayidx80 = getelementptr inbounds i32*, i32** %56, i64 %idxprom76
  %57 = load i32*, i32** %arrayidx80, align 8
  %arrayidx81 = getelementptr inbounds i32, i32* %57, i64 0
  %58 = load i32, i32* %arrayidx81, align 4
  br label %cond.end.82

cond.end.82:                                      ; preds = %cond.false.75, %cond.true.66
  %cond83 = phi i32 [ %51, %cond.true.66 ], [ %58, %cond.false.75 ]
  br label %cond.end.85

cond.false.84:                                    ; preds = %cond.end.58
  br label %cond.end.85

cond.end.85:                                      ; preds = %cond.false.84, %cond.end.82
  %cond86 = phi i32 [ %cond83, %cond.end.82 ], [ 1, %cond.false.84 ]
  %conv87 = trunc i32 %cond86 to i16
  store i16 %conv87, i16* %weightRpic, align 2
  %59 = load i16, i16* %apply_weights, align 2
  %conv88 = sext i16 %59 to i32
  %tobool89 = icmp ne i32 %conv88, 0
  br i1 %tobool89, label %cond.true.90, label %cond.false.108

cond.true.90:                                     ; preds = %cond.end.85
  %60 = load i32, i32* %list.addr, align 4
  %cmp91 = icmp eq i32 %60, 0
  br i1 %cmp91, label %cond.true.93, label %cond.false.99

cond.true.93:                                     ; preds = %cond.true.90
  %61 = load i16, i16* %ref.addr, align 2
  %idxprom94 = sext i16 %61 to i64
  %62 = load i16, i16* %list_offset, align 2
  %idxprom95 = sext i16 %62 to i64
  %63 = load i32***, i32**** @wp_offset, align 8
  %arrayidx96 = getelementptr inbounds i32**, i32*** %63, i64 %idxprom95
  %64 = load i32**, i32*** %arrayidx96, align 8
  %arrayidx97 = getelementptr inbounds i32*, i32** %64, i64 %idxprom94
  %65 = load i32*, i32** %arrayidx97, align 8
  %arrayidx98 = getelementptr inbounds i32, i32* %65, i64 0
  %66 = load i32, i32* %arrayidx98, align 4
  br label %cond.end.106

cond.false.99:                                    ; preds = %cond.true.90
  %67 = load i16, i16* %list_offset, align 2
  %conv100 = sext i16 %67 to i32
  %add101 = add nsw i32 %conv100, 1
  %idxprom102 = sext i32 %add101 to i64
  %68 = load i32***, i32**** @wp_offset, align 8
  %arrayidx103 = getelementptr inbounds i32**, i32*** %68, i64 %idxprom102
  %69 = load i32**, i32*** %arrayidx103, align 8
  %arrayidx104 = getelementptr inbounds i32*, i32** %69, i64 0
  %70 = load i32*, i32** %arrayidx104, align 8
  %arrayidx105 = getelementptr inbounds i32, i32* %70, i64 0
  %71 = load i32, i32* %arrayidx105, align 4
  br label %cond.end.106

cond.end.106:                                     ; preds = %cond.false.99, %cond.true.93
  %cond107 = phi i32 [ %66, %cond.true.93 ], [ %71, %cond.false.99 ]
  br label %cond.end.109

cond.false.108:                                   ; preds = %cond.end.85
  br label %cond.end.109

cond.end.109:                                     ; preds = %cond.false.108, %cond.end.106
  %cond110 = phi i32 [ %cond107, %cond.end.106 ], [ 0, %cond.false.108 ]
  %conv111 = trunc i32 %cond110 to i16
  store i16 %conv111, i16* %offsetSpic, align 2
  %72 = load i16, i16* %apply_weights, align 2
  %conv112 = sext i16 %72 to i32
  %tobool113 = icmp ne i32 %conv112, 0
  br i1 %tobool113, label %cond.true.114, label %cond.false.132

cond.true.114:                                    ; preds = %cond.end.109
  %73 = load i32, i32* %list.addr, align 4
  %cmp115 = icmp eq i32 %73, 0
  br i1 %cmp115, label %cond.true.117, label %cond.false.125

cond.true.117:                                    ; preds = %cond.true.114
  %74 = load i16, i16* %ref.addr, align 2
  %idxprom118 = sext i16 %74 to i64
  %75 = load i16, i16* %list_offset, align 2
  %conv119 = sext i16 %75 to i32
  %add120 = add nsw i32 %conv119, 1
  %idxprom121 = sext i32 %add120 to i64
  %76 = load i32***, i32**** @wp_offset, align 8
  %arrayidx122 = getelementptr inbounds i32**, i32*** %76, i64 %idxprom121
  %77 = load i32**, i32*** %arrayidx122, align 8
  %arrayidx123 = getelementptr inbounds i32*, i32** %77, i64 %idxprom118
  %78 = load i32*, i32** %arrayidx123, align 8
  %arrayidx124 = getelementptr inbounds i32, i32* %78, i64 0
  %79 = load i32, i32* %arrayidx124, align 4
  br label %cond.end.130

cond.false.125:                                   ; preds = %cond.true.114
  %80 = load i16, i16* %list_offset, align 2
  %idxprom126 = sext i16 %80 to i64
  %81 = load i32***, i32**** @wp_offset, align 8
  %arrayidx127 = getelementptr inbounds i32**, i32*** %81, i64 %idxprom126
  %82 = load i32**, i32*** %arrayidx127, align 8
  %arrayidx128 = getelementptr inbounds i32*, i32** %82, i64 0
  %83 = load i32*, i32** %arrayidx128, align 8
  %arrayidx129 = getelementptr inbounds i32, i32* %83, i64 0
  %84 = load i32, i32* %arrayidx129, align 4
  br label %cond.end.130

cond.end.130:                                     ; preds = %cond.false.125, %cond.true.117
  %cond131 = phi i32 [ %79, %cond.true.117 ], [ %84, %cond.false.125 ]
  br label %cond.end.133

cond.false.132:                                   ; preds = %cond.end.109
  br label %cond.end.133

cond.end.133:                                     ; preds = %cond.false.132, %cond.end.130
  %cond134 = phi i32 [ %cond131, %cond.end.130 ], [ 0, %cond.false.132 ]
  %conv135 = trunc i32 %cond134 to i16
  store i16 %conv135, i16* %offsetRpic, align 2
  %85 = load i16, i16* %offsetRpic, align 2
  %conv136 = sext i16 %85 to i32
  %86 = load i16, i16* %offsetSpic, align 2
  %conv137 = sext i16 %86 to i32
  %add138 = add nsw i32 %conv136, %conv137
  %add139 = add nsw i32 %add138, 1
  %shr = ashr i32 %add139, 1
  %conv140 = trunc i32 %shr to i16
  store i16 %conv140, i16* %offsetBi, align 2
  %87 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamardqpel = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %87, i32 0, i32 7
  %88 = load i32, i32* %hadamardqpel, align 4
  %tobool141 = icmp ne i32 %88, 0
  br i1 %tobool141, label %cond.true.142, label %cond.false.143

cond.true.142:                                    ; preds = %cond.end.133
  br label %cond.end.145

cond.false.143:                                   ; preds = %cond.end.133
  %89 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamard144 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %89, i32 0, i32 6
  %90 = load i32, i32* %hadamard144, align 4
  br label %cond.end.145

cond.end.145:                                     ; preds = %cond.false.143, %cond.true.142
  %cond146 = phi i32 [ 0, %cond.true.142 ], [ %90, %cond.false.143 ]
  store i32 %cond146, i32* %halfpelhadamard, align 4
  %91 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamardqpel147 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %91, i32 0, i32 7
  %92 = load i32, i32* %hadamardqpel147, align 4
  %tobool148 = icmp ne i32 %92, 0
  %cond149 = select i1 %tobool148, i32 0, i32 1
  store i32 %cond149, i32* %qpelstart, align 4
  %93 = load i16, i16* %ref.addr, align 2
  %idxprom150 = sext i16 %93 to i64
  %94 = load i32, i32* %list.addr, align 4
  %95 = load i16, i16* %list_offset, align 2
  %conv151 = sext i16 %95 to i32
  %add152 = add nsw i32 %94, %conv151
  %idxprom153 = sext i32 %add152 to i64
  %arrayidx154 = getelementptr inbounds [6 x %struct.storable_picture**], [6 x %struct.storable_picture**]* @listX, i32 0, i64 %idxprom153
  %96 = load %struct.storable_picture**, %struct.storable_picture*** %arrayidx154, align 8
  %arrayidx155 = getelementptr inbounds %struct.storable_picture*, %struct.storable_picture** %96, i64 %idxprom150
  %97 = load %struct.storable_picture*, %struct.storable_picture** %arrayidx155, align 8
  %imgY_ups = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %97, i32 0, i32 28
  %98 = load i16**, i16*** %imgY_ups, align 8
  store i16** %98, i16*** %ref1_pic, align 8
  %99 = load i32, i32* %list.addr, align 4
  %cmp156 = icmp eq i32 %99, 0
  br i1 %cmp156, label %cond.true.158, label %cond.false.161

cond.true.158:                                    ; preds = %cond.end.145
  %100 = load i16, i16* %list_offset, align 2
  %conv159 = sext i16 %100 to i32
  %add160 = add nsw i32 1, %conv159
  br label %cond.end.163

cond.false.161:                                   ; preds = %cond.end.145
  %101 = load i16, i16* %list_offset, align 2
  %conv162 = sext i16 %101 to i32
  br label %cond.end.163

cond.end.163:                                     ; preds = %cond.false.161, %cond.true.158
  %cond164 = phi i32 [ %add160, %cond.true.158 ], [ %conv162, %cond.false.161 ]
  %idxprom165 = sext i32 %cond164 to i64
  %arrayidx166 = getelementptr inbounds [6 x %struct.storable_picture**], [6 x %struct.storable_picture**]* @listX, i32 0, i64 %idxprom165
  %102 = load %struct.storable_picture**, %struct.storable_picture*** %arrayidx166, align 8
  %arrayidx167 = getelementptr inbounds %struct.storable_picture*, %struct.storable_picture** %102, i64 0
  %103 = load %struct.storable_picture*, %struct.storable_picture** %arrayidx167, align 8
  %imgY_ups168 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %103, i32 0, i32 28
  %104 = load i16**, i16*** %imgY_ups168, align 8
  store i16** %104, i16*** %ref2_pic, align 8
  %105 = load i16, i16* %ref.addr, align 2
  %idxprom169 = sext i16 %105 to i64
  %106 = load i32, i32* %list.addr, align 4
  %107 = load i16, i16* %list_offset, align 2
  %conv170 = sext i16 %107 to i32
  %add171 = add nsw i32 %106, %conv170
  %idxprom172 = sext i32 %add171 to i64
  %arrayidx173 = getelementptr inbounds [6 x %struct.storable_picture**], [6 x %struct.storable_picture**]* @listX, i32 0, i64 %idxprom172
  %108 = load %struct.storable_picture**, %struct.storable_picture*** %arrayidx173, align 8
  %arrayidx174 = getelementptr inbounds %struct.storable_picture*, %struct.storable_picture** %108, i64 %idxprom169
  %109 = load %struct.storable_picture*, %struct.storable_picture** %arrayidx174, align 8
  store %struct.storable_picture* %109, %struct.storable_picture** %ref_picture, align 8
  %110 = load %struct.storable_picture*, %struct.storable_picture** %ref_picture, align 8
  %size_x = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %110, i32 0, i32 18
  %111 = load i32, i32* %size_x, align 4
  store i32 %111, i32* %img_width, align 4
  %112 = load %struct.storable_picture*, %struct.storable_picture** %ref_picture, align 8
  %size_y = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %112, i32 0, i32 19
  %113 = load i32, i32* %size_y, align 4
  store i32 %113, i32* %img_height, align 4
  %114 = load %struct.storable_picture*, %struct.storable_picture** %ref_picture, align 8
  %size_x175 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %114, i32 0, i32 18
  %115 = load i32, i32* %size_x175, align 4
  %116 = load i16, i16* %blocksize_x, align 2
  %conv176 = sext i16 %116 to i32
  %sub = sub nsw i32 %115, %conv176
  %add177 = add nsw i32 %sub, 1
  %shl178 = shl i32 %add177, 2
  %conv179 = trunc i32 %shl178 to i16
  store i16 %conv179, i16* %max_pos_x4, align 2
  %117 = load %struct.storable_picture*, %struct.storable_picture** %ref_picture, align 8
  %size_y180 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %117, i32 0, i32 19
  %118 = load i32, i32* %size_y180, align 4
  %119 = load i16, i16* %blocksize_y, align 2
  %conv181 = sext i16 %119 to i32
  %sub182 = sub nsw i32 %118, %conv181
  %add183 = add nsw i32 %sub182, 1
  %shl184 = shl i32 %add183, 2
  %conv185 = trunc i32 %shl184 to i16
  store i16 %conv185, i16* %max_pos_y4, align 2
  %120 = load i16*, i16** %mv_x.addr, align 8
  %121 = load i16, i16* %120, align 2
  %conv186 = sext i16 %121 to i32
  %shl187 = shl i32 %conv186, 2
  %conv188 = trunc i32 %shl187 to i16
  store i16 %conv188, i16* %120, align 2
  %122 = load i16*, i16** %mv_y.addr, align 8
  %123 = load i16, i16* %122, align 2
  %conv189 = sext i16 %123 to i32
  %shl190 = shl i32 %conv189, 2
  %conv191 = trunc i32 %shl190 to i16
  store i16 %conv191, i16* %122, align 2
  %124 = load i16, i16* %pic4_pix_x, align 2
  %conv192 = sext i16 %124 to i32
  %125 = load i16*, i16** %mv_x.addr, align 8
  %126 = load i16, i16* %125, align 2
  %conv193 = sext i16 %126 to i32
  %add194 = add nsw i32 %conv192, %conv193
  %cmp195 = icmp sgt i32 %add194, 1
  br i1 %cmp195, label %land.lhs.true.197, label %if.else

land.lhs.true.197:                                ; preds = %cond.end.163
  %127 = load i16, i16* %pic4_pix_x, align 2
  %conv198 = sext i16 %127 to i32
  %128 = load i16*, i16** %mv_x.addr, align 8
  %129 = load i16, i16* %128, align 2
  %conv199 = sext i16 %129 to i32
  %add200 = add nsw i32 %conv198, %conv199
  %130 = load i16, i16* %max_pos_x4, align 2
  %conv201 = sext i16 %130 to i32
  %sub202 = sub nsw i32 %conv201, 2
  %cmp203 = icmp slt i32 %add200, %sub202
  br i1 %cmp203, label %land.lhs.true.205, label %if.else

land.lhs.true.205:                                ; preds = %land.lhs.true.197
  %131 = load i16, i16* %pic4_pix_y, align 2
  %conv206 = sext i16 %131 to i32
  %132 = load i16*, i16** %mv_y.addr, align 8
  %133 = load i16, i16* %132, align 2
  %conv207 = sext i16 %133 to i32
  %add208 = add nsw i32 %conv206, %conv207
  %cmp209 = icmp sgt i32 %add208, 1
  br i1 %cmp209, label %land.lhs.true.211, label %if.else

land.lhs.true.211:                                ; preds = %land.lhs.true.205
  %134 = load i16, i16* %pic4_pix_y, align 2
  %conv212 = sext i16 %134 to i32
  %135 = load i16*, i16** %mv_y.addr, align 8
  %136 = load i16, i16* %135, align 2
  %conv213 = sext i16 %136 to i32
  %add214 = add nsw i32 %conv212, %conv213
  %137 = load i16, i16* %max_pos_y4, align 2
  %conv215 = sext i16 %137 to i32
  %sub216 = sub nsw i32 %conv215, 2
  %cmp217 = icmp slt i32 %add214, %sub216
  br i1 %cmp217, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true.211
  store i16 (i16**, i32, i32, i32, i32)* @FastPelY_14, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  br label %if.end

if.else:                                          ; preds = %land.lhs.true.211, %land.lhs.true.205, %land.lhs.true.197, %cond.end.163
  store i16 (i16**, i32, i32, i32, i32)* @UMVPelY_14, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %138 = load i16, i16* %pic4_pix_x, align 2
  %conv219 = sext i16 %138 to i32
  %139 = load i16*, i16** %s_mv_x.addr, align 8
  %140 = load i16, i16* %139, align 2
  %conv220 = sext i16 %140 to i32
  %add221 = add nsw i32 %conv219, %conv220
  %cmp222 = icmp sgt i32 %add221, 1
  br i1 %cmp222, label %land.lhs.true.224, label %if.else.247

land.lhs.true.224:                                ; preds = %if.end
  %141 = load i16, i16* %pic4_pix_x, align 2
  %conv225 = sext i16 %141 to i32
  %142 = load i16*, i16** %s_mv_x.addr, align 8
  %143 = load i16, i16* %142, align 2
  %conv226 = sext i16 %143 to i32
  %add227 = add nsw i32 %conv225, %conv226
  %144 = load i16, i16* %max_pos_x4, align 2
  %conv228 = sext i16 %144 to i32
  %sub229 = sub nsw i32 %conv228, 2
  %cmp230 = icmp slt i32 %add227, %sub229
  br i1 %cmp230, label %land.lhs.true.232, label %if.else.247

land.lhs.true.232:                                ; preds = %land.lhs.true.224
  %145 = load i16, i16* %pic4_pix_y, align 2
  %conv233 = sext i16 %145 to i32
  %146 = load i16*, i16** %s_mv_y.addr, align 8
  %147 = load i16, i16* %146, align 2
  %conv234 = sext i16 %147 to i32
  %add235 = add nsw i32 %conv233, %conv234
  %cmp236 = icmp sgt i32 %add235, 1
  br i1 %cmp236, label %land.lhs.true.238, label %if.else.247

land.lhs.true.238:                                ; preds = %land.lhs.true.232
  %148 = load i16, i16* %pic4_pix_y, align 2
  %conv239 = sext i16 %148 to i32
  %149 = load i16*, i16** %s_mv_y.addr, align 8
  %150 = load i16, i16* %149, align 2
  %conv240 = sext i16 %150 to i32
  %add241 = add nsw i32 %conv239, %conv240
  %151 = load i16, i16* %max_pos_y4, align 2
  %conv242 = sext i16 %151 to i32
  %sub243 = sub nsw i32 %conv242, 2
  %cmp244 = icmp slt i32 %add241, %sub243
  br i1 %cmp244, label %if.then.246, label %if.else.247

if.then.246:                                      ; preds = %land.lhs.true.238
  store i16 (i16**, i32, i32, i32, i32)* @FastPelY_14, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  br label %if.end.248

if.else.247:                                      ; preds = %land.lhs.true.238, %land.lhs.true.232, %land.lhs.true.224, %if.end
  store i16 (i16**, i32, i32, i32, i32)* @UMVPelY_14, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  br label %if.end.248

if.end.248:                                       ; preds = %if.else.247, %if.then.246
  store i16 0, i16* %best_pos, align 2
  %152 = load i16, i16* %min_pos2, align 2
  store i16 %152, i16* %pos, align 2
  br label %for.cond

for.cond:                                         ; preds = %for.inc.2108, %if.end.248
  %153 = load i16, i16* %pos, align 2
  %conv249 = sext i16 %153 to i32
  %154 = load i16, i16* %max_pos2, align 2
  %conv250 = sext i16 %154 to i32
  %cmp251 = icmp slt i32 %conv249, %conv250
  br i1 %cmp251, label %for.body, label %for.end.2110

for.body:                                         ; preds = %for.cond
  %155 = load i16*, i16** %mv_x.addr, align 8
  %156 = load i16, i16* %155, align 2
  %conv253 = sext i16 %156 to i32
  %157 = load i16, i16* %pos, align 2
  %idxprom254 = sext i16 %157 to i64
  %158 = load i32*, i32** @spiral_search_x, align 8
  %arrayidx255 = getelementptr inbounds i32, i32* %158, i64 %idxprom254
  %159 = load i32, i32* %arrayidx255, align 4
  %shl256 = shl i32 %159, 1
  %add257 = add nsw i32 %conv253, %shl256
  %conv258 = trunc i32 %add257 to i16
  store i16 %conv258, i16* %cand_mv_x, align 2
  %160 = load i16*, i16** %mv_y.addr, align 8
  %161 = load i16, i16* %160, align 2
  %conv259 = sext i16 %161 to i32
  %162 = load i16, i16* %pos, align 2
  %idxprom260 = sext i16 %162 to i64
  %163 = load i32*, i32** @spiral_search_y, align 8
  %arrayidx261 = getelementptr inbounds i32, i32* %163, i64 %idxprom260
  %164 = load i32, i32* %arrayidx261, align 4
  %shl262 = shl i32 %164, 1
  %add263 = add nsw i32 %conv259, %shl262
  %conv264 = trunc i32 %add263 to i16
  store i16 %conv264, i16* %cand_mv_y, align 2
  %165 = load i32, i32* %lambda_factor, align 4
  %166 = load i16, i16* %cand_mv_x, align 2
  %conv265 = sext i16 %166 to i32
  %167 = load i16, i16* %mv_shift, align 2
  %conv266 = sext i16 %167 to i32
  %shl267 = shl i32 %conv265, %conv266
  %168 = load i16, i16* %pred_mv_x.addr, align 2
  %conv268 = sext i16 %168 to i32
  %sub269 = sub nsw i32 %shl267, %conv268
  %idxprom270 = sext i32 %sub269 to i64
  %169 = load i32*, i32** @mvbits, align 8
  %arrayidx271 = getelementptr inbounds i32, i32* %169, i64 %idxprom270
  %170 = load i32, i32* %arrayidx271, align 4
  %171 = load i16, i16* %cand_mv_y, align 2
  %conv272 = sext i16 %171 to i32
  %172 = load i16, i16* %mv_shift, align 2
  %conv273 = sext i16 %172 to i32
  %shl274 = shl i32 %conv272, %conv273
  %173 = load i16, i16* %pred_mv_y.addr, align 2
  %conv275 = sext i16 %173 to i32
  %sub276 = sub nsw i32 %shl274, %conv275
  %idxprom277 = sext i32 %sub276 to i64
  %174 = load i32*, i32** @mvbits, align 8
  %arrayidx278 = getelementptr inbounds i32, i32* %174, i64 %idxprom277
  %175 = load i32, i32* %arrayidx278, align 4
  %add279 = add nsw i32 %170, %175
  %mul280 = mul nsw i32 %165, %add279
  %shr281 = ashr i32 %mul280, 16
  %conv282 = trunc i32 %shr281 to i16
  store i16 %conv282, i16* %mcost, align 2
  store i16 0, i16* %y0, align 2
  store i16 0, i16* %abort_search, align 2
  br label %for.cond.283

for.cond.283:                                     ; preds = %for.inc.2088, %for.body
  %176 = load i16, i16* %y0, align 2
  %conv284 = sext i16 %176 to i32
  %177 = load i16, i16* %blocksize_y, align 2
  %conv285 = sext i16 %177 to i32
  %cmp286 = icmp slt i32 %conv284, %conv285
  br i1 %cmp286, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %for.cond.283
  %178 = load i16, i16* %abort_search, align 2
  %tobool288 = icmp ne i16 %178, 0
  %lnot = xor i1 %tobool288, true
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond.283
  %179 = phi i1 [ false, %for.cond.283 ], [ %lnot, %land.rhs ]
  br i1 %179, label %for.body.289, label %for.end.2092

for.body.289:                                     ; preds = %land.end
  %180 = load i32, i32* %pic_pix_y.addr, align 4
  %181 = load i16, i16* %y0, align 2
  %conv290 = sext i16 %181 to i32
  %add291 = add nsw i32 %180, %conv290
  %shl292 = shl i32 %add291, 2
  %182 = load i16*, i16** %s_mv_y.addr, align 8
  %183 = load i16, i16* %182, align 2
  %conv293 = sext i16 %183 to i32
  %add294 = add nsw i32 %shl292, %conv293
  %conv295 = trunc i32 %add294 to i16
  store i16 %conv295, i16* %sy0, align 2
  %184 = load i32, i32* %pic_pix_y.addr, align 4
  %185 = load i16, i16* %y0, align 2
  %conv296 = sext i16 %185 to i32
  %add297 = add nsw i32 %184, %conv296
  %shl298 = shl i32 %add297, 2
  %186 = load i16, i16* %cand_mv_y, align 2
  %conv299 = sext i16 %186 to i32
  %add300 = add nsw i32 %shl298, %conv299
  %conv301 = trunc i32 %add300 to i16
  store i16 %conv301, i16* %ry0, align 2
  %187 = load i16, i16* %apply_weights, align 2
  %tobool302 = icmp ne i16 %187, 0
  br i1 %tobool302, label %if.then.303, label %if.else.1703

if.then.303:                                      ; preds = %for.body.289
  store i16 0, i16* %x0, align 2
  br label %for.cond.304

for.cond.304:                                     ; preds = %for.inc.1698, %if.then.303
  %188 = load i16, i16* %x0, align 2
  %conv305 = sext i16 %188 to i32
  %189 = load i16, i16* %blocksize_x, align 2
  %conv306 = sext i16 %189 to i32
  %cmp307 = icmp slt i32 %conv305, %conv306
  br i1 %cmp307, label %for.body.309, label %for.end.1702

for.body.309:                                     ; preds = %for.cond.304
  %190 = load i32, i32* %pic_pix_x.addr, align 4
  %191 = load i16, i16* %x0, align 2
  %conv310 = sext i16 %191 to i32
  %add311 = add nsw i32 %190, %conv310
  %shl312 = shl i32 %add311, 2
  %192 = load i16*, i16** %s_mv_x.addr, align 8
  %193 = load i16, i16* %192, align 2
  %conv313 = sext i16 %193 to i32
  %add314 = add nsw i32 %shl312, %conv313
  %conv315 = trunc i32 %add314 to i16
  store i16 %conv315, i16* %sx0, align 2
  %194 = load i32, i32* %pic_pix_x.addr, align 4
  %195 = load i16, i16* %x0, align 2
  %conv316 = sext i16 %195 to i32
  %add317 = add nsw i32 %194, %conv316
  %shl318 = shl i32 %add317, 2
  %196 = load i16, i16* %cand_mv_x, align 2
  %conv319 = sext i16 %196 to i32
  %add320 = add nsw i32 %shl318, %conv319
  %conv321 = trunc i32 %add320 to i16
  store i16 %conv321, i16* %rx0, align 2
  %arraydecay = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i32 0, i32 0
  store i32* %arraydecay, i32** %d, align 8
  %197 = load i16, i16* %sy0, align 2
  store i16 %197, i16* %sy, align 2
  %198 = load i16, i16* %ry0, align 2
  store i16 %198, i16* %ry, align 2
  %199 = load i16, i16* %y0, align 2
  %idxprom322 = sext i16 %199 to i64
  %200 = load i16**, i16*** %orig_pic.addr, align 8
  %arrayidx323 = getelementptr inbounds i16*, i16** %200, i64 %idxprom322
  %201 = load i16*, i16** %arrayidx323, align 8
  store i16* %201, i16** %orig_line, align 8
  %202 = load i16, i16* %weightSpic, align 2
  %conv324 = sext i16 %202 to i32
  %203 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %204 = load i16**, i16*** %ref1_pic, align 8
  %205 = load i16, i16* %sy, align 2
  %conv325 = sext i16 %205 to i32
  %206 = load i16, i16* %sx0, align 2
  %conv326 = sext i16 %206 to i32
  %207 = load i32, i32* %img_height, align 4
  %208 = load i32, i32* %img_width, align 4
  %call = call zeroext i16 %203(i16** %204, i32 %conv325, i32 %conv326, i32 %207, i32 %208)
  %conv327 = zext i16 %call to i32
  %mul328 = mul nsw i32 %conv324, %conv327
  %209 = load i16, i16* %weightRpic, align 2
  %conv329 = sext i16 %209 to i32
  %210 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %211 = load i16**, i16*** %ref2_pic, align 8
  %212 = load i16, i16* %ry, align 2
  %conv330 = sext i16 %212 to i32
  %213 = load i16, i16* %rx0, align 2
  %conv331 = sext i16 %213 to i32
  %214 = load i32, i32* %img_height, align 4
  %215 = load i32, i32* %img_width, align 4
  %call332 = call zeroext i16 %210(i16** %211, i32 %conv330, i32 %conv331, i32 %214, i32 %215)
  %conv333 = zext i16 %call332 to i32
  %mul334 = mul nsw i32 %conv329, %conv333
  %add335 = add nsw i32 %mul328, %mul334
  %216 = load i32, i32* @wp_luma_round, align 4
  %mul336 = mul nsw i32 2, %216
  %add337 = add nsw i32 %add335, %mul336
  %217 = load i32, i32* @luma_log_weight_denom, align 4
  %add338 = add nsw i32 %217, 1
  %shr339 = ashr i32 %add337, %add338
  %218 = load i16, i16* %offsetBi, align 2
  %conv340 = sext i16 %218 to i32
  %add341 = add nsw i32 %shr339, %conv340
  %cmp342 = icmp slt i32 %add341, 0
  br i1 %cmp342, label %cond.true.344, label %cond.false.345

cond.true.344:                                    ; preds = %for.body.309
  br label %cond.end.391

cond.false.345:                                   ; preds = %for.body.309
  %219 = load i16, i16* %weightSpic, align 2
  %conv346 = sext i16 %219 to i32
  %220 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %221 = load i16**, i16*** %ref1_pic, align 8
  %222 = load i16, i16* %sy, align 2
  %conv347 = sext i16 %222 to i32
  %223 = load i16, i16* %sx0, align 2
  %conv348 = sext i16 %223 to i32
  %224 = load i32, i32* %img_height, align 4
  %225 = load i32, i32* %img_width, align 4
  %call349 = call zeroext i16 %220(i16** %221, i32 %conv347, i32 %conv348, i32 %224, i32 %225)
  %conv350 = zext i16 %call349 to i32
  %mul351 = mul nsw i32 %conv346, %conv350
  %226 = load i16, i16* %weightRpic, align 2
  %conv352 = sext i16 %226 to i32
  %227 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %228 = load i16**, i16*** %ref2_pic, align 8
  %229 = load i16, i16* %ry, align 2
  %conv353 = sext i16 %229 to i32
  %230 = load i16, i16* %rx0, align 2
  %conv354 = sext i16 %230 to i32
  %231 = load i32, i32* %img_height, align 4
  %232 = load i32, i32* %img_width, align 4
  %call355 = call zeroext i16 %227(i16** %228, i32 %conv353, i32 %conv354, i32 %231, i32 %232)
  %conv356 = zext i16 %call355 to i32
  %mul357 = mul nsw i32 %conv352, %conv356
  %add358 = add nsw i32 %mul351, %mul357
  %233 = load i32, i32* @wp_luma_round, align 4
  %mul359 = mul nsw i32 2, %233
  %add360 = add nsw i32 %add358, %mul359
  %234 = load i32, i32* @luma_log_weight_denom, align 4
  %add361 = add nsw i32 %234, 1
  %shr362 = ashr i32 %add360, %add361
  %235 = load i16, i16* %offsetBi, align 2
  %conv363 = sext i16 %235 to i32
  %add364 = add nsw i32 %shr362, %conv363
  %236 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %236, i32 0, i32 155
  %237 = load i32, i32* %max_imgpel_value, align 4
  %cmp365 = icmp sgt i32 %add364, %237
  br i1 %cmp365, label %cond.true.367, label %cond.false.369

cond.true.367:                                    ; preds = %cond.false.345
  %238 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value368 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %238, i32 0, i32 155
  %239 = load i32, i32* %max_imgpel_value368, align 4
  br label %cond.end.389

cond.false.369:                                   ; preds = %cond.false.345
  %240 = load i16, i16* %weightSpic, align 2
  %conv370 = sext i16 %240 to i32
  %241 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %242 = load i16**, i16*** %ref1_pic, align 8
  %243 = load i16, i16* %sy, align 2
  %conv371 = sext i16 %243 to i32
  %244 = load i16, i16* %sx0, align 2
  %conv372 = sext i16 %244 to i32
  %245 = load i32, i32* %img_height, align 4
  %246 = load i32, i32* %img_width, align 4
  %call373 = call zeroext i16 %241(i16** %242, i32 %conv371, i32 %conv372, i32 %245, i32 %246)
  %conv374 = zext i16 %call373 to i32
  %mul375 = mul nsw i32 %conv370, %conv374
  %247 = load i16, i16* %weightRpic, align 2
  %conv376 = sext i16 %247 to i32
  %248 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %249 = load i16**, i16*** %ref2_pic, align 8
  %250 = load i16, i16* %ry, align 2
  %conv377 = sext i16 %250 to i32
  %251 = load i16, i16* %rx0, align 2
  %conv378 = sext i16 %251 to i32
  %252 = load i32, i32* %img_height, align 4
  %253 = load i32, i32* %img_width, align 4
  %call379 = call zeroext i16 %248(i16** %249, i32 %conv377, i32 %conv378, i32 %252, i32 %253)
  %conv380 = zext i16 %call379 to i32
  %mul381 = mul nsw i32 %conv376, %conv380
  %add382 = add nsw i32 %mul375, %mul381
  %254 = load i32, i32* @wp_luma_round, align 4
  %mul383 = mul nsw i32 2, %254
  %add384 = add nsw i32 %add382, %mul383
  %255 = load i32, i32* @luma_log_weight_denom, align 4
  %add385 = add nsw i32 %255, 1
  %shr386 = ashr i32 %add384, %add385
  %256 = load i16, i16* %offsetBi, align 2
  %conv387 = sext i16 %256 to i32
  %add388 = add nsw i32 %shr386, %conv387
  br label %cond.end.389

cond.end.389:                                     ; preds = %cond.false.369, %cond.true.367
  %cond390 = phi i32 [ %239, %cond.true.367 ], [ %add388, %cond.false.369 ]
  br label %cond.end.391

cond.end.391:                                     ; preds = %cond.end.389, %cond.true.344
  %cond392 = phi i32 [ 0, %cond.true.344 ], [ %cond390, %cond.end.389 ]
  store i32 %cond392, i32* %weightedpel, align 4
  %257 = load i16, i16* %x0, align 2
  %idxprom393 = sext i16 %257 to i64
  %258 = load i16*, i16** %orig_line, align 8
  %arrayidx394 = getelementptr inbounds i16, i16* %258, i64 %idxprom393
  %259 = load i16, i16* %arrayidx394, align 2
  %conv395 = zext i16 %259 to i32
  %260 = load i32, i32* %weightedpel, align 4
  %sub396 = sub nsw i32 %conv395, %260
  %261 = load i32*, i32** %d, align 8
  %incdec.ptr = getelementptr inbounds i32, i32* %261, i32 1
  store i32* %incdec.ptr, i32** %d, align 8
  store i32 %sub396, i32* %261, align 4
  %262 = load i16, i16* %weightSpic, align 2
  %conv397 = sext i16 %262 to i32
  %263 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %264 = load i16**, i16*** %ref1_pic, align 8
  %265 = load i16, i16* %sy, align 2
  %conv398 = sext i16 %265 to i32
  %266 = load i16, i16* %sx0, align 2
  %conv399 = sext i16 %266 to i32
  %add400 = add nsw i32 %conv399, 4
  %267 = load i32, i32* %img_height, align 4
  %268 = load i32, i32* %img_width, align 4
  %call401 = call zeroext i16 %263(i16** %264, i32 %conv398, i32 %add400, i32 %267, i32 %268)
  %conv402 = zext i16 %call401 to i32
  %mul403 = mul nsw i32 %conv397, %conv402
  %269 = load i16, i16* %weightRpic, align 2
  %conv404 = sext i16 %269 to i32
  %270 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %271 = load i16**, i16*** %ref2_pic, align 8
  %272 = load i16, i16* %ry, align 2
  %conv405 = sext i16 %272 to i32
  %273 = load i16, i16* %rx0, align 2
  %conv406 = sext i16 %273 to i32
  %add407 = add nsw i32 %conv406, 4
  %274 = load i32, i32* %img_height, align 4
  %275 = load i32, i32* %img_width, align 4
  %call408 = call zeroext i16 %270(i16** %271, i32 %conv405, i32 %add407, i32 %274, i32 %275)
  %conv409 = zext i16 %call408 to i32
  %mul410 = mul nsw i32 %conv404, %conv409
  %add411 = add nsw i32 %mul403, %mul410
  %276 = load i32, i32* @wp_luma_round, align 4
  %mul412 = mul nsw i32 2, %276
  %add413 = add nsw i32 %add411, %mul412
  %277 = load i32, i32* @luma_log_weight_denom, align 4
  %add414 = add nsw i32 %277, 1
  %shr415 = ashr i32 %add413, %add414
  %278 = load i16, i16* %offsetBi, align 2
  %conv416 = sext i16 %278 to i32
  %add417 = add nsw i32 %shr415, %conv416
  %cmp418 = icmp slt i32 %add417, 0
  br i1 %cmp418, label %cond.true.420, label %cond.false.421

cond.true.420:                                    ; preds = %cond.end.391
  br label %cond.end.472

cond.false.421:                                   ; preds = %cond.end.391
  %279 = load i16, i16* %weightSpic, align 2
  %conv422 = sext i16 %279 to i32
  %280 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %281 = load i16**, i16*** %ref1_pic, align 8
  %282 = load i16, i16* %sy, align 2
  %conv423 = sext i16 %282 to i32
  %283 = load i16, i16* %sx0, align 2
  %conv424 = sext i16 %283 to i32
  %add425 = add nsw i32 %conv424, 4
  %284 = load i32, i32* %img_height, align 4
  %285 = load i32, i32* %img_width, align 4
  %call426 = call zeroext i16 %280(i16** %281, i32 %conv423, i32 %add425, i32 %284, i32 %285)
  %conv427 = zext i16 %call426 to i32
  %mul428 = mul nsw i32 %conv422, %conv427
  %286 = load i16, i16* %weightRpic, align 2
  %conv429 = sext i16 %286 to i32
  %287 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %288 = load i16**, i16*** %ref2_pic, align 8
  %289 = load i16, i16* %ry, align 2
  %conv430 = sext i16 %289 to i32
  %290 = load i16, i16* %rx0, align 2
  %conv431 = sext i16 %290 to i32
  %add432 = add nsw i32 %conv431, 4
  %291 = load i32, i32* %img_height, align 4
  %292 = load i32, i32* %img_width, align 4
  %call433 = call zeroext i16 %287(i16** %288, i32 %conv430, i32 %add432, i32 %291, i32 %292)
  %conv434 = zext i16 %call433 to i32
  %mul435 = mul nsw i32 %conv429, %conv434
  %add436 = add nsw i32 %mul428, %mul435
  %293 = load i32, i32* @wp_luma_round, align 4
  %mul437 = mul nsw i32 2, %293
  %add438 = add nsw i32 %add436, %mul437
  %294 = load i32, i32* @luma_log_weight_denom, align 4
  %add439 = add nsw i32 %294, 1
  %shr440 = ashr i32 %add438, %add439
  %295 = load i16, i16* %offsetBi, align 2
  %conv441 = sext i16 %295 to i32
  %add442 = add nsw i32 %shr440, %conv441
  %296 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value443 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %296, i32 0, i32 155
  %297 = load i32, i32* %max_imgpel_value443, align 4
  %cmp444 = icmp sgt i32 %add442, %297
  br i1 %cmp444, label %cond.true.446, label %cond.false.448

cond.true.446:                                    ; preds = %cond.false.421
  %298 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value447 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %298, i32 0, i32 155
  %299 = load i32, i32* %max_imgpel_value447, align 4
  br label %cond.end.470

cond.false.448:                                   ; preds = %cond.false.421
  %300 = load i16, i16* %weightSpic, align 2
  %conv449 = sext i16 %300 to i32
  %301 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %302 = load i16**, i16*** %ref1_pic, align 8
  %303 = load i16, i16* %sy, align 2
  %conv450 = sext i16 %303 to i32
  %304 = load i16, i16* %sx0, align 2
  %conv451 = sext i16 %304 to i32
  %add452 = add nsw i32 %conv451, 4
  %305 = load i32, i32* %img_height, align 4
  %306 = load i32, i32* %img_width, align 4
  %call453 = call zeroext i16 %301(i16** %302, i32 %conv450, i32 %add452, i32 %305, i32 %306)
  %conv454 = zext i16 %call453 to i32
  %mul455 = mul nsw i32 %conv449, %conv454
  %307 = load i16, i16* %weightRpic, align 2
  %conv456 = sext i16 %307 to i32
  %308 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %309 = load i16**, i16*** %ref2_pic, align 8
  %310 = load i16, i16* %ry, align 2
  %conv457 = sext i16 %310 to i32
  %311 = load i16, i16* %rx0, align 2
  %conv458 = sext i16 %311 to i32
  %add459 = add nsw i32 %conv458, 4
  %312 = load i32, i32* %img_height, align 4
  %313 = load i32, i32* %img_width, align 4
  %call460 = call zeroext i16 %308(i16** %309, i32 %conv457, i32 %add459, i32 %312, i32 %313)
  %conv461 = zext i16 %call460 to i32
  %mul462 = mul nsw i32 %conv456, %conv461
  %add463 = add nsw i32 %mul455, %mul462
  %314 = load i32, i32* @wp_luma_round, align 4
  %mul464 = mul nsw i32 2, %314
  %add465 = add nsw i32 %add463, %mul464
  %315 = load i32, i32* @luma_log_weight_denom, align 4
  %add466 = add nsw i32 %315, 1
  %shr467 = ashr i32 %add465, %add466
  %316 = load i16, i16* %offsetBi, align 2
  %conv468 = sext i16 %316 to i32
  %add469 = add nsw i32 %shr467, %conv468
  br label %cond.end.470

cond.end.470:                                     ; preds = %cond.false.448, %cond.true.446
  %cond471 = phi i32 [ %299, %cond.true.446 ], [ %add469, %cond.false.448 ]
  br label %cond.end.472

cond.end.472:                                     ; preds = %cond.end.470, %cond.true.420
  %cond473 = phi i32 [ 0, %cond.true.420 ], [ %cond471, %cond.end.470 ]
  store i32 %cond473, i32* %weightedpel, align 4
  %317 = load i16, i16* %x0, align 2
  %conv474 = sext i16 %317 to i32
  %add475 = add nsw i32 %conv474, 1
  %idxprom476 = sext i32 %add475 to i64
  %318 = load i16*, i16** %orig_line, align 8
  %arrayidx477 = getelementptr inbounds i16, i16* %318, i64 %idxprom476
  %319 = load i16, i16* %arrayidx477, align 2
  %conv478 = zext i16 %319 to i32
  %320 = load i32, i32* %weightedpel, align 4
  %sub479 = sub nsw i32 %conv478, %320
  %321 = load i32*, i32** %d, align 8
  %incdec.ptr480 = getelementptr inbounds i32, i32* %321, i32 1
  store i32* %incdec.ptr480, i32** %d, align 8
  store i32 %sub479, i32* %321, align 4
  %322 = load i16, i16* %weightSpic, align 2
  %conv481 = sext i16 %322 to i32
  %323 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %324 = load i16**, i16*** %ref1_pic, align 8
  %325 = load i16, i16* %sy, align 2
  %conv482 = sext i16 %325 to i32
  %326 = load i16, i16* %sx0, align 2
  %conv483 = sext i16 %326 to i32
  %add484 = add nsw i32 %conv483, 8
  %327 = load i32, i32* %img_height, align 4
  %328 = load i32, i32* %img_width, align 4
  %call485 = call zeroext i16 %323(i16** %324, i32 %conv482, i32 %add484, i32 %327, i32 %328)
  %conv486 = zext i16 %call485 to i32
  %mul487 = mul nsw i32 %conv481, %conv486
  %329 = load i16, i16* %weightRpic, align 2
  %conv488 = sext i16 %329 to i32
  %330 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %331 = load i16**, i16*** %ref2_pic, align 8
  %332 = load i16, i16* %ry, align 2
  %conv489 = sext i16 %332 to i32
  %333 = load i16, i16* %rx0, align 2
  %conv490 = sext i16 %333 to i32
  %add491 = add nsw i32 %conv490, 8
  %334 = load i32, i32* %img_height, align 4
  %335 = load i32, i32* %img_width, align 4
  %call492 = call zeroext i16 %330(i16** %331, i32 %conv489, i32 %add491, i32 %334, i32 %335)
  %conv493 = zext i16 %call492 to i32
  %mul494 = mul nsw i32 %conv488, %conv493
  %add495 = add nsw i32 %mul487, %mul494
  %336 = load i32, i32* @wp_luma_round, align 4
  %mul496 = mul nsw i32 2, %336
  %add497 = add nsw i32 %add495, %mul496
  %337 = load i32, i32* @luma_log_weight_denom, align 4
  %add498 = add nsw i32 %337, 1
  %shr499 = ashr i32 %add497, %add498
  %338 = load i16, i16* %offsetBi, align 2
  %conv500 = sext i16 %338 to i32
  %add501 = add nsw i32 %shr499, %conv500
  %cmp502 = icmp slt i32 %add501, 0
  br i1 %cmp502, label %cond.true.504, label %cond.false.505

cond.true.504:                                    ; preds = %cond.end.472
  br label %cond.end.556

cond.false.505:                                   ; preds = %cond.end.472
  %339 = load i16, i16* %weightSpic, align 2
  %conv506 = sext i16 %339 to i32
  %340 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %341 = load i16**, i16*** %ref1_pic, align 8
  %342 = load i16, i16* %sy, align 2
  %conv507 = sext i16 %342 to i32
  %343 = load i16, i16* %sx0, align 2
  %conv508 = sext i16 %343 to i32
  %add509 = add nsw i32 %conv508, 8
  %344 = load i32, i32* %img_height, align 4
  %345 = load i32, i32* %img_width, align 4
  %call510 = call zeroext i16 %340(i16** %341, i32 %conv507, i32 %add509, i32 %344, i32 %345)
  %conv511 = zext i16 %call510 to i32
  %mul512 = mul nsw i32 %conv506, %conv511
  %346 = load i16, i16* %weightRpic, align 2
  %conv513 = sext i16 %346 to i32
  %347 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %348 = load i16**, i16*** %ref2_pic, align 8
  %349 = load i16, i16* %ry, align 2
  %conv514 = sext i16 %349 to i32
  %350 = load i16, i16* %rx0, align 2
  %conv515 = sext i16 %350 to i32
  %add516 = add nsw i32 %conv515, 8
  %351 = load i32, i32* %img_height, align 4
  %352 = load i32, i32* %img_width, align 4
  %call517 = call zeroext i16 %347(i16** %348, i32 %conv514, i32 %add516, i32 %351, i32 %352)
  %conv518 = zext i16 %call517 to i32
  %mul519 = mul nsw i32 %conv513, %conv518
  %add520 = add nsw i32 %mul512, %mul519
  %353 = load i32, i32* @wp_luma_round, align 4
  %mul521 = mul nsw i32 2, %353
  %add522 = add nsw i32 %add520, %mul521
  %354 = load i32, i32* @luma_log_weight_denom, align 4
  %add523 = add nsw i32 %354, 1
  %shr524 = ashr i32 %add522, %add523
  %355 = load i16, i16* %offsetBi, align 2
  %conv525 = sext i16 %355 to i32
  %add526 = add nsw i32 %shr524, %conv525
  %356 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value527 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %356, i32 0, i32 155
  %357 = load i32, i32* %max_imgpel_value527, align 4
  %cmp528 = icmp sgt i32 %add526, %357
  br i1 %cmp528, label %cond.true.530, label %cond.false.532

cond.true.530:                                    ; preds = %cond.false.505
  %358 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value531 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %358, i32 0, i32 155
  %359 = load i32, i32* %max_imgpel_value531, align 4
  br label %cond.end.554

cond.false.532:                                   ; preds = %cond.false.505
  %360 = load i16, i16* %weightSpic, align 2
  %conv533 = sext i16 %360 to i32
  %361 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %362 = load i16**, i16*** %ref1_pic, align 8
  %363 = load i16, i16* %sy, align 2
  %conv534 = sext i16 %363 to i32
  %364 = load i16, i16* %sx0, align 2
  %conv535 = sext i16 %364 to i32
  %add536 = add nsw i32 %conv535, 8
  %365 = load i32, i32* %img_height, align 4
  %366 = load i32, i32* %img_width, align 4
  %call537 = call zeroext i16 %361(i16** %362, i32 %conv534, i32 %add536, i32 %365, i32 %366)
  %conv538 = zext i16 %call537 to i32
  %mul539 = mul nsw i32 %conv533, %conv538
  %367 = load i16, i16* %weightRpic, align 2
  %conv540 = sext i16 %367 to i32
  %368 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %369 = load i16**, i16*** %ref2_pic, align 8
  %370 = load i16, i16* %ry, align 2
  %conv541 = sext i16 %370 to i32
  %371 = load i16, i16* %rx0, align 2
  %conv542 = sext i16 %371 to i32
  %add543 = add nsw i32 %conv542, 8
  %372 = load i32, i32* %img_height, align 4
  %373 = load i32, i32* %img_width, align 4
  %call544 = call zeroext i16 %368(i16** %369, i32 %conv541, i32 %add543, i32 %372, i32 %373)
  %conv545 = zext i16 %call544 to i32
  %mul546 = mul nsw i32 %conv540, %conv545
  %add547 = add nsw i32 %mul539, %mul546
  %374 = load i32, i32* @wp_luma_round, align 4
  %mul548 = mul nsw i32 2, %374
  %add549 = add nsw i32 %add547, %mul548
  %375 = load i32, i32* @luma_log_weight_denom, align 4
  %add550 = add nsw i32 %375, 1
  %shr551 = ashr i32 %add549, %add550
  %376 = load i16, i16* %offsetBi, align 2
  %conv552 = sext i16 %376 to i32
  %add553 = add nsw i32 %shr551, %conv552
  br label %cond.end.554

cond.end.554:                                     ; preds = %cond.false.532, %cond.true.530
  %cond555 = phi i32 [ %359, %cond.true.530 ], [ %add553, %cond.false.532 ]
  br label %cond.end.556

cond.end.556:                                     ; preds = %cond.end.554, %cond.true.504
  %cond557 = phi i32 [ 0, %cond.true.504 ], [ %cond555, %cond.end.554 ]
  store i32 %cond557, i32* %weightedpel, align 4
  %377 = load i16, i16* %x0, align 2
  %conv558 = sext i16 %377 to i32
  %add559 = add nsw i32 %conv558, 2
  %idxprom560 = sext i32 %add559 to i64
  %378 = load i16*, i16** %orig_line, align 8
  %arrayidx561 = getelementptr inbounds i16, i16* %378, i64 %idxprom560
  %379 = load i16, i16* %arrayidx561, align 2
  %conv562 = zext i16 %379 to i32
  %380 = load i32, i32* %weightedpel, align 4
  %sub563 = sub nsw i32 %conv562, %380
  %381 = load i32*, i32** %d, align 8
  %incdec.ptr564 = getelementptr inbounds i32, i32* %381, i32 1
  store i32* %incdec.ptr564, i32** %d, align 8
  store i32 %sub563, i32* %381, align 4
  %382 = load i16, i16* %weightSpic, align 2
  %conv565 = sext i16 %382 to i32
  %383 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %384 = load i16**, i16*** %ref1_pic, align 8
  %385 = load i16, i16* %sy, align 2
  %conv566 = sext i16 %385 to i32
  %386 = load i16, i16* %sx0, align 2
  %conv567 = sext i16 %386 to i32
  %add568 = add nsw i32 %conv567, 12
  %387 = load i32, i32* %img_height, align 4
  %388 = load i32, i32* %img_width, align 4
  %call569 = call zeroext i16 %383(i16** %384, i32 %conv566, i32 %add568, i32 %387, i32 %388)
  %conv570 = zext i16 %call569 to i32
  %mul571 = mul nsw i32 %conv565, %conv570
  %389 = load i16, i16* %weightRpic, align 2
  %conv572 = sext i16 %389 to i32
  %390 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %391 = load i16**, i16*** %ref2_pic, align 8
  %392 = load i16, i16* %ry, align 2
  %conv573 = sext i16 %392 to i32
  %393 = load i16, i16* %rx0, align 2
  %conv574 = sext i16 %393 to i32
  %add575 = add nsw i32 %conv574, 12
  %394 = load i32, i32* %img_height, align 4
  %395 = load i32, i32* %img_width, align 4
  %call576 = call zeroext i16 %390(i16** %391, i32 %conv573, i32 %add575, i32 %394, i32 %395)
  %conv577 = zext i16 %call576 to i32
  %mul578 = mul nsw i32 %conv572, %conv577
  %add579 = add nsw i32 %mul571, %mul578
  %396 = load i32, i32* @wp_luma_round, align 4
  %mul580 = mul nsw i32 2, %396
  %add581 = add nsw i32 %add579, %mul580
  %397 = load i32, i32* @luma_log_weight_denom, align 4
  %add582 = add nsw i32 %397, 1
  %shr583 = ashr i32 %add581, %add582
  %398 = load i16, i16* %offsetBi, align 2
  %conv584 = sext i16 %398 to i32
  %add585 = add nsw i32 %shr583, %conv584
  %cmp586 = icmp slt i32 %add585, 0
  br i1 %cmp586, label %cond.true.588, label %cond.false.589

cond.true.588:                                    ; preds = %cond.end.556
  br label %cond.end.640

cond.false.589:                                   ; preds = %cond.end.556
  %399 = load i16, i16* %weightSpic, align 2
  %conv590 = sext i16 %399 to i32
  %400 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %401 = load i16**, i16*** %ref1_pic, align 8
  %402 = load i16, i16* %sy, align 2
  %conv591 = sext i16 %402 to i32
  %403 = load i16, i16* %sx0, align 2
  %conv592 = sext i16 %403 to i32
  %add593 = add nsw i32 %conv592, 12
  %404 = load i32, i32* %img_height, align 4
  %405 = load i32, i32* %img_width, align 4
  %call594 = call zeroext i16 %400(i16** %401, i32 %conv591, i32 %add593, i32 %404, i32 %405)
  %conv595 = zext i16 %call594 to i32
  %mul596 = mul nsw i32 %conv590, %conv595
  %406 = load i16, i16* %weightRpic, align 2
  %conv597 = sext i16 %406 to i32
  %407 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %408 = load i16**, i16*** %ref2_pic, align 8
  %409 = load i16, i16* %ry, align 2
  %conv598 = sext i16 %409 to i32
  %410 = load i16, i16* %rx0, align 2
  %conv599 = sext i16 %410 to i32
  %add600 = add nsw i32 %conv599, 12
  %411 = load i32, i32* %img_height, align 4
  %412 = load i32, i32* %img_width, align 4
  %call601 = call zeroext i16 %407(i16** %408, i32 %conv598, i32 %add600, i32 %411, i32 %412)
  %conv602 = zext i16 %call601 to i32
  %mul603 = mul nsw i32 %conv597, %conv602
  %add604 = add nsw i32 %mul596, %mul603
  %413 = load i32, i32* @wp_luma_round, align 4
  %mul605 = mul nsw i32 2, %413
  %add606 = add nsw i32 %add604, %mul605
  %414 = load i32, i32* @luma_log_weight_denom, align 4
  %add607 = add nsw i32 %414, 1
  %shr608 = ashr i32 %add606, %add607
  %415 = load i16, i16* %offsetBi, align 2
  %conv609 = sext i16 %415 to i32
  %add610 = add nsw i32 %shr608, %conv609
  %416 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value611 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %416, i32 0, i32 155
  %417 = load i32, i32* %max_imgpel_value611, align 4
  %cmp612 = icmp sgt i32 %add610, %417
  br i1 %cmp612, label %cond.true.614, label %cond.false.616

cond.true.614:                                    ; preds = %cond.false.589
  %418 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value615 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %418, i32 0, i32 155
  %419 = load i32, i32* %max_imgpel_value615, align 4
  br label %cond.end.638

cond.false.616:                                   ; preds = %cond.false.589
  %420 = load i16, i16* %weightSpic, align 2
  %conv617 = sext i16 %420 to i32
  %421 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %422 = load i16**, i16*** %ref1_pic, align 8
  %423 = load i16, i16* %sy, align 2
  %conv618 = sext i16 %423 to i32
  %424 = load i16, i16* %sx0, align 2
  %conv619 = sext i16 %424 to i32
  %add620 = add nsw i32 %conv619, 12
  %425 = load i32, i32* %img_height, align 4
  %426 = load i32, i32* %img_width, align 4
  %call621 = call zeroext i16 %421(i16** %422, i32 %conv618, i32 %add620, i32 %425, i32 %426)
  %conv622 = zext i16 %call621 to i32
  %mul623 = mul nsw i32 %conv617, %conv622
  %427 = load i16, i16* %weightRpic, align 2
  %conv624 = sext i16 %427 to i32
  %428 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %429 = load i16**, i16*** %ref2_pic, align 8
  %430 = load i16, i16* %ry, align 2
  %conv625 = sext i16 %430 to i32
  %431 = load i16, i16* %rx0, align 2
  %conv626 = sext i16 %431 to i32
  %add627 = add nsw i32 %conv626, 12
  %432 = load i32, i32* %img_height, align 4
  %433 = load i32, i32* %img_width, align 4
  %call628 = call zeroext i16 %428(i16** %429, i32 %conv625, i32 %add627, i32 %432, i32 %433)
  %conv629 = zext i16 %call628 to i32
  %mul630 = mul nsw i32 %conv624, %conv629
  %add631 = add nsw i32 %mul623, %mul630
  %434 = load i32, i32* @wp_luma_round, align 4
  %mul632 = mul nsw i32 2, %434
  %add633 = add nsw i32 %add631, %mul632
  %435 = load i32, i32* @luma_log_weight_denom, align 4
  %add634 = add nsw i32 %435, 1
  %shr635 = ashr i32 %add633, %add634
  %436 = load i16, i16* %offsetBi, align 2
  %conv636 = sext i16 %436 to i32
  %add637 = add nsw i32 %shr635, %conv636
  br label %cond.end.638

cond.end.638:                                     ; preds = %cond.false.616, %cond.true.614
  %cond639 = phi i32 [ %419, %cond.true.614 ], [ %add637, %cond.false.616 ]
  br label %cond.end.640

cond.end.640:                                     ; preds = %cond.end.638, %cond.true.588
  %cond641 = phi i32 [ 0, %cond.true.588 ], [ %cond639, %cond.end.638 ]
  store i32 %cond641, i32* %weightedpel, align 4
  %437 = load i16, i16* %x0, align 2
  %conv642 = sext i16 %437 to i32
  %add643 = add nsw i32 %conv642, 3
  %idxprom644 = sext i32 %add643 to i64
  %438 = load i16*, i16** %orig_line, align 8
  %arrayidx645 = getelementptr inbounds i16, i16* %438, i64 %idxprom644
  %439 = load i16, i16* %arrayidx645, align 2
  %conv646 = zext i16 %439 to i32
  %440 = load i32, i32* %weightedpel, align 4
  %sub647 = sub nsw i32 %conv646, %440
  %441 = load i32*, i32** %d, align 8
  %incdec.ptr648 = getelementptr inbounds i32, i32* %441, i32 1
  store i32* %incdec.ptr648, i32** %d, align 8
  store i32 %sub647, i32* %441, align 4
  %442 = load i16, i16* %sy0, align 2
  %conv649 = sext i16 %442 to i32
  %add650 = add nsw i32 %conv649, 4
  %conv651 = trunc i32 %add650 to i16
  store i16 %conv651, i16* %sy, align 2
  %443 = load i16, i16* %ry0, align 2
  %conv652 = sext i16 %443 to i32
  %add653 = add nsw i32 %conv652, 4
  %conv654 = trunc i32 %add653 to i16
  store i16 %conv654, i16* %ry, align 2
  %444 = load i16, i16* %y0, align 2
  %conv655 = sext i16 %444 to i32
  %add656 = add nsw i32 %conv655, 1
  %idxprom657 = sext i32 %add656 to i64
  %445 = load i16**, i16*** %orig_pic.addr, align 8
  %arrayidx658 = getelementptr inbounds i16*, i16** %445, i64 %idxprom657
  %446 = load i16*, i16** %arrayidx658, align 8
  store i16* %446, i16** %orig_line, align 8
  %447 = load i16, i16* %weightSpic, align 2
  %conv659 = sext i16 %447 to i32
  %448 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %449 = load i16**, i16*** %ref1_pic, align 8
  %450 = load i16, i16* %sy, align 2
  %conv660 = sext i16 %450 to i32
  %451 = load i16, i16* %sx0, align 2
  %conv661 = sext i16 %451 to i32
  %452 = load i32, i32* %img_height, align 4
  %453 = load i32, i32* %img_width, align 4
  %call662 = call zeroext i16 %448(i16** %449, i32 %conv660, i32 %conv661, i32 %452, i32 %453)
  %conv663 = zext i16 %call662 to i32
  %mul664 = mul nsw i32 %conv659, %conv663
  %454 = load i16, i16* %weightRpic, align 2
  %conv665 = sext i16 %454 to i32
  %455 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %456 = load i16**, i16*** %ref2_pic, align 8
  %457 = load i16, i16* %ry, align 2
  %conv666 = sext i16 %457 to i32
  %458 = load i16, i16* %rx0, align 2
  %conv667 = sext i16 %458 to i32
  %459 = load i32, i32* %img_height, align 4
  %460 = load i32, i32* %img_width, align 4
  %call668 = call zeroext i16 %455(i16** %456, i32 %conv666, i32 %conv667, i32 %459, i32 %460)
  %conv669 = zext i16 %call668 to i32
  %mul670 = mul nsw i32 %conv665, %conv669
  %add671 = add nsw i32 %mul664, %mul670
  %461 = load i32, i32* @wp_luma_round, align 4
  %mul672 = mul nsw i32 2, %461
  %add673 = add nsw i32 %add671, %mul672
  %462 = load i32, i32* @luma_log_weight_denom, align 4
  %add674 = add nsw i32 %462, 1
  %shr675 = ashr i32 %add673, %add674
  %463 = load i16, i16* %offsetBi, align 2
  %conv676 = sext i16 %463 to i32
  %add677 = add nsw i32 %shr675, %conv676
  %cmp678 = icmp slt i32 %add677, 0
  br i1 %cmp678, label %cond.true.680, label %cond.false.681

cond.true.680:                                    ; preds = %cond.end.640
  br label %cond.end.728

cond.false.681:                                   ; preds = %cond.end.640
  %464 = load i16, i16* %weightSpic, align 2
  %conv682 = sext i16 %464 to i32
  %465 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %466 = load i16**, i16*** %ref1_pic, align 8
  %467 = load i16, i16* %sy, align 2
  %conv683 = sext i16 %467 to i32
  %468 = load i16, i16* %sx0, align 2
  %conv684 = sext i16 %468 to i32
  %469 = load i32, i32* %img_height, align 4
  %470 = load i32, i32* %img_width, align 4
  %call685 = call zeroext i16 %465(i16** %466, i32 %conv683, i32 %conv684, i32 %469, i32 %470)
  %conv686 = zext i16 %call685 to i32
  %mul687 = mul nsw i32 %conv682, %conv686
  %471 = load i16, i16* %weightRpic, align 2
  %conv688 = sext i16 %471 to i32
  %472 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %473 = load i16**, i16*** %ref2_pic, align 8
  %474 = load i16, i16* %ry, align 2
  %conv689 = sext i16 %474 to i32
  %475 = load i16, i16* %rx0, align 2
  %conv690 = sext i16 %475 to i32
  %476 = load i32, i32* %img_height, align 4
  %477 = load i32, i32* %img_width, align 4
  %call691 = call zeroext i16 %472(i16** %473, i32 %conv689, i32 %conv690, i32 %476, i32 %477)
  %conv692 = zext i16 %call691 to i32
  %mul693 = mul nsw i32 %conv688, %conv692
  %add694 = add nsw i32 %mul687, %mul693
  %478 = load i32, i32* @wp_luma_round, align 4
  %mul695 = mul nsw i32 2, %478
  %add696 = add nsw i32 %add694, %mul695
  %479 = load i32, i32* @luma_log_weight_denom, align 4
  %add697 = add nsw i32 %479, 1
  %shr698 = ashr i32 %add696, %add697
  %480 = load i16, i16* %offsetBi, align 2
  %conv699 = sext i16 %480 to i32
  %add700 = add nsw i32 %shr698, %conv699
  %481 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value701 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %481, i32 0, i32 155
  %482 = load i32, i32* %max_imgpel_value701, align 4
  %cmp702 = icmp sgt i32 %add700, %482
  br i1 %cmp702, label %cond.true.704, label %cond.false.706

cond.true.704:                                    ; preds = %cond.false.681
  %483 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value705 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %483, i32 0, i32 155
  %484 = load i32, i32* %max_imgpel_value705, align 4
  br label %cond.end.726

cond.false.706:                                   ; preds = %cond.false.681
  %485 = load i16, i16* %weightSpic, align 2
  %conv707 = sext i16 %485 to i32
  %486 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %487 = load i16**, i16*** %ref1_pic, align 8
  %488 = load i16, i16* %sy, align 2
  %conv708 = sext i16 %488 to i32
  %489 = load i16, i16* %sx0, align 2
  %conv709 = sext i16 %489 to i32
  %490 = load i32, i32* %img_height, align 4
  %491 = load i32, i32* %img_width, align 4
  %call710 = call zeroext i16 %486(i16** %487, i32 %conv708, i32 %conv709, i32 %490, i32 %491)
  %conv711 = zext i16 %call710 to i32
  %mul712 = mul nsw i32 %conv707, %conv711
  %492 = load i16, i16* %weightRpic, align 2
  %conv713 = sext i16 %492 to i32
  %493 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %494 = load i16**, i16*** %ref2_pic, align 8
  %495 = load i16, i16* %ry, align 2
  %conv714 = sext i16 %495 to i32
  %496 = load i16, i16* %rx0, align 2
  %conv715 = sext i16 %496 to i32
  %497 = load i32, i32* %img_height, align 4
  %498 = load i32, i32* %img_width, align 4
  %call716 = call zeroext i16 %493(i16** %494, i32 %conv714, i32 %conv715, i32 %497, i32 %498)
  %conv717 = zext i16 %call716 to i32
  %mul718 = mul nsw i32 %conv713, %conv717
  %add719 = add nsw i32 %mul712, %mul718
  %499 = load i32, i32* @wp_luma_round, align 4
  %mul720 = mul nsw i32 2, %499
  %add721 = add nsw i32 %add719, %mul720
  %500 = load i32, i32* @luma_log_weight_denom, align 4
  %add722 = add nsw i32 %500, 1
  %shr723 = ashr i32 %add721, %add722
  %501 = load i16, i16* %offsetBi, align 2
  %conv724 = sext i16 %501 to i32
  %add725 = add nsw i32 %shr723, %conv724
  br label %cond.end.726

cond.end.726:                                     ; preds = %cond.false.706, %cond.true.704
  %cond727 = phi i32 [ %484, %cond.true.704 ], [ %add725, %cond.false.706 ]
  br label %cond.end.728

cond.end.728:                                     ; preds = %cond.end.726, %cond.true.680
  %cond729 = phi i32 [ 0, %cond.true.680 ], [ %cond727, %cond.end.726 ]
  store i32 %cond729, i32* %weightedpel, align 4
  %502 = load i16, i16* %x0, align 2
  %idxprom730 = sext i16 %502 to i64
  %503 = load i16*, i16** %orig_line, align 8
  %arrayidx731 = getelementptr inbounds i16, i16* %503, i64 %idxprom730
  %504 = load i16, i16* %arrayidx731, align 2
  %conv732 = zext i16 %504 to i32
  %505 = load i32, i32* %weightedpel, align 4
  %sub733 = sub nsw i32 %conv732, %505
  %506 = load i32*, i32** %d, align 8
  %incdec.ptr734 = getelementptr inbounds i32, i32* %506, i32 1
  store i32* %incdec.ptr734, i32** %d, align 8
  store i32 %sub733, i32* %506, align 4
  %507 = load i16, i16* %weightSpic, align 2
  %conv735 = sext i16 %507 to i32
  %508 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %509 = load i16**, i16*** %ref1_pic, align 8
  %510 = load i16, i16* %sy, align 2
  %conv736 = sext i16 %510 to i32
  %511 = load i16, i16* %sx0, align 2
  %conv737 = sext i16 %511 to i32
  %add738 = add nsw i32 %conv737, 4
  %512 = load i32, i32* %img_height, align 4
  %513 = load i32, i32* %img_width, align 4
  %call739 = call zeroext i16 %508(i16** %509, i32 %conv736, i32 %add738, i32 %512, i32 %513)
  %conv740 = zext i16 %call739 to i32
  %mul741 = mul nsw i32 %conv735, %conv740
  %514 = load i16, i16* %weightRpic, align 2
  %conv742 = sext i16 %514 to i32
  %515 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %516 = load i16**, i16*** %ref2_pic, align 8
  %517 = load i16, i16* %ry, align 2
  %conv743 = sext i16 %517 to i32
  %518 = load i16, i16* %rx0, align 2
  %conv744 = sext i16 %518 to i32
  %add745 = add nsw i32 %conv744, 4
  %519 = load i32, i32* %img_height, align 4
  %520 = load i32, i32* %img_width, align 4
  %call746 = call zeroext i16 %515(i16** %516, i32 %conv743, i32 %add745, i32 %519, i32 %520)
  %conv747 = zext i16 %call746 to i32
  %mul748 = mul nsw i32 %conv742, %conv747
  %add749 = add nsw i32 %mul741, %mul748
  %521 = load i32, i32* @wp_luma_round, align 4
  %mul750 = mul nsw i32 2, %521
  %add751 = add nsw i32 %add749, %mul750
  %522 = load i32, i32* @luma_log_weight_denom, align 4
  %add752 = add nsw i32 %522, 1
  %shr753 = ashr i32 %add751, %add752
  %523 = load i16, i16* %offsetBi, align 2
  %conv754 = sext i16 %523 to i32
  %add755 = add nsw i32 %shr753, %conv754
  %cmp756 = icmp slt i32 %add755, 0
  br i1 %cmp756, label %cond.true.758, label %cond.false.759

cond.true.758:                                    ; preds = %cond.end.728
  br label %cond.end.810

cond.false.759:                                   ; preds = %cond.end.728
  %524 = load i16, i16* %weightSpic, align 2
  %conv760 = sext i16 %524 to i32
  %525 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %526 = load i16**, i16*** %ref1_pic, align 8
  %527 = load i16, i16* %sy, align 2
  %conv761 = sext i16 %527 to i32
  %528 = load i16, i16* %sx0, align 2
  %conv762 = sext i16 %528 to i32
  %add763 = add nsw i32 %conv762, 4
  %529 = load i32, i32* %img_height, align 4
  %530 = load i32, i32* %img_width, align 4
  %call764 = call zeroext i16 %525(i16** %526, i32 %conv761, i32 %add763, i32 %529, i32 %530)
  %conv765 = zext i16 %call764 to i32
  %mul766 = mul nsw i32 %conv760, %conv765
  %531 = load i16, i16* %weightRpic, align 2
  %conv767 = sext i16 %531 to i32
  %532 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %533 = load i16**, i16*** %ref2_pic, align 8
  %534 = load i16, i16* %ry, align 2
  %conv768 = sext i16 %534 to i32
  %535 = load i16, i16* %rx0, align 2
  %conv769 = sext i16 %535 to i32
  %add770 = add nsw i32 %conv769, 4
  %536 = load i32, i32* %img_height, align 4
  %537 = load i32, i32* %img_width, align 4
  %call771 = call zeroext i16 %532(i16** %533, i32 %conv768, i32 %add770, i32 %536, i32 %537)
  %conv772 = zext i16 %call771 to i32
  %mul773 = mul nsw i32 %conv767, %conv772
  %add774 = add nsw i32 %mul766, %mul773
  %538 = load i32, i32* @wp_luma_round, align 4
  %mul775 = mul nsw i32 2, %538
  %add776 = add nsw i32 %add774, %mul775
  %539 = load i32, i32* @luma_log_weight_denom, align 4
  %add777 = add nsw i32 %539, 1
  %shr778 = ashr i32 %add776, %add777
  %540 = load i16, i16* %offsetBi, align 2
  %conv779 = sext i16 %540 to i32
  %add780 = add nsw i32 %shr778, %conv779
  %541 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value781 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %541, i32 0, i32 155
  %542 = load i32, i32* %max_imgpel_value781, align 4
  %cmp782 = icmp sgt i32 %add780, %542
  br i1 %cmp782, label %cond.true.784, label %cond.false.786

cond.true.784:                                    ; preds = %cond.false.759
  %543 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value785 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %543, i32 0, i32 155
  %544 = load i32, i32* %max_imgpel_value785, align 4
  br label %cond.end.808

cond.false.786:                                   ; preds = %cond.false.759
  %545 = load i16, i16* %weightSpic, align 2
  %conv787 = sext i16 %545 to i32
  %546 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %547 = load i16**, i16*** %ref1_pic, align 8
  %548 = load i16, i16* %sy, align 2
  %conv788 = sext i16 %548 to i32
  %549 = load i16, i16* %sx0, align 2
  %conv789 = sext i16 %549 to i32
  %add790 = add nsw i32 %conv789, 4
  %550 = load i32, i32* %img_height, align 4
  %551 = load i32, i32* %img_width, align 4
  %call791 = call zeroext i16 %546(i16** %547, i32 %conv788, i32 %add790, i32 %550, i32 %551)
  %conv792 = zext i16 %call791 to i32
  %mul793 = mul nsw i32 %conv787, %conv792
  %552 = load i16, i16* %weightRpic, align 2
  %conv794 = sext i16 %552 to i32
  %553 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %554 = load i16**, i16*** %ref2_pic, align 8
  %555 = load i16, i16* %ry, align 2
  %conv795 = sext i16 %555 to i32
  %556 = load i16, i16* %rx0, align 2
  %conv796 = sext i16 %556 to i32
  %add797 = add nsw i32 %conv796, 4
  %557 = load i32, i32* %img_height, align 4
  %558 = load i32, i32* %img_width, align 4
  %call798 = call zeroext i16 %553(i16** %554, i32 %conv795, i32 %add797, i32 %557, i32 %558)
  %conv799 = zext i16 %call798 to i32
  %mul800 = mul nsw i32 %conv794, %conv799
  %add801 = add nsw i32 %mul793, %mul800
  %559 = load i32, i32* @wp_luma_round, align 4
  %mul802 = mul nsw i32 2, %559
  %add803 = add nsw i32 %add801, %mul802
  %560 = load i32, i32* @luma_log_weight_denom, align 4
  %add804 = add nsw i32 %560, 1
  %shr805 = ashr i32 %add803, %add804
  %561 = load i16, i16* %offsetBi, align 2
  %conv806 = sext i16 %561 to i32
  %add807 = add nsw i32 %shr805, %conv806
  br label %cond.end.808

cond.end.808:                                     ; preds = %cond.false.786, %cond.true.784
  %cond809 = phi i32 [ %544, %cond.true.784 ], [ %add807, %cond.false.786 ]
  br label %cond.end.810

cond.end.810:                                     ; preds = %cond.end.808, %cond.true.758
  %cond811 = phi i32 [ 0, %cond.true.758 ], [ %cond809, %cond.end.808 ]
  store i32 %cond811, i32* %weightedpel, align 4
  %562 = load i16, i16* %x0, align 2
  %conv812 = sext i16 %562 to i32
  %add813 = add nsw i32 %conv812, 1
  %idxprom814 = sext i32 %add813 to i64
  %563 = load i16*, i16** %orig_line, align 8
  %arrayidx815 = getelementptr inbounds i16, i16* %563, i64 %idxprom814
  %564 = load i16, i16* %arrayidx815, align 2
  %conv816 = zext i16 %564 to i32
  %565 = load i32, i32* %weightedpel, align 4
  %sub817 = sub nsw i32 %conv816, %565
  %566 = load i32*, i32** %d, align 8
  %incdec.ptr818 = getelementptr inbounds i32, i32* %566, i32 1
  store i32* %incdec.ptr818, i32** %d, align 8
  store i32 %sub817, i32* %566, align 4
  %567 = load i16, i16* %weightSpic, align 2
  %conv819 = sext i16 %567 to i32
  %568 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %569 = load i16**, i16*** %ref1_pic, align 8
  %570 = load i16, i16* %sy, align 2
  %conv820 = sext i16 %570 to i32
  %571 = load i16, i16* %sx0, align 2
  %conv821 = sext i16 %571 to i32
  %add822 = add nsw i32 %conv821, 8
  %572 = load i32, i32* %img_height, align 4
  %573 = load i32, i32* %img_width, align 4
  %call823 = call zeroext i16 %568(i16** %569, i32 %conv820, i32 %add822, i32 %572, i32 %573)
  %conv824 = zext i16 %call823 to i32
  %mul825 = mul nsw i32 %conv819, %conv824
  %574 = load i16, i16* %weightRpic, align 2
  %conv826 = sext i16 %574 to i32
  %575 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %576 = load i16**, i16*** %ref2_pic, align 8
  %577 = load i16, i16* %ry, align 2
  %conv827 = sext i16 %577 to i32
  %578 = load i16, i16* %rx0, align 2
  %conv828 = sext i16 %578 to i32
  %add829 = add nsw i32 %conv828, 8
  %579 = load i32, i32* %img_height, align 4
  %580 = load i32, i32* %img_width, align 4
  %call830 = call zeroext i16 %575(i16** %576, i32 %conv827, i32 %add829, i32 %579, i32 %580)
  %conv831 = zext i16 %call830 to i32
  %mul832 = mul nsw i32 %conv826, %conv831
  %add833 = add nsw i32 %mul825, %mul832
  %581 = load i32, i32* @wp_luma_round, align 4
  %mul834 = mul nsw i32 2, %581
  %add835 = add nsw i32 %add833, %mul834
  %582 = load i32, i32* @luma_log_weight_denom, align 4
  %add836 = add nsw i32 %582, 1
  %shr837 = ashr i32 %add835, %add836
  %583 = load i16, i16* %offsetBi, align 2
  %conv838 = sext i16 %583 to i32
  %add839 = add nsw i32 %shr837, %conv838
  %cmp840 = icmp slt i32 %add839, 0
  br i1 %cmp840, label %cond.true.842, label %cond.false.843

cond.true.842:                                    ; preds = %cond.end.810
  br label %cond.end.894

cond.false.843:                                   ; preds = %cond.end.810
  %584 = load i16, i16* %weightSpic, align 2
  %conv844 = sext i16 %584 to i32
  %585 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %586 = load i16**, i16*** %ref1_pic, align 8
  %587 = load i16, i16* %sy, align 2
  %conv845 = sext i16 %587 to i32
  %588 = load i16, i16* %sx0, align 2
  %conv846 = sext i16 %588 to i32
  %add847 = add nsw i32 %conv846, 8
  %589 = load i32, i32* %img_height, align 4
  %590 = load i32, i32* %img_width, align 4
  %call848 = call zeroext i16 %585(i16** %586, i32 %conv845, i32 %add847, i32 %589, i32 %590)
  %conv849 = zext i16 %call848 to i32
  %mul850 = mul nsw i32 %conv844, %conv849
  %591 = load i16, i16* %weightRpic, align 2
  %conv851 = sext i16 %591 to i32
  %592 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %593 = load i16**, i16*** %ref2_pic, align 8
  %594 = load i16, i16* %ry, align 2
  %conv852 = sext i16 %594 to i32
  %595 = load i16, i16* %rx0, align 2
  %conv853 = sext i16 %595 to i32
  %add854 = add nsw i32 %conv853, 8
  %596 = load i32, i32* %img_height, align 4
  %597 = load i32, i32* %img_width, align 4
  %call855 = call zeroext i16 %592(i16** %593, i32 %conv852, i32 %add854, i32 %596, i32 %597)
  %conv856 = zext i16 %call855 to i32
  %mul857 = mul nsw i32 %conv851, %conv856
  %add858 = add nsw i32 %mul850, %mul857
  %598 = load i32, i32* @wp_luma_round, align 4
  %mul859 = mul nsw i32 2, %598
  %add860 = add nsw i32 %add858, %mul859
  %599 = load i32, i32* @luma_log_weight_denom, align 4
  %add861 = add nsw i32 %599, 1
  %shr862 = ashr i32 %add860, %add861
  %600 = load i16, i16* %offsetBi, align 2
  %conv863 = sext i16 %600 to i32
  %add864 = add nsw i32 %shr862, %conv863
  %601 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value865 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %601, i32 0, i32 155
  %602 = load i32, i32* %max_imgpel_value865, align 4
  %cmp866 = icmp sgt i32 %add864, %602
  br i1 %cmp866, label %cond.true.868, label %cond.false.870

cond.true.868:                                    ; preds = %cond.false.843
  %603 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value869 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %603, i32 0, i32 155
  %604 = load i32, i32* %max_imgpel_value869, align 4
  br label %cond.end.892

cond.false.870:                                   ; preds = %cond.false.843
  %605 = load i16, i16* %weightSpic, align 2
  %conv871 = sext i16 %605 to i32
  %606 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %607 = load i16**, i16*** %ref1_pic, align 8
  %608 = load i16, i16* %sy, align 2
  %conv872 = sext i16 %608 to i32
  %609 = load i16, i16* %sx0, align 2
  %conv873 = sext i16 %609 to i32
  %add874 = add nsw i32 %conv873, 8
  %610 = load i32, i32* %img_height, align 4
  %611 = load i32, i32* %img_width, align 4
  %call875 = call zeroext i16 %606(i16** %607, i32 %conv872, i32 %add874, i32 %610, i32 %611)
  %conv876 = zext i16 %call875 to i32
  %mul877 = mul nsw i32 %conv871, %conv876
  %612 = load i16, i16* %weightRpic, align 2
  %conv878 = sext i16 %612 to i32
  %613 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %614 = load i16**, i16*** %ref2_pic, align 8
  %615 = load i16, i16* %ry, align 2
  %conv879 = sext i16 %615 to i32
  %616 = load i16, i16* %rx0, align 2
  %conv880 = sext i16 %616 to i32
  %add881 = add nsw i32 %conv880, 8
  %617 = load i32, i32* %img_height, align 4
  %618 = load i32, i32* %img_width, align 4
  %call882 = call zeroext i16 %613(i16** %614, i32 %conv879, i32 %add881, i32 %617, i32 %618)
  %conv883 = zext i16 %call882 to i32
  %mul884 = mul nsw i32 %conv878, %conv883
  %add885 = add nsw i32 %mul877, %mul884
  %619 = load i32, i32* @wp_luma_round, align 4
  %mul886 = mul nsw i32 2, %619
  %add887 = add nsw i32 %add885, %mul886
  %620 = load i32, i32* @luma_log_weight_denom, align 4
  %add888 = add nsw i32 %620, 1
  %shr889 = ashr i32 %add887, %add888
  %621 = load i16, i16* %offsetBi, align 2
  %conv890 = sext i16 %621 to i32
  %add891 = add nsw i32 %shr889, %conv890
  br label %cond.end.892

cond.end.892:                                     ; preds = %cond.false.870, %cond.true.868
  %cond893 = phi i32 [ %604, %cond.true.868 ], [ %add891, %cond.false.870 ]
  br label %cond.end.894

cond.end.894:                                     ; preds = %cond.end.892, %cond.true.842
  %cond895 = phi i32 [ 0, %cond.true.842 ], [ %cond893, %cond.end.892 ]
  store i32 %cond895, i32* %weightedpel, align 4
  %622 = load i16, i16* %x0, align 2
  %conv896 = sext i16 %622 to i32
  %add897 = add nsw i32 %conv896, 2
  %idxprom898 = sext i32 %add897 to i64
  %623 = load i16*, i16** %orig_line, align 8
  %arrayidx899 = getelementptr inbounds i16, i16* %623, i64 %idxprom898
  %624 = load i16, i16* %arrayidx899, align 2
  %conv900 = zext i16 %624 to i32
  %625 = load i32, i32* %weightedpel, align 4
  %sub901 = sub nsw i32 %conv900, %625
  %626 = load i32*, i32** %d, align 8
  %incdec.ptr902 = getelementptr inbounds i32, i32* %626, i32 1
  store i32* %incdec.ptr902, i32** %d, align 8
  store i32 %sub901, i32* %626, align 4
  %627 = load i16, i16* %weightSpic, align 2
  %conv903 = sext i16 %627 to i32
  %628 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %629 = load i16**, i16*** %ref1_pic, align 8
  %630 = load i16, i16* %sy, align 2
  %conv904 = sext i16 %630 to i32
  %631 = load i16, i16* %sx0, align 2
  %conv905 = sext i16 %631 to i32
  %add906 = add nsw i32 %conv905, 12
  %632 = load i32, i32* %img_height, align 4
  %633 = load i32, i32* %img_width, align 4
  %call907 = call zeroext i16 %628(i16** %629, i32 %conv904, i32 %add906, i32 %632, i32 %633)
  %conv908 = zext i16 %call907 to i32
  %mul909 = mul nsw i32 %conv903, %conv908
  %634 = load i16, i16* %weightRpic, align 2
  %conv910 = sext i16 %634 to i32
  %635 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %636 = load i16**, i16*** %ref2_pic, align 8
  %637 = load i16, i16* %ry, align 2
  %conv911 = sext i16 %637 to i32
  %638 = load i16, i16* %rx0, align 2
  %conv912 = sext i16 %638 to i32
  %add913 = add nsw i32 %conv912, 12
  %639 = load i32, i32* %img_height, align 4
  %640 = load i32, i32* %img_width, align 4
  %call914 = call zeroext i16 %635(i16** %636, i32 %conv911, i32 %add913, i32 %639, i32 %640)
  %conv915 = zext i16 %call914 to i32
  %mul916 = mul nsw i32 %conv910, %conv915
  %add917 = add nsw i32 %mul909, %mul916
  %641 = load i32, i32* @wp_luma_round, align 4
  %mul918 = mul nsw i32 2, %641
  %add919 = add nsw i32 %add917, %mul918
  %642 = load i32, i32* @luma_log_weight_denom, align 4
  %add920 = add nsw i32 %642, 1
  %shr921 = ashr i32 %add919, %add920
  %643 = load i16, i16* %offsetBi, align 2
  %conv922 = sext i16 %643 to i32
  %add923 = add nsw i32 %shr921, %conv922
  %cmp924 = icmp slt i32 %add923, 0
  br i1 %cmp924, label %cond.true.926, label %cond.false.927

cond.true.926:                                    ; preds = %cond.end.894
  br label %cond.end.978

cond.false.927:                                   ; preds = %cond.end.894
  %644 = load i16, i16* %weightSpic, align 2
  %conv928 = sext i16 %644 to i32
  %645 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %646 = load i16**, i16*** %ref1_pic, align 8
  %647 = load i16, i16* %sy, align 2
  %conv929 = sext i16 %647 to i32
  %648 = load i16, i16* %sx0, align 2
  %conv930 = sext i16 %648 to i32
  %add931 = add nsw i32 %conv930, 12
  %649 = load i32, i32* %img_height, align 4
  %650 = load i32, i32* %img_width, align 4
  %call932 = call zeroext i16 %645(i16** %646, i32 %conv929, i32 %add931, i32 %649, i32 %650)
  %conv933 = zext i16 %call932 to i32
  %mul934 = mul nsw i32 %conv928, %conv933
  %651 = load i16, i16* %weightRpic, align 2
  %conv935 = sext i16 %651 to i32
  %652 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %653 = load i16**, i16*** %ref2_pic, align 8
  %654 = load i16, i16* %ry, align 2
  %conv936 = sext i16 %654 to i32
  %655 = load i16, i16* %rx0, align 2
  %conv937 = sext i16 %655 to i32
  %add938 = add nsw i32 %conv937, 12
  %656 = load i32, i32* %img_height, align 4
  %657 = load i32, i32* %img_width, align 4
  %call939 = call zeroext i16 %652(i16** %653, i32 %conv936, i32 %add938, i32 %656, i32 %657)
  %conv940 = zext i16 %call939 to i32
  %mul941 = mul nsw i32 %conv935, %conv940
  %add942 = add nsw i32 %mul934, %mul941
  %658 = load i32, i32* @wp_luma_round, align 4
  %mul943 = mul nsw i32 2, %658
  %add944 = add nsw i32 %add942, %mul943
  %659 = load i32, i32* @luma_log_weight_denom, align 4
  %add945 = add nsw i32 %659, 1
  %shr946 = ashr i32 %add944, %add945
  %660 = load i16, i16* %offsetBi, align 2
  %conv947 = sext i16 %660 to i32
  %add948 = add nsw i32 %shr946, %conv947
  %661 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value949 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %661, i32 0, i32 155
  %662 = load i32, i32* %max_imgpel_value949, align 4
  %cmp950 = icmp sgt i32 %add948, %662
  br i1 %cmp950, label %cond.true.952, label %cond.false.954

cond.true.952:                                    ; preds = %cond.false.927
  %663 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value953 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %663, i32 0, i32 155
  %664 = load i32, i32* %max_imgpel_value953, align 4
  br label %cond.end.976

cond.false.954:                                   ; preds = %cond.false.927
  %665 = load i16, i16* %weightSpic, align 2
  %conv955 = sext i16 %665 to i32
  %666 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %667 = load i16**, i16*** %ref1_pic, align 8
  %668 = load i16, i16* %sy, align 2
  %conv956 = sext i16 %668 to i32
  %669 = load i16, i16* %sx0, align 2
  %conv957 = sext i16 %669 to i32
  %add958 = add nsw i32 %conv957, 12
  %670 = load i32, i32* %img_height, align 4
  %671 = load i32, i32* %img_width, align 4
  %call959 = call zeroext i16 %666(i16** %667, i32 %conv956, i32 %add958, i32 %670, i32 %671)
  %conv960 = zext i16 %call959 to i32
  %mul961 = mul nsw i32 %conv955, %conv960
  %672 = load i16, i16* %weightRpic, align 2
  %conv962 = sext i16 %672 to i32
  %673 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %674 = load i16**, i16*** %ref2_pic, align 8
  %675 = load i16, i16* %ry, align 2
  %conv963 = sext i16 %675 to i32
  %676 = load i16, i16* %rx0, align 2
  %conv964 = sext i16 %676 to i32
  %add965 = add nsw i32 %conv964, 12
  %677 = load i32, i32* %img_height, align 4
  %678 = load i32, i32* %img_width, align 4
  %call966 = call zeroext i16 %673(i16** %674, i32 %conv963, i32 %add965, i32 %677, i32 %678)
  %conv967 = zext i16 %call966 to i32
  %mul968 = mul nsw i32 %conv962, %conv967
  %add969 = add nsw i32 %mul961, %mul968
  %679 = load i32, i32* @wp_luma_round, align 4
  %mul970 = mul nsw i32 2, %679
  %add971 = add nsw i32 %add969, %mul970
  %680 = load i32, i32* @luma_log_weight_denom, align 4
  %add972 = add nsw i32 %680, 1
  %shr973 = ashr i32 %add971, %add972
  %681 = load i16, i16* %offsetBi, align 2
  %conv974 = sext i16 %681 to i32
  %add975 = add nsw i32 %shr973, %conv974
  br label %cond.end.976

cond.end.976:                                     ; preds = %cond.false.954, %cond.true.952
  %cond977 = phi i32 [ %664, %cond.true.952 ], [ %add975, %cond.false.954 ]
  br label %cond.end.978

cond.end.978:                                     ; preds = %cond.end.976, %cond.true.926
  %cond979 = phi i32 [ 0, %cond.true.926 ], [ %cond977, %cond.end.976 ]
  store i32 %cond979, i32* %weightedpel, align 4
  %682 = load i16, i16* %x0, align 2
  %conv980 = sext i16 %682 to i32
  %add981 = add nsw i32 %conv980, 3
  %idxprom982 = sext i32 %add981 to i64
  %683 = load i16*, i16** %orig_line, align 8
  %arrayidx983 = getelementptr inbounds i16, i16* %683, i64 %idxprom982
  %684 = load i16, i16* %arrayidx983, align 2
  %conv984 = zext i16 %684 to i32
  %685 = load i32, i32* %weightedpel, align 4
  %sub985 = sub nsw i32 %conv984, %685
  %686 = load i32*, i32** %d, align 8
  %incdec.ptr986 = getelementptr inbounds i32, i32* %686, i32 1
  store i32* %incdec.ptr986, i32** %d, align 8
  store i32 %sub985, i32* %686, align 4
  %687 = load i16, i16* %sy0, align 2
  %conv987 = sext i16 %687 to i32
  %add988 = add nsw i32 %conv987, 8
  %conv989 = trunc i32 %add988 to i16
  store i16 %conv989, i16* %sy, align 2
  %688 = load i16, i16* %ry0, align 2
  %conv990 = sext i16 %688 to i32
  %add991 = add nsw i32 %conv990, 8
  %conv992 = trunc i32 %add991 to i16
  store i16 %conv992, i16* %ry, align 2
  %689 = load i16, i16* %y0, align 2
  %conv993 = sext i16 %689 to i32
  %add994 = add nsw i32 %conv993, 2
  %idxprom995 = sext i32 %add994 to i64
  %690 = load i16**, i16*** %orig_pic.addr, align 8
  %arrayidx996 = getelementptr inbounds i16*, i16** %690, i64 %idxprom995
  %691 = load i16*, i16** %arrayidx996, align 8
  store i16* %691, i16** %orig_line, align 8
  %692 = load i16, i16* %weightSpic, align 2
  %conv997 = sext i16 %692 to i32
  %693 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %694 = load i16**, i16*** %ref1_pic, align 8
  %695 = load i16, i16* %sy, align 2
  %conv998 = sext i16 %695 to i32
  %696 = load i16, i16* %sx0, align 2
  %conv999 = sext i16 %696 to i32
  %697 = load i32, i32* %img_height, align 4
  %698 = load i32, i32* %img_width, align 4
  %call1000 = call zeroext i16 %693(i16** %694, i32 %conv998, i32 %conv999, i32 %697, i32 %698)
  %conv1001 = zext i16 %call1000 to i32
  %mul1002 = mul nsw i32 %conv997, %conv1001
  %699 = load i16, i16* %weightRpic, align 2
  %conv1003 = sext i16 %699 to i32
  %700 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %701 = load i16**, i16*** %ref2_pic, align 8
  %702 = load i16, i16* %ry, align 2
  %conv1004 = sext i16 %702 to i32
  %703 = load i16, i16* %rx0, align 2
  %conv1005 = sext i16 %703 to i32
  %704 = load i32, i32* %img_height, align 4
  %705 = load i32, i32* %img_width, align 4
  %call1006 = call zeroext i16 %700(i16** %701, i32 %conv1004, i32 %conv1005, i32 %704, i32 %705)
  %conv1007 = zext i16 %call1006 to i32
  %mul1008 = mul nsw i32 %conv1003, %conv1007
  %add1009 = add nsw i32 %mul1002, %mul1008
  %706 = load i32, i32* @wp_luma_round, align 4
  %mul1010 = mul nsw i32 2, %706
  %add1011 = add nsw i32 %add1009, %mul1010
  %707 = load i32, i32* @luma_log_weight_denom, align 4
  %add1012 = add nsw i32 %707, 1
  %shr1013 = ashr i32 %add1011, %add1012
  %708 = load i16, i16* %offsetBi, align 2
  %conv1014 = sext i16 %708 to i32
  %add1015 = add nsw i32 %shr1013, %conv1014
  %cmp1016 = icmp slt i32 %add1015, 0
  br i1 %cmp1016, label %cond.true.1018, label %cond.false.1019

cond.true.1018:                                   ; preds = %cond.end.978
  br label %cond.end.1066

cond.false.1019:                                  ; preds = %cond.end.978
  %709 = load i16, i16* %weightSpic, align 2
  %conv1020 = sext i16 %709 to i32
  %710 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %711 = load i16**, i16*** %ref1_pic, align 8
  %712 = load i16, i16* %sy, align 2
  %conv1021 = sext i16 %712 to i32
  %713 = load i16, i16* %sx0, align 2
  %conv1022 = sext i16 %713 to i32
  %714 = load i32, i32* %img_height, align 4
  %715 = load i32, i32* %img_width, align 4
  %call1023 = call zeroext i16 %710(i16** %711, i32 %conv1021, i32 %conv1022, i32 %714, i32 %715)
  %conv1024 = zext i16 %call1023 to i32
  %mul1025 = mul nsw i32 %conv1020, %conv1024
  %716 = load i16, i16* %weightRpic, align 2
  %conv1026 = sext i16 %716 to i32
  %717 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %718 = load i16**, i16*** %ref2_pic, align 8
  %719 = load i16, i16* %ry, align 2
  %conv1027 = sext i16 %719 to i32
  %720 = load i16, i16* %rx0, align 2
  %conv1028 = sext i16 %720 to i32
  %721 = load i32, i32* %img_height, align 4
  %722 = load i32, i32* %img_width, align 4
  %call1029 = call zeroext i16 %717(i16** %718, i32 %conv1027, i32 %conv1028, i32 %721, i32 %722)
  %conv1030 = zext i16 %call1029 to i32
  %mul1031 = mul nsw i32 %conv1026, %conv1030
  %add1032 = add nsw i32 %mul1025, %mul1031
  %723 = load i32, i32* @wp_luma_round, align 4
  %mul1033 = mul nsw i32 2, %723
  %add1034 = add nsw i32 %add1032, %mul1033
  %724 = load i32, i32* @luma_log_weight_denom, align 4
  %add1035 = add nsw i32 %724, 1
  %shr1036 = ashr i32 %add1034, %add1035
  %725 = load i16, i16* %offsetBi, align 2
  %conv1037 = sext i16 %725 to i32
  %add1038 = add nsw i32 %shr1036, %conv1037
  %726 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value1039 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %726, i32 0, i32 155
  %727 = load i32, i32* %max_imgpel_value1039, align 4
  %cmp1040 = icmp sgt i32 %add1038, %727
  br i1 %cmp1040, label %cond.true.1042, label %cond.false.1044

cond.true.1042:                                   ; preds = %cond.false.1019
  %728 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value1043 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %728, i32 0, i32 155
  %729 = load i32, i32* %max_imgpel_value1043, align 4
  br label %cond.end.1064

cond.false.1044:                                  ; preds = %cond.false.1019
  %730 = load i16, i16* %weightSpic, align 2
  %conv1045 = sext i16 %730 to i32
  %731 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %732 = load i16**, i16*** %ref1_pic, align 8
  %733 = load i16, i16* %sy, align 2
  %conv1046 = sext i16 %733 to i32
  %734 = load i16, i16* %sx0, align 2
  %conv1047 = sext i16 %734 to i32
  %735 = load i32, i32* %img_height, align 4
  %736 = load i32, i32* %img_width, align 4
  %call1048 = call zeroext i16 %731(i16** %732, i32 %conv1046, i32 %conv1047, i32 %735, i32 %736)
  %conv1049 = zext i16 %call1048 to i32
  %mul1050 = mul nsw i32 %conv1045, %conv1049
  %737 = load i16, i16* %weightRpic, align 2
  %conv1051 = sext i16 %737 to i32
  %738 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %739 = load i16**, i16*** %ref2_pic, align 8
  %740 = load i16, i16* %ry, align 2
  %conv1052 = sext i16 %740 to i32
  %741 = load i16, i16* %rx0, align 2
  %conv1053 = sext i16 %741 to i32
  %742 = load i32, i32* %img_height, align 4
  %743 = load i32, i32* %img_width, align 4
  %call1054 = call zeroext i16 %738(i16** %739, i32 %conv1052, i32 %conv1053, i32 %742, i32 %743)
  %conv1055 = zext i16 %call1054 to i32
  %mul1056 = mul nsw i32 %conv1051, %conv1055
  %add1057 = add nsw i32 %mul1050, %mul1056
  %744 = load i32, i32* @wp_luma_round, align 4
  %mul1058 = mul nsw i32 2, %744
  %add1059 = add nsw i32 %add1057, %mul1058
  %745 = load i32, i32* @luma_log_weight_denom, align 4
  %add1060 = add nsw i32 %745, 1
  %shr1061 = ashr i32 %add1059, %add1060
  %746 = load i16, i16* %offsetBi, align 2
  %conv1062 = sext i16 %746 to i32
  %add1063 = add nsw i32 %shr1061, %conv1062
  br label %cond.end.1064

cond.end.1064:                                    ; preds = %cond.false.1044, %cond.true.1042
  %cond1065 = phi i32 [ %729, %cond.true.1042 ], [ %add1063, %cond.false.1044 ]
  br label %cond.end.1066

cond.end.1066:                                    ; preds = %cond.end.1064, %cond.true.1018
  %cond1067 = phi i32 [ 0, %cond.true.1018 ], [ %cond1065, %cond.end.1064 ]
  store i32 %cond1067, i32* %weightedpel, align 4
  %747 = load i16, i16* %x0, align 2
  %idxprom1068 = sext i16 %747 to i64
  %748 = load i16*, i16** %orig_line, align 8
  %arrayidx1069 = getelementptr inbounds i16, i16* %748, i64 %idxprom1068
  %749 = load i16, i16* %arrayidx1069, align 2
  %conv1070 = zext i16 %749 to i32
  %750 = load i32, i32* %weightedpel, align 4
  %sub1071 = sub nsw i32 %conv1070, %750
  %751 = load i32*, i32** %d, align 8
  %incdec.ptr1072 = getelementptr inbounds i32, i32* %751, i32 1
  store i32* %incdec.ptr1072, i32** %d, align 8
  store i32 %sub1071, i32* %751, align 4
  %752 = load i16, i16* %weightSpic, align 2
  %conv1073 = sext i16 %752 to i32
  %753 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %754 = load i16**, i16*** %ref1_pic, align 8
  %755 = load i16, i16* %sy, align 2
  %conv1074 = sext i16 %755 to i32
  %756 = load i16, i16* %sx0, align 2
  %conv1075 = sext i16 %756 to i32
  %add1076 = add nsw i32 %conv1075, 4
  %757 = load i32, i32* %img_height, align 4
  %758 = load i32, i32* %img_width, align 4
  %call1077 = call zeroext i16 %753(i16** %754, i32 %conv1074, i32 %add1076, i32 %757, i32 %758)
  %conv1078 = zext i16 %call1077 to i32
  %mul1079 = mul nsw i32 %conv1073, %conv1078
  %759 = load i16, i16* %weightRpic, align 2
  %conv1080 = sext i16 %759 to i32
  %760 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %761 = load i16**, i16*** %ref2_pic, align 8
  %762 = load i16, i16* %ry, align 2
  %conv1081 = sext i16 %762 to i32
  %763 = load i16, i16* %rx0, align 2
  %conv1082 = sext i16 %763 to i32
  %add1083 = add nsw i32 %conv1082, 4
  %764 = load i32, i32* %img_height, align 4
  %765 = load i32, i32* %img_width, align 4
  %call1084 = call zeroext i16 %760(i16** %761, i32 %conv1081, i32 %add1083, i32 %764, i32 %765)
  %conv1085 = zext i16 %call1084 to i32
  %mul1086 = mul nsw i32 %conv1080, %conv1085
  %add1087 = add nsw i32 %mul1079, %mul1086
  %766 = load i32, i32* @wp_luma_round, align 4
  %mul1088 = mul nsw i32 2, %766
  %add1089 = add nsw i32 %add1087, %mul1088
  %767 = load i32, i32* @luma_log_weight_denom, align 4
  %add1090 = add nsw i32 %767, 1
  %shr1091 = ashr i32 %add1089, %add1090
  %768 = load i16, i16* %offsetBi, align 2
  %conv1092 = sext i16 %768 to i32
  %add1093 = add nsw i32 %shr1091, %conv1092
  %cmp1094 = icmp slt i32 %add1093, 0
  br i1 %cmp1094, label %cond.true.1096, label %cond.false.1097

cond.true.1096:                                   ; preds = %cond.end.1066
  br label %cond.end.1148

cond.false.1097:                                  ; preds = %cond.end.1066
  %769 = load i16, i16* %weightSpic, align 2
  %conv1098 = sext i16 %769 to i32
  %770 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %771 = load i16**, i16*** %ref1_pic, align 8
  %772 = load i16, i16* %sy, align 2
  %conv1099 = sext i16 %772 to i32
  %773 = load i16, i16* %sx0, align 2
  %conv1100 = sext i16 %773 to i32
  %add1101 = add nsw i32 %conv1100, 4
  %774 = load i32, i32* %img_height, align 4
  %775 = load i32, i32* %img_width, align 4
  %call1102 = call zeroext i16 %770(i16** %771, i32 %conv1099, i32 %add1101, i32 %774, i32 %775)
  %conv1103 = zext i16 %call1102 to i32
  %mul1104 = mul nsw i32 %conv1098, %conv1103
  %776 = load i16, i16* %weightRpic, align 2
  %conv1105 = sext i16 %776 to i32
  %777 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %778 = load i16**, i16*** %ref2_pic, align 8
  %779 = load i16, i16* %ry, align 2
  %conv1106 = sext i16 %779 to i32
  %780 = load i16, i16* %rx0, align 2
  %conv1107 = sext i16 %780 to i32
  %add1108 = add nsw i32 %conv1107, 4
  %781 = load i32, i32* %img_height, align 4
  %782 = load i32, i32* %img_width, align 4
  %call1109 = call zeroext i16 %777(i16** %778, i32 %conv1106, i32 %add1108, i32 %781, i32 %782)
  %conv1110 = zext i16 %call1109 to i32
  %mul1111 = mul nsw i32 %conv1105, %conv1110
  %add1112 = add nsw i32 %mul1104, %mul1111
  %783 = load i32, i32* @wp_luma_round, align 4
  %mul1113 = mul nsw i32 2, %783
  %add1114 = add nsw i32 %add1112, %mul1113
  %784 = load i32, i32* @luma_log_weight_denom, align 4
  %add1115 = add nsw i32 %784, 1
  %shr1116 = ashr i32 %add1114, %add1115
  %785 = load i16, i16* %offsetBi, align 2
  %conv1117 = sext i16 %785 to i32
  %add1118 = add nsw i32 %shr1116, %conv1117
  %786 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value1119 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %786, i32 0, i32 155
  %787 = load i32, i32* %max_imgpel_value1119, align 4
  %cmp1120 = icmp sgt i32 %add1118, %787
  br i1 %cmp1120, label %cond.true.1122, label %cond.false.1124

cond.true.1122:                                   ; preds = %cond.false.1097
  %788 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value1123 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %788, i32 0, i32 155
  %789 = load i32, i32* %max_imgpel_value1123, align 4
  br label %cond.end.1146

cond.false.1124:                                  ; preds = %cond.false.1097
  %790 = load i16, i16* %weightSpic, align 2
  %conv1125 = sext i16 %790 to i32
  %791 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %792 = load i16**, i16*** %ref1_pic, align 8
  %793 = load i16, i16* %sy, align 2
  %conv1126 = sext i16 %793 to i32
  %794 = load i16, i16* %sx0, align 2
  %conv1127 = sext i16 %794 to i32
  %add1128 = add nsw i32 %conv1127, 4
  %795 = load i32, i32* %img_height, align 4
  %796 = load i32, i32* %img_width, align 4
  %call1129 = call zeroext i16 %791(i16** %792, i32 %conv1126, i32 %add1128, i32 %795, i32 %796)
  %conv1130 = zext i16 %call1129 to i32
  %mul1131 = mul nsw i32 %conv1125, %conv1130
  %797 = load i16, i16* %weightRpic, align 2
  %conv1132 = sext i16 %797 to i32
  %798 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %799 = load i16**, i16*** %ref2_pic, align 8
  %800 = load i16, i16* %ry, align 2
  %conv1133 = sext i16 %800 to i32
  %801 = load i16, i16* %rx0, align 2
  %conv1134 = sext i16 %801 to i32
  %add1135 = add nsw i32 %conv1134, 4
  %802 = load i32, i32* %img_height, align 4
  %803 = load i32, i32* %img_width, align 4
  %call1136 = call zeroext i16 %798(i16** %799, i32 %conv1133, i32 %add1135, i32 %802, i32 %803)
  %conv1137 = zext i16 %call1136 to i32
  %mul1138 = mul nsw i32 %conv1132, %conv1137
  %add1139 = add nsw i32 %mul1131, %mul1138
  %804 = load i32, i32* @wp_luma_round, align 4
  %mul1140 = mul nsw i32 2, %804
  %add1141 = add nsw i32 %add1139, %mul1140
  %805 = load i32, i32* @luma_log_weight_denom, align 4
  %add1142 = add nsw i32 %805, 1
  %shr1143 = ashr i32 %add1141, %add1142
  %806 = load i16, i16* %offsetBi, align 2
  %conv1144 = sext i16 %806 to i32
  %add1145 = add nsw i32 %shr1143, %conv1144
  br label %cond.end.1146

cond.end.1146:                                    ; preds = %cond.false.1124, %cond.true.1122
  %cond1147 = phi i32 [ %789, %cond.true.1122 ], [ %add1145, %cond.false.1124 ]
  br label %cond.end.1148

cond.end.1148:                                    ; preds = %cond.end.1146, %cond.true.1096
  %cond1149 = phi i32 [ 0, %cond.true.1096 ], [ %cond1147, %cond.end.1146 ]
  store i32 %cond1149, i32* %weightedpel, align 4
  %807 = load i16, i16* %x0, align 2
  %conv1150 = sext i16 %807 to i32
  %add1151 = add nsw i32 %conv1150, 1
  %idxprom1152 = sext i32 %add1151 to i64
  %808 = load i16*, i16** %orig_line, align 8
  %arrayidx1153 = getelementptr inbounds i16, i16* %808, i64 %idxprom1152
  %809 = load i16, i16* %arrayidx1153, align 2
  %conv1154 = zext i16 %809 to i32
  %810 = load i32, i32* %weightedpel, align 4
  %sub1155 = sub nsw i32 %conv1154, %810
  %811 = load i32*, i32** %d, align 8
  %incdec.ptr1156 = getelementptr inbounds i32, i32* %811, i32 1
  store i32* %incdec.ptr1156, i32** %d, align 8
  store i32 %sub1155, i32* %811, align 4
  %812 = load i16, i16* %weightSpic, align 2
  %conv1157 = sext i16 %812 to i32
  %813 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %814 = load i16**, i16*** %ref1_pic, align 8
  %815 = load i16, i16* %sy, align 2
  %conv1158 = sext i16 %815 to i32
  %816 = load i16, i16* %sx0, align 2
  %conv1159 = sext i16 %816 to i32
  %add1160 = add nsw i32 %conv1159, 8
  %817 = load i32, i32* %img_height, align 4
  %818 = load i32, i32* %img_width, align 4
  %call1161 = call zeroext i16 %813(i16** %814, i32 %conv1158, i32 %add1160, i32 %817, i32 %818)
  %conv1162 = zext i16 %call1161 to i32
  %mul1163 = mul nsw i32 %conv1157, %conv1162
  %819 = load i16, i16* %weightRpic, align 2
  %conv1164 = sext i16 %819 to i32
  %820 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %821 = load i16**, i16*** %ref2_pic, align 8
  %822 = load i16, i16* %ry, align 2
  %conv1165 = sext i16 %822 to i32
  %823 = load i16, i16* %rx0, align 2
  %conv1166 = sext i16 %823 to i32
  %add1167 = add nsw i32 %conv1166, 8
  %824 = load i32, i32* %img_height, align 4
  %825 = load i32, i32* %img_width, align 4
  %call1168 = call zeroext i16 %820(i16** %821, i32 %conv1165, i32 %add1167, i32 %824, i32 %825)
  %conv1169 = zext i16 %call1168 to i32
  %mul1170 = mul nsw i32 %conv1164, %conv1169
  %add1171 = add nsw i32 %mul1163, %mul1170
  %826 = load i32, i32* @wp_luma_round, align 4
  %mul1172 = mul nsw i32 2, %826
  %add1173 = add nsw i32 %add1171, %mul1172
  %827 = load i32, i32* @luma_log_weight_denom, align 4
  %add1174 = add nsw i32 %827, 1
  %shr1175 = ashr i32 %add1173, %add1174
  %828 = load i16, i16* %offsetBi, align 2
  %conv1176 = sext i16 %828 to i32
  %add1177 = add nsw i32 %shr1175, %conv1176
  %cmp1178 = icmp slt i32 %add1177, 0
  br i1 %cmp1178, label %cond.true.1180, label %cond.false.1181

cond.true.1180:                                   ; preds = %cond.end.1148
  br label %cond.end.1232

cond.false.1181:                                  ; preds = %cond.end.1148
  %829 = load i16, i16* %weightSpic, align 2
  %conv1182 = sext i16 %829 to i32
  %830 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %831 = load i16**, i16*** %ref1_pic, align 8
  %832 = load i16, i16* %sy, align 2
  %conv1183 = sext i16 %832 to i32
  %833 = load i16, i16* %sx0, align 2
  %conv1184 = sext i16 %833 to i32
  %add1185 = add nsw i32 %conv1184, 8
  %834 = load i32, i32* %img_height, align 4
  %835 = load i32, i32* %img_width, align 4
  %call1186 = call zeroext i16 %830(i16** %831, i32 %conv1183, i32 %add1185, i32 %834, i32 %835)
  %conv1187 = zext i16 %call1186 to i32
  %mul1188 = mul nsw i32 %conv1182, %conv1187
  %836 = load i16, i16* %weightRpic, align 2
  %conv1189 = sext i16 %836 to i32
  %837 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %838 = load i16**, i16*** %ref2_pic, align 8
  %839 = load i16, i16* %ry, align 2
  %conv1190 = sext i16 %839 to i32
  %840 = load i16, i16* %rx0, align 2
  %conv1191 = sext i16 %840 to i32
  %add1192 = add nsw i32 %conv1191, 8
  %841 = load i32, i32* %img_height, align 4
  %842 = load i32, i32* %img_width, align 4
  %call1193 = call zeroext i16 %837(i16** %838, i32 %conv1190, i32 %add1192, i32 %841, i32 %842)
  %conv1194 = zext i16 %call1193 to i32
  %mul1195 = mul nsw i32 %conv1189, %conv1194
  %add1196 = add nsw i32 %mul1188, %mul1195
  %843 = load i32, i32* @wp_luma_round, align 4
  %mul1197 = mul nsw i32 2, %843
  %add1198 = add nsw i32 %add1196, %mul1197
  %844 = load i32, i32* @luma_log_weight_denom, align 4
  %add1199 = add nsw i32 %844, 1
  %shr1200 = ashr i32 %add1198, %add1199
  %845 = load i16, i16* %offsetBi, align 2
  %conv1201 = sext i16 %845 to i32
  %add1202 = add nsw i32 %shr1200, %conv1201
  %846 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value1203 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %846, i32 0, i32 155
  %847 = load i32, i32* %max_imgpel_value1203, align 4
  %cmp1204 = icmp sgt i32 %add1202, %847
  br i1 %cmp1204, label %cond.true.1206, label %cond.false.1208

cond.true.1206:                                   ; preds = %cond.false.1181
  %848 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value1207 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %848, i32 0, i32 155
  %849 = load i32, i32* %max_imgpel_value1207, align 4
  br label %cond.end.1230

cond.false.1208:                                  ; preds = %cond.false.1181
  %850 = load i16, i16* %weightSpic, align 2
  %conv1209 = sext i16 %850 to i32
  %851 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %852 = load i16**, i16*** %ref1_pic, align 8
  %853 = load i16, i16* %sy, align 2
  %conv1210 = sext i16 %853 to i32
  %854 = load i16, i16* %sx0, align 2
  %conv1211 = sext i16 %854 to i32
  %add1212 = add nsw i32 %conv1211, 8
  %855 = load i32, i32* %img_height, align 4
  %856 = load i32, i32* %img_width, align 4
  %call1213 = call zeroext i16 %851(i16** %852, i32 %conv1210, i32 %add1212, i32 %855, i32 %856)
  %conv1214 = zext i16 %call1213 to i32
  %mul1215 = mul nsw i32 %conv1209, %conv1214
  %857 = load i16, i16* %weightRpic, align 2
  %conv1216 = sext i16 %857 to i32
  %858 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %859 = load i16**, i16*** %ref2_pic, align 8
  %860 = load i16, i16* %ry, align 2
  %conv1217 = sext i16 %860 to i32
  %861 = load i16, i16* %rx0, align 2
  %conv1218 = sext i16 %861 to i32
  %add1219 = add nsw i32 %conv1218, 8
  %862 = load i32, i32* %img_height, align 4
  %863 = load i32, i32* %img_width, align 4
  %call1220 = call zeroext i16 %858(i16** %859, i32 %conv1217, i32 %add1219, i32 %862, i32 %863)
  %conv1221 = zext i16 %call1220 to i32
  %mul1222 = mul nsw i32 %conv1216, %conv1221
  %add1223 = add nsw i32 %mul1215, %mul1222
  %864 = load i32, i32* @wp_luma_round, align 4
  %mul1224 = mul nsw i32 2, %864
  %add1225 = add nsw i32 %add1223, %mul1224
  %865 = load i32, i32* @luma_log_weight_denom, align 4
  %add1226 = add nsw i32 %865, 1
  %shr1227 = ashr i32 %add1225, %add1226
  %866 = load i16, i16* %offsetBi, align 2
  %conv1228 = sext i16 %866 to i32
  %add1229 = add nsw i32 %shr1227, %conv1228
  br label %cond.end.1230

cond.end.1230:                                    ; preds = %cond.false.1208, %cond.true.1206
  %cond1231 = phi i32 [ %849, %cond.true.1206 ], [ %add1229, %cond.false.1208 ]
  br label %cond.end.1232

cond.end.1232:                                    ; preds = %cond.end.1230, %cond.true.1180
  %cond1233 = phi i32 [ 0, %cond.true.1180 ], [ %cond1231, %cond.end.1230 ]
  store i32 %cond1233, i32* %weightedpel, align 4
  %867 = load i16, i16* %x0, align 2
  %conv1234 = sext i16 %867 to i32
  %add1235 = add nsw i32 %conv1234, 2
  %idxprom1236 = sext i32 %add1235 to i64
  %868 = load i16*, i16** %orig_line, align 8
  %arrayidx1237 = getelementptr inbounds i16, i16* %868, i64 %idxprom1236
  %869 = load i16, i16* %arrayidx1237, align 2
  %conv1238 = zext i16 %869 to i32
  %870 = load i32, i32* %weightedpel, align 4
  %sub1239 = sub nsw i32 %conv1238, %870
  %871 = load i32*, i32** %d, align 8
  %incdec.ptr1240 = getelementptr inbounds i32, i32* %871, i32 1
  store i32* %incdec.ptr1240, i32** %d, align 8
  store i32 %sub1239, i32* %871, align 4
  %872 = load i16, i16* %weightSpic, align 2
  %conv1241 = sext i16 %872 to i32
  %873 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %874 = load i16**, i16*** %ref1_pic, align 8
  %875 = load i16, i16* %sy, align 2
  %conv1242 = sext i16 %875 to i32
  %876 = load i16, i16* %sx0, align 2
  %conv1243 = sext i16 %876 to i32
  %add1244 = add nsw i32 %conv1243, 12
  %877 = load i32, i32* %img_height, align 4
  %878 = load i32, i32* %img_width, align 4
  %call1245 = call zeroext i16 %873(i16** %874, i32 %conv1242, i32 %add1244, i32 %877, i32 %878)
  %conv1246 = zext i16 %call1245 to i32
  %mul1247 = mul nsw i32 %conv1241, %conv1246
  %879 = load i16, i16* %weightRpic, align 2
  %conv1248 = sext i16 %879 to i32
  %880 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %881 = load i16**, i16*** %ref2_pic, align 8
  %882 = load i16, i16* %ry, align 2
  %conv1249 = sext i16 %882 to i32
  %883 = load i16, i16* %rx0, align 2
  %conv1250 = sext i16 %883 to i32
  %add1251 = add nsw i32 %conv1250, 12
  %884 = load i32, i32* %img_height, align 4
  %885 = load i32, i32* %img_width, align 4
  %call1252 = call zeroext i16 %880(i16** %881, i32 %conv1249, i32 %add1251, i32 %884, i32 %885)
  %conv1253 = zext i16 %call1252 to i32
  %mul1254 = mul nsw i32 %conv1248, %conv1253
  %add1255 = add nsw i32 %mul1247, %mul1254
  %886 = load i32, i32* @wp_luma_round, align 4
  %mul1256 = mul nsw i32 2, %886
  %add1257 = add nsw i32 %add1255, %mul1256
  %887 = load i32, i32* @luma_log_weight_denom, align 4
  %add1258 = add nsw i32 %887, 1
  %shr1259 = ashr i32 %add1257, %add1258
  %888 = load i16, i16* %offsetBi, align 2
  %conv1260 = sext i16 %888 to i32
  %add1261 = add nsw i32 %shr1259, %conv1260
  %cmp1262 = icmp slt i32 %add1261, 0
  br i1 %cmp1262, label %cond.true.1264, label %cond.false.1265

cond.true.1264:                                   ; preds = %cond.end.1232
  br label %cond.end.1316

cond.false.1265:                                  ; preds = %cond.end.1232
  %889 = load i16, i16* %weightSpic, align 2
  %conv1266 = sext i16 %889 to i32
  %890 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %891 = load i16**, i16*** %ref1_pic, align 8
  %892 = load i16, i16* %sy, align 2
  %conv1267 = sext i16 %892 to i32
  %893 = load i16, i16* %sx0, align 2
  %conv1268 = sext i16 %893 to i32
  %add1269 = add nsw i32 %conv1268, 12
  %894 = load i32, i32* %img_height, align 4
  %895 = load i32, i32* %img_width, align 4
  %call1270 = call zeroext i16 %890(i16** %891, i32 %conv1267, i32 %add1269, i32 %894, i32 %895)
  %conv1271 = zext i16 %call1270 to i32
  %mul1272 = mul nsw i32 %conv1266, %conv1271
  %896 = load i16, i16* %weightRpic, align 2
  %conv1273 = sext i16 %896 to i32
  %897 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %898 = load i16**, i16*** %ref2_pic, align 8
  %899 = load i16, i16* %ry, align 2
  %conv1274 = sext i16 %899 to i32
  %900 = load i16, i16* %rx0, align 2
  %conv1275 = sext i16 %900 to i32
  %add1276 = add nsw i32 %conv1275, 12
  %901 = load i32, i32* %img_height, align 4
  %902 = load i32, i32* %img_width, align 4
  %call1277 = call zeroext i16 %897(i16** %898, i32 %conv1274, i32 %add1276, i32 %901, i32 %902)
  %conv1278 = zext i16 %call1277 to i32
  %mul1279 = mul nsw i32 %conv1273, %conv1278
  %add1280 = add nsw i32 %mul1272, %mul1279
  %903 = load i32, i32* @wp_luma_round, align 4
  %mul1281 = mul nsw i32 2, %903
  %add1282 = add nsw i32 %add1280, %mul1281
  %904 = load i32, i32* @luma_log_weight_denom, align 4
  %add1283 = add nsw i32 %904, 1
  %shr1284 = ashr i32 %add1282, %add1283
  %905 = load i16, i16* %offsetBi, align 2
  %conv1285 = sext i16 %905 to i32
  %add1286 = add nsw i32 %shr1284, %conv1285
  %906 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value1287 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %906, i32 0, i32 155
  %907 = load i32, i32* %max_imgpel_value1287, align 4
  %cmp1288 = icmp sgt i32 %add1286, %907
  br i1 %cmp1288, label %cond.true.1290, label %cond.false.1292

cond.true.1290:                                   ; preds = %cond.false.1265
  %908 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value1291 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %908, i32 0, i32 155
  %909 = load i32, i32* %max_imgpel_value1291, align 4
  br label %cond.end.1314

cond.false.1292:                                  ; preds = %cond.false.1265
  %910 = load i16, i16* %weightSpic, align 2
  %conv1293 = sext i16 %910 to i32
  %911 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %912 = load i16**, i16*** %ref1_pic, align 8
  %913 = load i16, i16* %sy, align 2
  %conv1294 = sext i16 %913 to i32
  %914 = load i16, i16* %sx0, align 2
  %conv1295 = sext i16 %914 to i32
  %add1296 = add nsw i32 %conv1295, 12
  %915 = load i32, i32* %img_height, align 4
  %916 = load i32, i32* %img_width, align 4
  %call1297 = call zeroext i16 %911(i16** %912, i32 %conv1294, i32 %add1296, i32 %915, i32 %916)
  %conv1298 = zext i16 %call1297 to i32
  %mul1299 = mul nsw i32 %conv1293, %conv1298
  %917 = load i16, i16* %weightRpic, align 2
  %conv1300 = sext i16 %917 to i32
  %918 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %919 = load i16**, i16*** %ref2_pic, align 8
  %920 = load i16, i16* %ry, align 2
  %conv1301 = sext i16 %920 to i32
  %921 = load i16, i16* %rx0, align 2
  %conv1302 = sext i16 %921 to i32
  %add1303 = add nsw i32 %conv1302, 12
  %922 = load i32, i32* %img_height, align 4
  %923 = load i32, i32* %img_width, align 4
  %call1304 = call zeroext i16 %918(i16** %919, i32 %conv1301, i32 %add1303, i32 %922, i32 %923)
  %conv1305 = zext i16 %call1304 to i32
  %mul1306 = mul nsw i32 %conv1300, %conv1305
  %add1307 = add nsw i32 %mul1299, %mul1306
  %924 = load i32, i32* @wp_luma_round, align 4
  %mul1308 = mul nsw i32 2, %924
  %add1309 = add nsw i32 %add1307, %mul1308
  %925 = load i32, i32* @luma_log_weight_denom, align 4
  %add1310 = add nsw i32 %925, 1
  %shr1311 = ashr i32 %add1309, %add1310
  %926 = load i16, i16* %offsetBi, align 2
  %conv1312 = sext i16 %926 to i32
  %add1313 = add nsw i32 %shr1311, %conv1312
  br label %cond.end.1314

cond.end.1314:                                    ; preds = %cond.false.1292, %cond.true.1290
  %cond1315 = phi i32 [ %909, %cond.true.1290 ], [ %add1313, %cond.false.1292 ]
  br label %cond.end.1316

cond.end.1316:                                    ; preds = %cond.end.1314, %cond.true.1264
  %cond1317 = phi i32 [ 0, %cond.true.1264 ], [ %cond1315, %cond.end.1314 ]
  store i32 %cond1317, i32* %weightedpel, align 4
  %927 = load i16, i16* %x0, align 2
  %conv1318 = sext i16 %927 to i32
  %add1319 = add nsw i32 %conv1318, 3
  %idxprom1320 = sext i32 %add1319 to i64
  %928 = load i16*, i16** %orig_line, align 8
  %arrayidx1321 = getelementptr inbounds i16, i16* %928, i64 %idxprom1320
  %929 = load i16, i16* %arrayidx1321, align 2
  %conv1322 = zext i16 %929 to i32
  %930 = load i32, i32* %weightedpel, align 4
  %sub1323 = sub nsw i32 %conv1322, %930
  %931 = load i32*, i32** %d, align 8
  %incdec.ptr1324 = getelementptr inbounds i32, i32* %931, i32 1
  store i32* %incdec.ptr1324, i32** %d, align 8
  store i32 %sub1323, i32* %931, align 4
  %932 = load i16, i16* %sy0, align 2
  %conv1325 = sext i16 %932 to i32
  %add1326 = add nsw i32 %conv1325, 12
  %conv1327 = trunc i32 %add1326 to i16
  store i16 %conv1327, i16* %sy, align 2
  %933 = load i16, i16* %ry0, align 2
  %conv1328 = sext i16 %933 to i32
  %add1329 = add nsw i32 %conv1328, 12
  %conv1330 = trunc i32 %add1329 to i16
  store i16 %conv1330, i16* %ry, align 2
  %934 = load i16, i16* %y0, align 2
  %conv1331 = sext i16 %934 to i32
  %add1332 = add nsw i32 %conv1331, 3
  %idxprom1333 = sext i32 %add1332 to i64
  %935 = load i16**, i16*** %orig_pic.addr, align 8
  %arrayidx1334 = getelementptr inbounds i16*, i16** %935, i64 %idxprom1333
  %936 = load i16*, i16** %arrayidx1334, align 8
  store i16* %936, i16** %orig_line, align 8
  %937 = load i16, i16* %weightSpic, align 2
  %conv1335 = sext i16 %937 to i32
  %938 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %939 = load i16**, i16*** %ref1_pic, align 8
  %940 = load i16, i16* %sy, align 2
  %conv1336 = sext i16 %940 to i32
  %941 = load i16, i16* %sx0, align 2
  %conv1337 = sext i16 %941 to i32
  %942 = load i32, i32* %img_height, align 4
  %943 = load i32, i32* %img_width, align 4
  %call1338 = call zeroext i16 %938(i16** %939, i32 %conv1336, i32 %conv1337, i32 %942, i32 %943)
  %conv1339 = zext i16 %call1338 to i32
  %mul1340 = mul nsw i32 %conv1335, %conv1339
  %944 = load i16, i16* %weightRpic, align 2
  %conv1341 = sext i16 %944 to i32
  %945 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %946 = load i16**, i16*** %ref2_pic, align 8
  %947 = load i16, i16* %ry, align 2
  %conv1342 = sext i16 %947 to i32
  %948 = load i16, i16* %rx0, align 2
  %conv1343 = sext i16 %948 to i32
  %949 = load i32, i32* %img_height, align 4
  %950 = load i32, i32* %img_width, align 4
  %call1344 = call zeroext i16 %945(i16** %946, i32 %conv1342, i32 %conv1343, i32 %949, i32 %950)
  %conv1345 = zext i16 %call1344 to i32
  %mul1346 = mul nsw i32 %conv1341, %conv1345
  %add1347 = add nsw i32 %mul1340, %mul1346
  %951 = load i32, i32* @wp_luma_round, align 4
  %mul1348 = mul nsw i32 2, %951
  %add1349 = add nsw i32 %add1347, %mul1348
  %952 = load i32, i32* @luma_log_weight_denom, align 4
  %add1350 = add nsw i32 %952, 1
  %shr1351 = ashr i32 %add1349, %add1350
  %953 = load i16, i16* %offsetBi, align 2
  %conv1352 = sext i16 %953 to i32
  %add1353 = add nsw i32 %shr1351, %conv1352
  %cmp1354 = icmp slt i32 %add1353, 0
  br i1 %cmp1354, label %cond.true.1356, label %cond.false.1357

cond.true.1356:                                   ; preds = %cond.end.1316
  br label %cond.end.1404

cond.false.1357:                                  ; preds = %cond.end.1316
  %954 = load i16, i16* %weightSpic, align 2
  %conv1358 = sext i16 %954 to i32
  %955 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %956 = load i16**, i16*** %ref1_pic, align 8
  %957 = load i16, i16* %sy, align 2
  %conv1359 = sext i16 %957 to i32
  %958 = load i16, i16* %sx0, align 2
  %conv1360 = sext i16 %958 to i32
  %959 = load i32, i32* %img_height, align 4
  %960 = load i32, i32* %img_width, align 4
  %call1361 = call zeroext i16 %955(i16** %956, i32 %conv1359, i32 %conv1360, i32 %959, i32 %960)
  %conv1362 = zext i16 %call1361 to i32
  %mul1363 = mul nsw i32 %conv1358, %conv1362
  %961 = load i16, i16* %weightRpic, align 2
  %conv1364 = sext i16 %961 to i32
  %962 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %963 = load i16**, i16*** %ref2_pic, align 8
  %964 = load i16, i16* %ry, align 2
  %conv1365 = sext i16 %964 to i32
  %965 = load i16, i16* %rx0, align 2
  %conv1366 = sext i16 %965 to i32
  %966 = load i32, i32* %img_height, align 4
  %967 = load i32, i32* %img_width, align 4
  %call1367 = call zeroext i16 %962(i16** %963, i32 %conv1365, i32 %conv1366, i32 %966, i32 %967)
  %conv1368 = zext i16 %call1367 to i32
  %mul1369 = mul nsw i32 %conv1364, %conv1368
  %add1370 = add nsw i32 %mul1363, %mul1369
  %968 = load i32, i32* @wp_luma_round, align 4
  %mul1371 = mul nsw i32 2, %968
  %add1372 = add nsw i32 %add1370, %mul1371
  %969 = load i32, i32* @luma_log_weight_denom, align 4
  %add1373 = add nsw i32 %969, 1
  %shr1374 = ashr i32 %add1372, %add1373
  %970 = load i16, i16* %offsetBi, align 2
  %conv1375 = sext i16 %970 to i32
  %add1376 = add nsw i32 %shr1374, %conv1375
  %971 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value1377 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %971, i32 0, i32 155
  %972 = load i32, i32* %max_imgpel_value1377, align 4
  %cmp1378 = icmp sgt i32 %add1376, %972
  br i1 %cmp1378, label %cond.true.1380, label %cond.false.1382

cond.true.1380:                                   ; preds = %cond.false.1357
  %973 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value1381 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %973, i32 0, i32 155
  %974 = load i32, i32* %max_imgpel_value1381, align 4
  br label %cond.end.1402

cond.false.1382:                                  ; preds = %cond.false.1357
  %975 = load i16, i16* %weightSpic, align 2
  %conv1383 = sext i16 %975 to i32
  %976 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %977 = load i16**, i16*** %ref1_pic, align 8
  %978 = load i16, i16* %sy, align 2
  %conv1384 = sext i16 %978 to i32
  %979 = load i16, i16* %sx0, align 2
  %conv1385 = sext i16 %979 to i32
  %980 = load i32, i32* %img_height, align 4
  %981 = load i32, i32* %img_width, align 4
  %call1386 = call zeroext i16 %976(i16** %977, i32 %conv1384, i32 %conv1385, i32 %980, i32 %981)
  %conv1387 = zext i16 %call1386 to i32
  %mul1388 = mul nsw i32 %conv1383, %conv1387
  %982 = load i16, i16* %weightRpic, align 2
  %conv1389 = sext i16 %982 to i32
  %983 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %984 = load i16**, i16*** %ref2_pic, align 8
  %985 = load i16, i16* %ry, align 2
  %conv1390 = sext i16 %985 to i32
  %986 = load i16, i16* %rx0, align 2
  %conv1391 = sext i16 %986 to i32
  %987 = load i32, i32* %img_height, align 4
  %988 = load i32, i32* %img_width, align 4
  %call1392 = call zeroext i16 %983(i16** %984, i32 %conv1390, i32 %conv1391, i32 %987, i32 %988)
  %conv1393 = zext i16 %call1392 to i32
  %mul1394 = mul nsw i32 %conv1389, %conv1393
  %add1395 = add nsw i32 %mul1388, %mul1394
  %989 = load i32, i32* @wp_luma_round, align 4
  %mul1396 = mul nsw i32 2, %989
  %add1397 = add nsw i32 %add1395, %mul1396
  %990 = load i32, i32* @luma_log_weight_denom, align 4
  %add1398 = add nsw i32 %990, 1
  %shr1399 = ashr i32 %add1397, %add1398
  %991 = load i16, i16* %offsetBi, align 2
  %conv1400 = sext i16 %991 to i32
  %add1401 = add nsw i32 %shr1399, %conv1400
  br label %cond.end.1402

cond.end.1402:                                    ; preds = %cond.false.1382, %cond.true.1380
  %cond1403 = phi i32 [ %974, %cond.true.1380 ], [ %add1401, %cond.false.1382 ]
  br label %cond.end.1404

cond.end.1404:                                    ; preds = %cond.end.1402, %cond.true.1356
  %cond1405 = phi i32 [ 0, %cond.true.1356 ], [ %cond1403, %cond.end.1402 ]
  store i32 %cond1405, i32* %weightedpel, align 4
  %992 = load i16, i16* %x0, align 2
  %idxprom1406 = sext i16 %992 to i64
  %993 = load i16*, i16** %orig_line, align 8
  %arrayidx1407 = getelementptr inbounds i16, i16* %993, i64 %idxprom1406
  %994 = load i16, i16* %arrayidx1407, align 2
  %conv1408 = zext i16 %994 to i32
  %995 = load i32, i32* %weightedpel, align 4
  %sub1409 = sub nsw i32 %conv1408, %995
  %996 = load i32*, i32** %d, align 8
  %incdec.ptr1410 = getelementptr inbounds i32, i32* %996, i32 1
  store i32* %incdec.ptr1410, i32** %d, align 8
  store i32 %sub1409, i32* %996, align 4
  %997 = load i16, i16* %weightSpic, align 2
  %conv1411 = sext i16 %997 to i32
  %998 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %999 = load i16**, i16*** %ref1_pic, align 8
  %1000 = load i16, i16* %sy, align 2
  %conv1412 = sext i16 %1000 to i32
  %1001 = load i16, i16* %sx0, align 2
  %conv1413 = sext i16 %1001 to i32
  %add1414 = add nsw i32 %conv1413, 4
  %1002 = load i32, i32* %img_height, align 4
  %1003 = load i32, i32* %img_width, align 4
  %call1415 = call zeroext i16 %998(i16** %999, i32 %conv1412, i32 %add1414, i32 %1002, i32 %1003)
  %conv1416 = zext i16 %call1415 to i32
  %mul1417 = mul nsw i32 %conv1411, %conv1416
  %1004 = load i16, i16* %weightRpic, align 2
  %conv1418 = sext i16 %1004 to i32
  %1005 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1006 = load i16**, i16*** %ref2_pic, align 8
  %1007 = load i16, i16* %ry, align 2
  %conv1419 = sext i16 %1007 to i32
  %1008 = load i16, i16* %rx0, align 2
  %conv1420 = sext i16 %1008 to i32
  %add1421 = add nsw i32 %conv1420, 4
  %1009 = load i32, i32* %img_height, align 4
  %1010 = load i32, i32* %img_width, align 4
  %call1422 = call zeroext i16 %1005(i16** %1006, i32 %conv1419, i32 %add1421, i32 %1009, i32 %1010)
  %conv1423 = zext i16 %call1422 to i32
  %mul1424 = mul nsw i32 %conv1418, %conv1423
  %add1425 = add nsw i32 %mul1417, %mul1424
  %1011 = load i32, i32* @wp_luma_round, align 4
  %mul1426 = mul nsw i32 2, %1011
  %add1427 = add nsw i32 %add1425, %mul1426
  %1012 = load i32, i32* @luma_log_weight_denom, align 4
  %add1428 = add nsw i32 %1012, 1
  %shr1429 = ashr i32 %add1427, %add1428
  %1013 = load i16, i16* %offsetBi, align 2
  %conv1430 = sext i16 %1013 to i32
  %add1431 = add nsw i32 %shr1429, %conv1430
  %cmp1432 = icmp slt i32 %add1431, 0
  br i1 %cmp1432, label %cond.true.1434, label %cond.false.1435

cond.true.1434:                                   ; preds = %cond.end.1404
  br label %cond.end.1486

cond.false.1435:                                  ; preds = %cond.end.1404
  %1014 = load i16, i16* %weightSpic, align 2
  %conv1436 = sext i16 %1014 to i32
  %1015 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1016 = load i16**, i16*** %ref1_pic, align 8
  %1017 = load i16, i16* %sy, align 2
  %conv1437 = sext i16 %1017 to i32
  %1018 = load i16, i16* %sx0, align 2
  %conv1438 = sext i16 %1018 to i32
  %add1439 = add nsw i32 %conv1438, 4
  %1019 = load i32, i32* %img_height, align 4
  %1020 = load i32, i32* %img_width, align 4
  %call1440 = call zeroext i16 %1015(i16** %1016, i32 %conv1437, i32 %add1439, i32 %1019, i32 %1020)
  %conv1441 = zext i16 %call1440 to i32
  %mul1442 = mul nsw i32 %conv1436, %conv1441
  %1021 = load i16, i16* %weightRpic, align 2
  %conv1443 = sext i16 %1021 to i32
  %1022 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1023 = load i16**, i16*** %ref2_pic, align 8
  %1024 = load i16, i16* %ry, align 2
  %conv1444 = sext i16 %1024 to i32
  %1025 = load i16, i16* %rx0, align 2
  %conv1445 = sext i16 %1025 to i32
  %add1446 = add nsw i32 %conv1445, 4
  %1026 = load i32, i32* %img_height, align 4
  %1027 = load i32, i32* %img_width, align 4
  %call1447 = call zeroext i16 %1022(i16** %1023, i32 %conv1444, i32 %add1446, i32 %1026, i32 %1027)
  %conv1448 = zext i16 %call1447 to i32
  %mul1449 = mul nsw i32 %conv1443, %conv1448
  %add1450 = add nsw i32 %mul1442, %mul1449
  %1028 = load i32, i32* @wp_luma_round, align 4
  %mul1451 = mul nsw i32 2, %1028
  %add1452 = add nsw i32 %add1450, %mul1451
  %1029 = load i32, i32* @luma_log_weight_denom, align 4
  %add1453 = add nsw i32 %1029, 1
  %shr1454 = ashr i32 %add1452, %add1453
  %1030 = load i16, i16* %offsetBi, align 2
  %conv1455 = sext i16 %1030 to i32
  %add1456 = add nsw i32 %shr1454, %conv1455
  %1031 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value1457 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1031, i32 0, i32 155
  %1032 = load i32, i32* %max_imgpel_value1457, align 4
  %cmp1458 = icmp sgt i32 %add1456, %1032
  br i1 %cmp1458, label %cond.true.1460, label %cond.false.1462

cond.true.1460:                                   ; preds = %cond.false.1435
  %1033 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value1461 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1033, i32 0, i32 155
  %1034 = load i32, i32* %max_imgpel_value1461, align 4
  br label %cond.end.1484

cond.false.1462:                                  ; preds = %cond.false.1435
  %1035 = load i16, i16* %weightSpic, align 2
  %conv1463 = sext i16 %1035 to i32
  %1036 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1037 = load i16**, i16*** %ref1_pic, align 8
  %1038 = load i16, i16* %sy, align 2
  %conv1464 = sext i16 %1038 to i32
  %1039 = load i16, i16* %sx0, align 2
  %conv1465 = sext i16 %1039 to i32
  %add1466 = add nsw i32 %conv1465, 4
  %1040 = load i32, i32* %img_height, align 4
  %1041 = load i32, i32* %img_width, align 4
  %call1467 = call zeroext i16 %1036(i16** %1037, i32 %conv1464, i32 %add1466, i32 %1040, i32 %1041)
  %conv1468 = zext i16 %call1467 to i32
  %mul1469 = mul nsw i32 %conv1463, %conv1468
  %1042 = load i16, i16* %weightRpic, align 2
  %conv1470 = sext i16 %1042 to i32
  %1043 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1044 = load i16**, i16*** %ref2_pic, align 8
  %1045 = load i16, i16* %ry, align 2
  %conv1471 = sext i16 %1045 to i32
  %1046 = load i16, i16* %rx0, align 2
  %conv1472 = sext i16 %1046 to i32
  %add1473 = add nsw i32 %conv1472, 4
  %1047 = load i32, i32* %img_height, align 4
  %1048 = load i32, i32* %img_width, align 4
  %call1474 = call zeroext i16 %1043(i16** %1044, i32 %conv1471, i32 %add1473, i32 %1047, i32 %1048)
  %conv1475 = zext i16 %call1474 to i32
  %mul1476 = mul nsw i32 %conv1470, %conv1475
  %add1477 = add nsw i32 %mul1469, %mul1476
  %1049 = load i32, i32* @wp_luma_round, align 4
  %mul1478 = mul nsw i32 2, %1049
  %add1479 = add nsw i32 %add1477, %mul1478
  %1050 = load i32, i32* @luma_log_weight_denom, align 4
  %add1480 = add nsw i32 %1050, 1
  %shr1481 = ashr i32 %add1479, %add1480
  %1051 = load i16, i16* %offsetBi, align 2
  %conv1482 = sext i16 %1051 to i32
  %add1483 = add nsw i32 %shr1481, %conv1482
  br label %cond.end.1484

cond.end.1484:                                    ; preds = %cond.false.1462, %cond.true.1460
  %cond1485 = phi i32 [ %1034, %cond.true.1460 ], [ %add1483, %cond.false.1462 ]
  br label %cond.end.1486

cond.end.1486:                                    ; preds = %cond.end.1484, %cond.true.1434
  %cond1487 = phi i32 [ 0, %cond.true.1434 ], [ %cond1485, %cond.end.1484 ]
  store i32 %cond1487, i32* %weightedpel, align 4
  %1052 = load i16, i16* %x0, align 2
  %conv1488 = sext i16 %1052 to i32
  %add1489 = add nsw i32 %conv1488, 1
  %idxprom1490 = sext i32 %add1489 to i64
  %1053 = load i16*, i16** %orig_line, align 8
  %arrayidx1491 = getelementptr inbounds i16, i16* %1053, i64 %idxprom1490
  %1054 = load i16, i16* %arrayidx1491, align 2
  %conv1492 = zext i16 %1054 to i32
  %1055 = load i32, i32* %weightedpel, align 4
  %sub1493 = sub nsw i32 %conv1492, %1055
  %1056 = load i32*, i32** %d, align 8
  %incdec.ptr1494 = getelementptr inbounds i32, i32* %1056, i32 1
  store i32* %incdec.ptr1494, i32** %d, align 8
  store i32 %sub1493, i32* %1056, align 4
  %1057 = load i16, i16* %weightSpic, align 2
  %conv1495 = sext i16 %1057 to i32
  %1058 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1059 = load i16**, i16*** %ref1_pic, align 8
  %1060 = load i16, i16* %sy, align 2
  %conv1496 = sext i16 %1060 to i32
  %1061 = load i16, i16* %sx0, align 2
  %conv1497 = sext i16 %1061 to i32
  %add1498 = add nsw i32 %conv1497, 8
  %1062 = load i32, i32* %img_height, align 4
  %1063 = load i32, i32* %img_width, align 4
  %call1499 = call zeroext i16 %1058(i16** %1059, i32 %conv1496, i32 %add1498, i32 %1062, i32 %1063)
  %conv1500 = zext i16 %call1499 to i32
  %mul1501 = mul nsw i32 %conv1495, %conv1500
  %1064 = load i16, i16* %weightRpic, align 2
  %conv1502 = sext i16 %1064 to i32
  %1065 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1066 = load i16**, i16*** %ref2_pic, align 8
  %1067 = load i16, i16* %ry, align 2
  %conv1503 = sext i16 %1067 to i32
  %1068 = load i16, i16* %rx0, align 2
  %conv1504 = sext i16 %1068 to i32
  %add1505 = add nsw i32 %conv1504, 8
  %1069 = load i32, i32* %img_height, align 4
  %1070 = load i32, i32* %img_width, align 4
  %call1506 = call zeroext i16 %1065(i16** %1066, i32 %conv1503, i32 %add1505, i32 %1069, i32 %1070)
  %conv1507 = zext i16 %call1506 to i32
  %mul1508 = mul nsw i32 %conv1502, %conv1507
  %add1509 = add nsw i32 %mul1501, %mul1508
  %1071 = load i32, i32* @wp_luma_round, align 4
  %mul1510 = mul nsw i32 2, %1071
  %add1511 = add nsw i32 %add1509, %mul1510
  %1072 = load i32, i32* @luma_log_weight_denom, align 4
  %add1512 = add nsw i32 %1072, 1
  %shr1513 = ashr i32 %add1511, %add1512
  %1073 = load i16, i16* %offsetBi, align 2
  %conv1514 = sext i16 %1073 to i32
  %add1515 = add nsw i32 %shr1513, %conv1514
  %cmp1516 = icmp slt i32 %add1515, 0
  br i1 %cmp1516, label %cond.true.1518, label %cond.false.1519

cond.true.1518:                                   ; preds = %cond.end.1486
  br label %cond.end.1570

cond.false.1519:                                  ; preds = %cond.end.1486
  %1074 = load i16, i16* %weightSpic, align 2
  %conv1520 = sext i16 %1074 to i32
  %1075 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1076 = load i16**, i16*** %ref1_pic, align 8
  %1077 = load i16, i16* %sy, align 2
  %conv1521 = sext i16 %1077 to i32
  %1078 = load i16, i16* %sx0, align 2
  %conv1522 = sext i16 %1078 to i32
  %add1523 = add nsw i32 %conv1522, 8
  %1079 = load i32, i32* %img_height, align 4
  %1080 = load i32, i32* %img_width, align 4
  %call1524 = call zeroext i16 %1075(i16** %1076, i32 %conv1521, i32 %add1523, i32 %1079, i32 %1080)
  %conv1525 = zext i16 %call1524 to i32
  %mul1526 = mul nsw i32 %conv1520, %conv1525
  %1081 = load i16, i16* %weightRpic, align 2
  %conv1527 = sext i16 %1081 to i32
  %1082 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1083 = load i16**, i16*** %ref2_pic, align 8
  %1084 = load i16, i16* %ry, align 2
  %conv1528 = sext i16 %1084 to i32
  %1085 = load i16, i16* %rx0, align 2
  %conv1529 = sext i16 %1085 to i32
  %add1530 = add nsw i32 %conv1529, 8
  %1086 = load i32, i32* %img_height, align 4
  %1087 = load i32, i32* %img_width, align 4
  %call1531 = call zeroext i16 %1082(i16** %1083, i32 %conv1528, i32 %add1530, i32 %1086, i32 %1087)
  %conv1532 = zext i16 %call1531 to i32
  %mul1533 = mul nsw i32 %conv1527, %conv1532
  %add1534 = add nsw i32 %mul1526, %mul1533
  %1088 = load i32, i32* @wp_luma_round, align 4
  %mul1535 = mul nsw i32 2, %1088
  %add1536 = add nsw i32 %add1534, %mul1535
  %1089 = load i32, i32* @luma_log_weight_denom, align 4
  %add1537 = add nsw i32 %1089, 1
  %shr1538 = ashr i32 %add1536, %add1537
  %1090 = load i16, i16* %offsetBi, align 2
  %conv1539 = sext i16 %1090 to i32
  %add1540 = add nsw i32 %shr1538, %conv1539
  %1091 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value1541 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1091, i32 0, i32 155
  %1092 = load i32, i32* %max_imgpel_value1541, align 4
  %cmp1542 = icmp sgt i32 %add1540, %1092
  br i1 %cmp1542, label %cond.true.1544, label %cond.false.1546

cond.true.1544:                                   ; preds = %cond.false.1519
  %1093 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value1545 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1093, i32 0, i32 155
  %1094 = load i32, i32* %max_imgpel_value1545, align 4
  br label %cond.end.1568

cond.false.1546:                                  ; preds = %cond.false.1519
  %1095 = load i16, i16* %weightSpic, align 2
  %conv1547 = sext i16 %1095 to i32
  %1096 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1097 = load i16**, i16*** %ref1_pic, align 8
  %1098 = load i16, i16* %sy, align 2
  %conv1548 = sext i16 %1098 to i32
  %1099 = load i16, i16* %sx0, align 2
  %conv1549 = sext i16 %1099 to i32
  %add1550 = add nsw i32 %conv1549, 8
  %1100 = load i32, i32* %img_height, align 4
  %1101 = load i32, i32* %img_width, align 4
  %call1551 = call zeroext i16 %1096(i16** %1097, i32 %conv1548, i32 %add1550, i32 %1100, i32 %1101)
  %conv1552 = zext i16 %call1551 to i32
  %mul1553 = mul nsw i32 %conv1547, %conv1552
  %1102 = load i16, i16* %weightRpic, align 2
  %conv1554 = sext i16 %1102 to i32
  %1103 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1104 = load i16**, i16*** %ref2_pic, align 8
  %1105 = load i16, i16* %ry, align 2
  %conv1555 = sext i16 %1105 to i32
  %1106 = load i16, i16* %rx0, align 2
  %conv1556 = sext i16 %1106 to i32
  %add1557 = add nsw i32 %conv1556, 8
  %1107 = load i32, i32* %img_height, align 4
  %1108 = load i32, i32* %img_width, align 4
  %call1558 = call zeroext i16 %1103(i16** %1104, i32 %conv1555, i32 %add1557, i32 %1107, i32 %1108)
  %conv1559 = zext i16 %call1558 to i32
  %mul1560 = mul nsw i32 %conv1554, %conv1559
  %add1561 = add nsw i32 %mul1553, %mul1560
  %1109 = load i32, i32* @wp_luma_round, align 4
  %mul1562 = mul nsw i32 2, %1109
  %add1563 = add nsw i32 %add1561, %mul1562
  %1110 = load i32, i32* @luma_log_weight_denom, align 4
  %add1564 = add nsw i32 %1110, 1
  %shr1565 = ashr i32 %add1563, %add1564
  %1111 = load i16, i16* %offsetBi, align 2
  %conv1566 = sext i16 %1111 to i32
  %add1567 = add nsw i32 %shr1565, %conv1566
  br label %cond.end.1568

cond.end.1568:                                    ; preds = %cond.false.1546, %cond.true.1544
  %cond1569 = phi i32 [ %1094, %cond.true.1544 ], [ %add1567, %cond.false.1546 ]
  br label %cond.end.1570

cond.end.1570:                                    ; preds = %cond.end.1568, %cond.true.1518
  %cond1571 = phi i32 [ 0, %cond.true.1518 ], [ %cond1569, %cond.end.1568 ]
  store i32 %cond1571, i32* %weightedpel, align 4
  %1112 = load i16, i16* %x0, align 2
  %conv1572 = sext i16 %1112 to i32
  %add1573 = add nsw i32 %conv1572, 2
  %idxprom1574 = sext i32 %add1573 to i64
  %1113 = load i16*, i16** %orig_line, align 8
  %arrayidx1575 = getelementptr inbounds i16, i16* %1113, i64 %idxprom1574
  %1114 = load i16, i16* %arrayidx1575, align 2
  %conv1576 = zext i16 %1114 to i32
  %1115 = load i32, i32* %weightedpel, align 4
  %sub1577 = sub nsw i32 %conv1576, %1115
  %1116 = load i32*, i32** %d, align 8
  %incdec.ptr1578 = getelementptr inbounds i32, i32* %1116, i32 1
  store i32* %incdec.ptr1578, i32** %d, align 8
  store i32 %sub1577, i32* %1116, align 4
  %1117 = load i16, i16* %weightSpic, align 2
  %conv1579 = sext i16 %1117 to i32
  %1118 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1119 = load i16**, i16*** %ref1_pic, align 8
  %1120 = load i16, i16* %sy, align 2
  %conv1580 = sext i16 %1120 to i32
  %1121 = load i16, i16* %sx0, align 2
  %conv1581 = sext i16 %1121 to i32
  %add1582 = add nsw i32 %conv1581, 12
  %1122 = load i32, i32* %img_height, align 4
  %1123 = load i32, i32* %img_width, align 4
  %call1583 = call zeroext i16 %1118(i16** %1119, i32 %conv1580, i32 %add1582, i32 %1122, i32 %1123)
  %conv1584 = zext i16 %call1583 to i32
  %mul1585 = mul nsw i32 %conv1579, %conv1584
  %1124 = load i16, i16* %weightRpic, align 2
  %conv1586 = sext i16 %1124 to i32
  %1125 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1126 = load i16**, i16*** %ref2_pic, align 8
  %1127 = load i16, i16* %ry, align 2
  %conv1587 = sext i16 %1127 to i32
  %1128 = load i16, i16* %rx0, align 2
  %conv1588 = sext i16 %1128 to i32
  %add1589 = add nsw i32 %conv1588, 12
  %1129 = load i32, i32* %img_height, align 4
  %1130 = load i32, i32* %img_width, align 4
  %call1590 = call zeroext i16 %1125(i16** %1126, i32 %conv1587, i32 %add1589, i32 %1129, i32 %1130)
  %conv1591 = zext i16 %call1590 to i32
  %mul1592 = mul nsw i32 %conv1586, %conv1591
  %add1593 = add nsw i32 %mul1585, %mul1592
  %1131 = load i32, i32* @wp_luma_round, align 4
  %mul1594 = mul nsw i32 2, %1131
  %add1595 = add nsw i32 %add1593, %mul1594
  %1132 = load i32, i32* @luma_log_weight_denom, align 4
  %add1596 = add nsw i32 %1132, 1
  %shr1597 = ashr i32 %add1595, %add1596
  %1133 = load i16, i16* %offsetBi, align 2
  %conv1598 = sext i16 %1133 to i32
  %add1599 = add nsw i32 %shr1597, %conv1598
  %cmp1600 = icmp slt i32 %add1599, 0
  br i1 %cmp1600, label %cond.true.1602, label %cond.false.1603

cond.true.1602:                                   ; preds = %cond.end.1570
  br label %cond.end.1654

cond.false.1603:                                  ; preds = %cond.end.1570
  %1134 = load i16, i16* %weightSpic, align 2
  %conv1604 = sext i16 %1134 to i32
  %1135 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1136 = load i16**, i16*** %ref1_pic, align 8
  %1137 = load i16, i16* %sy, align 2
  %conv1605 = sext i16 %1137 to i32
  %1138 = load i16, i16* %sx0, align 2
  %conv1606 = sext i16 %1138 to i32
  %add1607 = add nsw i32 %conv1606, 12
  %1139 = load i32, i32* %img_height, align 4
  %1140 = load i32, i32* %img_width, align 4
  %call1608 = call zeroext i16 %1135(i16** %1136, i32 %conv1605, i32 %add1607, i32 %1139, i32 %1140)
  %conv1609 = zext i16 %call1608 to i32
  %mul1610 = mul nsw i32 %conv1604, %conv1609
  %1141 = load i16, i16* %weightRpic, align 2
  %conv1611 = sext i16 %1141 to i32
  %1142 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1143 = load i16**, i16*** %ref2_pic, align 8
  %1144 = load i16, i16* %ry, align 2
  %conv1612 = sext i16 %1144 to i32
  %1145 = load i16, i16* %rx0, align 2
  %conv1613 = sext i16 %1145 to i32
  %add1614 = add nsw i32 %conv1613, 12
  %1146 = load i32, i32* %img_height, align 4
  %1147 = load i32, i32* %img_width, align 4
  %call1615 = call zeroext i16 %1142(i16** %1143, i32 %conv1612, i32 %add1614, i32 %1146, i32 %1147)
  %conv1616 = zext i16 %call1615 to i32
  %mul1617 = mul nsw i32 %conv1611, %conv1616
  %add1618 = add nsw i32 %mul1610, %mul1617
  %1148 = load i32, i32* @wp_luma_round, align 4
  %mul1619 = mul nsw i32 2, %1148
  %add1620 = add nsw i32 %add1618, %mul1619
  %1149 = load i32, i32* @luma_log_weight_denom, align 4
  %add1621 = add nsw i32 %1149, 1
  %shr1622 = ashr i32 %add1620, %add1621
  %1150 = load i16, i16* %offsetBi, align 2
  %conv1623 = sext i16 %1150 to i32
  %add1624 = add nsw i32 %shr1622, %conv1623
  %1151 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value1625 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1151, i32 0, i32 155
  %1152 = load i32, i32* %max_imgpel_value1625, align 4
  %cmp1626 = icmp sgt i32 %add1624, %1152
  br i1 %cmp1626, label %cond.true.1628, label %cond.false.1630

cond.true.1628:                                   ; preds = %cond.false.1603
  %1153 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value1629 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1153, i32 0, i32 155
  %1154 = load i32, i32* %max_imgpel_value1629, align 4
  br label %cond.end.1652

cond.false.1630:                                  ; preds = %cond.false.1603
  %1155 = load i16, i16* %weightSpic, align 2
  %conv1631 = sext i16 %1155 to i32
  %1156 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1157 = load i16**, i16*** %ref1_pic, align 8
  %1158 = load i16, i16* %sy, align 2
  %conv1632 = sext i16 %1158 to i32
  %1159 = load i16, i16* %sx0, align 2
  %conv1633 = sext i16 %1159 to i32
  %add1634 = add nsw i32 %conv1633, 12
  %1160 = load i32, i32* %img_height, align 4
  %1161 = load i32, i32* %img_width, align 4
  %call1635 = call zeroext i16 %1156(i16** %1157, i32 %conv1632, i32 %add1634, i32 %1160, i32 %1161)
  %conv1636 = zext i16 %call1635 to i32
  %mul1637 = mul nsw i32 %conv1631, %conv1636
  %1162 = load i16, i16* %weightRpic, align 2
  %conv1638 = sext i16 %1162 to i32
  %1163 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1164 = load i16**, i16*** %ref2_pic, align 8
  %1165 = load i16, i16* %ry, align 2
  %conv1639 = sext i16 %1165 to i32
  %1166 = load i16, i16* %rx0, align 2
  %conv1640 = sext i16 %1166 to i32
  %add1641 = add nsw i32 %conv1640, 12
  %1167 = load i32, i32* %img_height, align 4
  %1168 = load i32, i32* %img_width, align 4
  %call1642 = call zeroext i16 %1163(i16** %1164, i32 %conv1639, i32 %add1641, i32 %1167, i32 %1168)
  %conv1643 = zext i16 %call1642 to i32
  %mul1644 = mul nsw i32 %conv1638, %conv1643
  %add1645 = add nsw i32 %mul1637, %mul1644
  %1169 = load i32, i32* @wp_luma_round, align 4
  %mul1646 = mul nsw i32 2, %1169
  %add1647 = add nsw i32 %add1645, %mul1646
  %1170 = load i32, i32* @luma_log_weight_denom, align 4
  %add1648 = add nsw i32 %1170, 1
  %shr1649 = ashr i32 %add1647, %add1648
  %1171 = load i16, i16* %offsetBi, align 2
  %conv1650 = sext i16 %1171 to i32
  %add1651 = add nsw i32 %shr1649, %conv1650
  br label %cond.end.1652

cond.end.1652:                                    ; preds = %cond.false.1630, %cond.true.1628
  %cond1653 = phi i32 [ %1154, %cond.true.1628 ], [ %add1651, %cond.false.1630 ]
  br label %cond.end.1654

cond.end.1654:                                    ; preds = %cond.end.1652, %cond.true.1602
  %cond1655 = phi i32 [ 0, %cond.true.1602 ], [ %cond1653, %cond.end.1652 ]
  store i32 %cond1655, i32* %weightedpel, align 4
  %1172 = load i16, i16* %x0, align 2
  %conv1656 = sext i16 %1172 to i32
  %add1657 = add nsw i32 %conv1656, 3
  %idxprom1658 = sext i32 %add1657 to i64
  %1173 = load i16*, i16** %orig_line, align 8
  %arrayidx1659 = getelementptr inbounds i16, i16* %1173, i64 %idxprom1658
  %1174 = load i16, i16* %arrayidx1659, align 2
  %conv1660 = zext i16 %1174 to i32
  %1175 = load i32, i32* %weightedpel, align 4
  %sub1661 = sub nsw i32 %conv1660, %1175
  %1176 = load i32*, i32** %d, align 8
  store i32 %sub1661, i32* %1176, align 4
  %1177 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %AllowTransform8x8 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %1177, i32 0, i32 123
  %1178 = load i32, i32* %AllowTransform8x8, align 4
  %tobool1662 = icmp ne i32 %1178, 0
  br i1 %tobool1662, label %if.else.1674, label %if.then.1663

if.then.1663:                                     ; preds = %cond.end.1654
  %arraydecay1664 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i32 0, i32 0
  %1179 = load i32, i32* %halfpelhadamard, align 4
  %call1665 = call i32 @SATD(i32* %arraydecay1664, i32 %1179)
  %1180 = load i16, i16* %mcost, align 2
  %conv1666 = sext i16 %1180 to i32
  %add1667 = add nsw i32 %conv1666, %call1665
  %conv1668 = trunc i32 %add1667 to i16
  store i16 %conv1668, i16* %mcost, align 2
  %conv1669 = sext i16 %conv1668 to i32
  %1181 = load i32, i32* %min_mcost.addr, align 4
  %cmp1670 = icmp sgt i32 %conv1669, %1181
  br i1 %cmp1670, label %if.then.1672, label %if.end.1673

if.then.1672:                                     ; preds = %if.then.1663
  store i16 1, i16* %abort_search, align 2
  br label %for.end.1702

if.end.1673:                                      ; preds = %if.then.1663
  br label %if.end.1697

if.else.1674:                                     ; preds = %cond.end.1654
  store i32 0, i32* %j, align 4
  store i32 0, i32* %k, align 4
  br label %for.cond.1675

for.cond.1675:                                    ; preds = %for.inc.1694, %if.else.1674
  %1182 = load i32, i32* %j, align 4
  %cmp1676 = icmp slt i32 %1182, 4
  br i1 %cmp1676, label %for.body.1678, label %for.end.1696

for.body.1678:                                    ; preds = %for.cond.1675
  store i32 0, i32* %i, align 4
  br label %for.cond.1679

for.cond.1679:                                    ; preds = %for.inc, %for.body.1678
  %1183 = load i32, i32* %i, align 4
  %cmp1680 = icmp slt i32 %1183, 4
  br i1 %cmp1680, label %for.body.1682, label %for.end

for.body.1682:                                    ; preds = %for.cond.1679
  %1184 = load i32, i32* %k, align 4
  %idxprom1683 = sext i32 %1184 to i64
  %arrayidx1684 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i32 0, i64 %idxprom1683
  %1185 = load i32, i32* %arrayidx1684, align 4
  %1186 = load i16, i16* %x0, align 2
  %conv1685 = sext i16 %1186 to i32
  %1187 = load i32, i32* %i, align 4
  %add1686 = add nsw i32 %conv1685, %1187
  %idxprom1687 = sext i32 %add1686 to i64
  %1188 = load i16, i16* %y0, align 2
  %conv1688 = sext i16 %1188 to i32
  %1189 = load i32, i32* %j, align 4
  %add1689 = add nsw i32 %conv1688, %1189
  %idxprom1690 = sext i32 %add1689 to i64
  %arrayidx1691 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %curr_diff, i32 0, i64 %idxprom1690
  %arrayidx1692 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx1691, i32 0, i64 %idxprom1687
  store i32 %1185, i32* %arrayidx1692, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body.1682
  %1190 = load i32, i32* %i, align 4
  %inc = add nsw i32 %1190, 1
  store i32 %inc, i32* %i, align 4
  %1191 = load i32, i32* %k, align 4
  %inc1693 = add nsw i32 %1191, 1
  store i32 %inc1693, i32* %k, align 4
  br label %for.cond.1679

for.end:                                          ; preds = %for.cond.1679
  br label %for.inc.1694

for.inc.1694:                                     ; preds = %for.end
  %1192 = load i32, i32* %j, align 4
  %inc1695 = add nsw i32 %1192, 1
  store i32 %inc1695, i32* %j, align 4
  br label %for.cond.1675

for.end.1696:                                     ; preds = %for.cond.1675
  br label %if.end.1697

if.end.1697:                                      ; preds = %for.end.1696, %if.end.1673
  br label %for.inc.1698

for.inc.1698:                                     ; preds = %if.end.1697
  %1193 = load i16, i16* %x0, align 2
  %conv1699 = sext i16 %1193 to i32
  %add1700 = add nsw i32 %conv1699, 4
  %conv1701 = trunc i32 %add1700 to i16
  store i16 %conv1701, i16* %x0, align 2
  br label %for.cond.304

for.end.1702:                                     ; preds = %if.then.1672, %for.cond.304
  br label %if.end.2087

if.else.1703:                                     ; preds = %for.body.289
  store i16 0, i16* %x0, align 2
  br label %for.cond.1704

for.cond.1704:                                    ; preds = %for.inc.2082, %if.else.1703
  %1194 = load i16, i16* %x0, align 2
  %conv1705 = sext i16 %1194 to i32
  %1195 = load i16, i16* %blocksize_x, align 2
  %conv1706 = sext i16 %1195 to i32
  %cmp1707 = icmp slt i32 %conv1705, %conv1706
  br i1 %cmp1707, label %for.body.1709, label %for.end.2086

for.body.1709:                                    ; preds = %for.cond.1704
  %1196 = load i32, i32* %pic_pix_x.addr, align 4
  %1197 = load i16, i16* %x0, align 2
  %conv1710 = sext i16 %1197 to i32
  %add1711 = add nsw i32 %1196, %conv1710
  %shl1712 = shl i32 %add1711, 2
  %1198 = load i16*, i16** %s_mv_x.addr, align 8
  %1199 = load i16, i16* %1198, align 2
  %conv1713 = sext i16 %1199 to i32
  %add1714 = add nsw i32 %shl1712, %conv1713
  %conv1715 = trunc i32 %add1714 to i16
  store i16 %conv1715, i16* %sx0, align 2
  %1200 = load i32, i32* %pic_pix_x.addr, align 4
  %1201 = load i16, i16* %x0, align 2
  %conv1716 = sext i16 %1201 to i32
  %add1717 = add nsw i32 %1200, %conv1716
  %shl1718 = shl i32 %add1717, 2
  %1202 = load i16, i16* %cand_mv_x, align 2
  %conv1719 = sext i16 %1202 to i32
  %add1720 = add nsw i32 %shl1718, %conv1719
  %conv1721 = trunc i32 %add1720 to i16
  store i16 %conv1721, i16* %rx0, align 2
  %arraydecay1722 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i32 0, i32 0
  store i32* %arraydecay1722, i32** %d, align 8
  %1203 = load i16, i16* %sy0, align 2
  store i16 %1203, i16* %sy, align 2
  %1204 = load i16, i16* %ry0, align 2
  store i16 %1204, i16* %ry, align 2
  %1205 = load i16, i16* %y0, align 2
  %idxprom1723 = sext i16 %1205 to i64
  %1206 = load i16**, i16*** %orig_pic.addr, align 8
  %arrayidx1724 = getelementptr inbounds i16*, i16** %1206, i64 %idxprom1723
  %1207 = load i16*, i16** %arrayidx1724, align 8
  store i16* %1207, i16** %orig_line, align 8
  %1208 = load i16, i16* %x0, align 2
  %idxprom1725 = sext i16 %1208 to i64
  %1209 = load i16*, i16** %orig_line, align 8
  %arrayidx1726 = getelementptr inbounds i16, i16* %1209, i64 %idxprom1725
  %1210 = load i16, i16* %arrayidx1726, align 2
  %conv1727 = zext i16 %1210 to i32
  %1211 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1212 = load i16**, i16*** %ref1_pic, align 8
  %1213 = load i16, i16* %sy, align 2
  %conv1728 = sext i16 %1213 to i32
  %1214 = load i16, i16* %sx0, align 2
  %conv1729 = sext i16 %1214 to i32
  %1215 = load i32, i32* %img_height, align 4
  %1216 = load i32, i32* %img_width, align 4
  %call1730 = call zeroext i16 %1211(i16** %1212, i32 %conv1728, i32 %conv1729, i32 %1215, i32 %1216)
  %conv1731 = zext i16 %call1730 to i32
  %1217 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1218 = load i16**, i16*** %ref2_pic, align 8
  %1219 = load i16, i16* %ry, align 2
  %conv1732 = sext i16 %1219 to i32
  %1220 = load i16, i16* %rx0, align 2
  %conv1733 = sext i16 %1220 to i32
  %1221 = load i32, i32* %img_height, align 4
  %1222 = load i32, i32* %img_width, align 4
  %call1734 = call zeroext i16 %1217(i16** %1218, i32 %conv1732, i32 %conv1733, i32 %1221, i32 %1222)
  %conv1735 = zext i16 %call1734 to i32
  %add1736 = add nsw i32 %conv1731, %conv1735
  %shr1737 = ashr i32 %add1736, 1
  %sub1738 = sub nsw i32 %conv1727, %shr1737
  %1223 = load i32*, i32** %d, align 8
  %incdec.ptr1739 = getelementptr inbounds i32, i32* %1223, i32 1
  store i32* %incdec.ptr1739, i32** %d, align 8
  store i32 %sub1738, i32* %1223, align 4
  %1224 = load i16, i16* %x0, align 2
  %conv1740 = sext i16 %1224 to i32
  %add1741 = add nsw i32 %conv1740, 1
  %idxprom1742 = sext i32 %add1741 to i64
  %1225 = load i16*, i16** %orig_line, align 8
  %arrayidx1743 = getelementptr inbounds i16, i16* %1225, i64 %idxprom1742
  %1226 = load i16, i16* %arrayidx1743, align 2
  %conv1744 = zext i16 %1226 to i32
  %1227 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1228 = load i16**, i16*** %ref1_pic, align 8
  %1229 = load i16, i16* %sy, align 2
  %conv1745 = sext i16 %1229 to i32
  %1230 = load i16, i16* %sx0, align 2
  %conv1746 = sext i16 %1230 to i32
  %add1747 = add nsw i32 %conv1746, 4
  %1231 = load i32, i32* %img_height, align 4
  %1232 = load i32, i32* %img_width, align 4
  %call1748 = call zeroext i16 %1227(i16** %1228, i32 %conv1745, i32 %add1747, i32 %1231, i32 %1232)
  %conv1749 = zext i16 %call1748 to i32
  %1233 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1234 = load i16**, i16*** %ref2_pic, align 8
  %1235 = load i16, i16* %ry, align 2
  %conv1750 = sext i16 %1235 to i32
  %1236 = load i16, i16* %rx0, align 2
  %conv1751 = sext i16 %1236 to i32
  %add1752 = add nsw i32 %conv1751, 4
  %1237 = load i32, i32* %img_height, align 4
  %1238 = load i32, i32* %img_width, align 4
  %call1753 = call zeroext i16 %1233(i16** %1234, i32 %conv1750, i32 %add1752, i32 %1237, i32 %1238)
  %conv1754 = zext i16 %call1753 to i32
  %add1755 = add nsw i32 %conv1749, %conv1754
  %shr1756 = ashr i32 %add1755, 1
  %sub1757 = sub nsw i32 %conv1744, %shr1756
  %1239 = load i32*, i32** %d, align 8
  %incdec.ptr1758 = getelementptr inbounds i32, i32* %1239, i32 1
  store i32* %incdec.ptr1758, i32** %d, align 8
  store i32 %sub1757, i32* %1239, align 4
  %1240 = load i16, i16* %x0, align 2
  %conv1759 = sext i16 %1240 to i32
  %add1760 = add nsw i32 %conv1759, 2
  %idxprom1761 = sext i32 %add1760 to i64
  %1241 = load i16*, i16** %orig_line, align 8
  %arrayidx1762 = getelementptr inbounds i16, i16* %1241, i64 %idxprom1761
  %1242 = load i16, i16* %arrayidx1762, align 2
  %conv1763 = zext i16 %1242 to i32
  %1243 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1244 = load i16**, i16*** %ref1_pic, align 8
  %1245 = load i16, i16* %sy, align 2
  %conv1764 = sext i16 %1245 to i32
  %1246 = load i16, i16* %sx0, align 2
  %conv1765 = sext i16 %1246 to i32
  %add1766 = add nsw i32 %conv1765, 8
  %1247 = load i32, i32* %img_height, align 4
  %1248 = load i32, i32* %img_width, align 4
  %call1767 = call zeroext i16 %1243(i16** %1244, i32 %conv1764, i32 %add1766, i32 %1247, i32 %1248)
  %conv1768 = zext i16 %call1767 to i32
  %1249 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1250 = load i16**, i16*** %ref2_pic, align 8
  %1251 = load i16, i16* %ry, align 2
  %conv1769 = sext i16 %1251 to i32
  %1252 = load i16, i16* %rx0, align 2
  %conv1770 = sext i16 %1252 to i32
  %add1771 = add nsw i32 %conv1770, 8
  %1253 = load i32, i32* %img_height, align 4
  %1254 = load i32, i32* %img_width, align 4
  %call1772 = call zeroext i16 %1249(i16** %1250, i32 %conv1769, i32 %add1771, i32 %1253, i32 %1254)
  %conv1773 = zext i16 %call1772 to i32
  %add1774 = add nsw i32 %conv1768, %conv1773
  %shr1775 = ashr i32 %add1774, 1
  %sub1776 = sub nsw i32 %conv1763, %shr1775
  %1255 = load i32*, i32** %d, align 8
  %incdec.ptr1777 = getelementptr inbounds i32, i32* %1255, i32 1
  store i32* %incdec.ptr1777, i32** %d, align 8
  store i32 %sub1776, i32* %1255, align 4
  %1256 = load i16, i16* %x0, align 2
  %conv1778 = sext i16 %1256 to i32
  %add1779 = add nsw i32 %conv1778, 3
  %idxprom1780 = sext i32 %add1779 to i64
  %1257 = load i16*, i16** %orig_line, align 8
  %arrayidx1781 = getelementptr inbounds i16, i16* %1257, i64 %idxprom1780
  %1258 = load i16, i16* %arrayidx1781, align 2
  %conv1782 = zext i16 %1258 to i32
  %1259 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1260 = load i16**, i16*** %ref1_pic, align 8
  %1261 = load i16, i16* %sy, align 2
  %conv1783 = sext i16 %1261 to i32
  %1262 = load i16, i16* %sx0, align 2
  %conv1784 = sext i16 %1262 to i32
  %add1785 = add nsw i32 %conv1784, 12
  %1263 = load i32, i32* %img_height, align 4
  %1264 = load i32, i32* %img_width, align 4
  %call1786 = call zeroext i16 %1259(i16** %1260, i32 %conv1783, i32 %add1785, i32 %1263, i32 %1264)
  %conv1787 = zext i16 %call1786 to i32
  %1265 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1266 = load i16**, i16*** %ref2_pic, align 8
  %1267 = load i16, i16* %ry, align 2
  %conv1788 = sext i16 %1267 to i32
  %1268 = load i16, i16* %rx0, align 2
  %conv1789 = sext i16 %1268 to i32
  %add1790 = add nsw i32 %conv1789, 12
  %1269 = load i32, i32* %img_height, align 4
  %1270 = load i32, i32* %img_width, align 4
  %call1791 = call zeroext i16 %1265(i16** %1266, i32 %conv1788, i32 %add1790, i32 %1269, i32 %1270)
  %conv1792 = zext i16 %call1791 to i32
  %add1793 = add nsw i32 %conv1787, %conv1792
  %shr1794 = ashr i32 %add1793, 1
  %sub1795 = sub nsw i32 %conv1782, %shr1794
  %1271 = load i32*, i32** %d, align 8
  %incdec.ptr1796 = getelementptr inbounds i32, i32* %1271, i32 1
  store i32* %incdec.ptr1796, i32** %d, align 8
  store i32 %sub1795, i32* %1271, align 4
  %1272 = load i16, i16* %sy0, align 2
  %conv1797 = sext i16 %1272 to i32
  %add1798 = add nsw i32 %conv1797, 4
  %conv1799 = trunc i32 %add1798 to i16
  store i16 %conv1799, i16* %sy, align 2
  %1273 = load i16, i16* %ry0, align 2
  %conv1800 = sext i16 %1273 to i32
  %add1801 = add nsw i32 %conv1800, 4
  %conv1802 = trunc i32 %add1801 to i16
  store i16 %conv1802, i16* %ry, align 2
  %1274 = load i16, i16* %y0, align 2
  %conv1803 = sext i16 %1274 to i32
  %add1804 = add nsw i32 %conv1803, 1
  %idxprom1805 = sext i32 %add1804 to i64
  %1275 = load i16**, i16*** %orig_pic.addr, align 8
  %arrayidx1806 = getelementptr inbounds i16*, i16** %1275, i64 %idxprom1805
  %1276 = load i16*, i16** %arrayidx1806, align 8
  store i16* %1276, i16** %orig_line, align 8
  %1277 = load i16, i16* %x0, align 2
  %idxprom1807 = sext i16 %1277 to i64
  %1278 = load i16*, i16** %orig_line, align 8
  %arrayidx1808 = getelementptr inbounds i16, i16* %1278, i64 %idxprom1807
  %1279 = load i16, i16* %arrayidx1808, align 2
  %conv1809 = zext i16 %1279 to i32
  %1280 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1281 = load i16**, i16*** %ref1_pic, align 8
  %1282 = load i16, i16* %sy, align 2
  %conv1810 = sext i16 %1282 to i32
  %1283 = load i16, i16* %sx0, align 2
  %conv1811 = sext i16 %1283 to i32
  %1284 = load i32, i32* %img_height, align 4
  %1285 = load i32, i32* %img_width, align 4
  %call1812 = call zeroext i16 %1280(i16** %1281, i32 %conv1810, i32 %conv1811, i32 %1284, i32 %1285)
  %conv1813 = zext i16 %call1812 to i32
  %1286 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1287 = load i16**, i16*** %ref2_pic, align 8
  %1288 = load i16, i16* %ry, align 2
  %conv1814 = sext i16 %1288 to i32
  %1289 = load i16, i16* %rx0, align 2
  %conv1815 = sext i16 %1289 to i32
  %1290 = load i32, i32* %img_height, align 4
  %1291 = load i32, i32* %img_width, align 4
  %call1816 = call zeroext i16 %1286(i16** %1287, i32 %conv1814, i32 %conv1815, i32 %1290, i32 %1291)
  %conv1817 = zext i16 %call1816 to i32
  %add1818 = add nsw i32 %conv1813, %conv1817
  %shr1819 = ashr i32 %add1818, 2
  %sub1820 = sub nsw i32 %conv1809, %shr1819
  %1292 = load i32*, i32** %d, align 8
  %incdec.ptr1821 = getelementptr inbounds i32, i32* %1292, i32 1
  store i32* %incdec.ptr1821, i32** %d, align 8
  store i32 %sub1820, i32* %1292, align 4
  %1293 = load i16, i16* %x0, align 2
  %conv1822 = sext i16 %1293 to i32
  %add1823 = add nsw i32 %conv1822, 1
  %idxprom1824 = sext i32 %add1823 to i64
  %1294 = load i16*, i16** %orig_line, align 8
  %arrayidx1825 = getelementptr inbounds i16, i16* %1294, i64 %idxprom1824
  %1295 = load i16, i16* %arrayidx1825, align 2
  %conv1826 = zext i16 %1295 to i32
  %1296 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1297 = load i16**, i16*** %ref1_pic, align 8
  %1298 = load i16, i16* %sy, align 2
  %conv1827 = sext i16 %1298 to i32
  %1299 = load i16, i16* %sx0, align 2
  %conv1828 = sext i16 %1299 to i32
  %add1829 = add nsw i32 %conv1828, 4
  %1300 = load i32, i32* %img_height, align 4
  %1301 = load i32, i32* %img_width, align 4
  %call1830 = call zeroext i16 %1296(i16** %1297, i32 %conv1827, i32 %add1829, i32 %1300, i32 %1301)
  %conv1831 = zext i16 %call1830 to i32
  %1302 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1303 = load i16**, i16*** %ref2_pic, align 8
  %1304 = load i16, i16* %ry, align 2
  %conv1832 = sext i16 %1304 to i32
  %1305 = load i16, i16* %rx0, align 2
  %conv1833 = sext i16 %1305 to i32
  %add1834 = add nsw i32 %conv1833, 4
  %1306 = load i32, i32* %img_height, align 4
  %1307 = load i32, i32* %img_width, align 4
  %call1835 = call zeroext i16 %1302(i16** %1303, i32 %conv1832, i32 %add1834, i32 %1306, i32 %1307)
  %conv1836 = zext i16 %call1835 to i32
  %add1837 = add nsw i32 %conv1831, %conv1836
  %shr1838 = ashr i32 %add1837, 2
  %sub1839 = sub nsw i32 %conv1826, %shr1838
  %1308 = load i32*, i32** %d, align 8
  %incdec.ptr1840 = getelementptr inbounds i32, i32* %1308, i32 1
  store i32* %incdec.ptr1840, i32** %d, align 8
  store i32 %sub1839, i32* %1308, align 4
  %1309 = load i16, i16* %x0, align 2
  %conv1841 = sext i16 %1309 to i32
  %add1842 = add nsw i32 %conv1841, 2
  %idxprom1843 = sext i32 %add1842 to i64
  %1310 = load i16*, i16** %orig_line, align 8
  %arrayidx1844 = getelementptr inbounds i16, i16* %1310, i64 %idxprom1843
  %1311 = load i16, i16* %arrayidx1844, align 2
  %conv1845 = zext i16 %1311 to i32
  %1312 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1313 = load i16**, i16*** %ref1_pic, align 8
  %1314 = load i16, i16* %sy, align 2
  %conv1846 = sext i16 %1314 to i32
  %1315 = load i16, i16* %sx0, align 2
  %conv1847 = sext i16 %1315 to i32
  %add1848 = add nsw i32 %conv1847, 8
  %1316 = load i32, i32* %img_height, align 4
  %1317 = load i32, i32* %img_width, align 4
  %call1849 = call zeroext i16 %1312(i16** %1313, i32 %conv1846, i32 %add1848, i32 %1316, i32 %1317)
  %conv1850 = zext i16 %call1849 to i32
  %1318 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1319 = load i16**, i16*** %ref2_pic, align 8
  %1320 = load i16, i16* %ry, align 2
  %conv1851 = sext i16 %1320 to i32
  %1321 = load i16, i16* %rx0, align 2
  %conv1852 = sext i16 %1321 to i32
  %add1853 = add nsw i32 %conv1852, 8
  %1322 = load i32, i32* %img_height, align 4
  %1323 = load i32, i32* %img_width, align 4
  %call1854 = call zeroext i16 %1318(i16** %1319, i32 %conv1851, i32 %add1853, i32 %1322, i32 %1323)
  %conv1855 = zext i16 %call1854 to i32
  %add1856 = add nsw i32 %conv1850, %conv1855
  %shr1857 = ashr i32 %add1856, 2
  %sub1858 = sub nsw i32 %conv1845, %shr1857
  %1324 = load i32*, i32** %d, align 8
  %incdec.ptr1859 = getelementptr inbounds i32, i32* %1324, i32 1
  store i32* %incdec.ptr1859, i32** %d, align 8
  store i32 %sub1858, i32* %1324, align 4
  %1325 = load i16, i16* %x0, align 2
  %conv1860 = sext i16 %1325 to i32
  %add1861 = add nsw i32 %conv1860, 3
  %idxprom1862 = sext i32 %add1861 to i64
  %1326 = load i16*, i16** %orig_line, align 8
  %arrayidx1863 = getelementptr inbounds i16, i16* %1326, i64 %idxprom1862
  %1327 = load i16, i16* %arrayidx1863, align 2
  %conv1864 = zext i16 %1327 to i32
  %1328 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1329 = load i16**, i16*** %ref1_pic, align 8
  %1330 = load i16, i16* %sy, align 2
  %conv1865 = sext i16 %1330 to i32
  %1331 = load i16, i16* %sx0, align 2
  %conv1866 = sext i16 %1331 to i32
  %add1867 = add nsw i32 %conv1866, 12
  %1332 = load i32, i32* %img_height, align 4
  %1333 = load i32, i32* %img_width, align 4
  %call1868 = call zeroext i16 %1328(i16** %1329, i32 %conv1865, i32 %add1867, i32 %1332, i32 %1333)
  %conv1869 = zext i16 %call1868 to i32
  %1334 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1335 = load i16**, i16*** %ref2_pic, align 8
  %1336 = load i16, i16* %ry, align 2
  %conv1870 = sext i16 %1336 to i32
  %1337 = load i16, i16* %rx0, align 2
  %conv1871 = sext i16 %1337 to i32
  %add1872 = add nsw i32 %conv1871, 12
  %1338 = load i32, i32* %img_height, align 4
  %1339 = load i32, i32* %img_width, align 4
  %call1873 = call zeroext i16 %1334(i16** %1335, i32 %conv1870, i32 %add1872, i32 %1338, i32 %1339)
  %conv1874 = zext i16 %call1873 to i32
  %add1875 = add nsw i32 %conv1869, %conv1874
  %shr1876 = ashr i32 %add1875, 2
  %sub1877 = sub nsw i32 %conv1864, %shr1876
  %1340 = load i32*, i32** %d, align 8
  %incdec.ptr1878 = getelementptr inbounds i32, i32* %1340, i32 1
  store i32* %incdec.ptr1878, i32** %d, align 8
  store i32 %sub1877, i32* %1340, align 4
  %1341 = load i16, i16* %sy0, align 2
  %conv1879 = sext i16 %1341 to i32
  %add1880 = add nsw i32 %conv1879, 8
  %conv1881 = trunc i32 %add1880 to i16
  store i16 %conv1881, i16* %sy, align 2
  %1342 = load i16, i16* %ry0, align 2
  %conv1882 = sext i16 %1342 to i32
  %add1883 = add nsw i32 %conv1882, 8
  %conv1884 = trunc i32 %add1883 to i16
  store i16 %conv1884, i16* %ry, align 2
  %1343 = load i16, i16* %y0, align 2
  %conv1885 = sext i16 %1343 to i32
  %add1886 = add nsw i32 %conv1885, 2
  %idxprom1887 = sext i32 %add1886 to i64
  %1344 = load i16**, i16*** %orig_pic.addr, align 8
  %arrayidx1888 = getelementptr inbounds i16*, i16** %1344, i64 %idxprom1887
  %1345 = load i16*, i16** %arrayidx1888, align 8
  store i16* %1345, i16** %orig_line, align 8
  %1346 = load i16, i16* %x0, align 2
  %idxprom1889 = sext i16 %1346 to i64
  %1347 = load i16*, i16** %orig_line, align 8
  %arrayidx1890 = getelementptr inbounds i16, i16* %1347, i64 %idxprom1889
  %1348 = load i16, i16* %arrayidx1890, align 2
  %conv1891 = zext i16 %1348 to i32
  %1349 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1350 = load i16**, i16*** %ref1_pic, align 8
  %1351 = load i16, i16* %sy, align 2
  %conv1892 = sext i16 %1351 to i32
  %1352 = load i16, i16* %sx0, align 2
  %conv1893 = sext i16 %1352 to i32
  %1353 = load i32, i32* %img_height, align 4
  %1354 = load i32, i32* %img_width, align 4
  %call1894 = call zeroext i16 %1349(i16** %1350, i32 %conv1892, i32 %conv1893, i32 %1353, i32 %1354)
  %conv1895 = zext i16 %call1894 to i32
  %1355 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1356 = load i16**, i16*** %ref2_pic, align 8
  %1357 = load i16, i16* %ry, align 2
  %conv1896 = sext i16 %1357 to i32
  %1358 = load i16, i16* %rx0, align 2
  %conv1897 = sext i16 %1358 to i32
  %1359 = load i32, i32* %img_height, align 4
  %1360 = load i32, i32* %img_width, align 4
  %call1898 = call zeroext i16 %1355(i16** %1356, i32 %conv1896, i32 %conv1897, i32 %1359, i32 %1360)
  %conv1899 = zext i16 %call1898 to i32
  %add1900 = add nsw i32 %conv1895, %conv1899
  %shr1901 = ashr i32 %add1900, 1
  %sub1902 = sub nsw i32 %conv1891, %shr1901
  %1361 = load i32*, i32** %d, align 8
  %incdec.ptr1903 = getelementptr inbounds i32, i32* %1361, i32 1
  store i32* %incdec.ptr1903, i32** %d, align 8
  store i32 %sub1902, i32* %1361, align 4
  %1362 = load i16, i16* %x0, align 2
  %conv1904 = sext i16 %1362 to i32
  %add1905 = add nsw i32 %conv1904, 1
  %idxprom1906 = sext i32 %add1905 to i64
  %1363 = load i16*, i16** %orig_line, align 8
  %arrayidx1907 = getelementptr inbounds i16, i16* %1363, i64 %idxprom1906
  %1364 = load i16, i16* %arrayidx1907, align 2
  %conv1908 = zext i16 %1364 to i32
  %1365 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1366 = load i16**, i16*** %ref1_pic, align 8
  %1367 = load i16, i16* %sy, align 2
  %conv1909 = sext i16 %1367 to i32
  %1368 = load i16, i16* %sx0, align 2
  %conv1910 = sext i16 %1368 to i32
  %add1911 = add nsw i32 %conv1910, 4
  %1369 = load i32, i32* %img_height, align 4
  %1370 = load i32, i32* %img_width, align 4
  %call1912 = call zeroext i16 %1365(i16** %1366, i32 %conv1909, i32 %add1911, i32 %1369, i32 %1370)
  %conv1913 = zext i16 %call1912 to i32
  %1371 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1372 = load i16**, i16*** %ref2_pic, align 8
  %1373 = load i16, i16* %ry, align 2
  %conv1914 = sext i16 %1373 to i32
  %1374 = load i16, i16* %rx0, align 2
  %conv1915 = sext i16 %1374 to i32
  %add1916 = add nsw i32 %conv1915, 4
  %1375 = load i32, i32* %img_height, align 4
  %1376 = load i32, i32* %img_width, align 4
  %call1917 = call zeroext i16 %1371(i16** %1372, i32 %conv1914, i32 %add1916, i32 %1375, i32 %1376)
  %conv1918 = zext i16 %call1917 to i32
  %add1919 = add nsw i32 %conv1913, %conv1918
  %shr1920 = ashr i32 %add1919, 1
  %sub1921 = sub nsw i32 %conv1908, %shr1920
  %1377 = load i32*, i32** %d, align 8
  %incdec.ptr1922 = getelementptr inbounds i32, i32* %1377, i32 1
  store i32* %incdec.ptr1922, i32** %d, align 8
  store i32 %sub1921, i32* %1377, align 4
  %1378 = load i16, i16* %x0, align 2
  %conv1923 = sext i16 %1378 to i32
  %add1924 = add nsw i32 %conv1923, 2
  %idxprom1925 = sext i32 %add1924 to i64
  %1379 = load i16*, i16** %orig_line, align 8
  %arrayidx1926 = getelementptr inbounds i16, i16* %1379, i64 %idxprom1925
  %1380 = load i16, i16* %arrayidx1926, align 2
  %conv1927 = zext i16 %1380 to i32
  %1381 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1382 = load i16**, i16*** %ref1_pic, align 8
  %1383 = load i16, i16* %sy, align 2
  %conv1928 = sext i16 %1383 to i32
  %1384 = load i16, i16* %sx0, align 2
  %conv1929 = sext i16 %1384 to i32
  %add1930 = add nsw i32 %conv1929, 8
  %1385 = load i32, i32* %img_height, align 4
  %1386 = load i32, i32* %img_width, align 4
  %call1931 = call zeroext i16 %1381(i16** %1382, i32 %conv1928, i32 %add1930, i32 %1385, i32 %1386)
  %conv1932 = zext i16 %call1931 to i32
  %1387 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1388 = load i16**, i16*** %ref2_pic, align 8
  %1389 = load i16, i16* %ry, align 2
  %conv1933 = sext i16 %1389 to i32
  %1390 = load i16, i16* %rx0, align 2
  %conv1934 = sext i16 %1390 to i32
  %add1935 = add nsw i32 %conv1934, 8
  %1391 = load i32, i32* %img_height, align 4
  %1392 = load i32, i32* %img_width, align 4
  %call1936 = call zeroext i16 %1387(i16** %1388, i32 %conv1933, i32 %add1935, i32 %1391, i32 %1392)
  %conv1937 = zext i16 %call1936 to i32
  %add1938 = add nsw i32 %conv1932, %conv1937
  %shr1939 = ashr i32 %add1938, 1
  %sub1940 = sub nsw i32 %conv1927, %shr1939
  %1393 = load i32*, i32** %d, align 8
  %incdec.ptr1941 = getelementptr inbounds i32, i32* %1393, i32 1
  store i32* %incdec.ptr1941, i32** %d, align 8
  store i32 %sub1940, i32* %1393, align 4
  %1394 = load i16, i16* %x0, align 2
  %conv1942 = sext i16 %1394 to i32
  %add1943 = add nsw i32 %conv1942, 3
  %idxprom1944 = sext i32 %add1943 to i64
  %1395 = load i16*, i16** %orig_line, align 8
  %arrayidx1945 = getelementptr inbounds i16, i16* %1395, i64 %idxprom1944
  %1396 = load i16, i16* %arrayidx1945, align 2
  %conv1946 = zext i16 %1396 to i32
  %1397 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1398 = load i16**, i16*** %ref1_pic, align 8
  %1399 = load i16, i16* %sy, align 2
  %conv1947 = sext i16 %1399 to i32
  %1400 = load i16, i16* %sx0, align 2
  %conv1948 = sext i16 %1400 to i32
  %add1949 = add nsw i32 %conv1948, 12
  %1401 = load i32, i32* %img_height, align 4
  %1402 = load i32, i32* %img_width, align 4
  %call1950 = call zeroext i16 %1397(i16** %1398, i32 %conv1947, i32 %add1949, i32 %1401, i32 %1402)
  %conv1951 = zext i16 %call1950 to i32
  %1403 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1404 = load i16**, i16*** %ref2_pic, align 8
  %1405 = load i16, i16* %ry, align 2
  %conv1952 = sext i16 %1405 to i32
  %1406 = load i16, i16* %rx0, align 2
  %conv1953 = sext i16 %1406 to i32
  %add1954 = add nsw i32 %conv1953, 12
  %1407 = load i32, i32* %img_height, align 4
  %1408 = load i32, i32* %img_width, align 4
  %call1955 = call zeroext i16 %1403(i16** %1404, i32 %conv1952, i32 %add1954, i32 %1407, i32 %1408)
  %conv1956 = zext i16 %call1955 to i32
  %add1957 = add nsw i32 %conv1951, %conv1956
  %shr1958 = ashr i32 %add1957, 1
  %sub1959 = sub nsw i32 %conv1946, %shr1958
  %1409 = load i32*, i32** %d, align 8
  %incdec.ptr1960 = getelementptr inbounds i32, i32* %1409, i32 1
  store i32* %incdec.ptr1960, i32** %d, align 8
  store i32 %sub1959, i32* %1409, align 4
  %1410 = load i16, i16* %sy0, align 2
  %conv1961 = sext i16 %1410 to i32
  %add1962 = add nsw i32 %conv1961, 12
  %conv1963 = trunc i32 %add1962 to i16
  store i16 %conv1963, i16* %sy, align 2
  %1411 = load i16, i16* %ry0, align 2
  %conv1964 = sext i16 %1411 to i32
  %add1965 = add nsw i32 %conv1964, 12
  %conv1966 = trunc i32 %add1965 to i16
  store i16 %conv1966, i16* %ry, align 2
  %1412 = load i16, i16* %y0, align 2
  %conv1967 = sext i16 %1412 to i32
  %add1968 = add nsw i32 %conv1967, 3
  %idxprom1969 = sext i32 %add1968 to i64
  %1413 = load i16**, i16*** %orig_pic.addr, align 8
  %arrayidx1970 = getelementptr inbounds i16*, i16** %1413, i64 %idxprom1969
  %1414 = load i16*, i16** %arrayidx1970, align 8
  store i16* %1414, i16** %orig_line, align 8
  %1415 = load i16, i16* %x0, align 2
  %idxprom1971 = sext i16 %1415 to i64
  %1416 = load i16*, i16** %orig_line, align 8
  %arrayidx1972 = getelementptr inbounds i16, i16* %1416, i64 %idxprom1971
  %1417 = load i16, i16* %arrayidx1972, align 2
  %conv1973 = zext i16 %1417 to i32
  %1418 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1419 = load i16**, i16*** %ref1_pic, align 8
  %1420 = load i16, i16* %sy, align 2
  %conv1974 = sext i16 %1420 to i32
  %1421 = load i16, i16* %sx0, align 2
  %conv1975 = sext i16 %1421 to i32
  %1422 = load i32, i32* %img_height, align 4
  %1423 = load i32, i32* %img_width, align 4
  %call1976 = call zeroext i16 %1418(i16** %1419, i32 %conv1974, i32 %conv1975, i32 %1422, i32 %1423)
  %conv1977 = zext i16 %call1976 to i32
  %1424 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1425 = load i16**, i16*** %ref2_pic, align 8
  %1426 = load i16, i16* %ry, align 2
  %conv1978 = sext i16 %1426 to i32
  %1427 = load i16, i16* %rx0, align 2
  %conv1979 = sext i16 %1427 to i32
  %1428 = load i32, i32* %img_height, align 4
  %1429 = load i32, i32* %img_width, align 4
  %call1980 = call zeroext i16 %1424(i16** %1425, i32 %conv1978, i32 %conv1979, i32 %1428, i32 %1429)
  %conv1981 = zext i16 %call1980 to i32
  %add1982 = add nsw i32 %conv1977, %conv1981
  %shr1983 = ashr i32 %add1982, 1
  %sub1984 = sub nsw i32 %conv1973, %shr1983
  %1430 = load i32*, i32** %d, align 8
  %incdec.ptr1985 = getelementptr inbounds i32, i32* %1430, i32 1
  store i32* %incdec.ptr1985, i32** %d, align 8
  store i32 %sub1984, i32* %1430, align 4
  %1431 = load i16, i16* %x0, align 2
  %conv1986 = sext i16 %1431 to i32
  %add1987 = add nsw i32 %conv1986, 1
  %idxprom1988 = sext i32 %add1987 to i64
  %1432 = load i16*, i16** %orig_line, align 8
  %arrayidx1989 = getelementptr inbounds i16, i16* %1432, i64 %idxprom1988
  %1433 = load i16, i16* %arrayidx1989, align 2
  %conv1990 = zext i16 %1433 to i32
  %1434 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1435 = load i16**, i16*** %ref1_pic, align 8
  %1436 = load i16, i16* %sy, align 2
  %conv1991 = sext i16 %1436 to i32
  %1437 = load i16, i16* %sx0, align 2
  %conv1992 = sext i16 %1437 to i32
  %add1993 = add nsw i32 %conv1992, 4
  %1438 = load i32, i32* %img_height, align 4
  %1439 = load i32, i32* %img_width, align 4
  %call1994 = call zeroext i16 %1434(i16** %1435, i32 %conv1991, i32 %add1993, i32 %1438, i32 %1439)
  %conv1995 = zext i16 %call1994 to i32
  %1440 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1441 = load i16**, i16*** %ref2_pic, align 8
  %1442 = load i16, i16* %ry, align 2
  %conv1996 = sext i16 %1442 to i32
  %1443 = load i16, i16* %rx0, align 2
  %conv1997 = sext i16 %1443 to i32
  %add1998 = add nsw i32 %conv1997, 4
  %1444 = load i32, i32* %img_height, align 4
  %1445 = load i32, i32* %img_width, align 4
  %call1999 = call zeroext i16 %1440(i16** %1441, i32 %conv1996, i32 %add1998, i32 %1444, i32 %1445)
  %conv2000 = zext i16 %call1999 to i32
  %add2001 = add nsw i32 %conv1995, %conv2000
  %shr2002 = ashr i32 %add2001, 1
  %sub2003 = sub nsw i32 %conv1990, %shr2002
  %1446 = load i32*, i32** %d, align 8
  %incdec.ptr2004 = getelementptr inbounds i32, i32* %1446, i32 1
  store i32* %incdec.ptr2004, i32** %d, align 8
  store i32 %sub2003, i32* %1446, align 4
  %1447 = load i16, i16* %x0, align 2
  %conv2005 = sext i16 %1447 to i32
  %add2006 = add nsw i32 %conv2005, 2
  %idxprom2007 = sext i32 %add2006 to i64
  %1448 = load i16*, i16** %orig_line, align 8
  %arrayidx2008 = getelementptr inbounds i16, i16* %1448, i64 %idxprom2007
  %1449 = load i16, i16* %arrayidx2008, align 2
  %conv2009 = zext i16 %1449 to i32
  %1450 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1451 = load i16**, i16*** %ref1_pic, align 8
  %1452 = load i16, i16* %sy, align 2
  %conv2010 = sext i16 %1452 to i32
  %1453 = load i16, i16* %sx0, align 2
  %conv2011 = sext i16 %1453 to i32
  %add2012 = add nsw i32 %conv2011, 8
  %1454 = load i32, i32* %img_height, align 4
  %1455 = load i32, i32* %img_width, align 4
  %call2013 = call zeroext i16 %1450(i16** %1451, i32 %conv2010, i32 %add2012, i32 %1454, i32 %1455)
  %conv2014 = zext i16 %call2013 to i32
  %1456 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1457 = load i16**, i16*** %ref2_pic, align 8
  %1458 = load i16, i16* %ry, align 2
  %conv2015 = sext i16 %1458 to i32
  %1459 = load i16, i16* %rx0, align 2
  %conv2016 = sext i16 %1459 to i32
  %add2017 = add nsw i32 %conv2016, 8
  %1460 = load i32, i32* %img_height, align 4
  %1461 = load i32, i32* %img_width, align 4
  %call2018 = call zeroext i16 %1456(i16** %1457, i32 %conv2015, i32 %add2017, i32 %1460, i32 %1461)
  %conv2019 = zext i16 %call2018 to i32
  %add2020 = add nsw i32 %conv2014, %conv2019
  %shr2021 = ashr i32 %add2020, 1
  %sub2022 = sub nsw i32 %conv2009, %shr2021
  %1462 = load i32*, i32** %d, align 8
  %incdec.ptr2023 = getelementptr inbounds i32, i32* %1462, i32 1
  store i32* %incdec.ptr2023, i32** %d, align 8
  store i32 %sub2022, i32* %1462, align 4
  %1463 = load i16, i16* %x0, align 2
  %conv2024 = sext i16 %1463 to i32
  %add2025 = add nsw i32 %conv2024, 3
  %idxprom2026 = sext i32 %add2025 to i64
  %1464 = load i16*, i16** %orig_line, align 8
  %arrayidx2027 = getelementptr inbounds i16, i16* %1464, i64 %idxprom2026
  %1465 = load i16, i16* %arrayidx2027, align 2
  %conv2028 = zext i16 %1465 to i32
  %1466 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1467 = load i16**, i16*** %ref1_pic, align 8
  %1468 = load i16, i16* %sy, align 2
  %conv2029 = sext i16 %1468 to i32
  %1469 = load i16, i16* %sx0, align 2
  %conv2030 = sext i16 %1469 to i32
  %add2031 = add nsw i32 %conv2030, 12
  %1470 = load i32, i32* %img_height, align 4
  %1471 = load i32, i32* %img_width, align 4
  %call2032 = call zeroext i16 %1466(i16** %1467, i32 %conv2029, i32 %add2031, i32 %1470, i32 %1471)
  %conv2033 = zext i16 %call2032 to i32
  %1472 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1473 = load i16**, i16*** %ref2_pic, align 8
  %1474 = load i16, i16* %ry, align 2
  %conv2034 = sext i16 %1474 to i32
  %1475 = load i16, i16* %rx0, align 2
  %conv2035 = sext i16 %1475 to i32
  %add2036 = add nsw i32 %conv2035, 12
  %1476 = load i32, i32* %img_height, align 4
  %1477 = load i32, i32* %img_width, align 4
  %call2037 = call zeroext i16 %1472(i16** %1473, i32 %conv2034, i32 %add2036, i32 %1476, i32 %1477)
  %conv2038 = zext i16 %call2037 to i32
  %add2039 = add nsw i32 %conv2033, %conv2038
  %shr2040 = ashr i32 %add2039, 1
  %sub2041 = sub nsw i32 %conv2028, %shr2040
  %1478 = load i32*, i32** %d, align 8
  store i32 %sub2041, i32* %1478, align 4
  %1479 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %AllowTransform8x82042 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %1479, i32 0, i32 123
  %1480 = load i32, i32* %AllowTransform8x82042, align 4
  %tobool2043 = icmp ne i32 %1480, 0
  br i1 %tobool2043, label %if.else.2055, label %if.then.2044

if.then.2044:                                     ; preds = %for.body.1709
  %arraydecay2045 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i32 0, i32 0
  %1481 = load i32, i32* %halfpelhadamard, align 4
  %call2046 = call i32 @SATD(i32* %arraydecay2045, i32 %1481)
  %1482 = load i16, i16* %mcost, align 2
  %conv2047 = sext i16 %1482 to i32
  %add2048 = add nsw i32 %conv2047, %call2046
  %conv2049 = trunc i32 %add2048 to i16
  store i16 %conv2049, i16* %mcost, align 2
  %conv2050 = sext i16 %conv2049 to i32
  %1483 = load i32, i32* %min_mcost.addr, align 4
  %cmp2051 = icmp sgt i32 %conv2050, %1483
  br i1 %cmp2051, label %if.then.2053, label %if.end.2054

if.then.2053:                                     ; preds = %if.then.2044
  store i16 1, i16* %abort_search, align 2
  br label %for.end.2086

if.end.2054:                                      ; preds = %if.then.2044
  br label %if.end.2081

if.else.2055:                                     ; preds = %for.body.1709
  store i32 0, i32* %j, align 4
  store i32 0, i32* %k, align 4
  br label %for.cond.2056

for.cond.2056:                                    ; preds = %for.inc.2078, %if.else.2055
  %1484 = load i32, i32* %j, align 4
  %cmp2057 = icmp slt i32 %1484, 4
  br i1 %cmp2057, label %for.body.2059, label %for.end.2080

for.body.2059:                                    ; preds = %for.cond.2056
  store i32 0, i32* %i, align 4
  br label %for.cond.2060

for.cond.2060:                                    ; preds = %for.inc.2074, %for.body.2059
  %1485 = load i32, i32* %i, align 4
  %cmp2061 = icmp slt i32 %1485, 4
  br i1 %cmp2061, label %for.body.2063, label %for.end.2077

for.body.2063:                                    ; preds = %for.cond.2060
  %1486 = load i32, i32* %k, align 4
  %idxprom2064 = sext i32 %1486 to i64
  %arrayidx2065 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i32 0, i64 %idxprom2064
  %1487 = load i32, i32* %arrayidx2065, align 4
  %1488 = load i16, i16* %x0, align 2
  %conv2066 = sext i16 %1488 to i32
  %1489 = load i32, i32* %i, align 4
  %add2067 = add nsw i32 %conv2066, %1489
  %idxprom2068 = sext i32 %add2067 to i64
  %1490 = load i16, i16* %y0, align 2
  %conv2069 = sext i16 %1490 to i32
  %1491 = load i32, i32* %j, align 4
  %add2070 = add nsw i32 %conv2069, %1491
  %idxprom2071 = sext i32 %add2070 to i64
  %arrayidx2072 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %curr_diff, i32 0, i64 %idxprom2071
  %arrayidx2073 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx2072, i32 0, i64 %idxprom2068
  store i32 %1487, i32* %arrayidx2073, align 4
  br label %for.inc.2074

for.inc.2074:                                     ; preds = %for.body.2063
  %1492 = load i32, i32* %i, align 4
  %inc2075 = add nsw i32 %1492, 1
  store i32 %inc2075, i32* %i, align 4
  %1493 = load i32, i32* %k, align 4
  %inc2076 = add nsw i32 %1493, 1
  store i32 %inc2076, i32* %k, align 4
  br label %for.cond.2060

for.end.2077:                                     ; preds = %for.cond.2060
  br label %for.inc.2078

for.inc.2078:                                     ; preds = %for.end.2077
  %1494 = load i32, i32* %j, align 4
  %inc2079 = add nsw i32 %1494, 1
  store i32 %inc2079, i32* %j, align 4
  br label %for.cond.2056

for.end.2080:                                     ; preds = %for.cond.2056
  br label %if.end.2081

if.end.2081:                                      ; preds = %for.end.2080, %if.end.2054
  br label %for.inc.2082

for.inc.2082:                                     ; preds = %if.end.2081
  %1495 = load i16, i16* %x0, align 2
  %conv2083 = sext i16 %1495 to i32
  %add2084 = add nsw i32 %conv2083, 4
  %conv2085 = trunc i32 %add2084 to i16
  store i16 %conv2085, i16* %x0, align 2
  br label %for.cond.1704

for.end.2086:                                     ; preds = %if.then.2053, %for.cond.1704
  br label %if.end.2087

if.end.2087:                                      ; preds = %for.end.2086, %for.end.1702
  br label %for.inc.2088

for.inc.2088:                                     ; preds = %if.end.2087
  %1496 = load i16, i16* %y0, align 2
  %conv2089 = sext i16 %1496 to i32
  %add2090 = add nsw i32 %conv2089, 4
  %conv2091 = trunc i32 %add2090 to i16
  store i16 %conv2091, i16* %y0, align 2
  br label %for.cond.283

for.end.2092:                                     ; preds = %land.end
  %1497 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %AllowTransform8x82093 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %1497, i32 0, i32 123
  %1498 = load i32, i32* %AllowTransform8x82093, align 4
  %tobool2094 = icmp ne i32 %1498, 0
  br i1 %tobool2094, label %if.then.2095, label %if.end.2101

if.then.2095:                                     ; preds = %for.end.2092
  %arraydecay2096 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %curr_diff, i32 0, i32 0
  %1499 = load i32, i32* %halfpelhadamard, align 4
  %1500 = load i32, i32* %blocktype.addr, align 4
  %call2097 = call i32 @find_SATD([16 x i32]* %arraydecay2096, i32 %1499, i32 %1500)
  %1501 = load i16, i16* %mcost, align 2
  %conv2098 = sext i16 %1501 to i32
  %add2099 = add nsw i32 %conv2098, %call2097
  %conv2100 = trunc i32 %add2099 to i16
  store i16 %conv2100, i16* %mcost, align 2
  br label %if.end.2101

if.end.2101:                                      ; preds = %if.then.2095, %for.end.2092
  %1502 = load i16, i16* %mcost, align 2
  %conv2102 = sext i16 %1502 to i32
  %1503 = load i32, i32* %min_mcost.addr, align 4
  %cmp2103 = icmp slt i32 %conv2102, %1503
  br i1 %cmp2103, label %if.then.2105, label %if.end.2107

if.then.2105:                                     ; preds = %if.end.2101
  %1504 = load i16, i16* %mcost, align 2
  %conv2106 = sext i16 %1504 to i32
  store i32 %conv2106, i32* %min_mcost.addr, align 4
  %1505 = load i16, i16* %pos, align 2
  store i16 %1505, i16* %best_pos, align 2
  br label %if.end.2107

if.end.2107:                                      ; preds = %if.then.2105, %if.end.2101
  br label %for.inc.2108

for.inc.2108:                                     ; preds = %if.end.2107
  %1506 = load i16, i16* %pos, align 2
  %inc2109 = add i16 %1506, 1
  store i16 %inc2109, i16* %pos, align 2
  br label %for.cond

for.end.2110:                                     ; preds = %for.cond
  %1507 = load i16, i16* %best_pos, align 2
  %tobool2111 = icmp ne i16 %1507, 0
  br i1 %tobool2111, label %if.then.2112, label %if.end.2125

if.then.2112:                                     ; preds = %for.end.2110
  %1508 = load i16, i16* %best_pos, align 2
  %idxprom2113 = sext i16 %1508 to i64
  %1509 = load i32*, i32** @spiral_search_x, align 8
  %arrayidx2114 = getelementptr inbounds i32, i32* %1509, i64 %idxprom2113
  %1510 = load i32, i32* %arrayidx2114, align 4
  %shl2115 = shl i32 %1510, 1
  %1511 = load i16*, i16** %mv_x.addr, align 8
  %1512 = load i16, i16* %1511, align 2
  %conv2116 = sext i16 %1512 to i32
  %add2117 = add nsw i32 %conv2116, %shl2115
  %conv2118 = trunc i32 %add2117 to i16
  store i16 %conv2118, i16* %1511, align 2
  %1513 = load i16, i16* %best_pos, align 2
  %idxprom2119 = sext i16 %1513 to i64
  %1514 = load i32*, i32** @spiral_search_y, align 8
  %arrayidx2120 = getelementptr inbounds i32, i32* %1514, i64 %idxprom2119
  %1515 = load i32, i32* %arrayidx2120, align 4
  %shl2121 = shl i32 %1515, 1
  %1516 = load i16*, i16** %mv_y.addr, align 8
  %1517 = load i16, i16* %1516, align 2
  %conv2122 = sext i16 %1517 to i32
  %add2123 = add nsw i32 %conv2122, %shl2121
  %conv2124 = trunc i32 %add2123 to i16
  store i16 %conv2124, i16* %1516, align 2
  br label %if.end.2125

if.end.2125:                                      ; preds = %if.then.2112, %for.end.2110
  %1518 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamardqpel2126 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %1518, i32 0, i32 7
  %1519 = load i32, i32* %hadamardqpel2126, align 4
  %tobool2127 = icmp ne i32 %1519, 0
  br i1 %tobool2127, label %if.then.2128, label %if.end.2129

if.then.2128:                                     ; preds = %if.end.2125
  store i32 2147483647, i32* %min_mcost.addr, align 4
  br label %if.end.2129

if.end.2129:                                      ; preds = %if.then.2128, %if.end.2125
  %1520 = load i16, i16* %pic4_pix_x, align 2
  %conv2130 = sext i16 %1520 to i32
  %1521 = load i16*, i16** %mv_x.addr, align 8
  %1522 = load i16, i16* %1521, align 2
  %conv2131 = sext i16 %1522 to i32
  %add2132 = add nsw i32 %conv2130, %conv2131
  %cmp2133 = icmp sgt i32 %add2132, 1
  br i1 %cmp2133, label %land.lhs.true.2135, label %if.else.2158

land.lhs.true.2135:                               ; preds = %if.end.2129
  %1523 = load i16, i16* %pic4_pix_x, align 2
  %conv2136 = sext i16 %1523 to i32
  %1524 = load i16*, i16** %mv_x.addr, align 8
  %1525 = load i16, i16* %1524, align 2
  %conv2137 = sext i16 %1525 to i32
  %add2138 = add nsw i32 %conv2136, %conv2137
  %1526 = load i16, i16* %max_pos_x4, align 2
  %conv2139 = sext i16 %1526 to i32
  %sub2140 = sub nsw i32 %conv2139, 1
  %cmp2141 = icmp slt i32 %add2138, %sub2140
  br i1 %cmp2141, label %land.lhs.true.2143, label %if.else.2158

land.lhs.true.2143:                               ; preds = %land.lhs.true.2135
  %1527 = load i16, i16* %pic4_pix_y, align 2
  %conv2144 = sext i16 %1527 to i32
  %1528 = load i16*, i16** %mv_y.addr, align 8
  %1529 = load i16, i16* %1528, align 2
  %conv2145 = sext i16 %1529 to i32
  %add2146 = add nsw i32 %conv2144, %conv2145
  %cmp2147 = icmp sgt i32 %add2146, 1
  br i1 %cmp2147, label %land.lhs.true.2149, label %if.else.2158

land.lhs.true.2149:                               ; preds = %land.lhs.true.2143
  %1530 = load i16, i16* %pic4_pix_y, align 2
  %conv2150 = sext i16 %1530 to i32
  %1531 = load i16*, i16** %mv_y.addr, align 8
  %1532 = load i16, i16* %1531, align 2
  %conv2151 = sext i16 %1532 to i32
  %add2152 = add nsw i32 %conv2150, %conv2151
  %1533 = load i16, i16* %max_pos_y4, align 2
  %conv2153 = sext i16 %1533 to i32
  %sub2154 = sub nsw i32 %conv2153, 1
  %cmp2155 = icmp slt i32 %add2152, %sub2154
  br i1 %cmp2155, label %if.then.2157, label %if.else.2158

if.then.2157:                                     ; preds = %land.lhs.true.2149
  store i16 (i16**, i32, i32, i32, i32)* @FastPelY_14, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  br label %if.end.2159

if.else.2158:                                     ; preds = %land.lhs.true.2149, %land.lhs.true.2143, %land.lhs.true.2135, %if.end.2129
  store i16 (i16**, i32, i32, i32, i32)* @UMVPelY_14, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  br label %if.end.2159

if.end.2159:                                      ; preds = %if.else.2158, %if.then.2157
  store i16 0, i16* %best_pos, align 2
  %1534 = load i32, i32* %qpelstart, align 4
  %conv2160 = trunc i32 %1534 to i16
  store i16 %conv2160, i16* %pos, align 2
  br label %for.cond.2161

for.cond.2161:                                    ; preds = %for.inc.4033, %if.end.2159
  %1535 = load i16, i16* %pos, align 2
  %conv2162 = sext i16 %1535 to i32
  %1536 = load i32, i32* %search_pos4.addr, align 4
  %cmp2163 = icmp slt i32 %conv2162, %1536
  br i1 %cmp2163, label %for.body.2165, label %for.end.4035

for.body.2165:                                    ; preds = %for.cond.2161
  %1537 = load i16*, i16** %mv_x.addr, align 8
  %1538 = load i16, i16* %1537, align 2
  %conv2166 = sext i16 %1538 to i32
  %1539 = load i16, i16* %pos, align 2
  %idxprom2167 = sext i16 %1539 to i64
  %1540 = load i32*, i32** @spiral_search_x, align 8
  %arrayidx2168 = getelementptr inbounds i32, i32* %1540, i64 %idxprom2167
  %1541 = load i32, i32* %arrayidx2168, align 4
  %add2169 = add nsw i32 %conv2166, %1541
  %conv2170 = trunc i32 %add2169 to i16
  store i16 %conv2170, i16* %cand_mv_x, align 2
  %1542 = load i16*, i16** %mv_y.addr, align 8
  %1543 = load i16, i16* %1542, align 2
  %conv2171 = sext i16 %1543 to i32
  %1544 = load i16, i16* %pos, align 2
  %idxprom2172 = sext i16 %1544 to i64
  %1545 = load i32*, i32** @spiral_search_y, align 8
  %arrayidx2173 = getelementptr inbounds i32, i32* %1545, i64 %idxprom2172
  %1546 = load i32, i32* %arrayidx2173, align 4
  %add2174 = add nsw i32 %conv2171, %1546
  %conv2175 = trunc i32 %add2174 to i16
  store i16 %conv2175, i16* %cand_mv_y, align 2
  %1547 = load i32, i32* %lambda_factor, align 4
  %1548 = load i16, i16* %cand_mv_x, align 2
  %conv2176 = sext i16 %1548 to i32
  %1549 = load i16, i16* %mv_shift, align 2
  %conv2177 = sext i16 %1549 to i32
  %shl2178 = shl i32 %conv2176, %conv2177
  %1550 = load i16, i16* %pred_mv_x.addr, align 2
  %conv2179 = sext i16 %1550 to i32
  %sub2180 = sub nsw i32 %shl2178, %conv2179
  %idxprom2181 = sext i32 %sub2180 to i64
  %1551 = load i32*, i32** @mvbits, align 8
  %arrayidx2182 = getelementptr inbounds i32, i32* %1551, i64 %idxprom2181
  %1552 = load i32, i32* %arrayidx2182, align 4
  %1553 = load i16, i16* %cand_mv_y, align 2
  %conv2183 = sext i16 %1553 to i32
  %1554 = load i16, i16* %mv_shift, align 2
  %conv2184 = sext i16 %1554 to i32
  %shl2185 = shl i32 %conv2183, %conv2184
  %1555 = load i16, i16* %pred_mv_y.addr, align 2
  %conv2186 = sext i16 %1555 to i32
  %sub2187 = sub nsw i32 %shl2185, %conv2186
  %idxprom2188 = sext i32 %sub2187 to i64
  %1556 = load i32*, i32** @mvbits, align 8
  %arrayidx2189 = getelementptr inbounds i32, i32* %1556, i64 %idxprom2188
  %1557 = load i32, i32* %arrayidx2189, align 4
  %add2190 = add nsw i32 %1552, %1557
  %mul2191 = mul nsw i32 %1547, %add2190
  %shr2192 = ashr i32 %mul2191, 16
  %conv2193 = trunc i32 %shr2192 to i16
  store i16 %conv2193, i16* %mcost, align 2
  store i16 0, i16* %y0, align 2
  store i16 0, i16* %abort_search, align 2
  br label %for.cond.2194

for.cond.2194:                                    ; preds = %for.inc.4012, %for.body.2165
  %1558 = load i16, i16* %y0, align 2
  %conv2195 = sext i16 %1558 to i32
  %1559 = load i16, i16* %blocksize_y, align 2
  %conv2196 = sext i16 %1559 to i32
  %cmp2197 = icmp slt i32 %conv2195, %conv2196
  br i1 %cmp2197, label %land.rhs.2199, label %land.end.2202

land.rhs.2199:                                    ; preds = %for.cond.2194
  %1560 = load i16, i16* %abort_search, align 2
  %tobool2200 = icmp ne i16 %1560, 0
  %lnot2201 = xor i1 %tobool2200, true
  br label %land.end.2202

land.end.2202:                                    ; preds = %land.rhs.2199, %for.cond.2194
  %1561 = phi i1 [ false, %for.cond.2194 ], [ %lnot2201, %land.rhs.2199 ]
  br i1 %1561, label %for.body.2203, label %for.end.4016

for.body.2203:                                    ; preds = %land.end.2202
  %1562 = load i32, i32* %pic_pix_y.addr, align 4
  %1563 = load i16, i16* %y0, align 2
  %conv2204 = sext i16 %1563 to i32
  %add2205 = add nsw i32 %1562, %conv2204
  %shl2206 = shl i32 %add2205, 2
  %1564 = load i16*, i16** %s_mv_y.addr, align 8
  %1565 = load i16, i16* %1564, align 2
  %conv2207 = sext i16 %1565 to i32
  %add2208 = add nsw i32 %shl2206, %conv2207
  %conv2209 = trunc i32 %add2208 to i16
  store i16 %conv2209, i16* %sy0, align 2
  %1566 = load i32, i32* %pic_pix_y.addr, align 4
  %1567 = load i16, i16* %y0, align 2
  %conv2210 = sext i16 %1567 to i32
  %add2211 = add nsw i32 %1566, %conv2210
  %shl2212 = shl i32 %add2211, 2
  %1568 = load i16, i16* %cand_mv_y, align 2
  %conv2213 = sext i16 %1568 to i32
  %add2214 = add nsw i32 %shl2212, %conv2213
  %conv2215 = trunc i32 %add2214 to i16
  store i16 %conv2215, i16* %ry0, align 2
  %1569 = load i16, i16* %apply_weights, align 2
  %tobool2216 = icmp ne i16 %1569, 0
  br i1 %tobool2216, label %if.then.2217, label %if.else.3626

if.then.2217:                                     ; preds = %for.body.2203
  store i16 0, i16* %x0, align 2
  br label %for.cond.2218

for.cond.2218:                                    ; preds = %for.inc.3621, %if.then.2217
  %1570 = load i16, i16* %x0, align 2
  %conv2219 = sext i16 %1570 to i32
  %1571 = load i16, i16* %blocksize_x, align 2
  %conv2220 = sext i16 %1571 to i32
  %cmp2221 = icmp slt i32 %conv2219, %conv2220
  br i1 %cmp2221, label %for.body.2223, label %for.end.3625

for.body.2223:                                    ; preds = %for.cond.2218
  %1572 = load i16, i16* %sy0, align 2
  store i16 %1572, i16* %sy, align 2
  %1573 = load i32, i32* %pic_pix_x.addr, align 4
  %1574 = load i16, i16* %x0, align 2
  %conv2224 = sext i16 %1574 to i32
  %add2225 = add nsw i32 %1573, %conv2224
  %shl2226 = shl i32 %add2225, 2
  %1575 = load i16*, i16** %s_mv_x.addr, align 8
  %1576 = load i16, i16* %1575, align 2
  %conv2227 = sext i16 %1576 to i32
  %add2228 = add nsw i32 %shl2226, %conv2227
  %conv2229 = trunc i32 %add2228 to i16
  store i16 %conv2229, i16* %sx0, align 2
  %1577 = load i32, i32* %pic_pix_x.addr, align 4
  %1578 = load i16, i16* %x0, align 2
  %conv2230 = sext i16 %1578 to i32
  %add2231 = add nsw i32 %1577, %conv2230
  %shl2232 = shl i32 %add2231, 2
  %1579 = load i16, i16* %cand_mv_x, align 2
  %conv2233 = sext i16 %1579 to i32
  %add2234 = add nsw i32 %shl2232, %conv2233
  %conv2235 = trunc i32 %add2234 to i16
  store i16 %conv2235, i16* %rx0, align 2
  %arraydecay2236 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i32 0, i32 0
  store i32* %arraydecay2236, i32** %d, align 8
  %1580 = load i16, i16* %sy0, align 2
  store i16 %1580, i16* %sy, align 2
  %1581 = load i16, i16* %y0, align 2
  %idxprom2237 = sext i16 %1581 to i64
  %1582 = load i16**, i16*** %orig_pic.addr, align 8
  %arrayidx2238 = getelementptr inbounds i16*, i16** %1582, i64 %idxprom2237
  %1583 = load i16*, i16** %arrayidx2238, align 8
  store i16* %1583, i16** %orig_line, align 8
  %1584 = load i16, i16* %ry0, align 2
  store i16 %1584, i16* %ry, align 2
  %1585 = load i16, i16* %weightSpic, align 2
  %conv2239 = sext i16 %1585 to i32
  %1586 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1587 = load i16**, i16*** %ref1_pic, align 8
  %1588 = load i16, i16* %sy, align 2
  %conv2240 = sext i16 %1588 to i32
  %1589 = load i16, i16* %sx0, align 2
  %conv2241 = sext i16 %1589 to i32
  %1590 = load i32, i32* %img_height, align 4
  %1591 = load i32, i32* %img_width, align 4
  %call2242 = call zeroext i16 %1586(i16** %1587, i32 %conv2240, i32 %conv2241, i32 %1590, i32 %1591)
  %conv2243 = zext i16 %call2242 to i32
  %mul2244 = mul nsw i32 %conv2239, %conv2243
  %1592 = load i16, i16* %weightRpic, align 2
  %conv2245 = sext i16 %1592 to i32
  %1593 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1594 = load i16**, i16*** %ref2_pic, align 8
  %1595 = load i16, i16* %ry, align 2
  %conv2246 = sext i16 %1595 to i32
  %1596 = load i16, i16* %rx0, align 2
  %conv2247 = sext i16 %1596 to i32
  %1597 = load i32, i32* %img_height, align 4
  %1598 = load i32, i32* %img_width, align 4
  %call2248 = call zeroext i16 %1593(i16** %1594, i32 %conv2246, i32 %conv2247, i32 %1597, i32 %1598)
  %conv2249 = zext i16 %call2248 to i32
  %mul2250 = mul nsw i32 %conv2245, %conv2249
  %add2251 = add nsw i32 %mul2244, %mul2250
  %1599 = load i32, i32* @wp_luma_round, align 4
  %mul2252 = mul nsw i32 2, %1599
  %add2253 = add nsw i32 %add2251, %mul2252
  %1600 = load i32, i32* @luma_log_weight_denom, align 4
  %add2254 = add nsw i32 %1600, 1
  %shr2255 = ashr i32 %add2253, %add2254
  %1601 = load i16, i16* %offsetBi, align 2
  %conv2256 = sext i16 %1601 to i32
  %add2257 = add nsw i32 %shr2255, %conv2256
  %cmp2258 = icmp slt i32 %add2257, 0
  br i1 %cmp2258, label %cond.true.2260, label %cond.false.2261

cond.true.2260:                                   ; preds = %for.body.2223
  br label %cond.end.2308

cond.false.2261:                                  ; preds = %for.body.2223
  %1602 = load i16, i16* %weightSpic, align 2
  %conv2262 = sext i16 %1602 to i32
  %1603 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1604 = load i16**, i16*** %ref1_pic, align 8
  %1605 = load i16, i16* %sy, align 2
  %conv2263 = sext i16 %1605 to i32
  %1606 = load i16, i16* %sx0, align 2
  %conv2264 = sext i16 %1606 to i32
  %1607 = load i32, i32* %img_height, align 4
  %1608 = load i32, i32* %img_width, align 4
  %call2265 = call zeroext i16 %1603(i16** %1604, i32 %conv2263, i32 %conv2264, i32 %1607, i32 %1608)
  %conv2266 = zext i16 %call2265 to i32
  %mul2267 = mul nsw i32 %conv2262, %conv2266
  %1609 = load i16, i16* %weightRpic, align 2
  %conv2268 = sext i16 %1609 to i32
  %1610 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1611 = load i16**, i16*** %ref2_pic, align 8
  %1612 = load i16, i16* %ry, align 2
  %conv2269 = sext i16 %1612 to i32
  %1613 = load i16, i16* %rx0, align 2
  %conv2270 = sext i16 %1613 to i32
  %1614 = load i32, i32* %img_height, align 4
  %1615 = load i32, i32* %img_width, align 4
  %call2271 = call zeroext i16 %1610(i16** %1611, i32 %conv2269, i32 %conv2270, i32 %1614, i32 %1615)
  %conv2272 = zext i16 %call2271 to i32
  %mul2273 = mul nsw i32 %conv2268, %conv2272
  %add2274 = add nsw i32 %mul2267, %mul2273
  %1616 = load i32, i32* @wp_luma_round, align 4
  %mul2275 = mul nsw i32 2, %1616
  %add2276 = add nsw i32 %add2274, %mul2275
  %1617 = load i32, i32* @luma_log_weight_denom, align 4
  %add2277 = add nsw i32 %1617, 1
  %shr2278 = ashr i32 %add2276, %add2277
  %1618 = load i16, i16* %offsetBi, align 2
  %conv2279 = sext i16 %1618 to i32
  %add2280 = add nsw i32 %shr2278, %conv2279
  %1619 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value2281 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1619, i32 0, i32 155
  %1620 = load i32, i32* %max_imgpel_value2281, align 4
  %cmp2282 = icmp sgt i32 %add2280, %1620
  br i1 %cmp2282, label %cond.true.2284, label %cond.false.2286

cond.true.2284:                                   ; preds = %cond.false.2261
  %1621 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value2285 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1621, i32 0, i32 155
  %1622 = load i32, i32* %max_imgpel_value2285, align 4
  br label %cond.end.2306

cond.false.2286:                                  ; preds = %cond.false.2261
  %1623 = load i16, i16* %weightSpic, align 2
  %conv2287 = sext i16 %1623 to i32
  %1624 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1625 = load i16**, i16*** %ref1_pic, align 8
  %1626 = load i16, i16* %sy, align 2
  %conv2288 = sext i16 %1626 to i32
  %1627 = load i16, i16* %sx0, align 2
  %conv2289 = sext i16 %1627 to i32
  %1628 = load i32, i32* %img_height, align 4
  %1629 = load i32, i32* %img_width, align 4
  %call2290 = call zeroext i16 %1624(i16** %1625, i32 %conv2288, i32 %conv2289, i32 %1628, i32 %1629)
  %conv2291 = zext i16 %call2290 to i32
  %mul2292 = mul nsw i32 %conv2287, %conv2291
  %1630 = load i16, i16* %weightRpic, align 2
  %conv2293 = sext i16 %1630 to i32
  %1631 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1632 = load i16**, i16*** %ref2_pic, align 8
  %1633 = load i16, i16* %ry, align 2
  %conv2294 = sext i16 %1633 to i32
  %1634 = load i16, i16* %rx0, align 2
  %conv2295 = sext i16 %1634 to i32
  %1635 = load i32, i32* %img_height, align 4
  %1636 = load i32, i32* %img_width, align 4
  %call2296 = call zeroext i16 %1631(i16** %1632, i32 %conv2294, i32 %conv2295, i32 %1635, i32 %1636)
  %conv2297 = zext i16 %call2296 to i32
  %mul2298 = mul nsw i32 %conv2293, %conv2297
  %add2299 = add nsw i32 %mul2292, %mul2298
  %1637 = load i32, i32* @wp_luma_round, align 4
  %mul2300 = mul nsw i32 2, %1637
  %add2301 = add nsw i32 %add2299, %mul2300
  %1638 = load i32, i32* @luma_log_weight_denom, align 4
  %add2302 = add nsw i32 %1638, 1
  %shr2303 = ashr i32 %add2301, %add2302
  %1639 = load i16, i16* %offsetBi, align 2
  %conv2304 = sext i16 %1639 to i32
  %add2305 = add nsw i32 %shr2303, %conv2304
  br label %cond.end.2306

cond.end.2306:                                    ; preds = %cond.false.2286, %cond.true.2284
  %cond2307 = phi i32 [ %1622, %cond.true.2284 ], [ %add2305, %cond.false.2286 ]
  br label %cond.end.2308

cond.end.2308:                                    ; preds = %cond.end.2306, %cond.true.2260
  %cond2309 = phi i32 [ 0, %cond.true.2260 ], [ %cond2307, %cond.end.2306 ]
  store i32 %cond2309, i32* %weightedpel, align 4
  %1640 = load i16, i16* %x0, align 2
  %idxprom2310 = sext i16 %1640 to i64
  %1641 = load i16*, i16** %orig_line, align 8
  %arrayidx2311 = getelementptr inbounds i16, i16* %1641, i64 %idxprom2310
  %1642 = load i16, i16* %arrayidx2311, align 2
  %conv2312 = zext i16 %1642 to i32
  %1643 = load i32, i32* %weightedpel, align 4
  %sub2313 = sub nsw i32 %conv2312, %1643
  %1644 = load i32*, i32** %d, align 8
  %incdec.ptr2314 = getelementptr inbounds i32, i32* %1644, i32 1
  store i32* %incdec.ptr2314, i32** %d, align 8
  store i32 %sub2313, i32* %1644, align 4
  %1645 = load i16, i16* %weightSpic, align 2
  %conv2315 = sext i16 %1645 to i32
  %1646 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1647 = load i16**, i16*** %ref1_pic, align 8
  %1648 = load i16, i16* %sy, align 2
  %conv2316 = sext i16 %1648 to i32
  %1649 = load i16, i16* %sx0, align 2
  %conv2317 = sext i16 %1649 to i32
  %add2318 = add nsw i32 %conv2317, 4
  %1650 = load i32, i32* %img_height, align 4
  %1651 = load i32, i32* %img_width, align 4
  %call2319 = call zeroext i16 %1646(i16** %1647, i32 %conv2316, i32 %add2318, i32 %1650, i32 %1651)
  %conv2320 = zext i16 %call2319 to i32
  %mul2321 = mul nsw i32 %conv2315, %conv2320
  %1652 = load i16, i16* %weightRpic, align 2
  %conv2322 = sext i16 %1652 to i32
  %1653 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1654 = load i16**, i16*** %ref2_pic, align 8
  %1655 = load i16, i16* %ry, align 2
  %conv2323 = sext i16 %1655 to i32
  %1656 = load i16, i16* %rx0, align 2
  %conv2324 = sext i16 %1656 to i32
  %add2325 = add nsw i32 %conv2324, 4
  %1657 = load i32, i32* %img_height, align 4
  %1658 = load i32, i32* %img_width, align 4
  %call2326 = call zeroext i16 %1653(i16** %1654, i32 %conv2323, i32 %add2325, i32 %1657, i32 %1658)
  %conv2327 = zext i16 %call2326 to i32
  %mul2328 = mul nsw i32 %conv2322, %conv2327
  %add2329 = add nsw i32 %mul2321, %mul2328
  %1659 = load i32, i32* @wp_luma_round, align 4
  %mul2330 = mul nsw i32 2, %1659
  %add2331 = add nsw i32 %add2329, %mul2330
  %1660 = load i32, i32* @luma_log_weight_denom, align 4
  %add2332 = add nsw i32 %1660, 1
  %shr2333 = ashr i32 %add2331, %add2332
  %1661 = load i16, i16* %offsetBi, align 2
  %conv2334 = sext i16 %1661 to i32
  %add2335 = add nsw i32 %shr2333, %conv2334
  %cmp2336 = icmp slt i32 %add2335, 0
  br i1 %cmp2336, label %cond.true.2338, label %cond.false.2339

cond.true.2338:                                   ; preds = %cond.end.2308
  br label %cond.end.2390

cond.false.2339:                                  ; preds = %cond.end.2308
  %1662 = load i16, i16* %weightSpic, align 2
  %conv2340 = sext i16 %1662 to i32
  %1663 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1664 = load i16**, i16*** %ref1_pic, align 8
  %1665 = load i16, i16* %sy, align 2
  %conv2341 = sext i16 %1665 to i32
  %1666 = load i16, i16* %sx0, align 2
  %conv2342 = sext i16 %1666 to i32
  %add2343 = add nsw i32 %conv2342, 4
  %1667 = load i32, i32* %img_height, align 4
  %1668 = load i32, i32* %img_width, align 4
  %call2344 = call zeroext i16 %1663(i16** %1664, i32 %conv2341, i32 %add2343, i32 %1667, i32 %1668)
  %conv2345 = zext i16 %call2344 to i32
  %mul2346 = mul nsw i32 %conv2340, %conv2345
  %1669 = load i16, i16* %weightRpic, align 2
  %conv2347 = sext i16 %1669 to i32
  %1670 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1671 = load i16**, i16*** %ref2_pic, align 8
  %1672 = load i16, i16* %ry, align 2
  %conv2348 = sext i16 %1672 to i32
  %1673 = load i16, i16* %rx0, align 2
  %conv2349 = sext i16 %1673 to i32
  %add2350 = add nsw i32 %conv2349, 4
  %1674 = load i32, i32* %img_height, align 4
  %1675 = load i32, i32* %img_width, align 4
  %call2351 = call zeroext i16 %1670(i16** %1671, i32 %conv2348, i32 %add2350, i32 %1674, i32 %1675)
  %conv2352 = zext i16 %call2351 to i32
  %mul2353 = mul nsw i32 %conv2347, %conv2352
  %add2354 = add nsw i32 %mul2346, %mul2353
  %1676 = load i32, i32* @wp_luma_round, align 4
  %mul2355 = mul nsw i32 2, %1676
  %add2356 = add nsw i32 %add2354, %mul2355
  %1677 = load i32, i32* @luma_log_weight_denom, align 4
  %add2357 = add nsw i32 %1677, 1
  %shr2358 = ashr i32 %add2356, %add2357
  %1678 = load i16, i16* %offsetBi, align 2
  %conv2359 = sext i16 %1678 to i32
  %add2360 = add nsw i32 %shr2358, %conv2359
  %1679 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value2361 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1679, i32 0, i32 155
  %1680 = load i32, i32* %max_imgpel_value2361, align 4
  %cmp2362 = icmp sgt i32 %add2360, %1680
  br i1 %cmp2362, label %cond.true.2364, label %cond.false.2366

cond.true.2364:                                   ; preds = %cond.false.2339
  %1681 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value2365 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1681, i32 0, i32 155
  %1682 = load i32, i32* %max_imgpel_value2365, align 4
  br label %cond.end.2388

cond.false.2366:                                  ; preds = %cond.false.2339
  %1683 = load i16, i16* %weightSpic, align 2
  %conv2367 = sext i16 %1683 to i32
  %1684 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1685 = load i16**, i16*** %ref1_pic, align 8
  %1686 = load i16, i16* %sy, align 2
  %conv2368 = sext i16 %1686 to i32
  %1687 = load i16, i16* %sx0, align 2
  %conv2369 = sext i16 %1687 to i32
  %add2370 = add nsw i32 %conv2369, 4
  %1688 = load i32, i32* %img_height, align 4
  %1689 = load i32, i32* %img_width, align 4
  %call2371 = call zeroext i16 %1684(i16** %1685, i32 %conv2368, i32 %add2370, i32 %1688, i32 %1689)
  %conv2372 = zext i16 %call2371 to i32
  %mul2373 = mul nsw i32 %conv2367, %conv2372
  %1690 = load i16, i16* %weightRpic, align 2
  %conv2374 = sext i16 %1690 to i32
  %1691 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1692 = load i16**, i16*** %ref2_pic, align 8
  %1693 = load i16, i16* %ry, align 2
  %conv2375 = sext i16 %1693 to i32
  %1694 = load i16, i16* %rx0, align 2
  %conv2376 = sext i16 %1694 to i32
  %add2377 = add nsw i32 %conv2376, 4
  %1695 = load i32, i32* %img_height, align 4
  %1696 = load i32, i32* %img_width, align 4
  %call2378 = call zeroext i16 %1691(i16** %1692, i32 %conv2375, i32 %add2377, i32 %1695, i32 %1696)
  %conv2379 = zext i16 %call2378 to i32
  %mul2380 = mul nsw i32 %conv2374, %conv2379
  %add2381 = add nsw i32 %mul2373, %mul2380
  %1697 = load i32, i32* @wp_luma_round, align 4
  %mul2382 = mul nsw i32 2, %1697
  %add2383 = add nsw i32 %add2381, %mul2382
  %1698 = load i32, i32* @luma_log_weight_denom, align 4
  %add2384 = add nsw i32 %1698, 1
  %shr2385 = ashr i32 %add2383, %add2384
  %1699 = load i16, i16* %offsetBi, align 2
  %conv2386 = sext i16 %1699 to i32
  %add2387 = add nsw i32 %shr2385, %conv2386
  br label %cond.end.2388

cond.end.2388:                                    ; preds = %cond.false.2366, %cond.true.2364
  %cond2389 = phi i32 [ %1682, %cond.true.2364 ], [ %add2387, %cond.false.2366 ]
  br label %cond.end.2390

cond.end.2390:                                    ; preds = %cond.end.2388, %cond.true.2338
  %cond2391 = phi i32 [ 0, %cond.true.2338 ], [ %cond2389, %cond.end.2388 ]
  store i32 %cond2391, i32* %weightedpel, align 4
  %1700 = load i16, i16* %x0, align 2
  %conv2392 = sext i16 %1700 to i32
  %add2393 = add nsw i32 %conv2392, 1
  %idxprom2394 = sext i32 %add2393 to i64
  %1701 = load i16*, i16** %orig_line, align 8
  %arrayidx2395 = getelementptr inbounds i16, i16* %1701, i64 %idxprom2394
  %1702 = load i16, i16* %arrayidx2395, align 2
  %conv2396 = zext i16 %1702 to i32
  %1703 = load i32, i32* %weightedpel, align 4
  %sub2397 = sub nsw i32 %conv2396, %1703
  %1704 = load i32*, i32** %d, align 8
  %incdec.ptr2398 = getelementptr inbounds i32, i32* %1704, i32 1
  store i32* %incdec.ptr2398, i32** %d, align 8
  store i32 %sub2397, i32* %1704, align 4
  %1705 = load i16, i16* %weightSpic, align 2
  %conv2399 = sext i16 %1705 to i32
  %1706 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1707 = load i16**, i16*** %ref1_pic, align 8
  %1708 = load i16, i16* %sy, align 2
  %conv2400 = sext i16 %1708 to i32
  %1709 = load i16, i16* %sx0, align 2
  %conv2401 = sext i16 %1709 to i32
  %add2402 = add nsw i32 %conv2401, 8
  %1710 = load i32, i32* %img_height, align 4
  %1711 = load i32, i32* %img_width, align 4
  %call2403 = call zeroext i16 %1706(i16** %1707, i32 %conv2400, i32 %add2402, i32 %1710, i32 %1711)
  %conv2404 = zext i16 %call2403 to i32
  %mul2405 = mul nsw i32 %conv2399, %conv2404
  %1712 = load i16, i16* %weightRpic, align 2
  %conv2406 = sext i16 %1712 to i32
  %1713 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1714 = load i16**, i16*** %ref2_pic, align 8
  %1715 = load i16, i16* %ry, align 2
  %conv2407 = sext i16 %1715 to i32
  %1716 = load i16, i16* %rx0, align 2
  %conv2408 = sext i16 %1716 to i32
  %add2409 = add nsw i32 %conv2408, 8
  %1717 = load i32, i32* %img_height, align 4
  %1718 = load i32, i32* %img_width, align 4
  %call2410 = call zeroext i16 %1713(i16** %1714, i32 %conv2407, i32 %add2409, i32 %1717, i32 %1718)
  %conv2411 = zext i16 %call2410 to i32
  %mul2412 = mul nsw i32 %conv2406, %conv2411
  %add2413 = add nsw i32 %mul2405, %mul2412
  %1719 = load i32, i32* @wp_luma_round, align 4
  %mul2414 = mul nsw i32 2, %1719
  %add2415 = add nsw i32 %add2413, %mul2414
  %1720 = load i32, i32* @luma_log_weight_denom, align 4
  %add2416 = add nsw i32 %1720, 1
  %shr2417 = ashr i32 %add2415, %add2416
  %1721 = load i16, i16* %offsetBi, align 2
  %conv2418 = sext i16 %1721 to i32
  %add2419 = add nsw i32 %shr2417, %conv2418
  %cmp2420 = icmp slt i32 %add2419, 0
  br i1 %cmp2420, label %cond.true.2422, label %cond.false.2423

cond.true.2422:                                   ; preds = %cond.end.2390
  br label %cond.end.2474

cond.false.2423:                                  ; preds = %cond.end.2390
  %1722 = load i16, i16* %weightSpic, align 2
  %conv2424 = sext i16 %1722 to i32
  %1723 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1724 = load i16**, i16*** %ref1_pic, align 8
  %1725 = load i16, i16* %sy, align 2
  %conv2425 = sext i16 %1725 to i32
  %1726 = load i16, i16* %sx0, align 2
  %conv2426 = sext i16 %1726 to i32
  %add2427 = add nsw i32 %conv2426, 8
  %1727 = load i32, i32* %img_height, align 4
  %1728 = load i32, i32* %img_width, align 4
  %call2428 = call zeroext i16 %1723(i16** %1724, i32 %conv2425, i32 %add2427, i32 %1727, i32 %1728)
  %conv2429 = zext i16 %call2428 to i32
  %mul2430 = mul nsw i32 %conv2424, %conv2429
  %1729 = load i16, i16* %weightRpic, align 2
  %conv2431 = sext i16 %1729 to i32
  %1730 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1731 = load i16**, i16*** %ref2_pic, align 8
  %1732 = load i16, i16* %ry, align 2
  %conv2432 = sext i16 %1732 to i32
  %1733 = load i16, i16* %rx0, align 2
  %conv2433 = sext i16 %1733 to i32
  %add2434 = add nsw i32 %conv2433, 8
  %1734 = load i32, i32* %img_height, align 4
  %1735 = load i32, i32* %img_width, align 4
  %call2435 = call zeroext i16 %1730(i16** %1731, i32 %conv2432, i32 %add2434, i32 %1734, i32 %1735)
  %conv2436 = zext i16 %call2435 to i32
  %mul2437 = mul nsw i32 %conv2431, %conv2436
  %add2438 = add nsw i32 %mul2430, %mul2437
  %1736 = load i32, i32* @wp_luma_round, align 4
  %mul2439 = mul nsw i32 2, %1736
  %add2440 = add nsw i32 %add2438, %mul2439
  %1737 = load i32, i32* @luma_log_weight_denom, align 4
  %add2441 = add nsw i32 %1737, 1
  %shr2442 = ashr i32 %add2440, %add2441
  %1738 = load i16, i16* %offsetBi, align 2
  %conv2443 = sext i16 %1738 to i32
  %add2444 = add nsw i32 %shr2442, %conv2443
  %1739 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value2445 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1739, i32 0, i32 155
  %1740 = load i32, i32* %max_imgpel_value2445, align 4
  %cmp2446 = icmp sgt i32 %add2444, %1740
  br i1 %cmp2446, label %cond.true.2448, label %cond.false.2450

cond.true.2448:                                   ; preds = %cond.false.2423
  %1741 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value2449 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1741, i32 0, i32 155
  %1742 = load i32, i32* %max_imgpel_value2449, align 4
  br label %cond.end.2472

cond.false.2450:                                  ; preds = %cond.false.2423
  %1743 = load i16, i16* %weightSpic, align 2
  %conv2451 = sext i16 %1743 to i32
  %1744 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1745 = load i16**, i16*** %ref1_pic, align 8
  %1746 = load i16, i16* %sy, align 2
  %conv2452 = sext i16 %1746 to i32
  %1747 = load i16, i16* %sx0, align 2
  %conv2453 = sext i16 %1747 to i32
  %add2454 = add nsw i32 %conv2453, 8
  %1748 = load i32, i32* %img_height, align 4
  %1749 = load i32, i32* %img_width, align 4
  %call2455 = call zeroext i16 %1744(i16** %1745, i32 %conv2452, i32 %add2454, i32 %1748, i32 %1749)
  %conv2456 = zext i16 %call2455 to i32
  %mul2457 = mul nsw i32 %conv2451, %conv2456
  %1750 = load i16, i16* %weightRpic, align 2
  %conv2458 = sext i16 %1750 to i32
  %1751 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1752 = load i16**, i16*** %ref2_pic, align 8
  %1753 = load i16, i16* %ry, align 2
  %conv2459 = sext i16 %1753 to i32
  %1754 = load i16, i16* %rx0, align 2
  %conv2460 = sext i16 %1754 to i32
  %add2461 = add nsw i32 %conv2460, 8
  %1755 = load i32, i32* %img_height, align 4
  %1756 = load i32, i32* %img_width, align 4
  %call2462 = call zeroext i16 %1751(i16** %1752, i32 %conv2459, i32 %add2461, i32 %1755, i32 %1756)
  %conv2463 = zext i16 %call2462 to i32
  %mul2464 = mul nsw i32 %conv2458, %conv2463
  %add2465 = add nsw i32 %mul2457, %mul2464
  %1757 = load i32, i32* @wp_luma_round, align 4
  %mul2466 = mul nsw i32 2, %1757
  %add2467 = add nsw i32 %add2465, %mul2466
  %1758 = load i32, i32* @luma_log_weight_denom, align 4
  %add2468 = add nsw i32 %1758, 1
  %shr2469 = ashr i32 %add2467, %add2468
  %1759 = load i16, i16* %offsetBi, align 2
  %conv2470 = sext i16 %1759 to i32
  %add2471 = add nsw i32 %shr2469, %conv2470
  br label %cond.end.2472

cond.end.2472:                                    ; preds = %cond.false.2450, %cond.true.2448
  %cond2473 = phi i32 [ %1742, %cond.true.2448 ], [ %add2471, %cond.false.2450 ]
  br label %cond.end.2474

cond.end.2474:                                    ; preds = %cond.end.2472, %cond.true.2422
  %cond2475 = phi i32 [ 0, %cond.true.2422 ], [ %cond2473, %cond.end.2472 ]
  store i32 %cond2475, i32* %weightedpel, align 4
  %1760 = load i16, i16* %x0, align 2
  %conv2476 = sext i16 %1760 to i32
  %add2477 = add nsw i32 %conv2476, 2
  %idxprom2478 = sext i32 %add2477 to i64
  %1761 = load i16*, i16** %orig_line, align 8
  %arrayidx2479 = getelementptr inbounds i16, i16* %1761, i64 %idxprom2478
  %1762 = load i16, i16* %arrayidx2479, align 2
  %conv2480 = zext i16 %1762 to i32
  %1763 = load i32, i32* %weightedpel, align 4
  %sub2481 = sub nsw i32 %conv2480, %1763
  %1764 = load i32*, i32** %d, align 8
  %incdec.ptr2482 = getelementptr inbounds i32, i32* %1764, i32 1
  store i32* %incdec.ptr2482, i32** %d, align 8
  store i32 %sub2481, i32* %1764, align 4
  %1765 = load i16, i16* %weightSpic, align 2
  %conv2483 = sext i16 %1765 to i32
  %1766 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1767 = load i16**, i16*** %ref1_pic, align 8
  %1768 = load i16, i16* %sy, align 2
  %conv2484 = sext i16 %1768 to i32
  %1769 = load i16, i16* %sx0, align 2
  %conv2485 = sext i16 %1769 to i32
  %add2486 = add nsw i32 %conv2485, 12
  %1770 = load i32, i32* %img_height, align 4
  %1771 = load i32, i32* %img_width, align 4
  %call2487 = call zeroext i16 %1766(i16** %1767, i32 %conv2484, i32 %add2486, i32 %1770, i32 %1771)
  %conv2488 = zext i16 %call2487 to i32
  %mul2489 = mul nsw i32 %conv2483, %conv2488
  %1772 = load i16, i16* %weightRpic, align 2
  %conv2490 = sext i16 %1772 to i32
  %1773 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1774 = load i16**, i16*** %ref2_pic, align 8
  %1775 = load i16, i16* %ry, align 2
  %conv2491 = sext i16 %1775 to i32
  %1776 = load i16, i16* %rx0, align 2
  %conv2492 = sext i16 %1776 to i32
  %add2493 = add nsw i32 %conv2492, 12
  %1777 = load i32, i32* %img_height, align 4
  %1778 = load i32, i32* %img_width, align 4
  %call2494 = call zeroext i16 %1773(i16** %1774, i32 %conv2491, i32 %add2493, i32 %1777, i32 %1778)
  %conv2495 = zext i16 %call2494 to i32
  %mul2496 = mul nsw i32 %conv2490, %conv2495
  %add2497 = add nsw i32 %mul2489, %mul2496
  %1779 = load i32, i32* @wp_luma_round, align 4
  %mul2498 = mul nsw i32 2, %1779
  %add2499 = add nsw i32 %add2497, %mul2498
  %1780 = load i32, i32* @luma_log_weight_denom, align 4
  %add2500 = add nsw i32 %1780, 1
  %shr2501 = ashr i32 %add2499, %add2500
  %1781 = load i16, i16* %offsetBi, align 2
  %conv2502 = sext i16 %1781 to i32
  %add2503 = add nsw i32 %shr2501, %conv2502
  %cmp2504 = icmp slt i32 %add2503, 0
  br i1 %cmp2504, label %cond.true.2506, label %cond.false.2507

cond.true.2506:                                   ; preds = %cond.end.2474
  br label %cond.end.2558

cond.false.2507:                                  ; preds = %cond.end.2474
  %1782 = load i16, i16* %weightSpic, align 2
  %conv2508 = sext i16 %1782 to i32
  %1783 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1784 = load i16**, i16*** %ref1_pic, align 8
  %1785 = load i16, i16* %sy, align 2
  %conv2509 = sext i16 %1785 to i32
  %1786 = load i16, i16* %sx0, align 2
  %conv2510 = sext i16 %1786 to i32
  %add2511 = add nsw i32 %conv2510, 12
  %1787 = load i32, i32* %img_height, align 4
  %1788 = load i32, i32* %img_width, align 4
  %call2512 = call zeroext i16 %1783(i16** %1784, i32 %conv2509, i32 %add2511, i32 %1787, i32 %1788)
  %conv2513 = zext i16 %call2512 to i32
  %mul2514 = mul nsw i32 %conv2508, %conv2513
  %1789 = load i16, i16* %weightRpic, align 2
  %conv2515 = sext i16 %1789 to i32
  %1790 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1791 = load i16**, i16*** %ref2_pic, align 8
  %1792 = load i16, i16* %ry, align 2
  %conv2516 = sext i16 %1792 to i32
  %1793 = load i16, i16* %rx0, align 2
  %conv2517 = sext i16 %1793 to i32
  %add2518 = add nsw i32 %conv2517, 12
  %1794 = load i32, i32* %img_height, align 4
  %1795 = load i32, i32* %img_width, align 4
  %call2519 = call zeroext i16 %1790(i16** %1791, i32 %conv2516, i32 %add2518, i32 %1794, i32 %1795)
  %conv2520 = zext i16 %call2519 to i32
  %mul2521 = mul nsw i32 %conv2515, %conv2520
  %add2522 = add nsw i32 %mul2514, %mul2521
  %1796 = load i32, i32* @wp_luma_round, align 4
  %mul2523 = mul nsw i32 2, %1796
  %add2524 = add nsw i32 %add2522, %mul2523
  %1797 = load i32, i32* @luma_log_weight_denom, align 4
  %add2525 = add nsw i32 %1797, 1
  %shr2526 = ashr i32 %add2524, %add2525
  %1798 = load i16, i16* %offsetBi, align 2
  %conv2527 = sext i16 %1798 to i32
  %add2528 = add nsw i32 %shr2526, %conv2527
  %1799 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value2529 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1799, i32 0, i32 155
  %1800 = load i32, i32* %max_imgpel_value2529, align 4
  %cmp2530 = icmp sgt i32 %add2528, %1800
  br i1 %cmp2530, label %cond.true.2532, label %cond.false.2534

cond.true.2532:                                   ; preds = %cond.false.2507
  %1801 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value2533 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1801, i32 0, i32 155
  %1802 = load i32, i32* %max_imgpel_value2533, align 4
  br label %cond.end.2556

cond.false.2534:                                  ; preds = %cond.false.2507
  %1803 = load i16, i16* %weightSpic, align 2
  %conv2535 = sext i16 %1803 to i32
  %1804 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1805 = load i16**, i16*** %ref1_pic, align 8
  %1806 = load i16, i16* %sy, align 2
  %conv2536 = sext i16 %1806 to i32
  %1807 = load i16, i16* %sx0, align 2
  %conv2537 = sext i16 %1807 to i32
  %add2538 = add nsw i32 %conv2537, 12
  %1808 = load i32, i32* %img_height, align 4
  %1809 = load i32, i32* %img_width, align 4
  %call2539 = call zeroext i16 %1804(i16** %1805, i32 %conv2536, i32 %add2538, i32 %1808, i32 %1809)
  %conv2540 = zext i16 %call2539 to i32
  %mul2541 = mul nsw i32 %conv2535, %conv2540
  %1810 = load i16, i16* %weightRpic, align 2
  %conv2542 = sext i16 %1810 to i32
  %1811 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1812 = load i16**, i16*** %ref2_pic, align 8
  %1813 = load i16, i16* %ry, align 2
  %conv2543 = sext i16 %1813 to i32
  %1814 = load i16, i16* %rx0, align 2
  %conv2544 = sext i16 %1814 to i32
  %add2545 = add nsw i32 %conv2544, 12
  %1815 = load i32, i32* %img_height, align 4
  %1816 = load i32, i32* %img_width, align 4
  %call2546 = call zeroext i16 %1811(i16** %1812, i32 %conv2543, i32 %add2545, i32 %1815, i32 %1816)
  %conv2547 = zext i16 %call2546 to i32
  %mul2548 = mul nsw i32 %conv2542, %conv2547
  %add2549 = add nsw i32 %mul2541, %mul2548
  %1817 = load i32, i32* @wp_luma_round, align 4
  %mul2550 = mul nsw i32 2, %1817
  %add2551 = add nsw i32 %add2549, %mul2550
  %1818 = load i32, i32* @luma_log_weight_denom, align 4
  %add2552 = add nsw i32 %1818, 1
  %shr2553 = ashr i32 %add2551, %add2552
  %1819 = load i16, i16* %offsetBi, align 2
  %conv2554 = sext i16 %1819 to i32
  %add2555 = add nsw i32 %shr2553, %conv2554
  br label %cond.end.2556

cond.end.2556:                                    ; preds = %cond.false.2534, %cond.true.2532
  %cond2557 = phi i32 [ %1802, %cond.true.2532 ], [ %add2555, %cond.false.2534 ]
  br label %cond.end.2558

cond.end.2558:                                    ; preds = %cond.end.2556, %cond.true.2506
  %cond2559 = phi i32 [ 0, %cond.true.2506 ], [ %cond2557, %cond.end.2556 ]
  store i32 %cond2559, i32* %weightedpel, align 4
  %1820 = load i16, i16* %x0, align 2
  %conv2560 = sext i16 %1820 to i32
  %add2561 = add nsw i32 %conv2560, 3
  %idxprom2562 = sext i32 %add2561 to i64
  %1821 = load i16*, i16** %orig_line, align 8
  %arrayidx2563 = getelementptr inbounds i16, i16* %1821, i64 %idxprom2562
  %1822 = load i16, i16* %arrayidx2563, align 2
  %conv2564 = zext i16 %1822 to i32
  %1823 = load i32, i32* %weightedpel, align 4
  %sub2565 = sub nsw i32 %conv2564, %1823
  %1824 = load i32*, i32** %d, align 8
  %incdec.ptr2566 = getelementptr inbounds i32, i32* %1824, i32 1
  store i32* %incdec.ptr2566, i32** %d, align 8
  store i32 %sub2565, i32* %1824, align 4
  %1825 = load i16, i16* %sy0, align 2
  %conv2567 = sext i16 %1825 to i32
  %add2568 = add nsw i32 %conv2567, 4
  %conv2569 = trunc i32 %add2568 to i16
  store i16 %conv2569, i16* %sy, align 2
  %1826 = load i16, i16* %y0, align 2
  %conv2570 = sext i16 %1826 to i32
  %add2571 = add nsw i32 %conv2570, 1
  %idxprom2572 = sext i32 %add2571 to i64
  %1827 = load i16**, i16*** %orig_pic.addr, align 8
  %arrayidx2573 = getelementptr inbounds i16*, i16** %1827, i64 %idxprom2572
  %1828 = load i16*, i16** %arrayidx2573, align 8
  store i16* %1828, i16** %orig_line, align 8
  %1829 = load i16, i16* %ry0, align 2
  %conv2574 = sext i16 %1829 to i32
  %add2575 = add nsw i32 %conv2574, 4
  %conv2576 = trunc i32 %add2575 to i16
  store i16 %conv2576, i16* %ry, align 2
  %1830 = load i16, i16* %weightSpic, align 2
  %conv2577 = sext i16 %1830 to i32
  %1831 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1832 = load i16**, i16*** %ref1_pic, align 8
  %1833 = load i16, i16* %sy, align 2
  %conv2578 = sext i16 %1833 to i32
  %1834 = load i16, i16* %sx0, align 2
  %conv2579 = sext i16 %1834 to i32
  %1835 = load i32, i32* %img_height, align 4
  %1836 = load i32, i32* %img_width, align 4
  %call2580 = call zeroext i16 %1831(i16** %1832, i32 %conv2578, i32 %conv2579, i32 %1835, i32 %1836)
  %conv2581 = zext i16 %call2580 to i32
  %mul2582 = mul nsw i32 %conv2577, %conv2581
  %1837 = load i16, i16* %weightRpic, align 2
  %conv2583 = sext i16 %1837 to i32
  %1838 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1839 = load i16**, i16*** %ref2_pic, align 8
  %1840 = load i16, i16* %ry, align 2
  %conv2584 = sext i16 %1840 to i32
  %1841 = load i16, i16* %rx0, align 2
  %conv2585 = sext i16 %1841 to i32
  %1842 = load i32, i32* %img_height, align 4
  %1843 = load i32, i32* %img_width, align 4
  %call2586 = call zeroext i16 %1838(i16** %1839, i32 %conv2584, i32 %conv2585, i32 %1842, i32 %1843)
  %conv2587 = zext i16 %call2586 to i32
  %mul2588 = mul nsw i32 %conv2583, %conv2587
  %add2589 = add nsw i32 %mul2582, %mul2588
  %1844 = load i32, i32* @wp_luma_round, align 4
  %mul2590 = mul nsw i32 2, %1844
  %add2591 = add nsw i32 %add2589, %mul2590
  %1845 = load i32, i32* @luma_log_weight_denom, align 4
  %add2592 = add nsw i32 %1845, 1
  %shr2593 = ashr i32 %add2591, %add2592
  %1846 = load i16, i16* %offsetBi, align 2
  %conv2594 = sext i16 %1846 to i32
  %add2595 = add nsw i32 %shr2593, %conv2594
  %cmp2596 = icmp slt i32 %add2595, 0
  br i1 %cmp2596, label %cond.true.2598, label %cond.false.2599

cond.true.2598:                                   ; preds = %cond.end.2558
  br label %cond.end.2646

cond.false.2599:                                  ; preds = %cond.end.2558
  %1847 = load i16, i16* %weightSpic, align 2
  %conv2600 = sext i16 %1847 to i32
  %1848 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1849 = load i16**, i16*** %ref1_pic, align 8
  %1850 = load i16, i16* %sy, align 2
  %conv2601 = sext i16 %1850 to i32
  %1851 = load i16, i16* %sx0, align 2
  %conv2602 = sext i16 %1851 to i32
  %1852 = load i32, i32* %img_height, align 4
  %1853 = load i32, i32* %img_width, align 4
  %call2603 = call zeroext i16 %1848(i16** %1849, i32 %conv2601, i32 %conv2602, i32 %1852, i32 %1853)
  %conv2604 = zext i16 %call2603 to i32
  %mul2605 = mul nsw i32 %conv2600, %conv2604
  %1854 = load i16, i16* %weightRpic, align 2
  %conv2606 = sext i16 %1854 to i32
  %1855 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1856 = load i16**, i16*** %ref2_pic, align 8
  %1857 = load i16, i16* %ry, align 2
  %conv2607 = sext i16 %1857 to i32
  %1858 = load i16, i16* %rx0, align 2
  %conv2608 = sext i16 %1858 to i32
  %1859 = load i32, i32* %img_height, align 4
  %1860 = load i32, i32* %img_width, align 4
  %call2609 = call zeroext i16 %1855(i16** %1856, i32 %conv2607, i32 %conv2608, i32 %1859, i32 %1860)
  %conv2610 = zext i16 %call2609 to i32
  %mul2611 = mul nsw i32 %conv2606, %conv2610
  %add2612 = add nsw i32 %mul2605, %mul2611
  %1861 = load i32, i32* @wp_luma_round, align 4
  %mul2613 = mul nsw i32 2, %1861
  %add2614 = add nsw i32 %add2612, %mul2613
  %1862 = load i32, i32* @luma_log_weight_denom, align 4
  %add2615 = add nsw i32 %1862, 1
  %shr2616 = ashr i32 %add2614, %add2615
  %1863 = load i16, i16* %offsetBi, align 2
  %conv2617 = sext i16 %1863 to i32
  %add2618 = add nsw i32 %shr2616, %conv2617
  %1864 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value2619 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1864, i32 0, i32 155
  %1865 = load i32, i32* %max_imgpel_value2619, align 4
  %cmp2620 = icmp sgt i32 %add2618, %1865
  br i1 %cmp2620, label %cond.true.2622, label %cond.false.2624

cond.true.2622:                                   ; preds = %cond.false.2599
  %1866 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value2623 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1866, i32 0, i32 155
  %1867 = load i32, i32* %max_imgpel_value2623, align 4
  br label %cond.end.2644

cond.false.2624:                                  ; preds = %cond.false.2599
  %1868 = load i16, i16* %weightSpic, align 2
  %conv2625 = sext i16 %1868 to i32
  %1869 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1870 = load i16**, i16*** %ref1_pic, align 8
  %1871 = load i16, i16* %sy, align 2
  %conv2626 = sext i16 %1871 to i32
  %1872 = load i16, i16* %sx0, align 2
  %conv2627 = sext i16 %1872 to i32
  %1873 = load i32, i32* %img_height, align 4
  %1874 = load i32, i32* %img_width, align 4
  %call2628 = call zeroext i16 %1869(i16** %1870, i32 %conv2626, i32 %conv2627, i32 %1873, i32 %1874)
  %conv2629 = zext i16 %call2628 to i32
  %mul2630 = mul nsw i32 %conv2625, %conv2629
  %1875 = load i16, i16* %weightRpic, align 2
  %conv2631 = sext i16 %1875 to i32
  %1876 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1877 = load i16**, i16*** %ref2_pic, align 8
  %1878 = load i16, i16* %ry, align 2
  %conv2632 = sext i16 %1878 to i32
  %1879 = load i16, i16* %rx0, align 2
  %conv2633 = sext i16 %1879 to i32
  %1880 = load i32, i32* %img_height, align 4
  %1881 = load i32, i32* %img_width, align 4
  %call2634 = call zeroext i16 %1876(i16** %1877, i32 %conv2632, i32 %conv2633, i32 %1880, i32 %1881)
  %conv2635 = zext i16 %call2634 to i32
  %mul2636 = mul nsw i32 %conv2631, %conv2635
  %add2637 = add nsw i32 %mul2630, %mul2636
  %1882 = load i32, i32* @wp_luma_round, align 4
  %mul2638 = mul nsw i32 2, %1882
  %add2639 = add nsw i32 %add2637, %mul2638
  %1883 = load i32, i32* @luma_log_weight_denom, align 4
  %add2640 = add nsw i32 %1883, 1
  %shr2641 = ashr i32 %add2639, %add2640
  %1884 = load i16, i16* %offsetBi, align 2
  %conv2642 = sext i16 %1884 to i32
  %add2643 = add nsw i32 %shr2641, %conv2642
  br label %cond.end.2644

cond.end.2644:                                    ; preds = %cond.false.2624, %cond.true.2622
  %cond2645 = phi i32 [ %1867, %cond.true.2622 ], [ %add2643, %cond.false.2624 ]
  br label %cond.end.2646

cond.end.2646:                                    ; preds = %cond.end.2644, %cond.true.2598
  %cond2647 = phi i32 [ 0, %cond.true.2598 ], [ %cond2645, %cond.end.2644 ]
  store i32 %cond2647, i32* %weightedpel, align 4
  %1885 = load i16, i16* %x0, align 2
  %idxprom2648 = sext i16 %1885 to i64
  %1886 = load i16*, i16** %orig_line, align 8
  %arrayidx2649 = getelementptr inbounds i16, i16* %1886, i64 %idxprom2648
  %1887 = load i16, i16* %arrayidx2649, align 2
  %conv2650 = zext i16 %1887 to i32
  %1888 = load i32, i32* %weightedpel, align 4
  %sub2651 = sub nsw i32 %conv2650, %1888
  %1889 = load i32*, i32** %d, align 8
  %incdec.ptr2652 = getelementptr inbounds i32, i32* %1889, i32 1
  store i32* %incdec.ptr2652, i32** %d, align 8
  store i32 %sub2651, i32* %1889, align 4
  %1890 = load i16, i16* %weightSpic, align 2
  %conv2653 = sext i16 %1890 to i32
  %1891 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1892 = load i16**, i16*** %ref1_pic, align 8
  %1893 = load i16, i16* %sy, align 2
  %conv2654 = sext i16 %1893 to i32
  %1894 = load i16, i16* %sx0, align 2
  %conv2655 = sext i16 %1894 to i32
  %add2656 = add nsw i32 %conv2655, 4
  %1895 = load i32, i32* %img_height, align 4
  %1896 = load i32, i32* %img_width, align 4
  %call2657 = call zeroext i16 %1891(i16** %1892, i32 %conv2654, i32 %add2656, i32 %1895, i32 %1896)
  %conv2658 = zext i16 %call2657 to i32
  %mul2659 = mul nsw i32 %conv2653, %conv2658
  %1897 = load i16, i16* %weightRpic, align 2
  %conv2660 = sext i16 %1897 to i32
  %1898 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1899 = load i16**, i16*** %ref2_pic, align 8
  %1900 = load i16, i16* %ry, align 2
  %conv2661 = sext i16 %1900 to i32
  %1901 = load i16, i16* %rx0, align 2
  %conv2662 = sext i16 %1901 to i32
  %add2663 = add nsw i32 %conv2662, 4
  %1902 = load i32, i32* %img_height, align 4
  %1903 = load i32, i32* %img_width, align 4
  %call2664 = call zeroext i16 %1898(i16** %1899, i32 %conv2661, i32 %add2663, i32 %1902, i32 %1903)
  %conv2665 = zext i16 %call2664 to i32
  %mul2666 = mul nsw i32 %conv2660, %conv2665
  %add2667 = add nsw i32 %mul2659, %mul2666
  %1904 = load i32, i32* @wp_luma_round, align 4
  %mul2668 = mul nsw i32 2, %1904
  %add2669 = add nsw i32 %add2667, %mul2668
  %1905 = load i32, i32* @luma_log_weight_denom, align 4
  %add2670 = add nsw i32 %1905, 1
  %shr2671 = ashr i32 %add2669, %add2670
  %1906 = load i16, i16* %offsetBi, align 2
  %conv2672 = sext i16 %1906 to i32
  %add2673 = add nsw i32 %shr2671, %conv2672
  %cmp2674 = icmp slt i32 %add2673, 0
  br i1 %cmp2674, label %cond.true.2676, label %cond.false.2677

cond.true.2676:                                   ; preds = %cond.end.2646
  br label %cond.end.2728

cond.false.2677:                                  ; preds = %cond.end.2646
  %1907 = load i16, i16* %weightSpic, align 2
  %conv2678 = sext i16 %1907 to i32
  %1908 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1909 = load i16**, i16*** %ref1_pic, align 8
  %1910 = load i16, i16* %sy, align 2
  %conv2679 = sext i16 %1910 to i32
  %1911 = load i16, i16* %sx0, align 2
  %conv2680 = sext i16 %1911 to i32
  %add2681 = add nsw i32 %conv2680, 4
  %1912 = load i32, i32* %img_height, align 4
  %1913 = load i32, i32* %img_width, align 4
  %call2682 = call zeroext i16 %1908(i16** %1909, i32 %conv2679, i32 %add2681, i32 %1912, i32 %1913)
  %conv2683 = zext i16 %call2682 to i32
  %mul2684 = mul nsw i32 %conv2678, %conv2683
  %1914 = load i16, i16* %weightRpic, align 2
  %conv2685 = sext i16 %1914 to i32
  %1915 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1916 = load i16**, i16*** %ref2_pic, align 8
  %1917 = load i16, i16* %ry, align 2
  %conv2686 = sext i16 %1917 to i32
  %1918 = load i16, i16* %rx0, align 2
  %conv2687 = sext i16 %1918 to i32
  %add2688 = add nsw i32 %conv2687, 4
  %1919 = load i32, i32* %img_height, align 4
  %1920 = load i32, i32* %img_width, align 4
  %call2689 = call zeroext i16 %1915(i16** %1916, i32 %conv2686, i32 %add2688, i32 %1919, i32 %1920)
  %conv2690 = zext i16 %call2689 to i32
  %mul2691 = mul nsw i32 %conv2685, %conv2690
  %add2692 = add nsw i32 %mul2684, %mul2691
  %1921 = load i32, i32* @wp_luma_round, align 4
  %mul2693 = mul nsw i32 2, %1921
  %add2694 = add nsw i32 %add2692, %mul2693
  %1922 = load i32, i32* @luma_log_weight_denom, align 4
  %add2695 = add nsw i32 %1922, 1
  %shr2696 = ashr i32 %add2694, %add2695
  %1923 = load i16, i16* %offsetBi, align 2
  %conv2697 = sext i16 %1923 to i32
  %add2698 = add nsw i32 %shr2696, %conv2697
  %1924 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value2699 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1924, i32 0, i32 155
  %1925 = load i32, i32* %max_imgpel_value2699, align 4
  %cmp2700 = icmp sgt i32 %add2698, %1925
  br i1 %cmp2700, label %cond.true.2702, label %cond.false.2704

cond.true.2702:                                   ; preds = %cond.false.2677
  %1926 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value2703 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1926, i32 0, i32 155
  %1927 = load i32, i32* %max_imgpel_value2703, align 4
  br label %cond.end.2726

cond.false.2704:                                  ; preds = %cond.false.2677
  %1928 = load i16, i16* %weightSpic, align 2
  %conv2705 = sext i16 %1928 to i32
  %1929 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1930 = load i16**, i16*** %ref1_pic, align 8
  %1931 = load i16, i16* %sy, align 2
  %conv2706 = sext i16 %1931 to i32
  %1932 = load i16, i16* %sx0, align 2
  %conv2707 = sext i16 %1932 to i32
  %add2708 = add nsw i32 %conv2707, 4
  %1933 = load i32, i32* %img_height, align 4
  %1934 = load i32, i32* %img_width, align 4
  %call2709 = call zeroext i16 %1929(i16** %1930, i32 %conv2706, i32 %add2708, i32 %1933, i32 %1934)
  %conv2710 = zext i16 %call2709 to i32
  %mul2711 = mul nsw i32 %conv2705, %conv2710
  %1935 = load i16, i16* %weightRpic, align 2
  %conv2712 = sext i16 %1935 to i32
  %1936 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1937 = load i16**, i16*** %ref2_pic, align 8
  %1938 = load i16, i16* %ry, align 2
  %conv2713 = sext i16 %1938 to i32
  %1939 = load i16, i16* %rx0, align 2
  %conv2714 = sext i16 %1939 to i32
  %add2715 = add nsw i32 %conv2714, 4
  %1940 = load i32, i32* %img_height, align 4
  %1941 = load i32, i32* %img_width, align 4
  %call2716 = call zeroext i16 %1936(i16** %1937, i32 %conv2713, i32 %add2715, i32 %1940, i32 %1941)
  %conv2717 = zext i16 %call2716 to i32
  %mul2718 = mul nsw i32 %conv2712, %conv2717
  %add2719 = add nsw i32 %mul2711, %mul2718
  %1942 = load i32, i32* @wp_luma_round, align 4
  %mul2720 = mul nsw i32 2, %1942
  %add2721 = add nsw i32 %add2719, %mul2720
  %1943 = load i32, i32* @luma_log_weight_denom, align 4
  %add2722 = add nsw i32 %1943, 1
  %shr2723 = ashr i32 %add2721, %add2722
  %1944 = load i16, i16* %offsetBi, align 2
  %conv2724 = sext i16 %1944 to i32
  %add2725 = add nsw i32 %shr2723, %conv2724
  br label %cond.end.2726

cond.end.2726:                                    ; preds = %cond.false.2704, %cond.true.2702
  %cond2727 = phi i32 [ %1927, %cond.true.2702 ], [ %add2725, %cond.false.2704 ]
  br label %cond.end.2728

cond.end.2728:                                    ; preds = %cond.end.2726, %cond.true.2676
  %cond2729 = phi i32 [ 0, %cond.true.2676 ], [ %cond2727, %cond.end.2726 ]
  store i32 %cond2729, i32* %weightedpel, align 4
  %1945 = load i16, i16* %x0, align 2
  %conv2730 = sext i16 %1945 to i32
  %add2731 = add nsw i32 %conv2730, 1
  %idxprom2732 = sext i32 %add2731 to i64
  %1946 = load i16*, i16** %orig_line, align 8
  %arrayidx2733 = getelementptr inbounds i16, i16* %1946, i64 %idxprom2732
  %1947 = load i16, i16* %arrayidx2733, align 2
  %conv2734 = zext i16 %1947 to i32
  %1948 = load i32, i32* %weightedpel, align 4
  %sub2735 = sub nsw i32 %conv2734, %1948
  %1949 = load i32*, i32** %d, align 8
  %incdec.ptr2736 = getelementptr inbounds i32, i32* %1949, i32 1
  store i32* %incdec.ptr2736, i32** %d, align 8
  store i32 %sub2735, i32* %1949, align 4
  %1950 = load i16, i16* %weightSpic, align 2
  %conv2737 = sext i16 %1950 to i32
  %1951 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1952 = load i16**, i16*** %ref1_pic, align 8
  %1953 = load i16, i16* %sy, align 2
  %conv2738 = sext i16 %1953 to i32
  %1954 = load i16, i16* %sx0, align 2
  %conv2739 = sext i16 %1954 to i32
  %add2740 = add nsw i32 %conv2739, 8
  %1955 = load i32, i32* %img_height, align 4
  %1956 = load i32, i32* %img_width, align 4
  %call2741 = call zeroext i16 %1951(i16** %1952, i32 %conv2738, i32 %add2740, i32 %1955, i32 %1956)
  %conv2742 = zext i16 %call2741 to i32
  %mul2743 = mul nsw i32 %conv2737, %conv2742
  %1957 = load i16, i16* %weightRpic, align 2
  %conv2744 = sext i16 %1957 to i32
  %1958 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1959 = load i16**, i16*** %ref2_pic, align 8
  %1960 = load i16, i16* %ry, align 2
  %conv2745 = sext i16 %1960 to i32
  %1961 = load i16, i16* %rx0, align 2
  %conv2746 = sext i16 %1961 to i32
  %add2747 = add nsw i32 %conv2746, 8
  %1962 = load i32, i32* %img_height, align 4
  %1963 = load i32, i32* %img_width, align 4
  %call2748 = call zeroext i16 %1958(i16** %1959, i32 %conv2745, i32 %add2747, i32 %1962, i32 %1963)
  %conv2749 = zext i16 %call2748 to i32
  %mul2750 = mul nsw i32 %conv2744, %conv2749
  %add2751 = add nsw i32 %mul2743, %mul2750
  %1964 = load i32, i32* @wp_luma_round, align 4
  %mul2752 = mul nsw i32 2, %1964
  %add2753 = add nsw i32 %add2751, %mul2752
  %1965 = load i32, i32* @luma_log_weight_denom, align 4
  %add2754 = add nsw i32 %1965, 1
  %shr2755 = ashr i32 %add2753, %add2754
  %1966 = load i16, i16* %offsetBi, align 2
  %conv2756 = sext i16 %1966 to i32
  %add2757 = add nsw i32 %shr2755, %conv2756
  %cmp2758 = icmp slt i32 %add2757, 0
  br i1 %cmp2758, label %cond.true.2760, label %cond.false.2761

cond.true.2760:                                   ; preds = %cond.end.2728
  br label %cond.end.2812

cond.false.2761:                                  ; preds = %cond.end.2728
  %1967 = load i16, i16* %weightSpic, align 2
  %conv2762 = sext i16 %1967 to i32
  %1968 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1969 = load i16**, i16*** %ref1_pic, align 8
  %1970 = load i16, i16* %sy, align 2
  %conv2763 = sext i16 %1970 to i32
  %1971 = load i16, i16* %sx0, align 2
  %conv2764 = sext i16 %1971 to i32
  %add2765 = add nsw i32 %conv2764, 8
  %1972 = load i32, i32* %img_height, align 4
  %1973 = load i32, i32* %img_width, align 4
  %call2766 = call zeroext i16 %1968(i16** %1969, i32 %conv2763, i32 %add2765, i32 %1972, i32 %1973)
  %conv2767 = zext i16 %call2766 to i32
  %mul2768 = mul nsw i32 %conv2762, %conv2767
  %1974 = load i16, i16* %weightRpic, align 2
  %conv2769 = sext i16 %1974 to i32
  %1975 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1976 = load i16**, i16*** %ref2_pic, align 8
  %1977 = load i16, i16* %ry, align 2
  %conv2770 = sext i16 %1977 to i32
  %1978 = load i16, i16* %rx0, align 2
  %conv2771 = sext i16 %1978 to i32
  %add2772 = add nsw i32 %conv2771, 8
  %1979 = load i32, i32* %img_height, align 4
  %1980 = load i32, i32* %img_width, align 4
  %call2773 = call zeroext i16 %1975(i16** %1976, i32 %conv2770, i32 %add2772, i32 %1979, i32 %1980)
  %conv2774 = zext i16 %call2773 to i32
  %mul2775 = mul nsw i32 %conv2769, %conv2774
  %add2776 = add nsw i32 %mul2768, %mul2775
  %1981 = load i32, i32* @wp_luma_round, align 4
  %mul2777 = mul nsw i32 2, %1981
  %add2778 = add nsw i32 %add2776, %mul2777
  %1982 = load i32, i32* @luma_log_weight_denom, align 4
  %add2779 = add nsw i32 %1982, 1
  %shr2780 = ashr i32 %add2778, %add2779
  %1983 = load i16, i16* %offsetBi, align 2
  %conv2781 = sext i16 %1983 to i32
  %add2782 = add nsw i32 %shr2780, %conv2781
  %1984 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value2783 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1984, i32 0, i32 155
  %1985 = load i32, i32* %max_imgpel_value2783, align 4
  %cmp2784 = icmp sgt i32 %add2782, %1985
  br i1 %cmp2784, label %cond.true.2786, label %cond.false.2788

cond.true.2786:                                   ; preds = %cond.false.2761
  %1986 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value2787 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1986, i32 0, i32 155
  %1987 = load i32, i32* %max_imgpel_value2787, align 4
  br label %cond.end.2810

cond.false.2788:                                  ; preds = %cond.false.2761
  %1988 = load i16, i16* %weightSpic, align 2
  %conv2789 = sext i16 %1988 to i32
  %1989 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1990 = load i16**, i16*** %ref1_pic, align 8
  %1991 = load i16, i16* %sy, align 2
  %conv2790 = sext i16 %1991 to i32
  %1992 = load i16, i16* %sx0, align 2
  %conv2791 = sext i16 %1992 to i32
  %add2792 = add nsw i32 %conv2791, 8
  %1993 = load i32, i32* %img_height, align 4
  %1994 = load i32, i32* %img_width, align 4
  %call2793 = call zeroext i16 %1989(i16** %1990, i32 %conv2790, i32 %add2792, i32 %1993, i32 %1994)
  %conv2794 = zext i16 %call2793 to i32
  %mul2795 = mul nsw i32 %conv2789, %conv2794
  %1995 = load i16, i16* %weightRpic, align 2
  %conv2796 = sext i16 %1995 to i32
  %1996 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1997 = load i16**, i16*** %ref2_pic, align 8
  %1998 = load i16, i16* %ry, align 2
  %conv2797 = sext i16 %1998 to i32
  %1999 = load i16, i16* %rx0, align 2
  %conv2798 = sext i16 %1999 to i32
  %add2799 = add nsw i32 %conv2798, 8
  %2000 = load i32, i32* %img_height, align 4
  %2001 = load i32, i32* %img_width, align 4
  %call2800 = call zeroext i16 %1996(i16** %1997, i32 %conv2797, i32 %add2799, i32 %2000, i32 %2001)
  %conv2801 = zext i16 %call2800 to i32
  %mul2802 = mul nsw i32 %conv2796, %conv2801
  %add2803 = add nsw i32 %mul2795, %mul2802
  %2002 = load i32, i32* @wp_luma_round, align 4
  %mul2804 = mul nsw i32 2, %2002
  %add2805 = add nsw i32 %add2803, %mul2804
  %2003 = load i32, i32* @luma_log_weight_denom, align 4
  %add2806 = add nsw i32 %2003, 1
  %shr2807 = ashr i32 %add2805, %add2806
  %2004 = load i16, i16* %offsetBi, align 2
  %conv2808 = sext i16 %2004 to i32
  %add2809 = add nsw i32 %shr2807, %conv2808
  br label %cond.end.2810

cond.end.2810:                                    ; preds = %cond.false.2788, %cond.true.2786
  %cond2811 = phi i32 [ %1987, %cond.true.2786 ], [ %add2809, %cond.false.2788 ]
  br label %cond.end.2812

cond.end.2812:                                    ; preds = %cond.end.2810, %cond.true.2760
  %cond2813 = phi i32 [ 0, %cond.true.2760 ], [ %cond2811, %cond.end.2810 ]
  store i32 %cond2813, i32* %weightedpel, align 4
  %2005 = load i16, i16* %x0, align 2
  %conv2814 = sext i16 %2005 to i32
  %add2815 = add nsw i32 %conv2814, 2
  %idxprom2816 = sext i32 %add2815 to i64
  %2006 = load i16*, i16** %orig_line, align 8
  %arrayidx2817 = getelementptr inbounds i16, i16* %2006, i64 %idxprom2816
  %2007 = load i16, i16* %arrayidx2817, align 2
  %conv2818 = zext i16 %2007 to i32
  %2008 = load i32, i32* %weightedpel, align 4
  %sub2819 = sub nsw i32 %conv2818, %2008
  %2009 = load i32*, i32** %d, align 8
  %incdec.ptr2820 = getelementptr inbounds i32, i32* %2009, i32 1
  store i32* %incdec.ptr2820, i32** %d, align 8
  store i32 %sub2819, i32* %2009, align 4
  %2010 = load i16, i16* %weightSpic, align 2
  %conv2821 = sext i16 %2010 to i32
  %2011 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2012 = load i16**, i16*** %ref1_pic, align 8
  %2013 = load i16, i16* %sy, align 2
  %conv2822 = sext i16 %2013 to i32
  %2014 = load i16, i16* %sx0, align 2
  %conv2823 = sext i16 %2014 to i32
  %add2824 = add nsw i32 %conv2823, 12
  %2015 = load i32, i32* %img_height, align 4
  %2016 = load i32, i32* %img_width, align 4
  %call2825 = call zeroext i16 %2011(i16** %2012, i32 %conv2822, i32 %add2824, i32 %2015, i32 %2016)
  %conv2826 = zext i16 %call2825 to i32
  %mul2827 = mul nsw i32 %conv2821, %conv2826
  %2017 = load i16, i16* %weightRpic, align 2
  %conv2828 = sext i16 %2017 to i32
  %2018 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2019 = load i16**, i16*** %ref2_pic, align 8
  %2020 = load i16, i16* %ry, align 2
  %conv2829 = sext i16 %2020 to i32
  %2021 = load i16, i16* %rx0, align 2
  %conv2830 = sext i16 %2021 to i32
  %add2831 = add nsw i32 %conv2830, 12
  %2022 = load i32, i32* %img_height, align 4
  %2023 = load i32, i32* %img_width, align 4
  %call2832 = call zeroext i16 %2018(i16** %2019, i32 %conv2829, i32 %add2831, i32 %2022, i32 %2023)
  %conv2833 = zext i16 %call2832 to i32
  %mul2834 = mul nsw i32 %conv2828, %conv2833
  %add2835 = add nsw i32 %mul2827, %mul2834
  %2024 = load i32, i32* @wp_luma_round, align 4
  %mul2836 = mul nsw i32 2, %2024
  %add2837 = add nsw i32 %add2835, %mul2836
  %2025 = load i32, i32* @luma_log_weight_denom, align 4
  %add2838 = add nsw i32 %2025, 1
  %shr2839 = ashr i32 %add2837, %add2838
  %2026 = load i16, i16* %offsetBi, align 2
  %conv2840 = sext i16 %2026 to i32
  %add2841 = add nsw i32 %shr2839, %conv2840
  %cmp2842 = icmp slt i32 %add2841, 0
  br i1 %cmp2842, label %cond.true.2844, label %cond.false.2845

cond.true.2844:                                   ; preds = %cond.end.2812
  br label %cond.end.2896

cond.false.2845:                                  ; preds = %cond.end.2812
  %2027 = load i16, i16* %weightSpic, align 2
  %conv2846 = sext i16 %2027 to i32
  %2028 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2029 = load i16**, i16*** %ref1_pic, align 8
  %2030 = load i16, i16* %sy, align 2
  %conv2847 = sext i16 %2030 to i32
  %2031 = load i16, i16* %sx0, align 2
  %conv2848 = sext i16 %2031 to i32
  %add2849 = add nsw i32 %conv2848, 12
  %2032 = load i32, i32* %img_height, align 4
  %2033 = load i32, i32* %img_width, align 4
  %call2850 = call zeroext i16 %2028(i16** %2029, i32 %conv2847, i32 %add2849, i32 %2032, i32 %2033)
  %conv2851 = zext i16 %call2850 to i32
  %mul2852 = mul nsw i32 %conv2846, %conv2851
  %2034 = load i16, i16* %weightRpic, align 2
  %conv2853 = sext i16 %2034 to i32
  %2035 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2036 = load i16**, i16*** %ref2_pic, align 8
  %2037 = load i16, i16* %ry, align 2
  %conv2854 = sext i16 %2037 to i32
  %2038 = load i16, i16* %rx0, align 2
  %conv2855 = sext i16 %2038 to i32
  %add2856 = add nsw i32 %conv2855, 12
  %2039 = load i32, i32* %img_height, align 4
  %2040 = load i32, i32* %img_width, align 4
  %call2857 = call zeroext i16 %2035(i16** %2036, i32 %conv2854, i32 %add2856, i32 %2039, i32 %2040)
  %conv2858 = zext i16 %call2857 to i32
  %mul2859 = mul nsw i32 %conv2853, %conv2858
  %add2860 = add nsw i32 %mul2852, %mul2859
  %2041 = load i32, i32* @wp_luma_round, align 4
  %mul2861 = mul nsw i32 2, %2041
  %add2862 = add nsw i32 %add2860, %mul2861
  %2042 = load i32, i32* @luma_log_weight_denom, align 4
  %add2863 = add nsw i32 %2042, 1
  %shr2864 = ashr i32 %add2862, %add2863
  %2043 = load i16, i16* %offsetBi, align 2
  %conv2865 = sext i16 %2043 to i32
  %add2866 = add nsw i32 %shr2864, %conv2865
  %2044 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value2867 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2044, i32 0, i32 155
  %2045 = load i32, i32* %max_imgpel_value2867, align 4
  %cmp2868 = icmp sgt i32 %add2866, %2045
  br i1 %cmp2868, label %cond.true.2870, label %cond.false.2872

cond.true.2870:                                   ; preds = %cond.false.2845
  %2046 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value2871 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2046, i32 0, i32 155
  %2047 = load i32, i32* %max_imgpel_value2871, align 4
  br label %cond.end.2894

cond.false.2872:                                  ; preds = %cond.false.2845
  %2048 = load i16, i16* %weightSpic, align 2
  %conv2873 = sext i16 %2048 to i32
  %2049 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2050 = load i16**, i16*** %ref1_pic, align 8
  %2051 = load i16, i16* %sy, align 2
  %conv2874 = sext i16 %2051 to i32
  %2052 = load i16, i16* %sx0, align 2
  %conv2875 = sext i16 %2052 to i32
  %add2876 = add nsw i32 %conv2875, 12
  %2053 = load i32, i32* %img_height, align 4
  %2054 = load i32, i32* %img_width, align 4
  %call2877 = call zeroext i16 %2049(i16** %2050, i32 %conv2874, i32 %add2876, i32 %2053, i32 %2054)
  %conv2878 = zext i16 %call2877 to i32
  %mul2879 = mul nsw i32 %conv2873, %conv2878
  %2055 = load i16, i16* %weightRpic, align 2
  %conv2880 = sext i16 %2055 to i32
  %2056 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2057 = load i16**, i16*** %ref2_pic, align 8
  %2058 = load i16, i16* %ry, align 2
  %conv2881 = sext i16 %2058 to i32
  %2059 = load i16, i16* %rx0, align 2
  %conv2882 = sext i16 %2059 to i32
  %add2883 = add nsw i32 %conv2882, 12
  %2060 = load i32, i32* %img_height, align 4
  %2061 = load i32, i32* %img_width, align 4
  %call2884 = call zeroext i16 %2056(i16** %2057, i32 %conv2881, i32 %add2883, i32 %2060, i32 %2061)
  %conv2885 = zext i16 %call2884 to i32
  %mul2886 = mul nsw i32 %conv2880, %conv2885
  %add2887 = add nsw i32 %mul2879, %mul2886
  %2062 = load i32, i32* @wp_luma_round, align 4
  %mul2888 = mul nsw i32 2, %2062
  %add2889 = add nsw i32 %add2887, %mul2888
  %2063 = load i32, i32* @luma_log_weight_denom, align 4
  %add2890 = add nsw i32 %2063, 1
  %shr2891 = ashr i32 %add2889, %add2890
  %2064 = load i16, i16* %offsetBi, align 2
  %conv2892 = sext i16 %2064 to i32
  %add2893 = add nsw i32 %shr2891, %conv2892
  br label %cond.end.2894

cond.end.2894:                                    ; preds = %cond.false.2872, %cond.true.2870
  %cond2895 = phi i32 [ %2047, %cond.true.2870 ], [ %add2893, %cond.false.2872 ]
  br label %cond.end.2896

cond.end.2896:                                    ; preds = %cond.end.2894, %cond.true.2844
  %cond2897 = phi i32 [ 0, %cond.true.2844 ], [ %cond2895, %cond.end.2894 ]
  store i32 %cond2897, i32* %weightedpel, align 4
  %2065 = load i16, i16* %x0, align 2
  %conv2898 = sext i16 %2065 to i32
  %add2899 = add nsw i32 %conv2898, 3
  %idxprom2900 = sext i32 %add2899 to i64
  %2066 = load i16*, i16** %orig_line, align 8
  %arrayidx2901 = getelementptr inbounds i16, i16* %2066, i64 %idxprom2900
  %2067 = load i16, i16* %arrayidx2901, align 2
  %conv2902 = zext i16 %2067 to i32
  %2068 = load i32, i32* %weightedpel, align 4
  %sub2903 = sub nsw i32 %conv2902, %2068
  %2069 = load i32*, i32** %d, align 8
  %incdec.ptr2904 = getelementptr inbounds i32, i32* %2069, i32 1
  store i32* %incdec.ptr2904, i32** %d, align 8
  store i32 %sub2903, i32* %2069, align 4
  %2070 = load i16, i16* %sy0, align 2
  %conv2905 = sext i16 %2070 to i32
  %add2906 = add nsw i32 %conv2905, 8
  %conv2907 = trunc i32 %add2906 to i16
  store i16 %conv2907, i16* %sy, align 2
  %2071 = load i16, i16* %y0, align 2
  %conv2908 = sext i16 %2071 to i32
  %add2909 = add nsw i32 %conv2908, 2
  %idxprom2910 = sext i32 %add2909 to i64
  %2072 = load i16**, i16*** %orig_pic.addr, align 8
  %arrayidx2911 = getelementptr inbounds i16*, i16** %2072, i64 %idxprom2910
  %2073 = load i16*, i16** %arrayidx2911, align 8
  store i16* %2073, i16** %orig_line, align 8
  %2074 = load i16, i16* %ry0, align 2
  %conv2912 = sext i16 %2074 to i32
  %add2913 = add nsw i32 %conv2912, 8
  %conv2914 = trunc i32 %add2913 to i16
  store i16 %conv2914, i16* %ry, align 2
  %2075 = load i16, i16* %weightSpic, align 2
  %conv2915 = sext i16 %2075 to i32
  %2076 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2077 = load i16**, i16*** %ref1_pic, align 8
  %2078 = load i16, i16* %sy, align 2
  %conv2916 = sext i16 %2078 to i32
  %2079 = load i16, i16* %sx0, align 2
  %conv2917 = sext i16 %2079 to i32
  %2080 = load i32, i32* %img_height, align 4
  %2081 = load i32, i32* %img_width, align 4
  %call2918 = call zeroext i16 %2076(i16** %2077, i32 %conv2916, i32 %conv2917, i32 %2080, i32 %2081)
  %conv2919 = zext i16 %call2918 to i32
  %mul2920 = mul nsw i32 %conv2915, %conv2919
  %2082 = load i16, i16* %weightRpic, align 2
  %conv2921 = sext i16 %2082 to i32
  %2083 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2084 = load i16**, i16*** %ref2_pic, align 8
  %2085 = load i16, i16* %ry, align 2
  %conv2922 = sext i16 %2085 to i32
  %2086 = load i16, i16* %rx0, align 2
  %conv2923 = sext i16 %2086 to i32
  %2087 = load i32, i32* %img_height, align 4
  %2088 = load i32, i32* %img_width, align 4
  %call2924 = call zeroext i16 %2083(i16** %2084, i32 %conv2922, i32 %conv2923, i32 %2087, i32 %2088)
  %conv2925 = zext i16 %call2924 to i32
  %mul2926 = mul nsw i32 %conv2921, %conv2925
  %add2927 = add nsw i32 %mul2920, %mul2926
  %2089 = load i32, i32* @wp_luma_round, align 4
  %mul2928 = mul nsw i32 2, %2089
  %add2929 = add nsw i32 %add2927, %mul2928
  %2090 = load i32, i32* @luma_log_weight_denom, align 4
  %add2930 = add nsw i32 %2090, 1
  %shr2931 = ashr i32 %add2929, %add2930
  %2091 = load i16, i16* %offsetBi, align 2
  %conv2932 = sext i16 %2091 to i32
  %add2933 = add nsw i32 %shr2931, %conv2932
  %cmp2934 = icmp slt i32 %add2933, 0
  br i1 %cmp2934, label %cond.true.2936, label %cond.false.2937

cond.true.2936:                                   ; preds = %cond.end.2896
  br label %cond.end.2984

cond.false.2937:                                  ; preds = %cond.end.2896
  %2092 = load i16, i16* %weightSpic, align 2
  %conv2938 = sext i16 %2092 to i32
  %2093 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2094 = load i16**, i16*** %ref1_pic, align 8
  %2095 = load i16, i16* %sy, align 2
  %conv2939 = sext i16 %2095 to i32
  %2096 = load i16, i16* %sx0, align 2
  %conv2940 = sext i16 %2096 to i32
  %2097 = load i32, i32* %img_height, align 4
  %2098 = load i32, i32* %img_width, align 4
  %call2941 = call zeroext i16 %2093(i16** %2094, i32 %conv2939, i32 %conv2940, i32 %2097, i32 %2098)
  %conv2942 = zext i16 %call2941 to i32
  %mul2943 = mul nsw i32 %conv2938, %conv2942
  %2099 = load i16, i16* %weightRpic, align 2
  %conv2944 = sext i16 %2099 to i32
  %2100 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2101 = load i16**, i16*** %ref2_pic, align 8
  %2102 = load i16, i16* %ry, align 2
  %conv2945 = sext i16 %2102 to i32
  %2103 = load i16, i16* %rx0, align 2
  %conv2946 = sext i16 %2103 to i32
  %2104 = load i32, i32* %img_height, align 4
  %2105 = load i32, i32* %img_width, align 4
  %call2947 = call zeroext i16 %2100(i16** %2101, i32 %conv2945, i32 %conv2946, i32 %2104, i32 %2105)
  %conv2948 = zext i16 %call2947 to i32
  %mul2949 = mul nsw i32 %conv2944, %conv2948
  %add2950 = add nsw i32 %mul2943, %mul2949
  %2106 = load i32, i32* @wp_luma_round, align 4
  %mul2951 = mul nsw i32 2, %2106
  %add2952 = add nsw i32 %add2950, %mul2951
  %2107 = load i32, i32* @luma_log_weight_denom, align 4
  %add2953 = add nsw i32 %2107, 1
  %shr2954 = ashr i32 %add2952, %add2953
  %2108 = load i16, i16* %offsetBi, align 2
  %conv2955 = sext i16 %2108 to i32
  %add2956 = add nsw i32 %shr2954, %conv2955
  %2109 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value2957 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2109, i32 0, i32 155
  %2110 = load i32, i32* %max_imgpel_value2957, align 4
  %cmp2958 = icmp sgt i32 %add2956, %2110
  br i1 %cmp2958, label %cond.true.2960, label %cond.false.2962

cond.true.2960:                                   ; preds = %cond.false.2937
  %2111 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value2961 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2111, i32 0, i32 155
  %2112 = load i32, i32* %max_imgpel_value2961, align 4
  br label %cond.end.2982

cond.false.2962:                                  ; preds = %cond.false.2937
  %2113 = load i16, i16* %weightSpic, align 2
  %conv2963 = sext i16 %2113 to i32
  %2114 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2115 = load i16**, i16*** %ref1_pic, align 8
  %2116 = load i16, i16* %sy, align 2
  %conv2964 = sext i16 %2116 to i32
  %2117 = load i16, i16* %sx0, align 2
  %conv2965 = sext i16 %2117 to i32
  %2118 = load i32, i32* %img_height, align 4
  %2119 = load i32, i32* %img_width, align 4
  %call2966 = call zeroext i16 %2114(i16** %2115, i32 %conv2964, i32 %conv2965, i32 %2118, i32 %2119)
  %conv2967 = zext i16 %call2966 to i32
  %mul2968 = mul nsw i32 %conv2963, %conv2967
  %2120 = load i16, i16* %weightRpic, align 2
  %conv2969 = sext i16 %2120 to i32
  %2121 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2122 = load i16**, i16*** %ref2_pic, align 8
  %2123 = load i16, i16* %ry, align 2
  %conv2970 = sext i16 %2123 to i32
  %2124 = load i16, i16* %rx0, align 2
  %conv2971 = sext i16 %2124 to i32
  %2125 = load i32, i32* %img_height, align 4
  %2126 = load i32, i32* %img_width, align 4
  %call2972 = call zeroext i16 %2121(i16** %2122, i32 %conv2970, i32 %conv2971, i32 %2125, i32 %2126)
  %conv2973 = zext i16 %call2972 to i32
  %mul2974 = mul nsw i32 %conv2969, %conv2973
  %add2975 = add nsw i32 %mul2968, %mul2974
  %2127 = load i32, i32* @wp_luma_round, align 4
  %mul2976 = mul nsw i32 2, %2127
  %add2977 = add nsw i32 %add2975, %mul2976
  %2128 = load i32, i32* @luma_log_weight_denom, align 4
  %add2978 = add nsw i32 %2128, 1
  %shr2979 = ashr i32 %add2977, %add2978
  %2129 = load i16, i16* %offsetBi, align 2
  %conv2980 = sext i16 %2129 to i32
  %add2981 = add nsw i32 %shr2979, %conv2980
  br label %cond.end.2982

cond.end.2982:                                    ; preds = %cond.false.2962, %cond.true.2960
  %cond2983 = phi i32 [ %2112, %cond.true.2960 ], [ %add2981, %cond.false.2962 ]
  br label %cond.end.2984

cond.end.2984:                                    ; preds = %cond.end.2982, %cond.true.2936
  %cond2985 = phi i32 [ 0, %cond.true.2936 ], [ %cond2983, %cond.end.2982 ]
  store i32 %cond2985, i32* %weightedpel, align 4
  %2130 = load i16, i16* %x0, align 2
  %idxprom2986 = sext i16 %2130 to i64
  %2131 = load i16*, i16** %orig_line, align 8
  %arrayidx2987 = getelementptr inbounds i16, i16* %2131, i64 %idxprom2986
  %2132 = load i16, i16* %arrayidx2987, align 2
  %conv2988 = zext i16 %2132 to i32
  %2133 = load i32, i32* %weightedpel, align 4
  %sub2989 = sub nsw i32 %conv2988, %2133
  %2134 = load i32*, i32** %d, align 8
  %incdec.ptr2990 = getelementptr inbounds i32, i32* %2134, i32 1
  store i32* %incdec.ptr2990, i32** %d, align 8
  store i32 %sub2989, i32* %2134, align 4
  %2135 = load i16, i16* %weightSpic, align 2
  %conv2991 = sext i16 %2135 to i32
  %2136 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2137 = load i16**, i16*** %ref1_pic, align 8
  %2138 = load i16, i16* %sy, align 2
  %conv2992 = sext i16 %2138 to i32
  %2139 = load i16, i16* %sx0, align 2
  %conv2993 = sext i16 %2139 to i32
  %add2994 = add nsw i32 %conv2993, 4
  %2140 = load i32, i32* %img_height, align 4
  %2141 = load i32, i32* %img_width, align 4
  %call2995 = call zeroext i16 %2136(i16** %2137, i32 %conv2992, i32 %add2994, i32 %2140, i32 %2141)
  %conv2996 = zext i16 %call2995 to i32
  %mul2997 = mul nsw i32 %conv2991, %conv2996
  %2142 = load i16, i16* %weightRpic, align 2
  %conv2998 = sext i16 %2142 to i32
  %2143 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2144 = load i16**, i16*** %ref2_pic, align 8
  %2145 = load i16, i16* %ry, align 2
  %conv2999 = sext i16 %2145 to i32
  %2146 = load i16, i16* %rx0, align 2
  %conv3000 = sext i16 %2146 to i32
  %add3001 = add nsw i32 %conv3000, 4
  %2147 = load i32, i32* %img_height, align 4
  %2148 = load i32, i32* %img_width, align 4
  %call3002 = call zeroext i16 %2143(i16** %2144, i32 %conv2999, i32 %add3001, i32 %2147, i32 %2148)
  %conv3003 = zext i16 %call3002 to i32
  %mul3004 = mul nsw i32 %conv2998, %conv3003
  %add3005 = add nsw i32 %mul2997, %mul3004
  %2149 = load i32, i32* @wp_luma_round, align 4
  %mul3006 = mul nsw i32 2, %2149
  %add3007 = add nsw i32 %add3005, %mul3006
  %2150 = load i32, i32* @luma_log_weight_denom, align 4
  %add3008 = add nsw i32 %2150, 1
  %shr3009 = ashr i32 %add3007, %add3008
  %2151 = load i16, i16* %offsetBi, align 2
  %conv3010 = sext i16 %2151 to i32
  %add3011 = add nsw i32 %shr3009, %conv3010
  %cmp3012 = icmp slt i32 %add3011, 0
  br i1 %cmp3012, label %cond.true.3014, label %cond.false.3015

cond.true.3014:                                   ; preds = %cond.end.2984
  br label %cond.end.3066

cond.false.3015:                                  ; preds = %cond.end.2984
  %2152 = load i16, i16* %weightSpic, align 2
  %conv3016 = sext i16 %2152 to i32
  %2153 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2154 = load i16**, i16*** %ref1_pic, align 8
  %2155 = load i16, i16* %sy, align 2
  %conv3017 = sext i16 %2155 to i32
  %2156 = load i16, i16* %sx0, align 2
  %conv3018 = sext i16 %2156 to i32
  %add3019 = add nsw i32 %conv3018, 4
  %2157 = load i32, i32* %img_height, align 4
  %2158 = load i32, i32* %img_width, align 4
  %call3020 = call zeroext i16 %2153(i16** %2154, i32 %conv3017, i32 %add3019, i32 %2157, i32 %2158)
  %conv3021 = zext i16 %call3020 to i32
  %mul3022 = mul nsw i32 %conv3016, %conv3021
  %2159 = load i16, i16* %weightRpic, align 2
  %conv3023 = sext i16 %2159 to i32
  %2160 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2161 = load i16**, i16*** %ref2_pic, align 8
  %2162 = load i16, i16* %ry, align 2
  %conv3024 = sext i16 %2162 to i32
  %2163 = load i16, i16* %rx0, align 2
  %conv3025 = sext i16 %2163 to i32
  %add3026 = add nsw i32 %conv3025, 4
  %2164 = load i32, i32* %img_height, align 4
  %2165 = load i32, i32* %img_width, align 4
  %call3027 = call zeroext i16 %2160(i16** %2161, i32 %conv3024, i32 %add3026, i32 %2164, i32 %2165)
  %conv3028 = zext i16 %call3027 to i32
  %mul3029 = mul nsw i32 %conv3023, %conv3028
  %add3030 = add nsw i32 %mul3022, %mul3029
  %2166 = load i32, i32* @wp_luma_round, align 4
  %mul3031 = mul nsw i32 2, %2166
  %add3032 = add nsw i32 %add3030, %mul3031
  %2167 = load i32, i32* @luma_log_weight_denom, align 4
  %add3033 = add nsw i32 %2167, 1
  %shr3034 = ashr i32 %add3032, %add3033
  %2168 = load i16, i16* %offsetBi, align 2
  %conv3035 = sext i16 %2168 to i32
  %add3036 = add nsw i32 %shr3034, %conv3035
  %2169 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value3037 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2169, i32 0, i32 155
  %2170 = load i32, i32* %max_imgpel_value3037, align 4
  %cmp3038 = icmp sgt i32 %add3036, %2170
  br i1 %cmp3038, label %cond.true.3040, label %cond.false.3042

cond.true.3040:                                   ; preds = %cond.false.3015
  %2171 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value3041 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2171, i32 0, i32 155
  %2172 = load i32, i32* %max_imgpel_value3041, align 4
  br label %cond.end.3064

cond.false.3042:                                  ; preds = %cond.false.3015
  %2173 = load i16, i16* %weightSpic, align 2
  %conv3043 = sext i16 %2173 to i32
  %2174 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2175 = load i16**, i16*** %ref1_pic, align 8
  %2176 = load i16, i16* %sy, align 2
  %conv3044 = sext i16 %2176 to i32
  %2177 = load i16, i16* %sx0, align 2
  %conv3045 = sext i16 %2177 to i32
  %add3046 = add nsw i32 %conv3045, 4
  %2178 = load i32, i32* %img_height, align 4
  %2179 = load i32, i32* %img_width, align 4
  %call3047 = call zeroext i16 %2174(i16** %2175, i32 %conv3044, i32 %add3046, i32 %2178, i32 %2179)
  %conv3048 = zext i16 %call3047 to i32
  %mul3049 = mul nsw i32 %conv3043, %conv3048
  %2180 = load i16, i16* %weightRpic, align 2
  %conv3050 = sext i16 %2180 to i32
  %2181 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2182 = load i16**, i16*** %ref2_pic, align 8
  %2183 = load i16, i16* %ry, align 2
  %conv3051 = sext i16 %2183 to i32
  %2184 = load i16, i16* %rx0, align 2
  %conv3052 = sext i16 %2184 to i32
  %add3053 = add nsw i32 %conv3052, 4
  %2185 = load i32, i32* %img_height, align 4
  %2186 = load i32, i32* %img_width, align 4
  %call3054 = call zeroext i16 %2181(i16** %2182, i32 %conv3051, i32 %add3053, i32 %2185, i32 %2186)
  %conv3055 = zext i16 %call3054 to i32
  %mul3056 = mul nsw i32 %conv3050, %conv3055
  %add3057 = add nsw i32 %mul3049, %mul3056
  %2187 = load i32, i32* @wp_luma_round, align 4
  %mul3058 = mul nsw i32 2, %2187
  %add3059 = add nsw i32 %add3057, %mul3058
  %2188 = load i32, i32* @luma_log_weight_denom, align 4
  %add3060 = add nsw i32 %2188, 1
  %shr3061 = ashr i32 %add3059, %add3060
  %2189 = load i16, i16* %offsetBi, align 2
  %conv3062 = sext i16 %2189 to i32
  %add3063 = add nsw i32 %shr3061, %conv3062
  br label %cond.end.3064

cond.end.3064:                                    ; preds = %cond.false.3042, %cond.true.3040
  %cond3065 = phi i32 [ %2172, %cond.true.3040 ], [ %add3063, %cond.false.3042 ]
  br label %cond.end.3066

cond.end.3066:                                    ; preds = %cond.end.3064, %cond.true.3014
  %cond3067 = phi i32 [ 0, %cond.true.3014 ], [ %cond3065, %cond.end.3064 ]
  store i32 %cond3067, i32* %weightedpel, align 4
  %2190 = load i16, i16* %x0, align 2
  %conv3068 = sext i16 %2190 to i32
  %add3069 = add nsw i32 %conv3068, 1
  %idxprom3070 = sext i32 %add3069 to i64
  %2191 = load i16*, i16** %orig_line, align 8
  %arrayidx3071 = getelementptr inbounds i16, i16* %2191, i64 %idxprom3070
  %2192 = load i16, i16* %arrayidx3071, align 2
  %conv3072 = zext i16 %2192 to i32
  %2193 = load i32, i32* %weightedpel, align 4
  %sub3073 = sub nsw i32 %conv3072, %2193
  %2194 = load i32*, i32** %d, align 8
  %incdec.ptr3074 = getelementptr inbounds i32, i32* %2194, i32 1
  store i32* %incdec.ptr3074, i32** %d, align 8
  store i32 %sub3073, i32* %2194, align 4
  %2195 = load i16, i16* %weightSpic, align 2
  %conv3075 = sext i16 %2195 to i32
  %2196 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2197 = load i16**, i16*** %ref1_pic, align 8
  %2198 = load i16, i16* %sy, align 2
  %conv3076 = sext i16 %2198 to i32
  %2199 = load i16, i16* %sx0, align 2
  %conv3077 = sext i16 %2199 to i32
  %add3078 = add nsw i32 %conv3077, 8
  %2200 = load i32, i32* %img_height, align 4
  %2201 = load i32, i32* %img_width, align 4
  %call3079 = call zeroext i16 %2196(i16** %2197, i32 %conv3076, i32 %add3078, i32 %2200, i32 %2201)
  %conv3080 = zext i16 %call3079 to i32
  %mul3081 = mul nsw i32 %conv3075, %conv3080
  %2202 = load i16, i16* %weightRpic, align 2
  %conv3082 = sext i16 %2202 to i32
  %2203 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2204 = load i16**, i16*** %ref2_pic, align 8
  %2205 = load i16, i16* %ry, align 2
  %conv3083 = sext i16 %2205 to i32
  %2206 = load i16, i16* %rx0, align 2
  %conv3084 = sext i16 %2206 to i32
  %add3085 = add nsw i32 %conv3084, 8
  %2207 = load i32, i32* %img_height, align 4
  %2208 = load i32, i32* %img_width, align 4
  %call3086 = call zeroext i16 %2203(i16** %2204, i32 %conv3083, i32 %add3085, i32 %2207, i32 %2208)
  %conv3087 = zext i16 %call3086 to i32
  %mul3088 = mul nsw i32 %conv3082, %conv3087
  %add3089 = add nsw i32 %mul3081, %mul3088
  %2209 = load i32, i32* @wp_luma_round, align 4
  %mul3090 = mul nsw i32 2, %2209
  %add3091 = add nsw i32 %add3089, %mul3090
  %2210 = load i32, i32* @luma_log_weight_denom, align 4
  %add3092 = add nsw i32 %2210, 1
  %shr3093 = ashr i32 %add3091, %add3092
  %2211 = load i16, i16* %offsetBi, align 2
  %conv3094 = sext i16 %2211 to i32
  %add3095 = add nsw i32 %shr3093, %conv3094
  %cmp3096 = icmp slt i32 %add3095, 0
  br i1 %cmp3096, label %cond.true.3098, label %cond.false.3099

cond.true.3098:                                   ; preds = %cond.end.3066
  br label %cond.end.3150

cond.false.3099:                                  ; preds = %cond.end.3066
  %2212 = load i16, i16* %weightSpic, align 2
  %conv3100 = sext i16 %2212 to i32
  %2213 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2214 = load i16**, i16*** %ref1_pic, align 8
  %2215 = load i16, i16* %sy, align 2
  %conv3101 = sext i16 %2215 to i32
  %2216 = load i16, i16* %sx0, align 2
  %conv3102 = sext i16 %2216 to i32
  %add3103 = add nsw i32 %conv3102, 8
  %2217 = load i32, i32* %img_height, align 4
  %2218 = load i32, i32* %img_width, align 4
  %call3104 = call zeroext i16 %2213(i16** %2214, i32 %conv3101, i32 %add3103, i32 %2217, i32 %2218)
  %conv3105 = zext i16 %call3104 to i32
  %mul3106 = mul nsw i32 %conv3100, %conv3105
  %2219 = load i16, i16* %weightRpic, align 2
  %conv3107 = sext i16 %2219 to i32
  %2220 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2221 = load i16**, i16*** %ref2_pic, align 8
  %2222 = load i16, i16* %ry, align 2
  %conv3108 = sext i16 %2222 to i32
  %2223 = load i16, i16* %rx0, align 2
  %conv3109 = sext i16 %2223 to i32
  %add3110 = add nsw i32 %conv3109, 8
  %2224 = load i32, i32* %img_height, align 4
  %2225 = load i32, i32* %img_width, align 4
  %call3111 = call zeroext i16 %2220(i16** %2221, i32 %conv3108, i32 %add3110, i32 %2224, i32 %2225)
  %conv3112 = zext i16 %call3111 to i32
  %mul3113 = mul nsw i32 %conv3107, %conv3112
  %add3114 = add nsw i32 %mul3106, %mul3113
  %2226 = load i32, i32* @wp_luma_round, align 4
  %mul3115 = mul nsw i32 2, %2226
  %add3116 = add nsw i32 %add3114, %mul3115
  %2227 = load i32, i32* @luma_log_weight_denom, align 4
  %add3117 = add nsw i32 %2227, 1
  %shr3118 = ashr i32 %add3116, %add3117
  %2228 = load i16, i16* %offsetBi, align 2
  %conv3119 = sext i16 %2228 to i32
  %add3120 = add nsw i32 %shr3118, %conv3119
  %2229 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value3121 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2229, i32 0, i32 155
  %2230 = load i32, i32* %max_imgpel_value3121, align 4
  %cmp3122 = icmp sgt i32 %add3120, %2230
  br i1 %cmp3122, label %cond.true.3124, label %cond.false.3126

cond.true.3124:                                   ; preds = %cond.false.3099
  %2231 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value3125 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2231, i32 0, i32 155
  %2232 = load i32, i32* %max_imgpel_value3125, align 4
  br label %cond.end.3148

cond.false.3126:                                  ; preds = %cond.false.3099
  %2233 = load i16, i16* %weightSpic, align 2
  %conv3127 = sext i16 %2233 to i32
  %2234 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2235 = load i16**, i16*** %ref1_pic, align 8
  %2236 = load i16, i16* %sy, align 2
  %conv3128 = sext i16 %2236 to i32
  %2237 = load i16, i16* %sx0, align 2
  %conv3129 = sext i16 %2237 to i32
  %add3130 = add nsw i32 %conv3129, 8
  %2238 = load i32, i32* %img_height, align 4
  %2239 = load i32, i32* %img_width, align 4
  %call3131 = call zeroext i16 %2234(i16** %2235, i32 %conv3128, i32 %add3130, i32 %2238, i32 %2239)
  %conv3132 = zext i16 %call3131 to i32
  %mul3133 = mul nsw i32 %conv3127, %conv3132
  %2240 = load i16, i16* %weightRpic, align 2
  %conv3134 = sext i16 %2240 to i32
  %2241 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2242 = load i16**, i16*** %ref2_pic, align 8
  %2243 = load i16, i16* %ry, align 2
  %conv3135 = sext i16 %2243 to i32
  %2244 = load i16, i16* %rx0, align 2
  %conv3136 = sext i16 %2244 to i32
  %add3137 = add nsw i32 %conv3136, 8
  %2245 = load i32, i32* %img_height, align 4
  %2246 = load i32, i32* %img_width, align 4
  %call3138 = call zeroext i16 %2241(i16** %2242, i32 %conv3135, i32 %add3137, i32 %2245, i32 %2246)
  %conv3139 = zext i16 %call3138 to i32
  %mul3140 = mul nsw i32 %conv3134, %conv3139
  %add3141 = add nsw i32 %mul3133, %mul3140
  %2247 = load i32, i32* @wp_luma_round, align 4
  %mul3142 = mul nsw i32 2, %2247
  %add3143 = add nsw i32 %add3141, %mul3142
  %2248 = load i32, i32* @luma_log_weight_denom, align 4
  %add3144 = add nsw i32 %2248, 1
  %shr3145 = ashr i32 %add3143, %add3144
  %2249 = load i16, i16* %offsetBi, align 2
  %conv3146 = sext i16 %2249 to i32
  %add3147 = add nsw i32 %shr3145, %conv3146
  br label %cond.end.3148

cond.end.3148:                                    ; preds = %cond.false.3126, %cond.true.3124
  %cond3149 = phi i32 [ %2232, %cond.true.3124 ], [ %add3147, %cond.false.3126 ]
  br label %cond.end.3150

cond.end.3150:                                    ; preds = %cond.end.3148, %cond.true.3098
  %cond3151 = phi i32 [ 0, %cond.true.3098 ], [ %cond3149, %cond.end.3148 ]
  store i32 %cond3151, i32* %weightedpel, align 4
  %2250 = load i16, i16* %x0, align 2
  %conv3152 = sext i16 %2250 to i32
  %add3153 = add nsw i32 %conv3152, 2
  %idxprom3154 = sext i32 %add3153 to i64
  %2251 = load i16*, i16** %orig_line, align 8
  %arrayidx3155 = getelementptr inbounds i16, i16* %2251, i64 %idxprom3154
  %2252 = load i16, i16* %arrayidx3155, align 2
  %conv3156 = zext i16 %2252 to i32
  %2253 = load i32, i32* %weightedpel, align 4
  %sub3157 = sub nsw i32 %conv3156, %2253
  %2254 = load i32*, i32** %d, align 8
  %incdec.ptr3158 = getelementptr inbounds i32, i32* %2254, i32 1
  store i32* %incdec.ptr3158, i32** %d, align 8
  store i32 %sub3157, i32* %2254, align 4
  %2255 = load i16, i16* %weightSpic, align 2
  %conv3159 = sext i16 %2255 to i32
  %2256 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2257 = load i16**, i16*** %ref1_pic, align 8
  %2258 = load i16, i16* %sy, align 2
  %conv3160 = sext i16 %2258 to i32
  %2259 = load i16, i16* %sx0, align 2
  %conv3161 = sext i16 %2259 to i32
  %add3162 = add nsw i32 %conv3161, 12
  %2260 = load i32, i32* %img_height, align 4
  %2261 = load i32, i32* %img_width, align 4
  %call3163 = call zeroext i16 %2256(i16** %2257, i32 %conv3160, i32 %add3162, i32 %2260, i32 %2261)
  %conv3164 = zext i16 %call3163 to i32
  %mul3165 = mul nsw i32 %conv3159, %conv3164
  %2262 = load i16, i16* %weightRpic, align 2
  %conv3166 = sext i16 %2262 to i32
  %2263 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2264 = load i16**, i16*** %ref2_pic, align 8
  %2265 = load i16, i16* %ry, align 2
  %conv3167 = sext i16 %2265 to i32
  %2266 = load i16, i16* %rx0, align 2
  %conv3168 = sext i16 %2266 to i32
  %add3169 = add nsw i32 %conv3168, 12
  %2267 = load i32, i32* %img_height, align 4
  %2268 = load i32, i32* %img_width, align 4
  %call3170 = call zeroext i16 %2263(i16** %2264, i32 %conv3167, i32 %add3169, i32 %2267, i32 %2268)
  %conv3171 = zext i16 %call3170 to i32
  %mul3172 = mul nsw i32 %conv3166, %conv3171
  %add3173 = add nsw i32 %mul3165, %mul3172
  %2269 = load i32, i32* @wp_luma_round, align 4
  %mul3174 = mul nsw i32 2, %2269
  %add3175 = add nsw i32 %add3173, %mul3174
  %2270 = load i32, i32* @luma_log_weight_denom, align 4
  %add3176 = add nsw i32 %2270, 1
  %shr3177 = ashr i32 %add3175, %add3176
  %2271 = load i16, i16* %offsetBi, align 2
  %conv3178 = sext i16 %2271 to i32
  %add3179 = add nsw i32 %shr3177, %conv3178
  %cmp3180 = icmp slt i32 %add3179, 0
  br i1 %cmp3180, label %cond.true.3182, label %cond.false.3183

cond.true.3182:                                   ; preds = %cond.end.3150
  br label %cond.end.3234

cond.false.3183:                                  ; preds = %cond.end.3150
  %2272 = load i16, i16* %weightSpic, align 2
  %conv3184 = sext i16 %2272 to i32
  %2273 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2274 = load i16**, i16*** %ref1_pic, align 8
  %2275 = load i16, i16* %sy, align 2
  %conv3185 = sext i16 %2275 to i32
  %2276 = load i16, i16* %sx0, align 2
  %conv3186 = sext i16 %2276 to i32
  %add3187 = add nsw i32 %conv3186, 12
  %2277 = load i32, i32* %img_height, align 4
  %2278 = load i32, i32* %img_width, align 4
  %call3188 = call zeroext i16 %2273(i16** %2274, i32 %conv3185, i32 %add3187, i32 %2277, i32 %2278)
  %conv3189 = zext i16 %call3188 to i32
  %mul3190 = mul nsw i32 %conv3184, %conv3189
  %2279 = load i16, i16* %weightRpic, align 2
  %conv3191 = sext i16 %2279 to i32
  %2280 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2281 = load i16**, i16*** %ref2_pic, align 8
  %2282 = load i16, i16* %ry, align 2
  %conv3192 = sext i16 %2282 to i32
  %2283 = load i16, i16* %rx0, align 2
  %conv3193 = sext i16 %2283 to i32
  %add3194 = add nsw i32 %conv3193, 12
  %2284 = load i32, i32* %img_height, align 4
  %2285 = load i32, i32* %img_width, align 4
  %call3195 = call zeroext i16 %2280(i16** %2281, i32 %conv3192, i32 %add3194, i32 %2284, i32 %2285)
  %conv3196 = zext i16 %call3195 to i32
  %mul3197 = mul nsw i32 %conv3191, %conv3196
  %add3198 = add nsw i32 %mul3190, %mul3197
  %2286 = load i32, i32* @wp_luma_round, align 4
  %mul3199 = mul nsw i32 2, %2286
  %add3200 = add nsw i32 %add3198, %mul3199
  %2287 = load i32, i32* @luma_log_weight_denom, align 4
  %add3201 = add nsw i32 %2287, 1
  %shr3202 = ashr i32 %add3200, %add3201
  %2288 = load i16, i16* %offsetBi, align 2
  %conv3203 = sext i16 %2288 to i32
  %add3204 = add nsw i32 %shr3202, %conv3203
  %2289 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value3205 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2289, i32 0, i32 155
  %2290 = load i32, i32* %max_imgpel_value3205, align 4
  %cmp3206 = icmp sgt i32 %add3204, %2290
  br i1 %cmp3206, label %cond.true.3208, label %cond.false.3210

cond.true.3208:                                   ; preds = %cond.false.3183
  %2291 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value3209 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2291, i32 0, i32 155
  %2292 = load i32, i32* %max_imgpel_value3209, align 4
  br label %cond.end.3232

cond.false.3210:                                  ; preds = %cond.false.3183
  %2293 = load i16, i16* %weightSpic, align 2
  %conv3211 = sext i16 %2293 to i32
  %2294 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2295 = load i16**, i16*** %ref1_pic, align 8
  %2296 = load i16, i16* %sy, align 2
  %conv3212 = sext i16 %2296 to i32
  %2297 = load i16, i16* %sx0, align 2
  %conv3213 = sext i16 %2297 to i32
  %add3214 = add nsw i32 %conv3213, 12
  %2298 = load i32, i32* %img_height, align 4
  %2299 = load i32, i32* %img_width, align 4
  %call3215 = call zeroext i16 %2294(i16** %2295, i32 %conv3212, i32 %add3214, i32 %2298, i32 %2299)
  %conv3216 = zext i16 %call3215 to i32
  %mul3217 = mul nsw i32 %conv3211, %conv3216
  %2300 = load i16, i16* %weightRpic, align 2
  %conv3218 = sext i16 %2300 to i32
  %2301 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2302 = load i16**, i16*** %ref2_pic, align 8
  %2303 = load i16, i16* %ry, align 2
  %conv3219 = sext i16 %2303 to i32
  %2304 = load i16, i16* %rx0, align 2
  %conv3220 = sext i16 %2304 to i32
  %add3221 = add nsw i32 %conv3220, 12
  %2305 = load i32, i32* %img_height, align 4
  %2306 = load i32, i32* %img_width, align 4
  %call3222 = call zeroext i16 %2301(i16** %2302, i32 %conv3219, i32 %add3221, i32 %2305, i32 %2306)
  %conv3223 = zext i16 %call3222 to i32
  %mul3224 = mul nsw i32 %conv3218, %conv3223
  %add3225 = add nsw i32 %mul3217, %mul3224
  %2307 = load i32, i32* @wp_luma_round, align 4
  %mul3226 = mul nsw i32 2, %2307
  %add3227 = add nsw i32 %add3225, %mul3226
  %2308 = load i32, i32* @luma_log_weight_denom, align 4
  %add3228 = add nsw i32 %2308, 1
  %shr3229 = ashr i32 %add3227, %add3228
  %2309 = load i16, i16* %offsetBi, align 2
  %conv3230 = sext i16 %2309 to i32
  %add3231 = add nsw i32 %shr3229, %conv3230
  br label %cond.end.3232

cond.end.3232:                                    ; preds = %cond.false.3210, %cond.true.3208
  %cond3233 = phi i32 [ %2292, %cond.true.3208 ], [ %add3231, %cond.false.3210 ]
  br label %cond.end.3234

cond.end.3234:                                    ; preds = %cond.end.3232, %cond.true.3182
  %cond3235 = phi i32 [ 0, %cond.true.3182 ], [ %cond3233, %cond.end.3232 ]
  store i32 %cond3235, i32* %weightedpel, align 4
  %2310 = load i16, i16* %x0, align 2
  %conv3236 = sext i16 %2310 to i32
  %add3237 = add nsw i32 %conv3236, 3
  %idxprom3238 = sext i32 %add3237 to i64
  %2311 = load i16*, i16** %orig_line, align 8
  %arrayidx3239 = getelementptr inbounds i16, i16* %2311, i64 %idxprom3238
  %2312 = load i16, i16* %arrayidx3239, align 2
  %conv3240 = zext i16 %2312 to i32
  %2313 = load i32, i32* %weightedpel, align 4
  %sub3241 = sub nsw i32 %conv3240, %2313
  %2314 = load i32*, i32** %d, align 8
  %incdec.ptr3242 = getelementptr inbounds i32, i32* %2314, i32 1
  store i32* %incdec.ptr3242, i32** %d, align 8
  store i32 %sub3241, i32* %2314, align 4
  %2315 = load i16, i16* %sy0, align 2
  %conv3243 = sext i16 %2315 to i32
  %add3244 = add nsw i32 %conv3243, 12
  %conv3245 = trunc i32 %add3244 to i16
  store i16 %conv3245, i16* %sy, align 2
  %2316 = load i16, i16* %y0, align 2
  %conv3246 = sext i16 %2316 to i32
  %add3247 = add nsw i32 %conv3246, 3
  %idxprom3248 = sext i32 %add3247 to i64
  %2317 = load i16**, i16*** %orig_pic.addr, align 8
  %arrayidx3249 = getelementptr inbounds i16*, i16** %2317, i64 %idxprom3248
  %2318 = load i16*, i16** %arrayidx3249, align 8
  store i16* %2318, i16** %orig_line, align 8
  %2319 = load i16, i16* %ry0, align 2
  %conv3250 = sext i16 %2319 to i32
  %add3251 = add nsw i32 %conv3250, 12
  %conv3252 = trunc i32 %add3251 to i16
  store i16 %conv3252, i16* %ry, align 2
  %2320 = load i16, i16* %weightSpic, align 2
  %conv3253 = sext i16 %2320 to i32
  %2321 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2322 = load i16**, i16*** %ref1_pic, align 8
  %2323 = load i16, i16* %sy, align 2
  %conv3254 = sext i16 %2323 to i32
  %2324 = load i16, i16* %sx0, align 2
  %conv3255 = sext i16 %2324 to i32
  %2325 = load i32, i32* %img_height, align 4
  %2326 = load i32, i32* %img_width, align 4
  %call3256 = call zeroext i16 %2321(i16** %2322, i32 %conv3254, i32 %conv3255, i32 %2325, i32 %2326)
  %conv3257 = zext i16 %call3256 to i32
  %mul3258 = mul nsw i32 %conv3253, %conv3257
  %2327 = load i16, i16* %weightRpic, align 2
  %conv3259 = sext i16 %2327 to i32
  %2328 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2329 = load i16**, i16*** %ref2_pic, align 8
  %2330 = load i16, i16* %ry, align 2
  %conv3260 = sext i16 %2330 to i32
  %2331 = load i16, i16* %rx0, align 2
  %conv3261 = sext i16 %2331 to i32
  %2332 = load i32, i32* %img_height, align 4
  %2333 = load i32, i32* %img_width, align 4
  %call3262 = call zeroext i16 %2328(i16** %2329, i32 %conv3260, i32 %conv3261, i32 %2332, i32 %2333)
  %conv3263 = zext i16 %call3262 to i32
  %mul3264 = mul nsw i32 %conv3259, %conv3263
  %add3265 = add nsw i32 %mul3258, %mul3264
  %2334 = load i32, i32* @wp_luma_round, align 4
  %mul3266 = mul nsw i32 2, %2334
  %add3267 = add nsw i32 %add3265, %mul3266
  %2335 = load i32, i32* @luma_log_weight_denom, align 4
  %add3268 = add nsw i32 %2335, 1
  %shr3269 = ashr i32 %add3267, %add3268
  %2336 = load i16, i16* %offsetBi, align 2
  %conv3270 = sext i16 %2336 to i32
  %add3271 = add nsw i32 %shr3269, %conv3270
  %cmp3272 = icmp slt i32 %add3271, 0
  br i1 %cmp3272, label %cond.true.3274, label %cond.false.3275

cond.true.3274:                                   ; preds = %cond.end.3234
  br label %cond.end.3322

cond.false.3275:                                  ; preds = %cond.end.3234
  %2337 = load i16, i16* %weightSpic, align 2
  %conv3276 = sext i16 %2337 to i32
  %2338 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2339 = load i16**, i16*** %ref1_pic, align 8
  %2340 = load i16, i16* %sy, align 2
  %conv3277 = sext i16 %2340 to i32
  %2341 = load i16, i16* %sx0, align 2
  %conv3278 = sext i16 %2341 to i32
  %2342 = load i32, i32* %img_height, align 4
  %2343 = load i32, i32* %img_width, align 4
  %call3279 = call zeroext i16 %2338(i16** %2339, i32 %conv3277, i32 %conv3278, i32 %2342, i32 %2343)
  %conv3280 = zext i16 %call3279 to i32
  %mul3281 = mul nsw i32 %conv3276, %conv3280
  %2344 = load i16, i16* %weightRpic, align 2
  %conv3282 = sext i16 %2344 to i32
  %2345 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2346 = load i16**, i16*** %ref2_pic, align 8
  %2347 = load i16, i16* %ry, align 2
  %conv3283 = sext i16 %2347 to i32
  %2348 = load i16, i16* %rx0, align 2
  %conv3284 = sext i16 %2348 to i32
  %2349 = load i32, i32* %img_height, align 4
  %2350 = load i32, i32* %img_width, align 4
  %call3285 = call zeroext i16 %2345(i16** %2346, i32 %conv3283, i32 %conv3284, i32 %2349, i32 %2350)
  %conv3286 = zext i16 %call3285 to i32
  %mul3287 = mul nsw i32 %conv3282, %conv3286
  %add3288 = add nsw i32 %mul3281, %mul3287
  %2351 = load i32, i32* @wp_luma_round, align 4
  %mul3289 = mul nsw i32 2, %2351
  %add3290 = add nsw i32 %add3288, %mul3289
  %2352 = load i32, i32* @luma_log_weight_denom, align 4
  %add3291 = add nsw i32 %2352, 1
  %shr3292 = ashr i32 %add3290, %add3291
  %2353 = load i16, i16* %offsetBi, align 2
  %conv3293 = sext i16 %2353 to i32
  %add3294 = add nsw i32 %shr3292, %conv3293
  %2354 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value3295 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2354, i32 0, i32 155
  %2355 = load i32, i32* %max_imgpel_value3295, align 4
  %cmp3296 = icmp sgt i32 %add3294, %2355
  br i1 %cmp3296, label %cond.true.3298, label %cond.false.3300

cond.true.3298:                                   ; preds = %cond.false.3275
  %2356 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value3299 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2356, i32 0, i32 155
  %2357 = load i32, i32* %max_imgpel_value3299, align 4
  br label %cond.end.3320

cond.false.3300:                                  ; preds = %cond.false.3275
  %2358 = load i16, i16* %weightSpic, align 2
  %conv3301 = sext i16 %2358 to i32
  %2359 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2360 = load i16**, i16*** %ref1_pic, align 8
  %2361 = load i16, i16* %sy, align 2
  %conv3302 = sext i16 %2361 to i32
  %2362 = load i16, i16* %sx0, align 2
  %conv3303 = sext i16 %2362 to i32
  %2363 = load i32, i32* %img_height, align 4
  %2364 = load i32, i32* %img_width, align 4
  %call3304 = call zeroext i16 %2359(i16** %2360, i32 %conv3302, i32 %conv3303, i32 %2363, i32 %2364)
  %conv3305 = zext i16 %call3304 to i32
  %mul3306 = mul nsw i32 %conv3301, %conv3305
  %2365 = load i16, i16* %weightRpic, align 2
  %conv3307 = sext i16 %2365 to i32
  %2366 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2367 = load i16**, i16*** %ref2_pic, align 8
  %2368 = load i16, i16* %ry, align 2
  %conv3308 = sext i16 %2368 to i32
  %2369 = load i16, i16* %rx0, align 2
  %conv3309 = sext i16 %2369 to i32
  %2370 = load i32, i32* %img_height, align 4
  %2371 = load i32, i32* %img_width, align 4
  %call3310 = call zeroext i16 %2366(i16** %2367, i32 %conv3308, i32 %conv3309, i32 %2370, i32 %2371)
  %conv3311 = zext i16 %call3310 to i32
  %mul3312 = mul nsw i32 %conv3307, %conv3311
  %add3313 = add nsw i32 %mul3306, %mul3312
  %2372 = load i32, i32* @wp_luma_round, align 4
  %mul3314 = mul nsw i32 2, %2372
  %add3315 = add nsw i32 %add3313, %mul3314
  %2373 = load i32, i32* @luma_log_weight_denom, align 4
  %add3316 = add nsw i32 %2373, 1
  %shr3317 = ashr i32 %add3315, %add3316
  %2374 = load i16, i16* %offsetBi, align 2
  %conv3318 = sext i16 %2374 to i32
  %add3319 = add nsw i32 %shr3317, %conv3318
  br label %cond.end.3320

cond.end.3320:                                    ; preds = %cond.false.3300, %cond.true.3298
  %cond3321 = phi i32 [ %2357, %cond.true.3298 ], [ %add3319, %cond.false.3300 ]
  br label %cond.end.3322

cond.end.3322:                                    ; preds = %cond.end.3320, %cond.true.3274
  %cond3323 = phi i32 [ 0, %cond.true.3274 ], [ %cond3321, %cond.end.3320 ]
  store i32 %cond3323, i32* %weightedpel, align 4
  %2375 = load i16, i16* %x0, align 2
  %idxprom3324 = sext i16 %2375 to i64
  %2376 = load i16*, i16** %orig_line, align 8
  %arrayidx3325 = getelementptr inbounds i16, i16* %2376, i64 %idxprom3324
  %2377 = load i16, i16* %arrayidx3325, align 2
  %conv3326 = zext i16 %2377 to i32
  %2378 = load i32, i32* %weightedpel, align 4
  %sub3327 = sub nsw i32 %conv3326, %2378
  %2379 = load i32*, i32** %d, align 8
  %incdec.ptr3328 = getelementptr inbounds i32, i32* %2379, i32 1
  store i32* %incdec.ptr3328, i32** %d, align 8
  store i32 %sub3327, i32* %2379, align 4
  %2380 = load i16, i16* %weightSpic, align 2
  %conv3329 = sext i16 %2380 to i32
  %2381 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2382 = load i16**, i16*** %ref1_pic, align 8
  %2383 = load i16, i16* %sy, align 2
  %conv3330 = sext i16 %2383 to i32
  %2384 = load i16, i16* %sx0, align 2
  %conv3331 = sext i16 %2384 to i32
  %add3332 = add nsw i32 %conv3331, 4
  %2385 = load i32, i32* %img_height, align 4
  %2386 = load i32, i32* %img_width, align 4
  %call3333 = call zeroext i16 %2381(i16** %2382, i32 %conv3330, i32 %add3332, i32 %2385, i32 %2386)
  %conv3334 = zext i16 %call3333 to i32
  %mul3335 = mul nsw i32 %conv3329, %conv3334
  %2387 = load i16, i16* %weightRpic, align 2
  %conv3336 = sext i16 %2387 to i32
  %2388 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2389 = load i16**, i16*** %ref2_pic, align 8
  %2390 = load i16, i16* %ry, align 2
  %conv3337 = sext i16 %2390 to i32
  %2391 = load i16, i16* %rx0, align 2
  %conv3338 = sext i16 %2391 to i32
  %add3339 = add nsw i32 %conv3338, 4
  %2392 = load i32, i32* %img_height, align 4
  %2393 = load i32, i32* %img_width, align 4
  %call3340 = call zeroext i16 %2388(i16** %2389, i32 %conv3337, i32 %add3339, i32 %2392, i32 %2393)
  %conv3341 = zext i16 %call3340 to i32
  %mul3342 = mul nsw i32 %conv3336, %conv3341
  %add3343 = add nsw i32 %mul3335, %mul3342
  %2394 = load i32, i32* @wp_luma_round, align 4
  %mul3344 = mul nsw i32 2, %2394
  %add3345 = add nsw i32 %add3343, %mul3344
  %2395 = load i32, i32* @luma_log_weight_denom, align 4
  %add3346 = add nsw i32 %2395, 1
  %shr3347 = ashr i32 %add3345, %add3346
  %2396 = load i16, i16* %offsetBi, align 2
  %conv3348 = sext i16 %2396 to i32
  %add3349 = add nsw i32 %shr3347, %conv3348
  %cmp3350 = icmp slt i32 %add3349, 0
  br i1 %cmp3350, label %cond.true.3352, label %cond.false.3353

cond.true.3352:                                   ; preds = %cond.end.3322
  br label %cond.end.3404

cond.false.3353:                                  ; preds = %cond.end.3322
  %2397 = load i16, i16* %weightSpic, align 2
  %conv3354 = sext i16 %2397 to i32
  %2398 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2399 = load i16**, i16*** %ref1_pic, align 8
  %2400 = load i16, i16* %sy, align 2
  %conv3355 = sext i16 %2400 to i32
  %2401 = load i16, i16* %sx0, align 2
  %conv3356 = sext i16 %2401 to i32
  %add3357 = add nsw i32 %conv3356, 4
  %2402 = load i32, i32* %img_height, align 4
  %2403 = load i32, i32* %img_width, align 4
  %call3358 = call zeroext i16 %2398(i16** %2399, i32 %conv3355, i32 %add3357, i32 %2402, i32 %2403)
  %conv3359 = zext i16 %call3358 to i32
  %mul3360 = mul nsw i32 %conv3354, %conv3359
  %2404 = load i16, i16* %weightRpic, align 2
  %conv3361 = sext i16 %2404 to i32
  %2405 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2406 = load i16**, i16*** %ref2_pic, align 8
  %2407 = load i16, i16* %ry, align 2
  %conv3362 = sext i16 %2407 to i32
  %2408 = load i16, i16* %rx0, align 2
  %conv3363 = sext i16 %2408 to i32
  %add3364 = add nsw i32 %conv3363, 4
  %2409 = load i32, i32* %img_height, align 4
  %2410 = load i32, i32* %img_width, align 4
  %call3365 = call zeroext i16 %2405(i16** %2406, i32 %conv3362, i32 %add3364, i32 %2409, i32 %2410)
  %conv3366 = zext i16 %call3365 to i32
  %mul3367 = mul nsw i32 %conv3361, %conv3366
  %add3368 = add nsw i32 %mul3360, %mul3367
  %2411 = load i32, i32* @wp_luma_round, align 4
  %mul3369 = mul nsw i32 2, %2411
  %add3370 = add nsw i32 %add3368, %mul3369
  %2412 = load i32, i32* @luma_log_weight_denom, align 4
  %add3371 = add nsw i32 %2412, 1
  %shr3372 = ashr i32 %add3370, %add3371
  %2413 = load i16, i16* %offsetBi, align 2
  %conv3373 = sext i16 %2413 to i32
  %add3374 = add nsw i32 %shr3372, %conv3373
  %2414 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value3375 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2414, i32 0, i32 155
  %2415 = load i32, i32* %max_imgpel_value3375, align 4
  %cmp3376 = icmp sgt i32 %add3374, %2415
  br i1 %cmp3376, label %cond.true.3378, label %cond.false.3380

cond.true.3378:                                   ; preds = %cond.false.3353
  %2416 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value3379 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2416, i32 0, i32 155
  %2417 = load i32, i32* %max_imgpel_value3379, align 4
  br label %cond.end.3402

cond.false.3380:                                  ; preds = %cond.false.3353
  %2418 = load i16, i16* %weightSpic, align 2
  %conv3381 = sext i16 %2418 to i32
  %2419 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2420 = load i16**, i16*** %ref1_pic, align 8
  %2421 = load i16, i16* %sy, align 2
  %conv3382 = sext i16 %2421 to i32
  %2422 = load i16, i16* %sx0, align 2
  %conv3383 = sext i16 %2422 to i32
  %add3384 = add nsw i32 %conv3383, 4
  %2423 = load i32, i32* %img_height, align 4
  %2424 = load i32, i32* %img_width, align 4
  %call3385 = call zeroext i16 %2419(i16** %2420, i32 %conv3382, i32 %add3384, i32 %2423, i32 %2424)
  %conv3386 = zext i16 %call3385 to i32
  %mul3387 = mul nsw i32 %conv3381, %conv3386
  %2425 = load i16, i16* %weightRpic, align 2
  %conv3388 = sext i16 %2425 to i32
  %2426 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2427 = load i16**, i16*** %ref2_pic, align 8
  %2428 = load i16, i16* %ry, align 2
  %conv3389 = sext i16 %2428 to i32
  %2429 = load i16, i16* %rx0, align 2
  %conv3390 = sext i16 %2429 to i32
  %add3391 = add nsw i32 %conv3390, 4
  %2430 = load i32, i32* %img_height, align 4
  %2431 = load i32, i32* %img_width, align 4
  %call3392 = call zeroext i16 %2426(i16** %2427, i32 %conv3389, i32 %add3391, i32 %2430, i32 %2431)
  %conv3393 = zext i16 %call3392 to i32
  %mul3394 = mul nsw i32 %conv3388, %conv3393
  %add3395 = add nsw i32 %mul3387, %mul3394
  %2432 = load i32, i32* @wp_luma_round, align 4
  %mul3396 = mul nsw i32 2, %2432
  %add3397 = add nsw i32 %add3395, %mul3396
  %2433 = load i32, i32* @luma_log_weight_denom, align 4
  %add3398 = add nsw i32 %2433, 1
  %shr3399 = ashr i32 %add3397, %add3398
  %2434 = load i16, i16* %offsetBi, align 2
  %conv3400 = sext i16 %2434 to i32
  %add3401 = add nsw i32 %shr3399, %conv3400
  br label %cond.end.3402

cond.end.3402:                                    ; preds = %cond.false.3380, %cond.true.3378
  %cond3403 = phi i32 [ %2417, %cond.true.3378 ], [ %add3401, %cond.false.3380 ]
  br label %cond.end.3404

cond.end.3404:                                    ; preds = %cond.end.3402, %cond.true.3352
  %cond3405 = phi i32 [ 0, %cond.true.3352 ], [ %cond3403, %cond.end.3402 ]
  store i32 %cond3405, i32* %weightedpel, align 4
  %2435 = load i16, i16* %x0, align 2
  %conv3406 = sext i16 %2435 to i32
  %add3407 = add nsw i32 %conv3406, 1
  %idxprom3408 = sext i32 %add3407 to i64
  %2436 = load i16*, i16** %orig_line, align 8
  %arrayidx3409 = getelementptr inbounds i16, i16* %2436, i64 %idxprom3408
  %2437 = load i16, i16* %arrayidx3409, align 2
  %conv3410 = zext i16 %2437 to i32
  %2438 = load i32, i32* %weightedpel, align 4
  %sub3411 = sub nsw i32 %conv3410, %2438
  %2439 = load i32*, i32** %d, align 8
  %incdec.ptr3412 = getelementptr inbounds i32, i32* %2439, i32 1
  store i32* %incdec.ptr3412, i32** %d, align 8
  store i32 %sub3411, i32* %2439, align 4
  %2440 = load i16, i16* %weightSpic, align 2
  %conv3413 = sext i16 %2440 to i32
  %2441 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2442 = load i16**, i16*** %ref1_pic, align 8
  %2443 = load i16, i16* %sy, align 2
  %conv3414 = sext i16 %2443 to i32
  %2444 = load i16, i16* %sx0, align 2
  %conv3415 = sext i16 %2444 to i32
  %add3416 = add nsw i32 %conv3415, 8
  %2445 = load i32, i32* %img_height, align 4
  %2446 = load i32, i32* %img_width, align 4
  %call3417 = call zeroext i16 %2441(i16** %2442, i32 %conv3414, i32 %add3416, i32 %2445, i32 %2446)
  %conv3418 = zext i16 %call3417 to i32
  %mul3419 = mul nsw i32 %conv3413, %conv3418
  %2447 = load i16, i16* %weightRpic, align 2
  %conv3420 = sext i16 %2447 to i32
  %2448 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2449 = load i16**, i16*** %ref2_pic, align 8
  %2450 = load i16, i16* %ry, align 2
  %conv3421 = sext i16 %2450 to i32
  %2451 = load i16, i16* %rx0, align 2
  %conv3422 = sext i16 %2451 to i32
  %add3423 = add nsw i32 %conv3422, 8
  %2452 = load i32, i32* %img_height, align 4
  %2453 = load i32, i32* %img_width, align 4
  %call3424 = call zeroext i16 %2448(i16** %2449, i32 %conv3421, i32 %add3423, i32 %2452, i32 %2453)
  %conv3425 = zext i16 %call3424 to i32
  %mul3426 = mul nsw i32 %conv3420, %conv3425
  %add3427 = add nsw i32 %mul3419, %mul3426
  %2454 = load i32, i32* @wp_luma_round, align 4
  %mul3428 = mul nsw i32 2, %2454
  %add3429 = add nsw i32 %add3427, %mul3428
  %2455 = load i32, i32* @luma_log_weight_denom, align 4
  %add3430 = add nsw i32 %2455, 1
  %shr3431 = ashr i32 %add3429, %add3430
  %2456 = load i16, i16* %offsetBi, align 2
  %conv3432 = sext i16 %2456 to i32
  %add3433 = add nsw i32 %shr3431, %conv3432
  %cmp3434 = icmp slt i32 %add3433, 0
  br i1 %cmp3434, label %cond.true.3436, label %cond.false.3437

cond.true.3436:                                   ; preds = %cond.end.3404
  br label %cond.end.3488

cond.false.3437:                                  ; preds = %cond.end.3404
  %2457 = load i16, i16* %weightSpic, align 2
  %conv3438 = sext i16 %2457 to i32
  %2458 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2459 = load i16**, i16*** %ref1_pic, align 8
  %2460 = load i16, i16* %sy, align 2
  %conv3439 = sext i16 %2460 to i32
  %2461 = load i16, i16* %sx0, align 2
  %conv3440 = sext i16 %2461 to i32
  %add3441 = add nsw i32 %conv3440, 8
  %2462 = load i32, i32* %img_height, align 4
  %2463 = load i32, i32* %img_width, align 4
  %call3442 = call zeroext i16 %2458(i16** %2459, i32 %conv3439, i32 %add3441, i32 %2462, i32 %2463)
  %conv3443 = zext i16 %call3442 to i32
  %mul3444 = mul nsw i32 %conv3438, %conv3443
  %2464 = load i16, i16* %weightRpic, align 2
  %conv3445 = sext i16 %2464 to i32
  %2465 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2466 = load i16**, i16*** %ref2_pic, align 8
  %2467 = load i16, i16* %ry, align 2
  %conv3446 = sext i16 %2467 to i32
  %2468 = load i16, i16* %rx0, align 2
  %conv3447 = sext i16 %2468 to i32
  %add3448 = add nsw i32 %conv3447, 8
  %2469 = load i32, i32* %img_height, align 4
  %2470 = load i32, i32* %img_width, align 4
  %call3449 = call zeroext i16 %2465(i16** %2466, i32 %conv3446, i32 %add3448, i32 %2469, i32 %2470)
  %conv3450 = zext i16 %call3449 to i32
  %mul3451 = mul nsw i32 %conv3445, %conv3450
  %add3452 = add nsw i32 %mul3444, %mul3451
  %2471 = load i32, i32* @wp_luma_round, align 4
  %mul3453 = mul nsw i32 2, %2471
  %add3454 = add nsw i32 %add3452, %mul3453
  %2472 = load i32, i32* @luma_log_weight_denom, align 4
  %add3455 = add nsw i32 %2472, 1
  %shr3456 = ashr i32 %add3454, %add3455
  %2473 = load i16, i16* %offsetBi, align 2
  %conv3457 = sext i16 %2473 to i32
  %add3458 = add nsw i32 %shr3456, %conv3457
  %2474 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value3459 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2474, i32 0, i32 155
  %2475 = load i32, i32* %max_imgpel_value3459, align 4
  %cmp3460 = icmp sgt i32 %add3458, %2475
  br i1 %cmp3460, label %cond.true.3462, label %cond.false.3464

cond.true.3462:                                   ; preds = %cond.false.3437
  %2476 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value3463 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2476, i32 0, i32 155
  %2477 = load i32, i32* %max_imgpel_value3463, align 4
  br label %cond.end.3486

cond.false.3464:                                  ; preds = %cond.false.3437
  %2478 = load i16, i16* %weightSpic, align 2
  %conv3465 = sext i16 %2478 to i32
  %2479 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2480 = load i16**, i16*** %ref1_pic, align 8
  %2481 = load i16, i16* %sy, align 2
  %conv3466 = sext i16 %2481 to i32
  %2482 = load i16, i16* %sx0, align 2
  %conv3467 = sext i16 %2482 to i32
  %add3468 = add nsw i32 %conv3467, 8
  %2483 = load i32, i32* %img_height, align 4
  %2484 = load i32, i32* %img_width, align 4
  %call3469 = call zeroext i16 %2479(i16** %2480, i32 %conv3466, i32 %add3468, i32 %2483, i32 %2484)
  %conv3470 = zext i16 %call3469 to i32
  %mul3471 = mul nsw i32 %conv3465, %conv3470
  %2485 = load i16, i16* %weightRpic, align 2
  %conv3472 = sext i16 %2485 to i32
  %2486 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2487 = load i16**, i16*** %ref2_pic, align 8
  %2488 = load i16, i16* %ry, align 2
  %conv3473 = sext i16 %2488 to i32
  %2489 = load i16, i16* %rx0, align 2
  %conv3474 = sext i16 %2489 to i32
  %add3475 = add nsw i32 %conv3474, 8
  %2490 = load i32, i32* %img_height, align 4
  %2491 = load i32, i32* %img_width, align 4
  %call3476 = call zeroext i16 %2486(i16** %2487, i32 %conv3473, i32 %add3475, i32 %2490, i32 %2491)
  %conv3477 = zext i16 %call3476 to i32
  %mul3478 = mul nsw i32 %conv3472, %conv3477
  %add3479 = add nsw i32 %mul3471, %mul3478
  %2492 = load i32, i32* @wp_luma_round, align 4
  %mul3480 = mul nsw i32 2, %2492
  %add3481 = add nsw i32 %add3479, %mul3480
  %2493 = load i32, i32* @luma_log_weight_denom, align 4
  %add3482 = add nsw i32 %2493, 1
  %shr3483 = ashr i32 %add3481, %add3482
  %2494 = load i16, i16* %offsetBi, align 2
  %conv3484 = sext i16 %2494 to i32
  %add3485 = add nsw i32 %shr3483, %conv3484
  br label %cond.end.3486

cond.end.3486:                                    ; preds = %cond.false.3464, %cond.true.3462
  %cond3487 = phi i32 [ %2477, %cond.true.3462 ], [ %add3485, %cond.false.3464 ]
  br label %cond.end.3488

cond.end.3488:                                    ; preds = %cond.end.3486, %cond.true.3436
  %cond3489 = phi i32 [ 0, %cond.true.3436 ], [ %cond3487, %cond.end.3486 ]
  store i32 %cond3489, i32* %weightedpel, align 4
  %2495 = load i16, i16* %x0, align 2
  %conv3490 = sext i16 %2495 to i32
  %add3491 = add nsw i32 %conv3490, 2
  %idxprom3492 = sext i32 %add3491 to i64
  %2496 = load i16*, i16** %orig_line, align 8
  %arrayidx3493 = getelementptr inbounds i16, i16* %2496, i64 %idxprom3492
  %2497 = load i16, i16* %arrayidx3493, align 2
  %conv3494 = zext i16 %2497 to i32
  %2498 = load i32, i32* %weightedpel, align 4
  %sub3495 = sub nsw i32 %conv3494, %2498
  %2499 = load i32*, i32** %d, align 8
  %incdec.ptr3496 = getelementptr inbounds i32, i32* %2499, i32 1
  store i32* %incdec.ptr3496, i32** %d, align 8
  store i32 %sub3495, i32* %2499, align 4
  %2500 = load i16, i16* %weightSpic, align 2
  %conv3497 = sext i16 %2500 to i32
  %2501 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2502 = load i16**, i16*** %ref1_pic, align 8
  %2503 = load i16, i16* %sy, align 2
  %conv3498 = sext i16 %2503 to i32
  %2504 = load i16, i16* %sx0, align 2
  %conv3499 = sext i16 %2504 to i32
  %add3500 = add nsw i32 %conv3499, 12
  %2505 = load i32, i32* %img_height, align 4
  %2506 = load i32, i32* %img_width, align 4
  %call3501 = call zeroext i16 %2501(i16** %2502, i32 %conv3498, i32 %add3500, i32 %2505, i32 %2506)
  %conv3502 = zext i16 %call3501 to i32
  %mul3503 = mul nsw i32 %conv3497, %conv3502
  %2507 = load i16, i16* %weightRpic, align 2
  %conv3504 = sext i16 %2507 to i32
  %2508 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2509 = load i16**, i16*** %ref2_pic, align 8
  %2510 = load i16, i16* %ry, align 2
  %conv3505 = sext i16 %2510 to i32
  %2511 = load i16, i16* %rx0, align 2
  %conv3506 = sext i16 %2511 to i32
  %add3507 = add nsw i32 %conv3506, 12
  %2512 = load i32, i32* %img_height, align 4
  %2513 = load i32, i32* %img_width, align 4
  %call3508 = call zeroext i16 %2508(i16** %2509, i32 %conv3505, i32 %add3507, i32 %2512, i32 %2513)
  %conv3509 = zext i16 %call3508 to i32
  %mul3510 = mul nsw i32 %conv3504, %conv3509
  %add3511 = add nsw i32 %mul3503, %mul3510
  %2514 = load i32, i32* @wp_luma_round, align 4
  %mul3512 = mul nsw i32 2, %2514
  %add3513 = add nsw i32 %add3511, %mul3512
  %2515 = load i32, i32* @luma_log_weight_denom, align 4
  %add3514 = add nsw i32 %2515, 1
  %shr3515 = ashr i32 %add3513, %add3514
  %2516 = load i16, i16* %offsetBi, align 2
  %conv3516 = sext i16 %2516 to i32
  %add3517 = add nsw i32 %shr3515, %conv3516
  %cmp3518 = icmp slt i32 %add3517, 0
  br i1 %cmp3518, label %cond.true.3520, label %cond.false.3521

cond.true.3520:                                   ; preds = %cond.end.3488
  br label %cond.end.3572

cond.false.3521:                                  ; preds = %cond.end.3488
  %2517 = load i16, i16* %weightSpic, align 2
  %conv3522 = sext i16 %2517 to i32
  %2518 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2519 = load i16**, i16*** %ref1_pic, align 8
  %2520 = load i16, i16* %sy, align 2
  %conv3523 = sext i16 %2520 to i32
  %2521 = load i16, i16* %sx0, align 2
  %conv3524 = sext i16 %2521 to i32
  %add3525 = add nsw i32 %conv3524, 12
  %2522 = load i32, i32* %img_height, align 4
  %2523 = load i32, i32* %img_width, align 4
  %call3526 = call zeroext i16 %2518(i16** %2519, i32 %conv3523, i32 %add3525, i32 %2522, i32 %2523)
  %conv3527 = zext i16 %call3526 to i32
  %mul3528 = mul nsw i32 %conv3522, %conv3527
  %2524 = load i16, i16* %weightRpic, align 2
  %conv3529 = sext i16 %2524 to i32
  %2525 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2526 = load i16**, i16*** %ref2_pic, align 8
  %2527 = load i16, i16* %ry, align 2
  %conv3530 = sext i16 %2527 to i32
  %2528 = load i16, i16* %rx0, align 2
  %conv3531 = sext i16 %2528 to i32
  %add3532 = add nsw i32 %conv3531, 12
  %2529 = load i32, i32* %img_height, align 4
  %2530 = load i32, i32* %img_width, align 4
  %call3533 = call zeroext i16 %2525(i16** %2526, i32 %conv3530, i32 %add3532, i32 %2529, i32 %2530)
  %conv3534 = zext i16 %call3533 to i32
  %mul3535 = mul nsw i32 %conv3529, %conv3534
  %add3536 = add nsw i32 %mul3528, %mul3535
  %2531 = load i32, i32* @wp_luma_round, align 4
  %mul3537 = mul nsw i32 2, %2531
  %add3538 = add nsw i32 %add3536, %mul3537
  %2532 = load i32, i32* @luma_log_weight_denom, align 4
  %add3539 = add nsw i32 %2532, 1
  %shr3540 = ashr i32 %add3538, %add3539
  %2533 = load i16, i16* %offsetBi, align 2
  %conv3541 = sext i16 %2533 to i32
  %add3542 = add nsw i32 %shr3540, %conv3541
  %2534 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value3543 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2534, i32 0, i32 155
  %2535 = load i32, i32* %max_imgpel_value3543, align 4
  %cmp3544 = icmp sgt i32 %add3542, %2535
  br i1 %cmp3544, label %cond.true.3546, label %cond.false.3548

cond.true.3546:                                   ; preds = %cond.false.3521
  %2536 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value3547 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2536, i32 0, i32 155
  %2537 = load i32, i32* %max_imgpel_value3547, align 4
  br label %cond.end.3570

cond.false.3548:                                  ; preds = %cond.false.3521
  %2538 = load i16, i16* %weightSpic, align 2
  %conv3549 = sext i16 %2538 to i32
  %2539 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2540 = load i16**, i16*** %ref1_pic, align 8
  %2541 = load i16, i16* %sy, align 2
  %conv3550 = sext i16 %2541 to i32
  %2542 = load i16, i16* %sx0, align 2
  %conv3551 = sext i16 %2542 to i32
  %add3552 = add nsw i32 %conv3551, 12
  %2543 = load i32, i32* %img_height, align 4
  %2544 = load i32, i32* %img_width, align 4
  %call3553 = call zeroext i16 %2539(i16** %2540, i32 %conv3550, i32 %add3552, i32 %2543, i32 %2544)
  %conv3554 = zext i16 %call3553 to i32
  %mul3555 = mul nsw i32 %conv3549, %conv3554
  %2545 = load i16, i16* %weightRpic, align 2
  %conv3556 = sext i16 %2545 to i32
  %2546 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2547 = load i16**, i16*** %ref2_pic, align 8
  %2548 = load i16, i16* %ry, align 2
  %conv3557 = sext i16 %2548 to i32
  %2549 = load i16, i16* %rx0, align 2
  %conv3558 = sext i16 %2549 to i32
  %add3559 = add nsw i32 %conv3558, 12
  %2550 = load i32, i32* %img_height, align 4
  %2551 = load i32, i32* %img_width, align 4
  %call3560 = call zeroext i16 %2546(i16** %2547, i32 %conv3557, i32 %add3559, i32 %2550, i32 %2551)
  %conv3561 = zext i16 %call3560 to i32
  %mul3562 = mul nsw i32 %conv3556, %conv3561
  %add3563 = add nsw i32 %mul3555, %mul3562
  %2552 = load i32, i32* @wp_luma_round, align 4
  %mul3564 = mul nsw i32 2, %2552
  %add3565 = add nsw i32 %add3563, %mul3564
  %2553 = load i32, i32* @luma_log_weight_denom, align 4
  %add3566 = add nsw i32 %2553, 1
  %shr3567 = ashr i32 %add3565, %add3566
  %2554 = load i16, i16* %offsetBi, align 2
  %conv3568 = sext i16 %2554 to i32
  %add3569 = add nsw i32 %shr3567, %conv3568
  br label %cond.end.3570

cond.end.3570:                                    ; preds = %cond.false.3548, %cond.true.3546
  %cond3571 = phi i32 [ %2537, %cond.true.3546 ], [ %add3569, %cond.false.3548 ]
  br label %cond.end.3572

cond.end.3572:                                    ; preds = %cond.end.3570, %cond.true.3520
  %cond3573 = phi i32 [ 0, %cond.true.3520 ], [ %cond3571, %cond.end.3570 ]
  store i32 %cond3573, i32* %weightedpel, align 4
  %2555 = load i16, i16* %x0, align 2
  %conv3574 = sext i16 %2555 to i32
  %add3575 = add nsw i32 %conv3574, 3
  %idxprom3576 = sext i32 %add3575 to i64
  %2556 = load i16*, i16** %orig_line, align 8
  %arrayidx3577 = getelementptr inbounds i16, i16* %2556, i64 %idxprom3576
  %2557 = load i16, i16* %arrayidx3577, align 2
  %conv3578 = zext i16 %2557 to i32
  %2558 = load i32, i32* %weightedpel, align 4
  %sub3579 = sub nsw i32 %conv3578, %2558
  %2559 = load i32*, i32** %d, align 8
  store i32 %sub3579, i32* %2559, align 4
  %2560 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %AllowTransform8x83580 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %2560, i32 0, i32 123
  %2561 = load i32, i32* %AllowTransform8x83580, align 4
  %tobool3581 = icmp ne i32 %2561, 0
  br i1 %tobool3581, label %if.else.3594, label %if.then.3582

if.then.3582:                                     ; preds = %cond.end.3572
  %arraydecay3583 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i32 0, i32 0
  %2562 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamard3584 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %2562, i32 0, i32 6
  %2563 = load i32, i32* %hadamard3584, align 4
  %call3585 = call i32 @SATD(i32* %arraydecay3583, i32 %2563)
  %2564 = load i16, i16* %mcost, align 2
  %conv3586 = sext i16 %2564 to i32
  %add3587 = add nsw i32 %conv3586, %call3585
  %conv3588 = trunc i32 %add3587 to i16
  store i16 %conv3588, i16* %mcost, align 2
  %conv3589 = sext i16 %conv3588 to i32
  %2565 = load i32, i32* %min_mcost.addr, align 4
  %cmp3590 = icmp sgt i32 %conv3589, %2565
  br i1 %cmp3590, label %if.then.3592, label %if.end.3593

if.then.3592:                                     ; preds = %if.then.3582
  store i16 1, i16* %abort_search, align 2
  br label %for.end.3625

if.end.3593:                                      ; preds = %if.then.3582
  br label %if.end.3620

if.else.3594:                                     ; preds = %cond.end.3572
  store i32 0, i32* %j, align 4
  store i32 0, i32* %k, align 4
  br label %for.cond.3595

for.cond.3595:                                    ; preds = %for.inc.3617, %if.else.3594
  %2566 = load i32, i32* %j, align 4
  %cmp3596 = icmp slt i32 %2566, 4
  br i1 %cmp3596, label %for.body.3598, label %for.end.3619

for.body.3598:                                    ; preds = %for.cond.3595
  store i32 0, i32* %i, align 4
  br label %for.cond.3599

for.cond.3599:                                    ; preds = %for.inc.3613, %for.body.3598
  %2567 = load i32, i32* %i, align 4
  %cmp3600 = icmp slt i32 %2567, 4
  br i1 %cmp3600, label %for.body.3602, label %for.end.3616

for.body.3602:                                    ; preds = %for.cond.3599
  %2568 = load i32, i32* %k, align 4
  %idxprom3603 = sext i32 %2568 to i64
  %arrayidx3604 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i32 0, i64 %idxprom3603
  %2569 = load i32, i32* %arrayidx3604, align 4
  %2570 = load i16, i16* %x0, align 2
  %conv3605 = sext i16 %2570 to i32
  %2571 = load i32, i32* %i, align 4
  %add3606 = add nsw i32 %conv3605, %2571
  %idxprom3607 = sext i32 %add3606 to i64
  %2572 = load i16, i16* %y0, align 2
  %conv3608 = sext i16 %2572 to i32
  %2573 = load i32, i32* %j, align 4
  %add3609 = add nsw i32 %conv3608, %2573
  %idxprom3610 = sext i32 %add3609 to i64
  %arrayidx3611 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %curr_diff, i32 0, i64 %idxprom3610
  %arrayidx3612 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx3611, i32 0, i64 %idxprom3607
  store i32 %2569, i32* %arrayidx3612, align 4
  br label %for.inc.3613

for.inc.3613:                                     ; preds = %for.body.3602
  %2574 = load i32, i32* %i, align 4
  %inc3614 = add nsw i32 %2574, 1
  store i32 %inc3614, i32* %i, align 4
  %2575 = load i32, i32* %k, align 4
  %inc3615 = add nsw i32 %2575, 1
  store i32 %inc3615, i32* %k, align 4
  br label %for.cond.3599

for.end.3616:                                     ; preds = %for.cond.3599
  br label %for.inc.3617

for.inc.3617:                                     ; preds = %for.end.3616
  %2576 = load i32, i32* %j, align 4
  %inc3618 = add nsw i32 %2576, 1
  store i32 %inc3618, i32* %j, align 4
  br label %for.cond.3595

for.end.3619:                                     ; preds = %for.cond.3595
  br label %if.end.3620

if.end.3620:                                      ; preds = %for.end.3619, %if.end.3593
  br label %for.inc.3621

for.inc.3621:                                     ; preds = %if.end.3620
  %2577 = load i16, i16* %x0, align 2
  %conv3622 = sext i16 %2577 to i32
  %add3623 = add nsw i32 %conv3622, 4
  %conv3624 = trunc i32 %add3623 to i16
  store i16 %conv3624, i16* %x0, align 2
  br label %for.cond.2218

for.end.3625:                                     ; preds = %if.then.3592, %for.cond.2218
  br label %if.end.4011

if.else.3626:                                     ; preds = %for.body.2203
  store i16 0, i16* %x0, align 2
  br label %for.cond.3627

for.cond.3627:                                    ; preds = %for.inc.4006, %if.else.3626
  %2578 = load i16, i16* %x0, align 2
  %conv3628 = sext i16 %2578 to i32
  %2579 = load i16, i16* %blocksize_x, align 2
  %conv3629 = sext i16 %2579 to i32
  %cmp3630 = icmp slt i32 %conv3628, %conv3629
  br i1 %cmp3630, label %for.body.3632, label %for.end.4010

for.body.3632:                                    ; preds = %for.cond.3627
  %2580 = load i32, i32* %pic_pix_x.addr, align 4
  %2581 = load i16, i16* %x0, align 2
  %conv3633 = sext i16 %2581 to i32
  %add3634 = add nsw i32 %2580, %conv3633
  %shl3635 = shl i32 %add3634, 2
  %2582 = load i16*, i16** %s_mv_x.addr, align 8
  %2583 = load i16, i16* %2582, align 2
  %conv3636 = sext i16 %2583 to i32
  %add3637 = add nsw i32 %shl3635, %conv3636
  %conv3638 = trunc i32 %add3637 to i16
  store i16 %conv3638, i16* %sx0, align 2
  %2584 = load i32, i32* %pic_pix_x.addr, align 4
  %2585 = load i16, i16* %x0, align 2
  %conv3639 = sext i16 %2585 to i32
  %add3640 = add nsw i32 %2584, %conv3639
  %shl3641 = shl i32 %add3640, 2
  %2586 = load i16, i16* %cand_mv_x, align 2
  %conv3642 = sext i16 %2586 to i32
  %add3643 = add nsw i32 %shl3641, %conv3642
  %conv3644 = trunc i32 %add3643 to i16
  store i16 %conv3644, i16* %rx0, align 2
  %arraydecay3645 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i32 0, i32 0
  store i32* %arraydecay3645, i32** %d, align 8
  %2587 = load i16, i16* %sy0, align 2
  store i16 %2587, i16* %sy, align 2
  %2588 = load i16, i16* %ry0, align 2
  store i16 %2588, i16* %ry, align 2
  %2589 = load i16, i16* %y0, align 2
  %idxprom3646 = sext i16 %2589 to i64
  %2590 = load i16**, i16*** %orig_pic.addr, align 8
  %arrayidx3647 = getelementptr inbounds i16*, i16** %2590, i64 %idxprom3646
  %2591 = load i16*, i16** %arrayidx3647, align 8
  store i16* %2591, i16** %orig_line, align 8
  %2592 = load i16, i16* %x0, align 2
  %idxprom3648 = sext i16 %2592 to i64
  %2593 = load i16*, i16** %orig_line, align 8
  %arrayidx3649 = getelementptr inbounds i16, i16* %2593, i64 %idxprom3648
  %2594 = load i16, i16* %arrayidx3649, align 2
  %conv3650 = zext i16 %2594 to i32
  %2595 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2596 = load i16**, i16*** %ref1_pic, align 8
  %2597 = load i16, i16* %sy, align 2
  %conv3651 = sext i16 %2597 to i32
  %2598 = load i16, i16* %sx0, align 2
  %conv3652 = sext i16 %2598 to i32
  %2599 = load i32, i32* %img_height, align 4
  %2600 = load i32, i32* %img_width, align 4
  %call3653 = call zeroext i16 %2595(i16** %2596, i32 %conv3651, i32 %conv3652, i32 %2599, i32 %2600)
  %conv3654 = zext i16 %call3653 to i32
  %2601 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2602 = load i16**, i16*** %ref2_pic, align 8
  %2603 = load i16, i16* %ry, align 2
  %conv3655 = sext i16 %2603 to i32
  %2604 = load i16, i16* %rx0, align 2
  %conv3656 = sext i16 %2604 to i32
  %2605 = load i32, i32* %img_height, align 4
  %2606 = load i32, i32* %img_width, align 4
  %call3657 = call zeroext i16 %2601(i16** %2602, i32 %conv3655, i32 %conv3656, i32 %2605, i32 %2606)
  %conv3658 = zext i16 %call3657 to i32
  %add3659 = add nsw i32 %conv3654, %conv3658
  %shr3660 = ashr i32 %add3659, 1
  %sub3661 = sub nsw i32 %conv3650, %shr3660
  %2607 = load i32*, i32** %d, align 8
  %incdec.ptr3662 = getelementptr inbounds i32, i32* %2607, i32 1
  store i32* %incdec.ptr3662, i32** %d, align 8
  store i32 %sub3661, i32* %2607, align 4
  %2608 = load i16, i16* %x0, align 2
  %conv3663 = sext i16 %2608 to i32
  %add3664 = add nsw i32 %conv3663, 1
  %idxprom3665 = sext i32 %add3664 to i64
  %2609 = load i16*, i16** %orig_line, align 8
  %arrayidx3666 = getelementptr inbounds i16, i16* %2609, i64 %idxprom3665
  %2610 = load i16, i16* %arrayidx3666, align 2
  %conv3667 = zext i16 %2610 to i32
  %2611 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2612 = load i16**, i16*** %ref1_pic, align 8
  %2613 = load i16, i16* %sy, align 2
  %conv3668 = sext i16 %2613 to i32
  %2614 = load i16, i16* %sx0, align 2
  %conv3669 = sext i16 %2614 to i32
  %add3670 = add nsw i32 %conv3669, 4
  %2615 = load i32, i32* %img_height, align 4
  %2616 = load i32, i32* %img_width, align 4
  %call3671 = call zeroext i16 %2611(i16** %2612, i32 %conv3668, i32 %add3670, i32 %2615, i32 %2616)
  %conv3672 = zext i16 %call3671 to i32
  %2617 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2618 = load i16**, i16*** %ref2_pic, align 8
  %2619 = load i16, i16* %ry, align 2
  %conv3673 = sext i16 %2619 to i32
  %2620 = load i16, i16* %rx0, align 2
  %conv3674 = sext i16 %2620 to i32
  %add3675 = add nsw i32 %conv3674, 4
  %2621 = load i32, i32* %img_height, align 4
  %2622 = load i32, i32* %img_width, align 4
  %call3676 = call zeroext i16 %2617(i16** %2618, i32 %conv3673, i32 %add3675, i32 %2621, i32 %2622)
  %conv3677 = zext i16 %call3676 to i32
  %add3678 = add nsw i32 %conv3672, %conv3677
  %shr3679 = ashr i32 %add3678, 1
  %sub3680 = sub nsw i32 %conv3667, %shr3679
  %2623 = load i32*, i32** %d, align 8
  %incdec.ptr3681 = getelementptr inbounds i32, i32* %2623, i32 1
  store i32* %incdec.ptr3681, i32** %d, align 8
  store i32 %sub3680, i32* %2623, align 4
  %2624 = load i16, i16* %x0, align 2
  %conv3682 = sext i16 %2624 to i32
  %add3683 = add nsw i32 %conv3682, 2
  %idxprom3684 = sext i32 %add3683 to i64
  %2625 = load i16*, i16** %orig_line, align 8
  %arrayidx3685 = getelementptr inbounds i16, i16* %2625, i64 %idxprom3684
  %2626 = load i16, i16* %arrayidx3685, align 2
  %conv3686 = zext i16 %2626 to i32
  %2627 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2628 = load i16**, i16*** %ref1_pic, align 8
  %2629 = load i16, i16* %sy, align 2
  %conv3687 = sext i16 %2629 to i32
  %2630 = load i16, i16* %sx0, align 2
  %conv3688 = sext i16 %2630 to i32
  %add3689 = add nsw i32 %conv3688, 8
  %2631 = load i32, i32* %img_height, align 4
  %2632 = load i32, i32* %img_width, align 4
  %call3690 = call zeroext i16 %2627(i16** %2628, i32 %conv3687, i32 %add3689, i32 %2631, i32 %2632)
  %conv3691 = zext i16 %call3690 to i32
  %2633 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2634 = load i16**, i16*** %ref2_pic, align 8
  %2635 = load i16, i16* %ry, align 2
  %conv3692 = sext i16 %2635 to i32
  %2636 = load i16, i16* %rx0, align 2
  %conv3693 = sext i16 %2636 to i32
  %add3694 = add nsw i32 %conv3693, 8
  %2637 = load i32, i32* %img_height, align 4
  %2638 = load i32, i32* %img_width, align 4
  %call3695 = call zeroext i16 %2633(i16** %2634, i32 %conv3692, i32 %add3694, i32 %2637, i32 %2638)
  %conv3696 = zext i16 %call3695 to i32
  %add3697 = add nsw i32 %conv3691, %conv3696
  %shr3698 = ashr i32 %add3697, 1
  %sub3699 = sub nsw i32 %conv3686, %shr3698
  %2639 = load i32*, i32** %d, align 8
  %incdec.ptr3700 = getelementptr inbounds i32, i32* %2639, i32 1
  store i32* %incdec.ptr3700, i32** %d, align 8
  store i32 %sub3699, i32* %2639, align 4
  %2640 = load i16, i16* %x0, align 2
  %conv3701 = sext i16 %2640 to i32
  %add3702 = add nsw i32 %conv3701, 3
  %idxprom3703 = sext i32 %add3702 to i64
  %2641 = load i16*, i16** %orig_line, align 8
  %arrayidx3704 = getelementptr inbounds i16, i16* %2641, i64 %idxprom3703
  %2642 = load i16, i16* %arrayidx3704, align 2
  %conv3705 = zext i16 %2642 to i32
  %2643 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2644 = load i16**, i16*** %ref1_pic, align 8
  %2645 = load i16, i16* %sy, align 2
  %conv3706 = sext i16 %2645 to i32
  %2646 = load i16, i16* %sx0, align 2
  %conv3707 = sext i16 %2646 to i32
  %add3708 = add nsw i32 %conv3707, 12
  %2647 = load i32, i32* %img_height, align 4
  %2648 = load i32, i32* %img_width, align 4
  %call3709 = call zeroext i16 %2643(i16** %2644, i32 %conv3706, i32 %add3708, i32 %2647, i32 %2648)
  %conv3710 = zext i16 %call3709 to i32
  %2649 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2650 = load i16**, i16*** %ref2_pic, align 8
  %2651 = load i16, i16* %ry, align 2
  %conv3711 = sext i16 %2651 to i32
  %2652 = load i16, i16* %rx0, align 2
  %conv3712 = sext i16 %2652 to i32
  %add3713 = add nsw i32 %conv3712, 12
  %2653 = load i32, i32* %img_height, align 4
  %2654 = load i32, i32* %img_width, align 4
  %call3714 = call zeroext i16 %2649(i16** %2650, i32 %conv3711, i32 %add3713, i32 %2653, i32 %2654)
  %conv3715 = zext i16 %call3714 to i32
  %add3716 = add nsw i32 %conv3710, %conv3715
  %shr3717 = ashr i32 %add3716, 1
  %sub3718 = sub nsw i32 %conv3705, %shr3717
  %2655 = load i32*, i32** %d, align 8
  %incdec.ptr3719 = getelementptr inbounds i32, i32* %2655, i32 1
  store i32* %incdec.ptr3719, i32** %d, align 8
  store i32 %sub3718, i32* %2655, align 4
  %2656 = load i16, i16* %sy0, align 2
  %conv3720 = sext i16 %2656 to i32
  %add3721 = add nsw i32 %conv3720, 4
  %conv3722 = trunc i32 %add3721 to i16
  store i16 %conv3722, i16* %sy, align 2
  %2657 = load i16, i16* %ry0, align 2
  %conv3723 = sext i16 %2657 to i32
  %add3724 = add nsw i32 %conv3723, 4
  %conv3725 = trunc i32 %add3724 to i16
  store i16 %conv3725, i16* %ry, align 2
  %2658 = load i16, i16* %y0, align 2
  %conv3726 = sext i16 %2658 to i32
  %add3727 = add nsw i32 %conv3726, 1
  %idxprom3728 = sext i32 %add3727 to i64
  %2659 = load i16**, i16*** %orig_pic.addr, align 8
  %arrayidx3729 = getelementptr inbounds i16*, i16** %2659, i64 %idxprom3728
  %2660 = load i16*, i16** %arrayidx3729, align 8
  store i16* %2660, i16** %orig_line, align 8
  %2661 = load i16, i16* %x0, align 2
  %idxprom3730 = sext i16 %2661 to i64
  %2662 = load i16*, i16** %orig_line, align 8
  %arrayidx3731 = getelementptr inbounds i16, i16* %2662, i64 %idxprom3730
  %2663 = load i16, i16* %arrayidx3731, align 2
  %conv3732 = zext i16 %2663 to i32
  %2664 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2665 = load i16**, i16*** %ref1_pic, align 8
  %2666 = load i16, i16* %sy, align 2
  %conv3733 = sext i16 %2666 to i32
  %2667 = load i16, i16* %sx0, align 2
  %conv3734 = sext i16 %2667 to i32
  %2668 = load i32, i32* %img_height, align 4
  %2669 = load i32, i32* %img_width, align 4
  %call3735 = call zeroext i16 %2664(i16** %2665, i32 %conv3733, i32 %conv3734, i32 %2668, i32 %2669)
  %conv3736 = zext i16 %call3735 to i32
  %2670 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2671 = load i16**, i16*** %ref2_pic, align 8
  %2672 = load i16, i16* %ry, align 2
  %conv3737 = sext i16 %2672 to i32
  %2673 = load i16, i16* %rx0, align 2
  %conv3738 = sext i16 %2673 to i32
  %2674 = load i32, i32* %img_height, align 4
  %2675 = load i32, i32* %img_width, align 4
  %call3739 = call zeroext i16 %2670(i16** %2671, i32 %conv3737, i32 %conv3738, i32 %2674, i32 %2675)
  %conv3740 = zext i16 %call3739 to i32
  %add3741 = add nsw i32 %conv3736, %conv3740
  %shr3742 = ashr i32 %add3741, 1
  %sub3743 = sub nsw i32 %conv3732, %shr3742
  %2676 = load i32*, i32** %d, align 8
  %incdec.ptr3744 = getelementptr inbounds i32, i32* %2676, i32 1
  store i32* %incdec.ptr3744, i32** %d, align 8
  store i32 %sub3743, i32* %2676, align 4
  %2677 = load i16, i16* %x0, align 2
  %conv3745 = sext i16 %2677 to i32
  %add3746 = add nsw i32 %conv3745, 1
  %idxprom3747 = sext i32 %add3746 to i64
  %2678 = load i16*, i16** %orig_line, align 8
  %arrayidx3748 = getelementptr inbounds i16, i16* %2678, i64 %idxprom3747
  %2679 = load i16, i16* %arrayidx3748, align 2
  %conv3749 = zext i16 %2679 to i32
  %2680 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2681 = load i16**, i16*** %ref1_pic, align 8
  %2682 = load i16, i16* %sy, align 2
  %conv3750 = sext i16 %2682 to i32
  %2683 = load i16, i16* %sx0, align 2
  %conv3751 = sext i16 %2683 to i32
  %add3752 = add nsw i32 %conv3751, 4
  %2684 = load i32, i32* %img_height, align 4
  %2685 = load i32, i32* %img_width, align 4
  %call3753 = call zeroext i16 %2680(i16** %2681, i32 %conv3750, i32 %add3752, i32 %2684, i32 %2685)
  %conv3754 = zext i16 %call3753 to i32
  %2686 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2687 = load i16**, i16*** %ref2_pic, align 8
  %2688 = load i16, i16* %ry, align 2
  %conv3755 = sext i16 %2688 to i32
  %2689 = load i16, i16* %rx0, align 2
  %conv3756 = sext i16 %2689 to i32
  %add3757 = add nsw i32 %conv3756, 4
  %2690 = load i32, i32* %img_height, align 4
  %2691 = load i32, i32* %img_width, align 4
  %call3758 = call zeroext i16 %2686(i16** %2687, i32 %conv3755, i32 %add3757, i32 %2690, i32 %2691)
  %conv3759 = zext i16 %call3758 to i32
  %add3760 = add nsw i32 %conv3754, %conv3759
  %shr3761 = ashr i32 %add3760, 1
  %sub3762 = sub nsw i32 %conv3749, %shr3761
  %2692 = load i32*, i32** %d, align 8
  %incdec.ptr3763 = getelementptr inbounds i32, i32* %2692, i32 1
  store i32* %incdec.ptr3763, i32** %d, align 8
  store i32 %sub3762, i32* %2692, align 4
  %2693 = load i16, i16* %x0, align 2
  %conv3764 = sext i16 %2693 to i32
  %add3765 = add nsw i32 %conv3764, 2
  %idxprom3766 = sext i32 %add3765 to i64
  %2694 = load i16*, i16** %orig_line, align 8
  %arrayidx3767 = getelementptr inbounds i16, i16* %2694, i64 %idxprom3766
  %2695 = load i16, i16* %arrayidx3767, align 2
  %conv3768 = zext i16 %2695 to i32
  %2696 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2697 = load i16**, i16*** %ref1_pic, align 8
  %2698 = load i16, i16* %sy, align 2
  %conv3769 = sext i16 %2698 to i32
  %2699 = load i16, i16* %sx0, align 2
  %conv3770 = sext i16 %2699 to i32
  %add3771 = add nsw i32 %conv3770, 8
  %2700 = load i32, i32* %img_height, align 4
  %2701 = load i32, i32* %img_width, align 4
  %call3772 = call zeroext i16 %2696(i16** %2697, i32 %conv3769, i32 %add3771, i32 %2700, i32 %2701)
  %conv3773 = zext i16 %call3772 to i32
  %2702 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2703 = load i16**, i16*** %ref2_pic, align 8
  %2704 = load i16, i16* %ry, align 2
  %conv3774 = sext i16 %2704 to i32
  %2705 = load i16, i16* %rx0, align 2
  %conv3775 = sext i16 %2705 to i32
  %add3776 = add nsw i32 %conv3775, 8
  %2706 = load i32, i32* %img_height, align 4
  %2707 = load i32, i32* %img_width, align 4
  %call3777 = call zeroext i16 %2702(i16** %2703, i32 %conv3774, i32 %add3776, i32 %2706, i32 %2707)
  %conv3778 = zext i16 %call3777 to i32
  %add3779 = add nsw i32 %conv3773, %conv3778
  %shr3780 = ashr i32 %add3779, 1
  %sub3781 = sub nsw i32 %conv3768, %shr3780
  %2708 = load i32*, i32** %d, align 8
  %incdec.ptr3782 = getelementptr inbounds i32, i32* %2708, i32 1
  store i32* %incdec.ptr3782, i32** %d, align 8
  store i32 %sub3781, i32* %2708, align 4
  %2709 = load i16, i16* %x0, align 2
  %conv3783 = sext i16 %2709 to i32
  %add3784 = add nsw i32 %conv3783, 3
  %idxprom3785 = sext i32 %add3784 to i64
  %2710 = load i16*, i16** %orig_line, align 8
  %arrayidx3786 = getelementptr inbounds i16, i16* %2710, i64 %idxprom3785
  %2711 = load i16, i16* %arrayidx3786, align 2
  %conv3787 = zext i16 %2711 to i32
  %2712 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2713 = load i16**, i16*** %ref1_pic, align 8
  %2714 = load i16, i16* %sy, align 2
  %conv3788 = sext i16 %2714 to i32
  %2715 = load i16, i16* %sx0, align 2
  %conv3789 = sext i16 %2715 to i32
  %add3790 = add nsw i32 %conv3789, 12
  %2716 = load i32, i32* %img_height, align 4
  %2717 = load i32, i32* %img_width, align 4
  %call3791 = call zeroext i16 %2712(i16** %2713, i32 %conv3788, i32 %add3790, i32 %2716, i32 %2717)
  %conv3792 = zext i16 %call3791 to i32
  %2718 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2719 = load i16**, i16*** %ref2_pic, align 8
  %2720 = load i16, i16* %ry, align 2
  %conv3793 = sext i16 %2720 to i32
  %2721 = load i16, i16* %rx0, align 2
  %conv3794 = sext i16 %2721 to i32
  %add3795 = add nsw i32 %conv3794, 12
  %2722 = load i32, i32* %img_height, align 4
  %2723 = load i32, i32* %img_width, align 4
  %call3796 = call zeroext i16 %2718(i16** %2719, i32 %conv3793, i32 %add3795, i32 %2722, i32 %2723)
  %conv3797 = zext i16 %call3796 to i32
  %add3798 = add nsw i32 %conv3792, %conv3797
  %shr3799 = ashr i32 %add3798, 1
  %sub3800 = sub nsw i32 %conv3787, %shr3799
  %2724 = load i32*, i32** %d, align 8
  %incdec.ptr3801 = getelementptr inbounds i32, i32* %2724, i32 1
  store i32* %incdec.ptr3801, i32** %d, align 8
  store i32 %sub3800, i32* %2724, align 4
  %2725 = load i16, i16* %sy0, align 2
  %conv3802 = sext i16 %2725 to i32
  %add3803 = add nsw i32 %conv3802, 8
  %conv3804 = trunc i32 %add3803 to i16
  store i16 %conv3804, i16* %sy, align 2
  %2726 = load i16, i16* %ry0, align 2
  %conv3805 = sext i16 %2726 to i32
  %add3806 = add nsw i32 %conv3805, 8
  %conv3807 = trunc i32 %add3806 to i16
  store i16 %conv3807, i16* %ry, align 2
  %2727 = load i16, i16* %y0, align 2
  %conv3808 = sext i16 %2727 to i32
  %add3809 = add nsw i32 %conv3808, 2
  %idxprom3810 = sext i32 %add3809 to i64
  %2728 = load i16**, i16*** %orig_pic.addr, align 8
  %arrayidx3811 = getelementptr inbounds i16*, i16** %2728, i64 %idxprom3810
  %2729 = load i16*, i16** %arrayidx3811, align 8
  store i16* %2729, i16** %orig_line, align 8
  %2730 = load i16, i16* %x0, align 2
  %idxprom3812 = sext i16 %2730 to i64
  %2731 = load i16*, i16** %orig_line, align 8
  %arrayidx3813 = getelementptr inbounds i16, i16* %2731, i64 %idxprom3812
  %2732 = load i16, i16* %arrayidx3813, align 2
  %conv3814 = zext i16 %2732 to i32
  %2733 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2734 = load i16**, i16*** %ref1_pic, align 8
  %2735 = load i16, i16* %sy, align 2
  %conv3815 = sext i16 %2735 to i32
  %2736 = load i16, i16* %sx0, align 2
  %conv3816 = sext i16 %2736 to i32
  %2737 = load i32, i32* %img_height, align 4
  %2738 = load i32, i32* %img_width, align 4
  %call3817 = call zeroext i16 %2733(i16** %2734, i32 %conv3815, i32 %conv3816, i32 %2737, i32 %2738)
  %conv3818 = zext i16 %call3817 to i32
  %2739 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2740 = load i16**, i16*** %ref2_pic, align 8
  %2741 = load i16, i16* %ry, align 2
  %conv3819 = sext i16 %2741 to i32
  %2742 = load i16, i16* %rx0, align 2
  %conv3820 = sext i16 %2742 to i32
  %2743 = load i32, i32* %img_height, align 4
  %2744 = load i32, i32* %img_width, align 4
  %call3821 = call zeroext i16 %2739(i16** %2740, i32 %conv3819, i32 %conv3820, i32 %2743, i32 %2744)
  %conv3822 = zext i16 %call3821 to i32
  %add3823 = add nsw i32 %conv3818, %conv3822
  %shr3824 = ashr i32 %add3823, 1
  %sub3825 = sub nsw i32 %conv3814, %shr3824
  %2745 = load i32*, i32** %d, align 8
  %incdec.ptr3826 = getelementptr inbounds i32, i32* %2745, i32 1
  store i32* %incdec.ptr3826, i32** %d, align 8
  store i32 %sub3825, i32* %2745, align 4
  %2746 = load i16, i16* %x0, align 2
  %conv3827 = sext i16 %2746 to i32
  %add3828 = add nsw i32 %conv3827, 1
  %idxprom3829 = sext i32 %add3828 to i64
  %2747 = load i16*, i16** %orig_line, align 8
  %arrayidx3830 = getelementptr inbounds i16, i16* %2747, i64 %idxprom3829
  %2748 = load i16, i16* %arrayidx3830, align 2
  %conv3831 = zext i16 %2748 to i32
  %2749 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2750 = load i16**, i16*** %ref1_pic, align 8
  %2751 = load i16, i16* %sy, align 2
  %conv3832 = sext i16 %2751 to i32
  %2752 = load i16, i16* %sx0, align 2
  %conv3833 = sext i16 %2752 to i32
  %add3834 = add nsw i32 %conv3833, 4
  %2753 = load i32, i32* %img_height, align 4
  %2754 = load i32, i32* %img_width, align 4
  %call3835 = call zeroext i16 %2749(i16** %2750, i32 %conv3832, i32 %add3834, i32 %2753, i32 %2754)
  %conv3836 = zext i16 %call3835 to i32
  %2755 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2756 = load i16**, i16*** %ref2_pic, align 8
  %2757 = load i16, i16* %ry, align 2
  %conv3837 = sext i16 %2757 to i32
  %2758 = load i16, i16* %rx0, align 2
  %conv3838 = sext i16 %2758 to i32
  %add3839 = add nsw i32 %conv3838, 4
  %2759 = load i32, i32* %img_height, align 4
  %2760 = load i32, i32* %img_width, align 4
  %call3840 = call zeroext i16 %2755(i16** %2756, i32 %conv3837, i32 %add3839, i32 %2759, i32 %2760)
  %conv3841 = zext i16 %call3840 to i32
  %add3842 = add nsw i32 %conv3836, %conv3841
  %shr3843 = ashr i32 %add3842, 1
  %sub3844 = sub nsw i32 %conv3831, %shr3843
  %2761 = load i32*, i32** %d, align 8
  %incdec.ptr3845 = getelementptr inbounds i32, i32* %2761, i32 1
  store i32* %incdec.ptr3845, i32** %d, align 8
  store i32 %sub3844, i32* %2761, align 4
  %2762 = load i16, i16* %x0, align 2
  %conv3846 = sext i16 %2762 to i32
  %add3847 = add nsw i32 %conv3846, 2
  %idxprom3848 = sext i32 %add3847 to i64
  %2763 = load i16*, i16** %orig_line, align 8
  %arrayidx3849 = getelementptr inbounds i16, i16* %2763, i64 %idxprom3848
  %2764 = load i16, i16* %arrayidx3849, align 2
  %conv3850 = zext i16 %2764 to i32
  %2765 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2766 = load i16**, i16*** %ref1_pic, align 8
  %2767 = load i16, i16* %sy, align 2
  %conv3851 = sext i16 %2767 to i32
  %2768 = load i16, i16* %sx0, align 2
  %conv3852 = sext i16 %2768 to i32
  %add3853 = add nsw i32 %conv3852, 8
  %2769 = load i32, i32* %img_height, align 4
  %2770 = load i32, i32* %img_width, align 4
  %call3854 = call zeroext i16 %2765(i16** %2766, i32 %conv3851, i32 %add3853, i32 %2769, i32 %2770)
  %conv3855 = zext i16 %call3854 to i32
  %2771 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2772 = load i16**, i16*** %ref2_pic, align 8
  %2773 = load i16, i16* %ry, align 2
  %conv3856 = sext i16 %2773 to i32
  %2774 = load i16, i16* %rx0, align 2
  %conv3857 = sext i16 %2774 to i32
  %add3858 = add nsw i32 %conv3857, 8
  %2775 = load i32, i32* %img_height, align 4
  %2776 = load i32, i32* %img_width, align 4
  %call3859 = call zeroext i16 %2771(i16** %2772, i32 %conv3856, i32 %add3858, i32 %2775, i32 %2776)
  %conv3860 = zext i16 %call3859 to i32
  %add3861 = add nsw i32 %conv3855, %conv3860
  %shr3862 = ashr i32 %add3861, 1
  %sub3863 = sub nsw i32 %conv3850, %shr3862
  %2777 = load i32*, i32** %d, align 8
  %incdec.ptr3864 = getelementptr inbounds i32, i32* %2777, i32 1
  store i32* %incdec.ptr3864, i32** %d, align 8
  store i32 %sub3863, i32* %2777, align 4
  %2778 = load i16, i16* %x0, align 2
  %conv3865 = sext i16 %2778 to i32
  %add3866 = add nsw i32 %conv3865, 3
  %idxprom3867 = sext i32 %add3866 to i64
  %2779 = load i16*, i16** %orig_line, align 8
  %arrayidx3868 = getelementptr inbounds i16, i16* %2779, i64 %idxprom3867
  %2780 = load i16, i16* %arrayidx3868, align 2
  %conv3869 = zext i16 %2780 to i32
  %2781 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2782 = load i16**, i16*** %ref1_pic, align 8
  %2783 = load i16, i16* %sy, align 2
  %conv3870 = sext i16 %2783 to i32
  %2784 = load i16, i16* %sx0, align 2
  %conv3871 = sext i16 %2784 to i32
  %add3872 = add nsw i32 %conv3871, 12
  %2785 = load i32, i32* %img_height, align 4
  %2786 = load i32, i32* %img_width, align 4
  %call3873 = call zeroext i16 %2781(i16** %2782, i32 %conv3870, i32 %add3872, i32 %2785, i32 %2786)
  %conv3874 = zext i16 %call3873 to i32
  %2787 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2788 = load i16**, i16*** %ref2_pic, align 8
  %2789 = load i16, i16* %ry, align 2
  %conv3875 = sext i16 %2789 to i32
  %2790 = load i16, i16* %rx0, align 2
  %conv3876 = sext i16 %2790 to i32
  %add3877 = add nsw i32 %conv3876, 12
  %2791 = load i32, i32* %img_height, align 4
  %2792 = load i32, i32* %img_width, align 4
  %call3878 = call zeroext i16 %2787(i16** %2788, i32 %conv3875, i32 %add3877, i32 %2791, i32 %2792)
  %conv3879 = zext i16 %call3878 to i32
  %add3880 = add nsw i32 %conv3874, %conv3879
  %shr3881 = ashr i32 %add3880, 1
  %sub3882 = sub nsw i32 %conv3869, %shr3881
  %2793 = load i32*, i32** %d, align 8
  %incdec.ptr3883 = getelementptr inbounds i32, i32* %2793, i32 1
  store i32* %incdec.ptr3883, i32** %d, align 8
  store i32 %sub3882, i32* %2793, align 4
  %2794 = load i16, i16* %sy0, align 2
  %conv3884 = sext i16 %2794 to i32
  %add3885 = add nsw i32 %conv3884, 12
  %conv3886 = trunc i32 %add3885 to i16
  store i16 %conv3886, i16* %sy, align 2
  %2795 = load i16, i16* %ry0, align 2
  %conv3887 = sext i16 %2795 to i32
  %add3888 = add nsw i32 %conv3887, 12
  %conv3889 = trunc i32 %add3888 to i16
  store i16 %conv3889, i16* %ry, align 2
  %2796 = load i16, i16* %y0, align 2
  %conv3890 = sext i16 %2796 to i32
  %add3891 = add nsw i32 %conv3890, 3
  %idxprom3892 = sext i32 %add3891 to i64
  %2797 = load i16**, i16*** %orig_pic.addr, align 8
  %arrayidx3893 = getelementptr inbounds i16*, i16** %2797, i64 %idxprom3892
  %2798 = load i16*, i16** %arrayidx3893, align 8
  store i16* %2798, i16** %orig_line, align 8
  %2799 = load i16, i16* %x0, align 2
  %idxprom3894 = sext i16 %2799 to i64
  %2800 = load i16*, i16** %orig_line, align 8
  %arrayidx3895 = getelementptr inbounds i16, i16* %2800, i64 %idxprom3894
  %2801 = load i16, i16* %arrayidx3895, align 2
  %conv3896 = zext i16 %2801 to i32
  %2802 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2803 = load i16**, i16*** %ref1_pic, align 8
  %2804 = load i16, i16* %sy, align 2
  %conv3897 = sext i16 %2804 to i32
  %2805 = load i16, i16* %sx0, align 2
  %conv3898 = sext i16 %2805 to i32
  %2806 = load i32, i32* %img_height, align 4
  %2807 = load i32, i32* %img_width, align 4
  %call3899 = call zeroext i16 %2802(i16** %2803, i32 %conv3897, i32 %conv3898, i32 %2806, i32 %2807)
  %conv3900 = zext i16 %call3899 to i32
  %2808 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2809 = load i16**, i16*** %ref2_pic, align 8
  %2810 = load i16, i16* %ry, align 2
  %conv3901 = sext i16 %2810 to i32
  %2811 = load i16, i16* %rx0, align 2
  %conv3902 = sext i16 %2811 to i32
  %2812 = load i32, i32* %img_height, align 4
  %2813 = load i32, i32* %img_width, align 4
  %call3903 = call zeroext i16 %2808(i16** %2809, i32 %conv3901, i32 %conv3902, i32 %2812, i32 %2813)
  %conv3904 = zext i16 %call3903 to i32
  %add3905 = add nsw i32 %conv3900, %conv3904
  %shr3906 = ashr i32 %add3905, 1
  %sub3907 = sub nsw i32 %conv3896, %shr3906
  %2814 = load i32*, i32** %d, align 8
  %incdec.ptr3908 = getelementptr inbounds i32, i32* %2814, i32 1
  store i32* %incdec.ptr3908, i32** %d, align 8
  store i32 %sub3907, i32* %2814, align 4
  %2815 = load i16, i16* %x0, align 2
  %conv3909 = sext i16 %2815 to i32
  %add3910 = add nsw i32 %conv3909, 1
  %idxprom3911 = sext i32 %add3910 to i64
  %2816 = load i16*, i16** %orig_line, align 8
  %arrayidx3912 = getelementptr inbounds i16, i16* %2816, i64 %idxprom3911
  %2817 = load i16, i16* %arrayidx3912, align 2
  %conv3913 = zext i16 %2817 to i32
  %2818 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2819 = load i16**, i16*** %ref1_pic, align 8
  %2820 = load i16, i16* %sy, align 2
  %conv3914 = sext i16 %2820 to i32
  %2821 = load i16, i16* %sx0, align 2
  %conv3915 = sext i16 %2821 to i32
  %add3916 = add nsw i32 %conv3915, 4
  %2822 = load i32, i32* %img_height, align 4
  %2823 = load i32, i32* %img_width, align 4
  %call3917 = call zeroext i16 %2818(i16** %2819, i32 %conv3914, i32 %add3916, i32 %2822, i32 %2823)
  %conv3918 = zext i16 %call3917 to i32
  %2824 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2825 = load i16**, i16*** %ref2_pic, align 8
  %2826 = load i16, i16* %ry, align 2
  %conv3919 = sext i16 %2826 to i32
  %2827 = load i16, i16* %rx0, align 2
  %conv3920 = sext i16 %2827 to i32
  %add3921 = add nsw i32 %conv3920, 4
  %2828 = load i32, i32* %img_height, align 4
  %2829 = load i32, i32* %img_width, align 4
  %call3922 = call zeroext i16 %2824(i16** %2825, i32 %conv3919, i32 %add3921, i32 %2828, i32 %2829)
  %conv3923 = zext i16 %call3922 to i32
  %add3924 = add nsw i32 %conv3918, %conv3923
  %shr3925 = ashr i32 %add3924, 1
  %sub3926 = sub nsw i32 %conv3913, %shr3925
  %2830 = load i32*, i32** %d, align 8
  %incdec.ptr3927 = getelementptr inbounds i32, i32* %2830, i32 1
  store i32* %incdec.ptr3927, i32** %d, align 8
  store i32 %sub3926, i32* %2830, align 4
  %2831 = load i16, i16* %x0, align 2
  %conv3928 = sext i16 %2831 to i32
  %add3929 = add nsw i32 %conv3928, 2
  %idxprom3930 = sext i32 %add3929 to i64
  %2832 = load i16*, i16** %orig_line, align 8
  %arrayidx3931 = getelementptr inbounds i16, i16* %2832, i64 %idxprom3930
  %2833 = load i16, i16* %arrayidx3931, align 2
  %conv3932 = zext i16 %2833 to i32
  %2834 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2835 = load i16**, i16*** %ref1_pic, align 8
  %2836 = load i16, i16* %sy, align 2
  %conv3933 = sext i16 %2836 to i32
  %2837 = load i16, i16* %sx0, align 2
  %conv3934 = sext i16 %2837 to i32
  %add3935 = add nsw i32 %conv3934, 8
  %2838 = load i32, i32* %img_height, align 4
  %2839 = load i32, i32* %img_width, align 4
  %call3936 = call zeroext i16 %2834(i16** %2835, i32 %conv3933, i32 %add3935, i32 %2838, i32 %2839)
  %conv3937 = zext i16 %call3936 to i32
  %2840 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2841 = load i16**, i16*** %ref2_pic, align 8
  %2842 = load i16, i16* %ry, align 2
  %conv3938 = sext i16 %2842 to i32
  %2843 = load i16, i16* %rx0, align 2
  %conv3939 = sext i16 %2843 to i32
  %add3940 = add nsw i32 %conv3939, 8
  %2844 = load i32, i32* %img_height, align 4
  %2845 = load i32, i32* %img_width, align 4
  %call3941 = call zeroext i16 %2840(i16** %2841, i32 %conv3938, i32 %add3940, i32 %2844, i32 %2845)
  %conv3942 = zext i16 %call3941 to i32
  %add3943 = add nsw i32 %conv3937, %conv3942
  %shr3944 = ashr i32 %add3943, 1
  %sub3945 = sub nsw i32 %conv3932, %shr3944
  %2846 = load i32*, i32** %d, align 8
  %incdec.ptr3946 = getelementptr inbounds i32, i32* %2846, i32 1
  store i32* %incdec.ptr3946, i32** %d, align 8
  store i32 %sub3945, i32* %2846, align 4
  %2847 = load i16, i16* %x0, align 2
  %conv3947 = sext i16 %2847 to i32
  %add3948 = add nsw i32 %conv3947, 3
  %idxprom3949 = sext i32 %add3948 to i64
  %2848 = load i16*, i16** %orig_line, align 8
  %arrayidx3950 = getelementptr inbounds i16, i16* %2848, i64 %idxprom3949
  %2849 = load i16, i16* %arrayidx3950, align 2
  %conv3951 = zext i16 %2849 to i32
  %2850 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2851 = load i16**, i16*** %ref1_pic, align 8
  %2852 = load i16, i16* %sy, align 2
  %conv3952 = sext i16 %2852 to i32
  %2853 = load i16, i16* %sx0, align 2
  %conv3953 = sext i16 %2853 to i32
  %add3954 = add nsw i32 %conv3953, 12
  %2854 = load i32, i32* %img_height, align 4
  %2855 = load i32, i32* %img_width, align 4
  %call3955 = call zeroext i16 %2850(i16** %2851, i32 %conv3952, i32 %add3954, i32 %2854, i32 %2855)
  %conv3956 = zext i16 %call3955 to i32
  %2856 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2857 = load i16**, i16*** %ref2_pic, align 8
  %2858 = load i16, i16* %ry, align 2
  %conv3957 = sext i16 %2858 to i32
  %2859 = load i16, i16* %rx0, align 2
  %conv3958 = sext i16 %2859 to i32
  %add3959 = add nsw i32 %conv3958, 12
  %2860 = load i32, i32* %img_height, align 4
  %2861 = load i32, i32* %img_width, align 4
  %call3960 = call zeroext i16 %2856(i16** %2857, i32 %conv3957, i32 %add3959, i32 %2860, i32 %2861)
  %conv3961 = zext i16 %call3960 to i32
  %add3962 = add nsw i32 %conv3956, %conv3961
  %shr3963 = ashr i32 %add3962, 1
  %sub3964 = sub nsw i32 %conv3951, %shr3963
  %2862 = load i32*, i32** %d, align 8
  store i32 %sub3964, i32* %2862, align 4
  %2863 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %AllowTransform8x83965 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %2863, i32 0, i32 123
  %2864 = load i32, i32* %AllowTransform8x83965, align 4
  %tobool3966 = icmp ne i32 %2864, 0
  br i1 %tobool3966, label %if.else.3979, label %if.then.3967

if.then.3967:                                     ; preds = %for.body.3632
  %arraydecay3968 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i32 0, i32 0
  %2865 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamard3969 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %2865, i32 0, i32 6
  %2866 = load i32, i32* %hadamard3969, align 4
  %call3970 = call i32 @SATD(i32* %arraydecay3968, i32 %2866)
  %2867 = load i16, i16* %mcost, align 2
  %conv3971 = sext i16 %2867 to i32
  %add3972 = add nsw i32 %conv3971, %call3970
  %conv3973 = trunc i32 %add3972 to i16
  store i16 %conv3973, i16* %mcost, align 2
  %conv3974 = sext i16 %conv3973 to i32
  %2868 = load i32, i32* %min_mcost.addr, align 4
  %cmp3975 = icmp sgt i32 %conv3974, %2868
  br i1 %cmp3975, label %if.then.3977, label %if.end.3978

if.then.3977:                                     ; preds = %if.then.3967
  store i16 1, i16* %abort_search, align 2
  br label %for.end.4010

if.end.3978:                                      ; preds = %if.then.3967
  br label %if.end.4005

if.else.3979:                                     ; preds = %for.body.3632
  store i32 0, i32* %j, align 4
  store i32 0, i32* %k, align 4
  br label %for.cond.3980

for.cond.3980:                                    ; preds = %for.inc.4002, %if.else.3979
  %2869 = load i32, i32* %j, align 4
  %cmp3981 = icmp slt i32 %2869, 4
  br i1 %cmp3981, label %for.body.3983, label %for.end.4004

for.body.3983:                                    ; preds = %for.cond.3980
  store i32 0, i32* %i, align 4
  br label %for.cond.3984

for.cond.3984:                                    ; preds = %for.inc.3998, %for.body.3983
  %2870 = load i32, i32* %i, align 4
  %cmp3985 = icmp slt i32 %2870, 4
  br i1 %cmp3985, label %for.body.3987, label %for.end.4001

for.body.3987:                                    ; preds = %for.cond.3984
  %2871 = load i32, i32* %k, align 4
  %idxprom3988 = sext i32 %2871 to i64
  %arrayidx3989 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i32 0, i64 %idxprom3988
  %2872 = load i32, i32* %arrayidx3989, align 4
  %2873 = load i16, i16* %x0, align 2
  %conv3990 = sext i16 %2873 to i32
  %2874 = load i32, i32* %i, align 4
  %add3991 = add nsw i32 %conv3990, %2874
  %idxprom3992 = sext i32 %add3991 to i64
  %2875 = load i16, i16* %y0, align 2
  %conv3993 = sext i16 %2875 to i32
  %2876 = load i32, i32* %j, align 4
  %add3994 = add nsw i32 %conv3993, %2876
  %idxprom3995 = sext i32 %add3994 to i64
  %arrayidx3996 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %curr_diff, i32 0, i64 %idxprom3995
  %arrayidx3997 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx3996, i32 0, i64 %idxprom3992
  store i32 %2872, i32* %arrayidx3997, align 4
  br label %for.inc.3998

for.inc.3998:                                     ; preds = %for.body.3987
  %2877 = load i32, i32* %i, align 4
  %inc3999 = add nsw i32 %2877, 1
  store i32 %inc3999, i32* %i, align 4
  %2878 = load i32, i32* %k, align 4
  %inc4000 = add nsw i32 %2878, 1
  store i32 %inc4000, i32* %k, align 4
  br label %for.cond.3984

for.end.4001:                                     ; preds = %for.cond.3984
  br label %for.inc.4002

for.inc.4002:                                     ; preds = %for.end.4001
  %2879 = load i32, i32* %j, align 4
  %inc4003 = add nsw i32 %2879, 1
  store i32 %inc4003, i32* %j, align 4
  br label %for.cond.3980

for.end.4004:                                     ; preds = %for.cond.3980
  br label %if.end.4005

if.end.4005:                                      ; preds = %for.end.4004, %if.end.3978
  br label %for.inc.4006

for.inc.4006:                                     ; preds = %if.end.4005
  %2880 = load i16, i16* %x0, align 2
  %conv4007 = sext i16 %2880 to i32
  %add4008 = add nsw i32 %conv4007, 4
  %conv4009 = trunc i32 %add4008 to i16
  store i16 %conv4009, i16* %x0, align 2
  br label %for.cond.3627

for.end.4010:                                     ; preds = %if.then.3977, %for.cond.3627
  br label %if.end.4011

if.end.4011:                                      ; preds = %for.end.4010, %for.end.3625
  br label %for.inc.4012

for.inc.4012:                                     ; preds = %if.end.4011
  %2881 = load i16, i16* %y0, align 2
  %conv4013 = sext i16 %2881 to i32
  %add4014 = add nsw i32 %conv4013, 4
  %conv4015 = trunc i32 %add4014 to i16
  store i16 %conv4015, i16* %y0, align 2
  br label %for.cond.2194

for.end.4016:                                     ; preds = %land.end.2202
  %2882 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %AllowTransform8x84017 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %2882, i32 0, i32 123
  %2883 = load i32, i32* %AllowTransform8x84017, align 4
  %tobool4018 = icmp ne i32 %2883, 0
  br i1 %tobool4018, label %if.then.4019, label %if.end.4026

if.then.4019:                                     ; preds = %for.end.4016
  %arraydecay4020 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %curr_diff, i32 0, i32 0
  %2884 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamard4021 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %2884, i32 0, i32 6
  %2885 = load i32, i32* %hadamard4021, align 4
  %2886 = load i32, i32* %blocktype.addr, align 4
  %call4022 = call i32 @find_SATD([16 x i32]* %arraydecay4020, i32 %2885, i32 %2886)
  %2887 = load i16, i16* %mcost, align 2
  %conv4023 = sext i16 %2887 to i32
  %add4024 = add nsw i32 %conv4023, %call4022
  %conv4025 = trunc i32 %add4024 to i16
  store i16 %conv4025, i16* %mcost, align 2
  br label %if.end.4026

if.end.4026:                                      ; preds = %if.then.4019, %for.end.4016
  %2888 = load i16, i16* %mcost, align 2
  %conv4027 = sext i16 %2888 to i32
  %2889 = load i32, i32* %min_mcost.addr, align 4
  %cmp4028 = icmp slt i32 %conv4027, %2889
  br i1 %cmp4028, label %if.then.4030, label %if.end.4032

if.then.4030:                                     ; preds = %if.end.4026
  %2890 = load i16, i16* %mcost, align 2
  %conv4031 = sext i16 %2890 to i32
  store i32 %conv4031, i32* %min_mcost.addr, align 4
  %2891 = load i16, i16* %pos, align 2
  store i16 %2891, i16* %best_pos, align 2
  br label %if.end.4032

if.end.4032:                                      ; preds = %if.then.4030, %if.end.4026
  br label %for.inc.4033

for.inc.4033:                                     ; preds = %if.end.4032
  %2892 = load i16, i16* %pos, align 2
  %inc4034 = add i16 %2892, 1
  store i16 %inc4034, i16* %pos, align 2
  br label %for.cond.2161

for.end.4035:                                     ; preds = %for.cond.2161
  %2893 = load i16, i16* %best_pos, align 2
  %tobool4036 = icmp ne i16 %2893, 0
  br i1 %tobool4036, label %if.then.4037, label %if.end.4048

if.then.4037:                                     ; preds = %for.end.4035
  %2894 = load i16, i16* %best_pos, align 2
  %idxprom4038 = sext i16 %2894 to i64
  %2895 = load i32*, i32** @spiral_search_x, align 8
  %arrayidx4039 = getelementptr inbounds i32, i32* %2895, i64 %idxprom4038
  %2896 = load i32, i32* %arrayidx4039, align 4
  %2897 = load i16*, i16** %mv_x.addr, align 8
  %2898 = load i16, i16* %2897, align 2
  %conv4040 = sext i16 %2898 to i32
  %add4041 = add nsw i32 %conv4040, %2896
  %conv4042 = trunc i32 %add4041 to i16
  store i16 %conv4042, i16* %2897, align 2
  %2899 = load i16, i16* %best_pos, align 2
  %idxprom4043 = sext i16 %2899 to i64
  %2900 = load i32*, i32** @spiral_search_y, align 8
  %arrayidx4044 = getelementptr inbounds i32, i32* %2900, i64 %idxprom4043
  %2901 = load i32, i32* %arrayidx4044, align 4
  %2902 = load i16*, i16** %mv_y.addr, align 8
  %2903 = load i16, i16* %2902, align 2
  %conv4045 = sext i16 %2903 to i32
  %add4046 = add nsw i32 %conv4045, %2901
  %conv4047 = trunc i32 %add4046 to i16
  store i16 %conv4047, i16* %2902, align 2
  br label %if.end.4048

if.end.4048:                                      ; preds = %if.then.4037, %for.end.4035
  %2904 = load i32, i32* %min_mcost.addr, align 4
  ret i32 %2904
}

; Function Attrs: nounwind uwtable
define i32 @BPredPartitionCost(i32 %blocktype, i32 %block8x8, i16 signext %fw_ref, i16 signext %bw_ref, i32 %lambda_factor, i32 %list) #0 {
entry:
  %blocktype.addr = alloca i32, align 4
  %block8x8.addr = alloca i32, align 4
  %fw_ref.addr = alloca i16, align 2
  %bw_ref.addr = alloca i16, align 2
  %lambda_factor.addr = alloca i32, align 4
  %list.addr = alloca i32, align 4
  %diff = alloca [64 x i32], align 16
  %curr_blk = alloca [16 x [16 x i32]], align 16
  %bsx = alloca i32, align 4
  %bsy = alloca i32, align 4
  %pic_pix_x = alloca i32, align 4
  %pic_pix_y = alloca i32, align 4
  %block_x = alloca i32, align 4
  %block_y = alloca i32, align 4
  %v = alloca i32, align 4
  %h = alloca i32, align 4
  %mcost = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %mvd_bits = alloca i32, align 4
  %parttype = alloca i32, align 4
  %step_h0 = alloca i32, align 4
  %step_v0 = alloca i32, align 4
  %step_h = alloca i32, align 4
  %step_v = alloca i32, align 4
  %bxx = alloca i32, align 4
  %byy = alloca i32, align 4
  %all_mv = alloca i16******, align 8
  %p_mv = alloca i16******, align 8
  store i32 %blocktype, i32* %blocktype.addr, align 4
  store i32 %block8x8, i32* %block8x8.addr, align 4
  store i16 %fw_ref, i16* %fw_ref.addr, align 2
  store i16 %bw_ref, i16* %bw_ref.addr, align 2
  store i32 %lambda_factor, i32* %lambda_factor.addr, align 4
  store i32 %list, i32* %list.addr, align 4
  %0 = load i32, i32* %blocktype.addr, align 4
  %idxprom = sext i32 %0 to i64
  %1 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %blc_size = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %1, i32 0, i32 20
  %arrayidx = getelementptr inbounds [8 x [2 x i32]], [8 x [2 x i32]]* %blc_size, i32 0, i64 %idxprom
  %arrayidx1 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx, i32 0, i64 0
  %2 = load i32, i32* %arrayidx1, align 4
  %cmp = icmp slt i32 %2, 8
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %3 = load i32, i32* %blocktype.addr, align 4
  %idxprom2 = sext i32 %3 to i64
  %4 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %blc_size3 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %4, i32 0, i32 20
  %arrayidx4 = getelementptr inbounds [8 x [2 x i32]], [8 x [2 x i32]]* %blc_size3, i32 0, i64 %idxprom2
  %arrayidx5 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx4, i32 0, i64 0
  %5 = load i32, i32* %arrayidx5, align 4
  br label %cond.end

cond.false:                                       ; preds = %entry
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %5, %cond.true ], [ 8, %cond.false ]
  store i32 %cond, i32* %bsx, align 4
  %6 = load i32, i32* %blocktype.addr, align 4
  %idxprom6 = sext i32 %6 to i64
  %7 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %blc_size7 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %7, i32 0, i32 20
  %arrayidx8 = getelementptr inbounds [8 x [2 x i32]], [8 x [2 x i32]]* %blc_size7, i32 0, i64 %idxprom6
  %arrayidx9 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx8, i32 0, i64 1
  %8 = load i32, i32* %arrayidx9, align 4
  %cmp10 = icmp slt i32 %8, 8
  br i1 %cmp10, label %cond.true.11, label %cond.false.16

cond.true.11:                                     ; preds = %cond.end
  %9 = load i32, i32* %blocktype.addr, align 4
  %idxprom12 = sext i32 %9 to i64
  %10 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %blc_size13 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %10, i32 0, i32 20
  %arrayidx14 = getelementptr inbounds [8 x [2 x i32]], [8 x [2 x i32]]* %blc_size13, i32 0, i64 %idxprom12
  %arrayidx15 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx14, i32 0, i64 1
  %11 = load i32, i32* %arrayidx15, align 4
  br label %cond.end.17

cond.false.16:                                    ; preds = %cond.end
  br label %cond.end.17

cond.end.17:                                      ; preds = %cond.false.16, %cond.true.11
  %cond18 = phi i32 [ %11, %cond.true.11 ], [ 8, %cond.false.16 ]
  store i32 %cond18, i32* %bsy, align 4
  store i32 0, i32* %mvd_bits, align 4
  %12 = load i32, i32* %blocktype.addr, align 4
  %cmp19 = icmp slt i32 %12, 4
  br i1 %cmp19, label %cond.true.20, label %cond.false.21

cond.true.20:                                     ; preds = %cond.end.17
  %13 = load i32, i32* %blocktype.addr, align 4
  br label %cond.end.22

cond.false.21:                                    ; preds = %cond.end.17
  br label %cond.end.22

cond.end.22:                                      ; preds = %cond.false.21, %cond.true.20
  %cond23 = phi i32 [ %13, %cond.true.20 ], [ 4, %cond.false.21 ]
  store i32 %cond23, i32* %parttype, align 4
  %14 = load i32, i32* %parttype, align 4
  %idxprom24 = sext i32 %14 to i64
  %15 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %part_size = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %15, i32 0, i32 21
  %arrayidx25 = getelementptr inbounds [8 x [2 x i32]], [8 x [2 x i32]]* %part_size, i32 0, i64 %idxprom24
  %arrayidx26 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx25, i32 0, i64 0
  %16 = load i32, i32* %arrayidx26, align 4
  store i32 %16, i32* %step_h0, align 4
  %17 = load i32, i32* %parttype, align 4
  %idxprom27 = sext i32 %17 to i64
  %18 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %part_size28 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %18, i32 0, i32 21
  %arrayidx29 = getelementptr inbounds [8 x [2 x i32]], [8 x [2 x i32]]* %part_size28, i32 0, i64 %idxprom27
  %arrayidx30 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx29, i32 0, i64 1
  %19 = load i32, i32* %arrayidx30, align 4
  store i32 %19, i32* %step_v0, align 4
  %20 = load i32, i32* %blocktype.addr, align 4
  %idxprom31 = sext i32 %20 to i64
  %21 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %part_size32 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %21, i32 0, i32 21
  %arrayidx33 = getelementptr inbounds [8 x [2 x i32]], [8 x [2 x i32]]* %part_size32, i32 0, i64 %idxprom31
  %arrayidx34 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx33, i32 0, i64 0
  %22 = load i32, i32* %arrayidx34, align 4
  store i32 %22, i32* %step_h, align 4
  %23 = load i32, i32* %blocktype.addr, align 4
  %idxprom35 = sext i32 %23 to i64
  %24 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %part_size36 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %24, i32 0, i32 21
  %arrayidx37 = getelementptr inbounds [8 x [2 x i32]], [8 x [2 x i32]]* %part_size36, i32 0, i64 %idxprom35
  %arrayidx38 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx37, i32 0, i64 1
  %25 = load i32, i32* %arrayidx38, align 4
  store i32 %25, i32* %step_v, align 4
  %26 = load i32, i32* %list.addr, align 4
  %tobool = icmp ne i32 %26, 0
  br i1 %tobool, label %cond.true.39, label %cond.false.40

cond.true.39:                                     ; preds = %cond.end.22
  %27 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %bipred_mv1 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %27, i32 0, i32 72
  %28 = load i16******, i16******* %bipred_mv1, align 8
  br label %cond.end.41

cond.false.40:                                    ; preds = %cond.end.22
  %29 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %bipred_mv2 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %29, i32 0, i32 73
  %30 = load i16******, i16******* %bipred_mv2, align 8
  br label %cond.end.41

cond.end.41:                                      ; preds = %cond.false.40, %cond.true.39
  %cond42 = phi i16****** [ %28, %cond.true.39 ], [ %30, %cond.false.40 ]
  store i16****** %cond42, i16******* %all_mv, align 8
  %31 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pred_mv = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %31, i32 0, i32 70
  %32 = load i16******, i16******* %pred_mv, align 8
  store i16****** %32, i16******* %p_mv, align 8
  %33 = load i32, i32* %block8x8.addr, align 4
  %idxprom43 = sext i32 %33 to i64
  %34 = load i32, i32* %parttype, align 4
  %idxprom44 = sext i32 %34 to i64
  %arrayidx45 = getelementptr inbounds [5 x [4 x i32]], [5 x [4 x i32]]* @BPredPartitionCost.by0, i32 0, i64 %idxprom44
  %arrayidx46 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx45, i32 0, i64 %idxprom43
  %35 = load i32, i32* %arrayidx46, align 4
  store i32 %35, i32* %v, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc.167, %cond.end.41
  %36 = load i32, i32* %v, align 4
  %37 = load i32, i32* %block8x8.addr, align 4
  %idxprom47 = sext i32 %37 to i64
  %38 = load i32, i32* %parttype, align 4
  %idxprom48 = sext i32 %38 to i64
  %arrayidx49 = getelementptr inbounds [5 x [4 x i32]], [5 x [4 x i32]]* @BPredPartitionCost.by0, i32 0, i64 %idxprom48
  %arrayidx50 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx49, i32 0, i64 %idxprom47
  %39 = load i32, i32* %arrayidx50, align 4
  %40 = load i32, i32* %step_v0, align 4
  %add = add nsw i32 %39, %40
  %cmp51 = icmp slt i32 %36, %add
  br i1 %cmp51, label %for.body, label %for.end.169

for.body:                                         ; preds = %for.cond
  %41 = load i32, i32* %block8x8.addr, align 4
  %idxprom52 = sext i32 %41 to i64
  %42 = load i32, i32* %parttype, align 4
  %idxprom53 = sext i32 %42 to i64
  %arrayidx54 = getelementptr inbounds [5 x [4 x i32]], [5 x [4 x i32]]* @BPredPartitionCost.bx0, i32 0, i64 %idxprom53
  %arrayidx55 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx54, i32 0, i64 %idxprom52
  %43 = load i32, i32* %arrayidx55, align 4
  store i32 %43, i32* %h, align 4
  br label %for.cond.56

for.cond.56:                                      ; preds = %for.inc, %for.body
  %44 = load i32, i32* %h, align 4
  %45 = load i32, i32* %block8x8.addr, align 4
  %idxprom57 = sext i32 %45 to i64
  %46 = load i32, i32* %parttype, align 4
  %idxprom58 = sext i32 %46 to i64
  %arrayidx59 = getelementptr inbounds [5 x [4 x i32]], [5 x [4 x i32]]* @BPredPartitionCost.bx0, i32 0, i64 %idxprom58
  %arrayidx60 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx59, i32 0, i64 %idxprom57
  %47 = load i32, i32* %arrayidx60, align 4
  %48 = load i32, i32* %step_h0, align 4
  %add61 = add nsw i32 %47, %48
  %cmp62 = icmp slt i32 %44, %add61
  br i1 %cmp62, label %for.body.63, label %for.end

for.body.63:                                      ; preds = %for.cond.56
  %49 = load i32, i32* %blocktype.addr, align 4
  %idxprom64 = sext i32 %49 to i64
  %50 = load i16, i16* %fw_ref.addr, align 2
  %idxprom65 = sext i16 %50 to i64
  %51 = load i32, i32* %v, align 4
  %idxprom66 = sext i32 %51 to i64
  %52 = load i32, i32* %h, align 4
  %idxprom67 = sext i32 %52 to i64
  %53 = load i16******, i16******* %all_mv, align 8
  %arrayidx68 = getelementptr inbounds i16*****, i16****** %53, i64 %idxprom67
  %54 = load i16*****, i16****** %arrayidx68, align 8
  %arrayidx69 = getelementptr inbounds i16****, i16***** %54, i64 %idxprom66
  %55 = load i16****, i16***** %arrayidx69, align 8
  %arrayidx70 = getelementptr inbounds i16***, i16**** %55, i64 0
  %56 = load i16***, i16**** %arrayidx70, align 8
  %arrayidx71 = getelementptr inbounds i16**, i16*** %56, i64 %idxprom65
  %57 = load i16**, i16*** %arrayidx71, align 8
  %arrayidx72 = getelementptr inbounds i16*, i16** %57, i64 %idxprom64
  %58 = load i16*, i16** %arrayidx72, align 8
  %arrayidx73 = getelementptr inbounds i16, i16* %58, i64 0
  %59 = load i16, i16* %arrayidx73, align 2
  %conv = sext i16 %59 to i32
  %60 = load i32, i32* %blocktype.addr, align 4
  %idxprom74 = sext i32 %60 to i64
  %61 = load i16, i16* %fw_ref.addr, align 2
  %idxprom75 = sext i16 %61 to i64
  %62 = load i32, i32* %v, align 4
  %idxprom76 = sext i32 %62 to i64
  %63 = load i32, i32* %h, align 4
  %idxprom77 = sext i32 %63 to i64
  %64 = load i16******, i16******* %p_mv, align 8
  %arrayidx78 = getelementptr inbounds i16*****, i16****** %64, i64 %idxprom77
  %65 = load i16*****, i16****** %arrayidx78, align 8
  %arrayidx79 = getelementptr inbounds i16****, i16***** %65, i64 %idxprom76
  %66 = load i16****, i16***** %arrayidx79, align 8
  %arrayidx80 = getelementptr inbounds i16***, i16**** %66, i64 0
  %67 = load i16***, i16**** %arrayidx80, align 8
  %arrayidx81 = getelementptr inbounds i16**, i16*** %67, i64 %idxprom75
  %68 = load i16**, i16*** %arrayidx81, align 8
  %arrayidx82 = getelementptr inbounds i16*, i16** %68, i64 %idxprom74
  %69 = load i16*, i16** %arrayidx82, align 8
  %arrayidx83 = getelementptr inbounds i16, i16* %69, i64 0
  %70 = load i16, i16* %arrayidx83, align 2
  %conv84 = sext i16 %70 to i32
  %sub = sub nsw i32 %conv, %conv84
  %idxprom85 = sext i32 %sub to i64
  %71 = load i32*, i32** @mvbits, align 8
  %arrayidx86 = getelementptr inbounds i32, i32* %71, i64 %idxprom85
  %72 = load i32, i32* %arrayidx86, align 4
  %73 = load i32, i32* %mvd_bits, align 4
  %add87 = add nsw i32 %73, %72
  store i32 %add87, i32* %mvd_bits, align 4
  %74 = load i32, i32* %blocktype.addr, align 4
  %idxprom88 = sext i32 %74 to i64
  %75 = load i16, i16* %fw_ref.addr, align 2
  %idxprom89 = sext i16 %75 to i64
  %76 = load i32, i32* %v, align 4
  %idxprom90 = sext i32 %76 to i64
  %77 = load i32, i32* %h, align 4
  %idxprom91 = sext i32 %77 to i64
  %78 = load i16******, i16******* %all_mv, align 8
  %arrayidx92 = getelementptr inbounds i16*****, i16****** %78, i64 %idxprom91
  %79 = load i16*****, i16****** %arrayidx92, align 8
  %arrayidx93 = getelementptr inbounds i16****, i16***** %79, i64 %idxprom90
  %80 = load i16****, i16***** %arrayidx93, align 8
  %arrayidx94 = getelementptr inbounds i16***, i16**** %80, i64 0
  %81 = load i16***, i16**** %arrayidx94, align 8
  %arrayidx95 = getelementptr inbounds i16**, i16*** %81, i64 %idxprom89
  %82 = load i16**, i16*** %arrayidx95, align 8
  %arrayidx96 = getelementptr inbounds i16*, i16** %82, i64 %idxprom88
  %83 = load i16*, i16** %arrayidx96, align 8
  %arrayidx97 = getelementptr inbounds i16, i16* %83, i64 1
  %84 = load i16, i16* %arrayidx97, align 2
  %conv98 = sext i16 %84 to i32
  %85 = load i32, i32* %blocktype.addr, align 4
  %idxprom99 = sext i32 %85 to i64
  %86 = load i16, i16* %fw_ref.addr, align 2
  %idxprom100 = sext i16 %86 to i64
  %87 = load i32, i32* %v, align 4
  %idxprom101 = sext i32 %87 to i64
  %88 = load i32, i32* %h, align 4
  %idxprom102 = sext i32 %88 to i64
  %89 = load i16******, i16******* %p_mv, align 8
  %arrayidx103 = getelementptr inbounds i16*****, i16****** %89, i64 %idxprom102
  %90 = load i16*****, i16****** %arrayidx103, align 8
  %arrayidx104 = getelementptr inbounds i16****, i16***** %90, i64 %idxprom101
  %91 = load i16****, i16***** %arrayidx104, align 8
  %arrayidx105 = getelementptr inbounds i16***, i16**** %91, i64 0
  %92 = load i16***, i16**** %arrayidx105, align 8
  %arrayidx106 = getelementptr inbounds i16**, i16*** %92, i64 %idxprom100
  %93 = load i16**, i16*** %arrayidx106, align 8
  %arrayidx107 = getelementptr inbounds i16*, i16** %93, i64 %idxprom99
  %94 = load i16*, i16** %arrayidx107, align 8
  %arrayidx108 = getelementptr inbounds i16, i16* %94, i64 1
  %95 = load i16, i16* %arrayidx108, align 2
  %conv109 = sext i16 %95 to i32
  %sub110 = sub nsw i32 %conv98, %conv109
  %idxprom111 = sext i32 %sub110 to i64
  %96 = load i32*, i32** @mvbits, align 8
  %arrayidx112 = getelementptr inbounds i32, i32* %96, i64 %idxprom111
  %97 = load i32, i32* %arrayidx112, align 4
  %98 = load i32, i32* %mvd_bits, align 4
  %add113 = add nsw i32 %98, %97
  store i32 %add113, i32* %mvd_bits, align 4
  %99 = load i32, i32* %blocktype.addr, align 4
  %idxprom114 = sext i32 %99 to i64
  %100 = load i16, i16* %bw_ref.addr, align 2
  %idxprom115 = sext i16 %100 to i64
  %101 = load i32, i32* %v, align 4
  %idxprom116 = sext i32 %101 to i64
  %102 = load i32, i32* %h, align 4
  %idxprom117 = sext i32 %102 to i64
  %103 = load i16******, i16******* %all_mv, align 8
  %arrayidx118 = getelementptr inbounds i16*****, i16****** %103, i64 %idxprom117
  %104 = load i16*****, i16****** %arrayidx118, align 8
  %arrayidx119 = getelementptr inbounds i16****, i16***** %104, i64 %idxprom116
  %105 = load i16****, i16***** %arrayidx119, align 8
  %arrayidx120 = getelementptr inbounds i16***, i16**** %105, i64 1
  %106 = load i16***, i16**** %arrayidx120, align 8
  %arrayidx121 = getelementptr inbounds i16**, i16*** %106, i64 %idxprom115
  %107 = load i16**, i16*** %arrayidx121, align 8
  %arrayidx122 = getelementptr inbounds i16*, i16** %107, i64 %idxprom114
  %108 = load i16*, i16** %arrayidx122, align 8
  %arrayidx123 = getelementptr inbounds i16, i16* %108, i64 0
  %109 = load i16, i16* %arrayidx123, align 2
  %conv124 = sext i16 %109 to i32
  %110 = load i32, i32* %blocktype.addr, align 4
  %idxprom125 = sext i32 %110 to i64
  %111 = load i16, i16* %bw_ref.addr, align 2
  %idxprom126 = sext i16 %111 to i64
  %112 = load i32, i32* %v, align 4
  %idxprom127 = sext i32 %112 to i64
  %113 = load i32, i32* %h, align 4
  %idxprom128 = sext i32 %113 to i64
  %114 = load i16******, i16******* %p_mv, align 8
  %arrayidx129 = getelementptr inbounds i16*****, i16****** %114, i64 %idxprom128
  %115 = load i16*****, i16****** %arrayidx129, align 8
  %arrayidx130 = getelementptr inbounds i16****, i16***** %115, i64 %idxprom127
  %116 = load i16****, i16***** %arrayidx130, align 8
  %arrayidx131 = getelementptr inbounds i16***, i16**** %116, i64 1
  %117 = load i16***, i16**** %arrayidx131, align 8
  %arrayidx132 = getelementptr inbounds i16**, i16*** %117, i64 %idxprom126
  %118 = load i16**, i16*** %arrayidx132, align 8
  %arrayidx133 = getelementptr inbounds i16*, i16** %118, i64 %idxprom125
  %119 = load i16*, i16** %arrayidx133, align 8
  %arrayidx134 = getelementptr inbounds i16, i16* %119, i64 0
  %120 = load i16, i16* %arrayidx134, align 2
  %conv135 = sext i16 %120 to i32
  %sub136 = sub nsw i32 %conv124, %conv135
  %idxprom137 = sext i32 %sub136 to i64
  %121 = load i32*, i32** @mvbits, align 8
  %arrayidx138 = getelementptr inbounds i32, i32* %121, i64 %idxprom137
  %122 = load i32, i32* %arrayidx138, align 4
  %123 = load i32, i32* %mvd_bits, align 4
  %add139 = add nsw i32 %123, %122
  store i32 %add139, i32* %mvd_bits, align 4
  %124 = load i32, i32* %blocktype.addr, align 4
  %idxprom140 = sext i32 %124 to i64
  %125 = load i16, i16* %bw_ref.addr, align 2
  %idxprom141 = sext i16 %125 to i64
  %126 = load i32, i32* %v, align 4
  %idxprom142 = sext i32 %126 to i64
  %127 = load i32, i32* %h, align 4
  %idxprom143 = sext i32 %127 to i64
  %128 = load i16******, i16******* %all_mv, align 8
  %arrayidx144 = getelementptr inbounds i16*****, i16****** %128, i64 %idxprom143
  %129 = load i16*****, i16****** %arrayidx144, align 8
  %arrayidx145 = getelementptr inbounds i16****, i16***** %129, i64 %idxprom142
  %130 = load i16****, i16***** %arrayidx145, align 8
  %arrayidx146 = getelementptr inbounds i16***, i16**** %130, i64 1
  %131 = load i16***, i16**** %arrayidx146, align 8
  %arrayidx147 = getelementptr inbounds i16**, i16*** %131, i64 %idxprom141
  %132 = load i16**, i16*** %arrayidx147, align 8
  %arrayidx148 = getelementptr inbounds i16*, i16** %132, i64 %idxprom140
  %133 = load i16*, i16** %arrayidx148, align 8
  %arrayidx149 = getelementptr inbounds i16, i16* %133, i64 1
  %134 = load i16, i16* %arrayidx149, align 2
  %conv150 = sext i16 %134 to i32
  %135 = load i32, i32* %blocktype.addr, align 4
  %idxprom151 = sext i32 %135 to i64
  %136 = load i16, i16* %bw_ref.addr, align 2
  %idxprom152 = sext i16 %136 to i64
  %137 = load i32, i32* %v, align 4
  %idxprom153 = sext i32 %137 to i64
  %138 = load i32, i32* %h, align 4
  %idxprom154 = sext i32 %138 to i64
  %139 = load i16******, i16******* %p_mv, align 8
  %arrayidx155 = getelementptr inbounds i16*****, i16****** %139, i64 %idxprom154
  %140 = load i16*****, i16****** %arrayidx155, align 8
  %arrayidx156 = getelementptr inbounds i16****, i16***** %140, i64 %idxprom153
  %141 = load i16****, i16***** %arrayidx156, align 8
  %arrayidx157 = getelementptr inbounds i16***, i16**** %141, i64 1
  %142 = load i16***, i16**** %arrayidx157, align 8
  %arrayidx158 = getelementptr inbounds i16**, i16*** %142, i64 %idxprom152
  %143 = load i16**, i16*** %arrayidx158, align 8
  %arrayidx159 = getelementptr inbounds i16*, i16** %143, i64 %idxprom151
  %144 = load i16*, i16** %arrayidx159, align 8
  %arrayidx160 = getelementptr inbounds i16, i16* %144, i64 1
  %145 = load i16, i16* %arrayidx160, align 2
  %conv161 = sext i16 %145 to i32
  %sub162 = sub nsw i32 %conv150, %conv161
  %idxprom163 = sext i32 %sub162 to i64
  %146 = load i32*, i32** @mvbits, align 8
  %arrayidx164 = getelementptr inbounds i32, i32* %146, i64 %idxprom163
  %147 = load i32, i32* %arrayidx164, align 4
  %148 = load i32, i32* %mvd_bits, align 4
  %add165 = add nsw i32 %148, %147
  store i32 %add165, i32* %mvd_bits, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body.63
  %149 = load i32, i32* %step_h, align 4
  %150 = load i32, i32* %h, align 4
  %add166 = add nsw i32 %150, %149
  store i32 %add166, i32* %h, align 4
  br label %for.cond.56

for.end:                                          ; preds = %for.cond.56
  br label %for.inc.167

for.inc.167:                                      ; preds = %for.end
  %151 = load i32, i32* %step_v, align 4
  %152 = load i32, i32* %v, align 4
  %add168 = add nsw i32 %152, %151
  store i32 %add168, i32* %v, align 4
  br label %for.cond

for.end.169:                                      ; preds = %for.cond
  %153 = load i32, i32* %lambda_factor.addr, align 4
  %154 = load i32, i32* %mvd_bits, align 4
  %mul = mul nsw i32 %153, %154
  %shr = ashr i32 %mul, 16
  store i32 %shr, i32* %mcost, align 4
  store i32 0, i32* %byy, align 4
  %155 = load i32, i32* %block8x8.addr, align 4
  %idxprom170 = sext i32 %155 to i64
  %156 = load i32, i32* %parttype, align 4
  %idxprom171 = sext i32 %156 to i64
  %arrayidx172 = getelementptr inbounds [5 x [4 x i32]], [5 x [4 x i32]]* @BPredPartitionCost.by0, i32 0, i64 %idxprom171
  %arrayidx173 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx172, i32 0, i64 %idxprom170
  %157 = load i32, i32* %arrayidx173, align 4
  store i32 %157, i32* %v, align 4
  br label %for.cond.174

for.cond.174:                                     ; preds = %for.inc.244, %for.end.169
  %158 = load i32, i32* %v, align 4
  %159 = load i32, i32* %block8x8.addr, align 4
  %idxprom175 = sext i32 %159 to i64
  %160 = load i32, i32* %parttype, align 4
  %idxprom176 = sext i32 %160 to i64
  %arrayidx177 = getelementptr inbounds [5 x [4 x i32]], [5 x [4 x i32]]* @BPredPartitionCost.by0, i32 0, i64 %idxprom176
  %arrayidx178 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx177, i32 0, i64 %idxprom175
  %161 = load i32, i32* %arrayidx178, align 4
  %162 = load i32, i32* %step_v0, align 4
  %add179 = add nsw i32 %161, %162
  %cmp180 = icmp slt i32 %158, %add179
  br i1 %cmp180, label %for.body.182, label %for.end.247

for.body.182:                                     ; preds = %for.cond.174
  %163 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %opix_y = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %163, i32 0, i32 38
  %164 = load i32, i32* %opix_y, align 4
  %165 = load i32, i32* %v, align 4
  %shl = shl i32 %165, 2
  store i32 %shl, i32* %block_y, align 4
  %add183 = add nsw i32 %164, %shl
  store i32 %add183, i32* %pic_pix_y, align 4
  store i32 0, i32* %bxx, align 4
  %166 = load i32, i32* %block8x8.addr, align 4
  %idxprom184 = sext i32 %166 to i64
  %167 = load i32, i32* %parttype, align 4
  %idxprom185 = sext i32 %167 to i64
  %arrayidx186 = getelementptr inbounds [5 x [4 x i32]], [5 x [4 x i32]]* @BPredPartitionCost.bx0, i32 0, i64 %idxprom185
  %arrayidx187 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx186, i32 0, i64 %idxprom184
  %168 = load i32, i32* %arrayidx187, align 4
  store i32 %168, i32* %h, align 4
  br label %for.cond.188

for.cond.188:                                     ; preds = %for.inc.240, %for.body.182
  %169 = load i32, i32* %h, align 4
  %170 = load i32, i32* %block8x8.addr, align 4
  %idxprom189 = sext i32 %170 to i64
  %171 = load i32, i32* %parttype, align 4
  %idxprom190 = sext i32 %171 to i64
  %arrayidx191 = getelementptr inbounds [5 x [4 x i32]], [5 x [4 x i32]]* @BPredPartitionCost.bx0, i32 0, i64 %idxprom190
  %arrayidx192 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx191, i32 0, i64 %idxprom189
  %172 = load i32, i32* %arrayidx192, align 4
  %173 = load i32, i32* %step_h0, align 4
  %add193 = add nsw i32 %172, %173
  %cmp194 = icmp slt i32 %169, %add193
  br i1 %cmp194, label %for.body.196, label %for.end.243

for.body.196:                                     ; preds = %for.cond.188
  %174 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %opix_x = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %174, i32 0, i32 37
  %175 = load i32, i32* %opix_x, align 4
  %176 = load i32, i32* %h, align 4
  %shl197 = shl i32 %176, 2
  store i32 %shl197, i32* %block_x, align 4
  %add198 = add nsw i32 %175, %shl197
  store i32 %add198, i32* %pic_pix_x, align 4
  %177 = load i32, i32* %block_x, align 4
  %178 = load i32, i32* %block_y, align 4
  %179 = load i32, i32* %blocktype.addr, align 4
  %180 = load i32, i32* %blocktype.addr, align 4
  %181 = load i16, i16* %fw_ref.addr, align 2
  %182 = load i16, i16* %bw_ref.addr, align 2
  %183 = load i32, i32* %list.addr, align 4
  call void @LumaPrediction4x4Bi(i32 %177, i32 %178, i32 2, i32 %179, i32 %180, i16 signext %181, i16 signext %182, i32 %183)
  store i32 0, i32* %j, align 4
  store i32 0, i32* %k, align 4
  br label %for.cond.199

for.cond.199:                                     ; preds = %for.inc.233, %for.body.196
  %184 = load i32, i32* %j, align 4
  %cmp200 = icmp slt i32 %184, 4
  br i1 %cmp200, label %for.body.202, label %for.end.235

for.body.202:                                     ; preds = %for.cond.199
  store i32 0, i32* %i, align 4
  br label %for.cond.203

for.cond.203:                                     ; preds = %for.inc.230, %for.body.202
  %185 = load i32, i32* %i, align 4
  %cmp204 = icmp slt i32 %185, 4
  br i1 %cmp204, label %for.body.206, label %for.end.232

for.body.206:                                     ; preds = %for.cond.203
  %186 = load i32, i32* %pic_pix_x, align 4
  %187 = load i32, i32* %i, align 4
  %add207 = add nsw i32 %186, %187
  %idxprom208 = sext i32 %add207 to i64
  %188 = load i32, i32* %pic_pix_y, align 4
  %189 = load i32, i32* %j, align 4
  %add209 = add nsw i32 %188, %189
  %idxprom210 = sext i32 %add209 to i64
  %190 = load i16**, i16*** @imgY_org, align 8
  %arrayidx211 = getelementptr inbounds i16*, i16** %190, i64 %idxprom210
  %191 = load i16*, i16** %arrayidx211, align 8
  %arrayidx212 = getelementptr inbounds i16, i16* %191, i64 %idxprom208
  %192 = load i16, i16* %arrayidx212, align 2
  %conv213 = zext i16 %192 to i32
  %193 = load i32, i32* %j, align 4
  %194 = load i32, i32* %block_y, align 4
  %add214 = add nsw i32 %193, %194
  %idxprom215 = sext i32 %add214 to i64
  %195 = load i32, i32* %i, align 4
  %196 = load i32, i32* %block_x, align 4
  %add216 = add nsw i32 %195, %196
  %idxprom217 = sext i32 %add216 to i64
  %197 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mpr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %197, i32 0, i32 45
  %arrayidx218 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %mpr, i32 0, i64 %idxprom217
  %arrayidx219 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx218, i32 0, i64 %idxprom215
  %198 = load i16, i16* %arrayidx219, align 2
  %conv220 = zext i16 %198 to i32
  %sub221 = sub nsw i32 %conv213, %conv220
  %199 = load i32, i32* %bxx, align 4
  %200 = load i32, i32* %i, align 4
  %add222 = add nsw i32 %199, %200
  %idxprom223 = sext i32 %add222 to i64
  %201 = load i32, i32* %byy, align 4
  %202 = load i32, i32* %j, align 4
  %add224 = add nsw i32 %201, %202
  %idxprom225 = sext i32 %add224 to i64
  %arrayidx226 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %curr_blk, i32 0, i64 %idxprom225
  %arrayidx227 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx226, i32 0, i64 %idxprom223
  store i32 %sub221, i32* %arrayidx227, align 4
  %203 = load i32, i32* %k, align 4
  %idxprom228 = sext i32 %203 to i64
  %arrayidx229 = getelementptr inbounds [64 x i32], [64 x i32]* %diff, i32 0, i64 %idxprom228
  store i32 %sub221, i32* %arrayidx229, align 4
  br label %for.inc.230

for.inc.230:                                      ; preds = %for.body.206
  %204 = load i32, i32* %i, align 4
  %inc = add nsw i32 %204, 1
  store i32 %inc, i32* %i, align 4
  %205 = load i32, i32* %k, align 4
  %inc231 = add nsw i32 %205, 1
  store i32 %inc231, i32* %k, align 4
  br label %for.cond.203

for.end.232:                                      ; preds = %for.cond.203
  br label %for.inc.233

for.inc.233:                                      ; preds = %for.end.232
  %206 = load i32, i32* %j, align 4
  %inc234 = add nsw i32 %206, 1
  store i32 %inc234, i32* %j, align 4
  br label %for.cond.199

for.end.235:                                      ; preds = %for.cond.199
  %207 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %AllowTransform8x8 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %207, i32 0, i32 123
  %208 = load i32, i32* %AllowTransform8x8, align 4
  %tobool236 = icmp ne i32 %208, 0
  br i1 %tobool236, label %lor.lhs.false, label %if.then

lor.lhs.false:                                    ; preds = %for.end.235
  %209 = load i32, i32* %blocktype.addr, align 4
  %cmp237 = icmp sgt i32 %209, 4
  br i1 %cmp237, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %for.end.235
  %arraydecay = getelementptr inbounds [64 x i32], [64 x i32]* %diff, i32 0, i32 0
  %210 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamard = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %210, i32 0, i32 6
  %211 = load i32, i32* %hadamard, align 4
  %call = call i32 @SATD(i32* %arraydecay, i32 %211)
  %212 = load i32, i32* %mcost, align 4
  %add239 = add nsw i32 %212, %call
  store i32 %add239, i32* %mcost, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %lor.lhs.false
  br label %for.inc.240

for.inc.240:                                      ; preds = %if.end
  %213 = load i32, i32* %bxx, align 4
  %add241 = add nsw i32 %213, 4
  store i32 %add241, i32* %bxx, align 4
  %214 = load i32, i32* %h, align 4
  %inc242 = add nsw i32 %214, 1
  store i32 %inc242, i32* %h, align 4
  br label %for.cond.188

for.end.243:                                      ; preds = %for.cond.188
  br label %for.inc.244

for.inc.244:                                      ; preds = %for.end.243
  %215 = load i32, i32* %byy, align 4
  %add245 = add nsw i32 %215, 4
  store i32 %add245, i32* %byy, align 4
  %216 = load i32, i32* %v, align 4
  %inc246 = add nsw i32 %216, 1
  store i32 %inc246, i32* %v, align 4
  br label %for.cond.174

for.end.247:                                      ; preds = %for.cond.174
  %217 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %AllowTransform8x8248 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %217, i32 0, i32 123
  %218 = load i32, i32* %AllowTransform8x8248, align 4
  %tobool249 = icmp ne i32 %218, 0
  br i1 %tobool249, label %land.lhs.true, label %if.end.302

land.lhs.true:                                    ; preds = %for.end.247
  %219 = load i32, i32* %blocktype.addr, align 4
  %cmp250 = icmp sle i32 %219, 4
  br i1 %cmp250, label %if.then.252, label %if.end.302

if.then.252:                                      ; preds = %land.lhs.true
  store i32 0, i32* %byy, align 4
  br label %for.cond.253

for.cond.253:                                     ; preds = %for.inc.299, %if.then.252
  %220 = load i32, i32* %byy, align 4
  %221 = load i32, i32* %parttype, align 4
  %idxprom254 = sext i32 %221 to i64
  %222 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %blc_size255 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %222, i32 0, i32 20
  %arrayidx256 = getelementptr inbounds [8 x [2 x i32]], [8 x [2 x i32]]* %blc_size255, i32 0, i64 %idxprom254
  %arrayidx257 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx256, i32 0, i64 1
  %223 = load i32, i32* %arrayidx257, align 4
  %cmp258 = icmp slt i32 %220, %223
  br i1 %cmp258, label %for.body.260, label %for.end.301

for.body.260:                                     ; preds = %for.cond.253
  store i32 0, i32* %bxx, align 4
  br label %for.cond.261

for.cond.261:                                     ; preds = %for.inc.296, %for.body.260
  %224 = load i32, i32* %bxx, align 4
  %225 = load i32, i32* %parttype, align 4
  %idxprom262 = sext i32 %225 to i64
  %226 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %blc_size263 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %226, i32 0, i32 20
  %arrayidx264 = getelementptr inbounds [8 x [2 x i32]], [8 x [2 x i32]]* %blc_size263, i32 0, i64 %idxprom262
  %arrayidx265 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx264, i32 0, i64 0
  %227 = load i32, i32* %arrayidx265, align 4
  %cmp266 = icmp slt i32 %224, %227
  br i1 %cmp266, label %for.body.268, label %for.end.298

for.body.268:                                     ; preds = %for.cond.261
  store i32 0, i32* %k, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond.269

for.cond.269:                                     ; preds = %for.inc.289, %for.body.268
  %228 = load i32, i32* %i, align 4
  %cmp270 = icmp slt i32 %228, 8
  br i1 %cmp270, label %for.body.272, label %for.end.291

for.body.272:                                     ; preds = %for.cond.269
  store i32 0, i32* %j, align 4
  br label %for.cond.273

for.cond.273:                                     ; preds = %for.inc.286, %for.body.272
  %229 = load i32, i32* %j, align 4
  %cmp274 = icmp slt i32 %229, 8
  br i1 %cmp274, label %for.body.276, label %for.end.288

for.body.276:                                     ; preds = %for.cond.273
  %230 = load i32, i32* %j, align 4
  %231 = load i32, i32* %bxx, align 4
  %add277 = add nsw i32 %230, %231
  %idxprom278 = sext i32 %add277 to i64
  %232 = load i32, i32* %i, align 4
  %233 = load i32, i32* %byy, align 4
  %add279 = add nsw i32 %232, %233
  %idxprom280 = sext i32 %add279 to i64
  %arrayidx281 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %curr_blk, i32 0, i64 %idxprom280
  %arrayidx282 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx281, i32 0, i64 %idxprom278
  %234 = load i32, i32* %arrayidx282, align 4
  %235 = load i32, i32* %k, align 4
  %inc283 = add nsw i32 %235, 1
  store i32 %inc283, i32* %k, align 4
  %idxprom284 = sext i32 %235 to i64
  %arrayidx285 = getelementptr inbounds [64 x i32], [64 x i32]* %diff, i32 0, i64 %idxprom284
  store i32 %234, i32* %arrayidx285, align 4
  br label %for.inc.286

for.inc.286:                                      ; preds = %for.body.276
  %236 = load i32, i32* %j, align 4
  %inc287 = add nsw i32 %236, 1
  store i32 %inc287, i32* %j, align 4
  br label %for.cond.273

for.end.288:                                      ; preds = %for.cond.273
  br label %for.inc.289

for.inc.289:                                      ; preds = %for.end.288
  %237 = load i32, i32* %i, align 4
  %inc290 = add nsw i32 %237, 1
  store i32 %inc290, i32* %i, align 4
  br label %for.cond.269

for.end.291:                                      ; preds = %for.cond.269
  %arraydecay292 = getelementptr inbounds [64 x i32], [64 x i32]* %diff, i32 0, i32 0
  %238 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamard293 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %238, i32 0, i32 6
  %239 = load i32, i32* %hadamard293, align 4
  %call294 = call i32 @SATD8X8(i32* %arraydecay292, i32 %239)
  %240 = load i32, i32* %mcost, align 4
  %add295 = add nsw i32 %240, %call294
  store i32 %add295, i32* %mcost, align 4
  br label %for.inc.296

for.inc.296:                                      ; preds = %for.end.291
  %241 = load i32, i32* %bsx, align 4
  %242 = load i32, i32* %bxx, align 4
  %add297 = add nsw i32 %242, %241
  store i32 %add297, i32* %bxx, align 4
  br label %for.cond.261

for.end.298:                                      ; preds = %for.cond.261
  br label %for.inc.299

for.inc.299:                                      ; preds = %for.end.298
  %243 = load i32, i32* %bsy, align 4
  %244 = load i32, i32* %byy, align 4
  %add300 = add nsw i32 %244, %243
  store i32 %add300, i32* %byy, align 4
  br label %for.cond.253

for.end.301:                                      ; preds = %for.cond.253
  br label %if.end.302

if.end.302:                                       ; preds = %for.end.301, %land.lhs.true, %for.end.247
  %245 = load i32, i32* %mcost, align 4
  ret i32 %245
}

declare void @LumaPrediction4x4Bi(i32, i32, i32, i32, i32, i16 signext, i16 signext, i32) #2

; Function Attrs: nounwind uwtable
define i32 @BlockMotionSearch(i16 signext %ref, i32 %list, i32 %mb_x, i32 %mb_y, i32 %blocktype, i32 %search_range, double %lambda) #0 {
entry:
  %ref.addr = alloca i16, align 2
  %list.addr = alloca i32, align 4
  %mb_x.addr = alloca i32, align 4
  %mb_y.addr = alloca i32, align 4
  %blocktype.addr = alloca i32, align 4
  %search_range.addr = alloca i32, align 4
  %lambda.addr = alloca double, align 8
  %pred_mv_x = alloca i16, align 2
  %pred_mv_y = alloca i16, align 2
  %mv_x = alloca i16, align 2
  %mv_y = alloca i16, align 2
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %max_value = alloca i32, align 4
  %min_mcost = alloca i32, align 4
  %block_x = alloca i32, align 4
  %block_y = alloca i32, align 4
  %bsx = alloca i32, align 4
  %bsy = alloca i32, align 4
  %pic_pix_x = alloca i32, align 4
  %pic_pix_y = alloca i32, align 4
  %pred_mv = alloca i16*, align 8
  %mv_array = alloca i16***, align 8
  %all_mv = alloca i16******, align 8
  %tstruct1 = alloca %struct.timeb, align 8
  %tstruct2 = alloca %struct.timeb, align 8
  %me_tmp_time = alloca i32, align 4
  %N_Bframe = alloca i32, align 4
  %n_Bframe = alloca i32, align 4
  %cost = alloca i32, align 4
  %h4x4blkno = alloca i32, align 4
  %v4x4blkno = alloca i32, align 4
  %bipred_mv = alloca i16******, align 8
  %min_mcostbi = alloca i32, align 4
  %bimv_x = alloca i16, align 2
  %bimv_y = alloca i16, align 2
  %tempmv_x = alloca i16, align 2
  %tempmv_y = alloca i16, align 2
  %pred_mv_x1 = alloca i16, align 2
  %pred_mv_y1 = alloca i16, align 2
  %pred_mv_x2 = alloca i16, align 2
  %pred_mv_y2 = alloca i16, align 2
  %iterlist = alloca i16, align 2
  %pred_mv_bi = alloca [2 x i16], align 2
  store i16 %ref, i16* %ref.addr, align 2
  store i32 %list, i32* %list.addr, align 4
  store i32 %mb_x, i32* %mb_x.addr, align 4
  store i32 %mb_y, i32* %mb_y.addr, align 4
  store i32 %blocktype, i32* %blocktype.addr, align 4
  store i32 %search_range, i32* %search_range.addr, align 4
  store double %lambda, double* %lambda.addr, align 8
  store i32 2147483647, i32* %max_value, align 4
  %0 = load i32, i32* %max_value, align 4
  store i32 %0, i32* %min_mcost, align 4
  %1 = load i32, i32* %mb_x.addr, align 4
  %shr = ashr i32 %1, 2
  store i32 %shr, i32* %block_x, align 4
  %2 = load i32, i32* %mb_y.addr, align 4
  %shr1 = ashr i32 %2, 2
  store i32 %shr1, i32* %block_y, align 4
  %3 = load i32, i32* %blocktype.addr, align 4
  %idxprom = sext i32 %3 to i64
  %4 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %blc_size = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %4, i32 0, i32 20
  %arrayidx = getelementptr inbounds [8 x [2 x i32]], [8 x [2 x i32]]* %blc_size, i32 0, i64 %idxprom
  %arrayidx2 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx, i32 0, i64 0
  %5 = load i32, i32* %arrayidx2, align 4
  store i32 %5, i32* %bsx, align 4
  %6 = load i32, i32* %blocktype.addr, align 4
  %idxprom3 = sext i32 %6 to i64
  %7 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %blc_size4 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %7, i32 0, i32 20
  %arrayidx5 = getelementptr inbounds [8 x [2 x i32]], [8 x [2 x i32]]* %blc_size4, i32 0, i64 %idxprom3
  %arrayidx6 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx5, i32 0, i64 1
  %8 = load i32, i32* %arrayidx6, align 4
  store i32 %8, i32* %bsy, align 4
  %9 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %opix_x = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %9, i32 0, i32 37
  %10 = load i32, i32* %opix_x, align 4
  %11 = load i32, i32* %mb_x.addr, align 4
  %add = add nsw i32 %10, %11
  store i32 %add, i32* %pic_pix_x, align 4
  %12 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %opix_y = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %12, i32 0, i32 38
  %13 = load i32, i32* %opix_y, align 4
  %14 = load i32, i32* %mb_y.addr, align 4
  %add7 = add nsw i32 %13, %14
  store i32 %add7, i32* %pic_pix_y, align 4
  %15 = load i32, i32* %list.addr, align 4
  %idxprom8 = sext i32 %15 to i64
  %16 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %mv = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %16, i32 0, i32 35
  %17 = load i16****, i16***** %mv, align 8
  %arrayidx9 = getelementptr inbounds i16***, i16**** %17, i64 %idxprom8
  %18 = load i16***, i16**** %arrayidx9, align 8
  store i16*** %18, i16**** %mv_array, align 8
  %19 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %all_mv10 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %19, i32 0, i32 71
  %20 = load i16******, i16******* %all_mv10, align 8
  store i16****** %20, i16******* %all_mv, align 8
  store i32 0, i32* %N_Bframe, align 4
  store i32 0, i32* %n_Bframe, align 4
  %time = getelementptr inbounds %struct.timeb, %struct.timeb* %tstruct1, i32 0, i32 0
  store i64 0, i64* %time, align 8
  %millitm = getelementptr inbounds %struct.timeb, %struct.timeb* %tstruct1, i32 0, i32 1
  store i16 0, i16* %millitm, align 2
  %timezone = getelementptr inbounds %struct.timeb, %struct.timeb* %tstruct1, i32 0, i32 2
  store i16 0, i16* %timezone, align 2
  %dstflag = getelementptr inbounds %struct.timeb, %struct.timeb* %tstruct1, i32 0, i32 3
  store i16 0, i16* %dstflag, align 2
  %21 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %FMEnable = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %21, i32 0, i32 134
  %22 = load i32, i32* %FMEnable, align 4
  %tobool = icmp ne i32 %22, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %23 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %23, i32 0, i32 34
  %24 = load i32, i32* %successive_Bframe, align 4
  store i32 %24, i32* %N_Bframe, align 4
  %25 = load i32, i32* %N_Bframe, align 4
  %tobool11 = icmp ne i32 %25, 0
  br i1 %tobool11, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then
  %26 = load i32, i32* @Bframe_ctr, align 4
  %27 = load i32, i32* %N_Bframe, align 4
  %rem = srem i32 %26, %27
  %add12 = add nsw i32 %rem, 1
  br label %cond.end

cond.false:                                       ; preds = %if.then
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add12, %cond.true ], [ 0, %cond.false ]
  store i32 %cond, i32* %n_Bframe, align 4
  br label %if.end

if.end:                                           ; preds = %cond.end, %entry
  %28 = load i32, i32* %blocktype.addr, align 4
  %idxprom13 = sext i32 %28 to i64
  %29 = load i16, i16* %ref.addr, align 2
  %idxprom14 = sext i16 %29 to i64
  %30 = load i32, i32* %list.addr, align 4
  %idxprom15 = sext i32 %30 to i64
  %31 = load i32, i32* %block_y, align 4
  %idxprom16 = sext i32 %31 to i64
  %32 = load i32, i32* %block_x, align 4
  %idxprom17 = sext i32 %32 to i64
  %33 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pred_mv18 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %33, i32 0, i32 70
  %34 = load i16******, i16******* %pred_mv18, align 8
  %arrayidx19 = getelementptr inbounds i16*****, i16****** %34, i64 %idxprom17
  %35 = load i16*****, i16****** %arrayidx19, align 8
  %arrayidx20 = getelementptr inbounds i16****, i16***** %35, i64 %idxprom16
  %36 = load i16****, i16***** %arrayidx20, align 8
  %arrayidx21 = getelementptr inbounds i16***, i16**** %36, i64 %idxprom15
  %37 = load i16***, i16**** %arrayidx21, align 8
  %arrayidx22 = getelementptr inbounds i16**, i16*** %37, i64 %idxprom14
  %38 = load i16**, i16*** %arrayidx22, align 8
  %arrayidx23 = getelementptr inbounds i16*, i16** %38, i64 %idxprom13
  %39 = load i16*, i16** %arrayidx23, align 8
  store i16* %39, i16** %pred_mv, align 8
  store i32 0, i32* %j, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc.37, %if.end
  %40 = load i32, i32* %j, align 4
  %41 = load i32, i32* %bsy, align 4
  %cmp = icmp slt i32 %40, %41
  br i1 %cmp, label %for.body, label %for.end.39

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4
  br label %for.cond.24

for.cond.24:                                      ; preds = %for.inc, %for.body
  %42 = load i32, i32* %i, align 4
  %43 = load i32, i32* %bsx, align 4
  %cmp25 = icmp slt i32 %42, %43
  br i1 %cmp25, label %for.body.26, label %for.end

for.body.26:                                      ; preds = %for.cond.24
  %44 = load i32, i32* %pic_pix_x, align 4
  %45 = load i32, i32* %i, align 4
  %add27 = add nsw i32 %44, %45
  %idxprom28 = sext i32 %add27 to i64
  %46 = load i32, i32* %pic_pix_y, align 4
  %47 = load i32, i32* %j, align 4
  %add29 = add nsw i32 %46, %47
  %idxprom30 = sext i32 %add29 to i64
  %48 = load i16**, i16*** @imgY_org, align 8
  %arrayidx31 = getelementptr inbounds i16*, i16** %48, i64 %idxprom30
  %49 = load i16*, i16** %arrayidx31, align 8
  %arrayidx32 = getelementptr inbounds i16, i16* %49, i64 %idxprom28
  %50 = load i16, i16* %arrayidx32, align 2
  %51 = load i32, i32* %i, align 4
  %idxprom33 = sext i32 %51 to i64
  %52 = load i32, i32* %j, align 4
  %idxprom34 = sext i32 %52 to i64
  %arrayidx35 = getelementptr inbounds [16 x i16*], [16 x i16*]* @BlockMotionSearch.orig_pic, i32 0, i64 %idxprom34
  %53 = load i16*, i16** %arrayidx35, align 8
  %arrayidx36 = getelementptr inbounds i16, i16* %53, i64 %idxprom33
  store i16 %50, i16* %arrayidx36, align 2
  br label %for.inc

for.inc:                                          ; preds = %for.body.26
  %54 = load i32, i32* %i, align 4
  %inc = add nsw i32 %54, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond.24

for.end:                                          ; preds = %for.cond.24
  br label %for.inc.37

for.inc.37:                                       ; preds = %for.end
  %55 = load i32, i32* %j, align 4
  %inc38 = add nsw i32 %55, 1
  store i32 %inc38, i32* %j, align 4
  br label %for.cond

for.end.39:                                       ; preds = %for.cond
  %56 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %FMEnable40 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %56, i32 0, i32 134
  %57 = load i32, i32* %FMEnable40, align 4
  %tobool41 = icmp ne i32 %57, 0
  br i1 %tobool41, label %if.then.42, label %if.end.990

if.then.42:                                       ; preds = %for.end.39
  %58 = load i32, i32* %blocktype.addr, align 4
  %cmp43 = icmp sgt i32 %58, 6
  br i1 %cmp43, label %if.then.44, label %if.else

if.then.44:                                       ; preds = %if.then.42
  %59 = load i16, i16* %ref.addr, align 2
  %idxprom45 = sext i16 %59 to i64
  %60 = load i32, i32* %list.addr, align 4
  %idxprom46 = sext i32 %60 to i64
  %61 = load i32, i32* %block_y, align 4
  %idxprom47 = sext i32 %61 to i64
  %62 = load i32, i32* %block_x, align 4
  %idxprom48 = sext i32 %62 to i64
  %63 = load i16******, i16******* %all_mv, align 8
  %arrayidx49 = getelementptr inbounds i16*****, i16****** %63, i64 %idxprom48
  %64 = load i16*****, i16****** %arrayidx49, align 8
  %arrayidx50 = getelementptr inbounds i16****, i16***** %64, i64 %idxprom47
  %65 = load i16****, i16***** %arrayidx50, align 8
  %arrayidx51 = getelementptr inbounds i16***, i16**** %65, i64 %idxprom46
  %66 = load i16***, i16**** %arrayidx51, align 8
  %arrayidx52 = getelementptr inbounds i16**, i16*** %66, i64 %idxprom45
  %67 = load i16**, i16*** %arrayidx52, align 8
  %arrayidx53 = getelementptr inbounds i16*, i16** %67, i64 5
  %68 = load i16*, i16** %arrayidx53, align 8
  %arrayidx54 = getelementptr inbounds i16, i16* %68, i64 0
  %69 = load i16, i16* %arrayidx54, align 2
  %conv = sext i16 %69 to i32
  store i32 %conv, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @pred_MV_uplayer, i32 0, i64 0), align 4
  %70 = load i16, i16* %ref.addr, align 2
  %idxprom55 = sext i16 %70 to i64
  %71 = load i32, i32* %list.addr, align 4
  %idxprom56 = sext i32 %71 to i64
  %72 = load i32, i32* %block_y, align 4
  %idxprom57 = sext i32 %72 to i64
  %73 = load i32, i32* %block_x, align 4
  %idxprom58 = sext i32 %73 to i64
  %74 = load i16******, i16******* %all_mv, align 8
  %arrayidx59 = getelementptr inbounds i16*****, i16****** %74, i64 %idxprom58
  %75 = load i16*****, i16****** %arrayidx59, align 8
  %arrayidx60 = getelementptr inbounds i16****, i16***** %75, i64 %idxprom57
  %76 = load i16****, i16***** %arrayidx60, align 8
  %arrayidx61 = getelementptr inbounds i16***, i16**** %76, i64 %idxprom56
  %77 = load i16***, i16**** %arrayidx61, align 8
  %arrayidx62 = getelementptr inbounds i16**, i16*** %77, i64 %idxprom55
  %78 = load i16**, i16*** %arrayidx62, align 8
  %arrayidx63 = getelementptr inbounds i16*, i16** %78, i64 5
  %79 = load i16*, i16** %arrayidx63, align 8
  %arrayidx64 = getelementptr inbounds i16, i16* %79, i64 1
  %80 = load i16, i16* %arrayidx64, align 2
  %conv65 = sext i16 %80 to i32
  store i32 %conv65, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @pred_MV_uplayer, i32 0, i64 1), align 4
  %81 = load i32, i32* %list.addr, align 4
  %cmp66 = icmp eq i32 %81, 1
  br i1 %cmp66, label %cond.true.68, label %cond.false.80

cond.true.68:                                     ; preds = %if.then.44
  %82 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %82, i32 0, i32 34
  %83 = load i32, i32* %pix_y, align 4
  %shr69 = ashr i32 %83, 2
  %84 = load i32, i32* %block_y, align 4
  %add70 = add nsw i32 %shr69, %84
  %idxprom71 = sext i32 %add70 to i64
  %85 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %85, i32 0, i32 33
  %86 = load i32, i32* %pix_x, align 4
  %shr72 = ashr i32 %86, 2
  %87 = load i32, i32* %block_x, align 4
  %add73 = add nsw i32 %shr72, %87
  %idxprom74 = sext i32 %add73 to i64
  %88 = load i32*****, i32****** @all_bwmincost, align 8
  %arrayidx75 = getelementptr inbounds i32****, i32***** %88, i64 %idxprom74
  %89 = load i32****, i32***** %arrayidx75, align 8
  %arrayidx76 = getelementptr inbounds i32***, i32**** %89, i64 %idxprom71
  %90 = load i32***, i32**** %arrayidx76, align 8
  %arrayidx77 = getelementptr inbounds i32**, i32*** %90, i64 0
  %91 = load i32**, i32*** %arrayidx77, align 8
  %arrayidx78 = getelementptr inbounds i32*, i32** %91, i64 5
  %92 = load i32*, i32** %arrayidx78, align 8
  %arrayidx79 = getelementptr inbounds i32, i32* %92, i64 0
  %93 = load i32, i32* %arrayidx79, align 4
  br label %cond.end.95

cond.false.80:                                    ; preds = %if.then.44
  %94 = load i16, i16* %ref.addr, align 2
  %idxprom81 = sext i16 %94 to i64
  %95 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y82 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %95, i32 0, i32 34
  %96 = load i32, i32* %pix_y82, align 4
  %shr83 = ashr i32 %96, 2
  %97 = load i32, i32* %block_y, align 4
  %add84 = add nsw i32 %shr83, %97
  %idxprom85 = sext i32 %add84 to i64
  %98 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x86 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %98, i32 0, i32 33
  %99 = load i32, i32* %pix_x86, align 4
  %shr87 = ashr i32 %99, 2
  %100 = load i32, i32* %block_x, align 4
  %add88 = add nsw i32 %shr87, %100
  %idxprom89 = sext i32 %add88 to i64
  %101 = load i32*****, i32****** @all_mincost, align 8
  %arrayidx90 = getelementptr inbounds i32****, i32***** %101, i64 %idxprom89
  %102 = load i32****, i32***** %arrayidx90, align 8
  %arrayidx91 = getelementptr inbounds i32***, i32**** %102, i64 %idxprom85
  %103 = load i32***, i32**** %arrayidx91, align 8
  %arrayidx92 = getelementptr inbounds i32**, i32*** %103, i64 %idxprom81
  %104 = load i32**, i32*** %arrayidx92, align 8
  %arrayidx93 = getelementptr inbounds i32*, i32** %104, i64 5
  %105 = load i32*, i32** %arrayidx93, align 8
  %arrayidx94 = getelementptr inbounds i32, i32* %105, i64 0
  %106 = load i32, i32* %arrayidx94, align 4
  br label %cond.end.95

cond.end.95:                                      ; preds = %cond.false.80, %cond.true.68
  %cond96 = phi i32 [ %93, %cond.true.68 ], [ %106, %cond.false.80 ]
  store i32 %cond96, i32* @pred_SAD_uplayer, align 4
  %107 = load i32, i32* @pred_SAD_uplayer, align 4
  %div = sdiv i32 %107, 2
  store i32 %div, i32* @pred_SAD_uplayer, align 4
  br label %if.end.279

if.else:                                          ; preds = %if.then.42
  %108 = load i32, i32* %blocktype.addr, align 4
  %cmp97 = icmp sgt i32 %108, 4
  br i1 %cmp97, label %if.then.99, label %if.else.156

if.then.99:                                       ; preds = %if.else
  %109 = load i16, i16* %ref.addr, align 2
  %idxprom100 = sext i16 %109 to i64
  %110 = load i32, i32* %list.addr, align 4
  %idxprom101 = sext i32 %110 to i64
  %111 = load i32, i32* %block_y, align 4
  %idxprom102 = sext i32 %111 to i64
  %112 = load i32, i32* %block_x, align 4
  %idxprom103 = sext i32 %112 to i64
  %113 = load i16******, i16******* %all_mv, align 8
  %arrayidx104 = getelementptr inbounds i16*****, i16****** %113, i64 %idxprom103
  %114 = load i16*****, i16****** %arrayidx104, align 8
  %arrayidx105 = getelementptr inbounds i16****, i16***** %114, i64 %idxprom102
  %115 = load i16****, i16***** %arrayidx105, align 8
  %arrayidx106 = getelementptr inbounds i16***, i16**** %115, i64 %idxprom101
  %116 = load i16***, i16**** %arrayidx106, align 8
  %arrayidx107 = getelementptr inbounds i16**, i16*** %116, i64 %idxprom100
  %117 = load i16**, i16*** %arrayidx107, align 8
  %arrayidx108 = getelementptr inbounds i16*, i16** %117, i64 4
  %118 = load i16*, i16** %arrayidx108, align 8
  %arrayidx109 = getelementptr inbounds i16, i16* %118, i64 0
  %119 = load i16, i16* %arrayidx109, align 2
  %conv110 = sext i16 %119 to i32
  store i32 %conv110, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @pred_MV_uplayer, i32 0, i64 0), align 4
  %120 = load i16, i16* %ref.addr, align 2
  %idxprom111 = sext i16 %120 to i64
  %121 = load i32, i32* %list.addr, align 4
  %idxprom112 = sext i32 %121 to i64
  %122 = load i32, i32* %block_y, align 4
  %idxprom113 = sext i32 %122 to i64
  %123 = load i32, i32* %block_x, align 4
  %idxprom114 = sext i32 %123 to i64
  %124 = load i16******, i16******* %all_mv, align 8
  %arrayidx115 = getelementptr inbounds i16*****, i16****** %124, i64 %idxprom114
  %125 = load i16*****, i16****** %arrayidx115, align 8
  %arrayidx116 = getelementptr inbounds i16****, i16***** %125, i64 %idxprom113
  %126 = load i16****, i16***** %arrayidx116, align 8
  %arrayidx117 = getelementptr inbounds i16***, i16**** %126, i64 %idxprom112
  %127 = load i16***, i16**** %arrayidx117, align 8
  %arrayidx118 = getelementptr inbounds i16**, i16*** %127, i64 %idxprom111
  %128 = load i16**, i16*** %arrayidx118, align 8
  %arrayidx119 = getelementptr inbounds i16*, i16** %128, i64 4
  %129 = load i16*, i16** %arrayidx119, align 8
  %arrayidx120 = getelementptr inbounds i16, i16* %129, i64 1
  %130 = load i16, i16* %arrayidx120, align 2
  %conv121 = sext i16 %130 to i32
  store i32 %conv121, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @pred_MV_uplayer, i32 0, i64 1), align 4
  %131 = load i32, i32* %list.addr, align 4
  %cmp122 = icmp eq i32 %131, 1
  br i1 %cmp122, label %cond.true.124, label %cond.false.138

cond.true.124:                                    ; preds = %if.then.99
  %132 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y125 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %132, i32 0, i32 34
  %133 = load i32, i32* %pix_y125, align 4
  %shr126 = ashr i32 %133, 2
  %134 = load i32, i32* %block_y, align 4
  %add127 = add nsw i32 %shr126, %134
  %idxprom128 = sext i32 %add127 to i64
  %135 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x129 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %135, i32 0, i32 33
  %136 = load i32, i32* %pix_x129, align 4
  %shr130 = ashr i32 %136, 2
  %137 = load i32, i32* %block_x, align 4
  %add131 = add nsw i32 %shr130, %137
  %idxprom132 = sext i32 %add131 to i64
  %138 = load i32*****, i32****** @all_bwmincost, align 8
  %arrayidx133 = getelementptr inbounds i32****, i32***** %138, i64 %idxprom132
  %139 = load i32****, i32***** %arrayidx133, align 8
  %arrayidx134 = getelementptr inbounds i32***, i32**** %139, i64 %idxprom128
  %140 = load i32***, i32**** %arrayidx134, align 8
  %arrayidx135 = getelementptr inbounds i32**, i32*** %140, i64 0
  %141 = load i32**, i32*** %arrayidx135, align 8
  %arrayidx136 = getelementptr inbounds i32*, i32** %141, i64 4
  %142 = load i32*, i32** %arrayidx136, align 8
  %arrayidx137 = getelementptr inbounds i32, i32* %142, i64 0
  %143 = load i32, i32* %arrayidx137, align 4
  br label %cond.end.153

cond.false.138:                                   ; preds = %if.then.99
  %144 = load i16, i16* %ref.addr, align 2
  %idxprom139 = sext i16 %144 to i64
  %145 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y140 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %145, i32 0, i32 34
  %146 = load i32, i32* %pix_y140, align 4
  %shr141 = ashr i32 %146, 2
  %147 = load i32, i32* %block_y, align 4
  %add142 = add nsw i32 %shr141, %147
  %idxprom143 = sext i32 %add142 to i64
  %148 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x144 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %148, i32 0, i32 33
  %149 = load i32, i32* %pix_x144, align 4
  %shr145 = ashr i32 %149, 2
  %150 = load i32, i32* %block_x, align 4
  %add146 = add nsw i32 %shr145, %150
  %idxprom147 = sext i32 %add146 to i64
  %151 = load i32*****, i32****** @all_mincost, align 8
  %arrayidx148 = getelementptr inbounds i32****, i32***** %151, i64 %idxprom147
  %152 = load i32****, i32***** %arrayidx148, align 8
  %arrayidx149 = getelementptr inbounds i32***, i32**** %152, i64 %idxprom143
  %153 = load i32***, i32**** %arrayidx149, align 8
  %arrayidx150 = getelementptr inbounds i32**, i32*** %153, i64 %idxprom139
  %154 = load i32**, i32*** %arrayidx150, align 8
  %arrayidx151 = getelementptr inbounds i32*, i32** %154, i64 4
  %155 = load i32*, i32** %arrayidx151, align 8
  %arrayidx152 = getelementptr inbounds i32, i32* %155, i64 0
  %156 = load i32, i32* %arrayidx152, align 4
  br label %cond.end.153

cond.end.153:                                     ; preds = %cond.false.138, %cond.true.124
  %cond154 = phi i32 [ %143, %cond.true.124 ], [ %156, %cond.false.138 ]
  store i32 %cond154, i32* @pred_SAD_uplayer, align 4
  %157 = load i32, i32* @pred_SAD_uplayer, align 4
  %div155 = sdiv i32 %157, 2
  store i32 %div155, i32* @pred_SAD_uplayer, align 4
  br label %if.end.278

if.else.156:                                      ; preds = %if.else
  %158 = load i32, i32* %blocktype.addr, align 4
  %cmp157 = icmp eq i32 %158, 4
  br i1 %cmp157, label %if.then.159, label %if.else.216

if.then.159:                                      ; preds = %if.else.156
  %159 = load i16, i16* %ref.addr, align 2
  %idxprom160 = sext i16 %159 to i64
  %160 = load i32, i32* %list.addr, align 4
  %idxprom161 = sext i32 %160 to i64
  %161 = load i32, i32* %block_y, align 4
  %idxprom162 = sext i32 %161 to i64
  %162 = load i32, i32* %block_x, align 4
  %idxprom163 = sext i32 %162 to i64
  %163 = load i16******, i16******* %all_mv, align 8
  %arrayidx164 = getelementptr inbounds i16*****, i16****** %163, i64 %idxprom163
  %164 = load i16*****, i16****** %arrayidx164, align 8
  %arrayidx165 = getelementptr inbounds i16****, i16***** %164, i64 %idxprom162
  %165 = load i16****, i16***** %arrayidx165, align 8
  %arrayidx166 = getelementptr inbounds i16***, i16**** %165, i64 %idxprom161
  %166 = load i16***, i16**** %arrayidx166, align 8
  %arrayidx167 = getelementptr inbounds i16**, i16*** %166, i64 %idxprom160
  %167 = load i16**, i16*** %arrayidx167, align 8
  %arrayidx168 = getelementptr inbounds i16*, i16** %167, i64 2
  %168 = load i16*, i16** %arrayidx168, align 8
  %arrayidx169 = getelementptr inbounds i16, i16* %168, i64 0
  %169 = load i16, i16* %arrayidx169, align 2
  %conv170 = sext i16 %169 to i32
  store i32 %conv170, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @pred_MV_uplayer, i32 0, i64 0), align 4
  %170 = load i16, i16* %ref.addr, align 2
  %idxprom171 = sext i16 %170 to i64
  %171 = load i32, i32* %list.addr, align 4
  %idxprom172 = sext i32 %171 to i64
  %172 = load i32, i32* %block_y, align 4
  %idxprom173 = sext i32 %172 to i64
  %173 = load i32, i32* %block_x, align 4
  %idxprom174 = sext i32 %173 to i64
  %174 = load i16******, i16******* %all_mv, align 8
  %arrayidx175 = getelementptr inbounds i16*****, i16****** %174, i64 %idxprom174
  %175 = load i16*****, i16****** %arrayidx175, align 8
  %arrayidx176 = getelementptr inbounds i16****, i16***** %175, i64 %idxprom173
  %176 = load i16****, i16***** %arrayidx176, align 8
  %arrayidx177 = getelementptr inbounds i16***, i16**** %176, i64 %idxprom172
  %177 = load i16***, i16**** %arrayidx177, align 8
  %arrayidx178 = getelementptr inbounds i16**, i16*** %177, i64 %idxprom171
  %178 = load i16**, i16*** %arrayidx178, align 8
  %arrayidx179 = getelementptr inbounds i16*, i16** %178, i64 2
  %179 = load i16*, i16** %arrayidx179, align 8
  %arrayidx180 = getelementptr inbounds i16, i16* %179, i64 1
  %180 = load i16, i16* %arrayidx180, align 2
  %conv181 = sext i16 %180 to i32
  store i32 %conv181, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @pred_MV_uplayer, i32 0, i64 1), align 4
  %181 = load i32, i32* %list.addr, align 4
  %cmp182 = icmp eq i32 %181, 1
  br i1 %cmp182, label %cond.true.184, label %cond.false.198

cond.true.184:                                    ; preds = %if.then.159
  %182 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y185 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %182, i32 0, i32 34
  %183 = load i32, i32* %pix_y185, align 4
  %shr186 = ashr i32 %183, 2
  %184 = load i32, i32* %block_y, align 4
  %add187 = add nsw i32 %shr186, %184
  %idxprom188 = sext i32 %add187 to i64
  %185 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x189 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %185, i32 0, i32 33
  %186 = load i32, i32* %pix_x189, align 4
  %shr190 = ashr i32 %186, 2
  %187 = load i32, i32* %block_x, align 4
  %add191 = add nsw i32 %shr190, %187
  %idxprom192 = sext i32 %add191 to i64
  %188 = load i32*****, i32****** @all_bwmincost, align 8
  %arrayidx193 = getelementptr inbounds i32****, i32***** %188, i64 %idxprom192
  %189 = load i32****, i32***** %arrayidx193, align 8
  %arrayidx194 = getelementptr inbounds i32***, i32**** %189, i64 %idxprom188
  %190 = load i32***, i32**** %arrayidx194, align 8
  %arrayidx195 = getelementptr inbounds i32**, i32*** %190, i64 0
  %191 = load i32**, i32*** %arrayidx195, align 8
  %arrayidx196 = getelementptr inbounds i32*, i32** %191, i64 2
  %192 = load i32*, i32** %arrayidx196, align 8
  %arrayidx197 = getelementptr inbounds i32, i32* %192, i64 0
  %193 = load i32, i32* %arrayidx197, align 4
  br label %cond.end.213

cond.false.198:                                   ; preds = %if.then.159
  %194 = load i16, i16* %ref.addr, align 2
  %idxprom199 = sext i16 %194 to i64
  %195 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y200 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %195, i32 0, i32 34
  %196 = load i32, i32* %pix_y200, align 4
  %shr201 = ashr i32 %196, 2
  %197 = load i32, i32* %block_y, align 4
  %add202 = add nsw i32 %shr201, %197
  %idxprom203 = sext i32 %add202 to i64
  %198 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x204 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %198, i32 0, i32 33
  %199 = load i32, i32* %pix_x204, align 4
  %shr205 = ashr i32 %199, 2
  %200 = load i32, i32* %block_x, align 4
  %add206 = add nsw i32 %shr205, %200
  %idxprom207 = sext i32 %add206 to i64
  %201 = load i32*****, i32****** @all_mincost, align 8
  %arrayidx208 = getelementptr inbounds i32****, i32***** %201, i64 %idxprom207
  %202 = load i32****, i32***** %arrayidx208, align 8
  %arrayidx209 = getelementptr inbounds i32***, i32**** %202, i64 %idxprom203
  %203 = load i32***, i32**** %arrayidx209, align 8
  %arrayidx210 = getelementptr inbounds i32**, i32*** %203, i64 %idxprom199
  %204 = load i32**, i32*** %arrayidx210, align 8
  %arrayidx211 = getelementptr inbounds i32*, i32** %204, i64 2
  %205 = load i32*, i32** %arrayidx211, align 8
  %arrayidx212 = getelementptr inbounds i32, i32* %205, i64 0
  %206 = load i32, i32* %arrayidx212, align 4
  br label %cond.end.213

cond.end.213:                                     ; preds = %cond.false.198, %cond.true.184
  %cond214 = phi i32 [ %193, %cond.true.184 ], [ %206, %cond.false.198 ]
  store i32 %cond214, i32* @pred_SAD_uplayer, align 4
  %207 = load i32, i32* @pred_SAD_uplayer, align 4
  %div215 = sdiv i32 %207, 2
  store i32 %div215, i32* @pred_SAD_uplayer, align 4
  br label %if.end.277

if.else.216:                                      ; preds = %if.else.156
  %208 = load i32, i32* %blocktype.addr, align 4
  %cmp217 = icmp sgt i32 %208, 1
  br i1 %cmp217, label %if.then.219, label %if.end.276

if.then.219:                                      ; preds = %if.else.216
  %209 = load i16, i16* %ref.addr, align 2
  %idxprom220 = sext i16 %209 to i64
  %210 = load i32, i32* %list.addr, align 4
  %idxprom221 = sext i32 %210 to i64
  %211 = load i32, i32* %block_y, align 4
  %idxprom222 = sext i32 %211 to i64
  %212 = load i32, i32* %block_x, align 4
  %idxprom223 = sext i32 %212 to i64
  %213 = load i16******, i16******* %all_mv, align 8
  %arrayidx224 = getelementptr inbounds i16*****, i16****** %213, i64 %idxprom223
  %214 = load i16*****, i16****** %arrayidx224, align 8
  %arrayidx225 = getelementptr inbounds i16****, i16***** %214, i64 %idxprom222
  %215 = load i16****, i16***** %arrayidx225, align 8
  %arrayidx226 = getelementptr inbounds i16***, i16**** %215, i64 %idxprom221
  %216 = load i16***, i16**** %arrayidx226, align 8
  %arrayidx227 = getelementptr inbounds i16**, i16*** %216, i64 %idxprom220
  %217 = load i16**, i16*** %arrayidx227, align 8
  %arrayidx228 = getelementptr inbounds i16*, i16** %217, i64 1
  %218 = load i16*, i16** %arrayidx228, align 8
  %arrayidx229 = getelementptr inbounds i16, i16* %218, i64 0
  %219 = load i16, i16* %arrayidx229, align 2
  %conv230 = sext i16 %219 to i32
  store i32 %conv230, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @pred_MV_uplayer, i32 0, i64 0), align 4
  %220 = load i16, i16* %ref.addr, align 2
  %idxprom231 = sext i16 %220 to i64
  %221 = load i32, i32* %list.addr, align 4
  %idxprom232 = sext i32 %221 to i64
  %222 = load i32, i32* %block_y, align 4
  %idxprom233 = sext i32 %222 to i64
  %223 = load i32, i32* %block_x, align 4
  %idxprom234 = sext i32 %223 to i64
  %224 = load i16******, i16******* %all_mv, align 8
  %arrayidx235 = getelementptr inbounds i16*****, i16****** %224, i64 %idxprom234
  %225 = load i16*****, i16****** %arrayidx235, align 8
  %arrayidx236 = getelementptr inbounds i16****, i16***** %225, i64 %idxprom233
  %226 = load i16****, i16***** %arrayidx236, align 8
  %arrayidx237 = getelementptr inbounds i16***, i16**** %226, i64 %idxprom232
  %227 = load i16***, i16**** %arrayidx237, align 8
  %arrayidx238 = getelementptr inbounds i16**, i16*** %227, i64 %idxprom231
  %228 = load i16**, i16*** %arrayidx238, align 8
  %arrayidx239 = getelementptr inbounds i16*, i16** %228, i64 1
  %229 = load i16*, i16** %arrayidx239, align 8
  %arrayidx240 = getelementptr inbounds i16, i16* %229, i64 1
  %230 = load i16, i16* %arrayidx240, align 2
  %conv241 = sext i16 %230 to i32
  store i32 %conv241, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @pred_MV_uplayer, i32 0, i64 1), align 4
  %231 = load i32, i32* %list.addr, align 4
  %cmp242 = icmp eq i32 %231, 1
  br i1 %cmp242, label %cond.true.244, label %cond.false.258

cond.true.244:                                    ; preds = %if.then.219
  %232 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y245 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %232, i32 0, i32 34
  %233 = load i32, i32* %pix_y245, align 4
  %shr246 = ashr i32 %233, 2
  %234 = load i32, i32* %block_y, align 4
  %add247 = add nsw i32 %shr246, %234
  %idxprom248 = sext i32 %add247 to i64
  %235 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x249 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %235, i32 0, i32 33
  %236 = load i32, i32* %pix_x249, align 4
  %shr250 = ashr i32 %236, 2
  %237 = load i32, i32* %block_x, align 4
  %add251 = add nsw i32 %shr250, %237
  %idxprom252 = sext i32 %add251 to i64
  %238 = load i32*****, i32****** @all_bwmincost, align 8
  %arrayidx253 = getelementptr inbounds i32****, i32***** %238, i64 %idxprom252
  %239 = load i32****, i32***** %arrayidx253, align 8
  %arrayidx254 = getelementptr inbounds i32***, i32**** %239, i64 %idxprom248
  %240 = load i32***, i32**** %arrayidx254, align 8
  %arrayidx255 = getelementptr inbounds i32**, i32*** %240, i64 0
  %241 = load i32**, i32*** %arrayidx255, align 8
  %arrayidx256 = getelementptr inbounds i32*, i32** %241, i64 1
  %242 = load i32*, i32** %arrayidx256, align 8
  %arrayidx257 = getelementptr inbounds i32, i32* %242, i64 0
  %243 = load i32, i32* %arrayidx257, align 4
  br label %cond.end.273

cond.false.258:                                   ; preds = %if.then.219
  %244 = load i16, i16* %ref.addr, align 2
  %idxprom259 = sext i16 %244 to i64
  %245 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y260 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %245, i32 0, i32 34
  %246 = load i32, i32* %pix_y260, align 4
  %shr261 = ashr i32 %246, 2
  %247 = load i32, i32* %block_y, align 4
  %add262 = add nsw i32 %shr261, %247
  %idxprom263 = sext i32 %add262 to i64
  %248 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x264 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %248, i32 0, i32 33
  %249 = load i32, i32* %pix_x264, align 4
  %shr265 = ashr i32 %249, 2
  %250 = load i32, i32* %block_x, align 4
  %add266 = add nsw i32 %shr265, %250
  %idxprom267 = sext i32 %add266 to i64
  %251 = load i32*****, i32****** @all_mincost, align 8
  %arrayidx268 = getelementptr inbounds i32****, i32***** %251, i64 %idxprom267
  %252 = load i32****, i32***** %arrayidx268, align 8
  %arrayidx269 = getelementptr inbounds i32***, i32**** %252, i64 %idxprom263
  %253 = load i32***, i32**** %arrayidx269, align 8
  %arrayidx270 = getelementptr inbounds i32**, i32*** %253, i64 %idxprom259
  %254 = load i32**, i32*** %arrayidx270, align 8
  %arrayidx271 = getelementptr inbounds i32*, i32** %254, i64 1
  %255 = load i32*, i32** %arrayidx271, align 8
  %arrayidx272 = getelementptr inbounds i32, i32* %255, i64 0
  %256 = load i32, i32* %arrayidx272, align 4
  br label %cond.end.273

cond.end.273:                                     ; preds = %cond.false.258, %cond.true.244
  %cond274 = phi i32 [ %243, %cond.true.244 ], [ %256, %cond.false.258 ]
  store i32 %cond274, i32* @pred_SAD_uplayer, align 4
  %257 = load i32, i32* @pred_SAD_uplayer, align 4
  %div275 = sdiv i32 %257, 2
  store i32 %div275, i32* @pred_SAD_uplayer, align 4
  br label %if.end.276

if.end.276:                                       ; preds = %cond.end.273, %if.else.216
  br label %if.end.277

if.end.277:                                       ; preds = %if.end.276, %cond.end.213
  br label %if.end.278

if.end.278:                                       ; preds = %if.end.277, %cond.end.153
  br label %if.end.279

if.end.279:                                       ; preds = %if.end.278, %cond.end.95
  %258 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %258, i32 0, i32 6
  %259 = load i32, i32* %type, align 4
  %cmp280 = icmp eq i32 %259, 1
  br i1 %cmp280, label %land.lhs.true, label %if.end.528

land.lhs.true:                                    ; preds = %if.end.279
  %260 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %nal_reference_idc = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %260, i32 0, i32 113
  %261 = load i32, i32* %nal_reference_idc, align 4
  %cmp282 = icmp sgt i32 %261, 0
  br i1 %cmp282, label %if.then.284, label %if.end.528

if.then.284:                                      ; preds = %land.lhs.true
  %262 = load i32, i32* %blocktype.addr, align 4
  %cmp285 = icmp sgt i32 %262, 6
  br i1 %cmp285, label %if.then.287, label %if.else.344

if.then.287:                                      ; preds = %if.then.284
  %263 = load i16, i16* %ref.addr, align 2
  %idxprom288 = sext i16 %263 to i64
  %264 = load i32, i32* %list.addr, align 4
  %idxprom289 = sext i32 %264 to i64
  %265 = load i32, i32* %block_y, align 4
  %idxprom290 = sext i32 %265 to i64
  %266 = load i32, i32* %block_x, align 4
  %idxprom291 = sext i32 %266 to i64
  %267 = load i16******, i16******* %all_mv, align 8
  %arrayidx292 = getelementptr inbounds i16*****, i16****** %267, i64 %idxprom291
  %268 = load i16*****, i16****** %arrayidx292, align 8
  %arrayidx293 = getelementptr inbounds i16****, i16***** %268, i64 %idxprom290
  %269 = load i16****, i16***** %arrayidx293, align 8
  %arrayidx294 = getelementptr inbounds i16***, i16**** %269, i64 %idxprom289
  %270 = load i16***, i16**** %arrayidx294, align 8
  %arrayidx295 = getelementptr inbounds i16**, i16*** %270, i64 %idxprom288
  %271 = load i16**, i16*** %arrayidx295, align 8
  %arrayidx296 = getelementptr inbounds i16*, i16** %271, i64 5
  %272 = load i16*, i16** %arrayidx296, align 8
  %arrayidx297 = getelementptr inbounds i16, i16* %272, i64 0
  %273 = load i16, i16* %arrayidx297, align 2
  %conv298 = sext i16 %273 to i32
  store i32 %conv298, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @pred_MV_uplayer, i32 0, i64 0), align 4
  %274 = load i16, i16* %ref.addr, align 2
  %idxprom299 = sext i16 %274 to i64
  %275 = load i32, i32* %list.addr, align 4
  %idxprom300 = sext i32 %275 to i64
  %276 = load i32, i32* %block_y, align 4
  %idxprom301 = sext i32 %276 to i64
  %277 = load i32, i32* %block_x, align 4
  %idxprom302 = sext i32 %277 to i64
  %278 = load i16******, i16******* %all_mv, align 8
  %arrayidx303 = getelementptr inbounds i16*****, i16****** %278, i64 %idxprom302
  %279 = load i16*****, i16****** %arrayidx303, align 8
  %arrayidx304 = getelementptr inbounds i16****, i16***** %279, i64 %idxprom301
  %280 = load i16****, i16***** %arrayidx304, align 8
  %arrayidx305 = getelementptr inbounds i16***, i16**** %280, i64 %idxprom300
  %281 = load i16***, i16**** %arrayidx305, align 8
  %arrayidx306 = getelementptr inbounds i16**, i16*** %281, i64 %idxprom299
  %282 = load i16**, i16*** %arrayidx306, align 8
  %arrayidx307 = getelementptr inbounds i16*, i16** %282, i64 5
  %283 = load i16*, i16** %arrayidx307, align 8
  %arrayidx308 = getelementptr inbounds i16, i16* %283, i64 1
  %284 = load i16, i16* %arrayidx308, align 2
  %conv309 = sext i16 %284 to i32
  store i32 %conv309, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @pred_MV_uplayer, i32 0, i64 1), align 4
  %285 = load i32, i32* %list.addr, align 4
  %cmp310 = icmp eq i32 %285, 1
  br i1 %cmp310, label %cond.true.312, label %cond.false.326

cond.true.312:                                    ; preds = %if.then.287
  %286 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y313 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %286, i32 0, i32 34
  %287 = load i32, i32* %pix_y313, align 4
  %shr314 = ashr i32 %287, 2
  %288 = load i32, i32* %block_y, align 4
  %add315 = add nsw i32 %shr314, %288
  %idxprom316 = sext i32 %add315 to i64
  %289 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x317 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %289, i32 0, i32 33
  %290 = load i32, i32* %pix_x317, align 4
  %shr318 = ashr i32 %290, 2
  %291 = load i32, i32* %block_x, align 4
  %add319 = add nsw i32 %shr318, %291
  %idxprom320 = sext i32 %add319 to i64
  %292 = load i32*****, i32****** @all_bwmincost, align 8
  %arrayidx321 = getelementptr inbounds i32****, i32***** %292, i64 %idxprom320
  %293 = load i32****, i32***** %arrayidx321, align 8
  %arrayidx322 = getelementptr inbounds i32***, i32**** %293, i64 %idxprom316
  %294 = load i32***, i32**** %arrayidx322, align 8
  %arrayidx323 = getelementptr inbounds i32**, i32*** %294, i64 0
  %295 = load i32**, i32*** %arrayidx323, align 8
  %arrayidx324 = getelementptr inbounds i32*, i32** %295, i64 5
  %296 = load i32*, i32** %arrayidx324, align 8
  %arrayidx325 = getelementptr inbounds i32, i32* %296, i64 0
  %297 = load i32, i32* %arrayidx325, align 4
  br label %cond.end.341

cond.false.326:                                   ; preds = %if.then.287
  %298 = load i16, i16* %ref.addr, align 2
  %idxprom327 = sext i16 %298 to i64
  %299 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y328 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %299, i32 0, i32 34
  %300 = load i32, i32* %pix_y328, align 4
  %shr329 = ashr i32 %300, 2
  %301 = load i32, i32* %block_y, align 4
  %add330 = add nsw i32 %shr329, %301
  %idxprom331 = sext i32 %add330 to i64
  %302 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x332 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %302, i32 0, i32 33
  %303 = load i32, i32* %pix_x332, align 4
  %shr333 = ashr i32 %303, 2
  %304 = load i32, i32* %block_x, align 4
  %add334 = add nsw i32 %shr333, %304
  %idxprom335 = sext i32 %add334 to i64
  %305 = load i32*****, i32****** @all_mincost, align 8
  %arrayidx336 = getelementptr inbounds i32****, i32***** %305, i64 %idxprom335
  %306 = load i32****, i32***** %arrayidx336, align 8
  %arrayidx337 = getelementptr inbounds i32***, i32**** %306, i64 %idxprom331
  %307 = load i32***, i32**** %arrayidx337, align 8
  %arrayidx338 = getelementptr inbounds i32**, i32*** %307, i64 %idxprom327
  %308 = load i32**, i32*** %arrayidx338, align 8
  %arrayidx339 = getelementptr inbounds i32*, i32** %308, i64 5
  %309 = load i32*, i32** %arrayidx339, align 8
  %arrayidx340 = getelementptr inbounds i32, i32* %309, i64 0
  %310 = load i32, i32* %arrayidx340, align 4
  br label %cond.end.341

cond.end.341:                                     ; preds = %cond.false.326, %cond.true.312
  %cond342 = phi i32 [ %297, %cond.true.312 ], [ %310, %cond.false.326 ]
  store i32 %cond342, i32* @pred_SAD_uplayer, align 4
  %311 = load i32, i32* @pred_SAD_uplayer, align 4
  %div343 = sdiv i32 %311, 2
  store i32 %div343, i32* @pred_SAD_uplayer, align 4
  br label %if.end.527

if.else.344:                                      ; preds = %if.then.284
  %312 = load i32, i32* %blocktype.addr, align 4
  %cmp345 = icmp sgt i32 %312, 4
  br i1 %cmp345, label %if.then.347, label %if.else.404

if.then.347:                                      ; preds = %if.else.344
  %313 = load i16, i16* %ref.addr, align 2
  %idxprom348 = sext i16 %313 to i64
  %314 = load i32, i32* %list.addr, align 4
  %idxprom349 = sext i32 %314 to i64
  %315 = load i32, i32* %block_y, align 4
  %idxprom350 = sext i32 %315 to i64
  %316 = load i32, i32* %block_x, align 4
  %idxprom351 = sext i32 %316 to i64
  %317 = load i16******, i16******* %all_mv, align 8
  %arrayidx352 = getelementptr inbounds i16*****, i16****** %317, i64 %idxprom351
  %318 = load i16*****, i16****** %arrayidx352, align 8
  %arrayidx353 = getelementptr inbounds i16****, i16***** %318, i64 %idxprom350
  %319 = load i16****, i16***** %arrayidx353, align 8
  %arrayidx354 = getelementptr inbounds i16***, i16**** %319, i64 %idxprom349
  %320 = load i16***, i16**** %arrayidx354, align 8
  %arrayidx355 = getelementptr inbounds i16**, i16*** %320, i64 %idxprom348
  %321 = load i16**, i16*** %arrayidx355, align 8
  %arrayidx356 = getelementptr inbounds i16*, i16** %321, i64 4
  %322 = load i16*, i16** %arrayidx356, align 8
  %arrayidx357 = getelementptr inbounds i16, i16* %322, i64 0
  %323 = load i16, i16* %arrayidx357, align 2
  %conv358 = sext i16 %323 to i32
  store i32 %conv358, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @pred_MV_uplayer, i32 0, i64 0), align 4
  %324 = load i16, i16* %ref.addr, align 2
  %idxprom359 = sext i16 %324 to i64
  %325 = load i32, i32* %list.addr, align 4
  %idxprom360 = sext i32 %325 to i64
  %326 = load i32, i32* %block_y, align 4
  %idxprom361 = sext i32 %326 to i64
  %327 = load i32, i32* %block_x, align 4
  %idxprom362 = sext i32 %327 to i64
  %328 = load i16******, i16******* %all_mv, align 8
  %arrayidx363 = getelementptr inbounds i16*****, i16****** %328, i64 %idxprom362
  %329 = load i16*****, i16****** %arrayidx363, align 8
  %arrayidx364 = getelementptr inbounds i16****, i16***** %329, i64 %idxprom361
  %330 = load i16****, i16***** %arrayidx364, align 8
  %arrayidx365 = getelementptr inbounds i16***, i16**** %330, i64 %idxprom360
  %331 = load i16***, i16**** %arrayidx365, align 8
  %arrayidx366 = getelementptr inbounds i16**, i16*** %331, i64 %idxprom359
  %332 = load i16**, i16*** %arrayidx366, align 8
  %arrayidx367 = getelementptr inbounds i16*, i16** %332, i64 4
  %333 = load i16*, i16** %arrayidx367, align 8
  %arrayidx368 = getelementptr inbounds i16, i16* %333, i64 1
  %334 = load i16, i16* %arrayidx368, align 2
  %conv369 = sext i16 %334 to i32
  store i32 %conv369, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @pred_MV_uplayer, i32 0, i64 1), align 4
  %335 = load i32, i32* %list.addr, align 4
  %cmp370 = icmp eq i32 %335, 1
  br i1 %cmp370, label %cond.true.372, label %cond.false.386

cond.true.372:                                    ; preds = %if.then.347
  %336 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y373 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %336, i32 0, i32 34
  %337 = load i32, i32* %pix_y373, align 4
  %shr374 = ashr i32 %337, 2
  %338 = load i32, i32* %block_y, align 4
  %add375 = add nsw i32 %shr374, %338
  %idxprom376 = sext i32 %add375 to i64
  %339 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x377 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %339, i32 0, i32 33
  %340 = load i32, i32* %pix_x377, align 4
  %shr378 = ashr i32 %340, 2
  %341 = load i32, i32* %block_x, align 4
  %add379 = add nsw i32 %shr378, %341
  %idxprom380 = sext i32 %add379 to i64
  %342 = load i32*****, i32****** @all_bwmincost, align 8
  %arrayidx381 = getelementptr inbounds i32****, i32***** %342, i64 %idxprom380
  %343 = load i32****, i32***** %arrayidx381, align 8
  %arrayidx382 = getelementptr inbounds i32***, i32**** %343, i64 %idxprom376
  %344 = load i32***, i32**** %arrayidx382, align 8
  %arrayidx383 = getelementptr inbounds i32**, i32*** %344, i64 0
  %345 = load i32**, i32*** %arrayidx383, align 8
  %arrayidx384 = getelementptr inbounds i32*, i32** %345, i64 4
  %346 = load i32*, i32** %arrayidx384, align 8
  %arrayidx385 = getelementptr inbounds i32, i32* %346, i64 0
  %347 = load i32, i32* %arrayidx385, align 4
  br label %cond.end.401

cond.false.386:                                   ; preds = %if.then.347
  %348 = load i16, i16* %ref.addr, align 2
  %idxprom387 = sext i16 %348 to i64
  %349 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y388 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %349, i32 0, i32 34
  %350 = load i32, i32* %pix_y388, align 4
  %shr389 = ashr i32 %350, 2
  %351 = load i32, i32* %block_y, align 4
  %add390 = add nsw i32 %shr389, %351
  %idxprom391 = sext i32 %add390 to i64
  %352 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x392 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %352, i32 0, i32 33
  %353 = load i32, i32* %pix_x392, align 4
  %shr393 = ashr i32 %353, 2
  %354 = load i32, i32* %block_x, align 4
  %add394 = add nsw i32 %shr393, %354
  %idxprom395 = sext i32 %add394 to i64
  %355 = load i32*****, i32****** @all_mincost, align 8
  %arrayidx396 = getelementptr inbounds i32****, i32***** %355, i64 %idxprom395
  %356 = load i32****, i32***** %arrayidx396, align 8
  %arrayidx397 = getelementptr inbounds i32***, i32**** %356, i64 %idxprom391
  %357 = load i32***, i32**** %arrayidx397, align 8
  %arrayidx398 = getelementptr inbounds i32**, i32*** %357, i64 %idxprom387
  %358 = load i32**, i32*** %arrayidx398, align 8
  %arrayidx399 = getelementptr inbounds i32*, i32** %358, i64 4
  %359 = load i32*, i32** %arrayidx399, align 8
  %arrayidx400 = getelementptr inbounds i32, i32* %359, i64 0
  %360 = load i32, i32* %arrayidx400, align 4
  br label %cond.end.401

cond.end.401:                                     ; preds = %cond.false.386, %cond.true.372
  %cond402 = phi i32 [ %347, %cond.true.372 ], [ %360, %cond.false.386 ]
  store i32 %cond402, i32* @pred_SAD_uplayer, align 4
  %361 = load i32, i32* @pred_SAD_uplayer, align 4
  %div403 = sdiv i32 %361, 2
  store i32 %div403, i32* @pred_SAD_uplayer, align 4
  br label %if.end.526

if.else.404:                                      ; preds = %if.else.344
  %362 = load i32, i32* %blocktype.addr, align 4
  %cmp405 = icmp eq i32 %362, 4
  br i1 %cmp405, label %if.then.407, label %if.else.464

if.then.407:                                      ; preds = %if.else.404
  %363 = load i16, i16* %ref.addr, align 2
  %idxprom408 = sext i16 %363 to i64
  %364 = load i32, i32* %list.addr, align 4
  %idxprom409 = sext i32 %364 to i64
  %365 = load i32, i32* %block_y, align 4
  %idxprom410 = sext i32 %365 to i64
  %366 = load i32, i32* %block_x, align 4
  %idxprom411 = sext i32 %366 to i64
  %367 = load i16******, i16******* %all_mv, align 8
  %arrayidx412 = getelementptr inbounds i16*****, i16****** %367, i64 %idxprom411
  %368 = load i16*****, i16****** %arrayidx412, align 8
  %arrayidx413 = getelementptr inbounds i16****, i16***** %368, i64 %idxprom410
  %369 = load i16****, i16***** %arrayidx413, align 8
  %arrayidx414 = getelementptr inbounds i16***, i16**** %369, i64 %idxprom409
  %370 = load i16***, i16**** %arrayidx414, align 8
  %arrayidx415 = getelementptr inbounds i16**, i16*** %370, i64 %idxprom408
  %371 = load i16**, i16*** %arrayidx415, align 8
  %arrayidx416 = getelementptr inbounds i16*, i16** %371, i64 2
  %372 = load i16*, i16** %arrayidx416, align 8
  %arrayidx417 = getelementptr inbounds i16, i16* %372, i64 0
  %373 = load i16, i16* %arrayidx417, align 2
  %conv418 = sext i16 %373 to i32
  store i32 %conv418, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @pred_MV_uplayer, i32 0, i64 0), align 4
  %374 = load i16, i16* %ref.addr, align 2
  %idxprom419 = sext i16 %374 to i64
  %375 = load i32, i32* %list.addr, align 4
  %idxprom420 = sext i32 %375 to i64
  %376 = load i32, i32* %block_y, align 4
  %idxprom421 = sext i32 %376 to i64
  %377 = load i32, i32* %block_x, align 4
  %idxprom422 = sext i32 %377 to i64
  %378 = load i16******, i16******* %all_mv, align 8
  %arrayidx423 = getelementptr inbounds i16*****, i16****** %378, i64 %idxprom422
  %379 = load i16*****, i16****** %arrayidx423, align 8
  %arrayidx424 = getelementptr inbounds i16****, i16***** %379, i64 %idxprom421
  %380 = load i16****, i16***** %arrayidx424, align 8
  %arrayidx425 = getelementptr inbounds i16***, i16**** %380, i64 %idxprom420
  %381 = load i16***, i16**** %arrayidx425, align 8
  %arrayidx426 = getelementptr inbounds i16**, i16*** %381, i64 %idxprom419
  %382 = load i16**, i16*** %arrayidx426, align 8
  %arrayidx427 = getelementptr inbounds i16*, i16** %382, i64 2
  %383 = load i16*, i16** %arrayidx427, align 8
  %arrayidx428 = getelementptr inbounds i16, i16* %383, i64 1
  %384 = load i16, i16* %arrayidx428, align 2
  %conv429 = sext i16 %384 to i32
  store i32 %conv429, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @pred_MV_uplayer, i32 0, i64 1), align 4
  %385 = load i32, i32* %list.addr, align 4
  %cmp430 = icmp eq i32 %385, 1
  br i1 %cmp430, label %cond.true.432, label %cond.false.446

cond.true.432:                                    ; preds = %if.then.407
  %386 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y433 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %386, i32 0, i32 34
  %387 = load i32, i32* %pix_y433, align 4
  %shr434 = ashr i32 %387, 2
  %388 = load i32, i32* %block_y, align 4
  %add435 = add nsw i32 %shr434, %388
  %idxprom436 = sext i32 %add435 to i64
  %389 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x437 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %389, i32 0, i32 33
  %390 = load i32, i32* %pix_x437, align 4
  %shr438 = ashr i32 %390, 2
  %391 = load i32, i32* %block_x, align 4
  %add439 = add nsw i32 %shr438, %391
  %idxprom440 = sext i32 %add439 to i64
  %392 = load i32*****, i32****** @all_bwmincost, align 8
  %arrayidx441 = getelementptr inbounds i32****, i32***** %392, i64 %idxprom440
  %393 = load i32****, i32***** %arrayidx441, align 8
  %arrayidx442 = getelementptr inbounds i32***, i32**** %393, i64 %idxprom436
  %394 = load i32***, i32**** %arrayidx442, align 8
  %arrayidx443 = getelementptr inbounds i32**, i32*** %394, i64 0
  %395 = load i32**, i32*** %arrayidx443, align 8
  %arrayidx444 = getelementptr inbounds i32*, i32** %395, i64 2
  %396 = load i32*, i32** %arrayidx444, align 8
  %arrayidx445 = getelementptr inbounds i32, i32* %396, i64 0
  %397 = load i32, i32* %arrayidx445, align 4
  br label %cond.end.461

cond.false.446:                                   ; preds = %if.then.407
  %398 = load i16, i16* %ref.addr, align 2
  %idxprom447 = sext i16 %398 to i64
  %399 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y448 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %399, i32 0, i32 34
  %400 = load i32, i32* %pix_y448, align 4
  %shr449 = ashr i32 %400, 2
  %401 = load i32, i32* %block_y, align 4
  %add450 = add nsw i32 %shr449, %401
  %idxprom451 = sext i32 %add450 to i64
  %402 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x452 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %402, i32 0, i32 33
  %403 = load i32, i32* %pix_x452, align 4
  %shr453 = ashr i32 %403, 2
  %404 = load i32, i32* %block_x, align 4
  %add454 = add nsw i32 %shr453, %404
  %idxprom455 = sext i32 %add454 to i64
  %405 = load i32*****, i32****** @all_mincost, align 8
  %arrayidx456 = getelementptr inbounds i32****, i32***** %405, i64 %idxprom455
  %406 = load i32****, i32***** %arrayidx456, align 8
  %arrayidx457 = getelementptr inbounds i32***, i32**** %406, i64 %idxprom451
  %407 = load i32***, i32**** %arrayidx457, align 8
  %arrayidx458 = getelementptr inbounds i32**, i32*** %407, i64 %idxprom447
  %408 = load i32**, i32*** %arrayidx458, align 8
  %arrayidx459 = getelementptr inbounds i32*, i32** %408, i64 2
  %409 = load i32*, i32** %arrayidx459, align 8
  %arrayidx460 = getelementptr inbounds i32, i32* %409, i64 0
  %410 = load i32, i32* %arrayidx460, align 4
  br label %cond.end.461

cond.end.461:                                     ; preds = %cond.false.446, %cond.true.432
  %cond462 = phi i32 [ %397, %cond.true.432 ], [ %410, %cond.false.446 ]
  store i32 %cond462, i32* @pred_SAD_uplayer, align 4
  %411 = load i32, i32* @pred_SAD_uplayer, align 4
  %div463 = sdiv i32 %411, 2
  store i32 %div463, i32* @pred_SAD_uplayer, align 4
  br label %if.end.525

if.else.464:                                      ; preds = %if.else.404
  %412 = load i32, i32* %blocktype.addr, align 4
  %cmp465 = icmp sgt i32 %412, 1
  br i1 %cmp465, label %if.then.467, label %if.end.524

if.then.467:                                      ; preds = %if.else.464
  %413 = load i16, i16* %ref.addr, align 2
  %idxprom468 = sext i16 %413 to i64
  %414 = load i32, i32* %list.addr, align 4
  %idxprom469 = sext i32 %414 to i64
  %415 = load i32, i32* %block_y, align 4
  %idxprom470 = sext i32 %415 to i64
  %416 = load i32, i32* %block_x, align 4
  %idxprom471 = sext i32 %416 to i64
  %417 = load i16******, i16******* %all_mv, align 8
  %arrayidx472 = getelementptr inbounds i16*****, i16****** %417, i64 %idxprom471
  %418 = load i16*****, i16****** %arrayidx472, align 8
  %arrayidx473 = getelementptr inbounds i16****, i16***** %418, i64 %idxprom470
  %419 = load i16****, i16***** %arrayidx473, align 8
  %arrayidx474 = getelementptr inbounds i16***, i16**** %419, i64 %idxprom469
  %420 = load i16***, i16**** %arrayidx474, align 8
  %arrayidx475 = getelementptr inbounds i16**, i16*** %420, i64 %idxprom468
  %421 = load i16**, i16*** %arrayidx475, align 8
  %arrayidx476 = getelementptr inbounds i16*, i16** %421, i64 1
  %422 = load i16*, i16** %arrayidx476, align 8
  %arrayidx477 = getelementptr inbounds i16, i16* %422, i64 0
  %423 = load i16, i16* %arrayidx477, align 2
  %conv478 = sext i16 %423 to i32
  store i32 %conv478, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @pred_MV_uplayer, i32 0, i64 0), align 4
  %424 = load i16, i16* %ref.addr, align 2
  %idxprom479 = sext i16 %424 to i64
  %425 = load i32, i32* %list.addr, align 4
  %idxprom480 = sext i32 %425 to i64
  %426 = load i32, i32* %block_y, align 4
  %idxprom481 = sext i32 %426 to i64
  %427 = load i32, i32* %block_x, align 4
  %idxprom482 = sext i32 %427 to i64
  %428 = load i16******, i16******* %all_mv, align 8
  %arrayidx483 = getelementptr inbounds i16*****, i16****** %428, i64 %idxprom482
  %429 = load i16*****, i16****** %arrayidx483, align 8
  %arrayidx484 = getelementptr inbounds i16****, i16***** %429, i64 %idxprom481
  %430 = load i16****, i16***** %arrayidx484, align 8
  %arrayidx485 = getelementptr inbounds i16***, i16**** %430, i64 %idxprom480
  %431 = load i16***, i16**** %arrayidx485, align 8
  %arrayidx486 = getelementptr inbounds i16**, i16*** %431, i64 %idxprom479
  %432 = load i16**, i16*** %arrayidx486, align 8
  %arrayidx487 = getelementptr inbounds i16*, i16** %432, i64 1
  %433 = load i16*, i16** %arrayidx487, align 8
  %arrayidx488 = getelementptr inbounds i16, i16* %433, i64 1
  %434 = load i16, i16* %arrayidx488, align 2
  %conv489 = sext i16 %434 to i32
  store i32 %conv489, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @pred_MV_uplayer, i32 0, i64 1), align 4
  %435 = load i32, i32* %list.addr, align 4
  %cmp490 = icmp eq i32 %435, 1
  br i1 %cmp490, label %cond.true.492, label %cond.false.506

cond.true.492:                                    ; preds = %if.then.467
  %436 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y493 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %436, i32 0, i32 34
  %437 = load i32, i32* %pix_y493, align 4
  %shr494 = ashr i32 %437, 2
  %438 = load i32, i32* %block_y, align 4
  %add495 = add nsw i32 %shr494, %438
  %idxprom496 = sext i32 %add495 to i64
  %439 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x497 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %439, i32 0, i32 33
  %440 = load i32, i32* %pix_x497, align 4
  %shr498 = ashr i32 %440, 2
  %441 = load i32, i32* %block_x, align 4
  %add499 = add nsw i32 %shr498, %441
  %idxprom500 = sext i32 %add499 to i64
  %442 = load i32*****, i32****** @all_bwmincost, align 8
  %arrayidx501 = getelementptr inbounds i32****, i32***** %442, i64 %idxprom500
  %443 = load i32****, i32***** %arrayidx501, align 8
  %arrayidx502 = getelementptr inbounds i32***, i32**** %443, i64 %idxprom496
  %444 = load i32***, i32**** %arrayidx502, align 8
  %arrayidx503 = getelementptr inbounds i32**, i32*** %444, i64 0
  %445 = load i32**, i32*** %arrayidx503, align 8
  %arrayidx504 = getelementptr inbounds i32*, i32** %445, i64 1
  %446 = load i32*, i32** %arrayidx504, align 8
  %arrayidx505 = getelementptr inbounds i32, i32* %446, i64 0
  %447 = load i32, i32* %arrayidx505, align 4
  br label %cond.end.521

cond.false.506:                                   ; preds = %if.then.467
  %448 = load i16, i16* %ref.addr, align 2
  %idxprom507 = sext i16 %448 to i64
  %449 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y508 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %449, i32 0, i32 34
  %450 = load i32, i32* %pix_y508, align 4
  %shr509 = ashr i32 %450, 2
  %451 = load i32, i32* %block_y, align 4
  %add510 = add nsw i32 %shr509, %451
  %idxprom511 = sext i32 %add510 to i64
  %452 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x512 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %452, i32 0, i32 33
  %453 = load i32, i32* %pix_x512, align 4
  %shr513 = ashr i32 %453, 2
  %454 = load i32, i32* %block_x, align 4
  %add514 = add nsw i32 %shr513, %454
  %idxprom515 = sext i32 %add514 to i64
  %455 = load i32*****, i32****** @all_mincost, align 8
  %arrayidx516 = getelementptr inbounds i32****, i32***** %455, i64 %idxprom515
  %456 = load i32****, i32***** %arrayidx516, align 8
  %arrayidx517 = getelementptr inbounds i32***, i32**** %456, i64 %idxprom511
  %457 = load i32***, i32**** %arrayidx517, align 8
  %arrayidx518 = getelementptr inbounds i32**, i32*** %457, i64 %idxprom507
  %458 = load i32**, i32*** %arrayidx518, align 8
  %arrayidx519 = getelementptr inbounds i32*, i32** %458, i64 1
  %459 = load i32*, i32** %arrayidx519, align 8
  %arrayidx520 = getelementptr inbounds i32, i32* %459, i64 0
  %460 = load i32, i32* %arrayidx520, align 4
  br label %cond.end.521

cond.end.521:                                     ; preds = %cond.false.506, %cond.true.492
  %cond522 = phi i32 [ %447, %cond.true.492 ], [ %460, %cond.false.506 ]
  store i32 %cond522, i32* @pred_SAD_uplayer, align 4
  %461 = load i32, i32* @pred_SAD_uplayer, align 4
  %div523 = sdiv i32 %461, 2
  store i32 %div523, i32* @pred_SAD_uplayer, align 4
  br label %if.end.524

if.end.524:                                       ; preds = %cond.end.521, %if.else.464
  br label %if.end.525

if.end.525:                                       ; preds = %if.end.524, %cond.end.461
  br label %if.end.526

if.end.526:                                       ; preds = %if.end.525, %cond.end.401
  br label %if.end.527

if.end.527:                                       ; preds = %if.end.526, %cond.end.341
  br label %if.end.528

if.end.528:                                       ; preds = %if.end.527, %land.lhs.true, %if.end.279
  %462 = load i32, i32* @flag_intra_SAD, align 4
  %tobool529 = icmp ne i32 %462, 0
  br i1 %tobool529, label %cond.true.530, label %cond.false.531

cond.true.530:                                    ; preds = %if.end.528
  br label %cond.end.532

cond.false.531:                                   ; preds = %if.end.528
  %463 = load i32, i32* @pred_SAD_uplayer, align 4
  br label %cond.end.532

cond.end.532:                                     ; preds = %cond.false.531, %cond.true.530
  %cond533 = phi i32 [ 0, %cond.true.530 ], [ %463, %cond.false.531 ]
  store i32 %cond533, i32* @pred_SAD_uplayer, align 4
  %464 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %number = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %464, i32 0, i32 0
  %465 = load i32, i32* %number, align 4
  %466 = load i16, i16* %ref.addr, align 2
  %conv534 = sext i16 %466 to i32
  %add535 = add nsw i32 %conv534, 1
  %cmp536 = icmp sgt i32 %465, %add535
  br i1 %cmp536, label %if.then.538, label %if.end.584

if.then.538:                                      ; preds = %cond.end.532
  %467 = load i32, i32* %blocktype.addr, align 4
  %idxprom539 = sext i32 %467 to i64
  %468 = load i16, i16* %ref.addr, align 2
  %idxprom540 = sext i16 %468 to i64
  %469 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y541 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %469, i32 0, i32 34
  %470 = load i32, i32* %pix_y541, align 4
  %shr542 = ashr i32 %470, 2
  %471 = load i32, i32* %block_y, align 4
  %add543 = add nsw i32 %shr542, %471
  %idxprom544 = sext i32 %add543 to i64
  %472 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x545 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %472, i32 0, i32 33
  %473 = load i32, i32* %pix_x545, align 4
  %shr546 = ashr i32 %473, 2
  %474 = load i32, i32* %block_x, align 4
  %add547 = add nsw i32 %shr546, %474
  %idxprom548 = sext i32 %add547 to i64
  %475 = load i32*****, i32****** @all_mincost, align 8
  %arrayidx549 = getelementptr inbounds i32****, i32***** %475, i64 %idxprom548
  %476 = load i32****, i32***** %arrayidx549, align 8
  %arrayidx550 = getelementptr inbounds i32***, i32**** %476, i64 %idxprom544
  %477 = load i32***, i32**** %arrayidx550, align 8
  %arrayidx551 = getelementptr inbounds i32**, i32*** %477, i64 %idxprom540
  %478 = load i32**, i32*** %arrayidx551, align 8
  %arrayidx552 = getelementptr inbounds i32*, i32** %478, i64 %idxprom539
  %479 = load i32*, i32** %arrayidx552, align 8
  %arrayidx553 = getelementptr inbounds i32, i32* %479, i64 0
  %480 = load i32, i32* %arrayidx553, align 4
  store i32 %480, i32* @pred_SAD_time, align 4
  %481 = load i32, i32* %blocktype.addr, align 4
  %idxprom554 = sext i32 %481 to i64
  %482 = load i16, i16* %ref.addr, align 2
  %idxprom555 = sext i16 %482 to i64
  %483 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y556 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %483, i32 0, i32 34
  %484 = load i32, i32* %pix_y556, align 4
  %shr557 = ashr i32 %484, 2
  %485 = load i32, i32* %block_y, align 4
  %add558 = add nsw i32 %shr557, %485
  %idxprom559 = sext i32 %add558 to i64
  %486 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x560 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %486, i32 0, i32 33
  %487 = load i32, i32* %pix_x560, align 4
  %shr561 = ashr i32 %487, 2
  %488 = load i32, i32* %block_x, align 4
  %add562 = add nsw i32 %shr561, %488
  %idxprom563 = sext i32 %add562 to i64
  %489 = load i32*****, i32****** @all_mincost, align 8
  %arrayidx564 = getelementptr inbounds i32****, i32***** %489, i64 %idxprom563
  %490 = load i32****, i32***** %arrayidx564, align 8
  %arrayidx565 = getelementptr inbounds i32***, i32**** %490, i64 %idxprom559
  %491 = load i32***, i32**** %arrayidx565, align 8
  %arrayidx566 = getelementptr inbounds i32**, i32*** %491, i64 %idxprom555
  %492 = load i32**, i32*** %arrayidx566, align 8
  %arrayidx567 = getelementptr inbounds i32*, i32** %492, i64 %idxprom554
  %493 = load i32*, i32** %arrayidx567, align 8
  %arrayidx568 = getelementptr inbounds i32, i32* %493, i64 1
  %494 = load i32, i32* %arrayidx568, align 4
  store i32 %494, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @pred_MV_time, i32 0, i64 0), align 4
  %495 = load i32, i32* %blocktype.addr, align 4
  %idxprom569 = sext i32 %495 to i64
  %496 = load i16, i16* %ref.addr, align 2
  %idxprom570 = sext i16 %496 to i64
  %497 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y571 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %497, i32 0, i32 34
  %498 = load i32, i32* %pix_y571, align 4
  %shr572 = ashr i32 %498, 2
  %499 = load i32, i32* %block_y, align 4
  %add573 = add nsw i32 %shr572, %499
  %idxprom574 = sext i32 %add573 to i64
  %500 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x575 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %500, i32 0, i32 33
  %501 = load i32, i32* %pix_x575, align 4
  %shr576 = ashr i32 %501, 2
  %502 = load i32, i32* %block_x, align 4
  %add577 = add nsw i32 %shr576, %502
  %idxprom578 = sext i32 %add577 to i64
  %503 = load i32*****, i32****** @all_mincost, align 8
  %arrayidx579 = getelementptr inbounds i32****, i32***** %503, i64 %idxprom578
  %504 = load i32****, i32***** %arrayidx579, align 8
  %arrayidx580 = getelementptr inbounds i32***, i32**** %504, i64 %idxprom574
  %505 = load i32***, i32**** %arrayidx580, align 8
  %arrayidx581 = getelementptr inbounds i32**, i32*** %505, i64 %idxprom570
  %506 = load i32**, i32*** %arrayidx581, align 8
  %arrayidx582 = getelementptr inbounds i32*, i32** %506, i64 %idxprom569
  %507 = load i32*, i32** %arrayidx582, align 8
  %arrayidx583 = getelementptr inbounds i32, i32* %507, i64 2
  %508 = load i32, i32* %arrayidx583, align 4
  store i32 %508, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @pred_MV_time, i32 0, i64 1), align 4
  br label %if.end.584

if.end.584:                                       ; preds = %if.then.538, %cond.end.532
  %509 = load i32, i32* %list.addr, align 4
  %cmp585 = icmp eq i32 %509, 1
  br i1 %cmp585, label %land.lhs.true.587, label %if.end.667

land.lhs.true.587:                                ; preds = %if.end.584
  %510 = load i32, i32* @Bframe_ctr, align 4
  %511 = load i32, i32* %N_Bframe, align 4
  %rem588 = srem i32 %510, %511
  %cmp589 = icmp sgt i32 %rem588, 1
  br i1 %cmp589, label %if.then.591, label %if.end.667

if.then.591:                                      ; preds = %land.lhs.true.587
  %512 = load i32, i32* %blocktype.addr, align 4
  %idxprom592 = sext i32 %512 to i64
  %513 = load i16, i16* %ref.addr, align 2
  %idxprom593 = sext i16 %513 to i64
  %514 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y594 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %514, i32 0, i32 34
  %515 = load i32, i32* %pix_y594, align 4
  %shr595 = ashr i32 %515, 2
  %516 = load i32, i32* %block_y, align 4
  %add596 = add nsw i32 %shr595, %516
  %idxprom597 = sext i32 %add596 to i64
  %517 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x598 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %517, i32 0, i32 33
  %518 = load i32, i32* %pix_x598, align 4
  %shr599 = ashr i32 %518, 2
  %519 = load i32, i32* %block_x, align 4
  %add600 = add nsw i32 %shr599, %519
  %idxprom601 = sext i32 %add600 to i64
  %520 = load i32*****, i32****** @all_bwmincost, align 8
  %arrayidx602 = getelementptr inbounds i32****, i32***** %520, i64 %idxprom601
  %521 = load i32****, i32***** %arrayidx602, align 8
  %arrayidx603 = getelementptr inbounds i32***, i32**** %521, i64 %idxprom597
  %522 = load i32***, i32**** %arrayidx603, align 8
  %arrayidx604 = getelementptr inbounds i32**, i32*** %522, i64 %idxprom593
  %523 = load i32**, i32*** %arrayidx604, align 8
  %arrayidx605 = getelementptr inbounds i32*, i32** %523, i64 %idxprom592
  %524 = load i32*, i32** %arrayidx605, align 8
  %arrayidx606 = getelementptr inbounds i32, i32* %524, i64 0
  %525 = load i32, i32* %arrayidx606, align 4
  store i32 %525, i32* @pred_SAD_time, align 4
  %526 = load i32, i32* %blocktype.addr, align 4
  %idxprom607 = sext i32 %526 to i64
  %527 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y608 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %527, i32 0, i32 34
  %528 = load i32, i32* %pix_y608, align 4
  %shr609 = ashr i32 %528, 2
  %529 = load i32, i32* %block_y, align 4
  %add610 = add nsw i32 %shr609, %529
  %idxprom611 = sext i32 %add610 to i64
  %530 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x612 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %530, i32 0, i32 33
  %531 = load i32, i32* %pix_x612, align 4
  %shr613 = ashr i32 %531, 2
  %532 = load i32, i32* %block_x, align 4
  %add614 = add nsw i32 %shr613, %532
  %idxprom615 = sext i32 %add614 to i64
  %533 = load i32*****, i32****** @all_bwmincost, align 8
  %arrayidx616 = getelementptr inbounds i32****, i32***** %533, i64 %idxprom615
  %534 = load i32****, i32***** %arrayidx616, align 8
  %arrayidx617 = getelementptr inbounds i32***, i32**** %534, i64 %idxprom611
  %535 = load i32***, i32**** %arrayidx617, align 8
  %arrayidx618 = getelementptr inbounds i32**, i32*** %535, i64 0
  %536 = load i32**, i32*** %arrayidx618, align 8
  %arrayidx619 = getelementptr inbounds i32*, i32** %536, i64 %idxprom607
  %537 = load i32*, i32** %arrayidx619, align 8
  %arrayidx620 = getelementptr inbounds i32, i32* %537, i64 1
  %538 = load i32, i32* %arrayidx620, align 4
  %conv621 = sitofp i32 %538 to double
  %539 = load i32, i32* %n_Bframe, align 4
  %cmp622 = icmp eq i32 %539, 1
  br i1 %cmp622, label %cond.true.624, label %cond.false.626

cond.true.624:                                    ; preds = %if.then.591
  %540 = load i32, i32* %N_Bframe, align 4
  %conv625 = sitofp i32 %540 to double
  br label %cond.end.633

cond.false.626:                                   ; preds = %if.then.591
  %541 = load i32, i32* %N_Bframe, align 4
  %542 = load i32, i32* %n_Bframe, align 4
  %sub = sub nsw i32 %541, %542
  %conv627 = sitofp i32 %sub to double
  %add628 = fadd double %conv627, 1.000000e+00
  %543 = load i32, i32* %N_Bframe, align 4
  %544 = load i32, i32* %n_Bframe, align 4
  %sub629 = sub nsw i32 %543, %544
  %conv630 = sitofp i32 %sub629 to double
  %add631 = fadd double %conv630, 2.000000e+00
  %div632 = fdiv double %add628, %add631
  br label %cond.end.633

cond.end.633:                                     ; preds = %cond.false.626, %cond.true.624
  %cond634 = phi double [ %conv625, %cond.true.624 ], [ %div632, %cond.false.626 ]
  %mul = fmul double %conv621, %cond634
  %conv635 = fptosi double %mul to i32
  store i32 %conv635, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @pred_MV_time, i32 0, i64 0), align 4
  %545 = load i32, i32* %blocktype.addr, align 4
  %idxprom636 = sext i32 %545 to i64
  %546 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y637 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %546, i32 0, i32 34
  %547 = load i32, i32* %pix_y637, align 4
  %shr638 = ashr i32 %547, 2
  %548 = load i32, i32* %block_y, align 4
  %add639 = add nsw i32 %shr638, %548
  %idxprom640 = sext i32 %add639 to i64
  %549 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x641 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %549, i32 0, i32 33
  %550 = load i32, i32* %pix_x641, align 4
  %shr642 = ashr i32 %550, 2
  %551 = load i32, i32* %block_x, align 4
  %add643 = add nsw i32 %shr642, %551
  %idxprom644 = sext i32 %add643 to i64
  %552 = load i32*****, i32****** @all_bwmincost, align 8
  %arrayidx645 = getelementptr inbounds i32****, i32***** %552, i64 %idxprom644
  %553 = load i32****, i32***** %arrayidx645, align 8
  %arrayidx646 = getelementptr inbounds i32***, i32**** %553, i64 %idxprom640
  %554 = load i32***, i32**** %arrayidx646, align 8
  %arrayidx647 = getelementptr inbounds i32**, i32*** %554, i64 0
  %555 = load i32**, i32*** %arrayidx647, align 8
  %arrayidx648 = getelementptr inbounds i32*, i32** %555, i64 %idxprom636
  %556 = load i32*, i32** %arrayidx648, align 8
  %arrayidx649 = getelementptr inbounds i32, i32* %556, i64 2
  %557 = load i32, i32* %arrayidx649, align 4
  %conv650 = sitofp i32 %557 to double
  %558 = load i32, i32* %n_Bframe, align 4
  %cmp651 = icmp eq i32 %558, 1
  br i1 %cmp651, label %cond.true.653, label %cond.false.655

cond.true.653:                                    ; preds = %cond.end.633
  %559 = load i32, i32* %N_Bframe, align 4
  %conv654 = sitofp i32 %559 to double
  br label %cond.end.663

cond.false.655:                                   ; preds = %cond.end.633
  %560 = load i32, i32* %N_Bframe, align 4
  %561 = load i32, i32* %n_Bframe, align 4
  %sub656 = sub nsw i32 %560, %561
  %conv657 = sitofp i32 %sub656 to double
  %add658 = fadd double %conv657, 1.000000e+00
  %562 = load i32, i32* %N_Bframe, align 4
  %563 = load i32, i32* %n_Bframe, align 4
  %sub659 = sub nsw i32 %562, %563
  %conv660 = sitofp i32 %sub659 to double
  %add661 = fadd double %conv660, 2.000000e+00
  %div662 = fdiv double %add658, %add661
  br label %cond.end.663

cond.end.663:                                     ; preds = %cond.false.655, %cond.true.653
  %cond664 = phi double [ %conv654, %cond.true.653 ], [ %div662, %cond.false.655 ]
  %mul665 = fmul double %conv650, %cond664
  %conv666 = fptosi double %mul665 to i32
  store i32 %conv666, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @pred_MV_time, i32 0, i64 1), align 4
  br label %if.end.667

if.end.667:                                       ; preds = %cond.end.663, %land.lhs.true.587, %if.end.584
  %564 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %564, i32 0, i32 91
  %565 = load i32, i32* %PicInterlace, align 4
  %cmp668 = icmp eq i32 %565, 1
  br i1 %cmp668, label %if.then.670, label %if.else.836

if.then.670:                                      ; preds = %if.end.667
  %566 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type671 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %566, i32 0, i32 6
  %567 = load i32, i32* %type671, align 4
  %cmp672 = icmp eq i32 %567, 0
  br i1 %cmp672, label %land.lhs.true.674, label %if.end.755

land.lhs.true.674:                                ; preds = %if.then.670
  %568 = load i16, i16* %ref.addr, align 2
  %conv675 = sext i16 %568 to i32
  %cmp676 = icmp sgt i32 %conv675, 1
  br i1 %cmp676, label %if.then.678, label %if.end.755

if.then.678:                                      ; preds = %land.lhs.true.674
  %569 = load i32, i32* %blocktype.addr, align 4
  %idxprom679 = sext i32 %569 to i64
  %570 = load i16, i16* %ref.addr, align 2
  %conv680 = sext i16 %570 to i32
  %sub681 = sub nsw i32 %conv680, 2
  %idxprom682 = sext i32 %sub681 to i64
  %571 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y683 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %571, i32 0, i32 34
  %572 = load i32, i32* %pix_y683, align 4
  %shr684 = ashr i32 %572, 2
  %573 = load i32, i32* %block_y, align 4
  %add685 = add nsw i32 %shr684, %573
  %idxprom686 = sext i32 %add685 to i64
  %574 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x687 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %574, i32 0, i32 33
  %575 = load i32, i32* %pix_x687, align 4
  %shr688 = ashr i32 %575, 2
  %576 = load i32, i32* %block_x, align 4
  %add689 = add nsw i32 %shr688, %576
  %idxprom690 = sext i32 %add689 to i64
  %577 = load i32*****, i32****** @all_mincost, align 8
  %arrayidx691 = getelementptr inbounds i32****, i32***** %577, i64 %idxprom690
  %578 = load i32****, i32***** %arrayidx691, align 8
  %arrayidx692 = getelementptr inbounds i32***, i32**** %578, i64 %idxprom686
  %579 = load i32***, i32**** %arrayidx692, align 8
  %arrayidx693 = getelementptr inbounds i32**, i32*** %579, i64 %idxprom682
  %580 = load i32**, i32*** %arrayidx693, align 8
  %arrayidx694 = getelementptr inbounds i32*, i32** %580, i64 %idxprom679
  %581 = load i32*, i32** %arrayidx694, align 8
  %arrayidx695 = getelementptr inbounds i32, i32* %581, i64 0
  %582 = load i32, i32* %arrayidx695, align 4
  store i32 %582, i32* @pred_SAD_ref, align 4
  %583 = load i32, i32* @flag_intra_SAD, align 4
  %tobool696 = icmp ne i32 %583, 0
  br i1 %tobool696, label %cond.true.697, label %cond.false.698

cond.true.697:                                    ; preds = %if.then.678
  br label %cond.end.699

cond.false.698:                                   ; preds = %if.then.678
  %584 = load i32, i32* @pred_SAD_ref, align 4
  br label %cond.end.699

cond.end.699:                                     ; preds = %cond.false.698, %cond.true.697
  %cond700 = phi i32 [ 0, %cond.true.697 ], [ %584, %cond.false.698 ]
  store i32 %cond700, i32* @pred_SAD_ref, align 4
  %585 = load i32, i32* %blocktype.addr, align 4
  %idxprom701 = sext i32 %585 to i64
  %586 = load i16, i16* %ref.addr, align 2
  %conv702 = sext i16 %586 to i32
  %sub703 = sub nsw i32 %conv702, 2
  %idxprom704 = sext i32 %sub703 to i64
  %587 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y705 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %587, i32 0, i32 34
  %588 = load i32, i32* %pix_y705, align 4
  %shr706 = ashr i32 %588, 2
  %589 = load i32, i32* %block_y, align 4
  %add707 = add nsw i32 %shr706, %589
  %idxprom708 = sext i32 %add707 to i64
  %590 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x709 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %590, i32 0, i32 33
  %591 = load i32, i32* %pix_x709, align 4
  %shr710 = ashr i32 %591, 2
  %592 = load i32, i32* %block_x, align 4
  %add711 = add nsw i32 %shr710, %592
  %idxprom712 = sext i32 %add711 to i64
  %593 = load i32*****, i32****** @all_mincost, align 8
  %arrayidx713 = getelementptr inbounds i32****, i32***** %593, i64 %idxprom712
  %594 = load i32****, i32***** %arrayidx713, align 8
  %arrayidx714 = getelementptr inbounds i32***, i32**** %594, i64 %idxprom708
  %595 = load i32***, i32**** %arrayidx714, align 8
  %arrayidx715 = getelementptr inbounds i32**, i32*** %595, i64 %idxprom704
  %596 = load i32**, i32*** %arrayidx715, align 8
  %arrayidx716 = getelementptr inbounds i32*, i32** %596, i64 %idxprom701
  %597 = load i32*, i32** %arrayidx716, align 8
  %arrayidx717 = getelementptr inbounds i32, i32* %597, i64 1
  %598 = load i32, i32* %arrayidx717, align 4
  store i32 %598, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @pred_MV_ref, i32 0, i64 0), align 4
  %599 = load i32, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @pred_MV_ref, i32 0, i64 0), align 4
  %600 = load i16, i16* %ref.addr, align 2
  %conv718 = sext i16 %600 to i32
  %shr719 = ashr i32 %conv718, 1
  %add720 = add nsw i32 %shr719, 1
  %mul721 = mul nsw i32 %599, %add720
  %conv722 = sitofp i32 %mul721 to float
  %601 = load i16, i16* %ref.addr, align 2
  %conv723 = sext i16 %601 to i32
  %shr724 = ashr i32 %conv723, 1
  %conv725 = sitofp i32 %shr724 to float
  %div726 = fdiv float %conv722, %conv725
  %conv727 = fptosi float %div726 to i32
  store i32 %conv727, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @pred_MV_ref, i32 0, i64 0), align 4
  %602 = load i32, i32* %blocktype.addr, align 4
  %idxprom728 = sext i32 %602 to i64
  %603 = load i16, i16* %ref.addr, align 2
  %conv729 = sext i16 %603 to i32
  %sub730 = sub nsw i32 %conv729, 2
  %idxprom731 = sext i32 %sub730 to i64
  %604 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y732 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %604, i32 0, i32 34
  %605 = load i32, i32* %pix_y732, align 4
  %shr733 = ashr i32 %605, 2
  %606 = load i32, i32* %block_y, align 4
  %add734 = add nsw i32 %shr733, %606
  %idxprom735 = sext i32 %add734 to i64
  %607 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x736 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %607, i32 0, i32 33
  %608 = load i32, i32* %pix_x736, align 4
  %shr737 = ashr i32 %608, 2
  %609 = load i32, i32* %block_x, align 4
  %add738 = add nsw i32 %shr737, %609
  %idxprom739 = sext i32 %add738 to i64
  %610 = load i32*****, i32****** @all_mincost, align 8
  %arrayidx740 = getelementptr inbounds i32****, i32***** %610, i64 %idxprom739
  %611 = load i32****, i32***** %arrayidx740, align 8
  %arrayidx741 = getelementptr inbounds i32***, i32**** %611, i64 %idxprom735
  %612 = load i32***, i32**** %arrayidx741, align 8
  %arrayidx742 = getelementptr inbounds i32**, i32*** %612, i64 %idxprom731
  %613 = load i32**, i32*** %arrayidx742, align 8
  %arrayidx743 = getelementptr inbounds i32*, i32** %613, i64 %idxprom728
  %614 = load i32*, i32** %arrayidx743, align 8
  %arrayidx744 = getelementptr inbounds i32, i32* %614, i64 2
  %615 = load i32, i32* %arrayidx744, align 4
  store i32 %615, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @pred_MV_ref, i32 0, i64 1), align 4
  %616 = load i32, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @pred_MV_ref, i32 0, i64 1), align 4
  %617 = load i16, i16* %ref.addr, align 2
  %conv745 = sext i16 %617 to i32
  %shr746 = ashr i32 %conv745, 1
  %add747 = add nsw i32 %shr746, 1
  %mul748 = mul nsw i32 %616, %add747
  %conv749 = sitofp i32 %mul748 to float
  %618 = load i16, i16* %ref.addr, align 2
  %conv750 = sext i16 %618 to i32
  %shr751 = ashr i32 %conv750, 1
  %conv752 = sitofp i32 %shr751 to float
  %div753 = fdiv float %conv749, %conv752
  %conv754 = fptosi float %div753 to i32
  store i32 %conv754, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @pred_MV_ref, i32 0, i64 1), align 4
  br label %if.end.755

if.end.755:                                       ; preds = %cond.end.699, %land.lhs.true.674, %if.then.670
  %619 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type756 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %619, i32 0, i32 6
  %620 = load i32, i32* %type756, align 4
  %cmp757 = icmp eq i32 %620, 1
  br i1 %cmp757, label %land.lhs.true.759, label %if.end.835

land.lhs.true.759:                                ; preds = %if.end.755
  %621 = load i32, i32* %list.addr, align 4
  %cmp760 = icmp eq i32 %621, 0
  br i1 %cmp760, label %land.lhs.true.762, label %if.end.835

land.lhs.true.762:                                ; preds = %land.lhs.true.759
  %622 = load i16, i16* %ref.addr, align 2
  %conv763 = sext i16 %622 to i32
  %cmp764 = icmp eq i32 %conv763, 0
  br i1 %cmp764, label %if.then.769, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true.762
  %623 = load i16, i16* %ref.addr, align 2
  %conv766 = sext i16 %623 to i32
  %cmp767 = icmp eq i32 %conv766, 1
  br i1 %cmp767, label %if.then.769, label %if.end.835

if.then.769:                                      ; preds = %lor.lhs.false, %land.lhs.true.762
  %624 = load i32, i32* %blocktype.addr, align 4
  %idxprom770 = sext i32 %624 to i64
  %625 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y771 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %625, i32 0, i32 34
  %626 = load i32, i32* %pix_y771, align 4
  %shr772 = ashr i32 %626, 2
  %627 = load i32, i32* %block_y, align 4
  %add773 = add nsw i32 %shr772, %627
  %idxprom774 = sext i32 %add773 to i64
  %628 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x775 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %628, i32 0, i32 33
  %629 = load i32, i32* %pix_x775, align 4
  %shr776 = ashr i32 %629, 2
  %630 = load i32, i32* %block_x, align 4
  %add777 = add nsw i32 %shr776, %630
  %idxprom778 = sext i32 %add777 to i64
  %631 = load i32*****, i32****** @all_bwmincost, align 8
  %arrayidx779 = getelementptr inbounds i32****, i32***** %631, i64 %idxprom778
  %632 = load i32****, i32***** %arrayidx779, align 8
  %arrayidx780 = getelementptr inbounds i32***, i32**** %632, i64 %idxprom774
  %633 = load i32***, i32**** %arrayidx780, align 8
  %arrayidx781 = getelementptr inbounds i32**, i32*** %633, i64 0
  %634 = load i32**, i32*** %arrayidx781, align 8
  %arrayidx782 = getelementptr inbounds i32*, i32** %634, i64 %idxprom770
  %635 = load i32*, i32** %arrayidx782, align 8
  %arrayidx783 = getelementptr inbounds i32, i32* %635, i64 0
  %636 = load i32, i32* %arrayidx783, align 4
  store i32 %636, i32* @pred_SAD_ref, align 4
  %637 = load i32, i32* @flag_intra_SAD, align 4
  %tobool784 = icmp ne i32 %637, 0
  br i1 %tobool784, label %cond.true.785, label %cond.false.786

cond.true.785:                                    ; preds = %if.then.769
  br label %cond.end.787

cond.false.786:                                   ; preds = %if.then.769
  %638 = load i32, i32* @pred_SAD_ref, align 4
  br label %cond.end.787

cond.end.787:                                     ; preds = %cond.false.786, %cond.true.785
  %cond788 = phi i32 [ 0, %cond.true.785 ], [ %638, %cond.false.786 ]
  store i32 %cond788, i32* @pred_SAD_ref, align 4
  %639 = load i32, i32* %blocktype.addr, align 4
  %idxprom789 = sext i32 %639 to i64
  %640 = load i16, i16* %ref.addr, align 2
  %idxprom790 = sext i16 %640 to i64
  %641 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y791 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %641, i32 0, i32 34
  %642 = load i32, i32* %pix_y791, align 4
  %shr792 = ashr i32 %642, 2
  %643 = load i32, i32* %block_y, align 4
  %add793 = add nsw i32 %shr792, %643
  %idxprom794 = sext i32 %add793 to i64
  %644 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x795 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %644, i32 0, i32 33
  %645 = load i32, i32* %pix_x795, align 4
  %shr796 = ashr i32 %645, 2
  %646 = load i32, i32* %block_x, align 4
  %add797 = add nsw i32 %shr796, %646
  %idxprom798 = sext i32 %add797 to i64
  %647 = load i32*****, i32****** @all_bwmincost, align 8
  %arrayidx799 = getelementptr inbounds i32****, i32***** %647, i64 %idxprom798
  %648 = load i32****, i32***** %arrayidx799, align 8
  %arrayidx800 = getelementptr inbounds i32***, i32**** %648, i64 %idxprom794
  %649 = load i32***, i32**** %arrayidx800, align 8
  %arrayidx801 = getelementptr inbounds i32**, i32*** %649, i64 %idxprom790
  %650 = load i32**, i32*** %arrayidx801, align 8
  %arrayidx802 = getelementptr inbounds i32*, i32** %650, i64 %idxprom789
  %651 = load i32*, i32** %arrayidx802, align 8
  %arrayidx803 = getelementptr inbounds i32, i32* %651, i64 1
  %652 = load i32, i32* %arrayidx803, align 4
  %653 = load i32, i32* %n_Bframe, align 4
  %sub804 = sub nsw i32 0, %653
  %mul805 = mul nsw i32 %652, %sub804
  %conv806 = sitofp i32 %mul805 to float
  %654 = load i32, i32* %N_Bframe, align 4
  %655 = load i32, i32* %n_Bframe, align 4
  %sub807 = sub nsw i32 %654, %655
  %conv808 = sitofp i32 %sub807 to float
  %add809 = fadd float %conv808, 1.000000e+00
  %div810 = fdiv float %conv806, %add809
  %conv811 = fptosi float %div810 to i32
  store i32 %conv811, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @pred_MV_ref, i32 0, i64 0), align 4
  %656 = load i32, i32* %blocktype.addr, align 4
  %idxprom812 = sext i32 %656 to i64
  %657 = load i16, i16* %ref.addr, align 2
  %idxprom813 = sext i16 %657 to i64
  %658 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y814 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %658, i32 0, i32 34
  %659 = load i32, i32* %pix_y814, align 4
  %shr815 = ashr i32 %659, 2
  %660 = load i32, i32* %block_y, align 4
  %add816 = add nsw i32 %shr815, %660
  %idxprom817 = sext i32 %add816 to i64
  %661 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x818 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %661, i32 0, i32 33
  %662 = load i32, i32* %pix_x818, align 4
  %shr819 = ashr i32 %662, 2
  %663 = load i32, i32* %block_x, align 4
  %add820 = add nsw i32 %shr819, %663
  %idxprom821 = sext i32 %add820 to i64
  %664 = load i32*****, i32****** @all_bwmincost, align 8
  %arrayidx822 = getelementptr inbounds i32****, i32***** %664, i64 %idxprom821
  %665 = load i32****, i32***** %arrayidx822, align 8
  %arrayidx823 = getelementptr inbounds i32***, i32**** %665, i64 %idxprom817
  %666 = load i32***, i32**** %arrayidx823, align 8
  %arrayidx824 = getelementptr inbounds i32**, i32*** %666, i64 %idxprom813
  %667 = load i32**, i32*** %arrayidx824, align 8
  %arrayidx825 = getelementptr inbounds i32*, i32** %667, i64 %idxprom812
  %668 = load i32*, i32** %arrayidx825, align 8
  %arrayidx826 = getelementptr inbounds i32, i32* %668, i64 2
  %669 = load i32, i32* %arrayidx826, align 4
  %670 = load i32, i32* %n_Bframe, align 4
  %sub827 = sub nsw i32 0, %670
  %mul828 = mul nsw i32 %669, %sub827
  %conv829 = sitofp i32 %mul828 to float
  %671 = load i32, i32* %N_Bframe, align 4
  %672 = load i32, i32* %n_Bframe, align 4
  %sub830 = sub nsw i32 %671, %672
  %conv831 = sitofp i32 %sub830 to float
  %add832 = fadd float %conv831, 1.000000e+00
  %div833 = fdiv float %conv829, %add832
  %conv834 = fptosi float %div833 to i32
  store i32 %conv834, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @pred_MV_ref, i32 0, i64 1), align 4
  br label %if.end.835

if.end.835:                                       ; preds = %cond.end.787, %lor.lhs.false, %land.lhs.true.759, %if.end.755
  br label %if.end.989

if.else.836:                                      ; preds = %if.end.667
  %673 = load i16, i16* %ref.addr, align 2
  %conv837 = sext i16 %673 to i32
  %cmp838 = icmp sgt i32 %conv837, 0
  br i1 %cmp838, label %if.then.840, label %if.end.911

if.then.840:                                      ; preds = %if.else.836
  %674 = load i32, i32* %blocktype.addr, align 4
  %idxprom841 = sext i32 %674 to i64
  %675 = load i16, i16* %ref.addr, align 2
  %conv842 = sext i16 %675 to i32
  %sub843 = sub nsw i32 %conv842, 1
  %idxprom844 = sext i32 %sub843 to i64
  %676 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y845 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %676, i32 0, i32 34
  %677 = load i32, i32* %pix_y845, align 4
  %shr846 = ashr i32 %677, 2
  %678 = load i32, i32* %block_y, align 4
  %add847 = add nsw i32 %shr846, %678
  %idxprom848 = sext i32 %add847 to i64
  %679 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x849 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %679, i32 0, i32 33
  %680 = load i32, i32* %pix_x849, align 4
  %shr850 = ashr i32 %680, 2
  %681 = load i32, i32* %block_x, align 4
  %add851 = add nsw i32 %shr850, %681
  %idxprom852 = sext i32 %add851 to i64
  %682 = load i32*****, i32****** @all_mincost, align 8
  %arrayidx853 = getelementptr inbounds i32****, i32***** %682, i64 %idxprom852
  %683 = load i32****, i32***** %arrayidx853, align 8
  %arrayidx854 = getelementptr inbounds i32***, i32**** %683, i64 %idxprom848
  %684 = load i32***, i32**** %arrayidx854, align 8
  %arrayidx855 = getelementptr inbounds i32**, i32*** %684, i64 %idxprom844
  %685 = load i32**, i32*** %arrayidx855, align 8
  %arrayidx856 = getelementptr inbounds i32*, i32** %685, i64 %idxprom841
  %686 = load i32*, i32** %arrayidx856, align 8
  %arrayidx857 = getelementptr inbounds i32, i32* %686, i64 0
  %687 = load i32, i32* %arrayidx857, align 4
  store i32 %687, i32* @pred_SAD_ref, align 4
  %688 = load i32, i32* @flag_intra_SAD, align 4
  %tobool858 = icmp ne i32 %688, 0
  br i1 %tobool858, label %cond.true.859, label %cond.false.860

cond.true.859:                                    ; preds = %if.then.840
  br label %cond.end.861

cond.false.860:                                   ; preds = %if.then.840
  %689 = load i32, i32* @pred_SAD_ref, align 4
  br label %cond.end.861

cond.end.861:                                     ; preds = %cond.false.860, %cond.true.859
  %cond862 = phi i32 [ 0, %cond.true.859 ], [ %689, %cond.false.860 ]
  store i32 %cond862, i32* @pred_SAD_ref, align 4
  %690 = load i32, i32* %blocktype.addr, align 4
  %idxprom863 = sext i32 %690 to i64
  %691 = load i16, i16* %ref.addr, align 2
  %conv864 = sext i16 %691 to i32
  %sub865 = sub nsw i32 %conv864, 1
  %idxprom866 = sext i32 %sub865 to i64
  %692 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y867 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %692, i32 0, i32 34
  %693 = load i32, i32* %pix_y867, align 4
  %shr868 = ashr i32 %693, 2
  %694 = load i32, i32* %block_y, align 4
  %add869 = add nsw i32 %shr868, %694
  %idxprom870 = sext i32 %add869 to i64
  %695 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x871 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %695, i32 0, i32 33
  %696 = load i32, i32* %pix_x871, align 4
  %shr872 = ashr i32 %696, 2
  %697 = load i32, i32* %block_x, align 4
  %add873 = add nsw i32 %shr872, %697
  %idxprom874 = sext i32 %add873 to i64
  %698 = load i32*****, i32****** @all_mincost, align 8
  %arrayidx875 = getelementptr inbounds i32****, i32***** %698, i64 %idxprom874
  %699 = load i32****, i32***** %arrayidx875, align 8
  %arrayidx876 = getelementptr inbounds i32***, i32**** %699, i64 %idxprom870
  %700 = load i32***, i32**** %arrayidx876, align 8
  %arrayidx877 = getelementptr inbounds i32**, i32*** %700, i64 %idxprom866
  %701 = load i32**, i32*** %arrayidx877, align 8
  %arrayidx878 = getelementptr inbounds i32*, i32** %701, i64 %idxprom863
  %702 = load i32*, i32** %arrayidx878, align 8
  %arrayidx879 = getelementptr inbounds i32, i32* %702, i64 1
  %703 = load i32, i32* %arrayidx879, align 4
  store i32 %703, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @pred_MV_ref, i32 0, i64 0), align 4
  %704 = load i32, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @pred_MV_ref, i32 0, i64 0), align 4
  %705 = load i16, i16* %ref.addr, align 2
  %conv880 = sext i16 %705 to i32
  %add881 = add nsw i32 %conv880, 1
  %mul882 = mul nsw i32 %704, %add881
  %conv883 = sitofp i32 %mul882 to float
  %706 = load i16, i16* %ref.addr, align 2
  %conv884 = sitofp i16 %706 to float
  %div885 = fdiv float %conv883, %conv884
  %conv886 = fptosi float %div885 to i32
  store i32 %conv886, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @pred_MV_ref, i32 0, i64 0), align 4
  %707 = load i32, i32* %blocktype.addr, align 4
  %idxprom887 = sext i32 %707 to i64
  %708 = load i16, i16* %ref.addr, align 2
  %conv888 = sext i16 %708 to i32
  %sub889 = sub nsw i32 %conv888, 1
  %idxprom890 = sext i32 %sub889 to i64
  %709 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y891 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %709, i32 0, i32 34
  %710 = load i32, i32* %pix_y891, align 4
  %shr892 = ashr i32 %710, 2
  %711 = load i32, i32* %block_y, align 4
  %add893 = add nsw i32 %shr892, %711
  %idxprom894 = sext i32 %add893 to i64
  %712 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x895 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %712, i32 0, i32 33
  %713 = load i32, i32* %pix_x895, align 4
  %shr896 = ashr i32 %713, 2
  %714 = load i32, i32* %block_x, align 4
  %add897 = add nsw i32 %shr896, %714
  %idxprom898 = sext i32 %add897 to i64
  %715 = load i32*****, i32****** @all_mincost, align 8
  %arrayidx899 = getelementptr inbounds i32****, i32***** %715, i64 %idxprom898
  %716 = load i32****, i32***** %arrayidx899, align 8
  %arrayidx900 = getelementptr inbounds i32***, i32**** %716, i64 %idxprom894
  %717 = load i32***, i32**** %arrayidx900, align 8
  %arrayidx901 = getelementptr inbounds i32**, i32*** %717, i64 %idxprom890
  %718 = load i32**, i32*** %arrayidx901, align 8
  %arrayidx902 = getelementptr inbounds i32*, i32** %718, i64 %idxprom887
  %719 = load i32*, i32** %arrayidx902, align 8
  %arrayidx903 = getelementptr inbounds i32, i32* %719, i64 2
  %720 = load i32, i32* %arrayidx903, align 4
  store i32 %720, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @pred_MV_ref, i32 0, i64 1), align 4
  %721 = load i32, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @pred_MV_ref, i32 0, i64 1), align 4
  %722 = load i16, i16* %ref.addr, align 2
  %conv904 = sext i16 %722 to i32
  %add905 = add nsw i32 %conv904, 1
  %mul906 = mul nsw i32 %721, %add905
  %conv907 = sitofp i32 %mul906 to float
  %723 = load i16, i16* %ref.addr, align 2
  %conv908 = sitofp i16 %723 to float
  %div909 = fdiv float %conv907, %conv908
  %conv910 = fptosi float %div909 to i32
  store i32 %conv910, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @pred_MV_ref, i32 0, i64 1), align 4
  br label %if.end.911

if.end.911:                                       ; preds = %cond.end.861, %if.else.836
  %724 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type912 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %724, i32 0, i32 6
  %725 = load i32, i32* %type912, align 4
  %cmp913 = icmp eq i32 %725, 1
  br i1 %cmp913, label %land.lhs.true.915, label %if.end.988

land.lhs.true.915:                                ; preds = %if.end.911
  %726 = load i32, i32* %list.addr, align 4
  %cmp916 = icmp eq i32 %726, 0
  br i1 %cmp916, label %land.lhs.true.918, label %if.end.988

land.lhs.true.918:                                ; preds = %land.lhs.true.915
  %727 = load i16, i16* %ref.addr, align 2
  %conv919 = sext i16 %727 to i32
  %cmp920 = icmp eq i32 %conv919, 0
  br i1 %cmp920, label %if.then.922, label %if.end.988

if.then.922:                                      ; preds = %land.lhs.true.918
  %728 = load i32, i32* %blocktype.addr, align 4
  %idxprom923 = sext i32 %728 to i64
  %729 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y924 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %729, i32 0, i32 34
  %730 = load i32, i32* %pix_y924, align 4
  %shr925 = ashr i32 %730, 2
  %731 = load i32, i32* %block_y, align 4
  %add926 = add nsw i32 %shr925, %731
  %idxprom927 = sext i32 %add926 to i64
  %732 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x928 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %732, i32 0, i32 33
  %733 = load i32, i32* %pix_x928, align 4
  %shr929 = ashr i32 %733, 2
  %734 = load i32, i32* %block_x, align 4
  %add930 = add nsw i32 %shr929, %734
  %idxprom931 = sext i32 %add930 to i64
  %735 = load i32*****, i32****** @all_bwmincost, align 8
  %arrayidx932 = getelementptr inbounds i32****, i32***** %735, i64 %idxprom931
  %736 = load i32****, i32***** %arrayidx932, align 8
  %arrayidx933 = getelementptr inbounds i32***, i32**** %736, i64 %idxprom927
  %737 = load i32***, i32**** %arrayidx933, align 8
  %arrayidx934 = getelementptr inbounds i32**, i32*** %737, i64 0
  %738 = load i32**, i32*** %arrayidx934, align 8
  %arrayidx935 = getelementptr inbounds i32*, i32** %738, i64 %idxprom923
  %739 = load i32*, i32** %arrayidx935, align 8
  %arrayidx936 = getelementptr inbounds i32, i32* %739, i64 0
  %740 = load i32, i32* %arrayidx936, align 4
  store i32 %740, i32* @pred_SAD_ref, align 4
  %741 = load i32, i32* @flag_intra_SAD, align 4
  %tobool937 = icmp ne i32 %741, 0
  br i1 %tobool937, label %cond.true.938, label %cond.false.939

cond.true.938:                                    ; preds = %if.then.922
  br label %cond.end.940

cond.false.939:                                   ; preds = %if.then.922
  %742 = load i32, i32* @pred_SAD_ref, align 4
  br label %cond.end.940

cond.end.940:                                     ; preds = %cond.false.939, %cond.true.938
  %cond941 = phi i32 [ 0, %cond.true.938 ], [ %742, %cond.false.939 ]
  store i32 %cond941, i32* @pred_SAD_ref, align 4
  %743 = load i32, i32* %blocktype.addr, align 4
  %idxprom942 = sext i32 %743 to i64
  %744 = load i16, i16* %ref.addr, align 2
  %idxprom943 = sext i16 %744 to i64
  %745 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y944 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %745, i32 0, i32 34
  %746 = load i32, i32* %pix_y944, align 4
  %shr945 = ashr i32 %746, 2
  %747 = load i32, i32* %block_y, align 4
  %add946 = add nsw i32 %shr945, %747
  %idxprom947 = sext i32 %add946 to i64
  %748 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x948 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %748, i32 0, i32 33
  %749 = load i32, i32* %pix_x948, align 4
  %shr949 = ashr i32 %749, 2
  %750 = load i32, i32* %block_x, align 4
  %add950 = add nsw i32 %shr949, %750
  %idxprom951 = sext i32 %add950 to i64
  %751 = load i32*****, i32****** @all_bwmincost, align 8
  %arrayidx952 = getelementptr inbounds i32****, i32***** %751, i64 %idxprom951
  %752 = load i32****, i32***** %arrayidx952, align 8
  %arrayidx953 = getelementptr inbounds i32***, i32**** %752, i64 %idxprom947
  %753 = load i32***, i32**** %arrayidx953, align 8
  %arrayidx954 = getelementptr inbounds i32**, i32*** %753, i64 %idxprom943
  %754 = load i32**, i32*** %arrayidx954, align 8
  %arrayidx955 = getelementptr inbounds i32*, i32** %754, i64 %idxprom942
  %755 = load i32*, i32** %arrayidx955, align 8
  %arrayidx956 = getelementptr inbounds i32, i32* %755, i64 1
  %756 = load i32, i32* %arrayidx956, align 4
  %757 = load i32, i32* %n_Bframe, align 4
  %sub957 = sub nsw i32 0, %757
  %mul958 = mul nsw i32 %756, %sub957
  %conv959 = sitofp i32 %mul958 to float
  %758 = load i32, i32* %N_Bframe, align 4
  %759 = load i32, i32* %n_Bframe, align 4
  %sub960 = sub nsw i32 %758, %759
  %conv961 = sitofp i32 %sub960 to float
  %add962 = fadd float %conv961, 1.000000e+00
  %div963 = fdiv float %conv959, %add962
  %conv964 = fptosi float %div963 to i32
  store i32 %conv964, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @pred_MV_ref, i32 0, i64 0), align 4
  %760 = load i32, i32* %blocktype.addr, align 4
  %idxprom965 = sext i32 %760 to i64
  %761 = load i16, i16* %ref.addr, align 2
  %idxprom966 = sext i16 %761 to i64
  %762 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y967 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %762, i32 0, i32 34
  %763 = load i32, i32* %pix_y967, align 4
  %shr968 = ashr i32 %763, 2
  %764 = load i32, i32* %block_y, align 4
  %add969 = add nsw i32 %shr968, %764
  %idxprom970 = sext i32 %add969 to i64
  %765 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x971 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %765, i32 0, i32 33
  %766 = load i32, i32* %pix_x971, align 4
  %shr972 = ashr i32 %766, 2
  %767 = load i32, i32* %block_x, align 4
  %add973 = add nsw i32 %shr972, %767
  %idxprom974 = sext i32 %add973 to i64
  %768 = load i32*****, i32****** @all_bwmincost, align 8
  %arrayidx975 = getelementptr inbounds i32****, i32***** %768, i64 %idxprom974
  %769 = load i32****, i32***** %arrayidx975, align 8
  %arrayidx976 = getelementptr inbounds i32***, i32**** %769, i64 %idxprom970
  %770 = load i32***, i32**** %arrayidx976, align 8
  %arrayidx977 = getelementptr inbounds i32**, i32*** %770, i64 %idxprom966
  %771 = load i32**, i32*** %arrayidx977, align 8
  %arrayidx978 = getelementptr inbounds i32*, i32** %771, i64 %idxprom965
  %772 = load i32*, i32** %arrayidx978, align 8
  %arrayidx979 = getelementptr inbounds i32, i32* %772, i64 2
  %773 = load i32, i32* %arrayidx979, align 4
  %774 = load i32, i32* %n_Bframe, align 4
  %sub980 = sub nsw i32 0, %774
  %mul981 = mul nsw i32 %773, %sub980
  %conv982 = sitofp i32 %mul981 to float
  %775 = load i32, i32* %N_Bframe, align 4
  %776 = load i32, i32* %n_Bframe, align 4
  %sub983 = sub nsw i32 %775, %776
  %conv984 = sitofp i32 %sub983 to float
  %add985 = fadd float %conv984, 1.000000e+00
  %div986 = fdiv float %conv982, %add985
  %conv987 = fptosi float %div986 to i32
  store i32 %conv987, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @pred_MV_ref, i32 0, i64 1), align 4
  br label %if.end.988

if.end.988:                                       ; preds = %cond.end.940, %land.lhs.true.918, %land.lhs.true.915, %if.end.911
  br label %if.end.989

if.end.989:                                       ; preds = %if.end.988, %if.end.835
  br label %if.end.990

if.end.990:                                       ; preds = %if.end.989, %for.end.39
  %777 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %FMEnable991 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %777, i32 0, i32 134
  %778 = load i32, i32* %FMEnable991, align 4
  %tobool992 = icmp ne i32 %778, 0
  br i1 %tobool992, label %if.then.993, label %if.end.994

if.then.993:                                      ; preds = %if.end.990
  %779 = load i32, i32* %blocktype.addr, align 4
  store i32 %779, i32* @FME_blocktype, align 4
  br label %if.end.994

if.end.994:                                       ; preds = %if.then.993, %if.end.990
  %780 = load i16*, i16** %pred_mv, align 8
  %781 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %781, i32 0, i32 32
  %782 = load i16***, i16**** %ref_idx, align 8
  %783 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %mv995 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %783, i32 0, i32 35
  %784 = load i16****, i16***** %mv995, align 8
  %785 = load i16, i16* %ref.addr, align 2
  %786 = load i32, i32* %list.addr, align 4
  %787 = load i32, i32* %block_x, align 4
  %788 = load i32, i32* %block_y, align 4
  %789 = load i32, i32* %bsx, align 4
  %790 = load i32, i32* %bsy, align 4
  call void @SetMotionVectorPredictor(i16* %780, i16*** %782, i16**** %784, i16 signext %785, i32 %786, i32 %787, i32 %788, i32 %789, i32 %790)
  %791 = load i16*, i16** %pred_mv, align 8
  %arrayidx996 = getelementptr inbounds i16, i16* %791, i64 0
  %792 = load i16, i16* %arrayidx996, align 2
  store i16 %792, i16* %pred_mv_x, align 2
  %793 = load i16*, i16** %pred_mv, align 8
  %arrayidx997 = getelementptr inbounds i16, i16* %793, i64 1
  %794 = load i16, i16* %arrayidx997, align 2
  store i16 %794, i16* %pred_mv_y, align 2
  %795 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %FMEnable998 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %795, i32 0, i32 134
  %796 = load i32, i32* %FMEnable998, align 4
  %tobool999 = icmp ne i32 %796, 0
  br i1 %tobool999, label %if.then.1000, label %if.else.1115

if.then.1000:                                     ; preds = %if.end.994
  %797 = load i16, i16* %pred_mv_x, align 2
  %conv1001 = sext i16 %797 to i32
  %div1002 = sdiv i32 %conv1001, 4
  %conv1003 = trunc i32 %div1002 to i16
  store i16 %conv1003, i16* %mv_x, align 2
  %798 = load i16, i16* %pred_mv_y, align 2
  %conv1004 = sext i16 %798 to i32
  %div1005 = sdiv i32 %conv1004, 4
  %conv1006 = trunc i32 %div1005 to i16
  store i16 %conv1006, i16* %mv_y, align 2
  %799 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %rdopt = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %799, i32 0, i32 85
  %800 = load i32, i32* %rdopt, align 4
  %tobool1007 = icmp ne i32 %800, 0
  br i1 %tobool1007, label %if.end.1059, label %if.then.1008

if.then.1008:                                     ; preds = %if.then.1000
  %801 = load i32, i32* %search_range.addr, align 4
  %sub1009 = sub nsw i32 0, %801
  %802 = load i32, i32* %search_range.addr, align 4
  %803 = load i16, i16* %mv_x, align 2
  %conv1010 = sext i16 %803 to i32
  %cmp1011 = icmp slt i32 %802, %conv1010
  br i1 %cmp1011, label %cond.true.1013, label %cond.false.1014

cond.true.1013:                                   ; preds = %if.then.1008
  %804 = load i32, i32* %search_range.addr, align 4
  br label %cond.end.1016

cond.false.1014:                                  ; preds = %if.then.1008
  %805 = load i16, i16* %mv_x, align 2
  %conv1015 = sext i16 %805 to i32
  br label %cond.end.1016

cond.end.1016:                                    ; preds = %cond.false.1014, %cond.true.1013
  %cond1017 = phi i32 [ %804, %cond.true.1013 ], [ %conv1015, %cond.false.1014 ]
  %cmp1018 = icmp sgt i32 %sub1009, %cond1017
  br i1 %cmp1018, label %cond.true.1020, label %cond.false.1022

cond.true.1020:                                   ; preds = %cond.end.1016
  %806 = load i32, i32* %search_range.addr, align 4
  %sub1021 = sub nsw i32 0, %806
  br label %cond.end.1031

cond.false.1022:                                  ; preds = %cond.end.1016
  %807 = load i32, i32* %search_range.addr, align 4
  %808 = load i16, i16* %mv_x, align 2
  %conv1023 = sext i16 %808 to i32
  %cmp1024 = icmp slt i32 %807, %conv1023
  br i1 %cmp1024, label %cond.true.1026, label %cond.false.1027

cond.true.1026:                                   ; preds = %cond.false.1022
  %809 = load i32, i32* %search_range.addr, align 4
  br label %cond.end.1029

cond.false.1027:                                  ; preds = %cond.false.1022
  %810 = load i16, i16* %mv_x, align 2
  %conv1028 = sext i16 %810 to i32
  br label %cond.end.1029

cond.end.1029:                                    ; preds = %cond.false.1027, %cond.true.1026
  %cond1030 = phi i32 [ %809, %cond.true.1026 ], [ %conv1028, %cond.false.1027 ]
  br label %cond.end.1031

cond.end.1031:                                    ; preds = %cond.end.1029, %cond.true.1020
  %cond1032 = phi i32 [ %sub1021, %cond.true.1020 ], [ %cond1030, %cond.end.1029 ]
  %conv1033 = trunc i32 %cond1032 to i16
  store i16 %conv1033, i16* %mv_x, align 2
  %811 = load i32, i32* %search_range.addr, align 4
  %sub1034 = sub nsw i32 0, %811
  %812 = load i32, i32* %search_range.addr, align 4
  %813 = load i16, i16* %mv_y, align 2
  %conv1035 = sext i16 %813 to i32
  %cmp1036 = icmp slt i32 %812, %conv1035
  br i1 %cmp1036, label %cond.true.1038, label %cond.false.1039

cond.true.1038:                                   ; preds = %cond.end.1031
  %814 = load i32, i32* %search_range.addr, align 4
  br label %cond.end.1041

cond.false.1039:                                  ; preds = %cond.end.1031
  %815 = load i16, i16* %mv_y, align 2
  %conv1040 = sext i16 %815 to i32
  br label %cond.end.1041

cond.end.1041:                                    ; preds = %cond.false.1039, %cond.true.1038
  %cond1042 = phi i32 [ %814, %cond.true.1038 ], [ %conv1040, %cond.false.1039 ]
  %cmp1043 = icmp sgt i32 %sub1034, %cond1042
  br i1 %cmp1043, label %cond.true.1045, label %cond.false.1047

cond.true.1045:                                   ; preds = %cond.end.1041
  %816 = load i32, i32* %search_range.addr, align 4
  %sub1046 = sub nsw i32 0, %816
  br label %cond.end.1056

cond.false.1047:                                  ; preds = %cond.end.1041
  %817 = load i32, i32* %search_range.addr, align 4
  %818 = load i16, i16* %mv_y, align 2
  %conv1048 = sext i16 %818 to i32
  %cmp1049 = icmp slt i32 %817, %conv1048
  br i1 %cmp1049, label %cond.true.1051, label %cond.false.1052

cond.true.1051:                                   ; preds = %cond.false.1047
  %819 = load i32, i32* %search_range.addr, align 4
  br label %cond.end.1054

cond.false.1052:                                  ; preds = %cond.false.1047
  %820 = load i16, i16* %mv_y, align 2
  %conv1053 = sext i16 %820 to i32
  br label %cond.end.1054

cond.end.1054:                                    ; preds = %cond.false.1052, %cond.true.1051
  %cond1055 = phi i32 [ %819, %cond.true.1051 ], [ %conv1053, %cond.false.1052 ]
  br label %cond.end.1056

cond.end.1056:                                    ; preds = %cond.end.1054, %cond.true.1045
  %cond1057 = phi i32 [ %sub1046, %cond.true.1045 ], [ %cond1055, %cond.end.1054 ]
  %conv1058 = trunc i32 %cond1057 to i16
  store i16 %conv1058, i16* %mv_y, align 2
  br label %if.end.1059

if.end.1059:                                      ; preds = %cond.end.1056, %if.then.1000
  %821 = load i16, i16* %ref.addr, align 2
  %822 = load i32, i32* %list.addr, align 4
  %823 = load i32, i32* %pic_pix_x, align 4
  %824 = load i32, i32* %pic_pix_y, align 4
  %825 = load i32, i32* %blocktype.addr, align 4
  %826 = load i16, i16* %pred_mv_x, align 2
  %827 = load i16, i16* %pred_mv_y, align 2
  %828 = load i32, i32* %search_range.addr, align 4
  %829 = load i32, i32* %min_mcost, align 4
  %830 = load double, double* %lambda.addr, align 8
  %call = call i32 @FastIntegerPelBlockMotionSearch(i16** getelementptr inbounds ([16 x i16*], [16 x i16*]* @BlockMotionSearch.orig_pic, i32 0, i32 0), i16 signext %821, i32 %822, i32 %823, i32 %824, i32 %825, i16 signext %826, i16 signext %827, i16* %mv_x, i16* %mv_y, i32 %828, i32 %829, double %830)
  store i32 %call, i32* %min_mcost, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond.1060

for.cond.1060:                                    ; preds = %for.inc.1112, %if.end.1059
  %831 = load i32, i32* %i, align 4
  %832 = load i32, i32* %bsx, align 4
  %shr1061 = ashr i32 %832, 2
  %cmp1062 = icmp slt i32 %831, %shr1061
  br i1 %cmp1062, label %for.body.1064, label %for.end.1114

for.body.1064:                                    ; preds = %for.cond.1060
  store i32 0, i32* %j, align 4
  br label %for.cond.1065

for.cond.1065:                                    ; preds = %for.inc.1109, %for.body.1064
  %833 = load i32, i32* %j, align 4
  %834 = load i32, i32* %bsy, align 4
  %shr1066 = ashr i32 %834, 2
  %cmp1067 = icmp slt i32 %833, %shr1066
  br i1 %cmp1067, label %for.body.1069, label %for.end.1111

for.body.1069:                                    ; preds = %for.cond.1065
  %835 = load i32, i32* %list.addr, align 4
  %cmp1070 = icmp eq i32 %835, 0
  br i1 %cmp1070, label %if.then.1072, label %if.else.1090

if.then.1072:                                     ; preds = %for.body.1069
  %836 = load i32, i32* %min_mcost, align 4
  %837 = load i32, i32* %blocktype.addr, align 4
  %idxprom1073 = sext i32 %837 to i64
  %838 = load i16, i16* %ref.addr, align 2
  %idxprom1074 = sext i16 %838 to i64
  %839 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y1075 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %839, i32 0, i32 34
  %840 = load i32, i32* %pix_y1075, align 4
  %shr1076 = ashr i32 %840, 2
  %841 = load i32, i32* %block_y, align 4
  %add1077 = add nsw i32 %shr1076, %841
  %842 = load i32, i32* %j, align 4
  %add1078 = add nsw i32 %add1077, %842
  %idxprom1079 = sext i32 %add1078 to i64
  %843 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x1080 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %843, i32 0, i32 33
  %844 = load i32, i32* %pix_x1080, align 4
  %shr1081 = ashr i32 %844, 2
  %845 = load i32, i32* %block_x, align 4
  %add1082 = add nsw i32 %shr1081, %845
  %846 = load i32, i32* %i, align 4
  %add1083 = add nsw i32 %add1082, %846
  %idxprom1084 = sext i32 %add1083 to i64
  %847 = load i32*****, i32****** @all_mincost, align 8
  %arrayidx1085 = getelementptr inbounds i32****, i32***** %847, i64 %idxprom1084
  %848 = load i32****, i32***** %arrayidx1085, align 8
  %arrayidx1086 = getelementptr inbounds i32***, i32**** %848, i64 %idxprom1079
  %849 = load i32***, i32**** %arrayidx1086, align 8
  %arrayidx1087 = getelementptr inbounds i32**, i32*** %849, i64 %idxprom1074
  %850 = load i32**, i32*** %arrayidx1087, align 8
  %arrayidx1088 = getelementptr inbounds i32*, i32** %850, i64 %idxprom1073
  %851 = load i32*, i32** %arrayidx1088, align 8
  %arrayidx1089 = getelementptr inbounds i32, i32* %851, i64 0
  store i32 %836, i32* %arrayidx1089, align 4
  br label %if.end.1108

if.else.1090:                                     ; preds = %for.body.1069
  %852 = load i32, i32* %min_mcost, align 4
  %853 = load i32, i32* %blocktype.addr, align 4
  %idxprom1091 = sext i32 %853 to i64
  %854 = load i16, i16* %ref.addr, align 2
  %idxprom1092 = sext i16 %854 to i64
  %855 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y1093 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %855, i32 0, i32 34
  %856 = load i32, i32* %pix_y1093, align 4
  %shr1094 = ashr i32 %856, 2
  %857 = load i32, i32* %block_y, align 4
  %add1095 = add nsw i32 %shr1094, %857
  %858 = load i32, i32* %j, align 4
  %add1096 = add nsw i32 %add1095, %858
  %idxprom1097 = sext i32 %add1096 to i64
  %859 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x1098 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %859, i32 0, i32 33
  %860 = load i32, i32* %pix_x1098, align 4
  %shr1099 = ashr i32 %860, 2
  %861 = load i32, i32* %block_x, align 4
  %add1100 = add nsw i32 %shr1099, %861
  %862 = load i32, i32* %i, align 4
  %add1101 = add nsw i32 %add1100, %862
  %idxprom1102 = sext i32 %add1101 to i64
  %863 = load i32*****, i32****** @all_bwmincost, align 8
  %arrayidx1103 = getelementptr inbounds i32****, i32***** %863, i64 %idxprom1102
  %864 = load i32****, i32***** %arrayidx1103, align 8
  %arrayidx1104 = getelementptr inbounds i32***, i32**** %864, i64 %idxprom1097
  %865 = load i32***, i32**** %arrayidx1104, align 8
  %arrayidx1105 = getelementptr inbounds i32**, i32*** %865, i64 %idxprom1092
  %866 = load i32**, i32*** %arrayidx1105, align 8
  %arrayidx1106 = getelementptr inbounds i32*, i32** %866, i64 %idxprom1091
  %867 = load i32*, i32** %arrayidx1106, align 8
  %arrayidx1107 = getelementptr inbounds i32, i32* %867, i64 0
  store i32 %852, i32* %arrayidx1107, align 4
  br label %if.end.1108

if.end.1108:                                      ; preds = %if.else.1090, %if.then.1072
  br label %for.inc.1109

for.inc.1109:                                     ; preds = %if.end.1108
  %868 = load i32, i32* %j, align 4
  %inc1110 = add nsw i32 %868, 1
  store i32 %inc1110, i32* %j, align 4
  br label %for.cond.1065

for.end.1111:                                     ; preds = %for.cond.1065
  br label %for.inc.1112

for.inc.1112:                                     ; preds = %for.end.1111
  %869 = load i32, i32* %i, align 4
  %inc1113 = add nsw i32 %869, 1
  store i32 %inc1113, i32* %i, align 4
  br label %for.cond.1060

for.end.1114:                                     ; preds = %for.cond.1060
  br label %if.end.1117

if.else.1115:                                     ; preds = %if.end.994
  %870 = load i16, i16* %ref.addr, align 2
  %871 = load i32, i32* %list.addr, align 4
  %872 = load i32, i32* %pic_pix_x, align 4
  %873 = load i32, i32* %pic_pix_y, align 4
  %874 = load i32, i32* %blocktype.addr, align 4
  %875 = load i16, i16* %pred_mv_x, align 2
  %876 = load i16, i16* %pred_mv_y, align 2
  %877 = load i32, i32* %search_range.addr, align 4
  %878 = load i32, i32* %min_mcost, align 4
  %879 = load double, double* %lambda.addr, align 8
  %call1116 = call i32 @FastFullPelBlockMotionSearch(i16** getelementptr inbounds ([16 x i16*], [16 x i16*]* @BlockMotionSearch.orig_pic, i32 0, i32 0), i16 signext %870, i32 %871, i32 %872, i32 %873, i32 %874, i16 signext %875, i16 signext %876, i16* %mv_x, i16* %mv_y, i32 %877, i32 %878, double %879)
  store i32 %call1116, i32* %min_mcost, align 4
  br label %if.end.1117

if.end.1117:                                      ; preds = %if.else.1115, %for.end.1114
  %880 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamard = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %880, i32 0, i32 6
  %881 = load i32, i32* %hadamard, align 4
  %tobool1118 = icmp ne i32 %881, 0
  br i1 %tobool1118, label %land.lhs.true.1119, label %if.end.1122

land.lhs.true.1119:                               ; preds = %if.end.1117
  %882 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamardqpel = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %882, i32 0, i32 7
  %883 = load i32, i32* %hadamardqpel, align 4
  %tobool1120 = icmp ne i32 %883, 0
  br i1 %tobool1120, label %if.end.1122, label %if.then.1121

if.then.1121:                                     ; preds = %land.lhs.true.1119
  %884 = load i32, i32* %max_value, align 4
  store i32 %884, i32* %min_mcost, align 4
  br label %if.end.1122

if.end.1122:                                      ; preds = %if.then.1121, %land.lhs.true.1119, %if.end.1117
  %885 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %FMEnable1123 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %885, i32 0, i32 134
  %886 = load i32, i32* %FMEnable1123, align 4
  %tobool1124 = icmp ne i32 %886, 0
  br i1 %tobool1124, label %if.then.1125, label %if.else.1226

if.then.1125:                                     ; preds = %if.end.1122
  %887 = load i32, i32* %blocktype.addr, align 4
  %cmp1126 = icmp sgt i32 %887, 3
  br i1 %cmp1126, label %if.then.1128, label %if.else.1130

if.then.1128:                                     ; preds = %if.then.1125
  %888 = load i16, i16* %ref.addr, align 2
  %889 = load i32, i32* %list.addr, align 4
  %890 = load i32, i32* %pic_pix_x, align 4
  %891 = load i32, i32* %pic_pix_y, align 4
  %892 = load i32, i32* %blocktype.addr, align 4
  %893 = load i16, i16* %pred_mv_x, align 2
  %894 = load i16, i16* %pred_mv_y, align 2
  %895 = load i32, i32* %min_mcost, align 4
  %896 = load double, double* %lambda.addr, align 8
  %call1129 = call i32 @FastSubPelBlockMotionSearch(i16** getelementptr inbounds ([16 x i16*], [16 x i16*]* @BlockMotionSearch.orig_pic, i32 0, i32 0), i16 signext %888, i32 %889, i32 %890, i32 %891, i32 %892, i16 signext %893, i16 signext %894, i16* %mv_x, i16* %mv_y, i32 9, i32 9, i32 %895, double %896, i32 0)
  store i32 %call1129, i32* %min_mcost, align 4
  br label %if.end.1132

if.else.1130:                                     ; preds = %if.then.1125
  %897 = load i16, i16* %ref.addr, align 2
  %898 = load i32, i32* %list.addr, align 4
  %899 = load i32, i32* %pic_pix_x, align 4
  %900 = load i32, i32* %pic_pix_y, align 4
  %901 = load i32, i32* %blocktype.addr, align 4
  %902 = load i16, i16* %pred_mv_x, align 2
  %903 = load i16, i16* %pred_mv_y, align 2
  %904 = load i32, i32* %min_mcost, align 4
  %905 = load double, double* %lambda.addr, align 8
  %call1131 = call i32 @SubPelBlockMotionSearch(i16** getelementptr inbounds ([16 x i16*], [16 x i16*]* @BlockMotionSearch.orig_pic, i32 0, i32 0), i16 signext %897, i32 %898, i32 %899, i32 %900, i32 %901, i16 signext %902, i16 signext %903, i16* %mv_x, i16* %mv_y, i32 9, i32 9, i32 %904, double %905)
  store i32 %call1131, i32* %min_mcost, align 4
  br label %if.end.1132

if.end.1132:                                      ; preds = %if.else.1130, %if.then.1128
  store i32 0, i32* %i, align 4
  br label %for.cond.1133

for.cond.1133:                                    ; preds = %for.inc.1223, %if.end.1132
  %906 = load i32, i32* %i, align 4
  %907 = load i32, i32* %bsx, align 4
  %shr1134 = ashr i32 %907, 2
  %cmp1135 = icmp slt i32 %906, %shr1134
  br i1 %cmp1135, label %for.body.1137, label %for.end.1225

for.body.1137:                                    ; preds = %for.cond.1133
  store i32 0, i32* %j, align 4
  br label %for.cond.1138

for.cond.1138:                                    ; preds = %for.inc.1220, %for.body.1137
  %908 = load i32, i32* %j, align 4
  %909 = load i32, i32* %bsy, align 4
  %shr1139 = ashr i32 %909, 2
  %cmp1140 = icmp slt i32 %908, %shr1139
  br i1 %cmp1140, label %for.body.1142, label %for.end.1222

for.body.1142:                                    ; preds = %for.cond.1138
  %910 = load i32, i32* %list.addr, align 4
  %cmp1143 = icmp eq i32 %910, 0
  br i1 %cmp1143, label %if.then.1145, label %if.else.1182

if.then.1145:                                     ; preds = %for.body.1142
  %911 = load i16, i16* %mv_x, align 2
  %conv1146 = sext i16 %911 to i32
  %912 = load i32, i32* %blocktype.addr, align 4
  %idxprom1147 = sext i32 %912 to i64
  %913 = load i16, i16* %ref.addr, align 2
  %idxprom1148 = sext i16 %913 to i64
  %914 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y1149 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %914, i32 0, i32 34
  %915 = load i32, i32* %pix_y1149, align 4
  %shr1150 = ashr i32 %915, 2
  %916 = load i32, i32* %block_y, align 4
  %add1151 = add nsw i32 %shr1150, %916
  %917 = load i32, i32* %j, align 4
  %add1152 = add nsw i32 %add1151, %917
  %idxprom1153 = sext i32 %add1152 to i64
  %918 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x1154 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %918, i32 0, i32 33
  %919 = load i32, i32* %pix_x1154, align 4
  %shr1155 = ashr i32 %919, 2
  %920 = load i32, i32* %block_x, align 4
  %add1156 = add nsw i32 %shr1155, %920
  %921 = load i32, i32* %i, align 4
  %add1157 = add nsw i32 %add1156, %921
  %idxprom1158 = sext i32 %add1157 to i64
  %922 = load i32*****, i32****** @all_mincost, align 8
  %arrayidx1159 = getelementptr inbounds i32****, i32***** %922, i64 %idxprom1158
  %923 = load i32****, i32***** %arrayidx1159, align 8
  %arrayidx1160 = getelementptr inbounds i32***, i32**** %923, i64 %idxprom1153
  %924 = load i32***, i32**** %arrayidx1160, align 8
  %arrayidx1161 = getelementptr inbounds i32**, i32*** %924, i64 %idxprom1148
  %925 = load i32**, i32*** %arrayidx1161, align 8
  %arrayidx1162 = getelementptr inbounds i32*, i32** %925, i64 %idxprom1147
  %926 = load i32*, i32** %arrayidx1162, align 8
  %arrayidx1163 = getelementptr inbounds i32, i32* %926, i64 1
  store i32 %conv1146, i32* %arrayidx1163, align 4
  %927 = load i16, i16* %mv_y, align 2
  %conv1164 = sext i16 %927 to i32
  %928 = load i32, i32* %blocktype.addr, align 4
  %idxprom1165 = sext i32 %928 to i64
  %929 = load i16, i16* %ref.addr, align 2
  %idxprom1166 = sext i16 %929 to i64
  %930 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y1167 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %930, i32 0, i32 34
  %931 = load i32, i32* %pix_y1167, align 4
  %shr1168 = ashr i32 %931, 2
  %932 = load i32, i32* %block_y, align 4
  %add1169 = add nsw i32 %shr1168, %932
  %933 = load i32, i32* %j, align 4
  %add1170 = add nsw i32 %add1169, %933
  %idxprom1171 = sext i32 %add1170 to i64
  %934 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x1172 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %934, i32 0, i32 33
  %935 = load i32, i32* %pix_x1172, align 4
  %shr1173 = ashr i32 %935, 2
  %936 = load i32, i32* %block_x, align 4
  %add1174 = add nsw i32 %shr1173, %936
  %937 = load i32, i32* %i, align 4
  %add1175 = add nsw i32 %add1174, %937
  %idxprom1176 = sext i32 %add1175 to i64
  %938 = load i32*****, i32****** @all_mincost, align 8
  %arrayidx1177 = getelementptr inbounds i32****, i32***** %938, i64 %idxprom1176
  %939 = load i32****, i32***** %arrayidx1177, align 8
  %arrayidx1178 = getelementptr inbounds i32***, i32**** %939, i64 %idxprom1171
  %940 = load i32***, i32**** %arrayidx1178, align 8
  %arrayidx1179 = getelementptr inbounds i32**, i32*** %940, i64 %idxprom1166
  %941 = load i32**, i32*** %arrayidx1179, align 8
  %arrayidx1180 = getelementptr inbounds i32*, i32** %941, i64 %idxprom1165
  %942 = load i32*, i32** %arrayidx1180, align 8
  %arrayidx1181 = getelementptr inbounds i32, i32* %942, i64 2
  store i32 %conv1164, i32* %arrayidx1181, align 4
  br label %if.end.1219

if.else.1182:                                     ; preds = %for.body.1142
  %943 = load i16, i16* %mv_x, align 2
  %conv1183 = sext i16 %943 to i32
  %944 = load i32, i32* %blocktype.addr, align 4
  %idxprom1184 = sext i32 %944 to i64
  %945 = load i16, i16* %ref.addr, align 2
  %idxprom1185 = sext i16 %945 to i64
  %946 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y1186 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %946, i32 0, i32 34
  %947 = load i32, i32* %pix_y1186, align 4
  %shr1187 = ashr i32 %947, 2
  %948 = load i32, i32* %block_y, align 4
  %add1188 = add nsw i32 %shr1187, %948
  %949 = load i32, i32* %j, align 4
  %add1189 = add nsw i32 %add1188, %949
  %idxprom1190 = sext i32 %add1189 to i64
  %950 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x1191 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %950, i32 0, i32 33
  %951 = load i32, i32* %pix_x1191, align 4
  %shr1192 = ashr i32 %951, 2
  %952 = load i32, i32* %block_x, align 4
  %add1193 = add nsw i32 %shr1192, %952
  %953 = load i32, i32* %i, align 4
  %add1194 = add nsw i32 %add1193, %953
  %idxprom1195 = sext i32 %add1194 to i64
  %954 = load i32*****, i32****** @all_bwmincost, align 8
  %arrayidx1196 = getelementptr inbounds i32****, i32***** %954, i64 %idxprom1195
  %955 = load i32****, i32***** %arrayidx1196, align 8
  %arrayidx1197 = getelementptr inbounds i32***, i32**** %955, i64 %idxprom1190
  %956 = load i32***, i32**** %arrayidx1197, align 8
  %arrayidx1198 = getelementptr inbounds i32**, i32*** %956, i64 %idxprom1185
  %957 = load i32**, i32*** %arrayidx1198, align 8
  %arrayidx1199 = getelementptr inbounds i32*, i32** %957, i64 %idxprom1184
  %958 = load i32*, i32** %arrayidx1199, align 8
  %arrayidx1200 = getelementptr inbounds i32, i32* %958, i64 1
  store i32 %conv1183, i32* %arrayidx1200, align 4
  %959 = load i16, i16* %mv_y, align 2
  %conv1201 = sext i16 %959 to i32
  %960 = load i32, i32* %blocktype.addr, align 4
  %idxprom1202 = sext i32 %960 to i64
  %961 = load i16, i16* %ref.addr, align 2
  %idxprom1203 = sext i16 %961 to i64
  %962 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y1204 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %962, i32 0, i32 34
  %963 = load i32, i32* %pix_y1204, align 4
  %shr1205 = ashr i32 %963, 2
  %964 = load i32, i32* %block_y, align 4
  %add1206 = add nsw i32 %shr1205, %964
  %965 = load i32, i32* %j, align 4
  %add1207 = add nsw i32 %add1206, %965
  %idxprom1208 = sext i32 %add1207 to i64
  %966 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x1209 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %966, i32 0, i32 33
  %967 = load i32, i32* %pix_x1209, align 4
  %shr1210 = ashr i32 %967, 2
  %968 = load i32, i32* %block_x, align 4
  %add1211 = add nsw i32 %shr1210, %968
  %969 = load i32, i32* %i, align 4
  %add1212 = add nsw i32 %add1211, %969
  %idxprom1213 = sext i32 %add1212 to i64
  %970 = load i32*****, i32****** @all_bwmincost, align 8
  %arrayidx1214 = getelementptr inbounds i32****, i32***** %970, i64 %idxprom1213
  %971 = load i32****, i32***** %arrayidx1214, align 8
  %arrayidx1215 = getelementptr inbounds i32***, i32**** %971, i64 %idxprom1208
  %972 = load i32***, i32**** %arrayidx1215, align 8
  %arrayidx1216 = getelementptr inbounds i32**, i32*** %972, i64 %idxprom1203
  %973 = load i32**, i32*** %arrayidx1216, align 8
  %arrayidx1217 = getelementptr inbounds i32*, i32** %973, i64 %idxprom1202
  %974 = load i32*, i32** %arrayidx1217, align 8
  %arrayidx1218 = getelementptr inbounds i32, i32* %974, i64 2
  store i32 %conv1201, i32* %arrayidx1218, align 4
  br label %if.end.1219

if.end.1219:                                      ; preds = %if.else.1182, %if.then.1145
  br label %for.inc.1220

for.inc.1220:                                     ; preds = %if.end.1219
  %975 = load i32, i32* %j, align 4
  %inc1221 = add nsw i32 %975, 1
  store i32 %inc1221, i32* %j, align 4
  br label %for.cond.1138

for.end.1222:                                     ; preds = %for.cond.1138
  br label %for.inc.1223

for.inc.1223:                                     ; preds = %for.end.1222
  %976 = load i32, i32* %i, align 4
  %inc1224 = add nsw i32 %976, 1
  store i32 %inc1224, i32* %i, align 4
  br label %for.cond.1133

for.end.1225:                                     ; preds = %for.cond.1133
  br label %if.end.1235

if.else.1226:                                     ; preds = %if.end.1122
  %977 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamard1227 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %977, i32 0, i32 6
  %978 = load i32, i32* %hadamard1227, align 4
  %tobool1228 = icmp ne i32 %978, 0
  br i1 %tobool1228, label %land.lhs.true.1229, label %if.end.1233

land.lhs.true.1229:                               ; preds = %if.else.1226
  %979 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamardqpel1230 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %979, i32 0, i32 7
  %980 = load i32, i32* %hadamardqpel1230, align 4
  %tobool1231 = icmp ne i32 %980, 0
  br i1 %tobool1231, label %if.end.1233, label %if.then.1232

if.then.1232:                                     ; preds = %land.lhs.true.1229
  %981 = load i32, i32* %max_value, align 4
  store i32 %981, i32* %min_mcost, align 4
  br label %if.end.1233

if.end.1233:                                      ; preds = %if.then.1232, %land.lhs.true.1229, %if.else.1226
  %982 = load i16, i16* %ref.addr, align 2
  %983 = load i32, i32* %list.addr, align 4
  %984 = load i32, i32* %pic_pix_x, align 4
  %985 = load i32, i32* %pic_pix_y, align 4
  %986 = load i32, i32* %blocktype.addr, align 4
  %987 = load i16, i16* %pred_mv_x, align 2
  %988 = load i16, i16* %pred_mv_y, align 2
  %989 = load i32, i32* %min_mcost, align 4
  %990 = load double, double* %lambda.addr, align 8
  %call1234 = call i32 @SubPelBlockMotionSearch(i16** getelementptr inbounds ([16 x i16*], [16 x i16*]* @BlockMotionSearch.orig_pic, i32 0, i32 0), i16 signext %982, i32 %983, i32 %984, i32 %985, i32 %986, i16 signext %987, i16 signext %988, i16* %mv_x, i16* %mv_y, i32 9, i32 9, i32 %989, double %990)
  store i32 %call1234, i32* %min_mcost, align 4
  br label %if.end.1235

if.end.1235:                                      ; preds = %if.end.1233, %for.end.1225
  %991 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %rdopt1236 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %991, i32 0, i32 85
  %992 = load i32, i32* %rdopt1236, align 4
  %tobool1237 = icmp ne i32 %992, 0
  br i1 %tobool1237, label %if.end.1275, label %if.then.1238

if.then.1238:                                     ; preds = %if.end.1235
  %993 = load i32, i32* %blocktype.addr, align 4
  %cmp1239 = icmp eq i32 %993, 1
  br i1 %cmp1239, label %land.lhs.true.1241, label %if.end.1274

land.lhs.true.1241:                               ; preds = %if.then.1238
  %994 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type1242 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %994, i32 0, i32 6
  %995 = load i32, i32* %type1242, align 4
  %cmp1243 = icmp eq i32 %995, 0
  br i1 %cmp1243, label %if.then.1249, label %lor.lhs.false.1245

lor.lhs.false.1245:                               ; preds = %land.lhs.true.1241
  %996 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type1246 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %996, i32 0, i32 6
  %997 = load i32, i32* %type1246, align 4
  %cmp1247 = icmp eq i32 %997, 3
  br i1 %cmp1247, label %if.then.1249, label %if.end.1274

if.then.1249:                                     ; preds = %lor.lhs.false.1245, %land.lhs.true.1241
  call void @FindSkipModeMotionVector()
  %998 = load double, double* %lambda.addr, align 8
  %call1250 = call i32 @GetSkipCostMB(double %998)
  store i32 %call1250, i32* %cost, align 4
  %999 = load double, double* %lambda.addr, align 8
  %mul1251 = fmul double 8.000000e+00, %999
  %add1252 = fadd double %mul1251, 4.999000e-01
  %call1253 = call double @floor(double %add1252) #5
  %conv1254 = fptosi double %call1253 to i32
  %1000 = load i32, i32* %cost, align 4
  %sub1255 = sub nsw i32 %1000, %conv1254
  store i32 %sub1255, i32* %cost, align 4
  %1001 = load i32, i32* %cost, align 4
  %1002 = load i32, i32* %min_mcost, align 4
  %cmp1256 = icmp slt i32 %1001, %1002
  br i1 %cmp1256, label %if.then.1258, label %if.end.1273

if.then.1258:                                     ; preds = %if.then.1249
  %1003 = load i32, i32* %cost, align 4
  store i32 %1003, i32* %min_mcost, align 4
  %1004 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %all_mv1259 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1004, i32 0, i32 71
  %1005 = load i16******, i16******* %all_mv1259, align 8
  %arrayidx1260 = getelementptr inbounds i16*****, i16****** %1005, i64 0
  %1006 = load i16*****, i16****** %arrayidx1260, align 8
  %arrayidx1261 = getelementptr inbounds i16****, i16***** %1006, i64 0
  %1007 = load i16****, i16***** %arrayidx1261, align 8
  %arrayidx1262 = getelementptr inbounds i16***, i16**** %1007, i64 0
  %1008 = load i16***, i16**** %arrayidx1262, align 8
  %arrayidx1263 = getelementptr inbounds i16**, i16*** %1008, i64 0
  %1009 = load i16**, i16*** %arrayidx1263, align 8
  %arrayidx1264 = getelementptr inbounds i16*, i16** %1009, i64 0
  %1010 = load i16*, i16** %arrayidx1264, align 8
  %arrayidx1265 = getelementptr inbounds i16, i16* %1010, i64 0
  %1011 = load i16, i16* %arrayidx1265, align 2
  store i16 %1011, i16* %mv_x, align 2
  %1012 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %all_mv1266 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1012, i32 0, i32 71
  %1013 = load i16******, i16******* %all_mv1266, align 8
  %arrayidx1267 = getelementptr inbounds i16*****, i16****** %1013, i64 0
  %1014 = load i16*****, i16****** %arrayidx1267, align 8
  %arrayidx1268 = getelementptr inbounds i16****, i16***** %1014, i64 0
  %1015 = load i16****, i16***** %arrayidx1268, align 8
  %arrayidx1269 = getelementptr inbounds i16***, i16**** %1015, i64 0
  %1016 = load i16***, i16**** %arrayidx1269, align 8
  %arrayidx1270 = getelementptr inbounds i16**, i16*** %1016, i64 0
  %1017 = load i16**, i16*** %arrayidx1270, align 8
  %arrayidx1271 = getelementptr inbounds i16*, i16** %1017, i64 0
  %1018 = load i16*, i16** %arrayidx1271, align 8
  %arrayidx1272 = getelementptr inbounds i16, i16* %1018, i64 1
  %1019 = load i16, i16* %arrayidx1272, align 2
  store i16 %1019, i16* %mv_y, align 2
  br label %if.end.1273

if.end.1273:                                      ; preds = %if.then.1258, %if.then.1249
  br label %if.end.1274

if.end.1274:                                      ; preds = %if.end.1273, %lor.lhs.false.1245, %if.then.1238
  br label %if.end.1275

if.end.1275:                                      ; preds = %if.end.1274, %if.end.1235
  %1020 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %FMEnable1276 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %1020, i32 0, i32 134
  %1021 = load i32, i32* %FMEnable1276, align 4
  %tobool1277 = icmp ne i32 %1021, 0
  br i1 %tobool1277, label %if.then.1278, label %if.else.1341

if.then.1278:                                     ; preds = %if.end.1275
  %1022 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x1279 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1022, i32 0, i32 33
  %1023 = load i32, i32* %pix_x1279, align 4
  %shr1280 = ashr i32 %1023, 2
  %1024 = load i32, i32* %block_x, align 4
  %add1281 = add nsw i32 %shr1280, %1024
  store i32 %add1281, i32* %h4x4blkno, align 4
  %1025 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y1282 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1025, i32 0, i32 34
  %1026 = load i32, i32* %pix_y1282, align 4
  %shr1283 = ashr i32 %1026, 2
  %1027 = load i32, i32* %block_y, align 4
  %add1284 = add nsw i32 %shr1283, %1027
  store i32 %add1284, i32* %v4x4blkno, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond.1285

for.cond.1285:                                    ; preds = %for.inc.1338, %if.then.1278
  %1028 = load i32, i32* %i, align 4
  %1029 = load i32, i32* %bsx, align 4
  %shr1286 = ashr i32 %1029, 2
  %cmp1287 = icmp slt i32 %1028, %shr1286
  br i1 %cmp1287, label %for.body.1289, label %for.end.1340

for.body.1289:                                    ; preds = %for.cond.1285
  store i32 0, i32* %j, align 4
  br label %for.cond.1290

for.cond.1290:                                    ; preds = %for.inc.1335, %for.body.1289
  %1030 = load i32, i32* %j, align 4
  %1031 = load i32, i32* %bsy, align 4
  %shr1291 = ashr i32 %1031, 2
  %cmp1292 = icmp slt i32 %1030, %shr1291
  br i1 %cmp1292, label %for.body.1294, label %for.end.1337

for.body.1294:                                    ; preds = %for.cond.1290
  %1032 = load i16, i16* %mv_x, align 2
  %1033 = load i32, i32* %blocktype.addr, align 4
  %idxprom1295 = sext i32 %1033 to i64
  %1034 = load i16, i16* %ref.addr, align 2
  %idxprom1296 = sext i16 %1034 to i64
  %1035 = load i32, i32* %list.addr, align 4
  %idxprom1297 = sext i32 %1035 to i64
  %1036 = load i32, i32* %block_y, align 4
  %1037 = load i32, i32* %j, align 4
  %add1298 = add nsw i32 %1036, %1037
  %idxprom1299 = sext i32 %add1298 to i64
  %1038 = load i32, i32* %block_x, align 4
  %1039 = load i32, i32* %i, align 4
  %add1300 = add nsw i32 %1038, %1039
  %idxprom1301 = sext i32 %add1300 to i64
  %1040 = load i16******, i16******* %all_mv, align 8
  %arrayidx1302 = getelementptr inbounds i16*****, i16****** %1040, i64 %idxprom1301
  %1041 = load i16*****, i16****** %arrayidx1302, align 8
  %arrayidx1303 = getelementptr inbounds i16****, i16***** %1041, i64 %idxprom1299
  %1042 = load i16****, i16***** %arrayidx1303, align 8
  %arrayidx1304 = getelementptr inbounds i16***, i16**** %1042, i64 %idxprom1297
  %1043 = load i16***, i16**** %arrayidx1304, align 8
  %arrayidx1305 = getelementptr inbounds i16**, i16*** %1043, i64 %idxprom1296
  %1044 = load i16**, i16*** %arrayidx1305, align 8
  %arrayidx1306 = getelementptr inbounds i16*, i16** %1044, i64 %idxprom1295
  %1045 = load i16*, i16** %arrayidx1306, align 8
  %arrayidx1307 = getelementptr inbounds i16, i16* %1045, i64 0
  store i16 %1032, i16* %arrayidx1307, align 2
  %1046 = load i16, i16* %mv_y, align 2
  %1047 = load i32, i32* %blocktype.addr, align 4
  %idxprom1308 = sext i32 %1047 to i64
  %1048 = load i16, i16* %ref.addr, align 2
  %idxprom1309 = sext i16 %1048 to i64
  %1049 = load i32, i32* %list.addr, align 4
  %idxprom1310 = sext i32 %1049 to i64
  %1050 = load i32, i32* %block_y, align 4
  %1051 = load i32, i32* %j, align 4
  %add1311 = add nsw i32 %1050, %1051
  %idxprom1312 = sext i32 %add1311 to i64
  %1052 = load i32, i32* %block_x, align 4
  %1053 = load i32, i32* %i, align 4
  %add1313 = add nsw i32 %1052, %1053
  %idxprom1314 = sext i32 %add1313 to i64
  %1054 = load i16******, i16******* %all_mv, align 8
  %arrayidx1315 = getelementptr inbounds i16*****, i16****** %1054, i64 %idxprom1314
  %1055 = load i16*****, i16****** %arrayidx1315, align 8
  %arrayidx1316 = getelementptr inbounds i16****, i16***** %1055, i64 %idxprom1312
  %1056 = load i16****, i16***** %arrayidx1316, align 8
  %arrayidx1317 = getelementptr inbounds i16***, i16**** %1056, i64 %idxprom1310
  %1057 = load i16***, i16**** %arrayidx1317, align 8
  %arrayidx1318 = getelementptr inbounds i16**, i16*** %1057, i64 %idxprom1309
  %1058 = load i16**, i16*** %arrayidx1318, align 8
  %arrayidx1319 = getelementptr inbounds i16*, i16** %1058, i64 %idxprom1308
  %1059 = load i16*, i16** %arrayidx1319, align 8
  %arrayidx1320 = getelementptr inbounds i16, i16* %1059, i64 1
  store i16 %1046, i16* %arrayidx1320, align 2
  %1060 = load i16, i16* %mv_x, align 2
  %1061 = load i32, i32* %v4x4blkno, align 4
  %1062 = load i32, i32* %j, align 4
  %add1321 = add nsw i32 %1061, %1062
  %idxprom1322 = sext i32 %add1321 to i64
  %1063 = load i32, i32* %h4x4blkno, align 4
  %1064 = load i32, i32* %i, align 4
  %add1323 = add nsw i32 %1063, %1064
  %idxprom1324 = sext i32 %add1323 to i64
  %1065 = load i16***, i16**** %mv_array, align 8
  %arrayidx1325 = getelementptr inbounds i16**, i16*** %1065, i64 %idxprom1324
  %1066 = load i16**, i16*** %arrayidx1325, align 8
  %arrayidx1326 = getelementptr inbounds i16*, i16** %1066, i64 %idxprom1322
  %1067 = load i16*, i16** %arrayidx1326, align 8
  %arrayidx1327 = getelementptr inbounds i16, i16* %1067, i64 0
  store i16 %1060, i16* %arrayidx1327, align 2
  %1068 = load i16, i16* %mv_y, align 2
  %1069 = load i32, i32* %v4x4blkno, align 4
  %1070 = load i32, i32* %j, align 4
  %add1328 = add nsw i32 %1069, %1070
  %idxprom1329 = sext i32 %add1328 to i64
  %1071 = load i32, i32* %h4x4blkno, align 4
  %1072 = load i32, i32* %i, align 4
  %add1330 = add nsw i32 %1071, %1072
  %idxprom1331 = sext i32 %add1330 to i64
  %1073 = load i16***, i16**** %mv_array, align 8
  %arrayidx1332 = getelementptr inbounds i16**, i16*** %1073, i64 %idxprom1331
  %1074 = load i16**, i16*** %arrayidx1332, align 8
  %arrayidx1333 = getelementptr inbounds i16*, i16** %1074, i64 %idxprom1329
  %1075 = load i16*, i16** %arrayidx1333, align 8
  %arrayidx1334 = getelementptr inbounds i16, i16* %1075, i64 1
  store i16 %1068, i16* %arrayidx1334, align 2
  br label %for.inc.1335

for.inc.1335:                                     ; preds = %for.body.1294
  %1076 = load i32, i32* %j, align 4
  %inc1336 = add nsw i32 %1076, 1
  store i32 %inc1336, i32* %j, align 4
  br label %for.cond.1290

for.end.1337:                                     ; preds = %for.cond.1290
  br label %for.inc.1338

for.inc.1338:                                     ; preds = %for.end.1337
  %1077 = load i32, i32* %i, align 4
  %inc1339 = add nsw i32 %1077, 1
  store i32 %inc1339, i32* %i, align 4
  br label %for.cond.1285

for.end.1340:                                     ; preds = %for.cond.1285
  br label %if.end.1384

if.else.1341:                                     ; preds = %if.end.1275
  store i32 0, i32* %i, align 4
  br label %for.cond.1342

for.cond.1342:                                    ; preds = %for.inc.1381, %if.else.1341
  %1078 = load i32, i32* %i, align 4
  %1079 = load i32, i32* %bsx, align 4
  %shr1343 = ashr i32 %1079, 2
  %cmp1344 = icmp slt i32 %1078, %shr1343
  br i1 %cmp1344, label %for.body.1346, label %for.end.1383

for.body.1346:                                    ; preds = %for.cond.1342
  store i32 0, i32* %j, align 4
  br label %for.cond.1347

for.cond.1347:                                    ; preds = %for.inc.1378, %for.body.1346
  %1080 = load i32, i32* %j, align 4
  %1081 = load i32, i32* %bsy, align 4
  %shr1348 = ashr i32 %1081, 2
  %cmp1349 = icmp slt i32 %1080, %shr1348
  br i1 %cmp1349, label %for.body.1351, label %for.end.1380

for.body.1351:                                    ; preds = %for.cond.1347
  %1082 = load i16, i16* %mv_x, align 2
  %1083 = load i32, i32* %blocktype.addr, align 4
  %idxprom1352 = sext i32 %1083 to i64
  %1084 = load i16, i16* %ref.addr, align 2
  %idxprom1353 = sext i16 %1084 to i64
  %1085 = load i32, i32* %list.addr, align 4
  %idxprom1354 = sext i32 %1085 to i64
  %1086 = load i32, i32* %block_y, align 4
  %1087 = load i32, i32* %j, align 4
  %add1355 = add nsw i32 %1086, %1087
  %idxprom1356 = sext i32 %add1355 to i64
  %1088 = load i32, i32* %block_x, align 4
  %1089 = load i32, i32* %i, align 4
  %add1357 = add nsw i32 %1088, %1089
  %idxprom1358 = sext i32 %add1357 to i64
  %1090 = load i16******, i16******* %all_mv, align 8
  %arrayidx1359 = getelementptr inbounds i16*****, i16****** %1090, i64 %idxprom1358
  %1091 = load i16*****, i16****** %arrayidx1359, align 8
  %arrayidx1360 = getelementptr inbounds i16****, i16***** %1091, i64 %idxprom1356
  %1092 = load i16****, i16***** %arrayidx1360, align 8
  %arrayidx1361 = getelementptr inbounds i16***, i16**** %1092, i64 %idxprom1354
  %1093 = load i16***, i16**** %arrayidx1361, align 8
  %arrayidx1362 = getelementptr inbounds i16**, i16*** %1093, i64 %idxprom1353
  %1094 = load i16**, i16*** %arrayidx1362, align 8
  %arrayidx1363 = getelementptr inbounds i16*, i16** %1094, i64 %idxprom1352
  %1095 = load i16*, i16** %arrayidx1363, align 8
  %arrayidx1364 = getelementptr inbounds i16, i16* %1095, i64 0
  store i16 %1082, i16* %arrayidx1364, align 2
  %1096 = load i16, i16* %mv_y, align 2
  %1097 = load i32, i32* %blocktype.addr, align 4
  %idxprom1365 = sext i32 %1097 to i64
  %1098 = load i16, i16* %ref.addr, align 2
  %idxprom1366 = sext i16 %1098 to i64
  %1099 = load i32, i32* %list.addr, align 4
  %idxprom1367 = sext i32 %1099 to i64
  %1100 = load i32, i32* %block_y, align 4
  %1101 = load i32, i32* %j, align 4
  %add1368 = add nsw i32 %1100, %1101
  %idxprom1369 = sext i32 %add1368 to i64
  %1102 = load i32, i32* %block_x, align 4
  %1103 = load i32, i32* %i, align 4
  %add1370 = add nsw i32 %1102, %1103
  %idxprom1371 = sext i32 %add1370 to i64
  %1104 = load i16******, i16******* %all_mv, align 8
  %arrayidx1372 = getelementptr inbounds i16*****, i16****** %1104, i64 %idxprom1371
  %1105 = load i16*****, i16****** %arrayidx1372, align 8
  %arrayidx1373 = getelementptr inbounds i16****, i16***** %1105, i64 %idxprom1369
  %1106 = load i16****, i16***** %arrayidx1373, align 8
  %arrayidx1374 = getelementptr inbounds i16***, i16**** %1106, i64 %idxprom1367
  %1107 = load i16***, i16**** %arrayidx1374, align 8
  %arrayidx1375 = getelementptr inbounds i16**, i16*** %1107, i64 %idxprom1366
  %1108 = load i16**, i16*** %arrayidx1375, align 8
  %arrayidx1376 = getelementptr inbounds i16*, i16** %1108, i64 %idxprom1365
  %1109 = load i16*, i16** %arrayidx1376, align 8
  %arrayidx1377 = getelementptr inbounds i16, i16* %1109, i64 1
  store i16 %1096, i16* %arrayidx1377, align 2
  br label %for.inc.1378

for.inc.1378:                                     ; preds = %for.body.1351
  %1110 = load i32, i32* %j, align 4
  %inc1379 = add nsw i32 %1110, 1
  store i32 %inc1379, i32* %j, align 4
  br label %for.cond.1347

for.end.1380:                                     ; preds = %for.cond.1347
  br label %for.inc.1381

for.inc.1381:                                     ; preds = %for.end.1380
  %1111 = load i32, i32* %i, align 4
  %inc1382 = add nsw i32 %1111, 1
  store i32 %inc1382, i32* %i, align 4
  br label %for.cond.1342

for.end.1383:                                     ; preds = %for.cond.1342
  br label %if.end.1384

if.end.1384:                                      ; preds = %for.end.1383, %for.end.1340
  %1112 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type1385 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1112, i32 0, i32 6
  %1113 = load i32, i32* %type1385, align 4
  %cmp1386 = icmp eq i32 %1113, 1
  br i1 %cmp1386, label %land.lhs.true.1388, label %if.end.1569

land.lhs.true.1388:                               ; preds = %if.end.1384
  %1114 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %BiPredMotionEstimation = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %1114, i32 0, i32 39
  %1115 = load i32, i32* %BiPredMotionEstimation, align 4
  %cmp1389 = icmp ne i32 %1115, 0
  br i1 %cmp1389, label %land.lhs.true.1391, label %if.end.1569

land.lhs.true.1391:                               ; preds = %land.lhs.true.1388
  %1116 = load i32, i32* %blocktype.addr, align 4
  %cmp1392 = icmp eq i32 %1116, 1
  br i1 %cmp1392, label %land.lhs.true.1394, label %if.end.1569

land.lhs.true.1394:                               ; preds = %land.lhs.true.1391
  %1117 = load i16, i16* %ref.addr, align 2
  %conv1395 = sext i16 %1117 to i32
  %cmp1396 = icmp eq i32 %conv1395, 0
  br i1 %cmp1396, label %if.then.1398, label %if.end.1569

if.then.1398:                                     ; preds = %land.lhs.true.1394
  %1118 = load i32, i32* %list.addr, align 4
  %tobool1399 = icmp ne i32 %1118, 0
  br i1 %tobool1399, label %cond.true.1400, label %cond.false.1401

cond.true.1400:                                   ; preds = %if.then.1398
  %1119 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %bipred_mv1 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1119, i32 0, i32 72
  %1120 = load i16******, i16******* %bipred_mv1, align 8
  br label %cond.end.1402

cond.false.1401:                                  ; preds = %if.then.1398
  %1121 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %bipred_mv2 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1121, i32 0, i32 73
  %1122 = load i16******, i16******* %bipred_mv2, align 8
  br label %cond.end.1402

cond.end.1402:                                    ; preds = %cond.false.1401, %cond.true.1400
  %cond1403 = phi i16****** [ %1120, %cond.true.1400 ], [ %1122, %cond.false.1401 ]
  store i16****** %cond1403, i16******* %bipred_mv, align 8
  %1123 = load i32, i32* %max_value, align 4
  store i32 %1123, i32* %min_mcostbi, align 4
  store i16 0, i16* %pred_mv_x2, align 2
  store i16 0, i16* %pred_mv_y2, align 2
  %1124 = load i32, i32* %list.addr, align 4
  %conv1404 = trunc i32 %1124 to i16
  store i16 %conv1404, i16* %iterlist, align 2
  %arraydecay = getelementptr inbounds [2 x i16], [2 x i16]* %pred_mv_bi, i32 0, i32 0
  %1125 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx1405 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %1125, i32 0, i32 32
  %1126 = load i16***, i16**** %ref_idx1405, align 8
  %1127 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %mv1406 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %1127, i32 0, i32 35
  %1128 = load i16****, i16***** %mv1406, align 8
  %1129 = load i32, i32* %list.addr, align 4
  %cmp1407 = icmp eq i32 %1129, 0
  %cond1409 = select i1 %cmp1407, i32 1, i32 0
  %1130 = load i32, i32* %block_x, align 4
  %1131 = load i32, i32* %block_y, align 4
  %1132 = load i32, i32* %bsx, align 4
  %1133 = load i32, i32* %bsy, align 4
  call void @SetMotionVectorPredictor(i16* %arraydecay, i16*** %1126, i16**** %1128, i16 signext 0, i32 %cond1409, i32 %1130, i32 %1131, i32 %1132, i32 %1133)
  %1134 = load i16, i16* %mv_x, align 2
  %conv1410 = sext i16 %1134 to i32
  %add1411 = add nsw i32 %conv1410, 2
  %shr1412 = ashr i32 %add1411, 2
  %conv1413 = trunc i32 %shr1412 to i16
  store i16 %conv1413, i16* %mv_x, align 2
  %1135 = load i16, i16* %mv_y, align 2
  %conv1414 = sext i16 %1135 to i32
  %add1415 = add nsw i32 %conv1414, 2
  %shr1416 = ashr i32 %add1415, 2
  %conv1417 = trunc i32 %shr1416 to i16
  store i16 %conv1417, i16* %mv_y, align 2
  store i32 0, i32* %i, align 4
  br label %for.cond.1418

for.cond.1418:                                    ; preds = %for.inc.1456, %cond.end.1402
  %1136 = load i32, i32* %i, align 4
  %1137 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %BiPredMERefinements = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %1137, i32 0, i32 40
  %1138 = load i32, i32* %BiPredMERefinements, align 4
  %cmp1419 = icmp sle i32 %1136, %1138
  br i1 %cmp1419, label %for.body.1421, label %for.end.1458

for.body.1421:                                    ; preds = %for.cond.1418
  %1139 = load i32, i32* %i, align 4
  %rem1422 = srem i32 %1139, 2
  %tobool1423 = icmp ne i32 %rem1422, 0
  br i1 %tobool1423, label %if.then.1424, label %if.else.1433

if.then.1424:                                     ; preds = %for.body.1421
  %1140 = load i16*, i16** %pred_mv, align 8
  %arrayidx1425 = getelementptr inbounds i16, i16* %1140, i64 0
  %1141 = load i16, i16* %arrayidx1425, align 2
  store i16 %1141, i16* %pred_mv_x2, align 2
  %1142 = load i16*, i16** %pred_mv, align 8
  %arrayidx1426 = getelementptr inbounds i16, i16* %1142, i64 1
  %1143 = load i16, i16* %arrayidx1426, align 2
  store i16 %1143, i16* %pred_mv_y2, align 2
  %arrayidx1427 = getelementptr inbounds [2 x i16], [2 x i16]* %pred_mv_bi, i32 0, i64 0
  %1144 = load i16, i16* %arrayidx1427, align 2
  store i16 %1144, i16* %pred_mv_x1, align 2
  %arrayidx1428 = getelementptr inbounds [2 x i16], [2 x i16]* %pred_mv_bi, i32 0, i64 1
  %1145 = load i16, i16* %arrayidx1428, align 2
  store i16 %1145, i16* %pred_mv_y1, align 2
  %1146 = load i16, i16* %bimv_x, align 2
  store i16 %1146, i16* %tempmv_x, align 2
  %1147 = load i16, i16* %bimv_y, align 2
  store i16 %1147, i16* %tempmv_y, align 2
  %1148 = load i16, i16* %mv_x, align 2
  store i16 %1148, i16* %bimv_x, align 2
  %1149 = load i16, i16* %mv_y, align 2
  store i16 %1149, i16* %bimv_y, align 2
  %1150 = load i32, i32* %list.addr, align 4
  %cmp1429 = icmp eq i32 %1150, 0
  %cond1431 = select i1 %cmp1429, i32 1, i32 0
  %conv1432 = trunc i32 %cond1431 to i16
  store i16 %conv1432, i16* %iterlist, align 2
  br label %if.end.1452

if.else.1433:                                     ; preds = %for.body.1421
  %1151 = load i16*, i16** %pred_mv, align 8
  %arrayidx1434 = getelementptr inbounds i16, i16* %1151, i64 0
  %1152 = load i16, i16* %arrayidx1434, align 2
  store i16 %1152, i16* %pred_mv_x1, align 2
  %1153 = load i16*, i16** %pred_mv, align 8
  %arrayidx1435 = getelementptr inbounds i16, i16* %1153, i64 1
  %1154 = load i16, i16* %arrayidx1435, align 2
  store i16 %1154, i16* %pred_mv_y1, align 2
  %arrayidx1436 = getelementptr inbounds [2 x i16], [2 x i16]* %pred_mv_bi, i32 0, i64 0
  %1155 = load i16, i16* %arrayidx1436, align 2
  store i16 %1155, i16* %pred_mv_x2, align 2
  %arrayidx1437 = getelementptr inbounds [2 x i16], [2 x i16]* %pred_mv_bi, i32 0, i64 1
  %1156 = load i16, i16* %arrayidx1437, align 2
  store i16 %1156, i16* %pred_mv_y2, align 2
  %1157 = load i32, i32* %i, align 4
  %cmp1438 = icmp ne i32 %1157, 0
  br i1 %cmp1438, label %if.then.1440, label %if.else.1441

if.then.1440:                                     ; preds = %if.else.1433
  %1158 = load i16, i16* %bimv_x, align 2
  store i16 %1158, i16* %tempmv_x, align 2
  %1159 = load i16, i16* %bimv_y, align 2
  store i16 %1159, i16* %tempmv_y, align 2
  %1160 = load i16, i16* %mv_x, align 2
  store i16 %1160, i16* %bimv_x, align 2
  %1161 = load i16, i16* %mv_y, align 2
  store i16 %1161, i16* %bimv_y, align 2
  br label %if.end.1450

if.else.1441:                                     ; preds = %if.else.1433
  %1162 = load i16, i16* %mv_x, align 2
  store i16 %1162, i16* %tempmv_x, align 2
  %1163 = load i16, i16* %mv_y, align 2
  store i16 %1163, i16* %tempmv_y, align 2
  %1164 = load i16, i16* %pred_mv_x2, align 2
  %conv1442 = sext i16 %1164 to i32
  %add1443 = add nsw i32 %conv1442, 2
  %shr1444 = ashr i32 %add1443, 2
  %conv1445 = trunc i32 %shr1444 to i16
  store i16 %conv1445, i16* %bimv_x, align 2
  %1165 = load i16, i16* %pred_mv_y2, align 2
  %conv1446 = sext i16 %1165 to i32
  %add1447 = add nsw i32 %conv1446, 2
  %shr1448 = ashr i32 %add1447, 2
  %conv1449 = trunc i32 %shr1448 to i16
  store i16 %conv1449, i16* %bimv_y, align 2
  br label %if.end.1450

if.end.1450:                                      ; preds = %if.else.1441, %if.then.1440
  %1166 = load i32, i32* %list.addr, align 4
  %conv1451 = trunc i32 %1166 to i16
  store i16 %conv1451, i16* %iterlist, align 2
  br label %if.end.1452

if.end.1452:                                      ; preds = %if.end.1450, %if.then.1424
  %1167 = load i16, i16* %ref.addr, align 2
  %1168 = load i16, i16* %iterlist, align 2
  %conv1453 = sext i16 %1168 to i32
  %1169 = load i32, i32* %pic_pix_x, align 4
  %1170 = load i32, i32* %pic_pix_y, align 4
  %1171 = load i32, i32* %blocktype.addr, align 4
  %1172 = load i32, i32* %i, align 4
  %1173 = load i16, i16* %pred_mv_x1, align 2
  %1174 = load i16, i16* %pred_mv_y1, align 2
  %1175 = load i16, i16* %pred_mv_x2, align 2
  %1176 = load i16, i16* %pred_mv_y2, align 2
  %1177 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %BiPredMESearchRange = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %1177, i32 0, i32 41
  %1178 = load i32, i32* %BiPredMESearchRange, align 4
  %1179 = load i32, i32* %i, align 4
  %shr1454 = ashr i32 %1178, %1179
  %1180 = load i32, i32* %min_mcostbi, align 4
  %1181 = load double, double* %lambda.addr, align 8
  %call1455 = call i32 @FullPelBlockMotionBiPred(i16** getelementptr inbounds ([16 x i16*], [16 x i16*]* @BlockMotionSearch.orig_pic, i32 0, i32 0), i16 signext %1167, i32 %conv1453, i32 %1169, i32 %1170, i32 %1171, i32 %1172, i16 signext %1173, i16 signext %1174, i16 signext %1175, i16 signext %1176, i16* %bimv_x, i16* %bimv_y, i16* %tempmv_x, i16* %tempmv_y, i32 %shr1454, i32 %1180, double %1181)
  store i32 %call1455, i32* %min_mcostbi, align 4
  %1182 = load i16, i16* %tempmv_x, align 2
  store i16 %1182, i16* %mv_x, align 2
  %1183 = load i16, i16* %tempmv_y, align 2
  store i16 %1183, i16* %mv_y, align 2
  br label %for.inc.1456

for.inc.1456:                                     ; preds = %if.end.1452
  %1184 = load i32, i32* %i, align 4
  %inc1457 = add nsw i32 %1184, 1
  store i32 %inc1457, i32* %i, align 4
  br label %for.cond.1418

for.end.1458:                                     ; preds = %for.cond.1418
  %1185 = load i16, i16* %tempmv_x, align 2
  %conv1459 = sext i16 %1185 to i32
  %shl = shl i32 %conv1459, 2
  %conv1460 = trunc i32 %shl to i16
  store i16 %conv1460, i16* %tempmv_x, align 2
  %1186 = load i16, i16* %tempmv_y, align 2
  %conv1461 = sext i16 %1186 to i32
  %shl1462 = shl i32 %conv1461, 2
  %conv1463 = trunc i32 %shl1462 to i16
  store i16 %conv1463, i16* %tempmv_y, align 2
  %1187 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %BiPredMESubPel = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %1187, i32 0, i32 42
  %1188 = load i32, i32* %BiPredMESubPel, align 4
  %tobool1464 = icmp ne i32 %1188, 0
  br i1 %tobool1464, label %if.then.1465, label %if.else.1473

if.then.1465:                                     ; preds = %for.end.1458
  %1189 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamard1466 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %1189, i32 0, i32 6
  %1190 = load i32, i32* %hadamard1466, align 4
  %tobool1467 = icmp ne i32 %1190, 0
  br i1 %tobool1467, label %if.then.1468, label %if.end.1469

if.then.1468:                                     ; preds = %if.then.1465
  %1191 = load i32, i32* %max_value, align 4
  store i32 %1191, i32* %min_mcostbi, align 4
  br label %if.end.1469

if.end.1469:                                      ; preds = %if.then.1468, %if.then.1465
  %1192 = load i16, i16* %iterlist, align 2
  %conv1470 = sext i16 %1192 to i32
  %1193 = load i32, i32* %pic_pix_x, align 4
  %1194 = load i32, i32* %pic_pix_y, align 4
  %1195 = load i32, i32* %blocktype.addr, align 4
  %1196 = load i16, i16* %pred_mv_x2, align 2
  %1197 = load i16, i16* %pred_mv_y2, align 2
  %1198 = load i32, i32* %min_mcostbi, align 4
  %1199 = load double, double* %lambda.addr, align 8
  %mul1471 = fmul double %1199, 5.000000e-01
  %call1472 = call i32 @SubPelBlockSearchBiPred(i16** getelementptr inbounds ([16 x i16*], [16 x i16*]* @BlockMotionSearch.orig_pic, i32 0, i32 0), i16 signext 0, i32 %conv1470, i32 %1193, i32 %1194, i32 %1195, i16 signext %1196, i16 signext %1197, i16* %bimv_x, i16* %bimv_y, i16* %tempmv_x, i16* %tempmv_y, i32 9, i32 9, i32 %1198, double %mul1471)
  store i32 %call1472, i32* %min_mcostbi, align 4
  br label %if.end.1480

if.else.1473:                                     ; preds = %for.end.1458
  %1200 = load i16, i16* %bimv_x, align 2
  %conv1474 = sext i16 %1200 to i32
  %shl1475 = shl i32 %conv1474, 2
  %conv1476 = trunc i32 %shl1475 to i16
  store i16 %conv1476, i16* %bimv_x, align 2
  %1201 = load i16, i16* %bimv_y, align 2
  %conv1477 = sext i16 %1201 to i32
  %shl1478 = shl i32 %conv1477, 2
  %conv1479 = trunc i32 %shl1478 to i16
  store i16 %conv1479, i16* %bimv_y, align 2
  br label %if.end.1480

if.end.1480:                                      ; preds = %if.else.1473, %if.end.1469
  %1202 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %BiPredMESubPel1481 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %1202, i32 0, i32 42
  %1203 = load i32, i32* %BiPredMESubPel1481, align 4
  %cmp1482 = icmp eq i32 %1203, 2
  br i1 %cmp1482, label %if.then.1484, label %if.else.1495

if.then.1484:                                     ; preds = %if.end.1480
  %1204 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamard1485 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %1204, i32 0, i32 6
  %1205 = load i32, i32* %hadamard1485, align 4
  %tobool1486 = icmp ne i32 %1205, 0
  br i1 %tobool1486, label %if.then.1487, label %if.end.1488

if.then.1487:                                     ; preds = %if.then.1484
  %1206 = load i32, i32* %max_value, align 4
  store i32 %1206, i32* %min_mcostbi, align 4
  br label %if.end.1488

if.end.1488:                                      ; preds = %if.then.1487, %if.then.1484
  %1207 = load i16, i16* %iterlist, align 2
  %conv1489 = sext i16 %1207 to i32
  %cmp1490 = icmp eq i32 %conv1489, 0
  %cond1492 = select i1 %cmp1490, i32 1, i32 0
  %1208 = load i32, i32* %pic_pix_x, align 4
  %1209 = load i32, i32* %pic_pix_y, align 4
  %1210 = load i32, i32* %blocktype.addr, align 4
  %1211 = load i16, i16* %pred_mv_x, align 2
  %1212 = load i16, i16* %pred_mv_y, align 2
  %1213 = load i32, i32* %min_mcostbi, align 4
  %1214 = load double, double* %lambda.addr, align 8
  %mul1493 = fmul double %1214, 5.000000e-01
  %call1494 = call i32 @SubPelBlockSearchBiPred(i16** getelementptr inbounds ([16 x i16*], [16 x i16*]* @BlockMotionSearch.orig_pic, i32 0, i32 0), i16 signext 0, i32 %cond1492, i32 %1208, i32 %1209, i32 %1210, i16 signext %1211, i16 signext %1212, i16* %mv_x, i16* %mv_y, i16* %bimv_x, i16* %bimv_y, i32 9, i32 9, i32 %1213, double %mul1493)
  store i32 %call1494, i32* %min_mcostbi, align 4
  br label %if.end.1496

if.else.1495:                                     ; preds = %if.end.1480
  %1215 = load i16, i16* %tempmv_x, align 2
  store i16 %1215, i16* %mv_x, align 2
  %1216 = load i16, i16* %tempmv_y, align 2
  store i16 %1216, i16* %mv_y, align 2
  br label %if.end.1496

if.end.1496:                                      ; preds = %if.else.1495, %if.end.1488
  store i32 0, i32* %i, align 4
  br label %for.cond.1497

for.cond.1497:                                    ; preds = %for.inc.1566, %if.end.1496
  %1217 = load i32, i32* %i, align 4
  %1218 = load i32, i32* %bsx, align 4
  %shr1498 = ashr i32 %1218, 2
  %cmp1499 = icmp slt i32 %1217, %shr1498
  br i1 %cmp1499, label %for.body.1501, label %for.end.1568

for.body.1501:                                    ; preds = %for.cond.1497
  store i32 0, i32* %j, align 4
  br label %for.cond.1502

for.cond.1502:                                    ; preds = %for.inc.1563, %for.body.1501
  %1219 = load i32, i32* %j, align 4
  %1220 = load i32, i32* %bsy, align 4
  %shr1503 = ashr i32 %1220, 2
  %cmp1504 = icmp slt i32 %1219, %shr1503
  br i1 %cmp1504, label %for.body.1506, label %for.end.1565

for.body.1506:                                    ; preds = %for.cond.1502
  %1221 = load i16, i16* %mv_x, align 2
  %1222 = load i32, i32* %blocktype.addr, align 4
  %idxprom1507 = sext i32 %1222 to i64
  %1223 = load i16, i16* %iterlist, align 2
  %idxprom1508 = sext i16 %1223 to i64
  %1224 = load i32, i32* %block_y, align 4
  %1225 = load i32, i32* %j, align 4
  %add1509 = add nsw i32 %1224, %1225
  %idxprom1510 = sext i32 %add1509 to i64
  %1226 = load i32, i32* %block_x, align 4
  %1227 = load i32, i32* %i, align 4
  %add1511 = add nsw i32 %1226, %1227
  %idxprom1512 = sext i32 %add1511 to i64
  %1228 = load i16******, i16******* %bipred_mv, align 8
  %arrayidx1513 = getelementptr inbounds i16*****, i16****** %1228, i64 %idxprom1512
  %1229 = load i16*****, i16****** %arrayidx1513, align 8
  %arrayidx1514 = getelementptr inbounds i16****, i16***** %1229, i64 %idxprom1510
  %1230 = load i16****, i16***** %arrayidx1514, align 8
  %arrayidx1515 = getelementptr inbounds i16***, i16**** %1230, i64 %idxprom1508
  %1231 = load i16***, i16**** %arrayidx1515, align 8
  %arrayidx1516 = getelementptr inbounds i16**, i16*** %1231, i64 0
  %1232 = load i16**, i16*** %arrayidx1516, align 8
  %arrayidx1517 = getelementptr inbounds i16*, i16** %1232, i64 %idxprom1507
  %1233 = load i16*, i16** %arrayidx1517, align 8
  %arrayidx1518 = getelementptr inbounds i16, i16* %1233, i64 0
  store i16 %1221, i16* %arrayidx1518, align 2
  %1234 = load i16, i16* %mv_y, align 2
  %1235 = load i32, i32* %blocktype.addr, align 4
  %idxprom1519 = sext i32 %1235 to i64
  %1236 = load i16, i16* %iterlist, align 2
  %idxprom1520 = sext i16 %1236 to i64
  %1237 = load i32, i32* %block_y, align 4
  %1238 = load i32, i32* %j, align 4
  %add1521 = add nsw i32 %1237, %1238
  %idxprom1522 = sext i32 %add1521 to i64
  %1239 = load i32, i32* %block_x, align 4
  %1240 = load i32, i32* %i, align 4
  %add1523 = add nsw i32 %1239, %1240
  %idxprom1524 = sext i32 %add1523 to i64
  %1241 = load i16******, i16******* %bipred_mv, align 8
  %arrayidx1525 = getelementptr inbounds i16*****, i16****** %1241, i64 %idxprom1524
  %1242 = load i16*****, i16****** %arrayidx1525, align 8
  %arrayidx1526 = getelementptr inbounds i16****, i16***** %1242, i64 %idxprom1522
  %1243 = load i16****, i16***** %arrayidx1526, align 8
  %arrayidx1527 = getelementptr inbounds i16***, i16**** %1243, i64 %idxprom1520
  %1244 = load i16***, i16**** %arrayidx1527, align 8
  %arrayidx1528 = getelementptr inbounds i16**, i16*** %1244, i64 0
  %1245 = load i16**, i16*** %arrayidx1528, align 8
  %arrayidx1529 = getelementptr inbounds i16*, i16** %1245, i64 %idxprom1519
  %1246 = load i16*, i16** %arrayidx1529, align 8
  %arrayidx1530 = getelementptr inbounds i16, i16* %1246, i64 1
  store i16 %1234, i16* %arrayidx1530, align 2
  %1247 = load i16, i16* %bimv_x, align 2
  %1248 = load i32, i32* %blocktype.addr, align 4
  %idxprom1531 = sext i32 %1248 to i64
  %1249 = load i16, i16* %iterlist, align 2
  %conv1532 = sext i16 %1249 to i32
  %cmp1533 = icmp eq i32 %conv1532, 0
  %cond1535 = select i1 %cmp1533, i32 1, i32 0
  %idxprom1536 = sext i32 %cond1535 to i64
  %1250 = load i32, i32* %block_y, align 4
  %1251 = load i32, i32* %j, align 4
  %add1537 = add nsw i32 %1250, %1251
  %idxprom1538 = sext i32 %add1537 to i64
  %1252 = load i32, i32* %block_x, align 4
  %1253 = load i32, i32* %i, align 4
  %add1539 = add nsw i32 %1252, %1253
  %idxprom1540 = sext i32 %add1539 to i64
  %1254 = load i16******, i16******* %bipred_mv, align 8
  %arrayidx1541 = getelementptr inbounds i16*****, i16****** %1254, i64 %idxprom1540
  %1255 = load i16*****, i16****** %arrayidx1541, align 8
  %arrayidx1542 = getelementptr inbounds i16****, i16***** %1255, i64 %idxprom1538
  %1256 = load i16****, i16***** %arrayidx1542, align 8
  %arrayidx1543 = getelementptr inbounds i16***, i16**** %1256, i64 %idxprom1536
  %1257 = load i16***, i16**** %arrayidx1543, align 8
  %arrayidx1544 = getelementptr inbounds i16**, i16*** %1257, i64 0
  %1258 = load i16**, i16*** %arrayidx1544, align 8
  %arrayidx1545 = getelementptr inbounds i16*, i16** %1258, i64 %idxprom1531
  %1259 = load i16*, i16** %arrayidx1545, align 8
  %arrayidx1546 = getelementptr inbounds i16, i16* %1259, i64 0
  store i16 %1247, i16* %arrayidx1546, align 2
  %1260 = load i16, i16* %bimv_y, align 2
  %1261 = load i32, i32* %blocktype.addr, align 4
  %idxprom1547 = sext i32 %1261 to i64
  %1262 = load i16, i16* %iterlist, align 2
  %conv1548 = sext i16 %1262 to i32
  %cmp1549 = icmp eq i32 %conv1548, 0
  %cond1551 = select i1 %cmp1549, i32 1, i32 0
  %idxprom1552 = sext i32 %cond1551 to i64
  %1263 = load i32, i32* %block_y, align 4
  %1264 = load i32, i32* %j, align 4
  %add1553 = add nsw i32 %1263, %1264
  %idxprom1554 = sext i32 %add1553 to i64
  %1265 = load i32, i32* %block_x, align 4
  %1266 = load i32, i32* %i, align 4
  %add1555 = add nsw i32 %1265, %1266
  %idxprom1556 = sext i32 %add1555 to i64
  %1267 = load i16******, i16******* %bipred_mv, align 8
  %arrayidx1557 = getelementptr inbounds i16*****, i16****** %1267, i64 %idxprom1556
  %1268 = load i16*****, i16****** %arrayidx1557, align 8
  %arrayidx1558 = getelementptr inbounds i16****, i16***** %1268, i64 %idxprom1554
  %1269 = load i16****, i16***** %arrayidx1558, align 8
  %arrayidx1559 = getelementptr inbounds i16***, i16**** %1269, i64 %idxprom1552
  %1270 = load i16***, i16**** %arrayidx1559, align 8
  %arrayidx1560 = getelementptr inbounds i16**, i16*** %1270, i64 0
  %1271 = load i16**, i16*** %arrayidx1560, align 8
  %arrayidx1561 = getelementptr inbounds i16*, i16** %1271, i64 %idxprom1547
  %1272 = load i16*, i16** %arrayidx1561, align 8
  %arrayidx1562 = getelementptr inbounds i16, i16* %1272, i64 1
  store i16 %1260, i16* %arrayidx1562, align 2
  br label %for.inc.1563

for.inc.1563:                                     ; preds = %for.body.1506
  %1273 = load i32, i32* %j, align 4
  %inc1564 = add nsw i32 %1273, 1
  store i32 %inc1564, i32* %j, align 4
  br label %for.cond.1502

for.end.1565:                                     ; preds = %for.cond.1502
  br label %for.inc.1566

for.inc.1566:                                     ; preds = %for.end.1565
  %1274 = load i32, i32* %i, align 4
  %inc1567 = add nsw i32 %1274, 1
  store i32 %inc1567, i32* %i, align 4
  br label %for.cond.1497

for.end.1568:                                     ; preds = %for.cond.1497
  br label %if.end.1569

if.end.1569:                                      ; preds = %for.end.1568, %land.lhs.true.1394, %land.lhs.true.1391, %land.lhs.true.1388, %if.end.1384
  %time1570 = getelementptr inbounds %struct.timeb, %struct.timeb* %tstruct2, i32 0, i32 0
  store i64 0, i64* %time1570, align 8
  %millitm1571 = getelementptr inbounds %struct.timeb, %struct.timeb* %tstruct2, i32 0, i32 1
  store i16 0, i16* %millitm1571, align 2
  %timezone1572 = getelementptr inbounds %struct.timeb, %struct.timeb* %tstruct2, i32 0, i32 2
  store i16 0, i16* %timezone1572, align 2
  %dstflag1573 = getelementptr inbounds %struct.timeb, %struct.timeb* %tstruct2, i32 0, i32 3
  store i16 0, i16* %dstflag1573, align 2
  %time1574 = getelementptr inbounds %struct.timeb, %struct.timeb* %tstruct2, i32 0, i32 0
  %1275 = load i64, i64* %time1574, align 8
  %mul1575 = mul nsw i64 %1275, 1000
  %millitm1576 = getelementptr inbounds %struct.timeb, %struct.timeb* %tstruct2, i32 0, i32 1
  %1276 = load i16, i16* %millitm1576, align 2
  %conv1577 = zext i16 %1276 to i64
  %add1578 = add nsw i64 %mul1575, %conv1577
  %time1579 = getelementptr inbounds %struct.timeb, %struct.timeb* %tstruct1, i32 0, i32 0
  %1277 = load i64, i64* %time1579, align 8
  %mul1580 = mul nsw i64 %1277, 1000
  %millitm1581 = getelementptr inbounds %struct.timeb, %struct.timeb* %tstruct1, i32 0, i32 1
  %1278 = load i16, i16* %millitm1581, align 2
  %conv1582 = zext i16 %1278 to i64
  %add1583 = add nsw i64 %mul1580, %conv1582
  %sub1584 = sub nsw i64 %add1578, %add1583
  %conv1585 = trunc i64 %sub1584 to i32
  store i32 %conv1585, i32* %me_tmp_time, align 4
  %1279 = load i32, i32* %me_tmp_time, align 4
  %1280 = load i32, i32* @me_tot_time, align 4
  %add1586 = add nsw i32 %1280, %1279
  store i32 %add1586, i32* @me_tot_time, align 4
  %1281 = load i32, i32* %me_tmp_time, align 4
  %1282 = load i32, i32* @me_time, align 4
  %add1587 = add nsw i32 %1282, %1281
  store i32 %add1587, i32* @me_time, align 4
  %1283 = load i32, i32* %min_mcost, align 4
  ret i32 %1283
}

declare i32 @FastIntegerPelBlockMotionSearch(i16**, i16 signext, i32, i32, i32, i32, i16 signext, i16 signext, i16*, i16*, i32, i32, double) #2

declare i32 @FastSubPelBlockMotionSearch(i16**, i16 signext, i32, i32, i32, i32, i16 signext, i16 signext, i16*, i16*, i32, i32, i32, double, i32) #2

; Function Attrs: nounwind uwtable
define i32 @GetSkipCostMB(double %lambda) #0 {
entry:
  %lambda.addr = alloca double, align 8
  %block_y = alloca i32, align 4
  %block_x = alloca i32, align 4
  %pic_pix_y = alloca i32, align 4
  %pic_pix_x = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %diff = alloca [16 x i32], align 16
  %cost = alloca i32, align 4
  %curr_diff = alloca [8 x [8 x i32]], align 16
  %diff8x8 = alloca [64 x i32], align 16
  %mb_x = alloca i32, align 4
  %mb_y = alloca i32, align 4
  %block = alloca i32, align 4
  store double %lambda, double* %lambda.addr, align 8
  store i32 0, i32* %cost, align 4
  store i32 0, i32* %block, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc.84, %entry
  %0 = load i32, i32* %block, align 4
  %cmp = icmp slt i32 %0, 4
  br i1 %cmp, label %for.body, label %for.end.86

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %block, align 4
  %div = sdiv i32 %1, 2
  %shl = shl i32 %div, 3
  store i32 %shl, i32* %mb_y, align 4
  %2 = load i32, i32* %block, align 4
  %rem = srem i32 %2, 2
  %shl1 = shl i32 %rem, 3
  store i32 %shl1, i32* %mb_x, align 4
  %3 = load i32, i32* %mb_y, align 4
  store i32 %3, i32* %block_y, align 4
  br label %for.cond.2

for.cond.2:                                       ; preds = %for.inc.48, %for.body
  %4 = load i32, i32* %block_y, align 4
  %5 = load i32, i32* %mb_y, align 4
  %add = add nsw i32 %5, 8
  %cmp3 = icmp slt i32 %4, %add
  br i1 %cmp3, label %for.body.4, label %for.end.50

for.body.4:                                       ; preds = %for.cond.2
  %6 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %opix_y = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %6, i32 0, i32 38
  %7 = load i32, i32* %opix_y, align 4
  %8 = load i32, i32* %block_y, align 4
  %add5 = add nsw i32 %7, %8
  store i32 %add5, i32* %pic_pix_y, align 4
  %9 = load i32, i32* %mb_x, align 4
  store i32 %9, i32* %block_x, align 4
  br label %for.cond.6

for.cond.6:                                       ; preds = %for.inc.45, %for.body.4
  %10 = load i32, i32* %block_x, align 4
  %11 = load i32, i32* %mb_x, align 4
  %add7 = add nsw i32 %11, 8
  %cmp8 = icmp slt i32 %10, %add7
  br i1 %cmp8, label %for.body.9, label %for.end.47

for.body.9:                                       ; preds = %for.cond.6
  %12 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %opix_x = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %12, i32 0, i32 37
  %13 = load i32, i32* %opix_x, align 4
  %14 = load i32, i32* %block_x, align 4
  %add10 = add nsw i32 %13, %14
  store i32 %add10, i32* %pic_pix_x, align 4
  %15 = load i32, i32* %block_x, align 4
  %16 = load i32, i32* %block_y, align 4
  call void @LumaPrediction4x4(i32 %15, i32 %16, i32 0, i32 0, i32 0, i16 signext 0, i16 signext 0)
  store i32 0, i32* %j, align 4
  store i32 0, i32* %k, align 4
  br label %for.cond.11

for.cond.11:                                      ; preds = %for.inc.39, %for.body.9
  %17 = load i32, i32* %j, align 4
  %cmp12 = icmp slt i32 %17, 4
  br i1 %cmp12, label %for.body.13, label %for.end.41

for.body.13:                                      ; preds = %for.cond.11
  store i32 0, i32* %i, align 4
  br label %for.cond.14

for.cond.14:                                      ; preds = %for.inc, %for.body.13
  %18 = load i32, i32* %i, align 4
  %cmp15 = icmp slt i32 %18, 4
  br i1 %cmp15, label %for.body.16, label %for.end

for.body.16:                                      ; preds = %for.cond.14
  %19 = load i32, i32* %pic_pix_x, align 4
  %20 = load i32, i32* %i, align 4
  %add17 = add nsw i32 %19, %20
  %idxprom = sext i32 %add17 to i64
  %21 = load i32, i32* %pic_pix_y, align 4
  %22 = load i32, i32* %j, align 4
  %add18 = add nsw i32 %21, %22
  %idxprom19 = sext i32 %add18 to i64
  %23 = load i16**, i16*** @imgY_org, align 8
  %arrayidx = getelementptr inbounds i16*, i16** %23, i64 %idxprom19
  %24 = load i16*, i16** %arrayidx, align 8
  %arrayidx20 = getelementptr inbounds i16, i16* %24, i64 %idxprom
  %25 = load i16, i16* %arrayidx20, align 2
  %conv = zext i16 %25 to i32
  %26 = load i32, i32* %j, align 4
  %27 = load i32, i32* %block_y, align 4
  %add21 = add nsw i32 %26, %27
  %idxprom22 = sext i32 %add21 to i64
  %28 = load i32, i32* %i, align 4
  %29 = load i32, i32* %block_x, align 4
  %add23 = add nsw i32 %28, %29
  %idxprom24 = sext i32 %add23 to i64
  %30 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mpr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %30, i32 0, i32 45
  %arrayidx25 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %mpr, i32 0, i64 %idxprom24
  %arrayidx26 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx25, i32 0, i64 %idxprom22
  %31 = load i16, i16* %arrayidx26, align 2
  %conv27 = zext i16 %31 to i32
  %sub = sub nsw i32 %conv, %conv27
  %32 = load i32, i32* %block_x, align 4
  %33 = load i32, i32* %mb_x, align 4
  %sub28 = sub nsw i32 %32, %33
  %34 = load i32, i32* %i, align 4
  %add29 = add nsw i32 %sub28, %34
  %idxprom30 = sext i32 %add29 to i64
  %35 = load i32, i32* %block_y, align 4
  %36 = load i32, i32* %mb_y, align 4
  %sub31 = sub nsw i32 %35, %36
  %37 = load i32, i32* %j, align 4
  %add32 = add nsw i32 %sub31, %37
  %idxprom33 = sext i32 %add32 to i64
  %arrayidx34 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %curr_diff, i32 0, i64 %idxprom33
  %arrayidx35 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx34, i32 0, i64 %idxprom30
  store i32 %sub, i32* %arrayidx35, align 4
  %38 = load i32, i32* %k, align 4
  %idxprom36 = sext i32 %38 to i64
  %arrayidx37 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i32 0, i64 %idxprom36
  store i32 %sub, i32* %arrayidx37, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body.16
  %39 = load i32, i32* %i, align 4
  %inc = add nsw i32 %39, 1
  store i32 %inc, i32* %i, align 4
  %40 = load i32, i32* %k, align 4
  %inc38 = add nsw i32 %40, 1
  store i32 %inc38, i32* %k, align 4
  br label %for.cond.14

for.end:                                          ; preds = %for.cond.14
  br label %for.inc.39

for.inc.39:                                       ; preds = %for.end
  %41 = load i32, i32* %j, align 4
  %inc40 = add nsw i32 %41, 1
  store i32 %inc40, i32* %j, align 4
  br label %for.cond.11

for.end.41:                                       ; preds = %for.cond.11
  %42 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %rdopt = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %42, i32 0, i32 85
  %43 = load i32, i32* %rdopt, align 4
  %cmp42 = icmp eq i32 %43, 0
  br i1 %cmp42, label %land.lhs.true, label %if.then

land.lhs.true:                                    ; preds = %for.end.41
  %44 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %AllowTransform8x8 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %44, i32 0, i32 123
  %45 = load i32, i32* %AllowTransform8x8, align 4
  %tobool = icmp ne i32 %45, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %land.lhs.true, %for.end.41
  %arraydecay = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i32 0, i32 0
  %46 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamard = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %46, i32 0, i32 6
  %47 = load i32, i32* %hadamard, align 4
  %call = call i32 @SATD(i32* %arraydecay, i32 %47)
  %48 = load i32, i32* %cost, align 4
  %add44 = add nsw i32 %48, %call
  store i32 %add44, i32* %cost, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true
  br label %for.inc.45

for.inc.45:                                       ; preds = %if.end
  %49 = load i32, i32* %block_x, align 4
  %add46 = add nsw i32 %49, 4
  store i32 %add46, i32* %block_x, align 4
  br label %for.cond.6

for.end.47:                                       ; preds = %for.cond.6
  br label %for.inc.48

for.inc.48:                                       ; preds = %for.end.47
  %50 = load i32, i32* %block_y, align 4
  %add49 = add nsw i32 %50, 4
  store i32 %add49, i32* %block_y, align 4
  br label %for.cond.2

for.end.50:                                       ; preds = %for.cond.2
  %51 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %rdopt51 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %51, i32 0, i32 85
  %52 = load i32, i32* %rdopt51, align 4
  %cmp52 = icmp eq i32 %52, 0
  br i1 %cmp52, label %land.lhs.true.54, label %if.end.83

land.lhs.true.54:                                 ; preds = %for.end.50
  %53 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %AllowTransform8x855 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %53, i32 0, i32 123
  %54 = load i32, i32* %AllowTransform8x855, align 4
  %tobool56 = icmp ne i32 %54, 0
  br i1 %tobool56, label %if.then.57, label %if.end.83

if.then.57:                                       ; preds = %land.lhs.true.54
  store i32 0, i32* %k, align 4
  store i32 0, i32* %j, align 4
  br label %for.cond.58

for.cond.58:                                      ; preds = %for.inc.76, %if.then.57
  %55 = load i32, i32* %j, align 4
  %cmp59 = icmp slt i32 %55, 8
  br i1 %cmp59, label %for.body.61, label %for.end.78

for.body.61:                                      ; preds = %for.cond.58
  store i32 0, i32* %i, align 4
  br label %for.cond.62

for.cond.62:                                      ; preds = %for.inc.72, %for.body.61
  %56 = load i32, i32* %i, align 4
  %cmp63 = icmp slt i32 %56, 8
  br i1 %cmp63, label %for.body.65, label %for.end.75

for.body.65:                                      ; preds = %for.cond.62
  %57 = load i32, i32* %i, align 4
  %idxprom66 = sext i32 %57 to i64
  %58 = load i32, i32* %j, align 4
  %idxprom67 = sext i32 %58 to i64
  %arrayidx68 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %curr_diff, i32 0, i64 %idxprom67
  %arrayidx69 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx68, i32 0, i64 %idxprom66
  %59 = load i32, i32* %arrayidx69, align 4
  %60 = load i32, i32* %k, align 4
  %idxprom70 = sext i32 %60 to i64
  %arrayidx71 = getelementptr inbounds [64 x i32], [64 x i32]* %diff8x8, i32 0, i64 %idxprom70
  store i32 %59, i32* %arrayidx71, align 4
  br label %for.inc.72

for.inc.72:                                       ; preds = %for.body.65
  %61 = load i32, i32* %i, align 4
  %inc73 = add nsw i32 %61, 1
  store i32 %inc73, i32* %i, align 4
  %62 = load i32, i32* %k, align 4
  %inc74 = add nsw i32 %62, 1
  store i32 %inc74, i32* %k, align 4
  br label %for.cond.62

for.end.75:                                       ; preds = %for.cond.62
  br label %for.inc.76

for.inc.76:                                       ; preds = %for.end.75
  %63 = load i32, i32* %j, align 4
  %inc77 = add nsw i32 %63, 1
  store i32 %inc77, i32* %j, align 4
  br label %for.cond.58

for.end.78:                                       ; preds = %for.cond.58
  %arraydecay79 = getelementptr inbounds [64 x i32], [64 x i32]* %diff8x8, i32 0, i32 0
  %64 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamard80 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %64, i32 0, i32 6
  %65 = load i32, i32* %hadamard80, align 4
  %call81 = call i32 @SATD8X8(i32* %arraydecay79, i32 %65)
  %66 = load i32, i32* %cost, align 4
  %add82 = add nsw i32 %66, %call81
  store i32 %add82, i32* %cost, align 4
  br label %if.end.83

if.end.83:                                        ; preds = %for.end.78, %land.lhs.true.54, %for.end.50
  br label %for.inc.84

for.inc.84:                                       ; preds = %if.end.83
  %67 = load i32, i32* %block, align 4
  %inc85 = add nsw i32 %67, 1
  store i32 %inc85, i32* %block, align 4
  br label %for.cond

for.end.86:                                       ; preds = %for.cond
  %68 = load i32, i32* %cost, align 4
  ret i32 %68
}

; Function Attrs: nounwind uwtable
define i32 @BIDPartitionCost(i32 %blocktype, i32 %block8x8, i16 signext %fw_ref, i16 signext %bw_ref, i32 %lambda_factor) #0 {
entry:
  %blocktype.addr = alloca i32, align 4
  %block8x8.addr = alloca i32, align 4
  %fw_ref.addr = alloca i16, align 2
  %bw_ref.addr = alloca i16, align 2
  %lambda_factor.addr = alloca i32, align 4
  %diff = alloca [64 x i32], align 16
  %curr_blk = alloca [16 x [16 x i32]], align 16
  %bsx = alloca i32, align 4
  %bsy = alloca i32, align 4
  %pic_pix_x = alloca i32, align 4
  %pic_pix_y = alloca i32, align 4
  %block_x = alloca i32, align 4
  %block_y = alloca i32, align 4
  %v = alloca i32, align 4
  %h = alloca i32, align 4
  %mcost = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %mvd_bits = alloca i32, align 4
  %parttype = alloca i32, align 4
  %step_h0 = alloca i32, align 4
  %step_v0 = alloca i32, align 4
  %step_h = alloca i32, align 4
  %step_v = alloca i32, align 4
  %bxx = alloca i32, align 4
  %byy = alloca i32, align 4
  %all_mv = alloca i16******, align 8
  %p_mv = alloca i16******, align 8
  store i32 %blocktype, i32* %blocktype.addr, align 4
  store i32 %block8x8, i32* %block8x8.addr, align 4
  store i16 %fw_ref, i16* %fw_ref.addr, align 2
  store i16 %bw_ref, i16* %bw_ref.addr, align 2
  store i32 %lambda_factor, i32* %lambda_factor.addr, align 4
  %0 = load i32, i32* %blocktype.addr, align 4
  %idxprom = sext i32 %0 to i64
  %1 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %blc_size = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %1, i32 0, i32 20
  %arrayidx = getelementptr inbounds [8 x [2 x i32]], [8 x [2 x i32]]* %blc_size, i32 0, i64 %idxprom
  %arrayidx1 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx, i32 0, i64 0
  %2 = load i32, i32* %arrayidx1, align 4
  %cmp = icmp slt i32 %2, 8
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %3 = load i32, i32* %blocktype.addr, align 4
  %idxprom2 = sext i32 %3 to i64
  %4 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %blc_size3 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %4, i32 0, i32 20
  %arrayidx4 = getelementptr inbounds [8 x [2 x i32]], [8 x [2 x i32]]* %blc_size3, i32 0, i64 %idxprom2
  %arrayidx5 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx4, i32 0, i64 0
  %5 = load i32, i32* %arrayidx5, align 4
  br label %cond.end

cond.false:                                       ; preds = %entry
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %5, %cond.true ], [ 8, %cond.false ]
  store i32 %cond, i32* %bsx, align 4
  %6 = load i32, i32* %blocktype.addr, align 4
  %idxprom6 = sext i32 %6 to i64
  %7 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %blc_size7 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %7, i32 0, i32 20
  %arrayidx8 = getelementptr inbounds [8 x [2 x i32]], [8 x [2 x i32]]* %blc_size7, i32 0, i64 %idxprom6
  %arrayidx9 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx8, i32 0, i64 1
  %8 = load i32, i32* %arrayidx9, align 4
  %cmp10 = icmp slt i32 %8, 8
  br i1 %cmp10, label %cond.true.11, label %cond.false.16

cond.true.11:                                     ; preds = %cond.end
  %9 = load i32, i32* %blocktype.addr, align 4
  %idxprom12 = sext i32 %9 to i64
  %10 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %blc_size13 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %10, i32 0, i32 20
  %arrayidx14 = getelementptr inbounds [8 x [2 x i32]], [8 x [2 x i32]]* %blc_size13, i32 0, i64 %idxprom12
  %arrayidx15 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx14, i32 0, i64 1
  %11 = load i32, i32* %arrayidx15, align 4
  br label %cond.end.17

cond.false.16:                                    ; preds = %cond.end
  br label %cond.end.17

cond.end.17:                                      ; preds = %cond.false.16, %cond.true.11
  %cond18 = phi i32 [ %11, %cond.true.11 ], [ 8, %cond.false.16 ]
  store i32 %cond18, i32* %bsy, align 4
  store i32 0, i32* %mvd_bits, align 4
  %12 = load i32, i32* %blocktype.addr, align 4
  %cmp19 = icmp slt i32 %12, 4
  br i1 %cmp19, label %cond.true.20, label %cond.false.21

cond.true.20:                                     ; preds = %cond.end.17
  %13 = load i32, i32* %blocktype.addr, align 4
  br label %cond.end.22

cond.false.21:                                    ; preds = %cond.end.17
  br label %cond.end.22

cond.end.22:                                      ; preds = %cond.false.21, %cond.true.20
  %cond23 = phi i32 [ %13, %cond.true.20 ], [ 4, %cond.false.21 ]
  store i32 %cond23, i32* %parttype, align 4
  %14 = load i32, i32* %parttype, align 4
  %idxprom24 = sext i32 %14 to i64
  %15 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %part_size = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %15, i32 0, i32 21
  %arrayidx25 = getelementptr inbounds [8 x [2 x i32]], [8 x [2 x i32]]* %part_size, i32 0, i64 %idxprom24
  %arrayidx26 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx25, i32 0, i64 0
  %16 = load i32, i32* %arrayidx26, align 4
  store i32 %16, i32* %step_h0, align 4
  %17 = load i32, i32* %parttype, align 4
  %idxprom27 = sext i32 %17 to i64
  %18 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %part_size28 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %18, i32 0, i32 21
  %arrayidx29 = getelementptr inbounds [8 x [2 x i32]], [8 x [2 x i32]]* %part_size28, i32 0, i64 %idxprom27
  %arrayidx30 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx29, i32 0, i64 1
  %19 = load i32, i32* %arrayidx30, align 4
  store i32 %19, i32* %step_v0, align 4
  %20 = load i32, i32* %blocktype.addr, align 4
  %idxprom31 = sext i32 %20 to i64
  %21 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %part_size32 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %21, i32 0, i32 21
  %arrayidx33 = getelementptr inbounds [8 x [2 x i32]], [8 x [2 x i32]]* %part_size32, i32 0, i64 %idxprom31
  %arrayidx34 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx33, i32 0, i64 0
  %22 = load i32, i32* %arrayidx34, align 4
  store i32 %22, i32* %step_h, align 4
  %23 = load i32, i32* %blocktype.addr, align 4
  %idxprom35 = sext i32 %23 to i64
  %24 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %part_size36 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %24, i32 0, i32 21
  %arrayidx37 = getelementptr inbounds [8 x [2 x i32]], [8 x [2 x i32]]* %part_size36, i32 0, i64 %idxprom35
  %arrayidx38 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx37, i32 0, i64 1
  %25 = load i32, i32* %arrayidx38, align 4
  store i32 %25, i32* %step_v, align 4
  %26 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %all_mv39 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %26, i32 0, i32 71
  %27 = load i16******, i16******* %all_mv39, align 8
  store i16****** %27, i16******* %all_mv, align 8
  %28 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pred_mv = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %28, i32 0, i32 70
  %29 = load i16******, i16******* %pred_mv, align 8
  store i16****** %29, i16******* %p_mv, align 8
  %30 = load i32, i32* %block8x8.addr, align 4
  %idxprom40 = sext i32 %30 to i64
  %31 = load i32, i32* %parttype, align 4
  %idxprom41 = sext i32 %31 to i64
  %arrayidx42 = getelementptr inbounds [5 x [4 x i32]], [5 x [4 x i32]]* @BIDPartitionCost.by0, i32 0, i64 %idxprom41
  %arrayidx43 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx42, i32 0, i64 %idxprom40
  %32 = load i32, i32* %arrayidx43, align 4
  store i32 %32, i32* %v, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc.164, %cond.end.22
  %33 = load i32, i32* %v, align 4
  %34 = load i32, i32* %block8x8.addr, align 4
  %idxprom44 = sext i32 %34 to i64
  %35 = load i32, i32* %parttype, align 4
  %idxprom45 = sext i32 %35 to i64
  %arrayidx46 = getelementptr inbounds [5 x [4 x i32]], [5 x [4 x i32]]* @BIDPartitionCost.by0, i32 0, i64 %idxprom45
  %arrayidx47 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx46, i32 0, i64 %idxprom44
  %36 = load i32, i32* %arrayidx47, align 4
  %37 = load i32, i32* %step_v0, align 4
  %add = add nsw i32 %36, %37
  %cmp48 = icmp slt i32 %33, %add
  br i1 %cmp48, label %for.body, label %for.end.166

for.body:                                         ; preds = %for.cond
  %38 = load i32, i32* %block8x8.addr, align 4
  %idxprom49 = sext i32 %38 to i64
  %39 = load i32, i32* %parttype, align 4
  %idxprom50 = sext i32 %39 to i64
  %arrayidx51 = getelementptr inbounds [5 x [4 x i32]], [5 x [4 x i32]]* @BIDPartitionCost.bx0, i32 0, i64 %idxprom50
  %arrayidx52 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx51, i32 0, i64 %idxprom49
  %40 = load i32, i32* %arrayidx52, align 4
  store i32 %40, i32* %h, align 4
  br label %for.cond.53

for.cond.53:                                      ; preds = %for.inc, %for.body
  %41 = load i32, i32* %h, align 4
  %42 = load i32, i32* %block8x8.addr, align 4
  %idxprom54 = sext i32 %42 to i64
  %43 = load i32, i32* %parttype, align 4
  %idxprom55 = sext i32 %43 to i64
  %arrayidx56 = getelementptr inbounds [5 x [4 x i32]], [5 x [4 x i32]]* @BIDPartitionCost.bx0, i32 0, i64 %idxprom55
  %arrayidx57 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx56, i32 0, i64 %idxprom54
  %44 = load i32, i32* %arrayidx57, align 4
  %45 = load i32, i32* %step_h0, align 4
  %add58 = add nsw i32 %44, %45
  %cmp59 = icmp slt i32 %41, %add58
  br i1 %cmp59, label %for.body.60, label %for.end

for.body.60:                                      ; preds = %for.cond.53
  %46 = load i32, i32* %blocktype.addr, align 4
  %idxprom61 = sext i32 %46 to i64
  %47 = load i16, i16* %fw_ref.addr, align 2
  %idxprom62 = sext i16 %47 to i64
  %48 = load i32, i32* %v, align 4
  %idxprom63 = sext i32 %48 to i64
  %49 = load i32, i32* %h, align 4
  %idxprom64 = sext i32 %49 to i64
  %50 = load i16******, i16******* %all_mv, align 8
  %arrayidx65 = getelementptr inbounds i16*****, i16****** %50, i64 %idxprom64
  %51 = load i16*****, i16****** %arrayidx65, align 8
  %arrayidx66 = getelementptr inbounds i16****, i16***** %51, i64 %idxprom63
  %52 = load i16****, i16***** %arrayidx66, align 8
  %arrayidx67 = getelementptr inbounds i16***, i16**** %52, i64 0
  %53 = load i16***, i16**** %arrayidx67, align 8
  %arrayidx68 = getelementptr inbounds i16**, i16*** %53, i64 %idxprom62
  %54 = load i16**, i16*** %arrayidx68, align 8
  %arrayidx69 = getelementptr inbounds i16*, i16** %54, i64 %idxprom61
  %55 = load i16*, i16** %arrayidx69, align 8
  %arrayidx70 = getelementptr inbounds i16, i16* %55, i64 0
  %56 = load i16, i16* %arrayidx70, align 2
  %conv = sext i16 %56 to i32
  %57 = load i32, i32* %blocktype.addr, align 4
  %idxprom71 = sext i32 %57 to i64
  %58 = load i16, i16* %fw_ref.addr, align 2
  %idxprom72 = sext i16 %58 to i64
  %59 = load i32, i32* %v, align 4
  %idxprom73 = sext i32 %59 to i64
  %60 = load i32, i32* %h, align 4
  %idxprom74 = sext i32 %60 to i64
  %61 = load i16******, i16******* %p_mv, align 8
  %arrayidx75 = getelementptr inbounds i16*****, i16****** %61, i64 %idxprom74
  %62 = load i16*****, i16****** %arrayidx75, align 8
  %arrayidx76 = getelementptr inbounds i16****, i16***** %62, i64 %idxprom73
  %63 = load i16****, i16***** %arrayidx76, align 8
  %arrayidx77 = getelementptr inbounds i16***, i16**** %63, i64 0
  %64 = load i16***, i16**** %arrayidx77, align 8
  %arrayidx78 = getelementptr inbounds i16**, i16*** %64, i64 %idxprom72
  %65 = load i16**, i16*** %arrayidx78, align 8
  %arrayidx79 = getelementptr inbounds i16*, i16** %65, i64 %idxprom71
  %66 = load i16*, i16** %arrayidx79, align 8
  %arrayidx80 = getelementptr inbounds i16, i16* %66, i64 0
  %67 = load i16, i16* %arrayidx80, align 2
  %conv81 = sext i16 %67 to i32
  %sub = sub nsw i32 %conv, %conv81
  %idxprom82 = sext i32 %sub to i64
  %68 = load i32*, i32** @mvbits, align 8
  %arrayidx83 = getelementptr inbounds i32, i32* %68, i64 %idxprom82
  %69 = load i32, i32* %arrayidx83, align 4
  %70 = load i32, i32* %mvd_bits, align 4
  %add84 = add nsw i32 %70, %69
  store i32 %add84, i32* %mvd_bits, align 4
  %71 = load i32, i32* %blocktype.addr, align 4
  %idxprom85 = sext i32 %71 to i64
  %72 = load i16, i16* %fw_ref.addr, align 2
  %idxprom86 = sext i16 %72 to i64
  %73 = load i32, i32* %v, align 4
  %idxprom87 = sext i32 %73 to i64
  %74 = load i32, i32* %h, align 4
  %idxprom88 = sext i32 %74 to i64
  %75 = load i16******, i16******* %all_mv, align 8
  %arrayidx89 = getelementptr inbounds i16*****, i16****** %75, i64 %idxprom88
  %76 = load i16*****, i16****** %arrayidx89, align 8
  %arrayidx90 = getelementptr inbounds i16****, i16***** %76, i64 %idxprom87
  %77 = load i16****, i16***** %arrayidx90, align 8
  %arrayidx91 = getelementptr inbounds i16***, i16**** %77, i64 0
  %78 = load i16***, i16**** %arrayidx91, align 8
  %arrayidx92 = getelementptr inbounds i16**, i16*** %78, i64 %idxprom86
  %79 = load i16**, i16*** %arrayidx92, align 8
  %arrayidx93 = getelementptr inbounds i16*, i16** %79, i64 %idxprom85
  %80 = load i16*, i16** %arrayidx93, align 8
  %arrayidx94 = getelementptr inbounds i16, i16* %80, i64 1
  %81 = load i16, i16* %arrayidx94, align 2
  %conv95 = sext i16 %81 to i32
  %82 = load i32, i32* %blocktype.addr, align 4
  %idxprom96 = sext i32 %82 to i64
  %83 = load i16, i16* %fw_ref.addr, align 2
  %idxprom97 = sext i16 %83 to i64
  %84 = load i32, i32* %v, align 4
  %idxprom98 = sext i32 %84 to i64
  %85 = load i32, i32* %h, align 4
  %idxprom99 = sext i32 %85 to i64
  %86 = load i16******, i16******* %p_mv, align 8
  %arrayidx100 = getelementptr inbounds i16*****, i16****** %86, i64 %idxprom99
  %87 = load i16*****, i16****** %arrayidx100, align 8
  %arrayidx101 = getelementptr inbounds i16****, i16***** %87, i64 %idxprom98
  %88 = load i16****, i16***** %arrayidx101, align 8
  %arrayidx102 = getelementptr inbounds i16***, i16**** %88, i64 0
  %89 = load i16***, i16**** %arrayidx102, align 8
  %arrayidx103 = getelementptr inbounds i16**, i16*** %89, i64 %idxprom97
  %90 = load i16**, i16*** %arrayidx103, align 8
  %arrayidx104 = getelementptr inbounds i16*, i16** %90, i64 %idxprom96
  %91 = load i16*, i16** %arrayidx104, align 8
  %arrayidx105 = getelementptr inbounds i16, i16* %91, i64 1
  %92 = load i16, i16* %arrayidx105, align 2
  %conv106 = sext i16 %92 to i32
  %sub107 = sub nsw i32 %conv95, %conv106
  %idxprom108 = sext i32 %sub107 to i64
  %93 = load i32*, i32** @mvbits, align 8
  %arrayidx109 = getelementptr inbounds i32, i32* %93, i64 %idxprom108
  %94 = load i32, i32* %arrayidx109, align 4
  %95 = load i32, i32* %mvd_bits, align 4
  %add110 = add nsw i32 %95, %94
  store i32 %add110, i32* %mvd_bits, align 4
  %96 = load i32, i32* %blocktype.addr, align 4
  %idxprom111 = sext i32 %96 to i64
  %97 = load i16, i16* %bw_ref.addr, align 2
  %idxprom112 = sext i16 %97 to i64
  %98 = load i32, i32* %v, align 4
  %idxprom113 = sext i32 %98 to i64
  %99 = load i32, i32* %h, align 4
  %idxprom114 = sext i32 %99 to i64
  %100 = load i16******, i16******* %all_mv, align 8
  %arrayidx115 = getelementptr inbounds i16*****, i16****** %100, i64 %idxprom114
  %101 = load i16*****, i16****** %arrayidx115, align 8
  %arrayidx116 = getelementptr inbounds i16****, i16***** %101, i64 %idxprom113
  %102 = load i16****, i16***** %arrayidx116, align 8
  %arrayidx117 = getelementptr inbounds i16***, i16**** %102, i64 1
  %103 = load i16***, i16**** %arrayidx117, align 8
  %arrayidx118 = getelementptr inbounds i16**, i16*** %103, i64 %idxprom112
  %104 = load i16**, i16*** %arrayidx118, align 8
  %arrayidx119 = getelementptr inbounds i16*, i16** %104, i64 %idxprom111
  %105 = load i16*, i16** %arrayidx119, align 8
  %arrayidx120 = getelementptr inbounds i16, i16* %105, i64 0
  %106 = load i16, i16* %arrayidx120, align 2
  %conv121 = sext i16 %106 to i32
  %107 = load i32, i32* %blocktype.addr, align 4
  %idxprom122 = sext i32 %107 to i64
  %108 = load i16, i16* %bw_ref.addr, align 2
  %idxprom123 = sext i16 %108 to i64
  %109 = load i32, i32* %v, align 4
  %idxprom124 = sext i32 %109 to i64
  %110 = load i32, i32* %h, align 4
  %idxprom125 = sext i32 %110 to i64
  %111 = load i16******, i16******* %p_mv, align 8
  %arrayidx126 = getelementptr inbounds i16*****, i16****** %111, i64 %idxprom125
  %112 = load i16*****, i16****** %arrayidx126, align 8
  %arrayidx127 = getelementptr inbounds i16****, i16***** %112, i64 %idxprom124
  %113 = load i16****, i16***** %arrayidx127, align 8
  %arrayidx128 = getelementptr inbounds i16***, i16**** %113, i64 1
  %114 = load i16***, i16**** %arrayidx128, align 8
  %arrayidx129 = getelementptr inbounds i16**, i16*** %114, i64 %idxprom123
  %115 = load i16**, i16*** %arrayidx129, align 8
  %arrayidx130 = getelementptr inbounds i16*, i16** %115, i64 %idxprom122
  %116 = load i16*, i16** %arrayidx130, align 8
  %arrayidx131 = getelementptr inbounds i16, i16* %116, i64 0
  %117 = load i16, i16* %arrayidx131, align 2
  %conv132 = sext i16 %117 to i32
  %sub133 = sub nsw i32 %conv121, %conv132
  %idxprom134 = sext i32 %sub133 to i64
  %118 = load i32*, i32** @mvbits, align 8
  %arrayidx135 = getelementptr inbounds i32, i32* %118, i64 %idxprom134
  %119 = load i32, i32* %arrayidx135, align 4
  %120 = load i32, i32* %mvd_bits, align 4
  %add136 = add nsw i32 %120, %119
  store i32 %add136, i32* %mvd_bits, align 4
  %121 = load i32, i32* %blocktype.addr, align 4
  %idxprom137 = sext i32 %121 to i64
  %122 = load i16, i16* %bw_ref.addr, align 2
  %idxprom138 = sext i16 %122 to i64
  %123 = load i32, i32* %v, align 4
  %idxprom139 = sext i32 %123 to i64
  %124 = load i32, i32* %h, align 4
  %idxprom140 = sext i32 %124 to i64
  %125 = load i16******, i16******* %all_mv, align 8
  %arrayidx141 = getelementptr inbounds i16*****, i16****** %125, i64 %idxprom140
  %126 = load i16*****, i16****** %arrayidx141, align 8
  %arrayidx142 = getelementptr inbounds i16****, i16***** %126, i64 %idxprom139
  %127 = load i16****, i16***** %arrayidx142, align 8
  %arrayidx143 = getelementptr inbounds i16***, i16**** %127, i64 1
  %128 = load i16***, i16**** %arrayidx143, align 8
  %arrayidx144 = getelementptr inbounds i16**, i16*** %128, i64 %idxprom138
  %129 = load i16**, i16*** %arrayidx144, align 8
  %arrayidx145 = getelementptr inbounds i16*, i16** %129, i64 %idxprom137
  %130 = load i16*, i16** %arrayidx145, align 8
  %arrayidx146 = getelementptr inbounds i16, i16* %130, i64 1
  %131 = load i16, i16* %arrayidx146, align 2
  %conv147 = sext i16 %131 to i32
  %132 = load i32, i32* %blocktype.addr, align 4
  %idxprom148 = sext i32 %132 to i64
  %133 = load i16, i16* %bw_ref.addr, align 2
  %idxprom149 = sext i16 %133 to i64
  %134 = load i32, i32* %v, align 4
  %idxprom150 = sext i32 %134 to i64
  %135 = load i32, i32* %h, align 4
  %idxprom151 = sext i32 %135 to i64
  %136 = load i16******, i16******* %p_mv, align 8
  %arrayidx152 = getelementptr inbounds i16*****, i16****** %136, i64 %idxprom151
  %137 = load i16*****, i16****** %arrayidx152, align 8
  %arrayidx153 = getelementptr inbounds i16****, i16***** %137, i64 %idxprom150
  %138 = load i16****, i16***** %arrayidx153, align 8
  %arrayidx154 = getelementptr inbounds i16***, i16**** %138, i64 1
  %139 = load i16***, i16**** %arrayidx154, align 8
  %arrayidx155 = getelementptr inbounds i16**, i16*** %139, i64 %idxprom149
  %140 = load i16**, i16*** %arrayidx155, align 8
  %arrayidx156 = getelementptr inbounds i16*, i16** %140, i64 %idxprom148
  %141 = load i16*, i16** %arrayidx156, align 8
  %arrayidx157 = getelementptr inbounds i16, i16* %141, i64 1
  %142 = load i16, i16* %arrayidx157, align 2
  %conv158 = sext i16 %142 to i32
  %sub159 = sub nsw i32 %conv147, %conv158
  %idxprom160 = sext i32 %sub159 to i64
  %143 = load i32*, i32** @mvbits, align 8
  %arrayidx161 = getelementptr inbounds i32, i32* %143, i64 %idxprom160
  %144 = load i32, i32* %arrayidx161, align 4
  %145 = load i32, i32* %mvd_bits, align 4
  %add162 = add nsw i32 %145, %144
  store i32 %add162, i32* %mvd_bits, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body.60
  %146 = load i32, i32* %step_h, align 4
  %147 = load i32, i32* %h, align 4
  %add163 = add nsw i32 %147, %146
  store i32 %add163, i32* %h, align 4
  br label %for.cond.53

for.end:                                          ; preds = %for.cond.53
  br label %for.inc.164

for.inc.164:                                      ; preds = %for.end
  %148 = load i32, i32* %step_v, align 4
  %149 = load i32, i32* %v, align 4
  %add165 = add nsw i32 %149, %148
  store i32 %add165, i32* %v, align 4
  br label %for.cond

for.end.166:                                      ; preds = %for.cond
  %150 = load i32, i32* %lambda_factor.addr, align 4
  %151 = load i32, i32* %mvd_bits, align 4
  %mul = mul nsw i32 %150, %151
  %shr = ashr i32 %mul, 16
  store i32 %shr, i32* %mcost, align 4
  store i32 0, i32* %byy, align 4
  %152 = load i32, i32* %block8x8.addr, align 4
  %idxprom167 = sext i32 %152 to i64
  %153 = load i32, i32* %parttype, align 4
  %idxprom168 = sext i32 %153 to i64
  %arrayidx169 = getelementptr inbounds [5 x [4 x i32]], [5 x [4 x i32]]* @BIDPartitionCost.by0, i32 0, i64 %idxprom168
  %arrayidx170 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx169, i32 0, i64 %idxprom167
  %154 = load i32, i32* %arrayidx170, align 4
  store i32 %154, i32* %v, align 4
  br label %for.cond.171

for.cond.171:                                     ; preds = %for.inc.240, %for.end.166
  %155 = load i32, i32* %v, align 4
  %156 = load i32, i32* %block8x8.addr, align 4
  %idxprom172 = sext i32 %156 to i64
  %157 = load i32, i32* %parttype, align 4
  %idxprom173 = sext i32 %157 to i64
  %arrayidx174 = getelementptr inbounds [5 x [4 x i32]], [5 x [4 x i32]]* @BIDPartitionCost.by0, i32 0, i64 %idxprom173
  %arrayidx175 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx174, i32 0, i64 %idxprom172
  %158 = load i32, i32* %arrayidx175, align 4
  %159 = load i32, i32* %step_v0, align 4
  %add176 = add nsw i32 %158, %159
  %cmp177 = icmp slt i32 %155, %add176
  br i1 %cmp177, label %for.body.179, label %for.end.243

for.body.179:                                     ; preds = %for.cond.171
  %160 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %opix_y = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %160, i32 0, i32 38
  %161 = load i32, i32* %opix_y, align 4
  %162 = load i32, i32* %v, align 4
  %shl = shl i32 %162, 2
  store i32 %shl, i32* %block_y, align 4
  %add180 = add nsw i32 %161, %shl
  store i32 %add180, i32* %pic_pix_y, align 4
  store i32 0, i32* %bxx, align 4
  %163 = load i32, i32* %block8x8.addr, align 4
  %idxprom181 = sext i32 %163 to i64
  %164 = load i32, i32* %parttype, align 4
  %idxprom182 = sext i32 %164 to i64
  %arrayidx183 = getelementptr inbounds [5 x [4 x i32]], [5 x [4 x i32]]* @BIDPartitionCost.bx0, i32 0, i64 %idxprom182
  %arrayidx184 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx183, i32 0, i64 %idxprom181
  %165 = load i32, i32* %arrayidx184, align 4
  store i32 %165, i32* %h, align 4
  br label %for.cond.185

for.cond.185:                                     ; preds = %for.inc.236, %for.body.179
  %166 = load i32, i32* %h, align 4
  %167 = load i32, i32* %block8x8.addr, align 4
  %idxprom186 = sext i32 %167 to i64
  %168 = load i32, i32* %parttype, align 4
  %idxprom187 = sext i32 %168 to i64
  %arrayidx188 = getelementptr inbounds [5 x [4 x i32]], [5 x [4 x i32]]* @BIDPartitionCost.bx0, i32 0, i64 %idxprom187
  %arrayidx189 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx188, i32 0, i64 %idxprom186
  %169 = load i32, i32* %arrayidx189, align 4
  %170 = load i32, i32* %step_h0, align 4
  %add190 = add nsw i32 %169, %170
  %cmp191 = icmp slt i32 %166, %add190
  br i1 %cmp191, label %for.body.193, label %for.end.239

for.body.193:                                     ; preds = %for.cond.185
  %171 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %opix_x = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %171, i32 0, i32 37
  %172 = load i32, i32* %opix_x, align 4
  %173 = load i32, i32* %h, align 4
  %shl194 = shl i32 %173, 2
  store i32 %shl194, i32* %block_x, align 4
  %add195 = add nsw i32 %172, %shl194
  store i32 %add195, i32* %pic_pix_x, align 4
  %174 = load i32, i32* %block_x, align 4
  %175 = load i32, i32* %block_y, align 4
  %176 = load i32, i32* %blocktype.addr, align 4
  %177 = load i32, i32* %blocktype.addr, align 4
  %178 = load i16, i16* %fw_ref.addr, align 2
  %179 = load i16, i16* %bw_ref.addr, align 2
  call void @LumaPrediction4x4(i32 %174, i32 %175, i32 2, i32 %176, i32 %177, i16 signext %178, i16 signext %179)
  store i32 0, i32* %j, align 4
  store i32 0, i32* %k, align 4
  br label %for.cond.196

for.cond.196:                                     ; preds = %for.inc.230, %for.body.193
  %180 = load i32, i32* %j, align 4
  %cmp197 = icmp slt i32 %180, 4
  br i1 %cmp197, label %for.body.199, label %for.end.232

for.body.199:                                     ; preds = %for.cond.196
  store i32 0, i32* %i, align 4
  br label %for.cond.200

for.cond.200:                                     ; preds = %for.inc.227, %for.body.199
  %181 = load i32, i32* %i, align 4
  %cmp201 = icmp slt i32 %181, 4
  br i1 %cmp201, label %for.body.203, label %for.end.229

for.body.203:                                     ; preds = %for.cond.200
  %182 = load i32, i32* %pic_pix_x, align 4
  %183 = load i32, i32* %i, align 4
  %add204 = add nsw i32 %182, %183
  %idxprom205 = sext i32 %add204 to i64
  %184 = load i32, i32* %pic_pix_y, align 4
  %185 = load i32, i32* %j, align 4
  %add206 = add nsw i32 %184, %185
  %idxprom207 = sext i32 %add206 to i64
  %186 = load i16**, i16*** @imgY_org, align 8
  %arrayidx208 = getelementptr inbounds i16*, i16** %186, i64 %idxprom207
  %187 = load i16*, i16** %arrayidx208, align 8
  %arrayidx209 = getelementptr inbounds i16, i16* %187, i64 %idxprom205
  %188 = load i16, i16* %arrayidx209, align 2
  %conv210 = zext i16 %188 to i32
  %189 = load i32, i32* %j, align 4
  %190 = load i32, i32* %block_y, align 4
  %add211 = add nsw i32 %189, %190
  %idxprom212 = sext i32 %add211 to i64
  %191 = load i32, i32* %i, align 4
  %192 = load i32, i32* %block_x, align 4
  %add213 = add nsw i32 %191, %192
  %idxprom214 = sext i32 %add213 to i64
  %193 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mpr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %193, i32 0, i32 45
  %arrayidx215 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %mpr, i32 0, i64 %idxprom214
  %arrayidx216 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx215, i32 0, i64 %idxprom212
  %194 = load i16, i16* %arrayidx216, align 2
  %conv217 = zext i16 %194 to i32
  %sub218 = sub nsw i32 %conv210, %conv217
  %195 = load i32, i32* %bxx, align 4
  %196 = load i32, i32* %i, align 4
  %add219 = add nsw i32 %195, %196
  %idxprom220 = sext i32 %add219 to i64
  %197 = load i32, i32* %byy, align 4
  %198 = load i32, i32* %j, align 4
  %add221 = add nsw i32 %197, %198
  %idxprom222 = sext i32 %add221 to i64
  %arrayidx223 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %curr_blk, i32 0, i64 %idxprom222
  %arrayidx224 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx223, i32 0, i64 %idxprom220
  store i32 %sub218, i32* %arrayidx224, align 4
  %199 = load i32, i32* %k, align 4
  %idxprom225 = sext i32 %199 to i64
  %arrayidx226 = getelementptr inbounds [64 x i32], [64 x i32]* %diff, i32 0, i64 %idxprom225
  store i32 %sub218, i32* %arrayidx226, align 4
  br label %for.inc.227

for.inc.227:                                      ; preds = %for.body.203
  %200 = load i32, i32* %i, align 4
  %inc = add nsw i32 %200, 1
  store i32 %inc, i32* %i, align 4
  %201 = load i32, i32* %k, align 4
  %inc228 = add nsw i32 %201, 1
  store i32 %inc228, i32* %k, align 4
  br label %for.cond.200

for.end.229:                                      ; preds = %for.cond.200
  br label %for.inc.230

for.inc.230:                                      ; preds = %for.end.229
  %202 = load i32, i32* %j, align 4
  %inc231 = add nsw i32 %202, 1
  store i32 %inc231, i32* %j, align 4
  br label %for.cond.196

for.end.232:                                      ; preds = %for.cond.196
  %203 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %AllowTransform8x8 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %203, i32 0, i32 123
  %204 = load i32, i32* %AllowTransform8x8, align 4
  %tobool = icmp ne i32 %204, 0
  br i1 %tobool, label %lor.lhs.false, label %if.then

lor.lhs.false:                                    ; preds = %for.end.232
  %205 = load i32, i32* %blocktype.addr, align 4
  %cmp233 = icmp sgt i32 %205, 4
  br i1 %cmp233, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %for.end.232
  %arraydecay = getelementptr inbounds [64 x i32], [64 x i32]* %diff, i32 0, i32 0
  %206 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamard = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %206, i32 0, i32 6
  %207 = load i32, i32* %hadamard, align 4
  %call = call i32 @SATD(i32* %arraydecay, i32 %207)
  %208 = load i32, i32* %mcost, align 4
  %add235 = add nsw i32 %208, %call
  store i32 %add235, i32* %mcost, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %lor.lhs.false
  br label %for.inc.236

for.inc.236:                                      ; preds = %if.end
  %209 = load i32, i32* %bxx, align 4
  %add237 = add nsw i32 %209, 4
  store i32 %add237, i32* %bxx, align 4
  %210 = load i32, i32* %h, align 4
  %inc238 = add nsw i32 %210, 1
  store i32 %inc238, i32* %h, align 4
  br label %for.cond.185

for.end.239:                                      ; preds = %for.cond.185
  br label %for.inc.240

for.inc.240:                                      ; preds = %for.end.239
  %211 = load i32, i32* %byy, align 4
  %add241 = add nsw i32 %211, 4
  store i32 %add241, i32* %byy, align 4
  %212 = load i32, i32* %v, align 4
  %inc242 = add nsw i32 %212, 1
  store i32 %inc242, i32* %v, align 4
  br label %for.cond.171

for.end.243:                                      ; preds = %for.cond.171
  %213 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %AllowTransform8x8244 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %213, i32 0, i32 123
  %214 = load i32, i32* %AllowTransform8x8244, align 4
  %tobool245 = icmp ne i32 %214, 0
  br i1 %tobool245, label %land.lhs.true, label %if.end.298

land.lhs.true:                                    ; preds = %for.end.243
  %215 = load i32, i32* %blocktype.addr, align 4
  %cmp246 = icmp sle i32 %215, 4
  br i1 %cmp246, label %if.then.248, label %if.end.298

if.then.248:                                      ; preds = %land.lhs.true
  store i32 0, i32* %byy, align 4
  br label %for.cond.249

for.cond.249:                                     ; preds = %for.inc.295, %if.then.248
  %216 = load i32, i32* %byy, align 4
  %217 = load i32, i32* %parttype, align 4
  %idxprom250 = sext i32 %217 to i64
  %218 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %blc_size251 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %218, i32 0, i32 20
  %arrayidx252 = getelementptr inbounds [8 x [2 x i32]], [8 x [2 x i32]]* %blc_size251, i32 0, i64 %idxprom250
  %arrayidx253 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx252, i32 0, i64 1
  %219 = load i32, i32* %arrayidx253, align 4
  %cmp254 = icmp slt i32 %216, %219
  br i1 %cmp254, label %for.body.256, label %for.end.297

for.body.256:                                     ; preds = %for.cond.249
  store i32 0, i32* %bxx, align 4
  br label %for.cond.257

for.cond.257:                                     ; preds = %for.inc.292, %for.body.256
  %220 = load i32, i32* %bxx, align 4
  %221 = load i32, i32* %parttype, align 4
  %idxprom258 = sext i32 %221 to i64
  %222 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %blc_size259 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %222, i32 0, i32 20
  %arrayidx260 = getelementptr inbounds [8 x [2 x i32]], [8 x [2 x i32]]* %blc_size259, i32 0, i64 %idxprom258
  %arrayidx261 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx260, i32 0, i64 0
  %223 = load i32, i32* %arrayidx261, align 4
  %cmp262 = icmp slt i32 %220, %223
  br i1 %cmp262, label %for.body.264, label %for.end.294

for.body.264:                                     ; preds = %for.cond.257
  store i32 0, i32* %k, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond.265

for.cond.265:                                     ; preds = %for.inc.285, %for.body.264
  %224 = load i32, i32* %i, align 4
  %cmp266 = icmp slt i32 %224, 8
  br i1 %cmp266, label %for.body.268, label %for.end.287

for.body.268:                                     ; preds = %for.cond.265
  store i32 0, i32* %j, align 4
  br label %for.cond.269

for.cond.269:                                     ; preds = %for.inc.282, %for.body.268
  %225 = load i32, i32* %j, align 4
  %cmp270 = icmp slt i32 %225, 8
  br i1 %cmp270, label %for.body.272, label %for.end.284

for.body.272:                                     ; preds = %for.cond.269
  %226 = load i32, i32* %j, align 4
  %227 = load i32, i32* %bxx, align 4
  %add273 = add nsw i32 %226, %227
  %idxprom274 = sext i32 %add273 to i64
  %228 = load i32, i32* %i, align 4
  %229 = load i32, i32* %byy, align 4
  %add275 = add nsw i32 %228, %229
  %idxprom276 = sext i32 %add275 to i64
  %arrayidx277 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %curr_blk, i32 0, i64 %idxprom276
  %arrayidx278 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx277, i32 0, i64 %idxprom274
  %230 = load i32, i32* %arrayidx278, align 4
  %231 = load i32, i32* %k, align 4
  %inc279 = add nsw i32 %231, 1
  store i32 %inc279, i32* %k, align 4
  %idxprom280 = sext i32 %231 to i64
  %arrayidx281 = getelementptr inbounds [64 x i32], [64 x i32]* %diff, i32 0, i64 %idxprom280
  store i32 %230, i32* %arrayidx281, align 4
  br label %for.inc.282

for.inc.282:                                      ; preds = %for.body.272
  %232 = load i32, i32* %j, align 4
  %inc283 = add nsw i32 %232, 1
  store i32 %inc283, i32* %j, align 4
  br label %for.cond.269

for.end.284:                                      ; preds = %for.cond.269
  br label %for.inc.285

for.inc.285:                                      ; preds = %for.end.284
  %233 = load i32, i32* %i, align 4
  %inc286 = add nsw i32 %233, 1
  store i32 %inc286, i32* %i, align 4
  br label %for.cond.265

for.end.287:                                      ; preds = %for.cond.265
  %arraydecay288 = getelementptr inbounds [64 x i32], [64 x i32]* %diff, i32 0, i32 0
  %234 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamard289 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %234, i32 0, i32 6
  %235 = load i32, i32* %hadamard289, align 4
  %call290 = call i32 @SATD8X8(i32* %arraydecay288, i32 %235)
  %236 = load i32, i32* %mcost, align 4
  %add291 = add nsw i32 %236, %call290
  store i32 %add291, i32* %mcost, align 4
  br label %for.inc.292

for.inc.292:                                      ; preds = %for.end.287
  %237 = load i32, i32* %bsx, align 4
  %238 = load i32, i32* %bxx, align 4
  %add293 = add nsw i32 %238, %237
  store i32 %add293, i32* %bxx, align 4
  br label %for.cond.257

for.end.294:                                      ; preds = %for.cond.257
  br label %for.inc.295

for.inc.295:                                      ; preds = %for.end.294
  %239 = load i32, i32* %bsy, align 4
  %240 = load i32, i32* %byy, align 4
  %add296 = add nsw i32 %240, %239
  store i32 %add296, i32* %byy, align 4
  br label %for.cond.249

for.end.297:                                      ; preds = %for.cond.249
  br label %if.end.298

if.end.298:                                       ; preds = %for.end.297, %land.lhs.true, %for.end.243
  %241 = load i32, i32* %mcost, align 4
  ret i32 %241
}

declare void @LumaPrediction4x4(i32, i32, i32, i32, i32, i16 signext, i16 signext) #2

; Function Attrs: nounwind uwtable
define void @FindSkipModeMotionVector() #0 {
entry:
  %bx = alloca i32, align 4
  %by = alloca i32, align 4
  %all_mv = alloca i16******, align 8
  %pmv = alloca [2 x i16], align 2
  %zeroMotionAbove = alloca i32, align 4
  %zeroMotionLeft = alloca i32, align 4
  %mb_a = alloca %struct.pix_pos, align 4
  %mb_b = alloca %struct.pix_pos, align 4
  %a_mv_y = alloca i32, align 4
  %a_ref_idx = alloca i32, align 4
  %b_mv_y = alloca i32, align 4
  %b_ref_idx = alloca i32, align 4
  %currMB = alloca %struct.macroblock*, align 8
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %all_mv1 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i32 0, i32 71
  %1 = load i16******, i16******* %all_mv1, align 8
  store i16****** %1, i16******* %all_mv, align 8
  store i32 0, i32* %a_mv_y, align 4
  store i32 0, i32* %a_ref_idx, align 4
  store i32 0, i32* %b_mv_y, align 4
  store i32 0, i32* %b_ref_idx, align 4
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 3
  %3 = load i32, i32* %current_mb_nr, align 4
  %idxprom = sext i32 %3 to i64
  %4 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %4, i32 0, i32 51
  %5 = load %struct.macroblock*, %struct.macroblock** %mb_data, align 8
  %arrayidx = getelementptr inbounds %struct.macroblock, %struct.macroblock* %5, i64 %idxprom
  store %struct.macroblock* %arrayidx, %struct.macroblock** %currMB, align 8
  %6 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr2 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %6, i32 0, i32 3
  %7 = load i32, i32* %current_mb_nr2, align 4
  call void @getLuma4x4Neighbour(i32 %7, i32 0, i32 0, i32 -1, i32 0, %struct.pix_pos* %mb_a)
  %8 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr3 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %8, i32 0, i32 3
  %9 = load i32, i32* %current_mb_nr3, align 4
  call void @getLuma4x4Neighbour(i32 %9, i32 0, i32 0, i32 0, i32 -1, %struct.pix_pos* %mb_b)
  %available = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_a, i32 0, i32 0
  %10 = load i32, i32* %available, align 4
  %tobool = icmp ne i32 %10, 0
  br i1 %tobool, label %if.then, label %if.end.37

if.then:                                          ; preds = %entry
  %pos_y = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_a, i32 0, i32 5
  %11 = load i32, i32* %pos_y, align 4
  %idxprom4 = sext i32 %11 to i64
  %pos_x = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_a, i32 0, i32 4
  %12 = load i32, i32* %pos_x, align 4
  %idxprom5 = sext i32 %12 to i64
  %13 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %mv = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %13, i32 0, i32 35
  %14 = load i16****, i16***** %mv, align 8
  %arrayidx6 = getelementptr inbounds i16***, i16**** %14, i64 0
  %15 = load i16***, i16**** %arrayidx6, align 8
  %arrayidx7 = getelementptr inbounds i16**, i16*** %15, i64 %idxprom5
  %16 = load i16**, i16*** %arrayidx7, align 8
  %arrayidx8 = getelementptr inbounds i16*, i16** %16, i64 %idxprom4
  %17 = load i16*, i16** %arrayidx8, align 8
  %arrayidx9 = getelementptr inbounds i16, i16* %17, i64 1
  %18 = load i16, i16* %arrayidx9, align 2
  %conv = sext i16 %18 to i32
  store i32 %conv, i32* %a_mv_y, align 4
  %pos_y10 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_a, i32 0, i32 5
  %19 = load i32, i32* %pos_y10, align 4
  %idxprom11 = sext i32 %19 to i64
  %pos_x12 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_a, i32 0, i32 4
  %20 = load i32, i32* %pos_x12, align 4
  %idxprom13 = sext i32 %20 to i64
  %21 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %21, i32 0, i32 32
  %22 = load i16***, i16**** %ref_idx, align 8
  %arrayidx14 = getelementptr inbounds i16**, i16*** %22, i64 0
  %23 = load i16**, i16*** %arrayidx14, align 8
  %arrayidx15 = getelementptr inbounds i16*, i16** %23, i64 %idxprom13
  %24 = load i16*, i16** %arrayidx15, align 8
  %arrayidx16 = getelementptr inbounds i16, i16* %24, i64 %idxprom11
  %25 = load i16, i16* %arrayidx16, align 2
  %conv17 = sext i16 %25 to i32
  store i32 %conv17, i32* %a_ref_idx, align 4
  %26 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_field = getelementptr inbounds %struct.macroblock, %struct.macroblock* %26, i32 0, i32 22
  %27 = load i32, i32* %mb_field, align 4
  %tobool18 = icmp ne i32 %27, 0
  br i1 %tobool18, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %if.then
  %mb_addr = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_a, i32 0, i32 1
  %28 = load i32, i32* %mb_addr, align 4
  %idxprom19 = sext i32 %28 to i64
  %29 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data20 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %29, i32 0, i32 51
  %30 = load %struct.macroblock*, %struct.macroblock** %mb_data20, align 8
  %arrayidx21 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %30, i64 %idxprom19
  %mb_field22 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx21, i32 0, i32 22
  %31 = load i32, i32* %mb_field22, align 4
  %tobool23 = icmp ne i32 %31, 0
  br i1 %tobool23, label %if.end, label %if.then.24

if.then.24:                                       ; preds = %land.lhs.true
  %32 = load i32, i32* %a_mv_y, align 4
  %div = sdiv i32 %32, 2
  store i32 %div, i32* %a_mv_y, align 4
  %33 = load i32, i32* %a_ref_idx, align 4
  %mul = mul nsw i32 %33, 2
  store i32 %mul, i32* %a_ref_idx, align 4
  br label %if.end

if.end:                                           ; preds = %if.then.24, %land.lhs.true, %if.then
  %34 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_field25 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %34, i32 0, i32 22
  %35 = load i32, i32* %mb_field25, align 4
  %tobool26 = icmp ne i32 %35, 0
  br i1 %tobool26, label %if.end.36, label %land.lhs.true.27

land.lhs.true.27:                                 ; preds = %if.end
  %mb_addr28 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_a, i32 0, i32 1
  %36 = load i32, i32* %mb_addr28, align 4
  %idxprom29 = sext i32 %36 to i64
  %37 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data30 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %37, i32 0, i32 51
  %38 = load %struct.macroblock*, %struct.macroblock** %mb_data30, align 8
  %arrayidx31 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %38, i64 %idxprom29
  %mb_field32 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx31, i32 0, i32 22
  %39 = load i32, i32* %mb_field32, align 4
  %tobool33 = icmp ne i32 %39, 0
  br i1 %tobool33, label %if.then.34, label %if.end.36

if.then.34:                                       ; preds = %land.lhs.true.27
  %40 = load i32, i32* %a_mv_y, align 4
  %mul35 = mul nsw i32 %40, 2
  store i32 %mul35, i32* %a_mv_y, align 4
  %41 = load i32, i32* %a_ref_idx, align 4
  %shr = ashr i32 %41, 1
  store i32 %shr, i32* %a_ref_idx, align 4
  br label %if.end.36

if.end.36:                                        ; preds = %if.then.34, %land.lhs.true.27, %if.end
  br label %if.end.37

if.end.37:                                        ; preds = %if.end.36, %entry
  %available38 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_b, i32 0, i32 0
  %42 = load i32, i32* %available38, align 4
  %tobool39 = icmp ne i32 %42, 0
  br i1 %tobool39, label %if.then.40, label %if.end.86

if.then.40:                                       ; preds = %if.end.37
  %pos_y41 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_b, i32 0, i32 5
  %43 = load i32, i32* %pos_y41, align 4
  %idxprom42 = sext i32 %43 to i64
  %pos_x43 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_b, i32 0, i32 4
  %44 = load i32, i32* %pos_x43, align 4
  %idxprom44 = sext i32 %44 to i64
  %45 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %mv45 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %45, i32 0, i32 35
  %46 = load i16****, i16***** %mv45, align 8
  %arrayidx46 = getelementptr inbounds i16***, i16**** %46, i64 0
  %47 = load i16***, i16**** %arrayidx46, align 8
  %arrayidx47 = getelementptr inbounds i16**, i16*** %47, i64 %idxprom44
  %48 = load i16**, i16*** %arrayidx47, align 8
  %arrayidx48 = getelementptr inbounds i16*, i16** %48, i64 %idxprom42
  %49 = load i16*, i16** %arrayidx48, align 8
  %arrayidx49 = getelementptr inbounds i16, i16* %49, i64 1
  %50 = load i16, i16* %arrayidx49, align 2
  %conv50 = sext i16 %50 to i32
  store i32 %conv50, i32* %b_mv_y, align 4
  %pos_y51 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_b, i32 0, i32 5
  %51 = load i32, i32* %pos_y51, align 4
  %idxprom52 = sext i32 %51 to i64
  %pos_x53 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_b, i32 0, i32 4
  %52 = load i32, i32* %pos_x53, align 4
  %idxprom54 = sext i32 %52 to i64
  %53 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx55 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %53, i32 0, i32 32
  %54 = load i16***, i16**** %ref_idx55, align 8
  %arrayidx56 = getelementptr inbounds i16**, i16*** %54, i64 0
  %55 = load i16**, i16*** %arrayidx56, align 8
  %arrayidx57 = getelementptr inbounds i16*, i16** %55, i64 %idxprom54
  %56 = load i16*, i16** %arrayidx57, align 8
  %arrayidx58 = getelementptr inbounds i16, i16* %56, i64 %idxprom52
  %57 = load i16, i16* %arrayidx58, align 2
  %conv59 = sext i16 %57 to i32
  store i32 %conv59, i32* %b_ref_idx, align 4
  %58 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_field60 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %58, i32 0, i32 22
  %59 = load i32, i32* %mb_field60, align 4
  %tobool61 = icmp ne i32 %59, 0
  br i1 %tobool61, label %land.lhs.true.62, label %if.end.72

land.lhs.true.62:                                 ; preds = %if.then.40
  %mb_addr63 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_b, i32 0, i32 1
  %60 = load i32, i32* %mb_addr63, align 4
  %idxprom64 = sext i32 %60 to i64
  %61 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data65 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %61, i32 0, i32 51
  %62 = load %struct.macroblock*, %struct.macroblock** %mb_data65, align 8
  %arrayidx66 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %62, i64 %idxprom64
  %mb_field67 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx66, i32 0, i32 22
  %63 = load i32, i32* %mb_field67, align 4
  %tobool68 = icmp ne i32 %63, 0
  br i1 %tobool68, label %if.end.72, label %if.then.69

if.then.69:                                       ; preds = %land.lhs.true.62
  %64 = load i32, i32* %b_mv_y, align 4
  %div70 = sdiv i32 %64, 2
  store i32 %div70, i32* %b_mv_y, align 4
  %65 = load i32, i32* %b_ref_idx, align 4
  %mul71 = mul nsw i32 %65, 2
  store i32 %mul71, i32* %b_ref_idx, align 4
  br label %if.end.72

if.end.72:                                        ; preds = %if.then.69, %land.lhs.true.62, %if.then.40
  %66 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_field73 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %66, i32 0, i32 22
  %67 = load i32, i32* %mb_field73, align 4
  %tobool74 = icmp ne i32 %67, 0
  br i1 %tobool74, label %if.end.85, label %land.lhs.true.75

land.lhs.true.75:                                 ; preds = %if.end.72
  %mb_addr76 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_b, i32 0, i32 1
  %68 = load i32, i32* %mb_addr76, align 4
  %idxprom77 = sext i32 %68 to i64
  %69 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data78 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %69, i32 0, i32 51
  %70 = load %struct.macroblock*, %struct.macroblock** %mb_data78, align 8
  %arrayidx79 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %70, i64 %idxprom77
  %mb_field80 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx79, i32 0, i32 22
  %71 = load i32, i32* %mb_field80, align 4
  %tobool81 = icmp ne i32 %71, 0
  br i1 %tobool81, label %if.then.82, label %if.end.85

if.then.82:                                       ; preds = %land.lhs.true.75
  %72 = load i32, i32* %b_mv_y, align 4
  %mul83 = mul nsw i32 %72, 2
  store i32 %mul83, i32* %b_mv_y, align 4
  %73 = load i32, i32* %b_ref_idx, align 4
  %shr84 = ashr i32 %73, 1
  store i32 %shr84, i32* %b_ref_idx, align 4
  br label %if.end.85

if.end.85:                                        ; preds = %if.then.82, %land.lhs.true.75, %if.end.72
  br label %if.end.86

if.end.86:                                        ; preds = %if.end.85, %if.end.37
  %available87 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_a, i32 0, i32 0
  %74 = load i32, i32* %available87, align 4
  %tobool88 = icmp ne i32 %74, 0
  br i1 %tobool88, label %cond.false, label %cond.true

cond.true:                                        ; preds = %if.end.86
  br label %cond.end

cond.false:                                       ; preds = %if.end.86
  %75 = load i32, i32* %a_ref_idx, align 4
  %cmp = icmp eq i32 %75, 0
  br i1 %cmp, label %land.lhs.true.90, label %land.end

land.lhs.true.90:                                 ; preds = %cond.false
  %pos_y91 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_a, i32 0, i32 5
  %76 = load i32, i32* %pos_y91, align 4
  %idxprom92 = sext i32 %76 to i64
  %pos_x93 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_a, i32 0, i32 4
  %77 = load i32, i32* %pos_x93, align 4
  %idxprom94 = sext i32 %77 to i64
  %78 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %mv95 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %78, i32 0, i32 35
  %79 = load i16****, i16***** %mv95, align 8
  %arrayidx96 = getelementptr inbounds i16***, i16**** %79, i64 0
  %80 = load i16***, i16**** %arrayidx96, align 8
  %arrayidx97 = getelementptr inbounds i16**, i16*** %80, i64 %idxprom94
  %81 = load i16**, i16*** %arrayidx97, align 8
  %arrayidx98 = getelementptr inbounds i16*, i16** %81, i64 %idxprom92
  %82 = load i16*, i16** %arrayidx98, align 8
  %arrayidx99 = getelementptr inbounds i16, i16* %82, i64 0
  %83 = load i16, i16* %arrayidx99, align 2
  %conv100 = sext i16 %83 to i32
  %cmp101 = icmp eq i32 %conv100, 0
  br i1 %cmp101, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %land.lhs.true.90
  %84 = load i32, i32* %a_mv_y, align 4
  %cmp103 = icmp eq i32 %84, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true.90, %cond.false
  %85 = phi i1 [ false, %land.lhs.true.90 ], [ false, %cond.false ], [ %cmp103, %land.rhs ]
  %cond = select i1 %85, i32 1, i32 0
  br label %cond.end

cond.end:                                         ; preds = %land.end, %cond.true
  %cond105 = phi i32 [ 1, %cond.true ], [ %cond, %land.end ]
  store i32 %cond105, i32* %zeroMotionLeft, align 4
  %available106 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_b, i32 0, i32 0
  %86 = load i32, i32* %available106, align 4
  %tobool107 = icmp ne i32 %86, 0
  br i1 %tobool107, label %cond.false.109, label %cond.true.108

cond.true.108:                                    ; preds = %cond.end
  br label %cond.end.130

cond.false.109:                                   ; preds = %cond.end
  %87 = load i32, i32* %b_ref_idx, align 4
  %cmp110 = icmp eq i32 %87, 0
  br i1 %cmp110, label %land.lhs.true.112, label %land.end.128

land.lhs.true.112:                                ; preds = %cond.false.109
  %pos_y113 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_b, i32 0, i32 5
  %88 = load i32, i32* %pos_y113, align 4
  %idxprom114 = sext i32 %88 to i64
  %pos_x115 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_b, i32 0, i32 4
  %89 = load i32, i32* %pos_x115, align 4
  %idxprom116 = sext i32 %89 to i64
  %90 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %mv117 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %90, i32 0, i32 35
  %91 = load i16****, i16***** %mv117, align 8
  %arrayidx118 = getelementptr inbounds i16***, i16**** %91, i64 0
  %92 = load i16***, i16**** %arrayidx118, align 8
  %arrayidx119 = getelementptr inbounds i16**, i16*** %92, i64 %idxprom116
  %93 = load i16**, i16*** %arrayidx119, align 8
  %arrayidx120 = getelementptr inbounds i16*, i16** %93, i64 %idxprom114
  %94 = load i16*, i16** %arrayidx120, align 8
  %arrayidx121 = getelementptr inbounds i16, i16* %94, i64 0
  %95 = load i16, i16* %arrayidx121, align 2
  %conv122 = sext i16 %95 to i32
  %cmp123 = icmp eq i32 %conv122, 0
  br i1 %cmp123, label %land.rhs.125, label %land.end.128

land.rhs.125:                                     ; preds = %land.lhs.true.112
  %96 = load i32, i32* %b_mv_y, align 4
  %cmp126 = icmp eq i32 %96, 0
  br label %land.end.128

land.end.128:                                     ; preds = %land.rhs.125, %land.lhs.true.112, %cond.false.109
  %97 = phi i1 [ false, %land.lhs.true.112 ], [ false, %cond.false.109 ], [ %cmp126, %land.rhs.125 ]
  %cond129 = select i1 %97, i32 1, i32 0
  br label %cond.end.130

cond.end.130:                                     ; preds = %land.end.128, %cond.true.108
  %cond131 = phi i32 [ 1, %cond.true.108 ], [ %cond129, %land.end.128 ]
  store i32 %cond131, i32* %zeroMotionAbove, align 4
  %98 = load i32, i32* %zeroMotionAbove, align 4
  %tobool132 = icmp ne i32 %98, 0
  br i1 %tobool132, label %if.then.134, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %cond.end.130
  %99 = load i32, i32* %zeroMotionLeft, align 4
  %tobool133 = icmp ne i32 %99, 0
  br i1 %tobool133, label %if.then.134, label %if.else

if.then.134:                                      ; preds = %lor.lhs.false, %cond.end.130
  store i32 0, i32* %by, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc.157, %if.then.134
  %100 = load i32, i32* %by, align 4
  %cmp135 = icmp slt i32 %100, 4
  br i1 %cmp135, label %for.body, label %for.end.159

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %bx, align 4
  br label %for.cond.137

for.cond.137:                                     ; preds = %for.inc, %for.body
  %101 = load i32, i32* %bx, align 4
  %cmp138 = icmp slt i32 %101, 4
  br i1 %cmp138, label %for.body.140, label %for.end

for.body.140:                                     ; preds = %for.cond.137
  %102 = load i32, i32* %by, align 4
  %idxprom141 = sext i32 %102 to i64
  %103 = load i32, i32* %bx, align 4
  %idxprom142 = sext i32 %103 to i64
  %104 = load i16******, i16******* %all_mv, align 8
  %arrayidx143 = getelementptr inbounds i16*****, i16****** %104, i64 %idxprom142
  %105 = load i16*****, i16****** %arrayidx143, align 8
  %arrayidx144 = getelementptr inbounds i16****, i16***** %105, i64 %idxprom141
  %106 = load i16****, i16***** %arrayidx144, align 8
  %arrayidx145 = getelementptr inbounds i16***, i16**** %106, i64 0
  %107 = load i16***, i16**** %arrayidx145, align 8
  %arrayidx146 = getelementptr inbounds i16**, i16*** %107, i64 0
  %108 = load i16**, i16*** %arrayidx146, align 8
  %arrayidx147 = getelementptr inbounds i16*, i16** %108, i64 0
  %109 = load i16*, i16** %arrayidx147, align 8
  %arrayidx148 = getelementptr inbounds i16, i16* %109, i64 0
  store i16 0, i16* %arrayidx148, align 2
  %110 = load i32, i32* %by, align 4
  %idxprom149 = sext i32 %110 to i64
  %111 = load i32, i32* %bx, align 4
  %idxprom150 = sext i32 %111 to i64
  %112 = load i16******, i16******* %all_mv, align 8
  %arrayidx151 = getelementptr inbounds i16*****, i16****** %112, i64 %idxprom150
  %113 = load i16*****, i16****** %arrayidx151, align 8
  %arrayidx152 = getelementptr inbounds i16****, i16***** %113, i64 %idxprom149
  %114 = load i16****, i16***** %arrayidx152, align 8
  %arrayidx153 = getelementptr inbounds i16***, i16**** %114, i64 0
  %115 = load i16***, i16**** %arrayidx153, align 8
  %arrayidx154 = getelementptr inbounds i16**, i16*** %115, i64 0
  %116 = load i16**, i16*** %arrayidx154, align 8
  %arrayidx155 = getelementptr inbounds i16*, i16** %116, i64 0
  %117 = load i16*, i16** %arrayidx155, align 8
  %arrayidx156 = getelementptr inbounds i16, i16* %117, i64 1
  store i16 0, i16* %arrayidx156, align 2
  br label %for.inc

for.inc:                                          ; preds = %for.body.140
  %118 = load i32, i32* %bx, align 4
  %inc = add nsw i32 %118, 1
  store i32 %inc, i32* %bx, align 4
  br label %for.cond.137

for.end:                                          ; preds = %for.cond.137
  br label %for.inc.157

for.inc.157:                                      ; preds = %for.end
  %119 = load i32, i32* %by, align 4
  %inc158 = add nsw i32 %119, 1
  store i32 %inc158, i32* %by, align 4
  br label %for.cond

for.end.159:                                      ; preds = %for.cond
  br label %if.end.194

if.else:                                          ; preds = %lor.lhs.false
  %arraydecay = getelementptr inbounds [2 x i16], [2 x i16]* %pmv, i32 0, i32 0
  %120 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx160 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %120, i32 0, i32 32
  %121 = load i16***, i16**** %ref_idx160, align 8
  %122 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %mv161 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %122, i32 0, i32 35
  %123 = load i16****, i16***** %mv161, align 8
  call void @SetMotionVectorPredictor(i16* %arraydecay, i16*** %121, i16**** %123, i16 signext 0, i32 0, i32 0, i32 0, i32 16, i32 16)
  store i32 0, i32* %by, align 4
  br label %for.cond.162

for.cond.162:                                     ; preds = %for.inc.191, %if.else
  %124 = load i32, i32* %by, align 4
  %cmp163 = icmp slt i32 %124, 4
  br i1 %cmp163, label %for.body.165, label %for.end.193

for.body.165:                                     ; preds = %for.cond.162
  store i32 0, i32* %bx, align 4
  br label %for.cond.166

for.cond.166:                                     ; preds = %for.inc.188, %for.body.165
  %125 = load i32, i32* %bx, align 4
  %cmp167 = icmp slt i32 %125, 4
  br i1 %cmp167, label %for.body.169, label %for.end.190

for.body.169:                                     ; preds = %for.cond.166
  %arrayidx170 = getelementptr inbounds [2 x i16], [2 x i16]* %pmv, i32 0, i64 0
  %126 = load i16, i16* %arrayidx170, align 2
  %127 = load i32, i32* %by, align 4
  %idxprom171 = sext i32 %127 to i64
  %128 = load i32, i32* %bx, align 4
  %idxprom172 = sext i32 %128 to i64
  %129 = load i16******, i16******* %all_mv, align 8
  %arrayidx173 = getelementptr inbounds i16*****, i16****** %129, i64 %idxprom172
  %130 = load i16*****, i16****** %arrayidx173, align 8
  %arrayidx174 = getelementptr inbounds i16****, i16***** %130, i64 %idxprom171
  %131 = load i16****, i16***** %arrayidx174, align 8
  %arrayidx175 = getelementptr inbounds i16***, i16**** %131, i64 0
  %132 = load i16***, i16**** %arrayidx175, align 8
  %arrayidx176 = getelementptr inbounds i16**, i16*** %132, i64 0
  %133 = load i16**, i16*** %arrayidx176, align 8
  %arrayidx177 = getelementptr inbounds i16*, i16** %133, i64 0
  %134 = load i16*, i16** %arrayidx177, align 8
  %arrayidx178 = getelementptr inbounds i16, i16* %134, i64 0
  store i16 %126, i16* %arrayidx178, align 2
  %arrayidx179 = getelementptr inbounds [2 x i16], [2 x i16]* %pmv, i32 0, i64 1
  %135 = load i16, i16* %arrayidx179, align 2
  %136 = load i32, i32* %by, align 4
  %idxprom180 = sext i32 %136 to i64
  %137 = load i32, i32* %bx, align 4
  %idxprom181 = sext i32 %137 to i64
  %138 = load i16******, i16******* %all_mv, align 8
  %arrayidx182 = getelementptr inbounds i16*****, i16****** %138, i64 %idxprom181
  %139 = load i16*****, i16****** %arrayidx182, align 8
  %arrayidx183 = getelementptr inbounds i16****, i16***** %139, i64 %idxprom180
  %140 = load i16****, i16***** %arrayidx183, align 8
  %arrayidx184 = getelementptr inbounds i16***, i16**** %140, i64 0
  %141 = load i16***, i16**** %arrayidx184, align 8
  %arrayidx185 = getelementptr inbounds i16**, i16*** %141, i64 0
  %142 = load i16**, i16*** %arrayidx185, align 8
  %arrayidx186 = getelementptr inbounds i16*, i16** %142, i64 0
  %143 = load i16*, i16** %arrayidx186, align 8
  %arrayidx187 = getelementptr inbounds i16, i16* %143, i64 1
  store i16 %135, i16* %arrayidx187, align 2
  br label %for.inc.188

for.inc.188:                                      ; preds = %for.body.169
  %144 = load i32, i32* %bx, align 4
  %inc189 = add nsw i32 %144, 1
  store i32 %inc189, i32* %bx, align 4
  br label %for.cond.166

for.end.190:                                      ; preds = %for.cond.166
  br label %for.inc.191

for.inc.191:                                      ; preds = %for.end.190
  %145 = load i32, i32* %by, align 4
  %inc192 = add nsw i32 %145, 1
  store i32 %inc192, i32* %by, align 4
  br label %for.cond.162

for.end.193:                                      ; preds = %for.cond.162
  br label %if.end.194

if.end.194:                                       ; preds = %for.end.193, %for.end.159
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @Get_Direct_Cost8x8(i32 %block, i32* %cost8x8) #0 {
entry:
  %retval = alloca i32, align 4
  %block.addr = alloca i32, align 4
  %cost8x8.addr = alloca i32*, align 8
  %block_y = alloca i32, align 4
  %block_x = alloca i32, align 4
  %pic_pix_y = alloca i32, align 4
  %pic_pix_x = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %curr_diff = alloca [8 x [8 x i32]], align 16
  %diff8x8 = alloca [64 x i32], align 16
  %diff = alloca [16 x i32], align 16
  %cost = alloca i32, align 4
  %mb_y = alloca i32, align 4
  %mb_x = alloca i32, align 4
  store i32 %block, i32* %block.addr, align 4
  store i32* %cost8x8, i32** %cost8x8.addr, align 8
  store i32 0, i32* %cost, align 4
  %0 = load i32, i32* %block.addr, align 4
  %div = sdiv i32 %0, 2
  %shl = shl i32 %div, 3
  store i32 %shl, i32* %mb_y, align 4
  %1 = load i32, i32* %block.addr, align 4
  %rem = srem i32 %1, 2
  %shl1 = shl i32 %rem, 3
  store i32 %shl1, i32* %mb_x, align 4
  %2 = load i32, i32* %mb_y, align 4
  store i32 %2, i32* %block_y, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc.74, %entry
  %3 = load i32, i32* %block_y, align 4
  %4 = load i32, i32* %mb_y, align 4
  %add = add nsw i32 %4, 8
  %cmp = icmp slt i32 %3, %add
  br i1 %cmp, label %for.body, label %for.end.76

for.body:                                         ; preds = %for.cond
  %5 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %opix_y = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %5, i32 0, i32 38
  %6 = load i32, i32* %opix_y, align 4
  %7 = load i32, i32* %block_y, align 4
  %add2 = add nsw i32 %6, %7
  store i32 %add2, i32* %pic_pix_y, align 4
  %8 = load i32, i32* %mb_x, align 4
  store i32 %8, i32* %block_x, align 4
  br label %for.cond.3

for.cond.3:                                       ; preds = %for.inc.71, %for.body
  %9 = load i32, i32* %block_x, align 4
  %10 = load i32, i32* %mb_x, align 4
  %add4 = add nsw i32 %10, 8
  %cmp5 = icmp slt i32 %9, %add4
  br i1 %cmp5, label %for.body.6, label %for.end.73

for.body.6:                                       ; preds = %for.cond.3
  %11 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %opix_x = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %11, i32 0, i32 37
  %12 = load i32, i32* %opix_x, align 4
  %13 = load i32, i32* %block_x, align 4
  %add7 = add nsw i32 %12, %13
  store i32 %add7, i32* %pic_pix_x, align 4
  %14 = load i32, i32* %pic_pix_y, align 4
  %shr = ashr i32 %14, 2
  %idxprom = sext i32 %shr to i64
  %15 = load i32, i32* %pic_pix_x, align 4
  %shr8 = ashr i32 %15, 2
  %idxprom9 = sext i32 %shr8 to i64
  %16 = load i16**, i16*** @direct_pdir, align 8
  %arrayidx = getelementptr inbounds i16*, i16** %16, i64 %idxprom9
  %17 = load i16*, i16** %arrayidx, align 8
  %arrayidx10 = getelementptr inbounds i16, i16* %17, i64 %idxprom
  %18 = load i16, i16* %arrayidx10, align 2
  %conv = sext i16 %18 to i32
  %cmp11 = icmp slt i32 %conv, 0
  br i1 %cmp11, label %if.then, label %if.end

if.then:                                          ; preds = %for.body.6
  %19 = load i32*, i32** %cost8x8.addr, align 8
  store i32 2147483647, i32* %19, align 4
  store i32 2147483647, i32* %retval
  br label %return

if.end:                                           ; preds = %for.body.6
  %20 = load i32, i32* %block_x, align 4
  %21 = load i32, i32* %block_y, align 4
  %22 = load i32, i32* %pic_pix_y, align 4
  %shr13 = ashr i32 %22, 2
  %idxprom14 = sext i32 %shr13 to i64
  %23 = load i32, i32* %pic_pix_x, align 4
  %shr15 = ashr i32 %23, 2
  %idxprom16 = sext i32 %shr15 to i64
  %24 = load i16**, i16*** @direct_pdir, align 8
  %arrayidx17 = getelementptr inbounds i16*, i16** %24, i64 %idxprom16
  %25 = load i16*, i16** %arrayidx17, align 8
  %arrayidx18 = getelementptr inbounds i16, i16* %25, i64 %idxprom14
  %26 = load i16, i16* %arrayidx18, align 2
  %conv19 = sext i16 %26 to i32
  %27 = load i32, i32* %pic_pix_y, align 4
  %shr20 = ashr i32 %27, 2
  %idxprom21 = sext i32 %shr20 to i64
  %28 = load i32, i32* %pic_pix_x, align 4
  %shr22 = ashr i32 %28, 2
  %idxprom23 = sext i32 %shr22 to i64
  %29 = load i16***, i16**** @direct_ref_idx, align 8
  %arrayidx24 = getelementptr inbounds i16**, i16*** %29, i64 0
  %30 = load i16**, i16*** %arrayidx24, align 8
  %arrayidx25 = getelementptr inbounds i16*, i16** %30, i64 %idxprom23
  %31 = load i16*, i16** %arrayidx25, align 8
  %arrayidx26 = getelementptr inbounds i16, i16* %31, i64 %idxprom21
  %32 = load i16, i16* %arrayidx26, align 2
  %33 = load i32, i32* %pic_pix_y, align 4
  %shr27 = ashr i32 %33, 2
  %idxprom28 = sext i32 %shr27 to i64
  %34 = load i32, i32* %pic_pix_x, align 4
  %shr29 = ashr i32 %34, 2
  %idxprom30 = sext i32 %shr29 to i64
  %35 = load i16***, i16**** @direct_ref_idx, align 8
  %arrayidx31 = getelementptr inbounds i16**, i16*** %35, i64 1
  %36 = load i16**, i16*** %arrayidx31, align 8
  %arrayidx32 = getelementptr inbounds i16*, i16** %36, i64 %idxprom30
  %37 = load i16*, i16** %arrayidx32, align 8
  %arrayidx33 = getelementptr inbounds i16, i16* %37, i64 %idxprom28
  %38 = load i16, i16* %arrayidx33, align 2
  call void @LumaPrediction4x4(i32 %20, i32 %21, i32 %conv19, i32 0, i32 0, i16 signext %32, i16 signext %38)
  store i32 0, i32* %j, align 4
  store i32 0, i32* %k, align 4
  br label %for.cond.34

for.cond.34:                                      ; preds = %for.inc.67, %if.end
  %39 = load i32, i32* %j, align 4
  %cmp35 = icmp slt i32 %39, 4
  br i1 %cmp35, label %for.body.37, label %for.end.69

for.body.37:                                      ; preds = %for.cond.34
  store i32 0, i32* %i, align 4
  br label %for.cond.38

for.cond.38:                                      ; preds = %for.inc, %for.body.37
  %40 = load i32, i32* %i, align 4
  %cmp39 = icmp slt i32 %40, 4
  br i1 %cmp39, label %for.body.41, label %for.end

for.body.41:                                      ; preds = %for.cond.38
  %41 = load i32, i32* %pic_pix_x, align 4
  %42 = load i32, i32* %i, align 4
  %add42 = add nsw i32 %41, %42
  %idxprom43 = sext i32 %add42 to i64
  %43 = load i32, i32* %pic_pix_y, align 4
  %44 = load i32, i32* %j, align 4
  %add44 = add nsw i32 %43, %44
  %idxprom45 = sext i32 %add44 to i64
  %45 = load i16**, i16*** @imgY_org, align 8
  %arrayidx46 = getelementptr inbounds i16*, i16** %45, i64 %idxprom45
  %46 = load i16*, i16** %arrayidx46, align 8
  %arrayidx47 = getelementptr inbounds i16, i16* %46, i64 %idxprom43
  %47 = load i16, i16* %arrayidx47, align 2
  %conv48 = zext i16 %47 to i32
  %48 = load i32, i32* %j, align 4
  %49 = load i32, i32* %block_y, align 4
  %add49 = add nsw i32 %48, %49
  %idxprom50 = sext i32 %add49 to i64
  %50 = load i32, i32* %i, align 4
  %51 = load i32, i32* %block_x, align 4
  %add51 = add nsw i32 %50, %51
  %idxprom52 = sext i32 %add51 to i64
  %52 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mpr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %52, i32 0, i32 45
  %arrayidx53 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %mpr, i32 0, i64 %idxprom52
  %arrayidx54 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx53, i32 0, i64 %idxprom50
  %53 = load i16, i16* %arrayidx54, align 2
  %conv55 = zext i16 %53 to i32
  %sub = sub nsw i32 %conv48, %conv55
  %54 = load i32, i32* %block_x, align 4
  %55 = load i32, i32* %mb_x, align 4
  %sub56 = sub nsw i32 %54, %55
  %56 = load i32, i32* %i, align 4
  %add57 = add nsw i32 %sub56, %56
  %idxprom58 = sext i32 %add57 to i64
  %57 = load i32, i32* %block_y, align 4
  %58 = load i32, i32* %mb_y, align 4
  %sub59 = sub nsw i32 %57, %58
  %59 = load i32, i32* %j, align 4
  %add60 = add nsw i32 %sub59, %59
  %idxprom61 = sext i32 %add60 to i64
  %arrayidx62 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %curr_diff, i32 0, i64 %idxprom61
  %arrayidx63 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx62, i32 0, i64 %idxprom58
  store i32 %sub, i32* %arrayidx63, align 4
  %60 = load i32, i32* %k, align 4
  %idxprom64 = sext i32 %60 to i64
  %arrayidx65 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i32 0, i64 %idxprom64
  store i32 %sub, i32* %arrayidx65, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body.41
  %61 = load i32, i32* %i, align 4
  %inc = add nsw i32 %61, 1
  store i32 %inc, i32* %i, align 4
  %62 = load i32, i32* %k, align 4
  %inc66 = add nsw i32 %62, 1
  store i32 %inc66, i32* %k, align 4
  br label %for.cond.38

for.end:                                          ; preds = %for.cond.38
  br label %for.inc.67

for.inc.67:                                       ; preds = %for.end
  %63 = load i32, i32* %j, align 4
  %inc68 = add nsw i32 %63, 1
  store i32 %inc68, i32* %j, align 4
  br label %for.cond.34

for.end.69:                                       ; preds = %for.cond.34
  %arraydecay = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i32 0, i32 0
  %64 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamard = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %64, i32 0, i32 6
  %65 = load i32, i32* %hadamard, align 4
  %call = call i32 @SATD(i32* %arraydecay, i32 %65)
  %66 = load i32, i32* %cost, align 4
  %add70 = add nsw i32 %66, %call
  store i32 %add70, i32* %cost, align 4
  br label %for.inc.71

for.inc.71:                                       ; preds = %for.end.69
  %67 = load i32, i32* %block_x, align 4
  %add72 = add nsw i32 %67, 4
  store i32 %add72, i32* %block_x, align 4
  br label %for.cond.3

for.end.73:                                       ; preds = %for.cond.3
  br label %for.inc.74

for.inc.74:                                       ; preds = %for.end.73
  %68 = load i32, i32* %block_y, align 4
  %add75 = add nsw i32 %68, 4
  store i32 %add75, i32* %block_y, align 4
  br label %for.cond

for.end.76:                                       ; preds = %for.cond
  %69 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %rdopt = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %69, i32 0, i32 85
  %70 = load i32, i32* %rdopt, align 4
  %cmp77 = icmp eq i32 %70, 0
  br i1 %cmp77, label %land.lhs.true, label %if.end.105

land.lhs.true:                                    ; preds = %for.end.76
  %71 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %AllowTransform8x8 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %71, i32 0, i32 123
  %72 = load i32, i32* %AllowTransform8x8, align 4
  %tobool = icmp ne i32 %72, 0
  br i1 %tobool, label %if.then.79, label %if.end.105

if.then.79:                                       ; preds = %land.lhs.true
  store i32 0, i32* %k, align 4
  store i32 0, i32* %j, align 4
  br label %for.cond.80

for.cond.80:                                      ; preds = %for.inc.98, %if.then.79
  %73 = load i32, i32* %j, align 4
  %cmp81 = icmp slt i32 %73, 8
  br i1 %cmp81, label %for.body.83, label %for.end.100

for.body.83:                                      ; preds = %for.cond.80
  store i32 0, i32* %i, align 4
  br label %for.cond.84

for.cond.84:                                      ; preds = %for.inc.94, %for.body.83
  %74 = load i32, i32* %i, align 4
  %cmp85 = icmp slt i32 %74, 8
  br i1 %cmp85, label %for.body.87, label %for.end.97

for.body.87:                                      ; preds = %for.cond.84
  %75 = load i32, i32* %i, align 4
  %idxprom88 = sext i32 %75 to i64
  %76 = load i32, i32* %j, align 4
  %idxprom89 = sext i32 %76 to i64
  %arrayidx90 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %curr_diff, i32 0, i64 %idxprom89
  %arrayidx91 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx90, i32 0, i64 %idxprom88
  %77 = load i32, i32* %arrayidx91, align 4
  %78 = load i32, i32* %k, align 4
  %idxprom92 = sext i32 %78 to i64
  %arrayidx93 = getelementptr inbounds [64 x i32], [64 x i32]* %diff8x8, i32 0, i64 %idxprom92
  store i32 %77, i32* %arrayidx93, align 4
  br label %for.inc.94

for.inc.94:                                       ; preds = %for.body.87
  %79 = load i32, i32* %i, align 4
  %inc95 = add nsw i32 %79, 1
  store i32 %inc95, i32* %i, align 4
  %80 = load i32, i32* %k, align 4
  %inc96 = add nsw i32 %80, 1
  store i32 %inc96, i32* %k, align 4
  br label %for.cond.84

for.end.97:                                       ; preds = %for.cond.84
  br label %for.inc.98

for.inc.98:                                       ; preds = %for.end.97
  %81 = load i32, i32* %j, align 4
  %inc99 = add nsw i32 %81, 1
  store i32 %inc99, i32* %j, align 4
  br label %for.cond.80

for.end.100:                                      ; preds = %for.cond.80
  %arraydecay101 = getelementptr inbounds [64 x i32], [64 x i32]* %diff8x8, i32 0, i32 0
  %82 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamard102 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %82, i32 0, i32 6
  %83 = load i32, i32* %hadamard102, align 4
  %call103 = call i32 @SATD8X8(i32* %arraydecay101, i32 %83)
  %84 = load i32*, i32** %cost8x8.addr, align 8
  %85 = load i32, i32* %84, align 4
  %add104 = add nsw i32 %85, %call103
  store i32 %add104, i32* %84, align 4
  br label %if.end.105

if.end.105:                                       ; preds = %for.end.100, %land.lhs.true, %for.end.76
  %86 = load i32, i32* %cost, align 4
  store i32 %86, i32* %retval
  br label %return

return:                                           ; preds = %if.end.105, %if.then
  %87 = load i32, i32* %retval
  ret i32 %87
}

; Function Attrs: nounwind uwtable
define i32 @Get_Direct_CostMB(double %lambda) #0 {
entry:
  %retval = alloca i32, align 4
  %lambda.addr = alloca double, align 8
  %i = alloca i32, align 4
  %cost = alloca i32, align 4
  %cost8x8 = alloca i32, align 4
  store double %lambda, double* %lambda.addr, align 8
  store i32 0, i32* %cost, align 4
  store i32 0, i32* %cost8x8, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %0, 4
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4
  %call = call i32 @Get_Direct_Cost8x8(i32 %1, i32* %cost8x8)
  %2 = load i32, i32* %cost, align 4
  %add = add nsw i32 %2, %call
  store i32 %add, i32* %cost, align 4
  %3 = load i32, i32* %cost, align 4
  %cmp1 = icmp eq i32 %3, 2147483647
  br i1 %cmp1, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body
  %4 = load i32, i32* %cost8x8, align 4
  %cmp2 = icmp eq i32 %4, 2147483647
  br i1 %cmp2, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %for.body
  %5 = load i32, i32* %cost, align 4
  store i32 %5, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %6 = load i32, i32* %i, align 4
  %inc = add nsw i32 %6, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %7 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %AllowTransform8x8 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %7, i32 0, i32 123
  %8 = load i32, i32* %AllowTransform8x8, align 4
  switch i32 %8, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb.10
  ]

sw.bb:                                            ; preds = %for.end
  %9 = load i32, i32* %cost8x8, align 4
  %10 = load i32, i32* %cost, align 4
  %cmp3 = icmp slt i32 %9, %10
  br i1 %cmp3, label %if.then.8, label %lor.lhs.false.4

lor.lhs.false.4:                                  ; preds = %sw.bb
  %11 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %InterSearch8x4 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %11, i32 0, i32 66
  %12 = load i32, i32* %InterSearch8x4, align 4
  %tobool = icmp ne i32 %12, 0
  br i1 %tobool, label %land.lhs.true, label %if.then.8

land.lhs.true:                                    ; preds = %lor.lhs.false.4
  %13 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %InterSearch4x8 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %13, i32 0, i32 67
  %14 = load i32, i32* %InterSearch4x8, align 4
  %tobool5 = icmp ne i32 %14, 0
  br i1 %tobool5, label %land.lhs.true.6, label %if.then.8

land.lhs.true.6:                                  ; preds = %land.lhs.true
  %15 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %InterSearch4x4 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %15, i32 0, i32 68
  %16 = load i32, i32* %InterSearch4x4, align 4
  %tobool7 = icmp ne i32 %16, 0
  br i1 %tobool7, label %if.end.9, label %if.then.8

if.then.8:                                        ; preds = %land.lhs.true.6, %land.lhs.true, %lor.lhs.false.4, %sw.bb
  %17 = load i32, i32* %cost8x8, align 4
  store i32 %17, i32* %cost, align 4
  br label %if.end.9

if.end.9:                                         ; preds = %if.then.8, %land.lhs.true.6
  br label %sw.epilog

sw.bb.10:                                         ; preds = %for.end
  %18 = load i32, i32* %cost8x8, align 4
  store i32 %18, i32* %cost, align 4
  br label %sw.epilog

sw.default:                                       ; preds = %for.end
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb.10, %if.end.9
  %19 = load i32, i32* %cost, align 4
  store i32 %19, i32* %retval
  br label %return

return:                                           ; preds = %sw.epilog, %if.then
  %20 = load i32, i32* %retval
  ret i32 %20
}

; Function Attrs: nounwind uwtable
define void @PartitionMotionSearch(i32 %blocktype, i32 %block8x8, double %lambda) #0 {
entry:
  %blocktype.addr = alloca i32, align 4
  %block8x8.addr = alloca i32, align 4
  %lambda.addr = alloca double, align 8
  %ref_array = alloca i16**, align 8
  %mv_array = alloca i16***, align 8
  %ref = alloca i16, align 2
  %v = alloca i32, align 4
  %h = alloca i32, align 4
  %mcost = alloca i32, align 4
  %search_range = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %pic_block_x = alloca i32, align 4
  %pic_block_y = alloca i32, align 4
  %bslice = alloca i32, align 4
  %parttype = alloca i32, align 4
  %step_h0 = alloca i32, align 4
  %step_v0 = alloca i32, align 4
  %step_h = alloca i32, align 4
  %step_v = alloca i32, align 4
  %list = alloca i32, align 4
  %numlists = alloca i32, align 4
  %list_offset = alloca i32, align 4
  store i32 %blocktype, i32* %blocktype.addr, align 4
  store i32 %block8x8, i32* %block8x8.addr, align 4
  store double %lambda, double* %lambda.addr, align 8
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i32 0, i32 6
  %1 = load i32, i32* %type, align 4
  %cmp = icmp eq i32 %1, 1
  %conv = zext i1 %cmp to i32
  store i32 %conv, i32* %bslice, align 4
  %2 = load i32, i32* %blocktype.addr, align 4
  %cmp1 = icmp slt i32 %2, 4
  br i1 %cmp1, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %3 = load i32, i32* %blocktype.addr, align 4
  br label %cond.end

cond.false:                                       ; preds = %entry
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %3, %cond.true ], [ 4, %cond.false ]
  store i32 %cond, i32* %parttype, align 4
  %4 = load i32, i32* %parttype, align 4
  %idxprom = sext i32 %4 to i64
  %5 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %part_size = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %5, i32 0, i32 21
  %arrayidx = getelementptr inbounds [8 x [2 x i32]], [8 x [2 x i32]]* %part_size, i32 0, i64 %idxprom
  %arrayidx3 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx, i32 0, i64 0
  %6 = load i32, i32* %arrayidx3, align 4
  store i32 %6, i32* %step_h0, align 4
  %7 = load i32, i32* %parttype, align 4
  %idxprom4 = sext i32 %7 to i64
  %8 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %part_size5 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %8, i32 0, i32 21
  %arrayidx6 = getelementptr inbounds [8 x [2 x i32]], [8 x [2 x i32]]* %part_size5, i32 0, i64 %idxprom4
  %arrayidx7 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx6, i32 0, i64 1
  %9 = load i32, i32* %arrayidx7, align 4
  store i32 %9, i32* %step_v0, align 4
  %10 = load i32, i32* %blocktype.addr, align 4
  %idxprom8 = sext i32 %10 to i64
  %11 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %part_size9 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %11, i32 0, i32 21
  %arrayidx10 = getelementptr inbounds [8 x [2 x i32]], [8 x [2 x i32]]* %part_size9, i32 0, i64 %idxprom8
  %arrayidx11 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx10, i32 0, i64 0
  %12 = load i32, i32* %arrayidx11, align 4
  store i32 %12, i32* %step_h, align 4
  %13 = load i32, i32* %blocktype.addr, align 4
  %idxprom12 = sext i32 %13 to i64
  %14 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %part_size13 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %14, i32 0, i32 21
  %arrayidx14 = getelementptr inbounds [8 x [2 x i32]], [8 x [2 x i32]]* %part_size13, i32 0, i64 %idxprom12
  %arrayidx15 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx14, i32 0, i64 1
  %15 = load i32, i32* %arrayidx15, align 4
  store i32 %15, i32* %step_v, align 4
  %16 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %16, i32 0, i32 3
  %17 = load i32, i32* %current_mb_nr, align 4
  %idxprom16 = sext i32 %17 to i64
  %18 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %18, i32 0, i32 51
  %19 = load %struct.macroblock*, %struct.macroblock** %mb_data, align 8
  %arrayidx17 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %19, i64 %idxprom16
  %mb_field = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx17, i32 0, i32 22
  %20 = load i32, i32* %mb_field, align 4
  %tobool = icmp ne i32 %20, 0
  br i1 %tobool, label %if.then, label %if.else.21

if.then:                                          ; preds = %cond.end
  %21 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr18 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %21, i32 0, i32 3
  %22 = load i32, i32* %current_mb_nr18, align 4
  %rem = srem i32 %22, 2
  %tobool19 = icmp ne i32 %rem, 0
  br i1 %tobool19, label %if.then.20, label %if.else

if.then.20:                                       ; preds = %if.then
  store i32 4, i32* %list_offset, align 4
  br label %if.end

if.else:                                          ; preds = %if.then
  store i32 2, i32* %list_offset, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.20
  br label %if.end.22

if.else.21:                                       ; preds = %cond.end
  store i32 0, i32* %list_offset, align 4
  br label %if.end.22

if.end.22:                                        ; preds = %if.else.21, %if.end
  %23 = load i32, i32* %bslice, align 4
  %tobool23 = icmp ne i32 %23, 0
  %cond24 = select i1 %tobool23, i32 2, i32 1
  store i32 %cond24, i32* %numlists, align 4
  store i32 0, i32* %list, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc.186, %if.end.22
  %24 = load i32, i32* %list, align 4
  %25 = load i32, i32* %numlists, align 4
  %cmp25 = icmp slt i32 %24, %25
  br i1 %cmp25, label %for.body, label %for.end.188

for.body:                                         ; preds = %for.cond
  store i16 0, i16* %ref, align 2
  br label %for.cond.27

for.cond.27:                                      ; preds = %for.inc.183, %for.body
  %26 = load i16, i16* %ref, align 2
  %conv28 = sext i16 %26 to i32
  %27 = load i32, i32* %list, align 4
  %28 = load i32, i32* %list_offset, align 4
  %add = add nsw i32 %27, %28
  %idxprom29 = sext i32 %add to i64
  %arrayidx30 = getelementptr inbounds [6 x i32], [6 x i32]* @listXsize, i32 0, i64 %idxprom29
  %29 = load i32, i32* %arrayidx30, align 4
  %cmp31 = icmp slt i32 %conv28, %29
  br i1 %cmp31, label %for.body.33, label %for.end.185

for.body.33:                                      ; preds = %for.cond.27
  %30 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %full_search = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %30, i32 0, i32 78
  %31 = load i32, i32* %full_search, align 4
  %cmp34 = icmp eq i32 %31, 2
  br i1 %cmp34, label %if.then.36, label %if.else.38

if.then.36:                                       ; preds = %for.body.33
  %32 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %search_range37 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %32, i32 0, i32 8
  %33 = load i32, i32* %search_range37, align 4
  store i32 %33, i32* %search_range, align 4
  br label %if.end.72

if.else.38:                                       ; preds = %for.body.33
  %34 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %full_search39 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %34, i32 0, i32 78
  %35 = load i32, i32* %full_search39, align 4
  %cmp40 = icmp eq i32 %35, 1
  br i1 %cmp40, label %if.then.42, label %if.else.53

if.then.42:                                       ; preds = %if.else.38
  %36 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %search_range43 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %36, i32 0, i32 8
  %37 = load i32, i32* %search_range43, align 4
  %38 = load i16, i16* %ref, align 2
  %conv44 = sext i16 %38 to i32
  %cmp45 = icmp slt i32 %conv44, 1
  br i1 %cmp45, label %cond.true.47, label %cond.false.49

cond.true.47:                                     ; preds = %if.then.42
  %39 = load i16, i16* %ref, align 2
  %conv48 = sext i16 %39 to i32
  br label %cond.end.50

cond.false.49:                                    ; preds = %if.then.42
  br label %cond.end.50

cond.end.50:                                      ; preds = %cond.false.49, %cond.true.47
  %cond51 = phi i32 [ %conv48, %cond.true.47 ], [ 1, %cond.false.49 ]
  %add52 = add nsw i32 %cond51, 1
  %div = sdiv i32 %37, %add52
  store i32 %div, i32* %search_range, align 4
  br label %if.end.71

if.else.53:                                       ; preds = %if.else.38
  %40 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %search_range54 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %40, i32 0, i32 8
  %41 = load i32, i32* %search_range54, align 4
  %42 = load i16, i16* %ref, align 2
  %conv55 = sext i16 %42 to i32
  %cmp56 = icmp slt i32 %conv55, 1
  br i1 %cmp56, label %cond.true.58, label %cond.false.60

cond.true.58:                                     ; preds = %if.else.53
  %43 = load i16, i16* %ref, align 2
  %conv59 = sext i16 %43 to i32
  br label %cond.end.61

cond.false.60:                                    ; preds = %if.else.53
  br label %cond.end.61

cond.end.61:                                      ; preds = %cond.false.60, %cond.true.58
  %cond62 = phi i32 [ %conv59, %cond.true.58 ], [ 1, %cond.false.60 ]
  %add63 = add nsw i32 %cond62, 1
  %44 = load i32, i32* %blocktype.addr, align 4
  %cmp64 = icmp slt i32 2, %44
  br i1 %cmp64, label %cond.true.66, label %cond.false.67

cond.true.66:                                     ; preds = %cond.end.61
  br label %cond.end.68

cond.false.67:                                    ; preds = %cond.end.61
  %45 = load i32, i32* %blocktype.addr, align 4
  br label %cond.end.68

cond.end.68:                                      ; preds = %cond.false.67, %cond.true.66
  %cond69 = phi i32 [ 2, %cond.true.66 ], [ %45, %cond.false.67 ]
  %mul = mul nsw i32 %add63, %cond69
  %div70 = sdiv i32 %41, %mul
  store i32 %div70, i32* %search_range, align 4
  br label %if.end.71

if.end.71:                                        ; preds = %cond.end.68, %cond.end.50
  br label %if.end.72

if.end.72:                                        ; preds = %if.end.71, %if.then.36
  %46 = load i32, i32* %list, align 4
  %idxprom73 = sext i32 %46 to i64
  %47 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %47, i32 0, i32 32
  %48 = load i16***, i16**** %ref_idx, align 8
  %arrayidx74 = getelementptr inbounds i16**, i16*** %48, i64 %idxprom73
  %49 = load i16**, i16*** %arrayidx74, align 8
  store i16** %49, i16*** %ref_array, align 8
  %50 = load i32, i32* %list, align 4
  %idxprom75 = sext i32 %50 to i64
  %51 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %mv = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %51, i32 0, i32 35
  %52 = load i16****, i16***** %mv, align 8
  %arrayidx76 = getelementptr inbounds i16***, i16**** %52, i64 %idxprom75
  %53 = load i16***, i16**** %arrayidx76, align 8
  store i16*** %53, i16**** %mv_array, align 8
  %54 = load i32, i32* %block8x8.addr, align 4
  %idxprom77 = sext i32 %54 to i64
  %55 = load i16, i16* %ref, align 2
  %idxprom78 = sext i16 %55 to i64
  %56 = load i32, i32* %list, align 4
  %idxprom79 = sext i32 %56 to i64
  %57 = load i32, i32* %blocktype.addr, align 4
  %idxprom80 = sext i32 %57 to i64
  %58 = load i32****, i32***** @motion_cost, align 8
  %arrayidx81 = getelementptr inbounds i32***, i32**** %58, i64 %idxprom80
  %59 = load i32***, i32**** %arrayidx81, align 8
  %arrayidx82 = getelementptr inbounds i32**, i32*** %59, i64 %idxprom79
  %60 = load i32**, i32*** %arrayidx82, align 8
  %arrayidx83 = getelementptr inbounds i32*, i32** %60, i64 %idxprom78
  %61 = load i32*, i32** %arrayidx83, align 8
  %arrayidx84 = getelementptr inbounds i32, i32* %61, i64 %idxprom77
  store i32 0, i32* %arrayidx84, align 4
  %62 = load i32, i32* %block8x8.addr, align 4
  %idxprom85 = sext i32 %62 to i64
  %63 = load i32, i32* %parttype, align 4
  %idxprom86 = sext i32 %63 to i64
  %arrayidx87 = getelementptr inbounds [5 x [4 x i32]], [5 x [4 x i32]]* @PartitionMotionSearch.by0, i32 0, i64 %idxprom86
  %arrayidx88 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx87, i32 0, i64 %idxprom85
  %64 = load i32, i32* %arrayidx88, align 4
  store i32 %64, i32* %v, align 4
  br label %for.cond.89

for.cond.89:                                      ; preds = %for.inc.180, %if.end.72
  %65 = load i32, i32* %v, align 4
  %66 = load i32, i32* %block8x8.addr, align 4
  %idxprom90 = sext i32 %66 to i64
  %67 = load i32, i32* %parttype, align 4
  %idxprom91 = sext i32 %67 to i64
  %arrayidx92 = getelementptr inbounds [5 x [4 x i32]], [5 x [4 x i32]]* @PartitionMotionSearch.by0, i32 0, i64 %idxprom91
  %arrayidx93 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx92, i32 0, i64 %idxprom90
  %68 = load i32, i32* %arrayidx93, align 4
  %69 = load i32, i32* %step_v0, align 4
  %add94 = add nsw i32 %68, %69
  %cmp95 = icmp slt i32 %65, %add94
  br i1 %cmp95, label %for.body.97, label %for.end.182

for.body.97:                                      ; preds = %for.cond.89
  %70 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %block_y = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %70, i32 0, i32 32
  %71 = load i32, i32* %block_y, align 4
  %72 = load i32, i32* %v, align 4
  %add98 = add nsw i32 %71, %72
  store i32 %add98, i32* %pic_block_y, align 4
  %73 = load i32, i32* %block8x8.addr, align 4
  %idxprom99 = sext i32 %73 to i64
  %74 = load i32, i32* %parttype, align 4
  %idxprom100 = sext i32 %74 to i64
  %arrayidx101 = getelementptr inbounds [5 x [4 x i32]], [5 x [4 x i32]]* @PartitionMotionSearch.bx0, i32 0, i64 %idxprom100
  %arrayidx102 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx101, i32 0, i64 %idxprom99
  %75 = load i32, i32* %arrayidx102, align 4
  store i32 %75, i32* %h, align 4
  br label %for.cond.103

for.cond.103:                                     ; preds = %for.inc.177, %for.body.97
  %76 = load i32, i32* %h, align 4
  %77 = load i32, i32* %block8x8.addr, align 4
  %idxprom104 = sext i32 %77 to i64
  %78 = load i32, i32* %parttype, align 4
  %idxprom105 = sext i32 %78 to i64
  %arrayidx106 = getelementptr inbounds [5 x [4 x i32]], [5 x [4 x i32]]* @PartitionMotionSearch.bx0, i32 0, i64 %idxprom105
  %arrayidx107 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx106, i32 0, i64 %idxprom104
  %79 = load i32, i32* %arrayidx107, align 4
  %80 = load i32, i32* %step_h0, align 4
  %add108 = add nsw i32 %79, %80
  %cmp109 = icmp slt i32 %76, %add108
  br i1 %cmp109, label %for.body.111, label %for.end.179

for.body.111:                                     ; preds = %for.cond.103
  %81 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %block_x = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %81, i32 0, i32 31
  %82 = load i32, i32* %block_x, align 4
  %83 = load i32, i32* %h, align 4
  %add112 = add nsw i32 %82, %83
  store i32 %add112, i32* %pic_block_x, align 4
  %84 = load i16, i16* %ref, align 2
  %85 = load i32, i32* %list, align 4
  %86 = load i32, i32* %h, align 4
  %shl = shl i32 %86, 2
  %87 = load i32, i32* %v, align 4
  %shl113 = shl i32 %87, 2
  %88 = load i32, i32* %blocktype.addr, align 4
  %89 = load i32, i32* %search_range, align 4
  %90 = load double, double* %lambda.addr, align 8
  %call = call i32 @BlockMotionSearch(i16 signext %84, i32 %85, i32 %shl, i32 %shl113, i32 %88, i32 %89, double %90)
  store i32 %call, i32* %mcost, align 4
  %91 = load i32, i32* %mcost, align 4
  %92 = load i32, i32* %block8x8.addr, align 4
  %idxprom114 = sext i32 %92 to i64
  %93 = load i16, i16* %ref, align 2
  %idxprom115 = sext i16 %93 to i64
  %94 = load i32, i32* %list, align 4
  %idxprom116 = sext i32 %94 to i64
  %95 = load i32, i32* %blocktype.addr, align 4
  %idxprom117 = sext i32 %95 to i64
  %96 = load i32****, i32***** @motion_cost, align 8
  %arrayidx118 = getelementptr inbounds i32***, i32**** %96, i64 %idxprom117
  %97 = load i32***, i32**** %arrayidx118, align 8
  %arrayidx119 = getelementptr inbounds i32**, i32*** %97, i64 %idxprom116
  %98 = load i32**, i32*** %arrayidx119, align 8
  %arrayidx120 = getelementptr inbounds i32*, i32** %98, i64 %idxprom115
  %99 = load i32*, i32** %arrayidx120, align 8
  %arrayidx121 = getelementptr inbounds i32, i32* %99, i64 %idxprom114
  %100 = load i32, i32* %arrayidx121, align 4
  %add122 = add nsw i32 %100, %91
  store i32 %add122, i32* %arrayidx121, align 4
  store i32 0, i32* %j, align 4
  br label %for.cond.123

for.cond.123:                                     ; preds = %for.inc.174, %for.body.111
  %101 = load i32, i32* %j, align 4
  %102 = load i32, i32* %step_v, align 4
  %cmp124 = icmp slt i32 %101, %102
  br i1 %cmp124, label %for.body.126, label %for.end.176

for.body.126:                                     ; preds = %for.cond.123
  store i32 0, i32* %i, align 4
  br label %for.cond.127

for.cond.127:                                     ; preds = %for.inc, %for.body.126
  %103 = load i32, i32* %i, align 4
  %104 = load i32, i32* %step_h, align 4
  %cmp128 = icmp slt i32 %103, %104
  br i1 %cmp128, label %for.body.130, label %for.end

for.body.130:                                     ; preds = %for.cond.127
  %105 = load i32, i32* %blocktype.addr, align 4
  %idxprom131 = sext i32 %105 to i64
  %106 = load i16, i16* %ref, align 2
  %idxprom132 = sext i16 %106 to i64
  %107 = load i32, i32* %list, align 4
  %idxprom133 = sext i32 %107 to i64
  %108 = load i32, i32* %v, align 4
  %idxprom134 = sext i32 %108 to i64
  %109 = load i32, i32* %h, align 4
  %idxprom135 = sext i32 %109 to i64
  %110 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %all_mv = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %110, i32 0, i32 71
  %111 = load i16******, i16******* %all_mv, align 8
  %arrayidx136 = getelementptr inbounds i16*****, i16****** %111, i64 %idxprom135
  %112 = load i16*****, i16****** %arrayidx136, align 8
  %arrayidx137 = getelementptr inbounds i16****, i16***** %112, i64 %idxprom134
  %113 = load i16****, i16***** %arrayidx137, align 8
  %arrayidx138 = getelementptr inbounds i16***, i16**** %113, i64 %idxprom133
  %114 = load i16***, i16**** %arrayidx138, align 8
  %arrayidx139 = getelementptr inbounds i16**, i16*** %114, i64 %idxprom132
  %115 = load i16**, i16*** %arrayidx139, align 8
  %arrayidx140 = getelementptr inbounds i16*, i16** %115, i64 %idxprom131
  %116 = load i16*, i16** %arrayidx140, align 8
  %arrayidx141 = getelementptr inbounds i16, i16* %116, i64 0
  %117 = load i16, i16* %arrayidx141, align 2
  %118 = load i32, i32* %pic_block_y, align 4
  %119 = load i32, i32* %j, align 4
  %add142 = add nsw i32 %118, %119
  %idxprom143 = sext i32 %add142 to i64
  %120 = load i32, i32* %pic_block_x, align 4
  %121 = load i32, i32* %i, align 4
  %add144 = add nsw i32 %120, %121
  %idxprom145 = sext i32 %add144 to i64
  %122 = load i16***, i16**** %mv_array, align 8
  %arrayidx146 = getelementptr inbounds i16**, i16*** %122, i64 %idxprom145
  %123 = load i16**, i16*** %arrayidx146, align 8
  %arrayidx147 = getelementptr inbounds i16*, i16** %123, i64 %idxprom143
  %124 = load i16*, i16** %arrayidx147, align 8
  %arrayidx148 = getelementptr inbounds i16, i16* %124, i64 0
  store i16 %117, i16* %arrayidx148, align 2
  %125 = load i32, i32* %blocktype.addr, align 4
  %idxprom149 = sext i32 %125 to i64
  %126 = load i16, i16* %ref, align 2
  %idxprom150 = sext i16 %126 to i64
  %127 = load i32, i32* %list, align 4
  %idxprom151 = sext i32 %127 to i64
  %128 = load i32, i32* %v, align 4
  %idxprom152 = sext i32 %128 to i64
  %129 = load i32, i32* %h, align 4
  %idxprom153 = sext i32 %129 to i64
  %130 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %all_mv154 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %130, i32 0, i32 71
  %131 = load i16******, i16******* %all_mv154, align 8
  %arrayidx155 = getelementptr inbounds i16*****, i16****** %131, i64 %idxprom153
  %132 = load i16*****, i16****** %arrayidx155, align 8
  %arrayidx156 = getelementptr inbounds i16****, i16***** %132, i64 %idxprom152
  %133 = load i16****, i16***** %arrayidx156, align 8
  %arrayidx157 = getelementptr inbounds i16***, i16**** %133, i64 %idxprom151
  %134 = load i16***, i16**** %arrayidx157, align 8
  %arrayidx158 = getelementptr inbounds i16**, i16*** %134, i64 %idxprom150
  %135 = load i16**, i16*** %arrayidx158, align 8
  %arrayidx159 = getelementptr inbounds i16*, i16** %135, i64 %idxprom149
  %136 = load i16*, i16** %arrayidx159, align 8
  %arrayidx160 = getelementptr inbounds i16, i16* %136, i64 1
  %137 = load i16, i16* %arrayidx160, align 2
  %138 = load i32, i32* %pic_block_y, align 4
  %139 = load i32, i32* %j, align 4
  %add161 = add nsw i32 %138, %139
  %idxprom162 = sext i32 %add161 to i64
  %140 = load i32, i32* %pic_block_x, align 4
  %141 = load i32, i32* %i, align 4
  %add163 = add nsw i32 %140, %141
  %idxprom164 = sext i32 %add163 to i64
  %142 = load i16***, i16**** %mv_array, align 8
  %arrayidx165 = getelementptr inbounds i16**, i16*** %142, i64 %idxprom164
  %143 = load i16**, i16*** %arrayidx165, align 8
  %arrayidx166 = getelementptr inbounds i16*, i16** %143, i64 %idxprom162
  %144 = load i16*, i16** %arrayidx166, align 8
  %arrayidx167 = getelementptr inbounds i16, i16* %144, i64 1
  store i16 %137, i16* %arrayidx167, align 2
  %145 = load i16, i16* %ref, align 2
  %146 = load i32, i32* %pic_block_y, align 4
  %147 = load i32, i32* %j, align 4
  %add168 = add nsw i32 %146, %147
  %idxprom169 = sext i32 %add168 to i64
  %148 = load i32, i32* %pic_block_x, align 4
  %149 = load i32, i32* %i, align 4
  %add170 = add nsw i32 %148, %149
  %idxprom171 = sext i32 %add170 to i64
  %150 = load i16**, i16*** %ref_array, align 8
  %arrayidx172 = getelementptr inbounds i16*, i16** %150, i64 %idxprom171
  %151 = load i16*, i16** %arrayidx172, align 8
  %arrayidx173 = getelementptr inbounds i16, i16* %151, i64 %idxprom169
  store i16 %145, i16* %arrayidx173, align 2
  br label %for.inc

for.inc:                                          ; preds = %for.body.130
  %152 = load i32, i32* %i, align 4
  %inc = add nsw i32 %152, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond.127

for.end:                                          ; preds = %for.cond.127
  br label %for.inc.174

for.inc.174:                                      ; preds = %for.end
  %153 = load i32, i32* %j, align 4
  %inc175 = add nsw i32 %153, 1
  store i32 %inc175, i32* %j, align 4
  br label %for.cond.123

for.end.176:                                      ; preds = %for.cond.123
  br label %for.inc.177

for.inc.177:                                      ; preds = %for.end.176
  %154 = load i32, i32* %step_h, align 4
  %155 = load i32, i32* %h, align 4
  %add178 = add nsw i32 %155, %154
  store i32 %add178, i32* %h, align 4
  br label %for.cond.103

for.end.179:                                      ; preds = %for.cond.103
  br label %for.inc.180

for.inc.180:                                      ; preds = %for.end.179
  %156 = load i32, i32* %step_v, align 4
  %157 = load i32, i32* %v, align 4
  %add181 = add nsw i32 %157, %156
  store i32 %add181, i32* %v, align 4
  br label %for.cond.89

for.end.182:                                      ; preds = %for.cond.89
  br label %for.inc.183

for.inc.183:                                      ; preds = %for.end.182
  %158 = load i16, i16* %ref, align 2
  %inc184 = add i16 %158, 1
  store i16 %inc184, i16* %ref, align 2
  br label %for.cond.27

for.end.185:                                      ; preds = %for.cond.27
  br label %for.inc.186

for.inc.186:                                      ; preds = %for.end.185
  %159 = load i32, i32* %list, align 4
  %inc187 = add nsw i32 %159, 1
  store i32 %inc187, i32* %list, align 4
  br label %for.cond

for.end.188:                                      ; preds = %for.cond
  ret void
}

; Function Attrs: nounwind uwtable
define void @Get_Direct_Motion_Vectors() #0 {
entry:
  %block_x = alloca i32, align 4
  %block_y = alloca i32, align 4
  %pic_block_x = alloca i32, align 4
  %pic_block_y = alloca i32, align 4
  %opic_block_x = alloca i32, align 4
  %opic_block_y = alloca i32, align 4
  %all_mvs = alloca i16******, align 8
  %mv_scale = alloca i32, align 4
  %moving_block = alloca i8**, align 8
  %co_located_mv = alloca i16****, align 8
  %co_located_ref_idx = alloca i16***, align 8
  %co_located_ref_id = alloca i64***, align 8
  %currMB = alloca %struct.macroblock*, align 8
  %fw_rFrameL = alloca i16, align 2
  %fw_rFrameU = alloca i16, align 2
  %fw_rFrameUL = alloca i16, align 2
  %fw_rFrameUR = alloca i16, align 2
  %bw_rFrameL = alloca i16, align 2
  %bw_rFrameU = alloca i16, align 2
  %bw_rFrameUL = alloca i16, align 2
  %bw_rFrameUR = alloca i16, align 2
  %fw_rFrame = alloca i16, align 2
  %bw_rFrame = alloca i16, align 2
  %pmvfw = alloca [2 x i16], align 2
  %pmvbw = alloca [2 x i16], align 2
  %mb_left = alloca %struct.pix_pos, align 4
  %mb_up = alloca %struct.pix_pos, align 4
  %mb_upleft = alloca %struct.pix_pos, align 4
  %mb_upright = alloca %struct.pix_pos, align 4
  %refList = alloca i32, align 4
  %ref_idx1308 = alloca i32, align 4
  %list_offset = alloca i32, align 4
  %mapped_idx = alloca i32, align 4
  %iref = alloca i32, align 4
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %all_mv = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i32 0, i32 71
  %1 = load i16******, i16******* %all_mv, align 8
  store i16****** %1, i16******* %all_mvs, align 8
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 3
  %3 = load i32, i32* %current_mb_nr, align 4
  %idxprom = sext i32 %3 to i64
  %4 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %4, i32 0, i32 51
  %5 = load %struct.macroblock*, %struct.macroblock** %mb_data, align 8
  %arrayidx = getelementptr inbounds %struct.macroblock, %struct.macroblock* %5, i64 %idxprom
  store %struct.macroblock* %arrayidx, %struct.macroblock** %currMB, align 8
  %6 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %MbaffFrameFlag = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %6, i32 0, i32 90
  %7 = load i32, i32* %MbaffFrameFlag, align 4
  %tobool = icmp ne i32 %7, 0
  br i1 %tobool, label %land.lhs.true, label %if.else.5

land.lhs.true:                                    ; preds = %entry
  %8 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_field = getelementptr inbounds %struct.macroblock, %struct.macroblock* %8, i32 0, i32 22
  %9 = load i32, i32* %mb_field, align 4
  %tobool1 = icmp ne i32 %9, 0
  br i1 %tobool1, label %if.then, label %if.else.5

if.then:                                          ; preds = %land.lhs.true
  %10 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr2 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %10, i32 0, i32 3
  %11 = load i32, i32* %current_mb_nr2, align 4
  %rem = srem i32 %11, 2
  %tobool3 = icmp ne i32 %rem, 0
  br i1 %tobool3, label %if.then.4, label %if.else

if.then.4:                                        ; preds = %if.then
  %12 = load %struct.colocated_params*, %struct.colocated_params** @Co_located, align 8
  %bottom_moving_block = getelementptr inbounds %struct.colocated_params, %struct.colocated_params* %12, i32 0, i32 17
  %13 = load i8**, i8*** %bottom_moving_block, align 8
  store i8** %13, i8*** %moving_block, align 8
  %14 = load %struct.colocated_params*, %struct.colocated_params** @Co_located, align 8
  %bottom_mv = getelementptr inbounds %struct.colocated_params, %struct.colocated_params* %14, i32 0, i32 16
  %15 = load i16****, i16***** %bottom_mv, align 8
  store i16**** %15, i16***** %co_located_mv, align 8
  %16 = load %struct.colocated_params*, %struct.colocated_params** @Co_located, align 8
  %bottom_ref_idx = getelementptr inbounds %struct.colocated_params, %struct.colocated_params* %16, i32 0, i32 14
  %17 = load i16***, i16**** %bottom_ref_idx, align 8
  store i16*** %17, i16**** %co_located_ref_idx, align 8
  %18 = load %struct.colocated_params*, %struct.colocated_params** @Co_located, align 8
  %bottom_ref_pic_id = getelementptr inbounds %struct.colocated_params, %struct.colocated_params* %18, i32 0, i32 15
  %19 = load i64***, i64**** %bottom_ref_pic_id, align 8
  store i64*** %19, i64**** %co_located_ref_id, align 8
  br label %if.end

if.else:                                          ; preds = %if.then
  %20 = load %struct.colocated_params*, %struct.colocated_params** @Co_located, align 8
  %top_moving_block = getelementptr inbounds %struct.colocated_params, %struct.colocated_params* %20, i32 0, i32 12
  %21 = load i8**, i8*** %top_moving_block, align 8
  store i8** %21, i8*** %moving_block, align 8
  %22 = load %struct.colocated_params*, %struct.colocated_params** @Co_located, align 8
  %top_mv = getelementptr inbounds %struct.colocated_params, %struct.colocated_params* %22, i32 0, i32 11
  %23 = load i16****, i16***** %top_mv, align 8
  store i16**** %23, i16***** %co_located_mv, align 8
  %24 = load %struct.colocated_params*, %struct.colocated_params** @Co_located, align 8
  %top_ref_idx = getelementptr inbounds %struct.colocated_params, %struct.colocated_params* %24, i32 0, i32 9
  %25 = load i16***, i16**** %top_ref_idx, align 8
  store i16*** %25, i16**** %co_located_ref_idx, align 8
  %26 = load %struct.colocated_params*, %struct.colocated_params** @Co_located, align 8
  %top_ref_pic_id = getelementptr inbounds %struct.colocated_params, %struct.colocated_params* %26, i32 0, i32 10
  %27 = load i64***, i64**** %top_ref_pic_id, align 8
  store i64*** %27, i64**** %co_located_ref_id, align 8
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.4
  br label %if.end.7

if.else.5:                                        ; preds = %land.lhs.true, %entry
  %28 = load %struct.colocated_params*, %struct.colocated_params** @Co_located, align 8
  %moving_block6 = getelementptr inbounds %struct.colocated_params, %struct.colocated_params* %28, i32 0, i32 7
  %29 = load i8**, i8*** %moving_block6, align 8
  store i8** %29, i8*** %moving_block, align 8
  %30 = load %struct.colocated_params*, %struct.colocated_params** @Co_located, align 8
  %mv = getelementptr inbounds %struct.colocated_params, %struct.colocated_params* %30, i32 0, i32 6
  %31 = load i16****, i16***** %mv, align 8
  store i16**** %31, i16***** %co_located_mv, align 8
  %32 = load %struct.colocated_params*, %struct.colocated_params** @Co_located, align 8
  %ref_idx = getelementptr inbounds %struct.colocated_params, %struct.colocated_params* %32, i32 0, i32 4
  %33 = load i16***, i16**** %ref_idx, align 8
  store i16*** %33, i16**** %co_located_ref_idx, align 8
  %34 = load %struct.colocated_params*, %struct.colocated_params** @Co_located, align 8
  %ref_pic_id = getelementptr inbounds %struct.colocated_params, %struct.colocated_params* %34, i32 0, i32 5
  %35 = load i64***, i64**** %ref_pic_id, align 8
  store i64*** %35, i64**** %co_located_ref_id, align 8
  br label %if.end.7

if.end.7:                                         ; preds = %if.else.5, %if.end
  %36 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %direct_spatial_mv_pred_flag = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %36, i32 0, i32 78
  %37 = load i32, i32* %direct_spatial_mv_pred_flag, align 4
  %tobool8 = icmp ne i32 %37, 0
  br i1 %tobool8, label %if.then.9, label %if.else.1293

if.then.9:                                        ; preds = %if.end.7
  %38 = bitcast [2 x i16]* %pmvfw to i8*
  call void @llvm.memset.p0i8.i64(i8* %38, i8 0, i64 4, i32 2, i1 false)
  %39 = bitcast [2 x i16]* %pmvbw to i8*
  call void @llvm.memset.p0i8.i64(i8* %39, i8 0, i64 4, i32 2, i1 false)
  %40 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr10 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %40, i32 0, i32 3
  %41 = load i32, i32* %current_mb_nr10, align 4
  call void @getLuma4x4Neighbour(i32 %41, i32 0, i32 0, i32 -1, i32 0, %struct.pix_pos* %mb_left)
  %42 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr11 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %42, i32 0, i32 3
  %43 = load i32, i32* %current_mb_nr11, align 4
  call void @getLuma4x4Neighbour(i32 %43, i32 0, i32 0, i32 0, i32 -1, %struct.pix_pos* %mb_up)
  %44 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr12 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %44, i32 0, i32 3
  %45 = load i32, i32* %current_mb_nr12, align 4
  call void @getLuma4x4Neighbour(i32 %45, i32 0, i32 0, i32 16, i32 -1, %struct.pix_pos* %mb_upright)
  %46 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr13 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %46, i32 0, i32 3
  %47 = load i32, i32* %current_mb_nr13, align 4
  call void @getLuma4x4Neighbour(i32 %47, i32 0, i32 0, i32 -1, i32 -1, %struct.pix_pos* %mb_upleft)
  %48 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %MbaffFrameFlag14 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %48, i32 0, i32 90
  %49 = load i32, i32* %MbaffFrameFlag14, align 4
  %tobool15 = icmp ne i32 %49, 0
  br i1 %tobool15, label %if.else.139, label %if.then.16

if.then.16:                                       ; preds = %if.then.9
  %available = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_left, i32 0, i32 0
  %50 = load i32, i32* %available, align 4
  %tobool17 = icmp ne i32 %50, 0
  br i1 %tobool17, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then.16
  %pos_y = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_left, i32 0, i32 5
  %51 = load i32, i32* %pos_y, align 4
  %idxprom18 = sext i32 %51 to i64
  %pos_x = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_left, i32 0, i32 4
  %52 = load i32, i32* %pos_x, align 4
  %idxprom19 = sext i32 %52 to i64
  %53 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx20 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %53, i32 0, i32 32
  %54 = load i16***, i16**** %ref_idx20, align 8
  %arrayidx21 = getelementptr inbounds i16**, i16*** %54, i64 0
  %55 = load i16**, i16*** %arrayidx21, align 8
  %arrayidx22 = getelementptr inbounds i16*, i16** %55, i64 %idxprom19
  %56 = load i16*, i16** %arrayidx22, align 8
  %arrayidx23 = getelementptr inbounds i16, i16* %56, i64 %idxprom18
  %57 = load i16, i16* %arrayidx23, align 2
  %conv = sext i16 %57 to i32
  br label %cond.end

cond.false:                                       ; preds = %if.then.16
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ -1, %cond.false ]
  %conv24 = trunc i32 %cond to i16
  store i16 %conv24, i16* %fw_rFrameL, align 2
  %available25 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_up, i32 0, i32 0
  %58 = load i32, i32* %available25, align 4
  %tobool26 = icmp ne i32 %58, 0
  br i1 %tobool26, label %cond.true.27, label %cond.false.37

cond.true.27:                                     ; preds = %cond.end
  %pos_y28 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_up, i32 0, i32 5
  %59 = load i32, i32* %pos_y28, align 4
  %idxprom29 = sext i32 %59 to i64
  %pos_x30 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_up, i32 0, i32 4
  %60 = load i32, i32* %pos_x30, align 4
  %idxprom31 = sext i32 %60 to i64
  %61 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx32 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %61, i32 0, i32 32
  %62 = load i16***, i16**** %ref_idx32, align 8
  %arrayidx33 = getelementptr inbounds i16**, i16*** %62, i64 0
  %63 = load i16**, i16*** %arrayidx33, align 8
  %arrayidx34 = getelementptr inbounds i16*, i16** %63, i64 %idxprom31
  %64 = load i16*, i16** %arrayidx34, align 8
  %arrayidx35 = getelementptr inbounds i16, i16* %64, i64 %idxprom29
  %65 = load i16, i16* %arrayidx35, align 2
  %conv36 = sext i16 %65 to i32
  br label %cond.end.38

cond.false.37:                                    ; preds = %cond.end
  br label %cond.end.38

cond.end.38:                                      ; preds = %cond.false.37, %cond.true.27
  %cond39 = phi i32 [ %conv36, %cond.true.27 ], [ -1, %cond.false.37 ]
  %conv40 = trunc i32 %cond39 to i16
  store i16 %conv40, i16* %fw_rFrameU, align 2
  %available41 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upleft, i32 0, i32 0
  %66 = load i32, i32* %available41, align 4
  %tobool42 = icmp ne i32 %66, 0
  br i1 %tobool42, label %cond.true.43, label %cond.false.53

cond.true.43:                                     ; preds = %cond.end.38
  %pos_y44 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upleft, i32 0, i32 5
  %67 = load i32, i32* %pos_y44, align 4
  %idxprom45 = sext i32 %67 to i64
  %pos_x46 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upleft, i32 0, i32 4
  %68 = load i32, i32* %pos_x46, align 4
  %idxprom47 = sext i32 %68 to i64
  %69 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx48 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %69, i32 0, i32 32
  %70 = load i16***, i16**** %ref_idx48, align 8
  %arrayidx49 = getelementptr inbounds i16**, i16*** %70, i64 0
  %71 = load i16**, i16*** %arrayidx49, align 8
  %arrayidx50 = getelementptr inbounds i16*, i16** %71, i64 %idxprom47
  %72 = load i16*, i16** %arrayidx50, align 8
  %arrayidx51 = getelementptr inbounds i16, i16* %72, i64 %idxprom45
  %73 = load i16, i16* %arrayidx51, align 2
  %conv52 = sext i16 %73 to i32
  br label %cond.end.54

cond.false.53:                                    ; preds = %cond.end.38
  br label %cond.end.54

cond.end.54:                                      ; preds = %cond.false.53, %cond.true.43
  %cond55 = phi i32 [ %conv52, %cond.true.43 ], [ -1, %cond.false.53 ]
  %conv56 = trunc i32 %cond55 to i16
  store i16 %conv56, i16* %fw_rFrameUL, align 2
  %available57 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upright, i32 0, i32 0
  %74 = load i32, i32* %available57, align 4
  %tobool58 = icmp ne i32 %74, 0
  br i1 %tobool58, label %cond.true.59, label %cond.false.69

cond.true.59:                                     ; preds = %cond.end.54
  %pos_y60 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upright, i32 0, i32 5
  %75 = load i32, i32* %pos_y60, align 4
  %idxprom61 = sext i32 %75 to i64
  %pos_x62 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upright, i32 0, i32 4
  %76 = load i32, i32* %pos_x62, align 4
  %idxprom63 = sext i32 %76 to i64
  %77 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx64 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %77, i32 0, i32 32
  %78 = load i16***, i16**** %ref_idx64, align 8
  %arrayidx65 = getelementptr inbounds i16**, i16*** %78, i64 0
  %79 = load i16**, i16*** %arrayidx65, align 8
  %arrayidx66 = getelementptr inbounds i16*, i16** %79, i64 %idxprom63
  %80 = load i16*, i16** %arrayidx66, align 8
  %arrayidx67 = getelementptr inbounds i16, i16* %80, i64 %idxprom61
  %81 = load i16, i16* %arrayidx67, align 2
  %conv68 = sext i16 %81 to i32
  br label %cond.end.71

cond.false.69:                                    ; preds = %cond.end.54
  %82 = load i16, i16* %fw_rFrameUL, align 2
  %conv70 = sext i16 %82 to i32
  br label %cond.end.71

cond.end.71:                                      ; preds = %cond.false.69, %cond.true.59
  %cond72 = phi i32 [ %conv68, %cond.true.59 ], [ %conv70, %cond.false.69 ]
  %conv73 = trunc i32 %cond72 to i16
  store i16 %conv73, i16* %fw_rFrameUR, align 2
  %available74 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_left, i32 0, i32 0
  %83 = load i32, i32* %available74, align 4
  %tobool75 = icmp ne i32 %83, 0
  br i1 %tobool75, label %cond.true.76, label %cond.false.86

cond.true.76:                                     ; preds = %cond.end.71
  %pos_y77 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_left, i32 0, i32 5
  %84 = load i32, i32* %pos_y77, align 4
  %idxprom78 = sext i32 %84 to i64
  %pos_x79 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_left, i32 0, i32 4
  %85 = load i32, i32* %pos_x79, align 4
  %idxprom80 = sext i32 %85 to i64
  %86 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx81 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %86, i32 0, i32 32
  %87 = load i16***, i16**** %ref_idx81, align 8
  %arrayidx82 = getelementptr inbounds i16**, i16*** %87, i64 1
  %88 = load i16**, i16*** %arrayidx82, align 8
  %arrayidx83 = getelementptr inbounds i16*, i16** %88, i64 %idxprom80
  %89 = load i16*, i16** %arrayidx83, align 8
  %arrayidx84 = getelementptr inbounds i16, i16* %89, i64 %idxprom78
  %90 = load i16, i16* %arrayidx84, align 2
  %conv85 = sext i16 %90 to i32
  br label %cond.end.87

cond.false.86:                                    ; preds = %cond.end.71
  br label %cond.end.87

cond.end.87:                                      ; preds = %cond.false.86, %cond.true.76
  %cond88 = phi i32 [ %conv85, %cond.true.76 ], [ -1, %cond.false.86 ]
  %conv89 = trunc i32 %cond88 to i16
  store i16 %conv89, i16* %bw_rFrameL, align 2
  %available90 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_up, i32 0, i32 0
  %91 = load i32, i32* %available90, align 4
  %tobool91 = icmp ne i32 %91, 0
  br i1 %tobool91, label %cond.true.92, label %cond.false.102

cond.true.92:                                     ; preds = %cond.end.87
  %pos_y93 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_up, i32 0, i32 5
  %92 = load i32, i32* %pos_y93, align 4
  %idxprom94 = sext i32 %92 to i64
  %pos_x95 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_up, i32 0, i32 4
  %93 = load i32, i32* %pos_x95, align 4
  %idxprom96 = sext i32 %93 to i64
  %94 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx97 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %94, i32 0, i32 32
  %95 = load i16***, i16**** %ref_idx97, align 8
  %arrayidx98 = getelementptr inbounds i16**, i16*** %95, i64 1
  %96 = load i16**, i16*** %arrayidx98, align 8
  %arrayidx99 = getelementptr inbounds i16*, i16** %96, i64 %idxprom96
  %97 = load i16*, i16** %arrayidx99, align 8
  %arrayidx100 = getelementptr inbounds i16, i16* %97, i64 %idxprom94
  %98 = load i16, i16* %arrayidx100, align 2
  %conv101 = sext i16 %98 to i32
  br label %cond.end.103

cond.false.102:                                   ; preds = %cond.end.87
  br label %cond.end.103

cond.end.103:                                     ; preds = %cond.false.102, %cond.true.92
  %cond104 = phi i32 [ %conv101, %cond.true.92 ], [ -1, %cond.false.102 ]
  %conv105 = trunc i32 %cond104 to i16
  store i16 %conv105, i16* %bw_rFrameU, align 2
  %available106 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upleft, i32 0, i32 0
  %99 = load i32, i32* %available106, align 4
  %tobool107 = icmp ne i32 %99, 0
  br i1 %tobool107, label %cond.true.108, label %cond.false.118

cond.true.108:                                    ; preds = %cond.end.103
  %pos_y109 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upleft, i32 0, i32 5
  %100 = load i32, i32* %pos_y109, align 4
  %idxprom110 = sext i32 %100 to i64
  %pos_x111 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upleft, i32 0, i32 4
  %101 = load i32, i32* %pos_x111, align 4
  %idxprom112 = sext i32 %101 to i64
  %102 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx113 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %102, i32 0, i32 32
  %103 = load i16***, i16**** %ref_idx113, align 8
  %arrayidx114 = getelementptr inbounds i16**, i16*** %103, i64 1
  %104 = load i16**, i16*** %arrayidx114, align 8
  %arrayidx115 = getelementptr inbounds i16*, i16** %104, i64 %idxprom112
  %105 = load i16*, i16** %arrayidx115, align 8
  %arrayidx116 = getelementptr inbounds i16, i16* %105, i64 %idxprom110
  %106 = load i16, i16* %arrayidx116, align 2
  %conv117 = sext i16 %106 to i32
  br label %cond.end.119

cond.false.118:                                   ; preds = %cond.end.103
  br label %cond.end.119

cond.end.119:                                     ; preds = %cond.false.118, %cond.true.108
  %cond120 = phi i32 [ %conv117, %cond.true.108 ], [ -1, %cond.false.118 ]
  %conv121 = trunc i32 %cond120 to i16
  store i16 %conv121, i16* %bw_rFrameUL, align 2
  %available122 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upright, i32 0, i32 0
  %107 = load i32, i32* %available122, align 4
  %tobool123 = icmp ne i32 %107, 0
  br i1 %tobool123, label %cond.true.124, label %cond.false.134

cond.true.124:                                    ; preds = %cond.end.119
  %pos_y125 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upright, i32 0, i32 5
  %108 = load i32, i32* %pos_y125, align 4
  %idxprom126 = sext i32 %108 to i64
  %pos_x127 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upright, i32 0, i32 4
  %109 = load i32, i32* %pos_x127, align 4
  %idxprom128 = sext i32 %109 to i64
  %110 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx129 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %110, i32 0, i32 32
  %111 = load i16***, i16**** %ref_idx129, align 8
  %arrayidx130 = getelementptr inbounds i16**, i16*** %111, i64 1
  %112 = load i16**, i16*** %arrayidx130, align 8
  %arrayidx131 = getelementptr inbounds i16*, i16** %112, i64 %idxprom128
  %113 = load i16*, i16** %arrayidx131, align 8
  %arrayidx132 = getelementptr inbounds i16, i16* %113, i64 %idxprom126
  %114 = load i16, i16* %arrayidx132, align 2
  %conv133 = sext i16 %114 to i32
  br label %cond.end.136

cond.false.134:                                   ; preds = %cond.end.119
  %115 = load i16, i16* %bw_rFrameUL, align 2
  %conv135 = sext i16 %115 to i32
  br label %cond.end.136

cond.end.136:                                     ; preds = %cond.false.134, %cond.true.124
  %cond137 = phi i32 [ %conv133, %cond.true.124 ], [ %conv135, %cond.false.134 ]
  %conv138 = trunc i32 %cond137 to i16
  store i16 %conv138, i16* %bw_rFrameUR, align 2
  br label %if.end.912

if.else.139:                                      ; preds = %if.then.9
  %116 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_field140 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %116, i32 0, i32 22
  %117 = load i32, i32* %mb_field140, align 4
  %tobool141 = icmp ne i32 %117, 0
  br i1 %tobool141, label %if.then.142, label %if.else.525

if.then.142:                                      ; preds = %if.else.139
  %available143 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_left, i32 0, i32 0
  %118 = load i32, i32* %available143, align 4
  %tobool144 = icmp ne i32 %118, 0
  br i1 %tobool144, label %cond.true.145, label %cond.false.183

cond.true.145:                                    ; preds = %if.then.142
  %mb_addr = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_left, i32 0, i32 1
  %119 = load i32, i32* %mb_addr, align 4
  %idxprom146 = sext i32 %119 to i64
  %120 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data147 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %120, i32 0, i32 51
  %121 = load %struct.macroblock*, %struct.macroblock** %mb_data147, align 8
  %arrayidx148 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %121, i64 %idxprom146
  %mb_field149 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx148, i32 0, i32 22
  %122 = load i32, i32* %mb_field149, align 4
  %tobool150 = icmp ne i32 %122, 0
  br i1 %tobool150, label %cond.true.161, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %cond.true.145
  %pos_y151 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_left, i32 0, i32 5
  %123 = load i32, i32* %pos_y151, align 4
  %idxprom152 = sext i32 %123 to i64
  %pos_x153 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_left, i32 0, i32 4
  %124 = load i32, i32* %pos_x153, align 4
  %idxprom154 = sext i32 %124 to i64
  %125 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx155 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %125, i32 0, i32 32
  %126 = load i16***, i16**** %ref_idx155, align 8
  %arrayidx156 = getelementptr inbounds i16**, i16*** %126, i64 0
  %127 = load i16**, i16*** %arrayidx156, align 8
  %arrayidx157 = getelementptr inbounds i16*, i16** %127, i64 %idxprom154
  %128 = load i16*, i16** %arrayidx157, align 8
  %arrayidx158 = getelementptr inbounds i16, i16* %128, i64 %idxprom152
  %129 = load i16, i16* %arrayidx158, align 2
  %conv159 = sext i16 %129 to i32
  %cmp = icmp slt i32 %conv159, 0
  br i1 %cmp, label %cond.true.161, label %cond.false.171

cond.true.161:                                    ; preds = %lor.lhs.false, %cond.true.145
  %pos_y162 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_left, i32 0, i32 5
  %130 = load i32, i32* %pos_y162, align 4
  %idxprom163 = sext i32 %130 to i64
  %pos_x164 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_left, i32 0, i32 4
  %131 = load i32, i32* %pos_x164, align 4
  %idxprom165 = sext i32 %131 to i64
  %132 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx166 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %132, i32 0, i32 32
  %133 = load i16***, i16**** %ref_idx166, align 8
  %arrayidx167 = getelementptr inbounds i16**, i16*** %133, i64 0
  %134 = load i16**, i16*** %arrayidx167, align 8
  %arrayidx168 = getelementptr inbounds i16*, i16** %134, i64 %idxprom165
  %135 = load i16*, i16** %arrayidx168, align 8
  %arrayidx169 = getelementptr inbounds i16, i16* %135, i64 %idxprom163
  %136 = load i16, i16* %arrayidx169, align 2
  %conv170 = sext i16 %136 to i32
  br label %cond.end.181

cond.false.171:                                   ; preds = %lor.lhs.false
  %pos_y172 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_left, i32 0, i32 5
  %137 = load i32, i32* %pos_y172, align 4
  %idxprom173 = sext i32 %137 to i64
  %pos_x174 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_left, i32 0, i32 4
  %138 = load i32, i32* %pos_x174, align 4
  %idxprom175 = sext i32 %138 to i64
  %139 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx176 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %139, i32 0, i32 32
  %140 = load i16***, i16**** %ref_idx176, align 8
  %arrayidx177 = getelementptr inbounds i16**, i16*** %140, i64 0
  %141 = load i16**, i16*** %arrayidx177, align 8
  %arrayidx178 = getelementptr inbounds i16*, i16** %141, i64 %idxprom175
  %142 = load i16*, i16** %arrayidx178, align 8
  %arrayidx179 = getelementptr inbounds i16, i16* %142, i64 %idxprom173
  %143 = load i16, i16* %arrayidx179, align 2
  %conv180 = sext i16 %143 to i32
  %mul = mul nsw i32 %conv180, 2
  br label %cond.end.181

cond.end.181:                                     ; preds = %cond.false.171, %cond.true.161
  %cond182 = phi i32 [ %conv170, %cond.true.161 ], [ %mul, %cond.false.171 ]
  br label %cond.end.184

cond.false.183:                                   ; preds = %if.then.142
  br label %cond.end.184

cond.end.184:                                     ; preds = %cond.false.183, %cond.end.181
  %cond185 = phi i32 [ %cond182, %cond.end.181 ], [ -1, %cond.false.183 ]
  %conv186 = trunc i32 %cond185 to i16
  store i16 %conv186, i16* %fw_rFrameL, align 2
  %available187 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_up, i32 0, i32 0
  %144 = load i32, i32* %available187, align 4
  %tobool188 = icmp ne i32 %144, 0
  br i1 %tobool188, label %cond.true.189, label %cond.false.231

cond.true.189:                                    ; preds = %cond.end.184
  %mb_addr190 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_up, i32 0, i32 1
  %145 = load i32, i32* %mb_addr190, align 4
  %idxprom191 = sext i32 %145 to i64
  %146 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data192 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %146, i32 0, i32 51
  %147 = load %struct.macroblock*, %struct.macroblock** %mb_data192, align 8
  %arrayidx193 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %147, i64 %idxprom191
  %mb_field194 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx193, i32 0, i32 22
  %148 = load i32, i32* %mb_field194, align 4
  %tobool195 = icmp ne i32 %148, 0
  br i1 %tobool195, label %cond.true.208, label %lor.lhs.false.196

lor.lhs.false.196:                                ; preds = %cond.true.189
  %pos_y197 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_up, i32 0, i32 5
  %149 = load i32, i32* %pos_y197, align 4
  %idxprom198 = sext i32 %149 to i64
  %pos_x199 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_up, i32 0, i32 4
  %150 = load i32, i32* %pos_x199, align 4
  %idxprom200 = sext i32 %150 to i64
  %151 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx201 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %151, i32 0, i32 32
  %152 = load i16***, i16**** %ref_idx201, align 8
  %arrayidx202 = getelementptr inbounds i16**, i16*** %152, i64 0
  %153 = load i16**, i16*** %arrayidx202, align 8
  %arrayidx203 = getelementptr inbounds i16*, i16** %153, i64 %idxprom200
  %154 = load i16*, i16** %arrayidx203, align 8
  %arrayidx204 = getelementptr inbounds i16, i16* %154, i64 %idxprom198
  %155 = load i16, i16* %arrayidx204, align 2
  %conv205 = sext i16 %155 to i32
  %cmp206 = icmp slt i32 %conv205, 0
  br i1 %cmp206, label %cond.true.208, label %cond.false.218

cond.true.208:                                    ; preds = %lor.lhs.false.196, %cond.true.189
  %pos_y209 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_up, i32 0, i32 5
  %156 = load i32, i32* %pos_y209, align 4
  %idxprom210 = sext i32 %156 to i64
  %pos_x211 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_up, i32 0, i32 4
  %157 = load i32, i32* %pos_x211, align 4
  %idxprom212 = sext i32 %157 to i64
  %158 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx213 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %158, i32 0, i32 32
  %159 = load i16***, i16**** %ref_idx213, align 8
  %arrayidx214 = getelementptr inbounds i16**, i16*** %159, i64 0
  %160 = load i16**, i16*** %arrayidx214, align 8
  %arrayidx215 = getelementptr inbounds i16*, i16** %160, i64 %idxprom212
  %161 = load i16*, i16** %arrayidx215, align 8
  %arrayidx216 = getelementptr inbounds i16, i16* %161, i64 %idxprom210
  %162 = load i16, i16* %arrayidx216, align 2
  %conv217 = sext i16 %162 to i32
  br label %cond.end.229

cond.false.218:                                   ; preds = %lor.lhs.false.196
  %pos_y219 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_up, i32 0, i32 5
  %163 = load i32, i32* %pos_y219, align 4
  %idxprom220 = sext i32 %163 to i64
  %pos_x221 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_up, i32 0, i32 4
  %164 = load i32, i32* %pos_x221, align 4
  %idxprom222 = sext i32 %164 to i64
  %165 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx223 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %165, i32 0, i32 32
  %166 = load i16***, i16**** %ref_idx223, align 8
  %arrayidx224 = getelementptr inbounds i16**, i16*** %166, i64 0
  %167 = load i16**, i16*** %arrayidx224, align 8
  %arrayidx225 = getelementptr inbounds i16*, i16** %167, i64 %idxprom222
  %168 = load i16*, i16** %arrayidx225, align 8
  %arrayidx226 = getelementptr inbounds i16, i16* %168, i64 %idxprom220
  %169 = load i16, i16* %arrayidx226, align 2
  %conv227 = sext i16 %169 to i32
  %mul228 = mul nsw i32 %conv227, 2
  br label %cond.end.229

cond.end.229:                                     ; preds = %cond.false.218, %cond.true.208
  %cond230 = phi i32 [ %conv217, %cond.true.208 ], [ %mul228, %cond.false.218 ]
  br label %cond.end.232

cond.false.231:                                   ; preds = %cond.end.184
  br label %cond.end.232

cond.end.232:                                     ; preds = %cond.false.231, %cond.end.229
  %cond233 = phi i32 [ %cond230, %cond.end.229 ], [ -1, %cond.false.231 ]
  %conv234 = trunc i32 %cond233 to i16
  store i16 %conv234, i16* %fw_rFrameU, align 2
  %available235 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upleft, i32 0, i32 0
  %170 = load i32, i32* %available235, align 4
  %tobool236 = icmp ne i32 %170, 0
  br i1 %tobool236, label %cond.true.237, label %cond.false.279

cond.true.237:                                    ; preds = %cond.end.232
  %mb_addr238 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upleft, i32 0, i32 1
  %171 = load i32, i32* %mb_addr238, align 4
  %idxprom239 = sext i32 %171 to i64
  %172 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data240 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %172, i32 0, i32 51
  %173 = load %struct.macroblock*, %struct.macroblock** %mb_data240, align 8
  %arrayidx241 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %173, i64 %idxprom239
  %mb_field242 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx241, i32 0, i32 22
  %174 = load i32, i32* %mb_field242, align 4
  %tobool243 = icmp ne i32 %174, 0
  br i1 %tobool243, label %cond.true.256, label %lor.lhs.false.244

lor.lhs.false.244:                                ; preds = %cond.true.237
  %pos_y245 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upleft, i32 0, i32 5
  %175 = load i32, i32* %pos_y245, align 4
  %idxprom246 = sext i32 %175 to i64
  %pos_x247 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upleft, i32 0, i32 4
  %176 = load i32, i32* %pos_x247, align 4
  %idxprom248 = sext i32 %176 to i64
  %177 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx249 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %177, i32 0, i32 32
  %178 = load i16***, i16**** %ref_idx249, align 8
  %arrayidx250 = getelementptr inbounds i16**, i16*** %178, i64 0
  %179 = load i16**, i16*** %arrayidx250, align 8
  %arrayidx251 = getelementptr inbounds i16*, i16** %179, i64 %idxprom248
  %180 = load i16*, i16** %arrayidx251, align 8
  %arrayidx252 = getelementptr inbounds i16, i16* %180, i64 %idxprom246
  %181 = load i16, i16* %arrayidx252, align 2
  %conv253 = sext i16 %181 to i32
  %cmp254 = icmp slt i32 %conv253, 0
  br i1 %cmp254, label %cond.true.256, label %cond.false.266

cond.true.256:                                    ; preds = %lor.lhs.false.244, %cond.true.237
  %pos_y257 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upleft, i32 0, i32 5
  %182 = load i32, i32* %pos_y257, align 4
  %idxprom258 = sext i32 %182 to i64
  %pos_x259 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upleft, i32 0, i32 4
  %183 = load i32, i32* %pos_x259, align 4
  %idxprom260 = sext i32 %183 to i64
  %184 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx261 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %184, i32 0, i32 32
  %185 = load i16***, i16**** %ref_idx261, align 8
  %arrayidx262 = getelementptr inbounds i16**, i16*** %185, i64 0
  %186 = load i16**, i16*** %arrayidx262, align 8
  %arrayidx263 = getelementptr inbounds i16*, i16** %186, i64 %idxprom260
  %187 = load i16*, i16** %arrayidx263, align 8
  %arrayidx264 = getelementptr inbounds i16, i16* %187, i64 %idxprom258
  %188 = load i16, i16* %arrayidx264, align 2
  %conv265 = sext i16 %188 to i32
  br label %cond.end.277

cond.false.266:                                   ; preds = %lor.lhs.false.244
  %pos_y267 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upleft, i32 0, i32 5
  %189 = load i32, i32* %pos_y267, align 4
  %idxprom268 = sext i32 %189 to i64
  %pos_x269 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upleft, i32 0, i32 4
  %190 = load i32, i32* %pos_x269, align 4
  %idxprom270 = sext i32 %190 to i64
  %191 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx271 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %191, i32 0, i32 32
  %192 = load i16***, i16**** %ref_idx271, align 8
  %arrayidx272 = getelementptr inbounds i16**, i16*** %192, i64 0
  %193 = load i16**, i16*** %arrayidx272, align 8
  %arrayidx273 = getelementptr inbounds i16*, i16** %193, i64 %idxprom270
  %194 = load i16*, i16** %arrayidx273, align 8
  %arrayidx274 = getelementptr inbounds i16, i16* %194, i64 %idxprom268
  %195 = load i16, i16* %arrayidx274, align 2
  %conv275 = sext i16 %195 to i32
  %mul276 = mul nsw i32 %conv275, 2
  br label %cond.end.277

cond.end.277:                                     ; preds = %cond.false.266, %cond.true.256
  %cond278 = phi i32 [ %conv265, %cond.true.256 ], [ %mul276, %cond.false.266 ]
  br label %cond.end.280

cond.false.279:                                   ; preds = %cond.end.232
  br label %cond.end.280

cond.end.280:                                     ; preds = %cond.false.279, %cond.end.277
  %cond281 = phi i32 [ %cond278, %cond.end.277 ], [ -1, %cond.false.279 ]
  %conv282 = trunc i32 %cond281 to i16
  store i16 %conv282, i16* %fw_rFrameUL, align 2
  %available283 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upright, i32 0, i32 0
  %196 = load i32, i32* %available283, align 4
  %tobool284 = icmp ne i32 %196, 0
  br i1 %tobool284, label %cond.true.285, label %cond.false.327

cond.true.285:                                    ; preds = %cond.end.280
  %mb_addr286 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upright, i32 0, i32 1
  %197 = load i32, i32* %mb_addr286, align 4
  %idxprom287 = sext i32 %197 to i64
  %198 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data288 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %198, i32 0, i32 51
  %199 = load %struct.macroblock*, %struct.macroblock** %mb_data288, align 8
  %arrayidx289 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %199, i64 %idxprom287
  %mb_field290 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx289, i32 0, i32 22
  %200 = load i32, i32* %mb_field290, align 4
  %tobool291 = icmp ne i32 %200, 0
  br i1 %tobool291, label %cond.true.304, label %lor.lhs.false.292

lor.lhs.false.292:                                ; preds = %cond.true.285
  %pos_y293 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upright, i32 0, i32 5
  %201 = load i32, i32* %pos_y293, align 4
  %idxprom294 = sext i32 %201 to i64
  %pos_x295 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upright, i32 0, i32 4
  %202 = load i32, i32* %pos_x295, align 4
  %idxprom296 = sext i32 %202 to i64
  %203 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx297 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %203, i32 0, i32 32
  %204 = load i16***, i16**** %ref_idx297, align 8
  %arrayidx298 = getelementptr inbounds i16**, i16*** %204, i64 0
  %205 = load i16**, i16*** %arrayidx298, align 8
  %arrayidx299 = getelementptr inbounds i16*, i16** %205, i64 %idxprom296
  %206 = load i16*, i16** %arrayidx299, align 8
  %arrayidx300 = getelementptr inbounds i16, i16* %206, i64 %idxprom294
  %207 = load i16, i16* %arrayidx300, align 2
  %conv301 = sext i16 %207 to i32
  %cmp302 = icmp slt i32 %conv301, 0
  br i1 %cmp302, label %cond.true.304, label %cond.false.314

cond.true.304:                                    ; preds = %lor.lhs.false.292, %cond.true.285
  %pos_y305 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upright, i32 0, i32 5
  %208 = load i32, i32* %pos_y305, align 4
  %idxprom306 = sext i32 %208 to i64
  %pos_x307 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upright, i32 0, i32 4
  %209 = load i32, i32* %pos_x307, align 4
  %idxprom308 = sext i32 %209 to i64
  %210 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx309 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %210, i32 0, i32 32
  %211 = load i16***, i16**** %ref_idx309, align 8
  %arrayidx310 = getelementptr inbounds i16**, i16*** %211, i64 0
  %212 = load i16**, i16*** %arrayidx310, align 8
  %arrayidx311 = getelementptr inbounds i16*, i16** %212, i64 %idxprom308
  %213 = load i16*, i16** %arrayidx311, align 8
  %arrayidx312 = getelementptr inbounds i16, i16* %213, i64 %idxprom306
  %214 = load i16, i16* %arrayidx312, align 2
  %conv313 = sext i16 %214 to i32
  br label %cond.end.325

cond.false.314:                                   ; preds = %lor.lhs.false.292
  %pos_y315 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upright, i32 0, i32 5
  %215 = load i32, i32* %pos_y315, align 4
  %idxprom316 = sext i32 %215 to i64
  %pos_x317 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upright, i32 0, i32 4
  %216 = load i32, i32* %pos_x317, align 4
  %idxprom318 = sext i32 %216 to i64
  %217 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx319 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %217, i32 0, i32 32
  %218 = load i16***, i16**** %ref_idx319, align 8
  %arrayidx320 = getelementptr inbounds i16**, i16*** %218, i64 0
  %219 = load i16**, i16*** %arrayidx320, align 8
  %arrayidx321 = getelementptr inbounds i16*, i16** %219, i64 %idxprom318
  %220 = load i16*, i16** %arrayidx321, align 8
  %arrayidx322 = getelementptr inbounds i16, i16* %220, i64 %idxprom316
  %221 = load i16, i16* %arrayidx322, align 2
  %conv323 = sext i16 %221 to i32
  %mul324 = mul nsw i32 %conv323, 2
  br label %cond.end.325

cond.end.325:                                     ; preds = %cond.false.314, %cond.true.304
  %cond326 = phi i32 [ %conv313, %cond.true.304 ], [ %mul324, %cond.false.314 ]
  br label %cond.end.329

cond.false.327:                                   ; preds = %cond.end.280
  %222 = load i16, i16* %fw_rFrameUL, align 2
  %conv328 = sext i16 %222 to i32
  br label %cond.end.329

cond.end.329:                                     ; preds = %cond.false.327, %cond.end.325
  %cond330 = phi i32 [ %cond326, %cond.end.325 ], [ %conv328, %cond.false.327 ]
  %conv331 = trunc i32 %cond330 to i16
  store i16 %conv331, i16* %fw_rFrameUR, align 2
  %available332 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_left, i32 0, i32 0
  %223 = load i32, i32* %available332, align 4
  %tobool333 = icmp ne i32 %223, 0
  br i1 %tobool333, label %cond.true.334, label %cond.false.376

cond.true.334:                                    ; preds = %cond.end.329
  %mb_addr335 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_left, i32 0, i32 1
  %224 = load i32, i32* %mb_addr335, align 4
  %idxprom336 = sext i32 %224 to i64
  %225 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data337 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %225, i32 0, i32 51
  %226 = load %struct.macroblock*, %struct.macroblock** %mb_data337, align 8
  %arrayidx338 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %226, i64 %idxprom336
  %mb_field339 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx338, i32 0, i32 22
  %227 = load i32, i32* %mb_field339, align 4
  %tobool340 = icmp ne i32 %227, 0
  br i1 %tobool340, label %cond.true.353, label %lor.lhs.false.341

lor.lhs.false.341:                                ; preds = %cond.true.334
  %pos_y342 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_left, i32 0, i32 5
  %228 = load i32, i32* %pos_y342, align 4
  %idxprom343 = sext i32 %228 to i64
  %pos_x344 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_left, i32 0, i32 4
  %229 = load i32, i32* %pos_x344, align 4
  %idxprom345 = sext i32 %229 to i64
  %230 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx346 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %230, i32 0, i32 32
  %231 = load i16***, i16**** %ref_idx346, align 8
  %arrayidx347 = getelementptr inbounds i16**, i16*** %231, i64 1
  %232 = load i16**, i16*** %arrayidx347, align 8
  %arrayidx348 = getelementptr inbounds i16*, i16** %232, i64 %idxprom345
  %233 = load i16*, i16** %arrayidx348, align 8
  %arrayidx349 = getelementptr inbounds i16, i16* %233, i64 %idxprom343
  %234 = load i16, i16* %arrayidx349, align 2
  %conv350 = sext i16 %234 to i32
  %cmp351 = icmp slt i32 %conv350, 0
  br i1 %cmp351, label %cond.true.353, label %cond.false.363

cond.true.353:                                    ; preds = %lor.lhs.false.341, %cond.true.334
  %pos_y354 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_left, i32 0, i32 5
  %235 = load i32, i32* %pos_y354, align 4
  %idxprom355 = sext i32 %235 to i64
  %pos_x356 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_left, i32 0, i32 4
  %236 = load i32, i32* %pos_x356, align 4
  %idxprom357 = sext i32 %236 to i64
  %237 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx358 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %237, i32 0, i32 32
  %238 = load i16***, i16**** %ref_idx358, align 8
  %arrayidx359 = getelementptr inbounds i16**, i16*** %238, i64 1
  %239 = load i16**, i16*** %arrayidx359, align 8
  %arrayidx360 = getelementptr inbounds i16*, i16** %239, i64 %idxprom357
  %240 = load i16*, i16** %arrayidx360, align 8
  %arrayidx361 = getelementptr inbounds i16, i16* %240, i64 %idxprom355
  %241 = load i16, i16* %arrayidx361, align 2
  %conv362 = sext i16 %241 to i32
  br label %cond.end.374

cond.false.363:                                   ; preds = %lor.lhs.false.341
  %pos_y364 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_left, i32 0, i32 5
  %242 = load i32, i32* %pos_y364, align 4
  %idxprom365 = sext i32 %242 to i64
  %pos_x366 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_left, i32 0, i32 4
  %243 = load i32, i32* %pos_x366, align 4
  %idxprom367 = sext i32 %243 to i64
  %244 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx368 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %244, i32 0, i32 32
  %245 = load i16***, i16**** %ref_idx368, align 8
  %arrayidx369 = getelementptr inbounds i16**, i16*** %245, i64 1
  %246 = load i16**, i16*** %arrayidx369, align 8
  %arrayidx370 = getelementptr inbounds i16*, i16** %246, i64 %idxprom367
  %247 = load i16*, i16** %arrayidx370, align 8
  %arrayidx371 = getelementptr inbounds i16, i16* %247, i64 %idxprom365
  %248 = load i16, i16* %arrayidx371, align 2
  %conv372 = sext i16 %248 to i32
  %mul373 = mul nsw i32 %conv372, 2
  br label %cond.end.374

cond.end.374:                                     ; preds = %cond.false.363, %cond.true.353
  %cond375 = phi i32 [ %conv362, %cond.true.353 ], [ %mul373, %cond.false.363 ]
  br label %cond.end.377

cond.false.376:                                   ; preds = %cond.end.329
  br label %cond.end.377

cond.end.377:                                     ; preds = %cond.false.376, %cond.end.374
  %cond378 = phi i32 [ %cond375, %cond.end.374 ], [ -1, %cond.false.376 ]
  %conv379 = trunc i32 %cond378 to i16
  store i16 %conv379, i16* %bw_rFrameL, align 2
  %available380 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_up, i32 0, i32 0
  %249 = load i32, i32* %available380, align 4
  %tobool381 = icmp ne i32 %249, 0
  br i1 %tobool381, label %cond.true.382, label %cond.false.424

cond.true.382:                                    ; preds = %cond.end.377
  %mb_addr383 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_up, i32 0, i32 1
  %250 = load i32, i32* %mb_addr383, align 4
  %idxprom384 = sext i32 %250 to i64
  %251 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data385 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %251, i32 0, i32 51
  %252 = load %struct.macroblock*, %struct.macroblock** %mb_data385, align 8
  %arrayidx386 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %252, i64 %idxprom384
  %mb_field387 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx386, i32 0, i32 22
  %253 = load i32, i32* %mb_field387, align 4
  %tobool388 = icmp ne i32 %253, 0
  br i1 %tobool388, label %cond.true.401, label %lor.lhs.false.389

lor.lhs.false.389:                                ; preds = %cond.true.382
  %pos_y390 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_up, i32 0, i32 5
  %254 = load i32, i32* %pos_y390, align 4
  %idxprom391 = sext i32 %254 to i64
  %pos_x392 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_up, i32 0, i32 4
  %255 = load i32, i32* %pos_x392, align 4
  %idxprom393 = sext i32 %255 to i64
  %256 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx394 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %256, i32 0, i32 32
  %257 = load i16***, i16**** %ref_idx394, align 8
  %arrayidx395 = getelementptr inbounds i16**, i16*** %257, i64 1
  %258 = load i16**, i16*** %arrayidx395, align 8
  %arrayidx396 = getelementptr inbounds i16*, i16** %258, i64 %idxprom393
  %259 = load i16*, i16** %arrayidx396, align 8
  %arrayidx397 = getelementptr inbounds i16, i16* %259, i64 %idxprom391
  %260 = load i16, i16* %arrayidx397, align 2
  %conv398 = sext i16 %260 to i32
  %cmp399 = icmp slt i32 %conv398, 0
  br i1 %cmp399, label %cond.true.401, label %cond.false.411

cond.true.401:                                    ; preds = %lor.lhs.false.389, %cond.true.382
  %pos_y402 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_up, i32 0, i32 5
  %261 = load i32, i32* %pos_y402, align 4
  %idxprom403 = sext i32 %261 to i64
  %pos_x404 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_up, i32 0, i32 4
  %262 = load i32, i32* %pos_x404, align 4
  %idxprom405 = sext i32 %262 to i64
  %263 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx406 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %263, i32 0, i32 32
  %264 = load i16***, i16**** %ref_idx406, align 8
  %arrayidx407 = getelementptr inbounds i16**, i16*** %264, i64 1
  %265 = load i16**, i16*** %arrayidx407, align 8
  %arrayidx408 = getelementptr inbounds i16*, i16** %265, i64 %idxprom405
  %266 = load i16*, i16** %arrayidx408, align 8
  %arrayidx409 = getelementptr inbounds i16, i16* %266, i64 %idxprom403
  %267 = load i16, i16* %arrayidx409, align 2
  %conv410 = sext i16 %267 to i32
  br label %cond.end.422

cond.false.411:                                   ; preds = %lor.lhs.false.389
  %pos_y412 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_up, i32 0, i32 5
  %268 = load i32, i32* %pos_y412, align 4
  %idxprom413 = sext i32 %268 to i64
  %pos_x414 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_up, i32 0, i32 4
  %269 = load i32, i32* %pos_x414, align 4
  %idxprom415 = sext i32 %269 to i64
  %270 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx416 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %270, i32 0, i32 32
  %271 = load i16***, i16**** %ref_idx416, align 8
  %arrayidx417 = getelementptr inbounds i16**, i16*** %271, i64 1
  %272 = load i16**, i16*** %arrayidx417, align 8
  %arrayidx418 = getelementptr inbounds i16*, i16** %272, i64 %idxprom415
  %273 = load i16*, i16** %arrayidx418, align 8
  %arrayidx419 = getelementptr inbounds i16, i16* %273, i64 %idxprom413
  %274 = load i16, i16* %arrayidx419, align 2
  %conv420 = sext i16 %274 to i32
  %mul421 = mul nsw i32 %conv420, 2
  br label %cond.end.422

cond.end.422:                                     ; preds = %cond.false.411, %cond.true.401
  %cond423 = phi i32 [ %conv410, %cond.true.401 ], [ %mul421, %cond.false.411 ]
  br label %cond.end.425

cond.false.424:                                   ; preds = %cond.end.377
  br label %cond.end.425

cond.end.425:                                     ; preds = %cond.false.424, %cond.end.422
  %cond426 = phi i32 [ %cond423, %cond.end.422 ], [ -1, %cond.false.424 ]
  %conv427 = trunc i32 %cond426 to i16
  store i16 %conv427, i16* %bw_rFrameU, align 2
  %available428 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upleft, i32 0, i32 0
  %275 = load i32, i32* %available428, align 4
  %tobool429 = icmp ne i32 %275, 0
  br i1 %tobool429, label %cond.true.430, label %cond.false.472

cond.true.430:                                    ; preds = %cond.end.425
  %mb_addr431 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upleft, i32 0, i32 1
  %276 = load i32, i32* %mb_addr431, align 4
  %idxprom432 = sext i32 %276 to i64
  %277 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data433 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %277, i32 0, i32 51
  %278 = load %struct.macroblock*, %struct.macroblock** %mb_data433, align 8
  %arrayidx434 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %278, i64 %idxprom432
  %mb_field435 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx434, i32 0, i32 22
  %279 = load i32, i32* %mb_field435, align 4
  %tobool436 = icmp ne i32 %279, 0
  br i1 %tobool436, label %cond.true.449, label %lor.lhs.false.437

lor.lhs.false.437:                                ; preds = %cond.true.430
  %pos_y438 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upleft, i32 0, i32 5
  %280 = load i32, i32* %pos_y438, align 4
  %idxprom439 = sext i32 %280 to i64
  %pos_x440 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upleft, i32 0, i32 4
  %281 = load i32, i32* %pos_x440, align 4
  %idxprom441 = sext i32 %281 to i64
  %282 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx442 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %282, i32 0, i32 32
  %283 = load i16***, i16**** %ref_idx442, align 8
  %arrayidx443 = getelementptr inbounds i16**, i16*** %283, i64 1
  %284 = load i16**, i16*** %arrayidx443, align 8
  %arrayidx444 = getelementptr inbounds i16*, i16** %284, i64 %idxprom441
  %285 = load i16*, i16** %arrayidx444, align 8
  %arrayidx445 = getelementptr inbounds i16, i16* %285, i64 %idxprom439
  %286 = load i16, i16* %arrayidx445, align 2
  %conv446 = sext i16 %286 to i32
  %cmp447 = icmp slt i32 %conv446, 0
  br i1 %cmp447, label %cond.true.449, label %cond.false.459

cond.true.449:                                    ; preds = %lor.lhs.false.437, %cond.true.430
  %pos_y450 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upleft, i32 0, i32 5
  %287 = load i32, i32* %pos_y450, align 4
  %idxprom451 = sext i32 %287 to i64
  %pos_x452 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upleft, i32 0, i32 4
  %288 = load i32, i32* %pos_x452, align 4
  %idxprom453 = sext i32 %288 to i64
  %289 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx454 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %289, i32 0, i32 32
  %290 = load i16***, i16**** %ref_idx454, align 8
  %arrayidx455 = getelementptr inbounds i16**, i16*** %290, i64 1
  %291 = load i16**, i16*** %arrayidx455, align 8
  %arrayidx456 = getelementptr inbounds i16*, i16** %291, i64 %idxprom453
  %292 = load i16*, i16** %arrayidx456, align 8
  %arrayidx457 = getelementptr inbounds i16, i16* %292, i64 %idxprom451
  %293 = load i16, i16* %arrayidx457, align 2
  %conv458 = sext i16 %293 to i32
  br label %cond.end.470

cond.false.459:                                   ; preds = %lor.lhs.false.437
  %pos_y460 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upleft, i32 0, i32 5
  %294 = load i32, i32* %pos_y460, align 4
  %idxprom461 = sext i32 %294 to i64
  %pos_x462 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upleft, i32 0, i32 4
  %295 = load i32, i32* %pos_x462, align 4
  %idxprom463 = sext i32 %295 to i64
  %296 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx464 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %296, i32 0, i32 32
  %297 = load i16***, i16**** %ref_idx464, align 8
  %arrayidx465 = getelementptr inbounds i16**, i16*** %297, i64 1
  %298 = load i16**, i16*** %arrayidx465, align 8
  %arrayidx466 = getelementptr inbounds i16*, i16** %298, i64 %idxprom463
  %299 = load i16*, i16** %arrayidx466, align 8
  %arrayidx467 = getelementptr inbounds i16, i16* %299, i64 %idxprom461
  %300 = load i16, i16* %arrayidx467, align 2
  %conv468 = sext i16 %300 to i32
  %mul469 = mul nsw i32 %conv468, 2
  br label %cond.end.470

cond.end.470:                                     ; preds = %cond.false.459, %cond.true.449
  %cond471 = phi i32 [ %conv458, %cond.true.449 ], [ %mul469, %cond.false.459 ]
  br label %cond.end.473

cond.false.472:                                   ; preds = %cond.end.425
  br label %cond.end.473

cond.end.473:                                     ; preds = %cond.false.472, %cond.end.470
  %cond474 = phi i32 [ %cond471, %cond.end.470 ], [ -1, %cond.false.472 ]
  %conv475 = trunc i32 %cond474 to i16
  store i16 %conv475, i16* %bw_rFrameUL, align 2
  %available476 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upright, i32 0, i32 0
  %301 = load i32, i32* %available476, align 4
  %tobool477 = icmp ne i32 %301, 0
  br i1 %tobool477, label %cond.true.478, label %cond.false.520

cond.true.478:                                    ; preds = %cond.end.473
  %mb_addr479 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upright, i32 0, i32 1
  %302 = load i32, i32* %mb_addr479, align 4
  %idxprom480 = sext i32 %302 to i64
  %303 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data481 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %303, i32 0, i32 51
  %304 = load %struct.macroblock*, %struct.macroblock** %mb_data481, align 8
  %arrayidx482 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %304, i64 %idxprom480
  %mb_field483 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx482, i32 0, i32 22
  %305 = load i32, i32* %mb_field483, align 4
  %tobool484 = icmp ne i32 %305, 0
  br i1 %tobool484, label %cond.true.497, label %lor.lhs.false.485

lor.lhs.false.485:                                ; preds = %cond.true.478
  %pos_y486 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upright, i32 0, i32 5
  %306 = load i32, i32* %pos_y486, align 4
  %idxprom487 = sext i32 %306 to i64
  %pos_x488 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upright, i32 0, i32 4
  %307 = load i32, i32* %pos_x488, align 4
  %idxprom489 = sext i32 %307 to i64
  %308 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx490 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %308, i32 0, i32 32
  %309 = load i16***, i16**** %ref_idx490, align 8
  %arrayidx491 = getelementptr inbounds i16**, i16*** %309, i64 1
  %310 = load i16**, i16*** %arrayidx491, align 8
  %arrayidx492 = getelementptr inbounds i16*, i16** %310, i64 %idxprom489
  %311 = load i16*, i16** %arrayidx492, align 8
  %arrayidx493 = getelementptr inbounds i16, i16* %311, i64 %idxprom487
  %312 = load i16, i16* %arrayidx493, align 2
  %conv494 = sext i16 %312 to i32
  %cmp495 = icmp slt i32 %conv494, 0
  br i1 %cmp495, label %cond.true.497, label %cond.false.507

cond.true.497:                                    ; preds = %lor.lhs.false.485, %cond.true.478
  %pos_y498 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upright, i32 0, i32 5
  %313 = load i32, i32* %pos_y498, align 4
  %idxprom499 = sext i32 %313 to i64
  %pos_x500 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upright, i32 0, i32 4
  %314 = load i32, i32* %pos_x500, align 4
  %idxprom501 = sext i32 %314 to i64
  %315 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx502 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %315, i32 0, i32 32
  %316 = load i16***, i16**** %ref_idx502, align 8
  %arrayidx503 = getelementptr inbounds i16**, i16*** %316, i64 1
  %317 = load i16**, i16*** %arrayidx503, align 8
  %arrayidx504 = getelementptr inbounds i16*, i16** %317, i64 %idxprom501
  %318 = load i16*, i16** %arrayidx504, align 8
  %arrayidx505 = getelementptr inbounds i16, i16* %318, i64 %idxprom499
  %319 = load i16, i16* %arrayidx505, align 2
  %conv506 = sext i16 %319 to i32
  br label %cond.end.518

cond.false.507:                                   ; preds = %lor.lhs.false.485
  %pos_y508 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upright, i32 0, i32 5
  %320 = load i32, i32* %pos_y508, align 4
  %idxprom509 = sext i32 %320 to i64
  %pos_x510 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upright, i32 0, i32 4
  %321 = load i32, i32* %pos_x510, align 4
  %idxprom511 = sext i32 %321 to i64
  %322 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx512 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %322, i32 0, i32 32
  %323 = load i16***, i16**** %ref_idx512, align 8
  %arrayidx513 = getelementptr inbounds i16**, i16*** %323, i64 1
  %324 = load i16**, i16*** %arrayidx513, align 8
  %arrayidx514 = getelementptr inbounds i16*, i16** %324, i64 %idxprom511
  %325 = load i16*, i16** %arrayidx514, align 8
  %arrayidx515 = getelementptr inbounds i16, i16* %325, i64 %idxprom509
  %326 = load i16, i16* %arrayidx515, align 2
  %conv516 = sext i16 %326 to i32
  %mul517 = mul nsw i32 %conv516, 2
  br label %cond.end.518

cond.end.518:                                     ; preds = %cond.false.507, %cond.true.497
  %cond519 = phi i32 [ %conv506, %cond.true.497 ], [ %mul517, %cond.false.507 ]
  br label %cond.end.522

cond.false.520:                                   ; preds = %cond.end.473
  %327 = load i16, i16* %bw_rFrameUL, align 2
  %conv521 = sext i16 %327 to i32
  br label %cond.end.522

cond.end.522:                                     ; preds = %cond.false.520, %cond.end.518
  %cond523 = phi i32 [ %cond519, %cond.end.518 ], [ %conv521, %cond.false.520 ]
  %conv524 = trunc i32 %cond523 to i16
  store i16 %conv524, i16* %bw_rFrameUR, align 2
  br label %if.end.911

if.else.525:                                      ; preds = %if.else.139
  %available526 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_left, i32 0, i32 0
  %328 = load i32, i32* %available526, align 4
  %tobool527 = icmp ne i32 %328, 0
  br i1 %tobool527, label %cond.true.528, label %cond.false.569

cond.true.528:                                    ; preds = %if.else.525
  %mb_addr529 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_left, i32 0, i32 1
  %329 = load i32, i32* %mb_addr529, align 4
  %idxprom530 = sext i32 %329 to i64
  %330 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data531 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %330, i32 0, i32 51
  %331 = load %struct.macroblock*, %struct.macroblock** %mb_data531, align 8
  %arrayidx532 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %331, i64 %idxprom530
  %mb_field533 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx532, i32 0, i32 22
  %332 = load i32, i32* %mb_field533, align 4
  %tobool534 = icmp ne i32 %332, 0
  br i1 %tobool534, label %cond.true.547, label %lor.lhs.false.535

lor.lhs.false.535:                                ; preds = %cond.true.528
  %pos_y536 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_left, i32 0, i32 5
  %333 = load i32, i32* %pos_y536, align 4
  %idxprom537 = sext i32 %333 to i64
  %pos_x538 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_left, i32 0, i32 4
  %334 = load i32, i32* %pos_x538, align 4
  %idxprom539 = sext i32 %334 to i64
  %335 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx540 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %335, i32 0, i32 32
  %336 = load i16***, i16**** %ref_idx540, align 8
  %arrayidx541 = getelementptr inbounds i16**, i16*** %336, i64 0
  %337 = load i16**, i16*** %arrayidx541, align 8
  %arrayidx542 = getelementptr inbounds i16*, i16** %337, i64 %idxprom539
  %338 = load i16*, i16** %arrayidx542, align 8
  %arrayidx543 = getelementptr inbounds i16, i16* %338, i64 %idxprom537
  %339 = load i16, i16* %arrayidx543, align 2
  %conv544 = sext i16 %339 to i32
  %cmp545 = icmp slt i32 %conv544, 0
  br i1 %cmp545, label %cond.true.547, label %cond.false.557

cond.true.547:                                    ; preds = %lor.lhs.false.535, %cond.true.528
  %pos_y548 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_left, i32 0, i32 5
  %340 = load i32, i32* %pos_y548, align 4
  %idxprom549 = sext i32 %340 to i64
  %pos_x550 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_left, i32 0, i32 4
  %341 = load i32, i32* %pos_x550, align 4
  %idxprom551 = sext i32 %341 to i64
  %342 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx552 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %342, i32 0, i32 32
  %343 = load i16***, i16**** %ref_idx552, align 8
  %arrayidx553 = getelementptr inbounds i16**, i16*** %343, i64 0
  %344 = load i16**, i16*** %arrayidx553, align 8
  %arrayidx554 = getelementptr inbounds i16*, i16** %344, i64 %idxprom551
  %345 = load i16*, i16** %arrayidx554, align 8
  %arrayidx555 = getelementptr inbounds i16, i16* %345, i64 %idxprom549
  %346 = load i16, i16* %arrayidx555, align 2
  %conv556 = sext i16 %346 to i32
  %shr = ashr i32 %conv556, 1
  br label %cond.end.567

cond.false.557:                                   ; preds = %lor.lhs.false.535
  %pos_y558 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_left, i32 0, i32 5
  %347 = load i32, i32* %pos_y558, align 4
  %idxprom559 = sext i32 %347 to i64
  %pos_x560 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_left, i32 0, i32 4
  %348 = load i32, i32* %pos_x560, align 4
  %idxprom561 = sext i32 %348 to i64
  %349 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx562 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %349, i32 0, i32 32
  %350 = load i16***, i16**** %ref_idx562, align 8
  %arrayidx563 = getelementptr inbounds i16**, i16*** %350, i64 0
  %351 = load i16**, i16*** %arrayidx563, align 8
  %arrayidx564 = getelementptr inbounds i16*, i16** %351, i64 %idxprom561
  %352 = load i16*, i16** %arrayidx564, align 8
  %arrayidx565 = getelementptr inbounds i16, i16* %352, i64 %idxprom559
  %353 = load i16, i16* %arrayidx565, align 2
  %conv566 = sext i16 %353 to i32
  br label %cond.end.567

cond.end.567:                                     ; preds = %cond.false.557, %cond.true.547
  %cond568 = phi i32 [ %shr, %cond.true.547 ], [ %conv566, %cond.false.557 ]
  br label %cond.end.570

cond.false.569:                                   ; preds = %if.else.525
  br label %cond.end.570

cond.end.570:                                     ; preds = %cond.false.569, %cond.end.567
  %cond571 = phi i32 [ %cond568, %cond.end.567 ], [ -1, %cond.false.569 ]
  %conv572 = trunc i32 %cond571 to i16
  store i16 %conv572, i16* %fw_rFrameL, align 2
  %available573 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_up, i32 0, i32 0
  %354 = load i32, i32* %available573, align 4
  %tobool574 = icmp ne i32 %354, 0
  br i1 %tobool574, label %cond.true.575, label %cond.false.617

cond.true.575:                                    ; preds = %cond.end.570
  %mb_addr576 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_up, i32 0, i32 1
  %355 = load i32, i32* %mb_addr576, align 4
  %idxprom577 = sext i32 %355 to i64
  %356 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data578 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %356, i32 0, i32 51
  %357 = load %struct.macroblock*, %struct.macroblock** %mb_data578, align 8
  %arrayidx579 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %357, i64 %idxprom577
  %mb_field580 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx579, i32 0, i32 22
  %358 = load i32, i32* %mb_field580, align 4
  %tobool581 = icmp ne i32 %358, 0
  br i1 %tobool581, label %cond.true.594, label %lor.lhs.false.582

lor.lhs.false.582:                                ; preds = %cond.true.575
  %pos_y583 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_up, i32 0, i32 5
  %359 = load i32, i32* %pos_y583, align 4
  %idxprom584 = sext i32 %359 to i64
  %pos_x585 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_up, i32 0, i32 4
  %360 = load i32, i32* %pos_x585, align 4
  %idxprom586 = sext i32 %360 to i64
  %361 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx587 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %361, i32 0, i32 32
  %362 = load i16***, i16**** %ref_idx587, align 8
  %arrayidx588 = getelementptr inbounds i16**, i16*** %362, i64 0
  %363 = load i16**, i16*** %arrayidx588, align 8
  %arrayidx589 = getelementptr inbounds i16*, i16** %363, i64 %idxprom586
  %364 = load i16*, i16** %arrayidx589, align 8
  %arrayidx590 = getelementptr inbounds i16, i16* %364, i64 %idxprom584
  %365 = load i16, i16* %arrayidx590, align 2
  %conv591 = sext i16 %365 to i32
  %cmp592 = icmp slt i32 %conv591, 0
  br i1 %cmp592, label %cond.true.594, label %cond.false.605

cond.true.594:                                    ; preds = %lor.lhs.false.582, %cond.true.575
  %pos_y595 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_up, i32 0, i32 5
  %366 = load i32, i32* %pos_y595, align 4
  %idxprom596 = sext i32 %366 to i64
  %pos_x597 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_up, i32 0, i32 4
  %367 = load i32, i32* %pos_x597, align 4
  %idxprom598 = sext i32 %367 to i64
  %368 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx599 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %368, i32 0, i32 32
  %369 = load i16***, i16**** %ref_idx599, align 8
  %arrayidx600 = getelementptr inbounds i16**, i16*** %369, i64 0
  %370 = load i16**, i16*** %arrayidx600, align 8
  %arrayidx601 = getelementptr inbounds i16*, i16** %370, i64 %idxprom598
  %371 = load i16*, i16** %arrayidx601, align 8
  %arrayidx602 = getelementptr inbounds i16, i16* %371, i64 %idxprom596
  %372 = load i16, i16* %arrayidx602, align 2
  %conv603 = sext i16 %372 to i32
  %shr604 = ashr i32 %conv603, 1
  br label %cond.end.615

cond.false.605:                                   ; preds = %lor.lhs.false.582
  %pos_y606 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_up, i32 0, i32 5
  %373 = load i32, i32* %pos_y606, align 4
  %idxprom607 = sext i32 %373 to i64
  %pos_x608 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_up, i32 0, i32 4
  %374 = load i32, i32* %pos_x608, align 4
  %idxprom609 = sext i32 %374 to i64
  %375 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx610 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %375, i32 0, i32 32
  %376 = load i16***, i16**** %ref_idx610, align 8
  %arrayidx611 = getelementptr inbounds i16**, i16*** %376, i64 0
  %377 = load i16**, i16*** %arrayidx611, align 8
  %arrayidx612 = getelementptr inbounds i16*, i16** %377, i64 %idxprom609
  %378 = load i16*, i16** %arrayidx612, align 8
  %arrayidx613 = getelementptr inbounds i16, i16* %378, i64 %idxprom607
  %379 = load i16, i16* %arrayidx613, align 2
  %conv614 = sext i16 %379 to i32
  br label %cond.end.615

cond.end.615:                                     ; preds = %cond.false.605, %cond.true.594
  %cond616 = phi i32 [ %shr604, %cond.true.594 ], [ %conv614, %cond.false.605 ]
  br label %cond.end.618

cond.false.617:                                   ; preds = %cond.end.570
  br label %cond.end.618

cond.end.618:                                     ; preds = %cond.false.617, %cond.end.615
  %cond619 = phi i32 [ %cond616, %cond.end.615 ], [ -1, %cond.false.617 ]
  %conv620 = trunc i32 %cond619 to i16
  store i16 %conv620, i16* %fw_rFrameU, align 2
  %available621 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upleft, i32 0, i32 0
  %380 = load i32, i32* %available621, align 4
  %tobool622 = icmp ne i32 %380, 0
  br i1 %tobool622, label %cond.true.623, label %cond.false.665

cond.true.623:                                    ; preds = %cond.end.618
  %mb_addr624 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upleft, i32 0, i32 1
  %381 = load i32, i32* %mb_addr624, align 4
  %idxprom625 = sext i32 %381 to i64
  %382 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data626 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %382, i32 0, i32 51
  %383 = load %struct.macroblock*, %struct.macroblock** %mb_data626, align 8
  %arrayidx627 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %383, i64 %idxprom625
  %mb_field628 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx627, i32 0, i32 22
  %384 = load i32, i32* %mb_field628, align 4
  %tobool629 = icmp ne i32 %384, 0
  br i1 %tobool629, label %cond.true.642, label %lor.lhs.false.630

lor.lhs.false.630:                                ; preds = %cond.true.623
  %pos_y631 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upleft, i32 0, i32 5
  %385 = load i32, i32* %pos_y631, align 4
  %idxprom632 = sext i32 %385 to i64
  %pos_x633 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upleft, i32 0, i32 4
  %386 = load i32, i32* %pos_x633, align 4
  %idxprom634 = sext i32 %386 to i64
  %387 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx635 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %387, i32 0, i32 32
  %388 = load i16***, i16**** %ref_idx635, align 8
  %arrayidx636 = getelementptr inbounds i16**, i16*** %388, i64 0
  %389 = load i16**, i16*** %arrayidx636, align 8
  %arrayidx637 = getelementptr inbounds i16*, i16** %389, i64 %idxprom634
  %390 = load i16*, i16** %arrayidx637, align 8
  %arrayidx638 = getelementptr inbounds i16, i16* %390, i64 %idxprom632
  %391 = load i16, i16* %arrayidx638, align 2
  %conv639 = sext i16 %391 to i32
  %cmp640 = icmp slt i32 %conv639, 0
  br i1 %cmp640, label %cond.true.642, label %cond.false.653

cond.true.642:                                    ; preds = %lor.lhs.false.630, %cond.true.623
  %pos_y643 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upleft, i32 0, i32 5
  %392 = load i32, i32* %pos_y643, align 4
  %idxprom644 = sext i32 %392 to i64
  %pos_x645 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upleft, i32 0, i32 4
  %393 = load i32, i32* %pos_x645, align 4
  %idxprom646 = sext i32 %393 to i64
  %394 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx647 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %394, i32 0, i32 32
  %395 = load i16***, i16**** %ref_idx647, align 8
  %arrayidx648 = getelementptr inbounds i16**, i16*** %395, i64 0
  %396 = load i16**, i16*** %arrayidx648, align 8
  %arrayidx649 = getelementptr inbounds i16*, i16** %396, i64 %idxprom646
  %397 = load i16*, i16** %arrayidx649, align 8
  %arrayidx650 = getelementptr inbounds i16, i16* %397, i64 %idxprom644
  %398 = load i16, i16* %arrayidx650, align 2
  %conv651 = sext i16 %398 to i32
  %shr652 = ashr i32 %conv651, 1
  br label %cond.end.663

cond.false.653:                                   ; preds = %lor.lhs.false.630
  %pos_y654 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upleft, i32 0, i32 5
  %399 = load i32, i32* %pos_y654, align 4
  %idxprom655 = sext i32 %399 to i64
  %pos_x656 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upleft, i32 0, i32 4
  %400 = load i32, i32* %pos_x656, align 4
  %idxprom657 = sext i32 %400 to i64
  %401 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx658 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %401, i32 0, i32 32
  %402 = load i16***, i16**** %ref_idx658, align 8
  %arrayidx659 = getelementptr inbounds i16**, i16*** %402, i64 0
  %403 = load i16**, i16*** %arrayidx659, align 8
  %arrayidx660 = getelementptr inbounds i16*, i16** %403, i64 %idxprom657
  %404 = load i16*, i16** %arrayidx660, align 8
  %arrayidx661 = getelementptr inbounds i16, i16* %404, i64 %idxprom655
  %405 = load i16, i16* %arrayidx661, align 2
  %conv662 = sext i16 %405 to i32
  br label %cond.end.663

cond.end.663:                                     ; preds = %cond.false.653, %cond.true.642
  %cond664 = phi i32 [ %shr652, %cond.true.642 ], [ %conv662, %cond.false.653 ]
  br label %cond.end.666

cond.false.665:                                   ; preds = %cond.end.618
  br label %cond.end.666

cond.end.666:                                     ; preds = %cond.false.665, %cond.end.663
  %cond667 = phi i32 [ %cond664, %cond.end.663 ], [ -1, %cond.false.665 ]
  %conv668 = trunc i32 %cond667 to i16
  store i16 %conv668, i16* %fw_rFrameUL, align 2
  %available669 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upright, i32 0, i32 0
  %406 = load i32, i32* %available669, align 4
  %tobool670 = icmp ne i32 %406, 0
  br i1 %tobool670, label %cond.true.671, label %cond.false.713

cond.true.671:                                    ; preds = %cond.end.666
  %mb_addr672 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upright, i32 0, i32 1
  %407 = load i32, i32* %mb_addr672, align 4
  %idxprom673 = sext i32 %407 to i64
  %408 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data674 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %408, i32 0, i32 51
  %409 = load %struct.macroblock*, %struct.macroblock** %mb_data674, align 8
  %arrayidx675 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %409, i64 %idxprom673
  %mb_field676 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx675, i32 0, i32 22
  %410 = load i32, i32* %mb_field676, align 4
  %tobool677 = icmp ne i32 %410, 0
  br i1 %tobool677, label %cond.true.690, label %lor.lhs.false.678

lor.lhs.false.678:                                ; preds = %cond.true.671
  %pos_y679 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upright, i32 0, i32 5
  %411 = load i32, i32* %pos_y679, align 4
  %idxprom680 = sext i32 %411 to i64
  %pos_x681 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upright, i32 0, i32 4
  %412 = load i32, i32* %pos_x681, align 4
  %idxprom682 = sext i32 %412 to i64
  %413 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx683 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %413, i32 0, i32 32
  %414 = load i16***, i16**** %ref_idx683, align 8
  %arrayidx684 = getelementptr inbounds i16**, i16*** %414, i64 0
  %415 = load i16**, i16*** %arrayidx684, align 8
  %arrayidx685 = getelementptr inbounds i16*, i16** %415, i64 %idxprom682
  %416 = load i16*, i16** %arrayidx685, align 8
  %arrayidx686 = getelementptr inbounds i16, i16* %416, i64 %idxprom680
  %417 = load i16, i16* %arrayidx686, align 2
  %conv687 = sext i16 %417 to i32
  %cmp688 = icmp slt i32 %conv687, 0
  br i1 %cmp688, label %cond.true.690, label %cond.false.701

cond.true.690:                                    ; preds = %lor.lhs.false.678, %cond.true.671
  %pos_y691 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upright, i32 0, i32 5
  %418 = load i32, i32* %pos_y691, align 4
  %idxprom692 = sext i32 %418 to i64
  %pos_x693 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upright, i32 0, i32 4
  %419 = load i32, i32* %pos_x693, align 4
  %idxprom694 = sext i32 %419 to i64
  %420 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx695 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %420, i32 0, i32 32
  %421 = load i16***, i16**** %ref_idx695, align 8
  %arrayidx696 = getelementptr inbounds i16**, i16*** %421, i64 0
  %422 = load i16**, i16*** %arrayidx696, align 8
  %arrayidx697 = getelementptr inbounds i16*, i16** %422, i64 %idxprom694
  %423 = load i16*, i16** %arrayidx697, align 8
  %arrayidx698 = getelementptr inbounds i16, i16* %423, i64 %idxprom692
  %424 = load i16, i16* %arrayidx698, align 2
  %conv699 = sext i16 %424 to i32
  %shr700 = ashr i32 %conv699, 1
  br label %cond.end.711

cond.false.701:                                   ; preds = %lor.lhs.false.678
  %pos_y702 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upright, i32 0, i32 5
  %425 = load i32, i32* %pos_y702, align 4
  %idxprom703 = sext i32 %425 to i64
  %pos_x704 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upright, i32 0, i32 4
  %426 = load i32, i32* %pos_x704, align 4
  %idxprom705 = sext i32 %426 to i64
  %427 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx706 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %427, i32 0, i32 32
  %428 = load i16***, i16**** %ref_idx706, align 8
  %arrayidx707 = getelementptr inbounds i16**, i16*** %428, i64 0
  %429 = load i16**, i16*** %arrayidx707, align 8
  %arrayidx708 = getelementptr inbounds i16*, i16** %429, i64 %idxprom705
  %430 = load i16*, i16** %arrayidx708, align 8
  %arrayidx709 = getelementptr inbounds i16, i16* %430, i64 %idxprom703
  %431 = load i16, i16* %arrayidx709, align 2
  %conv710 = sext i16 %431 to i32
  br label %cond.end.711

cond.end.711:                                     ; preds = %cond.false.701, %cond.true.690
  %cond712 = phi i32 [ %shr700, %cond.true.690 ], [ %conv710, %cond.false.701 ]
  br label %cond.end.715

cond.false.713:                                   ; preds = %cond.end.666
  %432 = load i16, i16* %fw_rFrameUL, align 2
  %conv714 = sext i16 %432 to i32
  br label %cond.end.715

cond.end.715:                                     ; preds = %cond.false.713, %cond.end.711
  %cond716 = phi i32 [ %cond712, %cond.end.711 ], [ %conv714, %cond.false.713 ]
  %conv717 = trunc i32 %cond716 to i16
  store i16 %conv717, i16* %fw_rFrameUR, align 2
  %available718 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_left, i32 0, i32 0
  %433 = load i32, i32* %available718, align 4
  %tobool719 = icmp ne i32 %433, 0
  br i1 %tobool719, label %cond.true.720, label %cond.false.762

cond.true.720:                                    ; preds = %cond.end.715
  %mb_addr721 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_left, i32 0, i32 1
  %434 = load i32, i32* %mb_addr721, align 4
  %idxprom722 = sext i32 %434 to i64
  %435 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data723 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %435, i32 0, i32 51
  %436 = load %struct.macroblock*, %struct.macroblock** %mb_data723, align 8
  %arrayidx724 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %436, i64 %idxprom722
  %mb_field725 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx724, i32 0, i32 22
  %437 = load i32, i32* %mb_field725, align 4
  %tobool726 = icmp ne i32 %437, 0
  br i1 %tobool726, label %cond.true.739, label %lor.lhs.false.727

lor.lhs.false.727:                                ; preds = %cond.true.720
  %pos_y728 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_left, i32 0, i32 5
  %438 = load i32, i32* %pos_y728, align 4
  %idxprom729 = sext i32 %438 to i64
  %pos_x730 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_left, i32 0, i32 4
  %439 = load i32, i32* %pos_x730, align 4
  %idxprom731 = sext i32 %439 to i64
  %440 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx732 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %440, i32 0, i32 32
  %441 = load i16***, i16**** %ref_idx732, align 8
  %arrayidx733 = getelementptr inbounds i16**, i16*** %441, i64 1
  %442 = load i16**, i16*** %arrayidx733, align 8
  %arrayidx734 = getelementptr inbounds i16*, i16** %442, i64 %idxprom731
  %443 = load i16*, i16** %arrayidx734, align 8
  %arrayidx735 = getelementptr inbounds i16, i16* %443, i64 %idxprom729
  %444 = load i16, i16* %arrayidx735, align 2
  %conv736 = sext i16 %444 to i32
  %cmp737 = icmp slt i32 %conv736, 0
  br i1 %cmp737, label %cond.true.739, label %cond.false.750

cond.true.739:                                    ; preds = %lor.lhs.false.727, %cond.true.720
  %pos_y740 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_left, i32 0, i32 5
  %445 = load i32, i32* %pos_y740, align 4
  %idxprom741 = sext i32 %445 to i64
  %pos_x742 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_left, i32 0, i32 4
  %446 = load i32, i32* %pos_x742, align 4
  %idxprom743 = sext i32 %446 to i64
  %447 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx744 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %447, i32 0, i32 32
  %448 = load i16***, i16**** %ref_idx744, align 8
  %arrayidx745 = getelementptr inbounds i16**, i16*** %448, i64 1
  %449 = load i16**, i16*** %arrayidx745, align 8
  %arrayidx746 = getelementptr inbounds i16*, i16** %449, i64 %idxprom743
  %450 = load i16*, i16** %arrayidx746, align 8
  %arrayidx747 = getelementptr inbounds i16, i16* %450, i64 %idxprom741
  %451 = load i16, i16* %arrayidx747, align 2
  %conv748 = sext i16 %451 to i32
  %shr749 = ashr i32 %conv748, 1
  br label %cond.end.760

cond.false.750:                                   ; preds = %lor.lhs.false.727
  %pos_y751 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_left, i32 0, i32 5
  %452 = load i32, i32* %pos_y751, align 4
  %idxprom752 = sext i32 %452 to i64
  %pos_x753 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_left, i32 0, i32 4
  %453 = load i32, i32* %pos_x753, align 4
  %idxprom754 = sext i32 %453 to i64
  %454 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx755 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %454, i32 0, i32 32
  %455 = load i16***, i16**** %ref_idx755, align 8
  %arrayidx756 = getelementptr inbounds i16**, i16*** %455, i64 1
  %456 = load i16**, i16*** %arrayidx756, align 8
  %arrayidx757 = getelementptr inbounds i16*, i16** %456, i64 %idxprom754
  %457 = load i16*, i16** %arrayidx757, align 8
  %arrayidx758 = getelementptr inbounds i16, i16* %457, i64 %idxprom752
  %458 = load i16, i16* %arrayidx758, align 2
  %conv759 = sext i16 %458 to i32
  br label %cond.end.760

cond.end.760:                                     ; preds = %cond.false.750, %cond.true.739
  %cond761 = phi i32 [ %shr749, %cond.true.739 ], [ %conv759, %cond.false.750 ]
  br label %cond.end.763

cond.false.762:                                   ; preds = %cond.end.715
  br label %cond.end.763

cond.end.763:                                     ; preds = %cond.false.762, %cond.end.760
  %cond764 = phi i32 [ %cond761, %cond.end.760 ], [ -1, %cond.false.762 ]
  %conv765 = trunc i32 %cond764 to i16
  store i16 %conv765, i16* %bw_rFrameL, align 2
  %available766 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_up, i32 0, i32 0
  %459 = load i32, i32* %available766, align 4
  %tobool767 = icmp ne i32 %459, 0
  br i1 %tobool767, label %cond.true.768, label %cond.false.810

cond.true.768:                                    ; preds = %cond.end.763
  %mb_addr769 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_up, i32 0, i32 1
  %460 = load i32, i32* %mb_addr769, align 4
  %idxprom770 = sext i32 %460 to i64
  %461 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data771 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %461, i32 0, i32 51
  %462 = load %struct.macroblock*, %struct.macroblock** %mb_data771, align 8
  %arrayidx772 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %462, i64 %idxprom770
  %mb_field773 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx772, i32 0, i32 22
  %463 = load i32, i32* %mb_field773, align 4
  %tobool774 = icmp ne i32 %463, 0
  br i1 %tobool774, label %cond.true.787, label %lor.lhs.false.775

lor.lhs.false.775:                                ; preds = %cond.true.768
  %pos_y776 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_up, i32 0, i32 5
  %464 = load i32, i32* %pos_y776, align 4
  %idxprom777 = sext i32 %464 to i64
  %pos_x778 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_up, i32 0, i32 4
  %465 = load i32, i32* %pos_x778, align 4
  %idxprom779 = sext i32 %465 to i64
  %466 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx780 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %466, i32 0, i32 32
  %467 = load i16***, i16**** %ref_idx780, align 8
  %arrayidx781 = getelementptr inbounds i16**, i16*** %467, i64 1
  %468 = load i16**, i16*** %arrayidx781, align 8
  %arrayidx782 = getelementptr inbounds i16*, i16** %468, i64 %idxprom779
  %469 = load i16*, i16** %arrayidx782, align 8
  %arrayidx783 = getelementptr inbounds i16, i16* %469, i64 %idxprom777
  %470 = load i16, i16* %arrayidx783, align 2
  %conv784 = sext i16 %470 to i32
  %cmp785 = icmp slt i32 %conv784, 0
  br i1 %cmp785, label %cond.true.787, label %cond.false.798

cond.true.787:                                    ; preds = %lor.lhs.false.775, %cond.true.768
  %pos_y788 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_up, i32 0, i32 5
  %471 = load i32, i32* %pos_y788, align 4
  %idxprom789 = sext i32 %471 to i64
  %pos_x790 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_up, i32 0, i32 4
  %472 = load i32, i32* %pos_x790, align 4
  %idxprom791 = sext i32 %472 to i64
  %473 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx792 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %473, i32 0, i32 32
  %474 = load i16***, i16**** %ref_idx792, align 8
  %arrayidx793 = getelementptr inbounds i16**, i16*** %474, i64 1
  %475 = load i16**, i16*** %arrayidx793, align 8
  %arrayidx794 = getelementptr inbounds i16*, i16** %475, i64 %idxprom791
  %476 = load i16*, i16** %arrayidx794, align 8
  %arrayidx795 = getelementptr inbounds i16, i16* %476, i64 %idxprom789
  %477 = load i16, i16* %arrayidx795, align 2
  %conv796 = sext i16 %477 to i32
  %shr797 = ashr i32 %conv796, 1
  br label %cond.end.808

cond.false.798:                                   ; preds = %lor.lhs.false.775
  %pos_y799 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_up, i32 0, i32 5
  %478 = load i32, i32* %pos_y799, align 4
  %idxprom800 = sext i32 %478 to i64
  %pos_x801 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_up, i32 0, i32 4
  %479 = load i32, i32* %pos_x801, align 4
  %idxprom802 = sext i32 %479 to i64
  %480 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx803 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %480, i32 0, i32 32
  %481 = load i16***, i16**** %ref_idx803, align 8
  %arrayidx804 = getelementptr inbounds i16**, i16*** %481, i64 1
  %482 = load i16**, i16*** %arrayidx804, align 8
  %arrayidx805 = getelementptr inbounds i16*, i16** %482, i64 %idxprom802
  %483 = load i16*, i16** %arrayidx805, align 8
  %arrayidx806 = getelementptr inbounds i16, i16* %483, i64 %idxprom800
  %484 = load i16, i16* %arrayidx806, align 2
  %conv807 = sext i16 %484 to i32
  br label %cond.end.808

cond.end.808:                                     ; preds = %cond.false.798, %cond.true.787
  %cond809 = phi i32 [ %shr797, %cond.true.787 ], [ %conv807, %cond.false.798 ]
  br label %cond.end.811

cond.false.810:                                   ; preds = %cond.end.763
  br label %cond.end.811

cond.end.811:                                     ; preds = %cond.false.810, %cond.end.808
  %cond812 = phi i32 [ %cond809, %cond.end.808 ], [ -1, %cond.false.810 ]
  %conv813 = trunc i32 %cond812 to i16
  store i16 %conv813, i16* %bw_rFrameU, align 2
  %available814 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upleft, i32 0, i32 0
  %485 = load i32, i32* %available814, align 4
  %tobool815 = icmp ne i32 %485, 0
  br i1 %tobool815, label %cond.true.816, label %cond.false.858

cond.true.816:                                    ; preds = %cond.end.811
  %mb_addr817 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upleft, i32 0, i32 1
  %486 = load i32, i32* %mb_addr817, align 4
  %idxprom818 = sext i32 %486 to i64
  %487 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data819 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %487, i32 0, i32 51
  %488 = load %struct.macroblock*, %struct.macroblock** %mb_data819, align 8
  %arrayidx820 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %488, i64 %idxprom818
  %mb_field821 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx820, i32 0, i32 22
  %489 = load i32, i32* %mb_field821, align 4
  %tobool822 = icmp ne i32 %489, 0
  br i1 %tobool822, label %cond.true.835, label %lor.lhs.false.823

lor.lhs.false.823:                                ; preds = %cond.true.816
  %pos_y824 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upleft, i32 0, i32 5
  %490 = load i32, i32* %pos_y824, align 4
  %idxprom825 = sext i32 %490 to i64
  %pos_x826 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upleft, i32 0, i32 4
  %491 = load i32, i32* %pos_x826, align 4
  %idxprom827 = sext i32 %491 to i64
  %492 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx828 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %492, i32 0, i32 32
  %493 = load i16***, i16**** %ref_idx828, align 8
  %arrayidx829 = getelementptr inbounds i16**, i16*** %493, i64 1
  %494 = load i16**, i16*** %arrayidx829, align 8
  %arrayidx830 = getelementptr inbounds i16*, i16** %494, i64 %idxprom827
  %495 = load i16*, i16** %arrayidx830, align 8
  %arrayidx831 = getelementptr inbounds i16, i16* %495, i64 %idxprom825
  %496 = load i16, i16* %arrayidx831, align 2
  %conv832 = sext i16 %496 to i32
  %cmp833 = icmp slt i32 %conv832, 0
  br i1 %cmp833, label %cond.true.835, label %cond.false.846

cond.true.835:                                    ; preds = %lor.lhs.false.823, %cond.true.816
  %pos_y836 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upleft, i32 0, i32 5
  %497 = load i32, i32* %pos_y836, align 4
  %idxprom837 = sext i32 %497 to i64
  %pos_x838 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upleft, i32 0, i32 4
  %498 = load i32, i32* %pos_x838, align 4
  %idxprom839 = sext i32 %498 to i64
  %499 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx840 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %499, i32 0, i32 32
  %500 = load i16***, i16**** %ref_idx840, align 8
  %arrayidx841 = getelementptr inbounds i16**, i16*** %500, i64 1
  %501 = load i16**, i16*** %arrayidx841, align 8
  %arrayidx842 = getelementptr inbounds i16*, i16** %501, i64 %idxprom839
  %502 = load i16*, i16** %arrayidx842, align 8
  %arrayidx843 = getelementptr inbounds i16, i16* %502, i64 %idxprom837
  %503 = load i16, i16* %arrayidx843, align 2
  %conv844 = sext i16 %503 to i32
  %shr845 = ashr i32 %conv844, 1
  br label %cond.end.856

cond.false.846:                                   ; preds = %lor.lhs.false.823
  %pos_y847 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upleft, i32 0, i32 5
  %504 = load i32, i32* %pos_y847, align 4
  %idxprom848 = sext i32 %504 to i64
  %pos_x849 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upleft, i32 0, i32 4
  %505 = load i32, i32* %pos_x849, align 4
  %idxprom850 = sext i32 %505 to i64
  %506 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx851 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %506, i32 0, i32 32
  %507 = load i16***, i16**** %ref_idx851, align 8
  %arrayidx852 = getelementptr inbounds i16**, i16*** %507, i64 1
  %508 = load i16**, i16*** %arrayidx852, align 8
  %arrayidx853 = getelementptr inbounds i16*, i16** %508, i64 %idxprom850
  %509 = load i16*, i16** %arrayidx853, align 8
  %arrayidx854 = getelementptr inbounds i16, i16* %509, i64 %idxprom848
  %510 = load i16, i16* %arrayidx854, align 2
  %conv855 = sext i16 %510 to i32
  br label %cond.end.856

cond.end.856:                                     ; preds = %cond.false.846, %cond.true.835
  %cond857 = phi i32 [ %shr845, %cond.true.835 ], [ %conv855, %cond.false.846 ]
  br label %cond.end.859

cond.false.858:                                   ; preds = %cond.end.811
  br label %cond.end.859

cond.end.859:                                     ; preds = %cond.false.858, %cond.end.856
  %cond860 = phi i32 [ %cond857, %cond.end.856 ], [ -1, %cond.false.858 ]
  %conv861 = trunc i32 %cond860 to i16
  store i16 %conv861, i16* %bw_rFrameUL, align 2
  %available862 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upright, i32 0, i32 0
  %511 = load i32, i32* %available862, align 4
  %tobool863 = icmp ne i32 %511, 0
  br i1 %tobool863, label %cond.true.864, label %cond.false.906

cond.true.864:                                    ; preds = %cond.end.859
  %mb_addr865 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upright, i32 0, i32 1
  %512 = load i32, i32* %mb_addr865, align 4
  %idxprom866 = sext i32 %512 to i64
  %513 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data867 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %513, i32 0, i32 51
  %514 = load %struct.macroblock*, %struct.macroblock** %mb_data867, align 8
  %arrayidx868 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %514, i64 %idxprom866
  %mb_field869 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx868, i32 0, i32 22
  %515 = load i32, i32* %mb_field869, align 4
  %tobool870 = icmp ne i32 %515, 0
  br i1 %tobool870, label %cond.true.883, label %lor.lhs.false.871

lor.lhs.false.871:                                ; preds = %cond.true.864
  %pos_y872 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upright, i32 0, i32 5
  %516 = load i32, i32* %pos_y872, align 4
  %idxprom873 = sext i32 %516 to i64
  %pos_x874 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upright, i32 0, i32 4
  %517 = load i32, i32* %pos_x874, align 4
  %idxprom875 = sext i32 %517 to i64
  %518 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx876 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %518, i32 0, i32 32
  %519 = load i16***, i16**** %ref_idx876, align 8
  %arrayidx877 = getelementptr inbounds i16**, i16*** %519, i64 1
  %520 = load i16**, i16*** %arrayidx877, align 8
  %arrayidx878 = getelementptr inbounds i16*, i16** %520, i64 %idxprom875
  %521 = load i16*, i16** %arrayidx878, align 8
  %arrayidx879 = getelementptr inbounds i16, i16* %521, i64 %idxprom873
  %522 = load i16, i16* %arrayidx879, align 2
  %conv880 = sext i16 %522 to i32
  %cmp881 = icmp slt i32 %conv880, 0
  br i1 %cmp881, label %cond.true.883, label %cond.false.894

cond.true.883:                                    ; preds = %lor.lhs.false.871, %cond.true.864
  %pos_y884 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upright, i32 0, i32 5
  %523 = load i32, i32* %pos_y884, align 4
  %idxprom885 = sext i32 %523 to i64
  %pos_x886 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upright, i32 0, i32 4
  %524 = load i32, i32* %pos_x886, align 4
  %idxprom887 = sext i32 %524 to i64
  %525 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx888 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %525, i32 0, i32 32
  %526 = load i16***, i16**** %ref_idx888, align 8
  %arrayidx889 = getelementptr inbounds i16**, i16*** %526, i64 1
  %527 = load i16**, i16*** %arrayidx889, align 8
  %arrayidx890 = getelementptr inbounds i16*, i16** %527, i64 %idxprom887
  %528 = load i16*, i16** %arrayidx890, align 8
  %arrayidx891 = getelementptr inbounds i16, i16* %528, i64 %idxprom885
  %529 = load i16, i16* %arrayidx891, align 2
  %conv892 = sext i16 %529 to i32
  %shr893 = ashr i32 %conv892, 1
  br label %cond.end.904

cond.false.894:                                   ; preds = %lor.lhs.false.871
  %pos_y895 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upright, i32 0, i32 5
  %530 = load i32, i32* %pos_y895, align 4
  %idxprom896 = sext i32 %530 to i64
  %pos_x897 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upright, i32 0, i32 4
  %531 = load i32, i32* %pos_x897, align 4
  %idxprom898 = sext i32 %531 to i64
  %532 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx899 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %532, i32 0, i32 32
  %533 = load i16***, i16**** %ref_idx899, align 8
  %arrayidx900 = getelementptr inbounds i16**, i16*** %533, i64 1
  %534 = load i16**, i16*** %arrayidx900, align 8
  %arrayidx901 = getelementptr inbounds i16*, i16** %534, i64 %idxprom898
  %535 = load i16*, i16** %arrayidx901, align 8
  %arrayidx902 = getelementptr inbounds i16, i16* %535, i64 %idxprom896
  %536 = load i16, i16* %arrayidx902, align 2
  %conv903 = sext i16 %536 to i32
  br label %cond.end.904

cond.end.904:                                     ; preds = %cond.false.894, %cond.true.883
  %cond905 = phi i32 [ %shr893, %cond.true.883 ], [ %conv903, %cond.false.894 ]
  br label %cond.end.908

cond.false.906:                                   ; preds = %cond.end.859
  %537 = load i16, i16* %bw_rFrameUL, align 2
  %conv907 = sext i16 %537 to i32
  br label %cond.end.908

cond.end.908:                                     ; preds = %cond.false.906, %cond.end.904
  %cond909 = phi i32 [ %cond905, %cond.end.904 ], [ %conv907, %cond.false.906 ]
  %conv910 = trunc i32 %cond909 to i16
  store i16 %conv910, i16* %bw_rFrameUR, align 2
  br label %if.end.911

if.end.911:                                       ; preds = %cond.end.908, %cond.end.522
  br label %if.end.912

if.end.912:                                       ; preds = %if.end.911, %cond.end.136
  %538 = load i16, i16* %fw_rFrameL, align 2
  %conv913 = sext i16 %538 to i32
  %cmp914 = icmp sge i32 %conv913, 0
  br i1 %cmp914, label %land.lhs.true.916, label %cond.false.931

land.lhs.true.916:                                ; preds = %if.end.912
  %539 = load i16, i16* %fw_rFrameU, align 2
  %conv917 = sext i16 %539 to i32
  %cmp918 = icmp sge i32 %conv917, 0
  br i1 %cmp918, label %cond.true.920, label %cond.false.931

cond.true.920:                                    ; preds = %land.lhs.true.916
  %540 = load i16, i16* %fw_rFrameL, align 2
  %conv921 = sext i16 %540 to i32
  %541 = load i16, i16* %fw_rFrameU, align 2
  %conv922 = sext i16 %541 to i32
  %cmp923 = icmp slt i32 %conv921, %conv922
  br i1 %cmp923, label %cond.true.925, label %cond.false.927

cond.true.925:                                    ; preds = %cond.true.920
  %542 = load i16, i16* %fw_rFrameL, align 2
  %conv926 = sext i16 %542 to i32
  br label %cond.end.929

cond.false.927:                                   ; preds = %cond.true.920
  %543 = load i16, i16* %fw_rFrameU, align 2
  %conv928 = sext i16 %543 to i32
  br label %cond.end.929

cond.end.929:                                     ; preds = %cond.false.927, %cond.true.925
  %cond930 = phi i32 [ %conv926, %cond.true.925 ], [ %conv928, %cond.false.927 ]
  br label %cond.end.942

cond.false.931:                                   ; preds = %land.lhs.true.916, %if.end.912
  %544 = load i16, i16* %fw_rFrameL, align 2
  %conv932 = sext i16 %544 to i32
  %545 = load i16, i16* %fw_rFrameU, align 2
  %conv933 = sext i16 %545 to i32
  %cmp934 = icmp sgt i32 %conv932, %conv933
  br i1 %cmp934, label %cond.true.936, label %cond.false.938

cond.true.936:                                    ; preds = %cond.false.931
  %546 = load i16, i16* %fw_rFrameL, align 2
  %conv937 = sext i16 %546 to i32
  br label %cond.end.940

cond.false.938:                                   ; preds = %cond.false.931
  %547 = load i16, i16* %fw_rFrameU, align 2
  %conv939 = sext i16 %547 to i32
  br label %cond.end.940

cond.end.940:                                     ; preds = %cond.false.938, %cond.true.936
  %cond941 = phi i32 [ %conv937, %cond.true.936 ], [ %conv939, %cond.false.938 ]
  br label %cond.end.942

cond.end.942:                                     ; preds = %cond.end.940, %cond.end.929
  %cond943 = phi i32 [ %cond930, %cond.end.929 ], [ %cond941, %cond.end.940 ]
  %conv944 = trunc i32 %cond943 to i16
  store i16 %conv944, i16* %fw_rFrame, align 2
  %548 = load i16, i16* %fw_rFrame, align 2
  %conv945 = sext i16 %548 to i32
  %cmp946 = icmp sge i32 %conv945, 0
  br i1 %cmp946, label %land.lhs.true.948, label %cond.false.963

land.lhs.true.948:                                ; preds = %cond.end.942
  %549 = load i16, i16* %fw_rFrameUR, align 2
  %conv949 = sext i16 %549 to i32
  %cmp950 = icmp sge i32 %conv949, 0
  br i1 %cmp950, label %cond.true.952, label %cond.false.963

cond.true.952:                                    ; preds = %land.lhs.true.948
  %550 = load i16, i16* %fw_rFrame, align 2
  %conv953 = sext i16 %550 to i32
  %551 = load i16, i16* %fw_rFrameUR, align 2
  %conv954 = sext i16 %551 to i32
  %cmp955 = icmp slt i32 %conv953, %conv954
  br i1 %cmp955, label %cond.true.957, label %cond.false.959

cond.true.957:                                    ; preds = %cond.true.952
  %552 = load i16, i16* %fw_rFrame, align 2
  %conv958 = sext i16 %552 to i32
  br label %cond.end.961

cond.false.959:                                   ; preds = %cond.true.952
  %553 = load i16, i16* %fw_rFrameUR, align 2
  %conv960 = sext i16 %553 to i32
  br label %cond.end.961

cond.end.961:                                     ; preds = %cond.false.959, %cond.true.957
  %cond962 = phi i32 [ %conv958, %cond.true.957 ], [ %conv960, %cond.false.959 ]
  br label %cond.end.974

cond.false.963:                                   ; preds = %land.lhs.true.948, %cond.end.942
  %554 = load i16, i16* %fw_rFrame, align 2
  %conv964 = sext i16 %554 to i32
  %555 = load i16, i16* %fw_rFrameUR, align 2
  %conv965 = sext i16 %555 to i32
  %cmp966 = icmp sgt i32 %conv964, %conv965
  br i1 %cmp966, label %cond.true.968, label %cond.false.970

cond.true.968:                                    ; preds = %cond.false.963
  %556 = load i16, i16* %fw_rFrame, align 2
  %conv969 = sext i16 %556 to i32
  br label %cond.end.972

cond.false.970:                                   ; preds = %cond.false.963
  %557 = load i16, i16* %fw_rFrameUR, align 2
  %conv971 = sext i16 %557 to i32
  br label %cond.end.972

cond.end.972:                                     ; preds = %cond.false.970, %cond.true.968
  %cond973 = phi i32 [ %conv969, %cond.true.968 ], [ %conv971, %cond.false.970 ]
  br label %cond.end.974

cond.end.974:                                     ; preds = %cond.end.972, %cond.end.961
  %cond975 = phi i32 [ %cond962, %cond.end.961 ], [ %cond973, %cond.end.972 ]
  %conv976 = trunc i32 %cond975 to i16
  store i16 %conv976, i16* %fw_rFrame, align 2
  %558 = load i16, i16* %bw_rFrameL, align 2
  %conv977 = sext i16 %558 to i32
  %cmp978 = icmp sge i32 %conv977, 0
  br i1 %cmp978, label %land.lhs.true.980, label %cond.false.995

land.lhs.true.980:                                ; preds = %cond.end.974
  %559 = load i16, i16* %bw_rFrameU, align 2
  %conv981 = sext i16 %559 to i32
  %cmp982 = icmp sge i32 %conv981, 0
  br i1 %cmp982, label %cond.true.984, label %cond.false.995

cond.true.984:                                    ; preds = %land.lhs.true.980
  %560 = load i16, i16* %bw_rFrameL, align 2
  %conv985 = sext i16 %560 to i32
  %561 = load i16, i16* %bw_rFrameU, align 2
  %conv986 = sext i16 %561 to i32
  %cmp987 = icmp slt i32 %conv985, %conv986
  br i1 %cmp987, label %cond.true.989, label %cond.false.991

cond.true.989:                                    ; preds = %cond.true.984
  %562 = load i16, i16* %bw_rFrameL, align 2
  %conv990 = sext i16 %562 to i32
  br label %cond.end.993

cond.false.991:                                   ; preds = %cond.true.984
  %563 = load i16, i16* %bw_rFrameU, align 2
  %conv992 = sext i16 %563 to i32
  br label %cond.end.993

cond.end.993:                                     ; preds = %cond.false.991, %cond.true.989
  %cond994 = phi i32 [ %conv990, %cond.true.989 ], [ %conv992, %cond.false.991 ]
  br label %cond.end.1006

cond.false.995:                                   ; preds = %land.lhs.true.980, %cond.end.974
  %564 = load i16, i16* %bw_rFrameL, align 2
  %conv996 = sext i16 %564 to i32
  %565 = load i16, i16* %bw_rFrameU, align 2
  %conv997 = sext i16 %565 to i32
  %cmp998 = icmp sgt i32 %conv996, %conv997
  br i1 %cmp998, label %cond.true.1000, label %cond.false.1002

cond.true.1000:                                   ; preds = %cond.false.995
  %566 = load i16, i16* %bw_rFrameL, align 2
  %conv1001 = sext i16 %566 to i32
  br label %cond.end.1004

cond.false.1002:                                  ; preds = %cond.false.995
  %567 = load i16, i16* %bw_rFrameU, align 2
  %conv1003 = sext i16 %567 to i32
  br label %cond.end.1004

cond.end.1004:                                    ; preds = %cond.false.1002, %cond.true.1000
  %cond1005 = phi i32 [ %conv1001, %cond.true.1000 ], [ %conv1003, %cond.false.1002 ]
  br label %cond.end.1006

cond.end.1006:                                    ; preds = %cond.end.1004, %cond.end.993
  %cond1007 = phi i32 [ %cond994, %cond.end.993 ], [ %cond1005, %cond.end.1004 ]
  %conv1008 = trunc i32 %cond1007 to i16
  store i16 %conv1008, i16* %bw_rFrame, align 2
  %568 = load i16, i16* %bw_rFrame, align 2
  %conv1009 = sext i16 %568 to i32
  %cmp1010 = icmp sge i32 %conv1009, 0
  br i1 %cmp1010, label %land.lhs.true.1012, label %cond.false.1027

land.lhs.true.1012:                               ; preds = %cond.end.1006
  %569 = load i16, i16* %bw_rFrameUR, align 2
  %conv1013 = sext i16 %569 to i32
  %cmp1014 = icmp sge i32 %conv1013, 0
  br i1 %cmp1014, label %cond.true.1016, label %cond.false.1027

cond.true.1016:                                   ; preds = %land.lhs.true.1012
  %570 = load i16, i16* %bw_rFrame, align 2
  %conv1017 = sext i16 %570 to i32
  %571 = load i16, i16* %bw_rFrameUR, align 2
  %conv1018 = sext i16 %571 to i32
  %cmp1019 = icmp slt i32 %conv1017, %conv1018
  br i1 %cmp1019, label %cond.true.1021, label %cond.false.1023

cond.true.1021:                                   ; preds = %cond.true.1016
  %572 = load i16, i16* %bw_rFrame, align 2
  %conv1022 = sext i16 %572 to i32
  br label %cond.end.1025

cond.false.1023:                                  ; preds = %cond.true.1016
  %573 = load i16, i16* %bw_rFrameUR, align 2
  %conv1024 = sext i16 %573 to i32
  br label %cond.end.1025

cond.end.1025:                                    ; preds = %cond.false.1023, %cond.true.1021
  %cond1026 = phi i32 [ %conv1022, %cond.true.1021 ], [ %conv1024, %cond.false.1023 ]
  br label %cond.end.1038

cond.false.1027:                                  ; preds = %land.lhs.true.1012, %cond.end.1006
  %574 = load i16, i16* %bw_rFrame, align 2
  %conv1028 = sext i16 %574 to i32
  %575 = load i16, i16* %bw_rFrameUR, align 2
  %conv1029 = sext i16 %575 to i32
  %cmp1030 = icmp sgt i32 %conv1028, %conv1029
  br i1 %cmp1030, label %cond.true.1032, label %cond.false.1034

cond.true.1032:                                   ; preds = %cond.false.1027
  %576 = load i16, i16* %bw_rFrame, align 2
  %conv1033 = sext i16 %576 to i32
  br label %cond.end.1036

cond.false.1034:                                  ; preds = %cond.false.1027
  %577 = load i16, i16* %bw_rFrameUR, align 2
  %conv1035 = sext i16 %577 to i32
  br label %cond.end.1036

cond.end.1036:                                    ; preds = %cond.false.1034, %cond.true.1032
  %cond1037 = phi i32 [ %conv1033, %cond.true.1032 ], [ %conv1035, %cond.false.1034 ]
  br label %cond.end.1038

cond.end.1038:                                    ; preds = %cond.end.1036, %cond.end.1025
  %cond1039 = phi i32 [ %cond1026, %cond.end.1025 ], [ %cond1037, %cond.end.1036 ]
  %conv1040 = trunc i32 %cond1039 to i16
  store i16 %conv1040, i16* %bw_rFrame, align 2
  %578 = load i16, i16* %fw_rFrame, align 2
  %conv1041 = sext i16 %578 to i32
  %cmp1042 = icmp sge i32 %conv1041, 0
  br i1 %cmp1042, label %if.then.1044, label %if.end.1047

if.then.1044:                                     ; preds = %cond.end.1038
  %arraydecay = getelementptr inbounds [2 x i16], [2 x i16]* %pmvfw, i32 0, i32 0
  %579 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx1045 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %579, i32 0, i32 32
  %580 = load i16***, i16**** %ref_idx1045, align 8
  %581 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %mv1046 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %581, i32 0, i32 35
  %582 = load i16****, i16***** %mv1046, align 8
  %583 = load i16, i16* %fw_rFrame, align 2
  call void @SetMotionVectorPredictor(i16* %arraydecay, i16*** %580, i16**** %582, i16 signext %583, i32 0, i32 0, i32 0, i32 16, i32 16)
  br label %if.end.1047

if.end.1047:                                      ; preds = %if.then.1044, %cond.end.1038
  %584 = load i16, i16* %bw_rFrame, align 2
  %conv1048 = sext i16 %584 to i32
  %cmp1049 = icmp sge i32 %conv1048, 0
  br i1 %cmp1049, label %if.then.1051, label %if.end.1055

if.then.1051:                                     ; preds = %if.end.1047
  %arraydecay1052 = getelementptr inbounds [2 x i16], [2 x i16]* %pmvbw, i32 0, i32 0
  %585 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx1053 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %585, i32 0, i32 32
  %586 = load i16***, i16**** %ref_idx1053, align 8
  %587 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %mv1054 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %587, i32 0, i32 35
  %588 = load i16****, i16***** %mv1054, align 8
  %589 = load i16, i16* %bw_rFrame, align 2
  call void @SetMotionVectorPredictor(i16* %arraydecay1052, i16*** %586, i16**** %588, i16 signext %589, i32 1, i32 0, i32 0, i32 16, i32 16)
  br label %if.end.1055

if.end.1055:                                      ; preds = %if.then.1051, %if.end.1047
  store i32 0, i32* %block_y, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc.1290, %if.end.1055
  %590 = load i32, i32* %block_y, align 4
  %cmp1056 = icmp slt i32 %590, 4
  br i1 %cmp1056, label %for.body, label %for.end.1292

for.body:                                         ; preds = %for.cond
  %591 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %591, i32 0, i32 34
  %592 = load i32, i32* %pix_y, align 4
  %shr1058 = ashr i32 %592, 2
  %593 = load i32, i32* %block_y, align 4
  %add = add nsw i32 %shr1058, %593
  store i32 %add, i32* %pic_block_y, align 4
  %594 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %opix_y = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %594, i32 0, i32 38
  %595 = load i32, i32* %opix_y, align 4
  %shr1059 = ashr i32 %595, 2
  %596 = load i32, i32* %block_y, align 4
  %add1060 = add nsw i32 %shr1059, %596
  store i32 %add1060, i32* %opic_block_y, align 4
  store i32 0, i32* %block_x, align 4
  br label %for.cond.1061

for.cond.1061:                                    ; preds = %for.inc, %for.body
  %597 = load i32, i32* %block_x, align 4
  %cmp1062 = icmp slt i32 %597, 4
  br i1 %cmp1062, label %for.body.1064, label %for.end

for.body.1064:                                    ; preds = %for.cond.1061
  %598 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %598, i32 0, i32 33
  %599 = load i32, i32* %pix_x, align 4
  %shr1065 = ashr i32 %599, 2
  %600 = load i32, i32* %block_x, align 4
  %add1066 = add nsw i32 %shr1065, %600
  store i32 %add1066, i32* %pic_block_x, align 4
  %601 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %opix_x = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %601, i32 0, i32 37
  %602 = load i32, i32* %opix_x, align 4
  %shr1067 = ashr i32 %602, 2
  %603 = load i32, i32* %block_x, align 4
  %add1068 = add nsw i32 %shr1067, %603
  store i32 %add1068, i32* %opic_block_x, align 4
  %604 = load i16, i16* %fw_rFrame, align 2
  %conv1069 = sext i16 %604 to i32
  %cmp1070 = icmp sge i32 %conv1069, 0
  br i1 %cmp1070, label %if.then.1072, label %if.else.1129

if.then.1072:                                     ; preds = %for.body.1064
  %605 = load i16, i16* %fw_rFrame, align 2
  %tobool1073 = icmp ne i16 %605, 0
  br i1 %tobool1073, label %if.else.1102, label %land.lhs.true.1074

land.lhs.true.1074:                               ; preds = %if.then.1072
  %606 = load i32, i32* %opic_block_y, align 4
  %idxprom1075 = sext i32 %606 to i64
  %607 = load i32, i32* %opic_block_x, align 4
  %idxprom1076 = sext i32 %607 to i64
  %608 = load i8**, i8*** %moving_block, align 8
  %arrayidx1077 = getelementptr inbounds i8*, i8** %608, i64 %idxprom1076
  %609 = load i8*, i8** %arrayidx1077, align 8
  %arrayidx1078 = getelementptr inbounds i8, i8* %609, i64 %idxprom1075
  %610 = load i8, i8* %arrayidx1078, align 1
  %tobool1079 = icmp ne i8 %610, 0
  br i1 %tobool1079, label %if.else.1102, label %if.then.1080

if.then.1080:                                     ; preds = %land.lhs.true.1074
  %611 = load i32, i32* %block_y, align 4
  %idxprom1081 = sext i32 %611 to i64
  %612 = load i32, i32* %block_x, align 4
  %idxprom1082 = sext i32 %612 to i64
  %613 = load i16******, i16******* %all_mvs, align 8
  %arrayidx1083 = getelementptr inbounds i16*****, i16****** %613, i64 %idxprom1082
  %614 = load i16*****, i16****** %arrayidx1083, align 8
  %arrayidx1084 = getelementptr inbounds i16****, i16***** %614, i64 %idxprom1081
  %615 = load i16****, i16***** %arrayidx1084, align 8
  %arrayidx1085 = getelementptr inbounds i16***, i16**** %615, i64 0
  %616 = load i16***, i16**** %arrayidx1085, align 8
  %arrayidx1086 = getelementptr inbounds i16**, i16*** %616, i64 0
  %617 = load i16**, i16*** %arrayidx1086, align 8
  %arrayidx1087 = getelementptr inbounds i16*, i16** %617, i64 0
  %618 = load i16*, i16** %arrayidx1087, align 8
  %arrayidx1088 = getelementptr inbounds i16, i16* %618, i64 0
  store i16 0, i16* %arrayidx1088, align 2
  %619 = load i32, i32* %block_y, align 4
  %idxprom1089 = sext i32 %619 to i64
  %620 = load i32, i32* %block_x, align 4
  %idxprom1090 = sext i32 %620 to i64
  %621 = load i16******, i16******* %all_mvs, align 8
  %arrayidx1091 = getelementptr inbounds i16*****, i16****** %621, i64 %idxprom1090
  %622 = load i16*****, i16****** %arrayidx1091, align 8
  %arrayidx1092 = getelementptr inbounds i16****, i16***** %622, i64 %idxprom1089
  %623 = load i16****, i16***** %arrayidx1092, align 8
  %arrayidx1093 = getelementptr inbounds i16***, i16**** %623, i64 0
  %624 = load i16***, i16**** %arrayidx1093, align 8
  %arrayidx1094 = getelementptr inbounds i16**, i16*** %624, i64 0
  %625 = load i16**, i16*** %arrayidx1094, align 8
  %arrayidx1095 = getelementptr inbounds i16*, i16** %625, i64 0
  %626 = load i16*, i16** %arrayidx1095, align 8
  %arrayidx1096 = getelementptr inbounds i16, i16* %626, i64 1
  store i16 0, i16* %arrayidx1096, align 2
  %627 = load i32, i32* %pic_block_y, align 4
  %idxprom1097 = sext i32 %627 to i64
  %628 = load i32, i32* %pic_block_x, align 4
  %idxprom1098 = sext i32 %628 to i64
  %629 = load i16***, i16**** @direct_ref_idx, align 8
  %arrayidx1099 = getelementptr inbounds i16**, i16*** %629, i64 0
  %630 = load i16**, i16*** %arrayidx1099, align 8
  %arrayidx1100 = getelementptr inbounds i16*, i16** %630, i64 %idxprom1098
  %631 = load i16*, i16** %arrayidx1100, align 8
  %arrayidx1101 = getelementptr inbounds i16, i16* %631, i64 %idxprom1097
  store i16 0, i16* %arrayidx1101, align 2
  br label %if.end.1128

if.else.1102:                                     ; preds = %land.lhs.true.1074, %if.then.1072
  %arrayidx1103 = getelementptr inbounds [2 x i16], [2 x i16]* %pmvfw, i32 0, i64 0
  %632 = load i16, i16* %arrayidx1103, align 2
  %633 = load i16, i16* %fw_rFrame, align 2
  %idxprom1104 = sext i16 %633 to i64
  %634 = load i32, i32* %block_y, align 4
  %idxprom1105 = sext i32 %634 to i64
  %635 = load i32, i32* %block_x, align 4
  %idxprom1106 = sext i32 %635 to i64
  %636 = load i16******, i16******* %all_mvs, align 8
  %arrayidx1107 = getelementptr inbounds i16*****, i16****** %636, i64 %idxprom1106
  %637 = load i16*****, i16****** %arrayidx1107, align 8
  %arrayidx1108 = getelementptr inbounds i16****, i16***** %637, i64 %idxprom1105
  %638 = load i16****, i16***** %arrayidx1108, align 8
  %arrayidx1109 = getelementptr inbounds i16***, i16**** %638, i64 0
  %639 = load i16***, i16**** %arrayidx1109, align 8
  %arrayidx1110 = getelementptr inbounds i16**, i16*** %639, i64 %idxprom1104
  %640 = load i16**, i16*** %arrayidx1110, align 8
  %arrayidx1111 = getelementptr inbounds i16*, i16** %640, i64 0
  %641 = load i16*, i16** %arrayidx1111, align 8
  %arrayidx1112 = getelementptr inbounds i16, i16* %641, i64 0
  store i16 %632, i16* %arrayidx1112, align 2
  %arrayidx1113 = getelementptr inbounds [2 x i16], [2 x i16]* %pmvfw, i32 0, i64 1
  %642 = load i16, i16* %arrayidx1113, align 2
  %643 = load i16, i16* %fw_rFrame, align 2
  %idxprom1114 = sext i16 %643 to i64
  %644 = load i32, i32* %block_y, align 4
  %idxprom1115 = sext i32 %644 to i64
  %645 = load i32, i32* %block_x, align 4
  %idxprom1116 = sext i32 %645 to i64
  %646 = load i16******, i16******* %all_mvs, align 8
  %arrayidx1117 = getelementptr inbounds i16*****, i16****** %646, i64 %idxprom1116
  %647 = load i16*****, i16****** %arrayidx1117, align 8
  %arrayidx1118 = getelementptr inbounds i16****, i16***** %647, i64 %idxprom1115
  %648 = load i16****, i16***** %arrayidx1118, align 8
  %arrayidx1119 = getelementptr inbounds i16***, i16**** %648, i64 0
  %649 = load i16***, i16**** %arrayidx1119, align 8
  %arrayidx1120 = getelementptr inbounds i16**, i16*** %649, i64 %idxprom1114
  %650 = load i16**, i16*** %arrayidx1120, align 8
  %arrayidx1121 = getelementptr inbounds i16*, i16** %650, i64 0
  %651 = load i16*, i16** %arrayidx1121, align 8
  %arrayidx1122 = getelementptr inbounds i16, i16* %651, i64 1
  store i16 %642, i16* %arrayidx1122, align 2
  %652 = load i16, i16* %fw_rFrame, align 2
  %653 = load i32, i32* %pic_block_y, align 4
  %idxprom1123 = sext i32 %653 to i64
  %654 = load i32, i32* %pic_block_x, align 4
  %idxprom1124 = sext i32 %654 to i64
  %655 = load i16***, i16**** @direct_ref_idx, align 8
  %arrayidx1125 = getelementptr inbounds i16**, i16*** %655, i64 0
  %656 = load i16**, i16*** %arrayidx1125, align 8
  %arrayidx1126 = getelementptr inbounds i16*, i16** %656, i64 %idxprom1124
  %657 = load i16*, i16** %arrayidx1126, align 8
  %arrayidx1127 = getelementptr inbounds i16, i16* %657, i64 %idxprom1123
  store i16 %652, i16* %arrayidx1127, align 2
  br label %if.end.1128

if.end.1128:                                      ; preds = %if.else.1102, %if.then.1080
  br label %if.end.1151

if.else.1129:                                     ; preds = %for.body.1064
  %658 = load i32, i32* %block_y, align 4
  %idxprom1130 = sext i32 %658 to i64
  %659 = load i32, i32* %block_x, align 4
  %idxprom1131 = sext i32 %659 to i64
  %660 = load i16******, i16******* %all_mvs, align 8
  %arrayidx1132 = getelementptr inbounds i16*****, i16****** %660, i64 %idxprom1131
  %661 = load i16*****, i16****** %arrayidx1132, align 8
  %arrayidx1133 = getelementptr inbounds i16****, i16***** %661, i64 %idxprom1130
  %662 = load i16****, i16***** %arrayidx1133, align 8
  %arrayidx1134 = getelementptr inbounds i16***, i16**** %662, i64 0
  %663 = load i16***, i16**** %arrayidx1134, align 8
  %arrayidx1135 = getelementptr inbounds i16**, i16*** %663, i64 0
  %664 = load i16**, i16*** %arrayidx1135, align 8
  %arrayidx1136 = getelementptr inbounds i16*, i16** %664, i64 0
  %665 = load i16*, i16** %arrayidx1136, align 8
  %arrayidx1137 = getelementptr inbounds i16, i16* %665, i64 0
  store i16 0, i16* %arrayidx1137, align 2
  %666 = load i32, i32* %block_y, align 4
  %idxprom1138 = sext i32 %666 to i64
  %667 = load i32, i32* %block_x, align 4
  %idxprom1139 = sext i32 %667 to i64
  %668 = load i16******, i16******* %all_mvs, align 8
  %arrayidx1140 = getelementptr inbounds i16*****, i16****** %668, i64 %idxprom1139
  %669 = load i16*****, i16****** %arrayidx1140, align 8
  %arrayidx1141 = getelementptr inbounds i16****, i16***** %669, i64 %idxprom1138
  %670 = load i16****, i16***** %arrayidx1141, align 8
  %arrayidx1142 = getelementptr inbounds i16***, i16**** %670, i64 0
  %671 = load i16***, i16**** %arrayidx1142, align 8
  %arrayidx1143 = getelementptr inbounds i16**, i16*** %671, i64 0
  %672 = load i16**, i16*** %arrayidx1143, align 8
  %arrayidx1144 = getelementptr inbounds i16*, i16** %672, i64 0
  %673 = load i16*, i16** %arrayidx1144, align 8
  %arrayidx1145 = getelementptr inbounds i16, i16* %673, i64 1
  store i16 0, i16* %arrayidx1145, align 2
  %674 = load i32, i32* %pic_block_y, align 4
  %idxprom1146 = sext i32 %674 to i64
  %675 = load i32, i32* %pic_block_x, align 4
  %idxprom1147 = sext i32 %675 to i64
  %676 = load i16***, i16**** @direct_ref_idx, align 8
  %arrayidx1148 = getelementptr inbounds i16**, i16*** %676, i64 0
  %677 = load i16**, i16*** %arrayidx1148, align 8
  %arrayidx1149 = getelementptr inbounds i16*, i16** %677, i64 %idxprom1147
  %678 = load i16*, i16** %arrayidx1149, align 8
  %arrayidx1150 = getelementptr inbounds i16, i16* %678, i64 %idxprom1146
  store i16 -1, i16* %arrayidx1150, align 2
  br label %if.end.1151

if.end.1151:                                      ; preds = %if.else.1129, %if.end.1128
  %679 = load i16, i16* %bw_rFrame, align 2
  %conv1152 = sext i16 %679 to i32
  %cmp1153 = icmp sge i32 %conv1152, 0
  br i1 %cmp1153, label %if.then.1155, label %if.else.1214

if.then.1155:                                     ; preds = %if.end.1151
  %680 = load i16, i16* %bw_rFrame, align 2
  %conv1156 = sext i16 %680 to i32
  %cmp1157 = icmp eq i32 %conv1156, 0
  br i1 %cmp1157, label %land.lhs.true.1159, label %if.else.1187

land.lhs.true.1159:                               ; preds = %if.then.1155
  %681 = load i32, i32* %opic_block_y, align 4
  %idxprom1160 = sext i32 %681 to i64
  %682 = load i32, i32* %opic_block_x, align 4
  %idxprom1161 = sext i32 %682 to i64
  %683 = load i8**, i8*** %moving_block, align 8
  %arrayidx1162 = getelementptr inbounds i8*, i8** %683, i64 %idxprom1161
  %684 = load i8*, i8** %arrayidx1162, align 8
  %arrayidx1163 = getelementptr inbounds i8, i8* %684, i64 %idxprom1160
  %685 = load i8, i8* %arrayidx1163, align 1
  %tobool1164 = icmp ne i8 %685, 0
  br i1 %tobool1164, label %if.else.1187, label %if.then.1165

if.then.1165:                                     ; preds = %land.lhs.true.1159
  %686 = load i32, i32* %block_y, align 4
  %idxprom1166 = sext i32 %686 to i64
  %687 = load i32, i32* %block_x, align 4
  %idxprom1167 = sext i32 %687 to i64
  %688 = load i16******, i16******* %all_mvs, align 8
  %arrayidx1168 = getelementptr inbounds i16*****, i16****** %688, i64 %idxprom1167
  %689 = load i16*****, i16****** %arrayidx1168, align 8
  %arrayidx1169 = getelementptr inbounds i16****, i16***** %689, i64 %idxprom1166
  %690 = load i16****, i16***** %arrayidx1169, align 8
  %arrayidx1170 = getelementptr inbounds i16***, i16**** %690, i64 1
  %691 = load i16***, i16**** %arrayidx1170, align 8
  %arrayidx1171 = getelementptr inbounds i16**, i16*** %691, i64 0
  %692 = load i16**, i16*** %arrayidx1171, align 8
  %arrayidx1172 = getelementptr inbounds i16*, i16** %692, i64 0
  %693 = load i16*, i16** %arrayidx1172, align 8
  %arrayidx1173 = getelementptr inbounds i16, i16* %693, i64 0
  store i16 0, i16* %arrayidx1173, align 2
  %694 = load i32, i32* %block_y, align 4
  %idxprom1174 = sext i32 %694 to i64
  %695 = load i32, i32* %block_x, align 4
  %idxprom1175 = sext i32 %695 to i64
  %696 = load i16******, i16******* %all_mvs, align 8
  %arrayidx1176 = getelementptr inbounds i16*****, i16****** %696, i64 %idxprom1175
  %697 = load i16*****, i16****** %arrayidx1176, align 8
  %arrayidx1177 = getelementptr inbounds i16****, i16***** %697, i64 %idxprom1174
  %698 = load i16****, i16***** %arrayidx1177, align 8
  %arrayidx1178 = getelementptr inbounds i16***, i16**** %698, i64 1
  %699 = load i16***, i16**** %arrayidx1178, align 8
  %arrayidx1179 = getelementptr inbounds i16**, i16*** %699, i64 0
  %700 = load i16**, i16*** %arrayidx1179, align 8
  %arrayidx1180 = getelementptr inbounds i16*, i16** %700, i64 0
  %701 = load i16*, i16** %arrayidx1180, align 8
  %arrayidx1181 = getelementptr inbounds i16, i16* %701, i64 1
  store i16 0, i16* %arrayidx1181, align 2
  %702 = load i16, i16* %bw_rFrame, align 2
  %703 = load i32, i32* %pic_block_y, align 4
  %idxprom1182 = sext i32 %703 to i64
  %704 = load i32, i32* %pic_block_x, align 4
  %idxprom1183 = sext i32 %704 to i64
  %705 = load i16***, i16**** @direct_ref_idx, align 8
  %arrayidx1184 = getelementptr inbounds i16**, i16*** %705, i64 1
  %706 = load i16**, i16*** %arrayidx1184, align 8
  %arrayidx1185 = getelementptr inbounds i16*, i16** %706, i64 %idxprom1183
  %707 = load i16*, i16** %arrayidx1185, align 8
  %arrayidx1186 = getelementptr inbounds i16, i16* %707, i64 %idxprom1182
  store i16 %702, i16* %arrayidx1186, align 2
  br label %if.end.1213

if.else.1187:                                     ; preds = %land.lhs.true.1159, %if.then.1155
  %arrayidx1188 = getelementptr inbounds [2 x i16], [2 x i16]* %pmvbw, i32 0, i64 0
  %708 = load i16, i16* %arrayidx1188, align 2
  %709 = load i16, i16* %bw_rFrame, align 2
  %idxprom1189 = sext i16 %709 to i64
  %710 = load i32, i32* %block_y, align 4
  %idxprom1190 = sext i32 %710 to i64
  %711 = load i32, i32* %block_x, align 4
  %idxprom1191 = sext i32 %711 to i64
  %712 = load i16******, i16******* %all_mvs, align 8
  %arrayidx1192 = getelementptr inbounds i16*****, i16****** %712, i64 %idxprom1191
  %713 = load i16*****, i16****** %arrayidx1192, align 8
  %arrayidx1193 = getelementptr inbounds i16****, i16***** %713, i64 %idxprom1190
  %714 = load i16****, i16***** %arrayidx1193, align 8
  %arrayidx1194 = getelementptr inbounds i16***, i16**** %714, i64 1
  %715 = load i16***, i16**** %arrayidx1194, align 8
  %arrayidx1195 = getelementptr inbounds i16**, i16*** %715, i64 %idxprom1189
  %716 = load i16**, i16*** %arrayidx1195, align 8
  %arrayidx1196 = getelementptr inbounds i16*, i16** %716, i64 0
  %717 = load i16*, i16** %arrayidx1196, align 8
  %arrayidx1197 = getelementptr inbounds i16, i16* %717, i64 0
  store i16 %708, i16* %arrayidx1197, align 2
  %arrayidx1198 = getelementptr inbounds [2 x i16], [2 x i16]* %pmvbw, i32 0, i64 1
  %718 = load i16, i16* %arrayidx1198, align 2
  %719 = load i16, i16* %bw_rFrame, align 2
  %idxprom1199 = sext i16 %719 to i64
  %720 = load i32, i32* %block_y, align 4
  %idxprom1200 = sext i32 %720 to i64
  %721 = load i32, i32* %block_x, align 4
  %idxprom1201 = sext i32 %721 to i64
  %722 = load i16******, i16******* %all_mvs, align 8
  %arrayidx1202 = getelementptr inbounds i16*****, i16****** %722, i64 %idxprom1201
  %723 = load i16*****, i16****** %arrayidx1202, align 8
  %arrayidx1203 = getelementptr inbounds i16****, i16***** %723, i64 %idxprom1200
  %724 = load i16****, i16***** %arrayidx1203, align 8
  %arrayidx1204 = getelementptr inbounds i16***, i16**** %724, i64 1
  %725 = load i16***, i16**** %arrayidx1204, align 8
  %arrayidx1205 = getelementptr inbounds i16**, i16*** %725, i64 %idxprom1199
  %726 = load i16**, i16*** %arrayidx1205, align 8
  %arrayidx1206 = getelementptr inbounds i16*, i16** %726, i64 0
  %727 = load i16*, i16** %arrayidx1206, align 8
  %arrayidx1207 = getelementptr inbounds i16, i16* %727, i64 1
  store i16 %718, i16* %arrayidx1207, align 2
  %728 = load i16, i16* %bw_rFrame, align 2
  %729 = load i32, i32* %pic_block_y, align 4
  %idxprom1208 = sext i32 %729 to i64
  %730 = load i32, i32* %pic_block_x, align 4
  %idxprom1209 = sext i32 %730 to i64
  %731 = load i16***, i16**** @direct_ref_idx, align 8
  %arrayidx1210 = getelementptr inbounds i16**, i16*** %731, i64 1
  %732 = load i16**, i16*** %arrayidx1210, align 8
  %arrayidx1211 = getelementptr inbounds i16*, i16** %732, i64 %idxprom1209
  %733 = load i16*, i16** %arrayidx1211, align 8
  %arrayidx1212 = getelementptr inbounds i16, i16* %733, i64 %idxprom1208
  store i16 %728, i16* %arrayidx1212, align 2
  br label %if.end.1213

if.end.1213:                                      ; preds = %if.else.1187, %if.then.1165
  br label %if.end.1236

if.else.1214:                                     ; preds = %if.end.1151
  %734 = load i32, i32* %pic_block_y, align 4
  %idxprom1215 = sext i32 %734 to i64
  %735 = load i32, i32* %pic_block_x, align 4
  %idxprom1216 = sext i32 %735 to i64
  %736 = load i16***, i16**** @direct_ref_idx, align 8
  %arrayidx1217 = getelementptr inbounds i16**, i16*** %736, i64 1
  %737 = load i16**, i16*** %arrayidx1217, align 8
  %arrayidx1218 = getelementptr inbounds i16*, i16** %737, i64 %idxprom1216
  %738 = load i16*, i16** %arrayidx1218, align 8
  %arrayidx1219 = getelementptr inbounds i16, i16* %738, i64 %idxprom1215
  store i16 -1, i16* %arrayidx1219, align 2
  %739 = load i32, i32* %block_y, align 4
  %idxprom1220 = sext i32 %739 to i64
  %740 = load i32, i32* %block_x, align 4
  %idxprom1221 = sext i32 %740 to i64
  %741 = load i16******, i16******* %all_mvs, align 8
  %arrayidx1222 = getelementptr inbounds i16*****, i16****** %741, i64 %idxprom1221
  %742 = load i16*****, i16****** %arrayidx1222, align 8
  %arrayidx1223 = getelementptr inbounds i16****, i16***** %742, i64 %idxprom1220
  %743 = load i16****, i16***** %arrayidx1223, align 8
  %arrayidx1224 = getelementptr inbounds i16***, i16**** %743, i64 1
  %744 = load i16***, i16**** %arrayidx1224, align 8
  %arrayidx1225 = getelementptr inbounds i16**, i16*** %744, i64 0
  %745 = load i16**, i16*** %arrayidx1225, align 8
  %arrayidx1226 = getelementptr inbounds i16*, i16** %745, i64 0
  %746 = load i16*, i16** %arrayidx1226, align 8
  %arrayidx1227 = getelementptr inbounds i16, i16* %746, i64 0
  store i16 0, i16* %arrayidx1227, align 2
  %747 = load i32, i32* %block_y, align 4
  %idxprom1228 = sext i32 %747 to i64
  %748 = load i32, i32* %block_x, align 4
  %idxprom1229 = sext i32 %748 to i64
  %749 = load i16******, i16******* %all_mvs, align 8
  %arrayidx1230 = getelementptr inbounds i16*****, i16****** %749, i64 %idxprom1229
  %750 = load i16*****, i16****** %arrayidx1230, align 8
  %arrayidx1231 = getelementptr inbounds i16****, i16***** %750, i64 %idxprom1228
  %751 = load i16****, i16***** %arrayidx1231, align 8
  %arrayidx1232 = getelementptr inbounds i16***, i16**** %751, i64 1
  %752 = load i16***, i16**** %arrayidx1232, align 8
  %arrayidx1233 = getelementptr inbounds i16**, i16*** %752, i64 0
  %753 = load i16**, i16*** %arrayidx1233, align 8
  %arrayidx1234 = getelementptr inbounds i16*, i16** %753, i64 0
  %754 = load i16*, i16** %arrayidx1234, align 8
  %arrayidx1235 = getelementptr inbounds i16, i16* %754, i64 1
  store i16 0, i16* %arrayidx1235, align 2
  br label %if.end.1236

if.end.1236:                                      ; preds = %if.else.1214, %if.end.1213
  %755 = load i16, i16* %fw_rFrame, align 2
  %conv1237 = sext i16 %755 to i32
  %cmp1238 = icmp slt i32 %conv1237, 0
  br i1 %cmp1238, label %land.lhs.true.1240, label %if.end.1255

land.lhs.true.1240:                               ; preds = %if.end.1236
  %756 = load i16, i16* %bw_rFrame, align 2
  %conv1241 = sext i16 %756 to i32
  %cmp1242 = icmp slt i32 %conv1241, 0
  br i1 %cmp1242, label %if.then.1244, label %if.end.1255

if.then.1244:                                     ; preds = %land.lhs.true.1240
  %757 = load i32, i32* %pic_block_y, align 4
  %idxprom1245 = sext i32 %757 to i64
  %758 = load i32, i32* %pic_block_x, align 4
  %idxprom1246 = sext i32 %758 to i64
  %759 = load i16***, i16**** @direct_ref_idx, align 8
  %arrayidx1247 = getelementptr inbounds i16**, i16*** %759, i64 1
  %760 = load i16**, i16*** %arrayidx1247, align 8
  %arrayidx1248 = getelementptr inbounds i16*, i16** %760, i64 %idxprom1246
  %761 = load i16*, i16** %arrayidx1248, align 8
  %arrayidx1249 = getelementptr inbounds i16, i16* %761, i64 %idxprom1245
  store i16 0, i16* %arrayidx1249, align 2
  %762 = load i32, i32* %pic_block_y, align 4
  %idxprom1250 = sext i32 %762 to i64
  %763 = load i32, i32* %pic_block_x, align 4
  %idxprom1251 = sext i32 %763 to i64
  %764 = load i16***, i16**** @direct_ref_idx, align 8
  %arrayidx1252 = getelementptr inbounds i16**, i16*** %764, i64 0
  %765 = load i16**, i16*** %arrayidx1252, align 8
  %arrayidx1253 = getelementptr inbounds i16*, i16** %765, i64 %idxprom1251
  %766 = load i16*, i16** %arrayidx1253, align 8
  %arrayidx1254 = getelementptr inbounds i16, i16* %766, i64 %idxprom1250
  store i16 0, i16* %arrayidx1254, align 2
  br label %if.end.1255

if.end.1255:                                      ; preds = %if.then.1244, %land.lhs.true.1240, %if.end.1236
  %767 = load i32, i32* %pic_block_y, align 4
  %idxprom1256 = sext i32 %767 to i64
  %768 = load i32, i32* %pic_block_x, align 4
  %idxprom1257 = sext i32 %768 to i64
  %769 = load i16***, i16**** @direct_ref_idx, align 8
  %arrayidx1258 = getelementptr inbounds i16**, i16*** %769, i64 1
  %770 = load i16**, i16*** %arrayidx1258, align 8
  %arrayidx1259 = getelementptr inbounds i16*, i16** %770, i64 %idxprom1257
  %771 = load i16*, i16** %arrayidx1259, align 8
  %arrayidx1260 = getelementptr inbounds i16, i16* %771, i64 %idxprom1256
  %772 = load i16, i16* %arrayidx1260, align 2
  %conv1261 = sext i16 %772 to i32
  %cmp1262 = icmp eq i32 %conv1261, -1
  br i1 %cmp1262, label %if.then.1264, label %if.else.1269

if.then.1264:                                     ; preds = %if.end.1255
  %773 = load i32, i32* %pic_block_y, align 4
  %idxprom1265 = sext i32 %773 to i64
  %774 = load i32, i32* %pic_block_x, align 4
  %idxprom1266 = sext i32 %774 to i64
  %775 = load i16**, i16*** @direct_pdir, align 8
  %arrayidx1267 = getelementptr inbounds i16*, i16** %775, i64 %idxprom1266
  %776 = load i16*, i16** %arrayidx1267, align 8
  %arrayidx1268 = getelementptr inbounds i16, i16* %776, i64 %idxprom1265
  store i16 0, i16* %arrayidx1268, align 2
  br label %if.end.1289

if.else.1269:                                     ; preds = %if.end.1255
  %777 = load i32, i32* %pic_block_y, align 4
  %idxprom1270 = sext i32 %777 to i64
  %778 = load i32, i32* %pic_block_x, align 4
  %idxprom1271 = sext i32 %778 to i64
  %779 = load i16***, i16**** @direct_ref_idx, align 8
  %arrayidx1272 = getelementptr inbounds i16**, i16*** %779, i64 0
  %780 = load i16**, i16*** %arrayidx1272, align 8
  %arrayidx1273 = getelementptr inbounds i16*, i16** %780, i64 %idxprom1271
  %781 = load i16*, i16** %arrayidx1273, align 8
  %arrayidx1274 = getelementptr inbounds i16, i16* %781, i64 %idxprom1270
  %782 = load i16, i16* %arrayidx1274, align 2
  %conv1275 = sext i16 %782 to i32
  %cmp1276 = icmp eq i32 %conv1275, -1
  br i1 %cmp1276, label %if.then.1278, label %if.else.1283

if.then.1278:                                     ; preds = %if.else.1269
  %783 = load i32, i32* %pic_block_y, align 4
  %idxprom1279 = sext i32 %783 to i64
  %784 = load i32, i32* %pic_block_x, align 4
  %idxprom1280 = sext i32 %784 to i64
  %785 = load i16**, i16*** @direct_pdir, align 8
  %arrayidx1281 = getelementptr inbounds i16*, i16** %785, i64 %idxprom1280
  %786 = load i16*, i16** %arrayidx1281, align 8
  %arrayidx1282 = getelementptr inbounds i16, i16* %786, i64 %idxprom1279
  store i16 1, i16* %arrayidx1282, align 2
  br label %if.end.1288

if.else.1283:                                     ; preds = %if.else.1269
  %787 = load i32, i32* %pic_block_y, align 4
  %idxprom1284 = sext i32 %787 to i64
  %788 = load i32, i32* %pic_block_x, align 4
  %idxprom1285 = sext i32 %788 to i64
  %789 = load i16**, i16*** @direct_pdir, align 8
  %arrayidx1286 = getelementptr inbounds i16*, i16** %789, i64 %idxprom1285
  %790 = load i16*, i16** %arrayidx1286, align 8
  %arrayidx1287 = getelementptr inbounds i16, i16* %790, i64 %idxprom1284
  store i16 2, i16* %arrayidx1287, align 2
  br label %if.end.1288

if.end.1288:                                      ; preds = %if.else.1283, %if.then.1278
  br label %if.end.1289

if.end.1289:                                      ; preds = %if.end.1288, %if.then.1264
  br label %for.inc

for.inc:                                          ; preds = %if.end.1289
  %791 = load i32, i32* %block_x, align 4
  %inc = add nsw i32 %791, 1
  store i32 %inc, i32* %block_x, align 4
  br label %for.cond.1061

for.end:                                          ; preds = %for.cond.1061
  br label %for.inc.1290

for.inc.1290:                                     ; preds = %for.end
  %792 = load i32, i32* %block_y, align 4
  %inc1291 = add nsw i32 %792, 1
  store i32 %inc1291, i32* %block_y, align 4
  br label %for.cond

for.end.1292:                                     ; preds = %for.cond
  br label %if.end.1610

if.else.1293:                                     ; preds = %if.end.7
  store i32 0, i32* %block_y, align 4
  br label %for.cond.1294

for.cond.1294:                                    ; preds = %for.inc.1607, %if.else.1293
  %793 = load i32, i32* %block_y, align 4
  %cmp1295 = icmp slt i32 %793, 4
  br i1 %cmp1295, label %for.body.1297, label %for.end.1609

for.body.1297:                                    ; preds = %for.cond.1294
  %794 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y1298 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %794, i32 0, i32 34
  %795 = load i32, i32* %pix_y1298, align 4
  %shr1299 = ashr i32 %795, 2
  %796 = load i32, i32* %block_y, align 4
  %add1300 = add nsw i32 %shr1299, %796
  store i32 %add1300, i32* %pic_block_y, align 4
  %797 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %opix_y1301 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %797, i32 0, i32 38
  %798 = load i32, i32* %opix_y1301, align 4
  %shr1302 = ashr i32 %798, 2
  %799 = load i32, i32* %block_y, align 4
  %add1303 = add nsw i32 %shr1302, %799
  store i32 %add1303, i32* %opic_block_y, align 4
  store i32 0, i32* %block_x, align 4
  br label %for.cond.1304

for.cond.1304:                                    ; preds = %for.inc.1604, %for.body.1297
  %800 = load i32, i32* %block_x, align 4
  %cmp1305 = icmp slt i32 %800, 4
  br i1 %cmp1305, label %for.body.1307, label %for.end.1606

for.body.1307:                                    ; preds = %for.cond.1304
  %801 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %MbaffFrameFlag1309 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %801, i32 0, i32 90
  %802 = load i32, i32* %MbaffFrameFlag1309, align 4
  %tobool1310 = icmp ne i32 %802, 0
  br i1 %tobool1310, label %land.lhs.true.1311, label %cond.false.1319

land.lhs.true.1311:                               ; preds = %for.body.1307
  %803 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_field1312 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %803, i32 0, i32 22
  %804 = load i32, i32* %mb_field1312, align 4
  %tobool1313 = icmp ne i32 %804, 0
  br i1 %tobool1313, label %cond.true.1314, label %cond.false.1319

cond.true.1314:                                   ; preds = %land.lhs.true.1311
  %805 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr1315 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %805, i32 0, i32 3
  %806 = load i32, i32* %current_mb_nr1315, align 4
  %rem1316 = srem i32 %806, 2
  %tobool1317 = icmp ne i32 %rem1316, 0
  %cond1318 = select i1 %tobool1317, i32 4, i32 2
  br label %cond.end.1320

cond.false.1319:                                  ; preds = %land.lhs.true.1311, %for.body.1307
  br label %cond.end.1320

cond.end.1320:                                    ; preds = %cond.false.1319, %cond.true.1314
  %cond1321 = phi i32 [ %cond1318, %cond.true.1314 ], [ 0, %cond.false.1319 ]
  store i32 %cond1321, i32* %list_offset, align 4
  %807 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x1322 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %807, i32 0, i32 33
  %808 = load i32, i32* %pix_x1322, align 4
  %shr1323 = ashr i32 %808, 2
  %809 = load i32, i32* %block_x, align 4
  %add1324 = add nsw i32 %shr1323, %809
  store i32 %add1324, i32* %pic_block_x, align 4
  %810 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %opix_x1325 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %810, i32 0, i32 37
  %811 = load i32, i32* %opix_x1325, align 4
  %shr1326 = ashr i32 %811, 2
  %812 = load i32, i32* %block_x, align 4
  %add1327 = add nsw i32 %shr1326, %812
  store i32 %add1327, i32* %opic_block_x, align 4
  %813 = load i32, i32* %opic_block_y, align 4
  %idxprom1328 = sext i32 %813 to i64
  %814 = load i32, i32* %opic_block_x, align 4
  %idxprom1329 = sext i32 %814 to i64
  %815 = load i16***, i16**** %co_located_ref_idx, align 8
  %arrayidx1330 = getelementptr inbounds i16**, i16*** %815, i64 0
  %816 = load i16**, i16*** %arrayidx1330, align 8
  %arrayidx1331 = getelementptr inbounds i16*, i16** %816, i64 %idxprom1329
  %817 = load i16*, i16** %arrayidx1331, align 8
  %arrayidx1332 = getelementptr inbounds i16, i16* %817, i64 %idxprom1328
  %818 = load i16, i16* %arrayidx1332, align 2
  %conv1333 = sext i16 %818 to i32
  %cmp1334 = icmp eq i32 %conv1333, -1
  %cond1336 = select i1 %cmp1334, i32 1, i32 0
  store i32 %cond1336, i32* %refList, align 4
  %819 = load i32, i32* %opic_block_y, align 4
  %idxprom1337 = sext i32 %819 to i64
  %820 = load i32, i32* %opic_block_x, align 4
  %idxprom1338 = sext i32 %820 to i64
  %821 = load i32, i32* %refList, align 4
  %idxprom1339 = sext i32 %821 to i64
  %822 = load i16***, i16**** %co_located_ref_idx, align 8
  %arrayidx1340 = getelementptr inbounds i16**, i16*** %822, i64 %idxprom1339
  %823 = load i16**, i16*** %arrayidx1340, align 8
  %arrayidx1341 = getelementptr inbounds i16*, i16** %823, i64 %idxprom1338
  %824 = load i16*, i16** %arrayidx1341, align 8
  %arrayidx1342 = getelementptr inbounds i16, i16* %824, i64 %idxprom1337
  %825 = load i16, i16* %arrayidx1342, align 2
  %conv1343 = sext i16 %825 to i32
  store i32 %conv1343, i32* %ref_idx1308, align 4
  %826 = load i32, i32* %ref_idx1308, align 4
  %cmp1344 = icmp eq i32 %826, -1
  br i1 %cmp1344, label %if.then.1346, label %if.else.1393

if.then.1346:                                     ; preds = %cond.end.1320
  %827 = load i32, i32* %block_y, align 4
  %idxprom1347 = sext i32 %827 to i64
  %828 = load i32, i32* %block_x, align 4
  %idxprom1348 = sext i32 %828 to i64
  %829 = load i16******, i16******* %all_mvs, align 8
  %arrayidx1349 = getelementptr inbounds i16*****, i16****** %829, i64 %idxprom1348
  %830 = load i16*****, i16****** %arrayidx1349, align 8
  %arrayidx1350 = getelementptr inbounds i16****, i16***** %830, i64 %idxprom1347
  %831 = load i16****, i16***** %arrayidx1350, align 8
  %arrayidx1351 = getelementptr inbounds i16***, i16**** %831, i64 0
  %832 = load i16***, i16**** %arrayidx1351, align 8
  %arrayidx1352 = getelementptr inbounds i16**, i16*** %832, i64 0
  %833 = load i16**, i16*** %arrayidx1352, align 8
  %arrayidx1353 = getelementptr inbounds i16*, i16** %833, i64 0
  %834 = load i16*, i16** %arrayidx1353, align 8
  %arrayidx1354 = getelementptr inbounds i16, i16* %834, i64 0
  store i16 0, i16* %arrayidx1354, align 2
  %835 = load i32, i32* %block_y, align 4
  %idxprom1355 = sext i32 %835 to i64
  %836 = load i32, i32* %block_x, align 4
  %idxprom1356 = sext i32 %836 to i64
  %837 = load i16******, i16******* %all_mvs, align 8
  %arrayidx1357 = getelementptr inbounds i16*****, i16****** %837, i64 %idxprom1356
  %838 = load i16*****, i16****** %arrayidx1357, align 8
  %arrayidx1358 = getelementptr inbounds i16****, i16***** %838, i64 %idxprom1355
  %839 = load i16****, i16***** %arrayidx1358, align 8
  %arrayidx1359 = getelementptr inbounds i16***, i16**** %839, i64 0
  %840 = load i16***, i16**** %arrayidx1359, align 8
  %arrayidx1360 = getelementptr inbounds i16**, i16*** %840, i64 0
  %841 = load i16**, i16*** %arrayidx1360, align 8
  %arrayidx1361 = getelementptr inbounds i16*, i16** %841, i64 0
  %842 = load i16*, i16** %arrayidx1361, align 8
  %arrayidx1362 = getelementptr inbounds i16, i16* %842, i64 1
  store i16 0, i16* %arrayidx1362, align 2
  %843 = load i32, i32* %block_y, align 4
  %idxprom1363 = sext i32 %843 to i64
  %844 = load i32, i32* %block_x, align 4
  %idxprom1364 = sext i32 %844 to i64
  %845 = load i16******, i16******* %all_mvs, align 8
  %arrayidx1365 = getelementptr inbounds i16*****, i16****** %845, i64 %idxprom1364
  %846 = load i16*****, i16****** %arrayidx1365, align 8
  %arrayidx1366 = getelementptr inbounds i16****, i16***** %846, i64 %idxprom1363
  %847 = load i16****, i16***** %arrayidx1366, align 8
  %arrayidx1367 = getelementptr inbounds i16***, i16**** %847, i64 1
  %848 = load i16***, i16**** %arrayidx1367, align 8
  %arrayidx1368 = getelementptr inbounds i16**, i16*** %848, i64 0
  %849 = load i16**, i16*** %arrayidx1368, align 8
  %arrayidx1369 = getelementptr inbounds i16*, i16** %849, i64 0
  %850 = load i16*, i16** %arrayidx1369, align 8
  %arrayidx1370 = getelementptr inbounds i16, i16* %850, i64 0
  store i16 0, i16* %arrayidx1370, align 2
  %851 = load i32, i32* %block_y, align 4
  %idxprom1371 = sext i32 %851 to i64
  %852 = load i32, i32* %block_x, align 4
  %idxprom1372 = sext i32 %852 to i64
  %853 = load i16******, i16******* %all_mvs, align 8
  %arrayidx1373 = getelementptr inbounds i16*****, i16****** %853, i64 %idxprom1372
  %854 = load i16*****, i16****** %arrayidx1373, align 8
  %arrayidx1374 = getelementptr inbounds i16****, i16***** %854, i64 %idxprom1371
  %855 = load i16****, i16***** %arrayidx1374, align 8
  %arrayidx1375 = getelementptr inbounds i16***, i16**** %855, i64 1
  %856 = load i16***, i16**** %arrayidx1375, align 8
  %arrayidx1376 = getelementptr inbounds i16**, i16*** %856, i64 0
  %857 = load i16**, i16*** %arrayidx1376, align 8
  %arrayidx1377 = getelementptr inbounds i16*, i16** %857, i64 0
  %858 = load i16*, i16** %arrayidx1377, align 8
  %arrayidx1378 = getelementptr inbounds i16, i16* %858, i64 1
  store i16 0, i16* %arrayidx1378, align 2
  %859 = load i32, i32* %pic_block_y, align 4
  %idxprom1379 = sext i32 %859 to i64
  %860 = load i32, i32* %pic_block_x, align 4
  %idxprom1380 = sext i32 %860 to i64
  %861 = load i16***, i16**** @direct_ref_idx, align 8
  %arrayidx1381 = getelementptr inbounds i16**, i16*** %861, i64 0
  %862 = load i16**, i16*** %arrayidx1381, align 8
  %arrayidx1382 = getelementptr inbounds i16*, i16** %862, i64 %idxprom1380
  %863 = load i16*, i16** %arrayidx1382, align 8
  %arrayidx1383 = getelementptr inbounds i16, i16* %863, i64 %idxprom1379
  store i16 0, i16* %arrayidx1383, align 2
  %864 = load i32, i32* %pic_block_y, align 4
  %idxprom1384 = sext i32 %864 to i64
  %865 = load i32, i32* %pic_block_x, align 4
  %idxprom1385 = sext i32 %865 to i64
  %866 = load i16***, i16**** @direct_ref_idx, align 8
  %arrayidx1386 = getelementptr inbounds i16**, i16*** %866, i64 1
  %867 = load i16**, i16*** %arrayidx1386, align 8
  %arrayidx1387 = getelementptr inbounds i16*, i16** %867, i64 %idxprom1385
  %868 = load i16*, i16** %arrayidx1387, align 8
  %arrayidx1388 = getelementptr inbounds i16, i16* %868, i64 %idxprom1384
  store i16 0, i16* %arrayidx1388, align 2
  %869 = load i32, i32* %pic_block_y, align 4
  %idxprom1389 = sext i32 %869 to i64
  %870 = load i32, i32* %pic_block_x, align 4
  %idxprom1390 = sext i32 %870 to i64
  %871 = load i16**, i16*** @direct_pdir, align 8
  %arrayidx1391 = getelementptr inbounds i16*, i16** %871, i64 %idxprom1390
  %872 = load i16*, i16** %arrayidx1391, align 8
  %arrayidx1392 = getelementptr inbounds i16, i16* %872, i64 %idxprom1389
  store i16 2, i16* %arrayidx1392, align 2
  br label %if.end.1603

if.else.1393:                                     ; preds = %cond.end.1320
  store i32 -135792468, i32* %mapped_idx, align 4
  store i32 0, i32* %iref, align 4
  br label %for.cond.1394

for.cond.1394:                                    ; preds = %for.inc.1427, %if.else.1393
  %873 = load i32, i32* %iref, align 4
  %874 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %num_ref_idx_l0_active = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %874, i32 0, i32 79
  %875 = load i32, i32* %num_ref_idx_l0_active, align 4
  %876 = load i32, i32* %list_offset, align 4
  %add1395 = add nsw i32 0, %876
  %idxprom1396 = sext i32 %add1395 to i64
  %arrayidx1397 = getelementptr inbounds [6 x i32], [6 x i32]* @listXsize, i32 0, i64 %idxprom1396
  %877 = load i32, i32* %arrayidx1397, align 4
  %cmp1398 = icmp slt i32 %875, %877
  br i1 %cmp1398, label %cond.true.1400, label %cond.false.1402

cond.true.1400:                                   ; preds = %for.cond.1394
  %878 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %num_ref_idx_l0_active1401 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %878, i32 0, i32 79
  %879 = load i32, i32* %num_ref_idx_l0_active1401, align 4
  br label %cond.end.1406

cond.false.1402:                                  ; preds = %for.cond.1394
  %880 = load i32, i32* %list_offset, align 4
  %add1403 = add nsw i32 0, %880
  %idxprom1404 = sext i32 %add1403 to i64
  %arrayidx1405 = getelementptr inbounds [6 x i32], [6 x i32]* @listXsize, i32 0, i64 %idxprom1404
  %881 = load i32, i32* %arrayidx1405, align 4
  br label %cond.end.1406

cond.end.1406:                                    ; preds = %cond.false.1402, %cond.true.1400
  %cond1407 = phi i32 [ %879, %cond.true.1400 ], [ %881, %cond.false.1402 ]
  %cmp1408 = icmp slt i32 %873, %cond1407
  br i1 %cmp1408, label %for.body.1410, label %for.end.1429

for.body.1410:                                    ; preds = %cond.end.1406
  %882 = load i32, i32* %iref, align 4
  %idxprom1411 = sext i32 %882 to i64
  %883 = load i32, i32* %list_offset, align 4
  %add1412 = add nsw i32 0, %883
  %idxprom1413 = sext i32 %add1412 to i64
  %884 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_pic_num = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %884, i32 0, i32 6
  %arrayidx1414 = getelementptr inbounds [6 x [33 x i64]], [6 x [33 x i64]]* %ref_pic_num, i32 0, i64 %idxprom1413
  %arrayidx1415 = getelementptr inbounds [33 x i64], [33 x i64]* %arrayidx1414, i32 0, i64 %idxprom1411
  %885 = load i64, i64* %arrayidx1415, align 8
  %886 = load i32, i32* %opic_block_y, align 4
  %idxprom1416 = sext i32 %886 to i64
  %887 = load i32, i32* %opic_block_x, align 4
  %idxprom1417 = sext i32 %887 to i64
  %888 = load i32, i32* %refList, align 4
  %idxprom1418 = sext i32 %888 to i64
  %889 = load i64***, i64**** %co_located_ref_id, align 8
  %arrayidx1419 = getelementptr inbounds i64**, i64*** %889, i64 %idxprom1418
  %890 = load i64**, i64*** %arrayidx1419, align 8
  %arrayidx1420 = getelementptr inbounds i64*, i64** %890, i64 %idxprom1417
  %891 = load i64*, i64** %arrayidx1420, align 8
  %arrayidx1421 = getelementptr inbounds i64, i64* %891, i64 %idxprom1416
  %892 = load i64, i64* %arrayidx1421, align 8
  %cmp1422 = icmp eq i64 %885, %892
  br i1 %cmp1422, label %if.then.1424, label %if.else.1425

if.then.1424:                                     ; preds = %for.body.1410
  %893 = load i32, i32* %iref, align 4
  store i32 %893, i32* %mapped_idx, align 4
  br label %for.end.1429

if.else.1425:                                     ; preds = %for.body.1410
  store i32 -135792468, i32* %mapped_idx, align 4
  br label %if.end.1426

if.end.1426:                                      ; preds = %if.else.1425
  br label %for.inc.1427

for.inc.1427:                                     ; preds = %if.end.1426
  %894 = load i32, i32* %iref, align 4
  %inc1428 = add nsw i32 %894, 1
  store i32 %inc1428, i32* %iref, align 4
  br label %for.cond.1394

for.end.1429:                                     ; preds = %if.then.1424, %cond.end.1406
  %895 = load i32, i32* %mapped_idx, align 4
  %cmp1430 = icmp ne i32 %895, -135792468
  br i1 %cmp1430, label %if.then.1432, label %if.else.1587

if.then.1432:                                     ; preds = %for.end.1429
  %896 = load i32, i32* %mapped_idx, align 4
  %idxprom1433 = sext i32 %896 to i64
  %897 = load i32, i32* %list_offset, align 4
  %add1434 = add nsw i32 0, %897
  %idxprom1435 = sext i32 %add1434 to i64
  %898 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mvscale = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %898, i32 0, i32 83
  %arrayidx1436 = getelementptr inbounds [6 x [15 x i32]], [6 x [15 x i32]]* %mvscale, i32 0, i64 %idxprom1435
  %arrayidx1437 = getelementptr inbounds [15 x i32], [15 x i32]* %arrayidx1436, i32 0, i64 %idxprom1433
  %899 = load i32, i32* %arrayidx1437, align 4
  store i32 %899, i32* %mv_scale, align 4
  %900 = load i32, i32* %mv_scale, align 4
  %cmp1438 = icmp eq i32 %900, 9999
  br i1 %cmp1438, label %if.then.1440, label %if.else.1487

if.then.1440:                                     ; preds = %if.then.1432
  %901 = load i32, i32* %opic_block_y, align 4
  %idxprom1441 = sext i32 %901 to i64
  %902 = load i32, i32* %opic_block_x, align 4
  %idxprom1442 = sext i32 %902 to i64
  %903 = load i32, i32* %refList, align 4
  %idxprom1443 = sext i32 %903 to i64
  %904 = load i16****, i16***** %co_located_mv, align 8
  %arrayidx1444 = getelementptr inbounds i16***, i16**** %904, i64 %idxprom1443
  %905 = load i16***, i16**** %arrayidx1444, align 8
  %arrayidx1445 = getelementptr inbounds i16**, i16*** %905, i64 %idxprom1442
  %906 = load i16**, i16*** %arrayidx1445, align 8
  %arrayidx1446 = getelementptr inbounds i16*, i16** %906, i64 %idxprom1441
  %907 = load i16*, i16** %arrayidx1446, align 8
  %arrayidx1447 = getelementptr inbounds i16, i16* %907, i64 0
  %908 = load i16, i16* %arrayidx1447, align 2
  %909 = load i32, i32* %block_y, align 4
  %idxprom1448 = sext i32 %909 to i64
  %910 = load i32, i32* %block_x, align 4
  %idxprom1449 = sext i32 %910 to i64
  %911 = load i16******, i16******* %all_mvs, align 8
  %arrayidx1450 = getelementptr inbounds i16*****, i16****** %911, i64 %idxprom1449
  %912 = load i16*****, i16****** %arrayidx1450, align 8
  %arrayidx1451 = getelementptr inbounds i16****, i16***** %912, i64 %idxprom1448
  %913 = load i16****, i16***** %arrayidx1451, align 8
  %arrayidx1452 = getelementptr inbounds i16***, i16**** %913, i64 0
  %914 = load i16***, i16**** %arrayidx1452, align 8
  %arrayidx1453 = getelementptr inbounds i16**, i16*** %914, i64 0
  %915 = load i16**, i16*** %arrayidx1453, align 8
  %arrayidx1454 = getelementptr inbounds i16*, i16** %915, i64 0
  %916 = load i16*, i16** %arrayidx1454, align 8
  %arrayidx1455 = getelementptr inbounds i16, i16* %916, i64 0
  store i16 %908, i16* %arrayidx1455, align 2
  %917 = load i32, i32* %opic_block_y, align 4
  %idxprom1456 = sext i32 %917 to i64
  %918 = load i32, i32* %opic_block_x, align 4
  %idxprom1457 = sext i32 %918 to i64
  %919 = load i32, i32* %refList, align 4
  %idxprom1458 = sext i32 %919 to i64
  %920 = load i16****, i16***** %co_located_mv, align 8
  %arrayidx1459 = getelementptr inbounds i16***, i16**** %920, i64 %idxprom1458
  %921 = load i16***, i16**** %arrayidx1459, align 8
  %arrayidx1460 = getelementptr inbounds i16**, i16*** %921, i64 %idxprom1457
  %922 = load i16**, i16*** %arrayidx1460, align 8
  %arrayidx1461 = getelementptr inbounds i16*, i16** %922, i64 %idxprom1456
  %923 = load i16*, i16** %arrayidx1461, align 8
  %arrayidx1462 = getelementptr inbounds i16, i16* %923, i64 1
  %924 = load i16, i16* %arrayidx1462, align 2
  %925 = load i32, i32* %block_y, align 4
  %idxprom1463 = sext i32 %925 to i64
  %926 = load i32, i32* %block_x, align 4
  %idxprom1464 = sext i32 %926 to i64
  %927 = load i16******, i16******* %all_mvs, align 8
  %arrayidx1465 = getelementptr inbounds i16*****, i16****** %927, i64 %idxprom1464
  %928 = load i16*****, i16****** %arrayidx1465, align 8
  %arrayidx1466 = getelementptr inbounds i16****, i16***** %928, i64 %idxprom1463
  %929 = load i16****, i16***** %arrayidx1466, align 8
  %arrayidx1467 = getelementptr inbounds i16***, i16**** %929, i64 0
  %930 = load i16***, i16**** %arrayidx1467, align 8
  %arrayidx1468 = getelementptr inbounds i16**, i16*** %930, i64 0
  %931 = load i16**, i16*** %arrayidx1468, align 8
  %arrayidx1469 = getelementptr inbounds i16*, i16** %931, i64 0
  %932 = load i16*, i16** %arrayidx1469, align 8
  %arrayidx1470 = getelementptr inbounds i16, i16* %932, i64 1
  store i16 %924, i16* %arrayidx1470, align 2
  %933 = load i32, i32* %block_y, align 4
  %idxprom1471 = sext i32 %933 to i64
  %934 = load i32, i32* %block_x, align 4
  %idxprom1472 = sext i32 %934 to i64
  %935 = load i16******, i16******* %all_mvs, align 8
  %arrayidx1473 = getelementptr inbounds i16*****, i16****** %935, i64 %idxprom1472
  %936 = load i16*****, i16****** %arrayidx1473, align 8
  %arrayidx1474 = getelementptr inbounds i16****, i16***** %936, i64 %idxprom1471
  %937 = load i16****, i16***** %arrayidx1474, align 8
  %arrayidx1475 = getelementptr inbounds i16***, i16**** %937, i64 1
  %938 = load i16***, i16**** %arrayidx1475, align 8
  %arrayidx1476 = getelementptr inbounds i16**, i16*** %938, i64 0
  %939 = load i16**, i16*** %arrayidx1476, align 8
  %arrayidx1477 = getelementptr inbounds i16*, i16** %939, i64 0
  %940 = load i16*, i16** %arrayidx1477, align 8
  %arrayidx1478 = getelementptr inbounds i16, i16* %940, i64 0
  store i16 0, i16* %arrayidx1478, align 2
  %941 = load i32, i32* %block_y, align 4
  %idxprom1479 = sext i32 %941 to i64
  %942 = load i32, i32* %block_x, align 4
  %idxprom1480 = sext i32 %942 to i64
  %943 = load i16******, i16******* %all_mvs, align 8
  %arrayidx1481 = getelementptr inbounds i16*****, i16****** %943, i64 %idxprom1480
  %944 = load i16*****, i16****** %arrayidx1481, align 8
  %arrayidx1482 = getelementptr inbounds i16****, i16***** %944, i64 %idxprom1479
  %945 = load i16****, i16***** %arrayidx1482, align 8
  %arrayidx1483 = getelementptr inbounds i16***, i16**** %945, i64 1
  %946 = load i16***, i16**** %arrayidx1483, align 8
  %arrayidx1484 = getelementptr inbounds i16**, i16*** %946, i64 0
  %947 = load i16**, i16*** %arrayidx1484, align 8
  %arrayidx1485 = getelementptr inbounds i16*, i16** %947, i64 0
  %948 = load i16*, i16** %arrayidx1485, align 8
  %arrayidx1486 = getelementptr inbounds i16, i16* %948, i64 1
  store i16 0, i16* %arrayidx1486, align 2
  br label %if.end.1571

if.else.1487:                                     ; preds = %if.then.1432
  %949 = load i32, i32* %mv_scale, align 4
  %950 = load i32, i32* %opic_block_y, align 4
  %idxprom1488 = sext i32 %950 to i64
  %951 = load i32, i32* %opic_block_x, align 4
  %idxprom1489 = sext i32 %951 to i64
  %952 = load i32, i32* %refList, align 4
  %idxprom1490 = sext i32 %952 to i64
  %953 = load i16****, i16***** %co_located_mv, align 8
  %arrayidx1491 = getelementptr inbounds i16***, i16**** %953, i64 %idxprom1490
  %954 = load i16***, i16**** %arrayidx1491, align 8
  %arrayidx1492 = getelementptr inbounds i16**, i16*** %954, i64 %idxprom1489
  %955 = load i16**, i16*** %arrayidx1492, align 8
  %arrayidx1493 = getelementptr inbounds i16*, i16** %955, i64 %idxprom1488
  %956 = load i16*, i16** %arrayidx1493, align 8
  %arrayidx1494 = getelementptr inbounds i16, i16* %956, i64 0
  %957 = load i16, i16* %arrayidx1494, align 2
  %conv1495 = sext i16 %957 to i32
  %mul1496 = mul nsw i32 %949, %conv1495
  %add1497 = add nsw i32 %mul1496, 128
  %shr1498 = ashr i32 %add1497, 8
  %conv1499 = trunc i32 %shr1498 to i16
  %958 = load i32, i32* %mapped_idx, align 4
  %idxprom1500 = sext i32 %958 to i64
  %959 = load i32, i32* %block_y, align 4
  %idxprom1501 = sext i32 %959 to i64
  %960 = load i32, i32* %block_x, align 4
  %idxprom1502 = sext i32 %960 to i64
  %961 = load i16******, i16******* %all_mvs, align 8
  %arrayidx1503 = getelementptr inbounds i16*****, i16****** %961, i64 %idxprom1502
  %962 = load i16*****, i16****** %arrayidx1503, align 8
  %arrayidx1504 = getelementptr inbounds i16****, i16***** %962, i64 %idxprom1501
  %963 = load i16****, i16***** %arrayidx1504, align 8
  %arrayidx1505 = getelementptr inbounds i16***, i16**** %963, i64 0
  %964 = load i16***, i16**** %arrayidx1505, align 8
  %arrayidx1506 = getelementptr inbounds i16**, i16*** %964, i64 %idxprom1500
  %965 = load i16**, i16*** %arrayidx1506, align 8
  %arrayidx1507 = getelementptr inbounds i16*, i16** %965, i64 0
  %966 = load i16*, i16** %arrayidx1507, align 8
  %arrayidx1508 = getelementptr inbounds i16, i16* %966, i64 0
  store i16 %conv1499, i16* %arrayidx1508, align 2
  %967 = load i32, i32* %mv_scale, align 4
  %968 = load i32, i32* %opic_block_y, align 4
  %idxprom1509 = sext i32 %968 to i64
  %969 = load i32, i32* %opic_block_x, align 4
  %idxprom1510 = sext i32 %969 to i64
  %970 = load i32, i32* %refList, align 4
  %idxprom1511 = sext i32 %970 to i64
  %971 = load i16****, i16***** %co_located_mv, align 8
  %arrayidx1512 = getelementptr inbounds i16***, i16**** %971, i64 %idxprom1511
  %972 = load i16***, i16**** %arrayidx1512, align 8
  %arrayidx1513 = getelementptr inbounds i16**, i16*** %972, i64 %idxprom1510
  %973 = load i16**, i16*** %arrayidx1513, align 8
  %arrayidx1514 = getelementptr inbounds i16*, i16** %973, i64 %idxprom1509
  %974 = load i16*, i16** %arrayidx1514, align 8
  %arrayidx1515 = getelementptr inbounds i16, i16* %974, i64 1
  %975 = load i16, i16* %arrayidx1515, align 2
  %conv1516 = sext i16 %975 to i32
  %mul1517 = mul nsw i32 %967, %conv1516
  %add1518 = add nsw i32 %mul1517, 128
  %shr1519 = ashr i32 %add1518, 8
  %conv1520 = trunc i32 %shr1519 to i16
  %976 = load i32, i32* %mapped_idx, align 4
  %idxprom1521 = sext i32 %976 to i64
  %977 = load i32, i32* %block_y, align 4
  %idxprom1522 = sext i32 %977 to i64
  %978 = load i32, i32* %block_x, align 4
  %idxprom1523 = sext i32 %978 to i64
  %979 = load i16******, i16******* %all_mvs, align 8
  %arrayidx1524 = getelementptr inbounds i16*****, i16****** %979, i64 %idxprom1523
  %980 = load i16*****, i16****** %arrayidx1524, align 8
  %arrayidx1525 = getelementptr inbounds i16****, i16***** %980, i64 %idxprom1522
  %981 = load i16****, i16***** %arrayidx1525, align 8
  %arrayidx1526 = getelementptr inbounds i16***, i16**** %981, i64 0
  %982 = load i16***, i16**** %arrayidx1526, align 8
  %arrayidx1527 = getelementptr inbounds i16**, i16*** %982, i64 %idxprom1521
  %983 = load i16**, i16*** %arrayidx1527, align 8
  %arrayidx1528 = getelementptr inbounds i16*, i16** %983, i64 0
  %984 = load i16*, i16** %arrayidx1528, align 8
  %arrayidx1529 = getelementptr inbounds i16, i16* %984, i64 1
  store i16 %conv1520, i16* %arrayidx1529, align 2
  %985 = load i32, i32* %mv_scale, align 4
  %sub = sub nsw i32 %985, 256
  %986 = load i32, i32* %opic_block_y, align 4
  %idxprom1530 = sext i32 %986 to i64
  %987 = load i32, i32* %opic_block_x, align 4
  %idxprom1531 = sext i32 %987 to i64
  %988 = load i32, i32* %refList, align 4
  %idxprom1532 = sext i32 %988 to i64
  %989 = load i16****, i16***** %co_located_mv, align 8
  %arrayidx1533 = getelementptr inbounds i16***, i16**** %989, i64 %idxprom1532
  %990 = load i16***, i16**** %arrayidx1533, align 8
  %arrayidx1534 = getelementptr inbounds i16**, i16*** %990, i64 %idxprom1531
  %991 = load i16**, i16*** %arrayidx1534, align 8
  %arrayidx1535 = getelementptr inbounds i16*, i16** %991, i64 %idxprom1530
  %992 = load i16*, i16** %arrayidx1535, align 8
  %arrayidx1536 = getelementptr inbounds i16, i16* %992, i64 0
  %993 = load i16, i16* %arrayidx1536, align 2
  %conv1537 = sext i16 %993 to i32
  %mul1538 = mul nsw i32 %sub, %conv1537
  %add1539 = add nsw i32 %mul1538, 128
  %shr1540 = ashr i32 %add1539, 8
  %conv1541 = trunc i32 %shr1540 to i16
  %994 = load i32, i32* %block_y, align 4
  %idxprom1542 = sext i32 %994 to i64
  %995 = load i32, i32* %block_x, align 4
  %idxprom1543 = sext i32 %995 to i64
  %996 = load i16******, i16******* %all_mvs, align 8
  %arrayidx1544 = getelementptr inbounds i16*****, i16****** %996, i64 %idxprom1543
  %997 = load i16*****, i16****** %arrayidx1544, align 8
  %arrayidx1545 = getelementptr inbounds i16****, i16***** %997, i64 %idxprom1542
  %998 = load i16****, i16***** %arrayidx1545, align 8
  %arrayidx1546 = getelementptr inbounds i16***, i16**** %998, i64 1
  %999 = load i16***, i16**** %arrayidx1546, align 8
  %arrayidx1547 = getelementptr inbounds i16**, i16*** %999, i64 0
  %1000 = load i16**, i16*** %arrayidx1547, align 8
  %arrayidx1548 = getelementptr inbounds i16*, i16** %1000, i64 0
  %1001 = load i16*, i16** %arrayidx1548, align 8
  %arrayidx1549 = getelementptr inbounds i16, i16* %1001, i64 0
  store i16 %conv1541, i16* %arrayidx1549, align 2
  %1002 = load i32, i32* %mv_scale, align 4
  %sub1550 = sub nsw i32 %1002, 256
  %1003 = load i32, i32* %opic_block_y, align 4
  %idxprom1551 = sext i32 %1003 to i64
  %1004 = load i32, i32* %opic_block_x, align 4
  %idxprom1552 = sext i32 %1004 to i64
  %1005 = load i32, i32* %refList, align 4
  %idxprom1553 = sext i32 %1005 to i64
  %1006 = load i16****, i16***** %co_located_mv, align 8
  %arrayidx1554 = getelementptr inbounds i16***, i16**** %1006, i64 %idxprom1553
  %1007 = load i16***, i16**** %arrayidx1554, align 8
  %arrayidx1555 = getelementptr inbounds i16**, i16*** %1007, i64 %idxprom1552
  %1008 = load i16**, i16*** %arrayidx1555, align 8
  %arrayidx1556 = getelementptr inbounds i16*, i16** %1008, i64 %idxprom1551
  %1009 = load i16*, i16** %arrayidx1556, align 8
  %arrayidx1557 = getelementptr inbounds i16, i16* %1009, i64 1
  %1010 = load i16, i16* %arrayidx1557, align 2
  %conv1558 = sext i16 %1010 to i32
  %mul1559 = mul nsw i32 %sub1550, %conv1558
  %add1560 = add nsw i32 %mul1559, 128
  %shr1561 = ashr i32 %add1560, 8
  %conv1562 = trunc i32 %shr1561 to i16
  %1011 = load i32, i32* %block_y, align 4
  %idxprom1563 = sext i32 %1011 to i64
  %1012 = load i32, i32* %block_x, align 4
  %idxprom1564 = sext i32 %1012 to i64
  %1013 = load i16******, i16******* %all_mvs, align 8
  %arrayidx1565 = getelementptr inbounds i16*****, i16****** %1013, i64 %idxprom1564
  %1014 = load i16*****, i16****** %arrayidx1565, align 8
  %arrayidx1566 = getelementptr inbounds i16****, i16***** %1014, i64 %idxprom1563
  %1015 = load i16****, i16***** %arrayidx1566, align 8
  %arrayidx1567 = getelementptr inbounds i16***, i16**** %1015, i64 1
  %1016 = load i16***, i16**** %arrayidx1567, align 8
  %arrayidx1568 = getelementptr inbounds i16**, i16*** %1016, i64 0
  %1017 = load i16**, i16*** %arrayidx1568, align 8
  %arrayidx1569 = getelementptr inbounds i16*, i16** %1017, i64 0
  %1018 = load i16*, i16** %arrayidx1569, align 8
  %arrayidx1570 = getelementptr inbounds i16, i16* %1018, i64 1
  store i16 %conv1562, i16* %arrayidx1570, align 2
  br label %if.end.1571

if.end.1571:                                      ; preds = %if.else.1487, %if.then.1440
  %1019 = load i32, i32* %mapped_idx, align 4
  %conv1572 = trunc i32 %1019 to i16
  %1020 = load i32, i32* %pic_block_y, align 4
  %idxprom1573 = sext i32 %1020 to i64
  %1021 = load i32, i32* %pic_block_x, align 4
  %idxprom1574 = sext i32 %1021 to i64
  %1022 = load i16***, i16**** @direct_ref_idx, align 8
  %arrayidx1575 = getelementptr inbounds i16**, i16*** %1022, i64 0
  %1023 = load i16**, i16*** %arrayidx1575, align 8
  %arrayidx1576 = getelementptr inbounds i16*, i16** %1023, i64 %idxprom1574
  %1024 = load i16*, i16** %arrayidx1576, align 8
  %arrayidx1577 = getelementptr inbounds i16, i16* %1024, i64 %idxprom1573
  store i16 %conv1572, i16* %arrayidx1577, align 2
  %1025 = load i32, i32* %pic_block_y, align 4
  %idxprom1578 = sext i32 %1025 to i64
  %1026 = load i32, i32* %pic_block_x, align 4
  %idxprom1579 = sext i32 %1026 to i64
  %1027 = load i16***, i16**** @direct_ref_idx, align 8
  %arrayidx1580 = getelementptr inbounds i16**, i16*** %1027, i64 1
  %1028 = load i16**, i16*** %arrayidx1580, align 8
  %arrayidx1581 = getelementptr inbounds i16*, i16** %1028, i64 %idxprom1579
  %1029 = load i16*, i16** %arrayidx1581, align 8
  %arrayidx1582 = getelementptr inbounds i16, i16* %1029, i64 %idxprom1578
  store i16 0, i16* %arrayidx1582, align 2
  %1030 = load i32, i32* %pic_block_y, align 4
  %idxprom1583 = sext i32 %1030 to i64
  %1031 = load i32, i32* %pic_block_x, align 4
  %idxprom1584 = sext i32 %1031 to i64
  %1032 = load i16**, i16*** @direct_pdir, align 8
  %arrayidx1585 = getelementptr inbounds i16*, i16** %1032, i64 %idxprom1584
  %1033 = load i16*, i16** %arrayidx1585, align 8
  %arrayidx1586 = getelementptr inbounds i16, i16* %1033, i64 %idxprom1583
  store i16 2, i16* %arrayidx1586, align 2
  br label %if.end.1602

if.else.1587:                                     ; preds = %for.end.1429
  %1034 = load i32, i32* %pic_block_y, align 4
  %idxprom1588 = sext i32 %1034 to i64
  %1035 = load i32, i32* %pic_block_x, align 4
  %idxprom1589 = sext i32 %1035 to i64
  %1036 = load i16***, i16**** @direct_ref_idx, align 8
  %arrayidx1590 = getelementptr inbounds i16**, i16*** %1036, i64 0
  %1037 = load i16**, i16*** %arrayidx1590, align 8
  %arrayidx1591 = getelementptr inbounds i16*, i16** %1037, i64 %idxprom1589
  %1038 = load i16*, i16** %arrayidx1591, align 8
  %arrayidx1592 = getelementptr inbounds i16, i16* %1038, i64 %idxprom1588
  store i16 -1, i16* %arrayidx1592, align 2
  %1039 = load i32, i32* %pic_block_y, align 4
  %idxprom1593 = sext i32 %1039 to i64
  %1040 = load i32, i32* %pic_block_x, align 4
  %idxprom1594 = sext i32 %1040 to i64
  %1041 = load i16***, i16**** @direct_ref_idx, align 8
  %arrayidx1595 = getelementptr inbounds i16**, i16*** %1041, i64 1
  %1042 = load i16**, i16*** %arrayidx1595, align 8
  %arrayidx1596 = getelementptr inbounds i16*, i16** %1042, i64 %idxprom1594
  %1043 = load i16*, i16** %arrayidx1596, align 8
  %arrayidx1597 = getelementptr inbounds i16, i16* %1043, i64 %idxprom1593
  store i16 -1, i16* %arrayidx1597, align 2
  %1044 = load i32, i32* %pic_block_y, align 4
  %idxprom1598 = sext i32 %1044 to i64
  %1045 = load i32, i32* %pic_block_x, align 4
  %idxprom1599 = sext i32 %1045 to i64
  %1046 = load i16**, i16*** @direct_pdir, align 8
  %arrayidx1600 = getelementptr inbounds i16*, i16** %1046, i64 %idxprom1599
  %1047 = load i16*, i16** %arrayidx1600, align 8
  %arrayidx1601 = getelementptr inbounds i16, i16* %1047, i64 %idxprom1598
  store i16 -1, i16* %arrayidx1601, align 2
  br label %if.end.1602

if.end.1602:                                      ; preds = %if.else.1587, %if.end.1571
  br label %if.end.1603

if.end.1603:                                      ; preds = %if.end.1602, %if.then.1346
  br label %for.inc.1604

for.inc.1604:                                     ; preds = %if.end.1603
  %1048 = load i32, i32* %block_x, align 4
  %inc1605 = add nsw i32 %1048, 1
  store i32 %inc1605, i32* %block_x, align 4
  br label %for.cond.1304

for.end.1606:                                     ; preds = %for.cond.1304
  br label %for.inc.1607

for.inc.1607:                                     ; preds = %for.end.1606
  %1049 = load i32, i32* %block_y, align 4
  %inc1608 = add nsw i32 %1049, 1
  store i32 %inc1608, i32* %block_y, align 4
  br label %for.cond.1294

for.end.1609:                                     ; preds = %for.cond.1294
  br label %if.end.1610

if.end.1610:                                      ; preds = %for.end.1609, %for.end.1292
  ret void
}

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #3

; Function Attrs: nounwind uwtable
define i32 @sign(i32 %a, i32 %b) #0 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  %x = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  store i32 %b, i32* %b.addr, align 4
  %0 = load i32, i32* %a.addr, align 4
  %cmp = icmp slt i32 %0, 0
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %1 = load i32, i32* %a.addr, align 4
  %sub = sub nsw i32 0, %1
  br label %cond.end

cond.false:                                       ; preds = %entry
  %2 = load i32, i32* %a.addr, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub, %cond.true ], [ %2, %cond.false ]
  store i32 %cond, i32* %x, align 4
  %3 = load i32, i32* %b.addr, align 4
  %cmp1 = icmp sge i32 %3, 0
  br i1 %cmp1, label %if.then, label %if.else

if.then:                                          ; preds = %cond.end
  %4 = load i32, i32* %x, align 4
  store i32 %4, i32* %retval
  br label %return

if.else:                                          ; preds = %cond.end
  %5 = load i32, i32* %x, align 4
  %sub2 = sub nsw i32 0, %5
  store i32 %sub2, i32* %retval
  br label %return

return:                                           ; preds = %if.else, %if.then
  %6 = load i32, i32* %retval
  ret i32 %6
}

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { nounwind readnone "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone }

!llvm.ident = !{!0}

!0 = !{!"clang version 3.7.0 (tags/RELEASE_370/final)"}
