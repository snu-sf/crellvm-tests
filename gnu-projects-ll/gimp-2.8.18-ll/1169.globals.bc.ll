; ModuleID = './plug-ins/gimpressionist/globals.bc'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.gimpressionist_vals_t = type { i32, double, double, i32, double, double, double, double, i32, double, double, double, i32, i32, [200 x i8], [200 x i8], %struct._GimpRGB, i32, i32, [50 x %struct.vector], i32, i32, double, double, double, i32, i32, i32, i32, i32, double, i32, double, double, i32, double, [50 x %struct.smvector], i32, double, i32, i32, i32, i32, double }
%struct._GimpRGB = type { double, double, double, double }
%struct.vector = type { double, double, double, double, double, double, i32 }
%struct.smvector = type { double, double, double, double }
%struct._GRand = type opaque

@img_has_alpha = global i32 0, align 4
@pcvals = global %struct.gimpressionist_vals_t zeroinitializer, align 8
@defaultpcvals = internal constant %struct.gimpressionist_vals_t { i32 4, double 0.000000e+00, double 6.000000e+01, i32 0, double 1.200000e+01, double 2.000000e+01, double 2.000000e+01, double 1.000000e+00, i32 1, double 1.000000e-01, double 0.000000e+00, double 3.000000e+01, i32 0, i32 0, [200 x i8] c"defaultbrush.pgmx i8] c"defaultpaper.pgmstruct._GimpRGB { double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 1.000000e+00 }, i32 1, i32 0, [50 x %struct.vector] [%struct.vector { double 5.000000e-01, double 5.000000e-01, double 0.000000e+00, double 0.000000e+00, double 1.000000e+00, double 1.000000e+00, i32 0 }, %struct.vector zeroinitializer, %struct.vector zeroinitializer, %struct.vector zeroinitializer, %struct.vector zeroinitializer, %struct.vector zeroinitializer, %struct.vector zeroinitializer, %struct.vector zeroinitializer, %struct.vector zeroinitializer, %struct.vector zeroinitializer, %struct.vector zeroinitializer, %struct.vector zeroinitializer, %struct.vector zeroinitializer, %struct.vector zeroinitializer, %struct.vector zeroinitializer, %struct.vector zeroinitializer, %struct.vector zeroinitializer, %struct.vector zeroinitializer, %struct.vector zeroinitializer, %struct.vector zeroinitializer, %struct.vector zeroinitializer, %struct.vector zeroinitializer, %struct.vector zeroinitializer, %struct.vector zeroinitializer, %struct.vector zeroinitializer, %struct.vector zeroinitializer, %struct.vector zeroinitializer, %struct.vector zeroinitializer, %struct.vector zeroinitializer, %struct.vector zeroinitializer, %struct.vector zeroinitializer, %struct.vector zeroinitializer, %struct.vector zeroinitializer, %struct.vector zeroinitializer, %struct.vector zeroinitializer, %struct.vector zeroinitializer, %struct.vector zeroinitializer, %struct.vector zeroinitializer, %struct.vector zeroinitializer, %struct.vector zeroinitializer, %struct.vector zeroinitializer, %struct.vector zeroinitializer, %struct.vector zeroinitializer, %struct.vector zeroinitializer, %struct.vector zeroinitializer, %struct.vector zeroinitializer, %struct.vector zeroinitializer, %struct.vector zeroinitializer, %struct.vector zeroinitializer, %struct.vector zeroinitializer], i32 1, i32 0, double 0.000000e+00, double 0.000000e+00, double 1.000000e+00, i32 0, i32 0, i32 0, i32 0, i32 0, double 2.000000e+01, i32 1, double 1.000000e+01, double 2.000000e+01, i32 0, double 1.000000e-01, [50 x %struct.smvector] [%struct.smvector { double 5.000000e-01, double 5.000000e-01, double 5.000000e+01, double 1.000000e+00 }, %struct.smvector zeroinitializer, %struct.smvector zeroinitializer, %struct.smvector zeroinitializer, %struct.smvector zeroinitializer, %struct.smvector zeroinitializer, %struct.smvector zeroinitializer, %struct.smvector zeroinitializer, %struct.smvector zeroinitializer, %struct.smvector zeroinitializer, %struct.smvector zeroinitializer, %struct.smvector zeroinitializer, %struct.smvector zeroinitializer, %struct.smvector zeroinitializer, %struct.smvector zeroinitializer, %struct.smvector zeroinitializer, %struct.smvector zeroinitializer, %struct.smvector zeroinitializer, %struct.smvector zeroinitializer, %struct.smvector zeroinitializer, %struct.smvector zeroinitializer, %struct.smvector zeroinitializer, %struct.smvector zeroinitializer, %struct.smvector zeroinitializer, %struct.smvector zeroinitializer, %struct.smvector zeroinitializer, %struct.smvector zeroinitializer, %struct.smvector zeroinitializer, %struct.smvector zeroinitializer, %struct.smvector zeroinitializer, %struct.smvector zeroinitializer, %struct.smvector zeroinitializer, %struct.smvector zeroinitializer, %struct.smvector zeroinitializer, %struct.smvector zeroinitializer, %struct.smvector zeroinitializer, %struct.smvector zeroinitializer, %struct.smvector zeroinitializer, %struct.smvector zeroinitializer, %struct.smvector zeroinitializer, %struct.smvector zeroinitializer, %struct.smvector zeroinitializer, %struct.smvector zeroinitializer, %struct.smvector zeroinitializer, %struct.smvector zeroinitializer, %struct.smvector zeroinitializer, %struct.smvector zeroinitializer, %struct.smvector zeroinitializer, %struct.smvector zeroinitializer, %struct.smvector zeroinitializer], i32 1, double 1.000000e+00, i32 0, i32 10, i32 4, i32 0, double 0.000000e+00 }, align 8
@random_generator = global %struct._GRand* null, align 8

; Function Attrs: nounwind uwtable
define void @restore_default_values() #0 {
entry:
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast (%struct.gimpressionist_vals_t* @pcvals to i8*), i8* bitcast (%struct.gimpressionist_vals_t* @defaultpcvals to i8*), i64 5088, i32 8, i1 false)
  ret void
}

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #1

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"clang version 3.7.0 (tags/RELEASE_370/final)"}
