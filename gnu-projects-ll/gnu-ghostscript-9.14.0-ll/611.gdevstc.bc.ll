; ModuleID = './gdevstc.bc'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.gx_device_procs_s = type { i32 (%struct.gx_device_s*)*, void (%struct.gx_device_s*, %struct.gs_matrix_s*)*, i32 (%struct.gx_device_s*)*, i32 (%struct.gx_device_s*, i32, i32)*, i32 (%struct.gx_device_s*)*, i64 (%struct.gx_device_s*, i16*)*, i32 (%struct.gx_device_s*, i64, i16*)*, i32 (%struct.gx_device_s*, i32, i32, i32, i32, i64)*, i32 (%struct.gx_device_s*, %struct.gx_tile_bitmap_s*, i32, i32, i32, i32, i64, i64, i32, i32)*, i32 (%struct.gx_device_s*, i8*, i32, i32, i64, i32, i32, i32, i32, i64, i64)*, i32 (%struct.gx_device_s*, i8*, i32, i32, i64, i32, i32, i32, i32)*, i32 (%struct.gx_device_s*, i32, i32, i32, i32, i64)*, i32 (%struct.gx_device_s*, i32, i8*, i8**)*, i32 (%struct.gx_device_s*, %struct.gs_param_list_s*)*, i32 (%struct.gx_device_s*, %struct.gs_param_list_s*)*, i64 (%struct.gx_device_s*, i16*)*, %struct.gx_xfont_procs_s* (%struct.gx_device_s*)*, %struct.gx_device_s* (%struct.gx_device_s*)*, i64 (%struct.gx_device_s*, i16, i16, i16, i16)*, %struct.gx_device_s* (%struct.gx_device_s*)*, i32 (%struct.gx_device_s*, i32)*, i32 (%struct.gx_device_s*, i8*, i32, i32, i64, i32, i32, i32, i32, i64, i32)*, i32 (%struct.gx_device_s*, i32, i32*)*, i32 (%struct.gx_device_s*, i8*, i32, i32, i64, i64*, %struct.gx_tile_bitmap_s*, i64*, i32, i32, i32, i32, i32, i32, i32)*, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gx_path_s*, %struct.gx_fill_params_s*, %struct.gx_device_color_s*, %struct.gx_clip_path_s*)*, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gx_path_s*, %struct.gx_stroke_params_s*, %struct.gx_device_color_s*, %struct.gx_clip_path_s*)*, i32 (%struct.gx_device_s*, i8*, i32, i32, i64, i32, i32, i32, i32, %struct.gx_device_color_s*, i32, i32, %struct.gx_clip_path_s*)*, i32 (%struct.gx_device_s*, %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s*, i32, i32, i32, %struct.gx_device_color_s*, i32)*, i32 (%struct.gx_device_s*, i32, i32, i32, i32, i32, i32, %struct.gx_device_color_s*, i32)*, i32 (%struct.gx_device_s*, i32, i32, i32, i32, i32, i32, %struct.gx_device_color_s*, i32)*, i32 (%struct.gx_device_s*, i32, i32, i32, i32, %struct.gx_device_color_s*, i32, i32, i32)*, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gs_image1_s*, i32, %struct.gs_int_rect_s*, %struct.gx_device_color_s*, %struct.gx_clip_path_s*, %struct.gs_memory_s*, %struct.gx_image_enum_common_s**)*, i32 (%struct.gx_device_s*, %struct.gx_image_enum_common_s*, i8**, i32, i32, i32)*, i32 (%struct.gx_device_s*, %struct.gx_image_enum_common_s*, i32)*, i32 (%struct.gx_device_s*, %struct.gx_strip_bitmap_s*, i32, i32, i32, i32, i64, i64, i32, i32)*, i32 (%struct.gx_device_s*, i8*, i32, i32, i64, i64*, %struct.gx_strip_bitmap_s*, i64*, i32, i32, i32, i32, i32, i32, i32)*, void (%struct.gx_device_s*, %struct.gs_fixed_rect_s*)*, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gs_matrix_s*, %struct.gs_image_common_s*, %struct.gs_int_rect_s*, %struct.gx_device_color_s*, %struct.gx_clip_path_s*, %struct.gs_memory_s*, %struct.gx_image_enum_common_s**)*, i32 (%struct.gx_device_s*, %struct.gs_int_rect_s*, %struct.gs_get_bits_params_s*, %struct.gs_int_rect_s**)*, i32 (%struct.gx_device_s*, i64, i16*)*, i32 (%struct.gx_device_s*, %struct.gx_device_s**, %struct.gs_composite_s*, %struct.gs_imager_state_s*, %struct.gs_memory_s*, %struct.gx_device_s*)*, i32 (%struct.gx_device_s*, %struct.gs_param_list_s*)*, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gs_text_params_s*, %struct.gs_font_s*, %struct.gx_path_s*, %struct.gx_device_color_s*, %struct.gx_clip_path_s*, %struct.gs_memory_s*, %struct.gs_text_enum_s**)*, i32 (%struct.gx_device_s*, %struct.gx_device_s*)*, i32 (%struct.gx_device_s*, %struct.gs_transparency_group_params_s*, %struct.gs_rect_s*, %struct.gs_imager_state_s*, %struct.gs_memory_s*)*, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*)*, i32 (%struct.gx_device_s*, %struct.gx_transparency_mask_params_s*, %struct.gs_rect_s*, %struct.gs_imager_state_s*, %struct.gs_memory_s*)*, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*)*, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*)*, %struct.gx_cm_color_map_procs_s* (%struct.gx_device_s*)*, i32 (%struct.gx_device_s*, i8*, i32, i32)*, i64 (%struct.gx_device_s*, i16*)*, i32 (%struct.gx_device_s*, i64, i16*)*, i32 (%struct.gx_device_s*, i64, %struct.gs_pattern1_instance_s*, i32)*, i32 (%struct.gx_device_s*, %struct.gs_fixed_rect_s*, %struct.gs_imager_state_s*, %struct.gx_device_color_s*, %struct.gx_clip_path_s*)*, i32 (%struct.gx_device_s*, %struct.gs_color_space_s*, i8*, i32)*, i32 (%struct.gx_device_s*, %struct.gs_fill_attributes_s*, i32, i32, i32, i32*, i32*, i32*, i32)*, i32 (%struct.gx_device_s*, %struct.gs_fill_attributes_s*, %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s*, i32*, i32*, i32*, i32*)*, i32 (%struct.gx_device_s*, %struct.gs_fill_attributes_s*, %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s*, i32*, i32*, i32*)*, i32 (%struct.gx_device_s*, %struct.gs_state_s*)*, %struct.gs_devn_params_s* (%struct.gx_device_s*)*, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gx_device_color_s*)*, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*)*, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*)*, i32 (%struct.gx_device_s*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, i32 (%struct.gx_device_s*, i32, i8*, i32)*, i32 (%struct.gx_device_s*, i8*, i32, i32, i64, i32, i32, i32, i32, i32)*, i32 (%struct.gx_device_s*, %struct.cmm_dev_profile_s**)*, void (%struct.gx_device_s*, i32)*, i32 (%struct.gx_device_s*, i8*, i32, i32, i64, i64*, %struct.gx_strip_bitmap_s*, i64*, i32, i32, i32, i32, i32, i32, i32, i32)*, i32 (%struct.gx_device_s*, %struct.gx_strip_bitmap_s*, i32, i32, i32, i32, %struct.gx_device_color_s*, %struct.gx_device_color_s*, i32, i32)*, i32 (%struct.gx_device_s*, i8*, i32, i32, i64, i32, i32, i32, i32, %struct.gx_device_color_s*, i32)*, i32 (%struct.gx_device_s*, %struct.gx_process_page_options_s*)* }
%struct.gx_device_s = type { i32, %struct.gx_device_procs_s*, i8*, %struct.gs_memory_s*, %struct.gs_memory_struct_type_s*, i32, void (%struct.gx_device_s*)*, %struct.rc_header_s, i32, i32, i32, %struct.gx_device_color_info_s, %struct.gx_device_cached_colors_s, i32, i32, i32, i32, i32, i32, [2 x float], [4 x float], i32, [2 x float], [2 x float], [2 x float], [4 x float], i64, i64, i32, i32, i32, i32, i32, i64, i64, %struct.gx_stroked_gradient_recognizer_s, i32, i32, %struct.gdev_space_params_s, %struct.cmm_dev_profile_s*, i32, %struct.gx_page_device_procs_s, %struct.gx_device_procs_s }
%struct.gs_memory_s = type { %struct.gs_memory_s*, %struct.gs_memory_procs_s, %struct.gs_lib_ctx_s*, %struct.gs_memory_s*, %struct.gs_memory_s* }
%struct.gs_memory_procs_s = type { i8* (%struct.gs_memory_s*, i32, i8*)*, i8* (%struct.gs_memory_s*, i8*, i32, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)*, %struct.gs_memory_s* (%struct.gs_memory_s*)*, void (%struct.gs_memory_s*, %struct.gs_memory_status_s*)*, void (%struct.gs_memory_s*, i32, i8*)*, void (%struct.gs_memory_s*)*, i8* (%struct.gs_memory_s*, i32, i8*)*, i8* (%struct.gs_memory_s*, %struct.gs_memory_struct_type_s*, i8*)*, i8* (%struct.gs_memory_s*, %struct.gs_memory_struct_type_s*, i8*)*, i8* (%struct.gs_memory_s*, i32, i32, i8*)*, i8* (%struct.gs_memory_s*, i32, i32, i8*)*, i8* (%struct.gs_memory_s*, i32, %struct.gs_memory_struct_type_s*, i8*)*, i8* (%struct.gs_memory_s*, i32, %struct.gs_memory_struct_type_s*, i8*)*, i32 (%struct.gs_memory_s*, i8*)*, %struct.gs_memory_struct_type_s* (%struct.gs_memory_s*, i8*)*, i8* (%struct.gs_memory_s*, i32, i8*)*, i8* (%struct.gs_memory_s*, i32, i8*)*, i8* (%struct.gs_memory_s*, i8*, i32, i32, i8*)*, void (%struct.gs_memory_s*, i8*, i32, i8*)*, i32 (%struct.gs_memory_s*, %struct.gs_gc_root_s*, %struct.gs_ptr_procs_s*, i8**, i8*)*, void (%struct.gs_memory_s*, %struct.gs_gc_root_s*, i8*)*, void (%struct.gs_memory_s*, i32)* }
%struct.gs_memory_status_s = type { i64, i64, i32 }
%struct.gs_gc_root_s = type { %struct.gs_gc_root_s*, %struct.gs_ptr_procs_s*, i8**, i32 }
%struct.gs_ptr_procs_s = type { void (%struct.enum_ptr_s*, %struct.gc_state_s*)*, i32 (%struct.enum_ptr_s*, %struct.gc_state_s*)*, i8* (i8*, %struct.gc_state_s*)* }
%struct.enum_ptr_s = type { i8*, i32 }
%struct.gc_state_s = type opaque
%struct.gs_lib_ctx_s = type { %struct.gs_memory_s*, %struct._IO_FILE*, %struct._IO_FILE*, %struct._IO_FILE*, %struct._IO_FILE*, i32, i32, i32, i8*, i8*, i32 (i8*, i8*, i32)*, i32 (i8*, i8*, i32)*, i32 (i8*, i8*, i32)*, i32 (i8*)*, i64, i8*, %struct.name_table_s*, i32, %struct.gx_io_device_s**, i32, i32, [2 x i64], %struct.gs_font_dir_s*, i32, i8*, i32, i8*, %struct.gs_fapi_server_s** }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.name_table_s = type opaque
%struct.gx_io_device_s = type opaque
%struct.gs_font_dir_s = type opaque
%struct.gs_fapi_server_s = type opaque
%struct.gs_memory_struct_type_s = type { i32, i8*, %struct.struct_shared_procs_s*, void (%struct.gs_memory_s*, i8*, i32, %struct.gs_memory_struct_type_s*)*, %struct.gs_ptr_procs_s* (%struct.gs_memory_s*, i8*, i32, i32, %struct.enum_ptr_s*, %struct.gs_memory_struct_type_s*, %struct.gc_state_s*)*, void (i8*, i32, %struct.gs_memory_struct_type_s*, %struct.gc_state_s*)*, void (%struct.gs_memory_s*, i8*)*, i8* }
%struct.struct_shared_procs_s = type opaque
%struct.rc_header_s = type { i64, %struct.gs_memory_s*, void (%struct.gs_memory_s*, i8*, i8*)* }
%struct.gx_device_color_info_s = type { i32, i32, i32, i16, i8, i32, i32, i32, i32, %struct.gx_device_anti_alias_info_s, i32, [64 x i8], [64 x i8], [64 x i64], i8*, i32, i64, i32 }
%struct.gx_device_anti_alias_info_s = type { i32, i32 }
%struct.gx_device_cached_colors_s = type { i64, i64 }
%struct.gx_stroked_gradient_recognizer_s = type { i32, [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s] }
%struct.gs_fixed_point_s = type { i32, i32 }
%struct.gdev_space_params_s = type { i64, i64, %struct.gx_band_params_s, i32, i32 }
%struct.gx_band_params_s = type { i32, i32, i64 }
%struct.cmm_dev_profile_s = type { [4 x %struct.cmm_profile_s*], %struct.cmm_profile_s*, %struct.cmm_profile_s*, %struct.cmm_profile_s*, [4 x %struct.gsicc_rendering_param_s], i32, i32, i32, i32, i32, i32, %struct.gsicc_namelist_s*, i32, %struct.gs_memory_s*, %struct.rc_header_s }
%struct.cmm_profile_s = type { i8, i8, i32, i32, i32, i32, %struct.gs_range_icc_s, i64, i32, [15 x i32], i32, i32, i32, %struct.gsicc_rendering_param_s, i8*, %struct.gx_device_s*, %struct.gsicc_namelist_s*, i8*, %struct.rc_header_s, i32, i8*, %struct.gs_memory_s*, %struct.gx_monitor_s* }
%struct.gs_range_icc_s = type { [15 x %struct.gs_range_s] }
%struct.gs_range_s = type { float, float }
%struct.gsicc_rendering_param_s = type { i32, i32, i32, i32, i32, i32 }
%struct.gx_monitor_s = type { %struct.gs_memory_s*, %union.gp_monitor }
%union.gp_monitor = type { i8* }
%struct.gsicc_namelist_s = type { i32, %struct.gsicc_colorname_s*, i8*, %struct.gs_devicen_color_map_s*, i32 }
%struct.gsicc_colorname_s = type { i8*, i32, %struct.gsicc_colorname_s* }
%struct.gs_devicen_color_map_s = type { i32, i32, i32, i32, i64, [64 x i32] }
%struct.gx_page_device_procs_s = type { i32 (%struct.gx_device_s*, %struct.gs_state_s*)*, i32 (%struct.gx_device_s*, %struct.gs_state_s*)*, i32 (%struct.gx_device_s*, i32, %struct.gs_state_s*)* }
%struct.gs_state_s = type opaque
%struct.gs_matrix_s = type { float, float, float, float, float, float }
%struct.gx_tile_bitmap_s = type { i8*, i32, %struct.gs_int_point_s, i64, i16, i16 }
%struct.gs_int_point_s = type { i32, i32 }
%struct.gx_xfont_procs_s = type opaque
%struct.gs_imager_state_s = type { i32, %struct.gs_memory_s*, i8*, %struct.gx_line_params_s, i32, %struct.gs_matrix_fixed_s, i32, %struct.gs_point_s, %struct.gs_point_s, i32, i32, i16, i32, %struct.gs_transparency_source_s, %struct.gs_transparency_source_s, %struct.gs_xstate_trans_flags, i64, i32, i32, i32, %struct.gx_device_s*, i32, i32, i32, i32, i32, i32, float, %struct.gs_fixed_point_s, i32, i32, i32, float, i32, i32, %struct.gsicc_manager_s*, %struct.gsicc_link_cache_s*, %struct.gsicc_profile_cache_s*, %struct.gx_color_map_procs_s* (%struct.gs_imager_state_s*, %struct.gx_device_s*)*, %struct.gs_halftone_s*, [2 x %struct.gs_int_point_s], %struct.gx_device_halftone_s*, %struct.gs_cie_render_s*, i32, %struct.gx_transfer_map_s*, %struct.gx_transfer_map_s*, %struct.gx_transfer_s, [64 x %struct.gx_transfer_map_s*], %struct.gx_cie_joint_caches_s*, %struct.gx_color_map_procs_s*, %struct.gs_devicen_color_map_s, %struct.gx_pattern_cache_s*, %struct.gs_color_space_s*, %struct.gs_color_space_s*, %struct.gx_cie_joint_caches_s*, %struct.gs_devicen_color_map_s }
%struct.gx_line_params_s = type { float, i32, i32, i32, i32, i32, float, float, float, i32, %struct.gs_matrix_s, %struct.gx_dash_params_s }
%struct.gx_dash_params_s = type { float*, i32, float, i32, float, i32, i32, float }
%struct.gs_matrix_fixed_s = type { float, float, float, float, float, float, i32, i32, i32 }
%struct.gs_point_s = type { double, double }
%struct.gs_transparency_source_s = type { float }
%struct.gs_xstate_trans_flags = type { i32, i32 }
%struct.gsicc_manager_s = type { %struct.cmm_profile_s*, %struct.cmm_profile_s*, %struct.cmm_profile_s*, %struct.cmm_profile_s*, %struct.cmm_profile_s*, %struct.cmm_profile_s*, %struct.gsicc_devicen_s*, %struct.gsicc_smask_s*, i32, %struct.cmm_srcgtag_profile_s*, %struct.gs_memory_s*, %struct.rc_header_s }
%struct.gsicc_devicen_s = type { %struct.gsicc_devicen_entry_s*, %struct.gsicc_devicen_entry_s*, i32 }
%struct.gsicc_devicen_entry_s = type { %struct.cmm_profile_s*, %struct.gsicc_devicen_entry_s* }
%struct.gsicc_smask_s = type { %struct.cmm_profile_s*, %struct.cmm_profile_s*, %struct.cmm_profile_s*, %struct.gs_memory_s*, i32 }
%struct.cmm_srcgtag_profile_s = type { [3 x %struct.cmm_profile_s*], [3 x %struct.gsicc_rendering_param_s], [3 x %struct.cmm_profile_s*], [3 x %struct.gsicc_rendering_param_s], %struct.cmm_profile_s*, %struct.gs_memory_s*, i32, i8*, %struct.rc_header_s }
%struct.gsicc_link_cache_s = type { %struct.gsicc_link_s*, i32, %struct.rc_header_s, %struct.gs_memory_s*, %struct.gx_monitor_s*, %struct.gx_semaphore_s*, i32 }
%struct.gsicc_link_s = type { i8*, %struct.gscms_procs_s, %struct.gsicc_hashlink_s, %struct.gsicc_link_cache_s*, i32, %struct.gsicc_link_s*, %struct.gx_semaphore_s*, i32, i32, i32, i32, i32, i32, %struct.gscms_procs_s, i32, i32, i32 }
%struct.gsicc_hashlink_s = type { i64, i64, i64, i64 }
%struct.gscms_procs_s = type { void (%struct.gx_device_s*, %struct.gsicc_link_s*, %struct.gsicc_bufferdesc_s*, %struct.gsicc_bufferdesc_s*, i8*, i8*)*, void (%struct.gx_device_s*, %struct.gsicc_link_s*, i8*, i8*, i32)*, void (%struct.gsicc_link_s*)*, i32 (i8*, i32)* }
%struct.gsicc_bufferdesc_s = type { i8, i8, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.gx_semaphore_s = type { %struct.gs_memory_s*, %union.gp_semaphore }
%union.gp_semaphore = type { i8* }
%struct.gsicc_profile_cache_s = type { %struct.gsicc_profile_entry_s*, i32, %struct.rc_header_s, %struct.gs_memory_s* }
%struct.gsicc_profile_entry_s = type { %struct.gs_color_space_s*, %struct.gsicc_profile_entry_s*, i64 }
%struct.gs_halftone_s = type opaque
%struct.gx_device_halftone_s = type opaque
%struct.gs_cie_render_s = type opaque
%struct.gx_transfer_map_s = type { %struct.rc_header_s, float (double, %struct.gx_transfer_map_s*)*, %struct.gs_mapping_closure_s, i64, [256 x i16] }
%struct.gs_mapping_closure_s = type { float (double, %struct.gx_transfer_map_s*, i8*)*, i8* }
%struct.gx_transfer_s = type { i32, %struct.gx_transfer_map_s*, i32, %struct.gx_transfer_map_s*, i32, %struct.gx_transfer_map_s*, i32, %struct.gx_transfer_map_s* }
%struct.gx_color_map_procs_s = type { void (i16, %struct.gx_device_color_s*, %struct.gs_imager_state_s*, %struct.gx_device_s*, i32)*, void (i16, i16, i16, %struct.gx_device_color_s*, %struct.gs_imager_state_s*, %struct.gx_device_s*, i32)*, void (i16, i16, i16, i16, %struct.gx_device_color_s*, %struct.gs_imager_state_s*, %struct.gx_device_s*, i32, %struct.gs_color_space_s*)*, void (i16, i16, i16, i16, %struct.gx_device_color_s*, %struct.gs_imager_state_s*, %struct.gx_device_s*, i32)*, void (i16, %struct.gx_device_color_s*, %struct.gs_imager_state_s*, %struct.gx_device_s*, i32)*, void (i16*, %struct.gx_device_color_s*, %struct.gs_imager_state_s*, %struct.gx_device_s*, i32)*, i32 (%struct.gs_imager_state_s*, %struct.gx_device_s*)* }
%struct.gx_pattern_cache_s = type opaque
%struct.gs_color_space_s = type { %struct.gs_color_space_type_s*, %struct.rc_header_s, i64, %struct.gs_color_space_s*, %struct.gs_color_space_s*, %struct.client_color_space_data_s*, %struct.cmm_profile_s*, %union.anon }
%struct.gs_color_space_type_s = type { i32, i32, i32, %struct.gs_memory_struct_type_s*, i32 (%struct.gs_color_space_s*)*, void (%struct.gs_client_color_s*, %struct.gs_color_space_s*)*, void (%struct.gs_client_color_s*, %struct.gs_color_space_s*)*, %struct.gs_color_space_s* (%struct.gs_color_space_s*, %struct.gs_imager_state_s*)*, i32 (%struct.gs_client_color_s*, %struct.gs_color_space_s*, i16*, %struct.gs_imager_state_s*, %struct.gx_device_s*)*, i32 (i16*, %struct.gs_color_space_s*, %struct.gx_device_color_s*, %struct.gs_imager_state_s*, %struct.gx_device_s*, i32)*, i32 (%struct.gs_client_color_s*, %struct.gs_color_space_s*, %struct.gx_device_color_s*, %struct.gs_imager_state_s*, %struct.gx_device_s*, i32)*, i32 (%struct.gs_color_space_s*, %struct.gs_state_s*)*, i32 (%struct.gs_color_space_s*, %struct.gs_state_s*)*, void (%struct.gs_color_space_s*)*, void (%struct.gs_client_color_s*, %struct.gs_color_space_s*, i32)*, i32 (%struct.gs_color_space_s*, %struct.stream_s*)*, i32 (%struct.gs_color_space_s*, %struct.gs_imager_state_s*, %struct.gx_device_s*, %struct.gs_client_color_s*, %struct.gs_client_color_s*, %struct.gs_client_color_s*, %struct.gs_client_color_s*, float, %struct.gsicc_link_s*)*, i32 (%struct.gs_color_space_s*)* }
%struct.gs_client_color_s = type { %struct.gs_pattern_instance_s*, %struct.gs_paint_color_s }
%struct.gs_pattern_instance_s = type { %struct.rc_header_s, %struct.gs_pattern_type_s*, %struct.gs_state_s*, i64 }
%struct.gs_pattern_type_s = type opaque
%struct.gs_paint_color_s = type { [64 x float] }
%struct.stream_s = type opaque
%struct.client_color_space_data_s = type { void (%struct.gs_color_space_s*, i32)* }
%union.anon = type { %struct.gs_device_n_params_s }
%struct.gs_device_n_params_s = type { i64*, i32, %struct.gs_device_n_map_s*, %struct.gs_device_n_attributes_s*, i32, i32 (%struct.gs_memory_s*, i64, i8**, i32*)* }
%struct.gs_device_n_map_s = type opaque
%struct.gs_device_n_attributes_s = type opaque
%struct.gx_cie_joint_caches_s = type opaque
%struct.gx_path_s = type opaque
%struct.gx_fill_params_s = type opaque
%struct.gx_device_color_s = type { %struct.gx_device_color_type_s*, %union._c, %struct.gs_int_point_s, i32, %struct.gs_client_color_s, %struct._mask }
%struct.gx_device_color_type_s = type opaque
%union._c = type { %struct._col }
%struct._col = type { %struct.gx_device_halftone_s*, i16, [64 x i8], [64 x i32], i16, i64 }
%struct._mask = type { %struct.mp_, i64, %struct.gx_color_tile_s* }
%struct.mp_ = type { i32, i32 }
%struct.gx_color_tile_s = type opaque
%struct.gx_clip_path_s = type opaque
%struct.gx_stroke_params_s = type opaque
%struct.gs_fixed_edge_s = type { %struct.gs_fixed_point_s, %struct.gs_fixed_point_s }
%struct.gs_image1_s = type { %struct.gx_image_type_s*, %struct.gs_matrix_s, i32, i32, i32, [130 x float], i32, i32, i32, %struct.gs_color_space_s*, i32, i32, i32, i32 }
%struct.gx_image_type_s = type opaque
%struct.gs_int_rect_s = type { %struct.gs_int_point_s, %struct.gs_int_point_s }
%struct.gx_image_enum_common_s = type opaque
%struct.gx_strip_bitmap_s = type { i8*, i32, %struct.gs_int_point_s, i64, i16, i16, i16, i16, i32 }
%struct.gs_fixed_rect_s = type { %struct.gs_fixed_point_s, %struct.gs_fixed_point_s }
%struct.gs_image_common_s = type { %struct.gx_image_type_s*, %struct.gs_matrix_s }
%struct.gs_get_bits_params_s = type opaque
%struct.gs_composite_s = type { %struct.gs_composite_type_s*, i64, i32, %struct.gs_composite_s*, %struct.gs_composite_s* }
%struct.gs_composite_type_s = type { i8, %struct.gs_composite_type_procs_s }
%struct.gs_composite_type_procs_s = type { i32 (%struct.gs_composite_s*, %struct.gx_device_s**, %struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gs_memory_s*)*, i32 (%struct.gs_composite_s*, %struct.gs_composite_s*)*, i32 (%struct.gs_composite_s*, i8*, i32*, %struct.gx_device_clist_writer_s*)*, i32 (%struct.gs_composite_s**, i8*, i32, %struct.gs_memory_s*)*, i32 (%struct.gs_composite_s*, i32, i32, %struct.gs_imager_state_s*)*, i32 (%struct.gs_composite_s*, %struct.gs_composite_s**, %struct.gx_device_s*)*, i32 (%struct.gs_composite_s*, i8, i8)*, i32 (%struct.gs_composite_s*, %struct.gx_device_s*, %struct.gx_device_s**, %struct.gs_imager_state_s*, %struct.gs_memory_s*)*, i32 (%struct.gs_composite_s*, %struct.gx_device_s*, %struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gs_memory_s*)*, i32 (%struct.gs_composite_s*, i32*, i32*, i32, i32)* }
%struct.gx_device_clist_writer_s = type { i32, %struct.gx_device_procs_s*, i8*, %struct.gs_memory_s*, %struct.gs_memory_struct_type_s*, i32, void (%struct.gx_device_s*)*, %struct.rc_header_s, i32, i32, i32, %struct.gx_device_color_info_s, %struct.gx_device_cached_colors_s, i32, i32, i32, i32, i32, i32, [2 x float], [4 x float], i32, [2 x float], [2 x float], [2 x float], [4 x float], i64, i64, i32, i32, i32, i32, i32, i64, i64, %struct.gx_stroked_gradient_recognizer_s, i32, i32, %struct.gdev_space_params_s, %struct.cmm_dev_profile_s*, i32, %struct.gx_page_device_procs_s, %struct.gx_device_procs_s, %struct.gx_device_s*, %struct.gx_device_buf_procs_s, %struct.gs_memory_s*, i8*, i32, %struct.gx_band_params_s, i32, i32, %struct.gx_bits_cache_chunk_s, %struct.gx_bits_cache_s, i32, i32, %struct.tile_hash*, i32, i32, %struct.gx_band_page_info_s, i32, i64, %struct.clist_icctable_s*, %struct.gsicc_link_cache_s*, i32, %struct.gsicc_link_cache_s**, i32, %struct.gx_clist_state_s*, i8*, i8*, i8*, %struct.cmd_list_s*, %struct.cmd_list_s, i32, i32, i32, i32, %struct.gx_strip_bitmap_s, i32, i32, i32, %struct.gs_imager_state_s, i32, i32, i32, i32, [11 x float], %struct.gx_clip_path_s*, i64, %struct.clist_color_space_s, [4 x i64], i64, i64, i64, i64, i32, i32, i32, i32, i32 (%struct.gx_device_s*, i32)*, i32, %struct.gs_pattern1_instance_s*, i32, i32, i32, i32, i32, i32, %struct.clist_writer_cropping_buffer_s*, i64, i32, i32, i32, i32, %struct.gx_device_color_info_s }
%struct.gx_device_buf_procs_s = type { i32 (%struct.gx_device_s**, %struct.gx_device_s*, i32, %struct.gx_render_plane_s*, %struct.gs_memory_s*, %struct.gx_colors_usage_s*)*, i32 (%struct.gx_device_buf_space_s*, %struct.gx_device_s*, %struct.gx_render_plane_s*, i32, i32)*, i32 (%struct.gx_device_s*, i8*, i32, i8**, i32, i32, i32)*, void (%struct.gx_device_s*)* }
%struct.gx_render_plane_s = type { i32, i32, i32 }
%struct.gx_colors_usage_s = type { i64, i32, %struct.gs_int_rect_s }
%struct.gx_device_buf_space_s = type { i64, i64, i32 }
%struct.gx_bits_cache_chunk_s = type { %struct.gx_bits_cache_chunk_s*, i8*, i32, i32 }
%struct.gx_bits_cache_s = type { %struct.gx_bits_cache_chunk_s*, i32, i32, i32 }
%struct.tile_hash = type { i64 }
%struct.gx_band_page_info_s = type { [4096 x i8], i8*, [4096 x i8], i8*, %struct.clist_io_procs_s*, i32, i64, i64, %struct.gx_band_params_s }
%struct.clist_io_procs_s = type { i32 (i8*, i8*, i8**, %struct.gs_memory_s*, %struct.gs_memory_s*, i32)*, i32 (i8*, i8*, i32)*, i32 (i8*)*, i32 (i8*, i32, i8*)*, i32 (i8*, i32, i8*)*, i32 (i8*, i32)*, i32 (i8*)*, i64 (i8*)*, void (i8*, i32, i8*)*, i32 (i8*, i64, i32, i8*)* }
%struct.clist_icctable_s = type { i32, %struct.gs_memory_s*, %struct.clist_icctable_entry_s*, %struct.clist_icctable_entry_s* }
%struct.clist_icctable_entry_s = type { %struct.clist_icc_serial_entry_s, %struct.clist_icctable_entry_s*, %struct.cmm_profile_s*, i32 }
%struct.clist_icc_serial_entry_s = type { i64, i64, i32 }
%struct.gx_clist_state_s = type opaque
%struct.cmd_list_s = type { %struct.cmd_prefix_s*, %struct.cmd_prefix_s* }
%struct.cmd_prefix_s = type { %struct.cmd_prefix_s*, i32, i64 }
%struct.clist_color_space_s = type { i8, i64, %struct.clist_icc_color_s, %struct.gs_color_space_s* }
%struct.clist_icc_color_s = type { i64, i8, i32, i32, i32 }
%struct.gs_pattern1_instance_s = type { %struct.rc_header_s, %struct.gs_pattern_type_s*, %struct.gs_state_s*, i64, %struct.gs_pattern1_template_s, %struct.gs_matrix_s, %struct.gs_rect_s, i32, i32, i32, i32, i32, %struct.gs_int_point_s, i64 }
%struct.gs_pattern1_template_s = type { %struct.gs_pattern_type_s*, i32, %struct.gs_uid_s, i8*, i32, i32, i32, %struct.gs_rect_s, float, float, i32 (%struct.gs_client_color_s*, %struct.gs_state_s*)* }
%struct.gs_uid_s = type { i64, i64* }
%struct.gs_rect_s = type { %struct.gs_point_s, %struct.gs_point_s }
%struct.clist_writer_cropping_buffer_s = type { i32, i32, i32, i32, %struct.clist_writer_cropping_buffer_s* }
%struct.gs_param_list_s = type { %struct.gs_param_list_procs_s*, %struct.gs_memory_s*, i32 }
%struct.gs_param_list_procs_s = type { i32 (%struct.gs_param_list_s*, i8*, %struct.gs_param_typed_value_s*)*, i32 (%struct.gs_param_list_s*, i8*, %struct.gs_param_collection_s*, i32)*, i32 (%struct.gs_param_list_s*, i8*, %struct.gs_param_collection_s*)*, i32 (%struct.gs_param_list_s*, %union.gs_param_enumerator_s*, %struct.gs_param_string_s*)*, i32 (%struct.gs_param_list_s*, i8*)*, i32 (%struct.gs_param_list_s*, i8*)*, i32 (%struct.gs_param_list_s*, i8*)*, i32 (%struct.gs_param_list_s*, i8*, i32)*, i32 (%struct.gs_param_list_s*)* }
%struct.gs_param_typed_value_s = type { %union.gs_param_value_s, i32 }
%union.gs_param_value_s = type { %struct.gs_param_string_s }
%struct.gs_param_string_s = type { i8*, i32, i32 }
%struct.gs_param_collection_s = type { %struct.gs_param_list_s*, i32 }
%union.gs_param_enumerator_s = type { i64 }
%struct.gs_text_params_s = type { i32, %union.sd_, i32, %struct.gs_point_s, %struct.gs_point_s, %union.s_, float*, float*, i32 }
%union.sd_ = type { i8* }
%union.s_ = type { i64 }
%struct.gs_font_s = type opaque
%struct.gs_text_enum_s = type { %struct.gs_text_params_s, %struct.gx_device_s*, %struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gs_font_s*, %struct.gx_path_s*, %struct.gx_device_color_s*, %struct.gx_clip_path_s*, %struct.gs_memory_s*, %struct.gs_text_enum_procs_s*, %struct.rc_header_s, i8*, %struct.gs_font_s*, i64, i32, %struct.gs_log2_scale_point_s, %struct.cached_fm_pair_s*, i32, i32, %struct.gx_font_stack_s, i32, i32, i32, %struct.gs_point_s, i64, i32, %struct.gs_log2_scale_point_s, %struct.gs_point_s, %struct.gs_text_returned_s }
%struct.gs_text_enum_procs_s = type { i32 (%struct.gs_text_enum_s*, %struct.gs_text_enum_s*)*, i32 (%struct.gs_text_enum_s*)*, i32 (%struct.gs_text_enum_s*)*, i32 (%struct.gs_text_enum_s*, %struct.gs_point_s*)*, i32 (%struct.gs_text_enum_s*, double*, i32)*, i32 (%struct.gs_text_enum_s*)*, void (%struct.gs_text_enum_s*, i8*)* }
%struct.cached_fm_pair_s = type opaque
%struct.gx_font_stack_s = type { i32, [6 x %struct.gx_font_stack_item_s] }
%struct.gx_font_stack_item_s = type { %struct.gs_font_s*, i32 }
%struct.gs_log2_scale_point_s = type { i32, i32 }
%struct.gs_text_returned_s = type { i64, i64, %struct.gs_point_s }
%struct.gs_transparency_group_params_s = type { %struct.gs_color_space_s*, i32, i32, i32, i32, i32, i32, i32, i64, %struct.cmm_profile_s* }
%struct.gx_transparency_mask_params_s = type { i32, i32, i32, i32, [64 x float], float, i32, i32, i32, i32, [256 x i8], i64, %struct.cmm_profile_s* }
%struct.gx_cm_color_map_procs_s = type { void (%struct.gx_device_s*, i16, i16*)*, void (%struct.gx_device_s*, %struct.gs_imager_state_s*, i16, i16, i16, i16*)*, void (%struct.gx_device_s*, i16, i16, i16, i16, i16*)* }
%struct.gs_fill_attributes_s = type { %struct.gs_fixed_rect_s*, i32, %struct.gx_device_halftone_s*, i32, i32, i32, %struct.patch_fill_state_s* }
%struct.patch_fill_state_s = type opaque
%struct.gs_devn_params_s = type opaque
%struct.gx_process_page_options_s = type { i32 (i8*, %struct.gx_device_s*, %struct.gs_memory_s*, i32, i32, i8**)*, void (i8*, %struct.gx_device_s*, %struct.gs_memory_s*, i8*)*, i32 (i8*, %struct.gx_device_s*, %struct.gx_device_s*, %struct.gs_int_rect_s*, i8*)*, i32 (i8*, %struct.gx_device_s*, i8*)*, i8*, i32 }
%struct.stc_dither_s = type { i8*, i32 (%struct.stcolor_device_s*, i32, i8*, i8*, i8*)*, i32, i32, [2 x double] }
%struct.stcolor_device_s = type { i32, %struct.gx_device_procs_s*, i8*, %struct.gs_memory_s*, %struct.gs_memory_struct_type_s*, i32, void (%struct.gx_device_s*)*, %struct.rc_header_s, i32, i32, i32, %struct.gx_device_color_info_s, %struct.gx_device_cached_colors_s, i32, i32, i32, i32, i32, i32, [2 x float], [4 x float], i32, [2 x float], [2 x float], [2 x float], [4 x float], i64, i64, i32, i32, i32, i32, i32, i64, i64, %struct.gx_stroked_gradient_recognizer_s, i32, i32, %struct.gdev_space_params_s, %struct.cmm_dev_profile_s*, i32, %struct.gx_page_device_procs_s, %struct.gx_device_procs_s, [11240 x i8], %struct.gx_printer_device_procs_s, [4096 x i8], i32, i32, i32, i32, i32, i32, %struct._IO_FILE*, i64, i8*, %struct.gs_memory_s*, %struct.gs_memory_s*, i32 (%struct.gx_device_s*, i32)*, %struct.gx_page_queue_s*, i32, %struct.gx_device_printer_s*, i32, i32, %struct.bg_print_s, i32, %struct.gx_saved_pages_list_s*, %struct.gx_device_procs_s, %struct.gx_device_procs_s, %struct.stc_s }
%struct.gx_printer_device_procs_s = type { {}*, i32 (%struct.gx_device_printer_s*, %struct._IO_FILE*, i32)*, %struct.gx_device_buf_procs_s, void (%struct.gx_device_printer_s*, %struct.gdev_space_params_s*)*, i32 (%struct.gdev_prn_start_render_params_s*)*, i32 (%struct.gx_device_printer_s*)*, i32 (%struct.gx_device_printer_s*)*, i32 (%struct.gx_device_printer_s*, %struct._IO_FILE*, i32)* }
%struct.gdev_prn_start_render_params_s = type opaque
%struct.gx_page_queue_s = type opaque
%struct.gx_device_printer_s = type { i32, %struct.gx_device_procs_s*, i8*, %struct.gs_memory_s*, %struct.gs_memory_struct_type_s*, i32, void (%struct.gx_device_s*)*, %struct.rc_header_s, i32, i32, i32, %struct.gx_device_color_info_s, %struct.gx_device_cached_colors_s, i32, i32, i32, i32, i32, i32, [2 x float], [4 x float], i32, [2 x float], [2 x float], [2 x float], [4 x float], i64, i64, i32, i32, i32, i32, i32, i64, i64, %struct.gx_stroked_gradient_recognizer_s, i32, i32, %struct.gdev_space_params_s, %struct.cmm_dev_profile_s*, i32, %struct.gx_page_device_procs_s, %struct.gx_device_procs_s, [11240 x i8], %struct.gx_printer_device_procs_s, [4096 x i8], i32, i32, i32, i32, i32, i32, %struct._IO_FILE*, i64, i8*, %struct.gs_memory_s*, %struct.gs_memory_s*, i32 (%struct.gx_device_s*, i32)*, %struct.gx_page_queue_s*, i32, %struct.gx_device_printer_s*, i32, i32, %struct.bg_print_s, i32, %struct.gx_saved_pages_list_s*, %struct.gx_device_procs_s, %struct.gx_device_procs_s }
%struct.bg_print_s = type { %struct.gx_semaphore_s*, %struct.gx_device_s*, i8*, i32, i32 }
%struct.gx_saved_pages_list_s = type { i32, i32, i32, i32, %struct.gx_saved_pages_list_element_s*, %struct.gx_saved_pages_list_element_s*, %struct.gs_memory_s* }
%struct.gx_saved_pages_list_element_s = type { i32, %struct.gx_saved_pages_list_element_s*, %struct.gx_saved_pages_list_element_s*, %struct.gx_saved_page_s* }
%struct.gx_saved_page_s = type { [32 x i8], %struct.gx_device_color_info_s, [4096 x i8], [4096 x i8], %struct.clist_io_procs_s*, i32, i64, %struct.gx_band_params_s, %struct.gs_memory_s*, i32, i8* }
%struct.stc_s = type { i64, i32, %struct.stc_dither_s*, float*, [4 x float*], [4 x i32], [4 x i16*], [4 x float*], [4 x i32], [4 x i8*], [3 x i32], [3 x i32], %struct.gs_param_string_array_s, %struct.gs_param_string_s, %struct.gs_param_string_s, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32*, i8**, i8*, [4 x i8*], i32 }
%struct.gs_param_string_array_s = type { %struct.gs_param_string_s*, i32, i32 }
%struct.gs_param_float_array_s = type { float*, i32, i32 }
%union.anon.2 = type { i32 }
%union.anon.3 = type { i32 }

@stcolor_procs = internal global %struct.gx_device_procs_s { i32 (%struct.gx_device_s*)* @stc_open, void (%struct.gx_device_s*, %struct.gs_matrix_s*)* @gx_default_get_initial_matrix, i32 (%struct.gx_device_s*)* @gx_default_sync_output, i32 (%struct.gx_device_s*, i32, i32)* @gdev_prn_bg_output_page, i32 (%struct.gx_device_s*)* @stc_close, i64 (%struct.gx_device_s*, i16*)* null, i32 (%struct.gx_device_s*, i64, i16*)* @stc_map_color_cmyk, i32 (%struct.gx_device_s*, i32, i32, i32, i32, i64)* null, i32 (%struct.gx_device_s*, %struct.gx_tile_bitmap_s*, i32, i32, i32, i32, i64, i64, i32, i32)* null, i32 (%struct.gx_device_s*, i8*, i32, i32, i64, i32, i32, i32, i32, i64, i64)* null, i32 (%struct.gx_device_s*, i8*, i32, i32, i64, i32, i32, i32, i32)* null, i32 (%struct.gx_device_s*, i32, i32, i32, i32, i64)* null, i32 (%struct.gx_device_s*, i32, i8*, i8**)* @gx_default_get_bits, i32 (%struct.gx_device_s*, %struct.gs_param_list_s*)* @stc_get_params, i32 (%struct.gx_device_s*, %struct.gs_param_list_s*)* @stc_put_params, i64 (%struct.gx_device_s*, i16*)* @stc_map_cmyk_color, %struct.gx_xfont_procs_s* (%struct.gx_device_s*)* null, %struct.gx_device_s* (%struct.gx_device_s*)* null, i64 (%struct.gx_device_s*, i16, i16, i16, i16)* null, %struct.gx_device_s* (%struct.gx_device_s*)* null, i32 (%struct.gx_device_s*, i32)* null, i32 (%struct.gx_device_s*, i8*, i32, i32, i64, i32, i32, i32, i32, i64, i32)* null, i32 (%struct.gx_device_s*, i32, i32*)* null, i32 (%struct.gx_device_s*, i8*, i32, i32, i64, i64*, %struct.gx_tile_bitmap_s*, i64*, i32, i32, i32, i32, i32, i32, i32)* null, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gx_path_s*, %struct.gx_fill_params_s*, %struct.gx_device_color_s*, %struct.gx_clip_path_s*)* null, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gx_path_s*, %struct.gx_stroke_params_s*, %struct.gx_device_color_s*, %struct.gx_clip_path_s*)* null, i32 (%struct.gx_device_s*, i8*, i32, i32, i64, i32, i32, i32, i32, %struct.gx_device_color_s*, i32, i32, %struct.gx_clip_path_s*)* null, i32 (%struct.gx_device_s*, %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s*, i32, i32, i32, %struct.gx_device_color_s*, i32)* null, i32 (%struct.gx_device_s*, i32, i32, i32, i32, i32, i32, %struct.gx_device_color_s*, i32)* null, i32 (%struct.gx_device_s*, i32, i32, i32, i32, i32, i32, %struct.gx_device_color_s*, i32)* null, i32 (%struct.gx_device_s*, i32, i32, i32, i32, %struct.gx_device_color_s*, i32, i32, i32)* null, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gs_image1_s*, i32, %struct.gs_int_rect_s*, %struct.gx_device_color_s*, %struct.gx_clip_path_s*, %struct.gs_memory_s*, %struct.gx_image_enum_common_s**)* null, i32 (%struct.gx_device_s*, %struct.gx_image_enum_common_s*, i8**, i32, i32, i32)* null, i32 (%struct.gx_device_s*, %struct.gx_image_enum_common_s*, i32)* null, i32 (%struct.gx_device_s*, %struct.gx_strip_bitmap_s*, i32, i32, i32, i32, i64, i64, i32, i32)* null, i32 (%struct.gx_device_s*, i8*, i32, i32, i64, i64*, %struct.gx_strip_bitmap_s*, i64*, i32, i32, i32, i32, i32, i32, i32)* null, void (%struct.gx_device_s*, %struct.gs_fixed_rect_s*)* null, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gs_matrix_s*, %struct.gs_image_common_s*, %struct.gs_int_rect_s*, %struct.gx_device_color_s*, %struct.gx_clip_path_s*, %struct.gs_memory_s*, %struct.gx_image_enum_common_s**)* null, i32 (%struct.gx_device_s*, %struct.gs_int_rect_s*, %struct.gs_get_bits_params_s*, %struct.gs_int_rect_s**)* null, i32 (%struct.gx_device_s*, i64, i16*)* null, i32 (%struct.gx_device_s*, %struct.gx_device_s**, %struct.gs_composite_s*, %struct.gs_imager_state_s*, %struct.gs_memory_s*, %struct.gx_device_s*)* null, i32 (%struct.gx_device_s*, %struct.gs_param_list_s*)* null, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gs_text_params_s*, %struct.gs_font_s*, %struct.gx_path_s*, %struct.gx_device_color_s*, %struct.gx_clip_path_s*, %struct.gs_memory_s*, %struct.gs_text_enum_s**)* null, i32 (%struct.gx_device_s*, %struct.gx_device_s*)* null, i32 (%struct.gx_device_s*, %struct.gs_transparency_group_params_s*, %struct.gs_rect_s*, %struct.gs_imager_state_s*, %struct.gs_memory_s*)* null, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*)* null, i32 (%struct.gx_device_s*, %struct.gx_transparency_mask_params_s*, %struct.gs_rect_s*, %struct.gs_imager_state_s*, %struct.gs_memory_s*)* null, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*)* null, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*)* null, %struct.gx_cm_color_map_procs_s* (%struct.gx_device_s*)* null, i32 (%struct.gx_device_s*, i8*, i32, i32)* null, i64 (%struct.gx_device_s*, i16*)* null, i32 (%struct.gx_device_s*, i64, i16*)* null, i32 (%struct.gx_device_s*, i64, %struct.gs_pattern1_instance_s*, i32)* null, i32 (%struct.gx_device_s*, %struct.gs_fixed_rect_s*, %struct.gs_imager_state_s*, %struct.gx_device_color_s*, %struct.gx_clip_path_s*)* null, i32 (%struct.gx_device_s*, %struct.gs_color_space_s*, i8*, i32)* null, i32 (%struct.gx_device_s*, %struct.gs_fill_attributes_s*, i32, i32, i32, i32*, i32*, i32*, i32)* null, i32 (%struct.gx_device_s*, %struct.gs_fill_attributes_s*, %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s*, i32*, i32*, i32*, i32*)* null, i32 (%struct.gx_device_s*, %struct.gs_fill_attributes_s*, %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s*, i32*, i32*, i32*)* null, i32 (%struct.gx_device_s*, %struct.gs_state_s*)* null, %struct.gs_devn_params_s* (%struct.gx_device_s*)* null, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gx_device_color_s*)* null, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*)* null, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*)* null, i32 (%struct.gx_device_s*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32)* null, i32 (%struct.gx_device_s*, i32, i8*, i32)* null, i32 (%struct.gx_device_s*, i8*, i32, i32, i64, i32, i32, i32, i32, i32)* null, i32 (%struct.gx_device_s*, %struct.cmm_dev_profile_s**)* null, void (%struct.gx_device_s*, i32)* null, i32 (%struct.gx_device_s*, i8*, i32, i32, i64, i64*, %struct.gx_strip_bitmap_s*, i64*, i32, i32, i32, i32, i32, i32, i32, i32)* null, i32 (%struct.gx_device_s*, %struct.gx_strip_bitmap_s*, i32, i32, i32, i32, %struct.gx_device_color_s*, %struct.gx_device_color_s*, i32, i32)* null, i32 (%struct.gx_device_s*, i8*, i32, i32, i64, i32, i32, i32, i32, %struct.gx_device_color_s*, i32)* null, i32 (%struct.gx_device_s*, %struct.gx_process_page_options_s*)* null }, align 8
@.str = private unnamed_addr constant [8 x i8] c"stcolor\00", align 1
@st_device_printer = external constant %struct.gs_memory_struct_type_s, align 8
@.str.1 = private unnamed_addr constant [11 x i8] c"DeviceCMYK\00", align 1
@stc_dither = internal constant [10 x %struct.stc_dither_s] [%struct.stc_dither_s { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.55, i32 0, i32 0), i32 (%struct.stcolor_device_s*, i32, i8*, i8*, i8*)* @stc_gscmyk, i32 76, i32 0, [2 x double] [double 0.000000e+00, double 1.000000e+00] }, %struct.stc_dither_s { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.56, i32 0, i32 0), i32 (%struct.stcolor_device_s*, i32, i8*, i8*, i8*)* @stc_hscmyk, i32 372, i32 9, [2 x double] [double 0.000000e+00, double 1.023000e+03] }, %struct.stc_dither_s { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.57, i32 0, i32 0), i32 (%struct.stcolor_device_s*, i32, i8*, i8*, i8*)* @stc_gsmono, i32 9, i32 0, [2 x double] [double 0.000000e+00, double 1.000000e+00] }, %struct.stc_dither_s { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.58, i32 0, i32 0), i32 (%struct.stcolor_device_s*, i32, i8*, i8*, i8*)* @stc_gsrgb, i32 11, i32 0, [2 x double] [double 0.000000e+00, double 1.000000e+00] }, %struct.stc_dither_s { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.59, i32 0, i32 0), i32 (%struct.stcolor_device_s*, i32, i8*, i8*, i8*)* @stc_fs, i32 273, i32 6, [2 x double] [double 0.000000e+00, double 0x416FFFFFE0000000] }, %struct.stc_dither_s { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.60, i32 0, i32 0), i32 (%struct.stcolor_device_s*, i32, i8*, i8*, i8*)* @stc_fs, i32 275, i32 12, [2 x double] [double 0.000000e+00, double 0x416FFFFFE0000000] }, %struct.stc_dither_s { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.61, i32 0, i32 0), i32 (%struct.stcolor_device_s*, i32, i8*, i8*, i8*)* @stc_fs, i32 276, i32 15, [2 x double] [double 0.000000e+00, double 0x416FFFFFE0000000] }, %struct.stc_dither_s { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.62, i32 0, i32 0), i32 (%struct.stcolor_device_s*, i32, i8*, i8*, i8*)* @stc_fscmyk, i32 276, i32 15, [2 x double] [double 0.000000e+00, double 0x416FFFFFE0000000] }, %struct.stc_dither_s { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.63, i32 0, i32 0), i32 (%struct.stcolor_device_s*, i32, i8*, i8*, i8*)* @stc_fs2, i32 395, i32 0, [2 x double] [double 0.000000e+00, double 2.550000e+02] }, %struct.stc_dither_s zeroinitializer], align 16
@defext = internal global [2 x float] [float 0.000000e+00, float 1.000000e+00], align 4
@gs_stcolor_device = global { i32, %struct.gx_device_procs_s*, i8*, %struct.gs_memory_s*, %struct.gs_memory_struct_type_s*, i32, void (%struct.gx_device_s*)*, %struct.rc_header_s, i32, i32, i32, %struct.gx_device_color_info_s, %struct.gx_device_cached_colors_s, i32, i32, i32, i32, i32, i32, [2 x float], [4 x float], i32, [2 x float], [2 x float], [2 x float], [4 x float], i64, i64, i32, i32, i32, i32, i32, i64, i64, %struct.gx_stroked_gradient_recognizer_s, i32, i32, %struct.gdev_space_params_s, %struct.cmm_dev_profile_s*, i32, %struct.gx_page_device_procs_s, %struct.gx_device_procs_s, [11240 x i8], { i32 (%struct.gx_device_printer_s*, %struct._IO_FILE*)*, i32 (%struct.gx_device_printer_s*, %struct._IO_FILE*, i32)*, %struct.gx_device_buf_procs_s, void (%struct.gx_device_printer_s*, %struct.gdev_space_params_s*)*, i32 (%struct.gdev_prn_start_render_params_s*)*, i32 (%struct.gx_device_printer_s*)*, i32 (%struct.gx_device_printer_s*)*, i32 (%struct.gx_device_printer_s*, %struct._IO_FILE*, i32)* }, [4096 x i8], i32, i32, i32, i32, i32, i32, %struct._IO_FILE*, i64, i8*, %struct.gs_memory_s*, %struct.gs_memory_s*, i32 (%struct.gx_device_s*, i32)*, %struct.gx_page_queue_s*, i32, %struct.gx_device_printer_s*, i32, i32, %struct.bg_print_s, i32, %struct.gx_saved_pages_list_s*, %struct.gx_device_procs_s, %struct.gx_device_procs_s, %struct.stc_s } { i32 18880, %struct.gx_device_procs_s* @stcolor_procs, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), %struct.gs_memory_s* null, %struct.gs_memory_struct_type_s* @st_device_printer, i32 0, void (%struct.gx_device_s*)* null, %struct.rc_header_s zeroinitializer, i32 0, i32 0, i32 0, %struct.gx_device_color_info_s { i32 4, i32 4, i32 0, i16 4, i8 3, i32 1, i32 1, i32 2, i32 2, %struct.gx_device_anti_alias_info_s { i32 1, i32 1 }, i32 -1, [64 x i8] zeroinitializer, [64 x i8] zeroinitializer, [64 x i64] zeroinitializer, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i32 0, i32 0), i32 -1, i64 0, i32 0 }, %struct.gx_device_cached_colors_s { i64 -1, i64 -1 }, i32 3060, i32 3960, i32 0, i32 0, i32 0, i32 0, [2 x float] [float 6.120000e+02, float 7.920000e+02], [4 x float] zeroinitializer, i32 0, [2 x float] [float 3.600000e+02, float 3.600000e+02], [2 x float] [float 3.600000e+02, float 3.600000e+02], [2 x float] [float -4.500000e+01, float -4.500000e+01], [4 x float] [float 9.000000e+00, float 0x4043FAE140000000, float 2.700000e+01, float 9.000000e+00], i64 0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i64 0, i64 0, %struct.gx_stroked_gradient_recognizer_s zeroinitializer, i32 0, i32 0, %struct.gdev_space_params_s { i64 10000000, i64 4000000, %struct.gx_band_params_s zeroinitializer, i32 0, i32 0 }, %struct.cmm_dev_profile_s* null, i32 0, %struct.gx_page_device_procs_s { i32 (%struct.gx_device_s*, %struct.gs_state_s*)* @gx_default_install, i32 (%struct.gx_device_s*, %struct.gs_state_s*)* @gx_default_begin_page, i32 (%struct.gx_device_s*, i32, %struct.gs_state_s*)* @gx_default_end_page }, %struct.gx_device_procs_s zeroinitializer, [11240 x i8] zeroinitializer, { i32 (%struct.gx_device_printer_s*, %struct._IO_FILE*)*, i32 (%struct.gx_device_printer_s*, %struct._IO_FILE*, i32)*, %struct.gx_device_buf_procs_s, void (%struct.gx_device_printer_s*, %struct.gdev_space_params_s*)*, i32 (%struct.gdev_prn_start_render_params_s*)*, i32 (%struct.gx_device_printer_s*)*, i32 (%struct.gx_device_printer_s*)*, i32 (%struct.gx_device_printer_s*, %struct._IO_FILE*, i32)* } { i32 (%struct.gx_device_printer_s*, %struct._IO_FILE*)* @stc_print_page, i32 (%struct.gx_device_printer_s*, %struct._IO_FILE*, i32)* @gx_default_print_page_copies, %struct.gx_device_buf_procs_s { i32 (%struct.gx_device_s**, %struct.gx_device_s*, i32, %struct.gx_render_plane_s*, %struct.gs_memory_s*, %struct.gx_colors_usage_s*)* @gx_default_create_buf_device, i32 (%struct.gx_device_buf_space_s*, %struct.gx_device_s*, %struct.gx_render_plane_s*, i32, i32)* @gx_default_size_buf_device, i32 (%struct.gx_device_s*, i8*, i32, i8**, i32, i32, i32)* @gx_default_setup_buf_device, void (%struct.gx_device_s*)* @gx_default_destroy_buf_device }, void (%struct.gx_device_printer_s*, %struct.gdev_space_params_s*)* @gx_default_get_space_params, i32 (%struct.gdev_prn_start_render_params_s*)* @gx_default_start_render_thread, i32 (%struct.gx_device_printer_s*)* @gx_default_open_render_device, i32 (%struct.gx_device_printer_s*)* @gx_default_close_render_device, i32 (%struct.gx_device_printer_s*, %struct._IO_FILE*, i32)* @gx_default_buffer_page }, [4096 x i8] zeroinitializer, i32 0, i32 0, i32 0, i32 0, i32 -1, i32 0, %struct._IO_FILE* null, i64 0, i8* null, %struct.gs_memory_s* null, %struct.gs_memory_s* null, i32 (%struct.gx_device_s*, i32)* null, %struct.gx_page_queue_s* null, i32 0, %struct.gx_device_printer_s* null, i32 0, i32 0, %struct.bg_print_s zeroinitializer, i32 0, %struct.gx_saved_pages_list_s* null, %struct.gx_device_procs_s zeroinitializer, %struct.gx_device_procs_s zeroinitializer, %struct.stc_s { i64 256, i32 1, %struct.stc_dither_s* getelementptr inbounds ([10 x %struct.stc_dither_s], [10 x %struct.stc_dither_s]* @stc_dither, i32 0, i32 0), float* null, [4 x float*] zeroinitializer, [4 x i32] zeroinitializer, [4 x i16*] zeroinitializer, [4 x float*] [float* getelementptr inbounds ([2 x float], [2 x float]* @defext, i32 0, i32 0), float* getelementptr inbounds ([2 x float], [2 x float]* @defext, i32 0, i32 0), float* getelementptr inbounds ([2 x float], [2 x float]* @defext, i32 0, i32 0), float* getelementptr inbounds ([2 x float], [2 x float]* @defext, i32 0, i32 0)], [4 x i32] [i32 2, i32 2, i32 2, i32 2], [4 x i8*] zeroinitializer, [3 x i32] zeroinitializer, [3 x i32] zeroinitializer, %struct.gs_param_string_array_s zeroinitializer, %struct.gs_param_string_s zeroinitializer, %struct.gs_param_string_s zeroinitializer, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32* null, i8** null, i8* null, [4 x i8*] zeroinitializer, i32 0 } }, align 8
@.str.2 = private unnamed_addr constant [19 x i8] c"stcolor/algorithms\00", align 1
@.str.3 = private unnamed_addr constant [13 x i8] c"stcolor/code\00", align 1
@.str.4 = private unnamed_addr constant [17 x i8] c"stcolor/transfer\00", align 1
@.str.5 = private unnamed_addr constant [13 x i8] c"stcolor/init\00", align 1
@.str.6 = private unnamed_addr constant [39 x i8] c"\1B@\1B(G\01\00\01\1B(i\01\00w\1B(U\01\00u\1B(C\02\00hh\1B(c\04\00ttbb\1BU\00", align 1
@.str.7 = private unnamed_addr constant [16 x i8] c"stcolor/release\00", align 1
@.str.8 = private unnamed_addr constant [4 x i8] c"\1B@\0C\00", align 1
@.str.9 = private unnamed_addr constant [5 x i8] c"1.91\00", align 1
@.str.10 = private unnamed_addr constant [8 x i8] c"Version\00", align 1
@.str.11 = private unnamed_addr constant [17 x i8] c"BitsPerComponent\00", align 1
@.str.12 = private unnamed_addr constant [11 x i8] c"Algorithms\00", align 1
@.str.13 = private unnamed_addr constant [6 x i8] c"plain\00", align 1
@.str.14 = private unnamed_addr constant [9 x i8] c"deltarow\00", align 1
@.str.15 = private unnamed_addr constant [10 x i8] c"runlength\00", align 1
@.str.16 = private unnamed_addr constant [11 x i8] c"OutputCode\00", align 1
@.str.17 = private unnamed_addr constant [6 x i8] c"st800\00", align 1
@.str.18 = private unnamed_addr constant [6 x i8] c"stcii\00", align 1
@.str.19 = private unnamed_addr constant [4 x i8] c"stc\00", align 1
@.str.20 = private unnamed_addr constant [6 x i8] c"Model\00", align 1
@.str.21 = private unnamed_addr constant [15 x i8] c"Unidirectional\00", align 1
@.str.22 = private unnamed_addr constant [11 x i8] c"Microweave\00", align 1
@.str.23 = private unnamed_addr constant [10 x i8] c"Softweave\00", align 1
@.str.24 = private unnamed_addr constant [8 x i8] c"noWeave\00", align 1
@.str.25 = private unnamed_addr constant [6 x i8] c"Flag0\00", align 1
@.str.26 = private unnamed_addr constant [6 x i8] c"Flag1\00", align 1
@.str.27 = private unnamed_addr constant [6 x i8] c"Flag2\00", align 1
@.str.28 = private unnamed_addr constant [6 x i8] c"Flag3\00", align 1
@.str.29 = private unnamed_addr constant [6 x i8] c"Flag4\00", align 1
@.str.30 = private unnamed_addr constant [10 x i8] c"escp_Band\00", align 1
@.str.31 = private unnamed_addr constant [11 x i8] c"escp_Width\00", align 1
@.str.32 = private unnamed_addr constant [12 x i8] c"escp_Height\00", align 1
@.str.33 = private unnamed_addr constant [9 x i8] c"escp_Top\00", align 1
@.str.34 = private unnamed_addr constant [12 x i8] c"escp_Bottom\00", align 1
@.str.35 = private unnamed_addr constant [10 x i8] c"escp_Init\00", align 1
@.str.36 = private unnamed_addr constant [13 x i8] c"escp_Release\00", align 1
@.str.37 = private unnamed_addr constant [10 x i8] c"Dithering\00", align 1
@.str.38 = private unnamed_addr constant [18 x i8] c"ColorAdjustMatrix\00", align 1
@.str.39 = private unnamed_addr constant [8 x i8] c"Kcoding\00", align 1
@.str.40 = private unnamed_addr constant [10 x i8] c"Ktransfer\00", align 1
@.str.41 = private unnamed_addr constant [8 x i8] c"Rcoding\00", align 1
@.str.42 = private unnamed_addr constant [10 x i8] c"Rtransfer\00", align 1
@.str.43 = private unnamed_addr constant [8 x i8] c"Gcoding\00", align 1
@.str.44 = private unnamed_addr constant [10 x i8] c"Gtransfer\00", align 1
@.str.45 = private unnamed_addr constant [8 x i8] c"Bcoding\00", align 1
@.str.46 = private unnamed_addr constant [10 x i8] c"Btransfer\00", align 1
@.str.47 = private unnamed_addr constant [8 x i8] c"Ccoding\00", align 1
@.str.48 = private unnamed_addr constant [10 x i8] c"Ctransfer\00", align 1
@.str.49 = private unnamed_addr constant [8 x i8] c"Mcoding\00", align 1
@.str.50 = private unnamed_addr constant [10 x i8] c"Mtransfer\00", align 1
@.str.51 = private unnamed_addr constant [8 x i8] c"Ycoding\00", align 1
@.str.52 = private unnamed_addr constant [10 x i8] c"Ytransfer\00", align 1
@.str.53 = private unnamed_addr constant [13 x i8] c"BitsPerPixel\00", align 1
@.str.54 = private unnamed_addr constant [15 x i8] c"stc_put_params\00", align 1
@.str.55 = private unnamed_addr constant [7 x i8] c"gscmyk\00", align 1
@.str.56 = private unnamed_addr constant [7 x i8] c"hscmyk\00", align 1
@.str.57 = private unnamed_addr constant [7 x i8] c"gsmono\00", align 1
@.str.58 = private unnamed_addr constant [6 x i8] c"gsrgb\00", align 1
@.str.59 = private unnamed_addr constant [7 x i8] c"fsmono\00", align 1
@.str.60 = private unnamed_addr constant [6 x i8] c"fsrgb\00", align 1
@.str.61 = private unnamed_addr constant [5 x i8] c"fsx4\00", align 1
@.str.62 = private unnamed_addr constant [7 x i8] c"fscmyk\00", align 1
@.str.63 = private unnamed_addr constant [4 x i8] c"fs2\00", align 1
@.str.64 = private unnamed_addr constant [24 x i8] c"stc_print_page/ext_line\00", align 1
@.str.65 = private unnamed_addr constant [24 x i8] c"stc_print_page/col_line\00", align 1
@.str.66 = private unnamed_addr constant [24 x i8] c"stc_print_page/alg_line\00", align 1
@.str.67 = private unnamed_addr constant [19 x i8] c"stc_print_page/buf\00", align 1
@.str.68 = private unnamed_addr constant [25 x i8] c"stc_print_page/prt_width\00", align 1
@.str.69 = private unnamed_addr constant [24 x i8] c"stc_print_page/prt_data\00", align 1
@.str.70 = private unnamed_addr constant [19 x i8] c"stc_print_page/prt\00", align 1
@.str.71 = private unnamed_addr constant [24 x i8] c"stc_print_page/seed_row\00", align 1
@.str.72 = private unnamed_addr constant [25 x i8] c"stc_print_page/escp_data\00", align 1
@stc_print_page.rgb2cmyk = internal constant [8 x i8] c"\01\0C\0A\08\06\04\02\00", align 1
@stc_print_escpcmd.stc_colors = internal constant [4 x i8] c"\02\01\04\00", align 1

declare i32 @gx_default_install(%struct.gx_device_s*, %struct.gs_state_s*) #0

declare i32 @gx_default_begin_page(%struct.gx_device_s*, %struct.gs_state_s*) #0

declare i32 @gx_default_end_page(%struct.gx_device_s*, i32, %struct.gs_state_s*) #0

; Function Attrs: nounwind uwtable
define internal i32 @stc_print_page(%struct.gx_device_printer_s* %pdev, %struct._IO_FILE* %prn_stream) #1 {
entry:
  %retval = alloca i32, align 4
  %pdev.addr = alloca %struct.gx_device_printer_s*, align 8
  %prn_stream.addr = alloca %struct._IO_FILE*, align 8
  %sd = alloca %struct.stcolor_device_s*, align 8
  %flags = alloca i64, align 8
  %npass = alloca i32, align 4
  %ext_size = alloca i32, align 4
  %ext_line = alloca i8*, align 8
  %alg_size = alloca i32, align 4
  %alg_line = alloca i8*, align 8
  %buf_size = alloca i32, align 4
  %buf = alloca i8*, align 8
  %prt_pixels = alloca i32, align 4
  %col_line = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  %i = alloca i32, align 4
  %i184 = alloca i32, align 4
  %ncolor = alloca i32, align 4
  %buf_i = alloca i32, align 4
  %iconvert = alloca i8* (%struct.stcolor_device_s*, i8*, i32, i8*)*, align 8
  %need = alloca i32, align 4
  %color = alloca i32, align 4
  %ext_data = alloca i8*, align 8
  %alg_data = alloca i8*, align 8
  %bytein = alloca i8*, align 8
  %byteout = alloca i8*, align 8
  %width = alloca i32, align 4
  %tmp = alloca i8, align 1
  %i577 = alloca i8, align 1
  %bytein607 = alloca i8*, align 8
  %width609 = alloca i32, align 4
  %i617 = alloca i8, align 1
  %tmp619 = alloca i8, align 1
  %cmyk = alloca [4 x i8], align 1
  %bytein712 = alloca i8*, align 8
  %width714 = alloca i32, align 4
  %i722 = alloca i8, align 1
  %tmp724 = alloca i8, align 1
  %cmyk726 = alloca [4 x i8], align 1
  %i922 = alloca i32, align 4
  %i960 = alloca i32, align 4
  store %struct.gx_device_printer_s* %pdev, %struct.gx_device_printer_s** %pdev.addr, align 8, !tbaa !1
  store %struct._IO_FILE* %prn_stream, %struct._IO_FILE** %prn_stream.addr, align 8, !tbaa !1
  %0 = bitcast %struct.stcolor_device_s** %sd to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = load %struct.gx_device_printer_s*, %struct.gx_device_printer_s** %pdev.addr, align 8, !tbaa !1
  %2 = bitcast %struct.gx_device_printer_s* %1 to %struct.stcolor_device_s*
  store %struct.stcolor_device_s* %2, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %3 = bitcast i64* %flags to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #2
  %4 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %cmp = icmp eq %struct.stcolor_device_s* %4, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  %5 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %5, i32 0, i32 68
  %flags1 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc, i32 0, i32 0
  %6 = load i64, i64* %flags1, align 8, !tbaa !5
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ 0, %cond.true ], [ %6, %cond.false ]
  store i64 %cond, i64* %flags, align 8, !tbaa !25
  %7 = bitcast i32* %npass to i8*
  call void @llvm.lifetime.start(i64 4, i8* %7) #2
  %8 = bitcast i32* %ext_size to i8*
  call void @llvm.lifetime.start(i64 4, i8* %8) #2
  %9 = bitcast i8** %ext_line to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9) #2
  %10 = bitcast i32* %alg_size to i8*
  call void @llvm.lifetime.start(i64 4, i8* %10) #2
  %11 = bitcast i8** %alg_line to i8*
  call void @llvm.lifetime.start(i64 8, i8* %11) #2
  %12 = bitcast i32* %buf_size to i8*
  call void @llvm.lifetime.start(i64 4, i8* %12) #2
  %13 = bitcast i8** %buf to i8*
  call void @llvm.lifetime.start(i64 8, i8* %13) #2
  %14 = bitcast i32* %prt_pixels to i8*
  call void @llvm.lifetime.start(i64 4, i8* %14) #2
  %15 = bitcast i8** %col_line to i8*
  call void @llvm.lifetime.start(i64 8, i8* %15) #2
  %16 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %call = call i32 @stc_print_setup(%struct.stcolor_device_s* %16) #5
  store i32 %call, i32* %npass, align 4, !tbaa !26
  %cmp2 = icmp sgt i32 0, %call
  br i1 %cmp2, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end
  %17 = load i32, i32* %npass, align 4, !tbaa !26
  store i32 %17, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.1006

if.end:                                           ; preds = %cond.end
  %18 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc3 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %18, i32 0, i32 68
  %escp_v = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc3, i32 0, i32 26
  %19 = load i32, i32* %escp_v, align 4, !tbaa !27
  %20 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc4 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %20, i32 0, i32 68
  %escp_u = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc4, i32 0, i32 24
  %21 = load i32, i32* %escp_u, align 4, !tbaa !28
  %div = sdiv i32 %19, %21
  store i32 %div, i32* %npass, align 4, !tbaa !26
  %22 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %23 = bitcast %struct.stcolor_device_s* %22 to %struct.gx_device_s*
  %call5 = call i32 @gx_device_raster(%struct.gx_device_s* %23, i32 0) #5
  store i32 %call5, i32* %ext_size, align 4, !tbaa !26
  %24 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %24, i32 0, i32 3
  %25 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory, align 8, !tbaa !29
  %non_gc_memory = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %25, i32 0, i32 3
  %26 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory, align 8, !tbaa !30
  %procs = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %26, i32 0, i32 1
  %alloc_byte_array = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs, i32 0, i32 10
  %27 = load i8* (%struct.gs_memory_s*, i32, i32, i8*)*, i8* (%struct.gs_memory_s*, i32, i32, i8*)** %alloc_byte_array, align 8, !tbaa !33
  %28 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %memory6 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %28, i32 0, i32 3
  %29 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory6, align 8, !tbaa !29
  %non_gc_memory7 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %29, i32 0, i32 3
  %30 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory7, align 8, !tbaa !30
  %31 = load i32, i32* %ext_size, align 4, !tbaa !26
  %call8 = call i8* %27(%struct.gs_memory_s* %30, i32 %31, i32 1, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.64, i32 0, i32 0)) #5
  store i8* %call8, i8** %ext_line, align 8, !tbaa !1
  %32 = load i8*, i8** %ext_line, align 8, !tbaa !1
  %cmp9 = icmp eq i8* %32, null
  br i1 %cmp9, label %if.then.10, label %if.end.11

if.then.10:                                       ; preds = %if.end
  %33 = load i64, i64* %flags, align 8, !tbaa !25
  %and = and i64 %33, -513
  store i64 %and, i64* %flags, align 8, !tbaa !25
  br label %if.end.11

if.end.11:                                        ; preds = %if.then.10, %if.end
  %34 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc12 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %34, i32 0, i32 68
  %escp_width = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc12, i32 0, i32 15
  %35 = load i32, i32* %escp_width, align 4, !tbaa !34
  store i32 %35, i32* %prt_pixels, align 4, !tbaa !26
  %36 = load i32, i32* %prt_pixels, align 4, !tbaa !26
  %add = add nsw i32 %36, 7
  %div13 = sdiv i32 %add, 8
  %37 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc14 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %37, i32 0, i32 68
  %prt_size = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc14, i32 0, i32 21
  store i32 %div13, i32* %prt_size, align 4, !tbaa !35
  %38 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc15 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %38, i32 0, i32 68
  %prt_size16 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc15, i32 0, i32 21
  %39 = load i32, i32* %prt_size16, align 4, !tbaa !35
  %mul = mul nsw i32 %39, 8
  store i32 %mul, i32* %prt_pixels, align 4, !tbaa !26
  %40 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %height = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %40, i32 0, i32 14
  %41 = load i32, i32* %height, align 4, !tbaa !36
  %conv = sitofp i32 %41 to double
  %42 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %HWMargins = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %42, i32 0, i32 25
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %HWMargins, i32 0, i64 3
  %43 = load float, float* %arrayidx, align 4, !tbaa !37
  %conv17 = fpext float %43 to double
  %div18 = fdiv double %conv17, 7.200000e+01
  %44 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %HWMargins19 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %44, i32 0, i32 25
  %arrayidx20 = getelementptr inbounds [4 x float], [4 x float]* %HWMargins19, i32 0, i64 1
  %45 = load float, float* %arrayidx20, align 4, !tbaa !37
  %conv21 = fpext float %45 to double
  %div22 = fdiv double %conv21, 7.200000e+01
  %add23 = fadd double %div18, %div22
  %46 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %HWResolution = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %46, i32 0, i32 22
  %arrayidx24 = getelementptr inbounds [2 x float], [2 x float]* %HWResolution, i32 0, i64 1
  %47 = load float, float* %arrayidx24, align 4, !tbaa !37
  %conv25 = fpext float %47 to double
  %mul26 = fmul double %add23, %conv25
  %sub = fsub double %conv, %mul26
  %conv27 = fptosi double %sub to i32
  %48 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc28 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %48, i32 0, i32 68
  %prt_scans = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc28, i32 0, i32 33
  store i32 %conv27, i32* %prt_scans, align 4, !tbaa !39
  %49 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %memory29 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %49, i32 0, i32 3
  %50 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory29, align 8, !tbaa !29
  %non_gc_memory30 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %50, i32 0, i32 3
  %51 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory30, align 8, !tbaa !30
  %procs31 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %51, i32 0, i32 1
  %alloc_byte_array32 = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs31, i32 0, i32 10
  %52 = load i8* (%struct.gs_memory_s*, i32, i32, i8*)*, i8* (%struct.gs_memory_s*, i32, i32, i8*)** %alloc_byte_array32, align 8, !tbaa !33
  %53 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %memory33 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %53, i32 0, i32 3
  %54 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory33, align 8, !tbaa !29
  %non_gc_memory34 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %54, i32 0, i32 3
  %55 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory34, align 8, !tbaa !30
  %56 = load i32, i32* %prt_pixels, align 4, !tbaa !26
  %call35 = call i8* %52(%struct.gs_memory_s* %55, i32 %56, i32 1, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.65, i32 0, i32 0)) #5
  store i8* %call35, i8** %col_line, align 8, !tbaa !1
  %57 = load i8*, i8** %col_line, align 8, !tbaa !1
  %cmp36 = icmp eq i8* %57, null
  br i1 %cmp36, label %if.then.38, label %if.end.40

if.then.38:                                       ; preds = %if.end.11
  %58 = load i64, i64* %flags, align 8, !tbaa !25
  %and39 = and i64 %58, -513
  store i64 %and39, i64* %flags, align 8, !tbaa !25
  br label %if.end.40

if.end.40:                                        ; preds = %if.then.38, %if.end.11
  %59 = load i32, i32* %prt_pixels, align 4, !tbaa !26
  store i32 %59, i32* %alg_size, align 4, !tbaa !26
  %60 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %color_info = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %60, i32 0, i32 11
  %num_components = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info, i32 0, i32 1
  %61 = load i32, i32* %num_components, align 4, !tbaa !40
  %62 = load i32, i32* %alg_size, align 4, !tbaa !26
  %mul41 = mul nsw i32 %62, %61
  store i32 %mul41, i32* %alg_size, align 4, !tbaa !26
  %63 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc42 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %63, i32 0, i32 68
  %dither = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc42, i32 0, i32 2
  %64 = load %struct.stc_dither_s*, %struct.stc_dither_s** %dither, align 8, !tbaa !41
  %flags43 = getelementptr inbounds %struct.stc_dither_s, %struct.stc_dither_s* %64, i32 0, i32 2
  %65 = load i32, i32* %flags43, align 4, !tbaa !42
  %and44 = and i32 %65, 64
  %tobool = icmp ne i32 %and44, 0
  br i1 %tobool, label %if.then.51, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end.40
  %66 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc45 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %66, i32 0, i32 68
  %bits = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc45, i32 0, i32 1
  %67 = load i32, i32* %bits, align 4, !tbaa !44
  %cmp46 = icmp eq i32 %67, 8
  br i1 %cmp46, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %lor.lhs.false
  %68 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc48 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %68, i32 0, i32 68
  %alg_item = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc48, i32 0, i32 19
  %69 = load i32, i32* %alg_item, align 4, !tbaa !45
  %cmp49 = icmp eq i32 %69, 1
  br i1 %cmp49, label %if.then.51, label %if.else

if.then.51:                                       ; preds = %land.lhs.true, %if.end.40
  store i8* null, i8** %alg_line, align 8, !tbaa !1
  br label %if.end.66

if.else:                                          ; preds = %land.lhs.true, %lor.lhs.false
  %70 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %memory52 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %70, i32 0, i32 3
  %71 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory52, align 8, !tbaa !29
  %non_gc_memory53 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %71, i32 0, i32 3
  %72 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory53, align 8, !tbaa !30
  %procs54 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %72, i32 0, i32 1
  %alloc_byte_array55 = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs54, i32 0, i32 10
  %73 = load i8* (%struct.gs_memory_s*, i32, i32, i8*)*, i8* (%struct.gs_memory_s*, i32, i32, i8*)** %alloc_byte_array55, align 8, !tbaa !33
  %74 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %memory56 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %74, i32 0, i32 3
  %75 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory56, align 8, !tbaa !29
  %non_gc_memory57 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %75, i32 0, i32 3
  %76 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory57, align 8, !tbaa !30
  %77 = load i32, i32* %alg_size, align 4, !tbaa !26
  %78 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc58 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %78, i32 0, i32 68
  %alg_item59 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc58, i32 0, i32 19
  %79 = load i32, i32* %alg_item59, align 4, !tbaa !45
  %call60 = call i8* %73(%struct.gs_memory_s* %76, i32 %77, i32 %79, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.66, i32 0, i32 0)) #5
  store i8* %call60, i8** %alg_line, align 8, !tbaa !1
  %80 = load i8*, i8** %alg_line, align 8, !tbaa !1
  %cmp61 = icmp eq i8* %80, null
  br i1 %cmp61, label %if.then.63, label %if.end.65

if.then.63:                                       ; preds = %if.else
  %81 = load i64, i64* %flags, align 8, !tbaa !25
  %and64 = and i64 %81, -513
  store i64 %and64, i64* %flags, align 8, !tbaa !25
  br label %if.end.65

if.end.65:                                        ; preds = %if.then.63, %if.else
  br label %if.end.66

if.end.66:                                        ; preds = %if.end.65, %if.then.51
  %82 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc67 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %82, i32 0, i32 68
  %dither68 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc67, i32 0, i32 2
  %83 = load %struct.stc_dither_s*, %struct.stc_dither_s** %dither68, align 8, !tbaa !41
  %bufadd = getelementptr inbounds %struct.stc_dither_s, %struct.stc_dither_s* %83, i32 0, i32 3
  %84 = load i32, i32* %bufadd, align 4, !tbaa !46
  %85 = load i32, i32* %alg_size, align 4, !tbaa !26
  %86 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc69 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %86, i32 0, i32 68
  %dither70 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc69, i32 0, i32 2
  %87 = load %struct.stc_dither_s*, %struct.stc_dither_s** %dither70, align 8, !tbaa !41
  %flags71 = getelementptr inbounds %struct.stc_dither_s, %struct.stc_dither_s* %87, i32 0, i32 2
  %88 = load i32, i32* %flags71, align 4, !tbaa !42
  %div72 = udiv i32 %88, 256
  %mul73 = mul i32 %85, %div72
  %add74 = add i32 %84, %mul73
  store i32 %add74, i32* %buf_size, align 4, !tbaa !26
  %89 = load i32, i32* %buf_size, align 4, !tbaa !26
  %cmp75 = icmp sgt i32 %89, 0
  br i1 %cmp75, label %if.then.77, label %if.else.92

if.then.77:                                       ; preds = %if.end.66
  %90 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %memory78 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %90, i32 0, i32 3
  %91 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory78, align 8, !tbaa !29
  %non_gc_memory79 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %91, i32 0, i32 3
  %92 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory79, align 8, !tbaa !30
  %procs80 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %92, i32 0, i32 1
  %alloc_byte_array81 = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs80, i32 0, i32 10
  %93 = load i8* (%struct.gs_memory_s*, i32, i32, i8*)*, i8* (%struct.gs_memory_s*, i32, i32, i8*)** %alloc_byte_array81, align 8, !tbaa !33
  %94 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %memory82 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %94, i32 0, i32 3
  %95 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory82, align 8, !tbaa !29
  %non_gc_memory83 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %95, i32 0, i32 3
  %96 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory83, align 8, !tbaa !30
  %97 = load i32, i32* %buf_size, align 4, !tbaa !26
  %98 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc84 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %98, i32 0, i32 68
  %alg_item85 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc84, i32 0, i32 19
  %99 = load i32, i32* %alg_item85, align 4, !tbaa !45
  %call86 = call i8* %93(%struct.gs_memory_s* %96, i32 %97, i32 %99, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.67, i32 0, i32 0)) #5
  store i8* %call86, i8** %buf, align 8, !tbaa !1
  %100 = load i8*, i8** %buf, align 8, !tbaa !1
  %cmp87 = icmp eq i8* %100, null
  br i1 %cmp87, label %if.then.89, label %if.end.91

if.then.89:                                       ; preds = %if.then.77
  %101 = load i64, i64* %flags, align 8, !tbaa !25
  %and90 = and i64 %101, -513
  store i64 %and90, i64* %flags, align 8, !tbaa !25
  br label %if.end.91

if.end.91:                                        ; preds = %if.then.89, %if.then.77
  br label %if.end.93

if.else.92:                                       ; preds = %if.end.66
  store i8* null, i8** %buf, align 8, !tbaa !1
  br label %if.end.93

if.end.93:                                        ; preds = %if.else.92, %if.end.91
  %102 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc94 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %102, i32 0, i32 68
  %prt_buf = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc94, i32 0, i32 20
  store i32 16, i32* %prt_buf, align 4, !tbaa !47
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.93
  %103 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc95 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %103, i32 0, i32 68
  %prt_buf96 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc95, i32 0, i32 20
  %104 = load i32, i32* %prt_buf96, align 4, !tbaa !47
  %105 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc97 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %105, i32 0, i32 68
  %escp_m = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc97, i32 0, i32 28
  %106 = load i32, i32* %escp_m, align 4, !tbaa !48
  %107 = load i32, i32* %npass, align 4, !tbaa !26
  %mul98 = mul nsw i32 %106, %107
  %cmp99 = icmp slt i32 %104, %mul98
  br i1 %cmp99, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %108 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc101 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %108, i32 0, i32 68
  %prt_buf102 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc101, i32 0, i32 20
  %109 = load i32, i32* %prt_buf102, align 4, !tbaa !47
  %shl = shl i32 %109, 1
  store i32 %shl, i32* %prt_buf102, align 4, !tbaa !47
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %110 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %color_info103 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %110, i32 0, i32 11
  %num_components104 = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info103, i32 0, i32 1
  %111 = load i32, i32* %num_components104, align 4, !tbaa !40
  %cmp105 = icmp sgt i32 %111, 1
  br i1 %cmp105, label %if.then.107, label %if.end.111

if.then.107:                                      ; preds = %for.end
  %112 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc108 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %112, i32 0, i32 68
  %prt_buf109 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc108, i32 0, i32 20
  %113 = load i32, i32* %prt_buf109, align 4, !tbaa !47
  %mul110 = mul nsw i32 %113, 4
  store i32 %mul110, i32* %prt_buf109, align 4, !tbaa !47
  br label %if.end.111

if.end.111:                                       ; preds = %if.then.107, %for.end
  %114 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %memory112 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %114, i32 0, i32 3
  %115 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory112, align 8, !tbaa !29
  %non_gc_memory113 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %115, i32 0, i32 3
  %116 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory113, align 8, !tbaa !30
  %procs114 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %116, i32 0, i32 1
  %alloc_byte_array115 = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs114, i32 0, i32 10
  %117 = load i8* (%struct.gs_memory_s*, i32, i32, i8*)*, i8* (%struct.gs_memory_s*, i32, i32, i8*)** %alloc_byte_array115, align 8, !tbaa !33
  %118 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %memory116 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %118, i32 0, i32 3
  %119 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory116, align 8, !tbaa !29
  %non_gc_memory117 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %119, i32 0, i32 3
  %120 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory117, align 8, !tbaa !30
  %121 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc118 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %121, i32 0, i32 68
  %prt_buf119 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc118, i32 0, i32 20
  %122 = load i32, i32* %prt_buf119, align 4, !tbaa !47
  %call120 = call i8* %117(%struct.gs_memory_s* %120, i32 %122, i32 4, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.68, i32 0, i32 0)) #5
  %123 = bitcast i8* %call120 to i32*
  %124 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc121 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %124, i32 0, i32 68
  %prt_width = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc121, i32 0, i32 34
  store i32* %123, i32** %prt_width, align 8, !tbaa !49
  %125 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc122 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %125, i32 0, i32 68
  %prt_width123 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc122, i32 0, i32 34
  %126 = load i32*, i32** %prt_width123, align 8, !tbaa !49
  %cmp124 = icmp eq i32* %126, null
  br i1 %cmp124, label %if.then.126, label %if.end.128

if.then.126:                                      ; preds = %if.end.111
  %127 = load i64, i64* %flags, align 8, !tbaa !25
  %and127 = and i64 %127, -513
  store i64 %and127, i64* %flags, align 8, !tbaa !25
  br label %if.end.128

if.end.128:                                       ; preds = %if.then.126, %if.end.111
  %128 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %memory129 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %128, i32 0, i32 3
  %129 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory129, align 8, !tbaa !29
  %non_gc_memory130 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %129, i32 0, i32 3
  %130 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory130, align 8, !tbaa !30
  %procs131 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %130, i32 0, i32 1
  %alloc_byte_array132 = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs131, i32 0, i32 10
  %131 = load i8* (%struct.gs_memory_s*, i32, i32, i8*)*, i8* (%struct.gs_memory_s*, i32, i32, i8*)** %alloc_byte_array132, align 8, !tbaa !33
  %132 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %memory133 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %132, i32 0, i32 3
  %133 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory133, align 8, !tbaa !29
  %non_gc_memory134 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %133, i32 0, i32 3
  %134 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory134, align 8, !tbaa !30
  %135 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc135 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %135, i32 0, i32 68
  %prt_buf136 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc135, i32 0, i32 20
  %136 = load i32, i32* %prt_buf136, align 4, !tbaa !47
  %call137 = call i8* %131(%struct.gs_memory_s* %134, i32 %136, i32 8, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.69, i32 0, i32 0)) #5
  %137 = bitcast i8* %call137 to i8**
  %138 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc138 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %138, i32 0, i32 68
  %prt_data = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc138, i32 0, i32 35
  store i8** %137, i8*** %prt_data, align 8, !tbaa !50
  %139 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc139 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %139, i32 0, i32 68
  %prt_data140 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc139, i32 0, i32 35
  %140 = load i8**, i8*** %prt_data140, align 8, !tbaa !50
  %cmp141 = icmp eq i8** %140, null
  br i1 %cmp141, label %if.then.143, label %if.else.145

if.then.143:                                      ; preds = %if.end.128
  %141 = load i64, i64* %flags, align 8, !tbaa !25
  %and144 = and i64 %141, -513
  store i64 %and144, i64* %flags, align 8, !tbaa !25
  br label %if.end.175

if.else.145:                                      ; preds = %if.end.128
  %142 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %142) #2
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond.146

for.cond.146:                                     ; preds = %for.inc.173, %if.else.145
  %143 = load i32, i32* %i, align 4, !tbaa !26
  %144 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc147 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %144, i32 0, i32 68
  %prt_buf148 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc147, i32 0, i32 20
  %145 = load i32, i32* %prt_buf148, align 4, !tbaa !47
  %cmp149 = icmp slt i32 %143, %145
  br i1 %cmp149, label %for.body.151, label %for.end.174

for.body.151:                                     ; preds = %for.cond.146
  %146 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %memory152 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %146, i32 0, i32 3
  %147 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory152, align 8, !tbaa !29
  %non_gc_memory153 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %147, i32 0, i32 3
  %148 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory153, align 8, !tbaa !30
  %procs154 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %148, i32 0, i32 1
  %alloc_byte_array155 = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs154, i32 0, i32 10
  %149 = load i8* (%struct.gs_memory_s*, i32, i32, i8*)*, i8* (%struct.gs_memory_s*, i32, i32, i8*)** %alloc_byte_array155, align 8, !tbaa !33
  %150 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %memory156 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %150, i32 0, i32 3
  %151 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory156, align 8, !tbaa !29
  %non_gc_memory157 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %151, i32 0, i32 3
  %152 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory157, align 8, !tbaa !30
  %153 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc158 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %153, i32 0, i32 68
  %prt_size159 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc158, i32 0, i32 21
  %154 = load i32, i32* %prt_size159, align 4, !tbaa !35
  %call160 = call i8* %149(%struct.gs_memory_s* %152, i32 %154, i32 1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.70, i32 0, i32 0)) #5
  %155 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom = sext i32 %155 to i64
  %156 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc161 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %156, i32 0, i32 68
  %prt_data162 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc161, i32 0, i32 35
  %157 = load i8**, i8*** %prt_data162, align 8, !tbaa !50
  %arrayidx163 = getelementptr inbounds i8*, i8** %157, i64 %idxprom
  store i8* %call160, i8** %arrayidx163, align 8, !tbaa !1
  %158 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom164 = sext i32 %158 to i64
  %159 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc165 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %159, i32 0, i32 68
  %prt_data166 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc165, i32 0, i32 35
  %160 = load i8**, i8*** %prt_data166, align 8, !tbaa !50
  %arrayidx167 = getelementptr inbounds i8*, i8** %160, i64 %idxprom164
  %161 = load i8*, i8** %arrayidx167, align 8, !tbaa !1
  %cmp168 = icmp eq i8* %161, null
  br i1 %cmp168, label %if.then.170, label %if.end.172

if.then.170:                                      ; preds = %for.body.151
  %162 = load i64, i64* %flags, align 8, !tbaa !25
  %and171 = and i64 %162, -513
  store i64 %and171, i64* %flags, align 8, !tbaa !25
  br label %if.end.172

if.end.172:                                       ; preds = %if.then.170, %for.body.151
  br label %for.inc.173

for.inc.173:                                      ; preds = %if.end.172
  %163 = load i32, i32* %i, align 4, !tbaa !26
  %inc = add nsw i32 %163, 1
  store i32 %inc, i32* %i, align 4, !tbaa !26
  br label %for.cond.146

for.end.174:                                      ; preds = %for.cond.146
  %164 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %164) #2
  br label %if.end.175

if.end.175:                                       ; preds = %for.end.174, %if.then.143
  %165 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc176 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %165, i32 0, i32 68
  %prt_size177 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc176, i32 0, i32 21
  %166 = load i32, i32* %prt_size177, align 4, !tbaa !35
  %conv178 = sext i32 %166 to i64
  %add179 = add i64 %conv178, 8
  %sub180 = sub i64 %add179, 1
  %div181 = udiv i64 %sub180, 4
  %conv182 = trunc i64 %div181 to i32
  %167 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc183 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %167, i32 0, i32 68
  %seed_size = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc183, i32 0, i32 23
  store i32 %conv182, i32* %seed_size, align 4, !tbaa !51
  %168 = bitcast i32* %i184 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %168) #2
  store i32 0, i32* %i184, align 4, !tbaa !26
  br label %for.cond.185

for.cond.185:                                     ; preds = %for.inc.232, %if.end.175
  %169 = load i32, i32* %i184, align 4, !tbaa !26
  %170 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %color_info186 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %170, i32 0, i32 11
  %num_components187 = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info186, i32 0, i32 1
  %171 = load i32, i32* %num_components187, align 4, !tbaa !40
  %cmp188 = icmp slt i32 %169, %171
  br i1 %cmp188, label %for.body.190, label %for.end.234

for.body.190:                                     ; preds = %for.cond.185
  %172 = load i64, i64* %flags, align 8, !tbaa !25
  %and191 = and i64 %172, 3072
  %cmp192 = icmp eq i64 %and191, 2048
  br i1 %cmp192, label %if.then.194, label %if.else.226

if.then.194:                                      ; preds = %for.body.190
  %173 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %memory195 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %173, i32 0, i32 3
  %174 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory195, align 8, !tbaa !29
  %non_gc_memory196 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %174, i32 0, i32 3
  %175 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory196, align 8, !tbaa !30
  %procs197 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %175, i32 0, i32 1
  %alloc_byte_array198 = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs197, i32 0, i32 10
  %176 = load i8* (%struct.gs_memory_s*, i32, i32, i8*)*, i8* (%struct.gs_memory_s*, i32, i32, i8*)** %alloc_byte_array198, align 8, !tbaa !33
  %177 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %memory199 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %177, i32 0, i32 3
  %178 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory199, align 8, !tbaa !29
  %non_gc_memory200 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %178, i32 0, i32 3
  %179 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory200, align 8, !tbaa !30
  %180 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc201 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %180, i32 0, i32 68
  %seed_size202 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc201, i32 0, i32 23
  %181 = load i32, i32* %seed_size202, align 4, !tbaa !51
  %call203 = call i8* %176(%struct.gs_memory_s* %179, i32 %181, i32 4, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.71, i32 0, i32 0)) #5
  %182 = load i32, i32* %i184, align 4, !tbaa !26
  %idxprom204 = sext i32 %182 to i64
  %183 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc205 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %183, i32 0, i32 68
  %seed_row = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc205, i32 0, i32 37
  %arrayidx206 = getelementptr inbounds [4 x i8*], [4 x i8*]* %seed_row, i32 0, i64 %idxprom204
  store i8* %call203, i8** %arrayidx206, align 8, !tbaa !1
  %184 = load i32, i32* %i184, align 4, !tbaa !26
  %idxprom207 = sext i32 %184 to i64
  %185 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc208 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %185, i32 0, i32 68
  %seed_row209 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc208, i32 0, i32 37
  %arrayidx210 = getelementptr inbounds [4 x i8*], [4 x i8*]* %seed_row209, i32 0, i64 %idxprom207
  %186 = load i8*, i8** %arrayidx210, align 8, !tbaa !1
  %cmp211 = icmp eq i8* %186, null
  br i1 %cmp211, label %if.then.213, label %if.else.215

if.then.213:                                      ; preds = %if.then.194
  %187 = load i64, i64* %flags, align 8, !tbaa !25
  %and214 = and i64 %187, -513
  store i64 %and214, i64* %flags, align 8, !tbaa !25
  br label %if.end.225

if.else.215:                                      ; preds = %if.then.194
  %188 = load i32, i32* %i184, align 4, !tbaa !26
  %idxprom216 = sext i32 %188 to i64
  %189 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc217 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %189, i32 0, i32 68
  %seed_row218 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc217, i32 0, i32 37
  %arrayidx219 = getelementptr inbounds [4 x i8*], [4 x i8*]* %seed_row218, i32 0, i64 %idxprom216
  %190 = load i8*, i8** %arrayidx219, align 8, !tbaa !1
  %191 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc220 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %191, i32 0, i32 68
  %seed_size221 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc220, i32 0, i32 23
  %192 = load i32, i32* %seed_size221, align 4, !tbaa !51
  %conv222 = sext i32 %192 to i64
  %mul223 = mul i64 %conv222, 4
  %call224 = call i8* @memset(i8* %190, i32 0, i64 %mul223) #6
  br label %if.end.225

if.end.225:                                       ; preds = %if.else.215, %if.then.213
  br label %if.end.231

if.else.226:                                      ; preds = %for.body.190
  %193 = load i32, i32* %i184, align 4, !tbaa !26
  %idxprom227 = sext i32 %193 to i64
  %194 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc228 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %194, i32 0, i32 68
  %seed_row229 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc228, i32 0, i32 37
  %arrayidx230 = getelementptr inbounds [4 x i8*], [4 x i8*]* %seed_row229, i32 0, i64 %idxprom227
  store i8* null, i8** %arrayidx230, align 8, !tbaa !1
  br label %if.end.231

if.end.231:                                       ; preds = %if.else.226, %if.end.225
  br label %for.inc.232

for.inc.232:                                      ; preds = %if.end.231
  %195 = load i32, i32* %i184, align 4, !tbaa !26
  %inc233 = add nsw i32 %195, 1
  store i32 %inc233, i32* %i184, align 4, !tbaa !26
  br label %for.cond.185

for.end.234:                                      ; preds = %for.cond.185
  br label %while.cond

while.cond:                                       ; preds = %while.body, %for.end.234
  %196 = load i32, i32* %i184, align 4, !tbaa !26
  %conv235 = sext i32 %196 to i64
  %cmp236 = icmp ult i64 %conv235, 4
  br i1 %cmp236, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %197 = load i32, i32* %i184, align 4, !tbaa !26
  %inc238 = add nsw i32 %197, 1
  store i32 %inc238, i32* %i184, align 4, !tbaa !26
  %idxprom239 = sext i32 %197 to i64
  %198 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc240 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %198, i32 0, i32 68
  %seed_row241 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc240, i32 0, i32 37
  %arrayidx242 = getelementptr inbounds [4 x i8*], [4 x i8*]* %seed_row241, i32 0, i64 %idxprom239
  store i8* null, i8** %arrayidx242, align 8, !tbaa !1
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %199 = bitcast i32* %i184 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %199) #2
  %200 = load i64, i64* %flags, align 8, !tbaa !25
  %and243 = and i64 %200, 3072
  switch i64 %and243, label %sw.default [
    i64 1024, label %sw.bb
    i64 2048, label %sw.bb.248
  ]

sw.bb:                                            ; preds = %while.end
  %201 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc244 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %201, i32 0, i32 68
  %prt_size245 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc244, i32 0, i32 21
  %202 = load i32, i32* %prt_size245, align 4, !tbaa !35
  %add246 = add nsw i32 64, %202
  %203 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc247 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %203, i32 0, i32 68
  %escp_size = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc247, i32 0, i32 22
  store i32 %add246, i32* %escp_size, align 4, !tbaa !52
  br label %sw.epilog

sw.bb.248:                                        ; preds = %while.end
  %204 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc249 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %204, i32 0, i32 68
  %prt_size250 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc249, i32 0, i32 21
  %205 = load i32, i32* %prt_size250, align 4, !tbaa !35
  %mul251 = mul nsw i32 2, %205
  %add252 = add nsw i32 64, %mul251
  %206 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc253 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %206, i32 0, i32 68
  %escp_size254 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc253, i32 0, i32 22
  store i32 %add252, i32* %escp_size254, align 4, !tbaa !52
  br label %sw.epilog

sw.default:                                       ; preds = %while.end
  %207 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc255 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %207, i32 0, i32 68
  %prt_size256 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc255, i32 0, i32 21
  %208 = load i32, i32* %prt_size256, align 4, !tbaa !35
  %add257 = add nsw i32 64, %208
  %209 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc258 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %209, i32 0, i32 68
  %prt_size259 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc258, i32 0, i32 21
  %210 = load i32, i32* %prt_size259, align 4, !tbaa !35
  %add260 = add nsw i32 %210, 127
  %div261 = sdiv i32 %add260, 128
  %add262 = add nsw i32 %add257, %div261
  %211 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc263 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %211, i32 0, i32 68
  %escp_size264 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc263, i32 0, i32 22
  store i32 %add262, i32* %escp_size264, align 4, !tbaa !52
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb.248, %sw.bb
  %212 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %memory265 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %212, i32 0, i32 3
  %213 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory265, align 8, !tbaa !29
  %non_gc_memory266 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %213, i32 0, i32 3
  %214 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory266, align 8, !tbaa !30
  %procs267 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %214, i32 0, i32 1
  %alloc_byte_array268 = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs267, i32 0, i32 10
  %215 = load i8* (%struct.gs_memory_s*, i32, i32, i8*)*, i8* (%struct.gs_memory_s*, i32, i32, i8*)** %alloc_byte_array268, align 8, !tbaa !33
  %216 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %memory269 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %216, i32 0, i32 3
  %217 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory269, align 8, !tbaa !29
  %non_gc_memory270 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %217, i32 0, i32 3
  %218 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory270, align 8, !tbaa !30
  %219 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc271 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %219, i32 0, i32 68
  %escp_size272 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc271, i32 0, i32 22
  %220 = load i32, i32* %escp_size272, align 4, !tbaa !52
  %call273 = call i8* %215(%struct.gs_memory_s* %218, i32 %220, i32 1, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.72, i32 0, i32 0)) #5
  %221 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc274 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %221, i32 0, i32 68
  %escp_data = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc274, i32 0, i32 36
  store i8* %call273, i8** %escp_data, align 8, !tbaa !53
  %222 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc275 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %222, i32 0, i32 68
  %escp_data276 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc275, i32 0, i32 36
  %223 = load i8*, i8** %escp_data276, align 8, !tbaa !53
  %cmp277 = icmp eq i8* %223, null
  br i1 %cmp277, label %if.then.279, label %if.end.281

if.then.279:                                      ; preds = %sw.epilog
  %224 = load i64, i64* %flags, align 8, !tbaa !25
  %and280 = and i64 %224, -513
  store i64 %and280, i64* %flags, align 8, !tbaa !25
  br label %if.end.281

if.end.281:                                       ; preds = %if.then.279, %sw.epilog
  %225 = load i64, i64* %flags, align 8, !tbaa !25
  %and282 = and i64 %225, 512
  %cmp283 = icmp ne i64 %and282, 0
  br i1 %cmp283, label %if.then.285, label %if.end.862

if.then.285:                                      ; preds = %if.end.281
  %226 = bitcast i32* %ncolor to i8*
  call void @llvm.lifetime.start(i64 4, i8* %226) #2
  %227 = bitcast i32* %buf_i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %227) #2
  %228 = bitcast i8* (%struct.stcolor_device_s*, i8*, i32, i8*)** %iconvert to i8*
  call void @llvm.lifetime.start(i64 8, i8* %228) #2
  store i8* (%struct.stcolor_device_s*, i8*, i32, i8*)* @stc_any_depth, i8* (%struct.stcolor_device_s*, i8*, i32, i8*)** %iconvert, align 8, !tbaa !1
  %229 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %color_info286 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %229, i32 0, i32 11
  %num_components287 = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info286, i32 0, i32 1
  %230 = load i32, i32* %num_components287, align 4, !tbaa !40
  %cmp288 = icmp eq i32 %230, 3
  br i1 %cmp288, label %if.then.290, label %if.else.293

if.then.290:                                      ; preds = %if.then.285
  %231 = load i8*, i8** %col_line, align 8, !tbaa !1
  %232 = load i32, i32* %prt_pixels, align 4, !tbaa !26
  %conv291 = sext i32 %232 to i64
  %call292 = call i8* @memset(i8* %231, i32 7, i64 %conv291) #6
  br label %if.end.296

if.else.293:                                      ; preds = %if.then.285
  %233 = load i8*, i8** %col_line, align 8, !tbaa !1
  %234 = load i32, i32* %prt_pixels, align 4, !tbaa !26
  %conv294 = sext i32 %234 to i64
  %call295 = call i8* @memset(i8* %233, i32 0, i64 %conv294) #6
  br label %if.end.296

if.end.296:                                       ; preds = %if.else.293, %if.then.290
  %235 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc297 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %235, i32 0, i32 68
  %dither298 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc297, i32 0, i32 2
  %236 = load %struct.stc_dither_s*, %struct.stc_dither_s** %dither298, align 8, !tbaa !41
  %flags299 = getelementptr inbounds %struct.stc_dither_s, %struct.stc_dither_s* %236, i32 0, i32 2
  %237 = load i32, i32* %flags299, align 4, !tbaa !42
  %and300 = and i32 %237, 64
  %tobool301 = icmp ne i32 %and300, 0
  br i1 %tobool301, label %if.then.312, label %lor.lhs.false.302

lor.lhs.false.302:                                ; preds = %if.end.296
  %238 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc303 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %238, i32 0, i32 68
  %bits304 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc303, i32 0, i32 1
  %239 = load i32, i32* %bits304, align 4, !tbaa !44
  %cmp305 = icmp eq i32 %239, 8
  br i1 %cmp305, label %land.lhs.true.307, label %if.else.313

land.lhs.true.307:                                ; preds = %lor.lhs.false.302
  %240 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc308 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %240, i32 0, i32 68
  %alg_item309 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc308, i32 0, i32 19
  %241 = load i32, i32* %alg_item309, align 4, !tbaa !45
  %cmp310 = icmp eq i32 %241, 1
  br i1 %cmp310, label %if.then.312, label %if.else.313

if.then.312:                                      ; preds = %land.lhs.true.307, %if.end.296
  store i8* (%struct.stcolor_device_s*, i8*, i32, i8*)* @stc_any_direct, i8* (%struct.stcolor_device_s*, i8*, i32, i8*)** %iconvert, align 8, !tbaa !1
  br label %if.end.413

if.else.313:                                      ; preds = %land.lhs.true.307, %lor.lhs.false.302
  %242 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %color_info314 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %242, i32 0, i32 11
  %num_components315 = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info314, i32 0, i32 1
  %243 = load i32, i32* %num_components315, align 4, !tbaa !40
  %cmp316 = icmp eq i32 %243, 3
  br i1 %cmp316, label %land.lhs.true.318, label %if.else.330

land.lhs.true.318:                                ; preds = %if.else.313
  %244 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %color_info319 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %244, i32 0, i32 11
  %depth = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info319, i32 0, i32 3
  %245 = load i16, i16* %depth, align 2, !tbaa !54
  %conv320 = zext i16 %245 to i32
  %cmp321 = icmp eq i32 %conv320, 24
  br i1 %cmp321, label %land.lhs.true.323, label %if.else.330

land.lhs.true.323:                                ; preds = %land.lhs.true.318
  %246 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc324 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %246, i32 0, i32 68
  %alg_item325 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc324, i32 0, i32 19
  %247 = load i32, i32* %alg_item325, align 4, !tbaa !45
  %conv326 = sext i32 %247 to i64
  %cmp327 = icmp eq i64 8, %conv326
  br i1 %cmp327, label %if.then.329, label %if.else.330

if.then.329:                                      ; preds = %land.lhs.true.323
  store i8* (%struct.stcolor_device_s*, i8*, i32, i8*)* @stc_rgb24_long, i8* (%struct.stcolor_device_s*, i8*, i32, i8*)** %iconvert, align 8, !tbaa !1
  br label %if.end.412

if.else.330:                                      ; preds = %land.lhs.true.323, %land.lhs.true.318, %if.else.313
  %248 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc331 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %248, i32 0, i32 68
  %flags332 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc331, i32 0, i32 0
  %249 = load i64, i64* %flags332, align 8, !tbaa !5
  %and333 = and i64 %249, 32
  %tobool334 = icmp ne i64 %and333, 0
  br i1 %tobool334, label %if.then.335, label %if.else.392

if.then.335:                                      ; preds = %if.else.330
  %250 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc336 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %250, i32 0, i32 68
  %dither337 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc336, i32 0, i32 2
  %251 = load %struct.stc_dither_s*, %struct.stc_dither_s** %dither337, align 8, !tbaa !41
  %flags338 = getelementptr inbounds %struct.stc_dither_s, %struct.stc_dither_s* %251, i32 0, i32 2
  %252 = load i32, i32* %flags338, align 4, !tbaa !42
  %and339 = and i32 %252, 24
  %cmp340 = icmp eq i32 %and339, 8
  br i1 %cmp340, label %land.lhs.true.342, label %if.else.349

land.lhs.true.342:                                ; preds = %if.then.335
  %253 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc343 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %253, i32 0, i32 68
  %dither344 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc343, i32 0, i32 2
  %254 = load %struct.stc_dither_s*, %struct.stc_dither_s** %dither344, align 8, !tbaa !41
  %minmax = getelementptr inbounds %struct.stc_dither_s, %struct.stc_dither_s* %254, i32 0, i32 4
  %arrayidx345 = getelementptr inbounds [2 x double], [2 x double]* %minmax, i32 0, i64 0
  %255 = load double, double* %arrayidx345, align 8, !tbaa !55
  %cmp346 = fcmp oeq double %255, 0.000000e+00
  br i1 %cmp346, label %if.then.348, label %if.else.349

if.then.348:                                      ; preds = %land.lhs.true.342
  store i8* (%struct.stcolor_device_s*, i8*, i32, i8*)* @stc_cmyk10_dbyte, i8* (%struct.stcolor_device_s*, i8*, i32, i8*)** %iconvert, align 8, !tbaa !1
  br label %if.end.391

if.else.349:                                      ; preds = %land.lhs.true.342, %if.then.335
  %256 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc350 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %256, i32 0, i32 68
  %dither351 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc350, i32 0, i32 2
  %257 = load %struct.stc_dither_s*, %struct.stc_dither_s** %dither351, align 8, !tbaa !41
  %flags352 = getelementptr inbounds %struct.stc_dither_s, %struct.stc_dither_s* %257, i32 0, i32 2
  %258 = load i32, i32* %flags352, align 4, !tbaa !42
  %and353 = and i32 %258, 24
  %cmp354 = icmp eq i32 %and353, 8
  br i1 %cmp354, label %if.then.356, label %if.else.357

if.then.356:                                      ; preds = %if.else.349
  store i8* (%struct.stcolor_device_s*, i8*, i32, i8*)* @stc_cmyk10_byte, i8* (%struct.stcolor_device_s*, i8*, i32, i8*)** %iconvert, align 8, !tbaa !1
  br label %if.end.390

if.else.357:                                      ; preds = %if.else.349
  %259 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc358 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %259, i32 0, i32 68
  %dither359 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc358, i32 0, i32 2
  %260 = load %struct.stc_dither_s*, %struct.stc_dither_s** %dither359, align 8, !tbaa !41
  %flags360 = getelementptr inbounds %struct.stc_dither_s, %struct.stc_dither_s* %260, i32 0, i32 2
  %261 = load i32, i32* %flags360, align 4, !tbaa !42
  %and361 = and i32 %261, 24
  %cmp362 = icmp eq i32 %and361, 16
  br i1 %cmp362, label %land.lhs.true.364, label %if.else.379

land.lhs.true.364:                                ; preds = %if.else.357
  %262 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc365 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %262, i32 0, i32 68
  %dither366 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc365, i32 0, i32 2
  %263 = load %struct.stc_dither_s*, %struct.stc_dither_s** %dither366, align 8, !tbaa !41
  %minmax367 = getelementptr inbounds %struct.stc_dither_s, %struct.stc_dither_s* %263, i32 0, i32 4
  %arrayidx368 = getelementptr inbounds [2 x double], [2 x double]* %minmax367, i32 0, i64 0
  %264 = load double, double* %arrayidx368, align 8, !tbaa !55
  %cmp369 = fcmp oeq double %264, 0.000000e+00
  br i1 %cmp369, label %land.lhs.true.371, label %if.else.379

land.lhs.true.371:                                ; preds = %land.lhs.true.364
  %265 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc372 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %265, i32 0, i32 68
  %dither373 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc372, i32 0, i32 2
  %266 = load %struct.stc_dither_s*, %struct.stc_dither_s** %dither373, align 8, !tbaa !41
  %minmax374 = getelementptr inbounds %struct.stc_dither_s, %struct.stc_dither_s* %266, i32 0, i32 4
  %arrayidx375 = getelementptr inbounds [2 x double], [2 x double]* %minmax374, i32 0, i64 1
  %267 = load double, double* %arrayidx375, align 8, !tbaa !55
  %cmp376 = fcmp ole double %267, 1.023000e+03
  br i1 %cmp376, label %if.then.378, label %if.else.379

if.then.378:                                      ; preds = %land.lhs.true.371
  store i8* (%struct.stcolor_device_s*, i8*, i32, i8*)* @stc_cmyk10_dlong, i8* (%struct.stcolor_device_s*, i8*, i32, i8*)** %iconvert, align 8, !tbaa !1
  br label %if.end.389

if.else.379:                                      ; preds = %land.lhs.true.371, %land.lhs.true.364, %if.else.357
  %268 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc380 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %268, i32 0, i32 68
  %dither381 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc380, i32 0, i32 2
  %269 = load %struct.stc_dither_s*, %struct.stc_dither_s** %dither381, align 8, !tbaa !41
  %flags382 = getelementptr inbounds %struct.stc_dither_s, %struct.stc_dither_s* %269, i32 0, i32 2
  %270 = load i32, i32* %flags382, align 4, !tbaa !42
  %and383 = and i32 %270, 24
  %cmp384 = icmp eq i32 %and383, 16
  br i1 %cmp384, label %if.then.386, label %if.else.387

if.then.386:                                      ; preds = %if.else.379
  store i8* (%struct.stcolor_device_s*, i8*, i32, i8*)* @stc_cmyk10_long, i8* (%struct.stcolor_device_s*, i8*, i32, i8*)** %iconvert, align 8, !tbaa !1
  br label %if.end.388

if.else.387:                                      ; preds = %if.else.379
  store i8* (%struct.stcolor_device_s*, i8*, i32, i8*)* @stc_cmyk10_float, i8* (%struct.stcolor_device_s*, i8*, i32, i8*)** %iconvert, align 8, !tbaa !1
  br label %if.end.388

if.end.388:                                       ; preds = %if.else.387, %if.then.386
  br label %if.end.389

if.end.389:                                       ; preds = %if.end.388, %if.then.378
  br label %if.end.390

if.end.390:                                       ; preds = %if.end.389, %if.then.356
  br label %if.end.391

if.end.391:                                       ; preds = %if.end.390, %if.then.348
  br label %if.end.411

if.else.392:                                      ; preds = %if.else.330
  %271 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %color_info393 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %271, i32 0, i32 11
  %num_components394 = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info393, i32 0, i32 1
  %272 = load i32, i32* %num_components394, align 4, !tbaa !40
  %cmp395 = icmp eq i32 %272, 4
  br i1 %cmp395, label %land.lhs.true.397, label %if.end.410

land.lhs.true.397:                                ; preds = %if.else.392
  %273 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %color_info398 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %273, i32 0, i32 11
  %depth399 = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info398, i32 0, i32 3
  %274 = load i16, i16* %depth399, align 2, !tbaa !54
  %conv400 = zext i16 %274 to i32
  %cmp401 = icmp eq i32 %conv400, 32
  br i1 %cmp401, label %land.lhs.true.403, label %if.end.410

land.lhs.true.403:                                ; preds = %land.lhs.true.397
  %275 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc404 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %275, i32 0, i32 68
  %alg_item405 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc404, i32 0, i32 19
  %276 = load i32, i32* %alg_item405, align 4, !tbaa !45
  %conv406 = sext i32 %276 to i64
  %cmp407 = icmp eq i64 8, %conv406
  br i1 %cmp407, label %if.then.409, label %if.end.410

if.then.409:                                      ; preds = %land.lhs.true.403
  store i8* (%struct.stcolor_device_s*, i8*, i32, i8*)* @stc_cmyk32_long, i8* (%struct.stcolor_device_s*, i8*, i32, i8*)** %iconvert, align 8, !tbaa !1
  br label %if.end.410

if.end.410:                                       ; preds = %if.then.409, %land.lhs.true.403, %land.lhs.true.397, %if.else.392
  br label %if.end.411

if.end.411:                                       ; preds = %if.end.410, %if.end.391
  br label %if.end.412

if.end.412:                                       ; preds = %if.end.411, %if.then.329
  br label %if.end.413

if.end.413:                                       ; preds = %if.end.412, %if.then.312
  %277 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc414 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %277, i32 0, i32 68
  %dither415 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc414, i32 0, i32 2
  %278 = load %struct.stc_dither_s*, %struct.stc_dither_s** %dither415, align 8, !tbaa !41
  %fun = getelementptr inbounds %struct.stc_dither_s, %struct.stc_dither_s* %278, i32 0, i32 1
  %279 = load i32 (%struct.stcolor_device_s*, i32, i8*, i8*, i8*)*, i32 (%struct.stcolor_device_s*, i32, i8*, i8*, i8*)** %fun, align 8, !tbaa !57
  %280 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %281 = load i32, i32* %prt_pixels, align 4, !tbaa !26
  %sub416 = sub nsw i32 0, %281
  %282 = load i8*, i8** %alg_line, align 8, !tbaa !1
  %283 = load i8*, i8** %buf, align 8, !tbaa !1
  %284 = load i8*, i8** %col_line, align 8, !tbaa !1
  %call417 = call i32 %279(%struct.stcolor_device_s* %280, i32 %sub416, i8* %282, i8* %283, i8* %284) #5
  %cmp418 = icmp slt i32 %call417, 0
  br i1 %cmp418, label %if.then.420, label %if.end.422

if.then.420:                                      ; preds = %if.end.413
  %285 = load i64, i64* %flags, align 8, !tbaa !25
  %and421 = and i64 %285, -513
  store i64 %and421, i64* %flags, align 8, !tbaa !25
  br label %if.end.422

if.end.422:                                       ; preds = %if.then.420, %if.end.413
  %286 = load i64, i64* %flags, align 8, !tbaa !25
  %and423 = and i64 %286, 512
  %cmp424 = icmp ne i64 %and423, 0
  br i1 %cmp424, label %if.then.426, label %if.end.861

if.then.426:                                      ; preds = %if.end.422
  %287 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %color_info427 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %287, i32 0, i32 11
  %num_components428 = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info427, i32 0, i32 1
  %288 = load i32, i32* %num_components428, align 4, !tbaa !40
  %cmp429 = icmp sgt i32 %288, 1
  br i1 %cmp429, label %if.then.431, label %if.else.432

if.then.431:                                      ; preds = %if.then.426
  store i32 4, i32* %ncolor, align 4, !tbaa !26
  br label %if.end.433

if.else.432:                                      ; preds = %if.then.426
  store i32 1, i32* %ncolor, align 4, !tbaa !26
  br label %if.end.433

if.end.433:                                       ; preds = %if.else.432, %if.then.431
  %289 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc434 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %289, i32 0, i32 68
  %escp_m435 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc434, i32 0, i32 28
  %290 = load i32, i32* %escp_m435, align 4, !tbaa !48
  %291 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc436 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %291, i32 0, i32 68
  %escp_u437 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc436, i32 0, i32 24
  %292 = load i32, i32* %escp_u437, align 4, !tbaa !28
  %mul438 = mul nsw i32 %290, %292
  %rem = srem i32 %mul438, 10
  %cmp439 = icmp eq i32 0, %rem
  br i1 %cmp439, label %land.lhs.true.441, label %if.else.454

land.lhs.true.441:                                ; preds = %if.end.433
  %293 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc442 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %293, i32 0, i32 68
  %escp_m443 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc442, i32 0, i32 28
  %294 = load i32, i32* %escp_m443, align 4, !tbaa !48
  %295 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc444 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %295, i32 0, i32 68
  %escp_u445 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc444, i32 0, i32 24
  %296 = load i32, i32* %escp_u445, align 4, !tbaa !28
  %mul446 = mul nsw i32 %294, %296
  %div447 = sdiv i32 %mul446, 10
  %cmp448 = icmp sgt i32 256, %div447
  br i1 %cmp448, label %if.then.450, label %if.else.454

if.then.450:                                      ; preds = %land.lhs.true.441
  %297 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc451 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %297, i32 0, i32 68
  %escp_m452 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc451, i32 0, i32 28
  %298 = load i32, i32* %escp_m452, align 4, !tbaa !48
  %299 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc453 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %299, i32 0, i32 68
  %escp_lf = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc453, i32 0, i32 29
  store i32 %298, i32* %escp_lf, align 4, !tbaa !58
  br label %if.end.457

if.else.454:                                      ; preds = %land.lhs.true.441, %if.end.433
  %300 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc455 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %300, i32 0, i32 68
  %escp_lf456 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc455, i32 0, i32 29
  store i32 0, i32* %escp_lf456, align 4, !tbaa !58
  br label %if.end.457

if.end.457:                                       ; preds = %if.else.454, %if.then.450
  %301 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc458 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %301, i32 0, i32 68
  %stc_y = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc458, i32 0, i32 31
  store i32 0, i32* %stc_y, align 4, !tbaa !59
  %302 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc459 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %302, i32 0, i32 68
  %buf_y = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc459, i32 0, i32 32
  store i32 0, i32* %buf_y, align 4, !tbaa !60
  %303 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc460 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %303, i32 0, i32 68
  %prt_y = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc460, i32 0, i32 30
  store i32 0, i32* %prt_y, align 4, !tbaa !61
  store i32 0, i32* %buf_i, align 4, !tbaa !26
  %304 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc461 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %304, i32 0, i32 68
  %flags462 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc461, i32 0, i32 0
  %305 = load i64, i64* %flags462, align 8, !tbaa !5
  %and463 = and i64 %305, -8388609
  store i64 %and463, i64* %flags462, align 8, !tbaa !5
  br label %while.cond.464

while.cond.464:                                   ; preds = %if.end.841, %if.end.457
  %306 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc465 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %306, i32 0, i32 68
  %stc_y466 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc465, i32 0, i32 31
  %307 = load i32, i32* %stc_y466, align 4, !tbaa !59
  %308 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc467 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %308, i32 0, i32 68
  %prt_scans468 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc467, i32 0, i32 33
  %309 = load i32, i32* %prt_scans468, align 4, !tbaa !39
  %cmp469 = icmp slt i32 %307, %309
  br i1 %cmp469, label %while.body.471, label %while.end.842

while.body.471:                                   ; preds = %while.cond.464
  %310 = bitcast i32* %need to i8*
  call void @llvm.lifetime.start(i64 4, i8* %310) #2
  %311 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc472 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %311, i32 0, i32 68
  %stc_y473 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc472, i32 0, i32 31
  %312 = load i32, i32* %stc_y473, align 4, !tbaa !59
  %313 = load i32, i32* %npass, align 4, !tbaa !26
  %314 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc474 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %314, i32 0, i32 68
  %escp_m475 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc474, i32 0, i32 28
  %315 = load i32, i32* %escp_m475, align 4, !tbaa !48
  %mul476 = mul nsw i32 %313, %315
  %add477 = add nsw i32 %312, %mul476
  store i32 %add477, i32* %need, align 4, !tbaa !26
  %316 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc478 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %316, i32 0, i32 68
  %buf_y479 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc478, i32 0, i32 32
  %317 = load i32, i32* %buf_y479, align 4, !tbaa !60
  %318 = load i32, i32* %need, align 4, !tbaa !26
  %cmp480 = icmp slt i32 %317, %318
  br i1 %cmp480, label %if.then.482, label %if.end.830

if.then.482:                                      ; preds = %while.body.471
  %319 = load i32, i32* %ncolor, align 4, !tbaa !26
  %cmp483 = icmp eq i32 %319, 1
  br i1 %cmp483, label %if.then.485, label %if.else.491

if.then.485:                                      ; preds = %if.then.482
  %320 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc486 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %320, i32 0, i32 68
  %stc_y487 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc486, i32 0, i32 31
  %321 = load i32, i32* %stc_y487, align 4, !tbaa !59
  %322 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc488 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %322, i32 0, i32 68
  %prt_buf489 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc488, i32 0, i32 20
  %323 = load i32, i32* %prt_buf489, align 4, !tbaa !47
  %add490 = add nsw i32 %321, %323
  store i32 %add490, i32* %need, align 4, !tbaa !26
  br label %if.end.497

if.else.491:                                      ; preds = %if.then.482
  %324 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc492 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %324, i32 0, i32 68
  %stc_y493 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc492, i32 0, i32 31
  %325 = load i32, i32* %stc_y493, align 4, !tbaa !59
  %326 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc494 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %326, i32 0, i32 68
  %prt_buf495 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc494, i32 0, i32 20
  %327 = load i32, i32* %prt_buf495, align 4, !tbaa !47
  %shr = ashr i32 %327, 2
  %add496 = add nsw i32 %325, %shr
  store i32 %add496, i32* %need, align 4, !tbaa !26
  br label %if.end.497

if.end.497:                                       ; preds = %if.else.491, %if.then.485
  br label %for.cond.498

for.cond.498:                                     ; preds = %for.inc.820, %if.end.497
  %328 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc499 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %328, i32 0, i32 68
  %buf_y500 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc499, i32 0, i32 32
  %329 = load i32, i32* %buf_y500, align 4, !tbaa !60
  %330 = load i32, i32* %need, align 4, !tbaa !26
  %cmp501 = icmp slt i32 %329, %330
  br i1 %cmp501, label %for.body.503, label %for.end.829

for.body.503:                                     ; preds = %for.cond.498
  %331 = bitcast i32* %color to i8*
  call void @llvm.lifetime.start(i64 4, i8* %331) #2
  %332 = bitcast i8** %ext_data to i8*
  call void @llvm.lifetime.start(i64 8, i8* %332) #2
  %333 = bitcast i8** %alg_data to i8*
  call void @llvm.lifetime.start(i64 8, i8* %333) #2
  store i32 0, i32* %color, align 4, !tbaa !26
  br label %for.cond.504

for.cond.504:                                     ; preds = %for.inc.522, %for.body.503
  %334 = load i32, i32* %color, align 4, !tbaa !26
  %335 = load i32, i32* %ncolor, align 4, !tbaa !26
  %cmp505 = icmp slt i32 %334, %335
  br i1 %cmp505, label %for.body.507, label %for.end.524

for.body.507:                                     ; preds = %for.cond.504
  %336 = load i32, i32* %buf_i, align 4, !tbaa !26
  %337 = load i32, i32* %color, align 4, !tbaa !26
  %add508 = add nsw i32 %336, %337
  %idxprom509 = sext i32 %add508 to i64
  %338 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc510 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %338, i32 0, i32 68
  %prt_data511 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc510, i32 0, i32 35
  %339 = load i8**, i8*** %prt_data511, align 8, !tbaa !50
  %arrayidx512 = getelementptr inbounds i8*, i8** %339, i64 %idxprom509
  %340 = load i8*, i8** %arrayidx512, align 8, !tbaa !1
  %341 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc513 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %341, i32 0, i32 68
  %prt_size514 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc513, i32 0, i32 21
  %342 = load i32, i32* %prt_size514, align 4, !tbaa !35
  %conv515 = sext i32 %342 to i64
  %call516 = call i8* @memset(i8* %340, i32 0, i64 %conv515) #6
  %343 = load i32, i32* %buf_i, align 4, !tbaa !26
  %344 = load i32, i32* %color, align 4, !tbaa !26
  %add517 = add nsw i32 %343, %344
  %idxprom518 = sext i32 %add517 to i64
  %345 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc519 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %345, i32 0, i32 68
  %prt_width520 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc519, i32 0, i32 34
  %346 = load i32*, i32** %prt_width520, align 8, !tbaa !49
  %arrayidx521 = getelementptr inbounds i32, i32* %346, i64 %idxprom518
  store i32 0, i32* %arrayidx521, align 4, !tbaa !26
  br label %for.inc.522

for.inc.522:                                      ; preds = %for.body.507
  %347 = load i32, i32* %color, align 4, !tbaa !26
  %inc523 = add nsw i32 %347, 1
  store i32 %inc523, i32* %color, align 4, !tbaa !26
  br label %for.cond.504

for.end.524:                                      ; preds = %for.cond.504
  %348 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc525 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %348, i32 0, i32 68
  %buf_y526 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc525, i32 0, i32 32
  %349 = load i32, i32* %buf_y526, align 4, !tbaa !60
  %350 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc527 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %350, i32 0, i32 68
  %prt_scans528 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc527, i32 0, i32 33
  %351 = load i32, i32* %prt_scans528, align 4, !tbaa !39
  %cmp529 = icmp slt i32 %349, %351
  br i1 %cmp529, label %if.then.531, label %if.else.541

if.then.531:                                      ; preds = %for.end.524
  %352 = load %struct.gx_device_printer_s*, %struct.gx_device_printer_s** %pdev.addr, align 8, !tbaa !1
  %353 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc532 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %353, i32 0, i32 68
  %buf_y533 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc532, i32 0, i32 32
  %354 = load i32, i32* %buf_y533, align 4, !tbaa !60
  %355 = load i8*, i8** %ext_line, align 8, !tbaa !1
  %call534 = call i32 @gdev_prn_get_bits(%struct.gx_device_printer_s* %352, i32 %354, i8* %355, i8** %ext_data) #5
  %356 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %357 = load i32, i32* %prt_pixels, align 4, !tbaa !26
  %358 = load i8*, i8** %ext_data, align 8, !tbaa !1
  %call535 = call i32 @stc_iswhite(%struct.stcolor_device_s* %356, i32 %357, i8* %358) #5
  %tobool536 = icmp ne i32 %call535, 0
  br i1 %tobool536, label %cond.true.537, label %cond.false.538

cond.true.537:                                    ; preds = %if.then.531
  %359 = load i32, i32* %ext_size, align 4, !tbaa !26
  br label %cond.end.539

cond.false.538:                                   ; preds = %if.then.531
  br label %cond.end.539

cond.end.539:                                     ; preds = %cond.false.538, %cond.true.537
  %cond540 = phi i32 [ %359, %cond.true.537 ], [ 0, %cond.false.538 ]
  store i32 %cond540, i32* %color, align 4, !tbaa !26
  br label %if.end.542

if.else.541:                                      ; preds = %for.end.524
  %360 = load i32, i32* %ext_size, align 4, !tbaa !26
  store i32 %360, i32* %color, align 4, !tbaa !26
  br label %if.end.542

if.end.542:                                       ; preds = %if.else.541, %cond.end.539
  %361 = load i32, i32* %color, align 4, !tbaa !26
  %362 = load i32, i32* %ext_size, align 4, !tbaa !26
  %cmp543 = icmp sge i32 %361, %362
  br i1 %cmp543, label %if.then.545, label %if.end.557

if.then.545:                                      ; preds = %if.end.542
  %363 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc546 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %363, i32 0, i32 68
  %dither547 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc546, i32 0, i32 2
  %364 = load %struct.stc_dither_s*, %struct.stc_dither_s** %dither547, align 8, !tbaa !41
  %flags548 = getelementptr inbounds %struct.stc_dither_s, %struct.stc_dither_s* %364, i32 0, i32 2
  %365 = load i32, i32* %flags548, align 4, !tbaa !42
  %and549 = and i32 %365, 128
  %tobool550 = icmp ne i32 %and549, 0
  br i1 %tobool550, label %if.then.551, label %if.end.556

if.then.551:                                      ; preds = %if.then.545
  %366 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc552 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %366, i32 0, i32 68
  %dither553 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc552, i32 0, i32 2
  %367 = load %struct.stc_dither_s*, %struct.stc_dither_s** %dither553, align 8, !tbaa !41
  %fun554 = getelementptr inbounds %struct.stc_dither_s, %struct.stc_dither_s* %367, i32 0, i32 1
  %368 = load i32 (%struct.stcolor_device_s*, i32, i8*, i8*, i8*)*, i32 (%struct.stcolor_device_s*, i32, i8*, i8*, i8*)** %fun554, align 8, !tbaa !57
  %369 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %370 = load i32, i32* %prt_pixels, align 4, !tbaa !26
  %371 = load i8*, i8** %buf, align 8, !tbaa !1
  %372 = load i8*, i8** %col_line, align 8, !tbaa !1
  %call555 = call i32 %368(%struct.stcolor_device_s* %369, i32 %370, i8* null, i8* %371, i8* %372) #5
  br label %if.end.556

if.end.556:                                       ; preds = %if.then.551, %if.then.545
  store i32 18, i32* %cleanup.dest.slot
  br label %cleanup

if.end.557:                                       ; preds = %if.end.542
  %373 = load i8* (%struct.stcolor_device_s*, i8*, i32, i8*)*, i8* (%struct.stcolor_device_s*, i8*, i32, i8*)** %iconvert, align 8, !tbaa !1
  %374 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %375 = load i8*, i8** %ext_data, align 8, !tbaa !1
  %376 = load i32, i32* %prt_pixels, align 4, !tbaa !26
  %377 = load i8*, i8** %alg_line, align 8, !tbaa !1
  %call558 = call i8* %373(%struct.stcolor_device_s* %374, i8* %375, i32 %376, i8* %377) #5
  store i8* %call558, i8** %alg_data, align 8, !tbaa !1
  %378 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc559 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %378, i32 0, i32 68
  %dither560 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc559, i32 0, i32 2
  %379 = load %struct.stc_dither_s*, %struct.stc_dither_s** %dither560, align 8, !tbaa !41
  %fun561 = getelementptr inbounds %struct.stc_dither_s, %struct.stc_dither_s* %379, i32 0, i32 1
  %380 = load i32 (%struct.stcolor_device_s*, i32, i8*, i8*, i8*)*, i32 (%struct.stcolor_device_s*, i32, i8*, i8*, i8*)** %fun561, align 8, !tbaa !57
  %381 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %382 = load i32, i32* %prt_pixels, align 4, !tbaa !26
  %383 = load i8*, i8** %alg_data, align 8, !tbaa !1
  %384 = load i8*, i8** %buf, align 8, !tbaa !1
  %385 = load i8*, i8** %col_line, align 8, !tbaa !1
  %call562 = call i32 %380(%struct.stcolor_device_s* %381, i32 %382, i8* %383, i8* %384, i8* %385) #5
  %386 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %color_info563 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %386, i32 0, i32 11
  %num_components564 = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info563, i32 0, i32 1
  %387 = load i32, i32* %num_components564, align 4, !tbaa !40
  switch i32 %387, label %sw.default.816 [
    i32 1, label %sw.bb.565
    i32 3, label %sw.bb.605
    i32 4, label %sw.bb.710
  ]

sw.bb.565:                                        ; preds = %if.end.557
  %388 = bitcast i8** %bytein to i8*
  call void @llvm.lifetime.start(i64 8, i8* %388) #2
  %389 = bitcast i8** %byteout to i8*
  call void @llvm.lifetime.start(i64 8, i8* %389) #2
  %390 = bitcast i32* %width to i8*
  call void @llvm.lifetime.start(i64 4, i8* %390) #2
  %391 = load i8*, i8** %col_line, align 8, !tbaa !1
  store i8* %391, i8** %bytein, align 8, !tbaa !1
  %392 = load i32, i32* %buf_i, align 4, !tbaa !26
  %idxprom566 = sext i32 %392 to i64
  %393 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc567 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %393, i32 0, i32 68
  %prt_data568 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc567, i32 0, i32 35
  %394 = load i8**, i8*** %prt_data568, align 8, !tbaa !50
  %arrayidx569 = getelementptr inbounds i8*, i8** %394, i64 %idxprom566
  %395 = load i8*, i8** %arrayidx569, align 8, !tbaa !1
  store i8* %395, i8** %byteout, align 8, !tbaa !1
  store i32 1, i32* %width, align 4, !tbaa !26
  br label %for.cond.570

for.cond.570:                                     ; preds = %for.inc.602, %sw.bb.565
  %396 = load i32, i32* %width, align 4, !tbaa !26
  %397 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc571 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %397, i32 0, i32 68
  %prt_size572 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc571, i32 0, i32 21
  %398 = load i32, i32* %prt_size572, align 4, !tbaa !35
  %cmp573 = icmp sle i32 %396, %398
  br i1 %cmp573, label %for.body.575, label %for.end.604

for.body.575:                                     ; preds = %for.cond.570
  call void @llvm.lifetime.start(i64 1, i8* %tmp) #2
  store i8 0, i8* %tmp, align 1, !tbaa !62
  call void @llvm.lifetime.start(i64 1, i8* %i577) #2
  store i8 -128, i8* %i577, align 1, !tbaa !62
  br label %for.cond.578

for.cond.578:                                     ; preds = %for.inc.587, %for.body.575
  %399 = load i8, i8* %i577, align 1, !tbaa !62
  %tobool579 = icmp ne i8 %399, 0
  br i1 %tobool579, label %for.body.580, label %for.end.591

for.body.580:                                     ; preds = %for.cond.578
  %400 = load i8*, i8** %bytein, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds i8, i8* %400, i32 1
  store i8* %incdec.ptr, i8** %bytein, align 8, !tbaa !1
  %401 = load i8, i8* %400, align 1, !tbaa !62
  %tobool581 = icmp ne i8 %401, 0
  br i1 %tobool581, label %if.then.582, label %if.end.586

if.then.582:                                      ; preds = %for.body.580
  %402 = load i8, i8* %i577, align 1, !tbaa !62
  %conv583 = zext i8 %402 to i32
  %403 = load i8, i8* %tmp, align 1, !tbaa !62
  %conv584 = zext i8 %403 to i32
  %or = or i32 %conv584, %conv583
  %conv585 = trunc i32 %or to i8
  store i8 %conv585, i8* %tmp, align 1, !tbaa !62
  br label %if.end.586

if.end.586:                                       ; preds = %if.then.582, %for.body.580
  br label %for.inc.587

for.inc.587:                                      ; preds = %if.end.586
  %404 = load i8, i8* %i577, align 1, !tbaa !62
  %conv588 = zext i8 %404 to i32
  %shr589 = ashr i32 %conv588, 1
  %conv590 = trunc i32 %shr589 to i8
  store i8 %conv590, i8* %i577, align 1, !tbaa !62
  br label %for.cond.578

for.end.591:                                      ; preds = %for.cond.578
  %405 = load i8, i8* %tmp, align 1, !tbaa !62
  %conv592 = zext i8 %405 to i32
  %cmp593 = icmp ne i32 %conv592, 0
  br i1 %cmp593, label %if.then.595, label %if.end.600

if.then.595:                                      ; preds = %for.end.591
  %406 = load i32, i32* %width, align 4, !tbaa !26
  %407 = load i32, i32* %buf_i, align 4, !tbaa !26
  %idxprom596 = sext i32 %407 to i64
  %408 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc597 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %408, i32 0, i32 68
  %prt_width598 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc597, i32 0, i32 34
  %409 = load i32*, i32** %prt_width598, align 8, !tbaa !49
  %arrayidx599 = getelementptr inbounds i32, i32* %409, i64 %idxprom596
  store i32 %406, i32* %arrayidx599, align 4, !tbaa !26
  br label %if.end.600

if.end.600:                                       ; preds = %if.then.595, %for.end.591
  %410 = load i8, i8* %tmp, align 1, !tbaa !62
  %411 = load i8*, i8** %byteout, align 8, !tbaa !1
  %incdec.ptr601 = getelementptr inbounds i8, i8* %411, i32 1
  store i8* %incdec.ptr601, i8** %byteout, align 8, !tbaa !1
  store i8 %410, i8* %411, align 1, !tbaa !62
  call void @llvm.lifetime.end(i64 1, i8* %i577) #2
  call void @llvm.lifetime.end(i64 1, i8* %tmp) #2
  br label %for.inc.602

for.inc.602:                                      ; preds = %if.end.600
  %412 = load i32, i32* %width, align 4, !tbaa !26
  %inc603 = add nsw i32 %412, 1
  store i32 %inc603, i32* %width, align 4, !tbaa !26
  br label %for.cond.570

for.end.604:                                      ; preds = %for.cond.570
  %413 = bitcast i32* %width to i8*
  call void @llvm.lifetime.end(i64 4, i8* %413) #2
  %414 = bitcast i8** %byteout to i8*
  call void @llvm.lifetime.end(i64 8, i8* %414) #2
  %415 = bitcast i8** %bytein to i8*
  call void @llvm.lifetime.end(i64 8, i8* %415) #2
  br label %sw.epilog.817

sw.bb.605:                                        ; preds = %if.end.557
  %416 = bitcast i8** %bytein607 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %416) #2
  %417 = bitcast i32* %width609 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %417) #2
  %418 = load i8*, i8** %col_line, align 8, !tbaa !1
  store i8* %418, i8** %bytein607, align 8, !tbaa !1
  store i32 0, i32* %width609, align 4, !tbaa !26
  br label %for.cond.610

for.cond.610:                                     ; preds = %for.inc.707, %sw.bb.605
  %419 = load i32, i32* %width609, align 4, !tbaa !26
  %420 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc611 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %420, i32 0, i32 68
  %prt_size612 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc611, i32 0, i32 21
  %421 = load i32, i32* %prt_size612, align 4, !tbaa !35
  %cmp613 = icmp slt i32 %419, %421
  br i1 %cmp613, label %for.body.615, label %for.end.709

for.body.615:                                     ; preds = %for.cond.610
  call void @llvm.lifetime.start(i64 1, i8* %i617) #2
  call void @llvm.lifetime.start(i64 1, i8* %tmp619) #2
  %422 = bitcast [4 x i8]* %cmyk to i8*
  call void @llvm.lifetime.start(i64 4, i8* %422) #2
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %cmyk, i32 0, i32 0
  %call621 = call i8* @memset(i8* %arraydecay, i32 0, i64 4) #6
  store i8 -128, i8* %i617, align 1, !tbaa !62
  br label %for.cond.622

for.cond.622:                                     ; preds = %for.inc.670, %for.body.615
  %423 = load i8, i8* %i617, align 1, !tbaa !62
  %tobool623 = icmp ne i8 %423, 0
  br i1 %tobool623, label %for.body.624, label %for.end.674

for.body.624:                                     ; preds = %for.cond.622
  %424 = load i8*, i8** %bytein607, align 8, !tbaa !1
  %incdec.ptr625 = getelementptr inbounds i8, i8* %424, i32 1
  store i8* %incdec.ptr625, i8** %bytein607, align 8, !tbaa !1
  %425 = load i8, i8* %424, align 1, !tbaa !62
  %conv626 = zext i8 %425 to i32
  %and627 = and i32 %conv626, 7
  %idxprom628 = sext i32 %and627 to i64
  %arrayidx629 = getelementptr inbounds [8 x i8], [8 x i8]* @stc_print_page.rgb2cmyk, i32 0, i64 %idxprom628
  %426 = load i8, i8* %arrayidx629, align 1, !tbaa !62
  store i8 %426, i8* %tmp619, align 1, !tbaa !62
  %427 = load i8, i8* %tmp619, align 1, !tbaa !62
  %conv630 = zext i8 %427 to i32
  %and631 = and i32 %conv630, 1
  %tobool632 = icmp ne i32 %and631, 0
  br i1 %tobool632, label %if.then.633, label %if.end.639

if.then.633:                                      ; preds = %for.body.624
  %428 = load i8, i8* %i617, align 1, !tbaa !62
  %conv634 = zext i8 %428 to i32
  %arrayidx635 = getelementptr inbounds [4 x i8], [4 x i8]* %cmyk, i32 0, i64 3
  %429 = load i8, i8* %arrayidx635, align 1, !tbaa !62
  %conv636 = zext i8 %429 to i32
  %or637 = or i32 %conv636, %conv634
  %conv638 = trunc i32 %or637 to i8
  store i8 %conv638, i8* %arrayidx635, align 1, !tbaa !62
  br label %if.end.639

if.end.639:                                       ; preds = %if.then.633, %for.body.624
  %430 = load i8, i8* %tmp619, align 1, !tbaa !62
  %conv640 = zext i8 %430 to i32
  %and641 = and i32 %conv640, 2
  %tobool642 = icmp ne i32 %and641, 0
  br i1 %tobool642, label %if.then.643, label %if.end.649

if.then.643:                                      ; preds = %if.end.639
  %431 = load i8, i8* %i617, align 1, !tbaa !62
  %conv644 = zext i8 %431 to i32
  %arrayidx645 = getelementptr inbounds [4 x i8], [4 x i8]* %cmyk, i32 0, i64 2
  %432 = load i8, i8* %arrayidx645, align 1, !tbaa !62
  %conv646 = zext i8 %432 to i32
  %or647 = or i32 %conv646, %conv644
  %conv648 = trunc i32 %or647 to i8
  store i8 %conv648, i8* %arrayidx645, align 1, !tbaa !62
  br label %if.end.649

if.end.649:                                       ; preds = %if.then.643, %if.end.639
  %433 = load i8, i8* %tmp619, align 1, !tbaa !62
  %conv650 = zext i8 %433 to i32
  %and651 = and i32 %conv650, 4
  %tobool652 = icmp ne i32 %and651, 0
  br i1 %tobool652, label %if.then.653, label %if.end.659

if.then.653:                                      ; preds = %if.end.649
  %434 = load i8, i8* %i617, align 1, !tbaa !62
  %conv654 = zext i8 %434 to i32
  %arrayidx655 = getelementptr inbounds [4 x i8], [4 x i8]* %cmyk, i32 0, i64 1
  %435 = load i8, i8* %arrayidx655, align 1, !tbaa !62
  %conv656 = zext i8 %435 to i32
  %or657 = or i32 %conv656, %conv654
  %conv658 = trunc i32 %or657 to i8
  store i8 %conv658, i8* %arrayidx655, align 1, !tbaa !62
  br label %if.end.659

if.end.659:                                       ; preds = %if.then.653, %if.end.649
  %436 = load i8, i8* %tmp619, align 1, !tbaa !62
  %conv660 = zext i8 %436 to i32
  %and661 = and i32 %conv660, 8
  %tobool662 = icmp ne i32 %and661, 0
  br i1 %tobool662, label %if.then.663, label %if.end.669

if.then.663:                                      ; preds = %if.end.659
  %437 = load i8, i8* %i617, align 1, !tbaa !62
  %conv664 = zext i8 %437 to i32
  %arrayidx665 = getelementptr inbounds [4 x i8], [4 x i8]* %cmyk, i32 0, i64 0
  %438 = load i8, i8* %arrayidx665, align 1, !tbaa !62
  %conv666 = zext i8 %438 to i32
  %or667 = or i32 %conv666, %conv664
  %conv668 = trunc i32 %or667 to i8
  store i8 %conv668, i8* %arrayidx665, align 1, !tbaa !62
  br label %if.end.669

if.end.669:                                       ; preds = %if.then.663, %if.end.659
  br label %for.inc.670

for.inc.670:                                      ; preds = %if.end.669
  %439 = load i8, i8* %i617, align 1, !tbaa !62
  %conv671 = zext i8 %439 to i32
  %shr672 = ashr i32 %conv671, 1
  %conv673 = trunc i32 %shr672 to i8
  store i8 %conv673, i8* %i617, align 1, !tbaa !62
  br label %for.cond.622

for.end.674:                                      ; preds = %for.cond.622
  store i8 0, i8* %i617, align 1, !tbaa !62
  br label %for.cond.675

for.cond.675:                                     ; preds = %for.inc.704, %for.end.674
  %440 = load i8, i8* %i617, align 1, !tbaa !62
  %conv676 = zext i8 %440 to i32
  %cmp677 = icmp slt i32 %conv676, 4
  br i1 %cmp677, label %for.body.679, label %for.end.706

for.body.679:                                     ; preds = %for.cond.675
  %441 = load i8, i8* %i617, align 1, !tbaa !62
  %idxprom680 = zext i8 %441 to i64
  %arrayidx681 = getelementptr inbounds [4 x i8], [4 x i8]* %cmyk, i32 0, i64 %idxprom680
  %442 = load i8, i8* %arrayidx681, align 1, !tbaa !62
  %conv682 = zext i8 %442 to i32
  %cmp683 = icmp ne i32 %conv682, 0
  br i1 %cmp683, label %if.then.685, label %if.end.693

if.then.685:                                      ; preds = %for.body.679
  %443 = load i32, i32* %width609, align 4, !tbaa !26
  %add686 = add nsw i32 %443, 1
  %444 = load i32, i32* %buf_i, align 4, !tbaa !26
  %445 = load i8, i8* %i617, align 1, !tbaa !62
  %conv687 = zext i8 %445 to i32
  %add688 = add nsw i32 %444, %conv687
  %idxprom689 = sext i32 %add688 to i64
  %446 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc690 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %446, i32 0, i32 68
  %prt_width691 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc690, i32 0, i32 34
  %447 = load i32*, i32** %prt_width691, align 8, !tbaa !49
  %arrayidx692 = getelementptr inbounds i32, i32* %447, i64 %idxprom689
  store i32 %add686, i32* %arrayidx692, align 4, !tbaa !26
  br label %if.end.693

if.end.693:                                       ; preds = %if.then.685, %for.body.679
  %448 = load i8, i8* %i617, align 1, !tbaa !62
  %idxprom694 = zext i8 %448 to i64
  %arrayidx695 = getelementptr inbounds [4 x i8], [4 x i8]* %cmyk, i32 0, i64 %idxprom694
  %449 = load i8, i8* %arrayidx695, align 1, !tbaa !62
  %450 = load i32, i32* %width609, align 4, !tbaa !26
  %idxprom696 = sext i32 %450 to i64
  %451 = load i32, i32* %buf_i, align 4, !tbaa !26
  %452 = load i8, i8* %i617, align 1, !tbaa !62
  %conv697 = zext i8 %452 to i32
  %add698 = add nsw i32 %451, %conv697
  %idxprom699 = sext i32 %add698 to i64
  %453 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc700 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %453, i32 0, i32 68
  %prt_data701 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc700, i32 0, i32 35
  %454 = load i8**, i8*** %prt_data701, align 8, !tbaa !50
  %arrayidx702 = getelementptr inbounds i8*, i8** %454, i64 %idxprom699
  %455 = load i8*, i8** %arrayidx702, align 8, !tbaa !1
  %arrayidx703 = getelementptr inbounds i8, i8* %455, i64 %idxprom696
  store i8 %449, i8* %arrayidx703, align 1, !tbaa !62
  br label %for.inc.704

for.inc.704:                                      ; preds = %if.end.693
  %456 = load i8, i8* %i617, align 1, !tbaa !62
  %inc705 = add i8 %456, 1
  store i8 %inc705, i8* %i617, align 1, !tbaa !62
  br label %for.cond.675

for.end.706:                                      ; preds = %for.cond.675
  %457 = bitcast [4 x i8]* %cmyk to i8*
  call void @llvm.lifetime.end(i64 4, i8* %457) #2
  call void @llvm.lifetime.end(i64 1, i8* %tmp619) #2
  call void @llvm.lifetime.end(i64 1, i8* %i617) #2
  br label %for.inc.707

for.inc.707:                                      ; preds = %for.end.706
  %458 = load i32, i32* %width609, align 4, !tbaa !26
  %inc708 = add nsw i32 %458, 1
  store i32 %inc708, i32* %width609, align 4, !tbaa !26
  br label %for.cond.610

for.end.709:                                      ; preds = %for.cond.610
  %459 = bitcast i32* %width609 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %459) #2
  %460 = bitcast i8** %bytein607 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %460) #2
  br label %sw.epilog.817

sw.bb.710:                                        ; preds = %if.end.557
  %461 = bitcast i8** %bytein712 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %461) #2
  %462 = bitcast i32* %width714 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %462) #2
  %463 = load i8*, i8** %col_line, align 8, !tbaa !1
  store i8* %463, i8** %bytein712, align 8, !tbaa !1
  store i32 0, i32* %width714, align 4, !tbaa !26
  br label %for.cond.715

for.cond.715:                                     ; preds = %for.inc.813, %sw.bb.710
  %464 = load i32, i32* %width714, align 4, !tbaa !26
  %465 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc716 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %465, i32 0, i32 68
  %prt_size717 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc716, i32 0, i32 21
  %466 = load i32, i32* %prt_size717, align 4, !tbaa !35
  %cmp718 = icmp slt i32 %464, %466
  br i1 %cmp718, label %for.body.720, label %for.end.815

for.body.720:                                     ; preds = %for.cond.715
  call void @llvm.lifetime.start(i64 1, i8* %i722) #2
  call void @llvm.lifetime.start(i64 1, i8* %tmp724) #2
  %467 = bitcast [4 x i8]* %cmyk726 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %467) #2
  %arraydecay727 = getelementptr inbounds [4 x i8], [4 x i8]* %cmyk726, i32 0, i32 0
  %call728 = call i8* @memset(i8* %arraydecay727, i32 0, i64 4) #6
  store i8 -128, i8* %i722, align 1, !tbaa !62
  br label %for.cond.729

for.cond.729:                                     ; preds = %for.inc.776, %for.body.720
  %468 = load i8, i8* %i722, align 1, !tbaa !62
  %tobool730 = icmp ne i8 %468, 0
  br i1 %tobool730, label %for.body.731, label %for.end.780

for.body.731:                                     ; preds = %for.cond.729
  %469 = load i8*, i8** %bytein712, align 8, !tbaa !1
  %incdec.ptr732 = getelementptr inbounds i8, i8* %469, i32 1
  store i8* %incdec.ptr732, i8** %bytein712, align 8, !tbaa !1
  %470 = load i8, i8* %469, align 1, !tbaa !62
  %conv733 = zext i8 %470 to i32
  %and734 = and i32 %conv733, 15
  %conv735 = trunc i32 %and734 to i8
  store i8 %conv735, i8* %tmp724, align 1, !tbaa !62
  %471 = load i8, i8* %tmp724, align 1, !tbaa !62
  %conv736 = zext i8 %471 to i32
  %and737 = and i32 %conv736, 1
  %tobool738 = icmp ne i32 %and737, 0
  br i1 %tobool738, label %if.then.739, label %if.end.745

if.then.739:                                      ; preds = %for.body.731
  %472 = load i8, i8* %i722, align 1, !tbaa !62
  %conv740 = zext i8 %472 to i32
  %arrayidx741 = getelementptr inbounds [4 x i8], [4 x i8]* %cmyk726, i32 0, i64 3
  %473 = load i8, i8* %arrayidx741, align 1, !tbaa !62
  %conv742 = zext i8 %473 to i32
  %or743 = or i32 %conv742, %conv740
  %conv744 = trunc i32 %or743 to i8
  store i8 %conv744, i8* %arrayidx741, align 1, !tbaa !62
  br label %if.end.745

if.end.745:                                       ; preds = %if.then.739, %for.body.731
  %474 = load i8, i8* %tmp724, align 1, !tbaa !62
  %conv746 = zext i8 %474 to i32
  %and747 = and i32 %conv746, 2
  %tobool748 = icmp ne i32 %and747, 0
  br i1 %tobool748, label %if.then.749, label %if.end.755

if.then.749:                                      ; preds = %if.end.745
  %475 = load i8, i8* %i722, align 1, !tbaa !62
  %conv750 = zext i8 %475 to i32
  %arrayidx751 = getelementptr inbounds [4 x i8], [4 x i8]* %cmyk726, i32 0, i64 2
  %476 = load i8, i8* %arrayidx751, align 1, !tbaa !62
  %conv752 = zext i8 %476 to i32
  %or753 = or i32 %conv752, %conv750
  %conv754 = trunc i32 %or753 to i8
  store i8 %conv754, i8* %arrayidx751, align 1, !tbaa !62
  br label %if.end.755

if.end.755:                                       ; preds = %if.then.749, %if.end.745
  %477 = load i8, i8* %tmp724, align 1, !tbaa !62
  %conv756 = zext i8 %477 to i32
  %and757 = and i32 %conv756, 4
  %tobool758 = icmp ne i32 %and757, 0
  br i1 %tobool758, label %if.then.759, label %if.end.765

if.then.759:                                      ; preds = %if.end.755
  %478 = load i8, i8* %i722, align 1, !tbaa !62
  %conv760 = zext i8 %478 to i32
  %arrayidx761 = getelementptr inbounds [4 x i8], [4 x i8]* %cmyk726, i32 0, i64 1
  %479 = load i8, i8* %arrayidx761, align 1, !tbaa !62
  %conv762 = zext i8 %479 to i32
  %or763 = or i32 %conv762, %conv760
  %conv764 = trunc i32 %or763 to i8
  store i8 %conv764, i8* %arrayidx761, align 1, !tbaa !62
  br label %if.end.765

if.end.765:                                       ; preds = %if.then.759, %if.end.755
  %480 = load i8, i8* %tmp724, align 1, !tbaa !62
  %conv766 = zext i8 %480 to i32
  %and767 = and i32 %conv766, 8
  %tobool768 = icmp ne i32 %and767, 0
  br i1 %tobool768, label %if.then.769, label %if.end.775

if.then.769:                                      ; preds = %if.end.765
  %481 = load i8, i8* %i722, align 1, !tbaa !62
  %conv770 = zext i8 %481 to i32
  %arrayidx771 = getelementptr inbounds [4 x i8], [4 x i8]* %cmyk726, i32 0, i64 0
  %482 = load i8, i8* %arrayidx771, align 1, !tbaa !62
  %conv772 = zext i8 %482 to i32
  %or773 = or i32 %conv772, %conv770
  %conv774 = trunc i32 %or773 to i8
  store i8 %conv774, i8* %arrayidx771, align 1, !tbaa !62
  br label %if.end.775

if.end.775:                                       ; preds = %if.then.769, %if.end.765
  br label %for.inc.776

for.inc.776:                                      ; preds = %if.end.775
  %483 = load i8, i8* %i722, align 1, !tbaa !62
  %conv777 = zext i8 %483 to i32
  %shr778 = ashr i32 %conv777, 1
  %conv779 = trunc i32 %shr778 to i8
  store i8 %conv779, i8* %i722, align 1, !tbaa !62
  br label %for.cond.729

for.end.780:                                      ; preds = %for.cond.729
  store i8 0, i8* %i722, align 1, !tbaa !62
  br label %for.cond.781

for.cond.781:                                     ; preds = %for.inc.810, %for.end.780
  %484 = load i8, i8* %i722, align 1, !tbaa !62
  %conv782 = zext i8 %484 to i32
  %cmp783 = icmp slt i32 %conv782, 4
  br i1 %cmp783, label %for.body.785, label %for.end.812

for.body.785:                                     ; preds = %for.cond.781
  %485 = load i8, i8* %i722, align 1, !tbaa !62
  %idxprom786 = zext i8 %485 to i64
  %arrayidx787 = getelementptr inbounds [4 x i8], [4 x i8]* %cmyk726, i32 0, i64 %idxprom786
  %486 = load i8, i8* %arrayidx787, align 1, !tbaa !62
  %conv788 = zext i8 %486 to i32
  %cmp789 = icmp ne i32 %conv788, 0
  br i1 %cmp789, label %if.then.791, label %if.end.799

if.then.791:                                      ; preds = %for.body.785
  %487 = load i32, i32* %width714, align 4, !tbaa !26
  %add792 = add nsw i32 %487, 1
  %488 = load i32, i32* %buf_i, align 4, !tbaa !26
  %489 = load i8, i8* %i722, align 1, !tbaa !62
  %conv793 = zext i8 %489 to i32
  %add794 = add nsw i32 %488, %conv793
  %idxprom795 = sext i32 %add794 to i64
  %490 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc796 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %490, i32 0, i32 68
  %prt_width797 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc796, i32 0, i32 34
  %491 = load i32*, i32** %prt_width797, align 8, !tbaa !49
  %arrayidx798 = getelementptr inbounds i32, i32* %491, i64 %idxprom795
  store i32 %add792, i32* %arrayidx798, align 4, !tbaa !26
  br label %if.end.799

if.end.799:                                       ; preds = %if.then.791, %for.body.785
  %492 = load i8, i8* %i722, align 1, !tbaa !62
  %idxprom800 = zext i8 %492 to i64
  %arrayidx801 = getelementptr inbounds [4 x i8], [4 x i8]* %cmyk726, i32 0, i64 %idxprom800
  %493 = load i8, i8* %arrayidx801, align 1, !tbaa !62
  %494 = load i32, i32* %width714, align 4, !tbaa !26
  %idxprom802 = sext i32 %494 to i64
  %495 = load i32, i32* %buf_i, align 4, !tbaa !26
  %496 = load i8, i8* %i722, align 1, !tbaa !62
  %conv803 = zext i8 %496 to i32
  %add804 = add nsw i32 %495, %conv803
  %idxprom805 = sext i32 %add804 to i64
  %497 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc806 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %497, i32 0, i32 68
  %prt_data807 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc806, i32 0, i32 35
  %498 = load i8**, i8*** %prt_data807, align 8, !tbaa !50
  %arrayidx808 = getelementptr inbounds i8*, i8** %498, i64 %idxprom805
  %499 = load i8*, i8** %arrayidx808, align 8, !tbaa !1
  %arrayidx809 = getelementptr inbounds i8, i8* %499, i64 %idxprom802
  store i8 %493, i8* %arrayidx809, align 1, !tbaa !62
  br label %for.inc.810

for.inc.810:                                      ; preds = %if.end.799
  %500 = load i8, i8* %i722, align 1, !tbaa !62
  %inc811 = add i8 %500, 1
  store i8 %inc811, i8* %i722, align 1, !tbaa !62
  br label %for.cond.781

for.end.812:                                      ; preds = %for.cond.781
  %501 = bitcast [4 x i8]* %cmyk726 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %501) #2
  call void @llvm.lifetime.end(i64 1, i8* %tmp724) #2
  call void @llvm.lifetime.end(i64 1, i8* %i722) #2
  br label %for.inc.813

for.inc.813:                                      ; preds = %for.end.812
  %502 = load i32, i32* %width714, align 4, !tbaa !26
  %inc814 = add nsw i32 %502, 1
  store i32 %inc814, i32* %width714, align 4, !tbaa !26
  br label %for.cond.715

for.end.815:                                      ; preds = %for.cond.715
  %503 = bitcast i32* %width714 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %503) #2
  %504 = bitcast i8** %bytein712 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %504) #2
  br label %sw.epilog.817

sw.default.816:                                   ; preds = %if.end.557
  br label %sw.epilog.817

sw.epilog.817:                                    ; preds = %sw.default.816, %for.end.815, %for.end.709, %for.end.604
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %sw.epilog.817, %if.end.556
  %505 = bitcast i8** %alg_data to i8*
  call void @llvm.lifetime.end(i64 8, i8* %505) #2
  %506 = bitcast i8** %ext_data to i8*
  call void @llvm.lifetime.end(i64 8, i8* %506) #2
  %507 = bitcast i32* %color to i8*
  call void @llvm.lifetime.end(i64 4, i8* %507) #2
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 18, label %for.inc.820
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %for.inc.820

for.inc.820:                                      ; preds = %cleanup.cont, %cleanup
  %508 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc821 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %508, i32 0, i32 68
  %prt_buf822 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc821, i32 0, i32 20
  %509 = load i32, i32* %prt_buf822, align 4, !tbaa !47
  %sub823 = sub nsw i32 %509, 1
  %510 = load i32, i32* %buf_i, align 4, !tbaa !26
  %511 = load i32, i32* %ncolor, align 4, !tbaa !26
  %add824 = add nsw i32 %510, %511
  %and825 = and i32 %sub823, %add824
  store i32 %and825, i32* %buf_i, align 4, !tbaa !26
  %512 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc826 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %512, i32 0, i32 68
  %buf_y827 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc826, i32 0, i32 32
  %513 = load i32, i32* %buf_y827, align 4, !tbaa !60
  %inc828 = add nsw i32 %513, 1
  store i32 %inc828, i32* %buf_y827, align 4, !tbaa !60
  br label %for.cond.498

for.end.829:                                      ; preds = %for.cond.498
  br label %if.end.830

if.end.830:                                       ; preds = %for.end.829, %while.body.471
  %514 = load i64, i64* %flags, align 8, !tbaa !25
  %and831 = and i64 %514, 3072
  %cmp832 = icmp eq i64 %and831, 2048
  br i1 %cmp832, label %if.then.834, label %if.else.835

if.then.834:                                      ; preds = %if.end.830
  %515 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %516 = load %struct._IO_FILE*, %struct._IO_FILE** %prn_stream.addr, align 8, !tbaa !1
  call void @stc_print_delta(%struct.stcolor_device_s* %515, %struct._IO_FILE* %516) #5
  br label %if.end.841

if.else.835:                                      ; preds = %if.end.830
  %517 = load i32, i32* %npass, align 4, !tbaa !26
  %cmp836 = icmp sgt i32 %517, 1
  br i1 %cmp836, label %if.then.838, label %if.else.839

if.then.838:                                      ; preds = %if.else.835
  %518 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %519 = load %struct._IO_FILE*, %struct._IO_FILE** %prn_stream.addr, align 8, !tbaa !1
  call void @stc_print_weave(%struct.stcolor_device_s* %518, %struct._IO_FILE* %519) #5
  br label %if.end.840

if.else.839:                                      ; preds = %if.else.835
  %520 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %521 = load %struct._IO_FILE*, %struct._IO_FILE** %prn_stream.addr, align 8, !tbaa !1
  call void @stc_print_bands(%struct.stcolor_device_s* %520, %struct._IO_FILE* %521) #5
  br label %if.end.840

if.end.840:                                       ; preds = %if.else.839, %if.then.838
  br label %if.end.841

if.end.841:                                       ; preds = %if.end.840, %if.then.834
  %522 = bitcast i32* %need to i8*
  call void @llvm.lifetime.end(i64 4, i8* %522) #2
  br label %while.cond.464

while.end.842:                                    ; preds = %while.cond.464
  %523 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc843 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %523, i32 0, i32 68
  %flags844 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc843, i32 0, i32 0
  %524 = load i64, i64* %flags844, align 8, !tbaa !5
  %and845 = and i64 %524, 8388608
  %tobool846 = icmp ne i64 %and845, 0
  br i1 %tobool846, label %if.then.847, label %if.end.860

if.then.847:                                      ; preds = %while.end.842
  %525 = load i64, i64* %flags, align 8, !tbaa !25
  %and848 = and i64 %525, 3072
  %cmp849 = icmp eq i64 %and848, 2048
  br i1 %cmp849, label %if.then.851, label %if.end.853

if.then.851:                                      ; preds = %if.then.847
  %526 = load %struct._IO_FILE*, %struct._IO_FILE** %prn_stream.addr, align 8, !tbaa !1
  %call852 = call i32 @fputc(i32 227, %struct._IO_FILE* %526) #5
  br label %if.end.853

if.end.853:                                       ; preds = %if.then.851, %if.then.847
  %527 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc854 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %527, i32 0, i32 68
  %escp_release = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc854, i32 0, i32 14
  %data = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %escp_release, i32 0, i32 0
  %528 = load i8*, i8** %data, align 8, !tbaa !63
  %529 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc855 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %529, i32 0, i32 68
  %escp_release856 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc855, i32 0, i32 14
  %size = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %escp_release856, i32 0, i32 1
  %530 = load i32, i32* %size, align 4, !tbaa !64
  %conv857 = zext i32 %530 to i64
  %531 = load %struct._IO_FILE*, %struct._IO_FILE** %prn_stream.addr, align 8, !tbaa !1
  %call858 = call i64 @fwrite(i8* %528, i64 1, i64 %conv857, %struct._IO_FILE* %531) #5
  %532 = load %struct._IO_FILE*, %struct._IO_FILE** %prn_stream.addr, align 8, !tbaa !1
  %call859 = call i32 @fflush(%struct._IO_FILE* %532) #5
  br label %if.end.860

if.end.860:                                       ; preds = %if.end.853, %while.end.842
  br label %if.end.861

if.end.861:                                       ; preds = %if.end.860, %if.end.422
  %533 = bitcast i8* (%struct.stcolor_device_s*, i8*, i32, i8*)** %iconvert to i8*
  call void @llvm.lifetime.end(i64 8, i8* %533) #2
  %534 = bitcast i32* %buf_i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %534) #2
  %535 = bitcast i32* %ncolor to i8*
  call void @llvm.lifetime.end(i64 4, i8* %535) #2
  br label %if.end.862

if.end.862:                                       ; preds = %if.end.861, %if.end.281
  %536 = load i8*, i8** %ext_line, align 8, !tbaa !1
  %cmp863 = icmp ne i8* %536, null
  br i1 %cmp863, label %if.then.865, label %if.end.871

if.then.865:                                      ; preds = %if.end.862
  %537 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %memory866 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %537, i32 0, i32 3
  %538 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory866, align 8, !tbaa !29
  %non_gc_memory867 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %538, i32 0, i32 3
  %539 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory867, align 8, !tbaa !30
  %procs868 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %539, i32 0, i32 1
  %free_object = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs868, i32 0, i32 2
  %540 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %free_object, align 8, !tbaa !65
  %541 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %memory869 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %541, i32 0, i32 3
  %542 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory869, align 8, !tbaa !29
  %non_gc_memory870 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %542, i32 0, i32 3
  %543 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory870, align 8, !tbaa !30
  %544 = load i8*, i8** %ext_line, align 8, !tbaa !1
  call void %540(%struct.gs_memory_s* %543, i8* %544, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.64, i32 0, i32 0)) #5
  br label %if.end.871

if.end.871:                                       ; preds = %if.then.865, %if.end.862
  %545 = load i8*, i8** %col_line, align 8, !tbaa !1
  %cmp872 = icmp ne i8* %545, null
  br i1 %cmp872, label %if.then.874, label %if.end.881

if.then.874:                                      ; preds = %if.end.871
  %546 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %memory875 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %546, i32 0, i32 3
  %547 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory875, align 8, !tbaa !29
  %non_gc_memory876 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %547, i32 0, i32 3
  %548 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory876, align 8, !tbaa !30
  %procs877 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %548, i32 0, i32 1
  %free_object878 = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs877, i32 0, i32 2
  %549 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %free_object878, align 8, !tbaa !65
  %550 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %memory879 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %550, i32 0, i32 3
  %551 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory879, align 8, !tbaa !29
  %non_gc_memory880 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %551, i32 0, i32 3
  %552 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory880, align 8, !tbaa !30
  %553 = load i8*, i8** %col_line, align 8, !tbaa !1
  call void %549(%struct.gs_memory_s* %552, i8* %553, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.65, i32 0, i32 0)) #5
  br label %if.end.881

if.end.881:                                       ; preds = %if.then.874, %if.end.871
  %554 = load i8*, i8** %alg_line, align 8, !tbaa !1
  %cmp882 = icmp ne i8* %554, null
  br i1 %cmp882, label %if.then.884, label %if.end.891

if.then.884:                                      ; preds = %if.end.881
  %555 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %memory885 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %555, i32 0, i32 3
  %556 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory885, align 8, !tbaa !29
  %non_gc_memory886 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %556, i32 0, i32 3
  %557 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory886, align 8, !tbaa !30
  %procs887 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %557, i32 0, i32 1
  %free_object888 = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs887, i32 0, i32 2
  %558 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %free_object888, align 8, !tbaa !65
  %559 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %memory889 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %559, i32 0, i32 3
  %560 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory889, align 8, !tbaa !29
  %non_gc_memory890 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %560, i32 0, i32 3
  %561 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory890, align 8, !tbaa !30
  %562 = load i8*, i8** %alg_line, align 8, !tbaa !1
  call void %558(%struct.gs_memory_s* %561, i8* %562, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.66, i32 0, i32 0)) #5
  br label %if.end.891

if.end.891:                                       ; preds = %if.then.884, %if.end.881
  %563 = load i8*, i8** %buf, align 8, !tbaa !1
  %cmp892 = icmp ne i8* %563, null
  br i1 %cmp892, label %if.then.894, label %if.end.901

if.then.894:                                      ; preds = %if.end.891
  %564 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %memory895 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %564, i32 0, i32 3
  %565 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory895, align 8, !tbaa !29
  %non_gc_memory896 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %565, i32 0, i32 3
  %566 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory896, align 8, !tbaa !30
  %procs897 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %566, i32 0, i32 1
  %free_object898 = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs897, i32 0, i32 2
  %567 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %free_object898, align 8, !tbaa !65
  %568 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %memory899 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %568, i32 0, i32 3
  %569 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory899, align 8, !tbaa !29
  %non_gc_memory900 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %569, i32 0, i32 3
  %570 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory900, align 8, !tbaa !30
  %571 = load i8*, i8** %buf, align 8, !tbaa !1
  call void %567(%struct.gs_memory_s* %570, i8* %571, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.67, i32 0, i32 0)) #5
  br label %if.end.901

if.end.901:                                       ; preds = %if.then.894, %if.end.891
  %572 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc902 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %572, i32 0, i32 68
  %prt_width903 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc902, i32 0, i32 34
  %573 = load i32*, i32** %prt_width903, align 8, !tbaa !49
  %cmp904 = icmp ne i32* %573, null
  br i1 %cmp904, label %if.then.906, label %if.end.915

if.then.906:                                      ; preds = %if.end.901
  %574 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %memory907 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %574, i32 0, i32 3
  %575 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory907, align 8, !tbaa !29
  %non_gc_memory908 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %575, i32 0, i32 3
  %576 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory908, align 8, !tbaa !30
  %procs909 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %576, i32 0, i32 1
  %free_object910 = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs909, i32 0, i32 2
  %577 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %free_object910, align 8, !tbaa !65
  %578 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %memory911 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %578, i32 0, i32 3
  %579 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory911, align 8, !tbaa !29
  %non_gc_memory912 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %579, i32 0, i32 3
  %580 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory912, align 8, !tbaa !30
  %581 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc913 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %581, i32 0, i32 68
  %prt_width914 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc913, i32 0, i32 34
  %582 = load i32*, i32** %prt_width914, align 8, !tbaa !49
  %583 = bitcast i32* %582 to i8*
  call void %577(%struct.gs_memory_s* %580, i8* %583, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.68, i32 0, i32 0)) #5
  br label %if.end.915

if.end.915:                                       ; preds = %if.then.906, %if.end.901
  %584 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc916 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %584, i32 0, i32 68
  %prt_data917 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc916, i32 0, i32 35
  %585 = load i8**, i8*** %prt_data917, align 8, !tbaa !50
  %cmp918 = icmp ne i8** %585, null
  br i1 %cmp918, label %if.then.920, label %if.end.958

if.then.920:                                      ; preds = %if.end.915
  %586 = bitcast i32* %i922 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %586) #2
  store i32 0, i32* %i922, align 4, !tbaa !26
  br label %for.cond.923

for.cond.923:                                     ; preds = %for.inc.947, %if.then.920
  %587 = load i32, i32* %i922, align 4, !tbaa !26
  %588 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc924 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %588, i32 0, i32 68
  %prt_buf925 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc924, i32 0, i32 20
  %589 = load i32, i32* %prt_buf925, align 4, !tbaa !47
  %cmp926 = icmp slt i32 %587, %589
  br i1 %cmp926, label %for.body.928, label %for.end.949

for.body.928:                                     ; preds = %for.cond.923
  %590 = load i32, i32* %i922, align 4, !tbaa !26
  %idxprom929 = sext i32 %590 to i64
  %591 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc930 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %591, i32 0, i32 68
  %prt_data931 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc930, i32 0, i32 35
  %592 = load i8**, i8*** %prt_data931, align 8, !tbaa !50
  %arrayidx932 = getelementptr inbounds i8*, i8** %592, i64 %idxprom929
  %593 = load i8*, i8** %arrayidx932, align 8, !tbaa !1
  %cmp933 = icmp ne i8* %593, null
  br i1 %cmp933, label %if.then.935, label %if.end.946

if.then.935:                                      ; preds = %for.body.928
  %594 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %memory936 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %594, i32 0, i32 3
  %595 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory936, align 8, !tbaa !29
  %non_gc_memory937 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %595, i32 0, i32 3
  %596 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory937, align 8, !tbaa !30
  %procs938 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %596, i32 0, i32 1
  %free_object939 = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs938, i32 0, i32 2
  %597 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %free_object939, align 8, !tbaa !65
  %598 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %memory940 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %598, i32 0, i32 3
  %599 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory940, align 8, !tbaa !29
  %non_gc_memory941 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %599, i32 0, i32 3
  %600 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory941, align 8, !tbaa !30
  %601 = load i32, i32* %i922, align 4, !tbaa !26
  %idxprom942 = sext i32 %601 to i64
  %602 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc943 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %602, i32 0, i32 68
  %prt_data944 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc943, i32 0, i32 35
  %603 = load i8**, i8*** %prt_data944, align 8, !tbaa !50
  %arrayidx945 = getelementptr inbounds i8*, i8** %603, i64 %idxprom942
  %604 = load i8*, i8** %arrayidx945, align 8, !tbaa !1
  call void %597(%struct.gs_memory_s* %600, i8* %604, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.70, i32 0, i32 0)) #5
  br label %if.end.946

if.end.946:                                       ; preds = %if.then.935, %for.body.928
  br label %for.inc.947

for.inc.947:                                      ; preds = %if.end.946
  %605 = load i32, i32* %i922, align 4, !tbaa !26
  %inc948 = add nsw i32 %605, 1
  store i32 %inc948, i32* %i922, align 4, !tbaa !26
  br label %for.cond.923

for.end.949:                                      ; preds = %for.cond.923
  %606 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %memory950 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %606, i32 0, i32 3
  %607 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory950, align 8, !tbaa !29
  %non_gc_memory951 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %607, i32 0, i32 3
  %608 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory951, align 8, !tbaa !30
  %procs952 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %608, i32 0, i32 1
  %free_object953 = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs952, i32 0, i32 2
  %609 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %free_object953, align 8, !tbaa !65
  %610 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %memory954 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %610, i32 0, i32 3
  %611 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory954, align 8, !tbaa !29
  %non_gc_memory955 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %611, i32 0, i32 3
  %612 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory955, align 8, !tbaa !30
  %613 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc956 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %613, i32 0, i32 68
  %prt_data957 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc956, i32 0, i32 35
  %614 = load i8**, i8*** %prt_data957, align 8, !tbaa !50
  %615 = bitcast i8** %614 to i8*
  call void %609(%struct.gs_memory_s* %612, i8* %615, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.69, i32 0, i32 0)) #5
  %616 = bitcast i32* %i922 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %616) #2
  br label %if.end.958

if.end.958:                                       ; preds = %for.end.949, %if.end.915
  %617 = bitcast i32* %i960 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %617) #2
  store i32 0, i32* %i960, align 4, !tbaa !26
  br label %for.cond.961

for.cond.961:                                     ; preds = %for.inc.985, %if.end.958
  %618 = load i32, i32* %i960, align 4, !tbaa !26
  %619 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %color_info962 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %619, i32 0, i32 11
  %num_components963 = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info962, i32 0, i32 1
  %620 = load i32, i32* %num_components963, align 4, !tbaa !40
  %cmp964 = icmp slt i32 %618, %620
  br i1 %cmp964, label %for.body.966, label %for.end.987

for.body.966:                                     ; preds = %for.cond.961
  %621 = load i32, i32* %i960, align 4, !tbaa !26
  %idxprom967 = sext i32 %621 to i64
  %622 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc968 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %622, i32 0, i32 68
  %seed_row969 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc968, i32 0, i32 37
  %arrayidx970 = getelementptr inbounds [4 x i8*], [4 x i8*]* %seed_row969, i32 0, i64 %idxprom967
  %623 = load i8*, i8** %arrayidx970, align 8, !tbaa !1
  %cmp971 = icmp ne i8* %623, null
  br i1 %cmp971, label %if.then.973, label %if.end.984

if.then.973:                                      ; preds = %for.body.966
  %624 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %memory974 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %624, i32 0, i32 3
  %625 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory974, align 8, !tbaa !29
  %non_gc_memory975 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %625, i32 0, i32 3
  %626 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory975, align 8, !tbaa !30
  %procs976 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %626, i32 0, i32 1
  %free_object977 = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs976, i32 0, i32 2
  %627 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %free_object977, align 8, !tbaa !65
  %628 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %memory978 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %628, i32 0, i32 3
  %629 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory978, align 8, !tbaa !29
  %non_gc_memory979 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %629, i32 0, i32 3
  %630 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory979, align 8, !tbaa !30
  %631 = load i32, i32* %i960, align 4, !tbaa !26
  %idxprom980 = sext i32 %631 to i64
  %632 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc981 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %632, i32 0, i32 68
  %seed_row982 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc981, i32 0, i32 37
  %arrayidx983 = getelementptr inbounds [4 x i8*], [4 x i8*]* %seed_row982, i32 0, i64 %idxprom980
  %633 = load i8*, i8** %arrayidx983, align 8, !tbaa !1
  call void %627(%struct.gs_memory_s* %630, i8* %633, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.71, i32 0, i32 0)) #5
  br label %if.end.984

if.end.984:                                       ; preds = %if.then.973, %for.body.966
  br label %for.inc.985

for.inc.985:                                      ; preds = %if.end.984
  %634 = load i32, i32* %i960, align 4, !tbaa !26
  %inc986 = add nsw i32 %634, 1
  store i32 %inc986, i32* %i960, align 4, !tbaa !26
  br label %for.cond.961

for.end.987:                                      ; preds = %for.cond.961
  %635 = bitcast i32* %i960 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %635) #2
  %636 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc988 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %636, i32 0, i32 68
  %escp_data989 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc988, i32 0, i32 36
  %637 = load i8*, i8** %escp_data989, align 8, !tbaa !53
  %cmp990 = icmp ne i8* %637, null
  br i1 %cmp990, label %if.then.992, label %if.end.1001

if.then.992:                                      ; preds = %for.end.987
  %638 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %memory993 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %638, i32 0, i32 3
  %639 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory993, align 8, !tbaa !29
  %non_gc_memory994 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %639, i32 0, i32 3
  %640 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory994, align 8, !tbaa !30
  %procs995 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %640, i32 0, i32 1
  %free_object996 = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs995, i32 0, i32 2
  %641 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %free_object996, align 8, !tbaa !65
  %642 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %memory997 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %642, i32 0, i32 3
  %643 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory997, align 8, !tbaa !29
  %non_gc_memory998 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %643, i32 0, i32 3
  %644 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory998, align 8, !tbaa !30
  %645 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc999 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %645, i32 0, i32 68
  %escp_data1000 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc999, i32 0, i32 36
  %646 = load i8*, i8** %escp_data1000, align 8, !tbaa !53
  call void %641(%struct.gs_memory_s* %644, i8* %646, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.72, i32 0, i32 0)) #5
  br label %if.end.1001

if.end.1001:                                      ; preds = %if.then.992, %for.end.987
  %647 = load i64, i64* %flags, align 8, !tbaa !25
  %and1002 = and i64 %647, 512
  %cmp1003 = icmp ne i64 %and1002, 0
  %cond1005 = select i1 %cmp1003, i32 0, i32 -21
  store i32 %cond1005, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.1006

cleanup.1006:                                     ; preds = %if.end.1001, %if.then
  %648 = bitcast i8** %col_line to i8*
  call void @llvm.lifetime.end(i64 8, i8* %648) #2
  %649 = bitcast i32* %prt_pixels to i8*
  call void @llvm.lifetime.end(i64 4, i8* %649) #2
  %650 = bitcast i8** %buf to i8*
  call void @llvm.lifetime.end(i64 8, i8* %650) #2
  %651 = bitcast i32* %buf_size to i8*
  call void @llvm.lifetime.end(i64 4, i8* %651) #2
  %652 = bitcast i8** %alg_line to i8*
  call void @llvm.lifetime.end(i64 8, i8* %652) #2
  %653 = bitcast i32* %alg_size to i8*
  call void @llvm.lifetime.end(i64 4, i8* %653) #2
  %654 = bitcast i8** %ext_line to i8*
  call void @llvm.lifetime.end(i64 8, i8* %654) #2
  %655 = bitcast i32* %ext_size to i8*
  call void @llvm.lifetime.end(i64 4, i8* %655) #2
  %656 = bitcast i32* %npass to i8*
  call void @llvm.lifetime.end(i64 4, i8* %656) #2
  %657 = bitcast i64* %flags to i8*
  call void @llvm.lifetime.end(i64 8, i8* %657) #2
  %658 = bitcast %struct.stcolor_device_s** %sd to i8*
  call void @llvm.lifetime.end(i64 8, i8* %658) #2
  %659 = load i32, i32* %retval
  ret i32 %659

unreachable:                                      ; preds = %cleanup
  unreachable
}

declare i32 @gx_default_print_page_copies(%struct.gx_device_printer_s*, %struct._IO_FILE*, i32) #0

declare i32 @gx_default_create_buf_device(%struct.gx_device_s**, %struct.gx_device_s*, i32, %struct.gx_render_plane_s*, %struct.gs_memory_s*, %struct.gx_colors_usage_s*) #0

declare i32 @gx_default_size_buf_device(%struct.gx_device_buf_space_s*, %struct.gx_device_s*, %struct.gx_render_plane_s*, i32, i32) #0

declare i32 @gx_default_setup_buf_device(%struct.gx_device_s*, i8*, i32, i8**, i32, i32, i32) #0

declare void @gx_default_destroy_buf_device(%struct.gx_device_s*) #0

declare void @gx_default_get_space_params(%struct.gx_device_printer_s*, %struct.gdev_space_params_s*) #0

declare i32 @gx_default_start_render_thread(%struct.gdev_prn_start_render_params_s*) #0

declare i32 @gx_default_open_render_device(%struct.gx_device_printer_s*) #0

declare i32 @gx_default_close_render_device(%struct.gx_device_printer_s*) #0

declare i32 @gx_default_buffer_page(%struct.gx_device_printer_s*, %struct._IO_FILE*, i32) #0

; Function Attrs: nounwind uwtable
define internal i32 @stc_open(%struct.gx_device_s* %pdev) #1 {
entry:
  %retval = alloca i32, align 4
  %pdev.addr = alloca %struct.gx_device_s*, align 8
  %sd = alloca %struct.stcolor_device_s*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %code = alloca i32, align 4
  %white = alloca i64, align 8
  %bpw = alloca i8*, align 8
  %bpm = alloca i8*, align 8
  %dp = alloca %struct.gs_param_string_s*, align 8
  %ly = alloca i64, align 8
  %iy = alloca i64, align 8
  %ystep = alloca double, align 8
  %xstep = alloca double, align 8
  %fx = alloca double, align 8
  %fy = alloca double, align 8
  %Out = alloca i8*, align 8
  %Nout = alloca i32, align 4
  %Omin = alloca double, align 8
  %Omax = alloca double, align 8
  %In = alloca float*, align 8
  %Nin = alloca i32, align 4
  %I = alloca i64, align 8
  %io = alloca i64, align 8
  %Istep = alloca double, align 8
  %Ostep = alloca double, align 8
  %Y = alloca double, align 8
  %Ovb = alloca i8, align 1
  %Ovl = alloca i64, align 8
  %j520 = alloca i64, align 8
  %o = alloca i64, align 8
  %xstep521 = alloca double, align 8
  %x = alloca double, align 8
  %y = alloca double, align 8
  %cv = alloca [4 x i16], align 2
  %cleanup.dest.slot = alloca i32
  store %struct.gx_device_s* %pdev, %struct.gx_device_s** %pdev.addr, align 8, !tbaa !1
  %0 = bitcast %struct.stcolor_device_s** %sd to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = load %struct.gx_device_s*, %struct.gx_device_s** %pdev.addr, align 8, !tbaa !1
  %2 = bitcast %struct.gx_device_s* %1 to %struct.stcolor_device_s*
  store %struct.stcolor_device_s* %2, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %3 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #2
  %4 = bitcast i32* %j to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #2
  %5 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #2
  %6 = bitcast i64* %white to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6) #2
  %7 = bitcast i8** %bpw to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7) #2
  %8 = bitcast i8** %bpm to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8) #2
  store i32 0, i32* %code, align 4, !tbaa !26
  %9 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %9, i32 0, i32 68
  %algorithms = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc, i32 0, i32 12
  %size = getelementptr inbounds %struct.gs_param_string_array_s, %struct.gs_param_string_array_s* %algorithms, i32 0, i32 1
  %10 = load i32, i32* %size, align 4, !tbaa !66
  %cmp = icmp eq i32 %10, 0
  br i1 %cmp, label %if.then, label %if.end.41

if.then:                                          ; preds = %entry
  %11 = bitcast %struct.gs_param_string_s** %dp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %11) #2
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then
  %12 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds [10 x %struct.stc_dither_s], [10 x %struct.stc_dither_s]* @stc_dither, i32 0, i64 %idxprom
  %name = getelementptr inbounds %struct.stc_dither_s, %struct.stc_dither_s* %arrayidx, i32 0, i32 0
  %13 = load i8*, i8** %name, align 8, !tbaa !67
  %cmp1 = icmp ne i8* %13, null
  br i1 %cmp1, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %14 = load i32, i32* %i, align 4, !tbaa !26
  %inc = add nsw i32 %14, 1
  store i32 %inc, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %15 = load i32, i32* %i, align 4, !tbaa !26
  %16 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %16, i32 0, i32 68
  %algorithms3 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2, i32 0, i32 12
  %size4 = getelementptr inbounds %struct.gs_param_string_array_s, %struct.gs_param_string_array_s* %algorithms3, i32 0, i32 1
  store i32 %15, i32* %size4, align 4, !tbaa !66
  %17 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %17, i32 0, i32 3
  %18 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory, align 8, !tbaa !29
  %non_gc_memory = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %18, i32 0, i32 3
  %19 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory, align 8, !tbaa !30
  %procs = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %19, i32 0, i32 1
  %alloc_byte_array = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs, i32 0, i32 10
  %20 = load i8* (%struct.gs_memory_s*, i32, i32, i8*)*, i8* (%struct.gs_memory_s*, i32, i32, i8*)** %alloc_byte_array, align 8, !tbaa !33
  %21 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %memory5 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %21, i32 0, i32 3
  %22 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory5, align 8, !tbaa !29
  %non_gc_memory6 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %22, i32 0, i32 3
  %23 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory6, align 8, !tbaa !30
  %24 = load i32, i32* %i, align 4, !tbaa !26
  %call = call i8* %20(%struct.gs_memory_s* %23, i32 %24, i32 16, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i32 0, i32 0)) #5
  %25 = bitcast i8* %call to %struct.gs_param_string_s*
  store %struct.gs_param_string_s* %25, %struct.gs_param_string_s** %dp, align 8, !tbaa !1
  %26 = load %struct.gs_param_string_s*, %struct.gs_param_string_s** %dp, align 8, !tbaa !1
  %cmp7 = icmp eq %struct.gs_param_string_s* %26, null
  br i1 %cmp7, label %if.then.8, label %if.else

if.then.8:                                        ; preds = %for.end
  store i32 -25, i32* %code, align 4, !tbaa !26
  %27 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc9 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %27, i32 0, i32 68
  %algorithms10 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc9, i32 0, i32 12
  %size11 = getelementptr inbounds %struct.gs_param_string_array_s, %struct.gs_param_string_array_s* %algorithms10, i32 0, i32 1
  store i32 0, i32* %size11, align 4, !tbaa !66
  br label %if.end

if.else:                                          ; preds = %for.end
  %28 = load %struct.gs_param_string_s*, %struct.gs_param_string_s** %dp, align 8, !tbaa !1
  %29 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc12 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %29, i32 0, i32 68
  %algorithms13 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc12, i32 0, i32 12
  %data = getelementptr inbounds %struct.gs_param_string_array_s, %struct.gs_param_string_array_s* %algorithms13, i32 0, i32 0
  store %struct.gs_param_string_s* %28, %struct.gs_param_string_s** %data, align 8, !tbaa !68
  %30 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc14 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %30, i32 0, i32 68
  %algorithms15 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc14, i32 0, i32 12
  %persistent = getelementptr inbounds %struct.gs_param_string_array_s, %struct.gs_param_string_array_s* %algorithms15, i32 0, i32 2
  store i32 1, i32* %persistent, align 4, !tbaa !69
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond.16

for.cond.16:                                      ; preds = %for.inc.38, %if.else
  %31 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom17 = sext i32 %31 to i64
  %arrayidx18 = getelementptr inbounds [10 x %struct.stc_dither_s], [10 x %struct.stc_dither_s]* @stc_dither, i32 0, i64 %idxprom17
  %name19 = getelementptr inbounds %struct.stc_dither_s, %struct.stc_dither_s* %arrayidx18, i32 0, i32 0
  %32 = load i8*, i8** %name19, align 8, !tbaa !67
  %cmp20 = icmp ne i8* %32, null
  br i1 %cmp20, label %for.body.21, label %for.end.40

for.body.21:                                      ; preds = %for.cond.16
  %33 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom22 = sext i32 %33 to i64
  %arrayidx23 = getelementptr inbounds [10 x %struct.stc_dither_s], [10 x %struct.stc_dither_s]* @stc_dither, i32 0, i64 %idxprom22
  %name24 = getelementptr inbounds %struct.stc_dither_s, %struct.stc_dither_s* %arrayidx23, i32 0, i32 0
  %34 = load i8*, i8** %name24, align 8, !tbaa !67
  %35 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom25 = sext i32 %35 to i64
  %36 = load %struct.gs_param_string_s*, %struct.gs_param_string_s** %dp, align 8, !tbaa !1
  %arrayidx26 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %36, i64 %idxprom25
  %data27 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %arrayidx26, i32 0, i32 0
  store i8* %34, i8** %data27, align 8, !tbaa !70
  %37 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom28 = sext i32 %37 to i64
  %38 = load %struct.gs_param_string_s*, %struct.gs_param_string_s** %dp, align 8, !tbaa !1
  %arrayidx29 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %38, i64 %idxprom28
  %data30 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %arrayidx29, i32 0, i32 0
  %39 = load i8*, i8** %data30, align 8, !tbaa !70
  %call31 = call i64 @strlen(i8* %39) #7
  %conv = trunc i64 %call31 to i32
  %40 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom32 = sext i32 %40 to i64
  %41 = load %struct.gs_param_string_s*, %struct.gs_param_string_s** %dp, align 8, !tbaa !1
  %arrayidx33 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %41, i64 %idxprom32
  %size34 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %arrayidx33, i32 0, i32 1
  store i32 %conv, i32* %size34, align 4, !tbaa !71
  %42 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom35 = sext i32 %42 to i64
  %43 = load %struct.gs_param_string_s*, %struct.gs_param_string_s** %dp, align 8, !tbaa !1
  %arrayidx36 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %43, i64 %idxprom35
  %persistent37 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %arrayidx36, i32 0, i32 2
  store i32 1, i32* %persistent37, align 4, !tbaa !72
  br label %for.inc.38

for.inc.38:                                       ; preds = %for.body.21
  %44 = load i32, i32* %i, align 4, !tbaa !26
  %inc39 = add nsw i32 %44, 1
  store i32 %inc39, i32* %i, align 4, !tbaa !26
  br label %for.cond.16

for.end.40:                                       ; preds = %for.cond.16
  br label %if.end

if.end:                                           ; preds = %for.end.40, %if.then.8
  %45 = bitcast %struct.gs_param_string_s** %dp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %45) #2
  br label %if.end.41

if.end.41:                                        ; preds = %if.end, %entry
  %46 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc42 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %46, i32 0, i32 68
  %dither = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc42, i32 0, i32 2
  %47 = load %struct.stc_dither_s*, %struct.stc_dither_s** %dither, align 8, !tbaa !41
  %flags = getelementptr inbounds %struct.stc_dither_s, %struct.stc_dither_s* %47, i32 0, i32 2
  %48 = load i32, i32* %flags, align 4, !tbaa !42
  %and = and i32 %48, 24
  switch i32 %and, label %sw.default [
    i32 8, label %sw.bb
    i32 16, label %sw.bb.44
  ]

sw.bb:                                            ; preds = %if.end.41
  %49 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc43 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %49, i32 0, i32 68
  %alg_item = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc43, i32 0, i32 19
  store i32 1, i32* %alg_item, align 4, !tbaa !45
  br label %sw.epilog

sw.bb.44:                                         ; preds = %if.end.41
  %50 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc45 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %50, i32 0, i32 68
  %alg_item46 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc45, i32 0, i32 19
  store i32 8, i32* %alg_item46, align 4, !tbaa !45
  br label %sw.epilog

sw.default:                                       ; preds = %if.end.41
  %51 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc47 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %51, i32 0, i32 68
  %alg_item48 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc47, i32 0, i32 19
  store i32 4, i32* %alg_item48, align 4, !tbaa !45
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb.44, %sw.bb
  %52 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %call49 = call i32 @stc_print_setup(%struct.stcolor_device_s* %52) #5
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond.50

for.cond.50:                                      ; preds = %for.inc.848, %sw.epilog
  %53 = load i32, i32* %i, align 4, !tbaa !26
  %54 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %color_info = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %54, i32 0, i32 11
  %num_components = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info, i32 0, i32 1
  %55 = load i32, i32* %num_components, align 4, !tbaa !40
  %cmp51 = icmp slt i32 %53, %55
  br i1 %cmp51, label %for.body.53, label %for.end.850

for.body.53:                                      ; preds = %for.cond.50
  %56 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom54 = sext i32 %56 to i64
  %57 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc55 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %57, i32 0, i32 68
  %sizc = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc55, i32 0, i32 5
  %arrayidx56 = getelementptr inbounds [4 x i32], [4 x i32]* %sizc, i32 0, i64 %idxprom54
  %58 = load i32, i32* %arrayidx56, align 4, !tbaa !26
  %cmp57 = icmp ugt i32 %58, 1
  br i1 %cmp57, label %land.lhs.true, label %if.end.295

land.lhs.true:                                    ; preds = %for.body.53
  %59 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom59 = sext i32 %59 to i64
  %60 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc60 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %60, i32 0, i32 68
  %extc = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc60, i32 0, i32 4
  %arrayidx61 = getelementptr inbounds [4 x float*], [4 x float*]* %extc, i32 0, i64 %idxprom59
  %61 = load float*, float** %arrayidx61, align 8, !tbaa !1
  %cmp62 = icmp ne float* %61, null
  br i1 %cmp62, label %if.then.64, label %if.end.295

if.then.64:                                       ; preds = %land.lhs.true
  store i32 0, i32* %j, align 4, !tbaa !26
  br label %for.cond.65

for.cond.65:                                      ; preds = %for.inc.81, %if.then.64
  %62 = load i32, i32* %j, align 4, !tbaa !26
  %63 = load i32, i32* %i, align 4, !tbaa !26
  %cmp66 = icmp slt i32 %62, %63
  br i1 %cmp66, label %for.body.68, label %for.end.83

for.body.68:                                      ; preds = %for.cond.65
  %64 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom69 = sext i32 %64 to i64
  %65 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc70 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %65, i32 0, i32 68
  %extc71 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc70, i32 0, i32 4
  %arrayidx72 = getelementptr inbounds [4 x float*], [4 x float*]* %extc71, i32 0, i64 %idxprom69
  %66 = load float*, float** %arrayidx72, align 8, !tbaa !1
  %67 = load i32, i32* %j, align 4, !tbaa !26
  %idxprom73 = sext i32 %67 to i64
  %68 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc74 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %68, i32 0, i32 68
  %extc75 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc74, i32 0, i32 4
  %arrayidx76 = getelementptr inbounds [4 x float*], [4 x float*]* %extc75, i32 0, i64 %idxprom73
  %69 = load float*, float** %arrayidx76, align 8, !tbaa !1
  %cmp77 = icmp eq float* %66, %69
  br i1 %cmp77, label %if.then.79, label %if.end.80

if.then.79:                                       ; preds = %for.body.68
  br label %for.end.83

if.end.80:                                        ; preds = %for.body.68
  br label %for.inc.81

for.inc.81:                                       ; preds = %if.end.80
  %70 = load i32, i32* %j, align 4, !tbaa !26
  %inc82 = add nsw i32 %70, 1
  store i32 %inc82, i32* %j, align 4, !tbaa !26
  br label %for.cond.65

for.end.83:                                       ; preds = %if.then.79, %for.cond.65
  %71 = load i32, i32* %i, align 4, !tbaa !26
  %72 = load i32, i32* %j, align 4, !tbaa !26
  %cmp84 = icmp eq i32 %71, %72
  br i1 %cmp84, label %if.then.86, label %if.else.285

if.then.86:                                       ; preds = %for.end.83
  %73 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %memory87 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %73, i32 0, i32 3
  %74 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory87, align 8, !tbaa !29
  %non_gc_memory88 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %74, i32 0, i32 3
  %75 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory88, align 8, !tbaa !30
  %procs89 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %75, i32 0, i32 1
  %alloc_byte_array90 = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs89, i32 0, i32 10
  %76 = load i8* (%struct.gs_memory_s*, i32, i32, i8*)*, i8* (%struct.gs_memory_s*, i32, i32, i8*)** %alloc_byte_array90, align 8, !tbaa !33
  %77 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %memory91 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %77, i32 0, i32 3
  %78 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory91, align 8, !tbaa !29
  %non_gc_memory92 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %78, i32 0, i32 3
  %79 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory92, align 8, !tbaa !30
  %80 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc93 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %80, i32 0, i32 68
  %bits = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc93, i32 0, i32 1
  %81 = load i32, i32* %bits, align 4, !tbaa !44
  %shl = shl i32 1, %81
  %call94 = call i8* %76(%struct.gs_memory_s* %79, i32 %shl, i32 2, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i32 0, i32 0)) #5
  %82 = bitcast i8* %call94 to i16*
  %83 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom95 = sext i32 %83 to i64
  %84 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc96 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %84, i32 0, i32 68
  %code97 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc96, i32 0, i32 6
  %arrayidx98 = getelementptr inbounds [4 x i16*], [4 x i16*]* %code97, i32 0, i64 %idxprom95
  store i16* %82, i16** %arrayidx98, align 8, !tbaa !1
  %85 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom99 = sext i32 %85 to i64
  %86 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc100 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %86, i32 0, i32 68
  %code101 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc100, i32 0, i32 6
  %arrayidx102 = getelementptr inbounds [4 x i16*], [4 x i16*]* %code101, i32 0, i64 %idxprom99
  %87 = load i16*, i16** %arrayidx102, align 8, !tbaa !1
  %cmp103 = icmp eq i16* %87, null
  br i1 %cmp103, label %if.then.105, label %if.else.106

if.then.105:                                      ; preds = %if.then.86
  store i32 -25, i32* %code, align 4, !tbaa !26
  br label %if.end.284

if.else.106:                                      ; preds = %if.then.86
  %88 = bitcast i64* %ly to i8*
  call void @llvm.lifetime.start(i64 8, i8* %88) #2
  %89 = bitcast i64* %iy to i8*
  call void @llvm.lifetime.start(i64 8, i8* %89) #2
  %90 = bitcast double* %ystep to i8*
  call void @llvm.lifetime.start(i64 8, i8* %90) #2
  %91 = bitcast double* %xstep to i8*
  call void @llvm.lifetime.start(i64 8, i8* %91) #2
  %92 = bitcast double* %fx to i8*
  call void @llvm.lifetime.start(i64 8, i8* %92) #2
  %93 = bitcast double* %fy to i8*
  call void @llvm.lifetime.start(i64 8, i8* %93) #2
  store double 1.000000e+18, double* %fx, align 8, !tbaa !55
  store double -1.000000e+18, double* %fy, align 8, !tbaa !55
  store i64 0, i64* %ly, align 8, !tbaa !25
  br label %for.cond.107

for.cond.107:                                     ; preds = %for.inc.148, %if.else.106
  %94 = load i64, i64* %ly, align 8, !tbaa !25
  %95 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom108 = sext i32 %95 to i64
  %96 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc109 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %96, i32 0, i32 68
  %sizc110 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc109, i32 0, i32 5
  %arrayidx111 = getelementptr inbounds [4 x i32], [4 x i32]* %sizc110, i32 0, i64 %idxprom108
  %97 = load i32, i32* %arrayidx111, align 4, !tbaa !26
  %conv112 = zext i32 %97 to i64
  %cmp113 = icmp ult i64 %94, %conv112
  br i1 %cmp113, label %for.body.115, label %for.end.150

for.body.115:                                     ; preds = %for.cond.107
  %98 = load i64, i64* %ly, align 8, !tbaa !25
  %99 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom116 = sext i32 %99 to i64
  %100 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc117 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %100, i32 0, i32 68
  %extc118 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc117, i32 0, i32 4
  %arrayidx119 = getelementptr inbounds [4 x float*], [4 x float*]* %extc118, i32 0, i64 %idxprom116
  %101 = load float*, float** %arrayidx119, align 8, !tbaa !1
  %arrayidx120 = getelementptr inbounds float, float* %101, i64 %98
  %102 = load float, float* %arrayidx120, align 4, !tbaa !37
  %conv121 = fpext float %102 to double
  %103 = load double, double* %fx, align 8, !tbaa !55
  %cmp122 = fcmp olt double %conv121, %103
  br i1 %cmp122, label %if.then.124, label %if.end.131

if.then.124:                                      ; preds = %for.body.115
  %104 = load i64, i64* %ly, align 8, !tbaa !25
  %105 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom125 = sext i32 %105 to i64
  %106 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc126 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %106, i32 0, i32 68
  %extc127 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc126, i32 0, i32 4
  %arrayidx128 = getelementptr inbounds [4 x float*], [4 x float*]* %extc127, i32 0, i64 %idxprom125
  %107 = load float*, float** %arrayidx128, align 8, !tbaa !1
  %arrayidx129 = getelementptr inbounds float, float* %107, i64 %104
  %108 = load float, float* %arrayidx129, align 4, !tbaa !37
  %conv130 = fpext float %108 to double
  store double %conv130, double* %fx, align 8, !tbaa !55
  br label %if.end.131

if.end.131:                                       ; preds = %if.then.124, %for.body.115
  %109 = load i64, i64* %ly, align 8, !tbaa !25
  %110 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom132 = sext i32 %110 to i64
  %111 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc133 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %111, i32 0, i32 68
  %extc134 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc133, i32 0, i32 4
  %arrayidx135 = getelementptr inbounds [4 x float*], [4 x float*]* %extc134, i32 0, i64 %idxprom132
  %112 = load float*, float** %arrayidx135, align 8, !tbaa !1
  %arrayidx136 = getelementptr inbounds float, float* %112, i64 %109
  %113 = load float, float* %arrayidx136, align 4, !tbaa !37
  %conv137 = fpext float %113 to double
  %114 = load double, double* %fy, align 8, !tbaa !55
  %cmp138 = fcmp ogt double %conv137, %114
  br i1 %cmp138, label %if.then.140, label %if.end.147

if.then.140:                                      ; preds = %if.end.131
  %115 = load i64, i64* %ly, align 8, !tbaa !25
  %116 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom141 = sext i32 %116 to i64
  %117 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc142 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %117, i32 0, i32 68
  %extc143 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc142, i32 0, i32 4
  %arrayidx144 = getelementptr inbounds [4 x float*], [4 x float*]* %extc143, i32 0, i64 %idxprom141
  %118 = load float*, float** %arrayidx144, align 8, !tbaa !1
  %arrayidx145 = getelementptr inbounds float, float* %118, i64 %115
  %119 = load float, float* %arrayidx145, align 4, !tbaa !37
  %conv146 = fpext float %119 to double
  store double %conv146, double* %fy, align 8, !tbaa !55
  br label %if.end.147

if.end.147:                                       ; preds = %if.then.140, %if.end.131
  br label %for.inc.148

for.inc.148:                                      ; preds = %if.end.147
  %120 = load i64, i64* %ly, align 8, !tbaa !25
  %inc149 = add i64 %120, 1
  store i64 %inc149, i64* %ly, align 8, !tbaa !25
  br label %for.cond.107

for.end.150:                                      ; preds = %for.cond.107
  %121 = load double, double* %fx, align 8, !tbaa !55
  %cmp151 = fcmp une double %121, 0.000000e+00
  br i1 %cmp151, label %if.then.155, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.end.150
  %122 = load double, double* %fy, align 8, !tbaa !55
  %cmp153 = fcmp une double %122, 1.000000e+00
  br i1 %cmp153, label %if.then.155, label %if.end.181

if.then.155:                                      ; preds = %lor.lhs.false, %for.end.150
  %123 = load double, double* %fy, align 8, !tbaa !55
  %124 = load double, double* %fx, align 8, !tbaa !55
  %sub = fsub double %123, %124
  %div = fdiv double 1.000000e+00, %sub
  store double %div, double* %fy, align 8, !tbaa !55
  store i64 0, i64* %ly, align 8, !tbaa !25
  br label %for.cond.156

for.cond.156:                                     ; preds = %for.inc.178, %if.then.155
  %125 = load i64, i64* %ly, align 8, !tbaa !25
  %126 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom157 = sext i32 %126 to i64
  %127 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc158 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %127, i32 0, i32 68
  %sizc159 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc158, i32 0, i32 5
  %arrayidx160 = getelementptr inbounds [4 x i32], [4 x i32]* %sizc159, i32 0, i64 %idxprom157
  %128 = load i32, i32* %arrayidx160, align 4, !tbaa !26
  %conv161 = zext i32 %128 to i64
  %cmp162 = icmp ult i64 %125, %conv161
  br i1 %cmp162, label %for.body.164, label %for.end.180

for.body.164:                                     ; preds = %for.cond.156
  %129 = load double, double* %fy, align 8, !tbaa !55
  %130 = load i64, i64* %ly, align 8, !tbaa !25
  %131 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom165 = sext i32 %131 to i64
  %132 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc166 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %132, i32 0, i32 68
  %extc167 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc166, i32 0, i32 4
  %arrayidx168 = getelementptr inbounds [4 x float*], [4 x float*]* %extc167, i32 0, i64 %idxprom165
  %133 = load float*, float** %arrayidx168, align 8, !tbaa !1
  %arrayidx169 = getelementptr inbounds float, float* %133, i64 %130
  %134 = load float, float* %arrayidx169, align 4, !tbaa !37
  %conv170 = fpext float %134 to double
  %135 = load double, double* %fx, align 8, !tbaa !55
  %sub171 = fsub double %conv170, %135
  %mul = fmul double %129, %sub171
  %conv172 = fptrunc double %mul to float
  %136 = load i64, i64* %ly, align 8, !tbaa !25
  %137 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom173 = sext i32 %137 to i64
  %138 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc174 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %138, i32 0, i32 68
  %extc175 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc174, i32 0, i32 4
  %arrayidx176 = getelementptr inbounds [4 x float*], [4 x float*]* %extc175, i32 0, i64 %idxprom173
  %139 = load float*, float** %arrayidx176, align 8, !tbaa !1
  %arrayidx177 = getelementptr inbounds float, float* %139, i64 %136
  store float %conv172, float* %arrayidx177, align 4, !tbaa !37
  br label %for.inc.178

for.inc.178:                                      ; preds = %for.body.164
  %140 = load i64, i64* %ly, align 8, !tbaa !25
  %inc179 = add i64 %140, 1
  store i64 %inc179, i64* %ly, align 8, !tbaa !25
  br label %for.cond.156

for.end.180:                                      ; preds = %for.cond.156
  br label %if.end.181

if.end.181:                                       ; preds = %for.end.180, %lor.lhs.false
  %141 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc182 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %141, i32 0, i32 68
  %bits183 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc182, i32 0, i32 1
  %142 = load i32, i32* %bits183, align 4, !tbaa !44
  %shl184 = shl i32 1, %142
  %sub185 = sub nsw i32 %shl184, 1
  %conv186 = sitofp i32 %sub185 to double
  %div187 = fdiv double 1.000000e+00, %conv186
  store double %div187, double* %ystep, align 8, !tbaa !55
  %143 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom188 = sext i32 %143 to i64
  %144 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc189 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %144, i32 0, i32 68
  %sizc190 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc189, i32 0, i32 5
  %arrayidx191 = getelementptr inbounds [4 x i32], [4 x i32]* %sizc190, i32 0, i64 %idxprom188
  %145 = load i32, i32* %arrayidx191, align 4, !tbaa !26
  %sub192 = sub i32 %145, 1
  %conv193 = uitofp i32 %sub192 to double
  %div194 = fdiv double 1.000000e+00, %conv193
  store double %div194, double* %xstep, align 8, !tbaa !55
  store i64 0, i64* %iy, align 8, !tbaa !25
  store i64 0, i64* %ly, align 8, !tbaa !25
  br label %for.cond.195

for.cond.195:                                     ; preds = %for.inc.281, %if.end.181
  %146 = load i64, i64* %ly, align 8, !tbaa !25
  %147 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc196 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %147, i32 0, i32 68
  %bits197 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc196, i32 0, i32 1
  %148 = load i32, i32* %bits197, align 4, !tbaa !44
  %shl198 = shl i32 1, %148
  %conv199 = sext i32 %shl198 to i64
  %cmp200 = icmp ult i64 %146, %conv199
  br i1 %cmp200, label %for.body.202, label %for.end.283

for.body.202:                                     ; preds = %for.cond.195
  %149 = load double, double* %ystep, align 8, !tbaa !55
  %150 = load i64, i64* %ly, align 8, !tbaa !25
  %conv203 = uitofp i64 %150 to double
  %mul204 = fmul double %149, %conv203
  store double %mul204, double* %fy, align 8, !tbaa !55
  br label %while.cond

while.cond:                                       ; preds = %while.body, %for.body.202
  %151 = load i64, i64* %iy, align 8, !tbaa !25
  %add = add i64 %151, 1
  %152 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom205 = sext i32 %152 to i64
  %153 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc206 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %153, i32 0, i32 68
  %sizc207 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc206, i32 0, i32 5
  %arrayidx208 = getelementptr inbounds [4 x i32], [4 x i32]* %sizc207, i32 0, i64 %idxprom205
  %154 = load i32, i32* %arrayidx208, align 4, !tbaa !26
  %conv209 = zext i32 %154 to i64
  %cmp210 = icmp ult i64 %add, %conv209
  br i1 %cmp210, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %155 = load double, double* %fy, align 8, !tbaa !55
  %156 = load i64, i64* %iy, align 8, !tbaa !25
  %add212 = add i64 %156, 1
  %157 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom213 = sext i32 %157 to i64
  %158 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc214 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %158, i32 0, i32 68
  %extc215 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc214, i32 0, i32 4
  %arrayidx216 = getelementptr inbounds [4 x float*], [4 x float*]* %extc215, i32 0, i64 %idxprom213
  %159 = load float*, float** %arrayidx216, align 8, !tbaa !1
  %arrayidx217 = getelementptr inbounds float, float* %159, i64 %add212
  %160 = load float, float* %arrayidx217, align 4, !tbaa !37
  %conv218 = fpext float %160 to double
  %cmp219 = fcmp ogt double %155, %conv218
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %161 = phi i1 [ false, %while.cond ], [ %cmp219, %land.rhs ]
  br i1 %161, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %162 = load i64, i64* %iy, align 8, !tbaa !25
  %inc221 = add i64 %162, 1
  store i64 %inc221, i64* %iy, align 8, !tbaa !25
  br label %while.cond

while.end:                                        ; preds = %land.end
  %163 = load i64, i64* %iy, align 8, !tbaa !25
  %conv222 = uitofp i64 %163 to double
  %164 = load double, double* %fy, align 8, !tbaa !55
  %165 = load i64, i64* %iy, align 8, !tbaa !25
  %166 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom223 = sext i32 %166 to i64
  %167 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc224 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %167, i32 0, i32 68
  %extc225 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc224, i32 0, i32 4
  %arrayidx226 = getelementptr inbounds [4 x float*], [4 x float*]* %extc225, i32 0, i64 %idxprom223
  %168 = load float*, float** %arrayidx226, align 8, !tbaa !1
  %arrayidx227 = getelementptr inbounds float, float* %168, i64 %165
  %169 = load float, float* %arrayidx227, align 4, !tbaa !37
  %conv228 = fpext float %169 to double
  %sub229 = fsub double %164, %conv228
  %170 = load i64, i64* %iy, align 8, !tbaa !25
  %add230 = add i64 %170, 1
  %171 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom231 = sext i32 %171 to i64
  %172 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc232 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %172, i32 0, i32 68
  %extc233 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc232, i32 0, i32 4
  %arrayidx234 = getelementptr inbounds [4 x float*], [4 x float*]* %extc233, i32 0, i64 %idxprom231
  %173 = load float*, float** %arrayidx234, align 8, !tbaa !1
  %arrayidx235 = getelementptr inbounds float, float* %173, i64 %add230
  %174 = load float, float* %arrayidx235, align 4, !tbaa !37
  %175 = load i64, i64* %iy, align 8, !tbaa !25
  %176 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom236 = sext i32 %176 to i64
  %177 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc237 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %177, i32 0, i32 68
  %extc238 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc237, i32 0, i32 4
  %arrayidx239 = getelementptr inbounds [4 x float*], [4 x float*]* %extc238, i32 0, i64 %idxprom236
  %178 = load float*, float** %arrayidx239, align 8, !tbaa !1
  %arrayidx240 = getelementptr inbounds float, float* %178, i64 %175
  %179 = load float, float* %arrayidx240, align 4, !tbaa !37
  %sub241 = fsub float %174, %179
  %conv242 = fpext float %sub241 to double
  %div243 = fdiv double %sub229, %conv242
  %add244 = fadd double %conv222, %div243
  store double %add244, double* %fx, align 8, !tbaa !55
  %180 = load double, double* %xstep, align 8, !tbaa !55
  %mul245 = fmul double %180, 6.553500e+04
  %181 = load double, double* %fx, align 8, !tbaa !55
  %mul246 = fmul double %181, %mul245
  store double %mul246, double* %fx, align 8, !tbaa !55
  %182 = load double, double* %fx, align 8, !tbaa !55
  %cmp247 = fcmp olt double %182, 0.000000e+00
  br i1 %cmp247, label %cond.true, label %cond.false

cond.true:                                        ; preds = %while.end
  br label %cond.end.253

cond.false:                                       ; preds = %while.end
  %183 = load double, double* %fx, align 8, !tbaa !55
  %cmp249 = fcmp ogt double %183, 6.553500e+04
  br i1 %cmp249, label %cond.true.251, label %cond.false.252

cond.true.251:                                    ; preds = %cond.false
  br label %cond.end

cond.false.252:                                   ; preds = %cond.false
  %184 = load double, double* %fx, align 8, !tbaa !55
  br label %cond.end

cond.end:                                         ; preds = %cond.false.252, %cond.true.251
  %cond = phi double [ 6.553500e+04, %cond.true.251 ], [ %184, %cond.false.252 ]
  br label %cond.end.253

cond.end.253:                                     ; preds = %cond.end, %cond.true
  %cond254 = phi double [ 0.000000e+00, %cond.true ], [ %cond, %cond.end ]
  store double %cond254, double* %fx, align 8, !tbaa !55
  %185 = load double, double* %fx, align 8, !tbaa !55
  %conv255 = fptoui double %185 to i16
  %186 = load i64, i64* %ly, align 8, !tbaa !25
  %187 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom256 = sext i32 %187 to i64
  %188 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc257 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %188, i32 0, i32 68
  %code258 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc257, i32 0, i32 6
  %arrayidx259 = getelementptr inbounds [4 x i16*], [4 x i16*]* %code258, i32 0, i64 %idxprom256
  %189 = load i16*, i16** %arrayidx259, align 8, !tbaa !1
  %arrayidx260 = getelementptr inbounds i16, i16* %189, i64 %186
  store i16 %conv255, i16* %arrayidx260, align 2, !tbaa !73
  %190 = load double, double* %fx, align 8, !tbaa !55
  %191 = load i64, i64* %ly, align 8, !tbaa !25
  %192 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom261 = sext i32 %192 to i64
  %193 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc262 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %193, i32 0, i32 68
  %code263 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc262, i32 0, i32 6
  %arrayidx264 = getelementptr inbounds [4 x i16*], [4 x i16*]* %code263, i32 0, i64 %idxprom261
  %194 = load i16*, i16** %arrayidx264, align 8, !tbaa !1
  %arrayidx265 = getelementptr inbounds i16, i16* %194, i64 %191
  %195 = load i16, i16* %arrayidx265, align 2, !tbaa !73
  %conv266 = zext i16 %195 to i32
  %conv267 = sitofp i32 %conv266 to double
  %sub268 = fsub double %190, %conv267
  %cmp269 = fcmp oge double %sub268, 5.000000e-01
  br i1 %cmp269, label %if.then.271, label %if.end.280

if.then.271:                                      ; preds = %cond.end.253
  %196 = load i64, i64* %ly, align 8, !tbaa !25
  %197 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom272 = sext i32 %197 to i64
  %198 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc273 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %198, i32 0, i32 68
  %code274 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc273, i32 0, i32 6
  %arrayidx275 = getelementptr inbounds [4 x i16*], [4 x i16*]* %code274, i32 0, i64 %idxprom272
  %199 = load i16*, i16** %arrayidx275, align 8, !tbaa !1
  %arrayidx276 = getelementptr inbounds i16, i16* %199, i64 %196
  %200 = load i16, i16* %arrayidx276, align 2, !tbaa !73
  %conv277 = zext i16 %200 to i32
  %add278 = add nsw i32 %conv277, 1
  %conv279 = trunc i32 %add278 to i16
  store i16 %conv279, i16* %arrayidx276, align 2, !tbaa !73
  br label %if.end.280

if.end.280:                                       ; preds = %if.then.271, %cond.end.253
  br label %for.inc.281

for.inc.281:                                      ; preds = %if.end.280
  %201 = load i64, i64* %ly, align 8, !tbaa !25
  %inc282 = add i64 %201, 1
  store i64 %inc282, i64* %ly, align 8, !tbaa !25
  br label %for.cond.195

for.end.283:                                      ; preds = %for.cond.195
  %202 = bitcast double* %fy to i8*
  call void @llvm.lifetime.end(i64 8, i8* %202) #2
  %203 = bitcast double* %fx to i8*
  call void @llvm.lifetime.end(i64 8, i8* %203) #2
  %204 = bitcast double* %xstep to i8*
  call void @llvm.lifetime.end(i64 8, i8* %204) #2
  %205 = bitcast double* %ystep to i8*
  call void @llvm.lifetime.end(i64 8, i8* %205) #2
  %206 = bitcast i64* %iy to i8*
  call void @llvm.lifetime.end(i64 8, i8* %206) #2
  %207 = bitcast i64* %ly to i8*
  call void @llvm.lifetime.end(i64 8, i8* %207) #2
  br label %if.end.284

if.end.284:                                       ; preds = %for.end.283, %if.then.105
  br label %if.end.294

if.else.285:                                      ; preds = %for.end.83
  %208 = load i32, i32* %j, align 4, !tbaa !26
  %idxprom286 = sext i32 %208 to i64
  %209 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc287 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %209, i32 0, i32 68
  %code288 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc287, i32 0, i32 6
  %arrayidx289 = getelementptr inbounds [4 x i16*], [4 x i16*]* %code288, i32 0, i64 %idxprom286
  %210 = load i16*, i16** %arrayidx289, align 8, !tbaa !1
  %211 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom290 = sext i32 %211 to i64
  %212 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc291 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %212, i32 0, i32 68
  %code292 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc291, i32 0, i32 6
  %arrayidx293 = getelementptr inbounds [4 x i16*], [4 x i16*]* %code292, i32 0, i64 %idxprom290
  store i16* %210, i16** %arrayidx293, align 8, !tbaa !1
  br label %if.end.294

if.end.294:                                       ; preds = %if.else.285, %if.end.284
  br label %if.end.295

if.end.295:                                       ; preds = %if.end.294, %land.lhs.true, %for.body.53
  %213 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom296 = sext i32 %213 to i64
  %214 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc297 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %214, i32 0, i32 68
  %sizv = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc297, i32 0, i32 8
  %arrayidx298 = getelementptr inbounds [4 x i32], [4 x i32]* %sizv, i32 0, i64 %idxprom296
  %215 = load i32, i32* %arrayidx298, align 4, !tbaa !26
  %cmp299 = icmp ugt i32 %215, 1
  br i1 %cmp299, label %land.lhs.true.301, label %if.end.847

land.lhs.true.301:                                ; preds = %if.end.295
  %216 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom302 = sext i32 %216 to i64
  %217 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc303 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %217, i32 0, i32 68
  %extv = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc303, i32 0, i32 7
  %arrayidx304 = getelementptr inbounds [4 x float*], [4 x float*]* %extv, i32 0, i64 %idxprom302
  %218 = load float*, float** %arrayidx304, align 8, !tbaa !1
  %cmp305 = icmp ne float* %218, null
  br i1 %cmp305, label %if.then.307, label %if.end.847

if.then.307:                                      ; preds = %land.lhs.true.301
  store i32 0, i32* %j, align 4, !tbaa !26
  br label %for.cond.308

for.cond.308:                                     ; preds = %for.inc.335, %if.then.307
  %219 = load i32, i32* %j, align 4, !tbaa !26
  %220 = load i32, i32* %i, align 4, !tbaa !26
  %cmp309 = icmp slt i32 %219, %220
  br i1 %cmp309, label %for.body.311, label %for.end.337

for.body.311:                                     ; preds = %for.cond.308
  %221 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom312 = sext i32 %221 to i64
  %222 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc313 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %222, i32 0, i32 68
  %extc314 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc313, i32 0, i32 4
  %arrayidx315 = getelementptr inbounds [4 x float*], [4 x float*]* %extc314, i32 0, i64 %idxprom312
  %223 = load float*, float** %arrayidx315, align 8, !tbaa !1
  %224 = load i32, i32* %j, align 4, !tbaa !26
  %idxprom316 = sext i32 %224 to i64
  %225 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc317 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %225, i32 0, i32 68
  %extc318 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc317, i32 0, i32 4
  %arrayidx319 = getelementptr inbounds [4 x float*], [4 x float*]* %extc318, i32 0, i64 %idxprom316
  %226 = load float*, float** %arrayidx319, align 8, !tbaa !1
  %cmp320 = icmp eq float* %223, %226
  br i1 %cmp320, label %land.lhs.true.322, label %if.end.334

land.lhs.true.322:                                ; preds = %for.body.311
  %227 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom323 = sext i32 %227 to i64
  %228 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc324 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %228, i32 0, i32 68
  %extv325 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc324, i32 0, i32 7
  %arrayidx326 = getelementptr inbounds [4 x float*], [4 x float*]* %extv325, i32 0, i64 %idxprom323
  %229 = load float*, float** %arrayidx326, align 8, !tbaa !1
  %230 = load i32, i32* %j, align 4, !tbaa !26
  %idxprom327 = sext i32 %230 to i64
  %231 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc328 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %231, i32 0, i32 68
  %extv329 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc328, i32 0, i32 7
  %arrayidx330 = getelementptr inbounds [4 x float*], [4 x float*]* %extv329, i32 0, i64 %idxprom327
  %232 = load float*, float** %arrayidx330, align 8, !tbaa !1
  %cmp331 = icmp eq float* %229, %232
  br i1 %cmp331, label %if.then.333, label %if.end.334

if.then.333:                                      ; preds = %land.lhs.true.322
  br label %for.end.337

if.end.334:                                       ; preds = %land.lhs.true.322, %for.body.311
  br label %for.inc.335

for.inc.335:                                      ; preds = %if.end.334
  %233 = load i32, i32* %j, align 4, !tbaa !26
  %inc336 = add nsw i32 %233, 1
  store i32 %inc336, i32* %j, align 4, !tbaa !26
  br label %for.cond.308

for.end.337:                                      ; preds = %if.then.333, %for.cond.308
  %234 = load i32, i32* %i, align 4, !tbaa !26
  %235 = load i32, i32* %j, align 4, !tbaa !26
  %cmp338 = icmp eq i32 %234, %235
  br i1 %cmp338, label %if.then.340, label %if.else.837

if.then.340:                                      ; preds = %for.end.337
  %236 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %memory341 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %236, i32 0, i32 3
  %237 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory341, align 8, !tbaa !29
  %non_gc_memory342 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %237, i32 0, i32 3
  %238 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory342, align 8, !tbaa !30
  %procs343 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %238, i32 0, i32 1
  %alloc_byte_array344 = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs343, i32 0, i32 10
  %239 = load i8* (%struct.gs_memory_s*, i32, i32, i8*)*, i8* (%struct.gs_memory_s*, i32, i32, i8*)** %alloc_byte_array344, align 8, !tbaa !33
  %240 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %memory345 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %240, i32 0, i32 3
  %241 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory345, align 8, !tbaa !29
  %non_gc_memory346 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %241, i32 0, i32 3
  %242 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory346, align 8, !tbaa !30
  %243 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc347 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %243, i32 0, i32 68
  %bits348 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc347, i32 0, i32 1
  %244 = load i32, i32* %bits348, align 4, !tbaa !44
  %shl349 = shl i32 1, %244
  %245 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc350 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %245, i32 0, i32 68
  %alg_item351 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc350, i32 0, i32 19
  %246 = load i32, i32* %alg_item351, align 4, !tbaa !45
  %call352 = call i8* %239(%struct.gs_memory_s* %242, i32 %shl349, i32 %246, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i32 0, i32 0)) #5
  %247 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom353 = sext i32 %247 to i64
  %248 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc354 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %248, i32 0, i32 68
  %vals = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc354, i32 0, i32 9
  %arrayidx355 = getelementptr inbounds [4 x i8*], [4 x i8*]* %vals, i32 0, i64 %idxprom353
  store i8* %call352, i8** %arrayidx355, align 8, !tbaa !1
  %249 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom356 = sext i32 %249 to i64
  %250 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc357 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %250, i32 0, i32 68
  %vals358 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc357, i32 0, i32 9
  %arrayidx359 = getelementptr inbounds [4 x i8*], [4 x i8*]* %vals358, i32 0, i64 %idxprom356
  %251 = load i8*, i8** %arrayidx359, align 8, !tbaa !1
  %cmp360 = icmp eq i8* %251, null
  br i1 %cmp360, label %if.then.362, label %if.else.363

if.then.362:                                      ; preds = %if.then.340
  store i32 -25, i32* %code, align 4, !tbaa !26
  br label %if.end.836

if.else.363:                                      ; preds = %if.then.340
  %252 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom364 = sext i32 %252 to i64
  %253 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc365 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %253, i32 0, i32 68
  %code366 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc365, i32 0, i32 6
  %arrayidx367 = getelementptr inbounds [4 x i16*], [4 x i16*]* %code366, i32 0, i64 %idxprom364
  %254 = load i16*, i16** %arrayidx367, align 8, !tbaa !1
  %cmp368 = icmp eq i16* %254, null
  br i1 %cmp368, label %if.then.370, label %if.else.519

if.then.370:                                      ; preds = %if.else.363
  %255 = bitcast i8** %Out to i8*
  call void @llvm.lifetime.start(i64 8, i8* %255) #2
  %256 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom371 = sext i32 %256 to i64
  %257 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc372 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %257, i32 0, i32 68
  %vals373 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc372, i32 0, i32 9
  %arrayidx374 = getelementptr inbounds [4 x i8*], [4 x i8*]* %vals373, i32 0, i64 %idxprom371
  %258 = load i8*, i8** %arrayidx374, align 8, !tbaa !1
  store i8* %258, i8** %Out, align 8, !tbaa !1
  %259 = bitcast i32* %Nout to i8*
  call void @llvm.lifetime.start(i64 4, i8* %259) #2
  %260 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc375 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %260, i32 0, i32 68
  %bits376 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc375, i32 0, i32 1
  %261 = load i32, i32* %bits376, align 4, !tbaa !44
  %shl377 = shl i32 1, %261
  store i32 %shl377, i32* %Nout, align 4, !tbaa !26
  %262 = bitcast double* %Omin to i8*
  call void @llvm.lifetime.start(i64 8, i8* %262) #2
  %263 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc378 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %263, i32 0, i32 68
  %dither379 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc378, i32 0, i32 2
  %264 = load %struct.stc_dither_s*, %struct.stc_dither_s** %dither379, align 8, !tbaa !41
  %minmax = getelementptr inbounds %struct.stc_dither_s, %struct.stc_dither_s* %264, i32 0, i32 4
  %arrayidx380 = getelementptr inbounds [2 x double], [2 x double]* %minmax, i32 0, i64 0
  %265 = load double, double* %arrayidx380, align 8, !tbaa !55
  store double %265, double* %Omin, align 8, !tbaa !55
  %266 = bitcast double* %Omax to i8*
  call void @llvm.lifetime.start(i64 8, i8* %266) #2
  %267 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc381 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %267, i32 0, i32 68
  %dither382 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc381, i32 0, i32 2
  %268 = load %struct.stc_dither_s*, %struct.stc_dither_s** %dither382, align 8, !tbaa !41
  %minmax383 = getelementptr inbounds %struct.stc_dither_s, %struct.stc_dither_s* %268, i32 0, i32 4
  %arrayidx384 = getelementptr inbounds [2 x double], [2 x double]* %minmax383, i32 0, i64 1
  %269 = load double, double* %arrayidx384, align 8, !tbaa !55
  store double %269, double* %Omax, align 8, !tbaa !55
  %270 = bitcast float** %In to i8*
  call void @llvm.lifetime.start(i64 8, i8* %270) #2
  %271 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom385 = sext i32 %271 to i64
  %272 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc386 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %272, i32 0, i32 68
  %extv387 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc386, i32 0, i32 7
  %arrayidx388 = getelementptr inbounds [4 x float*], [4 x float*]* %extv387, i32 0, i64 %idxprom385
  %273 = load float*, float** %arrayidx388, align 8, !tbaa !1
  store float* %273, float** %In, align 8, !tbaa !1
  %274 = bitcast i32* %Nin to i8*
  call void @llvm.lifetime.start(i64 4, i8* %274) #2
  %275 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom389 = sext i32 %275 to i64
  %276 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc390 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %276, i32 0, i32 68
  %sizv391 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc390, i32 0, i32 8
  %arrayidx392 = getelementptr inbounds [4 x i32], [4 x i32]* %sizv391, i32 0, i64 %idxprom389
  %277 = load i32, i32* %arrayidx392, align 4, !tbaa !26
  store i32 %277, i32* %Nin, align 4, !tbaa !26
  %278 = bitcast i64* %I to i8*
  call void @llvm.lifetime.start(i64 8, i8* %278) #2
  %279 = bitcast i64* %io to i8*
  call void @llvm.lifetime.start(i64 8, i8* %279) #2
  %280 = bitcast double* %Istep to i8*
  call void @llvm.lifetime.start(i64 8, i8* %280) #2
  %281 = bitcast double* %Ostep to i8*
  call void @llvm.lifetime.start(i64 8, i8* %281) #2
  %282 = bitcast double* %Y to i8*
  call void @llvm.lifetime.start(i64 8, i8* %282) #2
  call void @llvm.lifetime.start(i64 1, i8* %Ovb) #2
  %283 = bitcast i64* %Ovl to i8*
  call void @llvm.lifetime.start(i64 8, i8* %283) #2
  %284 = load i32, i32* %Nin, align 4, !tbaa !26
  %sub393 = sub nsw i32 %284, 1
  %conv394 = sitofp i32 %sub393 to double
  %div395 = fdiv double 1.000000e+00, %conv394
  store double %div395, double* %Istep, align 8, !tbaa !55
  %285 = load i32, i32* %Nout, align 4, !tbaa !26
  %sub396 = sub nsw i32 %285, 1
  %conv397 = sitofp i32 %sub396 to double
  %div398 = fdiv double 1.000000e+00, %conv397
  store double %div398, double* %Ostep, align 8, !tbaa !55
  store i64 0, i64* %io, align 8, !tbaa !25
  br label %for.cond.399

for.cond.399:                                     ; preds = %for.inc.516, %if.then.370
  %286 = load i64, i64* %io, align 8, !tbaa !25
  %287 = load i32, i32* %Nout, align 4, !tbaa !26
  %conv400 = sext i32 %287 to i64
  %cmp401 = icmp ult i64 %286, %conv400
  br i1 %cmp401, label %for.body.403, label %for.end.518

for.body.403:                                     ; preds = %for.cond.399
  %288 = load i64, i64* %io, align 8, !tbaa !25
  %289 = load i32, i32* %Nin, align 4, !tbaa !26
  %sub404 = sub nsw i32 %289, 1
  %conv405 = sext i32 %sub404 to i64
  %mul406 = mul i64 %288, %conv405
  %290 = load i32, i32* %Nout, align 4, !tbaa !26
  %sub407 = sub nsw i32 %290, 1
  %conv408 = sext i32 %sub407 to i64
  %div409 = sdiv i64 %mul406, %conv408
  store i64 %div409, i64* %I, align 8, !tbaa !25
  %291 = load i64, i64* %I, align 8, !tbaa !25
  %add410 = add i64 %291, 1
  %292 = load i32, i32* %Nin, align 4, !tbaa !26
  %conv411 = sext i32 %292 to i64
  %cmp412 = icmp ult i64 %add410, %conv411
  br i1 %cmp412, label %if.then.414, label %if.else.430

if.then.414:                                      ; preds = %for.body.403
  %293 = load i64, i64* %I, align 8, !tbaa !25
  %294 = load float*, float** %In, align 8, !tbaa !1
  %arrayidx415 = getelementptr inbounds float, float* %294, i64 %293
  %295 = load float, float* %arrayidx415, align 4, !tbaa !37
  %conv416 = fpext float %295 to double
  %296 = load i64, i64* %I, align 8, !tbaa !25
  %add417 = add i64 %296, 1
  %297 = load float*, float** %In, align 8, !tbaa !1
  %arrayidx418 = getelementptr inbounds float, float* %297, i64 %add417
  %298 = load float, float* %arrayidx418, align 4, !tbaa !37
  %299 = load i64, i64* %I, align 8, !tbaa !25
  %300 = load float*, float** %In, align 8, !tbaa !1
  %arrayidx419 = getelementptr inbounds float, float* %300, i64 %299
  %301 = load float, float* %arrayidx419, align 4, !tbaa !37
  %sub420 = fsub float %298, %301
  %conv421 = fpext float %sub420 to double
  %302 = load i64, i64* %io, align 8, !tbaa !25
  %conv422 = uitofp i64 %302 to double
  %303 = load double, double* %Ostep, align 8, !tbaa !55
  %mul423 = fmul double %conv422, %303
  %304 = load i64, i64* %I, align 8, !tbaa !25
  %conv424 = uitofp i64 %304 to double
  %305 = load double, double* %Istep, align 8, !tbaa !55
  %mul425 = fmul double %conv424, %305
  %sub426 = fsub double %mul423, %mul425
  %mul427 = fmul double %conv421, %sub426
  %306 = load double, double* %Istep, align 8, !tbaa !55
  %div428 = fdiv double %mul427, %306
  %add429 = fadd double %conv416, %div428
  store double %add429, double* %Y, align 8, !tbaa !55
  br label %if.end.446

if.else.430:                                      ; preds = %for.body.403
  %307 = load i64, i64* %I, align 8, !tbaa !25
  %308 = load float*, float** %In, align 8, !tbaa !1
  %arrayidx431 = getelementptr inbounds float, float* %308, i64 %307
  %309 = load float, float* %arrayidx431, align 4, !tbaa !37
  %conv432 = fpext float %309 to double
  %310 = load i64, i64* %I, align 8, !tbaa !25
  %311 = load float*, float** %In, align 8, !tbaa !1
  %arrayidx433 = getelementptr inbounds float, float* %311, i64 %310
  %312 = load float, float* %arrayidx433, align 4, !tbaa !37
  %313 = load i64, i64* %I, align 8, !tbaa !25
  %sub434 = sub i64 %313, 1
  %314 = load float*, float** %In, align 8, !tbaa !1
  %arrayidx435 = getelementptr inbounds float, float* %314, i64 %sub434
  %315 = load float, float* %arrayidx435, align 4, !tbaa !37
  %sub436 = fsub float %312, %315
  %conv437 = fpext float %sub436 to double
  %316 = load i64, i64* %io, align 8, !tbaa !25
  %conv438 = uitofp i64 %316 to double
  %317 = load double, double* %Ostep, align 8, !tbaa !55
  %mul439 = fmul double %conv438, %317
  %318 = load i64, i64* %I, align 8, !tbaa !25
  %conv440 = uitofp i64 %318 to double
  %319 = load double, double* %Istep, align 8, !tbaa !55
  %mul441 = fmul double %conv440, %319
  %sub442 = fsub double %mul439, %mul441
  %mul443 = fmul double %conv437, %sub442
  %320 = load double, double* %Istep, align 8, !tbaa !55
  %div444 = fdiv double %mul443, %320
  %add445 = fadd double %conv432, %div444
  store double %add445, double* %Y, align 8, !tbaa !55
  br label %if.end.446

if.end.446:                                       ; preds = %if.else.430, %if.then.414
  %321 = load double, double* %Omin, align 8, !tbaa !55
  %322 = load double, double* %Omax, align 8, !tbaa !55
  %323 = load double, double* %Omin, align 8, !tbaa !55
  %sub447 = fsub double %322, %323
  %324 = load double, double* %Y, align 8, !tbaa !55
  %mul448 = fmul double %sub447, %324
  %add449 = fadd double %321, %mul448
  store double %add449, double* %Y, align 8, !tbaa !55
  %325 = load double, double* %Y, align 8, !tbaa !55
  %326 = load double, double* %Omin, align 8, !tbaa !55
  %cmp450 = fcmp olt double %325, %326
  br i1 %cmp450, label %cond.true.452, label %cond.false.453

cond.true.452:                                    ; preds = %if.end.446
  %327 = load double, double* %Omin, align 8, !tbaa !55
  br label %cond.end.460

cond.false.453:                                   ; preds = %if.end.446
  %328 = load double, double* %Y, align 8, !tbaa !55
  %329 = load double, double* %Omax, align 8, !tbaa !55
  %cmp454 = fcmp ogt double %328, %329
  br i1 %cmp454, label %cond.true.456, label %cond.false.457

cond.true.456:                                    ; preds = %cond.false.453
  %330 = load double, double* %Omax, align 8, !tbaa !55
  br label %cond.end.458

cond.false.457:                                   ; preds = %cond.false.453
  %331 = load double, double* %Y, align 8, !tbaa !55
  br label %cond.end.458

cond.end.458:                                     ; preds = %cond.false.457, %cond.true.456
  %cond459 = phi double [ %330, %cond.true.456 ], [ %331, %cond.false.457 ]
  br label %cond.end.460

cond.end.460:                                     ; preds = %cond.end.458, %cond.true.452
  %cond461 = phi double [ %327, %cond.true.452 ], [ %cond459, %cond.end.458 ]
  store double %cond461, double* %Y, align 8, !tbaa !55
  %332 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc462 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %332, i32 0, i32 68
  %dither463 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc462, i32 0, i32 2
  %333 = load %struct.stc_dither_s*, %struct.stc_dither_s** %dither463, align 8, !tbaa !41
  %flags464 = getelementptr inbounds %struct.stc_dither_s, %struct.stc_dither_s* %333, i32 0, i32 2
  %334 = load i32, i32* %flags464, align 4, !tbaa !42
  %and465 = and i32 %334, 24
  switch i32 %and465, label %sw.default.512 [
    i32 8, label %sw.bb.466
    i32 16, label %sw.bb.485
  ]

sw.bb.466:                                        ; preds = %cond.end.460
  %335 = load double, double* %Y, align 8, !tbaa !55
  %conv467 = fptoui double %335 to i8
  store i8 %conv467, i8* %Ovb, align 1, !tbaa !62
  %336 = load double, double* %Y, align 8, !tbaa !55
  %337 = load i8, i8* %Ovb, align 1, !tbaa !62
  %conv468 = zext i8 %337 to i32
  %conv469 = sitofp i32 %conv468 to double
  %sub470 = fsub double %336, %conv469
  %cmp471 = fcmp oge double %sub470, 5.000000e-01
  br i1 %cmp471, label %land.lhs.true.473, label %if.end.483

land.lhs.true.473:                                ; preds = %sw.bb.466
  %338 = load i8, i8* %Ovb, align 1, !tbaa !62
  %conv474 = zext i8 %338 to i32
  %add475 = add nsw i32 %conv474, 1
  %conv476 = sitofp i32 %add475 to double
  %339 = load double, double* %Omax, align 8, !tbaa !55
  %cmp477 = fcmp ole double %conv476, %339
  br i1 %cmp477, label %if.then.479, label %if.end.483

if.then.479:                                      ; preds = %land.lhs.true.473
  %340 = load i8, i8* %Ovb, align 1, !tbaa !62
  %conv480 = zext i8 %340 to i32
  %add481 = add nsw i32 %conv480, 1
  %conv482 = trunc i32 %add481 to i8
  store i8 %conv482, i8* %Ovb, align 1, !tbaa !62
  br label %if.end.483

if.end.483:                                       ; preds = %if.then.479, %land.lhs.true.473, %sw.bb.466
  %341 = load i8, i8* %Ovb, align 1, !tbaa !62
  %342 = load i64, i64* %io, align 8, !tbaa !25
  %343 = load i8*, i8** %Out, align 8, !tbaa !1
  %arrayidx484 = getelementptr inbounds i8, i8* %343, i64 %342
  store i8 %341, i8* %arrayidx484, align 1, !tbaa !62
  br label %sw.epilog.515

sw.bb.485:                                        ; preds = %cond.end.460
  %344 = load double, double* %Y, align 8, !tbaa !55
  %conv486 = fptosi double %344 to i64
  store i64 %conv486, i64* %Ovl, align 8, !tbaa !25
  %345 = load double, double* %Y, align 8, !tbaa !55
  %346 = load i64, i64* %Ovl, align 8, !tbaa !25
  %conv487 = sitofp i64 %346 to double
  %sub488 = fsub double %345, %conv487
  %cmp489 = fcmp oge double %sub488, 5.000000e-01
  br i1 %cmp489, label %land.lhs.true.491, label %if.end.498

land.lhs.true.491:                                ; preds = %sw.bb.485
  %347 = load i64, i64* %Ovl, align 8, !tbaa !25
  %add492 = add nsw i64 %347, 1
  %conv493 = sitofp i64 %add492 to double
  %348 = load double, double* %Omax, align 8, !tbaa !55
  %cmp494 = fcmp ole double %conv493, %348
  br i1 %cmp494, label %if.then.496, label %if.end.498

if.then.496:                                      ; preds = %land.lhs.true.491
  %349 = load i64, i64* %Ovl, align 8, !tbaa !25
  %add497 = add nsw i64 %349, 1
  store i64 %add497, i64* %Ovl, align 8, !tbaa !25
  br label %if.end.498

if.end.498:                                       ; preds = %if.then.496, %land.lhs.true.491, %sw.bb.485
  %350 = load i64, i64* %Ovl, align 8, !tbaa !25
  %conv499 = sitofp i64 %350 to double
  %351 = load double, double* %Y, align 8, !tbaa !55
  %sub500 = fsub double %conv499, %351
  %cmp501 = fcmp oge double %sub500, 5.000000e-01
  br i1 %cmp501, label %land.lhs.true.503, label %if.end.510

land.lhs.true.503:                                ; preds = %if.end.498
  %352 = load i64, i64* %Ovl, align 8, !tbaa !25
  %sub504 = sub nsw i64 %352, 1
  %conv505 = sitofp i64 %sub504 to double
  %353 = load double, double* %Omax, align 8, !tbaa !55
  %cmp506 = fcmp oge double %conv505, %353
  br i1 %cmp506, label %if.then.508, label %if.end.510

if.then.508:                                      ; preds = %land.lhs.true.503
  %354 = load i64, i64* %Ovl, align 8, !tbaa !25
  %sub509 = sub nsw i64 %354, 1
  store i64 %sub509, i64* %Ovl, align 8, !tbaa !25
  br label %if.end.510

if.end.510:                                       ; preds = %if.then.508, %land.lhs.true.503, %if.end.498
  %355 = load i64, i64* %Ovl, align 8, !tbaa !25
  %356 = load i64, i64* %io, align 8, !tbaa !25
  %357 = load i8*, i8** %Out, align 8, !tbaa !1
  %358 = bitcast i8* %357 to i64*
  %arrayidx511 = getelementptr inbounds i64, i64* %358, i64 %356
  store i64 %355, i64* %arrayidx511, align 8, !tbaa !25
  br label %sw.epilog.515

sw.default.512:                                   ; preds = %cond.end.460
  %359 = load double, double* %Y, align 8, !tbaa !55
  %conv513 = fptrunc double %359 to float
  %360 = load i64, i64* %io, align 8, !tbaa !25
  %361 = load i8*, i8** %Out, align 8, !tbaa !1
  %362 = bitcast i8* %361 to float*
  %arrayidx514 = getelementptr inbounds float, float* %362, i64 %360
  store float %conv513, float* %arrayidx514, align 4, !tbaa !37
  br label %sw.epilog.515

sw.epilog.515:                                    ; preds = %sw.default.512, %if.end.510, %if.end.483
  br label %for.inc.516

for.inc.516:                                      ; preds = %sw.epilog.515
  %363 = load i64, i64* %io, align 8, !tbaa !25
  %inc517 = add i64 %363, 1
  store i64 %inc517, i64* %io, align 8, !tbaa !25
  br label %for.cond.399

for.end.518:                                      ; preds = %for.cond.399
  %364 = bitcast i64* %Ovl to i8*
  call void @llvm.lifetime.end(i64 8, i8* %364) #2
  call void @llvm.lifetime.end(i64 1, i8* %Ovb) #2
  %365 = bitcast double* %Y to i8*
  call void @llvm.lifetime.end(i64 8, i8* %365) #2
  %366 = bitcast double* %Ostep to i8*
  call void @llvm.lifetime.end(i64 8, i8* %366) #2
  %367 = bitcast double* %Istep to i8*
  call void @llvm.lifetime.end(i64 8, i8* %367) #2
  %368 = bitcast i64* %io to i8*
  call void @llvm.lifetime.end(i64 8, i8* %368) #2
  %369 = bitcast i64* %I to i8*
  call void @llvm.lifetime.end(i64 8, i8* %369) #2
  %370 = bitcast i32* %Nin to i8*
  call void @llvm.lifetime.end(i64 4, i8* %370) #2
  %371 = bitcast float** %In to i8*
  call void @llvm.lifetime.end(i64 8, i8* %371) #2
  %372 = bitcast double* %Omax to i8*
  call void @llvm.lifetime.end(i64 8, i8* %372) #2
  %373 = bitcast double* %Omin to i8*
  call void @llvm.lifetime.end(i64 8, i8* %373) #2
  %374 = bitcast i32* %Nout to i8*
  call void @llvm.lifetime.end(i64 4, i8* %374) #2
  %375 = bitcast i8** %Out to i8*
  call void @llvm.lifetime.end(i64 8, i8* %375) #2
  br label %if.end.835

if.else.519:                                      ; preds = %if.else.363
  %376 = bitcast i64* %j520 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %376) #2
  %377 = bitcast i64* %o to i8*
  call void @llvm.lifetime.start(i64 8, i8* %377) #2
  %378 = bitcast double* %xstep521 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %378) #2
  %379 = bitcast double* %x to i8*
  call void @llvm.lifetime.start(i64 8, i8* %379) #2
  %380 = bitcast double* %y to i8*
  call void @llvm.lifetime.start(i64 8, i8* %380) #2
  %381 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom522 = sext i32 %381 to i64
  %382 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc523 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %382, i32 0, i32 68
  %sizv524 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc523, i32 0, i32 8
  %arrayidx525 = getelementptr inbounds [4 x i32], [4 x i32]* %sizv524, i32 0, i64 %idxprom522
  %383 = load i32, i32* %arrayidx525, align 4, !tbaa !26
  %sub526 = sub i32 %383, 1
  %conv527 = uitofp i32 %sub526 to double
  %div528 = fdiv double 1.000000e+00, %conv527
  store double %div528, double* %xstep521, align 8, !tbaa !55
  store i64 0, i64* %o, align 8, !tbaa !25
  br label %for.cond.529

for.cond.529:                                     ; preds = %for.inc.832, %if.else.519
  %384 = load i64, i64* %o, align 8, !tbaa !25
  %385 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc530 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %385, i32 0, i32 68
  %bits531 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc530, i32 0, i32 1
  %386 = load i32, i32* %bits531, align 4, !tbaa !44
  %shl532 = shl i32 1, %386
  %conv533 = sext i32 %shl532 to i64
  %cmp534 = icmp ult i64 %384, %conv533
  br i1 %cmp534, label %for.body.536, label %for.end.834

for.body.536:                                     ; preds = %for.cond.529
  %387 = load i64, i64* %o, align 8, !tbaa !25
  %388 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom537 = sext i32 %388 to i64
  %389 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc538 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %389, i32 0, i32 68
  %code539 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc538, i32 0, i32 6
  %arrayidx540 = getelementptr inbounds [4 x i16*], [4 x i16*]* %code539, i32 0, i64 %idxprom537
  %390 = load i16*, i16** %arrayidx540, align 8, !tbaa !1
  %arrayidx541 = getelementptr inbounds i16, i16* %390, i64 %387
  %391 = load i16, i16* %arrayidx541, align 2, !tbaa !73
  %conv542 = uitofp i16 %391 to double
  store double %conv542, double* %x, align 8, !tbaa !55
  %392 = load double, double* %x, align 8, !tbaa !55
  %div543 = fdiv double %392, 6.553500e+04
  store double %div543, double* %x, align 8, !tbaa !55
  %393 = load double, double* %x, align 8, !tbaa !55
  %394 = load double, double* %xstep521, align 8, !tbaa !55
  %div544 = fdiv double %393, %394
  %conv545 = fptoui double %div544 to i64
  store i64 %conv545, i64* %j520, align 8, !tbaa !25
  %395 = load i64, i64* %j520, align 8, !tbaa !25
  %add546 = add i64 %395, 1
  %396 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom547 = sext i32 %396 to i64
  %397 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc548 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %397, i32 0, i32 68
  %sizv549 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc548, i32 0, i32 8
  %arrayidx550 = getelementptr inbounds [4 x i32], [4 x i32]* %sizv549, i32 0, i64 %idxprom547
  %398 = load i32, i32* %arrayidx550, align 4, !tbaa !26
  %conv551 = zext i32 %398 to i64
  %cmp552 = icmp ult i64 %add546, %conv551
  br i1 %cmp552, label %if.then.554, label %if.else.575

if.then.554:                                      ; preds = %for.body.536
  %399 = load i64, i64* %j520, align 8, !tbaa !25
  %400 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom555 = sext i32 %400 to i64
  %401 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc556 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %401, i32 0, i32 68
  %extv557 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc556, i32 0, i32 7
  %arrayidx558 = getelementptr inbounds [4 x float*], [4 x float*]* %extv557, i32 0, i64 %idxprom555
  %402 = load float*, float** %arrayidx558, align 8, !tbaa !1
  %arrayidx559 = getelementptr inbounds float, float* %402, i64 %399
  %403 = load float, float* %arrayidx559, align 4, !tbaa !37
  %conv560 = fpext float %403 to double
  store double %conv560, double* %y, align 8, !tbaa !55
  %404 = load i64, i64* %j520, align 8, !tbaa !25
  %add561 = add i64 %404, 1
  %405 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom562 = sext i32 %405 to i64
  %406 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc563 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %406, i32 0, i32 68
  %extv564 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc563, i32 0, i32 7
  %arrayidx565 = getelementptr inbounds [4 x float*], [4 x float*]* %extv564, i32 0, i64 %idxprom562
  %407 = load float*, float** %arrayidx565, align 8, !tbaa !1
  %arrayidx566 = getelementptr inbounds float, float* %407, i64 %add561
  %408 = load float, float* %arrayidx566, align 4, !tbaa !37
  %conv567 = fpext float %408 to double
  %409 = load double, double* %y, align 8, !tbaa !55
  %sub568 = fsub double %conv567, %409
  %410 = load double, double* %x, align 8, !tbaa !55
  %411 = load i64, i64* %j520, align 8, !tbaa !25
  %conv569 = uitofp i64 %411 to double
  %412 = load double, double* %xstep521, align 8, !tbaa !55
  %mul570 = fmul double %conv569, %412
  %sub571 = fsub double %410, %mul570
  %mul572 = fmul double %sub568, %sub571
  %413 = load double, double* %xstep521, align 8, !tbaa !55
  %div573 = fdiv double %mul572, %413
  %414 = load double, double* %y, align 8, !tbaa !55
  %add574 = fadd double %414, %div573
  store double %add574, double* %y, align 8, !tbaa !55
  br label %if.end.596

if.else.575:                                      ; preds = %for.body.536
  %415 = load i64, i64* %j520, align 8, !tbaa !25
  %416 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom576 = sext i32 %416 to i64
  %417 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc577 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %417, i32 0, i32 68
  %extv578 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc577, i32 0, i32 7
  %arrayidx579 = getelementptr inbounds [4 x float*], [4 x float*]* %extv578, i32 0, i64 %idxprom576
  %418 = load float*, float** %arrayidx579, align 8, !tbaa !1
  %arrayidx580 = getelementptr inbounds float, float* %418, i64 %415
  %419 = load float, float* %arrayidx580, align 4, !tbaa !37
  %conv581 = fpext float %419 to double
  store double %conv581, double* %y, align 8, !tbaa !55
  %420 = load double, double* %y, align 8, !tbaa !55
  %421 = load i64, i64* %j520, align 8, !tbaa !25
  %sub582 = sub i64 %421, 1
  %422 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom583 = sext i32 %422 to i64
  %423 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc584 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %423, i32 0, i32 68
  %extv585 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc584, i32 0, i32 7
  %arrayidx586 = getelementptr inbounds [4 x float*], [4 x float*]* %extv585, i32 0, i64 %idxprom583
  %424 = load float*, float** %arrayidx586, align 8, !tbaa !1
  %arrayidx587 = getelementptr inbounds float, float* %424, i64 %sub582
  %425 = load float, float* %arrayidx587, align 4, !tbaa !37
  %conv588 = fpext float %425 to double
  %sub589 = fsub double %420, %conv588
  %426 = load double, double* %x, align 8, !tbaa !55
  %427 = load i64, i64* %j520, align 8, !tbaa !25
  %conv590 = uitofp i64 %427 to double
  %428 = load double, double* %xstep521, align 8, !tbaa !55
  %mul591 = fmul double %conv590, %428
  %sub592 = fsub double %426, %mul591
  %mul593 = fmul double %sub589, %sub592
  %429 = load double, double* %xstep521, align 8, !tbaa !55
  %div594 = fdiv double %mul593, %429
  %430 = load double, double* %y, align 8, !tbaa !55
  %add595 = fadd double %430, %div594
  store double %add595, double* %y, align 8, !tbaa !55
  br label %if.end.596

if.end.596:                                       ; preds = %if.else.575, %if.then.554
  %431 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc597 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %431, i32 0, i32 68
  %dither598 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc597, i32 0, i32 2
  %432 = load %struct.stc_dither_s*, %struct.stc_dither_s** %dither598, align 8, !tbaa !41
  %minmax599 = getelementptr inbounds %struct.stc_dither_s, %struct.stc_dither_s* %432, i32 0, i32 4
  %arrayidx600 = getelementptr inbounds [2 x double], [2 x double]* %minmax599, i32 0, i64 0
  %433 = load double, double* %arrayidx600, align 8, !tbaa !55
  %434 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc601 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %434, i32 0, i32 68
  %dither602 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc601, i32 0, i32 2
  %435 = load %struct.stc_dither_s*, %struct.stc_dither_s** %dither602, align 8, !tbaa !41
  %minmax603 = getelementptr inbounds %struct.stc_dither_s, %struct.stc_dither_s* %435, i32 0, i32 4
  %arrayidx604 = getelementptr inbounds [2 x double], [2 x double]* %minmax603, i32 0, i64 1
  %436 = load double, double* %arrayidx604, align 8, !tbaa !55
  %437 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc605 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %437, i32 0, i32 68
  %dither606 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc605, i32 0, i32 2
  %438 = load %struct.stc_dither_s*, %struct.stc_dither_s** %dither606, align 8, !tbaa !41
  %minmax607 = getelementptr inbounds %struct.stc_dither_s, %struct.stc_dither_s* %438, i32 0, i32 4
  %arrayidx608 = getelementptr inbounds [2 x double], [2 x double]* %minmax607, i32 0, i64 0
  %439 = load double, double* %arrayidx608, align 8, !tbaa !55
  %sub609 = fsub double %436, %439
  %440 = load double, double* %y, align 8, !tbaa !55
  %mul610 = fmul double %sub609, %440
  %add611 = fadd double %433, %mul610
  store double %add611, double* %y, align 8, !tbaa !55
  %441 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc612 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %441, i32 0, i32 68
  %dither613 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc612, i32 0, i32 2
  %442 = load %struct.stc_dither_s*, %struct.stc_dither_s** %dither613, align 8, !tbaa !41
  %flags614 = getelementptr inbounds %struct.stc_dither_s, %struct.stc_dither_s* %442, i32 0, i32 2
  %443 = load i32, i32* %flags614, align 4, !tbaa !42
  %and615 = and i32 %443, 24
  switch i32 %and615, label %sw.default.762 [
    i32 8, label %sw.bb.616
    i32 16, label %sw.bb.693
  ]

sw.bb.616:                                        ; preds = %if.end.596
  %444 = load double, double* %y, align 8, !tbaa !55
  %conv617 = fptoui double %444 to i8
  %445 = load i64, i64* %o, align 8, !tbaa !25
  %446 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom618 = sext i32 %446 to i64
  %447 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc619 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %447, i32 0, i32 68
  %vals620 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc619, i32 0, i32 9
  %arrayidx621 = getelementptr inbounds [4 x i8*], [4 x i8*]* %vals620, i32 0, i64 %idxprom618
  %448 = load i8*, i8** %arrayidx621, align 8, !tbaa !1
  %arrayidx622 = getelementptr inbounds i8, i8* %448, i64 %445
  store i8 %conv617, i8* %arrayidx622, align 1, !tbaa !62
  %449 = load double, double* %y, align 8, !tbaa !55
  %450 = load i64, i64* %o, align 8, !tbaa !25
  %451 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom623 = sext i32 %451 to i64
  %452 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc624 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %452, i32 0, i32 68
  %vals625 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc624, i32 0, i32 9
  %arrayidx626 = getelementptr inbounds [4 x i8*], [4 x i8*]* %vals625, i32 0, i64 %idxprom623
  %453 = load i8*, i8** %arrayidx626, align 8, !tbaa !1
  %arrayidx627 = getelementptr inbounds i8, i8* %453, i64 %450
  %454 = load i8, i8* %arrayidx627, align 1, !tbaa !62
  %conv628 = zext i8 %454 to i32
  %conv629 = sitofp i32 %conv628 to double
  %sub630 = fsub double %449, %conv629
  %cmp631 = fcmp oge double %sub630, 5.000000e-01
  br i1 %cmp631, label %land.lhs.true.633, label %if.end.657

land.lhs.true.633:                                ; preds = %sw.bb.616
  %455 = load i64, i64* %o, align 8, !tbaa !25
  %456 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom634 = sext i32 %456 to i64
  %457 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc635 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %457, i32 0, i32 68
  %vals636 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc635, i32 0, i32 9
  %arrayidx637 = getelementptr inbounds [4 x i8*], [4 x i8*]* %vals636, i32 0, i64 %idxprom634
  %458 = load i8*, i8** %arrayidx637, align 8, !tbaa !1
  %arrayidx638 = getelementptr inbounds i8, i8* %458, i64 %455
  %459 = load i8, i8* %arrayidx638, align 1, !tbaa !62
  %conv639 = zext i8 %459 to i32
  %add640 = add nsw i32 1, %conv639
  %conv641 = sitofp i32 %add640 to double
  %460 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc642 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %460, i32 0, i32 68
  %dither643 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc642, i32 0, i32 2
  %461 = load %struct.stc_dither_s*, %struct.stc_dither_s** %dither643, align 8, !tbaa !41
  %minmax644 = getelementptr inbounds %struct.stc_dither_s, %struct.stc_dither_s* %461, i32 0, i32 4
  %arrayidx645 = getelementptr inbounds [2 x double], [2 x double]* %minmax644, i32 0, i64 1
  %462 = load double, double* %arrayidx645, align 8, !tbaa !55
  %cmp646 = fcmp ole double %conv641, %462
  br i1 %cmp646, label %if.then.648, label %if.end.657

if.then.648:                                      ; preds = %land.lhs.true.633
  %463 = load i64, i64* %o, align 8, !tbaa !25
  %464 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom649 = sext i32 %464 to i64
  %465 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc650 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %465, i32 0, i32 68
  %vals651 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc650, i32 0, i32 9
  %arrayidx652 = getelementptr inbounds [4 x i8*], [4 x i8*]* %vals651, i32 0, i64 %idxprom649
  %466 = load i8*, i8** %arrayidx652, align 8, !tbaa !1
  %arrayidx653 = getelementptr inbounds i8, i8* %466, i64 %463
  %467 = load i8, i8* %arrayidx653, align 1, !tbaa !62
  %conv654 = zext i8 %467 to i32
  %add655 = add nsw i32 %conv654, 1
  %conv656 = trunc i32 %add655 to i8
  store i8 %conv656, i8* %arrayidx653, align 1, !tbaa !62
  br label %if.end.657

if.end.657:                                       ; preds = %if.then.648, %land.lhs.true.633, %sw.bb.616
  %468 = load i64, i64* %o, align 8, !tbaa !25
  %469 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom658 = sext i32 %469 to i64
  %470 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc659 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %470, i32 0, i32 68
  %vals660 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc659, i32 0, i32 9
  %arrayidx661 = getelementptr inbounds [4 x i8*], [4 x i8*]* %vals660, i32 0, i64 %idxprom658
  %471 = load i8*, i8** %arrayidx661, align 8, !tbaa !1
  %arrayidx662 = getelementptr inbounds i8, i8* %471, i64 %468
  %472 = load i8, i8* %arrayidx662, align 1, !tbaa !62
  %conv663 = zext i8 %472 to i32
  %conv664 = sitofp i32 %conv663 to double
  %473 = load double, double* %y, align 8, !tbaa !55
  %sub665 = fsub double %conv664, %473
  %cmp666 = fcmp oge double %sub665, 5.000000e-01
  br i1 %cmp666, label %land.lhs.true.668, label %if.end.692

land.lhs.true.668:                                ; preds = %if.end.657
  %474 = load i64, i64* %o, align 8, !tbaa !25
  %475 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom669 = sext i32 %475 to i64
  %476 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc670 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %476, i32 0, i32 68
  %vals671 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc670, i32 0, i32 9
  %arrayidx672 = getelementptr inbounds [4 x i8*], [4 x i8*]* %vals671, i32 0, i64 %idxprom669
  %477 = load i8*, i8** %arrayidx672, align 8, !tbaa !1
  %arrayidx673 = getelementptr inbounds i8, i8* %477, i64 %474
  %478 = load i8, i8* %arrayidx673, align 1, !tbaa !62
  %conv674 = zext i8 %478 to i32
  %sub675 = sub nsw i32 %conv674, 1
  %conv676 = sitofp i32 %sub675 to double
  %479 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc677 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %479, i32 0, i32 68
  %dither678 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc677, i32 0, i32 2
  %480 = load %struct.stc_dither_s*, %struct.stc_dither_s** %dither678, align 8, !tbaa !41
  %minmax679 = getelementptr inbounds %struct.stc_dither_s, %struct.stc_dither_s* %480, i32 0, i32 4
  %arrayidx680 = getelementptr inbounds [2 x double], [2 x double]* %minmax679, i32 0, i64 0
  %481 = load double, double* %arrayidx680, align 8, !tbaa !55
  %cmp681 = fcmp oge double %conv676, %481
  br i1 %cmp681, label %if.then.683, label %if.end.692

if.then.683:                                      ; preds = %land.lhs.true.668
  %482 = load i64, i64* %o, align 8, !tbaa !25
  %483 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom684 = sext i32 %483 to i64
  %484 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc685 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %484, i32 0, i32 68
  %vals686 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc685, i32 0, i32 9
  %arrayidx687 = getelementptr inbounds [4 x i8*], [4 x i8*]* %vals686, i32 0, i64 %idxprom684
  %485 = load i8*, i8** %arrayidx687, align 8, !tbaa !1
  %arrayidx688 = getelementptr inbounds i8, i8* %485, i64 %482
  %486 = load i8, i8* %arrayidx688, align 1, !tbaa !62
  %conv689 = zext i8 %486 to i32
  %sub690 = sub nsw i32 %conv689, 1
  %conv691 = trunc i32 %sub690 to i8
  store i8 %conv691, i8* %arrayidx688, align 1, !tbaa !62
  br label %if.end.692

if.end.692:                                       ; preds = %if.then.683, %land.lhs.true.668, %if.end.657
  br label %sw.epilog.831

sw.bb.693:                                        ; preds = %if.end.596
  %487 = load double, double* %y, align 8, !tbaa !55
  %conv694 = fptosi double %487 to i64
  %488 = load i64, i64* %o, align 8, !tbaa !25
  %489 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom695 = sext i32 %489 to i64
  %490 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc696 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %490, i32 0, i32 68
  %vals697 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc696, i32 0, i32 9
  %arrayidx698 = getelementptr inbounds [4 x i8*], [4 x i8*]* %vals697, i32 0, i64 %idxprom695
  %491 = load i8*, i8** %arrayidx698, align 8, !tbaa !1
  %492 = bitcast i8* %491 to i64*
  %arrayidx699 = getelementptr inbounds i64, i64* %492, i64 %488
  store i64 %conv694, i64* %arrayidx699, align 8, !tbaa !25
  %493 = load double, double* %y, align 8, !tbaa !55
  %494 = load i64, i64* %o, align 8, !tbaa !25
  %495 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom700 = sext i32 %495 to i64
  %496 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc701 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %496, i32 0, i32 68
  %vals702 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc701, i32 0, i32 9
  %arrayidx703 = getelementptr inbounds [4 x i8*], [4 x i8*]* %vals702, i32 0, i64 %idxprom700
  %497 = load i8*, i8** %arrayidx703, align 8, !tbaa !1
  %498 = bitcast i8* %497 to i64*
  %arrayidx704 = getelementptr inbounds i64, i64* %498, i64 %494
  %499 = load i64, i64* %arrayidx704, align 8, !tbaa !25
  %conv705 = sitofp i64 %499 to double
  %sub706 = fsub double %493, %conv705
  %cmp707 = fcmp oge double %sub706, 5.000000e-01
  br i1 %cmp707, label %land.lhs.true.709, label %if.end.730

land.lhs.true.709:                                ; preds = %sw.bb.693
  %500 = load i64, i64* %o, align 8, !tbaa !25
  %501 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom710 = sext i32 %501 to i64
  %502 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc711 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %502, i32 0, i32 68
  %vals712 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc711, i32 0, i32 9
  %arrayidx713 = getelementptr inbounds [4 x i8*], [4 x i8*]* %vals712, i32 0, i64 %idxprom710
  %503 = load i8*, i8** %arrayidx713, align 8, !tbaa !1
  %504 = bitcast i8* %503 to i64*
  %arrayidx714 = getelementptr inbounds i64, i64* %504, i64 %500
  %505 = load i64, i64* %arrayidx714, align 8, !tbaa !25
  %add715 = add nsw i64 1, %505
  %conv716 = sitofp i64 %add715 to double
  %506 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc717 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %506, i32 0, i32 68
  %dither718 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc717, i32 0, i32 2
  %507 = load %struct.stc_dither_s*, %struct.stc_dither_s** %dither718, align 8, !tbaa !41
  %minmax719 = getelementptr inbounds %struct.stc_dither_s, %struct.stc_dither_s* %507, i32 0, i32 4
  %arrayidx720 = getelementptr inbounds [2 x double], [2 x double]* %minmax719, i32 0, i64 1
  %508 = load double, double* %arrayidx720, align 8, !tbaa !55
  %cmp721 = fcmp ole double %conv716, %508
  br i1 %cmp721, label %if.then.723, label %if.end.730

if.then.723:                                      ; preds = %land.lhs.true.709
  %509 = load i64, i64* %o, align 8, !tbaa !25
  %510 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom724 = sext i32 %510 to i64
  %511 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc725 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %511, i32 0, i32 68
  %vals726 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc725, i32 0, i32 9
  %arrayidx727 = getelementptr inbounds [4 x i8*], [4 x i8*]* %vals726, i32 0, i64 %idxprom724
  %512 = load i8*, i8** %arrayidx727, align 8, !tbaa !1
  %513 = bitcast i8* %512 to i64*
  %arrayidx728 = getelementptr inbounds i64, i64* %513, i64 %509
  %514 = load i64, i64* %arrayidx728, align 8, !tbaa !25
  %add729 = add nsw i64 %514, 1
  store i64 %add729, i64* %arrayidx728, align 8, !tbaa !25
  br label %if.end.730

if.end.730:                                       ; preds = %if.then.723, %land.lhs.true.709, %sw.bb.693
  %515 = load i64, i64* %o, align 8, !tbaa !25
  %516 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom731 = sext i32 %516 to i64
  %517 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc732 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %517, i32 0, i32 68
  %vals733 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc732, i32 0, i32 9
  %arrayidx734 = getelementptr inbounds [4 x i8*], [4 x i8*]* %vals733, i32 0, i64 %idxprom731
  %518 = load i8*, i8** %arrayidx734, align 8, !tbaa !1
  %519 = bitcast i8* %518 to i64*
  %arrayidx735 = getelementptr inbounds i64, i64* %519, i64 %515
  %520 = load i64, i64* %arrayidx735, align 8, !tbaa !25
  %conv736 = sitofp i64 %520 to double
  %521 = load double, double* %y, align 8, !tbaa !55
  %sub737 = fsub double %conv736, %521
  %cmp738 = fcmp oge double %sub737, 5.000000e-01
  br i1 %cmp738, label %land.lhs.true.740, label %if.end.761

land.lhs.true.740:                                ; preds = %if.end.730
  %522 = load i64, i64* %o, align 8, !tbaa !25
  %523 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom741 = sext i32 %523 to i64
  %524 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc742 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %524, i32 0, i32 68
  %vals743 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc742, i32 0, i32 9
  %arrayidx744 = getelementptr inbounds [4 x i8*], [4 x i8*]* %vals743, i32 0, i64 %idxprom741
  %525 = load i8*, i8** %arrayidx744, align 8, !tbaa !1
  %526 = bitcast i8* %525 to i64*
  %arrayidx745 = getelementptr inbounds i64, i64* %526, i64 %522
  %527 = load i64, i64* %arrayidx745, align 8, !tbaa !25
  %sub746 = sub nsw i64 %527, 1
  %conv747 = sitofp i64 %sub746 to double
  %528 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc748 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %528, i32 0, i32 68
  %dither749 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc748, i32 0, i32 2
  %529 = load %struct.stc_dither_s*, %struct.stc_dither_s** %dither749, align 8, !tbaa !41
  %minmax750 = getelementptr inbounds %struct.stc_dither_s, %struct.stc_dither_s* %529, i32 0, i32 4
  %arrayidx751 = getelementptr inbounds [2 x double], [2 x double]* %minmax750, i32 0, i64 0
  %530 = load double, double* %arrayidx751, align 8, !tbaa !55
  %cmp752 = fcmp oge double %conv747, %530
  br i1 %cmp752, label %if.then.754, label %if.end.761

if.then.754:                                      ; preds = %land.lhs.true.740
  %531 = load i64, i64* %o, align 8, !tbaa !25
  %532 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom755 = sext i32 %532 to i64
  %533 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc756 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %533, i32 0, i32 68
  %vals757 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc756, i32 0, i32 9
  %arrayidx758 = getelementptr inbounds [4 x i8*], [4 x i8*]* %vals757, i32 0, i64 %idxprom755
  %534 = load i8*, i8** %arrayidx758, align 8, !tbaa !1
  %535 = bitcast i8* %534 to i64*
  %arrayidx759 = getelementptr inbounds i64, i64* %535, i64 %531
  %536 = load i64, i64* %arrayidx759, align 8, !tbaa !25
  %sub760 = sub nsw i64 %536, 1
  store i64 %sub760, i64* %arrayidx759, align 8, !tbaa !25
  br label %if.end.761

if.end.761:                                       ; preds = %if.then.754, %land.lhs.true.740, %if.end.730
  br label %sw.epilog.831

sw.default.762:                                   ; preds = %if.end.596
  %537 = load double, double* %y, align 8, !tbaa !55
  %conv763 = fptrunc double %537 to float
  %538 = load i64, i64* %o, align 8, !tbaa !25
  %539 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom764 = sext i32 %539 to i64
  %540 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc765 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %540, i32 0, i32 68
  %vals766 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc765, i32 0, i32 9
  %arrayidx767 = getelementptr inbounds [4 x i8*], [4 x i8*]* %vals766, i32 0, i64 %idxprom764
  %541 = load i8*, i8** %arrayidx767, align 8, !tbaa !1
  %542 = bitcast i8* %541 to float*
  %arrayidx768 = getelementptr inbounds float, float* %542, i64 %538
  store float %conv763, float* %arrayidx768, align 4, !tbaa !37
  %543 = load double, double* %y, align 8, !tbaa !55
  %544 = load i64, i64* %o, align 8, !tbaa !25
  %545 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom769 = sext i32 %545 to i64
  %546 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc770 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %546, i32 0, i32 68
  %vals771 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc770, i32 0, i32 9
  %arrayidx772 = getelementptr inbounds [4 x i8*], [4 x i8*]* %vals771, i32 0, i64 %idxprom769
  %547 = load i8*, i8** %arrayidx772, align 8, !tbaa !1
  %548 = bitcast i8* %547 to float*
  %arrayidx773 = getelementptr inbounds float, float* %548, i64 %544
  %549 = load float, float* %arrayidx773, align 4, !tbaa !37
  %conv774 = fpext float %549 to double
  %sub775 = fsub double %543, %conv774
  %cmp776 = fcmp oge double %sub775, 5.000000e-01
  br i1 %cmp776, label %land.lhs.true.778, label %if.end.799

land.lhs.true.778:                                ; preds = %sw.default.762
  %550 = load i64, i64* %o, align 8, !tbaa !25
  %551 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom779 = sext i32 %551 to i64
  %552 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc780 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %552, i32 0, i32 68
  %vals781 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc780, i32 0, i32 9
  %arrayidx782 = getelementptr inbounds [4 x i8*], [4 x i8*]* %vals781, i32 0, i64 %idxprom779
  %553 = load i8*, i8** %arrayidx782, align 8, !tbaa !1
  %554 = bitcast i8* %553 to float*
  %arrayidx783 = getelementptr inbounds float, float* %554, i64 %550
  %555 = load float, float* %arrayidx783, align 4, !tbaa !37
  %add784 = fadd float 1.000000e+00, %555
  %conv785 = fpext float %add784 to double
  %556 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc786 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %556, i32 0, i32 68
  %dither787 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc786, i32 0, i32 2
  %557 = load %struct.stc_dither_s*, %struct.stc_dither_s** %dither787, align 8, !tbaa !41
  %minmax788 = getelementptr inbounds %struct.stc_dither_s, %struct.stc_dither_s* %557, i32 0, i32 4
  %arrayidx789 = getelementptr inbounds [2 x double], [2 x double]* %minmax788, i32 0, i64 1
  %558 = load double, double* %arrayidx789, align 8, !tbaa !55
  %cmp790 = fcmp ole double %conv785, %558
  br i1 %cmp790, label %if.then.792, label %if.end.799

if.then.792:                                      ; preds = %land.lhs.true.778
  %559 = load i64, i64* %o, align 8, !tbaa !25
  %560 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom793 = sext i32 %560 to i64
  %561 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc794 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %561, i32 0, i32 68
  %vals795 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc794, i32 0, i32 9
  %arrayidx796 = getelementptr inbounds [4 x i8*], [4 x i8*]* %vals795, i32 0, i64 %idxprom793
  %562 = load i8*, i8** %arrayidx796, align 8, !tbaa !1
  %563 = bitcast i8* %562 to float*
  %arrayidx797 = getelementptr inbounds float, float* %563, i64 %559
  %564 = load float, float* %arrayidx797, align 4, !tbaa !37
  %add798 = fadd float %564, 1.000000e+00
  store float %add798, float* %arrayidx797, align 4, !tbaa !37
  br label %if.end.799

if.end.799:                                       ; preds = %if.then.792, %land.lhs.true.778, %sw.default.762
  %565 = load i64, i64* %o, align 8, !tbaa !25
  %566 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom800 = sext i32 %566 to i64
  %567 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc801 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %567, i32 0, i32 68
  %vals802 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc801, i32 0, i32 9
  %arrayidx803 = getelementptr inbounds [4 x i8*], [4 x i8*]* %vals802, i32 0, i64 %idxprom800
  %568 = load i8*, i8** %arrayidx803, align 8, !tbaa !1
  %569 = bitcast i8* %568 to float*
  %arrayidx804 = getelementptr inbounds float, float* %569, i64 %565
  %570 = load float, float* %arrayidx804, align 4, !tbaa !37
  %conv805 = fpext float %570 to double
  %571 = load double, double* %y, align 8, !tbaa !55
  %sub806 = fsub double %conv805, %571
  %cmp807 = fcmp oge double %sub806, 5.000000e-01
  br i1 %cmp807, label %land.lhs.true.809, label %if.end.830

land.lhs.true.809:                                ; preds = %if.end.799
  %572 = load i64, i64* %o, align 8, !tbaa !25
  %573 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom810 = sext i32 %573 to i64
  %574 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc811 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %574, i32 0, i32 68
  %vals812 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc811, i32 0, i32 9
  %arrayidx813 = getelementptr inbounds [4 x i8*], [4 x i8*]* %vals812, i32 0, i64 %idxprom810
  %575 = load i8*, i8** %arrayidx813, align 8, !tbaa !1
  %576 = bitcast i8* %575 to float*
  %arrayidx814 = getelementptr inbounds float, float* %576, i64 %572
  %577 = load float, float* %arrayidx814, align 4, !tbaa !37
  %sub815 = fsub float %577, 1.000000e+00
  %conv816 = fpext float %sub815 to double
  %578 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc817 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %578, i32 0, i32 68
  %dither818 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc817, i32 0, i32 2
  %579 = load %struct.stc_dither_s*, %struct.stc_dither_s** %dither818, align 8, !tbaa !41
  %minmax819 = getelementptr inbounds %struct.stc_dither_s, %struct.stc_dither_s* %579, i32 0, i32 4
  %arrayidx820 = getelementptr inbounds [2 x double], [2 x double]* %minmax819, i32 0, i64 0
  %580 = load double, double* %arrayidx820, align 8, !tbaa !55
  %cmp821 = fcmp oge double %conv816, %580
  br i1 %cmp821, label %if.then.823, label %if.end.830

if.then.823:                                      ; preds = %land.lhs.true.809
  %581 = load i64, i64* %o, align 8, !tbaa !25
  %582 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom824 = sext i32 %582 to i64
  %583 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc825 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %583, i32 0, i32 68
  %vals826 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc825, i32 0, i32 9
  %arrayidx827 = getelementptr inbounds [4 x i8*], [4 x i8*]* %vals826, i32 0, i64 %idxprom824
  %584 = load i8*, i8** %arrayidx827, align 8, !tbaa !1
  %585 = bitcast i8* %584 to float*
  %arrayidx828 = getelementptr inbounds float, float* %585, i64 %581
  %586 = load float, float* %arrayidx828, align 4, !tbaa !37
  %sub829 = fsub float %586, 1.000000e+00
  store float %sub829, float* %arrayidx828, align 4, !tbaa !37
  br label %if.end.830

if.end.830:                                       ; preds = %if.then.823, %land.lhs.true.809, %if.end.799
  br label %sw.epilog.831

sw.epilog.831:                                    ; preds = %if.end.830, %if.end.761, %if.end.692
  br label %for.inc.832

for.inc.832:                                      ; preds = %sw.epilog.831
  %587 = load i64, i64* %o, align 8, !tbaa !25
  %inc833 = add i64 %587, 1
  store i64 %inc833, i64* %o, align 8, !tbaa !25
  br label %for.cond.529

for.end.834:                                      ; preds = %for.cond.529
  %588 = bitcast double* %y to i8*
  call void @llvm.lifetime.end(i64 8, i8* %588) #2
  %589 = bitcast double* %x to i8*
  call void @llvm.lifetime.end(i64 8, i8* %589) #2
  %590 = bitcast double* %xstep521 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %590) #2
  %591 = bitcast i64* %o to i8*
  call void @llvm.lifetime.end(i64 8, i8* %591) #2
  %592 = bitcast i64* %j520 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %592) #2
  br label %if.end.835

if.end.835:                                       ; preds = %for.end.834, %for.end.518
  br label %if.end.836

if.end.836:                                       ; preds = %if.end.835, %if.then.362
  br label %if.end.846

if.else.837:                                      ; preds = %for.end.337
  %593 = load i32, i32* %j, align 4, !tbaa !26
  %idxprom838 = sext i32 %593 to i64
  %594 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc839 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %594, i32 0, i32 68
  %vals840 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc839, i32 0, i32 9
  %arrayidx841 = getelementptr inbounds [4 x i8*], [4 x i8*]* %vals840, i32 0, i64 %idxprom838
  %595 = load i8*, i8** %arrayidx841, align 8, !tbaa !1
  %596 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom842 = sext i32 %596 to i64
  %597 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc843 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %597, i32 0, i32 68
  %vals844 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc843, i32 0, i32 9
  %arrayidx845 = getelementptr inbounds [4 x i8*], [4 x i8*]* %vals844, i32 0, i64 %idxprom842
  store i8* %595, i8** %arrayidx845, align 8, !tbaa !1
  br label %if.end.846

if.end.846:                                       ; preds = %if.else.837, %if.end.836
  br label %if.end.847

if.end.847:                                       ; preds = %if.end.846, %land.lhs.true.301, %if.end.295
  br label %for.inc.848

for.inc.848:                                      ; preds = %if.end.847
  %598 = load i32, i32* %i, align 4, !tbaa !26
  %inc849 = add nsw i32 %598, 1
  store i32 %inc849, i32* %i, align 4, !tbaa !26
  br label %for.cond.50

for.end.850:                                      ; preds = %for.cond.50
  %599 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc851 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %599, i32 0, i32 68
  %dir = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc851, i32 0, i32 38
  store i32 1, i32* %dir, align 4, !tbaa !74
  %600 = load i32, i32* %code, align 4, !tbaa !26
  %cmp852 = icmp eq i32 %600, 0
  br i1 %cmp852, label %if.then.854, label %if.else.1134

if.then.854:                                      ; preds = %for.end.850
  %601 = bitcast [4 x i16]* %cv to i8*
  call void @llvm.lifetime.start(i64 8, i8* %601) #2
  %602 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc855 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %602, i32 0, i32 68
  %flags856 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc855, i32 0, i32 0
  %603 = load i64, i64* %flags856, align 8, !tbaa !5
  %or = or i64 %603, 512
  store i64 %or, i64* %flags856, align 8, !tbaa !5
  %604 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %color_info857 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %604, i32 0, i32 11
  %num_components858 = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info857, i32 0, i32 1
  %605 = load i32, i32* %num_components858, align 4, !tbaa !40
  switch i32 %605, label %sw.default.894 [
    i32 1, label %sw.bb.859
    i32 3, label %sw.bb.872
  ]

sw.bb.859:                                        ; preds = %if.then.854
  %606 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %color_info860 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %606, i32 0, i32 11
  %polarity = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info860, i32 0, i32 2
  store i32 1, i32* %polarity, align 4, !tbaa !75
  %607 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %procs861 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %607, i32 0, i32 42
  %map_rgb_color = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs861, i32 0, i32 5
  store i64 (%struct.gx_device_s*, i16*)* @stc_map_gray_color, i64 (%struct.gx_device_s*, i16*)** %map_rgb_color, align 8, !tbaa !76
  %608 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %procs862 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %608, i32 0, i32 42
  %map_cmyk_color = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs862, i32 0, i32 15
  store i64 (%struct.gx_device_s*, i16*)* @gx_default_map_cmyk_color, i64 (%struct.gx_device_s*, i16*)** %map_cmyk_color, align 8, !tbaa !77
  %609 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %procs863 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %609, i32 0, i32 42
  %map_color_rgb = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs863, i32 0, i32 6
  store i32 (%struct.gx_device_s*, i64, i16*)* @stc_map_color_gray, i32 (%struct.gx_device_s*, i64, i16*)** %map_color_rgb, align 8, !tbaa !78
  %610 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %procs864 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %610, i32 0, i32 42
  %encode_color = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs864, i32 0, i32 51
  store i64 (%struct.gx_device_s*, i16*)* @stc_map_gray_color, i64 (%struct.gx_device_s*, i16*)** %encode_color, align 8, !tbaa !79
  %611 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %procs865 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %611, i32 0, i32 42
  %decode_color = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs865, i32 0, i32 52
  store i32 (%struct.gx_device_s*, i64, i16*)* @stc_map_color_gray, i32 (%struct.gx_device_s*, i64, i16*)** %decode_color, align 8, !tbaa !80
  %612 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %procs866 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %612, i32 0, i32 42
  %get_color_mapping_procs = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs866, i32 0, i32 49
  store %struct.gx_cm_color_map_procs_s* (%struct.gx_device_s*)* @gx_default_DevGray_get_color_mapping_procs, %struct.gx_cm_color_map_procs_s* (%struct.gx_device_s*)** %get_color_mapping_procs, align 8, !tbaa !81
  %613 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %procs867 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %613, i32 0, i32 42
  %get_color_comp_index = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs867, i32 0, i32 50
  store i32 (%struct.gx_device_s*, i8*, i32, i32)* @gx_default_DevGray_get_color_comp_index, i32 (%struct.gx_device_s*, i8*, i32, i32)** %get_color_comp_index, align 8, !tbaa !82
  %arrayidx868 = getelementptr inbounds [4 x i16], [4 x i16]* %cv, i32 0, i64 2
  store i16 -1, i16* %arrayidx868, align 2, !tbaa !73
  %arrayidx869 = getelementptr inbounds [4 x i16], [4 x i16]* %cv, i32 0, i64 1
  store i16 -1, i16* %arrayidx869, align 2, !tbaa !73
  %arrayidx870 = getelementptr inbounds [4 x i16], [4 x i16]* %cv, i32 0, i64 0
  store i16 -1, i16* %arrayidx870, align 2, !tbaa !73
  %614 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %615 = bitcast %struct.stcolor_device_s* %614 to %struct.gx_device_s*
  %arraydecay = getelementptr inbounds [4 x i16], [4 x i16]* %cv, i32 0, i32 0
  %call871 = call i64 @stc_map_gray_color(%struct.gx_device_s* %615, i16* %arraydecay) #5
  store i64 %call871, i64* %white, align 8, !tbaa !25
  br label %sw.epilog.937

sw.bb.872:                                        ; preds = %if.then.854
  %616 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %color_info873 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %616, i32 0, i32 11
  %polarity874 = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info873, i32 0, i32 2
  store i32 1, i32* %polarity874, align 4, !tbaa !75
  %617 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %procs875 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %617, i32 0, i32 42
  %map_rgb_color876 = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs875, i32 0, i32 5
  store i64 (%struct.gx_device_s*, i16*)* @stc_map_rgb_color, i64 (%struct.gx_device_s*, i16*)** %map_rgb_color876, align 8, !tbaa !76
  %618 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %procs877 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %618, i32 0, i32 42
  %map_cmyk_color878 = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs877, i32 0, i32 15
  store i64 (%struct.gx_device_s*, i16*)* @gx_default_map_cmyk_color, i64 (%struct.gx_device_s*, i16*)** %map_cmyk_color878, align 8, !tbaa !77
  %619 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %procs879 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %619, i32 0, i32 42
  %map_color_rgb880 = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs879, i32 0, i32 6
  store i32 (%struct.gx_device_s*, i64, i16*)* @stc_map_color_rgb, i32 (%struct.gx_device_s*, i64, i16*)** %map_color_rgb880, align 8, !tbaa !78
  %620 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %procs881 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %620, i32 0, i32 42
  %encode_color882 = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs881, i32 0, i32 51
  store i64 (%struct.gx_device_s*, i16*)* @stc_map_rgb_color, i64 (%struct.gx_device_s*, i16*)** %encode_color882, align 8, !tbaa !79
  %621 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %procs883 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %621, i32 0, i32 42
  %decode_color884 = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs883, i32 0, i32 52
  store i32 (%struct.gx_device_s*, i64, i16*)* @stc_map_color_rgb, i32 (%struct.gx_device_s*, i64, i16*)** %decode_color884, align 8, !tbaa !80
  %622 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %procs885 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %622, i32 0, i32 42
  %get_color_mapping_procs886 = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs885, i32 0, i32 49
  store %struct.gx_cm_color_map_procs_s* (%struct.gx_device_s*)* @gx_default_DevRGB_get_color_mapping_procs, %struct.gx_cm_color_map_procs_s* (%struct.gx_device_s*)** %get_color_mapping_procs886, align 8, !tbaa !81
  %623 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %procs887 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %623, i32 0, i32 42
  %get_color_comp_index888 = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs887, i32 0, i32 50
  store i32 (%struct.gx_device_s*, i8*, i32, i32)* @gx_default_DevRGB_get_color_comp_index, i32 (%struct.gx_device_s*, i8*, i32, i32)** %get_color_comp_index888, align 8, !tbaa !82
  %arrayidx889 = getelementptr inbounds [4 x i16], [4 x i16]* %cv, i32 0, i64 2
  store i16 -1, i16* %arrayidx889, align 2, !tbaa !73
  %arrayidx890 = getelementptr inbounds [4 x i16], [4 x i16]* %cv, i32 0, i64 1
  store i16 -1, i16* %arrayidx890, align 2, !tbaa !73
  %arrayidx891 = getelementptr inbounds [4 x i16], [4 x i16]* %cv, i32 0, i64 0
  store i16 -1, i16* %arrayidx891, align 2, !tbaa !73
  %624 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %625 = bitcast %struct.stcolor_device_s* %624 to %struct.gx_device_s*
  %arraydecay892 = getelementptr inbounds [4 x i16], [4 x i16]* %cv, i32 0, i32 0
  %call893 = call i64 @stc_map_rgb_color(%struct.gx_device_s* %625, i16* %arraydecay892) #5
  store i64 %call893, i64* %white, align 8, !tbaa !25
  br label %sw.epilog.937

sw.default.894:                                   ; preds = %if.then.854
  %626 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %color_info895 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %626, i32 0, i32 11
  %polarity896 = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info895, i32 0, i32 2
  store i32 0, i32* %polarity896, align 4, !tbaa !75
  %627 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %procs897 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %627, i32 0, i32 42
  %map_rgb_color898 = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs897, i32 0, i32 5
  store i64 (%struct.gx_device_s*, i16*)* @gx_default_w_b_map_rgb_color, i64 (%struct.gx_device_s*, i16*)** %map_rgb_color898, align 8, !tbaa !76
  %628 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %procs899 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %628, i32 0, i32 42
  %get_color_mapping_procs900 = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs899, i32 0, i32 49
  store %struct.gx_cm_color_map_procs_s* (%struct.gx_device_s*)* @gx_default_DevCMYK_get_color_mapping_procs, %struct.gx_cm_color_map_procs_s* (%struct.gx_device_s*)** %get_color_mapping_procs900, align 8, !tbaa !81
  %629 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %procs901 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %629, i32 0, i32 42
  %get_color_comp_index902 = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs901, i32 0, i32 50
  store i32 (%struct.gx_device_s*, i8*, i32, i32)* @gx_default_DevCMYK_get_color_comp_index, i32 (%struct.gx_device_s*, i8*, i32, i32)** %get_color_comp_index902, align 8, !tbaa !82
  %630 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc903 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %630, i32 0, i32 68
  %flags904 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc903, i32 0, i32 0
  %631 = load i64, i64* %flags904, align 8, !tbaa !5
  %and905 = and i64 %631, 32
  %tobool = icmp ne i64 %and905, 0
  br i1 %tobool, label %if.then.906, label %if.else.921

if.then.906:                                      ; preds = %sw.default.894
  %632 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %procs907 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %632, i32 0, i32 42
  %map_cmyk_color908 = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs907, i32 0, i32 15
  store i64 (%struct.gx_device_s*, i16*)* @stc_map_cmyk10_color, i64 (%struct.gx_device_s*, i16*)** %map_cmyk_color908, align 8, !tbaa !77
  %633 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %procs909 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %633, i32 0, i32 42
  %map_color_rgb910 = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs909, i32 0, i32 6
  store i32 (%struct.gx_device_s*, i64, i16*)* @stc_map_color_cmyk10, i32 (%struct.gx_device_s*, i64, i16*)** %map_color_rgb910, align 8, !tbaa !78
  %634 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %procs911 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %634, i32 0, i32 42
  %encode_color912 = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs911, i32 0, i32 51
  store i64 (%struct.gx_device_s*, i16*)* @stc_map_cmyk10_color, i64 (%struct.gx_device_s*, i16*)** %encode_color912, align 8, !tbaa !79
  %635 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %procs913 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %635, i32 0, i32 42
  %decode_color914 = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs913, i32 0, i32 52
  store i32 (%struct.gx_device_s*, i64, i16*)* @stc_map_color_cmyk10, i32 (%struct.gx_device_s*, i64, i16*)** %decode_color914, align 8, !tbaa !80
  %arrayidx915 = getelementptr inbounds [4 x i16], [4 x i16]* %cv, i32 0, i64 3
  store i16 0, i16* %arrayidx915, align 2, !tbaa !73
  %arrayidx916 = getelementptr inbounds [4 x i16], [4 x i16]* %cv, i32 0, i64 2
  store i16 0, i16* %arrayidx916, align 2, !tbaa !73
  %arrayidx917 = getelementptr inbounds [4 x i16], [4 x i16]* %cv, i32 0, i64 1
  store i16 0, i16* %arrayidx917, align 2, !tbaa !73
  %arrayidx918 = getelementptr inbounds [4 x i16], [4 x i16]* %cv, i32 0, i64 0
  store i16 0, i16* %arrayidx918, align 2, !tbaa !73
  %636 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %637 = bitcast %struct.stcolor_device_s* %636 to %struct.gx_device_s*
  %arraydecay919 = getelementptr inbounds [4 x i16], [4 x i16]* %cv, i32 0, i32 0
  %call920 = call i64 @stc_map_cmyk10_color(%struct.gx_device_s* %637, i16* %arraydecay919) #5
  store i64 %call920, i64* %white, align 8, !tbaa !25
  br label %if.end.936

if.else.921:                                      ; preds = %sw.default.894
  %638 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %procs922 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %638, i32 0, i32 42
  %map_cmyk_color923 = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs922, i32 0, i32 15
  store i64 (%struct.gx_device_s*, i16*)* @stc_map_cmyk_color, i64 (%struct.gx_device_s*, i16*)** %map_cmyk_color923, align 8, !tbaa !77
  %639 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %procs924 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %639, i32 0, i32 42
  %map_color_rgb925 = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs924, i32 0, i32 6
  store i32 (%struct.gx_device_s*, i64, i16*)* @stc_map_color_cmyk, i32 (%struct.gx_device_s*, i64, i16*)** %map_color_rgb925, align 8, !tbaa !78
  %640 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %procs926 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %640, i32 0, i32 42
  %encode_color927 = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs926, i32 0, i32 51
  store i64 (%struct.gx_device_s*, i16*)* @stc_map_cmyk_color, i64 (%struct.gx_device_s*, i16*)** %encode_color927, align 8, !tbaa !79
  %641 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %procs928 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %641, i32 0, i32 42
  %decode_color929 = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs928, i32 0, i32 52
  store i32 (%struct.gx_device_s*, i64, i16*)* @stc_map_color_cmyk, i32 (%struct.gx_device_s*, i64, i16*)** %decode_color929, align 8, !tbaa !80
  %arrayidx930 = getelementptr inbounds [4 x i16], [4 x i16]* %cv, i32 0, i64 3
  store i16 0, i16* %arrayidx930, align 2, !tbaa !73
  %arrayidx931 = getelementptr inbounds [4 x i16], [4 x i16]* %cv, i32 0, i64 2
  store i16 0, i16* %arrayidx931, align 2, !tbaa !73
  %arrayidx932 = getelementptr inbounds [4 x i16], [4 x i16]* %cv, i32 0, i64 1
  store i16 0, i16* %arrayidx932, align 2, !tbaa !73
  %arrayidx933 = getelementptr inbounds [4 x i16], [4 x i16]* %cv, i32 0, i64 0
  store i16 0, i16* %arrayidx933, align 2, !tbaa !73
  %642 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %643 = bitcast %struct.stcolor_device_s* %642 to %struct.gx_device_s*
  %arraydecay934 = getelementptr inbounds [4 x i16], [4 x i16]* %cv, i32 0, i32 0
  %call935 = call i64 @stc_map_cmyk_color(%struct.gx_device_s* %643, i16* %arraydecay934) #5
  store i64 %call935, i64* %white, align 8, !tbaa !25
  br label %if.end.936

if.end.936:                                       ; preds = %if.else.921, %if.then.906
  br label %sw.epilog.937

sw.epilog.937:                                    ; preds = %if.end.936, %sw.bb.872, %sw.bb.859
  %644 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %color_info938 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %644, i32 0, i32 11
  %depth = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info938, i32 0, i32 3
  %645 = load i16, i16* %depth, align 2, !tbaa !54
  %conv939 = zext i16 %645 to i32
  %cmp940 = icmp slt i32 %conv939, 2
  br i1 %cmp940, label %if.then.942, label %if.end.945

if.then.942:                                      ; preds = %sw.epilog.937
  %646 = load i64, i64* %white, align 8, !tbaa !25
  %shl943 = shl i64 %646, 1
  %647 = load i64, i64* %white, align 8, !tbaa !25
  %or944 = or i64 %647, %shl943
  store i64 %or944, i64* %white, align 8, !tbaa !25
  br label %if.end.945

if.end.945:                                       ; preds = %if.then.942, %sw.epilog.937
  %648 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %color_info946 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %648, i32 0, i32 11
  %depth947 = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info946, i32 0, i32 3
  %649 = load i16, i16* %depth947, align 2, !tbaa !54
  %conv948 = zext i16 %649 to i32
  %cmp949 = icmp slt i32 %conv948, 4
  br i1 %cmp949, label %if.then.951, label %if.end.954

if.then.951:                                      ; preds = %if.end.945
  %650 = load i64, i64* %white, align 8, !tbaa !25
  %shl952 = shl i64 %650, 2
  %651 = load i64, i64* %white, align 8, !tbaa !25
  %or953 = or i64 %651, %shl952
  store i64 %or953, i64* %white, align 8, !tbaa !25
  br label %if.end.954

if.end.954:                                       ; preds = %if.then.951, %if.end.945
  %652 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %color_info955 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %652, i32 0, i32 11
  %depth956 = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info955, i32 0, i32 3
  %653 = load i16, i16* %depth956, align 2, !tbaa !54
  %conv957 = zext i16 %653 to i32
  %cmp958 = icmp slt i32 %conv957, 8
  br i1 %cmp958, label %if.then.960, label %if.end.963

if.then.960:                                      ; preds = %if.end.954
  %654 = load i64, i64* %white, align 8, !tbaa !25
  %shl961 = shl i64 %654, 4
  %655 = load i64, i64* %white, align 8, !tbaa !25
  %or962 = or i64 %655, %shl961
  store i64 %or962, i64* %white, align 8, !tbaa !25
  br label %if.end.963

if.end.963:                                       ; preds = %if.then.960, %if.end.954
  %656 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc964 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %656, i32 0, i32 68
  %white_run = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc964, i32 0, i32 10
  %arraydecay965 = getelementptr inbounds [3 x i32], [3 x i32]* %white_run, i32 0, i32 0
  %657 = bitcast i32* %arraydecay965 to i8*
  store i8* %657, i8** %bpw, align 8, !tbaa !1
  %658 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %color_info966 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %658, i32 0, i32 11
  %depth967 = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info966, i32 0, i32 3
  %659 = load i16, i16* %depth967, align 2, !tbaa !54
  %conv968 = zext i16 %659 to i32
  %cmp969 = icmp slt i32 %conv968, 16
  br i1 %cmp969, label %if.then.971, label %if.else.984

if.then.971:                                      ; preds = %if.end.963
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond.972

for.cond.972:                                     ; preds = %for.inc.981, %if.then.971
  %660 = load i32, i32* %i, align 4, !tbaa !26
  %conv973 = sext i32 %660 to i64
  %cmp974 = icmp ult i64 %conv973, 12
  br i1 %cmp974, label %for.body.976, label %for.end.983

for.body.976:                                     ; preds = %for.cond.972
  %661 = load i64, i64* %white, align 8, !tbaa !25
  %and977 = and i64 255, %661
  %conv978 = trunc i64 %and977 to i8
  %662 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom979 = sext i32 %662 to i64
  %663 = load i8*, i8** %bpw, align 8, !tbaa !1
  %arrayidx980 = getelementptr inbounds i8, i8* %663, i64 %idxprom979
  store i8 %conv978, i8* %arrayidx980, align 1, !tbaa !62
  br label %for.inc.981

for.inc.981:                                      ; preds = %for.body.976
  %664 = load i32, i32* %i, align 4, !tbaa !26
  %add982 = add nsw i32 %664, 1
  store i32 %add982, i32* %i, align 4, !tbaa !26
  br label %for.cond.972

for.end.983:                                      ; preds = %for.cond.972
  br label %if.end.1072

if.else.984:                                      ; preds = %if.end.963
  %665 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %color_info985 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %665, i32 0, i32 11
  %depth986 = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info985, i32 0, i32 3
  %666 = load i16, i16* %depth986, align 2, !tbaa !54
  %conv987 = zext i16 %666 to i32
  %cmp988 = icmp slt i32 %conv987, 24
  br i1 %cmp988, label %if.then.990, label %if.else.1008

if.then.990:                                      ; preds = %if.else.984
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond.991

for.cond.991:                                     ; preds = %for.inc.1005, %if.then.990
  %667 = load i32, i32* %i, align 4, !tbaa !26
  %conv992 = sext i32 %667 to i64
  %cmp993 = icmp ult i64 %conv992, 12
  br i1 %cmp993, label %for.body.995, label %for.end.1007

for.body.995:                                     ; preds = %for.cond.991
  %668 = load i64, i64* %white, align 8, !tbaa !25
  %shr = lshr i64 %668, 8
  %and996 = and i64 255, %shr
  %conv997 = trunc i64 %and996 to i8
  %669 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom998 = sext i32 %669 to i64
  %670 = load i8*, i8** %bpw, align 8, !tbaa !1
  %arrayidx999 = getelementptr inbounds i8, i8* %670, i64 %idxprom998
  store i8 %conv997, i8* %arrayidx999, align 1, !tbaa !62
  %671 = load i64, i64* %white, align 8, !tbaa !25
  %and1000 = and i64 255, %671
  %conv1001 = trunc i64 %and1000 to i8
  %672 = load i32, i32* %i, align 4, !tbaa !26
  %add1002 = add nsw i32 %672, 1
  %idxprom1003 = sext i32 %add1002 to i64
  %673 = load i8*, i8** %bpw, align 8, !tbaa !1
  %arrayidx1004 = getelementptr inbounds i8, i8* %673, i64 %idxprom1003
  store i8 %conv1001, i8* %arrayidx1004, align 1, !tbaa !62
  br label %for.inc.1005

for.inc.1005:                                     ; preds = %for.body.995
  %674 = load i32, i32* %i, align 4, !tbaa !26
  %add1006 = add nsw i32 %674, 2
  store i32 %add1006, i32* %i, align 4, !tbaa !26
  br label %for.cond.991

for.end.1007:                                     ; preds = %for.cond.991
  br label %if.end.1071

if.else.1008:                                     ; preds = %if.else.984
  %675 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %color_info1009 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %675, i32 0, i32 11
  %depth1010 = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info1009, i32 0, i32 3
  %676 = load i16, i16* %depth1010, align 2, !tbaa !54
  %conv1011 = zext i16 %676 to i32
  %cmp1012 = icmp slt i32 %conv1011, 32
  br i1 %cmp1012, label %if.then.1014, label %if.else.1039

if.then.1014:                                     ; preds = %if.else.1008
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond.1015

for.cond.1015:                                    ; preds = %for.inc.1036, %if.then.1014
  %677 = load i32, i32* %i, align 4, !tbaa !26
  %conv1016 = sext i32 %677 to i64
  %cmp1017 = icmp ult i64 %conv1016, 12
  br i1 %cmp1017, label %for.body.1019, label %for.end.1038

for.body.1019:                                    ; preds = %for.cond.1015
  %678 = load i64, i64* %white, align 8, !tbaa !25
  %shr1020 = lshr i64 %678, 16
  %and1021 = and i64 255, %shr1020
  %conv1022 = trunc i64 %and1021 to i8
  %679 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom1023 = sext i32 %679 to i64
  %680 = load i8*, i8** %bpw, align 8, !tbaa !1
  %arrayidx1024 = getelementptr inbounds i8, i8* %680, i64 %idxprom1023
  store i8 %conv1022, i8* %arrayidx1024, align 1, !tbaa !62
  %681 = load i64, i64* %white, align 8, !tbaa !25
  %shr1025 = lshr i64 %681, 8
  %and1026 = and i64 255, %shr1025
  %conv1027 = trunc i64 %and1026 to i8
  %682 = load i32, i32* %i, align 4, !tbaa !26
  %add1028 = add nsw i32 %682, 1
  %idxprom1029 = sext i32 %add1028 to i64
  %683 = load i8*, i8** %bpw, align 8, !tbaa !1
  %arrayidx1030 = getelementptr inbounds i8, i8* %683, i64 %idxprom1029
  store i8 %conv1027, i8* %arrayidx1030, align 1, !tbaa !62
  %684 = load i64, i64* %white, align 8, !tbaa !25
  %and1031 = and i64 255, %684
  %conv1032 = trunc i64 %and1031 to i8
  %685 = load i32, i32* %i, align 4, !tbaa !26
  %add1033 = add nsw i32 %685, 2
  %idxprom1034 = sext i32 %add1033 to i64
  %686 = load i8*, i8** %bpw, align 8, !tbaa !1
  %arrayidx1035 = getelementptr inbounds i8, i8* %686, i64 %idxprom1034
  store i8 %conv1032, i8* %arrayidx1035, align 1, !tbaa !62
  br label %for.inc.1036

for.inc.1036:                                     ; preds = %for.body.1019
  %687 = load i32, i32* %i, align 4, !tbaa !26
  %add1037 = add nsw i32 %687, 3
  store i32 %add1037, i32* %i, align 4, !tbaa !26
  br label %for.cond.1015

for.end.1038:                                     ; preds = %for.cond.1015
  br label %if.end.1070

if.else.1039:                                     ; preds = %if.else.1008
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond.1040

for.cond.1040:                                    ; preds = %for.inc.1067, %if.else.1039
  %688 = load i32, i32* %i, align 4, !tbaa !26
  %conv1041 = sext i32 %688 to i64
  %cmp1042 = icmp ult i64 %conv1041, 12
  br i1 %cmp1042, label %for.body.1044, label %for.end.1069

for.body.1044:                                    ; preds = %for.cond.1040
  %689 = load i64, i64* %white, align 8, !tbaa !25
  %shr1045 = lshr i64 %689, 24
  %and1046 = and i64 255, %shr1045
  %conv1047 = trunc i64 %and1046 to i8
  %690 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom1048 = sext i32 %690 to i64
  %691 = load i8*, i8** %bpw, align 8, !tbaa !1
  %arrayidx1049 = getelementptr inbounds i8, i8* %691, i64 %idxprom1048
  store i8 %conv1047, i8* %arrayidx1049, align 1, !tbaa !62
  %692 = load i64, i64* %white, align 8, !tbaa !25
  %shr1050 = lshr i64 %692, 16
  %and1051 = and i64 255, %shr1050
  %conv1052 = trunc i64 %and1051 to i8
  %693 = load i32, i32* %i, align 4, !tbaa !26
  %add1053 = add nsw i32 %693, 1
  %idxprom1054 = sext i32 %add1053 to i64
  %694 = load i8*, i8** %bpw, align 8, !tbaa !1
  %arrayidx1055 = getelementptr inbounds i8, i8* %694, i64 %idxprom1054
  store i8 %conv1052, i8* %arrayidx1055, align 1, !tbaa !62
  %695 = load i64, i64* %white, align 8, !tbaa !25
  %shr1056 = lshr i64 %695, 8
  %and1057 = and i64 255, %shr1056
  %conv1058 = trunc i64 %and1057 to i8
  %696 = load i32, i32* %i, align 4, !tbaa !26
  %add1059 = add nsw i32 %696, 2
  %idxprom1060 = sext i32 %add1059 to i64
  %697 = load i8*, i8** %bpw, align 8, !tbaa !1
  %arrayidx1061 = getelementptr inbounds i8, i8* %697, i64 %idxprom1060
  store i8 %conv1058, i8* %arrayidx1061, align 1, !tbaa !62
  %698 = load i64, i64* %white, align 8, !tbaa !25
  %and1062 = and i64 255, %698
  %conv1063 = trunc i64 %and1062 to i8
  %699 = load i32, i32* %i, align 4, !tbaa !26
  %add1064 = add nsw i32 %699, 3
  %idxprom1065 = sext i32 %add1064 to i64
  %700 = load i8*, i8** %bpw, align 8, !tbaa !1
  %arrayidx1066 = getelementptr inbounds i8, i8* %700, i64 %idxprom1065
  store i8 %conv1063, i8* %arrayidx1066, align 1, !tbaa !62
  br label %for.inc.1067

for.inc.1067:                                     ; preds = %for.body.1044
  %701 = load i32, i32* %i, align 4, !tbaa !26
  %add1068 = add nsw i32 %701, 4
  store i32 %add1068, i32* %i, align 4, !tbaa !26
  br label %for.cond.1040

for.end.1069:                                     ; preds = %for.cond.1040
  br label %if.end.1070

if.end.1070:                                      ; preds = %for.end.1069, %for.end.1038
  br label %if.end.1071

if.end.1071:                                      ; preds = %if.end.1070, %for.end.1007
  br label %if.end.1072

if.end.1072:                                      ; preds = %if.end.1071, %for.end.983
  %702 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %width = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %702, i32 0, i32 13
  %703 = load i32, i32* %width, align 4, !tbaa !83
  %conv1073 = sitofp i32 %703 to double
  %704 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %HWMargins = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %704, i32 0, i32 25
  %arrayidx1074 = getelementptr inbounds [4 x float], [4 x float]* %HWMargins, i32 0, i64 0
  %705 = load float, float* %arrayidx1074, align 4, !tbaa !37
  %conv1075 = fpext float %705 to double
  %div1076 = fdiv double %conv1075, 7.200000e+01
  %706 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %HWMargins1077 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %706, i32 0, i32 25
  %arrayidx1078 = getelementptr inbounds [4 x float], [4 x float]* %HWMargins1077, i32 0, i64 2
  %707 = load float, float* %arrayidx1078, align 4, !tbaa !37
  %conv1079 = fpext float %707 to double
  %div1080 = fdiv double %conv1079, 7.200000e+01
  %add1081 = fadd double %div1076, %div1080
  %708 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %HWResolution = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %708, i32 0, i32 22
  %arrayidx1082 = getelementptr inbounds [2 x float], [2 x float]* %HWResolution, i32 0, i64 0
  %709 = load float, float* %arrayidx1082, align 4, !tbaa !37
  %conv1083 = fpext float %709 to double
  %mul1084 = fmul double %add1081, %conv1083
  %sub1085 = fsub double %conv1073, %mul1084
  %conv1086 = fptoui double %sub1085 to i64
  %conv1087 = trunc i64 %conv1086 to i32
  store i32 %conv1087, i32* %j, align 4, !tbaa !26
  %710 = load i32, i32* %j, align 4, !tbaa !26
  %711 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %color_info1088 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %711, i32 0, i32 11
  %depth1089 = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info1088, i32 0, i32 3
  %712 = load i16, i16* %depth1089, align 2, !tbaa !54
  %conv1090 = zext i16 %712 to i32
  %mul1091 = mul nsw i32 %710, %conv1090
  store i32 %mul1091, i32* %j, align 4, !tbaa !26
  %713 = load i32, i32* %j, align 4, !tbaa !26
  %conv1092 = sext i32 %713 to i64
  %rem = urem i64 %conv1092, 96
  %conv1093 = trunc i64 %rem to i32
  store i32 %conv1093, i32* %j, align 4, !tbaa !26
  %714 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc1094 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %714, i32 0, i32 68
  %white_end = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc1094, i32 0, i32 11
  %arraydecay1095 = getelementptr inbounds [3 x i32], [3 x i32]* %white_end, i32 0, i32 0
  %715 = bitcast i32* %arraydecay1095 to i8*
  store i8* %715, i8** %bpm, align 8, !tbaa !1
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond.1096

for.cond.1096:                                    ; preds = %for.inc.1130, %if.end.1072
  %716 = load i32, i32* %i, align 4, !tbaa !26
  %conv1097 = sext i32 %716 to i64
  %cmp1098 = icmp ult i64 %conv1097, 12
  br i1 %cmp1098, label %for.body.1100, label %for.end.1132

for.body.1100:                                    ; preds = %for.cond.1096
  %717 = load i32, i32* %j, align 4, !tbaa !26
  %cmp1101 = icmp sle i32 %717, 0
  br i1 %cmp1101, label %if.then.1103, label %if.else.1106

if.then.1103:                                     ; preds = %for.body.1100
  %718 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom1104 = sext i32 %718 to i64
  %719 = load i8*, i8** %bpm, align 8, !tbaa !1
  %arrayidx1105 = getelementptr inbounds i8, i8* %719, i64 %idxprom1104
  store i8 0, i8* %arrayidx1105, align 1, !tbaa !62
  br label %if.end.1121

if.else.1106:                                     ; preds = %for.body.1100
  %720 = load i32, i32* %j, align 4, !tbaa !26
  %cmp1107 = icmp sge i32 %720, 8
  br i1 %cmp1107, label %if.then.1109, label %if.else.1113

if.then.1109:                                     ; preds = %if.else.1106
  %721 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom1110 = sext i32 %721 to i64
  %722 = load i8*, i8** %bpm, align 8, !tbaa !1
  %arrayidx1111 = getelementptr inbounds i8, i8* %722, i64 %idxprom1110
  store i8 -1, i8* %arrayidx1111, align 1, !tbaa !62
  %723 = load i32, i32* %j, align 4, !tbaa !26
  %sub1112 = sub nsw i32 %723, 8
  store i32 %sub1112, i32* %j, align 4, !tbaa !26
  br label %if.end.1120

if.else.1113:                                     ; preds = %if.else.1106
  %724 = load i32, i32* %j, align 4, !tbaa !26
  %sub1114 = sub nsw i32 8, %724
  %shl1115 = shl i32 1, %sub1114
  %sub1116 = sub nsw i32 %shl1115, 1
  %xor = xor i32 255, %sub1116
  %conv1117 = trunc i32 %xor to i8
  %725 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom1118 = sext i32 %725 to i64
  %726 = load i8*, i8** %bpm, align 8, !tbaa !1
  %arrayidx1119 = getelementptr inbounds i8, i8* %726, i64 %idxprom1118
  store i8 %conv1117, i8* %arrayidx1119, align 1, !tbaa !62
  store i32 0, i32* %j, align 4, !tbaa !26
  br label %if.end.1120

if.end.1120:                                      ; preds = %if.else.1113, %if.then.1109
  br label %if.end.1121

if.end.1121:                                      ; preds = %if.end.1120, %if.then.1103
  %727 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom1122 = sext i32 %727 to i64
  %728 = load i8*, i8** %bpw, align 8, !tbaa !1
  %arrayidx1123 = getelementptr inbounds i8, i8* %728, i64 %idxprom1122
  %729 = load i8, i8* %arrayidx1123, align 1, !tbaa !62
  %conv1124 = zext i8 %729 to i32
  %730 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom1125 = sext i32 %730 to i64
  %731 = load i8*, i8** %bpm, align 8, !tbaa !1
  %arrayidx1126 = getelementptr inbounds i8, i8* %731, i64 %idxprom1125
  %732 = load i8, i8* %arrayidx1126, align 1, !tbaa !62
  %conv1127 = zext i8 %732 to i32
  %and1128 = and i32 %conv1127, %conv1124
  %conv1129 = trunc i32 %and1128 to i8
  store i8 %conv1129, i8* %arrayidx1126, align 1, !tbaa !62
  br label %for.inc.1130

for.inc.1130:                                     ; preds = %if.end.1121
  %733 = load i32, i32* %i, align 4, !tbaa !26
  %inc1131 = add nsw i32 %733, 1
  store i32 %inc1131, i32* %i, align 4, !tbaa !26
  br label %for.cond.1096

for.end.1132:                                     ; preds = %for.cond.1096
  %734 = load %struct.gx_device_s*, %struct.gx_device_s** %pdev.addr, align 8, !tbaa !1
  %call1133 = call i32 @gdev_prn_open(%struct.gx_device_s* %734) #5
  store i32 %call1133, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  %735 = bitcast [4 x i16]* %cv to i8*
  call void @llvm.lifetime.end(i64 8, i8* %735) #2
  br label %cleanup

if.else.1134:                                     ; preds = %for.end.850
  %736 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %memory1135 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %736, i32 0, i32 3
  %737 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory1135, align 8, !tbaa !29
  %738 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc1136 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %738, i32 0, i32 68
  call void @stc_freedata(%struct.gs_memory_s* %737, %struct.stc_s* %stc1136) #5
  %739 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %739, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.else.1134, %for.end.1132
  %740 = bitcast i8** %bpm to i8*
  call void @llvm.lifetime.end(i64 8, i8* %740) #2
  %741 = bitcast i8** %bpw to i8*
  call void @llvm.lifetime.end(i64 8, i8* %741) #2
  %742 = bitcast i64* %white to i8*
  call void @llvm.lifetime.end(i64 8, i8* %742) #2
  %743 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %743) #2
  %744 = bitcast i32* %j to i8*
  call void @llvm.lifetime.end(i64 4, i8* %744) #2
  %745 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %745) #2
  %746 = bitcast %struct.stcolor_device_s** %sd to i8*
  call void @llvm.lifetime.end(i64 8, i8* %746) #2
  %747 = load i32, i32* %retval
  ret i32 %747
}

declare void @gx_default_get_initial_matrix(%struct.gx_device_s*, %struct.gs_matrix_s*) #0

declare i32 @gx_default_sync_output(%struct.gx_device_s*) #0

declare i32 @gdev_prn_bg_output_page(%struct.gx_device_s*, i32, i32) #0

; Function Attrs: nounwind uwtable
define internal i32 @stc_close(%struct.gx_device_s* %pdev) #1 {
entry:
  %pdev.addr = alloca %struct.gx_device_s*, align 8
  store %struct.gx_device_s* %pdev, %struct.gx_device_s** %pdev.addr, align 8, !tbaa !1
  %0 = load %struct.gx_device_s*, %struct.gx_device_s** %pdev.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %0, i32 0, i32 3
  %1 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory, align 8, !tbaa !84
  %2 = load %struct.gx_device_s*, %struct.gx_device_s** %pdev.addr, align 8, !tbaa !1
  %3 = bitcast %struct.gx_device_s* %2 to %struct.stcolor_device_s*
  %stc = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %3, i32 0, i32 68
  call void @stc_freedata(%struct.gs_memory_s* %1, %struct.stc_s* %stc) #5
  %4 = load %struct.gx_device_s*, %struct.gx_device_s** %pdev.addr, align 8, !tbaa !1
  %5 = bitcast %struct.gx_device_s* %4 to %struct.stcolor_device_s*
  %stc1 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %5, i32 0, i32 68
  %flags = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc1, i32 0, i32 0
  %6 = load i64, i64* %flags, align 8, !tbaa !5
  %and = and i64 %6, -513
  store i64 %and, i64* %flags, align 8, !tbaa !5
  %7 = load %struct.gx_device_s*, %struct.gx_device_s** %pdev.addr, align 8, !tbaa !1
  %call = call i32 @gdev_prn_close(%struct.gx_device_s* %7) #5
  ret i32 %call
}

; Function Attrs: nounwind uwtable
define internal i32 @stc_map_color_cmyk(%struct.gx_device_s* %pdev, i64 %color, i16* %cv) #1 {
entry:
  %pdev.addr = alloca %struct.gx_device_s*, align 8
  %color.addr = alloca i64, align 8
  %cv.addr = alloca i16*, align 8
  %sd = alloca %struct.stcolor_device_s*, align 8
  %shift = alloca i32, align 4
  %l = alloca i64, align 8
  %c = alloca i16, align 2
  %m = alloca i16, align 2
  %y = alloca i16, align 2
  %k = alloca i16, align 2
  store %struct.gx_device_s* %pdev, %struct.gx_device_s** %pdev.addr, align 8, !tbaa !1
  store i64 %color, i64* %color.addr, align 8, !tbaa !25
  store i16* %cv, i16** %cv.addr, align 8, !tbaa !1
  %0 = bitcast %struct.stcolor_device_s** %sd to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = load %struct.gx_device_s*, %struct.gx_device_s** %pdev.addr, align 8, !tbaa !1
  %2 = bitcast %struct.gx_device_s* %1 to %struct.stcolor_device_s*
  store %struct.stcolor_device_s* %2, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %3 = bitcast i32* %shift to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #2
  %4 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %color_info = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %4, i32 0, i32 11
  %depth = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info, i32 0, i32 3
  %5 = load i16, i16* %depth, align 2, !tbaa !54
  %conv = zext i16 %5 to i32
  %cmp = icmp eq i32 %conv, 32
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  %6 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %6, i32 0, i32 68
  %bits = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc, i32 0, i32 1
  %7 = load i32, i32* %bits, align 4, !tbaa !44
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 8, %cond.true ], [ %7, %cond.false ]
  store i32 %cond, i32* %shift, align 4, !tbaa !26
  %8 = bitcast i64* %l to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8) #2
  %9 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %9, i32 0, i32 68
  %bits3 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2, i32 0, i32 1
  %10 = load i32, i32* %bits3, align 4, !tbaa !44
  %sh_prom = zext i32 %10 to i64
  %shl = shl i64 1, %sh_prom
  %sub = sub i64 %shl, 1
  store i64 %sub, i64* %l, align 8, !tbaa !25
  %11 = bitcast i16* %c to i8*
  call void @llvm.lifetime.start(i64 2, i8* %11) #2
  %12 = bitcast i16* %m to i8*
  call void @llvm.lifetime.start(i64 2, i8* %12) #2
  %13 = bitcast i16* %y to i8*
  call void @llvm.lifetime.start(i64 2, i8* %13) #2
  %14 = bitcast i16* %k to i8*
  call void @llvm.lifetime.start(i64 2, i8* %14) #2
  %15 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %16 = load i64, i64* %color.addr, align 8, !tbaa !25
  %17 = load i64, i64* %l, align 8, !tbaa !25
  %and = and i64 %16, %17
  %call = call zeroext i16 @stc_expand(%struct.stcolor_device_s* %15, i32 3, i64 %and) #5
  store i16 %call, i16* %k, align 2, !tbaa !73
  %18 = load i32, i32* %shift, align 4, !tbaa !26
  %19 = load i64, i64* %color.addr, align 8, !tbaa !25
  %sh_prom4 = zext i32 %18 to i64
  %shr = lshr i64 %19, %sh_prom4
  store i64 %shr, i64* %color.addr, align 8, !tbaa !25
  %20 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %21 = load i64, i64* %color.addr, align 8, !tbaa !25
  %22 = load i64, i64* %l, align 8, !tbaa !25
  %and5 = and i64 %21, %22
  %call6 = call zeroext i16 @stc_expand(%struct.stcolor_device_s* %20, i32 2, i64 %and5) #5
  store i16 %call6, i16* %y, align 2, !tbaa !73
  %23 = load i32, i32* %shift, align 4, !tbaa !26
  %24 = load i64, i64* %color.addr, align 8, !tbaa !25
  %sh_prom7 = zext i32 %23 to i64
  %shr8 = lshr i64 %24, %sh_prom7
  store i64 %shr8, i64* %color.addr, align 8, !tbaa !25
  %25 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %26 = load i64, i64* %color.addr, align 8, !tbaa !25
  %27 = load i64, i64* %l, align 8, !tbaa !25
  %and9 = and i64 %26, %27
  %call10 = call zeroext i16 @stc_expand(%struct.stcolor_device_s* %25, i32 1, i64 %and9) #5
  store i16 %call10, i16* %m, align 2, !tbaa !73
  %28 = load i32, i32* %shift, align 4, !tbaa !26
  %29 = load i64, i64* %color.addr, align 8, !tbaa !25
  %sh_prom11 = zext i32 %28 to i64
  %shr12 = lshr i64 %29, %sh_prom11
  store i64 %shr12, i64* %color.addr, align 8, !tbaa !25
  %30 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %31 = load i64, i64* %color.addr, align 8, !tbaa !25
  %32 = load i64, i64* %l, align 8, !tbaa !25
  %and13 = and i64 %31, %32
  %call14 = call zeroext i16 @stc_expand(%struct.stcolor_device_s* %30, i32 0, i64 %and13) #5
  store i16 %call14, i16* %c, align 2, !tbaa !73
  %33 = load i16, i16* %c, align 2, !tbaa !73
  %34 = load i16*, i16** %cv.addr, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds i16, i16* %34, i64 0
  store i16 %33, i16* %arrayidx, align 2, !tbaa !73
  %35 = load i16, i16* %m, align 2, !tbaa !73
  %36 = load i16*, i16** %cv.addr, align 8, !tbaa !1
  %arrayidx15 = getelementptr inbounds i16, i16* %36, i64 1
  store i16 %35, i16* %arrayidx15, align 2, !tbaa !73
  %37 = load i16, i16* %y, align 2, !tbaa !73
  %38 = load i16*, i16** %cv.addr, align 8, !tbaa !1
  %arrayidx16 = getelementptr inbounds i16, i16* %38, i64 2
  store i16 %37, i16* %arrayidx16, align 2, !tbaa !73
  %39 = load i16, i16* %k, align 2, !tbaa !73
  %40 = load i16*, i16** %cv.addr, align 8, !tbaa !1
  %arrayidx17 = getelementptr inbounds i16, i16* %40, i64 3
  store i16 %39, i16* %arrayidx17, align 2, !tbaa !73
  %41 = bitcast i16* %k to i8*
  call void @llvm.lifetime.end(i64 2, i8* %41) #2
  %42 = bitcast i16* %y to i8*
  call void @llvm.lifetime.end(i64 2, i8* %42) #2
  %43 = bitcast i16* %m to i8*
  call void @llvm.lifetime.end(i64 2, i8* %43) #2
  %44 = bitcast i16* %c to i8*
  call void @llvm.lifetime.end(i64 2, i8* %44) #2
  %45 = bitcast i64* %l to i8*
  call void @llvm.lifetime.end(i64 8, i8* %45) #2
  %46 = bitcast i32* %shift to i8*
  call void @llvm.lifetime.end(i64 4, i8* %46) #2
  %47 = bitcast %struct.stcolor_device_s** %sd to i8*
  call void @llvm.lifetime.end(i64 8, i8* %47) #2
  ret i32 0
}

declare i32 @gx_default_get_bits(%struct.gx_device_s*, i32, i8*, i8**) #0

; Function Attrs: nounwind uwtable
define internal i32 @stc_get_params(%struct.gx_device_s* %pdev, %struct.gs_param_list_s* %plist) #1 {
entry:
  %retval = alloca i32, align 4
  %pdev.addr = alloca %struct.gx_device_s*, align 8
  %plist.addr = alloca %struct.gs_param_list_s*, align 8
  %code = alloca i32, align 4
  %nc = alloca i32, align 4
  %ps = alloca %struct.gs_param_string_s, align 8
  %pfa = alloca %struct.gs_param_float_array_s, align 8
  %btmp = alloca i32, align 4
  %sd = alloca %struct.stcolor_device_s*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.gx_device_s* %pdev, %struct.gx_device_s** %pdev.addr, align 8, !tbaa !1
  store %struct.gs_param_list_s* %plist, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %0 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = bitcast i32* %nc to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #2
  %2 = bitcast %struct.gs_param_string_s* %ps to i8*
  call void @llvm.lifetime.start(i64 16, i8* %2) #2
  %3 = bitcast %struct.gs_param_float_array_s* %pfa to i8*
  call void @llvm.lifetime.start(i64 16, i8* %3) #2
  %4 = bitcast i32* %btmp to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #2
  %5 = bitcast %struct.stcolor_device_s** %sd to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5) #2
  %6 = load %struct.gx_device_s*, %struct.gx_device_s** %pdev.addr, align 8, !tbaa !1
  %7 = bitcast %struct.gx_device_s* %6 to %struct.stcolor_device_s*
  store %struct.stcolor_device_s* %7, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %8 = load %struct.gx_device_s*, %struct.gx_device_s** %pdev.addr, align 8, !tbaa !1
  %9 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call = call i32 @gdev_prn_get_params(%struct.gx_device_s* %8, %struct.gs_param_list_s* %9) #5
  store i32 %call, i32* %code, align 4, !tbaa !26
  %10 = load i32, i32* %code, align 4, !tbaa !26
  %cmp = icmp slt i32 %10, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %11 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %11, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %data = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %ps, i32 0, i32 0
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i32 0, i32 0), i8** %data, align 8, !tbaa !70
  %data1 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %ps, i32 0, i32 0
  %12 = load i8*, i8** %data1, align 8, !tbaa !70
  %call2 = call i64 @strlen(i8* %12) #7
  %conv = trunc i64 %call2 to i32
  %size = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %ps, i32 0, i32 1
  store i32 %conv, i32* %size, align 4, !tbaa !71
  %persistent = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %ps, i32 0, i32 2
  store i32 1, i32* %persistent, align 4, !tbaa !72
  %13 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call3 = call i32 @param_write_string(%struct.gs_param_list_s* %13, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i32 0, i32 0), %struct.gs_param_string_s* %ps) #5
  store i32 %call3, i32* %code, align 4, !tbaa !26
  %14 = load i32, i32* %code, align 4, !tbaa !26
  %cmp4 = icmp slt i32 %14, 0
  br i1 %cmp4, label %if.then.6, label %if.end.7

if.then.6:                                        ; preds = %if.end
  %15 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.7:                                         ; preds = %if.end
  %16 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %17 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %17, i32 0, i32 68
  %bits = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc, i32 0, i32 1
  %call8 = call i32 @param_write_int(%struct.gs_param_list_s* %16, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i32 0, i32 0), i32* %bits) #5
  store i32 %call8, i32* %code, align 4, !tbaa !26
  %18 = load i32, i32* %code, align 4, !tbaa !26
  %cmp9 = icmp slt i32 %18, 0
  br i1 %cmp9, label %if.then.11, label %if.end.12

if.then.11:                                       ; preds = %if.end.7
  %19 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %19, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.12:                                        ; preds = %if.end.7
  %20 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc13 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %20, i32 0, i32 68
  %algorithms = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc13, i32 0, i32 12
  %size14 = getelementptr inbounds %struct.gs_param_string_array_s, %struct.gs_param_string_array_s* %algorithms, i32 0, i32 1
  %21 = load i32, i32* %size14, align 4, !tbaa !66
  %cmp15 = icmp ugt i32 %21, 0
  br i1 %cmp15, label %if.then.17, label %if.else

if.then.17:                                       ; preds = %if.end.12
  %22 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %23 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc18 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %23, i32 0, i32 68
  %algorithms19 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc18, i32 0, i32 12
  %call20 = call i32 @param_write_string_array(%struct.gs_param_list_s* %22, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12, i32 0, i32 0), %struct.gs_param_string_array_s* %algorithms19) #5
  store i32 %call20, i32* %code, align 4, !tbaa !26
  br label %if.end.22

if.else:                                          ; preds = %if.end.12
  %24 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call21 = call i32 @param_write_null(%struct.gs_param_list_s* %24, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12, i32 0, i32 0)) #5
  store i32 %call21, i32* %code, align 4, !tbaa !26
  br label %if.end.22

if.end.22:                                        ; preds = %if.else, %if.then.17
  %25 = load i32, i32* %code, align 4, !tbaa !26
  %cmp23 = icmp slt i32 %25, 0
  br i1 %cmp23, label %if.then.25, label %if.end.26

if.then.25:                                       ; preds = %if.end.22
  %26 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %26, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.26:                                        ; preds = %if.end.22
  %27 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc27 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %27, i32 0, i32 68
  %flags = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc27, i32 0, i32 0
  %28 = load i64, i64* %flags, align 8, !tbaa !5
  %and = and i64 %28, 3072
  switch i64 %and, label %sw.default [
    i64 1024, label %sw.bb
    i64 2048, label %sw.bb.34
  ]

sw.bb:                                            ; preds = %if.end.26
  %data28 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %ps, i32 0, i32 0
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i32 0, i32 0), i8** %data28, align 8, !tbaa !70
  %data29 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %ps, i32 0, i32 0
  %29 = load i8*, i8** %data29, align 8, !tbaa !70
  %call30 = call i64 @strlen(i8* %29) #7
  %conv31 = trunc i64 %call30 to i32
  %size32 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %ps, i32 0, i32 1
  store i32 %conv31, i32* %size32, align 4, !tbaa !71
  %persistent33 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %ps, i32 0, i32 2
  store i32 1, i32* %persistent33, align 4, !tbaa !72
  br label %sw.epilog

sw.bb.34:                                         ; preds = %if.end.26
  %data35 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %ps, i32 0, i32 0
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.14, i32 0, i32 0), i8** %data35, align 8, !tbaa !70
  %data36 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %ps, i32 0, i32 0
  %30 = load i8*, i8** %data36, align 8, !tbaa !70
  %call37 = call i64 @strlen(i8* %30) #7
  %conv38 = trunc i64 %call37 to i32
  %size39 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %ps, i32 0, i32 1
  store i32 %conv38, i32* %size39, align 4, !tbaa !71
  %persistent40 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %ps, i32 0, i32 2
  store i32 1, i32* %persistent40, align 4, !tbaa !72
  br label %sw.epilog

sw.default:                                       ; preds = %if.end.26
  %data41 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %ps, i32 0, i32 0
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.15, i32 0, i32 0), i8** %data41, align 8, !tbaa !70
  %data42 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %ps, i32 0, i32 0
  %31 = load i8*, i8** %data42, align 8, !tbaa !70
  %call43 = call i64 @strlen(i8* %31) #7
  %conv44 = trunc i64 %call43 to i32
  %size45 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %ps, i32 0, i32 1
  store i32 %conv44, i32* %size45, align 4, !tbaa !71
  %persistent46 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %ps, i32 0, i32 2
  store i32 1, i32* %persistent46, align 4, !tbaa !72
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb.34, %sw.bb
  %32 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call47 = call i32 @param_write_string(%struct.gs_param_list_s* %32, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.16, i32 0, i32 0), %struct.gs_param_string_s* %ps) #5
  store i32 %call47, i32* %code, align 4, !tbaa !26
  %33 = load i32, i32* %code, align 4, !tbaa !26
  %cmp48 = icmp slt i32 %33, 0
  br i1 %cmp48, label %if.then.50, label %if.end.51

if.then.50:                                       ; preds = %sw.epilog
  %34 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %34, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.51:                                        ; preds = %sw.epilog
  %35 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc52 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %35, i32 0, i32 68
  %flags53 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc52, i32 0, i32 0
  %36 = load i64, i64* %flags53, align 8, !tbaa !5
  %and54 = and i64 %36, 61440
  switch i64 %and54, label %sw.default.69 [
    i64 4096, label %sw.bb.55
    i64 8192, label %sw.bb.62
  ]

sw.bb.55:                                         ; preds = %if.end.51
  %data56 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %ps, i32 0, i32 0
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i32 0, i32 0), i8** %data56, align 8, !tbaa !70
  %data57 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %ps, i32 0, i32 0
  %37 = load i8*, i8** %data57, align 8, !tbaa !70
  %call58 = call i64 @strlen(i8* %37) #7
  %conv59 = trunc i64 %call58 to i32
  %size60 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %ps, i32 0, i32 1
  store i32 %conv59, i32* %size60, align 4, !tbaa !71
  %persistent61 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %ps, i32 0, i32 2
  store i32 1, i32* %persistent61, align 4, !tbaa !72
  br label %sw.epilog.76

sw.bb.62:                                         ; preds = %if.end.51
  %data63 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %ps, i32 0, i32 0
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.18, i32 0, i32 0), i8** %data63, align 8, !tbaa !70
  %data64 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %ps, i32 0, i32 0
  %38 = load i8*, i8** %data64, align 8, !tbaa !70
  %call65 = call i64 @strlen(i8* %38) #7
  %conv66 = trunc i64 %call65 to i32
  %size67 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %ps, i32 0, i32 1
  store i32 %conv66, i32* %size67, align 4, !tbaa !71
  %persistent68 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %ps, i32 0, i32 2
  store i32 1, i32* %persistent68, align 4, !tbaa !72
  br label %sw.epilog.76

sw.default.69:                                    ; preds = %if.end.51
  %data70 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %ps, i32 0, i32 0
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.19, i32 0, i32 0), i8** %data70, align 8, !tbaa !70
  %data71 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %ps, i32 0, i32 0
  %39 = load i8*, i8** %data71, align 8, !tbaa !70
  %call72 = call i64 @strlen(i8* %39) #7
  %conv73 = trunc i64 %call72 to i32
  %size74 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %ps, i32 0, i32 1
  store i32 %conv73, i32* %size74, align 4, !tbaa !71
  %persistent75 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %ps, i32 0, i32 2
  store i32 1, i32* %persistent75, align 4, !tbaa !72
  br label %sw.epilog.76

sw.epilog.76:                                     ; preds = %sw.default.69, %sw.bb.62, %sw.bb.55
  %40 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call77 = call i32 @param_write_string(%struct.gs_param_list_s* %40, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.20, i32 0, i32 0), %struct.gs_param_string_s* %ps) #5
  store i32 %call77, i32* %code, align 4, !tbaa !26
  %41 = load i32, i32* %code, align 4, !tbaa !26
  %cmp78 = icmp slt i32 %41, 0
  br i1 %cmp78, label %if.then.80, label %if.end.81

if.then.80:                                       ; preds = %sw.epilog.76
  %42 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %42, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.81:                                        ; preds = %sw.epilog.76
  %43 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc82 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %43, i32 0, i32 68
  %flags83 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc82, i32 0, i32 0
  %44 = load i64, i64* %flags83, align 8, !tbaa !5
  %and84 = and i64 %44, 64
  %tobool = icmp ne i64 %and84, 0
  %cond = select i1 %tobool, i32 1, i32 0
  store i32 %cond, i32* %btmp, align 4, !tbaa !26
  %45 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call85 = call i32 @param_write_bool(%struct.gs_param_list_s* %45, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.21, i32 0, i32 0), i32* %btmp) #5
  store i32 %call85, i32* %code, align 4, !tbaa !26
  %46 = load i32, i32* %code, align 4, !tbaa !26
  %cmp86 = icmp slt i32 %46, 0
  br i1 %cmp86, label %if.then.88, label %if.end.89

if.then.88:                                       ; preds = %if.end.81
  %47 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %47, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.89:                                        ; preds = %if.end.81
  %48 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc90 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %48, i32 0, i32 68
  %flags91 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc90, i32 0, i32 0
  %49 = load i64, i64* %flags91, align 8, !tbaa !5
  %and92 = and i64 %49, 128
  %tobool93 = icmp ne i64 %and92, 0
  %cond94 = select i1 %tobool93, i32 1, i32 0
  store i32 %cond94, i32* %btmp, align 4, !tbaa !26
  %50 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call95 = call i32 @param_write_bool(%struct.gs_param_list_s* %50, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.22, i32 0, i32 0), i32* %btmp) #5
  store i32 %call95, i32* %code, align 4, !tbaa !26
  %51 = load i32, i32* %code, align 4, !tbaa !26
  %cmp96 = icmp slt i32 %51, 0
  br i1 %cmp96, label %if.then.98, label %if.end.99

if.then.98:                                       ; preds = %if.end.89
  %52 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %52, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.99:                                        ; preds = %if.end.89
  %53 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc100 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %53, i32 0, i32 68
  %flags101 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc100, i32 0, i32 0
  %54 = load i64, i64* %flags101, align 8, !tbaa !5
  %and102 = and i64 %54, 192
  %tobool103 = icmp ne i64 %and102, 0
  %cond104 = select i1 %tobool103, i32 0, i32 1
  store i32 %cond104, i32* %btmp, align 4, !tbaa !26
  %55 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call105 = call i32 @param_write_bool(%struct.gs_param_list_s* %55, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.23, i32 0, i32 0), i32* %btmp) #5
  store i32 %call105, i32* %code, align 4, !tbaa !26
  %56 = load i32, i32* %code, align 4, !tbaa !26
  %cmp106 = icmp slt i32 %56, 0
  br i1 %cmp106, label %if.then.108, label %if.end.109

if.then.108:                                      ; preds = %if.end.99
  %57 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %57, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.109:                                       ; preds = %if.end.99
  %58 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc110 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %58, i32 0, i32 68
  %flags111 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc110, i32 0, i32 0
  %59 = load i64, i64* %flags111, align 8, !tbaa !5
  %and112 = and i64 %59, 256
  %tobool113 = icmp ne i64 %and112, 0
  %cond114 = select i1 %tobool113, i32 1, i32 0
  store i32 %cond114, i32* %btmp, align 4, !tbaa !26
  %60 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call115 = call i32 @param_write_bool(%struct.gs_param_list_s* %60, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i32 0, i32 0), i32* %btmp) #5
  store i32 %call115, i32* %code, align 4, !tbaa !26
  %61 = load i32, i32* %code, align 4, !tbaa !26
  %cmp116 = icmp slt i32 %61, 0
  br i1 %cmp116, label %if.then.118, label %if.end.119

if.then.118:                                      ; preds = %if.end.109
  %62 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %62, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.119:                                       ; preds = %if.end.109
  %63 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc120 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %63, i32 0, i32 68
  %flags121 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc120, i32 0, i32 0
  %64 = load i64, i64* %flags121, align 8, !tbaa !5
  %and122 = and i64 %64, 1
  %tobool123 = icmp ne i64 %and122, 0
  %cond124 = select i1 %tobool123, i32 1, i32 0
  store i32 %cond124, i32* %btmp, align 4, !tbaa !26
  %65 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call125 = call i32 @param_write_bool(%struct.gs_param_list_s* %65, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.25, i32 0, i32 0), i32* %btmp) #5
  store i32 %call125, i32* %code, align 4, !tbaa !26
  %66 = load i32, i32* %code, align 4, !tbaa !26
  %cmp126 = icmp slt i32 %66, 0
  br i1 %cmp126, label %if.then.128, label %if.end.129

if.then.128:                                      ; preds = %if.end.119
  %67 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %67, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.129:                                       ; preds = %if.end.119
  %68 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc130 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %68, i32 0, i32 68
  %flags131 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc130, i32 0, i32 0
  %69 = load i64, i64* %flags131, align 8, !tbaa !5
  %and132 = and i64 %69, 2
  %tobool133 = icmp ne i64 %and132, 0
  %cond134 = select i1 %tobool133, i32 1, i32 0
  store i32 %cond134, i32* %btmp, align 4, !tbaa !26
  %70 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call135 = call i32 @param_write_bool(%struct.gs_param_list_s* %70, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.26, i32 0, i32 0), i32* %btmp) #5
  store i32 %call135, i32* %code, align 4, !tbaa !26
  %71 = load i32, i32* %code, align 4, !tbaa !26
  %cmp136 = icmp slt i32 %71, 0
  br i1 %cmp136, label %if.then.138, label %if.end.139

if.then.138:                                      ; preds = %if.end.129
  %72 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %72, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.139:                                       ; preds = %if.end.129
  %73 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc140 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %73, i32 0, i32 68
  %flags141 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc140, i32 0, i32 0
  %74 = load i64, i64* %flags141, align 8, !tbaa !5
  %and142 = and i64 %74, 4
  %tobool143 = icmp ne i64 %and142, 0
  %cond144 = select i1 %tobool143, i32 1, i32 0
  store i32 %cond144, i32* %btmp, align 4, !tbaa !26
  %75 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call145 = call i32 @param_write_bool(%struct.gs_param_list_s* %75, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.27, i32 0, i32 0), i32* %btmp) #5
  store i32 %call145, i32* %code, align 4, !tbaa !26
  %76 = load i32, i32* %code, align 4, !tbaa !26
  %cmp146 = icmp slt i32 %76, 0
  br i1 %cmp146, label %if.then.148, label %if.end.149

if.then.148:                                      ; preds = %if.end.139
  %77 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %77, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.149:                                       ; preds = %if.end.139
  %78 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc150 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %78, i32 0, i32 68
  %flags151 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc150, i32 0, i32 0
  %79 = load i64, i64* %flags151, align 8, !tbaa !5
  %and152 = and i64 %79, 8
  %tobool153 = icmp ne i64 %and152, 0
  %cond154 = select i1 %tobool153, i32 1, i32 0
  store i32 %cond154, i32* %btmp, align 4, !tbaa !26
  %80 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call155 = call i32 @param_write_bool(%struct.gs_param_list_s* %80, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i32 0, i32 0), i32* %btmp) #5
  store i32 %call155, i32* %code, align 4, !tbaa !26
  %81 = load i32, i32* %code, align 4, !tbaa !26
  %cmp156 = icmp slt i32 %81, 0
  br i1 %cmp156, label %if.then.158, label %if.end.159

if.then.158:                                      ; preds = %if.end.149
  %82 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %82, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.159:                                       ; preds = %if.end.149
  %83 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc160 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %83, i32 0, i32 68
  %flags161 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc160, i32 0, i32 0
  %84 = load i64, i64* %flags161, align 8, !tbaa !5
  %and162 = and i64 %84, 16
  %tobool163 = icmp ne i64 %and162, 0
  %cond164 = select i1 %tobool163, i32 1, i32 0
  store i32 %cond164, i32* %btmp, align 4, !tbaa !26
  %85 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call165 = call i32 @param_write_bool(%struct.gs_param_list_s* %85, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.29, i32 0, i32 0), i32* %btmp) #5
  store i32 %call165, i32* %code, align 4, !tbaa !26
  %86 = load i32, i32* %code, align 4, !tbaa !26
  %cmp166 = icmp slt i32 %86, 0
  br i1 %cmp166, label %if.then.168, label %if.end.169

if.then.168:                                      ; preds = %if.end.159
  %87 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %87, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.169:                                       ; preds = %if.end.159
  %88 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %89 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc170 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %89, i32 0, i32 68
  %escp_m = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc170, i32 0, i32 28
  %call171 = call i32 @param_write_int(%struct.gs_param_list_s* %88, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.30, i32 0, i32 0), i32* %escp_m) #5
  store i32 %call171, i32* %code, align 4, !tbaa !26
  %90 = load i32, i32* %code, align 4, !tbaa !26
  %cmp172 = icmp slt i32 %90, 0
  br i1 %cmp172, label %if.then.174, label %if.end.175

if.then.174:                                      ; preds = %if.end.169
  %91 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %91, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.175:                                       ; preds = %if.end.169
  %92 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %93 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc176 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %93, i32 0, i32 68
  %escp_width = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc176, i32 0, i32 15
  %call177 = call i32 @param_write_int(%struct.gs_param_list_s* %92, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.31, i32 0, i32 0), i32* %escp_width) #5
  store i32 %call177, i32* %code, align 4, !tbaa !26
  %94 = load i32, i32* %code, align 4, !tbaa !26
  %cmp178 = icmp slt i32 %94, 0
  br i1 %cmp178, label %if.then.180, label %if.end.181

if.then.180:                                      ; preds = %if.end.175
  %95 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %95, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.181:                                       ; preds = %if.end.175
  %96 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %97 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc182 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %97, i32 0, i32 68
  %escp_height = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc182, i32 0, i32 16
  %call183 = call i32 @param_write_int(%struct.gs_param_list_s* %96, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.32, i32 0, i32 0), i32* %escp_height) #5
  store i32 %call183, i32* %code, align 4, !tbaa !26
  %98 = load i32, i32* %code, align 4, !tbaa !26
  %cmp184 = icmp slt i32 %98, 0
  br i1 %cmp184, label %if.then.186, label %if.end.187

if.then.186:                                      ; preds = %if.end.181
  %99 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %99, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.187:                                       ; preds = %if.end.181
  %100 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %101 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc188 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %101, i32 0, i32 68
  %escp_top = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc188, i32 0, i32 17
  %call189 = call i32 @param_write_int(%struct.gs_param_list_s* %100, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.33, i32 0, i32 0), i32* %escp_top) #5
  store i32 %call189, i32* %code, align 4, !tbaa !26
  %102 = load i32, i32* %code, align 4, !tbaa !26
  %cmp190 = icmp slt i32 %102, 0
  br i1 %cmp190, label %if.then.192, label %if.end.193

if.then.192:                                      ; preds = %if.end.187
  %103 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %103, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.193:                                       ; preds = %if.end.187
  %104 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %105 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc194 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %105, i32 0, i32 68
  %escp_bottom = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc194, i32 0, i32 18
  %call195 = call i32 @param_write_int(%struct.gs_param_list_s* %104, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.34, i32 0, i32 0), i32* %escp_bottom) #5
  store i32 %call195, i32* %code, align 4, !tbaa !26
  %106 = load i32, i32* %code, align 4, !tbaa !26
  %cmp196 = icmp slt i32 %106, 0
  br i1 %cmp196, label %if.then.198, label %if.end.199

if.then.198:                                      ; preds = %if.end.193
  %107 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %107, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.199:                                       ; preds = %if.end.193
  %108 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %109 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc200 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %109, i32 0, i32 68
  %escp_init = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc200, i32 0, i32 13
  %call201 = call i32 @param_write_string(%struct.gs_param_list_s* %108, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.35, i32 0, i32 0), %struct.gs_param_string_s* %escp_init) #5
  store i32 %call201, i32* %code, align 4, !tbaa !26
  %110 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %111 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc202 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %111, i32 0, i32 68
  %escp_release = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc202, i32 0, i32 14
  %call203 = call i32 @param_write_string(%struct.gs_param_list_s* %110, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.36, i32 0, i32 0), %struct.gs_param_string_s* %escp_release) #5
  store i32 %call203, i32* %code, align 4, !tbaa !26
  %112 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc204 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %112, i32 0, i32 68
  %dither = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc204, i32 0, i32 2
  %113 = load %struct.stc_dither_s*, %struct.stc_dither_s** %dither, align 8, !tbaa !41
  %cmp205 = icmp ne %struct.stc_dither_s* %113, null
  br i1 %cmp205, label %if.then.207, label %if.else.217

if.then.207:                                      ; preds = %if.end.199
  %114 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc208 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %114, i32 0, i32 68
  %dither209 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc208, i32 0, i32 2
  %115 = load %struct.stc_dither_s*, %struct.stc_dither_s** %dither209, align 8, !tbaa !41
  %name = getelementptr inbounds %struct.stc_dither_s, %struct.stc_dither_s* %115, i32 0, i32 0
  %116 = load i8*, i8** %name, align 8, !tbaa !67
  %data210 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %ps, i32 0, i32 0
  store i8* %116, i8** %data210, align 8, !tbaa !70
  %data211 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %ps, i32 0, i32 0
  %117 = load i8*, i8** %data211, align 8, !tbaa !70
  %call212 = call i64 @strlen(i8* %117) #7
  %conv213 = trunc i64 %call212 to i32
  %size214 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %ps, i32 0, i32 1
  store i32 %conv213, i32* %size214, align 4, !tbaa !71
  %persistent215 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %ps, i32 0, i32 2
  store i32 1, i32* %persistent215, align 4, !tbaa !72
  %118 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call216 = call i32 @param_write_string(%struct.gs_param_list_s* %118, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.37, i32 0, i32 0), %struct.gs_param_string_s* %ps) #5
  store i32 %call216, i32* %code, align 4, !tbaa !26
  br label %if.end.219

if.else.217:                                      ; preds = %if.end.199
  %119 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call218 = call i32 @param_write_null(%struct.gs_param_list_s* %119, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.37, i32 0, i32 0)) #5
  store i32 %call218, i32* %code, align 4, !tbaa !26
  br label %if.end.219

if.end.219:                                       ; preds = %if.else.217, %if.then.207
  %120 = load i32, i32* %code, align 4, !tbaa !26
  %cmp220 = icmp slt i32 %120, 0
  br i1 %cmp220, label %if.then.222, label %if.end.223

if.then.222:                                      ; preds = %if.end.219
  %121 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %121, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.223:                                       ; preds = %if.end.219
  %122 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %color_info = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %122, i32 0, i32 11
  %num_components = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info, i32 0, i32 1
  %123 = load i32, i32* %num_components, align 4, !tbaa !40
  store i32 %123, i32* %nc, align 4, !tbaa !26
  %124 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc224 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %124, i32 0, i32 68
  %am = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc224, i32 0, i32 3
  %125 = load float*, float** %am, align 8, !tbaa !86
  %cmp225 = icmp ne float* %125, null
  br i1 %cmp225, label %if.then.227, label %if.else.254

if.then.227:                                      ; preds = %if.end.223
  %126 = load i32, i32* %nc, align 4, !tbaa !26
  %cmp228 = icmp eq i32 %126, 1
  br i1 %cmp228, label %if.then.230, label %if.else.236

if.then.230:                                      ; preds = %if.then.227
  %127 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc231 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %127, i32 0, i32 68
  %am232 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc231, i32 0, i32 3
  %128 = load float*, float** %am232, align 8, !tbaa !86
  %data233 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 0
  store float* %128, float** %data233, align 8, !tbaa !87
  %size234 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 1
  store i32 3, i32* %size234, align 4, !tbaa !89
  %persistent235 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 2
  store i32 0, i32* %persistent235, align 4, !tbaa !90
  br label %if.end.252

if.else.236:                                      ; preds = %if.then.227
  %129 = load i32, i32* %nc, align 4, !tbaa !26
  %cmp237 = icmp eq i32 %129, 3
  br i1 %cmp237, label %if.then.239, label %if.else.245

if.then.239:                                      ; preds = %if.else.236
  %130 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc240 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %130, i32 0, i32 68
  %am241 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc240, i32 0, i32 3
  %131 = load float*, float** %am241, align 8, !tbaa !86
  %data242 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 0
  store float* %131, float** %data242, align 8, !tbaa !87
  %size243 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 1
  store i32 9, i32* %size243, align 4, !tbaa !89
  %persistent244 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 2
  store i32 0, i32* %persistent244, align 4, !tbaa !90
  br label %if.end.251

if.else.245:                                      ; preds = %if.else.236
  %132 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc246 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %132, i32 0, i32 68
  %am247 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc246, i32 0, i32 3
  %133 = load float*, float** %am247, align 8, !tbaa !86
  %data248 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 0
  store float* %133, float** %data248, align 8, !tbaa !87
  %size249 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 1
  store i32 16, i32* %size249, align 4, !tbaa !89
  %persistent250 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 2
  store i32 0, i32* %persistent250, align 4, !tbaa !90
  br label %if.end.251

if.end.251:                                       ; preds = %if.else.245, %if.then.239
  br label %if.end.252

if.end.252:                                       ; preds = %if.end.251, %if.then.230
  %134 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call253 = call i32 @param_write_float_array(%struct.gs_param_list_s* %134, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.38, i32 0, i32 0), %struct.gs_param_float_array_s* %pfa) #5
  store i32 %call253, i32* %code, align 4, !tbaa !26
  br label %if.end.256

if.else.254:                                      ; preds = %if.end.223
  %135 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call255 = call i32 @param_write_null(%struct.gs_param_list_s* %135, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.38, i32 0, i32 0)) #5
  store i32 %call255, i32* %code, align 4, !tbaa !26
  br label %if.end.256

if.end.256:                                       ; preds = %if.else.254, %if.end.252
  %136 = load i32, i32* %code, align 4, !tbaa !26
  %cmp257 = icmp slt i32 %136, 0
  br i1 %cmp257, label %if.then.259, label %if.end.260

if.then.259:                                      ; preds = %if.end.256
  %137 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %137, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.260:                                       ; preds = %if.end.256
  %138 = load i32, i32* %nc, align 4, !tbaa !26
  %cmp261 = icmp eq i32 %138, 1
  br i1 %cmp261, label %if.then.263, label %if.else.403

if.then.263:                                      ; preds = %if.end.260
  %139 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc264 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %139, i32 0, i32 68
  %sizc = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc264, i32 0, i32 5
  %arrayidx = getelementptr inbounds [4 x i32], [4 x i32]* %sizc, i32 0, i64 0
  %140 = load i32, i32* %arrayidx, align 4, !tbaa !26
  %cmp265 = icmp ugt i32 %140, 0
  br i1 %cmp265, label %if.then.267, label %if.else.277

if.then.267:                                      ; preds = %if.then.263
  %141 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc268 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %141, i32 0, i32 68
  %extc = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc268, i32 0, i32 4
  %arrayidx269 = getelementptr inbounds [4 x float*], [4 x float*]* %extc, i32 0, i64 0
  %142 = load float*, float** %arrayidx269, align 8, !tbaa !1
  %data270 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 0
  store float* %142, float** %data270, align 8, !tbaa !87
  %143 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc271 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %143, i32 0, i32 68
  %sizc272 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc271, i32 0, i32 5
  %arrayidx273 = getelementptr inbounds [4 x i32], [4 x i32]* %sizc272, i32 0, i64 0
  %144 = load i32, i32* %arrayidx273, align 4, !tbaa !26
  %size274 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 1
  store i32 %144, i32* %size274, align 4, !tbaa !89
  %persistent275 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 2
  store i32 0, i32* %persistent275, align 4, !tbaa !90
  %145 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call276 = call i32 @param_write_float_array(%struct.gs_param_list_s* %145, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i32 0, i32 0), %struct.gs_param_float_array_s* %pfa) #5
  store i32 %call276, i32* %code, align 4, !tbaa !26
  br label %if.end.279

if.else.277:                                      ; preds = %if.then.263
  %146 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call278 = call i32 @param_write_null(%struct.gs_param_list_s* %146, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i32 0, i32 0)) #5
  store i32 %call278, i32* %code, align 4, !tbaa !26
  br label %if.end.279

if.end.279:                                       ; preds = %if.else.277, %if.then.267
  %147 = load i32, i32* %code, align 4, !tbaa !26
  %cmp280 = icmp slt i32 %147, 0
  br i1 %cmp280, label %if.then.282, label %if.end.283

if.then.282:                                      ; preds = %if.end.279
  %148 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %148, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.283:                                       ; preds = %if.end.279
  %149 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc284 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %149, i32 0, i32 68
  %sizv = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc284, i32 0, i32 8
  %arrayidx285 = getelementptr inbounds [4 x i32], [4 x i32]* %sizv, i32 0, i64 0
  %150 = load i32, i32* %arrayidx285, align 4, !tbaa !26
  %cmp286 = icmp ugt i32 %150, 0
  br i1 %cmp286, label %if.then.288, label %if.else.297

if.then.288:                                      ; preds = %if.end.283
  %151 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc289 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %151, i32 0, i32 68
  %extv = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc289, i32 0, i32 7
  %arrayidx290 = getelementptr inbounds [4 x float*], [4 x float*]* %extv, i32 0, i64 0
  %152 = load float*, float** %arrayidx290, align 8, !tbaa !1
  %data291 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 0
  store float* %152, float** %data291, align 8, !tbaa !87
  %153 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc292 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %153, i32 0, i32 68
  %sizv293 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc292, i32 0, i32 8
  %arrayidx294 = getelementptr inbounds [4 x i32], [4 x i32]* %sizv293, i32 0, i64 0
  %154 = load i32, i32* %arrayidx294, align 4, !tbaa !26
  %size295 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 1
  store i32 %154, i32* %size295, align 4, !tbaa !89
  %persistent296 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 2
  store i32 0, i32* %persistent296, align 4, !tbaa !90
  br label %if.end.301

if.else.297:                                      ; preds = %if.end.283
  %data298 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 0
  store float* getelementptr inbounds ([2 x float], [2 x float]* @defext, i32 0, i32 0), float** %data298, align 8, !tbaa !87
  %size299 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 1
  store i32 2, i32* %size299, align 4, !tbaa !89
  %persistent300 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 2
  store i32 0, i32* %persistent300, align 4, !tbaa !90
  br label %if.end.301

if.end.301:                                       ; preds = %if.else.297, %if.then.288
  %155 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call302 = call i32 @param_write_float_array(%struct.gs_param_list_s* %155, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.40, i32 0, i32 0), %struct.gs_param_float_array_s* %pfa) #5
  store i32 %call302, i32* %code, align 4, !tbaa !26
  %156 = load i32, i32* %code, align 4, !tbaa !26
  %cmp303 = icmp slt i32 %156, 0
  br i1 %cmp303, label %if.then.305, label %if.end.306

if.then.305:                                      ; preds = %if.end.301
  %157 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %157, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.306:                                       ; preds = %if.end.301
  %data307 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 0
  store float* getelementptr inbounds ([2 x float], [2 x float]* @defext, i32 0, i32 0), float** %data307, align 8, !tbaa !87
  %size308 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 1
  store i32 2, i32* %size308, align 4, !tbaa !89
  %persistent309 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 2
  store i32 0, i32* %persistent309, align 4, !tbaa !90
  %158 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call310 = call i32 @param_write_null(%struct.gs_param_list_s* %158, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.41, i32 0, i32 0)) #5
  store i32 %call310, i32* %code, align 4, !tbaa !26
  %159 = load i32, i32* %code, align 4, !tbaa !26
  %cmp311 = icmp slt i32 %159, 0
  br i1 %cmp311, label %if.then.313, label %if.end.314

if.then.313:                                      ; preds = %if.end.306
  %160 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %160, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.314:                                       ; preds = %if.end.306
  %data315 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 0
  store float* getelementptr inbounds ([2 x float], [2 x float]* @defext, i32 0, i32 0), float** %data315, align 8, !tbaa !87
  %size316 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 1
  store i32 2, i32* %size316, align 4, !tbaa !89
  %persistent317 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 2
  store i32 0, i32* %persistent317, align 4, !tbaa !90
  %161 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call318 = call i32 @param_write_null(%struct.gs_param_list_s* %161, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.42, i32 0, i32 0)) #5
  store i32 %call318, i32* %code, align 4, !tbaa !26
  %162 = load i32, i32* %code, align 4, !tbaa !26
  %cmp319 = icmp slt i32 %162, 0
  br i1 %cmp319, label %if.then.321, label %if.end.322

if.then.321:                                      ; preds = %if.end.314
  %163 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %163, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.322:                                       ; preds = %if.end.314
  %data323 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 0
  store float* getelementptr inbounds ([2 x float], [2 x float]* @defext, i32 0, i32 0), float** %data323, align 8, !tbaa !87
  %size324 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 1
  store i32 2, i32* %size324, align 4, !tbaa !89
  %persistent325 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 2
  store i32 0, i32* %persistent325, align 4, !tbaa !90
  %164 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call326 = call i32 @param_write_null(%struct.gs_param_list_s* %164, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.43, i32 0, i32 0)) #5
  store i32 %call326, i32* %code, align 4, !tbaa !26
  %165 = load i32, i32* %code, align 4, !tbaa !26
  %cmp327 = icmp slt i32 %165, 0
  br i1 %cmp327, label %if.then.329, label %if.end.330

if.then.329:                                      ; preds = %if.end.322
  %166 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %166, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.330:                                       ; preds = %if.end.322
  %data331 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 0
  store float* getelementptr inbounds ([2 x float], [2 x float]* @defext, i32 0, i32 0), float** %data331, align 8, !tbaa !87
  %size332 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 1
  store i32 2, i32* %size332, align 4, !tbaa !89
  %persistent333 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 2
  store i32 0, i32* %persistent333, align 4, !tbaa !90
  %167 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call334 = call i32 @param_write_null(%struct.gs_param_list_s* %167, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.44, i32 0, i32 0)) #5
  store i32 %call334, i32* %code, align 4, !tbaa !26
  %168 = load i32, i32* %code, align 4, !tbaa !26
  %cmp335 = icmp slt i32 %168, 0
  br i1 %cmp335, label %if.then.337, label %if.end.338

if.then.337:                                      ; preds = %if.end.330
  %169 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %169, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.338:                                       ; preds = %if.end.330
  %data339 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 0
  store float* getelementptr inbounds ([2 x float], [2 x float]* @defext, i32 0, i32 0), float** %data339, align 8, !tbaa !87
  %size340 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 1
  store i32 2, i32* %size340, align 4, !tbaa !89
  %persistent341 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 2
  store i32 0, i32* %persistent341, align 4, !tbaa !90
  %170 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call342 = call i32 @param_write_null(%struct.gs_param_list_s* %170, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.45, i32 0, i32 0)) #5
  store i32 %call342, i32* %code, align 4, !tbaa !26
  %171 = load i32, i32* %code, align 4, !tbaa !26
  %cmp343 = icmp slt i32 %171, 0
  br i1 %cmp343, label %if.then.345, label %if.end.346

if.then.345:                                      ; preds = %if.end.338
  %172 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %172, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.346:                                       ; preds = %if.end.338
  %data347 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 0
  store float* getelementptr inbounds ([2 x float], [2 x float]* @defext, i32 0, i32 0), float** %data347, align 8, !tbaa !87
  %size348 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 1
  store i32 2, i32* %size348, align 4, !tbaa !89
  %persistent349 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 2
  store i32 0, i32* %persistent349, align 4, !tbaa !90
  %173 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call350 = call i32 @param_write_null(%struct.gs_param_list_s* %173, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.46, i32 0, i32 0)) #5
  store i32 %call350, i32* %code, align 4, !tbaa !26
  %174 = load i32, i32* %code, align 4, !tbaa !26
  %cmp351 = icmp slt i32 %174, 0
  br i1 %cmp351, label %if.then.353, label %if.end.354

if.then.353:                                      ; preds = %if.end.346
  %175 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %175, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.354:                                       ; preds = %if.end.346
  %data355 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 0
  store float* getelementptr inbounds ([2 x float], [2 x float]* @defext, i32 0, i32 0), float** %data355, align 8, !tbaa !87
  %size356 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 1
  store i32 2, i32* %size356, align 4, !tbaa !89
  %persistent357 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 2
  store i32 0, i32* %persistent357, align 4, !tbaa !90
  %176 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call358 = call i32 @param_write_null(%struct.gs_param_list_s* %176, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.47, i32 0, i32 0)) #5
  store i32 %call358, i32* %code, align 4, !tbaa !26
  %177 = load i32, i32* %code, align 4, !tbaa !26
  %cmp359 = icmp slt i32 %177, 0
  br i1 %cmp359, label %if.then.361, label %if.end.362

if.then.361:                                      ; preds = %if.end.354
  %178 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %178, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.362:                                       ; preds = %if.end.354
  %data363 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 0
  store float* getelementptr inbounds ([2 x float], [2 x float]* @defext, i32 0, i32 0), float** %data363, align 8, !tbaa !87
  %size364 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 1
  store i32 2, i32* %size364, align 4, !tbaa !89
  %persistent365 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 2
  store i32 0, i32* %persistent365, align 4, !tbaa !90
  %179 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call366 = call i32 @param_write_null(%struct.gs_param_list_s* %179, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.48, i32 0, i32 0)) #5
  store i32 %call366, i32* %code, align 4, !tbaa !26
  %180 = load i32, i32* %code, align 4, !tbaa !26
  %cmp367 = icmp slt i32 %180, 0
  br i1 %cmp367, label %if.then.369, label %if.end.370

if.then.369:                                      ; preds = %if.end.362
  %181 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %181, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.370:                                       ; preds = %if.end.362
  %data371 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 0
  store float* getelementptr inbounds ([2 x float], [2 x float]* @defext, i32 0, i32 0), float** %data371, align 8, !tbaa !87
  %size372 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 1
  store i32 2, i32* %size372, align 4, !tbaa !89
  %persistent373 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 2
  store i32 0, i32* %persistent373, align 4, !tbaa !90
  %182 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call374 = call i32 @param_write_null(%struct.gs_param_list_s* %182, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.49, i32 0, i32 0)) #5
  store i32 %call374, i32* %code, align 4, !tbaa !26
  %183 = load i32, i32* %code, align 4, !tbaa !26
  %cmp375 = icmp slt i32 %183, 0
  br i1 %cmp375, label %if.then.377, label %if.end.378

if.then.377:                                      ; preds = %if.end.370
  %184 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %184, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.378:                                       ; preds = %if.end.370
  %data379 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 0
  store float* getelementptr inbounds ([2 x float], [2 x float]* @defext, i32 0, i32 0), float** %data379, align 8, !tbaa !87
  %size380 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 1
  store i32 2, i32* %size380, align 4, !tbaa !89
  %persistent381 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 2
  store i32 0, i32* %persistent381, align 4, !tbaa !90
  %185 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call382 = call i32 @param_write_null(%struct.gs_param_list_s* %185, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.50, i32 0, i32 0)) #5
  store i32 %call382, i32* %code, align 4, !tbaa !26
  %186 = load i32, i32* %code, align 4, !tbaa !26
  %cmp383 = icmp slt i32 %186, 0
  br i1 %cmp383, label %if.then.385, label %if.end.386

if.then.385:                                      ; preds = %if.end.378
  %187 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %187, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.386:                                       ; preds = %if.end.378
  %data387 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 0
  store float* getelementptr inbounds ([2 x float], [2 x float]* @defext, i32 0, i32 0), float** %data387, align 8, !tbaa !87
  %size388 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 1
  store i32 2, i32* %size388, align 4, !tbaa !89
  %persistent389 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 2
  store i32 0, i32* %persistent389, align 4, !tbaa !90
  %188 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call390 = call i32 @param_write_null(%struct.gs_param_list_s* %188, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.51, i32 0, i32 0)) #5
  store i32 %call390, i32* %code, align 4, !tbaa !26
  %189 = load i32, i32* %code, align 4, !tbaa !26
  %cmp391 = icmp slt i32 %189, 0
  br i1 %cmp391, label %if.then.393, label %if.end.394

if.then.393:                                      ; preds = %if.end.386
  %190 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %190, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.394:                                       ; preds = %if.end.386
  %data395 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 0
  store float* getelementptr inbounds ([2 x float], [2 x float]* @defext, i32 0, i32 0), float** %data395, align 8, !tbaa !87
  %size396 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 1
  store i32 2, i32* %size396, align 4, !tbaa !89
  %persistent397 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 2
  store i32 0, i32* %persistent397, align 4, !tbaa !90
  %191 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call398 = call i32 @param_write_null(%struct.gs_param_list_s* %191, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.52, i32 0, i32 0)) #5
  store i32 %call398, i32* %code, align 4, !tbaa !26
  %192 = load i32, i32* %code, align 4, !tbaa !26
  %cmp399 = icmp slt i32 %192, 0
  br i1 %cmp399, label %if.then.401, label %if.end.402

if.then.401:                                      ; preds = %if.end.394
  %193 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %193, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.402:                                       ; preds = %if.end.394
  br label %if.end.857

if.else.403:                                      ; preds = %if.end.260
  %194 = load i32, i32* %nc, align 4, !tbaa !26
  %cmp404 = icmp eq i32 %194, 3
  br i1 %cmp404, label %if.then.406, label %if.else.615

if.then.406:                                      ; preds = %if.else.403
  %195 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc407 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %195, i32 0, i32 68
  %sizc408 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc407, i32 0, i32 5
  %arrayidx409 = getelementptr inbounds [4 x i32], [4 x i32]* %sizc408, i32 0, i64 0
  %196 = load i32, i32* %arrayidx409, align 4, !tbaa !26
  %cmp410 = icmp ugt i32 %196, 0
  br i1 %cmp410, label %if.then.412, label %if.else.423

if.then.412:                                      ; preds = %if.then.406
  %197 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc413 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %197, i32 0, i32 68
  %extc414 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc413, i32 0, i32 4
  %arrayidx415 = getelementptr inbounds [4 x float*], [4 x float*]* %extc414, i32 0, i64 0
  %198 = load float*, float** %arrayidx415, align 8, !tbaa !1
  %data416 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 0
  store float* %198, float** %data416, align 8, !tbaa !87
  %199 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc417 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %199, i32 0, i32 68
  %sizc418 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc417, i32 0, i32 5
  %arrayidx419 = getelementptr inbounds [4 x i32], [4 x i32]* %sizc418, i32 0, i64 0
  %200 = load i32, i32* %arrayidx419, align 4, !tbaa !26
  %size420 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 1
  store i32 %200, i32* %size420, align 4, !tbaa !89
  %persistent421 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 2
  store i32 0, i32* %persistent421, align 4, !tbaa !90
  %201 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call422 = call i32 @param_write_float_array(%struct.gs_param_list_s* %201, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.41, i32 0, i32 0), %struct.gs_param_float_array_s* %pfa) #5
  store i32 %call422, i32* %code, align 4, !tbaa !26
  br label %if.end.425

if.else.423:                                      ; preds = %if.then.406
  %202 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call424 = call i32 @param_write_null(%struct.gs_param_list_s* %202, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.41, i32 0, i32 0)) #5
  store i32 %call424, i32* %code, align 4, !tbaa !26
  br label %if.end.425

if.end.425:                                       ; preds = %if.else.423, %if.then.412
  %203 = load i32, i32* %code, align 4, !tbaa !26
  %cmp426 = icmp slt i32 %203, 0
  br i1 %cmp426, label %if.then.428, label %if.end.429

if.then.428:                                      ; preds = %if.end.425
  %204 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %204, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.429:                                       ; preds = %if.end.425
  %205 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc430 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %205, i32 0, i32 68
  %sizv431 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc430, i32 0, i32 8
  %arrayidx432 = getelementptr inbounds [4 x i32], [4 x i32]* %sizv431, i32 0, i64 0
  %206 = load i32, i32* %arrayidx432, align 4, !tbaa !26
  %cmp433 = icmp ugt i32 %206, 0
  br i1 %cmp433, label %if.then.435, label %if.else.445

if.then.435:                                      ; preds = %if.end.429
  %207 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc436 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %207, i32 0, i32 68
  %extv437 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc436, i32 0, i32 7
  %arrayidx438 = getelementptr inbounds [4 x float*], [4 x float*]* %extv437, i32 0, i64 0
  %208 = load float*, float** %arrayidx438, align 8, !tbaa !1
  %data439 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 0
  store float* %208, float** %data439, align 8, !tbaa !87
  %209 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc440 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %209, i32 0, i32 68
  %sizv441 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc440, i32 0, i32 8
  %arrayidx442 = getelementptr inbounds [4 x i32], [4 x i32]* %sizv441, i32 0, i64 0
  %210 = load i32, i32* %arrayidx442, align 4, !tbaa !26
  %size443 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 1
  store i32 %210, i32* %size443, align 4, !tbaa !89
  %persistent444 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 2
  store i32 0, i32* %persistent444, align 4, !tbaa !90
  br label %if.end.449

if.else.445:                                      ; preds = %if.end.429
  %data446 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 0
  store float* getelementptr inbounds ([2 x float], [2 x float]* @defext, i32 0, i32 0), float** %data446, align 8, !tbaa !87
  %size447 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 1
  store i32 2, i32* %size447, align 4, !tbaa !89
  %persistent448 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 2
  store i32 0, i32* %persistent448, align 4, !tbaa !90
  br label %if.end.449

if.end.449:                                       ; preds = %if.else.445, %if.then.435
  %211 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call450 = call i32 @param_write_float_array(%struct.gs_param_list_s* %211, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.42, i32 0, i32 0), %struct.gs_param_float_array_s* %pfa) #5
  store i32 %call450, i32* %code, align 4, !tbaa !26
  %212 = load i32, i32* %code, align 4, !tbaa !26
  %cmp451 = icmp slt i32 %212, 0
  br i1 %cmp451, label %if.then.453, label %if.end.454

if.then.453:                                      ; preds = %if.end.449
  %213 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %213, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.454:                                       ; preds = %if.end.449
  %214 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc455 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %214, i32 0, i32 68
  %sizc456 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc455, i32 0, i32 5
  %arrayidx457 = getelementptr inbounds [4 x i32], [4 x i32]* %sizc456, i32 0, i64 1
  %215 = load i32, i32* %arrayidx457, align 4, !tbaa !26
  %cmp458 = icmp ugt i32 %215, 0
  br i1 %cmp458, label %if.then.460, label %if.else.471

if.then.460:                                      ; preds = %if.end.454
  %216 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc461 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %216, i32 0, i32 68
  %extc462 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc461, i32 0, i32 4
  %arrayidx463 = getelementptr inbounds [4 x float*], [4 x float*]* %extc462, i32 0, i64 1
  %217 = load float*, float** %arrayidx463, align 8, !tbaa !1
  %data464 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 0
  store float* %217, float** %data464, align 8, !tbaa !87
  %218 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc465 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %218, i32 0, i32 68
  %sizc466 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc465, i32 0, i32 5
  %arrayidx467 = getelementptr inbounds [4 x i32], [4 x i32]* %sizc466, i32 0, i64 1
  %219 = load i32, i32* %arrayidx467, align 4, !tbaa !26
  %size468 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 1
  store i32 %219, i32* %size468, align 4, !tbaa !89
  %persistent469 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 2
  store i32 0, i32* %persistent469, align 4, !tbaa !90
  %220 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call470 = call i32 @param_write_float_array(%struct.gs_param_list_s* %220, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.43, i32 0, i32 0), %struct.gs_param_float_array_s* %pfa) #5
  store i32 %call470, i32* %code, align 4, !tbaa !26
  br label %if.end.473

if.else.471:                                      ; preds = %if.end.454
  %221 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call472 = call i32 @param_write_null(%struct.gs_param_list_s* %221, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.43, i32 0, i32 0)) #5
  store i32 %call472, i32* %code, align 4, !tbaa !26
  br label %if.end.473

if.end.473:                                       ; preds = %if.else.471, %if.then.460
  %222 = load i32, i32* %code, align 4, !tbaa !26
  %cmp474 = icmp slt i32 %222, 0
  br i1 %cmp474, label %if.then.476, label %if.end.477

if.then.476:                                      ; preds = %if.end.473
  %223 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %223, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.477:                                       ; preds = %if.end.473
  %224 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc478 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %224, i32 0, i32 68
  %sizv479 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc478, i32 0, i32 8
  %arrayidx480 = getelementptr inbounds [4 x i32], [4 x i32]* %sizv479, i32 0, i64 1
  %225 = load i32, i32* %arrayidx480, align 4, !tbaa !26
  %cmp481 = icmp ugt i32 %225, 0
  br i1 %cmp481, label %if.then.483, label %if.else.493

if.then.483:                                      ; preds = %if.end.477
  %226 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc484 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %226, i32 0, i32 68
  %extv485 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc484, i32 0, i32 7
  %arrayidx486 = getelementptr inbounds [4 x float*], [4 x float*]* %extv485, i32 0, i64 1
  %227 = load float*, float** %arrayidx486, align 8, !tbaa !1
  %data487 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 0
  store float* %227, float** %data487, align 8, !tbaa !87
  %228 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc488 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %228, i32 0, i32 68
  %sizv489 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc488, i32 0, i32 8
  %arrayidx490 = getelementptr inbounds [4 x i32], [4 x i32]* %sizv489, i32 0, i64 1
  %229 = load i32, i32* %arrayidx490, align 4, !tbaa !26
  %size491 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 1
  store i32 %229, i32* %size491, align 4, !tbaa !89
  %persistent492 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 2
  store i32 0, i32* %persistent492, align 4, !tbaa !90
  br label %if.end.497

if.else.493:                                      ; preds = %if.end.477
  %data494 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 0
  store float* getelementptr inbounds ([2 x float], [2 x float]* @defext, i32 0, i32 0), float** %data494, align 8, !tbaa !87
  %size495 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 1
  store i32 2, i32* %size495, align 4, !tbaa !89
  %persistent496 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 2
  store i32 0, i32* %persistent496, align 4, !tbaa !90
  br label %if.end.497

if.end.497:                                       ; preds = %if.else.493, %if.then.483
  %230 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call498 = call i32 @param_write_float_array(%struct.gs_param_list_s* %230, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.44, i32 0, i32 0), %struct.gs_param_float_array_s* %pfa) #5
  store i32 %call498, i32* %code, align 4, !tbaa !26
  %231 = load i32, i32* %code, align 4, !tbaa !26
  %cmp499 = icmp slt i32 %231, 0
  br i1 %cmp499, label %if.then.501, label %if.end.502

if.then.501:                                      ; preds = %if.end.497
  %232 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %232, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.502:                                       ; preds = %if.end.497
  %233 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc503 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %233, i32 0, i32 68
  %sizc504 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc503, i32 0, i32 5
  %arrayidx505 = getelementptr inbounds [4 x i32], [4 x i32]* %sizc504, i32 0, i64 2
  %234 = load i32, i32* %arrayidx505, align 4, !tbaa !26
  %cmp506 = icmp ugt i32 %234, 0
  br i1 %cmp506, label %if.then.508, label %if.else.519

if.then.508:                                      ; preds = %if.end.502
  %235 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc509 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %235, i32 0, i32 68
  %extc510 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc509, i32 0, i32 4
  %arrayidx511 = getelementptr inbounds [4 x float*], [4 x float*]* %extc510, i32 0, i64 2
  %236 = load float*, float** %arrayidx511, align 8, !tbaa !1
  %data512 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 0
  store float* %236, float** %data512, align 8, !tbaa !87
  %237 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc513 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %237, i32 0, i32 68
  %sizc514 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc513, i32 0, i32 5
  %arrayidx515 = getelementptr inbounds [4 x i32], [4 x i32]* %sizc514, i32 0, i64 2
  %238 = load i32, i32* %arrayidx515, align 4, !tbaa !26
  %size516 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 1
  store i32 %238, i32* %size516, align 4, !tbaa !89
  %persistent517 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 2
  store i32 0, i32* %persistent517, align 4, !tbaa !90
  %239 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call518 = call i32 @param_write_float_array(%struct.gs_param_list_s* %239, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.45, i32 0, i32 0), %struct.gs_param_float_array_s* %pfa) #5
  store i32 %call518, i32* %code, align 4, !tbaa !26
  br label %if.end.521

if.else.519:                                      ; preds = %if.end.502
  %240 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call520 = call i32 @param_write_null(%struct.gs_param_list_s* %240, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.45, i32 0, i32 0)) #5
  store i32 %call520, i32* %code, align 4, !tbaa !26
  br label %if.end.521

if.end.521:                                       ; preds = %if.else.519, %if.then.508
  %241 = load i32, i32* %code, align 4, !tbaa !26
  %cmp522 = icmp slt i32 %241, 0
  br i1 %cmp522, label %if.then.524, label %if.end.525

if.then.524:                                      ; preds = %if.end.521
  %242 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %242, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.525:                                       ; preds = %if.end.521
  %243 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc526 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %243, i32 0, i32 68
  %sizv527 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc526, i32 0, i32 8
  %arrayidx528 = getelementptr inbounds [4 x i32], [4 x i32]* %sizv527, i32 0, i64 2
  %244 = load i32, i32* %arrayidx528, align 4, !tbaa !26
  %cmp529 = icmp ugt i32 %244, 0
  br i1 %cmp529, label %if.then.531, label %if.else.541

if.then.531:                                      ; preds = %if.end.525
  %245 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc532 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %245, i32 0, i32 68
  %extv533 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc532, i32 0, i32 7
  %arrayidx534 = getelementptr inbounds [4 x float*], [4 x float*]* %extv533, i32 0, i64 2
  %246 = load float*, float** %arrayidx534, align 8, !tbaa !1
  %data535 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 0
  store float* %246, float** %data535, align 8, !tbaa !87
  %247 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc536 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %247, i32 0, i32 68
  %sizv537 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc536, i32 0, i32 8
  %arrayidx538 = getelementptr inbounds [4 x i32], [4 x i32]* %sizv537, i32 0, i64 2
  %248 = load i32, i32* %arrayidx538, align 4, !tbaa !26
  %size539 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 1
  store i32 %248, i32* %size539, align 4, !tbaa !89
  %persistent540 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 2
  store i32 0, i32* %persistent540, align 4, !tbaa !90
  br label %if.end.545

if.else.541:                                      ; preds = %if.end.525
  %data542 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 0
  store float* getelementptr inbounds ([2 x float], [2 x float]* @defext, i32 0, i32 0), float** %data542, align 8, !tbaa !87
  %size543 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 1
  store i32 2, i32* %size543, align 4, !tbaa !89
  %persistent544 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 2
  store i32 0, i32* %persistent544, align 4, !tbaa !90
  br label %if.end.545

if.end.545:                                       ; preds = %if.else.541, %if.then.531
  %249 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call546 = call i32 @param_write_float_array(%struct.gs_param_list_s* %249, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.46, i32 0, i32 0), %struct.gs_param_float_array_s* %pfa) #5
  store i32 %call546, i32* %code, align 4, !tbaa !26
  %250 = load i32, i32* %code, align 4, !tbaa !26
  %cmp547 = icmp slt i32 %250, 0
  br i1 %cmp547, label %if.then.549, label %if.end.550

if.then.549:                                      ; preds = %if.end.545
  %251 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %251, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.550:                                       ; preds = %if.end.545
  %data551 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 0
  store float* getelementptr inbounds ([2 x float], [2 x float]* @defext, i32 0, i32 0), float** %data551, align 8, !tbaa !87
  %size552 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 1
  store i32 2, i32* %size552, align 4, !tbaa !89
  %persistent553 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 2
  store i32 0, i32* %persistent553, align 4, !tbaa !90
  %252 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call554 = call i32 @param_write_null(%struct.gs_param_list_s* %252, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.47, i32 0, i32 0)) #5
  store i32 %call554, i32* %code, align 4, !tbaa !26
  %253 = load i32, i32* %code, align 4, !tbaa !26
  %cmp555 = icmp slt i32 %253, 0
  br i1 %cmp555, label %if.then.557, label %if.end.558

if.then.557:                                      ; preds = %if.end.550
  %254 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %254, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.558:                                       ; preds = %if.end.550
  %data559 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 0
  store float* getelementptr inbounds ([2 x float], [2 x float]* @defext, i32 0, i32 0), float** %data559, align 8, !tbaa !87
  %size560 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 1
  store i32 2, i32* %size560, align 4, !tbaa !89
  %persistent561 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 2
  store i32 0, i32* %persistent561, align 4, !tbaa !90
  %255 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call562 = call i32 @param_write_null(%struct.gs_param_list_s* %255, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.48, i32 0, i32 0)) #5
  store i32 %call562, i32* %code, align 4, !tbaa !26
  %256 = load i32, i32* %code, align 4, !tbaa !26
  %cmp563 = icmp slt i32 %256, 0
  br i1 %cmp563, label %if.then.565, label %if.end.566

if.then.565:                                      ; preds = %if.end.558
  %257 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %257, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.566:                                       ; preds = %if.end.558
  %data567 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 0
  store float* getelementptr inbounds ([2 x float], [2 x float]* @defext, i32 0, i32 0), float** %data567, align 8, !tbaa !87
  %size568 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 1
  store i32 2, i32* %size568, align 4, !tbaa !89
  %persistent569 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 2
  store i32 0, i32* %persistent569, align 4, !tbaa !90
  %258 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call570 = call i32 @param_write_null(%struct.gs_param_list_s* %258, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.49, i32 0, i32 0)) #5
  store i32 %call570, i32* %code, align 4, !tbaa !26
  %259 = load i32, i32* %code, align 4, !tbaa !26
  %cmp571 = icmp slt i32 %259, 0
  br i1 %cmp571, label %if.then.573, label %if.end.574

if.then.573:                                      ; preds = %if.end.566
  %260 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %260, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.574:                                       ; preds = %if.end.566
  %data575 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 0
  store float* getelementptr inbounds ([2 x float], [2 x float]* @defext, i32 0, i32 0), float** %data575, align 8, !tbaa !87
  %size576 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 1
  store i32 2, i32* %size576, align 4, !tbaa !89
  %persistent577 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 2
  store i32 0, i32* %persistent577, align 4, !tbaa !90
  %261 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call578 = call i32 @param_write_null(%struct.gs_param_list_s* %261, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.50, i32 0, i32 0)) #5
  store i32 %call578, i32* %code, align 4, !tbaa !26
  %262 = load i32, i32* %code, align 4, !tbaa !26
  %cmp579 = icmp slt i32 %262, 0
  br i1 %cmp579, label %if.then.581, label %if.end.582

if.then.581:                                      ; preds = %if.end.574
  %263 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %263, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.582:                                       ; preds = %if.end.574
  %data583 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 0
  store float* getelementptr inbounds ([2 x float], [2 x float]* @defext, i32 0, i32 0), float** %data583, align 8, !tbaa !87
  %size584 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 1
  store i32 2, i32* %size584, align 4, !tbaa !89
  %persistent585 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 2
  store i32 0, i32* %persistent585, align 4, !tbaa !90
  %264 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call586 = call i32 @param_write_null(%struct.gs_param_list_s* %264, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.51, i32 0, i32 0)) #5
  store i32 %call586, i32* %code, align 4, !tbaa !26
  %265 = load i32, i32* %code, align 4, !tbaa !26
  %cmp587 = icmp slt i32 %265, 0
  br i1 %cmp587, label %if.then.589, label %if.end.590

if.then.589:                                      ; preds = %if.end.582
  %266 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %266, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.590:                                       ; preds = %if.end.582
  %data591 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 0
  store float* getelementptr inbounds ([2 x float], [2 x float]* @defext, i32 0, i32 0), float** %data591, align 8, !tbaa !87
  %size592 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 1
  store i32 2, i32* %size592, align 4, !tbaa !89
  %persistent593 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 2
  store i32 0, i32* %persistent593, align 4, !tbaa !90
  %267 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call594 = call i32 @param_write_null(%struct.gs_param_list_s* %267, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.52, i32 0, i32 0)) #5
  store i32 %call594, i32* %code, align 4, !tbaa !26
  %268 = load i32, i32* %code, align 4, !tbaa !26
  %cmp595 = icmp slt i32 %268, 0
  br i1 %cmp595, label %if.then.597, label %if.end.598

if.then.597:                                      ; preds = %if.end.590
  %269 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %269, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.598:                                       ; preds = %if.end.590
  %data599 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 0
  store float* getelementptr inbounds ([2 x float], [2 x float]* @defext, i32 0, i32 0), float** %data599, align 8, !tbaa !87
  %size600 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 1
  store i32 2, i32* %size600, align 4, !tbaa !89
  %persistent601 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 2
  store i32 0, i32* %persistent601, align 4, !tbaa !90
  %270 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call602 = call i32 @param_write_null(%struct.gs_param_list_s* %270, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i32 0, i32 0)) #5
  store i32 %call602, i32* %code, align 4, !tbaa !26
  %271 = load i32, i32* %code, align 4, !tbaa !26
  %cmp603 = icmp slt i32 %271, 0
  br i1 %cmp603, label %if.then.605, label %if.end.606

if.then.605:                                      ; preds = %if.end.598
  %272 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %272, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.606:                                       ; preds = %if.end.598
  %data607 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 0
  store float* getelementptr inbounds ([2 x float], [2 x float]* @defext, i32 0, i32 0), float** %data607, align 8, !tbaa !87
  %size608 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 1
  store i32 2, i32* %size608, align 4, !tbaa !89
  %persistent609 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 2
  store i32 0, i32* %persistent609, align 4, !tbaa !90
  %273 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call610 = call i32 @param_write_null(%struct.gs_param_list_s* %273, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.40, i32 0, i32 0)) #5
  store i32 %call610, i32* %code, align 4, !tbaa !26
  %274 = load i32, i32* %code, align 4, !tbaa !26
  %cmp611 = icmp slt i32 %274, 0
  br i1 %cmp611, label %if.then.613, label %if.end.614

if.then.613:                                      ; preds = %if.end.606
  %275 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %275, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.614:                                       ; preds = %if.end.606
  br label %if.end.856

if.else.615:                                      ; preds = %if.else.403
  %276 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc616 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %276, i32 0, i32 68
  %sizc617 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc616, i32 0, i32 5
  %arrayidx618 = getelementptr inbounds [4 x i32], [4 x i32]* %sizc617, i32 0, i64 0
  %277 = load i32, i32* %arrayidx618, align 4, !tbaa !26
  %cmp619 = icmp ugt i32 %277, 0
  br i1 %cmp619, label %if.then.621, label %if.else.632

if.then.621:                                      ; preds = %if.else.615
  %278 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc622 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %278, i32 0, i32 68
  %extc623 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc622, i32 0, i32 4
  %arrayidx624 = getelementptr inbounds [4 x float*], [4 x float*]* %extc623, i32 0, i64 0
  %279 = load float*, float** %arrayidx624, align 8, !tbaa !1
  %data625 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 0
  store float* %279, float** %data625, align 8, !tbaa !87
  %280 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc626 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %280, i32 0, i32 68
  %sizc627 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc626, i32 0, i32 5
  %arrayidx628 = getelementptr inbounds [4 x i32], [4 x i32]* %sizc627, i32 0, i64 0
  %281 = load i32, i32* %arrayidx628, align 4, !tbaa !26
  %size629 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 1
  store i32 %281, i32* %size629, align 4, !tbaa !89
  %persistent630 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 2
  store i32 0, i32* %persistent630, align 4, !tbaa !90
  %282 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call631 = call i32 @param_write_float_array(%struct.gs_param_list_s* %282, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.47, i32 0, i32 0), %struct.gs_param_float_array_s* %pfa) #5
  store i32 %call631, i32* %code, align 4, !tbaa !26
  br label %if.end.634

if.else.632:                                      ; preds = %if.else.615
  %283 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call633 = call i32 @param_write_null(%struct.gs_param_list_s* %283, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.47, i32 0, i32 0)) #5
  store i32 %call633, i32* %code, align 4, !tbaa !26
  br label %if.end.634

if.end.634:                                       ; preds = %if.else.632, %if.then.621
  %284 = load i32, i32* %code, align 4, !tbaa !26
  %cmp635 = icmp slt i32 %284, 0
  br i1 %cmp635, label %if.then.637, label %if.end.638

if.then.637:                                      ; preds = %if.end.634
  %285 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %285, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.638:                                       ; preds = %if.end.634
  %286 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc639 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %286, i32 0, i32 68
  %sizv640 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc639, i32 0, i32 8
  %arrayidx641 = getelementptr inbounds [4 x i32], [4 x i32]* %sizv640, i32 0, i64 0
  %287 = load i32, i32* %arrayidx641, align 4, !tbaa !26
  %cmp642 = icmp ugt i32 %287, 0
  br i1 %cmp642, label %if.then.644, label %if.else.654

if.then.644:                                      ; preds = %if.end.638
  %288 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc645 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %288, i32 0, i32 68
  %extv646 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc645, i32 0, i32 7
  %arrayidx647 = getelementptr inbounds [4 x float*], [4 x float*]* %extv646, i32 0, i64 0
  %289 = load float*, float** %arrayidx647, align 8, !tbaa !1
  %data648 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 0
  store float* %289, float** %data648, align 8, !tbaa !87
  %290 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc649 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %290, i32 0, i32 68
  %sizv650 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc649, i32 0, i32 8
  %arrayidx651 = getelementptr inbounds [4 x i32], [4 x i32]* %sizv650, i32 0, i64 0
  %291 = load i32, i32* %arrayidx651, align 4, !tbaa !26
  %size652 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 1
  store i32 %291, i32* %size652, align 4, !tbaa !89
  %persistent653 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 2
  store i32 0, i32* %persistent653, align 4, !tbaa !90
  br label %if.end.658

if.else.654:                                      ; preds = %if.end.638
  %data655 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 0
  store float* getelementptr inbounds ([2 x float], [2 x float]* @defext, i32 0, i32 0), float** %data655, align 8, !tbaa !87
  %size656 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 1
  store i32 2, i32* %size656, align 4, !tbaa !89
  %persistent657 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 2
  store i32 0, i32* %persistent657, align 4, !tbaa !90
  br label %if.end.658

if.end.658:                                       ; preds = %if.else.654, %if.then.644
  %292 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call659 = call i32 @param_write_float_array(%struct.gs_param_list_s* %292, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.48, i32 0, i32 0), %struct.gs_param_float_array_s* %pfa) #5
  store i32 %call659, i32* %code, align 4, !tbaa !26
  %293 = load i32, i32* %code, align 4, !tbaa !26
  %cmp660 = icmp slt i32 %293, 0
  br i1 %cmp660, label %if.then.662, label %if.end.663

if.then.662:                                      ; preds = %if.end.658
  %294 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %294, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.663:                                       ; preds = %if.end.658
  %295 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc664 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %295, i32 0, i32 68
  %sizc665 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc664, i32 0, i32 5
  %arrayidx666 = getelementptr inbounds [4 x i32], [4 x i32]* %sizc665, i32 0, i64 1
  %296 = load i32, i32* %arrayidx666, align 4, !tbaa !26
  %cmp667 = icmp ugt i32 %296, 0
  br i1 %cmp667, label %if.then.669, label %if.else.680

if.then.669:                                      ; preds = %if.end.663
  %297 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc670 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %297, i32 0, i32 68
  %extc671 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc670, i32 0, i32 4
  %arrayidx672 = getelementptr inbounds [4 x float*], [4 x float*]* %extc671, i32 0, i64 1
  %298 = load float*, float** %arrayidx672, align 8, !tbaa !1
  %data673 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 0
  store float* %298, float** %data673, align 8, !tbaa !87
  %299 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc674 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %299, i32 0, i32 68
  %sizc675 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc674, i32 0, i32 5
  %arrayidx676 = getelementptr inbounds [4 x i32], [4 x i32]* %sizc675, i32 0, i64 1
  %300 = load i32, i32* %arrayidx676, align 4, !tbaa !26
  %size677 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 1
  store i32 %300, i32* %size677, align 4, !tbaa !89
  %persistent678 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 2
  store i32 0, i32* %persistent678, align 4, !tbaa !90
  %301 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call679 = call i32 @param_write_float_array(%struct.gs_param_list_s* %301, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.49, i32 0, i32 0), %struct.gs_param_float_array_s* %pfa) #5
  store i32 %call679, i32* %code, align 4, !tbaa !26
  br label %if.end.682

if.else.680:                                      ; preds = %if.end.663
  %302 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call681 = call i32 @param_write_null(%struct.gs_param_list_s* %302, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.49, i32 0, i32 0)) #5
  store i32 %call681, i32* %code, align 4, !tbaa !26
  br label %if.end.682

if.end.682:                                       ; preds = %if.else.680, %if.then.669
  %303 = load i32, i32* %code, align 4, !tbaa !26
  %cmp683 = icmp slt i32 %303, 0
  br i1 %cmp683, label %if.then.685, label %if.end.686

if.then.685:                                      ; preds = %if.end.682
  %304 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %304, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.686:                                       ; preds = %if.end.682
  %305 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc687 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %305, i32 0, i32 68
  %sizv688 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc687, i32 0, i32 8
  %arrayidx689 = getelementptr inbounds [4 x i32], [4 x i32]* %sizv688, i32 0, i64 1
  %306 = load i32, i32* %arrayidx689, align 4, !tbaa !26
  %cmp690 = icmp ugt i32 %306, 0
  br i1 %cmp690, label %if.then.692, label %if.else.702

if.then.692:                                      ; preds = %if.end.686
  %307 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc693 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %307, i32 0, i32 68
  %extv694 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc693, i32 0, i32 7
  %arrayidx695 = getelementptr inbounds [4 x float*], [4 x float*]* %extv694, i32 0, i64 1
  %308 = load float*, float** %arrayidx695, align 8, !tbaa !1
  %data696 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 0
  store float* %308, float** %data696, align 8, !tbaa !87
  %309 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc697 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %309, i32 0, i32 68
  %sizv698 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc697, i32 0, i32 8
  %arrayidx699 = getelementptr inbounds [4 x i32], [4 x i32]* %sizv698, i32 0, i64 1
  %310 = load i32, i32* %arrayidx699, align 4, !tbaa !26
  %size700 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 1
  store i32 %310, i32* %size700, align 4, !tbaa !89
  %persistent701 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 2
  store i32 0, i32* %persistent701, align 4, !tbaa !90
  br label %if.end.706

if.else.702:                                      ; preds = %if.end.686
  %data703 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 0
  store float* getelementptr inbounds ([2 x float], [2 x float]* @defext, i32 0, i32 0), float** %data703, align 8, !tbaa !87
  %size704 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 1
  store i32 2, i32* %size704, align 4, !tbaa !89
  %persistent705 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 2
  store i32 0, i32* %persistent705, align 4, !tbaa !90
  br label %if.end.706

if.end.706:                                       ; preds = %if.else.702, %if.then.692
  %311 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call707 = call i32 @param_write_float_array(%struct.gs_param_list_s* %311, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.50, i32 0, i32 0), %struct.gs_param_float_array_s* %pfa) #5
  store i32 %call707, i32* %code, align 4, !tbaa !26
  %312 = load i32, i32* %code, align 4, !tbaa !26
  %cmp708 = icmp slt i32 %312, 0
  br i1 %cmp708, label %if.then.710, label %if.end.711

if.then.710:                                      ; preds = %if.end.706
  %313 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %313, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.711:                                       ; preds = %if.end.706
  %314 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc712 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %314, i32 0, i32 68
  %sizc713 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc712, i32 0, i32 5
  %arrayidx714 = getelementptr inbounds [4 x i32], [4 x i32]* %sizc713, i32 0, i64 2
  %315 = load i32, i32* %arrayidx714, align 4, !tbaa !26
  %cmp715 = icmp ugt i32 %315, 0
  br i1 %cmp715, label %if.then.717, label %if.else.728

if.then.717:                                      ; preds = %if.end.711
  %316 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc718 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %316, i32 0, i32 68
  %extc719 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc718, i32 0, i32 4
  %arrayidx720 = getelementptr inbounds [4 x float*], [4 x float*]* %extc719, i32 0, i64 2
  %317 = load float*, float** %arrayidx720, align 8, !tbaa !1
  %data721 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 0
  store float* %317, float** %data721, align 8, !tbaa !87
  %318 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc722 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %318, i32 0, i32 68
  %sizc723 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc722, i32 0, i32 5
  %arrayidx724 = getelementptr inbounds [4 x i32], [4 x i32]* %sizc723, i32 0, i64 2
  %319 = load i32, i32* %arrayidx724, align 4, !tbaa !26
  %size725 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 1
  store i32 %319, i32* %size725, align 4, !tbaa !89
  %persistent726 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 2
  store i32 0, i32* %persistent726, align 4, !tbaa !90
  %320 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call727 = call i32 @param_write_float_array(%struct.gs_param_list_s* %320, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.51, i32 0, i32 0), %struct.gs_param_float_array_s* %pfa) #5
  store i32 %call727, i32* %code, align 4, !tbaa !26
  br label %if.end.730

if.else.728:                                      ; preds = %if.end.711
  %321 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call729 = call i32 @param_write_null(%struct.gs_param_list_s* %321, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.51, i32 0, i32 0)) #5
  store i32 %call729, i32* %code, align 4, !tbaa !26
  br label %if.end.730

if.end.730:                                       ; preds = %if.else.728, %if.then.717
  %322 = load i32, i32* %code, align 4, !tbaa !26
  %cmp731 = icmp slt i32 %322, 0
  br i1 %cmp731, label %if.then.733, label %if.end.734

if.then.733:                                      ; preds = %if.end.730
  %323 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %323, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.734:                                       ; preds = %if.end.730
  %324 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc735 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %324, i32 0, i32 68
  %sizv736 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc735, i32 0, i32 8
  %arrayidx737 = getelementptr inbounds [4 x i32], [4 x i32]* %sizv736, i32 0, i64 2
  %325 = load i32, i32* %arrayidx737, align 4, !tbaa !26
  %cmp738 = icmp ugt i32 %325, 0
  br i1 %cmp738, label %if.then.740, label %if.else.750

if.then.740:                                      ; preds = %if.end.734
  %326 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc741 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %326, i32 0, i32 68
  %extv742 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc741, i32 0, i32 7
  %arrayidx743 = getelementptr inbounds [4 x float*], [4 x float*]* %extv742, i32 0, i64 2
  %327 = load float*, float** %arrayidx743, align 8, !tbaa !1
  %data744 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 0
  store float* %327, float** %data744, align 8, !tbaa !87
  %328 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc745 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %328, i32 0, i32 68
  %sizv746 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc745, i32 0, i32 8
  %arrayidx747 = getelementptr inbounds [4 x i32], [4 x i32]* %sizv746, i32 0, i64 2
  %329 = load i32, i32* %arrayidx747, align 4, !tbaa !26
  %size748 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 1
  store i32 %329, i32* %size748, align 4, !tbaa !89
  %persistent749 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 2
  store i32 0, i32* %persistent749, align 4, !tbaa !90
  br label %if.end.754

if.else.750:                                      ; preds = %if.end.734
  %data751 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 0
  store float* getelementptr inbounds ([2 x float], [2 x float]* @defext, i32 0, i32 0), float** %data751, align 8, !tbaa !87
  %size752 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 1
  store i32 2, i32* %size752, align 4, !tbaa !89
  %persistent753 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 2
  store i32 0, i32* %persistent753, align 4, !tbaa !90
  br label %if.end.754

if.end.754:                                       ; preds = %if.else.750, %if.then.740
  %330 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call755 = call i32 @param_write_float_array(%struct.gs_param_list_s* %330, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.52, i32 0, i32 0), %struct.gs_param_float_array_s* %pfa) #5
  store i32 %call755, i32* %code, align 4, !tbaa !26
  %331 = load i32, i32* %code, align 4, !tbaa !26
  %cmp756 = icmp slt i32 %331, 0
  br i1 %cmp756, label %if.then.758, label %if.end.759

if.then.758:                                      ; preds = %if.end.754
  %332 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %332, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.759:                                       ; preds = %if.end.754
  %333 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc760 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %333, i32 0, i32 68
  %sizc761 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc760, i32 0, i32 5
  %arrayidx762 = getelementptr inbounds [4 x i32], [4 x i32]* %sizc761, i32 0, i64 3
  %334 = load i32, i32* %arrayidx762, align 4, !tbaa !26
  %cmp763 = icmp ugt i32 %334, 0
  br i1 %cmp763, label %if.then.765, label %if.else.776

if.then.765:                                      ; preds = %if.end.759
  %335 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc766 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %335, i32 0, i32 68
  %extc767 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc766, i32 0, i32 4
  %arrayidx768 = getelementptr inbounds [4 x float*], [4 x float*]* %extc767, i32 0, i64 3
  %336 = load float*, float** %arrayidx768, align 8, !tbaa !1
  %data769 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 0
  store float* %336, float** %data769, align 8, !tbaa !87
  %337 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc770 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %337, i32 0, i32 68
  %sizc771 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc770, i32 0, i32 5
  %arrayidx772 = getelementptr inbounds [4 x i32], [4 x i32]* %sizc771, i32 0, i64 3
  %338 = load i32, i32* %arrayidx772, align 4, !tbaa !26
  %size773 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 1
  store i32 %338, i32* %size773, align 4, !tbaa !89
  %persistent774 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 2
  store i32 0, i32* %persistent774, align 4, !tbaa !90
  %339 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call775 = call i32 @param_write_float_array(%struct.gs_param_list_s* %339, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i32 0, i32 0), %struct.gs_param_float_array_s* %pfa) #5
  store i32 %call775, i32* %code, align 4, !tbaa !26
  br label %if.end.778

if.else.776:                                      ; preds = %if.end.759
  %340 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call777 = call i32 @param_write_null(%struct.gs_param_list_s* %340, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i32 0, i32 0)) #5
  store i32 %call777, i32* %code, align 4, !tbaa !26
  br label %if.end.778

if.end.778:                                       ; preds = %if.else.776, %if.then.765
  %341 = load i32, i32* %code, align 4, !tbaa !26
  %cmp779 = icmp slt i32 %341, 0
  br i1 %cmp779, label %if.then.781, label %if.end.782

if.then.781:                                      ; preds = %if.end.778
  %342 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %342, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.782:                                       ; preds = %if.end.778
  %343 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc783 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %343, i32 0, i32 68
  %sizv784 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc783, i32 0, i32 8
  %arrayidx785 = getelementptr inbounds [4 x i32], [4 x i32]* %sizv784, i32 0, i64 3
  %344 = load i32, i32* %arrayidx785, align 4, !tbaa !26
  %cmp786 = icmp ugt i32 %344, 0
  br i1 %cmp786, label %if.then.788, label %if.else.798

if.then.788:                                      ; preds = %if.end.782
  %345 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc789 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %345, i32 0, i32 68
  %extv790 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc789, i32 0, i32 7
  %arrayidx791 = getelementptr inbounds [4 x float*], [4 x float*]* %extv790, i32 0, i64 3
  %346 = load float*, float** %arrayidx791, align 8, !tbaa !1
  %data792 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 0
  store float* %346, float** %data792, align 8, !tbaa !87
  %347 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc793 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %347, i32 0, i32 68
  %sizv794 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc793, i32 0, i32 8
  %arrayidx795 = getelementptr inbounds [4 x i32], [4 x i32]* %sizv794, i32 0, i64 3
  %348 = load i32, i32* %arrayidx795, align 4, !tbaa !26
  %size796 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 1
  store i32 %348, i32* %size796, align 4, !tbaa !89
  %persistent797 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 2
  store i32 0, i32* %persistent797, align 4, !tbaa !90
  br label %if.end.802

if.else.798:                                      ; preds = %if.end.782
  %data799 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 0
  store float* getelementptr inbounds ([2 x float], [2 x float]* @defext, i32 0, i32 0), float** %data799, align 8, !tbaa !87
  %size800 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 1
  store i32 2, i32* %size800, align 4, !tbaa !89
  %persistent801 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 2
  store i32 0, i32* %persistent801, align 4, !tbaa !90
  br label %if.end.802

if.end.802:                                       ; preds = %if.else.798, %if.then.788
  %349 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call803 = call i32 @param_write_float_array(%struct.gs_param_list_s* %349, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.40, i32 0, i32 0), %struct.gs_param_float_array_s* %pfa) #5
  store i32 %call803, i32* %code, align 4, !tbaa !26
  %350 = load i32, i32* %code, align 4, !tbaa !26
  %cmp804 = icmp slt i32 %350, 0
  br i1 %cmp804, label %if.then.806, label %if.end.807

if.then.806:                                      ; preds = %if.end.802
  %351 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %351, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.807:                                       ; preds = %if.end.802
  %data808 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 0
  store float* getelementptr inbounds ([2 x float], [2 x float]* @defext, i32 0, i32 0), float** %data808, align 8, !tbaa !87
  %size809 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 1
  store i32 2, i32* %size809, align 4, !tbaa !89
  %persistent810 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 2
  store i32 0, i32* %persistent810, align 4, !tbaa !90
  %352 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call811 = call i32 @param_write_null(%struct.gs_param_list_s* %352, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.41, i32 0, i32 0)) #5
  store i32 %call811, i32* %code, align 4, !tbaa !26
  %353 = load i32, i32* %code, align 4, !tbaa !26
  %cmp812 = icmp slt i32 %353, 0
  br i1 %cmp812, label %if.then.814, label %if.end.815

if.then.814:                                      ; preds = %if.end.807
  %354 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %354, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.815:                                       ; preds = %if.end.807
  %data816 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 0
  store float* getelementptr inbounds ([2 x float], [2 x float]* @defext, i32 0, i32 0), float** %data816, align 8, !tbaa !87
  %size817 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 1
  store i32 2, i32* %size817, align 4, !tbaa !89
  %persistent818 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 2
  store i32 0, i32* %persistent818, align 4, !tbaa !90
  %355 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call819 = call i32 @param_write_null(%struct.gs_param_list_s* %355, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.42, i32 0, i32 0)) #5
  store i32 %call819, i32* %code, align 4, !tbaa !26
  %356 = load i32, i32* %code, align 4, !tbaa !26
  %cmp820 = icmp slt i32 %356, 0
  br i1 %cmp820, label %if.then.822, label %if.end.823

if.then.822:                                      ; preds = %if.end.815
  %357 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %357, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.823:                                       ; preds = %if.end.815
  %data824 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 0
  store float* getelementptr inbounds ([2 x float], [2 x float]* @defext, i32 0, i32 0), float** %data824, align 8, !tbaa !87
  %size825 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 1
  store i32 2, i32* %size825, align 4, !tbaa !89
  %persistent826 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 2
  store i32 0, i32* %persistent826, align 4, !tbaa !90
  %358 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call827 = call i32 @param_write_null(%struct.gs_param_list_s* %358, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.43, i32 0, i32 0)) #5
  store i32 %call827, i32* %code, align 4, !tbaa !26
  %359 = load i32, i32* %code, align 4, !tbaa !26
  %cmp828 = icmp slt i32 %359, 0
  br i1 %cmp828, label %if.then.830, label %if.end.831

if.then.830:                                      ; preds = %if.end.823
  %360 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %360, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.831:                                       ; preds = %if.end.823
  %data832 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 0
  store float* getelementptr inbounds ([2 x float], [2 x float]* @defext, i32 0, i32 0), float** %data832, align 8, !tbaa !87
  %size833 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 1
  store i32 2, i32* %size833, align 4, !tbaa !89
  %persistent834 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 2
  store i32 0, i32* %persistent834, align 4, !tbaa !90
  %361 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call835 = call i32 @param_write_null(%struct.gs_param_list_s* %361, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.44, i32 0, i32 0)) #5
  store i32 %call835, i32* %code, align 4, !tbaa !26
  %362 = load i32, i32* %code, align 4, !tbaa !26
  %cmp836 = icmp slt i32 %362, 0
  br i1 %cmp836, label %if.then.838, label %if.end.839

if.then.838:                                      ; preds = %if.end.831
  %363 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %363, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.839:                                       ; preds = %if.end.831
  %data840 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 0
  store float* getelementptr inbounds ([2 x float], [2 x float]* @defext, i32 0, i32 0), float** %data840, align 8, !tbaa !87
  %size841 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 1
  store i32 2, i32* %size841, align 4, !tbaa !89
  %persistent842 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 2
  store i32 0, i32* %persistent842, align 4, !tbaa !90
  %364 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call843 = call i32 @param_write_null(%struct.gs_param_list_s* %364, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.45, i32 0, i32 0)) #5
  store i32 %call843, i32* %code, align 4, !tbaa !26
  %365 = load i32, i32* %code, align 4, !tbaa !26
  %cmp844 = icmp slt i32 %365, 0
  br i1 %cmp844, label %if.then.846, label %if.end.847

if.then.846:                                      ; preds = %if.end.839
  %366 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %366, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.847:                                       ; preds = %if.end.839
  %data848 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 0
  store float* getelementptr inbounds ([2 x float], [2 x float]* @defext, i32 0, i32 0), float** %data848, align 8, !tbaa !87
  %size849 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 1
  store i32 2, i32* %size849, align 4, !tbaa !89
  %persistent850 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 2
  store i32 0, i32* %persistent850, align 4, !tbaa !90
  %367 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call851 = call i32 @param_write_null(%struct.gs_param_list_s* %367, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.46, i32 0, i32 0)) #5
  store i32 %call851, i32* %code, align 4, !tbaa !26
  %368 = load i32, i32* %code, align 4, !tbaa !26
  %cmp852 = icmp slt i32 %368, 0
  br i1 %cmp852, label %if.then.854, label %if.end.855

if.then.854:                                      ; preds = %if.end.847
  %369 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %369, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.855:                                       ; preds = %if.end.847
  br label %if.end.856

if.end.856:                                       ; preds = %if.end.855, %if.end.614
  br label %if.end.857

if.end.857:                                       ; preds = %if.end.856, %if.end.402
  %370 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %370, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.857, %if.then.854, %if.then.846, %if.then.838, %if.then.830, %if.then.822, %if.then.814, %if.then.806, %if.then.781, %if.then.758, %if.then.733, %if.then.710, %if.then.685, %if.then.662, %if.then.637, %if.then.613, %if.then.605, %if.then.597, %if.then.589, %if.then.581, %if.then.573, %if.then.565, %if.then.557, %if.then.549, %if.then.524, %if.then.501, %if.then.476, %if.then.453, %if.then.428, %if.then.401, %if.then.393, %if.then.385, %if.then.377, %if.then.369, %if.then.361, %if.then.353, %if.then.345, %if.then.337, %if.then.329, %if.then.321, %if.then.313, %if.then.305, %if.then.282, %if.then.259, %if.then.222, %if.then.198, %if.then.192, %if.then.186, %if.then.180, %if.then.174, %if.then.168, %if.then.158, %if.then.148, %if.then.138, %if.then.128, %if.then.118, %if.then.108, %if.then.98, %if.then.88, %if.then.80, %if.then.50, %if.then.25, %if.then.11, %if.then.6, %if.then
  %371 = bitcast %struct.stcolor_device_s** %sd to i8*
  call void @llvm.lifetime.end(i64 8, i8* %371) #2
  %372 = bitcast i32* %btmp to i8*
  call void @llvm.lifetime.end(i64 4, i8* %372) #2
  %373 = bitcast %struct.gs_param_float_array_s* %pfa to i8*
  call void @llvm.lifetime.end(i64 16, i8* %373) #2
  %374 = bitcast %struct.gs_param_string_s* %ps to i8*
  call void @llvm.lifetime.end(i64 16, i8* %374) #2
  %375 = bitcast i32* %nc to i8*
  call void @llvm.lifetime.end(i64 4, i8* %375) #2
  %376 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %376) #2
  %377 = load i32, i32* %retval
  ret i32 %377
}

; Function Attrs: nounwind uwtable
define internal i32 @stc_put_params(%struct.gx_device_s* %pdev, %struct.gs_param_list_s* %plist) #1 {
entry:
  %pdev.addr = alloca %struct.gx_device_s*, align 8
  %plist.addr = alloca %struct.gs_param_list_s*, align 8
  %code = alloca i32, align 4
  %error = alloca i32, align 4
  %i = alloca i32, align 4
  %l = alloca i32, align 4
  %b1 = alloca i32, align 4
  %b2 = alloca i32, align 4
  %b3 = alloca i32, align 4
  %fv = alloca float, align 4
  %fp = alloca float*, align 8
  %ps = alloca %struct.gs_param_string_s, align 8
  %psa = alloca %struct.gs_param_string_array_s, align 8
  %pfa = alloca %struct.gs_param_float_array_s, align 8
  %sd = alloca %struct.stcolor_device_s*, align 8
  %oldcolor = alloca %struct.gx_device_color_info_s, align 8
  %oldstc = alloca %struct.stc_s, align 8
  %j = alloca i32, align 4
  %ip = alloca i8*, align 8
  %ip2752 = alloca i8*, align 8
  %j2883 = alloca i32, align 4
  %j3097 = alloca i32, align 4
  %doclose = alloca i32, align 4
  store %struct.gx_device_s* %pdev, %struct.gx_device_s** %pdev.addr, align 8, !tbaa !1
  store %struct.gs_param_list_s* %plist, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %0 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = bitcast i32* %error to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #2
  %2 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #2
  %3 = bitcast i32* %l to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #2
  %4 = bitcast i32* %b1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #2
  %5 = bitcast i32* %b2 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #2
  %6 = bitcast i32* %b3 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %6) #2
  %7 = bitcast float* %fv to i8*
  call void @llvm.lifetime.start(i64 4, i8* %7) #2
  %8 = bitcast float** %fp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8) #2
  %9 = bitcast %struct.gs_param_string_s* %ps to i8*
  call void @llvm.lifetime.start(i64 16, i8* %9) #2
  %10 = bitcast %struct.gs_param_string_array_s* %psa to i8*
  call void @llvm.lifetime.start(i64 16, i8* %10) #2
  %11 = bitcast %struct.gs_param_float_array_s* %pfa to i8*
  call void @llvm.lifetime.start(i64 16, i8* %11) #2
  %12 = bitcast %struct.stcolor_device_s** %sd to i8*
  call void @llvm.lifetime.start(i64 8, i8* %12) #2
  %13 = load %struct.gx_device_s*, %struct.gx_device_s** %pdev.addr, align 8, !tbaa !1
  %14 = bitcast %struct.gx_device_s* %13 to %struct.stcolor_device_s*
  store %struct.stcolor_device_s* %14, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %15 = bitcast %struct.gx_device_color_info_s* %oldcolor to i8*
  call void @llvm.lifetime.start(i64 720, i8* %15) #2
  %16 = bitcast %struct.stc_s* %oldstc to i8*
  call void @llvm.lifetime.start(i64 408, i8* %16) #2
  %17 = bitcast %struct.gx_device_color_info_s* %oldcolor to i8*
  %18 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %color_info = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %18, i32 0, i32 11
  %19 = bitcast %struct.gx_device_color_info_s* %color_info to i8*
  %call = call i8* @memcpy(i8* %17, i8* %19, i64 720) #6
  %20 = bitcast %struct.stc_s* %oldstc to i8*
  %21 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %21, i32 0, i32 68
  %22 = bitcast %struct.stc_s* %stc to i8*
  %call1 = call i8* @memcpy(i8* %20, i8* %22, i64 408) #6
  %23 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call2 = call i32 @param_read_string(%struct.gs_param_list_s* %23, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i32 0, i32 0), %struct.gs_param_string_s* %ps) #5
  store i32 %call2, i32* %code, align 4, !tbaa !26
  %24 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call3 = call i32 @param_read_int(%struct.gs_param_list_s* %24, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i32 0, i32 0), i32* %i) #5
  store i32 %call3, i32* %code, align 4, !tbaa !26
  %25 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call4 = call i32 @param_read_string_array(%struct.gs_param_list_s* %25, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12, i32 0, i32 0), %struct.gs_param_string_array_s* %psa) #5
  store i32 %call4, i32* %code, align 4, !tbaa !26
  store i32 0, i32* %error, align 4, !tbaa !26
  %26 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call5 = call i32 @param_read_string(%struct.gs_param_list_s* %26, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.20, i32 0, i32 0), %struct.gs_param_string_s* %ps) #5
  store i32 %call5, i32* %code, align 4, !tbaa !26
  %27 = load i32, i32* %code, align 4, !tbaa !26
  %cmp = icmp eq i32 %27, 0
  br i1 %cmp, label %if.then, label %if.end.37

if.then:                                          ; preds = %entry
  %size = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %ps, i32 0, i32 1
  %28 = load i32, i32* %size, align 4, !tbaa !71
  store i32 %28, i32* %l, align 4, !tbaa !26
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then
  %29 = load i32, i32* %l, align 4, !tbaa !26
  %cmp6 = icmp sgt i32 %29, 0
  br i1 %cmp6, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %for.cond
  %30 = load i32, i32* %l, align 4, !tbaa !26
  %sub = sub nsw i32 %30, 1
  %idxprom = sext i32 %sub to i64
  %data = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %ps, i32 0, i32 0
  %31 = load i8*, i8** %data, align 8, !tbaa !70
  %arrayidx = getelementptr inbounds i8, i8* %31, i64 %idxprom
  %32 = load i8, i8* %arrayidx, align 1, !tbaa !62
  %conv = zext i8 %32 to i32
  %cmp7 = icmp eq i32 %conv, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %33 = phi i1 [ false, %for.cond ], [ %cmp7, %land.rhs ]
  br i1 %33, label %for.body, label %for.end

for.body:                                         ; preds = %land.end
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %34 = load i32, i32* %l, align 4, !tbaa !26
  %dec = add nsw i32 %34, -1
  store i32 %dec, i32* %l, align 4, !tbaa !26
  br label %for.cond

for.end:                                          ; preds = %land.end
  %35 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc9 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %35, i32 0, i32 68
  %flags = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc9, i32 0, i32 0
  %36 = load i64, i64* %flags, align 8, !tbaa !5
  %and = and i64 %36, -61441
  store i64 %and, i64* %flags, align 8, !tbaa !5
  %call10 = call i64 @strlen(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i32 0, i32 0)) #7
  %37 = load i32, i32* %l, align 4, !tbaa !26
  %conv11 = sext i32 %37 to i64
  %cmp12 = icmp ne i64 %call10, %conv11
  br i1 %cmp12, label %if.else, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.end
  %data14 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %ps, i32 0, i32 0
  %38 = load i8*, i8** %data14, align 8, !tbaa !70
  %39 = load i32, i32* %l, align 4, !tbaa !26
  %conv15 = sext i32 %39 to i64
  %call16 = call i32 @strncmp(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i32 0, i32 0), i8* %38, i64 %conv15) #7
  %cmp17 = icmp ne i32 0, %call16
  br i1 %cmp17, label %if.else, label %if.then.19

if.then.19:                                       ; preds = %lor.lhs.false
  %40 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc20 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %40, i32 0, i32 68
  %flags21 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc20, i32 0, i32 0
  %41 = load i64, i64* %flags21, align 8, !tbaa !5
  %or = or i64 %41, 4096
  store i64 %or, i64* %flags21, align 8, !tbaa !5
  br label %if.end.36

if.else:                                          ; preds = %lor.lhs.false, %for.end
  %call22 = call i64 @strlen(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.18, i32 0, i32 0)) #7
  %42 = load i32, i32* %l, align 4, !tbaa !26
  %conv23 = sext i32 %42 to i64
  %cmp24 = icmp ne i64 %call22, %conv23
  br i1 %cmp24, label %if.end, label %lor.lhs.false.26

lor.lhs.false.26:                                 ; preds = %if.else
  %data27 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %ps, i32 0, i32 0
  %43 = load i8*, i8** %data27, align 8, !tbaa !70
  %44 = load i32, i32* %l, align 4, !tbaa !26
  %conv28 = sext i32 %44 to i64
  %call29 = call i32 @strncmp(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.18, i32 0, i32 0), i8* %43, i64 %conv28) #7
  %cmp30 = icmp ne i32 0, %call29
  br i1 %cmp30, label %if.end, label %if.then.32

if.then.32:                                       ; preds = %lor.lhs.false.26
  %45 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc33 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %45, i32 0, i32 68
  %flags34 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc33, i32 0, i32 0
  %46 = load i64, i64* %flags34, align 8, !tbaa !5
  %or35 = or i64 %46, 8192
  store i64 %or35, i64* %flags34, align 8, !tbaa !5
  br label %if.end

if.end:                                           ; preds = %if.then.32, %lor.lhs.false.26, %if.else
  br label %if.end.36

if.end.36:                                        ; preds = %if.end, %if.then.19
  br label %if.end.37

if.end.37:                                        ; preds = %if.end.36, %entry
  %47 = load i32, i32* %code, align 4, !tbaa !26
  %cmp38 = icmp slt i32 %47, 0
  br i1 %cmp38, label %if.then.40, label %if.end.42

if.then.40:                                       ; preds = %if.end.37
  %48 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %procs = getelementptr inbounds %struct.gs_param_list_s, %struct.gs_param_list_s* %48, i32 0, i32 0
  %49 = load %struct.gs_param_list_procs_s*, %struct.gs_param_list_procs_s** %procs, align 8, !tbaa !91
  %signal_error = getelementptr inbounds %struct.gs_param_list_procs_s, %struct.gs_param_list_procs_s* %49, i32 0, i32 7
  %50 = load i32 (%struct.gs_param_list_s*, i8*, i32)*, i32 (%struct.gs_param_list_s*, i8*, i32)** %signal_error, align 8, !tbaa !93
  %51 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %52 = load i32, i32* %code, align 4, !tbaa !26
  %call41 = call i32 %50(%struct.gs_param_list_s* %51, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.20, i32 0, i32 0), i32 %52) #5
  br label %if.end.42

if.end.42:                                        ; preds = %if.then.40, %if.end.37
  %53 = load i32, i32* %error, align 4, !tbaa !26
  %54 = load i32, i32* %code, align 4, !tbaa !26
  %cmp43 = icmp sgt i32 %53, %54
  br i1 %cmp43, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end.42
  %55 = load i32, i32* %code, align 4, !tbaa !26
  br label %cond.end

cond.false:                                       ; preds = %if.end.42
  %56 = load i32, i32* %error, align 4, !tbaa !26
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %55, %cond.true ], [ %56, %cond.false ]
  store i32 %cond, i32* %error, align 4, !tbaa !26
  %57 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc45 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %57, i32 0, i32 68
  %flags46 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc45, i32 0, i32 0
  %58 = load i64, i64* %flags46, align 8, !tbaa !5
  %and47 = and i64 %58, 61440
  %cmp48 = icmp eq i64 %and47, 4096
  br i1 %cmp48, label %land.lhs.true, label %if.end.69

land.lhs.true:                                    ; preds = %cond.end
  %59 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %color_info50 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %59, i32 0, i32 11
  %num_components = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info50, i32 0, i32 1
  %60 = load i32, i32* %num_components, align 4, !tbaa !40
  %cmp51 = icmp sgt i32 %60, 1
  br i1 %cmp51, label %if.then.64, label %lor.lhs.false.53

lor.lhs.false.53:                                 ; preds = %land.lhs.true
  %61 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc54 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %61, i32 0, i32 68
  %dither = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc54, i32 0, i32 2
  %62 = load %struct.stc_dither_s*, %struct.stc_dither_s** %dither, align 8, !tbaa !41
  %cmp55 = icmp eq %struct.stc_dither_s* %62, null
  br i1 %cmp55, label %if.then.64, label %lor.lhs.false.57

lor.lhs.false.57:                                 ; preds = %lor.lhs.false.53
  %63 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc58 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %63, i32 0, i32 68
  %dither59 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc58, i32 0, i32 2
  %64 = load %struct.stc_dither_s*, %struct.stc_dither_s** %dither59, align 8, !tbaa !41
  %flags60 = getelementptr inbounds %struct.stc_dither_s, %struct.stc_dither_s* %64, i32 0, i32 2
  %65 = load i32, i32* %flags60, align 4, !tbaa !42
  %and61 = and i32 %65, 7
  %cmp62 = icmp ugt i32 %and61, 1
  br i1 %cmp62, label %if.then.64, label %if.end.69

if.then.64:                                       ; preds = %lor.lhs.false.57, %lor.lhs.false.53, %land.lhs.true
  %66 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %color_info65 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %66, i32 0, i32 11
  %num_components66 = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info65, i32 0, i32 1
  store i32 1, i32* %num_components66, align 4, !tbaa !40
  %67 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc67 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %67, i32 0, i32 68
  %dither68 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc67, i32 0, i32 2
  store %struct.stc_dither_s* null, %struct.stc_dither_s** %dither68, align 8, !tbaa !41
  br label %if.end.69

if.end.69:                                        ; preds = %if.then.64, %lor.lhs.false.57, %cond.end
  %68 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc70 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %68, i32 0, i32 68
  %flags71 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc70, i32 0, i32 0
  %69 = load i64, i64* %flags71, align 8, !tbaa !5
  %and72 = and i64 %69, 61440
  %cmp73 = icmp eq i64 %and72, 4096
  br i1 %cmp73, label %if.then.75, label %if.else.82

if.then.75:                                       ; preds = %if.end.69
  %70 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc76 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %70, i32 0, i32 68
  %flags77 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc76, i32 0, i32 0
  %71 = load i64, i64* %flags77, align 8, !tbaa !5
  %and78 = and i64 %71, -129
  store i64 %and78, i64* %flags77, align 8, !tbaa !5
  %72 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc79 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %72, i32 0, i32 68
  %flags80 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc79, i32 0, i32 0
  %73 = load i64, i64* %flags80, align 8, !tbaa !5
  %or81 = or i64 %73, 256
  store i64 %or81, i64* %flags80, align 8, !tbaa !5
  br label %if.end.93

if.else.82:                                       ; preds = %if.end.69
  %74 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc83 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %74, i32 0, i32 68
  %flags84 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc83, i32 0, i32 0
  %75 = load i64, i64* %flags84, align 8, !tbaa !5
  %and85 = and i64 %75, 61440
  %cmp86 = icmp eq i64 %and85, 8192
  br i1 %cmp86, label %if.then.88, label %if.end.92

if.then.88:                                       ; preds = %if.else.82
  %76 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc89 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %76, i32 0, i32 68
  %flags90 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc89, i32 0, i32 0
  %77 = load i64, i64* %flags90, align 8, !tbaa !5
  %or91 = or i64 %77, 256
  store i64 %or91, i64* %flags90, align 8, !tbaa !5
  br label %if.end.92

if.end.92:                                        ; preds = %if.then.88, %if.else.82
  br label %if.end.93

if.end.93:                                        ; preds = %if.end.92, %if.then.75
  %78 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call94 = call i32 @param_read_string(%struct.gs_param_list_s* %78, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.37, i32 0, i32 0), %struct.gs_param_string_s* %ps) #5
  store i32 %call94, i32* %code, align 4, !tbaa !26
  %79 = load i32, i32* %code, align 4, !tbaa !26
  %cmp95 = icmp eq i32 %79, 0
  br i1 %cmp95, label %if.then.97, label %if.else.141

if.then.97:                                       ; preds = %if.end.93
  %size98 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %ps, i32 0, i32 1
  %80 = load i32, i32* %size98, align 4, !tbaa !71
  store i32 %80, i32* %l, align 4, !tbaa !26
  br label %for.cond.99

for.cond.99:                                      ; preds = %for.inc.112, %if.then.97
  %81 = load i32, i32* %l, align 4, !tbaa !26
  %cmp100 = icmp sgt i32 %81, 0
  br i1 %cmp100, label %land.rhs.102, label %land.end.110

land.rhs.102:                                     ; preds = %for.cond.99
  %82 = load i32, i32* %l, align 4, !tbaa !26
  %sub103 = sub nsw i32 %82, 1
  %idxprom104 = sext i32 %sub103 to i64
  %data105 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %ps, i32 0, i32 0
  %83 = load i8*, i8** %data105, align 8, !tbaa !70
  %arrayidx106 = getelementptr inbounds i8, i8* %83, i64 %idxprom104
  %84 = load i8, i8* %arrayidx106, align 1, !tbaa !62
  %conv107 = zext i8 %84 to i32
  %cmp108 = icmp eq i32 %conv107, 0
  br label %land.end.110

land.end.110:                                     ; preds = %land.rhs.102, %for.cond.99
  %85 = phi i1 [ false, %for.cond.99 ], [ %cmp108, %land.rhs.102 ]
  br i1 %85, label %for.body.111, label %for.end.114

for.body.111:                                     ; preds = %land.end.110
  br label %for.inc.112

for.inc.112:                                      ; preds = %for.body.111
  %86 = load i32, i32* %l, align 4, !tbaa !26
  %dec113 = add nsw i32 %86, -1
  store i32 %dec113, i32* %l, align 4, !tbaa !26
  br label %for.cond.99

for.end.114:                                      ; preds = %land.end.110
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond.115

for.cond.115:                                     ; preds = %for.inc.139, %for.end.114
  %87 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom116 = sext i32 %87 to i64
  %arrayidx117 = getelementptr inbounds [10 x %struct.stc_dither_s], [10 x %struct.stc_dither_s]* @stc_dither, i32 0, i64 %idxprom116
  %name = getelementptr inbounds %struct.stc_dither_s, %struct.stc_dither_s* %arrayidx117, i32 0, i32 0
  %88 = load i8*, i8** %name, align 8, !tbaa !67
  %cmp118 = icmp ne i8* %88, null
  br i1 %cmp118, label %for.body.120, label %for.end.140

for.body.120:                                     ; preds = %for.cond.115
  %89 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom121 = sext i32 %89 to i64
  %arrayidx122 = getelementptr inbounds [10 x %struct.stc_dither_s], [10 x %struct.stc_dither_s]* @stc_dither, i32 0, i64 %idxprom121
  %name123 = getelementptr inbounds %struct.stc_dither_s, %struct.stc_dither_s* %arrayidx122, i32 0, i32 0
  %90 = load i8*, i8** %name123, align 8, !tbaa !67
  %call124 = call i64 @strlen(i8* %90) #7
  %91 = load i32, i32* %l, align 4, !tbaa !26
  %conv125 = sext i32 %91 to i64
  %cmp126 = icmp ne i64 %call124, %conv125
  br i1 %cmp126, label %if.end.138, label %lor.lhs.false.128

lor.lhs.false.128:                                ; preds = %for.body.120
  %92 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom129 = sext i32 %92 to i64
  %arrayidx130 = getelementptr inbounds [10 x %struct.stc_dither_s], [10 x %struct.stc_dither_s]* @stc_dither, i32 0, i64 %idxprom129
  %name131 = getelementptr inbounds %struct.stc_dither_s, %struct.stc_dither_s* %arrayidx130, i32 0, i32 0
  %93 = load i8*, i8** %name131, align 8, !tbaa !67
  %data132 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %ps, i32 0, i32 0
  %94 = load i8*, i8** %data132, align 8, !tbaa !70
  %95 = load i32, i32* %l, align 4, !tbaa !26
  %conv133 = sext i32 %95 to i64
  %call134 = call i32 @strncmp(i8* %93, i8* %94, i64 %conv133) #7
  %cmp135 = icmp ne i32 0, %call134
  br i1 %cmp135, label %if.end.138, label %if.then.137

if.then.137:                                      ; preds = %lor.lhs.false.128
  br label %for.end.140

if.end.138:                                       ; preds = %lor.lhs.false.128, %for.body.120
  br label %for.inc.139

for.inc.139:                                      ; preds = %if.end.138
  %96 = load i32, i32* %i, align 4, !tbaa !26
  %inc = add nsw i32 %96, 1
  store i32 %inc, i32* %i, align 4, !tbaa !26
  br label %for.cond.115

for.end.140:                                      ; preds = %if.then.137, %for.cond.115
  br label %if.end.172

if.else.141:                                      ; preds = %if.end.93
  %97 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc142 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %97, i32 0, i32 68
  %dither143 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc142, i32 0, i32 2
  %98 = load %struct.stc_dither_s*, %struct.stc_dither_s** %dither143, align 8, !tbaa !41
  %cmp144 = icmp ne %struct.stc_dither_s* %98, null
  br i1 %cmp144, label %if.then.146, label %if.else.150

if.then.146:                                      ; preds = %if.else.141
  %99 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc147 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %99, i32 0, i32 68
  %dither148 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc147, i32 0, i32 2
  %100 = load %struct.stc_dither_s*, %struct.stc_dither_s** %dither148, align 8, !tbaa !41
  %sub.ptr.lhs.cast = ptrtoint %struct.stc_dither_s* %100 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, ptrtoint ([10 x %struct.stc_dither_s]* @stc_dither to i64)
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 40
  %conv149 = trunc i64 %sub.ptr.div to i32
  store i32 %conv149, i32* %i, align 4, !tbaa !26
  br label %if.end.171

if.else.150:                                      ; preds = %if.else.141
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond.151

for.cond.151:                                     ; preds = %for.inc.168, %if.else.150
  %101 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom152 = sext i32 %101 to i64
  %arrayidx153 = getelementptr inbounds [10 x %struct.stc_dither_s], [10 x %struct.stc_dither_s]* @stc_dither, i32 0, i64 %idxprom152
  %name154 = getelementptr inbounds %struct.stc_dither_s, %struct.stc_dither_s* %arrayidx153, i32 0, i32 0
  %102 = load i8*, i8** %name154, align 8, !tbaa !67
  %cmp155 = icmp ne i8* %102, null
  br i1 %cmp155, label %for.body.157, label %for.end.170

for.body.157:                                     ; preds = %for.cond.151
  %103 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom158 = sext i32 %103 to i64
  %arrayidx159 = getelementptr inbounds [10 x %struct.stc_dither_s], [10 x %struct.stc_dither_s]* @stc_dither, i32 0, i64 %idxprom158
  %flags160 = getelementptr inbounds %struct.stc_dither_s, %struct.stc_dither_s* %arrayidx159, i32 0, i32 2
  %104 = load i32, i32* %flags160, align 4, !tbaa !42
  %and161 = and i32 %104, 7
  %105 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %color_info162 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %105, i32 0, i32 11
  %num_components163 = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info162, i32 0, i32 1
  %106 = load i32, i32* %num_components163, align 4, !tbaa !40
  %cmp164 = icmp eq i32 %and161, %106
  br i1 %cmp164, label %if.then.166, label %if.end.167

if.then.166:                                      ; preds = %for.body.157
  br label %for.end.170

if.end.167:                                       ; preds = %for.body.157
  br label %for.inc.168

for.inc.168:                                      ; preds = %if.end.167
  %107 = load i32, i32* %i, align 4, !tbaa !26
  %inc169 = add nsw i32 %107, 1
  store i32 %inc169, i32* %i, align 4, !tbaa !26
  br label %for.cond.151

for.end.170:                                      ; preds = %if.then.166, %for.cond.151
  br label %if.end.171

if.end.171:                                       ; preds = %for.end.170, %if.then.146
  br label %if.end.172

if.end.172:                                       ; preds = %if.end.171, %for.end.140
  %108 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom173 = sext i32 %108 to i64
  %arrayidx174 = getelementptr inbounds [10 x %struct.stc_dither_s], [10 x %struct.stc_dither_s]* @stc_dither, i32 0, i64 %idxprom173
  %name175 = getelementptr inbounds %struct.stc_dither_s, %struct.stc_dither_s* %arrayidx174, i32 0, i32 0
  %109 = load i8*, i8** %name175, align 8, !tbaa !67
  %cmp176 = icmp ne i8* %109, null
  br i1 %cmp176, label %if.then.178, label %if.else.390

if.then.178:                                      ; preds = %if.end.172
  %110 = load i32, i32* %i, align 4, !tbaa !26
  %idx.ext = sext i32 %110 to i64
  %add.ptr = getelementptr inbounds %struct.stc_dither_s, %struct.stc_dither_s* getelementptr inbounds ([10 x %struct.stc_dither_s], [10 x %struct.stc_dither_s]* @stc_dither, i32 0, i32 0), i64 %idx.ext
  %111 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc179 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %111, i32 0, i32 68
  %dither180 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc179, i32 0, i32 2
  store %struct.stc_dither_s* %add.ptr, %struct.stc_dither_s** %dither180, align 8, !tbaa !41
  %112 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc181 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %112, i32 0, i32 68
  %dither182 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc181, i32 0, i32 2
  %113 = load %struct.stc_dither_s*, %struct.stc_dither_s** %dither182, align 8, !tbaa !41
  %flags183 = getelementptr inbounds %struct.stc_dither_s, %struct.stc_dither_s* %113, i32 0, i32 2
  %114 = load i32, i32* %flags183, align 4, !tbaa !42
  %and184 = and i32 %114, 7
  %115 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %color_info185 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %115, i32 0, i32 11
  %num_components186 = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info185, i32 0, i32 1
  store i32 %and184, i32* %num_components186, align 4, !tbaa !40
  %116 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc187 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %116, i32 0, i32 68
  %dither188 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc187, i32 0, i32 2
  %117 = load %struct.stc_dither_s*, %struct.stc_dither_s** %dither188, align 8, !tbaa !41
  %flags189 = getelementptr inbounds %struct.stc_dither_s, %struct.stc_dither_s* %117, i32 0, i32 2
  %118 = load i32, i32* %flags189, align 4, !tbaa !42
  %and190 = and i32 %118, 24
  switch i32 %and190, label %sw.default [
    i32 8, label %sw.bb
    i32 16, label %sw.bb.192
  ]

sw.bb:                                            ; preds = %if.then.178
  %119 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc191 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %119, i32 0, i32 68
  %alg_item = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc191, i32 0, i32 19
  store i32 1, i32* %alg_item, align 4, !tbaa !45
  br label %sw.epilog

sw.bb.192:                                        ; preds = %if.then.178
  %120 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc193 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %120, i32 0, i32 68
  %alg_item194 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc193, i32 0, i32 19
  store i32 8, i32* %alg_item194, align 4, !tbaa !45
  br label %sw.epilog

sw.default:                                       ; preds = %if.then.178
  %121 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc195 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %121, i32 0, i32 68
  %alg_item196 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc195, i32 0, i32 19
  store i32 4, i32* %alg_item196, align 4, !tbaa !45
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb.192, %sw.bb
  %122 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc197 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %122, i32 0, i32 68
  %flags198 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc197, i32 0, i32 0
  %123 = load i64, i64* %flags198, align 8, !tbaa !5
  %and199 = and i64 %123, 61440
  %cmp200 = icmp eq i64 %and199, 4096
  br i1 %cmp200, label %land.lhs.true.202, label %if.end.208

land.lhs.true.202:                                ; preds = %sw.epilog
  %124 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %color_info203 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %124, i32 0, i32 11
  %num_components204 = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info203, i32 0, i32 1
  %125 = load i32, i32* %num_components204, align 4, !tbaa !40
  %cmp205 = icmp sgt i32 %125, 1
  br i1 %cmp205, label %if.then.207, label %if.end.208

if.then.207:                                      ; preds = %land.lhs.true.202
  store i32 -15, i32* %code, align 4, !tbaa !26
  br label %if.end.208

if.end.208:                                       ; preds = %if.then.207, %land.lhs.true.202, %sw.epilog
  %126 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %color_info209 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %126, i32 0, i32 11
  %num_components210 = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info209, i32 0, i32 1
  %127 = load i32, i32* %num_components210, align 4, !tbaa !40
  %num_components211 = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %oldcolor, i32 0, i32 1
  %128 = load i32, i32* %num_components211, align 4, !tbaa !95
  %cmp212 = icmp ne i32 %127, %128
  br i1 %cmp212, label %if.then.214, label %if.else.237

if.then.214:                                      ; preds = %if.end.208
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond.215

for.cond.215:                                     ; preds = %for.inc.233, %if.then.214
  %129 = load i32, i32* %i, align 4, !tbaa !26
  %130 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %color_info216 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %130, i32 0, i32 11
  %num_components217 = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info216, i32 0, i32 1
  %131 = load i32, i32* %num_components217, align 4, !tbaa !40
  %cmp218 = icmp slt i32 %129, %131
  br i1 %cmp218, label %for.body.220, label %for.end.235

for.body.220:                                     ; preds = %for.cond.215
  %132 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom221 = sext i32 %132 to i64
  %133 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc222 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %133, i32 0, i32 68
  %extv = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc222, i32 0, i32 7
  %arrayidx223 = getelementptr inbounds [4 x float*], [4 x float*]* %extv, i32 0, i64 %idxprom221
  store float* getelementptr inbounds ([2 x float], [2 x float]* @defext, i32 0, i32 0), float** %arrayidx223, align 8, !tbaa !1
  %134 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom224 = sext i32 %134 to i64
  %135 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc225 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %135, i32 0, i32 68
  %sizv = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc225, i32 0, i32 8
  %arrayidx226 = getelementptr inbounds [4 x i32], [4 x i32]* %sizv, i32 0, i64 %idxprom224
  store i32 2, i32* %arrayidx226, align 4, !tbaa !26
  %136 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom227 = sext i32 %136 to i64
  %137 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc228 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %137, i32 0, i32 68
  %extc = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc228, i32 0, i32 4
  %arrayidx229 = getelementptr inbounds [4 x float*], [4 x float*]* %extc, i32 0, i64 %idxprom227
  store float* null, float** %arrayidx229, align 8, !tbaa !1
  %138 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom230 = sext i32 %138 to i64
  %139 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc231 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %139, i32 0, i32 68
  %sizc = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc231, i32 0, i32 5
  %arrayidx232 = getelementptr inbounds [4 x i32], [4 x i32]* %sizc, i32 0, i64 %idxprom230
  store i32 0, i32* %arrayidx232, align 4, !tbaa !26
  br label %for.inc.233

for.inc.233:                                      ; preds = %for.body.220
  %140 = load i32, i32* %i, align 4, !tbaa !26
  %inc234 = add nsw i32 %140, 1
  store i32 %inc234, i32* %i, align 4, !tbaa !26
  br label %for.cond.215

for.end.235:                                      ; preds = %for.cond.215
  %141 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc236 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %141, i32 0, i32 68
  %am = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc236, i32 0, i32 3
  store float* null, float** %am, align 8, !tbaa !86
  br label %if.end.263

if.else.237:                                      ; preds = %if.end.208
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond.238

for.cond.238:                                     ; preds = %for.inc.260, %if.else.237
  %142 = load i32, i32* %i, align 4, !tbaa !26
  %143 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %color_info239 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %143, i32 0, i32 11
  %num_components240 = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info239, i32 0, i32 1
  %144 = load i32, i32* %num_components240, align 4, !tbaa !40
  %cmp241 = icmp slt i32 %142, %144
  br i1 %cmp241, label %for.body.243, label %for.end.262

for.body.243:                                     ; preds = %for.cond.238
  %145 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom244 = sext i32 %145 to i64
  %146 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc245 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %146, i32 0, i32 68
  %sizv246 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc245, i32 0, i32 8
  %arrayidx247 = getelementptr inbounds [4 x i32], [4 x i32]* %sizv246, i32 0, i64 %idxprom244
  %147 = load i32, i32* %arrayidx247, align 4, !tbaa !26
  %cmp248 = icmp ult i32 %147, 2
  br i1 %cmp248, label %if.then.250, label %if.end.259

if.then.250:                                      ; preds = %for.body.243
  %148 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom251 = sext i32 %148 to i64
  %149 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc252 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %149, i32 0, i32 68
  %extv253 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc252, i32 0, i32 7
  %arrayidx254 = getelementptr inbounds [4 x float*], [4 x float*]* %extv253, i32 0, i64 %idxprom251
  store float* getelementptr inbounds ([2 x float], [2 x float]* @defext, i32 0, i32 0), float** %arrayidx254, align 8, !tbaa !1
  %150 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom255 = sext i32 %150 to i64
  %151 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc256 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %151, i32 0, i32 68
  %sizv257 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc256, i32 0, i32 8
  %arrayidx258 = getelementptr inbounds [4 x i32], [4 x i32]* %sizv257, i32 0, i64 %idxprom255
  store i32 2, i32* %arrayidx258, align 4, !tbaa !26
  br label %if.end.259

if.end.259:                                       ; preds = %if.then.250, %for.body.243
  br label %for.inc.260

for.inc.260:                                      ; preds = %if.end.259
  %152 = load i32, i32* %i, align 4, !tbaa !26
  %inc261 = add nsw i32 %152, 1
  store i32 %inc261, i32* %i, align 4, !tbaa !26
  br label %for.cond.238

for.end.262:                                      ; preds = %for.cond.238
  br label %if.end.263

if.end.263:                                       ; preds = %for.end.262, %for.end.235
  %153 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %color_info264 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %153, i32 0, i32 11
  %num_components265 = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info264, i32 0, i32 1
  %154 = load i32, i32* %num_components265, align 4, !tbaa !40
  store i32 %154, i32* %i, align 4, !tbaa !26
  br label %for.cond.266

for.cond.266:                                     ; preds = %for.inc.293, %if.end.263
  %155 = load i32, i32* %i, align 4, !tbaa !26
  %cmp267 = icmp slt i32 %155, 4
  br i1 %cmp267, label %for.body.269, label %for.end.295

for.body.269:                                     ; preds = %for.cond.266
  %156 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom270 = sext i32 %156 to i64
  %157 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc271 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %157, i32 0, i32 68
  %extv272 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc271, i32 0, i32 7
  %arrayidx273 = getelementptr inbounds [4 x float*], [4 x float*]* %extv272, i32 0, i64 %idxprom270
  store float* null, float** %arrayidx273, align 8, !tbaa !1
  %158 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom274 = sext i32 %158 to i64
  %159 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc275 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %159, i32 0, i32 68
  %sizv276 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc275, i32 0, i32 8
  %arrayidx277 = getelementptr inbounds [4 x i32], [4 x i32]* %sizv276, i32 0, i64 %idxprom274
  store i32 0, i32* %arrayidx277, align 4, !tbaa !26
  %160 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom278 = sext i32 %160 to i64
  %161 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc279 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %161, i32 0, i32 68
  %vals = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc279, i32 0, i32 9
  %arrayidx280 = getelementptr inbounds [4 x i8*], [4 x i8*]* %vals, i32 0, i64 %idxprom278
  store i8* null, i8** %arrayidx280, align 8, !tbaa !1
  %162 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom281 = sext i32 %162 to i64
  %163 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc282 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %163, i32 0, i32 68
  %extc283 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc282, i32 0, i32 4
  %arrayidx284 = getelementptr inbounds [4 x float*], [4 x float*]* %extc283, i32 0, i64 %idxprom281
  store float* null, float** %arrayidx284, align 8, !tbaa !1
  %164 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom285 = sext i32 %164 to i64
  %165 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc286 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %165, i32 0, i32 68
  %sizc287 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc286, i32 0, i32 5
  %arrayidx288 = getelementptr inbounds [4 x i32], [4 x i32]* %sizc287, i32 0, i64 %idxprom285
  store i32 0, i32* %arrayidx288, align 4, !tbaa !26
  %166 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom289 = sext i32 %166 to i64
  %167 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc290 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %167, i32 0, i32 68
  %code291 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc290, i32 0, i32 6
  %arrayidx292 = getelementptr inbounds [4 x i16*], [4 x i16*]* %code291, i32 0, i64 %idxprom289
  store i16* null, i16** %arrayidx292, align 8, !tbaa !1
  br label %for.inc.293

for.inc.293:                                      ; preds = %for.body.269
  %168 = load i32, i32* %i, align 4, !tbaa !26
  %inc294 = add nsw i32 %168, 1
  store i32 %inc294, i32* %i, align 4, !tbaa !26
  br label %for.cond.266

for.end.295:                                      ; preds = %for.cond.266
  %169 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc296 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %169, i32 0, i32 68
  %dither297 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc296, i32 0, i32 2
  %170 = load %struct.stc_dither_s*, %struct.stc_dither_s** %dither297, align 8, !tbaa !41
  %dither298 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %oldstc, i32 0, i32 2
  %171 = load %struct.stc_dither_s*, %struct.stc_dither_s** %dither298, align 8, !tbaa !96
  %cmp299 = icmp ne %struct.stc_dither_s* %170, %171
  br i1 %cmp299, label %if.then.306, label %lor.lhs.false.301

lor.lhs.false.301:                                ; preds = %for.end.295
  %vals302 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %oldstc, i32 0, i32 9
  %arrayidx303 = getelementptr inbounds [4 x i8*], [4 x i8*]* %vals302, i32 0, i64 0
  %172 = load i8*, i8** %arrayidx303, align 8, !tbaa !1
  %cmp304 = icmp eq i8* %172, null
  br i1 %cmp304, label %if.then.306, label %if.end.389

if.then.306:                                      ; preds = %lor.lhs.false.301, %for.end.295
  %173 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc307 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %173, i32 0, i32 68
  %dither308 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc307, i32 0, i32 2
  %174 = load %struct.stc_dither_s*, %struct.stc_dither_s** %dither308, align 8, !tbaa !41
  %flags309 = getelementptr inbounds %struct.stc_dither_s, %struct.stc_dither_s* %174, i32 0, i32 2
  %175 = load i32, i32* %flags309, align 4, !tbaa !42
  %and310 = and i32 %175, 32
  %cmp311 = icmp ne i32 %and310, 0
  br i1 %cmp311, label %if.then.313, label %if.else.319

if.then.313:                                      ; preds = %if.then.306
  %176 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc314 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %176, i32 0, i32 68
  %flags315 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc314, i32 0, i32 0
  %177 = load i64, i64* %flags315, align 8, !tbaa !5
  %or316 = or i64 %177, 32
  store i64 %or316, i64* %flags315, align 8, !tbaa !5
  %178 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc317 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %178, i32 0, i32 68
  %bits = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc317, i32 0, i32 1
  store i32 10, i32* %bits, align 4, !tbaa !44
  %179 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %color_info318 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %179, i32 0, i32 11
  %depth = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info318, i32 0, i32 3
  store i16 32, i16* %depth, align 2, !tbaa !54
  br label %if.end.388

if.else.319:                                      ; preds = %if.then.306
  %180 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc320 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %180, i32 0, i32 68
  %flags321 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc320, i32 0, i32 0
  %181 = load i64, i64* %flags321, align 8, !tbaa !5
  %and322 = and i64 %181, -33
  store i64 %and322, i64* %flags321, align 8, !tbaa !5
  %182 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc323 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %182, i32 0, i32 68
  %dither324 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc323, i32 0, i32 2
  %183 = load %struct.stc_dither_s*, %struct.stc_dither_s** %dither324, align 8, !tbaa !41
  %flags325 = getelementptr inbounds %struct.stc_dither_s, %struct.stc_dither_s* %183, i32 0, i32 2
  %184 = load i32, i32* %flags325, align 4, !tbaa !42
  %and326 = and i32 %184, 24
  %cmp327 = icmp ne i32 %and326, 24
  br i1 %cmp327, label %if.then.329, label %if.else.353

if.then.329:                                      ; preds = %if.else.319
  store float 2.000000e+00, float* %fv, align 4, !tbaa !37
  store i32 1, i32* %i, align 4, !tbaa !26
  br label %for.cond.330

for.cond.330:                                     ; preds = %for.inc.350, %if.then.329
  %185 = load i32, i32* %i, align 4, !tbaa !26
  %conv331 = sext i32 %185 to i64
  %cmp332 = icmp ult i64 %conv331, 16
  br i1 %cmp332, label %land.rhs.334, label %land.end.346

land.rhs.334:                                     ; preds = %for.cond.330
  %186 = load float, float* %fv, align 4, !tbaa !37
  %conv335 = fpext float %186 to double
  %187 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc336 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %187, i32 0, i32 68
  %dither337 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc336, i32 0, i32 2
  %188 = load %struct.stc_dither_s*, %struct.stc_dither_s** %dither337, align 8, !tbaa !41
  %minmax = getelementptr inbounds %struct.stc_dither_s, %struct.stc_dither_s* %188, i32 0, i32 4
  %arrayidx338 = getelementptr inbounds [2 x double], [2 x double]* %minmax, i32 0, i64 1
  %189 = load double, double* %arrayidx338, align 8, !tbaa !55
  %190 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc339 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %190, i32 0, i32 68
  %dither340 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc339, i32 0, i32 2
  %191 = load %struct.stc_dither_s*, %struct.stc_dither_s** %dither340, align 8, !tbaa !41
  %minmax341 = getelementptr inbounds %struct.stc_dither_s, %struct.stc_dither_s* %191, i32 0, i32 4
  %arrayidx342 = getelementptr inbounds [2 x double], [2 x double]* %minmax341, i32 0, i64 0
  %192 = load double, double* %arrayidx342, align 8, !tbaa !55
  %sub343 = fsub double %189, %192
  %cmp344 = fcmp ole double %conv335, %sub343
  br label %land.end.346

land.end.346:                                     ; preds = %land.rhs.334, %for.cond.330
  %193 = phi i1 [ false, %for.cond.330 ], [ %cmp344, %land.rhs.334 ]
  br i1 %193, label %for.body.347, label %for.end.352

for.body.347:                                     ; preds = %land.end.346
  %194 = load float, float* %fv, align 4, !tbaa !37
  %conv348 = fpext float %194 to double
  %mul = fmul double %conv348, 2.000000e+00
  %conv349 = fptrunc double %mul to float
  store float %conv349, float* %fv, align 4, !tbaa !37
  br label %for.inc.350

for.inc.350:                                      ; preds = %for.body.347
  %195 = load i32, i32* %i, align 4, !tbaa !26
  %inc351 = add nsw i32 %195, 1
  store i32 %inc351, i32* %i, align 4, !tbaa !26
  br label %for.cond.330

for.end.352:                                      ; preds = %land.end.346
  br label %if.end.354

if.else.353:                                      ; preds = %if.else.319
  store i32 8, i32* %i, align 4, !tbaa !26
  br label %if.end.354

if.end.354:                                       ; preds = %if.else.353, %for.end.352
  %196 = load i32, i32* %i, align 4, !tbaa !26
  %197 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %color_info355 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %197, i32 0, i32 11
  %num_components356 = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info355, i32 0, i32 1
  %198 = load i32, i32* %num_components356, align 4, !tbaa !40
  %mul357 = mul nsw i32 %196, %198
  %conv358 = sext i32 %mul357 to i64
  %cmp359 = icmp ugt i64 %conv358, 32
  br i1 %cmp359, label %if.then.361, label %if.else.376

if.then.361:                                      ; preds = %if.end.354
  %199 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %color_info362 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %199, i32 0, i32 11
  %num_components363 = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info362, i32 0, i32 1
  %200 = load i32, i32* %num_components363, align 4, !tbaa !40
  %conv364 = sext i32 %200 to i64
  %div = udiv i64 32, %conv364
  %conv365 = trunc i64 %div to i32
  %201 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc366 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %201, i32 0, i32 68
  %bits367 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc366, i32 0, i32 1
  store i32 %conv365, i32* %bits367, align 4, !tbaa !44
  %202 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc368 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %202, i32 0, i32 68
  %bits369 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc368, i32 0, i32 1
  %203 = load i32, i32* %bits369, align 4, !tbaa !44
  %204 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %color_info370 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %204, i32 0, i32 11
  %num_components371 = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info370, i32 0, i32 1
  %205 = load i32, i32* %num_components371, align 4, !tbaa !40
  %mul372 = mul nsw i32 %203, %205
  %conv373 = trunc i32 %mul372 to i16
  %206 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %color_info374 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %206, i32 0, i32 11
  %depth375 = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info374, i32 0, i32 3
  store i16 %conv373, i16* %depth375, align 2, !tbaa !54
  br label %if.end.387

if.else.376:                                      ; preds = %if.end.354
  %207 = load i32, i32* %i, align 4, !tbaa !26
  %208 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc377 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %208, i32 0, i32 68
  %bits378 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc377, i32 0, i32 1
  store i32 %207, i32* %bits378, align 4, !tbaa !44
  %209 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc379 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %209, i32 0, i32 68
  %bits380 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc379, i32 0, i32 1
  %210 = load i32, i32* %bits380, align 4, !tbaa !44
  %211 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %color_info381 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %211, i32 0, i32 11
  %num_components382 = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info381, i32 0, i32 1
  %212 = load i32, i32* %num_components382, align 4, !tbaa !40
  %mul383 = mul nsw i32 %210, %212
  %conv384 = trunc i32 %mul383 to i16
  %213 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %color_info385 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %213, i32 0, i32 11
  %depth386 = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info385, i32 0, i32 3
  store i16 %conv384, i16* %depth386, align 2, !tbaa !54
  br label %if.end.387

if.end.387:                                       ; preds = %if.else.376, %if.then.361
  br label %if.end.388

if.end.388:                                       ; preds = %if.end.387, %if.then.313
  br label %if.end.389

if.end.389:                                       ; preds = %if.end.388, %lor.lhs.false.301
  br label %if.end.391

if.else.390:                                      ; preds = %if.end.172
  store i32 -15, i32* %code, align 4, !tbaa !26
  br label %if.end.391

if.end.391:                                       ; preds = %if.else.390, %if.end.389
  %214 = load i32, i32* %code, align 4, !tbaa !26
  %cmp392 = icmp slt i32 %214, 0
  br i1 %cmp392, label %if.then.394, label %if.end.398

if.then.394:                                      ; preds = %if.end.391
  %215 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %procs395 = getelementptr inbounds %struct.gs_param_list_s, %struct.gs_param_list_s* %215, i32 0, i32 0
  %216 = load %struct.gs_param_list_procs_s*, %struct.gs_param_list_procs_s** %procs395, align 8, !tbaa !91
  %signal_error396 = getelementptr inbounds %struct.gs_param_list_procs_s, %struct.gs_param_list_procs_s* %216, i32 0, i32 7
  %217 = load i32 (%struct.gs_param_list_s*, i8*, i32)*, i32 (%struct.gs_param_list_s*, i8*, i32)** %signal_error396, align 8, !tbaa !93
  %218 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %219 = load i32, i32* %code, align 4, !tbaa !26
  %call397 = call i32 %217(%struct.gs_param_list_s* %218, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.37, i32 0, i32 0), i32 %219) #5
  br label %if.end.398

if.end.398:                                       ; preds = %if.then.394, %if.end.391
  %220 = load i32, i32* %error, align 4, !tbaa !26
  %221 = load i32, i32* %code, align 4, !tbaa !26
  %cmp399 = icmp sgt i32 %220, %221
  br i1 %cmp399, label %cond.true.401, label %cond.false.402

cond.true.401:                                    ; preds = %if.end.398
  %222 = load i32, i32* %code, align 4, !tbaa !26
  br label %cond.end.403

cond.false.402:                                   ; preds = %if.end.398
  %223 = load i32, i32* %error, align 4, !tbaa !26
  br label %cond.end.403

cond.end.403:                                     ; preds = %cond.false.402, %cond.true.401
  %cond404 = phi i32 [ %222, %cond.true.401 ], [ %223, %cond.false.402 ]
  store i32 %cond404, i32* %error, align 4, !tbaa !26
  %224 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call405 = call i32 @param_read_int(%struct.gs_param_list_s* %224, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.53, i32 0, i32 0), i32* %i) #5
  store i32 %call405, i32* %code, align 4, !tbaa !26
  %225 = load i32, i32* %error, align 4, !tbaa !26
  %cmp406 = icmp eq i32 %225, 0
  br i1 %cmp406, label %land.lhs.true.408, label %if.end.463

land.lhs.true.408:                                ; preds = %cond.end.403
  %226 = load i32, i32* %code, align 4, !tbaa !26
  %cmp409 = icmp eq i32 %226, 0
  br i1 %cmp409, label %land.lhs.true.411, label %if.end.463

land.lhs.true.411:                                ; preds = %land.lhs.true.408
  %227 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc412 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %227, i32 0, i32 68
  %flags413 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc412, i32 0, i32 0
  %228 = load i64, i64* %flags413, align 8, !tbaa !5
  %and414 = and i64 %228, 32
  %cmp415 = icmp eq i64 %and414, 0
  br i1 %cmp415, label %if.then.423, label %lor.lhs.false.417

lor.lhs.false.417:                                ; preds = %land.lhs.true.411
  %229 = load i32, i32* %i, align 4, !tbaa !26
  %230 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %color_info418 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %230, i32 0, i32 11
  %depth419 = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info418, i32 0, i32 3
  %231 = load i16, i16* %depth419, align 2, !tbaa !54
  %conv420 = zext i16 %231 to i32
  %cmp421 = icmp ne i32 %229, %conv420
  br i1 %cmp421, label %if.then.423, label %if.end.463

if.then.423:                                      ; preds = %lor.lhs.false.417, %land.lhs.true.411
  %232 = load i32, i32* %i, align 4, !tbaa !26
  %cmp424 = icmp sgt i32 1, %232
  br i1 %cmp424, label %if.then.430, label %lor.lhs.false.426

lor.lhs.false.426:                                ; preds = %if.then.423
  %233 = load i32, i32* %i, align 4, !tbaa !26
  %conv427 = sext i32 %233 to i64
  %cmp428 = icmp ugt i64 %conv427, 32
  br i1 %cmp428, label %if.then.430, label %if.else.431

if.then.430:                                      ; preds = %lor.lhs.false.426, %if.then.423
  store i32 -15, i32* %code, align 4, !tbaa !26
  br label %if.end.435

if.else.431:                                      ; preds = %lor.lhs.false.426
  %234 = load i32, i32* %i, align 4, !tbaa !26
  %conv432 = trunc i32 %234 to i16
  %235 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %color_info433 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %235, i32 0, i32 11
  %depth434 = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info433, i32 0, i32 3
  store i16 %conv432, i16* %depth434, align 2, !tbaa !54
  br label %if.end.435

if.end.435:                                       ; preds = %if.else.431, %if.then.430
  %236 = load i32, i32* %i, align 4, !tbaa !26
  %237 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %color_info436 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %237, i32 0, i32 11
  %num_components437 = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info436, i32 0, i32 1
  %238 = load i32, i32* %num_components437, align 4, !tbaa !40
  %div438 = sdiv i32 %236, %238
  %239 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc439 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %239, i32 0, i32 68
  %bits440 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc439, i32 0, i32 1
  store i32 %div438, i32* %bits440, align 4, !tbaa !44
  %240 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc441 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %240, i32 0, i32 68
  %bits442 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc441, i32 0, i32 1
  %241 = load i32, i32* %bits442, align 4, !tbaa !44
  %cmp443 = icmp sgt i32 1, %241
  br i1 %cmp443, label %if.then.445, label %if.end.446

if.then.445:                                      ; preds = %if.end.435
  store i32 -15, i32* %code, align 4, !tbaa !26
  br label %if.end.446

if.end.446:                                       ; preds = %if.then.445, %if.end.435
  %242 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc447 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %242, i32 0, i32 68
  %dither448 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc447, i32 0, i32 2
  %243 = load %struct.stc_dither_s*, %struct.stc_dither_s** %dither448, align 8, !tbaa !41
  %flags449 = getelementptr inbounds %struct.stc_dither_s, %struct.stc_dither_s* %243, i32 0, i32 2
  %244 = load i32, i32* %flags449, align 4, !tbaa !42
  %and450 = and i32 %244, 64
  %tobool = icmp ne i32 %and450, 0
  br i1 %tobool, label %land.lhs.true.451, label %if.else.458

land.lhs.true.451:                                ; preds = %if.end.446
  %245 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc452 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %245, i32 0, i32 68
  %dither453 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc452, i32 0, i32 2
  %246 = load %struct.stc_dither_s*, %struct.stc_dither_s** %dither453, align 8, !tbaa !41
  %flags454 = getelementptr inbounds %struct.stc_dither_s, %struct.stc_dither_s* %246, i32 0, i32 2
  %247 = load i32, i32* %flags454, align 4, !tbaa !42
  %and455 = and i32 %247, 32
  %tobool456 = icmp ne i32 %and455, 0
  br i1 %tobool456, label %if.then.457, label %if.else.458

if.then.457:                                      ; preds = %land.lhs.true.451
  store i32 -15, i32* %code, align 4, !tbaa !26
  br label %if.end.462

if.else.458:                                      ; preds = %land.lhs.true.451, %if.end.446
  %248 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc459 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %248, i32 0, i32 68
  %flags460 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc459, i32 0, i32 0
  %249 = load i64, i64* %flags460, align 8, !tbaa !5
  %and461 = and i64 %249, -33
  store i64 %and461, i64* %flags460, align 8, !tbaa !5
  br label %if.end.462

if.end.462:                                       ; preds = %if.else.458, %if.then.457
  br label %if.end.463

if.end.463:                                       ; preds = %if.end.462, %lor.lhs.false.417, %land.lhs.true.408, %cond.end.403
  %250 = load i32, i32* %code, align 4, !tbaa !26
  %cmp464 = icmp slt i32 %250, 0
  br i1 %cmp464, label %if.then.466, label %if.end.470

if.then.466:                                      ; preds = %if.end.463
  %251 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %procs467 = getelementptr inbounds %struct.gs_param_list_s, %struct.gs_param_list_s* %251, i32 0, i32 0
  %252 = load %struct.gs_param_list_procs_s*, %struct.gs_param_list_procs_s** %procs467, align 8, !tbaa !91
  %signal_error468 = getelementptr inbounds %struct.gs_param_list_procs_s, %struct.gs_param_list_procs_s* %252, i32 0, i32 7
  %253 = load i32 (%struct.gs_param_list_s*, i8*, i32)*, i32 (%struct.gs_param_list_s*, i8*, i32)** %signal_error468, align 8, !tbaa !93
  %254 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %255 = load i32, i32* %code, align 4, !tbaa !26
  %call469 = call i32 %253(%struct.gs_param_list_s* %254, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.53, i32 0, i32 0), i32 %255) #5
  br label %if.end.470

if.end.470:                                       ; preds = %if.then.466, %if.end.463
  %256 = load i32, i32* %error, align 4, !tbaa !26
  %257 = load i32, i32* %code, align 4, !tbaa !26
  %cmp471 = icmp sgt i32 %256, %257
  br i1 %cmp471, label %cond.true.473, label %cond.false.474

cond.true.473:                                    ; preds = %if.end.470
  %258 = load i32, i32* %code, align 4, !tbaa !26
  br label %cond.end.475

cond.false.474:                                   ; preds = %if.end.470
  %259 = load i32, i32* %error, align 4, !tbaa !26
  br label %cond.end.475

cond.end.475:                                     ; preds = %cond.false.474, %cond.true.473
  %cond476 = phi i32 [ %258, %cond.true.473 ], [ %259, %cond.false.474 ]
  store i32 %cond476, i32* %error, align 4, !tbaa !26
  %260 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call477 = call i32 @param_read_string(%struct.gs_param_list_s* %260, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.16, i32 0, i32 0), %struct.gs_param_string_s* %ps) #5
  store i32 %call477, i32* %code, align 4, !tbaa !26
  %261 = load i32, i32* %code, align 4, !tbaa !26
  %cmp478 = icmp eq i32 %261, 0
  br i1 %cmp478, label %if.then.480, label %if.end.532

if.then.480:                                      ; preds = %cond.end.475
  %size481 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %ps, i32 0, i32 1
  %262 = load i32, i32* %size481, align 4, !tbaa !71
  store i32 %262, i32* %l, align 4, !tbaa !26
  br label %for.cond.482

for.cond.482:                                     ; preds = %for.inc.495, %if.then.480
  %263 = load i32, i32* %l, align 4, !tbaa !26
  %cmp483 = icmp sgt i32 %263, 0
  br i1 %cmp483, label %land.rhs.485, label %land.end.493

land.rhs.485:                                     ; preds = %for.cond.482
  %264 = load i32, i32* %l, align 4, !tbaa !26
  %sub486 = sub nsw i32 %264, 1
  %idxprom487 = sext i32 %sub486 to i64
  %data488 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %ps, i32 0, i32 0
  %265 = load i8*, i8** %data488, align 8, !tbaa !70
  %arrayidx489 = getelementptr inbounds i8, i8* %265, i64 %idxprom487
  %266 = load i8, i8* %arrayidx489, align 1, !tbaa !62
  %conv490 = zext i8 %266 to i32
  %cmp491 = icmp eq i32 %conv490, 0
  br label %land.end.493

land.end.493:                                     ; preds = %land.rhs.485, %for.cond.482
  %267 = phi i1 [ false, %for.cond.482 ], [ %cmp491, %land.rhs.485 ]
  br i1 %267, label %for.body.494, label %for.end.497

for.body.494:                                     ; preds = %land.end.493
  br label %for.inc.495

for.inc.495:                                      ; preds = %for.body.494
  %268 = load i32, i32* %l, align 4, !tbaa !26
  %dec496 = add nsw i32 %268, -1
  store i32 %dec496, i32* %l, align 4, !tbaa !26
  br label %for.cond.482

for.end.497:                                      ; preds = %land.end.493
  %269 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc498 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %269, i32 0, i32 68
  %flags499 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc498, i32 0, i32 0
  %270 = load i64, i64* %flags499, align 8, !tbaa !5
  %and500 = and i64 %270, -3073
  store i64 %and500, i64* %flags499, align 8, !tbaa !5
  %call501 = call i64 @strlen(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i32 0, i32 0)) #7
  %271 = load i32, i32* %l, align 4, !tbaa !26
  %conv502 = sext i32 %271 to i64
  %cmp503 = icmp ne i64 %call501, %conv502
  br i1 %cmp503, label %if.else.515, label %lor.lhs.false.505

lor.lhs.false.505:                                ; preds = %for.end.497
  %data506 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %ps, i32 0, i32 0
  %272 = load i8*, i8** %data506, align 8, !tbaa !70
  %273 = load i32, i32* %l, align 4, !tbaa !26
  %conv507 = sext i32 %273 to i64
  %call508 = call i32 @strncmp(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i32 0, i32 0), i8* %272, i64 %conv507) #7
  %cmp509 = icmp ne i32 0, %call508
  br i1 %cmp509, label %if.else.515, label %if.then.511

if.then.511:                                      ; preds = %lor.lhs.false.505
  %274 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc512 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %274, i32 0, i32 68
  %flags513 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc512, i32 0, i32 0
  %275 = load i64, i64* %flags513, align 8, !tbaa !5
  %or514 = or i64 %275, 1024
  store i64 %or514, i64* %flags513, align 8, !tbaa !5
  br label %if.end.531

if.else.515:                                      ; preds = %lor.lhs.false.505, %for.end.497
  %call516 = call i64 @strlen(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.14, i32 0, i32 0)) #7
  %276 = load i32, i32* %l, align 4, !tbaa !26
  %conv517 = sext i32 %276 to i64
  %cmp518 = icmp ne i64 %call516, %conv517
  br i1 %cmp518, label %if.end.530, label %lor.lhs.false.520

lor.lhs.false.520:                                ; preds = %if.else.515
  %data521 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %ps, i32 0, i32 0
  %277 = load i8*, i8** %data521, align 8, !tbaa !70
  %278 = load i32, i32* %l, align 4, !tbaa !26
  %conv522 = sext i32 %278 to i64
  %call523 = call i32 @strncmp(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.14, i32 0, i32 0), i8* %277, i64 %conv522) #7
  %cmp524 = icmp ne i32 0, %call523
  br i1 %cmp524, label %if.end.530, label %if.then.526

if.then.526:                                      ; preds = %lor.lhs.false.520
  %279 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc527 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %279, i32 0, i32 68
  %flags528 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc527, i32 0, i32 0
  %280 = load i64, i64* %flags528, align 8, !tbaa !5
  %or529 = or i64 %280, 2048
  store i64 %or529, i64* %flags528, align 8, !tbaa !5
  br label %if.end.530

if.end.530:                                       ; preds = %if.then.526, %lor.lhs.false.520, %if.else.515
  br label %if.end.531

if.end.531:                                       ; preds = %if.end.530, %if.then.511
  br label %if.end.532

if.end.532:                                       ; preds = %if.end.531, %cond.end.475
  %281 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc533 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %281, i32 0, i32 68
  %flags534 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc533, i32 0, i32 0
  %282 = load i64, i64* %flags534, align 8, !tbaa !5
  %and535 = and i64 %282, 3072
  %cmp536 = icmp eq i64 %and535, 2048
  br i1 %cmp536, label %if.then.538, label %if.end.545

if.then.538:                                      ; preds = %if.end.532
  %283 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc539 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %283, i32 0, i32 68
  %flags540 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc539, i32 0, i32 0
  %284 = load i64, i64* %flags540, align 8, !tbaa !5
  %or541 = or i64 %284, 128
  store i64 %or541, i64* %flags540, align 8, !tbaa !5
  %285 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc542 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %285, i32 0, i32 68
  %flags543 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc542, i32 0, i32 0
  %286 = load i64, i64* %flags543, align 8, !tbaa !5
  %and544 = and i64 %286, -257
  store i64 %and544, i64* %flags543, align 8, !tbaa !5
  br label %if.end.545

if.end.545:                                       ; preds = %if.then.538, %if.end.532
  %287 = load i32, i32* %code, align 4, !tbaa !26
  %cmp546 = icmp slt i32 %287, 0
  br i1 %cmp546, label %if.then.548, label %if.end.552

if.then.548:                                      ; preds = %if.end.545
  %288 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %procs549 = getelementptr inbounds %struct.gs_param_list_s, %struct.gs_param_list_s* %288, i32 0, i32 0
  %289 = load %struct.gs_param_list_procs_s*, %struct.gs_param_list_procs_s** %procs549, align 8, !tbaa !91
  %signal_error550 = getelementptr inbounds %struct.gs_param_list_procs_s, %struct.gs_param_list_procs_s* %289, i32 0, i32 7
  %290 = load i32 (%struct.gs_param_list_s*, i8*, i32)*, i32 (%struct.gs_param_list_s*, i8*, i32)** %signal_error550, align 8, !tbaa !93
  %291 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %292 = load i32, i32* %code, align 4, !tbaa !26
  %call551 = call i32 %290(%struct.gs_param_list_s* %291, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.16, i32 0, i32 0), i32 %292) #5
  br label %if.end.552

if.end.552:                                       ; preds = %if.then.548, %if.end.545
  %293 = load i32, i32* %error, align 4, !tbaa !26
  %294 = load i32, i32* %code, align 4, !tbaa !26
  %cmp553 = icmp sgt i32 %293, %294
  br i1 %cmp553, label %cond.true.555, label %cond.false.556

cond.true.555:                                    ; preds = %if.end.552
  %295 = load i32, i32* %code, align 4, !tbaa !26
  br label %cond.end.557

cond.false.556:                                   ; preds = %if.end.552
  %296 = load i32, i32* %error, align 4, !tbaa !26
  br label %cond.end.557

cond.end.557:                                     ; preds = %cond.false.556, %cond.true.555
  %cond558 = phi i32 [ %295, %cond.true.555 ], [ %296, %cond.false.556 ]
  store i32 %cond558, i32* %error, align 4, !tbaa !26
  %297 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc559 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %297, i32 0, i32 68
  %flags560 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc559, i32 0, i32 0
  %298 = load i64, i64* %flags560, align 8, !tbaa !5
  %and561 = and i64 %298, 128
  %tobool562 = icmp ne i64 %and561, 0
  %cond563 = select i1 %tobool562, i32 1, i32 0
  store i32 %cond563, i32* %b1, align 4, !tbaa !26
  %299 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc564 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %299, i32 0, i32 68
  %flags565 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc564, i32 0, i32 0
  %300 = load i64, i64* %flags565, align 8, !tbaa !5
  %and566 = and i64 %300, 256
  %tobool567 = icmp ne i64 %and566, 0
  %cond568 = select i1 %tobool567, i32 1, i32 0
  store i32 %cond568, i32* %b2, align 4, !tbaa !26
  %301 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc569 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %301, i32 0, i32 68
  %flags570 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc569, i32 0, i32 0
  %302 = load i64, i64* %flags570, align 8, !tbaa !5
  %and571 = and i64 %302, 384
  %tobool572 = icmp ne i64 %and571, 0
  %cond573 = select i1 %tobool572, i32 0, i32 1
  store i32 %cond573, i32* %b3, align 4, !tbaa !26
  %303 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call574 = call i32 @param_read_bool(%struct.gs_param_list_s* %303, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.22, i32 0, i32 0), i32* %b1) #5
  store i32 %call574, i32* %code, align 4, !tbaa !26
  %304 = load i32, i32* %code, align 4, !tbaa !26
  %cmp575 = icmp slt i32 %304, 0
  br i1 %cmp575, label %if.then.577, label %if.else.581

if.then.577:                                      ; preds = %cond.end.557
  %305 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %procs578 = getelementptr inbounds %struct.gs_param_list_s, %struct.gs_param_list_s* %305, i32 0, i32 0
  %306 = load %struct.gs_param_list_procs_s*, %struct.gs_param_list_procs_s** %procs578, align 8, !tbaa !91
  %signal_error579 = getelementptr inbounds %struct.gs_param_list_procs_s, %struct.gs_param_list_procs_s* %306, i32 0, i32 7
  %307 = load i32 (%struct.gs_param_list_s*, i8*, i32)*, i32 (%struct.gs_param_list_s*, i8*, i32)** %signal_error579, align 8, !tbaa !93
  %308 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %309 = load i32, i32* %code, align 4, !tbaa !26
  %call580 = call i32 %307(%struct.gs_param_list_s* %308, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.22, i32 0, i32 0), i32 %309) #5
  br label %if.end.589

if.else.581:                                      ; preds = %cond.end.557
  %310 = load i32, i32* %code, align 4, !tbaa !26
  %cmp582 = icmp eq i32 %310, 0
  br i1 %cmp582, label %if.then.584, label %if.end.588

if.then.584:                                      ; preds = %if.else.581
  %311 = load i32, i32* %b1, align 4, !tbaa !26
  %tobool585 = icmp ne i32 %311, 0
  br i1 %tobool585, label %if.then.586, label %if.end.587

if.then.586:                                      ; preds = %if.then.584
  store i32 0, i32* %b2, align 4, !tbaa !26
  store i32 0, i32* %b3, align 4, !tbaa !26
  br label %if.end.587

if.end.587:                                       ; preds = %if.then.586, %if.then.584
  br label %if.end.588

if.end.588:                                       ; preds = %if.end.587, %if.else.581
  br label %if.end.589

if.end.589:                                       ; preds = %if.end.588, %if.then.577
  %312 = load i32, i32* %error, align 4, !tbaa !26
  %313 = load i32, i32* %code, align 4, !tbaa !26
  %cmp590 = icmp sgt i32 %312, %313
  br i1 %cmp590, label %cond.true.592, label %cond.false.593

cond.true.592:                                    ; preds = %if.end.589
  %314 = load i32, i32* %code, align 4, !tbaa !26
  br label %cond.end.594

cond.false.593:                                   ; preds = %if.end.589
  %315 = load i32, i32* %error, align 4, !tbaa !26
  br label %cond.end.594

cond.end.594:                                     ; preds = %cond.false.593, %cond.true.592
  %cond595 = phi i32 [ %314, %cond.true.592 ], [ %315, %cond.false.593 ]
  store i32 %cond595, i32* %error, align 4, !tbaa !26
  %316 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call596 = call i32 @param_read_bool(%struct.gs_param_list_s* %316, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i32 0, i32 0), i32* %b2) #5
  store i32 %call596, i32* %code, align 4, !tbaa !26
  %317 = load i32, i32* %code, align 4, !tbaa !26
  %cmp597 = icmp slt i32 %317, 0
  br i1 %cmp597, label %if.then.599, label %if.else.603

if.then.599:                                      ; preds = %cond.end.594
  %318 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %procs600 = getelementptr inbounds %struct.gs_param_list_s, %struct.gs_param_list_s* %318, i32 0, i32 0
  %319 = load %struct.gs_param_list_procs_s*, %struct.gs_param_list_procs_s** %procs600, align 8, !tbaa !91
  %signal_error601 = getelementptr inbounds %struct.gs_param_list_procs_s, %struct.gs_param_list_procs_s* %319, i32 0, i32 7
  %320 = load i32 (%struct.gs_param_list_s*, i8*, i32)*, i32 (%struct.gs_param_list_s*, i8*, i32)** %signal_error601, align 8, !tbaa !93
  %321 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %322 = load i32, i32* %code, align 4, !tbaa !26
  %call602 = call i32 %320(%struct.gs_param_list_s* %321, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i32 0, i32 0), i32 %322) #5
  br label %if.end.611

if.else.603:                                      ; preds = %cond.end.594
  %323 = load i32, i32* %code, align 4, !tbaa !26
  %cmp604 = icmp eq i32 %323, 0
  br i1 %cmp604, label %if.then.606, label %if.end.610

if.then.606:                                      ; preds = %if.else.603
  %324 = load i32, i32* %b2, align 4, !tbaa !26
  %tobool607 = icmp ne i32 %324, 0
  br i1 %tobool607, label %if.then.608, label %if.end.609

if.then.608:                                      ; preds = %if.then.606
  store i32 0, i32* %b1, align 4, !tbaa !26
  store i32 0, i32* %b3, align 4, !tbaa !26
  br label %if.end.609

if.end.609:                                       ; preds = %if.then.608, %if.then.606
  br label %if.end.610

if.end.610:                                       ; preds = %if.end.609, %if.else.603
  br label %if.end.611

if.end.611:                                       ; preds = %if.end.610, %if.then.599
  %325 = load i32, i32* %error, align 4, !tbaa !26
  %326 = load i32, i32* %code, align 4, !tbaa !26
  %cmp612 = icmp sgt i32 %325, %326
  br i1 %cmp612, label %cond.true.614, label %cond.false.615

cond.true.614:                                    ; preds = %if.end.611
  %327 = load i32, i32* %code, align 4, !tbaa !26
  br label %cond.end.616

cond.false.615:                                   ; preds = %if.end.611
  %328 = load i32, i32* %error, align 4, !tbaa !26
  br label %cond.end.616

cond.end.616:                                     ; preds = %cond.false.615, %cond.true.614
  %cond617 = phi i32 [ %327, %cond.true.614 ], [ %328, %cond.false.615 ]
  store i32 %cond617, i32* %error, align 4, !tbaa !26
  %329 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call618 = call i32 @param_read_bool(%struct.gs_param_list_s* %329, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.23, i32 0, i32 0), i32* %b3) #5
  store i32 %call618, i32* %code, align 4, !tbaa !26
  %330 = load i32, i32* %code, align 4, !tbaa !26
  %cmp619 = icmp slt i32 %330, 0
  br i1 %cmp619, label %if.then.621, label %if.else.625

if.then.621:                                      ; preds = %cond.end.616
  %331 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %procs622 = getelementptr inbounds %struct.gs_param_list_s, %struct.gs_param_list_s* %331, i32 0, i32 0
  %332 = load %struct.gs_param_list_procs_s*, %struct.gs_param_list_procs_s** %procs622, align 8, !tbaa !91
  %signal_error623 = getelementptr inbounds %struct.gs_param_list_procs_s, %struct.gs_param_list_procs_s* %332, i32 0, i32 7
  %333 = load i32 (%struct.gs_param_list_s*, i8*, i32)*, i32 (%struct.gs_param_list_s*, i8*, i32)** %signal_error623, align 8, !tbaa !93
  %334 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %335 = load i32, i32* %code, align 4, !tbaa !26
  %call624 = call i32 %333(%struct.gs_param_list_s* %334, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.23, i32 0, i32 0), i32 %335) #5
  br label %if.end.633

if.else.625:                                      ; preds = %cond.end.616
  %336 = load i32, i32* %code, align 4, !tbaa !26
  %cmp626 = icmp eq i32 %336, 0
  br i1 %cmp626, label %if.then.628, label %if.end.632

if.then.628:                                      ; preds = %if.else.625
  %337 = load i32, i32* %b3, align 4, !tbaa !26
  %tobool629 = icmp ne i32 %337, 0
  br i1 %tobool629, label %if.then.630, label %if.end.631

if.then.630:                                      ; preds = %if.then.628
  store i32 0, i32* %b1, align 4, !tbaa !26
  store i32 0, i32* %b2, align 4, !tbaa !26
  br label %if.end.631

if.end.631:                                       ; preds = %if.then.630, %if.then.628
  br label %if.end.632

if.end.632:                                       ; preds = %if.end.631, %if.else.625
  br label %if.end.633

if.end.633:                                       ; preds = %if.end.632, %if.then.621
  %338 = load i32, i32* %error, align 4, !tbaa !26
  %339 = load i32, i32* %code, align 4, !tbaa !26
  %cmp634 = icmp sgt i32 %338, %339
  br i1 %cmp634, label %cond.true.636, label %cond.false.637

cond.true.636:                                    ; preds = %if.end.633
  %340 = load i32, i32* %code, align 4, !tbaa !26
  br label %cond.end.638

cond.false.637:                                   ; preds = %if.end.633
  %341 = load i32, i32* %error, align 4, !tbaa !26
  br label %cond.end.638

cond.end.638:                                     ; preds = %cond.false.637, %cond.true.636
  %cond639 = phi i32 [ %340, %cond.true.636 ], [ %341, %cond.false.637 ]
  store i32 %cond639, i32* %error, align 4, !tbaa !26
  %342 = load i32, i32* %b1, align 4, !tbaa !26
  %tobool640 = icmp ne i32 %342, 0
  br i1 %tobool640, label %if.then.641, label %if.else.645

if.then.641:                                      ; preds = %cond.end.638
  %343 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc642 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %343, i32 0, i32 68
  %flags643 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc642, i32 0, i32 0
  %344 = load i64, i64* %flags643, align 8, !tbaa !5
  %or644 = or i64 %344, 128
  store i64 %or644, i64* %flags643, align 8, !tbaa !5
  br label %if.end.649

if.else.645:                                      ; preds = %cond.end.638
  %345 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc646 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %345, i32 0, i32 68
  %flags647 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc646, i32 0, i32 0
  %346 = load i64, i64* %flags647, align 8, !tbaa !5
  %and648 = and i64 %346, -129
  store i64 %and648, i64* %flags647, align 8, !tbaa !5
  br label %if.end.649

if.end.649:                                       ; preds = %if.else.645, %if.then.641
  %347 = load i32, i32* %b2, align 4, !tbaa !26
  %tobool650 = icmp ne i32 %347, 0
  br i1 %tobool650, label %if.then.651, label %if.else.655

if.then.651:                                      ; preds = %if.end.649
  %348 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc652 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %348, i32 0, i32 68
  %flags653 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc652, i32 0, i32 0
  %349 = load i64, i64* %flags653, align 8, !tbaa !5
  %or654 = or i64 %349, 256
  store i64 %or654, i64* %flags653, align 8, !tbaa !5
  br label %if.end.659

if.else.655:                                      ; preds = %if.end.649
  %350 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc656 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %350, i32 0, i32 68
  %flags657 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc656, i32 0, i32 0
  %351 = load i64, i64* %flags657, align 8, !tbaa !5
  %and658 = and i64 %351, -257
  store i64 %and658, i64* %flags657, align 8, !tbaa !5
  br label %if.end.659

if.end.659:                                       ; preds = %if.else.655, %if.then.651
  %352 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call660 = call i32 @param_read_bool(%struct.gs_param_list_s* %352, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.21, i32 0, i32 0), i32* %b1) #5
  store i32 %call660, i32* %code, align 4, !tbaa !26
  %353 = load i32, i32* %code, align 4, !tbaa !26
  %cmp661 = icmp slt i32 %353, 0
  br i1 %cmp661, label %if.then.663, label %if.else.667

if.then.663:                                      ; preds = %if.end.659
  %354 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %procs664 = getelementptr inbounds %struct.gs_param_list_s, %struct.gs_param_list_s* %354, i32 0, i32 0
  %355 = load %struct.gs_param_list_procs_s*, %struct.gs_param_list_procs_s** %procs664, align 8, !tbaa !91
  %signal_error665 = getelementptr inbounds %struct.gs_param_list_procs_s, %struct.gs_param_list_procs_s* %355, i32 0, i32 7
  %356 = load i32 (%struct.gs_param_list_s*, i8*, i32)*, i32 (%struct.gs_param_list_s*, i8*, i32)** %signal_error665, align 8, !tbaa !93
  %357 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %358 = load i32, i32* %code, align 4, !tbaa !26
  %call666 = call i32 %356(%struct.gs_param_list_s* %357, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.21, i32 0, i32 0), i32 %358) #5
  br label %if.end.683

if.else.667:                                      ; preds = %if.end.659
  %359 = load i32, i32* %code, align 4, !tbaa !26
  %cmp668 = icmp eq i32 %359, 0
  br i1 %cmp668, label %if.then.670, label %if.end.682

if.then.670:                                      ; preds = %if.else.667
  %360 = load i32, i32* %b1, align 4, !tbaa !26
  %cmp671 = icmp eq i32 %360, 1
  br i1 %cmp671, label %if.then.673, label %if.else.677

if.then.673:                                      ; preds = %if.then.670
  %361 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc674 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %361, i32 0, i32 68
  %flags675 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc674, i32 0, i32 0
  %362 = load i64, i64* %flags675, align 8, !tbaa !5
  %or676 = or i64 %362, 64
  store i64 %or676, i64* %flags675, align 8, !tbaa !5
  br label %if.end.681

if.else.677:                                      ; preds = %if.then.670
  %363 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc678 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %363, i32 0, i32 68
  %flags679 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc678, i32 0, i32 0
  %364 = load i64, i64* %flags679, align 8, !tbaa !5
  %and680 = and i64 %364, -65
  store i64 %and680, i64* %flags679, align 8, !tbaa !5
  br label %if.end.681

if.end.681:                                       ; preds = %if.else.677, %if.then.673
  br label %if.end.682

if.end.682:                                       ; preds = %if.end.681, %if.else.667
  br label %if.end.683

if.end.683:                                       ; preds = %if.end.682, %if.then.663
  %365 = load i32, i32* %error, align 4, !tbaa !26
  %366 = load i32, i32* %code, align 4, !tbaa !26
  %cmp684 = icmp sgt i32 %365, %366
  br i1 %cmp684, label %cond.true.686, label %cond.false.687

cond.true.686:                                    ; preds = %if.end.683
  %367 = load i32, i32* %code, align 4, !tbaa !26
  br label %cond.end.688

cond.false.687:                                   ; preds = %if.end.683
  %368 = load i32, i32* %error, align 4, !tbaa !26
  br label %cond.end.688

cond.end.688:                                     ; preds = %cond.false.687, %cond.true.686
  %cond689 = phi i32 [ %367, %cond.true.686 ], [ %368, %cond.false.687 ]
  store i32 %cond689, i32* %error, align 4, !tbaa !26
  %369 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call690 = call i32 @param_read_bool(%struct.gs_param_list_s* %369, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.25, i32 0, i32 0), i32* %b1) #5
  store i32 %call690, i32* %code, align 4, !tbaa !26
  %370 = load i32, i32* %code, align 4, !tbaa !26
  %cmp691 = icmp slt i32 %370, 0
  br i1 %cmp691, label %if.then.693, label %if.else.697

if.then.693:                                      ; preds = %cond.end.688
  %371 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %procs694 = getelementptr inbounds %struct.gs_param_list_s, %struct.gs_param_list_s* %371, i32 0, i32 0
  %372 = load %struct.gs_param_list_procs_s*, %struct.gs_param_list_procs_s** %procs694, align 8, !tbaa !91
  %signal_error695 = getelementptr inbounds %struct.gs_param_list_procs_s, %struct.gs_param_list_procs_s* %372, i32 0, i32 7
  %373 = load i32 (%struct.gs_param_list_s*, i8*, i32)*, i32 (%struct.gs_param_list_s*, i8*, i32)** %signal_error695, align 8, !tbaa !93
  %374 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %375 = load i32, i32* %code, align 4, !tbaa !26
  %call696 = call i32 %373(%struct.gs_param_list_s* %374, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.25, i32 0, i32 0), i32 %375) #5
  br label %if.end.713

if.else.697:                                      ; preds = %cond.end.688
  %376 = load i32, i32* %code, align 4, !tbaa !26
  %cmp698 = icmp eq i32 %376, 0
  br i1 %cmp698, label %if.then.700, label %if.end.712

if.then.700:                                      ; preds = %if.else.697
  %377 = load i32, i32* %b1, align 4, !tbaa !26
  %cmp701 = icmp eq i32 %377, 1
  br i1 %cmp701, label %if.then.703, label %if.else.707

if.then.703:                                      ; preds = %if.then.700
  %378 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc704 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %378, i32 0, i32 68
  %flags705 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc704, i32 0, i32 0
  %379 = load i64, i64* %flags705, align 8, !tbaa !5
  %or706 = or i64 %379, 1
  store i64 %or706, i64* %flags705, align 8, !tbaa !5
  br label %if.end.711

if.else.707:                                      ; preds = %if.then.700
  %380 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc708 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %380, i32 0, i32 68
  %flags709 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc708, i32 0, i32 0
  %381 = load i64, i64* %flags709, align 8, !tbaa !5
  %and710 = and i64 %381, -2
  store i64 %and710, i64* %flags709, align 8, !tbaa !5
  br label %if.end.711

if.end.711:                                       ; preds = %if.else.707, %if.then.703
  br label %if.end.712

if.end.712:                                       ; preds = %if.end.711, %if.else.697
  br label %if.end.713

if.end.713:                                       ; preds = %if.end.712, %if.then.693
  %382 = load i32, i32* %error, align 4, !tbaa !26
  %383 = load i32, i32* %code, align 4, !tbaa !26
  %cmp714 = icmp sgt i32 %382, %383
  br i1 %cmp714, label %cond.true.716, label %cond.false.717

cond.true.716:                                    ; preds = %if.end.713
  %384 = load i32, i32* %code, align 4, !tbaa !26
  br label %cond.end.718

cond.false.717:                                   ; preds = %if.end.713
  %385 = load i32, i32* %error, align 4, !tbaa !26
  br label %cond.end.718

cond.end.718:                                     ; preds = %cond.false.717, %cond.true.716
  %cond719 = phi i32 [ %384, %cond.true.716 ], [ %385, %cond.false.717 ]
  store i32 %cond719, i32* %error, align 4, !tbaa !26
  %386 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call720 = call i32 @param_read_bool(%struct.gs_param_list_s* %386, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.26, i32 0, i32 0), i32* %b1) #5
  store i32 %call720, i32* %code, align 4, !tbaa !26
  %387 = load i32, i32* %code, align 4, !tbaa !26
  %cmp721 = icmp slt i32 %387, 0
  br i1 %cmp721, label %if.then.723, label %if.else.727

if.then.723:                                      ; preds = %cond.end.718
  %388 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %procs724 = getelementptr inbounds %struct.gs_param_list_s, %struct.gs_param_list_s* %388, i32 0, i32 0
  %389 = load %struct.gs_param_list_procs_s*, %struct.gs_param_list_procs_s** %procs724, align 8, !tbaa !91
  %signal_error725 = getelementptr inbounds %struct.gs_param_list_procs_s, %struct.gs_param_list_procs_s* %389, i32 0, i32 7
  %390 = load i32 (%struct.gs_param_list_s*, i8*, i32)*, i32 (%struct.gs_param_list_s*, i8*, i32)** %signal_error725, align 8, !tbaa !93
  %391 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %392 = load i32, i32* %code, align 4, !tbaa !26
  %call726 = call i32 %390(%struct.gs_param_list_s* %391, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.26, i32 0, i32 0), i32 %392) #5
  br label %if.end.743

if.else.727:                                      ; preds = %cond.end.718
  %393 = load i32, i32* %code, align 4, !tbaa !26
  %cmp728 = icmp eq i32 %393, 0
  br i1 %cmp728, label %if.then.730, label %if.end.742

if.then.730:                                      ; preds = %if.else.727
  %394 = load i32, i32* %b1, align 4, !tbaa !26
  %cmp731 = icmp eq i32 %394, 1
  br i1 %cmp731, label %if.then.733, label %if.else.737

if.then.733:                                      ; preds = %if.then.730
  %395 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc734 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %395, i32 0, i32 68
  %flags735 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc734, i32 0, i32 0
  %396 = load i64, i64* %flags735, align 8, !tbaa !5
  %or736 = or i64 %396, 2
  store i64 %or736, i64* %flags735, align 8, !tbaa !5
  br label %if.end.741

if.else.737:                                      ; preds = %if.then.730
  %397 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc738 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %397, i32 0, i32 68
  %flags739 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc738, i32 0, i32 0
  %398 = load i64, i64* %flags739, align 8, !tbaa !5
  %and740 = and i64 %398, -3
  store i64 %and740, i64* %flags739, align 8, !tbaa !5
  br label %if.end.741

if.end.741:                                       ; preds = %if.else.737, %if.then.733
  br label %if.end.742

if.end.742:                                       ; preds = %if.end.741, %if.else.727
  br label %if.end.743

if.end.743:                                       ; preds = %if.end.742, %if.then.723
  %399 = load i32, i32* %error, align 4, !tbaa !26
  %400 = load i32, i32* %code, align 4, !tbaa !26
  %cmp744 = icmp sgt i32 %399, %400
  br i1 %cmp744, label %cond.true.746, label %cond.false.747

cond.true.746:                                    ; preds = %if.end.743
  %401 = load i32, i32* %code, align 4, !tbaa !26
  br label %cond.end.748

cond.false.747:                                   ; preds = %if.end.743
  %402 = load i32, i32* %error, align 4, !tbaa !26
  br label %cond.end.748

cond.end.748:                                     ; preds = %cond.false.747, %cond.true.746
  %cond749 = phi i32 [ %401, %cond.true.746 ], [ %402, %cond.false.747 ]
  store i32 %cond749, i32* %error, align 4, !tbaa !26
  %403 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call750 = call i32 @param_read_bool(%struct.gs_param_list_s* %403, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.27, i32 0, i32 0), i32* %b1) #5
  store i32 %call750, i32* %code, align 4, !tbaa !26
  %404 = load i32, i32* %code, align 4, !tbaa !26
  %cmp751 = icmp slt i32 %404, 0
  br i1 %cmp751, label %if.then.753, label %if.else.757

if.then.753:                                      ; preds = %cond.end.748
  %405 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %procs754 = getelementptr inbounds %struct.gs_param_list_s, %struct.gs_param_list_s* %405, i32 0, i32 0
  %406 = load %struct.gs_param_list_procs_s*, %struct.gs_param_list_procs_s** %procs754, align 8, !tbaa !91
  %signal_error755 = getelementptr inbounds %struct.gs_param_list_procs_s, %struct.gs_param_list_procs_s* %406, i32 0, i32 7
  %407 = load i32 (%struct.gs_param_list_s*, i8*, i32)*, i32 (%struct.gs_param_list_s*, i8*, i32)** %signal_error755, align 8, !tbaa !93
  %408 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %409 = load i32, i32* %code, align 4, !tbaa !26
  %call756 = call i32 %407(%struct.gs_param_list_s* %408, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.27, i32 0, i32 0), i32 %409) #5
  br label %if.end.773

if.else.757:                                      ; preds = %cond.end.748
  %410 = load i32, i32* %code, align 4, !tbaa !26
  %cmp758 = icmp eq i32 %410, 0
  br i1 %cmp758, label %if.then.760, label %if.end.772

if.then.760:                                      ; preds = %if.else.757
  %411 = load i32, i32* %b1, align 4, !tbaa !26
  %cmp761 = icmp eq i32 %411, 1
  br i1 %cmp761, label %if.then.763, label %if.else.767

if.then.763:                                      ; preds = %if.then.760
  %412 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc764 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %412, i32 0, i32 68
  %flags765 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc764, i32 0, i32 0
  %413 = load i64, i64* %flags765, align 8, !tbaa !5
  %or766 = or i64 %413, 4
  store i64 %or766, i64* %flags765, align 8, !tbaa !5
  br label %if.end.771

if.else.767:                                      ; preds = %if.then.760
  %414 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc768 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %414, i32 0, i32 68
  %flags769 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc768, i32 0, i32 0
  %415 = load i64, i64* %flags769, align 8, !tbaa !5
  %and770 = and i64 %415, -5
  store i64 %and770, i64* %flags769, align 8, !tbaa !5
  br label %if.end.771

if.end.771:                                       ; preds = %if.else.767, %if.then.763
  br label %if.end.772

if.end.772:                                       ; preds = %if.end.771, %if.else.757
  br label %if.end.773

if.end.773:                                       ; preds = %if.end.772, %if.then.753
  %416 = load i32, i32* %error, align 4, !tbaa !26
  %417 = load i32, i32* %code, align 4, !tbaa !26
  %cmp774 = icmp sgt i32 %416, %417
  br i1 %cmp774, label %cond.true.776, label %cond.false.777

cond.true.776:                                    ; preds = %if.end.773
  %418 = load i32, i32* %code, align 4, !tbaa !26
  br label %cond.end.778

cond.false.777:                                   ; preds = %if.end.773
  %419 = load i32, i32* %error, align 4, !tbaa !26
  br label %cond.end.778

cond.end.778:                                     ; preds = %cond.false.777, %cond.true.776
  %cond779 = phi i32 [ %418, %cond.true.776 ], [ %419, %cond.false.777 ]
  store i32 %cond779, i32* %error, align 4, !tbaa !26
  %420 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call780 = call i32 @param_read_bool(%struct.gs_param_list_s* %420, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i32 0, i32 0), i32* %b1) #5
  store i32 %call780, i32* %code, align 4, !tbaa !26
  %421 = load i32, i32* %code, align 4, !tbaa !26
  %cmp781 = icmp slt i32 %421, 0
  br i1 %cmp781, label %if.then.783, label %if.else.787

if.then.783:                                      ; preds = %cond.end.778
  %422 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %procs784 = getelementptr inbounds %struct.gs_param_list_s, %struct.gs_param_list_s* %422, i32 0, i32 0
  %423 = load %struct.gs_param_list_procs_s*, %struct.gs_param_list_procs_s** %procs784, align 8, !tbaa !91
  %signal_error785 = getelementptr inbounds %struct.gs_param_list_procs_s, %struct.gs_param_list_procs_s* %423, i32 0, i32 7
  %424 = load i32 (%struct.gs_param_list_s*, i8*, i32)*, i32 (%struct.gs_param_list_s*, i8*, i32)** %signal_error785, align 8, !tbaa !93
  %425 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %426 = load i32, i32* %code, align 4, !tbaa !26
  %call786 = call i32 %424(%struct.gs_param_list_s* %425, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i32 0, i32 0), i32 %426) #5
  br label %if.end.803

if.else.787:                                      ; preds = %cond.end.778
  %427 = load i32, i32* %code, align 4, !tbaa !26
  %cmp788 = icmp eq i32 %427, 0
  br i1 %cmp788, label %if.then.790, label %if.end.802

if.then.790:                                      ; preds = %if.else.787
  %428 = load i32, i32* %b1, align 4, !tbaa !26
  %cmp791 = icmp eq i32 %428, 1
  br i1 %cmp791, label %if.then.793, label %if.else.797

if.then.793:                                      ; preds = %if.then.790
  %429 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc794 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %429, i32 0, i32 68
  %flags795 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc794, i32 0, i32 0
  %430 = load i64, i64* %flags795, align 8, !tbaa !5
  %or796 = or i64 %430, 8
  store i64 %or796, i64* %flags795, align 8, !tbaa !5
  br label %if.end.801

if.else.797:                                      ; preds = %if.then.790
  %431 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc798 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %431, i32 0, i32 68
  %flags799 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc798, i32 0, i32 0
  %432 = load i64, i64* %flags799, align 8, !tbaa !5
  %and800 = and i64 %432, -9
  store i64 %and800, i64* %flags799, align 8, !tbaa !5
  br label %if.end.801

if.end.801:                                       ; preds = %if.else.797, %if.then.793
  br label %if.end.802

if.end.802:                                       ; preds = %if.end.801, %if.else.787
  br label %if.end.803

if.end.803:                                       ; preds = %if.end.802, %if.then.783
  %433 = load i32, i32* %error, align 4, !tbaa !26
  %434 = load i32, i32* %code, align 4, !tbaa !26
  %cmp804 = icmp sgt i32 %433, %434
  br i1 %cmp804, label %cond.true.806, label %cond.false.807

cond.true.806:                                    ; preds = %if.end.803
  %435 = load i32, i32* %code, align 4, !tbaa !26
  br label %cond.end.808

cond.false.807:                                   ; preds = %if.end.803
  %436 = load i32, i32* %error, align 4, !tbaa !26
  br label %cond.end.808

cond.end.808:                                     ; preds = %cond.false.807, %cond.true.806
  %cond809 = phi i32 [ %435, %cond.true.806 ], [ %436, %cond.false.807 ]
  store i32 %cond809, i32* %error, align 4, !tbaa !26
  %437 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call810 = call i32 @param_read_bool(%struct.gs_param_list_s* %437, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.29, i32 0, i32 0), i32* %b1) #5
  store i32 %call810, i32* %code, align 4, !tbaa !26
  %438 = load i32, i32* %code, align 4, !tbaa !26
  %cmp811 = icmp slt i32 %438, 0
  br i1 %cmp811, label %if.then.813, label %if.else.817

if.then.813:                                      ; preds = %cond.end.808
  %439 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %procs814 = getelementptr inbounds %struct.gs_param_list_s, %struct.gs_param_list_s* %439, i32 0, i32 0
  %440 = load %struct.gs_param_list_procs_s*, %struct.gs_param_list_procs_s** %procs814, align 8, !tbaa !91
  %signal_error815 = getelementptr inbounds %struct.gs_param_list_procs_s, %struct.gs_param_list_procs_s* %440, i32 0, i32 7
  %441 = load i32 (%struct.gs_param_list_s*, i8*, i32)*, i32 (%struct.gs_param_list_s*, i8*, i32)** %signal_error815, align 8, !tbaa !93
  %442 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %443 = load i32, i32* %code, align 4, !tbaa !26
  %call816 = call i32 %441(%struct.gs_param_list_s* %442, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.29, i32 0, i32 0), i32 %443) #5
  br label %if.end.833

if.else.817:                                      ; preds = %cond.end.808
  %444 = load i32, i32* %code, align 4, !tbaa !26
  %cmp818 = icmp eq i32 %444, 0
  br i1 %cmp818, label %if.then.820, label %if.end.832

if.then.820:                                      ; preds = %if.else.817
  %445 = load i32, i32* %b1, align 4, !tbaa !26
  %cmp821 = icmp eq i32 %445, 1
  br i1 %cmp821, label %if.then.823, label %if.else.827

if.then.823:                                      ; preds = %if.then.820
  %446 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc824 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %446, i32 0, i32 68
  %flags825 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc824, i32 0, i32 0
  %447 = load i64, i64* %flags825, align 8, !tbaa !5
  %or826 = or i64 %447, 16
  store i64 %or826, i64* %flags825, align 8, !tbaa !5
  br label %if.end.831

if.else.827:                                      ; preds = %if.then.820
  %448 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc828 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %448, i32 0, i32 68
  %flags829 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc828, i32 0, i32 0
  %449 = load i64, i64* %flags829, align 8, !tbaa !5
  %and830 = and i64 %449, -17
  store i64 %and830, i64* %flags829, align 8, !tbaa !5
  br label %if.end.831

if.end.831:                                       ; preds = %if.else.827, %if.then.823
  br label %if.end.832

if.end.832:                                       ; preds = %if.end.831, %if.else.817
  br label %if.end.833

if.end.833:                                       ; preds = %if.end.832, %if.then.813
  %450 = load i32, i32* %error, align 4, !tbaa !26
  %451 = load i32, i32* %code, align 4, !tbaa !26
  %cmp834 = icmp sgt i32 %450, %451
  br i1 %cmp834, label %cond.true.836, label %cond.false.837

cond.true.836:                                    ; preds = %if.end.833
  %452 = load i32, i32* %code, align 4, !tbaa !26
  br label %cond.end.838

cond.false.837:                                   ; preds = %if.end.833
  %453 = load i32, i32* %error, align 4, !tbaa !26
  br label %cond.end.838

cond.end.838:                                     ; preds = %cond.false.837, %cond.true.836
  %cond839 = phi i32 [ %452, %cond.true.836 ], [ %453, %cond.false.837 ]
  store i32 %cond839, i32* %error, align 4, !tbaa !26
  %454 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %455 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc840 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %455, i32 0, i32 68
  %escp_m = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc840, i32 0, i32 28
  %call841 = call i32 @param_read_int(%struct.gs_param_list_s* %454, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.30, i32 0, i32 0), i32* %escp_m) #5
  store i32 %call841, i32* %code, align 4, !tbaa !26
  %456 = load i32, i32* %code, align 4, !tbaa !26
  %cmp842 = icmp slt i32 %456, 0
  br i1 %cmp842, label %if.then.844, label %if.else.848

if.then.844:                                      ; preds = %cond.end.838
  %457 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %procs845 = getelementptr inbounds %struct.gs_param_list_s, %struct.gs_param_list_s* %457, i32 0, i32 0
  %458 = load %struct.gs_param_list_procs_s*, %struct.gs_param_list_procs_s** %procs845, align 8, !tbaa !91
  %signal_error846 = getelementptr inbounds %struct.gs_param_list_procs_s, %struct.gs_param_list_procs_s* %458, i32 0, i32 7
  %459 = load i32 (%struct.gs_param_list_s*, i8*, i32)*, i32 (%struct.gs_param_list_s*, i8*, i32)** %signal_error846, align 8, !tbaa !93
  %460 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %461 = load i32, i32* %code, align 4, !tbaa !26
  %call847 = call i32 %459(%struct.gs_param_list_s* %460, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.30, i32 0, i32 0), i32 %461) #5
  br label %if.end.856

if.else.848:                                      ; preds = %cond.end.838
  %462 = load i32, i32* %code, align 4, !tbaa !26
  %cmp849 = icmp eq i32 %462, 0
  br i1 %cmp849, label %if.then.851, label %if.end.855

if.then.851:                                      ; preds = %if.else.848
  %463 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc852 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %463, i32 0, i32 68
  %flags853 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc852, i32 0, i32 0
  %464 = load i64, i64* %flags853, align 8, !tbaa !5
  %or854 = or i64 %464, 65536
  store i64 %or854, i64* %flags853, align 8, !tbaa !5
  br label %if.end.855

if.end.855:                                       ; preds = %if.then.851, %if.else.848
  br label %if.end.856

if.end.856:                                       ; preds = %if.end.855, %if.then.844
  %465 = load i32, i32* %error, align 4, !tbaa !26
  %466 = load i32, i32* %code, align 4, !tbaa !26
  %cmp857 = icmp sgt i32 %465, %466
  br i1 %cmp857, label %cond.true.859, label %cond.false.860

cond.true.859:                                    ; preds = %if.end.856
  %467 = load i32, i32* %code, align 4, !tbaa !26
  br label %cond.end.861

cond.false.860:                                   ; preds = %if.end.856
  %468 = load i32, i32* %error, align 4, !tbaa !26
  br label %cond.end.861

cond.end.861:                                     ; preds = %cond.false.860, %cond.true.859
  %cond862 = phi i32 [ %467, %cond.true.859 ], [ %468, %cond.false.860 ]
  store i32 %cond862, i32* %error, align 4, !tbaa !26
  %469 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %470 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc863 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %470, i32 0, i32 68
  %escp_width = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc863, i32 0, i32 15
  %call864 = call i32 @param_read_int(%struct.gs_param_list_s* %469, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.31, i32 0, i32 0), i32* %escp_width) #5
  store i32 %call864, i32* %code, align 4, !tbaa !26
  %471 = load i32, i32* %code, align 4, !tbaa !26
  %cmp865 = icmp slt i32 %471, 0
  br i1 %cmp865, label %if.then.867, label %if.else.871

if.then.867:                                      ; preds = %cond.end.861
  %472 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %procs868 = getelementptr inbounds %struct.gs_param_list_s, %struct.gs_param_list_s* %472, i32 0, i32 0
  %473 = load %struct.gs_param_list_procs_s*, %struct.gs_param_list_procs_s** %procs868, align 8, !tbaa !91
  %signal_error869 = getelementptr inbounds %struct.gs_param_list_procs_s, %struct.gs_param_list_procs_s* %473, i32 0, i32 7
  %474 = load i32 (%struct.gs_param_list_s*, i8*, i32)*, i32 (%struct.gs_param_list_s*, i8*, i32)** %signal_error869, align 8, !tbaa !93
  %475 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %476 = load i32, i32* %code, align 4, !tbaa !26
  %call870 = call i32 %474(%struct.gs_param_list_s* %475, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.31, i32 0, i32 0), i32 %476) #5
  br label %if.end.879

if.else.871:                                      ; preds = %cond.end.861
  %477 = load i32, i32* %code, align 4, !tbaa !26
  %cmp872 = icmp eq i32 %477, 0
  br i1 %cmp872, label %if.then.874, label %if.end.878

if.then.874:                                      ; preds = %if.else.871
  %478 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc875 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %478, i32 0, i32 68
  %flags876 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc875, i32 0, i32 0
  %479 = load i64, i64* %flags876, align 8, !tbaa !5
  %or877 = or i64 %479, 262144
  store i64 %or877, i64* %flags876, align 8, !tbaa !5
  br label %if.end.878

if.end.878:                                       ; preds = %if.then.874, %if.else.871
  br label %if.end.879

if.end.879:                                       ; preds = %if.end.878, %if.then.867
  %480 = load i32, i32* %error, align 4, !tbaa !26
  %481 = load i32, i32* %code, align 4, !tbaa !26
  %cmp880 = icmp sgt i32 %480, %481
  br i1 %cmp880, label %cond.true.882, label %cond.false.883

cond.true.882:                                    ; preds = %if.end.879
  %482 = load i32, i32* %code, align 4, !tbaa !26
  br label %cond.end.884

cond.false.883:                                   ; preds = %if.end.879
  %483 = load i32, i32* %error, align 4, !tbaa !26
  br label %cond.end.884

cond.end.884:                                     ; preds = %cond.false.883, %cond.true.882
  %cond885 = phi i32 [ %482, %cond.true.882 ], [ %483, %cond.false.883 ]
  store i32 %cond885, i32* %error, align 4, !tbaa !26
  %484 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %485 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc886 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %485, i32 0, i32 68
  %escp_height = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc886, i32 0, i32 16
  %call887 = call i32 @param_read_int(%struct.gs_param_list_s* %484, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.32, i32 0, i32 0), i32* %escp_height) #5
  store i32 %call887, i32* %code, align 4, !tbaa !26
  %486 = load i32, i32* %code, align 4, !tbaa !26
  %cmp888 = icmp slt i32 %486, 0
  br i1 %cmp888, label %if.then.890, label %if.else.894

if.then.890:                                      ; preds = %cond.end.884
  %487 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %procs891 = getelementptr inbounds %struct.gs_param_list_s, %struct.gs_param_list_s* %487, i32 0, i32 0
  %488 = load %struct.gs_param_list_procs_s*, %struct.gs_param_list_procs_s** %procs891, align 8, !tbaa !91
  %signal_error892 = getelementptr inbounds %struct.gs_param_list_procs_s, %struct.gs_param_list_procs_s* %488, i32 0, i32 7
  %489 = load i32 (%struct.gs_param_list_s*, i8*, i32)*, i32 (%struct.gs_param_list_s*, i8*, i32)** %signal_error892, align 8, !tbaa !93
  %490 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %491 = load i32, i32* %code, align 4, !tbaa !26
  %call893 = call i32 %489(%struct.gs_param_list_s* %490, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.32, i32 0, i32 0), i32 %491) #5
  br label %if.end.902

if.else.894:                                      ; preds = %cond.end.884
  %492 = load i32, i32* %code, align 4, !tbaa !26
  %cmp895 = icmp eq i32 %492, 0
  br i1 %cmp895, label %if.then.897, label %if.end.901

if.then.897:                                      ; preds = %if.else.894
  %493 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc898 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %493, i32 0, i32 68
  %flags899 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc898, i32 0, i32 0
  %494 = load i64, i64* %flags899, align 8, !tbaa !5
  %or900 = or i64 %494, 131072
  store i64 %or900, i64* %flags899, align 8, !tbaa !5
  br label %if.end.901

if.end.901:                                       ; preds = %if.then.897, %if.else.894
  br label %if.end.902

if.end.902:                                       ; preds = %if.end.901, %if.then.890
  %495 = load i32, i32* %error, align 4, !tbaa !26
  %496 = load i32, i32* %code, align 4, !tbaa !26
  %cmp903 = icmp sgt i32 %495, %496
  br i1 %cmp903, label %cond.true.905, label %cond.false.906

cond.true.905:                                    ; preds = %if.end.902
  %497 = load i32, i32* %code, align 4, !tbaa !26
  br label %cond.end.907

cond.false.906:                                   ; preds = %if.end.902
  %498 = load i32, i32* %error, align 4, !tbaa !26
  br label %cond.end.907

cond.end.907:                                     ; preds = %cond.false.906, %cond.true.905
  %cond908 = phi i32 [ %497, %cond.true.905 ], [ %498, %cond.false.906 ]
  store i32 %cond908, i32* %error, align 4, !tbaa !26
  %499 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %500 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc909 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %500, i32 0, i32 68
  %escp_top = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc909, i32 0, i32 17
  %call910 = call i32 @param_read_int(%struct.gs_param_list_s* %499, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.33, i32 0, i32 0), i32* %escp_top) #5
  store i32 %call910, i32* %code, align 4, !tbaa !26
  %501 = load i32, i32* %code, align 4, !tbaa !26
  %cmp911 = icmp slt i32 %501, 0
  br i1 %cmp911, label %if.then.913, label %if.else.917

if.then.913:                                      ; preds = %cond.end.907
  %502 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %procs914 = getelementptr inbounds %struct.gs_param_list_s, %struct.gs_param_list_s* %502, i32 0, i32 0
  %503 = load %struct.gs_param_list_procs_s*, %struct.gs_param_list_procs_s** %procs914, align 8, !tbaa !91
  %signal_error915 = getelementptr inbounds %struct.gs_param_list_procs_s, %struct.gs_param_list_procs_s* %503, i32 0, i32 7
  %504 = load i32 (%struct.gs_param_list_s*, i8*, i32)*, i32 (%struct.gs_param_list_s*, i8*, i32)** %signal_error915, align 8, !tbaa !93
  %505 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %506 = load i32, i32* %code, align 4, !tbaa !26
  %call916 = call i32 %504(%struct.gs_param_list_s* %505, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.33, i32 0, i32 0), i32 %506) #5
  br label %if.end.925

if.else.917:                                      ; preds = %cond.end.907
  %507 = load i32, i32* %code, align 4, !tbaa !26
  %cmp918 = icmp eq i32 %507, 0
  br i1 %cmp918, label %if.then.920, label %if.end.924

if.then.920:                                      ; preds = %if.else.917
  %508 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc921 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %508, i32 0, i32 68
  %flags922 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc921, i32 0, i32 0
  %509 = load i64, i64* %flags922, align 8, !tbaa !5
  %or923 = or i64 %509, 524288
  store i64 %or923, i64* %flags922, align 8, !tbaa !5
  br label %if.end.924

if.end.924:                                       ; preds = %if.then.920, %if.else.917
  br label %if.end.925

if.end.925:                                       ; preds = %if.end.924, %if.then.913
  %510 = load i32, i32* %error, align 4, !tbaa !26
  %511 = load i32, i32* %code, align 4, !tbaa !26
  %cmp926 = icmp sgt i32 %510, %511
  br i1 %cmp926, label %cond.true.928, label %cond.false.929

cond.true.928:                                    ; preds = %if.end.925
  %512 = load i32, i32* %code, align 4, !tbaa !26
  br label %cond.end.930

cond.false.929:                                   ; preds = %if.end.925
  %513 = load i32, i32* %error, align 4, !tbaa !26
  br label %cond.end.930

cond.end.930:                                     ; preds = %cond.false.929, %cond.true.928
  %cond931 = phi i32 [ %512, %cond.true.928 ], [ %513, %cond.false.929 ]
  store i32 %cond931, i32* %error, align 4, !tbaa !26
  %514 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %515 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc932 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %515, i32 0, i32 68
  %escp_bottom = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc932, i32 0, i32 18
  %call933 = call i32 @param_read_int(%struct.gs_param_list_s* %514, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.34, i32 0, i32 0), i32* %escp_bottom) #5
  store i32 %call933, i32* %code, align 4, !tbaa !26
  %516 = load i32, i32* %code, align 4, !tbaa !26
  %cmp934 = icmp slt i32 %516, 0
  br i1 %cmp934, label %if.then.936, label %if.else.940

if.then.936:                                      ; preds = %cond.end.930
  %517 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %procs937 = getelementptr inbounds %struct.gs_param_list_s, %struct.gs_param_list_s* %517, i32 0, i32 0
  %518 = load %struct.gs_param_list_procs_s*, %struct.gs_param_list_procs_s** %procs937, align 8, !tbaa !91
  %signal_error938 = getelementptr inbounds %struct.gs_param_list_procs_s, %struct.gs_param_list_procs_s* %518, i32 0, i32 7
  %519 = load i32 (%struct.gs_param_list_s*, i8*, i32)*, i32 (%struct.gs_param_list_s*, i8*, i32)** %signal_error938, align 8, !tbaa !93
  %520 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %521 = load i32, i32* %code, align 4, !tbaa !26
  %call939 = call i32 %519(%struct.gs_param_list_s* %520, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.34, i32 0, i32 0), i32 %521) #5
  br label %if.end.948

if.else.940:                                      ; preds = %cond.end.930
  %522 = load i32, i32* %code, align 4, !tbaa !26
  %cmp941 = icmp eq i32 %522, 0
  br i1 %cmp941, label %if.then.943, label %if.end.947

if.then.943:                                      ; preds = %if.else.940
  %523 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc944 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %523, i32 0, i32 68
  %flags945 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc944, i32 0, i32 0
  %524 = load i64, i64* %flags945, align 8, !tbaa !5
  %or946 = or i64 %524, 1048576
  store i64 %or946, i64* %flags945, align 8, !tbaa !5
  br label %if.end.947

if.end.947:                                       ; preds = %if.then.943, %if.else.940
  br label %if.end.948

if.end.948:                                       ; preds = %if.end.947, %if.then.936
  %525 = load i32, i32* %error, align 4, !tbaa !26
  %526 = load i32, i32* %code, align 4, !tbaa !26
  %cmp949 = icmp sgt i32 %525, %526
  br i1 %cmp949, label %cond.true.951, label %cond.false.952

cond.true.951:                                    ; preds = %if.end.948
  %527 = load i32, i32* %code, align 4, !tbaa !26
  br label %cond.end.953

cond.false.952:                                   ; preds = %if.end.948
  %528 = load i32, i32* %error, align 4, !tbaa !26
  br label %cond.end.953

cond.end.953:                                     ; preds = %cond.false.952, %cond.true.951
  %cond954 = phi i32 [ %527, %cond.true.951 ], [ %528, %cond.false.952 ]
  store i32 %cond954, i32* %error, align 4, !tbaa !26
  %529 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %530 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc955 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %530, i32 0, i32 68
  %escp_init = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc955, i32 0, i32 13
  %call956 = call i32 @param_read_string(%struct.gs_param_list_s* %529, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.35, i32 0, i32 0), %struct.gs_param_string_s* %escp_init) #5
  store i32 %call956, i32* %code, align 4, !tbaa !26
  %531 = load i32, i32* %code, align 4, !tbaa !26
  %cmp957 = icmp eq i32 %531, 0
  br i1 %cmp957, label %if.then.959, label %if.end.963

if.then.959:                                      ; preds = %cond.end.953
  %532 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc960 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %532, i32 0, i32 68
  %flags961 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc960, i32 0, i32 0
  %533 = load i64, i64* %flags961, align 8, !tbaa !5
  %or962 = or i64 %533, 2097152
  store i64 %or962, i64* %flags961, align 8, !tbaa !5
  br label %if.end.963

if.end.963:                                       ; preds = %if.then.959, %cond.end.953
  %534 = load i32, i32* %error, align 4, !tbaa !26
  %535 = load i32, i32* %code, align 4, !tbaa !26
  %cmp964 = icmp sgt i32 %534, %535
  br i1 %cmp964, label %cond.true.966, label %cond.false.967

cond.true.966:                                    ; preds = %if.end.963
  %536 = load i32, i32* %code, align 4, !tbaa !26
  br label %cond.end.968

cond.false.967:                                   ; preds = %if.end.963
  %537 = load i32, i32* %error, align 4, !tbaa !26
  br label %cond.end.968

cond.end.968:                                     ; preds = %cond.false.967, %cond.true.966
  %cond969 = phi i32 [ %536, %cond.true.966 ], [ %537, %cond.false.967 ]
  store i32 %cond969, i32* %error, align 4, !tbaa !26
  %538 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %539 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc970 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %539, i32 0, i32 68
  %escp_release = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc970, i32 0, i32 14
  %call971 = call i32 @param_read_string(%struct.gs_param_list_s* %538, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.36, i32 0, i32 0), %struct.gs_param_string_s* %escp_release) #5
  store i32 %call971, i32* %code, align 4, !tbaa !26
  %540 = load i32, i32* %code, align 4, !tbaa !26
  %cmp972 = icmp eq i32 %540, 0
  br i1 %cmp972, label %if.then.974, label %if.end.978

if.then.974:                                      ; preds = %cond.end.968
  %541 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc975 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %541, i32 0, i32 68
  %flags976 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc975, i32 0, i32 0
  %542 = load i64, i64* %flags976, align 8, !tbaa !5
  %or977 = or i64 %542, 4194304
  store i64 %or977, i64* %flags976, align 8, !tbaa !5
  br label %if.end.978

if.end.978:                                       ; preds = %if.then.974, %cond.end.968
  %543 = load i32, i32* %error, align 4, !tbaa !26
  %544 = load i32, i32* %code, align 4, !tbaa !26
  %cmp979 = icmp sgt i32 %543, %544
  br i1 %cmp979, label %cond.true.981, label %cond.false.982

cond.true.981:                                    ; preds = %if.end.978
  %545 = load i32, i32* %code, align 4, !tbaa !26
  br label %cond.end.983

cond.false.982:                                   ; preds = %if.end.978
  %546 = load i32, i32* %error, align 4, !tbaa !26
  br label %cond.end.983

cond.end.983:                                     ; preds = %cond.false.982, %cond.true.981
  %cond984 = phi i32 [ %545, %cond.true.981 ], [ %546, %cond.false.982 ]
  store i32 %cond984, i32* %error, align 4, !tbaa !26
  %547 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call985 = call i32 @param_read_float_array(%struct.gs_param_list_s* %547, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.38, i32 0, i32 0), %struct.gs_param_float_array_s* %pfa) #5
  store i32 %call985, i32* %code, align 4, !tbaa !26
  %548 = load i32, i32* %error, align 4, !tbaa !26
  %cmp986 = icmp eq i32 %548, 0
  br i1 %cmp986, label %land.lhs.true.988, label %if.else.1024

land.lhs.true.988:                                ; preds = %cond.end.983
  %549 = load i32, i32* %code, align 4, !tbaa !26
  %cmp989 = icmp eq i32 %549, 0
  br i1 %cmp989, label %if.then.991, label %if.else.1024

if.then.991:                                      ; preds = %land.lhs.true.988
  %550 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %color_info992 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %550, i32 0, i32 11
  %num_components993 = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info992, i32 0, i32 1
  %551 = load i32, i32* %num_components993, align 4, !tbaa !40
  %cmp994 = icmp eq i32 %551, 1
  br i1 %cmp994, label %land.lhs.true.996, label %lor.lhs.false.1000

land.lhs.true.996:                                ; preds = %if.then.991
  %size997 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 1
  %552 = load i32, i32* %size997, align 4, !tbaa !89
  %cmp998 = icmp eq i32 %552, 3
  br i1 %cmp998, label %if.then.1018, label %lor.lhs.false.1000

lor.lhs.false.1000:                               ; preds = %land.lhs.true.996, %if.then.991
  %553 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %color_info1001 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %553, i32 0, i32 11
  %num_components1002 = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info1001, i32 0, i32 1
  %554 = load i32, i32* %num_components1002, align 4, !tbaa !40
  %cmp1003 = icmp eq i32 %554, 3
  br i1 %cmp1003, label %land.lhs.true.1005, label %lor.lhs.false.1009

land.lhs.true.1005:                               ; preds = %lor.lhs.false.1000
  %size1006 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 1
  %555 = load i32, i32* %size1006, align 4, !tbaa !89
  %cmp1007 = icmp eq i32 %555, 9
  br i1 %cmp1007, label %if.then.1018, label %lor.lhs.false.1009

lor.lhs.false.1009:                               ; preds = %land.lhs.true.1005, %lor.lhs.false.1000
  %556 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %color_info1010 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %556, i32 0, i32 11
  %num_components1011 = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info1010, i32 0, i32 1
  %557 = load i32, i32* %num_components1011, align 4, !tbaa !40
  %cmp1012 = icmp eq i32 %557, 4
  br i1 %cmp1012, label %land.lhs.true.1014, label %if.else.1022

land.lhs.true.1014:                               ; preds = %lor.lhs.false.1009
  %size1015 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 1
  %558 = load i32, i32* %size1015, align 4, !tbaa !89
  %cmp1016 = icmp eq i32 %558, 16
  br i1 %cmp1016, label %if.then.1018, label %if.else.1022

if.then.1018:                                     ; preds = %land.lhs.true.1014, %land.lhs.true.1005, %land.lhs.true.996
  %data1019 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 0
  %559 = load float*, float** %data1019, align 8, !tbaa !87
  %560 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc1020 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %560, i32 0, i32 68
  %am1021 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc1020, i32 0, i32 3
  store float* %559, float** %am1021, align 8, !tbaa !86
  br label %if.end.1023

if.else.1022:                                     ; preds = %land.lhs.true.1014, %lor.lhs.false.1009
  store i32 -15, i32* %code, align 4, !tbaa !26
  br label %if.end.1023

if.end.1023:                                      ; preds = %if.else.1022, %if.then.1018
  br label %if.end.1036

if.else.1024:                                     ; preds = %land.lhs.true.988, %cond.end.983
  %561 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1025 = icmp slt i32 %561, 0
  br i1 %cmp1025, label %if.then.1027, label %if.end.1035

if.then.1027:                                     ; preds = %if.else.1024
  %562 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call1028 = call i32 @param_read_null(%struct.gs_param_list_s* %562, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.38, i32 0, i32 0)) #5
  store i32 %call1028, i32* %code, align 4, !tbaa !26
  %563 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1029 = icmp eq i32 %563, 0
  br i1 %cmp1029, label %if.then.1031, label %if.end.1034

if.then.1031:                                     ; preds = %if.then.1027
  %564 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc1032 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %564, i32 0, i32 68
  %am1033 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc1032, i32 0, i32 3
  store float* null, float** %am1033, align 8, !tbaa !86
  br label %if.end.1034

if.end.1034:                                      ; preds = %if.then.1031, %if.then.1027
  br label %if.end.1035

if.end.1035:                                      ; preds = %if.end.1034, %if.else.1024
  br label %if.end.1036

if.end.1036:                                      ; preds = %if.end.1035, %if.end.1023
  %565 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1037 = icmp slt i32 %565, 0
  br i1 %cmp1037, label %if.then.1039, label %if.end.1043

if.then.1039:                                     ; preds = %if.end.1036
  %566 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %procs1040 = getelementptr inbounds %struct.gs_param_list_s, %struct.gs_param_list_s* %566, i32 0, i32 0
  %567 = load %struct.gs_param_list_procs_s*, %struct.gs_param_list_procs_s** %procs1040, align 8, !tbaa !91
  %signal_error1041 = getelementptr inbounds %struct.gs_param_list_procs_s, %struct.gs_param_list_procs_s* %567, i32 0, i32 7
  %568 = load i32 (%struct.gs_param_list_s*, i8*, i32)*, i32 (%struct.gs_param_list_s*, i8*, i32)** %signal_error1041, align 8, !tbaa !93
  %569 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %570 = load i32, i32* %code, align 4, !tbaa !26
  %call1042 = call i32 %568(%struct.gs_param_list_s* %569, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.38, i32 0, i32 0), i32 %570) #5
  br label %if.end.1043

if.end.1043:                                      ; preds = %if.then.1039, %if.end.1036
  %571 = load i32, i32* %error, align 4, !tbaa !26
  %572 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1044 = icmp sgt i32 %571, %572
  br i1 %cmp1044, label %cond.true.1046, label %cond.false.1047

cond.true.1046:                                   ; preds = %if.end.1043
  %573 = load i32, i32* %code, align 4, !tbaa !26
  br label %cond.end.1048

cond.false.1047:                                  ; preds = %if.end.1043
  %574 = load i32, i32* %error, align 4, !tbaa !26
  br label %cond.end.1048

cond.end.1048:                                    ; preds = %cond.false.1047, %cond.true.1046
  %cond1049 = phi i32 [ %573, %cond.true.1046 ], [ %574, %cond.false.1047 ]
  store i32 %cond1049, i32* %error, align 4, !tbaa !26
  %575 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %color_info1050 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %575, i32 0, i32 11
  %num_components1051 = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info1050, i32 0, i32 1
  %576 = load i32, i32* %num_components1051, align 4, !tbaa !40
  %cmp1052 = icmp eq i32 %576, 1
  br i1 %cmp1052, label %if.then.1054, label %if.else.1379

if.then.1054:                                     ; preds = %cond.end.1048
  %577 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call1055 = call i32 @param_read_float_array(%struct.gs_param_list_s* %577, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i32 0, i32 0), %struct.gs_param_float_array_s* %pfa) #5
  store i32 %call1055, i32* %code, align 4, !tbaa !26
  %578 = load i32, i32* %error, align 4, !tbaa !26
  %cmp1056 = icmp eq i32 %578, 0
  br i1 %cmp1056, label %land.lhs.true.1058, label %if.else.1076

land.lhs.true.1058:                               ; preds = %if.then.1054
  %579 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1059 = icmp eq i32 %579, 0
  br i1 %cmp1059, label %if.then.1061, label %if.else.1076

if.then.1061:                                     ; preds = %land.lhs.true.1058
  %size1062 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 1
  %580 = load i32, i32* %size1062, align 4, !tbaa !89
  %cmp1063 = icmp ugt i32 %580, 1
  br i1 %cmp1063, label %if.then.1065, label %if.else.1074

if.then.1065:                                     ; preds = %if.then.1061
  %data1066 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 0
  %581 = load float*, float** %data1066, align 8, !tbaa !87
  %582 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc1067 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %582, i32 0, i32 68
  %extc1068 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc1067, i32 0, i32 4
  %arrayidx1069 = getelementptr inbounds [4 x float*], [4 x float*]* %extc1068, i32 0, i64 0
  store float* %581, float** %arrayidx1069, align 8, !tbaa !1
  %size1070 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 1
  %583 = load i32, i32* %size1070, align 4, !tbaa !89
  %584 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc1071 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %584, i32 0, i32 68
  %sizc1072 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc1071, i32 0, i32 5
  %arrayidx1073 = getelementptr inbounds [4 x i32], [4 x i32]* %sizc1072, i32 0, i64 0
  store i32 %583, i32* %arrayidx1073, align 4, !tbaa !26
  br label %if.end.1075

if.else.1074:                                     ; preds = %if.then.1061
  store i32 -15, i32* %code, align 4, !tbaa !26
  br label %if.end.1075

if.end.1075:                                      ; preds = %if.else.1074, %if.then.1065
  br label %if.end.1092

if.else.1076:                                     ; preds = %land.lhs.true.1058, %if.then.1054
  %585 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1077 = icmp slt i32 %585, 0
  br i1 %cmp1077, label %if.then.1079, label %if.end.1091

if.then.1079:                                     ; preds = %if.else.1076
  %586 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call1080 = call i32 @param_read_null(%struct.gs_param_list_s* %586, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i32 0, i32 0)) #5
  store i32 %call1080, i32* %code, align 4, !tbaa !26
  %587 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1081 = icmp eq i32 %587, 0
  br i1 %cmp1081, label %if.then.1083, label %if.end.1090

if.then.1083:                                     ; preds = %if.then.1079
  %588 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc1084 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %588, i32 0, i32 68
  %extc1085 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc1084, i32 0, i32 4
  %arrayidx1086 = getelementptr inbounds [4 x float*], [4 x float*]* %extc1085, i32 0, i64 0
  store float* null, float** %arrayidx1086, align 8, !tbaa !1
  %589 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc1087 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %589, i32 0, i32 68
  %sizc1088 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc1087, i32 0, i32 5
  %arrayidx1089 = getelementptr inbounds [4 x i32], [4 x i32]* %sizc1088, i32 0, i64 0
  store i32 0, i32* %arrayidx1089, align 4, !tbaa !26
  br label %if.end.1090

if.end.1090:                                      ; preds = %if.then.1083, %if.then.1079
  br label %if.end.1091

if.end.1091:                                      ; preds = %if.end.1090, %if.else.1076
  br label %if.end.1092

if.end.1092:                                      ; preds = %if.end.1091, %if.end.1075
  %590 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1093 = icmp slt i32 %590, 0
  br i1 %cmp1093, label %if.then.1095, label %if.end.1099

if.then.1095:                                     ; preds = %if.end.1092
  %591 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %procs1096 = getelementptr inbounds %struct.gs_param_list_s, %struct.gs_param_list_s* %591, i32 0, i32 0
  %592 = load %struct.gs_param_list_procs_s*, %struct.gs_param_list_procs_s** %procs1096, align 8, !tbaa !91
  %signal_error1097 = getelementptr inbounds %struct.gs_param_list_procs_s, %struct.gs_param_list_procs_s* %592, i32 0, i32 7
  %593 = load i32 (%struct.gs_param_list_s*, i8*, i32)*, i32 (%struct.gs_param_list_s*, i8*, i32)** %signal_error1097, align 8, !tbaa !93
  %594 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %595 = load i32, i32* %code, align 4, !tbaa !26
  %call1098 = call i32 %593(%struct.gs_param_list_s* %594, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i32 0, i32 0), i32 %595) #5
  br label %if.end.1099

if.end.1099:                                      ; preds = %if.then.1095, %if.end.1092
  %596 = load i32, i32* %error, align 4, !tbaa !26
  %597 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1100 = icmp sgt i32 %596, %597
  br i1 %cmp1100, label %cond.true.1102, label %cond.false.1103

cond.true.1102:                                   ; preds = %if.end.1099
  %598 = load i32, i32* %code, align 4, !tbaa !26
  br label %cond.end.1104

cond.false.1103:                                  ; preds = %if.end.1099
  %599 = load i32, i32* %error, align 4, !tbaa !26
  br label %cond.end.1104

cond.end.1104:                                    ; preds = %cond.false.1103, %cond.true.1102
  %cond1105 = phi i32 [ %598, %cond.true.1102 ], [ %599, %cond.false.1103 ]
  store i32 %cond1105, i32* %error, align 4, !tbaa !26
  %600 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call1106 = call i32 @param_read_float_array(%struct.gs_param_list_s* %600, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.40, i32 0, i32 0), %struct.gs_param_float_array_s* %pfa) #5
  store i32 %call1106, i32* %code, align 4, !tbaa !26
  %601 = load i32, i32* %error, align 4, !tbaa !26
  %cmp1107 = icmp eq i32 %601, 0
  br i1 %cmp1107, label %land.lhs.true.1109, label %if.else.1121

land.lhs.true.1109:                               ; preds = %cond.end.1104
  %602 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1110 = icmp eq i32 %602, 0
  br i1 %cmp1110, label %if.then.1112, label %if.else.1121

if.then.1112:                                     ; preds = %land.lhs.true.1109
  %data1113 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 0
  %603 = load float*, float** %data1113, align 8, !tbaa !87
  %604 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc1114 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %604, i32 0, i32 68
  %extv1115 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc1114, i32 0, i32 7
  %arrayidx1116 = getelementptr inbounds [4 x float*], [4 x float*]* %extv1115, i32 0, i64 0
  store float* %603, float** %arrayidx1116, align 8, !tbaa !1
  %size1117 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 1
  %605 = load i32, i32* %size1117, align 4, !tbaa !89
  %606 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc1118 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %606, i32 0, i32 68
  %sizv1119 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc1118, i32 0, i32 8
  %arrayidx1120 = getelementptr inbounds [4 x i32], [4 x i32]* %sizv1119, i32 0, i64 0
  store i32 %605, i32* %arrayidx1120, align 4, !tbaa !26
  br label %if.end.1137

if.else.1121:                                     ; preds = %land.lhs.true.1109, %cond.end.1104
  %607 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1122 = icmp slt i32 %607, 0
  br i1 %cmp1122, label %if.then.1124, label %if.end.1136

if.then.1124:                                     ; preds = %if.else.1121
  %608 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call1125 = call i32 @param_read_null(%struct.gs_param_list_s* %608, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.40, i32 0, i32 0)) #5
  store i32 %call1125, i32* %code, align 4, !tbaa !26
  %609 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1126 = icmp eq i32 %609, 0
  br i1 %cmp1126, label %if.then.1128, label %if.end.1135

if.then.1128:                                     ; preds = %if.then.1124
  %610 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc1129 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %610, i32 0, i32 68
  %extv1130 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc1129, i32 0, i32 7
  %arrayidx1131 = getelementptr inbounds [4 x float*], [4 x float*]* %extv1130, i32 0, i64 0
  store float* getelementptr inbounds ([2 x float], [2 x float]* @defext, i32 0, i32 0), float** %arrayidx1131, align 8, !tbaa !1
  %611 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc1132 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %611, i32 0, i32 68
  %sizv1133 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc1132, i32 0, i32 8
  %arrayidx1134 = getelementptr inbounds [4 x i32], [4 x i32]* %sizv1133, i32 0, i64 0
  store i32 2, i32* %arrayidx1134, align 4, !tbaa !26
  br label %if.end.1135

if.end.1135:                                      ; preds = %if.then.1128, %if.then.1124
  br label %if.end.1136

if.end.1136:                                      ; preds = %if.end.1135, %if.else.1121
  br label %if.end.1137

if.end.1137:                                      ; preds = %if.end.1136, %if.then.1112
  %612 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1138 = icmp slt i32 %612, 0
  br i1 %cmp1138, label %if.then.1140, label %if.end.1144

if.then.1140:                                     ; preds = %if.end.1137
  %613 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %procs1141 = getelementptr inbounds %struct.gs_param_list_s, %struct.gs_param_list_s* %613, i32 0, i32 0
  %614 = load %struct.gs_param_list_procs_s*, %struct.gs_param_list_procs_s** %procs1141, align 8, !tbaa !91
  %signal_error1142 = getelementptr inbounds %struct.gs_param_list_procs_s, %struct.gs_param_list_procs_s* %614, i32 0, i32 7
  %615 = load i32 (%struct.gs_param_list_s*, i8*, i32)*, i32 (%struct.gs_param_list_s*, i8*, i32)** %signal_error1142, align 8, !tbaa !93
  %616 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %617 = load i32, i32* %code, align 4, !tbaa !26
  %call1143 = call i32 %615(%struct.gs_param_list_s* %616, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.40, i32 0, i32 0), i32 %617) #5
  br label %if.end.1144

if.end.1144:                                      ; preds = %if.then.1140, %if.end.1137
  %618 = load i32, i32* %error, align 4, !tbaa !26
  %619 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1145 = icmp sgt i32 %618, %619
  br i1 %cmp1145, label %cond.true.1147, label %cond.false.1148

cond.true.1147:                                   ; preds = %if.end.1144
  %620 = load i32, i32* %code, align 4, !tbaa !26
  br label %cond.end.1149

cond.false.1148:                                  ; preds = %if.end.1144
  %621 = load i32, i32* %error, align 4, !tbaa !26
  br label %cond.end.1149

cond.end.1149:                                    ; preds = %cond.false.1148, %cond.true.1147
  %cond1150 = phi i32 [ %620, %cond.true.1147 ], [ %621, %cond.false.1148 ]
  store i32 %cond1150, i32* %error, align 4, !tbaa !26
  %622 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call1151 = call i32 @param_read_null(%struct.gs_param_list_s* %622, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.41, i32 0, i32 0)) #5
  store i32 %call1151, i32* %code, align 4, !tbaa !26
  %623 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1152 = icmp eq i32 %623, -20
  br i1 %cmp1152, label %if.then.1154, label %if.end.1156

if.then.1154:                                     ; preds = %cond.end.1149
  %624 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call1155 = call i32 @param_read_float_array(%struct.gs_param_list_s* %624, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.41, i32 0, i32 0), %struct.gs_param_float_array_s* %pfa) #5
  store i32 %call1155, i32* %code, align 4, !tbaa !26
  br label %if.end.1156

if.end.1156:                                      ; preds = %if.then.1154, %cond.end.1149
  %625 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1157 = icmp slt i32 %625, 0
  br i1 %cmp1157, label %if.then.1159, label %if.end.1163

if.then.1159:                                     ; preds = %if.end.1156
  %626 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %procs1160 = getelementptr inbounds %struct.gs_param_list_s, %struct.gs_param_list_s* %626, i32 0, i32 0
  %627 = load %struct.gs_param_list_procs_s*, %struct.gs_param_list_procs_s** %procs1160, align 8, !tbaa !91
  %signal_error1161 = getelementptr inbounds %struct.gs_param_list_procs_s, %struct.gs_param_list_procs_s* %627, i32 0, i32 7
  %628 = load i32 (%struct.gs_param_list_s*, i8*, i32)*, i32 (%struct.gs_param_list_s*, i8*, i32)** %signal_error1161, align 8, !tbaa !93
  %629 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %630 = load i32, i32* %code, align 4, !tbaa !26
  %call1162 = call i32 %628(%struct.gs_param_list_s* %629, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.41, i32 0, i32 0), i32 %630) #5
  br label %if.end.1163

if.end.1163:                                      ; preds = %if.then.1159, %if.end.1156
  %631 = load i32, i32* %error, align 4, !tbaa !26
  %632 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1164 = icmp sgt i32 %631, %632
  br i1 %cmp1164, label %cond.true.1166, label %cond.false.1167

cond.true.1166:                                   ; preds = %if.end.1163
  %633 = load i32, i32* %code, align 4, !tbaa !26
  br label %cond.end.1168

cond.false.1167:                                  ; preds = %if.end.1163
  %634 = load i32, i32* %error, align 4, !tbaa !26
  br label %cond.end.1168

cond.end.1168:                                    ; preds = %cond.false.1167, %cond.true.1166
  %cond1169 = phi i32 [ %633, %cond.true.1166 ], [ %634, %cond.false.1167 ]
  store i32 %cond1169, i32* %error, align 4, !tbaa !26
  %635 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call1170 = call i32 @param_read_null(%struct.gs_param_list_s* %635, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.42, i32 0, i32 0)) #5
  store i32 %call1170, i32* %code, align 4, !tbaa !26
  %636 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1171 = icmp eq i32 %636, -20
  br i1 %cmp1171, label %if.then.1173, label %if.end.1175

if.then.1173:                                     ; preds = %cond.end.1168
  %637 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call1174 = call i32 @param_read_float_array(%struct.gs_param_list_s* %637, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.42, i32 0, i32 0), %struct.gs_param_float_array_s* %pfa) #5
  store i32 %call1174, i32* %code, align 4, !tbaa !26
  br label %if.end.1175

if.end.1175:                                      ; preds = %if.then.1173, %cond.end.1168
  %638 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1176 = icmp slt i32 %638, 0
  br i1 %cmp1176, label %if.then.1178, label %if.end.1182

if.then.1178:                                     ; preds = %if.end.1175
  %639 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %procs1179 = getelementptr inbounds %struct.gs_param_list_s, %struct.gs_param_list_s* %639, i32 0, i32 0
  %640 = load %struct.gs_param_list_procs_s*, %struct.gs_param_list_procs_s** %procs1179, align 8, !tbaa !91
  %signal_error1180 = getelementptr inbounds %struct.gs_param_list_procs_s, %struct.gs_param_list_procs_s* %640, i32 0, i32 7
  %641 = load i32 (%struct.gs_param_list_s*, i8*, i32)*, i32 (%struct.gs_param_list_s*, i8*, i32)** %signal_error1180, align 8, !tbaa !93
  %642 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %643 = load i32, i32* %code, align 4, !tbaa !26
  %call1181 = call i32 %641(%struct.gs_param_list_s* %642, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.42, i32 0, i32 0), i32 %643) #5
  br label %if.end.1182

if.end.1182:                                      ; preds = %if.then.1178, %if.end.1175
  %644 = load i32, i32* %error, align 4, !tbaa !26
  %645 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1183 = icmp sgt i32 %644, %645
  br i1 %cmp1183, label %cond.true.1185, label %cond.false.1186

cond.true.1185:                                   ; preds = %if.end.1182
  %646 = load i32, i32* %code, align 4, !tbaa !26
  br label %cond.end.1187

cond.false.1186:                                  ; preds = %if.end.1182
  %647 = load i32, i32* %error, align 4, !tbaa !26
  br label %cond.end.1187

cond.end.1187:                                    ; preds = %cond.false.1186, %cond.true.1185
  %cond1188 = phi i32 [ %646, %cond.true.1185 ], [ %647, %cond.false.1186 ]
  store i32 %cond1188, i32* %error, align 4, !tbaa !26
  %648 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call1189 = call i32 @param_read_null(%struct.gs_param_list_s* %648, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.43, i32 0, i32 0)) #5
  store i32 %call1189, i32* %code, align 4, !tbaa !26
  %649 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1190 = icmp eq i32 %649, -20
  br i1 %cmp1190, label %if.then.1192, label %if.end.1194

if.then.1192:                                     ; preds = %cond.end.1187
  %650 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call1193 = call i32 @param_read_float_array(%struct.gs_param_list_s* %650, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.43, i32 0, i32 0), %struct.gs_param_float_array_s* %pfa) #5
  store i32 %call1193, i32* %code, align 4, !tbaa !26
  br label %if.end.1194

if.end.1194:                                      ; preds = %if.then.1192, %cond.end.1187
  %651 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1195 = icmp slt i32 %651, 0
  br i1 %cmp1195, label %if.then.1197, label %if.end.1201

if.then.1197:                                     ; preds = %if.end.1194
  %652 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %procs1198 = getelementptr inbounds %struct.gs_param_list_s, %struct.gs_param_list_s* %652, i32 0, i32 0
  %653 = load %struct.gs_param_list_procs_s*, %struct.gs_param_list_procs_s** %procs1198, align 8, !tbaa !91
  %signal_error1199 = getelementptr inbounds %struct.gs_param_list_procs_s, %struct.gs_param_list_procs_s* %653, i32 0, i32 7
  %654 = load i32 (%struct.gs_param_list_s*, i8*, i32)*, i32 (%struct.gs_param_list_s*, i8*, i32)** %signal_error1199, align 8, !tbaa !93
  %655 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %656 = load i32, i32* %code, align 4, !tbaa !26
  %call1200 = call i32 %654(%struct.gs_param_list_s* %655, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.43, i32 0, i32 0), i32 %656) #5
  br label %if.end.1201

if.end.1201:                                      ; preds = %if.then.1197, %if.end.1194
  %657 = load i32, i32* %error, align 4, !tbaa !26
  %658 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1202 = icmp sgt i32 %657, %658
  br i1 %cmp1202, label %cond.true.1204, label %cond.false.1205

cond.true.1204:                                   ; preds = %if.end.1201
  %659 = load i32, i32* %code, align 4, !tbaa !26
  br label %cond.end.1206

cond.false.1205:                                  ; preds = %if.end.1201
  %660 = load i32, i32* %error, align 4, !tbaa !26
  br label %cond.end.1206

cond.end.1206:                                    ; preds = %cond.false.1205, %cond.true.1204
  %cond1207 = phi i32 [ %659, %cond.true.1204 ], [ %660, %cond.false.1205 ]
  store i32 %cond1207, i32* %error, align 4, !tbaa !26
  %661 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call1208 = call i32 @param_read_null(%struct.gs_param_list_s* %661, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.44, i32 0, i32 0)) #5
  store i32 %call1208, i32* %code, align 4, !tbaa !26
  %662 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1209 = icmp eq i32 %662, -20
  br i1 %cmp1209, label %if.then.1211, label %if.end.1213

if.then.1211:                                     ; preds = %cond.end.1206
  %663 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call1212 = call i32 @param_read_float_array(%struct.gs_param_list_s* %663, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.44, i32 0, i32 0), %struct.gs_param_float_array_s* %pfa) #5
  store i32 %call1212, i32* %code, align 4, !tbaa !26
  br label %if.end.1213

if.end.1213:                                      ; preds = %if.then.1211, %cond.end.1206
  %664 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1214 = icmp slt i32 %664, 0
  br i1 %cmp1214, label %if.then.1216, label %if.end.1220

if.then.1216:                                     ; preds = %if.end.1213
  %665 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %procs1217 = getelementptr inbounds %struct.gs_param_list_s, %struct.gs_param_list_s* %665, i32 0, i32 0
  %666 = load %struct.gs_param_list_procs_s*, %struct.gs_param_list_procs_s** %procs1217, align 8, !tbaa !91
  %signal_error1218 = getelementptr inbounds %struct.gs_param_list_procs_s, %struct.gs_param_list_procs_s* %666, i32 0, i32 7
  %667 = load i32 (%struct.gs_param_list_s*, i8*, i32)*, i32 (%struct.gs_param_list_s*, i8*, i32)** %signal_error1218, align 8, !tbaa !93
  %668 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %669 = load i32, i32* %code, align 4, !tbaa !26
  %call1219 = call i32 %667(%struct.gs_param_list_s* %668, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.44, i32 0, i32 0), i32 %669) #5
  br label %if.end.1220

if.end.1220:                                      ; preds = %if.then.1216, %if.end.1213
  %670 = load i32, i32* %error, align 4, !tbaa !26
  %671 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1221 = icmp sgt i32 %670, %671
  br i1 %cmp1221, label %cond.true.1223, label %cond.false.1224

cond.true.1223:                                   ; preds = %if.end.1220
  %672 = load i32, i32* %code, align 4, !tbaa !26
  br label %cond.end.1225

cond.false.1224:                                  ; preds = %if.end.1220
  %673 = load i32, i32* %error, align 4, !tbaa !26
  br label %cond.end.1225

cond.end.1225:                                    ; preds = %cond.false.1224, %cond.true.1223
  %cond1226 = phi i32 [ %672, %cond.true.1223 ], [ %673, %cond.false.1224 ]
  store i32 %cond1226, i32* %error, align 4, !tbaa !26
  %674 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call1227 = call i32 @param_read_null(%struct.gs_param_list_s* %674, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.45, i32 0, i32 0)) #5
  store i32 %call1227, i32* %code, align 4, !tbaa !26
  %675 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1228 = icmp eq i32 %675, -20
  br i1 %cmp1228, label %if.then.1230, label %if.end.1232

if.then.1230:                                     ; preds = %cond.end.1225
  %676 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call1231 = call i32 @param_read_float_array(%struct.gs_param_list_s* %676, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.45, i32 0, i32 0), %struct.gs_param_float_array_s* %pfa) #5
  store i32 %call1231, i32* %code, align 4, !tbaa !26
  br label %if.end.1232

if.end.1232:                                      ; preds = %if.then.1230, %cond.end.1225
  %677 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1233 = icmp slt i32 %677, 0
  br i1 %cmp1233, label %if.then.1235, label %if.end.1239

if.then.1235:                                     ; preds = %if.end.1232
  %678 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %procs1236 = getelementptr inbounds %struct.gs_param_list_s, %struct.gs_param_list_s* %678, i32 0, i32 0
  %679 = load %struct.gs_param_list_procs_s*, %struct.gs_param_list_procs_s** %procs1236, align 8, !tbaa !91
  %signal_error1237 = getelementptr inbounds %struct.gs_param_list_procs_s, %struct.gs_param_list_procs_s* %679, i32 0, i32 7
  %680 = load i32 (%struct.gs_param_list_s*, i8*, i32)*, i32 (%struct.gs_param_list_s*, i8*, i32)** %signal_error1237, align 8, !tbaa !93
  %681 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %682 = load i32, i32* %code, align 4, !tbaa !26
  %call1238 = call i32 %680(%struct.gs_param_list_s* %681, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.45, i32 0, i32 0), i32 %682) #5
  br label %if.end.1239

if.end.1239:                                      ; preds = %if.then.1235, %if.end.1232
  %683 = load i32, i32* %error, align 4, !tbaa !26
  %684 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1240 = icmp sgt i32 %683, %684
  br i1 %cmp1240, label %cond.true.1242, label %cond.false.1243

cond.true.1242:                                   ; preds = %if.end.1239
  %685 = load i32, i32* %code, align 4, !tbaa !26
  br label %cond.end.1244

cond.false.1243:                                  ; preds = %if.end.1239
  %686 = load i32, i32* %error, align 4, !tbaa !26
  br label %cond.end.1244

cond.end.1244:                                    ; preds = %cond.false.1243, %cond.true.1242
  %cond1245 = phi i32 [ %685, %cond.true.1242 ], [ %686, %cond.false.1243 ]
  store i32 %cond1245, i32* %error, align 4, !tbaa !26
  %687 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call1246 = call i32 @param_read_null(%struct.gs_param_list_s* %687, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.46, i32 0, i32 0)) #5
  store i32 %call1246, i32* %code, align 4, !tbaa !26
  %688 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1247 = icmp eq i32 %688, -20
  br i1 %cmp1247, label %if.then.1249, label %if.end.1251

if.then.1249:                                     ; preds = %cond.end.1244
  %689 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call1250 = call i32 @param_read_float_array(%struct.gs_param_list_s* %689, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.46, i32 0, i32 0), %struct.gs_param_float_array_s* %pfa) #5
  store i32 %call1250, i32* %code, align 4, !tbaa !26
  br label %if.end.1251

if.end.1251:                                      ; preds = %if.then.1249, %cond.end.1244
  %690 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1252 = icmp slt i32 %690, 0
  br i1 %cmp1252, label %if.then.1254, label %if.end.1258

if.then.1254:                                     ; preds = %if.end.1251
  %691 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %procs1255 = getelementptr inbounds %struct.gs_param_list_s, %struct.gs_param_list_s* %691, i32 0, i32 0
  %692 = load %struct.gs_param_list_procs_s*, %struct.gs_param_list_procs_s** %procs1255, align 8, !tbaa !91
  %signal_error1256 = getelementptr inbounds %struct.gs_param_list_procs_s, %struct.gs_param_list_procs_s* %692, i32 0, i32 7
  %693 = load i32 (%struct.gs_param_list_s*, i8*, i32)*, i32 (%struct.gs_param_list_s*, i8*, i32)** %signal_error1256, align 8, !tbaa !93
  %694 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %695 = load i32, i32* %code, align 4, !tbaa !26
  %call1257 = call i32 %693(%struct.gs_param_list_s* %694, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.46, i32 0, i32 0), i32 %695) #5
  br label %if.end.1258

if.end.1258:                                      ; preds = %if.then.1254, %if.end.1251
  %696 = load i32, i32* %error, align 4, !tbaa !26
  %697 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1259 = icmp sgt i32 %696, %697
  br i1 %cmp1259, label %cond.true.1261, label %cond.false.1262

cond.true.1261:                                   ; preds = %if.end.1258
  %698 = load i32, i32* %code, align 4, !tbaa !26
  br label %cond.end.1263

cond.false.1262:                                  ; preds = %if.end.1258
  %699 = load i32, i32* %error, align 4, !tbaa !26
  br label %cond.end.1263

cond.end.1263:                                    ; preds = %cond.false.1262, %cond.true.1261
  %cond1264 = phi i32 [ %698, %cond.true.1261 ], [ %699, %cond.false.1262 ]
  store i32 %cond1264, i32* %error, align 4, !tbaa !26
  %700 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call1265 = call i32 @param_read_null(%struct.gs_param_list_s* %700, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.47, i32 0, i32 0)) #5
  store i32 %call1265, i32* %code, align 4, !tbaa !26
  %701 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1266 = icmp eq i32 %701, -20
  br i1 %cmp1266, label %if.then.1268, label %if.end.1270

if.then.1268:                                     ; preds = %cond.end.1263
  %702 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call1269 = call i32 @param_read_float_array(%struct.gs_param_list_s* %702, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.47, i32 0, i32 0), %struct.gs_param_float_array_s* %pfa) #5
  store i32 %call1269, i32* %code, align 4, !tbaa !26
  br label %if.end.1270

if.end.1270:                                      ; preds = %if.then.1268, %cond.end.1263
  %703 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1271 = icmp slt i32 %703, 0
  br i1 %cmp1271, label %if.then.1273, label %if.end.1277

if.then.1273:                                     ; preds = %if.end.1270
  %704 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %procs1274 = getelementptr inbounds %struct.gs_param_list_s, %struct.gs_param_list_s* %704, i32 0, i32 0
  %705 = load %struct.gs_param_list_procs_s*, %struct.gs_param_list_procs_s** %procs1274, align 8, !tbaa !91
  %signal_error1275 = getelementptr inbounds %struct.gs_param_list_procs_s, %struct.gs_param_list_procs_s* %705, i32 0, i32 7
  %706 = load i32 (%struct.gs_param_list_s*, i8*, i32)*, i32 (%struct.gs_param_list_s*, i8*, i32)** %signal_error1275, align 8, !tbaa !93
  %707 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %708 = load i32, i32* %code, align 4, !tbaa !26
  %call1276 = call i32 %706(%struct.gs_param_list_s* %707, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.47, i32 0, i32 0), i32 %708) #5
  br label %if.end.1277

if.end.1277:                                      ; preds = %if.then.1273, %if.end.1270
  %709 = load i32, i32* %error, align 4, !tbaa !26
  %710 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1278 = icmp sgt i32 %709, %710
  br i1 %cmp1278, label %cond.true.1280, label %cond.false.1281

cond.true.1280:                                   ; preds = %if.end.1277
  %711 = load i32, i32* %code, align 4, !tbaa !26
  br label %cond.end.1282

cond.false.1281:                                  ; preds = %if.end.1277
  %712 = load i32, i32* %error, align 4, !tbaa !26
  br label %cond.end.1282

cond.end.1282:                                    ; preds = %cond.false.1281, %cond.true.1280
  %cond1283 = phi i32 [ %711, %cond.true.1280 ], [ %712, %cond.false.1281 ]
  store i32 %cond1283, i32* %error, align 4, !tbaa !26
  %713 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call1284 = call i32 @param_read_null(%struct.gs_param_list_s* %713, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.48, i32 0, i32 0)) #5
  store i32 %call1284, i32* %code, align 4, !tbaa !26
  %714 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1285 = icmp eq i32 %714, -20
  br i1 %cmp1285, label %if.then.1287, label %if.end.1289

if.then.1287:                                     ; preds = %cond.end.1282
  %715 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call1288 = call i32 @param_read_float_array(%struct.gs_param_list_s* %715, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.48, i32 0, i32 0), %struct.gs_param_float_array_s* %pfa) #5
  store i32 %call1288, i32* %code, align 4, !tbaa !26
  br label %if.end.1289

if.end.1289:                                      ; preds = %if.then.1287, %cond.end.1282
  %716 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1290 = icmp slt i32 %716, 0
  br i1 %cmp1290, label %if.then.1292, label %if.end.1296

if.then.1292:                                     ; preds = %if.end.1289
  %717 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %procs1293 = getelementptr inbounds %struct.gs_param_list_s, %struct.gs_param_list_s* %717, i32 0, i32 0
  %718 = load %struct.gs_param_list_procs_s*, %struct.gs_param_list_procs_s** %procs1293, align 8, !tbaa !91
  %signal_error1294 = getelementptr inbounds %struct.gs_param_list_procs_s, %struct.gs_param_list_procs_s* %718, i32 0, i32 7
  %719 = load i32 (%struct.gs_param_list_s*, i8*, i32)*, i32 (%struct.gs_param_list_s*, i8*, i32)** %signal_error1294, align 8, !tbaa !93
  %720 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %721 = load i32, i32* %code, align 4, !tbaa !26
  %call1295 = call i32 %719(%struct.gs_param_list_s* %720, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.48, i32 0, i32 0), i32 %721) #5
  br label %if.end.1296

if.end.1296:                                      ; preds = %if.then.1292, %if.end.1289
  %722 = load i32, i32* %error, align 4, !tbaa !26
  %723 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1297 = icmp sgt i32 %722, %723
  br i1 %cmp1297, label %cond.true.1299, label %cond.false.1300

cond.true.1299:                                   ; preds = %if.end.1296
  %724 = load i32, i32* %code, align 4, !tbaa !26
  br label %cond.end.1301

cond.false.1300:                                  ; preds = %if.end.1296
  %725 = load i32, i32* %error, align 4, !tbaa !26
  br label %cond.end.1301

cond.end.1301:                                    ; preds = %cond.false.1300, %cond.true.1299
  %cond1302 = phi i32 [ %724, %cond.true.1299 ], [ %725, %cond.false.1300 ]
  store i32 %cond1302, i32* %error, align 4, !tbaa !26
  %726 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call1303 = call i32 @param_read_null(%struct.gs_param_list_s* %726, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.49, i32 0, i32 0)) #5
  store i32 %call1303, i32* %code, align 4, !tbaa !26
  %727 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1304 = icmp eq i32 %727, -20
  br i1 %cmp1304, label %if.then.1306, label %if.end.1308

if.then.1306:                                     ; preds = %cond.end.1301
  %728 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call1307 = call i32 @param_read_float_array(%struct.gs_param_list_s* %728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.49, i32 0, i32 0), %struct.gs_param_float_array_s* %pfa) #5
  store i32 %call1307, i32* %code, align 4, !tbaa !26
  br label %if.end.1308

if.end.1308:                                      ; preds = %if.then.1306, %cond.end.1301
  %729 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1309 = icmp slt i32 %729, 0
  br i1 %cmp1309, label %if.then.1311, label %if.end.1315

if.then.1311:                                     ; preds = %if.end.1308
  %730 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %procs1312 = getelementptr inbounds %struct.gs_param_list_s, %struct.gs_param_list_s* %730, i32 0, i32 0
  %731 = load %struct.gs_param_list_procs_s*, %struct.gs_param_list_procs_s** %procs1312, align 8, !tbaa !91
  %signal_error1313 = getelementptr inbounds %struct.gs_param_list_procs_s, %struct.gs_param_list_procs_s* %731, i32 0, i32 7
  %732 = load i32 (%struct.gs_param_list_s*, i8*, i32)*, i32 (%struct.gs_param_list_s*, i8*, i32)** %signal_error1313, align 8, !tbaa !93
  %733 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %734 = load i32, i32* %code, align 4, !tbaa !26
  %call1314 = call i32 %732(%struct.gs_param_list_s* %733, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.49, i32 0, i32 0), i32 %734) #5
  br label %if.end.1315

if.end.1315:                                      ; preds = %if.then.1311, %if.end.1308
  %735 = load i32, i32* %error, align 4, !tbaa !26
  %736 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1316 = icmp sgt i32 %735, %736
  br i1 %cmp1316, label %cond.true.1318, label %cond.false.1319

cond.true.1318:                                   ; preds = %if.end.1315
  %737 = load i32, i32* %code, align 4, !tbaa !26
  br label %cond.end.1320

cond.false.1319:                                  ; preds = %if.end.1315
  %738 = load i32, i32* %error, align 4, !tbaa !26
  br label %cond.end.1320

cond.end.1320:                                    ; preds = %cond.false.1319, %cond.true.1318
  %cond1321 = phi i32 [ %737, %cond.true.1318 ], [ %738, %cond.false.1319 ]
  store i32 %cond1321, i32* %error, align 4, !tbaa !26
  %739 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call1322 = call i32 @param_read_null(%struct.gs_param_list_s* %739, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.50, i32 0, i32 0)) #5
  store i32 %call1322, i32* %code, align 4, !tbaa !26
  %740 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1323 = icmp eq i32 %740, -20
  br i1 %cmp1323, label %if.then.1325, label %if.end.1327

if.then.1325:                                     ; preds = %cond.end.1320
  %741 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call1326 = call i32 @param_read_float_array(%struct.gs_param_list_s* %741, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.50, i32 0, i32 0), %struct.gs_param_float_array_s* %pfa) #5
  store i32 %call1326, i32* %code, align 4, !tbaa !26
  br label %if.end.1327

if.end.1327:                                      ; preds = %if.then.1325, %cond.end.1320
  %742 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1328 = icmp slt i32 %742, 0
  br i1 %cmp1328, label %if.then.1330, label %if.end.1334

if.then.1330:                                     ; preds = %if.end.1327
  %743 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %procs1331 = getelementptr inbounds %struct.gs_param_list_s, %struct.gs_param_list_s* %743, i32 0, i32 0
  %744 = load %struct.gs_param_list_procs_s*, %struct.gs_param_list_procs_s** %procs1331, align 8, !tbaa !91
  %signal_error1332 = getelementptr inbounds %struct.gs_param_list_procs_s, %struct.gs_param_list_procs_s* %744, i32 0, i32 7
  %745 = load i32 (%struct.gs_param_list_s*, i8*, i32)*, i32 (%struct.gs_param_list_s*, i8*, i32)** %signal_error1332, align 8, !tbaa !93
  %746 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %747 = load i32, i32* %code, align 4, !tbaa !26
  %call1333 = call i32 %745(%struct.gs_param_list_s* %746, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.50, i32 0, i32 0), i32 %747) #5
  br label %if.end.1334

if.end.1334:                                      ; preds = %if.then.1330, %if.end.1327
  %748 = load i32, i32* %error, align 4, !tbaa !26
  %749 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1335 = icmp sgt i32 %748, %749
  br i1 %cmp1335, label %cond.true.1337, label %cond.false.1338

cond.true.1337:                                   ; preds = %if.end.1334
  %750 = load i32, i32* %code, align 4, !tbaa !26
  br label %cond.end.1339

cond.false.1338:                                  ; preds = %if.end.1334
  %751 = load i32, i32* %error, align 4, !tbaa !26
  br label %cond.end.1339

cond.end.1339:                                    ; preds = %cond.false.1338, %cond.true.1337
  %cond1340 = phi i32 [ %750, %cond.true.1337 ], [ %751, %cond.false.1338 ]
  store i32 %cond1340, i32* %error, align 4, !tbaa !26
  %752 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call1341 = call i32 @param_read_null(%struct.gs_param_list_s* %752, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.51, i32 0, i32 0)) #5
  store i32 %call1341, i32* %code, align 4, !tbaa !26
  %753 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1342 = icmp eq i32 %753, -20
  br i1 %cmp1342, label %if.then.1344, label %if.end.1346

if.then.1344:                                     ; preds = %cond.end.1339
  %754 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call1345 = call i32 @param_read_float_array(%struct.gs_param_list_s* %754, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.51, i32 0, i32 0), %struct.gs_param_float_array_s* %pfa) #5
  store i32 %call1345, i32* %code, align 4, !tbaa !26
  br label %if.end.1346

if.end.1346:                                      ; preds = %if.then.1344, %cond.end.1339
  %755 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1347 = icmp slt i32 %755, 0
  br i1 %cmp1347, label %if.then.1349, label %if.end.1353

if.then.1349:                                     ; preds = %if.end.1346
  %756 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %procs1350 = getelementptr inbounds %struct.gs_param_list_s, %struct.gs_param_list_s* %756, i32 0, i32 0
  %757 = load %struct.gs_param_list_procs_s*, %struct.gs_param_list_procs_s** %procs1350, align 8, !tbaa !91
  %signal_error1351 = getelementptr inbounds %struct.gs_param_list_procs_s, %struct.gs_param_list_procs_s* %757, i32 0, i32 7
  %758 = load i32 (%struct.gs_param_list_s*, i8*, i32)*, i32 (%struct.gs_param_list_s*, i8*, i32)** %signal_error1351, align 8, !tbaa !93
  %759 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %760 = load i32, i32* %code, align 4, !tbaa !26
  %call1352 = call i32 %758(%struct.gs_param_list_s* %759, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.51, i32 0, i32 0), i32 %760) #5
  br label %if.end.1353

if.end.1353:                                      ; preds = %if.then.1349, %if.end.1346
  %761 = load i32, i32* %error, align 4, !tbaa !26
  %762 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1354 = icmp sgt i32 %761, %762
  br i1 %cmp1354, label %cond.true.1356, label %cond.false.1357

cond.true.1356:                                   ; preds = %if.end.1353
  %763 = load i32, i32* %code, align 4, !tbaa !26
  br label %cond.end.1358

cond.false.1357:                                  ; preds = %if.end.1353
  %764 = load i32, i32* %error, align 4, !tbaa !26
  br label %cond.end.1358

cond.end.1358:                                    ; preds = %cond.false.1357, %cond.true.1356
  %cond1359 = phi i32 [ %763, %cond.true.1356 ], [ %764, %cond.false.1357 ]
  store i32 %cond1359, i32* %error, align 4, !tbaa !26
  %765 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call1360 = call i32 @param_read_null(%struct.gs_param_list_s* %765, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.52, i32 0, i32 0)) #5
  store i32 %call1360, i32* %code, align 4, !tbaa !26
  %766 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1361 = icmp eq i32 %766, -20
  br i1 %cmp1361, label %if.then.1363, label %if.end.1365

if.then.1363:                                     ; preds = %cond.end.1358
  %767 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call1364 = call i32 @param_read_float_array(%struct.gs_param_list_s* %767, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.52, i32 0, i32 0), %struct.gs_param_float_array_s* %pfa) #5
  store i32 %call1364, i32* %code, align 4, !tbaa !26
  br label %if.end.1365

if.end.1365:                                      ; preds = %if.then.1363, %cond.end.1358
  %768 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1366 = icmp slt i32 %768, 0
  br i1 %cmp1366, label %if.then.1368, label %if.end.1372

if.then.1368:                                     ; preds = %if.end.1365
  %769 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %procs1369 = getelementptr inbounds %struct.gs_param_list_s, %struct.gs_param_list_s* %769, i32 0, i32 0
  %770 = load %struct.gs_param_list_procs_s*, %struct.gs_param_list_procs_s** %procs1369, align 8, !tbaa !91
  %signal_error1370 = getelementptr inbounds %struct.gs_param_list_procs_s, %struct.gs_param_list_procs_s* %770, i32 0, i32 7
  %771 = load i32 (%struct.gs_param_list_s*, i8*, i32)*, i32 (%struct.gs_param_list_s*, i8*, i32)** %signal_error1370, align 8, !tbaa !93
  %772 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %773 = load i32, i32* %code, align 4, !tbaa !26
  %call1371 = call i32 %771(%struct.gs_param_list_s* %772, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.52, i32 0, i32 0), i32 %773) #5
  br label %if.end.1372

if.end.1372:                                      ; preds = %if.then.1368, %if.end.1365
  %774 = load i32, i32* %error, align 4, !tbaa !26
  %775 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1373 = icmp sgt i32 %774, %775
  br i1 %cmp1373, label %cond.true.1375, label %cond.false.1376

cond.true.1375:                                   ; preds = %if.end.1372
  %776 = load i32, i32* %code, align 4, !tbaa !26
  br label %cond.end.1377

cond.false.1376:                                  ; preds = %if.end.1372
  %777 = load i32, i32* %error, align 4, !tbaa !26
  br label %cond.end.1377

cond.end.1377:                                    ; preds = %cond.false.1376, %cond.true.1375
  %cond1378 = phi i32 [ %776, %cond.true.1375 ], [ %777, %cond.false.1376 ]
  store i32 %cond1378, i32* %error, align 4, !tbaa !26
  br label %if.end.2325

if.else.1379:                                     ; preds = %cond.end.1048
  %778 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %color_info1380 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %778, i32 0, i32 11
  %num_components1381 = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info1380, i32 0, i32 1
  %779 = load i32, i32* %num_components1381, align 4, !tbaa !40
  %cmp1382 = icmp eq i32 %779, 3
  br i1 %cmp1382, label %if.then.1384, label %if.else.1825

if.then.1384:                                     ; preds = %if.else.1379
  %780 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call1385 = call i32 @param_read_float_array(%struct.gs_param_list_s* %780, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.41, i32 0, i32 0), %struct.gs_param_float_array_s* %pfa) #5
  store i32 %call1385, i32* %code, align 4, !tbaa !26
  %781 = load i32, i32* %error, align 4, !tbaa !26
  %cmp1386 = icmp eq i32 %781, 0
  br i1 %cmp1386, label %land.lhs.true.1388, label %if.else.1406

land.lhs.true.1388:                               ; preds = %if.then.1384
  %782 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1389 = icmp eq i32 %782, 0
  br i1 %cmp1389, label %if.then.1391, label %if.else.1406

if.then.1391:                                     ; preds = %land.lhs.true.1388
  %size1392 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 1
  %783 = load i32, i32* %size1392, align 4, !tbaa !89
  %cmp1393 = icmp ugt i32 %783, 1
  br i1 %cmp1393, label %if.then.1395, label %if.else.1404

if.then.1395:                                     ; preds = %if.then.1391
  %data1396 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 0
  %784 = load float*, float** %data1396, align 8, !tbaa !87
  %785 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc1397 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %785, i32 0, i32 68
  %extc1398 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc1397, i32 0, i32 4
  %arrayidx1399 = getelementptr inbounds [4 x float*], [4 x float*]* %extc1398, i32 0, i64 0
  store float* %784, float** %arrayidx1399, align 8, !tbaa !1
  %size1400 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 1
  %786 = load i32, i32* %size1400, align 4, !tbaa !89
  %787 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc1401 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %787, i32 0, i32 68
  %sizc1402 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc1401, i32 0, i32 5
  %arrayidx1403 = getelementptr inbounds [4 x i32], [4 x i32]* %sizc1402, i32 0, i64 0
  store i32 %786, i32* %arrayidx1403, align 4, !tbaa !26
  br label %if.end.1405

if.else.1404:                                     ; preds = %if.then.1391
  store i32 -15, i32* %code, align 4, !tbaa !26
  br label %if.end.1405

if.end.1405:                                      ; preds = %if.else.1404, %if.then.1395
  br label %if.end.1422

if.else.1406:                                     ; preds = %land.lhs.true.1388, %if.then.1384
  %788 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1407 = icmp slt i32 %788, 0
  br i1 %cmp1407, label %if.then.1409, label %if.end.1421

if.then.1409:                                     ; preds = %if.else.1406
  %789 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call1410 = call i32 @param_read_null(%struct.gs_param_list_s* %789, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.41, i32 0, i32 0)) #5
  store i32 %call1410, i32* %code, align 4, !tbaa !26
  %790 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1411 = icmp eq i32 %790, 0
  br i1 %cmp1411, label %if.then.1413, label %if.end.1420

if.then.1413:                                     ; preds = %if.then.1409
  %791 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc1414 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %791, i32 0, i32 68
  %extc1415 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc1414, i32 0, i32 4
  %arrayidx1416 = getelementptr inbounds [4 x float*], [4 x float*]* %extc1415, i32 0, i64 0
  store float* null, float** %arrayidx1416, align 8, !tbaa !1
  %792 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc1417 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %792, i32 0, i32 68
  %sizc1418 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc1417, i32 0, i32 5
  %arrayidx1419 = getelementptr inbounds [4 x i32], [4 x i32]* %sizc1418, i32 0, i64 0
  store i32 0, i32* %arrayidx1419, align 4, !tbaa !26
  br label %if.end.1420

if.end.1420:                                      ; preds = %if.then.1413, %if.then.1409
  br label %if.end.1421

if.end.1421:                                      ; preds = %if.end.1420, %if.else.1406
  br label %if.end.1422

if.end.1422:                                      ; preds = %if.end.1421, %if.end.1405
  %793 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1423 = icmp slt i32 %793, 0
  br i1 %cmp1423, label %if.then.1425, label %if.end.1429

if.then.1425:                                     ; preds = %if.end.1422
  %794 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %procs1426 = getelementptr inbounds %struct.gs_param_list_s, %struct.gs_param_list_s* %794, i32 0, i32 0
  %795 = load %struct.gs_param_list_procs_s*, %struct.gs_param_list_procs_s** %procs1426, align 8, !tbaa !91
  %signal_error1427 = getelementptr inbounds %struct.gs_param_list_procs_s, %struct.gs_param_list_procs_s* %795, i32 0, i32 7
  %796 = load i32 (%struct.gs_param_list_s*, i8*, i32)*, i32 (%struct.gs_param_list_s*, i8*, i32)** %signal_error1427, align 8, !tbaa !93
  %797 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %798 = load i32, i32* %code, align 4, !tbaa !26
  %call1428 = call i32 %796(%struct.gs_param_list_s* %797, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.41, i32 0, i32 0), i32 %798) #5
  br label %if.end.1429

if.end.1429:                                      ; preds = %if.then.1425, %if.end.1422
  %799 = load i32, i32* %error, align 4, !tbaa !26
  %800 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1430 = icmp sgt i32 %799, %800
  br i1 %cmp1430, label %cond.true.1432, label %cond.false.1433

cond.true.1432:                                   ; preds = %if.end.1429
  %801 = load i32, i32* %code, align 4, !tbaa !26
  br label %cond.end.1434

cond.false.1433:                                  ; preds = %if.end.1429
  %802 = load i32, i32* %error, align 4, !tbaa !26
  br label %cond.end.1434

cond.end.1434:                                    ; preds = %cond.false.1433, %cond.true.1432
  %cond1435 = phi i32 [ %801, %cond.true.1432 ], [ %802, %cond.false.1433 ]
  store i32 %cond1435, i32* %error, align 4, !tbaa !26
  %803 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call1436 = call i32 @param_read_float_array(%struct.gs_param_list_s* %803, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.42, i32 0, i32 0), %struct.gs_param_float_array_s* %pfa) #5
  store i32 %call1436, i32* %code, align 4, !tbaa !26
  %804 = load i32, i32* %error, align 4, !tbaa !26
  %cmp1437 = icmp eq i32 %804, 0
  br i1 %cmp1437, label %land.lhs.true.1439, label %if.else.1451

land.lhs.true.1439:                               ; preds = %cond.end.1434
  %805 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1440 = icmp eq i32 %805, 0
  br i1 %cmp1440, label %if.then.1442, label %if.else.1451

if.then.1442:                                     ; preds = %land.lhs.true.1439
  %data1443 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 0
  %806 = load float*, float** %data1443, align 8, !tbaa !87
  %807 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc1444 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %807, i32 0, i32 68
  %extv1445 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc1444, i32 0, i32 7
  %arrayidx1446 = getelementptr inbounds [4 x float*], [4 x float*]* %extv1445, i32 0, i64 0
  store float* %806, float** %arrayidx1446, align 8, !tbaa !1
  %size1447 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 1
  %808 = load i32, i32* %size1447, align 4, !tbaa !89
  %809 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc1448 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %809, i32 0, i32 68
  %sizv1449 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc1448, i32 0, i32 8
  %arrayidx1450 = getelementptr inbounds [4 x i32], [4 x i32]* %sizv1449, i32 0, i64 0
  store i32 %808, i32* %arrayidx1450, align 4, !tbaa !26
  br label %if.end.1467

if.else.1451:                                     ; preds = %land.lhs.true.1439, %cond.end.1434
  %810 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1452 = icmp slt i32 %810, 0
  br i1 %cmp1452, label %if.then.1454, label %if.end.1466

if.then.1454:                                     ; preds = %if.else.1451
  %811 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call1455 = call i32 @param_read_null(%struct.gs_param_list_s* %811, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.42, i32 0, i32 0)) #5
  store i32 %call1455, i32* %code, align 4, !tbaa !26
  %812 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1456 = icmp eq i32 %812, 0
  br i1 %cmp1456, label %if.then.1458, label %if.end.1465

if.then.1458:                                     ; preds = %if.then.1454
  %813 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc1459 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %813, i32 0, i32 68
  %extv1460 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc1459, i32 0, i32 7
  %arrayidx1461 = getelementptr inbounds [4 x float*], [4 x float*]* %extv1460, i32 0, i64 0
  store float* getelementptr inbounds ([2 x float], [2 x float]* @defext, i32 0, i32 0), float** %arrayidx1461, align 8, !tbaa !1
  %814 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc1462 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %814, i32 0, i32 68
  %sizv1463 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc1462, i32 0, i32 8
  %arrayidx1464 = getelementptr inbounds [4 x i32], [4 x i32]* %sizv1463, i32 0, i64 0
  store i32 2, i32* %arrayidx1464, align 4, !tbaa !26
  br label %if.end.1465

if.end.1465:                                      ; preds = %if.then.1458, %if.then.1454
  br label %if.end.1466

if.end.1466:                                      ; preds = %if.end.1465, %if.else.1451
  br label %if.end.1467

if.end.1467:                                      ; preds = %if.end.1466, %if.then.1442
  %815 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1468 = icmp slt i32 %815, 0
  br i1 %cmp1468, label %if.then.1470, label %if.end.1474

if.then.1470:                                     ; preds = %if.end.1467
  %816 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %procs1471 = getelementptr inbounds %struct.gs_param_list_s, %struct.gs_param_list_s* %816, i32 0, i32 0
  %817 = load %struct.gs_param_list_procs_s*, %struct.gs_param_list_procs_s** %procs1471, align 8, !tbaa !91
  %signal_error1472 = getelementptr inbounds %struct.gs_param_list_procs_s, %struct.gs_param_list_procs_s* %817, i32 0, i32 7
  %818 = load i32 (%struct.gs_param_list_s*, i8*, i32)*, i32 (%struct.gs_param_list_s*, i8*, i32)** %signal_error1472, align 8, !tbaa !93
  %819 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %820 = load i32, i32* %code, align 4, !tbaa !26
  %call1473 = call i32 %818(%struct.gs_param_list_s* %819, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.42, i32 0, i32 0), i32 %820) #5
  br label %if.end.1474

if.end.1474:                                      ; preds = %if.then.1470, %if.end.1467
  %821 = load i32, i32* %error, align 4, !tbaa !26
  %822 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1475 = icmp sgt i32 %821, %822
  br i1 %cmp1475, label %cond.true.1477, label %cond.false.1478

cond.true.1477:                                   ; preds = %if.end.1474
  %823 = load i32, i32* %code, align 4, !tbaa !26
  br label %cond.end.1479

cond.false.1478:                                  ; preds = %if.end.1474
  %824 = load i32, i32* %error, align 4, !tbaa !26
  br label %cond.end.1479

cond.end.1479:                                    ; preds = %cond.false.1478, %cond.true.1477
  %cond1480 = phi i32 [ %823, %cond.true.1477 ], [ %824, %cond.false.1478 ]
  store i32 %cond1480, i32* %error, align 4, !tbaa !26
  %825 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call1481 = call i32 @param_read_float_array(%struct.gs_param_list_s* %825, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.43, i32 0, i32 0), %struct.gs_param_float_array_s* %pfa) #5
  store i32 %call1481, i32* %code, align 4, !tbaa !26
  %826 = load i32, i32* %error, align 4, !tbaa !26
  %cmp1482 = icmp eq i32 %826, 0
  br i1 %cmp1482, label %land.lhs.true.1484, label %if.else.1502

land.lhs.true.1484:                               ; preds = %cond.end.1479
  %827 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1485 = icmp eq i32 %827, 0
  br i1 %cmp1485, label %if.then.1487, label %if.else.1502

if.then.1487:                                     ; preds = %land.lhs.true.1484
  %size1488 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 1
  %828 = load i32, i32* %size1488, align 4, !tbaa !89
  %cmp1489 = icmp ugt i32 %828, 1
  br i1 %cmp1489, label %if.then.1491, label %if.else.1500

if.then.1491:                                     ; preds = %if.then.1487
  %data1492 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 0
  %829 = load float*, float** %data1492, align 8, !tbaa !87
  %830 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc1493 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %830, i32 0, i32 68
  %extc1494 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc1493, i32 0, i32 4
  %arrayidx1495 = getelementptr inbounds [4 x float*], [4 x float*]* %extc1494, i32 0, i64 1
  store float* %829, float** %arrayidx1495, align 8, !tbaa !1
  %size1496 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 1
  %831 = load i32, i32* %size1496, align 4, !tbaa !89
  %832 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc1497 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %832, i32 0, i32 68
  %sizc1498 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc1497, i32 0, i32 5
  %arrayidx1499 = getelementptr inbounds [4 x i32], [4 x i32]* %sizc1498, i32 0, i64 1
  store i32 %831, i32* %arrayidx1499, align 4, !tbaa !26
  br label %if.end.1501

if.else.1500:                                     ; preds = %if.then.1487
  store i32 -15, i32* %code, align 4, !tbaa !26
  br label %if.end.1501

if.end.1501:                                      ; preds = %if.else.1500, %if.then.1491
  br label %if.end.1518

if.else.1502:                                     ; preds = %land.lhs.true.1484, %cond.end.1479
  %833 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1503 = icmp slt i32 %833, 0
  br i1 %cmp1503, label %if.then.1505, label %if.end.1517

if.then.1505:                                     ; preds = %if.else.1502
  %834 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call1506 = call i32 @param_read_null(%struct.gs_param_list_s* %834, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.43, i32 0, i32 0)) #5
  store i32 %call1506, i32* %code, align 4, !tbaa !26
  %835 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1507 = icmp eq i32 %835, 0
  br i1 %cmp1507, label %if.then.1509, label %if.end.1516

if.then.1509:                                     ; preds = %if.then.1505
  %836 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc1510 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %836, i32 0, i32 68
  %extc1511 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc1510, i32 0, i32 4
  %arrayidx1512 = getelementptr inbounds [4 x float*], [4 x float*]* %extc1511, i32 0, i64 1
  store float* null, float** %arrayidx1512, align 8, !tbaa !1
  %837 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc1513 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %837, i32 0, i32 68
  %sizc1514 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc1513, i32 0, i32 5
  %arrayidx1515 = getelementptr inbounds [4 x i32], [4 x i32]* %sizc1514, i32 0, i64 1
  store i32 0, i32* %arrayidx1515, align 4, !tbaa !26
  br label %if.end.1516

if.end.1516:                                      ; preds = %if.then.1509, %if.then.1505
  br label %if.end.1517

if.end.1517:                                      ; preds = %if.end.1516, %if.else.1502
  br label %if.end.1518

if.end.1518:                                      ; preds = %if.end.1517, %if.end.1501
  %838 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1519 = icmp slt i32 %838, 0
  br i1 %cmp1519, label %if.then.1521, label %if.end.1525

if.then.1521:                                     ; preds = %if.end.1518
  %839 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %procs1522 = getelementptr inbounds %struct.gs_param_list_s, %struct.gs_param_list_s* %839, i32 0, i32 0
  %840 = load %struct.gs_param_list_procs_s*, %struct.gs_param_list_procs_s** %procs1522, align 8, !tbaa !91
  %signal_error1523 = getelementptr inbounds %struct.gs_param_list_procs_s, %struct.gs_param_list_procs_s* %840, i32 0, i32 7
  %841 = load i32 (%struct.gs_param_list_s*, i8*, i32)*, i32 (%struct.gs_param_list_s*, i8*, i32)** %signal_error1523, align 8, !tbaa !93
  %842 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %843 = load i32, i32* %code, align 4, !tbaa !26
  %call1524 = call i32 %841(%struct.gs_param_list_s* %842, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.43, i32 0, i32 0), i32 %843) #5
  br label %if.end.1525

if.end.1525:                                      ; preds = %if.then.1521, %if.end.1518
  %844 = load i32, i32* %error, align 4, !tbaa !26
  %845 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1526 = icmp sgt i32 %844, %845
  br i1 %cmp1526, label %cond.true.1528, label %cond.false.1529

cond.true.1528:                                   ; preds = %if.end.1525
  %846 = load i32, i32* %code, align 4, !tbaa !26
  br label %cond.end.1530

cond.false.1529:                                  ; preds = %if.end.1525
  %847 = load i32, i32* %error, align 4, !tbaa !26
  br label %cond.end.1530

cond.end.1530:                                    ; preds = %cond.false.1529, %cond.true.1528
  %cond1531 = phi i32 [ %846, %cond.true.1528 ], [ %847, %cond.false.1529 ]
  store i32 %cond1531, i32* %error, align 4, !tbaa !26
  %848 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call1532 = call i32 @param_read_float_array(%struct.gs_param_list_s* %848, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.44, i32 0, i32 0), %struct.gs_param_float_array_s* %pfa) #5
  store i32 %call1532, i32* %code, align 4, !tbaa !26
  %849 = load i32, i32* %error, align 4, !tbaa !26
  %cmp1533 = icmp eq i32 %849, 0
  br i1 %cmp1533, label %land.lhs.true.1535, label %if.else.1547

land.lhs.true.1535:                               ; preds = %cond.end.1530
  %850 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1536 = icmp eq i32 %850, 0
  br i1 %cmp1536, label %if.then.1538, label %if.else.1547

if.then.1538:                                     ; preds = %land.lhs.true.1535
  %data1539 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 0
  %851 = load float*, float** %data1539, align 8, !tbaa !87
  %852 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc1540 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %852, i32 0, i32 68
  %extv1541 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc1540, i32 0, i32 7
  %arrayidx1542 = getelementptr inbounds [4 x float*], [4 x float*]* %extv1541, i32 0, i64 1
  store float* %851, float** %arrayidx1542, align 8, !tbaa !1
  %size1543 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 1
  %853 = load i32, i32* %size1543, align 4, !tbaa !89
  %854 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc1544 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %854, i32 0, i32 68
  %sizv1545 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc1544, i32 0, i32 8
  %arrayidx1546 = getelementptr inbounds [4 x i32], [4 x i32]* %sizv1545, i32 0, i64 1
  store i32 %853, i32* %arrayidx1546, align 4, !tbaa !26
  br label %if.end.1563

if.else.1547:                                     ; preds = %land.lhs.true.1535, %cond.end.1530
  %855 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1548 = icmp slt i32 %855, 0
  br i1 %cmp1548, label %if.then.1550, label %if.end.1562

if.then.1550:                                     ; preds = %if.else.1547
  %856 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call1551 = call i32 @param_read_null(%struct.gs_param_list_s* %856, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.44, i32 0, i32 0)) #5
  store i32 %call1551, i32* %code, align 4, !tbaa !26
  %857 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1552 = icmp eq i32 %857, 0
  br i1 %cmp1552, label %if.then.1554, label %if.end.1561

if.then.1554:                                     ; preds = %if.then.1550
  %858 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc1555 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %858, i32 0, i32 68
  %extv1556 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc1555, i32 0, i32 7
  %arrayidx1557 = getelementptr inbounds [4 x float*], [4 x float*]* %extv1556, i32 0, i64 1
  store float* getelementptr inbounds ([2 x float], [2 x float]* @defext, i32 0, i32 0), float** %arrayidx1557, align 8, !tbaa !1
  %859 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc1558 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %859, i32 0, i32 68
  %sizv1559 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc1558, i32 0, i32 8
  %arrayidx1560 = getelementptr inbounds [4 x i32], [4 x i32]* %sizv1559, i32 0, i64 1
  store i32 2, i32* %arrayidx1560, align 4, !tbaa !26
  br label %if.end.1561

if.end.1561:                                      ; preds = %if.then.1554, %if.then.1550
  br label %if.end.1562

if.end.1562:                                      ; preds = %if.end.1561, %if.else.1547
  br label %if.end.1563

if.end.1563:                                      ; preds = %if.end.1562, %if.then.1538
  %860 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1564 = icmp slt i32 %860, 0
  br i1 %cmp1564, label %if.then.1566, label %if.end.1570

if.then.1566:                                     ; preds = %if.end.1563
  %861 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %procs1567 = getelementptr inbounds %struct.gs_param_list_s, %struct.gs_param_list_s* %861, i32 0, i32 0
  %862 = load %struct.gs_param_list_procs_s*, %struct.gs_param_list_procs_s** %procs1567, align 8, !tbaa !91
  %signal_error1568 = getelementptr inbounds %struct.gs_param_list_procs_s, %struct.gs_param_list_procs_s* %862, i32 0, i32 7
  %863 = load i32 (%struct.gs_param_list_s*, i8*, i32)*, i32 (%struct.gs_param_list_s*, i8*, i32)** %signal_error1568, align 8, !tbaa !93
  %864 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %865 = load i32, i32* %code, align 4, !tbaa !26
  %call1569 = call i32 %863(%struct.gs_param_list_s* %864, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.44, i32 0, i32 0), i32 %865) #5
  br label %if.end.1570

if.end.1570:                                      ; preds = %if.then.1566, %if.end.1563
  %866 = load i32, i32* %error, align 4, !tbaa !26
  %867 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1571 = icmp sgt i32 %866, %867
  br i1 %cmp1571, label %cond.true.1573, label %cond.false.1574

cond.true.1573:                                   ; preds = %if.end.1570
  %868 = load i32, i32* %code, align 4, !tbaa !26
  br label %cond.end.1575

cond.false.1574:                                  ; preds = %if.end.1570
  %869 = load i32, i32* %error, align 4, !tbaa !26
  br label %cond.end.1575

cond.end.1575:                                    ; preds = %cond.false.1574, %cond.true.1573
  %cond1576 = phi i32 [ %868, %cond.true.1573 ], [ %869, %cond.false.1574 ]
  store i32 %cond1576, i32* %error, align 4, !tbaa !26
  %870 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call1577 = call i32 @param_read_float_array(%struct.gs_param_list_s* %870, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.45, i32 0, i32 0), %struct.gs_param_float_array_s* %pfa) #5
  store i32 %call1577, i32* %code, align 4, !tbaa !26
  %871 = load i32, i32* %error, align 4, !tbaa !26
  %cmp1578 = icmp eq i32 %871, 0
  br i1 %cmp1578, label %land.lhs.true.1580, label %if.else.1598

land.lhs.true.1580:                               ; preds = %cond.end.1575
  %872 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1581 = icmp eq i32 %872, 0
  br i1 %cmp1581, label %if.then.1583, label %if.else.1598

if.then.1583:                                     ; preds = %land.lhs.true.1580
  %size1584 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 1
  %873 = load i32, i32* %size1584, align 4, !tbaa !89
  %cmp1585 = icmp ugt i32 %873, 1
  br i1 %cmp1585, label %if.then.1587, label %if.else.1596

if.then.1587:                                     ; preds = %if.then.1583
  %data1588 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 0
  %874 = load float*, float** %data1588, align 8, !tbaa !87
  %875 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc1589 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %875, i32 0, i32 68
  %extc1590 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc1589, i32 0, i32 4
  %arrayidx1591 = getelementptr inbounds [4 x float*], [4 x float*]* %extc1590, i32 0, i64 2
  store float* %874, float** %arrayidx1591, align 8, !tbaa !1
  %size1592 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 1
  %876 = load i32, i32* %size1592, align 4, !tbaa !89
  %877 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc1593 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %877, i32 0, i32 68
  %sizc1594 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc1593, i32 0, i32 5
  %arrayidx1595 = getelementptr inbounds [4 x i32], [4 x i32]* %sizc1594, i32 0, i64 2
  store i32 %876, i32* %arrayidx1595, align 4, !tbaa !26
  br label %if.end.1597

if.else.1596:                                     ; preds = %if.then.1583
  store i32 -15, i32* %code, align 4, !tbaa !26
  br label %if.end.1597

if.end.1597:                                      ; preds = %if.else.1596, %if.then.1587
  br label %if.end.1614

if.else.1598:                                     ; preds = %land.lhs.true.1580, %cond.end.1575
  %878 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1599 = icmp slt i32 %878, 0
  br i1 %cmp1599, label %if.then.1601, label %if.end.1613

if.then.1601:                                     ; preds = %if.else.1598
  %879 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call1602 = call i32 @param_read_null(%struct.gs_param_list_s* %879, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.45, i32 0, i32 0)) #5
  store i32 %call1602, i32* %code, align 4, !tbaa !26
  %880 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1603 = icmp eq i32 %880, 0
  br i1 %cmp1603, label %if.then.1605, label %if.end.1612

if.then.1605:                                     ; preds = %if.then.1601
  %881 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc1606 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %881, i32 0, i32 68
  %extc1607 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc1606, i32 0, i32 4
  %arrayidx1608 = getelementptr inbounds [4 x float*], [4 x float*]* %extc1607, i32 0, i64 2
  store float* null, float** %arrayidx1608, align 8, !tbaa !1
  %882 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc1609 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %882, i32 0, i32 68
  %sizc1610 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc1609, i32 0, i32 5
  %arrayidx1611 = getelementptr inbounds [4 x i32], [4 x i32]* %sizc1610, i32 0, i64 2
  store i32 0, i32* %arrayidx1611, align 4, !tbaa !26
  br label %if.end.1612

if.end.1612:                                      ; preds = %if.then.1605, %if.then.1601
  br label %if.end.1613

if.end.1613:                                      ; preds = %if.end.1612, %if.else.1598
  br label %if.end.1614

if.end.1614:                                      ; preds = %if.end.1613, %if.end.1597
  %883 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1615 = icmp slt i32 %883, 0
  br i1 %cmp1615, label %if.then.1617, label %if.end.1621

if.then.1617:                                     ; preds = %if.end.1614
  %884 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %procs1618 = getelementptr inbounds %struct.gs_param_list_s, %struct.gs_param_list_s* %884, i32 0, i32 0
  %885 = load %struct.gs_param_list_procs_s*, %struct.gs_param_list_procs_s** %procs1618, align 8, !tbaa !91
  %signal_error1619 = getelementptr inbounds %struct.gs_param_list_procs_s, %struct.gs_param_list_procs_s* %885, i32 0, i32 7
  %886 = load i32 (%struct.gs_param_list_s*, i8*, i32)*, i32 (%struct.gs_param_list_s*, i8*, i32)** %signal_error1619, align 8, !tbaa !93
  %887 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %888 = load i32, i32* %code, align 4, !tbaa !26
  %call1620 = call i32 %886(%struct.gs_param_list_s* %887, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.45, i32 0, i32 0), i32 %888) #5
  br label %if.end.1621

if.end.1621:                                      ; preds = %if.then.1617, %if.end.1614
  %889 = load i32, i32* %error, align 4, !tbaa !26
  %890 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1622 = icmp sgt i32 %889, %890
  br i1 %cmp1622, label %cond.true.1624, label %cond.false.1625

cond.true.1624:                                   ; preds = %if.end.1621
  %891 = load i32, i32* %code, align 4, !tbaa !26
  br label %cond.end.1626

cond.false.1625:                                  ; preds = %if.end.1621
  %892 = load i32, i32* %error, align 4, !tbaa !26
  br label %cond.end.1626

cond.end.1626:                                    ; preds = %cond.false.1625, %cond.true.1624
  %cond1627 = phi i32 [ %891, %cond.true.1624 ], [ %892, %cond.false.1625 ]
  store i32 %cond1627, i32* %error, align 4, !tbaa !26
  %893 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call1628 = call i32 @param_read_float_array(%struct.gs_param_list_s* %893, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.46, i32 0, i32 0), %struct.gs_param_float_array_s* %pfa) #5
  store i32 %call1628, i32* %code, align 4, !tbaa !26
  %894 = load i32, i32* %error, align 4, !tbaa !26
  %cmp1629 = icmp eq i32 %894, 0
  br i1 %cmp1629, label %land.lhs.true.1631, label %if.else.1643

land.lhs.true.1631:                               ; preds = %cond.end.1626
  %895 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1632 = icmp eq i32 %895, 0
  br i1 %cmp1632, label %if.then.1634, label %if.else.1643

if.then.1634:                                     ; preds = %land.lhs.true.1631
  %data1635 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 0
  %896 = load float*, float** %data1635, align 8, !tbaa !87
  %897 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc1636 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %897, i32 0, i32 68
  %extv1637 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc1636, i32 0, i32 7
  %arrayidx1638 = getelementptr inbounds [4 x float*], [4 x float*]* %extv1637, i32 0, i64 2
  store float* %896, float** %arrayidx1638, align 8, !tbaa !1
  %size1639 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 1
  %898 = load i32, i32* %size1639, align 4, !tbaa !89
  %899 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc1640 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %899, i32 0, i32 68
  %sizv1641 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc1640, i32 0, i32 8
  %arrayidx1642 = getelementptr inbounds [4 x i32], [4 x i32]* %sizv1641, i32 0, i64 2
  store i32 %898, i32* %arrayidx1642, align 4, !tbaa !26
  br label %if.end.1659

if.else.1643:                                     ; preds = %land.lhs.true.1631, %cond.end.1626
  %900 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1644 = icmp slt i32 %900, 0
  br i1 %cmp1644, label %if.then.1646, label %if.end.1658

if.then.1646:                                     ; preds = %if.else.1643
  %901 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call1647 = call i32 @param_read_null(%struct.gs_param_list_s* %901, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.46, i32 0, i32 0)) #5
  store i32 %call1647, i32* %code, align 4, !tbaa !26
  %902 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1648 = icmp eq i32 %902, 0
  br i1 %cmp1648, label %if.then.1650, label %if.end.1657

if.then.1650:                                     ; preds = %if.then.1646
  %903 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc1651 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %903, i32 0, i32 68
  %extv1652 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc1651, i32 0, i32 7
  %arrayidx1653 = getelementptr inbounds [4 x float*], [4 x float*]* %extv1652, i32 0, i64 2
  store float* getelementptr inbounds ([2 x float], [2 x float]* @defext, i32 0, i32 0), float** %arrayidx1653, align 8, !tbaa !1
  %904 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc1654 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %904, i32 0, i32 68
  %sizv1655 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc1654, i32 0, i32 8
  %arrayidx1656 = getelementptr inbounds [4 x i32], [4 x i32]* %sizv1655, i32 0, i64 2
  store i32 2, i32* %arrayidx1656, align 4, !tbaa !26
  br label %if.end.1657

if.end.1657:                                      ; preds = %if.then.1650, %if.then.1646
  br label %if.end.1658

if.end.1658:                                      ; preds = %if.end.1657, %if.else.1643
  br label %if.end.1659

if.end.1659:                                      ; preds = %if.end.1658, %if.then.1634
  %905 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1660 = icmp slt i32 %905, 0
  br i1 %cmp1660, label %if.then.1662, label %if.end.1666

if.then.1662:                                     ; preds = %if.end.1659
  %906 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %procs1663 = getelementptr inbounds %struct.gs_param_list_s, %struct.gs_param_list_s* %906, i32 0, i32 0
  %907 = load %struct.gs_param_list_procs_s*, %struct.gs_param_list_procs_s** %procs1663, align 8, !tbaa !91
  %signal_error1664 = getelementptr inbounds %struct.gs_param_list_procs_s, %struct.gs_param_list_procs_s* %907, i32 0, i32 7
  %908 = load i32 (%struct.gs_param_list_s*, i8*, i32)*, i32 (%struct.gs_param_list_s*, i8*, i32)** %signal_error1664, align 8, !tbaa !93
  %909 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %910 = load i32, i32* %code, align 4, !tbaa !26
  %call1665 = call i32 %908(%struct.gs_param_list_s* %909, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.46, i32 0, i32 0), i32 %910) #5
  br label %if.end.1666

if.end.1666:                                      ; preds = %if.then.1662, %if.end.1659
  %911 = load i32, i32* %error, align 4, !tbaa !26
  %912 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1667 = icmp sgt i32 %911, %912
  br i1 %cmp1667, label %cond.true.1669, label %cond.false.1670

cond.true.1669:                                   ; preds = %if.end.1666
  %913 = load i32, i32* %code, align 4, !tbaa !26
  br label %cond.end.1671

cond.false.1670:                                  ; preds = %if.end.1666
  %914 = load i32, i32* %error, align 4, !tbaa !26
  br label %cond.end.1671

cond.end.1671:                                    ; preds = %cond.false.1670, %cond.true.1669
  %cond1672 = phi i32 [ %913, %cond.true.1669 ], [ %914, %cond.false.1670 ]
  store i32 %cond1672, i32* %error, align 4, !tbaa !26
  %915 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call1673 = call i32 @param_read_null(%struct.gs_param_list_s* %915, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.47, i32 0, i32 0)) #5
  store i32 %call1673, i32* %code, align 4, !tbaa !26
  %916 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1674 = icmp eq i32 %916, -20
  br i1 %cmp1674, label %if.then.1676, label %if.end.1678

if.then.1676:                                     ; preds = %cond.end.1671
  %917 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call1677 = call i32 @param_read_float_array(%struct.gs_param_list_s* %917, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.47, i32 0, i32 0), %struct.gs_param_float_array_s* %pfa) #5
  store i32 %call1677, i32* %code, align 4, !tbaa !26
  br label %if.end.1678

if.end.1678:                                      ; preds = %if.then.1676, %cond.end.1671
  %918 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1679 = icmp slt i32 %918, 0
  br i1 %cmp1679, label %if.then.1681, label %if.end.1685

if.then.1681:                                     ; preds = %if.end.1678
  %919 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %procs1682 = getelementptr inbounds %struct.gs_param_list_s, %struct.gs_param_list_s* %919, i32 0, i32 0
  %920 = load %struct.gs_param_list_procs_s*, %struct.gs_param_list_procs_s** %procs1682, align 8, !tbaa !91
  %signal_error1683 = getelementptr inbounds %struct.gs_param_list_procs_s, %struct.gs_param_list_procs_s* %920, i32 0, i32 7
  %921 = load i32 (%struct.gs_param_list_s*, i8*, i32)*, i32 (%struct.gs_param_list_s*, i8*, i32)** %signal_error1683, align 8, !tbaa !93
  %922 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %923 = load i32, i32* %code, align 4, !tbaa !26
  %call1684 = call i32 %921(%struct.gs_param_list_s* %922, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.47, i32 0, i32 0), i32 %923) #5
  br label %if.end.1685

if.end.1685:                                      ; preds = %if.then.1681, %if.end.1678
  %924 = load i32, i32* %error, align 4, !tbaa !26
  %925 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1686 = icmp sgt i32 %924, %925
  br i1 %cmp1686, label %cond.true.1688, label %cond.false.1689

cond.true.1688:                                   ; preds = %if.end.1685
  %926 = load i32, i32* %code, align 4, !tbaa !26
  br label %cond.end.1690

cond.false.1689:                                  ; preds = %if.end.1685
  %927 = load i32, i32* %error, align 4, !tbaa !26
  br label %cond.end.1690

cond.end.1690:                                    ; preds = %cond.false.1689, %cond.true.1688
  %cond1691 = phi i32 [ %926, %cond.true.1688 ], [ %927, %cond.false.1689 ]
  store i32 %cond1691, i32* %error, align 4, !tbaa !26
  %928 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call1692 = call i32 @param_read_null(%struct.gs_param_list_s* %928, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.48, i32 0, i32 0)) #5
  store i32 %call1692, i32* %code, align 4, !tbaa !26
  %929 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1693 = icmp eq i32 %929, -20
  br i1 %cmp1693, label %if.then.1695, label %if.end.1697

if.then.1695:                                     ; preds = %cond.end.1690
  %930 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call1696 = call i32 @param_read_float_array(%struct.gs_param_list_s* %930, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.48, i32 0, i32 0), %struct.gs_param_float_array_s* %pfa) #5
  store i32 %call1696, i32* %code, align 4, !tbaa !26
  br label %if.end.1697

if.end.1697:                                      ; preds = %if.then.1695, %cond.end.1690
  %931 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1698 = icmp slt i32 %931, 0
  br i1 %cmp1698, label %if.then.1700, label %if.end.1704

if.then.1700:                                     ; preds = %if.end.1697
  %932 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %procs1701 = getelementptr inbounds %struct.gs_param_list_s, %struct.gs_param_list_s* %932, i32 0, i32 0
  %933 = load %struct.gs_param_list_procs_s*, %struct.gs_param_list_procs_s** %procs1701, align 8, !tbaa !91
  %signal_error1702 = getelementptr inbounds %struct.gs_param_list_procs_s, %struct.gs_param_list_procs_s* %933, i32 0, i32 7
  %934 = load i32 (%struct.gs_param_list_s*, i8*, i32)*, i32 (%struct.gs_param_list_s*, i8*, i32)** %signal_error1702, align 8, !tbaa !93
  %935 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %936 = load i32, i32* %code, align 4, !tbaa !26
  %call1703 = call i32 %934(%struct.gs_param_list_s* %935, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.48, i32 0, i32 0), i32 %936) #5
  br label %if.end.1704

if.end.1704:                                      ; preds = %if.then.1700, %if.end.1697
  %937 = load i32, i32* %error, align 4, !tbaa !26
  %938 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1705 = icmp sgt i32 %937, %938
  br i1 %cmp1705, label %cond.true.1707, label %cond.false.1708

cond.true.1707:                                   ; preds = %if.end.1704
  %939 = load i32, i32* %code, align 4, !tbaa !26
  br label %cond.end.1709

cond.false.1708:                                  ; preds = %if.end.1704
  %940 = load i32, i32* %error, align 4, !tbaa !26
  br label %cond.end.1709

cond.end.1709:                                    ; preds = %cond.false.1708, %cond.true.1707
  %cond1710 = phi i32 [ %939, %cond.true.1707 ], [ %940, %cond.false.1708 ]
  store i32 %cond1710, i32* %error, align 4, !tbaa !26
  %941 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call1711 = call i32 @param_read_null(%struct.gs_param_list_s* %941, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.49, i32 0, i32 0)) #5
  store i32 %call1711, i32* %code, align 4, !tbaa !26
  %942 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1712 = icmp eq i32 %942, -20
  br i1 %cmp1712, label %if.then.1714, label %if.end.1716

if.then.1714:                                     ; preds = %cond.end.1709
  %943 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call1715 = call i32 @param_read_float_array(%struct.gs_param_list_s* %943, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.49, i32 0, i32 0), %struct.gs_param_float_array_s* %pfa) #5
  store i32 %call1715, i32* %code, align 4, !tbaa !26
  br label %if.end.1716

if.end.1716:                                      ; preds = %if.then.1714, %cond.end.1709
  %944 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1717 = icmp slt i32 %944, 0
  br i1 %cmp1717, label %if.then.1719, label %if.end.1723

if.then.1719:                                     ; preds = %if.end.1716
  %945 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %procs1720 = getelementptr inbounds %struct.gs_param_list_s, %struct.gs_param_list_s* %945, i32 0, i32 0
  %946 = load %struct.gs_param_list_procs_s*, %struct.gs_param_list_procs_s** %procs1720, align 8, !tbaa !91
  %signal_error1721 = getelementptr inbounds %struct.gs_param_list_procs_s, %struct.gs_param_list_procs_s* %946, i32 0, i32 7
  %947 = load i32 (%struct.gs_param_list_s*, i8*, i32)*, i32 (%struct.gs_param_list_s*, i8*, i32)** %signal_error1721, align 8, !tbaa !93
  %948 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %949 = load i32, i32* %code, align 4, !tbaa !26
  %call1722 = call i32 %947(%struct.gs_param_list_s* %948, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.49, i32 0, i32 0), i32 %949) #5
  br label %if.end.1723

if.end.1723:                                      ; preds = %if.then.1719, %if.end.1716
  %950 = load i32, i32* %error, align 4, !tbaa !26
  %951 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1724 = icmp sgt i32 %950, %951
  br i1 %cmp1724, label %cond.true.1726, label %cond.false.1727

cond.true.1726:                                   ; preds = %if.end.1723
  %952 = load i32, i32* %code, align 4, !tbaa !26
  br label %cond.end.1728

cond.false.1727:                                  ; preds = %if.end.1723
  %953 = load i32, i32* %error, align 4, !tbaa !26
  br label %cond.end.1728

cond.end.1728:                                    ; preds = %cond.false.1727, %cond.true.1726
  %cond1729 = phi i32 [ %952, %cond.true.1726 ], [ %953, %cond.false.1727 ]
  store i32 %cond1729, i32* %error, align 4, !tbaa !26
  %954 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call1730 = call i32 @param_read_null(%struct.gs_param_list_s* %954, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.50, i32 0, i32 0)) #5
  store i32 %call1730, i32* %code, align 4, !tbaa !26
  %955 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1731 = icmp eq i32 %955, -20
  br i1 %cmp1731, label %if.then.1733, label %if.end.1735

if.then.1733:                                     ; preds = %cond.end.1728
  %956 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call1734 = call i32 @param_read_float_array(%struct.gs_param_list_s* %956, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.50, i32 0, i32 0), %struct.gs_param_float_array_s* %pfa) #5
  store i32 %call1734, i32* %code, align 4, !tbaa !26
  br label %if.end.1735

if.end.1735:                                      ; preds = %if.then.1733, %cond.end.1728
  %957 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1736 = icmp slt i32 %957, 0
  br i1 %cmp1736, label %if.then.1738, label %if.end.1742

if.then.1738:                                     ; preds = %if.end.1735
  %958 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %procs1739 = getelementptr inbounds %struct.gs_param_list_s, %struct.gs_param_list_s* %958, i32 0, i32 0
  %959 = load %struct.gs_param_list_procs_s*, %struct.gs_param_list_procs_s** %procs1739, align 8, !tbaa !91
  %signal_error1740 = getelementptr inbounds %struct.gs_param_list_procs_s, %struct.gs_param_list_procs_s* %959, i32 0, i32 7
  %960 = load i32 (%struct.gs_param_list_s*, i8*, i32)*, i32 (%struct.gs_param_list_s*, i8*, i32)** %signal_error1740, align 8, !tbaa !93
  %961 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %962 = load i32, i32* %code, align 4, !tbaa !26
  %call1741 = call i32 %960(%struct.gs_param_list_s* %961, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.50, i32 0, i32 0), i32 %962) #5
  br label %if.end.1742

if.end.1742:                                      ; preds = %if.then.1738, %if.end.1735
  %963 = load i32, i32* %error, align 4, !tbaa !26
  %964 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1743 = icmp sgt i32 %963, %964
  br i1 %cmp1743, label %cond.true.1745, label %cond.false.1746

cond.true.1745:                                   ; preds = %if.end.1742
  %965 = load i32, i32* %code, align 4, !tbaa !26
  br label %cond.end.1747

cond.false.1746:                                  ; preds = %if.end.1742
  %966 = load i32, i32* %error, align 4, !tbaa !26
  br label %cond.end.1747

cond.end.1747:                                    ; preds = %cond.false.1746, %cond.true.1745
  %cond1748 = phi i32 [ %965, %cond.true.1745 ], [ %966, %cond.false.1746 ]
  store i32 %cond1748, i32* %error, align 4, !tbaa !26
  %967 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call1749 = call i32 @param_read_null(%struct.gs_param_list_s* %967, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.51, i32 0, i32 0)) #5
  store i32 %call1749, i32* %code, align 4, !tbaa !26
  %968 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1750 = icmp eq i32 %968, -20
  br i1 %cmp1750, label %if.then.1752, label %if.end.1754

if.then.1752:                                     ; preds = %cond.end.1747
  %969 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call1753 = call i32 @param_read_float_array(%struct.gs_param_list_s* %969, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.51, i32 0, i32 0), %struct.gs_param_float_array_s* %pfa) #5
  store i32 %call1753, i32* %code, align 4, !tbaa !26
  br label %if.end.1754

if.end.1754:                                      ; preds = %if.then.1752, %cond.end.1747
  %970 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1755 = icmp slt i32 %970, 0
  br i1 %cmp1755, label %if.then.1757, label %if.end.1761

if.then.1757:                                     ; preds = %if.end.1754
  %971 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %procs1758 = getelementptr inbounds %struct.gs_param_list_s, %struct.gs_param_list_s* %971, i32 0, i32 0
  %972 = load %struct.gs_param_list_procs_s*, %struct.gs_param_list_procs_s** %procs1758, align 8, !tbaa !91
  %signal_error1759 = getelementptr inbounds %struct.gs_param_list_procs_s, %struct.gs_param_list_procs_s* %972, i32 0, i32 7
  %973 = load i32 (%struct.gs_param_list_s*, i8*, i32)*, i32 (%struct.gs_param_list_s*, i8*, i32)** %signal_error1759, align 8, !tbaa !93
  %974 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %975 = load i32, i32* %code, align 4, !tbaa !26
  %call1760 = call i32 %973(%struct.gs_param_list_s* %974, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.51, i32 0, i32 0), i32 %975) #5
  br label %if.end.1761

if.end.1761:                                      ; preds = %if.then.1757, %if.end.1754
  %976 = load i32, i32* %error, align 4, !tbaa !26
  %977 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1762 = icmp sgt i32 %976, %977
  br i1 %cmp1762, label %cond.true.1764, label %cond.false.1765

cond.true.1764:                                   ; preds = %if.end.1761
  %978 = load i32, i32* %code, align 4, !tbaa !26
  br label %cond.end.1766

cond.false.1765:                                  ; preds = %if.end.1761
  %979 = load i32, i32* %error, align 4, !tbaa !26
  br label %cond.end.1766

cond.end.1766:                                    ; preds = %cond.false.1765, %cond.true.1764
  %cond1767 = phi i32 [ %978, %cond.true.1764 ], [ %979, %cond.false.1765 ]
  store i32 %cond1767, i32* %error, align 4, !tbaa !26
  %980 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call1768 = call i32 @param_read_null(%struct.gs_param_list_s* %980, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.52, i32 0, i32 0)) #5
  store i32 %call1768, i32* %code, align 4, !tbaa !26
  %981 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1769 = icmp eq i32 %981, -20
  br i1 %cmp1769, label %if.then.1771, label %if.end.1773

if.then.1771:                                     ; preds = %cond.end.1766
  %982 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call1772 = call i32 @param_read_float_array(%struct.gs_param_list_s* %982, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.52, i32 0, i32 0), %struct.gs_param_float_array_s* %pfa) #5
  store i32 %call1772, i32* %code, align 4, !tbaa !26
  br label %if.end.1773

if.end.1773:                                      ; preds = %if.then.1771, %cond.end.1766
  %983 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1774 = icmp slt i32 %983, 0
  br i1 %cmp1774, label %if.then.1776, label %if.end.1780

if.then.1776:                                     ; preds = %if.end.1773
  %984 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %procs1777 = getelementptr inbounds %struct.gs_param_list_s, %struct.gs_param_list_s* %984, i32 0, i32 0
  %985 = load %struct.gs_param_list_procs_s*, %struct.gs_param_list_procs_s** %procs1777, align 8, !tbaa !91
  %signal_error1778 = getelementptr inbounds %struct.gs_param_list_procs_s, %struct.gs_param_list_procs_s* %985, i32 0, i32 7
  %986 = load i32 (%struct.gs_param_list_s*, i8*, i32)*, i32 (%struct.gs_param_list_s*, i8*, i32)** %signal_error1778, align 8, !tbaa !93
  %987 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %988 = load i32, i32* %code, align 4, !tbaa !26
  %call1779 = call i32 %986(%struct.gs_param_list_s* %987, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.52, i32 0, i32 0), i32 %988) #5
  br label %if.end.1780

if.end.1780:                                      ; preds = %if.then.1776, %if.end.1773
  %989 = load i32, i32* %error, align 4, !tbaa !26
  %990 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1781 = icmp sgt i32 %989, %990
  br i1 %cmp1781, label %cond.true.1783, label %cond.false.1784

cond.true.1783:                                   ; preds = %if.end.1780
  %991 = load i32, i32* %code, align 4, !tbaa !26
  br label %cond.end.1785

cond.false.1784:                                  ; preds = %if.end.1780
  %992 = load i32, i32* %error, align 4, !tbaa !26
  br label %cond.end.1785

cond.end.1785:                                    ; preds = %cond.false.1784, %cond.true.1783
  %cond1786 = phi i32 [ %991, %cond.true.1783 ], [ %992, %cond.false.1784 ]
  store i32 %cond1786, i32* %error, align 4, !tbaa !26
  %993 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call1787 = call i32 @param_read_null(%struct.gs_param_list_s* %993, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i32 0, i32 0)) #5
  store i32 %call1787, i32* %code, align 4, !tbaa !26
  %994 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1788 = icmp eq i32 %994, -20
  br i1 %cmp1788, label %if.then.1790, label %if.end.1792

if.then.1790:                                     ; preds = %cond.end.1785
  %995 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call1791 = call i32 @param_read_float_array(%struct.gs_param_list_s* %995, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i32 0, i32 0), %struct.gs_param_float_array_s* %pfa) #5
  store i32 %call1791, i32* %code, align 4, !tbaa !26
  br label %if.end.1792

if.end.1792:                                      ; preds = %if.then.1790, %cond.end.1785
  %996 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1793 = icmp slt i32 %996, 0
  br i1 %cmp1793, label %if.then.1795, label %if.end.1799

if.then.1795:                                     ; preds = %if.end.1792
  %997 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %procs1796 = getelementptr inbounds %struct.gs_param_list_s, %struct.gs_param_list_s* %997, i32 0, i32 0
  %998 = load %struct.gs_param_list_procs_s*, %struct.gs_param_list_procs_s** %procs1796, align 8, !tbaa !91
  %signal_error1797 = getelementptr inbounds %struct.gs_param_list_procs_s, %struct.gs_param_list_procs_s* %998, i32 0, i32 7
  %999 = load i32 (%struct.gs_param_list_s*, i8*, i32)*, i32 (%struct.gs_param_list_s*, i8*, i32)** %signal_error1797, align 8, !tbaa !93
  %1000 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %1001 = load i32, i32* %code, align 4, !tbaa !26
  %call1798 = call i32 %999(%struct.gs_param_list_s* %1000, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i32 0, i32 0), i32 %1001) #5
  br label %if.end.1799

if.end.1799:                                      ; preds = %if.then.1795, %if.end.1792
  %1002 = load i32, i32* %error, align 4, !tbaa !26
  %1003 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1800 = icmp sgt i32 %1002, %1003
  br i1 %cmp1800, label %cond.true.1802, label %cond.false.1803

cond.true.1802:                                   ; preds = %if.end.1799
  %1004 = load i32, i32* %code, align 4, !tbaa !26
  br label %cond.end.1804

cond.false.1803:                                  ; preds = %if.end.1799
  %1005 = load i32, i32* %error, align 4, !tbaa !26
  br label %cond.end.1804

cond.end.1804:                                    ; preds = %cond.false.1803, %cond.true.1802
  %cond1805 = phi i32 [ %1004, %cond.true.1802 ], [ %1005, %cond.false.1803 ]
  store i32 %cond1805, i32* %error, align 4, !tbaa !26
  %1006 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call1806 = call i32 @param_read_null(%struct.gs_param_list_s* %1006, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.40, i32 0, i32 0)) #5
  store i32 %call1806, i32* %code, align 4, !tbaa !26
  %1007 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1807 = icmp eq i32 %1007, -20
  br i1 %cmp1807, label %if.then.1809, label %if.end.1811

if.then.1809:                                     ; preds = %cond.end.1804
  %1008 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call1810 = call i32 @param_read_float_array(%struct.gs_param_list_s* %1008, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.40, i32 0, i32 0), %struct.gs_param_float_array_s* %pfa) #5
  store i32 %call1810, i32* %code, align 4, !tbaa !26
  br label %if.end.1811

if.end.1811:                                      ; preds = %if.then.1809, %cond.end.1804
  %1009 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1812 = icmp slt i32 %1009, 0
  br i1 %cmp1812, label %if.then.1814, label %if.end.1818

if.then.1814:                                     ; preds = %if.end.1811
  %1010 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %procs1815 = getelementptr inbounds %struct.gs_param_list_s, %struct.gs_param_list_s* %1010, i32 0, i32 0
  %1011 = load %struct.gs_param_list_procs_s*, %struct.gs_param_list_procs_s** %procs1815, align 8, !tbaa !91
  %signal_error1816 = getelementptr inbounds %struct.gs_param_list_procs_s, %struct.gs_param_list_procs_s* %1011, i32 0, i32 7
  %1012 = load i32 (%struct.gs_param_list_s*, i8*, i32)*, i32 (%struct.gs_param_list_s*, i8*, i32)** %signal_error1816, align 8, !tbaa !93
  %1013 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %1014 = load i32, i32* %code, align 4, !tbaa !26
  %call1817 = call i32 %1012(%struct.gs_param_list_s* %1013, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.40, i32 0, i32 0), i32 %1014) #5
  br label %if.end.1818

if.end.1818:                                      ; preds = %if.then.1814, %if.end.1811
  %1015 = load i32, i32* %error, align 4, !tbaa !26
  %1016 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1819 = icmp sgt i32 %1015, %1016
  br i1 %cmp1819, label %cond.true.1821, label %cond.false.1822

cond.true.1821:                                   ; preds = %if.end.1818
  %1017 = load i32, i32* %code, align 4, !tbaa !26
  br label %cond.end.1823

cond.false.1822:                                  ; preds = %if.end.1818
  %1018 = load i32, i32* %error, align 4, !tbaa !26
  br label %cond.end.1823

cond.end.1823:                                    ; preds = %cond.false.1822, %cond.true.1821
  %cond1824 = phi i32 [ %1017, %cond.true.1821 ], [ %1018, %cond.false.1822 ]
  store i32 %cond1824, i32* %error, align 4, !tbaa !26
  br label %if.end.2324

if.else.1825:                                     ; preds = %if.else.1379
  %1019 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call1826 = call i32 @param_read_float_array(%struct.gs_param_list_s* %1019, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.47, i32 0, i32 0), %struct.gs_param_float_array_s* %pfa) #5
  store i32 %call1826, i32* %code, align 4, !tbaa !26
  %1020 = load i32, i32* %error, align 4, !tbaa !26
  %cmp1827 = icmp eq i32 %1020, 0
  br i1 %cmp1827, label %land.lhs.true.1829, label %if.else.1847

land.lhs.true.1829:                               ; preds = %if.else.1825
  %1021 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1830 = icmp eq i32 %1021, 0
  br i1 %cmp1830, label %if.then.1832, label %if.else.1847

if.then.1832:                                     ; preds = %land.lhs.true.1829
  %size1833 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 1
  %1022 = load i32, i32* %size1833, align 4, !tbaa !89
  %cmp1834 = icmp ugt i32 %1022, 1
  br i1 %cmp1834, label %if.then.1836, label %if.else.1845

if.then.1836:                                     ; preds = %if.then.1832
  %data1837 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 0
  %1023 = load float*, float** %data1837, align 8, !tbaa !87
  %1024 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc1838 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1024, i32 0, i32 68
  %extc1839 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc1838, i32 0, i32 4
  %arrayidx1840 = getelementptr inbounds [4 x float*], [4 x float*]* %extc1839, i32 0, i64 0
  store float* %1023, float** %arrayidx1840, align 8, !tbaa !1
  %size1841 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 1
  %1025 = load i32, i32* %size1841, align 4, !tbaa !89
  %1026 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc1842 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1026, i32 0, i32 68
  %sizc1843 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc1842, i32 0, i32 5
  %arrayidx1844 = getelementptr inbounds [4 x i32], [4 x i32]* %sizc1843, i32 0, i64 0
  store i32 %1025, i32* %arrayidx1844, align 4, !tbaa !26
  br label %if.end.1846

if.else.1845:                                     ; preds = %if.then.1832
  store i32 -15, i32* %code, align 4, !tbaa !26
  br label %if.end.1846

if.end.1846:                                      ; preds = %if.else.1845, %if.then.1836
  br label %if.end.1863

if.else.1847:                                     ; preds = %land.lhs.true.1829, %if.else.1825
  %1027 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1848 = icmp slt i32 %1027, 0
  br i1 %cmp1848, label %if.then.1850, label %if.end.1862

if.then.1850:                                     ; preds = %if.else.1847
  %1028 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call1851 = call i32 @param_read_null(%struct.gs_param_list_s* %1028, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.47, i32 0, i32 0)) #5
  store i32 %call1851, i32* %code, align 4, !tbaa !26
  %1029 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1852 = icmp eq i32 %1029, 0
  br i1 %cmp1852, label %if.then.1854, label %if.end.1861

if.then.1854:                                     ; preds = %if.then.1850
  %1030 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc1855 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1030, i32 0, i32 68
  %extc1856 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc1855, i32 0, i32 4
  %arrayidx1857 = getelementptr inbounds [4 x float*], [4 x float*]* %extc1856, i32 0, i64 0
  store float* null, float** %arrayidx1857, align 8, !tbaa !1
  %1031 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc1858 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1031, i32 0, i32 68
  %sizc1859 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc1858, i32 0, i32 5
  %arrayidx1860 = getelementptr inbounds [4 x i32], [4 x i32]* %sizc1859, i32 0, i64 0
  store i32 0, i32* %arrayidx1860, align 4, !tbaa !26
  br label %if.end.1861

if.end.1861:                                      ; preds = %if.then.1854, %if.then.1850
  br label %if.end.1862

if.end.1862:                                      ; preds = %if.end.1861, %if.else.1847
  br label %if.end.1863

if.end.1863:                                      ; preds = %if.end.1862, %if.end.1846
  %1032 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1864 = icmp slt i32 %1032, 0
  br i1 %cmp1864, label %if.then.1866, label %if.end.1870

if.then.1866:                                     ; preds = %if.end.1863
  %1033 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %procs1867 = getelementptr inbounds %struct.gs_param_list_s, %struct.gs_param_list_s* %1033, i32 0, i32 0
  %1034 = load %struct.gs_param_list_procs_s*, %struct.gs_param_list_procs_s** %procs1867, align 8, !tbaa !91
  %signal_error1868 = getelementptr inbounds %struct.gs_param_list_procs_s, %struct.gs_param_list_procs_s* %1034, i32 0, i32 7
  %1035 = load i32 (%struct.gs_param_list_s*, i8*, i32)*, i32 (%struct.gs_param_list_s*, i8*, i32)** %signal_error1868, align 8, !tbaa !93
  %1036 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %1037 = load i32, i32* %code, align 4, !tbaa !26
  %call1869 = call i32 %1035(%struct.gs_param_list_s* %1036, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.47, i32 0, i32 0), i32 %1037) #5
  br label %if.end.1870

if.end.1870:                                      ; preds = %if.then.1866, %if.end.1863
  %1038 = load i32, i32* %error, align 4, !tbaa !26
  %1039 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1871 = icmp sgt i32 %1038, %1039
  br i1 %cmp1871, label %cond.true.1873, label %cond.false.1874

cond.true.1873:                                   ; preds = %if.end.1870
  %1040 = load i32, i32* %code, align 4, !tbaa !26
  br label %cond.end.1875

cond.false.1874:                                  ; preds = %if.end.1870
  %1041 = load i32, i32* %error, align 4, !tbaa !26
  br label %cond.end.1875

cond.end.1875:                                    ; preds = %cond.false.1874, %cond.true.1873
  %cond1876 = phi i32 [ %1040, %cond.true.1873 ], [ %1041, %cond.false.1874 ]
  store i32 %cond1876, i32* %error, align 4, !tbaa !26
  %1042 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call1877 = call i32 @param_read_float_array(%struct.gs_param_list_s* %1042, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.48, i32 0, i32 0), %struct.gs_param_float_array_s* %pfa) #5
  store i32 %call1877, i32* %code, align 4, !tbaa !26
  %1043 = load i32, i32* %error, align 4, !tbaa !26
  %cmp1878 = icmp eq i32 %1043, 0
  br i1 %cmp1878, label %land.lhs.true.1880, label %if.else.1892

land.lhs.true.1880:                               ; preds = %cond.end.1875
  %1044 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1881 = icmp eq i32 %1044, 0
  br i1 %cmp1881, label %if.then.1883, label %if.else.1892

if.then.1883:                                     ; preds = %land.lhs.true.1880
  %data1884 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 0
  %1045 = load float*, float** %data1884, align 8, !tbaa !87
  %1046 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc1885 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1046, i32 0, i32 68
  %extv1886 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc1885, i32 0, i32 7
  %arrayidx1887 = getelementptr inbounds [4 x float*], [4 x float*]* %extv1886, i32 0, i64 0
  store float* %1045, float** %arrayidx1887, align 8, !tbaa !1
  %size1888 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 1
  %1047 = load i32, i32* %size1888, align 4, !tbaa !89
  %1048 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc1889 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1048, i32 0, i32 68
  %sizv1890 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc1889, i32 0, i32 8
  %arrayidx1891 = getelementptr inbounds [4 x i32], [4 x i32]* %sizv1890, i32 0, i64 0
  store i32 %1047, i32* %arrayidx1891, align 4, !tbaa !26
  br label %if.end.1908

if.else.1892:                                     ; preds = %land.lhs.true.1880, %cond.end.1875
  %1049 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1893 = icmp slt i32 %1049, 0
  br i1 %cmp1893, label %if.then.1895, label %if.end.1907

if.then.1895:                                     ; preds = %if.else.1892
  %1050 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call1896 = call i32 @param_read_null(%struct.gs_param_list_s* %1050, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.48, i32 0, i32 0)) #5
  store i32 %call1896, i32* %code, align 4, !tbaa !26
  %1051 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1897 = icmp eq i32 %1051, 0
  br i1 %cmp1897, label %if.then.1899, label %if.end.1906

if.then.1899:                                     ; preds = %if.then.1895
  %1052 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc1900 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1052, i32 0, i32 68
  %extv1901 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc1900, i32 0, i32 7
  %arrayidx1902 = getelementptr inbounds [4 x float*], [4 x float*]* %extv1901, i32 0, i64 0
  store float* getelementptr inbounds ([2 x float], [2 x float]* @defext, i32 0, i32 0), float** %arrayidx1902, align 8, !tbaa !1
  %1053 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc1903 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1053, i32 0, i32 68
  %sizv1904 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc1903, i32 0, i32 8
  %arrayidx1905 = getelementptr inbounds [4 x i32], [4 x i32]* %sizv1904, i32 0, i64 0
  store i32 2, i32* %arrayidx1905, align 4, !tbaa !26
  br label %if.end.1906

if.end.1906:                                      ; preds = %if.then.1899, %if.then.1895
  br label %if.end.1907

if.end.1907:                                      ; preds = %if.end.1906, %if.else.1892
  br label %if.end.1908

if.end.1908:                                      ; preds = %if.end.1907, %if.then.1883
  %1054 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1909 = icmp slt i32 %1054, 0
  br i1 %cmp1909, label %if.then.1911, label %if.end.1915

if.then.1911:                                     ; preds = %if.end.1908
  %1055 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %procs1912 = getelementptr inbounds %struct.gs_param_list_s, %struct.gs_param_list_s* %1055, i32 0, i32 0
  %1056 = load %struct.gs_param_list_procs_s*, %struct.gs_param_list_procs_s** %procs1912, align 8, !tbaa !91
  %signal_error1913 = getelementptr inbounds %struct.gs_param_list_procs_s, %struct.gs_param_list_procs_s* %1056, i32 0, i32 7
  %1057 = load i32 (%struct.gs_param_list_s*, i8*, i32)*, i32 (%struct.gs_param_list_s*, i8*, i32)** %signal_error1913, align 8, !tbaa !93
  %1058 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %1059 = load i32, i32* %code, align 4, !tbaa !26
  %call1914 = call i32 %1057(%struct.gs_param_list_s* %1058, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.48, i32 0, i32 0), i32 %1059) #5
  br label %if.end.1915

if.end.1915:                                      ; preds = %if.then.1911, %if.end.1908
  %1060 = load i32, i32* %error, align 4, !tbaa !26
  %1061 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1916 = icmp sgt i32 %1060, %1061
  br i1 %cmp1916, label %cond.true.1918, label %cond.false.1919

cond.true.1918:                                   ; preds = %if.end.1915
  %1062 = load i32, i32* %code, align 4, !tbaa !26
  br label %cond.end.1920

cond.false.1919:                                  ; preds = %if.end.1915
  %1063 = load i32, i32* %error, align 4, !tbaa !26
  br label %cond.end.1920

cond.end.1920:                                    ; preds = %cond.false.1919, %cond.true.1918
  %cond1921 = phi i32 [ %1062, %cond.true.1918 ], [ %1063, %cond.false.1919 ]
  store i32 %cond1921, i32* %error, align 4, !tbaa !26
  %1064 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call1922 = call i32 @param_read_float_array(%struct.gs_param_list_s* %1064, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.49, i32 0, i32 0), %struct.gs_param_float_array_s* %pfa) #5
  store i32 %call1922, i32* %code, align 4, !tbaa !26
  %1065 = load i32, i32* %error, align 4, !tbaa !26
  %cmp1923 = icmp eq i32 %1065, 0
  br i1 %cmp1923, label %land.lhs.true.1925, label %if.else.1943

land.lhs.true.1925:                               ; preds = %cond.end.1920
  %1066 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1926 = icmp eq i32 %1066, 0
  br i1 %cmp1926, label %if.then.1928, label %if.else.1943

if.then.1928:                                     ; preds = %land.lhs.true.1925
  %size1929 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 1
  %1067 = load i32, i32* %size1929, align 4, !tbaa !89
  %cmp1930 = icmp ugt i32 %1067, 1
  br i1 %cmp1930, label %if.then.1932, label %if.else.1941

if.then.1932:                                     ; preds = %if.then.1928
  %data1933 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 0
  %1068 = load float*, float** %data1933, align 8, !tbaa !87
  %1069 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc1934 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1069, i32 0, i32 68
  %extc1935 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc1934, i32 0, i32 4
  %arrayidx1936 = getelementptr inbounds [4 x float*], [4 x float*]* %extc1935, i32 0, i64 1
  store float* %1068, float** %arrayidx1936, align 8, !tbaa !1
  %size1937 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 1
  %1070 = load i32, i32* %size1937, align 4, !tbaa !89
  %1071 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc1938 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1071, i32 0, i32 68
  %sizc1939 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc1938, i32 0, i32 5
  %arrayidx1940 = getelementptr inbounds [4 x i32], [4 x i32]* %sizc1939, i32 0, i64 1
  store i32 %1070, i32* %arrayidx1940, align 4, !tbaa !26
  br label %if.end.1942

if.else.1941:                                     ; preds = %if.then.1928
  store i32 -15, i32* %code, align 4, !tbaa !26
  br label %if.end.1942

if.end.1942:                                      ; preds = %if.else.1941, %if.then.1932
  br label %if.end.1959

if.else.1943:                                     ; preds = %land.lhs.true.1925, %cond.end.1920
  %1072 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1944 = icmp slt i32 %1072, 0
  br i1 %cmp1944, label %if.then.1946, label %if.end.1958

if.then.1946:                                     ; preds = %if.else.1943
  %1073 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call1947 = call i32 @param_read_null(%struct.gs_param_list_s* %1073, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.49, i32 0, i32 0)) #5
  store i32 %call1947, i32* %code, align 4, !tbaa !26
  %1074 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1948 = icmp eq i32 %1074, 0
  br i1 %cmp1948, label %if.then.1950, label %if.end.1957

if.then.1950:                                     ; preds = %if.then.1946
  %1075 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc1951 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1075, i32 0, i32 68
  %extc1952 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc1951, i32 0, i32 4
  %arrayidx1953 = getelementptr inbounds [4 x float*], [4 x float*]* %extc1952, i32 0, i64 1
  store float* null, float** %arrayidx1953, align 8, !tbaa !1
  %1076 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc1954 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1076, i32 0, i32 68
  %sizc1955 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc1954, i32 0, i32 5
  %arrayidx1956 = getelementptr inbounds [4 x i32], [4 x i32]* %sizc1955, i32 0, i64 1
  store i32 0, i32* %arrayidx1956, align 4, !tbaa !26
  br label %if.end.1957

if.end.1957:                                      ; preds = %if.then.1950, %if.then.1946
  br label %if.end.1958

if.end.1958:                                      ; preds = %if.end.1957, %if.else.1943
  br label %if.end.1959

if.end.1959:                                      ; preds = %if.end.1958, %if.end.1942
  %1077 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1960 = icmp slt i32 %1077, 0
  br i1 %cmp1960, label %if.then.1962, label %if.end.1966

if.then.1962:                                     ; preds = %if.end.1959
  %1078 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %procs1963 = getelementptr inbounds %struct.gs_param_list_s, %struct.gs_param_list_s* %1078, i32 0, i32 0
  %1079 = load %struct.gs_param_list_procs_s*, %struct.gs_param_list_procs_s** %procs1963, align 8, !tbaa !91
  %signal_error1964 = getelementptr inbounds %struct.gs_param_list_procs_s, %struct.gs_param_list_procs_s* %1079, i32 0, i32 7
  %1080 = load i32 (%struct.gs_param_list_s*, i8*, i32)*, i32 (%struct.gs_param_list_s*, i8*, i32)** %signal_error1964, align 8, !tbaa !93
  %1081 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %1082 = load i32, i32* %code, align 4, !tbaa !26
  %call1965 = call i32 %1080(%struct.gs_param_list_s* %1081, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.49, i32 0, i32 0), i32 %1082) #5
  br label %if.end.1966

if.end.1966:                                      ; preds = %if.then.1962, %if.end.1959
  %1083 = load i32, i32* %error, align 4, !tbaa !26
  %1084 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1967 = icmp sgt i32 %1083, %1084
  br i1 %cmp1967, label %cond.true.1969, label %cond.false.1970

cond.true.1969:                                   ; preds = %if.end.1966
  %1085 = load i32, i32* %code, align 4, !tbaa !26
  br label %cond.end.1971

cond.false.1970:                                  ; preds = %if.end.1966
  %1086 = load i32, i32* %error, align 4, !tbaa !26
  br label %cond.end.1971

cond.end.1971:                                    ; preds = %cond.false.1970, %cond.true.1969
  %cond1972 = phi i32 [ %1085, %cond.true.1969 ], [ %1086, %cond.false.1970 ]
  store i32 %cond1972, i32* %error, align 4, !tbaa !26
  %1087 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call1973 = call i32 @param_read_float_array(%struct.gs_param_list_s* %1087, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.50, i32 0, i32 0), %struct.gs_param_float_array_s* %pfa) #5
  store i32 %call1973, i32* %code, align 4, !tbaa !26
  %1088 = load i32, i32* %error, align 4, !tbaa !26
  %cmp1974 = icmp eq i32 %1088, 0
  br i1 %cmp1974, label %land.lhs.true.1976, label %if.else.1988

land.lhs.true.1976:                               ; preds = %cond.end.1971
  %1089 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1977 = icmp eq i32 %1089, 0
  br i1 %cmp1977, label %if.then.1979, label %if.else.1988

if.then.1979:                                     ; preds = %land.lhs.true.1976
  %data1980 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 0
  %1090 = load float*, float** %data1980, align 8, !tbaa !87
  %1091 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc1981 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1091, i32 0, i32 68
  %extv1982 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc1981, i32 0, i32 7
  %arrayidx1983 = getelementptr inbounds [4 x float*], [4 x float*]* %extv1982, i32 0, i64 1
  store float* %1090, float** %arrayidx1983, align 8, !tbaa !1
  %size1984 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 1
  %1092 = load i32, i32* %size1984, align 4, !tbaa !89
  %1093 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc1985 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1093, i32 0, i32 68
  %sizv1986 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc1985, i32 0, i32 8
  %arrayidx1987 = getelementptr inbounds [4 x i32], [4 x i32]* %sizv1986, i32 0, i64 1
  store i32 %1092, i32* %arrayidx1987, align 4, !tbaa !26
  br label %if.end.2004

if.else.1988:                                     ; preds = %land.lhs.true.1976, %cond.end.1971
  %1094 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1989 = icmp slt i32 %1094, 0
  br i1 %cmp1989, label %if.then.1991, label %if.end.2003

if.then.1991:                                     ; preds = %if.else.1988
  %1095 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call1992 = call i32 @param_read_null(%struct.gs_param_list_s* %1095, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.50, i32 0, i32 0)) #5
  store i32 %call1992, i32* %code, align 4, !tbaa !26
  %1096 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1993 = icmp eq i32 %1096, 0
  br i1 %cmp1993, label %if.then.1995, label %if.end.2002

if.then.1995:                                     ; preds = %if.then.1991
  %1097 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc1996 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1097, i32 0, i32 68
  %extv1997 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc1996, i32 0, i32 7
  %arrayidx1998 = getelementptr inbounds [4 x float*], [4 x float*]* %extv1997, i32 0, i64 1
  store float* getelementptr inbounds ([2 x float], [2 x float]* @defext, i32 0, i32 0), float** %arrayidx1998, align 8, !tbaa !1
  %1098 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc1999 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1098, i32 0, i32 68
  %sizv2000 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc1999, i32 0, i32 8
  %arrayidx2001 = getelementptr inbounds [4 x i32], [4 x i32]* %sizv2000, i32 0, i64 1
  store i32 2, i32* %arrayidx2001, align 4, !tbaa !26
  br label %if.end.2002

if.end.2002:                                      ; preds = %if.then.1995, %if.then.1991
  br label %if.end.2003

if.end.2003:                                      ; preds = %if.end.2002, %if.else.1988
  br label %if.end.2004

if.end.2004:                                      ; preds = %if.end.2003, %if.then.1979
  %1099 = load i32, i32* %code, align 4, !tbaa !26
  %cmp2005 = icmp slt i32 %1099, 0
  br i1 %cmp2005, label %if.then.2007, label %if.end.2011

if.then.2007:                                     ; preds = %if.end.2004
  %1100 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %procs2008 = getelementptr inbounds %struct.gs_param_list_s, %struct.gs_param_list_s* %1100, i32 0, i32 0
  %1101 = load %struct.gs_param_list_procs_s*, %struct.gs_param_list_procs_s** %procs2008, align 8, !tbaa !91
  %signal_error2009 = getelementptr inbounds %struct.gs_param_list_procs_s, %struct.gs_param_list_procs_s* %1101, i32 0, i32 7
  %1102 = load i32 (%struct.gs_param_list_s*, i8*, i32)*, i32 (%struct.gs_param_list_s*, i8*, i32)** %signal_error2009, align 8, !tbaa !93
  %1103 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %1104 = load i32, i32* %code, align 4, !tbaa !26
  %call2010 = call i32 %1102(%struct.gs_param_list_s* %1103, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.50, i32 0, i32 0), i32 %1104) #5
  br label %if.end.2011

if.end.2011:                                      ; preds = %if.then.2007, %if.end.2004
  %1105 = load i32, i32* %error, align 4, !tbaa !26
  %1106 = load i32, i32* %code, align 4, !tbaa !26
  %cmp2012 = icmp sgt i32 %1105, %1106
  br i1 %cmp2012, label %cond.true.2014, label %cond.false.2015

cond.true.2014:                                   ; preds = %if.end.2011
  %1107 = load i32, i32* %code, align 4, !tbaa !26
  br label %cond.end.2016

cond.false.2015:                                  ; preds = %if.end.2011
  %1108 = load i32, i32* %error, align 4, !tbaa !26
  br label %cond.end.2016

cond.end.2016:                                    ; preds = %cond.false.2015, %cond.true.2014
  %cond2017 = phi i32 [ %1107, %cond.true.2014 ], [ %1108, %cond.false.2015 ]
  store i32 %cond2017, i32* %error, align 4, !tbaa !26
  %1109 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call2018 = call i32 @param_read_float_array(%struct.gs_param_list_s* %1109, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.51, i32 0, i32 0), %struct.gs_param_float_array_s* %pfa) #5
  store i32 %call2018, i32* %code, align 4, !tbaa !26
  %1110 = load i32, i32* %error, align 4, !tbaa !26
  %cmp2019 = icmp eq i32 %1110, 0
  br i1 %cmp2019, label %land.lhs.true.2021, label %if.else.2039

land.lhs.true.2021:                               ; preds = %cond.end.2016
  %1111 = load i32, i32* %code, align 4, !tbaa !26
  %cmp2022 = icmp eq i32 %1111, 0
  br i1 %cmp2022, label %if.then.2024, label %if.else.2039

if.then.2024:                                     ; preds = %land.lhs.true.2021
  %size2025 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 1
  %1112 = load i32, i32* %size2025, align 4, !tbaa !89
  %cmp2026 = icmp ugt i32 %1112, 1
  br i1 %cmp2026, label %if.then.2028, label %if.else.2037

if.then.2028:                                     ; preds = %if.then.2024
  %data2029 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 0
  %1113 = load float*, float** %data2029, align 8, !tbaa !87
  %1114 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2030 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1114, i32 0, i32 68
  %extc2031 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2030, i32 0, i32 4
  %arrayidx2032 = getelementptr inbounds [4 x float*], [4 x float*]* %extc2031, i32 0, i64 2
  store float* %1113, float** %arrayidx2032, align 8, !tbaa !1
  %size2033 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 1
  %1115 = load i32, i32* %size2033, align 4, !tbaa !89
  %1116 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2034 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1116, i32 0, i32 68
  %sizc2035 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2034, i32 0, i32 5
  %arrayidx2036 = getelementptr inbounds [4 x i32], [4 x i32]* %sizc2035, i32 0, i64 2
  store i32 %1115, i32* %arrayidx2036, align 4, !tbaa !26
  br label %if.end.2038

if.else.2037:                                     ; preds = %if.then.2024
  store i32 -15, i32* %code, align 4, !tbaa !26
  br label %if.end.2038

if.end.2038:                                      ; preds = %if.else.2037, %if.then.2028
  br label %if.end.2055

if.else.2039:                                     ; preds = %land.lhs.true.2021, %cond.end.2016
  %1117 = load i32, i32* %code, align 4, !tbaa !26
  %cmp2040 = icmp slt i32 %1117, 0
  br i1 %cmp2040, label %if.then.2042, label %if.end.2054

if.then.2042:                                     ; preds = %if.else.2039
  %1118 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call2043 = call i32 @param_read_null(%struct.gs_param_list_s* %1118, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.51, i32 0, i32 0)) #5
  store i32 %call2043, i32* %code, align 4, !tbaa !26
  %1119 = load i32, i32* %code, align 4, !tbaa !26
  %cmp2044 = icmp eq i32 %1119, 0
  br i1 %cmp2044, label %if.then.2046, label %if.end.2053

if.then.2046:                                     ; preds = %if.then.2042
  %1120 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2047 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1120, i32 0, i32 68
  %extc2048 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2047, i32 0, i32 4
  %arrayidx2049 = getelementptr inbounds [4 x float*], [4 x float*]* %extc2048, i32 0, i64 2
  store float* null, float** %arrayidx2049, align 8, !tbaa !1
  %1121 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2050 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1121, i32 0, i32 68
  %sizc2051 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2050, i32 0, i32 5
  %arrayidx2052 = getelementptr inbounds [4 x i32], [4 x i32]* %sizc2051, i32 0, i64 2
  store i32 0, i32* %arrayidx2052, align 4, !tbaa !26
  br label %if.end.2053

if.end.2053:                                      ; preds = %if.then.2046, %if.then.2042
  br label %if.end.2054

if.end.2054:                                      ; preds = %if.end.2053, %if.else.2039
  br label %if.end.2055

if.end.2055:                                      ; preds = %if.end.2054, %if.end.2038
  %1122 = load i32, i32* %code, align 4, !tbaa !26
  %cmp2056 = icmp slt i32 %1122, 0
  br i1 %cmp2056, label %if.then.2058, label %if.end.2062

if.then.2058:                                     ; preds = %if.end.2055
  %1123 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %procs2059 = getelementptr inbounds %struct.gs_param_list_s, %struct.gs_param_list_s* %1123, i32 0, i32 0
  %1124 = load %struct.gs_param_list_procs_s*, %struct.gs_param_list_procs_s** %procs2059, align 8, !tbaa !91
  %signal_error2060 = getelementptr inbounds %struct.gs_param_list_procs_s, %struct.gs_param_list_procs_s* %1124, i32 0, i32 7
  %1125 = load i32 (%struct.gs_param_list_s*, i8*, i32)*, i32 (%struct.gs_param_list_s*, i8*, i32)** %signal_error2060, align 8, !tbaa !93
  %1126 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %1127 = load i32, i32* %code, align 4, !tbaa !26
  %call2061 = call i32 %1125(%struct.gs_param_list_s* %1126, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.51, i32 0, i32 0), i32 %1127) #5
  br label %if.end.2062

if.end.2062:                                      ; preds = %if.then.2058, %if.end.2055
  %1128 = load i32, i32* %error, align 4, !tbaa !26
  %1129 = load i32, i32* %code, align 4, !tbaa !26
  %cmp2063 = icmp sgt i32 %1128, %1129
  br i1 %cmp2063, label %cond.true.2065, label %cond.false.2066

cond.true.2065:                                   ; preds = %if.end.2062
  %1130 = load i32, i32* %code, align 4, !tbaa !26
  br label %cond.end.2067

cond.false.2066:                                  ; preds = %if.end.2062
  %1131 = load i32, i32* %error, align 4, !tbaa !26
  br label %cond.end.2067

cond.end.2067:                                    ; preds = %cond.false.2066, %cond.true.2065
  %cond2068 = phi i32 [ %1130, %cond.true.2065 ], [ %1131, %cond.false.2066 ]
  store i32 %cond2068, i32* %error, align 4, !tbaa !26
  %1132 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call2069 = call i32 @param_read_float_array(%struct.gs_param_list_s* %1132, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.52, i32 0, i32 0), %struct.gs_param_float_array_s* %pfa) #5
  store i32 %call2069, i32* %code, align 4, !tbaa !26
  %1133 = load i32, i32* %error, align 4, !tbaa !26
  %cmp2070 = icmp eq i32 %1133, 0
  br i1 %cmp2070, label %land.lhs.true.2072, label %if.else.2084

land.lhs.true.2072:                               ; preds = %cond.end.2067
  %1134 = load i32, i32* %code, align 4, !tbaa !26
  %cmp2073 = icmp eq i32 %1134, 0
  br i1 %cmp2073, label %if.then.2075, label %if.else.2084

if.then.2075:                                     ; preds = %land.lhs.true.2072
  %data2076 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 0
  %1135 = load float*, float** %data2076, align 8, !tbaa !87
  %1136 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2077 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1136, i32 0, i32 68
  %extv2078 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2077, i32 0, i32 7
  %arrayidx2079 = getelementptr inbounds [4 x float*], [4 x float*]* %extv2078, i32 0, i64 2
  store float* %1135, float** %arrayidx2079, align 8, !tbaa !1
  %size2080 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 1
  %1137 = load i32, i32* %size2080, align 4, !tbaa !89
  %1138 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2081 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1138, i32 0, i32 68
  %sizv2082 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2081, i32 0, i32 8
  %arrayidx2083 = getelementptr inbounds [4 x i32], [4 x i32]* %sizv2082, i32 0, i64 2
  store i32 %1137, i32* %arrayidx2083, align 4, !tbaa !26
  br label %if.end.2100

if.else.2084:                                     ; preds = %land.lhs.true.2072, %cond.end.2067
  %1139 = load i32, i32* %code, align 4, !tbaa !26
  %cmp2085 = icmp slt i32 %1139, 0
  br i1 %cmp2085, label %if.then.2087, label %if.end.2099

if.then.2087:                                     ; preds = %if.else.2084
  %1140 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call2088 = call i32 @param_read_null(%struct.gs_param_list_s* %1140, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.52, i32 0, i32 0)) #5
  store i32 %call2088, i32* %code, align 4, !tbaa !26
  %1141 = load i32, i32* %code, align 4, !tbaa !26
  %cmp2089 = icmp eq i32 %1141, 0
  br i1 %cmp2089, label %if.then.2091, label %if.end.2098

if.then.2091:                                     ; preds = %if.then.2087
  %1142 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2092 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1142, i32 0, i32 68
  %extv2093 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2092, i32 0, i32 7
  %arrayidx2094 = getelementptr inbounds [4 x float*], [4 x float*]* %extv2093, i32 0, i64 2
  store float* getelementptr inbounds ([2 x float], [2 x float]* @defext, i32 0, i32 0), float** %arrayidx2094, align 8, !tbaa !1
  %1143 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2095 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1143, i32 0, i32 68
  %sizv2096 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2095, i32 0, i32 8
  %arrayidx2097 = getelementptr inbounds [4 x i32], [4 x i32]* %sizv2096, i32 0, i64 2
  store i32 2, i32* %arrayidx2097, align 4, !tbaa !26
  br label %if.end.2098

if.end.2098:                                      ; preds = %if.then.2091, %if.then.2087
  br label %if.end.2099

if.end.2099:                                      ; preds = %if.end.2098, %if.else.2084
  br label %if.end.2100

if.end.2100:                                      ; preds = %if.end.2099, %if.then.2075
  %1144 = load i32, i32* %code, align 4, !tbaa !26
  %cmp2101 = icmp slt i32 %1144, 0
  br i1 %cmp2101, label %if.then.2103, label %if.end.2107

if.then.2103:                                     ; preds = %if.end.2100
  %1145 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %procs2104 = getelementptr inbounds %struct.gs_param_list_s, %struct.gs_param_list_s* %1145, i32 0, i32 0
  %1146 = load %struct.gs_param_list_procs_s*, %struct.gs_param_list_procs_s** %procs2104, align 8, !tbaa !91
  %signal_error2105 = getelementptr inbounds %struct.gs_param_list_procs_s, %struct.gs_param_list_procs_s* %1146, i32 0, i32 7
  %1147 = load i32 (%struct.gs_param_list_s*, i8*, i32)*, i32 (%struct.gs_param_list_s*, i8*, i32)** %signal_error2105, align 8, !tbaa !93
  %1148 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %1149 = load i32, i32* %code, align 4, !tbaa !26
  %call2106 = call i32 %1147(%struct.gs_param_list_s* %1148, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.52, i32 0, i32 0), i32 %1149) #5
  br label %if.end.2107

if.end.2107:                                      ; preds = %if.then.2103, %if.end.2100
  %1150 = load i32, i32* %error, align 4, !tbaa !26
  %1151 = load i32, i32* %code, align 4, !tbaa !26
  %cmp2108 = icmp sgt i32 %1150, %1151
  br i1 %cmp2108, label %cond.true.2110, label %cond.false.2111

cond.true.2110:                                   ; preds = %if.end.2107
  %1152 = load i32, i32* %code, align 4, !tbaa !26
  br label %cond.end.2112

cond.false.2111:                                  ; preds = %if.end.2107
  %1153 = load i32, i32* %error, align 4, !tbaa !26
  br label %cond.end.2112

cond.end.2112:                                    ; preds = %cond.false.2111, %cond.true.2110
  %cond2113 = phi i32 [ %1152, %cond.true.2110 ], [ %1153, %cond.false.2111 ]
  store i32 %cond2113, i32* %error, align 4, !tbaa !26
  %1154 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call2114 = call i32 @param_read_float_array(%struct.gs_param_list_s* %1154, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i32 0, i32 0), %struct.gs_param_float_array_s* %pfa) #5
  store i32 %call2114, i32* %code, align 4, !tbaa !26
  %1155 = load i32, i32* %error, align 4, !tbaa !26
  %cmp2115 = icmp eq i32 %1155, 0
  br i1 %cmp2115, label %land.lhs.true.2117, label %if.else.2135

land.lhs.true.2117:                               ; preds = %cond.end.2112
  %1156 = load i32, i32* %code, align 4, !tbaa !26
  %cmp2118 = icmp eq i32 %1156, 0
  br i1 %cmp2118, label %if.then.2120, label %if.else.2135

if.then.2120:                                     ; preds = %land.lhs.true.2117
  %size2121 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 1
  %1157 = load i32, i32* %size2121, align 4, !tbaa !89
  %cmp2122 = icmp ugt i32 %1157, 1
  br i1 %cmp2122, label %if.then.2124, label %if.else.2133

if.then.2124:                                     ; preds = %if.then.2120
  %data2125 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 0
  %1158 = load float*, float** %data2125, align 8, !tbaa !87
  %1159 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2126 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1159, i32 0, i32 68
  %extc2127 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2126, i32 0, i32 4
  %arrayidx2128 = getelementptr inbounds [4 x float*], [4 x float*]* %extc2127, i32 0, i64 3
  store float* %1158, float** %arrayidx2128, align 8, !tbaa !1
  %size2129 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 1
  %1160 = load i32, i32* %size2129, align 4, !tbaa !89
  %1161 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2130 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1161, i32 0, i32 68
  %sizc2131 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2130, i32 0, i32 5
  %arrayidx2132 = getelementptr inbounds [4 x i32], [4 x i32]* %sizc2131, i32 0, i64 3
  store i32 %1160, i32* %arrayidx2132, align 4, !tbaa !26
  br label %if.end.2134

if.else.2133:                                     ; preds = %if.then.2120
  store i32 -15, i32* %code, align 4, !tbaa !26
  br label %if.end.2134

if.end.2134:                                      ; preds = %if.else.2133, %if.then.2124
  br label %if.end.2151

if.else.2135:                                     ; preds = %land.lhs.true.2117, %cond.end.2112
  %1162 = load i32, i32* %code, align 4, !tbaa !26
  %cmp2136 = icmp slt i32 %1162, 0
  br i1 %cmp2136, label %if.then.2138, label %if.end.2150

if.then.2138:                                     ; preds = %if.else.2135
  %1163 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call2139 = call i32 @param_read_null(%struct.gs_param_list_s* %1163, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i32 0, i32 0)) #5
  store i32 %call2139, i32* %code, align 4, !tbaa !26
  %1164 = load i32, i32* %code, align 4, !tbaa !26
  %cmp2140 = icmp eq i32 %1164, 0
  br i1 %cmp2140, label %if.then.2142, label %if.end.2149

if.then.2142:                                     ; preds = %if.then.2138
  %1165 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2143 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1165, i32 0, i32 68
  %extc2144 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2143, i32 0, i32 4
  %arrayidx2145 = getelementptr inbounds [4 x float*], [4 x float*]* %extc2144, i32 0, i64 3
  store float* null, float** %arrayidx2145, align 8, !tbaa !1
  %1166 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2146 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1166, i32 0, i32 68
  %sizc2147 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2146, i32 0, i32 5
  %arrayidx2148 = getelementptr inbounds [4 x i32], [4 x i32]* %sizc2147, i32 0, i64 3
  store i32 0, i32* %arrayidx2148, align 4, !tbaa !26
  br label %if.end.2149

if.end.2149:                                      ; preds = %if.then.2142, %if.then.2138
  br label %if.end.2150

if.end.2150:                                      ; preds = %if.end.2149, %if.else.2135
  br label %if.end.2151

if.end.2151:                                      ; preds = %if.end.2150, %if.end.2134
  %1167 = load i32, i32* %code, align 4, !tbaa !26
  %cmp2152 = icmp slt i32 %1167, 0
  br i1 %cmp2152, label %if.then.2154, label %if.end.2158

if.then.2154:                                     ; preds = %if.end.2151
  %1168 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %procs2155 = getelementptr inbounds %struct.gs_param_list_s, %struct.gs_param_list_s* %1168, i32 0, i32 0
  %1169 = load %struct.gs_param_list_procs_s*, %struct.gs_param_list_procs_s** %procs2155, align 8, !tbaa !91
  %signal_error2156 = getelementptr inbounds %struct.gs_param_list_procs_s, %struct.gs_param_list_procs_s* %1169, i32 0, i32 7
  %1170 = load i32 (%struct.gs_param_list_s*, i8*, i32)*, i32 (%struct.gs_param_list_s*, i8*, i32)** %signal_error2156, align 8, !tbaa !93
  %1171 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %1172 = load i32, i32* %code, align 4, !tbaa !26
  %call2157 = call i32 %1170(%struct.gs_param_list_s* %1171, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i32 0, i32 0), i32 %1172) #5
  br label %if.end.2158

if.end.2158:                                      ; preds = %if.then.2154, %if.end.2151
  %1173 = load i32, i32* %error, align 4, !tbaa !26
  %1174 = load i32, i32* %code, align 4, !tbaa !26
  %cmp2159 = icmp sgt i32 %1173, %1174
  br i1 %cmp2159, label %cond.true.2161, label %cond.false.2162

cond.true.2161:                                   ; preds = %if.end.2158
  %1175 = load i32, i32* %code, align 4, !tbaa !26
  br label %cond.end.2163

cond.false.2162:                                  ; preds = %if.end.2158
  %1176 = load i32, i32* %error, align 4, !tbaa !26
  br label %cond.end.2163

cond.end.2163:                                    ; preds = %cond.false.2162, %cond.true.2161
  %cond2164 = phi i32 [ %1175, %cond.true.2161 ], [ %1176, %cond.false.2162 ]
  store i32 %cond2164, i32* %error, align 4, !tbaa !26
  %1177 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call2165 = call i32 @param_read_float_array(%struct.gs_param_list_s* %1177, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.40, i32 0, i32 0), %struct.gs_param_float_array_s* %pfa) #5
  store i32 %call2165, i32* %code, align 4, !tbaa !26
  %1178 = load i32, i32* %error, align 4, !tbaa !26
  %cmp2166 = icmp eq i32 %1178, 0
  br i1 %cmp2166, label %land.lhs.true.2168, label %if.else.2180

land.lhs.true.2168:                               ; preds = %cond.end.2163
  %1179 = load i32, i32* %code, align 4, !tbaa !26
  %cmp2169 = icmp eq i32 %1179, 0
  br i1 %cmp2169, label %if.then.2171, label %if.else.2180

if.then.2171:                                     ; preds = %land.lhs.true.2168
  %data2172 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 0
  %1180 = load float*, float** %data2172, align 8, !tbaa !87
  %1181 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2173 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1181, i32 0, i32 68
  %extv2174 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2173, i32 0, i32 7
  %arrayidx2175 = getelementptr inbounds [4 x float*], [4 x float*]* %extv2174, i32 0, i64 3
  store float* %1180, float** %arrayidx2175, align 8, !tbaa !1
  %size2176 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %pfa, i32 0, i32 1
  %1182 = load i32, i32* %size2176, align 4, !tbaa !89
  %1183 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2177 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1183, i32 0, i32 68
  %sizv2178 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2177, i32 0, i32 8
  %arrayidx2179 = getelementptr inbounds [4 x i32], [4 x i32]* %sizv2178, i32 0, i64 3
  store i32 %1182, i32* %arrayidx2179, align 4, !tbaa !26
  br label %if.end.2196

if.else.2180:                                     ; preds = %land.lhs.true.2168, %cond.end.2163
  %1184 = load i32, i32* %code, align 4, !tbaa !26
  %cmp2181 = icmp slt i32 %1184, 0
  br i1 %cmp2181, label %if.then.2183, label %if.end.2195

if.then.2183:                                     ; preds = %if.else.2180
  %1185 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call2184 = call i32 @param_read_null(%struct.gs_param_list_s* %1185, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.40, i32 0, i32 0)) #5
  store i32 %call2184, i32* %code, align 4, !tbaa !26
  %1186 = load i32, i32* %code, align 4, !tbaa !26
  %cmp2185 = icmp eq i32 %1186, 0
  br i1 %cmp2185, label %if.then.2187, label %if.end.2194

if.then.2187:                                     ; preds = %if.then.2183
  %1187 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2188 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1187, i32 0, i32 68
  %extv2189 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2188, i32 0, i32 7
  %arrayidx2190 = getelementptr inbounds [4 x float*], [4 x float*]* %extv2189, i32 0, i64 3
  store float* getelementptr inbounds ([2 x float], [2 x float]* @defext, i32 0, i32 0), float** %arrayidx2190, align 8, !tbaa !1
  %1188 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2191 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1188, i32 0, i32 68
  %sizv2192 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2191, i32 0, i32 8
  %arrayidx2193 = getelementptr inbounds [4 x i32], [4 x i32]* %sizv2192, i32 0, i64 3
  store i32 2, i32* %arrayidx2193, align 4, !tbaa !26
  br label %if.end.2194

if.end.2194:                                      ; preds = %if.then.2187, %if.then.2183
  br label %if.end.2195

if.end.2195:                                      ; preds = %if.end.2194, %if.else.2180
  br label %if.end.2196

if.end.2196:                                      ; preds = %if.end.2195, %if.then.2171
  %1189 = load i32, i32* %code, align 4, !tbaa !26
  %cmp2197 = icmp slt i32 %1189, 0
  br i1 %cmp2197, label %if.then.2199, label %if.end.2203

if.then.2199:                                     ; preds = %if.end.2196
  %1190 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %procs2200 = getelementptr inbounds %struct.gs_param_list_s, %struct.gs_param_list_s* %1190, i32 0, i32 0
  %1191 = load %struct.gs_param_list_procs_s*, %struct.gs_param_list_procs_s** %procs2200, align 8, !tbaa !91
  %signal_error2201 = getelementptr inbounds %struct.gs_param_list_procs_s, %struct.gs_param_list_procs_s* %1191, i32 0, i32 7
  %1192 = load i32 (%struct.gs_param_list_s*, i8*, i32)*, i32 (%struct.gs_param_list_s*, i8*, i32)** %signal_error2201, align 8, !tbaa !93
  %1193 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %1194 = load i32, i32* %code, align 4, !tbaa !26
  %call2202 = call i32 %1192(%struct.gs_param_list_s* %1193, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.40, i32 0, i32 0), i32 %1194) #5
  br label %if.end.2203

if.end.2203:                                      ; preds = %if.then.2199, %if.end.2196
  %1195 = load i32, i32* %error, align 4, !tbaa !26
  %1196 = load i32, i32* %code, align 4, !tbaa !26
  %cmp2204 = icmp sgt i32 %1195, %1196
  br i1 %cmp2204, label %cond.true.2206, label %cond.false.2207

cond.true.2206:                                   ; preds = %if.end.2203
  %1197 = load i32, i32* %code, align 4, !tbaa !26
  br label %cond.end.2208

cond.false.2207:                                  ; preds = %if.end.2203
  %1198 = load i32, i32* %error, align 4, !tbaa !26
  br label %cond.end.2208

cond.end.2208:                                    ; preds = %cond.false.2207, %cond.true.2206
  %cond2209 = phi i32 [ %1197, %cond.true.2206 ], [ %1198, %cond.false.2207 ]
  store i32 %cond2209, i32* %error, align 4, !tbaa !26
  %1199 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call2210 = call i32 @param_read_null(%struct.gs_param_list_s* %1199, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.41, i32 0, i32 0)) #5
  store i32 %call2210, i32* %code, align 4, !tbaa !26
  %1200 = load i32, i32* %code, align 4, !tbaa !26
  %cmp2211 = icmp eq i32 %1200, -20
  br i1 %cmp2211, label %if.then.2213, label %if.end.2215

if.then.2213:                                     ; preds = %cond.end.2208
  %1201 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call2214 = call i32 @param_read_float_array(%struct.gs_param_list_s* %1201, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.41, i32 0, i32 0), %struct.gs_param_float_array_s* %pfa) #5
  store i32 %call2214, i32* %code, align 4, !tbaa !26
  br label %if.end.2215

if.end.2215:                                      ; preds = %if.then.2213, %cond.end.2208
  %1202 = load i32, i32* %code, align 4, !tbaa !26
  %cmp2216 = icmp slt i32 %1202, 0
  br i1 %cmp2216, label %if.then.2218, label %if.end.2222

if.then.2218:                                     ; preds = %if.end.2215
  %1203 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %procs2219 = getelementptr inbounds %struct.gs_param_list_s, %struct.gs_param_list_s* %1203, i32 0, i32 0
  %1204 = load %struct.gs_param_list_procs_s*, %struct.gs_param_list_procs_s** %procs2219, align 8, !tbaa !91
  %signal_error2220 = getelementptr inbounds %struct.gs_param_list_procs_s, %struct.gs_param_list_procs_s* %1204, i32 0, i32 7
  %1205 = load i32 (%struct.gs_param_list_s*, i8*, i32)*, i32 (%struct.gs_param_list_s*, i8*, i32)** %signal_error2220, align 8, !tbaa !93
  %1206 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %1207 = load i32, i32* %code, align 4, !tbaa !26
  %call2221 = call i32 %1205(%struct.gs_param_list_s* %1206, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.41, i32 0, i32 0), i32 %1207) #5
  br label %if.end.2222

if.end.2222:                                      ; preds = %if.then.2218, %if.end.2215
  %1208 = load i32, i32* %error, align 4, !tbaa !26
  %1209 = load i32, i32* %code, align 4, !tbaa !26
  %cmp2223 = icmp sgt i32 %1208, %1209
  br i1 %cmp2223, label %cond.true.2225, label %cond.false.2226

cond.true.2225:                                   ; preds = %if.end.2222
  %1210 = load i32, i32* %code, align 4, !tbaa !26
  br label %cond.end.2227

cond.false.2226:                                  ; preds = %if.end.2222
  %1211 = load i32, i32* %error, align 4, !tbaa !26
  br label %cond.end.2227

cond.end.2227:                                    ; preds = %cond.false.2226, %cond.true.2225
  %cond2228 = phi i32 [ %1210, %cond.true.2225 ], [ %1211, %cond.false.2226 ]
  store i32 %cond2228, i32* %error, align 4, !tbaa !26
  %1212 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call2229 = call i32 @param_read_null(%struct.gs_param_list_s* %1212, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.42, i32 0, i32 0)) #5
  store i32 %call2229, i32* %code, align 4, !tbaa !26
  %1213 = load i32, i32* %code, align 4, !tbaa !26
  %cmp2230 = icmp eq i32 %1213, -20
  br i1 %cmp2230, label %if.then.2232, label %if.end.2234

if.then.2232:                                     ; preds = %cond.end.2227
  %1214 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call2233 = call i32 @param_read_float_array(%struct.gs_param_list_s* %1214, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.42, i32 0, i32 0), %struct.gs_param_float_array_s* %pfa) #5
  store i32 %call2233, i32* %code, align 4, !tbaa !26
  br label %if.end.2234

if.end.2234:                                      ; preds = %if.then.2232, %cond.end.2227
  %1215 = load i32, i32* %code, align 4, !tbaa !26
  %cmp2235 = icmp slt i32 %1215, 0
  br i1 %cmp2235, label %if.then.2237, label %if.end.2241

if.then.2237:                                     ; preds = %if.end.2234
  %1216 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %procs2238 = getelementptr inbounds %struct.gs_param_list_s, %struct.gs_param_list_s* %1216, i32 0, i32 0
  %1217 = load %struct.gs_param_list_procs_s*, %struct.gs_param_list_procs_s** %procs2238, align 8, !tbaa !91
  %signal_error2239 = getelementptr inbounds %struct.gs_param_list_procs_s, %struct.gs_param_list_procs_s* %1217, i32 0, i32 7
  %1218 = load i32 (%struct.gs_param_list_s*, i8*, i32)*, i32 (%struct.gs_param_list_s*, i8*, i32)** %signal_error2239, align 8, !tbaa !93
  %1219 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %1220 = load i32, i32* %code, align 4, !tbaa !26
  %call2240 = call i32 %1218(%struct.gs_param_list_s* %1219, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.42, i32 0, i32 0), i32 %1220) #5
  br label %if.end.2241

if.end.2241:                                      ; preds = %if.then.2237, %if.end.2234
  %1221 = load i32, i32* %error, align 4, !tbaa !26
  %1222 = load i32, i32* %code, align 4, !tbaa !26
  %cmp2242 = icmp sgt i32 %1221, %1222
  br i1 %cmp2242, label %cond.true.2244, label %cond.false.2245

cond.true.2244:                                   ; preds = %if.end.2241
  %1223 = load i32, i32* %code, align 4, !tbaa !26
  br label %cond.end.2246

cond.false.2245:                                  ; preds = %if.end.2241
  %1224 = load i32, i32* %error, align 4, !tbaa !26
  br label %cond.end.2246

cond.end.2246:                                    ; preds = %cond.false.2245, %cond.true.2244
  %cond2247 = phi i32 [ %1223, %cond.true.2244 ], [ %1224, %cond.false.2245 ]
  store i32 %cond2247, i32* %error, align 4, !tbaa !26
  %1225 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call2248 = call i32 @param_read_null(%struct.gs_param_list_s* %1225, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.43, i32 0, i32 0)) #5
  store i32 %call2248, i32* %code, align 4, !tbaa !26
  %1226 = load i32, i32* %code, align 4, !tbaa !26
  %cmp2249 = icmp eq i32 %1226, -20
  br i1 %cmp2249, label %if.then.2251, label %if.end.2253

if.then.2251:                                     ; preds = %cond.end.2246
  %1227 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call2252 = call i32 @param_read_float_array(%struct.gs_param_list_s* %1227, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.43, i32 0, i32 0), %struct.gs_param_float_array_s* %pfa) #5
  store i32 %call2252, i32* %code, align 4, !tbaa !26
  br label %if.end.2253

if.end.2253:                                      ; preds = %if.then.2251, %cond.end.2246
  %1228 = load i32, i32* %code, align 4, !tbaa !26
  %cmp2254 = icmp slt i32 %1228, 0
  br i1 %cmp2254, label %if.then.2256, label %if.end.2260

if.then.2256:                                     ; preds = %if.end.2253
  %1229 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %procs2257 = getelementptr inbounds %struct.gs_param_list_s, %struct.gs_param_list_s* %1229, i32 0, i32 0
  %1230 = load %struct.gs_param_list_procs_s*, %struct.gs_param_list_procs_s** %procs2257, align 8, !tbaa !91
  %signal_error2258 = getelementptr inbounds %struct.gs_param_list_procs_s, %struct.gs_param_list_procs_s* %1230, i32 0, i32 7
  %1231 = load i32 (%struct.gs_param_list_s*, i8*, i32)*, i32 (%struct.gs_param_list_s*, i8*, i32)** %signal_error2258, align 8, !tbaa !93
  %1232 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %1233 = load i32, i32* %code, align 4, !tbaa !26
  %call2259 = call i32 %1231(%struct.gs_param_list_s* %1232, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.43, i32 0, i32 0), i32 %1233) #5
  br label %if.end.2260

if.end.2260:                                      ; preds = %if.then.2256, %if.end.2253
  %1234 = load i32, i32* %error, align 4, !tbaa !26
  %1235 = load i32, i32* %code, align 4, !tbaa !26
  %cmp2261 = icmp sgt i32 %1234, %1235
  br i1 %cmp2261, label %cond.true.2263, label %cond.false.2264

cond.true.2263:                                   ; preds = %if.end.2260
  %1236 = load i32, i32* %code, align 4, !tbaa !26
  br label %cond.end.2265

cond.false.2264:                                  ; preds = %if.end.2260
  %1237 = load i32, i32* %error, align 4, !tbaa !26
  br label %cond.end.2265

cond.end.2265:                                    ; preds = %cond.false.2264, %cond.true.2263
  %cond2266 = phi i32 [ %1236, %cond.true.2263 ], [ %1237, %cond.false.2264 ]
  store i32 %cond2266, i32* %error, align 4, !tbaa !26
  %1238 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call2267 = call i32 @param_read_null(%struct.gs_param_list_s* %1238, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.44, i32 0, i32 0)) #5
  store i32 %call2267, i32* %code, align 4, !tbaa !26
  %1239 = load i32, i32* %code, align 4, !tbaa !26
  %cmp2268 = icmp eq i32 %1239, -20
  br i1 %cmp2268, label %if.then.2270, label %if.end.2272

if.then.2270:                                     ; preds = %cond.end.2265
  %1240 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call2271 = call i32 @param_read_float_array(%struct.gs_param_list_s* %1240, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.44, i32 0, i32 0), %struct.gs_param_float_array_s* %pfa) #5
  store i32 %call2271, i32* %code, align 4, !tbaa !26
  br label %if.end.2272

if.end.2272:                                      ; preds = %if.then.2270, %cond.end.2265
  %1241 = load i32, i32* %code, align 4, !tbaa !26
  %cmp2273 = icmp slt i32 %1241, 0
  br i1 %cmp2273, label %if.then.2275, label %if.end.2279

if.then.2275:                                     ; preds = %if.end.2272
  %1242 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %procs2276 = getelementptr inbounds %struct.gs_param_list_s, %struct.gs_param_list_s* %1242, i32 0, i32 0
  %1243 = load %struct.gs_param_list_procs_s*, %struct.gs_param_list_procs_s** %procs2276, align 8, !tbaa !91
  %signal_error2277 = getelementptr inbounds %struct.gs_param_list_procs_s, %struct.gs_param_list_procs_s* %1243, i32 0, i32 7
  %1244 = load i32 (%struct.gs_param_list_s*, i8*, i32)*, i32 (%struct.gs_param_list_s*, i8*, i32)** %signal_error2277, align 8, !tbaa !93
  %1245 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %1246 = load i32, i32* %code, align 4, !tbaa !26
  %call2278 = call i32 %1244(%struct.gs_param_list_s* %1245, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.44, i32 0, i32 0), i32 %1246) #5
  br label %if.end.2279

if.end.2279:                                      ; preds = %if.then.2275, %if.end.2272
  %1247 = load i32, i32* %error, align 4, !tbaa !26
  %1248 = load i32, i32* %code, align 4, !tbaa !26
  %cmp2280 = icmp sgt i32 %1247, %1248
  br i1 %cmp2280, label %cond.true.2282, label %cond.false.2283

cond.true.2282:                                   ; preds = %if.end.2279
  %1249 = load i32, i32* %code, align 4, !tbaa !26
  br label %cond.end.2284

cond.false.2283:                                  ; preds = %if.end.2279
  %1250 = load i32, i32* %error, align 4, !tbaa !26
  br label %cond.end.2284

cond.end.2284:                                    ; preds = %cond.false.2283, %cond.true.2282
  %cond2285 = phi i32 [ %1249, %cond.true.2282 ], [ %1250, %cond.false.2283 ]
  store i32 %cond2285, i32* %error, align 4, !tbaa !26
  %1251 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call2286 = call i32 @param_read_null(%struct.gs_param_list_s* %1251, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.45, i32 0, i32 0)) #5
  store i32 %call2286, i32* %code, align 4, !tbaa !26
  %1252 = load i32, i32* %code, align 4, !tbaa !26
  %cmp2287 = icmp eq i32 %1252, -20
  br i1 %cmp2287, label %if.then.2289, label %if.end.2291

if.then.2289:                                     ; preds = %cond.end.2284
  %1253 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call2290 = call i32 @param_read_float_array(%struct.gs_param_list_s* %1253, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.45, i32 0, i32 0), %struct.gs_param_float_array_s* %pfa) #5
  store i32 %call2290, i32* %code, align 4, !tbaa !26
  br label %if.end.2291

if.end.2291:                                      ; preds = %if.then.2289, %cond.end.2284
  %1254 = load i32, i32* %code, align 4, !tbaa !26
  %cmp2292 = icmp slt i32 %1254, 0
  br i1 %cmp2292, label %if.then.2294, label %if.end.2298

if.then.2294:                                     ; preds = %if.end.2291
  %1255 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %procs2295 = getelementptr inbounds %struct.gs_param_list_s, %struct.gs_param_list_s* %1255, i32 0, i32 0
  %1256 = load %struct.gs_param_list_procs_s*, %struct.gs_param_list_procs_s** %procs2295, align 8, !tbaa !91
  %signal_error2296 = getelementptr inbounds %struct.gs_param_list_procs_s, %struct.gs_param_list_procs_s* %1256, i32 0, i32 7
  %1257 = load i32 (%struct.gs_param_list_s*, i8*, i32)*, i32 (%struct.gs_param_list_s*, i8*, i32)** %signal_error2296, align 8, !tbaa !93
  %1258 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %1259 = load i32, i32* %code, align 4, !tbaa !26
  %call2297 = call i32 %1257(%struct.gs_param_list_s* %1258, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.45, i32 0, i32 0), i32 %1259) #5
  br label %if.end.2298

if.end.2298:                                      ; preds = %if.then.2294, %if.end.2291
  %1260 = load i32, i32* %error, align 4, !tbaa !26
  %1261 = load i32, i32* %code, align 4, !tbaa !26
  %cmp2299 = icmp sgt i32 %1260, %1261
  br i1 %cmp2299, label %cond.true.2301, label %cond.false.2302

cond.true.2301:                                   ; preds = %if.end.2298
  %1262 = load i32, i32* %code, align 4, !tbaa !26
  br label %cond.end.2303

cond.false.2302:                                  ; preds = %if.end.2298
  %1263 = load i32, i32* %error, align 4, !tbaa !26
  br label %cond.end.2303

cond.end.2303:                                    ; preds = %cond.false.2302, %cond.true.2301
  %cond2304 = phi i32 [ %1262, %cond.true.2301 ], [ %1263, %cond.false.2302 ]
  store i32 %cond2304, i32* %error, align 4, !tbaa !26
  %1264 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call2305 = call i32 @param_read_null(%struct.gs_param_list_s* %1264, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.46, i32 0, i32 0)) #5
  store i32 %call2305, i32* %code, align 4, !tbaa !26
  %1265 = load i32, i32* %code, align 4, !tbaa !26
  %cmp2306 = icmp eq i32 %1265, -20
  br i1 %cmp2306, label %if.then.2308, label %if.end.2310

if.then.2308:                                     ; preds = %cond.end.2303
  %1266 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call2309 = call i32 @param_read_float_array(%struct.gs_param_list_s* %1266, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.46, i32 0, i32 0), %struct.gs_param_float_array_s* %pfa) #5
  store i32 %call2309, i32* %code, align 4, !tbaa !26
  br label %if.end.2310

if.end.2310:                                      ; preds = %if.then.2308, %cond.end.2303
  %1267 = load i32, i32* %code, align 4, !tbaa !26
  %cmp2311 = icmp slt i32 %1267, 0
  br i1 %cmp2311, label %if.then.2313, label %if.end.2317

if.then.2313:                                     ; preds = %if.end.2310
  %1268 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %procs2314 = getelementptr inbounds %struct.gs_param_list_s, %struct.gs_param_list_s* %1268, i32 0, i32 0
  %1269 = load %struct.gs_param_list_procs_s*, %struct.gs_param_list_procs_s** %procs2314, align 8, !tbaa !91
  %signal_error2315 = getelementptr inbounds %struct.gs_param_list_procs_s, %struct.gs_param_list_procs_s* %1269, i32 0, i32 7
  %1270 = load i32 (%struct.gs_param_list_s*, i8*, i32)*, i32 (%struct.gs_param_list_s*, i8*, i32)** %signal_error2315, align 8, !tbaa !93
  %1271 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %1272 = load i32, i32* %code, align 4, !tbaa !26
  %call2316 = call i32 %1270(%struct.gs_param_list_s* %1271, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.46, i32 0, i32 0), i32 %1272) #5
  br label %if.end.2317

if.end.2317:                                      ; preds = %if.then.2313, %if.end.2310
  %1273 = load i32, i32* %error, align 4, !tbaa !26
  %1274 = load i32, i32* %code, align 4, !tbaa !26
  %cmp2318 = icmp sgt i32 %1273, %1274
  br i1 %cmp2318, label %cond.true.2320, label %cond.false.2321

cond.true.2320:                                   ; preds = %if.end.2317
  %1275 = load i32, i32* %code, align 4, !tbaa !26
  br label %cond.end.2322

cond.false.2321:                                  ; preds = %if.end.2317
  %1276 = load i32, i32* %error, align 4, !tbaa !26
  br label %cond.end.2322

cond.end.2322:                                    ; preds = %cond.false.2321, %cond.true.2320
  %cond2323 = phi i32 [ %1275, %cond.true.2320 ], [ %1276, %cond.false.2321 ]
  store i32 %cond2323, i32* %error, align 4, !tbaa !26
  br label %if.end.2324

if.end.2324:                                      ; preds = %cond.end.2322, %cond.end.1823
  br label %if.end.2325

if.end.2325:                                      ; preds = %if.end.2324, %cond.end.1377
  %1277 = load i32, i32* %error, align 4, !tbaa !26
  %cmp2326 = icmp eq i32 %1277, 0
  br i1 %cmp2326, label %if.then.2328, label %if.end.2412

if.then.2328:                                     ; preds = %if.end.2325
  %1278 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2329 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1278, i32 0, i32 68
  %bits2330 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2329, i32 0, i32 1
  %1279 = load i32, i32* %bits2330, align 4, !tbaa !44
  %conv2331 = sext i32 %1279 to i64
  %cmp2332 = icmp ult i64 %conv2331, 16
  br i1 %cmp2332, label %cond.true.2334, label %cond.false.2338

cond.true.2334:                                   ; preds = %if.then.2328
  %1280 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2335 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1280, i32 0, i32 68
  %bits2336 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2335, i32 0, i32 1
  %1281 = load i32, i32* %bits2336, align 4, !tbaa !44
  %shl = shl i32 1, %1281
  %sub2337 = sub nsw i32 %shl, 1
  br label %cond.end.2339

cond.false.2338:                                  ; preds = %if.then.2328
  br label %cond.end.2339

cond.end.2339:                                    ; preds = %cond.false.2338, %cond.true.2334
  %cond2340 = phi i32 [ %sub2337, %cond.true.2334 ], [ 65535, %cond.false.2338 ]
  %1282 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %color_info2341 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1282, i32 0, i32 11
  %max_gray = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info2341, i32 0, i32 5
  store i32 %cond2340, i32* %max_gray, align 4, !tbaa !97
  %1283 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2342 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1283, i32 0, i32 68
  %dither2343 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2342, i32 0, i32 2
  %1284 = load %struct.stc_dither_s*, %struct.stc_dither_s** %dither2343, align 8, !tbaa !41
  %flags2344 = getelementptr inbounds %struct.stc_dither_s, %struct.stc_dither_s* %1284, i32 0, i32 2
  %1285 = load i32, i32* %flags2344, align 4, !tbaa !42
  %and2345 = and i32 %1285, 24
  %cmp2346 = icmp ne i32 %and2345, 24
  br i1 %cmp2346, label %land.lhs.true.2348, label %if.end.2377

land.lhs.true.2348:                               ; preds = %cond.end.2339
  %1286 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2349 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1286, i32 0, i32 68
  %dither2350 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2349, i32 0, i32 2
  %1287 = load %struct.stc_dither_s*, %struct.stc_dither_s** %dither2350, align 8, !tbaa !41
  %minmax2351 = getelementptr inbounds %struct.stc_dither_s, %struct.stc_dither_s* %1287, i32 0, i32 4
  %arrayidx2352 = getelementptr inbounds [2 x double], [2 x double]* %minmax2351, i32 0, i64 1
  %1288 = load double, double* %arrayidx2352, align 8, !tbaa !55
  %1289 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2353 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1289, i32 0, i32 68
  %dither2354 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2353, i32 0, i32 2
  %1290 = load %struct.stc_dither_s*, %struct.stc_dither_s** %dither2354, align 8, !tbaa !41
  %minmax2355 = getelementptr inbounds %struct.stc_dither_s, %struct.stc_dither_s* %1290, i32 0, i32 4
  %arrayidx2356 = getelementptr inbounds [2 x double], [2 x double]* %minmax2355, i32 0, i64 0
  %1291 = load double, double* %arrayidx2356, align 8, !tbaa !55
  %sub2357 = fsub double %1288, %1291
  %1292 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %color_info2358 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1292, i32 0, i32 11
  %max_gray2359 = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info2358, i32 0, i32 5
  %1293 = load i32, i32* %max_gray2359, align 4, !tbaa !97
  %conv2360 = uitofp i32 %1293 to double
  %cmp2361 = fcmp olt double %sub2357, %conv2360
  br i1 %cmp2361, label %if.then.2363, label %if.end.2377

if.then.2363:                                     ; preds = %land.lhs.true.2348
  %1294 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2364 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1294, i32 0, i32 68
  %dither2365 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2364, i32 0, i32 2
  %1295 = load %struct.stc_dither_s*, %struct.stc_dither_s** %dither2365, align 8, !tbaa !41
  %minmax2366 = getelementptr inbounds %struct.stc_dither_s, %struct.stc_dither_s* %1295, i32 0, i32 4
  %arrayidx2367 = getelementptr inbounds [2 x double], [2 x double]* %minmax2366, i32 0, i64 1
  %1296 = load double, double* %arrayidx2367, align 8, !tbaa !55
  %1297 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2368 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1297, i32 0, i32 68
  %dither2369 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2368, i32 0, i32 2
  %1298 = load %struct.stc_dither_s*, %struct.stc_dither_s** %dither2369, align 8, !tbaa !41
  %minmax2370 = getelementptr inbounds %struct.stc_dither_s, %struct.stc_dither_s* %1298, i32 0, i32 4
  %arrayidx2371 = getelementptr inbounds [2 x double], [2 x double]* %minmax2370, i32 0, i64 0
  %1299 = load double, double* %arrayidx2371, align 8, !tbaa !55
  %sub2372 = fsub double %1296, %1299
  %add = fadd double %sub2372, 5.000000e-01
  %conv2373 = fptoui double %add to i16
  %conv2374 = zext i16 %conv2373 to i32
  %1300 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %color_info2375 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1300, i32 0, i32 11
  %max_gray2376 = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info2375, i32 0, i32 5
  store i32 %conv2374, i32* %max_gray2376, align 4, !tbaa !97
  br label %if.end.2377

if.end.2377:                                      ; preds = %if.then.2363, %land.lhs.true.2348, %cond.end.2339
  %1301 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %color_info2378 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1301, i32 0, i32 11
  %num_components2379 = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info2378, i32 0, i32 1
  %1302 = load i32, i32* %num_components2379, align 4, !tbaa !40
  %cmp2380 = icmp slt i32 %1302, 3
  br i1 %cmp2380, label %cond.true.2382, label %cond.false.2383

cond.true.2382:                                   ; preds = %if.end.2377
  br label %cond.end.2386

cond.false.2383:                                  ; preds = %if.end.2377
  %1303 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %color_info2384 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1303, i32 0, i32 11
  %max_gray2385 = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info2384, i32 0, i32 5
  %1304 = load i32, i32* %max_gray2385, align 4, !tbaa !97
  br label %cond.end.2386

cond.end.2386:                                    ; preds = %cond.false.2383, %cond.true.2382
  %cond2387 = phi i32 [ 0, %cond.true.2382 ], [ %1304, %cond.false.2383 ]
  %1305 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %color_info2388 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1305, i32 0, i32 11
  %max_color = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info2388, i32 0, i32 6
  store i32 %cond2387, i32* %max_color, align 4, !tbaa !98
  %1306 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %color_info2389 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1306, i32 0, i32 11
  %max_gray2390 = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info2389, i32 0, i32 5
  %1307 = load i32, i32* %max_gray2390, align 4, !tbaa !97
  %cmp2391 = icmp ult i32 %1307, 65535
  br i1 %cmp2391, label %cond.true.2393, label %cond.false.2397

cond.true.2393:                                   ; preds = %cond.end.2386
  %1308 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %color_info2394 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1308, i32 0, i32 11
  %max_gray2395 = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info2394, i32 0, i32 5
  %1309 = load i32, i32* %max_gray2395, align 4, !tbaa !97
  %add2396 = add i32 %1309, 1
  br label %cond.end.2398

cond.false.2397:                                  ; preds = %cond.end.2386
  br label %cond.end.2398

cond.end.2398:                                    ; preds = %cond.false.2397, %cond.true.2393
  %cond2399 = phi i32 [ %add2396, %cond.true.2393 ], [ 65535, %cond.false.2397 ]
  %1310 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %color_info2400 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1310, i32 0, i32 11
  %dither_grays = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info2400, i32 0, i32 7
  store i32 %cond2399, i32* %dither_grays, align 4, !tbaa !99
  %1311 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %color_info2401 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1311, i32 0, i32 11
  %num_components2402 = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info2401, i32 0, i32 1
  %1312 = load i32, i32* %num_components2402, align 4, !tbaa !40
  %cmp2403 = icmp slt i32 %1312, 3
  br i1 %cmp2403, label %cond.true.2405, label %cond.false.2406

cond.true.2405:                                   ; preds = %cond.end.2398
  br label %cond.end.2409

cond.false.2406:                                  ; preds = %cond.end.2398
  %1313 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %color_info2407 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1313, i32 0, i32 11
  %dither_grays2408 = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info2407, i32 0, i32 7
  %1314 = load i32, i32* %dither_grays2408, align 4, !tbaa !99
  br label %cond.end.2409

cond.end.2409:                                    ; preds = %cond.false.2406, %cond.true.2405
  %cond2410 = phi i32 [ 0, %cond.true.2405 ], [ %1314, %cond.false.2406 ]
  %1315 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %color_info2411 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1315, i32 0, i32 11
  %dither_colors = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info2411, i32 0, i32 8
  store i32 %cond2410, i32* %dither_colors, align 4, !tbaa !100
  br label %if.end.2412

if.end.2412:                                      ; preds = %cond.end.2409, %if.end.2325
  %1316 = load %struct.gx_device_s*, %struct.gx_device_s** %pdev.addr, align 8, !tbaa !1
  %1317 = load %struct.gs_param_list_s*, %struct.gs_param_list_s** %plist.addr, align 8, !tbaa !1
  %call2413 = call i32 @gdev_prn_put_params(%struct.gx_device_s* %1316, %struct.gs_param_list_s* %1317) #5
  store i32 %call2413, i32* %code, align 4, !tbaa !26
  %1318 = load i32, i32* %error, align 4, !tbaa !26
  %1319 = load i32, i32* %code, align 4, !tbaa !26
  %cmp2414 = icmp sgt i32 %1318, %1319
  br i1 %cmp2414, label %cond.true.2416, label %cond.false.2417

cond.true.2416:                                   ; preds = %if.end.2412
  %1320 = load i32, i32* %code, align 4, !tbaa !26
  br label %cond.end.2418

cond.false.2417:                                  ; preds = %if.end.2412
  %1321 = load i32, i32* %error, align 4, !tbaa !26
  br label %cond.end.2418

cond.end.2418:                                    ; preds = %cond.false.2417, %cond.true.2416
  %cond2419 = phi i32 [ %1320, %cond.true.2416 ], [ %1321, %cond.false.2417 ]
  store i32 %cond2419, i32* %error, align 4, !tbaa !26
  %1322 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %color_info2420 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1322, i32 0, i32 11
  %depth2421 = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info2420, i32 0, i32 3
  %1323 = load i16, i16* %depth2421, align 2, !tbaa !54
  %conv2422 = zext i16 %1323 to i32
  %cmp2423 = icmp eq i32 %conv2422, 3
  br i1 %cmp2423, label %if.then.2425, label %if.else.2428

if.then.2425:                                     ; preds = %cond.end.2418
  %1324 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %color_info2426 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1324, i32 0, i32 11
  %depth2427 = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info2426, i32 0, i32 3
  store i16 4, i16* %depth2427, align 2, !tbaa !54
  br label %if.end.2444

if.else.2428:                                     ; preds = %cond.end.2418
  %1325 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %color_info2429 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1325, i32 0, i32 11
  %depth2430 = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info2429, i32 0, i32 3
  %1326 = load i16, i16* %depth2430, align 2, !tbaa !54
  %conv2431 = zext i16 %1326 to i32
  %cmp2432 = icmp sgt i32 %conv2431, 4
  br i1 %cmp2432, label %if.then.2434, label %if.end.2443

if.then.2434:                                     ; preds = %if.else.2428
  %1327 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %color_info2435 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1327, i32 0, i32 11
  %depth2436 = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info2435, i32 0, i32 3
  %1328 = load i16, i16* %depth2436, align 2, !tbaa !54
  %conv2437 = zext i16 %1328 to i32
  %add2438 = add nsw i32 %conv2437, 7
  %and2439 = and i32 %add2438, -8
  %conv2440 = trunc i32 %and2439 to i16
  %1329 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %color_info2441 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1329, i32 0, i32 11
  %depth2442 = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info2441, i32 0, i32 3
  store i16 %conv2440, i16* %depth2442, align 2, !tbaa !54
  br label %if.end.2443

if.end.2443:                                      ; preds = %if.then.2434, %if.else.2428
  br label %if.end.2444

if.end.2444:                                      ; preds = %if.end.2443, %if.then.2425
  %1330 = load i32, i32* %error, align 4, !tbaa !26
  %cmp2445 = icmp eq i32 %1330, 0
  br i1 %cmp2445, label %if.then.2447, label %if.end.3004

if.then.2447:                                     ; preds = %if.end.2444
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond.2448

for.cond.2448:                                    ; preds = %for.inc.2649, %if.then.2447
  %1331 = load i32, i32* %i, align 4, !tbaa !26
  %1332 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %color_info2449 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1332, i32 0, i32 11
  %num_components2450 = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info2449, i32 0, i32 1
  %1333 = load i32, i32* %num_components2450, align 4, !tbaa !40
  %cmp2451 = icmp slt i32 %1331, %1333
  br i1 %cmp2451, label %for.body.2453, label %for.end.2651

for.body.2453:                                    ; preds = %for.cond.2448
  %1334 = bitcast i32* %j to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1334) #2
  %1335 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom2454 = sext i32 %1335 to i64
  %1336 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2455 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1336, i32 0, i32 68
  %extv2456 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2455, i32 0, i32 7
  %arrayidx2457 = getelementptr inbounds [4 x float*], [4 x float*]* %extv2456, i32 0, i64 %idxprom2454
  %1337 = load float*, float** %arrayidx2457, align 8, !tbaa !1
  %1338 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom2458 = sext i32 %1338 to i64
  %extv2459 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %oldstc, i32 0, i32 7
  %arrayidx2460 = getelementptr inbounds [4 x float*], [4 x float*]* %extv2459, i32 0, i64 %idxprom2458
  %1339 = load float*, float** %arrayidx2460, align 8, !tbaa !1
  %cmp2461 = icmp ne float* %1337, %1339
  br i1 %cmp2461, label %land.lhs.true.2463, label %if.end.2549

land.lhs.true.2463:                               ; preds = %for.body.2453
  %1340 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom2464 = sext i32 %1340 to i64
  %1341 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2465 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1341, i32 0, i32 68
  %extv2466 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2465, i32 0, i32 7
  %arrayidx2467 = getelementptr inbounds [4 x float*], [4 x float*]* %extv2466, i32 0, i64 %idxprom2464
  %1342 = load float*, float** %arrayidx2467, align 8, !tbaa !1
  %cmp2468 = icmp ne float* %1342, getelementptr inbounds ([2 x float], [2 x float]* @defext, i32 0, i32 0)
  br i1 %cmp2468, label %if.then.2470, label %if.end.2549

if.then.2470:                                     ; preds = %land.lhs.true.2463
  store i32 0, i32* %j, align 4, !tbaa !26
  br label %for.cond.2471

for.cond.2471:                                    ; preds = %for.inc.2505, %if.then.2470
  %1343 = load i32, i32* %j, align 4, !tbaa !26
  %1344 = load i32, i32* %i, align 4, !tbaa !26
  %cmp2472 = icmp slt i32 %1343, %1344
  br i1 %cmp2472, label %for.body.2474, label %for.end.2507

for.body.2474:                                    ; preds = %for.cond.2471
  %1345 = load i32, i32* %j, align 4, !tbaa !26
  %idxprom2475 = sext i32 %1345 to i64
  %1346 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2476 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1346, i32 0, i32 68
  %sizv2477 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2476, i32 0, i32 8
  %arrayidx2478 = getelementptr inbounds [4 x i32], [4 x i32]* %sizv2477, i32 0, i64 %idxprom2475
  %1347 = load i32, i32* %arrayidx2478, align 4, !tbaa !26
  %1348 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom2479 = sext i32 %1348 to i64
  %1349 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2480 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1349, i32 0, i32 68
  %sizv2481 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2480, i32 0, i32 8
  %arrayidx2482 = getelementptr inbounds [4 x i32], [4 x i32]* %sizv2481, i32 0, i64 %idxprom2479
  %1350 = load i32, i32* %arrayidx2482, align 4, !tbaa !26
  %cmp2483 = icmp eq i32 %1347, %1350
  br i1 %cmp2483, label %land.lhs.true.2485, label %if.end.2504

land.lhs.true.2485:                               ; preds = %for.body.2474
  %1351 = load i32, i32* %j, align 4, !tbaa !26
  %idxprom2486 = sext i32 %1351 to i64
  %1352 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2487 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1352, i32 0, i32 68
  %extv2488 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2487, i32 0, i32 7
  %arrayidx2489 = getelementptr inbounds [4 x float*], [4 x float*]* %extv2488, i32 0, i64 %idxprom2486
  %1353 = load float*, float** %arrayidx2489, align 8, !tbaa !1
  %1354 = bitcast float* %1353 to i8*
  %1355 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom2490 = sext i32 %1355 to i64
  %1356 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2491 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1356, i32 0, i32 68
  %extv2492 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2491, i32 0, i32 7
  %arrayidx2493 = getelementptr inbounds [4 x float*], [4 x float*]* %extv2492, i32 0, i64 %idxprom2490
  %1357 = load float*, float** %arrayidx2493, align 8, !tbaa !1
  %1358 = bitcast float* %1357 to i8*
  %1359 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom2494 = sext i32 %1359 to i64
  %1360 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2495 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1360, i32 0, i32 68
  %sizv2496 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2495, i32 0, i32 8
  %arrayidx2497 = getelementptr inbounds [4 x i32], [4 x i32]* %sizv2496, i32 0, i64 %idxprom2494
  %1361 = load i32, i32* %arrayidx2497, align 4, !tbaa !26
  %conv2498 = zext i32 %1361 to i64
  %mul2499 = mul i64 %conv2498, 4
  %call2500 = call i32 @memcmp(i8* %1354, i8* %1358, i64 %mul2499) #7
  %cmp2501 = icmp eq i32 %call2500, 0
  br i1 %cmp2501, label %if.then.2503, label %if.end.2504

if.then.2503:                                     ; preds = %land.lhs.true.2485
  br label %for.end.2507

if.end.2504:                                      ; preds = %land.lhs.true.2485, %for.body.2474
  br label %for.inc.2505

for.inc.2505:                                     ; preds = %if.end.2504
  %1362 = load i32, i32* %j, align 4, !tbaa !26
  %inc2506 = add nsw i32 %1362, 1
  store i32 %inc2506, i32* %j, align 4, !tbaa !26
  br label %for.cond.2471

for.end.2507:                                     ; preds = %if.then.2503, %for.cond.2471
  %1363 = load i32, i32* %j, align 4, !tbaa !26
  %1364 = load i32, i32* %i, align 4, !tbaa !26
  %cmp2508 = icmp slt i32 %1363, %1364
  br i1 %cmp2508, label %if.then.2510, label %if.else.2519

if.then.2510:                                     ; preds = %for.end.2507
  %1365 = load i32, i32* %j, align 4, !tbaa !26
  %idxprom2511 = sext i32 %1365 to i64
  %1366 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2512 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1366, i32 0, i32 68
  %extv2513 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2512, i32 0, i32 7
  %arrayidx2514 = getelementptr inbounds [4 x float*], [4 x float*]* %extv2513, i32 0, i64 %idxprom2511
  %1367 = load float*, float** %arrayidx2514, align 8, !tbaa !1
  %1368 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom2515 = sext i32 %1368 to i64
  %1369 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2516 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1369, i32 0, i32 68
  %extv2517 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2516, i32 0, i32 7
  %arrayidx2518 = getelementptr inbounds [4 x float*], [4 x float*]* %extv2517, i32 0, i64 %idxprom2515
  store float* %1367, float** %arrayidx2518, align 8, !tbaa !1
  br label %if.end.2548

if.else.2519:                                     ; preds = %for.end.2507
  %1370 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1370, i32 0, i32 3
  %1371 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory, align 8, !tbaa !29
  %non_gc_memory = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %1371, i32 0, i32 3
  %1372 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory, align 8, !tbaa !30
  %procs2520 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %1372, i32 0, i32 1
  %alloc_byte_array = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs2520, i32 0, i32 10
  %1373 = load i8* (%struct.gs_memory_s*, i32, i32, i8*)*, i8* (%struct.gs_memory_s*, i32, i32, i8*)** %alloc_byte_array, align 8, !tbaa !33
  %1374 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %memory2521 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1374, i32 0, i32 3
  %1375 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory2521, align 8, !tbaa !29
  %non_gc_memory2522 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %1375, i32 0, i32 3
  %1376 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory2522, align 8, !tbaa !30
  %1377 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom2523 = sext i32 %1377 to i64
  %1378 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2524 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1378, i32 0, i32 68
  %sizv2525 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2524, i32 0, i32 8
  %arrayidx2526 = getelementptr inbounds [4 x i32], [4 x i32]* %sizv2525, i32 0, i64 %idxprom2523
  %1379 = load i32, i32* %arrayidx2526, align 4, !tbaa !26
  %call2527 = call i8* %1373(%struct.gs_memory_s* %1376, i32 %1379, i32 4, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.54, i32 0, i32 0)) #5
  %1380 = bitcast i8* %call2527 to float*
  store float* %1380, float** %fp, align 8, !tbaa !1
  %1381 = load float*, float** %fp, align 8, !tbaa !1
  %cmp2528 = icmp ne float* %1381, null
  br i1 %cmp2528, label %if.then.2530, label %if.else.2542

if.then.2530:                                     ; preds = %if.else.2519
  %1382 = load float*, float** %fp, align 8, !tbaa !1
  %1383 = bitcast float* %1382 to i8*
  %1384 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom2531 = sext i32 %1384 to i64
  %1385 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2532 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1385, i32 0, i32 68
  %extv2533 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2532, i32 0, i32 7
  %arrayidx2534 = getelementptr inbounds [4 x float*], [4 x float*]* %extv2533, i32 0, i64 %idxprom2531
  %1386 = load float*, float** %arrayidx2534, align 8, !tbaa !1
  %1387 = bitcast float* %1386 to i8*
  %1388 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom2535 = sext i32 %1388 to i64
  %1389 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2536 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1389, i32 0, i32 68
  %sizv2537 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2536, i32 0, i32 8
  %arrayidx2538 = getelementptr inbounds [4 x i32], [4 x i32]* %sizv2537, i32 0, i64 %idxprom2535
  %1390 = load i32, i32* %arrayidx2538, align 4, !tbaa !26
  %conv2539 = zext i32 %1390 to i64
  %mul2540 = mul i64 %conv2539, 4
  %call2541 = call i8* @memcpy(i8* %1383, i8* %1387, i64 %mul2540) #6
  br label %if.end.2543

if.else.2542:                                     ; preds = %if.else.2519
  store i32 -25, i32* %code, align 4, !tbaa !26
  br label %if.end.2543

if.end.2543:                                      ; preds = %if.else.2542, %if.then.2530
  %1391 = load float*, float** %fp, align 8, !tbaa !1
  %1392 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom2544 = sext i32 %1392 to i64
  %1393 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2545 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1393, i32 0, i32 68
  %extv2546 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2545, i32 0, i32 7
  %arrayidx2547 = getelementptr inbounds [4 x float*], [4 x float*]* %extv2546, i32 0, i64 %idxprom2544
  store float* %1391, float** %arrayidx2547, align 8, !tbaa !1
  br label %if.end.2548

if.end.2548:                                      ; preds = %if.end.2543, %if.then.2510
  br label %if.end.2549

if.end.2549:                                      ; preds = %if.end.2548, %land.lhs.true.2463, %for.body.2453
  %1394 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom2550 = sext i32 %1394 to i64
  %1395 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2551 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1395, i32 0, i32 68
  %sizc2552 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2551, i32 0, i32 5
  %arrayidx2553 = getelementptr inbounds [4 x i32], [4 x i32]* %sizc2552, i32 0, i64 %idxprom2550
  %1396 = load i32, i32* %arrayidx2553, align 4, !tbaa !26
  %cmp2554 = icmp ugt i32 %1396, 1
  br i1 %cmp2554, label %land.lhs.true.2556, label %if.end.2648

land.lhs.true.2556:                               ; preds = %if.end.2549
  %1397 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom2557 = sext i32 %1397 to i64
  %1398 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2558 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1398, i32 0, i32 68
  %extc2559 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2558, i32 0, i32 4
  %arrayidx2560 = getelementptr inbounds [4 x float*], [4 x float*]* %extc2559, i32 0, i64 %idxprom2557
  %1399 = load float*, float** %arrayidx2560, align 8, !tbaa !1
  %1400 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom2561 = sext i32 %1400 to i64
  %extc2562 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %oldstc, i32 0, i32 4
  %arrayidx2563 = getelementptr inbounds [4 x float*], [4 x float*]* %extc2562, i32 0, i64 %idxprom2561
  %1401 = load float*, float** %arrayidx2563, align 8, !tbaa !1
  %cmp2564 = icmp ne float* %1399, %1401
  br i1 %cmp2564, label %if.then.2566, label %if.end.2648

if.then.2566:                                     ; preds = %land.lhs.true.2556
  store i32 0, i32* %j, align 4, !tbaa !26
  br label %for.cond.2567

for.cond.2567:                                    ; preds = %for.inc.2601, %if.then.2566
  %1402 = load i32, i32* %j, align 4, !tbaa !26
  %1403 = load i32, i32* %i, align 4, !tbaa !26
  %cmp2568 = icmp slt i32 %1402, %1403
  br i1 %cmp2568, label %for.body.2570, label %for.end.2603

for.body.2570:                                    ; preds = %for.cond.2567
  %1404 = load i32, i32* %j, align 4, !tbaa !26
  %idxprom2571 = sext i32 %1404 to i64
  %1405 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2572 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1405, i32 0, i32 68
  %sizc2573 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2572, i32 0, i32 5
  %arrayidx2574 = getelementptr inbounds [4 x i32], [4 x i32]* %sizc2573, i32 0, i64 %idxprom2571
  %1406 = load i32, i32* %arrayidx2574, align 4, !tbaa !26
  %1407 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom2575 = sext i32 %1407 to i64
  %1408 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2576 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1408, i32 0, i32 68
  %sizc2577 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2576, i32 0, i32 5
  %arrayidx2578 = getelementptr inbounds [4 x i32], [4 x i32]* %sizc2577, i32 0, i64 %idxprom2575
  %1409 = load i32, i32* %arrayidx2578, align 4, !tbaa !26
  %cmp2579 = icmp eq i32 %1406, %1409
  br i1 %cmp2579, label %land.lhs.true.2581, label %if.end.2600

land.lhs.true.2581:                               ; preds = %for.body.2570
  %1410 = load i32, i32* %j, align 4, !tbaa !26
  %idxprom2582 = sext i32 %1410 to i64
  %1411 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2583 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1411, i32 0, i32 68
  %extc2584 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2583, i32 0, i32 4
  %arrayidx2585 = getelementptr inbounds [4 x float*], [4 x float*]* %extc2584, i32 0, i64 %idxprom2582
  %1412 = load float*, float** %arrayidx2585, align 8, !tbaa !1
  %1413 = bitcast float* %1412 to i8*
  %1414 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom2586 = sext i32 %1414 to i64
  %1415 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2587 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1415, i32 0, i32 68
  %extc2588 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2587, i32 0, i32 4
  %arrayidx2589 = getelementptr inbounds [4 x float*], [4 x float*]* %extc2588, i32 0, i64 %idxprom2586
  %1416 = load float*, float** %arrayidx2589, align 8, !tbaa !1
  %1417 = bitcast float* %1416 to i8*
  %1418 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom2590 = sext i32 %1418 to i64
  %1419 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2591 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1419, i32 0, i32 68
  %sizc2592 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2591, i32 0, i32 5
  %arrayidx2593 = getelementptr inbounds [4 x i32], [4 x i32]* %sizc2592, i32 0, i64 %idxprom2590
  %1420 = load i32, i32* %arrayidx2593, align 4, !tbaa !26
  %conv2594 = zext i32 %1420 to i64
  %mul2595 = mul i64 %conv2594, 4
  %call2596 = call i32 @memcmp(i8* %1413, i8* %1417, i64 %mul2595) #7
  %cmp2597 = icmp eq i32 %call2596, 0
  br i1 %cmp2597, label %if.then.2599, label %if.end.2600

if.then.2599:                                     ; preds = %land.lhs.true.2581
  br label %for.end.2603

if.end.2600:                                      ; preds = %land.lhs.true.2581, %for.body.2570
  br label %for.inc.2601

for.inc.2601:                                     ; preds = %if.end.2600
  %1421 = load i32, i32* %j, align 4, !tbaa !26
  %inc2602 = add nsw i32 %1421, 1
  store i32 %inc2602, i32* %j, align 4, !tbaa !26
  br label %for.cond.2567

for.end.2603:                                     ; preds = %if.then.2599, %for.cond.2567
  %1422 = load i32, i32* %j, align 4, !tbaa !26
  %1423 = load i32, i32* %i, align 4, !tbaa !26
  %cmp2604 = icmp slt i32 %1422, %1423
  br i1 %cmp2604, label %if.then.2606, label %if.else.2615

if.then.2606:                                     ; preds = %for.end.2603
  %1424 = load i32, i32* %j, align 4, !tbaa !26
  %idxprom2607 = sext i32 %1424 to i64
  %1425 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2608 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1425, i32 0, i32 68
  %extc2609 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2608, i32 0, i32 4
  %arrayidx2610 = getelementptr inbounds [4 x float*], [4 x float*]* %extc2609, i32 0, i64 %idxprom2607
  %1426 = load float*, float** %arrayidx2610, align 8, !tbaa !1
  %1427 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom2611 = sext i32 %1427 to i64
  %1428 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2612 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1428, i32 0, i32 68
  %extc2613 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2612, i32 0, i32 4
  %arrayidx2614 = getelementptr inbounds [4 x float*], [4 x float*]* %extc2613, i32 0, i64 %idxprom2611
  store float* %1426, float** %arrayidx2614, align 8, !tbaa !1
  br label %if.end.2647

if.else.2615:                                     ; preds = %for.end.2603
  %1429 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %memory2616 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1429, i32 0, i32 3
  %1430 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory2616, align 8, !tbaa !29
  %non_gc_memory2617 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %1430, i32 0, i32 3
  %1431 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory2617, align 8, !tbaa !30
  %procs2618 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %1431, i32 0, i32 1
  %alloc_byte_array2619 = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs2618, i32 0, i32 10
  %1432 = load i8* (%struct.gs_memory_s*, i32, i32, i8*)*, i8* (%struct.gs_memory_s*, i32, i32, i8*)** %alloc_byte_array2619, align 8, !tbaa !33
  %1433 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %memory2620 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1433, i32 0, i32 3
  %1434 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory2620, align 8, !tbaa !29
  %non_gc_memory2621 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %1434, i32 0, i32 3
  %1435 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory2621, align 8, !tbaa !30
  %1436 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom2622 = sext i32 %1436 to i64
  %1437 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2623 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1437, i32 0, i32 68
  %sizc2624 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2623, i32 0, i32 5
  %arrayidx2625 = getelementptr inbounds [4 x i32], [4 x i32]* %sizc2624, i32 0, i64 %idxprom2622
  %1438 = load i32, i32* %arrayidx2625, align 4, !tbaa !26
  %call2626 = call i8* %1432(%struct.gs_memory_s* %1435, i32 %1438, i32 4, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.54, i32 0, i32 0)) #5
  %1439 = bitcast i8* %call2626 to float*
  store float* %1439, float** %fp, align 8, !tbaa !1
  %1440 = load float*, float** %fp, align 8, !tbaa !1
  %cmp2627 = icmp ne float* %1440, null
  br i1 %cmp2627, label %if.then.2629, label %if.else.2641

if.then.2629:                                     ; preds = %if.else.2615
  %1441 = load float*, float** %fp, align 8, !tbaa !1
  %1442 = bitcast float* %1441 to i8*
  %1443 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom2630 = sext i32 %1443 to i64
  %1444 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2631 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1444, i32 0, i32 68
  %extc2632 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2631, i32 0, i32 4
  %arrayidx2633 = getelementptr inbounds [4 x float*], [4 x float*]* %extc2632, i32 0, i64 %idxprom2630
  %1445 = load float*, float** %arrayidx2633, align 8, !tbaa !1
  %1446 = bitcast float* %1445 to i8*
  %1447 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom2634 = sext i32 %1447 to i64
  %1448 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2635 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1448, i32 0, i32 68
  %sizc2636 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2635, i32 0, i32 5
  %arrayidx2637 = getelementptr inbounds [4 x i32], [4 x i32]* %sizc2636, i32 0, i64 %idxprom2634
  %1449 = load i32, i32* %arrayidx2637, align 4, !tbaa !26
  %conv2638 = zext i32 %1449 to i64
  %mul2639 = mul i64 %conv2638, 4
  %call2640 = call i8* @memcpy(i8* %1442, i8* %1446, i64 %mul2639) #6
  br label %if.end.2642

if.else.2641:                                     ; preds = %if.else.2615
  store i32 -25, i32* %code, align 4, !tbaa !26
  br label %if.end.2642

if.end.2642:                                      ; preds = %if.else.2641, %if.then.2629
  %1450 = load float*, float** %fp, align 8, !tbaa !1
  %1451 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom2643 = sext i32 %1451 to i64
  %1452 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2644 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1452, i32 0, i32 68
  %extc2645 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2644, i32 0, i32 4
  %arrayidx2646 = getelementptr inbounds [4 x float*], [4 x float*]* %extc2645, i32 0, i64 %idxprom2643
  store float* %1450, float** %arrayidx2646, align 8, !tbaa !1
  br label %if.end.2647

if.end.2647:                                      ; preds = %if.end.2642, %if.then.2606
  br label %if.end.2648

if.end.2648:                                      ; preds = %if.end.2647, %land.lhs.true.2556, %if.end.2549
  %1453 = bitcast i32* %j to i8*
  call void @llvm.lifetime.end(i64 4, i8* %1453) #2
  br label %for.inc.2649

for.inc.2649:                                     ; preds = %if.end.2648
  %1454 = load i32, i32* %i, align 4, !tbaa !26
  %inc2650 = add nsw i32 %1454, 1
  store i32 %inc2650, i32* %i, align 4, !tbaa !26
  br label %for.cond.2448

for.end.2651:                                     ; preds = %for.cond.2448
  %1455 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2652 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1455, i32 0, i32 68
  %am2653 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2652, i32 0, i32 3
  %1456 = load float*, float** %am2653, align 8, !tbaa !86
  %cmp2654 = icmp ne float* %1456, null
  br i1 %cmp2654, label %land.lhs.true.2656, label %if.end.2696

land.lhs.true.2656:                               ; preds = %for.end.2651
  %1457 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2657 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1457, i32 0, i32 68
  %am2658 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2657, i32 0, i32 3
  %1458 = load float*, float** %am2658, align 8, !tbaa !86
  %am2659 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %oldstc, i32 0, i32 3
  %1459 = load float*, float** %am2659, align 8, !tbaa !101
  %cmp2660 = icmp ne float* %1458, %1459
  br i1 %cmp2660, label %if.then.2662, label %if.end.2696

if.then.2662:                                     ; preds = %land.lhs.true.2656
  %1460 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %color_info2663 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1460, i32 0, i32 11
  %num_components2664 = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info2663, i32 0, i32 1
  %1461 = load i32, i32* %num_components2664, align 4, !tbaa !40
  %cmp2665 = icmp eq i32 %1461, 1
  br i1 %cmp2665, label %if.then.2667, label %if.else.2668

if.then.2667:                                     ; preds = %if.then.2662
  store i32 3, i32* %i, align 4, !tbaa !26
  br label %if.end.2676

if.else.2668:                                     ; preds = %if.then.2662
  %1462 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %color_info2669 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1462, i32 0, i32 11
  %num_components2670 = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info2669, i32 0, i32 1
  %1463 = load i32, i32* %num_components2670, align 4, !tbaa !40
  %cmp2671 = icmp eq i32 %1463, 3
  br i1 %cmp2671, label %if.then.2673, label %if.else.2674

if.then.2673:                                     ; preds = %if.else.2668
  store i32 9, i32* %i, align 4, !tbaa !26
  br label %if.end.2675

if.else.2674:                                     ; preds = %if.else.2668
  store i32 16, i32* %i, align 4, !tbaa !26
  br label %if.end.2675

if.end.2675:                                      ; preds = %if.else.2674, %if.then.2673
  br label %if.end.2676

if.end.2676:                                      ; preds = %if.end.2675, %if.then.2667
  %1464 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %memory2677 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1464, i32 0, i32 3
  %1465 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory2677, align 8, !tbaa !29
  %non_gc_memory2678 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %1465, i32 0, i32 3
  %1466 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory2678, align 8, !tbaa !30
  %procs2679 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %1466, i32 0, i32 1
  %alloc_byte_array2680 = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs2679, i32 0, i32 10
  %1467 = load i8* (%struct.gs_memory_s*, i32, i32, i8*)*, i8* (%struct.gs_memory_s*, i32, i32, i8*)** %alloc_byte_array2680, align 8, !tbaa !33
  %1468 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %memory2681 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1468, i32 0, i32 3
  %1469 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory2681, align 8, !tbaa !29
  %non_gc_memory2682 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %1469, i32 0, i32 3
  %1470 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory2682, align 8, !tbaa !30
  %1471 = load i32, i32* %i, align 4, !tbaa !26
  %call2683 = call i8* %1467(%struct.gs_memory_s* %1470, i32 %1471, i32 4, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.54, i32 0, i32 0)) #5
  %1472 = bitcast i8* %call2683 to float*
  store float* %1472, float** %fp, align 8, !tbaa !1
  %1473 = load float*, float** %fp, align 8, !tbaa !1
  %cmp2684 = icmp ne float* %1473, null
  br i1 %cmp2684, label %if.then.2686, label %if.else.2692

if.then.2686:                                     ; preds = %if.end.2676
  %1474 = load float*, float** %fp, align 8, !tbaa !1
  %1475 = bitcast float* %1474 to i8*
  %1476 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2687 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1476, i32 0, i32 68
  %am2688 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2687, i32 0, i32 3
  %1477 = load float*, float** %am2688, align 8, !tbaa !86
  %1478 = bitcast float* %1477 to i8*
  %1479 = load i32, i32* %i, align 4, !tbaa !26
  %conv2689 = sext i32 %1479 to i64
  %mul2690 = mul i64 %conv2689, 4
  %call2691 = call i8* @memcpy(i8* %1475, i8* %1478, i64 %mul2690) #6
  br label %if.end.2693

if.else.2692:                                     ; preds = %if.end.2676
  store i32 -25, i32* %code, align 4, !tbaa !26
  br label %if.end.2693

if.end.2693:                                      ; preds = %if.else.2692, %if.then.2686
  %1480 = load float*, float** %fp, align 8, !tbaa !1
  %1481 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2694 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1481, i32 0, i32 68
  %am2695 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2694, i32 0, i32 3
  store float* %1480, float** %am2695, align 8, !tbaa !86
  br label %if.end.2696

if.end.2696:                                      ; preds = %if.end.2693, %land.lhs.true.2656, %for.end.2651
  %1482 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2697 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1482, i32 0, i32 68
  %escp_init2698 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2697, i32 0, i32 13
  %data2699 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %escp_init2698, i32 0, i32 0
  %1483 = load i8*, i8** %data2699, align 8, !tbaa !102
  %escp_init2700 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %oldstc, i32 0, i32 13
  %data2701 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %escp_init2700, i32 0, i32 0
  %1484 = load i8*, i8** %data2701, align 8, !tbaa !103
  %cmp2702 = icmp ne i8* %1483, %1484
  br i1 %cmp2702, label %if.then.2704, label %if.end.2743

if.then.2704:                                     ; preds = %if.end.2696
  %1485 = bitcast i8** %ip to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1485) #2
  store i8* null, i8** %ip, align 8, !tbaa !1
  %1486 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2705 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1486, i32 0, i32 68
  %escp_init2706 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2705, i32 0, i32 13
  %size2707 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %escp_init2706, i32 0, i32 1
  %1487 = load i32, i32* %size2707, align 4, !tbaa !104
  %cmp2708 = icmp ugt i32 %1487, 0
  br i1 %cmp2708, label %if.then.2710, label %if.end.2737

if.then.2710:                                     ; preds = %if.then.2704
  %1488 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %memory2711 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1488, i32 0, i32 3
  %1489 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory2711, align 8, !tbaa !29
  %non_gc_memory2712 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %1489, i32 0, i32 3
  %1490 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory2712, align 8, !tbaa !30
  %procs2713 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %1490, i32 0, i32 1
  %alloc_byte_array2714 = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs2713, i32 0, i32 10
  %1491 = load i8* (%struct.gs_memory_s*, i32, i32, i8*)*, i8* (%struct.gs_memory_s*, i32, i32, i8*)** %alloc_byte_array2714, align 8, !tbaa !33
  %1492 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %memory2715 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1492, i32 0, i32 3
  %1493 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory2715, align 8, !tbaa !29
  %non_gc_memory2716 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %1493, i32 0, i32 3
  %1494 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory2716, align 8, !tbaa !30
  %1495 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2717 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1495, i32 0, i32 68
  %escp_init2718 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2717, i32 0, i32 13
  %size2719 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %escp_init2718, i32 0, i32 1
  %1496 = load i32, i32* %size2719, align 4, !tbaa !104
  %call2720 = call i8* %1491(%struct.gs_memory_s* %1494, i32 %1496, i32 1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i32 0, i32 0)) #5
  store i8* %call2720, i8** %ip, align 8, !tbaa !1
  %1497 = load i8*, i8** %ip, align 8, !tbaa !1
  %cmp2721 = icmp eq i8* %1497, null
  br i1 %cmp2721, label %if.then.2723, label %if.else.2727

if.then.2723:                                     ; preds = %if.then.2710
  store i32 -25, i32* %code, align 4, !tbaa !26
  %1498 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2724 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1498, i32 0, i32 68
  %escp_init2725 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2724, i32 0, i32 13
  %size2726 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %escp_init2725, i32 0, i32 1
  store i32 0, i32* %size2726, align 4, !tbaa !104
  br label %if.end.2736

if.else.2727:                                     ; preds = %if.then.2710
  %1499 = load i8*, i8** %ip, align 8, !tbaa !1
  %1500 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2728 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1500, i32 0, i32 68
  %escp_init2729 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2728, i32 0, i32 13
  %data2730 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %escp_init2729, i32 0, i32 0
  %1501 = load i8*, i8** %data2730, align 8, !tbaa !102
  %1502 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2731 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1502, i32 0, i32 68
  %escp_init2732 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2731, i32 0, i32 13
  %size2733 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %escp_init2732, i32 0, i32 1
  %1503 = load i32, i32* %size2733, align 4, !tbaa !104
  %conv2734 = zext i32 %1503 to i64
  %call2735 = call i8* @memcpy(i8* %1499, i8* %1501, i64 %conv2734) #6
  br label %if.end.2736

if.end.2736:                                      ; preds = %if.else.2727, %if.then.2723
  br label %if.end.2737

if.end.2737:                                      ; preds = %if.end.2736, %if.then.2704
  %1504 = load i8*, i8** %ip, align 8, !tbaa !1
  %1505 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2738 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1505, i32 0, i32 68
  %escp_init2739 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2738, i32 0, i32 13
  %data2740 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %escp_init2739, i32 0, i32 0
  store i8* %1504, i8** %data2740, align 8, !tbaa !102
  %1506 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2741 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1506, i32 0, i32 68
  %escp_init2742 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2741, i32 0, i32 13
  %persistent = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %escp_init2742, i32 0, i32 2
  store i32 0, i32* %persistent, align 4, !tbaa !105
  %1507 = bitcast i8** %ip to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1507) #2
  br label %if.end.2743

if.end.2743:                                      ; preds = %if.end.2737, %if.end.2696
  %1508 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2744 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1508, i32 0, i32 68
  %escp_release2745 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2744, i32 0, i32 14
  %data2746 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %escp_release2745, i32 0, i32 0
  %1509 = load i8*, i8** %data2746, align 8, !tbaa !63
  %escp_release2747 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %oldstc, i32 0, i32 14
  %data2748 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %escp_release2747, i32 0, i32 0
  %1510 = load i8*, i8** %data2748, align 8, !tbaa !106
  %cmp2749 = icmp ne i8* %1509, %1510
  br i1 %cmp2749, label %if.then.2751, label %if.end.2792

if.then.2751:                                     ; preds = %if.end.2743
  %1511 = bitcast i8** %ip2752 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1511) #2
  store i8* null, i8** %ip2752, align 8, !tbaa !1
  %1512 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2753 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1512, i32 0, i32 68
  %escp_release2754 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2753, i32 0, i32 14
  %size2755 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %escp_release2754, i32 0, i32 1
  %1513 = load i32, i32* %size2755, align 4, !tbaa !64
  %cmp2756 = icmp ugt i32 %1513, 0
  br i1 %cmp2756, label %if.then.2758, label %if.end.2785

if.then.2758:                                     ; preds = %if.then.2751
  %1514 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %memory2759 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1514, i32 0, i32 3
  %1515 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory2759, align 8, !tbaa !29
  %non_gc_memory2760 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %1515, i32 0, i32 3
  %1516 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory2760, align 8, !tbaa !30
  %procs2761 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %1516, i32 0, i32 1
  %alloc_byte_array2762 = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs2761, i32 0, i32 10
  %1517 = load i8* (%struct.gs_memory_s*, i32, i32, i8*)*, i8* (%struct.gs_memory_s*, i32, i32, i8*)** %alloc_byte_array2762, align 8, !tbaa !33
  %1518 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %memory2763 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1518, i32 0, i32 3
  %1519 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory2763, align 8, !tbaa !29
  %non_gc_memory2764 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %1519, i32 0, i32 3
  %1520 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory2764, align 8, !tbaa !30
  %1521 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2765 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1521, i32 0, i32 68
  %escp_release2766 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2765, i32 0, i32 14
  %size2767 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %escp_release2766, i32 0, i32 1
  %1522 = load i32, i32* %size2767, align 4, !tbaa !64
  %call2768 = call i8* %1517(%struct.gs_memory_s* %1520, i32 %1522, i32 1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.7, i32 0, i32 0)) #5
  store i8* %call2768, i8** %ip2752, align 8, !tbaa !1
  %1523 = load i8*, i8** %ip2752, align 8, !tbaa !1
  %cmp2769 = icmp eq i8* %1523, null
  br i1 %cmp2769, label %if.then.2771, label %if.else.2775

if.then.2771:                                     ; preds = %if.then.2758
  store i32 -25, i32* %code, align 4, !tbaa !26
  %1524 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2772 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1524, i32 0, i32 68
  %escp_release2773 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2772, i32 0, i32 14
  %size2774 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %escp_release2773, i32 0, i32 1
  store i32 0, i32* %size2774, align 4, !tbaa !64
  br label %if.end.2784

if.else.2775:                                     ; preds = %if.then.2758
  %1525 = load i8*, i8** %ip2752, align 8, !tbaa !1
  %1526 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2776 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1526, i32 0, i32 68
  %escp_release2777 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2776, i32 0, i32 14
  %data2778 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %escp_release2777, i32 0, i32 0
  %1527 = load i8*, i8** %data2778, align 8, !tbaa !63
  %1528 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2779 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1528, i32 0, i32 68
  %escp_release2780 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2779, i32 0, i32 14
  %size2781 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %escp_release2780, i32 0, i32 1
  %1529 = load i32, i32* %size2781, align 4, !tbaa !64
  %conv2782 = zext i32 %1529 to i64
  %call2783 = call i8* @memcpy(i8* %1525, i8* %1527, i64 %conv2782) #6
  br label %if.end.2784

if.end.2784:                                      ; preds = %if.else.2775, %if.then.2771
  br label %if.end.2785

if.end.2785:                                      ; preds = %if.end.2784, %if.then.2751
  %1530 = load i8*, i8** %ip2752, align 8, !tbaa !1
  %1531 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2786 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1531, i32 0, i32 68
  %escp_release2787 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2786, i32 0, i32 14
  %data2788 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %escp_release2787, i32 0, i32 0
  store i8* %1530, i8** %data2788, align 8, !tbaa !63
  %1532 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2789 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1532, i32 0, i32 68
  %escp_release2790 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2789, i32 0, i32 14
  %persistent2791 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %escp_release2790, i32 0, i32 2
  store i32 0, i32* %persistent2791, align 4, !tbaa !107
  %1533 = bitcast i8** %ip2752 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1533) #2
  br label %if.end.2792

if.end.2792:                                      ; preds = %if.end.2785, %if.end.2743
  %1534 = load i32, i32* %code, align 4, !tbaa !26
  %cmp2793 = icmp slt i32 %1534, 0
  br i1 %cmp2793, label %if.then.2795, label %if.end.3003

if.then.2795:                                     ; preds = %if.end.2792
  %1535 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2796 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1535, i32 0, i32 68
  %am2797 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2796, i32 0, i32 3
  %1536 = load float*, float** %am2797, align 8, !tbaa !86
  %cmp2798 = icmp ne float* %1536, null
  br i1 %cmp2798, label %land.lhs.true.2800, label %if.end.2828

land.lhs.true.2800:                               ; preds = %if.then.2795
  %1537 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2801 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1537, i32 0, i32 68
  %am2802 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2801, i32 0, i32 3
  %1538 = load float*, float** %am2802, align 8, !tbaa !86
  %am2803 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %oldstc, i32 0, i32 3
  %1539 = load float*, float** %am2803, align 8, !tbaa !101
  %cmp2804 = icmp ne float* %1538, %1539
  br i1 %cmp2804, label %if.then.2806, label %if.end.2828

if.then.2806:                                     ; preds = %land.lhs.true.2800
  %1540 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %color_info2807 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1540, i32 0, i32 11
  %num_components2808 = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info2807, i32 0, i32 1
  %1541 = load i32, i32* %num_components2808, align 4, !tbaa !40
  %cmp2809 = icmp eq i32 %1541, 1
  br i1 %cmp2809, label %if.then.2811, label %if.else.2812

if.then.2811:                                     ; preds = %if.then.2806
  store i32 3, i32* %i, align 4, !tbaa !26
  br label %if.end.2820

if.else.2812:                                     ; preds = %if.then.2806
  %1542 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %color_info2813 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1542, i32 0, i32 11
  %num_components2814 = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info2813, i32 0, i32 1
  %1543 = load i32, i32* %num_components2814, align 4, !tbaa !40
  %cmp2815 = icmp eq i32 %1543, 3
  br i1 %cmp2815, label %if.then.2817, label %if.else.2818

if.then.2817:                                     ; preds = %if.else.2812
  store i32 9, i32* %i, align 4, !tbaa !26
  br label %if.end.2819

if.else.2818:                                     ; preds = %if.else.2812
  store i32 16, i32* %i, align 4, !tbaa !26
  br label %if.end.2819

if.end.2819:                                      ; preds = %if.else.2818, %if.then.2817
  br label %if.end.2820

if.end.2820:                                      ; preds = %if.end.2819, %if.then.2811
  %1544 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %memory2821 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1544, i32 0, i32 3
  %1545 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory2821, align 8, !tbaa !29
  %non_gc_memory2822 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %1545, i32 0, i32 3
  %1546 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory2822, align 8, !tbaa !30
  %procs2823 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %1546, i32 0, i32 1
  %free_object = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs2823, i32 0, i32 2
  %1547 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %free_object, align 8, !tbaa !65
  %1548 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %memory2824 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1548, i32 0, i32 3
  %1549 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory2824, align 8, !tbaa !29
  %non_gc_memory2825 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %1549, i32 0, i32 3
  %1550 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory2825, align 8, !tbaa !30
  %1551 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2826 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1551, i32 0, i32 68
  %am2827 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2826, i32 0, i32 3
  %1552 = load float*, float** %am2827, align 8, !tbaa !86
  %1553 = bitcast float* %1552 to i8*
  call void %1547(%struct.gs_memory_s* %1550, i8* %1553, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.54, i32 0, i32 0)) #5
  br label %if.end.2828

if.end.2828:                                      ; preds = %if.end.2820, %land.lhs.true.2800, %if.then.2795
  %1554 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2829 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1554, i32 0, i32 68
  %escp_init2830 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2829, i32 0, i32 13
  %data2831 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %escp_init2830, i32 0, i32 0
  %1555 = load i8*, i8** %data2831, align 8, !tbaa !102
  %cmp2832 = icmp ne i8* %1555, null
  br i1 %cmp2832, label %land.lhs.true.2834, label %if.end.2852

land.lhs.true.2834:                               ; preds = %if.end.2828
  %1556 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2835 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1556, i32 0, i32 68
  %escp_init2836 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2835, i32 0, i32 13
  %data2837 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %escp_init2836, i32 0, i32 0
  %1557 = load i8*, i8** %data2837, align 8, !tbaa !102
  %escp_init2838 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %oldstc, i32 0, i32 13
  %data2839 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %escp_init2838, i32 0, i32 0
  %1558 = load i8*, i8** %data2839, align 8, !tbaa !103
  %cmp2840 = icmp ne i8* %1557, %1558
  br i1 %cmp2840, label %if.then.2842, label %if.end.2852

if.then.2842:                                     ; preds = %land.lhs.true.2834
  %1559 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %memory2843 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1559, i32 0, i32 3
  %1560 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory2843, align 8, !tbaa !29
  %non_gc_memory2844 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %1560, i32 0, i32 3
  %1561 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory2844, align 8, !tbaa !30
  %procs2845 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %1561, i32 0, i32 1
  %free_object2846 = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs2845, i32 0, i32 2
  %1562 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %free_object2846, align 8, !tbaa !65
  %1563 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %memory2847 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1563, i32 0, i32 3
  %1564 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory2847, align 8, !tbaa !29
  %non_gc_memory2848 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %1564, i32 0, i32 3
  %1565 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory2848, align 8, !tbaa !30
  %1566 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2849 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1566, i32 0, i32 68
  %escp_init2850 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2849, i32 0, i32 13
  %data2851 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %escp_init2850, i32 0, i32 0
  %1567 = load i8*, i8** %data2851, align 8, !tbaa !102
  call void %1562(%struct.gs_memory_s* %1565, i8* %1567, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i32 0, i32 0)) #5
  br label %if.end.2852

if.end.2852:                                      ; preds = %if.then.2842, %land.lhs.true.2834, %if.end.2828
  %1568 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2853 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1568, i32 0, i32 68
  %escp_release2854 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2853, i32 0, i32 14
  %data2855 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %escp_release2854, i32 0, i32 0
  %1569 = load i8*, i8** %data2855, align 8, !tbaa !63
  %cmp2856 = icmp ne i8* %1569, null
  br i1 %cmp2856, label %land.lhs.true.2858, label %if.end.2876

land.lhs.true.2858:                               ; preds = %if.end.2852
  %1570 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2859 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1570, i32 0, i32 68
  %escp_release2860 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2859, i32 0, i32 14
  %data2861 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %escp_release2860, i32 0, i32 0
  %1571 = load i8*, i8** %data2861, align 8, !tbaa !63
  %escp_release2862 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %oldstc, i32 0, i32 14
  %data2863 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %escp_release2862, i32 0, i32 0
  %1572 = load i8*, i8** %data2863, align 8, !tbaa !106
  %cmp2864 = icmp ne i8* %1571, %1572
  br i1 %cmp2864, label %if.then.2866, label %if.end.2876

if.then.2866:                                     ; preds = %land.lhs.true.2858
  %1573 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %memory2867 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1573, i32 0, i32 3
  %1574 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory2867, align 8, !tbaa !29
  %non_gc_memory2868 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %1574, i32 0, i32 3
  %1575 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory2868, align 8, !tbaa !30
  %procs2869 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %1575, i32 0, i32 1
  %free_object2870 = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs2869, i32 0, i32 2
  %1576 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %free_object2870, align 8, !tbaa !65
  %1577 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %memory2871 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1577, i32 0, i32 3
  %1578 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory2871, align 8, !tbaa !29
  %non_gc_memory2872 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %1578, i32 0, i32 3
  %1579 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory2872, align 8, !tbaa !30
  %1580 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2873 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1580, i32 0, i32 68
  %escp_release2874 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2873, i32 0, i32 14
  %data2875 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %escp_release2874, i32 0, i32 0
  %1581 = load i8*, i8** %data2875, align 8, !tbaa !63
  call void %1576(%struct.gs_memory_s* %1579, i8* %1581, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.7, i32 0, i32 0)) #5
  br label %if.end.2876

if.end.2876:                                      ; preds = %if.then.2866, %land.lhs.true.2858, %if.end.2852
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond.2877

for.cond.2877:                                    ; preds = %for.inc.3000, %if.end.2876
  %1582 = load i32, i32* %i, align 4, !tbaa !26
  %1583 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %color_info2878 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1583, i32 0, i32 11
  %num_components2879 = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info2878, i32 0, i32 1
  %1584 = load i32, i32* %num_components2879, align 4, !tbaa !40
  %cmp2880 = icmp slt i32 %1582, %1584
  br i1 %cmp2880, label %for.body.2882, label %for.end.3002

for.body.2882:                                    ; preds = %for.cond.2877
  %1585 = bitcast i32* %j2883 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1585) #2
  %1586 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom2884 = sext i32 %1586 to i64
  %1587 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2885 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1587, i32 0, i32 68
  %extc2886 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2885, i32 0, i32 4
  %arrayidx2887 = getelementptr inbounds [4 x float*], [4 x float*]* %extc2886, i32 0, i64 %idxprom2884
  %1588 = load float*, float** %arrayidx2887, align 8, !tbaa !1
  %cmp2888 = icmp ne float* %1588, null
  br i1 %cmp2888, label %land.lhs.true.2890, label %if.end.2941

land.lhs.true.2890:                               ; preds = %for.body.2882
  %1589 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom2891 = sext i32 %1589 to i64
  %1590 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2892 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1590, i32 0, i32 68
  %extc2893 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2892, i32 0, i32 4
  %arrayidx2894 = getelementptr inbounds [4 x float*], [4 x float*]* %extc2893, i32 0, i64 %idxprom2891
  %1591 = load float*, float** %arrayidx2894, align 8, !tbaa !1
  %cmp2895 = icmp ne float* %1591, getelementptr inbounds ([2 x float], [2 x float]* @defext, i32 0, i32 0)
  br i1 %cmp2895, label %land.lhs.true.2897, label %if.end.2941

land.lhs.true.2897:                               ; preds = %land.lhs.true.2890
  %1592 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom2898 = sext i32 %1592 to i64
  %1593 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2899 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1593, i32 0, i32 68
  %extc2900 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2899, i32 0, i32 4
  %arrayidx2901 = getelementptr inbounds [4 x float*], [4 x float*]* %extc2900, i32 0, i64 %idxprom2898
  %1594 = load float*, float** %arrayidx2901, align 8, !tbaa !1
  %1595 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom2902 = sext i32 %1595 to i64
  %extc2903 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %oldstc, i32 0, i32 4
  %arrayidx2904 = getelementptr inbounds [4 x float*], [4 x float*]* %extc2903, i32 0, i64 %idxprom2902
  %1596 = load float*, float** %arrayidx2904, align 8, !tbaa !1
  %cmp2905 = icmp ne float* %1594, %1596
  br i1 %cmp2905, label %if.then.2907, label %if.end.2941

if.then.2907:                                     ; preds = %land.lhs.true.2897
  store i32 0, i32* %j2883, align 4, !tbaa !26
  br label %for.cond.2908

for.cond.2908:                                    ; preds = %for.inc.2924, %if.then.2907
  %1597 = load i32, i32* %j2883, align 4, !tbaa !26
  %1598 = load i32, i32* %i, align 4, !tbaa !26
  %cmp2909 = icmp slt i32 %1597, %1598
  br i1 %cmp2909, label %for.body.2911, label %for.end.2926

for.body.2911:                                    ; preds = %for.cond.2908
  %1599 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom2912 = sext i32 %1599 to i64
  %1600 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2913 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1600, i32 0, i32 68
  %extc2914 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2913, i32 0, i32 4
  %arrayidx2915 = getelementptr inbounds [4 x float*], [4 x float*]* %extc2914, i32 0, i64 %idxprom2912
  %1601 = load float*, float** %arrayidx2915, align 8, !tbaa !1
  %1602 = load i32, i32* %j2883, align 4, !tbaa !26
  %idxprom2916 = sext i32 %1602 to i64
  %1603 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2917 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1603, i32 0, i32 68
  %extc2918 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2917, i32 0, i32 4
  %arrayidx2919 = getelementptr inbounds [4 x float*], [4 x float*]* %extc2918, i32 0, i64 %idxprom2916
  %1604 = load float*, float** %arrayidx2919, align 8, !tbaa !1
  %cmp2920 = icmp eq float* %1601, %1604
  br i1 %cmp2920, label %if.then.2922, label %if.end.2923

if.then.2922:                                     ; preds = %for.body.2911
  br label %for.end.2926

if.end.2923:                                      ; preds = %for.body.2911
  br label %for.inc.2924

for.inc.2924:                                     ; preds = %if.end.2923
  %1605 = load i32, i32* %j2883, align 4, !tbaa !26
  %inc2925 = add nsw i32 %1605, 1
  store i32 %inc2925, i32* %j2883, align 4, !tbaa !26
  br label %for.cond.2908

for.end.2926:                                     ; preds = %if.then.2922, %for.cond.2908
  %1606 = load i32, i32* %i, align 4, !tbaa !26
  %1607 = load i32, i32* %j2883, align 4, !tbaa !26
  %cmp2927 = icmp eq i32 %1606, %1607
  br i1 %cmp2927, label %if.then.2929, label %if.end.2940

if.then.2929:                                     ; preds = %for.end.2926
  %1608 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %memory2930 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1608, i32 0, i32 3
  %1609 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory2930, align 8, !tbaa !29
  %non_gc_memory2931 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %1609, i32 0, i32 3
  %1610 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory2931, align 8, !tbaa !30
  %procs2932 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %1610, i32 0, i32 1
  %free_object2933 = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs2932, i32 0, i32 2
  %1611 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %free_object2933, align 8, !tbaa !65
  %1612 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %memory2934 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1612, i32 0, i32 3
  %1613 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory2934, align 8, !tbaa !29
  %non_gc_memory2935 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %1613, i32 0, i32 3
  %1614 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory2935, align 8, !tbaa !30
  %1615 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom2936 = sext i32 %1615 to i64
  %1616 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2937 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1616, i32 0, i32 68
  %extc2938 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2937, i32 0, i32 4
  %arrayidx2939 = getelementptr inbounds [4 x float*], [4 x float*]* %extc2938, i32 0, i64 %idxprom2936
  %1617 = load float*, float** %arrayidx2939, align 8, !tbaa !1
  %1618 = bitcast float* %1617 to i8*
  call void %1611(%struct.gs_memory_s* %1614, i8* %1618, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.54, i32 0, i32 0)) #5
  br label %if.end.2940

if.end.2940:                                      ; preds = %if.then.2929, %for.end.2926
  br label %if.end.2941

if.end.2941:                                      ; preds = %if.end.2940, %land.lhs.true.2897, %land.lhs.true.2890, %for.body.2882
  %1619 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom2942 = sext i32 %1619 to i64
  %1620 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2943 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1620, i32 0, i32 68
  %extv2944 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2943, i32 0, i32 7
  %arrayidx2945 = getelementptr inbounds [4 x float*], [4 x float*]* %extv2944, i32 0, i64 %idxprom2942
  %1621 = load float*, float** %arrayidx2945, align 8, !tbaa !1
  %cmp2946 = icmp ne float* %1621, null
  br i1 %cmp2946, label %land.lhs.true.2948, label %if.end.2999

land.lhs.true.2948:                               ; preds = %if.end.2941
  %1622 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom2949 = sext i32 %1622 to i64
  %1623 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2950 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1623, i32 0, i32 68
  %extv2951 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2950, i32 0, i32 7
  %arrayidx2952 = getelementptr inbounds [4 x float*], [4 x float*]* %extv2951, i32 0, i64 %idxprom2949
  %1624 = load float*, float** %arrayidx2952, align 8, !tbaa !1
  %1625 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom2953 = sext i32 %1625 to i64
  %extv2954 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %oldstc, i32 0, i32 7
  %arrayidx2955 = getelementptr inbounds [4 x float*], [4 x float*]* %extv2954, i32 0, i64 %idxprom2953
  %1626 = load float*, float** %arrayidx2955, align 8, !tbaa !1
  %cmp2956 = icmp ne float* %1624, %1626
  br i1 %cmp2956, label %land.lhs.true.2958, label %if.end.2999

land.lhs.true.2958:                               ; preds = %land.lhs.true.2948
  %1627 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom2959 = sext i32 %1627 to i64
  %1628 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2960 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1628, i32 0, i32 68
  %extv2961 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2960, i32 0, i32 7
  %arrayidx2962 = getelementptr inbounds [4 x float*], [4 x float*]* %extv2961, i32 0, i64 %idxprom2959
  %1629 = load float*, float** %arrayidx2962, align 8, !tbaa !1
  %cmp2963 = icmp ne float* %1629, getelementptr inbounds ([2 x float], [2 x float]* @defext, i32 0, i32 0)
  br i1 %cmp2963, label %if.then.2965, label %if.end.2999

if.then.2965:                                     ; preds = %land.lhs.true.2958
  store i32 0, i32* %j2883, align 4, !tbaa !26
  br label %for.cond.2966

for.cond.2966:                                    ; preds = %for.inc.2982, %if.then.2965
  %1630 = load i32, i32* %j2883, align 4, !tbaa !26
  %1631 = load i32, i32* %i, align 4, !tbaa !26
  %cmp2967 = icmp slt i32 %1630, %1631
  br i1 %cmp2967, label %for.body.2969, label %for.end.2984

for.body.2969:                                    ; preds = %for.cond.2966
  %1632 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom2970 = sext i32 %1632 to i64
  %1633 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2971 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1633, i32 0, i32 68
  %extv2972 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2971, i32 0, i32 7
  %arrayidx2973 = getelementptr inbounds [4 x float*], [4 x float*]* %extv2972, i32 0, i64 %idxprom2970
  %1634 = load float*, float** %arrayidx2973, align 8, !tbaa !1
  %1635 = load i32, i32* %j2883, align 4, !tbaa !26
  %idxprom2974 = sext i32 %1635 to i64
  %1636 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2975 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1636, i32 0, i32 68
  %extv2976 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2975, i32 0, i32 7
  %arrayidx2977 = getelementptr inbounds [4 x float*], [4 x float*]* %extv2976, i32 0, i64 %idxprom2974
  %1637 = load float*, float** %arrayidx2977, align 8, !tbaa !1
  %cmp2978 = icmp eq float* %1634, %1637
  br i1 %cmp2978, label %if.then.2980, label %if.end.2981

if.then.2980:                                     ; preds = %for.body.2969
  br label %for.end.2984

if.end.2981:                                      ; preds = %for.body.2969
  br label %for.inc.2982

for.inc.2982:                                     ; preds = %if.end.2981
  %1638 = load i32, i32* %j2883, align 4, !tbaa !26
  %inc2983 = add nsw i32 %1638, 1
  store i32 %inc2983, i32* %j2883, align 4, !tbaa !26
  br label %for.cond.2966

for.end.2984:                                     ; preds = %if.then.2980, %for.cond.2966
  %1639 = load i32, i32* %i, align 4, !tbaa !26
  %1640 = load i32, i32* %j2883, align 4, !tbaa !26
  %cmp2985 = icmp eq i32 %1639, %1640
  br i1 %cmp2985, label %if.then.2987, label %if.end.2998

if.then.2987:                                     ; preds = %for.end.2984
  %1641 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %memory2988 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1641, i32 0, i32 3
  %1642 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory2988, align 8, !tbaa !29
  %non_gc_memory2989 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %1642, i32 0, i32 3
  %1643 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory2989, align 8, !tbaa !30
  %procs2990 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %1643, i32 0, i32 1
  %free_object2991 = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs2990, i32 0, i32 2
  %1644 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %free_object2991, align 8, !tbaa !65
  %1645 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %memory2992 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1645, i32 0, i32 3
  %1646 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory2992, align 8, !tbaa !29
  %non_gc_memory2993 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %1646, i32 0, i32 3
  %1647 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory2993, align 8, !tbaa !30
  %1648 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom2994 = sext i32 %1648 to i64
  %1649 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2995 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1649, i32 0, i32 68
  %extv2996 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2995, i32 0, i32 7
  %arrayidx2997 = getelementptr inbounds [4 x float*], [4 x float*]* %extv2996, i32 0, i64 %idxprom2994
  %1650 = load float*, float** %arrayidx2997, align 8, !tbaa !1
  %1651 = bitcast float* %1650 to i8*
  call void %1644(%struct.gs_memory_s* %1647, i8* %1651, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.54, i32 0, i32 0)) #5
  br label %if.end.2998

if.end.2998:                                      ; preds = %if.then.2987, %for.end.2984
  br label %if.end.2999

if.end.2999:                                      ; preds = %if.end.2998, %land.lhs.true.2958, %land.lhs.true.2948, %if.end.2941
  %1652 = bitcast i32* %j2883 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %1652) #2
  br label %for.inc.3000

for.inc.3000:                                     ; preds = %if.end.2999
  %1653 = load i32, i32* %i, align 4, !tbaa !26
  %inc3001 = add nsw i32 %1653, 1
  store i32 %inc3001, i32* %i, align 4, !tbaa !26
  br label %for.cond.2877

for.end.3002:                                     ; preds = %for.cond.2877
  br label %if.end.3003

if.end.3003:                                      ; preds = %for.end.3002, %if.end.2792
  br label %if.end.3004

if.end.3004:                                      ; preds = %if.end.3003, %if.end.2444
  %1654 = load i32, i32* %error, align 4, !tbaa !26
  %1655 = load i32, i32* %code, align 4, !tbaa !26
  %cmp3005 = icmp sgt i32 %1654, %1655
  br i1 %cmp3005, label %cond.true.3007, label %cond.false.3008

cond.true.3007:                                   ; preds = %if.end.3004
  %1656 = load i32, i32* %code, align 4, !tbaa !26
  br label %cond.end.3009

cond.false.3008:                                  ; preds = %if.end.3004
  %1657 = load i32, i32* %error, align 4, !tbaa !26
  br label %cond.end.3009

cond.end.3009:                                    ; preds = %cond.false.3008, %cond.true.3007
  %cond3010 = phi i32 [ %1656, %cond.true.3007 ], [ %1657, %cond.false.3008 ]
  store i32 %cond3010, i32* %error, align 4, !tbaa !26
  %1658 = load i32, i32* %error, align 4, !tbaa !26
  %cmp3011 = icmp ne i32 %1658, 0
  br i1 %cmp3011, label %if.then.3013, label %if.else.3018

if.then.3013:                                     ; preds = %cond.end.3009
  %1659 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %color_info3014 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1659, i32 0, i32 11
  %1660 = bitcast %struct.gx_device_color_info_s* %color_info3014 to i8*
  %1661 = bitcast %struct.gx_device_color_info_s* %oldcolor to i8*
  %call3015 = call i8* @memcpy(i8* %1660, i8* %1661, i64 720) #6
  %1662 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc3016 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1662, i32 0, i32 68
  %1663 = bitcast %struct.stc_s* %stc3016 to i8*
  %1664 = bitcast %struct.stc_s* %oldstc to i8*
  %call3017 = call i8* @memcpy(i8* %1663, i8* %1664, i64 408) #6
  br label %if.end.3292

if.else.3018:                                     ; preds = %cond.end.3009
  %escp_init3019 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %oldstc, i32 0, i32 13
  %data3020 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %escp_init3019, i32 0, i32 0
  %1665 = load i8*, i8** %data3020, align 8, !tbaa !103
  %cmp3021 = icmp ne i8* %1665, null
  br i1 %cmp3021, label %land.lhs.true.3023, label %if.end.3040

land.lhs.true.3023:                               ; preds = %if.else.3018
  %escp_init3024 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %oldstc, i32 0, i32 13
  %data3025 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %escp_init3024, i32 0, i32 0
  %1666 = load i8*, i8** %data3025, align 8, !tbaa !103
  %1667 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc3026 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1667, i32 0, i32 68
  %escp_init3027 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc3026, i32 0, i32 13
  %data3028 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %escp_init3027, i32 0, i32 0
  %1668 = load i8*, i8** %data3028, align 8, !tbaa !102
  %cmp3029 = icmp ne i8* %1666, %1668
  br i1 %cmp3029, label %if.then.3031, label %if.end.3040

if.then.3031:                                     ; preds = %land.lhs.true.3023
  %1669 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %memory3032 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1669, i32 0, i32 3
  %1670 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory3032, align 8, !tbaa !29
  %non_gc_memory3033 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %1670, i32 0, i32 3
  %1671 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory3033, align 8, !tbaa !30
  %procs3034 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %1671, i32 0, i32 1
  %free_object3035 = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs3034, i32 0, i32 2
  %1672 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %free_object3035, align 8, !tbaa !65
  %1673 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %memory3036 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1673, i32 0, i32 3
  %1674 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory3036, align 8, !tbaa !29
  %non_gc_memory3037 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %1674, i32 0, i32 3
  %1675 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory3037, align 8, !tbaa !30
  %escp_init3038 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %oldstc, i32 0, i32 13
  %data3039 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %escp_init3038, i32 0, i32 0
  %1676 = load i8*, i8** %data3039, align 8, !tbaa !103
  call void %1672(%struct.gs_memory_s* %1675, i8* %1676, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i32 0, i32 0)) #5
  br label %if.end.3040

if.end.3040:                                      ; preds = %if.then.3031, %land.lhs.true.3023, %if.else.3018
  %escp_release3041 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %oldstc, i32 0, i32 14
  %data3042 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %escp_release3041, i32 0, i32 0
  %1677 = load i8*, i8** %data3042, align 8, !tbaa !106
  %cmp3043 = icmp ne i8* %1677, null
  br i1 %cmp3043, label %land.lhs.true.3045, label %if.end.3062

land.lhs.true.3045:                               ; preds = %if.end.3040
  %escp_release3046 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %oldstc, i32 0, i32 14
  %data3047 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %escp_release3046, i32 0, i32 0
  %1678 = load i8*, i8** %data3047, align 8, !tbaa !106
  %1679 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc3048 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1679, i32 0, i32 68
  %escp_release3049 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc3048, i32 0, i32 14
  %data3050 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %escp_release3049, i32 0, i32 0
  %1680 = load i8*, i8** %data3050, align 8, !tbaa !63
  %cmp3051 = icmp ne i8* %1678, %1680
  br i1 %cmp3051, label %if.then.3053, label %if.end.3062

if.then.3053:                                     ; preds = %land.lhs.true.3045
  %1681 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %memory3054 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1681, i32 0, i32 3
  %1682 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory3054, align 8, !tbaa !29
  %non_gc_memory3055 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %1682, i32 0, i32 3
  %1683 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory3055, align 8, !tbaa !30
  %procs3056 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %1683, i32 0, i32 1
  %free_object3057 = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs3056, i32 0, i32 2
  %1684 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %free_object3057, align 8, !tbaa !65
  %1685 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %memory3058 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1685, i32 0, i32 3
  %1686 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory3058, align 8, !tbaa !29
  %non_gc_memory3059 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %1686, i32 0, i32 3
  %1687 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory3059, align 8, !tbaa !30
  %escp_release3060 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %oldstc, i32 0, i32 14
  %data3061 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %escp_release3060, i32 0, i32 0
  %1688 = load i8*, i8** %data3061, align 8, !tbaa !106
  call void %1684(%struct.gs_memory_s* %1687, i8* %1688, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.7, i32 0, i32 0)) #5
  br label %if.end.3062

if.end.3062:                                      ; preds = %if.then.3053, %land.lhs.true.3045, %if.end.3040
  %am3063 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %oldstc, i32 0, i32 3
  %1689 = load float*, float** %am3063, align 8, !tbaa !101
  %cmp3064 = icmp ne float* %1689, null
  br i1 %cmp3064, label %land.lhs.true.3066, label %if.end.3092

land.lhs.true.3066:                               ; preds = %if.end.3062
  %am3067 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %oldstc, i32 0, i32 3
  %1690 = load float*, float** %am3067, align 8, !tbaa !101
  %1691 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc3068 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1691, i32 0, i32 68
  %am3069 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc3068, i32 0, i32 3
  %1692 = load float*, float** %am3069, align 8, !tbaa !86
  %cmp3070 = icmp ne float* %1690, %1692
  br i1 %cmp3070, label %if.then.3072, label %if.end.3092

if.then.3072:                                     ; preds = %land.lhs.true.3066
  %num_components3073 = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %oldcolor, i32 0, i32 1
  %1693 = load i32, i32* %num_components3073, align 4, !tbaa !95
  %cmp3074 = icmp eq i32 %1693, 1
  br i1 %cmp3074, label %if.then.3076, label %if.else.3077

if.then.3076:                                     ; preds = %if.then.3072
  store i32 3, i32* %i, align 4, !tbaa !26
  br label %if.end.3084

if.else.3077:                                     ; preds = %if.then.3072
  %num_components3078 = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %oldcolor, i32 0, i32 1
  %1694 = load i32, i32* %num_components3078, align 4, !tbaa !95
  %cmp3079 = icmp eq i32 %1694, 3
  br i1 %cmp3079, label %if.then.3081, label %if.else.3082

if.then.3081:                                     ; preds = %if.else.3077
  store i32 9, i32* %i, align 4, !tbaa !26
  br label %if.end.3083

if.else.3082:                                     ; preds = %if.else.3077
  store i32 16, i32* %i, align 4, !tbaa !26
  br label %if.end.3083

if.end.3083:                                      ; preds = %if.else.3082, %if.then.3081
  br label %if.end.3084

if.end.3084:                                      ; preds = %if.end.3083, %if.then.3076
  %1695 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %memory3085 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1695, i32 0, i32 3
  %1696 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory3085, align 8, !tbaa !29
  %non_gc_memory3086 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %1696, i32 0, i32 3
  %1697 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory3086, align 8, !tbaa !30
  %procs3087 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %1697, i32 0, i32 1
  %free_object3088 = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs3087, i32 0, i32 2
  %1698 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %free_object3088, align 8, !tbaa !65
  %1699 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %memory3089 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1699, i32 0, i32 3
  %1700 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory3089, align 8, !tbaa !29
  %non_gc_memory3090 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %1700, i32 0, i32 3
  %1701 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory3090, align 8, !tbaa !30
  %am3091 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %oldstc, i32 0, i32 3
  %1702 = load float*, float** %am3091, align 8, !tbaa !101
  %1703 = bitcast float* %1702 to i8*
  call void %1698(%struct.gs_memory_s* %1701, i8* %1703, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.54, i32 0, i32 0)) #5
  br label %if.end.3092

if.end.3092:                                      ; preds = %if.end.3084, %land.lhs.true.3066, %if.end.3062
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond.3093

for.cond.3093:                                    ; preds = %for.inc.3208, %if.end.3092
  %1704 = load i32, i32* %i, align 4, !tbaa !26
  %cmp3094 = icmp slt i32 %1704, 4
  br i1 %cmp3094, label %for.body.3096, label %for.end.3210

for.body.3096:                                    ; preds = %for.cond.3093
  %1705 = bitcast i32* %j3097 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1705) #2
  %1706 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom3098 = sext i32 %1706 to i64
  %extc3099 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %oldstc, i32 0, i32 4
  %arrayidx3100 = getelementptr inbounds [4 x float*], [4 x float*]* %extc3099, i32 0, i64 %idxprom3098
  %1707 = load float*, float** %arrayidx3100, align 8, !tbaa !1
  %cmp3101 = icmp ne float* %1707, null
  br i1 %cmp3101, label %land.lhs.true.3103, label %if.end.3154

land.lhs.true.3103:                               ; preds = %for.body.3096
  %1708 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom3104 = sext i32 %1708 to i64
  %extc3105 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %oldstc, i32 0, i32 4
  %arrayidx3106 = getelementptr inbounds [4 x float*], [4 x float*]* %extc3105, i32 0, i64 %idxprom3104
  %1709 = load float*, float** %arrayidx3106, align 8, !tbaa !1
  %1710 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom3107 = sext i32 %1710 to i64
  %1711 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc3108 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1711, i32 0, i32 68
  %extc3109 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc3108, i32 0, i32 4
  %arrayidx3110 = getelementptr inbounds [4 x float*], [4 x float*]* %extc3109, i32 0, i64 %idxprom3107
  %1712 = load float*, float** %arrayidx3110, align 8, !tbaa !1
  %cmp3111 = icmp ne float* %1709, %1712
  br i1 %cmp3111, label %land.lhs.true.3113, label %if.end.3154

land.lhs.true.3113:                               ; preds = %land.lhs.true.3103
  %dither3114 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %oldstc, i32 0, i32 2
  %1713 = load %struct.stc_dither_s*, %struct.stc_dither_s** %dither3114, align 8, !tbaa !96
  %cmp3115 = icmp ne %struct.stc_dither_s* %1713, null
  br i1 %cmp3115, label %land.lhs.true.3117, label %if.end.3154

land.lhs.true.3117:                               ; preds = %land.lhs.true.3113
  %1714 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom3118 = sext i32 %1714 to i64
  %extc3119 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %oldstc, i32 0, i32 4
  %arrayidx3120 = getelementptr inbounds [4 x float*], [4 x float*]* %extc3119, i32 0, i64 %idxprom3118
  %1715 = load float*, float** %arrayidx3120, align 8, !tbaa !1
  %cmp3121 = icmp ne float* %1715, getelementptr inbounds ([2 x float], [2 x float]* @defext, i32 0, i32 0)
  br i1 %cmp3121, label %if.then.3123, label %if.end.3154

if.then.3123:                                     ; preds = %land.lhs.true.3117
  store i32 0, i32* %j3097, align 4, !tbaa !26
  br label %for.cond.3124

for.cond.3124:                                    ; preds = %for.inc.3138, %if.then.3123
  %1716 = load i32, i32* %j3097, align 4, !tbaa !26
  %1717 = load i32, i32* %i, align 4, !tbaa !26
  %cmp3125 = icmp slt i32 %1716, %1717
  br i1 %cmp3125, label %for.body.3127, label %for.end.3140

for.body.3127:                                    ; preds = %for.cond.3124
  %1718 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom3128 = sext i32 %1718 to i64
  %extc3129 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %oldstc, i32 0, i32 4
  %arrayidx3130 = getelementptr inbounds [4 x float*], [4 x float*]* %extc3129, i32 0, i64 %idxprom3128
  %1719 = load float*, float** %arrayidx3130, align 8, !tbaa !1
  %1720 = load i32, i32* %j3097, align 4, !tbaa !26
  %idxprom3131 = sext i32 %1720 to i64
  %extc3132 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %oldstc, i32 0, i32 4
  %arrayidx3133 = getelementptr inbounds [4 x float*], [4 x float*]* %extc3132, i32 0, i64 %idxprom3131
  %1721 = load float*, float** %arrayidx3133, align 8, !tbaa !1
  %cmp3134 = icmp eq float* %1719, %1721
  br i1 %cmp3134, label %if.then.3136, label %if.end.3137

if.then.3136:                                     ; preds = %for.body.3127
  br label %for.end.3140

if.end.3137:                                      ; preds = %for.body.3127
  br label %for.inc.3138

for.inc.3138:                                     ; preds = %if.end.3137
  %1722 = load i32, i32* %j3097, align 4, !tbaa !26
  %inc3139 = add nsw i32 %1722, 1
  store i32 %inc3139, i32* %j3097, align 4, !tbaa !26
  br label %for.cond.3124

for.end.3140:                                     ; preds = %if.then.3136, %for.cond.3124
  %1723 = load i32, i32* %i, align 4, !tbaa !26
  %1724 = load i32, i32* %j3097, align 4, !tbaa !26
  %cmp3141 = icmp eq i32 %1723, %1724
  br i1 %cmp3141, label %if.then.3143, label %if.end.3153

if.then.3143:                                     ; preds = %for.end.3140
  %1725 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %memory3144 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1725, i32 0, i32 3
  %1726 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory3144, align 8, !tbaa !29
  %non_gc_memory3145 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %1726, i32 0, i32 3
  %1727 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory3145, align 8, !tbaa !30
  %procs3146 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %1727, i32 0, i32 1
  %free_object3147 = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs3146, i32 0, i32 2
  %1728 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %free_object3147, align 8, !tbaa !65
  %1729 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %memory3148 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1729, i32 0, i32 3
  %1730 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory3148, align 8, !tbaa !29
  %non_gc_memory3149 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %1730, i32 0, i32 3
  %1731 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory3149, align 8, !tbaa !30
  %1732 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom3150 = sext i32 %1732 to i64
  %extc3151 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %oldstc, i32 0, i32 4
  %arrayidx3152 = getelementptr inbounds [4 x float*], [4 x float*]* %extc3151, i32 0, i64 %idxprom3150
  %1733 = load float*, float** %arrayidx3152, align 8, !tbaa !1
  %1734 = bitcast float* %1733 to i8*
  call void %1728(%struct.gs_memory_s* %1731, i8* %1734, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.54, i32 0, i32 0)) #5
  br label %if.end.3153

if.end.3153:                                      ; preds = %if.then.3143, %for.end.3140
  br label %if.end.3154

if.end.3154:                                      ; preds = %if.end.3153, %land.lhs.true.3117, %land.lhs.true.3113, %land.lhs.true.3103, %for.body.3096
  %1735 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom3155 = sext i32 %1735 to i64
  %extv3156 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %oldstc, i32 0, i32 7
  %arrayidx3157 = getelementptr inbounds [4 x float*], [4 x float*]* %extv3156, i32 0, i64 %idxprom3155
  %1736 = load float*, float** %arrayidx3157, align 8, !tbaa !1
  %cmp3158 = icmp ne float* %1736, null
  br i1 %cmp3158, label %land.lhs.true.3160, label %if.end.3207

land.lhs.true.3160:                               ; preds = %if.end.3154
  %1737 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom3161 = sext i32 %1737 to i64
  %extv3162 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %oldstc, i32 0, i32 7
  %arrayidx3163 = getelementptr inbounds [4 x float*], [4 x float*]* %extv3162, i32 0, i64 %idxprom3161
  %1738 = load float*, float** %arrayidx3163, align 8, !tbaa !1
  %1739 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom3164 = sext i32 %1739 to i64
  %1740 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc3165 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1740, i32 0, i32 68
  %extv3166 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc3165, i32 0, i32 7
  %arrayidx3167 = getelementptr inbounds [4 x float*], [4 x float*]* %extv3166, i32 0, i64 %idxprom3164
  %1741 = load float*, float** %arrayidx3167, align 8, !tbaa !1
  %cmp3168 = icmp ne float* %1738, %1741
  br i1 %cmp3168, label %land.lhs.true.3170, label %if.end.3207

land.lhs.true.3170:                               ; preds = %land.lhs.true.3160
  %1742 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom3171 = sext i32 %1742 to i64
  %extv3172 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %oldstc, i32 0, i32 7
  %arrayidx3173 = getelementptr inbounds [4 x float*], [4 x float*]* %extv3172, i32 0, i64 %idxprom3171
  %1743 = load float*, float** %arrayidx3173, align 8, !tbaa !1
  %cmp3174 = icmp ne float* %1743, getelementptr inbounds ([2 x float], [2 x float]* @defext, i32 0, i32 0)
  br i1 %cmp3174, label %if.then.3176, label %if.end.3207

if.then.3176:                                     ; preds = %land.lhs.true.3170
  store i32 0, i32* %j3097, align 4, !tbaa !26
  br label %for.cond.3177

for.cond.3177:                                    ; preds = %for.inc.3191, %if.then.3176
  %1744 = load i32, i32* %j3097, align 4, !tbaa !26
  %1745 = load i32, i32* %i, align 4, !tbaa !26
  %cmp3178 = icmp slt i32 %1744, %1745
  br i1 %cmp3178, label %for.body.3180, label %for.end.3193

for.body.3180:                                    ; preds = %for.cond.3177
  %1746 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom3181 = sext i32 %1746 to i64
  %extv3182 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %oldstc, i32 0, i32 7
  %arrayidx3183 = getelementptr inbounds [4 x float*], [4 x float*]* %extv3182, i32 0, i64 %idxprom3181
  %1747 = load float*, float** %arrayidx3183, align 8, !tbaa !1
  %1748 = load i32, i32* %j3097, align 4, !tbaa !26
  %idxprom3184 = sext i32 %1748 to i64
  %extv3185 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %oldstc, i32 0, i32 7
  %arrayidx3186 = getelementptr inbounds [4 x float*], [4 x float*]* %extv3185, i32 0, i64 %idxprom3184
  %1749 = load float*, float** %arrayidx3186, align 8, !tbaa !1
  %cmp3187 = icmp eq float* %1747, %1749
  br i1 %cmp3187, label %if.then.3189, label %if.end.3190

if.then.3189:                                     ; preds = %for.body.3180
  br label %for.end.3193

if.end.3190:                                      ; preds = %for.body.3180
  br label %for.inc.3191

for.inc.3191:                                     ; preds = %if.end.3190
  %1750 = load i32, i32* %j3097, align 4, !tbaa !26
  %inc3192 = add nsw i32 %1750, 1
  store i32 %inc3192, i32* %j3097, align 4, !tbaa !26
  br label %for.cond.3177

for.end.3193:                                     ; preds = %if.then.3189, %for.cond.3177
  %1751 = load i32, i32* %i, align 4, !tbaa !26
  %1752 = load i32, i32* %j3097, align 4, !tbaa !26
  %cmp3194 = icmp eq i32 %1751, %1752
  br i1 %cmp3194, label %if.then.3196, label %if.end.3206

if.then.3196:                                     ; preds = %for.end.3193
  %1753 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %memory3197 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1753, i32 0, i32 3
  %1754 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory3197, align 8, !tbaa !29
  %non_gc_memory3198 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %1754, i32 0, i32 3
  %1755 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory3198, align 8, !tbaa !30
  %procs3199 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %1755, i32 0, i32 1
  %free_object3200 = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs3199, i32 0, i32 2
  %1756 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %free_object3200, align 8, !tbaa !65
  %1757 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %memory3201 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1757, i32 0, i32 3
  %1758 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory3201, align 8, !tbaa !29
  %non_gc_memory3202 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %1758, i32 0, i32 3
  %1759 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory3202, align 8, !tbaa !30
  %1760 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom3203 = sext i32 %1760 to i64
  %extv3204 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %oldstc, i32 0, i32 7
  %arrayidx3205 = getelementptr inbounds [4 x float*], [4 x float*]* %extv3204, i32 0, i64 %idxprom3203
  %1761 = load float*, float** %arrayidx3205, align 8, !tbaa !1
  %1762 = bitcast float* %1761 to i8*
  call void %1756(%struct.gs_memory_s* %1759, i8* %1762, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.54, i32 0, i32 0)) #5
  br label %if.end.3206

if.end.3206:                                      ; preds = %if.then.3196, %for.end.3193
  br label %if.end.3207

if.end.3207:                                      ; preds = %if.end.3206, %land.lhs.true.3170, %land.lhs.true.3160, %if.end.3154
  %1763 = bitcast i32* %j3097 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %1763) #2
  br label %for.inc.3208

for.inc.3208:                                     ; preds = %if.end.3207
  %1764 = load i32, i32* %i, align 4, !tbaa !26
  %inc3209 = add nsw i32 %1764, 1
  store i32 %inc3209, i32* %i, align 4, !tbaa !26
  br label %for.cond.3093

for.end.3210:                                     ; preds = %for.cond.3093
  %1765 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %is_open = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1765, i32 0, i32 9
  %1766 = load i32, i32* %is_open, align 4, !tbaa !108
  %tobool3211 = icmp ne i32 %1766, 0
  br i1 %tobool3211, label %if.then.3212, label %if.end.3291

if.then.3212:                                     ; preds = %for.end.3210
  %1767 = bitcast i32* %doclose to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1767) #2
  store i32 0, i32* %doclose, align 4, !tbaa !26
  %1768 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %color_info3213 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1768, i32 0, i32 11
  %num_components3214 = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info3213, i32 0, i32 1
  %1769 = load i32, i32* %num_components3214, align 4, !tbaa !40
  %num_components3215 = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %oldcolor, i32 0, i32 1
  %1770 = load i32, i32* %num_components3215, align 4, !tbaa !95
  %cmp3216 = icmp ne i32 %1769, %1770
  br i1 %cmp3216, label %if.then.3238, label %lor.lhs.false.3218

lor.lhs.false.3218:                               ; preds = %if.then.3212
  %1771 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %color_info3219 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1771, i32 0, i32 11
  %depth3220 = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info3219, i32 0, i32 3
  %1772 = load i16, i16* %depth3220, align 2, !tbaa !54
  %conv3221 = zext i16 %1772 to i32
  %depth3222 = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %oldcolor, i32 0, i32 3
  %1773 = load i16, i16* %depth3222, align 2, !tbaa !109
  %conv3223 = zext i16 %1773 to i32
  %cmp3224 = icmp ne i32 %conv3221, %conv3223
  br i1 %cmp3224, label %if.then.3238, label %lor.lhs.false.3226

lor.lhs.false.3226:                               ; preds = %lor.lhs.false.3218
  %1774 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc3227 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1774, i32 0, i32 68
  %bits3228 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc3227, i32 0, i32 1
  %1775 = load i32, i32* %bits3228, align 4, !tbaa !44
  %bits3229 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %oldstc, i32 0, i32 1
  %1776 = load i32, i32* %bits3229, align 4, !tbaa !110
  %cmp3230 = icmp ne i32 %1775, %1776
  br i1 %cmp3230, label %if.then.3238, label %lor.lhs.false.3232

lor.lhs.false.3232:                               ; preds = %lor.lhs.false.3226
  %1777 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc3233 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1777, i32 0, i32 68
  %dither3234 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc3233, i32 0, i32 2
  %1778 = load %struct.stc_dither_s*, %struct.stc_dither_s** %dither3234, align 8, !tbaa !41
  %dither3235 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %oldstc, i32 0, i32 2
  %1779 = load %struct.stc_dither_s*, %struct.stc_dither_s** %dither3235, align 8, !tbaa !96
  %cmp3236 = icmp ne %struct.stc_dither_s* %1778, %1779
  br i1 %cmp3236, label %if.then.3238, label %if.end.3239

if.then.3238:                                     ; preds = %lor.lhs.false.3232, %lor.lhs.false.3226, %lor.lhs.false.3218, %if.then.3212
  store i32 1, i32* %doclose, align 4, !tbaa !26
  br label %if.end.3239

if.end.3239:                                      ; preds = %if.then.3238, %lor.lhs.false.3232
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond.3240

for.cond.3240:                                    ; preds = %for.inc.3268, %if.end.3239
  %1780 = load i32, i32* %i, align 4, !tbaa !26
  %1781 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %color_info3241 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1781, i32 0, i32 11
  %num_components3242 = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info3241, i32 0, i32 1
  %1782 = load i32, i32* %num_components3242, align 4, !tbaa !40
  %cmp3243 = icmp slt i32 %1780, %1782
  br i1 %cmp3243, label %for.body.3245, label %for.end.3270

for.body.3245:                                    ; preds = %for.cond.3240
  %1783 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom3246 = sext i32 %1783 to i64
  %1784 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc3247 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1784, i32 0, i32 68
  %extv3248 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc3247, i32 0, i32 7
  %arrayidx3249 = getelementptr inbounds [4 x float*], [4 x float*]* %extv3248, i32 0, i64 %idxprom3246
  %1785 = load float*, float** %arrayidx3249, align 8, !tbaa !1
  %1786 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom3250 = sext i32 %1786 to i64
  %extv3251 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %oldstc, i32 0, i32 7
  %arrayidx3252 = getelementptr inbounds [4 x float*], [4 x float*]* %extv3251, i32 0, i64 %idxprom3250
  %1787 = load float*, float** %arrayidx3252, align 8, !tbaa !1
  %cmp3253 = icmp ne float* %1785, %1787
  br i1 %cmp3253, label %if.then.3255, label %if.end.3256

if.then.3255:                                     ; preds = %for.body.3245
  store i32 1, i32* %doclose, align 4, !tbaa !26
  br label %if.end.3256

if.end.3256:                                      ; preds = %if.then.3255, %for.body.3245
  %1788 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom3257 = sext i32 %1788 to i64
  %1789 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc3258 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1789, i32 0, i32 68
  %extc3259 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc3258, i32 0, i32 4
  %arrayidx3260 = getelementptr inbounds [4 x float*], [4 x float*]* %extc3259, i32 0, i64 %idxprom3257
  %1790 = load float*, float** %arrayidx3260, align 8, !tbaa !1
  %1791 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom3261 = sext i32 %1791 to i64
  %extc3262 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %oldstc, i32 0, i32 4
  %arrayidx3263 = getelementptr inbounds [4 x float*], [4 x float*]* %extc3262, i32 0, i64 %idxprom3261
  %1792 = load float*, float** %arrayidx3263, align 8, !tbaa !1
  %cmp3264 = icmp ne float* %1790, %1792
  br i1 %cmp3264, label %if.then.3266, label %if.end.3267

if.then.3266:                                     ; preds = %if.end.3256
  store i32 1, i32* %doclose, align 4, !tbaa !26
  br label %if.end.3267

if.end.3267:                                      ; preds = %if.then.3266, %if.end.3256
  br label %for.inc.3268

for.inc.3268:                                     ; preds = %if.end.3267
  %1793 = load i32, i32* %i, align 4, !tbaa !26
  %inc3269 = add nsw i32 %1793, 1
  store i32 %inc3269, i32* %i, align 4, !tbaa !26
  br label %for.cond.3240

for.end.3270:                                     ; preds = %for.cond.3240
  %1794 = load i32, i32* %doclose, align 4, !tbaa !26
  %tobool3271 = icmp ne i32 %1794, 0
  br i1 %tobool3271, label %if.then.3272, label %if.end.3290

if.then.3272:                                     ; preds = %for.end.3270
  %1795 = load %struct.gx_device_s*, %struct.gx_device_s** %pdev.addr, align 8, !tbaa !1
  %memory3273 = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %1795, i32 0, i32 3
  %1796 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory3273, align 8, !tbaa !84
  call void @stc_freedata(%struct.gs_memory_s* %1796, %struct.stc_s* %oldstc) #5
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond.3274

for.cond.3274:                                    ; preds = %for.inc.3286, %if.then.3272
  %1797 = load i32, i32* %i, align 4, !tbaa !26
  %cmp3275 = icmp slt i32 %1797, 4
  br i1 %cmp3275, label %for.body.3277, label %for.end.3288

for.body.3277:                                    ; preds = %for.cond.3274
  %1798 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom3278 = sext i32 %1798 to i64
  %1799 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc3279 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1799, i32 0, i32 68
  %vals3280 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc3279, i32 0, i32 9
  %arrayidx3281 = getelementptr inbounds [4 x i8*], [4 x i8*]* %vals3280, i32 0, i64 %idxprom3278
  store i8* null, i8** %arrayidx3281, align 8, !tbaa !1
  %1800 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom3282 = sext i32 %1800 to i64
  %1801 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc3283 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1801, i32 0, i32 68
  %code3284 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc3283, i32 0, i32 6
  %arrayidx3285 = getelementptr inbounds [4 x i16*], [4 x i16*]* %code3284, i32 0, i64 %idxprom3282
  store i16* null, i16** %arrayidx3285, align 8, !tbaa !1
  br label %for.inc.3286

for.inc.3286:                                     ; preds = %for.body.3277
  %1802 = load i32, i32* %i, align 4, !tbaa !26
  %inc3287 = add nsw i32 %1802, 1
  store i32 %inc3287, i32* %i, align 4, !tbaa !26
  br label %for.cond.3274

for.end.3288:                                     ; preds = %for.cond.3274
  %1803 = load %struct.gx_device_s*, %struct.gx_device_s** %pdev.addr, align 8, !tbaa !1
  %call3289 = call i32 @gs_closedevice(%struct.gx_device_s* %1803) #5
  br label %if.end.3290

if.end.3290:                                      ; preds = %for.end.3288, %for.end.3270
  %1804 = bitcast i32* %doclose to i8*
  call void @llvm.lifetime.end(i64 4, i8* %1804) #2
  br label %if.end.3291

if.end.3291:                                      ; preds = %if.end.3290, %for.end.3210
  br label %if.end.3292

if.end.3292:                                      ; preds = %if.end.3291, %if.then.3013
  %1805 = load i32, i32* %error, align 4, !tbaa !26
  %1806 = bitcast %struct.stc_s* %oldstc to i8*
  call void @llvm.lifetime.end(i64 408, i8* %1806) #2
  %1807 = bitcast %struct.gx_device_color_info_s* %oldcolor to i8*
  call void @llvm.lifetime.end(i64 720, i8* %1807) #2
  %1808 = bitcast %struct.stcolor_device_s** %sd to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1808) #2
  %1809 = bitcast %struct.gs_param_float_array_s* %pfa to i8*
  call void @llvm.lifetime.end(i64 16, i8* %1809) #2
  %1810 = bitcast %struct.gs_param_string_array_s* %psa to i8*
  call void @llvm.lifetime.end(i64 16, i8* %1810) #2
  %1811 = bitcast %struct.gs_param_string_s* %ps to i8*
  call void @llvm.lifetime.end(i64 16, i8* %1811) #2
  %1812 = bitcast float** %fp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1812) #2
  %1813 = bitcast float* %fv to i8*
  call void @llvm.lifetime.end(i64 4, i8* %1813) #2
  %1814 = bitcast i32* %b3 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %1814) #2
  %1815 = bitcast i32* %b2 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %1815) #2
  %1816 = bitcast i32* %b1 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %1816) #2
  %1817 = bitcast i32* %l to i8*
  call void @llvm.lifetime.end(i64 4, i8* %1817) #2
  %1818 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %1818) #2
  %1819 = bitcast i32* %error to i8*
  call void @llvm.lifetime.end(i64 4, i8* %1819) #2
  %1820 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %1820) #2
  ret i32 %1805
}

; Function Attrs: nounwind uwtable
define internal i64 @stc_map_cmyk_color(%struct.gx_device_s* %pdev, i16* %cv) #1 {
entry:
  %pdev.addr = alloca %struct.gx_device_s*, align 8
  %cv.addr = alloca i16*, align 8
  %sd = alloca %struct.stcolor_device_s*, align 8
  %shift = alloca i32, align 4
  %rv = alloca i64, align 8
  %c = alloca i16, align 2
  %m = alloca i16, align 2
  %y = alloca i16, align 2
  %k = alloca i16, align 2
  %a = alloca float*, align 8
  %fc = alloca float, align 4
  %fm = alloca float, align 4
  %fy = alloca float, align 4
  %fk = alloca float, align 4
  %fv = alloca float, align 4
  store %struct.gx_device_s* %pdev, %struct.gx_device_s** %pdev.addr, align 8, !tbaa !1
  store i16* %cv, i16** %cv.addr, align 8, !tbaa !1
  %0 = bitcast %struct.stcolor_device_s** %sd to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = load %struct.gx_device_s*, %struct.gx_device_s** %pdev.addr, align 8, !tbaa !1
  %2 = bitcast %struct.gx_device_s* %1 to %struct.stcolor_device_s*
  store %struct.stcolor_device_s* %2, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %3 = bitcast i32* %shift to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #2
  %4 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %color_info = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %4, i32 0, i32 11
  %depth = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info, i32 0, i32 3
  %5 = load i16, i16* %depth, align 2, !tbaa !54
  %conv = zext i16 %5 to i32
  %cmp = icmp eq i32 %conv, 32
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  %6 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %6, i32 0, i32 68
  %bits = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc, i32 0, i32 1
  %7 = load i32, i32* %bits, align 4, !tbaa !44
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 8, %cond.true ], [ %7, %cond.false ]
  store i32 %cond, i32* %shift, align 4, !tbaa !26
  %8 = bitcast i64* %rv to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8) #2
  store i64 0, i64* %rv, align 8, !tbaa !25
  %9 = bitcast i16* %c to i8*
  call void @llvm.lifetime.start(i64 2, i8* %9) #2
  %10 = load i16*, i16** %cv.addr, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds i16, i16* %10, i64 0
  %11 = load i16, i16* %arrayidx, align 2, !tbaa !73
  store i16 %11, i16* %c, align 2, !tbaa !73
  %12 = bitcast i16* %m to i8*
  call void @llvm.lifetime.start(i64 2, i8* %12) #2
  %13 = load i16*, i16** %cv.addr, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds i16, i16* %13, i64 1
  %14 = load i16, i16* %arrayidx2, align 2, !tbaa !73
  store i16 %14, i16* %m, align 2, !tbaa !73
  %15 = bitcast i16* %y to i8*
  call void @llvm.lifetime.start(i64 2, i8* %15) #2
  %16 = load i16*, i16** %cv.addr, align 8, !tbaa !1
  %arrayidx3 = getelementptr inbounds i16, i16* %16, i64 2
  %17 = load i16, i16* %arrayidx3, align 2, !tbaa !73
  store i16 %17, i16* %y, align 2, !tbaa !73
  %18 = bitcast i16* %k to i8*
  call void @llvm.lifetime.start(i64 2, i8* %18) #2
  %19 = load i16*, i16** %cv.addr, align 8, !tbaa !1
  %arrayidx4 = getelementptr inbounds i16, i16* %19, i64 3
  %20 = load i16, i16* %arrayidx4, align 2, !tbaa !73
  store i16 %20, i16* %k, align 2, !tbaa !73
  %21 = load i16, i16* %c, align 2, !tbaa !73
  %conv5 = zext i16 %21 to i32
  %22 = load i16, i16* %m, align 2, !tbaa !73
  %conv6 = zext i16 %22 to i32
  %cmp7 = icmp eq i32 %conv5, %conv6
  br i1 %cmp7, label %land.lhs.true, label %if.else.34

land.lhs.true:                                    ; preds = %cond.end
  %23 = load i16, i16* %m, align 2, !tbaa !73
  %conv9 = zext i16 %23 to i32
  %24 = load i16, i16* %y, align 2, !tbaa !73
  %conv10 = zext i16 %24 to i32
  %cmp11 = icmp eq i32 %conv9, %conv10
  br i1 %cmp11, label %if.then, label %if.else.34

if.then:                                          ; preds = %land.lhs.true
  %25 = load i16, i16* %c, align 2, !tbaa !73
  %conv13 = zext i16 %25 to i32
  %26 = load i16, i16* %k, align 2, !tbaa !73
  %conv14 = zext i16 %26 to i32
  %cmp15 = icmp sgt i32 %conv13, %conv14
  br i1 %cmp15, label %cond.true.17, label %cond.false.19

cond.true.17:                                     ; preds = %if.then
  %27 = load i16, i16* %c, align 2, !tbaa !73
  %conv18 = zext i16 %27 to i32
  br label %cond.end.21

cond.false.19:                                    ; preds = %if.then
  %28 = load i16, i16* %k, align 2, !tbaa !73
  %conv20 = zext i16 %28 to i32
  br label %cond.end.21

cond.end.21:                                      ; preds = %cond.false.19, %cond.true.17
  %cond22 = phi i32 [ %conv18, %cond.true.17 ], [ %conv20, %cond.false.19 ]
  %conv23 = trunc i32 %cond22 to i16
  store i16 %conv23, i16* %k, align 2, !tbaa !73
  store i16 0, i16* %y, align 2, !tbaa !73
  store i16 0, i16* %m, align 2, !tbaa !73
  store i16 0, i16* %c, align 2, !tbaa !73
  %29 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc24 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %29, i32 0, i32 68
  %bits25 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc24, i32 0, i32 1
  %30 = load i32, i32* %bits25, align 4, !tbaa !44
  %cmp26 = icmp eq i32 %30, 8
  br i1 %cmp26, label %land.lhs.true.28, label %if.else

land.lhs.true.28:                                 ; preds = %cond.end.21
  %31 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc29 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %31, i32 0, i32 68
  %dither = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc29, i32 0, i32 2
  %32 = load %struct.stc_dither_s*, %struct.stc_dither_s** %dither, align 8, !tbaa !41
  %flags = getelementptr inbounds %struct.stc_dither_s, %struct.stc_dither_s* %32, i32 0, i32 2
  %33 = load i32, i32* %flags, align 4, !tbaa !42
  %and = and i32 %33, 24
  %cmp30 = icmp eq i32 %and, 8
  br i1 %cmp30, label %if.then.32, label %if.else

if.then.32:                                       ; preds = %land.lhs.true.28
  %34 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %35 = load i16, i16* %k, align 2, !tbaa !73
  %call = call zeroext i16 @stc_truncate1(%struct.stcolor_device_s* %34, i32 3, i16 zeroext %35) #5
  store i16 %call, i16* %k, align 2, !tbaa !73
  br label %if.end

if.else:                                          ; preds = %land.lhs.true.28, %cond.end.21
  %36 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %37 = load i16, i16* %k, align 2, !tbaa !73
  %call33 = call zeroext i16 @stc_truncate(%struct.stcolor_device_s* %36, i32 3, i16 zeroext %37) #5
  store i16 %call33, i16* %k, align 2, !tbaa !73
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.32
  br label %if.end.241

if.else.34:                                       ; preds = %land.lhs.true, %cond.end
  %38 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc35 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %38, i32 0, i32 68
  %am = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc35, i32 0, i32 3
  %39 = load float*, float** %am, align 8, !tbaa !86
  %cmp36 = icmp ne float* %39, null
  br i1 %cmp36, label %if.then.38, label %if.else.190

if.then.38:                                       ; preds = %if.else.34
  %40 = bitcast float** %a to i8*
  call void @llvm.lifetime.start(i64 8, i8* %40) #2
  %41 = bitcast float* %fc to i8*
  call void @llvm.lifetime.start(i64 4, i8* %41) #2
  %42 = bitcast float* %fm to i8*
  call void @llvm.lifetime.start(i64 4, i8* %42) #2
  %43 = bitcast float* %fy to i8*
  call void @llvm.lifetime.start(i64 4, i8* %43) #2
  %44 = bitcast float* %fk to i8*
  call void @llvm.lifetime.start(i64 4, i8* %44) #2
  %45 = bitcast float* %fv to i8*
  call void @llvm.lifetime.start(i64 4, i8* %45) #2
  %46 = load i16, i16* %k, align 2, !tbaa !73
  %conv39 = zext i16 %46 to i32
  %cmp40 = icmp eq i32 %conv39, 0
  br i1 %cmp40, label %if.then.42, label %if.end.78

if.then.42:                                       ; preds = %if.then.38
  %47 = load i16, i16* %c, align 2, !tbaa !73
  %conv43 = zext i16 %47 to i32
  %48 = load i16, i16* %m, align 2, !tbaa !73
  %conv44 = zext i16 %48 to i32
  %cmp45 = icmp slt i32 %conv43, %conv44
  br i1 %cmp45, label %cond.true.47, label %cond.false.49

cond.true.47:                                     ; preds = %if.then.42
  %49 = load i16, i16* %c, align 2, !tbaa !73
  %conv48 = zext i16 %49 to i32
  br label %cond.end.51

cond.false.49:                                    ; preds = %if.then.42
  %50 = load i16, i16* %m, align 2, !tbaa !73
  %conv50 = zext i16 %50 to i32
  br label %cond.end.51

cond.end.51:                                      ; preds = %cond.false.49, %cond.true.47
  %cond52 = phi i32 [ %conv48, %cond.true.47 ], [ %conv50, %cond.false.49 ]
  %conv53 = trunc i32 %cond52 to i16
  store i16 %conv53, i16* %k, align 2, !tbaa !73
  %51 = load i16, i16* %k, align 2, !tbaa !73
  %conv54 = zext i16 %51 to i32
  %52 = load i16, i16* %y, align 2, !tbaa !73
  %conv55 = zext i16 %52 to i32
  %cmp56 = icmp slt i32 %conv54, %conv55
  br i1 %cmp56, label %cond.true.58, label %cond.false.60

cond.true.58:                                     ; preds = %cond.end.51
  %53 = load i16, i16* %k, align 2, !tbaa !73
  %conv59 = zext i16 %53 to i32
  br label %cond.end.62

cond.false.60:                                    ; preds = %cond.end.51
  %54 = load i16, i16* %y, align 2, !tbaa !73
  %conv61 = zext i16 %54 to i32
  br label %cond.end.62

cond.end.62:                                      ; preds = %cond.false.60, %cond.true.58
  %cond63 = phi i32 [ %conv59, %cond.true.58 ], [ %conv61, %cond.false.60 ]
  %conv64 = trunc i32 %cond63 to i16
  store i16 %conv64, i16* %k, align 2, !tbaa !73
  %55 = load i16, i16* %k, align 2, !tbaa !73
  %tobool = icmp ne i16 %55, 0
  br i1 %tobool, label %if.then.65, label %if.end.77

if.then.65:                                       ; preds = %cond.end.62
  %56 = load i16, i16* %k, align 2, !tbaa !73
  %conv66 = zext i16 %56 to i32
  %57 = load i16, i16* %c, align 2, !tbaa !73
  %conv67 = zext i16 %57 to i32
  %sub = sub nsw i32 %conv67, %conv66
  %conv68 = trunc i32 %sub to i16
  store i16 %conv68, i16* %c, align 2, !tbaa !73
  %58 = load i16, i16* %k, align 2, !tbaa !73
  %conv69 = zext i16 %58 to i32
  %59 = load i16, i16* %m, align 2, !tbaa !73
  %conv70 = zext i16 %59 to i32
  %sub71 = sub nsw i32 %conv70, %conv69
  %conv72 = trunc i32 %sub71 to i16
  store i16 %conv72, i16* %m, align 2, !tbaa !73
  %60 = load i16, i16* %k, align 2, !tbaa !73
  %conv73 = zext i16 %60 to i32
  %61 = load i16, i16* %y, align 2, !tbaa !73
  %conv74 = zext i16 %61 to i32
  %sub75 = sub nsw i32 %conv74, %conv73
  %conv76 = trunc i32 %sub75 to i16
  store i16 %conv76, i16* %y, align 2, !tbaa !73
  br label %if.end.77

if.end.77:                                        ; preds = %if.then.65, %cond.end.62
  br label %if.end.78

if.end.78:                                        ; preds = %if.end.77, %if.then.38
  %62 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc79 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %62, i32 0, i32 68
  %am80 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc79, i32 0, i32 3
  %63 = load float*, float** %am80, align 8, !tbaa !86
  store float* %63, float** %a, align 8, !tbaa !1
  %64 = load i16, i16* %c, align 2, !tbaa !73
  %conv81 = uitofp i16 %64 to float
  store float %conv81, float* %fc, align 4, !tbaa !37
  %65 = load i16, i16* %m, align 2, !tbaa !73
  %conv82 = uitofp i16 %65 to float
  store float %conv82, float* %fm, align 4, !tbaa !37
  %66 = load i16, i16* %y, align 2, !tbaa !73
  %conv83 = uitofp i16 %66 to float
  store float %conv83, float* %fy, align 4, !tbaa !37
  %67 = load i16, i16* %k, align 2, !tbaa !73
  %conv84 = uitofp i16 %67 to float
  store float %conv84, float* %fk, align 4, !tbaa !37
  %68 = load float*, float** %a, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds float, float* %68, i32 1
  store float* %incdec.ptr, float** %a, align 8, !tbaa !1
  %69 = load float, float* %68, align 4, !tbaa !37
  %70 = load float, float* %fc, align 4, !tbaa !37
  %mul = fmul float %69, %70
  store float %mul, float* %fv, align 4, !tbaa !37
  %71 = load float*, float** %a, align 8, !tbaa !1
  %incdec.ptr85 = getelementptr inbounds float, float* %71, i32 1
  store float* %incdec.ptr85, float** %a, align 8, !tbaa !1
  %72 = load float, float* %71, align 4, !tbaa !37
  %73 = load float, float* %fm, align 4, !tbaa !37
  %mul86 = fmul float %72, %73
  %74 = load float, float* %fv, align 4, !tbaa !37
  %add = fadd float %74, %mul86
  store float %add, float* %fv, align 4, !tbaa !37
  %75 = load float*, float** %a, align 8, !tbaa !1
  %incdec.ptr87 = getelementptr inbounds float, float* %75, i32 1
  store float* %incdec.ptr87, float** %a, align 8, !tbaa !1
  %76 = load float, float* %75, align 4, !tbaa !37
  %77 = load float, float* %fy, align 4, !tbaa !37
  %mul88 = fmul float %76, %77
  %78 = load float, float* %fv, align 4, !tbaa !37
  %add89 = fadd float %78, %mul88
  store float %add89, float* %fv, align 4, !tbaa !37
  %79 = load float*, float** %a, align 8, !tbaa !1
  %incdec.ptr90 = getelementptr inbounds float, float* %79, i32 1
  store float* %incdec.ptr90, float** %a, align 8, !tbaa !1
  %80 = load float, float* %79, align 4, !tbaa !37
  %81 = load float, float* %fk, align 4, !tbaa !37
  %mul91 = fmul float %80, %81
  %82 = load float, float* %fv, align 4, !tbaa !37
  %add92 = fadd float %82, %mul91
  store float %add92, float* %fv, align 4, !tbaa !37
  %83 = load float, float* %fv, align 4, !tbaa !37
  %conv93 = fpext float %83 to double
  %cmp94 = fcmp olt double %conv93, 0.000000e+00
  br i1 %cmp94, label %if.then.96, label %if.else.97

if.then.96:                                       ; preds = %if.end.78
  store i16 0, i16* %c, align 2, !tbaa !73
  br label %if.end.108

if.else.97:                                       ; preds = %if.end.78
  %84 = load float, float* %fv, align 4, !tbaa !37
  %conv98 = fpext float %84 to double
  %add99 = fadd double %conv98, 5.000000e-01
  %cmp100 = fcmp ogt double %add99, 6.553500e+04
  br i1 %cmp100, label %if.then.102, label %if.else.103

if.then.102:                                      ; preds = %if.else.97
  store i16 -1, i16* %c, align 2, !tbaa !73
  br label %if.end.107

if.else.103:                                      ; preds = %if.else.97
  %85 = load float, float* %fv, align 4, !tbaa !37
  %conv104 = fpext float %85 to double
  %add105 = fadd double %conv104, 5.000000e-01
  %conv106 = fptoui double %add105 to i16
  store i16 %conv106, i16* %c, align 2, !tbaa !73
  br label %if.end.107

if.end.107:                                       ; preds = %if.else.103, %if.then.102
  br label %if.end.108

if.end.108:                                       ; preds = %if.end.107, %if.then.96
  %86 = load float*, float** %a, align 8, !tbaa !1
  %incdec.ptr109 = getelementptr inbounds float, float* %86, i32 1
  store float* %incdec.ptr109, float** %a, align 8, !tbaa !1
  %87 = load float, float* %86, align 4, !tbaa !37
  %88 = load float, float* %fc, align 4, !tbaa !37
  %mul110 = fmul float %87, %88
  store float %mul110, float* %fv, align 4, !tbaa !37
  %89 = load float*, float** %a, align 8, !tbaa !1
  %incdec.ptr111 = getelementptr inbounds float, float* %89, i32 1
  store float* %incdec.ptr111, float** %a, align 8, !tbaa !1
  %90 = load float, float* %89, align 4, !tbaa !37
  %91 = load float, float* %fm, align 4, !tbaa !37
  %mul112 = fmul float %90, %91
  %92 = load float, float* %fv, align 4, !tbaa !37
  %add113 = fadd float %92, %mul112
  store float %add113, float* %fv, align 4, !tbaa !37
  %93 = load float*, float** %a, align 8, !tbaa !1
  %incdec.ptr114 = getelementptr inbounds float, float* %93, i32 1
  store float* %incdec.ptr114, float** %a, align 8, !tbaa !1
  %94 = load float, float* %93, align 4, !tbaa !37
  %95 = load float, float* %fy, align 4, !tbaa !37
  %mul115 = fmul float %94, %95
  %96 = load float, float* %fv, align 4, !tbaa !37
  %add116 = fadd float %96, %mul115
  store float %add116, float* %fv, align 4, !tbaa !37
  %97 = load float*, float** %a, align 8, !tbaa !1
  %incdec.ptr117 = getelementptr inbounds float, float* %97, i32 1
  store float* %incdec.ptr117, float** %a, align 8, !tbaa !1
  %98 = load float, float* %97, align 4, !tbaa !37
  %99 = load float, float* %fk, align 4, !tbaa !37
  %mul118 = fmul float %98, %99
  %100 = load float, float* %fv, align 4, !tbaa !37
  %add119 = fadd float %100, %mul118
  store float %add119, float* %fv, align 4, !tbaa !37
  %101 = load float, float* %fv, align 4, !tbaa !37
  %conv120 = fpext float %101 to double
  %cmp121 = fcmp olt double %conv120, 0.000000e+00
  br i1 %cmp121, label %if.then.123, label %if.else.124

if.then.123:                                      ; preds = %if.end.108
  store i16 0, i16* %m, align 2, !tbaa !73
  br label %if.end.135

if.else.124:                                      ; preds = %if.end.108
  %102 = load float, float* %fv, align 4, !tbaa !37
  %conv125 = fpext float %102 to double
  %add126 = fadd double %conv125, 5.000000e-01
  %cmp127 = fcmp ogt double %add126, 6.553500e+04
  br i1 %cmp127, label %if.then.129, label %if.else.130

if.then.129:                                      ; preds = %if.else.124
  store i16 -1, i16* %m, align 2, !tbaa !73
  br label %if.end.134

if.else.130:                                      ; preds = %if.else.124
  %103 = load float, float* %fv, align 4, !tbaa !37
  %conv131 = fpext float %103 to double
  %add132 = fadd double %conv131, 5.000000e-01
  %conv133 = fptoui double %add132 to i16
  store i16 %conv133, i16* %m, align 2, !tbaa !73
  br label %if.end.134

if.end.134:                                       ; preds = %if.else.130, %if.then.129
  br label %if.end.135

if.end.135:                                       ; preds = %if.end.134, %if.then.123
  %104 = load float*, float** %a, align 8, !tbaa !1
  %incdec.ptr136 = getelementptr inbounds float, float* %104, i32 1
  store float* %incdec.ptr136, float** %a, align 8, !tbaa !1
  %105 = load float, float* %104, align 4, !tbaa !37
  %106 = load float, float* %fc, align 4, !tbaa !37
  %mul137 = fmul float %105, %106
  store float %mul137, float* %fv, align 4, !tbaa !37
  %107 = load float*, float** %a, align 8, !tbaa !1
  %incdec.ptr138 = getelementptr inbounds float, float* %107, i32 1
  store float* %incdec.ptr138, float** %a, align 8, !tbaa !1
  %108 = load float, float* %107, align 4, !tbaa !37
  %109 = load float, float* %fm, align 4, !tbaa !37
  %mul139 = fmul float %108, %109
  %110 = load float, float* %fv, align 4, !tbaa !37
  %add140 = fadd float %110, %mul139
  store float %add140, float* %fv, align 4, !tbaa !37
  %111 = load float*, float** %a, align 8, !tbaa !1
  %incdec.ptr141 = getelementptr inbounds float, float* %111, i32 1
  store float* %incdec.ptr141, float** %a, align 8, !tbaa !1
  %112 = load float, float* %111, align 4, !tbaa !37
  %113 = load float, float* %fy, align 4, !tbaa !37
  %mul142 = fmul float %112, %113
  %114 = load float, float* %fv, align 4, !tbaa !37
  %add143 = fadd float %114, %mul142
  store float %add143, float* %fv, align 4, !tbaa !37
  %115 = load float*, float** %a, align 8, !tbaa !1
  %incdec.ptr144 = getelementptr inbounds float, float* %115, i32 1
  store float* %incdec.ptr144, float** %a, align 8, !tbaa !1
  %116 = load float, float* %115, align 4, !tbaa !37
  %117 = load float, float* %fk, align 4, !tbaa !37
  %mul145 = fmul float %116, %117
  %118 = load float, float* %fv, align 4, !tbaa !37
  %add146 = fadd float %118, %mul145
  store float %add146, float* %fv, align 4, !tbaa !37
  %119 = load float, float* %fv, align 4, !tbaa !37
  %conv147 = fpext float %119 to double
  %cmp148 = fcmp olt double %conv147, 0.000000e+00
  br i1 %cmp148, label %if.then.150, label %if.else.151

if.then.150:                                      ; preds = %if.end.135
  store i16 0, i16* %y, align 2, !tbaa !73
  br label %if.end.162

if.else.151:                                      ; preds = %if.end.135
  %120 = load float, float* %fv, align 4, !tbaa !37
  %conv152 = fpext float %120 to double
  %add153 = fadd double %conv152, 5.000000e-01
  %cmp154 = fcmp ogt double %add153, 6.553500e+04
  br i1 %cmp154, label %if.then.156, label %if.else.157

if.then.156:                                      ; preds = %if.else.151
  store i16 -1, i16* %y, align 2, !tbaa !73
  br label %if.end.161

if.else.157:                                      ; preds = %if.else.151
  %121 = load float, float* %fv, align 4, !tbaa !37
  %conv158 = fpext float %121 to double
  %add159 = fadd double %conv158, 5.000000e-01
  %conv160 = fptoui double %add159 to i16
  store i16 %conv160, i16* %y, align 2, !tbaa !73
  br label %if.end.161

if.end.161:                                       ; preds = %if.else.157, %if.then.156
  br label %if.end.162

if.end.162:                                       ; preds = %if.end.161, %if.then.150
  %122 = load float*, float** %a, align 8, !tbaa !1
  %incdec.ptr163 = getelementptr inbounds float, float* %122, i32 1
  store float* %incdec.ptr163, float** %a, align 8, !tbaa !1
  %123 = load float, float* %122, align 4, !tbaa !37
  %124 = load float, float* %fc, align 4, !tbaa !37
  %mul164 = fmul float %123, %124
  store float %mul164, float* %fv, align 4, !tbaa !37
  %125 = load float*, float** %a, align 8, !tbaa !1
  %incdec.ptr165 = getelementptr inbounds float, float* %125, i32 1
  store float* %incdec.ptr165, float** %a, align 8, !tbaa !1
  %126 = load float, float* %125, align 4, !tbaa !37
  %127 = load float, float* %fm, align 4, !tbaa !37
  %mul166 = fmul float %126, %127
  %128 = load float, float* %fv, align 4, !tbaa !37
  %add167 = fadd float %128, %mul166
  store float %add167, float* %fv, align 4, !tbaa !37
  %129 = load float*, float** %a, align 8, !tbaa !1
  %incdec.ptr168 = getelementptr inbounds float, float* %129, i32 1
  store float* %incdec.ptr168, float** %a, align 8, !tbaa !1
  %130 = load float, float* %129, align 4, !tbaa !37
  %131 = load float, float* %fy, align 4, !tbaa !37
  %mul169 = fmul float %130, %131
  %132 = load float, float* %fv, align 4, !tbaa !37
  %add170 = fadd float %132, %mul169
  store float %add170, float* %fv, align 4, !tbaa !37
  %133 = load float*, float** %a, align 8, !tbaa !1
  %incdec.ptr171 = getelementptr inbounds float, float* %133, i32 1
  store float* %incdec.ptr171, float** %a, align 8, !tbaa !1
  %134 = load float, float* %133, align 4, !tbaa !37
  %135 = load float, float* %fk, align 4, !tbaa !37
  %mul172 = fmul float %134, %135
  %136 = load float, float* %fv, align 4, !tbaa !37
  %add173 = fadd float %136, %mul172
  store float %add173, float* %fv, align 4, !tbaa !37
  %137 = load float, float* %fv, align 4, !tbaa !37
  %conv174 = fpext float %137 to double
  %cmp175 = fcmp olt double %conv174, 0.000000e+00
  br i1 %cmp175, label %if.then.177, label %if.else.178

if.then.177:                                      ; preds = %if.end.162
  store i16 0, i16* %k, align 2, !tbaa !73
  br label %if.end.189

if.else.178:                                      ; preds = %if.end.162
  %138 = load float, float* %fv, align 4, !tbaa !37
  %conv179 = fpext float %138 to double
  %add180 = fadd double %conv179, 5.000000e-01
  %cmp181 = fcmp ogt double %add180, 6.553500e+04
  br i1 %cmp181, label %if.then.183, label %if.else.184

if.then.183:                                      ; preds = %if.else.178
  store i16 -1, i16* %k, align 2, !tbaa !73
  br label %if.end.188

if.else.184:                                      ; preds = %if.else.178
  %139 = load float, float* %fv, align 4, !tbaa !37
  %conv185 = fpext float %139 to double
  %add186 = fadd double %conv185, 5.000000e-01
  %conv187 = fptoui double %add186 to i16
  store i16 %conv187, i16* %k, align 2, !tbaa !73
  br label %if.end.188

if.end.188:                                       ; preds = %if.else.184, %if.then.183
  br label %if.end.189

if.end.189:                                       ; preds = %if.end.188, %if.then.177
  %140 = bitcast float* %fv to i8*
  call void @llvm.lifetime.end(i64 4, i8* %140) #2
  %141 = bitcast float* %fk to i8*
  call void @llvm.lifetime.end(i64 4, i8* %141) #2
  %142 = bitcast float* %fy to i8*
  call void @llvm.lifetime.end(i64 4, i8* %142) #2
  %143 = bitcast float* %fm to i8*
  call void @llvm.lifetime.end(i64 4, i8* %143) #2
  %144 = bitcast float* %fc to i8*
  call void @llvm.lifetime.end(i64 4, i8* %144) #2
  %145 = bitcast float** %a to i8*
  call void @llvm.lifetime.end(i64 8, i8* %145) #2
  br label %if.end.218

if.else.190:                                      ; preds = %if.else.34
  %146 = load i16, i16* %k, align 2, !tbaa !73
  %conv191 = zext i16 %146 to i32
  %cmp192 = icmp eq i32 %conv191, 0
  br i1 %cmp192, label %if.then.194, label %if.end.217

if.then.194:                                      ; preds = %if.else.190
  %147 = load i16, i16* %c, align 2, !tbaa !73
  %conv195 = zext i16 %147 to i32
  %148 = load i16, i16* %m, align 2, !tbaa !73
  %conv196 = zext i16 %148 to i32
  %cmp197 = icmp slt i32 %conv195, %conv196
  br i1 %cmp197, label %cond.true.199, label %cond.false.201

cond.true.199:                                    ; preds = %if.then.194
  %149 = load i16, i16* %c, align 2, !tbaa !73
  %conv200 = zext i16 %149 to i32
  br label %cond.end.203

cond.false.201:                                   ; preds = %if.then.194
  %150 = load i16, i16* %m, align 2, !tbaa !73
  %conv202 = zext i16 %150 to i32
  br label %cond.end.203

cond.end.203:                                     ; preds = %cond.false.201, %cond.true.199
  %cond204 = phi i32 [ %conv200, %cond.true.199 ], [ %conv202, %cond.false.201 ]
  %conv205 = trunc i32 %cond204 to i16
  store i16 %conv205, i16* %k, align 2, !tbaa !73
  %151 = load i16, i16* %k, align 2, !tbaa !73
  %conv206 = zext i16 %151 to i32
  %152 = load i16, i16* %y, align 2, !tbaa !73
  %conv207 = zext i16 %152 to i32
  %cmp208 = icmp slt i32 %conv206, %conv207
  br i1 %cmp208, label %cond.true.210, label %cond.false.212

cond.true.210:                                    ; preds = %cond.end.203
  %153 = load i16, i16* %k, align 2, !tbaa !73
  %conv211 = zext i16 %153 to i32
  br label %cond.end.214

cond.false.212:                                   ; preds = %cond.end.203
  %154 = load i16, i16* %y, align 2, !tbaa !73
  %conv213 = zext i16 %154 to i32
  br label %cond.end.214

cond.end.214:                                     ; preds = %cond.false.212, %cond.true.210
  %cond215 = phi i32 [ %conv211, %cond.true.210 ], [ %conv213, %cond.false.212 ]
  %conv216 = trunc i32 %cond215 to i16
  store i16 %conv216, i16* %k, align 2, !tbaa !73
  br label %if.end.217

if.end.217:                                       ; preds = %cond.end.214, %if.else.190
  br label %if.end.218

if.end.218:                                       ; preds = %if.end.217, %if.end.189
  %155 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc219 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %155, i32 0, i32 68
  %bits220 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc219, i32 0, i32 1
  %156 = load i32, i32* %bits220, align 4, !tbaa !44
  %cmp221 = icmp eq i32 %156, 8
  br i1 %cmp221, label %land.lhs.true.223, label %if.else.235

land.lhs.true.223:                                ; preds = %if.end.218
  %157 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc224 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %157, i32 0, i32 68
  %dither225 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc224, i32 0, i32 2
  %158 = load %struct.stc_dither_s*, %struct.stc_dither_s** %dither225, align 8, !tbaa !41
  %flags226 = getelementptr inbounds %struct.stc_dither_s, %struct.stc_dither_s* %158, i32 0, i32 2
  %159 = load i32, i32* %flags226, align 4, !tbaa !42
  %and227 = and i32 %159, 24
  %cmp228 = icmp eq i32 %and227, 8
  br i1 %cmp228, label %if.then.230, label %if.else.235

if.then.230:                                      ; preds = %land.lhs.true.223
  %160 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %161 = load i16, i16* %c, align 2, !tbaa !73
  %call231 = call zeroext i16 @stc_truncate1(%struct.stcolor_device_s* %160, i32 0, i16 zeroext %161) #5
  store i16 %call231, i16* %c, align 2, !tbaa !73
  %162 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %163 = load i16, i16* %m, align 2, !tbaa !73
  %call232 = call zeroext i16 @stc_truncate1(%struct.stcolor_device_s* %162, i32 1, i16 zeroext %163) #5
  store i16 %call232, i16* %m, align 2, !tbaa !73
  %164 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %165 = load i16, i16* %y, align 2, !tbaa !73
  %call233 = call zeroext i16 @stc_truncate1(%struct.stcolor_device_s* %164, i32 2, i16 zeroext %165) #5
  store i16 %call233, i16* %y, align 2, !tbaa !73
  %166 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %167 = load i16, i16* %k, align 2, !tbaa !73
  %call234 = call zeroext i16 @stc_truncate1(%struct.stcolor_device_s* %166, i32 3, i16 zeroext %167) #5
  store i16 %call234, i16* %k, align 2, !tbaa !73
  br label %if.end.240

if.else.235:                                      ; preds = %land.lhs.true.223, %if.end.218
  %168 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %169 = load i16, i16* %c, align 2, !tbaa !73
  %call236 = call zeroext i16 @stc_truncate(%struct.stcolor_device_s* %168, i32 0, i16 zeroext %169) #5
  store i16 %call236, i16* %c, align 2, !tbaa !73
  %170 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %171 = load i16, i16* %m, align 2, !tbaa !73
  %call237 = call zeroext i16 @stc_truncate(%struct.stcolor_device_s* %170, i32 1, i16 zeroext %171) #5
  store i16 %call237, i16* %m, align 2, !tbaa !73
  %172 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %173 = load i16, i16* %y, align 2, !tbaa !73
  %call238 = call zeroext i16 @stc_truncate(%struct.stcolor_device_s* %172, i32 2, i16 zeroext %173) #5
  store i16 %call238, i16* %y, align 2, !tbaa !73
  %174 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %175 = load i16, i16* %k, align 2, !tbaa !73
  %call239 = call zeroext i16 @stc_truncate(%struct.stcolor_device_s* %174, i32 3, i16 zeroext %175) #5
  store i16 %call239, i16* %k, align 2, !tbaa !73
  br label %if.end.240

if.end.240:                                       ; preds = %if.else.235, %if.then.230
  br label %if.end.241

if.end.241:                                       ; preds = %if.end.240, %if.end
  %176 = load i16, i16* %c, align 2, !tbaa !73
  %conv242 = zext i16 %176 to i64
  store i64 %conv242, i64* %rv, align 8, !tbaa !25
  %177 = load i64, i64* %rv, align 8, !tbaa !25
  %178 = load i32, i32* %shift, align 4, !tbaa !26
  %sh_prom = zext i32 %178 to i64
  %shl = shl i64 %177, %sh_prom
  %179 = load i16, i16* %m, align 2, !tbaa !73
  %conv243 = zext i16 %179 to i64
  %or = or i64 %shl, %conv243
  store i64 %or, i64* %rv, align 8, !tbaa !25
  %180 = load i64, i64* %rv, align 8, !tbaa !25
  %181 = load i32, i32* %shift, align 4, !tbaa !26
  %sh_prom244 = zext i32 %181 to i64
  %shl245 = shl i64 %180, %sh_prom244
  %182 = load i16, i16* %y, align 2, !tbaa !73
  %conv246 = zext i16 %182 to i64
  %or247 = or i64 %shl245, %conv246
  store i64 %or247, i64* %rv, align 8, !tbaa !25
  %183 = load i64, i64* %rv, align 8, !tbaa !25
  %184 = load i32, i32* %shift, align 4, !tbaa !26
  %sh_prom248 = zext i32 %184 to i64
  %shl249 = shl i64 %183, %sh_prom248
  %185 = load i16, i16* %k, align 2, !tbaa !73
  %conv250 = zext i16 %185 to i64
  %or251 = or i64 %shl249, %conv250
  store i64 %or251, i64* %rv, align 8, !tbaa !25
  %186 = load i64, i64* %rv, align 8, !tbaa !25
  %cmp252 = icmp eq i64 %186, -1
  br i1 %cmp252, label %if.then.254, label %if.end.255

if.then.254:                                      ; preds = %if.end.241
  %187 = load i64, i64* %rv, align 8, !tbaa !25
  %xor = xor i64 %187, 1
  store i64 %xor, i64* %rv, align 8, !tbaa !25
  br label %if.end.255

if.end.255:                                       ; preds = %if.then.254, %if.end.241
  %188 = load i64, i64* %rv, align 8, !tbaa !25
  %189 = bitcast i16* %k to i8*
  call void @llvm.lifetime.end(i64 2, i8* %189) #2
  %190 = bitcast i16* %y to i8*
  call void @llvm.lifetime.end(i64 2, i8* %190) #2
  %191 = bitcast i16* %m to i8*
  call void @llvm.lifetime.end(i64 2, i8* %191) #2
  %192 = bitcast i16* %c to i8*
  call void @llvm.lifetime.end(i64 2, i8* %192) #2
  %193 = bitcast i64* %rv to i8*
  call void @llvm.lifetime.end(i64 8, i8* %193) #2
  %194 = bitcast i32* %shift to i8*
  call void @llvm.lifetime.end(i64 4, i8* %194) #2
  %195 = bitcast %struct.stcolor_device_s** %sd to i8*
  call void @llvm.lifetime.end(i64 8, i8* %195) #2
  ret i64 %188
}

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #2

; Function Attrs: nounwind readonly
declare i64 @strlen(i8*) #3

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #2

; Function Attrs: nounwind uwtable
define internal i32 @stc_print_setup(%struct.stcolor_device_s* %sd) #1 {
entry:
  %retval = alloca i32, align 4
  %sd.addr = alloca %struct.stcolor_device_s*, align 8
  %need = alloca i32, align 4
  %bp = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  %need239 = alloca i32, align 4
  %bp240 = alloca i8*, align 8
  store %struct.stcolor_device_s* %sd, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %0 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %HWResolution = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %0, i32 0, i32 22
  %arrayidx = getelementptr inbounds [2 x float], [2 x float]* %HWResolution, i32 0, i64 1
  %1 = load float, float* %arrayidx, align 4, !tbaa !37
  %conv = fpext float %1 to double
  %div = fdiv double 3.600000e+03, %conv
  %conv1 = fptosi double %div to i32
  %2 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %2, i32 0, i32 68
  %escp_u = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc, i32 0, i32 24
  store i32 %conv1, i32* %escp_u, align 4, !tbaa !28
  %3 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %HWResolution2 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %3, i32 0, i32 22
  %arrayidx3 = getelementptr inbounds [2 x float], [2 x float]* %HWResolution2, i32 0, i64 0
  %4 = load float, float* %arrayidx3, align 4, !tbaa !37
  %conv4 = fpext float %4 to double
  %div5 = fdiv double 3.600000e+03, %conv4
  %conv6 = fptosi double %div5 to i32
  %5 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc7 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %5, i32 0, i32 68
  %escp_h = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc7, i32 0, i32 27
  store i32 %conv6, i32* %escp_h, align 4, !tbaa !111
  %6 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc8 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %6, i32 0, i32 68
  %flags = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc8, i32 0, i32 0
  %7 = load i64, i64* %flags, align 8, !tbaa !5
  %and = and i64 %7, 384
  %tobool = icmp ne i64 %and, 0
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %8 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc9 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %8, i32 0, i32 68
  %escp_u10 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc9, i32 0, i32 24
  %9 = load i32, i32* %escp_u10, align 4, !tbaa !28
  br label %cond.end

cond.false:                                       ; preds = %entry
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %9, %cond.true ], [ 40, %cond.false ]
  %10 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc11 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %10, i32 0, i32 68
  %escp_v = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc11, i32 0, i32 26
  store i32 %cond, i32* %escp_v, align 4, !tbaa !27
  %11 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc12 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %11, i32 0, i32 68
  %escp_c = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc12, i32 0, i32 25
  store i32 0, i32* %escp_c, align 4, !tbaa !112
  %12 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc13 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %12, i32 0, i32 68
  %flags14 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc13, i32 0, i32 0
  %13 = load i64, i64* %flags14, align 8, !tbaa !5
  %and15 = and i64 %13, 65536
  %cmp = icmp eq i64 %and15, 0
  br i1 %cmp, label %if.then, label %if.end.61

if.then:                                          ; preds = %cond.end
  %14 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc17 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %14, i32 0, i32 68
  %escp_v18 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc17, i32 0, i32 26
  %15 = load i32, i32* %escp_v18, align 4, !tbaa !27
  %16 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc19 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %16, i32 0, i32 68
  %escp_u20 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc19, i32 0, i32 24
  %17 = load i32, i32* %escp_u20, align 4, !tbaa !28
  %cmp21 = icmp ne i32 %15, %17
  br i1 %cmp21, label %if.then.23, label %if.else

if.then.23:                                       ; preds = %if.then
  %18 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc24 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %18, i32 0, i32 68
  %escp_m = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc24, i32 0, i32 28
  store i32 15, i32* %escp_m, align 4, !tbaa !48
  br label %if.end.60

if.else:                                          ; preds = %if.then
  %19 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc25 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %19, i32 0, i32 68
  %flags26 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc25, i32 0, i32 0
  %20 = load i64, i64* %flags26, align 8, !tbaa !5
  %and27 = and i64 %20, 61440
  %cmp28 = icmp eq i64 8192, %and27
  br i1 %cmp28, label %if.then.30, label %if.else.33

if.then.30:                                       ; preds = %if.else
  %21 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc31 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %21, i32 0, i32 68
  %escp_m32 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc31, i32 0, i32 28
  store i32 1, i32* %escp_m32, align 4, !tbaa !48
  br label %if.end.59

if.else.33:                                       ; preds = %if.else
  %22 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc34 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %22, i32 0, i32 68
  %flags35 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc34, i32 0, i32 0
  %23 = load i64, i64* %flags35, align 8, !tbaa !5
  %and36 = and i64 %23, 128
  %tobool37 = icmp ne i64 %and36, 0
  br i1 %tobool37, label %if.then.38, label %if.else.41

if.then.38:                                       ; preds = %if.else.33
  %24 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc39 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %24, i32 0, i32 68
  %escp_m40 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc39, i32 0, i32 28
  store i32 1, i32* %escp_m40, align 4, !tbaa !48
  br label %if.end.58

if.else.41:                                       ; preds = %if.else.33
  %25 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc42 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %25, i32 0, i32 68
  %escp_v43 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc42, i32 0, i32 26
  %26 = load i32, i32* %escp_v43, align 4, !tbaa !27
  %27 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc44 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %27, i32 0, i32 68
  %escp_u45 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc44, i32 0, i32 24
  %28 = load i32, i32* %escp_u45, align 4, !tbaa !28
  %cmp46 = icmp eq i32 %26, %28
  br i1 %cmp46, label %land.lhs.true, label %if.else.55

land.lhs.true:                                    ; preds = %if.else.41
  %29 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc48 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %29, i32 0, i32 68
  %escp_u49 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc48, i32 0, i32 24
  %30 = load i32, i32* %escp_u49, align 4, !tbaa !28
  %cmp50 = icmp eq i32 %30, 5
  br i1 %cmp50, label %if.then.52, label %if.else.55

if.then.52:                                       ; preds = %land.lhs.true
  %31 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc53 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %31, i32 0, i32 68
  %escp_m54 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc53, i32 0, i32 28
  store i32 1, i32* %escp_m54, align 4, !tbaa !48
  br label %if.end

if.else.55:                                       ; preds = %land.lhs.true, %if.else.41
  %32 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc56 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %32, i32 0, i32 68
  %escp_m57 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc56, i32 0, i32 28
  store i32 1, i32* %escp_m57, align 4, !tbaa !48
  br label %if.end

if.end:                                           ; preds = %if.else.55, %if.then.52
  br label %if.end.58

if.end.58:                                        ; preds = %if.end, %if.then.38
  br label %if.end.59

if.end.59:                                        ; preds = %if.end.58, %if.then.30
  br label %if.end.60

if.end.60:                                        ; preds = %if.end.59, %if.then.23
  br label %if.end.61

if.end.61:                                        ; preds = %if.end.60, %cond.end
  %33 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc62 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %33, i32 0, i32 68
  %flags63 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc62, i32 0, i32 0
  %34 = load i64, i64* %flags63, align 8, !tbaa !5
  %and64 = and i64 %34, 262144
  %cmp65 = icmp eq i64 %and64, 0
  br i1 %cmp65, label %if.then.67, label %if.end.81

if.then.67:                                       ; preds = %if.end.61
  %35 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %width = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %35, i32 0, i32 13
  %36 = load i32, i32* %width, align 4, !tbaa !83
  %conv68 = sitofp i32 %36 to double
  %37 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %HWMargins = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %37, i32 0, i32 25
  %arrayidx69 = getelementptr inbounds [4 x float], [4 x float]* %HWMargins, i32 0, i64 0
  %38 = load float, float* %arrayidx69, align 4, !tbaa !37
  %conv70 = fpext float %38 to double
  %div71 = fdiv double %conv70, 7.200000e+01
  %39 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %HWMargins72 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %39, i32 0, i32 25
  %arrayidx73 = getelementptr inbounds [4 x float], [4 x float]* %HWMargins72, i32 0, i64 2
  %40 = load float, float* %arrayidx73, align 4, !tbaa !37
  %conv74 = fpext float %40 to double
  %div75 = fdiv double %conv74, 7.200000e+01
  %add = fadd double %div71, %div75
  %41 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %HWResolution76 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %41, i32 0, i32 22
  %arrayidx77 = getelementptr inbounds [2 x float], [2 x float]* %HWResolution76, i32 0, i64 0
  %42 = load float, float* %arrayidx77, align 4, !tbaa !37
  %conv78 = fpext float %42 to double
  %mul = fmul double %add, %conv78
  %sub = fsub double %conv68, %mul
  %conv79 = fptosi double %sub to i32
  %43 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc80 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %43, i32 0, i32 68
  %escp_width = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc80, i32 0, i32 15
  store i32 %conv79, i32* %escp_width, align 4, !tbaa !34
  br label %if.end.81

if.end.81:                                        ; preds = %if.then.67, %if.end.61
  %44 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc82 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %44, i32 0, i32 68
  %flags83 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc82, i32 0, i32 0
  %45 = load i64, i64* %flags83, align 8, !tbaa !5
  %and84 = and i64 %45, 131072
  %cmp85 = icmp eq i64 %and84, 0
  br i1 %cmp85, label %if.then.87, label %if.end.89

if.then.87:                                       ; preds = %if.end.81
  %46 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %height = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %46, i32 0, i32 14
  %47 = load i32, i32* %height, align 4, !tbaa !36
  %48 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc88 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %48, i32 0, i32 68
  %escp_height = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc88, i32 0, i32 16
  store i32 %47, i32* %escp_height, align 4, !tbaa !113
  br label %if.end.89

if.end.89:                                        ; preds = %if.then.87, %if.end.81
  %49 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc90 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %49, i32 0, i32 68
  %flags91 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc90, i32 0, i32 0
  %50 = load i64, i64* %flags91, align 8, !tbaa !5
  %and92 = and i64 %50, 524288
  %cmp93 = icmp eq i64 %and92, 0
  br i1 %cmp93, label %if.then.95, label %if.end.106

if.then.95:                                       ; preds = %if.end.89
  %51 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %HWMargins96 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %51, i32 0, i32 25
  %arrayidx97 = getelementptr inbounds [4 x float], [4 x float]* %HWMargins96, i32 0, i64 3
  %52 = load float, float* %arrayidx97, align 4, !tbaa !37
  %conv98 = fpext float %52 to double
  %div99 = fdiv double %conv98, 7.200000e+01
  %53 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %HWResolution100 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %53, i32 0, i32 22
  %arrayidx101 = getelementptr inbounds [2 x float], [2 x float]* %HWResolution100, i32 0, i64 1
  %54 = load float, float* %arrayidx101, align 4, !tbaa !37
  %conv102 = fpext float %54 to double
  %mul103 = fmul double %div99, %conv102
  %conv104 = fptosi double %mul103 to i32
  %55 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc105 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %55, i32 0, i32 68
  %escp_top = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc105, i32 0, i32 17
  store i32 %conv104, i32* %escp_top, align 4, !tbaa !114
  br label %if.end.106

if.end.106:                                       ; preds = %if.then.95, %if.end.89
  %56 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc107 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %56, i32 0, i32 68
  %flags108 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc107, i32 0, i32 0
  %57 = load i64, i64* %flags108, align 8, !tbaa !5
  %and109 = and i64 %57, 1048576
  %cmp110 = icmp eq i64 %and109, 0
  br i1 %cmp110, label %if.then.112, label %if.end.126

if.then.112:                                      ; preds = %if.end.106
  %58 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %height113 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %58, i32 0, i32 14
  %59 = load i32, i32* %height113, align 4, !tbaa !36
  %conv114 = sitofp i32 %59 to double
  %60 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %HWMargins115 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %60, i32 0, i32 25
  %arrayidx116 = getelementptr inbounds [4 x float], [4 x float]* %HWMargins115, i32 0, i64 1
  %61 = load float, float* %arrayidx116, align 4, !tbaa !37
  %conv117 = fpext float %61 to double
  %div118 = fdiv double %conv117, 7.200000e+01
  %62 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %HWResolution119 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %62, i32 0, i32 22
  %arrayidx120 = getelementptr inbounds [2 x float], [2 x float]* %HWResolution119, i32 0, i64 1
  %63 = load float, float* %arrayidx120, align 4, !tbaa !37
  %conv121 = fpext float %63 to double
  %mul122 = fmul double %div118, %conv121
  %sub123 = fsub double %conv114, %mul122
  %conv124 = fptosi double %sub123 to i32
  %64 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc125 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %64, i32 0, i32 68
  %escp_bottom = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc125, i32 0, i32 18
  store i32 %conv124, i32* %escp_bottom, align 4, !tbaa !115
  br label %if.end.126

if.end.126:                                       ; preds = %if.then.112, %if.end.106
  %65 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc127 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %65, i32 0, i32 68
  %flags128 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc127, i32 0, i32 0
  %66 = load i64, i64* %flags128, align 8, !tbaa !5
  %and129 = and i64 %66, 2097152
  %cmp130 = icmp eq i64 %and129, 0
  br i1 %cmp130, label %if.then.132, label %if.end.232

if.then.132:                                      ; preds = %if.end.126
  %67 = bitcast i32* %need to i8*
  call void @llvm.lifetime.start(i64 4, i8* %67) #2
  store i32 39, i32* %need, align 4, !tbaa !26
  %68 = bitcast i8** %bp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %68) #2
  %69 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc133 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %69, i32 0, i32 68
  %escp_init = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc133, i32 0, i32 13
  %data = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %escp_init, i32 0, i32 0
  %70 = load i8*, i8** %data, align 8, !tbaa !102
  store i8* %70, i8** %bp, align 8, !tbaa !1
  %71 = load i32, i32* %need, align 4, !tbaa !26
  %72 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc134 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %72, i32 0, i32 68
  %escp_init135 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc134, i32 0, i32 13
  %size = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %escp_init135, i32 0, i32 1
  %73 = load i32, i32* %size, align 4, !tbaa !104
  %cmp136 = icmp ne i32 %71, %73
  br i1 %cmp136, label %if.then.138, label %if.end.169

if.then.138:                                      ; preds = %if.then.132
  %74 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %74, i32 0, i32 3
  %75 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory, align 8, !tbaa !29
  %non_gc_memory = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %75, i32 0, i32 3
  %76 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory, align 8, !tbaa !30
  %procs = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %76, i32 0, i32 1
  %alloc_byte_array = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs, i32 0, i32 10
  %77 = load i8* (%struct.gs_memory_s*, i32, i32, i8*)*, i8* (%struct.gs_memory_s*, i32, i32, i8*)** %alloc_byte_array, align 8, !tbaa !33
  %78 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %memory139 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %78, i32 0, i32 3
  %79 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory139, align 8, !tbaa !29
  %non_gc_memory140 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %79, i32 0, i32 3
  %80 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory140, align 8, !tbaa !30
  %81 = load i32, i32* %need, align 4, !tbaa !26
  %call = call i8* %77(%struct.gs_memory_s* %80, i32 %81, i32 1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i32 0, i32 0)) #5
  store i8* %call, i8** %bp, align 8, !tbaa !1
  %cmp141 = icmp ne i8* null, %call
  br i1 %cmp141, label %if.then.143, label %if.else.167

if.then.143:                                      ; preds = %if.then.138
  %82 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc144 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %82, i32 0, i32 68
  %escp_init145 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc144, i32 0, i32 13
  %size146 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %escp_init145, i32 0, i32 1
  %83 = load i32, i32* %size146, align 4, !tbaa !104
  %cmp147 = icmp ne i32 0, %83
  br i1 %cmp147, label %if.then.149, label %if.end.158

if.then.149:                                      ; preds = %if.then.143
  %84 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %memory150 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %84, i32 0, i32 3
  %85 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory150, align 8, !tbaa !29
  %non_gc_memory151 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %85, i32 0, i32 3
  %86 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory151, align 8, !tbaa !30
  %procs152 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %86, i32 0, i32 1
  %free_object = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs152, i32 0, i32 2
  %87 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %free_object, align 8, !tbaa !65
  %88 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %memory153 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %88, i32 0, i32 3
  %89 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory153, align 8, !tbaa !29
  %non_gc_memory154 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %89, i32 0, i32 3
  %90 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory154, align 8, !tbaa !30
  %91 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc155 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %91, i32 0, i32 68
  %escp_init156 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc155, i32 0, i32 13
  %data157 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %escp_init156, i32 0, i32 0
  %92 = load i8*, i8** %data157, align 8, !tbaa !102
  call void %87(%struct.gs_memory_s* %90, i8* %92, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i32 0, i32 0)) #5
  br label %if.end.158

if.end.158:                                       ; preds = %if.then.149, %if.then.143
  %93 = load i8*, i8** %bp, align 8, !tbaa !1
  %94 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc159 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %94, i32 0, i32 68
  %escp_init160 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc159, i32 0, i32 13
  %data161 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %escp_init160, i32 0, i32 0
  store i8* %93, i8** %data161, align 8, !tbaa !102
  %95 = load i32, i32* %need, align 4, !tbaa !26
  %96 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc162 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %96, i32 0, i32 68
  %escp_init163 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc162, i32 0, i32 13
  %size164 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %escp_init163, i32 0, i32 1
  store i32 %95, i32* %size164, align 4, !tbaa !104
  %97 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc165 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %97, i32 0, i32 68
  %escp_init166 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc165, i32 0, i32 13
  %persistent = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %escp_init166, i32 0, i32 2
  store i32 0, i32* %persistent, align 4, !tbaa !105
  br label %if.end.168

if.else.167:                                      ; preds = %if.then.138
  store i32 -25, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.168:                                       ; preds = %if.end.158
  br label %if.end.169

if.end.169:                                       ; preds = %if.end.168, %if.then.132
  %98 = load i32, i32* %need, align 4, !tbaa !26
  %cmp170 = icmp ne i32 %98, 39
  br i1 %cmp170, label %if.then.172, label %if.end.173

if.then.172:                                      ; preds = %if.end.169
  store i32 -28, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.173:                                       ; preds = %if.end.169
  %99 = load i8*, i8** %bp, align 8, !tbaa !1
  %100 = load i32, i32* %need, align 4, !tbaa !26
  %conv174 = sext i32 %100 to i64
  %call175 = call i8* @memcpy(i8* %99, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.6, i32 0, i32 0), i64 %conv174) #6
  %101 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc176 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %101, i32 0, i32 68
  %flags177 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc176, i32 0, i32 0
  %102 = load i64, i64* %flags177, align 8, !tbaa !5
  %and178 = and i64 %102, 128
  %cmp179 = icmp ne i64 %and178, 0
  br i1 %cmp179, label %if.then.181, label %if.else.183

if.then.181:                                      ; preds = %if.end.173
  %103 = load i8*, i8** %bp, align 8, !tbaa !1
  %arrayidx182 = getelementptr inbounds i8, i8* %103, i64 13
  store i8 1, i8* %arrayidx182, align 1, !tbaa !62
  br label %if.end.185

if.else.183:                                      ; preds = %if.end.173
  %104 = load i8*, i8** %bp, align 8, !tbaa !1
  %arrayidx184 = getelementptr inbounds i8, i8* %104, i64 13
  store i8 0, i8* %arrayidx184, align 1, !tbaa !62
  br label %if.end.185

if.end.185:                                       ; preds = %if.else.183, %if.then.181
  %105 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc186 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %105, i32 0, i32 68
  %escp_u187 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc186, i32 0, i32 24
  %106 = load i32, i32* %escp_u187, align 4, !tbaa !28
  %conv188 = trunc i32 %106 to i8
  %107 = load i8*, i8** %bp, align 8, !tbaa !1
  %arrayidx189 = getelementptr inbounds i8, i8* %107, i64 19
  store i8 %conv188, i8* %arrayidx189, align 1, !tbaa !62
  %108 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc190 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %108, i32 0, i32 68
  %escp_height191 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc190, i32 0, i32 16
  %109 = load i32, i32* %escp_height191, align 4, !tbaa !113
  %and192 = and i32 %109, 255
  %conv193 = trunc i32 %and192 to i8
  %110 = load i8*, i8** %bp, align 8, !tbaa !1
  %arrayidx194 = getelementptr inbounds i8, i8* %110, i64 25
  store i8 %conv193, i8* %arrayidx194, align 1, !tbaa !62
  %111 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc195 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %111, i32 0, i32 68
  %escp_height196 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc195, i32 0, i32 16
  %112 = load i32, i32* %escp_height196, align 4, !tbaa !113
  %shr = ashr i32 %112, 8
  %and197 = and i32 %shr, 255
  %conv198 = trunc i32 %and197 to i8
  %113 = load i8*, i8** %bp, align 8, !tbaa !1
  %arrayidx199 = getelementptr inbounds i8, i8* %113, i64 26
  store i8 %conv198, i8* %arrayidx199, align 1, !tbaa !62
  %114 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc200 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %114, i32 0, i32 68
  %escp_top201 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc200, i32 0, i32 17
  %115 = load i32, i32* %escp_top201, align 4, !tbaa !114
  %and202 = and i32 %115, 255
  %conv203 = trunc i32 %and202 to i8
  %116 = load i8*, i8** %bp, align 8, !tbaa !1
  %arrayidx204 = getelementptr inbounds i8, i8* %116, i64 32
  store i8 %conv203, i8* %arrayidx204, align 1, !tbaa !62
  %117 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc205 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %117, i32 0, i32 68
  %escp_top206 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc205, i32 0, i32 17
  %118 = load i32, i32* %escp_top206, align 4, !tbaa !114
  %shr207 = ashr i32 %118, 8
  %and208 = and i32 %shr207, 255
  %conv209 = trunc i32 %and208 to i8
  %119 = load i8*, i8** %bp, align 8, !tbaa !1
  %arrayidx210 = getelementptr inbounds i8, i8* %119, i64 33
  store i8 %conv209, i8* %arrayidx210, align 1, !tbaa !62
  %120 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc211 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %120, i32 0, i32 68
  %escp_bottom212 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc211, i32 0, i32 18
  %121 = load i32, i32* %escp_bottom212, align 4, !tbaa !115
  %and213 = and i32 %121, 255
  %conv214 = trunc i32 %and213 to i8
  %122 = load i8*, i8** %bp, align 8, !tbaa !1
  %arrayidx215 = getelementptr inbounds i8, i8* %122, i64 34
  store i8 %conv214, i8* %arrayidx215, align 1, !tbaa !62
  %123 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc216 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %123, i32 0, i32 68
  %escp_bottom217 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc216, i32 0, i32 18
  %124 = load i32, i32* %escp_bottom217, align 4, !tbaa !115
  %shr218 = ashr i32 %124, 8
  %and219 = and i32 %shr218, 255
  %conv220 = trunc i32 %and219 to i8
  %125 = load i8*, i8** %bp, align 8, !tbaa !1
  %arrayidx221 = getelementptr inbounds i8, i8* %125, i64 35
  store i8 %conv220, i8* %arrayidx221, align 1, !tbaa !62
  %126 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc222 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %126, i32 0, i32 68
  %flags223 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc222, i32 0, i32 0
  %127 = load i64, i64* %flags223, align 8, !tbaa !5
  %and224 = and i64 %127, 64
  %tobool225 = icmp ne i64 %and224, 0
  br i1 %tobool225, label %if.then.226, label %if.else.228

if.then.226:                                      ; preds = %if.end.185
  %128 = load i8*, i8** %bp, align 8, !tbaa !1
  %arrayidx227 = getelementptr inbounds i8, i8* %128, i64 38
  store i8 1, i8* %arrayidx227, align 1, !tbaa !62
  br label %if.end.230

if.else.228:                                      ; preds = %if.end.185
  %129 = load i8*, i8** %bp, align 8, !tbaa !1
  %arrayidx229 = getelementptr inbounds i8, i8* %129, i64 38
  store i8 0, i8* %arrayidx229, align 1, !tbaa !62
  br label %if.end.230

if.end.230:                                       ; preds = %if.else.228, %if.then.226
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.230, %if.then.172, %if.else.167
  %130 = bitcast i8** %bp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %130) #2
  %131 = bitcast i32* %need to i8*
  call void @llvm.lifetime.end(i64 4, i8* %131) #2
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %return
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.232

if.end.232:                                       ; preds = %cleanup.cont, %if.end.126
  %132 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc233 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %132, i32 0, i32 68
  %flags234 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc233, i32 0, i32 0
  %133 = load i64, i64* %flags234, align 8, !tbaa !5
  %and235 = and i64 %133, 4194304
  %cmp236 = icmp eq i64 %and235, 0
  br i1 %cmp236, label %if.then.238, label %if.end.297

if.then.238:                                      ; preds = %if.end.232
  %134 = bitcast i32* %need239 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %134) #2
  store i32 3, i32* %need239, align 4, !tbaa !26
  %135 = bitcast i8** %bp240 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %135) #2
  %136 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc241 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %136, i32 0, i32 68
  %escp_release = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc241, i32 0, i32 14
  %data242 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %escp_release, i32 0, i32 0
  %137 = load i8*, i8** %data242, align 8, !tbaa !63
  store i8* %137, i8** %bp240, align 8, !tbaa !1
  %138 = load i32, i32* %need239, align 4, !tbaa !26
  %139 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc243 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %139, i32 0, i32 68
  %escp_release244 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc243, i32 0, i32 14
  %size245 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %escp_release244, i32 0, i32 1
  %140 = load i32, i32* %size245, align 4, !tbaa !64
  %cmp246 = icmp ne i32 %138, %140
  br i1 %cmp246, label %if.then.248, label %if.end.286

if.then.248:                                      ; preds = %if.then.238
  %141 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %memory249 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %141, i32 0, i32 3
  %142 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory249, align 8, !tbaa !29
  %non_gc_memory250 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %142, i32 0, i32 3
  %143 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory250, align 8, !tbaa !30
  %procs251 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %143, i32 0, i32 1
  %alloc_byte_array252 = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs251, i32 0, i32 10
  %144 = load i8* (%struct.gs_memory_s*, i32, i32, i8*)*, i8* (%struct.gs_memory_s*, i32, i32, i8*)** %alloc_byte_array252, align 8, !tbaa !33
  %145 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %memory253 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %145, i32 0, i32 3
  %146 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory253, align 8, !tbaa !29
  %non_gc_memory254 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %146, i32 0, i32 3
  %147 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory254, align 8, !tbaa !30
  %148 = load i32, i32* %need239, align 4, !tbaa !26
  %call255 = call i8* %144(%struct.gs_memory_s* %147, i32 %148, i32 1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.7, i32 0, i32 0)) #5
  store i8* %call255, i8** %bp240, align 8, !tbaa !1
  %cmp256 = icmp ne i8* null, %call255
  br i1 %cmp256, label %if.then.258, label %if.else.284

if.then.258:                                      ; preds = %if.then.248
  %149 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc259 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %149, i32 0, i32 68
  %escp_release260 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc259, i32 0, i32 14
  %size261 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %escp_release260, i32 0, i32 1
  %150 = load i32, i32* %size261, align 4, !tbaa !64
  %cmp262 = icmp ne i32 0, %150
  br i1 %cmp262, label %if.then.264, label %if.end.274

if.then.264:                                      ; preds = %if.then.258
  %151 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %memory265 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %151, i32 0, i32 3
  %152 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory265, align 8, !tbaa !29
  %non_gc_memory266 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %152, i32 0, i32 3
  %153 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory266, align 8, !tbaa !30
  %procs267 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %153, i32 0, i32 1
  %free_object268 = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs267, i32 0, i32 2
  %154 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %free_object268, align 8, !tbaa !65
  %155 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %memory269 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %155, i32 0, i32 3
  %156 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory269, align 8, !tbaa !29
  %non_gc_memory270 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %156, i32 0, i32 3
  %157 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory270, align 8, !tbaa !30
  %158 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc271 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %158, i32 0, i32 68
  %escp_release272 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc271, i32 0, i32 14
  %data273 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %escp_release272, i32 0, i32 0
  %159 = load i8*, i8** %data273, align 8, !tbaa !63
  call void %154(%struct.gs_memory_s* %157, i8* %159, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.7, i32 0, i32 0)) #5
  br label %if.end.274

if.end.274:                                       ; preds = %if.then.264, %if.then.258
  %160 = load i8*, i8** %bp240, align 8, !tbaa !1
  %161 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc275 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %161, i32 0, i32 68
  %escp_release276 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc275, i32 0, i32 14
  %data277 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %escp_release276, i32 0, i32 0
  store i8* %160, i8** %data277, align 8, !tbaa !63
  %162 = load i32, i32* %need239, align 4, !tbaa !26
  %163 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc278 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %163, i32 0, i32 68
  %escp_release279 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc278, i32 0, i32 14
  %size280 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %escp_release279, i32 0, i32 1
  store i32 %162, i32* %size280, align 4, !tbaa !64
  %164 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc281 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %164, i32 0, i32 68
  %escp_release282 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc281, i32 0, i32 14
  %persistent283 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %escp_release282, i32 0, i32 2
  store i32 0, i32* %persistent283, align 4, !tbaa !107
  br label %if.end.285

if.else.284:                                      ; preds = %if.then.248
  store i32 -25, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.293

if.end.285:                                       ; preds = %if.end.274
  br label %if.end.286

if.end.286:                                       ; preds = %if.end.285, %if.then.238
  %165 = load i32, i32* %need239, align 4, !tbaa !26
  %cmp287 = icmp ne i32 %165, 3
  br i1 %cmp287, label %if.then.289, label %if.end.290

if.then.289:                                      ; preds = %if.end.286
  store i32 -28, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.293

if.end.290:                                       ; preds = %if.end.286
  %166 = load i8*, i8** %bp240, align 8, !tbaa !1
  %167 = load i32, i32* %need239, align 4, !tbaa !26
  %conv291 = sext i32 %167 to i64
  %call292 = call i8* @memcpy(i8* %166, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0), i64 %conv291) #6
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.293

cleanup.293:                                      ; preds = %if.end.290, %if.then.289, %if.else.284
  %168 = bitcast i8** %bp240 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %168) #2
  %169 = bitcast i32* %need239 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %169) #2
  %cleanup.dest.295 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.295, label %unreachable [
    i32 0, label %cleanup.cont.296
    i32 1, label %return
  ]

cleanup.cont.296:                                 ; preds = %cleanup.293
  br label %if.end.297

if.end.297:                                       ; preds = %cleanup.cont.296, %if.end.232
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end.297, %cleanup.293, %cleanup
  %170 = load i32, i32* %retval
  ret i32 %170

unreachable:                                      ; preds = %cleanup.293, %cleanup
  unreachable
}

; Function Attrs: nounwind uwtable
define internal i64 @stc_map_gray_color(%struct.gx_device_s* %pdev, i16* %cv) #1 {
entry:
  %pdev.addr = alloca %struct.gx_device_s*, align 8
  %cv.addr = alloca i16*, align 8
  %sd = alloca %struct.stcolor_device_s*, align 8
  %rv = alloca i64, align 8
  %r = alloca i16, align 2
  %g = alloca i16, align 2
  %b = alloca i16, align 2
  %m = alloca float*, align 8
  %fv = alloca float, align 4
  store %struct.gx_device_s* %pdev, %struct.gx_device_s** %pdev.addr, align 8, !tbaa !1
  store i16* %cv, i16** %cv.addr, align 8, !tbaa !1
  %0 = bitcast %struct.stcolor_device_s** %sd to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = load %struct.gx_device_s*, %struct.gx_device_s** %pdev.addr, align 8, !tbaa !1
  %2 = bitcast %struct.gx_device_s* %1 to %struct.stcolor_device_s*
  store %struct.stcolor_device_s* %2, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %3 = bitcast i64* %rv to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #2
  %4 = bitcast i16* %r to i8*
  call void @llvm.lifetime.start(i64 2, i8* %4) #2
  %5 = load i16*, i16** %cv.addr, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds i16, i16* %5, i64 0
  %6 = load i16, i16* %arrayidx, align 2, !tbaa !73
  store i16 %6, i16* %r, align 2, !tbaa !73
  %7 = bitcast i16* %g to i8*
  call void @llvm.lifetime.start(i64 2, i8* %7) #2
  %8 = load i16*, i16** %cv.addr, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds i16, i16* %8, i64 1
  %9 = load i16, i16* %arrayidx1, align 2, !tbaa !73
  store i16 %9, i16* %g, align 2, !tbaa !73
  %10 = bitcast i16* %b to i8*
  call void @llvm.lifetime.start(i64 2, i8* %10) #2
  %11 = load i16*, i16** %cv.addr, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds i16, i16* %11, i64 2
  %12 = load i16, i16* %arrayidx2, align 2, !tbaa !73
  store i16 %12, i16* %b, align 2, !tbaa !73
  %13 = load i16, i16* %r, align 2, !tbaa !73
  %conv = zext i16 %13 to i32
  %14 = load i16, i16* %g, align 2, !tbaa !73
  %conv3 = zext i16 %14 to i32
  %cmp = icmp eq i32 %conv, %conv3
  br i1 %cmp, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %entry
  %15 = load i16, i16* %g, align 2, !tbaa !73
  %conv5 = zext i16 %15 to i32
  %16 = load i16, i16* %b, align 2, !tbaa !73
  %conv6 = zext i16 %16 to i32
  %cmp7 = icmp eq i32 %conv5, %conv6
  br i1 %cmp7, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true
  %17 = load i16, i16* %r, align 2, !tbaa !73
  %conv9 = zext i16 %17 to i32
  %sub = sub nsw i32 65535, %conv9
  %conv10 = sext i32 %sub to i64
  store i64 %conv10, i64* %rv, align 8, !tbaa !25
  br label %if.end.54

if.else:                                          ; preds = %land.lhs.true, %entry
  %18 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %18, i32 0, i32 68
  %am = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc, i32 0, i32 3
  %19 = load float*, float** %am, align 8, !tbaa !86
  %cmp11 = icmp ne float* %19, null
  br i1 %cmp11, label %if.then.13, label %if.else.39

if.then.13:                                       ; preds = %if.else
  %20 = bitcast float** %m to i8*
  call void @llvm.lifetime.start(i64 8, i8* %20) #2
  %21 = bitcast float* %fv to i8*
  call void @llvm.lifetime.start(i64 4, i8* %21) #2
  %22 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc14 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %22, i32 0, i32 68
  %am15 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc14, i32 0, i32 3
  %23 = load float*, float** %am15, align 8, !tbaa !86
  store float* %23, float** %m, align 8, !tbaa !1
  store float 6.553500e+04, float* %fv, align 4, !tbaa !37
  %24 = load float*, float** %m, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds float, float* %24, i32 1
  store float* %incdec.ptr, float** %m, align 8, !tbaa !1
  %25 = load float, float* %24, align 4, !tbaa !37
  %26 = load i16, i16* %r, align 2, !tbaa !73
  %conv16 = uitofp i16 %26 to float
  %mul = fmul float %25, %conv16
  %27 = load float, float* %fv, align 4, !tbaa !37
  %sub17 = fsub float %27, %mul
  store float %sub17, float* %fv, align 4, !tbaa !37
  %28 = load float*, float** %m, align 8, !tbaa !1
  %incdec.ptr18 = getelementptr inbounds float, float* %28, i32 1
  store float* %incdec.ptr18, float** %m, align 8, !tbaa !1
  %29 = load float, float* %28, align 4, !tbaa !37
  %30 = load i16, i16* %g, align 2, !tbaa !73
  %conv19 = uitofp i16 %30 to float
  %mul20 = fmul float %29, %conv19
  %31 = load float, float* %fv, align 4, !tbaa !37
  %sub21 = fsub float %31, %mul20
  store float %sub21, float* %fv, align 4, !tbaa !37
  %32 = load float*, float** %m, align 8, !tbaa !1
  %33 = load float, float* %32, align 4, !tbaa !37
  %34 = load i16, i16* %b, align 2, !tbaa !73
  %conv22 = uitofp i16 %34 to float
  %mul23 = fmul float %33, %conv22
  %35 = load float, float* %fv, align 4, !tbaa !37
  %sub24 = fsub float %35, %mul23
  store float %sub24, float* %fv, align 4, !tbaa !37
  %36 = load float, float* %fv, align 4, !tbaa !37
  %conv25 = fpext float %36 to double
  %cmp26 = fcmp olt double %conv25, 0.000000e+00
  br i1 %cmp26, label %if.then.28, label %if.else.29

if.then.28:                                       ; preds = %if.then.13
  store i64 0, i64* %rv, align 8, !tbaa !25
  br label %if.end.38

if.else.29:                                       ; preds = %if.then.13
  %37 = load float, float* %fv, align 4, !tbaa !37
  %conv30 = fpext float %37 to double
  %add = fadd double %conv30, 5.000000e-01
  %cmp31 = fcmp ogt double %add, 6.553500e+04
  br i1 %cmp31, label %if.then.33, label %if.else.34

if.then.33:                                       ; preds = %if.else.29
  store i64 65535, i64* %rv, align 8, !tbaa !25
  br label %if.end

if.else.34:                                       ; preds = %if.else.29
  %38 = load float, float* %fv, align 4, !tbaa !37
  %conv35 = fpext float %38 to double
  %add36 = fadd double %conv35, 5.000000e-01
  %conv37 = fptoui double %add36 to i64
  store i64 %conv37, i64* %rv, align 8, !tbaa !25
  br label %if.end

if.end:                                           ; preds = %if.else.34, %if.then.33
  br label %if.end.38

if.end.38:                                        ; preds = %if.end, %if.then.28
  %39 = bitcast float* %fv to i8*
  call void @llvm.lifetime.end(i64 4, i8* %39) #2
  %40 = bitcast float** %m to i8*
  call void @llvm.lifetime.end(i64 8, i8* %40) #2
  br label %if.end.53

if.else.39:                                       ; preds = %if.else
  store i64 524280, i64* %rv, align 8, !tbaa !25
  %41 = load i16, i16* %r, align 2, !tbaa !73
  %conv40 = zext i16 %41 to i64
  %mul41 = mul i64 3, %conv40
  %42 = load i64, i64* %rv, align 8, !tbaa !25
  %sub42 = sub i64 %42, %mul41
  store i64 %sub42, i64* %rv, align 8, !tbaa !25
  %43 = load i16, i16* %g, align 2, !tbaa !73
  %conv43 = zext i16 %43 to i64
  %mul44 = mul i64 3, %conv43
  %44 = load i64, i64* %rv, align 8, !tbaa !25
  %sub45 = sub i64 %44, %mul44
  store i64 %sub45, i64* %rv, align 8, !tbaa !25
  %45 = load i16, i16* %b, align 2, !tbaa !73
  %conv46 = zext i16 %45 to i64
  %shl = shl i64 %conv46, 1
  %46 = load i64, i64* %rv, align 8, !tbaa !25
  %sub47 = sub i64 %46, %shl
  store i64 %sub47, i64* %rv, align 8, !tbaa !25
  %47 = load i64, i64* %rv, align 8, !tbaa !25
  %add48 = add i64 %47, 4
  %shr = lshr i64 %add48, 3
  store i64 %shr, i64* %rv, align 8, !tbaa !25
  %48 = load i64, i64* %rv, align 8, !tbaa !25
  %cmp49 = icmp ugt i64 %48, 65535
  br i1 %cmp49, label %if.then.51, label %if.end.52

if.then.51:                                       ; preds = %if.else.39
  store i64 65535, i64* %rv, align 8, !tbaa !25
  br label %if.end.52

if.end.52:                                        ; preds = %if.then.51, %if.else.39
  br label %if.end.53

if.end.53:                                        ; preds = %if.end.52, %if.end.38
  br label %if.end.54

if.end.54:                                        ; preds = %if.end.53, %if.then
  %49 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc55 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %49, i32 0, i32 68
  %bits = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc55, i32 0, i32 1
  %50 = load i32, i32* %bits, align 4, !tbaa !44
  %cmp56 = icmp eq i32 %50, 8
  br i1 %cmp56, label %land.lhs.true.58, label %if.else.65

land.lhs.true.58:                                 ; preds = %if.end.54
  %51 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc59 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %51, i32 0, i32 68
  %dither = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc59, i32 0, i32 2
  %52 = load %struct.stc_dither_s*, %struct.stc_dither_s** %dither, align 8, !tbaa !41
  %flags = getelementptr inbounds %struct.stc_dither_s, %struct.stc_dither_s* %52, i32 0, i32 2
  %53 = load i32, i32* %flags, align 4, !tbaa !42
  %and = and i32 %53, 24
  %cmp60 = icmp eq i32 %and, 8
  br i1 %cmp60, label %if.then.62, label %if.else.65

if.then.62:                                       ; preds = %land.lhs.true.58
  %54 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %55 = load i64, i64* %rv, align 8, !tbaa !25
  %conv63 = trunc i64 %55 to i16
  %call = call zeroext i16 @stc_truncate1(%struct.stcolor_device_s* %54, i32 0, i16 zeroext %conv63) #5
  %conv64 = zext i16 %call to i64
  store i64 %conv64, i64* %rv, align 8, !tbaa !25
  br label %if.end.69

if.else.65:                                       ; preds = %land.lhs.true.58, %if.end.54
  %56 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %57 = load i64, i64* %rv, align 8, !tbaa !25
  %conv66 = trunc i64 %57 to i16
  %call67 = call zeroext i16 @stc_truncate(%struct.stcolor_device_s* %56, i32 0, i16 zeroext %conv66) #5
  %conv68 = zext i16 %call67 to i64
  store i64 %conv68, i64* %rv, align 8, !tbaa !25
  br label %if.end.69

if.end.69:                                        ; preds = %if.else.65, %if.then.62
  %58 = load i64, i64* %rv, align 8, !tbaa !25
  %59 = bitcast i16* %b to i8*
  call void @llvm.lifetime.end(i64 2, i8* %59) #2
  %60 = bitcast i16* %g to i8*
  call void @llvm.lifetime.end(i64 2, i8* %60) #2
  %61 = bitcast i16* %r to i8*
  call void @llvm.lifetime.end(i64 2, i8* %61) #2
  %62 = bitcast i64* %rv to i8*
  call void @llvm.lifetime.end(i64 8, i8* %62) #2
  %63 = bitcast %struct.stcolor_device_s** %sd to i8*
  call void @llvm.lifetime.end(i64 8, i8* %63) #2
  ret i64 %58
}

declare i64 @gx_default_map_cmyk_color(%struct.gx_device_s*, i16*) #0

; Function Attrs: nounwind uwtable
define internal i32 @stc_map_color_gray(%struct.gx_device_s* %pdev, i64 %color, i16* %prgb) #1 {
entry:
  %pdev.addr = alloca %struct.gx_device_s*, align 8
  %color.addr = alloca i64, align 8
  %prgb.addr = alloca i16*, align 8
  %sd = alloca %struct.stcolor_device_s*, align 8
  %l = alloca i64, align 8
  store %struct.gx_device_s* %pdev, %struct.gx_device_s** %pdev.addr, align 8, !tbaa !1
  store i64 %color, i64* %color.addr, align 8, !tbaa !25
  store i16* %prgb, i16** %prgb.addr, align 8, !tbaa !1
  %0 = bitcast %struct.stcolor_device_s** %sd to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = load %struct.gx_device_s*, %struct.gx_device_s** %pdev.addr, align 8, !tbaa !1
  %2 = bitcast %struct.gx_device_s* %1 to %struct.stcolor_device_s*
  store %struct.stcolor_device_s* %2, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %3 = bitcast i64* %l to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #2
  %4 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %4, i32 0, i32 68
  %bits = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc, i32 0, i32 1
  %5 = load i32, i32* %bits, align 4, !tbaa !44
  %sh_prom = zext i32 %5 to i64
  %shl = shl i64 1, %sh_prom
  %sub = sub i64 %shl, 1
  store i64 %sub, i64* %l, align 8, !tbaa !25
  %6 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %7 = load i64, i64* %color.addr, align 8, !tbaa !25
  %8 = load i64, i64* %l, align 8, !tbaa !25
  %and = and i64 %7, %8
  %call = call zeroext i16 @stc_expand(%struct.stcolor_device_s* %6, i32 0, i64 %and) #5
  %conv = zext i16 %call to i32
  %sub1 = sub nsw i32 65535, %conv
  %conv2 = trunc i32 %sub1 to i16
  %9 = load i16*, i16** %prgb.addr, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds i16, i16* %9, i64 0
  store i16 %conv2, i16* %arrayidx, align 2, !tbaa !73
  %10 = load i16*, i16** %prgb.addr, align 8, !tbaa !1
  %arrayidx3 = getelementptr inbounds i16, i16* %10, i64 0
  %11 = load i16, i16* %arrayidx3, align 2, !tbaa !73
  %12 = load i16*, i16** %prgb.addr, align 8, !tbaa !1
  %arrayidx4 = getelementptr inbounds i16, i16* %12, i64 1
  store i16 %11, i16* %arrayidx4, align 2, !tbaa !73
  %13 = load i16*, i16** %prgb.addr, align 8, !tbaa !1
  %arrayidx5 = getelementptr inbounds i16, i16* %13, i64 0
  %14 = load i16, i16* %arrayidx5, align 2, !tbaa !73
  %15 = load i16*, i16** %prgb.addr, align 8, !tbaa !1
  %arrayidx6 = getelementptr inbounds i16, i16* %15, i64 2
  store i16 %14, i16* %arrayidx6, align 2, !tbaa !73
  %16 = bitcast i64* %l to i8*
  call void @llvm.lifetime.end(i64 8, i8* %16) #2
  %17 = bitcast %struct.stcolor_device_s** %sd to i8*
  call void @llvm.lifetime.end(i64 8, i8* %17) #2
  ret i32 0
}

declare %struct.gx_cm_color_map_procs_s* @gx_default_DevGray_get_color_mapping_procs(%struct.gx_device_s*) #0

declare i32 @gx_default_DevGray_get_color_comp_index(%struct.gx_device_s*, i8*, i32, i32) #0

; Function Attrs: nounwind uwtable
define internal i64 @stc_map_rgb_color(%struct.gx_device_s* %pdev, i16* %cv) #1 {
entry:
  %pdev.addr = alloca %struct.gx_device_s*, align 8
  %cv.addr = alloca i16*, align 8
  %sd = alloca %struct.stcolor_device_s*, align 8
  %shift = alloca i32, align 4
  %rv = alloca i64, align 8
  %r = alloca i16, align 2
  %g = alloca i16, align 2
  %b = alloca i16, align 2
  %m = alloca float*, align 8
  %fr = alloca float, align 4
  %fg = alloca float, align 4
  %fb = alloca float, align 4
  %fv = alloca float, align 4
  store %struct.gx_device_s* %pdev, %struct.gx_device_s** %pdev.addr, align 8, !tbaa !1
  store i16* %cv, i16** %cv.addr, align 8, !tbaa !1
  %0 = bitcast %struct.stcolor_device_s** %sd to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = load %struct.gx_device_s*, %struct.gx_device_s** %pdev.addr, align 8, !tbaa !1
  %2 = bitcast %struct.gx_device_s* %1 to %struct.stcolor_device_s*
  store %struct.stcolor_device_s* %2, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %3 = bitcast i32* %shift to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #2
  %4 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %color_info = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %4, i32 0, i32 11
  %depth = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info, i32 0, i32 3
  %5 = load i16, i16* %depth, align 2, !tbaa !54
  %conv = zext i16 %5 to i32
  %cmp = icmp eq i32 %conv, 24
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  %6 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %6, i32 0, i32 68
  %bits = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc, i32 0, i32 1
  %7 = load i32, i32* %bits, align 4, !tbaa !44
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 8, %cond.true ], [ %7, %cond.false ]
  store i32 %cond, i32* %shift, align 4, !tbaa !26
  %8 = bitcast i64* %rv to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8) #2
  store i64 0, i64* %rv, align 8, !tbaa !25
  %9 = bitcast i16* %r to i8*
  call void @llvm.lifetime.start(i64 2, i8* %9) #2
  %10 = load i16*, i16** %cv.addr, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds i16, i16* %10, i64 0
  %11 = load i16, i16* %arrayidx, align 2, !tbaa !73
  store i16 %11, i16* %r, align 2, !tbaa !73
  %12 = bitcast i16* %g to i8*
  call void @llvm.lifetime.start(i64 2, i8* %12) #2
  %13 = load i16*, i16** %cv.addr, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds i16, i16* %13, i64 1
  %14 = load i16, i16* %arrayidx2, align 2, !tbaa !73
  store i16 %14, i16* %g, align 2, !tbaa !73
  %15 = bitcast i16* %b to i8*
  call void @llvm.lifetime.start(i64 2, i8* %15) #2
  %16 = load i16*, i16** %cv.addr, align 8, !tbaa !1
  %arrayidx3 = getelementptr inbounds i16, i16* %16, i64 2
  %17 = load i16, i16* %arrayidx3, align 2, !tbaa !73
  store i16 %17, i16* %b, align 2, !tbaa !73
  %18 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc4 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %18, i32 0, i32 68
  %am = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc4, i32 0, i32 3
  %19 = load float*, float** %am, align 8, !tbaa !86
  %cmp5 = icmp ne float* %19, null
  br i1 %cmp5, label %land.lhs.true, label %if.end.87

land.lhs.true:                                    ; preds = %cond.end
  %20 = load i16, i16* %r, align 2, !tbaa !73
  %conv7 = zext i16 %20 to i32
  %21 = load i16, i16* %g, align 2, !tbaa !73
  %conv8 = zext i16 %21 to i32
  %cmp9 = icmp ne i32 %conv7, %conv8
  br i1 %cmp9, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true
  %22 = load i16, i16* %g, align 2, !tbaa !73
  %conv11 = zext i16 %22 to i32
  %23 = load i16, i16* %b, align 2, !tbaa !73
  %conv12 = zext i16 %23 to i32
  %cmp13 = icmp ne i32 %conv11, %conv12
  br i1 %cmp13, label %if.then, label %if.end.87

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  %24 = bitcast float** %m to i8*
  call void @llvm.lifetime.start(i64 8, i8* %24) #2
  %25 = bitcast float* %fr to i8*
  call void @llvm.lifetime.start(i64 4, i8* %25) #2
  %26 = bitcast float* %fg to i8*
  call void @llvm.lifetime.start(i64 4, i8* %26) #2
  %27 = bitcast float* %fb to i8*
  call void @llvm.lifetime.start(i64 4, i8* %27) #2
  %28 = bitcast float* %fv to i8*
  call void @llvm.lifetime.start(i64 4, i8* %28) #2
  %29 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc15 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %29, i32 0, i32 68
  %am16 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc15, i32 0, i32 3
  %30 = load float*, float** %am16, align 8, !tbaa !86
  store float* %30, float** %m, align 8, !tbaa !1
  %31 = load i16, i16* %r, align 2, !tbaa !73
  %conv17 = uitofp i16 %31 to float
  store float %conv17, float* %fr, align 4, !tbaa !37
  %32 = load i16, i16* %g, align 2, !tbaa !73
  %conv18 = uitofp i16 %32 to float
  store float %conv18, float* %fg, align 4, !tbaa !37
  %33 = load i16, i16* %b, align 2, !tbaa !73
  %conv19 = uitofp i16 %33 to float
  store float %conv19, float* %fb, align 4, !tbaa !37
  %34 = load float*, float** %m, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds float, float* %34, i32 1
  store float* %incdec.ptr, float** %m, align 8, !tbaa !1
  %35 = load float, float* %34, align 4, !tbaa !37
  %36 = load float, float* %fr, align 4, !tbaa !37
  %mul = fmul float %35, %36
  store float %mul, float* %fv, align 4, !tbaa !37
  %37 = load float*, float** %m, align 8, !tbaa !1
  %incdec.ptr20 = getelementptr inbounds float, float* %37, i32 1
  store float* %incdec.ptr20, float** %m, align 8, !tbaa !1
  %38 = load float, float* %37, align 4, !tbaa !37
  %39 = load float, float* %fg, align 4, !tbaa !37
  %mul21 = fmul float %38, %39
  %40 = load float, float* %fv, align 4, !tbaa !37
  %add = fadd float %40, %mul21
  store float %add, float* %fv, align 4, !tbaa !37
  %41 = load float*, float** %m, align 8, !tbaa !1
  %incdec.ptr22 = getelementptr inbounds float, float* %41, i32 1
  store float* %incdec.ptr22, float** %m, align 8, !tbaa !1
  %42 = load float, float* %41, align 4, !tbaa !37
  %43 = load float, float* %fb, align 4, !tbaa !37
  %mul23 = fmul float %42, %43
  %44 = load float, float* %fv, align 4, !tbaa !37
  %add24 = fadd float %44, %mul23
  store float %add24, float* %fv, align 4, !tbaa !37
  %45 = load float, float* %fv, align 4, !tbaa !37
  %conv25 = fpext float %45 to double
  %cmp26 = fcmp olt double %conv25, 0.000000e+00
  br i1 %cmp26, label %if.then.28, label %if.else

if.then.28:                                       ; preds = %if.then
  store i16 0, i16* %r, align 2, !tbaa !73
  br label %if.end.38

if.else:                                          ; preds = %if.then
  %46 = load float, float* %fv, align 4, !tbaa !37
  %conv29 = fpext float %46 to double
  %add30 = fadd double %conv29, 5.000000e-01
  %cmp31 = fcmp ogt double %add30, 6.553500e+04
  br i1 %cmp31, label %if.then.33, label %if.else.34

if.then.33:                                       ; preds = %if.else
  store i16 -1, i16* %r, align 2, !tbaa !73
  br label %if.end

if.else.34:                                       ; preds = %if.else
  %47 = load float, float* %fv, align 4, !tbaa !37
  %conv35 = fpext float %47 to double
  %add36 = fadd double %conv35, 5.000000e-01
  %conv37 = fptoui double %add36 to i16
  store i16 %conv37, i16* %r, align 2, !tbaa !73
  br label %if.end

if.end:                                           ; preds = %if.else.34, %if.then.33
  br label %if.end.38

if.end.38:                                        ; preds = %if.end, %if.then.28
  %48 = load float*, float** %m, align 8, !tbaa !1
  %incdec.ptr39 = getelementptr inbounds float, float* %48, i32 1
  store float* %incdec.ptr39, float** %m, align 8, !tbaa !1
  %49 = load float, float* %48, align 4, !tbaa !37
  %50 = load float, float* %fr, align 4, !tbaa !37
  %mul40 = fmul float %49, %50
  store float %mul40, float* %fv, align 4, !tbaa !37
  %51 = load float*, float** %m, align 8, !tbaa !1
  %incdec.ptr41 = getelementptr inbounds float, float* %51, i32 1
  store float* %incdec.ptr41, float** %m, align 8, !tbaa !1
  %52 = load float, float* %51, align 4, !tbaa !37
  %53 = load float, float* %fg, align 4, !tbaa !37
  %mul42 = fmul float %52, %53
  %54 = load float, float* %fv, align 4, !tbaa !37
  %add43 = fadd float %54, %mul42
  store float %add43, float* %fv, align 4, !tbaa !37
  %55 = load float*, float** %m, align 8, !tbaa !1
  %incdec.ptr44 = getelementptr inbounds float, float* %55, i32 1
  store float* %incdec.ptr44, float** %m, align 8, !tbaa !1
  %56 = load float, float* %55, align 4, !tbaa !37
  %57 = load float, float* %fb, align 4, !tbaa !37
  %mul45 = fmul float %56, %57
  %58 = load float, float* %fv, align 4, !tbaa !37
  %add46 = fadd float %58, %mul45
  store float %add46, float* %fv, align 4, !tbaa !37
  %59 = load float, float* %fv, align 4, !tbaa !37
  %conv47 = fpext float %59 to double
  %cmp48 = fcmp olt double %conv47, 0.000000e+00
  br i1 %cmp48, label %if.then.50, label %if.else.51

if.then.50:                                       ; preds = %if.end.38
  store i16 0, i16* %g, align 2, !tbaa !73
  br label %if.end.62

if.else.51:                                       ; preds = %if.end.38
  %60 = load float, float* %fv, align 4, !tbaa !37
  %conv52 = fpext float %60 to double
  %add53 = fadd double %conv52, 5.000000e-01
  %cmp54 = fcmp ogt double %add53, 6.553500e+04
  br i1 %cmp54, label %if.then.56, label %if.else.57

if.then.56:                                       ; preds = %if.else.51
  store i16 -1, i16* %g, align 2, !tbaa !73
  br label %if.end.61

if.else.57:                                       ; preds = %if.else.51
  %61 = load float, float* %fv, align 4, !tbaa !37
  %conv58 = fpext float %61 to double
  %add59 = fadd double %conv58, 5.000000e-01
  %conv60 = fptoui double %add59 to i16
  store i16 %conv60, i16* %g, align 2, !tbaa !73
  br label %if.end.61

if.end.61:                                        ; preds = %if.else.57, %if.then.56
  br label %if.end.62

if.end.62:                                        ; preds = %if.end.61, %if.then.50
  %62 = load float*, float** %m, align 8, !tbaa !1
  %incdec.ptr63 = getelementptr inbounds float, float* %62, i32 1
  store float* %incdec.ptr63, float** %m, align 8, !tbaa !1
  %63 = load float, float* %62, align 4, !tbaa !37
  %64 = load float, float* %fr, align 4, !tbaa !37
  %mul64 = fmul float %63, %64
  store float %mul64, float* %fv, align 4, !tbaa !37
  %65 = load float*, float** %m, align 8, !tbaa !1
  %incdec.ptr65 = getelementptr inbounds float, float* %65, i32 1
  store float* %incdec.ptr65, float** %m, align 8, !tbaa !1
  %66 = load float, float* %65, align 4, !tbaa !37
  %67 = load float, float* %fg, align 4, !tbaa !37
  %mul66 = fmul float %66, %67
  %68 = load float, float* %fv, align 4, !tbaa !37
  %add67 = fadd float %68, %mul66
  store float %add67, float* %fv, align 4, !tbaa !37
  %69 = load float*, float** %m, align 8, !tbaa !1
  %incdec.ptr68 = getelementptr inbounds float, float* %69, i32 1
  store float* %incdec.ptr68, float** %m, align 8, !tbaa !1
  %70 = load float, float* %69, align 4, !tbaa !37
  %71 = load float, float* %fb, align 4, !tbaa !37
  %mul69 = fmul float %70, %71
  %72 = load float, float* %fv, align 4, !tbaa !37
  %add70 = fadd float %72, %mul69
  store float %add70, float* %fv, align 4, !tbaa !37
  %73 = load float, float* %fv, align 4, !tbaa !37
  %conv71 = fpext float %73 to double
  %cmp72 = fcmp olt double %conv71, 0.000000e+00
  br i1 %cmp72, label %if.then.74, label %if.else.75

if.then.74:                                       ; preds = %if.end.62
  store i16 0, i16* %b, align 2, !tbaa !73
  br label %if.end.86

if.else.75:                                       ; preds = %if.end.62
  %74 = load float, float* %fv, align 4, !tbaa !37
  %conv76 = fpext float %74 to double
  %add77 = fadd double %conv76, 5.000000e-01
  %cmp78 = fcmp ogt double %add77, 6.553500e+04
  br i1 %cmp78, label %if.then.80, label %if.else.81

if.then.80:                                       ; preds = %if.else.75
  store i16 -1, i16* %b, align 2, !tbaa !73
  br label %if.end.85

if.else.81:                                       ; preds = %if.else.75
  %75 = load float, float* %fv, align 4, !tbaa !37
  %conv82 = fpext float %75 to double
  %add83 = fadd double %conv82, 5.000000e-01
  %conv84 = fptoui double %add83 to i16
  store i16 %conv84, i16* %b, align 2, !tbaa !73
  br label %if.end.85

if.end.85:                                        ; preds = %if.else.81, %if.then.80
  br label %if.end.86

if.end.86:                                        ; preds = %if.end.85, %if.then.74
  %76 = bitcast float* %fv to i8*
  call void @llvm.lifetime.end(i64 4, i8* %76) #2
  %77 = bitcast float* %fb to i8*
  call void @llvm.lifetime.end(i64 4, i8* %77) #2
  %78 = bitcast float* %fg to i8*
  call void @llvm.lifetime.end(i64 4, i8* %78) #2
  %79 = bitcast float* %fr to i8*
  call void @llvm.lifetime.end(i64 4, i8* %79) #2
  %80 = bitcast float** %m to i8*
  call void @llvm.lifetime.end(i64 8, i8* %80) #2
  br label %if.end.87

if.end.87:                                        ; preds = %if.end.86, %lor.lhs.false, %cond.end
  %81 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc88 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %81, i32 0, i32 68
  %bits89 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc88, i32 0, i32 1
  %82 = load i32, i32* %bits89, align 4, !tbaa !44
  %cmp90 = icmp eq i32 %82, 8
  br i1 %cmp90, label %land.lhs.true.92, label %if.else.105

land.lhs.true.92:                                 ; preds = %if.end.87
  %83 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc93 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %83, i32 0, i32 68
  %dither = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc93, i32 0, i32 2
  %84 = load %struct.stc_dither_s*, %struct.stc_dither_s** %dither, align 8, !tbaa !41
  %flags = getelementptr inbounds %struct.stc_dither_s, %struct.stc_dither_s* %84, i32 0, i32 2
  %85 = load i32, i32* %flags, align 4, !tbaa !42
  %and = and i32 %85, 24
  %cmp94 = icmp eq i32 %and, 8
  br i1 %cmp94, label %if.then.96, label %if.else.105

if.then.96:                                       ; preds = %land.lhs.true.92
  %86 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %87 = load i16, i16* %r, align 2, !tbaa !73
  %call = call zeroext i16 @stc_truncate1(%struct.stcolor_device_s* %86, i32 0, i16 zeroext %87) #5
  %conv97 = zext i16 %call to i64
  store i64 %conv97, i64* %rv, align 8, !tbaa !25
  %88 = load i64, i64* %rv, align 8, !tbaa !25
  %89 = load i32, i32* %shift, align 4, !tbaa !26
  %sh_prom = zext i32 %89 to i64
  %shl = shl i64 %88, %sh_prom
  %90 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %91 = load i16, i16* %g, align 2, !tbaa !73
  %call98 = call zeroext i16 @stc_truncate1(%struct.stcolor_device_s* %90, i32 1, i16 zeroext %91) #5
  %conv99 = zext i16 %call98 to i64
  %or = or i64 %shl, %conv99
  store i64 %or, i64* %rv, align 8, !tbaa !25
  %92 = load i64, i64* %rv, align 8, !tbaa !25
  %93 = load i32, i32* %shift, align 4, !tbaa !26
  %sh_prom100 = zext i32 %93 to i64
  %shl101 = shl i64 %92, %sh_prom100
  %94 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %95 = load i16, i16* %b, align 2, !tbaa !73
  %call102 = call zeroext i16 @stc_truncate1(%struct.stcolor_device_s* %94, i32 2, i16 zeroext %95) #5
  %conv103 = zext i16 %call102 to i64
  %or104 = or i64 %shl101, %conv103
  store i64 %or104, i64* %rv, align 8, !tbaa !25
  br label %if.end.118

if.else.105:                                      ; preds = %land.lhs.true.92, %if.end.87
  %96 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %97 = load i16, i16* %r, align 2, !tbaa !73
  %call106 = call zeroext i16 @stc_truncate(%struct.stcolor_device_s* %96, i32 0, i16 zeroext %97) #5
  %conv107 = zext i16 %call106 to i64
  store i64 %conv107, i64* %rv, align 8, !tbaa !25
  %98 = load i64, i64* %rv, align 8, !tbaa !25
  %99 = load i32, i32* %shift, align 4, !tbaa !26
  %sh_prom108 = zext i32 %99 to i64
  %shl109 = shl i64 %98, %sh_prom108
  %100 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %101 = load i16, i16* %g, align 2, !tbaa !73
  %call110 = call zeroext i16 @stc_truncate(%struct.stcolor_device_s* %100, i32 1, i16 zeroext %101) #5
  %conv111 = zext i16 %call110 to i64
  %or112 = or i64 %shl109, %conv111
  store i64 %or112, i64* %rv, align 8, !tbaa !25
  %102 = load i64, i64* %rv, align 8, !tbaa !25
  %103 = load i32, i32* %shift, align 4, !tbaa !26
  %sh_prom113 = zext i32 %103 to i64
  %shl114 = shl i64 %102, %sh_prom113
  %104 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %105 = load i16, i16* %b, align 2, !tbaa !73
  %call115 = call zeroext i16 @stc_truncate(%struct.stcolor_device_s* %104, i32 2, i16 zeroext %105) #5
  %conv116 = zext i16 %call115 to i64
  %or117 = or i64 %shl114, %conv116
  store i64 %or117, i64* %rv, align 8, !tbaa !25
  br label %if.end.118

if.end.118:                                       ; preds = %if.else.105, %if.then.96
  %106 = load i64, i64* %rv, align 8, !tbaa !25
  %107 = bitcast i16* %b to i8*
  call void @llvm.lifetime.end(i64 2, i8* %107) #2
  %108 = bitcast i16* %g to i8*
  call void @llvm.lifetime.end(i64 2, i8* %108) #2
  %109 = bitcast i16* %r to i8*
  call void @llvm.lifetime.end(i64 2, i8* %109) #2
  %110 = bitcast i64* %rv to i8*
  call void @llvm.lifetime.end(i64 8, i8* %110) #2
  %111 = bitcast i32* %shift to i8*
  call void @llvm.lifetime.end(i64 4, i8* %111) #2
  %112 = bitcast %struct.stcolor_device_s** %sd to i8*
  call void @llvm.lifetime.end(i64 8, i8* %112) #2
  ret i64 %106
}

; Function Attrs: nounwind uwtable
define internal i32 @stc_map_color_rgb(%struct.gx_device_s* %pdev, i64 %color, i16* %prgb) #1 {
entry:
  %pdev.addr = alloca %struct.gx_device_s*, align 8
  %color.addr = alloca i64, align 8
  %prgb.addr = alloca i16*, align 8
  %sd = alloca %struct.stcolor_device_s*, align 8
  %shift = alloca i32, align 4
  %l = alloca i64, align 8
  store %struct.gx_device_s* %pdev, %struct.gx_device_s** %pdev.addr, align 8, !tbaa !1
  store i64 %color, i64* %color.addr, align 8, !tbaa !25
  store i16* %prgb, i16** %prgb.addr, align 8, !tbaa !1
  %0 = bitcast %struct.stcolor_device_s** %sd to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = load %struct.gx_device_s*, %struct.gx_device_s** %pdev.addr, align 8, !tbaa !1
  %2 = bitcast %struct.gx_device_s* %1 to %struct.stcolor_device_s*
  store %struct.stcolor_device_s* %2, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %3 = bitcast i32* %shift to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #2
  %4 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %color_info = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %4, i32 0, i32 11
  %depth = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info, i32 0, i32 3
  %5 = load i16, i16* %depth, align 2, !tbaa !54
  %conv = zext i16 %5 to i32
  %cmp = icmp eq i32 %conv, 24
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  %6 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %6, i32 0, i32 68
  %bits = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc, i32 0, i32 1
  %7 = load i32, i32* %bits, align 4, !tbaa !44
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 8, %cond.true ], [ %7, %cond.false ]
  store i32 %cond, i32* %shift, align 4, !tbaa !26
  %8 = bitcast i64* %l to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8) #2
  %9 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc2 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %9, i32 0, i32 68
  %bits3 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2, i32 0, i32 1
  %10 = load i32, i32* %bits3, align 4, !tbaa !44
  %sh_prom = zext i32 %10 to i64
  %shl = shl i64 1, %sh_prom
  %sub = sub i64 %shl, 1
  store i64 %sub, i64* %l, align 8, !tbaa !25
  %11 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %12 = load i64, i64* %color.addr, align 8, !tbaa !25
  %13 = load i32, i32* %shift, align 4, !tbaa !26
  %shl4 = shl i32 %13, 1
  %sh_prom5 = zext i32 %shl4 to i64
  %shr = lshr i64 %12, %sh_prom5
  %14 = load i64, i64* %l, align 8, !tbaa !25
  %and = and i64 %shr, %14
  %call = call zeroext i16 @stc_expand(%struct.stcolor_device_s* %11, i32 0, i64 %and) #5
  %15 = load i16*, i16** %prgb.addr, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds i16, i16* %15, i64 0
  store i16 %call, i16* %arrayidx, align 2, !tbaa !73
  %16 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %17 = load i64, i64* %color.addr, align 8, !tbaa !25
  %18 = load i32, i32* %shift, align 4, !tbaa !26
  %sh_prom6 = zext i32 %18 to i64
  %shr7 = lshr i64 %17, %sh_prom6
  %19 = load i64, i64* %l, align 8, !tbaa !25
  %and8 = and i64 %shr7, %19
  %call9 = call zeroext i16 @stc_expand(%struct.stcolor_device_s* %16, i32 1, i64 %and8) #5
  %20 = load i16*, i16** %prgb.addr, align 8, !tbaa !1
  %arrayidx10 = getelementptr inbounds i16, i16* %20, i64 1
  store i16 %call9, i16* %arrayidx10, align 2, !tbaa !73
  %21 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %22 = load i64, i64* %color.addr, align 8, !tbaa !25
  %23 = load i64, i64* %l, align 8, !tbaa !25
  %and11 = and i64 %22, %23
  %call12 = call zeroext i16 @stc_expand(%struct.stcolor_device_s* %21, i32 2, i64 %and11) #5
  %24 = load i16*, i16** %prgb.addr, align 8, !tbaa !1
  %arrayidx13 = getelementptr inbounds i16, i16* %24, i64 2
  store i16 %call12, i16* %arrayidx13, align 2, !tbaa !73
  %25 = bitcast i64* %l to i8*
  call void @llvm.lifetime.end(i64 8, i8* %25) #2
  %26 = bitcast i32* %shift to i8*
  call void @llvm.lifetime.end(i64 4, i8* %26) #2
  %27 = bitcast %struct.stcolor_device_s** %sd to i8*
  call void @llvm.lifetime.end(i64 8, i8* %27) #2
  ret i32 0
}

declare %struct.gx_cm_color_map_procs_s* @gx_default_DevRGB_get_color_mapping_procs(%struct.gx_device_s*) #0

declare i32 @gx_default_DevRGB_get_color_comp_index(%struct.gx_device_s*, i8*, i32, i32) #0

declare i64 @gx_default_w_b_map_rgb_color(%struct.gx_device_s*, i16*) #0

declare %struct.gx_cm_color_map_procs_s* @gx_default_DevCMYK_get_color_mapping_procs(%struct.gx_device_s*) #0

declare i32 @gx_default_DevCMYK_get_color_comp_index(%struct.gx_device_s*, i8*, i32, i32) #0

; Function Attrs: nounwind uwtable
define internal i64 @stc_map_cmyk10_color(%struct.gx_device_s* %pdev, i16* %cv) #1 {
entry:
  %pdev.addr = alloca %struct.gx_device_s*, align 8
  %cv.addr = alloca i16*, align 8
  %sd = alloca %struct.stcolor_device_s*, align 8
  %mode = alloca i32, align 4
  %rv = alloca i64, align 8
  %c = alloca i16, align 2
  %m = alloca i16, align 2
  %y = alloca i16, align 2
  %k = alloca i16, align 2
  %a = alloca float*, align 8
  %fc = alloca float, align 4
  %fm = alloca float, align 4
  %fy = alloca float, align 4
  %fk = alloca float, align 4
  %fv = alloca float, align 4
  %ui = alloca %union.anon.2, align 4
  %uo = alloca %union.anon.2, align 4
  store %struct.gx_device_s* %pdev, %struct.gx_device_s** %pdev.addr, align 8, !tbaa !1
  store i16* %cv, i16** %cv.addr, align 8, !tbaa !1
  %0 = bitcast %struct.stcolor_device_s** %sd to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = load %struct.gx_device_s*, %struct.gx_device_s** %pdev.addr, align 8, !tbaa !1
  %2 = bitcast %struct.gx_device_s* %1 to %struct.stcolor_device_s*
  store %struct.stcolor_device_s* %2, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %3 = bitcast i32* %mode to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #2
  %4 = bitcast i64* %rv to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4) #2
  store i64 0, i64* %rv, align 8, !tbaa !25
  %5 = bitcast i16* %c to i8*
  call void @llvm.lifetime.start(i64 2, i8* %5) #2
  %6 = load i16*, i16** %cv.addr, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds i16, i16* %6, i64 0
  %7 = load i16, i16* %arrayidx, align 2, !tbaa !73
  store i16 %7, i16* %c, align 2, !tbaa !73
  %8 = bitcast i16* %m to i8*
  call void @llvm.lifetime.start(i64 2, i8* %8) #2
  %9 = load i16*, i16** %cv.addr, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds i16, i16* %9, i64 1
  %10 = load i16, i16* %arrayidx1, align 2, !tbaa !73
  store i16 %10, i16* %m, align 2, !tbaa !73
  %11 = bitcast i16* %y to i8*
  call void @llvm.lifetime.start(i64 2, i8* %11) #2
  %12 = load i16*, i16** %cv.addr, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds i16, i16* %12, i64 2
  %13 = load i16, i16* %arrayidx2, align 2, !tbaa !73
  store i16 %13, i16* %y, align 2, !tbaa !73
  %14 = bitcast i16* %k to i8*
  call void @llvm.lifetime.start(i64 2, i8* %14) #2
  %15 = load i16*, i16** %cv.addr, align 8, !tbaa !1
  %arrayidx3 = getelementptr inbounds i16, i16* %15, i64 3
  %16 = load i16, i16* %arrayidx3, align 2, !tbaa !73
  store i16 %16, i16* %k, align 2, !tbaa !73
  %17 = load i16, i16* %c, align 2, !tbaa !73
  %conv = zext i16 %17 to i32
  %18 = load i16, i16* %m, align 2, !tbaa !73
  %conv4 = zext i16 %18 to i32
  %cmp = icmp eq i32 %conv, %conv4
  br i1 %cmp, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %entry
  %19 = load i16, i16* %m, align 2, !tbaa !73
  %conv6 = zext i16 %19 to i32
  %20 = load i16, i16* %y, align 2, !tbaa !73
  %conv7 = zext i16 %20 to i32
  %cmp8 = icmp eq i32 %conv6, %conv7
  br i1 %cmp8, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true
  %21 = load i16, i16* %c, align 2, !tbaa !73
  %conv10 = zext i16 %21 to i32
  %22 = load i16, i16* %k, align 2, !tbaa !73
  %conv11 = zext i16 %22 to i32
  %cmp12 = icmp sgt i32 %conv10, %conv11
  br i1 %cmp12, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then
  %23 = load i16, i16* %c, align 2, !tbaa !73
  %conv14 = zext i16 %23 to i32
  br label %cond.end

cond.false:                                       ; preds = %if.then
  %24 = load i16, i16* %k, align 2, !tbaa !73
  %conv15 = zext i16 %24 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv14, %cond.true ], [ %conv15, %cond.false ]
  %conv16 = trunc i32 %cond to i16
  store i16 %conv16, i16* %k, align 2, !tbaa !73
  store i16 0, i16* %y, align 2, !tbaa !73
  store i16 0, i16* %m, align 2, !tbaa !73
  store i16 0, i16* %c, align 2, !tbaa !73
  store i32 3, i32* %mode, align 4, !tbaa !26
  br label %if.end.160

if.else:                                          ; preds = %land.lhs.true, %entry
  %25 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %25, i32 0, i32 68
  %am = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc, i32 0, i32 3
  %26 = load float*, float** %am, align 8, !tbaa !86
  %cmp17 = icmp ne float* %26, null
  br i1 %cmp17, label %if.then.19, label %if.end.138

if.then.19:                                       ; preds = %if.else
  %27 = bitcast float** %a to i8*
  call void @llvm.lifetime.start(i64 8, i8* %27) #2
  %28 = bitcast float* %fc to i8*
  call void @llvm.lifetime.start(i64 4, i8* %28) #2
  %29 = bitcast float* %fm to i8*
  call void @llvm.lifetime.start(i64 4, i8* %29) #2
  %30 = bitcast float* %fy to i8*
  call void @llvm.lifetime.start(i64 4, i8* %30) #2
  %31 = bitcast float* %fk to i8*
  call void @llvm.lifetime.start(i64 4, i8* %31) #2
  %32 = bitcast float* %fv to i8*
  call void @llvm.lifetime.start(i64 4, i8* %32) #2
  %33 = load i16, i16* %c, align 2, !tbaa !73
  %conv20 = zext i16 %33 to i32
  %34 = load i16, i16* %m, align 2, !tbaa !73
  %conv21 = zext i16 %34 to i32
  %cmp22 = icmp slt i32 %conv20, %conv21
  br i1 %cmp22, label %cond.true.24, label %cond.false.26

cond.true.24:                                     ; preds = %if.then.19
  %35 = load i16, i16* %c, align 2, !tbaa !73
  %conv25 = zext i16 %35 to i32
  br label %cond.end.28

cond.false.26:                                    ; preds = %if.then.19
  %36 = load i16, i16* %m, align 2, !tbaa !73
  %conv27 = zext i16 %36 to i32
  br label %cond.end.28

cond.end.28:                                      ; preds = %cond.false.26, %cond.true.24
  %cond29 = phi i32 [ %conv25, %cond.true.24 ], [ %conv27, %cond.false.26 ]
  %conv30 = trunc i32 %cond29 to i16
  store i16 %conv30, i16* %k, align 2, !tbaa !73
  %37 = load i16, i16* %k, align 2, !tbaa !73
  %conv31 = zext i16 %37 to i32
  %38 = load i16, i16* %y, align 2, !tbaa !73
  %conv32 = zext i16 %38 to i32
  %cmp33 = icmp slt i32 %conv31, %conv32
  br i1 %cmp33, label %cond.true.35, label %cond.false.37

cond.true.35:                                     ; preds = %cond.end.28
  %39 = load i16, i16* %k, align 2, !tbaa !73
  %conv36 = zext i16 %39 to i32
  br label %cond.end.39

cond.false.37:                                    ; preds = %cond.end.28
  %40 = load i16, i16* %y, align 2, !tbaa !73
  %conv38 = zext i16 %40 to i32
  br label %cond.end.39

cond.end.39:                                      ; preds = %cond.false.37, %cond.true.35
  %cond40 = phi i32 [ %conv36, %cond.true.35 ], [ %conv38, %cond.false.37 ]
  %conv41 = trunc i32 %cond40 to i16
  store i16 %conv41, i16* %k, align 2, !tbaa !73
  %41 = load i16, i16* %k, align 2, !tbaa !73
  %tobool = icmp ne i16 %41, 0
  br i1 %tobool, label %if.then.42, label %if.end

if.then.42:                                       ; preds = %cond.end.39
  %42 = load i16, i16* %k, align 2, !tbaa !73
  %conv43 = zext i16 %42 to i32
  %43 = load i16, i16* %c, align 2, !tbaa !73
  %conv44 = zext i16 %43 to i32
  %sub = sub nsw i32 %conv44, %conv43
  %conv45 = trunc i32 %sub to i16
  store i16 %conv45, i16* %c, align 2, !tbaa !73
  %44 = load i16, i16* %k, align 2, !tbaa !73
  %conv46 = zext i16 %44 to i32
  %45 = load i16, i16* %m, align 2, !tbaa !73
  %conv47 = zext i16 %45 to i32
  %sub48 = sub nsw i32 %conv47, %conv46
  %conv49 = trunc i32 %sub48 to i16
  store i16 %conv49, i16* %m, align 2, !tbaa !73
  %46 = load i16, i16* %k, align 2, !tbaa !73
  %conv50 = zext i16 %46 to i32
  %47 = load i16, i16* %y, align 2, !tbaa !73
  %conv51 = zext i16 %47 to i32
  %sub52 = sub nsw i32 %conv51, %conv50
  %conv53 = trunc i32 %sub52 to i16
  store i16 %conv53, i16* %y, align 2, !tbaa !73
  br label %if.end

if.end:                                           ; preds = %if.then.42, %cond.end.39
  %48 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc54 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %48, i32 0, i32 68
  %am55 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc54, i32 0, i32 3
  %49 = load float*, float** %am55, align 8, !tbaa !86
  store float* %49, float** %a, align 8, !tbaa !1
  %50 = load i16, i16* %c, align 2, !tbaa !73
  %conv56 = uitofp i16 %50 to float
  store float %conv56, float* %fc, align 4, !tbaa !37
  %51 = load i16, i16* %m, align 2, !tbaa !73
  %conv57 = uitofp i16 %51 to float
  store float %conv57, float* %fm, align 4, !tbaa !37
  %52 = load i16, i16* %y, align 2, !tbaa !73
  %conv58 = uitofp i16 %52 to float
  store float %conv58, float* %fy, align 4, !tbaa !37
  %53 = load i16, i16* %k, align 2, !tbaa !73
  %conv59 = uitofp i16 %53 to float
  store float %conv59, float* %fk, align 4, !tbaa !37
  %54 = load float*, float** %a, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds float, float* %54, i32 1
  store float* %incdec.ptr, float** %a, align 8, !tbaa !1
  %55 = load float, float* %54, align 4, !tbaa !37
  %56 = load float, float* %fc, align 4, !tbaa !37
  %mul = fmul float %55, %56
  store float %mul, float* %fv, align 4, !tbaa !37
  %57 = load float*, float** %a, align 8, !tbaa !1
  %incdec.ptr60 = getelementptr inbounds float, float* %57, i32 1
  store float* %incdec.ptr60, float** %a, align 8, !tbaa !1
  %58 = load float, float* %57, align 4, !tbaa !37
  %59 = load float, float* %fm, align 4, !tbaa !37
  %mul61 = fmul float %58, %59
  %60 = load float, float* %fv, align 4, !tbaa !37
  %add = fadd float %60, %mul61
  store float %add, float* %fv, align 4, !tbaa !37
  %61 = load float*, float** %a, align 8, !tbaa !1
  %incdec.ptr62 = getelementptr inbounds float, float* %61, i32 1
  store float* %incdec.ptr62, float** %a, align 8, !tbaa !1
  %62 = load float, float* %61, align 4, !tbaa !37
  %63 = load float, float* %fy, align 4, !tbaa !37
  %mul63 = fmul float %62, %63
  %64 = load float, float* %fv, align 4, !tbaa !37
  %add64 = fadd float %64, %mul63
  store float %add64, float* %fv, align 4, !tbaa !37
  %65 = load float*, float** %a, align 8, !tbaa !1
  %incdec.ptr65 = getelementptr inbounds float, float* %65, i32 1
  store float* %incdec.ptr65, float** %a, align 8, !tbaa !1
  %66 = load float, float* %65, align 4, !tbaa !37
  %67 = load float, float* %fk, align 4, !tbaa !37
  %mul66 = fmul float %66, %67
  %68 = load float, float* %fv, align 4, !tbaa !37
  %add67 = fadd float %68, %mul66
  store float %add67, float* %fv, align 4, !tbaa !37
  %69 = load float, float* %fv, align 4, !tbaa !37
  %conv68 = fpext float %69 to double
  %cmp69 = fcmp olt double %conv68, 0.000000e+00
  br i1 %cmp69, label %if.then.71, label %if.else.72

if.then.71:                                       ; preds = %if.end
  store i16 0, i16* %c, align 2, !tbaa !73
  br label %if.end.83

if.else.72:                                       ; preds = %if.end
  %70 = load float, float* %fv, align 4, !tbaa !37
  %conv73 = fpext float %70 to double
  %add74 = fadd double %conv73, 5.000000e-01
  %cmp75 = fcmp ogt double %add74, 6.553500e+04
  br i1 %cmp75, label %if.then.77, label %if.else.78

if.then.77:                                       ; preds = %if.else.72
  store i16 -1, i16* %c, align 2, !tbaa !73
  br label %if.end.82

if.else.78:                                       ; preds = %if.else.72
  %71 = load float, float* %fv, align 4, !tbaa !37
  %conv79 = fpext float %71 to double
  %add80 = fadd double %conv79, 5.000000e-01
  %conv81 = fptoui double %add80 to i16
  store i16 %conv81, i16* %c, align 2, !tbaa !73
  br label %if.end.82

if.end.82:                                        ; preds = %if.else.78, %if.then.77
  br label %if.end.83

if.end.83:                                        ; preds = %if.end.82, %if.then.71
  %72 = load float*, float** %a, align 8, !tbaa !1
  %incdec.ptr84 = getelementptr inbounds float, float* %72, i32 1
  store float* %incdec.ptr84, float** %a, align 8, !tbaa !1
  %73 = load float, float* %72, align 4, !tbaa !37
  %74 = load float, float* %fc, align 4, !tbaa !37
  %mul85 = fmul float %73, %74
  store float %mul85, float* %fv, align 4, !tbaa !37
  %75 = load float*, float** %a, align 8, !tbaa !1
  %incdec.ptr86 = getelementptr inbounds float, float* %75, i32 1
  store float* %incdec.ptr86, float** %a, align 8, !tbaa !1
  %76 = load float, float* %75, align 4, !tbaa !37
  %77 = load float, float* %fm, align 4, !tbaa !37
  %mul87 = fmul float %76, %77
  %78 = load float, float* %fv, align 4, !tbaa !37
  %add88 = fadd float %78, %mul87
  store float %add88, float* %fv, align 4, !tbaa !37
  %79 = load float*, float** %a, align 8, !tbaa !1
  %incdec.ptr89 = getelementptr inbounds float, float* %79, i32 1
  store float* %incdec.ptr89, float** %a, align 8, !tbaa !1
  %80 = load float, float* %79, align 4, !tbaa !37
  %81 = load float, float* %fy, align 4, !tbaa !37
  %mul90 = fmul float %80, %81
  %82 = load float, float* %fv, align 4, !tbaa !37
  %add91 = fadd float %82, %mul90
  store float %add91, float* %fv, align 4, !tbaa !37
  %83 = load float*, float** %a, align 8, !tbaa !1
  %incdec.ptr92 = getelementptr inbounds float, float* %83, i32 1
  store float* %incdec.ptr92, float** %a, align 8, !tbaa !1
  %84 = load float, float* %83, align 4, !tbaa !37
  %85 = load float, float* %fk, align 4, !tbaa !37
  %mul93 = fmul float %84, %85
  %86 = load float, float* %fv, align 4, !tbaa !37
  %add94 = fadd float %86, %mul93
  store float %add94, float* %fv, align 4, !tbaa !37
  %87 = load float, float* %fv, align 4, !tbaa !37
  %conv95 = fpext float %87 to double
  %cmp96 = fcmp olt double %conv95, 0.000000e+00
  br i1 %cmp96, label %if.then.98, label %if.else.99

if.then.98:                                       ; preds = %if.end.83
  store i16 0, i16* %m, align 2, !tbaa !73
  br label %if.end.110

if.else.99:                                       ; preds = %if.end.83
  %88 = load float, float* %fv, align 4, !tbaa !37
  %conv100 = fpext float %88 to double
  %add101 = fadd double %conv100, 5.000000e-01
  %cmp102 = fcmp ogt double %add101, 6.553500e+04
  br i1 %cmp102, label %if.then.104, label %if.else.105

if.then.104:                                      ; preds = %if.else.99
  store i16 -1, i16* %m, align 2, !tbaa !73
  br label %if.end.109

if.else.105:                                      ; preds = %if.else.99
  %89 = load float, float* %fv, align 4, !tbaa !37
  %conv106 = fpext float %89 to double
  %add107 = fadd double %conv106, 5.000000e-01
  %conv108 = fptoui double %add107 to i16
  store i16 %conv108, i16* %m, align 2, !tbaa !73
  br label %if.end.109

if.end.109:                                       ; preds = %if.else.105, %if.then.104
  br label %if.end.110

if.end.110:                                       ; preds = %if.end.109, %if.then.98
  %90 = load float*, float** %a, align 8, !tbaa !1
  %incdec.ptr111 = getelementptr inbounds float, float* %90, i32 1
  store float* %incdec.ptr111, float** %a, align 8, !tbaa !1
  %91 = load float, float* %90, align 4, !tbaa !37
  %92 = load float, float* %fc, align 4, !tbaa !37
  %mul112 = fmul float %91, %92
  store float %mul112, float* %fv, align 4, !tbaa !37
  %93 = load float*, float** %a, align 8, !tbaa !1
  %incdec.ptr113 = getelementptr inbounds float, float* %93, i32 1
  store float* %incdec.ptr113, float** %a, align 8, !tbaa !1
  %94 = load float, float* %93, align 4, !tbaa !37
  %95 = load float, float* %fm, align 4, !tbaa !37
  %mul114 = fmul float %94, %95
  %96 = load float, float* %fv, align 4, !tbaa !37
  %add115 = fadd float %96, %mul114
  store float %add115, float* %fv, align 4, !tbaa !37
  %97 = load float*, float** %a, align 8, !tbaa !1
  %incdec.ptr116 = getelementptr inbounds float, float* %97, i32 1
  store float* %incdec.ptr116, float** %a, align 8, !tbaa !1
  %98 = load float, float* %97, align 4, !tbaa !37
  %99 = load float, float* %fy, align 4, !tbaa !37
  %mul117 = fmul float %98, %99
  %100 = load float, float* %fv, align 4, !tbaa !37
  %add118 = fadd float %100, %mul117
  store float %add118, float* %fv, align 4, !tbaa !37
  %101 = load float*, float** %a, align 8, !tbaa !1
  %incdec.ptr119 = getelementptr inbounds float, float* %101, i32 1
  store float* %incdec.ptr119, float** %a, align 8, !tbaa !1
  %102 = load float, float* %101, align 4, !tbaa !37
  %103 = load float, float* %fk, align 4, !tbaa !37
  %mul120 = fmul float %102, %103
  %104 = load float, float* %fv, align 4, !tbaa !37
  %add121 = fadd float %104, %mul120
  store float %add121, float* %fv, align 4, !tbaa !37
  %105 = load float, float* %fv, align 4, !tbaa !37
  %conv122 = fpext float %105 to double
  %cmp123 = fcmp olt double %conv122, 0.000000e+00
  br i1 %cmp123, label %if.then.125, label %if.else.126

if.then.125:                                      ; preds = %if.end.110
  store i16 0, i16* %y, align 2, !tbaa !73
  br label %if.end.137

if.else.126:                                      ; preds = %if.end.110
  %106 = load float, float* %fv, align 4, !tbaa !37
  %conv127 = fpext float %106 to double
  %add128 = fadd double %conv127, 5.000000e-01
  %cmp129 = fcmp ogt double %add128, 6.553500e+04
  br i1 %cmp129, label %if.then.131, label %if.else.132

if.then.131:                                      ; preds = %if.else.126
  store i16 -1, i16* %y, align 2, !tbaa !73
  br label %if.end.136

if.else.132:                                      ; preds = %if.else.126
  %107 = load float, float* %fv, align 4, !tbaa !37
  %conv133 = fpext float %107 to double
  %add134 = fadd double %conv133, 5.000000e-01
  %conv135 = fptoui double %add134 to i16
  store i16 %conv135, i16* %y, align 2, !tbaa !73
  br label %if.end.136

if.end.136:                                       ; preds = %if.else.132, %if.then.131
  br label %if.end.137

if.end.137:                                       ; preds = %if.end.136, %if.then.125
  %108 = bitcast float* %fv to i8*
  call void @llvm.lifetime.end(i64 4, i8* %108) #2
  %109 = bitcast float* %fk to i8*
  call void @llvm.lifetime.end(i64 4, i8* %109) #2
  %110 = bitcast float* %fy to i8*
  call void @llvm.lifetime.end(i64 4, i8* %110) #2
  %111 = bitcast float* %fm to i8*
  call void @llvm.lifetime.end(i64 4, i8* %111) #2
  %112 = bitcast float* %fc to i8*
  call void @llvm.lifetime.end(i64 4, i8* %112) #2
  %113 = bitcast float** %a to i8*
  call void @llvm.lifetime.end(i64 8, i8* %113) #2
  br label %if.end.138

if.end.138:                                       ; preds = %if.end.137, %if.else
  %114 = load i16, i16* %c, align 2, !tbaa !73
  %conv139 = zext i16 %114 to i32
  %115 = load i16, i16* %m, align 2, !tbaa !73
  %conv140 = zext i16 %115 to i32
  %cmp141 = icmp slt i32 %conv139, %conv140
  br i1 %cmp141, label %if.then.143, label %if.else.151

if.then.143:                                      ; preds = %if.end.138
  %116 = load i16, i16* %c, align 2, !tbaa !73
  %conv144 = zext i16 %116 to i32
  %117 = load i16, i16* %y, align 2, !tbaa !73
  %conv145 = zext i16 %117 to i32
  %cmp146 = icmp slt i32 %conv144, %conv145
  br i1 %cmp146, label %if.then.148, label %if.else.149

if.then.148:                                      ; preds = %if.then.143
  %118 = load i16, i16* %c, align 2, !tbaa !73
  store i16 %118, i16* %k, align 2, !tbaa !73
  store i16 0, i16* %c, align 2, !tbaa !73
  store i32 0, i32* %mode, align 4, !tbaa !26
  br label %if.end.150

if.else.149:                                      ; preds = %if.then.143
  %119 = load i16, i16* %y, align 2, !tbaa !73
  store i16 %119, i16* %k, align 2, !tbaa !73
  store i16 0, i16* %y, align 2, !tbaa !73
  store i32 2, i32* %mode, align 4, !tbaa !26
  br label %if.end.150

if.end.150:                                       ; preds = %if.else.149, %if.then.148
  br label %if.end.159

if.else.151:                                      ; preds = %if.end.138
  %120 = load i16, i16* %m, align 2, !tbaa !73
  %conv152 = zext i16 %120 to i32
  %121 = load i16, i16* %y, align 2, !tbaa !73
  %conv153 = zext i16 %121 to i32
  %cmp154 = icmp slt i32 %conv152, %conv153
  br i1 %cmp154, label %if.then.156, label %if.else.157

if.then.156:                                      ; preds = %if.else.151
  %122 = load i16, i16* %m, align 2, !tbaa !73
  store i16 %122, i16* %k, align 2, !tbaa !73
  store i16 0, i16* %m, align 2, !tbaa !73
  store i32 1, i32* %mode, align 4, !tbaa !26
  br label %if.end.158

if.else.157:                                      ; preds = %if.else.151
  %123 = load i16, i16* %y, align 2, !tbaa !73
  store i16 %123, i16* %k, align 2, !tbaa !73
  store i16 0, i16* %y, align 2, !tbaa !73
  store i32 2, i32* %mode, align 4, !tbaa !26
  br label %if.end.158

if.end.158:                                       ; preds = %if.else.157, %if.then.156
  br label %if.end.159

if.end.159:                                       ; preds = %if.end.158, %if.end.150
  br label %if.end.160

if.end.160:                                       ; preds = %if.end.159, %cond.end
  %124 = load i16, i16* %c, align 2, !tbaa !73
  %tobool161 = icmp ne i16 %124, 0
  br i1 %tobool161, label %if.then.162, label %if.end.163

if.then.162:                                      ; preds = %if.end.160
  %125 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %126 = load i16, i16* %c, align 2, !tbaa !73
  %call = call zeroext i16 @stc_truncate(%struct.stcolor_device_s* %125, i32 0, i16 zeroext %126) #5
  store i16 %call, i16* %c, align 2, !tbaa !73
  br label %if.end.163

if.end.163:                                       ; preds = %if.then.162, %if.end.160
  %127 = load i16, i16* %m, align 2, !tbaa !73
  %tobool164 = icmp ne i16 %127, 0
  br i1 %tobool164, label %if.then.165, label %if.end.167

if.then.165:                                      ; preds = %if.end.163
  %128 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %129 = load i16, i16* %m, align 2, !tbaa !73
  %call166 = call zeroext i16 @stc_truncate(%struct.stcolor_device_s* %128, i32 1, i16 zeroext %129) #5
  store i16 %call166, i16* %m, align 2, !tbaa !73
  br label %if.end.167

if.end.167:                                       ; preds = %if.then.165, %if.end.163
  %130 = load i16, i16* %y, align 2, !tbaa !73
  %tobool168 = icmp ne i16 %130, 0
  br i1 %tobool168, label %if.then.169, label %if.end.171

if.then.169:                                      ; preds = %if.end.167
  %131 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %132 = load i16, i16* %y, align 2, !tbaa !73
  %call170 = call zeroext i16 @stc_truncate(%struct.stcolor_device_s* %131, i32 2, i16 zeroext %132) #5
  store i16 %call170, i16* %y, align 2, !tbaa !73
  br label %if.end.171

if.end.171:                                       ; preds = %if.then.169, %if.end.167
  %133 = load i16, i16* %k, align 2, !tbaa !73
  %tobool172 = icmp ne i16 %133, 0
  br i1 %tobool172, label %if.then.173, label %if.end.175

if.then.173:                                      ; preds = %if.end.171
  %134 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %135 = load i16, i16* %k, align 2, !tbaa !73
  %call174 = call zeroext i16 @stc_truncate(%struct.stcolor_device_s* %134, i32 3, i16 zeroext %135) #5
  store i16 %call174, i16* %k, align 2, !tbaa !73
  br label %if.end.175

if.end.175:                                       ; preds = %if.then.173, %if.end.171
  %136 = load i16, i16* %c, align 2, !tbaa !73
  %conv176 = zext i16 %136 to i32
  %137 = load i16, i16* %m, align 2, !tbaa !73
  %conv177 = zext i16 %137 to i32
  %or = or i32 %conv176, %conv177
  %138 = load i16, i16* %y, align 2, !tbaa !73
  %conv178 = zext i16 %138 to i32
  %or179 = or i32 %or, %conv178
  %cmp180 = icmp eq i32 %or179, 0
  br i1 %cmp180, label %if.then.182, label %if.end.183

if.then.182:                                      ; preds = %if.end.175
  store i32 3, i32* %mode, align 4, !tbaa !26
  br label %if.end.183

if.end.183:                                       ; preds = %if.then.182, %if.end.175
  %139 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc184 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %139, i32 0, i32 68
  %dither = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc184, i32 0, i32 2
  %140 = load %struct.stc_dither_s*, %struct.stc_dither_s** %dither, align 8, !tbaa !41
  %flags = getelementptr inbounds %struct.stc_dither_s, %struct.stc_dither_s* %140, i32 0, i32 2
  %141 = load i32, i32* %flags, align 4, !tbaa !42
  %and = and i32 %141, 24
  %cmp185 = icmp eq i32 %and, 8
  br i1 %cmp185, label %land.lhs.true.187, label %if.else.216

land.lhs.true.187:                                ; preds = %if.end.183
  %142 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc188 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %142, i32 0, i32 68
  %dither189 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc188, i32 0, i32 2
  %143 = load %struct.stc_dither_s*, %struct.stc_dither_s** %dither189, align 8, !tbaa !41
  %minmax = getelementptr inbounds %struct.stc_dither_s, %struct.stc_dither_s* %143, i32 0, i32 4
  %arrayidx190 = getelementptr inbounds [2 x double], [2 x double]* %minmax, i32 0, i64 0
  %144 = load double, double* %arrayidx190, align 8, !tbaa !55
  %cmp191 = fcmp oeq double %144, 0.000000e+00
  br i1 %cmp191, label %if.then.193, label %if.else.216

if.then.193:                                      ; preds = %land.lhs.true.187
  %145 = load i16, i16* %c, align 2, !tbaa !73
  %idxprom = zext i16 %145 to i64
  %146 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc194 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %146, i32 0, i32 68
  %vals = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc194, i32 0, i32 9
  %arrayidx195 = getelementptr inbounds [4 x i8*], [4 x i8*]* %vals, i32 0, i64 0
  %147 = load i8*, i8** %arrayidx195, align 8, !tbaa !1
  %arrayidx196 = getelementptr inbounds i8, i8* %147, i64 %idxprom
  %148 = load i8, i8* %arrayidx196, align 1, !tbaa !62
  %conv197 = zext i8 %148 to i16
  store i16 %conv197, i16* %c, align 2, !tbaa !73
  %149 = load i16, i16* %m, align 2, !tbaa !73
  %idxprom198 = zext i16 %149 to i64
  %150 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc199 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %150, i32 0, i32 68
  %vals200 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc199, i32 0, i32 9
  %arrayidx201 = getelementptr inbounds [4 x i8*], [4 x i8*]* %vals200, i32 0, i64 1
  %151 = load i8*, i8** %arrayidx201, align 8, !tbaa !1
  %arrayidx202 = getelementptr inbounds i8, i8* %151, i64 %idxprom198
  %152 = load i8, i8* %arrayidx202, align 1, !tbaa !62
  %conv203 = zext i8 %152 to i16
  store i16 %conv203, i16* %m, align 2, !tbaa !73
  %153 = load i16, i16* %y, align 2, !tbaa !73
  %idxprom204 = zext i16 %153 to i64
  %154 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc205 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %154, i32 0, i32 68
  %vals206 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc205, i32 0, i32 9
  %arrayidx207 = getelementptr inbounds [4 x i8*], [4 x i8*]* %vals206, i32 0, i64 2
  %155 = load i8*, i8** %arrayidx207, align 8, !tbaa !1
  %arrayidx208 = getelementptr inbounds i8, i8* %155, i64 %idxprom204
  %156 = load i8, i8* %arrayidx208, align 1, !tbaa !62
  %conv209 = zext i8 %156 to i16
  store i16 %conv209, i16* %y, align 2, !tbaa !73
  %157 = load i16, i16* %k, align 2, !tbaa !73
  %idxprom210 = zext i16 %157 to i64
  %158 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc211 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %158, i32 0, i32 68
  %vals212 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc211, i32 0, i32 9
  %arrayidx213 = getelementptr inbounds [4 x i8*], [4 x i8*]* %vals212, i32 0, i64 3
  %159 = load i8*, i8** %arrayidx213, align 8, !tbaa !1
  %arrayidx214 = getelementptr inbounds i8, i8* %159, i64 %idxprom210
  %160 = load i8, i8* %arrayidx214, align 1, !tbaa !62
  %conv215 = zext i8 %160 to i16
  store i16 %conv215, i16* %k, align 2, !tbaa !73
  br label %if.end.263

if.else.216:                                      ; preds = %land.lhs.true.187, %if.end.183
  %161 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc217 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %161, i32 0, i32 68
  %dither218 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc217, i32 0, i32 2
  %162 = load %struct.stc_dither_s*, %struct.stc_dither_s** %dither218, align 8, !tbaa !41
  %flags219 = getelementptr inbounds %struct.stc_dither_s, %struct.stc_dither_s* %162, i32 0, i32 2
  %163 = load i32, i32* %flags219, align 4, !tbaa !42
  %and220 = and i32 %163, 24
  %cmp221 = icmp eq i32 %and220, 16
  br i1 %cmp221, label %land.lhs.true.223, label %if.end.262

land.lhs.true.223:                                ; preds = %if.else.216
  %164 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc224 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %164, i32 0, i32 68
  %dither225 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc224, i32 0, i32 2
  %165 = load %struct.stc_dither_s*, %struct.stc_dither_s** %dither225, align 8, !tbaa !41
  %minmax226 = getelementptr inbounds %struct.stc_dither_s, %struct.stc_dither_s* %165, i32 0, i32 4
  %arrayidx227 = getelementptr inbounds [2 x double], [2 x double]* %minmax226, i32 0, i64 0
  %166 = load double, double* %arrayidx227, align 8, !tbaa !55
  %cmp228 = fcmp oeq double %166, 0.000000e+00
  br i1 %cmp228, label %land.lhs.true.230, label %if.end.262

land.lhs.true.230:                                ; preds = %land.lhs.true.223
  %167 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc231 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %167, i32 0, i32 68
  %dither232 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc231, i32 0, i32 2
  %168 = load %struct.stc_dither_s*, %struct.stc_dither_s** %dither232, align 8, !tbaa !41
  %minmax233 = getelementptr inbounds %struct.stc_dither_s, %struct.stc_dither_s* %168, i32 0, i32 4
  %arrayidx234 = getelementptr inbounds [2 x double], [2 x double]* %minmax233, i32 0, i64 1
  %169 = load double, double* %arrayidx234, align 8, !tbaa !55
  %cmp235 = fcmp ole double %169, 1.023000e+03
  br i1 %cmp235, label %if.then.237, label %if.end.262

if.then.237:                                      ; preds = %land.lhs.true.230
  %170 = load i16, i16* %c, align 2, !tbaa !73
  %idxprom238 = zext i16 %170 to i64
  %171 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc239 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %171, i32 0, i32 68
  %vals240 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc239, i32 0, i32 9
  %arrayidx241 = getelementptr inbounds [4 x i8*], [4 x i8*]* %vals240, i32 0, i64 0
  %172 = load i8*, i8** %arrayidx241, align 8, !tbaa !1
  %173 = bitcast i8* %172 to i64*
  %arrayidx242 = getelementptr inbounds i64, i64* %173, i64 %idxprom238
  %174 = load i64, i64* %arrayidx242, align 8, !tbaa !25
  %conv243 = trunc i64 %174 to i16
  store i16 %conv243, i16* %c, align 2, !tbaa !73
  %175 = load i16, i16* %m, align 2, !tbaa !73
  %idxprom244 = zext i16 %175 to i64
  %176 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc245 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %176, i32 0, i32 68
  %vals246 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc245, i32 0, i32 9
  %arrayidx247 = getelementptr inbounds [4 x i8*], [4 x i8*]* %vals246, i32 0, i64 1
  %177 = load i8*, i8** %arrayidx247, align 8, !tbaa !1
  %178 = bitcast i8* %177 to i64*
  %arrayidx248 = getelementptr inbounds i64, i64* %178, i64 %idxprom244
  %179 = load i64, i64* %arrayidx248, align 8, !tbaa !25
  %conv249 = trunc i64 %179 to i16
  store i16 %conv249, i16* %m, align 2, !tbaa !73
  %180 = load i16, i16* %y, align 2, !tbaa !73
  %idxprom250 = zext i16 %180 to i64
  %181 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc251 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %181, i32 0, i32 68
  %vals252 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc251, i32 0, i32 9
  %arrayidx253 = getelementptr inbounds [4 x i8*], [4 x i8*]* %vals252, i32 0, i64 2
  %182 = load i8*, i8** %arrayidx253, align 8, !tbaa !1
  %183 = bitcast i8* %182 to i64*
  %arrayidx254 = getelementptr inbounds i64, i64* %183, i64 %idxprom250
  %184 = load i64, i64* %arrayidx254, align 8, !tbaa !25
  %conv255 = trunc i64 %184 to i16
  store i16 %conv255, i16* %y, align 2, !tbaa !73
  %185 = load i16, i16* %k, align 2, !tbaa !73
  %idxprom256 = zext i16 %185 to i64
  %186 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %stc257 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %186, i32 0, i32 68
  %vals258 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc257, i32 0, i32 9
  %arrayidx259 = getelementptr inbounds [4 x i8*], [4 x i8*]* %vals258, i32 0, i64 3
  %187 = load i8*, i8** %arrayidx259, align 8, !tbaa !1
  %188 = bitcast i8* %187 to i64*
  %arrayidx260 = getelementptr inbounds i64, i64* %188, i64 %idxprom256
  %189 = load i64, i64* %arrayidx260, align 8, !tbaa !25
  %conv261 = trunc i64 %189 to i16
  store i16 %conv261, i16* %k, align 2, !tbaa !73
  br label %if.end.262

if.end.262:                                       ; preds = %if.then.237, %land.lhs.true.230, %land.lhs.true.223, %if.else.216
  br label %if.end.263

if.end.263:                                       ; preds = %if.end.262, %if.then.193
  %190 = load i32, i32* %mode, align 4, !tbaa !26
  switch i32 %190, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb.273
    i32 2, label %sw.bb.284
  ]

sw.bb:                                            ; preds = %if.end.263
  %191 = load i16, i16* %m, align 2, !tbaa !73
  %conv264 = zext i16 %191 to i64
  %shl = shl i64 %conv264, 22
  %192 = load i16, i16* %y, align 2, !tbaa !73
  %conv265 = zext i16 %192 to i64
  %shl266 = shl i64 %conv265, 12
  %or267 = or i64 %shl, %shl266
  %193 = load i16, i16* %k, align 2, !tbaa !73
  %conv268 = zext i16 %193 to i64
  %shl269 = shl i64 %conv268, 2
  %or270 = or i64 %or267, %shl269
  %194 = load i32, i32* %mode, align 4, !tbaa !26
  %conv271 = sext i32 %194 to i64
  %or272 = or i64 %or270, %conv271
  store i64 %or272, i64* %rv, align 8, !tbaa !25
  br label %sw.epilog

sw.bb.273:                                        ; preds = %if.end.263
  %195 = load i16, i16* %c, align 2, !tbaa !73
  %conv274 = zext i16 %195 to i64
  %shl275 = shl i64 %conv274, 22
  %196 = load i16, i16* %y, align 2, !tbaa !73
  %conv276 = zext i16 %196 to i64
  %shl277 = shl i64 %conv276, 12
  %or278 = or i64 %shl275, %shl277
  %197 = load i16, i16* %k, align 2, !tbaa !73
  %conv279 = zext i16 %197 to i64
  %shl280 = shl i64 %conv279, 2
  %or281 = or i64 %or278, %shl280
  %198 = load i32, i32* %mode, align 4, !tbaa !26
  %conv282 = sext i32 %198 to i64
  %or283 = or i64 %or281, %conv282
  store i64 %or283, i64* %rv, align 8, !tbaa !25
  br label %sw.epilog

sw.bb.284:                                        ; preds = %if.end.263
  %199 = load i16, i16* %c, align 2, !tbaa !73
  %conv285 = zext i16 %199 to i64
  %shl286 = shl i64 %conv285, 22
  %200 = load i16, i16* %m, align 2, !tbaa !73
  %conv287 = zext i16 %200 to i64
  %shl288 = shl i64 %conv287, 12
  %or289 = or i64 %shl286, %shl288
  %201 = load i16, i16* %k, align 2, !tbaa !73
  %conv290 = zext i16 %201 to i64
  %shl291 = shl i64 %conv290, 2
  %or292 = or i64 %or289, %shl291
  %202 = load i32, i32* %mode, align 4, !tbaa !26
  %conv293 = sext i32 %202 to i64
  %or294 = or i64 %or292, %conv293
  store i64 %or294, i64* %rv, align 8, !tbaa !25
  br label %sw.epilog

sw.default:                                       ; preds = %if.end.263
  %203 = load i16, i16* %k, align 2, !tbaa !73
  %conv295 = zext i16 %203 to i64
  %shl296 = shl i64 %conv295, 2
  %204 = load i32, i32* %mode, align 4, !tbaa !26
  %conv297 = sext i32 %204 to i64
  %or298 = or i64 %shl296, %conv297
  store i64 %or298, i64* %rv, align 8, !tbaa !25
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb.284, %sw.bb.273, %sw.bb
  %205 = bitcast %union.anon.2* %ui to i8*
  call void @llvm.lifetime.start(i64 4, i8* %205) #2
  %206 = bitcast %union.anon.2* %uo to i8*
  call void @llvm.lifetime.start(i64 4, i8* %206) #2
  %207 = load i64, i64* %rv, align 8, !tbaa !25
  %conv299 = trunc i64 %207 to i32
  %cv300 = bitcast %union.anon.2* %ui to i32*
  store i32 %conv299, i32* %cv300, align 4, !tbaa !26
  %bv = bitcast %union.anon.2* %ui to [4 x i8]*
  %arrayidx301 = getelementptr inbounds [4 x i8], [4 x i8]* %bv, i32 0, i64 3
  %208 = load i8, i8* %arrayidx301, align 1, !tbaa !62
  %bv302 = bitcast %union.anon.2* %uo to [4 x i8]*
  %arrayidx303 = getelementptr inbounds [4 x i8], [4 x i8]* %bv302, i32 0, i64 0
  store i8 %208, i8* %arrayidx303, align 1, !tbaa !62
  %bv304 = bitcast %union.anon.2* %ui to [4 x i8]*
  %arrayidx305 = getelementptr inbounds [4 x i8], [4 x i8]* %bv304, i32 0, i64 2
  %209 = load i8, i8* %arrayidx305, align 1, !tbaa !62
  %bv306 = bitcast %union.anon.2* %uo to [4 x i8]*
  %arrayidx307 = getelementptr inbounds [4 x i8], [4 x i8]* %bv306, i32 0, i64 1
  store i8 %209, i8* %arrayidx307, align 1, !tbaa !62
  %bv308 = bitcast %union.anon.2* %ui to [4 x i8]*
  %arrayidx309 = getelementptr inbounds [4 x i8], [4 x i8]* %bv308, i32 0, i64 1
  %210 = load i8, i8* %arrayidx309, align 1, !tbaa !62
  %bv310 = bitcast %union.anon.2* %uo to [4 x i8]*
  %arrayidx311 = getelementptr inbounds [4 x i8], [4 x i8]* %bv310, i32 0, i64 2
  store i8 %210, i8* %arrayidx311, align 1, !tbaa !62
  %bv312 = bitcast %union.anon.2* %ui to [4 x i8]*
  %arrayidx313 = getelementptr inbounds [4 x i8], [4 x i8]* %bv312, i32 0, i64 0
  %211 = load i8, i8* %arrayidx313, align 1, !tbaa !62
  %bv314 = bitcast %union.anon.2* %uo to [4 x i8]*
  %arrayidx315 = getelementptr inbounds [4 x i8], [4 x i8]* %bv314, i32 0, i64 3
  store i8 %211, i8* %arrayidx315, align 1, !tbaa !62
  %cv316 = bitcast %union.anon.2* %uo to i32*
  %212 = load i32, i32* %cv316, align 4, !tbaa !26
  %conv317 = zext i32 %212 to i64
  store i64 %conv317, i64* %rv, align 8, !tbaa !25
  %213 = bitcast %union.anon.2* %uo to i8*
  call void @llvm.lifetime.end(i64 4, i8* %213) #2
  %214 = bitcast %union.anon.2* %ui to i8*
  call void @llvm.lifetime.end(i64 4, i8* %214) #2
  %215 = load i64, i64* %rv, align 8, !tbaa !25
  %216 = bitcast i16* %k to i8*
  call void @llvm.lifetime.end(i64 2, i8* %216) #2
  %217 = bitcast i16* %y to i8*
  call void @llvm.lifetime.end(i64 2, i8* %217) #2
  %218 = bitcast i16* %m to i8*
  call void @llvm.lifetime.end(i64 2, i8* %218) #2
  %219 = bitcast i16* %c to i8*
  call void @llvm.lifetime.end(i64 2, i8* %219) #2
  %220 = bitcast i64* %rv to i8*
  call void @llvm.lifetime.end(i64 8, i8* %220) #2
  %221 = bitcast i32* %mode to i8*
  call void @llvm.lifetime.end(i64 4, i8* %221) #2
  %222 = bitcast %struct.stcolor_device_s** %sd to i8*
  call void @llvm.lifetime.end(i64 8, i8* %222) #2
  ret i64 %215
}

; Function Attrs: nounwind uwtable
define internal i32 @stc_map_color_cmyk10(%struct.gx_device_s* %pdev, i64 %color, i16* %cv) #1 {
entry:
  %pdev.addr = alloca %struct.gx_device_s*, align 8
  %color.addr = alloca i64, align 8
  %cv.addr = alloca i16*, align 8
  %sd = alloca %struct.stcolor_device_s*, align 8
  %c = alloca i16, align 2
  %m = alloca i16, align 2
  %y = alloca i16, align 2
  %ui = alloca %union.anon.3, align 4
  %uo = alloca %union.anon.3, align 4
  store %struct.gx_device_s* %pdev, %struct.gx_device_s** %pdev.addr, align 8, !tbaa !1
  store i64 %color, i64* %color.addr, align 8, !tbaa !25
  store i16* %cv, i16** %cv.addr, align 8, !tbaa !1
  %0 = bitcast %struct.stcolor_device_s** %sd to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = load %struct.gx_device_s*, %struct.gx_device_s** %pdev.addr, align 8, !tbaa !1
  %2 = bitcast %struct.gx_device_s* %1 to %struct.stcolor_device_s*
  store %struct.stcolor_device_s* %2, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %3 = bitcast i16* %c to i8*
  call void @llvm.lifetime.start(i64 2, i8* %3) #2
  %4 = bitcast i16* %m to i8*
  call void @llvm.lifetime.start(i64 2, i8* %4) #2
  %5 = bitcast i16* %y to i8*
  call void @llvm.lifetime.start(i64 2, i8* %5) #2
  %6 = bitcast %union.anon.3* %ui to i8*
  call void @llvm.lifetime.start(i64 4, i8* %6) #2
  %7 = bitcast %union.anon.3* %uo to i8*
  call void @llvm.lifetime.start(i64 4, i8* %7) #2
  %8 = load i64, i64* %color.addr, align 8, !tbaa !25
  %conv = trunc i64 %8 to i32
  %cv1 = bitcast %union.anon.3* %ui to i32*
  store i32 %conv, i32* %cv1, align 4, !tbaa !26
  %bv = bitcast %union.anon.3* %ui to [4 x i8]*
  %arrayidx = getelementptr inbounds [4 x i8], [4 x i8]* %bv, i32 0, i64 3
  %9 = load i8, i8* %arrayidx, align 1, !tbaa !62
  %bv2 = bitcast %union.anon.3* %uo to [4 x i8]*
  %arrayidx3 = getelementptr inbounds [4 x i8], [4 x i8]* %bv2, i32 0, i64 0
  store i8 %9, i8* %arrayidx3, align 1, !tbaa !62
  %bv4 = bitcast %union.anon.3* %ui to [4 x i8]*
  %arrayidx5 = getelementptr inbounds [4 x i8], [4 x i8]* %bv4, i32 0, i64 2
  %10 = load i8, i8* %arrayidx5, align 1, !tbaa !62
  %bv6 = bitcast %union.anon.3* %uo to [4 x i8]*
  %arrayidx7 = getelementptr inbounds [4 x i8], [4 x i8]* %bv6, i32 0, i64 1
  store i8 %10, i8* %arrayidx7, align 1, !tbaa !62
  %bv8 = bitcast %union.anon.3* %ui to [4 x i8]*
  %arrayidx9 = getelementptr inbounds [4 x i8], [4 x i8]* %bv8, i32 0, i64 1
  %11 = load i8, i8* %arrayidx9, align 1, !tbaa !62
  %bv10 = bitcast %union.anon.3* %uo to [4 x i8]*
  %arrayidx11 = getelementptr inbounds [4 x i8], [4 x i8]* %bv10, i32 0, i64 2
  store i8 %11, i8* %arrayidx11, align 1, !tbaa !62
  %bv12 = bitcast %union.anon.3* %ui to [4 x i8]*
  %arrayidx13 = getelementptr inbounds [4 x i8], [4 x i8]* %bv12, i32 0, i64 0
  %12 = load i8, i8* %arrayidx13, align 1, !tbaa !62
  %bv14 = bitcast %union.anon.3* %uo to [4 x i8]*
  %arrayidx15 = getelementptr inbounds [4 x i8], [4 x i8]* %bv14, i32 0, i64 3
  store i8 %12, i8* %arrayidx15, align 1, !tbaa !62
  %cv16 = bitcast %union.anon.3* %uo to i32*
  %13 = load i32, i32* %cv16, align 4, !tbaa !26
  %conv17 = zext i32 %13 to i64
  store i64 %conv17, i64* %color.addr, align 8, !tbaa !25
  %14 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %15 = load i64, i64* %color.addr, align 8, !tbaa !25
  %shr = lshr i64 %15, 2
  %and = and i64 %shr, 1023
  %call = call zeroext i16 @stc_expand(%struct.stcolor_device_s* %14, i32 3, i64 %and) #5
  store i16 %call, i16* %c, align 2, !tbaa !73
  %16 = load i64, i64* %color.addr, align 8, !tbaa !25
  %and18 = and i64 %16, 3
  %conv19 = trunc i64 %and18 to i32
  switch i32 %conv19, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb.26
    i32 2, label %sw.bb.33
  ]

sw.bb:                                            ; preds = %entry
  %17 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %18 = load i64, i64* %color.addr, align 8, !tbaa !25
  %shr20 = lshr i64 %18, 22
  %and21 = and i64 %shr20, 1023
  %call22 = call zeroext i16 @stc_expand(%struct.stcolor_device_s* %17, i32 1, i64 %and21) #5
  store i16 %call22, i16* %m, align 2, !tbaa !73
  %19 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %20 = load i64, i64* %color.addr, align 8, !tbaa !25
  %shr23 = lshr i64 %20, 12
  %and24 = and i64 %shr23, 1023
  %call25 = call zeroext i16 @stc_expand(%struct.stcolor_device_s* %19, i32 2, i64 %and24) #5
  store i16 %call25, i16* %y, align 2, !tbaa !73
  br label %sw.epilog

sw.bb.26:                                         ; preds = %entry
  %21 = load i16, i16* %c, align 2, !tbaa !73
  store i16 %21, i16* %m, align 2, !tbaa !73
  %22 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %23 = load i64, i64* %color.addr, align 8, !tbaa !25
  %shr27 = lshr i64 %23, 22
  %and28 = and i64 %shr27, 1023
  %call29 = call zeroext i16 @stc_expand(%struct.stcolor_device_s* %22, i32 0, i64 %and28) #5
  store i16 %call29, i16* %c, align 2, !tbaa !73
  %24 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %25 = load i64, i64* %color.addr, align 8, !tbaa !25
  %shr30 = lshr i64 %25, 12
  %and31 = and i64 %shr30, 1023
  %call32 = call zeroext i16 @stc_expand(%struct.stcolor_device_s* %24, i32 2, i64 %and31) #5
  store i16 %call32, i16* %y, align 2, !tbaa !73
  br label %sw.epilog

sw.bb.33:                                         ; preds = %entry
  %26 = load i16, i16* %c, align 2, !tbaa !73
  store i16 %26, i16* %y, align 2, !tbaa !73
  %27 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %28 = load i64, i64* %color.addr, align 8, !tbaa !25
  %shr34 = lshr i64 %28, 22
  %and35 = and i64 %shr34, 1023
  %call36 = call zeroext i16 @stc_expand(%struct.stcolor_device_s* %27, i32 0, i64 %and35) #5
  store i16 %call36, i16* %c, align 2, !tbaa !73
  %29 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd, align 8, !tbaa !1
  %30 = load i64, i64* %color.addr, align 8, !tbaa !25
  %shr37 = lshr i64 %30, 12
  %and38 = and i64 %shr37, 1023
  %call39 = call zeroext i16 @stc_expand(%struct.stcolor_device_s* %29, i32 1, i64 %and38) #5
  store i16 %call39, i16* %m, align 2, !tbaa !73
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  %31 = load i16, i16* %c, align 2, !tbaa !73
  store i16 %31, i16* %m, align 2, !tbaa !73
  %32 = load i16, i16* %c, align 2, !tbaa !73
  store i16 %32, i16* %y, align 2, !tbaa !73
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb.33, %sw.bb.26, %sw.bb
  %33 = load i16, i16* %c, align 2, !tbaa !73
  %34 = load i16*, i16** %cv.addr, align 8, !tbaa !1
  %arrayidx40 = getelementptr inbounds i16, i16* %34, i64 0
  store i16 %33, i16* %arrayidx40, align 2, !tbaa !73
  %35 = load i16, i16* %m, align 2, !tbaa !73
  %36 = load i16*, i16** %cv.addr, align 8, !tbaa !1
  %arrayidx41 = getelementptr inbounds i16, i16* %36, i64 1
  store i16 %35, i16* %arrayidx41, align 2, !tbaa !73
  %37 = load i16, i16* %y, align 2, !tbaa !73
  %38 = load i16*, i16** %cv.addr, align 8, !tbaa !1
  %arrayidx42 = getelementptr inbounds i16, i16* %38, i64 2
  store i16 %37, i16* %arrayidx42, align 2, !tbaa !73
  %39 = bitcast %union.anon.3* %uo to i8*
  call void @llvm.lifetime.end(i64 4, i8* %39) #2
  %40 = bitcast %union.anon.3* %ui to i8*
  call void @llvm.lifetime.end(i64 4, i8* %40) #2
  %41 = bitcast i16* %y to i8*
  call void @llvm.lifetime.end(i64 2, i8* %41) #2
  %42 = bitcast i16* %m to i8*
  call void @llvm.lifetime.end(i64 2, i8* %42) #2
  %43 = bitcast i16* %c to i8*
  call void @llvm.lifetime.end(i64 2, i8* %43) #2
  %44 = bitcast %struct.stcolor_device_s** %sd to i8*
  call void @llvm.lifetime.end(i64 8, i8* %44) #2
  ret i32 0
}

declare i32 @gdev_prn_open(%struct.gx_device_s*) #0

; Function Attrs: nounwind uwtable
define internal void @stc_freedata(%struct.gs_memory_s* %mem, %struct.stc_s* %stc) #1 {
entry:
  %mem.addr = alloca %struct.gs_memory_s*, align 8
  %stc.addr = alloca %struct.stc_s*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store %struct.gs_memory_s* %mem, %struct.gs_memory_s** %mem.addr, align 8, !tbaa !1
  store %struct.stc_s* %stc, %struct.stc_s** %stc.addr, align 8, !tbaa !1
  %0 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = bitcast i32* %j to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #2
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.cond:                                         ; preds = %for.inc.51, %entry
  %2 = load i32, i32* %i, align 4, !tbaa !26
  %cmp = icmp slt i32 %2, 4
  br i1 %cmp, label %for.body, label %for.end.53

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom = sext i32 %3 to i64
  %4 = load %struct.stc_s*, %struct.stc_s** %stc.addr, align 8, !tbaa !1
  %code = getelementptr inbounds %struct.stc_s, %struct.stc_s* %4, i32 0, i32 6
  %arrayidx = getelementptr inbounds [4 x i16*], [4 x i16*]* %code, i32 0, i64 %idxprom
  %5 = load i16*, i16** %arrayidx, align 8, !tbaa !1
  %cmp1 = icmp ne i16* %5, null
  br i1 %cmp1, label %if.then, label %if.end.20

if.then:                                          ; preds = %for.body
  store i32 0, i32* %j, align 4, !tbaa !26
  br label %for.cond.2

for.cond.2:                                       ; preds = %for.inc, %if.then
  %6 = load i32, i32* %j, align 4, !tbaa !26
  %7 = load i32, i32* %i, align 4, !tbaa !26
  %cmp3 = icmp slt i32 %6, %7
  br i1 %cmp3, label %for.body.4, label %for.end

for.body.4:                                       ; preds = %for.cond.2
  %8 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom5 = sext i32 %8 to i64
  %9 = load %struct.stc_s*, %struct.stc_s** %stc.addr, align 8, !tbaa !1
  %code6 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %9, i32 0, i32 6
  %arrayidx7 = getelementptr inbounds [4 x i16*], [4 x i16*]* %code6, i32 0, i64 %idxprom5
  %10 = load i16*, i16** %arrayidx7, align 8, !tbaa !1
  %11 = load i32, i32* %j, align 4, !tbaa !26
  %idxprom8 = sext i32 %11 to i64
  %12 = load %struct.stc_s*, %struct.stc_s** %stc.addr, align 8, !tbaa !1
  %code9 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %12, i32 0, i32 6
  %arrayidx10 = getelementptr inbounds [4 x i16*], [4 x i16*]* %code9, i32 0, i64 %idxprom8
  %13 = load i16*, i16** %arrayidx10, align 8, !tbaa !1
  %cmp11 = icmp eq i16* %10, %13
  br i1 %cmp11, label %if.then.12, label %if.end

if.then.12:                                       ; preds = %for.body.4
  br label %for.end

if.end:                                           ; preds = %for.body.4
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %14 = load i32, i32* %j, align 4, !tbaa !26
  %inc = add nsw i32 %14, 1
  store i32 %inc, i32* %j, align 4, !tbaa !26
  br label %for.cond.2

for.end:                                          ; preds = %if.then.12, %for.cond.2
  %15 = load i32, i32* %i, align 4, !tbaa !26
  %16 = load i32, i32* %j, align 4, !tbaa !26
  %cmp13 = icmp eq i32 %15, %16
  br i1 %cmp13, label %if.then.14, label %if.end.19

if.then.14:                                       ; preds = %for.end
  %17 = load %struct.gs_memory_s*, %struct.gs_memory_s** %mem.addr, align 8, !tbaa !1
  %non_gc_memory = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %17, i32 0, i32 3
  %18 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory, align 8, !tbaa !30
  %procs = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %18, i32 0, i32 1
  %free_object = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs, i32 0, i32 2
  %19 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %free_object, align 8, !tbaa !65
  %20 = load %struct.gs_memory_s*, %struct.gs_memory_s** %mem.addr, align 8, !tbaa !1
  %non_gc_memory15 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %20, i32 0, i32 3
  %21 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory15, align 8, !tbaa !30
  %22 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom16 = sext i32 %22 to i64
  %23 = load %struct.stc_s*, %struct.stc_s** %stc.addr, align 8, !tbaa !1
  %code17 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %23, i32 0, i32 6
  %arrayidx18 = getelementptr inbounds [4 x i16*], [4 x i16*]* %code17, i32 0, i64 %idxprom16
  %24 = load i16*, i16** %arrayidx18, align 8, !tbaa !1
  %25 = bitcast i16* %24 to i8*
  call void %19(%struct.gs_memory_s* %21, i8* %25, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i32 0, i32 0)) #5
  br label %if.end.19

if.end.19:                                        ; preds = %if.then.14, %for.end
  br label %if.end.20

if.end.20:                                        ; preds = %if.end.19, %for.body
  %26 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom21 = sext i32 %26 to i64
  %27 = load %struct.stc_s*, %struct.stc_s** %stc.addr, align 8, !tbaa !1
  %vals = getelementptr inbounds %struct.stc_s, %struct.stc_s* %27, i32 0, i32 9
  %arrayidx22 = getelementptr inbounds [4 x i8*], [4 x i8*]* %vals, i32 0, i64 %idxprom21
  %28 = load i8*, i8** %arrayidx22, align 8, !tbaa !1
  %cmp23 = icmp ne i8* %28, null
  br i1 %cmp23, label %if.then.24, label %if.end.50

if.then.24:                                       ; preds = %if.end.20
  store i32 0, i32* %j, align 4, !tbaa !26
  br label %for.cond.25

for.cond.25:                                      ; preds = %for.inc.37, %if.then.24
  %29 = load i32, i32* %j, align 4, !tbaa !26
  %30 = load i32, i32* %i, align 4, !tbaa !26
  %cmp26 = icmp slt i32 %29, %30
  br i1 %cmp26, label %for.body.27, label %for.end.39

for.body.27:                                      ; preds = %for.cond.25
  %31 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom28 = sext i32 %31 to i64
  %32 = load %struct.stc_s*, %struct.stc_s** %stc.addr, align 8, !tbaa !1
  %vals29 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %32, i32 0, i32 9
  %arrayidx30 = getelementptr inbounds [4 x i8*], [4 x i8*]* %vals29, i32 0, i64 %idxprom28
  %33 = load i8*, i8** %arrayidx30, align 8, !tbaa !1
  %34 = load i32, i32* %j, align 4, !tbaa !26
  %idxprom31 = sext i32 %34 to i64
  %35 = load %struct.stc_s*, %struct.stc_s** %stc.addr, align 8, !tbaa !1
  %vals32 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %35, i32 0, i32 9
  %arrayidx33 = getelementptr inbounds [4 x i8*], [4 x i8*]* %vals32, i32 0, i64 %idxprom31
  %36 = load i8*, i8** %arrayidx33, align 8, !tbaa !1
  %cmp34 = icmp eq i8* %33, %36
  br i1 %cmp34, label %if.then.35, label %if.end.36

if.then.35:                                       ; preds = %for.body.27
  br label %for.end.39

if.end.36:                                        ; preds = %for.body.27
  br label %for.inc.37

for.inc.37:                                       ; preds = %if.end.36
  %37 = load i32, i32* %j, align 4, !tbaa !26
  %inc38 = add nsw i32 %37, 1
  store i32 %inc38, i32* %j, align 4, !tbaa !26
  br label %for.cond.25

for.end.39:                                       ; preds = %if.then.35, %for.cond.25
  %38 = load i32, i32* %i, align 4, !tbaa !26
  %39 = load i32, i32* %j, align 4, !tbaa !26
  %cmp40 = icmp eq i32 %38, %39
  br i1 %cmp40, label %if.then.41, label %if.end.49

if.then.41:                                       ; preds = %for.end.39
  %40 = load %struct.gs_memory_s*, %struct.gs_memory_s** %mem.addr, align 8, !tbaa !1
  %non_gc_memory42 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %40, i32 0, i32 3
  %41 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory42, align 8, !tbaa !30
  %procs43 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %41, i32 0, i32 1
  %free_object44 = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs43, i32 0, i32 2
  %42 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %free_object44, align 8, !tbaa !65
  %43 = load %struct.gs_memory_s*, %struct.gs_memory_s** %mem.addr, align 8, !tbaa !1
  %non_gc_memory45 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %43, i32 0, i32 3
  %44 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory45, align 8, !tbaa !30
  %45 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom46 = sext i32 %45 to i64
  %46 = load %struct.stc_s*, %struct.stc_s** %stc.addr, align 8, !tbaa !1
  %vals47 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %46, i32 0, i32 9
  %arrayidx48 = getelementptr inbounds [4 x i8*], [4 x i8*]* %vals47, i32 0, i64 %idxprom46
  %47 = load i8*, i8** %arrayidx48, align 8, !tbaa !1
  call void %42(%struct.gs_memory_s* %44, i8* %47, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i32 0, i32 0)) #5
  br label %if.end.49

if.end.49:                                        ; preds = %if.then.41, %for.end.39
  br label %if.end.50

if.end.50:                                        ; preds = %if.end.49, %if.end.20
  br label %for.inc.51

for.inc.51:                                       ; preds = %if.end.50
  %48 = load i32, i32* %i, align 4, !tbaa !26
  %inc52 = add nsw i32 %48, 1
  store i32 %inc52, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.end.53:                                       ; preds = %for.cond
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond.54

for.cond.54:                                      ; preds = %for.inc.63, %for.end.53
  %49 = load i32, i32* %i, align 4, !tbaa !26
  %cmp55 = icmp slt i32 %49, 4
  br i1 %cmp55, label %for.body.56, label %for.end.65

for.body.56:                                      ; preds = %for.cond.54
  %50 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom57 = sext i32 %50 to i64
  %51 = load %struct.stc_s*, %struct.stc_s** %stc.addr, align 8, !tbaa !1
  %code58 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %51, i32 0, i32 6
  %arrayidx59 = getelementptr inbounds [4 x i16*], [4 x i16*]* %code58, i32 0, i64 %idxprom57
  store i16* null, i16** %arrayidx59, align 8, !tbaa !1
  %52 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom60 = sext i32 %52 to i64
  %53 = load %struct.stc_s*, %struct.stc_s** %stc.addr, align 8, !tbaa !1
  %vals61 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %53, i32 0, i32 9
  %arrayidx62 = getelementptr inbounds [4 x i8*], [4 x i8*]* %vals61, i32 0, i64 %idxprom60
  store i8* null, i8** %arrayidx62, align 8, !tbaa !1
  br label %for.inc.63

for.inc.63:                                       ; preds = %for.body.56
  %54 = load i32, i32* %i, align 4, !tbaa !26
  %inc64 = add nsw i32 %54, 1
  store i32 %inc64, i32* %i, align 4, !tbaa !26
  br label %for.cond.54

for.end.65:                                       ; preds = %for.cond.54
  %55 = bitcast i32* %j to i8*
  call void @llvm.lifetime.end(i64 4, i8* %55) #2
  %56 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %56) #2
  ret void
}

; Function Attrs: nounwind
declare i8* @memcpy(i8*, i8*, i64) #4

; Function Attrs: nounwind uwtable
define internal zeroext i16 @stc_truncate1(%struct.stcolor_device_s* %sd, i32 %i, i16 zeroext %v) #1 {
entry:
  %sd.addr = alloca %struct.stcolor_device_s*, align 8
  %i.addr = alloca i32, align 4
  %v.addr = alloca i16, align 2
  store %struct.stcolor_device_s* %sd, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  store i32 %i, i32* %i.addr, align 4, !tbaa !26
  store i16 %v, i16* %v.addr, align 2, !tbaa !73
  %0 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %1 = load i32, i32* %i.addr, align 4, !tbaa !26
  %2 = load i16, i16* %v.addr, align 2, !tbaa !73
  %call = call zeroext i16 @stc_truncate(%struct.stcolor_device_s* %0, i32 %1, i16 zeroext %2) #5
  %idxprom = zext i16 %call to i64
  %3 = load i32, i32* %i.addr, align 4, !tbaa !26
  %idxprom1 = sext i32 %3 to i64
  %4 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %4, i32 0, i32 68
  %vals = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc, i32 0, i32 9
  %arrayidx = getelementptr inbounds [4 x i8*], [4 x i8*]* %vals, i32 0, i64 %idxprom1
  %5 = load i8*, i8** %arrayidx, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds i8, i8* %5, i64 %idxprom
  %6 = load i8, i8* %arrayidx2, align 1, !tbaa !62
  %conv = zext i8 %6 to i16
  ret i16 %conv
}

; Function Attrs: nounwind uwtable
define internal zeroext i16 @stc_truncate(%struct.stcolor_device_s* %sd, i32 %i, i16 zeroext %v) #1 {
entry:
  %sd.addr = alloca %struct.stcolor_device_s*, align 8
  %i.addr = alloca i32, align 4
  %v.addr = alloca i16, align 2
  %s = alloca i64, align 8
  %p = alloca i16*, align 8
  store %struct.stcolor_device_s* %sd, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  store i32 %i, i32* %i.addr, align 4, !tbaa !26
  store i16 %v, i16* %v.addr, align 2, !tbaa !73
  %0 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %0, i32 0, i32 68
  %bits = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc, i32 0, i32 1
  %1 = load i32, i32* %bits, align 4, !tbaa !44
  %conv = sext i32 %1 to i64
  %cmp = icmp ult i64 %conv, 16
  br i1 %cmp, label %if.then, label %if.end.79

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %i.addr, align 4, !tbaa !26
  %idxprom = sext i32 %2 to i64
  %3 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc2 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %3, i32 0, i32 68
  %code = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2, i32 0, i32 6
  %arrayidx = getelementptr inbounds [4 x i16*], [4 x i16*]* %code, i32 0, i64 %idxprom
  %4 = load i16*, i16** %arrayidx, align 8, !tbaa !1
  %cmp3 = icmp ne i16* %4, null
  br i1 %cmp3, label %if.then.5, label %if.else.69

if.then.5:                                        ; preds = %if.then
  %5 = bitcast i64* %s to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5) #2
  %6 = bitcast i16** %p to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6) #2
  %7 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc6 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %7, i32 0, i32 68
  %bits7 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc6, i32 0, i32 1
  %8 = load i32, i32* %bits7, align 4, !tbaa !44
  %cmp8 = icmp sgt i32 %8, 1
  br i1 %cmp8, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then.5
  %9 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc10 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %9, i32 0, i32 68
  %bits11 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc10, i32 0, i32 1
  %10 = load i32, i32* %bits11, align 4, !tbaa !44
  %sub = sub nsw i32 %10, 2
  %sh_prom = zext i32 %sub to i64
  %shl = shl i64 1, %sh_prom
  br label %cond.end

cond.false:                                       ; preds = %if.then.5
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %shl, %cond.true ], [ 0, %cond.false ]
  store i64 %cond, i64* %s, align 8, !tbaa !25
  %11 = load i32, i32* %i.addr, align 4, !tbaa !26
  %idxprom12 = sext i32 %11 to i64
  %12 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc13 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %12, i32 0, i32 68
  %code14 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc13, i32 0, i32 6
  %arrayidx15 = getelementptr inbounds [4 x i16*], [4 x i16*]* %code14, i32 0, i64 %idxprom12
  %13 = load i16*, i16** %arrayidx15, align 8, !tbaa !1
  %14 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc16 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %14, i32 0, i32 68
  %bits17 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc16, i32 0, i32 1
  %15 = load i32, i32* %bits17, align 4, !tbaa !44
  %sub18 = sub nsw i32 %15, 1
  %sh_prom19 = zext i32 %sub18 to i64
  %shl20 = shl i64 1, %sh_prom19
  %add.ptr = getelementptr inbounds i16, i16* %13, i64 %shl20
  store i16* %add.ptr, i16** %p, align 8, !tbaa !1
  br label %while.cond

while.cond:                                       ; preds = %if.end.50, %cond.end
  %16 = load i64, i64* %s, align 8, !tbaa !25
  %cmp21 = icmp sgt i64 %16, 0
  br i1 %cmp21, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %17 = load i16, i16* %v.addr, align 2, !tbaa !73
  %conv23 = zext i16 %17 to i32
  %18 = load i16*, i16** %p, align 8, !tbaa !1
  %19 = load i16, i16* %18, align 2, !tbaa !73
  %conv24 = zext i16 %19 to i32
  %cmp25 = icmp sgt i32 %conv23, %conv24
  br i1 %cmp25, label %if.then.27, label %if.else

if.then.27:                                       ; preds = %while.body
  %20 = load i64, i64* %s, align 8, !tbaa !25
  %21 = load i16*, i16** %p, align 8, !tbaa !1
  %add.ptr28 = getelementptr inbounds i16, i16* %21, i64 %20
  store i16* %add.ptr28, i16** %p, align 8, !tbaa !1
  br label %if.end.50

if.else:                                          ; preds = %while.body
  %22 = load i16, i16* %v.addr, align 2, !tbaa !73
  %conv29 = zext i16 %22 to i32
  %23 = load i16*, i16** %p, align 8, !tbaa !1
  %arrayidx30 = getelementptr inbounds i16, i16* %23, i64 -1
  %24 = load i16, i16* %arrayidx30, align 2, !tbaa !73
  %conv31 = zext i16 %24 to i32
  %cmp32 = icmp slt i32 %conv29, %conv31
  br i1 %cmp32, label %if.then.34, label %if.else.36

if.then.34:                                       ; preds = %if.else
  %25 = load i64, i64* %s, align 8, !tbaa !25
  %26 = load i16*, i16** %p, align 8, !tbaa !1
  %idx.neg = sub i64 0, %25
  %add.ptr35 = getelementptr inbounds i16, i16* %26, i64 %idx.neg
  store i16* %add.ptr35, i16** %p, align 8, !tbaa !1
  br label %if.end.49

if.else.36:                                       ; preds = %if.else
  %27 = load i16, i16* %v.addr, align 2, !tbaa !73
  %conv37 = zext i16 %27 to i32
  %28 = load i16*, i16** %p, align 8, !tbaa !1
  %arrayidx38 = getelementptr inbounds i16, i16* %28, i64 -1
  %29 = load i16, i16* %arrayidx38, align 2, !tbaa !73
  %conv39 = zext i16 %29 to i32
  %sub40 = sub nsw i32 %conv37, %conv39
  %30 = load i16*, i16** %p, align 8, !tbaa !1
  %arrayidx41 = getelementptr inbounds i16, i16* %30, i64 0
  %31 = load i16, i16* %arrayidx41, align 2, !tbaa !73
  %conv42 = zext i16 %31 to i32
  %32 = load i16, i16* %v.addr, align 2, !tbaa !73
  %conv43 = zext i16 %32 to i32
  %sub44 = sub nsw i32 %conv42, %conv43
  %cmp45 = icmp slt i32 %sub40, %sub44
  br i1 %cmp45, label %if.then.47, label %if.end

if.then.47:                                       ; preds = %if.else.36
  %33 = load i16*, i16** %p, align 8, !tbaa !1
  %add.ptr48 = getelementptr inbounds i16, i16* %33, i64 -1
  store i16* %add.ptr48, i16** %p, align 8, !tbaa !1
  br label %if.end

if.end:                                           ; preds = %if.then.47, %if.else.36
  br label %while.end

if.end.49:                                        ; preds = %if.then.34
  br label %if.end.50

if.end.50:                                        ; preds = %if.end.49, %if.then.27
  %34 = load i64, i64* %s, align 8, !tbaa !25
  %shr = ashr i64 %34, 1
  store i64 %shr, i64* %s, align 8, !tbaa !25
  br label %while.cond

while.end:                                        ; preds = %if.end, %while.cond
  %35 = load i16, i16* %v.addr, align 2, !tbaa !73
  %conv51 = zext i16 %35 to i32
  %36 = load i16*, i16** %p, align 8, !tbaa !1
  %arrayidx52 = getelementptr inbounds i16, i16* %36, i64 -1
  %37 = load i16, i16* %arrayidx52, align 2, !tbaa !73
  %conv53 = zext i16 %37 to i32
  %sub54 = sub nsw i32 %conv51, %conv53
  %38 = load i16*, i16** %p, align 8, !tbaa !1
  %arrayidx55 = getelementptr inbounds i16, i16* %38, i64 0
  %39 = load i16, i16* %arrayidx55, align 2, !tbaa !73
  %conv56 = zext i16 %39 to i32
  %40 = load i16, i16* %v.addr, align 2, !tbaa !73
  %conv57 = zext i16 %40 to i32
  %sub58 = sub nsw i32 %conv56, %conv57
  %cmp59 = icmp slt i32 %sub54, %sub58
  br i1 %cmp59, label %if.then.61, label %if.end.63

if.then.61:                                       ; preds = %while.end
  %41 = load i16*, i16** %p, align 8, !tbaa !1
  %add.ptr62 = getelementptr inbounds i16, i16* %41, i64 -1
  store i16* %add.ptr62, i16** %p, align 8, !tbaa !1
  br label %if.end.63

if.end.63:                                        ; preds = %if.then.61, %while.end
  %42 = load i16*, i16** %p, align 8, !tbaa !1
  %43 = load i32, i32* %i.addr, align 4, !tbaa !26
  %idxprom64 = sext i32 %43 to i64
  %44 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc65 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %44, i32 0, i32 68
  %code66 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc65, i32 0, i32 6
  %arrayidx67 = getelementptr inbounds [4 x i16*], [4 x i16*]* %code66, i32 0, i64 %idxprom64
  %45 = load i16*, i16** %arrayidx67, align 8, !tbaa !1
  %sub.ptr.lhs.cast = ptrtoint i16* %42 to i64
  %sub.ptr.rhs.cast = ptrtoint i16* %45 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 2
  %conv68 = trunc i64 %sub.ptr.div to i16
  store i16 %conv68, i16* %v.addr, align 2, !tbaa !73
  %46 = bitcast i16** %p to i8*
  call void @llvm.lifetime.end(i64 8, i8* %46) #2
  %47 = bitcast i64* %s to i8*
  call void @llvm.lifetime.end(i64 8, i8* %47) #2
  br label %if.end.78

if.else.69:                                       ; preds = %if.then
  %48 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc70 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %48, i32 0, i32 68
  %bits71 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc70, i32 0, i32 1
  %49 = load i32, i32* %bits71, align 4, !tbaa !44
  %conv72 = sext i32 %49 to i64
  %sub73 = sub i64 16, %conv72
  %50 = load i16, i16* %v.addr, align 2, !tbaa !73
  %conv74 = zext i16 %50 to i32
  %sh_prom75 = trunc i64 %sub73 to i32
  %shr76 = ashr i32 %conv74, %sh_prom75
  %conv77 = trunc i32 %shr76 to i16
  store i16 %conv77, i16* %v.addr, align 2, !tbaa !73
  br label %if.end.78

if.end.78:                                        ; preds = %if.else.69, %if.end.63
  br label %if.end.79

if.end.79:                                        ; preds = %if.end.78, %entry
  %51 = load i16, i16* %v.addr, align 2, !tbaa !73
  ret i16 %51
}

; Function Attrs: nounwind uwtable
define internal zeroext i16 @stc_expand(%struct.stcolor_device_s* %sd, i32 %i, i64 %col) #1 {
entry:
  %sd.addr = alloca %struct.stcolor_device_s*, align 8
  %i.addr = alloca i32, align 4
  %col.addr = alloca i64, align 8
  %cv = alloca i64, align 8
  %l = alloca i64, align 8
  store %struct.stcolor_device_s* %sd, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  store i32 %i, i32* %i.addr, align 4, !tbaa !26
  store i64 %col, i64* %col.addr, align 8, !tbaa !25
  %0 = bitcast i64* %cv to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = bitcast i64* %l to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #2
  %2 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %2, i32 0, i32 68
  %bits = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc, i32 0, i32 1
  %3 = load i32, i32* %bits, align 4, !tbaa !44
  %shl = shl i32 1, %3
  %sub = sub nsw i32 %shl, 1
  %conv = sext i32 %sub to i64
  store i64 %conv, i64* %l, align 8, !tbaa !25
  %4 = load i32, i32* %i.addr, align 4, !tbaa !26
  %idxprom = sext i32 %4 to i64
  %5 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc1 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %5, i32 0, i32 68
  %code = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc1, i32 0, i32 6
  %arrayidx = getelementptr inbounds [4 x i16*], [4 x i16*]* %code, i32 0, i64 %idxprom
  %6 = load i16*, i16** %arrayidx, align 8, !tbaa !1
  %cmp = icmp ne i16* %6, null
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %7 = load i64, i64* %col.addr, align 8, !tbaa !25
  %8 = load i64, i64* %l, align 8, !tbaa !25
  %and = and i64 %7, %8
  %9 = load i32, i32* %i.addr, align 4, !tbaa !26
  %idxprom3 = sext i32 %9 to i64
  %10 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc4 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %10, i32 0, i32 68
  %code5 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc4, i32 0, i32 6
  %arrayidx6 = getelementptr inbounds [4 x i16*], [4 x i16*]* %code5, i32 0, i64 %idxprom3
  %11 = load i16*, i16** %arrayidx6, align 8, !tbaa !1
  %arrayidx7 = getelementptr inbounds i16, i16* %11, i64 %and
  %12 = load i16, i16* %arrayidx7, align 2, !tbaa !73
  %conv8 = zext i16 %12 to i64
  store i64 %conv8, i64* %cv, align 8, !tbaa !25
  br label %if.end.44

if.else:                                          ; preds = %entry
  %13 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc9 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %13, i32 0, i32 68
  %bits10 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc9, i32 0, i32 1
  %14 = load i32, i32* %bits10, align 4, !tbaa !44
  %conv11 = sext i32 %14 to i64
  %cmp12 = icmp ult i64 %conv11, 16
  br i1 %cmp12, label %if.then.14, label %if.else.29

if.then.14:                                       ; preds = %if.else
  %15 = load i64, i64* %col.addr, align 8, !tbaa !25
  %16 = load i64, i64* %l, align 8, !tbaa !25
  %and15 = and i64 %15, %16
  %17 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc16 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %17, i32 0, i32 68
  %bits17 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc16, i32 0, i32 1
  %18 = load i32, i32* %bits17, align 4, !tbaa !44
  %conv18 = sext i32 %18 to i64
  %sub19 = sub i64 16, %conv18
  %shl20 = shl i64 %and15, %sub19
  store i64 %shl20, i64* %cv, align 8, !tbaa !25
  %19 = load i64, i64* %col.addr, align 8, !tbaa !25
  %20 = load i64, i64* %l, align 8, !tbaa !25
  %and21 = and i64 %19, %20
  %21 = load i64, i64* %l, align 8, !tbaa !25
  %div = udiv i64 %and21, %21
  %22 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc22 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %22, i32 0, i32 68
  %bits23 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc22, i32 0, i32 1
  %23 = load i32, i32* %bits23, align 4, !tbaa !44
  %conv24 = sext i32 %23 to i64
  %sub25 = sub i64 16, %conv24
  %sh_prom = trunc i64 %sub25 to i32
  %shl26 = shl i32 1, %sh_prom
  %sub27 = sub nsw i32 %shl26, 1
  %conv28 = sext i32 %sub27 to i64
  %mul = mul i64 %div, %conv28
  %24 = load i64, i64* %cv, align 8, !tbaa !25
  %add = add i64 %24, %mul
  store i64 %add, i64* %cv, align 8, !tbaa !25
  br label %if.end.43

if.else.29:                                       ; preds = %if.else
  %25 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc30 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %25, i32 0, i32 68
  %bits31 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc30, i32 0, i32 1
  %26 = load i32, i32* %bits31, align 4, !tbaa !44
  %conv32 = sext i32 %26 to i64
  %cmp33 = icmp ugt i64 %conv32, 16
  br i1 %cmp33, label %if.then.35, label %if.else.41

if.then.35:                                       ; preds = %if.else.29
  %27 = load i64, i64* %col.addr, align 8, !tbaa !25
  %28 = load i64, i64* %l, align 8, !tbaa !25
  %and36 = and i64 %27, %28
  %29 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc37 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %29, i32 0, i32 68
  %bits38 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc37, i32 0, i32 1
  %30 = load i32, i32* %bits38, align 4, !tbaa !44
  %conv39 = sext i32 %30 to i64
  %sub40 = sub i64 %conv39, 16
  %shr = lshr i64 %and36, %sub40
  store i64 %shr, i64* %cv, align 8, !tbaa !25
  br label %if.end

if.else.41:                                       ; preds = %if.else.29
  %31 = load i64, i64* %col.addr, align 8, !tbaa !25
  %32 = load i64, i64* %l, align 8, !tbaa !25
  %and42 = and i64 %31, %32
  store i64 %and42, i64* %cv, align 8, !tbaa !25
  br label %if.end

if.end:                                           ; preds = %if.else.41, %if.then.35
  br label %if.end.43

if.end.43:                                        ; preds = %if.end, %if.then.14
  br label %if.end.44

if.end.44:                                        ; preds = %if.end.43, %if.then
  %33 = load i64, i64* %cv, align 8, !tbaa !25
  %conv45 = trunc i64 %33 to i16
  %34 = bitcast i64* %l to i8*
  call void @llvm.lifetime.end(i64 8, i8* %34) #2
  %35 = bitcast i64* %cv to i8*
  call void @llvm.lifetime.end(i64 8, i8* %35) #2
  ret i16 %conv45
}

declare i32 @gdev_prn_close(%struct.gx_device_s*) #0

declare i32 @gdev_prn_get_params(%struct.gx_device_s*, %struct.gs_param_list_s*) #0

declare i32 @param_write_string(%struct.gs_param_list_s*, i8*, %struct.gs_param_string_s*) #0

declare i32 @param_write_int(%struct.gs_param_list_s*, i8*, i32*) #0

declare i32 @param_write_string_array(%struct.gs_param_list_s*, i8*, %struct.gs_param_string_array_s*) #0

declare i32 @param_write_null(%struct.gs_param_list_s*, i8*) #0

declare i32 @param_write_bool(%struct.gs_param_list_s*, i8*, i32*) #0

declare i32 @param_write_float_array(%struct.gs_param_list_s*, i8*, %struct.gs_param_float_array_s*) #0

declare i32 @param_read_string(%struct.gs_param_list_s*, i8*, %struct.gs_param_string_s*) #0

declare i32 @param_read_int(%struct.gs_param_list_s*, i8*, i32*) #0

declare i32 @param_read_string_array(%struct.gs_param_list_s*, i8*, %struct.gs_param_string_array_s*) #0

; Function Attrs: nounwind readonly
declare i32 @strncmp(i8*, i8*, i64) #3

declare i32 @param_read_bool(%struct.gs_param_list_s*, i8*, i32*) #0

declare i32 @param_read_float_array(%struct.gs_param_list_s*, i8*, %struct.gs_param_float_array_s*) #0

declare i32 @param_read_null(%struct.gs_param_list_s*, i8*) #0

declare i32 @gdev_prn_put_params(%struct.gx_device_s*, %struct.gs_param_list_s*) #0

; Function Attrs: nounwind readonly
declare i32 @memcmp(i8*, i8*, i64) #3

declare i32 @gs_closedevice(%struct.gx_device_s*) #0

; Function Attrs: nounwind uwtable
define internal i32 @stc_gscmyk(%struct.stcolor_device_s* %sdev, i32 %npixel, i8* %in, i8* %buf, i8* %out) #1 {
entry:
  %sdev.addr = alloca %struct.stcolor_device_s*, align 8
  %npixel.addr = alloca i32, align 4
  %in.addr = alloca i8*, align 8
  %buf.addr = alloca i8*, align 8
  %out.addr = alloca i8*, align 8
  %ip = alloca i8*, align 8
  %error = alloca i32, align 4
  %p = alloca i32, align 4
  %tmp = alloca i8, align 1
  %cleanup.dest.slot = alloca i32
  store %struct.stcolor_device_s* %sdev, %struct.stcolor_device_s** %sdev.addr, align 8, !tbaa !1
  store i32 %npixel, i32* %npixel.addr, align 4, !tbaa !26
  store i8* %in, i8** %in.addr, align 8, !tbaa !1
  store i8* %buf, i8** %buf.addr, align 8, !tbaa !1
  store i8* %out, i8** %out.addr, align 8, !tbaa !1
  %0 = bitcast i8** %ip to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = load i8*, i8** %in.addr, align 8, !tbaa !1
  store i8* %1, i8** %ip, align 8, !tbaa !1
  %2 = bitcast i32* %error to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #2
  store i32 0, i32* %error, align 4, !tbaa !26
  %3 = load i32, i32* %npixel.addr, align 4, !tbaa !26
  %cmp = icmp sgt i32 %3, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %4 = bitcast i32* %p to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #2
  %5 = load i32, i32* %npixel.addr, align 4, !tbaa !26
  store i32 %5, i32* %p, align 4, !tbaa !26
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then
  %6 = load i32, i32* %p, align 4, !tbaa !26
  %cmp1 = icmp sgt i32 %6, 0
  br i1 %cmp1, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start(i64 1, i8* %tmp) #2
  %7 = load i8*, i8** %ip, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1
  store i8* %incdec.ptr, i8** %ip, align 8, !tbaa !1
  %8 = load i8, i8* %7, align 1, !tbaa !62
  store i8 %8, i8* %tmp, align 1, !tbaa !62
  %9 = load i8, i8* %tmp, align 1, !tbaa !62
  %conv = zext i8 %9 to i32
  %shr = ashr i32 %conv, 4
  %and = and i32 %shr, 15
  %conv2 = trunc i32 %and to i8
  %10 = load i8*, i8** %out.addr, align 8, !tbaa !1
  %incdec.ptr3 = getelementptr inbounds i8, i8* %10, i32 1
  store i8* %incdec.ptr3, i8** %out.addr, align 8, !tbaa !1
  store i8 %conv2, i8* %10, align 1, !tbaa !62
  %11 = load i32, i32* %p, align 4, !tbaa !26
  %dec = add nsw i32 %11, -1
  store i32 %dec, i32* %p, align 4, !tbaa !26
  %cmp4 = icmp sle i32 %dec, 0
  br i1 %cmp4, label %if.then.6, label %if.end

if.then.6:                                        ; preds = %for.body
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %for.body
  %12 = load i8, i8* %tmp, align 1, !tbaa !62
  %conv7 = zext i8 %12 to i32
  %and8 = and i32 %conv7, 15
  %conv9 = trunc i32 %and8 to i8
  %13 = load i8*, i8** %out.addr, align 8, !tbaa !1
  %incdec.ptr10 = getelementptr inbounds i8, i8* %13, i32 1
  store i8* %incdec.ptr10, i8** %out.addr, align 8, !tbaa !1
  store i8 %conv9, i8* %13, align 1, !tbaa !62
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then.6
  call void @llvm.lifetime.end(i64 1, i8* %tmp) #2
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 2, label %for.end
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %for.inc

for.inc:                                          ; preds = %cleanup.cont
  %14 = load i32, i32* %p, align 4, !tbaa !26
  %dec11 = add nsw i32 %14, -1
  store i32 %dec11, i32* %p, align 4, !tbaa !26
  br label %for.cond

for.end:                                          ; preds = %cleanup, %for.cond
  %15 = bitcast i32* %p to i8*
  call void @llvm.lifetime.end(i64 4, i8* %15) #2
  br label %if.end.41

if.else:                                          ; preds = %entry
  %16 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sdev.addr, align 8, !tbaa !1
  %stc = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %16, i32 0, i32 68
  %dither = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc, i32 0, i32 2
  %17 = load %struct.stc_dither_s*, %struct.stc_dither_s** %dither, align 8, !tbaa !41
  %flags = getelementptr inbounds %struct.stc_dither_s, %struct.stc_dither_s* %17, i32 0, i32 2
  %18 = load i32, i32* %flags, align 4, !tbaa !42
  %and12 = and i32 %18, 128
  %tobool = icmp ne i32 %and12, 0
  br i1 %tobool, label %if.then.13, label %if.end.14

if.then.13:                                       ; preds = %if.else
  store i32 -1, i32* %error, align 4, !tbaa !26
  br label %if.end.14

if.end.14:                                        ; preds = %if.then.13, %if.else
  %19 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sdev.addr, align 8, !tbaa !1
  %stc15 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %19, i32 0, i32 68
  %dither16 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc15, i32 0, i32 2
  %20 = load %struct.stc_dither_s*, %struct.stc_dither_s** %dither16, align 8, !tbaa !41
  %flags17 = getelementptr inbounds %struct.stc_dither_s, %struct.stc_dither_s* %20, i32 0, i32 2
  %21 = load i32, i32* %flags17, align 4, !tbaa !42
  %and18 = and i32 %21, 24
  %cmp19 = icmp ne i32 %and18, 8
  br i1 %cmp19, label %if.then.21, label %if.end.22

if.then.21:                                       ; preds = %if.end.14
  store i32 -2, i32* %error, align 4, !tbaa !26
  br label %if.end.22

if.end.22:                                        ; preds = %if.then.21, %if.end.14
  %22 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sdev.addr, align 8, !tbaa !1
  %stc23 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %22, i32 0, i32 68
  %dither24 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc23, i32 0, i32 2
  %23 = load %struct.stc_dither_s*, %struct.stc_dither_s** %dither24, align 8, !tbaa !41
  %flags25 = getelementptr inbounds %struct.stc_dither_s, %struct.stc_dither_s* %23, i32 0, i32 2
  %24 = load i32, i32* %flags25, align 4, !tbaa !42
  %and26 = and i32 %24, 64
  %cmp27 = icmp eq i32 %and26, 0
  br i1 %cmp27, label %if.then.29, label %if.end.30

if.then.29:                                       ; preds = %if.end.22
  store i32 -3, i32* %error, align 4, !tbaa !26
  br label %if.end.30

if.end.30:                                        ; preds = %if.then.29, %if.end.22
  %25 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sdev.addr, align 8, !tbaa !1
  %color_info = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %25, i32 0, i32 11
  %num_components = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info, i32 0, i32 1
  %26 = load i32, i32* %num_components, align 4, !tbaa !40
  %cmp31 = icmp ne i32 %26, 4
  br i1 %cmp31, label %if.then.33, label %if.end.34

if.then.33:                                       ; preds = %if.end.30
  store i32 -4, i32* %error, align 4, !tbaa !26
  br label %if.end.34

if.end.34:                                        ; preds = %if.then.33, %if.end.30
  %27 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sdev.addr, align 8, !tbaa !1
  %color_info35 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %27, i32 0, i32 11
  %depth = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info35, i32 0, i32 3
  %28 = load i16, i16* %depth, align 2, !tbaa !54
  %conv36 = zext i16 %28 to i32
  %cmp37 = icmp ne i32 %conv36, 4
  br i1 %cmp37, label %if.then.39, label %if.end.40

if.then.39:                                       ; preds = %if.end.34
  store i32 -5, i32* %error, align 4, !tbaa !26
  br label %if.end.40

if.end.40:                                        ; preds = %if.then.39, %if.end.34
  br label %if.end.41

if.end.41:                                        ; preds = %if.end.40, %for.end
  %29 = load i32, i32* %error, align 4, !tbaa !26
  store i32 1, i32* %cleanup.dest.slot
  %30 = bitcast i32* %error to i8*
  call void @llvm.lifetime.end(i64 4, i8* %30) #2
  %31 = bitcast i8** %ip to i8*
  call void @llvm.lifetime.end(i64 8, i8* %31) #2
  ret i32 %29

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nounwind uwtable
define internal i32 @stc_hscmyk(%struct.stcolor_device_s* %sdev, i32 %npixel, i8* %in, i8* %buf, i8* %out) #1 {
entry:
  %retval = alloca i32, align 4
  %sdev.addr = alloca %struct.stcolor_device_s*, align 8
  %npixel.addr = alloca i32, align 4
  %in.addr = alloca i8*, align 8
  %buf.addr = alloca i8*, align 8
  %out.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %i2do = alloca i32, align 4
  %lp = alloca i64*, align 8
  %cleanup.dest.slot = alloca i32
  %errc = alloca [4 x i64], align 16
  %errv = alloca i64*, align 8
  %step = alloca i32, align 4
  %ip = alloca i32*, align 8
  %ci = alloca i32, align 4
  %mode = alloca i32, align 4
  %k = alloca i64, align 8
  %v = alloca i64, align 8
  %n = alloca i64, align 8
  %pixel = alloca i32, align 4
  %kv = alloca i64, align 8
  store %struct.stcolor_device_s* %sdev, %struct.stcolor_device_s** %sdev.addr, align 8, !tbaa !1
  store i32 %npixel, i32* %npixel.addr, align 4, !tbaa !26
  store i8* %in, i8** %in.addr, align 8, !tbaa !1
  store i8* %buf, i8** %buf.addr, align 8, !tbaa !1
  store i8* %out, i8** %out.addr, align 8, !tbaa !1
  %0 = load i32, i32* %npixel.addr, align 4, !tbaa !26
  %cmp = icmp slt i32 %0, 0
  br i1 %cmp, label %if.then, label %if.else.73

if.then:                                          ; preds = %entry
  %1 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #2
  %2 = bitcast i32* %i2do to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #2
  %3 = bitcast i64** %lp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #2
  %4 = load i8*, i8** %buf.addr, align 8, !tbaa !1
  %5 = bitcast i8* %4 to i64*
  store i64* %5, i64** %lp, align 8, !tbaa !1
  %6 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sdev.addr, align 8, !tbaa !1
  %color_info = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %6, i32 0, i32 11
  %num_components = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info, i32 0, i32 1
  %7 = load i32, i32* %num_components, align 4, !tbaa !40
  %cmp1 = icmp ne i32 %7, 4
  br i1 %cmp1, label %if.then.2, label %if.end

if.then.2:                                        ; preds = %if.then
  store i32 -1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %if.then
  %8 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sdev.addr, align 8, !tbaa !1
  %stc = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %8, i32 0, i32 68
  %dither = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc, i32 0, i32 2
  %9 = load %struct.stc_dither_s*, %struct.stc_dither_s** %dither, align 8, !tbaa !41
  %cmp3 = icmp eq %struct.stc_dither_s* %9, null
  br i1 %cmp3, label %if.then.7, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %10 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sdev.addr, align 8, !tbaa !1
  %stc4 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %10, i32 0, i32 68
  %dither5 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc4, i32 0, i32 2
  %11 = load %struct.stc_dither_s*, %struct.stc_dither_s** %dither5, align 8, !tbaa !41
  %flags = getelementptr inbounds %struct.stc_dither_s, %struct.stc_dither_s* %11, i32 0, i32 2
  %12 = load i32, i32* %flags, align 4, !tbaa !42
  %and = and i32 %12, 24
  %cmp6 = icmp ne i32 %and, 16
  br i1 %cmp6, label %if.then.7, label %if.end.8

if.then.7:                                        ; preds = %lor.lhs.false, %if.end
  store i32 -2, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.8:                                         ; preds = %lor.lhs.false
  %13 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sdev.addr, align 8, !tbaa !1
  %stc9 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %13, i32 0, i32 68
  %dither10 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc9, i32 0, i32 2
  %14 = load %struct.stc_dither_s*, %struct.stc_dither_s** %dither10, align 8, !tbaa !41
  %flags11 = getelementptr inbounds %struct.stc_dither_s, %struct.stc_dither_s* %14, i32 0, i32 2
  %15 = load i32, i32* %flags11, align 4, !tbaa !42
  %div = udiv i32 %15, 256
  %cmp12 = icmp ult i32 %div, 1
  br i1 %cmp12, label %if.then.19, label %lor.lhs.false.13

lor.lhs.false.13:                                 ; preds = %if.end.8
  %16 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sdev.addr, align 8, !tbaa !1
  %stc14 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %16, i32 0, i32 68
  %dither15 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc14, i32 0, i32 2
  %17 = load %struct.stc_dither_s*, %struct.stc_dither_s** %dither15, align 8, !tbaa !41
  %bufadd = getelementptr inbounds %struct.stc_dither_s, %struct.stc_dither_s* %17, i32 0, i32 3
  %18 = load i32, i32* %bufadd, align 4, !tbaa !46
  %19 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sdev.addr, align 8, !tbaa !1
  %color_info16 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %19, i32 0, i32 11
  %num_components17 = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info16, i32 0, i32 1
  %20 = load i32, i32* %num_components17, align 4, !tbaa !40
  %mul = mul nsw i32 2, %20
  %add = add nsw i32 1, %mul
  %cmp18 = icmp ult i32 %18, %add
  br i1 %cmp18, label %if.then.19, label %if.end.20

if.then.19:                                       ; preds = %lor.lhs.false.13, %if.end.8
  store i32 -3, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.20:                                        ; preds = %lor.lhs.false.13
  %21 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sdev.addr, align 8, !tbaa !1
  %stc21 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %21, i32 0, i32 68
  %dither22 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc21, i32 0, i32 2
  %22 = load %struct.stc_dither_s*, %struct.stc_dither_s** %dither22, align 8, !tbaa !41
  %flags23 = getelementptr inbounds %struct.stc_dither_s, %struct.stc_dither_s* %22, i32 0, i32 2
  %23 = load i32, i32* %flags23, align 4, !tbaa !42
  %and24 = and i32 %23, 32
  %cmp25 = icmp eq i32 %and24, 0
  br i1 %cmp25, label %if.then.26, label %if.end.27

if.then.26:                                       ; preds = %if.end.20
  store i32 -4, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.27:                                        ; preds = %if.end.20
  %24 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sdev.addr, align 8, !tbaa !1
  %stc28 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %24, i32 0, i32 68
  %dither29 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc28, i32 0, i32 2
  %25 = load %struct.stc_dither_s*, %struct.stc_dither_s** %dither29, align 8, !tbaa !41
  %flags30 = getelementptr inbounds %struct.stc_dither_s, %struct.stc_dither_s* %25, i32 0, i32 2
  %26 = load i32, i32* %flags30, align 4, !tbaa !42
  %and31 = and i32 %26, 64
  %cmp32 = icmp eq i32 %and31, 0
  br i1 %cmp32, label %if.then.33, label %if.end.34

if.then.33:                                       ; preds = %if.end.27
  store i32 -5, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.34:                                        ; preds = %if.end.27
  %27 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sdev.addr, align 8, !tbaa !1
  %stc35 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %27, i32 0, i32 68
  %dither36 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc35, i32 0, i32 2
  %28 = load %struct.stc_dither_s*, %struct.stc_dither_s** %dither36, align 8, !tbaa !41
  %flags37 = getelementptr inbounds %struct.stc_dither_s, %struct.stc_dither_s* %28, i32 0, i32 2
  %29 = load i32, i32* %flags37, align 4, !tbaa !42
  %and38 = and i32 %29, 128
  %cmp39 = icmp ne i32 %and38, 0
  br i1 %cmp39, label %if.then.40, label %if.end.41

if.then.40:                                       ; preds = %if.end.34
  store i32 -6, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.41:                                        ; preds = %if.end.34
  %30 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sdev.addr, align 8, !tbaa !1
  %stc42 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %30, i32 0, i32 68
  %dither43 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc42, i32 0, i32 2
  %31 = load %struct.stc_dither_s*, %struct.stc_dither_s** %dither43, align 8, !tbaa !41
  %minmax = getelementptr inbounds %struct.stc_dither_s, %struct.stc_dither_s* %31, i32 0, i32 4
  %arrayidx = getelementptr inbounds [2 x double], [2 x double]* %minmax, i32 0, i64 0
  %32 = load double, double* %arrayidx, align 8, !tbaa !55
  %cmp44 = fcmp une double %32, 0.000000e+00
  br i1 %cmp44, label %if.then.51, label %lor.lhs.false.45

lor.lhs.false.45:                                 ; preds = %if.end.41
  %33 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sdev.addr, align 8, !tbaa !1
  %stc46 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %33, i32 0, i32 68
  %dither47 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc46, i32 0, i32 2
  %34 = load %struct.stc_dither_s*, %struct.stc_dither_s** %dither47, align 8, !tbaa !41
  %minmax48 = getelementptr inbounds %struct.stc_dither_s, %struct.stc_dither_s* %34, i32 0, i32 4
  %arrayidx49 = getelementptr inbounds [2 x double], [2 x double]* %minmax48, i32 0, i64 1
  %35 = load double, double* %arrayidx49, align 8, !tbaa !55
  %cmp50 = fcmp une double %35, 1.023000e+03
  br i1 %cmp50, label %if.then.51, label %if.end.52

if.then.51:                                       ; preds = %lor.lhs.false.45, %if.end.41
  store i32 -7, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.52:                                        ; preds = %lor.lhs.false.45
  %36 = load i32, i32* %npixel.addr, align 4, !tbaa !26
  %mul53 = mul nsw i32 4, %36
  %sub = sub nsw i32 9, %mul53
  store i32 %sub, i32* %i2do, align 4, !tbaa !26
  %37 = load i64*, i64** %lp, align 8, !tbaa !1
  %arrayidx54 = getelementptr inbounds i64, i64* %37, i64 0
  store i64 0, i64* %arrayidx54, align 8, !tbaa !25
  %38 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sdev.addr, align 8, !tbaa !1
  %stc55 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %38, i32 0, i32 68
  %flags56 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc55, i32 0, i32 0
  %39 = load i64, i64* %flags56, align 8, !tbaa !5
  %and57 = and i64 %39, 1
  %tobool = icmp ne i64 %and57, 0
  br i1 %tobool, label %if.then.58, label %if.else

if.then.58:                                       ; preds = %if.end.52
  store i32 1, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then.58
  %40 = load i32, i32* %i, align 4, !tbaa !26
  %41 = load i32, i32* %i2do, align 4, !tbaa !26
  %cmp59 = icmp slt i32 %40, %41
  br i1 %cmp59, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %42 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom = sext i32 %42 to i64
  %43 = load i64*, i64** %lp, align 8, !tbaa !1
  %arrayidx60 = getelementptr inbounds i64, i64* %43, i64 %idxprom
  store i64 0, i64* %arrayidx60, align 8, !tbaa !25
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %44 = load i32, i32* %i, align 4, !tbaa !26
  %inc = add nsw i32 %44, 1
  store i32 %inc, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end.70

if.else:                                          ; preds = %if.end.52
  store i32 1, i32* %i, align 4, !tbaa !26
  br label %for.cond.61

for.cond.61:                                      ; preds = %for.inc.67, %if.else
  %45 = load i32, i32* %i, align 4, !tbaa !26
  %46 = load i32, i32* %i2do, align 4, !tbaa !26
  %cmp62 = icmp slt i32 %45, %46
  br i1 %cmp62, label %for.body.63, label %for.end.69

for.body.63:                                      ; preds = %for.cond.61
  %call = call i32 @rand() #6
  %rem = srem i32 %call, 381
  %sub64 = sub nsw i32 %rem, 190
  %conv = sext i32 %sub64 to i64
  %47 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom65 = sext i32 %47 to i64
  %48 = load i64*, i64** %lp, align 8, !tbaa !1
  %arrayidx66 = getelementptr inbounds i64, i64* %48, i64 %idxprom65
  store i64 %conv, i64* %arrayidx66, align 8, !tbaa !25
  br label %for.inc.67

for.inc.67:                                       ; preds = %for.body.63
  %49 = load i32, i32* %i, align 4, !tbaa !26
  %inc68 = add nsw i32 %49, 1
  store i32 %inc68, i32* %i, align 4, !tbaa !26
  br label %for.cond.61

for.end.69:                                       ; preds = %for.cond.61
  br label %if.end.70

if.end.70:                                        ; preds = %for.end.69, %for.end
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.70, %if.then.51, %if.then.40, %if.then.33, %if.then.26, %if.then.19, %if.then.7, %if.then.2
  %50 = bitcast i64** %lp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %50) #2
  %51 = bitcast i32* %i2do to i8*
  call void @llvm.lifetime.end(i64 4, i8* %51) #2
  %52 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %52) #2
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %return
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.442

if.else.73:                                       ; preds = %entry
  %53 = bitcast [4 x i64]* %errc to i8*
  call void @llvm.lifetime.start(i64 32, i8* %53) #2
  %54 = bitcast i64** %errv to i8*
  call void @llvm.lifetime.start(i64 8, i8* %54) #2
  %55 = bitcast i32* %step to i8*
  call void @llvm.lifetime.start(i64 4, i8* %55) #2
  %56 = load i8*, i8** %buf.addr, align 8, !tbaa !1
  %arrayidx74 = getelementptr inbounds i8, i8* %56, i64 0
  %57 = load i8, i8* %arrayidx74, align 1, !tbaa !62
  %conv75 = zext i8 %57 to i32
  %tobool76 = icmp ne i32 %conv75, 0
  %cond = select i1 %tobool76, i32 -1, i32 1
  store i32 %cond, i32* %step, align 4, !tbaa !26
  %58 = bitcast i32** %ip to i8*
  call void @llvm.lifetime.start(i64 8, i8* %58) #2
  %59 = load i8*, i8** %in.addr, align 8, !tbaa !1
  %60 = bitcast i8* %59 to i32*
  store i32* %60, i32** %ip, align 8, !tbaa !1
  %61 = load i8*, i8** %buf.addr, align 8, !tbaa !1
  %arrayidx77 = getelementptr inbounds i8, i8* %61, i64 0
  %62 = load i8, i8* %arrayidx77, align 1, !tbaa !62
  %conv78 = zext i8 %62 to i32
  %neg = xor i32 %conv78, -1
  %conv79 = trunc i32 %neg to i8
  %63 = load i8*, i8** %buf.addr, align 8, !tbaa !1
  %arrayidx80 = getelementptr inbounds i8, i8* %63, i64 0
  store i8 %conv79, i8* %arrayidx80, align 1, !tbaa !62
  %64 = load i8*, i8** %buf.addr, align 8, !tbaa !1
  %65 = bitcast i8* %64 to i64*
  %add.ptr = getelementptr inbounds i64, i64* %65, i64 5
  store i64* %add.ptr, i64** %errv, align 8, !tbaa !1
  %66 = load i32, i32* %step, align 4, !tbaa !26
  %cmp81 = icmp slt i32 %66, 0
  br i1 %cmp81, label %if.then.83, label %if.end.93

if.then.83:                                       ; preds = %if.else.73
  %67 = load i32, i32* %npixel.addr, align 4, !tbaa !26
  %sub84 = sub nsw i32 %67, 1
  %68 = load i32*, i32** %ip, align 8, !tbaa !1
  %idx.ext = sext i32 %sub84 to i64
  %add.ptr85 = getelementptr inbounds i32, i32* %68, i64 %idx.ext
  store i32* %add.ptr85, i32** %ip, align 8, !tbaa !1
  %69 = load i32, i32* %npixel.addr, align 4, !tbaa !26
  %sub86 = sub nsw i32 %69, 1
  %70 = load i8*, i8** %out.addr, align 8, !tbaa !1
  %idx.ext87 = sext i32 %sub86 to i64
  %add.ptr88 = getelementptr inbounds i8, i8* %70, i64 %idx.ext87
  store i8* %add.ptr88, i8** %out.addr, align 8, !tbaa !1
  %71 = load i32, i32* %npixel.addr, align 4, !tbaa !26
  %sub89 = sub nsw i32 %71, 1
  %mul90 = mul nsw i32 4, %sub89
  %72 = load i64*, i64** %errv, align 8, !tbaa !1
  %idx.ext91 = sext i32 %mul90 to i64
  %add.ptr92 = getelementptr inbounds i64, i64* %72, i64 %idx.ext91
  store i64* %add.ptr92, i64** %errv, align 8, !tbaa !1
  br label %if.end.93

if.end.93:                                        ; preds = %if.then.83, %if.else.73
  %arrayidx94 = getelementptr inbounds [4 x i64], [4 x i64]* %errc, i32 0, i64 0
  store i64 0, i64* %arrayidx94, align 8, !tbaa !25
  %arrayidx95 = getelementptr inbounds [4 x i64], [4 x i64]* %errc, i32 0, i64 1
  store i64 0, i64* %arrayidx95, align 8, !tbaa !25
  %arrayidx96 = getelementptr inbounds [4 x i64], [4 x i64]* %errc, i32 0, i64 2
  store i64 0, i64* %arrayidx96, align 8, !tbaa !25
  %arrayidx97 = getelementptr inbounds [4 x i64], [4 x i64]* %errc, i32 0, i64 3
  store i64 0, i64* %arrayidx97, align 8, !tbaa !25
  br label %while.cond

while.cond:                                       ; preds = %if.end.435, %if.end.93
  %73 = load i32, i32* %npixel.addr, align 4, !tbaa !26
  %dec = add nsw i32 %73, -1
  store i32 %dec, i32* %npixel.addr, align 4, !tbaa !26
  %cmp98 = icmp sgt i32 %73, 0
  br i1 %cmp98, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %74 = bitcast i32* %ci to i8*
  call void @llvm.lifetime.start(i64 4, i8* %74) #2
  %75 = bitcast i32* %mode to i8*
  call void @llvm.lifetime.start(i64 4, i8* %75) #2
  %76 = bitcast i64* %k to i8*
  call void @llvm.lifetime.start(i64 8, i8* %76) #2
  %77 = bitcast i64* %v to i8*
  call void @llvm.lifetime.start(i64 8, i8* %77) #2
  %78 = bitcast i64* %n to i8*
  call void @llvm.lifetime.start(i64 8, i8* %78) #2
  %79 = bitcast i32* %pixel to i8*
  call void @llvm.lifetime.start(i64 4, i8* %79) #2
  %80 = load i32*, i32** %ip, align 8, !tbaa !1
  %81 = load i32, i32* %80, align 4, !tbaa !26
  store i32 %81, i32* %ci, align 4, !tbaa !26
  %82 = load i32, i32* %step, align 4, !tbaa !26
  %83 = load i32*, i32** %ip, align 8, !tbaa !1
  %idx.ext100 = sext i32 %82 to i64
  %add.ptr101 = getelementptr inbounds i32, i32* %83, i64 %idx.ext100
  store i32* %add.ptr101, i32** %ip, align 8, !tbaa !1
  %84 = load i32, i32* %ci, align 4, !tbaa !26
  %and102 = and i32 %84, 3
  store i32 %and102, i32* %mode, align 4, !tbaa !26
  %85 = load i32, i32* %ci, align 4, !tbaa !26
  %shr = lshr i32 %85, 2
  %and103 = and i32 %shr, 1023
  %conv104 = zext i32 %and103 to i64
  store i64 %conv104, i64* %k, align 8, !tbaa !25
  store i32 0, i32* %pixel, align 4, !tbaa !26
  %86 = load i64, i64* %k, align 8, !tbaa !25
  %87 = load i64*, i64** %errv, align 8, !tbaa !1
  %arrayidx105 = getelementptr inbounds i64, i64* %87, i64 3
  %88 = load i64, i64* %arrayidx105, align 8, !tbaa !25
  %add106 = add nsw i64 %86, %88
  %arrayidx107 = getelementptr inbounds [4 x i64], [4 x i64]* %errc, i32 0, i64 3
  %89 = load i64, i64* %arrayidx107, align 8, !tbaa !25
  %mul108 = mul nsw i64 7, %89
  %shr109 = ashr i64 %mul108, 4
  %add110 = add nsw i64 %add106, %shr109
  store i64 %add110, i64* %v, align 8, !tbaa !25
  %90 = load i32, i32* %mode, align 4, !tbaa !26
  %cmp111 = icmp eq i32 %90, 3
  br i1 %cmp111, label %if.then.113, label %if.else.181

if.then.113:                                      ; preds = %while.body
  %91 = load i64, i64* %v, align 8, !tbaa !25
  %cmp114 = icmp sgt i64 %91, 511
  br i1 %cmp114, label %if.then.116, label %if.end.118

if.then.116:                                      ; preds = %if.then.113
  %92 = load i64, i64* %v, align 8, !tbaa !25
  %sub117 = sub nsw i64 %92, 1023
  store i64 %sub117, i64* %v, align 8, !tbaa !25
  store i32 1, i32* %pixel, align 4, !tbaa !26
  br label %if.end.118

if.end.118:                                       ; preds = %if.then.116, %if.then.113
  %93 = load i64, i64* %v, align 8, !tbaa !25
  %mul119 = mul nsw i64 3, %93
  %add120 = add nsw i64 %mul119, 8
  %shr121 = ashr i64 %add120, 4
  %94 = load i32, i32* %step, align 4, !tbaa !26
  %shl = shl i32 %94, 2
  %sub122 = sub nsw i32 3, %shl
  %idxprom123 = sext i32 %sub122 to i64
  %95 = load i64*, i64** %errv, align 8, !tbaa !1
  %arrayidx124 = getelementptr inbounds i64, i64* %95, i64 %idxprom123
  %96 = load i64, i64* %arrayidx124, align 8, !tbaa !25
  %add125 = add nsw i64 %96, %shr121
  store i64 %add125, i64* %arrayidx124, align 8, !tbaa !25
  %97 = load i64, i64* %v, align 8, !tbaa !25
  %mul126 = mul nsw i64 5, %97
  %arrayidx127 = getelementptr inbounds [4 x i64], [4 x i64]* %errc, i32 0, i64 3
  %98 = load i64, i64* %arrayidx127, align 8, !tbaa !25
  %add128 = add nsw i64 %mul126, %98
  %add129 = add nsw i64 %add128, 8
  %shr130 = ashr i64 %add129, 4
  %99 = load i64*, i64** %errv, align 8, !tbaa !1
  %arrayidx131 = getelementptr inbounds i64, i64* %99, i64 3
  store i64 %shr130, i64* %arrayidx131, align 8, !tbaa !25
  %100 = load i64, i64* %v, align 8, !tbaa !25
  %arrayidx132 = getelementptr inbounds [4 x i64], [4 x i64]* %errc, i32 0, i64 3
  store i64 %100, i64* %arrayidx132, align 8, !tbaa !25
  %101 = load i64*, i64** %errv, align 8, !tbaa !1
  %arrayidx133 = getelementptr inbounds i64, i64* %101, i64 0
  %102 = load i64, i64* %arrayidx133, align 8, !tbaa !25
  %cmp134 = icmp slt i64 %102, -190
  br i1 %cmp134, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end.118
  br label %cond.end.143

cond.false:                                       ; preds = %if.end.118
  %103 = load i64*, i64** %errv, align 8, !tbaa !1
  %arrayidx136 = getelementptr inbounds i64, i64* %103, i64 0
  %104 = load i64, i64* %arrayidx136, align 8, !tbaa !25
  %cmp137 = icmp slt i64 %104, 190
  br i1 %cmp137, label %cond.true.139, label %cond.false.141

cond.true.139:                                    ; preds = %cond.false
  %105 = load i64*, i64** %errv, align 8, !tbaa !1
  %arrayidx140 = getelementptr inbounds i64, i64* %105, i64 0
  %106 = load i64, i64* %arrayidx140, align 8, !tbaa !25
  br label %cond.end

cond.false.141:                                   ; preds = %cond.false
  br label %cond.end

cond.end:                                         ; preds = %cond.false.141, %cond.true.139
  %cond142 = phi i64 [ %106, %cond.true.139 ], [ 190, %cond.false.141 ]
  br label %cond.end.143

cond.end.143:                                     ; preds = %cond.end, %cond.true
  %cond144 = phi i64 [ -190, %cond.true ], [ %cond142, %cond.end ]
  %107 = load i64*, i64** %errv, align 8, !tbaa !1
  %arrayidx145 = getelementptr inbounds i64, i64* %107, i64 0
  store i64 %cond144, i64* %arrayidx145, align 8, !tbaa !25
  %108 = load i64*, i64** %errv, align 8, !tbaa !1
  %arrayidx146 = getelementptr inbounds i64, i64* %108, i64 1
  %109 = load i64, i64* %arrayidx146, align 8, !tbaa !25
  %cmp147 = icmp slt i64 %109, -190
  br i1 %cmp147, label %cond.true.149, label %cond.false.150

cond.true.149:                                    ; preds = %cond.end.143
  br label %cond.end.159

cond.false.150:                                   ; preds = %cond.end.143
  %110 = load i64*, i64** %errv, align 8, !tbaa !1
  %arrayidx151 = getelementptr inbounds i64, i64* %110, i64 1
  %111 = load i64, i64* %arrayidx151, align 8, !tbaa !25
  %cmp152 = icmp slt i64 %111, 190
  br i1 %cmp152, label %cond.true.154, label %cond.false.156

cond.true.154:                                    ; preds = %cond.false.150
  %112 = load i64*, i64** %errv, align 8, !tbaa !1
  %arrayidx155 = getelementptr inbounds i64, i64* %112, i64 1
  %113 = load i64, i64* %arrayidx155, align 8, !tbaa !25
  br label %cond.end.157

cond.false.156:                                   ; preds = %cond.false.150
  br label %cond.end.157

cond.end.157:                                     ; preds = %cond.false.156, %cond.true.154
  %cond158 = phi i64 [ %113, %cond.true.154 ], [ 190, %cond.false.156 ]
  br label %cond.end.159

cond.end.159:                                     ; preds = %cond.end.157, %cond.true.149
  %cond160 = phi i64 [ -190, %cond.true.149 ], [ %cond158, %cond.end.157 ]
  %114 = load i64*, i64** %errv, align 8, !tbaa !1
  %arrayidx161 = getelementptr inbounds i64, i64* %114, i64 1
  store i64 %cond160, i64* %arrayidx161, align 8, !tbaa !25
  %115 = load i64*, i64** %errv, align 8, !tbaa !1
  %arrayidx162 = getelementptr inbounds i64, i64* %115, i64 2
  %116 = load i64, i64* %arrayidx162, align 8, !tbaa !25
  %cmp163 = icmp slt i64 %116, -190
  br i1 %cmp163, label %cond.true.165, label %cond.false.166

cond.true.165:                                    ; preds = %cond.end.159
  br label %cond.end.175

cond.false.166:                                   ; preds = %cond.end.159
  %117 = load i64*, i64** %errv, align 8, !tbaa !1
  %arrayidx167 = getelementptr inbounds i64, i64* %117, i64 2
  %118 = load i64, i64* %arrayidx167, align 8, !tbaa !25
  %cmp168 = icmp slt i64 %118, 190
  br i1 %cmp168, label %cond.true.170, label %cond.false.172

cond.true.170:                                    ; preds = %cond.false.166
  %119 = load i64*, i64** %errv, align 8, !tbaa !1
  %arrayidx171 = getelementptr inbounds i64, i64* %119, i64 2
  %120 = load i64, i64* %arrayidx171, align 8, !tbaa !25
  br label %cond.end.173

cond.false.172:                                   ; preds = %cond.false.166
  br label %cond.end.173

cond.end.173:                                     ; preds = %cond.false.172, %cond.true.170
  %cond174 = phi i64 [ %120, %cond.true.170 ], [ 190, %cond.false.172 ]
  br label %cond.end.175

cond.end.175:                                     ; preds = %cond.end.173, %cond.true.165
  %cond176 = phi i64 [ -190, %cond.true.165 ], [ %cond174, %cond.end.173 ]
  %121 = load i64*, i64** %errv, align 8, !tbaa !1
  %arrayidx177 = getelementptr inbounds i64, i64* %121, i64 2
  store i64 %cond176, i64* %arrayidx177, align 8, !tbaa !25
  %arrayidx178 = getelementptr inbounds [4 x i64], [4 x i64]* %errc, i32 0, i64 0
  store i64 0, i64* %arrayidx178, align 8, !tbaa !25
  %arrayidx179 = getelementptr inbounds [4 x i64], [4 x i64]* %errc, i32 0, i64 1
  store i64 0, i64* %arrayidx179, align 8, !tbaa !25
  %arrayidx180 = getelementptr inbounds [4 x i64], [4 x i64]* %errc, i32 0, i64 2
  store i64 0, i64* %arrayidx180, align 8, !tbaa !25
  br label %if.end.435

if.else.181:                                      ; preds = %while.body
  %122 = load i64, i64* %v, align 8, !tbaa !25
  %cmp182 = icmp sgt i64 %122, 511
  br i1 %cmp182, label %if.then.184, label %if.else.303

if.then.184:                                      ; preds = %if.else.181
  %123 = load i64, i64* %v, align 8, !tbaa !25
  %sub185 = sub nsw i64 %123, 1023
  store i64 %sub185, i64* %v, align 8, !tbaa !25
  store i32 1, i32* %pixel, align 4, !tbaa !26
  %124 = load i64, i64* %v, align 8, !tbaa !25
  %mul186 = mul nsw i64 3, %124
  %add187 = add nsw i64 %mul186, 8
  %shr188 = ashr i64 %add187, 4
  %125 = load i32, i32* %step, align 4, !tbaa !26
  %shl189 = shl i32 %125, 2
  %sub190 = sub nsw i32 3, %shl189
  %idxprom191 = sext i32 %sub190 to i64
  %126 = load i64*, i64** %errv, align 8, !tbaa !1
  %arrayidx192 = getelementptr inbounds i64, i64* %126, i64 %idxprom191
  %127 = load i64, i64* %arrayidx192, align 8, !tbaa !25
  %add193 = add nsw i64 %127, %shr188
  store i64 %add193, i64* %arrayidx192, align 8, !tbaa !25
  %128 = load i64, i64* %v, align 8, !tbaa !25
  %mul194 = mul nsw i64 5, %128
  %arrayidx195 = getelementptr inbounds [4 x i64], [4 x i64]* %errc, i32 0, i64 3
  %129 = load i64, i64* %arrayidx195, align 8, !tbaa !25
  %add196 = add nsw i64 %mul194, %129
  %add197 = add nsw i64 %add196, 8
  %shr198 = ashr i64 %add197, 4
  %130 = load i64*, i64** %errv, align 8, !tbaa !1
  %arrayidx199 = getelementptr inbounds i64, i64* %130, i64 3
  store i64 %shr198, i64* %arrayidx199, align 8, !tbaa !25
  %131 = load i64, i64* %v, align 8, !tbaa !25
  %arrayidx200 = getelementptr inbounds [4 x i64], [4 x i64]* %errc, i32 0, i64 3
  store i64 %131, i64* %arrayidx200, align 8, !tbaa !25
  %132 = load i32, i32* %ci, align 4, !tbaa !26
  %shr201 = lshr i32 %132, 12
  %and202 = and i32 %shr201, 1023
  %conv203 = zext i32 %and202 to i64
  store i64 %conv203, i64* %n, align 8, !tbaa !25
  %133 = load i32, i32* %mode, align 4, !tbaa !26
  %cmp204 = icmp eq i32 %133, 2
  br i1 %cmp204, label %if.then.206, label %if.else.207

if.then.206:                                      ; preds = %if.then.184
  %134 = load i64, i64* %k, align 8, !tbaa !25
  store i64 %134, i64* %v, align 8, !tbaa !25
  br label %if.end.211

if.else.207:                                      ; preds = %if.then.184
  %135 = load i64, i64* %n, align 8, !tbaa !25
  store i64 %135, i64* %v, align 8, !tbaa !25
  %136 = load i32, i32* %ci, align 4, !tbaa !26
  %shr208 = lshr i32 %136, 22
  %and209 = and i32 %shr208, 1023
  %conv210 = zext i32 %and209 to i64
  store i64 %conv210, i64* %n, align 8, !tbaa !25
  br label %if.end.211

if.end.211:                                       ; preds = %if.else.207, %if.then.206
  %137 = load i64*, i64** %errv, align 8, !tbaa !1
  %arrayidx212 = getelementptr inbounds i64, i64* %137, i64 2
  %138 = load i64, i64* %arrayidx212, align 8, !tbaa !25
  %arrayidx213 = getelementptr inbounds [4 x i64], [4 x i64]* %errc, i32 0, i64 2
  %139 = load i64, i64* %arrayidx213, align 8, !tbaa !25
  %mul214 = mul nsw i64 7, %139
  %shr215 = ashr i64 %mul214, 4
  %add216 = add nsw i64 %138, %shr215
  %sub217 = sub nsw i64 %add216, 1023
  %140 = load i64, i64* %v, align 8, !tbaa !25
  %add218 = add nsw i64 %140, %sub217
  store i64 %add218, i64* %v, align 8, !tbaa !25
  %141 = load i64, i64* %v, align 8, !tbaa !25
  %cmp219 = icmp slt i64 %141, -511
  br i1 %cmp219, label %if.then.221, label %if.end.222

if.then.221:                                      ; preds = %if.end.211
  store i64 -511, i64* %v, align 8, !tbaa !25
  br label %if.end.222

if.end.222:                                       ; preds = %if.then.221, %if.end.211
  %142 = load i64, i64* %v, align 8, !tbaa !25
  %mul223 = mul nsw i64 3, %142
  %add224 = add nsw i64 %mul223, 8
  %shr225 = ashr i64 %add224, 4
  %143 = load i32, i32* %step, align 4, !tbaa !26
  %shl226 = shl i32 %143, 2
  %sub227 = sub nsw i32 2, %shl226
  %idxprom228 = sext i32 %sub227 to i64
  %144 = load i64*, i64** %errv, align 8, !tbaa !1
  %arrayidx229 = getelementptr inbounds i64, i64* %144, i64 %idxprom228
  %145 = load i64, i64* %arrayidx229, align 8, !tbaa !25
  %add230 = add nsw i64 %145, %shr225
  store i64 %add230, i64* %arrayidx229, align 8, !tbaa !25
  %146 = load i64, i64* %v, align 8, !tbaa !25
  %mul231 = mul nsw i64 5, %146
  %arrayidx232 = getelementptr inbounds [4 x i64], [4 x i64]* %errc, i32 0, i64 2
  %147 = load i64, i64* %arrayidx232, align 8, !tbaa !25
  %add233 = add nsw i64 %mul231, %147
  %add234 = add nsw i64 %add233, 8
  %shr235 = ashr i64 %add234, 4
  %148 = load i64*, i64** %errv, align 8, !tbaa !1
  %arrayidx236 = getelementptr inbounds i64, i64* %148, i64 2
  store i64 %shr235, i64* %arrayidx236, align 8, !tbaa !25
  %149 = load i64, i64* %v, align 8, !tbaa !25
  %arrayidx237 = getelementptr inbounds [4 x i64], [4 x i64]* %errc, i32 0, i64 2
  store i64 %149, i64* %arrayidx237, align 8, !tbaa !25
  %150 = load i32, i32* %mode, align 4, !tbaa !26
  %cmp238 = icmp eq i32 %150, 1
  br i1 %cmp238, label %if.then.240, label %if.else.241

if.then.240:                                      ; preds = %if.end.222
  %151 = load i64, i64* %k, align 8, !tbaa !25
  store i64 %151, i64* %v, align 8, !tbaa !25
  br label %if.end.245

if.else.241:                                      ; preds = %if.end.222
  %152 = load i64, i64* %n, align 8, !tbaa !25
  store i64 %152, i64* %v, align 8, !tbaa !25
  %153 = load i32, i32* %ci, align 4, !tbaa !26
  %shr242 = lshr i32 %153, 22
  %and243 = and i32 %shr242, 1023
  %conv244 = zext i32 %and243 to i64
  store i64 %conv244, i64* %n, align 8, !tbaa !25
  br label %if.end.245

if.end.245:                                       ; preds = %if.else.241, %if.then.240
  %154 = load i64*, i64** %errv, align 8, !tbaa !1
  %arrayidx246 = getelementptr inbounds i64, i64* %154, i64 1
  %155 = load i64, i64* %arrayidx246, align 8, !tbaa !25
  %arrayidx247 = getelementptr inbounds [4 x i64], [4 x i64]* %errc, i32 0, i64 1
  %156 = load i64, i64* %arrayidx247, align 8, !tbaa !25
  %mul248 = mul nsw i64 7, %156
  %shr249 = ashr i64 %mul248, 4
  %add250 = add nsw i64 %155, %shr249
  %sub251 = sub nsw i64 %add250, 1023
  %157 = load i64, i64* %v, align 8, !tbaa !25
  %add252 = add nsw i64 %157, %sub251
  store i64 %add252, i64* %v, align 8, !tbaa !25
  %158 = load i64, i64* %v, align 8, !tbaa !25
  %cmp253 = icmp slt i64 %158, -511
  br i1 %cmp253, label %if.then.255, label %if.end.256

if.then.255:                                      ; preds = %if.end.245
  store i64 -511, i64* %v, align 8, !tbaa !25
  br label %if.end.256

if.end.256:                                       ; preds = %if.then.255, %if.end.245
  %159 = load i64, i64* %v, align 8, !tbaa !25
  %mul257 = mul nsw i64 3, %159
  %add258 = add nsw i64 %mul257, 8
  %shr259 = ashr i64 %add258, 4
  %160 = load i32, i32* %step, align 4, !tbaa !26
  %shl260 = shl i32 %160, 2
  %sub261 = sub nsw i32 1, %shl260
  %idxprom262 = sext i32 %sub261 to i64
  %161 = load i64*, i64** %errv, align 8, !tbaa !1
  %arrayidx263 = getelementptr inbounds i64, i64* %161, i64 %idxprom262
  %162 = load i64, i64* %arrayidx263, align 8, !tbaa !25
  %add264 = add nsw i64 %162, %shr259
  store i64 %add264, i64* %arrayidx263, align 8, !tbaa !25
  %163 = load i64, i64* %v, align 8, !tbaa !25
  %mul265 = mul nsw i64 5, %163
  %arrayidx266 = getelementptr inbounds [4 x i64], [4 x i64]* %errc, i32 0, i64 1
  %164 = load i64, i64* %arrayidx266, align 8, !tbaa !25
  %add267 = add nsw i64 %mul265, %164
  %add268 = add nsw i64 %add267, 8
  %shr269 = ashr i64 %add268, 4
  %165 = load i64*, i64** %errv, align 8, !tbaa !1
  %arrayidx270 = getelementptr inbounds i64, i64* %165, i64 1
  store i64 %shr269, i64* %arrayidx270, align 8, !tbaa !25
  %166 = load i64, i64* %v, align 8, !tbaa !25
  %arrayidx271 = getelementptr inbounds [4 x i64], [4 x i64]* %errc, i32 0, i64 1
  store i64 %166, i64* %arrayidx271, align 8, !tbaa !25
  %167 = load i32, i32* %mode, align 4, !tbaa !26
  %cmp272 = icmp eq i32 %167, 0
  br i1 %cmp272, label %if.then.274, label %if.else.275

if.then.274:                                      ; preds = %if.end.256
  %168 = load i64, i64* %k, align 8, !tbaa !25
  store i64 %168, i64* %v, align 8, !tbaa !25
  br label %if.end.276

if.else.275:                                      ; preds = %if.end.256
  %169 = load i64, i64* %n, align 8, !tbaa !25
  store i64 %169, i64* %v, align 8, !tbaa !25
  br label %if.end.276

if.end.276:                                       ; preds = %if.else.275, %if.then.274
  %170 = load i64*, i64** %errv, align 8, !tbaa !1
  %arrayidx277 = getelementptr inbounds i64, i64* %170, i64 0
  %171 = load i64, i64* %arrayidx277, align 8, !tbaa !25
  %arrayidx278 = getelementptr inbounds [4 x i64], [4 x i64]* %errc, i32 0, i64 0
  %172 = load i64, i64* %arrayidx278, align 8, !tbaa !25
  %mul279 = mul nsw i64 7, %172
  %shr280 = ashr i64 %mul279, 4
  %add281 = add nsw i64 %171, %shr280
  %sub282 = sub nsw i64 %add281, 1023
  %173 = load i64, i64* %v, align 8, !tbaa !25
  %add283 = add nsw i64 %173, %sub282
  store i64 %add283, i64* %v, align 8, !tbaa !25
  %174 = load i64, i64* %v, align 8, !tbaa !25
  %cmp284 = icmp slt i64 %174, -511
  br i1 %cmp284, label %if.then.286, label %if.end.287

if.then.286:                                      ; preds = %if.end.276
  store i64 -511, i64* %v, align 8, !tbaa !25
  br label %if.end.287

if.end.287:                                       ; preds = %if.then.286, %if.end.276
  %175 = load i64, i64* %v, align 8, !tbaa !25
  %mul288 = mul nsw i64 3, %175
  %add289 = add nsw i64 %mul288, 8
  %shr290 = ashr i64 %add289, 4
  %176 = load i32, i32* %step, align 4, !tbaa !26
  %shl291 = shl i32 %176, 2
  %sub292 = sub nsw i32 0, %shl291
  %idxprom293 = sext i32 %sub292 to i64
  %177 = load i64*, i64** %errv, align 8, !tbaa !1
  %arrayidx294 = getelementptr inbounds i64, i64* %177, i64 %idxprom293
  %178 = load i64, i64* %arrayidx294, align 8, !tbaa !25
  %add295 = add nsw i64 %178, %shr290
  store i64 %add295, i64* %arrayidx294, align 8, !tbaa !25
  %179 = load i64, i64* %v, align 8, !tbaa !25
  %mul296 = mul nsw i64 5, %179
  %arrayidx297 = getelementptr inbounds [4 x i64], [4 x i64]* %errc, i32 0, i64 0
  %180 = load i64, i64* %arrayidx297, align 8, !tbaa !25
  %add298 = add nsw i64 %mul296, %180
  %add299 = add nsw i64 %add298, 8
  %shr300 = ashr i64 %add299, 4
  %181 = load i64*, i64** %errv, align 8, !tbaa !1
  %arrayidx301 = getelementptr inbounds i64, i64* %181, i64 0
  store i64 %shr300, i64* %arrayidx301, align 8, !tbaa !25
  %182 = load i64, i64* %v, align 8, !tbaa !25
  %arrayidx302 = getelementptr inbounds [4 x i64], [4 x i64]* %errc, i32 0, i64 0
  store i64 %182, i64* %arrayidx302, align 8, !tbaa !25
  br label %if.end.434

if.else.303:                                      ; preds = %if.else.181
  %183 = bitcast i64* %kv to i8*
  call void @llvm.lifetime.start(i64 8, i8* %183) #2
  %184 = load i64, i64* %v, align 8, !tbaa !25
  store i64 %184, i64* %kv, align 8, !tbaa !25
  %185 = load i32, i32* %ci, align 4, !tbaa !26
  %shr304 = lshr i32 %185, 12
  %and305 = and i32 %shr304, 1023
  %conv306 = zext i32 %and305 to i64
  store i64 %conv306, i64* %n, align 8, !tbaa !25
  %186 = load i32, i32* %mode, align 4, !tbaa !26
  %cmp307 = icmp eq i32 %186, 2
  br i1 %cmp307, label %if.then.309, label %if.else.310

if.then.309:                                      ; preds = %if.else.303
  %187 = load i64, i64* %k, align 8, !tbaa !25
  store i64 %187, i64* %v, align 8, !tbaa !25
  br label %if.end.314

if.else.310:                                      ; preds = %if.else.303
  %188 = load i64, i64* %n, align 8, !tbaa !25
  store i64 %188, i64* %v, align 8, !tbaa !25
  %189 = load i32, i32* %ci, align 4, !tbaa !26
  %shr311 = lshr i32 %189, 22
  %and312 = and i32 %shr311, 1023
  %conv313 = zext i32 %and312 to i64
  store i64 %conv313, i64* %n, align 8, !tbaa !25
  br label %if.end.314

if.end.314:                                       ; preds = %if.else.310, %if.then.309
  %190 = load i64*, i64** %errv, align 8, !tbaa !1
  %arrayidx315 = getelementptr inbounds i64, i64* %190, i64 2
  %191 = load i64, i64* %arrayidx315, align 8, !tbaa !25
  %arrayidx316 = getelementptr inbounds [4 x i64], [4 x i64]* %errc, i32 0, i64 2
  %192 = load i64, i64* %arrayidx316, align 8, !tbaa !25
  %mul317 = mul nsw i64 7, %192
  %shr318 = ashr i64 %mul317, 4
  %add319 = add nsw i64 %191, %shr318
  %193 = load i64, i64* %v, align 8, !tbaa !25
  %add320 = add nsw i64 %193, %add319
  store i64 %add320, i64* %v, align 8, !tbaa !25
  %194 = load i64, i64* %v, align 8, !tbaa !25
  %cmp321 = icmp sgt i64 %194, 511
  br i1 %cmp321, label %if.then.323, label %if.end.325

if.then.323:                                      ; preds = %if.end.314
  %195 = load i32, i32* %pixel, align 4, !tbaa !26
  %or = or i32 %195, 2
  store i32 %or, i32* %pixel, align 4, !tbaa !26
  %196 = load i64, i64* %v, align 8, !tbaa !25
  %sub324 = sub nsw i64 %196, 1023
  store i64 %sub324, i64* %v, align 8, !tbaa !25
  br label %if.end.325

if.end.325:                                       ; preds = %if.then.323, %if.end.314
  %197 = load i64, i64* %v, align 8, !tbaa !25
  %mul326 = mul nsw i64 3, %197
  %add327 = add nsw i64 %mul326, 8
  %shr328 = ashr i64 %add327, 4
  %198 = load i32, i32* %step, align 4, !tbaa !26
  %shl329 = shl i32 %198, 2
  %sub330 = sub nsw i32 2, %shl329
  %idxprom331 = sext i32 %sub330 to i64
  %199 = load i64*, i64** %errv, align 8, !tbaa !1
  %arrayidx332 = getelementptr inbounds i64, i64* %199, i64 %idxprom331
  %200 = load i64, i64* %arrayidx332, align 8, !tbaa !25
  %add333 = add nsw i64 %200, %shr328
  store i64 %add333, i64* %arrayidx332, align 8, !tbaa !25
  %201 = load i64, i64* %v, align 8, !tbaa !25
  %mul334 = mul nsw i64 5, %201
  %arrayidx335 = getelementptr inbounds [4 x i64], [4 x i64]* %errc, i32 0, i64 2
  %202 = load i64, i64* %arrayidx335, align 8, !tbaa !25
  %add336 = add nsw i64 %mul334, %202
  %add337 = add nsw i64 %add336, 8
  %shr338 = ashr i64 %add337, 4
  %203 = load i64*, i64** %errv, align 8, !tbaa !1
  %arrayidx339 = getelementptr inbounds i64, i64* %203, i64 2
  store i64 %shr338, i64* %arrayidx339, align 8, !tbaa !25
  %204 = load i64, i64* %v, align 8, !tbaa !25
  %arrayidx340 = getelementptr inbounds [4 x i64], [4 x i64]* %errc, i32 0, i64 2
  store i64 %204, i64* %arrayidx340, align 8, !tbaa !25
  %205 = load i32, i32* %mode, align 4, !tbaa !26
  %cmp341 = icmp eq i32 %205, 1
  br i1 %cmp341, label %if.then.343, label %if.else.344

if.then.343:                                      ; preds = %if.end.325
  %206 = load i64, i64* %k, align 8, !tbaa !25
  store i64 %206, i64* %v, align 8, !tbaa !25
  br label %if.end.348

if.else.344:                                      ; preds = %if.end.325
  %207 = load i64, i64* %n, align 8, !tbaa !25
  store i64 %207, i64* %v, align 8, !tbaa !25
  %208 = load i32, i32* %ci, align 4, !tbaa !26
  %shr345 = lshr i32 %208, 22
  %and346 = and i32 %shr345, 1023
  %conv347 = zext i32 %and346 to i64
  store i64 %conv347, i64* %n, align 8, !tbaa !25
  br label %if.end.348

if.end.348:                                       ; preds = %if.else.344, %if.then.343
  %209 = load i64*, i64** %errv, align 8, !tbaa !1
  %arrayidx349 = getelementptr inbounds i64, i64* %209, i64 1
  %210 = load i64, i64* %arrayidx349, align 8, !tbaa !25
  %arrayidx350 = getelementptr inbounds [4 x i64], [4 x i64]* %errc, i32 0, i64 1
  %211 = load i64, i64* %arrayidx350, align 8, !tbaa !25
  %mul351 = mul nsw i64 7, %211
  %shr352 = ashr i64 %mul351, 4
  %add353 = add nsw i64 %210, %shr352
  %212 = load i64, i64* %v, align 8, !tbaa !25
  %add354 = add nsw i64 %212, %add353
  store i64 %add354, i64* %v, align 8, !tbaa !25
  %213 = load i64, i64* %v, align 8, !tbaa !25
  %cmp355 = icmp sgt i64 %213, 511
  br i1 %cmp355, label %if.then.357, label %if.end.360

if.then.357:                                      ; preds = %if.end.348
  %214 = load i32, i32* %pixel, align 4, !tbaa !26
  %or358 = or i32 %214, 4
  store i32 %or358, i32* %pixel, align 4, !tbaa !26
  %215 = load i64, i64* %v, align 8, !tbaa !25
  %sub359 = sub nsw i64 %215, 1023
  store i64 %sub359, i64* %v, align 8, !tbaa !25
  br label %if.end.360

if.end.360:                                       ; preds = %if.then.357, %if.end.348
  %216 = load i64, i64* %v, align 8, !tbaa !25
  %mul361 = mul nsw i64 3, %216
  %add362 = add nsw i64 %mul361, 8
  %shr363 = ashr i64 %add362, 4
  %217 = load i32, i32* %step, align 4, !tbaa !26
  %shl364 = shl i32 %217, 2
  %sub365 = sub nsw i32 1, %shl364
  %idxprom366 = sext i32 %sub365 to i64
  %218 = load i64*, i64** %errv, align 8, !tbaa !1
  %arrayidx367 = getelementptr inbounds i64, i64* %218, i64 %idxprom366
  %219 = load i64, i64* %arrayidx367, align 8, !tbaa !25
  %add368 = add nsw i64 %219, %shr363
  store i64 %add368, i64* %arrayidx367, align 8, !tbaa !25
  %220 = load i64, i64* %v, align 8, !tbaa !25
  %mul369 = mul nsw i64 5, %220
  %arrayidx370 = getelementptr inbounds [4 x i64], [4 x i64]* %errc, i32 0, i64 1
  %221 = load i64, i64* %arrayidx370, align 8, !tbaa !25
  %add371 = add nsw i64 %mul369, %221
  %add372 = add nsw i64 %add371, 8
  %shr373 = ashr i64 %add372, 4
  %222 = load i64*, i64** %errv, align 8, !tbaa !1
  %arrayidx374 = getelementptr inbounds i64, i64* %222, i64 1
  store i64 %shr373, i64* %arrayidx374, align 8, !tbaa !25
  %223 = load i64, i64* %v, align 8, !tbaa !25
  %arrayidx375 = getelementptr inbounds [4 x i64], [4 x i64]* %errc, i32 0, i64 1
  store i64 %223, i64* %arrayidx375, align 8, !tbaa !25
  %224 = load i32, i32* %mode, align 4, !tbaa !26
  %cmp376 = icmp eq i32 %224, 0
  br i1 %cmp376, label %if.then.378, label %if.else.379

if.then.378:                                      ; preds = %if.end.360
  %225 = load i64, i64* %k, align 8, !tbaa !25
  store i64 %225, i64* %v, align 8, !tbaa !25
  br label %if.end.380

if.else.379:                                      ; preds = %if.end.360
  %226 = load i64, i64* %n, align 8, !tbaa !25
  store i64 %226, i64* %v, align 8, !tbaa !25
  br label %if.end.380

if.end.380:                                       ; preds = %if.else.379, %if.then.378
  %227 = load i64*, i64** %errv, align 8, !tbaa !1
  %arrayidx381 = getelementptr inbounds i64, i64* %227, i64 0
  %228 = load i64, i64* %arrayidx381, align 8, !tbaa !25
  %arrayidx382 = getelementptr inbounds [4 x i64], [4 x i64]* %errc, i32 0, i64 0
  %229 = load i64, i64* %arrayidx382, align 8, !tbaa !25
  %mul383 = mul nsw i64 7, %229
  %shr384 = ashr i64 %mul383, 4
  %add385 = add nsw i64 %228, %shr384
  %230 = load i64, i64* %v, align 8, !tbaa !25
  %add386 = add nsw i64 %230, %add385
  store i64 %add386, i64* %v, align 8, !tbaa !25
  %231 = load i64, i64* %v, align 8, !tbaa !25
  %cmp387 = icmp sgt i64 %231, 511
  br i1 %cmp387, label %if.then.389, label %if.end.392

if.then.389:                                      ; preds = %if.end.380
  %232 = load i32, i32* %pixel, align 4, !tbaa !26
  %or390 = or i32 %232, 8
  store i32 %or390, i32* %pixel, align 4, !tbaa !26
  %233 = load i64, i64* %v, align 8, !tbaa !25
  %sub391 = sub nsw i64 %233, 1023
  store i64 %sub391, i64* %v, align 8, !tbaa !25
  br label %if.end.392

if.end.392:                                       ; preds = %if.then.389, %if.end.380
  %234 = load i64, i64* %v, align 8, !tbaa !25
  %mul393 = mul nsw i64 3, %234
  %add394 = add nsw i64 %mul393, 8
  %shr395 = ashr i64 %add394, 4
  %235 = load i32, i32* %step, align 4, !tbaa !26
  %shl396 = shl i32 %235, 2
  %sub397 = sub nsw i32 0, %shl396
  %idxprom398 = sext i32 %sub397 to i64
  %236 = load i64*, i64** %errv, align 8, !tbaa !1
  %arrayidx399 = getelementptr inbounds i64, i64* %236, i64 %idxprom398
  %237 = load i64, i64* %arrayidx399, align 8, !tbaa !25
  %add400 = add nsw i64 %237, %shr395
  store i64 %add400, i64* %arrayidx399, align 8, !tbaa !25
  %238 = load i64, i64* %v, align 8, !tbaa !25
  %mul401 = mul nsw i64 5, %238
  %arrayidx402 = getelementptr inbounds [4 x i64], [4 x i64]* %errc, i32 0, i64 0
  %239 = load i64, i64* %arrayidx402, align 8, !tbaa !25
  %add403 = add nsw i64 %mul401, %239
  %add404 = add nsw i64 %add403, 8
  %shr405 = ashr i64 %add404, 4
  %240 = load i64*, i64** %errv, align 8, !tbaa !1
  %arrayidx406 = getelementptr inbounds i64, i64* %240, i64 0
  store i64 %shr405, i64* %arrayidx406, align 8, !tbaa !25
  %241 = load i64, i64* %v, align 8, !tbaa !25
  %arrayidx407 = getelementptr inbounds [4 x i64], [4 x i64]* %errc, i32 0, i64 0
  store i64 %241, i64* %arrayidx407, align 8, !tbaa !25
  %242 = load i64, i64* %kv, align 8, !tbaa !25
  store i64 %242, i64* %v, align 8, !tbaa !25
  %243 = load i32, i32* %pixel, align 4, !tbaa !26
  %cmp408 = icmp eq i32 %243, 14
  br i1 %cmp408, label %if.then.410, label %if.end.418

if.then.410:                                      ; preds = %if.end.392
  store i32 1, i32* %pixel, align 4, !tbaa !26
  %244 = load i64, i64* %v, align 8, !tbaa !25
  %cmp411 = icmp sgt i64 %244, 511
  br i1 %cmp411, label %cond.true.413, label %cond.false.415

cond.true.413:                                    ; preds = %if.then.410
  %245 = load i64, i64* %v, align 8, !tbaa !25
  %sub414 = sub nsw i64 %245, 1023
  br label %cond.end.416

cond.false.415:                                   ; preds = %if.then.410
  br label %cond.end.416

cond.end.416:                                     ; preds = %cond.false.415, %cond.true.413
  %cond417 = phi i64 [ %sub414, %cond.true.413 ], [ -511, %cond.false.415 ]
  store i64 %cond417, i64* %v, align 8, !tbaa !25
  br label %if.end.418

if.end.418:                                       ; preds = %cond.end.416, %if.end.392
  %246 = load i64, i64* %v, align 8, !tbaa !25
  %mul419 = mul nsw i64 3, %246
  %add420 = add nsw i64 %mul419, 8
  %shr421 = ashr i64 %add420, 4
  %247 = load i32, i32* %step, align 4, !tbaa !26
  %shl422 = shl i32 %247, 2
  %sub423 = sub nsw i32 3, %shl422
  %idxprom424 = sext i32 %sub423 to i64
  %248 = load i64*, i64** %errv, align 8, !tbaa !1
  %arrayidx425 = getelementptr inbounds i64, i64* %248, i64 %idxprom424
  %249 = load i64, i64* %arrayidx425, align 8, !tbaa !25
  %add426 = add nsw i64 %249, %shr421
  store i64 %add426, i64* %arrayidx425, align 8, !tbaa !25
  %250 = load i64, i64* %v, align 8, !tbaa !25
  %mul427 = mul nsw i64 5, %250
  %arrayidx428 = getelementptr inbounds [4 x i64], [4 x i64]* %errc, i32 0, i64 3
  %251 = load i64, i64* %arrayidx428, align 8, !tbaa !25
  %add429 = add nsw i64 %mul427, %251
  %add430 = add nsw i64 %add429, 8
  %shr431 = ashr i64 %add430, 4
  %252 = load i64*, i64** %errv, align 8, !tbaa !1
  %arrayidx432 = getelementptr inbounds i64, i64* %252, i64 3
  store i64 %shr431, i64* %arrayidx432, align 8, !tbaa !25
  %253 = load i64, i64* %v, align 8, !tbaa !25
  %arrayidx433 = getelementptr inbounds [4 x i64], [4 x i64]* %errc, i32 0, i64 3
  store i64 %253, i64* %arrayidx433, align 8, !tbaa !25
  %254 = bitcast i64* %kv to i8*
  call void @llvm.lifetime.end(i64 8, i8* %254) #2
  br label %if.end.434

if.end.434:                                       ; preds = %if.end.418, %if.end.287
  br label %if.end.435

if.end.435:                                       ; preds = %if.end.434, %cond.end.175
  %255 = load i32, i32* %step, align 4, !tbaa !26
  %shl436 = shl i32 %255, 2
  %256 = load i64*, i64** %errv, align 8, !tbaa !1
  %idx.ext437 = sext i32 %shl436 to i64
  %add.ptr438 = getelementptr inbounds i64, i64* %256, i64 %idx.ext437
  store i64* %add.ptr438, i64** %errv, align 8, !tbaa !1
  %257 = load i32, i32* %pixel, align 4, !tbaa !26
  %conv439 = trunc i32 %257 to i8
  %258 = load i8*, i8** %out.addr, align 8, !tbaa !1
  store i8 %conv439, i8* %258, align 1, !tbaa !62
  %259 = load i32, i32* %step, align 4, !tbaa !26
  %260 = load i8*, i8** %out.addr, align 8, !tbaa !1
  %idx.ext440 = sext i32 %259 to i64
  %add.ptr441 = getelementptr inbounds i8, i8* %260, i64 %idx.ext440
  store i8* %add.ptr441, i8** %out.addr, align 8, !tbaa !1
  %261 = bitcast i32* %pixel to i8*
  call void @llvm.lifetime.end(i64 4, i8* %261) #2
  %262 = bitcast i64* %n to i8*
  call void @llvm.lifetime.end(i64 8, i8* %262) #2
  %263 = bitcast i64* %v to i8*
  call void @llvm.lifetime.end(i64 8, i8* %263) #2
  %264 = bitcast i64* %k to i8*
  call void @llvm.lifetime.end(i64 8, i8* %264) #2
  %265 = bitcast i32* %mode to i8*
  call void @llvm.lifetime.end(i64 4, i8* %265) #2
  %266 = bitcast i32* %ci to i8*
  call void @llvm.lifetime.end(i64 4, i8* %266) #2
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %267 = bitcast i32** %ip to i8*
  call void @llvm.lifetime.end(i64 8, i8* %267) #2
  %268 = bitcast i32* %step to i8*
  call void @llvm.lifetime.end(i64 4, i8* %268) #2
  %269 = bitcast i64** %errv to i8*
  call void @llvm.lifetime.end(i64 8, i8* %269) #2
  %270 = bitcast [4 x i64]* %errc to i8*
  call void @llvm.lifetime.end(i64 32, i8* %270) #2
  br label %if.end.442

if.end.442:                                       ; preds = %while.end, %cleanup.cont
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end.442, %cleanup
  %271 = load i32, i32* %retval
  ret i32 %271

unreachable:                                      ; preds = %cleanup
  unreachable
}

declare i32 @stc_gsmono(%struct.stcolor_device_s*, i32, i8*, i8*, i8*) #0

declare i32 @stc_gsrgb(%struct.stcolor_device_s*, i32, i8*, i8*, i8*) #0

declare i32 @stc_fs(%struct.stcolor_device_s*, i32, i8*, i8*, i8*) #0

declare i32 @stc_fscmyk(%struct.stcolor_device_s*, i32, i8*, i8*, i8*) #0

declare i32 @stc_fs2(%struct.stcolor_device_s*, i32, i8*, i8*, i8*) #0

; Function Attrs: nounwind
declare i32 @rand() #4

declare i32 @gx_device_raster(%struct.gx_device_s*, i32) #0

; Function Attrs: nounwind
declare i8* @memset(i8*, i32, i64) #4

; Function Attrs: nounwind uwtable
define internal i8* @stc_any_depth(%struct.stcolor_device_s* %sd, i8* %ext_data, i32 %prt_pixels, i8* %alg_line) #1 {
entry:
  %sd.addr = alloca %struct.stcolor_device_s*, align 8
  %ext_data.addr = alloca i8*, align 8
  %prt_pixels.addr = alloca i32, align 4
  %alg_line.addr = alloca i8*, align 8
  %p = alloca i32, align 4
  %c = alloca i32, align 4
  %niext = alloca i32, align 4
  %nbits = alloca i32, align 4
  %ciext = alloca i64, align 8
  %ci = alloca i64, align 8
  %cimsk = alloca i64, align 8
  %cvmsk = alloca i64, align 8
  %ap = alloca i8*, align 8
  store %struct.stcolor_device_s* %sd, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  store i8* %ext_data, i8** %ext_data.addr, align 8, !tbaa !1
  store i32 %prt_pixels, i32* %prt_pixels.addr, align 4, !tbaa !26
  store i8* %alg_line, i8** %alg_line.addr, align 8, !tbaa !1
  %0 = bitcast i32* %p to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = bitcast i32* %c to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #2
  %2 = bitcast i32* %niext to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #2
  %3 = bitcast i32* %nbits to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #2
  %4 = bitcast i64* %ciext to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4) #2
  %5 = bitcast i64* %ci to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5) #2
  %6 = bitcast i64* %cimsk to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6) #2
  %7 = bitcast i64* %cvmsk to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7) #2
  %8 = bitcast i8** %ap to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8) #2
  %9 = load i8*, i8** %alg_line.addr, align 8, !tbaa !1
  store i8* %9, i8** %ap, align 8, !tbaa !1
  %10 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %10, i32 0, i32 68
  %bits = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc, i32 0, i32 1
  %11 = load i32, i32* %bits, align 4, !tbaa !44
  store i32 %11, i32* %nbits, align 4, !tbaa !26
  %12 = load i32, i32* %nbits, align 4, !tbaa !26
  %sh_prom = zext i32 %12 to i64
  %shl = shl i64 1, %sh_prom
  %sub = sub i64 %shl, 1
  store i64 %sub, i64* %cvmsk, align 8, !tbaa !25
  %13 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %color_info = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %13, i32 0, i32 11
  %depth = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info, i32 0, i32 3
  %14 = load i16, i16* %depth, align 2, !tbaa !54
  %conv = zext i16 %14 to i32
  %15 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %color_info1 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %15, i32 0, i32 11
  %num_components = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info1, i32 0, i32 1
  %16 = load i32, i32* %num_components, align 4, !tbaa !40
  %shl2 = shl i32 %16, 3
  %cmp = icmp eq i32 %conv, %shl2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 8, i32* %nbits, align 4, !tbaa !26
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %17 = load i64, i64* %cvmsk, align 8, !tbaa !25
  store i64 %17, i64* %cimsk, align 8, !tbaa !25
  store i32 1, i32* %c, align 4, !tbaa !26
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %18 = load i32, i32* %c, align 4, !tbaa !26
  %19 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %color_info4 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %19, i32 0, i32 11
  %num_components5 = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info4, i32 0, i32 1
  %20 = load i32, i32* %num_components5, align 4, !tbaa !40
  %cmp6 = icmp slt i32 %18, %20
  br i1 %cmp6, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %21 = load i64, i64* %cimsk, align 8, !tbaa !25
  %22 = load i32, i32* %nbits, align 4, !tbaa !26
  %sh_prom8 = zext i32 %22 to i64
  %shl9 = shl i64 %21, %sh_prom8
  %23 = load i64, i64* %cvmsk, align 8, !tbaa !25
  %or = or i64 %shl9, %23
  store i64 %or, i64* %cimsk, align 8, !tbaa !25
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %24 = load i32, i32* %c, align 4, !tbaa !26
  %inc = add nsw i32 %24, 1
  store i32 %inc, i32* %c, align 4, !tbaa !26
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i64 0, i64* %ciext, align 8, !tbaa !25
  store i32 0, i32* %niext, align 4, !tbaa !26
  store i32 0, i32* %p, align 4, !tbaa !26
  br label %for.cond.10

for.cond.10:                                      ; preds = %for.inc.89, %for.end
  %25 = load i32, i32* %p, align 4, !tbaa !26
  %26 = load i32, i32* %prt_pixels.addr, align 4, !tbaa !26
  %cmp11 = icmp slt i32 %25, %26
  br i1 %cmp11, label %for.body.13, label %for.end.91

for.body.13:                                      ; preds = %for.cond.10
  %27 = load i64, i64* %ciext, align 8, !tbaa !25
  store i64 %27, i64* %ci, align 8, !tbaa !25
  %28 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %color_info14 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %28, i32 0, i32 11
  %depth15 = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info14, i32 0, i32 3
  %29 = load i16, i16* %depth15, align 2, !tbaa !54
  %conv16 = zext i16 %29 to i32
  %30 = load i32, i32* %niext, align 4, !tbaa !26
  %sub17 = sub nsw i32 %conv16, %30
  store i32 %sub17, i32* %c, align 4, !tbaa !26
  br label %for.cond.18

for.cond.18:                                      ; preds = %for.inc.25, %for.body.13
  %31 = load i32, i32* %c, align 4, !tbaa !26
  %cmp19 = icmp sge i32 %31, 8
  br i1 %cmp19, label %for.body.21, label %for.end.27

for.body.21:                                      ; preds = %for.cond.18
  %32 = load i64, i64* %ci, align 8, !tbaa !25
  %shl22 = shl i64 %32, 8
  %33 = load i8*, i8** %ext_data.addr, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds i8, i8* %33, i32 1
  store i8* %incdec.ptr, i8** %ext_data.addr, align 8, !tbaa !1
  %34 = load i8, i8* %33, align 1, !tbaa !62
  %conv23 = zext i8 %34 to i64
  %or24 = or i64 %shl22, %conv23
  store i64 %or24, i64* %ci, align 8, !tbaa !25
  br label %for.inc.25

for.inc.25:                                       ; preds = %for.body.21
  %35 = load i32, i32* %c, align 4, !tbaa !26
  %sub26 = sub nsw i32 %35, 8
  store i32 %sub26, i32* %c, align 4, !tbaa !26
  br label %for.cond.18

for.end.27:                                       ; preds = %for.cond.18
  %36 = load i32, i32* %c, align 4, !tbaa !26
  %cmp28 = icmp sgt i32 %36, 0
  br i1 %cmp28, label %if.then.30, label %if.else

if.then.30:                                       ; preds = %for.end.27
  %37 = load i32, i32* %c, align 4, !tbaa !26
  %sub31 = sub nsw i32 8, %37
  store i32 %sub31, i32* %niext, align 4, !tbaa !26
  %38 = load i8*, i8** %ext_data.addr, align 8, !tbaa !1
  %incdec.ptr32 = getelementptr inbounds i8, i8* %38, i32 1
  store i8* %incdec.ptr32, i8** %ext_data.addr, align 8, !tbaa !1
  %39 = load i8, i8* %38, align 1, !tbaa !62
  %conv33 = zext i8 %39 to i64
  store i64 %conv33, i64* %ciext, align 8, !tbaa !25
  %40 = load i64, i64* %ci, align 8, !tbaa !25
  %41 = load i32, i32* %c, align 4, !tbaa !26
  %sh_prom34 = zext i32 %41 to i64
  %shl35 = shl i64 %40, %sh_prom34
  %42 = load i64, i64* %ciext, align 8, !tbaa !25
  %43 = load i32, i32* %niext, align 4, !tbaa !26
  %sh_prom36 = zext i32 %43 to i64
  %shr = lshr i64 %42, %sh_prom36
  %or37 = or i64 %shl35, %shr
  store i64 %or37, i64* %ci, align 8, !tbaa !25
  %44 = load i32, i32* %niext, align 4, !tbaa !26
  %sh_prom38 = zext i32 %44 to i64
  %shl39 = shl i64 1, %sh_prom38
  %sub40 = sub nsw i64 %shl39, 1
  %45 = load i64, i64* %ciext, align 8, !tbaa !25
  %and = and i64 %45, %sub40
  store i64 %and, i64* %ciext, align 8, !tbaa !25
  br label %if.end.53

if.else:                                          ; preds = %for.end.27
  %46 = load i32, i32* %c, align 4, !tbaa !26
  %cmp41 = icmp slt i32 %46, 0
  br i1 %cmp41, label %if.then.43, label %if.else.51

if.then.43:                                       ; preds = %if.else
  %47 = load i32, i32* %c, align 4, !tbaa !26
  %sub44 = sub nsw i32 0, %47
  store i32 %sub44, i32* %niext, align 4, !tbaa !26
  %48 = load i32, i32* %niext, align 4, !tbaa !26
  %sh_prom45 = zext i32 %48 to i64
  %shl46 = shl i64 1, %sh_prom45
  %sub47 = sub nsw i64 %shl46, 1
  %49 = load i64, i64* %ciext, align 8, !tbaa !25
  %and48 = and i64 %49, %sub47
  store i64 %and48, i64* %ciext, align 8, !tbaa !25
  %50 = load i64, i64* %ci, align 8, !tbaa !25
  %51 = load i32, i32* %niext, align 4, !tbaa !26
  %sh_prom49 = zext i32 %51 to i64
  %shr50 = lshr i64 %50, %sh_prom49
  store i64 %shr50, i64* %ci, align 8, !tbaa !25
  br label %if.end.52

if.else.51:                                       ; preds = %if.else
  store i32 0, i32* %niext, align 4, !tbaa !26
  store i64 0, i64* %ciext, align 8, !tbaa !25
  br label %if.end.52

if.end.52:                                        ; preds = %if.else.51, %if.then.43
  br label %if.end.53

if.end.53:                                        ; preds = %if.end.52, %if.then.30
  %52 = load i64, i64* %cimsk, align 8, !tbaa !25
  %53 = load i64, i64* %ci, align 8, !tbaa !25
  %and54 = and i64 %53, %52
  store i64 %and54, i64* %ci, align 8, !tbaa !25
  %54 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %color_info55 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %54, i32 0, i32 11
  %num_components56 = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info55, i32 0, i32 1
  %55 = load i32, i32* %num_components56, align 4, !tbaa !40
  store i32 %55, i32* %c, align 4, !tbaa !26
  br label %for.cond.57

for.cond.57:                                      ; preds = %sw.epilog, %if.end.53
  %56 = load i32, i32* %c, align 4, !tbaa !26
  %dec = add nsw i32 %56, -1
  store i32 %dec, i32* %c, align 4, !tbaa !26
  %tobool = icmp ne i32 %56, 0
  br i1 %tobool, label %for.body.58, label %for.end.85

for.body.58:                                      ; preds = %for.cond.57
  %57 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc59 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %57, i32 0, i32 68
  %dither = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc59, i32 0, i32 2
  %58 = load %struct.stc_dither_s*, %struct.stc_dither_s** %dither, align 8, !tbaa !41
  %flags = getelementptr inbounds %struct.stc_dither_s, %struct.stc_dither_s* %58, i32 0, i32 2
  %59 = load i32, i32* %flags, align 4, !tbaa !42
  %and60 = and i32 %59, 24
  switch i32 %and60, label %sw.default [
    i32 8, label %sw.bb
    i32 16, label %sw.bb.66
  ]

sw.bb:                                            ; preds = %for.body.58
  %60 = load i64, i64* %ci, align 8, !tbaa !25
  %61 = load i64, i64* %cvmsk, align 8, !tbaa !25
  %and61 = and i64 %60, %61
  %62 = load i32, i32* %c, align 4, !tbaa !26
  %idxprom = sext i32 %62 to i64
  %63 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc62 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %63, i32 0, i32 68
  %vals = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc62, i32 0, i32 9
  %arrayidx = getelementptr inbounds [4 x i8*], [4 x i8*]* %vals, i32 0, i64 %idxprom
  %64 = load i8*, i8** %arrayidx, align 8, !tbaa !1
  %arrayidx63 = getelementptr inbounds i8, i8* %64, i64 %and61
  %65 = load i8, i8* %arrayidx63, align 1, !tbaa !62
  %66 = load i32, i32* %c, align 4, !tbaa !26
  %idxprom64 = sext i32 %66 to i64
  %67 = load i8*, i8** %ap, align 8, !tbaa !1
  %arrayidx65 = getelementptr inbounds i8, i8* %67, i64 %idxprom64
  store i8 %65, i8* %arrayidx65, align 1, !tbaa !62
  br label %sw.epilog

sw.bb.66:                                         ; preds = %for.body.58
  %68 = load i64, i64* %ci, align 8, !tbaa !25
  %69 = load i64, i64* %cvmsk, align 8, !tbaa !25
  %and67 = and i64 %68, %69
  %70 = load i32, i32* %c, align 4, !tbaa !26
  %idxprom68 = sext i32 %70 to i64
  %71 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc69 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %71, i32 0, i32 68
  %vals70 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc69, i32 0, i32 9
  %arrayidx71 = getelementptr inbounds [4 x i8*], [4 x i8*]* %vals70, i32 0, i64 %idxprom68
  %72 = load i8*, i8** %arrayidx71, align 8, !tbaa !1
  %73 = bitcast i8* %72 to i64*
  %arrayidx72 = getelementptr inbounds i64, i64* %73, i64 %and67
  %74 = load i64, i64* %arrayidx72, align 8, !tbaa !25
  %75 = load i32, i32* %c, align 4, !tbaa !26
  %idxprom73 = sext i32 %75 to i64
  %76 = load i8*, i8** %ap, align 8, !tbaa !1
  %77 = bitcast i8* %76 to i64*
  %arrayidx74 = getelementptr inbounds i64, i64* %77, i64 %idxprom73
  store i64 %74, i64* %arrayidx74, align 8, !tbaa !25
  br label %sw.epilog

sw.default:                                       ; preds = %for.body.58
  %78 = load i64, i64* %ci, align 8, !tbaa !25
  %79 = load i64, i64* %cvmsk, align 8, !tbaa !25
  %and75 = and i64 %78, %79
  %80 = load i32, i32* %c, align 4, !tbaa !26
  %idxprom76 = sext i32 %80 to i64
  %81 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc77 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %81, i32 0, i32 68
  %vals78 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc77, i32 0, i32 9
  %arrayidx79 = getelementptr inbounds [4 x i8*], [4 x i8*]* %vals78, i32 0, i64 %idxprom76
  %82 = load i8*, i8** %arrayidx79, align 8, !tbaa !1
  %83 = bitcast i8* %82 to float*
  %arrayidx80 = getelementptr inbounds float, float* %83, i64 %and75
  %84 = load float, float* %arrayidx80, align 4, !tbaa !37
  %85 = load i32, i32* %c, align 4, !tbaa !26
  %idxprom81 = sext i32 %85 to i64
  %86 = load i8*, i8** %ap, align 8, !tbaa !1
  %87 = bitcast i8* %86 to float*
  %arrayidx82 = getelementptr inbounds float, float* %87, i64 %idxprom81
  store float %84, float* %arrayidx82, align 4, !tbaa !37
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb.66, %sw.bb
  %88 = load i32, i32* %nbits, align 4, !tbaa !26
  %89 = load i64, i64* %ci, align 8, !tbaa !25
  %sh_prom83 = zext i32 %88 to i64
  %shr84 = lshr i64 %89, %sh_prom83
  store i64 %shr84, i64* %ci, align 8, !tbaa !25
  br label %for.cond.57

for.end.85:                                       ; preds = %for.cond.57
  %90 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %color_info86 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %90, i32 0, i32 11
  %num_components87 = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info86, i32 0, i32 1
  %91 = load i32, i32* %num_components87, align 4, !tbaa !40
  %92 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc88 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %92, i32 0, i32 68
  %alg_item = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc88, i32 0, i32 19
  %93 = load i32, i32* %alg_item, align 4, !tbaa !45
  %mul = mul nsw i32 %91, %93
  %94 = load i8*, i8** %ap, align 8, !tbaa !1
  %idx.ext = sext i32 %mul to i64
  %add.ptr = getelementptr inbounds i8, i8* %94, i64 %idx.ext
  store i8* %add.ptr, i8** %ap, align 8, !tbaa !1
  br label %for.inc.89

for.inc.89:                                       ; preds = %for.end.85
  %95 = load i32, i32* %p, align 4, !tbaa !26
  %inc90 = add nsw i32 %95, 1
  store i32 %inc90, i32* %p, align 4, !tbaa !26
  br label %for.cond.10

for.end.91:                                       ; preds = %for.cond.10
  %96 = load i8*, i8** %alg_line.addr, align 8, !tbaa !1
  %97 = bitcast i8** %ap to i8*
  call void @llvm.lifetime.end(i64 8, i8* %97) #2
  %98 = bitcast i64* %cvmsk to i8*
  call void @llvm.lifetime.end(i64 8, i8* %98) #2
  %99 = bitcast i64* %cimsk to i8*
  call void @llvm.lifetime.end(i64 8, i8* %99) #2
  %100 = bitcast i64* %ci to i8*
  call void @llvm.lifetime.end(i64 8, i8* %100) #2
  %101 = bitcast i64* %ciext to i8*
  call void @llvm.lifetime.end(i64 8, i8* %101) #2
  %102 = bitcast i32* %nbits to i8*
  call void @llvm.lifetime.end(i64 4, i8* %102) #2
  %103 = bitcast i32* %niext to i8*
  call void @llvm.lifetime.end(i64 4, i8* %103) #2
  %104 = bitcast i32* %c to i8*
  call void @llvm.lifetime.end(i64 4, i8* %104) #2
  %105 = bitcast i32* %p to i8*
  call void @llvm.lifetime.end(i64 4, i8* %105) #2
  ret i8* %96
}

; Function Attrs: nounwind uwtable
define internal i8* @stc_any_direct(%struct.stcolor_device_s* %sd, i8* %ext_data, i32 %prt_pixels, i8* %alg_line) #1 {
entry:
  %sd.addr = alloca %struct.stcolor_device_s*, align 8
  %ext_data.addr = alloca i8*, align 8
  %prt_pixels.addr = alloca i32, align 4
  %alg_line.addr = alloca i8*, align 8
  store %struct.stcolor_device_s* %sd, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  store i8* %ext_data, i8** %ext_data.addr, align 8, !tbaa !1
  store i32 %prt_pixels, i32* %prt_pixels.addr, align 4, !tbaa !26
  store i8* %alg_line, i8** %alg_line.addr, align 8, !tbaa !1
  %0 = load i8*, i8** %ext_data.addr, align 8, !tbaa !1
  ret i8* %0
}

; Function Attrs: nounwind uwtable
define internal i8* @stc_rgb24_long(%struct.stcolor_device_s* %sd, i8* %ext_data, i32 %prt_pixels, i8* %alg_line) #1 {
entry:
  %sd.addr = alloca %struct.stcolor_device_s*, align 8
  %ext_data.addr = alloca i8*, align 8
  %prt_pixels.addr = alloca i32, align 4
  %alg_line.addr = alloca i8*, align 8
  %p = alloca i32, align 4
  %out = alloca i64*, align 8
  %rvals = alloca i64*, align 8
  %gvals = alloca i64*, align 8
  %bvals = alloca i64*, align 8
  store %struct.stcolor_device_s* %sd, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  store i8* %ext_data, i8** %ext_data.addr, align 8, !tbaa !1
  store i32 %prt_pixels, i32* %prt_pixels.addr, align 4, !tbaa !26
  store i8* %alg_line, i8** %alg_line.addr, align 8, !tbaa !1
  %0 = bitcast i32* %p to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = bitcast i64** %out to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #2
  %2 = load i8*, i8** %alg_line.addr, align 8, !tbaa !1
  %3 = bitcast i8* %2 to i64*
  store i64* %3, i64** %out, align 8, !tbaa !1
  %4 = bitcast i64** %rvals to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4) #2
  %5 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %5, i32 0, i32 68
  %vals = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc, i32 0, i32 9
  %arrayidx = getelementptr inbounds [4 x i8*], [4 x i8*]* %vals, i32 0, i64 0
  %6 = load i8*, i8** %arrayidx, align 8, !tbaa !1
  %7 = bitcast i8* %6 to i64*
  store i64* %7, i64** %rvals, align 8, !tbaa !1
  %8 = bitcast i64** %gvals to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8) #2
  %9 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc1 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %9, i32 0, i32 68
  %vals2 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc1, i32 0, i32 9
  %arrayidx3 = getelementptr inbounds [4 x i8*], [4 x i8*]* %vals2, i32 0, i64 1
  %10 = load i8*, i8** %arrayidx3, align 8, !tbaa !1
  %11 = bitcast i8* %10 to i64*
  store i64* %11, i64** %gvals, align 8, !tbaa !1
  %12 = bitcast i64** %bvals to i8*
  call void @llvm.lifetime.start(i64 8, i8* %12) #2
  %13 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc4 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %13, i32 0, i32 68
  %vals5 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc4, i32 0, i32 9
  %arrayidx6 = getelementptr inbounds [4 x i8*], [4 x i8*]* %vals5, i32 0, i64 2
  %14 = load i8*, i8** %arrayidx6, align 8, !tbaa !1
  %15 = bitcast i8* %14 to i64*
  store i64* %15, i64** %bvals, align 8, !tbaa !1
  %16 = load i32, i32* %prt_pixels.addr, align 4, !tbaa !26
  store i32 %16, i32* %p, align 4, !tbaa !26
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %17 = load i32, i32* %p, align 4, !tbaa !26
  %tobool = icmp ne i32 %17, 0
  br i1 %tobool, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %18 = load i8*, i8** %ext_data.addr, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds i8, i8* %18, i32 1
  store i8* %incdec.ptr, i8** %ext_data.addr, align 8, !tbaa !1
  %19 = load i8, i8* %18, align 1, !tbaa !62
  %idxprom = zext i8 %19 to i64
  %20 = load i64*, i64** %rvals, align 8, !tbaa !1
  %arrayidx7 = getelementptr inbounds i64, i64* %20, i64 %idxprom
  %21 = load i64, i64* %arrayidx7, align 8, !tbaa !25
  %22 = load i64*, i64** %out, align 8, !tbaa !1
  %incdec.ptr8 = getelementptr inbounds i64, i64* %22, i32 1
  store i64* %incdec.ptr8, i64** %out, align 8, !tbaa !1
  store i64 %21, i64* %22, align 8, !tbaa !25
  %23 = load i8*, i8** %ext_data.addr, align 8, !tbaa !1
  %incdec.ptr9 = getelementptr inbounds i8, i8* %23, i32 1
  store i8* %incdec.ptr9, i8** %ext_data.addr, align 8, !tbaa !1
  %24 = load i8, i8* %23, align 1, !tbaa !62
  %idxprom10 = zext i8 %24 to i64
  %25 = load i64*, i64** %gvals, align 8, !tbaa !1
  %arrayidx11 = getelementptr inbounds i64, i64* %25, i64 %idxprom10
  %26 = load i64, i64* %arrayidx11, align 8, !tbaa !25
  %27 = load i64*, i64** %out, align 8, !tbaa !1
  %incdec.ptr12 = getelementptr inbounds i64, i64* %27, i32 1
  store i64* %incdec.ptr12, i64** %out, align 8, !tbaa !1
  store i64 %26, i64* %27, align 8, !tbaa !25
  %28 = load i8*, i8** %ext_data.addr, align 8, !tbaa !1
  %incdec.ptr13 = getelementptr inbounds i8, i8* %28, i32 1
  store i8* %incdec.ptr13, i8** %ext_data.addr, align 8, !tbaa !1
  %29 = load i8, i8* %28, align 1, !tbaa !62
  %idxprom14 = zext i8 %29 to i64
  %30 = load i64*, i64** %bvals, align 8, !tbaa !1
  %arrayidx15 = getelementptr inbounds i64, i64* %30, i64 %idxprom14
  %31 = load i64, i64* %arrayidx15, align 8, !tbaa !25
  %32 = load i64*, i64** %out, align 8, !tbaa !1
  %incdec.ptr16 = getelementptr inbounds i64, i64* %32, i32 1
  store i64* %incdec.ptr16, i64** %out, align 8, !tbaa !1
  store i64 %31, i64* %32, align 8, !tbaa !25
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %33 = load i32, i32* %p, align 4, !tbaa !26
  %dec = add nsw i32 %33, -1
  store i32 %dec, i32* %p, align 4, !tbaa !26
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %34 = load i8*, i8** %alg_line.addr, align 8, !tbaa !1
  %35 = bitcast i64** %bvals to i8*
  call void @llvm.lifetime.end(i64 8, i8* %35) #2
  %36 = bitcast i64** %gvals to i8*
  call void @llvm.lifetime.end(i64 8, i8* %36) #2
  %37 = bitcast i64** %rvals to i8*
  call void @llvm.lifetime.end(i64 8, i8* %37) #2
  %38 = bitcast i64** %out to i8*
  call void @llvm.lifetime.end(i64 8, i8* %38) #2
  %39 = bitcast i32* %p to i8*
  call void @llvm.lifetime.end(i64 4, i8* %39) #2
  ret i8* %34
}

; Function Attrs: nounwind uwtable
define internal i8* @stc_cmyk10_dbyte(%struct.stcolor_device_s* %sd, i8* %ext_data, i32 %prt_pixels, i8* %alg_line) #1 {
entry:
  %sd.addr = alloca %struct.stcolor_device_s*, align 8
  %ext_data.addr = alloca i8*, align 8
  %prt_pixels.addr = alloca i32, align 4
  %alg_line.addr = alloca i8*, align 8
  %p = alloca i32, align 4
  %ci = alloca i32, align 4
  %k = alloca i32, align 4
  %n = alloca i32, align 4
  %mode = alloca i32, align 4
  %in = alloca i32*, align 8
  %out = alloca i8*, align 8
  store %struct.stcolor_device_s* %sd, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  store i8* %ext_data, i8** %ext_data.addr, align 8, !tbaa !1
  store i32 %prt_pixels, i32* %prt_pixels.addr, align 4, !tbaa !26
  store i8* %alg_line, i8** %alg_line.addr, align 8, !tbaa !1
  %0 = bitcast i32* %p to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = load i32, i32* %prt_pixels.addr, align 4, !tbaa !26
  store i32 %1, i32* %p, align 4, !tbaa !26
  %2 = bitcast i32* %ci to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #2
  %3 = bitcast i32* %k to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #2
  %4 = bitcast i32* %n to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #2
  %5 = bitcast i32* %mode to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #2
  %6 = bitcast i32** %in to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6) #2
  %7 = load i8*, i8** %ext_data.addr, align 8, !tbaa !1
  %8 = bitcast i8* %7 to i32*
  store i32* %8, i32** %in, align 8, !tbaa !1
  %9 = bitcast i8** %out to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9) #2
  %10 = load i8*, i8** %alg_line.addr, align 8, !tbaa !1
  store i8* %10, i8** %out, align 8, !tbaa !1
  br label %while.cond

while.cond:                                       ; preds = %if.end.39, %entry
  %11 = load i32, i32* %p, align 4, !tbaa !26
  %dec = add nsw i32 %11, -1
  store i32 %dec, i32* %p, align 4, !tbaa !26
  %tobool = icmp ne i32 %11, 0
  br i1 %tobool, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %12 = load i32*, i32** %in, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds i32, i32* %12, i32 1
  store i32* %incdec.ptr, i32** %in, align 8, !tbaa !1
  %13 = load i32, i32* %12, align 4, !tbaa !26
  store i32 %13, i32* %ci, align 4, !tbaa !26
  %14 = load i32, i32* %ci, align 4, !tbaa !26
  %and = and i32 %14, 3
  store i32 %and, i32* %mode, align 4, !tbaa !26
  %15 = load i32, i32* %ci, align 4, !tbaa !26
  %shr = lshr i32 %15, 2
  %and1 = and i32 %shr, 1023
  store i32 %and1, i32* %k, align 4, !tbaa !26
  %16 = load i32, i32* %mode, align 4, !tbaa !26
  %cmp = icmp eq i32 %16, 3
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %while.body
  %17 = load i8*, i8** %out, align 8, !tbaa !1
  %incdec.ptr2 = getelementptr inbounds i8, i8* %17, i32 1
  store i8* %incdec.ptr2, i8** %out, align 8, !tbaa !1
  store i8 0, i8* %17, align 1, !tbaa !62
  %18 = load i8*, i8** %out, align 8, !tbaa !1
  %incdec.ptr3 = getelementptr inbounds i8, i8* %18, i32 1
  store i8* %incdec.ptr3, i8** %out, align 8, !tbaa !1
  store i8 0, i8* %18, align 1, !tbaa !62
  %19 = load i8*, i8** %out, align 8, !tbaa !1
  %incdec.ptr4 = getelementptr inbounds i8, i8* %19, i32 1
  store i8* %incdec.ptr4, i8** %out, align 8, !tbaa !1
  store i8 0, i8* %19, align 1, !tbaa !62
  %20 = load i32, i32* %k, align 4, !tbaa !26
  %conv = trunc i32 %20 to i8
  %21 = load i8*, i8** %out, align 8, !tbaa !1
  %incdec.ptr5 = getelementptr inbounds i8, i8* %21, i32 1
  store i8* %incdec.ptr5, i8** %out, align 8, !tbaa !1
  store i8 %conv, i8* %21, align 1, !tbaa !62
  br label %if.end.39

if.else:                                          ; preds = %while.body
  %22 = load i32, i32* %k, align 4, !tbaa !26
  %conv6 = trunc i32 %22 to i8
  %23 = load i8*, i8** %out, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds i8, i8* %23, i64 3
  store i8 %conv6, i8* %arrayidx, align 1, !tbaa !62
  %24 = load i32, i32* %ci, align 4, !tbaa !26
  %shr7 = lshr i32 %24, 12
  %and8 = and i32 %shr7, 1023
  store i32 %and8, i32* %n, align 4, !tbaa !26
  %25 = load i32, i32* %mode, align 4, !tbaa !26
  %cmp9 = icmp eq i32 %25, 2
  br i1 %cmp9, label %if.then.11, label %if.else.14

if.then.11:                                       ; preds = %if.else
  %26 = load i32, i32* %k, align 4, !tbaa !26
  %conv12 = trunc i32 %26 to i8
  %27 = load i8*, i8** %out, align 8, !tbaa !1
  %arrayidx13 = getelementptr inbounds i8, i8* %27, i64 2
  store i8 %conv12, i8* %arrayidx13, align 1, !tbaa !62
  br label %if.end

if.else.14:                                       ; preds = %if.else
  %28 = load i32, i32* %n, align 4, !tbaa !26
  %conv15 = trunc i32 %28 to i8
  %29 = load i8*, i8** %out, align 8, !tbaa !1
  %arrayidx16 = getelementptr inbounds i8, i8* %29, i64 2
  store i8 %conv15, i8* %arrayidx16, align 1, !tbaa !62
  %30 = load i32, i32* %ci, align 4, !tbaa !26
  %shr17 = lshr i32 %30, 22
  %and18 = and i32 %shr17, 1023
  store i32 %and18, i32* %n, align 4, !tbaa !26
  br label %if.end

if.end:                                           ; preds = %if.else.14, %if.then.11
  %31 = load i32, i32* %mode, align 4, !tbaa !26
  %cmp19 = icmp eq i32 %31, 1
  br i1 %cmp19, label %if.then.21, label %if.else.24

if.then.21:                                       ; preds = %if.end
  %32 = load i32, i32* %k, align 4, !tbaa !26
  %conv22 = trunc i32 %32 to i8
  %33 = load i8*, i8** %out, align 8, !tbaa !1
  %arrayidx23 = getelementptr inbounds i8, i8* %33, i64 1
  store i8 %conv22, i8* %arrayidx23, align 1, !tbaa !62
  br label %if.end.29

if.else.24:                                       ; preds = %if.end
  %34 = load i32, i32* %n, align 4, !tbaa !26
  %conv25 = trunc i32 %34 to i8
  %35 = load i8*, i8** %out, align 8, !tbaa !1
  %arrayidx26 = getelementptr inbounds i8, i8* %35, i64 1
  store i8 %conv25, i8* %arrayidx26, align 1, !tbaa !62
  %36 = load i32, i32* %ci, align 4, !tbaa !26
  %shr27 = lshr i32 %36, 22
  %and28 = and i32 %shr27, 1023
  store i32 %and28, i32* %n, align 4, !tbaa !26
  br label %if.end.29

if.end.29:                                        ; preds = %if.else.24, %if.then.21
  %37 = load i32, i32* %mode, align 4, !tbaa !26
  %cmp30 = icmp eq i32 %37, 0
  br i1 %cmp30, label %if.then.32, label %if.else.35

if.then.32:                                       ; preds = %if.end.29
  %38 = load i32, i32* %k, align 4, !tbaa !26
  %conv33 = trunc i32 %38 to i8
  %39 = load i8*, i8** %out, align 8, !tbaa !1
  %arrayidx34 = getelementptr inbounds i8, i8* %39, i64 0
  store i8 %conv33, i8* %arrayidx34, align 1, !tbaa !62
  br label %if.end.38

if.else.35:                                       ; preds = %if.end.29
  %40 = load i32, i32* %n, align 4, !tbaa !26
  %conv36 = trunc i32 %40 to i8
  %41 = load i8*, i8** %out, align 8, !tbaa !1
  %arrayidx37 = getelementptr inbounds i8, i8* %41, i64 0
  store i8 %conv36, i8* %arrayidx37, align 1, !tbaa !62
  br label %if.end.38

if.end.38:                                        ; preds = %if.else.35, %if.then.32
  %42 = load i8*, i8** %out, align 8, !tbaa !1
  %add.ptr = getelementptr inbounds i8, i8* %42, i64 4
  store i8* %add.ptr, i8** %out, align 8, !tbaa !1
  br label %if.end.39

if.end.39:                                        ; preds = %if.end.38, %if.then
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %43 = load i8*, i8** %alg_line.addr, align 8, !tbaa !1
  %44 = bitcast i8** %out to i8*
  call void @llvm.lifetime.end(i64 8, i8* %44) #2
  %45 = bitcast i32** %in to i8*
  call void @llvm.lifetime.end(i64 8, i8* %45) #2
  %46 = bitcast i32* %mode to i8*
  call void @llvm.lifetime.end(i64 4, i8* %46) #2
  %47 = bitcast i32* %n to i8*
  call void @llvm.lifetime.end(i64 4, i8* %47) #2
  %48 = bitcast i32* %k to i8*
  call void @llvm.lifetime.end(i64 4, i8* %48) #2
  %49 = bitcast i32* %ci to i8*
  call void @llvm.lifetime.end(i64 4, i8* %49) #2
  %50 = bitcast i32* %p to i8*
  call void @llvm.lifetime.end(i64 4, i8* %50) #2
  ret i8* %43
}

; Function Attrs: nounwind uwtable
define internal i8* @stc_cmyk10_byte(%struct.stcolor_device_s* %sd, i8* %ext_data, i32 %prt_pixels, i8* %alg_line) #1 {
entry:
  %sd.addr = alloca %struct.stcolor_device_s*, align 8
  %ext_data.addr = alloca i8*, align 8
  %prt_pixels.addr = alloca i32, align 4
  %alg_line.addr = alloca i8*, align 8
  %p = alloca i32, align 4
  %ci = alloca i32, align 4
  %k = alloca i32, align 4
  %n = alloca i32, align 4
  %mode = alloca i32, align 4
  %in = alloca i32*, align 8
  %out = alloca i8*, align 8
  %cv = alloca i8*, align 8
  %mv = alloca i8*, align 8
  %yv = alloca i8*, align 8
  %kv = alloca i8*, align 8
  store %struct.stcolor_device_s* %sd, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  store i8* %ext_data, i8** %ext_data.addr, align 8, !tbaa !1
  store i32 %prt_pixels, i32* %prt_pixels.addr, align 4, !tbaa !26
  store i8* %alg_line, i8** %alg_line.addr, align 8, !tbaa !1
  %0 = bitcast i32* %p to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = load i32, i32* %prt_pixels.addr, align 4, !tbaa !26
  store i32 %1, i32* %p, align 4, !tbaa !26
  %2 = bitcast i32* %ci to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #2
  %3 = bitcast i32* %k to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #2
  %4 = bitcast i32* %n to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #2
  %5 = bitcast i32* %mode to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #2
  %6 = bitcast i32** %in to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6) #2
  %7 = load i8*, i8** %ext_data.addr, align 8, !tbaa !1
  %8 = bitcast i8* %7 to i32*
  store i32* %8, i32** %in, align 8, !tbaa !1
  %9 = bitcast i8** %out to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9) #2
  %10 = load i8*, i8** %alg_line.addr, align 8, !tbaa !1
  store i8* %10, i8** %out, align 8, !tbaa !1
  %11 = bitcast i8** %cv to i8*
  call void @llvm.lifetime.start(i64 8, i8* %11) #2
  %12 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %12, i32 0, i32 68
  %vals = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc, i32 0, i32 9
  %arrayidx = getelementptr inbounds [4 x i8*], [4 x i8*]* %vals, i32 0, i64 0
  %13 = load i8*, i8** %arrayidx, align 8, !tbaa !1
  store i8* %13, i8** %cv, align 8, !tbaa !1
  %14 = bitcast i8** %mv to i8*
  call void @llvm.lifetime.start(i64 8, i8* %14) #2
  %15 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc1 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %15, i32 0, i32 68
  %vals2 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc1, i32 0, i32 9
  %arrayidx3 = getelementptr inbounds [4 x i8*], [4 x i8*]* %vals2, i32 0, i64 1
  %16 = load i8*, i8** %arrayidx3, align 8, !tbaa !1
  store i8* %16, i8** %mv, align 8, !tbaa !1
  %17 = bitcast i8** %yv to i8*
  call void @llvm.lifetime.start(i64 8, i8* %17) #2
  %18 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc4 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %18, i32 0, i32 68
  %vals5 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc4, i32 0, i32 9
  %arrayidx6 = getelementptr inbounds [4 x i8*], [4 x i8*]* %vals5, i32 0, i64 2
  %19 = load i8*, i8** %arrayidx6, align 8, !tbaa !1
  store i8* %19, i8** %yv, align 8, !tbaa !1
  %20 = bitcast i8** %kv to i8*
  call void @llvm.lifetime.start(i64 8, i8* %20) #2
  %21 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc7 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %21, i32 0, i32 68
  %vals8 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc7, i32 0, i32 9
  %arrayidx9 = getelementptr inbounds [4 x i8*], [4 x i8*]* %vals8, i32 0, i64 3
  %22 = load i8*, i8** %arrayidx9, align 8, !tbaa !1
  store i8* %22, i8** %kv, align 8, !tbaa !1
  br label %while.cond

while.cond:                                       ; preds = %if.end.57, %entry
  %23 = load i32, i32* %p, align 4, !tbaa !26
  %dec = add nsw i32 %23, -1
  store i32 %dec, i32* %p, align 4, !tbaa !26
  %tobool = icmp ne i32 %23, 0
  br i1 %tobool, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %24 = load i32*, i32** %in, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds i32, i32* %24, i32 1
  store i32* %incdec.ptr, i32** %in, align 8, !tbaa !1
  %25 = load i32, i32* %24, align 4, !tbaa !26
  store i32 %25, i32* %ci, align 4, !tbaa !26
  %26 = load i32, i32* %ci, align 4, !tbaa !26
  %and = and i32 %26, 3
  store i32 %and, i32* %mode, align 4, !tbaa !26
  %27 = load i32, i32* %ci, align 4, !tbaa !26
  %shr = lshr i32 %27, 2
  %and10 = and i32 %shr, 1023
  store i32 %and10, i32* %k, align 4, !tbaa !26
  %28 = load i32, i32* %mode, align 4, !tbaa !26
  %cmp = icmp eq i32 %28, 3
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %while.body
  %29 = load i8*, i8** %cv, align 8, !tbaa !1
  %arrayidx11 = getelementptr inbounds i8, i8* %29, i64 0
  %30 = load i8, i8* %arrayidx11, align 1, !tbaa !62
  %31 = load i8*, i8** %out, align 8, !tbaa !1
  %incdec.ptr12 = getelementptr inbounds i8, i8* %31, i32 1
  store i8* %incdec.ptr12, i8** %out, align 8, !tbaa !1
  store i8 %30, i8* %31, align 1, !tbaa !62
  %32 = load i8*, i8** %mv, align 8, !tbaa !1
  %arrayidx13 = getelementptr inbounds i8, i8* %32, i64 0
  %33 = load i8, i8* %arrayidx13, align 1, !tbaa !62
  %34 = load i8*, i8** %out, align 8, !tbaa !1
  %incdec.ptr14 = getelementptr inbounds i8, i8* %34, i32 1
  store i8* %incdec.ptr14, i8** %out, align 8, !tbaa !1
  store i8 %33, i8* %34, align 1, !tbaa !62
  %35 = load i8*, i8** %yv, align 8, !tbaa !1
  %arrayidx15 = getelementptr inbounds i8, i8* %35, i64 0
  %36 = load i8, i8* %arrayidx15, align 1, !tbaa !62
  %37 = load i8*, i8** %out, align 8, !tbaa !1
  %incdec.ptr16 = getelementptr inbounds i8, i8* %37, i32 1
  store i8* %incdec.ptr16, i8** %out, align 8, !tbaa !1
  store i8 %36, i8* %37, align 1, !tbaa !62
  %38 = load i32, i32* %k, align 4, !tbaa !26
  %idxprom = zext i32 %38 to i64
  %39 = load i8*, i8** %kv, align 8, !tbaa !1
  %arrayidx17 = getelementptr inbounds i8, i8* %39, i64 %idxprom
  %40 = load i8, i8* %arrayidx17, align 1, !tbaa !62
  %41 = load i8*, i8** %out, align 8, !tbaa !1
  %incdec.ptr18 = getelementptr inbounds i8, i8* %41, i32 1
  store i8* %incdec.ptr18, i8** %out, align 8, !tbaa !1
  store i8 %40, i8* %41, align 1, !tbaa !62
  br label %if.end.57

if.else:                                          ; preds = %while.body
  %42 = load i32, i32* %k, align 4, !tbaa !26
  %idxprom19 = zext i32 %42 to i64
  %43 = load i8*, i8** %kv, align 8, !tbaa !1
  %arrayidx20 = getelementptr inbounds i8, i8* %43, i64 %idxprom19
  %44 = load i8, i8* %arrayidx20, align 1, !tbaa !62
  %45 = load i8*, i8** %out, align 8, !tbaa !1
  %arrayidx21 = getelementptr inbounds i8, i8* %45, i64 3
  store i8 %44, i8* %arrayidx21, align 1, !tbaa !62
  %46 = load i32, i32* %ci, align 4, !tbaa !26
  %shr22 = lshr i32 %46, 12
  %and23 = and i32 %shr22, 1023
  store i32 %and23, i32* %n, align 4, !tbaa !26
  %47 = load i32, i32* %mode, align 4, !tbaa !26
  %cmp24 = icmp eq i32 %47, 2
  br i1 %cmp24, label %if.then.25, label %if.else.29

if.then.25:                                       ; preds = %if.else
  %48 = load i32, i32* %k, align 4, !tbaa !26
  %idxprom26 = zext i32 %48 to i64
  %49 = load i8*, i8** %yv, align 8, !tbaa !1
  %arrayidx27 = getelementptr inbounds i8, i8* %49, i64 %idxprom26
  %50 = load i8, i8* %arrayidx27, align 1, !tbaa !62
  %51 = load i8*, i8** %out, align 8, !tbaa !1
  %arrayidx28 = getelementptr inbounds i8, i8* %51, i64 2
  store i8 %50, i8* %arrayidx28, align 1, !tbaa !62
  br label %if.end

if.else.29:                                       ; preds = %if.else
  %52 = load i32, i32* %n, align 4, !tbaa !26
  %idxprom30 = zext i32 %52 to i64
  %53 = load i8*, i8** %yv, align 8, !tbaa !1
  %arrayidx31 = getelementptr inbounds i8, i8* %53, i64 %idxprom30
  %54 = load i8, i8* %arrayidx31, align 1, !tbaa !62
  %55 = load i8*, i8** %out, align 8, !tbaa !1
  %arrayidx32 = getelementptr inbounds i8, i8* %55, i64 2
  store i8 %54, i8* %arrayidx32, align 1, !tbaa !62
  %56 = load i32, i32* %ci, align 4, !tbaa !26
  %shr33 = lshr i32 %56, 22
  %and34 = and i32 %shr33, 1023
  store i32 %and34, i32* %n, align 4, !tbaa !26
  br label %if.end

if.end:                                           ; preds = %if.else.29, %if.then.25
  %57 = load i32, i32* %mode, align 4, !tbaa !26
  %cmp35 = icmp eq i32 %57, 1
  br i1 %cmp35, label %if.then.36, label %if.else.40

if.then.36:                                       ; preds = %if.end
  %58 = load i32, i32* %k, align 4, !tbaa !26
  %idxprom37 = zext i32 %58 to i64
  %59 = load i8*, i8** %mv, align 8, !tbaa !1
  %arrayidx38 = getelementptr inbounds i8, i8* %59, i64 %idxprom37
  %60 = load i8, i8* %arrayidx38, align 1, !tbaa !62
  %61 = load i8*, i8** %out, align 8, !tbaa !1
  %arrayidx39 = getelementptr inbounds i8, i8* %61, i64 1
  store i8 %60, i8* %arrayidx39, align 1, !tbaa !62
  br label %if.end.46

if.else.40:                                       ; preds = %if.end
  %62 = load i32, i32* %n, align 4, !tbaa !26
  %idxprom41 = zext i32 %62 to i64
  %63 = load i8*, i8** %mv, align 8, !tbaa !1
  %arrayidx42 = getelementptr inbounds i8, i8* %63, i64 %idxprom41
  %64 = load i8, i8* %arrayidx42, align 1, !tbaa !62
  %65 = load i8*, i8** %out, align 8, !tbaa !1
  %arrayidx43 = getelementptr inbounds i8, i8* %65, i64 1
  store i8 %64, i8* %arrayidx43, align 1, !tbaa !62
  %66 = load i32, i32* %ci, align 4, !tbaa !26
  %shr44 = lshr i32 %66, 22
  %and45 = and i32 %shr44, 1023
  store i32 %and45, i32* %n, align 4, !tbaa !26
  br label %if.end.46

if.end.46:                                        ; preds = %if.else.40, %if.then.36
  %67 = load i32, i32* %mode, align 4, !tbaa !26
  %cmp47 = icmp eq i32 %67, 0
  br i1 %cmp47, label %if.then.48, label %if.else.52

if.then.48:                                       ; preds = %if.end.46
  %68 = load i32, i32* %k, align 4, !tbaa !26
  %idxprom49 = zext i32 %68 to i64
  %69 = load i8*, i8** %cv, align 8, !tbaa !1
  %arrayidx50 = getelementptr inbounds i8, i8* %69, i64 %idxprom49
  %70 = load i8, i8* %arrayidx50, align 1, !tbaa !62
  %71 = load i8*, i8** %out, align 8, !tbaa !1
  %arrayidx51 = getelementptr inbounds i8, i8* %71, i64 0
  store i8 %70, i8* %arrayidx51, align 1, !tbaa !62
  br label %if.end.56

if.else.52:                                       ; preds = %if.end.46
  %72 = load i32, i32* %n, align 4, !tbaa !26
  %idxprom53 = zext i32 %72 to i64
  %73 = load i8*, i8** %cv, align 8, !tbaa !1
  %arrayidx54 = getelementptr inbounds i8, i8* %73, i64 %idxprom53
  %74 = load i8, i8* %arrayidx54, align 1, !tbaa !62
  %75 = load i8*, i8** %out, align 8, !tbaa !1
  %arrayidx55 = getelementptr inbounds i8, i8* %75, i64 0
  store i8 %74, i8* %arrayidx55, align 1, !tbaa !62
  br label %if.end.56

if.end.56:                                        ; preds = %if.else.52, %if.then.48
  %76 = load i8*, i8** %out, align 8, !tbaa !1
  %add.ptr = getelementptr inbounds i8, i8* %76, i64 4
  store i8* %add.ptr, i8** %out, align 8, !tbaa !1
  br label %if.end.57

if.end.57:                                        ; preds = %if.end.56, %if.then
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %77 = load i8*, i8** %alg_line.addr, align 8, !tbaa !1
  %78 = bitcast i8** %kv to i8*
  call void @llvm.lifetime.end(i64 8, i8* %78) #2
  %79 = bitcast i8** %yv to i8*
  call void @llvm.lifetime.end(i64 8, i8* %79) #2
  %80 = bitcast i8** %mv to i8*
  call void @llvm.lifetime.end(i64 8, i8* %80) #2
  %81 = bitcast i8** %cv to i8*
  call void @llvm.lifetime.end(i64 8, i8* %81) #2
  %82 = bitcast i8** %out to i8*
  call void @llvm.lifetime.end(i64 8, i8* %82) #2
  %83 = bitcast i32** %in to i8*
  call void @llvm.lifetime.end(i64 8, i8* %83) #2
  %84 = bitcast i32* %mode to i8*
  call void @llvm.lifetime.end(i64 4, i8* %84) #2
  %85 = bitcast i32* %n to i8*
  call void @llvm.lifetime.end(i64 4, i8* %85) #2
  %86 = bitcast i32* %k to i8*
  call void @llvm.lifetime.end(i64 4, i8* %86) #2
  %87 = bitcast i32* %ci to i8*
  call void @llvm.lifetime.end(i64 4, i8* %87) #2
  %88 = bitcast i32* %p to i8*
  call void @llvm.lifetime.end(i64 4, i8* %88) #2
  ret i8* %77
}

; Function Attrs: nounwind uwtable
define internal i8* @stc_cmyk10_dlong(%struct.stcolor_device_s* %sd, i8* %ext_data, i32 %prt_pixels, i8* %alg_line) #1 {
entry:
  %sd.addr = alloca %struct.stcolor_device_s*, align 8
  %ext_data.addr = alloca i8*, align 8
  %prt_pixels.addr = alloca i32, align 4
  %alg_line.addr = alloca i8*, align 8
  %p = alloca i32, align 4
  %ci = alloca i32, align 4
  %k = alloca i32, align 4
  %n = alloca i32, align 4
  %mode = alloca i32, align 4
  %in = alloca i32*, align 8
  %out = alloca i64*, align 8
  store %struct.stcolor_device_s* %sd, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  store i8* %ext_data, i8** %ext_data.addr, align 8, !tbaa !1
  store i32 %prt_pixels, i32* %prt_pixels.addr, align 4, !tbaa !26
  store i8* %alg_line, i8** %alg_line.addr, align 8, !tbaa !1
  %0 = bitcast i32* %p to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = load i32, i32* %prt_pixels.addr, align 4, !tbaa !26
  store i32 %1, i32* %p, align 4, !tbaa !26
  %2 = bitcast i32* %ci to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #2
  %3 = bitcast i32* %k to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #2
  %4 = bitcast i32* %n to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #2
  %5 = bitcast i32* %mode to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #2
  %6 = bitcast i32** %in to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6) #2
  %7 = load i8*, i8** %ext_data.addr, align 8, !tbaa !1
  %8 = bitcast i8* %7 to i32*
  store i32* %8, i32** %in, align 8, !tbaa !1
  %9 = bitcast i64** %out to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9) #2
  %10 = load i8*, i8** %alg_line.addr, align 8, !tbaa !1
  %11 = bitcast i8* %10 to i64*
  store i64* %11, i64** %out, align 8, !tbaa !1
  br label %while.cond

while.cond:                                       ; preds = %if.end.39, %entry
  %12 = load i32, i32* %p, align 4, !tbaa !26
  %dec = add nsw i32 %12, -1
  store i32 %dec, i32* %p, align 4, !tbaa !26
  %tobool = icmp ne i32 %12, 0
  br i1 %tobool, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %13 = load i32*, i32** %in, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds i32, i32* %13, i32 1
  store i32* %incdec.ptr, i32** %in, align 8, !tbaa !1
  %14 = load i32, i32* %13, align 4, !tbaa !26
  store i32 %14, i32* %ci, align 4, !tbaa !26
  %15 = load i32, i32* %ci, align 4, !tbaa !26
  %and = and i32 %15, 3
  store i32 %and, i32* %mode, align 4, !tbaa !26
  %16 = load i32, i32* %ci, align 4, !tbaa !26
  %shr = lshr i32 %16, 2
  %and1 = and i32 %shr, 1023
  store i32 %and1, i32* %k, align 4, !tbaa !26
  %17 = load i32, i32* %mode, align 4, !tbaa !26
  %cmp = icmp eq i32 %17, 3
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %while.body
  %18 = load i64*, i64** %out, align 8, !tbaa !1
  %incdec.ptr2 = getelementptr inbounds i64, i64* %18, i32 1
  store i64* %incdec.ptr2, i64** %out, align 8, !tbaa !1
  store i64 0, i64* %18, align 8, !tbaa !25
  %19 = load i64*, i64** %out, align 8, !tbaa !1
  %incdec.ptr3 = getelementptr inbounds i64, i64* %19, i32 1
  store i64* %incdec.ptr3, i64** %out, align 8, !tbaa !1
  store i64 0, i64* %19, align 8, !tbaa !25
  %20 = load i64*, i64** %out, align 8, !tbaa !1
  %incdec.ptr4 = getelementptr inbounds i64, i64* %20, i32 1
  store i64* %incdec.ptr4, i64** %out, align 8, !tbaa !1
  store i64 0, i64* %20, align 8, !tbaa !25
  %21 = load i32, i32* %k, align 4, !tbaa !26
  %conv = zext i32 %21 to i64
  %22 = load i64*, i64** %out, align 8, !tbaa !1
  %incdec.ptr5 = getelementptr inbounds i64, i64* %22, i32 1
  store i64* %incdec.ptr5, i64** %out, align 8, !tbaa !1
  store i64 %conv, i64* %22, align 8, !tbaa !25
  br label %if.end.39

if.else:                                          ; preds = %while.body
  %23 = load i32, i32* %k, align 4, !tbaa !26
  %conv6 = zext i32 %23 to i64
  %24 = load i64*, i64** %out, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds i64, i64* %24, i64 3
  store i64 %conv6, i64* %arrayidx, align 8, !tbaa !25
  %25 = load i32, i32* %ci, align 4, !tbaa !26
  %shr7 = lshr i32 %25, 12
  %and8 = and i32 %shr7, 1023
  store i32 %and8, i32* %n, align 4, !tbaa !26
  %26 = load i32, i32* %mode, align 4, !tbaa !26
  %cmp9 = icmp eq i32 %26, 2
  br i1 %cmp9, label %if.then.11, label %if.else.14

if.then.11:                                       ; preds = %if.else
  %27 = load i32, i32* %k, align 4, !tbaa !26
  %conv12 = zext i32 %27 to i64
  %28 = load i64*, i64** %out, align 8, !tbaa !1
  %arrayidx13 = getelementptr inbounds i64, i64* %28, i64 2
  store i64 %conv12, i64* %arrayidx13, align 8, !tbaa !25
  br label %if.end

if.else.14:                                       ; preds = %if.else
  %29 = load i32, i32* %n, align 4, !tbaa !26
  %conv15 = zext i32 %29 to i64
  %30 = load i64*, i64** %out, align 8, !tbaa !1
  %arrayidx16 = getelementptr inbounds i64, i64* %30, i64 2
  store i64 %conv15, i64* %arrayidx16, align 8, !tbaa !25
  %31 = load i32, i32* %ci, align 4, !tbaa !26
  %shr17 = lshr i32 %31, 22
  %and18 = and i32 %shr17, 1023
  store i32 %and18, i32* %n, align 4, !tbaa !26
  br label %if.end

if.end:                                           ; preds = %if.else.14, %if.then.11
  %32 = load i32, i32* %mode, align 4, !tbaa !26
  %cmp19 = icmp eq i32 %32, 1
  br i1 %cmp19, label %if.then.21, label %if.else.24

if.then.21:                                       ; preds = %if.end
  %33 = load i32, i32* %k, align 4, !tbaa !26
  %conv22 = zext i32 %33 to i64
  %34 = load i64*, i64** %out, align 8, !tbaa !1
  %arrayidx23 = getelementptr inbounds i64, i64* %34, i64 1
  store i64 %conv22, i64* %arrayidx23, align 8, !tbaa !25
  br label %if.end.29

if.else.24:                                       ; preds = %if.end
  %35 = load i32, i32* %n, align 4, !tbaa !26
  %conv25 = zext i32 %35 to i64
  %36 = load i64*, i64** %out, align 8, !tbaa !1
  %arrayidx26 = getelementptr inbounds i64, i64* %36, i64 1
  store i64 %conv25, i64* %arrayidx26, align 8, !tbaa !25
  %37 = load i32, i32* %ci, align 4, !tbaa !26
  %shr27 = lshr i32 %37, 22
  %and28 = and i32 %shr27, 1023
  store i32 %and28, i32* %n, align 4, !tbaa !26
  br label %if.end.29

if.end.29:                                        ; preds = %if.else.24, %if.then.21
  %38 = load i32, i32* %mode, align 4, !tbaa !26
  %cmp30 = icmp eq i32 %38, 0
  br i1 %cmp30, label %if.then.32, label %if.else.35

if.then.32:                                       ; preds = %if.end.29
  %39 = load i32, i32* %k, align 4, !tbaa !26
  %conv33 = zext i32 %39 to i64
  %40 = load i64*, i64** %out, align 8, !tbaa !1
  %arrayidx34 = getelementptr inbounds i64, i64* %40, i64 0
  store i64 %conv33, i64* %arrayidx34, align 8, !tbaa !25
  br label %if.end.38

if.else.35:                                       ; preds = %if.end.29
  %41 = load i32, i32* %n, align 4, !tbaa !26
  %conv36 = zext i32 %41 to i64
  %42 = load i64*, i64** %out, align 8, !tbaa !1
  %arrayidx37 = getelementptr inbounds i64, i64* %42, i64 0
  store i64 %conv36, i64* %arrayidx37, align 8, !tbaa !25
  br label %if.end.38

if.end.38:                                        ; preds = %if.else.35, %if.then.32
  %43 = load i64*, i64** %out, align 8, !tbaa !1
  %add.ptr = getelementptr inbounds i64, i64* %43, i64 4
  store i64* %add.ptr, i64** %out, align 8, !tbaa !1
  br label %if.end.39

if.end.39:                                        ; preds = %if.end.38, %if.then
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %44 = load i8*, i8** %alg_line.addr, align 8, !tbaa !1
  %45 = bitcast i64** %out to i8*
  call void @llvm.lifetime.end(i64 8, i8* %45) #2
  %46 = bitcast i32** %in to i8*
  call void @llvm.lifetime.end(i64 8, i8* %46) #2
  %47 = bitcast i32* %mode to i8*
  call void @llvm.lifetime.end(i64 4, i8* %47) #2
  %48 = bitcast i32* %n to i8*
  call void @llvm.lifetime.end(i64 4, i8* %48) #2
  %49 = bitcast i32* %k to i8*
  call void @llvm.lifetime.end(i64 4, i8* %49) #2
  %50 = bitcast i32* %ci to i8*
  call void @llvm.lifetime.end(i64 4, i8* %50) #2
  %51 = bitcast i32* %p to i8*
  call void @llvm.lifetime.end(i64 4, i8* %51) #2
  ret i8* %44
}

; Function Attrs: nounwind uwtable
define internal i8* @stc_cmyk10_long(%struct.stcolor_device_s* %sd, i8* %ext_data, i32 %prt_pixels, i8* %alg_line) #1 {
entry:
  %sd.addr = alloca %struct.stcolor_device_s*, align 8
  %ext_data.addr = alloca i8*, align 8
  %prt_pixels.addr = alloca i32, align 4
  %alg_line.addr = alloca i8*, align 8
  %p = alloca i32, align 4
  %ci = alloca i32, align 4
  %k = alloca i32, align 4
  %n = alloca i32, align 4
  %mode = alloca i32, align 4
  %in = alloca i32*, align 8
  %out = alloca i64*, align 8
  %cv = alloca i64*, align 8
  %mv = alloca i64*, align 8
  %yv = alloca i64*, align 8
  %kv = alloca i64*, align 8
  store %struct.stcolor_device_s* %sd, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  store i8* %ext_data, i8** %ext_data.addr, align 8, !tbaa !1
  store i32 %prt_pixels, i32* %prt_pixels.addr, align 4, !tbaa !26
  store i8* %alg_line, i8** %alg_line.addr, align 8, !tbaa !1
  %0 = bitcast i32* %p to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = load i32, i32* %prt_pixels.addr, align 4, !tbaa !26
  store i32 %1, i32* %p, align 4, !tbaa !26
  %2 = bitcast i32* %ci to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #2
  %3 = bitcast i32* %k to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #2
  %4 = bitcast i32* %n to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #2
  %5 = bitcast i32* %mode to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #2
  %6 = bitcast i32** %in to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6) #2
  %7 = load i8*, i8** %ext_data.addr, align 8, !tbaa !1
  %8 = bitcast i8* %7 to i32*
  store i32* %8, i32** %in, align 8, !tbaa !1
  %9 = bitcast i64** %out to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9) #2
  %10 = load i8*, i8** %alg_line.addr, align 8, !tbaa !1
  %11 = bitcast i8* %10 to i64*
  store i64* %11, i64** %out, align 8, !tbaa !1
  %12 = bitcast i64** %cv to i8*
  call void @llvm.lifetime.start(i64 8, i8* %12) #2
  %13 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %13, i32 0, i32 68
  %vals = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc, i32 0, i32 9
  %arrayidx = getelementptr inbounds [4 x i8*], [4 x i8*]* %vals, i32 0, i64 0
  %14 = load i8*, i8** %arrayidx, align 8, !tbaa !1
  %15 = bitcast i8* %14 to i64*
  store i64* %15, i64** %cv, align 8, !tbaa !1
  %16 = bitcast i64** %mv to i8*
  call void @llvm.lifetime.start(i64 8, i8* %16) #2
  %17 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc1 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %17, i32 0, i32 68
  %vals2 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc1, i32 0, i32 9
  %arrayidx3 = getelementptr inbounds [4 x i8*], [4 x i8*]* %vals2, i32 0, i64 1
  %18 = load i8*, i8** %arrayidx3, align 8, !tbaa !1
  %19 = bitcast i8* %18 to i64*
  store i64* %19, i64** %mv, align 8, !tbaa !1
  %20 = bitcast i64** %yv to i8*
  call void @llvm.lifetime.start(i64 8, i8* %20) #2
  %21 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc4 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %21, i32 0, i32 68
  %vals5 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc4, i32 0, i32 9
  %arrayidx6 = getelementptr inbounds [4 x i8*], [4 x i8*]* %vals5, i32 0, i64 2
  %22 = load i8*, i8** %arrayidx6, align 8, !tbaa !1
  %23 = bitcast i8* %22 to i64*
  store i64* %23, i64** %yv, align 8, !tbaa !1
  %24 = bitcast i64** %kv to i8*
  call void @llvm.lifetime.start(i64 8, i8* %24) #2
  %25 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc7 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %25, i32 0, i32 68
  %vals8 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc7, i32 0, i32 9
  %arrayidx9 = getelementptr inbounds [4 x i8*], [4 x i8*]* %vals8, i32 0, i64 3
  %26 = load i8*, i8** %arrayidx9, align 8, !tbaa !1
  %27 = bitcast i8* %26 to i64*
  store i64* %27, i64** %kv, align 8, !tbaa !1
  br label %while.cond

while.cond:                                       ; preds = %if.end.57, %entry
  %28 = load i32, i32* %p, align 4, !tbaa !26
  %dec = add nsw i32 %28, -1
  store i32 %dec, i32* %p, align 4, !tbaa !26
  %tobool = icmp ne i32 %28, 0
  br i1 %tobool, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %29 = load i32*, i32** %in, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds i32, i32* %29, i32 1
  store i32* %incdec.ptr, i32** %in, align 8, !tbaa !1
  %30 = load i32, i32* %29, align 4, !tbaa !26
  store i32 %30, i32* %ci, align 4, !tbaa !26
  %31 = load i32, i32* %ci, align 4, !tbaa !26
  %and = and i32 %31, 3
  store i32 %and, i32* %mode, align 4, !tbaa !26
  %32 = load i32, i32* %ci, align 4, !tbaa !26
  %shr = lshr i32 %32, 2
  %and10 = and i32 %shr, 1023
  store i32 %and10, i32* %k, align 4, !tbaa !26
  %33 = load i32, i32* %mode, align 4, !tbaa !26
  %cmp = icmp eq i32 %33, 3
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %while.body
  %34 = load i64*, i64** %cv, align 8, !tbaa !1
  %arrayidx11 = getelementptr inbounds i64, i64* %34, i64 0
  %35 = load i64, i64* %arrayidx11, align 8, !tbaa !25
  %36 = load i64*, i64** %out, align 8, !tbaa !1
  %incdec.ptr12 = getelementptr inbounds i64, i64* %36, i32 1
  store i64* %incdec.ptr12, i64** %out, align 8, !tbaa !1
  store i64 %35, i64* %36, align 8, !tbaa !25
  %37 = load i64*, i64** %mv, align 8, !tbaa !1
  %arrayidx13 = getelementptr inbounds i64, i64* %37, i64 0
  %38 = load i64, i64* %arrayidx13, align 8, !tbaa !25
  %39 = load i64*, i64** %out, align 8, !tbaa !1
  %incdec.ptr14 = getelementptr inbounds i64, i64* %39, i32 1
  store i64* %incdec.ptr14, i64** %out, align 8, !tbaa !1
  store i64 %38, i64* %39, align 8, !tbaa !25
  %40 = load i64*, i64** %yv, align 8, !tbaa !1
  %arrayidx15 = getelementptr inbounds i64, i64* %40, i64 0
  %41 = load i64, i64* %arrayidx15, align 8, !tbaa !25
  %42 = load i64*, i64** %out, align 8, !tbaa !1
  %incdec.ptr16 = getelementptr inbounds i64, i64* %42, i32 1
  store i64* %incdec.ptr16, i64** %out, align 8, !tbaa !1
  store i64 %41, i64* %42, align 8, !tbaa !25
  %43 = load i32, i32* %k, align 4, !tbaa !26
  %idxprom = zext i32 %43 to i64
  %44 = load i64*, i64** %kv, align 8, !tbaa !1
  %arrayidx17 = getelementptr inbounds i64, i64* %44, i64 %idxprom
  %45 = load i64, i64* %arrayidx17, align 8, !tbaa !25
  %46 = load i64*, i64** %out, align 8, !tbaa !1
  %incdec.ptr18 = getelementptr inbounds i64, i64* %46, i32 1
  store i64* %incdec.ptr18, i64** %out, align 8, !tbaa !1
  store i64 %45, i64* %46, align 8, !tbaa !25
  br label %if.end.57

if.else:                                          ; preds = %while.body
  %47 = load i32, i32* %k, align 4, !tbaa !26
  %idxprom19 = zext i32 %47 to i64
  %48 = load i64*, i64** %kv, align 8, !tbaa !1
  %arrayidx20 = getelementptr inbounds i64, i64* %48, i64 %idxprom19
  %49 = load i64, i64* %arrayidx20, align 8, !tbaa !25
  %50 = load i64*, i64** %out, align 8, !tbaa !1
  %arrayidx21 = getelementptr inbounds i64, i64* %50, i64 3
  store i64 %49, i64* %arrayidx21, align 8, !tbaa !25
  %51 = load i32, i32* %ci, align 4, !tbaa !26
  %shr22 = lshr i32 %51, 12
  %and23 = and i32 %shr22, 1023
  store i32 %and23, i32* %n, align 4, !tbaa !26
  %52 = load i32, i32* %mode, align 4, !tbaa !26
  %cmp24 = icmp eq i32 %52, 2
  br i1 %cmp24, label %if.then.25, label %if.else.29

if.then.25:                                       ; preds = %if.else
  %53 = load i32, i32* %k, align 4, !tbaa !26
  %idxprom26 = zext i32 %53 to i64
  %54 = load i64*, i64** %yv, align 8, !tbaa !1
  %arrayidx27 = getelementptr inbounds i64, i64* %54, i64 %idxprom26
  %55 = load i64, i64* %arrayidx27, align 8, !tbaa !25
  %56 = load i64*, i64** %out, align 8, !tbaa !1
  %arrayidx28 = getelementptr inbounds i64, i64* %56, i64 2
  store i64 %55, i64* %arrayidx28, align 8, !tbaa !25
  br label %if.end

if.else.29:                                       ; preds = %if.else
  %57 = load i32, i32* %n, align 4, !tbaa !26
  %idxprom30 = zext i32 %57 to i64
  %58 = load i64*, i64** %yv, align 8, !tbaa !1
  %arrayidx31 = getelementptr inbounds i64, i64* %58, i64 %idxprom30
  %59 = load i64, i64* %arrayidx31, align 8, !tbaa !25
  %60 = load i64*, i64** %out, align 8, !tbaa !1
  %arrayidx32 = getelementptr inbounds i64, i64* %60, i64 2
  store i64 %59, i64* %arrayidx32, align 8, !tbaa !25
  %61 = load i32, i32* %ci, align 4, !tbaa !26
  %shr33 = lshr i32 %61, 22
  %and34 = and i32 %shr33, 1023
  store i32 %and34, i32* %n, align 4, !tbaa !26
  br label %if.end

if.end:                                           ; preds = %if.else.29, %if.then.25
  %62 = load i32, i32* %mode, align 4, !tbaa !26
  %cmp35 = icmp eq i32 %62, 1
  br i1 %cmp35, label %if.then.36, label %if.else.40

if.then.36:                                       ; preds = %if.end
  %63 = load i32, i32* %k, align 4, !tbaa !26
  %idxprom37 = zext i32 %63 to i64
  %64 = load i64*, i64** %mv, align 8, !tbaa !1
  %arrayidx38 = getelementptr inbounds i64, i64* %64, i64 %idxprom37
  %65 = load i64, i64* %arrayidx38, align 8, !tbaa !25
  %66 = load i64*, i64** %out, align 8, !tbaa !1
  %arrayidx39 = getelementptr inbounds i64, i64* %66, i64 1
  store i64 %65, i64* %arrayidx39, align 8, !tbaa !25
  br label %if.end.46

if.else.40:                                       ; preds = %if.end
  %67 = load i32, i32* %n, align 4, !tbaa !26
  %idxprom41 = zext i32 %67 to i64
  %68 = load i64*, i64** %mv, align 8, !tbaa !1
  %arrayidx42 = getelementptr inbounds i64, i64* %68, i64 %idxprom41
  %69 = load i64, i64* %arrayidx42, align 8, !tbaa !25
  %70 = load i64*, i64** %out, align 8, !tbaa !1
  %arrayidx43 = getelementptr inbounds i64, i64* %70, i64 1
  store i64 %69, i64* %arrayidx43, align 8, !tbaa !25
  %71 = load i32, i32* %ci, align 4, !tbaa !26
  %shr44 = lshr i32 %71, 22
  %and45 = and i32 %shr44, 1023
  store i32 %and45, i32* %n, align 4, !tbaa !26
  br label %if.end.46

if.end.46:                                        ; preds = %if.else.40, %if.then.36
  %72 = load i32, i32* %mode, align 4, !tbaa !26
  %cmp47 = icmp eq i32 %72, 0
  br i1 %cmp47, label %if.then.48, label %if.else.52

if.then.48:                                       ; preds = %if.end.46
  %73 = load i32, i32* %k, align 4, !tbaa !26
  %idxprom49 = zext i32 %73 to i64
  %74 = load i64*, i64** %cv, align 8, !tbaa !1
  %arrayidx50 = getelementptr inbounds i64, i64* %74, i64 %idxprom49
  %75 = load i64, i64* %arrayidx50, align 8, !tbaa !25
  %76 = load i64*, i64** %out, align 8, !tbaa !1
  %arrayidx51 = getelementptr inbounds i64, i64* %76, i64 0
  store i64 %75, i64* %arrayidx51, align 8, !tbaa !25
  br label %if.end.56

if.else.52:                                       ; preds = %if.end.46
  %77 = load i32, i32* %n, align 4, !tbaa !26
  %idxprom53 = zext i32 %77 to i64
  %78 = load i64*, i64** %cv, align 8, !tbaa !1
  %arrayidx54 = getelementptr inbounds i64, i64* %78, i64 %idxprom53
  %79 = load i64, i64* %arrayidx54, align 8, !tbaa !25
  %80 = load i64*, i64** %out, align 8, !tbaa !1
  %arrayidx55 = getelementptr inbounds i64, i64* %80, i64 0
  store i64 %79, i64* %arrayidx55, align 8, !tbaa !25
  br label %if.end.56

if.end.56:                                        ; preds = %if.else.52, %if.then.48
  %81 = load i64*, i64** %out, align 8, !tbaa !1
  %add.ptr = getelementptr inbounds i64, i64* %81, i64 4
  store i64* %add.ptr, i64** %out, align 8, !tbaa !1
  br label %if.end.57

if.end.57:                                        ; preds = %if.end.56, %if.then
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %82 = load i8*, i8** %alg_line.addr, align 8, !tbaa !1
  %83 = bitcast i64** %kv to i8*
  call void @llvm.lifetime.end(i64 8, i8* %83) #2
  %84 = bitcast i64** %yv to i8*
  call void @llvm.lifetime.end(i64 8, i8* %84) #2
  %85 = bitcast i64** %mv to i8*
  call void @llvm.lifetime.end(i64 8, i8* %85) #2
  %86 = bitcast i64** %cv to i8*
  call void @llvm.lifetime.end(i64 8, i8* %86) #2
  %87 = bitcast i64** %out to i8*
  call void @llvm.lifetime.end(i64 8, i8* %87) #2
  %88 = bitcast i32** %in to i8*
  call void @llvm.lifetime.end(i64 8, i8* %88) #2
  %89 = bitcast i32* %mode to i8*
  call void @llvm.lifetime.end(i64 4, i8* %89) #2
  %90 = bitcast i32* %n to i8*
  call void @llvm.lifetime.end(i64 4, i8* %90) #2
  %91 = bitcast i32* %k to i8*
  call void @llvm.lifetime.end(i64 4, i8* %91) #2
  %92 = bitcast i32* %ci to i8*
  call void @llvm.lifetime.end(i64 4, i8* %92) #2
  %93 = bitcast i32* %p to i8*
  call void @llvm.lifetime.end(i64 4, i8* %93) #2
  ret i8* %82
}

; Function Attrs: nounwind uwtable
define internal i8* @stc_cmyk10_float(%struct.stcolor_device_s* %sd, i8* %ext_data, i32 %prt_pixels, i8* %alg_line) #1 {
entry:
  %sd.addr = alloca %struct.stcolor_device_s*, align 8
  %ext_data.addr = alloca i8*, align 8
  %prt_pixels.addr = alloca i32, align 4
  %alg_line.addr = alloca i8*, align 8
  %p = alloca i32, align 4
  %ci = alloca i32, align 4
  %k = alloca i32, align 4
  %n = alloca i32, align 4
  %mode = alloca i32, align 4
  %in = alloca i32*, align 8
  %out = alloca float*, align 8
  %cv = alloca float*, align 8
  %mv = alloca float*, align 8
  %yv = alloca float*, align 8
  %kv = alloca float*, align 8
  store %struct.stcolor_device_s* %sd, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  store i8* %ext_data, i8** %ext_data.addr, align 8, !tbaa !1
  store i32 %prt_pixels, i32* %prt_pixels.addr, align 4, !tbaa !26
  store i8* %alg_line, i8** %alg_line.addr, align 8, !tbaa !1
  %0 = bitcast i32* %p to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = load i32, i32* %prt_pixels.addr, align 4, !tbaa !26
  store i32 %1, i32* %p, align 4, !tbaa !26
  %2 = bitcast i32* %ci to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #2
  %3 = bitcast i32* %k to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #2
  %4 = bitcast i32* %n to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #2
  %5 = bitcast i32* %mode to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #2
  %6 = bitcast i32** %in to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6) #2
  %7 = load i8*, i8** %ext_data.addr, align 8, !tbaa !1
  %8 = bitcast i8* %7 to i32*
  store i32* %8, i32** %in, align 8, !tbaa !1
  %9 = bitcast float** %out to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9) #2
  %10 = load i8*, i8** %alg_line.addr, align 8, !tbaa !1
  %11 = bitcast i8* %10 to float*
  store float* %11, float** %out, align 8, !tbaa !1
  %12 = bitcast float** %cv to i8*
  call void @llvm.lifetime.start(i64 8, i8* %12) #2
  %13 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %13, i32 0, i32 68
  %vals = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc, i32 0, i32 9
  %arrayidx = getelementptr inbounds [4 x i8*], [4 x i8*]* %vals, i32 0, i64 0
  %14 = load i8*, i8** %arrayidx, align 8, !tbaa !1
  %15 = bitcast i8* %14 to float*
  store float* %15, float** %cv, align 8, !tbaa !1
  %16 = bitcast float** %mv to i8*
  call void @llvm.lifetime.start(i64 8, i8* %16) #2
  %17 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc1 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %17, i32 0, i32 68
  %vals2 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc1, i32 0, i32 9
  %arrayidx3 = getelementptr inbounds [4 x i8*], [4 x i8*]* %vals2, i32 0, i64 1
  %18 = load i8*, i8** %arrayidx3, align 8, !tbaa !1
  %19 = bitcast i8* %18 to float*
  store float* %19, float** %mv, align 8, !tbaa !1
  %20 = bitcast float** %yv to i8*
  call void @llvm.lifetime.start(i64 8, i8* %20) #2
  %21 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc4 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %21, i32 0, i32 68
  %vals5 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc4, i32 0, i32 9
  %arrayidx6 = getelementptr inbounds [4 x i8*], [4 x i8*]* %vals5, i32 0, i64 2
  %22 = load i8*, i8** %arrayidx6, align 8, !tbaa !1
  %23 = bitcast i8* %22 to float*
  store float* %23, float** %yv, align 8, !tbaa !1
  %24 = bitcast float** %kv to i8*
  call void @llvm.lifetime.start(i64 8, i8* %24) #2
  %25 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc7 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %25, i32 0, i32 68
  %vals8 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc7, i32 0, i32 9
  %arrayidx9 = getelementptr inbounds [4 x i8*], [4 x i8*]* %vals8, i32 0, i64 3
  %26 = load i8*, i8** %arrayidx9, align 8, !tbaa !1
  %27 = bitcast i8* %26 to float*
  store float* %27, float** %kv, align 8, !tbaa !1
  br label %while.cond

while.cond:                                       ; preds = %if.end.57, %entry
  %28 = load i32, i32* %p, align 4, !tbaa !26
  %dec = add nsw i32 %28, -1
  store i32 %dec, i32* %p, align 4, !tbaa !26
  %tobool = icmp ne i32 %28, 0
  br i1 %tobool, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %29 = load i32*, i32** %in, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds i32, i32* %29, i32 1
  store i32* %incdec.ptr, i32** %in, align 8, !tbaa !1
  %30 = load i32, i32* %29, align 4, !tbaa !26
  store i32 %30, i32* %ci, align 4, !tbaa !26
  %31 = load i32, i32* %ci, align 4, !tbaa !26
  %and = and i32 %31, 3
  store i32 %and, i32* %mode, align 4, !tbaa !26
  %32 = load i32, i32* %ci, align 4, !tbaa !26
  %shr = lshr i32 %32, 2
  %and10 = and i32 %shr, 1023
  store i32 %and10, i32* %k, align 4, !tbaa !26
  %33 = load i32, i32* %mode, align 4, !tbaa !26
  %cmp = icmp eq i32 %33, 3
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %while.body
  %34 = load float*, float** %cv, align 8, !tbaa !1
  %arrayidx11 = getelementptr inbounds float, float* %34, i64 0
  %35 = load float, float* %arrayidx11, align 4, !tbaa !37
  %36 = load float*, float** %out, align 8, !tbaa !1
  %incdec.ptr12 = getelementptr inbounds float, float* %36, i32 1
  store float* %incdec.ptr12, float** %out, align 8, !tbaa !1
  store float %35, float* %36, align 4, !tbaa !37
  %37 = load float*, float** %mv, align 8, !tbaa !1
  %arrayidx13 = getelementptr inbounds float, float* %37, i64 0
  %38 = load float, float* %arrayidx13, align 4, !tbaa !37
  %39 = load float*, float** %out, align 8, !tbaa !1
  %incdec.ptr14 = getelementptr inbounds float, float* %39, i32 1
  store float* %incdec.ptr14, float** %out, align 8, !tbaa !1
  store float %38, float* %39, align 4, !tbaa !37
  %40 = load float*, float** %yv, align 8, !tbaa !1
  %arrayidx15 = getelementptr inbounds float, float* %40, i64 0
  %41 = load float, float* %arrayidx15, align 4, !tbaa !37
  %42 = load float*, float** %out, align 8, !tbaa !1
  %incdec.ptr16 = getelementptr inbounds float, float* %42, i32 1
  store float* %incdec.ptr16, float** %out, align 8, !tbaa !1
  store float %41, float* %42, align 4, !tbaa !37
  %43 = load i32, i32* %k, align 4, !tbaa !26
  %idxprom = zext i32 %43 to i64
  %44 = load float*, float** %kv, align 8, !tbaa !1
  %arrayidx17 = getelementptr inbounds float, float* %44, i64 %idxprom
  %45 = load float, float* %arrayidx17, align 4, !tbaa !37
  %46 = load float*, float** %out, align 8, !tbaa !1
  %incdec.ptr18 = getelementptr inbounds float, float* %46, i32 1
  store float* %incdec.ptr18, float** %out, align 8, !tbaa !1
  store float %45, float* %46, align 4, !tbaa !37
  br label %if.end.57

if.else:                                          ; preds = %while.body
  %47 = load i32, i32* %k, align 4, !tbaa !26
  %idxprom19 = zext i32 %47 to i64
  %48 = load float*, float** %kv, align 8, !tbaa !1
  %arrayidx20 = getelementptr inbounds float, float* %48, i64 %idxprom19
  %49 = load float, float* %arrayidx20, align 4, !tbaa !37
  %50 = load float*, float** %out, align 8, !tbaa !1
  %arrayidx21 = getelementptr inbounds float, float* %50, i64 3
  store float %49, float* %arrayidx21, align 4, !tbaa !37
  %51 = load i32, i32* %ci, align 4, !tbaa !26
  %shr22 = lshr i32 %51, 12
  %and23 = and i32 %shr22, 1023
  store i32 %and23, i32* %n, align 4, !tbaa !26
  %52 = load i32, i32* %mode, align 4, !tbaa !26
  %cmp24 = icmp eq i32 %52, 2
  br i1 %cmp24, label %if.then.25, label %if.else.29

if.then.25:                                       ; preds = %if.else
  %53 = load i32, i32* %k, align 4, !tbaa !26
  %idxprom26 = zext i32 %53 to i64
  %54 = load float*, float** %yv, align 8, !tbaa !1
  %arrayidx27 = getelementptr inbounds float, float* %54, i64 %idxprom26
  %55 = load float, float* %arrayidx27, align 4, !tbaa !37
  %56 = load float*, float** %out, align 8, !tbaa !1
  %arrayidx28 = getelementptr inbounds float, float* %56, i64 2
  store float %55, float* %arrayidx28, align 4, !tbaa !37
  br label %if.end

if.else.29:                                       ; preds = %if.else
  %57 = load i32, i32* %n, align 4, !tbaa !26
  %idxprom30 = zext i32 %57 to i64
  %58 = load float*, float** %yv, align 8, !tbaa !1
  %arrayidx31 = getelementptr inbounds float, float* %58, i64 %idxprom30
  %59 = load float, float* %arrayidx31, align 4, !tbaa !37
  %60 = load float*, float** %out, align 8, !tbaa !1
  %arrayidx32 = getelementptr inbounds float, float* %60, i64 2
  store float %59, float* %arrayidx32, align 4, !tbaa !37
  %61 = load i32, i32* %ci, align 4, !tbaa !26
  %shr33 = lshr i32 %61, 22
  %and34 = and i32 %shr33, 1023
  store i32 %and34, i32* %n, align 4, !tbaa !26
  br label %if.end

if.end:                                           ; preds = %if.else.29, %if.then.25
  %62 = load i32, i32* %mode, align 4, !tbaa !26
  %cmp35 = icmp eq i32 %62, 1
  br i1 %cmp35, label %if.then.36, label %if.else.40

if.then.36:                                       ; preds = %if.end
  %63 = load i32, i32* %k, align 4, !tbaa !26
  %idxprom37 = zext i32 %63 to i64
  %64 = load float*, float** %mv, align 8, !tbaa !1
  %arrayidx38 = getelementptr inbounds float, float* %64, i64 %idxprom37
  %65 = load float, float* %arrayidx38, align 4, !tbaa !37
  %66 = load float*, float** %out, align 8, !tbaa !1
  %arrayidx39 = getelementptr inbounds float, float* %66, i64 1
  store float %65, float* %arrayidx39, align 4, !tbaa !37
  br label %if.end.46

if.else.40:                                       ; preds = %if.end
  %67 = load i32, i32* %n, align 4, !tbaa !26
  %idxprom41 = zext i32 %67 to i64
  %68 = load float*, float** %mv, align 8, !tbaa !1
  %arrayidx42 = getelementptr inbounds float, float* %68, i64 %idxprom41
  %69 = load float, float* %arrayidx42, align 4, !tbaa !37
  %70 = load float*, float** %out, align 8, !tbaa !1
  %arrayidx43 = getelementptr inbounds float, float* %70, i64 1
  store float %69, float* %arrayidx43, align 4, !tbaa !37
  %71 = load i32, i32* %ci, align 4, !tbaa !26
  %shr44 = lshr i32 %71, 22
  %and45 = and i32 %shr44, 1023
  store i32 %and45, i32* %n, align 4, !tbaa !26
  br label %if.end.46

if.end.46:                                        ; preds = %if.else.40, %if.then.36
  %72 = load i32, i32* %mode, align 4, !tbaa !26
  %cmp47 = icmp eq i32 %72, 0
  br i1 %cmp47, label %if.then.48, label %if.else.52

if.then.48:                                       ; preds = %if.end.46
  %73 = load i32, i32* %k, align 4, !tbaa !26
  %idxprom49 = zext i32 %73 to i64
  %74 = load float*, float** %cv, align 8, !tbaa !1
  %arrayidx50 = getelementptr inbounds float, float* %74, i64 %idxprom49
  %75 = load float, float* %arrayidx50, align 4, !tbaa !37
  %76 = load float*, float** %out, align 8, !tbaa !1
  %arrayidx51 = getelementptr inbounds float, float* %76, i64 0
  store float %75, float* %arrayidx51, align 4, !tbaa !37
  br label %if.end.56

if.else.52:                                       ; preds = %if.end.46
  %77 = load i32, i32* %n, align 4, !tbaa !26
  %idxprom53 = zext i32 %77 to i64
  %78 = load float*, float** %cv, align 8, !tbaa !1
  %arrayidx54 = getelementptr inbounds float, float* %78, i64 %idxprom53
  %79 = load float, float* %arrayidx54, align 4, !tbaa !37
  %80 = load float*, float** %out, align 8, !tbaa !1
  %arrayidx55 = getelementptr inbounds float, float* %80, i64 0
  store float %79, float* %arrayidx55, align 4, !tbaa !37
  br label %if.end.56

if.end.56:                                        ; preds = %if.else.52, %if.then.48
  %81 = load float*, float** %out, align 8, !tbaa !1
  %add.ptr = getelementptr inbounds float, float* %81, i64 4
  store float* %add.ptr, float** %out, align 8, !tbaa !1
  br label %if.end.57

if.end.57:                                        ; preds = %if.end.56, %if.then
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %82 = load i8*, i8** %alg_line.addr, align 8, !tbaa !1
  %83 = bitcast float** %kv to i8*
  call void @llvm.lifetime.end(i64 8, i8* %83) #2
  %84 = bitcast float** %yv to i8*
  call void @llvm.lifetime.end(i64 8, i8* %84) #2
  %85 = bitcast float** %mv to i8*
  call void @llvm.lifetime.end(i64 8, i8* %85) #2
  %86 = bitcast float** %cv to i8*
  call void @llvm.lifetime.end(i64 8, i8* %86) #2
  %87 = bitcast float** %out to i8*
  call void @llvm.lifetime.end(i64 8, i8* %87) #2
  %88 = bitcast i32** %in to i8*
  call void @llvm.lifetime.end(i64 8, i8* %88) #2
  %89 = bitcast i32* %mode to i8*
  call void @llvm.lifetime.end(i64 4, i8* %89) #2
  %90 = bitcast i32* %n to i8*
  call void @llvm.lifetime.end(i64 4, i8* %90) #2
  %91 = bitcast i32* %k to i8*
  call void @llvm.lifetime.end(i64 4, i8* %91) #2
  %92 = bitcast i32* %ci to i8*
  call void @llvm.lifetime.end(i64 4, i8* %92) #2
  %93 = bitcast i32* %p to i8*
  call void @llvm.lifetime.end(i64 4, i8* %93) #2
  ret i8* %82
}

; Function Attrs: nounwind uwtable
define internal i8* @stc_cmyk32_long(%struct.stcolor_device_s* %sd, i8* %ext_data, i32 %prt_pixels, i8* %alg_line) #1 {
entry:
  %sd.addr = alloca %struct.stcolor_device_s*, align 8
  %ext_data.addr = alloca i8*, align 8
  %prt_pixels.addr = alloca i32, align 4
  %alg_line.addr = alloca i8*, align 8
  %p = alloca i32, align 4
  %out = alloca i64*, align 8
  %cvals = alloca i64*, align 8
  %mvals = alloca i64*, align 8
  %yvals = alloca i64*, align 8
  %kvals = alloca i64*, align 8
  store %struct.stcolor_device_s* %sd, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  store i8* %ext_data, i8** %ext_data.addr, align 8, !tbaa !1
  store i32 %prt_pixels, i32* %prt_pixels.addr, align 4, !tbaa !26
  store i8* %alg_line, i8** %alg_line.addr, align 8, !tbaa !1
  %0 = bitcast i32* %p to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = bitcast i64** %out to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #2
  %2 = load i8*, i8** %alg_line.addr, align 8, !tbaa !1
  %3 = bitcast i8* %2 to i64*
  store i64* %3, i64** %out, align 8, !tbaa !1
  %4 = bitcast i64** %cvals to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4) #2
  %5 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %5, i32 0, i32 68
  %vals = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc, i32 0, i32 9
  %arrayidx = getelementptr inbounds [4 x i8*], [4 x i8*]* %vals, i32 0, i64 0
  %6 = load i8*, i8** %arrayidx, align 8, !tbaa !1
  %7 = bitcast i8* %6 to i64*
  store i64* %7, i64** %cvals, align 8, !tbaa !1
  %8 = bitcast i64** %mvals to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8) #2
  %9 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc1 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %9, i32 0, i32 68
  %vals2 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc1, i32 0, i32 9
  %arrayidx3 = getelementptr inbounds [4 x i8*], [4 x i8*]* %vals2, i32 0, i64 1
  %10 = load i8*, i8** %arrayidx3, align 8, !tbaa !1
  %11 = bitcast i8* %10 to i64*
  store i64* %11, i64** %mvals, align 8, !tbaa !1
  %12 = bitcast i64** %yvals to i8*
  call void @llvm.lifetime.start(i64 8, i8* %12) #2
  %13 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc4 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %13, i32 0, i32 68
  %vals5 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc4, i32 0, i32 9
  %arrayidx6 = getelementptr inbounds [4 x i8*], [4 x i8*]* %vals5, i32 0, i64 2
  %14 = load i8*, i8** %arrayidx6, align 8, !tbaa !1
  %15 = bitcast i8* %14 to i64*
  store i64* %15, i64** %yvals, align 8, !tbaa !1
  %16 = bitcast i64** %kvals to i8*
  call void @llvm.lifetime.start(i64 8, i8* %16) #2
  %17 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc7 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %17, i32 0, i32 68
  %vals8 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc7, i32 0, i32 9
  %arrayidx9 = getelementptr inbounds [4 x i8*], [4 x i8*]* %vals8, i32 0, i64 3
  %18 = load i8*, i8** %arrayidx9, align 8, !tbaa !1
  %19 = bitcast i8* %18 to i64*
  store i64* %19, i64** %kvals, align 8, !tbaa !1
  %20 = load i32, i32* %prt_pixels.addr, align 4, !tbaa !26
  store i32 %20, i32* %p, align 4, !tbaa !26
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %21 = load i32, i32* %p, align 4, !tbaa !26
  %tobool = icmp ne i32 %21, 0
  br i1 %tobool, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %22 = load i8*, i8** %ext_data.addr, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds i8, i8* %22, i32 1
  store i8* %incdec.ptr, i8** %ext_data.addr, align 8, !tbaa !1
  %23 = load i8, i8* %22, align 1, !tbaa !62
  %idxprom = zext i8 %23 to i64
  %24 = load i64*, i64** %cvals, align 8, !tbaa !1
  %arrayidx10 = getelementptr inbounds i64, i64* %24, i64 %idxprom
  %25 = load i64, i64* %arrayidx10, align 8, !tbaa !25
  %26 = load i64*, i64** %out, align 8, !tbaa !1
  %incdec.ptr11 = getelementptr inbounds i64, i64* %26, i32 1
  store i64* %incdec.ptr11, i64** %out, align 8, !tbaa !1
  store i64 %25, i64* %26, align 8, !tbaa !25
  %27 = load i8*, i8** %ext_data.addr, align 8, !tbaa !1
  %incdec.ptr12 = getelementptr inbounds i8, i8* %27, i32 1
  store i8* %incdec.ptr12, i8** %ext_data.addr, align 8, !tbaa !1
  %28 = load i8, i8* %27, align 1, !tbaa !62
  %idxprom13 = zext i8 %28 to i64
  %29 = load i64*, i64** %mvals, align 8, !tbaa !1
  %arrayidx14 = getelementptr inbounds i64, i64* %29, i64 %idxprom13
  %30 = load i64, i64* %arrayidx14, align 8, !tbaa !25
  %31 = load i64*, i64** %out, align 8, !tbaa !1
  %incdec.ptr15 = getelementptr inbounds i64, i64* %31, i32 1
  store i64* %incdec.ptr15, i64** %out, align 8, !tbaa !1
  store i64 %30, i64* %31, align 8, !tbaa !25
  %32 = load i8*, i8** %ext_data.addr, align 8, !tbaa !1
  %incdec.ptr16 = getelementptr inbounds i8, i8* %32, i32 1
  store i8* %incdec.ptr16, i8** %ext_data.addr, align 8, !tbaa !1
  %33 = load i8, i8* %32, align 1, !tbaa !62
  %idxprom17 = zext i8 %33 to i64
  %34 = load i64*, i64** %yvals, align 8, !tbaa !1
  %arrayidx18 = getelementptr inbounds i64, i64* %34, i64 %idxprom17
  %35 = load i64, i64* %arrayidx18, align 8, !tbaa !25
  %36 = load i64*, i64** %out, align 8, !tbaa !1
  %incdec.ptr19 = getelementptr inbounds i64, i64* %36, i32 1
  store i64* %incdec.ptr19, i64** %out, align 8, !tbaa !1
  store i64 %35, i64* %36, align 8, !tbaa !25
  %37 = load i8*, i8** %ext_data.addr, align 8, !tbaa !1
  %incdec.ptr20 = getelementptr inbounds i8, i8* %37, i32 1
  store i8* %incdec.ptr20, i8** %ext_data.addr, align 8, !tbaa !1
  %38 = load i8, i8* %37, align 1, !tbaa !62
  %idxprom21 = zext i8 %38 to i64
  %39 = load i64*, i64** %kvals, align 8, !tbaa !1
  %arrayidx22 = getelementptr inbounds i64, i64* %39, i64 %idxprom21
  %40 = load i64, i64* %arrayidx22, align 8, !tbaa !25
  %41 = load i64*, i64** %out, align 8, !tbaa !1
  %incdec.ptr23 = getelementptr inbounds i64, i64* %41, i32 1
  store i64* %incdec.ptr23, i64** %out, align 8, !tbaa !1
  store i64 %40, i64* %41, align 8, !tbaa !25
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %42 = load i32, i32* %p, align 4, !tbaa !26
  %dec = add nsw i32 %42, -1
  store i32 %dec, i32* %p, align 4, !tbaa !26
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %43 = load i8*, i8** %alg_line.addr, align 8, !tbaa !1
  %44 = bitcast i64** %kvals to i8*
  call void @llvm.lifetime.end(i64 8, i8* %44) #2
  %45 = bitcast i64** %yvals to i8*
  call void @llvm.lifetime.end(i64 8, i8* %45) #2
  %46 = bitcast i64** %mvals to i8*
  call void @llvm.lifetime.end(i64 8, i8* %46) #2
  %47 = bitcast i64** %cvals to i8*
  call void @llvm.lifetime.end(i64 8, i8* %47) #2
  %48 = bitcast i64** %out to i8*
  call void @llvm.lifetime.end(i64 8, i8* %48) #2
  %49 = bitcast i32* %p to i8*
  call void @llvm.lifetime.end(i64 4, i8* %49) #2
  ret i8* %43
}

declare i32 @gdev_prn_get_bits(%struct.gx_device_printer_s*, i32, i8*, i8**) #0

; Function Attrs: nounwind uwtable
define internal i32 @stc_iswhite(%struct.stcolor_device_s* %sd, i32 %prt_pixels, i8* %ext_data) #1 {
entry:
  %sd.addr = alloca %struct.stcolor_device_s*, align 8
  %prt_pixels.addr = alloca i32, align 4
  %ext_data.addr = alloca i8*, align 8
  %b2do = alloca i64, align 8
  %bcmp = alloca i32, align 4
  %wht = alloca i8*, align 8
  store %struct.stcolor_device_s* %sd, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  store i32 %prt_pixels, i32* %prt_pixels.addr, align 4, !tbaa !26
  store i8* %ext_data, i8** %ext_data.addr, align 8, !tbaa !1
  %0 = bitcast i64* %b2do to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = load i32, i32* %prt_pixels.addr, align 4, !tbaa !26
  %2 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %color_info = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %2, i32 0, i32 11
  %depth = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info, i32 0, i32 3
  %3 = load i16, i16* %depth, align 2, !tbaa !54
  %conv = zext i16 %3 to i32
  %mul = mul nsw i32 %1, %conv
  %add = add nsw i32 %mul, 7
  %shr = ashr i32 %add, 3
  %conv1 = sext i32 %shr to i64
  store i64 %conv1, i64* %b2do, align 8, !tbaa !25
  %4 = bitcast i32* %bcmp to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #2
  store i32 12, i32* %bcmp, align 4, !tbaa !26
  %5 = bitcast i8** %wht to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5) #2
  %6 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %6, i32 0, i32 68
  %white_run = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc, i32 0, i32 10
  %arraydecay = getelementptr inbounds [3 x i32], [3 x i32]* %white_run, i32 0, i32 0
  %7 = bitcast i32* %arraydecay to i8*
  store i8* %7, i8** %wht, align 8, !tbaa !1
  br label %while.cond

while.cond:                                       ; preds = %if.end, %entry
  %8 = load i64, i64* %b2do, align 8, !tbaa !25
  %9 = load i32, i32* %bcmp, align 4, !tbaa !26
  %conv2 = sext i32 %9 to i64
  %cmp = icmp sge i64 %8, %conv2
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %10 = load i8*, i8** %ext_data.addr, align 8, !tbaa !1
  %11 = load i8*, i8** %wht, align 8, !tbaa !1
  %12 = load i32, i32* %bcmp, align 4, !tbaa !26
  %conv4 = sext i32 %12 to i64
  %call = call i32 @memcmp(i8* %10, i8* %11, i64 %conv4) #7
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %while.body
  br label %while.end

if.end:                                           ; preds = %while.body
  %13 = load i32, i32* %bcmp, align 4, !tbaa !26
  %14 = load i8*, i8** %ext_data.addr, align 8, !tbaa !1
  %idx.ext = sext i32 %13 to i64
  %add.ptr = getelementptr inbounds i8, i8* %14, i64 %idx.ext
  store i8* %add.ptr, i8** %ext_data.addr, align 8, !tbaa !1
  %15 = load i32, i32* %bcmp, align 4, !tbaa !26
  %conv5 = sext i32 %15 to i64
  %16 = load i64, i64* %b2do, align 8, !tbaa !25
  %sub = sub nsw i64 %16, %conv5
  store i64 %sub, i64* %b2do, align 8, !tbaa !25
  br label %while.cond

while.end:                                        ; preds = %if.then, %while.cond
  %17 = load i64, i64* %b2do, align 8, !tbaa !25
  %cmp6 = icmp sgt i64 %17, 0
  br i1 %cmp6, label %land.lhs.true, label %if.end.16

land.lhs.true:                                    ; preds = %while.end
  %18 = load i64, i64* %b2do, align 8, !tbaa !25
  %19 = load i32, i32* %bcmp, align 4, !tbaa !26
  %conv8 = sext i32 %19 to i64
  %cmp9 = icmp slt i64 %18, %conv8
  br i1 %cmp9, label %if.then.11, label %if.end.16

if.then.11:                                       ; preds = %land.lhs.true
  %20 = load i8*, i8** %ext_data.addr, align 8, !tbaa !1
  %21 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc12 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %21, i32 0, i32 68
  %white_end = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc12, i32 0, i32 11
  %arraydecay13 = getelementptr inbounds [3 x i32], [3 x i32]* %white_end, i32 0, i32 0
  %22 = bitcast i32* %arraydecay13 to i8*
  %23 = load i64, i64* %b2do, align 8, !tbaa !25
  %call14 = call i32 @memcmp(i8* %20, i8* %22, i64 %23) #7
  %conv15 = sext i32 %call14 to i64
  store i64 %conv15, i64* %b2do, align 8, !tbaa !25
  br label %if.end.16

if.end.16:                                        ; preds = %if.then.11, %land.lhs.true, %while.end
  %24 = load i64, i64* %b2do, align 8, !tbaa !25
  %tobool17 = icmp ne i64 %24, 0
  %cond = select i1 %tobool17, i32 0, i32 1
  %25 = bitcast i8** %wht to i8*
  call void @llvm.lifetime.end(i64 8, i8* %25) #2
  %26 = bitcast i32* %bcmp to i8*
  call void @llvm.lifetime.end(i64 4, i8* %26) #2
  %27 = bitcast i64* %b2do to i8*
  call void @llvm.lifetime.end(i64 8, i8* %27) #2
  ret i32 %cond
}

; Function Attrs: nounwind uwtable
define internal void @stc_print_delta(%struct.stcolor_device_s* %sd, %struct._IO_FILE* %prn_stream) #1 {
entry:
  %sd.addr = alloca %struct.stcolor_device_s*, align 8
  %prn_stream.addr = alloca %struct._IO_FILE*, align 8
  %color = alloca i32, align 4
  %buf_a = alloca i32, align 4
  %w = alloca i32, align 4
  %escp_used = alloca i32, align 4
  %ncolor = alloca i32, align 4
  store %struct.stcolor_device_s* %sd, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  store %struct._IO_FILE* %prn_stream, %struct._IO_FILE** %prn_stream.addr, align 8, !tbaa !1
  %0 = bitcast i32* %color to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = bitcast i32* %buf_a to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #2
  %2 = bitcast i32* %w to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #2
  %3 = bitcast i32* %escp_used to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #2
  store i32 0, i32* %escp_used, align 4, !tbaa !26
  %4 = bitcast i32* %ncolor to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #2
  %5 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %color_info = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %5, i32 0, i32 11
  %num_components = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info, i32 0, i32 1
  %6 = load i32, i32* %num_components, align 4, !tbaa !40
  %cmp = icmp eq i32 %6, 1
  %cond = select i1 %cmp, i32 1, i32 4
  store i32 %cond, i32* %ncolor, align 4, !tbaa !26
  br label %while.cond

while.cond:                                       ; preds = %for.end.226, %entry
  %7 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %7, i32 0, i32 68
  %stc_y = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc, i32 0, i32 31
  %8 = load i32, i32* %stc_y, align 4, !tbaa !59
  %9 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc1 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %9, i32 0, i32 68
  %prt_scans = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc1, i32 0, i32 33
  %10 = load i32, i32* %prt_scans, align 4, !tbaa !39
  %cmp2 = icmp slt i32 %8, %10
  br i1 %cmp2, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  store i32 0, i32* %w, align 4, !tbaa !26
  br label %for.cond

for.cond:                                         ; preds = %for.inc.23, %while.body
  %11 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc3 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %11, i32 0, i32 68
  %stc_y4 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc3, i32 0, i32 31
  %12 = load i32, i32* %stc_y4, align 4, !tbaa !59
  %13 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc5 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %13, i32 0, i32 68
  %buf_y = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc5, i32 0, i32 32
  %14 = load i32, i32* %buf_y, align 4, !tbaa !60
  %cmp6 = icmp slt i32 %12, %14
  br i1 %cmp6, label %for.body, label %for.end.27

for.body:                                         ; preds = %for.cond
  %15 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc7 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %15, i32 0, i32 68
  %prt_buf = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc7, i32 0, i32 20
  %16 = load i32, i32* %prt_buf, align 4, !tbaa !47
  %sub = sub nsw i32 %16, 1
  %17 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc8 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %17, i32 0, i32 68
  %stc_y9 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc8, i32 0, i32 31
  %18 = load i32, i32* %stc_y9, align 4, !tbaa !59
  %19 = load i32, i32* %ncolor, align 4, !tbaa !26
  %mul = mul nsw i32 %18, %19
  %and = and i32 %sub, %mul
  store i32 %and, i32* %buf_a, align 4, !tbaa !26
  store i32 0, i32* %color, align 4, !tbaa !26
  br label %for.cond.10

for.cond.10:                                      ; preds = %for.inc, %for.body
  %20 = load i32, i32* %color, align 4, !tbaa !26
  %21 = load i32, i32* %ncolor, align 4, !tbaa !26
  %cmp11 = icmp slt i32 %20, %21
  br i1 %cmp11, label %for.body.12, label %for.end

for.body.12:                                      ; preds = %for.cond.10
  %22 = load i32, i32* %buf_a, align 4, !tbaa !26
  %23 = load i32, i32* %color, align 4, !tbaa !26
  %add = add nsw i32 %22, %23
  %idxprom = sext i32 %add to i64
  %24 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc13 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %24, i32 0, i32 68
  %prt_width = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc13, i32 0, i32 34
  %25 = load i32*, i32** %prt_width, align 8, !tbaa !49
  %arrayidx = getelementptr inbounds i32, i32* %25, i64 %idxprom
  %26 = load i32, i32* %arrayidx, align 4, !tbaa !26
  %27 = load i32, i32* %w, align 4, !tbaa !26
  %cmp14 = icmp sgt i32 %26, %27
  br i1 %cmp14, label %if.then, label %if.end

if.then:                                          ; preds = %for.body.12
  %28 = load i32, i32* %buf_a, align 4, !tbaa !26
  %29 = load i32, i32* %color, align 4, !tbaa !26
  %add15 = add nsw i32 %28, %29
  %idxprom16 = sext i32 %add15 to i64
  %30 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc17 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %30, i32 0, i32 68
  %prt_width18 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc17, i32 0, i32 34
  %31 = load i32*, i32** %prt_width18, align 8, !tbaa !49
  %arrayidx19 = getelementptr inbounds i32, i32* %31, i64 %idxprom16
  %32 = load i32, i32* %arrayidx19, align 4, !tbaa !26
  store i32 %32, i32* %w, align 4, !tbaa !26
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body.12
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %33 = load i32, i32* %color, align 4, !tbaa !26
  %inc = add nsw i32 %33, 1
  store i32 %inc, i32* %color, align 4, !tbaa !26
  br label %for.cond.10

for.end:                                          ; preds = %for.cond.10
  %34 = load i32, i32* %w, align 4, !tbaa !26
  %cmp20 = icmp ne i32 %34, 0
  br i1 %cmp20, label %if.then.21, label %if.end.22

if.then.21:                                       ; preds = %for.end
  br label %for.end.27

if.end.22:                                        ; preds = %for.end
  br label %for.inc.23

for.inc.23:                                       ; preds = %if.end.22
  %35 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc24 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %35, i32 0, i32 68
  %stc_y25 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc24, i32 0, i32 31
  %36 = load i32, i32* %stc_y25, align 4, !tbaa !59
  %inc26 = add nsw i32 %36, 1
  store i32 %inc26, i32* %stc_y25, align 4, !tbaa !59
  br label %for.cond

for.end.27:                                       ; preds = %if.then.21, %for.cond
  %37 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc28 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %37, i32 0, i32 68
  %buf_y29 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc28, i32 0, i32 32
  %38 = load i32, i32* %buf_y29, align 4, !tbaa !60
  %39 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc30 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %39, i32 0, i32 68
  %stc_y31 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc30, i32 0, i32 31
  %40 = load i32, i32* %stc_y31, align 4, !tbaa !59
  %cmp32 = icmp eq i32 %38, %40
  br i1 %cmp32, label %if.then.33, label %if.end.34

if.then.33:                                       ; preds = %for.end.27
  br label %while.end

if.end.34:                                        ; preds = %for.end.27
  store i32 0, i32* %escp_used, align 4, !tbaa !26
  %41 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc35 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %41, i32 0, i32 68
  %flags = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc35, i32 0, i32 0
  %42 = load i64, i64* %flags, align 8, !tbaa !5
  %and36 = and i64 %42, 8388608
  %cmp37 = icmp eq i64 0, %and36
  br i1 %cmp37, label %if.then.38, label %if.end.94

if.then.38:                                       ; preds = %if.end.34
  %43 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc39 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %43, i32 0, i32 68
  %flags40 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc39, i32 0, i32 0
  %44 = load i64, i64* %flags40, align 8, !tbaa !5
  %or = or i64 %44, 8388608
  store i64 %or, i64* %flags40, align 8, !tbaa !5
  %45 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc41 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %45, i32 0, i32 68
  %escp_init = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc41, i32 0, i32 13
  %data = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %escp_init, i32 0, i32 0
  %46 = load i8*, i8** %data, align 8, !tbaa !102
  %47 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc42 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %47, i32 0, i32 68
  %escp_init43 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc42, i32 0, i32 13
  %size = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %escp_init43, i32 0, i32 1
  %48 = load i32, i32* %size, align 4, !tbaa !104
  %conv = zext i32 %48 to i64
  %49 = load %struct._IO_FILE*, %struct._IO_FILE** %prn_stream.addr, align 8, !tbaa !1
  %call = call i64 @fwrite(i8* %46, i64 1, i64 %conv, %struct._IO_FILE* %49) #5
  %50 = load i32, i32* %escp_used, align 4, !tbaa !26
  %inc44 = add nsw i32 %50, 1
  store i32 %inc44, i32* %escp_used, align 4, !tbaa !26
  %idxprom45 = sext i32 %50 to i64
  %51 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc46 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %51, i32 0, i32 68
  %escp_data = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc46, i32 0, i32 36
  %52 = load i8*, i8** %escp_data, align 8, !tbaa !53
  %arrayidx47 = getelementptr inbounds i8, i8* %52, i64 %idxprom45
  store i8 27, i8* %arrayidx47, align 1, !tbaa !62
  %53 = load i32, i32* %escp_used, align 4, !tbaa !26
  %inc48 = add nsw i32 %53, 1
  store i32 %inc48, i32* %escp_used, align 4, !tbaa !26
  %idxprom49 = sext i32 %53 to i64
  %54 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc50 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %54, i32 0, i32 68
  %escp_data51 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc50, i32 0, i32 36
  %55 = load i8*, i8** %escp_data51, align 8, !tbaa !53
  %arrayidx52 = getelementptr inbounds i8, i8* %55, i64 %idxprom49
  store i8 46, i8* %arrayidx52, align 1, !tbaa !62
  %56 = load i32, i32* %escp_used, align 4, !tbaa !26
  %inc53 = add nsw i32 %56, 1
  store i32 %inc53, i32* %escp_used, align 4, !tbaa !26
  %idxprom54 = sext i32 %56 to i64
  %57 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc55 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %57, i32 0, i32 68
  %escp_data56 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc55, i32 0, i32 36
  %58 = load i8*, i8** %escp_data56, align 8, !tbaa !53
  %arrayidx57 = getelementptr inbounds i8, i8* %58, i64 %idxprom54
  store i8 3, i8* %arrayidx57, align 1, !tbaa !62
  %59 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc58 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %59, i32 0, i32 68
  %escp_v = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc58, i32 0, i32 26
  %60 = load i32, i32* %escp_v, align 4, !tbaa !27
  %conv59 = trunc i32 %60 to i8
  %61 = load i32, i32* %escp_used, align 4, !tbaa !26
  %inc60 = add nsw i32 %61, 1
  store i32 %inc60, i32* %escp_used, align 4, !tbaa !26
  %idxprom61 = sext i32 %61 to i64
  %62 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc62 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %62, i32 0, i32 68
  %escp_data63 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc62, i32 0, i32 36
  %63 = load i8*, i8** %escp_data63, align 8, !tbaa !53
  %arrayidx64 = getelementptr inbounds i8, i8* %63, i64 %idxprom61
  store i8 %conv59, i8* %arrayidx64, align 1, !tbaa !62
  %64 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc65 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %64, i32 0, i32 68
  %escp_h = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc65, i32 0, i32 27
  %65 = load i32, i32* %escp_h, align 4, !tbaa !111
  %conv66 = trunc i32 %65 to i8
  %66 = load i32, i32* %escp_used, align 4, !tbaa !26
  %inc67 = add nsw i32 %66, 1
  store i32 %inc67, i32* %escp_used, align 4, !tbaa !26
  %idxprom68 = sext i32 %66 to i64
  %67 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc69 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %67, i32 0, i32 68
  %escp_data70 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc69, i32 0, i32 36
  %68 = load i8*, i8** %escp_data70, align 8, !tbaa !53
  %arrayidx71 = getelementptr inbounds i8, i8* %68, i64 %idxprom68
  store i8 %conv66, i8* %arrayidx71, align 1, !tbaa !62
  %69 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc72 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %69, i32 0, i32 68
  %escp_m = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc72, i32 0, i32 28
  %70 = load i32, i32* %escp_m, align 4, !tbaa !48
  %conv73 = trunc i32 %70 to i8
  %71 = load i32, i32* %escp_used, align 4, !tbaa !26
  %inc74 = add nsw i32 %71, 1
  store i32 %inc74, i32* %escp_used, align 4, !tbaa !26
  %idxprom75 = sext i32 %71 to i64
  %72 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc76 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %72, i32 0, i32 68
  %escp_data77 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc76, i32 0, i32 36
  %73 = load i8*, i8** %escp_data77, align 8, !tbaa !53
  %arrayidx78 = getelementptr inbounds i8, i8* %73, i64 %idxprom75
  store i8 %conv73, i8* %arrayidx78, align 1, !tbaa !62
  %74 = load i32, i32* %escp_used, align 4, !tbaa !26
  %inc79 = add nsw i32 %74, 1
  store i32 %inc79, i32* %escp_used, align 4, !tbaa !26
  %idxprom80 = sext i32 %74 to i64
  %75 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc81 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %75, i32 0, i32 68
  %escp_data82 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc81, i32 0, i32 36
  %76 = load i8*, i8** %escp_data82, align 8, !tbaa !53
  %arrayidx83 = getelementptr inbounds i8, i8* %76, i64 %idxprom80
  store i8 0, i8* %arrayidx83, align 1, !tbaa !62
  %77 = load i32, i32* %escp_used, align 4, !tbaa !26
  %inc84 = add nsw i32 %77, 1
  store i32 %inc84, i32* %escp_used, align 4, !tbaa !26
  %idxprom85 = sext i32 %77 to i64
  %78 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc86 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %78, i32 0, i32 68
  %escp_data87 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc86, i32 0, i32 36
  %79 = load i8*, i8** %escp_data87, align 8, !tbaa !53
  %arrayidx88 = getelementptr inbounds i8, i8* %79, i64 %idxprom85
  store i8 0, i8* %arrayidx88, align 1, !tbaa !62
  %80 = load i32, i32* %escp_used, align 4, !tbaa !26
  %inc89 = add nsw i32 %80, 1
  store i32 %inc89, i32* %escp_used, align 4, !tbaa !26
  %idxprom90 = sext i32 %80 to i64
  %81 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc91 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %81, i32 0, i32 68
  %escp_data92 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc91, i32 0, i32 36
  %82 = load i8*, i8** %escp_data92, align 8, !tbaa !53
  %arrayidx93 = getelementptr inbounds i8, i8* %82, i64 %idxprom90
  store i8 -28, i8* %arrayidx93, align 1, !tbaa !62
  br label %if.end.94

if.end.94:                                        ; preds = %if.then.38, %if.end.34
  %83 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc95 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %83, i32 0, i32 68
  %stc_y96 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc95, i32 0, i32 31
  %84 = load i32, i32* %stc_y96, align 4, !tbaa !59
  %85 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc97 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %85, i32 0, i32 68
  %prt_y = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc97, i32 0, i32 30
  %86 = load i32, i32* %prt_y, align 4, !tbaa !61
  %cmp98 = icmp ne i32 %84, %86
  br i1 %cmp98, label %if.then.100, label %if.end.156

if.then.100:                                      ; preds = %if.end.94
  %87 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc101 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %87, i32 0, i32 68
  %stc_y102 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc101, i32 0, i32 31
  %88 = load i32, i32* %stc_y102, align 4, !tbaa !59
  %89 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc103 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %89, i32 0, i32 68
  %prt_y104 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc103, i32 0, i32 30
  %90 = load i32, i32* %prt_y104, align 4, !tbaa !61
  %sub105 = sub nsw i32 %88, %90
  store i32 %sub105, i32* %w, align 4, !tbaa !26
  %91 = load i32, i32* %w, align 4, !tbaa !26
  %cmp106 = icmp slt i32 %91, 16
  br i1 %cmp106, label %if.then.108, label %if.else

if.then.108:                                      ; preds = %if.then.100
  %92 = load i32, i32* %w, align 4, !tbaa !26
  %or109 = or i32 96, %92
  %conv110 = trunc i32 %or109 to i8
  %93 = load i32, i32* %escp_used, align 4, !tbaa !26
  %inc111 = add nsw i32 %93, 1
  store i32 %inc111, i32* %escp_used, align 4, !tbaa !26
  %idxprom112 = sext i32 %93 to i64
  %94 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc113 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %94, i32 0, i32 68
  %escp_data114 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc113, i32 0, i32 36
  %95 = load i8*, i8** %escp_data114, align 8, !tbaa !53
  %arrayidx115 = getelementptr inbounds i8, i8* %95, i64 %idxprom112
  store i8 %conv110, i8* %arrayidx115, align 1, !tbaa !62
  br label %if.end.151

if.else:                                          ; preds = %if.then.100
  %96 = load i32, i32* %w, align 4, !tbaa !26
  %cmp116 = icmp slt i32 %96, 256
  br i1 %cmp116, label %if.then.118, label %if.else.130

if.then.118:                                      ; preds = %if.else
  %97 = load i32, i32* %escp_used, align 4, !tbaa !26
  %inc119 = add nsw i32 %97, 1
  store i32 %inc119, i32* %escp_used, align 4, !tbaa !26
  %idxprom120 = sext i32 %97 to i64
  %98 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc121 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %98, i32 0, i32 68
  %escp_data122 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc121, i32 0, i32 36
  %99 = load i8*, i8** %escp_data122, align 8, !tbaa !53
  %arrayidx123 = getelementptr inbounds i8, i8* %99, i64 %idxprom120
  store i8 113, i8* %arrayidx123, align 1, !tbaa !62
  %100 = load i32, i32* %w, align 4, !tbaa !26
  %conv124 = trunc i32 %100 to i8
  %101 = load i32, i32* %escp_used, align 4, !tbaa !26
  %inc125 = add nsw i32 %101, 1
  store i32 %inc125, i32* %escp_used, align 4, !tbaa !26
  %idxprom126 = sext i32 %101 to i64
  %102 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc127 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %102, i32 0, i32 68
  %escp_data128 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc127, i32 0, i32 36
  %103 = load i8*, i8** %escp_data128, align 8, !tbaa !53
  %arrayidx129 = getelementptr inbounds i8, i8* %103, i64 %idxprom126
  store i8 %conv124, i8* %arrayidx129, align 1, !tbaa !62
  br label %if.end.150

if.else.130:                                      ; preds = %if.else
  %104 = load i32, i32* %escp_used, align 4, !tbaa !26
  %inc131 = add nsw i32 %104, 1
  store i32 %inc131, i32* %escp_used, align 4, !tbaa !26
  %idxprom132 = sext i32 %104 to i64
  %105 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc133 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %105, i32 0, i32 68
  %escp_data134 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc133, i32 0, i32 36
  %106 = load i8*, i8** %escp_data134, align 8, !tbaa !53
  %arrayidx135 = getelementptr inbounds i8, i8* %106, i64 %idxprom132
  store i8 114, i8* %arrayidx135, align 1, !tbaa !62
  %107 = load i32, i32* %w, align 4, !tbaa !26
  %and136 = and i32 255, %107
  %conv137 = trunc i32 %and136 to i8
  %108 = load i32, i32* %escp_used, align 4, !tbaa !26
  %inc138 = add nsw i32 %108, 1
  store i32 %inc138, i32* %escp_used, align 4, !tbaa !26
  %idxprom139 = sext i32 %108 to i64
  %109 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc140 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %109, i32 0, i32 68
  %escp_data141 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc140, i32 0, i32 36
  %110 = load i8*, i8** %escp_data141, align 8, !tbaa !53
  %arrayidx142 = getelementptr inbounds i8, i8* %110, i64 %idxprom139
  store i8 %conv137, i8* %arrayidx142, align 1, !tbaa !62
  %111 = load i32, i32* %w, align 4, !tbaa !26
  %shr = ashr i32 %111, 8
  %and143 = and i32 255, %shr
  %conv144 = trunc i32 %and143 to i8
  %112 = load i32, i32* %escp_used, align 4, !tbaa !26
  %inc145 = add nsw i32 %112, 1
  store i32 %inc145, i32* %escp_used, align 4, !tbaa !26
  %idxprom146 = sext i32 %112 to i64
  %113 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc147 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %113, i32 0, i32 68
  %escp_data148 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc147, i32 0, i32 36
  %114 = load i8*, i8** %escp_data148, align 8, !tbaa !53
  %arrayidx149 = getelementptr inbounds i8, i8* %114, i64 %idxprom146
  store i8 %conv144, i8* %arrayidx149, align 1, !tbaa !62
  br label %if.end.150

if.end.150:                                       ; preds = %if.else.130, %if.then.118
  br label %if.end.151

if.end.151:                                       ; preds = %if.end.150, %if.then.108
  %115 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc152 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %115, i32 0, i32 68
  %stc_y153 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc152, i32 0, i32 31
  %116 = load i32, i32* %stc_y153, align 4, !tbaa !59
  %117 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc154 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %117, i32 0, i32 68
  %prt_y155 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc154, i32 0, i32 30
  store i32 %116, i32* %prt_y155, align 4, !tbaa !61
  br label %if.end.156

if.end.156:                                       ; preds = %if.end.151, %if.end.94
  store i32 0, i32* %color, align 4, !tbaa !26
  br label %for.cond.157

for.cond.157:                                     ; preds = %for.inc.224, %if.end.156
  %118 = load i32, i32* %color, align 4, !tbaa !26
  %119 = load i32, i32* %ncolor, align 4, !tbaa !26
  %cmp158 = icmp slt i32 %118, %119
  br i1 %cmp158, label %for.body.160, label %for.end.226

for.body.160:                                     ; preds = %for.cond.157
  %120 = load i32, i32* %color, align 4, !tbaa !26
  %121 = load i32, i32* %ncolor, align 4, !tbaa !26
  %sub161 = sub nsw i32 %121, 1
  %cmp162 = icmp eq i32 %120, %sub161
  br i1 %cmp162, label %if.then.164, label %if.else.170

if.then.164:                                      ; preds = %for.body.160
  %122 = load i32, i32* %escp_used, align 4, !tbaa !26
  %inc165 = add nsw i32 %122, 1
  store i32 %inc165, i32* %escp_used, align 4, !tbaa !26
  %idxprom166 = sext i32 %122 to i64
  %123 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc167 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %123, i32 0, i32 68
  %escp_data168 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc167, i32 0, i32 36
  %124 = load i8*, i8** %escp_data168, align 8, !tbaa !53
  %arrayidx169 = getelementptr inbounds i8, i8* %124, i64 %idxprom166
  store i8 -128, i8* %arrayidx169, align 1, !tbaa !62
  br label %if.end.187

if.else.170:                                      ; preds = %for.body.160
  %125 = load i32, i32* %color, align 4, !tbaa !26
  switch i32 %125, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb.176
  ]

sw.bb:                                            ; preds = %if.else.170
  %126 = load i32, i32* %escp_used, align 4, !tbaa !26
  %inc171 = add nsw i32 %126, 1
  store i32 %inc171, i32* %escp_used, align 4, !tbaa !26
  %idxprom172 = sext i32 %126 to i64
  %127 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc173 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %127, i32 0, i32 68
  %escp_data174 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc173, i32 0, i32 36
  %128 = load i8*, i8** %escp_data174, align 8, !tbaa !53
  %arrayidx175 = getelementptr inbounds i8, i8* %128, i64 %idxprom172
  store i8 -127, i8* %arrayidx175, align 1, !tbaa !62
  br label %sw.epilog

sw.bb.176:                                        ; preds = %if.else.170
  %129 = load i32, i32* %escp_used, align 4, !tbaa !26
  %inc177 = add nsw i32 %129, 1
  store i32 %inc177, i32* %escp_used, align 4, !tbaa !26
  %idxprom178 = sext i32 %129 to i64
  %130 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc179 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %130, i32 0, i32 68
  %escp_data180 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc179, i32 0, i32 36
  %131 = load i8*, i8** %escp_data180, align 8, !tbaa !53
  %arrayidx181 = getelementptr inbounds i8, i8* %131, i64 %idxprom178
  store i8 -124, i8* %arrayidx181, align 1, !tbaa !62
  br label %sw.epilog

sw.default:                                       ; preds = %if.else.170
  %132 = load i32, i32* %escp_used, align 4, !tbaa !26
  %inc182 = add nsw i32 %132, 1
  store i32 %inc182, i32* %escp_used, align 4, !tbaa !26
  %idxprom183 = sext i32 %132 to i64
  %133 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc184 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %133, i32 0, i32 68
  %escp_data185 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc184, i32 0, i32 36
  %134 = load i8*, i8** %escp_data185, align 8, !tbaa !53
  %arrayidx186 = getelementptr inbounds i8, i8* %134, i64 %idxprom183
  store i8 -126, i8* %arrayidx186, align 1, !tbaa !62
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb.176, %sw.bb
  br label %if.end.187

if.end.187:                                       ; preds = %sw.epilog, %if.then.164
  %135 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc188 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %135, i32 0, i32 68
  %prt_buf189 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc188, i32 0, i32 20
  %136 = load i32, i32* %prt_buf189, align 4, !tbaa !47
  %sub190 = sub nsw i32 %136, 1
  %137 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc191 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %137, i32 0, i32 68
  %stc_y192 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc191, i32 0, i32 31
  %138 = load i32, i32* %stc_y192, align 4, !tbaa !59
  %139 = load i32, i32* %ncolor, align 4, !tbaa !26
  %mul193 = mul nsw i32 %138, %139
  %140 = load i32, i32* %color, align 4, !tbaa !26
  %add194 = add nsw i32 %mul193, %140
  %and195 = and i32 %sub190, %add194
  store i32 %and195, i32* %buf_a, align 4, !tbaa !26
  %141 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc196 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %141, i32 0, i32 68
  %escp_data197 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc196, i32 0, i32 36
  %142 = load i8*, i8** %escp_data197, align 8, !tbaa !53
  %143 = load i32, i32* %escp_used, align 4, !tbaa !26
  %idx.ext = sext i32 %143 to i64
  %add.ptr = getelementptr inbounds i8, i8* %142, i64 %idx.ext
  %144 = load i32, i32* %buf_a, align 4, !tbaa !26
  %idxprom198 = sext i32 %144 to i64
  %145 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc199 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %145, i32 0, i32 68
  %prt_data = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc199, i32 0, i32 35
  %146 = load i8**, i8*** %prt_data, align 8, !tbaa !50
  %arrayidx200 = getelementptr inbounds i8*, i8** %146, i64 %idxprom198
  %147 = load i8*, i8** %arrayidx200, align 8, !tbaa !1
  %148 = load i32, i32* %buf_a, align 4, !tbaa !26
  %idxprom201 = sext i32 %148 to i64
  %149 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc202 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %149, i32 0, i32 68
  %prt_width203 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc202, i32 0, i32 34
  %150 = load i32*, i32** %prt_width203, align 8, !tbaa !49
  %arrayidx204 = getelementptr inbounds i32, i32* %150, i64 %idxprom201
  %151 = load i32, i32* %arrayidx204, align 4, !tbaa !26
  %152 = load i32, i32* %color, align 4, !tbaa !26
  %idxprom205 = sext i32 %152 to i64
  %153 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc206 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %153, i32 0, i32 68
  %seed_row = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc206, i32 0, i32 37
  %arrayidx207 = getelementptr inbounds [4 x i8*], [4 x i8*]* %seed_row, i32 0, i64 %idxprom205
  %154 = load i8*, i8** %arrayidx207, align 8, !tbaa !1
  %call208 = call i32 @stc_deltarow(i8* %add.ptr, i8* %147, i32 %151, i8* %154) #5
  store i32 %call208, i32* %w, align 4, !tbaa !26
  %155 = load i32, i32* %w, align 4, !tbaa !26
  %cmp209 = icmp eq i32 %155, 0
  br i1 %cmp209, label %if.then.211, label %if.else.213

if.then.211:                                      ; preds = %if.end.187
  %156 = load i32, i32* %escp_used, align 4, !tbaa !26
  %sub212 = sub nsw i32 %156, 1
  store i32 %sub212, i32* %escp_used, align 4, !tbaa !26
  br label %if.end.215

if.else.213:                                      ; preds = %if.end.187
  %157 = load i32, i32* %w, align 4, !tbaa !26
  %158 = load i32, i32* %escp_used, align 4, !tbaa !26
  %add214 = add nsw i32 %158, %157
  store i32 %add214, i32* %escp_used, align 4, !tbaa !26
  br label %if.end.215

if.end.215:                                       ; preds = %if.else.213, %if.then.211
  %159 = load i32, i32* %escp_used, align 4, !tbaa !26
  %cmp216 = icmp sgt i32 %159, 0
  br i1 %cmp216, label %if.then.218, label %if.end.223

if.then.218:                                      ; preds = %if.end.215
  %160 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc219 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %160, i32 0, i32 68
  %escp_data220 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc219, i32 0, i32 36
  %161 = load i8*, i8** %escp_data220, align 8, !tbaa !53
  %162 = load i32, i32* %escp_used, align 4, !tbaa !26
  %conv221 = sext i32 %162 to i64
  %163 = load %struct._IO_FILE*, %struct._IO_FILE** %prn_stream.addr, align 8, !tbaa !1
  %call222 = call i64 @fwrite(i8* %161, i64 1, i64 %conv221, %struct._IO_FILE* %163) #5
  br label %if.end.223

if.end.223:                                       ; preds = %if.then.218, %if.end.215
  store i32 0, i32* %escp_used, align 4, !tbaa !26
  br label %for.inc.224

for.inc.224:                                      ; preds = %if.end.223
  %164 = load i32, i32* %color, align 4, !tbaa !26
  %inc225 = add nsw i32 %164, 1
  store i32 %inc225, i32* %color, align 4, !tbaa !26
  br label %for.cond.157

for.end.226:                                      ; preds = %for.cond.157
  %165 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc227 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %165, i32 0, i32 68
  %stc_y228 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc227, i32 0, i32 31
  %166 = load i32, i32* %stc_y228, align 4, !tbaa !59
  %add229 = add nsw i32 %166, 1
  store i32 %add229, i32* %stc_y228, align 4, !tbaa !59
  br label %while.cond

while.end:                                        ; preds = %if.then.33, %while.cond
  %167 = bitcast i32* %ncolor to i8*
  call void @llvm.lifetime.end(i64 4, i8* %167) #2
  %168 = bitcast i32* %escp_used to i8*
  call void @llvm.lifetime.end(i64 4, i8* %168) #2
  %169 = bitcast i32* %w to i8*
  call void @llvm.lifetime.end(i64 4, i8* %169) #2
  %170 = bitcast i32* %buf_a to i8*
  call void @llvm.lifetime.end(i64 4, i8* %170) #2
  %171 = bitcast i32* %color to i8*
  call void @llvm.lifetime.end(i64 4, i8* %171) #2
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @stc_print_weave(%struct.stcolor_device_s* %sd, %struct._IO_FILE* %prn_stream) #1 {
entry:
  %sd.addr = alloca %struct.stcolor_device_s*, align 8
  %prn_stream.addr = alloca %struct._IO_FILE*, align 8
  %escp_used = alloca i32, align 4
  %nprint = alloca i32, align 4
  %nspace = alloca i32, align 4
  %color = alloca i32, align 4
  %buf_a = alloca i32, align 4
  %iprint = alloca i32, align 4
  %w = alloca i32, align 4
  %npass = alloca i32, align 4
  %ncolor = alloca i32, align 4
  store %struct.stcolor_device_s* %sd, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  store %struct._IO_FILE* %prn_stream, %struct._IO_FILE** %prn_stream.addr, align 8, !tbaa !1
  %0 = bitcast i32* %escp_used to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = bitcast i32* %nprint to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #2
  %2 = bitcast i32* %nspace to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #2
  %3 = bitcast i32* %color to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #2
  %4 = bitcast i32* %buf_a to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #2
  %5 = bitcast i32* %iprint to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #2
  %6 = bitcast i32* %w to i8*
  call void @llvm.lifetime.start(i64 4, i8* %6) #2
  %7 = bitcast i32* %npass to i8*
  call void @llvm.lifetime.start(i64 4, i8* %7) #2
  %8 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %8, i32 0, i32 68
  %escp_v = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc, i32 0, i32 26
  %9 = load i32, i32* %escp_v, align 4, !tbaa !27
  %10 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc1 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %10, i32 0, i32 68
  %escp_u = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc1, i32 0, i32 24
  %11 = load i32, i32* %escp_u, align 4, !tbaa !28
  %div = sdiv i32 %9, %11
  store i32 %div, i32* %npass, align 4, !tbaa !26
  %12 = bitcast i32* %ncolor to i8*
  call void @llvm.lifetime.start(i64 4, i8* %12) #2
  %13 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %color_info = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %13, i32 0, i32 11
  %num_components = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info, i32 0, i32 1
  %14 = load i32, i32* %num_components, align 4, !tbaa !40
  %cmp = icmp eq i32 %14, 1
  %cond = select i1 %cmp, i32 1, i32 4
  store i32 %cond, i32* %ncolor, align 4, !tbaa !26
  br label %while.cond

while.cond:                                       ; preds = %for.end.129, %entry
  %15 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc2 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %15, i32 0, i32 68
  %stc_y = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2, i32 0, i32 31
  %16 = load i32, i32* %stc_y, align 4, !tbaa !59
  %17 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc3 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %17, i32 0, i32 68
  %prt_scans = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc3, i32 0, i32 33
  %18 = load i32, i32* %prt_scans, align 4, !tbaa !39
  %cmp4 = icmp slt i32 %16, %18
  br i1 %cmp4, label %while.body, label %while.end.133

while.body:                                       ; preds = %while.cond
  %19 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc5 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %19, i32 0, i32 68
  %stc_y6 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc5, i32 0, i32 31
  %20 = load i32, i32* %stc_y6, align 4, !tbaa !59
  %21 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc7 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %21, i32 0, i32 68
  %escp_m = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc7, i32 0, i32 28
  %22 = load i32, i32* %escp_m, align 4, !tbaa !48
  %cmp8 = icmp sge i32 %20, %22
  br i1 %cmp8, label %if.then, label %if.else

if.then:                                          ; preds = %while.body
  %23 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc9 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %23, i32 0, i32 68
  %escp_m10 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc9, i32 0, i32 28
  %24 = load i32, i32* %escp_m10, align 4, !tbaa !48
  store i32 %24, i32* %nprint, align 4, !tbaa !26
  %25 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc11 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %25, i32 0, i32 68
  %escp_m12 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc11, i32 0, i32 28
  %26 = load i32, i32* %escp_m12, align 4, !tbaa !48
  store i32 %26, i32* %nspace, align 4, !tbaa !26
  br label %if.end.40

if.else:                                          ; preds = %while.body
  %27 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc13 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %27, i32 0, i32 68
  %stc_y14 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc13, i32 0, i32 31
  %28 = load i32, i32* %stc_y14, align 4, !tbaa !59
  %29 = load i32, i32* %npass, align 4, !tbaa !26
  %cmp15 = icmp slt i32 %28, %29
  br i1 %cmp15, label %if.then.16, label %if.else.24

if.then.16:                                       ; preds = %if.else
  %30 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc17 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %30, i32 0, i32 68
  %escp_m18 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc17, i32 0, i32 28
  %31 = load i32, i32* %escp_m18, align 4, !tbaa !48
  %32 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc19 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %32, i32 0, i32 68
  %stc_y20 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc19, i32 0, i32 31
  %33 = load i32, i32* %stc_y20, align 4, !tbaa !59
  %34 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc21 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %34, i32 0, i32 68
  %escp_m22 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc21, i32 0, i32 28
  %35 = load i32, i32* %escp_m22, align 4, !tbaa !48
  %add = add nsw i32 %35, 1
  %36 = load i32, i32* %npass, align 4, !tbaa !26
  %div23 = sdiv i32 %add, %36
  %mul = mul nsw i32 %33, %div23
  %sub = sub nsw i32 %31, %mul
  store i32 %sub, i32* %nprint, align 4, !tbaa !26
  store i32 1, i32* %nspace, align 4, !tbaa !26
  br label %if.end

if.else.24:                                       ; preds = %if.else
  %37 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc25 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %37, i32 0, i32 68
  %escp_m26 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc25, i32 0, i32 28
  %38 = load i32, i32* %escp_m26, align 4, !tbaa !48
  %39 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc27 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %39, i32 0, i32 68
  %stc_y28 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc27, i32 0, i32 31
  %40 = load i32, i32* %stc_y28, align 4, !tbaa !59
  %41 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc29 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %41, i32 0, i32 68
  %escp_m30 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc29, i32 0, i32 28
  %42 = load i32, i32* %escp_m30, align 4, !tbaa !48
  %add31 = add nsw i32 %42, 1
  %43 = load i32, i32* %npass, align 4, !tbaa !26
  %div32 = sdiv i32 %add31, %43
  %mul33 = mul nsw i32 %40, %div32
  %sub34 = sub nsw i32 %38, %mul33
  store i32 %sub34, i32* %nprint, align 4, !tbaa !26
  %44 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc35 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %44, i32 0, i32 68
  %escp_m36 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc35, i32 0, i32 28
  %45 = load i32, i32* %escp_m36, align 4, !tbaa !48
  %46 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc37 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %46, i32 0, i32 68
  %stc_y38 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc37, i32 0, i32 31
  %47 = load i32, i32* %stc_y38, align 4, !tbaa !59
  %sub39 = sub nsw i32 %45, %47
  store i32 %sub39, i32* %nspace, align 4, !tbaa !26
  br label %if.end

if.end:                                           ; preds = %if.else.24, %if.then.16
  br label %if.end.40

if.end.40:                                        ; preds = %if.end, %if.then
  %48 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc41 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %48, i32 0, i32 68
  %stc_y42 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc41, i32 0, i32 31
  %49 = load i32, i32* %stc_y42, align 4, !tbaa !59
  %50 = load i32, i32* %npass, align 4, !tbaa !26
  %51 = load i32, i32* %nprint, align 4, !tbaa !26
  %mul43 = mul nsw i32 %50, %51
  %add44 = add nsw i32 %49, %mul43
  store i32 %add44, i32* %iprint, align 4, !tbaa !26
  %52 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc45 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %52, i32 0, i32 68
  %buf_y = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc45, i32 0, i32 32
  %53 = load i32, i32* %buf_y, align 4, !tbaa !60
  %54 = load i32, i32* %iprint, align 4, !tbaa !26
  %cmp46 = icmp slt i32 %53, %54
  br i1 %cmp46, label %if.then.47, label %if.end.48

if.then.47:                                       ; preds = %if.end.40
  br label %while.end.133

if.end.48:                                        ; preds = %if.end.40
  store i32 0, i32* %escp_used, align 4, !tbaa !26
  store i32 0, i32* %color, align 4, !tbaa !26
  br label %for.cond

for.cond:                                         ; preds = %for.inc.127, %if.end.48
  %55 = load i32, i32* %color, align 4, !tbaa !26
  %56 = load i32, i32* %ncolor, align 4, !tbaa !26
  %cmp49 = icmp slt i32 %55, %56
  br i1 %cmp49, label %for.body, label %for.end.129

for.body:                                         ; preds = %for.cond
  %57 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %58 = load i32, i32* %color, align 4, !tbaa !26
  %59 = load i32, i32* %nprint, align 4, !tbaa !26
  %60 = load i32, i32* %npass, align 4, !tbaa !26
  %call = call i32 @stc_bandwidth(%struct.stcolor_device_s* %57, i32 %58, i32 %59, i32 %60) #5
  store i32 %call, i32* %w, align 4, !tbaa !26
  %cmp50 = icmp eq i32 0, %call
  br i1 %cmp50, label %if.then.51, label %if.end.52

if.then.51:                                       ; preds = %for.body
  br label %for.inc.127

if.end.52:                                        ; preds = %for.body
  %61 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %62 = load %struct._IO_FILE*, %struct._IO_FILE** %prn_stream.addr, align 8, !tbaa !1
  %63 = load i32, i32* %escp_used, align 4, !tbaa !26
  %64 = load i32, i32* %color, align 4, !tbaa !26
  %65 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc53 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %65, i32 0, i32 68
  %escp_m54 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc53, i32 0, i32 28
  %66 = load i32, i32* %escp_m54, align 4, !tbaa !48
  %67 = load i32, i32* %w, align 4, !tbaa !26
  %call55 = call i32 @stc_print_escpcmd(%struct.stcolor_device_s* %61, %struct._IO_FILE* %62, i32 %63, i32 %64, i32 %66, i32 %67) #5
  store i32 %call55, i32* %escp_used, align 4, !tbaa !26
  %68 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc56 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %68, i32 0, i32 68
  %prt_buf = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc56, i32 0, i32 20
  %69 = load i32, i32* %prt_buf, align 4, !tbaa !47
  %sub57 = sub nsw i32 %69, 1
  %70 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc58 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %70, i32 0, i32 68
  %stc_y59 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc58, i32 0, i32 31
  %71 = load i32, i32* %stc_y59, align 4, !tbaa !59
  %72 = load i32, i32* %ncolor, align 4, !tbaa !26
  %mul60 = mul nsw i32 %71, %72
  %73 = load i32, i32* %color, align 4, !tbaa !26
  %add61 = add nsw i32 %mul60, %73
  %and = and i32 %sub57, %add61
  store i32 %and, i32* %buf_a, align 4, !tbaa !26
  store i32 0, i32* %iprint, align 4, !tbaa !26
  br label %for.cond.62

for.cond.62:                                      ; preds = %for.inc, %if.end.52
  %74 = load i32, i32* %iprint, align 4, !tbaa !26
  %75 = load i32, i32* %nprint, align 4, !tbaa !26
  %cmp63 = icmp slt i32 %74, %75
  br i1 %cmp63, label %for.body.64, label %for.end

for.body.64:                                      ; preds = %for.cond.62
  %76 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc65 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %76, i32 0, i32 68
  %flags = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc65, i32 0, i32 0
  %77 = load i64, i64* %flags, align 8, !tbaa !5
  %and66 = and i64 %77, 3072
  %cmp67 = icmp eq i64 %and66, 1024
  br i1 %cmp67, label %if.then.68, label %if.else.73

if.then.68:                                       ; preds = %for.body.64
  %78 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc69 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %78, i32 0, i32 68
  %escp_data = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc69, i32 0, i32 36
  %79 = load i8*, i8** %escp_data, align 8, !tbaa !53
  %80 = load i32, i32* %escp_used, align 4, !tbaa !26
  %idx.ext = sext i32 %80 to i64
  %add.ptr = getelementptr inbounds i8, i8* %79, i64 %idx.ext
  %81 = load i32, i32* %buf_a, align 4, !tbaa !26
  %idxprom = sext i32 %81 to i64
  %82 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc70 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %82, i32 0, i32 68
  %prt_data = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc70, i32 0, i32 35
  %83 = load i8**, i8*** %prt_data, align 8, !tbaa !50
  %arrayidx = getelementptr inbounds i8*, i8** %83, i64 %idxprom
  %84 = load i8*, i8** %arrayidx, align 8, !tbaa !1
  %85 = load i32, i32* %w, align 4, !tbaa !26
  %conv = sext i32 %85 to i64
  %call71 = call i8* @memcpy(i8* %add.ptr, i8* %84, i64 %conv) #6
  %86 = load i32, i32* %w, align 4, !tbaa !26
  %87 = load i32, i32* %escp_used, align 4, !tbaa !26
  %add72 = add nsw i32 %87, %86
  store i32 %add72, i32* %escp_used, align 4, !tbaa !26
  br label %if.end.84

if.else.73:                                       ; preds = %for.body.64
  %88 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc74 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %88, i32 0, i32 68
  %escp_data75 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc74, i32 0, i32 36
  %89 = load i8*, i8** %escp_data75, align 8, !tbaa !53
  %90 = load i32, i32* %escp_used, align 4, !tbaa !26
  %idx.ext76 = sext i32 %90 to i64
  %add.ptr77 = getelementptr inbounds i8, i8* %89, i64 %idx.ext76
  %91 = load i32, i32* %buf_a, align 4, !tbaa !26
  %idxprom78 = sext i32 %91 to i64
  %92 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc79 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %92, i32 0, i32 68
  %prt_data80 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc79, i32 0, i32 35
  %93 = load i8**, i8*** %prt_data80, align 8, !tbaa !50
  %arrayidx81 = getelementptr inbounds i8*, i8** %93, i64 %idxprom78
  %94 = load i8*, i8** %arrayidx81, align 8, !tbaa !1
  %95 = load i32, i32* %w, align 4, !tbaa !26
  %call82 = call i32 @stc_rle(i8* %add.ptr77, i8* %94, i32 %95) #5
  %96 = load i32, i32* %escp_used, align 4, !tbaa !26
  %add83 = add nsw i32 %96, %call82
  store i32 %add83, i32* %escp_used, align 4, !tbaa !26
  br label %if.end.84

if.end.84:                                        ; preds = %if.else.73, %if.then.68
  %97 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc85 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %97, i32 0, i32 68
  %escp_data86 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc85, i32 0, i32 36
  %98 = load i8*, i8** %escp_data86, align 8, !tbaa !53
  %99 = load i32, i32* %escp_used, align 4, !tbaa !26
  %conv87 = sext i32 %99 to i64
  %100 = load %struct._IO_FILE*, %struct._IO_FILE** %prn_stream.addr, align 8, !tbaa !1
  %call88 = call i64 @fwrite(i8* %98, i64 1, i64 %conv87, %struct._IO_FILE* %100) #5
  store i32 0, i32* %escp_used, align 4, !tbaa !26
  %101 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc89 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %101, i32 0, i32 68
  %prt_buf90 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc89, i32 0, i32 20
  %102 = load i32, i32* %prt_buf90, align 4, !tbaa !47
  %sub91 = sub nsw i32 %102, 1
  %103 = load i32, i32* %buf_a, align 4, !tbaa !26
  %104 = load i32, i32* %ncolor, align 4, !tbaa !26
  %105 = load i32, i32* %npass, align 4, !tbaa !26
  %mul92 = mul nsw i32 %104, %105
  %add93 = add nsw i32 %103, %mul92
  %and94 = and i32 %sub91, %add93
  store i32 %and94, i32* %buf_a, align 4, !tbaa !26
  br label %for.inc

for.inc:                                          ; preds = %if.end.84
  %106 = load i32, i32* %iprint, align 4, !tbaa !26
  %inc = add nsw i32 %106, 1
  store i32 %inc, i32* %iprint, align 4, !tbaa !26
  br label %for.cond.62

for.end:                                          ; preds = %for.cond.62
  br label %while.cond.95

while.cond.95:                                    ; preds = %if.end.122, %for.end
  %107 = load i32, i32* %iprint, align 4, !tbaa !26
  %inc96 = add nsw i32 %107, 1
  store i32 %inc96, i32* %iprint, align 4, !tbaa !26
  %108 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc97 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %108, i32 0, i32 68
  %escp_m98 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc97, i32 0, i32 28
  %109 = load i32, i32* %escp_m98, align 4, !tbaa !48
  %cmp99 = icmp slt i32 %107, %109
  br i1 %cmp99, label %while.body.101, label %while.end

while.body.101:                                   ; preds = %while.cond.95
  %110 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc102 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %110, i32 0, i32 68
  %flags103 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc102, i32 0, i32 0
  %111 = load i64, i64* %flags103, align 8, !tbaa !5
  %and104 = and i64 %111, 3072
  %cmp105 = icmp eq i64 %and104, 1024
  br i1 %cmp105, label %if.then.107, label %if.else.115

if.then.107:                                      ; preds = %while.body.101
  %112 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc108 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %112, i32 0, i32 68
  %escp_data109 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc108, i32 0, i32 36
  %113 = load i8*, i8** %escp_data109, align 8, !tbaa !53
  %114 = load i32, i32* %escp_used, align 4, !tbaa !26
  %idx.ext110 = sext i32 %114 to i64
  %add.ptr111 = getelementptr inbounds i8, i8* %113, i64 %idx.ext110
  %115 = load i32, i32* %w, align 4, !tbaa !26
  %conv112 = sext i32 %115 to i64
  %call113 = call i8* @memset(i8* %add.ptr111, i32 0, i64 %conv112) #6
  %116 = load i32, i32* %w, align 4, !tbaa !26
  %117 = load i32, i32* %escp_used, align 4, !tbaa !26
  %add114 = add nsw i32 %117, %116
  store i32 %add114, i32* %escp_used, align 4, !tbaa !26
  br label %if.end.122

if.else.115:                                      ; preds = %while.body.101
  %118 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc116 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %118, i32 0, i32 68
  %escp_data117 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc116, i32 0, i32 36
  %119 = load i8*, i8** %escp_data117, align 8, !tbaa !53
  %120 = load i32, i32* %escp_used, align 4, !tbaa !26
  %idx.ext118 = sext i32 %120 to i64
  %add.ptr119 = getelementptr inbounds i8, i8* %119, i64 %idx.ext118
  %121 = load i32, i32* %w, align 4, !tbaa !26
  %call120 = call i32 @stc_rle(i8* %add.ptr119, i8* null, i32 %121) #5
  %122 = load i32, i32* %escp_used, align 4, !tbaa !26
  %add121 = add nsw i32 %122, %call120
  store i32 %add121, i32* %escp_used, align 4, !tbaa !26
  br label %if.end.122

if.end.122:                                       ; preds = %if.else.115, %if.then.107
  %123 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc123 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %123, i32 0, i32 68
  %escp_data124 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc123, i32 0, i32 36
  %124 = load i8*, i8** %escp_data124, align 8, !tbaa !53
  %125 = load i32, i32* %escp_used, align 4, !tbaa !26
  %conv125 = sext i32 %125 to i64
  %126 = load %struct._IO_FILE*, %struct._IO_FILE** %prn_stream.addr, align 8, !tbaa !1
  %call126 = call i64 @fwrite(i8* %124, i64 1, i64 %conv125, %struct._IO_FILE* %126) #5
  store i32 0, i32* %escp_used, align 4, !tbaa !26
  br label %while.cond.95

while.end:                                        ; preds = %while.cond.95
  br label %for.inc.127

for.inc.127:                                      ; preds = %while.end, %if.then.51
  %127 = load i32, i32* %color, align 4, !tbaa !26
  %inc128 = add nsw i32 %127, 1
  store i32 %inc128, i32* %color, align 4, !tbaa !26
  br label %for.cond

for.end.129:                                      ; preds = %for.cond
  %128 = load i32, i32* %nspace, align 4, !tbaa !26
  %129 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc130 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %129, i32 0, i32 68
  %stc_y131 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc130, i32 0, i32 31
  %130 = load i32, i32* %stc_y131, align 4, !tbaa !59
  %add132 = add nsw i32 %130, %128
  store i32 %add132, i32* %stc_y131, align 4, !tbaa !59
  br label %while.cond

while.end.133:                                    ; preds = %if.then.47, %while.cond
  %131 = bitcast i32* %ncolor to i8*
  call void @llvm.lifetime.end(i64 4, i8* %131) #2
  %132 = bitcast i32* %npass to i8*
  call void @llvm.lifetime.end(i64 4, i8* %132) #2
  %133 = bitcast i32* %w to i8*
  call void @llvm.lifetime.end(i64 4, i8* %133) #2
  %134 = bitcast i32* %iprint to i8*
  call void @llvm.lifetime.end(i64 4, i8* %134) #2
  %135 = bitcast i32* %buf_a to i8*
  call void @llvm.lifetime.end(i64 4, i8* %135) #2
  %136 = bitcast i32* %color to i8*
  call void @llvm.lifetime.end(i64 4, i8* %136) #2
  %137 = bitcast i32* %nspace to i8*
  call void @llvm.lifetime.end(i64 4, i8* %137) #2
  %138 = bitcast i32* %nprint to i8*
  call void @llvm.lifetime.end(i64 4, i8* %138) #2
  %139 = bitcast i32* %escp_used to i8*
  call void @llvm.lifetime.end(i64 4, i8* %139) #2
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @stc_print_bands(%struct.stcolor_device_s* %sd, %struct._IO_FILE* %prn_stream) #1 {
entry:
  %sd.addr = alloca %struct.stcolor_device_s*, align 8
  %prn_stream.addr = alloca %struct._IO_FILE*, align 8
  %escp_used = alloca i32, align 4
  %color = alloca i32, align 4
  %buf_a = alloca i32, align 4
  %iprint = alloca i32, align 4
  %w = alloca i32, align 4
  %m = alloca i32, align 4
  %ncolor = alloca i32, align 4
  store %struct.stcolor_device_s* %sd, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  store %struct._IO_FILE* %prn_stream, %struct._IO_FILE** %prn_stream.addr, align 8, !tbaa !1
  %0 = bitcast i32* %escp_used to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = bitcast i32* %color to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #2
  %2 = bitcast i32* %buf_a to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #2
  %3 = bitcast i32* %iprint to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #2
  %4 = bitcast i32* %w to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #2
  %5 = bitcast i32* %m to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #2
  %6 = bitcast i32* %ncolor to i8*
  call void @llvm.lifetime.start(i64 4, i8* %6) #2
  %7 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %color_info = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %7, i32 0, i32 11
  %num_components = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info, i32 0, i32 1
  %8 = load i32, i32* %num_components, align 4, !tbaa !40
  %cmp = icmp eq i32 %8, 1
  %cond = select i1 %cmp, i32 1, i32 4
  store i32 %cond, i32* %ncolor, align 4, !tbaa !26
  br label %while.cond

while.cond:                                       ; preds = %for.end.114, %entry
  %9 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %9, i32 0, i32 68
  %stc_y = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc, i32 0, i32 31
  %10 = load i32, i32* %stc_y, align 4, !tbaa !59
  %11 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc1 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %11, i32 0, i32 68
  %prt_scans = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc1, i32 0, i32 33
  %12 = load i32, i32* %prt_scans, align 4, !tbaa !39
  %cmp2 = icmp slt i32 %10, %12
  br i1 %cmp2, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  store i32 0, i32* %w, align 4, !tbaa !26
  br label %for.cond

for.cond:                                         ; preds = %for.inc.23, %while.body
  %13 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc3 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %13, i32 0, i32 68
  %stc_y4 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc3, i32 0, i32 31
  %14 = load i32, i32* %stc_y4, align 4, !tbaa !59
  %15 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc5 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %15, i32 0, i32 68
  %buf_y = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc5, i32 0, i32 32
  %16 = load i32, i32* %buf_y, align 4, !tbaa !60
  %cmp6 = icmp slt i32 %14, %16
  br i1 %cmp6, label %for.body, label %for.end.27

for.body:                                         ; preds = %for.cond
  %17 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc7 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %17, i32 0, i32 68
  %prt_buf = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc7, i32 0, i32 20
  %18 = load i32, i32* %prt_buf, align 4, !tbaa !47
  %sub = sub nsw i32 %18, 1
  %19 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc8 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %19, i32 0, i32 68
  %stc_y9 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc8, i32 0, i32 31
  %20 = load i32, i32* %stc_y9, align 4, !tbaa !59
  %21 = load i32, i32* %ncolor, align 4, !tbaa !26
  %mul = mul nsw i32 %20, %21
  %and = and i32 %sub, %mul
  store i32 %and, i32* %buf_a, align 4, !tbaa !26
  store i32 0, i32* %color, align 4, !tbaa !26
  br label %for.cond.10

for.cond.10:                                      ; preds = %for.inc, %for.body
  %22 = load i32, i32* %color, align 4, !tbaa !26
  %23 = load i32, i32* %ncolor, align 4, !tbaa !26
  %cmp11 = icmp slt i32 %22, %23
  br i1 %cmp11, label %for.body.12, label %for.end

for.body.12:                                      ; preds = %for.cond.10
  %24 = load i32, i32* %buf_a, align 4, !tbaa !26
  %25 = load i32, i32* %color, align 4, !tbaa !26
  %add = add nsw i32 %24, %25
  %idxprom = sext i32 %add to i64
  %26 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc13 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %26, i32 0, i32 68
  %prt_width = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc13, i32 0, i32 34
  %27 = load i32*, i32** %prt_width, align 8, !tbaa !49
  %arrayidx = getelementptr inbounds i32, i32* %27, i64 %idxprom
  %28 = load i32, i32* %arrayidx, align 4, !tbaa !26
  %29 = load i32, i32* %w, align 4, !tbaa !26
  %cmp14 = icmp sgt i32 %28, %29
  br i1 %cmp14, label %if.then, label %if.end

if.then:                                          ; preds = %for.body.12
  %30 = load i32, i32* %buf_a, align 4, !tbaa !26
  %31 = load i32, i32* %color, align 4, !tbaa !26
  %add15 = add nsw i32 %30, %31
  %idxprom16 = sext i32 %add15 to i64
  %32 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc17 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %32, i32 0, i32 68
  %prt_width18 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc17, i32 0, i32 34
  %33 = load i32*, i32** %prt_width18, align 8, !tbaa !49
  %arrayidx19 = getelementptr inbounds i32, i32* %33, i64 %idxprom16
  %34 = load i32, i32* %arrayidx19, align 4, !tbaa !26
  store i32 %34, i32* %w, align 4, !tbaa !26
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body.12
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %35 = load i32, i32* %color, align 4, !tbaa !26
  %inc = add nsw i32 %35, 1
  store i32 %inc, i32* %color, align 4, !tbaa !26
  br label %for.cond.10

for.end:                                          ; preds = %for.cond.10
  %36 = load i32, i32* %w, align 4, !tbaa !26
  %cmp20 = icmp ne i32 %36, 0
  br i1 %cmp20, label %if.then.21, label %if.end.22

if.then.21:                                       ; preds = %for.end
  br label %for.end.27

if.end.22:                                        ; preds = %for.end
  br label %for.inc.23

for.inc.23:                                       ; preds = %if.end.22
  %37 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc24 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %37, i32 0, i32 68
  %stc_y25 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc24, i32 0, i32 31
  %38 = load i32, i32* %stc_y25, align 4, !tbaa !59
  %inc26 = add nsw i32 %38, 1
  store i32 %inc26, i32* %stc_y25, align 4, !tbaa !59
  br label %for.cond

for.end.27:                                       ; preds = %if.then.21, %for.cond
  %39 = load i32, i32* %w, align 4, !tbaa !26
  %cmp28 = icmp eq i32 %39, 0
  br i1 %cmp28, label %if.then.29, label %if.end.30

if.then.29:                                       ; preds = %for.end.27
  br label %while.end

if.end.30:                                        ; preds = %for.end.27
  %40 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc31 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %40, i32 0, i32 68
  %prt_scans32 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc31, i32 0, i32 33
  %41 = load i32, i32* %prt_scans32, align 4, !tbaa !39
  %42 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc33 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %42, i32 0, i32 68
  %stc_y34 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc33, i32 0, i32 31
  %43 = load i32, i32* %stc_y34, align 4, !tbaa !59
  %sub35 = sub nsw i32 %41, %43
  store i32 %sub35, i32* %w, align 4, !tbaa !26
  %44 = load i32, i32* %w, align 4, !tbaa !26
  %45 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc36 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %45, i32 0, i32 68
  %escp_m = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc36, i32 0, i32 28
  %46 = load i32, i32* %escp_m, align 4, !tbaa !48
  %cmp37 = icmp slt i32 %44, %46
  br i1 %cmp37, label %land.lhs.true, label %if.else.48

land.lhs.true:                                    ; preds = %if.end.30
  %47 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc38 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %47, i32 0, i32 68
  %escp_v = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc38, i32 0, i32 26
  %48 = load i32, i32* %escp_v, align 4, !tbaa !27
  %cmp39 = icmp ne i32 %48, 40
  br i1 %cmp39, label %if.then.40, label %if.else.48

if.then.40:                                       ; preds = %land.lhs.true
  %49 = load i32, i32* %w, align 4, !tbaa !26
  %cmp41 = icmp slt i32 %49, 8
  br i1 %cmp41, label %if.then.42, label %if.else

if.then.42:                                       ; preds = %if.then.40
  store i32 1, i32* %m, align 4, !tbaa !26
  br label %if.end.47

if.else:                                          ; preds = %if.then.40
  %50 = load i32, i32* %w, align 4, !tbaa !26
  %cmp43 = icmp slt i32 %50, 24
  br i1 %cmp43, label %if.then.44, label %if.else.45

if.then.44:                                       ; preds = %if.else
  store i32 8, i32* %m, align 4, !tbaa !26
  br label %if.end.46

if.else.45:                                       ; preds = %if.else
  store i32 24, i32* %m, align 4, !tbaa !26
  br label %if.end.46

if.end.46:                                        ; preds = %if.else.45, %if.then.44
  br label %if.end.47

if.end.47:                                        ; preds = %if.end.46, %if.then.42
  br label %if.end.51

if.else.48:                                       ; preds = %land.lhs.true, %if.end.30
  %51 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc49 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %51, i32 0, i32 68
  %escp_m50 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc49, i32 0, i32 28
  %52 = load i32, i32* %escp_m50, align 4, !tbaa !48
  store i32 %52, i32* %m, align 4, !tbaa !26
  br label %if.end.51

if.end.51:                                        ; preds = %if.else.48, %if.end.47
  %53 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc52 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %53, i32 0, i32 68
  %buf_y53 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc52, i32 0, i32 32
  %54 = load i32, i32* %buf_y53, align 4, !tbaa !60
  %55 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc54 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %55, i32 0, i32 68
  %stc_y55 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc54, i32 0, i32 31
  %56 = load i32, i32* %stc_y55, align 4, !tbaa !59
  %57 = load i32, i32* %m, align 4, !tbaa !26
  %add56 = add nsw i32 %56, %57
  %cmp57 = icmp slt i32 %54, %add56
  br i1 %cmp57, label %if.then.58, label %if.end.59

if.then.58:                                       ; preds = %if.end.51
  br label %while.end

if.end.59:                                        ; preds = %if.end.51
  store i32 0, i32* %escp_used, align 4, !tbaa !26
  store i32 0, i32* %color, align 4, !tbaa !26
  br label %for.cond.60

for.cond.60:                                      ; preds = %for.inc.112, %if.end.59
  %58 = load i32, i32* %color, align 4, !tbaa !26
  %59 = load i32, i32* %ncolor, align 4, !tbaa !26
  %cmp61 = icmp slt i32 %58, %59
  br i1 %cmp61, label %for.body.62, label %for.end.114

for.body.62:                                      ; preds = %for.cond.60
  %60 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %61 = load i32, i32* %color, align 4, !tbaa !26
  %62 = load i32, i32* %m, align 4, !tbaa !26
  %call = call i32 @stc_bandwidth(%struct.stcolor_device_s* %60, i32 %61, i32 %62, i32 1) #5
  store i32 %call, i32* %w, align 4, !tbaa !26
  %cmp63 = icmp eq i32 0, %call
  br i1 %cmp63, label %if.then.64, label %if.end.65

if.then.64:                                       ; preds = %for.body.62
  br label %for.inc.112

if.end.65:                                        ; preds = %for.body.62
  %63 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %64 = load %struct._IO_FILE*, %struct._IO_FILE** %prn_stream.addr, align 8, !tbaa !1
  %65 = load i32, i32* %escp_used, align 4, !tbaa !26
  %66 = load i32, i32* %color, align 4, !tbaa !26
  %67 = load i32, i32* %m, align 4, !tbaa !26
  %68 = load i32, i32* %w, align 4, !tbaa !26
  %call66 = call i32 @stc_print_escpcmd(%struct.stcolor_device_s* %63, %struct._IO_FILE* %64, i32 %65, i32 %66, i32 %67, i32 %68) #5
  store i32 %call66, i32* %escp_used, align 4, !tbaa !26
  %69 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc67 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %69, i32 0, i32 68
  %prt_buf68 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc67, i32 0, i32 20
  %70 = load i32, i32* %prt_buf68, align 4, !tbaa !47
  %sub69 = sub nsw i32 %70, 1
  %71 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc70 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %71, i32 0, i32 68
  %stc_y71 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc70, i32 0, i32 31
  %72 = load i32, i32* %stc_y71, align 4, !tbaa !59
  %73 = load i32, i32* %ncolor, align 4, !tbaa !26
  %mul72 = mul nsw i32 %72, %73
  %74 = load i32, i32* %color, align 4, !tbaa !26
  %add73 = add nsw i32 %mul72, %74
  %and74 = and i32 %sub69, %add73
  store i32 %and74, i32* %buf_a, align 4, !tbaa !26
  store i32 0, i32* %iprint, align 4, !tbaa !26
  br label %for.cond.75

for.cond.75:                                      ; preds = %for.inc.109, %if.end.65
  %75 = load i32, i32* %iprint, align 4, !tbaa !26
  %76 = load i32, i32* %m, align 4, !tbaa !26
  %cmp76 = icmp slt i32 %75, %76
  br i1 %cmp76, label %for.body.77, label %for.end.111

for.body.77:                                      ; preds = %for.cond.75
  %77 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc78 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %77, i32 0, i32 68
  %flags = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc78, i32 0, i32 0
  %78 = load i64, i64* %flags, align 8, !tbaa !5
  %and79 = and i64 %78, 3072
  %cmp80 = icmp eq i64 %and79, 1024
  br i1 %cmp80, label %if.then.81, label %if.else.88

if.then.81:                                       ; preds = %for.body.77
  %79 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc82 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %79, i32 0, i32 68
  %escp_data = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc82, i32 0, i32 36
  %80 = load i8*, i8** %escp_data, align 8, !tbaa !53
  %81 = load i32, i32* %escp_used, align 4, !tbaa !26
  %idx.ext = sext i32 %81 to i64
  %add.ptr = getelementptr inbounds i8, i8* %80, i64 %idx.ext
  %82 = load i32, i32* %buf_a, align 4, !tbaa !26
  %idxprom83 = sext i32 %82 to i64
  %83 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc84 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %83, i32 0, i32 68
  %prt_data = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc84, i32 0, i32 35
  %84 = load i8**, i8*** %prt_data, align 8, !tbaa !50
  %arrayidx85 = getelementptr inbounds i8*, i8** %84, i64 %idxprom83
  %85 = load i8*, i8** %arrayidx85, align 8, !tbaa !1
  %86 = load i32, i32* %w, align 4, !tbaa !26
  %conv = sext i32 %86 to i64
  %call86 = call i8* @memcpy(i8* %add.ptr, i8* %85, i64 %conv) #6
  %87 = load i32, i32* %w, align 4, !tbaa !26
  %88 = load i32, i32* %escp_used, align 4, !tbaa !26
  %add87 = add nsw i32 %88, %87
  store i32 %add87, i32* %escp_used, align 4, !tbaa !26
  br label %if.end.99

if.else.88:                                       ; preds = %for.body.77
  %89 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc89 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %89, i32 0, i32 68
  %escp_data90 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc89, i32 0, i32 36
  %90 = load i8*, i8** %escp_data90, align 8, !tbaa !53
  %91 = load i32, i32* %escp_used, align 4, !tbaa !26
  %idx.ext91 = sext i32 %91 to i64
  %add.ptr92 = getelementptr inbounds i8, i8* %90, i64 %idx.ext91
  %92 = load i32, i32* %buf_a, align 4, !tbaa !26
  %idxprom93 = sext i32 %92 to i64
  %93 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc94 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %93, i32 0, i32 68
  %prt_data95 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc94, i32 0, i32 35
  %94 = load i8**, i8*** %prt_data95, align 8, !tbaa !50
  %arrayidx96 = getelementptr inbounds i8*, i8** %94, i64 %idxprom93
  %95 = load i8*, i8** %arrayidx96, align 8, !tbaa !1
  %96 = load i32, i32* %w, align 4, !tbaa !26
  %call97 = call i32 @stc_rle(i8* %add.ptr92, i8* %95, i32 %96) #5
  %97 = load i32, i32* %escp_used, align 4, !tbaa !26
  %add98 = add nsw i32 %97, %call97
  store i32 %add98, i32* %escp_used, align 4, !tbaa !26
  br label %if.end.99

if.end.99:                                        ; preds = %if.else.88, %if.then.81
  %98 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc100 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %98, i32 0, i32 68
  %escp_data101 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc100, i32 0, i32 36
  %99 = load i8*, i8** %escp_data101, align 8, !tbaa !53
  %100 = load i32, i32* %escp_used, align 4, !tbaa !26
  %conv102 = sext i32 %100 to i64
  %101 = load %struct._IO_FILE*, %struct._IO_FILE** %prn_stream.addr, align 8, !tbaa !1
  %call103 = call i64 @fwrite(i8* %99, i64 1, i64 %conv102, %struct._IO_FILE* %101) #5
  store i32 0, i32* %escp_used, align 4, !tbaa !26
  %102 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc104 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %102, i32 0, i32 68
  %prt_buf105 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc104, i32 0, i32 20
  %103 = load i32, i32* %prt_buf105, align 4, !tbaa !47
  %sub106 = sub nsw i32 %103, 1
  %104 = load i32, i32* %buf_a, align 4, !tbaa !26
  %105 = load i32, i32* %ncolor, align 4, !tbaa !26
  %add107 = add nsw i32 %104, %105
  %and108 = and i32 %sub106, %add107
  store i32 %and108, i32* %buf_a, align 4, !tbaa !26
  br label %for.inc.109

for.inc.109:                                      ; preds = %if.end.99
  %106 = load i32, i32* %iprint, align 4, !tbaa !26
  %inc110 = add nsw i32 %106, 1
  store i32 %inc110, i32* %iprint, align 4, !tbaa !26
  br label %for.cond.75

for.end.111:                                      ; preds = %for.cond.75
  br label %for.inc.112

for.inc.112:                                      ; preds = %for.end.111, %if.then.64
  %107 = load i32, i32* %color, align 4, !tbaa !26
  %inc113 = add nsw i32 %107, 1
  store i32 %inc113, i32* %color, align 4, !tbaa !26
  br label %for.cond.60

for.end.114:                                      ; preds = %for.cond.60
  %108 = load i32, i32* %m, align 4, !tbaa !26
  %109 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc115 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %109, i32 0, i32 68
  %stc_y116 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc115, i32 0, i32 31
  %110 = load i32, i32* %stc_y116, align 4, !tbaa !59
  %add117 = add nsw i32 %110, %108
  store i32 %add117, i32* %stc_y116, align 4, !tbaa !59
  br label %while.cond

while.end:                                        ; preds = %if.then.58, %if.then.29, %while.cond
  %111 = bitcast i32* %ncolor to i8*
  call void @llvm.lifetime.end(i64 4, i8* %111) #2
  %112 = bitcast i32* %m to i8*
  call void @llvm.lifetime.end(i64 4, i8* %112) #2
  %113 = bitcast i32* %w to i8*
  call void @llvm.lifetime.end(i64 4, i8* %113) #2
  %114 = bitcast i32* %iprint to i8*
  call void @llvm.lifetime.end(i64 4, i8* %114) #2
  %115 = bitcast i32* %buf_a to i8*
  call void @llvm.lifetime.end(i64 4, i8* %115) #2
  %116 = bitcast i32* %color to i8*
  call void @llvm.lifetime.end(i64 4, i8* %116) #2
  %117 = bitcast i32* %escp_used to i8*
  call void @llvm.lifetime.end(i64 4, i8* %117) #2
  ret void
}

declare i32 @fputc(i32, %struct._IO_FILE*) #0

declare i64 @fwrite(i8*, i64, i64, %struct._IO_FILE*) #0

declare i32 @fflush(%struct._IO_FILE*) #0

; Function Attrs: nounwind uwtable
define internal i32 @stc_deltarow(i8* %out, i8* %in, i32 %width, i8* %seed) #1 {
entry:
  %out.addr = alloca i8*, align 8
  %in.addr = alloca i8*, align 8
  %width.addr = alloca i32, align 4
  %seed.addr = alloca i8*, align 8
  %istop = alloca i32, align 4
  %nmove = alloca i32, align 4
  %ndata = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %wseed = alloca i32*, align 8
  %used = alloca i32, align 4
  store i8* %out, i8** %out.addr, align 8, !tbaa !1
  store i8* %in, i8** %in.addr, align 8, !tbaa !1
  store i32 %width, i32* %width.addr, align 4, !tbaa !26
  store i8* %seed, i8** %seed.addr, align 8, !tbaa !1
  %0 = bitcast i32* %istop to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = bitcast i32* %nmove to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #2
  %2 = bitcast i32* %ndata to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #2
  %3 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #2
  %4 = bitcast i32* %j to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #2
  %5 = bitcast i32** %wseed to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5) #2
  %6 = load i8*, i8** %seed.addr, align 8, !tbaa !1
  %7 = bitcast i8* %6 to i32*
  store i32* %7, i32** %wseed, align 8, !tbaa !1
  %8 = bitcast i32* %used to i8*
  call void @llvm.lifetime.start(i64 4, i8* %8) #2
  store i32 0, i32* %used, align 4, !tbaa !26
  %9 = load i8*, i8** %seed.addr, align 8, !tbaa !1
  %add.ptr = getelementptr inbounds i8, i8* %9, i64 4
  store i8* %add.ptr, i8** %seed.addr, align 8, !tbaa !1
  %10 = load i8*, i8** %in.addr, align 8, !tbaa !1
  %cmp = icmp ne i8* %10, null
  br i1 %cmp, label %land.lhs.true, label %if.else.149

land.lhs.true:                                    ; preds = %entry
  %11 = load i32, i32* %width.addr, align 4, !tbaa !26
  %cmp1 = icmp sgt i32 %11, 0
  br i1 %cmp1, label %if.then, label %if.else.149

if.then:                                          ; preds = %land.lhs.true
  %12 = load i32, i32* %width.addr, align 4, !tbaa !26
  %13 = load i32*, i32** %wseed, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds i32, i32* %13, i64 0
  %14 = load i32, i32* %arrayidx, align 4, !tbaa !26
  %cmp2 = icmp slt i32 %12, %14
  br i1 %cmp2, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then
  %15 = load i32*, i32** %wseed, align 8, !tbaa !1
  %arrayidx3 = getelementptr inbounds i32, i32* %15, i64 0
  %16 = load i32, i32* %arrayidx3, align 4, !tbaa !26
  br label %cond.end

cond.false:                                       ; preds = %if.then
  %17 = load i32, i32* %width.addr, align 4, !tbaa !26
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %16, %cond.true ], [ %17, %cond.false ]
  store i32 %cond, i32* %istop, align 4, !tbaa !26
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %while.cond

while.cond:                                       ; preds = %if.end.143, %cond.end
  %18 = load i32, i32* %i, align 4, !tbaa !26
  %19 = load i32, i32* %istop, align 4, !tbaa !26
  %cmp4 = icmp slt i32 %18, %19
  br i1 %cmp4, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %20 = load i32, i32* %i, align 4, !tbaa !26
  store i32 %20, i32* %j, align 4, !tbaa !26
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %while.body
  %21 = load i32, i32* %j, align 4, !tbaa !26
  %22 = load i32, i32* %istop, align 4, !tbaa !26
  %cmp5 = icmp slt i32 %21, %22
  br i1 %cmp5, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %23 = load i32, i32* %j, align 4, !tbaa !26
  %idxprom = sext i32 %23 to i64
  %24 = load i8*, i8** %in.addr, align 8, !tbaa !1
  %arrayidx6 = getelementptr inbounds i8, i8* %24, i64 %idxprom
  %25 = load i8, i8* %arrayidx6, align 1, !tbaa !62
  %conv = zext i8 %25 to i32
  %26 = load i32, i32* %j, align 4, !tbaa !26
  %idxprom7 = sext i32 %26 to i64
  %27 = load i8*, i8** %seed.addr, align 8, !tbaa !1
  %arrayidx8 = getelementptr inbounds i8, i8* %27, i64 %idxprom7
  %28 = load i8, i8* %arrayidx8, align 1, !tbaa !62
  %conv9 = zext i8 %28 to i32
  %cmp10 = icmp ne i32 %conv, %conv9
  br i1 %cmp10, label %if.then.12, label %if.end

if.then.12:                                       ; preds = %for.body
  br label %for.end

if.end:                                           ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %29 = load i32, i32* %j, align 4, !tbaa !26
  %inc = add nsw i32 %29, 1
  store i32 %inc, i32* %j, align 4, !tbaa !26
  br label %for.cond

for.end:                                          ; preds = %if.then.12, %for.cond
  %30 = load i32, i32* %j, align 4, !tbaa !26
  %31 = load i32, i32* %i, align 4, !tbaa !26
  %sub = sub nsw i32 %30, %31
  store i32 %sub, i32* %nmove, align 4, !tbaa !26
  %32 = load i32, i32* %nmove, align 4, !tbaa !26
  %cmp13 = icmp sgt i32 %32, 0
  br i1 %cmp13, label %if.then.15, label %if.end.52

if.then.15:                                       ; preds = %for.end
  %33 = load i32, i32* %j, align 4, !tbaa !26
  store i32 %33, i32* %i, align 4, !tbaa !26
  %34 = load i32, i32* %i, align 4, !tbaa !26
  %35 = load i32, i32* %istop, align 4, !tbaa !26
  %cmp16 = icmp eq i32 %34, %35
  br i1 %cmp16, label %if.then.18, label %if.end.19

if.then.18:                                       ; preds = %if.then.15
  br label %while.end

if.end.19:                                        ; preds = %if.then.15
  %36 = load i32, i32* %nmove, align 4, !tbaa !26
  %cmp20 = icmp slt i32 %36, 8
  br i1 %cmp20, label %if.then.22, label %if.else

if.then.22:                                       ; preds = %if.end.19
  %37 = load i32, i32* %nmove, align 4, !tbaa !26
  %or = or i32 64, %37
  %conv23 = trunc i32 %or to i8
  %38 = load i32, i32* %used, align 4, !tbaa !26
  %inc24 = add nsw i32 %38, 1
  store i32 %inc24, i32* %used, align 4, !tbaa !26
  %idxprom25 = sext i32 %38 to i64
  %39 = load i8*, i8** %out.addr, align 8, !tbaa !1
  %arrayidx26 = getelementptr inbounds i8, i8* %39, i64 %idxprom25
  store i8 %conv23, i8* %arrayidx26, align 1, !tbaa !62
  br label %if.end.51

if.else:                                          ; preds = %if.end.19
  %40 = load i32, i32* %nmove, align 4, !tbaa !26
  %cmp27 = icmp slt i32 %40, 128
  br i1 %cmp27, label %if.then.29, label %if.else.37

if.then.29:                                       ; preds = %if.else
  %41 = load i32, i32* %used, align 4, !tbaa !26
  %inc30 = add nsw i32 %41, 1
  store i32 %inc30, i32* %used, align 4, !tbaa !26
  %idxprom31 = sext i32 %41 to i64
  %42 = load i8*, i8** %out.addr, align 8, !tbaa !1
  %arrayidx32 = getelementptr inbounds i8, i8* %42, i64 %idxprom31
  store i8 81, i8* %arrayidx32, align 1, !tbaa !62
  %43 = load i32, i32* %nmove, align 4, !tbaa !26
  %conv33 = trunc i32 %43 to i8
  %44 = load i32, i32* %used, align 4, !tbaa !26
  %inc34 = add nsw i32 %44, 1
  store i32 %inc34, i32* %used, align 4, !tbaa !26
  %idxprom35 = sext i32 %44 to i64
  %45 = load i8*, i8** %out.addr, align 8, !tbaa !1
  %arrayidx36 = getelementptr inbounds i8, i8* %45, i64 %idxprom35
  store i8 %conv33, i8* %arrayidx36, align 1, !tbaa !62
  br label %if.end.50

if.else.37:                                       ; preds = %if.else
  %46 = load i32, i32* %used, align 4, !tbaa !26
  %inc38 = add nsw i32 %46, 1
  store i32 %inc38, i32* %used, align 4, !tbaa !26
  %idxprom39 = sext i32 %46 to i64
  %47 = load i8*, i8** %out.addr, align 8, !tbaa !1
  %arrayidx40 = getelementptr inbounds i8, i8* %47, i64 %idxprom39
  store i8 82, i8* %arrayidx40, align 1, !tbaa !62
  %48 = load i32, i32* %nmove, align 4, !tbaa !26
  %and = and i32 255, %48
  %conv41 = trunc i32 %and to i8
  %49 = load i32, i32* %used, align 4, !tbaa !26
  %inc42 = add nsw i32 %49, 1
  store i32 %inc42, i32* %used, align 4, !tbaa !26
  %idxprom43 = sext i32 %49 to i64
  %50 = load i8*, i8** %out.addr, align 8, !tbaa !1
  %arrayidx44 = getelementptr inbounds i8, i8* %50, i64 %idxprom43
  store i8 %conv41, i8* %arrayidx44, align 1, !tbaa !62
  %51 = load i32, i32* %nmove, align 4, !tbaa !26
  %shr = ashr i32 %51, 8
  %and45 = and i32 255, %shr
  %conv46 = trunc i32 %and45 to i8
  %52 = load i32, i32* %used, align 4, !tbaa !26
  %inc47 = add nsw i32 %52, 1
  store i32 %inc47, i32* %used, align 4, !tbaa !26
  %idxprom48 = sext i32 %52 to i64
  %53 = load i8*, i8** %out.addr, align 8, !tbaa !1
  %arrayidx49 = getelementptr inbounds i8, i8* %53, i64 %idxprom48
  store i8 %conv46, i8* %arrayidx49, align 1, !tbaa !62
  br label %if.end.50

if.end.50:                                        ; preds = %if.else.37, %if.then.29
  br label %if.end.51

if.end.51:                                        ; preds = %if.end.50, %if.then.22
  br label %if.end.52

if.end.52:                                        ; preds = %if.end.51, %for.end
  store i32 0, i32* %nmove, align 4, !tbaa !26
  %54 = load i32, i32* %i, align 4, !tbaa !26
  %add = add nsw i32 %54, 1
  store i32 %add, i32* %j, align 4, !tbaa !26
  br label %for.cond.53

for.cond.53:                                      ; preds = %for.inc.71, %if.end.52
  %55 = load i32, i32* %j, align 4, !tbaa !26
  %56 = load i32, i32* %istop, align 4, !tbaa !26
  %cmp54 = icmp slt i32 %55, %56
  br i1 %cmp54, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %for.cond.53
  %57 = load i32, i32* %nmove, align 4, !tbaa !26
  %cmp56 = icmp slt i32 %57, 4
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond.53
  %58 = phi i1 [ false, %for.cond.53 ], [ %cmp56, %land.rhs ]
  br i1 %58, label %for.body.58, label %for.end.73

for.body.58:                                      ; preds = %land.end
  %59 = load i32, i32* %j, align 4, !tbaa !26
  %idxprom59 = sext i32 %59 to i64
  %60 = load i8*, i8** %in.addr, align 8, !tbaa !1
  %arrayidx60 = getelementptr inbounds i8, i8* %60, i64 %idxprom59
  %61 = load i8, i8* %arrayidx60, align 1, !tbaa !62
  %conv61 = zext i8 %61 to i32
  %62 = load i32, i32* %j, align 4, !tbaa !26
  %idxprom62 = sext i32 %62 to i64
  %63 = load i8*, i8** %seed.addr, align 8, !tbaa !1
  %arrayidx63 = getelementptr inbounds i8, i8* %63, i64 %idxprom62
  %64 = load i8, i8* %arrayidx63, align 1, !tbaa !62
  %conv64 = zext i8 %64 to i32
  %cmp65 = icmp eq i32 %conv61, %conv64
  br i1 %cmp65, label %if.then.67, label %if.else.69

if.then.67:                                       ; preds = %for.body.58
  %65 = load i32, i32* %nmove, align 4, !tbaa !26
  %add68 = add nsw i32 %65, 1
  store i32 %add68, i32* %nmove, align 4, !tbaa !26
  br label %if.end.70

if.else.69:                                       ; preds = %for.body.58
  store i32 0, i32* %nmove, align 4, !tbaa !26
  br label %if.end.70

if.end.70:                                        ; preds = %if.else.69, %if.then.67
  br label %for.inc.71

for.inc.71:                                       ; preds = %if.end.70
  %66 = load i32, i32* %j, align 4, !tbaa !26
  %inc72 = add nsw i32 %66, 1
  store i32 %inc72, i32* %j, align 4, !tbaa !26
  br label %for.cond.53

for.end.73:                                       ; preds = %land.end
  %67 = load i32, i32* %j, align 4, !tbaa !26
  %68 = load i32, i32* %i, align 4, !tbaa !26
  %sub74 = sub nsw i32 %67, %68
  %69 = load i32, i32* %nmove, align 4, !tbaa !26
  %sub75 = sub nsw i32 %sub74, %69
  store i32 %sub75, i32* %ndata, align 4, !tbaa !26
  %70 = load i8*, i8** %out.addr, align 8, !tbaa !1
  %71 = load i32, i32* %used, align 4, !tbaa !26
  %idx.ext = sext i32 %71 to i64
  %add.ptr76 = getelementptr inbounds i8, i8* %70, i64 %idx.ext
  %add.ptr77 = getelementptr inbounds i8, i8* %add.ptr76, i64 3
  %72 = load i8*, i8** %in.addr, align 8, !tbaa !1
  %73 = load i32, i32* %i, align 4, !tbaa !26
  %idx.ext78 = sext i32 %73 to i64
  %add.ptr79 = getelementptr inbounds i8, i8* %72, i64 %idx.ext78
  %74 = load i32, i32* %ndata, align 4, !tbaa !26
  %call = call i32 @stc_rle(i8* %add.ptr77, i8* %add.ptr79, i32 %74) #5
  store i32 %call, i32* %nmove, align 4, !tbaa !26
  %75 = load i32, i32* %nmove, align 4, !tbaa !26
  %cmp80 = icmp slt i32 %75, 16
  br i1 %cmp80, label %if.then.82, label %if.else.102

if.then.82:                                       ; preds = %for.end.73
  %76 = load i32, i32* %nmove, align 4, !tbaa !26
  %or83 = or i32 32, %76
  %conv84 = trunc i32 %or83 to i8
  %77 = load i32, i32* %used, align 4, !tbaa !26
  %inc85 = add nsw i32 %77, 1
  store i32 %inc85, i32* %used, align 4, !tbaa !26
  %idxprom86 = sext i32 %77 to i64
  %78 = load i8*, i8** %out.addr, align 8, !tbaa !1
  %arrayidx87 = getelementptr inbounds i8, i8* %78, i64 %idxprom86
  store i8 %conv84, i8* %arrayidx87, align 1, !tbaa !62
  store i32 0, i32* %j, align 4, !tbaa !26
  br label %for.cond.88

for.cond.88:                                      ; preds = %for.inc.99, %if.then.82
  %79 = load i32, i32* %j, align 4, !tbaa !26
  %80 = load i32, i32* %nmove, align 4, !tbaa !26
  %cmp89 = icmp slt i32 %79, %80
  br i1 %cmp89, label %for.body.91, label %for.end.101

for.body.91:                                      ; preds = %for.cond.88
  %81 = load i32, i32* %used, align 4, !tbaa !26
  %82 = load i32, i32* %j, align 4, !tbaa !26
  %add92 = add nsw i32 %81, %82
  %add93 = add nsw i32 %add92, 2
  %idxprom94 = sext i32 %add93 to i64
  %83 = load i8*, i8** %out.addr, align 8, !tbaa !1
  %arrayidx95 = getelementptr inbounds i8, i8* %83, i64 %idxprom94
  %84 = load i8, i8* %arrayidx95, align 1, !tbaa !62
  %85 = load i32, i32* %used, align 4, !tbaa !26
  %86 = load i32, i32* %j, align 4, !tbaa !26
  %add96 = add nsw i32 %85, %86
  %idxprom97 = sext i32 %add96 to i64
  %87 = load i8*, i8** %out.addr, align 8, !tbaa !1
  %arrayidx98 = getelementptr inbounds i8, i8* %87, i64 %idxprom97
  store i8 %84, i8* %arrayidx98, align 1, !tbaa !62
  br label %for.inc.99

for.inc.99:                                       ; preds = %for.body.91
  %88 = load i32, i32* %j, align 4, !tbaa !26
  %inc100 = add nsw i32 %88, 1
  store i32 %inc100, i32* %j, align 4, !tbaa !26
  br label %for.cond.88

for.end.101:                                      ; preds = %for.cond.88
  br label %if.end.143

if.else.102:                                      ; preds = %for.end.73
  %89 = load i32, i32* %nmove, align 4, !tbaa !26
  %cmp103 = icmp slt i32 %89, 256
  br i1 %cmp103, label %if.then.105, label %if.else.127

if.then.105:                                      ; preds = %if.else.102
  %90 = load i32, i32* %used, align 4, !tbaa !26
  %inc106 = add nsw i32 %90, 1
  store i32 %inc106, i32* %used, align 4, !tbaa !26
  %idxprom107 = sext i32 %90 to i64
  %91 = load i8*, i8** %out.addr, align 8, !tbaa !1
  %arrayidx108 = getelementptr inbounds i8, i8* %91, i64 %idxprom107
  store i8 49, i8* %arrayidx108, align 1, !tbaa !62
  %92 = load i32, i32* %nmove, align 4, !tbaa !26
  %conv109 = trunc i32 %92 to i8
  %93 = load i32, i32* %used, align 4, !tbaa !26
  %inc110 = add nsw i32 %93, 1
  store i32 %inc110, i32* %used, align 4, !tbaa !26
  %idxprom111 = sext i32 %93 to i64
  %94 = load i8*, i8** %out.addr, align 8, !tbaa !1
  %arrayidx112 = getelementptr inbounds i8, i8* %94, i64 %idxprom111
  store i8 %conv109, i8* %arrayidx112, align 1, !tbaa !62
  store i32 0, i32* %j, align 4, !tbaa !26
  br label %for.cond.113

for.cond.113:                                     ; preds = %for.inc.124, %if.then.105
  %95 = load i32, i32* %j, align 4, !tbaa !26
  %96 = load i32, i32* %nmove, align 4, !tbaa !26
  %cmp114 = icmp slt i32 %95, %96
  br i1 %cmp114, label %for.body.116, label %for.end.126

for.body.116:                                     ; preds = %for.cond.113
  %97 = load i32, i32* %used, align 4, !tbaa !26
  %98 = load i32, i32* %j, align 4, !tbaa !26
  %add117 = add nsw i32 %97, %98
  %add118 = add nsw i32 %add117, 1
  %idxprom119 = sext i32 %add118 to i64
  %99 = load i8*, i8** %out.addr, align 8, !tbaa !1
  %arrayidx120 = getelementptr inbounds i8, i8* %99, i64 %idxprom119
  %100 = load i8, i8* %arrayidx120, align 1, !tbaa !62
  %101 = load i32, i32* %used, align 4, !tbaa !26
  %102 = load i32, i32* %j, align 4, !tbaa !26
  %add121 = add nsw i32 %101, %102
  %idxprom122 = sext i32 %add121 to i64
  %103 = load i8*, i8** %out.addr, align 8, !tbaa !1
  %arrayidx123 = getelementptr inbounds i8, i8* %103, i64 %idxprom122
  store i8 %100, i8* %arrayidx123, align 1, !tbaa !62
  br label %for.inc.124

for.inc.124:                                      ; preds = %for.body.116
  %104 = load i32, i32* %j, align 4, !tbaa !26
  %inc125 = add nsw i32 %104, 1
  store i32 %inc125, i32* %j, align 4, !tbaa !26
  br label %for.cond.113

for.end.126:                                      ; preds = %for.cond.113
  br label %if.end.142

if.else.127:                                      ; preds = %if.else.102
  %105 = load i32, i32* %used, align 4, !tbaa !26
  %inc128 = add nsw i32 %105, 1
  store i32 %inc128, i32* %used, align 4, !tbaa !26
  %idxprom129 = sext i32 %105 to i64
  %106 = load i8*, i8** %out.addr, align 8, !tbaa !1
  %arrayidx130 = getelementptr inbounds i8, i8* %106, i64 %idxprom129
  store i8 50, i8* %arrayidx130, align 1, !tbaa !62
  %107 = load i32, i32* %nmove, align 4, !tbaa !26
  %and131 = and i32 255, %107
  %conv132 = trunc i32 %and131 to i8
  %108 = load i32, i32* %used, align 4, !tbaa !26
  %inc133 = add nsw i32 %108, 1
  store i32 %inc133, i32* %used, align 4, !tbaa !26
  %idxprom134 = sext i32 %108 to i64
  %109 = load i8*, i8** %out.addr, align 8, !tbaa !1
  %arrayidx135 = getelementptr inbounds i8, i8* %109, i64 %idxprom134
  store i8 %conv132, i8* %arrayidx135, align 1, !tbaa !62
  %110 = load i32, i32* %nmove, align 4, !tbaa !26
  %shr136 = ashr i32 %110, 8
  %and137 = and i32 255, %shr136
  %conv138 = trunc i32 %and137 to i8
  %111 = load i32, i32* %used, align 4, !tbaa !26
  %inc139 = add nsw i32 %111, 1
  store i32 %inc139, i32* %used, align 4, !tbaa !26
  %idxprom140 = sext i32 %111 to i64
  %112 = load i8*, i8** %out.addr, align 8, !tbaa !1
  %arrayidx141 = getelementptr inbounds i8, i8* %112, i64 %idxprom140
  store i8 %conv138, i8* %arrayidx141, align 1, !tbaa !62
  br label %if.end.142

if.end.142:                                       ; preds = %if.else.127, %for.end.126
  br label %if.end.143

if.end.143:                                       ; preds = %if.end.142, %for.end.101
  %113 = load i32, i32* %nmove, align 4, !tbaa !26
  %114 = load i32, i32* %used, align 4, !tbaa !26
  %add144 = add nsw i32 %114, %113
  store i32 %add144, i32* %used, align 4, !tbaa !26
  %115 = load i32, i32* %ndata, align 4, !tbaa !26
  %116 = load i32, i32* %i, align 4, !tbaa !26
  %add145 = add nsw i32 %116, %115
  store i32 %add145, i32* %i, align 4, !tbaa !26
  br label %while.cond

while.end:                                        ; preds = %if.then.18, %while.cond
  %117 = load i8*, i8** %seed.addr, align 8, !tbaa !1
  %118 = load i8*, i8** %in.addr, align 8, !tbaa !1
  %119 = load i32, i32* %istop, align 4, !tbaa !26
  %conv146 = sext i32 %119 to i64
  %call147 = call i8* @memcpy(i8* %117, i8* %118, i64 %conv146) #6
  %120 = load i32, i32* %width.addr, align 4, !tbaa !26
  %121 = load i32*, i32** %wseed, align 8, !tbaa !1
  %arrayidx148 = getelementptr inbounds i32, i32* %121, i64 0
  store i32 %120, i32* %arrayidx148, align 4, !tbaa !26
  br label %if.end.162

if.else.149:                                      ; preds = %land.lhs.true, %entry
  %122 = load i32*, i32** %wseed, align 8, !tbaa !1
  %arrayidx150 = getelementptr inbounds i32, i32* %122, i64 0
  %123 = load i32, i32* %arrayidx150, align 4, !tbaa !26
  %cmp151 = icmp sgt i32 %123, 0
  br i1 %cmp151, label %if.then.153, label %if.end.161

if.then.153:                                      ; preds = %if.else.149
  %124 = load i32, i32* %used, align 4, !tbaa !26
  %inc154 = add nsw i32 %124, 1
  store i32 %inc154, i32* %used, align 4, !tbaa !26
  %idxprom155 = sext i32 %124 to i64
  %125 = load i8*, i8** %out.addr, align 8, !tbaa !1
  %arrayidx156 = getelementptr inbounds i8, i8* %125, i64 %idxprom155
  store i8 -31, i8* %arrayidx156, align 1, !tbaa !62
  %126 = load i8*, i8** %seed.addr, align 8, !tbaa !1
  %127 = load i32*, i32** %wseed, align 8, !tbaa !1
  %arrayidx157 = getelementptr inbounds i32, i32* %127, i64 0
  %128 = load i32, i32* %arrayidx157, align 4, !tbaa !26
  %conv158 = sext i32 %128 to i64
  %call159 = call i8* @memset(i8* %126, i32 0, i64 %conv158) #6
  %129 = load i32*, i32** %wseed, align 8, !tbaa !1
  %arrayidx160 = getelementptr inbounds i32, i32* %129, i64 0
  store i32 0, i32* %arrayidx160, align 4, !tbaa !26
  br label %if.end.161

if.end.161:                                       ; preds = %if.then.153, %if.else.149
  br label %if.end.162

if.end.162:                                       ; preds = %if.end.161, %while.end
  %130 = load i32, i32* %used, align 4, !tbaa !26
  %131 = bitcast i32* %used to i8*
  call void @llvm.lifetime.end(i64 4, i8* %131) #2
  %132 = bitcast i32** %wseed to i8*
  call void @llvm.lifetime.end(i64 8, i8* %132) #2
  %133 = bitcast i32* %j to i8*
  call void @llvm.lifetime.end(i64 4, i8* %133) #2
  %134 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %134) #2
  %135 = bitcast i32* %ndata to i8*
  call void @llvm.lifetime.end(i64 4, i8* %135) #2
  %136 = bitcast i32* %nmove to i8*
  call void @llvm.lifetime.end(i64 4, i8* %136) #2
  %137 = bitcast i32* %istop to i8*
  call void @llvm.lifetime.end(i64 4, i8* %137) #2
  ret i32 %130
}

; Function Attrs: nounwind uwtable
define internal i32 @stc_rle(i8* %out, i8* %in, i32 %width) #1 {
entry:
  %out.addr = alloca i8*, align 8
  %in.addr = alloca i8*, align 8
  %width.addr = alloca i32, align 4
  %used = alloca i32, align 4
  %crun = alloca i32, align 4
  %cdata = alloca i32, align 4
  %run = alloca i8, align 1
  store i8* %out, i8** %out.addr, align 8, !tbaa !1
  store i8* %in, i8** %in.addr, align 8, !tbaa !1
  store i32 %width, i32* %width.addr, align 4, !tbaa !26
  %0 = bitcast i32* %used to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  store i32 0, i32* %used, align 4, !tbaa !26
  %1 = bitcast i32* %crun to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #2
  %2 = bitcast i32* %cdata to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #2
  call void @llvm.lifetime.start(i64 1, i8* %run) #2
  %3 = load i8*, i8** %in.addr, align 8, !tbaa !1
  %cmp = icmp ne i8* %3, null
  br i1 %cmp, label %if.then, label %if.else.62

if.then:                                          ; preds = %entry
  store i32 1, i32* %crun, align 4, !tbaa !26
  br label %while.cond

while.cond:                                       ; preds = %if.end.60, %if.then
  %4 = load i32, i32* %width.addr, align 4, !tbaa !26
  %cmp1 = icmp sgt i32 %4, 0
  br i1 %cmp1, label %while.body, label %while.end.61

while.body:                                       ; preds = %while.cond
  %5 = load i8*, i8** %in.addr, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 0
  %6 = load i8, i8* %arrayidx, align 1, !tbaa !62
  store i8 %6, i8* %run, align 1, !tbaa !62
  br label %while.cond.2

while.cond.2:                                     ; preds = %if.end, %while.body
  %7 = load i32, i32* %width.addr, align 4, !tbaa !26
  %8 = load i32, i32* %crun, align 4, !tbaa !26
  %cmp3 = icmp sgt i32 %7, %8
  br i1 %cmp3, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond.2
  %9 = load i8, i8* %run, align 1, !tbaa !62
  %conv = zext i8 %9 to i32
  %10 = load i32, i32* %crun, align 4, !tbaa !26
  %idxprom = sext i32 %10 to i64
  %11 = load i8*, i8** %in.addr, align 8, !tbaa !1
  %arrayidx4 = getelementptr inbounds i8, i8* %11, i64 %idxprom
  %12 = load i8, i8* %arrayidx4, align 1, !tbaa !62
  %conv5 = zext i8 %12 to i32
  %cmp6 = icmp eq i32 %conv, %conv5
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond.2
  %13 = phi i1 [ false, %while.cond.2 ], [ %cmp6, %land.rhs ]
  br i1 %13, label %while.body.8, label %while.end

while.body.8:                                     ; preds = %land.end
  %14 = load i32, i32* %crun, align 4, !tbaa !26
  %inc = add nsw i32 %14, 1
  store i32 %inc, i32* %crun, align 4, !tbaa !26
  %cmp9 = icmp eq i32 %inc, 129
  br i1 %cmp9, label %if.then.11, label %if.end

if.then.11:                                       ; preds = %while.body.8
  br label %while.end

if.end:                                           ; preds = %while.body.8
  br label %while.cond.2

while.end:                                        ; preds = %if.then.11, %land.end
  %15 = load i32, i32* %crun, align 4, !tbaa !26
  %cmp12 = icmp sgt i32 %15, 2
  br i1 %cmp12, label %if.then.16, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %while.end
  %16 = load i32, i32* %crun, align 4, !tbaa !26
  %17 = load i32, i32* %width.addr, align 4, !tbaa !26
  %cmp14 = icmp eq i32 %16, %17
  br i1 %cmp14, label %if.then.16, label %if.else

if.then.16:                                       ; preds = %lor.lhs.false, %while.end
  %18 = load i32, i32* %crun, align 4, !tbaa !26
  %sub = sub nsw i32 257, %18
  %and = and i32 %sub, 255
  %conv17 = trunc i32 %and to i8
  %19 = load i8*, i8** %out.addr, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds i8, i8* %19, i32 1
  store i8* %incdec.ptr, i8** %out.addr, align 8, !tbaa !1
  store i8 %conv17, i8* %19, align 1, !tbaa !62
  %20 = load i8, i8* %run, align 1, !tbaa !62
  %21 = load i8*, i8** %out.addr, align 8, !tbaa !1
  %incdec.ptr18 = getelementptr inbounds i8, i8* %21, i32 1
  store i8* %incdec.ptr18, i8** %out.addr, align 8, !tbaa !1
  store i8 %20, i8* %21, align 1, !tbaa !62
  %22 = load i32, i32* %used, align 4, !tbaa !26
  %add = add nsw i32 %22, 2
  store i32 %add, i32* %used, align 4, !tbaa !26
  %23 = load i32, i32* %crun, align 4, !tbaa !26
  %24 = load i32, i32* %width.addr, align 4, !tbaa !26
  %sub19 = sub nsw i32 %24, %23
  store i32 %sub19, i32* %width.addr, align 4, !tbaa !26
  %25 = load i32, i32* %crun, align 4, !tbaa !26
  %26 = load i8*, i8** %in.addr, align 8, !tbaa !1
  %idx.ext = sext i32 %25 to i64
  %add.ptr = getelementptr inbounds i8, i8* %26, i64 %idx.ext
  store i8* %add.ptr, i8** %in.addr, align 8, !tbaa !1
  store i32 1, i32* %crun, align 4, !tbaa !26
  br label %if.end.60

if.else:                                          ; preds = %lor.lhs.false
  %27 = load i32, i32* %crun, align 4, !tbaa !26
  store i32 %27, i32* %cdata, align 4, !tbaa !26
  br label %for.cond

for.cond:                                         ; preds = %if.end.42, %if.else
  %28 = load i32, i32* %width.addr, align 4, !tbaa !26
  %29 = load i32, i32* %cdata, align 4, !tbaa !26
  %cmp20 = icmp sgt i32 %28, %29
  br i1 %cmp20, label %land.rhs.22, label %land.end.25

land.rhs.22:                                      ; preds = %for.cond
  %30 = load i32, i32* %crun, align 4, !tbaa !26
  %cmp23 = icmp slt i32 %30, 4
  br label %land.end.25

land.end.25:                                      ; preds = %land.rhs.22, %for.cond
  %31 = phi i1 [ false, %for.cond ], [ %cmp23, %land.rhs.22 ]
  br i1 %31, label %for.body, label %for.end

for.body:                                         ; preds = %land.end.25
  %32 = load i8, i8* %run, align 1, !tbaa !62
  %conv26 = zext i8 %32 to i32
  %33 = load i32, i32* %cdata, align 4, !tbaa !26
  %idxprom27 = sext i32 %33 to i64
  %34 = load i8*, i8** %in.addr, align 8, !tbaa !1
  %arrayidx28 = getelementptr inbounds i8, i8* %34, i64 %idxprom27
  %35 = load i8, i8* %arrayidx28, align 1, !tbaa !62
  %conv29 = zext i8 %35 to i32
  %cmp30 = icmp eq i32 %conv26, %conv29
  br i1 %cmp30, label %if.then.32, label %if.else.34

if.then.32:                                       ; preds = %for.body
  %36 = load i32, i32* %crun, align 4, !tbaa !26
  %add33 = add nsw i32 %36, 1
  store i32 %add33, i32* %crun, align 4, !tbaa !26
  br label %if.end.37

if.else.34:                                       ; preds = %for.body
  %37 = load i32, i32* %cdata, align 4, !tbaa !26
  %idxprom35 = sext i32 %37 to i64
  %38 = load i8*, i8** %in.addr, align 8, !tbaa !1
  %arrayidx36 = getelementptr inbounds i8, i8* %38, i64 %idxprom35
  %39 = load i8, i8* %arrayidx36, align 1, !tbaa !62
  store i8 %39, i8* %run, align 1, !tbaa !62
  store i32 1, i32* %crun, align 4, !tbaa !26
  br label %if.end.37

if.end.37:                                        ; preds = %if.else.34, %if.then.32
  %40 = load i32, i32* %cdata, align 4, !tbaa !26
  %inc38 = add nsw i32 %40, 1
  store i32 %inc38, i32* %cdata, align 4, !tbaa !26
  %cmp39 = icmp eq i32 %inc38, 128
  br i1 %cmp39, label %if.then.41, label %if.end.42

if.then.41:                                       ; preds = %if.end.37
  br label %for.end

if.end.42:                                        ; preds = %if.end.37
  br label %for.cond

for.end:                                          ; preds = %if.then.41, %land.end.25
  %41 = load i32, i32* %crun, align 4, !tbaa !26
  %cmp43 = icmp slt i32 %41, 3
  br i1 %cmp43, label %if.then.45, label %if.else.46

if.then.45:                                       ; preds = %for.end
  store i32 0, i32* %crun, align 4, !tbaa !26
  br label %if.end.48

if.else.46:                                       ; preds = %for.end
  %42 = load i32, i32* %crun, align 4, !tbaa !26
  %43 = load i32, i32* %cdata, align 4, !tbaa !26
  %sub47 = sub nsw i32 %43, %42
  store i32 %sub47, i32* %cdata, align 4, !tbaa !26
  br label %if.end.48

if.end.48:                                        ; preds = %if.else.46, %if.then.45
  %44 = load i32, i32* %cdata, align 4, !tbaa !26
  %sub49 = sub nsw i32 %44, 1
  %conv50 = trunc i32 %sub49 to i8
  %45 = load i8*, i8** %out.addr, align 8, !tbaa !1
  %incdec.ptr51 = getelementptr inbounds i8, i8* %45, i32 1
  store i8* %incdec.ptr51, i8** %out.addr, align 8, !tbaa !1
  store i8 %conv50, i8* %45, align 1, !tbaa !62
  %46 = load i32, i32* %used, align 4, !tbaa !26
  %inc52 = add nsw i32 %46, 1
  store i32 %inc52, i32* %used, align 4, !tbaa !26
  %47 = load i8*, i8** %out.addr, align 8, !tbaa !1
  %48 = load i8*, i8** %in.addr, align 8, !tbaa !1
  %49 = load i32, i32* %cdata, align 4, !tbaa !26
  %conv53 = sext i32 %49 to i64
  %call = call i8* @memcpy(i8* %47, i8* %48, i64 %conv53) #6
  %50 = load i32, i32* %cdata, align 4, !tbaa !26
  %51 = load i32, i32* %used, align 4, !tbaa !26
  %add54 = add nsw i32 %51, %50
  store i32 %add54, i32* %used, align 4, !tbaa !26
  %52 = load i32, i32* %cdata, align 4, !tbaa !26
  %53 = load i8*, i8** %out.addr, align 8, !tbaa !1
  %idx.ext55 = sext i32 %52 to i64
  %add.ptr56 = getelementptr inbounds i8, i8* %53, i64 %idx.ext55
  store i8* %add.ptr56, i8** %out.addr, align 8, !tbaa !1
  %54 = load i32, i32* %cdata, align 4, !tbaa !26
  %55 = load i32, i32* %width.addr, align 4, !tbaa !26
  %sub57 = sub nsw i32 %55, %54
  store i32 %sub57, i32* %width.addr, align 4, !tbaa !26
  %56 = load i32, i32* %cdata, align 4, !tbaa !26
  %57 = load i8*, i8** %in.addr, align 8, !tbaa !1
  %idx.ext58 = sext i32 %56 to i64
  %add.ptr59 = getelementptr inbounds i8, i8* %57, i64 %idx.ext58
  store i8* %add.ptr59, i8** %in.addr, align 8, !tbaa !1
  br label %if.end.60

if.end.60:                                        ; preds = %if.end.48, %if.then.16
  br label %while.cond

while.end.61:                                     ; preds = %while.cond
  br label %if.end.77

if.else.62:                                       ; preds = %entry
  br label %while.cond.63

while.cond.63:                                    ; preds = %cond.end, %if.else.62
  %58 = load i32, i32* %width.addr, align 4, !tbaa !26
  %cmp64 = icmp sgt i32 %58, 0
  br i1 %cmp64, label %while.body.66, label %while.end.76

while.body.66:                                    ; preds = %while.cond.63
  %59 = load i32, i32* %width.addr, align 4, !tbaa !26
  %cmp67 = icmp sgt i32 %59, 129
  br i1 %cmp67, label %cond.true, label %cond.false

cond.true:                                        ; preds = %while.body.66
  br label %cond.end

cond.false:                                       ; preds = %while.body.66
  %60 = load i32, i32* %width.addr, align 4, !tbaa !26
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 129, %cond.true ], [ %60, %cond.false ]
  store i32 %cond, i32* %crun, align 4, !tbaa !26
  %61 = load i32, i32* %crun, align 4, !tbaa !26
  %62 = load i32, i32* %width.addr, align 4, !tbaa !26
  %sub69 = sub nsw i32 %62, %61
  store i32 %sub69, i32* %width.addr, align 4, !tbaa !26
  %63 = load i32, i32* %crun, align 4, !tbaa !26
  %sub70 = sub nsw i32 257, %63
  %and71 = and i32 %sub70, 255
  %conv72 = trunc i32 %and71 to i8
  %64 = load i8*, i8** %out.addr, align 8, !tbaa !1
  %incdec.ptr73 = getelementptr inbounds i8, i8* %64, i32 1
  store i8* %incdec.ptr73, i8** %out.addr, align 8, !tbaa !1
  store i8 %conv72, i8* %64, align 1, !tbaa !62
  %65 = load i8*, i8** %out.addr, align 8, !tbaa !1
  %incdec.ptr74 = getelementptr inbounds i8, i8* %65, i32 1
  store i8* %incdec.ptr74, i8** %out.addr, align 8, !tbaa !1
  store i8 0, i8* %65, align 1, !tbaa !62
  %66 = load i32, i32* %used, align 4, !tbaa !26
  %add75 = add nsw i32 %66, 2
  store i32 %add75, i32* %used, align 4, !tbaa !26
  br label %while.cond.63

while.end.76:                                     ; preds = %while.cond.63
  br label %if.end.77

if.end.77:                                        ; preds = %while.end.76, %while.end.61
  %67 = load i32, i32* %used, align 4, !tbaa !26
  call void @llvm.lifetime.end(i64 1, i8* %run) #2
  %68 = bitcast i32* %cdata to i8*
  call void @llvm.lifetime.end(i64 4, i8* %68) #2
  %69 = bitcast i32* %crun to i8*
  call void @llvm.lifetime.end(i64 4, i8* %69) #2
  %70 = bitcast i32* %used to i8*
  call void @llvm.lifetime.end(i64 4, i8* %70) #2
  ret i32 %67
}

; Function Attrs: nounwind uwtable
define internal i32 @stc_bandwidth(%struct.stcolor_device_s* %sd, i32 %color, i32 %m, i32 %npass) #1 {
entry:
  %sd.addr = alloca %struct.stcolor_device_s*, align 8
  %color.addr = alloca i32, align 4
  %m.addr = alloca i32, align 4
  %npass.addr = alloca i32, align 4
  %ncolor = alloca i32, align 4
  %buf_a = alloca i32, align 4
  %w = alloca i32, align 4
  store %struct.stcolor_device_s* %sd, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  store i32 %color, i32* %color.addr, align 4, !tbaa !26
  store i32 %m, i32* %m.addr, align 4, !tbaa !26
  store i32 %npass, i32* %npass.addr, align 4, !tbaa !26
  %0 = bitcast i32* %ncolor to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %color_info = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1, i32 0, i32 11
  %num_components = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info, i32 0, i32 1
  %2 = load i32, i32* %num_components, align 4, !tbaa !40
  %cmp = icmp eq i32 %2, 1
  %cond = select i1 %cmp, i32 1, i32 4
  store i32 %cond, i32* %ncolor, align 4, !tbaa !26
  %3 = bitcast i32* %buf_a to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #2
  %4 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %4, i32 0, i32 68
  %prt_buf = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc, i32 0, i32 20
  %5 = load i32, i32* %prt_buf, align 4, !tbaa !47
  %sub = sub nsw i32 %5, 1
  %6 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc1 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %6, i32 0, i32 68
  %stc_y = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc1, i32 0, i32 31
  %7 = load i32, i32* %stc_y, align 4, !tbaa !59
  %8 = load i32, i32* %ncolor, align 4, !tbaa !26
  %mul = mul nsw i32 %7, %8
  %9 = load i32, i32* %color.addr, align 4, !tbaa !26
  %add = add nsw i32 %mul, %9
  %and = and i32 %sub, %add
  store i32 %and, i32* %buf_a, align 4, !tbaa !26
  %10 = bitcast i32* %w to i8*
  call void @llvm.lifetime.start(i64 4, i8* %10) #2
  store i32 0, i32* %w, align 4, !tbaa !26
  br label %while.cond

while.cond:                                       ; preds = %if.end, %entry
  %11 = load i32, i32* %m.addr, align 4, !tbaa !26
  %dec = add nsw i32 %11, -1
  store i32 %dec, i32* %m.addr, align 4, !tbaa !26
  %cmp2 = icmp sgt i32 %11, 0
  br i1 %cmp2, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %12 = load i32, i32* %buf_a, align 4, !tbaa !26
  %idxprom = sext i32 %12 to i64
  %13 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc3 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %13, i32 0, i32 68
  %prt_width = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc3, i32 0, i32 34
  %14 = load i32*, i32** %prt_width, align 8, !tbaa !49
  %arrayidx = getelementptr inbounds i32, i32* %14, i64 %idxprom
  %15 = load i32, i32* %arrayidx, align 4, !tbaa !26
  %16 = load i32, i32* %w, align 4, !tbaa !26
  %cmp4 = icmp sgt i32 %15, %16
  br i1 %cmp4, label %if.then, label %if.end

if.then:                                          ; preds = %while.body
  %17 = load i32, i32* %buf_a, align 4, !tbaa !26
  %idxprom5 = sext i32 %17 to i64
  %18 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc6 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %18, i32 0, i32 68
  %prt_width7 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc6, i32 0, i32 34
  %19 = load i32*, i32** %prt_width7, align 8, !tbaa !49
  %arrayidx8 = getelementptr inbounds i32, i32* %19, i64 %idxprom5
  %20 = load i32, i32* %arrayidx8, align 4, !tbaa !26
  store i32 %20, i32* %w, align 4, !tbaa !26
  br label %if.end

if.end:                                           ; preds = %if.then, %while.body
  %21 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc9 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %21, i32 0, i32 68
  %prt_buf10 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc9, i32 0, i32 20
  %22 = load i32, i32* %prt_buf10, align 4, !tbaa !47
  %sub11 = sub nsw i32 %22, 1
  %23 = load i32, i32* %buf_a, align 4, !tbaa !26
  %24 = load i32, i32* %ncolor, align 4, !tbaa !26
  %25 = load i32, i32* %npass.addr, align 4, !tbaa !26
  %mul12 = mul nsw i32 %24, %25
  %add13 = add nsw i32 %23, %mul12
  %and14 = and i32 %sub11, %add13
  store i32 %and14, i32* %buf_a, align 4, !tbaa !26
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %26 = load i32, i32* %w, align 4, !tbaa !26
  %27 = bitcast i32* %w to i8*
  call void @llvm.lifetime.end(i64 4, i8* %27) #2
  %28 = bitcast i32* %buf_a to i8*
  call void @llvm.lifetime.end(i64 4, i8* %28) #2
  %29 = bitcast i32* %ncolor to i8*
  call void @llvm.lifetime.end(i64 4, i8* %29) #2
  ret i32 %26
}

; Function Attrs: nounwind uwtable
define internal i32 @stc_print_escpcmd(%struct.stcolor_device_s* %sd, %struct._IO_FILE* %prn_stream, i32 %escp_used, i32 %color, i32 %m, i32 %wbytes) #1 {
entry:
  %sd.addr = alloca %struct.stcolor_device_s*, align 8
  %prn_stream.addr = alloca %struct._IO_FILE*, align 8
  %escp_used.addr = alloca i32, align 4
  %color.addr = alloca i32, align 4
  %m.addr = alloca i32, align 4
  %wbytes.addr = alloca i32, align 4
  %dy = alloca i32, align 4
  %nlf = alloca i32, align 4
  store %struct.stcolor_device_s* %sd, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  store %struct._IO_FILE* %prn_stream, %struct._IO_FILE** %prn_stream.addr, align 8, !tbaa !1
  store i32 %escp_used, i32* %escp_used.addr, align 4, !tbaa !26
  store i32 %color, i32* %color.addr, align 4, !tbaa !26
  store i32 %m, i32* %m.addr, align 4, !tbaa !26
  store i32 %wbytes, i32* %wbytes.addr, align 4, !tbaa !26
  %0 = bitcast i32* %dy to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %1, i32 0, i32 68
  %stc_y = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc, i32 0, i32 31
  %2 = load i32, i32* %stc_y, align 4, !tbaa !59
  %3 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc1 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %3, i32 0, i32 68
  %prt_y = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc1, i32 0, i32 30
  %4 = load i32, i32* %prt_y, align 4, !tbaa !61
  %sub = sub nsw i32 %2, %4
  store i32 %sub, i32* %dy, align 4, !tbaa !26
  %5 = bitcast i32* %nlf to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #2
  %6 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc2 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %6, i32 0, i32 68
  %flags = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc2, i32 0, i32 0
  %7 = load i64, i64* %flags, align 8, !tbaa !5
  %and = and i64 %7, 8388608
  %cmp = icmp eq i64 0, %and
  br i1 %cmp, label %if.then, label %if.end.17

if.then:                                          ; preds = %entry
  %8 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc3 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %8, i32 0, i32 68
  %escp_init = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc3, i32 0, i32 13
  %data = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %escp_init, i32 0, i32 0
  %9 = load i8*, i8** %data, align 8, !tbaa !102
  %10 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc4 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %10, i32 0, i32 68
  %escp_init5 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc4, i32 0, i32 13
  %size = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %escp_init5, i32 0, i32 1
  %11 = load i32, i32* %size, align 4, !tbaa !104
  %conv = zext i32 %11 to i64
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %prn_stream.addr, align 8, !tbaa !1
  %call = call i64 @fwrite(i8* %9, i64 1, i64 %conv, %struct._IO_FILE* %12) #5
  %13 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc6 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %13, i32 0, i32 68
  %escp_lf = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc6, i32 0, i32 29
  %14 = load i32, i32* %escp_lf, align 4, !tbaa !58
  %cmp7 = icmp slt i32 0, %14
  br i1 %cmp7, label %if.then.9, label %if.end

if.then.9:                                        ; preds = %if.then
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** %prn_stream.addr, align 8, !tbaa !1
  %call10 = call i32 @fputc(i32 27, %struct._IO_FILE* %15) #5
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** %prn_stream.addr, align 8, !tbaa !1
  %call11 = call i32 @fputc(i32 43, %struct._IO_FILE* %16) #5
  %17 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc12 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %17, i32 0, i32 68
  %escp_m = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc12, i32 0, i32 28
  %18 = load i32, i32* %escp_m, align 4, !tbaa !48
  %19 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc13 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %19, i32 0, i32 68
  %escp_u = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc13, i32 0, i32 24
  %20 = load i32, i32* %escp_u, align 4, !tbaa !28
  %mul = mul nsw i32 %18, %20
  %div = sdiv i32 %mul, 10
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** %prn_stream.addr, align 8, !tbaa !1
  %call14 = call i32 @fputc(i32 %div, %struct._IO_FILE* %21) #5
  br label %if.end

if.end:                                           ; preds = %if.then.9, %if.then
  %22 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc15 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %22, i32 0, i32 68
  %flags16 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc15, i32 0, i32 0
  %23 = load i64, i64* %flags16, align 8, !tbaa !5
  %or = or i64 %23, 8388608
  store i64 %or, i64* %flags16, align 8, !tbaa !5
  br label %if.end.17

if.end.17:                                        ; preds = %if.end, %entry
  %24 = load i32, i32* %escp_used.addr, align 4, !tbaa !26
  %inc = add nsw i32 %24, 1
  store i32 %inc, i32* %escp_used.addr, align 4, !tbaa !26
  %idxprom = sext i32 %24 to i64
  %25 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc18 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %25, i32 0, i32 68
  %escp_data = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc18, i32 0, i32 36
  %26 = load i8*, i8** %escp_data, align 8, !tbaa !53
  %arrayidx = getelementptr inbounds i8, i8* %26, i64 %idxprom
  store i8 13, i8* %arrayidx, align 1, !tbaa !62
  %27 = load i32, i32* %dy, align 4, !tbaa !26
  %tobool = icmp ne i32 %27, 0
  br i1 %tobool, label %if.then.19, label %if.end.91

if.then.19:                                       ; preds = %if.end.17
  %28 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc20 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %28, i32 0, i32 68
  %escp_lf21 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc20, i32 0, i32 29
  %29 = load i32, i32* %escp_lf21, align 4, !tbaa !58
  %cmp22 = icmp sgt i32 %29, 0
  br i1 %cmp22, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %if.then.19
  %30 = load i32, i32* %dy, align 4, !tbaa !26
  %31 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc24 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %31, i32 0, i32 68
  %escp_lf25 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc24, i32 0, i32 29
  %32 = load i32, i32* %escp_lf25, align 4, !tbaa !58
  %rem = srem i32 %30, %32
  %cmp26 = icmp eq i32 %rem, 0
  br i1 %cmp26, label %if.then.28, label %if.else

if.then.28:                                       ; preds = %land.lhs.true
  %33 = load i32, i32* %dy, align 4, !tbaa !26
  %34 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc29 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %34, i32 0, i32 68
  %escp_lf30 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc29, i32 0, i32 29
  %35 = load i32, i32* %escp_lf30, align 4, !tbaa !58
  %div31 = sdiv i32 %33, %35
  store i32 %div31, i32* %nlf, align 4, !tbaa !26
  br label %if.end.32

if.else:                                          ; preds = %land.lhs.true, %if.then.19
  store i32 7, i32* %nlf, align 4, !tbaa !26
  br label %if.end.32

if.end.32:                                        ; preds = %if.else, %if.then.28
  %36 = load i32, i32* %nlf, align 4, !tbaa !26
  %cmp33 = icmp sgt i32 %36, 6
  br i1 %cmp33, label %if.then.35, label %if.else.79

if.then.35:                                       ; preds = %if.end.32
  %37 = load i32, i32* %escp_used.addr, align 4, !tbaa !26
  %inc36 = add nsw i32 %37, 1
  store i32 %inc36, i32* %escp_used.addr, align 4, !tbaa !26
  %idxprom37 = sext i32 %37 to i64
  %38 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc38 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %38, i32 0, i32 68
  %escp_data39 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc38, i32 0, i32 36
  %39 = load i8*, i8** %escp_data39, align 8, !tbaa !53
  %arrayidx40 = getelementptr inbounds i8, i8* %39, i64 %idxprom37
  store i8 27, i8* %arrayidx40, align 1, !tbaa !62
  %40 = load i32, i32* %escp_used.addr, align 4, !tbaa !26
  %inc41 = add nsw i32 %40, 1
  store i32 %inc41, i32* %escp_used.addr, align 4, !tbaa !26
  %idxprom42 = sext i32 %40 to i64
  %41 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc43 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %41, i32 0, i32 68
  %escp_data44 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc43, i32 0, i32 36
  %42 = load i8*, i8** %escp_data44, align 8, !tbaa !53
  %arrayidx45 = getelementptr inbounds i8, i8* %42, i64 %idxprom42
  store i8 40, i8* %arrayidx45, align 1, !tbaa !62
  %43 = load i32, i32* %escp_used.addr, align 4, !tbaa !26
  %inc46 = add nsw i32 %43, 1
  store i32 %inc46, i32* %escp_used.addr, align 4, !tbaa !26
  %idxprom47 = sext i32 %43 to i64
  %44 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc48 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %44, i32 0, i32 68
  %escp_data49 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc48, i32 0, i32 36
  %45 = load i8*, i8** %escp_data49, align 8, !tbaa !53
  %arrayidx50 = getelementptr inbounds i8, i8* %45, i64 %idxprom47
  store i8 86, i8* %arrayidx50, align 1, !tbaa !62
  %46 = load i32, i32* %escp_used.addr, align 4, !tbaa !26
  %inc51 = add nsw i32 %46, 1
  store i32 %inc51, i32* %escp_used.addr, align 4, !tbaa !26
  %idxprom52 = sext i32 %46 to i64
  %47 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc53 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %47, i32 0, i32 68
  %escp_data54 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc53, i32 0, i32 36
  %48 = load i8*, i8** %escp_data54, align 8, !tbaa !53
  %arrayidx55 = getelementptr inbounds i8, i8* %48, i64 %idxprom52
  store i8 2, i8* %arrayidx55, align 1, !tbaa !62
  %49 = load i32, i32* %escp_used.addr, align 4, !tbaa !26
  %inc56 = add nsw i32 %49, 1
  store i32 %inc56, i32* %escp_used.addr, align 4, !tbaa !26
  %idxprom57 = sext i32 %49 to i64
  %50 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc58 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %50, i32 0, i32 68
  %escp_data59 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc58, i32 0, i32 36
  %51 = load i8*, i8** %escp_data59, align 8, !tbaa !53
  %arrayidx60 = getelementptr inbounds i8, i8* %51, i64 %idxprom57
  store i8 0, i8* %arrayidx60, align 1, !tbaa !62
  %52 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc61 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %52, i32 0, i32 68
  %stc_y62 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc61, i32 0, i32 31
  %53 = load i32, i32* %stc_y62, align 4, !tbaa !59
  %and63 = and i32 %53, 255
  %conv64 = trunc i32 %and63 to i8
  %54 = load i32, i32* %escp_used.addr, align 4, !tbaa !26
  %inc65 = add nsw i32 %54, 1
  store i32 %inc65, i32* %escp_used.addr, align 4, !tbaa !26
  %idxprom66 = sext i32 %54 to i64
  %55 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc67 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %55, i32 0, i32 68
  %escp_data68 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc67, i32 0, i32 36
  %56 = load i8*, i8** %escp_data68, align 8, !tbaa !53
  %arrayidx69 = getelementptr inbounds i8, i8* %56, i64 %idxprom66
  store i8 %conv64, i8* %arrayidx69, align 1, !tbaa !62
  %57 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc70 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %57, i32 0, i32 68
  %stc_y71 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc70, i32 0, i32 31
  %58 = load i32, i32* %stc_y71, align 4, !tbaa !59
  %shr = ashr i32 %58, 8
  %and72 = and i32 %shr, 255
  %conv73 = trunc i32 %and72 to i8
  %59 = load i32, i32* %escp_used.addr, align 4, !tbaa !26
  %inc74 = add nsw i32 %59, 1
  store i32 %inc74, i32* %escp_used.addr, align 4, !tbaa !26
  %idxprom75 = sext i32 %59 to i64
  %60 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc76 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %60, i32 0, i32 68
  %escp_data77 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc76, i32 0, i32 36
  %61 = load i8*, i8** %escp_data77, align 8, !tbaa !53
  %arrayidx78 = getelementptr inbounds i8, i8* %61, i64 %idxprom75
  store i8 %conv73, i8* %arrayidx78, align 1, !tbaa !62
  br label %if.end.86

if.else.79:                                       ; preds = %if.end.32
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.else.79
  %62 = load i32, i32* %nlf, align 4, !tbaa !26
  %dec = add nsw i32 %62, -1
  store i32 %dec, i32* %nlf, align 4, !tbaa !26
  %tobool80 = icmp ne i32 %62, 0
  br i1 %tobool80, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %63 = load i32, i32* %escp_used.addr, align 4, !tbaa !26
  %inc81 = add nsw i32 %63, 1
  store i32 %inc81, i32* %escp_used.addr, align 4, !tbaa !26
  %idxprom82 = sext i32 %63 to i64
  %64 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc83 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %64, i32 0, i32 68
  %escp_data84 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc83, i32 0, i32 36
  %65 = load i8*, i8** %escp_data84, align 8, !tbaa !53
  %arrayidx85 = getelementptr inbounds i8, i8* %65, i64 %idxprom82
  store i8 10, i8* %arrayidx85, align 1, !tbaa !62
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %if.end.86

if.end.86:                                        ; preds = %while.end, %if.then.35
  %66 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc87 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %66, i32 0, i32 68
  %stc_y88 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc87, i32 0, i32 31
  %67 = load i32, i32* %stc_y88, align 4, !tbaa !59
  %68 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc89 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %68, i32 0, i32 68
  %prt_y90 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc89, i32 0, i32 30
  store i32 %67, i32* %prt_y90, align 4, !tbaa !61
  br label %if.end.91

if.end.91:                                        ; preds = %if.end.86, %if.end.17
  %69 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %color_info = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %69, i32 0, i32 11
  %num_components = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info, i32 0, i32 1
  %70 = load i32, i32* %num_components, align 4, !tbaa !40
  %cmp92 = icmp sgt i32 %70, 1
  br i1 %cmp92, label %land.lhs.true.94, label %if.end.125

land.lhs.true.94:                                 ; preds = %if.end.91
  %71 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc95 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %71, i32 0, i32 68
  %escp_c = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc95, i32 0, i32 25
  %72 = load i32, i32* %escp_c, align 4, !tbaa !112
  %73 = load i32, i32* %color.addr, align 4, !tbaa !26
  %idxprom96 = sext i32 %73 to i64
  %arrayidx97 = getelementptr inbounds [4 x i8], [4 x i8]* @stc_print_escpcmd.stc_colors, i32 0, i64 %idxprom96
  %74 = load i8, i8* %arrayidx97, align 1, !tbaa !62
  %conv98 = zext i8 %74 to i32
  %cmp99 = icmp ne i32 %72, %conv98
  br i1 %cmp99, label %if.then.101, label %if.end.125

if.then.101:                                      ; preds = %land.lhs.true.94
  %75 = load i32, i32* %escp_used.addr, align 4, !tbaa !26
  %inc102 = add nsw i32 %75, 1
  store i32 %inc102, i32* %escp_used.addr, align 4, !tbaa !26
  %idxprom103 = sext i32 %75 to i64
  %76 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc104 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %76, i32 0, i32 68
  %escp_data105 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc104, i32 0, i32 36
  %77 = load i8*, i8** %escp_data105, align 8, !tbaa !53
  %arrayidx106 = getelementptr inbounds i8, i8* %77, i64 %idxprom103
  store i8 27, i8* %arrayidx106, align 1, !tbaa !62
  %78 = load i32, i32* %escp_used.addr, align 4, !tbaa !26
  %inc107 = add nsw i32 %78, 1
  store i32 %inc107, i32* %escp_used.addr, align 4, !tbaa !26
  %idxprom108 = sext i32 %78 to i64
  %79 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc109 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %79, i32 0, i32 68
  %escp_data110 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc109, i32 0, i32 36
  %80 = load i8*, i8** %escp_data110, align 8, !tbaa !53
  %arrayidx111 = getelementptr inbounds i8, i8* %80, i64 %idxprom108
  store i8 114, i8* %arrayidx111, align 1, !tbaa !62
  %81 = load i32, i32* %color.addr, align 4, !tbaa !26
  %idxprom112 = sext i32 %81 to i64
  %arrayidx113 = getelementptr inbounds [4 x i8], [4 x i8]* @stc_print_escpcmd.stc_colors, i32 0, i64 %idxprom112
  %82 = load i8, i8* %arrayidx113, align 1, !tbaa !62
  %conv114 = zext i8 %82 to i32
  %83 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc115 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %83, i32 0, i32 68
  %escp_c116 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc115, i32 0, i32 25
  store i32 %conv114, i32* %escp_c116, align 4, !tbaa !112
  %84 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc117 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %84, i32 0, i32 68
  %escp_c118 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc117, i32 0, i32 25
  %85 = load i32, i32* %escp_c118, align 4, !tbaa !112
  %conv119 = trunc i32 %85 to i8
  %86 = load i32, i32* %escp_used.addr, align 4, !tbaa !26
  %inc120 = add nsw i32 %86, 1
  store i32 %inc120, i32* %escp_used.addr, align 4, !tbaa !26
  %idxprom121 = sext i32 %86 to i64
  %87 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc122 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %87, i32 0, i32 68
  %escp_data123 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc122, i32 0, i32 36
  %88 = load i8*, i8** %escp_data123, align 8, !tbaa !53
  %arrayidx124 = getelementptr inbounds i8, i8* %88, i64 %idxprom121
  store i8 %conv119, i8* %arrayidx124, align 1, !tbaa !62
  br label %if.end.125

if.end.125:                                       ; preds = %if.then.101, %land.lhs.true.94, %if.end.91
  %89 = load i32, i32* %escp_used.addr, align 4, !tbaa !26
  %inc126 = add nsw i32 %89, 1
  store i32 %inc126, i32* %escp_used.addr, align 4, !tbaa !26
  %idxprom127 = sext i32 %89 to i64
  %90 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc128 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %90, i32 0, i32 68
  %escp_data129 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc128, i32 0, i32 36
  %91 = load i8*, i8** %escp_data129, align 8, !tbaa !53
  %arrayidx130 = getelementptr inbounds i8, i8* %91, i64 %idxprom127
  store i8 27, i8* %arrayidx130, align 1, !tbaa !62
  %92 = load i32, i32* %escp_used.addr, align 4, !tbaa !26
  %inc131 = add nsw i32 %92, 1
  store i32 %inc131, i32* %escp_used.addr, align 4, !tbaa !26
  %idxprom132 = sext i32 %92 to i64
  %93 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc133 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %93, i32 0, i32 68
  %escp_data134 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc133, i32 0, i32 36
  %94 = load i8*, i8** %escp_data134, align 8, !tbaa !53
  %arrayidx135 = getelementptr inbounds i8, i8* %94, i64 %idxprom132
  store i8 46, i8* %arrayidx135, align 1, !tbaa !62
  %95 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc136 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %95, i32 0, i32 68
  %flags137 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc136, i32 0, i32 0
  %96 = load i64, i64* %flags137, align 8, !tbaa !5
  %and138 = and i64 %96, 3072
  %cmp139 = icmp eq i64 %and138, 1024
  %cond = select i1 %cmp139, i32 0, i32 1
  %conv141 = trunc i32 %cond to i8
  %97 = load i32, i32* %escp_used.addr, align 4, !tbaa !26
  %inc142 = add nsw i32 %97, 1
  store i32 %inc142, i32* %escp_used.addr, align 4, !tbaa !26
  %idxprom143 = sext i32 %97 to i64
  %98 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc144 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %98, i32 0, i32 68
  %escp_data145 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc144, i32 0, i32 36
  %99 = load i8*, i8** %escp_data145, align 8, !tbaa !53
  %arrayidx146 = getelementptr inbounds i8, i8* %99, i64 %idxprom143
  store i8 %conv141, i8* %arrayidx146, align 1, !tbaa !62
  %100 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc147 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %100, i32 0, i32 68
  %escp_v = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc147, i32 0, i32 26
  %101 = load i32, i32* %escp_v, align 4, !tbaa !27
  %conv148 = trunc i32 %101 to i8
  %102 = load i32, i32* %escp_used.addr, align 4, !tbaa !26
  %inc149 = add nsw i32 %102, 1
  store i32 %inc149, i32* %escp_used.addr, align 4, !tbaa !26
  %idxprom150 = sext i32 %102 to i64
  %103 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc151 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %103, i32 0, i32 68
  %escp_data152 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc151, i32 0, i32 36
  %104 = load i8*, i8** %escp_data152, align 8, !tbaa !53
  %arrayidx153 = getelementptr inbounds i8, i8* %104, i64 %idxprom150
  store i8 %conv148, i8* %arrayidx153, align 1, !tbaa !62
  %105 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc154 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %105, i32 0, i32 68
  %escp_h = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc154, i32 0, i32 27
  %106 = load i32, i32* %escp_h, align 4, !tbaa !111
  %conv155 = trunc i32 %106 to i8
  %107 = load i32, i32* %escp_used.addr, align 4, !tbaa !26
  %inc156 = add nsw i32 %107, 1
  store i32 %inc156, i32* %escp_used.addr, align 4, !tbaa !26
  %idxprom157 = sext i32 %107 to i64
  %108 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc158 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %108, i32 0, i32 68
  %escp_data159 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc158, i32 0, i32 36
  %109 = load i8*, i8** %escp_data159, align 8, !tbaa !53
  %arrayidx160 = getelementptr inbounds i8, i8* %109, i64 %idxprom157
  store i8 %conv155, i8* %arrayidx160, align 1, !tbaa !62
  %110 = load i32, i32* %m.addr, align 4, !tbaa !26
  %conv161 = trunc i32 %110 to i8
  %111 = load i32, i32* %escp_used.addr, align 4, !tbaa !26
  %inc162 = add nsw i32 %111, 1
  store i32 %inc162, i32* %escp_used.addr, align 4, !tbaa !26
  %idxprom163 = sext i32 %111 to i64
  %112 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc164 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %112, i32 0, i32 68
  %escp_data165 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc164, i32 0, i32 36
  %113 = load i8*, i8** %escp_data165, align 8, !tbaa !53
  %arrayidx166 = getelementptr inbounds i8, i8* %113, i64 %idxprom163
  store i8 %conv161, i8* %arrayidx166, align 1, !tbaa !62
  %114 = load i32, i32* %wbytes.addr, align 4, !tbaa !26
  %shl = shl i32 %114, 3
  %and167 = and i32 %shl, 255
  %conv168 = trunc i32 %and167 to i8
  %115 = load i32, i32* %escp_used.addr, align 4, !tbaa !26
  %inc169 = add nsw i32 %115, 1
  store i32 %inc169, i32* %escp_used.addr, align 4, !tbaa !26
  %idxprom170 = sext i32 %115 to i64
  %116 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc171 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %116, i32 0, i32 68
  %escp_data172 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc171, i32 0, i32 36
  %117 = load i8*, i8** %escp_data172, align 8, !tbaa !53
  %arrayidx173 = getelementptr inbounds i8, i8* %117, i64 %idxprom170
  store i8 %conv168, i8* %arrayidx173, align 1, !tbaa !62
  %118 = load i32, i32* %wbytes.addr, align 4, !tbaa !26
  %shr174 = ashr i32 %118, 5
  %and175 = and i32 %shr174, 255
  %conv176 = trunc i32 %and175 to i8
  %119 = load i32, i32* %escp_used.addr, align 4, !tbaa !26
  %inc177 = add nsw i32 %119, 1
  store i32 %inc177, i32* %escp_used.addr, align 4, !tbaa !26
  %idxprom178 = sext i32 %119 to i64
  %120 = load %struct.stcolor_device_s*, %struct.stcolor_device_s** %sd.addr, align 8, !tbaa !1
  %stc179 = getelementptr inbounds %struct.stcolor_device_s, %struct.stcolor_device_s* %120, i32 0, i32 68
  %escp_data180 = getelementptr inbounds %struct.stc_s, %struct.stc_s* %stc179, i32 0, i32 36
  %121 = load i8*, i8** %escp_data180, align 8, !tbaa !53
  %arrayidx181 = getelementptr inbounds i8, i8* %121, i64 %idxprom178
  store i8 %conv176, i8* %arrayidx181, align 1, !tbaa !62
  %122 = load i32, i32* %escp_used.addr, align 4, !tbaa !26
  %123 = bitcast i32* %nlf to i8*
  call void @llvm.lifetime.end(i64 4, i8* %123) #2
  %124 = bitcast i32* %dy to i8*
  call void @llvm.lifetime.end(i64 4, i8* %124) #2
  ret i32 %122
}

attributes #0 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }
attributes #3 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin }
attributes #6 = { nobuiltin nounwind }
attributes #7 = { nobuiltin nounwind readonly }

!llvm.ident = !{!0}

!0 = !{!"clang version 3.7.0 (tags/RELEASE_370/final)"}
!1 = !{!2, !2, i64 0}
!2 = !{!"any pointer", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C/C++ TBAA"}
!5 = !{!6, !9, i64 18472}
!6 = !{!"stcolor_device_s", !7, i64 0, !2, i64 8, !2, i64 16, !2, i64 24, !2, i64 32, !7, i64 40, !2, i64 48, !8, i64 56, !7, i64 80, !7, i64 84, !7, i64 88, !10, i64 96, !13, i64 816, !7, i64 832, !7, i64 836, !7, i64 840, !7, i64 844, !7, i64 848, !7, i64 852, !3, i64 856, !3, i64 864, !7, i64 880, !3, i64 884, !3, i64 892, !3, i64 900, !3, i64 908, !9, i64 928, !9, i64 936, !7, i64 944, !7, i64 948, !7, i64 952, !7, i64 956, !7, i64 960, !9, i64 968, !9, i64 976, !14, i64 984, !7, i64 1052, !7, i64 1056, !15, i64 1064, !2, i64 1104, !3, i64 1112, !17, i64 1120, !18, i64 1144, !3, i64 1728, !19, i64 12968, !3, i64 13056, !7, i64 17152, !7, i64 17156, !7, i64 17160, !7, i64 17164, !7, i64 17168, !7, i64 17172, !2, i64 17176, !9, i64 17184, !2, i64 17192, !2, i64 17200, !2, i64 17208, !2, i64 17216, !2, i64 17224, !7, i64 17232, !2, i64 17240, !7, i64 17248, !7, i64 17252, !21, i64 17256, !7, i64 17288, !2, i64 17296, !18, i64 17304, !18, i64 17888, !22, i64 18472}
!7 = !{!"int", !3, i64 0}
!8 = !{!"rc_header_s", !9, i64 0, !2, i64 8, !2, i64 16}
!9 = !{!"long", !3, i64 0}
!10 = !{!"gx_device_color_info_s", !7, i64 0, !7, i64 4, !3, i64 8, !11, i64 12, !3, i64 14, !7, i64 16, !7, i64 20, !7, i64 24, !7, i64 28, !12, i64 32, !3, i64 40, !3, i64 44, !3, i64 108, !3, i64 176, !2, i64 688, !3, i64 696, !9, i64 704, !7, i64 712}
!11 = !{!"short", !3, i64 0}
!12 = !{!"gx_device_anti_alias_info_s", !7, i64 0, !7, i64 4}
!13 = !{!"gx_device_cached_colors_s", !9, i64 0, !9, i64 8}
!14 = !{!"gx_stroked_gradient_recognizer_s", !7, i64 0, !3, i64 4, !3, i64 36}
!15 = !{!"gdev_space_params_s", !9, i64 0, !9, i64 8, !16, i64 16, !7, i64 32, !3, i64 36}
!16 = !{!"gx_band_params_s", !7, i64 0, !7, i64 4, !9, i64 8}
!17 = !{!"gx_page_device_procs_s", !2, i64 0, !2, i64 8, !2, i64 16}
!18 = !{!"gx_device_procs_s", !2, i64 0, !2, i64 8, !2, i64 16, !2, i64 24, !2, i64 32, !2, i64 40, !2, i64 48, !2, i64 56, !2, i64 64, !2, i64 72, !2, i64 80, !2, i64 88, !2, i64 96, !2, i64 104, !2, i64 112, !2, i64 120, !2, i64 128, !2, i64 136, !2, i64 144, !2, i64 152, !2, i64 160, !2, i64 168, !2, i64 176, !2, i64 184, !2, i64 192, !2, i64 200, !2, i64 208, !2, i64 216, !2, i64 224, !2, i64 232, !2, i64 240, !2, i64 248, !2, i64 256, !2, i64 264, !2, i64 272, !2, i64 280, !2, i64 288, !2, i64 296, !2, i64 304, !2, i64 312, !2, i64 320, !2, i64 328, !2, i64 336, !2, i64 344, !2, i64 352, !2, i64 360, !2, i64 368, !2, i64 376, !2, i64 384, !2, i64 392, !2, i64 400, !2, i64 408, !2, i64 416, !2, i64 424, !2, i64 432, !2, i64 440, !2, i64 448, !2, i64 456, !2, i64 464, !2, i64 472, !2, i64 480, !2, i64 488, !2, i64 496, !2, i64 504, !2, i64 512, !2, i64 520, !2, i64 528, !2, i64 536, !2, i64 544, !2, i64 552, !2, i64 560, !2, i64 568, !2, i64 576}
!19 = !{!"gx_printer_device_procs_s", !2, i64 0, !2, i64 8, !20, i64 16, !2, i64 48, !2, i64 56, !2, i64 64, !2, i64 72, !2, i64 80}
!20 = !{!"gx_device_buf_procs_s", !2, i64 0, !2, i64 8, !2, i64 16, !2, i64 24}
!21 = !{!"bg_print_s", !2, i64 0, !2, i64 8, !2, i64 16, !7, i64 24, !7, i64 28}
!22 = !{!"stc_s", !9, i64 0, !7, i64 8, !2, i64 16, !2, i64 24, !3, i64 32, !3, i64 64, !3, i64 80, !3, i64 112, !3, i64 144, !3, i64 160, !3, i64 192, !3, i64 204, !23, i64 216, !24, i64 232, !24, i64 248, !7, i64 264, !7, i64 268, !7, i64 272, !7, i64 276, !7, i64 280, !7, i64 284, !7, i64 288, !7, i64 292, !7, i64 296, !7, i64 300, !7, i64 304, !7, i64 308, !7, i64 312, !7, i64 316, !7, i64 320, !7, i64 324, !7, i64 328, !7, i64 332, !7, i64 336, !2, i64 344, !2, i64 352, !2, i64 360, !3, i64 368, !7, i64 400}
!23 = !{!"gs_param_string_array_s", !2, i64 0, !7, i64 8, !7, i64 12}
!24 = !{!"gs_param_string_s", !2, i64 0, !7, i64 8, !7, i64 12}
!25 = !{!9, !9, i64 0}
!26 = !{!7, !7, i64 0}
!27 = !{!6, !7, i64 18780}
!28 = !{!6, !7, i64 18772}
!29 = !{!6, !2, i64 24}
!30 = !{!31, !2, i64 200}
!31 = !{!"gs_memory_s", !2, i64 0, !32, i64 8, !2, i64 192, !2, i64 200, !2, i64 208}
!32 = !{!"gs_memory_procs_s", !2, i64 0, !2, i64 8, !2, i64 16, !2, i64 24, !2, i64 32, !2, i64 40, !2, i64 48, !2, i64 56, !2, i64 64, !2, i64 72, !2, i64 80, !2, i64 88, !2, i64 96, !2, i64 104, !2, i64 112, !2, i64 120, !2, i64 128, !2, i64 136, !2, i64 144, !2, i64 152, !2, i64 160, !2, i64 168, !2, i64 176}
!33 = !{!31, !2, i64 88}
!34 = !{!6, !7, i64 18736}
!35 = !{!6, !7, i64 18760}
!36 = !{!6, !7, i64 836}
!37 = !{!38, !38, i64 0}
!38 = !{!"float", !3, i64 0}
!39 = !{!6, !7, i64 18808}
!40 = !{!6, !7, i64 100}
!41 = !{!6, !2, i64 18488}
!42 = !{!43, !7, i64 16}
!43 = !{!"stc_dither_s", !2, i64 0, !2, i64 8, !7, i64 16, !7, i64 20, !3, i64 24}
!44 = !{!6, !7, i64 18480}
!45 = !{!6, !7, i64 18752}
!46 = !{!43, !7, i64 20}
!47 = !{!6, !7, i64 18756}
!48 = !{!6, !7, i64 18788}
!49 = !{!6, !2, i64 18816}
!50 = !{!6, !2, i64 18824}
!51 = !{!6, !7, i64 18768}
!52 = !{!6, !7, i64 18764}
!53 = !{!6, !2, i64 18832}
!54 = !{!6, !11, i64 108}
!55 = !{!56, !56, i64 0}
!56 = !{!"double", !3, i64 0}
!57 = !{!43, !2, i64 8}
!58 = !{!6, !7, i64 18792}
!59 = !{!6, !7, i64 18800}
!60 = !{!6, !7, i64 18804}
!61 = !{!6, !7, i64 18796}
!62 = !{!3, !3, i64 0}
!63 = !{!6, !2, i64 18720}
!64 = !{!6, !7, i64 18728}
!65 = !{!31, !2, i64 24}
!66 = !{!6, !7, i64 18696}
!67 = !{!43, !2, i64 0}
!68 = !{!6, !2, i64 18688}
!69 = !{!6, !7, i64 18700}
!70 = !{!24, !2, i64 0}
!71 = !{!24, !7, i64 8}
!72 = !{!24, !7, i64 12}
!73 = !{!11, !11, i64 0}
!74 = !{!6, !7, i64 18872}
!75 = !{!6, !3, i64 104}
!76 = !{!6, !2, i64 1184}
!77 = !{!6, !2, i64 1264}
!78 = !{!6, !2, i64 1192}
!79 = !{!6, !2, i64 1552}
!80 = !{!6, !2, i64 1560}
!81 = !{!6, !2, i64 1536}
!82 = !{!6, !2, i64 1544}
!83 = !{!6, !7, i64 832}
!84 = !{!85, !2, i64 24}
!85 = !{!"gx_device_s", !7, i64 0, !2, i64 8, !2, i64 16, !2, i64 24, !2, i64 32, !7, i64 40, !2, i64 48, !8, i64 56, !7, i64 80, !7, i64 84, !7, i64 88, !10, i64 96, !13, i64 816, !7, i64 832, !7, i64 836, !7, i64 840, !7, i64 844, !7, i64 848, !7, i64 852, !3, i64 856, !3, i64 864, !7, i64 880, !3, i64 884, !3, i64 892, !3, i64 900, !3, i64 908, !9, i64 928, !9, i64 936, !7, i64 944, !7, i64 948, !7, i64 952, !7, i64 956, !7, i64 960, !9, i64 968, !9, i64 976, !14, i64 984, !7, i64 1052, !7, i64 1056, !15, i64 1064, !2, i64 1104, !3, i64 1112, !17, i64 1120, !18, i64 1144}
!86 = !{!6, !2, i64 18496}
!87 = !{!88, !2, i64 0}
!88 = !{!"gs_param_float_array_s", !2, i64 0, !7, i64 8, !7, i64 12}
!89 = !{!88, !7, i64 8}
!90 = !{!88, !7, i64 12}
!91 = !{!92, !2, i64 0}
!92 = !{!"gs_param_list_s", !2, i64 0, !2, i64 8, !7, i64 16}
!93 = !{!94, !2, i64 56}
!94 = !{!"gs_param_list_procs_s", !2, i64 0, !2, i64 8, !2, i64 16, !2, i64 24, !2, i64 32, !2, i64 40, !2, i64 48, !2, i64 56, !2, i64 64}
!95 = !{!10, !7, i64 4}
!96 = !{!22, !2, i64 16}
!97 = !{!6, !7, i64 112}
!98 = !{!6, !7, i64 116}
!99 = !{!6, !7, i64 120}
!100 = !{!6, !7, i64 124}
!101 = !{!22, !2, i64 24}
!102 = !{!6, !2, i64 18704}
!103 = !{!22, !2, i64 232}
!104 = !{!6, !7, i64 18712}
!105 = !{!6, !7, i64 18716}
!106 = !{!22, !2, i64 248}
!107 = !{!6, !7, i64 18732}
!108 = !{!6, !7, i64 84}
!109 = !{!10, !11, i64 12}
!110 = !{!22, !7, i64 8}
!111 = !{!6, !7, i64 18784}
!112 = !{!6, !7, i64 18776}
!113 = !{!6, !7, i64 18740}
!114 = !{!6, !7, i64 18744}
!115 = !{!6, !7, i64 18748}
