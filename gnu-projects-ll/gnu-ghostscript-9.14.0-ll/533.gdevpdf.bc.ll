; ModuleID = './gdevpdf.bc'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.gs_memory_struct_type_s = type { i32, i8*, %struct.struct_shared_procs_s*, void (%struct.gs_memory_s*, i8*, i32, %struct.gs_memory_struct_type_s*)*, %struct.gs_ptr_procs_s* (%struct.gs_memory_s*, i8*, i32, i32, %struct.enum_ptr_s*, %struct.gs_memory_struct_type_s*, %struct.gc_state_s*)*, void (i8*, i32, %struct.gs_memory_struct_type_s*, %struct.gc_state_s*)*, void (%struct.gs_memory_s*, i8*)*, i8* }
%struct.struct_shared_procs_s = type opaque
%struct.gs_memory_s = type { %struct.gs_memory_s*, %struct.gs_memory_procs_s, %struct.gs_lib_ctx_s*, %struct.gs_memory_s*, %struct.gs_memory_s* }
%struct.gs_memory_procs_s = type { i8* (%struct.gs_memory_s*, i32, i8*)*, i8* (%struct.gs_memory_s*, i8*, i32, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)*, %struct.gs_memory_s* (%struct.gs_memory_s*)*, void (%struct.gs_memory_s*, %struct.gs_memory_status_s*)*, void (%struct.gs_memory_s*, i32, i8*)*, void (%struct.gs_memory_s*)*, i8* (%struct.gs_memory_s*, i32, i8*)*, i8* (%struct.gs_memory_s*, %struct.gs_memory_struct_type_s*, i8*)*, i8* (%struct.gs_memory_s*, %struct.gs_memory_struct_type_s*, i8*)*, i8* (%struct.gs_memory_s*, i32, i32, i8*)*, i8* (%struct.gs_memory_s*, i32, i32, i8*)*, i8* (%struct.gs_memory_s*, i32, %struct.gs_memory_struct_type_s*, i8*)*, i8* (%struct.gs_memory_s*, i32, %struct.gs_memory_struct_type_s*, i8*)*, i32 (%struct.gs_memory_s*, i8*)*, %struct.gs_memory_struct_type_s* (%struct.gs_memory_s*, i8*)*, i8* (%struct.gs_memory_s*, i32, i8*)*, i8* (%struct.gs_memory_s*, i32, i8*)*, i8* (%struct.gs_memory_s*, i8*, i32, i32, i8*)*, void (%struct.gs_memory_s*, i8*, i32, i8*)*, i32 (%struct.gs_memory_s*, %struct.gs_gc_root_s*, %struct.gs_ptr_procs_s*, i8**, i8*)*, void (%struct.gs_memory_s*, %struct.gs_gc_root_s*, i8*)*, void (%struct.gs_memory_s*, i32)* }
%struct.gs_memory_status_s = type { i64, i64, i32 }
%struct.gs_gc_root_s = type { %struct.gs_gc_root_s*, %struct.gs_ptr_procs_s*, i8**, i32 }
%struct.gs_ptr_procs_s = type { void (%struct.enum_ptr_s*, %struct.gc_state_s*)*, i32 (%struct.enum_ptr_s*, %struct.gc_state_s*)*, i8* (i8*, %struct.gc_state_s*)* }
%struct.enum_ptr_s = type { i8*, i32 }
%struct.gc_state_s = type opaque
%struct.gs_lib_ctx_s = type { %struct.gs_memory_s*, %struct._IO_FILE*, %struct._IO_FILE*, %struct._IO_FILE*, %struct._IO_FILE*, i32, i32, i32, i8*, i8*, i32 (i8*, i8*, i32)*, i32 (i8*, i8*, i32)*, i32 (i8*, i8*, i32)*, i32 (i8*)*, i64, i8*, %struct.name_table_s*, i32, %struct.gx_io_device_s**, i32, i32, [2 x i64], %struct.gs_font_dir_s*, i32, i8*, i32, i8*, %struct.gs_fapi_server_s** }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.name_table_s = type opaque
%struct.gx_io_device_s = type { i8*, i8*, %struct.gx_io_device_procs_s, i8* }
%struct.gx_io_device_procs_s = type { i32 (%struct.gx_io_device_s*, %struct.gs_memory_s*)*, i32 (%struct.gx_io_device_s*, i8*, %struct.stream_s**, %struct.gs_memory_s*)*, i32 (%struct.gx_io_device_s*, i8*, i32, i8*, %struct.stream_s**, %struct.gs_memory_s*)*, i32 (%struct.gx_io_device_s*, i8*, i8*, %struct._IO_FILE**, i8*, i32)*, i32 (%struct.gx_io_device_s*, %struct._IO_FILE*)*, i32 (%struct.gx_io_device_s*, i8*)*, i32 (%struct.gx_io_device_s*, i8*, i8*)*, i32 (%struct.gx_io_device_s*, i8*, %struct.stat*)*, %struct.file_enum_s* (%struct.gx_io_device_s*, i8*, i32, %struct.gs_memory_s*)*, i32 (%struct.file_enum_s*, i8*, i32)*, void (%struct.file_enum_s*)*, i32 (%struct.gx_io_device_s*, %struct.gs_param_list_s*)*, i32 (%struct.gx_io_device_s*, %struct.gs_param_list_s*)* }
%struct.stream_s = type { %struct.stream_template_s*, %struct.gs_memory_s*, i32 (%struct.stream_state_s*, i8*)*, i32, [80 x i8], %union.stream_cursor_s, i8*, i32, i32, i16, i8, i8, %struct.gs_string_s, i64, %struct.stream_procs, %struct.stream_s*, i32, i32, %struct.stream_state_s*, i16, i16, %struct.stream_s*, %struct.stream_s*, i32, i32, i32 (%struct.stream_s*)*, %struct._IO_FILE*, %struct.gs_const_string_s, i32, i64, i64 }
%struct.stream_template_s = type { %struct.gs_memory_struct_type_s*, i32 (%struct.stream_state_s*)*, i32 (%struct.stream_state_s*, %struct.stream_cursor_read_s*, %struct.stream_cursor_write_s*, i32)*, i32, i32, void (%struct.stream_state_s*)*, void (%struct.stream_state_s*)*, i32 (%struct.stream_state_s*)* }
%struct.stream_cursor_read_s = type { i8*, i8*, i8* }
%struct.stream_cursor_write_s = type { i8*, i8*, i8* }
%union.stream_cursor_s = type { %struct.stream_cursor_read_s }
%struct.gs_string_s = type { i8*, i32 }
%struct.stream_procs = type { i32 (%struct.stream_s*, i64*)*, i32 (%struct.stream_s*, i64)*, void (%struct.stream_s*)*, i32 (%struct.stream_s*)*, i32 (%struct.stream_s*)*, i32 (%struct.stream_state_s*, %struct.stream_cursor_read_s*, %struct.stream_cursor_write_s*, i32)*, i32 (%struct.stream_s*, i32)* }
%struct.stream_state_s = type { %struct.stream_template_s*, %struct.gs_memory_s*, i32 (%struct.stream_state_s*, i8*)*, i32, [80 x i8] }
%struct.gs_const_string_s = type { i8*, i32 }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.file_enum_s = type opaque
%struct.gs_param_list_s = type { %struct.gs_param_list_procs_s*, %struct.gs_memory_s*, i32 }
%struct.gs_param_list_procs_s = type { i32 (%struct.gs_param_list_s*, i8*, %struct.gs_param_typed_value_s*)*, i32 (%struct.gs_param_list_s*, i8*, %struct.gs_param_collection_s*, i32)*, i32 (%struct.gs_param_list_s*, i8*, %struct.gs_param_collection_s*)*, i32 (%struct.gs_param_list_s*, %union.gs_param_enumerator_s*, %struct.gs_param_string_s*)*, i32 (%struct.gs_param_list_s*, i8*)*, i32 (%struct.gs_param_list_s*, i8*)*, i32 (%struct.gs_param_list_s*, i8*)*, i32 (%struct.gs_param_list_s*, i8*, i32)*, i32 (%struct.gs_param_list_s*)* }
%struct.gs_param_typed_value_s = type { %union.gs_param_value_s, i32 }
%union.gs_param_value_s = type { %struct.gs_param_string_s }
%struct.gs_param_string_s = type { i8*, i32, i32 }
%struct.gs_param_collection_s = type { %struct.gs_param_list_s*, i32 }
%union.gs_param_enumerator_s = type { i64 }
%struct.gs_font_dir_s = type opaque
%struct.gs_fapi_server_s = type opaque
%struct.gx_device_pdf_s = type { i32, %struct.gx_device_procs_s*, i8*, %struct.gs_memory_s*, %struct.gs_memory_struct_type_s*, i32, void (%struct.gx_device_s*)*, %struct.rc_header_s, i32, i32, i32, %struct.gx_device_color_info_s, %struct.gx_device_cached_colors_s, i32, i32, i32, i32, i32, i32, [2 x float], [4 x float], i32, [2 x float], [2 x float], [2 x float], [4 x float], i64, i64, i32, i32, i32, i32, i32, i64, i64, %struct.gx_stroked_gradient_recognizer_s, i32, i32, %struct.gdev_space_params_s, %struct.cmm_dev_profile_s*, i32, %struct.gx_page_device_procs_s, %struct.gx_device_procs_s, %struct.gs_memory_s*, %struct.gx_device_vector_procs_s*, [4096 x i8], %struct._IO_FILE*, %struct.stream_s*, i8*, i32, i32, %struct.gs_imager_state_s, float*, i32, i32, i32, %struct.gx_hl_saved_color_s, %struct.gx_hl_saved_color_s, i64, i64, i32, i32, %struct.gs_point_s, i32, %struct.gx_device_bbox_s*, i64, i64, i32, i32, i32, i32, i32, double, %struct.psdf_distiller_params_s, i32, double, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.gs_param_float_array_s, %struct.gs_param_float_array_s, i32, i32, i32, i64, i32, i32, %struct.gs_param_string_s, %struct.gs_param_string_s, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, %struct.gs_param_int_array_s, %struct.gs_param_string_s, %struct.gs_param_string_s, i32, i32, i32, %struct.gs_param_string_s, i32, i32, [32 x i8], [32 x i8], [16 x i8], i32, i32, i32, %struct.gs_rect_s, %struct.pdf_page_dsc_info_s, %struct.pdf_page_dsc_info_s, i32, i32, i32, i32, i32, i64, [4 x i64], i32, i64, i64, i32, i32, %struct.pdf_temp_file_s, %struct.pdf_temp_file_s, %struct.pdf_temp_file_s, %struct.pdf_temp_file_s, i64, %struct.cos_dict_s*, %struct.cos_dict_s*, %struct.cos_dict_s*, i64, i32, i32, i64, i32, i64, i64, i32, %struct.pdf_text_data_s*, %struct.pdf_text_rotation_s, %struct.pdf_page_s*, i32, i64, [15 x %struct.pdf_resource_list_s], [5 x %struct.pdf_resource_s*], [2 x %struct.pdf_resource_s*], %struct.pdf_resource_s*, %struct.pdf_resource_s*, i64, %struct.pdf_outline_level_s*, i32, i32, i32, i32, %struct.pdf_article_s*, %struct.cos_dict_s*, %struct.cos_dict_s*, [16 x i8], [2 x i64], %struct.cos_dict_s*, %struct.cos_dict_s*, %struct.cos_array_s*, %struct.cos_array_s*, %struct.pdf_font_cache_elem_s*, %struct.gs_point_s, %struct.gx_path_s*, %struct.cos_array_s*, i32, %struct.cos_dict_s*, %struct.gs_text_enum_s*, %struct.pdf_viewer_state_s*, i32, i32, i32, %struct.pdf_viewer_state_s, i32, i32, i32, %struct.pdf_substream_save_s*, i32, i32, i32, %struct.gs_matrix_s, %struct.cos_dict_s*, i32, i32, i32, %struct.pdf_resource_s*, %struct.pdf_resource_s*, %struct.gs_matrix_fixed_s, i32, %struct.gs_rect_s, i32, i32, i32, %struct.pdf_char_glyph_pairs_s*, i32, i32, i64, i32, i32, i32, %struct.gs_matrix_s, double, %struct.pdf_resource_s*, %struct.gs_const_string_s, i32, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.linearisation_record_s*, i32, i32 }
%struct.gx_device_s = type { i32, %struct.gx_device_procs_s*, i8*, %struct.gs_memory_s*, %struct.gs_memory_struct_type_s*, i32, void (%struct.gx_device_s*)*, %struct.rc_header_s, i32, i32, i32, %struct.gx_device_color_info_s, %struct.gx_device_cached_colors_s, i32, i32, i32, i32, i32, i32, [2 x float], [4 x float], i32, [2 x float], [2 x float], [2 x float], [4 x float], i64, i64, i32, i32, i32, i32, i32, i64, i64, %struct.gx_stroked_gradient_recognizer_s, i32, i32, %struct.gdev_space_params_s, %struct.cmm_dev_profile_s*, i32, %struct.gx_page_device_procs_s, %struct.gx_device_procs_s }
%struct.rc_header_s = type { i64, %struct.gs_memory_s*, void (%struct.gs_memory_s*, i8*, i8*)* }
%struct.gx_device_color_info_s = type { i32, i32, i32, i16, i8, i32, i32, i32, i32, %struct.gx_device_anti_alias_info_s, i32, [64 x i8], [64 x i8], [64 x i64], i8*, i32, i64, i32 }
%struct.gx_device_anti_alias_info_s = type { i32, i32 }
%struct.gx_device_cached_colors_s = type { i64, i64 }
%struct.gx_stroked_gradient_recognizer_s = type { i32, [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s] }
%struct.gs_fixed_point_s = type { i32, i32 }
%struct.gdev_space_params_s = type { i64, i64, %struct.gx_band_params_s, i32, i32 }
%struct.gx_band_params_s = type { i32, i32, i64 }
%struct.cmm_dev_profile_s = type { [4 x %struct.cmm_profile_s*], %struct.cmm_profile_s*, %struct.cmm_profile_s*, %struct.cmm_profile_s*, [4 x %struct.gsicc_rendering_param_s], i32, i32, i32, i32, i32, i32, %struct.gsicc_namelist_s*, i32, %struct.gs_memory_s*, %struct.rc_header_s }
%struct.cmm_profile_s = type { i8, i8, i32, i32, i32, i32, %struct.gs_range_icc_s, i64, i32, [15 x i32], i32, i32, i32, %struct.gsicc_rendering_param_s, i8*, %struct.gx_device_s*, %struct.gsicc_namelist_s*, i8*, %struct.rc_header_s, i32, i8*, %struct.gs_memory_s*, %struct.gx_monitor_s* }
%struct.gs_range_icc_s = type { [15 x %struct.gs_range_s] }
%struct.gs_range_s = type { float, float }
%struct.gsicc_rendering_param_s = type { i32, i32, i32, i32, i32, i32 }
%struct.gx_monitor_s = type { %struct.gs_memory_s*, %union.gp_monitor }
%union.gp_monitor = type { i8* }
%struct.gsicc_namelist_s = type { i32, %struct.gsicc_colorname_s*, i8*, %struct.gs_devicen_color_map_s*, i32 }
%struct.gsicc_colorname_s = type { i8*, i32, %struct.gsicc_colorname_s* }
%struct.gs_devicen_color_map_s = type { i32, i32, i32, i32, i64, [64 x i32] }
%struct.gx_page_device_procs_s = type { i32 (%struct.gx_device_s*, %struct.gs_state_s*)*, i32 (%struct.gx_device_s*, %struct.gs_state_s*)*, i32 (%struct.gx_device_s*, i32, %struct.gs_state_s*)* }
%struct.gs_state_s = type opaque
%struct.gx_device_procs_s = type { i32 (%struct.gx_device_s*)*, void (%struct.gx_device_s*, %struct.gs_matrix_s*)*, i32 (%struct.gx_device_s*)*, i32 (%struct.gx_device_s*, i32, i32)*, i32 (%struct.gx_device_s*)*, i64 (%struct.gx_device_s*, i16*)*, i32 (%struct.gx_device_s*, i64, i16*)*, i32 (%struct.gx_device_s*, i32, i32, i32, i32, i64)*, i32 (%struct.gx_device_s*, %struct.gx_tile_bitmap_s*, i32, i32, i32, i32, i64, i64, i32, i32)*, i32 (%struct.gx_device_s*, i8*, i32, i32, i64, i32, i32, i32, i32, i64, i64)*, i32 (%struct.gx_device_s*, i8*, i32, i32, i64, i32, i32, i32, i32)*, i32 (%struct.gx_device_s*, i32, i32, i32, i32, i64)*, i32 (%struct.gx_device_s*, i32, i8*, i8**)*, i32 (%struct.gx_device_s*, %struct.gs_param_list_s*)*, i32 (%struct.gx_device_s*, %struct.gs_param_list_s*)*, i64 (%struct.gx_device_s*, i16*)*, %struct.gx_xfont_procs_s* (%struct.gx_device_s*)*, %struct.gx_device_s* (%struct.gx_device_s*)*, i64 (%struct.gx_device_s*, i16, i16, i16, i16)*, %struct.gx_device_s* (%struct.gx_device_s*)*, i32 (%struct.gx_device_s*, i32)*, i32 (%struct.gx_device_s*, i8*, i32, i32, i64, i32, i32, i32, i32, i64, i32)*, i32 (%struct.gx_device_s*, i32, i32*)*, i32 (%struct.gx_device_s*, i8*, i32, i32, i64, i64*, %struct.gx_tile_bitmap_s*, i64*, i32, i32, i32, i32, i32, i32, i32)*, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gx_path_s*, %struct.gx_fill_params_s*, %struct.gx_device_color_s*, %struct.gx_clip_path_s*)*, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gx_path_s*, %struct.gx_stroke_params_s*, %struct.gx_device_color_s*, %struct.gx_clip_path_s*)*, i32 (%struct.gx_device_s*, i8*, i32, i32, i64, i32, i32, i32, i32, %struct.gx_device_color_s*, i32, i32, %struct.gx_clip_path_s*)*, i32 (%struct.gx_device_s*, %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s*, i32, i32, i32, %struct.gx_device_color_s*, i32)*, i32 (%struct.gx_device_s*, i32, i32, i32, i32, i32, i32, %struct.gx_device_color_s*, i32)*, i32 (%struct.gx_device_s*, i32, i32, i32, i32, i32, i32, %struct.gx_device_color_s*, i32)*, i32 (%struct.gx_device_s*, i32, i32, i32, i32, %struct.gx_device_color_s*, i32, i32, i32)*, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gs_image1_s*, i32, %struct.gs_int_rect_s*, %struct.gx_device_color_s*, %struct.gx_clip_path_s*, %struct.gs_memory_s*, %struct.gx_image_enum_common_s**)*, i32 (%struct.gx_device_s*, %struct.gx_image_enum_common_s*, i8**, i32, i32, i32)*, i32 (%struct.gx_device_s*, %struct.gx_image_enum_common_s*, i32)*, i32 (%struct.gx_device_s*, %struct.gx_strip_bitmap_s*, i32, i32, i32, i32, i64, i64, i32, i32)*, i32 (%struct.gx_device_s*, i8*, i32, i32, i64, i64*, %struct.gx_strip_bitmap_s*, i64*, i32, i32, i32, i32, i32, i32, i32)*, void (%struct.gx_device_s*, %struct.gs_fixed_rect_s*)*, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gs_matrix_s*, %struct.gs_image_common_s*, %struct.gs_int_rect_s*, %struct.gx_device_color_s*, %struct.gx_clip_path_s*, %struct.gs_memory_s*, %struct.gx_image_enum_common_s**)*, i32 (%struct.gx_device_s*, %struct.gs_int_rect_s*, %struct.gs_get_bits_params_s*, %struct.gs_int_rect_s**)*, i32 (%struct.gx_device_s*, i64, i16*)*, i32 (%struct.gx_device_s*, %struct.gx_device_s**, %struct.gs_composite_s*, %struct.gs_imager_state_s*, %struct.gs_memory_s*, %struct.gx_device_s*)*, i32 (%struct.gx_device_s*, %struct.gs_param_list_s*)*, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gs_text_params_s*, %struct.gs_font_s*, %struct.gx_path_s*, %struct.gx_device_color_s*, %struct.gx_clip_path_s*, %struct.gs_memory_s*, %struct.gs_text_enum_s**)*, i32 (%struct.gx_device_s*, %struct.gx_device_s*)*, i32 (%struct.gx_device_s*, %struct.gs_transparency_group_params_s*, %struct.gs_rect_s*, %struct.gs_imager_state_s*, %struct.gs_memory_s*)*, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*)*, i32 (%struct.gx_device_s*, %struct.gx_transparency_mask_params_s*, %struct.gs_rect_s*, %struct.gs_imager_state_s*, %struct.gs_memory_s*)*, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*)*, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*)*, %struct.gx_cm_color_map_procs_s* (%struct.gx_device_s*)*, i32 (%struct.gx_device_s*, i8*, i32, i32)*, i64 (%struct.gx_device_s*, i16*)*, i32 (%struct.gx_device_s*, i64, i16*)*, i32 (%struct.gx_device_s*, i64, %struct.gs_pattern1_instance_s*, i32)*, i32 (%struct.gx_device_s*, %struct.gs_fixed_rect_s*, %struct.gs_imager_state_s*, %struct.gx_device_color_s*, %struct.gx_clip_path_s*)*, i32 (%struct.gx_device_s*, %struct.gs_color_space_s*, i8*, i32)*, i32 (%struct.gx_device_s*, %struct.gs_fill_attributes_s*, i32, i32, i32, i32*, i32*, i32*, i32)*, i32 (%struct.gx_device_s*, %struct.gs_fill_attributes_s*, %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s*, i32*, i32*, i32*, i32*)*, i32 (%struct.gx_device_s*, %struct.gs_fill_attributes_s*, %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s*, i32*, i32*, i32*)*, i32 (%struct.gx_device_s*, %struct.gs_state_s*)*, %struct.gs_devn_params_s* (%struct.gx_device_s*)*, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gx_device_color_s*)*, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*)*, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*)*, i32 (%struct.gx_device_s*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, i32 (%struct.gx_device_s*, i32, i8*, i32)*, i32 (%struct.gx_device_s*, i8*, i32, i32, i64, i32, i32, i32, i32, i32)*, i32 (%struct.gx_device_s*, %struct.cmm_dev_profile_s**)*, void (%struct.gx_device_s*, i32)*, i32 (%struct.gx_device_s*, i8*, i32, i32, i64, i64*, %struct.gx_strip_bitmap_s*, i64*, i32, i32, i32, i32, i32, i32, i32, i32)*, i32 (%struct.gx_device_s*, %struct.gx_strip_bitmap_s*, i32, i32, i32, i32, %struct.gx_device_color_s*, %struct.gx_device_color_s*, i32, i32)*, i32 (%struct.gx_device_s*, i8*, i32, i32, i64, i32, i32, i32, i32, %struct.gx_device_color_s*, i32)*, i32 (%struct.gx_device_s*, %struct.gx_process_page_options_s*)* }
%struct.gx_tile_bitmap_s = type { i8*, i32, %struct.gs_int_point_s, i64, i16, i16 }
%struct.gs_int_point_s = type { i32, i32 }
%struct.gx_xfont_procs_s = type opaque
%struct.gx_fill_params_s = type opaque
%struct.gx_device_color_s = type { %struct.gx_device_color_type_s*, %union._c, %struct.gs_int_point_s, i32, %struct.gs_client_color_s, %struct._mask }
%struct.gx_device_color_type_s = type opaque
%union._c = type { %struct._col }
%struct._col = type { %struct.gx_device_halftone_s*, i16, [64 x i8], [64 x i32], i16, i64 }
%struct.gx_device_halftone_s = type opaque
%struct.gs_client_color_s = type { %struct.gs_pattern_instance_s*, %struct.gs_paint_color_s }
%struct.gs_pattern_instance_s = type opaque
%struct.gs_paint_color_s = type { [64 x float] }
%struct._mask = type { %struct.mp_, i64, %struct.gx_color_tile_s* }
%struct.mp_ = type { i32, i32 }
%struct.gx_color_tile_s = type opaque
%struct.gx_clip_path_s = type opaque
%struct.gx_stroke_params_s = type opaque
%struct.gs_fixed_edge_s = type { %struct.gs_fixed_point_s, %struct.gs_fixed_point_s }
%struct.gs_image1_s = type { %struct.gx_image_type_s*, %struct.gs_matrix_s, i32, i32, i32, [130 x float], i32, i32, i32, %struct.gs_color_space_s*, i32, i32, i32, i32 }
%struct.gx_image_type_s = type { %struct.gs_memory_struct_type_s*, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gs_matrix_s*, %struct.gs_image_common_s*, %struct.gs_int_rect_s*, %struct.gx_device_color_s*, %struct.gx_clip_path_s*, %struct.gs_memory_s*, %struct.gx_image_enum_common_s**)*, i32 (%struct.gs_imager_state_s*, %struct.gs_image_common_s*, %struct.gs_int_point_s*)*, i32 (%struct.gs_image_common_s*, %struct.stream_s*, %struct.gs_color_space_s**)*, i32 (%struct.gs_image_common_s*, %struct.stream_s*, %struct.gs_color_space_s*)*, void (%struct.gs_image_common_s*, %struct.gs_memory_s*)*, i32 }
%struct.gs_image_common_s = type { %struct.gx_image_type_s*, %struct.gs_matrix_s }
%struct.gs_color_space_s = type { %struct.gs_color_space_type_s*, %struct.rc_header_s, i64, %struct.gs_color_space_s*, %struct.gs_color_space_s*, %struct.client_color_space_data_s*, %struct.cmm_profile_s*, %union.anon }
%struct.gs_color_space_type_s = type { i32, i32, i32, %struct.gs_memory_struct_type_s*, i32 (%struct.gs_color_space_s*)*, void (%struct.gs_client_color_s*, %struct.gs_color_space_s*)*, void (%struct.gs_client_color_s*, %struct.gs_color_space_s*)*, %struct.gs_color_space_s* (%struct.gs_color_space_s*, %struct.gs_imager_state_s*)*, i32 (%struct.gs_client_color_s*, %struct.gs_color_space_s*, i16*, %struct.gs_imager_state_s*, %struct.gx_device_s*)*, i32 (i16*, %struct.gs_color_space_s*, %struct.gx_device_color_s*, %struct.gs_imager_state_s*, %struct.gx_device_s*, i32)*, i32 (%struct.gs_client_color_s*, %struct.gs_color_space_s*, %struct.gx_device_color_s*, %struct.gs_imager_state_s*, %struct.gx_device_s*, i32)*, i32 (%struct.gs_color_space_s*, %struct.gs_state_s*)*, i32 (%struct.gs_color_space_s*, %struct.gs_state_s*)*, void (%struct.gs_color_space_s*)*, void (%struct.gs_client_color_s*, %struct.gs_color_space_s*, i32)*, i32 (%struct.gs_color_space_s*, %struct.stream_s*)*, i32 (%struct.gs_color_space_s*, %struct.gs_imager_state_s*, %struct.gx_device_s*, %struct.gs_client_color_s*, %struct.gs_client_color_s*, %struct.gs_client_color_s*, %struct.gs_client_color_s*, float, %struct.gsicc_link_s*)*, i32 (%struct.gs_color_space_s*)* }
%struct.gsicc_link_s = type { i8*, %struct.gscms_procs_s, %struct.gsicc_hashlink_s, %struct.gsicc_link_cache_s*, i32, %struct.gsicc_link_s*, %struct.gx_semaphore_s*, i32, i32, i32, i32, i32, i32, %struct.gscms_procs_s, i32, i32, i32 }
%struct.gsicc_hashlink_s = type { i64, i64, i64, i64 }
%struct.gsicc_link_cache_s = type { %struct.gsicc_link_s*, i32, %struct.rc_header_s, %struct.gs_memory_s*, %struct.gx_monitor_s*, %struct.gx_semaphore_s*, i32 }
%struct.gx_semaphore_s = type { %struct.gs_memory_s*, %union.gp_semaphore }
%union.gp_semaphore = type { i8* }
%struct.gscms_procs_s = type { void (%struct.gx_device_s*, %struct.gsicc_link_s*, %struct.gsicc_bufferdesc_s*, %struct.gsicc_bufferdesc_s*, i8*, i8*)*, void (%struct.gx_device_s*, %struct.gsicc_link_s*, i8*, i8*, i32)*, void (%struct.gsicc_link_s*)*, i32 (i8*, i32)* }
%struct.gsicc_bufferdesc_s = type { i8, i8, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.client_color_space_data_s = type { void (%struct.gs_color_space_s*, i32)* }
%union.anon = type { %struct.gs_device_n_params_s }
%struct.gs_device_n_params_s = type { i64*, i32, %struct.gs_device_n_map_s*, %struct.gs_device_n_attributes_s*, i32, i32 (%struct.gs_memory_s*, i64, i8**, i32*)* }
%struct.gs_device_n_map_s = type opaque
%struct.gs_device_n_attributes_s = type opaque
%struct.gs_int_rect_s = type { %struct.gs_int_point_s, %struct.gs_int_point_s }
%struct.gx_image_enum_common_s = type { %struct.gx_image_type_s*, %struct.gx_image_enum_procs_s*, %struct.gx_device_s*, %struct.gs_memory_s*, i64, i32, i32, [65 x i32], [65 x i32] }
%struct.gx_image_enum_procs_s = type { i32 (%struct.gx_image_enum_common_s*, %struct.gx_image_plane_s*, i32, i32*)*, i32 (%struct.gx_image_enum_common_s*, i32)*, i32 (%struct.gx_image_enum_common_s*)*, i32 (%struct.gx_image_enum_common_s*, i8*)* }
%struct.gx_image_plane_s = type { i8*, i32, i32 }
%struct.gx_strip_bitmap_s = type { i8*, i32, %struct.gs_int_point_s, i64, i16, i16, i16, i16, i32 }
%struct.gs_fixed_rect_s = type { %struct.gs_fixed_point_s, %struct.gs_fixed_point_s }
%struct.gs_get_bits_params_s = type opaque
%struct.gs_composite_s = type { %struct.gs_composite_type_s*, i64, i32, %struct.gs_composite_s*, %struct.gs_composite_s* }
%struct.gs_composite_type_s = type { i8, %struct.gs_composite_type_procs_s }
%struct.gs_composite_type_procs_s = type { i32 (%struct.gs_composite_s*, %struct.gx_device_s**, %struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gs_memory_s*)*, i32 (%struct.gs_composite_s*, %struct.gs_composite_s*)*, i32 (%struct.gs_composite_s*, i8*, i32*, %struct.gx_device_clist_writer_s*)*, i32 (%struct.gs_composite_s**, i8*, i32, %struct.gs_memory_s*)*, i32 (%struct.gs_composite_s*, i32, i32, %struct.gs_imager_state_s*)*, i32 (%struct.gs_composite_s*, %struct.gs_composite_s**, %struct.gx_device_s*)*, i32 (%struct.gs_composite_s*, i8, i8)*, i32 (%struct.gs_composite_s*, %struct.gx_device_s*, %struct.gx_device_s**, %struct.gs_imager_state_s*, %struct.gs_memory_s*)*, i32 (%struct.gs_composite_s*, %struct.gx_device_s*, %struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gs_memory_s*)*, i32 (%struct.gs_composite_s*, i32*, i32*, i32, i32)* }
%struct.gx_device_clist_writer_s = type opaque
%struct.gs_text_params_s = type { i32, %union.sd_, i32, %struct.gs_point_s, %struct.gs_point_s, %union.s_, float*, float*, i32 }
%union.sd_ = type { i8* }
%union.s_ = type { i64 }
%struct.gs_font_s = type { %struct.gs_font_s*, %struct.gs_font_s*, %struct.gs_memory_s*, %struct.gs_font_dir_s*, i32, %struct.gs_notify_list_s, i64, %struct.gs_font_s*, i8*, %struct.gs_matrix_s, %struct.gs_matrix_s, i32, i32, i32, i32, i32, i32, i32, float, i32, %struct.gs_font_procs_s, %struct.gs_font_name_s, %struct.gs_font_name_s }
%struct.gs_notify_list_s = type { %struct.gs_memory_s*, %struct.gs_notify_registration_s* }
%struct.gs_notify_registration_s = type { i32 (i8*, i8*)*, i8*, %struct.gs_notify_registration_s* }
%struct.gs_font_procs_s = type { i32 (%struct.gs_font_dir_s*, %struct.gs_font_s*)*, i32 (%struct.gs_font_dir_s*, %struct.gs_font_s*, %struct.gs_matrix_s*, %struct.gs_font_s**)*, i32 (%struct.gs_font_s*, %struct.gs_point_s*, i32, %struct.gs_font_info_s*)*, i32 (%struct.gs_font_s*, %struct.gs_font_s*, i32)*, i64 (%struct.gs_font_s*, i64, i32)*, i64 (%struct.gs_font_s*, i64, i32)*, i32 (%struct.gs_font_s*, i32*, i32, i64*)*, i32 (%struct.gs_font_s*, i64, %struct.gs_matrix_s*, i32, %struct.gs_glyph_info_s*)*, i32 (%struct.gs_font_s*, i32, i64, %struct.gs_matrix_s*, %struct.gx_path_s*, double*)*, i32 (%struct.gs_font_s*, i64, %struct.gs_const_string_s*)*, i32 (%struct.gs_text_enum_s*, %struct.gs_font_s*)*, i32 (%struct.gs_text_enum_s*, i64*, i64*)*, i32 (%struct.gs_show_enum_s*, %struct.gs_state_s*, %struct.gs_font_s*, i64, i64)* }
%struct.gs_font_info_s = type { i32, i32, i32, %struct.gs_int_rect_s, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, i32, %struct.gs_const_string_s, %struct.gs_const_string_s, %struct.gs_const_string_s, %struct.gs_const_string_s, i32 }
%struct.gs_glyph_info_s = type { i32, [2 x %struct.gs_point_s], %struct.gs_point_s, %struct.gs_rect_s, i32, i64* }
%struct.gs_show_enum_s = type opaque
%struct.gs_font_name_s = type { [48 x i8], i32 }
%struct.gs_transparency_group_params_s = type { %struct.gs_color_space_s*, i32, i32, i32, i32, i32, i32, i32, i64, %struct.cmm_profile_s* }
%struct.gx_transparency_mask_params_s = type { i32, i32, i32, i32, [64 x float], float, i32, i32, i32, i32, [256 x i8], i64, %struct.cmm_profile_s* }
%struct.gx_cm_color_map_procs_s = type { void (%struct.gx_device_s*, i16, i16*)*, void (%struct.gx_device_s*, %struct.gs_imager_state_s*, i16, i16, i16, i16*)*, void (%struct.gx_device_s*, i16, i16, i16, i16, i16*)* }
%struct.gs_pattern1_instance_s = type opaque
%struct.gs_fill_attributes_s = type { %struct.gs_fixed_rect_s*, i32, %struct.gx_device_halftone_s*, i32, i32, i32, %struct.patch_fill_state_s* }
%struct.patch_fill_state_s = type opaque
%struct.gs_devn_params_s = type opaque
%struct.gx_process_page_options_s = type { i32 (i8*, %struct.gx_device_s*, %struct.gs_memory_s*, i32, i32, i8**)*, void (i8*, %struct.gx_device_s*, %struct.gs_memory_s*, i8*)*, i32 (i8*, %struct.gx_device_s*, %struct.gx_device_s*, %struct.gs_int_rect_s*, i8*)*, i32 (i8*, %struct.gx_device_s*, i8*)*, i8*, i32 }
%struct.gx_device_vector_procs_s = type { i32 (%struct.gx_device_vector_s*)*, i32 (%struct.gx_device_vector_s*, double)*, i32 (%struct.gx_device_vector_s*, i32)*, i32 (%struct.gx_device_vector_s*, i32)*, i32 (%struct.gx_device_vector_s*, double)*, i32 (%struct.gx_device_vector_s*, float*, i32, double)*, i32 (%struct.gx_device_vector_s*, double)*, i32 (%struct.gx_device_vector_s*, i32, i32)*, i32 (%struct.gx_device_vector_s*, %struct.gs_imager_state_s*, %struct.gx_device_color_s*)*, i32 (%struct.gx_device_vector_s*, %struct.gs_imager_state_s*, %struct.gx_device_color_s*)*, i32 (%struct.gx_device_vector_s*, %struct.gs_imager_state_s*, %struct.gx_device_color_s*)*, i32 (%struct.gx_device_vector_s*, %struct.gx_path_s*, i32, %struct.gs_matrix_s*)*, i32 (%struct.gx_device_vector_s*, i32, i32, i32, i32, i32)*, i32 (%struct.gx_device_vector_s*, i32)*, i32 (%struct.gx_device_vector_s*, double, double, double, double, i32)*, i32 (%struct.gx_device_vector_s*, double, double, double, double, i32)*, i32 (%struct.gx_device_vector_s*, double, double, double, double, double, double, double, double, i32)*, i32 (%struct.gx_device_vector_s*, double, double, double, double, i32)*, i32 (%struct.gx_device_vector_s*, i32)* }
%struct.gx_device_vector_s = type { i32, %struct.gx_device_procs_s*, i8*, %struct.gs_memory_s*, %struct.gs_memory_struct_type_s*, i32, void (%struct.gx_device_s*)*, %struct.rc_header_s, i32, i32, i32, %struct.gx_device_color_info_s, %struct.gx_device_cached_colors_s, i32, i32, i32, i32, i32, i32, [2 x float], [4 x float], i32, [2 x float], [2 x float], [2 x float], [4 x float], i64, i64, i32, i32, i32, i32, i32, i64, i64, %struct.gx_stroked_gradient_recognizer_s, i32, i32, %struct.gdev_space_params_s, %struct.cmm_dev_profile_s*, i32, %struct.gx_page_device_procs_s, %struct.gx_device_procs_s, %struct.gs_memory_s*, %struct.gx_device_vector_procs_s*, [4096 x i8], %struct._IO_FILE*, %struct.stream_s*, i8*, i32, i32, %struct.gs_imager_state_s, float*, i32, i32, i32, %struct.gx_hl_saved_color_s, %struct.gx_hl_saved_color_s, i64, i64, i32, i32, %struct.gs_point_s, i32, %struct.gx_device_bbox_s*, i64, i64 }
%struct.gs_imager_state_s = type { i32, %struct.gs_memory_s*, i8*, %struct.gx_line_params_s, i32, %struct.gs_matrix_fixed_s, i32, %struct.gs_point_s, %struct.gs_point_s, i32, i32, i16, i32, %struct.gs_transparency_source_s, %struct.gs_transparency_source_s, %struct.gs_xstate_trans_flags, i64, i32, i32, i32, %struct.gx_device_s*, i32, i32, i32, i32, i32, i32, float, %struct.gs_fixed_point_s, i32, i32, i32, float, i32, i32, %struct.gsicc_manager_s*, %struct.gsicc_link_cache_s*, %struct.gsicc_profile_cache_s*, %struct.gx_color_map_procs_s* (%struct.gs_imager_state_s*, %struct.gx_device_s*)*, %struct.gs_halftone_s*, [2 x %struct.gs_int_point_s], %struct.gx_device_halftone_s*, %struct.gs_cie_render_s*, i32, %struct.gx_transfer_map_s*, %struct.gx_transfer_map_s*, %struct.gx_transfer_s, [64 x %struct.gx_transfer_map_s*], %struct.gx_cie_joint_caches_s*, %struct.gx_color_map_procs_s*, %struct.gs_devicen_color_map_s, %struct.gx_pattern_cache_s*, %struct.gs_color_space_s*, %struct.gs_color_space_s*, %struct.gx_cie_joint_caches_s*, %struct.gs_devicen_color_map_s }
%struct.gx_line_params_s = type { float, i32, i32, i32, i32, i32, float, float, float, i32, %struct.gs_matrix_s, %struct.gx_dash_params_s }
%struct.gx_dash_params_s = type { float*, i32, float, i32, float, i32, i32, float }
%struct.gs_transparency_source_s = type { float }
%struct.gs_xstate_trans_flags = type { i32, i32 }
%struct.gsicc_manager_s = type { %struct.cmm_profile_s*, %struct.cmm_profile_s*, %struct.cmm_profile_s*, %struct.cmm_profile_s*, %struct.cmm_profile_s*, %struct.cmm_profile_s*, %struct.gsicc_devicen_s*, %struct.gsicc_smask_s*, i32, %struct.cmm_srcgtag_profile_s*, %struct.gs_memory_s*, %struct.rc_header_s }
%struct.gsicc_devicen_s = type { %struct.gsicc_devicen_entry_s*, %struct.gsicc_devicen_entry_s*, i32 }
%struct.gsicc_devicen_entry_s = type { %struct.cmm_profile_s*, %struct.gsicc_devicen_entry_s* }
%struct.gsicc_smask_s = type { %struct.cmm_profile_s*, %struct.cmm_profile_s*, %struct.cmm_profile_s*, %struct.gs_memory_s*, i32 }
%struct.cmm_srcgtag_profile_s = type { [3 x %struct.cmm_profile_s*], [3 x %struct.gsicc_rendering_param_s], [3 x %struct.cmm_profile_s*], [3 x %struct.gsicc_rendering_param_s], %struct.cmm_profile_s*, %struct.gs_memory_s*, i32, i8*, %struct.rc_header_s }
%struct.gsicc_profile_cache_s = type { %struct.gsicc_profile_entry_s*, i32, %struct.rc_header_s, %struct.gs_memory_s* }
%struct.gsicc_profile_entry_s = type { %struct.gs_color_space_s*, %struct.gsicc_profile_entry_s*, i64 }
%struct.gs_halftone_s = type opaque
%struct.gs_cie_render_s = type opaque
%struct.gx_transfer_map_s = type { %struct.rc_header_s, float (double, %struct.gx_transfer_map_s*)*, %struct.gs_mapping_closure_s, i64, [256 x i16] }
%struct.gs_mapping_closure_s = type { float (double, %struct.gx_transfer_map_s*, i8*)*, i8* }
%struct.gx_transfer_s = type { i32, %struct.gx_transfer_map_s*, i32, %struct.gx_transfer_map_s*, i32, %struct.gx_transfer_map_s*, i32, %struct.gx_transfer_map_s* }
%struct.gx_color_map_procs_s = type { void (i16, %struct.gx_device_color_s*, %struct.gs_imager_state_s*, %struct.gx_device_s*, i32)*, void (i16, i16, i16, %struct.gx_device_color_s*, %struct.gs_imager_state_s*, %struct.gx_device_s*, i32)*, void (i16, i16, i16, i16, %struct.gx_device_color_s*, %struct.gs_imager_state_s*, %struct.gx_device_s*, i32, %struct.gs_color_space_s*)*, void (i16, i16, i16, i16, %struct.gx_device_color_s*, %struct.gs_imager_state_s*, %struct.gx_device_s*, i32)*, void (i16, %struct.gx_device_color_s*, %struct.gs_imager_state_s*, %struct.gx_device_s*, i32)*, void (i16*, %struct.gx_device_color_s*, %struct.gs_imager_state_s*, %struct.gx_device_s*, i32)*, i32 (%struct.gs_imager_state_s*, %struct.gx_device_s*)* }
%struct.gx_pattern_cache_s = type opaque
%struct.gx_cie_joint_caches_s = type opaque
%struct.gx_hl_saved_color_s = type { i64, i64, i32, %struct.gs_client_color_s, %struct.gx_device_color_saved_s }
%struct.gx_device_color_saved_s = type { %struct.gx_device_color_type_s*, %union._svc, %struct.gs_int_point_s }
%union._svc = type { %struct._svbin, [304 x i8] }
%struct._svbin = type { [2 x i64], i32, i32 }
%struct.gx_device_bbox_s = type { i32, %struct.gx_device_procs_s*, i8*, %struct.gs_memory_s*, %struct.gs_memory_struct_type_s*, i32, void (%struct.gx_device_s*)*, %struct.rc_header_s, i32, i32, i32, %struct.gx_device_color_info_s, %struct.gx_device_cached_colors_s, i32, i32, i32, i32, i32, i32, [2 x float], [4 x float], i32, [2 x float], [2 x float], [2 x float], [4 x float], i64, i64, i32, i32, i32, i32, i32, i64, i64, %struct.gx_stroked_gradient_recognizer_s, i32, i32, %struct.gdev_space_params_s, %struct.cmm_dev_profile_s*, i32, %struct.gx_page_device_procs_s, %struct.gx_device_procs_s, %struct.gx_device_s*, i32, i32, %struct.gx_device_bbox_procs_s, i8*, i32, %struct.gs_fixed_rect_s, i64, i64, i64 }
%struct.gx_device_bbox_procs_s = type { i32 (i8*)*, void (i8*, %struct.gs_fixed_rect_s*)*, void (i8*, i32, i32, i32, i32)*, i32 (i8*, %struct.gs_fixed_rect_s*)* }
%struct.psdf_distiller_params_s = type { i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, %struct.gs_const_string_s, %struct.gs_const_string_s, %struct.gs_const_string_s, %struct.gs_const_string_s, i32, i32, i32, i32, i32, %struct.psdf_image_params_s, i32, i32, %struct.psdf_image_params_s, %struct.psdf_image_params_s, %struct.gs_param_string_array_s, %struct.gs_param_string_array_s, i32, i32, i32, i32, %struct.gs_param_string_s, %struct.gs_param_string_array_s }
%struct.psdf_image_params_s = type { %struct.gs_c_param_list_s*, i32, i32, i32, %struct.gs_c_param_list_s*, i32, float, i32, i32, i8*, i32, i8*, %struct.stream_template_s* }
%struct.gs_c_param_list_s = type { %struct.gs_param_list_procs_s*, %struct.gs_memory_s*, i32, %struct.gs_c_param_s*, %struct.gs_param_list_s*, i32, i32, i32 }
%struct.gs_c_param_s = type opaque
%struct.gs_param_string_array_s = type { %struct.gs_param_string_s*, i32, i32 }
%struct.gs_param_float_array_s = type { float*, i32, i32 }
%struct.gs_param_int_array_s = type { i32*, i32, i32 }
%struct.pdf_page_dsc_info_s = type { i32, i32, %struct.gs_rect_s }
%struct.pdf_temp_file_s = type { [4096 x i8], %struct._IO_FILE*, %struct.stream_s*, i8*, %struct.stream_s* }
%struct.pdf_text_data_s = type { %struct.pdf_outline_fonts_s*, %struct.pdf_bitmap_fonts_s*, %struct.pdf_text_state_s* }
%struct.pdf_outline_fonts_s = type { %struct.pdf_standard_font_s* }
%struct.pdf_standard_font_s = type { %struct.pdf_font_resource_s*, %struct.gs_matrix_s }
%struct.pdf_font_resource_s = type { %struct.pdf_font_resource_s*, %struct.pdf_resource_s*, i64, i32, i32, [24 x i8], i64, %struct.cos_object_s*, i32, i32 (%struct.gx_device_pdf_s*, %struct.pdf_font_resource_s*)*, %struct.gs_string_s, %struct.pdf_font_descriptor_s*, %struct.pdf_base_font_s*, i32, double*, i8*, %struct.pdf_resource_s*, %struct.gs_cmap_s*, i32 (%struct.gs_memory_s*, i64, i8*)*, i8*, %union.anon.1 }
%struct.cos_object_s = type { %struct.cos_object_procs_s*, i64, %struct.cos_element_s*, %struct.cos_stream_piece_s*, %struct.gx_device_pdf_s*, %struct.pdf_resource_s*, i8, i8, i8, i64, %struct.stream_s*, %struct.gs_md5_state_s, i32, [16 x i8], i32, [16 x i8] }
%struct.cos_object_procs_s = type { void (%struct.cos_object_s*, i8*)*, i32 (%struct.cos_object_s*, %struct.gx_device_pdf_s*, i64)*, i32 (%struct.cos_object_s*, %struct.cos_object_s*, %struct.gx_device_pdf_s*)*, i32 (%struct.cos_object_s*, %struct.gs_md5_state_s*, i8*, %struct.gx_device_pdf_s*)* }
%struct.cos_element_s = type opaque
%struct.cos_stream_piece_s = type opaque
%struct.gs_md5_state_s = type { [2 x i32], [4 x i32], [64 x i8] }
%struct.pdf_font_descriptor_s = type opaque
%struct.pdf_base_font_s = type { %struct.gs_font_base_s*, %struct.gs_font_base_s*, i32, i32, i32, i8*, i32, %struct.gs_string_s, i32, %struct.cos_dict_s* }
%struct.gs_font_base_s = type { %struct.gs_font_s*, %struct.gs_font_s*, %struct.gs_memory_s*, %struct.gs_font_dir_s*, i32, %struct.gs_notify_list_s, i64, %struct.gs_font_s*, i8*, %struct.gs_matrix_s, %struct.gs_matrix_s, i32, i32, i32, i32, i32, i32, i32, float, i32, %struct.gs_font_procs_s, %struct.gs_font_name_s, %struct.gs_font_name_s, %struct.gs_rect_s, %struct.gs_uid_s, %struct.gs_fapi_server_s*, i8*, i32, i32 }
%struct.gs_uid_s = type { i64, i64* }
%struct.gs_cmap_s = type opaque
%union.anon.1 = type { %struct.anon.3 }
%struct.anon.3 = type { i32, i32, i32, i32, %struct.pdf_encoding_element_s*, %struct.gs_point_s*, i32, %union.anon.4 }
%struct.pdf_encoding_element_s = type { i64, %struct.gs_const_string_s, i32 }
%union.anon.4 = type { %struct.anon.7 }
%struct.anon.7 = type { %struct.gs_rect_s, %struct.gs_matrix_s, %struct.pdf_char_proc_ownership_s*, i32, i32, %struct.cos_dict_s*, i8* }
%struct.pdf_char_proc_ownership_s = type opaque
%struct.pdf_bitmap_fonts_s = type { %struct.pdf_font_resource_s*, i32, i64, i32 }
%struct.pdf_text_state_s = type opaque
%struct.pdf_text_rotation_s = type { [5 x i64], i32 }
%struct.pdf_page_s = type { %struct.cos_dict_s*, %struct.gs_point_s, i32, i64, [7 x i64], i64, %struct.cos_array_s*, %struct.pdf_text_rotation_s, %struct.pdf_page_dsc_info_s, i32, i32 }
%struct.pdf_resource_list_s = type { [16 x %struct.pdf_resource_s*] }
%struct.pdf_outline_level_s = type { %struct.pdf_outline_node_s, %struct.pdf_outline_node_s, i32 }
%struct.pdf_outline_node_s = type { i64, i64, i64, i64, i64, i32, %struct.cos_dict_s* }
%struct.pdf_article_s = type { %struct.pdf_article_s*, %struct.cos_dict_s*, %struct.pdf_bead_s, %struct.pdf_bead_s }
%struct.pdf_bead_s = type { i64, i64, i64, i64, i64, %struct.gs_rect_s }
%struct.pdf_font_cache_elem_s = type { %struct.pdf_font_cache_elem_s*, i64, i32, i32, %struct.pdf_font_resource_s*, i8*, double*, %struct.gx_device_pdf_s* }
%struct.gs_point_s = type { double, double }
%struct.gx_path_s = type opaque
%struct.cos_array_s = type { %struct.cos_object_procs_s*, i64, %struct.cos_array_element_s*, %struct.cos_stream_piece_s*, %struct.gx_device_pdf_s*, %struct.pdf_resource_s*, i8, i8, i8, i64, %struct.stream_s*, %struct.gs_md5_state_s, i32, [16 x i8], i32, [16 x i8] }
%struct.cos_array_element_s = type opaque
%struct.gs_text_enum_s = type { %struct.gs_text_params_s, %struct.gx_device_s*, %struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gs_font_s*, %struct.gx_path_s*, %struct.gx_device_color_s*, %struct.gx_clip_path_s*, %struct.gs_memory_s*, %struct.gs_text_enum_procs_s*, %struct.rc_header_s, i8*, %struct.gs_font_s*, i64, i32, %struct.gs_log2_scale_point_s, %struct.cached_fm_pair_s*, i32, i32, %struct.gx_font_stack_s, i32, i32, i32, %struct.gs_point_s, i64, i32, %struct.gs_log2_scale_point_s, %struct.gs_point_s, %struct.gs_text_returned_s }
%struct.gs_text_enum_procs_s = type { i32 (%struct.gs_text_enum_s*, %struct.gs_text_enum_s*)*, i32 (%struct.gs_text_enum_s*)*, i32 (%struct.gs_text_enum_s*)*, i32 (%struct.gs_text_enum_s*, %struct.gs_point_s*)*, i32 (%struct.gs_text_enum_s*, double*, i32)*, i32 (%struct.gs_text_enum_s*)*, void (%struct.gs_text_enum_s*, i8*)* }
%struct.cached_fm_pair_s = type opaque
%struct.gx_font_stack_s = type { i32, [6 x %struct.gx_font_stack_item_s] }
%struct.gx_font_stack_item_s = type { %struct.gs_font_s*, i32 }
%struct.gs_log2_scale_point_s = type { i32, i32 }
%struct.gs_text_returned_s = type { i64, i64, %struct.gs_point_s }
%struct.pdf_viewer_state_s = type { i32, [4 x i64], float, float, i32, i64, i64, i64, i32, float, float, i32, i32, i32, i32, i32, i32, %struct.gx_hl_saved_color_s, %struct.gx_hl_saved_color_s, %struct.gx_line_params_s, float*, i32, i64 }
%struct.pdf_substream_save_s = type { i32, %struct.pdf_text_state_s*, %struct.gx_path_s*, i64, i32, %struct.stream_s*, %struct.cos_dict_s*, i32, i32, %struct.pdf_resource_s*, %struct.pdf_resource_s*, i32, i32, %struct.pdf_resource_s*, %struct.gs_const_string_s, i32 }
%struct.cos_dict_s = type { %struct.cos_object_procs_s*, i64, %struct.cos_dict_element_s*, %struct.cos_stream_piece_s*, %struct.gx_device_pdf_s*, %struct.pdf_resource_s*, i8, i8, i8, i64, %struct.stream_s*, %struct.gs_md5_state_s, i32, [16 x i8], i32, [16 x i8] }
%struct.cos_dict_element_s = type opaque
%struct.gs_matrix_fixed_s = type { float, float, float, float, float, float, i32, i32, i32 }
%struct.gs_rect_s = type { %struct.gs_point_s, %struct.gs_point_s }
%struct.pdf_char_glyph_pairs_s = type opaque
%struct.gs_matrix_s = type { float, float, float, float, float, float }
%struct.pdf_resource_s = type { %struct.pdf_resource_s*, %struct.pdf_resource_s*, i64, i32, i32, [24 x i8], i64, %struct.cos_object_s* }
%struct.linearisation_record_s = type { i32, i32, i32*, i32, i64, i64, i64 }
%struct.gc_struct_data_s = type { i16, i16, %struct.gs_memory_struct_type_s*, %struct.gc_ptr_element_s* }
%struct.gc_ptr_element_s = type { i16, i16 }
%struct.pdf_linearisation_s = type { %struct._IO_FILE*, %struct.pdf_temp_file_s, [256 x i8], i8, i8, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64*, i64, i64, i64, i64, i64, i64, i64, %struct.page_hint_stream_header_s, i32, %struct.page_hint_stream_s*, %struct.shared_hint_stream_header_s, i32, %struct.share_hint_stream_s* }
%struct.page_hint_stream_header_s = type { i32, i32, i16, i32, i32, i16, i32, i32, i16, i32, i32, i16, i32, i32, i16 }
%struct.page_hint_stream_s = type { i32, i32, i32, i32*, i64, i64 }
%struct.shared_hint_stream_header_s = type { i32, i64, i32, i32, i32, i32, i16 }
%struct.share_hint_stream_s = type { i32, i64, i32 }
%struct.stream_arcfour_state_s = type { %struct.stream_template_s*, %struct.gs_memory_s*, i32 (%struct.stream_state_s*, i8*)*, i32, [80 x i8], i32, i32, [256 x i8] }
%struct.tm = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i8* }
%struct.gc_procs_common_s = type { i8* (i8*, %struct.gc_state_s*)*, void (%struct.gs_string_s*, %struct.gc_state_s*)*, void (%struct.gs_const_string_s*, %struct.gc_state_s*)*, void (%struct.gs_param_string_s*, %struct.gc_state_s*)* }
%struct.cos_value_s = type { i32, %union.vc_ }
%union.vc_ = type { %struct.gs_string_s }

@.str = private unnamed_addr constant [9 x i8] c"pdfwrite\00", align 1
@st_device_pdfwrite = internal constant %struct.gs_memory_struct_type_s { i32 30792, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.19, i32 0, i32 0), %struct.struct_shared_procs_s* null, void (%struct.gs_memory_s*, i8*, i32, %struct.gs_memory_struct_type_s*)* null, %struct.gs_ptr_procs_s* (%struct.gs_memory_s*, i8*, i32, i32, %struct.enum_ptr_s*, %struct.gs_memory_struct_type_s*, %struct.gc_state_s*)* @device_pdfwrite_enum_ptrs, void (i8*, i32, %struct.gs_memory_struct_type_s*, %struct.gc_state_s*)* @device_pdfwrite_reloc_ptrs, void (%struct.gs_memory_s*, i8*)* @device_pdfwrite_finalize, i8* null }, align 8
@.str.1 = private unnamed_addr constant [10 x i8] c"DeviceRGB\00", align 1
@.str.2 = private unnamed_addr constant [9 x i8] c"JPEG2000\00", align 1
@s_zlibE_template = external constant %struct.stream_template_s, align 8
@.str.3 = private unnamed_addr constant [15 x i8] c"CCITTFaxEncode\00", align 1
@s_CFE_template = external constant %struct.stream_template_s, align 8
@gs_pdfwrite_device = constant %struct.gx_device_pdf_s { i32 30792, %struct.gx_device_procs_s* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), %struct.gs_memory_s* null, %struct.gs_memory_struct_type_s* @st_device_pdfwrite, i32 0, void (%struct.gx_device_s*)* null, %struct.rc_header_s zeroinitializer, i32 0, i32 0, i32 0, %struct.gx_device_color_info_s { i32 3, i32 3, i32 1, i16 24, i8 -1, i32 255, i32 255, i32 256, i32 256, %struct.gx_device_anti_alias_info_s { i32 1, i32 1 }, i32 -1, [64 x i8] zeroinitializer, [64 x i8] zeroinitializer, [64 x i64] zeroinitializer, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i32 0, i32 0), i32 -1, i64 0, i32 0 }, %struct.gx_device_cached_colors_s { i64 -1, i64 -1 }, i32 6120, i32 7920, i32 0, i32 0, i32 0, i32 0, [2 x float] [float 6.120000e+02, float 7.920000e+02], [4 x float] zeroinitializer, i32 0, [2 x float] [float 7.200000e+02, float 7.200000e+02], [2 x float] [float 7.200000e+02, float 7.200000e+02], [2 x float] zeroinitializer, [4 x float] zeroinitializer, i64 0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i64 0, i64 0, %struct.gx_stroked_gradient_recognizer_s zeroinitializer, i32 0, i32 0, %struct.gdev_space_params_s { i64 10000000, i64 4000000, %struct.gx_band_params_s zeroinitializer, i32 0, i32 0 }, %struct.cmm_dev_profile_s* null, i32 0, %struct.gx_page_device_procs_s { i32 (%struct.gx_device_s*, %struct.gs_state_s*)* @gx_default_install, i32 (%struct.gx_device_s*, %struct.gs_state_s*)* @gx_default_begin_page, i32 (%struct.gx_device_s*, i32, %struct.gs_state_s*)* @gx_default_end_page }, %struct.gx_device_procs_s { i32 (%struct.gx_device_s*)* @pdf_open, void (%struct.gx_device_s*, %struct.gs_matrix_s*)* @gx_upright_get_initial_matrix, i32 (%struct.gx_device_s*)* null, i32 (%struct.gx_device_s*, i32, i32)* @pdf_output_page, i32 (%struct.gx_device_s*)* @pdf_close, i64 (%struct.gx_device_s*, i16*)* @gx_default_rgb_map_rgb_color, i32 (%struct.gx_device_s*, i64, i16*)* @gx_default_rgb_map_color_rgb, i32 (%struct.gx_device_s*, i32, i32, i32, i32, i64)* @gdev_pdf_fill_rectangle, i32 (%struct.gx_device_s*, %struct.gx_tile_bitmap_s*, i32, i32, i32, i32, i64, i64, i32, i32)* null, i32 (%struct.gx_device_s*, i8*, i32, i32, i64, i32, i32, i32, i32, i64, i64)* @gdev_pdf_copy_mono, i32 (%struct.gx_device_s*, i8*, i32, i32, i64, i32, i32, i32, i32)* @gdev_pdf_copy_color, i32 (%struct.gx_device_s*, i32, i32, i32, i32, i64)* null, i32 (%struct.gx_device_s*, i32, i8*, i8**)* @psdf_get_bits, i32 (%struct.gx_device_s*, %struct.gs_param_list_s*)* @gdev_pdf_get_params, i32 (%struct.gx_device_s*, %struct.gs_param_list_s*)* @gdev_pdf_put_params, i64 (%struct.gx_device_s*, i16*)* null, %struct.gx_xfont_procs_s* (%struct.gx_device_s*)* null, %struct.gx_device_s* (%struct.gx_device_s*)* null, i64 (%struct.gx_device_s*, i16, i16, i16, i16)* null, %struct.gx_device_s* (%struct.gx_device_s*)* @gx_page_device_get_page_device, i32 (%struct.gx_device_s*, i32)* null, i32 (%struct.gx_device_s*, i8*, i32, i32, i64, i32, i32, i32, i32, i64, i32)* null, i32 (%struct.gx_device_s*, i32, i32*)* null, i32 (%struct.gx_device_s*, i8*, i32, i32, i64, i64*, %struct.gx_tile_bitmap_s*, i64*, i32, i32, i32, i32, i32, i32, i32)* null, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gx_path_s*, %struct.gx_fill_params_s*, %struct.gx_device_color_s*, %struct.gx_clip_path_s*)* @gdev_pdf_fill_path, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gx_path_s*, %struct.gx_stroke_params_s*, %struct.gx_device_color_s*, %struct.gx_clip_path_s*)* @gdev_pdf_stroke_path, i32 (%struct.gx_device_s*, i8*, i32, i32, i64, i32, i32, i32, i32, %struct.gx_device_color_s*, i32, i32, %struct.gx_clip_path_s*)* @gdev_pdf_fill_mask, i32 (%struct.gx_device_s*, %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s*, i32, i32, i32, %struct.gx_device_color_s*, i32)* null, i32 (%struct.gx_device_s*, i32, i32, i32, i32, i32, i32, %struct.gx_device_color_s*, i32)* null, i32 (%struct.gx_device_s*, i32, i32, i32, i32, i32, i32, %struct.gx_device_color_s*, i32)* null, i32 (%struct.gx_device_s*, i32, i32, i32, i32, %struct.gx_device_color_s*, i32, i32, i32)* null, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gs_image1_s*, i32, %struct.gs_int_rect_s*, %struct.gx_device_color_s*, %struct.gx_clip_path_s*, %struct.gs_memory_s*, %struct.gx_image_enum_common_s**)* null, i32 (%struct.gx_device_s*, %struct.gx_image_enum_common_s*, i8**, i32, i32, i32)* null, i32 (%struct.gx_device_s*, %struct.gx_image_enum_common_s*, i32)* null, i32 (%struct.gx_device_s*, %struct.gx_strip_bitmap_s*, i32, i32, i32, i32, i64, i64, i32, i32)* @gdev_pdf_strip_tile_rectangle, i32 (%struct.gx_device_s*, i8*, i32, i32, i64, i64*, %struct.gx_strip_bitmap_s*, i64*, i32, i32, i32, i32, i32, i32, i32)* null, void (%struct.gx_device_s*, %struct.gs_fixed_rect_s*)* null, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gs_matrix_s*, %struct.gs_image_common_s*, %struct.gs_int_rect_s*, %struct.gx_device_color_s*, %struct.gx_clip_path_s*, %struct.gs_memory_s*, %struct.gx_image_enum_common_s**)* @gdev_pdf_begin_typed_image, i32 (%struct.gx_device_s*, %struct.gs_int_rect_s*, %struct.gs_get_bits_params_s*, %struct.gs_int_rect_s**)* @psdf_get_bits_rectangle, i32 (%struct.gx_device_s*, i64, i16*)* null, i32 (%struct.gx_device_s*, %struct.gx_device_s**, %struct.gs_composite_s*, %struct.gs_imager_state_s*, %struct.gs_memory_s*, %struct.gx_device_s*)* @gdev_pdf_create_compositor, i32 (%struct.gx_device_s*, %struct.gs_param_list_s*)* null, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gs_text_params_s*, %struct.gs_font_s*, %struct.gx_path_s*, %struct.gx_device_color_s*, %struct.gx_clip_path_s*, %struct.gs_memory_s*, %struct.gs_text_enum_s**)* @gdev_pdf_text_begin, i32 (%struct.gx_device_s*, %struct.gx_device_s*)* null, i32 (%struct.gx_device_s*, %struct.gs_transparency_group_params_s*, %struct.gs_rect_s*, %struct.gs_imager_state_s*, %struct.gs_memory_s*)* @gdev_pdf_begin_transparency_group, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*)* @gdev_pdf_end_transparency_group, i32 (%struct.gx_device_s*, %struct.gx_transparency_mask_params_s*, %struct.gs_rect_s*, %struct.gs_imager_state_s*, %struct.gs_memory_s*)* @gdev_pdf_begin_transparency_mask, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*)* @gdev_pdf_end_transparency_mask, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*)* null, %struct.gx_cm_color_map_procs_s* (%struct.gx_device_s*)* null, i32 (%struct.gx_device_s*, i8*, i32, i32)* null, i64 (%struct.gx_device_s*, i16*)* null, i32 (%struct.gx_device_s*, i64, i16*)* null, i32 (%struct.gx_device_s*, i64, %struct.gs_pattern1_instance_s*, i32)* null, i32 (%struct.gx_device_s*, %struct.gs_fixed_rect_s*, %struct.gs_imager_state_s*, %struct.gx_device_color_s*, %struct.gx_clip_path_s*)* @gdev_pdf_fill_rectangle_hl_color, i32 (%struct.gx_device_s*, %struct.gs_color_space_s*, i8*, i32)* @gdev_pdf_include_color_space, i32 (%struct.gx_device_s*, %struct.gs_fill_attributes_s*, i32, i32, i32, i32*, i32*, i32*, i32)* null, i32 (%struct.gx_device_s*, %struct.gs_fill_attributes_s*, %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s*, i32*, i32*, i32*, i32*)* null, i32 (%struct.gx_device_s*, %struct.gs_fill_attributes_s*, %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s*, i32*, i32*, i32*)* null, i32 (%struct.gx_device_s*, %struct.gs_state_s*)* null, %struct.gs_devn_params_s* (%struct.gx_device_s*)* null, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gx_device_color_s*)* @gdev_pdf_fillpage, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*)* null, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*)* null, i32 (%struct.gx_device_s*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32)* null, i32 (%struct.gx_device_s*, i32, i8*, i32)* @gdev_pdf_dev_spec_op, i32 (%struct.gx_device_s*, i8*, i32, i32, i64, i32, i32, i32, i32, i32)* null, i32 (%struct.gx_device_s*, %struct.cmm_dev_profile_s**)* null, void (%struct.gx_device_s*, i32)* null, i32 (%struct.gx_device_s*, i8*, i32, i32, i64, i64*, %struct.gx_strip_bitmap_s*, i64*, i32, i32, i32, i32, i32, i32, i32, i32)* null, i32 (%struct.gx_device_s*, %struct.gx_strip_bitmap_s*, i32, i32, i32, i32, %struct.gx_device_color_s*, %struct.gx_device_color_s*, i32, i32)* null, i32 (%struct.gx_device_s*, i8*, i32, i32, i64, i32, i32, i32, i32, %struct.gx_device_color_s*, i32)* null, i32 (%struct.gx_device_s*, %struct.gx_process_page_options_s*)* null }, %struct.gs_memory_s* null, %struct.gx_device_vector_procs_s* null, [4096 x i8] zeroinitializer, %struct._IO_FILE* null, %struct.stream_s* null, i8* null, i32 0, i32 0, %struct.gs_imager_state_s zeroinitializer, float* null, i32 0, i32 1, i32 1, %struct.gx_hl_saved_color_s zeroinitializer, %struct.gx_hl_saved_color_s zeroinitializer, i64 0, i64 0, i32 0, i32 0, %struct.gs_point_s { double 1.000000e+01, double 1.000000e+01 }, i32 0, %struct.gx_device_bbox_s* null, i64 -1, i64 -1, i32 3010, i32 1, i32 1, i32 1, i32 0, double 1.300000e+00, %struct.psdf_distiller_params_s { i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i64 500000, i32 0, i32 0, i32 1, i32 0, i32 1, %struct.gs_const_string_s zeroinitializer, %struct.gs_const_string_s zeroinitializer, %struct.gs_const_string_s zeroinitializer, %struct.gs_const_string_s zeroinitializer, i32 0, i32 0, i32 0, i32 0, i32 1, %struct.psdf_image_params_s { %struct.gs_c_param_list_s* null, i32 0, i32 0, i32 -1, %struct.gs_c_param_list_s* null, i32 0, float 1.500000e+00, i32 2, i32 1, i8* null, i32 150, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i32 0, i32 0), %struct.stream_template_s* @s_zlibE_template }, i32 0, i32 1, %struct.psdf_image_params_s { %struct.gs_c_param_list_s* null, i32 0, i32 0, i32 -1, %struct.gs_c_param_list_s* null, i32 0, float 1.500000e+00, i32 2, i32 1, i8* null, i32 150, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i32 0, i32 0), %struct.stream_template_s* @s_zlibE_template }, %struct.psdf_image_params_s { %struct.gs_c_param_list_s* null, i32 0, i32 0, i32 -1, %struct.gs_c_param_list_s* null, i32 0, float 2.000000e+00, i32 2, i32 1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i32 0, i32 0), i32 300, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i32 0, i32 0), %struct.stream_template_s* @s_CFE_template }, %struct.gs_param_string_array_s zeroinitializer, %struct.gs_param_string_array_s zeroinitializer, i32 1, i32 1, i32 100, i32 1, %struct.gs_param_string_s zeroinitializer, %struct.gs_param_string_array_s zeroinitializer }, i32 0, double 1.400000e+00, i32 -1, i32 1, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 1, i32 0, i32 0, %struct.gs_param_float_array_s zeroinitializer, %struct.gs_param_float_array_s zeroinitializer, i32 1, i32 1, i32 1, i64 1, i32 1, i32 0, %struct.gs_param_string_s zeroinitializer, %struct.gs_param_string_s zeroinitializer, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0, i64 12000, i64 256000, i64 4000, %struct.gs_param_int_array_s zeroinitializer, %struct.gs_param_string_s zeroinitializer, %struct.gs_param_string_s zeroinitializer, i32 0, i32 -4, i32 0, %struct.gs_param_string_s zeroinitializer, i32 1, i32 1, [32 x i8] zeroinitializer, [32 x i8] zeroinitializer, [16 x i8] zeroinitializer, i32 0, i32 0, i32 0, %struct.gs_rect_s zeroinitializer, %struct.pdf_page_dsc_info_s { i32 -1, i32 -1, %struct.gs_rect_s zeroinitializer }, %struct.pdf_page_dsc_info_s { i32 -1, i32 -1, %struct.gs_rect_s zeroinitializer }, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0, [4 x i64] zeroinitializer, i32 0, i64 0, i64 0, i32 0, i32 0, %struct.pdf_temp_file_s zeroinitializer, %struct.pdf_temp_file_s zeroinitializer, %struct.pdf_temp_file_s zeroinitializer, %struct.pdf_temp_file_s zeroinitializer, i64 0, %struct.cos_dict_s* null, %struct.cos_dict_s* null, %struct.cos_dict_s* null, i64 0, i32 0, i32 -1, i64 0, i32 0, i64 0, i64 0, i32 0, %struct.pdf_text_data_s* null, %struct.pdf_text_rotation_s zeroinitializer, %struct.pdf_page_s* null, i32 0, i64 1, [15 x %struct.pdf_resource_list_s] zeroinitializer, [5 x %struct.pdf_resource_s*] zeroinitializer, [2 x %struct.pdf_resource_s*] zeroinitializer, %struct.pdf_resource_s* null, %struct.pdf_resource_s* null, i64 0, %struct.pdf_outline_level_s* null, i32 -1, i32 0, i32 0, i32 0, %struct.pdf_article_s* null, %struct.cos_dict_s* null, %struct.cos_dict_s* null, [16 x i8] zeroinitializer, [2 x i64] zeroinitializer, %struct.cos_dict_s* null, %struct.cos_dict_s* null, %struct.cos_array_s* null, %struct.cos_array_s* null, %struct.pdf_font_cache_elem_s* null, %struct.gs_point_s zeroinitializer, %struct.gx_path_s* null, %struct.cos_array_s* null, i32 -1, %struct.cos_dict_s* null, %struct.gs_text_enum_s* null, %struct.pdf_viewer_state_s* null, i32 0, i32 0, i32 0, %struct.pdf_viewer_state_s zeroinitializer, i32 0, i32 0, i32 0, %struct.pdf_substream_save_s* null, i32 0, i32 0, i32 0, %struct.gs_matrix_s zeroinitializer, %struct.cos_dict_s* null, i32 1, i32 0, i32 0, %struct.pdf_resource_s* null, %struct.pdf_resource_s* null, %struct.gs_matrix_fixed_s zeroinitializer, i32 0, %struct.gs_rect_s zeroinitializer, i32 0, i32 1, i32 0, %struct.pdf_char_glyph_pairs_s* null, i32 0, i32 0, i64 0, i32 0, i32 0, i32 0, %struct.gs_matrix_s zeroinitializer, double 0.000000e+00, %struct.pdf_resource_s* null, %struct.gs_const_string_s zeroinitializer, i32 0, i8* null, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, %struct.linearisation_record_s* null, i32 0, i32 0 }, align 8
@.str.4 = private unnamed_addr constant [9 x i8] c"ps2write\00", align 1
@gs_ps2write_device = constant %struct.gx_device_pdf_s { i32 30792, %struct.gx_device_procs_s* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i32 0, i32 0), %struct.gs_memory_s* null, %struct.gs_memory_struct_type_s* @st_device_pdfwrite, i32 0, void (%struct.gx_device_s*)* null, %struct.rc_header_s zeroinitializer, i32 0, i32 0, i32 0, %struct.gx_device_color_info_s { i32 3, i32 3, i32 1, i16 24, i8 -1, i32 255, i32 255, i32 256, i32 256, %struct.gx_device_anti_alias_info_s { i32 1, i32 1 }, i32 -1, [64 x i8] zeroinitializer, [64 x i8] zeroinitializer, [64 x i64] zeroinitializer, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i32 0, i32 0), i32 -1, i64 0, i32 0 }, %struct.gx_device_cached_colors_s { i64 -1, i64 -1 }, i32 6120, i32 7920, i32 0, i32 0, i32 0, i32 0, [2 x float] [float 6.120000e+02, float 7.920000e+02], [4 x float] zeroinitializer, i32 0, [2 x float] [float 7.200000e+02, float 7.200000e+02], [2 x float] [float 7.200000e+02, float 7.200000e+02], [2 x float] zeroinitializer, [4 x float] zeroinitializer, i64 0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i64 0, i64 0, %struct.gx_stroked_gradient_recognizer_s zeroinitializer, i32 0, i32 0, %struct.gdev_space_params_s { i64 10000000, i64 4000000, %struct.gx_band_params_s zeroinitializer, i32 0, i32 0 }, %struct.cmm_dev_profile_s* null, i32 0, %struct.gx_page_device_procs_s { i32 (%struct.gx_device_s*, %struct.gs_state_s*)* @gx_default_install, i32 (%struct.gx_device_s*, %struct.gs_state_s*)* @gx_default_begin_page, i32 (%struct.gx_device_s*, i32, %struct.gs_state_s*)* @gx_default_end_page }, %struct.gx_device_procs_s { i32 (%struct.gx_device_s*)* @pdf_open, void (%struct.gx_device_s*, %struct.gs_matrix_s*)* @gx_upright_get_initial_matrix, i32 (%struct.gx_device_s*)* null, i32 (%struct.gx_device_s*, i32, i32)* @pdf_output_page, i32 (%struct.gx_device_s*)* @pdf_close, i64 (%struct.gx_device_s*, i16*)* @gx_default_rgb_map_rgb_color, i32 (%struct.gx_device_s*, i64, i16*)* @gx_default_rgb_map_color_rgb, i32 (%struct.gx_device_s*, i32, i32, i32, i32, i64)* @gdev_pdf_fill_rectangle, i32 (%struct.gx_device_s*, %struct.gx_tile_bitmap_s*, i32, i32, i32, i32, i64, i64, i32, i32)* null, i32 (%struct.gx_device_s*, i8*, i32, i32, i64, i32, i32, i32, i32, i64, i64)* @gdev_pdf_copy_mono, i32 (%struct.gx_device_s*, i8*, i32, i32, i64, i32, i32, i32, i32)* @gdev_pdf_copy_color, i32 (%struct.gx_device_s*, i32, i32, i32, i32, i64)* null, i32 (%struct.gx_device_s*, i32, i8*, i8**)* @psdf_get_bits, i32 (%struct.gx_device_s*, %struct.gs_param_list_s*)* @gdev_pdf_get_params, i32 (%struct.gx_device_s*, %struct.gs_param_list_s*)* @gdev_pdf_put_params, i64 (%struct.gx_device_s*, i16*)* null, %struct.gx_xfont_procs_s* (%struct.gx_device_s*)* null, %struct.gx_device_s* (%struct.gx_device_s*)* null, i64 (%struct.gx_device_s*, i16, i16, i16, i16)* null, %struct.gx_device_s* (%struct.gx_device_s*)* @gx_page_device_get_page_device, i32 (%struct.gx_device_s*, i32)* null, i32 (%struct.gx_device_s*, i8*, i32, i32, i64, i32, i32, i32, i32, i64, i32)* null, i32 (%struct.gx_device_s*, i32, i32*)* null, i32 (%struct.gx_device_s*, i8*, i32, i32, i64, i64*, %struct.gx_tile_bitmap_s*, i64*, i32, i32, i32, i32, i32, i32, i32)* null, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gx_path_s*, %struct.gx_fill_params_s*, %struct.gx_device_color_s*, %struct.gx_clip_path_s*)* @gdev_pdf_fill_path, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gx_path_s*, %struct.gx_stroke_params_s*, %struct.gx_device_color_s*, %struct.gx_clip_path_s*)* @gdev_pdf_stroke_path, i32 (%struct.gx_device_s*, i8*, i32, i32, i64, i32, i32, i32, i32, %struct.gx_device_color_s*, i32, i32, %struct.gx_clip_path_s*)* @gdev_pdf_fill_mask, i32 (%struct.gx_device_s*, %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s*, i32, i32, i32, %struct.gx_device_color_s*, i32)* null, i32 (%struct.gx_device_s*, i32, i32, i32, i32, i32, i32, %struct.gx_device_color_s*, i32)* null, i32 (%struct.gx_device_s*, i32, i32, i32, i32, i32, i32, %struct.gx_device_color_s*, i32)* null, i32 (%struct.gx_device_s*, i32, i32, i32, i32, %struct.gx_device_color_s*, i32, i32, i32)* null, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gs_image1_s*, i32, %struct.gs_int_rect_s*, %struct.gx_device_color_s*, %struct.gx_clip_path_s*, %struct.gs_memory_s*, %struct.gx_image_enum_common_s**)* null, i32 (%struct.gx_device_s*, %struct.gx_image_enum_common_s*, i8**, i32, i32, i32)* null, i32 (%struct.gx_device_s*, %struct.gx_image_enum_common_s*, i32)* null, i32 (%struct.gx_device_s*, %struct.gx_strip_bitmap_s*, i32, i32, i32, i32, i64, i64, i32, i32)* @gdev_pdf_strip_tile_rectangle, i32 (%struct.gx_device_s*, i8*, i32, i32, i64, i64*, %struct.gx_strip_bitmap_s*, i64*, i32, i32, i32, i32, i32, i32, i32)* null, void (%struct.gx_device_s*, %struct.gs_fixed_rect_s*)* null, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gs_matrix_s*, %struct.gs_image_common_s*, %struct.gs_int_rect_s*, %struct.gx_device_color_s*, %struct.gx_clip_path_s*, %struct.gs_memory_s*, %struct.gx_image_enum_common_s**)* @gdev_pdf_begin_typed_image, i32 (%struct.gx_device_s*, %struct.gs_int_rect_s*, %struct.gs_get_bits_params_s*, %struct.gs_int_rect_s**)* @psdf_get_bits_rectangle, i32 (%struct.gx_device_s*, i64, i16*)* null, i32 (%struct.gx_device_s*, %struct.gx_device_s**, %struct.gs_composite_s*, %struct.gs_imager_state_s*, %struct.gs_memory_s*, %struct.gx_device_s*)* @gdev_pdf_create_compositor, i32 (%struct.gx_device_s*, %struct.gs_param_list_s*)* null, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gs_text_params_s*, %struct.gs_font_s*, %struct.gx_path_s*, %struct.gx_device_color_s*, %struct.gx_clip_path_s*, %struct.gs_memory_s*, %struct.gs_text_enum_s**)* @gdev_pdf_text_begin, i32 (%struct.gx_device_s*, %struct.gx_device_s*)* null, i32 (%struct.gx_device_s*, %struct.gs_transparency_group_params_s*, %struct.gs_rect_s*, %struct.gs_imager_state_s*, %struct.gs_memory_s*)* @gdev_pdf_begin_transparency_group, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*)* @gdev_pdf_end_transparency_group, i32 (%struct.gx_device_s*, %struct.gx_transparency_mask_params_s*, %struct.gs_rect_s*, %struct.gs_imager_state_s*, %struct.gs_memory_s*)* @gdev_pdf_begin_transparency_mask, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*)* @gdev_pdf_end_transparency_mask, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*)* null, %struct.gx_cm_color_map_procs_s* (%struct.gx_device_s*)* null, i32 (%struct.gx_device_s*, i8*, i32, i32)* null, i64 (%struct.gx_device_s*, i16*)* null, i32 (%struct.gx_device_s*, i64, i16*)* null, i32 (%struct.gx_device_s*, i64, %struct.gs_pattern1_instance_s*, i32)* null, i32 (%struct.gx_device_s*, %struct.gs_fixed_rect_s*, %struct.gs_imager_state_s*, %struct.gx_device_color_s*, %struct.gx_clip_path_s*)* @gdev_pdf_fill_rectangle_hl_color, i32 (%struct.gx_device_s*, %struct.gs_color_space_s*, i8*, i32)* @gdev_pdf_include_color_space, i32 (%struct.gx_device_s*, %struct.gs_fill_attributes_s*, i32, i32, i32, i32*, i32*, i32*, i32)* null, i32 (%struct.gx_device_s*, %struct.gs_fill_attributes_s*, %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s*, i32*, i32*, i32*, i32*)* null, i32 (%struct.gx_device_s*, %struct.gs_fill_attributes_s*, %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s*, i32*, i32*, i32*)* null, i32 (%struct.gx_device_s*, %struct.gs_state_s*)* null, %struct.gs_devn_params_s* (%struct.gx_device_s*)* null, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gx_device_color_s*)* @gdev_pdf_fillpage, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*)* null, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*)* null, i32 (%struct.gx_device_s*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32)* null, i32 (%struct.gx_device_s*, i32, i8*, i32)* @gdev_pdf_dev_spec_op, i32 (%struct.gx_device_s*, i8*, i32, i32, i64, i32, i32, i32, i32, i32)* null, i32 (%struct.gx_device_s*, %struct.cmm_dev_profile_s**)* null, void (%struct.gx_device_s*, i32)* null, i32 (%struct.gx_device_s*, i8*, i32, i32, i64, i64*, %struct.gx_strip_bitmap_s*, i64*, i32, i32, i32, i32, i32, i32, i32, i32)* null, i32 (%struct.gx_device_s*, %struct.gx_strip_bitmap_s*, i32, i32, i32, i32, %struct.gx_device_color_s*, %struct.gx_device_color_s*, i32, i32)* null, i32 (%struct.gx_device_s*, i8*, i32, i32, i64, i32, i32, i32, i32, %struct.gx_device_color_s*, i32)* null, i32 (%struct.gx_device_s*, %struct.gx_process_page_options_s*)* null }, %struct.gs_memory_s* null, %struct.gx_device_vector_procs_s* null, [4096 x i8] zeroinitializer, %struct._IO_FILE* null, %struct.stream_s* null, i8* null, i32 0, i32 0, %struct.gs_imager_state_s zeroinitializer, float* null, i32 0, i32 1, i32 1, %struct.gx_hl_saved_color_s zeroinitializer, %struct.gx_hl_saved_color_s zeroinitializer, i64 0, i64 0, i32 0, i32 0, %struct.gs_point_s { double 1.000000e+01, double 1.000000e+01 }, i32 0, %struct.gx_device_bbox_s* null, i64 -1, i64 -1, i32 3010, i32 1, i32 1, i32 1, i32 0, double 1.300000e+00, %struct.psdf_distiller_params_s { i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i64 500000, i32 0, i32 0, i32 1, i32 0, i32 1, %struct.gs_const_string_s zeroinitializer, %struct.gs_const_string_s zeroinitializer, %struct.gs_const_string_s zeroinitializer, %struct.gs_const_string_s zeroinitializer, i32 0, i32 0, i32 0, i32 0, i32 1, %struct.psdf_image_params_s { %struct.gs_c_param_list_s* null, i32 0, i32 0, i32 -1, %struct.gs_c_param_list_s* null, i32 0, float 1.500000e+00, i32 2, i32 1, i8* null, i32 150, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i32 0, i32 0), %struct.stream_template_s* @s_zlibE_template }, i32 0, i32 1, %struct.psdf_image_params_s { %struct.gs_c_param_list_s* null, i32 0, i32 0, i32 -1, %struct.gs_c_param_list_s* null, i32 0, float 1.500000e+00, i32 2, i32 1, i8* null, i32 150, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i32 0, i32 0), %struct.stream_template_s* @s_zlibE_template }, %struct.psdf_image_params_s { %struct.gs_c_param_list_s* null, i32 0, i32 0, i32 -1, %struct.gs_c_param_list_s* null, i32 0, float 2.000000e+00, i32 2, i32 1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i32 0, i32 0), i32 300, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i32 0, i32 0), %struct.stream_template_s* @s_CFE_template }, %struct.gs_param_string_array_s zeroinitializer, %struct.gs_param_string_array_s zeroinitializer, i32 1, i32 1, i32 100, i32 1, %struct.gs_param_string_s zeroinitializer, %struct.gs_param_string_array_s zeroinitializer }, i32 1, double 1.400000e+00, i32 -1, i32 1, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 1, i32 0, i32 0, %struct.gs_param_float_array_s zeroinitializer, %struct.gs_param_float_array_s zeroinitializer, i32 1, i32 1, i32 1, i64 1, i32 1, i32 0, %struct.gs_param_string_s zeroinitializer, %struct.gs_param_string_s zeroinitializer, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0, i64 12000, i64 256000, i64 9223372036854775807, %struct.gs_param_int_array_s zeroinitializer, %struct.gs_param_string_s zeroinitializer, %struct.gs_param_string_s zeroinitializer, i32 0, i32 -4, i32 0, %struct.gs_param_string_s zeroinitializer, i32 1, i32 1, [32 x i8] zeroinitializer, [32 x i8] zeroinitializer, [16 x i8] zeroinitializer, i32 0, i32 0, i32 0, %struct.gs_rect_s zeroinitializer, %struct.pdf_page_dsc_info_s { i32 -1, i32 -1, %struct.gs_rect_s zeroinitializer }, %struct.pdf_page_dsc_info_s { i32 -1, i32 -1, %struct.gs_rect_s zeroinitializer }, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0, [4 x i64] zeroinitializer, i32 0, i64 0, i64 0, i32 0, i32 0, %struct.pdf_temp_file_s zeroinitializer, %struct.pdf_temp_file_s zeroinitializer, %struct.pdf_temp_file_s zeroinitializer, %struct.pdf_temp_file_s zeroinitializer, i64 0, %struct.cos_dict_s* null, %struct.cos_dict_s* null, %struct.cos_dict_s* null, i64 0, i32 0, i32 -1, i64 0, i32 0, i64 0, i64 0, i32 0, %struct.pdf_text_data_s* null, %struct.pdf_text_rotation_s zeroinitializer, %struct.pdf_page_s* null, i32 0, i64 1, [15 x %struct.pdf_resource_list_s] zeroinitializer, [5 x %struct.pdf_resource_s*] zeroinitializer, [2 x %struct.pdf_resource_s*] zeroinitializer, %struct.pdf_resource_s* null, %struct.pdf_resource_s* null, i64 0, %struct.pdf_outline_level_s* null, i32 -1, i32 0, i32 0, i32 0, %struct.pdf_article_s* null, %struct.cos_dict_s* null, %struct.cos_dict_s* null, [16 x i8] zeroinitializer, [2 x i64] zeroinitializer, %struct.cos_dict_s* null, %struct.cos_dict_s* null, %struct.cos_array_s* null, %struct.cos_array_s* null, %struct.pdf_font_cache_elem_s* null, %struct.gs_point_s zeroinitializer, %struct.gx_path_s* null, %struct.cos_array_s* null, i32 -1, %struct.cos_dict_s* null, %struct.gs_text_enum_s* null, %struct.pdf_viewer_state_s* null, i32 0, i32 0, i32 0, %struct.pdf_viewer_state_s zeroinitializer, i32 0, i32 0, i32 0, %struct.pdf_substream_save_s* null, i32 0, i32 0, i32 0, %struct.gs_matrix_s zeroinitializer, %struct.cos_dict_s* null, i32 1, i32 0, i32 0, %struct.pdf_resource_s* null, %struct.pdf_resource_s* null, %struct.gs_matrix_fixed_s zeroinitializer, i32 0, %struct.gs_rect_s zeroinitializer, i32 0, i32 1, i32 0, %struct.pdf_char_glyph_pairs_s* null, i32 0, i32 0, i64 0, i32 0, i32 0, i32 0, %struct.gs_matrix_s zeroinitializer, double 0.000000e+00, %struct.pdf_resource_s* null, %struct.gs_const_string_s zeroinitializer, i32 0, i8* null, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1, i32 1, i32 0, i32 1, i32 0, i32 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, %struct.linearisation_record_s* null, i32 0, i32 0 }, align 8
@.str.5 = private unnamed_addr constant [10 x i8] c"eps2write\00", align 1
@gs_eps2write_device = constant %struct.gx_device_pdf_s { i32 30792, %struct.gx_device_procs_s* null, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i32 0, i32 0), %struct.gs_memory_s* null, %struct.gs_memory_struct_type_s* @st_device_pdfwrite, i32 0, void (%struct.gx_device_s*)* null, %struct.rc_header_s zeroinitializer, i32 0, i32 0, i32 0, %struct.gx_device_color_info_s { i32 3, i32 3, i32 1, i16 24, i8 -1, i32 255, i32 255, i32 256, i32 256, %struct.gx_device_anti_alias_info_s { i32 1, i32 1 }, i32 -1, [64 x i8] zeroinitializer, [64 x i8] zeroinitializer, [64 x i64] zeroinitializer, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i32 0, i32 0), i32 -1, i64 0, i32 0 }, %struct.gx_device_cached_colors_s { i64 -1, i64 -1 }, i32 6120, i32 7920, i32 0, i32 0, i32 0, i32 0, [2 x float] [float 6.120000e+02, float 7.920000e+02], [4 x float] zeroinitializer, i32 0, [2 x float] [float 7.200000e+02, float 7.200000e+02], [2 x float] [float 7.200000e+02, float 7.200000e+02], [2 x float] zeroinitializer, [4 x float] zeroinitializer, i64 0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i64 0, i64 0, %struct.gx_stroked_gradient_recognizer_s zeroinitializer, i32 0, i32 0, %struct.gdev_space_params_s { i64 10000000, i64 4000000, %struct.gx_band_params_s zeroinitializer, i32 0, i32 0 }, %struct.cmm_dev_profile_s* null, i32 0, %struct.gx_page_device_procs_s { i32 (%struct.gx_device_s*, %struct.gs_state_s*)* @gx_default_install, i32 (%struct.gx_device_s*, %struct.gs_state_s*)* @gx_default_begin_page, i32 (%struct.gx_device_s*, i32, %struct.gs_state_s*)* @gx_default_end_page }, %struct.gx_device_procs_s { i32 (%struct.gx_device_s*)* @pdf_open, void (%struct.gx_device_s*, %struct.gs_matrix_s*)* @gx_upright_get_initial_matrix, i32 (%struct.gx_device_s*)* null, i32 (%struct.gx_device_s*, i32, i32)* @pdf_output_page, i32 (%struct.gx_device_s*)* @pdf_close, i64 (%struct.gx_device_s*, i16*)* @gx_default_rgb_map_rgb_color, i32 (%struct.gx_device_s*, i64, i16*)* @gx_default_rgb_map_color_rgb, i32 (%struct.gx_device_s*, i32, i32, i32, i32, i64)* @gdev_pdf_fill_rectangle, i32 (%struct.gx_device_s*, %struct.gx_tile_bitmap_s*, i32, i32, i32, i32, i64, i64, i32, i32)* null, i32 (%struct.gx_device_s*, i8*, i32, i32, i64, i32, i32, i32, i32, i64, i64)* @gdev_pdf_copy_mono, i32 (%struct.gx_device_s*, i8*, i32, i32, i64, i32, i32, i32, i32)* @gdev_pdf_copy_color, i32 (%struct.gx_device_s*, i32, i32, i32, i32, i64)* null, i32 (%struct.gx_device_s*, i32, i8*, i8**)* @psdf_get_bits, i32 (%struct.gx_device_s*, %struct.gs_param_list_s*)* @gdev_pdf_get_params, i32 (%struct.gx_device_s*, %struct.gs_param_list_s*)* @gdev_pdf_put_params, i64 (%struct.gx_device_s*, i16*)* null, %struct.gx_xfont_procs_s* (%struct.gx_device_s*)* null, %struct.gx_device_s* (%struct.gx_device_s*)* null, i64 (%struct.gx_device_s*, i16, i16, i16, i16)* null, %struct.gx_device_s* (%struct.gx_device_s*)* @gx_page_device_get_page_device, i32 (%struct.gx_device_s*, i32)* null, i32 (%struct.gx_device_s*, i8*, i32, i32, i64, i32, i32, i32, i32, i64, i32)* null, i32 (%struct.gx_device_s*, i32, i32*)* null, i32 (%struct.gx_device_s*, i8*, i32, i32, i64, i64*, %struct.gx_tile_bitmap_s*, i64*, i32, i32, i32, i32, i32, i32, i32)* null, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gx_path_s*, %struct.gx_fill_params_s*, %struct.gx_device_color_s*, %struct.gx_clip_path_s*)* @gdev_pdf_fill_path, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gx_path_s*, %struct.gx_stroke_params_s*, %struct.gx_device_color_s*, %struct.gx_clip_path_s*)* @gdev_pdf_stroke_path, i32 (%struct.gx_device_s*, i8*, i32, i32, i64, i32, i32, i32, i32, %struct.gx_device_color_s*, i32, i32, %struct.gx_clip_path_s*)* @gdev_pdf_fill_mask, i32 (%struct.gx_device_s*, %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s*, i32, i32, i32, %struct.gx_device_color_s*, i32)* null, i32 (%struct.gx_device_s*, i32, i32, i32, i32, i32, i32, %struct.gx_device_color_s*, i32)* null, i32 (%struct.gx_device_s*, i32, i32, i32, i32, i32, i32, %struct.gx_device_color_s*, i32)* null, i32 (%struct.gx_device_s*, i32, i32, i32, i32, %struct.gx_device_color_s*, i32, i32, i32)* null, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gs_image1_s*, i32, %struct.gs_int_rect_s*, %struct.gx_device_color_s*, %struct.gx_clip_path_s*, %struct.gs_memory_s*, %struct.gx_image_enum_common_s**)* null, i32 (%struct.gx_device_s*, %struct.gx_image_enum_common_s*, i8**, i32, i32, i32)* null, i32 (%struct.gx_device_s*, %struct.gx_image_enum_common_s*, i32)* null, i32 (%struct.gx_device_s*, %struct.gx_strip_bitmap_s*, i32, i32, i32, i32, i64, i64, i32, i32)* @gdev_pdf_strip_tile_rectangle, i32 (%struct.gx_device_s*, i8*, i32, i32, i64, i64*, %struct.gx_strip_bitmap_s*, i64*, i32, i32, i32, i32, i32, i32, i32)* null, void (%struct.gx_device_s*, %struct.gs_fixed_rect_s*)* null, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gs_matrix_s*, %struct.gs_image_common_s*, %struct.gs_int_rect_s*, %struct.gx_device_color_s*, %struct.gx_clip_path_s*, %struct.gs_memory_s*, %struct.gx_image_enum_common_s**)* @gdev_pdf_begin_typed_image, i32 (%struct.gx_device_s*, %struct.gs_int_rect_s*, %struct.gs_get_bits_params_s*, %struct.gs_int_rect_s**)* @psdf_get_bits_rectangle, i32 (%struct.gx_device_s*, i64, i16*)* null, i32 (%struct.gx_device_s*, %struct.gx_device_s**, %struct.gs_composite_s*, %struct.gs_imager_state_s*, %struct.gs_memory_s*, %struct.gx_device_s*)* @gdev_pdf_create_compositor, i32 (%struct.gx_device_s*, %struct.gs_param_list_s*)* null, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gs_text_params_s*, %struct.gs_font_s*, %struct.gx_path_s*, %struct.gx_device_color_s*, %struct.gx_clip_path_s*, %struct.gs_memory_s*, %struct.gs_text_enum_s**)* @gdev_pdf_text_begin, i32 (%struct.gx_device_s*, %struct.gx_device_s*)* null, i32 (%struct.gx_device_s*, %struct.gs_transparency_group_params_s*, %struct.gs_rect_s*, %struct.gs_imager_state_s*, %struct.gs_memory_s*)* @gdev_pdf_begin_transparency_group, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*)* @gdev_pdf_end_transparency_group, i32 (%struct.gx_device_s*, %struct.gx_transparency_mask_params_s*, %struct.gs_rect_s*, %struct.gs_imager_state_s*, %struct.gs_memory_s*)* @gdev_pdf_begin_transparency_mask, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*)* @gdev_pdf_end_transparency_mask, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*)* null, %struct.gx_cm_color_map_procs_s* (%struct.gx_device_s*)* null, i32 (%struct.gx_device_s*, i8*, i32, i32)* null, i64 (%struct.gx_device_s*, i16*)* null, i32 (%struct.gx_device_s*, i64, i16*)* null, i32 (%struct.gx_device_s*, i64, %struct.gs_pattern1_instance_s*, i32)* null, i32 (%struct.gx_device_s*, %struct.gs_fixed_rect_s*, %struct.gs_imager_state_s*, %struct.gx_device_color_s*, %struct.gx_clip_path_s*)* @gdev_pdf_fill_rectangle_hl_color, i32 (%struct.gx_device_s*, %struct.gs_color_space_s*, i8*, i32)* @gdev_pdf_include_color_space, i32 (%struct.gx_device_s*, %struct.gs_fill_attributes_s*, i32, i32, i32, i32*, i32*, i32*, i32)* null, i32 (%struct.gx_device_s*, %struct.gs_fill_attributes_s*, %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s*, i32*, i32*, i32*, i32*)* null, i32 (%struct.gx_device_s*, %struct.gs_fill_attributes_s*, %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s*, i32*, i32*, i32*)* null, i32 (%struct.gx_device_s*, %struct.gs_state_s*)* null, %struct.gs_devn_params_s* (%struct.gx_device_s*)* null, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gx_device_color_s*)* @gdev_pdf_fillpage, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*)* null, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*)* null, i32 (%struct.gx_device_s*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32)* null, i32 (%struct.gx_device_s*, i32, i8*, i32)* @gdev_pdf_dev_spec_op, i32 (%struct.gx_device_s*, i8*, i32, i32, i64, i32, i32, i32, i32, i32)* null, i32 (%struct.gx_device_s*, %struct.cmm_dev_profile_s**)* null, void (%struct.gx_device_s*, i32)* null, i32 (%struct.gx_device_s*, i8*, i32, i32, i64, i64*, %struct.gx_strip_bitmap_s*, i64*, i32, i32, i32, i32, i32, i32, i32, i32)* null, i32 (%struct.gx_device_s*, %struct.gx_strip_bitmap_s*, i32, i32, i32, i32, %struct.gx_device_color_s*, %struct.gx_device_color_s*, i32, i32)* null, i32 (%struct.gx_device_s*, i8*, i32, i32, i64, i32, i32, i32, i32, %struct.gx_device_color_s*, i32)* null, i32 (%struct.gx_device_s*, %struct.gx_process_page_options_s*)* null }, %struct.gs_memory_s* null, %struct.gx_device_vector_procs_s* null, [4096 x i8] zeroinitializer, %struct._IO_FILE* null, %struct.stream_s* null, i8* null, i32 0, i32 0, %struct.gs_imager_state_s zeroinitializer, float* null, i32 0, i32 1, i32 1, %struct.gx_hl_saved_color_s zeroinitializer, %struct.gx_hl_saved_color_s zeroinitializer, i64 0, i64 0, i32 0, i32 0, %struct.gs_point_s { double 1.000000e+01, double 1.000000e+01 }, i32 0, %struct.gx_device_bbox_s* null, i64 -1, i64 -1, i32 3010, i32 1, i32 1, i32 1, i32 0, double 1.300000e+00, %struct.psdf_distiller_params_s { i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i64 500000, i32 0, i32 0, i32 1, i32 0, i32 1, %struct.gs_const_string_s zeroinitializer, %struct.gs_const_string_s zeroinitializer, %struct.gs_const_string_s zeroinitializer, %struct.gs_const_string_s zeroinitializer, i32 0, i32 0, i32 0, i32 0, i32 1, %struct.psdf_image_params_s { %struct.gs_c_param_list_s* null, i32 0, i32 0, i32 -1, %struct.gs_c_param_list_s* null, i32 0, float 1.500000e+00, i32 2, i32 1, i8* null, i32 150, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i32 0, i32 0), %struct.stream_template_s* @s_zlibE_template }, i32 0, i32 1, %struct.psdf_image_params_s { %struct.gs_c_param_list_s* null, i32 0, i32 0, i32 -1, %struct.gs_c_param_list_s* null, i32 0, float 1.500000e+00, i32 2, i32 1, i8* null, i32 150, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i32 0, i32 0), %struct.stream_template_s* @s_zlibE_template }, %struct.psdf_image_params_s { %struct.gs_c_param_list_s* null, i32 0, i32 0, i32 -1, %struct.gs_c_param_list_s* null, i32 0, float 2.000000e+00, i32 2, i32 1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i32 0, i32 0), i32 300, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i32 0, i32 0), %struct.stream_template_s* @s_CFE_template }, %struct.gs_param_string_array_s zeroinitializer, %struct.gs_param_string_array_s zeroinitializer, i32 1, i32 1, i32 100, i32 1, %struct.gs_param_string_s zeroinitializer, %struct.gs_param_string_array_s zeroinitializer }, i32 1, double 1.400000e+00, i32 -1, i32 1, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 1, i32 0, i32 0, %struct.gs_param_float_array_s zeroinitializer, %struct.gs_param_float_array_s zeroinitializer, i32 1, i32 1, i32 1, i64 1, i32 1, i32 0, %struct.gs_param_string_s zeroinitializer, %struct.gs_param_string_s zeroinitializer, i32 0, i32 1, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0, i64 12000, i64 256000, i64 9223372036854775807, %struct.gs_param_int_array_s zeroinitializer, %struct.gs_param_string_s zeroinitializer, %struct.gs_param_string_s zeroinitializer, i32 0, i32 -4, i32 0, %struct.gs_param_string_s zeroinitializer, i32 1, i32 1, [32 x i8] zeroinitializer, [32 x i8] zeroinitializer, [16 x i8] zeroinitializer, i32 0, i32 0, i32 0, %struct.gs_rect_s zeroinitializer, %struct.pdf_page_dsc_info_s { i32 -1, i32 -1, %struct.gs_rect_s zeroinitializer }, %struct.pdf_page_dsc_info_s { i32 -1, i32 -1, %struct.gs_rect_s zeroinitializer }, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0, [4 x i64] zeroinitializer, i32 0, i64 0, i64 0, i32 0, i32 0, %struct.pdf_temp_file_s zeroinitializer, %struct.pdf_temp_file_s zeroinitializer, %struct.pdf_temp_file_s zeroinitializer, %struct.pdf_temp_file_s zeroinitializer, i64 0, %struct.cos_dict_s* null, %struct.cos_dict_s* null, %struct.cos_dict_s* null, i64 0, i32 0, i32 -1, i64 0, i32 0, i64 0, i64 0, i32 0, %struct.pdf_text_data_s* null, %struct.pdf_text_rotation_s zeroinitializer, %struct.pdf_page_s* null, i32 0, i64 1, [15 x %struct.pdf_resource_list_s] zeroinitializer, [5 x %struct.pdf_resource_s*] zeroinitializer, [2 x %struct.pdf_resource_s*] zeroinitializer, %struct.pdf_resource_s* null, %struct.pdf_resource_s* null, i64 0, %struct.pdf_outline_level_s* null, i32 -1, i32 0, i32 0, i32 0, %struct.pdf_article_s* null, %struct.cos_dict_s* null, %struct.cos_dict_s* null, [16 x i8] zeroinitializer, [2 x i64] zeroinitializer, %struct.cos_dict_s* null, %struct.cos_dict_s* null, %struct.cos_array_s* null, %struct.cos_array_s* null, %struct.pdf_font_cache_elem_s* null, %struct.gs_point_s zeroinitializer, %struct.gx_path_s* null, %struct.cos_array_s* null, i32 -1, %struct.cos_dict_s* null, %struct.gs_text_enum_s* null, %struct.pdf_viewer_state_s* null, i32 0, i32 0, i32 0, %struct.pdf_viewer_state_s zeroinitializer, i32 0, i32 0, i32 0, %struct.pdf_substream_save_s* null, i32 0, i32 0, i32 0, %struct.gs_matrix_s zeroinitializer, %struct.cos_dict_s* null, i32 1, i32 0, i32 0, %struct.pdf_resource_s* null, %struct.pdf_resource_s* null, %struct.gs_matrix_fixed_s zeroinitializer, i32 0, %struct.gs_rect_s zeroinitializer, i32 0, i32 1, i32 0, %struct.pdf_char_glyph_pairs_s* null, i32 0, i32 0, i64 0, i32 0, i32 0, i32 0, %struct.gs_matrix_s zeroinitializer, double 0.000000e+00, %struct.pdf_resource_s* null, %struct.gs_const_string_s zeroinitializer, i32 0, i8* null, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1, i32 1, i32 0, i32 1, i32 0, i32 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, %struct.linearisation_record_s* null, i32 0, i32 0 }, align 8
@.str.6 = private unnamed_addr constant [10 x i8] c"{Catalog}\00", align 1
@.str.7 = private unnamed_addr constant [10 x i8] c"{DocInfo}\00", align 1
@.str.8 = private unnamed_addr constant [10 x i8] c"/Producer\00", align 1
@.str.9 = private unnamed_addr constant [41 x i8] c"(D:%04d%02d%02d%02d%02d%02d%c%02d'%02d')\00", align 1
@.str.10 = private unnamed_addr constant [14 x i8] c"/CreationDate\00", align 1
@.str.11 = private unnamed_addr constant [9 x i8] c"/ModDate\00", align 1
@pdf_set_process_color_model.pcm_color_info = internal constant [4 x %struct.gx_device_color_info_s] [%struct.gx_device_color_info_s { i32 1, i32 1, i32 1, i16 8, i8 0, i32 255, i32 0, i32 256, i32 0, %struct.gx_device_anti_alias_info_s { i32 1, i32 1 }, i32 -1, [64 x i8] zeroinitializer, [64 x i8] zeroinitializer, [64 x i64] zeroinitializer, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12, i32 0, i32 0), i32 -1, i64 0, i32 0 }, %struct.gx_device_color_info_s { i32 3, i32 3, i32 1, i16 24, i8 -1, i32 255, i32 255, i32 256, i32 256, %struct.gx_device_anti_alias_info_s { i32 1, i32 1 }, i32 -1, [64 x i8] zeroinitializer, [64 x i8] zeroinitializer, [64 x i64] zeroinitializer, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i32 0, i32 0), i32 -1, i64 0, i32 0 }, %struct.gx_device_color_info_s { i32 4, i32 4, i32 0, i16 32, i8 3, i32 255, i32 255, i32 256, i32 256, %struct.gx_device_anti_alias_info_s { i32 1, i32 1 }, i32 -1, [64 x i8] zeroinitializer, [64 x i8] zeroinitializer, [64 x i64] zeroinitializer, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.13, i32 0, i32 0), i32 -1, i64 0, i32 0 }, %struct.gx_device_color_info_s { i32 4, i32 4, i32 0, i16 32, i8 3, i32 255, i32 255, i32 256, i32 256, %struct.gx_device_anti_alias_info_s { i32 1, i32 1 }, i32 -1, [64 x i8] zeroinitializer, [64 x i8] zeroinitializer, [64 x i64] zeroinitializer, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.13, i32 0, i32 0), i32 -1, i64 0, i32 0 }], align 16
@.str.12 = private unnamed_addr constant [11 x i8] c"DeviceGray\00", align 1
@.str.13 = private unnamed_addr constant [11 x i8] c"DeviceCMYK\00", align 1
@.str.14 = private unnamed_addr constant [8 x i8] c"DeviceN\00", align 1
@st_pdf_linearisation_record_element = internal constant %struct.gs_memory_struct_type_s { i32 48, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.49, i32 0, i32 0), %struct.struct_shared_procs_s* null, void (%struct.gs_memory_s*, i8*, i32, %struct.gs_memory_struct_type_s*)* null, %struct.gs_ptr_procs_s* (%struct.gs_memory_s*, i8*, i32, i32, %struct.enum_ptr_s*, %struct.gs_memory_struct_type_s*, %struct.gc_state_s*)* @pdf_linearisation_record_elt_enum_ptrs, void (i8*, i32, %struct.gs_memory_struct_type_s*, %struct.gc_state_s*)* @pdf_linearisation_record_elt_reloc_ptrs, void (%struct.gs_memory_s*, i8*)* null, i8* null }, align 8
@.str.15 = private unnamed_addr constant [27 x i8] c"start resource usage array\00", align 1
@.str.16 = private unnamed_addr constant [28 x i8] c"resize resource usage array\00", align 1
@.str.17 = private unnamed_addr constant [19 x i8] c"Page usage records\00", align 1
@.str.18 = private unnamed_addr constant [28 x i8] c"Free old page usage records\00", align 1
@.str.19 = private unnamed_addr constant [14 x i8] c"gx_device_pdf\00", align 1
@ptr_struct_procs = external constant %struct.gs_ptr_procs_s, align 8
@st_device_psdf = external constant %struct.gs_memory_struct_type_s, align 8
@ptr_string_procs = external constant %struct.gs_ptr_procs_s, align 8
@pdf_vector_procs = external constant %struct.gx_device_vector_procs_s, align 8
@.str.20 = private unnamed_addr constant [31 x i8] c"pdf_open(global_named_objects)\00", align 1
@.str.21 = private unnamed_addr constant [19 x i8] c"pdf_open(NI stack)\00", align 1
@.str.22 = private unnamed_addr constant [31 x i8] c"pdf_open(graphics state stack)\00", align 1
@.str.23 = private unnamed_addr constant [26 x i8] c"pdf_open(Namespace stack)\00", align 1
@.str.24 = private unnamed_addr constant [61 x i8] c"User password is specified. Need an Owner password or both.\0A\00", align 1
@.str.25 = private unnamed_addr constant [53 x i8] c"Can't accept encryption options without a password.\0A\00", align 1
@.str.26 = private unnamed_addr constant [30 x i8] c"pdf_open(local_named_objects)\00", align 1
@st_pdf_substream_save_element = internal constant %struct.gs_memory_struct_type_s { i32 120, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.43, i32 0, i32 0), %struct.struct_shared_procs_s* null, void (%struct.gs_memory_s*, i8*, i32, %struct.gs_memory_struct_type_s*)* null, %struct.gs_ptr_procs_s* (%struct.gs_memory_s*, i8*, i32, i32, %struct.enum_ptr_s*, %struct.gs_memory_struct_type_s*, %struct.gc_state_s*)* @pdf_substream_save_elt_enum_ptrs, void (i8*, i32, %struct.gs_memory_struct_type_s*, %struct.gc_state_s*)* @pdf_substream_save_elt_reloc_ptrs, void (%struct.gs_memory_s*, i8*)* null, i8* null }, align 8
@.str.27 = private unnamed_addr constant [9 x i8] c"pdf_open\00", align 1
@st_pdf_page_element = internal constant %struct.gs_memory_struct_type_s { i32 208, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.45, i32 0, i32 0), %struct.struct_shared_procs_s* null, void (%struct.gs_memory_s*, i8*, i32, %struct.gs_memory_struct_type_s*)* null, %struct.gs_ptr_procs_s* (%struct.gs_memory_s*, i8*, i32, i32, %struct.enum_ptr_s*, %struct.gs_memory_struct_type_s*, %struct.gc_state_s*)* @pdf_page_elt_enum_ptrs, void (i8*, i32, %struct.gs_memory_struct_type_s*, %struct.gc_state_s*)* @pdf_page_elt_reloc_ptrs, void (%struct.gs_memory_s*, i8*)* null, i8* null }, align 8
@.str.28 = private unnamed_addr constant [16 x i8] c"pdf_open(pages)\00", align 1
@.str.29 = private unnamed_addr constant [21 x i8] c"outline_levels array\00", align 1
@.str.30 = private unnamed_addr constant [168 x i8] c"\0A\0AUse of -dUseCIEColor detected!\0ASince the release of version 9.11 of Ghostscript we recommend you do not set\0A-dUseCIEColor with the pdfwrite/ps2write device family.\0A\0A\00", align 1
@gp_fmode_binary_suffix = external constant [0 x i8], align 1
@.str.31 = private unnamed_addr constant [3 x i8] c"w+\00", align 1
@gp_scratch_file_name_prefix = external constant [0 x i8], align 1
@.str.32 = private unnamed_addr constant [27 x i8] c"pdf_open_temp_stream(strm)\00", align 1
@.str.33 = private unnamed_addr constant [31 x i8] c"pdf_open_temp_stream(strm_buf)\00", align 1
@.str.34 = private unnamed_addr constant [19 x i8] c"pdf_compute_fileID\00", align 1
@.str.35 = private unnamed_addr constant [48 x i8] c"Encryption is not allowed in a PDF/X doucment.\0A\00", align 1
@.str.36 = private unnamed_addr constant [37 x i8] c"PDF 1.3 only supports 40 bits keys.\0A\00", align 1
@.str.37 = private unnamed_addr constant [50 x i8] c"Encryption revisions 2 and 3 are only supported.\0A\00", align 1
@.str.38 = private unnamed_addr constant [50 x i8] c"PDF 1.3 only supports the encryption revision 2.\0A\00", align 1
@.str.39 = private unnamed_addr constant [55 x i8] c"The maximal length of PDF encryption key is 128 bits.\0A\00", align 1
@.str.40 = private unnamed_addr constant [52 x i8] c"PDF encryption key length must be a multiple of 8.\0A\00", align 1
@.str.41 = private unnamed_addr constant [47 x i8] c"Some of Permissions are not allowed with R=2.\0A\00", align 1
@.str.42 = private unnamed_addr constant [122 x i8] c"Encryption version 2 revision 2 with KeyLength > 40 appears incompatible to some viewers. With long keys use revision 3.\0A\00", align 1
@pdf_compute_encryption_data.v = internal constant [4 x i8] c"\FF\FF\FF\FF", align 1
@pad = internal constant [32 x i8] c"(\BFN^Nu\8AAd\00NV\FF\FA\01\08..\00\B6\D0h>\80/\0C\A9\FEdSiz", align 16
@.str.43 = private unnamed_addr constant [21 x i8] c"pdf_substream_save[]\00", align 1
@st_pdf_substream_save = internal constant %struct.gs_memory_struct_type_s { i32 120, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.44, i32 0, i32 0), %struct.struct_shared_procs_s* null, void (%struct.gs_memory_s*, i8*, i32, %struct.gs_memory_struct_type_s*)* null, %struct.gs_ptr_procs_s* (%struct.gs_memory_s*, i8*, i32, i32, %struct.enum_ptr_s*, %struct.gs_memory_struct_type_s*, %struct.gc_state_s*)* @basic_enum_ptrs, void (i8*, i32, %struct.gs_memory_struct_type_s*, %struct.gc_state_s*)* @basic_reloc_ptrs, void (%struct.gs_memory_s*, i8*)* null, i8* bitcast (%struct.gc_struct_data_s* @pdf_substream_save_reloc to i8*) }, align 8
@.str.44 = private unnamed_addr constant [19 x i8] c"pdf_substream_save\00", align 1
@pdf_substream_save_reloc = internal constant %struct.gc_struct_data_s { i16 8, i16 0, %struct.gs_memory_struct_type_s* null, %struct.gc_ptr_element_s* getelementptr inbounds ([8 x %struct.gc_ptr_element_s], [8 x %struct.gc_ptr_element_s]* @pdf_substream_save_enum, i32 0, i32 0) }, align 8
@pdf_substream_save_enum = internal constant [8 x %struct.gc_ptr_element_s] [%struct.gc_ptr_element_s { i16 2, i16 96 }, %struct.gc_ptr_element_s { i16 0, i16 8 }, %struct.gc_ptr_element_s { i16 0, i16 16 }, %struct.gc_ptr_element_s { i16 0, i16 40 }, %struct.gc_ptr_element_s { i16 0, i16 48 }, %struct.gc_ptr_element_s { i16 0, i16 64 }, %struct.gc_ptr_element_s { i16 0, i16 72 }, %struct.gc_ptr_element_s { i16 0, i16 88 }], align 16
@.str.45 = private unnamed_addr constant [13 x i8] c"pdf_page_t[]\00", align 1
@st_pdf_page = internal constant %struct.gs_memory_struct_type_s { i32 208, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.46, i32 0, i32 0), %struct.struct_shared_procs_s* null, void (%struct.gs_memory_s*, i8*, i32, %struct.gs_memory_struct_type_s*)* null, %struct.gs_ptr_procs_s* (%struct.gs_memory_s*, i8*, i32, i32, %struct.enum_ptr_s*, %struct.gs_memory_struct_type_s*, %struct.gc_state_s*)* @basic_enum_ptrs, void (i8*, i32, %struct.gs_memory_struct_type_s*, %struct.gc_state_s*)* @basic_reloc_ptrs, void (%struct.gs_memory_s*, i8*)* null, i8* bitcast (%struct.gc_struct_data_s* @pdf_page_reloc_ptrs to i8*) }, align 8
@.str.46 = private unnamed_addr constant [11 x i8] c"pdf_page_t\00", align 1
@pdf_page_reloc_ptrs = internal constant %struct.gc_struct_data_s { i16 2, i16 0, %struct.gs_memory_struct_type_s* null, %struct.gc_ptr_element_s* getelementptr inbounds ([2 x %struct.gc_ptr_element_s], [2 x %struct.gc_ptr_element_s]* @pdf_page_enum_ptrs, i32 0, i32 0) }, align 8
@pdf_page_enum_ptrs = internal constant [2 x %struct.gc_ptr_element_s] [%struct.gc_ptr_element_s zeroinitializer, %struct.gc_ptr_element_s { i16 0, i16 104 }], align 2
@.str.47 = private unnamed_addr constant [30 x i8] c"pdf_close_temp_file(strm_buf)\00", align 1
@.str.48 = private unnamed_addr constant [26 x i8] c"pdf_close_temp_file(strm)\00", align 1
@pdf_dominant_rotation.angles = internal constant [5 x i32] [i32 0, i32 90, i32 180, i32 270, i32 -1], align 16
@.str.49 = private unnamed_addr constant [27 x i8] c"pdf_linearstion_record_t[]\00", align 1
@st_pdf_linearisation_record = internal constant %struct.gs_memory_struct_type_s { i32 48, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.50, i32 0, i32 0), %struct.struct_shared_procs_s* null, void (%struct.gs_memory_s*, i8*, i32, %struct.gs_memory_struct_type_s*)* null, %struct.gs_ptr_procs_s* (%struct.gs_memory_s*, i8*, i32, i32, %struct.enum_ptr_s*, %struct.gs_memory_struct_type_s*, %struct.gc_state_s*)* @basic_enum_ptrs, void (i8*, i32, %struct.gs_memory_struct_type_s*, %struct.gc_state_s*)* @basic_reloc_ptrs, void (%struct.gs_memory_s*, i8*)* null, i8* bitcast (%struct.gc_struct_data_s* @pdf_linearisation_record_reloc_ptrs to i8*) }, align 8
@.str.50 = private unnamed_addr constant [27 x i8] c"pdf_linearisation_record_t\00", align 1
@pdf_linearisation_record_reloc_ptrs = internal constant %struct.gc_struct_data_s { i16 1, i16 0, %struct.gs_memory_struct_type_s* null, %struct.gc_ptr_element_s* getelementptr inbounds ([1 x %struct.gc_ptr_element_s], [1 x %struct.gc_ptr_element_s]* @pdf_linearisation_record_enum_ptrs, i32 0, i32 0) }, align 8
@pdf_linearisation_record_enum_ptrs = internal constant [1 x %struct.gc_ptr_element_s] [%struct.gc_ptr_element_s { i16 0, i16 8 }], align 2
@.str.51 = private unnamed_addr constant [25 x i8] c"<< /Type /Pages /Kids [\0A\00", align 1
@.str.52 = private unnamed_addr constant [9 x i8] c"%ld 0 R\0A\00", align 1
@.str.53 = private unnamed_addr constant [13 x i8] c"] /Count %d\0A\00", align 1
@.str.54 = private unnamed_addr constant [4 x i8] c">>\0A\00", align 1
@.str.55 = private unnamed_addr constant [13 x i8] c"<< /Count %d\00", align 1
@.str.56 = private unnamed_addr constant [34 x i8] c" /First %ld 0 R /Last %ld 0 R >>\0A\00", align 1
@.str.57 = private unnamed_addr constant [3 x i8] c"[ \00", align 1
@.str.58 = private unnamed_addr constant [28 x i8] c"pdf_close(article contents)\00", align 1
@.str.59 = private unnamed_addr constant [19 x i8] c"pdf_close(article)\00", align 1
@.str.60 = private unnamed_addr constant [3 x i8] c"]\0A\00", align 1
@.str.61 = private unnamed_addr constant [3 x i8] c"<<\00", align 1
@.str.62 = private unnamed_addr constant [31 x i8] c"/Type /Catalog /Pages %ld 0 R\0A\00", align 1
@.str.63 = private unnamed_addr constant [19 x i8] c"/Outlines %ld 0 R\0A\00", align 1
@.str.64 = private unnamed_addr constant [18 x i8] c"/Threads %ld 0 R\0A\00", align 1
@.str.65 = private unnamed_addr constant [16 x i8] c"/Dests %ld 0 R\0A\00", align 1
@.str.66 = private unnamed_addr constant [11 x i8] c"/Names <<\0A\00", align 1
@.str.67 = private unnamed_addr constant [28 x i8] c"/Dests <</Kids [%ld 0 R]>>\0A\00", align 1
@.str.68 = private unnamed_addr constant [37 x i8] c"/EmbeddedFiles << /Kids [%ld 0 R]>>\0A\00", align 1
@.str.69 = private unnamed_addr constant [34 x i8] c"/PageLabels << /Nums  %ld 0 R >>\0A\00", align 1
@.str.70 = private unnamed_addr constant [17 x i8] c"pdf_close(Dests)\00", align 1
@.str.71 = private unnamed_addr constant [23 x i8] c"pdf_close(EmbeddFiles)\00", align 1
@.str.72 = private unnamed_addr constant [22 x i8] c"pdf_close(PageLabels)\00", align 1
@.str.73 = private unnamed_addr constant [13 x i8] c"%%EndProlog\0A\00", align 1
@.str.74 = private unnamed_addr constant [14 x i8] c"%%BeginSetup\0A\00", align 1
@.str.75 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.76 = private unnamed_addr constant [13 x i8] c"\0A%%EndSetup\0A\00", align 1
@.str.77 = private unnamed_addr constant [17 x i8] c"%%%%Page: %d %d\0A\00", align 1
@.str.78 = private unnamed_addr constant [32 x i8] c"%%%%PageBoundingBox: 0 0 %d %d\0A\00", align 1
@.str.79 = private unnamed_addr constant [18 x i8] c"%%BeginPageSetup\0A\00", align 1
@.str.80 = private unnamed_addr constant [20 x i8] c"/pagesave save def\0A\00", align 1
@.str.81 = private unnamed_addr constant [16 x i8] c"%%EndPageSetup\0A\00", align 1
@.str.82 = private unnamed_addr constant [11 x i8] c"%ld 0 obj\0A\00", align 1
@.str.83 = private unnamed_addr constant [8 x i8] c"endobj\0A\00", align 1
@.str.84 = private unnamed_addr constant [32 x i8] c"pagesave restore\0A%%PageTrailer\0A\00", align 1
@.str.85 = private unnamed_addr constant [11 x i8] c"%%Trailer\0A\00", align 1
@.str.86 = private unnamed_addr constant [5 x i8] c"end\0A\00", align 1
@.str.87 = private unnamed_addr constant [7 x i8] c"%%EOF\0A\00", align 1
@.str.88 = private unnamed_addr constant [18 x i8] c"temp xref storage\00", align 1
@.str.89 = private unnamed_addr constant [19 x i8] c"/Filter /Standard \00", align 1
@.str.90 = private unnamed_addr constant [8 x i8] c"/V %ld \00", align 1
@.str.91 = private unnamed_addr constant [13 x i8] c"/Length %ld \00", align 1
@.str.92 = private unnamed_addr constant [8 x i8] c"/R %ld \00", align 1
@.str.93 = private unnamed_addr constant [8 x i8] c"/P %ld \00", align 1
@.str.94 = private unnamed_addr constant [4 x i8] c"/O \00", align 1
@.str.95 = private unnamed_addr constant [5 x i8] c"\0A/U \00", align 1
@.str.96 = private unnamed_addr constant [32 x i8] c"xref\0A0 %ld\0A0000000000 65535 f \0A\00", align 1
@.str.97 = private unnamed_addr constant [38 x i8] c"xref\0A0 1\0A0000000000 65535 f \0A%ld %ld\0A\00", align 1
@.str.98 = private unnamed_addr constant [9 x i8] c"%ld %ld\0A\00", align 1
@.str.99 = private unnamed_addr constant [9 x i8] c"trailer\0A\00", align 1
@.str.100 = private unnamed_addr constant [42 x i8] c"<< /Size %ld /Root %ld 0 R /Info %ld 0 R\0A\00", align 1
@.str.101 = private unnamed_addr constant [6 x i8] c"/ID [\00", align 1
@.str.102 = private unnamed_addr constant [18 x i8] c"/Encrypt %ld 0 R \00", align 1
@.str.103 = private unnamed_addr constant [23 x i8] c"startxref\0A%ld\0A%%%%EOF\0A\00", align 1
@.str.104 = private unnamed_addr constant [43 x i8] c"Free linearisation Page Usage list records\00", align 1
@.str.105 = private unnamed_addr constant [42 x i8] c"Free linearisation resource usage records\00", align 1
@.str.106 = private unnamed_addr constant [14 x i8] c"Free CharProc\00", align 1
@.str.107 = private unnamed_addr constant [25 x i8] c"release ExtGState object\00", align 1
@.str.108 = private unnamed_addr constant [15 x i8] c"free ExtGState\00", align 1
@.str.109 = private unnamed_addr constant [18 x i8] c"free pattern dict\00", align 1
@.str.110 = private unnamed_addr constant [23 x i8] c"free pattern resources\00", align 1
@.str.111 = private unnamed_addr constant [18 x i8] c"free Shading dict\00", align 1
@.str.112 = private unnamed_addr constant [23 x i8] c"free Shading resources\00", align 1
@.str.113 = private unnamed_addr constant [16 x i8] c"free Group dict\00", align 1
@.str.114 = private unnamed_addr constant [21 x i8] c"free Group resources\00", align 1
@.str.115 = private unnamed_addr constant [19 x i8] c"free function dict\00", align 1
@.str.116 = private unnamed_addr constant [24 x i8] c"free function resources\00", align 1
@.str.117 = private unnamed_addr constant [15 x i8] c"pdf_resource_t\00", align 1
@.str.118 = private unnamed_addr constant [25 x i8] c"Release Name Index stack\00", align 1
@.str.119 = private unnamed_addr constant [22 x i8] c"Free Name Index stack\00", align 1
@.str.120 = private unnamed_addr constant [31 x i8] c"pdf_close(local_named_objects)\00", align 1
@.str.121 = private unnamed_addr constant [32 x i8] c"pdf_close(global_named_objects)\00", align 1
@.str.122 = private unnamed_addr constant [15 x i8] c"Free page dict\00", align 1
@.str.123 = private unnamed_addr constant [20 x i8] c"Release Annots dict\00", align 1
@.str.124 = private unnamed_addr constant [17 x i8] c"Free Annots dict\00", align 1
@.str.125 = private unnamed_addr constant [17 x i8] c"Free Page object\00", align 1
@.str.126 = private unnamed_addr constant [6 x i8] c"pages\00", align 1
@.str.127 = private unnamed_addr constant [13 x i8] c"Free sbstack\00", align 1
@.str.128 = private unnamed_addr constant [19 x i8] c"release Pages dict\00", align 1
@.str.129 = private unnamed_addr constant [16 x i8] c"Free Pages dict\00", align 1
@.str.130 = private unnamed_addr constant [42 x i8] c"pdfwrite final free stored dash in gstate\00", align 1
@.str.131 = private unnamed_addr constant [32 x i8] c"pdf_close(graphics state stack)\00", align 1
@.str.132 = private unnamed_addr constant [25 x i8] c"release Name space stack\00", align 1
@.str.133 = private unnamed_addr constant [22 x i8] c"Free Name space stack\00", align 1
@.str.134 = private unnamed_addr constant [70 x i8] c"ERROR: A pdfmark destination page %d points beyond the last page %d.\0A\00", align 1
@.str.135 = private unnamed_addr constant [35 x i8] c"<</Type/Page/MediaBox [0 0 %g %g]\0A\00", align 1
@.str.136 = private unnamed_addr constant [9 x i8] c"/TrimBox\00", align 1
@.str.137 = private unnamed_addr constant [8 x i8] c"/ArtBox\00", align 1
@.str.138 = private unnamed_addr constant [9 x i8] c"/CropBox\00", align 1
@.str.139 = private unnamed_addr constant [10 x i8] c"/BleedBox\00", align 1
@.str.140 = private unnamed_addr constant [16 x i8] c"[ %g %g %g %g ]\00", align 1
@.str.141 = private unnamed_addr constant [96 x i8] c"TrimBox does not fit inside BleedBox, not permitted in PDF/X-3, reverting to normal PDF output\0A\00", align 1
@.str.142 = private unnamed_addr constant [82 x i8] c"TrimBox does not fit inside BleedBox, not permitted in PDF/X-3, reducing TrimBox\0A\00", align 1
@.str.143 = private unnamed_addr constant [85 x i8] c"TrimBox does not fit inside BleedBox, not permitted in PDF/X-3, aborting conversion\0A\00", align 1
@.str.144 = private unnamed_addr constant [132 x i8] c"TrimBox does not fit inside BleedBox, not permitted in PDF/X-3\0Aunrecognised PDFACompatibilityLevel,\0Areverting to normal PDF output\0A\00", align 1
@.str.145 = private unnamed_addr constant [24 x i8] c"/CropBox [%g %g %g %g]\0A\00", align 1
@.str.146 = private unnamed_addr constant [95 x i8] c"TrimBox does not fit inside CropBox, not permitted in PDF/X-3, reverting to normal PDF output\0A\00", align 1
@.str.147 = private unnamed_addr constant [81 x i8] c"TrimBox does not fit inside CropBox, not permitted in PDF/X-3, reducing TrimBox\0A\00", align 1
@.str.148 = private unnamed_addr constant [84 x i8] c"TrimBox does not fit inside CropBox, not permitted in PDF/X-3, aborting conversion\0A\00", align 1
@.str.149 = private unnamed_addr constant [131 x i8] c"TrimBox does not fit inside CropBox, not permitted in PDF/X-3\0Aunrecognised PDFACompatibilityLevel,\0Areverting to normal PDF output\0A\00", align 1
@.str.150 = private unnamed_addr constant [24 x i8] c"/TrimBox [%g %g %g %g]\0A\00", align 1
@.str.151 = private unnamed_addr constant [25 x i8] c"/BleedBox [%g %g %g %g]\0A\00", align 1
@.str.152 = private unnamed_addr constant [17 x i8] c"/Parent %ld 0 R\0A\00", align 1
@.str.153 = private unnamed_addr constant [16 x i8] c"/NumCopies %ld\0A\00", align 1
@.str.154 = private unnamed_addr constant [16 x i8] c"/Group %ld 0 R\0A\00", align 1
@.str.155 = private unnamed_addr constant [26 x i8] c"/Resources<</ProcSet[/PDF\00", align 1
@.str.156 = private unnamed_addr constant [9 x i8] c" /ImageB\00", align 1
@.str.157 = private unnamed_addr constant [9 x i8] c" /ImageC\00", align 1
@.str.158 = private unnamed_addr constant [9 x i8] c" /ImageI\00", align 1
@.str.159 = private unnamed_addr constant [7 x i8] c" /Text\00", align 1
@pdf_resource_type_names = external constant [0 x i8*], align 8
@.str.160 = private unnamed_addr constant [10 x i8] c" %ld 0 R\0A\00", align 1
@.str.161 = private unnamed_addr constant [8 x i8] c"/Annots\00", align 1
@.str.162 = private unnamed_addr constant [23 x i8] c"pdf_write_page(Annots)\00", align 1
@.str.163 = private unnamed_addr constant [19 x i8] c"/Contents %ld 0 R\0A\00", align 1
@.str.164 = private unnamed_addr constant [11 x i8] c"/Rotate %d\00", align 1
@.str.165 = private unnamed_addr constant [17 x i8] c"%010ld 00000 n \0A\00", align 1
@pdf_linearise.Binary = private unnamed_addr constant [9 x i8] c"%\C7\EC\8F\A2\0A\00\00\00", align 1
@.str.166 = private unnamed_addr constant [23 x i8] c"free temp xref storage\00", align 1
@.str.167 = private unnamed_addr constant [13 x i8] c"%%PDF-%d.%d\0A\00", align 1
@.str.168 = private unnamed_addr constant [133 x i8] c"%d 0 obj\0A<<                                                                                                                        \0A\00", align 1
@.str.169 = private unnamed_addr constant [12 x i8] c"xref\0A%d %d\0A\00", align 1
@.str.170 = private unnamed_addr constant [21 x i8] c"0000000000 00000 n \0A\00", align 1
@.str.171 = private unnamed_addr constant [95 x i8] c"\0Atrailer\0A<</Size %ld/Info %d 0 R/Root %d 0 R/ID[%s%s]/Prev %d>>\0Astartxref\0D\0A0\0A%%%%EOF\0A        \0A\00", align 1
@.str.172 = private unnamed_addr constant [54 x i8] c"%d 0 obj\0A<</Length           \0A/S           >>\0Astream\0A\00", align 1
@.str.173 = private unnamed_addr constant [20 x i8] c"Hints for the pages\00", align 1
@.str.174 = private unnamed_addr constant [29 x i8] c"Hints for the shared objects\00", align 1
@.str.175 = private unnamed_addr constant [28 x i8] c"realloc shared object hints\00", align 1
@.str.176 = private unnamed_addr constant [20 x i8] c"shared object hints\00", align 1
@.str.177 = private unnamed_addr constant [29 x i8] c"Page %d NumUniqueObjects %d\0A\00", align 1
@.str.178 = private unnamed_addr constant [23 x i8] c"Page %d PageLength %d\0A\00", align 1
@.str.179 = private unnamed_addr constant [29 x i8] c"Page %d NumSharedObjects %d\0A\00", align 1
@.str.180 = private unnamed_addr constant [38 x i8] c"Page %d SharedObject %d ObjectRef %d\0A\00", align 1
@.str.181 = private unnamed_addr constant [46 x i8] c"Page %d SharedObject %d Position Numerator 1\0A\00", align 1
@.str.182 = private unnamed_addr constant [32 x i8] c"Page %d ContentStreamOffset %d\0A\00", align 1
@.str.183 = private unnamed_addr constant [32 x i8] c"Page %d ContentStreamLength %d\0A\00", align 1
@.str.184 = private unnamed_addr constant [23 x i8] c"\0AFirstSharedObject %d\0A\00", align 1
@.str.185 = private unnamed_addr constant [23 x i8] c"FirstObjectOffset %ld\0A\00", align 1
@.str.186 = private unnamed_addr constant [21 x i8] c"FirstPageEntries %d\0A\00", align 1
@.str.187 = private unnamed_addr constant [21 x i8] c"NumSharedObjects %d\0A\00", align 1
@.str.188 = private unnamed_addr constant [26 x i8] c"GreatestObjectsNumBits 1\0A\00", align 1
@.str.189 = private unnamed_addr constant [22 x i8] c"LeastObjectLength %d\0A\00", align 1
@.str.190 = private unnamed_addr constant [35 x i8] c"Shared Object group %d, Length %d\0A\00", align 1
@.str.191 = private unnamed_addr constant [45 x i8] c"Shared Object group %d, SignatureFlag false\0A\00", align 1
@.str.192 = private unnamed_addr constant [38 x i8] c"Shared Object group %d, NumObjects 1\0A\00", align 1
@.str.193 = private unnamed_addr constant [19 x i8] c"\0Aendstream\0Aendobj\0A\00", align 1
@.str.194 = private unnamed_addr constant [11 x i8] c"xref\0A0 %d\0A\00", align 1
@.str.195 = private unnamed_addr constant [21 x i8] c"0000000000 65535 f \0A\00", align 1
@.str.196 = private unnamed_addr constant [44 x i8] c"trailer\0A<</Size %d>>\0Astartxref\0A%ld\0A%%%%EOF\0A\00", align 1
@.str.197 = private unnamed_addr constant [35 x i8] c"%d 0 obj\0A<</Linearized 1/L %ld/H[ \00", align 1
@.str.198 = private unnamed_addr constant [4 x i8] c"%ld\00", align 1
@.str.199 = private unnamed_addr constant [6 x i8] c" %ld]\00", align 1
@.str.200 = private unnamed_addr constant [12 x i8] c"/O %d/E %ld\00", align 1
@.str.201 = private unnamed_addr constant [22 x i8] c"/N %d/T %ld>>\0Aendobj\0A\00", align 1
@.str.202 = private unnamed_addr constant [87 x i8] c"\0Atrailer\0A<</Size %ld/Info %d 0 R/Root %d 0 R/ID[%s%s]/Prev %ld>>\0Astartxref\0D\0A0\0A%%%%EOF\0A\00", align 1
@.str.203 = private unnamed_addr constant [25 x i8] c"%d 0 obj\0A<</Length %10ld\00", align 1
@.str.204 = private unnamed_addr constant [20 x i8] c"\0A/S %10ld>>\0Astream\0A\00", align 1
@.str.205 = private unnamed_addr constant [30 x i8] c"Free Shared object references\00", align 1
@.str.206 = private unnamed_addr constant [20 x i8] c"Free Page Hint data\00", align 1
@.str.207 = private unnamed_addr constant [22 x i8] c"Free Shared hint data\00", align 1
@.str.208 = private unnamed_addr constant [36 x i8] c"Working memory for object rewriting\00", align 1
@.str.209 = private unnamed_addr constant [10 x i8] c"%d 0 obj\0A\00", align 1
@.str.210 = private unnamed_addr constant [41 x i8] c"Free working memory for object rewriting\00", align 1
@.str.211 = private unnamed_addr constant [45 x i8] c"Increase working memory for object rewriting\00", align 1
@.str.212 = private unnamed_addr constant [7 x i8] c"endobj\00", align 1
@.str.213 = private unnamed_addr constant [7 x i8] c"stream\00", align 1
@.str.214 = private unnamed_addr constant [5 x i8] c" 0 R\00", align 1
@.str.215 = private unnamed_addr constant [7 x i8] c"%d 0 R\00", align 1

declare i32 @gx_default_install(%struct.gx_device_s*, %struct.gs_state_s*) #0

declare i32 @gx_default_begin_page(%struct.gx_device_s*, %struct.gs_state_s*) #0

declare i32 @gx_default_end_page(%struct.gx_device_s*, i32, %struct.gs_state_s*) #0

; Function Attrs: nounwind uwtable
define internal i32 @pdf_open(%struct.gx_device_s* %dev) #1 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.gx_device_s*, align 8
  %pdev = alloca %struct.gx_device_pdf_s*, align 8
  %mem = alloca %struct.gs_memory_s*, align 8
  %code = alloca i32, align 4
  %s = alloca %struct.stream_s*, align 8
  %cleanup.dest.slot = alloca i32
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store %struct.gx_device_s* %dev, %struct.gx_device_s** %dev.addr, align 8, !tbaa !1
  %0 = bitcast %struct.gx_device_pdf_s** %pdev to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = load %struct.gx_device_s*, %struct.gx_device_s** %dev.addr, align 8, !tbaa !1
  %2 = bitcast %struct.gx_device_s* %1 to %struct.gx_device_pdf_s*
  store %struct.gx_device_pdf_s* %2, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %3 = bitcast %struct.gs_memory_s** %mem to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #2
  %4 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %4, i32 0, i32 3
  %5 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory, align 8, !tbaa !5
  %procs = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %5, i32 0, i32 1
  %stable = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs, i32 0, i32 3
  %6 = load %struct.gs_memory_s* (%struct.gs_memory_s*)*, %struct.gs_memory_s* (%struct.gs_memory_s*)** %stable, align 8, !tbaa !49
  %7 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %memory1 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %7, i32 0, i32 3
  %8 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory1, align 8, !tbaa !5
  %call = call %struct.gs_memory_s* %6(%struct.gs_memory_s* %8) #7
  %9 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %v_memory = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %9, i32 0, i32 43
  store %struct.gs_memory_s* %call, %struct.gs_memory_s** %v_memory, align 8, !tbaa !52
  store %struct.gs_memory_s* %call, %struct.gs_memory_s** %mem, align 8, !tbaa !1
  %10 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %10) #2
  %11 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %InOutputPage = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %11, i32 0, i32 254
  store i32 0, i32* %InOutputPage, align 4, !tbaa !53
  %12 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %13 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %xref = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %13, i32 0, i32 144
  %call2 = call i32 @pdf_open_temp_file(%struct.gx_device_pdf_s* %12, %struct.pdf_temp_file_s* %xref) #7
  store i32 %call2, i32* %code, align 4, !tbaa !54
  %cmp = icmp slt i32 %call2, 0
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %14 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %15 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %asides = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %15, i32 0, i32 145
  %call3 = call i32 @pdf_open_temp_stream(%struct.gx_device_pdf_s* %14, %struct.pdf_temp_file_s* %asides) #7
  store i32 %call3, i32* %code, align 4, !tbaa !54
  %cmp4 = icmp slt i32 %call3, 0
  br i1 %cmp4, label %if.then, label %lor.lhs.false.5

lor.lhs.false.5:                                  ; preds = %lor.lhs.false
  %16 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %17 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %streams = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %17, i32 0, i32 146
  %call6 = call i32 @pdf_open_temp_stream(%struct.gx_device_pdf_s* %16, %struct.pdf_temp_file_s* %streams) #7
  store i32 %call6, i32* %code, align 4, !tbaa !54
  %cmp7 = icmp slt i32 %call6, 0
  br i1 %cmp7, label %if.then, label %lor.lhs.false.8

lor.lhs.false.8:                                  ; preds = %lor.lhs.false.5
  %18 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %19 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %pictures = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %19, i32 0, i32 147
  %call9 = call i32 @pdf_open_temp_stream(%struct.gx_device_pdf_s* %18, %struct.pdf_temp_file_s* %pictures) #7
  store i32 %call9, i32* %code, align 4, !tbaa !54
  %cmp10 = icmp slt i32 %call9, 0
  br i1 %cmp10, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false.8, %lor.lhs.false.5, %lor.lhs.false, %entry
  br label %fail

if.end:                                           ; preds = %lor.lhs.false.8
  %20 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %21 = bitcast %struct.gx_device_pdf_s* %20 to %struct.gx_device_vector_s*
  %call11 = call i32 @gdev_vector_open_file_options(%struct.gx_device_vector_s* %21, i32 512, i32 0) #7
  store i32 %call11, i32* %code, align 4, !tbaa !54
  %22 = load i32, i32* %code, align 4, !tbaa !54
  %cmp12 = icmp slt i32 %22, 0
  br i1 %cmp12, label %if.then.13, label %if.end.14

if.then.13:                                       ; preds = %if.end
  br label %fail

if.end.14:                                        ; preds = %if.end
  %23 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %ComputeDocumentDigest = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %23, i32 0, i32 122
  %24 = load i32, i32* %ComputeDocumentDigest, align 4, !tbaa !55
  %tobool = icmp ne i32 %24, 0
  br i1 %tobool, label %if.then.15, label %if.end.22

if.then.15:                                       ; preds = %if.end.14
  %25 = bitcast %struct.stream_s** %s to i8*
  call void @llvm.lifetime.start(i64 8, i8* %25) #2
  %26 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %v_memory16 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %26, i32 0, i32 43
  %27 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory16, align 8, !tbaa !52
  %28 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %strm = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %28, i32 0, i32 47
  %29 = load %struct.stream_s*, %struct.stream_s** %strm, align 8, !tbaa !56
  %call17 = call %struct.stream_s* @s_MD5C_make_stream(%struct.gs_memory_s* %27, %struct.stream_s* %29) #7
  store %struct.stream_s* %call17, %struct.stream_s** %s, align 8, !tbaa !1
  %30 = load %struct.stream_s*, %struct.stream_s** %s, align 8, !tbaa !1
  %cmp18 = icmp eq %struct.stream_s* %30, null
  br i1 %cmp18, label %if.then.19, label %if.end.20

if.then.19:                                       ; preds = %if.then.15
  store i32 -25, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.20:                                        ; preds = %if.then.15
  %31 = load %struct.stream_s*, %struct.stream_s** %s, align 8, !tbaa !1
  %32 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %strm21 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %32, i32 0, i32 47
  store %struct.stream_s* %31, %struct.stream_s** %strm21, align 8, !tbaa !56
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.20, %if.then.19
  %33 = bitcast %struct.stream_s** %s to i8*
  call void @llvm.lifetime.end(i64 8, i8* %33) #2
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.135 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.22

if.end.22:                                        ; preds = %cleanup.cont, %if.end.14
  %34 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %35 = bitcast %struct.gx_device_pdf_s* %34 to %struct.gx_device_vector_s*
  call void @gdev_vector_init(%struct.gx_device_vector_s* %35) #7
  %36 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %uuid_time = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %36, i32 0, i32 180
  %arraydecay = getelementptr inbounds [2 x i64], [2 x i64]* %uuid_time, i32 0, i32 0
  call void @gp_get_realtime(i64* %arraydecay) #7
  %37 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %vec_procs = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %37, i32 0, i32 44
  store %struct.gx_device_vector_procs_s* @pdf_vector_procs, %struct.gx_device_vector_procs_s** %vec_procs, align 8, !tbaa !57
  %38 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %stroke_options = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %38, i32 0, i32 61
  store i32 16, i32* %stroke_options, align 4, !tbaa !58
  %39 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %fill_options = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %39, i32 0, i32 60
  store i32 16, i32* %fill_options, align 4, !tbaa !59
  %40 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %in_page = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %40, i32 0, i32 63
  store i32 1, i32* %in_page, align 4, !tbaa !60
  %41 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %call23 = call %struct.cos_dict_s* @cos_dict_alloc(%struct.gx_device_pdf_s* %41, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.20, i32 0, i32 0)) #7
  %42 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %global_named_objects = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %42, i32 0, i32 181
  store %struct.cos_dict_s* %call23, %struct.cos_dict_s** %global_named_objects, align 8, !tbaa !61
  %43 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %local_named_objects = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %43, i32 0, i32 182
  store %struct.cos_dict_s* %call23, %struct.cos_dict_s** %local_named_objects, align 8, !tbaa !62
  %44 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %call24 = call %struct.cos_array_s* @cos_array_alloc(%struct.gx_device_pdf_s* %44, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.21, i32 0, i32 0)) #7
  %45 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %NI_stack = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %45, i32 0, i32 183
  store %struct.cos_array_s* %call24, %struct.cos_array_s** %NI_stack, align 8, !tbaa !63
  %46 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %v_memory25 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %46, i32 0, i32 43
  %47 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory25, align 8, !tbaa !52
  %procs26 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %47, i32 0, i32 1
  %alloc_bytes = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs26, i32 0, i32 7
  %48 = load i8* (%struct.gs_memory_s*, i32, i8*)*, i8* (%struct.gs_memory_s*, i32, i8*)** %alloc_bytes, align 8, !tbaa !64
  %49 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %v_memory27 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %49, i32 0, i32 43
  %50 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory27, align 8, !tbaa !52
  %call28 = call i8* %48(%struct.gs_memory_s* %50, i32 16632, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.22, i32 0, i32 0)) #7
  %51 = bitcast i8* %call28 to %struct.pdf_viewer_state_s*
  %52 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %vgstack = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %52, i32 0, i32 192
  store %struct.pdf_viewer_state_s* %51, %struct.pdf_viewer_state_s** %vgstack, align 8, !tbaa !65
  %53 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %vgstack29 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %53, i32 0, i32 192
  %54 = load %struct.pdf_viewer_state_s*, %struct.pdf_viewer_state_s** %vgstack29, align 8, !tbaa !65
  %cmp30 = icmp eq %struct.pdf_viewer_state_s* %54, null
  br i1 %cmp30, label %if.then.31, label %if.end.32

if.then.31:                                       ; preds = %if.end.22
  store i32 -25, i32* %code, align 4, !tbaa !54
  br label %fail

if.end.32:                                        ; preds = %if.end.22
  %55 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %vgstack33 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %55, i32 0, i32 192
  %56 = load %struct.pdf_viewer_state_s*, %struct.pdf_viewer_state_s** %vgstack33, align 8, !tbaa !65
  %57 = bitcast %struct.pdf_viewer_state_s* %56 to i8*
  %call34 = call i8* @memset(i8* %57, i32 0, i64 16632) #8
  %58 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %vgstack_size = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %58, i32 0, i32 193
  store i32 11, i32* %vgstack_size, align 4, !tbaa !66
  %59 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %call35 = call %struct.cos_array_s* @cos_array_alloc(%struct.gx_device_pdf_s* %59, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.23, i32 0, i32 0)) #7
  %60 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %Namespace_stack = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %60, i32 0, i32 184
  store %struct.cos_array_s* %call35, %struct.cos_array_s** %Namespace_stack, align 8, !tbaa !67
  %61 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  call void @pdf_initialize_ids(%struct.gx_device_pdf_s* %61) #7
  %62 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %call36 = call i32 @pdf_compute_fileID(%struct.gx_device_pdf_s* %62) #7
  store i32 %call36, i32* %code, align 4, !tbaa !54
  %63 = load i32, i32* %code, align 4, !tbaa !54
  %cmp37 = icmp slt i32 %63, 0
  br i1 %cmp37, label %if.then.38, label %if.end.39

if.then.38:                                       ; preds = %if.end.32
  br label %fail

if.end.39:                                        ; preds = %if.end.32
  %64 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %OwnerPassword = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %64, i32 0, i32 115
  %size = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %OwnerPassword, i32 0, i32 1
  %65 = load i32, i32* %size, align 4, !tbaa !68
  %cmp40 = icmp ugt i32 %65, 0
  br i1 %cmp40, label %if.then.41, label %if.else

if.then.41:                                       ; preds = %if.end.39
  %66 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %call42 = call i32 @pdf_compute_encryption_data(%struct.gx_device_pdf_s* %66) #7
  store i32 %call42, i32* %code, align 4, !tbaa !54
  %67 = load i32, i32* %code, align 4, !tbaa !54
  %cmp43 = icmp slt i32 %67, 0
  br i1 %cmp43, label %if.then.44, label %if.end.45

if.then.44:                                       ; preds = %if.then.41
  br label %fail

if.end.45:                                        ; preds = %if.then.41
  br label %if.end.64

if.else:                                          ; preds = %if.end.39
  %68 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %UserPassword = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %68, i32 0, i32 116
  %size46 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %UserPassword, i32 0, i32 1
  %69 = load i32, i32* %size46, align 4, !tbaa !69
  %cmp47 = icmp ugt i32 %69, 0
  br i1 %cmp47, label %if.then.48, label %if.else.54

if.then.48:                                       ; preds = %if.else
  %70 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %memory49 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %70, i32 0, i32 3
  %71 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory49, align 8, !tbaa !5
  %call50 = call i8* @gs_program_name() #7
  %call51 = call i64 @gs_revision_number() #7
  call void @emprintf_program_ident(%struct.gs_memory_s* %71, i8* %call50, i64 %call51) #7
  %72 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %memory52 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %72, i32 0, i32 3
  %73 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory52, align 8, !tbaa !5
  %call53 = call i32 (%struct.gs_memory_s*, i8*, ...) @errprintf(%struct.gs_memory_s* %73, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.24, i32 0, i32 0)) #7
  store i32 -15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.135

if.else.54:                                       ; preds = %if.else
  %74 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %KeyLength = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %74, i32 0, i32 117
  %75 = load i32, i32* %KeyLength, align 4, !tbaa !70
  %tobool55 = icmp ne i32 %75, 0
  br i1 %tobool55, label %if.then.56, label %if.end.62

if.then.56:                                       ; preds = %if.else.54
  %76 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %memory57 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %76, i32 0, i32 3
  %77 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory57, align 8, !tbaa !5
  %call58 = call i8* @gs_program_name() #7
  %call59 = call i64 @gs_revision_number() #7
  call void @emprintf_program_ident(%struct.gs_memory_s* %77, i8* %call58, i64 %call59) #7
  %78 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %memory60 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %78, i32 0, i32 3
  %79 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory60, align 8, !tbaa !5
  %call61 = call i32 (%struct.gs_memory_s*, i8*, ...) @errprintf(%struct.gs_memory_s* %79, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.25, i32 0, i32 0)) #7
  store i32 -15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.135

if.end.62:                                        ; preds = %if.else.54
  br label %if.end.63

if.end.63:                                        ; preds = %if.end.62
  br label %if.end.64

if.end.64:                                        ; preds = %if.end.63, %if.end.45
  %80 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %call65 = call %struct.cos_dict_s* @cos_dict_alloc(%struct.gx_device_pdf_s* %80, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.26, i32 0, i32 0)) #7
  %81 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %local_named_objects66 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %81, i32 0, i32 182
  store %struct.cos_dict_s* %call65, %struct.cos_dict_s** %local_named_objects66, align 8, !tbaa !62
  %82 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %outlines_id = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %82, i32 0, i32 152
  store i64 0, i64* %outlines_id, align 8, !tbaa !71
  %83 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %next_page = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %83, i32 0, i32 153
  store i32 0, i32* %next_page, align 4, !tbaa !72
  %84 = load %struct.gs_memory_s*, %struct.gs_memory_s** %mem, align 8, !tbaa !1
  %call67 = call %struct.pdf_text_data_s* @pdf_text_data_alloc(%struct.gs_memory_s* %84) #7
  %85 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %text = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %85, i32 0, i32 160
  store %struct.pdf_text_data_s* %call67, %struct.pdf_text_data_s** %text, align 8, !tbaa !73
  %86 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %vgstack_size68 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %86, i32 0, i32 193
  %87 = load i32, i32* %vgstack_size68, align 4, !tbaa !66
  %88 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %sbstack_size = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %88, i32 0, i32 198
  store i32 %87, i32* %sbstack_size, align 4, !tbaa !74
  %89 = load %struct.gs_memory_s*, %struct.gs_memory_s** %mem, align 8, !tbaa !1
  %procs69 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %89, i32 0, i32 1
  %alloc_struct_array = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs69, i32 0, i32 12
  %90 = load i8* (%struct.gs_memory_s*, i32, %struct.gs_memory_struct_type_s*, i8*)*, i8* (%struct.gs_memory_s*, i32, %struct.gs_memory_struct_type_s*, i8*)** %alloc_struct_array, align 8, !tbaa !75
  %91 = load %struct.gs_memory_s*, %struct.gs_memory_s** %mem, align 8, !tbaa !1
  %92 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %sbstack_size70 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %92, i32 0, i32 198
  %93 = load i32, i32* %sbstack_size70, align 4, !tbaa !74
  %call71 = call i8* %90(%struct.gs_memory_s* %91, i32 %93, %struct.gs_memory_struct_type_s* @st_pdf_substream_save_element, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.27, i32 0, i32 0)) #7
  %94 = bitcast i8* %call71 to %struct.pdf_substream_save_s*
  %95 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %sbstack = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %95, i32 0, i32 200
  store %struct.pdf_substream_save_s* %94, %struct.pdf_substream_save_s** %sbstack, align 8, !tbaa !76
  %96 = load %struct.gs_memory_s*, %struct.gs_memory_s** %mem, align 8, !tbaa !1
  %procs72 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %96, i32 0, i32 1
  %alloc_struct_array73 = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs72, i32 0, i32 12
  %97 = load i8* (%struct.gs_memory_s*, i32, %struct.gs_memory_struct_type_s*, i8*)*, i8* (%struct.gs_memory_s*, i32, %struct.gs_memory_struct_type_s*, i8*)** %alloc_struct_array73, align 8, !tbaa !75
  %98 = load %struct.gs_memory_s*, %struct.gs_memory_s** %mem, align 8, !tbaa !1
  %call74 = call i8* %97(%struct.gs_memory_s* %98, i32 50, %struct.gs_memory_struct_type_s* @st_pdf_page_element, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.28, i32 0, i32 0)) #7
  %99 = bitcast i8* %call74 to %struct.pdf_page_s*
  %100 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %pages = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %100, i32 0, i32 162
  store %struct.pdf_page_s* %99, %struct.pdf_page_s** %pages, align 8, !tbaa !77
  %101 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %text75 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %101, i32 0, i32 160
  %102 = load %struct.pdf_text_data_s*, %struct.pdf_text_data_s** %text75, align 8, !tbaa !73
  %cmp76 = icmp eq %struct.pdf_text_data_s* %102, null
  br i1 %cmp76, label %if.then.83, label %lor.lhs.false.77

lor.lhs.false.77:                                 ; preds = %if.end.64
  %103 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %pages78 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %103, i32 0, i32 162
  %104 = load %struct.pdf_page_s*, %struct.pdf_page_s** %pages78, align 8, !tbaa !77
  %cmp79 = icmp eq %struct.pdf_page_s* %104, null
  br i1 %cmp79, label %if.then.83, label %lor.lhs.false.80

lor.lhs.false.80:                                 ; preds = %lor.lhs.false.77
  %105 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %sbstack81 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %105, i32 0, i32 200
  %106 = load %struct.pdf_substream_save_s*, %struct.pdf_substream_save_s** %sbstack81, align 8, !tbaa !76
  %cmp82 = icmp eq %struct.pdf_substream_save_s* %106, null
  br i1 %cmp82, label %if.then.83, label %if.end.84

if.then.83:                                       ; preds = %lor.lhs.false.80, %lor.lhs.false.77, %if.end.64
  store i32 -25, i32* %code, align 4, !tbaa !54
  br label %fail

if.end.84:                                        ; preds = %lor.lhs.false.80
  %107 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %sbstack85 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %107, i32 0, i32 200
  %108 = load %struct.pdf_substream_save_s*, %struct.pdf_substream_save_s** %sbstack85, align 8, !tbaa !76
  %109 = bitcast %struct.pdf_substream_save_s* %108 to i8*
  %110 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %sbstack_size86 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %110, i32 0, i32 198
  %111 = load i32, i32* %sbstack_size86, align 4, !tbaa !74
  %conv = sext i32 %111 to i64
  %mul = mul i64 %conv, 120
  %call87 = call i8* @memset(i8* %109, i32 0, i64 %mul) #8
  %112 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %pages88 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %112, i32 0, i32 162
  %113 = load %struct.pdf_page_s*, %struct.pdf_page_s** %pages88, align 8, !tbaa !77
  %114 = bitcast %struct.pdf_page_s* %113 to i8*
  %call89 = call i8* @memset(i8* %114, i32 0, i64 10400) #8
  %115 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %num_pages = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %115, i32 0, i32 163
  store i32 50, i32* %num_pages, align 4, !tbaa !78
  %116 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %116) #2
  %117 = bitcast i32* %j to i8*
  call void @llvm.lifetime.start(i64 4, i8* %117) #2
  store i32 0, i32* %i, align 4, !tbaa !54
  br label %for.cond

for.cond:                                         ; preds = %for.inc.98, %if.end.84
  %118 = load i32, i32* %i, align 4, !tbaa !54
  %cmp90 = icmp slt i32 %118, 15
  br i1 %cmp90, label %for.body, label %for.end.100

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !tbaa !54
  br label %for.cond.92

for.cond.92:                                      ; preds = %for.inc, %for.body
  %119 = load i32, i32* %j, align 4, !tbaa !54
  %cmp93 = icmp slt i32 %119, 16
  br i1 %cmp93, label %for.body.95, label %for.end

for.body.95:                                      ; preds = %for.cond.92
  %120 = load i32, i32* %j, align 4, !tbaa !54
  %idxprom = sext i32 %120 to i64
  %121 = load i32, i32* %i, align 4, !tbaa !54
  %idxprom96 = sext i32 %121 to i64
  %122 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %resources = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %122, i32 0, i32 165
  %arrayidx = getelementptr inbounds [15 x %struct.pdf_resource_list_s], [15 x %struct.pdf_resource_list_s]* %resources, i32 0, i64 %idxprom96
  %chains = getelementptr inbounds %struct.pdf_resource_list_s, %struct.pdf_resource_list_s* %arrayidx, i32 0, i32 0
  %arrayidx97 = getelementptr inbounds [16 x %struct.pdf_resource_s*], [16 x %struct.pdf_resource_s*]* %chains, i32 0, i64 %idxprom
  store %struct.pdf_resource_s* null, %struct.pdf_resource_s** %arrayidx97, align 8, !tbaa !1
  br label %for.inc

for.inc:                                          ; preds = %for.body.95
  %123 = load i32, i32* %j, align 4, !tbaa !54
  %inc = add nsw i32 %123, 1
  store i32 %inc, i32* %j, align 4, !tbaa !54
  br label %for.cond.92

for.end:                                          ; preds = %for.cond.92
  br label %for.inc.98

for.inc.98:                                       ; preds = %for.end
  %124 = load i32, i32* %i, align 4, !tbaa !54
  %inc99 = add nsw i32 %124, 1
  store i32 %inc99, i32* %i, align 4, !tbaa !54
  br label %for.cond

for.end.100:                                      ; preds = %for.cond
  %125 = bitcast i32* %j to i8*
  call void @llvm.lifetime.end(i64 4, i8* %125) #2
  %126 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %126) #2
  %127 = load %struct.gs_memory_s*, %struct.gs_memory_s** %mem, align 8, !tbaa !1
  %procs101 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %127, i32 0, i32 1
  %alloc_bytes102 = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs101, i32 0, i32 7
  %128 = load i8* (%struct.gs_memory_s*, i32, i8*)*, i8* (%struct.gs_memory_s*, i32, i8*)** %alloc_bytes102, align 8, !tbaa !64
  %129 = load %struct.gs_memory_s*, %struct.gs_memory_s** %mem, align 8, !tbaa !1
  %call103 = call i8* %128(%struct.gs_memory_s* %129, i32 3840, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.29, i32 0, i32 0)) #7
  %130 = bitcast i8* %call103 to %struct.pdf_outline_level_s*
  %131 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %outline_levels = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %131, i32 0, i32 171
  store %struct.pdf_outline_level_s* %130, %struct.pdf_outline_level_s** %outline_levels, align 8, !tbaa !79
  %132 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %outline_levels104 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %132, i32 0, i32 171
  %133 = load %struct.pdf_outline_level_s*, %struct.pdf_outline_level_s** %outline_levels104, align 8, !tbaa !79
  %134 = bitcast %struct.pdf_outline_level_s* %133 to i8*
  %call105 = call i8* @memset(i8* %134, i32 0, i64 3840) #8
  %135 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %max_outline_depth = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %135, i32 0, i32 173
  store i32 32, i32* %max_outline_depth, align 4, !tbaa !80
  %136 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %outline_levels106 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %136, i32 0, i32 171
  %137 = load %struct.pdf_outline_level_s*, %struct.pdf_outline_level_s** %outline_levels106, align 8, !tbaa !79
  %arrayidx107 = getelementptr inbounds %struct.pdf_outline_level_s, %struct.pdf_outline_level_s* %137, i64 0
  %first = getelementptr inbounds %struct.pdf_outline_level_s, %struct.pdf_outline_level_s* %arrayidx107, i32 0, i32 0
  %id = getelementptr inbounds %struct.pdf_outline_node_s, %struct.pdf_outline_node_s* %first, i32 0, i32 0
  store i64 0, i64* %id, align 8, !tbaa !81
  %138 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %outline_levels108 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %138, i32 0, i32 171
  %139 = load %struct.pdf_outline_level_s*, %struct.pdf_outline_level_s** %outline_levels108, align 8, !tbaa !79
  %arrayidx109 = getelementptr inbounds %struct.pdf_outline_level_s, %struct.pdf_outline_level_s* %139, i64 0
  %left = getelementptr inbounds %struct.pdf_outline_level_s, %struct.pdf_outline_level_s* %arrayidx109, i32 0, i32 2
  store i32 2147483647, i32* %left, align 4, !tbaa !84
  %140 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %outline_levels110 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %140, i32 0, i32 171
  %141 = load %struct.pdf_outline_level_s*, %struct.pdf_outline_level_s** %outline_levels110, align 8, !tbaa !79
  %arrayidx111 = getelementptr inbounds %struct.pdf_outline_level_s, %struct.pdf_outline_level_s* %141, i64 0
  %first112 = getelementptr inbounds %struct.pdf_outline_level_s, %struct.pdf_outline_level_s* %arrayidx111, i32 0, i32 0
  %action = getelementptr inbounds %struct.pdf_outline_node_s, %struct.pdf_outline_node_s* %first112, i32 0, i32 6
  store %struct.cos_dict_s* null, %struct.cos_dict_s** %action, align 8, !tbaa !85
  %142 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %outline_levels113 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %142, i32 0, i32 171
  %143 = load %struct.pdf_outline_level_s*, %struct.pdf_outline_level_s** %outline_levels113, align 8, !tbaa !79
  %arrayidx114 = getelementptr inbounds %struct.pdf_outline_level_s, %struct.pdf_outline_level_s* %143, i64 0
  %last = getelementptr inbounds %struct.pdf_outline_level_s, %struct.pdf_outline_level_s* %arrayidx114, i32 0, i32 1
  %action115 = getelementptr inbounds %struct.pdf_outline_node_s, %struct.pdf_outline_node_s* %last, i32 0, i32 6
  store %struct.cos_dict_s* null, %struct.cos_dict_s** %action115, align 8, !tbaa !86
  %144 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %outline_depth = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %144, i32 0, i32 172
  store i32 0, i32* %outline_depth, align 4, !tbaa !87
  %145 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %closed_outline_depth = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %145, i32 0, i32 174
  store i32 0, i32* %closed_outline_depth, align 4, !tbaa !88
  %146 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %outlines_open = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %146, i32 0, i32 175
  store i32 0, i32* %outlines_open, align 4, !tbaa !89
  %147 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %articles = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %147, i32 0, i32 176
  store %struct.pdf_article_s* null, %struct.pdf_article_s** %articles, align 8, !tbaa !90
  %148 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %Dests = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %148, i32 0, i32 177
  store %struct.cos_dict_s* null, %struct.cos_dict_s** %Dests, align 8, !tbaa !91
  %149 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %EmbeddedFiles = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %149, i32 0, i32 178
  store %struct.cos_dict_s* null, %struct.cos_dict_s** %EmbeddedFiles, align 8, !tbaa !92
  %150 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %PageLabels = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %150, i32 0, i32 188
  store %struct.cos_array_s* null, %struct.cos_array_s** %PageLabels, align 8, !tbaa !93
  %151 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %PageLabels_current_page = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %151, i32 0, i32 189
  store i32 0, i32* %PageLabels_current_page, align 4, !tbaa !94
  %152 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %PageLabels_current_label = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %152, i32 0, i32 190
  store %struct.cos_dict_s* null, %struct.cos_dict_s** %PageLabels_current_label, align 8, !tbaa !95
  %153 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %pte = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %153, i32 0, i32 191
  store %struct.gs_text_enum_s* null, %struct.gs_text_enum_s** %pte, align 8, !tbaa !96
  %154 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  call void @pdf_reset_page(%struct.gx_device_pdf_s* %154) #7
  %155 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %width = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %155, i32 0, i32 13
  %156 = load i32, i32* %width, align 4, !tbaa !97
  %conv116 = sitofp i32 %156 to double
  %157 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %BBox = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %157, i32 0, i32 129
  %p = getelementptr inbounds %struct.gs_rect_s, %struct.gs_rect_s* %BBox, i32 0, i32 0
  %x = getelementptr inbounds %struct.gs_point_s, %struct.gs_point_s* %p, i32 0, i32 0
  store double %conv116, double* %x, align 8, !tbaa !98
  %158 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %height = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %158, i32 0, i32 14
  %159 = load i32, i32* %height, align 4, !tbaa !99
  %conv117 = sitofp i32 %159 to double
  %160 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %BBox118 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %160, i32 0, i32 129
  %p119 = getelementptr inbounds %struct.gs_rect_s, %struct.gs_rect_s* %BBox118, i32 0, i32 0
  %y = getelementptr inbounds %struct.gs_point_s, %struct.gs_point_s* %p119, i32 0, i32 1
  store double %conv117, double* %y, align 8, !tbaa !100
  %161 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %BBox120 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %161, i32 0, i32 129
  %q = getelementptr inbounds %struct.gs_rect_s, %struct.gs_rect_s* %BBox120, i32 0, i32 1
  %x121 = getelementptr inbounds %struct.gs_point_s, %struct.gs_point_s* %q, i32 0, i32 0
  store double 0.000000e+00, double* %x121, align 8, !tbaa !101
  %162 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %BBox122 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %162, i32 0, i32 129
  %q123 = getelementptr inbounds %struct.gs_rect_s, %struct.gs_rect_s* %BBox122, i32 0, i32 1
  %y124 = getelementptr inbounds %struct.gs_point_s, %struct.gs_point_s* %q123, i32 0, i32 1
  store double 0.000000e+00, double* %y124, align 8, !tbaa !102
  %163 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %UseCIEColor = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %163, i32 0, i32 31
  %164 = load i32, i32* %UseCIEColor, align 4, !tbaa !103
  %tobool125 = icmp ne i32 %164, 0
  br i1 %tobool125, label %if.then.126, label %if.end.132

if.then.126:                                      ; preds = %for.end.100
  %165 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %memory127 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %165, i32 0, i32 3
  %166 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory127, align 8, !tbaa !5
  %call128 = call i8* @gs_program_name() #7
  %call129 = call i64 @gs_revision_number() #7
  call void @emprintf_program_ident(%struct.gs_memory_s* %166, i8* %call128, i64 %call129) #7
  %167 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %memory130 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %167, i32 0, i32 3
  %168 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory130, align 8, !tbaa !5
  %call131 = call i32 (%struct.gs_memory_s*, i8*, ...) @errprintf(%struct.gs_memory_s* %168, i8* getelementptr inbounds ([168 x i8], [168 x i8]* @.str.30, i32 0, i32 0)) #7
  br label %if.end.132

if.end.132:                                       ; preds = %if.then.126, %for.end.100
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.135

fail:                                             ; preds = %if.then.83, %if.then.44, %if.then.38, %if.then.31, %if.then.13, %if.then
  %169 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %170 = bitcast %struct.gx_device_pdf_s* %169 to %struct.gx_device_vector_s*
  %call133 = call i32 @gdev_vector_close_file(%struct.gx_device_vector_s* %170) #7
  %171 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %172 = load i32, i32* %code, align 4, !tbaa !54
  %call134 = call i32 @pdf_close_files(%struct.gx_device_pdf_s* %171, i32 %172) #7
  store i32 %call134, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.135

cleanup.135:                                      ; preds = %fail, %if.end.132, %if.then.56, %if.then.48, %cleanup
  %173 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %173) #2
  %174 = bitcast %struct.gs_memory_s** %mem to i8*
  call void @llvm.lifetime.end(i64 8, i8* %174) #2
  %175 = bitcast %struct.gx_device_pdf_s** %pdev to i8*
  call void @llvm.lifetime.end(i64 8, i8* %175) #2
  %176 = load i32, i32* %retval
  ret i32 %176
}

declare void @gx_upright_get_initial_matrix(%struct.gx_device_s*, %struct.gs_matrix_s*) #0

; Function Attrs: nounwind uwtable
define internal i32 @pdf_output_page(%struct.gx_device_s* %dev, i32 %num_copies, i32 %flush) #1 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.gx_device_s*, align 8
  %num_copies.addr = alloca i32, align 4
  %flush.addr = alloca i32, align 4
  %pdev = alloca %struct.gx_device_pdf_s*, align 8
  %code = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.gx_device_s* %dev, %struct.gx_device_s** %dev.addr, align 8, !tbaa !1
  store i32 %num_copies, i32* %num_copies.addr, align 4, !tbaa !54
  store i32 %flush, i32* %flush.addr, align 4, !tbaa !54
  %0 = bitcast %struct.gx_device_pdf_s** %pdev to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = load %struct.gx_device_s*, %struct.gx_device_s** %dev.addr, align 8, !tbaa !1
  %2 = bitcast %struct.gx_device_s* %1 to %struct.gx_device_pdf_s*
  store %struct.gx_device_pdf_s* %2, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %3 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #2
  %4 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %5 = load i32, i32* %num_copies.addr, align 4, !tbaa !54
  %call = call i32 @pdf_close_page(%struct.gx_device_pdf_s* %4, i32 %5) #7
  store i32 %call, i32* %code, align 4, !tbaa !54
  %6 = load i32, i32* %code, align 4, !tbaa !54
  %cmp = icmp slt i32 %6, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %7 = load i32, i32* %code, align 4, !tbaa !54
  store i32 %7, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %8 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %UseCIEColor = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %8, i32 0, i32 31
  %9 = load i32, i32* %UseCIEColor, align 4, !tbaa !103
  %tobool = icmp ne i32 %9, 0
  br i1 %tobool, label %if.then.1, label %if.end.6

if.then.1:                                        ; preds = %if.end
  %10 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %10, i32 0, i32 3
  %11 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory, align 8, !tbaa !5
  %call2 = call i8* @gs_program_name() #7
  %call3 = call i64 @gs_revision_number() #7
  call void @emprintf_program_ident(%struct.gs_memory_s* %11, i8* %call2, i64 %call3) #7
  %12 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %memory4 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %12, i32 0, i32 3
  %13 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory4, align 8, !tbaa !5
  %call5 = call i32 (%struct.gs_memory_s*, i8*, ...) @errprintf(%struct.gs_memory_s* %13, i8* getelementptr inbounds ([168 x i8], [168 x i8]* @.str.30, i32 0, i32 0)) #7
  br label %if.end.6

if.end.6:                                         ; preds = %if.then.1, %if.end
  %14 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %call7 = call i32 @pdf_ferror(%struct.gx_device_pdf_s* %14) #7
  %tobool8 = icmp ne i32 %call7, 0
  br i1 %tobool8, label %if.then.9, label %if.end.10

if.then.9:                                        ; preds = %if.end.6
  br label %if.end.10

if.end.10:                                        ; preds = %if.then.9, %if.end.6
  %15 = load %struct.gx_device_s*, %struct.gx_device_s** %dev.addr, align 8, !tbaa !1
  %16 = load i32, i32* %num_copies.addr, align 4, !tbaa !54
  %17 = load i32, i32* %flush.addr, align 4, !tbaa !54
  %call11 = call i32 @gx_finish_output_page(%struct.gx_device_s* %15, i32 %16, i32 %17) #7
  store i32 %call11, i32* %code, align 4, !tbaa !54
  %cmp12 = icmp slt i32 %call11, 0
  br i1 %cmp12, label %if.then.13, label %if.end.14

if.then.13:                                       ; preds = %if.end.10
  %18 = load i32, i32* %code, align 4, !tbaa !54
  store i32 %18, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.14:                                        ; preds = %if.end.10
  %19 = load %struct.gx_device_s*, %struct.gx_device_s** %dev.addr, align 8, !tbaa !1
  %20 = bitcast %struct.gx_device_s* %19 to %struct.gx_device_vector_s*
  %fname = getelementptr inbounds %struct.gx_device_vector_s, %struct.gx_device_vector_s* %20, i32 0, i32 45
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %fname, i32 0, i32 0
  %21 = load %struct.gx_device_s*, %struct.gx_device_s** %dev.addr, align 8, !tbaa !1
  %memory15 = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %21, i32 0, i32 3
  %22 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory15, align 8, !tbaa !104
  %call16 = call i32 @gx_outputfile_is_separate_pages(i8* %arraydecay, %struct.gs_memory_s* %22) #7
  %tobool17 = icmp ne i32 %call16, 0
  br i1 %tobool17, label %if.then.18, label %if.end.24

if.then.18:                                       ; preds = %if.end.14
  %23 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %InOutputPage = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %23, i32 0, i32 254
  store i32 1, i32* %InOutputPage, align 4, !tbaa !53
  %24 = load %struct.gx_device_s*, %struct.gx_device_s** %dev.addr, align 8, !tbaa !1
  %call19 = call i32 @pdf_close(%struct.gx_device_s* %24) #7
  store i32 %call19, i32* %code, align 4, !tbaa !54
  %cmp20 = icmp slt i32 %call19, 0
  br i1 %cmp20, label %if.then.21, label %if.end.22

if.then.21:                                       ; preds = %if.then.18
  %25 = load i32, i32* %code, align 4, !tbaa !54
  store i32 %25, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.22:                                        ; preds = %if.then.18
  %26 = load %struct.gx_device_s*, %struct.gx_device_s** %dev.addr, align 8, !tbaa !1
  %call23 = call i32 @pdf_open(%struct.gx_device_s* %26) #7
  store i32 %call23, i32* %code, align 4, !tbaa !54
  br label %if.end.24

if.end.24:                                        ; preds = %if.end.22, %if.end.14
  %27 = load i32, i32* %code, align 4, !tbaa !54
  store i32 %27, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.24, %if.then.21, %if.then.13, %if.then
  %28 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %28) #2
  %29 = bitcast %struct.gx_device_pdf_s** %pdev to i8*
  call void @llvm.lifetime.end(i64 8, i8* %29) #2
  %30 = load i32, i32* %retval
  ret i32 %30
}

; Function Attrs: nounwind uwtable
define internal i32 @pdf_close(%struct.gx_device_s* %dev) #1 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.gx_device_s*, align 8
  %pdev = alloca %struct.gx_device_pdf_s*, align 8
  %mem = alloca %struct.gs_memory_s*, align 8
  %s = alloca %struct.stream_s*, align 8
  %tfile = alloca %struct._IO_FILE*, align 8
  %xref1 = alloca i64, align 8
  %resource_pos = alloca i64, align 8
  %Catalog_id = alloca i64, align 8
  %Info_id = alloca i64, align 8
  %Pages_id = alloca i64, align 8
  %Encrypt_id = alloca i64, align 8
  %Threads_id = alloca i64, align 8
  %partial_page = alloca i32, align 4
  %code = alloca i32, align 4
  %code1 = alloca i32, align 4
  %pagecount = alloca i32, align 4
  %start_section = alloca i64, align 8
  %end_section = alloca i64, align 8
  %str = alloca [256 x i8], align 16
  %linear_params = alloca %struct.pdf_linearisation_s, align 8
  %cleanup.dest.slot = alloca i32
  %i = alloca i32, align 4
  %part = alloca %struct.pdf_article_s*, align 8
  %part243 = alloca %struct.pdf_article_s*, align 8
  %pages363 = alloca i32, align 4
  %rfile = alloca %struct._IO_FILE*, align 8
  %res_end = alloca i64, align 8
  %j = alloca i32, align 4
  %i394 = alloca i32, align 4
  %p = alloca i8*, align 8
  %pres = alloca %struct.pdf_resource_s*, align 8
  %page = alloca %struct.pdf_page_s*, align 8
  %i460 = alloca i32, align 4
  %index = alloca i32, align 4
  %p465 = alloca i8*, align 8
  %xref_str = alloca [32 x i8], align 16
  %i652 = alloca i32, align 4
  %j680 = alloca i32, align 4
  %code681 = alloca i32, align 4
  %pres691 = alloca %struct.pdf_resource_s*, align 8
  %pdfont = alloca %struct.pdf_font_resource_s*, align 8
  %j707 = alloca i32, align 4
  %code708 = alloca i32, align 4
  %pres718 = alloca %struct.pdf_resource_s*, align 8
  %pdfont728 = alloca %struct.pdf_font_resource_s*, align 8
  %j735 = alloca i32, align 4
  %code736 = alloca i32, align 4
  %pres746 = alloca %struct.pdf_resource_s*, align 8
  %j762 = alloca i32, align 4
  %code763 = alloca i32, align 4
  %pres773 = alloca %struct.pdf_resource_s*, align 8
  %j798 = alloca i32, align 4
  %code799 = alloca i32, align 4
  %pres809 = alloca %struct.pdf_resource_s*, align 8
  %j825 = alloca i32, align 4
  %code826 = alloca i32, align 4
  %pres836 = alloca %struct.pdf_resource_s*, align 8
  %j862 = alloca i32, align 4
  %code863 = alloca i32, align 4
  %pres873 = alloca %struct.pdf_resource_s*, align 8
  %j899 = alloca i32, align 4
  %code900 = alloca i32, align 4
  %pres910 = alloca %struct.pdf_resource_s*, align 8
  %j936 = alloca i32, align 4
  %code937 = alloca i32, align 4
  %pres947 = alloca %struct.pdf_resource_s*, align 8
  %j973 = alloca i32, align 4
  %code974 = alloca i32, align 4
  %pnext = alloca %struct.pdf_resource_s*, align 8
  %pres984 = alloca %struct.pdf_resource_s*, align 8
  %i1010 = alloca i32, align 4
  %j1011 = alloca i32, align 4
  %pres1037 = alloca %struct.pdf_resource_s*, align 8
  %prev = alloca %struct.pdf_resource_s*, align 8
  %i1061 = alloca i32, align 4
  %i1110 = alloca i32, align 4
  %status = alloca i32, align 4
  store %struct.gx_device_s* %dev, %struct.gx_device_s** %dev.addr, align 8, !tbaa !1
  %0 = bitcast %struct.gx_device_pdf_s** %pdev to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = load %struct.gx_device_s*, %struct.gx_device_s** %dev.addr, align 8, !tbaa !1
  %2 = bitcast %struct.gx_device_s* %1 to %struct.gx_device_pdf_s*
  store %struct.gx_device_pdf_s* %2, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %3 = bitcast %struct.gs_memory_s** %mem to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #2
  %4 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %v_memory = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %4, i32 0, i32 43
  %5 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory, align 8, !tbaa !52
  store %struct.gs_memory_s* %5, %struct.gs_memory_s** %mem, align 8, !tbaa !1
  %6 = bitcast %struct.stream_s** %s to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6) #2
  %7 = bitcast %struct._IO_FILE** %tfile to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7) #2
  %8 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %xref = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %8, i32 0, i32 144
  %file = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %xref, i32 0, i32 1
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** %file, align 8, !tbaa !106
  store %struct._IO_FILE* %9, %struct._IO_FILE** %tfile, align 8, !tbaa !1
  %10 = bitcast i64* %xref1 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %10) #2
  store i64 0, i64* %xref1, align 8, !tbaa !107
  %11 = bitcast i64* %resource_pos to i8*
  call void @llvm.lifetime.start(i64 8, i8* %11) #2
  %12 = bitcast i64* %Catalog_id to i8*
  call void @llvm.lifetime.start(i64 8, i8* %12) #2
  %13 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %Catalog = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %13, i32 0, i32 149
  %14 = load %struct.cos_dict_s*, %struct.cos_dict_s** %Catalog, align 8, !tbaa !108
  %id = getelementptr inbounds %struct.cos_dict_s, %struct.cos_dict_s* %14, i32 0, i32 1
  %15 = load i64, i64* %id, align 8, !tbaa !109
  store i64 %15, i64* %Catalog_id, align 8, !tbaa !107
  %16 = bitcast i64* %Info_id to i8*
  call void @llvm.lifetime.start(i64 8, i8* %16) #2
  %17 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %Info = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %17, i32 0, i32 150
  %18 = load %struct.cos_dict_s*, %struct.cos_dict_s** %Info, align 8, !tbaa !112
  %id2 = getelementptr inbounds %struct.cos_dict_s, %struct.cos_dict_s* %18, i32 0, i32 1
  %19 = load i64, i64* %id2, align 8, !tbaa !109
  store i64 %19, i64* %Info_id, align 8, !tbaa !107
  %20 = bitcast i64* %Pages_id to i8*
  call void @llvm.lifetime.start(i64 8, i8* %20) #2
  %21 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %Pages = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %21, i32 0, i32 151
  %22 = load %struct.cos_dict_s*, %struct.cos_dict_s** %Pages, align 8, !tbaa !113
  %id3 = getelementptr inbounds %struct.cos_dict_s, %struct.cos_dict_s* %22, i32 0, i32 1
  %23 = load i64, i64* %id3, align 8, !tbaa !109
  store i64 %23, i64* %Pages_id, align 8, !tbaa !107
  %24 = bitcast i64* %Encrypt_id to i8*
  call void @llvm.lifetime.start(i64 8, i8* %24) #2
  store i64 0, i64* %Encrypt_id, align 8, !tbaa !107
  %25 = bitcast i64* %Threads_id to i8*
  call void @llvm.lifetime.start(i64 8, i8* %25) #2
  store i64 0, i64* %Threads_id, align 8, !tbaa !107
  %26 = bitcast i32* %partial_page to i8*
  call void @llvm.lifetime.start(i64 4, i8* %26) #2
  %27 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %contents_id = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %27, i32 0, i32 155
  %28 = load i64, i64* %contents_id, align 8, !tbaa !114
  %cmp = icmp ne i64 %28, 0
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %entry
  %29 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %next_page = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %29, i32 0, i32 153
  %30 = load i32, i32* %next_page, align 4, !tbaa !72
  %cmp4 = icmp ne i32 %30, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %31 = phi i1 [ false, %entry ], [ %cmp4, %land.rhs ]
  %land.ext = zext i1 %31 to i32
  store i32 %land.ext, i32* %partial_page, align 4, !tbaa !54
  %32 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %32) #2
  store i32 0, i32* %code, align 4, !tbaa !54
  %33 = bitcast i32* %code1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %33) #2
  %34 = bitcast i32* %pagecount to i8*
  call void @llvm.lifetime.start(i64 4, i8* %34) #2
  store i32 0, i32* %pagecount, align 4, !tbaa !54
  %35 = bitcast i64* %start_section to i8*
  call void @llvm.lifetime.start(i64 8, i8* %35) #2
  %36 = bitcast i64* %end_section to i8*
  call void @llvm.lifetime.start(i64 8, i8* %36) #2
  %37 = bitcast [256 x i8]* %str to i8*
  call void @llvm.lifetime.start(i64 256, i8* %37) #2
  %38 = bitcast %struct.pdf_linearisation_s* %linear_params to i8*
  call void @llvm.lifetime.start(i64 4680, i8* %38) #2
  %39 = bitcast %struct.pdf_linearisation_s* %linear_params to i8*
  %call = call i8* @memset(i8* %39, i32 0, i64 4680) #8
  %40 = load i64, i64* %Info_id, align 8, !tbaa !107
  %Info_id5 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %linear_params, i32 0, i32 6
  store i64 %40, i64* %Info_id5, align 8, !tbaa !115
  %41 = load i64, i64* %Pages_id, align 8, !tbaa !107
  %Pages_id6 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %linear_params, i32 0, i32 7
  store i64 %41, i64* %Pages_id6, align 8, !tbaa !119
  %42 = load i64, i64* %Catalog_id, align 8, !tbaa !107
  %Catalog_id7 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %linear_params, i32 0, i32 5
  store i64 %42, i64* %Catalog_id7, align 8, !tbaa !120
  %43 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %next_page8 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %43, i32 0, i32 153
  %44 = load i32, i32* %next_page8, align 4, !tbaa !72
  %cmp9 = icmp eq i32 %44, 0
  br i1 %cmp9, label %if.then, label %if.end.27

if.then:                                          ; preds = %land.end
  %45 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %InOutputPage = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %45, i32 0, i32 254
  %46 = load i32, i32* %InOutputPage, align 4, !tbaa !53
  %tobool = icmp ne i32 %46, 0
  br i1 %tobool, label %if.end.22, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.then
  %47 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %fname = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %47, i32 0, i32 45
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %fname, i32 0, i32 0
  %48 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %48, i32 0, i32 3
  %49 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory, align 8, !tbaa !5
  %call10 = call i32 @gx_outputfile_is_separate_pages(i8* %arraydecay, %struct.gs_memory_s* %49) #7
  %tobool11 = icmp ne i32 %call10, 0
  br i1 %tobool11, label %if.then.12, label %if.end.22

if.then.12:                                       ; preds = %land.lhs.true
  %50 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %51 = bitcast %struct.gx_device_pdf_s* %50 to %struct.gx_device_vector_s*
  %call13 = call i32 @gdev_vector_close_file(%struct.gx_device_vector_s* %51) #7
  store i32 %call13, i32* %code, align 4, !tbaa !54
  %52 = load i32, i32* %code, align 4, !tbaa !54
  %cmp14 = icmp ne i32 %52, 0
  br i1 %cmp14, label %if.then.15, label %if.end

if.then.15:                                       ; preds = %if.then.12
  %53 = load i32, i32* %code, align 4, !tbaa !54
  store i32 %53, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %if.then.12
  %54 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %55 = bitcast %struct.gx_device_pdf_s* %54 to %struct.gx_device_s*
  %56 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %fname16 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %56, i32 0, i32 45
  %arraydecay17 = getelementptr inbounds [4096 x i8], [4096 x i8]* %fname16, i32 0, i32 0
  %call18 = call i32 @gx_device_delete_output_file(%struct.gx_device_s* %55, i8* %arraydecay17) #7
  store i32 %call18, i32* %code, align 4, !tbaa !54
  %57 = load i32, i32* %code, align 4, !tbaa !54
  %cmp19 = icmp ne i32 %57, 0
  br i1 %cmp19, label %if.then.20, label %if.end.21

if.then.20:                                       ; preds = %if.end
  store i32 -12, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.21:                                        ; preds = %if.end
  %58 = load i32, i32* %code, align 4, !tbaa !54
  store i32 %58, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.22:                                        ; preds = %land.lhs.true, %if.then
  %59 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %call23 = call i32 @pdf_open_page(%struct.gx_device_pdf_s* %59, i32 1) #7
  store i32 %call23, i32* %code, align 4, !tbaa !54
  %60 = load i32, i32* %code, align 4, !tbaa !54
  %cmp24 = icmp slt i32 %60, 0
  br i1 %cmp24, label %if.then.25, label %if.end.26

if.then.25:                                       ; preds = %if.end.22
  %61 = load i32, i32* %code, align 4, !tbaa !54
  store i32 %61, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.26:                                        ; preds = %if.end.22
  br label %if.end.27

if.end.27:                                        ; preds = %if.end.26, %land.end
  %62 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %contents_id28 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %62, i32 0, i32 155
  %63 = load i64, i64* %contents_id28, align 8, !tbaa !114
  %cmp29 = icmp ne i64 %63, 0
  br i1 %cmp29, label %if.then.30, label %if.end.32

if.then.30:                                       ; preds = %if.end.27
  %64 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %call31 = call i32 @pdf_close_page(%struct.gx_device_pdf_s* %64, i32 1) #7
  br label %if.end.32

if.end.32:                                        ; preds = %if.then.30, %if.end.27
  %65 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %ForOPDFRead = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %65, i32 0, i32 99
  %66 = load i32, i32* %ForOPDFRead, align 4, !tbaa !121
  %tobool33 = icmp ne i32 %66, 0
  br i1 %tobool33, label %land.lhs.true.34, label %if.then.36

land.lhs.true.34:                                 ; preds = %if.end.32
  %67 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %ProduceDSC = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %67, i32 0, i32 105
  %68 = load i32, i32* %ProduceDSC, align 4, !tbaa !122
  %tobool35 = icmp ne i32 %68, 0
  br i1 %tobool35, label %if.end.40, label %if.then.36

if.then.36:                                       ; preds = %land.lhs.true.34, %if.end.32
  store i32 1, i32* %pagecount, align 4, !tbaa !54
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then.36
  %69 = load i32, i32* %pagecount, align 4, !tbaa !54
  %70 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %next_page37 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %70, i32 0, i32 153
  %71 = load i32, i32* %next_page37, align 4, !tbaa !72
  %cmp38 = icmp sle i32 %69, %71
  br i1 %cmp38, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %72 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %73 = load i32, i32* %pagecount, align 4, !tbaa !54
  %call39 = call i32 @pdf_write_page(%struct.gx_device_pdf_s* %72, i32 %73) #7
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %74 = load i32, i32* %pagecount, align 4, !tbaa !54
  %inc = add nsw i32 %74, 1
  store i32 %inc, i32* %pagecount, align 4, !tbaa !54
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end.40

if.end.40:                                        ; preds = %for.end, %land.lhs.true.34
  %75 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %PrintStatistics = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %75, i32 0, i32 95
  %76 = load i32, i32* %PrintStatistics, align 4, !tbaa !123
  %tobool41 = icmp ne i32 %76, 0
  br i1 %tobool41, label %if.then.42, label %if.end.43

if.then.42:                                       ; preds = %if.end.40
  %77 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  call void @pdf_print_resource_statistics(%struct.gx_device_pdf_s* %77) #7
  br label %if.end.43

if.end.43:                                        ; preds = %if.then.42, %if.end.40
  %78 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %call44 = call i32 @pdf_write_resource_objects(%struct.gx_device_pdf_s* %78, i32 4) #7
  store i32 %call44, i32* %code1, align 4, !tbaa !54
  %79 = load i32, i32* %code, align 4, !tbaa !54
  %cmp45 = icmp sge i32 %79, 0
  br i1 %cmp45, label %if.then.46, label %if.end.47

if.then.46:                                       ; preds = %if.end.43
  %80 = load i32, i32* %code1, align 4, !tbaa !54
  store i32 %80, i32* %code, align 4, !tbaa !54
  br label %if.end.47

if.end.47:                                        ; preds = %if.then.46, %if.end.43
  %81 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %call48 = call i32 @pdf_free_resource_objects(%struct.gx_device_pdf_s* %81, i32 4) #7
  store i32 %call48, i32* %code1, align 4, !tbaa !54
  %82 = load i32, i32* %code, align 4, !tbaa !54
  %cmp49 = icmp sge i32 %82, 0
  br i1 %cmp49, label %if.then.50, label %if.end.51

if.then.50:                                       ; preds = %if.end.47
  %83 = load i32, i32* %code1, align 4, !tbaa !54
  store i32 %83, i32* %code, align 4, !tbaa !54
  br label %if.end.51

if.end.51:                                        ; preds = %if.then.50, %if.end.47
  %84 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %call52 = call i32 @pdf_write_resource_objects(%struct.gx_device_pdf_s* %84, i32 11) #7
  store i32 %call52, i32* %code1, align 4, !tbaa !54
  %85 = load i32, i32* %code, align 4, !tbaa !54
  %cmp53 = icmp sge i32 %85, 0
  br i1 %cmp53, label %if.then.54, label %if.end.55

if.then.54:                                       ; preds = %if.end.51
  %86 = load i32, i32* %code1, align 4, !tbaa !54
  store i32 %86, i32* %code, align 4, !tbaa !54
  br label %if.end.55

if.end.55:                                        ; preds = %if.then.54, %if.end.51
  %87 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %call56 = call i32 @pdf_free_resource_objects(%struct.gx_device_pdf_s* %87, i32 11) #7
  store i32 %call56, i32* %code1, align 4, !tbaa !54
  %88 = load i32, i32* %code, align 4, !tbaa !54
  %cmp57 = icmp sge i32 %88, 0
  br i1 %cmp57, label %if.then.58, label %if.end.59

if.then.58:                                       ; preds = %if.end.55
  %89 = load i32, i32* %code1, align 4, !tbaa !54
  store i32 %89, i32* %code, align 4, !tbaa !54
  br label %if.end.59

if.end.59:                                        ; preds = %if.then.58, %if.end.55
  %90 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %call60 = call i32 @pdf_write_resource_objects(%struct.gx_device_pdf_s* %90, i32 12) #7
  store i32 %call60, i32* %code1, align 4, !tbaa !54
  %91 = load i32, i32* %code, align 4, !tbaa !54
  %cmp61 = icmp sge i32 %91, 0
  br i1 %cmp61, label %if.then.62, label %if.end.63

if.then.62:                                       ; preds = %if.end.59
  %92 = load i32, i32* %code1, align 4, !tbaa !54
  store i32 %92, i32* %code, align 4, !tbaa !54
  br label %if.end.63

if.end.63:                                        ; preds = %if.then.62, %if.end.59
  %93 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %call64 = call i32 @pdf_free_resource_objects(%struct.gx_device_pdf_s* %93, i32 12) #7
  store i32 %call64, i32* %code1, align 4, !tbaa !54
  %94 = load i32, i32* %code, align 4, !tbaa !54
  %cmp65 = icmp sge i32 %94, 0
  br i1 %cmp65, label %if.then.66, label %if.end.67

if.then.66:                                       ; preds = %if.end.63
  %95 = load i32, i32* %code1, align 4, !tbaa !54
  store i32 %95, i32* %code, align 4, !tbaa !54
  br label %if.end.67

if.end.67:                                        ; preds = %if.then.66, %if.end.63
  %96 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  call void @pdf_clean_standard_fonts(%struct.gx_device_pdf_s* %96) #7
  %97 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %call68 = call i32 @pdf_free_font_cache(%struct.gx_device_pdf_s* %97) #7
  store i32 %call68, i32* %code1, align 4, !tbaa !54
  %98 = load i32, i32* %code, align 4, !tbaa !54
  %cmp69 = icmp sge i32 %98, 0
  br i1 %cmp69, label %if.then.70, label %if.end.71

if.then.70:                                       ; preds = %if.end.67
  %99 = load i32, i32* %code1, align 4, !tbaa !54
  store i32 %99, i32* %code, align 4, !tbaa !54
  br label %if.end.71

if.end.71:                                        ; preds = %if.then.70, %if.end.67
  %100 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %call72 = call i32 @pdf_write_resource_objects(%struct.gx_device_pdf_s* %100, i32 7) #7
  store i32 %call72, i32* %code1, align 4, !tbaa !54
  %101 = load i32, i32* %code, align 4, !tbaa !54
  %cmp73 = icmp sge i32 %101, 0
  br i1 %cmp73, label %if.then.74, label %if.end.75

if.then.74:                                       ; preds = %if.end.71
  %102 = load i32, i32* %code1, align 4, !tbaa !54
  store i32 %102, i32* %code, align 4, !tbaa !54
  br label %if.end.75

if.end.75:                                        ; preds = %if.then.74, %if.end.71
  %103 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %call76 = call i32 @pdf_finish_resources(%struct.gx_device_pdf_s* %103, i32 6, i32 (%struct.gx_device_pdf_s*, %struct.pdf_resource_s*)* @pdf_convert_truetype_font) #7
  store i32 %call76, i32* %code1, align 4, !tbaa !54
  %104 = load i32, i32* %code, align 4, !tbaa !54
  %cmp77 = icmp sge i32 %104, 0
  br i1 %cmp77, label %if.then.78, label %if.end.79

if.then.78:                                       ; preds = %if.end.75
  %105 = load i32, i32* %code1, align 4, !tbaa !54
  store i32 %105, i32* %code, align 4, !tbaa !54
  br label %if.end.79

if.end.79:                                        ; preds = %if.then.78, %if.end.75
  %106 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %call80 = call i32 @pdf_finish_resources(%struct.gx_device_pdf_s* %106, i32 10, i32 (%struct.gx_device_pdf_s*, %struct.pdf_resource_s*)* @pdf_finish_FontDescriptor) #7
  store i32 %call80, i32* %code1, align 4, !tbaa !54
  %107 = load i32, i32* %code, align 4, !tbaa !54
  %cmp81 = icmp sge i32 %107, 0
  br i1 %cmp81, label %if.then.82, label %if.end.83

if.then.82:                                       ; preds = %if.end.79
  %108 = load i32, i32* %code1, align 4, !tbaa !54
  store i32 %108, i32* %code, align 4, !tbaa !54
  br label %if.end.83

if.end.83:                                        ; preds = %if.then.82, %if.end.79
  %109 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %110 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %resources = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %110, i32 0, i32 165
  %arrayidx = getelementptr inbounds [15 x %struct.pdf_resource_list_s], [15 x %struct.pdf_resource_list_s]* %resources, i32 0, i64 8
  %call84 = call i32 @write_font_resources(%struct.gx_device_pdf_s* %109, %struct.pdf_resource_list_s* %arrayidx) #7
  store i32 %call84, i32* %code1, align 4, !tbaa !54
  %111 = load i32, i32* %code, align 4, !tbaa !54
  %cmp85 = icmp sge i32 %111, 0
  br i1 %cmp85, label %if.then.86, label %if.end.87

if.then.86:                                       ; preds = %if.end.83
  %112 = load i32, i32* %code1, align 4, !tbaa !54
  store i32 %112, i32* %code, align 4, !tbaa !54
  br label %if.end.87

if.end.87:                                        ; preds = %if.then.86, %if.end.83
  %113 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %114 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %resources88 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %114, i32 0, i32 165
  %arrayidx89 = getelementptr inbounds [15 x %struct.pdf_resource_list_s], [15 x %struct.pdf_resource_list_s]* %resources88, i32 0, i64 6
  %call90 = call i32 @write_font_resources(%struct.gx_device_pdf_s* %113, %struct.pdf_resource_list_s* %arrayidx89) #7
  store i32 %call90, i32* %code1, align 4, !tbaa !54
  %115 = load i32, i32* %code, align 4, !tbaa !54
  %cmp91 = icmp sge i32 %115, 0
  br i1 %cmp91, label %if.then.92, label %if.end.93

if.then.92:                                       ; preds = %if.end.87
  %116 = load i32, i32* %code1, align 4, !tbaa !54
  store i32 %116, i32* %code, align 4, !tbaa !54
  br label %if.end.93

if.end.93:                                        ; preds = %if.then.92, %if.end.87
  %117 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %call94 = call i32 @pdf_finish_resources(%struct.gx_device_pdf_s* %117, i32 10, i32 (%struct.gx_device_pdf_s*, %struct.pdf_resource_s*)* @pdf_write_FontDescriptor) #7
  store i32 %call94, i32* %code1, align 4, !tbaa !54
  %118 = load i32, i32* %code, align 4, !tbaa !54
  %cmp95 = icmp sge i32 %118, 0
  br i1 %cmp95, label %if.then.96, label %if.end.97

if.then.96:                                       ; preds = %if.end.93
  %119 = load i32, i32* %code1, align 4, !tbaa !54
  store i32 %119, i32* %code, align 4, !tbaa !54
  br label %if.end.97

if.end.97:                                        ; preds = %if.then.96, %if.end.93
  %120 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %call98 = call i32 @pdf_write_bitmap_fonts_Encoding(%struct.gx_device_pdf_s* %120) #7
  store i32 %call98, i32* %code1, align 4, !tbaa !54
  %121 = load i32, i32* %code, align 4, !tbaa !54
  %cmp99 = icmp sge i32 %121, 0
  br i1 %cmp99, label %if.then.100, label %if.end.101

if.then.100:                                      ; preds = %if.end.97
  %122 = load i32, i32* %code1, align 4, !tbaa !54
  store i32 %122, i32* %code, align 4, !tbaa !54
  br label %if.end.101

if.end.101:                                       ; preds = %if.then.100, %if.end.97
  %123 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %call102 = call i32 @pdf_write_resource_objects(%struct.gx_device_pdf_s* %123, i32 9) #7
  store i32 %call102, i32* %code1, align 4, !tbaa !54
  %124 = load i32, i32* %code, align 4, !tbaa !54
  %cmp103 = icmp sge i32 %124, 0
  br i1 %cmp103, label %if.then.104, label %if.end.105

if.then.104:                                      ; preds = %if.end.101
  %125 = load i32, i32* %code1, align 4, !tbaa !54
  store i32 %125, i32* %code, align 4, !tbaa !54
  br label %if.end.105

if.end.105:                                       ; preds = %if.then.104, %if.end.101
  %126 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %call106 = call i32 @pdf_free_resource_objects(%struct.gx_device_pdf_s* %126, i32 9) #7
  store i32 %call106, i32* %code1, align 4, !tbaa !54
  %127 = load i32, i32* %code, align 4, !tbaa !54
  %cmp107 = icmp sge i32 %127, 0
  br i1 %cmp107, label %if.then.108, label %if.end.109

if.then.108:                                      ; preds = %if.end.105
  %128 = load i32, i32* %code1, align 4, !tbaa !54
  store i32 %128, i32* %code, align 4, !tbaa !54
  br label %if.end.109

if.end.109:                                       ; preds = %if.then.108, %if.end.105
  %129 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %ForOPDFRead110 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %129, i32 0, i32 99
  %130 = load i32, i32* %ForOPDFRead110, align 4, !tbaa !121
  %tobool111 = icmp ne i32 %130, 0
  br i1 %tobool111, label %land.lhs.true.112, label %if.then.115

land.lhs.true.112:                                ; preds = %if.end.109
  %131 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %ProduceDSC113 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %131, i32 0, i32 105
  %132 = load i32, i32* %ProduceDSC113, align 4, !tbaa !122
  %tobool114 = icmp ne i32 %132, 0
  br i1 %tobool114, label %if.end.127, label %if.then.115

if.then.115:                                      ; preds = %land.lhs.true.112, %if.end.109
  %133 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %ResourcesBeforeUsage = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %133, i32 0, i32 102
  %134 = load i32, i32* %ResourcesBeforeUsage, align 4, !tbaa !124
  %tobool116 = icmp ne i32 %134, 0
  br i1 %tobool116, label %if.then.117, label %if.end.118

if.then.117:                                      ; preds = %if.then.115
  %135 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  call void @pdf_reverse_resource_chain(%struct.gx_device_pdf_s* %135, i32 14) #7
  br label %if.end.118

if.end.118:                                       ; preds = %if.then.117, %if.then.115
  %136 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %call119 = call i32 @pdf_write_resource_objects(%struct.gx_device_pdf_s* %136, i32 14) #7
  store i32 %call119, i32* %code1, align 4, !tbaa !54
  %137 = load i32, i32* %code, align 4, !tbaa !54
  %cmp120 = icmp sge i32 %137, 0
  br i1 %cmp120, label %if.then.121, label %if.end.122

if.then.121:                                      ; preds = %if.end.118
  %138 = load i32, i32* %code1, align 4, !tbaa !54
  store i32 %138, i32* %code, align 4, !tbaa !54
  br label %if.end.122

if.end.122:                                       ; preds = %if.then.121, %if.end.118
  %139 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %call123 = call i32 @pdf_free_resource_objects(%struct.gx_device_pdf_s* %139, i32 14) #7
  store i32 %call123, i32* %code1, align 4, !tbaa !54
  %140 = load i32, i32* %code, align 4, !tbaa !54
  %cmp124 = icmp sge i32 %140, 0
  br i1 %cmp124, label %if.then.125, label %if.end.126

if.then.125:                                      ; preds = %if.end.122
  %141 = load i32, i32* %code1, align 4, !tbaa !54
  store i32 %141, i32* %code, align 4, !tbaa !54
  br label %if.end.126

if.end.126:                                       ; preds = %if.then.125, %if.end.122
  br label %if.end.127

if.end.127:                                       ; preds = %if.end.126, %land.lhs.true.112
  %142 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %call128 = call i32 @pdf_free_resource_objects(%struct.gx_device_pdf_s* %142, i32 5) #7
  store i32 %call128, i32* %code1, align 4, !tbaa !54
  %143 = load i32, i32* %code, align 4, !tbaa !54
  %cmp129 = icmp sge i32 %143, 0
  br i1 %cmp129, label %if.then.130, label %if.end.131

if.then.130:                                      ; preds = %if.end.127
  %144 = load i32, i32* %code1, align 4, !tbaa !54
  store i32 %144, i32* %code, align 4, !tbaa !54
  br label %if.end.131

if.end.131:                                       ; preds = %if.then.130, %if.end.127
  %145 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %ForOPDFRead132 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %145, i32 0, i32 99
  %146 = load i32, i32* %ForOPDFRead132, align 4, !tbaa !121
  %tobool133 = icmp ne i32 %146, 0
  br i1 %tobool133, label %land.lhs.true.134, label %if.then.137

land.lhs.true.134:                                ; preds = %if.end.131
  %147 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %ProduceDSC135 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %147, i32 0, i32 105
  %148 = load i32, i32* %ProduceDSC135, align 4, !tbaa !122
  %tobool136 = icmp ne i32 %148, 0
  br i1 %tobool136, label %if.else.349, label %if.then.137

if.then.137:                                      ; preds = %land.lhs.true.134, %if.end.131
  %149 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %150 = load i64, i64* %Pages_id, align 8, !tbaa !107
  %call138 = call i64 @pdf_open_obj(%struct.gx_device_pdf_s* %149, i64 %150, i32 28) #7
  %151 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %152 = load i64, i64* %Pages_id, align 8, !tbaa !107
  %call139 = call i32 @pdf_record_usage(%struct.gx_device_pdf_s* %151, i64 %152, i32 -3) #7
  %153 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %strm = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %153, i32 0, i32 47
  %154 = load %struct.stream_s*, %struct.stream_s** %strm, align 8, !tbaa !56
  store %struct.stream_s* %154, %struct.stream_s** %s, align 8, !tbaa !1
  %155 = load %struct.stream_s*, %struct.stream_s** %s, align 8, !tbaa !1
  %call140 = call i32 @stream_puts(%struct.stream_s* %155, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.51, i32 0, i32 0)) #7
  %156 = load i32, i32* %partial_page, align 4, !tbaa !54
  %tobool141 = icmp ne i32 %156, 0
  br i1 %tobool141, label %if.then.142, label %if.end.144

if.then.142:                                      ; preds = %if.then.137
  %157 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %next_page143 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %157, i32 0, i32 153
  %158 = load i32, i32* %next_page143, align 4, !tbaa !72
  %dec = add nsw i32 %158, -1
  store i32 %dec, i32* %next_page143, align 4, !tbaa !72
  br label %if.end.144

if.end.144:                                       ; preds = %if.then.142, %if.then.137
  %159 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %159) #2
  store i32 0, i32* %i, align 4, !tbaa !54
  br label %for.cond.145

for.cond.145:                                     ; preds = %for.inc.152, %if.end.144
  %160 = load i32, i32* %i, align 4, !tbaa !54
  %161 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %next_page146 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %161, i32 0, i32 153
  %162 = load i32, i32* %next_page146, align 4, !tbaa !72
  %cmp147 = icmp slt i32 %160, %162
  br i1 %cmp147, label %for.body.148, label %for.end.154

for.body.148:                                     ; preds = %for.cond.145
  %163 = load %struct.stream_s*, %struct.stream_s** %s, align 8, !tbaa !1
  %164 = load i32, i32* %i, align 4, !tbaa !54
  %idxprom = sext i32 %164 to i64
  %165 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %pages = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %165, i32 0, i32 162
  %166 = load %struct.pdf_page_s*, %struct.pdf_page_s** %pages, align 8, !tbaa !77
  %arrayidx149 = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %166, i64 %idxprom
  %Page = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %arrayidx149, i32 0, i32 0
  %167 = load %struct.cos_dict_s*, %struct.cos_dict_s** %Page, align 8, !tbaa !125
  %id150 = getelementptr inbounds %struct.cos_dict_s, %struct.cos_dict_s* %167, i32 0, i32 1
  %168 = load i64, i64* %id150, align 8, !tbaa !109
  %call151 = call i8* @pprintld1(%struct.stream_s* %163, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.52, i32 0, i32 0), i64 %168) #7
  br label %for.inc.152

for.inc.152:                                      ; preds = %for.body.148
  %169 = load i32, i32* %i, align 4, !tbaa !54
  %inc153 = add nsw i32 %169, 1
  store i32 %inc153, i32* %i, align 4, !tbaa !54
  br label %for.cond.145

for.end.154:                                      ; preds = %for.cond.145
  %170 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %170) #2
  %171 = load %struct.stream_s*, %struct.stream_s** %s, align 8, !tbaa !1
  %172 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %next_page155 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %172, i32 0, i32 153
  %173 = load i32, i32* %next_page155, align 4, !tbaa !72
  %call156 = call i8* @pprintd1(%struct.stream_s* %171, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.53, i32 0, i32 0), i32 %173) #7
  %174 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %doc_dsc_info = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %174, i32 0, i32 130
  %orientation = getelementptr inbounds %struct.pdf_page_dsc_info_s, %struct.pdf_page_dsc_info_s* %doc_dsc_info, i32 0, i32 0
  store i32 -1, i32* %orientation, align 4, !tbaa !127
  %175 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %doc_dsc_info157 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %175, i32 0, i32 130
  %viewing_orientation = getelementptr inbounds %struct.pdf_page_dsc_info_s, %struct.pdf_page_dsc_info_s* %doc_dsc_info157, i32 0, i32 1
  store i32 -1, i32* %viewing_orientation, align 4, !tbaa !128
  %176 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %text_rotation = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %176, i32 0, i32 161
  %call158 = call i32 @pdf_dominant_rotation(%struct.pdf_text_rotation_s* %text_rotation) #7
  %177 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %text_rotation159 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %177, i32 0, i32 161
  %Rotate = getelementptr inbounds %struct.pdf_text_rotation_s, %struct.pdf_text_rotation_s* %text_rotation159, i32 0, i32 1
  store i32 %call158, i32* %Rotate, align 4, !tbaa !129
  %178 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  call void @pdf_print_orientation(%struct.gx_device_pdf_s* %178, %struct.pdf_page_s* null) #7
  %179 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %Pages160 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %179, i32 0, i32 151
  %180 = load %struct.cos_dict_s*, %struct.cos_dict_s** %Pages160, align 8, !tbaa !113
  %181 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %call161 = call i32 @cos_dict_elements_write(%struct.cos_dict_s* %180, %struct.gx_device_pdf_s* %181) #7
  %182 = load %struct.stream_s*, %struct.stream_s** %s, align 8, !tbaa !1
  %call162 = call i32 @stream_puts(%struct.stream_s* %182, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.54, i32 0, i32 0)) #7
  %183 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %call163 = call i32 @pdf_end_obj(%struct.gx_device_pdf_s* %183, i32 28) #7
  %184 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %outlines_id = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %184, i32 0, i32 152
  %185 = load i64, i64* %outlines_id, align 8, !tbaa !71
  %cmp164 = icmp ne i64 %185, 0
  br i1 %cmp164, label %if.then.165, label %if.end.187

if.then.165:                                      ; preds = %for.end.154
  %186 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %187 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %outlines_id166 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %187, i32 0, i32 152
  %188 = load i64, i64* %outlines_id166, align 8, !tbaa !71
  %call167 = call i32 @pdf_record_usage(%struct.gx_device_pdf_s* %186, i64 %188, i32 -3) #7
  br label %while.cond

while.cond:                                       ; preds = %if.end.172, %if.then.165
  %189 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %outline_depth = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %189, i32 0, i32 172
  %190 = load i32, i32* %outline_depth, align 4, !tbaa !87
  %cmp168 = icmp sgt i32 %190, 0
  br i1 %cmp168, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %191 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %call169 = call i32 @pdfmark_close_outline(%struct.gx_device_pdf_s* %191) #7
  store i32 %call169, i32* %code1, align 4, !tbaa !54
  %192 = load i32, i32* %code, align 4, !tbaa !54
  %cmp170 = icmp sge i32 %192, 0
  br i1 %cmp170, label %if.then.171, label %if.end.172

if.then.171:                                      ; preds = %while.body
  %193 = load i32, i32* %code1, align 4, !tbaa !54
  store i32 %193, i32* %code, align 4, !tbaa !54
  br label %if.end.172

if.end.172:                                       ; preds = %if.then.171, %while.body
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %194 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %call173 = call i32 @pdfmark_close_outline(%struct.gx_device_pdf_s* %194) #7
  store i32 %call173, i32* %code, align 4, !tbaa !54
  %195 = load i32, i32* %code, align 4, !tbaa !54
  %cmp174 = icmp sge i32 %195, 0
  br i1 %cmp174, label %if.then.175, label %if.end.176

if.then.175:                                      ; preds = %while.end
  %196 = load i32, i32* %code1, align 4, !tbaa !54
  store i32 %196, i32* %code, align 4, !tbaa !54
  br label %if.end.176

if.end.176:                                       ; preds = %if.then.175, %while.end
  %197 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %198 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %outlines_id177 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %198, i32 0, i32 152
  %199 = load i64, i64* %outlines_id177, align 8, !tbaa !71
  %call178 = call i64 @pdf_open_obj(%struct.gx_device_pdf_s* %197, i64 %199, i32 21) #7
  %200 = load %struct.stream_s*, %struct.stream_s** %s, align 8, !tbaa !1
  %201 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %outlines_open = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %201, i32 0, i32 175
  %202 = load i32, i32* %outlines_open, align 4, !tbaa !89
  %call179 = call i8* @pprintd1(%struct.stream_s* %200, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.55, i32 0, i32 0), i32 %202) #7
  %203 = load %struct.stream_s*, %struct.stream_s** %s, align 8, !tbaa !1
  %204 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %outline_levels = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %204, i32 0, i32 171
  %205 = load %struct.pdf_outline_level_s*, %struct.pdf_outline_level_s** %outline_levels, align 8, !tbaa !79
  %arrayidx180 = getelementptr inbounds %struct.pdf_outline_level_s, %struct.pdf_outline_level_s* %205, i64 0
  %first = getelementptr inbounds %struct.pdf_outline_level_s, %struct.pdf_outline_level_s* %arrayidx180, i32 0, i32 0
  %id181 = getelementptr inbounds %struct.pdf_outline_node_s, %struct.pdf_outline_node_s* %first, i32 0, i32 0
  %206 = load i64, i64* %id181, align 8, !tbaa !81
  %207 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %outline_levels182 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %207, i32 0, i32 171
  %208 = load %struct.pdf_outline_level_s*, %struct.pdf_outline_level_s** %outline_levels182, align 8, !tbaa !79
  %arrayidx183 = getelementptr inbounds %struct.pdf_outline_level_s, %struct.pdf_outline_level_s* %208, i64 0
  %last = getelementptr inbounds %struct.pdf_outline_level_s, %struct.pdf_outline_level_s* %arrayidx183, i32 0, i32 1
  %id184 = getelementptr inbounds %struct.pdf_outline_node_s, %struct.pdf_outline_node_s* %last, i32 0, i32 0
  %209 = load i64, i64* %id184, align 8, !tbaa !130
  %call185 = call i8* @pprintld2(%struct.stream_s* %203, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.56, i32 0, i32 0), i64 %206, i64 %209) #7
  %210 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %call186 = call i32 @pdf_end_obj(%struct.gx_device_pdf_s* %210, i32 21) #7
  br label %if.end.187

if.end.187:                                       ; preds = %if.end.176, %for.end.154
  %211 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %articles = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %211, i32 0, i32 176
  %212 = load %struct.pdf_article_s*, %struct.pdf_article_s** %articles, align 8, !tbaa !90
  %cmp188 = icmp ne %struct.pdf_article_s* %212, null
  br i1 %cmp188, label %if.then.189, label %if.end.197

if.then.189:                                      ; preds = %if.end.187
  %213 = bitcast %struct.pdf_article_s** %part to i8*
  call void @llvm.lifetime.start(i64 8, i8* %213) #2
  %214 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %articles190 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %214, i32 0, i32 176
  %215 = load %struct.pdf_article_s*, %struct.pdf_article_s** %articles190, align 8, !tbaa !90
  store %struct.pdf_article_s* %215, %struct.pdf_article_s** %part, align 8, !tbaa !1
  br label %for.cond.191

for.cond.191:                                     ; preds = %for.inc.195, %if.then.189
  %216 = load %struct.pdf_article_s*, %struct.pdf_article_s** %part, align 8, !tbaa !1
  %cmp192 = icmp ne %struct.pdf_article_s* %216, null
  br i1 %cmp192, label %for.body.193, label %for.end.196

for.body.193:                                     ; preds = %for.cond.191
  %217 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %218 = load %struct.pdf_article_s*, %struct.pdf_article_s** %part, align 8, !tbaa !1
  %call194 = call i32 @pdfmark_write_article(%struct.gx_device_pdf_s* %217, %struct.pdf_article_s* %218) #7
  br label %for.inc.195

for.inc.195:                                      ; preds = %for.body.193
  %219 = load %struct.pdf_article_s*, %struct.pdf_article_s** %part, align 8, !tbaa !1
  %next = getelementptr inbounds %struct.pdf_article_s, %struct.pdf_article_s* %219, i32 0, i32 0
  %220 = load %struct.pdf_article_s*, %struct.pdf_article_s** %next, align 8, !tbaa !131
  store %struct.pdf_article_s* %220, %struct.pdf_article_s** %part, align 8, !tbaa !1
  br label %for.cond.191

for.end.196:                                      ; preds = %for.cond.191
  %221 = bitcast %struct.pdf_article_s** %part to i8*
  call void @llvm.lifetime.end(i64 8, i8* %221) #2
  br label %if.end.197

if.end.197:                                       ; preds = %for.end.196, %if.end.187
  %222 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %CompatibilityLevel = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %222, i32 0, i32 75
  %223 = load double, double* %CompatibilityLevel, align 8, !tbaa !134
  %cmp198 = fcmp olt double %223, 1.200000e+00
  br i1 %cmp198, label %if.then.199, label %if.else

if.then.199:                                      ; preds = %if.end.197
  %224 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %Dests = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %224, i32 0, i32 177
  %225 = load %struct.cos_dict_s*, %struct.cos_dict_s** %Dests, align 8, !tbaa !91
  %tobool200 = icmp ne %struct.cos_dict_s* %225, null
  br i1 %tobool200, label %if.then.201, label %if.end.207

if.then.201:                                      ; preds = %if.then.199
  %226 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %227 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %Dests202 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %227, i32 0, i32 177
  %228 = load %struct.cos_dict_s*, %struct.cos_dict_s** %Dests202, align 8, !tbaa !91
  %id203 = getelementptr inbounds %struct.cos_dict_s, %struct.cos_dict_s* %228, i32 0, i32 1
  %229 = load i64, i64* %id203, align 8, !tbaa !109
  %call204 = call i32 @pdf_record_usage(%struct.gx_device_pdf_s* %226, i64 %229, i32 -3) #7
  %230 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %Dests205 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %230, i32 0, i32 177
  %231 = load %struct.cos_dict_s*, %struct.cos_dict_s** %Dests205, align 8, !tbaa !91
  %cos_procs = getelementptr inbounds %struct.cos_dict_s, %struct.cos_dict_s* %231, i32 0, i32 0
  %232 = bitcast %struct.cos_object_procs_s** %cos_procs to %struct.cos_object_s*
  %233 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %call206 = call i32 @cos_write_object(%struct.cos_object_s* %232, %struct.gx_device_pdf_s* %233, i32 23) #7
  br label %if.end.207

if.end.207:                                       ; preds = %if.then.201, %if.then.199
  br label %if.end.225

if.else:                                          ; preds = %if.end.197
  %234 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %Dests208 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %234, i32 0, i32 177
  %235 = load %struct.cos_dict_s*, %struct.cos_dict_s** %Dests208, align 8, !tbaa !91
  %tobool209 = icmp ne %struct.cos_dict_s* %235, null
  br i1 %tobool209, label %if.then.210, label %if.end.216

if.then.210:                                      ; preds = %if.else
  %236 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %237 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %Dests211 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %237, i32 0, i32 177
  %238 = load %struct.cos_dict_s*, %struct.cos_dict_s** %Dests211, align 8, !tbaa !91
  %id212 = getelementptr inbounds %struct.cos_dict_s, %struct.cos_dict_s* %238, i32 0, i32 1
  %239 = load i64, i64* %id212, align 8, !tbaa !109
  %call213 = call i32 @pdf_record_usage(%struct.gx_device_pdf_s* %236, i64 %239, i32 -3) #7
  %240 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %Dests214 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %240, i32 0, i32 177
  %241 = load %struct.cos_dict_s*, %struct.cos_dict_s** %Dests214, align 8, !tbaa !91
  %242 = bitcast %struct.cos_dict_s* %241 to %struct.cos_object_s*
  %243 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %call215 = call i32 @cos_write_dict_as_ordered_array(%struct.cos_object_s* %242, %struct.gx_device_pdf_s* %243, i32 23) #7
  br label %if.end.216

if.end.216:                                       ; preds = %if.then.210, %if.else
  %244 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %EmbeddedFiles = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %244, i32 0, i32 178
  %245 = load %struct.cos_dict_s*, %struct.cos_dict_s** %EmbeddedFiles, align 8, !tbaa !92
  %tobool217 = icmp ne %struct.cos_dict_s* %245, null
  br i1 %tobool217, label %if.then.218, label %if.end.224

if.then.218:                                      ; preds = %if.end.216
  %246 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %247 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %EmbeddedFiles219 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %247, i32 0, i32 178
  %248 = load %struct.cos_dict_s*, %struct.cos_dict_s** %EmbeddedFiles219, align 8, !tbaa !92
  %id220 = getelementptr inbounds %struct.cos_dict_s, %struct.cos_dict_s* %248, i32 0, i32 1
  %249 = load i64, i64* %id220, align 8, !tbaa !109
  %call221 = call i32 @pdf_record_usage(%struct.gx_device_pdf_s* %246, i64 %249, i32 -3) #7
  %250 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %EmbeddedFiles222 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %250, i32 0, i32 178
  %251 = load %struct.cos_dict_s*, %struct.cos_dict_s** %EmbeddedFiles222, align 8, !tbaa !92
  %252 = bitcast %struct.cos_dict_s* %251 to %struct.cos_object_s*
  %253 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %call223 = call i32 @cos_write_dict_as_ordered_array(%struct.cos_object_s* %252, %struct.gx_device_pdf_s* %253, i32 32) #7
  br label %if.end.224

if.end.224:                                       ; preds = %if.then.218, %if.end.216
  br label %if.end.225

if.end.225:                                       ; preds = %if.end.224, %if.end.207
  %254 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %call226 = call i32 @pdfmark_end_pagelabels(%struct.gx_device_pdf_s* %254) #7
  %255 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %PageLabels = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %255, i32 0, i32 188
  %256 = load %struct.cos_array_s*, %struct.cos_array_s** %PageLabels, align 8, !tbaa !93
  %tobool227 = icmp ne %struct.cos_array_s* %256, null
  br i1 %tobool227, label %if.then.228, label %if.end.235

if.then.228:                                      ; preds = %if.end.225
  %257 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %258 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %PageLabels229 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %258, i32 0, i32 188
  %259 = load %struct.cos_array_s*, %struct.cos_array_s** %PageLabels229, align 8, !tbaa !93
  %id230 = getelementptr inbounds %struct.cos_array_s, %struct.cos_array_s* %259, i32 0, i32 1
  %260 = load i64, i64* %id230, align 8, !tbaa !135
  %call231 = call i32 @pdf_record_usage(%struct.gx_device_pdf_s* %257, i64 %260, i32 -3) #7
  %261 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %PageLabels232 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %261, i32 0, i32 188
  %262 = load %struct.cos_array_s*, %struct.cos_array_s** %PageLabels232, align 8, !tbaa !93
  %cos_procs233 = getelementptr inbounds %struct.cos_array_s, %struct.cos_array_s* %262, i32 0, i32 0
  %263 = bitcast %struct.cos_object_procs_s** %cos_procs233 to %struct.cos_object_s*
  %264 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %call234 = call i32 @cos_write_object(%struct.cos_object_s* %263, %struct.gx_device_pdf_s* %264, i32 24) #7
  br label %if.end.235

if.end.235:                                       ; preds = %if.then.228, %if.end.225
  %265 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %call236 = call i32 @pdf_document_metadata(%struct.gx_device_pdf_s* %265) #7
  store i32 %call236, i32* %code1, align 4, !tbaa !54
  %266 = load i32, i32* %code, align 4, !tbaa !54
  %cmp237 = icmp sge i32 %266, 0
  br i1 %cmp237, label %if.then.238, label %if.end.239

if.then.238:                                      ; preds = %if.end.235
  %267 = load i32, i32* %code1, align 4, !tbaa !54
  store i32 %267, i32* %code, align 4, !tbaa !54
  br label %if.end.239

if.end.239:                                       ; preds = %if.then.238, %if.end.235
  %268 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %articles240 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %268, i32 0, i32 176
  %269 = load %struct.pdf_article_s*, %struct.pdf_article_s** %articles240, align 8, !tbaa !90
  %cmp241 = icmp ne %struct.pdf_article_s* %269, null
  br i1 %cmp241, label %if.then.242, label %if.end.261

if.then.242:                                      ; preds = %if.end.239
  %270 = bitcast %struct.pdf_article_s** %part243 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %270) #2
  %271 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %call244 = call i64 @pdf_begin_obj(%struct.gx_device_pdf_s* %271, i32 25) #7
  store i64 %call244, i64* %Threads_id, align 8, !tbaa !107
  %272 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %273 = load i64, i64* %Threads_id, align 8, !tbaa !107
  %call245 = call i32 @pdf_record_usage(%struct.gx_device_pdf_s* %272, i64 %273, i32 -3) #7
  %274 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %strm246 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %274, i32 0, i32 47
  %275 = load %struct.stream_s*, %struct.stream_s** %strm246, align 8, !tbaa !56
  store %struct.stream_s* %275, %struct.stream_s** %s, align 8, !tbaa !1
  %276 = load %struct.stream_s*, %struct.stream_s** %s, align 8, !tbaa !1
  %call247 = call i32 @stream_puts(%struct.stream_s* %276, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.57, i32 0, i32 0)) #7
  br label %while.cond.248

while.cond.248:                                   ; preds = %while.body.251, %if.then.242
  %277 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %articles249 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %277, i32 0, i32 176
  %278 = load %struct.pdf_article_s*, %struct.pdf_article_s** %articles249, align 8, !tbaa !90
  store %struct.pdf_article_s* %278, %struct.pdf_article_s** %part243, align 8, !tbaa !1
  %cmp250 = icmp ne %struct.pdf_article_s* %278, null
  br i1 %cmp250, label %while.body.251, label %while.end.258

while.body.251:                                   ; preds = %while.cond.248
  %279 = load %struct.pdf_article_s*, %struct.pdf_article_s** %part243, align 8, !tbaa !1
  %next252 = getelementptr inbounds %struct.pdf_article_s, %struct.pdf_article_s* %279, i32 0, i32 0
  %280 = load %struct.pdf_article_s*, %struct.pdf_article_s** %next252, align 8, !tbaa !131
  %281 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %articles253 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %281, i32 0, i32 176
  store %struct.pdf_article_s* %280, %struct.pdf_article_s** %articles253, align 8, !tbaa !90
  %282 = load %struct.stream_s*, %struct.stream_s** %s, align 8, !tbaa !1
  %283 = load %struct.pdf_article_s*, %struct.pdf_article_s** %part243, align 8, !tbaa !1
  %contents = getelementptr inbounds %struct.pdf_article_s, %struct.pdf_article_s* %283, i32 0, i32 1
  %284 = load %struct.cos_dict_s*, %struct.cos_dict_s** %contents, align 8, !tbaa !137
  %id254 = getelementptr inbounds %struct.cos_dict_s, %struct.cos_dict_s* %284, i32 0, i32 1
  %285 = load i64, i64* %id254, align 8, !tbaa !109
  %call255 = call i8* @pprintld1(%struct.stream_s* %282, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.52, i32 0, i32 0), i64 %285) #7
  %286 = load %struct.pdf_article_s*, %struct.pdf_article_s** %part243, align 8, !tbaa !1
  %contents256 = getelementptr inbounds %struct.pdf_article_s, %struct.pdf_article_s* %286, i32 0, i32 1
  %287 = load %struct.cos_dict_s*, %struct.cos_dict_s** %contents256, align 8, !tbaa !137
  %cos_procs257 = getelementptr inbounds %struct.cos_dict_s, %struct.cos_dict_s* %287, i32 0, i32 0
  %288 = bitcast %struct.cos_object_procs_s** %cos_procs257 to %struct.cos_object_s*
  call void @cos_free(%struct.cos_object_s* %288, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.58, i32 0, i32 0)) #7
  %289 = load %struct.gs_memory_s*, %struct.gs_memory_s** %mem, align 8, !tbaa !1
  %procs = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %289, i32 0, i32 1
  %free_object = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs, i32 0, i32 2
  %290 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %free_object, align 8, !tbaa !138
  %291 = load %struct.gs_memory_s*, %struct.gs_memory_s** %mem, align 8, !tbaa !1
  %292 = load %struct.pdf_article_s*, %struct.pdf_article_s** %part243, align 8, !tbaa !1
  %293 = bitcast %struct.pdf_article_s* %292 to i8*
  call void %290(%struct.gs_memory_s* %291, i8* %293, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.59, i32 0, i32 0)) #7
  br label %while.cond.248

while.end.258:                                    ; preds = %while.cond.248
  %294 = load %struct.stream_s*, %struct.stream_s** %s, align 8, !tbaa !1
  %call259 = call i32 @stream_puts(%struct.stream_s* %294, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.60, i32 0, i32 0)) #7
  %295 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %call260 = call i32 @pdf_end_obj(%struct.gx_device_pdf_s* %295, i32 25) #7
  %296 = bitcast %struct.pdf_article_s** %part243 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %296) #2
  br label %if.end.261

if.end.261:                                       ; preds = %while.end.258, %if.end.239
  %297 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %298 = load i64, i64* %Catalog_id, align 8, !tbaa !107
  %call262 = call i64 @pdf_open_obj(%struct.gx_device_pdf_s* %297, i64 %298, i32 26) #7
  %299 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %300 = load i64, i64* %Catalog_id, align 8, !tbaa !107
  %call263 = call i32 @pdf_record_usage(%struct.gx_device_pdf_s* %299, i64 %300, i32 -2) #7
  %301 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %strm264 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %301, i32 0, i32 47
  %302 = load %struct.stream_s*, %struct.stream_s** %strm264, align 8, !tbaa !56
  store %struct.stream_s* %302, %struct.stream_s** %s, align 8, !tbaa !1
  %303 = load %struct.stream_s*, %struct.stream_s** %s, align 8, !tbaa !1
  %call265 = call i32 @stream_puts(%struct.stream_s* %303, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.61, i32 0, i32 0)) #7
  %304 = load %struct.stream_s*, %struct.stream_s** %s, align 8, !tbaa !1
  %305 = load i64, i64* %Pages_id, align 8, !tbaa !107
  %call266 = call i8* @pprintld1(%struct.stream_s* %304, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.62, i32 0, i32 0), i64 %305) #7
  %306 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %outlines_id267 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %306, i32 0, i32 152
  %307 = load i64, i64* %outlines_id267, align 8, !tbaa !71
  %cmp268 = icmp ne i64 %307, 0
  br i1 %cmp268, label %if.then.269, label %if.end.272

if.then.269:                                      ; preds = %if.end.261
  %308 = load %struct.stream_s*, %struct.stream_s** %s, align 8, !tbaa !1
  %309 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %outlines_id270 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %309, i32 0, i32 152
  %310 = load i64, i64* %outlines_id270, align 8, !tbaa !71
  %call271 = call i8* @pprintld1(%struct.stream_s* %308, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.63, i32 0, i32 0), i64 %310) #7
  br label %if.end.272

if.end.272:                                       ; preds = %if.then.269, %if.end.261
  %311 = load i64, i64* %Threads_id, align 8, !tbaa !107
  %tobool273 = icmp ne i64 %311, 0
  br i1 %tobool273, label %if.then.274, label %if.end.277

if.then.274:                                      ; preds = %if.end.272
  %312 = load %struct.stream_s*, %struct.stream_s** %s, align 8, !tbaa !1
  %313 = load i64, i64* %Threads_id, align 8, !tbaa !107
  %call275 = call i8* @pprintld1(%struct.stream_s* %312, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.64, i32 0, i32 0), i64 %313) #7
  %314 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %315 = load i64, i64* %Threads_id, align 8, !tbaa !107
  %call276 = call i32 @pdf_record_usage(%struct.gx_device_pdf_s* %314, i64 %315, i32 -2) #7
  br label %if.end.277

if.end.277:                                       ; preds = %if.then.274, %if.end.272
  %316 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %CompatibilityLevel278 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %316, i32 0, i32 75
  %317 = load double, double* %CompatibilityLevel278, align 8, !tbaa !134
  %cmp279 = fcmp olt double %317, 1.200000e+00
  br i1 %cmp279, label %if.then.280, label %if.else.288

if.then.280:                                      ; preds = %if.end.277
  %318 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %Dests281 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %318, i32 0, i32 177
  %319 = load %struct.cos_dict_s*, %struct.cos_dict_s** %Dests281, align 8, !tbaa !91
  %tobool282 = icmp ne %struct.cos_dict_s* %319, null
  br i1 %tobool282, label %if.then.283, label %if.end.287

if.then.283:                                      ; preds = %if.then.280
  %320 = load %struct.stream_s*, %struct.stream_s** %s, align 8, !tbaa !1
  %321 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %Dests284 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %321, i32 0, i32 177
  %322 = load %struct.cos_dict_s*, %struct.cos_dict_s** %Dests284, align 8, !tbaa !91
  %id285 = getelementptr inbounds %struct.cos_dict_s, %struct.cos_dict_s* %322, i32 0, i32 1
  %323 = load i64, i64* %id285, align 8, !tbaa !109
  %call286 = call i8* @pprintld1(%struct.stream_s* %320, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.65, i32 0, i32 0), i64 %323) #7
  br label %if.end.287

if.end.287:                                       ; preds = %if.then.283, %if.then.280
  br label %if.end.311

if.else.288:                                      ; preds = %if.end.277
  %324 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %Dests289 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %324, i32 0, i32 177
  %325 = load %struct.cos_dict_s*, %struct.cos_dict_s** %Dests289, align 8, !tbaa !91
  %tobool290 = icmp ne %struct.cos_dict_s* %325, null
  br i1 %tobool290, label %if.then.293, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.else.288
  %326 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %EmbeddedFiles291 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %326, i32 0, i32 178
  %327 = load %struct.cos_dict_s*, %struct.cos_dict_s** %EmbeddedFiles291, align 8, !tbaa !92
  %tobool292 = icmp ne %struct.cos_dict_s* %327, null
  br i1 %tobool292, label %if.then.293, label %if.end.310

if.then.293:                                      ; preds = %lor.lhs.false, %if.else.288
  %328 = load %struct.stream_s*, %struct.stream_s** %s, align 8, !tbaa !1
  %call294 = call i32 @stream_puts(%struct.stream_s* %328, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.66, i32 0, i32 0)) #7
  %329 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %Dests295 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %329, i32 0, i32 177
  %330 = load %struct.cos_dict_s*, %struct.cos_dict_s** %Dests295, align 8, !tbaa !91
  %tobool296 = icmp ne %struct.cos_dict_s* %330, null
  br i1 %tobool296, label %if.then.297, label %if.end.301

if.then.297:                                      ; preds = %if.then.293
  %331 = load %struct.stream_s*, %struct.stream_s** %s, align 8, !tbaa !1
  %332 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %Dests298 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %332, i32 0, i32 177
  %333 = load %struct.cos_dict_s*, %struct.cos_dict_s** %Dests298, align 8, !tbaa !91
  %id299 = getelementptr inbounds %struct.cos_dict_s, %struct.cos_dict_s* %333, i32 0, i32 1
  %334 = load i64, i64* %id299, align 8, !tbaa !109
  %call300 = call i8* @pprintld1(%struct.stream_s* %331, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.67, i32 0, i32 0), i64 %334) #7
  br label %if.end.301

if.end.301:                                       ; preds = %if.then.297, %if.then.293
  %335 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %EmbeddedFiles302 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %335, i32 0, i32 178
  %336 = load %struct.cos_dict_s*, %struct.cos_dict_s** %EmbeddedFiles302, align 8, !tbaa !92
  %tobool303 = icmp ne %struct.cos_dict_s* %336, null
  br i1 %tobool303, label %if.then.304, label %if.end.308

if.then.304:                                      ; preds = %if.end.301
  %337 = load %struct.stream_s*, %struct.stream_s** %s, align 8, !tbaa !1
  %338 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %EmbeddedFiles305 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %338, i32 0, i32 178
  %339 = load %struct.cos_dict_s*, %struct.cos_dict_s** %EmbeddedFiles305, align 8, !tbaa !92
  %id306 = getelementptr inbounds %struct.cos_dict_s, %struct.cos_dict_s* %339, i32 0, i32 1
  %340 = load i64, i64* %id306, align 8, !tbaa !109
  %call307 = call i8* @pprintld1(%struct.stream_s* %337, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.68, i32 0, i32 0), i64 %340) #7
  br label %if.end.308

if.end.308:                                       ; preds = %if.then.304, %if.end.301
  %341 = load %struct.stream_s*, %struct.stream_s** %s, align 8, !tbaa !1
  %call309 = call i32 @stream_puts(%struct.stream_s* %341, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.54, i32 0, i32 0)) #7
  br label %if.end.310

if.end.310:                                       ; preds = %if.end.308, %lor.lhs.false
  br label %if.end.311

if.end.311:                                       ; preds = %if.end.310, %if.end.287
  %342 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %PageLabels312 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %342, i32 0, i32 188
  %343 = load %struct.cos_array_s*, %struct.cos_array_s** %PageLabels312, align 8, !tbaa !93
  %tobool313 = icmp ne %struct.cos_array_s* %343, null
  br i1 %tobool313, label %if.then.314, label %if.end.318

if.then.314:                                      ; preds = %if.end.311
  %344 = load %struct.stream_s*, %struct.stream_s** %s, align 8, !tbaa !1
  %345 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %PageLabels315 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %345, i32 0, i32 188
  %346 = load %struct.cos_array_s*, %struct.cos_array_s** %PageLabels315, align 8, !tbaa !93
  %id316 = getelementptr inbounds %struct.cos_array_s, %struct.cos_array_s* %346, i32 0, i32 1
  %347 = load i64, i64* %id316, align 8, !tbaa !135
  %call317 = call i8* @pprintld1(%struct.stream_s* %344, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.69, i32 0, i32 0), i64 %347) #7
  br label %if.end.318

if.end.318:                                       ; preds = %if.then.314, %if.end.311
  %348 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %Catalog319 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %348, i32 0, i32 149
  %349 = load %struct.cos_dict_s*, %struct.cos_dict_s** %Catalog319, align 8, !tbaa !108
  %350 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %call320 = call i32 @cos_dict_elements_write(%struct.cos_dict_s* %349, %struct.gx_device_pdf_s* %350) #7
  %351 = load %struct.stream_s*, %struct.stream_s** %s, align 8, !tbaa !1
  %call321 = call i32 @stream_puts(%struct.stream_s* %351, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.54, i32 0, i32 0)) #7
  %352 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %call322 = call i32 @pdf_end_obj(%struct.gx_device_pdf_s* %352, i32 26) #7
  %353 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %Dests323 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %353, i32 0, i32 177
  %354 = load %struct.cos_dict_s*, %struct.cos_dict_s** %Dests323, align 8, !tbaa !91
  %tobool324 = icmp ne %struct.cos_dict_s* %354, null
  br i1 %tobool324, label %if.then.325, label %if.end.329

if.then.325:                                      ; preds = %if.end.318
  %355 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %Dests326 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %355, i32 0, i32 177
  %356 = load %struct.cos_dict_s*, %struct.cos_dict_s** %Dests326, align 8, !tbaa !91
  %cos_procs327 = getelementptr inbounds %struct.cos_dict_s, %struct.cos_dict_s* %356, i32 0, i32 0
  %357 = bitcast %struct.cos_object_procs_s** %cos_procs327 to %struct.cos_object_s*
  call void @cos_free(%struct.cos_object_s* %357, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.70, i32 0, i32 0)) #7
  %358 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %Dests328 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %358, i32 0, i32 177
  store %struct.cos_dict_s* null, %struct.cos_dict_s** %Dests328, align 8, !tbaa !91
  br label %if.end.329

if.end.329:                                       ; preds = %if.then.325, %if.end.318
  %359 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %EmbeddedFiles330 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %359, i32 0, i32 178
  %360 = load %struct.cos_dict_s*, %struct.cos_dict_s** %EmbeddedFiles330, align 8, !tbaa !92
  %tobool331 = icmp ne %struct.cos_dict_s* %360, null
  br i1 %tobool331, label %if.then.332, label %if.end.336

if.then.332:                                      ; preds = %if.end.329
  %361 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %EmbeddedFiles333 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %361, i32 0, i32 178
  %362 = load %struct.cos_dict_s*, %struct.cos_dict_s** %EmbeddedFiles333, align 8, !tbaa !92
  %cos_procs334 = getelementptr inbounds %struct.cos_dict_s, %struct.cos_dict_s* %362, i32 0, i32 0
  %363 = bitcast %struct.cos_object_procs_s** %cos_procs334 to %struct.cos_object_s*
  call void @cos_free(%struct.cos_object_s* %363, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.71, i32 0, i32 0)) #7
  %364 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %EmbeddedFiles335 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %364, i32 0, i32 178
  store %struct.cos_dict_s* null, %struct.cos_dict_s** %EmbeddedFiles335, align 8, !tbaa !92
  br label %if.end.336

if.end.336:                                       ; preds = %if.then.332, %if.end.329
  %365 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %PageLabels337 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %365, i32 0, i32 188
  %366 = load %struct.cos_array_s*, %struct.cos_array_s** %PageLabels337, align 8, !tbaa !93
  %tobool338 = icmp ne %struct.cos_array_s* %366, null
  br i1 %tobool338, label %if.then.339, label %if.end.343

if.then.339:                                      ; preds = %if.end.336
  %367 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %PageLabels340 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %367, i32 0, i32 188
  %368 = load %struct.cos_array_s*, %struct.cos_array_s** %PageLabels340, align 8, !tbaa !93
  %cos_procs341 = getelementptr inbounds %struct.cos_array_s, %struct.cos_array_s* %368, i32 0, i32 0
  %369 = bitcast %struct.cos_object_procs_s** %cos_procs341 to %struct.cos_object_s*
  call void @cos_free(%struct.cos_object_s* %369, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.72, i32 0, i32 0)) #7
  %370 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %PageLabels342 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %370, i32 0, i32 188
  store %struct.cos_array_s* null, %struct.cos_array_s** %PageLabels342, align 8, !tbaa !93
  %371 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %PageLabels_current_label = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %371, i32 0, i32 190
  store %struct.cos_dict_s* null, %struct.cos_dict_s** %PageLabels_current_label, align 8, !tbaa !95
  br label %if.end.343

if.end.343:                                       ; preds = %if.then.339, %if.end.336
  %372 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %Catalog344 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %372, i32 0, i32 149
  %373 = load %struct.cos_dict_s*, %struct.cos_dict_s** %Catalog344, align 8, !tbaa !108
  %id345 = getelementptr inbounds %struct.cos_dict_s, %struct.cos_dict_s* %373, i32 0, i32 1
  store i64 0, i64* %id345, align 8, !tbaa !109
  %374 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %375 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %Info346 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %375, i32 0, i32 150
  %376 = load %struct.cos_dict_s*, %struct.cos_dict_s** %Info346, align 8, !tbaa !112
  %id347 = getelementptr inbounds %struct.cos_dict_s, %struct.cos_dict_s* %376, i32 0, i32 1
  %377 = load i64, i64* %id347, align 8, !tbaa !109
  %call348 = call i32 @pdf_record_usage(%struct.gx_device_pdf_s* %374, i64 %377, i32 -3) #7
  br label %if.end.352

if.else.349:                                      ; preds = %land.lhs.true.134
  %378 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %Info350 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %378, i32 0, i32 150
  %379 = load %struct.cos_dict_s*, %struct.cos_dict_s** %Info350, align 8, !tbaa !112
  %id351 = getelementptr inbounds %struct.cos_dict_s, %struct.cos_dict_s* %379, i32 0, i32 1
  store i64 0, i64* %id351, align 8, !tbaa !109
  br label %if.end.352

if.end.352:                                       ; preds = %if.else.349, %if.end.343
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.end.352
  %380 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %local_named_objects = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %380, i32 0, i32 182
  %381 = load %struct.cos_dict_s*, %struct.cos_dict_s** %local_named_objects, align 8, !tbaa !62
  %382 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %call353 = call i32 @cos_dict_objects_write(%struct.cos_dict_s* %381, %struct.gx_device_pdf_s* %382) #7
  br label %do.cond

do.cond:                                          ; preds = %do.body
  %383 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %call354 = call i32 @pdf_pop_namespace(%struct.gx_device_pdf_s* %383) #7
  %cmp355 = icmp sge i32 %call354, 0
  br i1 %cmp355, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  %384 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %global_named_objects = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %384, i32 0, i32 181
  %385 = load %struct.cos_dict_s*, %struct.cos_dict_s** %global_named_objects, align 8, !tbaa !61
  %386 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %call356 = call i32 @cos_dict_objects_write(%struct.cos_dict_s* %385, %struct.gx_device_pdf_s* %386) #7
  %387 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %ForOPDFRead357 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %387, i32 0, i32 99
  %388 = load i32, i32* %ForOPDFRead357, align 4, !tbaa !121
  %tobool358 = icmp ne i32 %388, 0
  br i1 %tobool358, label %land.lhs.true.359, label %if.end.372

land.lhs.true.359:                                ; preds = %do.end
  %389 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %ProduceDSC360 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %389, i32 0, i32 105
  %390 = load i32, i32* %ProduceDSC360, align 4, !tbaa !122
  %tobool361 = icmp ne i32 %390, 0
  br i1 %tobool361, label %if.then.362, label %if.end.372

if.then.362:                                      ; preds = %land.lhs.true.359
  %391 = bitcast i32* %pages363 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %391) #2
  store i32 0, i32* %pages363, align 4, !tbaa !54
  br label %for.cond.364

for.cond.364:                                     ; preds = %for.inc.368, %if.then.362
  %392 = load i32, i32* %pages363, align 4, !tbaa !54
  %393 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %next_page365 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %393, i32 0, i32 153
  %394 = load i32, i32* %next_page365, align 4, !tbaa !72
  %cmp366 = icmp sle i32 %392, %394
  br i1 %cmp366, label %for.body.367, label %for.end.370

for.body.367:                                     ; preds = %for.cond.364
  br label %for.inc.368

for.inc.368:                                      ; preds = %for.body.367
  %395 = load i32, i32* %pages363, align 4, !tbaa !54
  %inc369 = add nsw i32 %395, 1
  store i32 %inc369, i32* %pages363, align 4, !tbaa !54
  br label %for.cond.364

for.end.370:                                      ; preds = %for.cond.364
  %396 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %397 = load i32, i32* %pages363, align 4, !tbaa !54
  %sub = sub nsw i32 %397, 1
  %call371 = call i32 @ps2write_dsc_header(%struct.gx_device_pdf_s* %396, i32 %sub) #7
  store i32 %call371, i32* %code, align 4, !tbaa !54
  %398 = bitcast i32* %pages363 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %398) #2
  br label %if.end.372

if.end.372:                                       ; preds = %for.end.370, %land.lhs.true.359, %do.end
  %399 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %strm373 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %399, i32 0, i32 47
  %400 = load %struct.stream_s*, %struct.stream_s** %strm373, align 8, !tbaa !56
  store %struct.stream_s* %400, %struct.stream_s** %s, align 8, !tbaa !1
  %401 = load %struct.stream_s*, %struct.stream_s** %s, align 8, !tbaa !1
  %call374 = call i64 @stell(%struct.stream_s* %401) #7
  store i64 %call374, i64* %resource_pos, align 8, !tbaa !107
  %402 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %asides = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %402, i32 0, i32 145
  %strm375 = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %asides, i32 0, i32 2
  %403 = load %struct.stream_s*, %struct.stream_s** %strm375, align 8, !tbaa !139
  %procs376 = getelementptr inbounds %struct.stream_s, %struct.stream_s* %403, i32 0, i32 14
  %flush = getelementptr inbounds %struct.stream_procs, %struct.stream_procs* %procs376, i32 0, i32 3
  %404 = load i32 (%struct.stream_s*)*, i32 (%struct.stream_s*)** %flush, align 8, !tbaa !140
  %405 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %asides377 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %405, i32 0, i32 145
  %strm378 = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %asides377, i32 0, i32 2
  %406 = load %struct.stream_s*, %struct.stream_s** %strm378, align 8, !tbaa !139
  %call379 = call i32 %404(%struct.stream_s* %406) #7
  %407 = bitcast %struct._IO_FILE** %rfile to i8*
  call void @llvm.lifetime.start(i64 8, i8* %407) #2
  %408 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %asides380 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %408, i32 0, i32 145
  %file381 = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %asides380, i32 0, i32 1
  %409 = load %struct._IO_FILE*, %struct._IO_FILE** %file381, align 8, !tbaa !144
  store %struct._IO_FILE* %409, %struct._IO_FILE** %rfile, align 8, !tbaa !1
  %410 = bitcast i64* %res_end to i8*
  call void @llvm.lifetime.start(i64 8, i8* %410) #2
  %411 = load %struct._IO_FILE*, %struct._IO_FILE** %rfile, align 8, !tbaa !1
  %call382 = call i64 @gp_ftell_64(%struct._IO_FILE* %411) #7
  store i64 %call382, i64* %res_end, align 8, !tbaa !107
  %412 = load %struct._IO_FILE*, %struct._IO_FILE** %rfile, align 8, !tbaa !1
  %call383 = call i32 @gp_fseek_64(%struct._IO_FILE* %412, i64 0, i32 0) #7
  %413 = load %struct.stream_s*, %struct.stream_s** %s, align 8, !tbaa !1
  %414 = load %struct._IO_FILE*, %struct._IO_FILE** %rfile, align 8, !tbaa !1
  %415 = load i64, i64* %res_end, align 8, !tbaa !107
  call void @pdf_copy_data(%struct.stream_s* %413, %struct._IO_FILE* %414, i64 %415, %struct.stream_arcfour_state_s* null) #7
  %416 = bitcast i64* %res_end to i8*
  call void @llvm.lifetime.end(i64 8, i8* %416) #2
  %417 = bitcast %struct._IO_FILE** %rfile to i8*
  call void @llvm.lifetime.end(i64 8, i8* %417) #2
  %418 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %ForOPDFRead384 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %418, i32 0, i32 99
  %419 = load i32, i32* %ForOPDFRead384, align 4, !tbaa !121
  %tobool385 = icmp ne i32 %419, 0
  br i1 %tobool385, label %land.lhs.true.386, label %if.end.526

land.lhs.true.386:                                ; preds = %if.end.372
  %420 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %ProduceDSC387 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %420, i32 0, i32 105
  %421 = load i32, i32* %ProduceDSC387, align 4, !tbaa !122
  %tobool388 = icmp ne i32 %421, 0
  br i1 %tobool388, label %if.then.389, label %if.end.526

if.then.389:                                      ; preds = %land.lhs.true.386
  %422 = bitcast i32* %j to i8*
  call void @llvm.lifetime.start(i64 4, i8* %422) #2
  store i32 0, i32* %code, align 4, !tbaa !54
  store i32 1, i32* %pagecount, align 4, !tbaa !54
  %423 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %strm390 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %423, i32 0, i32 47
  %424 = load %struct.stream_s*, %struct.stream_s** %strm390, align 8, !tbaa !56
  %call391 = call i32 @stream_puts(%struct.stream_s* %424, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.73, i32 0, i32 0)) #7
  %425 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %params = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %425, i32 0, i32 73
  %PSDocOptions = getelementptr inbounds %struct.psdf_distiller_params_s, %struct.psdf_distiller_params_s* %params, i32 0, i32 33
  %data = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %PSDocOptions, i32 0, i32 0
  %426 = load i8*, i8** %data, align 8, !tbaa !145
  %tobool392 = icmp ne i8* %426, null
  br i1 %tobool392, label %if.then.393, label %if.end.413

if.then.393:                                      ; preds = %if.then.389
  %427 = bitcast i32* %i394 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %427) #2
  %428 = bitcast i8** %p to i8*
  call void @llvm.lifetime.start(i64 8, i8* %428) #2
  %429 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %params395 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %429, i32 0, i32 73
  %PSDocOptions396 = getelementptr inbounds %struct.psdf_distiller_params_s, %struct.psdf_distiller_params_s* %params395, i32 0, i32 33
  %data397 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %PSDocOptions396, i32 0, i32 0
  %430 = load i8*, i8** %data397, align 8, !tbaa !145
  store i8* %430, i8** %p, align 8, !tbaa !1
  %431 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %strm398 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %431, i32 0, i32 47
  %432 = load %struct.stream_s*, %struct.stream_s** %strm398, align 8, !tbaa !56
  %call399 = call i32 @stream_puts(%struct.stream_s* %432, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.74, i32 0, i32 0)) #7
  store i32 0, i32* %i394, align 4, !tbaa !54
  br label %for.cond.400

for.cond.400:                                     ; preds = %for.inc.406, %if.then.393
  %433 = load i32, i32* %i394, align 4, !tbaa !54
  %434 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %params401 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %434, i32 0, i32 73
  %PSDocOptions402 = getelementptr inbounds %struct.psdf_distiller_params_s, %struct.psdf_distiller_params_s* %params401, i32 0, i32 33
  %size = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %PSDocOptions402, i32 0, i32 1
  %435 = load i32, i32* %size, align 4, !tbaa !146
  %cmp403 = icmp ult i32 %433, %435
  br i1 %cmp403, label %for.body.404, label %for.end.408

for.body.404:                                     ; preds = %for.cond.400
  %436 = load %struct.stream_s*, %struct.stream_s** %s, align 8, !tbaa !1
  %437 = load i8*, i8** %p, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds i8, i8* %437, i32 1
  store i8* %incdec.ptr, i8** %p, align 8, !tbaa !1
  %438 = load i8, i8* %437, align 1, !tbaa !147
  %call405 = call i32 @spputc(%struct.stream_s* %436, i8 zeroext %438) #7
  br label %for.inc.406

for.inc.406:                                      ; preds = %for.body.404
  %439 = load i32, i32* %i394, align 4, !tbaa !54
  %inc407 = add nsw i32 %439, 1
  store i32 %inc407, i32* %i394, align 4, !tbaa !54
  br label %for.cond.400

for.end.408:                                      ; preds = %for.cond.400
  %440 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %strm409 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %440, i32 0, i32 47
  %441 = load %struct.stream_s*, %struct.stream_s** %strm409, align 8, !tbaa !56
  %call410 = call i32 @stream_puts(%struct.stream_s* %441, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.75, i32 0, i32 0)) #7
  %442 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %strm411 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %442, i32 0, i32 47
  %443 = load %struct.stream_s*, %struct.stream_s** %strm411, align 8, !tbaa !56
  %call412 = call i32 @stream_puts(%struct.stream_s* %443, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.76, i32 0, i32 0)) #7
  %444 = bitcast i8** %p to i8*
  call void @llvm.lifetime.end(i64 8, i8* %444) #2
  %445 = bitcast i32* %i394 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %445) #2
  br label %if.end.413

if.end.413:                                       ; preds = %for.end.408, %if.then.389
  %446 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %ResourcesBeforeUsage414 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %446, i32 0, i32 102
  %447 = load i32, i32* %ResourcesBeforeUsage414, align 4, !tbaa !124
  %tobool415 = icmp ne i32 %447, 0
  br i1 %tobool415, label %if.then.416, label %if.end.417

if.then.416:                                      ; preds = %if.end.413
  %448 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  call void @pdf_reverse_resource_chain(%struct.gx_device_pdf_s* %448, i32 14) #7
  br label %if.end.417

if.end.417:                                       ; preds = %if.then.416, %if.end.413
  store i32 0, i32* %j, align 4, !tbaa !54
  br label %for.cond.418

for.cond.418:                                     ; preds = %for.inc.512, %if.end.417
  %449 = load i32, i32* %j, align 4, !tbaa !54
  %cmp419 = icmp slt i32 %449, 16
  br i1 %cmp419, label %land.rhs.420, label %land.end.422

land.rhs.420:                                     ; preds = %for.cond.418
  %450 = load i32, i32* %code, align 4, !tbaa !54
  %cmp421 = icmp sge i32 %450, 0
  br label %land.end.422

land.end.422:                                     ; preds = %land.rhs.420, %for.cond.418
  %451 = phi i1 [ false, %for.cond.418 ], [ %cmp421, %land.rhs.420 ]
  br i1 %451, label %for.body.424, label %for.end.514

for.body.424:                                     ; preds = %land.end.422
  %452 = bitcast %struct.pdf_resource_s** %pres to i8*
  call void @llvm.lifetime.start(i64 8, i8* %452) #2
  %453 = load i32, i32* %j, align 4, !tbaa !54
  %idxprom425 = sext i32 %453 to i64
  %454 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %resources426 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %454, i32 0, i32 165
  %arrayidx427 = getelementptr inbounds [15 x %struct.pdf_resource_list_s], [15 x %struct.pdf_resource_list_s]* %resources426, i32 0, i64 14
  %chains = getelementptr inbounds %struct.pdf_resource_list_s, %struct.pdf_resource_list_s* %arrayidx427, i32 0, i32 0
  %arrayidx428 = getelementptr inbounds [16 x %struct.pdf_resource_s*], [16 x %struct.pdf_resource_s*]* %chains, i32 0, i64 %idxprom425
  %455 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %arrayidx428, align 8, !tbaa !1
  store %struct.pdf_resource_s* %455, %struct.pdf_resource_s** %pres, align 8, !tbaa !1
  br label %for.cond.429

for.cond.429:                                     ; preds = %for.inc.509, %for.body.424
  %456 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %pres, align 8, !tbaa !1
  %cmp430 = icmp ne %struct.pdf_resource_s* %456, null
  br i1 %cmp430, label %for.body.431, label %for.end.511

for.body.431:                                     ; preds = %for.cond.429
  %457 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %pres, align 8, !tbaa !1
  %named = getelementptr inbounds %struct.pdf_resource_s, %struct.pdf_resource_s* %457, i32 0, i32 3
  %458 = load i32, i32* %named, align 4, !tbaa !148
  %tobool432 = icmp ne i32 %458, 0
  br i1 %tobool432, label %lor.lhs.false.433, label %land.lhs.true.436

lor.lhs.false.433:                                ; preds = %for.body.431
  %459 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %ForOPDFRead434 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %459, i32 0, i32 99
  %460 = load i32, i32* %ForOPDFRead434, align 4, !tbaa !121
  %tobool435 = icmp ne i32 %460, 0
  br i1 %tobool435, label %land.lhs.true.436, label %if.end.508

land.lhs.true.436:                                ; preds = %lor.lhs.false.433, %for.body.431
  %461 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %pres, align 8, !tbaa !1
  %object = getelementptr inbounds %struct.pdf_resource_s, %struct.pdf_resource_s* %461, i32 0, i32 7
  %462 = load %struct.cos_object_s*, %struct.cos_object_s** %object, align 8, !tbaa !150
  %written = getelementptr inbounds %struct.cos_object_s, %struct.cos_object_s* %462, i32 0, i32 8
  %463 = load i8, i8* %written, align 1, !tbaa !151
  %tobool437 = icmp ne i8 %463, 0
  br i1 %tobool437, label %if.end.508, label %if.then.438

if.then.438:                                      ; preds = %land.lhs.true.436
  %464 = bitcast %struct.pdf_page_s** %page to i8*
  call void @llvm.lifetime.start(i64 8, i8* %464) #2
  %465 = load i32, i32* %pagecount, align 4, !tbaa !54
  %sub439 = sub nsw i32 %465, 1
  %idxprom440 = sext i32 %sub439 to i64
  %466 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %pages441 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %466, i32 0, i32 162
  %467 = load %struct.pdf_page_s*, %struct.pdf_page_s** %pages441, align 8, !tbaa !77
  %arrayidx442 = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %467, i64 %idxprom440
  store %struct.pdf_page_s* %arrayidx442, %struct.pdf_page_s** %page, align 8, !tbaa !1
  %468 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %strm443 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %468, i32 0, i32 47
  %469 = load %struct.stream_s*, %struct.stream_s** %strm443, align 8, !tbaa !56
  %470 = load i32, i32* %pagecount, align 4, !tbaa !54
  %471 = load i32, i32* %pagecount, align 4, !tbaa !54
  %call444 = call i8* @pprintd2(%struct.stream_s* %469, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.77, i32 0, i32 0), i32 %470, i32 %471) #7
  %472 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %Eps2Write = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %472, i32 0, i32 100
  %473 = load i32, i32* %Eps2Write, align 4, !tbaa !153
  %tobool445 = icmp ne i32 %473, 0
  br i1 %tobool445, label %if.end.451, label %if.then.446

if.then.446:                                      ; preds = %if.then.438
  %474 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %strm447 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %474, i32 0, i32 47
  %475 = load %struct.stream_s*, %struct.stream_s** %strm447, align 8, !tbaa !56
  %476 = load %struct.pdf_page_s*, %struct.pdf_page_s** %page, align 8, !tbaa !1
  %MediaBox = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %476, i32 0, i32 1
  %x = getelementptr inbounds %struct.gs_point_s, %struct.gs_point_s* %MediaBox, i32 0, i32 0
  %477 = load double, double* %x, align 8, !tbaa !154
  %conv = fptosi double %477 to i32
  %478 = load %struct.pdf_page_s*, %struct.pdf_page_s** %page, align 8, !tbaa !1
  %MediaBox448 = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %478, i32 0, i32 1
  %y = getelementptr inbounds %struct.gs_point_s, %struct.gs_point_s* %MediaBox448, i32 0, i32 1
  %479 = load double, double* %y, align 8, !tbaa !155
  %conv449 = fptosi double %479 to i32
  %call450 = call i8* @pprintd2(%struct.stream_s* %475, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.78, i32 0, i32 0), i32 %conv, i32 %conv449) #7
  br label %if.end.451

if.end.451:                                       ; preds = %if.then.446, %if.then.438
  %480 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %strm452 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %480, i32 0, i32 47
  %481 = load %struct.stream_s*, %struct.stream_s** %strm452, align 8, !tbaa !56
  %call453 = call i32 @stream_puts(%struct.stream_s* %481, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.79, i32 0, i32 0)) #7
  %482 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %strm454 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %482, i32 0, i32 47
  %483 = load %struct.stream_s*, %struct.stream_s** %strm454, align 8, !tbaa !56
  %call455 = call i32 @stream_puts(%struct.stream_s* %483, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.80, i32 0, i32 0)) #7
  %484 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %params456 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %484, i32 0, i32 73
  %PSPageOptions = getelementptr inbounds %struct.psdf_distiller_params_s, %struct.psdf_distiller_params_s* %params456, i32 0, i32 34
  %size457 = getelementptr inbounds %struct.gs_param_string_array_s, %struct.gs_param_string_array_s* %PSPageOptions, i32 0, i32 1
  %485 = load i32, i32* %size457, align 4, !tbaa !156
  %tobool458 = icmp ne i32 %485, 0
  br i1 %tobool458, label %if.then.459, label %if.end.489

if.then.459:                                      ; preds = %if.end.451
  %486 = bitcast i32* %i460 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %486) #2
  %487 = bitcast i32* %index to i8*
  call void @llvm.lifetime.start(i64 4, i8* %487) #2
  %488 = load i32, i32* %pagecount, align 4, !tbaa !54
  %sub461 = sub nsw i32 %488, 1
  %489 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %params462 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %489, i32 0, i32 73
  %PSPageOptions463 = getelementptr inbounds %struct.psdf_distiller_params_s, %struct.psdf_distiller_params_s* %params462, i32 0, i32 34
  %size464 = getelementptr inbounds %struct.gs_param_string_array_s, %struct.gs_param_string_array_s* %PSPageOptions463, i32 0, i32 1
  %490 = load i32, i32* %size464, align 4, !tbaa !156
  %rem = urem i32 %sub461, %490
  store i32 %rem, i32* %index, align 4, !tbaa !54
  %491 = bitcast i8** %p465 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %491) #2
  %492 = load i32, i32* %index, align 4, !tbaa !54
  %idxprom466 = sext i32 %492 to i64
  %493 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %params467 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %493, i32 0, i32 73
  %PSPageOptions468 = getelementptr inbounds %struct.psdf_distiller_params_s, %struct.psdf_distiller_params_s* %params467, i32 0, i32 34
  %data469 = getelementptr inbounds %struct.gs_param_string_array_s, %struct.gs_param_string_array_s* %PSPageOptions468, i32 0, i32 0
  %494 = load %struct.gs_param_string_s*, %struct.gs_param_string_s** %data469, align 8, !tbaa !157
  %arrayidx470 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %494, i64 %idxprom466
  %data471 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %arrayidx470, i32 0, i32 0
  %495 = load i8*, i8** %data471, align 8, !tbaa !158
  store i8* %495, i8** %p465, align 8, !tbaa !1
  store i32 0, i32* %i460, align 4, !tbaa !54
  br label %for.cond.472

for.cond.472:                                     ; preds = %for.inc.484, %if.then.459
  %496 = load i32, i32* %i460, align 4, !tbaa !54
  %497 = load i32, i32* %index, align 4, !tbaa !54
  %idxprom473 = sext i32 %497 to i64
  %498 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %params474 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %498, i32 0, i32 73
  %PSPageOptions475 = getelementptr inbounds %struct.psdf_distiller_params_s, %struct.psdf_distiller_params_s* %params474, i32 0, i32 34
  %data476 = getelementptr inbounds %struct.gs_param_string_array_s, %struct.gs_param_string_array_s* %PSPageOptions475, i32 0, i32 0
  %499 = load %struct.gs_param_string_s*, %struct.gs_param_string_s** %data476, align 8, !tbaa !157
  %arrayidx477 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %499, i64 %idxprom473
  %size478 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %arrayidx477, i32 0, i32 1
  %500 = load i32, i32* %size478, align 4, !tbaa !159
  %cmp479 = icmp ult i32 %496, %500
  br i1 %cmp479, label %for.body.481, label %for.end.486

for.body.481:                                     ; preds = %for.cond.472
  %501 = load %struct.stream_s*, %struct.stream_s** %s, align 8, !tbaa !1
  %502 = load i8*, i8** %p465, align 8, !tbaa !1
  %incdec.ptr482 = getelementptr inbounds i8, i8* %502, i32 1
  store i8* %incdec.ptr482, i8** %p465, align 8, !tbaa !1
  %503 = load i8, i8* %502, align 1, !tbaa !147
  %call483 = call i32 @spputc(%struct.stream_s* %501, i8 zeroext %503) #7
  br label %for.inc.484

for.inc.484:                                      ; preds = %for.body.481
  %504 = load i32, i32* %i460, align 4, !tbaa !54
  %inc485 = add nsw i32 %504, 1
  store i32 %inc485, i32* %i460, align 4, !tbaa !54
  br label %for.cond.472

for.end.486:                                      ; preds = %for.cond.472
  %505 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %strm487 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %505, i32 0, i32 47
  %506 = load %struct.stream_s*, %struct.stream_s** %strm487, align 8, !tbaa !56
  %call488 = call i32 @stream_puts(%struct.stream_s* %506, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.75, i32 0, i32 0)) #7
  %507 = bitcast i8** %p465 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %507) #2
  %508 = bitcast i32* %index to i8*
  call void @llvm.lifetime.end(i64 4, i8* %508) #2
  %509 = bitcast i32* %i460 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %509) #2
  br label %if.end.489

if.end.489:                                       ; preds = %for.end.486, %if.end.451
  %510 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %511 = load i32, i32* %pagecount, align 4, !tbaa !54
  %inc490 = add nsw i32 %511, 1
  store i32 %inc490, i32* %pagecount, align 4, !tbaa !54
  %call491 = call i32 @pdf_write_page(%struct.gx_device_pdf_s* %510, i32 %511) #7
  %512 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %strm492 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %512, i32 0, i32 47
  %513 = load %struct.stream_s*, %struct.stream_s** %strm492, align 8, !tbaa !56
  %call493 = call i32 @stream_puts(%struct.stream_s* %513, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.81, i32 0, i32 0)) #7
  %514 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %strm494 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %514, i32 0, i32 47
  %515 = load %struct.stream_s*, %struct.stream_s** %strm494, align 8, !tbaa !56
  %516 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %pres, align 8, !tbaa !1
  %object495 = getelementptr inbounds %struct.pdf_resource_s, %struct.pdf_resource_s* %516, i32 0, i32 7
  %517 = load %struct.cos_object_s*, %struct.cos_object_s** %object495, align 8, !tbaa !150
  %id496 = getelementptr inbounds %struct.cos_object_s, %struct.cos_object_s* %517, i32 0, i32 1
  %518 = load i64, i64* %id496, align 8, !tbaa !160
  %call497 = call i8* @pprintld1(%struct.stream_s* %515, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.82, i32 0, i32 0), i64 %518) #7
  %519 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %pres, align 8, !tbaa !1
  %object498 = getelementptr inbounds %struct.pdf_resource_s, %struct.pdf_resource_s* %519, i32 0, i32 7
  %520 = load %struct.cos_object_s*, %struct.cos_object_s** %object498, align 8, !tbaa !150
  %521 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %522 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %pres, align 8, !tbaa !1
  %object499 = getelementptr inbounds %struct.pdf_resource_s, %struct.pdf_resource_s* %522, i32 0, i32 7
  %523 = load %struct.cos_object_s*, %struct.cos_object_s** %object499, align 8, !tbaa !150
  %id500 = getelementptr inbounds %struct.cos_object_s, %struct.cos_object_s* %523, i32 0, i32 1
  %524 = load i64, i64* %id500, align 8, !tbaa !160
  %call501 = call i32 @cos_write(%struct.cos_object_s* %520, %struct.gx_device_pdf_s* %521, i64 %524) #7
  store i32 %call501, i32* %code, align 4, !tbaa !54
  %525 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %strm502 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %525, i32 0, i32 47
  %526 = load %struct.stream_s*, %struct.stream_s** %strm502, align 8, !tbaa !56
  %call503 = call i32 @stream_puts(%struct.stream_s* %526, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.83, i32 0, i32 0)) #7
  %527 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %pres, align 8, !tbaa !1
  %object504 = getelementptr inbounds %struct.pdf_resource_s, %struct.pdf_resource_s* %527, i32 0, i32 7
  %528 = load %struct.cos_object_s*, %struct.cos_object_s** %object504, align 8, !tbaa !150
  %written505 = getelementptr inbounds %struct.cos_object_s, %struct.cos_object_s* %528, i32 0, i32 8
  store i8 1, i8* %written505, align 1, !tbaa !151
  %529 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %strm506 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %529, i32 0, i32 47
  %530 = load %struct.stream_s*, %struct.stream_s** %strm506, align 8, !tbaa !56
  %call507 = call i32 @stream_puts(%struct.stream_s* %530, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.84, i32 0, i32 0)) #7
  %531 = bitcast %struct.pdf_page_s** %page to i8*
  call void @llvm.lifetime.end(i64 8, i8* %531) #2
  br label %if.end.508

if.end.508:                                       ; preds = %if.end.489, %land.lhs.true.436, %lor.lhs.false.433
  br label %for.inc.509

for.inc.509:                                      ; preds = %if.end.508
  %532 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %pres, align 8, !tbaa !1
  %next510 = getelementptr inbounds %struct.pdf_resource_s, %struct.pdf_resource_s* %532, i32 0, i32 0
  %533 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %next510, align 8, !tbaa !161
  store %struct.pdf_resource_s* %533, %struct.pdf_resource_s** %pres, align 8, !tbaa !1
  br label %for.cond.429

for.end.511:                                      ; preds = %for.cond.429
  %534 = bitcast %struct.pdf_resource_s** %pres to i8*
  call void @llvm.lifetime.end(i64 8, i8* %534) #2
  br label %for.inc.512

for.inc.512:                                      ; preds = %for.end.511
  %535 = load i32, i32* %j, align 4, !tbaa !54
  %inc513 = add nsw i32 %535, 1
  store i32 %inc513, i32* %j, align 4, !tbaa !54
  br label %for.cond.418

for.end.514:                                      ; preds = %land.end.422
  %536 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %call515 = call i32 @pdf_free_resource_objects(%struct.gx_device_pdf_s* %536, i32 14) #7
  store i32 %call515, i32* %code1, align 4, !tbaa !54
  %537 = load i32, i32* %code, align 4, !tbaa !54
  %cmp516 = icmp sge i32 %537, 0
  br i1 %cmp516, label %if.then.518, label %if.end.519

if.then.518:                                      ; preds = %for.end.514
  %538 = load i32, i32* %code1, align 4, !tbaa !54
  store i32 %538, i32* %code, align 4, !tbaa !54
  br label %if.end.519

if.end.519:                                       ; preds = %if.then.518, %for.end.514
  %539 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %strm520 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %539, i32 0, i32 47
  %540 = load %struct.stream_s*, %struct.stream_s** %strm520, align 8, !tbaa !56
  %call521 = call i32 @stream_puts(%struct.stream_s* %540, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.85, i32 0, i32 0)) #7
  %541 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %strm522 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %541, i32 0, i32 47
  %542 = load %struct.stream_s*, %struct.stream_s** %strm522, align 8, !tbaa !56
  %call523 = call i32 @stream_puts(%struct.stream_s* %542, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.86, i32 0, i32 0)) #7
  %543 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %strm524 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %543, i32 0, i32 47
  %544 = load %struct.stream_s*, %struct.stream_s** %strm524, align 8, !tbaa !56
  %call525 = call i32 @stream_puts(%struct.stream_s* %544, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.87, i32 0, i32 0)) #7
  %545 = bitcast i32* %j to i8*
  call void @llvm.lifetime.end(i64 4, i8* %545) #2
  br label %if.end.526

if.end.526:                                       ; preds = %if.end.519, %land.lhs.true.386, %if.end.372
  %546 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %Linearise = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %546, i32 0, i32 249
  %547 = load i32, i32* %Linearise, align 4, !tbaa !162
  %tobool527 = icmp ne i32 %547, 0
  br i1 %tobool527, label %if.then.528, label %if.end.540

if.then.528:                                      ; preds = %if.end.526
  %548 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %next_id = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %548, i32 0, i32 148
  %549 = load i64, i64* %next_id, align 8, !tbaa !163
  %sub529 = sub nsw i64 %549, 1
  %LastResource = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %linear_params, i32 0, i32 14
  store i64 %sub529, i64* %LastResource, align 8, !tbaa !164
  %550 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %v_memory530 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %550, i32 0, i32 43
  %551 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory530, align 8, !tbaa !52
  %procs531 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %551, i32 0, i32 1
  %alloc_bytes = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs531, i32 0, i32 7
  %552 = load i8* (%struct.gs_memory_s*, i32, i8*)*, i8* (%struct.gs_memory_s*, i32, i8*)** %alloc_bytes, align 8, !tbaa !64
  %553 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %v_memory532 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %553, i32 0, i32 43
  %554 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory532, align 8, !tbaa !52
  %555 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %next_id533 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %555, i32 0, i32 148
  %556 = load i64, i64* %next_id533, align 8, !tbaa !163
  %mul = mul i64 %556, 8
  %conv534 = trunc i64 %mul to i32
  %call535 = call i8* %552(%struct.gs_memory_s* %554, i32 %conv534, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.88, i32 0, i32 0)) #7
  %557 = bitcast i8* %call535 to i64*
  %Offsets = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %linear_params, i32 0, i32 16
  store i64* %557, i64** %Offsets, align 8, !tbaa !165
  %Offsets536 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %linear_params, i32 0, i32 16
  %558 = load i64*, i64** %Offsets536, align 8, !tbaa !165
  %559 = bitcast i64* %558 to i8*
  %LastResource537 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %linear_params, i32 0, i32 14
  %560 = load i64, i64* %LastResource537, align 8, !tbaa !164
  %mul538 = mul i64 %560, 8
  %call539 = call i8* @memset(i8* %559, i32 0, i64 %mul538) #8
  br label %if.end.540

if.end.540:                                       ; preds = %if.then.528, %if.end.526
  %561 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %ForOPDFRead541 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %561, i32 0, i32 99
  %562 = load i32, i32* %ForOPDFRead541, align 4, !tbaa !121
  %tobool542 = icmp ne i32 %562, 0
  br i1 %tobool542, label %land.lhs.true.543, label %if.then.546

land.lhs.true.543:                                ; preds = %if.end.540
  %563 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %ProduceDSC544 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %563, i32 0, i32 105
  %564 = load i32, i32* %ProduceDSC544, align 4, !tbaa !122
  %tobool545 = icmp ne i32 %564, 0
  br i1 %tobool545, label %if.end.648, label %if.then.546

if.then.546:                                      ; preds = %land.lhs.true.543, %if.end.540
  %565 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %OwnerPassword = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %565, i32 0, i32 115
  %size547 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %OwnerPassword, i32 0, i32 1
  %566 = load i32, i32* %size547, align 4, !tbaa !68
  %cmp548 = icmp ugt i32 %566, 0
  br i1 %cmp548, label %if.then.550, label %if.end.573

if.then.550:                                      ; preds = %if.then.546
  %567 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %call551 = call i64 @pdf_obj_ref(%struct.gx_device_pdf_s* %567) #7
  store i64 %call551, i64* %Encrypt_id, align 8, !tbaa !107
  %568 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %569 = load i64, i64* %Encrypt_id, align 8, !tbaa !107
  %call552 = call i64 @pdf_open_obj(%struct.gx_device_pdf_s* %568, i64 %569, i32 27) #7
  %570 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %strm553 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %570, i32 0, i32 47
  %571 = load %struct.stream_s*, %struct.stream_s** %strm553, align 8, !tbaa !56
  store %struct.stream_s* %571, %struct.stream_s** %s, align 8, !tbaa !1
  %572 = load %struct.stream_s*, %struct.stream_s** %s, align 8, !tbaa !1
  %call554 = call i32 @stream_puts(%struct.stream_s* %572, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.61, i32 0, i32 0)) #7
  %573 = load %struct.stream_s*, %struct.stream_s** %s, align 8, !tbaa !1
  %call555 = call i32 @stream_puts(%struct.stream_s* %573, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.89, i32 0, i32 0)) #7
  %574 = load %struct.stream_s*, %struct.stream_s** %s, align 8, !tbaa !1
  %575 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %EncryptionV = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %575, i32 0, i32 126
  %576 = load i32, i32* %EncryptionV, align 4, !tbaa !166
  %conv556 = zext i32 %576 to i64
  %call557 = call i8* @pprintld1(%struct.stream_s* %574, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.90, i32 0, i32 0), i64 %conv556) #7
  %577 = load %struct.stream_s*, %struct.stream_s** %s, align 8, !tbaa !1
  %578 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %KeyLength = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %578, i32 0, i32 117
  %579 = load i32, i32* %KeyLength, align 4, !tbaa !70
  %conv558 = zext i32 %579 to i64
  %call559 = call i8* @pprintld1(%struct.stream_s* %577, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.91, i32 0, i32 0), i64 %conv558) #7
  %580 = load %struct.stream_s*, %struct.stream_s** %s, align 8, !tbaa !1
  %581 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %EncryptionR = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %581, i32 0, i32 119
  %582 = load i32, i32* %EncryptionR, align 4, !tbaa !167
  %conv560 = zext i32 %582 to i64
  %call561 = call i8* @pprintld1(%struct.stream_s* %580, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.92, i32 0, i32 0), i64 %conv560) #7
  %583 = load %struct.stream_s*, %struct.stream_s** %s, align 8, !tbaa !1
  %584 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %Permissions = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %584, i32 0, i32 118
  %585 = load i32, i32* %Permissions, align 4, !tbaa !168
  %conv562 = zext i32 %585 to i64
  %call563 = call i8* @pprintld1(%struct.stream_s* %583, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.93, i32 0, i32 0), i64 %conv562) #7
  %586 = load %struct.stream_s*, %struct.stream_s** %s, align 8, !tbaa !1
  %call564 = call i32 @stream_puts(%struct.stream_s* %586, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.94, i32 0, i32 0)) #7
  %587 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %588 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %EncryptionO = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %588, i32 0, i32 123
  %arraydecay565 = getelementptr inbounds [32 x i8], [32 x i8]* %EncryptionO, i32 0, i32 0
  %call566 = call i32 @pdf_put_string(%struct.gx_device_pdf_s* %587, i8* %arraydecay565, i32 32) #7
  %589 = load %struct.stream_s*, %struct.stream_s** %s, align 8, !tbaa !1
  %call567 = call i32 @stream_puts(%struct.stream_s* %589, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.95, i32 0, i32 0)) #7
  %590 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %591 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %EncryptionU = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %591, i32 0, i32 124
  %arraydecay568 = getelementptr inbounds [32 x i8], [32 x i8]* %EncryptionU, i32 0, i32 0
  %call569 = call i32 @pdf_put_string(%struct.gx_device_pdf_s* %590, i8* %arraydecay568, i32 32) #7
  %592 = load %struct.stream_s*, %struct.stream_s** %s, align 8, !tbaa !1
  %call570 = call i32 @stream_puts(%struct.stream_s* %592, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.54, i32 0, i32 0)) #7
  %593 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %call571 = call i32 @pdf_end_obj(%struct.gx_device_pdf_s* %593, i32 27) #7
  %594 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %strm572 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %594, i32 0, i32 47
  %595 = load %struct.stream_s*, %struct.stream_s** %strm572, align 8, !tbaa !56
  store %struct.stream_s* %595, %struct.stream_s** %s, align 8, !tbaa !1
  br label %if.end.573

if.end.573:                                       ; preds = %if.then.550, %if.then.546
  %596 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %FirstObjectNumber = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %596, i32 0, i32 93
  %597 = load i64, i64* %FirstObjectNumber, align 8, !tbaa !169
  store i64 %597, i64* %start_section, align 8, !tbaa !107
  %598 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %599 = load %struct._IO_FILE*, %struct._IO_FILE** %tfile, align 8, !tbaa !1
  %600 = load i64, i64* %start_section, align 8, !tbaa !107
  %601 = load i64, i64* %resource_pos, align 8, !tbaa !107
  %call574 = call i32 @find_end_xref_section(%struct.gx_device_pdf_s* %598, %struct._IO_FILE* %599, i64 %600, i64 %601) #7
  %conv575 = sext i32 %call574 to i64
  store i64 %conv575, i64* %end_section, align 8, !tbaa !107
  %602 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %call576 = call i64 @pdf_stell(%struct.gx_device_pdf_s* %602) #7
  %603 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %OPDFRead_procset_length = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %603, i32 0, i32 228
  %604 = load i32, i32* %OPDFRead_procset_length, align 4, !tbaa !170
  %conv577 = sext i32 %604 to i64
  %sub578 = sub nsw i64 %call576, %conv577
  store i64 %sub578, i64* %xref1, align 8, !tbaa !107
  %605 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %Linearise579 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %605, i32 0, i32 249
  %606 = load i32, i32* %Linearise579, align 4, !tbaa !162
  %tobool580 = icmp ne i32 %606, 0
  br i1 %tobool580, label %if.then.581, label %if.end.583

if.then.581:                                      ; preds = %if.end.573
  %607 = load i64, i64* %xref1, align 8, !tbaa !107
  %xref582 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %linear_params, i32 0, i32 17
  store i64 %607, i64* %xref582, align 8, !tbaa !171
  br label %if.end.583

if.end.583:                                       ; preds = %if.then.581, %if.end.573
  %608 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %FirstObjectNumber584 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %608, i32 0, i32 93
  %609 = load i64, i64* %FirstObjectNumber584, align 8, !tbaa !169
  %cmp585 = icmp eq i64 %609, 1
  br i1 %cmp585, label %if.then.587, label %if.else.592

if.then.587:                                      ; preds = %if.end.583
  %arraydecay588 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i32 0, i32 0
  %610 = load i64, i64* %end_section, align 8, !tbaa !107
  %call589 = call i32 (i8*, i8*, ...) @gs_sprintf(i8* %arraydecay588, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.96, i32 0, i32 0), i64 %610) #7
  %611 = load %struct.stream_s*, %struct.stream_s** %s, align 8, !tbaa !1
  %arraydecay590 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i32 0, i32 0
  %call591 = call i32 @stream_puts(%struct.stream_s* %611, i8* %arraydecay590) #7
  br label %if.end.598

if.else.592:                                      ; preds = %if.end.583
  %arraydecay593 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i32 0, i32 0
  %612 = load i64, i64* %start_section, align 8, !tbaa !107
  %613 = load i64, i64* %end_section, align 8, !tbaa !107
  %614 = load i64, i64* %start_section, align 8, !tbaa !107
  %sub594 = sub nsw i64 %613, %614
  %call595 = call i32 (i8*, i8*, ...) @gs_sprintf(i8* %arraydecay593, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.97, i32 0, i32 0), i64 %612, i64 %sub594) #7
  %615 = load %struct.stream_s*, %struct.stream_s** %s, align 8, !tbaa !1
  %arraydecay596 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i32 0, i32 0
  %call597 = call i32 @stream_puts(%struct.stream_s* %615, i8* %arraydecay596) #7
  br label %if.end.598

if.end.598:                                       ; preds = %if.else.592, %if.then.587
  br label %do.body.599

do.body.599:                                      ; preds = %do.cond.620, %if.end.598
  %616 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %617 = load %struct._IO_FILE*, %struct._IO_FILE** %tfile, align 8, !tbaa !1
  %618 = load i64, i64* %start_section, align 8, !tbaa !107
  %619 = load i64, i64* %end_section, align 8, !tbaa !107
  %conv600 = trunc i64 %619 to i32
  %620 = load i64, i64* %resource_pos, align 8, !tbaa !107
  %Offsets601 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %linear_params, i32 0, i32 16
  %621 = load i64*, i64** %Offsets601, align 8, !tbaa !165
  %call602 = call i32 @write_xref_section(%struct.gx_device_pdf_s* %616, %struct._IO_FILE* %617, i64 %618, i32 %conv600, i64 %620, i64* %621) #7
  %622 = load i64, i64* %end_section, align 8, !tbaa !107
  %623 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %next_id603 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %623, i32 0, i32 148
  %624 = load i64, i64* %next_id603, align 8, !tbaa !163
  %cmp604 = icmp sge i64 %622, %624
  br i1 %cmp604, label %if.then.606, label %if.end.607

if.then.606:                                      ; preds = %do.body.599
  br label %do.end.621

if.end.607:                                       ; preds = %do.body.599
  %625 = load i64, i64* %end_section, align 8, !tbaa !107
  %add = add nsw i64 %625, 1
  store i64 %add, i64* %start_section, align 8, !tbaa !107
  %626 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %627 = load %struct._IO_FILE*, %struct._IO_FILE** %tfile, align 8, !tbaa !1
  %628 = load i64, i64* %start_section, align 8, !tbaa !107
  %629 = load i64, i64* %resource_pos, align 8, !tbaa !107
  %call608 = call i32 @find_end_xref_section(%struct.gx_device_pdf_s* %626, %struct._IO_FILE* %627, i64 %628, i64 %629) #7
  %conv609 = sext i32 %call608 to i64
  store i64 %conv609, i64* %end_section, align 8, !tbaa !107
  %630 = load i64, i64* %end_section, align 8, !tbaa !107
  %cmp610 = icmp slt i64 %630, 0
  br i1 %cmp610, label %if.then.612, label %if.end.614

if.then.612:                                      ; preds = %if.end.607
  %631 = load i64, i64* %end_section, align 8, !tbaa !107
  %conv613 = trunc i64 %631 to i32
  store i32 %conv613, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.614:                                       ; preds = %if.end.607
  %arraydecay615 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i32 0, i32 0
  %632 = load i64, i64* %start_section, align 8, !tbaa !107
  %633 = load i64, i64* %end_section, align 8, !tbaa !107
  %634 = load i64, i64* %start_section, align 8, !tbaa !107
  %sub616 = sub nsw i64 %633, %634
  %call617 = call i32 (i8*, i8*, ...) @gs_sprintf(i8* %arraydecay615, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.98, i32 0, i32 0), i64 %632, i64 %sub616) #7
  %635 = load %struct.stream_s*, %struct.stream_s** %s, align 8, !tbaa !1
  %arraydecay618 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i32 0, i32 0
  %call619 = call i32 @stream_puts(%struct.stream_s* %635, i8* %arraydecay618) #7
  br label %do.cond.620

do.cond.620:                                      ; preds = %if.end.614
  br i1 true, label %do.body.599, label %do.end.621

do.end.621:                                       ; preds = %do.cond.620, %if.then.606
  %636 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %Linearise622 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %636, i32 0, i32 249
  %637 = load i32, i32* %Linearise622, align 4, !tbaa !162
  %tobool623 = icmp ne i32 %637, 0
  br i1 %tobool623, label %if.end.647, label %if.then.624

if.then.624:                                      ; preds = %do.end.621
  %638 = bitcast [32 x i8]* %xref_str to i8*
  call void @llvm.lifetime.start(i64 32, i8* %638) #2
  %639 = load %struct.stream_s*, %struct.stream_s** %s, align 8, !tbaa !1
  %call625 = call i32 @stream_puts(%struct.stream_s* %639, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.99, i32 0, i32 0)) #7
  %640 = load %struct.stream_s*, %struct.stream_s** %s, align 8, !tbaa !1
  %641 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %next_id626 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %641, i32 0, i32 148
  %642 = load i64, i64* %next_id626, align 8, !tbaa !163
  %643 = load i64, i64* %Catalog_id, align 8, !tbaa !107
  %644 = load i64, i64* %Info_id, align 8, !tbaa !107
  %call627 = call i8* @pprintld3(%struct.stream_s* %640, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.100, i32 0, i32 0), i64 %642, i64 %643, i64 %644) #7
  %645 = load %struct.stream_s*, %struct.stream_s** %s, align 8, !tbaa !1
  %call628 = call i32 @stream_puts(%struct.stream_s* %645, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.101, i32 0, i32 0)) #7
  %646 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %strm629 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %646, i32 0, i32 47
  %647 = load %struct.stream_s*, %struct.stream_s** %strm629, align 8, !tbaa !56
  %648 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %fileID = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %648, i32 0, i32 179
  %arraydecay630 = getelementptr inbounds [16 x i8], [16 x i8]* %fileID, i32 0, i32 0
  call void @s_write_ps_string(%struct.stream_s* %647, i8* %arraydecay630, i32 16, i32 0) #7
  %649 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %strm631 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %649, i32 0, i32 47
  %650 = load %struct.stream_s*, %struct.stream_s** %strm631, align 8, !tbaa !56
  %651 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %fileID632 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %651, i32 0, i32 179
  %arraydecay633 = getelementptr inbounds [16 x i8], [16 x i8]* %fileID632, i32 0, i32 0
  call void @s_write_ps_string(%struct.stream_s* %650, i8* %arraydecay633, i32 16, i32 0) #7
  %652 = load %struct.stream_s*, %struct.stream_s** %s, align 8, !tbaa !1
  %call634 = call i32 @stream_puts(%struct.stream_s* %652, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.60, i32 0, i32 0)) #7
  %653 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %OwnerPassword635 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %653, i32 0, i32 115
  %size636 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %OwnerPassword635, i32 0, i32 1
  %654 = load i32, i32* %size636, align 4, !tbaa !68
  %cmp637 = icmp ugt i32 %654, 0
  br i1 %cmp637, label %if.then.639, label %if.end.641

if.then.639:                                      ; preds = %if.then.624
  %655 = load %struct.stream_s*, %struct.stream_s** %s, align 8, !tbaa !1
  %656 = load i64, i64* %Encrypt_id, align 8, !tbaa !107
  %call640 = call i8* @pprintld1(%struct.stream_s* %655, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.102, i32 0, i32 0), i64 %656) #7
  br label %if.end.641

if.end.641:                                       ; preds = %if.then.639, %if.then.624
  %657 = load %struct.stream_s*, %struct.stream_s** %s, align 8, !tbaa !1
  %call642 = call i32 @stream_puts(%struct.stream_s* %657, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.54, i32 0, i32 0)) #7
  %arraydecay643 = getelementptr inbounds [32 x i8], [32 x i8]* %xref_str, i32 0, i32 0
  %658 = load i64, i64* %xref1, align 8, !tbaa !107
  %call644 = call i32 (i8*, i8*, ...) @gs_sprintf(i8* %arraydecay643, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.103, i32 0, i32 0), i64 %658) #7
  %659 = load %struct.stream_s*, %struct.stream_s** %s, align 8, !tbaa !1
  %arraydecay645 = getelementptr inbounds [32 x i8], [32 x i8]* %xref_str, i32 0, i32 0
  %call646 = call i32 @stream_puts(%struct.stream_s* %659, i8* %arraydecay645) #7
  %660 = bitcast [32 x i8]* %xref_str to i8*
  call void @llvm.lifetime.end(i64 32, i8* %660) #2
  br label %if.end.647

if.end.647:                                       ; preds = %if.end.641, %do.end.621
  br label %if.end.648

if.end.648:                                       ; preds = %if.end.647, %land.lhs.true.543
  %661 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %Linearise649 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %661, i32 0, i32 249
  %662 = load i32, i32* %Linearise649, align 4, !tbaa !162
  %tobool650 = icmp ne i32 %662, 0
  br i1 %tobool650, label %if.then.651, label %if.end.679

if.then.651:                                      ; preds = %if.end.648
  %663 = bitcast i32* %i652 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %663) #2
  %664 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %call653 = call i32 @pdf_linearise(%struct.gx_device_pdf_s* %664, %struct.pdf_linearisation_s* %linear_params) #7
  store i32 %call653, i32* %code, align 4, !tbaa !54
  store i32 0, i32* %i652, align 4, !tbaa !54
  br label %for.cond.654

for.cond.654:                                     ; preds = %for.inc.671, %if.then.651
  %665 = load i32, i32* %i652, align 4, !tbaa !54
  %666 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %ResourceUsageSize = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %666, i32 0, i32 253
  %667 = load i32, i32* %ResourceUsageSize, align 4, !tbaa !172
  %cmp655 = icmp slt i32 %665, %667
  br i1 %cmp655, label %for.body.657, label %for.end.673

for.body.657:                                     ; preds = %for.cond.654
  %668 = load i32, i32* %i652, align 4, !tbaa !54
  %idxprom658 = sext i32 %668 to i64
  %669 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %ResourceUsage = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %669, i32 0, i32 252
  %670 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %ResourceUsage, align 8, !tbaa !173
  %arrayidx659 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %670, i64 %idxprom658
  %PageList = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %arrayidx659, i32 0, i32 2
  %671 = load i32*, i32** %PageList, align 8, !tbaa !174
  %tobool660 = icmp ne i32* %671, null
  br i1 %tobool660, label %if.then.661, label %if.end.670

if.then.661:                                      ; preds = %for.body.657
  %672 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %v_memory662 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %672, i32 0, i32 43
  %673 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory662, align 8, !tbaa !52
  %procs663 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %673, i32 0, i32 1
  %free_object664 = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs663, i32 0, i32 2
  %674 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %free_object664, align 8, !tbaa !138
  %675 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %v_memory665 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %675, i32 0, i32 43
  %676 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory665, align 8, !tbaa !52
  %677 = load i32, i32* %i652, align 4, !tbaa !54
  %idxprom666 = sext i32 %677 to i64
  %678 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %ResourceUsage667 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %678, i32 0, i32 252
  %679 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %ResourceUsage667, align 8, !tbaa !173
  %arrayidx668 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %679, i64 %idxprom666
  %PageList669 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %arrayidx668, i32 0, i32 2
  %680 = load i32*, i32** %PageList669, align 8, !tbaa !174
  %681 = bitcast i32* %680 to i8*
  call void %674(%struct.gs_memory_s* %676, i8* %681, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.104, i32 0, i32 0)) #7
  br label %if.end.670

if.end.670:                                       ; preds = %if.then.661, %for.body.657
  br label %for.inc.671

for.inc.671:                                      ; preds = %if.end.670
  %682 = load i32, i32* %i652, align 4, !tbaa !54
  %inc672 = add nsw i32 %682, 1
  store i32 %inc672, i32* %i652, align 4, !tbaa !54
  br label %for.cond.654

for.end.673:                                      ; preds = %for.cond.654
  %683 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %v_memory674 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %683, i32 0, i32 43
  %684 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory674, align 8, !tbaa !52
  %procs675 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %684, i32 0, i32 1
  %free_object676 = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs675, i32 0, i32 2
  %685 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %free_object676, align 8, !tbaa !138
  %686 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %v_memory677 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %686, i32 0, i32 43
  %687 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory677, align 8, !tbaa !52
  %688 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %ResourceUsage678 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %688, i32 0, i32 252
  %689 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %ResourceUsage678, align 8, !tbaa !173
  %690 = bitcast %struct.linearisation_record_s* %689 to i8*
  call void %685(%struct.gs_memory_s* %687, i8* %690, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.105, i32 0, i32 0)) #7
  %691 = bitcast i32* %i652 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %691) #2
  br label %if.end.679

if.end.679:                                       ; preds = %for.end.673, %if.end.648
  %692 = bitcast i32* %j680 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %692) #2
  %693 = bitcast i32* %code681 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %693) #2
  store i32 0, i32* %code681, align 4, !tbaa !54
  store i32 0, i32* %j680, align 4, !tbaa !54
  br label %for.cond.682

for.cond.682:                                     ; preds = %for.inc.704, %if.end.679
  %694 = load i32, i32* %j680, align 4, !tbaa !54
  %cmp683 = icmp slt i32 %694, 16
  br i1 %cmp683, label %land.rhs.685, label %land.end.688

land.rhs.685:                                     ; preds = %for.cond.682
  %695 = load i32, i32* %code681, align 4, !tbaa !54
  %cmp686 = icmp sge i32 %695, 0
  br label %land.end.688

land.end.688:                                     ; preds = %land.rhs.685, %for.cond.682
  %696 = phi i1 [ false, %for.cond.682 ], [ %cmp686, %land.rhs.685 ]
  br i1 %696, label %for.body.690, label %for.end.706

for.body.690:                                     ; preds = %land.end.688
  %697 = bitcast %struct.pdf_resource_s** %pres691 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %697) #2
  %698 = load i32, i32* %j680, align 4, !tbaa !54
  %idxprom692 = sext i32 %698 to i64
  %699 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %resources693 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %699, i32 0, i32 165
  %arrayidx694 = getelementptr inbounds [15 x %struct.pdf_resource_list_s], [15 x %struct.pdf_resource_list_s]* %resources693, i32 0, i64 6
  %chains695 = getelementptr inbounds %struct.pdf_resource_list_s, %struct.pdf_resource_list_s* %arrayidx694, i32 0, i32 0
  %arrayidx696 = getelementptr inbounds [16 x %struct.pdf_resource_s*], [16 x %struct.pdf_resource_s*]* %chains695, i32 0, i64 %idxprom692
  %700 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %arrayidx696, align 8, !tbaa !1
  store %struct.pdf_resource_s* %700, %struct.pdf_resource_s** %pres691, align 8, !tbaa !1
  br label %for.cond.697

for.cond.697:                                     ; preds = %for.body.700, %for.body.690
  %701 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %pres691, align 8, !tbaa !1
  %cmp698 = icmp ne %struct.pdf_resource_s* %701, null
  br i1 %cmp698, label %for.body.700, label %for.end.703

for.body.700:                                     ; preds = %for.cond.697
  %702 = bitcast %struct.pdf_font_resource_s** %pdfont to i8*
  call void @llvm.lifetime.start(i64 8, i8* %702) #2
  %703 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %pres691, align 8, !tbaa !1
  %704 = bitcast %struct.pdf_resource_s* %703 to %struct.pdf_font_resource_s*
  store %struct.pdf_font_resource_s* %704, %struct.pdf_font_resource_s** %pdfont, align 8, !tbaa !1
  %705 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %706 = load %struct.pdf_font_resource_s*, %struct.pdf_font_resource_s** %pdfont, align 8, !tbaa !1
  %call701 = call i32 @font_resource_free(%struct.gx_device_pdf_s* %705, %struct.pdf_font_resource_s* %706) #7
  %707 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %pres691, align 8, !tbaa !1
  %next702 = getelementptr inbounds %struct.pdf_resource_s, %struct.pdf_resource_s* %707, i32 0, i32 0
  %708 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %next702, align 8, !tbaa !161
  store %struct.pdf_resource_s* %708, %struct.pdf_resource_s** %pres691, align 8, !tbaa !1
  %709 = bitcast %struct.pdf_font_resource_s** %pdfont to i8*
  call void @llvm.lifetime.end(i64 8, i8* %709) #2
  br label %for.cond.697

for.end.703:                                      ; preds = %for.cond.697
  %710 = bitcast %struct.pdf_resource_s** %pres691 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %710) #2
  br label %for.inc.704

for.inc.704:                                      ; preds = %for.end.703
  %711 = load i32, i32* %j680, align 4, !tbaa !54
  %inc705 = add nsw i32 %711, 1
  store i32 %inc705, i32* %j680, align 4, !tbaa !54
  br label %for.cond.682

for.end.706:                                      ; preds = %land.end.688
  %712 = bitcast i32* %code681 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %712) #2
  %713 = bitcast i32* %j680 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %713) #2
  %714 = bitcast i32* %j707 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %714) #2
  %715 = bitcast i32* %code708 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %715) #2
  store i32 0, i32* %code708, align 4, !tbaa !54
  store i32 0, i32* %j707, align 4, !tbaa !54
  br label %for.cond.709

for.cond.709:                                     ; preds = %for.inc.732, %for.end.706
  %716 = load i32, i32* %j707, align 4, !tbaa !54
  %cmp710 = icmp slt i32 %716, 16
  br i1 %cmp710, label %land.rhs.712, label %land.end.715

land.rhs.712:                                     ; preds = %for.cond.709
  %717 = load i32, i32* %code708, align 4, !tbaa !54
  %cmp713 = icmp sge i32 %717, 0
  br label %land.end.715

land.end.715:                                     ; preds = %land.rhs.712, %for.cond.709
  %718 = phi i1 [ false, %for.cond.709 ], [ %cmp713, %land.rhs.712 ]
  br i1 %718, label %for.body.717, label %for.end.734

for.body.717:                                     ; preds = %land.end.715
  %719 = bitcast %struct.pdf_resource_s** %pres718 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %719) #2
  %720 = load i32, i32* %j707, align 4, !tbaa !54
  %idxprom719 = sext i32 %720 to i64
  %721 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %resources720 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %721, i32 0, i32 165
  %arrayidx721 = getelementptr inbounds [15 x %struct.pdf_resource_list_s], [15 x %struct.pdf_resource_list_s]* %resources720, i32 0, i64 8
  %chains722 = getelementptr inbounds %struct.pdf_resource_list_s, %struct.pdf_resource_list_s* %arrayidx721, i32 0, i32 0
  %arrayidx723 = getelementptr inbounds [16 x %struct.pdf_resource_s*], [16 x %struct.pdf_resource_s*]* %chains722, i32 0, i64 %idxprom719
  %722 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %arrayidx723, align 8, !tbaa !1
  store %struct.pdf_resource_s* %722, %struct.pdf_resource_s** %pres718, align 8, !tbaa !1
  br label %for.cond.724

for.cond.724:                                     ; preds = %for.body.727, %for.body.717
  %723 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %pres718, align 8, !tbaa !1
  %cmp725 = icmp ne %struct.pdf_resource_s* %723, null
  br i1 %cmp725, label %for.body.727, label %for.end.731

for.body.727:                                     ; preds = %for.cond.724
  %724 = bitcast %struct.pdf_font_resource_s** %pdfont728 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %724) #2
  %725 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %pres718, align 8, !tbaa !1
  %726 = bitcast %struct.pdf_resource_s* %725 to %struct.pdf_font_resource_s*
  store %struct.pdf_font_resource_s* %726, %struct.pdf_font_resource_s** %pdfont728, align 8, !tbaa !1
  %727 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %728 = load %struct.pdf_font_resource_s*, %struct.pdf_font_resource_s** %pdfont728, align 8, !tbaa !1
  %call729 = call i32 @font_resource_free(%struct.gx_device_pdf_s* %727, %struct.pdf_font_resource_s* %728) #7
  %729 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %pres718, align 8, !tbaa !1
  %next730 = getelementptr inbounds %struct.pdf_resource_s, %struct.pdf_resource_s* %729, i32 0, i32 0
  %730 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %next730, align 8, !tbaa !161
  store %struct.pdf_resource_s* %730, %struct.pdf_resource_s** %pres718, align 8, !tbaa !1
  %731 = bitcast %struct.pdf_font_resource_s** %pdfont728 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %731) #2
  br label %for.cond.724

for.end.731:                                      ; preds = %for.cond.724
  %732 = bitcast %struct.pdf_resource_s** %pres718 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %732) #2
  br label %for.inc.732

for.inc.732:                                      ; preds = %for.end.731
  %733 = load i32, i32* %j707, align 4, !tbaa !54
  %inc733 = add nsw i32 %733, 1
  store i32 %inc733, i32* %j707, align 4, !tbaa !54
  br label %for.cond.709

for.end.734:                                      ; preds = %land.end.715
  %734 = bitcast i32* %code708 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %734) #2
  %735 = bitcast i32* %j707 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %735) #2
  %736 = bitcast i32* %j735 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %736) #2
  %737 = bitcast i32* %code736 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %737) #2
  store i32 0, i32* %code736, align 4, !tbaa !54
  store i32 0, i32* %j735, align 4, !tbaa !54
  br label %for.cond.737

for.cond.737:                                     ; preds = %for.inc.759, %for.end.734
  %738 = load i32, i32* %j735, align 4, !tbaa !54
  %cmp738 = icmp slt i32 %738, 16
  br i1 %cmp738, label %land.rhs.740, label %land.end.743

land.rhs.740:                                     ; preds = %for.cond.737
  %739 = load i32, i32* %code736, align 4, !tbaa !54
  %cmp741 = icmp sge i32 %739, 0
  br label %land.end.743

land.end.743:                                     ; preds = %land.rhs.740, %for.cond.737
  %740 = phi i1 [ false, %for.cond.737 ], [ %cmp741, %land.rhs.740 ]
  br i1 %740, label %for.body.745, label %for.end.761

for.body.745:                                     ; preds = %land.end.743
  %741 = bitcast %struct.pdf_resource_s** %pres746 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %741) #2
  %742 = load i32, i32* %j735, align 4, !tbaa !54
  %idxprom747 = sext i32 %742 to i64
  %743 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %resources748 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %743, i32 0, i32 165
  %arrayidx749 = getelementptr inbounds [15 x %struct.pdf_resource_list_s], [15 x %struct.pdf_resource_list_s]* %resources748, i32 0, i64 10
  %chains750 = getelementptr inbounds %struct.pdf_resource_list_s, %struct.pdf_resource_list_s* %arrayidx749, i32 0, i32 0
  %arrayidx751 = getelementptr inbounds [16 x %struct.pdf_resource_s*], [16 x %struct.pdf_resource_s*]* %chains750, i32 0, i64 %idxprom747
  %744 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %arrayidx751, align 8, !tbaa !1
  store %struct.pdf_resource_s* %744, %struct.pdf_resource_s** %pres746, align 8, !tbaa !1
  br label %for.cond.752

for.cond.752:                                     ; preds = %for.body.755, %for.body.745
  %745 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %pres746, align 8, !tbaa !1
  %cmp753 = icmp ne %struct.pdf_resource_s* %745, null
  br i1 %cmp753, label %for.body.755, label %for.end.758

for.body.755:                                     ; preds = %for.cond.752
  %746 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %747 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %pres746, align 8, !tbaa !1
  %call756 = call i32 @pdf_font_descriptor_free(%struct.gx_device_pdf_s* %746, %struct.pdf_resource_s* %747) #7
  %748 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %pres746, align 8, !tbaa !1
  %next757 = getelementptr inbounds %struct.pdf_resource_s, %struct.pdf_resource_s* %748, i32 0, i32 0
  %749 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %next757, align 8, !tbaa !161
  store %struct.pdf_resource_s* %749, %struct.pdf_resource_s** %pres746, align 8, !tbaa !1
  br label %for.cond.752

for.end.758:                                      ; preds = %for.cond.752
  %750 = bitcast %struct.pdf_resource_s** %pres746 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %750) #2
  br label %for.inc.759

for.inc.759:                                      ; preds = %for.end.758
  %751 = load i32, i32* %j735, align 4, !tbaa !54
  %inc760 = add nsw i32 %751, 1
  store i32 %inc760, i32* %j735, align 4, !tbaa !54
  br label %for.cond.737

for.end.761:                                      ; preds = %land.end.743
  %752 = bitcast i32* %code736 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %752) #2
  %753 = bitcast i32* %j735 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %753) #2
  %754 = bitcast i32* %j762 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %754) #2
  %755 = bitcast i32* %code763 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %755) #2
  store i32 0, i32* %code763, align 4, !tbaa !54
  store i32 0, i32* %j762, align 4, !tbaa !54
  br label %for.cond.764

for.cond.764:                                     ; preds = %for.inc.795, %for.end.761
  %756 = load i32, i32* %j762, align 4, !tbaa !54
  %cmp765 = icmp slt i32 %756, 16
  br i1 %cmp765, label %land.rhs.767, label %land.end.770

land.rhs.767:                                     ; preds = %for.cond.764
  %757 = load i32, i32* %code763, align 4, !tbaa !54
  %cmp768 = icmp sge i32 %757, 0
  br label %land.end.770

land.end.770:                                     ; preds = %land.rhs.767, %for.cond.764
  %758 = phi i1 [ false, %for.cond.764 ], [ %cmp768, %land.rhs.767 ]
  br i1 %758, label %for.body.772, label %for.end.797

for.body.772:                                     ; preds = %land.end.770
  %759 = bitcast %struct.pdf_resource_s** %pres773 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %759) #2
  %760 = load i32, i32* %j762, align 4, !tbaa !54
  %idxprom774 = sext i32 %760 to i64
  %761 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %resources775 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %761, i32 0, i32 165
  %arrayidx776 = getelementptr inbounds [15 x %struct.pdf_resource_list_s], [15 x %struct.pdf_resource_list_s]* %resources775, i32 0, i64 7
  %chains777 = getelementptr inbounds %struct.pdf_resource_list_s, %struct.pdf_resource_list_s* %arrayidx776, i32 0, i32 0
  %arrayidx778 = getelementptr inbounds [16 x %struct.pdf_resource_s*], [16 x %struct.pdf_resource_s*]* %chains777, i32 0, i64 %idxprom774
  %762 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %arrayidx778, align 8, !tbaa !1
  store %struct.pdf_resource_s* %762, %struct.pdf_resource_s** %pres773, align 8, !tbaa !1
  br label %for.cond.779

for.cond.779:                                     ; preds = %if.end.792, %for.body.772
  %763 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %pres773, align 8, !tbaa !1
  %cmp780 = icmp ne %struct.pdf_resource_s* %763, null
  br i1 %cmp780, label %for.body.782, label %for.end.794

for.body.782:                                     ; preds = %for.cond.779
  %764 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %pres773, align 8, !tbaa !1
  %object783 = getelementptr inbounds %struct.pdf_resource_s, %struct.pdf_resource_s* %764, i32 0, i32 7
  %765 = load %struct.cos_object_s*, %struct.cos_object_s** %object783, align 8, !tbaa !150
  %tobool784 = icmp ne %struct.cos_object_s* %765, null
  br i1 %tobool784, label %if.then.785, label %if.end.792

if.then.785:                                      ; preds = %for.body.782
  %766 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %v_memory786 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %766, i32 0, i32 43
  %767 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory786, align 8, !tbaa !52
  %procs787 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %767, i32 0, i32 1
  %free_object788 = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs787, i32 0, i32 2
  %768 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %free_object788, align 8, !tbaa !138
  %769 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %v_memory789 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %769, i32 0, i32 43
  %770 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory789, align 8, !tbaa !52
  %771 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %pres773, align 8, !tbaa !1
  %object790 = getelementptr inbounds %struct.pdf_resource_s, %struct.pdf_resource_s* %771, i32 0, i32 7
  %772 = load %struct.cos_object_s*, %struct.cos_object_s** %object790, align 8, !tbaa !150
  %773 = bitcast %struct.cos_object_s* %772 to i8*
  call void %768(%struct.gs_memory_s* %770, i8* %773, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.106, i32 0, i32 0)) #7
  %774 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %pres773, align 8, !tbaa !1
  %object791 = getelementptr inbounds %struct.pdf_resource_s, %struct.pdf_resource_s* %774, i32 0, i32 7
  store %struct.cos_object_s* null, %struct.cos_object_s** %object791, align 8, !tbaa !150
  br label %if.end.792

if.end.792:                                       ; preds = %if.then.785, %for.body.782
  %775 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %pres773, align 8, !tbaa !1
  %next793 = getelementptr inbounds %struct.pdf_resource_s, %struct.pdf_resource_s* %775, i32 0, i32 0
  %776 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %next793, align 8, !tbaa !161
  store %struct.pdf_resource_s* %776, %struct.pdf_resource_s** %pres773, align 8, !tbaa !1
  br label %for.cond.779

for.end.794:                                      ; preds = %for.cond.779
  %777 = bitcast %struct.pdf_resource_s** %pres773 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %777) #2
  br label %for.inc.795

for.inc.795:                                      ; preds = %for.end.794
  %778 = load i32, i32* %j762, align 4, !tbaa !54
  %inc796 = add nsw i32 %778, 1
  store i32 %inc796, i32* %j762, align 4, !tbaa !54
  br label %for.cond.764

for.end.797:                                      ; preds = %land.end.770
  %779 = bitcast i32* %code763 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %779) #2
  %780 = bitcast i32* %j762 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %780) #2
  %781 = bitcast i32* %j798 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %781) #2
  %782 = bitcast i32* %code799 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %782) #2
  store i32 0, i32* %code799, align 4, !tbaa !54
  store i32 0, i32* %j798, align 4, !tbaa !54
  br label %for.cond.800

for.cond.800:                                     ; preds = %for.inc.822, %for.end.797
  %783 = load i32, i32* %j798, align 4, !tbaa !54
  %cmp801 = icmp slt i32 %783, 16
  br i1 %cmp801, label %land.rhs.803, label %land.end.806

land.rhs.803:                                     ; preds = %for.cond.800
  %784 = load i32, i32* %code799, align 4, !tbaa !54
  %cmp804 = icmp sge i32 %784, 0
  br label %land.end.806

land.end.806:                                     ; preds = %land.rhs.803, %for.cond.800
  %785 = phi i1 [ false, %for.cond.800 ], [ %cmp804, %land.rhs.803 ]
  br i1 %785, label %for.body.808, label %for.end.824

for.body.808:                                     ; preds = %land.end.806
  %786 = bitcast %struct.pdf_resource_s** %pres809 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %786) #2
  %787 = load i32, i32* %j798, align 4, !tbaa !54
  %idxprom810 = sext i32 %787 to i64
  %788 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %resources811 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %788, i32 0, i32 165
  %arrayidx812 = getelementptr inbounds [15 x %struct.pdf_resource_list_s], [15 x %struct.pdf_resource_list_s]* %resources811, i32 0, i64 0
  %chains813 = getelementptr inbounds %struct.pdf_resource_list_s, %struct.pdf_resource_list_s* %arrayidx812, i32 0, i32 0
  %arrayidx814 = getelementptr inbounds [16 x %struct.pdf_resource_s*], [16 x %struct.pdf_resource_s*]* %chains813, i32 0, i64 %idxprom810
  %789 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %arrayidx814, align 8, !tbaa !1
  store %struct.pdf_resource_s* %789, %struct.pdf_resource_s** %pres809, align 8, !tbaa !1
  br label %for.cond.815

for.cond.815:                                     ; preds = %for.body.818, %for.body.808
  %790 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %pres809, align 8, !tbaa !1
  %cmp816 = icmp ne %struct.pdf_resource_s* %790, null
  br i1 %cmp816, label %for.body.818, label %for.end.821

for.body.818:                                     ; preds = %for.cond.815
  %791 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %792 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %pres809, align 8, !tbaa !1
  %call819 = call i32 @free_color_space(%struct.gx_device_pdf_s* %791, %struct.pdf_resource_s* %792) #7
  %793 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %pres809, align 8, !tbaa !1
  %next820 = getelementptr inbounds %struct.pdf_resource_s, %struct.pdf_resource_s* %793, i32 0, i32 0
  %794 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %next820, align 8, !tbaa !161
  store %struct.pdf_resource_s* %794, %struct.pdf_resource_s** %pres809, align 8, !tbaa !1
  br label %for.cond.815

for.end.821:                                      ; preds = %for.cond.815
  %795 = bitcast %struct.pdf_resource_s** %pres809 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %795) #2
  br label %for.inc.822

for.inc.822:                                      ; preds = %for.end.821
  %796 = load i32, i32* %j798, align 4, !tbaa !54
  %inc823 = add nsw i32 %796, 1
  store i32 %inc823, i32* %j798, align 4, !tbaa !54
  br label %for.cond.800

for.end.824:                                      ; preds = %land.end.806
  %797 = bitcast i32* %code799 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %797) #2
  %798 = bitcast i32* %j798 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %798) #2
  %799 = bitcast i32* %j825 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %799) #2
  %800 = bitcast i32* %code826 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %800) #2
  store i32 0, i32* %code826, align 4, !tbaa !54
  store i32 0, i32* %j825, align 4, !tbaa !54
  br label %for.cond.827

for.cond.827:                                     ; preds = %for.inc.859, %for.end.824
  %801 = load i32, i32* %j825, align 4, !tbaa !54
  %cmp828 = icmp slt i32 %801, 16
  br i1 %cmp828, label %land.rhs.830, label %land.end.833

land.rhs.830:                                     ; preds = %for.cond.827
  %802 = load i32, i32* %code826, align 4, !tbaa !54
  %cmp831 = icmp sge i32 %802, 0
  br label %land.end.833

land.end.833:                                     ; preds = %land.rhs.830, %for.cond.827
  %803 = phi i1 [ false, %for.cond.827 ], [ %cmp831, %land.rhs.830 ]
  br i1 %803, label %for.body.835, label %for.end.861

for.body.835:                                     ; preds = %land.end.833
  %804 = bitcast %struct.pdf_resource_s** %pres836 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %804) #2
  %805 = load i32, i32* %j825, align 4, !tbaa !54
  %idxprom837 = sext i32 %805 to i64
  %806 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %resources838 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %806, i32 0, i32 165
  %arrayidx839 = getelementptr inbounds [15 x %struct.pdf_resource_list_s], [15 x %struct.pdf_resource_list_s]* %resources838, i32 0, i64 1
  %chains840 = getelementptr inbounds %struct.pdf_resource_list_s, %struct.pdf_resource_list_s* %arrayidx839, i32 0, i32 0
  %arrayidx841 = getelementptr inbounds [16 x %struct.pdf_resource_s*], [16 x %struct.pdf_resource_s*]* %chains840, i32 0, i64 %idxprom837
  %807 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %arrayidx841, align 8, !tbaa !1
  store %struct.pdf_resource_s* %807, %struct.pdf_resource_s** %pres836, align 8, !tbaa !1
  br label %for.cond.842

for.cond.842:                                     ; preds = %if.end.856, %for.body.835
  %808 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %pres836, align 8, !tbaa !1
  %cmp843 = icmp ne %struct.pdf_resource_s* %808, null
  br i1 %cmp843, label %for.body.845, label %for.end.858

for.body.845:                                     ; preds = %for.cond.842
  %809 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %pres836, align 8, !tbaa !1
  %object846 = getelementptr inbounds %struct.pdf_resource_s, %struct.pdf_resource_s* %809, i32 0, i32 7
  %810 = load %struct.cos_object_s*, %struct.cos_object_s** %object846, align 8, !tbaa !150
  %tobool847 = icmp ne %struct.cos_object_s* %810, null
  br i1 %tobool847, label %if.then.848, label %if.end.856

if.then.848:                                      ; preds = %for.body.845
  %811 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %pres836, align 8, !tbaa !1
  %object849 = getelementptr inbounds %struct.pdf_resource_s, %struct.pdf_resource_s* %811, i32 0, i32 7
  %812 = load %struct.cos_object_s*, %struct.cos_object_s** %object849, align 8, !tbaa !150
  call void @cos_release(%struct.cos_object_s* %812, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.107, i32 0, i32 0)) #7
  %813 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %v_memory850 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %813, i32 0, i32 43
  %814 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory850, align 8, !tbaa !52
  %procs851 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %814, i32 0, i32 1
  %free_object852 = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs851, i32 0, i32 2
  %815 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %free_object852, align 8, !tbaa !138
  %816 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %v_memory853 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %816, i32 0, i32 43
  %817 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory853, align 8, !tbaa !52
  %818 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %pres836, align 8, !tbaa !1
  %object854 = getelementptr inbounds %struct.pdf_resource_s, %struct.pdf_resource_s* %818, i32 0, i32 7
  %819 = load %struct.cos_object_s*, %struct.cos_object_s** %object854, align 8, !tbaa !150
  %820 = bitcast %struct.cos_object_s* %819 to i8*
  call void %815(%struct.gs_memory_s* %817, i8* %820, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.108, i32 0, i32 0)) #7
  %821 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %pres836, align 8, !tbaa !1
  %object855 = getelementptr inbounds %struct.pdf_resource_s, %struct.pdf_resource_s* %821, i32 0, i32 7
  store %struct.cos_object_s* null, %struct.cos_object_s** %object855, align 8, !tbaa !150
  br label %if.end.856

if.end.856:                                       ; preds = %if.then.848, %for.body.845
  %822 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %pres836, align 8, !tbaa !1
  %next857 = getelementptr inbounds %struct.pdf_resource_s, %struct.pdf_resource_s* %822, i32 0, i32 0
  %823 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %next857, align 8, !tbaa !161
  store %struct.pdf_resource_s* %823, %struct.pdf_resource_s** %pres836, align 8, !tbaa !1
  br label %for.cond.842

for.end.858:                                      ; preds = %for.cond.842
  %824 = bitcast %struct.pdf_resource_s** %pres836 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %824) #2
  br label %for.inc.859

for.inc.859:                                      ; preds = %for.end.858
  %825 = load i32, i32* %j825, align 4, !tbaa !54
  %inc860 = add nsw i32 %825, 1
  store i32 %inc860, i32* %j825, align 4, !tbaa !54
  br label %for.cond.827

for.end.861:                                      ; preds = %land.end.833
  %826 = bitcast i32* %code826 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %826) #2
  %827 = bitcast i32* %j825 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %827) #2
  %828 = bitcast i32* %j862 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %828) #2
  %829 = bitcast i32* %code863 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %829) #2
  store i32 0, i32* %code863, align 4, !tbaa !54
  store i32 0, i32* %j862, align 4, !tbaa !54
  br label %for.cond.864

for.cond.864:                                     ; preds = %for.inc.896, %for.end.861
  %830 = load i32, i32* %j862, align 4, !tbaa !54
  %cmp865 = icmp slt i32 %830, 16
  br i1 %cmp865, label %land.rhs.867, label %land.end.870

land.rhs.867:                                     ; preds = %for.cond.864
  %831 = load i32, i32* %code863, align 4, !tbaa !54
  %cmp868 = icmp sge i32 %831, 0
  br label %land.end.870

land.end.870:                                     ; preds = %land.rhs.867, %for.cond.864
  %832 = phi i1 [ false, %for.cond.864 ], [ %cmp868, %land.rhs.867 ]
  br i1 %832, label %for.body.872, label %for.end.898

for.body.872:                                     ; preds = %land.end.870
  %833 = bitcast %struct.pdf_resource_s** %pres873 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %833) #2
  %834 = load i32, i32* %j862, align 4, !tbaa !54
  %idxprom874 = sext i32 %834 to i64
  %835 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %resources875 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %835, i32 0, i32 165
  %arrayidx876 = getelementptr inbounds [15 x %struct.pdf_resource_list_s], [15 x %struct.pdf_resource_list_s]* %resources875, i32 0, i64 2
  %chains877 = getelementptr inbounds %struct.pdf_resource_list_s, %struct.pdf_resource_list_s* %arrayidx876, i32 0, i32 0
  %arrayidx878 = getelementptr inbounds [16 x %struct.pdf_resource_s*], [16 x %struct.pdf_resource_s*]* %chains877, i32 0, i64 %idxprom874
  %836 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %arrayidx878, align 8, !tbaa !1
  store %struct.pdf_resource_s* %836, %struct.pdf_resource_s** %pres873, align 8, !tbaa !1
  br label %for.cond.879

for.cond.879:                                     ; preds = %if.end.893, %for.body.872
  %837 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %pres873, align 8, !tbaa !1
  %cmp880 = icmp ne %struct.pdf_resource_s* %837, null
  br i1 %cmp880, label %for.body.882, label %for.end.895

for.body.882:                                     ; preds = %for.cond.879
  %838 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %pres873, align 8, !tbaa !1
  %object883 = getelementptr inbounds %struct.pdf_resource_s, %struct.pdf_resource_s* %838, i32 0, i32 7
  %839 = load %struct.cos_object_s*, %struct.cos_object_s** %object883, align 8, !tbaa !150
  %tobool884 = icmp ne %struct.cos_object_s* %839, null
  br i1 %tobool884, label %if.then.885, label %if.end.893

if.then.885:                                      ; preds = %for.body.882
  %840 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %pres873, align 8, !tbaa !1
  %object886 = getelementptr inbounds %struct.pdf_resource_s, %struct.pdf_resource_s* %840, i32 0, i32 7
  %841 = load %struct.cos_object_s*, %struct.cos_object_s** %object886, align 8, !tbaa !150
  call void @cos_release(%struct.cos_object_s* %841, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.109, i32 0, i32 0)) #7
  %842 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %v_memory887 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %842, i32 0, i32 43
  %843 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory887, align 8, !tbaa !52
  %procs888 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %843, i32 0, i32 1
  %free_object889 = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs888, i32 0, i32 2
  %844 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %free_object889, align 8, !tbaa !138
  %845 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %v_memory890 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %845, i32 0, i32 43
  %846 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory890, align 8, !tbaa !52
  %847 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %pres873, align 8, !tbaa !1
  %object891 = getelementptr inbounds %struct.pdf_resource_s, %struct.pdf_resource_s* %847, i32 0, i32 7
  %848 = load %struct.cos_object_s*, %struct.cos_object_s** %object891, align 8, !tbaa !150
  %849 = bitcast %struct.cos_object_s* %848 to i8*
  call void %844(%struct.gs_memory_s* %846, i8* %849, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.110, i32 0, i32 0)) #7
  %850 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %pres873, align 8, !tbaa !1
  %object892 = getelementptr inbounds %struct.pdf_resource_s, %struct.pdf_resource_s* %850, i32 0, i32 7
  store %struct.cos_object_s* null, %struct.cos_object_s** %object892, align 8, !tbaa !150
  br label %if.end.893

if.end.893:                                       ; preds = %if.then.885, %for.body.882
  %851 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %pres873, align 8, !tbaa !1
  %next894 = getelementptr inbounds %struct.pdf_resource_s, %struct.pdf_resource_s* %851, i32 0, i32 0
  %852 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %next894, align 8, !tbaa !161
  store %struct.pdf_resource_s* %852, %struct.pdf_resource_s** %pres873, align 8, !tbaa !1
  br label %for.cond.879

for.end.895:                                      ; preds = %for.cond.879
  %853 = bitcast %struct.pdf_resource_s** %pres873 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %853) #2
  br label %for.inc.896

for.inc.896:                                      ; preds = %for.end.895
  %854 = load i32, i32* %j862, align 4, !tbaa !54
  %inc897 = add nsw i32 %854, 1
  store i32 %inc897, i32* %j862, align 4, !tbaa !54
  br label %for.cond.864

for.end.898:                                      ; preds = %land.end.870
  %855 = bitcast i32* %code863 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %855) #2
  %856 = bitcast i32* %j862 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %856) #2
  %857 = bitcast i32* %j899 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %857) #2
  %858 = bitcast i32* %code900 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %858) #2
  store i32 0, i32* %code900, align 4, !tbaa !54
  store i32 0, i32* %j899, align 4, !tbaa !54
  br label %for.cond.901

for.cond.901:                                     ; preds = %for.inc.933, %for.end.898
  %859 = load i32, i32* %j899, align 4, !tbaa !54
  %cmp902 = icmp slt i32 %859, 16
  br i1 %cmp902, label %land.rhs.904, label %land.end.907

land.rhs.904:                                     ; preds = %for.cond.901
  %860 = load i32, i32* %code900, align 4, !tbaa !54
  %cmp905 = icmp sge i32 %860, 0
  br label %land.end.907

land.end.907:                                     ; preds = %land.rhs.904, %for.cond.901
  %861 = phi i1 [ false, %for.cond.901 ], [ %cmp905, %land.rhs.904 ]
  br i1 %861, label %for.body.909, label %for.end.935

for.body.909:                                     ; preds = %land.end.907
  %862 = bitcast %struct.pdf_resource_s** %pres910 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %862) #2
  %863 = load i32, i32* %j899, align 4, !tbaa !54
  %idxprom911 = sext i32 %863 to i64
  %864 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %resources912 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %864, i32 0, i32 165
  %arrayidx913 = getelementptr inbounds [15 x %struct.pdf_resource_list_s], [15 x %struct.pdf_resource_list_s]* %resources912, i32 0, i64 3
  %chains914 = getelementptr inbounds %struct.pdf_resource_list_s, %struct.pdf_resource_list_s* %arrayidx913, i32 0, i32 0
  %arrayidx915 = getelementptr inbounds [16 x %struct.pdf_resource_s*], [16 x %struct.pdf_resource_s*]* %chains914, i32 0, i64 %idxprom911
  %865 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %arrayidx915, align 8, !tbaa !1
  store %struct.pdf_resource_s* %865, %struct.pdf_resource_s** %pres910, align 8, !tbaa !1
  br label %for.cond.916

for.cond.916:                                     ; preds = %if.end.930, %for.body.909
  %866 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %pres910, align 8, !tbaa !1
  %cmp917 = icmp ne %struct.pdf_resource_s* %866, null
  br i1 %cmp917, label %for.body.919, label %for.end.932

for.body.919:                                     ; preds = %for.cond.916
  %867 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %pres910, align 8, !tbaa !1
  %object920 = getelementptr inbounds %struct.pdf_resource_s, %struct.pdf_resource_s* %867, i32 0, i32 7
  %868 = load %struct.cos_object_s*, %struct.cos_object_s** %object920, align 8, !tbaa !150
  %tobool921 = icmp ne %struct.cos_object_s* %868, null
  br i1 %tobool921, label %if.then.922, label %if.end.930

if.then.922:                                      ; preds = %for.body.919
  %869 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %pres910, align 8, !tbaa !1
  %object923 = getelementptr inbounds %struct.pdf_resource_s, %struct.pdf_resource_s* %869, i32 0, i32 7
  %870 = load %struct.cos_object_s*, %struct.cos_object_s** %object923, align 8, !tbaa !150
  call void @cos_release(%struct.cos_object_s* %870, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.111, i32 0, i32 0)) #7
  %871 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %v_memory924 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %871, i32 0, i32 43
  %872 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory924, align 8, !tbaa !52
  %procs925 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %872, i32 0, i32 1
  %free_object926 = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs925, i32 0, i32 2
  %873 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %free_object926, align 8, !tbaa !138
  %874 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %v_memory927 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %874, i32 0, i32 43
  %875 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory927, align 8, !tbaa !52
  %876 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %pres910, align 8, !tbaa !1
  %object928 = getelementptr inbounds %struct.pdf_resource_s, %struct.pdf_resource_s* %876, i32 0, i32 7
  %877 = load %struct.cos_object_s*, %struct.cos_object_s** %object928, align 8, !tbaa !150
  %878 = bitcast %struct.cos_object_s* %877 to i8*
  call void %873(%struct.gs_memory_s* %875, i8* %878, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.112, i32 0, i32 0)) #7
  %879 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %pres910, align 8, !tbaa !1
  %object929 = getelementptr inbounds %struct.pdf_resource_s, %struct.pdf_resource_s* %879, i32 0, i32 7
  store %struct.cos_object_s* null, %struct.cos_object_s** %object929, align 8, !tbaa !150
  br label %if.end.930

if.end.930:                                       ; preds = %if.then.922, %for.body.919
  %880 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %pres910, align 8, !tbaa !1
  %next931 = getelementptr inbounds %struct.pdf_resource_s, %struct.pdf_resource_s* %880, i32 0, i32 0
  %881 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %next931, align 8, !tbaa !161
  store %struct.pdf_resource_s* %881, %struct.pdf_resource_s** %pres910, align 8, !tbaa !1
  br label %for.cond.916

for.end.932:                                      ; preds = %for.cond.916
  %882 = bitcast %struct.pdf_resource_s** %pres910 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %882) #2
  br label %for.inc.933

for.inc.933:                                      ; preds = %for.end.932
  %883 = load i32, i32* %j899, align 4, !tbaa !54
  %inc934 = add nsw i32 %883, 1
  store i32 %inc934, i32* %j899, align 4, !tbaa !54
  br label %for.cond.901

for.end.935:                                      ; preds = %land.end.907
  %884 = bitcast i32* %code900 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %884) #2
  %885 = bitcast i32* %j899 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %885) #2
  %886 = bitcast i32* %j936 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %886) #2
  %887 = bitcast i32* %code937 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %887) #2
  store i32 0, i32* %code937, align 4, !tbaa !54
  store i32 0, i32* %j936, align 4, !tbaa !54
  br label %for.cond.938

for.cond.938:                                     ; preds = %for.inc.970, %for.end.935
  %888 = load i32, i32* %j936, align 4, !tbaa !54
  %cmp939 = icmp slt i32 %888, 16
  br i1 %cmp939, label %land.rhs.941, label %land.end.944

land.rhs.941:                                     ; preds = %for.cond.938
  %889 = load i32, i32* %code937, align 4, !tbaa !54
  %cmp942 = icmp sge i32 %889, 0
  br label %land.end.944

land.end.944:                                     ; preds = %land.rhs.941, %for.cond.938
  %890 = phi i1 [ false, %for.cond.938 ], [ %cmp942, %land.rhs.941 ]
  br i1 %890, label %for.body.946, label %for.end.972

for.body.946:                                     ; preds = %land.end.944
  %891 = bitcast %struct.pdf_resource_s** %pres947 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %891) #2
  %892 = load i32, i32* %j936, align 4, !tbaa !54
  %idxprom948 = sext i32 %892 to i64
  %893 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %resources949 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %893, i32 0, i32 165
  %arrayidx950 = getelementptr inbounds [15 x %struct.pdf_resource_list_s], [15 x %struct.pdf_resource_list_s]* %resources949, i32 0, i64 11
  %chains951 = getelementptr inbounds %struct.pdf_resource_list_s, %struct.pdf_resource_list_s* %arrayidx950, i32 0, i32 0
  %arrayidx952 = getelementptr inbounds [16 x %struct.pdf_resource_s*], [16 x %struct.pdf_resource_s*]* %chains951, i32 0, i64 %idxprom948
  %894 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %arrayidx952, align 8, !tbaa !1
  store %struct.pdf_resource_s* %894, %struct.pdf_resource_s** %pres947, align 8, !tbaa !1
  br label %for.cond.953

for.cond.953:                                     ; preds = %if.end.967, %for.body.946
  %895 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %pres947, align 8, !tbaa !1
  %cmp954 = icmp ne %struct.pdf_resource_s* %895, null
  br i1 %cmp954, label %for.body.956, label %for.end.969

for.body.956:                                     ; preds = %for.cond.953
  %896 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %pres947, align 8, !tbaa !1
  %object957 = getelementptr inbounds %struct.pdf_resource_s, %struct.pdf_resource_s* %896, i32 0, i32 7
  %897 = load %struct.cos_object_s*, %struct.cos_object_s** %object957, align 8, !tbaa !150
  %tobool958 = icmp ne %struct.cos_object_s* %897, null
  br i1 %tobool958, label %if.then.959, label %if.end.967

if.then.959:                                      ; preds = %for.body.956
  %898 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %pres947, align 8, !tbaa !1
  %object960 = getelementptr inbounds %struct.pdf_resource_s, %struct.pdf_resource_s* %898, i32 0, i32 7
  %899 = load %struct.cos_object_s*, %struct.cos_object_s** %object960, align 8, !tbaa !150
  call void @cos_release(%struct.cos_object_s* %899, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.113, i32 0, i32 0)) #7
  %900 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %v_memory961 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %900, i32 0, i32 43
  %901 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory961, align 8, !tbaa !52
  %procs962 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %901, i32 0, i32 1
  %free_object963 = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs962, i32 0, i32 2
  %902 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %free_object963, align 8, !tbaa !138
  %903 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %v_memory964 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %903, i32 0, i32 43
  %904 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory964, align 8, !tbaa !52
  %905 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %pres947, align 8, !tbaa !1
  %object965 = getelementptr inbounds %struct.pdf_resource_s, %struct.pdf_resource_s* %905, i32 0, i32 7
  %906 = load %struct.cos_object_s*, %struct.cos_object_s** %object965, align 8, !tbaa !150
  %907 = bitcast %struct.cos_object_s* %906 to i8*
  call void %902(%struct.gs_memory_s* %904, i8* %907, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.114, i32 0, i32 0)) #7
  %908 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %pres947, align 8, !tbaa !1
  %object966 = getelementptr inbounds %struct.pdf_resource_s, %struct.pdf_resource_s* %908, i32 0, i32 7
  store %struct.cos_object_s* null, %struct.cos_object_s** %object966, align 8, !tbaa !150
  br label %if.end.967

if.end.967:                                       ; preds = %if.then.959, %for.body.956
  %909 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %pres947, align 8, !tbaa !1
  %next968 = getelementptr inbounds %struct.pdf_resource_s, %struct.pdf_resource_s* %909, i32 0, i32 0
  %910 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %next968, align 8, !tbaa !161
  store %struct.pdf_resource_s* %910, %struct.pdf_resource_s** %pres947, align 8, !tbaa !1
  br label %for.cond.953

for.end.969:                                      ; preds = %for.cond.953
  %911 = bitcast %struct.pdf_resource_s** %pres947 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %911) #2
  br label %for.inc.970

for.inc.970:                                      ; preds = %for.end.969
  %912 = load i32, i32* %j936, align 4, !tbaa !54
  %inc971 = add nsw i32 %912, 1
  store i32 %inc971, i32* %j936, align 4, !tbaa !54
  br label %for.cond.938

for.end.972:                                      ; preds = %land.end.944
  %913 = bitcast i32* %code937 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %913) #2
  %914 = bitcast i32* %j936 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %914) #2
  %915 = bitcast i32* %j973 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %915) #2
  %916 = bitcast i32* %code974 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %916) #2
  store i32 0, i32* %code974, align 4, !tbaa !54
  store i32 0, i32* %j973, align 4, !tbaa !54
  br label %for.cond.975

for.cond.975:                                     ; preds = %for.inc.1007, %for.end.972
  %917 = load i32, i32* %j973, align 4, !tbaa !54
  %cmp976 = icmp slt i32 %917, 16
  br i1 %cmp976, label %land.rhs.978, label %land.end.981

land.rhs.978:                                     ; preds = %for.cond.975
  %918 = load i32, i32* %code974, align 4, !tbaa !54
  %cmp979 = icmp sge i32 %918, 0
  br label %land.end.981

land.end.981:                                     ; preds = %land.rhs.978, %for.cond.975
  %919 = phi i1 [ false, %for.cond.975 ], [ %cmp979, %land.rhs.978 ]
  br i1 %919, label %for.body.983, label %for.end.1009

for.body.983:                                     ; preds = %land.end.981
  %920 = bitcast %struct.pdf_resource_s** %pnext to i8*
  call void @llvm.lifetime.start(i64 8, i8* %920) #2
  store %struct.pdf_resource_s* null, %struct.pdf_resource_s** %pnext, align 8, !tbaa !1
  %921 = bitcast %struct.pdf_resource_s** %pres984 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %921) #2
  %922 = load i32, i32* %j973, align 4, !tbaa !54
  %idxprom985 = sext i32 %922 to i64
  %923 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %resources986 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %923, i32 0, i32 165
  %arrayidx987 = getelementptr inbounds [15 x %struct.pdf_resource_list_s], [15 x %struct.pdf_resource_list_s]* %resources986, i32 0, i64 13
  %chains988 = getelementptr inbounds %struct.pdf_resource_list_s, %struct.pdf_resource_list_s* %arrayidx987, i32 0, i32 0
  %arrayidx989 = getelementptr inbounds [16 x %struct.pdf_resource_s*], [16 x %struct.pdf_resource_s*]* %chains988, i32 0, i64 %idxprom985
  %924 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %arrayidx989, align 8, !tbaa !1
  store %struct.pdf_resource_s* %924, %struct.pdf_resource_s** %pres984, align 8, !tbaa !1
  br label %for.cond.990

for.cond.990:                                     ; preds = %if.end.1004, %for.body.983
  %925 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %pres984, align 8, !tbaa !1
  %cmp991 = icmp ne %struct.pdf_resource_s* %925, null
  br i1 %cmp991, label %for.body.993, label %for.end.1006

for.body.993:                                     ; preds = %for.cond.990
  %926 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %pres984, align 8, !tbaa !1
  %object994 = getelementptr inbounds %struct.pdf_resource_s, %struct.pdf_resource_s* %926, i32 0, i32 7
  %927 = load %struct.cos_object_s*, %struct.cos_object_s** %object994, align 8, !tbaa !150
  %tobool995 = icmp ne %struct.cos_object_s* %927, null
  br i1 %tobool995, label %if.then.996, label %if.end.1004

if.then.996:                                      ; preds = %for.body.993
  %928 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %pres984, align 8, !tbaa !1
  %object997 = getelementptr inbounds %struct.pdf_resource_s, %struct.pdf_resource_s* %928, i32 0, i32 7
  %929 = load %struct.cos_object_s*, %struct.cos_object_s** %object997, align 8, !tbaa !150
  call void @cos_release(%struct.cos_object_s* %929, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.115, i32 0, i32 0)) #7
  %930 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %v_memory998 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %930, i32 0, i32 43
  %931 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory998, align 8, !tbaa !52
  %procs999 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %931, i32 0, i32 1
  %free_object1000 = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs999, i32 0, i32 2
  %932 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %free_object1000, align 8, !tbaa !138
  %933 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %v_memory1001 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %933, i32 0, i32 43
  %934 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory1001, align 8, !tbaa !52
  %935 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %pres984, align 8, !tbaa !1
  %object1002 = getelementptr inbounds %struct.pdf_resource_s, %struct.pdf_resource_s* %935, i32 0, i32 7
  %936 = load %struct.cos_object_s*, %struct.cos_object_s** %object1002, align 8, !tbaa !150
  %937 = bitcast %struct.cos_object_s* %936 to i8*
  call void %932(%struct.gs_memory_s* %934, i8* %937, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.116, i32 0, i32 0)) #7
  %938 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %pres984, align 8, !tbaa !1
  %object1003 = getelementptr inbounds %struct.pdf_resource_s, %struct.pdf_resource_s* %938, i32 0, i32 7
  store %struct.cos_object_s* null, %struct.cos_object_s** %object1003, align 8, !tbaa !150
  br label %if.end.1004

if.end.1004:                                      ; preds = %if.then.996, %for.body.993
  %939 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %pres984, align 8, !tbaa !1
  %next1005 = getelementptr inbounds %struct.pdf_resource_s, %struct.pdf_resource_s* %939, i32 0, i32 0
  %940 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %next1005, align 8, !tbaa !161
  store %struct.pdf_resource_s* %940, %struct.pdf_resource_s** %pnext, align 8, !tbaa !1
  %941 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %pnext, align 8, !tbaa !1
  store %struct.pdf_resource_s* %941, %struct.pdf_resource_s** %pres984, align 8, !tbaa !1
  br label %for.cond.990

for.end.1006:                                     ; preds = %for.cond.990
  %942 = bitcast %struct.pdf_resource_s** %pres984 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %942) #2
  %943 = bitcast %struct.pdf_resource_s** %pnext to i8*
  call void @llvm.lifetime.end(i64 8, i8* %943) #2
  br label %for.inc.1007

for.inc.1007:                                     ; preds = %for.end.1006
  %944 = load i32, i32* %j973, align 4, !tbaa !54
  %inc1008 = add nsw i32 %944, 1
  store i32 %inc1008, i32* %j973, align 4, !tbaa !54
  br label %for.cond.975

for.end.1009:                                     ; preds = %land.end.981
  %945 = bitcast i32* %code974 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %945) #2
  %946 = bitcast i32* %j973 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %946) #2
  %947 = bitcast i32* %i1010 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %947) #2
  %948 = bitcast i32* %j1011 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %948) #2
  store i32 0, i32* %i1010, align 4, !tbaa !54
  br label %for.cond.1012

for.cond.1012:                                    ; preds = %for.inc.1034, %for.end.1009
  %949 = load i32, i32* %i1010, align 4, !tbaa !54
  %cmp1013 = icmp slt i32 %949, 15
  br i1 %cmp1013, label %for.body.1015, label %for.end.1036

for.body.1015:                                    ; preds = %for.cond.1012
  store i32 0, i32* %j1011, align 4, !tbaa !54
  br label %for.cond.1016

for.cond.1016:                                    ; preds = %for.inc.1031, %for.body.1015
  %950 = load i32, i32* %j1011, align 4, !tbaa !54
  %cmp1017 = icmp slt i32 %950, 16
  br i1 %cmp1017, label %land.rhs.1019, label %land.end.1022

land.rhs.1019:                                    ; preds = %for.cond.1016
  %951 = load i32, i32* %code, align 4, !tbaa !54
  %cmp1020 = icmp sge i32 %951, 0
  br label %land.end.1022

land.end.1022:                                    ; preds = %land.rhs.1019, %for.cond.1016
  %952 = phi i1 [ false, %for.cond.1016 ], [ %cmp1020, %land.rhs.1019 ]
  br i1 %952, label %for.body.1024, label %for.end.1033

for.body.1024:                                    ; preds = %land.end.1022
  %953 = load i32, i32* %j1011, align 4, !tbaa !54
  %idxprom1025 = sext i32 %953 to i64
  %954 = load i32, i32* %i1010, align 4, !tbaa !54
  %idxprom1026 = sext i32 %954 to i64
  %955 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %resources1027 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %955, i32 0, i32 165
  %arrayidx1028 = getelementptr inbounds [15 x %struct.pdf_resource_list_s], [15 x %struct.pdf_resource_list_s]* %resources1027, i32 0, i64 %idxprom1026
  %chains1029 = getelementptr inbounds %struct.pdf_resource_list_s, %struct.pdf_resource_list_s* %arrayidx1028, i32 0, i32 0
  %arrayidx1030 = getelementptr inbounds [16 x %struct.pdf_resource_s*], [16 x %struct.pdf_resource_s*]* %chains1029, i32 0, i64 %idxprom1025
  store %struct.pdf_resource_s* null, %struct.pdf_resource_s** %arrayidx1030, align 8, !tbaa !1
  br label %for.inc.1031

for.inc.1031:                                     ; preds = %for.body.1024
  %956 = load i32, i32* %j1011, align 4, !tbaa !54
  %inc1032 = add nsw i32 %956, 1
  store i32 %inc1032, i32* %j1011, align 4, !tbaa !54
  br label %for.cond.1016

for.end.1033:                                     ; preds = %land.end.1022
  br label %for.inc.1034

for.inc.1034:                                     ; preds = %for.end.1033
  %957 = load i32, i32* %i1010, align 4, !tbaa !54
  %inc1035 = add nsw i32 %957, 1
  store i32 %inc1035, i32* %i1010, align 4, !tbaa !54
  br label %for.cond.1012

for.end.1036:                                     ; preds = %for.cond.1012
  %958 = bitcast i32* %j1011 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %958) #2
  %959 = bitcast i32* %i1010 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %959) #2
  %960 = bitcast %struct.pdf_resource_s** %pres1037 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %960) #2
  %961 = bitcast %struct.pdf_resource_s** %prev to i8*
  call void @llvm.lifetime.start(i64 8, i8* %961) #2
  %962 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %last_resource = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %962, i32 0, i32 168
  %963 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %last_resource, align 8, !tbaa !176
  store %struct.pdf_resource_s* %963, %struct.pdf_resource_s** %prev, align 8, !tbaa !1
  br label %for.cond.1038

for.cond.1038:                                    ; preds = %for.body.1041, %for.end.1036
  %964 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %prev, align 8, !tbaa !1
  store %struct.pdf_resource_s* %964, %struct.pdf_resource_s** %pres1037, align 8, !tbaa !1
  %cmp1039 = icmp ne %struct.pdf_resource_s* %964, null
  br i1 %cmp1039, label %for.body.1041, label %for.end.1045

for.body.1041:                                    ; preds = %for.cond.1038
  %965 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %pres1037, align 8, !tbaa !1
  %prev1042 = getelementptr inbounds %struct.pdf_resource_s, %struct.pdf_resource_s* %965, i32 0, i32 1
  %966 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %prev1042, align 8, !tbaa !177
  store %struct.pdf_resource_s* %966, %struct.pdf_resource_s** %prev, align 8, !tbaa !1
  %967 = load %struct.gs_memory_s*, %struct.gs_memory_s** %mem, align 8, !tbaa !1
  %procs1043 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %967, i32 0, i32 1
  %free_object1044 = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs1043, i32 0, i32 2
  %968 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %free_object1044, align 8, !tbaa !138
  %969 = load %struct.gs_memory_s*, %struct.gs_memory_s** %mem, align 8, !tbaa !1
  %970 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %pres1037, align 8, !tbaa !1
  %971 = bitcast %struct.pdf_resource_s* %970 to i8*
  call void %968(%struct.gs_memory_s* %969, i8* %971, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.117, i32 0, i32 0)) #7
  br label %for.cond.1038

for.end.1045:                                     ; preds = %for.cond.1038
  %972 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %last_resource1046 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %972, i32 0, i32 168
  store %struct.pdf_resource_s* null, %struct.pdf_resource_s** %last_resource1046, align 8, !tbaa !176
  %973 = bitcast %struct.pdf_resource_s** %prev to i8*
  call void @llvm.lifetime.end(i64 8, i8* %973) #2
  %974 = bitcast %struct.pdf_resource_s** %pres1037 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %974) #2
  %975 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %NI_stack = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %975, i32 0, i32 183
  %976 = load %struct.cos_array_s*, %struct.cos_array_s** %NI_stack, align 8, !tbaa !63
  %977 = bitcast %struct.cos_array_s* %976 to %struct.cos_object_s*
  call void @cos_release(%struct.cos_object_s* %977, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.118, i32 0, i32 0)) #7
  %978 = load %struct.gs_memory_s*, %struct.gs_memory_s** %mem, align 8, !tbaa !1
  %procs1047 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %978, i32 0, i32 1
  %free_object1048 = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs1047, i32 0, i32 2
  %979 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %free_object1048, align 8, !tbaa !138
  %980 = load %struct.gs_memory_s*, %struct.gs_memory_s** %mem, align 8, !tbaa !1
  %981 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %NI_stack1049 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %981, i32 0, i32 183
  %982 = load %struct.cos_array_s*, %struct.cos_array_s** %NI_stack1049, align 8, !tbaa !63
  %983 = bitcast %struct.cos_array_s* %982 to i8*
  call void %979(%struct.gs_memory_s* %980, i8* %983, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.119, i32 0, i32 0)) #7
  %984 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %NI_stack1050 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %984, i32 0, i32 183
  store %struct.cos_array_s* null, %struct.cos_array_s** %NI_stack1050, align 8, !tbaa !63
  %985 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %local_named_objects1051 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %985, i32 0, i32 182
  %986 = load %struct.cos_dict_s*, %struct.cos_dict_s** %local_named_objects1051, align 8, !tbaa !62
  %call1052 = call i32 @cos_dict_objects_delete(%struct.cos_dict_s* %986) #7
  %987 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %local_named_objects1053 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %987, i32 0, i32 182
  %988 = load %struct.cos_dict_s*, %struct.cos_dict_s** %local_named_objects1053, align 8, !tbaa !62
  %cos_procs1054 = getelementptr inbounds %struct.cos_dict_s, %struct.cos_dict_s* %988, i32 0, i32 0
  %989 = bitcast %struct.cos_object_procs_s** %cos_procs1054 to %struct.cos_object_s*
  call void @cos_free(%struct.cos_object_s* %989, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.120, i32 0, i32 0)) #7
  %990 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %local_named_objects1055 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %990, i32 0, i32 182
  store %struct.cos_dict_s* null, %struct.cos_dict_s** %local_named_objects1055, align 8, !tbaa !62
  %991 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %global_named_objects1056 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %991, i32 0, i32 181
  %992 = load %struct.cos_dict_s*, %struct.cos_dict_s** %global_named_objects1056, align 8, !tbaa !61
  %call1057 = call i32 @cos_dict_objects_delete(%struct.cos_dict_s* %992) #7
  %993 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %global_named_objects1058 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %993, i32 0, i32 181
  %994 = load %struct.cos_dict_s*, %struct.cos_dict_s** %global_named_objects1058, align 8, !tbaa !61
  %cos_procs1059 = getelementptr inbounds %struct.cos_dict_s, %struct.cos_dict_s* %994, i32 0, i32 0
  %995 = bitcast %struct.cos_object_procs_s** %cos_procs1059 to %struct.cos_object_s*
  call void @cos_free(%struct.cos_object_s* %995, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.121, i32 0, i32 0)) #7
  %996 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %global_named_objects1060 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %996, i32 0, i32 181
  store %struct.cos_dict_s* null, %struct.cos_dict_s** %global_named_objects1060, align 8, !tbaa !61
  %997 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %font_cache = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %997, i32 0, i32 185
  store %struct.pdf_font_cache_elem_s* null, %struct.pdf_font_cache_elem_s** %font_cache, align 8, !tbaa !178
  %998 = bitcast i32* %i1061 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %998) #2
  store i32 0, i32* %i1061, align 4, !tbaa !54
  br label %for.cond.1062

for.cond.1062:                                    ; preds = %for.inc.1093, %for.end.1045
  %999 = load i32, i32* %i1061, align 4, !tbaa !54
  %1000 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %next_page1063 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %1000, i32 0, i32 153
  %1001 = load i32, i32* %next_page1063, align 4, !tbaa !72
  %cmp1064 = icmp slt i32 %999, %1001
  br i1 %cmp1064, label %for.body.1066, label %for.end.1095

for.body.1066:                                    ; preds = %for.cond.1062
  %1002 = load i32, i32* %i1061, align 4, !tbaa !54
  %idxprom1067 = sext i32 %1002 to i64
  %1003 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %pages1068 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %1003, i32 0, i32 162
  %1004 = load %struct.pdf_page_s*, %struct.pdf_page_s** %pages1068, align 8, !tbaa !77
  %arrayidx1069 = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %1004, i64 %idxprom1067
  %Page1070 = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %arrayidx1069, i32 0, i32 0
  %1005 = load %struct.cos_dict_s*, %struct.cos_dict_s** %Page1070, align 8, !tbaa !125
  %1006 = bitcast %struct.cos_dict_s* %1005 to %struct.cos_object_s*
  call void @cos_release(%struct.cos_object_s* %1006, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.122, i32 0, i32 0)) #7
  %1007 = load i32, i32* %i1061, align 4, !tbaa !54
  %idxprom1071 = sext i32 %1007 to i64
  %1008 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %pages1072 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %1008, i32 0, i32 162
  %1009 = load %struct.pdf_page_s*, %struct.pdf_page_s** %pages1072, align 8, !tbaa !77
  %arrayidx1073 = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %1009, i64 %idxprom1071
  %Annots = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %arrayidx1073, i32 0, i32 6
  %1010 = load %struct.cos_array_s*, %struct.cos_array_s** %Annots, align 8, !tbaa !179
  %tobool1074 = icmp ne %struct.cos_array_s* %1010, null
  br i1 %tobool1074, label %if.then.1075, label %if.end.1086

if.then.1075:                                     ; preds = %for.body.1066
  %1011 = load i32, i32* %i1061, align 4, !tbaa !54
  %idxprom1076 = sext i32 %1011 to i64
  %1012 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %pages1077 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %1012, i32 0, i32 162
  %1013 = load %struct.pdf_page_s*, %struct.pdf_page_s** %pages1077, align 8, !tbaa !77
  %arrayidx1078 = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %1013, i64 %idxprom1076
  %Annots1079 = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %arrayidx1078, i32 0, i32 6
  %1014 = load %struct.cos_array_s*, %struct.cos_array_s** %Annots1079, align 8, !tbaa !179
  %1015 = bitcast %struct.cos_array_s* %1014 to %struct.cos_object_s*
  call void @cos_release(%struct.cos_object_s* %1015, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.123, i32 0, i32 0)) #7
  %1016 = load %struct.gs_memory_s*, %struct.gs_memory_s** %mem, align 8, !tbaa !1
  %procs1080 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %1016, i32 0, i32 1
  %free_object1081 = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs1080, i32 0, i32 2
  %1017 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %free_object1081, align 8, !tbaa !138
  %1018 = load %struct.gs_memory_s*, %struct.gs_memory_s** %mem, align 8, !tbaa !1
  %1019 = load i32, i32* %i1061, align 4, !tbaa !54
  %idxprom1082 = sext i32 %1019 to i64
  %1020 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %pages1083 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %1020, i32 0, i32 162
  %1021 = load %struct.pdf_page_s*, %struct.pdf_page_s** %pages1083, align 8, !tbaa !77
  %arrayidx1084 = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %1021, i64 %idxprom1082
  %Annots1085 = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %arrayidx1084, i32 0, i32 6
  %1022 = load %struct.cos_array_s*, %struct.cos_array_s** %Annots1085, align 8, !tbaa !179
  %1023 = bitcast %struct.cos_array_s* %1022 to i8*
  call void %1017(%struct.gs_memory_s* %1018, i8* %1023, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.124, i32 0, i32 0)) #7
  br label %if.end.1086

if.end.1086:                                      ; preds = %if.then.1075, %for.body.1066
  %1024 = load %struct.gs_memory_s*, %struct.gs_memory_s** %mem, align 8, !tbaa !1
  %procs1087 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %1024, i32 0, i32 1
  %free_object1088 = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs1087, i32 0, i32 2
  %1025 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %free_object1088, align 8, !tbaa !138
  %1026 = load %struct.gs_memory_s*, %struct.gs_memory_s** %mem, align 8, !tbaa !1
  %1027 = load i32, i32* %i1061, align 4, !tbaa !54
  %idxprom1089 = sext i32 %1027 to i64
  %1028 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %pages1090 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %1028, i32 0, i32 162
  %1029 = load %struct.pdf_page_s*, %struct.pdf_page_s** %pages1090, align 8, !tbaa !77
  %arrayidx1091 = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %1029, i64 %idxprom1089
  %Page1092 = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %arrayidx1091, i32 0, i32 0
  %1030 = load %struct.cos_dict_s*, %struct.cos_dict_s** %Page1092, align 8, !tbaa !125
  %1031 = bitcast %struct.cos_dict_s* %1030 to i8*
  call void %1025(%struct.gs_memory_s* %1026, i8* %1031, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.125, i32 0, i32 0)) #7
  br label %for.inc.1093

for.inc.1093:                                     ; preds = %if.end.1086
  %1032 = load i32, i32* %i1061, align 4, !tbaa !54
  %inc1094 = add nsw i32 %1032, 1
  store i32 %inc1094, i32* %i1061, align 4, !tbaa !54
  br label %for.cond.1062

for.end.1095:                                     ; preds = %for.cond.1062
  %1033 = bitcast i32* %i1061 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %1033) #2
  %1034 = load %struct.gs_memory_s*, %struct.gs_memory_s** %mem, align 8, !tbaa !1
  %procs1096 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %1034, i32 0, i32 1
  %free_object1097 = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs1096, i32 0, i32 2
  %1035 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %free_object1097, align 8, !tbaa !138
  %1036 = load %struct.gs_memory_s*, %struct.gs_memory_s** %mem, align 8, !tbaa !1
  %1037 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %pages1098 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %1037, i32 0, i32 162
  %1038 = load %struct.pdf_page_s*, %struct.pdf_page_s** %pages1098, align 8, !tbaa !77
  %1039 = bitcast %struct.pdf_page_s* %1038 to i8*
  call void %1035(%struct.gs_memory_s* %1036, i8* %1039, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.126, i32 0, i32 0)) #7
  %1040 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %pages1099 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %1040, i32 0, i32 162
  store %struct.pdf_page_s* null, %struct.pdf_page_s** %pages1099, align 8, !tbaa !77
  %1041 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %num_pages = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %1041, i32 0, i32 163
  store i32 0, i32* %num_pages, align 4, !tbaa !78
  %1042 = load %struct.gs_memory_s*, %struct.gs_memory_s** %mem, align 8, !tbaa !1
  %procs1100 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %1042, i32 0, i32 1
  %free_object1101 = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs1100, i32 0, i32 2
  %1043 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %free_object1101, align 8, !tbaa !138
  %1044 = load %struct.gs_memory_s*, %struct.gs_memory_s** %mem, align 8, !tbaa !1
  %1045 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %sbstack = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %1045, i32 0, i32 200
  %1046 = load %struct.pdf_substream_save_s*, %struct.pdf_substream_save_s** %sbstack, align 8, !tbaa !76
  %1047 = bitcast %struct.pdf_substream_save_s* %1046 to i8*
  call void %1043(%struct.gs_memory_s* %1044, i8* %1047, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.127, i32 0, i32 0)) #7
  %1048 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %sbstack1102 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %1048, i32 0, i32 200
  store %struct.pdf_substream_save_s* null, %struct.pdf_substream_save_s** %sbstack1102, align 8, !tbaa !76
  %1049 = load %struct.gs_memory_s*, %struct.gs_memory_s** %mem, align 8, !tbaa !1
  %1050 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %text = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %1050, i32 0, i32 160
  %1051 = load %struct.pdf_text_data_s*, %struct.pdf_text_data_s** %text, align 8, !tbaa !73
  %call1103 = call i32 @text_data_free(%struct.gs_memory_s* %1049, %struct.pdf_text_data_s* %1051) #7
  %1052 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %text1104 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %1052, i32 0, i32 160
  store %struct.pdf_text_data_s* null, %struct.pdf_text_data_s** %text1104, align 8, !tbaa !73
  %1053 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %Pages1105 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %1053, i32 0, i32 151
  %1054 = load %struct.cos_dict_s*, %struct.cos_dict_s** %Pages1105, align 8, !tbaa !113
  %1055 = bitcast %struct.cos_dict_s* %1054 to %struct.cos_object_s*
  call void @cos_release(%struct.cos_object_s* %1055, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.128, i32 0, i32 0)) #7
  %1056 = load %struct.gs_memory_s*, %struct.gs_memory_s** %mem, align 8, !tbaa !1
  %procs1106 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %1056, i32 0, i32 1
  %free_object1107 = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs1106, i32 0, i32 2
  %1057 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %free_object1107, align 8, !tbaa !138
  %1058 = load %struct.gs_memory_s*, %struct.gs_memory_s** %mem, align 8, !tbaa !1
  %1059 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %Pages1108 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %1059, i32 0, i32 151
  %1060 = load %struct.cos_dict_s*, %struct.cos_dict_s** %Pages1108, align 8, !tbaa !113
  %1061 = bitcast %struct.cos_dict_s* %1060 to i8*
  call void %1057(%struct.gs_memory_s* %1058, i8* %1061, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.129, i32 0, i32 0)) #7
  %1062 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %Pages1109 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %1062, i32 0, i32 151
  store %struct.cos_dict_s* null, %struct.cos_dict_s** %Pages1109, align 8, !tbaa !113
  %1063 = bitcast i32* %i1110 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1063) #2
  store i32 0, i32* %i1110, align 4, !tbaa !54
  br label %for.cond.1111

for.cond.1111:                                    ; preds = %for.inc.1122, %for.end.1095
  %1064 = load i32, i32* %i1110, align 4, !tbaa !54
  %1065 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %vgstack_depth = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %1065, i32 0, i32 194
  %1066 = load i32, i32* %vgstack_depth, align 4, !tbaa !180
  %cmp1112 = icmp slt i32 %1064, %1066
  br i1 %cmp1112, label %for.body.1114, label %for.end.1124

for.body.1114:                                    ; preds = %for.cond.1111
  %1067 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %memory1115 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %1067, i32 0, i32 3
  %1068 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory1115, align 8, !tbaa !5
  %non_gc_memory = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %1068, i32 0, i32 3
  %1069 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory, align 8, !tbaa !181
  %procs1116 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %1069, i32 0, i32 1
  %free_object1117 = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs1116, i32 0, i32 2
  %1070 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %free_object1117, align 8, !tbaa !138
  %1071 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %memory1118 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %1071, i32 0, i32 3
  %1072 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory1118, align 8, !tbaa !5
  %non_gc_memory1119 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %1072, i32 0, i32 3
  %1073 = load %struct.gs_memory_s*, %struct.gs_memory_s** %non_gc_memory1119, align 8, !tbaa !181
  %1074 = load i32, i32* %i1110, align 4, !tbaa !54
  %idxprom1120 = sext i32 %1074 to i64
  %1075 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %vgstack = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %1075, i32 0, i32 192
  %1076 = load %struct.pdf_viewer_state_s*, %struct.pdf_viewer_state_s** %vgstack, align 8, !tbaa !65
  %arrayidx1121 = getelementptr inbounds %struct.pdf_viewer_state_s, %struct.pdf_viewer_state_s* %1076, i64 %idxprom1120
  %dash_pattern = getelementptr inbounds %struct.pdf_viewer_state_s, %struct.pdf_viewer_state_s* %arrayidx1121, i32 0, i32 20
  %1077 = load float*, float** %dash_pattern, align 8, !tbaa !182
  %1078 = bitcast float* %1077 to i8*
  call void %1070(%struct.gs_memory_s* %1073, i8* %1078, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.130, i32 0, i32 0)) #7
  br label %for.inc.1122

for.inc.1122:                                     ; preds = %for.body.1114
  %1079 = load i32, i32* %i1110, align 4, !tbaa !54
  %inc1123 = add nsw i32 %1079, 1
  store i32 %inc1123, i32* %i1110, align 4, !tbaa !54
  br label %for.cond.1111

for.end.1124:                                     ; preds = %for.cond.1111
  %1080 = bitcast i32* %i1110 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %1080) #2
  %1081 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %v_memory1125 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %1081, i32 0, i32 43
  %1082 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory1125, align 8, !tbaa !52
  %procs1126 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %1082, i32 0, i32 1
  %free_object1127 = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs1126, i32 0, i32 2
  %1083 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %free_object1127, align 8, !tbaa !138
  %1084 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %v_memory1128 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %1084, i32 0, i32 43
  %1085 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory1128, align 8, !tbaa !52
  %1086 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %vgstack1129 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %1086, i32 0, i32 192
  %1087 = load %struct.pdf_viewer_state_s*, %struct.pdf_viewer_state_s** %vgstack1129, align 8, !tbaa !65
  %1088 = bitcast %struct.pdf_viewer_state_s* %1087 to i8*
  call void %1083(%struct.gs_memory_s* %1085, i8* %1088, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.131, i32 0, i32 0)) #7
  %1089 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %Namespace_stack = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %1089, i32 0, i32 184
  %1090 = load %struct.cos_array_s*, %struct.cos_array_s** %Namespace_stack, align 8, !tbaa !67
  %1091 = bitcast %struct.cos_array_s* %1090 to %struct.cos_object_s*
  call void @cos_release(%struct.cos_object_s* %1091, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.132, i32 0, i32 0)) #7
  %1092 = load %struct.gs_memory_s*, %struct.gs_memory_s** %mem, align 8, !tbaa !1
  %procs1130 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %1092, i32 0, i32 1
  %free_object1131 = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs1130, i32 0, i32 2
  %1093 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %free_object1131, align 8, !tbaa !138
  %1094 = load %struct.gs_memory_s*, %struct.gs_memory_s** %mem, align 8, !tbaa !1
  %1095 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %Namespace_stack1132 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %1095, i32 0, i32 184
  %1096 = load %struct.cos_array_s*, %struct.cos_array_s** %Namespace_stack1132, align 8, !tbaa !67
  %1097 = bitcast %struct.cos_array_s* %1096 to i8*
  call void %1093(%struct.gs_memory_s* %1094, i8* %1097, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.133, i32 0, i32 0)) #7
  %1098 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %Namespace_stack1133 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %1098, i32 0, i32 184
  store %struct.cos_array_s* null, %struct.cos_array_s** %Namespace_stack1133, align 8, !tbaa !67
  %1099 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %Catalog1134 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %1099, i32 0, i32 149
  store %struct.cos_dict_s* null, %struct.cos_dict_s** %Catalog1134, align 8, !tbaa !108
  %1100 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %Info1135 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %1100, i32 0, i32 150
  store %struct.cos_dict_s* null, %struct.cos_dict_s** %Info1135, align 8, !tbaa !112
  %1101 = load %struct.gs_memory_s*, %struct.gs_memory_s** %mem, align 8, !tbaa !1
  %procs1136 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %1101, i32 0, i32 1
  %free_object1137 = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs1136, i32 0, i32 2
  %1102 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %free_object1137, align 8, !tbaa !138
  %1103 = load %struct.gs_memory_s*, %struct.gs_memory_s** %mem, align 8, !tbaa !1
  %1104 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %outline_levels1138 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %1104, i32 0, i32 171
  %1105 = load %struct.pdf_outline_level_s*, %struct.pdf_outline_level_s** %outline_levels1138, align 8, !tbaa !79
  %1106 = bitcast %struct.pdf_outline_level_s* %1105 to i8*
  call void %1102(%struct.gs_memory_s* %1103, i8* %1106, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.29, i32 0, i32 0)) #7
  %1107 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %outline_levels1139 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %1107, i32 0, i32 171
  store %struct.pdf_outline_level_s* null, %struct.pdf_outline_level_s** %outline_levels1139, align 8, !tbaa !79
  %1108 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %outline_depth1140 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %1108, i32 0, i32 172
  store i32 -1, i32* %outline_depth1140, align 4, !tbaa !87
  %1109 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %max_outline_depth = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %1109, i32 0, i32 173
  store i32 0, i32* %max_outline_depth, align 4, !tbaa !80
  %1110 = bitcast i32* %status to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1110) #2
  %1111 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %ProduceDSC1141 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %1111, i32 0, i32 105
  %1112 = load i32, i32* %ProduceDSC1141, align 4, !tbaa !122
  %tobool1142 = icmp ne i32 %1112, 0
  br i1 %tobool1142, label %if.end.1145, label %if.then.1143

if.then.1143:                                     ; preds = %for.end.1124
  %1113 = load %struct.stream_s*, %struct.stream_s** %s, align 8, !tbaa !1
  %call1144 = call i32 @spputc(%struct.stream_s* %1113, i8 zeroext 4) #7
  br label %if.end.1145

if.end.1145:                                      ; preds = %if.then.1143, %for.end.1124
  br label %while.cond.1146

while.cond.1146:                                  ; preds = %while.body.1149, %if.end.1145
  %1114 = load %struct.stream_s*, %struct.stream_s** %s, align 8, !tbaa !1
  %strm1147 = getelementptr inbounds %struct.stream_s, %struct.stream_s* %1114, i32 0, i32 15
  %1115 = load %struct.stream_s*, %struct.stream_s** %strm1147, align 8, !tbaa !183
  %tobool1148 = icmp ne %struct.stream_s* %1115, null
  br i1 %tobool1148, label %while.body.1149, label %while.end.1151

while.body.1149:                                  ; preds = %while.cond.1146
  %1116 = load %struct.stream_s*, %struct.stream_s** %s, align 8, !tbaa !1
  %strm1150 = getelementptr inbounds %struct.stream_s, %struct.stream_s* %1116, i32 0, i32 15
  %1117 = load %struct.stream_s*, %struct.stream_s** %strm1150, align 8, !tbaa !183
  store %struct.stream_s* %1117, %struct.stream_s** %s, align 8, !tbaa !1
  br label %while.cond.1146

while.end.1151:                                   ; preds = %while.cond.1146
  %1118 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %strm1152 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %1118, i32 0, i32 47
  %1119 = load %struct.stream_s*, %struct.stream_s** %s, align 8, !tbaa !1
  %call1153 = call i32 @s_close_filters(%struct.stream_s** %strm1152, %struct.stream_s* %1119) #7
  store i32 %call1153, i32* %status, align 4, !tbaa !54
  %1120 = load i32, i32* %status, align 4, !tbaa !54
  %cmp1154 = icmp slt i32 %1120, 0
  br i1 %cmp1154, label %land.lhs.true.1156, label %if.end.1160

land.lhs.true.1156:                               ; preds = %while.end.1151
  %1121 = load i32, i32* %code, align 4, !tbaa !54
  %cmp1157 = icmp eq i32 %1121, 0
  br i1 %cmp1157, label %if.then.1159, label %if.end.1160

if.then.1159:                                     ; preds = %land.lhs.true.1156
  store i32 -12, i32* %code, align 4, !tbaa !54
  br label %if.end.1160

if.end.1160:                                      ; preds = %if.then.1159, %land.lhs.true.1156, %while.end.1151
  %1122 = bitcast i32* %status to i8*
  call void @llvm.lifetime.end(i64 4, i8* %1122) #2
  %1123 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %1124 = bitcast %struct.gx_device_pdf_s* %1123 to %struct.gx_device_vector_s*
  %call1161 = call i32 @gdev_vector_close_file(%struct.gx_device_vector_s* %1124) #7
  store i32 %call1161, i32* %code1, align 4, !tbaa !54
  %1125 = load i32, i32* %code, align 4, !tbaa !54
  %cmp1162 = icmp sge i32 %1125, 0
  br i1 %cmp1162, label %if.then.1164, label %if.end.1165

if.then.1164:                                     ; preds = %if.end.1160
  %1126 = load i32, i32* %code1, align 4, !tbaa !54
  store i32 %1126, i32* %code, align 4, !tbaa !54
  br label %if.end.1165

if.end.1165:                                      ; preds = %if.then.1164, %if.end.1160
  %1127 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %max_referred_page = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %1127, i32 0, i32 154
  %1128 = load i32, i32* %max_referred_page, align 4, !tbaa !184
  %1129 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %next_page1166 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %1129, i32 0, i32 153
  %1130 = load i32, i32* %next_page1166, align 4, !tbaa !72
  %add1167 = add nsw i32 %1130, 1
  %cmp1168 = icmp sge i32 %1128, %add1167
  br i1 %cmp1168, label %if.then.1170, label %if.end.1178

if.then.1170:                                     ; preds = %if.end.1165
  %1131 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %memory1171 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %1131, i32 0, i32 3
  %1132 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory1171, align 8, !tbaa !5
  %call1172 = call i8* @gs_program_name() #7
  %call1173 = call i64 @gs_revision_number() #7
  call void @emprintf_program_ident(%struct.gs_memory_s* %1132, i8* %call1172, i64 %call1173) #7
  %1133 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %memory1174 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %1133, i32 0, i32 3
  %1134 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory1174, align 8, !tbaa !5
  %1135 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %max_referred_page1175 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %1135, i32 0, i32 154
  %1136 = load i32, i32* %max_referred_page1175, align 4, !tbaa !184
  %1137 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %next_page1176 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %1137, i32 0, i32 153
  %1138 = load i32, i32* %next_page1176, align 4, !tbaa !72
  %call1177 = call i32 (%struct.gs_memory_s*, i8*, ...) @errprintf(%struct.gs_memory_s* %1134, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.134, i32 0, i32 0), i32 %1136, i32 %1138) #7
  br label %if.end.1178

if.end.1178:                                      ; preds = %if.then.1170, %if.end.1165
  %1139 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %1140 = load i32, i32* %code, align 4, !tbaa !54
  %call1179 = call i32 @pdf_close_files(%struct.gx_device_pdf_s* %1139, i32 %1140) #7
  store i32 %call1179, i32* %code, align 4, !tbaa !54
  %1141 = load i32, i32* %code, align 4, !tbaa !54
  %cmp1180 = icmp slt i32 %1141, 0
  br i1 %cmp1180, label %if.then.1182, label %if.end.1183

if.then.1182:                                     ; preds = %if.end.1178
  %1142 = load i32, i32* %code, align 4, !tbaa !54
  store i32 %1142, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.1183:                                      ; preds = %if.end.1178
  %1143 = load i32, i32* %code, align 4, !tbaa !54
  store i32 %1143, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.1183, %if.then.1182, %if.then.612, %if.then.25, %if.end.21, %if.then.20, %if.then.15
  %1144 = bitcast %struct.pdf_linearisation_s* %linear_params to i8*
  call void @llvm.lifetime.end(i64 4680, i8* %1144) #2
  %1145 = bitcast [256 x i8]* %str to i8*
  call void @llvm.lifetime.end(i64 256, i8* %1145) #2
  %1146 = bitcast i64* %end_section to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1146) #2
  %1147 = bitcast i64* %start_section to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1147) #2
  %1148 = bitcast i32* %pagecount to i8*
  call void @llvm.lifetime.end(i64 4, i8* %1148) #2
  %1149 = bitcast i32* %code1 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %1149) #2
  %1150 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %1150) #2
  %1151 = bitcast i32* %partial_page to i8*
  call void @llvm.lifetime.end(i64 4, i8* %1151) #2
  %1152 = bitcast i64* %Threads_id to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1152) #2
  %1153 = bitcast i64* %Encrypt_id to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1153) #2
  %1154 = bitcast i64* %Pages_id to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1154) #2
  %1155 = bitcast i64* %Info_id to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1155) #2
  %1156 = bitcast i64* %Catalog_id to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1156) #2
  %1157 = bitcast i64* %resource_pos to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1157) #2
  %1158 = bitcast i64* %xref1 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1158) #2
  %1159 = bitcast %struct._IO_FILE** %tfile to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1159) #2
  %1160 = bitcast %struct.stream_s** %s to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1160) #2
  %1161 = bitcast %struct.gs_memory_s** %mem to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1161) #2
  %1162 = bitcast %struct.gx_device_pdf_s** %pdev to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1162) #2
  %1163 = load i32, i32* %retval
  ret i32 %1163
}

declare i64 @gx_default_rgb_map_rgb_color(%struct.gx_device_s*, i16*) #0

declare i32 @gx_default_rgb_map_color_rgb(%struct.gx_device_s*, i64, i16*) #0

declare i32 @gdev_pdf_fill_rectangle(%struct.gx_device_s*, i32, i32, i32, i32, i64) #0

declare i32 @gdev_pdf_copy_mono(%struct.gx_device_s*, i8*, i32, i32, i64, i32, i32, i32, i32, i64, i64) #0

declare i32 @gdev_pdf_copy_color(%struct.gx_device_s*, i8*, i32, i32, i64, i32, i32, i32, i32) #0

declare i32 @psdf_get_bits(%struct.gx_device_s*, i32, i8*, i8**) #0

declare i32 @gdev_pdf_get_params(%struct.gx_device_s*, %struct.gs_param_list_s*) #0

declare i32 @gdev_pdf_put_params(%struct.gx_device_s*, %struct.gs_param_list_s*) #0

declare %struct.gx_device_s* @gx_page_device_get_page_device(%struct.gx_device_s*) #0

declare i32 @gdev_pdf_fill_path(%struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gx_path_s*, %struct.gx_fill_params_s*, %struct.gx_device_color_s*, %struct.gx_clip_path_s*) #0

declare i32 @gdev_pdf_stroke_path(%struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gx_path_s*, %struct.gx_stroke_params_s*, %struct.gx_device_color_s*, %struct.gx_clip_path_s*) #0

declare i32 @gdev_pdf_fill_mask(%struct.gx_device_s*, i8*, i32, i32, i64, i32, i32, i32, i32, %struct.gx_device_color_s*, i32, i32, %struct.gx_clip_path_s*) #0

declare i32 @gdev_pdf_strip_tile_rectangle(%struct.gx_device_s*, %struct.gx_strip_bitmap_s*, i32, i32, i32, i32, i64, i64, i32, i32) #0

declare i32 @gdev_pdf_begin_typed_image(%struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gs_matrix_s*, %struct.gs_image_common_s*, %struct.gs_int_rect_s*, %struct.gx_device_color_s*, %struct.gx_clip_path_s*, %struct.gs_memory_s*, %struct.gx_image_enum_common_s**) #0

declare i32 @psdf_get_bits_rectangle(%struct.gx_device_s*, %struct.gs_int_rect_s*, %struct.gs_get_bits_params_s*, %struct.gs_int_rect_s**) #0

declare i32 @gdev_pdf_create_compositor(%struct.gx_device_s*, %struct.gx_device_s**, %struct.gs_composite_s*, %struct.gs_imager_state_s*, %struct.gs_memory_s*, %struct.gx_device_s*) #0

declare i32 @gdev_pdf_text_begin(%struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gs_text_params_s*, %struct.gs_font_s*, %struct.gx_path_s*, %struct.gx_device_color_s*, %struct.gx_clip_path_s*, %struct.gs_memory_s*, %struct.gs_text_enum_s**) #0

declare i32 @gdev_pdf_begin_transparency_group(%struct.gx_device_s*, %struct.gs_transparency_group_params_s*, %struct.gs_rect_s*, %struct.gs_imager_state_s*, %struct.gs_memory_s*) #0

declare i32 @gdev_pdf_end_transparency_group(%struct.gx_device_s*, %struct.gs_imager_state_s*) #0

declare i32 @gdev_pdf_begin_transparency_mask(%struct.gx_device_s*, %struct.gx_transparency_mask_params_s*, %struct.gs_rect_s*, %struct.gs_imager_state_s*, %struct.gs_memory_s*) #0

declare i32 @gdev_pdf_end_transparency_mask(%struct.gx_device_s*, %struct.gs_imager_state_s*) #0

declare i32 @gdev_pdf_fill_rectangle_hl_color(%struct.gx_device_s*, %struct.gs_fixed_rect_s*, %struct.gs_imager_state_s*, %struct.gx_device_color_s*, %struct.gx_clip_path_s*) #0

declare i32 @gdev_pdf_include_color_space(%struct.gx_device_s*, %struct.gs_color_space_s*, i8*, i32) #0

declare i32 @gdev_pdf_fillpage(%struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gx_device_color_s*) #0

declare i32 @gdev_pdf_dev_spec_op(%struct.gx_device_s*, i32, i8*, i32) #0

; Function Attrs: nounwind uwtable
define void @pdf_initialize_ids(%struct.gx_device_pdf_s* %pdev) #1 {
entry:
  %pdev.addr = alloca %struct.gx_device_pdf_s*, align 8
  %nstr = alloca %struct.gs_param_string_s, align 8
  %buf = alloca [200 x i8], align 16
  %tms = alloca %struct.tm, align 8
  %t = alloca i64, align 8
  %buf16 = alloca [26 x i8], align 16
  %timeoffset = alloca i32, align 4
  %timesign = alloca i8, align 1
  store %struct.gx_device_pdf_s* %pdev, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %0 = bitcast %struct.gs_param_string_s* %nstr to i8*
  call void @llvm.lifetime.start(i64 16, i8* %0) #2
  %1 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %FirstObjectNumber = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %1, i32 0, i32 93
  %2 = load i64, i64* %FirstObjectNumber, align 8, !tbaa !169
  %3 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %next_id = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %3, i32 0, i32 148
  store i64 %2, i64* %next_id, align 8, !tbaa !163
  %data = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %nstr, i32 0, i32 0
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.6, i32 0, i32 0), i8** %data, align 8, !tbaa !158
  %data1 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %nstr, i32 0, i32 0
  %4 = load i8*, i8** %data1, align 8, !tbaa !158
  %call = call i64 @strlen(i8* %4) #9
  %conv = trunc i64 %call to i32
  %size = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %nstr, i32 0, i32 1
  store i32 %conv, i32* %size, align 4, !tbaa !159
  %persistent = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %nstr, i32 0, i32 2
  store i32 1, i32* %persistent, align 4, !tbaa !185
  %5 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %6 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %Catalog = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %6, i32 0, i32 149
  %call2 = call i32 @pdf_create_named_dict(%struct.gx_device_pdf_s* %5, %struct.gs_param_string_s* %nstr, %struct.cos_dict_s** %Catalog, i64 0) #7
  %data3 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %nstr, i32 0, i32 0
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7, i32 0, i32 0), i8** %data3, align 8, !tbaa !158
  %data4 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %nstr, i32 0, i32 0
  %7 = load i8*, i8** %data4, align 8, !tbaa !158
  %call5 = call i64 @strlen(i8* %7) #9
  %conv6 = trunc i64 %call5 to i32
  %size7 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %nstr, i32 0, i32 1
  store i32 %conv6, i32* %size7, align 4, !tbaa !159
  %persistent8 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %nstr, i32 0, i32 2
  store i32 1, i32* %persistent8, align 4, !tbaa !185
  %8 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %9 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %Info = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %9, i32 0, i32 150
  %call9 = call i32 @pdf_create_named_dict(%struct.gx_device_pdf_s* %8, %struct.gs_param_string_s* %nstr, %struct.cos_dict_s** %Info, i64 0) #7
  %10 = bitcast [200 x i8]* %buf to i8*
  call void @llvm.lifetime.start(i64 200, i8* %10) #2
  %arraydecay = getelementptr inbounds [200 x i8], [200 x i8]* %buf, i32 0, i32 0
  call void @pdf_store_default_Producer(i8* %arraydecay) #7
  %11 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %Info10 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %11, i32 0, i32 150
  %12 = load %struct.cos_dict_s*, %struct.cos_dict_s** %Info10, align 8, !tbaa !112
  %arraydecay11 = getelementptr inbounds [200 x i8], [200 x i8]* %buf, i32 0, i32 0
  %arraydecay12 = getelementptr inbounds [200 x i8], [200 x i8]* %buf, i32 0, i32 0
  %call13 = call i64 @strlen(i8* %arraydecay12) #9
  %conv14 = trunc i64 %call13 to i32
  %call15 = call i32 @cos_dict_put_c_key_string(%struct.cos_dict_s* %12, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i32 0, i32 0), i8* %arraydecay11, i32 %conv14) #7
  %13 = bitcast [200 x i8]* %buf to i8*
  call void @llvm.lifetime.end(i64 200, i8* %13) #2
  %14 = bitcast %struct.tm* %tms to i8*
  call void @llvm.lifetime.start(i64 56, i8* %14) #2
  %15 = bitcast i64* %t to i8*
  call void @llvm.lifetime.start(i64 8, i8* %15) #2
  %16 = bitcast [26 x i8]* %buf16 to i8*
  call void @llvm.lifetime.start(i64 26, i8* %16) #2
  %17 = bitcast i32* %timeoffset to i8*
  call void @llvm.lifetime.start(i64 4, i8* %17) #2
  call void @llvm.lifetime.start(i64 1, i8* %timesign) #2
  %call17 = call i64 @time(i64* %t) #8
  %call18 = call %struct.tm* @gmtime(i64* %t) #8
  %18 = bitcast %struct.tm* %tms to i8*
  %19 = bitcast %struct.tm* %call18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %18, i8* %19, i64 56, i32 8, i1 false), !tbaa.struct !186
  %tm_isdst = getelementptr inbounds %struct.tm, %struct.tm* %tms, i32 0, i32 8
  store i32 -1, i32* %tm_isdst, align 4, !tbaa !187
  %20 = load i64, i64* %t, align 8, !tbaa !107
  %call19 = call i64 @mktime(%struct.tm* %tms) #8
  %call20 = call double @difftime(i64 %20, i64 %call19) #10
  %conv21 = fptosi double %call20 to i32
  store i32 %conv21, i32* %timeoffset, align 4, !tbaa !54
  %21 = load i32, i32* %timeoffset, align 4, !tbaa !54
  %cmp = icmp eq i32 %21, 0
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  %22 = load i32, i32* %timeoffset, align 4, !tbaa !54
  %cmp23 = icmp slt i32 %22, 0
  %cond = select i1 %cmp23, i32 45, i32 43
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond25 = phi i32 [ 90, %cond.true ], [ %cond, %cond.false ]
  %conv26 = trunc i32 %cond25 to i8
  store i8 %conv26, i8* %timesign, align 1, !tbaa !147
  %23 = load i32, i32* %timeoffset, align 4, !tbaa !54
  %cmp27 = icmp slt i32 %23, 0
  br i1 %cmp27, label %cond.true.29, label %cond.false.30

cond.true.29:                                     ; preds = %cond.end
  %24 = load i32, i32* %timeoffset, align 4, !tbaa !54
  %sub = sub nsw i32 0, %24
  br label %cond.end.31

cond.false.30:                                    ; preds = %cond.end
  %25 = load i32, i32* %timeoffset, align 4, !tbaa !54
  br label %cond.end.31

cond.end.31:                                      ; preds = %cond.false.30, %cond.true.29
  %cond32 = phi i32 [ %sub, %cond.true.29 ], [ %25, %cond.false.30 ]
  %div = sdiv i32 %cond32, 60
  store i32 %div, i32* %timeoffset, align 4, !tbaa !54
  %call33 = call %struct.tm* @localtime(i64* %t) #8
  %26 = bitcast %struct.tm* %tms to i8*
  %27 = bitcast %struct.tm* %call33 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %26, i8* %27, i64 56, i32 8, i1 false), !tbaa.struct !186
  %arraydecay34 = getelementptr inbounds [26 x i8], [26 x i8]* %buf16, i32 0, i32 0
  %tm_year = getelementptr inbounds %struct.tm, %struct.tm* %tms, i32 0, i32 5
  %28 = load i32, i32* %tm_year, align 4, !tbaa !189
  %add = add nsw i32 %28, 1900
  %tm_mon = getelementptr inbounds %struct.tm, %struct.tm* %tms, i32 0, i32 4
  %29 = load i32, i32* %tm_mon, align 4, !tbaa !190
  %add35 = add nsw i32 %29, 1
  %tm_mday = getelementptr inbounds %struct.tm, %struct.tm* %tms, i32 0, i32 3
  %30 = load i32, i32* %tm_mday, align 4, !tbaa !191
  %tm_hour = getelementptr inbounds %struct.tm, %struct.tm* %tms, i32 0, i32 2
  %31 = load i32, i32* %tm_hour, align 4, !tbaa !192
  %tm_min = getelementptr inbounds %struct.tm, %struct.tm* %tms, i32 0, i32 1
  %32 = load i32, i32* %tm_min, align 4, !tbaa !193
  %tm_sec = getelementptr inbounds %struct.tm, %struct.tm* %tms, i32 0, i32 0
  %33 = load i32, i32* %tm_sec, align 4, !tbaa !194
  %34 = load i8, i8* %timesign, align 1, !tbaa !147
  %conv36 = sext i8 %34 to i32
  %35 = load i32, i32* %timeoffset, align 4, !tbaa !54
  %div37 = sdiv i32 %35, 60
  %36 = load i32, i32* %timeoffset, align 4, !tbaa !54
  %rem = srem i32 %36, 60
  %call38 = call i32 (i8*, i8*, ...) @gs_sprintf(i8* %arraydecay34, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.9, i32 0, i32 0), i32 %add, i32 %add35, i32 %30, i32 %31, i32 %32, i32 %33, i32 %conv36, i32 %div37, i32 %rem) #7
  %37 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %Info39 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %37, i32 0, i32 150
  %38 = load %struct.cos_dict_s*, %struct.cos_dict_s** %Info39, align 8, !tbaa !112
  %arraydecay40 = getelementptr inbounds [26 x i8], [26 x i8]* %buf16, i32 0, i32 0
  %arraydecay41 = getelementptr inbounds [26 x i8], [26 x i8]* %buf16, i32 0, i32 0
  %call42 = call i64 @strlen(i8* %arraydecay41) #9
  %conv43 = trunc i64 %call42 to i32
  %call44 = call i32 @cos_dict_put_c_key_string(%struct.cos_dict_s* %38, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.10, i32 0, i32 0), i8* %arraydecay40, i32 %conv43) #7
  %39 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %Info45 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %39, i32 0, i32 150
  %40 = load %struct.cos_dict_s*, %struct.cos_dict_s** %Info45, align 8, !tbaa !112
  %arraydecay46 = getelementptr inbounds [26 x i8], [26 x i8]* %buf16, i32 0, i32 0
  %arraydecay47 = getelementptr inbounds [26 x i8], [26 x i8]* %buf16, i32 0, i32 0
  %call48 = call i64 @strlen(i8* %arraydecay47) #9
  %conv49 = trunc i64 %call48 to i32
  %call50 = call i32 @cos_dict_put_c_key_string(%struct.cos_dict_s* %40, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11, i32 0, i32 0), i8* %arraydecay46, i32 %conv49) #7
  call void @llvm.lifetime.end(i64 1, i8* %timesign) #2
  %41 = bitcast i32* %timeoffset to i8*
  call void @llvm.lifetime.end(i64 4, i8* %41) #2
  %42 = bitcast [26 x i8]* %buf16 to i8*
  call void @llvm.lifetime.end(i64 26, i8* %42) #2
  %43 = bitcast i64* %t to i8*
  call void @llvm.lifetime.end(i64 8, i8* %43) #2
  %44 = bitcast %struct.tm* %tms to i8*
  call void @llvm.lifetime.end(i64 56, i8* %44) #2
  %45 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %46 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %Pages = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %46, i32 0, i32 151
  %call51 = call i32 @pdf_create_named_dict(%struct.gx_device_pdf_s* %45, %struct.gs_param_string_s* null, %struct.cos_dict_s** %Pages, i64 0) #7
  %47 = bitcast %struct.gs_param_string_s* %nstr to i8*
  call void @llvm.lifetime.end(i64 16, i8* %47) #2
  ret void
}

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #2

; Function Attrs: nounwind readonly
declare i64 @strlen(i8*) #3

declare i32 @pdf_create_named_dict(%struct.gx_device_pdf_s*, %struct.gs_param_string_s*, %struct.cos_dict_s**, i64) #0

declare void @pdf_store_default_Producer(i8*) #0

declare i32 @cos_dict_put_c_key_string(%struct.cos_dict_s*, i8*, i8*, i32) #0

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #2

; Function Attrs: nounwind
declare i64 @time(i64*) #4

; Function Attrs: nounwind
declare %struct.tm* @gmtime(i64*) #4

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #2

; Function Attrs: nounwind readnone
declare double @difftime(i64, i64) #5

; Function Attrs: nounwind
declare i64 @mktime(%struct.tm*) #4

; Function Attrs: nounwind
declare %struct.tm* @localtime(i64*) #4

declare i32 @gs_sprintf(i8*, i8*, ...) #0

; Function Attrs: nounwind uwtable
define void @pdf_set_process_color_model(%struct.gx_device_pdf_s* %pdev, i32 %index) #1 {
entry:
  %pdev.addr = alloca %struct.gx_device_pdf_s*, align 8
  %index.addr = alloca i32, align 4
  store %struct.gx_device_pdf_s* %pdev, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  store i32 %index, i32* %index.addr, align 4, !tbaa !54
  %0 = load i32, i32* %index.addr, align 4, !tbaa !54
  %1 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %pcm_color_info_index = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %1, i32 0, i32 206
  store i32 %0, i32* %pcm_color_info_index, align 4, !tbaa !195
  %2 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %color_info = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %2, i32 0, i32 11
  %3 = load i32, i32* %index.addr, align 4, !tbaa !54
  %idxprom = sext i32 %3 to i64
  %arrayidx = getelementptr inbounds [4 x %struct.gx_device_color_info_s], [4 x %struct.gx_device_color_info_s]* @pdf_set_process_color_model.pcm_color_info, i32 0, i64 %idxprom
  %4 = bitcast %struct.gx_device_color_info_s* %color_info to i8*
  %5 = bitcast %struct.gx_device_color_info_s* %arrayidx to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %4, i8* %5, i64 720, i32 8, i1 false), !tbaa.struct !196
  %6 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %7 = bitcast %struct.gx_device_pdf_s* %6 to %struct.gx_device_s*
  call void @set_linear_color_bits_mask_shift(%struct.gx_device_s* %7) #7
  %8 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %color_info1 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %8, i32 0, i32 11
  %separable_and_linear = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info1, i32 0, i32 10
  store i32 1, i32* %separable_and_linear, align 4, !tbaa !198
  %9 = load i32, i32* %index.addr, align 4, !tbaa !54
  switch i32 %9, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb.8
    i32 3, label %sw.bb.23
    i32 2, label %sw.bb.25
  ]

sw.bb:                                            ; preds = %entry
  %10 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %procs = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %10, i32 0, i32 42
  %map_rgb_color = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs, i32 0, i32 5
  store i64 (%struct.gx_device_s*, i16*)* @gx_default_gray_map_rgb_color, i64 (%struct.gx_device_s*, i16*)** %map_rgb_color, align 8, !tbaa !199
  %11 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %procs2 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %11, i32 0, i32 42
  %map_color_rgb = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs2, i32 0, i32 6
  store i32 (%struct.gx_device_s*, i64, i16*)* @gx_default_gray_map_color_rgb, i32 (%struct.gx_device_s*, i64, i16*)** %map_color_rgb, align 8, !tbaa !200
  %12 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %procs3 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %12, i32 0, i32 42
  %map_cmyk_color = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs3, i32 0, i32 15
  store i64 (%struct.gx_device_s*, i16*)* null, i64 (%struct.gx_device_s*, i16*)** %map_cmyk_color, align 8, !tbaa !201
  %13 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %procs4 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %13, i32 0, i32 42
  %get_color_mapping_procs = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs4, i32 0, i32 49
  store %struct.gx_cm_color_map_procs_s* (%struct.gx_device_s*)* @gx_default_DevGray_get_color_mapping_procs, %struct.gx_cm_color_map_procs_s* (%struct.gx_device_s*)** %get_color_mapping_procs, align 8, !tbaa !202
  %14 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %procs5 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %14, i32 0, i32 42
  %get_color_comp_index = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs5, i32 0, i32 50
  store i32 (%struct.gx_device_s*, i8*, i32, i32)* @gx_default_DevGray_get_color_comp_index, i32 (%struct.gx_device_s*, i8*, i32, i32)** %get_color_comp_index, align 8, !tbaa !203
  %15 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %procs6 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %15, i32 0, i32 42
  %encode_color = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs6, i32 0, i32 51
  store i64 (%struct.gx_device_s*, i16*)* @gx_default_gray_encode, i64 (%struct.gx_device_s*, i16*)** %encode_color, align 8, !tbaa !204
  %16 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %procs7 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %16, i32 0, i32 42
  %decode_color = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs7, i32 0, i32 52
  store i32 (%struct.gx_device_s*, i64, i16*)* @gx_default_decode_color, i32 (%struct.gx_device_s*, i64, i16*)** %decode_color, align 8, !tbaa !205
  br label %sw.epilog

sw.bb.8:                                          ; preds = %entry
  %17 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %procs9 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %17, i32 0, i32 42
  %map_rgb_color10 = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs9, i32 0, i32 5
  store i64 (%struct.gx_device_s*, i16*)* @gx_default_rgb_map_rgb_color, i64 (%struct.gx_device_s*, i16*)** %map_rgb_color10, align 8, !tbaa !199
  %18 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %procs11 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %18, i32 0, i32 42
  %map_color_rgb12 = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs11, i32 0, i32 6
  store i32 (%struct.gx_device_s*, i64, i16*)* @gx_default_rgb_map_color_rgb, i32 (%struct.gx_device_s*, i64, i16*)** %map_color_rgb12, align 8, !tbaa !200
  %19 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %procs13 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %19, i32 0, i32 42
  %map_cmyk_color14 = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs13, i32 0, i32 15
  store i64 (%struct.gx_device_s*, i16*)* null, i64 (%struct.gx_device_s*, i16*)** %map_cmyk_color14, align 8, !tbaa !201
  %20 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %procs15 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %20, i32 0, i32 42
  %get_color_mapping_procs16 = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs15, i32 0, i32 49
  store %struct.gx_cm_color_map_procs_s* (%struct.gx_device_s*)* @gx_default_DevRGB_get_color_mapping_procs, %struct.gx_cm_color_map_procs_s* (%struct.gx_device_s*)** %get_color_mapping_procs16, align 8, !tbaa !202
  %21 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %procs17 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %21, i32 0, i32 42
  %get_color_comp_index18 = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs17, i32 0, i32 50
  store i32 (%struct.gx_device_s*, i8*, i32, i32)* @gx_default_DevRGB_get_color_comp_index, i32 (%struct.gx_device_s*, i8*, i32, i32)** %get_color_comp_index18, align 8, !tbaa !203
  %22 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %procs19 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %22, i32 0, i32 42
  %encode_color20 = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs19, i32 0, i32 51
  store i64 (%struct.gx_device_s*, i16*)* @gx_default_rgb_map_rgb_color, i64 (%struct.gx_device_s*, i16*)** %encode_color20, align 8, !tbaa !204
  %23 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %procs21 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %23, i32 0, i32 42
  %decode_color22 = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs21, i32 0, i32 52
  store i32 (%struct.gx_device_s*, i64, i16*)* @gx_default_rgb_map_color_rgb, i32 (%struct.gx_device_s*, i64, i16*)** %decode_color22, align 8, !tbaa !205
  br label %sw.epilog

sw.bb.23:                                         ; preds = %entry
  %24 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %color_info24 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %24, i32 0, i32 11
  %cm_name = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info24, i32 0, i32 14
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14, i32 0, i32 0), i8** %cm_name, align 8, !tbaa !206
  br label %sw.bb.25

sw.bb.25:                                         ; preds = %entry, %sw.bb.23
  %25 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %procs26 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %25, i32 0, i32 42
  %map_rgb_color27 = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs26, i32 0, i32 5
  store i64 (%struct.gx_device_s*, i16*)* null, i64 (%struct.gx_device_s*, i16*)** %map_rgb_color27, align 8, !tbaa !199
  %26 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %procs28 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %26, i32 0, i32 42
  %map_color_rgb29 = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs28, i32 0, i32 6
  store i32 (%struct.gx_device_s*, i64, i16*)* @cmyk_8bit_map_color_rgb, i32 (%struct.gx_device_s*, i64, i16*)** %map_color_rgb29, align 8, !tbaa !200
  %27 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %procs30 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %27, i32 0, i32 42
  %map_cmyk_color31 = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs30, i32 0, i32 15
  store i64 (%struct.gx_device_s*, i16*)* @cmyk_8bit_map_cmyk_color, i64 (%struct.gx_device_s*, i16*)** %map_cmyk_color31, align 8, !tbaa !201
  %28 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %procs32 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %28, i32 0, i32 42
  %get_color_mapping_procs33 = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs32, i32 0, i32 49
  store %struct.gx_cm_color_map_procs_s* (%struct.gx_device_s*)* @gx_default_DevCMYK_get_color_mapping_procs, %struct.gx_cm_color_map_procs_s* (%struct.gx_device_s*)** %get_color_mapping_procs33, align 8, !tbaa !202
  %29 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %procs34 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %29, i32 0, i32 42
  %get_color_comp_index35 = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs34, i32 0, i32 50
  store i32 (%struct.gx_device_s*, i8*, i32, i32)* @gx_default_DevCMYK_get_color_comp_index, i32 (%struct.gx_device_s*, i8*, i32, i32)** %get_color_comp_index35, align 8, !tbaa !203
  %30 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %procs36 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %30, i32 0, i32 42
  %encode_color37 = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs36, i32 0, i32 51
  store i64 (%struct.gx_device_s*, i16*)* @cmyk_8bit_map_cmyk_color, i64 (%struct.gx_device_s*, i16*)** %encode_color37, align 8, !tbaa !204
  %31 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %procs38 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %31, i32 0, i32 42
  %decode_color39 = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs38, i32 0, i32 52
  store i32 (%struct.gx_device_s*, i64, i16*)* @cmyk_8bit_map_color_rgb, i32 (%struct.gx_device_s*, i64, i16*)** %decode_color39, align 8, !tbaa !205
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  br label %do.body

do.body:                                          ; preds = %sw.default
  br label %do.end

do.end:                                           ; preds = %do.body
  br label %sw.epilog

sw.epilog:                                        ; preds = %do.end, %sw.bb.25, %sw.bb.8, %sw.bb
  ret void
}

declare void @set_linear_color_bits_mask_shift(%struct.gx_device_s*) #0

declare i64 @gx_default_gray_map_rgb_color(%struct.gx_device_s*, i16*) #0

declare i32 @gx_default_gray_map_color_rgb(%struct.gx_device_s*, i64, i16*) #0

declare %struct.gx_cm_color_map_procs_s* @gx_default_DevGray_get_color_mapping_procs(%struct.gx_device_s*) #0

declare i32 @gx_default_DevGray_get_color_comp_index(%struct.gx_device_s*, i8*, i32, i32) #0

declare i64 @gx_default_gray_encode(%struct.gx_device_s*, i16*) #0

declare i32 @gx_default_decode_color(%struct.gx_device_s*, i64, i16*) #0

declare %struct.gx_cm_color_map_procs_s* @gx_default_DevRGB_get_color_mapping_procs(%struct.gx_device_s*) #0

declare i32 @gx_default_DevRGB_get_color_comp_index(%struct.gx_device_s*, i8*, i32, i32) #0

declare i32 @cmyk_8bit_map_color_rgb(%struct.gx_device_s*, i64, i16*) #0

declare i64 @cmyk_8bit_map_cmyk_color(%struct.gx_device_s*, i16*) #0

declare %struct.gx_cm_color_map_procs_s* @gx_default_DevCMYK_get_color_mapping_procs(%struct.gx_device_s*) #0

declare i32 @gx_default_DevCMYK_get_color_comp_index(%struct.gx_device_s*, i8*, i32, i32) #0

; Function Attrs: nounwind uwtable
define void @pdf_reset_text(%struct.gx_device_pdf_s* %pdev) #1 {
entry:
  %pdev.addr = alloca %struct.gx_device_pdf_s*, align 8
  store %struct.gx_device_pdf_s* %pdev, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %0 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %text = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %0, i32 0, i32 160
  %1 = load %struct.pdf_text_data_s*, %struct.pdf_text_data_s** %text, align 8, !tbaa !73
  call void @pdf_reset_text_state(%struct.pdf_text_data_s* %1) #7
  ret void
}

declare void @pdf_reset_text_state(%struct.pdf_text_data_s*) #0

; Function Attrs: nounwind uwtable
define i32 @pdf_record_usage(%struct.gx_device_pdf_s* %pdev, i64 %resource_id, i32 %page_num) #1 {
entry:
  %retval = alloca i32, align 4
  %pdev.addr = alloca %struct.gx_device_pdf_s*, align 8
  %resource_id.addr = alloca i64, align 8
  %page_num.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %Temp = alloca i8*, align 8
  %resize = alloca %struct.linearisation_record_s*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.gx_device_pdf_s* %pdev, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  store i64 %resource_id, i64* %resource_id.addr, align 8, !tbaa !107
  store i32 %page_num, i32* %page_num.addr, align 4, !tbaa !54
  %0 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = bitcast i8** %Temp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #2
  %2 = bitcast %struct.linearisation_record_s** %resize to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #2
  %3 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %Linearise = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %3, i32 0, i32 249
  %4 = load i32, i32* %Linearise, align 4, !tbaa !162
  %tobool = icmp ne i32 %4, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %5 = load i64, i64* %resource_id.addr, align 8, !tbaa !107
  %cmp = icmp slt i64 %5, 0
  br i1 %cmp, label %if.then.1, label %if.end.2

if.then.1:                                        ; preds = %if.end
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.2:                                         ; preds = %if.end
  %6 = load i64, i64* %resource_id.addr, align 8, !tbaa !107
  %7 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsageSize = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %7, i32 0, i32 253
  %8 = load i32, i32* %ResourceUsageSize, align 4, !tbaa !172
  %conv = sext i32 %8 to i64
  %cmp3 = icmp sge i64 %6, %conv
  br i1 %cmp3, label %if.then.5, label %if.end.36

if.then.5:                                        ; preds = %if.end.2
  %9 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsageSize6 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %9, i32 0, i32 253
  %10 = load i32, i32* %ResourceUsageSize6, align 4, !tbaa !172
  %cmp7 = icmp eq i32 %10, 0
  br i1 %cmp7, label %if.then.9, label %if.else

if.then.9:                                        ; preds = %if.then.5
  %11 = load i64, i64* %resource_id.addr, align 8, !tbaa !107
  %add = add nsw i64 %11, 1
  %conv10 = trunc i64 %add to i32
  %12 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsageSize11 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %12, i32 0, i32 253
  store i32 %conv10, i32* %ResourceUsageSize11, align 4, !tbaa !172
  %13 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %v_memory = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %13, i32 0, i32 43
  %14 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory, align 8, !tbaa !52
  %procs = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %14, i32 0, i32 1
  %alloc_struct_array = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs, i32 0, i32 12
  %15 = load i8* (%struct.gs_memory_s*, i32, %struct.gs_memory_struct_type_s*, i8*)*, i8* (%struct.gs_memory_s*, i32, %struct.gs_memory_struct_type_s*, i8*)** %alloc_struct_array, align 8, !tbaa !75
  %16 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %v_memory12 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %16, i32 0, i32 43
  %17 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory12, align 8, !tbaa !52
  %18 = load i64, i64* %resource_id.addr, align 8, !tbaa !107
  %add13 = add nsw i64 %18, 1
  %conv14 = trunc i64 %add13 to i32
  %call = call i8* %15(%struct.gs_memory_s* %17, i32 %conv14, %struct.gs_memory_struct_type_s* @st_pdf_linearisation_record_element, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.15, i32 0, i32 0)) #7
  %19 = bitcast i8* %call to %struct.linearisation_record_s*
  %20 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsage = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %20, i32 0, i32 252
  store %struct.linearisation_record_s* %19, %struct.linearisation_record_s** %ResourceUsage, align 8, !tbaa !173
  %21 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsage15 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %21, i32 0, i32 252
  %22 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %ResourceUsage15, align 8, !tbaa !173
  %23 = bitcast %struct.linearisation_record_s* %22 to i8*
  %24 = load i64, i64* %resource_id.addr, align 8, !tbaa !107
  %add16 = add nsw i64 %24, 1
  %mul = mul i64 %add16, 48
  %call17 = call i8* @memset(i8* %23, i32 0, i64 %mul) #8
  br label %if.end.35

if.else:                                          ; preds = %if.then.5
  %25 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %v_memory18 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %25, i32 0, i32 43
  %26 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory18, align 8, !tbaa !52
  %procs19 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %26, i32 0, i32 1
  %resize_object = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs19, i32 0, i32 1
  %27 = load i8* (%struct.gs_memory_s*, i8*, i32, i8*)*, i8* (%struct.gs_memory_s*, i8*, i32, i8*)** %resize_object, align 8, !tbaa !207
  %28 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %v_memory20 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %28, i32 0, i32 43
  %29 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory20, align 8, !tbaa !52
  %30 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsage21 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %30, i32 0, i32 252
  %31 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %ResourceUsage21, align 8, !tbaa !173
  %32 = bitcast %struct.linearisation_record_s* %31 to i8*
  %33 = load i64, i64* %resource_id.addr, align 8, !tbaa !107
  %add22 = add nsw i64 %33, 1
  %conv23 = trunc i64 %add22 to i32
  %call24 = call i8* %27(%struct.gs_memory_s* %29, i8* %32, i32 %conv23, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.16, i32 0, i32 0)) #7
  %34 = bitcast i8* %call24 to %struct.linearisation_record_s*
  store %struct.linearisation_record_s* %34, %struct.linearisation_record_s** %resize, align 8, !tbaa !1
  %35 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsageSize25 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %35, i32 0, i32 253
  %36 = load i32, i32* %ResourceUsageSize25, align 4, !tbaa !172
  %idxprom = sext i32 %36 to i64
  %37 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %resize, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %37, i64 %idxprom
  %38 = bitcast %struct.linearisation_record_s* %arrayidx to i8*
  %39 = load i64, i64* %resource_id.addr, align 8, !tbaa !107
  %40 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsageSize26 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %40, i32 0, i32 253
  %41 = load i32, i32* %ResourceUsageSize26, align 4, !tbaa !172
  %conv27 = sext i32 %41 to i64
  %sub = sub nsw i64 %39, %conv27
  %add28 = add nsw i64 %sub, 1
  %mul29 = mul i64 48, %add28
  %call30 = call i8* @memset(i8* %38, i32 0, i64 %mul29) #8
  %42 = load i64, i64* %resource_id.addr, align 8, !tbaa !107
  %add31 = add nsw i64 %42, 1
  %conv32 = trunc i64 %add31 to i32
  %43 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsageSize33 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %43, i32 0, i32 253
  store i32 %conv32, i32* %ResourceUsageSize33, align 4, !tbaa !172
  %44 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %resize, align 8, !tbaa !1
  %45 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsage34 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %45, i32 0, i32 252
  store %struct.linearisation_record_s* %44, %struct.linearisation_record_s** %ResourceUsage34, align 8, !tbaa !173
  br label %if.end.35

if.end.35:                                        ; preds = %if.else, %if.then.9
  br label %if.end.36

if.end.36:                                        ; preds = %if.end.35, %if.end.2
  %46 = load i32, i32* %page_num.addr, align 4, !tbaa !54
  %cmp37 = icmp sgt i32 %46, 0
  br i1 %cmp37, label %if.then.39, label %if.else.61

if.then.39:                                       ; preds = %if.end.36
  %47 = load i64, i64* %resource_id.addr, align 8, !tbaa !107
  %48 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsage40 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %48, i32 0, i32 252
  %49 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %ResourceUsage40, align 8, !tbaa !173
  %arrayidx41 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %49, i64 %47
  %PageUsage = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %arrayidx41, i32 0, i32 0
  %50 = load i32, i32* %PageUsage, align 4, !tbaa !208
  %cmp42 = icmp eq i32 %50, 0
  br i1 %cmp42, label %if.then.44, label %if.else.48

if.then.44:                                       ; preds = %if.then.39
  %51 = load i32, i32* %page_num.addr, align 4, !tbaa !54
  %52 = load i64, i64* %resource_id.addr, align 8, !tbaa !107
  %53 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsage45 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %53, i32 0, i32 252
  %54 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %ResourceUsage45, align 8, !tbaa !173
  %arrayidx46 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %54, i64 %52
  %PageUsage47 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %arrayidx46, i32 0, i32 0
  store i32 %51, i32* %PageUsage47, align 4, !tbaa !208
  br label %if.end.60

if.else.48:                                       ; preds = %if.then.39
  %55 = load i64, i64* %resource_id.addr, align 8, !tbaa !107
  %56 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsage49 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %56, i32 0, i32 252
  %57 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %ResourceUsage49, align 8, !tbaa !173
  %arrayidx50 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %57, i64 %55
  %PageUsage51 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %arrayidx50, i32 0, i32 0
  %58 = load i32, i32* %PageUsage51, align 4, !tbaa !208
  %cmp52 = icmp sgt i32 %58, 1
  br i1 %cmp52, label %if.then.54, label %if.else.58

if.then.54:                                       ; preds = %if.else.48
  %59 = load i64, i64* %resource_id.addr, align 8, !tbaa !107
  %60 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsage55 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %60, i32 0, i32 252
  %61 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %ResourceUsage55, align 8, !tbaa !173
  %arrayidx56 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %61, i64 %59
  %PageUsage57 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %arrayidx56, i32 0, i32 0
  store i32 -1, i32* %PageUsage57, align 4, !tbaa !208
  br label %if.end.59

if.else.58:                                       ; preds = %if.else.48
  br label %if.end.59

if.end.59:                                        ; preds = %if.else.58, %if.then.54
  br label %if.end.60

if.end.60:                                        ; preds = %if.end.59, %if.then.44
  br label %if.end.72

if.else.61:                                       ; preds = %if.end.36
  %62 = load i64, i64* %resource_id.addr, align 8, !tbaa !107
  %63 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsage62 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %63, i32 0, i32 252
  %64 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %ResourceUsage62, align 8, !tbaa !173
  %arrayidx63 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %64, i64 %62
  %PageUsage64 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %arrayidx63, i32 0, i32 0
  %65 = load i32, i32* %PageUsage64, align 4, !tbaa !208
  %cmp65 = icmp ne i32 %65, 0
  br i1 %cmp65, label %if.then.67, label %if.end.68

if.then.67:                                       ; preds = %if.else.61
  br label %if.end.68

if.end.68:                                        ; preds = %if.then.67, %if.else.61
  %66 = load i32, i32* %page_num.addr, align 4, !tbaa !54
  %67 = load i64, i64* %resource_id.addr, align 8, !tbaa !107
  %68 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsage69 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %68, i32 0, i32 252
  %69 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %ResourceUsage69, align 8, !tbaa !173
  %arrayidx70 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %69, i64 %67
  %PageUsage71 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %arrayidx70, i32 0, i32 0
  store i32 %66, i32* %PageUsage71, align 4, !tbaa !208
  br label %if.end.72

if.end.72:                                        ; preds = %if.end.68, %if.end.60
  %70 = load i64, i64* %resource_id.addr, align 8, !tbaa !107
  %71 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsage73 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %71, i32 0, i32 252
  %72 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %ResourceUsage73, align 8, !tbaa !173
  %arrayidx74 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %72, i64 %70
  %NumPagesUsing = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %arrayidx74, i32 0, i32 1
  %73 = load i32, i32* %NumPagesUsing, align 4, !tbaa !209
  %cmp75 = icmp ne i32 %73, 0
  br i1 %cmp75, label %if.then.77, label %if.end.91

if.then.77:                                       ; preds = %if.end.72
  store i32 0, i32* %i, align 4, !tbaa !54
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then.77
  %74 = load i32, i32* %i, align 4, !tbaa !54
  %75 = load i64, i64* %resource_id.addr, align 8, !tbaa !107
  %76 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsage78 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %76, i32 0, i32 252
  %77 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %ResourceUsage78, align 8, !tbaa !173
  %arrayidx79 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %77, i64 %75
  %NumPagesUsing80 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %arrayidx79, i32 0, i32 1
  %78 = load i32, i32* %NumPagesUsing80, align 4, !tbaa !209
  %cmp81 = icmp slt i32 %74, %78
  br i1 %cmp81, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %79 = load i32, i32* %i, align 4, !tbaa !54
  %idxprom83 = sext i32 %79 to i64
  %80 = load i64, i64* %resource_id.addr, align 8, !tbaa !107
  %81 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsage84 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %81, i32 0, i32 252
  %82 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %ResourceUsage84, align 8, !tbaa !173
  %arrayidx85 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %82, i64 %80
  %PageList = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %arrayidx85, i32 0, i32 2
  %83 = load i32*, i32** %PageList, align 8, !tbaa !174
  %arrayidx86 = getelementptr inbounds i32, i32* %83, i64 %idxprom83
  %84 = load i32, i32* %arrayidx86, align 4, !tbaa !54
  %85 = load i32, i32* %page_num.addr, align 4, !tbaa !54
  %cmp87 = icmp eq i32 %84, %85
  br i1 %cmp87, label %if.then.89, label %if.end.90

if.then.89:                                       ; preds = %for.body
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.90:                                        ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.90
  %86 = load i32, i32* %i, align 4, !tbaa !54
  %inc = add nsw i32 %86, 1
  store i32 %inc, i32* %i, align 4, !tbaa !54
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end.91

if.end.91:                                        ; preds = %for.end, %if.end.72
  %87 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %v_memory92 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %87, i32 0, i32 43
  %88 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory92, align 8, !tbaa !52
  %procs93 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %88, i32 0, i32 1
  %alloc_bytes = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs93, i32 0, i32 7
  %89 = load i8* (%struct.gs_memory_s*, i32, i8*)*, i8* (%struct.gs_memory_s*, i32, i8*)** %alloc_bytes, align 8, !tbaa !64
  %90 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %v_memory94 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %90, i32 0, i32 43
  %91 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory94, align 8, !tbaa !52
  %92 = load i64, i64* %resource_id.addr, align 8, !tbaa !107
  %93 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsage95 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %93, i32 0, i32 252
  %94 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %ResourceUsage95, align 8, !tbaa !173
  %arrayidx96 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %94, i64 %92
  %NumPagesUsing97 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %arrayidx96, i32 0, i32 1
  %95 = load i32, i32* %NumPagesUsing97, align 4, !tbaa !209
  %add98 = add nsw i32 %95, 1
  %conv99 = sext i32 %add98 to i64
  %mul100 = mul i64 %conv99, 4
  %conv101 = trunc i64 %mul100 to i32
  %call102 = call i8* %89(%struct.gs_memory_s* %91, i32 %conv101, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.17, i32 0, i32 0)) #7
  store i8* %call102, i8** %Temp, align 8, !tbaa !1
  %96 = load i8*, i8** %Temp, align 8, !tbaa !1
  %97 = load i64, i64* %resource_id.addr, align 8, !tbaa !107
  %98 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsage103 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %98, i32 0, i32 252
  %99 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %ResourceUsage103, align 8, !tbaa !173
  %arrayidx104 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %99, i64 %97
  %NumPagesUsing105 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %arrayidx104, i32 0, i32 1
  %100 = load i32, i32* %NumPagesUsing105, align 4, !tbaa !209
  %add106 = add nsw i32 %100, 1
  %conv107 = sext i32 %add106 to i64
  %mul108 = mul i64 %conv107, 4
  %call109 = call i8* @memset(i8* %96, i32 0, i64 %mul108) #8
  %101 = load i8*, i8** %Temp, align 8, !tbaa !1
  %102 = load i64, i64* %resource_id.addr, align 8, !tbaa !107
  %103 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsage110 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %103, i32 0, i32 252
  %104 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %ResourceUsage110, align 8, !tbaa !173
  %arrayidx111 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %104, i64 %102
  %PageList112 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %arrayidx111, i32 0, i32 2
  %105 = load i32*, i32** %PageList112, align 8, !tbaa !174
  %106 = bitcast i32* %105 to i8*
  %107 = load i64, i64* %resource_id.addr, align 8, !tbaa !107
  %108 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsage113 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %108, i32 0, i32 252
  %109 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %ResourceUsage113, align 8, !tbaa !173
  %arrayidx114 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %109, i64 %107
  %NumPagesUsing115 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %arrayidx114, i32 0, i32 1
  %110 = load i32, i32* %NumPagesUsing115, align 4, !tbaa !209
  %conv116 = sext i32 %110 to i64
  %mul117 = mul i64 %conv116, 4
  %call118 = call i8* @memcpy(i8* %101, i8* %106, i64 %mul117) #8
  %111 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %v_memory119 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %111, i32 0, i32 43
  %112 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory119, align 8, !tbaa !52
  %procs120 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %112, i32 0, i32 1
  %free_object = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs120, i32 0, i32 2
  %113 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %free_object, align 8, !tbaa !138
  %114 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %v_memory121 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %114, i32 0, i32 43
  %115 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory121, align 8, !tbaa !52
  %116 = load i64, i64* %resource_id.addr, align 8, !tbaa !107
  %117 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsage122 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %117, i32 0, i32 252
  %118 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %ResourceUsage122, align 8, !tbaa !173
  %arrayidx123 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %118, i64 %116
  %PageList124 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %arrayidx123, i32 0, i32 2
  %119 = load i32*, i32** %PageList124, align 8, !tbaa !174
  %120 = bitcast i32* %119 to i8*
  call void %113(%struct.gs_memory_s* %115, i8* %120, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.18, i32 0, i32 0)) #7
  %121 = load i8*, i8** %Temp, align 8, !tbaa !1
  %122 = bitcast i8* %121 to i32*
  %123 = load i64, i64* %resource_id.addr, align 8, !tbaa !107
  %124 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsage125 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %124, i32 0, i32 252
  %125 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %ResourceUsage125, align 8, !tbaa !173
  %arrayidx126 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %125, i64 %123
  %PageList127 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %arrayidx126, i32 0, i32 2
  store i32* %122, i32** %PageList127, align 8, !tbaa !174
  %126 = load i32, i32* %page_num.addr, align 4, !tbaa !54
  %127 = load i64, i64* %resource_id.addr, align 8, !tbaa !107
  %128 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsage128 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %128, i32 0, i32 252
  %129 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %ResourceUsage128, align 8, !tbaa !173
  %arrayidx129 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %129, i64 %127
  %NumPagesUsing130 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %arrayidx129, i32 0, i32 1
  %130 = load i32, i32* %NumPagesUsing130, align 4, !tbaa !209
  %idxprom131 = sext i32 %130 to i64
  %131 = load i64, i64* %resource_id.addr, align 8, !tbaa !107
  %132 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsage132 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %132, i32 0, i32 252
  %133 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %ResourceUsage132, align 8, !tbaa !173
  %arrayidx133 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %133, i64 %131
  %PageList134 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %arrayidx133, i32 0, i32 2
  %134 = load i32*, i32** %PageList134, align 8, !tbaa !174
  %arrayidx135 = getelementptr inbounds i32, i32* %134, i64 %idxprom131
  store i32 %126, i32* %arrayidx135, align 4, !tbaa !54
  %135 = load i64, i64* %resource_id.addr, align 8, !tbaa !107
  %136 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsage136 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %136, i32 0, i32 252
  %137 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %ResourceUsage136, align 8, !tbaa !173
  %arrayidx137 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %137, i64 %135
  %NumPagesUsing138 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %arrayidx137, i32 0, i32 1
  %138 = load i32, i32* %NumPagesUsing138, align 4, !tbaa !209
  %inc139 = add nsw i32 %138, 1
  store i32 %inc139, i32* %NumPagesUsing138, align 4, !tbaa !209
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.91, %if.then.89, %if.then.1, %if.then
  %139 = bitcast %struct.linearisation_record_s** %resize to i8*
  call void @llvm.lifetime.end(i64 8, i8* %139) #2
  %140 = bitcast i8** %Temp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %140) #2
  %141 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %141) #2
  %142 = load i32, i32* %retval
  ret i32 %142
}

; Function Attrs: nounwind
declare i8* @memset(i8*, i32, i64) #4

; Function Attrs: nounwind
declare i8* @memcpy(i8*, i8*, i64) #4

; Function Attrs: nounwind uwtable
define i32 @pdf_record_usage_by_parent(%struct.gx_device_pdf_s* %pdev, i64 %resource_id, i64 %parent_id) #1 {
entry:
  %retval = alloca i32, align 4
  %pdev.addr = alloca %struct.gx_device_pdf_s*, align 8
  %resource_id.addr = alloca i64, align 8
  %parent_id.addr = alloca i64, align 8
  %i = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.gx_device_pdf_s* %pdev, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  store i64 %resource_id, i64* %resource_id.addr, align 8, !tbaa !107
  store i64 %parent_id, i64* %parent_id.addr, align 8, !tbaa !107
  %0 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %Linearise = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %1, i32 0, i32 249
  %2 = load i32, i32* %Linearise, align 4, !tbaa !162
  %tobool = icmp ne i32 %2, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %3 = load i64, i64* %parent_id.addr, align 8, !tbaa !107
  %4 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsage = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %4, i32 0, i32 252
  %5 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %ResourceUsage, align 8, !tbaa !173
  %arrayidx = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %5, i64 %3
  %PageUsage = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %arrayidx, i32 0, i32 0
  %6 = load i32, i32* %PageUsage, align 4, !tbaa !208
  %cmp = icmp sge i32 %6, 0
  br i1 %cmp, label %if.then.1, label %if.else

if.then.1:                                        ; preds = %if.end
  %7 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %8 = load i64, i64* %resource_id.addr, align 8, !tbaa !107
  %9 = load i64, i64* %parent_id.addr, align 8, !tbaa !107
  %10 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsage2 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %10, i32 0, i32 252
  %11 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %ResourceUsage2, align 8, !tbaa !173
  %arrayidx3 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %11, i64 %9
  %PageUsage4 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %arrayidx3, i32 0, i32 0
  %12 = load i32, i32* %PageUsage4, align 4, !tbaa !208
  %call = call i32 @pdf_record_usage(%struct.gx_device_pdf_s* %7, i64 %8, i32 %12) #7
  br label %if.end.12

if.else:                                          ; preds = %if.end
  store i32 0, i32* %i, align 4, !tbaa !54
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.else
  %13 = load i32, i32* %i, align 4, !tbaa !54
  %14 = load i64, i64* %parent_id.addr, align 8, !tbaa !107
  %15 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsage5 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %15, i32 0, i32 252
  %16 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %ResourceUsage5, align 8, !tbaa !173
  %arrayidx6 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %16, i64 %14
  %NumPagesUsing = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %arrayidx6, i32 0, i32 1
  %17 = load i32, i32* %NumPagesUsing, align 4, !tbaa !209
  %cmp7 = icmp slt i32 %13, %17
  br i1 %cmp7, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %18 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %19 = load i64, i64* %resource_id.addr, align 8, !tbaa !107
  %20 = load i32, i32* %i, align 4, !tbaa !54
  %idxprom = sext i32 %20 to i64
  %21 = load i64, i64* %parent_id.addr, align 8, !tbaa !107
  %22 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsage8 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %22, i32 0, i32 252
  %23 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %ResourceUsage8, align 8, !tbaa !173
  %arrayidx9 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %23, i64 %21
  %PageList = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %arrayidx9, i32 0, i32 2
  %24 = load i32*, i32** %PageList, align 8, !tbaa !174
  %arrayidx10 = getelementptr inbounds i32, i32* %24, i64 %idxprom
  %25 = load i32, i32* %arrayidx10, align 4, !tbaa !54
  %call11 = call i32 @pdf_record_usage(%struct.gx_device_pdf_s* %18, i64 %19, i32 %25) #7
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %26 = load i32, i32* %i, align 4, !tbaa !54
  %inc = add nsw i32 %26, 1
  store i32 %inc, i32* %i, align 4, !tbaa !54
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end.12

if.end.12:                                        ; preds = %for.end, %if.then.1
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.12, %if.then
  %27 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %27) #2
  %28 = load i32, i32* %retval
  ret i32 %28
}

; Function Attrs: nounwind uwtable
define internal %struct.gs_ptr_procs_s* @device_pdfwrite_enum_ptrs(%struct.gs_memory_s* %mem, i8* %vptr, i32 %size, i32 %index, %struct.enum_ptr_s* %pep, %struct.gs_memory_struct_type_s* %pstype, %struct.gc_state_s* %gcst) #1 {
entry:
  %retval = alloca %struct.gs_ptr_procs_s*, align 8
  %mem.addr = alloca %struct.gs_memory_s*, align 8
  %vptr.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  %index.addr = alloca i32, align 4
  %pep.addr = alloca %struct.enum_ptr_s*, align 8
  %pstype.addr = alloca %struct.gs_memory_struct_type_s*, align 8
  %gcst.addr = alloca %struct.gc_state_s*, align 8
  %pdev = alloca %struct.gx_device_pdf_s*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.gs_memory_s* %mem, %struct.gs_memory_s** %mem.addr, align 8, !tbaa !1
  store i8* %vptr, i8** %vptr.addr, align 8, !tbaa !1
  store i32 %size, i32* %size.addr, align 4, !tbaa !54
  store i32 %index, i32* %index.addr, align 4, !tbaa !54
  store %struct.enum_ptr_s* %pep, %struct.enum_ptr_s** %pep.addr, align 8, !tbaa !1
  store %struct.gs_memory_struct_type_s* %pstype, %struct.gs_memory_struct_type_s** %pstype.addr, align 8, !tbaa !1
  store %struct.gc_state_s* %gcst, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %0 = bitcast %struct.gx_device_pdf_s** %pdev to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %2 = bitcast i8* %1 to %struct.gx_device_pdf_s*
  store %struct.gx_device_pdf_s* %2, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %3 = load i32, i32* %index.addr, align 4, !tbaa !54
  switch i32 %3, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb.30
    i32 2, label %sw.bb.33
    i32 3, label %sw.bb.36
    i32 4, label %sw.bb.39
    i32 5, label %sw.bb.43
    i32 6, label %sw.bb.46
    i32 7, label %sw.bb.50
    i32 8, label %sw.bb.54
    i32 9, label %sw.bb.56
    i32 10, label %sw.bb.58
    i32 11, label %sw.bb.60
    i32 12, label %sw.bb.62
    i32 13, label %sw.bb.64
    i32 14, label %sw.bb.67
    i32 15, label %sw.bb.71
    i32 16, label %sw.bb.75
    i32 17, label %sw.bb.79
    i32 18, label %sw.bb.81
    i32 19, label %sw.bb.83
    i32 20, label %sw.bb.85
    i32 21, label %sw.bb.87
    i32 22, label %sw.bb.89
    i32 23, label %sw.bb.91
    i32 24, label %sw.bb.93
    i32 25, label %sw.bb.95
    i32 26, label %sw.bb.97
    i32 27, label %sw.bb.99
    i32 28, label %sw.bb.101
    i32 29, label %sw.bb.103
    i32 30, label %sw.bb.105
    i32 31, label %sw.bb.107
    i32 32, label %sw.bb.109
    i32 33, label %sw.bb.111
    i32 34, label %sw.bb.113
    i32 35, label %sw.bb.116
    i32 36, label %sw.bb.119
    i32 37, label %sw.bb.122
    i32 38, label %sw.bb.126
    i32 39, label %sw.bb.128
    i32 40, label %sw.bb.130
    i32 41, label %sw.bb.133
    i32 42, label %sw.bb.135
    i32 43, label %sw.bb.143
    i32 44, label %sw.bb.156
    i32 45, label %sw.bb.169
    i32 46, label %sw.bb.182
    i32 47, label %sw.bb.195
  ]

sw.default:                                       ; preds = %entry
  %4 = load i32, i32* %index.addr, align 4, !tbaa !54
  %sub = sub nsw i32 %4, 47
  store i32 %sub, i32* %index.addr, align 4, !tbaa !54
  %5 = load i32, i32* %index.addr, align 4, !tbaa !54
  %cmp = icmp slt i32 %5, 240
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %sw.default
  %6 = load i32, i32* %index.addr, align 4, !tbaa !54
  %rem = srem i32 %6, 16
  %idxprom = sext i32 %rem to i64
  %7 = load i32, i32* %index.addr, align 4, !tbaa !54
  %div = sdiv i32 %7, 16
  %idxprom1 = sext i32 %div to i64
  %8 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %resources = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %8, i32 0, i32 165
  %arrayidx = getelementptr inbounds [15 x %struct.pdf_resource_list_s], [15 x %struct.pdf_resource_list_s]* %resources, i32 0, i64 %idxprom1
  %chains = getelementptr inbounds %struct.pdf_resource_list_s, %struct.pdf_resource_list_s* %arrayidx, i32 0, i32 0
  %arrayidx2 = getelementptr inbounds [16 x %struct.pdf_resource_s*], [16 x %struct.pdf_resource_s*]* %chains, i32 0, i64 %idxprom
  %9 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %arrayidx2, align 8, !tbaa !1
  %10 = bitcast %struct.pdf_resource_s* %9 to i8*
  %11 = load %struct.enum_ptr_s*, %struct.enum_ptr_s** %pep.addr, align 8, !tbaa !1
  %ptr = getelementptr inbounds %struct.enum_ptr_s, %struct.enum_ptr_s* %11, i32 0, i32 0
  store i8* %10, i8** %ptr, align 8, !tbaa !210
  store %struct.gs_ptr_procs_s* @ptr_struct_procs, %struct.gs_ptr_procs_s** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %sw.default
  %12 = load i32, i32* %index.addr, align 4, !tbaa !54
  %sub3 = sub nsw i32 %12, 240
  store i32 %sub3, i32* %index.addr, align 4, !tbaa !54
  %13 = load i32, i32* %index.addr, align 4, !tbaa !54
  %14 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %outline_depth = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %14, i32 0, i32 172
  %15 = load i32, i32* %outline_depth, align 4, !tbaa !87
  %cmp4 = icmp sle i32 %13, %15
  br i1 %cmp4, label %land.lhs.true, label %if.end.10

land.lhs.true:                                    ; preds = %if.end
  %16 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %outline_levels = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %16, i32 0, i32 171
  %17 = load %struct.pdf_outline_level_s*, %struct.pdf_outline_level_s** %outline_levels, align 8, !tbaa !79
  %tobool = icmp ne %struct.pdf_outline_level_s* %17, null
  br i1 %tobool, label %if.then.5, label %if.end.10

if.then.5:                                        ; preds = %land.lhs.true
  %18 = load i32, i32* %index.addr, align 4, !tbaa !54
  %idxprom6 = sext i32 %18 to i64
  %19 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %outline_levels7 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %19, i32 0, i32 171
  %20 = load %struct.pdf_outline_level_s*, %struct.pdf_outline_level_s** %outline_levels7, align 8, !tbaa !79
  %arrayidx8 = getelementptr inbounds %struct.pdf_outline_level_s, %struct.pdf_outline_level_s* %20, i64 %idxprom6
  %first = getelementptr inbounds %struct.pdf_outline_level_s, %struct.pdf_outline_level_s* %arrayidx8, i32 0, i32 0
  %action = getelementptr inbounds %struct.pdf_outline_node_s, %struct.pdf_outline_node_s* %first, i32 0, i32 6
  %21 = load %struct.cos_dict_s*, %struct.cos_dict_s** %action, align 8, !tbaa !85
  %22 = bitcast %struct.cos_dict_s* %21 to i8*
  %23 = load %struct.enum_ptr_s*, %struct.enum_ptr_s** %pep.addr, align 8, !tbaa !1
  %ptr9 = getelementptr inbounds %struct.enum_ptr_s, %struct.enum_ptr_s* %23, i32 0, i32 0
  store i8* %22, i8** %ptr9, align 8, !tbaa !210
  store %struct.gs_ptr_procs_s* @ptr_struct_procs, %struct.gs_ptr_procs_s** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.10:                                        ; preds = %land.lhs.true, %if.end
  %24 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %outline_depth11 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %24, i32 0, i32 172
  %25 = load i32, i32* %outline_depth11, align 4, !tbaa !87
  %add = add nsw i32 %25, 1
  %26 = load i32, i32* %index.addr, align 4, !tbaa !54
  %sub12 = sub nsw i32 %26, %add
  store i32 %sub12, i32* %index.addr, align 4, !tbaa !54
  %27 = load i32, i32* %index.addr, align 4, !tbaa !54
  %28 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %outline_depth13 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %28, i32 0, i32 172
  %29 = load i32, i32* %outline_depth13, align 4, !tbaa !87
  %cmp14 = icmp sle i32 %27, %29
  br i1 %cmp14, label %land.lhs.true.15, label %if.end.24

land.lhs.true.15:                                 ; preds = %if.end.10
  %30 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %outline_levels16 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %30, i32 0, i32 171
  %31 = load %struct.pdf_outline_level_s*, %struct.pdf_outline_level_s** %outline_levels16, align 8, !tbaa !79
  %tobool17 = icmp ne %struct.pdf_outline_level_s* %31, null
  br i1 %tobool17, label %if.then.18, label %if.end.24

if.then.18:                                       ; preds = %land.lhs.true.15
  %32 = load i32, i32* %index.addr, align 4, !tbaa !54
  %idxprom19 = sext i32 %32 to i64
  %33 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %outline_levels20 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %33, i32 0, i32 171
  %34 = load %struct.pdf_outline_level_s*, %struct.pdf_outline_level_s** %outline_levels20, align 8, !tbaa !79
  %arrayidx21 = getelementptr inbounds %struct.pdf_outline_level_s, %struct.pdf_outline_level_s* %34, i64 %idxprom19
  %last = getelementptr inbounds %struct.pdf_outline_level_s, %struct.pdf_outline_level_s* %arrayidx21, i32 0, i32 1
  %action22 = getelementptr inbounds %struct.pdf_outline_node_s, %struct.pdf_outline_node_s* %last, i32 0, i32 6
  %35 = load %struct.cos_dict_s*, %struct.cos_dict_s** %action22, align 8, !tbaa !86
  %36 = bitcast %struct.cos_dict_s* %35 to i8*
  %37 = load %struct.enum_ptr_s*, %struct.enum_ptr_s** %pep.addr, align 8, !tbaa !1
  %ptr23 = getelementptr inbounds %struct.enum_ptr_s, %struct.enum_ptr_s* %37, i32 0, i32 0
  store i8* %36, i8** %ptr23, align 8, !tbaa !210
  store %struct.gs_ptr_procs_s* @ptr_struct_procs, %struct.gs_ptr_procs_s** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.24:                                        ; preds = %land.lhs.true.15, %if.end.10
  %38 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %outline_depth25 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %38, i32 0, i32 172
  %39 = load i32, i32* %outline_depth25, align 4, !tbaa !87
  %add26 = add nsw i32 %39, 1
  %40 = load i32, i32* %index.addr, align 4, !tbaa !54
  %sub27 = sub nsw i32 %40, %add26
  store i32 %sub27, i32* %index.addr, align 4, !tbaa !54
  %41 = load %struct.gs_ptr_procs_s* (%struct.gs_memory_s*, i8*, i32, i32, %struct.enum_ptr_s*, %struct.gs_memory_struct_type_s*, %struct.gc_state_s*)*, %struct.gs_ptr_procs_s* (%struct.gs_memory_s*, i8*, i32, i32, %struct.enum_ptr_s*, %struct.gs_memory_struct_type_s*, %struct.gc_state_s*)** getelementptr inbounds (%struct.gs_memory_struct_type_s, %struct.gs_memory_struct_type_s* @st_device_psdf, i32 0, i32 4), align 8, !tbaa !212
  %42 = load %struct.gs_memory_s*, %struct.gs_memory_s** %mem.addr, align 8, !tbaa !1
  %43 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %44 = load i32, i32* %size.addr, align 4, !tbaa !54
  %45 = load i32, i32* %index.addr, align 4, !tbaa !54
  %sub28 = sub nsw i32 %45, 0
  %46 = load %struct.enum_ptr_s*, %struct.enum_ptr_s** %pep.addr, align 8, !tbaa !1
  %47 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %call = call %struct.gs_ptr_procs_s* %41(%struct.gs_memory_s* %42, i8* %43, i32 %44, i32 %sub28, %struct.enum_ptr_s* %46, %struct.gs_memory_struct_type_s* @st_device_psdf, %struct.gc_state_s* %47) #7
  store %struct.gs_ptr_procs_s* %call, %struct.gs_ptr_procs_s** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

sw.bb:                                            ; preds = %entry
  %48 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %49 = bitcast i8* %48 to %struct.gx_device_pdf_s*
  %asides = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %49, i32 0, i32 145
  %strm = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %asides, i32 0, i32 2
  %50 = load %struct.stream_s*, %struct.stream_s** %strm, align 8, !tbaa !139
  %51 = bitcast %struct.stream_s* %50 to i8*
  %52 = load %struct.enum_ptr_s*, %struct.enum_ptr_s** %pep.addr, align 8, !tbaa !1
  %ptr29 = getelementptr inbounds %struct.enum_ptr_s, %struct.enum_ptr_s* %52, i32 0, i32 0
  store i8* %51, i8** %ptr29, align 8, !tbaa !210
  store %struct.gs_ptr_procs_s* @ptr_struct_procs, %struct.gs_ptr_procs_s** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

sw.bb.30:                                         ; preds = %entry
  %53 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %54 = bitcast i8* %53 to %struct.gx_device_pdf_s*
  %asides31 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %54, i32 0, i32 145
  %strm_buf = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %asides31, i32 0, i32 3
  %55 = load i8*, i8** %strm_buf, align 8, !tbaa !214
  %56 = load %struct.enum_ptr_s*, %struct.enum_ptr_s** %pep.addr, align 8, !tbaa !1
  %ptr32 = getelementptr inbounds %struct.enum_ptr_s, %struct.enum_ptr_s* %56, i32 0, i32 0
  store i8* %55, i8** %ptr32, align 8, !tbaa !210
  store %struct.gs_ptr_procs_s* @ptr_struct_procs, %struct.gs_ptr_procs_s** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

sw.bb.33:                                         ; preds = %entry
  %57 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %58 = bitcast i8* %57 to %struct.gx_device_pdf_s*
  %asides34 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %58, i32 0, i32 145
  %save_strm = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %asides34, i32 0, i32 4
  %59 = load %struct.stream_s*, %struct.stream_s** %save_strm, align 8, !tbaa !215
  %60 = bitcast %struct.stream_s* %59 to i8*
  %61 = load %struct.enum_ptr_s*, %struct.enum_ptr_s** %pep.addr, align 8, !tbaa !1
  %ptr35 = getelementptr inbounds %struct.enum_ptr_s, %struct.enum_ptr_s* %61, i32 0, i32 0
  store i8* %60, i8** %ptr35, align 8, !tbaa !210
  store %struct.gs_ptr_procs_s* @ptr_struct_procs, %struct.gs_ptr_procs_s** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

sw.bb.36:                                         ; preds = %entry
  %62 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %63 = bitcast i8* %62 to %struct.gx_device_pdf_s*
  %streams = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %63, i32 0, i32 146
  %strm37 = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %streams, i32 0, i32 2
  %64 = load %struct.stream_s*, %struct.stream_s** %strm37, align 8, !tbaa !216
  %65 = bitcast %struct.stream_s* %64 to i8*
  %66 = load %struct.enum_ptr_s*, %struct.enum_ptr_s** %pep.addr, align 8, !tbaa !1
  %ptr38 = getelementptr inbounds %struct.enum_ptr_s, %struct.enum_ptr_s* %66, i32 0, i32 0
  store i8* %65, i8** %ptr38, align 8, !tbaa !210
  store %struct.gs_ptr_procs_s* @ptr_struct_procs, %struct.gs_ptr_procs_s** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

sw.bb.39:                                         ; preds = %entry
  %67 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %68 = bitcast i8* %67 to %struct.gx_device_pdf_s*
  %streams40 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %68, i32 0, i32 146
  %strm_buf41 = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %streams40, i32 0, i32 3
  %69 = load i8*, i8** %strm_buf41, align 8, !tbaa !217
  %70 = load %struct.enum_ptr_s*, %struct.enum_ptr_s** %pep.addr, align 8, !tbaa !1
  %ptr42 = getelementptr inbounds %struct.enum_ptr_s, %struct.enum_ptr_s* %70, i32 0, i32 0
  store i8* %69, i8** %ptr42, align 8, !tbaa !210
  store %struct.gs_ptr_procs_s* @ptr_struct_procs, %struct.gs_ptr_procs_s** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

sw.bb.43:                                         ; preds = %entry
  %71 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %72 = bitcast i8* %71 to %struct.gx_device_pdf_s*
  %pictures = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %72, i32 0, i32 147
  %strm44 = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %pictures, i32 0, i32 2
  %73 = load %struct.stream_s*, %struct.stream_s** %strm44, align 8, !tbaa !218
  %74 = bitcast %struct.stream_s* %73 to i8*
  %75 = load %struct.enum_ptr_s*, %struct.enum_ptr_s** %pep.addr, align 8, !tbaa !1
  %ptr45 = getelementptr inbounds %struct.enum_ptr_s, %struct.enum_ptr_s* %75, i32 0, i32 0
  store i8* %74, i8** %ptr45, align 8, !tbaa !210
  store %struct.gs_ptr_procs_s* @ptr_struct_procs, %struct.gs_ptr_procs_s** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

sw.bb.46:                                         ; preds = %entry
  %76 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %77 = bitcast i8* %76 to %struct.gx_device_pdf_s*
  %pictures47 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %77, i32 0, i32 147
  %strm_buf48 = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %pictures47, i32 0, i32 3
  %78 = load i8*, i8** %strm_buf48, align 8, !tbaa !219
  %79 = load %struct.enum_ptr_s*, %struct.enum_ptr_s** %pep.addr, align 8, !tbaa !1
  %ptr49 = getelementptr inbounds %struct.enum_ptr_s, %struct.enum_ptr_s* %79, i32 0, i32 0
  store i8* %78, i8** %ptr49, align 8, !tbaa !210
  store %struct.gs_ptr_procs_s* @ptr_struct_procs, %struct.gs_ptr_procs_s** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

sw.bb.50:                                         ; preds = %entry
  %80 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %81 = bitcast i8* %80 to %struct.gx_device_pdf_s*
  %pictures51 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %81, i32 0, i32 147
  %save_strm52 = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %pictures51, i32 0, i32 4
  %82 = load %struct.stream_s*, %struct.stream_s** %save_strm52, align 8, !tbaa !220
  %83 = bitcast %struct.stream_s* %82 to i8*
  %84 = load %struct.enum_ptr_s*, %struct.enum_ptr_s** %pep.addr, align 8, !tbaa !1
  %ptr53 = getelementptr inbounds %struct.enum_ptr_s, %struct.enum_ptr_s* %84, i32 0, i32 0
  store i8* %83, i8** %ptr53, align 8, !tbaa !210
  store %struct.gs_ptr_procs_s* @ptr_struct_procs, %struct.gs_ptr_procs_s** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

sw.bb.54:                                         ; preds = %entry
  %85 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %86 = bitcast i8* %85 to %struct.gx_device_pdf_s*
  %Catalog = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %86, i32 0, i32 149
  %87 = load %struct.cos_dict_s*, %struct.cos_dict_s** %Catalog, align 8, !tbaa !108
  %88 = bitcast %struct.cos_dict_s* %87 to i8*
  %89 = load %struct.enum_ptr_s*, %struct.enum_ptr_s** %pep.addr, align 8, !tbaa !1
  %ptr55 = getelementptr inbounds %struct.enum_ptr_s, %struct.enum_ptr_s* %89, i32 0, i32 0
  store i8* %88, i8** %ptr55, align 8, !tbaa !210
  store %struct.gs_ptr_procs_s* @ptr_struct_procs, %struct.gs_ptr_procs_s** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

sw.bb.56:                                         ; preds = %entry
  %90 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %91 = bitcast i8* %90 to %struct.gx_device_pdf_s*
  %Info = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %91, i32 0, i32 150
  %92 = load %struct.cos_dict_s*, %struct.cos_dict_s** %Info, align 8, !tbaa !112
  %93 = bitcast %struct.cos_dict_s* %92 to i8*
  %94 = load %struct.enum_ptr_s*, %struct.enum_ptr_s** %pep.addr, align 8, !tbaa !1
  %ptr57 = getelementptr inbounds %struct.enum_ptr_s, %struct.enum_ptr_s* %94, i32 0, i32 0
  store i8* %93, i8** %ptr57, align 8, !tbaa !210
  store %struct.gs_ptr_procs_s* @ptr_struct_procs, %struct.gs_ptr_procs_s** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

sw.bb.58:                                         ; preds = %entry
  %95 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %96 = bitcast i8* %95 to %struct.gx_device_pdf_s*
  %Pages = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %96, i32 0, i32 151
  %97 = load %struct.cos_dict_s*, %struct.cos_dict_s** %Pages, align 8, !tbaa !113
  %98 = bitcast %struct.cos_dict_s* %97 to i8*
  %99 = load %struct.enum_ptr_s*, %struct.enum_ptr_s** %pep.addr, align 8, !tbaa !1
  %ptr59 = getelementptr inbounds %struct.enum_ptr_s, %struct.enum_ptr_s* %99, i32 0, i32 0
  store i8* %98, i8** %ptr59, align 8, !tbaa !210
  store %struct.gs_ptr_procs_s* @ptr_struct_procs, %struct.gs_ptr_procs_s** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

sw.bb.60:                                         ; preds = %entry
  %100 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %101 = bitcast i8* %100 to %struct.gx_device_pdf_s*
  %text = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %101, i32 0, i32 160
  %102 = load %struct.pdf_text_data_s*, %struct.pdf_text_data_s** %text, align 8, !tbaa !73
  %103 = bitcast %struct.pdf_text_data_s* %102 to i8*
  %104 = load %struct.enum_ptr_s*, %struct.enum_ptr_s** %pep.addr, align 8, !tbaa !1
  %ptr61 = getelementptr inbounds %struct.enum_ptr_s, %struct.enum_ptr_s* %104, i32 0, i32 0
  store i8* %103, i8** %ptr61, align 8, !tbaa !210
  store %struct.gs_ptr_procs_s* @ptr_struct_procs, %struct.gs_ptr_procs_s** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

sw.bb.62:                                         ; preds = %entry
  %105 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %106 = bitcast i8* %105 to %struct.gx_device_pdf_s*
  %pages = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %106, i32 0, i32 162
  %107 = load %struct.pdf_page_s*, %struct.pdf_page_s** %pages, align 8, !tbaa !77
  %108 = bitcast %struct.pdf_page_s* %107 to i8*
  %109 = load %struct.enum_ptr_s*, %struct.enum_ptr_s** %pep.addr, align 8, !tbaa !1
  %ptr63 = getelementptr inbounds %struct.enum_ptr_s, %struct.enum_ptr_s* %109, i32 0, i32 0
  store i8* %108, i8** %ptr63, align 8, !tbaa !210
  store %struct.gs_ptr_procs_s* @ptr_struct_procs, %struct.gs_ptr_procs_s** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

sw.bb.64:                                         ; preds = %entry
  %110 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %111 = bitcast i8* %110 to %struct.gx_device_pdf_s*
  %cs_Patterns = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %111, i32 0, i32 166
  %arrayidx65 = getelementptr inbounds [5 x %struct.pdf_resource_s*], [5 x %struct.pdf_resource_s*]* %cs_Patterns, i32 0, i64 0
  %112 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %arrayidx65, align 8, !tbaa !1
  %113 = bitcast %struct.pdf_resource_s* %112 to i8*
  %114 = load %struct.enum_ptr_s*, %struct.enum_ptr_s** %pep.addr, align 8, !tbaa !1
  %ptr66 = getelementptr inbounds %struct.enum_ptr_s, %struct.enum_ptr_s* %114, i32 0, i32 0
  store i8* %113, i8** %ptr66, align 8, !tbaa !210
  store %struct.gs_ptr_procs_s* @ptr_struct_procs, %struct.gs_ptr_procs_s** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

sw.bb.67:                                         ; preds = %entry
  %115 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %116 = bitcast i8* %115 to %struct.gx_device_pdf_s*
  %cs_Patterns68 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %116, i32 0, i32 166
  %arrayidx69 = getelementptr inbounds [5 x %struct.pdf_resource_s*], [5 x %struct.pdf_resource_s*]* %cs_Patterns68, i32 0, i64 1
  %117 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %arrayidx69, align 8, !tbaa !1
  %118 = bitcast %struct.pdf_resource_s* %117 to i8*
  %119 = load %struct.enum_ptr_s*, %struct.enum_ptr_s** %pep.addr, align 8, !tbaa !1
  %ptr70 = getelementptr inbounds %struct.enum_ptr_s, %struct.enum_ptr_s* %119, i32 0, i32 0
  store i8* %118, i8** %ptr70, align 8, !tbaa !210
  store %struct.gs_ptr_procs_s* @ptr_struct_procs, %struct.gs_ptr_procs_s** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

sw.bb.71:                                         ; preds = %entry
  %120 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %121 = bitcast i8* %120 to %struct.gx_device_pdf_s*
  %cs_Patterns72 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %121, i32 0, i32 166
  %arrayidx73 = getelementptr inbounds [5 x %struct.pdf_resource_s*], [5 x %struct.pdf_resource_s*]* %cs_Patterns72, i32 0, i64 3
  %122 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %arrayidx73, align 8, !tbaa !1
  %123 = bitcast %struct.pdf_resource_s* %122 to i8*
  %124 = load %struct.enum_ptr_s*, %struct.enum_ptr_s** %pep.addr, align 8, !tbaa !1
  %ptr74 = getelementptr inbounds %struct.enum_ptr_s, %struct.enum_ptr_s* %124, i32 0, i32 0
  store i8* %123, i8** %ptr74, align 8, !tbaa !210
  store %struct.gs_ptr_procs_s* @ptr_struct_procs, %struct.gs_ptr_procs_s** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

sw.bb.75:                                         ; preds = %entry
  %125 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %126 = bitcast i8* %125 to %struct.gx_device_pdf_s*
  %cs_Patterns76 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %126, i32 0, i32 166
  %arrayidx77 = getelementptr inbounds [5 x %struct.pdf_resource_s*], [5 x %struct.pdf_resource_s*]* %cs_Patterns76, i32 0, i64 4
  %127 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %arrayidx77, align 8, !tbaa !1
  %128 = bitcast %struct.pdf_resource_s* %127 to i8*
  %129 = load %struct.enum_ptr_s*, %struct.enum_ptr_s** %pep.addr, align 8, !tbaa !1
  %ptr78 = getelementptr inbounds %struct.enum_ptr_s, %struct.enum_ptr_s* %129, i32 0, i32 0
  store i8* %128, i8** %ptr78, align 8, !tbaa !210
  store %struct.gs_ptr_procs_s* @ptr_struct_procs, %struct.gs_ptr_procs_s** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

sw.bb.79:                                         ; preds = %entry
  %130 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %131 = bitcast i8* %130 to %struct.gx_device_pdf_s*
  %last_resource = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %131, i32 0, i32 168
  %132 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %last_resource, align 8, !tbaa !176
  %133 = bitcast %struct.pdf_resource_s* %132 to i8*
  %134 = load %struct.enum_ptr_s*, %struct.enum_ptr_s** %pep.addr, align 8, !tbaa !1
  %ptr80 = getelementptr inbounds %struct.enum_ptr_s, %struct.enum_ptr_s* %134, i32 0, i32 0
  store i8* %133, i8** %ptr80, align 8, !tbaa !210
  store %struct.gs_ptr_procs_s* @ptr_struct_procs, %struct.gs_ptr_procs_s** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

sw.bb.81:                                         ; preds = %entry
  %135 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %136 = bitcast i8* %135 to %struct.gx_device_pdf_s*
  %articles = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %136, i32 0, i32 176
  %137 = load %struct.pdf_article_s*, %struct.pdf_article_s** %articles, align 8, !tbaa !90
  %138 = bitcast %struct.pdf_article_s* %137 to i8*
  %139 = load %struct.enum_ptr_s*, %struct.enum_ptr_s** %pep.addr, align 8, !tbaa !1
  %ptr82 = getelementptr inbounds %struct.enum_ptr_s, %struct.enum_ptr_s* %139, i32 0, i32 0
  store i8* %138, i8** %ptr82, align 8, !tbaa !210
  store %struct.gs_ptr_procs_s* @ptr_struct_procs, %struct.gs_ptr_procs_s** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

sw.bb.83:                                         ; preds = %entry
  %140 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %141 = bitcast i8* %140 to %struct.gx_device_pdf_s*
  %Dests = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %141, i32 0, i32 177
  %142 = load %struct.cos_dict_s*, %struct.cos_dict_s** %Dests, align 8, !tbaa !91
  %143 = bitcast %struct.cos_dict_s* %142 to i8*
  %144 = load %struct.enum_ptr_s*, %struct.enum_ptr_s** %pep.addr, align 8, !tbaa !1
  %ptr84 = getelementptr inbounds %struct.enum_ptr_s, %struct.enum_ptr_s* %144, i32 0, i32 0
  store i8* %143, i8** %ptr84, align 8, !tbaa !210
  store %struct.gs_ptr_procs_s* @ptr_struct_procs, %struct.gs_ptr_procs_s** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

sw.bb.85:                                         ; preds = %entry
  %145 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %146 = bitcast i8* %145 to %struct.gx_device_pdf_s*
  %global_named_objects = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %146, i32 0, i32 181
  %147 = load %struct.cos_dict_s*, %struct.cos_dict_s** %global_named_objects, align 8, !tbaa !61
  %148 = bitcast %struct.cos_dict_s* %147 to i8*
  %149 = load %struct.enum_ptr_s*, %struct.enum_ptr_s** %pep.addr, align 8, !tbaa !1
  %ptr86 = getelementptr inbounds %struct.enum_ptr_s, %struct.enum_ptr_s* %149, i32 0, i32 0
  store i8* %148, i8** %ptr86, align 8, !tbaa !210
  store %struct.gs_ptr_procs_s* @ptr_struct_procs, %struct.gs_ptr_procs_s** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

sw.bb.87:                                         ; preds = %entry
  %150 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %151 = bitcast i8* %150 to %struct.gx_device_pdf_s*
  %local_named_objects = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %151, i32 0, i32 182
  %152 = load %struct.cos_dict_s*, %struct.cos_dict_s** %local_named_objects, align 8, !tbaa !62
  %153 = bitcast %struct.cos_dict_s* %152 to i8*
  %154 = load %struct.enum_ptr_s*, %struct.enum_ptr_s** %pep.addr, align 8, !tbaa !1
  %ptr88 = getelementptr inbounds %struct.enum_ptr_s, %struct.enum_ptr_s* %154, i32 0, i32 0
  store i8* %153, i8** %ptr88, align 8, !tbaa !210
  store %struct.gs_ptr_procs_s* @ptr_struct_procs, %struct.gs_ptr_procs_s** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

sw.bb.89:                                         ; preds = %entry
  %155 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %156 = bitcast i8* %155 to %struct.gx_device_pdf_s*
  %NI_stack = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %156, i32 0, i32 183
  %157 = load %struct.cos_array_s*, %struct.cos_array_s** %NI_stack, align 8, !tbaa !63
  %158 = bitcast %struct.cos_array_s* %157 to i8*
  %159 = load %struct.enum_ptr_s*, %struct.enum_ptr_s** %pep.addr, align 8, !tbaa !1
  %ptr90 = getelementptr inbounds %struct.enum_ptr_s, %struct.enum_ptr_s* %159, i32 0, i32 0
  store i8* %158, i8** %ptr90, align 8, !tbaa !210
  store %struct.gs_ptr_procs_s* @ptr_struct_procs, %struct.gs_ptr_procs_s** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

sw.bb.91:                                         ; preds = %entry
  %160 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %161 = bitcast i8* %160 to %struct.gx_device_pdf_s*
  %Namespace_stack = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %161, i32 0, i32 184
  %162 = load %struct.cos_array_s*, %struct.cos_array_s** %Namespace_stack, align 8, !tbaa !67
  %163 = bitcast %struct.cos_array_s* %162 to i8*
  %164 = load %struct.enum_ptr_s*, %struct.enum_ptr_s** %pep.addr, align 8, !tbaa !1
  %ptr92 = getelementptr inbounds %struct.enum_ptr_s, %struct.enum_ptr_s* %164, i32 0, i32 0
  store i8* %163, i8** %ptr92, align 8, !tbaa !210
  store %struct.gs_ptr_procs_s* @ptr_struct_procs, %struct.gs_ptr_procs_s** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

sw.bb.93:                                         ; preds = %entry
  %165 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %166 = bitcast i8* %165 to %struct.gx_device_pdf_s*
  %font_cache = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %166, i32 0, i32 185
  %167 = load %struct.pdf_font_cache_elem_s*, %struct.pdf_font_cache_elem_s** %font_cache, align 8, !tbaa !178
  %168 = bitcast %struct.pdf_font_cache_elem_s* %167 to i8*
  %169 = load %struct.enum_ptr_s*, %struct.enum_ptr_s** %pep.addr, align 8, !tbaa !1
  %ptr94 = getelementptr inbounds %struct.enum_ptr_s, %struct.enum_ptr_s* %169, i32 0, i32 0
  store i8* %168, i8** %ptr94, align 8, !tbaa !210
  store %struct.gs_ptr_procs_s* @ptr_struct_procs, %struct.gs_ptr_procs_s** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

sw.bb.95:                                         ; preds = %entry
  %170 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %171 = bitcast i8* %170 to %struct.gx_device_pdf_s*
  %clip_path = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %171, i32 0, i32 187
  %172 = load %struct.gx_path_s*, %struct.gx_path_s** %clip_path, align 8, !tbaa !221
  %173 = bitcast %struct.gx_path_s* %172 to i8*
  %174 = load %struct.enum_ptr_s*, %struct.enum_ptr_s** %pep.addr, align 8, !tbaa !1
  %ptr96 = getelementptr inbounds %struct.enum_ptr_s, %struct.enum_ptr_s* %174, i32 0, i32 0
  store i8* %173, i8** %ptr96, align 8, !tbaa !210
  store %struct.gs_ptr_procs_s* @ptr_struct_procs, %struct.gs_ptr_procs_s** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

sw.bb.97:                                         ; preds = %entry
  %175 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %176 = bitcast i8* %175 to %struct.gx_device_pdf_s*
  %PageLabels = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %176, i32 0, i32 188
  %177 = load %struct.cos_array_s*, %struct.cos_array_s** %PageLabels, align 8, !tbaa !93
  %178 = bitcast %struct.cos_array_s* %177 to i8*
  %179 = load %struct.enum_ptr_s*, %struct.enum_ptr_s** %pep.addr, align 8, !tbaa !1
  %ptr98 = getelementptr inbounds %struct.enum_ptr_s, %struct.enum_ptr_s* %179, i32 0, i32 0
  store i8* %178, i8** %ptr98, align 8, !tbaa !210
  store %struct.gs_ptr_procs_s* @ptr_struct_procs, %struct.gs_ptr_procs_s** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

sw.bb.99:                                         ; preds = %entry
  %180 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %181 = bitcast i8* %180 to %struct.gx_device_pdf_s*
  %PageLabels_current_label = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %181, i32 0, i32 190
  %182 = load %struct.cos_dict_s*, %struct.cos_dict_s** %PageLabels_current_label, align 8, !tbaa !95
  %183 = bitcast %struct.cos_dict_s* %182 to i8*
  %184 = load %struct.enum_ptr_s*, %struct.enum_ptr_s** %pep.addr, align 8, !tbaa !1
  %ptr100 = getelementptr inbounds %struct.enum_ptr_s, %struct.enum_ptr_s* %184, i32 0, i32 0
  store i8* %183, i8** %ptr100, align 8, !tbaa !210
  store %struct.gs_ptr_procs_s* @ptr_struct_procs, %struct.gs_ptr_procs_s** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

sw.bb.101:                                        ; preds = %entry
  %185 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %186 = bitcast i8* %185 to %struct.gx_device_pdf_s*
  %sbstack = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %186, i32 0, i32 200
  %187 = load %struct.pdf_substream_save_s*, %struct.pdf_substream_save_s** %sbstack, align 8, !tbaa !76
  %188 = bitcast %struct.pdf_substream_save_s* %187 to i8*
  %189 = load %struct.enum_ptr_s*, %struct.enum_ptr_s** %pep.addr, align 8, !tbaa !1
  %ptr102 = getelementptr inbounds %struct.enum_ptr_s, %struct.enum_ptr_s* %189, i32 0, i32 0
  store i8* %188, i8** %ptr102, align 8, !tbaa !210
  store %struct.gs_ptr_procs_s* @ptr_struct_procs, %struct.gs_ptr_procs_s** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

sw.bb.103:                                        ; preds = %entry
  %190 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %191 = bitcast i8* %190 to %struct.gx_device_pdf_s*
  %substream_Resources = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %191, i32 0, i32 205
  %192 = load %struct.cos_dict_s*, %struct.cos_dict_s** %substream_Resources, align 8, !tbaa !222
  %193 = bitcast %struct.cos_dict_s* %192 to i8*
  %194 = load %struct.enum_ptr_s*, %struct.enum_ptr_s** %pep.addr, align 8, !tbaa !1
  %ptr104 = getelementptr inbounds %struct.enum_ptr_s, %struct.enum_ptr_s* %194, i32 0, i32 0
  store i8* %193, i8** %ptr104, align 8, !tbaa !210
  store %struct.gs_ptr_procs_s* @ptr_struct_procs, %struct.gs_ptr_procs_s** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

sw.bb.105:                                        ; preds = %entry
  %195 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %196 = bitcast i8* %195 to %struct.gx_device_pdf_s*
  %font3 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %196, i32 0, i32 209
  %197 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %font3, align 8, !tbaa !223
  %198 = bitcast %struct.pdf_resource_s* %197 to i8*
  %199 = load %struct.enum_ptr_s*, %struct.enum_ptr_s** %pep.addr, align 8, !tbaa !1
  %ptr106 = getelementptr inbounds %struct.enum_ptr_s, %struct.enum_ptr_s* %199, i32 0, i32 0
  store i8* %198, i8** %ptr106, align 8, !tbaa !210
  store %struct.gs_ptr_procs_s* @ptr_struct_procs, %struct.gs_ptr_procs_s** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

sw.bb.107:                                        ; preds = %entry
  %200 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %201 = bitcast i8* %200 to %struct.gx_device_pdf_s*
  %accumulating_substream_resource = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %201, i32 0, i32 210
  %202 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %accumulating_substream_resource, align 8, !tbaa !224
  %203 = bitcast %struct.pdf_resource_s* %202 to i8*
  %204 = load %struct.enum_ptr_s*, %struct.enum_ptr_s** %pep.addr, align 8, !tbaa !1
  %ptr108 = getelementptr inbounds %struct.enum_ptr_s, %struct.enum_ptr_s* %204, i32 0, i32 0
  store i8* %203, i8** %ptr108, align 8, !tbaa !210
  store %struct.gs_ptr_procs_s* @ptr_struct_procs, %struct.gs_ptr_procs_s** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

sw.bb.109:                                        ; preds = %entry
  %205 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %206 = bitcast i8* %205 to %struct.gx_device_pdf_s*
  %pres_soft_mask_dict = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %206, i32 0, i32 226
  %207 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %pres_soft_mask_dict, align 8, !tbaa !225
  %208 = bitcast %struct.pdf_resource_s* %207 to i8*
  %209 = load %struct.enum_ptr_s*, %struct.enum_ptr_s** %pep.addr, align 8, !tbaa !1
  %ptr110 = getelementptr inbounds %struct.enum_ptr_s, %struct.enum_ptr_s* %209, i32 0, i32 0
  store i8* %208, i8** %ptr110, align 8, !tbaa !210
  store %struct.gs_ptr_procs_s* @ptr_struct_procs, %struct.gs_ptr_procs_s** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

sw.bb.111:                                        ; preds = %entry
  %210 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %211 = bitcast i8* %210 to %struct.gx_device_pdf_s*
  %PDFXTrimBoxToMediaBoxOffset = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %211, i32 0, i32 88
  %data = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %PDFXTrimBoxToMediaBoxOffset, i32 0, i32 0
  %212 = load float*, float** %data, align 8, !tbaa !226
  %213 = bitcast float* %212 to i8*
  %214 = load %struct.enum_ptr_s*, %struct.enum_ptr_s** %pep.addr, align 8, !tbaa !1
  %ptr112 = getelementptr inbounds %struct.enum_ptr_s, %struct.enum_ptr_s* %214, i32 0, i32 0
  store i8* %213, i8** %ptr112, align 8, !tbaa !210
  store %struct.gs_ptr_procs_s* @ptr_struct_procs, %struct.gs_ptr_procs_s** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

sw.bb.113:                                        ; preds = %entry
  %215 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %216 = bitcast i8* %215 to %struct.gx_device_pdf_s*
  %PDFXBleedBoxToTrimBoxOffset = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %216, i32 0, i32 89
  %data114 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %PDFXBleedBoxToTrimBoxOffset, i32 0, i32 0
  %217 = load float*, float** %data114, align 8, !tbaa !227
  %218 = bitcast float* %217 to i8*
  %219 = load %struct.enum_ptr_s*, %struct.enum_ptr_s** %pep.addr, align 8, !tbaa !1
  %ptr115 = getelementptr inbounds %struct.enum_ptr_s, %struct.enum_ptr_s* %219, i32 0, i32 0
  store i8* %218, i8** %ptr115, align 8, !tbaa !210
  store %struct.gs_ptr_procs_s* @ptr_struct_procs, %struct.gs_ptr_procs_s** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

sw.bb.116:                                        ; preds = %entry
  %220 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %221 = bitcast i8* %220 to %struct.gx_device_pdf_s*
  %DSCEncodingToUnicode = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %221, i32 0, i32 114
  %data117 = getelementptr inbounds %struct.gs_param_int_array_s, %struct.gs_param_int_array_s* %DSCEncodingToUnicode, i32 0, i32 0
  %222 = load i32*, i32** %data117, align 8, !tbaa !228
  %223 = bitcast i32* %222 to i8*
  %224 = load %struct.enum_ptr_s*, %struct.enum_ptr_s** %pep.addr, align 8, !tbaa !1
  %ptr118 = getelementptr inbounds %struct.enum_ptr_s, %struct.enum_ptr_s* %224, i32 0, i32 0
  store i8* %223, i8** %ptr118, align 8, !tbaa !210
  store %struct.gs_ptr_procs_s* @ptr_struct_procs, %struct.gs_ptr_procs_s** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

sw.bb.119:                                        ; preds = %entry
  %225 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %226 = bitcast i8* %225 to %struct.gx_device_pdf_s*
  %Identity_ToUnicode_CMaps = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %226, i32 0, i32 167
  %arrayidx120 = getelementptr inbounds [2 x %struct.pdf_resource_s*], [2 x %struct.pdf_resource_s*]* %Identity_ToUnicode_CMaps, i32 0, i64 0
  %227 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %arrayidx120, align 8, !tbaa !1
  %228 = bitcast %struct.pdf_resource_s* %227 to i8*
  %229 = load %struct.enum_ptr_s*, %struct.enum_ptr_s** %pep.addr, align 8, !tbaa !1
  %ptr121 = getelementptr inbounds %struct.enum_ptr_s, %struct.enum_ptr_s* %229, i32 0, i32 0
  store i8* %228, i8** %ptr121, align 8, !tbaa !210
  store %struct.gs_ptr_procs_s* @ptr_struct_procs, %struct.gs_ptr_procs_s** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

sw.bb.122:                                        ; preds = %entry
  %230 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %231 = bitcast i8* %230 to %struct.gx_device_pdf_s*
  %Identity_ToUnicode_CMaps123 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %231, i32 0, i32 167
  %arrayidx124 = getelementptr inbounds [2 x %struct.pdf_resource_s*], [2 x %struct.pdf_resource_s*]* %Identity_ToUnicode_CMaps123, i32 0, i64 1
  %232 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %arrayidx124, align 8, !tbaa !1
  %233 = bitcast %struct.pdf_resource_s* %232 to i8*
  %234 = load %struct.enum_ptr_s*, %struct.enum_ptr_s** %pep.addr, align 8, !tbaa !1
  %ptr125 = getelementptr inbounds %struct.enum_ptr_s, %struct.enum_ptr_s* %234, i32 0, i32 0
  store i8* %233, i8** %ptr125, align 8, !tbaa !210
  store %struct.gs_ptr_procs_s* @ptr_struct_procs, %struct.gs_ptr_procs_s** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

sw.bb.126:                                        ; preds = %entry
  %235 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %236 = bitcast i8* %235 to %struct.gx_device_pdf_s*
  %ResourceUsage = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %236, i32 0, i32 252
  %237 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %ResourceUsage, align 8, !tbaa !173
  %238 = bitcast %struct.linearisation_record_s* %237 to i8*
  %239 = load %struct.enum_ptr_s*, %struct.enum_ptr_s** %pep.addr, align 8, !tbaa !1
  %ptr127 = getelementptr inbounds %struct.enum_ptr_s, %struct.enum_ptr_s* %239, i32 0, i32 0
  store i8* %238, i8** %ptr127, align 8, !tbaa !210
  store %struct.gs_ptr_procs_s* @ptr_struct_procs, %struct.gs_ptr_procs_s** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

sw.bb.128:                                        ; preds = %entry
  %240 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %241 = bitcast i8* %240 to %struct.gx_device_pdf_s*
  %vgstack = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %241, i32 0, i32 192
  %242 = load %struct.pdf_viewer_state_s*, %struct.pdf_viewer_state_s** %vgstack, align 8, !tbaa !65
  %243 = bitcast %struct.pdf_viewer_state_s* %242 to i8*
  %244 = load %struct.enum_ptr_s*, %struct.enum_ptr_s** %pep.addr, align 8, !tbaa !1
  %ptr129 = getelementptr inbounds %struct.enum_ptr_s, %struct.enum_ptr_s* %244, i32 0, i32 0
  store i8* %243, i8** %ptr129, align 8, !tbaa !210
  store %struct.gs_ptr_procs_s* @ptr_struct_procs, %struct.gs_ptr_procs_s** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

sw.bb.130:                                        ; preds = %entry
  %245 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %246 = bitcast i8* %245 to %struct.gx_device_pdf_s*
  %outline_levels131 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %246, i32 0, i32 171
  %247 = load %struct.pdf_outline_level_s*, %struct.pdf_outline_level_s** %outline_levels131, align 8, !tbaa !79
  %248 = bitcast %struct.pdf_outline_level_s* %247 to i8*
  %249 = load %struct.enum_ptr_s*, %struct.enum_ptr_s** %pep.addr, align 8, !tbaa !1
  %ptr132 = getelementptr inbounds %struct.enum_ptr_s, %struct.enum_ptr_s* %249, i32 0, i32 0
  store i8* %248, i8** %ptr132, align 8, !tbaa !210
  store %struct.gs_ptr_procs_s* @ptr_struct_procs, %struct.gs_ptr_procs_s** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

sw.bb.133:                                        ; preds = %entry
  %250 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %251 = bitcast i8* %250 to %struct.gx_device_pdf_s*
  %EmbeddedFiles = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %251, i32 0, i32 178
  %252 = load %struct.cos_dict_s*, %struct.cos_dict_s** %EmbeddedFiles, align 8, !tbaa !92
  %253 = bitcast %struct.cos_dict_s* %252 to i8*
  %254 = load %struct.enum_ptr_s*, %struct.enum_ptr_s** %pep.addr, align 8, !tbaa !1
  %ptr134 = getelementptr inbounds %struct.enum_ptr_s, %struct.enum_ptr_s* %254, i32 0, i32 0
  store i8* %253, i8** %ptr134, align 8, !tbaa !210
  store %struct.gs_ptr_procs_s* @ptr_struct_procs, %struct.gs_ptr_procs_s** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

sw.bb.135:                                        ; preds = %entry
  %255 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %256 = bitcast i8* %255 to %struct.gx_device_pdf_s*
  %OwnerPassword = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %256, i32 0, i32 115
  %persistent = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %OwnerPassword, i32 0, i32 2
  %257 = load i32, i32* %persistent, align 4, !tbaa !229
  %tobool136 = icmp ne i32 %257, 0
  br i1 %tobool136, label %cond.true, label %cond.false

cond.true:                                        ; preds = %sw.bb.135
  br label %cond.end

cond.false:                                       ; preds = %sw.bb.135
  %258 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %259 = bitcast i8* %258 to %struct.gx_device_pdf_s*
  %OwnerPassword137 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %259, i32 0, i32 115
  %data138 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %OwnerPassword137, i32 0, i32 0
  %260 = load i8*, i8** %data138, align 8, !tbaa !158
  %261 = load %struct.enum_ptr_s*, %struct.enum_ptr_s** %pep.addr, align 8, !tbaa !1
  %ptr139 = getelementptr inbounds %struct.enum_ptr_s, %struct.enum_ptr_s* %261, i32 0, i32 0
  store i8* %260, i8** %ptr139, align 8, !tbaa !210
  %262 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %263 = bitcast i8* %262 to %struct.gx_device_pdf_s*
  %OwnerPassword140 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %263, i32 0, i32 115
  %size141 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %OwnerPassword140, i32 0, i32 1
  %264 = load i32, i32* %size141, align 4, !tbaa !159
  %265 = load %struct.enum_ptr_s*, %struct.enum_ptr_s** %pep.addr, align 8, !tbaa !1
  %size142 = getelementptr inbounds %struct.enum_ptr_s, %struct.enum_ptr_s* %265, i32 0, i32 1
  store i32 %264, i32* %size142, align 4, !tbaa !230
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.gs_ptr_procs_s* [ null, %cond.true ], [ @ptr_string_procs, %cond.false ]
  store %struct.gs_ptr_procs_s* %cond, %struct.gs_ptr_procs_s** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

sw.bb.143:                                        ; preds = %entry
  %266 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %267 = bitcast i8* %266 to %struct.gx_device_pdf_s*
  %UserPassword = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %267, i32 0, i32 116
  %persistent144 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %UserPassword, i32 0, i32 2
  %268 = load i32, i32* %persistent144, align 4, !tbaa !231
  %tobool145 = icmp ne i32 %268, 0
  br i1 %tobool145, label %cond.true.146, label %cond.false.147

cond.true.146:                                    ; preds = %sw.bb.143
  br label %cond.end.154

cond.false.147:                                   ; preds = %sw.bb.143
  %269 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %270 = bitcast i8* %269 to %struct.gx_device_pdf_s*
  %UserPassword148 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %270, i32 0, i32 116
  %data149 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %UserPassword148, i32 0, i32 0
  %271 = load i8*, i8** %data149, align 8, !tbaa !158
  %272 = load %struct.enum_ptr_s*, %struct.enum_ptr_s** %pep.addr, align 8, !tbaa !1
  %ptr150 = getelementptr inbounds %struct.enum_ptr_s, %struct.enum_ptr_s* %272, i32 0, i32 0
  store i8* %271, i8** %ptr150, align 8, !tbaa !210
  %273 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %274 = bitcast i8* %273 to %struct.gx_device_pdf_s*
  %UserPassword151 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %274, i32 0, i32 116
  %size152 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %UserPassword151, i32 0, i32 1
  %275 = load i32, i32* %size152, align 4, !tbaa !159
  %276 = load %struct.enum_ptr_s*, %struct.enum_ptr_s** %pep.addr, align 8, !tbaa !1
  %size153 = getelementptr inbounds %struct.enum_ptr_s, %struct.enum_ptr_s* %276, i32 0, i32 1
  store i32 %275, i32* %size153, align 4, !tbaa !230
  br label %cond.end.154

cond.end.154:                                     ; preds = %cond.false.147, %cond.true.146
  %cond155 = phi %struct.gs_ptr_procs_s* [ null, %cond.true.146 ], [ @ptr_string_procs, %cond.false.147 ]
  store %struct.gs_ptr_procs_s* %cond155, %struct.gs_ptr_procs_s** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

sw.bb.156:                                        ; preds = %entry
  %277 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %278 = bitcast i8* %277 to %struct.gx_device_pdf_s*
  %NoEncrypt = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %278, i32 0, i32 120
  %persistent157 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %NoEncrypt, i32 0, i32 2
  %279 = load i32, i32* %persistent157, align 4, !tbaa !232
  %tobool158 = icmp ne i32 %279, 0
  br i1 %tobool158, label %cond.true.159, label %cond.false.160

cond.true.159:                                    ; preds = %sw.bb.156
  br label %cond.end.167

cond.false.160:                                   ; preds = %sw.bb.156
  %280 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %281 = bitcast i8* %280 to %struct.gx_device_pdf_s*
  %NoEncrypt161 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %281, i32 0, i32 120
  %data162 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %NoEncrypt161, i32 0, i32 0
  %282 = load i8*, i8** %data162, align 8, !tbaa !158
  %283 = load %struct.enum_ptr_s*, %struct.enum_ptr_s** %pep.addr, align 8, !tbaa !1
  %ptr163 = getelementptr inbounds %struct.enum_ptr_s, %struct.enum_ptr_s* %283, i32 0, i32 0
  store i8* %282, i8** %ptr163, align 8, !tbaa !210
  %284 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %285 = bitcast i8* %284 to %struct.gx_device_pdf_s*
  %NoEncrypt164 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %285, i32 0, i32 120
  %size165 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %NoEncrypt164, i32 0, i32 1
  %286 = load i32, i32* %size165, align 4, !tbaa !159
  %287 = load %struct.enum_ptr_s*, %struct.enum_ptr_s** %pep.addr, align 8, !tbaa !1
  %size166 = getelementptr inbounds %struct.enum_ptr_s, %struct.enum_ptr_s* %287, i32 0, i32 1
  store i32 %286, i32* %size166, align 4, !tbaa !230
  br label %cond.end.167

cond.end.167:                                     ; preds = %cond.false.160, %cond.true.159
  %cond168 = phi %struct.gs_ptr_procs_s* [ null, %cond.true.159 ], [ @ptr_string_procs, %cond.false.160 ]
  store %struct.gs_ptr_procs_s* %cond168, %struct.gs_ptr_procs_s** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

sw.bb.169:                                        ; preds = %entry
  %288 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %289 = bitcast i8* %288 to %struct.gx_device_pdf_s*
  %DocumentUUID = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %289, i32 0, i32 96
  %persistent170 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %DocumentUUID, i32 0, i32 2
  %290 = load i32, i32* %persistent170, align 4, !tbaa !233
  %tobool171 = icmp ne i32 %290, 0
  br i1 %tobool171, label %cond.true.172, label %cond.false.173

cond.true.172:                                    ; preds = %sw.bb.169
  br label %cond.end.180

cond.false.173:                                   ; preds = %sw.bb.169
  %291 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %292 = bitcast i8* %291 to %struct.gx_device_pdf_s*
  %DocumentUUID174 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %292, i32 0, i32 96
  %data175 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %DocumentUUID174, i32 0, i32 0
  %293 = load i8*, i8** %data175, align 8, !tbaa !158
  %294 = load %struct.enum_ptr_s*, %struct.enum_ptr_s** %pep.addr, align 8, !tbaa !1
  %ptr176 = getelementptr inbounds %struct.enum_ptr_s, %struct.enum_ptr_s* %294, i32 0, i32 0
  store i8* %293, i8** %ptr176, align 8, !tbaa !210
  %295 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %296 = bitcast i8* %295 to %struct.gx_device_pdf_s*
  %DocumentUUID177 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %296, i32 0, i32 96
  %size178 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %DocumentUUID177, i32 0, i32 1
  %297 = load i32, i32* %size178, align 4, !tbaa !159
  %298 = load %struct.enum_ptr_s*, %struct.enum_ptr_s** %pep.addr, align 8, !tbaa !1
  %size179 = getelementptr inbounds %struct.enum_ptr_s, %struct.enum_ptr_s* %298, i32 0, i32 1
  store i32 %297, i32* %size179, align 4, !tbaa !230
  br label %cond.end.180

cond.end.180:                                     ; preds = %cond.false.173, %cond.true.172
  %cond181 = phi %struct.gs_ptr_procs_s* [ null, %cond.true.172 ], [ @ptr_string_procs, %cond.false.173 ]
  store %struct.gs_ptr_procs_s* %cond181, %struct.gs_ptr_procs_s** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

sw.bb.182:                                        ; preds = %entry
  %299 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %300 = bitcast i8* %299 to %struct.gx_device_pdf_s*
  %InstanceUUID = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %300, i32 0, i32 97
  %persistent183 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %InstanceUUID, i32 0, i32 2
  %301 = load i32, i32* %persistent183, align 4, !tbaa !234
  %tobool184 = icmp ne i32 %301, 0
  br i1 %tobool184, label %cond.true.185, label %cond.false.186

cond.true.185:                                    ; preds = %sw.bb.182
  br label %cond.end.193

cond.false.186:                                   ; preds = %sw.bb.182
  %302 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %303 = bitcast i8* %302 to %struct.gx_device_pdf_s*
  %InstanceUUID187 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %303, i32 0, i32 97
  %data188 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %InstanceUUID187, i32 0, i32 0
  %304 = load i8*, i8** %data188, align 8, !tbaa !158
  %305 = load %struct.enum_ptr_s*, %struct.enum_ptr_s** %pep.addr, align 8, !tbaa !1
  %ptr189 = getelementptr inbounds %struct.enum_ptr_s, %struct.enum_ptr_s* %305, i32 0, i32 0
  store i8* %304, i8** %ptr189, align 8, !tbaa !210
  %306 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %307 = bitcast i8* %306 to %struct.gx_device_pdf_s*
  %InstanceUUID190 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %307, i32 0, i32 97
  %size191 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %InstanceUUID190, i32 0, i32 1
  %308 = load i32, i32* %size191, align 4, !tbaa !159
  %309 = load %struct.enum_ptr_s*, %struct.enum_ptr_s** %pep.addr, align 8, !tbaa !1
  %size192 = getelementptr inbounds %struct.enum_ptr_s, %struct.enum_ptr_s* %309, i32 0, i32 1
  store i32 %308, i32* %size192, align 4, !tbaa !230
  br label %cond.end.193

cond.end.193:                                     ; preds = %cond.false.186, %cond.true.185
  %cond194 = phi %struct.gs_ptr_procs_s* [ null, %cond.true.185 ], [ @ptr_string_procs, %cond.false.186 ]
  store %struct.gs_ptr_procs_s* %cond194, %struct.gs_ptr_procs_s** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

sw.bb.195:                                        ; preds = %entry
  %310 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %311 = bitcast i8* %310 to %struct.gx_device_pdf_s*
  %objname = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %311, i32 0, i32 227
  %data196 = getelementptr inbounds %struct.gs_const_string_s, %struct.gs_const_string_s* %objname, i32 0, i32 0
  %312 = load i8*, i8** %data196, align 8, !tbaa !235
  %313 = load %struct.enum_ptr_s*, %struct.enum_ptr_s** %pep.addr, align 8, !tbaa !1
  %ptr197 = getelementptr inbounds %struct.enum_ptr_s, %struct.enum_ptr_s* %313, i32 0, i32 0
  store i8* %312, i8** %ptr197, align 8, !tbaa !210
  %314 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %315 = bitcast i8* %314 to %struct.gx_device_pdf_s*
  %objname198 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %315, i32 0, i32 227
  %size199 = getelementptr inbounds %struct.gs_const_string_s, %struct.gs_const_string_s* %objname198, i32 0, i32 1
  %316 = load i32, i32* %size199, align 4, !tbaa !236
  %317 = load %struct.enum_ptr_s*, %struct.enum_ptr_s** %pep.addr, align 8, !tbaa !1
  %size200 = getelementptr inbounds %struct.enum_ptr_s, %struct.enum_ptr_s* %317, i32 0, i32 1
  store i32 %316, i32* %size200, align 4, !tbaa !230
  store %struct.gs_ptr_procs_s* @ptr_string_procs, %struct.gs_ptr_procs_s** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %sw.bb.195, %cond.end.193, %cond.end.180, %cond.end.167, %cond.end.154, %cond.end, %sw.bb.133, %sw.bb.130, %sw.bb.128, %sw.bb.126, %sw.bb.122, %sw.bb.119, %sw.bb.116, %sw.bb.113, %sw.bb.111, %sw.bb.109, %sw.bb.107, %sw.bb.105, %sw.bb.103, %sw.bb.101, %sw.bb.99, %sw.bb.97, %sw.bb.95, %sw.bb.93, %sw.bb.91, %sw.bb.89, %sw.bb.87, %sw.bb.85, %sw.bb.83, %sw.bb.81, %sw.bb.79, %sw.bb.75, %sw.bb.71, %sw.bb.67, %sw.bb.64, %sw.bb.62, %sw.bb.60, %sw.bb.58, %sw.bb.56, %sw.bb.54, %sw.bb.50, %sw.bb.46, %sw.bb.43, %sw.bb.39, %sw.bb.36, %sw.bb.33, %sw.bb.30, %sw.bb, %if.end.24, %if.then.18, %if.then.5, %if.then
  %318 = bitcast %struct.gx_device_pdf_s** %pdev to i8*
  call void @llvm.lifetime.end(i64 8, i8* %318) #2
  %319 = load %struct.gs_ptr_procs_s*, %struct.gs_ptr_procs_s** %retval
  ret %struct.gs_ptr_procs_s* %319
}

; Function Attrs: nounwind uwtable
define internal void @device_pdfwrite_reloc_ptrs(i8* %vptr, i32 %size, %struct.gs_memory_struct_type_s* %pstype, %struct.gc_state_s* %gcst) #1 {
entry:
  %vptr.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  %pstype.addr = alloca %struct.gs_memory_struct_type_s*, align 8
  %gcst.addr = alloca %struct.gc_state_s*, align 8
  %pdev = alloca %struct.gx_device_pdf_s*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %vptr, i8** %vptr.addr, align 8, !tbaa !1
  store i32 %size, i32* %size.addr, align 4, !tbaa !54
  store %struct.gs_memory_struct_type_s* %pstype, %struct.gs_memory_struct_type_s** %pstype.addr, align 8, !tbaa !1
  store %struct.gc_state_s* %gcst, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %0 = bitcast %struct.gx_device_pdf_s** %pdev to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %2 = bitcast i8* %1 to %struct.gx_device_pdf_s*
  store %struct.gx_device_pdf_s* %2, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %3 = load void (i8*, i32, %struct.gs_memory_struct_type_s*, %struct.gc_state_s*)*, void (i8*, i32, %struct.gs_memory_struct_type_s*, %struct.gc_state_s*)** getelementptr inbounds (%struct.gs_memory_struct_type_s, %struct.gs_memory_struct_type_s* @st_device_psdf, i32 0, i32 5), align 8, !tbaa !237
  %4 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %5 = load i32, i32* %size.addr, align 4, !tbaa !54
  %6 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  call void %3(i8* %4, i32 %5, %struct.gs_memory_struct_type_s* @st_device_psdf, %struct.gc_state_s* %6) #7
  %7 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %8 = bitcast %struct.gc_state_s* %7 to %struct.gc_procs_common_s**
  %9 = load %struct.gc_procs_common_s*, %struct.gc_procs_common_s** %8, align 8, !tbaa !1
  %reloc_struct_ptr = getelementptr inbounds %struct.gc_procs_common_s, %struct.gc_procs_common_s* %9, i32 0, i32 0
  %10 = load i8* (i8*, %struct.gc_state_s*)*, i8* (i8*, %struct.gc_state_s*)** %reloc_struct_ptr, align 8, !tbaa !238
  %11 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %12 = bitcast i8* %11 to %struct.gx_device_pdf_s*
  %asides = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %12, i32 0, i32 145
  %strm = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %asides, i32 0, i32 2
  %13 = load %struct.stream_s*, %struct.stream_s** %strm, align 8, !tbaa !139
  %14 = bitcast %struct.stream_s* %13 to i8*
  %15 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %call = call i8* %10(i8* %14, %struct.gc_state_s* %15) #7
  %16 = bitcast i8* %call to %struct.stream_s*
  %17 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %18 = bitcast i8* %17 to %struct.gx_device_pdf_s*
  %asides1 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %18, i32 0, i32 145
  %strm2 = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %asides1, i32 0, i32 2
  store %struct.stream_s* %16, %struct.stream_s** %strm2, align 8, !tbaa !139
  %19 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %20 = bitcast %struct.gc_state_s* %19 to %struct.gc_procs_common_s**
  %21 = load %struct.gc_procs_common_s*, %struct.gc_procs_common_s** %20, align 8, !tbaa !1
  %reloc_struct_ptr3 = getelementptr inbounds %struct.gc_procs_common_s, %struct.gc_procs_common_s* %21, i32 0, i32 0
  %22 = load i8* (i8*, %struct.gc_state_s*)*, i8* (i8*, %struct.gc_state_s*)** %reloc_struct_ptr3, align 8, !tbaa !238
  %23 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %24 = bitcast i8* %23 to %struct.gx_device_pdf_s*
  %asides4 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %24, i32 0, i32 145
  %strm_buf = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %asides4, i32 0, i32 3
  %25 = load i8*, i8** %strm_buf, align 8, !tbaa !214
  %26 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %call5 = call i8* %22(i8* %25, %struct.gc_state_s* %26) #7
  %27 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %28 = bitcast i8* %27 to %struct.gx_device_pdf_s*
  %asides6 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %28, i32 0, i32 145
  %strm_buf7 = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %asides6, i32 0, i32 3
  store i8* %call5, i8** %strm_buf7, align 8, !tbaa !214
  %29 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %30 = bitcast %struct.gc_state_s* %29 to %struct.gc_procs_common_s**
  %31 = load %struct.gc_procs_common_s*, %struct.gc_procs_common_s** %30, align 8, !tbaa !1
  %reloc_struct_ptr8 = getelementptr inbounds %struct.gc_procs_common_s, %struct.gc_procs_common_s* %31, i32 0, i32 0
  %32 = load i8* (i8*, %struct.gc_state_s*)*, i8* (i8*, %struct.gc_state_s*)** %reloc_struct_ptr8, align 8, !tbaa !238
  %33 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %34 = bitcast i8* %33 to %struct.gx_device_pdf_s*
  %asides9 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %34, i32 0, i32 145
  %save_strm = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %asides9, i32 0, i32 4
  %35 = load %struct.stream_s*, %struct.stream_s** %save_strm, align 8, !tbaa !215
  %36 = bitcast %struct.stream_s* %35 to i8*
  %37 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %call10 = call i8* %32(i8* %36, %struct.gc_state_s* %37) #7
  %38 = bitcast i8* %call10 to %struct.stream_s*
  %39 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %40 = bitcast i8* %39 to %struct.gx_device_pdf_s*
  %asides11 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %40, i32 0, i32 145
  %save_strm12 = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %asides11, i32 0, i32 4
  store %struct.stream_s* %38, %struct.stream_s** %save_strm12, align 8, !tbaa !215
  %41 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %42 = bitcast %struct.gc_state_s* %41 to %struct.gc_procs_common_s**
  %43 = load %struct.gc_procs_common_s*, %struct.gc_procs_common_s** %42, align 8, !tbaa !1
  %reloc_struct_ptr13 = getelementptr inbounds %struct.gc_procs_common_s, %struct.gc_procs_common_s* %43, i32 0, i32 0
  %44 = load i8* (i8*, %struct.gc_state_s*)*, i8* (i8*, %struct.gc_state_s*)** %reloc_struct_ptr13, align 8, !tbaa !238
  %45 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %46 = bitcast i8* %45 to %struct.gx_device_pdf_s*
  %streams = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %46, i32 0, i32 146
  %strm14 = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %streams, i32 0, i32 2
  %47 = load %struct.stream_s*, %struct.stream_s** %strm14, align 8, !tbaa !216
  %48 = bitcast %struct.stream_s* %47 to i8*
  %49 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %call15 = call i8* %44(i8* %48, %struct.gc_state_s* %49) #7
  %50 = bitcast i8* %call15 to %struct.stream_s*
  %51 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %52 = bitcast i8* %51 to %struct.gx_device_pdf_s*
  %streams16 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %52, i32 0, i32 146
  %strm17 = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %streams16, i32 0, i32 2
  store %struct.stream_s* %50, %struct.stream_s** %strm17, align 8, !tbaa !216
  %53 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %54 = bitcast %struct.gc_state_s* %53 to %struct.gc_procs_common_s**
  %55 = load %struct.gc_procs_common_s*, %struct.gc_procs_common_s** %54, align 8, !tbaa !1
  %reloc_struct_ptr18 = getelementptr inbounds %struct.gc_procs_common_s, %struct.gc_procs_common_s* %55, i32 0, i32 0
  %56 = load i8* (i8*, %struct.gc_state_s*)*, i8* (i8*, %struct.gc_state_s*)** %reloc_struct_ptr18, align 8, !tbaa !238
  %57 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %58 = bitcast i8* %57 to %struct.gx_device_pdf_s*
  %streams19 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %58, i32 0, i32 146
  %strm_buf20 = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %streams19, i32 0, i32 3
  %59 = load i8*, i8** %strm_buf20, align 8, !tbaa !217
  %60 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %call21 = call i8* %56(i8* %59, %struct.gc_state_s* %60) #7
  %61 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %62 = bitcast i8* %61 to %struct.gx_device_pdf_s*
  %streams22 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %62, i32 0, i32 146
  %strm_buf23 = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %streams22, i32 0, i32 3
  store i8* %call21, i8** %strm_buf23, align 8, !tbaa !217
  %63 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %64 = bitcast %struct.gc_state_s* %63 to %struct.gc_procs_common_s**
  %65 = load %struct.gc_procs_common_s*, %struct.gc_procs_common_s** %64, align 8, !tbaa !1
  %reloc_struct_ptr24 = getelementptr inbounds %struct.gc_procs_common_s, %struct.gc_procs_common_s* %65, i32 0, i32 0
  %66 = load i8* (i8*, %struct.gc_state_s*)*, i8* (i8*, %struct.gc_state_s*)** %reloc_struct_ptr24, align 8, !tbaa !238
  %67 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %68 = bitcast i8* %67 to %struct.gx_device_pdf_s*
  %pictures = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %68, i32 0, i32 147
  %strm25 = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %pictures, i32 0, i32 2
  %69 = load %struct.stream_s*, %struct.stream_s** %strm25, align 8, !tbaa !218
  %70 = bitcast %struct.stream_s* %69 to i8*
  %71 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %call26 = call i8* %66(i8* %70, %struct.gc_state_s* %71) #7
  %72 = bitcast i8* %call26 to %struct.stream_s*
  %73 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %74 = bitcast i8* %73 to %struct.gx_device_pdf_s*
  %pictures27 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %74, i32 0, i32 147
  %strm28 = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %pictures27, i32 0, i32 2
  store %struct.stream_s* %72, %struct.stream_s** %strm28, align 8, !tbaa !218
  %75 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %76 = bitcast %struct.gc_state_s* %75 to %struct.gc_procs_common_s**
  %77 = load %struct.gc_procs_common_s*, %struct.gc_procs_common_s** %76, align 8, !tbaa !1
  %reloc_struct_ptr29 = getelementptr inbounds %struct.gc_procs_common_s, %struct.gc_procs_common_s* %77, i32 0, i32 0
  %78 = load i8* (i8*, %struct.gc_state_s*)*, i8* (i8*, %struct.gc_state_s*)** %reloc_struct_ptr29, align 8, !tbaa !238
  %79 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %80 = bitcast i8* %79 to %struct.gx_device_pdf_s*
  %pictures30 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %80, i32 0, i32 147
  %strm_buf31 = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %pictures30, i32 0, i32 3
  %81 = load i8*, i8** %strm_buf31, align 8, !tbaa !219
  %82 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %call32 = call i8* %78(i8* %81, %struct.gc_state_s* %82) #7
  %83 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %84 = bitcast i8* %83 to %struct.gx_device_pdf_s*
  %pictures33 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %84, i32 0, i32 147
  %strm_buf34 = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %pictures33, i32 0, i32 3
  store i8* %call32, i8** %strm_buf34, align 8, !tbaa !219
  %85 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %86 = bitcast %struct.gc_state_s* %85 to %struct.gc_procs_common_s**
  %87 = load %struct.gc_procs_common_s*, %struct.gc_procs_common_s** %86, align 8, !tbaa !1
  %reloc_struct_ptr35 = getelementptr inbounds %struct.gc_procs_common_s, %struct.gc_procs_common_s* %87, i32 0, i32 0
  %88 = load i8* (i8*, %struct.gc_state_s*)*, i8* (i8*, %struct.gc_state_s*)** %reloc_struct_ptr35, align 8, !tbaa !238
  %89 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %90 = bitcast i8* %89 to %struct.gx_device_pdf_s*
  %pictures36 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %90, i32 0, i32 147
  %save_strm37 = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %pictures36, i32 0, i32 4
  %91 = load %struct.stream_s*, %struct.stream_s** %save_strm37, align 8, !tbaa !220
  %92 = bitcast %struct.stream_s* %91 to i8*
  %93 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %call38 = call i8* %88(i8* %92, %struct.gc_state_s* %93) #7
  %94 = bitcast i8* %call38 to %struct.stream_s*
  %95 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %96 = bitcast i8* %95 to %struct.gx_device_pdf_s*
  %pictures39 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %96, i32 0, i32 147
  %save_strm40 = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %pictures39, i32 0, i32 4
  store %struct.stream_s* %94, %struct.stream_s** %save_strm40, align 8, !tbaa !220
  %97 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %98 = bitcast %struct.gc_state_s* %97 to %struct.gc_procs_common_s**
  %99 = load %struct.gc_procs_common_s*, %struct.gc_procs_common_s** %98, align 8, !tbaa !1
  %reloc_struct_ptr41 = getelementptr inbounds %struct.gc_procs_common_s, %struct.gc_procs_common_s* %99, i32 0, i32 0
  %100 = load i8* (i8*, %struct.gc_state_s*)*, i8* (i8*, %struct.gc_state_s*)** %reloc_struct_ptr41, align 8, !tbaa !238
  %101 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %102 = bitcast i8* %101 to %struct.gx_device_pdf_s*
  %Catalog = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %102, i32 0, i32 149
  %103 = load %struct.cos_dict_s*, %struct.cos_dict_s** %Catalog, align 8, !tbaa !108
  %104 = bitcast %struct.cos_dict_s* %103 to i8*
  %105 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %call42 = call i8* %100(i8* %104, %struct.gc_state_s* %105) #7
  %106 = bitcast i8* %call42 to %struct.cos_dict_s*
  %107 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %108 = bitcast i8* %107 to %struct.gx_device_pdf_s*
  %Catalog43 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %108, i32 0, i32 149
  store %struct.cos_dict_s* %106, %struct.cos_dict_s** %Catalog43, align 8, !tbaa !108
  %109 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %110 = bitcast %struct.gc_state_s* %109 to %struct.gc_procs_common_s**
  %111 = load %struct.gc_procs_common_s*, %struct.gc_procs_common_s** %110, align 8, !tbaa !1
  %reloc_struct_ptr44 = getelementptr inbounds %struct.gc_procs_common_s, %struct.gc_procs_common_s* %111, i32 0, i32 0
  %112 = load i8* (i8*, %struct.gc_state_s*)*, i8* (i8*, %struct.gc_state_s*)** %reloc_struct_ptr44, align 8, !tbaa !238
  %113 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %114 = bitcast i8* %113 to %struct.gx_device_pdf_s*
  %Info = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %114, i32 0, i32 150
  %115 = load %struct.cos_dict_s*, %struct.cos_dict_s** %Info, align 8, !tbaa !112
  %116 = bitcast %struct.cos_dict_s* %115 to i8*
  %117 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %call45 = call i8* %112(i8* %116, %struct.gc_state_s* %117) #7
  %118 = bitcast i8* %call45 to %struct.cos_dict_s*
  %119 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %120 = bitcast i8* %119 to %struct.gx_device_pdf_s*
  %Info46 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %120, i32 0, i32 150
  store %struct.cos_dict_s* %118, %struct.cos_dict_s** %Info46, align 8, !tbaa !112
  %121 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %122 = bitcast %struct.gc_state_s* %121 to %struct.gc_procs_common_s**
  %123 = load %struct.gc_procs_common_s*, %struct.gc_procs_common_s** %122, align 8, !tbaa !1
  %reloc_struct_ptr47 = getelementptr inbounds %struct.gc_procs_common_s, %struct.gc_procs_common_s* %123, i32 0, i32 0
  %124 = load i8* (i8*, %struct.gc_state_s*)*, i8* (i8*, %struct.gc_state_s*)** %reloc_struct_ptr47, align 8, !tbaa !238
  %125 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %126 = bitcast i8* %125 to %struct.gx_device_pdf_s*
  %Pages = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %126, i32 0, i32 151
  %127 = load %struct.cos_dict_s*, %struct.cos_dict_s** %Pages, align 8, !tbaa !113
  %128 = bitcast %struct.cos_dict_s* %127 to i8*
  %129 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %call48 = call i8* %124(i8* %128, %struct.gc_state_s* %129) #7
  %130 = bitcast i8* %call48 to %struct.cos_dict_s*
  %131 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %132 = bitcast i8* %131 to %struct.gx_device_pdf_s*
  %Pages49 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %132, i32 0, i32 151
  store %struct.cos_dict_s* %130, %struct.cos_dict_s** %Pages49, align 8, !tbaa !113
  %133 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %134 = bitcast %struct.gc_state_s* %133 to %struct.gc_procs_common_s**
  %135 = load %struct.gc_procs_common_s*, %struct.gc_procs_common_s** %134, align 8, !tbaa !1
  %reloc_struct_ptr50 = getelementptr inbounds %struct.gc_procs_common_s, %struct.gc_procs_common_s* %135, i32 0, i32 0
  %136 = load i8* (i8*, %struct.gc_state_s*)*, i8* (i8*, %struct.gc_state_s*)** %reloc_struct_ptr50, align 8, !tbaa !238
  %137 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %138 = bitcast i8* %137 to %struct.gx_device_pdf_s*
  %text = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %138, i32 0, i32 160
  %139 = load %struct.pdf_text_data_s*, %struct.pdf_text_data_s** %text, align 8, !tbaa !73
  %140 = bitcast %struct.pdf_text_data_s* %139 to i8*
  %141 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %call51 = call i8* %136(i8* %140, %struct.gc_state_s* %141) #7
  %142 = bitcast i8* %call51 to %struct.pdf_text_data_s*
  %143 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %144 = bitcast i8* %143 to %struct.gx_device_pdf_s*
  %text52 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %144, i32 0, i32 160
  store %struct.pdf_text_data_s* %142, %struct.pdf_text_data_s** %text52, align 8, !tbaa !73
  %145 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %146 = bitcast %struct.gc_state_s* %145 to %struct.gc_procs_common_s**
  %147 = load %struct.gc_procs_common_s*, %struct.gc_procs_common_s** %146, align 8, !tbaa !1
  %reloc_struct_ptr53 = getelementptr inbounds %struct.gc_procs_common_s, %struct.gc_procs_common_s* %147, i32 0, i32 0
  %148 = load i8* (i8*, %struct.gc_state_s*)*, i8* (i8*, %struct.gc_state_s*)** %reloc_struct_ptr53, align 8, !tbaa !238
  %149 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %150 = bitcast i8* %149 to %struct.gx_device_pdf_s*
  %pages = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %150, i32 0, i32 162
  %151 = load %struct.pdf_page_s*, %struct.pdf_page_s** %pages, align 8, !tbaa !77
  %152 = bitcast %struct.pdf_page_s* %151 to i8*
  %153 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %call54 = call i8* %148(i8* %152, %struct.gc_state_s* %153) #7
  %154 = bitcast i8* %call54 to %struct.pdf_page_s*
  %155 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %156 = bitcast i8* %155 to %struct.gx_device_pdf_s*
  %pages55 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %156, i32 0, i32 162
  store %struct.pdf_page_s* %154, %struct.pdf_page_s** %pages55, align 8, !tbaa !77
  %157 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %158 = bitcast %struct.gc_state_s* %157 to %struct.gc_procs_common_s**
  %159 = load %struct.gc_procs_common_s*, %struct.gc_procs_common_s** %158, align 8, !tbaa !1
  %reloc_struct_ptr56 = getelementptr inbounds %struct.gc_procs_common_s, %struct.gc_procs_common_s* %159, i32 0, i32 0
  %160 = load i8* (i8*, %struct.gc_state_s*)*, i8* (i8*, %struct.gc_state_s*)** %reloc_struct_ptr56, align 8, !tbaa !238
  %161 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %162 = bitcast i8* %161 to %struct.gx_device_pdf_s*
  %cs_Patterns = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %162, i32 0, i32 166
  %arrayidx = getelementptr inbounds [5 x %struct.pdf_resource_s*], [5 x %struct.pdf_resource_s*]* %cs_Patterns, i32 0, i64 0
  %163 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %arrayidx, align 8, !tbaa !1
  %164 = bitcast %struct.pdf_resource_s* %163 to i8*
  %165 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %call57 = call i8* %160(i8* %164, %struct.gc_state_s* %165) #7
  %166 = bitcast i8* %call57 to %struct.pdf_resource_s*
  %167 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %168 = bitcast i8* %167 to %struct.gx_device_pdf_s*
  %cs_Patterns58 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %168, i32 0, i32 166
  %arrayidx59 = getelementptr inbounds [5 x %struct.pdf_resource_s*], [5 x %struct.pdf_resource_s*]* %cs_Patterns58, i32 0, i64 0
  store %struct.pdf_resource_s* %166, %struct.pdf_resource_s** %arrayidx59, align 8, !tbaa !1
  %169 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %170 = bitcast %struct.gc_state_s* %169 to %struct.gc_procs_common_s**
  %171 = load %struct.gc_procs_common_s*, %struct.gc_procs_common_s** %170, align 8, !tbaa !1
  %reloc_struct_ptr60 = getelementptr inbounds %struct.gc_procs_common_s, %struct.gc_procs_common_s* %171, i32 0, i32 0
  %172 = load i8* (i8*, %struct.gc_state_s*)*, i8* (i8*, %struct.gc_state_s*)** %reloc_struct_ptr60, align 8, !tbaa !238
  %173 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %174 = bitcast i8* %173 to %struct.gx_device_pdf_s*
  %cs_Patterns61 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %174, i32 0, i32 166
  %arrayidx62 = getelementptr inbounds [5 x %struct.pdf_resource_s*], [5 x %struct.pdf_resource_s*]* %cs_Patterns61, i32 0, i64 1
  %175 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %arrayidx62, align 8, !tbaa !1
  %176 = bitcast %struct.pdf_resource_s* %175 to i8*
  %177 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %call63 = call i8* %172(i8* %176, %struct.gc_state_s* %177) #7
  %178 = bitcast i8* %call63 to %struct.pdf_resource_s*
  %179 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %180 = bitcast i8* %179 to %struct.gx_device_pdf_s*
  %cs_Patterns64 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %180, i32 0, i32 166
  %arrayidx65 = getelementptr inbounds [5 x %struct.pdf_resource_s*], [5 x %struct.pdf_resource_s*]* %cs_Patterns64, i32 0, i64 1
  store %struct.pdf_resource_s* %178, %struct.pdf_resource_s** %arrayidx65, align 8, !tbaa !1
  %181 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %182 = bitcast %struct.gc_state_s* %181 to %struct.gc_procs_common_s**
  %183 = load %struct.gc_procs_common_s*, %struct.gc_procs_common_s** %182, align 8, !tbaa !1
  %reloc_struct_ptr66 = getelementptr inbounds %struct.gc_procs_common_s, %struct.gc_procs_common_s* %183, i32 0, i32 0
  %184 = load i8* (i8*, %struct.gc_state_s*)*, i8* (i8*, %struct.gc_state_s*)** %reloc_struct_ptr66, align 8, !tbaa !238
  %185 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %186 = bitcast i8* %185 to %struct.gx_device_pdf_s*
  %cs_Patterns67 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %186, i32 0, i32 166
  %arrayidx68 = getelementptr inbounds [5 x %struct.pdf_resource_s*], [5 x %struct.pdf_resource_s*]* %cs_Patterns67, i32 0, i64 3
  %187 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %arrayidx68, align 8, !tbaa !1
  %188 = bitcast %struct.pdf_resource_s* %187 to i8*
  %189 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %call69 = call i8* %184(i8* %188, %struct.gc_state_s* %189) #7
  %190 = bitcast i8* %call69 to %struct.pdf_resource_s*
  %191 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %192 = bitcast i8* %191 to %struct.gx_device_pdf_s*
  %cs_Patterns70 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %192, i32 0, i32 166
  %arrayidx71 = getelementptr inbounds [5 x %struct.pdf_resource_s*], [5 x %struct.pdf_resource_s*]* %cs_Patterns70, i32 0, i64 3
  store %struct.pdf_resource_s* %190, %struct.pdf_resource_s** %arrayidx71, align 8, !tbaa !1
  %193 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %194 = bitcast %struct.gc_state_s* %193 to %struct.gc_procs_common_s**
  %195 = load %struct.gc_procs_common_s*, %struct.gc_procs_common_s** %194, align 8, !tbaa !1
  %reloc_struct_ptr72 = getelementptr inbounds %struct.gc_procs_common_s, %struct.gc_procs_common_s* %195, i32 0, i32 0
  %196 = load i8* (i8*, %struct.gc_state_s*)*, i8* (i8*, %struct.gc_state_s*)** %reloc_struct_ptr72, align 8, !tbaa !238
  %197 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %198 = bitcast i8* %197 to %struct.gx_device_pdf_s*
  %cs_Patterns73 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %198, i32 0, i32 166
  %arrayidx74 = getelementptr inbounds [5 x %struct.pdf_resource_s*], [5 x %struct.pdf_resource_s*]* %cs_Patterns73, i32 0, i64 4
  %199 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %arrayidx74, align 8, !tbaa !1
  %200 = bitcast %struct.pdf_resource_s* %199 to i8*
  %201 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %call75 = call i8* %196(i8* %200, %struct.gc_state_s* %201) #7
  %202 = bitcast i8* %call75 to %struct.pdf_resource_s*
  %203 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %204 = bitcast i8* %203 to %struct.gx_device_pdf_s*
  %cs_Patterns76 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %204, i32 0, i32 166
  %arrayidx77 = getelementptr inbounds [5 x %struct.pdf_resource_s*], [5 x %struct.pdf_resource_s*]* %cs_Patterns76, i32 0, i64 4
  store %struct.pdf_resource_s* %202, %struct.pdf_resource_s** %arrayidx77, align 8, !tbaa !1
  %205 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %206 = bitcast %struct.gc_state_s* %205 to %struct.gc_procs_common_s**
  %207 = load %struct.gc_procs_common_s*, %struct.gc_procs_common_s** %206, align 8, !tbaa !1
  %reloc_struct_ptr78 = getelementptr inbounds %struct.gc_procs_common_s, %struct.gc_procs_common_s* %207, i32 0, i32 0
  %208 = load i8* (i8*, %struct.gc_state_s*)*, i8* (i8*, %struct.gc_state_s*)** %reloc_struct_ptr78, align 8, !tbaa !238
  %209 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %210 = bitcast i8* %209 to %struct.gx_device_pdf_s*
  %last_resource = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %210, i32 0, i32 168
  %211 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %last_resource, align 8, !tbaa !176
  %212 = bitcast %struct.pdf_resource_s* %211 to i8*
  %213 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %call79 = call i8* %208(i8* %212, %struct.gc_state_s* %213) #7
  %214 = bitcast i8* %call79 to %struct.pdf_resource_s*
  %215 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %216 = bitcast i8* %215 to %struct.gx_device_pdf_s*
  %last_resource80 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %216, i32 0, i32 168
  store %struct.pdf_resource_s* %214, %struct.pdf_resource_s** %last_resource80, align 8, !tbaa !176
  %217 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %218 = bitcast %struct.gc_state_s* %217 to %struct.gc_procs_common_s**
  %219 = load %struct.gc_procs_common_s*, %struct.gc_procs_common_s** %218, align 8, !tbaa !1
  %reloc_struct_ptr81 = getelementptr inbounds %struct.gc_procs_common_s, %struct.gc_procs_common_s* %219, i32 0, i32 0
  %220 = load i8* (i8*, %struct.gc_state_s*)*, i8* (i8*, %struct.gc_state_s*)** %reloc_struct_ptr81, align 8, !tbaa !238
  %221 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %222 = bitcast i8* %221 to %struct.gx_device_pdf_s*
  %articles = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %222, i32 0, i32 176
  %223 = load %struct.pdf_article_s*, %struct.pdf_article_s** %articles, align 8, !tbaa !90
  %224 = bitcast %struct.pdf_article_s* %223 to i8*
  %225 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %call82 = call i8* %220(i8* %224, %struct.gc_state_s* %225) #7
  %226 = bitcast i8* %call82 to %struct.pdf_article_s*
  %227 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %228 = bitcast i8* %227 to %struct.gx_device_pdf_s*
  %articles83 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %228, i32 0, i32 176
  store %struct.pdf_article_s* %226, %struct.pdf_article_s** %articles83, align 8, !tbaa !90
  %229 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %230 = bitcast %struct.gc_state_s* %229 to %struct.gc_procs_common_s**
  %231 = load %struct.gc_procs_common_s*, %struct.gc_procs_common_s** %230, align 8, !tbaa !1
  %reloc_struct_ptr84 = getelementptr inbounds %struct.gc_procs_common_s, %struct.gc_procs_common_s* %231, i32 0, i32 0
  %232 = load i8* (i8*, %struct.gc_state_s*)*, i8* (i8*, %struct.gc_state_s*)** %reloc_struct_ptr84, align 8, !tbaa !238
  %233 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %234 = bitcast i8* %233 to %struct.gx_device_pdf_s*
  %Dests = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %234, i32 0, i32 177
  %235 = load %struct.cos_dict_s*, %struct.cos_dict_s** %Dests, align 8, !tbaa !91
  %236 = bitcast %struct.cos_dict_s* %235 to i8*
  %237 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %call85 = call i8* %232(i8* %236, %struct.gc_state_s* %237) #7
  %238 = bitcast i8* %call85 to %struct.cos_dict_s*
  %239 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %240 = bitcast i8* %239 to %struct.gx_device_pdf_s*
  %Dests86 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %240, i32 0, i32 177
  store %struct.cos_dict_s* %238, %struct.cos_dict_s** %Dests86, align 8, !tbaa !91
  %241 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %242 = bitcast %struct.gc_state_s* %241 to %struct.gc_procs_common_s**
  %243 = load %struct.gc_procs_common_s*, %struct.gc_procs_common_s** %242, align 8, !tbaa !1
  %reloc_struct_ptr87 = getelementptr inbounds %struct.gc_procs_common_s, %struct.gc_procs_common_s* %243, i32 0, i32 0
  %244 = load i8* (i8*, %struct.gc_state_s*)*, i8* (i8*, %struct.gc_state_s*)** %reloc_struct_ptr87, align 8, !tbaa !238
  %245 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %246 = bitcast i8* %245 to %struct.gx_device_pdf_s*
  %global_named_objects = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %246, i32 0, i32 181
  %247 = load %struct.cos_dict_s*, %struct.cos_dict_s** %global_named_objects, align 8, !tbaa !61
  %248 = bitcast %struct.cos_dict_s* %247 to i8*
  %249 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %call88 = call i8* %244(i8* %248, %struct.gc_state_s* %249) #7
  %250 = bitcast i8* %call88 to %struct.cos_dict_s*
  %251 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %252 = bitcast i8* %251 to %struct.gx_device_pdf_s*
  %global_named_objects89 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %252, i32 0, i32 181
  store %struct.cos_dict_s* %250, %struct.cos_dict_s** %global_named_objects89, align 8, !tbaa !61
  %253 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %254 = bitcast %struct.gc_state_s* %253 to %struct.gc_procs_common_s**
  %255 = load %struct.gc_procs_common_s*, %struct.gc_procs_common_s** %254, align 8, !tbaa !1
  %reloc_struct_ptr90 = getelementptr inbounds %struct.gc_procs_common_s, %struct.gc_procs_common_s* %255, i32 0, i32 0
  %256 = load i8* (i8*, %struct.gc_state_s*)*, i8* (i8*, %struct.gc_state_s*)** %reloc_struct_ptr90, align 8, !tbaa !238
  %257 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %258 = bitcast i8* %257 to %struct.gx_device_pdf_s*
  %local_named_objects = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %258, i32 0, i32 182
  %259 = load %struct.cos_dict_s*, %struct.cos_dict_s** %local_named_objects, align 8, !tbaa !62
  %260 = bitcast %struct.cos_dict_s* %259 to i8*
  %261 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %call91 = call i8* %256(i8* %260, %struct.gc_state_s* %261) #7
  %262 = bitcast i8* %call91 to %struct.cos_dict_s*
  %263 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %264 = bitcast i8* %263 to %struct.gx_device_pdf_s*
  %local_named_objects92 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %264, i32 0, i32 182
  store %struct.cos_dict_s* %262, %struct.cos_dict_s** %local_named_objects92, align 8, !tbaa !62
  %265 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %266 = bitcast %struct.gc_state_s* %265 to %struct.gc_procs_common_s**
  %267 = load %struct.gc_procs_common_s*, %struct.gc_procs_common_s** %266, align 8, !tbaa !1
  %reloc_struct_ptr93 = getelementptr inbounds %struct.gc_procs_common_s, %struct.gc_procs_common_s* %267, i32 0, i32 0
  %268 = load i8* (i8*, %struct.gc_state_s*)*, i8* (i8*, %struct.gc_state_s*)** %reloc_struct_ptr93, align 8, !tbaa !238
  %269 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %270 = bitcast i8* %269 to %struct.gx_device_pdf_s*
  %NI_stack = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %270, i32 0, i32 183
  %271 = load %struct.cos_array_s*, %struct.cos_array_s** %NI_stack, align 8, !tbaa !63
  %272 = bitcast %struct.cos_array_s* %271 to i8*
  %273 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %call94 = call i8* %268(i8* %272, %struct.gc_state_s* %273) #7
  %274 = bitcast i8* %call94 to %struct.cos_array_s*
  %275 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %276 = bitcast i8* %275 to %struct.gx_device_pdf_s*
  %NI_stack95 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %276, i32 0, i32 183
  store %struct.cos_array_s* %274, %struct.cos_array_s** %NI_stack95, align 8, !tbaa !63
  %277 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %278 = bitcast %struct.gc_state_s* %277 to %struct.gc_procs_common_s**
  %279 = load %struct.gc_procs_common_s*, %struct.gc_procs_common_s** %278, align 8, !tbaa !1
  %reloc_struct_ptr96 = getelementptr inbounds %struct.gc_procs_common_s, %struct.gc_procs_common_s* %279, i32 0, i32 0
  %280 = load i8* (i8*, %struct.gc_state_s*)*, i8* (i8*, %struct.gc_state_s*)** %reloc_struct_ptr96, align 8, !tbaa !238
  %281 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %282 = bitcast i8* %281 to %struct.gx_device_pdf_s*
  %Namespace_stack = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %282, i32 0, i32 184
  %283 = load %struct.cos_array_s*, %struct.cos_array_s** %Namespace_stack, align 8, !tbaa !67
  %284 = bitcast %struct.cos_array_s* %283 to i8*
  %285 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %call97 = call i8* %280(i8* %284, %struct.gc_state_s* %285) #7
  %286 = bitcast i8* %call97 to %struct.cos_array_s*
  %287 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %288 = bitcast i8* %287 to %struct.gx_device_pdf_s*
  %Namespace_stack98 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %288, i32 0, i32 184
  store %struct.cos_array_s* %286, %struct.cos_array_s** %Namespace_stack98, align 8, !tbaa !67
  %289 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %290 = bitcast %struct.gc_state_s* %289 to %struct.gc_procs_common_s**
  %291 = load %struct.gc_procs_common_s*, %struct.gc_procs_common_s** %290, align 8, !tbaa !1
  %reloc_struct_ptr99 = getelementptr inbounds %struct.gc_procs_common_s, %struct.gc_procs_common_s* %291, i32 0, i32 0
  %292 = load i8* (i8*, %struct.gc_state_s*)*, i8* (i8*, %struct.gc_state_s*)** %reloc_struct_ptr99, align 8, !tbaa !238
  %293 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %294 = bitcast i8* %293 to %struct.gx_device_pdf_s*
  %font_cache = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %294, i32 0, i32 185
  %295 = load %struct.pdf_font_cache_elem_s*, %struct.pdf_font_cache_elem_s** %font_cache, align 8, !tbaa !178
  %296 = bitcast %struct.pdf_font_cache_elem_s* %295 to i8*
  %297 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %call100 = call i8* %292(i8* %296, %struct.gc_state_s* %297) #7
  %298 = bitcast i8* %call100 to %struct.pdf_font_cache_elem_s*
  %299 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %300 = bitcast i8* %299 to %struct.gx_device_pdf_s*
  %font_cache101 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %300, i32 0, i32 185
  store %struct.pdf_font_cache_elem_s* %298, %struct.pdf_font_cache_elem_s** %font_cache101, align 8, !tbaa !178
  %301 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %302 = bitcast %struct.gc_state_s* %301 to %struct.gc_procs_common_s**
  %303 = load %struct.gc_procs_common_s*, %struct.gc_procs_common_s** %302, align 8, !tbaa !1
  %reloc_struct_ptr102 = getelementptr inbounds %struct.gc_procs_common_s, %struct.gc_procs_common_s* %303, i32 0, i32 0
  %304 = load i8* (i8*, %struct.gc_state_s*)*, i8* (i8*, %struct.gc_state_s*)** %reloc_struct_ptr102, align 8, !tbaa !238
  %305 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %306 = bitcast i8* %305 to %struct.gx_device_pdf_s*
  %clip_path = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %306, i32 0, i32 187
  %307 = load %struct.gx_path_s*, %struct.gx_path_s** %clip_path, align 8, !tbaa !221
  %308 = bitcast %struct.gx_path_s* %307 to i8*
  %309 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %call103 = call i8* %304(i8* %308, %struct.gc_state_s* %309) #7
  %310 = bitcast i8* %call103 to %struct.gx_path_s*
  %311 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %312 = bitcast i8* %311 to %struct.gx_device_pdf_s*
  %clip_path104 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %312, i32 0, i32 187
  store %struct.gx_path_s* %310, %struct.gx_path_s** %clip_path104, align 8, !tbaa !221
  %313 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %314 = bitcast %struct.gc_state_s* %313 to %struct.gc_procs_common_s**
  %315 = load %struct.gc_procs_common_s*, %struct.gc_procs_common_s** %314, align 8, !tbaa !1
  %reloc_struct_ptr105 = getelementptr inbounds %struct.gc_procs_common_s, %struct.gc_procs_common_s* %315, i32 0, i32 0
  %316 = load i8* (i8*, %struct.gc_state_s*)*, i8* (i8*, %struct.gc_state_s*)** %reloc_struct_ptr105, align 8, !tbaa !238
  %317 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %318 = bitcast i8* %317 to %struct.gx_device_pdf_s*
  %PageLabels = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %318, i32 0, i32 188
  %319 = load %struct.cos_array_s*, %struct.cos_array_s** %PageLabels, align 8, !tbaa !93
  %320 = bitcast %struct.cos_array_s* %319 to i8*
  %321 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %call106 = call i8* %316(i8* %320, %struct.gc_state_s* %321) #7
  %322 = bitcast i8* %call106 to %struct.cos_array_s*
  %323 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %324 = bitcast i8* %323 to %struct.gx_device_pdf_s*
  %PageLabels107 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %324, i32 0, i32 188
  store %struct.cos_array_s* %322, %struct.cos_array_s** %PageLabels107, align 8, !tbaa !93
  %325 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %326 = bitcast %struct.gc_state_s* %325 to %struct.gc_procs_common_s**
  %327 = load %struct.gc_procs_common_s*, %struct.gc_procs_common_s** %326, align 8, !tbaa !1
  %reloc_struct_ptr108 = getelementptr inbounds %struct.gc_procs_common_s, %struct.gc_procs_common_s* %327, i32 0, i32 0
  %328 = load i8* (i8*, %struct.gc_state_s*)*, i8* (i8*, %struct.gc_state_s*)** %reloc_struct_ptr108, align 8, !tbaa !238
  %329 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %330 = bitcast i8* %329 to %struct.gx_device_pdf_s*
  %PageLabels_current_label = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %330, i32 0, i32 190
  %331 = load %struct.cos_dict_s*, %struct.cos_dict_s** %PageLabels_current_label, align 8, !tbaa !95
  %332 = bitcast %struct.cos_dict_s* %331 to i8*
  %333 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %call109 = call i8* %328(i8* %332, %struct.gc_state_s* %333) #7
  %334 = bitcast i8* %call109 to %struct.cos_dict_s*
  %335 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %336 = bitcast i8* %335 to %struct.gx_device_pdf_s*
  %PageLabels_current_label110 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %336, i32 0, i32 190
  store %struct.cos_dict_s* %334, %struct.cos_dict_s** %PageLabels_current_label110, align 8, !tbaa !95
  %337 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %338 = bitcast %struct.gc_state_s* %337 to %struct.gc_procs_common_s**
  %339 = load %struct.gc_procs_common_s*, %struct.gc_procs_common_s** %338, align 8, !tbaa !1
  %reloc_struct_ptr111 = getelementptr inbounds %struct.gc_procs_common_s, %struct.gc_procs_common_s* %339, i32 0, i32 0
  %340 = load i8* (i8*, %struct.gc_state_s*)*, i8* (i8*, %struct.gc_state_s*)** %reloc_struct_ptr111, align 8, !tbaa !238
  %341 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %342 = bitcast i8* %341 to %struct.gx_device_pdf_s*
  %sbstack = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %342, i32 0, i32 200
  %343 = load %struct.pdf_substream_save_s*, %struct.pdf_substream_save_s** %sbstack, align 8, !tbaa !76
  %344 = bitcast %struct.pdf_substream_save_s* %343 to i8*
  %345 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %call112 = call i8* %340(i8* %344, %struct.gc_state_s* %345) #7
  %346 = bitcast i8* %call112 to %struct.pdf_substream_save_s*
  %347 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %348 = bitcast i8* %347 to %struct.gx_device_pdf_s*
  %sbstack113 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %348, i32 0, i32 200
  store %struct.pdf_substream_save_s* %346, %struct.pdf_substream_save_s** %sbstack113, align 8, !tbaa !76
  %349 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %350 = bitcast %struct.gc_state_s* %349 to %struct.gc_procs_common_s**
  %351 = load %struct.gc_procs_common_s*, %struct.gc_procs_common_s** %350, align 8, !tbaa !1
  %reloc_struct_ptr114 = getelementptr inbounds %struct.gc_procs_common_s, %struct.gc_procs_common_s* %351, i32 0, i32 0
  %352 = load i8* (i8*, %struct.gc_state_s*)*, i8* (i8*, %struct.gc_state_s*)** %reloc_struct_ptr114, align 8, !tbaa !238
  %353 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %354 = bitcast i8* %353 to %struct.gx_device_pdf_s*
  %substream_Resources = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %354, i32 0, i32 205
  %355 = load %struct.cos_dict_s*, %struct.cos_dict_s** %substream_Resources, align 8, !tbaa !222
  %356 = bitcast %struct.cos_dict_s* %355 to i8*
  %357 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %call115 = call i8* %352(i8* %356, %struct.gc_state_s* %357) #7
  %358 = bitcast i8* %call115 to %struct.cos_dict_s*
  %359 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %360 = bitcast i8* %359 to %struct.gx_device_pdf_s*
  %substream_Resources116 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %360, i32 0, i32 205
  store %struct.cos_dict_s* %358, %struct.cos_dict_s** %substream_Resources116, align 8, !tbaa !222
  %361 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %362 = bitcast %struct.gc_state_s* %361 to %struct.gc_procs_common_s**
  %363 = load %struct.gc_procs_common_s*, %struct.gc_procs_common_s** %362, align 8, !tbaa !1
  %reloc_struct_ptr117 = getelementptr inbounds %struct.gc_procs_common_s, %struct.gc_procs_common_s* %363, i32 0, i32 0
  %364 = load i8* (i8*, %struct.gc_state_s*)*, i8* (i8*, %struct.gc_state_s*)** %reloc_struct_ptr117, align 8, !tbaa !238
  %365 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %366 = bitcast i8* %365 to %struct.gx_device_pdf_s*
  %font3 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %366, i32 0, i32 209
  %367 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %font3, align 8, !tbaa !223
  %368 = bitcast %struct.pdf_resource_s* %367 to i8*
  %369 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %call118 = call i8* %364(i8* %368, %struct.gc_state_s* %369) #7
  %370 = bitcast i8* %call118 to %struct.pdf_resource_s*
  %371 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %372 = bitcast i8* %371 to %struct.gx_device_pdf_s*
  %font3119 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %372, i32 0, i32 209
  store %struct.pdf_resource_s* %370, %struct.pdf_resource_s** %font3119, align 8, !tbaa !223
  %373 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %374 = bitcast %struct.gc_state_s* %373 to %struct.gc_procs_common_s**
  %375 = load %struct.gc_procs_common_s*, %struct.gc_procs_common_s** %374, align 8, !tbaa !1
  %reloc_struct_ptr120 = getelementptr inbounds %struct.gc_procs_common_s, %struct.gc_procs_common_s* %375, i32 0, i32 0
  %376 = load i8* (i8*, %struct.gc_state_s*)*, i8* (i8*, %struct.gc_state_s*)** %reloc_struct_ptr120, align 8, !tbaa !238
  %377 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %378 = bitcast i8* %377 to %struct.gx_device_pdf_s*
  %accumulating_substream_resource = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %378, i32 0, i32 210
  %379 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %accumulating_substream_resource, align 8, !tbaa !224
  %380 = bitcast %struct.pdf_resource_s* %379 to i8*
  %381 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %call121 = call i8* %376(i8* %380, %struct.gc_state_s* %381) #7
  %382 = bitcast i8* %call121 to %struct.pdf_resource_s*
  %383 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %384 = bitcast i8* %383 to %struct.gx_device_pdf_s*
  %accumulating_substream_resource122 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %384, i32 0, i32 210
  store %struct.pdf_resource_s* %382, %struct.pdf_resource_s** %accumulating_substream_resource122, align 8, !tbaa !224
  %385 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %386 = bitcast %struct.gc_state_s* %385 to %struct.gc_procs_common_s**
  %387 = load %struct.gc_procs_common_s*, %struct.gc_procs_common_s** %386, align 8, !tbaa !1
  %reloc_struct_ptr123 = getelementptr inbounds %struct.gc_procs_common_s, %struct.gc_procs_common_s* %387, i32 0, i32 0
  %388 = load i8* (i8*, %struct.gc_state_s*)*, i8* (i8*, %struct.gc_state_s*)** %reloc_struct_ptr123, align 8, !tbaa !238
  %389 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %390 = bitcast i8* %389 to %struct.gx_device_pdf_s*
  %pres_soft_mask_dict = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %390, i32 0, i32 226
  %391 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %pres_soft_mask_dict, align 8, !tbaa !225
  %392 = bitcast %struct.pdf_resource_s* %391 to i8*
  %393 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %call124 = call i8* %388(i8* %392, %struct.gc_state_s* %393) #7
  %394 = bitcast i8* %call124 to %struct.pdf_resource_s*
  %395 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %396 = bitcast i8* %395 to %struct.gx_device_pdf_s*
  %pres_soft_mask_dict125 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %396, i32 0, i32 226
  store %struct.pdf_resource_s* %394, %struct.pdf_resource_s** %pres_soft_mask_dict125, align 8, !tbaa !225
  %397 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %398 = bitcast %struct.gc_state_s* %397 to %struct.gc_procs_common_s**
  %399 = load %struct.gc_procs_common_s*, %struct.gc_procs_common_s** %398, align 8, !tbaa !1
  %reloc_struct_ptr126 = getelementptr inbounds %struct.gc_procs_common_s, %struct.gc_procs_common_s* %399, i32 0, i32 0
  %400 = load i8* (i8*, %struct.gc_state_s*)*, i8* (i8*, %struct.gc_state_s*)** %reloc_struct_ptr126, align 8, !tbaa !238
  %401 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %402 = bitcast i8* %401 to %struct.gx_device_pdf_s*
  %PDFXTrimBoxToMediaBoxOffset = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %402, i32 0, i32 88
  %data = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %PDFXTrimBoxToMediaBoxOffset, i32 0, i32 0
  %403 = load float*, float** %data, align 8, !tbaa !226
  %404 = bitcast float* %403 to i8*
  %405 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %call127 = call i8* %400(i8* %404, %struct.gc_state_s* %405) #7
  %406 = bitcast i8* %call127 to float*
  %407 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %408 = bitcast i8* %407 to %struct.gx_device_pdf_s*
  %PDFXTrimBoxToMediaBoxOffset128 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %408, i32 0, i32 88
  %data129 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %PDFXTrimBoxToMediaBoxOffset128, i32 0, i32 0
  store float* %406, float** %data129, align 8, !tbaa !226
  %409 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %410 = bitcast %struct.gc_state_s* %409 to %struct.gc_procs_common_s**
  %411 = load %struct.gc_procs_common_s*, %struct.gc_procs_common_s** %410, align 8, !tbaa !1
  %reloc_struct_ptr130 = getelementptr inbounds %struct.gc_procs_common_s, %struct.gc_procs_common_s* %411, i32 0, i32 0
  %412 = load i8* (i8*, %struct.gc_state_s*)*, i8* (i8*, %struct.gc_state_s*)** %reloc_struct_ptr130, align 8, !tbaa !238
  %413 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %414 = bitcast i8* %413 to %struct.gx_device_pdf_s*
  %PDFXBleedBoxToTrimBoxOffset = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %414, i32 0, i32 89
  %data131 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %PDFXBleedBoxToTrimBoxOffset, i32 0, i32 0
  %415 = load float*, float** %data131, align 8, !tbaa !227
  %416 = bitcast float* %415 to i8*
  %417 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %call132 = call i8* %412(i8* %416, %struct.gc_state_s* %417) #7
  %418 = bitcast i8* %call132 to float*
  %419 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %420 = bitcast i8* %419 to %struct.gx_device_pdf_s*
  %PDFXBleedBoxToTrimBoxOffset133 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %420, i32 0, i32 89
  %data134 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %PDFXBleedBoxToTrimBoxOffset133, i32 0, i32 0
  store float* %418, float** %data134, align 8, !tbaa !227
  %421 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %422 = bitcast %struct.gc_state_s* %421 to %struct.gc_procs_common_s**
  %423 = load %struct.gc_procs_common_s*, %struct.gc_procs_common_s** %422, align 8, !tbaa !1
  %reloc_struct_ptr135 = getelementptr inbounds %struct.gc_procs_common_s, %struct.gc_procs_common_s* %423, i32 0, i32 0
  %424 = load i8* (i8*, %struct.gc_state_s*)*, i8* (i8*, %struct.gc_state_s*)** %reloc_struct_ptr135, align 8, !tbaa !238
  %425 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %426 = bitcast i8* %425 to %struct.gx_device_pdf_s*
  %DSCEncodingToUnicode = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %426, i32 0, i32 114
  %data136 = getelementptr inbounds %struct.gs_param_int_array_s, %struct.gs_param_int_array_s* %DSCEncodingToUnicode, i32 0, i32 0
  %427 = load i32*, i32** %data136, align 8, !tbaa !228
  %428 = bitcast i32* %427 to i8*
  %429 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %call137 = call i8* %424(i8* %428, %struct.gc_state_s* %429) #7
  %430 = bitcast i8* %call137 to i32*
  %431 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %432 = bitcast i8* %431 to %struct.gx_device_pdf_s*
  %DSCEncodingToUnicode138 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %432, i32 0, i32 114
  %data139 = getelementptr inbounds %struct.gs_param_int_array_s, %struct.gs_param_int_array_s* %DSCEncodingToUnicode138, i32 0, i32 0
  store i32* %430, i32** %data139, align 8, !tbaa !228
  %433 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %434 = bitcast %struct.gc_state_s* %433 to %struct.gc_procs_common_s**
  %435 = load %struct.gc_procs_common_s*, %struct.gc_procs_common_s** %434, align 8, !tbaa !1
  %reloc_struct_ptr140 = getelementptr inbounds %struct.gc_procs_common_s, %struct.gc_procs_common_s* %435, i32 0, i32 0
  %436 = load i8* (i8*, %struct.gc_state_s*)*, i8* (i8*, %struct.gc_state_s*)** %reloc_struct_ptr140, align 8, !tbaa !238
  %437 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %438 = bitcast i8* %437 to %struct.gx_device_pdf_s*
  %Identity_ToUnicode_CMaps = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %438, i32 0, i32 167
  %arrayidx141 = getelementptr inbounds [2 x %struct.pdf_resource_s*], [2 x %struct.pdf_resource_s*]* %Identity_ToUnicode_CMaps, i32 0, i64 0
  %439 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %arrayidx141, align 8, !tbaa !1
  %440 = bitcast %struct.pdf_resource_s* %439 to i8*
  %441 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %call142 = call i8* %436(i8* %440, %struct.gc_state_s* %441) #7
  %442 = bitcast i8* %call142 to %struct.pdf_resource_s*
  %443 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %444 = bitcast i8* %443 to %struct.gx_device_pdf_s*
  %Identity_ToUnicode_CMaps143 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %444, i32 0, i32 167
  %arrayidx144 = getelementptr inbounds [2 x %struct.pdf_resource_s*], [2 x %struct.pdf_resource_s*]* %Identity_ToUnicode_CMaps143, i32 0, i64 0
  store %struct.pdf_resource_s* %442, %struct.pdf_resource_s** %arrayidx144, align 8, !tbaa !1
  %445 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %446 = bitcast %struct.gc_state_s* %445 to %struct.gc_procs_common_s**
  %447 = load %struct.gc_procs_common_s*, %struct.gc_procs_common_s** %446, align 8, !tbaa !1
  %reloc_struct_ptr145 = getelementptr inbounds %struct.gc_procs_common_s, %struct.gc_procs_common_s* %447, i32 0, i32 0
  %448 = load i8* (i8*, %struct.gc_state_s*)*, i8* (i8*, %struct.gc_state_s*)** %reloc_struct_ptr145, align 8, !tbaa !238
  %449 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %450 = bitcast i8* %449 to %struct.gx_device_pdf_s*
  %Identity_ToUnicode_CMaps146 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %450, i32 0, i32 167
  %arrayidx147 = getelementptr inbounds [2 x %struct.pdf_resource_s*], [2 x %struct.pdf_resource_s*]* %Identity_ToUnicode_CMaps146, i32 0, i64 1
  %451 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %arrayidx147, align 8, !tbaa !1
  %452 = bitcast %struct.pdf_resource_s* %451 to i8*
  %453 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %call148 = call i8* %448(i8* %452, %struct.gc_state_s* %453) #7
  %454 = bitcast i8* %call148 to %struct.pdf_resource_s*
  %455 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %456 = bitcast i8* %455 to %struct.gx_device_pdf_s*
  %Identity_ToUnicode_CMaps149 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %456, i32 0, i32 167
  %arrayidx150 = getelementptr inbounds [2 x %struct.pdf_resource_s*], [2 x %struct.pdf_resource_s*]* %Identity_ToUnicode_CMaps149, i32 0, i64 1
  store %struct.pdf_resource_s* %454, %struct.pdf_resource_s** %arrayidx150, align 8, !tbaa !1
  %457 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %458 = bitcast %struct.gc_state_s* %457 to %struct.gc_procs_common_s**
  %459 = load %struct.gc_procs_common_s*, %struct.gc_procs_common_s** %458, align 8, !tbaa !1
  %reloc_struct_ptr151 = getelementptr inbounds %struct.gc_procs_common_s, %struct.gc_procs_common_s* %459, i32 0, i32 0
  %460 = load i8* (i8*, %struct.gc_state_s*)*, i8* (i8*, %struct.gc_state_s*)** %reloc_struct_ptr151, align 8, !tbaa !238
  %461 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %462 = bitcast i8* %461 to %struct.gx_device_pdf_s*
  %ResourceUsage = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %462, i32 0, i32 252
  %463 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %ResourceUsage, align 8, !tbaa !173
  %464 = bitcast %struct.linearisation_record_s* %463 to i8*
  %465 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %call152 = call i8* %460(i8* %464, %struct.gc_state_s* %465) #7
  %466 = bitcast i8* %call152 to %struct.linearisation_record_s*
  %467 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %468 = bitcast i8* %467 to %struct.gx_device_pdf_s*
  %ResourceUsage153 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %468, i32 0, i32 252
  store %struct.linearisation_record_s* %466, %struct.linearisation_record_s** %ResourceUsage153, align 8, !tbaa !173
  %469 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %470 = bitcast %struct.gc_state_s* %469 to %struct.gc_procs_common_s**
  %471 = load %struct.gc_procs_common_s*, %struct.gc_procs_common_s** %470, align 8, !tbaa !1
  %reloc_struct_ptr154 = getelementptr inbounds %struct.gc_procs_common_s, %struct.gc_procs_common_s* %471, i32 0, i32 0
  %472 = load i8* (i8*, %struct.gc_state_s*)*, i8* (i8*, %struct.gc_state_s*)** %reloc_struct_ptr154, align 8, !tbaa !238
  %473 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %474 = bitcast i8* %473 to %struct.gx_device_pdf_s*
  %vgstack = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %474, i32 0, i32 192
  %475 = load %struct.pdf_viewer_state_s*, %struct.pdf_viewer_state_s** %vgstack, align 8, !tbaa !65
  %476 = bitcast %struct.pdf_viewer_state_s* %475 to i8*
  %477 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %call155 = call i8* %472(i8* %476, %struct.gc_state_s* %477) #7
  %478 = bitcast i8* %call155 to %struct.pdf_viewer_state_s*
  %479 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %480 = bitcast i8* %479 to %struct.gx_device_pdf_s*
  %vgstack156 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %480, i32 0, i32 192
  store %struct.pdf_viewer_state_s* %478, %struct.pdf_viewer_state_s** %vgstack156, align 8, !tbaa !65
  %481 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %482 = bitcast %struct.gc_state_s* %481 to %struct.gc_procs_common_s**
  %483 = load %struct.gc_procs_common_s*, %struct.gc_procs_common_s** %482, align 8, !tbaa !1
  %reloc_struct_ptr157 = getelementptr inbounds %struct.gc_procs_common_s, %struct.gc_procs_common_s* %483, i32 0, i32 0
  %484 = load i8* (i8*, %struct.gc_state_s*)*, i8* (i8*, %struct.gc_state_s*)** %reloc_struct_ptr157, align 8, !tbaa !238
  %485 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %486 = bitcast i8* %485 to %struct.gx_device_pdf_s*
  %outline_levels = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %486, i32 0, i32 171
  %487 = load %struct.pdf_outline_level_s*, %struct.pdf_outline_level_s** %outline_levels, align 8, !tbaa !79
  %488 = bitcast %struct.pdf_outline_level_s* %487 to i8*
  %489 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %call158 = call i8* %484(i8* %488, %struct.gc_state_s* %489) #7
  %490 = bitcast i8* %call158 to %struct.pdf_outline_level_s*
  %491 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %492 = bitcast i8* %491 to %struct.gx_device_pdf_s*
  %outline_levels159 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %492, i32 0, i32 171
  store %struct.pdf_outline_level_s* %490, %struct.pdf_outline_level_s** %outline_levels159, align 8, !tbaa !79
  %493 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %494 = bitcast %struct.gc_state_s* %493 to %struct.gc_procs_common_s**
  %495 = load %struct.gc_procs_common_s*, %struct.gc_procs_common_s** %494, align 8, !tbaa !1
  %reloc_struct_ptr160 = getelementptr inbounds %struct.gc_procs_common_s, %struct.gc_procs_common_s* %495, i32 0, i32 0
  %496 = load i8* (i8*, %struct.gc_state_s*)*, i8* (i8*, %struct.gc_state_s*)** %reloc_struct_ptr160, align 8, !tbaa !238
  %497 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %498 = bitcast i8* %497 to %struct.gx_device_pdf_s*
  %EmbeddedFiles = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %498, i32 0, i32 178
  %499 = load %struct.cos_dict_s*, %struct.cos_dict_s** %EmbeddedFiles, align 8, !tbaa !92
  %500 = bitcast %struct.cos_dict_s* %499 to i8*
  %501 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %call161 = call i8* %496(i8* %500, %struct.gc_state_s* %501) #7
  %502 = bitcast i8* %call161 to %struct.cos_dict_s*
  %503 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %504 = bitcast i8* %503 to %struct.gx_device_pdf_s*
  %EmbeddedFiles162 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %504, i32 0, i32 178
  store %struct.cos_dict_s* %502, %struct.cos_dict_s** %EmbeddedFiles162, align 8, !tbaa !92
  %505 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %506 = bitcast %struct.gc_state_s* %505 to %struct.gc_procs_common_s**
  %507 = load %struct.gc_procs_common_s*, %struct.gc_procs_common_s** %506, align 8, !tbaa !1
  %reloc_param_string = getelementptr inbounds %struct.gc_procs_common_s, %struct.gc_procs_common_s* %507, i32 0, i32 3
  %508 = load void (%struct.gs_param_string_s*, %struct.gc_state_s*)*, void (%struct.gs_param_string_s*, %struct.gc_state_s*)** %reloc_param_string, align 8, !tbaa !240
  %509 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %510 = bitcast i8* %509 to %struct.gx_device_pdf_s*
  %OwnerPassword = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %510, i32 0, i32 115
  %511 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  call void %508(%struct.gs_param_string_s* %OwnerPassword, %struct.gc_state_s* %511) #7
  %512 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %513 = bitcast %struct.gc_state_s* %512 to %struct.gc_procs_common_s**
  %514 = load %struct.gc_procs_common_s*, %struct.gc_procs_common_s** %513, align 8, !tbaa !1
  %reloc_param_string163 = getelementptr inbounds %struct.gc_procs_common_s, %struct.gc_procs_common_s* %514, i32 0, i32 3
  %515 = load void (%struct.gs_param_string_s*, %struct.gc_state_s*)*, void (%struct.gs_param_string_s*, %struct.gc_state_s*)** %reloc_param_string163, align 8, !tbaa !240
  %516 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %517 = bitcast i8* %516 to %struct.gx_device_pdf_s*
  %UserPassword = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %517, i32 0, i32 116
  %518 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  call void %515(%struct.gs_param_string_s* %UserPassword, %struct.gc_state_s* %518) #7
  %519 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %520 = bitcast %struct.gc_state_s* %519 to %struct.gc_procs_common_s**
  %521 = load %struct.gc_procs_common_s*, %struct.gc_procs_common_s** %520, align 8, !tbaa !1
  %reloc_param_string164 = getelementptr inbounds %struct.gc_procs_common_s, %struct.gc_procs_common_s* %521, i32 0, i32 3
  %522 = load void (%struct.gs_param_string_s*, %struct.gc_state_s*)*, void (%struct.gs_param_string_s*, %struct.gc_state_s*)** %reloc_param_string164, align 8, !tbaa !240
  %523 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %524 = bitcast i8* %523 to %struct.gx_device_pdf_s*
  %NoEncrypt = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %524, i32 0, i32 120
  %525 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  call void %522(%struct.gs_param_string_s* %NoEncrypt, %struct.gc_state_s* %525) #7
  %526 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %527 = bitcast %struct.gc_state_s* %526 to %struct.gc_procs_common_s**
  %528 = load %struct.gc_procs_common_s*, %struct.gc_procs_common_s** %527, align 8, !tbaa !1
  %reloc_param_string165 = getelementptr inbounds %struct.gc_procs_common_s, %struct.gc_procs_common_s* %528, i32 0, i32 3
  %529 = load void (%struct.gs_param_string_s*, %struct.gc_state_s*)*, void (%struct.gs_param_string_s*, %struct.gc_state_s*)** %reloc_param_string165, align 8, !tbaa !240
  %530 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %531 = bitcast i8* %530 to %struct.gx_device_pdf_s*
  %DocumentUUID = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %531, i32 0, i32 96
  %532 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  call void %529(%struct.gs_param_string_s* %DocumentUUID, %struct.gc_state_s* %532) #7
  %533 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %534 = bitcast %struct.gc_state_s* %533 to %struct.gc_procs_common_s**
  %535 = load %struct.gc_procs_common_s*, %struct.gc_procs_common_s** %534, align 8, !tbaa !1
  %reloc_param_string166 = getelementptr inbounds %struct.gc_procs_common_s, %struct.gc_procs_common_s* %535, i32 0, i32 3
  %536 = load void (%struct.gs_param_string_s*, %struct.gc_state_s*)*, void (%struct.gs_param_string_s*, %struct.gc_state_s*)** %reloc_param_string166, align 8, !tbaa !240
  %537 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %538 = bitcast i8* %537 to %struct.gx_device_pdf_s*
  %InstanceUUID = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %538, i32 0, i32 97
  %539 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  call void %536(%struct.gs_param_string_s* %InstanceUUID, %struct.gc_state_s* %539) #7
  %540 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %541 = bitcast %struct.gc_state_s* %540 to %struct.gc_procs_common_s**
  %542 = load %struct.gc_procs_common_s*, %struct.gc_procs_common_s** %541, align 8, !tbaa !1
  %reloc_const_string = getelementptr inbounds %struct.gc_procs_common_s, %struct.gc_procs_common_s* %542, i32 0, i32 2
  %543 = load void (%struct.gs_const_string_s*, %struct.gc_state_s*)*, void (%struct.gs_const_string_s*, %struct.gc_state_s*)** %reloc_const_string, align 8, !tbaa !241
  %544 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %545 = bitcast i8* %544 to %struct.gx_device_pdf_s*
  %objname = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %545, i32 0, i32 227
  %546 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  call void %543(%struct.gs_const_string_s* %objname, %struct.gc_state_s* %546) #7
  %547 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %547) #2
  %548 = bitcast i32* %j to i8*
  call void @llvm.lifetime.start(i64 4, i8* %548) #2
  store i32 0, i32* %i, align 4, !tbaa !54
  br label %for.cond

for.cond:                                         ; preds = %for.inc.181, %entry
  %549 = load i32, i32* %i, align 4, !tbaa !54
  %cmp = icmp slt i32 %549, 15
  br i1 %cmp, label %for.body, label %for.end.183

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !tbaa !54
  br label %for.cond.167

for.cond.167:                                     ; preds = %for.inc, %for.body
  %550 = load i32, i32* %j, align 4, !tbaa !54
  %cmp168 = icmp slt i32 %550, 16
  br i1 %cmp168, label %for.body.169, label %for.end

for.body.169:                                     ; preds = %for.cond.167
  %551 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %552 = bitcast %struct.gc_state_s* %551 to %struct.gc_procs_common_s**
  %553 = load %struct.gc_procs_common_s*, %struct.gc_procs_common_s** %552, align 8, !tbaa !1
  %reloc_struct_ptr170 = getelementptr inbounds %struct.gc_procs_common_s, %struct.gc_procs_common_s* %553, i32 0, i32 0
  %554 = load i8* (i8*, %struct.gc_state_s*)*, i8* (i8*, %struct.gc_state_s*)** %reloc_struct_ptr170, align 8, !tbaa !238
  %555 = load i32, i32* %j, align 4, !tbaa !54
  %idxprom = sext i32 %555 to i64
  %556 = load i32, i32* %i, align 4, !tbaa !54
  %idxprom171 = sext i32 %556 to i64
  %557 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %558 = bitcast i8* %557 to %struct.gx_device_pdf_s*
  %resources = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %558, i32 0, i32 165
  %arrayidx172 = getelementptr inbounds [15 x %struct.pdf_resource_list_s], [15 x %struct.pdf_resource_list_s]* %resources, i32 0, i64 %idxprom171
  %chains = getelementptr inbounds %struct.pdf_resource_list_s, %struct.pdf_resource_list_s* %arrayidx172, i32 0, i32 0
  %arrayidx173 = getelementptr inbounds [16 x %struct.pdf_resource_s*], [16 x %struct.pdf_resource_s*]* %chains, i32 0, i64 %idxprom
  %559 = load %struct.pdf_resource_s*, %struct.pdf_resource_s** %arrayidx173, align 8, !tbaa !1
  %560 = bitcast %struct.pdf_resource_s* %559 to i8*
  %561 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %call174 = call i8* %554(i8* %560, %struct.gc_state_s* %561) #7
  %562 = bitcast i8* %call174 to %struct.pdf_resource_s*
  %563 = load i32, i32* %j, align 4, !tbaa !54
  %idxprom175 = sext i32 %563 to i64
  %564 = load i32, i32* %i, align 4, !tbaa !54
  %idxprom176 = sext i32 %564 to i64
  %565 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %566 = bitcast i8* %565 to %struct.gx_device_pdf_s*
  %resources177 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %566, i32 0, i32 165
  %arrayidx178 = getelementptr inbounds [15 x %struct.pdf_resource_list_s], [15 x %struct.pdf_resource_list_s]* %resources177, i32 0, i64 %idxprom176
  %chains179 = getelementptr inbounds %struct.pdf_resource_list_s, %struct.pdf_resource_list_s* %arrayidx178, i32 0, i32 0
  %arrayidx180 = getelementptr inbounds [16 x %struct.pdf_resource_s*], [16 x %struct.pdf_resource_s*]* %chains179, i32 0, i64 %idxprom175
  store %struct.pdf_resource_s* %562, %struct.pdf_resource_s** %arrayidx180, align 8, !tbaa !1
  br label %for.inc

for.inc:                                          ; preds = %for.body.169
  %567 = load i32, i32* %j, align 4, !tbaa !54
  %inc = add nsw i32 %567, 1
  store i32 %inc, i32* %j, align 4, !tbaa !54
  br label %for.cond.167

for.end:                                          ; preds = %for.cond.167
  br label %for.inc.181

for.inc.181:                                      ; preds = %for.end
  %568 = load i32, i32* %i, align 4, !tbaa !54
  %inc182 = add nsw i32 %568, 1
  store i32 %inc182, i32* %i, align 4, !tbaa !54
  br label %for.cond

for.end.183:                                      ; preds = %for.cond
  %569 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %outline_levels184 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %569, i32 0, i32 171
  %570 = load %struct.pdf_outline_level_s*, %struct.pdf_outline_level_s** %outline_levels184, align 8, !tbaa !79
  %tobool = icmp ne %struct.pdf_outline_level_s* %570, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %for.end.183
  store i32 0, i32* %i, align 4, !tbaa !54
  br label %for.cond.185

for.cond.185:                                     ; preds = %for.inc.209, %if.then
  %571 = load i32, i32* %i, align 4, !tbaa !54
  %572 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev, align 8, !tbaa !1
  %outline_depth = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %572, i32 0, i32 172
  %573 = load i32, i32* %outline_depth, align 4, !tbaa !87
  %cmp186 = icmp sle i32 %571, %573
  br i1 %cmp186, label %for.body.187, label %for.end.211

for.body.187:                                     ; preds = %for.cond.185
  %574 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %575 = bitcast %struct.gc_state_s* %574 to %struct.gc_procs_common_s**
  %576 = load %struct.gc_procs_common_s*, %struct.gc_procs_common_s** %575, align 8, !tbaa !1
  %reloc_struct_ptr188 = getelementptr inbounds %struct.gc_procs_common_s, %struct.gc_procs_common_s* %576, i32 0, i32 0
  %577 = load i8* (i8*, %struct.gc_state_s*)*, i8* (i8*, %struct.gc_state_s*)** %reloc_struct_ptr188, align 8, !tbaa !238
  %578 = load i32, i32* %i, align 4, !tbaa !54
  %idxprom189 = sext i32 %578 to i64
  %579 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %580 = bitcast i8* %579 to %struct.gx_device_pdf_s*
  %outline_levels190 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %580, i32 0, i32 171
  %581 = load %struct.pdf_outline_level_s*, %struct.pdf_outline_level_s** %outline_levels190, align 8, !tbaa !79
  %arrayidx191 = getelementptr inbounds %struct.pdf_outline_level_s, %struct.pdf_outline_level_s* %581, i64 %idxprom189
  %first = getelementptr inbounds %struct.pdf_outline_level_s, %struct.pdf_outline_level_s* %arrayidx191, i32 0, i32 0
  %action = getelementptr inbounds %struct.pdf_outline_node_s, %struct.pdf_outline_node_s* %first, i32 0, i32 6
  %582 = load %struct.cos_dict_s*, %struct.cos_dict_s** %action, align 8, !tbaa !85
  %583 = bitcast %struct.cos_dict_s* %582 to i8*
  %584 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %call192 = call i8* %577(i8* %583, %struct.gc_state_s* %584) #7
  %585 = bitcast i8* %call192 to %struct.cos_dict_s*
  %586 = load i32, i32* %i, align 4, !tbaa !54
  %idxprom193 = sext i32 %586 to i64
  %587 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %588 = bitcast i8* %587 to %struct.gx_device_pdf_s*
  %outline_levels194 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %588, i32 0, i32 171
  %589 = load %struct.pdf_outline_level_s*, %struct.pdf_outline_level_s** %outline_levels194, align 8, !tbaa !79
  %arrayidx195 = getelementptr inbounds %struct.pdf_outline_level_s, %struct.pdf_outline_level_s* %589, i64 %idxprom193
  %first196 = getelementptr inbounds %struct.pdf_outline_level_s, %struct.pdf_outline_level_s* %arrayidx195, i32 0, i32 0
  %action197 = getelementptr inbounds %struct.pdf_outline_node_s, %struct.pdf_outline_node_s* %first196, i32 0, i32 6
  store %struct.cos_dict_s* %585, %struct.cos_dict_s** %action197, align 8, !tbaa !85
  %590 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %591 = bitcast %struct.gc_state_s* %590 to %struct.gc_procs_common_s**
  %592 = load %struct.gc_procs_common_s*, %struct.gc_procs_common_s** %591, align 8, !tbaa !1
  %reloc_struct_ptr198 = getelementptr inbounds %struct.gc_procs_common_s, %struct.gc_procs_common_s* %592, i32 0, i32 0
  %593 = load i8* (i8*, %struct.gc_state_s*)*, i8* (i8*, %struct.gc_state_s*)** %reloc_struct_ptr198, align 8, !tbaa !238
  %594 = load i32, i32* %i, align 4, !tbaa !54
  %idxprom199 = sext i32 %594 to i64
  %595 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %596 = bitcast i8* %595 to %struct.gx_device_pdf_s*
  %outline_levels200 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %596, i32 0, i32 171
  %597 = load %struct.pdf_outline_level_s*, %struct.pdf_outline_level_s** %outline_levels200, align 8, !tbaa !79
  %arrayidx201 = getelementptr inbounds %struct.pdf_outline_level_s, %struct.pdf_outline_level_s* %597, i64 %idxprom199
  %last = getelementptr inbounds %struct.pdf_outline_level_s, %struct.pdf_outline_level_s* %arrayidx201, i32 0, i32 1
  %action202 = getelementptr inbounds %struct.pdf_outline_node_s, %struct.pdf_outline_node_s* %last, i32 0, i32 6
  %598 = load %struct.cos_dict_s*, %struct.cos_dict_s** %action202, align 8, !tbaa !86
  %599 = bitcast %struct.cos_dict_s* %598 to i8*
  %600 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %call203 = call i8* %593(i8* %599, %struct.gc_state_s* %600) #7
  %601 = bitcast i8* %call203 to %struct.cos_dict_s*
  %602 = load i32, i32* %i, align 4, !tbaa !54
  %idxprom204 = sext i32 %602 to i64
  %603 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %604 = bitcast i8* %603 to %struct.gx_device_pdf_s*
  %outline_levels205 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %604, i32 0, i32 171
  %605 = load %struct.pdf_outline_level_s*, %struct.pdf_outline_level_s** %outline_levels205, align 8, !tbaa !79
  %arrayidx206 = getelementptr inbounds %struct.pdf_outline_level_s, %struct.pdf_outline_level_s* %605, i64 %idxprom204
  %last207 = getelementptr inbounds %struct.pdf_outline_level_s, %struct.pdf_outline_level_s* %arrayidx206, i32 0, i32 1
  %action208 = getelementptr inbounds %struct.pdf_outline_node_s, %struct.pdf_outline_node_s* %last207, i32 0, i32 6
  store %struct.cos_dict_s* %601, %struct.cos_dict_s** %action208, align 8, !tbaa !86
  br label %for.inc.209

for.inc.209:                                      ; preds = %for.body.187
  %606 = load i32, i32* %i, align 4, !tbaa !54
  %inc210 = add nsw i32 %606, 1
  store i32 %inc210, i32* %i, align 4, !tbaa !54
  br label %for.cond.185

for.end.211:                                      ; preds = %for.cond.185
  br label %if.end

if.end:                                           ; preds = %for.end.211, %for.end.183
  %607 = bitcast i32* %j to i8*
  call void @llvm.lifetime.end(i64 4, i8* %607) #2
  %608 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %608) #2
  %609 = bitcast %struct.gx_device_pdf_s** %pdev to i8*
  call void @llvm.lifetime.end(i64 8, i8* %609) #2
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @device_pdfwrite_finalize(%struct.gs_memory_s* %cmem, i8* %vpdev) #1 {
entry:
  %cmem.addr = alloca %struct.gs_memory_s*, align 8
  %vpdev.addr = alloca i8*, align 8
  store %struct.gs_memory_s* %cmem, %struct.gs_memory_s** %cmem.addr, align 8, !tbaa !1
  store i8* %vpdev, i8** %vpdev.addr, align 8, !tbaa !1
  %0 = load %struct.gs_memory_s*, %struct.gs_memory_s** %cmem.addr, align 8, !tbaa !1
  %1 = load i8*, i8** %vpdev.addr, align 8, !tbaa !1
  call void @gx_device_finalize(%struct.gs_memory_s* %0, i8* %1) #7
  ret void
}

declare void @gx_device_finalize(%struct.gs_memory_s*, i8*) #0

; Function Attrs: nounwind uwtable
define internal i32 @pdf_open_temp_file(%struct.gx_device_pdf_s* %pdev, %struct.pdf_temp_file_s* %ptf) #1 {
entry:
  %retval = alloca i32, align 4
  %pdev.addr = alloca %struct.gx_device_pdf_s*, align 8
  %ptf.addr = alloca %struct.pdf_temp_file_s*, align 8
  %fmode = alloca [4 x i8], align 1
  %cleanup.dest.slot = alloca i32
  store %struct.gx_device_pdf_s* %pdev, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  store %struct.pdf_temp_file_s* %ptf, %struct.pdf_temp_file_s** %ptf.addr, align 8, !tbaa !1
  %0 = bitcast [4 x i8]* %fmode to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %call = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @gp_fmode_binary_suffix, i32 0, i32 0)) #9
  %cmp = icmp ugt i64 %call, 2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -9, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %fmode, i32 0, i32 0
  %call1 = call i8* @strcpy(i8* %arraydecay, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.31, i32 0, i32 0)) #8
  %arraydecay2 = getelementptr inbounds [4 x i8], [4 x i8]* %fmode, i32 0, i32 0
  %call3 = call i8* @strcat(i8* %arraydecay2, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @gp_fmode_binary_suffix, i32 0, i32 0)) #8
  %1 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %1, i32 0, i32 3
  %2 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory, align 8, !tbaa !5
  %3 = load %struct.pdf_temp_file_s*, %struct.pdf_temp_file_s** %ptf.addr, align 8, !tbaa !1
  %file_name = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %3, i32 0, i32 0
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %file_name, i32 0, i32 0
  %arraydecay5 = getelementptr inbounds [4 x i8], [4 x i8]* %fmode, i32 0, i32 0
  %call6 = call %struct._IO_FILE* @gp_open_scratch_file_64(%struct.gs_memory_s* %2, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @gp_scratch_file_name_prefix, i32 0, i32 0), i8* %arraydecay4, i8* %arraydecay5) #7
  %4 = load %struct.pdf_temp_file_s*, %struct.pdf_temp_file_s** %ptf.addr, align 8, !tbaa !1
  %file = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %4, i32 0, i32 1
  store %struct._IO_FILE* %call6, %struct._IO_FILE** %file, align 8, !tbaa !242
  %5 = load %struct.pdf_temp_file_s*, %struct.pdf_temp_file_s** %ptf.addr, align 8, !tbaa !1
  %file7 = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %5, i32 0, i32 1
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %file7, align 8, !tbaa !242
  %cmp8 = icmp eq %struct._IO_FILE* %6, null
  br i1 %cmp8, label %if.then.9, label %if.end.10

if.then.9:                                        ; preds = %if.end
  store i32 -9, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.10:                                        ; preds = %if.end
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.10, %if.then.9, %if.then
  %7 = bitcast [4 x i8]* %fmode to i8*
  call void @llvm.lifetime.end(i64 4, i8* %7) #2
  %8 = load i32, i32* %retval
  ret i32 %8
}

; Function Attrs: nounwind uwtable
define internal i32 @pdf_open_temp_stream(%struct.gx_device_pdf_s* %pdev, %struct.pdf_temp_file_s* %ptf) #1 {
entry:
  %retval = alloca i32, align 4
  %pdev.addr = alloca %struct.gx_device_pdf_s*, align 8
  %ptf.addr = alloca %struct.pdf_temp_file_s*, align 8
  %code = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.gx_device_pdf_s* %pdev, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  store %struct.pdf_temp_file_s* %ptf, %struct.pdf_temp_file_s** %ptf.addr, align 8, !tbaa !1
  %0 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %2 = load %struct.pdf_temp_file_s*, %struct.pdf_temp_file_s** %ptf.addr, align 8, !tbaa !1
  %call = call i32 @pdf_open_temp_file(%struct.gx_device_pdf_s* %1, %struct.pdf_temp_file_s* %2) #7
  store i32 %call, i32* %code, align 4, !tbaa !54
  %3 = load i32, i32* %code, align 4, !tbaa !54
  %cmp = icmp slt i32 %3, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %code, align 4, !tbaa !54
  store i32 %4, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %5 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %v_memory = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %5, i32 0, i32 43
  %6 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory, align 8, !tbaa !52
  %call1 = call %struct.stream_s* @s_alloc(%struct.gs_memory_s* %6, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.32, i32 0, i32 0)) #7
  %7 = load %struct.pdf_temp_file_s*, %struct.pdf_temp_file_s** %ptf.addr, align 8, !tbaa !1
  %strm = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %7, i32 0, i32 2
  store %struct.stream_s* %call1, %struct.stream_s** %strm, align 8, !tbaa !243
  %8 = load %struct.pdf_temp_file_s*, %struct.pdf_temp_file_s** %ptf.addr, align 8, !tbaa !1
  %strm2 = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %8, i32 0, i32 2
  %9 = load %struct.stream_s*, %struct.stream_s** %strm2, align 8, !tbaa !243
  %cmp3 = icmp eq %struct.stream_s* %9, null
  br i1 %cmp3, label %if.then.4, label %if.end.5

if.then.4:                                        ; preds = %if.end
  store i32 -25, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.5:                                         ; preds = %if.end
  %10 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %v_memory6 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %10, i32 0, i32 43
  %11 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory6, align 8, !tbaa !52
  %procs = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %11, i32 0, i32 1
  %alloc_bytes = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs, i32 0, i32 7
  %12 = load i8* (%struct.gs_memory_s*, i32, i8*)*, i8* (%struct.gs_memory_s*, i32, i8*)** %alloc_bytes, align 8, !tbaa !64
  %13 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %v_memory7 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %13, i32 0, i32 43
  %14 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory7, align 8, !tbaa !52
  %call8 = call i8* %12(%struct.gs_memory_s* %14, i32 512, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.33, i32 0, i32 0)) #7
  %15 = load %struct.pdf_temp_file_s*, %struct.pdf_temp_file_s** %ptf.addr, align 8, !tbaa !1
  %strm_buf = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %15, i32 0, i32 3
  store i8* %call8, i8** %strm_buf, align 8, !tbaa !244
  %16 = load %struct.pdf_temp_file_s*, %struct.pdf_temp_file_s** %ptf.addr, align 8, !tbaa !1
  %strm_buf9 = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %16, i32 0, i32 3
  %17 = load i8*, i8** %strm_buf9, align 8, !tbaa !244
  %cmp10 = icmp eq i8* %17, null
  br i1 %cmp10, label %if.then.11, label %if.end.17

if.then.11:                                       ; preds = %if.end.5
  %18 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %v_memory12 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %18, i32 0, i32 43
  %19 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory12, align 8, !tbaa !52
  %procs13 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %19, i32 0, i32 1
  %free_object = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs13, i32 0, i32 2
  %20 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %free_object, align 8, !tbaa !138
  %21 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %v_memory14 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %21, i32 0, i32 43
  %22 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory14, align 8, !tbaa !52
  %23 = load %struct.pdf_temp_file_s*, %struct.pdf_temp_file_s** %ptf.addr, align 8, !tbaa !1
  %strm15 = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %23, i32 0, i32 2
  %24 = load %struct.stream_s*, %struct.stream_s** %strm15, align 8, !tbaa !243
  %25 = bitcast %struct.stream_s* %24 to i8*
  call void %20(%struct.gs_memory_s* %22, i8* %25, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.32, i32 0, i32 0)) #7
  %26 = load %struct.pdf_temp_file_s*, %struct.pdf_temp_file_s** %ptf.addr, align 8, !tbaa !1
  %strm16 = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %26, i32 0, i32 2
  store %struct.stream_s* null, %struct.stream_s** %strm16, align 8, !tbaa !243
  store i32 -25, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.17:                                        ; preds = %if.end.5
  %27 = load %struct.pdf_temp_file_s*, %struct.pdf_temp_file_s** %ptf.addr, align 8, !tbaa !1
  %strm18 = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %27, i32 0, i32 2
  %28 = load %struct.stream_s*, %struct.stream_s** %strm18, align 8, !tbaa !243
  %29 = load %struct.pdf_temp_file_s*, %struct.pdf_temp_file_s** %ptf.addr, align 8, !tbaa !1
  %file = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %29, i32 0, i32 1
  %30 = load %struct._IO_FILE*, %struct._IO_FILE** %file, align 8, !tbaa !242
  %31 = load %struct.pdf_temp_file_s*, %struct.pdf_temp_file_s** %ptf.addr, align 8, !tbaa !1
  %strm_buf19 = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %31, i32 0, i32 3
  %32 = load i8*, i8** %strm_buf19, align 8, !tbaa !244
  call void @swrite_file(%struct.stream_s* %28, %struct._IO_FILE* %30, i8* %32, i32 512) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.17, %if.then.11, %if.then.4, %if.then
  %33 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %33) #2
  %34 = load i32, i32* %retval
  ret i32 %34
}

declare i32 @gdev_vector_open_file_options(%struct.gx_device_vector_s*, i32, i32) #0

declare %struct.stream_s* @s_MD5C_make_stream(%struct.gs_memory_s*, %struct.stream_s*) #0

declare void @gdev_vector_init(%struct.gx_device_vector_s*) #0

declare void @gp_get_realtime(i64*) #0

declare %struct.cos_dict_s* @cos_dict_alloc(%struct.gx_device_pdf_s*, i8*) #0

declare %struct.cos_array_s* @cos_array_alloc(%struct.gx_device_pdf_s*, i8*) #0

; Function Attrs: nounwind uwtable
define internal i32 @pdf_compute_fileID(%struct.gx_device_pdf_s* %pdev) #1 {
entry:
  %retval = alloca i32, align 4
  %pdev.addr = alloca %struct.gx_device_pdf_s*, align 8
  %mem = alloca %struct.gs_memory_s*, align 8
  %strm = alloca %struct.stream_s*, align 8
  %ignore = alloca i32, align 4
  %code = alloca i32, align 4
  %s = alloca %struct.stream_s*, align 8
  %secs_ns = alloca [2 x i64], align 16
  %KeyLength = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.gx_device_pdf_s* %pdev, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %0 = bitcast %struct.gs_memory_s** %mem to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %v_memory = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %1, i32 0, i32 43
  %2 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory, align 8, !tbaa !52
  store %struct.gs_memory_s* %2, %struct.gs_memory_s** %mem, align 8, !tbaa !1
  %3 = bitcast %struct.stream_s** %strm to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #2
  %4 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %strm1 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %4, i32 0, i32 47
  %5 = load %struct.stream_s*, %struct.stream_s** %strm1, align 8, !tbaa !56
  store %struct.stream_s* %5, %struct.stream_s** %strm, align 8, !tbaa !1
  %6 = bitcast i32* %ignore to i8*
  call void @llvm.lifetime.start(i64 4, i8* %6) #2
  %7 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %7) #2
  %8 = bitcast %struct.stream_s** %s to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8) #2
  %9 = load %struct.gs_memory_s*, %struct.gs_memory_s** %mem, align 8, !tbaa !1
  %10 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %fileID = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %10, i32 0, i32 179
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %fileID, i32 0, i32 0
  %call = call %struct.stream_s* @s_MD5E_make_stream(%struct.gs_memory_s* %9, i8* %arraydecay, i32 16) #7
  store %struct.stream_s* %call, %struct.stream_s** %s, align 8, !tbaa !1
  %11 = bitcast [2 x i64]* %secs_ns to i8*
  call void @llvm.lifetime.start(i64 16, i8* %11) #2
  %12 = bitcast i32* %KeyLength to i8*
  call void @llvm.lifetime.start(i64 4, i8* %12) #2
  %13 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %KeyLength2 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %13, i32 0, i32 117
  %14 = load i32, i32* %KeyLength2, align 4, !tbaa !70
  store i32 %14, i32* %KeyLength, align 4, !tbaa !54
  %15 = load %struct.stream_s*, %struct.stream_s** %s, align 8, !tbaa !1
  %cmp = icmp eq %struct.stream_s* %15, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -25, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %16 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %KeyLength3 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %16, i32 0, i32 117
  store i32 0, i32* %KeyLength3, align 4, !tbaa !70
  %arraydecay4 = getelementptr inbounds [2 x i64], [2 x i64]* %secs_ns, i32 0, i32 0
  call void @gp_get_usertime(i64* %arraydecay4) #7
  %17 = load %struct.stream_s*, %struct.stream_s** %s, align 8, !tbaa !1
  %arraydecay5 = getelementptr inbounds [2 x i64], [2 x i64]* %secs_ns, i32 0, i32 0
  %18 = bitcast i64* %arraydecay5 to i8*
  %call6 = call i32 @sputs(%struct.stream_s* %17, i8* %18, i32 16, i32* %ignore) #7
  %19 = load %struct.stream_s*, %struct.stream_s** %s, align 8, !tbaa !1
  %20 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %fname = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %20, i32 0, i32 45
  %arraydecay7 = getelementptr inbounds [4096 x i8], [4096 x i8]* %fname, i32 0, i32 0
  %21 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %fname8 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %21, i32 0, i32 45
  %arraydecay9 = getelementptr inbounds [4096 x i8], [4096 x i8]* %fname8, i32 0, i32 0
  %call10 = call i64 @strlen(i8* %arraydecay9) #9
  %conv = trunc i64 %call10 to i32
  %call11 = call i32 @sputs(%struct.stream_s* %19, i8* %arraydecay7, i32 %conv, i32* %ignore) #7
  %22 = load %struct.stream_s*, %struct.stream_s** %s, align 8, !tbaa !1
  %23 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %strm12 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %23, i32 0, i32 47
  store %struct.stream_s* %22, %struct.stream_s** %strm12, align 8, !tbaa !56
  %24 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %Info = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %24, i32 0, i32 150
  %25 = load %struct.cos_dict_s*, %struct.cos_dict_s** %Info, align 8, !tbaa !112
  %26 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %call13 = call i32 @cos_dict_elements_write(%struct.cos_dict_s* %25, %struct.gx_device_pdf_s* %26) #7
  store i32 %call13, i32* %code, align 4, !tbaa !54
  %27 = load %struct.stream_s*, %struct.stream_s** %strm, align 8, !tbaa !1
  %28 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %strm14 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %28, i32 0, i32 47
  store %struct.stream_s* %27, %struct.stream_s** %strm14, align 8, !tbaa !56
  %29 = load i32, i32* %KeyLength, align 4, !tbaa !54
  %30 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %KeyLength15 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %30, i32 0, i32 117
  store i32 %29, i32* %KeyLength15, align 4, !tbaa !70
  %31 = load i32, i32* %code, align 4, !tbaa !54
  %cmp16 = icmp slt i32 %31, 0
  br i1 %cmp16, label %if.then.18, label %if.end.19

if.then.18:                                       ; preds = %if.end
  %32 = load i32, i32* %code, align 4, !tbaa !54
  store i32 %32, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.19:                                        ; preds = %if.end
  %33 = load %struct.stream_s*, %struct.stream_s** %s, align 8, !tbaa !1
  %call20 = call i32 @sclose(%struct.stream_s* %33) #7
  %34 = load %struct.gs_memory_s*, %struct.gs_memory_s** %mem, align 8, !tbaa !1
  %procs = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %34, i32 0, i32 1
  %free_object = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs, i32 0, i32 2
  %35 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %free_object, align 8, !tbaa !138
  %36 = load %struct.gs_memory_s*, %struct.gs_memory_s** %mem, align 8, !tbaa !1
  %37 = load %struct.stream_s*, %struct.stream_s** %s, align 8, !tbaa !1
  %38 = bitcast %struct.stream_s* %37 to i8*
  call void %35(%struct.gs_memory_s* %36, i8* %38, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.34, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.19, %if.then.18, %if.then
  %39 = bitcast i32* %KeyLength to i8*
  call void @llvm.lifetime.end(i64 4, i8* %39) #2
  %40 = bitcast [2 x i64]* %secs_ns to i8*
  call void @llvm.lifetime.end(i64 16, i8* %40) #2
  %41 = bitcast %struct.stream_s** %s to i8*
  call void @llvm.lifetime.end(i64 8, i8* %41) #2
  %42 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %42) #2
  %43 = bitcast i32* %ignore to i8*
  call void @llvm.lifetime.end(i64 4, i8* %43) #2
  %44 = bitcast %struct.stream_s** %strm to i8*
  call void @llvm.lifetime.end(i64 8, i8* %44) #2
  %45 = bitcast %struct.gs_memory_s** %mem to i8*
  call void @llvm.lifetime.end(i64 8, i8* %45) #2
  %46 = load i32, i32* %retval
  ret i32 %46
}

; Function Attrs: nounwind uwtable
define internal i32 @pdf_compute_encryption_data(%struct.gx_device_pdf_s* %pdev) #1 {
entry:
  %retval = alloca i32, align 4
  %pdev.addr = alloca %struct.gx_device_pdf_s*, align 8
  %md5 = alloca %struct.gs_md5_state_s, align 4
  %digest = alloca [16 x i8], align 16
  %buf = alloca [32 x i8], align 16
  %t = alloca i8, align 1
  %sarc4 = alloca %struct.stream_arcfour_state_s, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.gx_device_pdf_s* %pdev, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %0 = bitcast %struct.gs_md5_state_s* %md5 to i8*
  call void @llvm.lifetime.start(i64 88, i8* %0) #2
  %1 = bitcast [16 x i8]* %digest to i8*
  call void @llvm.lifetime.start(i64 16, i8* %1) #2
  %2 = bitcast [32 x i8]* %buf to i8*
  call void @llvm.lifetime.start(i64 32, i8* %2) #2
  call void @llvm.lifetime.start(i64 1, i8* %t) #2
  %3 = bitcast %struct.stream_arcfour_state_s* %sarc4 to i8*
  call void @llvm.lifetime.start(i64 376, i8* %3) #2
  %4 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %PDFX = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %4, i32 0, i32 108
  %5 = load i32, i32* %PDFX, align 4, !tbaa !245
  %tobool = icmp ne i32 %5, 0
  br i1 %tobool, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %6 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %KeyLength = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %6, i32 0, i32 117
  %7 = load i32, i32* %KeyLength, align 4, !tbaa !70
  %cmp = icmp ne i32 %7, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %8 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %8, i32 0, i32 3
  %9 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory, align 8, !tbaa !5
  %call = call i8* @gs_program_name() #7
  %call1 = call i64 @gs_revision_number() #7
  call void @emprintf_program_ident(%struct.gs_memory_s* %9, i8* %call, i64 %call1) #7
  %10 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %memory2 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %10, i32 0, i32 3
  %11 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory2, align 8, !tbaa !5
  %call3 = call i32 (%struct.gs_memory_s*, i8*, ...) @errprintf(%struct.gs_memory_s* %11, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.35, i32 0, i32 0)) #7
  store i32 -15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true, %entry
  %12 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %KeyLength4 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %12, i32 0, i32 117
  %13 = load i32, i32* %KeyLength4, align 4, !tbaa !70
  %cmp5 = icmp eq i32 %13, 0
  br i1 %cmp5, label %if.then.6, label %if.end.8

if.then.6:                                        ; preds = %if.end
  %14 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %KeyLength7 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %14, i32 0, i32 117
  store i32 40, i32* %KeyLength7, align 4, !tbaa !70
  br label %if.end.8

if.end.8:                                         ; preds = %if.then.6, %if.end
  %15 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %EncryptionV = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %15, i32 0, i32 126
  %16 = load i32, i32* %EncryptionV, align 4, !tbaa !166
  %cmp9 = icmp eq i32 %16, 0
  br i1 %cmp9, label %land.lhs.true.10, label %if.end.15

land.lhs.true.10:                                 ; preds = %if.end.8
  %17 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %KeyLength11 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %17, i32 0, i32 117
  %18 = load i32, i32* %KeyLength11, align 4, !tbaa !70
  %cmp12 = icmp eq i32 %18, 40
  br i1 %cmp12, label %if.then.13, label %if.end.15

if.then.13:                                       ; preds = %land.lhs.true.10
  %19 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %EncryptionV14 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %19, i32 0, i32 126
  store i32 1, i32* %EncryptionV14, align 4, !tbaa !166
  br label %if.end.15

if.end.15:                                        ; preds = %if.then.13, %land.lhs.true.10, %if.end.8
  %20 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %EncryptionV16 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %20, i32 0, i32 126
  %21 = load i32, i32* %EncryptionV16, align 4, !tbaa !166
  %cmp17 = icmp eq i32 %21, 0
  br i1 %cmp17, label %land.lhs.true.18, label %if.end.23

land.lhs.true.18:                                 ; preds = %if.end.15
  %22 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %KeyLength19 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %22, i32 0, i32 117
  %23 = load i32, i32* %KeyLength19, align 4, !tbaa !70
  %cmp20 = icmp ugt i32 %23, 40
  br i1 %cmp20, label %if.then.21, label %if.end.23

if.then.21:                                       ; preds = %land.lhs.true.18
  %24 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %EncryptionV22 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %24, i32 0, i32 126
  store i32 2, i32* %EncryptionV22, align 4, !tbaa !166
  br label %if.end.23

if.end.23:                                        ; preds = %if.then.21, %land.lhs.true.18, %if.end.15
  %25 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %EncryptionV24 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %25, i32 0, i32 126
  %26 = load i32, i32* %EncryptionV24, align 4, !tbaa !166
  %cmp25 = icmp ugt i32 %26, 1
  br i1 %cmp25, label %land.lhs.true.26, label %if.end.34

land.lhs.true.26:                                 ; preds = %if.end.23
  %27 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %CompatibilityLevel = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %27, i32 0, i32 75
  %28 = load double, double* %CompatibilityLevel, align 8, !tbaa !134
  %cmp27 = fcmp olt double %28, 1.400000e+00
  br i1 %cmp27, label %if.then.28, label %if.end.34

if.then.28:                                       ; preds = %land.lhs.true.26
  %29 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %memory29 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %29, i32 0, i32 3
  %30 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory29, align 8, !tbaa !5
  %call30 = call i8* @gs_program_name() #7
  %call31 = call i64 @gs_revision_number() #7
  call void @emprintf_program_ident(%struct.gs_memory_s* %30, i8* %call30, i64 %call31) #7
  %31 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %memory32 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %31, i32 0, i32 3
  %32 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory32, align 8, !tbaa !5
  %call33 = call i32 (%struct.gs_memory_s*, i8*, ...) @errprintf(%struct.gs_memory_s* %32, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.36, i32 0, i32 0)) #7
  store i32 -15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.34:                                        ; preds = %land.lhs.true.26, %if.end.23
  %33 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %EncryptionR = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %33, i32 0, i32 119
  %34 = load i32, i32* %EncryptionR, align 4, !tbaa !167
  %cmp35 = icmp eq i32 %34, 0
  br i1 %cmp35, label %if.then.36, label %if.end.38

if.then.36:                                       ; preds = %if.end.34
  %35 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %EncryptionR37 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %35, i32 0, i32 119
  store i32 2, i32* %EncryptionR37, align 4, !tbaa !167
  br label %if.end.38

if.end.38:                                        ; preds = %if.then.36, %if.end.34
  %36 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %EncryptionR39 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %36, i32 0, i32 119
  %37 = load i32, i32* %EncryptionR39, align 4, !tbaa !167
  %cmp40 = icmp ult i32 %37, 2
  br i1 %cmp40, label %if.then.43, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end.38
  %38 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %EncryptionR41 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %38, i32 0, i32 119
  %39 = load i32, i32* %EncryptionR41, align 4, !tbaa !167
  %cmp42 = icmp ugt i32 %39, 3
  br i1 %cmp42, label %if.then.43, label %if.end.49

if.then.43:                                       ; preds = %lor.lhs.false, %if.end.38
  %40 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %memory44 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %40, i32 0, i32 3
  %41 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory44, align 8, !tbaa !5
  %call45 = call i8* @gs_program_name() #7
  %call46 = call i64 @gs_revision_number() #7
  call void @emprintf_program_ident(%struct.gs_memory_s* %41, i8* %call45, i64 %call46) #7
  %42 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %memory47 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %42, i32 0, i32 3
  %43 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory47, align 8, !tbaa !5
  %call48 = call i32 (%struct.gs_memory_s*, i8*, ...) @errprintf(%struct.gs_memory_s* %43, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.37, i32 0, i32 0)) #7
  store i32 -15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.49:                                        ; preds = %lor.lhs.false
  %44 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %EncryptionR50 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %44, i32 0, i32 119
  %45 = load i32, i32* %EncryptionR50, align 4, !tbaa !167
  %cmp51 = icmp ugt i32 %45, 2
  br i1 %cmp51, label %land.lhs.true.52, label %if.end.61

land.lhs.true.52:                                 ; preds = %if.end.49
  %46 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %CompatibilityLevel53 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %46, i32 0, i32 75
  %47 = load double, double* %CompatibilityLevel53, align 8, !tbaa !134
  %cmp54 = fcmp olt double %47, 1.400000e+00
  br i1 %cmp54, label %if.then.55, label %if.end.61

if.then.55:                                       ; preds = %land.lhs.true.52
  %48 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %memory56 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %48, i32 0, i32 3
  %49 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory56, align 8, !tbaa !5
  %call57 = call i8* @gs_program_name() #7
  %call58 = call i64 @gs_revision_number() #7
  call void @emprintf_program_ident(%struct.gs_memory_s* %49, i8* %call57, i64 %call58) #7
  %50 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %memory59 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %50, i32 0, i32 3
  %51 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory59, align 8, !tbaa !5
  %call60 = call i32 (%struct.gs_memory_s*, i8*, ...) @errprintf(%struct.gs_memory_s* %51, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.38, i32 0, i32 0)) #7
  store i32 -15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.61:                                        ; preds = %land.lhs.true.52, %if.end.49
  %52 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %KeyLength62 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %52, i32 0, i32 117
  %53 = load i32, i32* %KeyLength62, align 4, !tbaa !70
  %cmp63 = icmp ugt i32 %53, 128
  br i1 %cmp63, label %if.then.64, label %if.end.70

if.then.64:                                       ; preds = %if.end.61
  %54 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %memory65 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %54, i32 0, i32 3
  %55 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory65, align 8, !tbaa !5
  %call66 = call i8* @gs_program_name() #7
  %call67 = call i64 @gs_revision_number() #7
  call void @emprintf_program_ident(%struct.gs_memory_s* %55, i8* %call66, i64 %call67) #7
  %56 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %memory68 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %56, i32 0, i32 3
  %57 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory68, align 8, !tbaa !5
  %call69 = call i32 (%struct.gs_memory_s*, i8*, ...) @errprintf(%struct.gs_memory_s* %57, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.39, i32 0, i32 0)) #7
  store i32 -15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.70:                                        ; preds = %if.end.61
  %58 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %KeyLength71 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %58, i32 0, i32 117
  %59 = load i32, i32* %KeyLength71, align 4, !tbaa !70
  %rem = urem i32 %59, 8
  %tobool72 = icmp ne i32 %rem, 0
  br i1 %tobool72, label %if.then.73, label %if.end.79

if.then.73:                                       ; preds = %if.end.70
  %60 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %memory74 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %60, i32 0, i32 3
  %61 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory74, align 8, !tbaa !5
  %call75 = call i8* @gs_program_name() #7
  %call76 = call i64 @gs_revision_number() #7
  call void @emprintf_program_ident(%struct.gs_memory_s* %61, i8* %call75, i64 %call76) #7
  %62 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %memory77 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %62, i32 0, i32 3
  %63 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory77, align 8, !tbaa !5
  %call78 = call i32 (%struct.gs_memory_s*, i8*, ...) @errprintf(%struct.gs_memory_s* %63, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.40, i32 0, i32 0)) #7
  store i32 -15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.79:                                        ; preds = %if.end.70
  %64 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %EncryptionR80 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %64, i32 0, i32 119
  %65 = load i32, i32* %EncryptionR80, align 4, !tbaa !167
  %cmp81 = icmp eq i32 %65, 2
  br i1 %cmp81, label %land.lhs.true.82, label %if.end.90

land.lhs.true.82:                                 ; preds = %if.end.79
  %66 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %Permissions = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %66, i32 0, i32 118
  %67 = load i32, i32* %Permissions, align 4, !tbaa !168
  %and = and i32 %67, -61
  %cmp83 = icmp ne i32 %and, -64
  br i1 %cmp83, label %if.then.84, label %if.end.90

if.then.84:                                       ; preds = %land.lhs.true.82
  %68 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %memory85 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %68, i32 0, i32 3
  %69 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory85, align 8, !tbaa !5
  %call86 = call i8* @gs_program_name() #7
  %call87 = call i64 @gs_revision_number() #7
  call void @emprintf_program_ident(%struct.gs_memory_s* %69, i8* %call86, i64 %call87) #7
  %70 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %memory88 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %70, i32 0, i32 3
  %71 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory88, align 8, !tbaa !5
  %call89 = call i32 (%struct.gs_memory_s*, i8*, ...) @errprintf(%struct.gs_memory_s* %71, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.41, i32 0, i32 0)) #7
  store i32 -15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.90:                                        ; preds = %land.lhs.true.82, %if.end.79
  %72 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %EncryptionV91 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %72, i32 0, i32 126
  %73 = load i32, i32* %EncryptionV91, align 4, !tbaa !166
  %cmp92 = icmp eq i32 %73, 2
  br i1 %cmp92, label %land.lhs.true.93, label %if.end.105

land.lhs.true.93:                                 ; preds = %if.end.90
  %74 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %EncryptionR94 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %74, i32 0, i32 119
  %75 = load i32, i32* %EncryptionR94, align 4, !tbaa !167
  %cmp95 = icmp eq i32 %75, 2
  br i1 %cmp95, label %land.lhs.true.96, label %if.end.105

land.lhs.true.96:                                 ; preds = %land.lhs.true.93
  %76 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %KeyLength97 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %76, i32 0, i32 117
  %77 = load i32, i32* %KeyLength97, align 4, !tbaa !70
  %cmp98 = icmp ugt i32 %77, 40
  br i1 %cmp98, label %if.then.99, label %if.end.105

if.then.99:                                       ; preds = %land.lhs.true.96
  %78 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %memory100 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %78, i32 0, i32 3
  %79 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory100, align 8, !tbaa !5
  %call101 = call i8* @gs_program_name() #7
  %call102 = call i64 @gs_revision_number() #7
  call void @emprintf_program_ident(%struct.gs_memory_s* %79, i8* %call101, i64 %call102) #7
  %80 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %memory103 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %80, i32 0, i32 3
  %81 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory103, align 8, !tbaa !5
  %call104 = call i32 (%struct.gs_memory_s*, i8*, ...) @errprintf(%struct.gs_memory_s* %81, i8* getelementptr inbounds ([122 x i8], [122 x i8]* @.str.42, i32 0, i32 0)) #7
  store i32 -15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.105:                                       ; preds = %land.lhs.true.96, %land.lhs.true.93, %if.end.90
  call void @gs_md5_init(%struct.gs_md5_state_s* %md5) #7
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %buf, i32 0, i32 0
  %82 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %OwnerPassword = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %82, i32 0, i32 115
  call void @copy_padded(i8* %arraydecay, %struct.gs_param_string_s* %OwnerPassword) #7
  %arraydecay106 = getelementptr inbounds [32 x i8], [32 x i8]* %buf, i32 0, i32 0
  call void @gs_md5_append(%struct.gs_md5_state_s* %md5, i8* %arraydecay106, i32 32) #7
  %arraydecay107 = getelementptr inbounds [16 x i8], [16 x i8]* %digest, i32 0, i32 0
  call void @gs_md5_finish(%struct.gs_md5_state_s* %md5, i8* %arraydecay107) #7
  %83 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %EncryptionR108 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %83, i32 0, i32 119
  %84 = load i32, i32* %EncryptionR108, align 4, !tbaa !167
  %cmp109 = icmp eq i32 %84, 3
  br i1 %cmp109, label %if.then.110, label %if.end.113

if.then.110:                                      ; preds = %if.end.105
  %arraydecay111 = getelementptr inbounds [16 x i8], [16 x i8]* %digest, i32 0, i32 0
  %85 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %KeyLength112 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %85, i32 0, i32 117
  %86 = load i32, i32* %KeyLength112, align 4, !tbaa !70
  %div = udiv i32 %86, 8
  call void @Adobe_magic_loop_50(i8* %arraydecay111, i32 %div) #7
  br label %if.end.113

if.end.113:                                       ; preds = %if.then.110, %if.end.105
  %arraydecay114 = getelementptr inbounds [32 x i8], [32 x i8]* %buf, i32 0, i32 0
  %87 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %UserPassword = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %87, i32 0, i32 116
  call void @copy_padded(i8* %arraydecay114, %struct.gs_param_string_s* %UserPassword) #7
  %arraydecay115 = getelementptr inbounds [16 x i8], [16 x i8]* %digest, i32 0, i32 0
  %88 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %KeyLength116 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %88, i32 0, i32 117
  %89 = load i32, i32* %KeyLength116, align 4, !tbaa !70
  %div117 = udiv i32 %89, 8
  %call118 = call i32 @s_arcfour_set_key(%struct.stream_arcfour_state_s* %sarc4, i8* %arraydecay115, i32 %div117) #7
  %arraydecay119 = getelementptr inbounds [32 x i8], [32 x i8]* %buf, i32 0, i32 0
  %call120 = call i32 @s_arcfour_process_buffer(%struct.stream_arcfour_state_s* %sarc4, i8* %arraydecay119, i32 32) #7
  %90 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %EncryptionR121 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %90, i32 0, i32 119
  %91 = load i32, i32* %EncryptionR121, align 4, !tbaa !167
  %cmp122 = icmp eq i32 %91, 3
  br i1 %cmp122, label %if.then.123, label %if.end.128

if.then.123:                                      ; preds = %if.end.113
  %arraydecay124 = getelementptr inbounds [32 x i8], [32 x i8]* %buf, i32 0, i32 0
  %arraydecay125 = getelementptr inbounds [16 x i8], [16 x i8]* %digest, i32 0, i32 0
  %92 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %KeyLength126 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %92, i32 0, i32 117
  %93 = load i32, i32* %KeyLength126, align 4, !tbaa !70
  %div127 = udiv i32 %93, 8
  call void @Adobe_magic_loop_19(i8* %arraydecay124, i32 32, i8* %arraydecay125, i32 %div127) #7
  br label %if.end.128

if.end.128:                                       ; preds = %if.then.123, %if.end.113
  %94 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %EncryptionO = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %94, i32 0, i32 123
  %arraydecay129 = getelementptr inbounds [32 x i8], [32 x i8]* %EncryptionO, i32 0, i32 0
  %arraydecay130 = getelementptr inbounds [32 x i8], [32 x i8]* %buf, i32 0, i32 0
  %call131 = call i8* @memcpy(i8* %arraydecay129, i8* %arraydecay130, i64 32) #8
  call void @gs_md5_init(%struct.gs_md5_state_s* %md5) #7
  %arraydecay132 = getelementptr inbounds [32 x i8], [32 x i8]* %buf, i32 0, i32 0
  %95 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %UserPassword133 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %95, i32 0, i32 116
  call void @copy_padded(i8* %arraydecay132, %struct.gs_param_string_s* %UserPassword133) #7
  %arraydecay134 = getelementptr inbounds [32 x i8], [32 x i8]* %buf, i32 0, i32 0
  call void @gs_md5_append(%struct.gs_md5_state_s* %md5, i8* %arraydecay134, i32 32) #7
  %96 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %EncryptionO135 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %96, i32 0, i32 123
  %arraydecay136 = getelementptr inbounds [32 x i8], [32 x i8]* %EncryptionO135, i32 0, i32 0
  call void @gs_md5_append(%struct.gs_md5_state_s* %md5, i8* %arraydecay136, i32 32) #7
  %97 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %Permissions137 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %97, i32 0, i32 118
  %98 = load i32, i32* %Permissions137, align 4, !tbaa !168
  %shr = lshr i32 %98, 0
  %conv = trunc i32 %shr to i8
  store i8 %conv, i8* %t, align 1, !tbaa !147
  call void @gs_md5_append(%struct.gs_md5_state_s* %md5, i8* %t, i32 1) #7
  %99 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %Permissions138 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %99, i32 0, i32 118
  %100 = load i32, i32* %Permissions138, align 4, !tbaa !168
  %shr139 = lshr i32 %100, 8
  %conv140 = trunc i32 %shr139 to i8
  store i8 %conv140, i8* %t, align 1, !tbaa !147
  call void @gs_md5_append(%struct.gs_md5_state_s* %md5, i8* %t, i32 1) #7
  %101 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %Permissions141 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %101, i32 0, i32 118
  %102 = load i32, i32* %Permissions141, align 4, !tbaa !168
  %shr142 = lshr i32 %102, 16
  %conv143 = trunc i32 %shr142 to i8
  store i8 %conv143, i8* %t, align 1, !tbaa !147
  call void @gs_md5_append(%struct.gs_md5_state_s* %md5, i8* %t, i32 1) #7
  %103 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %Permissions144 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %103, i32 0, i32 118
  %104 = load i32, i32* %Permissions144, align 4, !tbaa !168
  %shr145 = lshr i32 %104, 24
  %conv146 = trunc i32 %shr145 to i8
  store i8 %conv146, i8* %t, align 1, !tbaa !147
  call void @gs_md5_append(%struct.gs_md5_state_s* %md5, i8* %t, i32 1) #7
  %105 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %fileID = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %105, i32 0, i32 179
  %arraydecay147 = getelementptr inbounds [16 x i8], [16 x i8]* %fileID, i32 0, i32 0
  call void @gs_md5_append(%struct.gs_md5_state_s* %md5, i8* %arraydecay147, i32 16) #7
  %106 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %EncryptionR148 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %106, i32 0, i32 119
  %107 = load i32, i32* %EncryptionR148, align 4, !tbaa !167
  %cmp149 = icmp eq i32 %107, 3
  br i1 %cmp149, label %if.then.151, label %if.end.155

if.then.151:                                      ; preds = %if.end.128
  %108 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %EncryptMetadata = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %108, i32 0, i32 121
  %109 = load i32, i32* %EncryptMetadata, align 4, !tbaa !246
  %tobool152 = icmp ne i32 %109, 0
  br i1 %tobool152, label %if.end.154, label %if.then.153

if.then.153:                                      ; preds = %if.then.151
  call void @gs_md5_append(%struct.gs_md5_state_s* %md5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @pdf_compute_encryption_data.v, i32 0, i32 0), i32 4) #7
  br label %if.end.154

if.end.154:                                       ; preds = %if.then.153, %if.then.151
  br label %if.end.155

if.end.155:                                       ; preds = %if.end.154, %if.end.128
  %arraydecay156 = getelementptr inbounds [16 x i8], [16 x i8]* %digest, i32 0, i32 0
  call void @gs_md5_finish(%struct.gs_md5_state_s* %md5, i8* %arraydecay156) #7
  %110 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %EncryptionR157 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %110, i32 0, i32 119
  %111 = load i32, i32* %EncryptionR157, align 4, !tbaa !167
  %cmp158 = icmp eq i32 %111, 3
  br i1 %cmp158, label %if.then.160, label %if.end.164

if.then.160:                                      ; preds = %if.end.155
  %arraydecay161 = getelementptr inbounds [16 x i8], [16 x i8]* %digest, i32 0, i32 0
  %112 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %KeyLength162 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %112, i32 0, i32 117
  %113 = load i32, i32* %KeyLength162, align 4, !tbaa !70
  %div163 = udiv i32 %113, 8
  call void @Adobe_magic_loop_50(i8* %arraydecay161, i32 %div163) #7
  br label %if.end.164

if.end.164:                                       ; preds = %if.then.160, %if.end.155
  %114 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %EncryptionKey = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %114, i32 0, i32 125
  %arraydecay165 = getelementptr inbounds [16 x i8], [16 x i8]* %EncryptionKey, i32 0, i32 0
  %arraydecay166 = getelementptr inbounds [16 x i8], [16 x i8]* %digest, i32 0, i32 0
  %115 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %KeyLength167 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %115, i32 0, i32 117
  %116 = load i32, i32* %KeyLength167, align 4, !tbaa !70
  %div168 = udiv i32 %116, 8
  %conv169 = zext i32 %div168 to i64
  %call170 = call i8* @memcpy(i8* %arraydecay165, i8* %arraydecay166, i64 %conv169) #8
  %117 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %EncryptionR171 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %117, i32 0, i32 119
  %118 = load i32, i32* %EncryptionR171, align 4, !tbaa !167
  %cmp172 = icmp eq i32 %118, 3
  br i1 %cmp172, label %if.then.174, label %if.else

if.then.174:                                      ; preds = %if.end.164
  call void @gs_md5_init(%struct.gs_md5_state_s* %md5) #7
  call void @gs_md5_append(%struct.gs_md5_state_s* %md5, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @pad, i32 0, i32 0), i32 32) #7
  %119 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %fileID175 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %119, i32 0, i32 179
  %arraydecay176 = getelementptr inbounds [16 x i8], [16 x i8]* %fileID175, i32 0, i32 0
  call void @gs_md5_append(%struct.gs_md5_state_s* %md5, i8* %arraydecay176, i32 16) #7
  %arraydecay177 = getelementptr inbounds [16 x i8], [16 x i8]* %digest, i32 0, i32 0
  call void @gs_md5_finish(%struct.gs_md5_state_s* %md5, i8* %arraydecay177) #7
  %120 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %EncryptionKey178 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %120, i32 0, i32 125
  %arraydecay179 = getelementptr inbounds [16 x i8], [16 x i8]* %EncryptionKey178, i32 0, i32 0
  %121 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %KeyLength180 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %121, i32 0, i32 117
  %122 = load i32, i32* %KeyLength180, align 4, !tbaa !70
  %div181 = udiv i32 %122, 8
  %call182 = call i32 @s_arcfour_set_key(%struct.stream_arcfour_state_s* %sarc4, i8* %arraydecay179, i32 %div181) #7
  %arraydecay183 = getelementptr inbounds [16 x i8], [16 x i8]* %digest, i32 0, i32 0
  %call184 = call i32 @s_arcfour_process_buffer(%struct.stream_arcfour_state_s* %sarc4, i8* %arraydecay183, i32 16) #7
  %arraydecay185 = getelementptr inbounds [16 x i8], [16 x i8]* %digest, i32 0, i32 0
  %123 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %EncryptionKey186 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %123, i32 0, i32 125
  %arraydecay187 = getelementptr inbounds [16 x i8], [16 x i8]* %EncryptionKey186, i32 0, i32 0
  %124 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %KeyLength188 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %124, i32 0, i32 117
  %125 = load i32, i32* %KeyLength188, align 4, !tbaa !70
  %div189 = udiv i32 %125, 8
  call void @Adobe_magic_loop_19(i8* %arraydecay185, i32 16, i8* %arraydecay187, i32 %div189) #7
  %126 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %EncryptionU = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %126, i32 0, i32 124
  %arraydecay190 = getelementptr inbounds [32 x i8], [32 x i8]* %EncryptionU, i32 0, i32 0
  %arraydecay191 = getelementptr inbounds [16 x i8], [16 x i8]* %digest, i32 0, i32 0
  %call192 = call i8* @memcpy(i8* %arraydecay190, i8* %arraydecay191, i64 16) #8
  %127 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %EncryptionU193 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %127, i32 0, i32 124
  %arraydecay194 = getelementptr inbounds [32 x i8], [32 x i8]* %EncryptionU193, i32 0, i32 0
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay194, i64 16
  %call195 = call i8* @memcpy(i8* %add.ptr, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @pad, i32 0, i32 0), i64 16) #8
  br label %if.end.207

if.else:                                          ; preds = %if.end.164
  %128 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %EncryptionU196 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %128, i32 0, i32 124
  %arraydecay197 = getelementptr inbounds [32 x i8], [32 x i8]* %EncryptionU196, i32 0, i32 0
  %call198 = call i8* @memcpy(i8* %arraydecay197, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @pad, i32 0, i32 0), i64 32) #8
  %129 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %EncryptionKey199 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %129, i32 0, i32 125
  %arraydecay200 = getelementptr inbounds [16 x i8], [16 x i8]* %EncryptionKey199, i32 0, i32 0
  %130 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %KeyLength201 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %130, i32 0, i32 117
  %131 = load i32, i32* %KeyLength201, align 4, !tbaa !70
  %div202 = udiv i32 %131, 8
  %call203 = call i32 @s_arcfour_set_key(%struct.stream_arcfour_state_s* %sarc4, i8* %arraydecay200, i32 %div202) #7
  %132 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %EncryptionU204 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %132, i32 0, i32 124
  %arraydecay205 = getelementptr inbounds [32 x i8], [32 x i8]* %EncryptionU204, i32 0, i32 0
  %call206 = call i32 @s_arcfour_process_buffer(%struct.stream_arcfour_state_s* %sarc4, i8* %arraydecay205, i32 32) #7
  br label %if.end.207

if.end.207:                                       ; preds = %if.else, %if.then.174
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.207, %if.then.99, %if.then.84, %if.then.73, %if.then.64, %if.then.55, %if.then.43, %if.then.28, %if.then
  %133 = bitcast %struct.stream_arcfour_state_s* %sarc4 to i8*
  call void @llvm.lifetime.end(i64 376, i8* %133) #2
  call void @llvm.lifetime.end(i64 1, i8* %t) #2
  %134 = bitcast [32 x i8]* %buf to i8*
  call void @llvm.lifetime.end(i64 32, i8* %134) #2
  %135 = bitcast [16 x i8]* %digest to i8*
  call void @llvm.lifetime.end(i64 16, i8* %135) #2
  %136 = bitcast %struct.gs_md5_state_s* %md5 to i8*
  call void @llvm.lifetime.end(i64 88, i8* %136) #2
  %137 = load i32, i32* %retval
  ret i32 %137
}

declare void @emprintf_program_ident(%struct.gs_memory_s*, i8*, i64) #0

declare i8* @gs_program_name() #0

declare i64 @gs_revision_number() #0

declare i32 @errprintf(%struct.gs_memory_s*, i8*, ...) #0

declare %struct.pdf_text_data_s* @pdf_text_data_alloc(%struct.gs_memory_s*) #0

; Function Attrs: nounwind uwtable
define internal void @pdf_reset_page(%struct.gx_device_pdf_s* %pdev) #1 {
entry:
  %pdev.addr = alloca %struct.gx_device_pdf_s*, align 8
  store %struct.gx_device_pdf_s* %pdev, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %0 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %page_dsc_info = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %0, i32 0, i32 131
  %1 = bitcast %struct.pdf_page_dsc_info_s* %page_dsc_info to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1, i8* bitcast (%struct.pdf_page_dsc_info_s* getelementptr inbounds (%struct.gx_device_pdf_s, %struct.gx_device_pdf_s* @gs_pdfwrite_device, i32 0, i32 131) to i8*), i64 40, i32 8, i1 false), !tbaa.struct !247
  %2 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %contents_id = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %2, i32 0, i32 155
  store i64 0, i64* %contents_id, align 8, !tbaa !114
  %3 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  call void @pdf_reset_graphics(%struct.gx_device_pdf_s* %3) #7
  %4 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %procsets = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %4, i32 0, i32 159
  store i32 0, i32* %procsets, align 4, !tbaa !249
  %5 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %cs_Patterns = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %5, i32 0, i32 166
  %arraydecay = getelementptr inbounds [5 x %struct.pdf_resource_s*], [5 x %struct.pdf_resource_s*]* %cs_Patterns, i32 0, i32 0
  %6 = bitcast %struct.pdf_resource_s** %arraydecay to i8*
  %call = call i8* @memset(i8* %6, i32 0, i64 40) #8
  %7 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %text = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %7, i32 0, i32 160
  %8 = load %struct.pdf_text_data_s*, %struct.pdf_text_data_s** %text, align 8, !tbaa !73
  call void @pdf_reset_text_page(%struct.pdf_text_data_s* %8) #7
  %9 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %call1 = call i32 @pdf_remember_clip_path(%struct.gx_device_pdf_s* %9, %struct.gx_clip_path_s* null) #7
  %10 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %no_clip_path_id = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %10, i32 0, i32 58
  %11 = load i64, i64* %no_clip_path_id, align 8, !tbaa !250
  %12 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %clip_path_id = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %12, i32 0, i32 59
  store i64 %11, i64* %clip_path_id, align 8, !tbaa !251
  ret void
}

declare i32 @gdev_vector_close_file(%struct.gx_device_vector_s*) #0

; Function Attrs: nounwind uwtable
define internal i32 @pdf_close_files(%struct.gx_device_pdf_s* %pdev, i32 %code) #1 {
entry:
  %pdev.addr = alloca %struct.gx_device_pdf_s*, align 8
  %code.addr = alloca i32, align 4
  store %struct.gx_device_pdf_s* %pdev, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  store i32 %code, i32* %code.addr, align 4, !tbaa !54
  %0 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %1 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %pictures = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %1, i32 0, i32 147
  %2 = load i32, i32* %code.addr, align 4, !tbaa !54
  %call = call i32 @pdf_close_temp_file(%struct.gx_device_pdf_s* %0, %struct.pdf_temp_file_s* %pictures, i32 %2) #7
  store i32 %call, i32* %code.addr, align 4, !tbaa !54
  %3 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %4 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %streams = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %4, i32 0, i32 146
  %5 = load i32, i32* %code.addr, align 4, !tbaa !54
  %call1 = call i32 @pdf_close_temp_file(%struct.gx_device_pdf_s* %3, %struct.pdf_temp_file_s* %streams, i32 %5) #7
  store i32 %call1, i32* %code.addr, align 4, !tbaa !54
  %6 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %7 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %asides = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %7, i32 0, i32 145
  %8 = load i32, i32* %code.addr, align 4, !tbaa !54
  %call2 = call i32 @pdf_close_temp_file(%struct.gx_device_pdf_s* %6, %struct.pdf_temp_file_s* %asides, i32 %8) #7
  store i32 %call2, i32* %code.addr, align 4, !tbaa !54
  %9 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %10 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %xref = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %10, i32 0, i32 144
  %11 = load i32, i32* %code.addr, align 4, !tbaa !54
  %call3 = call i32 @pdf_close_temp_file(%struct.gx_device_pdf_s* %9, %struct.pdf_temp_file_s* %xref, i32 %11) #7
  ret i32 %call3
}

; Function Attrs: nounwind
declare i8* @strcpy(i8*, i8*) #4

; Function Attrs: nounwind
declare i8* @strcat(i8*, i8*) #4

declare %struct._IO_FILE* @gp_open_scratch_file_64(%struct.gs_memory_s*, i8*, i8*, i8*) #0

declare %struct.stream_s* @s_alloc(%struct.gs_memory_s*, i8*) #0

declare void @swrite_file(%struct.stream_s*, %struct._IO_FILE*, i8*, i32) #0

declare %struct.stream_s* @s_MD5E_make_stream(%struct.gs_memory_s*, i8*, i32) #0

declare void @gp_get_usertime(i64*) #0

declare i32 @sputs(%struct.stream_s*, i8*, i32, i32*) #0

declare i32 @cos_dict_elements_write(%struct.cos_dict_s*, %struct.gx_device_pdf_s*) #0

declare i32 @sclose(%struct.stream_s*) #0

declare void @gs_md5_init(%struct.gs_md5_state_s*) #0

; Function Attrs: inlinehint nounwind uwtable
define internal void @copy_padded(i8* %buf, %struct.gs_param_string_s* %str) #6 {
entry:
  %buf.addr = alloca i8*, align 8
  %str.addr = alloca %struct.gs_param_string_s*, align 8
  store i8* %buf, i8** %buf.addr, align 8, !tbaa !1
  store %struct.gs_param_string_s* %str, %struct.gs_param_string_s** %str.addr, align 8, !tbaa !1
  %0 = load i8*, i8** %buf.addr, align 8, !tbaa !1
  %1 = load %struct.gs_param_string_s*, %struct.gs_param_string_s** %str.addr, align 8, !tbaa !1
  %data = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %1, i32 0, i32 0
  %2 = load i8*, i8** %data, align 8, !tbaa !158
  %3 = load %struct.gs_param_string_s*, %struct.gs_param_string_s** %str.addr, align 8, !tbaa !1
  %size = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %3, i32 0, i32 1
  %4 = load i32, i32* %size, align 4, !tbaa !159
  %cmp = icmp ult i32 %4, 32
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %5 = load %struct.gs_param_string_s*, %struct.gs_param_string_s** %str.addr, align 8, !tbaa !1
  %size1 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %5, i32 0, i32 1
  %6 = load i32, i32* %size1, align 4, !tbaa !159
  br label %cond.end

cond.false:                                       ; preds = %entry
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %6, %cond.true ], [ 32, %cond.false ]
  %conv = zext i32 %cond to i64
  %call = call i8* @memcpy(i8* %0, i8* %2, i64 %conv) #8
  %7 = load %struct.gs_param_string_s*, %struct.gs_param_string_s** %str.addr, align 8, !tbaa !1
  %size2 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %7, i32 0, i32 1
  %8 = load i32, i32* %size2, align 4, !tbaa !159
  %cmp3 = icmp ugt i32 32, %8
  br i1 %cmp3, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end
  %9 = load i8*, i8** %buf.addr, align 8, !tbaa !1
  %10 = load %struct.gs_param_string_s*, %struct.gs_param_string_s** %str.addr, align 8, !tbaa !1
  %size5 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %10, i32 0, i32 1
  %11 = load i32, i32* %size5, align 4, !tbaa !159
  %idx.ext = zext i32 %11 to i64
  %add.ptr = getelementptr inbounds i8, i8* %9, i64 %idx.ext
  %12 = load %struct.gs_param_string_s*, %struct.gs_param_string_s** %str.addr, align 8, !tbaa !1
  %size6 = getelementptr inbounds %struct.gs_param_string_s, %struct.gs_param_string_s* %12, i32 0, i32 1
  %13 = load i32, i32* %size6, align 4, !tbaa !159
  %sub = sub i32 32, %13
  %conv7 = zext i32 %sub to i64
  %call8 = call i8* @memcpy(i8* %add.ptr, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @pad, i32 0, i32 0), i64 %conv7) #8
  br label %if.end

if.end:                                           ; preds = %if.then, %cond.end
  ret void
}

declare void @gs_md5_append(%struct.gs_md5_state_s*, i8*, i32) #0

declare void @gs_md5_finish(%struct.gs_md5_state_s*, i8*) #0

; Function Attrs: nounwind uwtable
define internal void @Adobe_magic_loop_50(i8* %digest, i32 %key_length) #1 {
entry:
  %digest.addr = alloca i8*, align 8
  %key_length.addr = alloca i32, align 4
  %md5 = alloca %struct.gs_md5_state_s, align 4
  %i = alloca i32, align 4
  store i8* %digest, i8** %digest.addr, align 8, !tbaa !1
  store i32 %key_length, i32* %key_length.addr, align 4, !tbaa !54
  %0 = bitcast %struct.gs_md5_state_s* %md5 to i8*
  call void @llvm.lifetime.start(i64 88, i8* %0) #2
  %1 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #2
  store i32 0, i32* %i, align 4, !tbaa !54
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !tbaa !54
  %cmp = icmp slt i32 %2, 50
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  call void @gs_md5_init(%struct.gs_md5_state_s* %md5) #7
  %3 = load i8*, i8** %digest.addr, align 8, !tbaa !1
  %4 = load i32, i32* %key_length.addr, align 4, !tbaa !54
  call void @gs_md5_append(%struct.gs_md5_state_s* %md5, i8* %3, i32 %4) #7
  %5 = load i8*, i8** %digest.addr, align 8, !tbaa !1
  call void @gs_md5_finish(%struct.gs_md5_state_s* %md5, i8* %5) #7
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %6 = load i32, i32* %i, align 4, !tbaa !54
  %inc = add nsw i32 %6, 1
  store i32 %inc, i32* %i, align 4, !tbaa !54
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %7 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %7) #2
  %8 = bitcast %struct.gs_md5_state_s* %md5 to i8*
  call void @llvm.lifetime.end(i64 88, i8* %8) #2
  ret void
}

declare i32 @s_arcfour_set_key(%struct.stream_arcfour_state_s*, i8*, i32) #0

declare i32 @s_arcfour_process_buffer(%struct.stream_arcfour_state_s*, i8*, i32) #0

; Function Attrs: nounwind uwtable
define internal void @Adobe_magic_loop_19(i8* %data, i32 %data_size, i8* %key, i32 %key_size) #1 {
entry:
  %data.addr = alloca i8*, align 8
  %data_size.addr = alloca i32, align 4
  %key.addr = alloca i8*, align 8
  %key_size.addr = alloca i32, align 4
  %sarc4 = alloca %struct.stream_arcfour_state_s, align 8
  %key_buf = alloca [16 x i8], align 16
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %data, i8** %data.addr, align 8, !tbaa !1
  store i32 %data_size, i32* %data_size.addr, align 4, !tbaa !54
  store i8* %key, i8** %key.addr, align 8, !tbaa !1
  store i32 %key_size, i32* %key_size.addr, align 4, !tbaa !54
  %0 = bitcast %struct.stream_arcfour_state_s* %sarc4 to i8*
  call void @llvm.lifetime.start(i64 376, i8* %0) #2
  %1 = bitcast [16 x i8]* %key_buf to i8*
  call void @llvm.lifetime.start(i64 16, i8* %1) #2
  %2 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #2
  %3 = bitcast i32* %j to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #2
  store i32 1, i32* %i, align 4, !tbaa !54
  br label %for.cond

for.cond:                                         ; preds = %for.inc.10, %entry
  %4 = load i32, i32* %i, align 4, !tbaa !54
  %cmp = icmp sle i32 %4, 19
  br i1 %cmp, label %for.body, label %for.end.12

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !tbaa !54
  br label %for.cond.1

for.cond.1:                                       ; preds = %for.inc, %for.body
  %5 = load i32, i32* %j, align 4, !tbaa !54
  %6 = load i32, i32* %key_size.addr, align 4, !tbaa !54
  %cmp2 = icmp slt i32 %5, %6
  br i1 %cmp2, label %for.body.3, label %for.end

for.body.3:                                       ; preds = %for.cond.1
  %7 = load i32, i32* %j, align 4, !tbaa !54
  %idxprom = sext i32 %7 to i64
  %8 = load i8*, i8** %key.addr, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds i8, i8* %8, i64 %idxprom
  %9 = load i8, i8* %arrayidx, align 1, !tbaa !147
  %conv = zext i8 %9 to i32
  %10 = load i32, i32* %i, align 4, !tbaa !54
  %conv4 = trunc i32 %10 to i8
  %conv5 = zext i8 %conv4 to i32
  %xor = xor i32 %conv, %conv5
  %conv6 = trunc i32 %xor to i8
  %11 = load i32, i32* %j, align 4, !tbaa !54
  %idxprom7 = sext i32 %11 to i64
  %arrayidx8 = getelementptr inbounds [16 x i8], [16 x i8]* %key_buf, i32 0, i64 %idxprom7
  store i8 %conv6, i8* %arrayidx8, align 1, !tbaa !147
  br label %for.inc

for.inc:                                          ; preds = %for.body.3
  %12 = load i32, i32* %j, align 4, !tbaa !54
  %inc = add nsw i32 %12, 1
  store i32 %inc, i32* %j, align 4, !tbaa !54
  br label %for.cond.1

for.end:                                          ; preds = %for.cond.1
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %key_buf, i32 0, i32 0
  %13 = load i32, i32* %key_size.addr, align 4, !tbaa !54
  %call = call i32 @s_arcfour_set_key(%struct.stream_arcfour_state_s* %sarc4, i8* %arraydecay, i32 %13) #7
  %14 = load i8*, i8** %data.addr, align 8, !tbaa !1
  %15 = load i32, i32* %data_size.addr, align 4, !tbaa !54
  %call9 = call i32 @s_arcfour_process_buffer(%struct.stream_arcfour_state_s* %sarc4, i8* %14, i32 %15) #7
  br label %for.inc.10

for.inc.10:                                       ; preds = %for.end
  %16 = load i32, i32* %i, align 4, !tbaa !54
  %inc11 = add nsw i32 %16, 1
  store i32 %inc11, i32* %i, align 4, !tbaa !54
  br label %for.cond

for.end.12:                                       ; preds = %for.cond
  %17 = bitcast i32* %j to i8*
  call void @llvm.lifetime.end(i64 4, i8* %17) #2
  %18 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %18) #2
  %19 = bitcast [16 x i8]* %key_buf to i8*
  call void @llvm.lifetime.end(i64 16, i8* %19) #2
  %20 = bitcast %struct.stream_arcfour_state_s* %sarc4 to i8*
  call void @llvm.lifetime.end(i64 376, i8* %20) #2
  ret void
}

; Function Attrs: nounwind uwtable
define internal %struct.gs_ptr_procs_s* @pdf_substream_save_elt_enum_ptrs(%struct.gs_memory_s* %mem, i8* %vptr, i32 %size, i32 %index, %struct.enum_ptr_s* %pep, %struct.gs_memory_struct_type_s* %pstype, %struct.gc_state_s* %gcst) #1 {
entry:
  %retval = alloca %struct.gs_ptr_procs_s*, align 8
  %mem.addr = alloca %struct.gs_memory_s*, align 8
  %vptr.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  %index.addr = alloca i32, align 4
  %pep.addr = alloca %struct.enum_ptr_s*, align 8
  %pstype.addr = alloca %struct.gs_memory_struct_type_s*, align 8
  %gcst.addr = alloca %struct.gc_state_s*, align 8
  %count = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.gs_memory_s* %mem, %struct.gs_memory_s** %mem.addr, align 8, !tbaa !1
  store i8* %vptr, i8** %vptr.addr, align 8, !tbaa !1
  store i32 %size, i32* %size.addr, align 4, !tbaa !54
  store i32 %index, i32* %index.addr, align 4, !tbaa !54
  store %struct.enum_ptr_s* %pep, %struct.enum_ptr_s** %pep.addr, align 8, !tbaa !1
  store %struct.gs_memory_struct_type_s* %pstype, %struct.gs_memory_struct_type_s** %pstype.addr, align 8, !tbaa !1
  store %struct.gc_state_s* %gcst, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %0 = bitcast i32* %count to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = load i32, i32* %size.addr, align 4, !tbaa !54
  %div = udiv i32 %1, 120
  store i32 %div, i32* %count, align 4, !tbaa !54
  %2 = load i32, i32* %count, align 4, !tbaa !54
  %cmp = icmp eq i32 %2, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store %struct.gs_ptr_procs_s* null, %struct.gs_ptr_procs_s** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %3 = load %struct.gs_ptr_procs_s* (%struct.gs_memory_s*, i8*, i32, i32, %struct.enum_ptr_s*, %struct.gs_memory_struct_type_s*, %struct.gc_state_s*)*, %struct.gs_ptr_procs_s* (%struct.gs_memory_s*, i8*, i32, i32, %struct.enum_ptr_s*, %struct.gs_memory_struct_type_s*, %struct.gc_state_s*)** getelementptr inbounds (%struct.gs_memory_struct_type_s, %struct.gs_memory_struct_type_s* @st_pdf_substream_save, i32 0, i32 4), align 8, !tbaa !212
  %4 = load %struct.gs_memory_s*, %struct.gs_memory_s** %mem.addr, align 8, !tbaa !1
  %5 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %6 = load i32, i32* %index.addr, align 4, !tbaa !54
  %7 = load i32, i32* %count, align 4, !tbaa !54
  %rem = urem i32 %6, %7
  %conv = zext i32 %rem to i64
  %mul = mul i64 %conv, 120
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %mul
  %8 = load i32, i32* %index.addr, align 4, !tbaa !54
  %9 = load i32, i32* %count, align 4, !tbaa !54
  %div1 = udiv i32 %8, %9
  %10 = load %struct.enum_ptr_s*, %struct.enum_ptr_s** %pep.addr, align 8, !tbaa !1
  %11 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %call = call %struct.gs_ptr_procs_s* %3(%struct.gs_memory_s* %4, i8* %add.ptr, i32 120, i32 %div1, %struct.enum_ptr_s* %10, %struct.gs_memory_struct_type_s* @st_pdf_substream_save, %struct.gc_state_s* %11) #7
  store %struct.gs_ptr_procs_s* %call, %struct.gs_ptr_procs_s** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  %12 = bitcast i32* %count to i8*
  call void @llvm.lifetime.end(i64 4, i8* %12) #2
  %13 = load %struct.gs_ptr_procs_s*, %struct.gs_ptr_procs_s** %retval
  ret %struct.gs_ptr_procs_s* %13
}

; Function Attrs: nounwind uwtable
define internal void @pdf_substream_save_elt_reloc_ptrs(i8* %vptr, i32 %size, %struct.gs_memory_struct_type_s* %pstype, %struct.gc_state_s* %gcst) #1 {
entry:
  %vptr.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  %pstype.addr = alloca %struct.gs_memory_struct_type_s*, align 8
  %gcst.addr = alloca %struct.gc_state_s*, align 8
  %count = alloca i32, align 4
  store i8* %vptr, i8** %vptr.addr, align 8, !tbaa !1
  store i32 %size, i32* %size.addr, align 4, !tbaa !54
  store %struct.gs_memory_struct_type_s* %pstype, %struct.gs_memory_struct_type_s** %pstype.addr, align 8, !tbaa !1
  store %struct.gc_state_s* %gcst, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %0 = bitcast i32* %count to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = load i32, i32* %size.addr, align 4, !tbaa !54
  %div = udiv i32 %1, 120
  store i32 %div, i32* %count, align 4, !tbaa !54
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %count, align 4, !tbaa !54
  %tobool = icmp ne i32 %2, 0
  br i1 %tobool, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load void (i8*, i32, %struct.gs_memory_struct_type_s*, %struct.gc_state_s*)*, void (i8*, i32, %struct.gs_memory_struct_type_s*, %struct.gc_state_s*)** getelementptr inbounds (%struct.gs_memory_struct_type_s, %struct.gs_memory_struct_type_s* @st_pdf_substream_save, i32 0, i32 5), align 8, !tbaa !237
  %4 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %5 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  call void %3(i8* %4, i32 120, %struct.gs_memory_struct_type_s* @st_pdf_substream_save, %struct.gc_state_s* %5) #7
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %6 = load i32, i32* %count, align 4, !tbaa !54
  %dec = add i32 %6, -1
  store i32 %dec, i32* %count, align 4, !tbaa !54
  %7 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %add.ptr = getelementptr inbounds i8, i8* %7, i64 120
  store i8* %add.ptr, i8** %vptr.addr, align 8, !tbaa !1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %8 = bitcast i32* %count to i8*
  call void @llvm.lifetime.end(i64 4, i8* %8) #2
  ret void
}

declare %struct.gs_ptr_procs_s* @basic_enum_ptrs(%struct.gs_memory_s*, i8*, i32, i32, %struct.enum_ptr_s*, %struct.gs_memory_struct_type_s*, %struct.gc_state_s*) #0

declare void @basic_reloc_ptrs(i8*, i32, %struct.gs_memory_struct_type_s*, %struct.gc_state_s*) #0

; Function Attrs: nounwind uwtable
define internal %struct.gs_ptr_procs_s* @pdf_page_elt_enum_ptrs(%struct.gs_memory_s* %mem, i8* %vptr, i32 %size, i32 %index, %struct.enum_ptr_s* %pep, %struct.gs_memory_struct_type_s* %pstype, %struct.gc_state_s* %gcst) #1 {
entry:
  %retval = alloca %struct.gs_ptr_procs_s*, align 8
  %mem.addr = alloca %struct.gs_memory_s*, align 8
  %vptr.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  %index.addr = alloca i32, align 4
  %pep.addr = alloca %struct.enum_ptr_s*, align 8
  %pstype.addr = alloca %struct.gs_memory_struct_type_s*, align 8
  %gcst.addr = alloca %struct.gc_state_s*, align 8
  %count = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.gs_memory_s* %mem, %struct.gs_memory_s** %mem.addr, align 8, !tbaa !1
  store i8* %vptr, i8** %vptr.addr, align 8, !tbaa !1
  store i32 %size, i32* %size.addr, align 4, !tbaa !54
  store i32 %index, i32* %index.addr, align 4, !tbaa !54
  store %struct.enum_ptr_s* %pep, %struct.enum_ptr_s** %pep.addr, align 8, !tbaa !1
  store %struct.gs_memory_struct_type_s* %pstype, %struct.gs_memory_struct_type_s** %pstype.addr, align 8, !tbaa !1
  store %struct.gc_state_s* %gcst, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %0 = bitcast i32* %count to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = load i32, i32* %size.addr, align 4, !tbaa !54
  %div = udiv i32 %1, 208
  store i32 %div, i32* %count, align 4, !tbaa !54
  %2 = load i32, i32* %count, align 4, !tbaa !54
  %cmp = icmp eq i32 %2, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store %struct.gs_ptr_procs_s* null, %struct.gs_ptr_procs_s** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %3 = load %struct.gs_ptr_procs_s* (%struct.gs_memory_s*, i8*, i32, i32, %struct.enum_ptr_s*, %struct.gs_memory_struct_type_s*, %struct.gc_state_s*)*, %struct.gs_ptr_procs_s* (%struct.gs_memory_s*, i8*, i32, i32, %struct.enum_ptr_s*, %struct.gs_memory_struct_type_s*, %struct.gc_state_s*)** getelementptr inbounds (%struct.gs_memory_struct_type_s, %struct.gs_memory_struct_type_s* @st_pdf_page, i32 0, i32 4), align 8, !tbaa !212
  %4 = load %struct.gs_memory_s*, %struct.gs_memory_s** %mem.addr, align 8, !tbaa !1
  %5 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %6 = load i32, i32* %index.addr, align 4, !tbaa !54
  %7 = load i32, i32* %count, align 4, !tbaa !54
  %rem = urem i32 %6, %7
  %conv = zext i32 %rem to i64
  %mul = mul i64 %conv, 208
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %mul
  %8 = load i32, i32* %index.addr, align 4, !tbaa !54
  %9 = load i32, i32* %count, align 4, !tbaa !54
  %div1 = udiv i32 %8, %9
  %10 = load %struct.enum_ptr_s*, %struct.enum_ptr_s** %pep.addr, align 8, !tbaa !1
  %11 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %call = call %struct.gs_ptr_procs_s* %3(%struct.gs_memory_s* %4, i8* %add.ptr, i32 208, i32 %div1, %struct.enum_ptr_s* %10, %struct.gs_memory_struct_type_s* @st_pdf_page, %struct.gc_state_s* %11) #7
  store %struct.gs_ptr_procs_s* %call, %struct.gs_ptr_procs_s** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  %12 = bitcast i32* %count to i8*
  call void @llvm.lifetime.end(i64 4, i8* %12) #2
  %13 = load %struct.gs_ptr_procs_s*, %struct.gs_ptr_procs_s** %retval
  ret %struct.gs_ptr_procs_s* %13
}

; Function Attrs: nounwind uwtable
define internal void @pdf_page_elt_reloc_ptrs(i8* %vptr, i32 %size, %struct.gs_memory_struct_type_s* %pstype, %struct.gc_state_s* %gcst) #1 {
entry:
  %vptr.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  %pstype.addr = alloca %struct.gs_memory_struct_type_s*, align 8
  %gcst.addr = alloca %struct.gc_state_s*, align 8
  %count = alloca i32, align 4
  store i8* %vptr, i8** %vptr.addr, align 8, !tbaa !1
  store i32 %size, i32* %size.addr, align 4, !tbaa !54
  store %struct.gs_memory_struct_type_s* %pstype, %struct.gs_memory_struct_type_s** %pstype.addr, align 8, !tbaa !1
  store %struct.gc_state_s* %gcst, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %0 = bitcast i32* %count to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = load i32, i32* %size.addr, align 4, !tbaa !54
  %div = udiv i32 %1, 208
  store i32 %div, i32* %count, align 4, !tbaa !54
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %count, align 4, !tbaa !54
  %tobool = icmp ne i32 %2, 0
  br i1 %tobool, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load void (i8*, i32, %struct.gs_memory_struct_type_s*, %struct.gc_state_s*)*, void (i8*, i32, %struct.gs_memory_struct_type_s*, %struct.gc_state_s*)** getelementptr inbounds (%struct.gs_memory_struct_type_s, %struct.gs_memory_struct_type_s* @st_pdf_page, i32 0, i32 5), align 8, !tbaa !237
  %4 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %5 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  call void %3(i8* %4, i32 208, %struct.gs_memory_struct_type_s* @st_pdf_page, %struct.gc_state_s* %5) #7
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %6 = load i32, i32* %count, align 4, !tbaa !54
  %dec = add i32 %6, -1
  store i32 %dec, i32* %count, align 4, !tbaa !54
  %7 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %add.ptr = getelementptr inbounds i8, i8* %7, i64 208
  store i8* %add.ptr, i8** %vptr.addr, align 8, !tbaa !1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %8 = bitcast i32* %count to i8*
  call void @llvm.lifetime.end(i64 4, i8* %8) #2
  ret void
}

declare void @pdf_reset_graphics(%struct.gx_device_pdf_s*) #0

declare void @pdf_reset_text_page(%struct.pdf_text_data_s*) #0

declare i32 @pdf_remember_clip_path(%struct.gx_device_pdf_s*, %struct.gx_clip_path_s*) #0

; Function Attrs: nounwind uwtable
define internal i32 @pdf_close_temp_file(%struct.gx_device_pdf_s* %pdev, %struct.pdf_temp_file_s* %ptf, i32 %code) #1 {
entry:
  %pdev.addr = alloca %struct.gx_device_pdf_s*, align 8
  %ptf.addr = alloca %struct.pdf_temp_file_s*, align 8
  %code.addr = alloca i32, align 4
  %err = alloca i32, align 4
  %file = alloca %struct._IO_FILE*, align 8
  store %struct.gx_device_pdf_s* %pdev, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  store %struct.pdf_temp_file_s* %ptf, %struct.pdf_temp_file_s** %ptf.addr, align 8, !tbaa !1
  store i32 %code, i32* %code.addr, align 4, !tbaa !54
  %0 = bitcast i32* %err to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  store i32 0, i32* %err, align 4, !tbaa !54
  %1 = bitcast %struct._IO_FILE** %file to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #2
  %2 = load %struct.pdf_temp_file_s*, %struct.pdf_temp_file_s** %ptf.addr, align 8, !tbaa !1
  %file1 = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %2, i32 0, i32 1
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %file1, align 8, !tbaa !242
  store %struct._IO_FILE* %3, %struct._IO_FILE** %file, align 8, !tbaa !1
  %4 = load %struct.pdf_temp_file_s*, %struct.pdf_temp_file_s** %ptf.addr, align 8, !tbaa !1
  %strm = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %4, i32 0, i32 2
  %5 = load %struct.stream_s*, %struct.stream_s** %strm, align 8, !tbaa !243
  %tobool = icmp ne %struct.stream_s* %5, null
  br i1 %tobool, label %if.then, label %if.end.19

if.then:                                          ; preds = %entry
  %6 = load %struct.pdf_temp_file_s*, %struct.pdf_temp_file_s** %ptf.addr, align 8, !tbaa !1
  %strm2 = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %6, i32 0, i32 2
  %7 = load %struct.stream_s*, %struct.stream_s** %strm2, align 8, !tbaa !243
  %modes = getelementptr inbounds %struct.stream_s, %struct.stream_s* %7, i32 0, i32 11
  %8 = load i8, i8* %modes, align 1, !tbaa !252
  %conv = zext i8 %8 to i32
  %cmp = icmp ne i32 %conv, 0
  br i1 %cmp, label %if.then.4, label %if.else

if.then.4:                                        ; preds = %if.then
  %9 = load %struct.pdf_temp_file_s*, %struct.pdf_temp_file_s** %ptf.addr, align 8, !tbaa !1
  %strm5 = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %9, i32 0, i32 2
  %10 = load %struct.stream_s*, %struct.stream_s** %strm5, align 8, !tbaa !243
  %procs = getelementptr inbounds %struct.stream_s, %struct.stream_s* %10, i32 0, i32 14
  %flush = getelementptr inbounds %struct.stream_procs, %struct.stream_procs* %procs, i32 0, i32 3
  %11 = load i32 (%struct.stream_s*)*, i32 (%struct.stream_s*)** %flush, align 8, !tbaa !140
  %12 = load %struct.pdf_temp_file_s*, %struct.pdf_temp_file_s** %ptf.addr, align 8, !tbaa !1
  %strm6 = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %12, i32 0, i32 2
  %13 = load %struct.stream_s*, %struct.stream_s** %strm6, align 8, !tbaa !243
  %call = call i32 %11(%struct.stream_s* %13) #7
  %14 = load %struct.pdf_temp_file_s*, %struct.pdf_temp_file_s** %ptf.addr, align 8, !tbaa !1
  %strm7 = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %14, i32 0, i32 2
  %15 = load %struct.stream_s*, %struct.stream_s** %strm7, align 8, !tbaa !243
  %file8 = getelementptr inbounds %struct.stream_s, %struct.stream_s* %15, i32 0, i32 26
  store %struct._IO_FILE* null, %struct._IO_FILE** %file8, align 8, !tbaa !253
  br label %if.end

if.else:                                          ; preds = %if.then
  store %struct._IO_FILE* null, %struct._IO_FILE** %file, align 8, !tbaa !1
  %16 = load %struct.pdf_temp_file_s*, %struct.pdf_temp_file_s** %ptf.addr, align 8, !tbaa !1
  %file9 = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %16, i32 0, i32 1
  store %struct._IO_FILE* null, %struct._IO_FILE** %file9, align 8, !tbaa !242
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.4
  %17 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %v_memory = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %17, i32 0, i32 43
  %18 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory, align 8, !tbaa !52
  %procs10 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %18, i32 0, i32 1
  %free_object = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs10, i32 0, i32 2
  %19 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %free_object, align 8, !tbaa !138
  %20 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %v_memory11 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %20, i32 0, i32 43
  %21 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory11, align 8, !tbaa !52
  %22 = load %struct.pdf_temp_file_s*, %struct.pdf_temp_file_s** %ptf.addr, align 8, !tbaa !1
  %strm_buf = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %22, i32 0, i32 3
  %23 = load i8*, i8** %strm_buf, align 8, !tbaa !244
  call void %19(%struct.gs_memory_s* %21, i8* %23, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.47, i32 0, i32 0)) #7
  %24 = load %struct.pdf_temp_file_s*, %struct.pdf_temp_file_s** %ptf.addr, align 8, !tbaa !1
  %strm_buf12 = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %24, i32 0, i32 3
  store i8* null, i8** %strm_buf12, align 8, !tbaa !244
  %25 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %v_memory13 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %25, i32 0, i32 43
  %26 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory13, align 8, !tbaa !52
  %procs14 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %26, i32 0, i32 1
  %free_object15 = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs14, i32 0, i32 2
  %27 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %free_object15, align 8, !tbaa !138
  %28 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %v_memory16 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %28, i32 0, i32 43
  %29 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory16, align 8, !tbaa !52
  %30 = load %struct.pdf_temp_file_s*, %struct.pdf_temp_file_s** %ptf.addr, align 8, !tbaa !1
  %strm17 = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %30, i32 0, i32 2
  %31 = load %struct.stream_s*, %struct.stream_s** %strm17, align 8, !tbaa !243
  %32 = bitcast %struct.stream_s* %31 to i8*
  call void %27(%struct.gs_memory_s* %29, i8* %32, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.48, i32 0, i32 0)) #7
  %33 = load %struct.pdf_temp_file_s*, %struct.pdf_temp_file_s** %ptf.addr, align 8, !tbaa !1
  %strm18 = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %33, i32 0, i32 2
  store %struct.stream_s* null, %struct.stream_s** %strm18, align 8, !tbaa !243
  br label %if.end.19

if.end.19:                                        ; preds = %if.end, %entry
  %34 = load %struct._IO_FILE*, %struct._IO_FILE** %file, align 8, !tbaa !1
  %tobool20 = icmp ne %struct._IO_FILE* %34, null
  br i1 %tobool20, label %if.then.21, label %if.end.26

if.then.21:                                       ; preds = %if.end.19
  %35 = load %struct._IO_FILE*, %struct._IO_FILE** %file, align 8, !tbaa !1
  %call22 = call i32 @ferror(%struct._IO_FILE* %35) #8
  %36 = load %struct._IO_FILE*, %struct._IO_FILE** %file, align 8, !tbaa !1
  %call23 = call i32 @fclose(%struct._IO_FILE* %36) #7
  %or = or i32 %call22, %call23
  store i32 %or, i32* %err, align 4, !tbaa !54
  %37 = load %struct.pdf_temp_file_s*, %struct.pdf_temp_file_s** %ptf.addr, align 8, !tbaa !1
  %file_name = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %37, i32 0, i32 0
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %file_name, i32 0, i32 0
  %call24 = call i32 @unlink(i8* %arraydecay) #8
  %38 = load %struct.pdf_temp_file_s*, %struct.pdf_temp_file_s** %ptf.addr, align 8, !tbaa !1
  %file25 = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %38, i32 0, i32 1
  store %struct._IO_FILE* null, %struct._IO_FILE** %file25, align 8, !tbaa !242
  br label %if.end.26

if.end.26:                                        ; preds = %if.then.21, %if.end.19
  %39 = load %struct.pdf_temp_file_s*, %struct.pdf_temp_file_s** %ptf.addr, align 8, !tbaa !1
  %save_strm = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %39, i32 0, i32 4
  store %struct.stream_s* null, %struct.stream_s** %save_strm, align 8, !tbaa !254
  %40 = load i32, i32* %code.addr, align 4, !tbaa !54
  %cmp27 = icmp slt i32 %40, 0
  br i1 %cmp27, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end.26
  %41 = load i32, i32* %code.addr, align 4, !tbaa !54
  br label %cond.end.33

cond.false:                                       ; preds = %if.end.26
  %42 = load i32, i32* %err, align 4, !tbaa !54
  %cmp29 = icmp ne i32 %42, 0
  br i1 %cmp29, label %cond.true.31, label %cond.false.32

cond.true.31:                                     ; preds = %cond.false
  br label %cond.end

cond.false.32:                                    ; preds = %cond.false
  %43 = load i32, i32* %code.addr, align 4, !tbaa !54
  br label %cond.end

cond.end:                                         ; preds = %cond.false.32, %cond.true.31
  %cond = phi i32 [ -12, %cond.true.31 ], [ %43, %cond.false.32 ]
  br label %cond.end.33

cond.end.33:                                      ; preds = %cond.end, %cond.true
  %cond34 = phi i32 [ %41, %cond.true ], [ %cond, %cond.end ]
  %44 = bitcast %struct._IO_FILE** %file to i8*
  call void @llvm.lifetime.end(i64 8, i8* %44) #2
  %45 = bitcast i32* %err to i8*
  call void @llvm.lifetime.end(i64 4, i8* %45) #2
  ret i32 %cond34
}

; Function Attrs: nounwind
declare i32 @ferror(%struct._IO_FILE*) #4

declare i32 @fclose(%struct._IO_FILE*) #0

; Function Attrs: nounwind
declare i32 @unlink(i8*) #4

; Function Attrs: nounwind uwtable
define internal i32 @pdf_close_page(%struct.gx_device_pdf_s* %pdev, i32 %num_copies) #1 {
entry:
  %retval = alloca i32, align 4
  %pdev.addr = alloca %struct.gx_device_pdf_s*, align 8
  %num_copies.addr = alloca i32, align 4
  %page_num = alloca i32, align 4
  %page = alloca %struct.pdf_page_s*, align 8
  %code = alloca i32, align 4
  %i = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %clear_resource_use = alloca i32, align 4
  %i46 = alloca i32, align 4
  store %struct.gx_device_pdf_s* %pdev, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  store i32 %num_copies, i32* %num_copies.addr, align 4, !tbaa !54
  %0 = bitcast i32* %page_num to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = bitcast %struct.pdf_page_s** %page to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #2
  %2 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #2
  %3 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #2
  %4 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %call = call i32 @pdfwrite_pdf_open_document(%struct.gx_device_pdf_s* %4) #7
  store i32 %call, i32* %code, align 4, !tbaa !54
  %5 = load i32, i32* %code, align 4, !tbaa !54
  %cmp = icmp slt i32 %5, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %6 = load i32, i32* %code, align 4, !tbaa !54
  store i32 %6, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.110

if.end:                                           ; preds = %entry
  %7 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ForOPDFRead = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %7, i32 0, i32 99
  %8 = load i32, i32* %ForOPDFRead, align 4, !tbaa !121
  %tobool = icmp ne i32 %8, 0
  br i1 %tobool, label %land.lhs.true, label %if.end.7

land.lhs.true:                                    ; preds = %if.end
  %9 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %context = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %9, i32 0, i32 156
  %10 = load i32, i32* %context, align 4, !tbaa !255
  %cmp1 = icmp eq i32 %10, 0
  br i1 %cmp1, label %if.then.2, label %if.end.7

if.then.2:                                        ; preds = %land.lhs.true
  %11 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %call3 = call i32 @pdf_open_contents(%struct.gx_device_pdf_s* %11, i32 1) #7
  store i32 %call3, i32* %code, align 4, !tbaa !54
  %12 = load i32, i32* %code, align 4, !tbaa !54
  %cmp4 = icmp slt i32 %12, 0
  br i1 %cmp4, label %if.then.5, label %if.end.6

if.then.5:                                        ; preds = %if.then.2
  %13 = load i32, i32* %code, align 4, !tbaa !54
  store i32 %13, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.110

if.end.6:                                         ; preds = %if.then.2
  br label %if.end.7

if.end.7:                                         ; preds = %if.end.6, %land.lhs.true, %if.end
  %14 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %call8 = call i32 @pdf_close_contents(%struct.gx_device_pdf_s* %14, i32 1) #7
  %15 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %DoNumCopies = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %15, i32 0, i32 236
  %16 = load i32, i32* %DoNumCopies, align 4, !tbaa !256
  %tobool9 = icmp ne i32 %16, 0
  br i1 %tobool9, label %if.end.11, label %if.then.10

if.then.10:                                       ; preds = %if.end.7
  store i32 1, i32* %num_copies.addr, align 4, !tbaa !54
  br label %if.end.11

if.end.11:                                        ; preds = %if.then.10, %if.end.7
  store i32 0, i32* %i, align 4, !tbaa !54
  br label %for.cond

for.cond:                                         ; preds = %for.inc.104, %if.end.11
  %17 = load i32, i32* %i, align 4, !tbaa !54
  %18 = load i32, i32* %num_copies.addr, align 4, !tbaa !54
  %cmp12 = icmp slt i32 %17, %18
  br i1 %cmp12, label %for.body, label %for.end.106

for.body:                                         ; preds = %for.cond
  %19 = bitcast i32* %clear_resource_use to i8*
  call void @llvm.lifetime.start(i64 4, i8* %19) #2
  %20 = load i32, i32* %i, align 4, !tbaa !54
  %21 = load i32, i32* %num_copies.addr, align 4, !tbaa !54
  %sub = sub nsw i32 %21, 1
  %cmp13 = icmp slt i32 %20, %sub
  %cond = select i1 %cmp13, i32 0, i32 1
  store i32 %cond, i32* %clear_resource_use, align 4, !tbaa !54
  %22 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %next_page = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %22, i32 0, i32 153
  %23 = load i32, i32* %next_page, align 4, !tbaa !72
  %inc = add nsw i32 %23, 1
  store i32 %inc, i32* %next_page, align 4, !tbaa !72
  store i32 %inc, i32* %page_num, align 4, !tbaa !54
  %24 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %25 = load i32, i32* %page_num, align 4, !tbaa !54
  %call14 = call i64 @pdf_page_id(%struct.gx_device_pdf_s* %24, i32 %25) #7
  %26 = load i32, i32* %page_num, align 4, !tbaa !54
  %sub15 = sub nsw i32 %26, 1
  %idxprom = sext i32 %sub15 to i64
  %27 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %pages = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %27, i32 0, i32 162
  %28 = load %struct.pdf_page_s*, %struct.pdf_page_s** %pages, align 8, !tbaa !77
  %arrayidx = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %28, i64 %idxprom
  store %struct.pdf_page_s* %arrayidx, %struct.pdf_page_s** %page, align 8, !tbaa !1
  %29 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %MediaSize = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %29, i32 0, i32 19
  %arrayidx16 = getelementptr inbounds [2 x float], [2 x float]* %MediaSize, i32 0, i64 0
  %30 = load float, float* %arrayidx16, align 4, !tbaa !257
  %conv = fpext float %30 to double
  %31 = load %struct.pdf_page_s*, %struct.pdf_page_s** %page, align 8, !tbaa !1
  %MediaBox = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %31, i32 0, i32 1
  %x = getelementptr inbounds %struct.gs_point_s, %struct.gs_point_s* %MediaBox, i32 0, i32 0
  store double %conv, double* %x, align 8, !tbaa !154
  %32 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %MediaSize17 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %32, i32 0, i32 19
  %arrayidx18 = getelementptr inbounds [2 x float], [2 x float]* %MediaSize17, i32 0, i64 1
  %33 = load float, float* %arrayidx18, align 4, !tbaa !257
  %conv19 = fpext float %33 to double
  %34 = load %struct.pdf_page_s*, %struct.pdf_page_s** %page, align 8, !tbaa !1
  %MediaBox20 = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %34, i32 0, i32 1
  %y = getelementptr inbounds %struct.gs_point_s, %struct.gs_point_s* %MediaBox20, i32 0, i32 1
  store double %conv19, double* %y, align 8, !tbaa !155
  %35 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %contents_id = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %35, i32 0, i32 155
  %36 = load i64, i64* %contents_id, align 8, !tbaa !114
  %37 = load %struct.pdf_page_s*, %struct.pdf_page_s** %page, align 8, !tbaa !1
  %contents_id21 = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %37, i32 0, i32 3
  store i64 %36, i64* %contents_id21, align 8, !tbaa !258
  %38 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %NumCopies_set = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %38, i32 0, i32 29
  %39 = load i32, i32* %NumCopies_set, align 4, !tbaa !259
  %40 = load %struct.pdf_page_s*, %struct.pdf_page_s** %page, align 8, !tbaa !1
  %NumCopies_set22 = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %40, i32 0, i32 9
  store i32 %39, i32* %NumCopies_set22, align 4, !tbaa !260
  %41 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %NumCopies = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %41, i32 0, i32 28
  %42 = load i32, i32* %NumCopies, align 4, !tbaa !261
  %43 = load %struct.pdf_page_s*, %struct.pdf_page_s** %page, align 8, !tbaa !1
  %NumCopies23 = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %43, i32 0, i32 10
  store i32 %42, i32* %NumCopies23, align 4, !tbaa !262
  %44 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %45 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %contents_id24 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %45, i32 0, i32 155
  %46 = load i64, i64* %contents_id24, align 8, !tbaa !114
  %47 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %next_page25 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %47, i32 0, i32 153
  %48 = load i32, i32* %next_page25, align 4, !tbaa !72
  %call26 = call i32 @pdf_record_usage(%struct.gx_device_pdf_s* %44, i64 %46, i32 %48) #7
  %49 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %50 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %contents_length_id = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %50, i32 0, i32 157
  %51 = load i64, i64* %contents_length_id, align 8, !tbaa !263
  %52 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %next_page27 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %52, i32 0, i32 153
  %53 = load i32, i32* %next_page27, align 4, !tbaa !72
  %call28 = call i32 @pdf_record_usage(%struct.gx_device_pdf_s* %49, i64 %51, i32 %53) #7
  %54 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %55 = load %struct.pdf_page_s*, %struct.pdf_page_s** %page, align 8, !tbaa !1
  %Page = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %55, i32 0, i32 0
  %56 = load %struct.cos_dict_s*, %struct.cos_dict_s** %Page, align 8, !tbaa !125
  %id = getelementptr inbounds %struct.cos_dict_s, %struct.cos_dict_s* %56, i32 0, i32 1
  %57 = load i64, i64* %id, align 8, !tbaa !109
  %58 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %next_page29 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %58, i32 0, i32 153
  %59 = load i32, i32* %next_page29, align 4, !tbaa !72
  %call30 = call i32 @pdf_record_usage(%struct.gx_device_pdf_s* %54, i64 %57, i32 %59) #7
  %60 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %61 = load %struct.pdf_page_s*, %struct.pdf_page_s** %page, align 8, !tbaa !1
  %62 = load i32, i32* %clear_resource_use, align 4, !tbaa !54
  %call31 = call i32 @pdf_store_page_resources(%struct.gx_device_pdf_s* %60, %struct.pdf_page_s* %61, i32 %62) #7
  store i32 %call31, i32* %code, align 4, !tbaa !54
  %63 = load i32, i32* %code, align 4, !tbaa !54
  %cmp32 = icmp slt i32 %63, 0
  br i1 %cmp32, label %if.then.34, label %if.end.35

if.then.34:                                       ; preds = %for.body
  %64 = load i32, i32* %code, align 4, !tbaa !54
  store i32 %64, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.35:                                        ; preds = %for.body
  %65 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %call36 = call i32 @pdf_write_resource_objects(%struct.gx_device_pdf_s* %65, i32 13) #7
  store i32 %call36, i32* %code, align 4, !tbaa !54
  %66 = load i32, i32* %code, align 4, !tbaa !54
  %cmp37 = icmp slt i32 %66, 0
  br i1 %cmp37, label %if.then.39, label %if.end.40

if.then.39:                                       ; preds = %if.end.35
  %67 = load i32, i32* %code, align 4, !tbaa !54
  store i32 %67, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.40:                                        ; preds = %if.end.35
  %68 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  call void @pdf_close_text_page(%struct.gx_device_pdf_s* %68) #7
  %69 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %params = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %69, i32 0, i32 73
  %AutoRotatePages = getelementptr inbounds %struct.psdf_distiller_params_s, %struct.psdf_distiller_params_s* %params, i32 0, i32 1
  %70 = load i32, i32* %AutoRotatePages, align 4, !tbaa !264
  %cmp41 = icmp eq i32 %70, 2
  br i1 %cmp41, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end.40
  %71 = load %struct.pdf_page_s*, %struct.pdf_page_s** %page, align 8, !tbaa !1
  %text_rotation = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %71, i32 0, i32 7
  %call43 = call i32 @pdf_dominant_rotation(%struct.pdf_text_rotation_s* %text_rotation) #7
  br label %cond.end

cond.false:                                       ; preds = %if.end.40
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond44 = phi i32 [ %call43, %cond.true ], [ -1, %cond.false ]
  %72 = load %struct.pdf_page_s*, %struct.pdf_page_s** %page, align 8, !tbaa !1
  %text_rotation45 = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %72, i32 0, i32 7
  %Rotate = getelementptr inbounds %struct.pdf_text_rotation_s, %struct.pdf_text_rotation_s* %text_rotation45, i32 0, i32 1
  store i32 %cond44, i32* %Rotate, align 4, !tbaa !265
  %73 = bitcast i32* %i46 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %73) #2
  store i32 0, i32* %i46, align 4, !tbaa !54
  br label %for.cond.47

for.cond.47:                                      ; preds = %for.inc, %cond.end
  %74 = load i32, i32* %i46, align 4, !tbaa !54
  %conv48 = sext i32 %74 to i64
  %cmp49 = icmp ult i64 %conv48, 5
  br i1 %cmp49, label %for.body.51, label %for.end

for.body.51:                                      ; preds = %for.cond.47
  %75 = load i32, i32* %i46, align 4, !tbaa !54
  %idxprom52 = sext i32 %75 to i64
  %76 = load %struct.pdf_page_s*, %struct.pdf_page_s** %page, align 8, !tbaa !1
  %text_rotation53 = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %76, i32 0, i32 7
  %counts = getelementptr inbounds %struct.pdf_text_rotation_s, %struct.pdf_text_rotation_s* %text_rotation53, i32 0, i32 0
  %arrayidx54 = getelementptr inbounds [5 x i64], [5 x i64]* %counts, i32 0, i64 %idxprom52
  %77 = load i64, i64* %arrayidx54, align 8, !tbaa !107
  %78 = load i32, i32* %i46, align 4, !tbaa !54
  %idxprom55 = sext i32 %78 to i64
  %79 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %text_rotation56 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %79, i32 0, i32 161
  %counts57 = getelementptr inbounds %struct.pdf_text_rotation_s, %struct.pdf_text_rotation_s* %text_rotation56, i32 0, i32 0
  %arrayidx58 = getelementptr inbounds [5 x i64], [5 x i64]* %counts57, i32 0, i64 %idxprom55
  %80 = load i64, i64* %arrayidx58, align 8, !tbaa !107
  %add = add nsw i64 %80, %77
  store i64 %add, i64* %arrayidx58, align 8, !tbaa !107
  br label %for.inc

for.inc:                                          ; preds = %for.body.51
  %81 = load i32, i32* %i46, align 4, !tbaa !54
  %inc59 = add nsw i32 %81, 1
  store i32 %inc59, i32* %i46, align 4, !tbaa !54
  br label %for.cond.47

for.end:                                          ; preds = %for.cond.47
  %82 = bitcast i32* %i46 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %82) #2
  %83 = load %struct.pdf_page_s*, %struct.pdf_page_s** %page, align 8, !tbaa !1
  %dsc_info = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %83, i32 0, i32 8
  %84 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %page_dsc_info = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %84, i32 0, i32 131
  %85 = bitcast %struct.pdf_page_dsc_info_s* %dsc_info to i8*
  %86 = bitcast %struct.pdf_page_dsc_info_s* %page_dsc_info to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %85, i8* %86, i64 40, i32 8, i1 false), !tbaa.struct !247
  %87 = load %struct.pdf_page_s*, %struct.pdf_page_s** %page, align 8, !tbaa !1
  %dsc_info60 = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %87, i32 0, i32 8
  %orientation = getelementptr inbounds %struct.pdf_page_dsc_info_s, %struct.pdf_page_dsc_info_s* %dsc_info60, i32 0, i32 0
  %88 = load i32, i32* %orientation, align 4, !tbaa !266
  %cmp61 = icmp slt i32 %88, 0
  br i1 %cmp61, label %if.then.63, label %if.end.67

if.then.63:                                       ; preds = %for.end
  %89 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %doc_dsc_info = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %89, i32 0, i32 130
  %orientation64 = getelementptr inbounds %struct.pdf_page_dsc_info_s, %struct.pdf_page_dsc_info_s* %doc_dsc_info, i32 0, i32 0
  %90 = load i32, i32* %orientation64, align 4, !tbaa !127
  %91 = load %struct.pdf_page_s*, %struct.pdf_page_s** %page, align 8, !tbaa !1
  %dsc_info65 = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %91, i32 0, i32 8
  %orientation66 = getelementptr inbounds %struct.pdf_page_dsc_info_s, %struct.pdf_page_dsc_info_s* %dsc_info65, i32 0, i32 0
  store i32 %90, i32* %orientation66, align 4, !tbaa !266
  br label %if.end.67

if.end.67:                                        ; preds = %if.then.63, %for.end
  %92 = load %struct.pdf_page_s*, %struct.pdf_page_s** %page, align 8, !tbaa !1
  %dsc_info68 = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %92, i32 0, i32 8
  %viewing_orientation = getelementptr inbounds %struct.pdf_page_dsc_info_s, %struct.pdf_page_dsc_info_s* %dsc_info68, i32 0, i32 1
  %93 = load i32, i32* %viewing_orientation, align 4, !tbaa !267
  %cmp69 = icmp slt i32 %93, 0
  br i1 %cmp69, label %if.then.71, label %if.end.76

if.then.71:                                       ; preds = %if.end.67
  %94 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %doc_dsc_info72 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %94, i32 0, i32 130
  %viewing_orientation73 = getelementptr inbounds %struct.pdf_page_dsc_info_s, %struct.pdf_page_dsc_info_s* %doc_dsc_info72, i32 0, i32 1
  %95 = load i32, i32* %viewing_orientation73, align 4, !tbaa !128
  %96 = load %struct.pdf_page_s*, %struct.pdf_page_s** %page, align 8, !tbaa !1
  %dsc_info74 = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %96, i32 0, i32 8
  %viewing_orientation75 = getelementptr inbounds %struct.pdf_page_dsc_info_s, %struct.pdf_page_dsc_info_s* %dsc_info74, i32 0, i32 1
  store i32 %95, i32* %viewing_orientation75, align 4, !tbaa !267
  br label %if.end.76

if.end.76:                                        ; preds = %if.then.71, %if.end.67
  %97 = load %struct.pdf_page_s*, %struct.pdf_page_s** %page, align 8, !tbaa !1
  %dsc_info77 = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %97, i32 0, i32 8
  %bounding_box = getelementptr inbounds %struct.pdf_page_dsc_info_s, %struct.pdf_page_dsc_info_s* %dsc_info77, i32 0, i32 2
  %p = getelementptr inbounds %struct.gs_rect_s, %struct.gs_rect_s* %bounding_box, i32 0, i32 0
  %x78 = getelementptr inbounds %struct.gs_point_s, %struct.gs_point_s* %p, i32 0, i32 0
  %98 = load double, double* %x78, align 8, !tbaa !268
  %99 = load %struct.pdf_page_s*, %struct.pdf_page_s** %page, align 8, !tbaa !1
  %dsc_info79 = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %99, i32 0, i32 8
  %bounding_box80 = getelementptr inbounds %struct.pdf_page_dsc_info_s, %struct.pdf_page_dsc_info_s* %dsc_info79, i32 0, i32 2
  %q = getelementptr inbounds %struct.gs_rect_s, %struct.gs_rect_s* %bounding_box80, i32 0, i32 1
  %x81 = getelementptr inbounds %struct.gs_point_s, %struct.gs_point_s* %q, i32 0, i32 0
  %100 = load double, double* %x81, align 8, !tbaa !269
  %cmp82 = fcmp oge double %98, %100
  br i1 %cmp82, label %if.then.94, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end.76
  %101 = load %struct.pdf_page_s*, %struct.pdf_page_s** %page, align 8, !tbaa !1
  %dsc_info84 = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %101, i32 0, i32 8
  %bounding_box85 = getelementptr inbounds %struct.pdf_page_dsc_info_s, %struct.pdf_page_dsc_info_s* %dsc_info84, i32 0, i32 2
  %p86 = getelementptr inbounds %struct.gs_rect_s, %struct.gs_rect_s* %bounding_box85, i32 0, i32 0
  %y87 = getelementptr inbounds %struct.gs_point_s, %struct.gs_point_s* %p86, i32 0, i32 1
  %102 = load double, double* %y87, align 8, !tbaa !270
  %103 = load %struct.pdf_page_s*, %struct.pdf_page_s** %page, align 8, !tbaa !1
  %dsc_info88 = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %103, i32 0, i32 8
  %bounding_box89 = getelementptr inbounds %struct.pdf_page_dsc_info_s, %struct.pdf_page_dsc_info_s* %dsc_info88, i32 0, i32 2
  %q90 = getelementptr inbounds %struct.gs_rect_s, %struct.gs_rect_s* %bounding_box89, i32 0, i32 1
  %y91 = getelementptr inbounds %struct.gs_point_s, %struct.gs_point_s* %q90, i32 0, i32 1
  %104 = load double, double* %y91, align 8, !tbaa !271
  %cmp92 = fcmp oge double %102, %104
  br i1 %cmp92, label %if.then.94, label %if.end.99

if.then.94:                                       ; preds = %lor.lhs.false, %if.end.76
  %105 = load %struct.pdf_page_s*, %struct.pdf_page_s** %page, align 8, !tbaa !1
  %dsc_info95 = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %105, i32 0, i32 8
  %bounding_box96 = getelementptr inbounds %struct.pdf_page_dsc_info_s, %struct.pdf_page_dsc_info_s* %dsc_info95, i32 0, i32 2
  %106 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %doc_dsc_info97 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %106, i32 0, i32 130
  %bounding_box98 = getelementptr inbounds %struct.pdf_page_dsc_info_s, %struct.pdf_page_dsc_info_s* %doc_dsc_info97, i32 0, i32 2
  %107 = bitcast %struct.gs_rect_s* %bounding_box96 to i8*
  %108 = bitcast %struct.gs_rect_s* %bounding_box98 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %107, i8* %108, i64 32, i32 8, i1 false), !tbaa.struct !272
  br label %if.end.99

if.end.99:                                        ; preds = %if.then.94, %lor.lhs.false
  %109 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %call100 = call i32 @pdf_ferror(%struct.gx_device_pdf_s* %109) #7
  %tobool101 = icmp ne i32 %call100, 0
  br i1 %tobool101, label %if.then.102, label %if.end.103

if.then.102:                                      ; preds = %if.end.99
  store i32 -12, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.103:                                       ; preds = %if.end.99
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.103, %if.then.102, %if.then.39, %if.then.34
  %110 = bitcast i32* %clear_resource_use to i8*
  call void @llvm.lifetime.end(i64 4, i8* %110) #2
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.110 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %for.inc.104

for.inc.104:                                      ; preds = %cleanup.cont
  %111 = load i32, i32* %i, align 4, !tbaa !54
  %inc105 = add nsw i32 %111, 1
  store i32 %inc105, i32* %i, align 4, !tbaa !54
  br label %for.cond

for.end.106:                                      ; preds = %for.cond
  %112 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  call void @pdf_reset_page(%struct.gx_device_pdf_s* %112) #7
  %113 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %call107 = call i32 @pdf_ferror(%struct.gx_device_pdf_s* %113) #7
  %tobool108 = icmp ne i32 %call107, 0
  %cond109 = select i1 %tobool108, i32 -12, i32 0
  store i32 %cond109, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.110

cleanup.110:                                      ; preds = %for.end.106, %cleanup, %if.then.5, %if.then
  %114 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %114) #2
  %115 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %115) #2
  %116 = bitcast %struct.pdf_page_s** %page to i8*
  call void @llvm.lifetime.end(i64 8, i8* %116) #2
  %117 = bitcast i32* %page_num to i8*
  call void @llvm.lifetime.end(i64 4, i8* %117) #2
  %118 = load i32, i32* %retval
  ret i32 %118
}

; Function Attrs: nounwind uwtable
define internal i32 @pdf_ferror(%struct.gx_device_pdf_s* %pdev) #1 {
entry:
  %pdev.addr = alloca %struct.gx_device_pdf_s*, align 8
  store %struct.gx_device_pdf_s* %pdev, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %0 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %file = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %0, i32 0, i32 46
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %file, align 8, !tbaa !273
  %call = call i32 @fflush(%struct._IO_FILE* %1) #7
  %2 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %xref = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %2, i32 0, i32 144
  %file1 = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %xref, i32 0, i32 1
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %file1, align 8, !tbaa !106
  %call2 = call i32 @fflush(%struct._IO_FILE* %3) #7
  %4 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %strm = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %4, i32 0, i32 47
  %5 = load %struct.stream_s*, %struct.stream_s** %strm, align 8, !tbaa !56
  %procs = getelementptr inbounds %struct.stream_s, %struct.stream_s* %5, i32 0, i32 14
  %flush = getelementptr inbounds %struct.stream_procs, %struct.stream_procs* %procs, i32 0, i32 3
  %6 = load i32 (%struct.stream_s*)*, i32 (%struct.stream_s*)** %flush, align 8, !tbaa !140
  %7 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %strm3 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %7, i32 0, i32 47
  %8 = load %struct.stream_s*, %struct.stream_s** %strm3, align 8, !tbaa !56
  %call4 = call i32 %6(%struct.stream_s* %8) #7
  %9 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %asides = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %9, i32 0, i32 145
  %strm5 = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %asides, i32 0, i32 2
  %10 = load %struct.stream_s*, %struct.stream_s** %strm5, align 8, !tbaa !139
  %procs6 = getelementptr inbounds %struct.stream_s, %struct.stream_s* %10, i32 0, i32 14
  %flush7 = getelementptr inbounds %struct.stream_procs, %struct.stream_procs* %procs6, i32 0, i32 3
  %11 = load i32 (%struct.stream_s*)*, i32 (%struct.stream_s*)** %flush7, align 8, !tbaa !140
  %12 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %asides8 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %12, i32 0, i32 145
  %strm9 = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %asides8, i32 0, i32 2
  %13 = load %struct.stream_s*, %struct.stream_s** %strm9, align 8, !tbaa !139
  %call10 = call i32 %11(%struct.stream_s* %13) #7
  %14 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %streams = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %14, i32 0, i32 146
  %strm11 = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %streams, i32 0, i32 2
  %15 = load %struct.stream_s*, %struct.stream_s** %strm11, align 8, !tbaa !216
  %procs12 = getelementptr inbounds %struct.stream_s, %struct.stream_s* %15, i32 0, i32 14
  %flush13 = getelementptr inbounds %struct.stream_procs, %struct.stream_procs* %procs12, i32 0, i32 3
  %16 = load i32 (%struct.stream_s*)*, i32 (%struct.stream_s*)** %flush13, align 8, !tbaa !140
  %17 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %streams14 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %17, i32 0, i32 146
  %strm15 = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %streams14, i32 0, i32 2
  %18 = load %struct.stream_s*, %struct.stream_s** %strm15, align 8, !tbaa !216
  %call16 = call i32 %16(%struct.stream_s* %18) #7
  %19 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %pictures = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %19, i32 0, i32 147
  %strm17 = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %pictures, i32 0, i32 2
  %20 = load %struct.stream_s*, %struct.stream_s** %strm17, align 8, !tbaa !218
  %procs18 = getelementptr inbounds %struct.stream_s, %struct.stream_s* %20, i32 0, i32 14
  %flush19 = getelementptr inbounds %struct.stream_procs, %struct.stream_procs* %procs18, i32 0, i32 3
  %21 = load i32 (%struct.stream_s*)*, i32 (%struct.stream_s*)** %flush19, align 8, !tbaa !140
  %22 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %pictures20 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %22, i32 0, i32 147
  %strm21 = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %pictures20, i32 0, i32 2
  %23 = load %struct.stream_s*, %struct.stream_s** %strm21, align 8, !tbaa !218
  %call22 = call i32 %21(%struct.stream_s* %23) #7
  %24 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %file23 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %24, i32 0, i32 46
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** %file23, align 8, !tbaa !273
  %call24 = call i32 @ferror(%struct._IO_FILE* %25) #8
  %tobool = icmp ne i32 %call24, 0
  br i1 %tobool, label %lor.end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %26 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %xref25 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %26, i32 0, i32 144
  %file26 = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %xref25, i32 0, i32 1
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** %file26, align 8, !tbaa !106
  %call27 = call i32 @ferror(%struct._IO_FILE* %27) #8
  %tobool28 = icmp ne i32 %call27, 0
  br i1 %tobool28, label %lor.end, label %lor.lhs.false.29

lor.lhs.false.29:                                 ; preds = %lor.lhs.false
  %28 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %asides30 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %28, i32 0, i32 145
  %file31 = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %asides30, i32 0, i32 1
  %29 = load %struct._IO_FILE*, %struct._IO_FILE** %file31, align 8, !tbaa !144
  %call32 = call i32 @ferror(%struct._IO_FILE* %29) #8
  %tobool33 = icmp ne i32 %call32, 0
  br i1 %tobool33, label %lor.end, label %lor.lhs.false.34

lor.lhs.false.34:                                 ; preds = %lor.lhs.false.29
  %30 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %streams35 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %30, i32 0, i32 146
  %file36 = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %streams35, i32 0, i32 1
  %31 = load %struct._IO_FILE*, %struct._IO_FILE** %file36, align 8, !tbaa !274
  %call37 = call i32 @ferror(%struct._IO_FILE* %31) #8
  %tobool38 = icmp ne i32 %call37, 0
  br i1 %tobool38, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %lor.lhs.false.34
  %32 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %pictures39 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %32, i32 0, i32 147
  %file40 = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %pictures39, i32 0, i32 1
  %33 = load %struct._IO_FILE*, %struct._IO_FILE** %file40, align 8, !tbaa !275
  %call41 = call i32 @ferror(%struct._IO_FILE* %33) #8
  %tobool42 = icmp ne i32 %call41, 0
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false.34, %lor.lhs.false.29, %lor.lhs.false, %entry
  %34 = phi i1 [ true, %lor.lhs.false.34 ], [ true, %lor.lhs.false.29 ], [ true, %lor.lhs.false ], [ true, %entry ], [ %tobool42, %lor.rhs ]
  %lor.ext = zext i1 %34 to i32
  ret i32 %lor.ext
}

declare i32 @gx_finish_output_page(%struct.gx_device_s*, i32, i32) #0

declare i32 @gx_outputfile_is_separate_pages(i8*, %struct.gs_memory_s*) #0

declare i32 @pdfwrite_pdf_open_document(%struct.gx_device_pdf_s*) #0

declare i32 @pdf_open_contents(%struct.gx_device_pdf_s*, i32) #0

declare i32 @pdf_close_contents(%struct.gx_device_pdf_s*, i32) #0

declare i64 @pdf_page_id(%struct.gx_device_pdf_s*, i32) #0

declare i32 @pdf_store_page_resources(%struct.gx_device_pdf_s*, %struct.pdf_page_s*, i32) #0

declare i32 @pdf_write_resource_objects(%struct.gx_device_pdf_s*, i32) #0

declare void @pdf_close_text_page(%struct.gx_device_pdf_s*) #0

; Function Attrs: nounwind uwtable
define internal i32 @pdf_dominant_rotation(%struct.pdf_text_rotation_s* %ptr) #1 {
entry:
  %ptr.addr = alloca %struct.pdf_text_rotation_s*, align 8
  %i = alloca i32, align 4
  %imax = alloca i32, align 4
  %max_count = alloca i64, align 8
  %count = alloca i64, align 8
  store %struct.pdf_text_rotation_s* %ptr, %struct.pdf_text_rotation_s** %ptr.addr, align 8, !tbaa !1
  %0 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = bitcast i32* %imax to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #2
  store i32 -1, i32* %imax, align 4, !tbaa !54
  %2 = bitcast i64* %max_count to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #2
  store i64 0, i64* %max_count, align 8, !tbaa !107
  store i32 0, i32* %i, align 4, !tbaa !54
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %i, align 4, !tbaa !54
  %conv = sext i32 %3 to i64
  %cmp = icmp ult i64 %conv, 5
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %4 = bitcast i64* %count to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4) #2
  %5 = load i32, i32* %i, align 4, !tbaa !54
  %idxprom = sext i32 %5 to i64
  %6 = load %struct.pdf_text_rotation_s*, %struct.pdf_text_rotation_s** %ptr.addr, align 8, !tbaa !1
  %counts = getelementptr inbounds %struct.pdf_text_rotation_s, %struct.pdf_text_rotation_s* %6, i32 0, i32 0
  %arrayidx = getelementptr inbounds [5 x i64], [5 x i64]* %counts, i32 0, i64 %idxprom
  %7 = load i64, i64* %arrayidx, align 8, !tbaa !107
  store i64 %7, i64* %count, align 8, !tbaa !107
  %8 = load i64, i64* %count, align 8, !tbaa !107
  %9 = load i64, i64* %max_count, align 8, !tbaa !107
  %cmp2 = icmp sgt i64 %8, %9
  br i1 %cmp2, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %10 = load i32, i32* %i, align 4, !tbaa !54
  store i32 %10, i32* %imax, align 4, !tbaa !54
  %11 = load i64, i64* %count, align 8, !tbaa !107
  store i64 %11, i64* %max_count, align 8, !tbaa !107
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  %12 = bitcast i64* %count to i8*
  call void @llvm.lifetime.end(i64 8, i8* %12) #2
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %13 = load i32, i32* %i, align 4, !tbaa !54
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %i, align 4, !tbaa !54
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %14 = load i32, i32* %imax, align 4, !tbaa !54
  %cmp4 = icmp slt i32 %14, 0
  br i1 %cmp4, label %cond.true, label %cond.false

cond.true:                                        ; preds = %for.end
  %15 = load i32, i32* %imax, align 4, !tbaa !54
  br label %cond.end

cond.false:                                       ; preds = %for.end
  %16 = load i32, i32* %imax, align 4, !tbaa !54
  %idxprom6 = sext i32 %16 to i64
  %arrayidx7 = getelementptr inbounds [5 x i32], [5 x i32]* @pdf_dominant_rotation.angles, i32 0, i64 %idxprom6
  %17 = load i32, i32* %arrayidx7, align 4, !tbaa !54
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %15, %cond.true ], [ %17, %cond.false ]
  %18 = bitcast i64* %max_count to i8*
  call void @llvm.lifetime.end(i64 8, i8* %18) #2
  %19 = bitcast i32* %imax to i8*
  call void @llvm.lifetime.end(i64 4, i8* %19) #2
  %20 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %20) #2
  ret i32 %cond
}

declare i32 @fflush(%struct._IO_FILE*) #0

; Function Attrs: nounwind uwtable
define internal %struct.gs_ptr_procs_s* @pdf_linearisation_record_elt_enum_ptrs(%struct.gs_memory_s* %mem, i8* %vptr, i32 %size, i32 %index, %struct.enum_ptr_s* %pep, %struct.gs_memory_struct_type_s* %pstype, %struct.gc_state_s* %gcst) #1 {
entry:
  %retval = alloca %struct.gs_ptr_procs_s*, align 8
  %mem.addr = alloca %struct.gs_memory_s*, align 8
  %vptr.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  %index.addr = alloca i32, align 4
  %pep.addr = alloca %struct.enum_ptr_s*, align 8
  %pstype.addr = alloca %struct.gs_memory_struct_type_s*, align 8
  %gcst.addr = alloca %struct.gc_state_s*, align 8
  %count = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.gs_memory_s* %mem, %struct.gs_memory_s** %mem.addr, align 8, !tbaa !1
  store i8* %vptr, i8** %vptr.addr, align 8, !tbaa !1
  store i32 %size, i32* %size.addr, align 4, !tbaa !54
  store i32 %index, i32* %index.addr, align 4, !tbaa !54
  store %struct.enum_ptr_s* %pep, %struct.enum_ptr_s** %pep.addr, align 8, !tbaa !1
  store %struct.gs_memory_struct_type_s* %pstype, %struct.gs_memory_struct_type_s** %pstype.addr, align 8, !tbaa !1
  store %struct.gc_state_s* %gcst, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %0 = bitcast i32* %count to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = load i32, i32* %size.addr, align 4, !tbaa !54
  %div = udiv i32 %1, 48
  store i32 %div, i32* %count, align 4, !tbaa !54
  %2 = load i32, i32* %count, align 4, !tbaa !54
  %cmp = icmp eq i32 %2, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store %struct.gs_ptr_procs_s* null, %struct.gs_ptr_procs_s** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %3 = load %struct.gs_ptr_procs_s* (%struct.gs_memory_s*, i8*, i32, i32, %struct.enum_ptr_s*, %struct.gs_memory_struct_type_s*, %struct.gc_state_s*)*, %struct.gs_ptr_procs_s* (%struct.gs_memory_s*, i8*, i32, i32, %struct.enum_ptr_s*, %struct.gs_memory_struct_type_s*, %struct.gc_state_s*)** getelementptr inbounds (%struct.gs_memory_struct_type_s, %struct.gs_memory_struct_type_s* @st_pdf_linearisation_record, i32 0, i32 4), align 8, !tbaa !212
  %4 = load %struct.gs_memory_s*, %struct.gs_memory_s** %mem.addr, align 8, !tbaa !1
  %5 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %6 = load i32, i32* %index.addr, align 4, !tbaa !54
  %7 = load i32, i32* %count, align 4, !tbaa !54
  %rem = urem i32 %6, %7
  %conv = zext i32 %rem to i64
  %mul = mul i64 %conv, 48
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %mul
  %8 = load i32, i32* %index.addr, align 4, !tbaa !54
  %9 = load i32, i32* %count, align 4, !tbaa !54
  %div1 = udiv i32 %8, %9
  %10 = load %struct.enum_ptr_s*, %struct.enum_ptr_s** %pep.addr, align 8, !tbaa !1
  %11 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %call = call %struct.gs_ptr_procs_s* %3(%struct.gs_memory_s* %4, i8* %add.ptr, i32 48, i32 %div1, %struct.enum_ptr_s* %10, %struct.gs_memory_struct_type_s* @st_pdf_linearisation_record, %struct.gc_state_s* %11) #7
  store %struct.gs_ptr_procs_s* %call, %struct.gs_ptr_procs_s** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  %12 = bitcast i32* %count to i8*
  call void @llvm.lifetime.end(i64 4, i8* %12) #2
  %13 = load %struct.gs_ptr_procs_s*, %struct.gs_ptr_procs_s** %retval
  ret %struct.gs_ptr_procs_s* %13
}

; Function Attrs: nounwind uwtable
define internal void @pdf_linearisation_record_elt_reloc_ptrs(i8* %vptr, i32 %size, %struct.gs_memory_struct_type_s* %pstype, %struct.gc_state_s* %gcst) #1 {
entry:
  %vptr.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  %pstype.addr = alloca %struct.gs_memory_struct_type_s*, align 8
  %gcst.addr = alloca %struct.gc_state_s*, align 8
  %count = alloca i32, align 4
  store i8* %vptr, i8** %vptr.addr, align 8, !tbaa !1
  store i32 %size, i32* %size.addr, align 4, !tbaa !54
  store %struct.gs_memory_struct_type_s* %pstype, %struct.gs_memory_struct_type_s** %pstype.addr, align 8, !tbaa !1
  store %struct.gc_state_s* %gcst, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  %0 = bitcast i32* %count to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = load i32, i32* %size.addr, align 4, !tbaa !54
  %div = udiv i32 %1, 48
  store i32 %div, i32* %count, align 4, !tbaa !54
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %count, align 4, !tbaa !54
  %tobool = icmp ne i32 %2, 0
  br i1 %tobool, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load void (i8*, i32, %struct.gs_memory_struct_type_s*, %struct.gc_state_s*)*, void (i8*, i32, %struct.gs_memory_struct_type_s*, %struct.gc_state_s*)** getelementptr inbounds (%struct.gs_memory_struct_type_s, %struct.gs_memory_struct_type_s* @st_pdf_linearisation_record, i32 0, i32 5), align 8, !tbaa !237
  %4 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %5 = load %struct.gc_state_s*, %struct.gc_state_s** %gcst.addr, align 8, !tbaa !1
  call void %3(i8* %4, i32 48, %struct.gs_memory_struct_type_s* @st_pdf_linearisation_record, %struct.gc_state_s* %5) #7
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %6 = load i32, i32* %count, align 4, !tbaa !54
  %dec = add i32 %6, -1
  store i32 %dec, i32* %count, align 4, !tbaa !54
  %7 = load i8*, i8** %vptr.addr, align 8, !tbaa !1
  %add.ptr = getelementptr inbounds i8, i8* %7, i64 48
  store i8* %add.ptr, i8** %vptr.addr, align 8, !tbaa !1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %8 = bitcast i32* %count to i8*
  call void @llvm.lifetime.end(i64 4, i8* %8) #2
  ret void
}

declare i32 @gx_device_delete_output_file(%struct.gx_device_s*, i8*) #0

declare i32 @pdf_open_page(%struct.gx_device_pdf_s*, i32) #0

; Function Attrs: nounwind uwtable
define internal i32 @pdf_write_page(%struct.gx_device_pdf_s* %pdev, i32 %page_num) #1 {
entry:
  %retval = alloca i32, align 4
  %pdev.addr = alloca %struct.gx_device_pdf_s*, align 8
  %page_num.addr = alloca i32, align 4
  %page_id = alloca i64, align 8
  %page = alloca %struct.pdf_page_s*, align 8
  %mediabox = alloca [4 x double], align 16
  %s = alloca %struct.stream_s*, align 8
  %v_trimbox = alloca %struct.cos_value_s*, align 8
  %v_artbox = alloca %struct.cos_value_s*, align 8
  %v_cropbox = alloca %struct.cos_value_s*, align 8
  %v_bleedbox = alloca %struct.cos_value_s*, align 8
  %trimbox = alloca [4 x double], align 16
  %bleedbox = alloca [4 x double], align 16
  %print_bleedbox = alloca i32, align 4
  %p = alloca i8*, align 8
  %buf = alloca [100 x i8], align 16
  %l = alloca i32, align 4
  %temp = alloca [4 x float], align 16
  %p78 = alloca i8*, align 8
  %buf82 = alloca [100 x i8], align 16
  %l83 = alloca i32, align 4
  %temp99 = alloca [4 x float], align 16
  %p195 = alloca i8*, align 8
  %buf199 = alloca [100 x i8], align 16
  %l200 = alloca i32, align 4
  %temp216 = alloca [4 x float], align 16
  %cleanup.dest.slot = alloca i32
  %p436 = alloca i8*, align 8
  %buf440 = alloca [100 x i8], align 16
  %l441 = alloca i32, align 4
  %temp457 = alloca [4 x float], align 16
  %i = alloca i32, align 4
  store %struct.gx_device_pdf_s* %pdev, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  store i32 %page_num, i32* %page_num.addr, align 4, !tbaa !54
  %0 = bitcast i64* %page_id to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %2 = load i32, i32* %page_num.addr, align 4, !tbaa !54
  %call = call i64 @pdf_page_id(%struct.gx_device_pdf_s* %1, i32 %2) #7
  store i64 %call, i64* %page_id, align 8, !tbaa !107
  %3 = bitcast %struct.pdf_page_s** %page to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #2
  %4 = load i32, i32* %page_num.addr, align 4, !tbaa !54
  %sub = sub nsw i32 %4, 1
  %idxprom = sext i32 %sub to i64
  %5 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %pages = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %5, i32 0, i32 162
  %6 = load %struct.pdf_page_s*, %struct.pdf_page_s** %pages, align 8, !tbaa !77
  %arrayidx = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %6, i64 %idxprom
  store %struct.pdf_page_s* %arrayidx, %struct.pdf_page_s** %page, align 8, !tbaa !1
  %7 = bitcast [4 x double]* %mediabox to i8*
  call void @llvm.lifetime.start(i64 32, i8* %7) #2
  %8 = bitcast [4 x double]* %mediabox to i8*
  call void @llvm.memset.p0i8.i64(i8* %8, i8 0, i64 32, i32 16, i1 false)
  %9 = bitcast %struct.stream_s** %s to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9) #2
  %10 = load %struct.pdf_page_s*, %struct.pdf_page_s** %page, align 8, !tbaa !1
  %MediaBox = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %10, i32 0, i32 1
  %x = getelementptr inbounds %struct.gs_point_s, %struct.gs_point_s* %MediaBox, i32 0, i32 0
  %11 = load double, double* %x, align 8, !tbaa !154
  %call1 = call double @round_box_coord(double %11) #7
  %arrayidx2 = getelementptr inbounds [4 x double], [4 x double]* %mediabox, i32 0, i64 2
  store double %call1, double* %arrayidx2, align 8, !tbaa !248
  %12 = load %struct.pdf_page_s*, %struct.pdf_page_s** %page, align 8, !tbaa !1
  %MediaBox3 = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %12, i32 0, i32 1
  %y = getelementptr inbounds %struct.gs_point_s, %struct.gs_point_s* %MediaBox3, i32 0, i32 1
  %13 = load double, double* %y, align 8, !tbaa !155
  %call4 = call double @round_box_coord(double %13) #7
  %arrayidx5 = getelementptr inbounds [4 x double], [4 x double]* %mediabox, i32 0, i64 3
  store double %call4, double* %arrayidx5, align 8, !tbaa !248
  %14 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %15 = load i64, i64* %page_id, align 8, !tbaa !107
  %call6 = call i64 @pdf_open_obj(%struct.gx_device_pdf_s* %14, i64 %15, i32 14) #7
  %16 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %strm = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %16, i32 0, i32 47
  %17 = load %struct.stream_s*, %struct.stream_s** %strm, align 8, !tbaa !56
  store %struct.stream_s* %17, %struct.stream_s** %s, align 8, !tbaa !1
  %18 = load %struct.stream_s*, %struct.stream_s** %s, align 8, !tbaa !1
  %arrayidx7 = getelementptr inbounds [4 x double], [4 x double]* %mediabox, i32 0, i64 2
  %19 = load double, double* %arrayidx7, align 8, !tbaa !248
  %arrayidx8 = getelementptr inbounds [4 x double], [4 x double]* %mediabox, i32 0, i64 3
  %20 = load double, double* %arrayidx8, align 8, !tbaa !248
  %call9 = call i8* @pprintg2(%struct.stream_s* %18, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.135, i32 0, i32 0), double %19, double %20) #7
  %21 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %PDFX = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %21, i32 0, i32 108
  %22 = load i32, i32* %PDFX, align 4, !tbaa !245
  %tobool = icmp ne i32 %22, 0
  br i1 %tobool, label %if.then, label %if.end.621

if.then:                                          ; preds = %entry
  %23 = bitcast %struct.cos_value_s** %v_trimbox to i8*
  call void @llvm.lifetime.start(i64 8, i8* %23) #2
  %24 = load %struct.pdf_page_s*, %struct.pdf_page_s** %page, align 8, !tbaa !1
  %Page = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %24, i32 0, i32 0
  %25 = load %struct.cos_dict_s*, %struct.cos_dict_s** %Page, align 8, !tbaa !125
  %call10 = call %struct.cos_value_s* @cos_dict_find_c_key(%struct.cos_dict_s* %25, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.136, i32 0, i32 0)) #7
  store %struct.cos_value_s* %call10, %struct.cos_value_s** %v_trimbox, align 8, !tbaa !1
  %26 = bitcast %struct.cos_value_s** %v_artbox to i8*
  call void @llvm.lifetime.start(i64 8, i8* %26) #2
  %27 = load %struct.pdf_page_s*, %struct.pdf_page_s** %page, align 8, !tbaa !1
  %Page11 = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %27, i32 0, i32 0
  %28 = load %struct.cos_dict_s*, %struct.cos_dict_s** %Page11, align 8, !tbaa !125
  %call12 = call %struct.cos_value_s* @cos_dict_find_c_key(%struct.cos_dict_s* %28, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.137, i32 0, i32 0)) #7
  store %struct.cos_value_s* %call12, %struct.cos_value_s** %v_artbox, align 8, !tbaa !1
  %29 = bitcast %struct.cos_value_s** %v_cropbox to i8*
  call void @llvm.lifetime.start(i64 8, i8* %29) #2
  %30 = load %struct.pdf_page_s*, %struct.pdf_page_s** %page, align 8, !tbaa !1
  %Page13 = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %30, i32 0, i32 0
  %31 = load %struct.cos_dict_s*, %struct.cos_dict_s** %Page13, align 8, !tbaa !125
  %call14 = call %struct.cos_value_s* @cos_dict_find_c_key(%struct.cos_dict_s* %31, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.138, i32 0, i32 0)) #7
  store %struct.cos_value_s* %call14, %struct.cos_value_s** %v_cropbox, align 8, !tbaa !1
  %32 = bitcast %struct.cos_value_s** %v_bleedbox to i8*
  call void @llvm.lifetime.start(i64 8, i8* %32) #2
  %33 = load %struct.pdf_page_s*, %struct.pdf_page_s** %page, align 8, !tbaa !1
  %Page15 = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %33, i32 0, i32 0
  %34 = load %struct.cos_dict_s*, %struct.cos_dict_s** %Page15, align 8, !tbaa !125
  %call16 = call %struct.cos_value_s* @cos_dict_find_c_key(%struct.cos_dict_s* %34, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.139, i32 0, i32 0)) #7
  store %struct.cos_value_s* %call16, %struct.cos_value_s** %v_bleedbox, align 8, !tbaa !1
  %35 = bitcast [4 x double]* %trimbox to i8*
  call void @llvm.lifetime.start(i64 32, i8* %35) #2
  %36 = bitcast [4 x double]* %trimbox to i8*
  call void @llvm.memset.p0i8.i64(i8* %36, i8 0, i64 32, i32 16, i1 false)
  %37 = bitcast [4 x double]* %bleedbox to i8*
  call void @llvm.lifetime.start(i64 32, i8* %37) #2
  %38 = bitcast [4 x double]* %bleedbox to i8*
  call void @llvm.memset.p0i8.i64(i8* %38, i8 0, i64 32, i32 16, i1 false)
  %39 = bitcast i32* %print_bleedbox to i8*
  call void @llvm.lifetime.start(i64 4, i8* %39) #2
  store i32 0, i32* %print_bleedbox, align 4, !tbaa !54
  %arrayidx17 = getelementptr inbounds [4 x double], [4 x double]* %mediabox, i32 0, i64 2
  %40 = load double, double* %arrayidx17, align 8, !tbaa !248
  %arrayidx18 = getelementptr inbounds [4 x double], [4 x double]* %bleedbox, i32 0, i64 2
  store double %40, double* %arrayidx18, align 8, !tbaa !248
  %arrayidx19 = getelementptr inbounds [4 x double], [4 x double]* %trimbox, i32 0, i64 2
  store double %40, double* %arrayidx19, align 8, !tbaa !248
  %arrayidx20 = getelementptr inbounds [4 x double], [4 x double]* %mediabox, i32 0, i64 3
  %41 = load double, double* %arrayidx20, align 8, !tbaa !248
  %arrayidx21 = getelementptr inbounds [4 x double], [4 x double]* %bleedbox, i32 0, i64 3
  store double %41, double* %arrayidx21, align 8, !tbaa !248
  %arrayidx22 = getelementptr inbounds [4 x double], [4 x double]* %trimbox, i32 0, i64 3
  store double %41, double* %arrayidx22, align 8, !tbaa !248
  %42 = load %struct.cos_value_s*, %struct.cos_value_s** %v_trimbox, align 8, !tbaa !1
  %cmp = icmp ne %struct.cos_value_s* %42, null
  br i1 %cmp, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %if.then
  %43 = load %struct.cos_value_s*, %struct.cos_value_s** %v_trimbox, align 8, !tbaa !1
  %value_type = getelementptr inbounds %struct.cos_value_s, %struct.cos_value_s* %43, i32 0, i32 0
  %44 = load i32, i32* %value_type, align 4, !tbaa !276
  %cmp23 = icmp eq i32 %44, 0
  br i1 %cmp23, label %if.then.24, label %if.else

if.then.24:                                       ; preds = %land.lhs.true
  %45 = bitcast i8** %p to i8*
  call void @llvm.lifetime.start(i64 8, i8* %45) #2
  %46 = load %struct.cos_value_s*, %struct.cos_value_s** %v_trimbox, align 8, !tbaa !1
  %contents = getelementptr inbounds %struct.cos_value_s, %struct.cos_value_s* %46, i32 0, i32 1
  %chars = bitcast %union.vc_* %contents to %struct.gs_string_s*
  %data = getelementptr inbounds %struct.gs_string_s, %struct.gs_string_s* %chars, i32 0, i32 0
  %47 = load i8*, i8** %data, align 8, !tbaa !278
  store i8* %47, i8** %p, align 8, !tbaa !1
  %48 = bitcast [100 x i8]* %buf to i8*
  call void @llvm.lifetime.start(i64 100, i8* %48) #2
  %49 = bitcast i32* %l to i8*
  call void @llvm.lifetime.start(i64 4, i8* %49) #2
  %50 = load %struct.cos_value_s*, %struct.cos_value_s** %v_trimbox, align 8, !tbaa !1
  %contents25 = getelementptr inbounds %struct.cos_value_s, %struct.cos_value_s* %50, i32 0, i32 1
  %chars26 = bitcast %union.vc_* %contents25 to %struct.gs_string_s*
  %size = getelementptr inbounds %struct.gs_string_s, %struct.gs_string_s* %chars26, i32 0, i32 1
  %51 = load i32, i32* %size, align 4, !tbaa !279
  %conv = zext i32 %51 to i64
  %cmp27 = icmp ult i64 %conv, 99
  br i1 %cmp27, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then.24
  %52 = load %struct.cos_value_s*, %struct.cos_value_s** %v_trimbox, align 8, !tbaa !1
  %contents29 = getelementptr inbounds %struct.cos_value_s, %struct.cos_value_s* %52, i32 0, i32 1
  %chars30 = bitcast %union.vc_* %contents29 to %struct.gs_string_s*
  %size31 = getelementptr inbounds %struct.gs_string_s, %struct.gs_string_s* %chars30, i32 0, i32 1
  %53 = load i32, i32* %size31, align 4, !tbaa !279
  %conv32 = zext i32 %53 to i64
  br label %cond.end

cond.false:                                       ; preds = %if.then.24
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %conv32, %cond.true ], [ 99, %cond.false ]
  %conv33 = trunc i64 %cond to i32
  store i32 %conv33, i32* %l, align 4, !tbaa !54
  %54 = bitcast [4 x float]* %temp to i8*
  call void @llvm.lifetime.start(i64 16, i8* %54) #2
  %arraydecay = getelementptr inbounds [100 x i8], [100 x i8]* %buf, i32 0, i32 0
  %55 = load i8*, i8** %p, align 8, !tbaa !1
  %56 = load i32, i32* %l, align 4, !tbaa !54
  %conv34 = sext i32 %56 to i64
  %call35 = call i8* @memcpy(i8* %arraydecay, i8* %55, i64 %conv34) #8
  %57 = load i32, i32* %l, align 4, !tbaa !54
  %idxprom36 = sext i32 %57 to i64
  %arrayidx37 = getelementptr inbounds [100 x i8], [100 x i8]* %buf, i32 0, i64 %idxprom36
  store i8 0, i8* %arrayidx37, align 1, !tbaa !147
  %arraydecay38 = getelementptr inbounds [100 x i8], [100 x i8]* %buf, i32 0, i32 0
  %arrayidx39 = getelementptr inbounds [4 x float], [4 x float]* %temp, i32 0, i64 0
  %arrayidx40 = getelementptr inbounds [4 x float], [4 x float]* %temp, i32 0, i64 1
  %arrayidx41 = getelementptr inbounds [4 x float], [4 x float]* %temp, i32 0, i64 2
  %arrayidx42 = getelementptr inbounds [4 x float], [4 x float]* %temp, i32 0, i64 3
  %call43 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %arraydecay38, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.140, i32 0, i32 0), float* %arrayidx39, float* %arrayidx40, float* %arrayidx41, float* %arrayidx42) #8
  %cmp44 = icmp eq i32 %call43, 4
  br i1 %cmp44, label %if.then.46, label %if.end

if.then.46:                                       ; preds = %cond.end
  %arrayidx47 = getelementptr inbounds [4 x float], [4 x float]* %temp, i32 0, i64 0
  %58 = load float, float* %arrayidx47, align 4, !tbaa !257
  %conv48 = fpext float %58 to double
  %arrayidx49 = getelementptr inbounds [4 x double], [4 x double]* %trimbox, i32 0, i64 0
  store double %conv48, double* %arrayidx49, align 8, !tbaa !248
  %arrayidx50 = getelementptr inbounds [4 x float], [4 x float]* %temp, i32 0, i64 1
  %59 = load float, float* %arrayidx50, align 4, !tbaa !257
  %conv51 = fpext float %59 to double
  %arrayidx52 = getelementptr inbounds [4 x double], [4 x double]* %trimbox, i32 0, i64 1
  store double %conv51, double* %arrayidx52, align 8, !tbaa !248
  %arrayidx53 = getelementptr inbounds [4 x float], [4 x float]* %temp, i32 0, i64 2
  %60 = load float, float* %arrayidx53, align 4, !tbaa !257
  %conv54 = fpext float %60 to double
  %arrayidx55 = getelementptr inbounds [4 x double], [4 x double]* %trimbox, i32 0, i64 2
  store double %conv54, double* %arrayidx55, align 8, !tbaa !248
  %arrayidx56 = getelementptr inbounds [4 x float], [4 x float]* %temp, i32 0, i64 3
  %61 = load float, float* %arrayidx56, align 4, !tbaa !257
  %conv57 = fpext float %61 to double
  %arrayidx58 = getelementptr inbounds [4 x double], [4 x double]* %trimbox, i32 0, i64 3
  store double %conv57, double* %arrayidx58, align 8, !tbaa !248
  %62 = load %struct.pdf_page_s*, %struct.pdf_page_s** %page, align 8, !tbaa !1
  %Page59 = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %62, i32 0, i32 0
  %63 = load %struct.cos_dict_s*, %struct.cos_dict_s** %Page59, align 8, !tbaa !125
  %call60 = call i32 @cos_dict_delete_c_key(%struct.cos_dict_s* %63, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.136, i32 0, i32 0)) #7
  br label %if.end

if.end:                                           ; preds = %if.then.46, %cond.end
  %64 = load %struct.cos_value_s*, %struct.cos_value_s** %v_artbox, align 8, !tbaa !1
  %cmp61 = icmp ne %struct.cos_value_s* %64, null
  br i1 %cmp61, label %land.lhs.true.63, label %if.end.70

land.lhs.true.63:                                 ; preds = %if.end
  %65 = load %struct.cos_value_s*, %struct.cos_value_s** %v_artbox, align 8, !tbaa !1
  %value_type64 = getelementptr inbounds %struct.cos_value_s, %struct.cos_value_s* %65, i32 0, i32 0
  %66 = load i32, i32* %value_type64, align 4, !tbaa !276
  %cmp65 = icmp eq i32 %66, 0
  br i1 %cmp65, label %if.then.67, label %if.end.70

if.then.67:                                       ; preds = %land.lhs.true.63
  %67 = load %struct.pdf_page_s*, %struct.pdf_page_s** %page, align 8, !tbaa !1
  %Page68 = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %67, i32 0, i32 0
  %68 = load %struct.cos_dict_s*, %struct.cos_dict_s** %Page68, align 8, !tbaa !125
  %call69 = call i32 @cos_dict_delete_c_key(%struct.cos_dict_s* %68, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.137, i32 0, i32 0)) #7
  br label %if.end.70

if.end.70:                                        ; preds = %if.then.67, %land.lhs.true.63, %if.end
  %69 = bitcast [4 x float]* %temp to i8*
  call void @llvm.lifetime.end(i64 16, i8* %69) #2
  %70 = bitcast i32* %l to i8*
  call void @llvm.lifetime.end(i64 4, i8* %70) #2
  %71 = bitcast [100 x i8]* %buf to i8*
  call void @llvm.lifetime.end(i64 100, i8* %71) #2
  %72 = bitcast i8** %p to i8*
  call void @llvm.lifetime.end(i64 8, i8* %72) #2
  br label %if.end.187

if.else:                                          ; preds = %land.lhs.true, %if.then
  %73 = load %struct.cos_value_s*, %struct.cos_value_s** %v_artbox, align 8, !tbaa !1
  %cmp71 = icmp ne %struct.cos_value_s* %73, null
  br i1 %cmp71, label %land.lhs.true.73, label %if.else.129

land.lhs.true.73:                                 ; preds = %if.else
  %74 = load %struct.cos_value_s*, %struct.cos_value_s** %v_artbox, align 8, !tbaa !1
  %value_type74 = getelementptr inbounds %struct.cos_value_s, %struct.cos_value_s* %74, i32 0, i32 0
  %75 = load i32, i32* %value_type74, align 4, !tbaa !276
  %cmp75 = icmp eq i32 %75, 0
  br i1 %cmp75, label %if.then.77, label %if.else.129

if.then.77:                                       ; preds = %land.lhs.true.73
  %76 = bitcast i8** %p78 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %76) #2
  %77 = load %struct.cos_value_s*, %struct.cos_value_s** %v_artbox, align 8, !tbaa !1
  %contents79 = getelementptr inbounds %struct.cos_value_s, %struct.cos_value_s* %77, i32 0, i32 1
  %chars80 = bitcast %union.vc_* %contents79 to %struct.gs_string_s*
  %data81 = getelementptr inbounds %struct.gs_string_s, %struct.gs_string_s* %chars80, i32 0, i32 0
  %78 = load i8*, i8** %data81, align 8, !tbaa !278
  store i8* %78, i8** %p78, align 8, !tbaa !1
  %79 = bitcast [100 x i8]* %buf82 to i8*
  call void @llvm.lifetime.start(i64 100, i8* %79) #2
  %80 = bitcast i32* %l83 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %80) #2
  %81 = load %struct.cos_value_s*, %struct.cos_value_s** %v_artbox, align 8, !tbaa !1
  %contents84 = getelementptr inbounds %struct.cos_value_s, %struct.cos_value_s* %81, i32 0, i32 1
  %chars85 = bitcast %union.vc_* %contents84 to %struct.gs_string_s*
  %size86 = getelementptr inbounds %struct.gs_string_s, %struct.gs_string_s* %chars85, i32 0, i32 1
  %82 = load i32, i32* %size86, align 4, !tbaa !279
  %conv87 = zext i32 %82 to i64
  %cmp88 = icmp ult i64 %conv87, 99
  br i1 %cmp88, label %cond.true.90, label %cond.false.95

cond.true.90:                                     ; preds = %if.then.77
  %83 = load %struct.cos_value_s*, %struct.cos_value_s** %v_artbox, align 8, !tbaa !1
  %contents91 = getelementptr inbounds %struct.cos_value_s, %struct.cos_value_s* %83, i32 0, i32 1
  %chars92 = bitcast %union.vc_* %contents91 to %struct.gs_string_s*
  %size93 = getelementptr inbounds %struct.gs_string_s, %struct.gs_string_s* %chars92, i32 0, i32 1
  %84 = load i32, i32* %size93, align 4, !tbaa !279
  %conv94 = zext i32 %84 to i64
  br label %cond.end.96

cond.false.95:                                    ; preds = %if.then.77
  br label %cond.end.96

cond.end.96:                                      ; preds = %cond.false.95, %cond.true.90
  %cond97 = phi i64 [ %conv94, %cond.true.90 ], [ 99, %cond.false.95 ]
  %conv98 = trunc i64 %cond97 to i32
  store i32 %conv98, i32* %l83, align 4, !tbaa !54
  %85 = bitcast [4 x float]* %temp99 to i8*
  call void @llvm.lifetime.start(i64 16, i8* %85) #2
  %arraydecay100 = getelementptr inbounds [100 x i8], [100 x i8]* %buf82, i32 0, i32 0
  %86 = load i8*, i8** %p78, align 8, !tbaa !1
  %87 = load i32, i32* %l83, align 4, !tbaa !54
  %conv101 = sext i32 %87 to i64
  %call102 = call i8* @memcpy(i8* %arraydecay100, i8* %86, i64 %conv101) #8
  %88 = load i32, i32* %l83, align 4, !tbaa !54
  %idxprom103 = sext i32 %88 to i64
  %arrayidx104 = getelementptr inbounds [100 x i8], [100 x i8]* %buf82, i32 0, i64 %idxprom103
  store i8 0, i8* %arrayidx104, align 1, !tbaa !147
  %arraydecay105 = getelementptr inbounds [100 x i8], [100 x i8]* %buf82, i32 0, i32 0
  %arrayidx106 = getelementptr inbounds [4 x float], [4 x float]* %temp99, i32 0, i64 0
  %arrayidx107 = getelementptr inbounds [4 x float], [4 x float]* %temp99, i32 0, i64 1
  %arrayidx108 = getelementptr inbounds [4 x float], [4 x float]* %temp99, i32 0, i64 2
  %arrayidx109 = getelementptr inbounds [4 x float], [4 x float]* %temp99, i32 0, i64 3
  %call110 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %arraydecay105, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.140, i32 0, i32 0), float* %arrayidx106, float* %arrayidx107, float* %arrayidx108, float* %arrayidx109) #8
  %cmp111 = icmp eq i32 %call110, 4
  br i1 %cmp111, label %if.then.113, label %if.end.128

if.then.113:                                      ; preds = %cond.end.96
  %arrayidx114 = getelementptr inbounds [4 x float], [4 x float]* %temp99, i32 0, i64 0
  %89 = load float, float* %arrayidx114, align 4, !tbaa !257
  %conv115 = fpext float %89 to double
  %arrayidx116 = getelementptr inbounds [4 x double], [4 x double]* %trimbox, i32 0, i64 0
  store double %conv115, double* %arrayidx116, align 8, !tbaa !248
  %arrayidx117 = getelementptr inbounds [4 x float], [4 x float]* %temp99, i32 0, i64 1
  %90 = load float, float* %arrayidx117, align 4, !tbaa !257
  %conv118 = fpext float %90 to double
  %arrayidx119 = getelementptr inbounds [4 x double], [4 x double]* %trimbox, i32 0, i64 1
  store double %conv118, double* %arrayidx119, align 8, !tbaa !248
  %arrayidx120 = getelementptr inbounds [4 x float], [4 x float]* %temp99, i32 0, i64 2
  %91 = load float, float* %arrayidx120, align 4, !tbaa !257
  %conv121 = fpext float %91 to double
  %arrayidx122 = getelementptr inbounds [4 x double], [4 x double]* %trimbox, i32 0, i64 2
  store double %conv121, double* %arrayidx122, align 8, !tbaa !248
  %arrayidx123 = getelementptr inbounds [4 x float], [4 x float]* %temp99, i32 0, i64 3
  %92 = load float, float* %arrayidx123, align 4, !tbaa !257
  %conv124 = fpext float %92 to double
  %arrayidx125 = getelementptr inbounds [4 x double], [4 x double]* %trimbox, i32 0, i64 3
  store double %conv124, double* %arrayidx125, align 8, !tbaa !248
  %93 = load %struct.pdf_page_s*, %struct.pdf_page_s** %page, align 8, !tbaa !1
  %Page126 = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %93, i32 0, i32 0
  %94 = load %struct.cos_dict_s*, %struct.cos_dict_s** %Page126, align 8, !tbaa !125
  %call127 = call i32 @cos_dict_delete_c_key(%struct.cos_dict_s* %94, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.137, i32 0, i32 0)) #7
  br label %if.end.128

if.end.128:                                       ; preds = %if.then.113, %cond.end.96
  %95 = bitcast [4 x float]* %temp99 to i8*
  call void @llvm.lifetime.end(i64 16, i8* %95) #2
  %96 = bitcast i32* %l83 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %96) #2
  %97 = bitcast [100 x i8]* %buf82 to i8*
  call void @llvm.lifetime.end(i64 100, i8* %97) #2
  %98 = bitcast i8** %p78 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %98) #2
  br label %if.end.186

if.else.129:                                      ; preds = %land.lhs.true.73, %if.else
  %99 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %PDFXTrimBoxToMediaBoxOffset = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %99, i32 0, i32 88
  %size130 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %PDFXTrimBoxToMediaBoxOffset, i32 0, i32 1
  %100 = load i32, i32* %size130, align 4, !tbaa !280
  %cmp131 = icmp uge i32 %100, 4
  br i1 %cmp131, label %land.lhs.true.133, label %if.end.185

land.lhs.true.133:                                ; preds = %if.else.129
  %101 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %PDFXTrimBoxToMediaBoxOffset134 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %101, i32 0, i32 88
  %data135 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %PDFXTrimBoxToMediaBoxOffset134, i32 0, i32 0
  %102 = load float*, float** %data135, align 8, !tbaa !226
  %arrayidx136 = getelementptr inbounds float, float* %102, i64 0
  %103 = load float, float* %arrayidx136, align 4, !tbaa !257
  %cmp137 = fcmp oge float %103, 0.000000e+00
  br i1 %cmp137, label %land.lhs.true.139, label %if.end.185

land.lhs.true.139:                                ; preds = %land.lhs.true.133
  %104 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %PDFXTrimBoxToMediaBoxOffset140 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %104, i32 0, i32 88
  %data141 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %PDFXTrimBoxToMediaBoxOffset140, i32 0, i32 0
  %105 = load float*, float** %data141, align 8, !tbaa !226
  %arrayidx142 = getelementptr inbounds float, float* %105, i64 1
  %106 = load float, float* %arrayidx142, align 4, !tbaa !257
  %cmp143 = fcmp oge float %106, 0.000000e+00
  br i1 %cmp143, label %land.lhs.true.145, label %if.end.185

land.lhs.true.145:                                ; preds = %land.lhs.true.139
  %107 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %PDFXTrimBoxToMediaBoxOffset146 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %107, i32 0, i32 88
  %data147 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %PDFXTrimBoxToMediaBoxOffset146, i32 0, i32 0
  %108 = load float*, float** %data147, align 8, !tbaa !226
  %arrayidx148 = getelementptr inbounds float, float* %108, i64 2
  %109 = load float, float* %arrayidx148, align 4, !tbaa !257
  %cmp149 = fcmp oge float %109, 0.000000e+00
  br i1 %cmp149, label %land.lhs.true.151, label %if.end.185

land.lhs.true.151:                                ; preds = %land.lhs.true.145
  %110 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %PDFXTrimBoxToMediaBoxOffset152 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %110, i32 0, i32 88
  %data153 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %PDFXTrimBoxToMediaBoxOffset152, i32 0, i32 0
  %111 = load float*, float** %data153, align 8, !tbaa !226
  %arrayidx154 = getelementptr inbounds float, float* %111, i64 3
  %112 = load float, float* %arrayidx154, align 4, !tbaa !257
  %cmp155 = fcmp oge float %112, 0.000000e+00
  br i1 %cmp155, label %if.then.157, label %if.end.185

if.then.157:                                      ; preds = %land.lhs.true.151
  %arrayidx158 = getelementptr inbounds [4 x double], [4 x double]* %mediabox, i32 0, i64 0
  %113 = load double, double* %arrayidx158, align 8, !tbaa !248
  %114 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %PDFXTrimBoxToMediaBoxOffset159 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %114, i32 0, i32 88
  %data160 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %PDFXTrimBoxToMediaBoxOffset159, i32 0, i32 0
  %115 = load float*, float** %data160, align 8, !tbaa !226
  %arrayidx161 = getelementptr inbounds float, float* %115, i64 0
  %116 = load float, float* %arrayidx161, align 4, !tbaa !257
  %conv162 = fpext float %116 to double
  %add = fadd double %113, %conv162
  %arrayidx163 = getelementptr inbounds [4 x double], [4 x double]* %trimbox, i32 0, i64 0
  store double %add, double* %arrayidx163, align 8, !tbaa !248
  %arrayidx164 = getelementptr inbounds [4 x double], [4 x double]* %mediabox, i32 0, i64 1
  %117 = load double, double* %arrayidx164, align 8, !tbaa !248
  %118 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %PDFXTrimBoxToMediaBoxOffset165 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %118, i32 0, i32 88
  %data166 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %PDFXTrimBoxToMediaBoxOffset165, i32 0, i32 0
  %119 = load float*, float** %data166, align 8, !tbaa !226
  %arrayidx167 = getelementptr inbounds float, float* %119, i64 3
  %120 = load float, float* %arrayidx167, align 4, !tbaa !257
  %conv168 = fpext float %120 to double
  %add169 = fadd double %117, %conv168
  %arrayidx170 = getelementptr inbounds [4 x double], [4 x double]* %trimbox, i32 0, i64 1
  store double %add169, double* %arrayidx170, align 8, !tbaa !248
  %arrayidx171 = getelementptr inbounds [4 x double], [4 x double]* %mediabox, i32 0, i64 2
  %121 = load double, double* %arrayidx171, align 8, !tbaa !248
  %122 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %PDFXTrimBoxToMediaBoxOffset172 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %122, i32 0, i32 88
  %data173 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %PDFXTrimBoxToMediaBoxOffset172, i32 0, i32 0
  %123 = load float*, float** %data173, align 8, !tbaa !226
  %arrayidx174 = getelementptr inbounds float, float* %123, i64 1
  %124 = load float, float* %arrayidx174, align 4, !tbaa !257
  %conv175 = fpext float %124 to double
  %sub176 = fsub double %121, %conv175
  %arrayidx177 = getelementptr inbounds [4 x double], [4 x double]* %trimbox, i32 0, i64 2
  store double %sub176, double* %arrayidx177, align 8, !tbaa !248
  %arrayidx178 = getelementptr inbounds [4 x double], [4 x double]* %mediabox, i32 0, i64 3
  %125 = load double, double* %arrayidx178, align 8, !tbaa !248
  %126 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %PDFXTrimBoxToMediaBoxOffset179 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %126, i32 0, i32 88
  %data180 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %PDFXTrimBoxToMediaBoxOffset179, i32 0, i32 0
  %127 = load float*, float** %data180, align 8, !tbaa !226
  %arrayidx181 = getelementptr inbounds float, float* %127, i64 2
  %128 = load float, float* %arrayidx181, align 4, !tbaa !257
  %conv182 = fpext float %128 to double
  %sub183 = fsub double %125, %conv182
  %arrayidx184 = getelementptr inbounds [4 x double], [4 x double]* %trimbox, i32 0, i64 3
  store double %sub183, double* %arrayidx184, align 8, !tbaa !248
  br label %if.end.185

if.end.185:                                       ; preds = %if.then.157, %land.lhs.true.151, %land.lhs.true.145, %land.lhs.true.139, %land.lhs.true.133, %if.else.129
  br label %if.end.186

if.end.186:                                       ; preds = %if.end.185, %if.end.128
  br label %if.end.187

if.end.187:                                       ; preds = %if.end.186, %if.end.70
  %129 = load %struct.cos_value_s*, %struct.cos_value_s** %v_bleedbox, align 8, !tbaa !1
  %cmp188 = icmp ne %struct.cos_value_s* %129, null
  br i1 %cmp188, label %land.lhs.true.190, label %if.else.286

land.lhs.true.190:                                ; preds = %if.end.187
  %130 = load %struct.cos_value_s*, %struct.cos_value_s** %v_bleedbox, align 8, !tbaa !1
  %value_type191 = getelementptr inbounds %struct.cos_value_s, %struct.cos_value_s* %130, i32 0, i32 0
  %131 = load i32, i32* %value_type191, align 4, !tbaa !276
  %cmp192 = icmp eq i32 %131, 0
  br i1 %cmp192, label %if.then.194, label %if.else.286

if.then.194:                                      ; preds = %land.lhs.true.190
  %132 = bitcast i8** %p195 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %132) #2
  %133 = load %struct.cos_value_s*, %struct.cos_value_s** %v_bleedbox, align 8, !tbaa !1
  %contents196 = getelementptr inbounds %struct.cos_value_s, %struct.cos_value_s* %133, i32 0, i32 1
  %chars197 = bitcast %union.vc_* %contents196 to %struct.gs_string_s*
  %data198 = getelementptr inbounds %struct.gs_string_s, %struct.gs_string_s* %chars197, i32 0, i32 0
  %134 = load i8*, i8** %data198, align 8, !tbaa !278
  store i8* %134, i8** %p195, align 8, !tbaa !1
  %135 = bitcast [100 x i8]* %buf199 to i8*
  call void @llvm.lifetime.start(i64 100, i8* %135) #2
  %136 = bitcast i32* %l200 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %136) #2
  %137 = load %struct.cos_value_s*, %struct.cos_value_s** %v_bleedbox, align 8, !tbaa !1
  %contents201 = getelementptr inbounds %struct.cos_value_s, %struct.cos_value_s* %137, i32 0, i32 1
  %chars202 = bitcast %union.vc_* %contents201 to %struct.gs_string_s*
  %size203 = getelementptr inbounds %struct.gs_string_s, %struct.gs_string_s* %chars202, i32 0, i32 1
  %138 = load i32, i32* %size203, align 4, !tbaa !279
  %conv204 = zext i32 %138 to i64
  %cmp205 = icmp ult i64 %conv204, 99
  br i1 %cmp205, label %cond.true.207, label %cond.false.212

cond.true.207:                                    ; preds = %if.then.194
  %139 = load %struct.cos_value_s*, %struct.cos_value_s** %v_bleedbox, align 8, !tbaa !1
  %contents208 = getelementptr inbounds %struct.cos_value_s, %struct.cos_value_s* %139, i32 0, i32 1
  %chars209 = bitcast %union.vc_* %contents208 to %struct.gs_string_s*
  %size210 = getelementptr inbounds %struct.gs_string_s, %struct.gs_string_s* %chars209, i32 0, i32 1
  %140 = load i32, i32* %size210, align 4, !tbaa !279
  %conv211 = zext i32 %140 to i64
  br label %cond.end.213

cond.false.212:                                   ; preds = %if.then.194
  br label %cond.end.213

cond.end.213:                                     ; preds = %cond.false.212, %cond.true.207
  %cond214 = phi i64 [ %conv211, %cond.true.207 ], [ 99, %cond.false.212 ]
  %conv215 = trunc i64 %cond214 to i32
  store i32 %conv215, i32* %l200, align 4, !tbaa !54
  %141 = bitcast [4 x float]* %temp216 to i8*
  call void @llvm.lifetime.start(i64 16, i8* %141) #2
  %arraydecay217 = getelementptr inbounds [100 x i8], [100 x i8]* %buf199, i32 0, i32 0
  %142 = load i8*, i8** %p195, align 8, !tbaa !1
  %143 = load i32, i32* %l200, align 4, !tbaa !54
  %conv218 = sext i32 %143 to i64
  %call219 = call i8* @memcpy(i8* %arraydecay217, i8* %142, i64 %conv218) #8
  %144 = load i32, i32* %l200, align 4, !tbaa !54
  %idxprom220 = sext i32 %144 to i64
  %arrayidx221 = getelementptr inbounds [100 x i8], [100 x i8]* %buf199, i32 0, i64 %idxprom220
  store i8 0, i8* %arrayidx221, align 1, !tbaa !147
  %arraydecay222 = getelementptr inbounds [100 x i8], [100 x i8]* %buf199, i32 0, i32 0
  %arrayidx223 = getelementptr inbounds [4 x float], [4 x float]* %temp216, i32 0, i64 0
  %arrayidx224 = getelementptr inbounds [4 x float], [4 x float]* %temp216, i32 0, i64 1
  %arrayidx225 = getelementptr inbounds [4 x float], [4 x float]* %temp216, i32 0, i64 2
  %arrayidx226 = getelementptr inbounds [4 x float], [4 x float]* %temp216, i32 0, i64 3
  %call227 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %arraydecay222, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.140, i32 0, i32 0), float* %arrayidx223, float* %arrayidx224, float* %arrayidx225, float* %arrayidx226) #8
  %cmp228 = icmp eq i32 %call227, 4
  br i1 %cmp228, label %if.then.230, label %if.end.285

if.then.230:                                      ; preds = %cond.end.213
  %arrayidx231 = getelementptr inbounds [4 x float], [4 x float]* %temp216, i32 0, i64 0
  %145 = load float, float* %arrayidx231, align 4, !tbaa !257
  %conv232 = fpext float %145 to double
  %arrayidx233 = getelementptr inbounds [4 x double], [4 x double]* %mediabox, i32 0, i64 0
  %146 = load double, double* %arrayidx233, align 8, !tbaa !248
  %cmp234 = fcmp olt double %conv232, %146
  br i1 %cmp234, label %if.then.236, label %if.else.239

if.then.236:                                      ; preds = %if.then.230
  %arrayidx237 = getelementptr inbounds [4 x double], [4 x double]* %mediabox, i32 0, i64 0
  %147 = load double, double* %arrayidx237, align 8, !tbaa !248
  %arrayidx238 = getelementptr inbounds [4 x double], [4 x double]* %bleedbox, i32 0, i64 0
  store double %147, double* %arrayidx238, align 8, !tbaa !248
  br label %if.end.243

if.else.239:                                      ; preds = %if.then.230
  %arrayidx240 = getelementptr inbounds [4 x float], [4 x float]* %temp216, i32 0, i64 0
  %148 = load float, float* %arrayidx240, align 4, !tbaa !257
  %conv241 = fpext float %148 to double
  %arrayidx242 = getelementptr inbounds [4 x double], [4 x double]* %bleedbox, i32 0, i64 0
  store double %conv241, double* %arrayidx242, align 8, !tbaa !248
  br label %if.end.243

if.end.243:                                       ; preds = %if.else.239, %if.then.236
  %arrayidx244 = getelementptr inbounds [4 x float], [4 x float]* %temp216, i32 0, i64 1
  %149 = load float, float* %arrayidx244, align 4, !tbaa !257
  %conv245 = fpext float %149 to double
  %arrayidx246 = getelementptr inbounds [4 x double], [4 x double]* %mediabox, i32 0, i64 1
  %150 = load double, double* %arrayidx246, align 8, !tbaa !248
  %cmp247 = fcmp olt double %conv245, %150
  br i1 %cmp247, label %if.then.249, label %if.else.252

if.then.249:                                      ; preds = %if.end.243
  %arrayidx250 = getelementptr inbounds [4 x double], [4 x double]* %mediabox, i32 0, i64 1
  %151 = load double, double* %arrayidx250, align 8, !tbaa !248
  %arrayidx251 = getelementptr inbounds [4 x double], [4 x double]* %bleedbox, i32 0, i64 1
  store double %151, double* %arrayidx251, align 8, !tbaa !248
  br label %if.end.256

if.else.252:                                      ; preds = %if.end.243
  %arrayidx253 = getelementptr inbounds [4 x float], [4 x float]* %temp216, i32 0, i64 1
  %152 = load float, float* %arrayidx253, align 4, !tbaa !257
  %conv254 = fpext float %152 to double
  %arrayidx255 = getelementptr inbounds [4 x double], [4 x double]* %bleedbox, i32 0, i64 1
  store double %conv254, double* %arrayidx255, align 8, !tbaa !248
  br label %if.end.256

if.end.256:                                       ; preds = %if.else.252, %if.then.249
  %arrayidx257 = getelementptr inbounds [4 x float], [4 x float]* %temp216, i32 0, i64 2
  %153 = load float, float* %arrayidx257, align 4, !tbaa !257
  %conv258 = fpext float %153 to double
  %arrayidx259 = getelementptr inbounds [4 x double], [4 x double]* %mediabox, i32 0, i64 2
  %154 = load double, double* %arrayidx259, align 8, !tbaa !248
  %cmp260 = fcmp ogt double %conv258, %154
  br i1 %cmp260, label %if.then.262, label %if.else.265

if.then.262:                                      ; preds = %if.end.256
  %arrayidx263 = getelementptr inbounds [4 x double], [4 x double]* %mediabox, i32 0, i64 2
  %155 = load double, double* %arrayidx263, align 8, !tbaa !248
  %arrayidx264 = getelementptr inbounds [4 x double], [4 x double]* %bleedbox, i32 0, i64 2
  store double %155, double* %arrayidx264, align 8, !tbaa !248
  br label %if.end.269

if.else.265:                                      ; preds = %if.end.256
  %arrayidx266 = getelementptr inbounds [4 x float], [4 x float]* %temp216, i32 0, i64 2
  %156 = load float, float* %arrayidx266, align 4, !tbaa !257
  %conv267 = fpext float %156 to double
  %arrayidx268 = getelementptr inbounds [4 x double], [4 x double]* %bleedbox, i32 0, i64 2
  store double %conv267, double* %arrayidx268, align 8, !tbaa !248
  br label %if.end.269

if.end.269:                                       ; preds = %if.else.265, %if.then.262
  %arrayidx270 = getelementptr inbounds [4 x float], [4 x float]* %temp216, i32 0, i64 3
  %157 = load float, float* %arrayidx270, align 4, !tbaa !257
  %conv271 = fpext float %157 to double
  %arrayidx272 = getelementptr inbounds [4 x double], [4 x double]* %mediabox, i32 0, i64 3
  %158 = load double, double* %arrayidx272, align 8, !tbaa !248
  %cmp273 = fcmp ogt double %conv271, %158
  br i1 %cmp273, label %if.then.275, label %if.else.278

if.then.275:                                      ; preds = %if.end.269
  %arrayidx276 = getelementptr inbounds [4 x double], [4 x double]* %mediabox, i32 0, i64 3
  %159 = load double, double* %arrayidx276, align 8, !tbaa !248
  %arrayidx277 = getelementptr inbounds [4 x double], [4 x double]* %bleedbox, i32 0, i64 3
  store double %159, double* %arrayidx277, align 8, !tbaa !248
  br label %if.end.282

if.else.278:                                      ; preds = %if.end.269
  %arrayidx279 = getelementptr inbounds [4 x float], [4 x float]* %temp216, i32 0, i64 3
  %160 = load float, float* %arrayidx279, align 4, !tbaa !257
  %conv280 = fpext float %160 to double
  %arrayidx281 = getelementptr inbounds [4 x double], [4 x double]* %bleedbox, i32 0, i64 3
  store double %conv280, double* %arrayidx281, align 8, !tbaa !248
  br label %if.end.282

if.end.282:                                       ; preds = %if.else.278, %if.then.275
  store i32 1, i32* %print_bleedbox, align 4, !tbaa !54
  %161 = load %struct.pdf_page_s*, %struct.pdf_page_s** %page, align 8, !tbaa !1
  %Page283 = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %161, i32 0, i32 0
  %162 = load %struct.cos_dict_s*, %struct.cos_dict_s** %Page283, align 8, !tbaa !125
  %call284 = call i32 @cos_dict_delete_c_key(%struct.cos_dict_s* %162, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.139, i32 0, i32 0)) #7
  br label %if.end.285

if.end.285:                                       ; preds = %if.end.282, %cond.end.213
  %163 = bitcast [4 x float]* %temp216 to i8*
  call void @llvm.lifetime.end(i64 16, i8* %163) #2
  %164 = bitcast i32* %l200 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %164) #2
  %165 = bitcast [100 x i8]* %buf199 to i8*
  call void @llvm.lifetime.end(i64 100, i8* %165) #2
  %166 = bitcast i8** %p195 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %166) #2
  br label %if.end.348

if.else.286:                                      ; preds = %land.lhs.true.190, %if.end.187
  %167 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %PDFXSetBleedBoxToMediaBox = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %167, i32 0, i32 90
  %168 = load i32, i32* %PDFXSetBleedBoxToMediaBox, align 4, !tbaa !281
  %tobool287 = icmp ne i32 %168, 0
  br i1 %tobool287, label %if.then.288, label %if.else.289

if.then.288:                                      ; preds = %if.else.286
  store i32 1, i32* %print_bleedbox, align 4, !tbaa !54
  br label %if.end.347

if.else.289:                                      ; preds = %if.else.286
  %169 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %PDFXBleedBoxToTrimBoxOffset = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %169, i32 0, i32 89
  %size290 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %PDFXBleedBoxToTrimBoxOffset, i32 0, i32 1
  %170 = load i32, i32* %size290, align 4, !tbaa !282
  %cmp291 = icmp uge i32 %170, 4
  br i1 %cmp291, label %land.lhs.true.293, label %if.end.346

land.lhs.true.293:                                ; preds = %if.else.289
  %171 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %PDFXBleedBoxToTrimBoxOffset294 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %171, i32 0, i32 89
  %data295 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %PDFXBleedBoxToTrimBoxOffset294, i32 0, i32 0
  %172 = load float*, float** %data295, align 8, !tbaa !227
  %arrayidx296 = getelementptr inbounds float, float* %172, i64 0
  %173 = load float, float* %arrayidx296, align 4, !tbaa !257
  %cmp297 = fcmp oge float %173, 0.000000e+00
  br i1 %cmp297, label %land.lhs.true.299, label %if.end.346

land.lhs.true.299:                                ; preds = %land.lhs.true.293
  %174 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %PDFXBleedBoxToTrimBoxOffset300 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %174, i32 0, i32 89
  %data301 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %PDFXBleedBoxToTrimBoxOffset300, i32 0, i32 0
  %175 = load float*, float** %data301, align 8, !tbaa !227
  %arrayidx302 = getelementptr inbounds float, float* %175, i64 1
  %176 = load float, float* %arrayidx302, align 4, !tbaa !257
  %cmp303 = fcmp oge float %176, 0.000000e+00
  br i1 %cmp303, label %land.lhs.true.305, label %if.end.346

land.lhs.true.305:                                ; preds = %land.lhs.true.299
  %177 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %PDFXBleedBoxToTrimBoxOffset306 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %177, i32 0, i32 89
  %data307 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %PDFXBleedBoxToTrimBoxOffset306, i32 0, i32 0
  %178 = load float*, float** %data307, align 8, !tbaa !227
  %arrayidx308 = getelementptr inbounds float, float* %178, i64 2
  %179 = load float, float* %arrayidx308, align 4, !tbaa !257
  %cmp309 = fcmp oge float %179, 0.000000e+00
  br i1 %cmp309, label %land.lhs.true.311, label %if.end.346

land.lhs.true.311:                                ; preds = %land.lhs.true.305
  %180 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %PDFXBleedBoxToTrimBoxOffset312 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %180, i32 0, i32 89
  %data313 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %PDFXBleedBoxToTrimBoxOffset312, i32 0, i32 0
  %181 = load float*, float** %data313, align 8, !tbaa !227
  %arrayidx314 = getelementptr inbounds float, float* %181, i64 3
  %182 = load float, float* %arrayidx314, align 4, !tbaa !257
  %cmp315 = fcmp oge float %182, 0.000000e+00
  br i1 %cmp315, label %if.then.317, label %if.end.346

if.then.317:                                      ; preds = %land.lhs.true.311
  %arrayidx318 = getelementptr inbounds [4 x double], [4 x double]* %trimbox, i32 0, i64 0
  %183 = load double, double* %arrayidx318, align 8, !tbaa !248
  %184 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %PDFXBleedBoxToTrimBoxOffset319 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %184, i32 0, i32 89
  %data320 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %PDFXBleedBoxToTrimBoxOffset319, i32 0, i32 0
  %185 = load float*, float** %data320, align 8, !tbaa !227
  %arrayidx321 = getelementptr inbounds float, float* %185, i64 0
  %186 = load float, float* %arrayidx321, align 4, !tbaa !257
  %conv322 = fpext float %186 to double
  %sub323 = fsub double %183, %conv322
  %arrayidx324 = getelementptr inbounds [4 x double], [4 x double]* %bleedbox, i32 0, i64 0
  store double %sub323, double* %arrayidx324, align 8, !tbaa !248
  %arrayidx325 = getelementptr inbounds [4 x double], [4 x double]* %trimbox, i32 0, i64 1
  %187 = load double, double* %arrayidx325, align 8, !tbaa !248
  %188 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %PDFXBleedBoxToTrimBoxOffset326 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %188, i32 0, i32 89
  %data327 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %PDFXBleedBoxToTrimBoxOffset326, i32 0, i32 0
  %189 = load float*, float** %data327, align 8, !tbaa !227
  %arrayidx328 = getelementptr inbounds float, float* %189, i64 3
  %190 = load float, float* %arrayidx328, align 4, !tbaa !257
  %conv329 = fpext float %190 to double
  %sub330 = fsub double %187, %conv329
  %arrayidx331 = getelementptr inbounds [4 x double], [4 x double]* %bleedbox, i32 0, i64 1
  store double %sub330, double* %arrayidx331, align 8, !tbaa !248
  %arrayidx332 = getelementptr inbounds [4 x double], [4 x double]* %trimbox, i32 0, i64 2
  %191 = load double, double* %arrayidx332, align 8, !tbaa !248
  %192 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %PDFXBleedBoxToTrimBoxOffset333 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %192, i32 0, i32 89
  %data334 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %PDFXBleedBoxToTrimBoxOffset333, i32 0, i32 0
  %193 = load float*, float** %data334, align 8, !tbaa !227
  %arrayidx335 = getelementptr inbounds float, float* %193, i64 1
  %194 = load float, float* %arrayidx335, align 4, !tbaa !257
  %conv336 = fpext float %194 to double
  %add337 = fadd double %191, %conv336
  %arrayidx338 = getelementptr inbounds [4 x double], [4 x double]* %bleedbox, i32 0, i64 2
  store double %add337, double* %arrayidx338, align 8, !tbaa !248
  %arrayidx339 = getelementptr inbounds [4 x double], [4 x double]* %trimbox, i32 0, i64 3
  %195 = load double, double* %arrayidx339, align 8, !tbaa !248
  %196 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %PDFXBleedBoxToTrimBoxOffset340 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %196, i32 0, i32 89
  %data341 = getelementptr inbounds %struct.gs_param_float_array_s, %struct.gs_param_float_array_s* %PDFXBleedBoxToTrimBoxOffset340, i32 0, i32 0
  %197 = load float*, float** %data341, align 8, !tbaa !227
  %arrayidx342 = getelementptr inbounds float, float* %197, i64 2
  %198 = load float, float* %arrayidx342, align 4, !tbaa !257
  %conv343 = fpext float %198 to double
  %add344 = fadd double %195, %conv343
  %arrayidx345 = getelementptr inbounds [4 x double], [4 x double]* %bleedbox, i32 0, i64 3
  store double %add344, double* %arrayidx345, align 8, !tbaa !248
  store i32 1, i32* %print_bleedbox, align 4, !tbaa !54
  br label %if.end.346

if.end.346:                                       ; preds = %if.then.317, %land.lhs.true.311, %land.lhs.true.305, %land.lhs.true.299, %land.lhs.true.293, %if.else.289
  br label %if.end.347

if.end.347:                                       ; preds = %if.end.346, %if.then.288
  br label %if.end.348

if.end.348:                                       ; preds = %if.end.347, %if.end.285
  %199 = load i32, i32* %print_bleedbox, align 4, !tbaa !54
  %cmp349 = icmp eq i32 %199, 1
  br i1 %cmp349, label %if.then.351, label %if.end.428

if.then.351:                                      ; preds = %if.end.348
  %arrayidx352 = getelementptr inbounds [4 x double], [4 x double]* %trimbox, i32 0, i64 0
  %200 = load double, double* %arrayidx352, align 8, !tbaa !248
  %arrayidx353 = getelementptr inbounds [4 x double], [4 x double]* %bleedbox, i32 0, i64 0
  %201 = load double, double* %arrayidx353, align 8, !tbaa !248
  %cmp354 = fcmp olt double %200, %201
  br i1 %cmp354, label %if.then.370, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then.351
  %arrayidx356 = getelementptr inbounds [4 x double], [4 x double]* %trimbox, i32 0, i64 1
  %202 = load double, double* %arrayidx356, align 8, !tbaa !248
  %arrayidx357 = getelementptr inbounds [4 x double], [4 x double]* %bleedbox, i32 0, i64 1
  %203 = load double, double* %arrayidx357, align 8, !tbaa !248
  %cmp358 = fcmp olt double %202, %203
  br i1 %cmp358, label %if.then.370, label %lor.lhs.false.360

lor.lhs.false.360:                                ; preds = %lor.lhs.false
  %arrayidx361 = getelementptr inbounds [4 x double], [4 x double]* %trimbox, i32 0, i64 2
  %204 = load double, double* %arrayidx361, align 8, !tbaa !248
  %arrayidx362 = getelementptr inbounds [4 x double], [4 x double]* %bleedbox, i32 0, i64 2
  %205 = load double, double* %arrayidx362, align 8, !tbaa !248
  %cmp363 = fcmp ogt double %204, %205
  br i1 %cmp363, label %if.then.370, label %lor.lhs.false.365

lor.lhs.false.365:                                ; preds = %lor.lhs.false.360
  %arrayidx366 = getelementptr inbounds [4 x double], [4 x double]* %trimbox, i32 0, i64 3
  %206 = load double, double* %arrayidx366, align 8, !tbaa !248
  %arrayidx367 = getelementptr inbounds [4 x double], [4 x double]* %bleedbox, i32 0, i64 3
  %207 = load double, double* %arrayidx367, align 8, !tbaa !248
  %cmp368 = fcmp ogt double %206, %207
  br i1 %cmp368, label %if.then.370, label %if.end.427

if.then.370:                                      ; preds = %lor.lhs.false.365, %lor.lhs.false.360, %lor.lhs.false, %if.then.351
  %208 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %PDFACompatibilityPolicy = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %208, i32 0, i32 239
  %209 = load i32, i32* %PDFACompatibilityPolicy, align 4, !tbaa !283
  switch i32 %209, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb.376
    i32 2, label %sw.bb.414
  ]

sw.bb:                                            ; preds = %if.then.370
  %210 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %210, i32 0, i32 3
  %211 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory, align 8, !tbaa !5
  %call371 = call i8* @gs_program_name() #7
  %call372 = call i64 @gs_revision_number() #7
  call void @emprintf_program_ident(%struct.gs_memory_s* %211, i8* %call371, i64 %call372) #7
  %212 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %memory373 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %212, i32 0, i32 3
  %213 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory373, align 8, !tbaa !5
  %call374 = call i32 (%struct.gs_memory_s*, i8*, ...) @errprintf(%struct.gs_memory_s* %213, i8* getelementptr inbounds ([96 x i8], [96 x i8]* @.str.141, i32 0, i32 0)) #7
  %214 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %AbortPDFAX = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %214, i32 0, i32 110
  store i32 1, i32* %AbortPDFAX, align 4, !tbaa !284
  %215 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %PDFX375 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %215, i32 0, i32 108
  store i32 0, i32* %PDFX375, align 4, !tbaa !245
  br label %sw.epilog

sw.bb.376:                                        ; preds = %if.then.370
  %216 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %memory377 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %216, i32 0, i32 3
  %217 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory377, align 8, !tbaa !5
  %call378 = call i8* @gs_program_name() #7
  %call379 = call i64 @gs_revision_number() #7
  call void @emprintf_program_ident(%struct.gs_memory_s* %217, i8* %call378, i64 %call379) #7
  %218 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %memory380 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %218, i32 0, i32 3
  %219 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory380, align 8, !tbaa !5
  %call381 = call i32 (%struct.gs_memory_s*, i8*, ...) @errprintf(%struct.gs_memory_s* %219, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.142, i32 0, i32 0)) #7
  %arrayidx382 = getelementptr inbounds [4 x double], [4 x double]* %trimbox, i32 0, i64 0
  %220 = load double, double* %arrayidx382, align 8, !tbaa !248
  %arrayidx383 = getelementptr inbounds [4 x double], [4 x double]* %bleedbox, i32 0, i64 0
  %221 = load double, double* %arrayidx383, align 8, !tbaa !248
  %cmp384 = fcmp olt double %220, %221
  br i1 %cmp384, label %if.then.386, label %if.end.389

if.then.386:                                      ; preds = %sw.bb.376
  %arrayidx387 = getelementptr inbounds [4 x double], [4 x double]* %bleedbox, i32 0, i64 0
  %222 = load double, double* %arrayidx387, align 8, !tbaa !248
  %arrayidx388 = getelementptr inbounds [4 x double], [4 x double]* %trimbox, i32 0, i64 0
  store double %222, double* %arrayidx388, align 8, !tbaa !248
  br label %if.end.389

if.end.389:                                       ; preds = %if.then.386, %sw.bb.376
  %arrayidx390 = getelementptr inbounds [4 x double], [4 x double]* %trimbox, i32 0, i64 1
  %223 = load double, double* %arrayidx390, align 8, !tbaa !248
  %arrayidx391 = getelementptr inbounds [4 x double], [4 x double]* %bleedbox, i32 0, i64 1
  %224 = load double, double* %arrayidx391, align 8, !tbaa !248
  %cmp392 = fcmp olt double %223, %224
  br i1 %cmp392, label %if.then.394, label %if.end.397

if.then.394:                                      ; preds = %if.end.389
  %arrayidx395 = getelementptr inbounds [4 x double], [4 x double]* %bleedbox, i32 0, i64 1
  %225 = load double, double* %arrayidx395, align 8, !tbaa !248
  %arrayidx396 = getelementptr inbounds [4 x double], [4 x double]* %trimbox, i32 0, i64 1
  store double %225, double* %arrayidx396, align 8, !tbaa !248
  br label %if.end.397

if.end.397:                                       ; preds = %if.then.394, %if.end.389
  %arrayidx398 = getelementptr inbounds [4 x double], [4 x double]* %trimbox, i32 0, i64 2
  %226 = load double, double* %arrayidx398, align 8, !tbaa !248
  %arrayidx399 = getelementptr inbounds [4 x double], [4 x double]* %bleedbox, i32 0, i64 2
  %227 = load double, double* %arrayidx399, align 8, !tbaa !248
  %cmp400 = fcmp ogt double %226, %227
  br i1 %cmp400, label %if.then.402, label %if.end.405

if.then.402:                                      ; preds = %if.end.397
  %arrayidx403 = getelementptr inbounds [4 x double], [4 x double]* %bleedbox, i32 0, i64 2
  %228 = load double, double* %arrayidx403, align 8, !tbaa !248
  %arrayidx404 = getelementptr inbounds [4 x double], [4 x double]* %trimbox, i32 0, i64 2
  store double %228, double* %arrayidx404, align 8, !tbaa !248
  br label %if.end.405

if.end.405:                                       ; preds = %if.then.402, %if.end.397
  %arrayidx406 = getelementptr inbounds [4 x double], [4 x double]* %trimbox, i32 0, i64 3
  %229 = load double, double* %arrayidx406, align 8, !tbaa !248
  %arrayidx407 = getelementptr inbounds [4 x double], [4 x double]* %bleedbox, i32 0, i64 3
  %230 = load double, double* %arrayidx407, align 8, !tbaa !248
  %cmp408 = fcmp ogt double %229, %230
  br i1 %cmp408, label %if.then.410, label %if.end.413

if.then.410:                                      ; preds = %if.end.405
  %arrayidx411 = getelementptr inbounds [4 x double], [4 x double]* %bleedbox, i32 0, i64 3
  %231 = load double, double* %arrayidx411, align 8, !tbaa !248
  %arrayidx412 = getelementptr inbounds [4 x double], [4 x double]* %trimbox, i32 0, i64 3
  store double %231, double* %arrayidx412, align 8, !tbaa !248
  br label %if.end.413

if.end.413:                                       ; preds = %if.then.410, %if.end.405
  br label %sw.epilog

sw.bb.414:                                        ; preds = %if.then.370
  %232 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %memory415 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %232, i32 0, i32 3
  %233 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory415, align 8, !tbaa !5
  %call416 = call i8* @gs_program_name() #7
  %call417 = call i64 @gs_revision_number() #7
  call void @emprintf_program_ident(%struct.gs_memory_s* %233, i8* %call416, i64 %call417) #7
  %234 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %memory418 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %234, i32 0, i32 3
  %235 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory418, align 8, !tbaa !5
  %call419 = call i32 (%struct.gs_memory_s*, i8*, ...) @errprintf(%struct.gs_memory_s* %235, i8* getelementptr inbounds ([85 x i8], [85 x i8]* @.str.143, i32 0, i32 0)) #7
  store i32 -1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.612

sw.default:                                       ; preds = %if.then.370
  %236 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %memory420 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %236, i32 0, i32 3
  %237 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory420, align 8, !tbaa !5
  %call421 = call i8* @gs_program_name() #7
  %call422 = call i64 @gs_revision_number() #7
  call void @emprintf_program_ident(%struct.gs_memory_s* %237, i8* %call421, i64 %call422) #7
  %238 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %memory423 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %238, i32 0, i32 3
  %239 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory423, align 8, !tbaa !5
  %call424 = call i32 (%struct.gs_memory_s*, i8*, ...) @errprintf(%struct.gs_memory_s* %239, i8* getelementptr inbounds ([132 x i8], [132 x i8]* @.str.144, i32 0, i32 0)) #7
  %240 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %AbortPDFAX425 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %240, i32 0, i32 110
  store i32 1, i32* %AbortPDFAX425, align 4, !tbaa !284
  %241 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %PDFX426 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %241, i32 0, i32 108
  store i32 0, i32* %PDFX426, align 4, !tbaa !245
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %if.end.413, %sw.bb
  br label %if.end.427

if.end.427:                                       ; preds = %sw.epilog, %lor.lhs.false.365
  br label %if.end.428

if.end.428:                                       ; preds = %if.end.427, %if.end.348
  %242 = load %struct.cos_value_s*, %struct.cos_value_s** %v_cropbox, align 8, !tbaa !1
  %cmp429 = icmp ne %struct.cos_value_s* %242, null
  br i1 %cmp429, label %land.lhs.true.431, label %if.end.582

land.lhs.true.431:                                ; preds = %if.end.428
  %243 = load %struct.cos_value_s*, %struct.cos_value_s** %v_cropbox, align 8, !tbaa !1
  %value_type432 = getelementptr inbounds %struct.cos_value_s, %struct.cos_value_s* %243, i32 0, i32 0
  %244 = load i32, i32* %value_type432, align 4, !tbaa !276
  %cmp433 = icmp eq i32 %244, 0
  br i1 %cmp433, label %if.then.435, label %if.end.582

if.then.435:                                      ; preds = %land.lhs.true.431
  %245 = bitcast i8** %p436 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %245) #2
  %246 = load %struct.cos_value_s*, %struct.cos_value_s** %v_cropbox, align 8, !tbaa !1
  %contents437 = getelementptr inbounds %struct.cos_value_s, %struct.cos_value_s* %246, i32 0, i32 1
  %chars438 = bitcast %union.vc_* %contents437 to %struct.gs_string_s*
  %data439 = getelementptr inbounds %struct.gs_string_s, %struct.gs_string_s* %chars438, i32 0, i32 0
  %247 = load i8*, i8** %data439, align 8, !tbaa !278
  store i8* %247, i8** %p436, align 8, !tbaa !1
  %248 = bitcast [100 x i8]* %buf440 to i8*
  call void @llvm.lifetime.start(i64 100, i8* %248) #2
  %249 = bitcast i32* %l441 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %249) #2
  %250 = load %struct.cos_value_s*, %struct.cos_value_s** %v_cropbox, align 8, !tbaa !1
  %contents442 = getelementptr inbounds %struct.cos_value_s, %struct.cos_value_s* %250, i32 0, i32 1
  %chars443 = bitcast %union.vc_* %contents442 to %struct.gs_string_s*
  %size444 = getelementptr inbounds %struct.gs_string_s, %struct.gs_string_s* %chars443, i32 0, i32 1
  %251 = load i32, i32* %size444, align 4, !tbaa !279
  %conv445 = zext i32 %251 to i64
  %cmp446 = icmp ult i64 %conv445, 99
  br i1 %cmp446, label %cond.true.448, label %cond.false.453

cond.true.448:                                    ; preds = %if.then.435
  %252 = load %struct.cos_value_s*, %struct.cos_value_s** %v_cropbox, align 8, !tbaa !1
  %contents449 = getelementptr inbounds %struct.cos_value_s, %struct.cos_value_s* %252, i32 0, i32 1
  %chars450 = bitcast %union.vc_* %contents449 to %struct.gs_string_s*
  %size451 = getelementptr inbounds %struct.gs_string_s, %struct.gs_string_s* %chars450, i32 0, i32 1
  %253 = load i32, i32* %size451, align 4, !tbaa !279
  %conv452 = zext i32 %253 to i64
  br label %cond.end.454

cond.false.453:                                   ; preds = %if.then.435
  br label %cond.end.454

cond.end.454:                                     ; preds = %cond.false.453, %cond.true.448
  %cond455 = phi i64 [ %conv452, %cond.true.448 ], [ 99, %cond.false.453 ]
  %conv456 = trunc i64 %cond455 to i32
  store i32 %conv456, i32* %l441, align 4, !tbaa !54
  %254 = bitcast [4 x float]* %temp457 to i8*
  call void @llvm.lifetime.start(i64 16, i8* %254) #2
  %arraydecay458 = getelementptr inbounds [100 x i8], [100 x i8]* %buf440, i32 0, i32 0
  %255 = load i8*, i8** %p436, align 8, !tbaa !1
  %256 = load i32, i32* %l441, align 4, !tbaa !54
  %conv459 = sext i32 %256 to i64
  %call460 = call i8* @memcpy(i8* %arraydecay458, i8* %255, i64 %conv459) #8
  %257 = load i32, i32* %l441, align 4, !tbaa !54
  %idxprom461 = sext i32 %257 to i64
  %arrayidx462 = getelementptr inbounds [100 x i8], [100 x i8]* %buf440, i32 0, i64 %idxprom461
  store i8 0, i8* %arrayidx462, align 1, !tbaa !147
  %arraydecay463 = getelementptr inbounds [100 x i8], [100 x i8]* %buf440, i32 0, i32 0
  %arrayidx464 = getelementptr inbounds [4 x float], [4 x float]* %temp457, i32 0, i64 0
  %arrayidx465 = getelementptr inbounds [4 x float], [4 x float]* %temp457, i32 0, i64 1
  %arrayidx466 = getelementptr inbounds [4 x float], [4 x float]* %temp457, i32 0, i64 2
  %arrayidx467 = getelementptr inbounds [4 x float], [4 x float]* %temp457, i32 0, i64 3
  %call468 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %arraydecay463, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.140, i32 0, i32 0), float* %arrayidx464, float* %arrayidx465, float* %arrayidx466, float* %arrayidx467) #8
  %cmp469 = icmp eq i32 %call468, 4
  br i1 %cmp469, label %if.then.471, label %if.end.578

if.then.471:                                      ; preds = %cond.end.454
  %258 = load %struct.pdf_page_s*, %struct.pdf_page_s** %page, align 8, !tbaa !1
  %Page472 = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %258, i32 0, i32 0
  %259 = load %struct.cos_dict_s*, %struct.cos_dict_s** %Page472, align 8, !tbaa !125
  %call473 = call i32 @cos_dict_delete_c_key(%struct.cos_dict_s* %259, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.138, i32 0, i32 0)) #7
  %260 = load %struct.stream_s*, %struct.stream_s** %s, align 8, !tbaa !1
  %arrayidx474 = getelementptr inbounds [4 x float], [4 x float]* %temp457, i32 0, i64 0
  %261 = load float, float* %arrayidx474, align 4, !tbaa !257
  %conv475 = fpext float %261 to double
  %arrayidx476 = getelementptr inbounds [4 x float], [4 x float]* %temp457, i32 0, i64 1
  %262 = load float, float* %arrayidx476, align 4, !tbaa !257
  %conv477 = fpext float %262 to double
  %arrayidx478 = getelementptr inbounds [4 x float], [4 x float]* %temp457, i32 0, i64 2
  %263 = load float, float* %arrayidx478, align 4, !tbaa !257
  %conv479 = fpext float %263 to double
  %arrayidx480 = getelementptr inbounds [4 x float], [4 x float]* %temp457, i32 0, i64 3
  %264 = load float, float* %arrayidx480, align 4, !tbaa !257
  %conv481 = fpext float %264 to double
  %call482 = call i8* @pprintg4(%struct.stream_s* %260, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.145, i32 0, i32 0), double %conv475, double %conv477, double %conv479, double %conv481) #7
  %arrayidx483 = getelementptr inbounds [4 x double], [4 x double]* %trimbox, i32 0, i64 0
  %265 = load double, double* %arrayidx483, align 8, !tbaa !248
  %arrayidx484 = getelementptr inbounds [4 x float], [4 x float]* %temp457, i32 0, i64 0
  %266 = load float, float* %arrayidx484, align 4, !tbaa !257
  %conv485 = fpext float %266 to double
  %cmp486 = fcmp olt double %265, %conv485
  br i1 %cmp486, label %if.then.506, label %lor.lhs.false.488

lor.lhs.false.488:                                ; preds = %if.then.471
  %arrayidx489 = getelementptr inbounds [4 x double], [4 x double]* %trimbox, i32 0, i64 1
  %267 = load double, double* %arrayidx489, align 8, !tbaa !248
  %arrayidx490 = getelementptr inbounds [4 x float], [4 x float]* %temp457, i32 0, i64 1
  %268 = load float, float* %arrayidx490, align 4, !tbaa !257
  %conv491 = fpext float %268 to double
  %cmp492 = fcmp olt double %267, %conv491
  br i1 %cmp492, label %if.then.506, label %lor.lhs.false.494

lor.lhs.false.494:                                ; preds = %lor.lhs.false.488
  %arrayidx495 = getelementptr inbounds [4 x double], [4 x double]* %trimbox, i32 0, i64 2
  %269 = load double, double* %arrayidx495, align 8, !tbaa !248
  %arrayidx496 = getelementptr inbounds [4 x float], [4 x float]* %temp457, i32 0, i64 2
  %270 = load float, float* %arrayidx496, align 4, !tbaa !257
  %conv497 = fpext float %270 to double
  %cmp498 = fcmp ogt double %269, %conv497
  br i1 %cmp498, label %if.then.506, label %lor.lhs.false.500

lor.lhs.false.500:                                ; preds = %lor.lhs.false.494
  %arrayidx501 = getelementptr inbounds [4 x double], [4 x double]* %trimbox, i32 0, i64 3
  %271 = load double, double* %arrayidx501, align 8, !tbaa !248
  %arrayidx502 = getelementptr inbounds [4 x float], [4 x float]* %temp457, i32 0, i64 3
  %272 = load float, float* %arrayidx502, align 4, !tbaa !257
  %conv503 = fpext float %272 to double
  %cmp504 = fcmp ogt double %271, %conv503
  br i1 %cmp504, label %if.then.506, label %if.end.577

if.then.506:                                      ; preds = %lor.lhs.false.500, %lor.lhs.false.494, %lor.lhs.false.488, %if.then.471
  %273 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %PDFACompatibilityPolicy507 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %273, i32 0, i32 239
  %274 = load i32, i32* %PDFACompatibilityPolicy507, align 4, !tbaa !283
  switch i32 %274, label %sw.default.568 [
    i32 0, label %sw.bb.508
    i32 1, label %sw.bb.516
    i32 2, label %sw.bb.562
  ]

sw.bb.508:                                        ; preds = %if.then.506
  %275 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %memory509 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %275, i32 0, i32 3
  %276 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory509, align 8, !tbaa !5
  %call510 = call i8* @gs_program_name() #7
  %call511 = call i64 @gs_revision_number() #7
  call void @emprintf_program_ident(%struct.gs_memory_s* %276, i8* %call510, i64 %call511) #7
  %277 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %memory512 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %277, i32 0, i32 3
  %278 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory512, align 8, !tbaa !5
  %call513 = call i32 (%struct.gs_memory_s*, i8*, ...) @errprintf(%struct.gs_memory_s* %278, i8* getelementptr inbounds ([95 x i8], [95 x i8]* @.str.146, i32 0, i32 0)) #7
  %279 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %AbortPDFAX514 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %279, i32 0, i32 110
  store i32 1, i32* %AbortPDFAX514, align 4, !tbaa !284
  %280 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %PDFX515 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %280, i32 0, i32 108
  store i32 0, i32* %PDFX515, align 4, !tbaa !245
  br label %sw.epilog.576

sw.bb.516:                                        ; preds = %if.then.506
  %281 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %memory517 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %281, i32 0, i32 3
  %282 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory517, align 8, !tbaa !5
  %call518 = call i8* @gs_program_name() #7
  %call519 = call i64 @gs_revision_number() #7
  call void @emprintf_program_ident(%struct.gs_memory_s* %282, i8* %call518, i64 %call519) #7
  %283 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %memory520 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %283, i32 0, i32 3
  %284 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory520, align 8, !tbaa !5
  %call521 = call i32 (%struct.gs_memory_s*, i8*, ...) @errprintf(%struct.gs_memory_s* %284, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.147, i32 0, i32 0)) #7
  %arrayidx522 = getelementptr inbounds [4 x double], [4 x double]* %trimbox, i32 0, i64 0
  %285 = load double, double* %arrayidx522, align 8, !tbaa !248
  %arrayidx523 = getelementptr inbounds [4 x float], [4 x float]* %temp457, i32 0, i64 0
  %286 = load float, float* %arrayidx523, align 4, !tbaa !257
  %conv524 = fpext float %286 to double
  %cmp525 = fcmp olt double %285, %conv524
  br i1 %cmp525, label %if.then.527, label %if.end.531

if.then.527:                                      ; preds = %sw.bb.516
  %arrayidx528 = getelementptr inbounds [4 x float], [4 x float]* %temp457, i32 0, i64 0
  %287 = load float, float* %arrayidx528, align 4, !tbaa !257
  %conv529 = fpext float %287 to double
  %arrayidx530 = getelementptr inbounds [4 x double], [4 x double]* %trimbox, i32 0, i64 0
  store double %conv529, double* %arrayidx530, align 8, !tbaa !248
  br label %if.end.531

if.end.531:                                       ; preds = %if.then.527, %sw.bb.516
  %arrayidx532 = getelementptr inbounds [4 x double], [4 x double]* %trimbox, i32 0, i64 1
  %288 = load double, double* %arrayidx532, align 8, !tbaa !248
  %arrayidx533 = getelementptr inbounds [4 x float], [4 x float]* %temp457, i32 0, i64 1
  %289 = load float, float* %arrayidx533, align 4, !tbaa !257
  %conv534 = fpext float %289 to double
  %cmp535 = fcmp olt double %288, %conv534
  br i1 %cmp535, label %if.then.537, label %if.end.541

if.then.537:                                      ; preds = %if.end.531
  %arrayidx538 = getelementptr inbounds [4 x float], [4 x float]* %temp457, i32 0, i64 1
  %290 = load float, float* %arrayidx538, align 4, !tbaa !257
  %conv539 = fpext float %290 to double
  %arrayidx540 = getelementptr inbounds [4 x double], [4 x double]* %trimbox, i32 0, i64 1
  store double %conv539, double* %arrayidx540, align 8, !tbaa !248
  br label %if.end.541

if.end.541:                                       ; preds = %if.then.537, %if.end.531
  %arrayidx542 = getelementptr inbounds [4 x double], [4 x double]* %trimbox, i32 0, i64 2
  %291 = load double, double* %arrayidx542, align 8, !tbaa !248
  %arrayidx543 = getelementptr inbounds [4 x float], [4 x float]* %temp457, i32 0, i64 2
  %292 = load float, float* %arrayidx543, align 4, !tbaa !257
  %conv544 = fpext float %292 to double
  %cmp545 = fcmp ogt double %291, %conv544
  br i1 %cmp545, label %if.then.547, label %if.end.551

if.then.547:                                      ; preds = %if.end.541
  %arrayidx548 = getelementptr inbounds [4 x float], [4 x float]* %temp457, i32 0, i64 2
  %293 = load float, float* %arrayidx548, align 4, !tbaa !257
  %conv549 = fpext float %293 to double
  %arrayidx550 = getelementptr inbounds [4 x double], [4 x double]* %trimbox, i32 0, i64 2
  store double %conv549, double* %arrayidx550, align 8, !tbaa !248
  br label %if.end.551

if.end.551:                                       ; preds = %if.then.547, %if.end.541
  %arrayidx552 = getelementptr inbounds [4 x double], [4 x double]* %trimbox, i32 0, i64 3
  %294 = load double, double* %arrayidx552, align 8, !tbaa !248
  %arrayidx553 = getelementptr inbounds [4 x float], [4 x float]* %temp457, i32 0, i64 3
  %295 = load float, float* %arrayidx553, align 4, !tbaa !257
  %conv554 = fpext float %295 to double
  %cmp555 = fcmp ogt double %294, %conv554
  br i1 %cmp555, label %if.then.557, label %if.end.561

if.then.557:                                      ; preds = %if.end.551
  %arrayidx558 = getelementptr inbounds [4 x float], [4 x float]* %temp457, i32 0, i64 3
  %296 = load float, float* %arrayidx558, align 4, !tbaa !257
  %conv559 = fpext float %296 to double
  %arrayidx560 = getelementptr inbounds [4 x double], [4 x double]* %trimbox, i32 0, i64 3
  store double %conv559, double* %arrayidx560, align 8, !tbaa !248
  br label %if.end.561

if.end.561:                                       ; preds = %if.then.557, %if.end.551
  br label %sw.epilog.576

sw.bb.562:                                        ; preds = %if.then.506
  %297 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %memory563 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %297, i32 0, i32 3
  %298 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory563, align 8, !tbaa !5
  %call564 = call i8* @gs_program_name() #7
  %call565 = call i64 @gs_revision_number() #7
  call void @emprintf_program_ident(%struct.gs_memory_s* %298, i8* %call564, i64 %call565) #7
  %299 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %memory566 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %299, i32 0, i32 3
  %300 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory566, align 8, !tbaa !5
  %call567 = call i32 (%struct.gs_memory_s*, i8*, ...) @errprintf(%struct.gs_memory_s* %300, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str.148, i32 0, i32 0)) #7
  store i32 -1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

sw.default.568:                                   ; preds = %if.then.506
  %301 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %memory569 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %301, i32 0, i32 3
  %302 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory569, align 8, !tbaa !5
  %call570 = call i8* @gs_program_name() #7
  %call571 = call i64 @gs_revision_number() #7
  call void @emprintf_program_ident(%struct.gs_memory_s* %302, i8* %call570, i64 %call571) #7
  %303 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %memory572 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %303, i32 0, i32 3
  %304 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory572, align 8, !tbaa !5
  %call573 = call i32 (%struct.gs_memory_s*, i8*, ...) @errprintf(%struct.gs_memory_s* %304, i8* getelementptr inbounds ([131 x i8], [131 x i8]* @.str.149, i32 0, i32 0)) #7
  %305 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %AbortPDFAX574 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %305, i32 0, i32 110
  store i32 1, i32* %AbortPDFAX574, align 4, !tbaa !284
  %306 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %PDFX575 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %306, i32 0, i32 108
  store i32 0, i32* %PDFX575, align 4, !tbaa !245
  br label %sw.epilog.576

sw.epilog.576:                                    ; preds = %sw.default.568, %if.end.561, %sw.bb.508
  br label %if.end.577

if.end.577:                                       ; preds = %sw.epilog.576, %lor.lhs.false.500
  br label %if.end.578

if.end.578:                                       ; preds = %if.end.577, %cond.end.454
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.578, %sw.bb.562
  %307 = bitcast [4 x float]* %temp457 to i8*
  call void @llvm.lifetime.end(i64 16, i8* %307) #2
  %308 = bitcast i32* %l441 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %308) #2
  %309 = bitcast [100 x i8]* %buf440 to i8*
  call void @llvm.lifetime.end(i64 100, i8* %309) #2
  %310 = bitcast i8** %p436 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %310) #2
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.612 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.582

if.end.582:                                       ; preds = %cleanup.cont, %land.lhs.true.431, %if.end.428
  %311 = load %struct.pdf_page_s*, %struct.pdf_page_s** %page, align 8, !tbaa !1
  %Page583 = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %311, i32 0, i32 0
  %312 = load %struct.cos_dict_s*, %struct.cos_dict_s** %Page583, align 8, !tbaa !125
  %call584 = call %struct.cos_value_s* @cos_dict_find_c_key(%struct.cos_dict_s* %312, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.136, i32 0, i32 0)) #7
  %cmp585 = icmp eq %struct.cos_value_s* %call584, null
  br i1 %cmp585, label %land.lhs.true.587, label %if.end.598

land.lhs.true.587:                                ; preds = %if.end.582
  %313 = load %struct.pdf_page_s*, %struct.pdf_page_s** %page, align 8, !tbaa !1
  %Page588 = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %313, i32 0, i32 0
  %314 = load %struct.cos_dict_s*, %struct.cos_dict_s** %Page588, align 8, !tbaa !125
  %call589 = call %struct.cos_value_s* @cos_dict_find_c_key(%struct.cos_dict_s* %314, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.137, i32 0, i32 0)) #7
  %cmp590 = icmp eq %struct.cos_value_s* %call589, null
  br i1 %cmp590, label %if.then.592, label %if.end.598

if.then.592:                                      ; preds = %land.lhs.true.587
  %315 = load %struct.stream_s*, %struct.stream_s** %s, align 8, !tbaa !1
  %arrayidx593 = getelementptr inbounds [4 x double], [4 x double]* %trimbox, i32 0, i64 0
  %316 = load double, double* %arrayidx593, align 8, !tbaa !248
  %arrayidx594 = getelementptr inbounds [4 x double], [4 x double]* %trimbox, i32 0, i64 1
  %317 = load double, double* %arrayidx594, align 8, !tbaa !248
  %arrayidx595 = getelementptr inbounds [4 x double], [4 x double]* %trimbox, i32 0, i64 2
  %318 = load double, double* %arrayidx595, align 8, !tbaa !248
  %arrayidx596 = getelementptr inbounds [4 x double], [4 x double]* %trimbox, i32 0, i64 3
  %319 = load double, double* %arrayidx596, align 8, !tbaa !248
  %call597 = call i8* @pprintg4(%struct.stream_s* %315, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.150, i32 0, i32 0), double %316, double %317, double %318, double %319) #7
  br label %if.end.598

if.end.598:                                       ; preds = %if.then.592, %land.lhs.true.587, %if.end.582
  %320 = load i32, i32* %print_bleedbox, align 4, !tbaa !54
  %tobool599 = icmp ne i32 %320, 0
  br i1 %tobool599, label %land.lhs.true.600, label %if.end.611

land.lhs.true.600:                                ; preds = %if.end.598
  %321 = load %struct.pdf_page_s*, %struct.pdf_page_s** %page, align 8, !tbaa !1
  %Page601 = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %321, i32 0, i32 0
  %322 = load %struct.cos_dict_s*, %struct.cos_dict_s** %Page601, align 8, !tbaa !125
  %call602 = call %struct.cos_value_s* @cos_dict_find_c_key(%struct.cos_dict_s* %322, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.139, i32 0, i32 0)) #7
  %cmp603 = icmp eq %struct.cos_value_s* %call602, null
  br i1 %cmp603, label %if.then.605, label %if.end.611

if.then.605:                                      ; preds = %land.lhs.true.600
  %323 = load %struct.stream_s*, %struct.stream_s** %s, align 8, !tbaa !1
  %arrayidx606 = getelementptr inbounds [4 x double], [4 x double]* %bleedbox, i32 0, i64 0
  %324 = load double, double* %arrayidx606, align 8, !tbaa !248
  %arrayidx607 = getelementptr inbounds [4 x double], [4 x double]* %bleedbox, i32 0, i64 1
  %325 = load double, double* %arrayidx607, align 8, !tbaa !248
  %arrayidx608 = getelementptr inbounds [4 x double], [4 x double]* %bleedbox, i32 0, i64 2
  %326 = load double, double* %arrayidx608, align 8, !tbaa !248
  %arrayidx609 = getelementptr inbounds [4 x double], [4 x double]* %bleedbox, i32 0, i64 3
  %327 = load double, double* %arrayidx609, align 8, !tbaa !248
  %call610 = call i8* @pprintg4(%struct.stream_s* %323, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.151, i32 0, i32 0), double %324, double %325, double %326, double %327) #7
  br label %if.end.611

if.end.611:                                       ; preds = %if.then.605, %land.lhs.true.600, %if.end.598
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.612

cleanup.612:                                      ; preds = %if.end.611, %cleanup, %sw.bb.414
  %328 = bitcast i32* %print_bleedbox to i8*
  call void @llvm.lifetime.end(i64 4, i8* %328) #2
  %329 = bitcast [4 x double]* %bleedbox to i8*
  call void @llvm.lifetime.end(i64 32, i8* %329) #2
  %330 = bitcast [4 x double]* %trimbox to i8*
  call void @llvm.lifetime.end(i64 32, i8* %330) #2
  %331 = bitcast %struct.cos_value_s** %v_bleedbox to i8*
  call void @llvm.lifetime.end(i64 8, i8* %331) #2
  %332 = bitcast %struct.cos_value_s** %v_cropbox to i8*
  call void @llvm.lifetime.end(i64 8, i8* %332) #2
  %333 = bitcast %struct.cos_value_s** %v_artbox to i8*
  call void @llvm.lifetime.end(i64 8, i8* %333) #2
  %334 = bitcast %struct.cos_value_s** %v_trimbox to i8*
  call void @llvm.lifetime.end(i64 8, i8* %334) #2
  %cleanup.dest.619 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.619, label %cleanup.706 [
    i32 0, label %cleanup.cont.620
  ]

cleanup.cont.620:                                 ; preds = %cleanup.612
  br label %if.end.621

if.end.621:                                       ; preds = %cleanup.cont.620, %entry
  %335 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %336 = load %struct.pdf_page_s*, %struct.pdf_page_s** %page, align 8, !tbaa !1
  call void @pdf_print_orientation(%struct.gx_device_pdf_s* %335, %struct.pdf_page_s* %336) #7
  %337 = load %struct.stream_s*, %struct.stream_s** %s, align 8, !tbaa !1
  %338 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %Pages = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %338, i32 0, i32 151
  %339 = load %struct.cos_dict_s*, %struct.cos_dict_s** %Pages, align 8, !tbaa !113
  %id = getelementptr inbounds %struct.cos_dict_s, %struct.cos_dict_s* %339, i32 0, i32 1
  %340 = load i64, i64* %id, align 8, !tbaa !109
  %call622 = call i8* @pprintld1(%struct.stream_s* %337, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.152, i32 0, i32 0), i64 %340) #7
  %341 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ForOPDFRead = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %341, i32 0, i32 99
  %342 = load i32, i32* %ForOPDFRead, align 4, !tbaa !121
  %tobool623 = icmp ne i32 %342, 0
  br i1 %tobool623, label %land.lhs.true.624, label %if.end.634

land.lhs.true.624:                                ; preds = %if.end.621
  %343 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %DoNumCopies = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %343, i32 0, i32 236
  %344 = load i32, i32* %DoNumCopies, align 4, !tbaa !256
  %tobool625 = icmp ne i32 %344, 0
  br i1 %tobool625, label %land.lhs.true.626, label %if.end.634

land.lhs.true.626:                                ; preds = %land.lhs.true.624
  %345 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ProduceDSC = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %345, i32 0, i32 105
  %346 = load i32, i32* %ProduceDSC, align 4, !tbaa !122
  %tobool627 = icmp ne i32 %346, 0
  br i1 %tobool627, label %if.end.634, label %if.then.628

if.then.628:                                      ; preds = %land.lhs.true.626
  %347 = load %struct.pdf_page_s*, %struct.pdf_page_s** %page, align 8, !tbaa !1
  %NumCopies_set = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %347, i32 0, i32 9
  %348 = load i32, i32* %NumCopies_set, align 4, !tbaa !260
  %tobool629 = icmp ne i32 %348, 0
  br i1 %tobool629, label %if.then.630, label %if.end.633

if.then.630:                                      ; preds = %if.then.628
  %349 = load %struct.stream_s*, %struct.stream_s** %s, align 8, !tbaa !1
  %350 = load %struct.pdf_page_s*, %struct.pdf_page_s** %page, align 8, !tbaa !1
  %NumCopies = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %350, i32 0, i32 10
  %351 = load i32, i32* %NumCopies, align 4, !tbaa !262
  %conv631 = sext i32 %351 to i64
  %call632 = call i8* @pprintld1(%struct.stream_s* %349, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.153, i32 0, i32 0), i64 %conv631) #7
  br label %if.end.633

if.end.633:                                       ; preds = %if.then.630, %if.then.628
  br label %if.end.634

if.end.634:                                       ; preds = %if.end.633, %land.lhs.true.626, %land.lhs.true.624, %if.end.621
  %352 = load %struct.pdf_page_s*, %struct.pdf_page_s** %page, align 8, !tbaa !1
  %group_id = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %352, i32 0, i32 5
  %353 = load i64, i64* %group_id, align 8, !tbaa !285
  %cmp635 = icmp sgt i64 %353, 0
  br i1 %cmp635, label %if.then.637, label %if.end.640

if.then.637:                                      ; preds = %if.end.634
  %354 = load %struct.stream_s*, %struct.stream_s** %s, align 8, !tbaa !1
  %355 = load %struct.pdf_page_s*, %struct.pdf_page_s** %page, align 8, !tbaa !1
  %group_id638 = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %355, i32 0, i32 5
  %356 = load i64, i64* %group_id638, align 8, !tbaa !285
  %call639 = call i8* @pprintld1(%struct.stream_s* %354, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.154, i32 0, i32 0), i64 %356) #7
  br label %if.end.640

if.end.640:                                       ; preds = %if.then.637, %if.end.634
  %357 = load %struct.stream_s*, %struct.stream_s** %s, align 8, !tbaa !1
  %call641 = call i32 @stream_puts(%struct.stream_s* %357, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.155, i32 0, i32 0)) #7
  %358 = load %struct.pdf_page_s*, %struct.pdf_page_s** %page, align 8, !tbaa !1
  %procsets = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %358, i32 0, i32 2
  %359 = load i32, i32* %procsets, align 4, !tbaa !286
  %and = and i32 %359, 1
  %tobool642 = icmp ne i32 %and, 0
  br i1 %tobool642, label %if.then.643, label %if.end.645

if.then.643:                                      ; preds = %if.end.640
  %360 = load %struct.stream_s*, %struct.stream_s** %s, align 8, !tbaa !1
  %call644 = call i32 @stream_puts(%struct.stream_s* %360, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.156, i32 0, i32 0)) #7
  br label %if.end.645

if.end.645:                                       ; preds = %if.then.643, %if.end.640
  %361 = load %struct.pdf_page_s*, %struct.pdf_page_s** %page, align 8, !tbaa !1
  %procsets646 = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %361, i32 0, i32 2
  %362 = load i32, i32* %procsets646, align 4, !tbaa !286
  %and647 = and i32 %362, 2
  %tobool648 = icmp ne i32 %and647, 0
  br i1 %tobool648, label %if.then.649, label %if.end.651

if.then.649:                                      ; preds = %if.end.645
  %363 = load %struct.stream_s*, %struct.stream_s** %s, align 8, !tbaa !1
  %call650 = call i32 @stream_puts(%struct.stream_s* %363, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.157, i32 0, i32 0)) #7
  br label %if.end.651

if.end.651:                                       ; preds = %if.then.649, %if.end.645
  %364 = load %struct.pdf_page_s*, %struct.pdf_page_s** %page, align 8, !tbaa !1
  %procsets652 = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %364, i32 0, i32 2
  %365 = load i32, i32* %procsets652, align 4, !tbaa !286
  %and653 = and i32 %365, 4
  %tobool654 = icmp ne i32 %and653, 0
  br i1 %tobool654, label %if.then.655, label %if.end.657

if.then.655:                                      ; preds = %if.end.651
  %366 = load %struct.stream_s*, %struct.stream_s** %s, align 8, !tbaa !1
  %call656 = call i32 @stream_puts(%struct.stream_s* %366, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.158, i32 0, i32 0)) #7
  br label %if.end.657

if.end.657:                                       ; preds = %if.then.655, %if.end.651
  %367 = load %struct.pdf_page_s*, %struct.pdf_page_s** %page, align 8, !tbaa !1
  %procsets658 = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %367, i32 0, i32 2
  %368 = load i32, i32* %procsets658, align 4, !tbaa !286
  %and659 = and i32 %368, 8
  %tobool660 = icmp ne i32 %and659, 0
  br i1 %tobool660, label %if.then.661, label %if.end.663

if.then.661:                                      ; preds = %if.end.657
  %369 = load %struct.stream_s*, %struct.stream_s** %s, align 8, !tbaa !1
  %call662 = call i32 @stream_puts(%struct.stream_s* %369, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.159, i32 0, i32 0)) #7
  br label %if.end.663

if.end.663:                                       ; preds = %if.then.661, %if.end.657
  %370 = load %struct.stream_s*, %struct.stream_s** %s, align 8, !tbaa !1
  %call664 = call i32 @stream_puts(%struct.stream_s* %370, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.60, i32 0, i32 0)) #7
  %371 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %371) #2
  store i32 0, i32* %i, align 4, !tbaa !54
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.663
  %372 = load i32, i32* %i, align 4, !tbaa !54
  %conv665 = sext i32 %372 to i64
  %cmp666 = icmp ult i64 %conv665, 7
  br i1 %cmp666, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %373 = load i32, i32* %i, align 4, !tbaa !54
  %idxprom668 = sext i32 %373 to i64
  %374 = load %struct.pdf_page_s*, %struct.pdf_page_s** %page, align 8, !tbaa !1
  %resource_ids = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %374, i32 0, i32 4
  %arrayidx669 = getelementptr inbounds [7 x i64], [7 x i64]* %resource_ids, i32 0, i64 %idxprom668
  %375 = load i64, i64* %arrayidx669, align 8, !tbaa !107
  %tobool670 = icmp ne i64 %375, 0
  br i1 %tobool670, label %land.lhs.true.671, label %if.end.683

land.lhs.true.671:                                ; preds = %for.body
  %376 = load i32, i32* %i, align 4, !tbaa !54
  %idxprom672 = sext i32 %376 to i64
  %arrayidx673 = getelementptr inbounds [0 x i8*], [0 x i8*]* @pdf_resource_type_names, i32 0, i64 %idxprom672
  %377 = load i8*, i8** %arrayidx673, align 8, !tbaa !1
  %tobool674 = icmp ne i8* %377, null
  br i1 %tobool674, label %if.then.675, label %if.end.683

if.then.675:                                      ; preds = %land.lhs.true.671
  %378 = load %struct.stream_s*, %struct.stream_s** %s, align 8, !tbaa !1
  %379 = load i32, i32* %i, align 4, !tbaa !54
  %idxprom676 = sext i32 %379 to i64
  %arrayidx677 = getelementptr inbounds [0 x i8*], [0 x i8*]* @pdf_resource_type_names, i32 0, i64 %idxprom676
  %380 = load i8*, i8** %arrayidx677, align 8, !tbaa !1
  %call678 = call i32 @stream_puts(%struct.stream_s* %378, i8* %380) #7
  %381 = load %struct.stream_s*, %struct.stream_s** %s, align 8, !tbaa !1
  %382 = load i32, i32* %i, align 4, !tbaa !54
  %idxprom679 = sext i32 %382 to i64
  %383 = load %struct.pdf_page_s*, %struct.pdf_page_s** %page, align 8, !tbaa !1
  %resource_ids680 = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %383, i32 0, i32 4
  %arrayidx681 = getelementptr inbounds [7 x i64], [7 x i64]* %resource_ids680, i32 0, i64 %idxprom679
  %384 = load i64, i64* %arrayidx681, align 8, !tbaa !107
  %call682 = call i8* @pprintld1(%struct.stream_s* %381, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.160, i32 0, i32 0), i64 %384) #7
  br label %if.end.683

if.end.683:                                       ; preds = %if.then.675, %land.lhs.true.671, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.683
  %385 = load i32, i32* %i, align 4, !tbaa !54
  %inc = add nsw i32 %385, 1
  store i32 %inc, i32* %i, align 4, !tbaa !54
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %386 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %386) #2
  %387 = load %struct.stream_s*, %struct.stream_s** %s, align 8, !tbaa !1
  %call684 = call i32 @stream_puts(%struct.stream_s* %387, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.54, i32 0, i32 0)) #7
  %388 = load %struct.pdf_page_s*, %struct.pdf_page_s** %page, align 8, !tbaa !1
  %Annots = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %388, i32 0, i32 6
  %389 = load %struct.cos_array_s*, %struct.cos_array_s** %Annots, align 8, !tbaa !179
  %tobool685 = icmp ne %struct.cos_array_s* %389, null
  br i1 %tobool685, label %if.then.686, label %if.end.695

if.then.686:                                      ; preds = %for.end
  %390 = load %struct.stream_s*, %struct.stream_s** %s, align 8, !tbaa !1
  %call687 = call i32 @stream_puts(%struct.stream_s* %390, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.161, i32 0, i32 0)) #7
  %391 = load %struct.pdf_page_s*, %struct.pdf_page_s** %page, align 8, !tbaa !1
  %Annots688 = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %391, i32 0, i32 6
  %392 = load %struct.cos_array_s*, %struct.cos_array_s** %Annots688, align 8, !tbaa !179
  %cos_procs = getelementptr inbounds %struct.cos_array_s, %struct.cos_array_s* %392, i32 0, i32 0
  %393 = bitcast %struct.cos_object_procs_s** %cos_procs to %struct.cos_object_s*
  %394 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %395 = load %struct.pdf_page_s*, %struct.pdf_page_s** %page, align 8, !tbaa !1
  %Annots689 = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %395, i32 0, i32 6
  %396 = load %struct.cos_array_s*, %struct.cos_array_s** %Annots689, align 8, !tbaa !179
  %id690 = getelementptr inbounds %struct.cos_array_s, %struct.cos_array_s* %396, i32 0, i32 1
  %397 = load i64, i64* %id690, align 8, !tbaa !135
  %call691 = call i32 @cos_write(%struct.cos_object_s* %393, %struct.gx_device_pdf_s* %394, i64 %397) #7
  %398 = load %struct.pdf_page_s*, %struct.pdf_page_s** %page, align 8, !tbaa !1
  %Annots692 = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %398, i32 0, i32 6
  %399 = load %struct.cos_array_s*, %struct.cos_array_s** %Annots692, align 8, !tbaa !179
  %cos_procs693 = getelementptr inbounds %struct.cos_array_s, %struct.cos_array_s* %399, i32 0, i32 0
  %400 = bitcast %struct.cos_object_procs_s** %cos_procs693 to %struct.cos_object_s*
  call void @cos_free(%struct.cos_object_s* %400, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.162, i32 0, i32 0)) #7
  %401 = load %struct.pdf_page_s*, %struct.pdf_page_s** %page, align 8, !tbaa !1
  %Annots694 = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %401, i32 0, i32 6
  store %struct.cos_array_s* null, %struct.cos_array_s** %Annots694, align 8, !tbaa !179
  br label %if.end.695

if.end.695:                                       ; preds = %if.then.686, %for.end
  %402 = load %struct.pdf_page_s*, %struct.pdf_page_s** %page, align 8, !tbaa !1
  %contents_id = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %402, i32 0, i32 3
  %403 = load i64, i64* %contents_id, align 8, !tbaa !258
  %cmp696 = icmp ne i64 %403, 0
  br i1 %cmp696, label %if.then.698, label %if.end.701

if.then.698:                                      ; preds = %if.end.695
  %404 = load %struct.stream_s*, %struct.stream_s** %s, align 8, !tbaa !1
  %405 = load %struct.pdf_page_s*, %struct.pdf_page_s** %page, align 8, !tbaa !1
  %contents_id699 = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %405, i32 0, i32 3
  %406 = load i64, i64* %contents_id699, align 8, !tbaa !258
  %call700 = call i8* @pprintld1(%struct.stream_s* %404, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.163, i32 0, i32 0), i64 %406) #7
  br label %if.end.701

if.end.701:                                       ; preds = %if.then.698, %if.end.695
  %407 = load %struct.pdf_page_s*, %struct.pdf_page_s** %page, align 8, !tbaa !1
  %Page702 = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %407, i32 0, i32 0
  %408 = load %struct.cos_dict_s*, %struct.cos_dict_s** %Page702, align 8, !tbaa !125
  %409 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %call703 = call i32 @cos_dict_elements_write(%struct.cos_dict_s* %408, %struct.gx_device_pdf_s* %409) #7
  %410 = load %struct.stream_s*, %struct.stream_s** %s, align 8, !tbaa !1
  %call704 = call i32 @stream_puts(%struct.stream_s* %410, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.54, i32 0, i32 0)) #7
  %411 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %call705 = call i32 @pdf_end_obj(%struct.gx_device_pdf_s* %411, i32 14) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.706

cleanup.706:                                      ; preds = %if.end.701, %cleanup.612
  %412 = bitcast %struct.stream_s** %s to i8*
  call void @llvm.lifetime.end(i64 8, i8* %412) #2
  %413 = bitcast [4 x double]* %mediabox to i8*
  call void @llvm.lifetime.end(i64 32, i8* %413) #2
  %414 = bitcast %struct.pdf_page_s** %page to i8*
  call void @llvm.lifetime.end(i64 8, i8* %414) #2
  %415 = bitcast i64* %page_id to i8*
  call void @llvm.lifetime.end(i64 8, i8* %415) #2
  %416 = load i32, i32* %retval
  ret i32 %416
}

declare void @pdf_print_resource_statistics(%struct.gx_device_pdf_s*) #0

declare i32 @pdf_free_resource_objects(%struct.gx_device_pdf_s*, i32) #0

declare void @pdf_clean_standard_fonts(%struct.gx_device_pdf_s*) #0

declare i32 @pdf_free_font_cache(%struct.gx_device_pdf_s*) #0

declare i32 @pdf_finish_resources(%struct.gx_device_pdf_s*, i32, i32 (%struct.gx_device_pdf_s*, %struct.pdf_resource_s*)*) #0

declare i32 @pdf_convert_truetype_font(%struct.gx_device_pdf_s*, %struct.pdf_resource_s*) #0

declare i32 @pdf_finish_FontDescriptor(%struct.gx_device_pdf_s*, %struct.pdf_resource_s*) #0

declare i32 @write_font_resources(%struct.gx_device_pdf_s*, %struct.pdf_resource_list_s*) #0

declare i32 @pdf_write_FontDescriptor(%struct.gx_device_pdf_s*, %struct.pdf_resource_s*) #0

declare i32 @pdf_write_bitmap_fonts_Encoding(%struct.gx_device_pdf_s*) #0

declare void @pdf_reverse_resource_chain(%struct.gx_device_pdf_s*, i32) #0

declare i64 @pdf_open_obj(%struct.gx_device_pdf_s*, i64, i32) #0

declare i32 @stream_puts(%struct.stream_s*, i8*) #0

declare i8* @pprintld1(%struct.stream_s*, i8*, i64) #0

declare i8* @pprintd1(%struct.stream_s*, i8*, i32) #0

; Function Attrs: nounwind uwtable
define internal void @pdf_print_orientation(%struct.gx_device_pdf_s* %pdev, %struct.pdf_page_s* %page) #1 {
entry:
  %pdev.addr = alloca %struct.gx_device_pdf_s*, align 8
  %page.addr = alloca %struct.pdf_page_s*, align 8
  %s = alloca %struct.stream_s*, align 8
  %dsc_orientation = alloca i32, align 4
  %ppdi = alloca %struct.pdf_page_dsc_info_s*, align 8
  %cleanup.dest.slot = alloca i32
  %ptr = alloca %struct.pdf_text_rotation_s*, align 8
  %angle = alloca i32, align 4
  store %struct.gx_device_pdf_s* %pdev, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  store %struct.pdf_page_s* %page, %struct.pdf_page_s** %page.addr, align 8, !tbaa !1
  %0 = bitcast %struct.stream_s** %s to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %strm = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %1, i32 0, i32 47
  %2 = load %struct.stream_s*, %struct.stream_s** %strm, align 8, !tbaa !56
  store %struct.stream_s* %2, %struct.stream_s** %s, align 8, !tbaa !1
  %3 = bitcast i32* %dsc_orientation to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #2
  store i32 -1, i32* %dsc_orientation, align 4, !tbaa !54
  %4 = bitcast %struct.pdf_page_dsc_info_s** %ppdi to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4) #2
  %5 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %params = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %5, i32 0, i32 73
  %AutoRotatePages = getelementptr inbounds %struct.psdf_distiller_params_s, %struct.psdf_distiller_params_s* %params, i32 0, i32 1
  %6 = load i32, i32* %AutoRotatePages, align 4, !tbaa !264
  %cmp = icmp eq i32 %6, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %7 = load %struct.pdf_page_s*, %struct.pdf_page_s** %page.addr, align 8, !tbaa !1
  %cmp1 = icmp ne %struct.pdf_page_s* %7, null
  br i1 %cmp1, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end
  %8 = load %struct.pdf_page_s*, %struct.pdf_page_s** %page.addr, align 8, !tbaa !1
  %dsc_info = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %8, i32 0, i32 8
  br label %cond.end

cond.false:                                       ; preds = %if.end
  %9 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %doc_dsc_info = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %9, i32 0, i32 130
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.pdf_page_dsc_info_s* [ %dsc_info, %cond.true ], [ %doc_dsc_info, %cond.false ]
  store %struct.pdf_page_dsc_info_s* %cond, %struct.pdf_page_dsc_info_s** %ppdi, align 8, !tbaa !1
  %10 = load %struct.pdf_page_dsc_info_s*, %struct.pdf_page_dsc_info_s** %ppdi, align 8, !tbaa !1
  %viewing_orientation = getelementptr inbounds %struct.pdf_page_dsc_info_s, %struct.pdf_page_dsc_info_s* %10, i32 0, i32 1
  %11 = load i32, i32* %viewing_orientation, align 4, !tbaa !287
  %cmp2 = icmp sge i32 %11, 0
  br i1 %cmp2, label %if.then.3, label %if.else

if.then.3:                                        ; preds = %cond.end
  %12 = load %struct.pdf_page_dsc_info_s*, %struct.pdf_page_dsc_info_s** %ppdi, align 8, !tbaa !1
  %viewing_orientation4 = getelementptr inbounds %struct.pdf_page_dsc_info_s, %struct.pdf_page_dsc_info_s* %12, i32 0, i32 1
  %13 = load i32, i32* %viewing_orientation4, align 4, !tbaa !287
  store i32 %13, i32* %dsc_orientation, align 4, !tbaa !54
  br label %if.end.9

if.else:                                          ; preds = %cond.end
  %14 = load %struct.pdf_page_dsc_info_s*, %struct.pdf_page_dsc_info_s** %ppdi, align 8, !tbaa !1
  %orientation = getelementptr inbounds %struct.pdf_page_dsc_info_s, %struct.pdf_page_dsc_info_s* %14, i32 0, i32 0
  %15 = load i32, i32* %orientation, align 4, !tbaa !288
  %cmp5 = icmp sge i32 %15, 0
  br i1 %cmp5, label %if.then.6, label %if.end.8

if.then.6:                                        ; preds = %if.else
  %16 = load %struct.pdf_page_dsc_info_s*, %struct.pdf_page_dsc_info_s** %ppdi, align 8, !tbaa !1
  %orientation7 = getelementptr inbounds %struct.pdf_page_dsc_info_s, %struct.pdf_page_dsc_info_s* %16, i32 0, i32 0
  %17 = load i32, i32* %orientation7, align 4, !tbaa !288
  store i32 %17, i32* %dsc_orientation, align 4, !tbaa !54
  br label %if.end.8

if.end.8:                                         ; preds = %if.then.6, %if.else
  br label %if.end.9

if.end.9:                                         ; preds = %if.end.8, %if.then.3
  %18 = load %struct.pdf_page_s*, %struct.pdf_page_s** %page.addr, align 8, !tbaa !1
  %cmp10 = icmp eq %struct.pdf_page_s* %18, null
  br i1 %cmp10, label %land.lhs.true, label %lor.lhs.false

land.lhs.true:                                    ; preds = %if.end.9
  %19 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %params11 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %19, i32 0, i32 73
  %AutoRotatePages12 = getelementptr inbounds %struct.psdf_distiller_params_s, %struct.psdf_distiller_params_s* %params11, i32 0, i32 1
  %20 = load i32, i32* %AutoRotatePages12, align 4, !tbaa !264
  %cmp13 = icmp eq i32 %20, 1
  br i1 %cmp13, label %if.then.19, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true, %if.end.9
  %21 = load %struct.pdf_page_s*, %struct.pdf_page_s** %page.addr, align 8, !tbaa !1
  %cmp14 = icmp ne %struct.pdf_page_s* %21, null
  br i1 %cmp14, label %land.lhs.true.15, label %lor.lhs.false.17

land.lhs.true.15:                                 ; preds = %lor.lhs.false
  %22 = load %struct.pdf_page_s*, %struct.pdf_page_s** %page.addr, align 8, !tbaa !1
  %text_rotation = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %22, i32 0, i32 7
  %Rotate = getelementptr inbounds %struct.pdf_text_rotation_s, %struct.pdf_text_rotation_s* %text_rotation, i32 0, i32 1
  %23 = load i32, i32* %Rotate, align 4, !tbaa !265
  %cmp16 = icmp sge i32 %23, 0
  br i1 %cmp16, label %if.then.19, label %lor.lhs.false.17

lor.lhs.false.17:                                 ; preds = %land.lhs.true.15, %lor.lhs.false
  %24 = load i32, i32* %dsc_orientation, align 4, !tbaa !54
  %cmp18 = icmp sge i32 %24, 0
  br i1 %cmp18, label %if.then.19, label %if.end.58

if.then.19:                                       ; preds = %lor.lhs.false.17, %land.lhs.true.15, %land.lhs.true
  %25 = bitcast %struct.pdf_text_rotation_s** %ptr to i8*
  call void @llvm.lifetime.start(i64 8, i8* %25) #2
  %26 = load %struct.pdf_page_s*, %struct.pdf_page_s** %page.addr, align 8, !tbaa !1
  %cmp20 = icmp ne %struct.pdf_page_s* %26, null
  br i1 %cmp20, label %cond.true.21, label %cond.false.23

cond.true.21:                                     ; preds = %if.then.19
  %27 = load %struct.pdf_page_s*, %struct.pdf_page_s** %page.addr, align 8, !tbaa !1
  %text_rotation22 = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %27, i32 0, i32 7
  br label %cond.end.25

cond.false.23:                                    ; preds = %if.then.19
  %28 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %text_rotation24 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %28, i32 0, i32 161
  br label %cond.end.25

cond.end.25:                                      ; preds = %cond.false.23, %cond.true.21
  %cond26 = phi %struct.pdf_text_rotation_s* [ %text_rotation22, %cond.true.21 ], [ %text_rotation24, %cond.false.23 ]
  store %struct.pdf_text_rotation_s* %cond26, %struct.pdf_text_rotation_s** %ptr, align 8, !tbaa !1
  %29 = bitcast i32* %angle to i8*
  call void @llvm.lifetime.start(i64 4, i8* %29) #2
  store i32 -1, i32* %angle, align 4, !tbaa !54
  %30 = load i32, i32* %dsc_orientation, align 4, !tbaa !54
  %cmp27 = icmp eq i32 %30, 0
  br i1 %cmp27, label %if.then.28, label %if.else.37

if.then.28:                                       ; preds = %cond.end.25
  %31 = load %struct.pdf_text_rotation_s*, %struct.pdf_text_rotation_s** %ptr, align 8, !tbaa !1
  %Rotate29 = getelementptr inbounds %struct.pdf_text_rotation_s, %struct.pdf_text_rotation_s* %31, i32 0, i32 1
  %32 = load i32, i32* %Rotate29, align 4, !tbaa !289
  %cmp30 = icmp eq i32 %32, 0
  br i1 %cmp30, label %if.then.34, label %lor.lhs.false.31

lor.lhs.false.31:                                 ; preds = %if.then.28
  %33 = load %struct.pdf_text_rotation_s*, %struct.pdf_text_rotation_s** %ptr, align 8, !tbaa !1
  %Rotate32 = getelementptr inbounds %struct.pdf_text_rotation_s, %struct.pdf_text_rotation_s* %33, i32 0, i32 1
  %34 = load i32, i32* %Rotate32, align 4, !tbaa !289
  %cmp33 = icmp eq i32 %34, 180
  br i1 %cmp33, label %if.then.34, label %if.end.36

if.then.34:                                       ; preds = %lor.lhs.false.31, %if.then.28
  %35 = load %struct.pdf_text_rotation_s*, %struct.pdf_text_rotation_s** %ptr, align 8, !tbaa !1
  %Rotate35 = getelementptr inbounds %struct.pdf_text_rotation_s, %struct.pdf_text_rotation_s* %35, i32 0, i32 1
  %36 = load i32, i32* %Rotate35, align 4, !tbaa !289
  store i32 %36, i32* %angle, align 4, !tbaa !54
  br label %if.end.36

if.end.36:                                        ; preds = %if.then.34, %lor.lhs.false.31
  br label %if.end.50

if.else.37:                                       ; preds = %cond.end.25
  %37 = load i32, i32* %dsc_orientation, align 4, !tbaa !54
  %cmp38 = icmp eq i32 %37, 1
  br i1 %cmp38, label %if.then.39, label %if.end.49

if.then.39:                                       ; preds = %if.else.37
  %38 = load %struct.pdf_text_rotation_s*, %struct.pdf_text_rotation_s** %ptr, align 8, !tbaa !1
  %Rotate40 = getelementptr inbounds %struct.pdf_text_rotation_s, %struct.pdf_text_rotation_s* %38, i32 0, i32 1
  %39 = load i32, i32* %Rotate40, align 4, !tbaa !289
  %cmp41 = icmp eq i32 %39, 90
  br i1 %cmp41, label %if.then.45, label %lor.lhs.false.42

lor.lhs.false.42:                                 ; preds = %if.then.39
  %40 = load %struct.pdf_text_rotation_s*, %struct.pdf_text_rotation_s** %ptr, align 8, !tbaa !1
  %Rotate43 = getelementptr inbounds %struct.pdf_text_rotation_s, %struct.pdf_text_rotation_s* %40, i32 0, i32 1
  %41 = load i32, i32* %Rotate43, align 4, !tbaa !289
  %cmp44 = icmp eq i32 %41, 270
  br i1 %cmp44, label %if.then.45, label %if.else.47

if.then.45:                                       ; preds = %lor.lhs.false.42, %if.then.39
  %42 = load %struct.pdf_text_rotation_s*, %struct.pdf_text_rotation_s** %ptr, align 8, !tbaa !1
  %Rotate46 = getelementptr inbounds %struct.pdf_text_rotation_s, %struct.pdf_text_rotation_s* %42, i32 0, i32 1
  %43 = load i32, i32* %Rotate46, align 4, !tbaa !289
  store i32 %43, i32* %angle, align 4, !tbaa !54
  br label %if.end.48

if.else.47:                                       ; preds = %lor.lhs.false.42
  store i32 90, i32* %angle, align 4, !tbaa !54
  br label %if.end.48

if.end.48:                                        ; preds = %if.else.47, %if.then.45
  br label %if.end.49

if.end.49:                                        ; preds = %if.end.48, %if.else.37
  br label %if.end.50

if.end.50:                                        ; preds = %if.end.49, %if.end.36
  %44 = load i32, i32* %angle, align 4, !tbaa !54
  %cmp51 = icmp slt i32 %44, 0
  br i1 %cmp51, label %if.then.52, label %if.end.54

if.then.52:                                       ; preds = %if.end.50
  %45 = load %struct.pdf_text_rotation_s*, %struct.pdf_text_rotation_s** %ptr, align 8, !tbaa !1
  %Rotate53 = getelementptr inbounds %struct.pdf_text_rotation_s, %struct.pdf_text_rotation_s* %45, i32 0, i32 1
  %46 = load i32, i32* %Rotate53, align 4, !tbaa !289
  store i32 %46, i32* %angle, align 4, !tbaa !54
  br label %if.end.54

if.end.54:                                        ; preds = %if.then.52, %if.end.50
  %47 = load i32, i32* %angle, align 4, !tbaa !54
  %cmp55 = icmp sge i32 %47, 0
  br i1 %cmp55, label %if.then.56, label %if.end.57

if.then.56:                                       ; preds = %if.end.54
  %48 = load %struct.stream_s*, %struct.stream_s** %s, align 8, !tbaa !1
  %49 = load i32, i32* %angle, align 4, !tbaa !54
  %call = call i8* @pprintd1(%struct.stream_s* %48, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.164, i32 0, i32 0), i32 %49) #7
  br label %if.end.57

if.end.57:                                        ; preds = %if.then.56, %if.end.54
  %50 = bitcast i32* %angle to i8*
  call void @llvm.lifetime.end(i64 4, i8* %50) #2
  %51 = bitcast %struct.pdf_text_rotation_s** %ptr to i8*
  call void @llvm.lifetime.end(i64 8, i8* %51) #2
  br label %if.end.58

if.end.58:                                        ; preds = %if.end.57, %lor.lhs.false.17
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.58, %if.then
  %52 = bitcast %struct.pdf_page_dsc_info_s** %ppdi to i8*
  call void @llvm.lifetime.end(i64 8, i8* %52) #2
  %53 = bitcast i32* %dsc_orientation to i8*
  call void @llvm.lifetime.end(i64 4, i8* %53) #2
  %54 = bitcast %struct.stream_s** %s to i8*
  call void @llvm.lifetime.end(i64 8, i8* %54) #2
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup, %cleanup
  ret void

unreachable:                                      ; preds = %cleanup
  unreachable
}

declare i32 @pdf_end_obj(%struct.gx_device_pdf_s*, i32) #0

declare i32 @pdfmark_close_outline(%struct.gx_device_pdf_s*) #0

declare i8* @pprintld2(%struct.stream_s*, i8*, i64, i64) #0

declare i32 @pdfmark_write_article(%struct.gx_device_pdf_s*, %struct.pdf_article_s*) #0

declare i32 @cos_write_object(%struct.cos_object_s*, %struct.gx_device_pdf_s*, i32) #0

declare i32 @cos_write_dict_as_ordered_array(%struct.cos_object_s*, %struct.gx_device_pdf_s*, i32) #0

declare i32 @pdfmark_end_pagelabels(%struct.gx_device_pdf_s*) #0

declare i32 @pdf_document_metadata(%struct.gx_device_pdf_s*) #0

declare i64 @pdf_begin_obj(%struct.gx_device_pdf_s*, i32) #0

declare void @cos_free(%struct.cos_object_s*, i8*) #0

declare i32 @cos_dict_objects_write(%struct.cos_dict_s*, %struct.gx_device_pdf_s*) #0

declare i32 @pdf_pop_namespace(%struct.gx_device_pdf_s*) #0

declare i32 @ps2write_dsc_header(%struct.gx_device_pdf_s*, i32) #0

declare i64 @stell(%struct.stream_s*) #0

declare i64 @gp_ftell_64(%struct._IO_FILE*) #0

declare i32 @gp_fseek_64(%struct._IO_FILE*, i64, i32) #0

declare void @pdf_copy_data(%struct.stream_s*, %struct._IO_FILE*, i64, %struct.stream_arcfour_state_s*) #0

declare i32 @spputc(%struct.stream_s*, i8 zeroext) #0

declare i8* @pprintd2(%struct.stream_s*, i8*, i32, i32) #0

declare i32 @cos_write(%struct.cos_object_s*, %struct.gx_device_pdf_s*, i64) #0

declare i64 @pdf_obj_ref(%struct.gx_device_pdf_s*) #0

declare i32 @pdf_put_string(%struct.gx_device_pdf_s*, i8*, i32) #0

; Function Attrs: nounwind uwtable
define internal i32 @find_end_xref_section(%struct.gx_device_pdf_s* %pdev, %struct._IO_FILE* %tfile, i64 %start, i64 %resource_pos) #1 {
entry:
  %retval = alloca i32, align 4
  %pdev.addr = alloca %struct.gx_device_pdf_s*, align 8
  %tfile.addr = alloca %struct._IO_FILE*, align 8
  %start.addr = alloca i64, align 8
  %resource_pos.addr = alloca i64, align 8
  %start_offset = alloca i64, align 8
  %i = alloca i64, align 8
  %r = alloca i64, align 8
  %pos = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.gx_device_pdf_s* %pdev, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  store %struct._IO_FILE* %tfile, %struct._IO_FILE** %tfile.addr, align 8, !tbaa !1
  store i64 %start, i64* %start.addr, align 8, !tbaa !107
  store i64 %resource_pos, i64* %resource_pos.addr, align 8, !tbaa !107
  %0 = bitcast i64* %start_offset to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = load i64, i64* %start.addr, align 8, !tbaa !107
  %2 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %FirstObjectNumber = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %2, i32 0, i32 93
  %3 = load i64, i64* %FirstObjectNumber, align 8, !tbaa !169
  %sub = sub nsw i64 %1, %3
  %mul = mul i64 %sub, 8
  store i64 %mul, i64* %start_offset, align 8, !tbaa !107
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %tfile.addr, align 8, !tbaa !1
  %5 = load i64, i64* %start_offset, align 8, !tbaa !107
  %call = call i32 @gp_fseek_64(%struct._IO_FILE* %4, i64 %5, i32 0) #7
  %6 = bitcast i64* %i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6) #2
  %7 = bitcast i64* %r to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7) #2
  %8 = load i64, i64* %start.addr, align 8, !tbaa !107
  store i64 %8, i64* %i, align 8, !tbaa !107
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %9 = load i64, i64* %i, align 8, !tbaa !107
  %10 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %next_id = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %10, i32 0, i32 148
  %11 = load i64, i64* %next_id, align 8, !tbaa !163
  %cmp = icmp slt i64 %9, %11
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %12 = bitcast i64* %pos to i8*
  call void @llvm.lifetime.start(i64 8, i8* %12) #2
  %13 = bitcast i64* %pos to i8*
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** %tfile.addr, align 8, !tbaa !1
  %call1 = call i64 @fread(i8* %13, i64 8, i64 1, %struct._IO_FILE* %14) #7
  store i64 %call1, i64* %r, align 8, !tbaa !107
  %15 = load i64, i64* %r, align 8, !tbaa !107
  %cmp2 = icmp ne i64 %15, 1
  br i1 %cmp2, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  store i32 -12, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %for.body
  %16 = load i64, i64* %pos, align 8, !tbaa !107
  %and = and i64 %16, -9223372036854775808
  %tobool = icmp ne i64 %and, 0
  br i1 %tobool, label %if.then.3, label %if.end.5

if.then.3:                                        ; preds = %if.end
  %17 = load i64, i64* %resource_pos.addr, align 8, !tbaa !107
  %sub4 = sub nsw i64 %17, -9223372036854775808
  %18 = load i64, i64* %pos, align 8, !tbaa !107
  %add = add nsw i64 %18, %sub4
  store i64 %add, i64* %pos, align 8, !tbaa !107
  br label %if.end.5

if.end.5:                                         ; preds = %if.then.3, %if.end
  %19 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %OPDFRead_procset_length = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %19, i32 0, i32 228
  %20 = load i32, i32* %OPDFRead_procset_length, align 4, !tbaa !170
  %conv = sext i32 %20 to i64
  %21 = load i64, i64* %pos, align 8, !tbaa !107
  %sub6 = sub nsw i64 %21, %conv
  store i64 %sub6, i64* %pos, align 8, !tbaa !107
  %22 = load i64, i64* %pos, align 8, !tbaa !107
  %cmp7 = icmp eq i64 %22, 0
  br i1 %cmp7, label %if.then.9, label %if.end.11

if.then.9:                                        ; preds = %if.end.5
  %23 = load i64, i64* %i, align 8, !tbaa !107
  %conv10 = trunc i64 %23 to i32
  store i32 %conv10, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.11:                                        ; preds = %if.end.5
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.11, %if.then.9, %if.then
  %24 = bitcast i64* %pos to i8*
  call void @llvm.lifetime.end(i64 8, i8* %24) #2
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.12 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %for.inc

for.inc:                                          ; preds = %cleanup.cont
  %25 = load i64, i64* %i, align 8, !tbaa !107
  %inc = add nsw i64 %25, 1
  store i64 %inc, i64* %i, align 8, !tbaa !107
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.12

cleanup.12:                                       ; preds = %for.end, %cleanup
  %26 = bitcast i64* %r to i8*
  call void @llvm.lifetime.end(i64 8, i8* %26) #2
  %27 = bitcast i64* %i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %27) #2
  %cleanup.dest.14 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.14, label %cleanup.18 [
    i32 0, label %cleanup.cont.15
  ]

cleanup.cont.15:                                  ; preds = %cleanup.12
  %28 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %next_id16 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %28, i32 0, i32 148
  %29 = load i64, i64* %next_id16, align 8, !tbaa !163
  %conv17 = trunc i64 %29 to i32
  store i32 %conv17, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.18

cleanup.18:                                       ; preds = %cleanup.cont.15, %cleanup.12
  %30 = bitcast i64* %start_offset to i8*
  call void @llvm.lifetime.end(i64 8, i8* %30) #2
  %31 = load i32, i32* %retval
  ret i32 %31
}

declare i64 @pdf_stell(%struct.gx_device_pdf_s*) #0

; Function Attrs: nounwind uwtable
define internal i32 @write_xref_section(%struct.gx_device_pdf_s* %pdev, %struct._IO_FILE* %tfile, i64 %start, i32 %end, i64 %resource_pos, i64* %Offsets) #1 {
entry:
  %retval = alloca i32, align 4
  %pdev.addr = alloca %struct.gx_device_pdf_s*, align 8
  %tfile.addr = alloca %struct._IO_FILE*, align 8
  %start.addr = alloca i64, align 8
  %end.addr = alloca i32, align 4
  %resource_pos.addr = alloca i64, align 8
  %Offsets.addr = alloca i64*, align 8
  %start_offset = alloca i64, align 8
  %i = alloca i64, align 8
  %r = alloca i64, align 8
  %pos = alloca i64, align 8
  %str = alloca [21 x i8], align 16
  %cleanup.dest.slot = alloca i32
  store %struct.gx_device_pdf_s* %pdev, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  store %struct._IO_FILE* %tfile, %struct._IO_FILE** %tfile.addr, align 8, !tbaa !1
  store i64 %start, i64* %start.addr, align 8, !tbaa !107
  store i32 %end, i32* %end.addr, align 4, !tbaa !54
  store i64 %resource_pos, i64* %resource_pos.addr, align 8, !tbaa !107
  store i64* %Offsets, i64** %Offsets.addr, align 8, !tbaa !1
  %0 = bitcast i64* %start_offset to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = load i64, i64* %start.addr, align 8, !tbaa !107
  %2 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %FirstObjectNumber = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %2, i32 0, i32 93
  %3 = load i64, i64* %FirstObjectNumber, align 8, !tbaa !169
  %sub = sub nsw i64 %1, %3
  %mul = mul i64 %sub, 8
  store i64 %mul, i64* %start_offset, align 8, !tbaa !107
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %tfile.addr, align 8, !tbaa !1
  %5 = load i64, i64* %start_offset, align 8, !tbaa !107
  %call = call i32 @gp_fseek_64(%struct._IO_FILE* %4, i64 %5, i32 0) #7
  %6 = bitcast i64* %i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6) #2
  %7 = bitcast i64* %r to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7) #2
  %8 = load i64, i64* %start.addr, align 8, !tbaa !107
  store i64 %8, i64* %i, align 8, !tbaa !107
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %9 = load i64, i64* %i, align 8, !tbaa !107
  %10 = load i32, i32* %end.addr, align 4, !tbaa !54
  %conv = sext i32 %10 to i64
  %cmp = icmp slt i64 %9, %conv
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %11 = bitcast i64* %pos to i8*
  call void @llvm.lifetime.start(i64 8, i8* %11) #2
  %12 = bitcast [21 x i8]* %str to i8*
  call void @llvm.lifetime.start(i64 21, i8* %12) #2
  %13 = bitcast i64* %pos to i8*
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** %tfile.addr, align 8, !tbaa !1
  %call2 = call i64 @fread(i8* %13, i64 8, i64 1, %struct._IO_FILE* %14) #7
  store i64 %call2, i64* %r, align 8, !tbaa !107
  %15 = load i64, i64* %r, align 8, !tbaa !107
  %cmp3 = icmp ne i64 %15, 1
  br i1 %cmp3, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  store i32 -12, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %for.body
  %16 = load i64, i64* %pos, align 8, !tbaa !107
  %and = and i64 %16, -9223372036854775808
  %tobool = icmp ne i64 %and, 0
  br i1 %tobool, label %if.then.5, label %if.end.7

if.then.5:                                        ; preds = %if.end
  %17 = load i64, i64* %resource_pos.addr, align 8, !tbaa !107
  %sub6 = sub nsw i64 %17, -9223372036854775808
  %18 = load i64, i64* %pos, align 8, !tbaa !107
  %add = add nsw i64 %18, %sub6
  store i64 %add, i64* %pos, align 8, !tbaa !107
  br label %if.end.7

if.end.7:                                         ; preds = %if.then.5, %if.end
  %19 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %OPDFRead_procset_length = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %19, i32 0, i32 228
  %20 = load i32, i32* %OPDFRead_procset_length, align 4, !tbaa !170
  %conv8 = sext i32 %20 to i64
  %21 = load i64, i64* %pos, align 8, !tbaa !107
  %sub9 = sub nsw i64 %21, %conv8
  store i64 %sub9, i64* %pos, align 8, !tbaa !107
  %22 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %Linearise = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %22, i32 0, i32 249
  %23 = load i32, i32* %Linearise, align 4, !tbaa !162
  %tobool10 = icmp ne i32 %23, 0
  br i1 %tobool10, label %if.end.15, label %if.then.11

if.then.11:                                       ; preds = %if.end.7
  %arraydecay = getelementptr inbounds [21 x i8], [21 x i8]* %str, i32 0, i32 0
  %24 = load i64, i64* %pos, align 8, !tbaa !107
  %call12 = call i32 (i8*, i8*, ...) @gs_sprintf(i8* %arraydecay, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.165, i32 0, i32 0), i64 %24) #7
  %25 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %strm = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %25, i32 0, i32 47
  %26 = load %struct.stream_s*, %struct.stream_s** %strm, align 8, !tbaa !56
  %arraydecay13 = getelementptr inbounds [21 x i8], [21 x i8]* %str, i32 0, i32 0
  %call14 = call i32 @stream_puts(%struct.stream_s* %26, i8* %arraydecay13) #7
  br label %if.end.15

if.end.15:                                        ; preds = %if.then.11, %if.end.7
  %27 = load i64*, i64** %Offsets.addr, align 8, !tbaa !1
  %tobool16 = icmp ne i64* %27, null
  br i1 %tobool16, label %if.then.17, label %if.end.18

if.then.17:                                       ; preds = %if.end.15
  %28 = load i64, i64* %pos, align 8, !tbaa !107
  %29 = load i64, i64* %i, align 8, !tbaa !107
  %30 = load i64*, i64** %Offsets.addr, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds i64, i64* %30, i64 %29
  store i64 %28, i64* %arrayidx, align 8, !tbaa !107
  br label %if.end.18

if.end.18:                                        ; preds = %if.then.17, %if.end.15
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.18, %if.then
  %31 = bitcast [21 x i8]* %str to i8*
  call void @llvm.lifetime.end(i64 21, i8* %31) #2
  %32 = bitcast i64* %pos to i8*
  call void @llvm.lifetime.end(i64 8, i8* %32) #2
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.20 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %for.inc

for.inc:                                          ; preds = %cleanup.cont
  %33 = load i64, i64* %i, align 8, !tbaa !107
  %inc = add nsw i64 %33, 1
  store i64 %inc, i64* %i, align 8, !tbaa !107
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.20

cleanup.20:                                       ; preds = %for.end, %cleanup
  %34 = bitcast i64* %r to i8*
  call void @llvm.lifetime.end(i64 8, i8* %34) #2
  %35 = bitcast i64* %i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %35) #2
  %cleanup.dest.22 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.22, label %cleanup.24 [
    i32 0, label %cleanup.cont.23
  ]

cleanup.cont.23:                                  ; preds = %cleanup.20
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.24

cleanup.24:                                       ; preds = %cleanup.cont.23, %cleanup.20
  %36 = bitcast i64* %start_offset to i8*
  call void @llvm.lifetime.end(i64 8, i8* %36) #2
  %37 = load i32, i32* %retval
  ret i32 %37
}

declare i8* @pprintld3(%struct.stream_s*, i8*, i64, i64, i64) #0

declare void @s_write_ps_string(%struct.stream_s*, i8*, i32, i32) #0

; Function Attrs: nounwind uwtable
define internal i32 @pdf_linearise(%struct.gx_device_pdf_s* %pdev, %struct.pdf_linearisation_s* %linear_params) #1 {
entry:
  %retval = alloca i32, align 4
  %pdev.addr = alloca %struct.gx_device_pdf_s*, align 8
  %linear_params.addr = alloca %struct.pdf_linearisation_s*, align 8
  %Buffer = alloca [1024 x i8], align 16
  %Header = alloca [32 x i8], align 16
  %Binary = alloca [9 x i8], align 1
  %LDict = alloca [1024 x i8], align 16
  %fileID = alloca [35 x i8], align 16
  %Pad = alloca i8, align 1
  %level = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %code = alloca i32, align 4
  %Part1To6 = alloca i32, align 4
  %Part7To8 = alloca i32, align 4
  %PartNone = alloca i32, align 4
  %Part9 = alloca i32, align 4
  %LDictObj = alloca i32, align 4
  %HintStreamObj = alloca i32, align 4
  %k = alloca i32, align 4
  %T = alloca i8, align 1
  %mainxref = alloca i64, align 8
  %Length = alloca i64, align 8
  %HintStreamLen = alloca i64, align 8
  %HintStreamStart = alloca i64, align 8
  %HintLength = alloca i64, align 8
  %SharedHintOffset = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %j188 = alloca i32, align 4
  %end = alloca i64, align 8
  %PageContentID = alloca i32, align 4
  %record = alloca %struct.linearisation_record_s*, align 8
  %pagehint = alloca %struct.page_hint_stream_s*, align 8
  %record652 = alloca %struct.linearisation_record_s*, align 8
  %page = alloca i32, align 4
  %pagehint675 = alloca %struct.page_hint_stream_s*, align 8
  %Temp = alloca i32*, align 8
  %page745 = alloca i32, align 4
  %pageID = alloca i32, align 4
  %LinearisedPageOffset = alloca i64, align 8
  %pagehint758 = alloca %struct.page_hint_stream_s*, align 8
  %hint = alloca %struct.page_hint_stream_s*, align 8
  %hint1032 = alloca %struct.page_hint_stream_s*, align 8
  %Num = alloca i32, align 4
  %hint1055 = alloca %struct.page_hint_stream_s*, align 8
  %Num1059 = alloca i32, align 4
  %hint1079 = alloca %struct.page_hint_stream_s*, align 8
  %hint1112 = alloca %struct.page_hint_stream_s*, align 8
  %hint1145 = alloca %struct.page_hint_stream_s*, align 8
  %hint1169 = alloca %struct.page_hint_stream_s*, align 8
  %Num1173 = alloca i32, align 4
  %hint1195 = alloca %struct.page_hint_stream_s*, align 8
  %Num1199 = alloca i32, align 4
  %Length1378 = alloca i32, align 4
  %pagehint1701 = alloca %struct.page_hint_stream_s*, align 8
  store %struct.gx_device_pdf_s* %pdev, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  store %struct.pdf_linearisation_s* %linear_params, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %0 = bitcast [1024 x i8]* %Buffer to i8*
  call void @llvm.lifetime.start(i64 1024, i8* %0) #2
  %1 = bitcast [32 x i8]* %Header to i8*
  call void @llvm.lifetime.start(i64 32, i8* %1) #2
  %2 = bitcast [9 x i8]* %Binary to i8*
  call void @llvm.lifetime.start(i64 9, i8* %2) #2
  %3 = bitcast [9 x i8]* %Binary to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %3, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @pdf_linearise.Binary, i32 0, i32 0), i64 9, i32 1, i1 false)
  %4 = bitcast [1024 x i8]* %LDict to i8*
  call void @llvm.lifetime.start(i64 1024, i8* %4) #2
  %5 = bitcast [35 x i8]* %fileID to i8*
  call void @llvm.lifetime.start(i64 35, i8* %5) #2
  call void @llvm.lifetime.start(i64 1, i8* %Pad) #2
  %6 = bitcast i32* %level to i8*
  call void @llvm.lifetime.start(i64 4, i8* %6) #2
  %7 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %CompatibilityLevel = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %7, i32 0, i32 75
  %8 = load double, double* %CompatibilityLevel, align 8, !tbaa !134
  %mul = fmul double %8, 1.000000e+01
  %add = fadd double %mul, 5.000000e-01
  %conv = fptosi double %add to i32
  store i32 %conv, i32* %level, align 4, !tbaa !54
  %9 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %9) #2
  %10 = bitcast i32* %j to i8*
  call void @llvm.lifetime.start(i64 4, i8* %10) #2
  %11 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %11) #2
  store i32 0, i32* %code, align 4, !tbaa !54
  %12 = bitcast i32* %Part1To6 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %12) #2
  store i32 2, i32* %Part1To6, align 4, !tbaa !54
  %13 = bitcast i32* %Part7To8 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %13) #2
  store i32 1, i32* %Part7To8, align 4, !tbaa !54
  %14 = bitcast i32* %PartNone to i8*
  call void @llvm.lifetime.start(i64 4, i8* %14) #2
  store i32 1, i32* %PartNone, align 4, !tbaa !54
  %15 = bitcast i32* %Part9 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %15) #2
  store i32 1, i32* %Part9, align 4, !tbaa !54
  %16 = bitcast i32* %LDictObj to i8*
  call void @llvm.lifetime.start(i64 4, i8* %16) #2
  %17 = bitcast i32* %HintStreamObj to i8*
  call void @llvm.lifetime.start(i64 4, i8* %17) #2
  %18 = bitcast i32* %k to i8*
  call void @llvm.lifetime.start(i64 4, i8* %18) #2
  call void @llvm.lifetime.start(i64 1, i8* %T) #2
  %19 = bitcast i64* %mainxref to i8*
  call void @llvm.lifetime.start(i64 8, i8* %19) #2
  %20 = bitcast i64* %Length to i8*
  call void @llvm.lifetime.start(i64 8, i8* %20) #2
  %21 = bitcast i64* %HintStreamLen to i8*
  call void @llvm.lifetime.start(i64 8, i8* %21) #2
  %22 = bitcast i64* %HintStreamStart to i8*
  call void @llvm.lifetime.start(i64 8, i8* %22) #2
  %23 = bitcast i64* %HintLength to i8*
  call void @llvm.lifetime.start(i64 8, i8* %23) #2
  %24 = bitcast i64* %SharedHintOffset to i8*
  call void @llvm.lifetime.start(i64 8, i8* %24) #2
  %arrayidx = getelementptr inbounds [35 x i8], [35 x i8]* %fileID, i32 0, i64 0
  store i8 60, i8* %arrayidx, align 1, !tbaa !147
  %arrayidx1 = getelementptr inbounds [35 x i8], [35 x i8]* %fileID, i32 0, i64 33
  store i8 62, i8* %arrayidx1, align 1, !tbaa !147
  %arrayidx2 = getelementptr inbounds [35 x i8], [35 x i8]* %fileID, i32 0, i64 34
  store i8 0, i8* %arrayidx2, align 1, !tbaa !147
  store i32 0, i32* %i, align 4, !tbaa !54
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %25 = load i32, i32* %i, align 4, !tbaa !54
  %conv3 = sext i32 %25 to i64
  %cmp = icmp ult i64 %conv3, 16
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %26 = load i32, i32* %i, align 4, !tbaa !54
  %idxprom = sext i32 %26 to i64
  %27 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %fileID5 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %27, i32 0, i32 179
  %arrayidx6 = getelementptr inbounds [16 x i8], [16 x i8]* %fileID5, i32 0, i64 %idxprom
  %28 = load i8, i8* %arrayidx6, align 1, !tbaa !147
  %conv7 = zext i8 %28 to i32
  %shr = ashr i32 %conv7, 4
  %conv8 = trunc i32 %shr to i8
  store i8 %conv8, i8* %T, align 1, !tbaa !147
  %29 = load i8, i8* %T, align 1, !tbaa !147
  %conv9 = sext i8 %29 to i32
  %cmp10 = icmp sgt i32 %conv9, 9
  br i1 %cmp10, label %if.then, label %if.else

if.then:                                          ; preds = %for.body
  %30 = load i8, i8* %T, align 1, !tbaa !147
  %conv12 = sext i8 %30 to i32
  %sub = sub nsw i32 %conv12, 10
  %add13 = add nsw i32 %sub, 65
  %conv14 = trunc i32 %add13 to i8
  %31 = load i32, i32* %i, align 4, !tbaa !54
  %mul15 = mul nsw i32 %31, 2
  %add16 = add nsw i32 %mul15, 1
  %idxprom17 = sext i32 %add16 to i64
  %arrayidx18 = getelementptr inbounds [35 x i8], [35 x i8]* %fileID, i32 0, i64 %idxprom17
  store i8 %conv14, i8* %arrayidx18, align 1, !tbaa !147
  br label %if.end

if.else:                                          ; preds = %for.body
  %32 = load i8, i8* %T, align 1, !tbaa !147
  %conv19 = sext i8 %32 to i32
  %add20 = add nsw i32 %conv19, 48
  %conv21 = trunc i32 %add20 to i8
  %33 = load i32, i32* %i, align 4, !tbaa !54
  %mul22 = mul nsw i32 %33, 2
  %add23 = add nsw i32 %mul22, 1
  %idxprom24 = sext i32 %add23 to i64
  %arrayidx25 = getelementptr inbounds [35 x i8], [35 x i8]* %fileID, i32 0, i64 %idxprom24
  store i8 %conv21, i8* %arrayidx25, align 1, !tbaa !147
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %34 = load i32, i32* %i, align 4, !tbaa !54
  %idxprom26 = sext i32 %34 to i64
  %35 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %fileID27 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %35, i32 0, i32 179
  %arrayidx28 = getelementptr inbounds [16 x i8], [16 x i8]* %fileID27, i32 0, i64 %idxprom26
  %36 = load i8, i8* %arrayidx28, align 1, !tbaa !147
  %conv29 = zext i8 %36 to i32
  %and = and i32 %conv29, 15
  %conv30 = trunc i32 %and to i8
  store i8 %conv30, i8* %T, align 1, !tbaa !147
  %37 = load i8, i8* %T, align 1, !tbaa !147
  %conv31 = sext i8 %37 to i32
  %cmp32 = icmp sgt i32 %conv31, 9
  br i1 %cmp32, label %if.then.34, label %if.else.43

if.then.34:                                       ; preds = %if.end
  %38 = load i8, i8* %T, align 1, !tbaa !147
  %conv35 = sext i8 %38 to i32
  %sub36 = sub nsw i32 %conv35, 10
  %add37 = add nsw i32 %sub36, 65
  %conv38 = trunc i32 %add37 to i8
  %39 = load i32, i32* %i, align 4, !tbaa !54
  %mul39 = mul nsw i32 %39, 2
  %add40 = add nsw i32 %mul39, 2
  %idxprom41 = sext i32 %add40 to i64
  %arrayidx42 = getelementptr inbounds [35 x i8], [35 x i8]* %fileID, i32 0, i64 %idxprom41
  store i8 %conv38, i8* %arrayidx42, align 1, !tbaa !147
  br label %if.end.51

if.else.43:                                       ; preds = %if.end
  %40 = load i8, i8* %T, align 1, !tbaa !147
  %conv44 = sext i8 %40 to i32
  %add45 = add nsw i32 %conv44, 48
  %conv46 = trunc i32 %add45 to i8
  %41 = load i32, i32* %i, align 4, !tbaa !54
  %mul47 = mul nsw i32 %41, 2
  %add48 = add nsw i32 %mul47, 2
  %idxprom49 = sext i32 %add48 to i64
  %arrayidx50 = getelementptr inbounds [35 x i8], [35 x i8]* %fileID, i32 0, i64 %idxprom49
  store i8 %conv46, i8* %arrayidx50, align 1, !tbaa !147
  br label %if.end.51

if.end.51:                                        ; preds = %if.else.43, %if.then.34
  br label %for.inc

for.inc:                                          ; preds = %if.end.51
  %42 = load i32, i32* %i, align 4, !tbaa !54
  %inc = add nsw i32 %42, 1
  store i32 %inc, i32* %i, align 4, !tbaa !54
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %43 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %strm = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %43, i32 0, i32 47
  %44 = load %struct.stream_s*, %struct.stream_s** %strm, align 8, !tbaa !56
  %procs = getelementptr inbounds %struct.stream_s, %struct.stream_s* %44, i32 0, i32 14
  %flush = getelementptr inbounds %struct.stream_procs, %struct.stream_procs* %procs, i32 0, i32 3
  %45 = load i32 (%struct.stream_s*)*, i32 (%struct.stream_s*)** %flush, align 8, !tbaa !140
  %46 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %strm52 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %46, i32 0, i32 47
  %47 = load %struct.stream_s*, %struct.stream_s** %strm52, align 8, !tbaa !56
  %call = call i32 %45(%struct.stream_s* %47) #7
  %48 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %file = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %48, i32 0, i32 46
  %49 = load %struct._IO_FILE*, %struct._IO_FILE** %file, align 8, !tbaa !273
  %50 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %sfile = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %50, i32 0, i32 0
  store %struct._IO_FILE* %49, %struct._IO_FILE** %sfile, align 8, !tbaa !290
  %51 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %file53 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %51, i32 0, i32 46
  %52 = load %struct._IO_FILE*, %struct._IO_FILE** %file53, align 8, !tbaa !273
  %call54 = call i64 @gp_ftell_64(%struct._IO_FILE* %52) #7
  %53 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %MainFileEnd = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %53, i32 0, i32 15
  store i64 %call54, i64* %MainFileEnd, align 8, !tbaa !291
  %54 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %55 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %Lin_File = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %55, i32 0, i32 1
  %call55 = call i32 @pdf_open_temp_file(%struct.gx_device_pdf_s* %54, %struct.pdf_temp_file_s* %Lin_File) #7
  store i32 %call55, i32* %code, align 4, !tbaa !54
  %56 = load i32, i32* %code, align 4, !tbaa !54
  %cmp56 = icmp slt i32 %56, 0
  br i1 %cmp56, label %if.then.58, label %if.end.59

if.then.58:                                       ; preds = %for.end
  %57 = load i32, i32* %code, align 4, !tbaa !54
  store i32 %57, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.1727

if.end.59:                                        ; preds = %for.end
  %58 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %Lin_File60 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %58, i32 0, i32 1
  %strm61 = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %Lin_File60, i32 0, i32 2
  store %struct.stream_s* null, %struct.stream_s** %strm61, align 8, !tbaa !292
  %59 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %NumPage1Resources = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %59, i32 0, i32 8
  store i64 0, i64* %NumPage1Resources, align 8, !tbaa !293
  store i32 0, i32* %i, align 4, !tbaa !54
  br label %for.cond.62

for.cond.62:                                      ; preds = %for.inc.83, %if.end.59
  %60 = load i32, i32* %i, align 4, !tbaa !54
  %61 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsageSize = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %61, i32 0, i32 253
  %62 = load i32, i32* %ResourceUsageSize, align 4, !tbaa !172
  %cmp63 = icmp slt i32 %60, %62
  br i1 %cmp63, label %for.body.65, label %for.end.85

for.body.65:                                      ; preds = %for.cond.62
  %63 = load i32, i32* %i, align 4, !tbaa !54
  %idxprom66 = sext i32 %63 to i64
  %64 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsage = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %64, i32 0, i32 252
  %65 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %ResourceUsage, align 8, !tbaa !173
  %arrayidx67 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %65, i64 %idxprom66
  %PageUsage = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %arrayidx67, i32 0, i32 0
  %66 = load i32, i32* %PageUsage, align 4, !tbaa !208
  %cmp68 = icmp eq i32 %66, 1
  br i1 %cmp68, label %if.then.70, label %if.end.73

if.then.70:                                       ; preds = %for.body.65
  %67 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %NumPage1Resources71 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %67, i32 0, i32 8
  %68 = load i64, i64* %NumPage1Resources71, align 8, !tbaa !293
  %inc72 = add nsw i64 %68, 1
  store i64 %inc72, i64* %NumPage1Resources71, align 8, !tbaa !293
  br label %if.end.73

if.end.73:                                        ; preds = %if.then.70, %for.body.65
  %69 = load i32, i32* %i, align 4, !tbaa !54
  %idxprom74 = sext i32 %69 to i64
  %70 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsage75 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %70, i32 0, i32 252
  %71 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %ResourceUsage75, align 8, !tbaa !173
  %arrayidx76 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %71, i64 %idxprom74
  %PageUsage77 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %arrayidx76, i32 0, i32 0
  %72 = load i32, i32* %PageUsage77, align 4, !tbaa !208
  %cmp78 = icmp eq i32 %72, -2
  br i1 %cmp78, label %if.then.80, label %if.end.82

if.then.80:                                       ; preds = %if.end.73
  %73 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %NumPart1StructureResources = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %73, i32 0, i32 9
  %74 = load i64, i64* %NumPart1StructureResources, align 8, !tbaa !294
  %inc81 = add nsw i64 %74, 1
  store i64 %inc81, i64* %NumPart1StructureResources, align 8, !tbaa !294
  br label %if.end.82

if.end.82:                                        ; preds = %if.then.80, %if.end.73
  br label %for.inc.83

for.inc.83:                                       ; preds = %if.end.82
  %75 = load i32, i32* %i, align 4, !tbaa !54
  %inc84 = add nsw i32 %75, 1
  store i32 %inc84, i32* %i, align 4, !tbaa !54
  br label %for.cond.62

for.end.85:                                       ; preds = %for.cond.62
  %76 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %NumUniquePageResources = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %76, i32 0, i32 11
  store i64 0, i64* %NumUniquePageResources, align 8, !tbaa !295
  %77 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %NumSharedResources = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %77, i32 0, i32 10
  store i64 0, i64* %NumSharedResources, align 8, !tbaa !296
  store i32 0, i32* %i, align 4, !tbaa !54
  br label %for.cond.86

for.cond.86:                                      ; preds = %for.inc.111, %for.end.85
  %78 = load i32, i32* %i, align 4, !tbaa !54
  %79 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsageSize87 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %79, i32 0, i32 253
  %80 = load i32, i32* %ResourceUsageSize87, align 4, !tbaa !172
  %cmp88 = icmp slt i32 %78, %80
  br i1 %cmp88, label %for.body.90, label %for.end.113

for.body.90:                                      ; preds = %for.cond.86
  %81 = load i32, i32* %i, align 4, !tbaa !54
  %idxprom91 = sext i32 %81 to i64
  %82 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsage92 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %82, i32 0, i32 252
  %83 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %ResourceUsage92, align 8, !tbaa !173
  %arrayidx93 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %83, i64 %idxprom91
  %PageUsage94 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %arrayidx93, i32 0, i32 0
  %84 = load i32, i32* %PageUsage94, align 4, !tbaa !208
  %cmp95 = icmp sgt i32 %84, 1
  br i1 %cmp95, label %if.then.97, label %if.end.100

if.then.97:                                       ; preds = %for.body.90
  %85 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %NumUniquePageResources98 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %85, i32 0, i32 11
  %86 = load i64, i64* %NumUniquePageResources98, align 8, !tbaa !295
  %inc99 = add nsw i64 %86, 1
  store i64 %inc99, i64* %NumUniquePageResources98, align 8, !tbaa !295
  br label %if.end.100

if.end.100:                                       ; preds = %if.then.97, %for.body.90
  %87 = load i32, i32* %i, align 4, !tbaa !54
  %idxprom101 = sext i32 %87 to i64
  %88 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsage102 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %88, i32 0, i32 252
  %89 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %ResourceUsage102, align 8, !tbaa !173
  %arrayidx103 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %89, i64 %idxprom101
  %PageUsage104 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %arrayidx103, i32 0, i32 0
  %90 = load i32, i32* %PageUsage104, align 4, !tbaa !208
  %cmp105 = icmp eq i32 %90, -1
  br i1 %cmp105, label %if.then.107, label %if.end.110

if.then.107:                                      ; preds = %if.end.100
  %91 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %NumSharedResources108 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %91, i32 0, i32 10
  %92 = load i64, i64* %NumSharedResources108, align 8, !tbaa !296
  %inc109 = add nsw i64 %92, 1
  store i64 %inc109, i64* %NumSharedResources108, align 8, !tbaa !296
  br label %if.end.110

if.end.110:                                       ; preds = %if.then.107, %if.end.100
  br label %for.inc.111

for.inc.111:                                      ; preds = %if.end.110
  %93 = load i32, i32* %i, align 4, !tbaa !54
  %inc112 = add nsw i32 %93, 1
  store i32 %inc112, i32* %i, align 4, !tbaa !54
  br label %for.cond.86

for.end.113:                                      ; preds = %for.cond.86
  %94 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %NumNonPageResources = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %94, i32 0, i32 13
  store i64 0, i64* %NumNonPageResources, align 8, !tbaa !297
  store i32 1, i32* %i, align 4, !tbaa !54
  br label %for.cond.114

for.cond.114:                                     ; preds = %for.inc.129, %for.end.113
  %95 = load i32, i32* %i, align 4, !tbaa !54
  %96 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsageSize115 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %96, i32 0, i32 253
  %97 = load i32, i32* %ResourceUsageSize115, align 4, !tbaa !172
  %cmp116 = icmp slt i32 %95, %97
  br i1 %cmp116, label %for.body.118, label %for.end.131

for.body.118:                                     ; preds = %for.cond.114
  %98 = load i32, i32* %i, align 4, !tbaa !54
  %idxprom119 = sext i32 %98 to i64
  %99 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsage120 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %99, i32 0, i32 252
  %100 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %ResourceUsage120, align 8, !tbaa !173
  %arrayidx121 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %100, i64 %idxprom119
  %PageUsage122 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %arrayidx121, i32 0, i32 0
  %101 = load i32, i32* %PageUsage122, align 4, !tbaa !208
  %cmp123 = icmp eq i32 %101, 0
  br i1 %cmp123, label %if.then.125, label %if.end.128

if.then.125:                                      ; preds = %for.body.118
  %102 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %NumNonPageResources126 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %102, i32 0, i32 13
  %103 = load i64, i64* %NumNonPageResources126, align 8, !tbaa !297
  %inc127 = add nsw i64 %103, 1
  store i64 %inc127, i64* %NumNonPageResources126, align 8, !tbaa !297
  br label %if.end.128

if.end.128:                                       ; preds = %if.then.125, %for.body.118
  br label %for.inc.129

for.inc.129:                                      ; preds = %if.end.128
  %104 = load i32, i32* %i, align 4, !tbaa !54
  %inc130 = add nsw i32 %104, 1
  store i32 %inc130, i32* %i, align 4, !tbaa !54
  br label %for.cond.114

for.end.131:                                      ; preds = %for.cond.114
  %105 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %NumPart9Resources = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %105, i32 0, i32 12
  store i64 0, i64* %NumPart9Resources, align 8, !tbaa !298
  store i32 0, i32* %i, align 4, !tbaa !54
  br label %for.cond.132

for.cond.132:                                     ; preds = %for.inc.147, %for.end.131
  %106 = load i32, i32* %i, align 4, !tbaa !54
  %107 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsageSize133 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %107, i32 0, i32 253
  %108 = load i32, i32* %ResourceUsageSize133, align 4, !tbaa !172
  %cmp134 = icmp slt i32 %106, %108
  br i1 %cmp134, label %for.body.136, label %for.end.149

for.body.136:                                     ; preds = %for.cond.132
  %109 = load i32, i32* %i, align 4, !tbaa !54
  %idxprom137 = sext i32 %109 to i64
  %110 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsage138 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %110, i32 0, i32 252
  %111 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %ResourceUsage138, align 8, !tbaa !173
  %arrayidx139 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %111, i64 %idxprom137
  %PageUsage140 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %arrayidx139, i32 0, i32 0
  %112 = load i32, i32* %PageUsage140, align 4, !tbaa !208
  %cmp141 = icmp eq i32 %112, -3
  br i1 %cmp141, label %if.then.143, label %if.end.146

if.then.143:                                      ; preds = %for.body.136
  %113 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %NumPart9Resources144 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %113, i32 0, i32 12
  %114 = load i64, i64* %NumPart9Resources144, align 8, !tbaa !298
  %inc145 = add nsw i64 %114, 1
  store i64 %inc145, i64* %NumPart9Resources144, align 8, !tbaa !298
  br label %if.end.146

if.end.146:                                       ; preds = %if.then.143, %for.body.136
  br label %for.inc.147

for.inc.147:                                      ; preds = %if.end.146
  %115 = load i32, i32* %i, align 4, !tbaa !54
  %inc148 = add nsw i32 %115, 1
  store i32 %inc148, i32* %i, align 4, !tbaa !54
  br label %for.cond.132

for.end.149:                                      ; preds = %for.cond.132
  %116 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %NumUniquePageResources150 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %116, i32 0, i32 11
  %117 = load i64, i64* %NumUniquePageResources150, align 8, !tbaa !295
  %118 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %NumSharedResources151 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %118, i32 0, i32 10
  %119 = load i64, i64* %NumSharedResources151, align 8, !tbaa !296
  %add152 = add nsw i64 %117, %119
  %120 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %NumNonPageResources153 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %120, i32 0, i32 13
  %121 = load i64, i64* %NumNonPageResources153, align 8, !tbaa !297
  %add154 = add nsw i64 %add152, %121
  %122 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %NumPart9Resources155 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %122, i32 0, i32 12
  %123 = load i64, i64* %NumPart9Resources155, align 8, !tbaa !298
  %add156 = add nsw i64 %add154, %123
  %124 = load i32, i32* %Part1To6, align 4, !tbaa !54
  %conv157 = sext i32 %124 to i64
  %add158 = add nsw i64 %conv157, %add156
  %conv159 = trunc i64 %add158 to i32
  store i32 %conv159, i32* %Part1To6, align 4, !tbaa !54
  %125 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %NumUniquePageResources160 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %125, i32 0, i32 11
  %126 = load i64, i64* %NumUniquePageResources160, align 8, !tbaa !295
  %127 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %NumSharedResources161 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %127, i32 0, i32 10
  %128 = load i64, i64* %NumSharedResources161, align 8, !tbaa !296
  %add162 = add nsw i64 %126, %128
  %129 = load i32, i32* %PartNone, align 4, !tbaa !54
  %conv163 = sext i32 %129 to i64
  %add164 = add nsw i64 %conv163, %add162
  %conv165 = trunc i64 %add164 to i32
  store i32 %conv165, i32* %PartNone, align 4, !tbaa !54
  %130 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %NumUniquePageResources166 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %130, i32 0, i32 11
  %131 = load i64, i64* %NumUniquePageResources166, align 8, !tbaa !295
  %132 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %NumSharedResources167 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %132, i32 0, i32 10
  %133 = load i64, i64* %NumSharedResources167, align 8, !tbaa !296
  %add168 = add nsw i64 %131, %133
  %134 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %NumNonPageResources169 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %134, i32 0, i32 13
  %135 = load i64, i64* %NumNonPageResources169, align 8, !tbaa !297
  %add170 = add nsw i64 %add168, %135
  %136 = load i32, i32* %Part9, align 4, !tbaa !54
  %conv171 = sext i32 %136 to i64
  %add172 = add nsw i64 %conv171, %add170
  %conv173 = trunc i64 %add172 to i32
  store i32 %conv173, i32* %Part9, align 4, !tbaa !54
  %137 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %NumUniquePageResources174 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %137, i32 0, i32 11
  %138 = load i64, i64* %NumUniquePageResources174, align 8, !tbaa !295
  %139 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %NumSharedResources175 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %139, i32 0, i32 10
  %140 = load i64, i64* %NumSharedResources175, align 8, !tbaa !296
  %add176 = add nsw i64 %138, %140
  %141 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %NumNonPageResources177 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %141, i32 0, i32 13
  %142 = load i64, i64* %NumNonPageResources177, align 8, !tbaa !297
  %add178 = add nsw i64 %add176, %142
  %143 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %NumPart9Resources179 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %143, i32 0, i32 12
  %144 = load i64, i64* %NumPart9Resources179, align 8, !tbaa !298
  %add180 = add nsw i64 %add178, %144
  %add181 = add nsw i64 %add180, 1
  %conv182 = trunc i64 %add181 to i32
  store i32 %conv182, i32* %LDictObj, align 4, !tbaa !54
  store i32 1, i32* %i, align 4, !tbaa !54
  br label %for.cond.183

for.cond.183:                                     ; preds = %for.inc.280, %for.end.149
  %145 = load i32, i32* %i, align 4, !tbaa !54
  %146 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsageSize184 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %146, i32 0, i32 253
  %147 = load i32, i32* %ResourceUsageSize184, align 4, !tbaa !172
  %cmp185 = icmp slt i32 %145, %147
  br i1 %cmp185, label %for.body.187, label %for.end.282

for.body.187:                                     ; preds = %for.cond.183
  %148 = bitcast i32* %j188 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %148) #2
  %149 = bitcast i64* %end to i8*
  call void @llvm.lifetime.start(i64 8, i8* %149) #2
  %150 = load i32, i32* %i, align 4, !tbaa !54
  %idxprom189 = sext i32 %150 to i64
  %151 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %Offsets = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %151, i32 0, i32 16
  %152 = load i64*, i64** %Offsets, align 8, !tbaa !165
  %arrayidx190 = getelementptr inbounds i64, i64* %152, i64 %idxprom189
  %153 = load i64, i64* %arrayidx190, align 8, !tbaa !107
  %154 = load i32, i32* %i, align 4, !tbaa !54
  %idxprom191 = sext i32 %154 to i64
  %155 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsage192 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %155, i32 0, i32 252
  %156 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %ResourceUsage192, align 8, !tbaa !173
  %arrayidx193 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %156, i64 %idxprom191
  %OriginalOffset = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %arrayidx193, i32 0, i32 4
  store i64 %153, i64* %OriginalOffset, align 8, !tbaa !299
  %157 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %xref = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %157, i32 0, i32 17
  %158 = load i64, i64* %xref, align 8, !tbaa !171
  store i64 %158, i64* %end, align 8, !tbaa !107
  store i32 0, i32* %j188, align 4, !tbaa !54
  br label %for.cond.194

for.cond.194:                                     ; preds = %for.inc.217, %for.body.187
  %159 = load i32, i32* %j188, align 4, !tbaa !54
  %conv195 = sext i32 %159 to i64
  %160 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %LastResource = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %160, i32 0, i32 14
  %161 = load i64, i64* %LastResource, align 8, !tbaa !164
  %cmp196 = icmp sle i64 %conv195, %161
  br i1 %cmp196, label %for.body.198, label %for.end.219

for.body.198:                                     ; preds = %for.cond.194
  %162 = load i32, i32* %j188, align 4, !tbaa !54
  %idxprom199 = sext i32 %162 to i64
  %163 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %Offsets200 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %163, i32 0, i32 16
  %164 = load i64*, i64** %Offsets200, align 8, !tbaa !165
  %arrayidx201 = getelementptr inbounds i64, i64* %164, i64 %idxprom199
  %165 = load i64, i64* %arrayidx201, align 8, !tbaa !107
  %166 = load i32, i32* %i, align 4, !tbaa !54
  %idxprom202 = sext i32 %166 to i64
  %167 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %Offsets203 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %167, i32 0, i32 16
  %168 = load i64*, i64** %Offsets203, align 8, !tbaa !165
  %arrayidx204 = getelementptr inbounds i64, i64* %168, i64 %idxprom202
  %169 = load i64, i64* %arrayidx204, align 8, !tbaa !107
  %cmp205 = icmp sgt i64 %165, %169
  br i1 %cmp205, label %land.lhs.true, label %if.end.216

land.lhs.true:                                    ; preds = %for.body.198
  %170 = load i32, i32* %j188, align 4, !tbaa !54
  %idxprom207 = sext i32 %170 to i64
  %171 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %Offsets208 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %171, i32 0, i32 16
  %172 = load i64*, i64** %Offsets208, align 8, !tbaa !165
  %arrayidx209 = getelementptr inbounds i64, i64* %172, i64 %idxprom207
  %173 = load i64, i64* %arrayidx209, align 8, !tbaa !107
  %174 = load i64, i64* %end, align 8, !tbaa !107
  %cmp210 = icmp slt i64 %173, %174
  br i1 %cmp210, label %if.then.212, label %if.end.216

if.then.212:                                      ; preds = %land.lhs.true
  %175 = load i32, i32* %j188, align 4, !tbaa !54
  %idxprom213 = sext i32 %175 to i64
  %176 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %Offsets214 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %176, i32 0, i32 16
  %177 = load i64*, i64** %Offsets214, align 8, !tbaa !165
  %arrayidx215 = getelementptr inbounds i64, i64* %177, i64 %idxprom213
  %178 = load i64, i64* %arrayidx215, align 8, !tbaa !107
  store i64 %178, i64* %end, align 8, !tbaa !107
  br label %if.end.216

if.end.216:                                       ; preds = %if.then.212, %land.lhs.true, %for.body.198
  br label %for.inc.217

for.inc.217:                                      ; preds = %if.end.216
  %179 = load i32, i32* %j188, align 4, !tbaa !54
  %inc218 = add nsw i32 %179, 1
  store i32 %inc218, i32* %j188, align 4, !tbaa !54
  br label %for.cond.194

for.end.219:                                      ; preds = %for.cond.194
  %180 = load i64, i64* %end, align 8, !tbaa !107
  %181 = load i32, i32* %i, align 4, !tbaa !54
  %idxprom220 = sext i32 %181 to i64
  %182 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %Offsets221 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %182, i32 0, i32 16
  %183 = load i64*, i64** %Offsets221, align 8, !tbaa !165
  %arrayidx222 = getelementptr inbounds i64, i64* %183, i64 %idxprom220
  %184 = load i64, i64* %arrayidx222, align 8, !tbaa !107
  %sub223 = sub nsw i64 %180, %184
  %185 = load i32, i32* %i, align 4, !tbaa !54
  %idxprom224 = sext i32 %185 to i64
  %186 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsage225 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %186, i32 0, i32 252
  %187 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %ResourceUsage225, align 8, !tbaa !173
  %arrayidx226 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %187, i64 %idxprom224
  %Length227 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %arrayidx226, i32 0, i32 6
  store i64 %sub223, i64* %Length227, align 8, !tbaa !300
  %188 = load i32, i32* %i, align 4, !tbaa !54
  %idxprom228 = sext i32 %188 to i64
  %189 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsage229 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %189, i32 0, i32 252
  %190 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %ResourceUsage229, align 8, !tbaa !173
  %arrayidx230 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %190, i64 %idxprom228
  %PageUsage231 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %arrayidx230, i32 0, i32 0
  %191 = load i32, i32* %PageUsage231, align 4, !tbaa !208
  %cmp232 = icmp eq i32 %191, 1
  br i1 %cmp232, label %if.then.240, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.end.219
  %192 = load i32, i32* %i, align 4, !tbaa !54
  %idxprom234 = sext i32 %192 to i64
  %193 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsage235 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %193, i32 0, i32 252
  %194 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %ResourceUsage235, align 8, !tbaa !173
  %arrayidx236 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %194, i64 %idxprom234
  %PageUsage237 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %arrayidx236, i32 0, i32 0
  %195 = load i32, i32* %PageUsage237, align 4, !tbaa !208
  %cmp238 = icmp eq i32 %195, -2
  br i1 %cmp238, label %if.then.240, label %if.else.245

if.then.240:                                      ; preds = %lor.lhs.false, %for.end.219
  %196 = load i32, i32* %Part1To6, align 4, !tbaa !54
  %inc241 = add nsw i32 %196, 1
  store i32 %inc241, i32* %Part1To6, align 4, !tbaa !54
  %197 = load i32, i32* %i, align 4, !tbaa !54
  %idxprom242 = sext i32 %197 to i64
  %198 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsage243 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %198, i32 0, i32 252
  %199 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %ResourceUsage243, align 8, !tbaa !173
  %arrayidx244 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %199, i64 %idxprom242
  %NewObjectNumber = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %arrayidx244, i32 0, i32 3
  store i32 %196, i32* %NewObjectNumber, align 4, !tbaa !301
  br label %if.end.279

if.else.245:                                      ; preds = %lor.lhs.false
  %200 = load i32, i32* %i, align 4, !tbaa !54
  %idxprom246 = sext i32 %200 to i64
  %201 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsage247 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %201, i32 0, i32 252
  %202 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %ResourceUsage247, align 8, !tbaa !173
  %arrayidx248 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %202, i64 %idxprom246
  %PageUsage249 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %arrayidx248, i32 0, i32 0
  %203 = load i32, i32* %PageUsage249, align 4, !tbaa !208
  %cmp250 = icmp eq i32 %203, 0
  br i1 %cmp250, label %if.then.252, label %if.else.258

if.then.252:                                      ; preds = %if.else.245
  %204 = load i32, i32* %PartNone, align 4, !tbaa !54
  %inc253 = add nsw i32 %204, 1
  store i32 %inc253, i32* %PartNone, align 4, !tbaa !54
  %205 = load i32, i32* %i, align 4, !tbaa !54
  %idxprom254 = sext i32 %205 to i64
  %206 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsage255 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %206, i32 0, i32 252
  %207 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %ResourceUsage255, align 8, !tbaa !173
  %arrayidx256 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %207, i64 %idxprom254
  %NewObjectNumber257 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %arrayidx256, i32 0, i32 3
  store i32 %204, i32* %NewObjectNumber257, align 4, !tbaa !301
  br label %if.end.278

if.else.258:                                      ; preds = %if.else.245
  %208 = load i32, i32* %i, align 4, !tbaa !54
  %idxprom259 = sext i32 %208 to i64
  %209 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsage260 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %209, i32 0, i32 252
  %210 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %ResourceUsage260, align 8, !tbaa !173
  %arrayidx261 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %210, i64 %idxprom259
  %PageUsage262 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %arrayidx261, i32 0, i32 0
  %211 = load i32, i32* %PageUsage262, align 4, !tbaa !208
  %cmp263 = icmp eq i32 %211, -3
  br i1 %cmp263, label %if.then.265, label %if.else.271

if.then.265:                                      ; preds = %if.else.258
  %212 = load i32, i32* %Part9, align 4, !tbaa !54
  %inc266 = add nsw i32 %212, 1
  store i32 %inc266, i32* %Part9, align 4, !tbaa !54
  %213 = load i32, i32* %i, align 4, !tbaa !54
  %idxprom267 = sext i32 %213 to i64
  %214 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsage268 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %214, i32 0, i32 252
  %215 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %ResourceUsage268, align 8, !tbaa !173
  %arrayidx269 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %215, i64 %idxprom267
  %NewObjectNumber270 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %arrayidx269, i32 0, i32 3
  store i32 %212, i32* %NewObjectNumber270, align 4, !tbaa !301
  br label %if.end.277

if.else.271:                                      ; preds = %if.else.258
  %216 = load i32, i32* %Part7To8, align 4, !tbaa !54
  %inc272 = add nsw i32 %216, 1
  store i32 %inc272, i32* %Part7To8, align 4, !tbaa !54
  %217 = load i32, i32* %i, align 4, !tbaa !54
  %idxprom273 = sext i32 %217 to i64
  %218 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsage274 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %218, i32 0, i32 252
  %219 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %ResourceUsage274, align 8, !tbaa !173
  %arrayidx275 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %219, i64 %idxprom273
  %NewObjectNumber276 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %arrayidx275, i32 0, i32 3
  store i32 %216, i32* %NewObjectNumber276, align 4, !tbaa !301
  br label %if.end.277

if.end.277:                                       ; preds = %if.else.271, %if.then.265
  br label %if.end.278

if.end.278:                                       ; preds = %if.end.277, %if.then.252
  br label %if.end.279

if.end.279:                                       ; preds = %if.end.278, %if.then.240
  %220 = bitcast i64* %end to i8*
  call void @llvm.lifetime.end(i64 8, i8* %220) #2
  %221 = bitcast i32* %j188 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %221) #2
  br label %for.inc.280

for.inc.280:                                      ; preds = %if.end.279
  %222 = load i32, i32* %i, align 4, !tbaa !54
  %inc281 = add nsw i32 %222, 1
  store i32 %inc281, i32* %i, align 4, !tbaa !54
  br label %for.cond.183

for.end.282:                                      ; preds = %for.cond.183
  %223 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %v_memory = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %223, i32 0, i32 43
  %224 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory, align 8, !tbaa !52
  %procs283 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %224, i32 0, i32 1
  %free_object = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs283, i32 0, i32 2
  %225 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %free_object, align 8, !tbaa !138
  %226 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %v_memory284 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %226, i32 0, i32 43
  %227 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory284, align 8, !tbaa !52
  %228 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %Offsets285 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %228, i32 0, i32 16
  %229 = load i64*, i64** %Offsets285, align 8, !tbaa !165
  %230 = bitcast i64* %229 to i8*
  call void %225(%struct.gs_memory_s* %227, i8* %230, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.166, i32 0, i32 0)) #7
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %Header, i32 0, i32 0
  %231 = load i32, i32* %level, align 4, !tbaa !54
  %div = sdiv i32 %231, 10
  %232 = load i32, i32* %level, align 4, !tbaa !54
  %rem = srem i32 %232, 10
  %call286 = call i32 (i8*, i8*, ...) @gs_sprintf(i8* %arraydecay, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.167, i32 0, i32 0), i32 %div, i32 %rem) #7
  %arraydecay287 = getelementptr inbounds [32 x i8], [32 x i8]* %Header, i32 0, i32 0
  %arraydecay288 = getelementptr inbounds [32 x i8], [32 x i8]* %Header, i32 0, i32 0
  %call289 = call i64 @strlen(i8* %arraydecay288) #9
  %233 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %Lin_File290 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %233, i32 0, i32 1
  %file291 = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %Lin_File290, i32 0, i32 1
  %234 = load %struct._IO_FILE*, %struct._IO_FILE** %file291, align 8, !tbaa !302
  %call292 = call i64 @fwrite(i8* %arraydecay287, i64 %call289, i64 1, %struct._IO_FILE* %234) #7
  %235 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %binary_ok = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %235, i32 0, i32 68
  %236 = load i32, i32* %binary_ok, align 4, !tbaa !303
  %tobool = icmp ne i32 %236, 0
  br i1 %tobool, label %if.then.293, label %if.end.300

if.then.293:                                      ; preds = %for.end.282
  %arraydecay294 = getelementptr inbounds [9 x i8], [9 x i8]* %Binary, i32 0, i32 0
  %arraydecay295 = getelementptr inbounds [9 x i8], [9 x i8]* %Binary, i32 0, i32 0
  %call296 = call i64 @strlen(i8* %arraydecay295) #9
  %237 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %Lin_File297 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %237, i32 0, i32 1
  %file298 = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %Lin_File297, i32 0, i32 1
  %238 = load %struct._IO_FILE*, %struct._IO_FILE** %file298, align 8, !tbaa !302
  %call299 = call i64 @fwrite(i8* %arraydecay294, i64 %call296, i64 1, %struct._IO_FILE* %238) #7
  br label %if.end.300

if.end.300:                                       ; preds = %if.then.293, %for.end.282
  %239 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %240 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %LastResource301 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %240, i32 0, i32 14
  %241 = load i64, i64* %LastResource301, align 8, !tbaa !164
  %add302 = add nsw i64 %241, 1
  %call303 = call i32 @pdf_record_usage(%struct.gx_device_pdf_s* %239, i64 %add302, i32 -2) #7
  %242 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %LastResource304 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %242, i32 0, i32 14
  %243 = load i64, i64* %LastResource304, align 8, !tbaa !164
  %add305 = add nsw i64 %243, 1
  %244 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsage306 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %244, i32 0, i32 252
  %245 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %ResourceUsage306, align 8, !tbaa !173
  %arrayidx307 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %245, i64 %add305
  %OriginalOffset308 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %arrayidx307, i32 0, i32 4
  store i64 0, i64* %OriginalOffset308, align 8, !tbaa !299
  %246 = load i32, i32* %LDictObj, align 4, !tbaa !54
  %247 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %LastResource309 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %247, i32 0, i32 14
  %248 = load i64, i64* %LastResource309, align 8, !tbaa !164
  %add310 = add nsw i64 %248, 1
  %249 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsage311 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %249, i32 0, i32 252
  %250 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %ResourceUsage311, align 8, !tbaa !173
  %arrayidx312 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %250, i64 %add310
  %NewObjectNumber313 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %arrayidx312, i32 0, i32 3
  store i32 %246, i32* %NewObjectNumber313, align 4, !tbaa !301
  %251 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %Lin_File314 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %251, i32 0, i32 1
  %file315 = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %Lin_File314, i32 0, i32 1
  %252 = load %struct._IO_FILE*, %struct._IO_FILE** %file315, align 8, !tbaa !302
  %call316 = call i64 @gp_ftell_64(%struct._IO_FILE* %252) #7
  %253 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %LastResource317 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %253, i32 0, i32 14
  %254 = load i64, i64* %LastResource317, align 8, !tbaa !164
  %add318 = add nsw i64 %254, 1
  %255 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsage319 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %255, i32 0, i32 252
  %256 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %ResourceUsage319, align 8, !tbaa !173
  %arrayidx320 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %256, i64 %add318
  %LinearisedOffset = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %arrayidx320, i32 0, i32 5
  store i64 %call316, i64* %LinearisedOffset, align 8, !tbaa !304
  %257 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %Lin_File321 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %257, i32 0, i32 1
  %file322 = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %Lin_File321, i32 0, i32 1
  %258 = load %struct._IO_FILE*, %struct._IO_FILE** %file322, align 8, !tbaa !302
  %call323 = call i64 @gp_ftell_64(%struct._IO_FILE* %258) #7
  %259 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %LDictOffset = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %259, i32 0, i32 20
  store i64 %call323, i64* %LDictOffset, align 8, !tbaa !305
  %arraydecay324 = getelementptr inbounds [1024 x i8], [1024 x i8]* %LDict, i32 0, i32 0
  %260 = load i32, i32* %LDictObj, align 4, !tbaa !54
  %call325 = call i32 (i8*, i8*, ...) @gs_sprintf(i8* %arraydecay324, i8* getelementptr inbounds ([133 x i8], [133 x i8]* @.str.168, i32 0, i32 0), i32 %260) #7
  %arraydecay326 = getelementptr inbounds [1024 x i8], [1024 x i8]* %LDict, i32 0, i32 0
  %arraydecay327 = getelementptr inbounds [1024 x i8], [1024 x i8]* %LDict, i32 0, i32 0
  %call328 = call i64 @strlen(i8* %arraydecay327) #9
  %261 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %Lin_File329 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %261, i32 0, i32 1
  %file330 = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %Lin_File329, i32 0, i32 1
  %262 = load %struct._IO_FILE*, %struct._IO_FILE** %file330, align 8, !tbaa !302
  %call331 = call i64 @fwrite(i8* %arraydecay326, i64 %call328, i64 1, %struct._IO_FILE* %262) #7
  %263 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %Lin_File332 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %263, i32 0, i32 1
  %file333 = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %Lin_File332, i32 0, i32 1
  %264 = load %struct._IO_FILE*, %struct._IO_FILE** %file333, align 8, !tbaa !302
  %call334 = call i64 @gp_ftell_64(%struct._IO_FILE* %264) #7
  %265 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %FirstxrefOffset = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %265, i32 0, i32 18
  store i64 %call334, i64* %FirstxrefOffset, align 8, !tbaa !306
  %arraydecay335 = getelementptr inbounds [32 x i8], [32 x i8]* %Header, i32 0, i32 0
  %266 = load i32, i32* %LDictObj, align 4, !tbaa !54
  %267 = load i32, i32* %Part1To6, align 4, !tbaa !54
  %268 = load i32, i32* %LDictObj, align 4, !tbaa !54
  %sub336 = sub nsw i32 %267, %268
  %add337 = add nsw i32 %sub336, 1
  %call338 = call i32 (i8*, i8*, ...) @gs_sprintf(i8* %arraydecay335, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.169, i32 0, i32 0), i32 %266, i32 %add337) #7
  %arraydecay339 = getelementptr inbounds [32 x i8], [32 x i8]* %Header, i32 0, i32 0
  %arraydecay340 = getelementptr inbounds [32 x i8], [32 x i8]* %Header, i32 0, i32 0
  %call341 = call i64 @strlen(i8* %arraydecay340) #9
  %269 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %Lin_File342 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %269, i32 0, i32 1
  %file343 = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %Lin_File342, i32 0, i32 1
  %270 = load %struct._IO_FILE*, %struct._IO_FILE** %file343, align 8, !tbaa !302
  %call344 = call i64 @fwrite(i8* %arraydecay339, i64 %call341, i64 1, %struct._IO_FILE* %270) #7
  %arraydecay345 = getelementptr inbounds [32 x i8], [32 x i8]* %Header, i32 0, i32 0
  %call346 = call i32 (i8*, i8*, ...) @gs_sprintf(i8* %arraydecay345, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.170, i32 0, i32 0)) #7
  %271 = load i32, i32* %LDictObj, align 4, !tbaa !54
  store i32 %271, i32* %i, align 4, !tbaa !54
  br label %for.cond.347

for.cond.347:                                     ; preds = %for.inc.358, %if.end.300
  %272 = load i32, i32* %i, align 4, !tbaa !54
  %conv348 = sext i32 %272 to i64
  %273 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %LastResource349 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %273, i32 0, i32 14
  %274 = load i64, i64* %LastResource349, align 8, !tbaa !164
  %add350 = add nsw i64 %274, 2
  %cmp351 = icmp sle i64 %conv348, %add350
  br i1 %cmp351, label %for.body.353, label %for.end.360

for.body.353:                                     ; preds = %for.cond.347
  %arraydecay354 = getelementptr inbounds [32 x i8], [32 x i8]* %Header, i32 0, i32 0
  %275 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %Lin_File355 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %275, i32 0, i32 1
  %file356 = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %Lin_File355, i32 0, i32 1
  %276 = load %struct._IO_FILE*, %struct._IO_FILE** %file356, align 8, !tbaa !302
  %call357 = call i64 @fwrite(i8* %arraydecay354, i64 20, i64 1, %struct._IO_FILE* %276) #7
  br label %for.inc.358

for.inc.358:                                      ; preds = %for.body.353
  %277 = load i32, i32* %i, align 4, !tbaa !54
  %inc359 = add nsw i32 %277, 1
  store i32 %inc359, i32* %i, align 4, !tbaa !54
  br label %for.cond.347

for.end.360:                                      ; preds = %for.cond.347
  %278 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %Lin_File361 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %278, i32 0, i32 1
  %file362 = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %Lin_File361, i32 0, i32 1
  %279 = load %struct._IO_FILE*, %struct._IO_FILE** %file362, align 8, !tbaa !302
  %call363 = call i64 @gp_ftell_64(%struct._IO_FILE* %279) #7
  %280 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %FirsttrailerOffset = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %280, i32 0, i32 19
  store i64 %call363, i64* %FirsttrailerOffset, align 8, !tbaa !307
  %arraydecay364 = getelementptr inbounds [1024 x i8], [1024 x i8]* %LDict, i32 0, i32 0
  %281 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %LastResource365 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %281, i32 0, i32 14
  %282 = load i64, i64* %LastResource365, align 8, !tbaa !164
  %add366 = add nsw i64 %282, 3
  %283 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %Info_id = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %283, i32 0, i32 6
  %284 = load i64, i64* %Info_id, align 8, !tbaa !115
  %285 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsage367 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %285, i32 0, i32 252
  %286 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %ResourceUsage367, align 8, !tbaa !173
  %arrayidx368 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %286, i64 %284
  %NewObjectNumber369 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %arrayidx368, i32 0, i32 3
  %287 = load i32, i32* %NewObjectNumber369, align 4, !tbaa !301
  %288 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %Catalog_id = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %288, i32 0, i32 5
  %289 = load i64, i64* %Catalog_id, align 8, !tbaa !120
  %290 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsage370 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %290, i32 0, i32 252
  %291 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %ResourceUsage370, align 8, !tbaa !173
  %arrayidx371 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %291, i64 %289
  %NewObjectNumber372 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %arrayidx371, i32 0, i32 3
  %292 = load i32, i32* %NewObjectNumber372, align 4, !tbaa !301
  %arraydecay373 = getelementptr inbounds [35 x i8], [35 x i8]* %fileID, i32 0, i32 0
  %arraydecay374 = getelementptr inbounds [35 x i8], [35 x i8]* %fileID, i32 0, i32 0
  %call375 = call i32 (i8*, i8*, ...) @gs_sprintf(i8* %arraydecay364, i8* getelementptr inbounds ([95 x i8], [95 x i8]* @.str.171, i32 0, i32 0), i64 %add366, i32 %287, i32 %292, i8* %arraydecay373, i8* %arraydecay374, i32 0) #7
  %arraydecay376 = getelementptr inbounds [1024 x i8], [1024 x i8]* %LDict, i32 0, i32 0
  %arraydecay377 = getelementptr inbounds [1024 x i8], [1024 x i8]* %LDict, i32 0, i32 0
  %call378 = call i64 @strlen(i8* %arraydecay377) #9
  %293 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %Lin_File379 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %293, i32 0, i32 1
  %file380 = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %Lin_File379, i32 0, i32 1
  %294 = load %struct._IO_FILE*, %struct._IO_FILE** %file380, align 8, !tbaa !302
  %call381 = call i64 @fwrite(i8* %arraydecay376, i64 %call378, i64 1, %struct._IO_FILE* %294) #7
  %295 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %296 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %297 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %Catalog_id382 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %297, i32 0, i32 5
  %298 = load i64, i64* %Catalog_id382, align 8, !tbaa !120
  %conv383 = trunc i64 %298 to i32
  %call384 = call i32 @rewrite_object(%struct.gx_device_pdf_s* %295, %struct.pdf_linearisation_s* %296, i32 %conv383) #7
  store i32 %call384, i32* %code, align 4, !tbaa !54
  %299 = load i32, i32* %code, align 4, !tbaa !54
  %cmp385 = icmp slt i32 %299, 0
  br i1 %cmp385, label %if.then.387, label %if.end.388

if.then.387:                                      ; preds = %for.end.360
  br label %error

if.end.388:                                       ; preds = %for.end.360
  %300 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %301 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %302 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %pages = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %302, i32 0, i32 162
  %303 = load %struct.pdf_page_s*, %struct.pdf_page_s** %pages, align 8, !tbaa !77
  %arrayidx389 = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %303, i64 0
  %Page = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %arrayidx389, i32 0, i32 0
  %304 = load %struct.cos_dict_s*, %struct.cos_dict_s** %Page, align 8, !tbaa !125
  %id = getelementptr inbounds %struct.cos_dict_s, %struct.cos_dict_s* %304, i32 0, i32 1
  %305 = load i64, i64* %id, align 8, !tbaa !109
  %conv390 = trunc i64 %305 to i32
  %call391 = call i32 @rewrite_object(%struct.gx_device_pdf_s* %300, %struct.pdf_linearisation_s* %301, i32 %conv390) #7
  store i32 %call391, i32* %code, align 4, !tbaa !54
  %306 = load i32, i32* %code, align 4, !tbaa !54
  %cmp392 = icmp slt i32 %306, 0
  br i1 %cmp392, label %if.then.394, label %if.end.395

if.then.394:                                      ; preds = %if.end.388
  br label %error

if.end.395:                                       ; preds = %if.end.388
  store i32 0, i32* %i, align 4, !tbaa !54
  br label %for.cond.396

for.cond.396:                                     ; preds = %for.inc.422, %if.end.395
  %307 = load i32, i32* %i, align 4, !tbaa !54
  %308 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsageSize397 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %308, i32 0, i32 253
  %309 = load i32, i32* %ResourceUsageSize397, align 4, !tbaa !172
  %cmp398 = icmp slt i32 %307, %309
  br i1 %cmp398, label %for.body.400, label %for.end.424

for.body.400:                                     ; preds = %for.cond.396
  %310 = load i32, i32* %i, align 4, !tbaa !54
  %idxprom401 = sext i32 %310 to i64
  %311 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsage402 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %311, i32 0, i32 252
  %312 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %ResourceUsage402, align 8, !tbaa !173
  %arrayidx403 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %312, i64 %idxprom401
  %PageUsage404 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %arrayidx403, i32 0, i32 0
  %313 = load i32, i32* %PageUsage404, align 4, !tbaa !208
  %cmp405 = icmp eq i32 %313, 1
  br i1 %cmp405, label %land.lhs.true.407, label %if.end.421

land.lhs.true.407:                                ; preds = %for.body.400
  %314 = load i32, i32* %i, align 4, !tbaa !54
  %conv408 = sext i32 %314 to i64
  %315 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %pages409 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %315, i32 0, i32 162
  %316 = load %struct.pdf_page_s*, %struct.pdf_page_s** %pages409, align 8, !tbaa !77
  %arrayidx410 = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %316, i64 0
  %Page411 = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %arrayidx410, i32 0, i32 0
  %317 = load %struct.cos_dict_s*, %struct.cos_dict_s** %Page411, align 8, !tbaa !125
  %id412 = getelementptr inbounds %struct.cos_dict_s, %struct.cos_dict_s* %317, i32 0, i32 1
  %318 = load i64, i64* %id412, align 8, !tbaa !109
  %cmp413 = icmp ne i64 %conv408, %318
  br i1 %cmp413, label %if.then.415, label %if.end.421

if.then.415:                                      ; preds = %land.lhs.true.407
  %319 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %320 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %321 = load i32, i32* %i, align 4, !tbaa !54
  %call416 = call i32 @rewrite_object(%struct.gx_device_pdf_s* %319, %struct.pdf_linearisation_s* %320, i32 %321) #7
  store i32 %call416, i32* %code, align 4, !tbaa !54
  %322 = load i32, i32* %code, align 4, !tbaa !54
  %cmp417 = icmp slt i32 %322, 0
  br i1 %cmp417, label %if.then.419, label %if.end.420

if.then.419:                                      ; preds = %if.then.415
  br label %error

if.end.420:                                       ; preds = %if.then.415
  br label %if.end.421

if.end.421:                                       ; preds = %if.end.420, %land.lhs.true.407, %for.body.400
  br label %for.inc.422

for.inc.422:                                      ; preds = %if.end.421
  %323 = load i32, i32* %i, align 4, !tbaa !54
  %inc423 = add nsw i32 %323, 1
  store i32 %inc423, i32* %i, align 4, !tbaa !54
  br label %for.cond.396

for.end.424:                                      ; preds = %for.cond.396
  %324 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %Lin_File425 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %324, i32 0, i32 1
  %file426 = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %Lin_File425, i32 0, i32 1
  %325 = load %struct._IO_FILE*, %struct._IO_FILE** %file426, align 8, !tbaa !302
  %call427 = call i64 @gp_ftell_64(%struct._IO_FILE* %325) #7
  %326 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %E = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %326, i32 0, i32 23
  store i64 %call427, i64* %E, align 8, !tbaa !308
  %327 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %LastResource428 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %327, i32 0, i32 14
  %328 = load i64, i64* %LastResource428, align 8, !tbaa !164
  %add429 = add nsw i64 %328, 2
  %conv430 = trunc i64 %add429 to i32
  store i32 %conv430, i32* %HintStreamObj, align 4, !tbaa !54
  %329 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %330 = load i32, i32* %HintStreamObj, align 4, !tbaa !54
  %conv431 = sext i32 %330 to i64
  %call432 = call i32 @pdf_record_usage(%struct.gx_device_pdf_s* %329, i64 %conv431, i32 -2) #7
  %331 = load i32, i32* %HintStreamObj, align 4, !tbaa !54
  %idxprom433 = sext i32 %331 to i64
  %332 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsage434 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %332, i32 0, i32 252
  %333 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %ResourceUsage434, align 8, !tbaa !173
  %arrayidx435 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %333, i64 %idxprom433
  %OriginalOffset436 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %arrayidx435, i32 0, i32 4
  store i64 0, i64* %OriginalOffset436, align 8, !tbaa !299
  %334 = load i32, i32* %HintStreamObj, align 4, !tbaa !54
  %335 = load i32, i32* %HintStreamObj, align 4, !tbaa !54
  %idxprom437 = sext i32 %335 to i64
  %336 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsage438 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %336, i32 0, i32 252
  %337 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %ResourceUsage438, align 8, !tbaa !173
  %arrayidx439 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %337, i64 %idxprom437
  %NewObjectNumber440 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %arrayidx439, i32 0, i32 3
  store i32 %334, i32* %NewObjectNumber440, align 4, !tbaa !301
  %338 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %Lin_File441 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %338, i32 0, i32 1
  %file442 = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %Lin_File441, i32 0, i32 1
  %339 = load %struct._IO_FILE*, %struct._IO_FILE** %file442, align 8, !tbaa !302
  %call443 = call i64 @gp_ftell_64(%struct._IO_FILE* %339) #7
  %340 = load i32, i32* %HintStreamObj, align 4, !tbaa !54
  %idxprom444 = sext i32 %340 to i64
  %341 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsage445 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %341, i32 0, i32 252
  %342 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %ResourceUsage445, align 8, !tbaa !173
  %arrayidx446 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %342, i64 %idxprom444
  %LinearisedOffset447 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %arrayidx446, i32 0, i32 5
  store i64 %call443, i64* %LinearisedOffset447, align 8, !tbaa !304
  store i32 1, i32* %i, align 4, !tbaa !54
  br label %for.cond.448

for.cond.448:                                     ; preds = %for.inc.490, %for.end.424
  %343 = load i32, i32* %i, align 4, !tbaa !54
  %344 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %next_page = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %344, i32 0, i32 153
  %345 = load i32, i32* %next_page, align 4, !tbaa !72
  %cmp449 = icmp slt i32 %343, %345
  br i1 %cmp449, label %for.body.451, label %for.end.492

for.body.451:                                     ; preds = %for.cond.448
  %346 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %347 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %348 = load i32, i32* %i, align 4, !tbaa !54
  %idxprom452 = sext i32 %348 to i64
  %349 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %pages453 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %349, i32 0, i32 162
  %350 = load %struct.pdf_page_s*, %struct.pdf_page_s** %pages453, align 8, !tbaa !77
  %arrayidx454 = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %350, i64 %idxprom452
  %Page455 = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %arrayidx454, i32 0, i32 0
  %351 = load %struct.cos_dict_s*, %struct.cos_dict_s** %Page455, align 8, !tbaa !125
  %id456 = getelementptr inbounds %struct.cos_dict_s, %struct.cos_dict_s* %351, i32 0, i32 1
  %352 = load i64, i64* %id456, align 8, !tbaa !109
  %conv457 = trunc i64 %352 to i32
  %call458 = call i32 @rewrite_object(%struct.gx_device_pdf_s* %346, %struct.pdf_linearisation_s* %347, i32 %conv457) #7
  store i32 %call458, i32* %code, align 4, !tbaa !54
  %353 = load i32, i32* %code, align 4, !tbaa !54
  %cmp459 = icmp slt i32 %353, 0
  br i1 %cmp459, label %if.then.461, label %if.end.462

if.then.461:                                      ; preds = %for.body.451
  br label %error

if.end.462:                                       ; preds = %for.body.451
  store i32 0, i32* %j, align 4, !tbaa !54
  br label %for.cond.463

for.cond.463:                                     ; preds = %for.inc.487, %if.end.462
  %354 = load i32, i32* %j, align 4, !tbaa !54
  %355 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsageSize464 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %355, i32 0, i32 253
  %356 = load i32, i32* %ResourceUsageSize464, align 4, !tbaa !172
  %cmp465 = icmp slt i32 %354, %356
  br i1 %cmp465, label %for.body.467, label %for.end.489

for.body.467:                                     ; preds = %for.cond.463
  %357 = load i32, i32* %j, align 4, !tbaa !54
  %idxprom468 = sext i32 %357 to i64
  %358 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsage469 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %358, i32 0, i32 252
  %359 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %ResourceUsage469, align 8, !tbaa !173
  %arrayidx470 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %359, i64 %idxprom468
  %PageUsage471 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %arrayidx470, i32 0, i32 0
  %360 = load i32, i32* %PageUsage471, align 4, !tbaa !208
  %sub472 = sub nsw i32 %360, 1
  %361 = load i32, i32* %i, align 4, !tbaa !54
  %cmp473 = icmp eq i32 %sub472, %361
  br i1 %cmp473, label %land.lhs.true.475, label %if.end.486

land.lhs.true.475:                                ; preds = %for.body.467
  %362 = load i32, i32* %j, align 4, !tbaa !54
  %conv476 = sext i32 %362 to i64
  %363 = load i32, i32* %i, align 4, !tbaa !54
  %idxprom477 = sext i32 %363 to i64
  %364 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %pages478 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %364, i32 0, i32 162
  %365 = load %struct.pdf_page_s*, %struct.pdf_page_s** %pages478, align 8, !tbaa !77
  %arrayidx479 = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %365, i64 %idxprom477
  %Page480 = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %arrayidx479, i32 0, i32 0
  %366 = load %struct.cos_dict_s*, %struct.cos_dict_s** %Page480, align 8, !tbaa !125
  %id481 = getelementptr inbounds %struct.cos_dict_s, %struct.cos_dict_s* %366, i32 0, i32 1
  %367 = load i64, i64* %id481, align 8, !tbaa !109
  %cmp482 = icmp ne i64 %conv476, %367
  br i1 %cmp482, label %if.then.484, label %if.end.486

if.then.484:                                      ; preds = %land.lhs.true.475
  %368 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %369 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %370 = load i32, i32* %j, align 4, !tbaa !54
  %call485 = call i32 @rewrite_object(%struct.gx_device_pdf_s* %368, %struct.pdf_linearisation_s* %369, i32 %370) #7
  store i32 %call485, i32* %code, align 4, !tbaa !54
  br label %if.end.486

if.end.486:                                       ; preds = %if.then.484, %land.lhs.true.475, %for.body.467
  br label %for.inc.487

for.inc.487:                                      ; preds = %if.end.486
  %371 = load i32, i32* %j, align 4, !tbaa !54
  %inc488 = add nsw i32 %371, 1
  store i32 %inc488, i32* %j, align 4, !tbaa !54
  br label %for.cond.463

for.end.489:                                      ; preds = %for.cond.463
  br label %for.inc.490

for.inc.490:                                      ; preds = %for.end.489
  %372 = load i32, i32* %i, align 4, !tbaa !54
  %inc491 = add nsw i32 %372, 1
  store i32 %inc491, i32* %i, align 4, !tbaa !54
  br label %for.cond.448

for.end.492:                                      ; preds = %for.cond.448
  store i32 0, i32* %i, align 4, !tbaa !54
  br label %for.cond.493

for.cond.493:                                     ; preds = %for.inc.511, %for.end.492
  %373 = load i32, i32* %i, align 4, !tbaa !54
  %374 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsageSize494 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %374, i32 0, i32 253
  %375 = load i32, i32* %ResourceUsageSize494, align 4, !tbaa !172
  %cmp495 = icmp slt i32 %373, %375
  br i1 %cmp495, label %for.body.497, label %for.end.513

for.body.497:                                     ; preds = %for.cond.493
  %376 = load i32, i32* %i, align 4, !tbaa !54
  %idxprom498 = sext i32 %376 to i64
  %377 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsage499 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %377, i32 0, i32 252
  %378 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %ResourceUsage499, align 8, !tbaa !173
  %arrayidx500 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %378, i64 %idxprom498
  %PageUsage501 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %arrayidx500, i32 0, i32 0
  %379 = load i32, i32* %PageUsage501, align 4, !tbaa !208
  %cmp502 = icmp eq i32 %379, -1
  br i1 %cmp502, label %if.then.504, label %if.end.510

if.then.504:                                      ; preds = %for.body.497
  %380 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %381 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %382 = load i32, i32* %i, align 4, !tbaa !54
  %call505 = call i32 @rewrite_object(%struct.gx_device_pdf_s* %380, %struct.pdf_linearisation_s* %381, i32 %382) #7
  store i32 %call505, i32* %code, align 4, !tbaa !54
  %383 = load i32, i32* %code, align 4, !tbaa !54
  %cmp506 = icmp slt i32 %383, 0
  br i1 %cmp506, label %if.then.508, label %if.end.509

if.then.508:                                      ; preds = %if.then.504
  br label %error

if.end.509:                                       ; preds = %if.then.504
  br label %if.end.510

if.end.510:                                       ; preds = %if.end.509, %for.body.497
  br label %for.inc.511

for.inc.511:                                      ; preds = %if.end.510
  %384 = load i32, i32* %i, align 4, !tbaa !54
  %inc512 = add nsw i32 %384, 1
  store i32 %inc512, i32* %i, align 4, !tbaa !54
  br label %for.cond.493

for.end.513:                                      ; preds = %for.cond.493
  store i32 1, i32* %i, align 4, !tbaa !54
  br label %for.cond.514

for.cond.514:                                     ; preds = %for.inc.539, %for.end.513
  %385 = load i32, i32* %i, align 4, !tbaa !54
  %386 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsageSize515 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %386, i32 0, i32 253
  %387 = load i32, i32* %ResourceUsageSize515, align 4, !tbaa !172
  %cmp516 = icmp slt i32 %385, %387
  br i1 %cmp516, label %for.body.518, label %for.end.541

for.body.518:                                     ; preds = %for.cond.514
  %388 = load i32, i32* %i, align 4, !tbaa !54
  %idxprom519 = sext i32 %388 to i64
  %389 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsage520 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %389, i32 0, i32 252
  %390 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %ResourceUsage520, align 8, !tbaa !173
  %arrayidx521 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %390, i64 %idxprom519
  %PageUsage522 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %arrayidx521, i32 0, i32 0
  %391 = load i32, i32* %PageUsage522, align 4, !tbaa !208
  %cmp523 = icmp eq i32 %391, 0
  br i1 %cmp523, label %if.then.532, label %lor.lhs.false.525

lor.lhs.false.525:                                ; preds = %for.body.518
  %392 = load i32, i32* %i, align 4, !tbaa !54
  %idxprom526 = sext i32 %392 to i64
  %393 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsage527 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %393, i32 0, i32 252
  %394 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %ResourceUsage527, align 8, !tbaa !173
  %arrayidx528 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %394, i64 %idxprom526
  %PageUsage529 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %arrayidx528, i32 0, i32 0
  %395 = load i32, i32* %PageUsage529, align 4, !tbaa !208
  %cmp530 = icmp eq i32 %395, -3
  br i1 %cmp530, label %if.then.532, label %if.end.538

if.then.532:                                      ; preds = %lor.lhs.false.525, %for.body.518
  %396 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %397 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %398 = load i32, i32* %i, align 4, !tbaa !54
  %call533 = call i32 @rewrite_object(%struct.gx_device_pdf_s* %396, %struct.pdf_linearisation_s* %397, i32 %398) #7
  store i32 %call533, i32* %code, align 4, !tbaa !54
  %399 = load i32, i32* %code, align 4, !tbaa !54
  %cmp534 = icmp slt i32 %399, 0
  br i1 %cmp534, label %if.then.536, label %if.end.537

if.then.536:                                      ; preds = %if.then.532
  br label %error

if.end.537:                                       ; preds = %if.then.532
  br label %if.end.538

if.end.538:                                       ; preds = %if.end.537, %lor.lhs.false.525
  br label %for.inc.539

for.inc.539:                                      ; preds = %if.end.538
  %400 = load i32, i32* %i, align 4, !tbaa !54
  %inc540 = add nsw i32 %400, 1
  store i32 %inc540, i32* %i, align 4, !tbaa !54
  br label %for.cond.514

for.end.541:                                      ; preds = %for.cond.514
  %401 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %Lin_File542 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %401, i32 0, i32 1
  %file543 = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %Lin_File542, i32 0, i32 1
  %402 = load %struct._IO_FILE*, %struct._IO_FILE** %file543, align 8, !tbaa !302
  %call544 = call i32 @gp_fseek_64(%struct._IO_FILE* %402, i64 0, i32 0) #7
  %403 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %sfile545 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %403, i32 0, i32 0
  %404 = load %struct._IO_FILE*, %struct._IO_FILE** %sfile545, align 8, !tbaa !290
  %call546 = call i32 @gp_fseek_64(%struct._IO_FILE* %404, i64 0, i32 0) #7
  store i32 %call546, i32* %code, align 4, !tbaa !54
  %405 = load i32, i32* %HintStreamObj, align 4, !tbaa !54
  %idxprom547 = sext i32 %405 to i64
  %406 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsage548 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %406, i32 0, i32 252
  %407 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %ResourceUsage548, align 8, !tbaa !173
  %arrayidx549 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %407, i64 %idxprom547
  %LinearisedOffset550 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %arrayidx549, i32 0, i32 5
  %408 = load i64, i64* %LinearisedOffset550, align 8, !tbaa !304
  store i64 %408, i64* %Length, align 8, !tbaa !107
  br label %while.cond

while.cond:                                       ; preds = %if.end.575, %for.end.541
  %409 = load i64, i64* %Length, align 8, !tbaa !107
  %tobool551 = icmp ne i64 %409, 0
  br i1 %tobool551, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %410 = load i32, i32* %code, align 4, !tbaa !54
  %cmp552 = icmp sge i32 %410, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %411 = phi i1 [ false, %while.cond ], [ %cmp552, %land.rhs ]
  br i1 %411, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %412 = load i64, i64* %Length, align 8, !tbaa !107
  %cmp554 = icmp sgt i64 %412, 1024
  br i1 %cmp554, label %if.then.556, label %if.else.566

if.then.556:                                      ; preds = %while.body
  %arraydecay557 = getelementptr inbounds [1024 x i8], [1024 x i8]* %Buffer, i32 0, i32 0
  %413 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %Lin_File558 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %413, i32 0, i32 1
  %file559 = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %Lin_File558, i32 0, i32 1
  %414 = load %struct._IO_FILE*, %struct._IO_FILE** %file559, align 8, !tbaa !302
  %call560 = call i64 @fread(i8* %arraydecay557, i64 1024, i64 1, %struct._IO_FILE* %414) #7
  %conv561 = trunc i64 %call560 to i32
  store i32 %conv561, i32* %code, align 4, !tbaa !54
  %arraydecay562 = getelementptr inbounds [1024 x i8], [1024 x i8]* %Buffer, i32 0, i32 0
  %415 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %sfile563 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %415, i32 0, i32 0
  %416 = load %struct._IO_FILE*, %struct._IO_FILE** %sfile563, align 8, !tbaa !290
  %call564 = call i64 @fwrite(i8* %arraydecay562, i64 1024, i64 1, %struct._IO_FILE* %416) #7
  %417 = load i64, i64* %Length, align 8, !tbaa !107
  %sub565 = sub nsw i64 %417, 1024
  store i64 %sub565, i64* %Length, align 8, !tbaa !107
  br label %if.end.575

if.else.566:                                      ; preds = %while.body
  %arraydecay567 = getelementptr inbounds [1024 x i8], [1024 x i8]* %Buffer, i32 0, i32 0
  %418 = load i64, i64* %Length, align 8, !tbaa !107
  %419 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %Lin_File568 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %419, i32 0, i32 1
  %file569 = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %Lin_File568, i32 0, i32 1
  %420 = load %struct._IO_FILE*, %struct._IO_FILE** %file569, align 8, !tbaa !302
  %call570 = call i64 @fread(i8* %arraydecay567, i64 %418, i64 1, %struct._IO_FILE* %420) #7
  %conv571 = trunc i64 %call570 to i32
  store i32 %conv571, i32* %code, align 4, !tbaa !54
  %arraydecay572 = getelementptr inbounds [1024 x i8], [1024 x i8]* %Buffer, i32 0, i32 0
  %421 = load i64, i64* %Length, align 8, !tbaa !107
  %422 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %sfile573 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %422, i32 0, i32 0
  %423 = load %struct._IO_FILE*, %struct._IO_FILE** %sfile573, align 8, !tbaa !290
  %call574 = call i64 @fwrite(i8* %arraydecay572, i64 %421, i64 1, %struct._IO_FILE* %423) #7
  store i64 0, i64* %Length, align 8, !tbaa !107
  br label %if.end.575

if.end.575:                                       ; preds = %if.else.566, %if.then.556
  br label %while.cond

while.end:                                        ; preds = %land.end
  %arraydecay576 = getelementptr inbounds [1024 x i8], [1024 x i8]* %LDict, i32 0, i32 0
  %424 = load i32, i32* %HintStreamObj, align 4, !tbaa !54
  %call577 = call i32 (i8*, i8*, ...) @gs_sprintf(i8* %arraydecay576, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.172, i32 0, i32 0), i32 %424) #7
  %arraydecay578 = getelementptr inbounds [1024 x i8], [1024 x i8]* %LDict, i32 0, i32 0
  %arraydecay579 = getelementptr inbounds [1024 x i8], [1024 x i8]* %LDict, i32 0, i32 0
  %call580 = call i64 @strlen(i8* %arraydecay579) #9
  %425 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %sfile581 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %425, i32 0, i32 0
  %426 = load %struct._IO_FILE*, %struct._IO_FILE** %sfile581, align 8, !tbaa !290
  %call582 = call i64 @fwrite(i8* %arraydecay578, i64 %call580, i64 1, %struct._IO_FILE* %426) #7
  %427 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %sfile583 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %427, i32 0, i32 0
  %428 = load %struct._IO_FILE*, %struct._IO_FILE** %sfile583, align 8, !tbaa !290
  %call584 = call i64 @gp_ftell_64(%struct._IO_FILE* %428) #7
  store i64 %call584, i64* %HintStreamStart, align 8, !tbaa !107
  %429 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %HintBuffer = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %429, i32 0, i32 2
  %arraydecay585 = getelementptr inbounds [256 x i8], [256 x i8]* %HintBuffer, i32 0, i32 0
  %call586 = call i8* @memset(i8* %arraydecay585, i32 0, i64 256) #8
  %430 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %HintByte = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %430, i32 0, i32 4
  store i8 0, i8* %HintByte, align 1, !tbaa !309
  %431 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %HintBits = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %431, i32 0, i32 3
  store i8 0, i8* %HintBits, align 1, !tbaa !310
  %432 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %v_memory587 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %432, i32 0, i32 43
  %433 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory587, align 8, !tbaa !52
  %procs588 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %433, i32 0, i32 1
  %alloc_bytes = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs588, i32 0, i32 7
  %434 = load i8* (%struct.gs_memory_s*, i32, i8*)*, i8* (%struct.gs_memory_s*, i32, i8*)** %alloc_bytes, align 8, !tbaa !64
  %435 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %v_memory589 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %435, i32 0, i32 43
  %436 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory589, align 8, !tbaa !52
  %437 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %next_page590 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %437, i32 0, i32 153
  %438 = load i32, i32* %next_page590, align 4, !tbaa !72
  %conv591 = sext i32 %438 to i64
  %mul592 = mul i64 %conv591, 40
  %conv593 = trunc i64 %mul592 to i32
  %call594 = call i8* %434(%struct.gs_memory_s* %436, i32 %conv593, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.173, i32 0, i32 0)) #7
  %439 = bitcast i8* %call594 to %struct.page_hint_stream_s*
  %440 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %PageHints = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %440, i32 0, i32 26
  store %struct.page_hint_stream_s* %439, %struct.page_hint_stream_s** %PageHints, align 8, !tbaa !311
  %441 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %PageHints595 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %441, i32 0, i32 26
  %442 = load %struct.page_hint_stream_s*, %struct.page_hint_stream_s** %PageHints595, align 8, !tbaa !311
  %443 = bitcast %struct.page_hint_stream_s* %442 to i8*
  %444 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %next_page596 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %444, i32 0, i32 153
  %445 = load i32, i32* %next_page596, align 4, !tbaa !72
  %conv597 = sext i32 %445 to i64
  %mul598 = mul i64 %conv597, 40
  %call599 = call i8* @memset(i8* %443, i32 0, i64 %mul598) #8
  %446 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %next_page600 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %446, i32 0, i32 153
  %447 = load i32, i32* %next_page600, align 4, !tbaa !72
  %448 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %NumPageHints = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %448, i32 0, i32 25
  store i32 %447, i32* %NumPageHints, align 4, !tbaa !312
  %449 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %v_memory601 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %449, i32 0, i32 43
  %450 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory601, align 8, !tbaa !52
  %procs602 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %450, i32 0, i32 1
  %alloc_bytes603 = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs602, i32 0, i32 7
  %451 = load i8* (%struct.gs_memory_s*, i32, i8*)*, i8* (%struct.gs_memory_s*, i32, i8*)** %alloc_bytes603, align 8, !tbaa !64
  %452 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %v_memory604 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %452, i32 0, i32 43
  %453 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory604, align 8, !tbaa !52
  %454 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %NumPage1Resources605 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %454, i32 0, i32 8
  %455 = load i64, i64* %NumPage1Resources605, align 8, !tbaa !293
  %456 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %NumSharedResources606 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %456, i32 0, i32 10
  %457 = load i64, i64* %NumSharedResources606, align 8, !tbaa !296
  %add607 = add nsw i64 %455, %457
  %mul608 = mul i64 %add607, 24
  %conv609 = trunc i64 %mul608 to i32
  %call610 = call i8* %451(%struct.gs_memory_s* %453, i32 %conv609, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.174, i32 0, i32 0)) #7
  %458 = bitcast i8* %call610 to %struct.share_hint_stream_s*
  %459 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %SharedHints = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %459, i32 0, i32 29
  store %struct.share_hint_stream_s* %458, %struct.share_hint_stream_s** %SharedHints, align 8, !tbaa !313
  %460 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %SharedHints611 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %460, i32 0, i32 29
  %461 = load %struct.share_hint_stream_s*, %struct.share_hint_stream_s** %SharedHints611, align 8, !tbaa !313
  %462 = bitcast %struct.share_hint_stream_s* %461 to i8*
  %463 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %NumPage1Resources612 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %463, i32 0, i32 8
  %464 = load i64, i64* %NumPage1Resources612, align 8, !tbaa !293
  %465 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %NumSharedResources613 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %465, i32 0, i32 10
  %466 = load i64, i64* %NumSharedResources613, align 8, !tbaa !296
  %add614 = add nsw i64 %464, %466
  %mul615 = mul i64 %add614, 24
  %call616 = call i8* @memset(i8* %462, i32 0, i64 %mul615) #8
  %467 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %NumPage1Resources617 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %467, i32 0, i32 8
  %468 = load i64, i64* %NumPage1Resources617, align 8, !tbaa !293
  %469 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %NumSharedResources618 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %469, i32 0, i32 10
  %470 = load i64, i64* %NumSharedResources618, align 8, !tbaa !296
  %add619 = add nsw i64 %468, %470
  %conv620 = trunc i64 %add619 to i32
  %471 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %NumSharedHints = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %471, i32 0, i32 28
  store i32 %conv620, i32* %NumSharedHints, align 4, !tbaa !314
  %472 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %PageHintHeader = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %472, i32 0, i32 24
  %473 = bitcast %struct.page_hint_stream_header_s* %PageHintHeader to i8*
  %call621 = call i8* @memset(i8* %473, i32 0, i64 60) #8
  %474 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %SharedHintHeader = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %474, i32 0, i32 27
  %475 = bitcast %struct.shared_hint_stream_header_s* %SharedHintHeader to i8*
  %call622 = call i8* @memset(i8* %475, i32 0, i64 40) #8
  %476 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %PageHintHeader623 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %476, i32 0, i32 24
  %LeastObjectsPerPage = getelementptr inbounds %struct.page_hint_stream_header_s, %struct.page_hint_stream_header_s* %PageHintHeader623, i32 0, i32 0
  store i32 2147483647, i32* %LeastObjectsPerPage, align 4, !tbaa !315
  %477 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %PageHintHeader624 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %477, i32 0, i32 24
  %LeastPageLength = getelementptr inbounds %struct.page_hint_stream_header_s, %struct.page_hint_stream_header_s* %PageHintHeader624, i32 0, i32 3
  store i32 2147483647, i32* %LeastPageLength, align 4, !tbaa !316
  %478 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %PageHintHeader625 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %478, i32 0, i32 24
  %LeastPageOffset = getelementptr inbounds %struct.page_hint_stream_header_s, %struct.page_hint_stream_header_s* %PageHintHeader625, i32 0, i32 6
  store i32 2147483647, i32* %LeastPageOffset, align 4, !tbaa !317
  %479 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %PageHintHeader626 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %479, i32 0, i32 24
  %LeastContentLength = getelementptr inbounds %struct.page_hint_stream_header_s, %struct.page_hint_stream_header_s* %PageHintHeader626, i32 0, i32 9
  store i32 2147483647, i32* %LeastContentLength, align 4, !tbaa !318
  store i32 0, i32* %i, align 4, !tbaa !54
  br label %for.cond.627

for.cond.627:                                     ; preds = %for.inc.644, %while.end
  %480 = load i32, i32* %i, align 4, !tbaa !54
  %481 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %next_page628 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %481, i32 0, i32 153
  %482 = load i32, i32* %next_page628, align 4, !tbaa !72
  %cmp629 = icmp slt i32 %480, %482
  br i1 %cmp629, label %for.body.631, label %for.end.646

for.body.631:                                     ; preds = %for.cond.627
  %483 = bitcast i32* %PageContentID to i8*
  call void @llvm.lifetime.start(i64 4, i8* %483) #2
  %484 = load i32, i32* %i, align 4, !tbaa !54
  %idxprom632 = sext i32 %484 to i64
  %485 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %pages633 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %485, i32 0, i32 162
  %486 = load %struct.pdf_page_s*, %struct.pdf_page_s** %pages633, align 8, !tbaa !77
  %arrayidx634 = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %486, i64 %idxprom632
  %contents_id = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %arrayidx634, i32 0, i32 3
  %487 = load i64, i64* %contents_id, align 8, !tbaa !258
  %conv635 = trunc i64 %487 to i32
  store i32 %conv635, i32* %PageContentID, align 4, !tbaa !54
  %488 = bitcast %struct.linearisation_record_s** %record to i8*
  call void @llvm.lifetime.start(i64 8, i8* %488) #2
  %489 = load i32, i32* %PageContentID, align 4, !tbaa !54
  %idxprom636 = sext i32 %489 to i64
  %490 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsage637 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %490, i32 0, i32 252
  %491 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %ResourceUsage637, align 8, !tbaa !173
  %arrayidx638 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %491, i64 %idxprom636
  store %struct.linearisation_record_s* %arrayidx638, %struct.linearisation_record_s** %record, align 8, !tbaa !1
  %492 = bitcast %struct.page_hint_stream_s** %pagehint to i8*
  call void @llvm.lifetime.start(i64 8, i8* %492) #2
  %493 = load i32, i32* %i, align 4, !tbaa !54
  %idxprom639 = sext i32 %493 to i64
  %494 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %PageHints640 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %494, i32 0, i32 26
  %495 = load %struct.page_hint_stream_s*, %struct.page_hint_stream_s** %PageHints640, align 8, !tbaa !311
  %arrayidx641 = getelementptr inbounds %struct.page_hint_stream_s, %struct.page_hint_stream_s* %495, i64 %idxprom639
  store %struct.page_hint_stream_s* %arrayidx641, %struct.page_hint_stream_s** %pagehint, align 8, !tbaa !1
  %496 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %record, align 8, !tbaa !1
  %LinearisedOffset642 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %496, i32 0, i32 5
  %497 = load i64, i64* %LinearisedOffset642, align 8, !tbaa !304
  %498 = load %struct.page_hint_stream_s*, %struct.page_hint_stream_s** %pagehint, align 8, !tbaa !1
  %ContentOffset = getelementptr inbounds %struct.page_hint_stream_s, %struct.page_hint_stream_s* %498, i32 0, i32 4
  store i64 %497, i64* %ContentOffset, align 8, !tbaa !319
  %499 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %record, align 8, !tbaa !1
  %Length643 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %499, i32 0, i32 6
  %500 = load i64, i64* %Length643, align 8, !tbaa !300
  %501 = load %struct.page_hint_stream_s*, %struct.page_hint_stream_s** %pagehint, align 8, !tbaa !1
  %ContentLength = getelementptr inbounds %struct.page_hint_stream_s, %struct.page_hint_stream_s* %501, i32 0, i32 5
  store i64 %500, i64* %ContentLength, align 8, !tbaa !321
  %502 = bitcast %struct.page_hint_stream_s** %pagehint to i8*
  call void @llvm.lifetime.end(i64 8, i8* %502) #2
  %503 = bitcast %struct.linearisation_record_s** %record to i8*
  call void @llvm.lifetime.end(i64 8, i8* %503) #2
  %504 = bitcast i32* %PageContentID to i8*
  call void @llvm.lifetime.end(i64 4, i8* %504) #2
  br label %for.inc.644

for.inc.644:                                      ; preds = %for.body.631
  %505 = load i32, i32* %i, align 4, !tbaa !54
  %inc645 = add nsw i32 %505, 1
  store i32 %inc645, i32* %i, align 4, !tbaa !54
  br label %for.cond.627

for.end.646:                                      ; preds = %for.cond.627
  store i32 0, i32* %k, align 4, !tbaa !54
  store i32 1, i32* %i, align 4, !tbaa !54
  br label %for.cond.647

for.cond.647:                                     ; preds = %for.inc.792, %for.end.646
  %506 = load i32, i32* %i, align 4, !tbaa !54
  %507 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsageSize648 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %507, i32 0, i32 253
  %508 = load i32, i32* %ResourceUsageSize648, align 4, !tbaa !172
  %cmp649 = icmp slt i32 %506, %508
  br i1 %cmp649, label %for.body.651, label %for.end.794

for.body.651:                                     ; preds = %for.cond.647
  %509 = bitcast %struct.linearisation_record_s** %record652 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %509) #2
  %510 = load i32, i32* %i, align 4, !tbaa !54
  %idxprom653 = sext i32 %510 to i64
  %511 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsage654 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %511, i32 0, i32 252
  %512 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %ResourceUsage654, align 8, !tbaa !173
  %arrayidx655 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %512, i64 %idxprom653
  store %struct.linearisation_record_s* %arrayidx655, %struct.linearisation_record_s** %record652, align 8, !tbaa !1
  %513 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %record652, align 8, !tbaa !1
  %PageUsage656 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %513, i32 0, i32 0
  %514 = load i32, i32* %PageUsage656, align 4, !tbaa !208
  %cmp657 = icmp slt i32 %514, -1
  br i1 %cmp657, label %if.then.663, label %lor.lhs.false.659

lor.lhs.false.659:                                ; preds = %for.body.651
  %515 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %record652, align 8, !tbaa !1
  %PageUsage660 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %515, i32 0, i32 0
  %516 = load i32, i32* %PageUsage660, align 4, !tbaa !208
  %cmp661 = icmp eq i32 %516, 0
  br i1 %cmp661, label %if.then.663, label %if.end.664

if.then.663:                                      ; preds = %lor.lhs.false.659, %for.body.651
  store i32 49, i32* %cleanup.dest.slot
  br label %cleanup.789

if.end.664:                                       ; preds = %lor.lhs.false.659
  %517 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %record652, align 8, !tbaa !1
  %PageUsage665 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %517, i32 0, i32 0
  %518 = load i32, i32* %PageUsage665, align 4, !tbaa !208
  %cmp666 = icmp eq i32 %518, -1
  br i1 %cmp666, label %if.then.668, label %if.else.744

if.then.668:                                      ; preds = %if.end.664
  store i32 0, i32* %j, align 4, !tbaa !54
  br label %for.cond.669

for.cond.669:                                     ; preds = %for.inc.727, %if.then.668
  %519 = load i32, i32* %j, align 4, !tbaa !54
  %520 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %record652, align 8, !tbaa !1
  %NumPagesUsing = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %520, i32 0, i32 1
  %521 = load i32, i32* %NumPagesUsing, align 4, !tbaa !209
  %cmp670 = icmp slt i32 %519, %521
  br i1 %cmp670, label %for.body.672, label %for.end.729

for.body.672:                                     ; preds = %for.cond.669
  %522 = bitcast i32* %page to i8*
  call void @llvm.lifetime.start(i64 4, i8* %522) #2
  %523 = load i32, i32* %j, align 4, !tbaa !54
  %idxprom673 = sext i32 %523 to i64
  %524 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %record652, align 8, !tbaa !1
  %PageList = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %524, i32 0, i32 2
  %525 = load i32*, i32** %PageList, align 8, !tbaa !174
  %arrayidx674 = getelementptr inbounds i32, i32* %525, i64 %idxprom673
  %526 = load i32, i32* %arrayidx674, align 4, !tbaa !54
  store i32 %526, i32* %page, align 4, !tbaa !54
  %527 = bitcast %struct.page_hint_stream_s** %pagehint675 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %527) #2
  %528 = load i32, i32* %page, align 4, !tbaa !54
  %529 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %next_page676 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %529, i32 0, i32 153
  %530 = load i32, i32* %next_page676, align 4, !tbaa !72
  %cmp677 = icmp sge i32 %528, %530
  br i1 %cmp677, label %if.then.679, label %if.end.680

if.then.679:                                      ; preds = %for.body.672
  store i32 52, i32* %cleanup.dest.slot
  br label %cleanup

if.end.680:                                       ; preds = %for.body.672
  %531 = load i32, i32* %page, align 4, !tbaa !54
  %sub681 = sub nsw i32 %531, 1
  %idxprom682 = sext i32 %sub681 to i64
  %532 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %PageHints683 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %532, i32 0, i32 26
  %533 = load %struct.page_hint_stream_s*, %struct.page_hint_stream_s** %PageHints683, align 8, !tbaa !311
  %arrayidx684 = getelementptr inbounds %struct.page_hint_stream_s, %struct.page_hint_stream_s* %533, i64 %idxprom682
  store %struct.page_hint_stream_s* %arrayidx684, %struct.page_hint_stream_s** %pagehint675, align 8, !tbaa !1
  %534 = load %struct.page_hint_stream_s*, %struct.page_hint_stream_s** %pagehint675, align 8, !tbaa !1
  %SharedObjectRef = getelementptr inbounds %struct.page_hint_stream_s, %struct.page_hint_stream_s* %534, i32 0, i32 3
  %535 = load i32*, i32** %SharedObjectRef, align 8, !tbaa !322
  %tobool685 = icmp ne i32* %535, null
  br i1 %tobool685, label %if.then.686, label %if.else.707

if.then.686:                                      ; preds = %if.end.680
  %536 = bitcast i32** %Temp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %536) #2
  %537 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %v_memory687 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %537, i32 0, i32 43
  %538 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory687, align 8, !tbaa !52
  %procs688 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %538, i32 0, i32 1
  %alloc_bytes689 = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs688, i32 0, i32 7
  %539 = load i8* (%struct.gs_memory_s*, i32, i8*)*, i8* (%struct.gs_memory_s*, i32, i8*)** %alloc_bytes689, align 8, !tbaa !64
  %540 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %v_memory690 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %540, i32 0, i32 43
  %541 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory690, align 8, !tbaa !52
  %542 = load %struct.page_hint_stream_s*, %struct.page_hint_stream_s** %pagehint675, align 8, !tbaa !1
  %NumSharedObjects = getelementptr inbounds %struct.page_hint_stream_s, %struct.page_hint_stream_s* %542, i32 0, i32 2
  %543 = load i32, i32* %NumSharedObjects, align 4, !tbaa !323
  %add691 = add i32 %543, 1
  %conv692 = zext i32 %add691 to i64
  %mul693 = mul i64 %conv692, 4
  %conv694 = trunc i64 %mul693 to i32
  %call695 = call i8* %539(%struct.gs_memory_s* %541, i32 %conv694, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.175, i32 0, i32 0)) #7
  %544 = bitcast i8* %call695 to i32*
  store i32* %544, i32** %Temp, align 8, !tbaa !1
  %545 = load i32*, i32** %Temp, align 8, !tbaa !1
  %546 = bitcast i32* %545 to i8*
  %547 = load %struct.page_hint_stream_s*, %struct.page_hint_stream_s** %pagehint675, align 8, !tbaa !1
  %SharedObjectRef696 = getelementptr inbounds %struct.page_hint_stream_s, %struct.page_hint_stream_s* %547, i32 0, i32 3
  %548 = load i32*, i32** %SharedObjectRef696, align 8, !tbaa !322
  %549 = bitcast i32* %548 to i8*
  %550 = load %struct.page_hint_stream_s*, %struct.page_hint_stream_s** %pagehint675, align 8, !tbaa !1
  %NumSharedObjects697 = getelementptr inbounds %struct.page_hint_stream_s, %struct.page_hint_stream_s* %550, i32 0, i32 2
  %551 = load i32, i32* %NumSharedObjects697, align 4, !tbaa !323
  %conv698 = zext i32 %551 to i64
  %mul699 = mul i64 %conv698, 4
  %call700 = call i8* @memcpy(i8* %546, i8* %549, i64 %mul699) #8
  %552 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %v_memory701 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %552, i32 0, i32 43
  %553 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory701, align 8, !tbaa !52
  %procs702 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %553, i32 0, i32 1
  %free_object703 = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs702, i32 0, i32 2
  %554 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %free_object703, align 8, !tbaa !138
  %555 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %v_memory704 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %555, i32 0, i32 43
  %556 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory704, align 8, !tbaa !52
  %557 = load %struct.page_hint_stream_s*, %struct.page_hint_stream_s** %pagehint675, align 8, !tbaa !1
  %SharedObjectRef705 = getelementptr inbounds %struct.page_hint_stream_s, %struct.page_hint_stream_s* %557, i32 0, i32 3
  %558 = load i32*, i32** %SharedObjectRef705, align 8, !tbaa !322
  %559 = bitcast i32* %558 to i8*
  call void %554(%struct.gs_memory_s* %556, i8* %559, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.175, i32 0, i32 0)) #7
  %560 = load i32*, i32** %Temp, align 8, !tbaa !1
  %561 = load %struct.page_hint_stream_s*, %struct.page_hint_stream_s** %pagehint675, align 8, !tbaa !1
  %SharedObjectRef706 = getelementptr inbounds %struct.page_hint_stream_s, %struct.page_hint_stream_s* %561, i32 0, i32 3
  store i32* %560, i32** %SharedObjectRef706, align 8, !tbaa !322
  %562 = bitcast i32** %Temp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %562) #2
  br label %if.end.719

if.else.707:                                      ; preds = %if.end.680
  %563 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %v_memory708 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %563, i32 0, i32 43
  %564 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory708, align 8, !tbaa !52
  %procs709 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %564, i32 0, i32 1
  %alloc_bytes710 = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs709, i32 0, i32 7
  %565 = load i8* (%struct.gs_memory_s*, i32, i8*)*, i8* (%struct.gs_memory_s*, i32, i8*)** %alloc_bytes710, align 8, !tbaa !64
  %566 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %v_memory711 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %566, i32 0, i32 43
  %567 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory711, align 8, !tbaa !52
  %568 = load %struct.page_hint_stream_s*, %struct.page_hint_stream_s** %pagehint675, align 8, !tbaa !1
  %NumSharedObjects712 = getelementptr inbounds %struct.page_hint_stream_s, %struct.page_hint_stream_s* %568, i32 0, i32 2
  %569 = load i32, i32* %NumSharedObjects712, align 4, !tbaa !323
  %add713 = add i32 %569, 1
  %conv714 = zext i32 %add713 to i64
  %mul715 = mul i64 %conv714, 4
  %conv716 = trunc i64 %mul715 to i32
  %call717 = call i8* %565(%struct.gs_memory_s* %567, i32 %conv716, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.176, i32 0, i32 0)) #7
  %570 = bitcast i8* %call717 to i32*
  %571 = load %struct.page_hint_stream_s*, %struct.page_hint_stream_s** %pagehint675, align 8, !tbaa !1
  %SharedObjectRef718 = getelementptr inbounds %struct.page_hint_stream_s, %struct.page_hint_stream_s* %571, i32 0, i32 3
  store i32* %570, i32** %SharedObjectRef718, align 8, !tbaa !322
  br label %if.end.719

if.end.719:                                       ; preds = %if.else.707, %if.then.686
  %572 = load i32, i32* %i, align 4, !tbaa !54
  %573 = load %struct.page_hint_stream_s*, %struct.page_hint_stream_s** %pagehint675, align 8, !tbaa !1
  %NumSharedObjects720 = getelementptr inbounds %struct.page_hint_stream_s, %struct.page_hint_stream_s* %573, i32 0, i32 2
  %574 = load i32, i32* %NumSharedObjects720, align 4, !tbaa !323
  %idxprom721 = zext i32 %574 to i64
  %575 = load %struct.page_hint_stream_s*, %struct.page_hint_stream_s** %pagehint675, align 8, !tbaa !1
  %SharedObjectRef722 = getelementptr inbounds %struct.page_hint_stream_s, %struct.page_hint_stream_s* %575, i32 0, i32 3
  %576 = load i32*, i32** %SharedObjectRef722, align 8, !tbaa !322
  %arrayidx723 = getelementptr inbounds i32, i32* %576, i64 %idxprom721
  store i32 %572, i32* %arrayidx723, align 4, !tbaa !54
  %577 = load %struct.page_hint_stream_s*, %struct.page_hint_stream_s** %pagehint675, align 8, !tbaa !1
  %NumSharedObjects724 = getelementptr inbounds %struct.page_hint_stream_s, %struct.page_hint_stream_s* %577, i32 0, i32 2
  %578 = load i32, i32* %NumSharedObjects724, align 4, !tbaa !323
  %inc725 = add i32 %578, 1
  store i32 %inc725, i32* %NumSharedObjects724, align 4, !tbaa !323
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.719, %if.then.679
  %579 = bitcast %struct.page_hint_stream_s** %pagehint675 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %579) #2
  %580 = bitcast i32* %page to i8*
  call void @llvm.lifetime.end(i64 4, i8* %580) #2
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 52, label %for.inc.727
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %for.inc.727

for.inc.727:                                      ; preds = %cleanup.cont, %cleanup
  %581 = load i32, i32* %j, align 4, !tbaa !54
  %inc728 = add nsw i32 %581, 1
  store i32 %inc728, i32* %j, align 4, !tbaa !54
  br label %for.cond.669

for.end.729:                                      ; preds = %for.cond.669
  %582 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %record652, align 8, !tbaa !1
  %NewObjectNumber730 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %582, i32 0, i32 3
  %583 = load i32, i32* %NewObjectNumber730, align 4, !tbaa !301
  %584 = load i32, i32* %k, align 4, !tbaa !54
  %idxprom731 = sext i32 %584 to i64
  %585 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %SharedHints732 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %585, i32 0, i32 29
  %586 = load %struct.share_hint_stream_s*, %struct.share_hint_stream_s** %SharedHints732, align 8, !tbaa !313
  %arrayidx733 = getelementptr inbounds %struct.share_hint_stream_s, %struct.share_hint_stream_s* %586, i64 %idxprom731
  %ObjectNumber = getelementptr inbounds %struct.share_hint_stream_s, %struct.share_hint_stream_s* %arrayidx733, i32 0, i32 0
  store i32 %583, i32* %ObjectNumber, align 4, !tbaa !324
  %587 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %record652, align 8, !tbaa !1
  %LinearisedOffset734 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %587, i32 0, i32 5
  %588 = load i64, i64* %LinearisedOffset734, align 8, !tbaa !304
  %589 = load i32, i32* %k, align 4, !tbaa !54
  %idxprom735 = sext i32 %589 to i64
  %590 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %SharedHints736 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %590, i32 0, i32 29
  %591 = load %struct.share_hint_stream_s*, %struct.share_hint_stream_s** %SharedHints736, align 8, !tbaa !313
  %arrayidx737 = getelementptr inbounds %struct.share_hint_stream_s, %struct.share_hint_stream_s* %591, i64 %idxprom735
  %ObjectOffset = getelementptr inbounds %struct.share_hint_stream_s, %struct.share_hint_stream_s* %arrayidx737, i32 0, i32 1
  store i64 %588, i64* %ObjectOffset, align 8, !tbaa !326
  %592 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %record652, align 8, !tbaa !1
  %Length738 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %592, i32 0, i32 6
  %593 = load i64, i64* %Length738, align 8, !tbaa !300
  %conv739 = trunc i64 %593 to i32
  %594 = load i32, i32* %k, align 4, !tbaa !54
  %inc740 = add nsw i32 %594, 1
  store i32 %inc740, i32* %k, align 4, !tbaa !54
  %idxprom741 = sext i32 %594 to i64
  %595 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %SharedHints742 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %595, i32 0, i32 29
  %596 = load %struct.share_hint_stream_s*, %struct.share_hint_stream_s** %SharedHints742, align 8, !tbaa !313
  %arrayidx743 = getelementptr inbounds %struct.share_hint_stream_s, %struct.share_hint_stream_s* %596, i64 %idxprom741
  %ObjectLength = getelementptr inbounds %struct.share_hint_stream_s, %struct.share_hint_stream_s* %arrayidx743, i32 0, i32 2
  store i32 %conv739, i32* %ObjectLength, align 4, !tbaa !327
  br label %if.end.788

if.else.744:                                      ; preds = %if.end.664
  %597 = bitcast i32* %page745 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %597) #2
  %598 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %record652, align 8, !tbaa !1
  %PageUsage746 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %598, i32 0, i32 0
  %599 = load i32, i32* %PageUsage746, align 4, !tbaa !208
  store i32 %599, i32* %page745, align 4, !tbaa !54
  %600 = bitcast i32* %pageID to i8*
  call void @llvm.lifetime.start(i64 4, i8* %600) #2
  %601 = load i32, i32* %page745, align 4, !tbaa !54
  %sub747 = sub nsw i32 %601, 1
  %idxprom748 = sext i32 %sub747 to i64
  %602 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %pages749 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %602, i32 0, i32 162
  %603 = load %struct.pdf_page_s*, %struct.pdf_page_s** %pages749, align 8, !tbaa !77
  %arrayidx750 = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %603, i64 %idxprom748
  %Page751 = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %arrayidx750, i32 0, i32 0
  %604 = load %struct.cos_dict_s*, %struct.cos_dict_s** %Page751, align 8, !tbaa !125
  %id752 = getelementptr inbounds %struct.cos_dict_s, %struct.cos_dict_s* %604, i32 0, i32 1
  %605 = load i64, i64* %id752, align 8, !tbaa !109
  %conv753 = trunc i64 %605 to i32
  store i32 %conv753, i32* %pageID, align 4, !tbaa !54
  %606 = bitcast i64* %LinearisedPageOffset to i8*
  call void @llvm.lifetime.start(i64 8, i8* %606) #2
  %607 = load i32, i32* %pageID, align 4, !tbaa !54
  %idxprom754 = sext i32 %607 to i64
  %608 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsage755 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %608, i32 0, i32 252
  %609 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %ResourceUsage755, align 8, !tbaa !173
  %arrayidx756 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %609, i64 %idxprom754
  %LinearisedOffset757 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %arrayidx756, i32 0, i32 5
  %610 = load i64, i64* %LinearisedOffset757, align 8, !tbaa !304
  store i64 %610, i64* %LinearisedPageOffset, align 8, !tbaa !107
  %611 = bitcast %struct.page_hint_stream_s** %pagehint758 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %611) #2
  %612 = load i32, i32* %page745, align 4, !tbaa !54
  %613 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %next_page759 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %613, i32 0, i32 153
  %614 = load i32, i32* %next_page759, align 4, !tbaa !72
  %cmp760 = icmp slt i32 %612, %614
  br i1 %cmp760, label %if.then.762, label %if.end.787

if.then.762:                                      ; preds = %if.else.744
  %615 = load i32, i32* %page745, align 4, !tbaa !54
  %sub763 = sub nsw i32 %615, 1
  %idxprom764 = sext i32 %sub763 to i64
  %616 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %PageHints765 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %616, i32 0, i32 26
  %617 = load %struct.page_hint_stream_s*, %struct.page_hint_stream_s** %PageHints765, align 8, !tbaa !311
  %arrayidx766 = getelementptr inbounds %struct.page_hint_stream_s, %struct.page_hint_stream_s* %617, i64 %idxprom764
  store %struct.page_hint_stream_s* %arrayidx766, %struct.page_hint_stream_s** %pagehint758, align 8, !tbaa !1
  %618 = load %struct.page_hint_stream_s*, %struct.page_hint_stream_s** %pagehint758, align 8, !tbaa !1
  %NumUniqueObjects = getelementptr inbounds %struct.page_hint_stream_s, %struct.page_hint_stream_s* %618, i32 0, i32 0
  %619 = load i32, i32* %NumUniqueObjects, align 4, !tbaa !328
  %inc767 = add i32 %619, 1
  store i32 %inc767, i32* %NumUniqueObjects, align 4, !tbaa !328
  %620 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %record652, align 8, !tbaa !1
  %LinearisedOffset768 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %620, i32 0, i32 5
  %621 = load i64, i64* %LinearisedOffset768, align 8, !tbaa !304
  %622 = load i64, i64* %LinearisedPageOffset, align 8, !tbaa !107
  %sub769 = sub nsw i64 %621, %622
  %623 = load %struct.page_hint_stream_s*, %struct.page_hint_stream_s** %pagehint758, align 8, !tbaa !1
  %PageLength = getelementptr inbounds %struct.page_hint_stream_s, %struct.page_hint_stream_s* %623, i32 0, i32 1
  %624 = load i32, i32* %PageLength, align 4, !tbaa !329
  %conv770 = zext i32 %624 to i64
  %cmp771 = icmp sgt i64 %sub769, %conv770
  br i1 %cmp771, label %if.then.773, label %if.end.780

if.then.773:                                      ; preds = %if.then.762
  %625 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %record652, align 8, !tbaa !1
  %LinearisedOffset774 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %625, i32 0, i32 5
  %626 = load i64, i64* %LinearisedOffset774, align 8, !tbaa !304
  %627 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %record652, align 8, !tbaa !1
  %Length775 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %627, i32 0, i32 6
  %628 = load i64, i64* %Length775, align 8, !tbaa !300
  %add776 = add nsw i64 %626, %628
  %629 = load i64, i64* %LinearisedPageOffset, align 8, !tbaa !107
  %sub777 = sub nsw i64 %add776, %629
  %conv778 = trunc i64 %sub777 to i32
  %630 = load %struct.page_hint_stream_s*, %struct.page_hint_stream_s** %pagehint758, align 8, !tbaa !1
  %PageLength779 = getelementptr inbounds %struct.page_hint_stream_s, %struct.page_hint_stream_s* %630, i32 0, i32 1
  store i32 %conv778, i32* %PageLength779, align 4, !tbaa !329
  br label %if.end.780

if.end.780:                                       ; preds = %if.then.773, %if.then.762
  %631 = load i32, i32* %page745, align 4, !tbaa !54
  %cmp781 = icmp eq i32 %631, 1
  br i1 %cmp781, label %if.then.783, label %if.end.786

if.then.783:                                      ; preds = %if.end.780
  %632 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %SharedHintHeader784 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %632, i32 0, i32 27
  %FirstPageEntries = getelementptr inbounds %struct.shared_hint_stream_header_s, %struct.shared_hint_stream_header_s* %SharedHintHeader784, i32 0, i32 2
  %633 = load i32, i32* %FirstPageEntries, align 4, !tbaa !330
  %inc785 = add i32 %633, 1
  store i32 %inc785, i32* %FirstPageEntries, align 4, !tbaa !330
  br label %if.end.786

if.end.786:                                       ; preds = %if.then.783, %if.end.780
  br label %if.end.787

if.end.787:                                       ; preds = %if.end.786, %if.else.744
  %634 = bitcast %struct.page_hint_stream_s** %pagehint758 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %634) #2
  %635 = bitcast i64* %LinearisedPageOffset to i8*
  call void @llvm.lifetime.end(i64 8, i8* %635) #2
  %636 = bitcast i32* %pageID to i8*
  call void @llvm.lifetime.end(i64 4, i8* %636) #2
  %637 = bitcast i32* %page745 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %637) #2
  br label %if.end.788

if.end.788:                                       ; preds = %if.end.787, %for.end.729
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.789

cleanup.789:                                      ; preds = %if.end.788, %if.then.663
  %638 = bitcast %struct.linearisation_record_s** %record652 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %638) #2
  %cleanup.dest.790 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.790, label %unreachable [
    i32 0, label %cleanup.cont.791
    i32 49, label %for.inc.792
  ]

cleanup.cont.791:                                 ; preds = %cleanup.789
  br label %for.inc.792

for.inc.792:                                      ; preds = %cleanup.cont.791, %cleanup.789
  %639 = load i32, i32* %i, align 4, !tbaa !54
  %inc793 = add nsw i32 %639, 1
  store i32 %inc793, i32* %i, align 4, !tbaa !54
  br label %for.cond.647

for.end.794:                                      ; preds = %for.cond.647
  %640 = load i32, i32* %k, align 4, !tbaa !54
  %641 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %PageHintHeader795 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %641, i32 0, i32 24
  %LargestSharedObject = getelementptr inbounds %struct.page_hint_stream_header_s, %struct.page_hint_stream_header_s* %PageHintHeader795, i32 0, i32 13
  store i32 %640, i32* %LargestSharedObject, align 4, !tbaa !331
  store i32 0, i32* %i, align 4, !tbaa !54
  br label %for.cond.796

for.cond.796:                                     ; preds = %for.inc.905, %for.end.794
  %642 = load i32, i32* %i, align 4, !tbaa !54
  %643 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %NumPageHints797 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %643, i32 0, i32 25
  %644 = load i32, i32* %NumPageHints797, align 4, !tbaa !312
  %cmp798 = icmp slt i32 %642, %644
  br i1 %cmp798, label %for.body.800, label %for.end.907

for.body.800:                                     ; preds = %for.cond.796
  %645 = bitcast %struct.page_hint_stream_s** %hint to i8*
  call void @llvm.lifetime.start(i64 8, i8* %645) #2
  %646 = load i32, i32* %i, align 4, !tbaa !54
  %idxprom801 = sext i32 %646 to i64
  %647 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %PageHints802 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %647, i32 0, i32 26
  %648 = load %struct.page_hint_stream_s*, %struct.page_hint_stream_s** %PageHints802, align 8, !tbaa !311
  %arrayidx803 = getelementptr inbounds %struct.page_hint_stream_s, %struct.page_hint_stream_s* %648, i64 %idxprom801
  store %struct.page_hint_stream_s* %arrayidx803, %struct.page_hint_stream_s** %hint, align 8, !tbaa !1
  %649 = load %struct.page_hint_stream_s*, %struct.page_hint_stream_s** %hint, align 8, !tbaa !1
  %NumUniqueObjects804 = getelementptr inbounds %struct.page_hint_stream_s, %struct.page_hint_stream_s* %649, i32 0, i32 0
  %650 = load i32, i32* %NumUniqueObjects804, align 4, !tbaa !328
  %651 = load %struct.page_hint_stream_s*, %struct.page_hint_stream_s** %hint, align 8, !tbaa !1
  %NumSharedObjects805 = getelementptr inbounds %struct.page_hint_stream_s, %struct.page_hint_stream_s* %651, i32 0, i32 2
  %652 = load i32, i32* %NumSharedObjects805, align 4, !tbaa !323
  %add806 = add i32 %650, %652
  %653 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %PageHintHeader807 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %653, i32 0, i32 24
  %LeastObjectsPerPage808 = getelementptr inbounds %struct.page_hint_stream_header_s, %struct.page_hint_stream_header_s* %PageHintHeader807, i32 0, i32 0
  %654 = load i32, i32* %LeastObjectsPerPage808, align 4, !tbaa !315
  %cmp809 = icmp ult i32 %add806, %654
  br i1 %cmp809, label %if.then.811, label %if.end.817

if.then.811:                                      ; preds = %for.body.800
  %655 = load %struct.page_hint_stream_s*, %struct.page_hint_stream_s** %hint, align 8, !tbaa !1
  %NumUniqueObjects812 = getelementptr inbounds %struct.page_hint_stream_s, %struct.page_hint_stream_s* %655, i32 0, i32 0
  %656 = load i32, i32* %NumUniqueObjects812, align 4, !tbaa !328
  %657 = load %struct.page_hint_stream_s*, %struct.page_hint_stream_s** %hint, align 8, !tbaa !1
  %NumSharedObjects813 = getelementptr inbounds %struct.page_hint_stream_s, %struct.page_hint_stream_s* %657, i32 0, i32 2
  %658 = load i32, i32* %NumSharedObjects813, align 4, !tbaa !323
  %add814 = add i32 %656, %658
  %659 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %PageHintHeader815 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %659, i32 0, i32 24
  %LeastObjectsPerPage816 = getelementptr inbounds %struct.page_hint_stream_header_s, %struct.page_hint_stream_header_s* %PageHintHeader815, i32 0, i32 0
  store i32 %add814, i32* %LeastObjectsPerPage816, align 4, !tbaa !315
  br label %if.end.817

if.end.817:                                       ; preds = %if.then.811, %for.body.800
  %660 = load %struct.page_hint_stream_s*, %struct.page_hint_stream_s** %hint, align 8, !tbaa !1
  %NumUniqueObjects818 = getelementptr inbounds %struct.page_hint_stream_s, %struct.page_hint_stream_s* %660, i32 0, i32 0
  %661 = load i32, i32* %NumUniqueObjects818, align 4, !tbaa !328
  %662 = load %struct.page_hint_stream_s*, %struct.page_hint_stream_s** %hint, align 8, !tbaa !1
  %NumSharedObjects819 = getelementptr inbounds %struct.page_hint_stream_s, %struct.page_hint_stream_s* %662, i32 0, i32 2
  %663 = load i32, i32* %NumSharedObjects819, align 4, !tbaa !323
  %add820 = add i32 %661, %663
  %664 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %PageHintHeader821 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %664, i32 0, i32 24
  %MostObjectsPerPage = getelementptr inbounds %struct.page_hint_stream_header_s, %struct.page_hint_stream_header_s* %PageHintHeader821, i32 0, i32 1
  %665 = load i32, i32* %MostObjectsPerPage, align 4, !tbaa !332
  %cmp822 = icmp ugt i32 %add820, %665
  br i1 %cmp822, label %if.then.824, label %if.end.830

if.then.824:                                      ; preds = %if.end.817
  %666 = load %struct.page_hint_stream_s*, %struct.page_hint_stream_s** %hint, align 8, !tbaa !1
  %NumUniqueObjects825 = getelementptr inbounds %struct.page_hint_stream_s, %struct.page_hint_stream_s* %666, i32 0, i32 0
  %667 = load i32, i32* %NumUniqueObjects825, align 4, !tbaa !328
  %668 = load %struct.page_hint_stream_s*, %struct.page_hint_stream_s** %hint, align 8, !tbaa !1
  %NumSharedObjects826 = getelementptr inbounds %struct.page_hint_stream_s, %struct.page_hint_stream_s* %668, i32 0, i32 2
  %669 = load i32, i32* %NumSharedObjects826, align 4, !tbaa !323
  %add827 = add i32 %667, %669
  %670 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %PageHintHeader828 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %670, i32 0, i32 24
  %MostObjectsPerPage829 = getelementptr inbounds %struct.page_hint_stream_header_s, %struct.page_hint_stream_header_s* %PageHintHeader828, i32 0, i32 1
  store i32 %add827, i32* %MostObjectsPerPage829, align 4, !tbaa !332
  br label %if.end.830

if.end.830:                                       ; preds = %if.then.824, %if.end.817
  %671 = load %struct.page_hint_stream_s*, %struct.page_hint_stream_s** %hint, align 8, !tbaa !1
  %PageLength831 = getelementptr inbounds %struct.page_hint_stream_s, %struct.page_hint_stream_s* %671, i32 0, i32 1
  %672 = load i32, i32* %PageLength831, align 4, !tbaa !329
  %673 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %PageHintHeader832 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %673, i32 0, i32 24
  %LeastPageLength833 = getelementptr inbounds %struct.page_hint_stream_header_s, %struct.page_hint_stream_header_s* %PageHintHeader832, i32 0, i32 3
  %674 = load i32, i32* %LeastPageLength833, align 4, !tbaa !316
  %cmp834 = icmp ult i32 %672, %674
  br i1 %cmp834, label %if.then.836, label %if.end.840

if.then.836:                                      ; preds = %if.end.830
  %675 = load %struct.page_hint_stream_s*, %struct.page_hint_stream_s** %hint, align 8, !tbaa !1
  %PageLength837 = getelementptr inbounds %struct.page_hint_stream_s, %struct.page_hint_stream_s* %675, i32 0, i32 1
  %676 = load i32, i32* %PageLength837, align 4, !tbaa !329
  %677 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %PageHintHeader838 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %677, i32 0, i32 24
  %LeastPageLength839 = getelementptr inbounds %struct.page_hint_stream_header_s, %struct.page_hint_stream_header_s* %PageHintHeader838, i32 0, i32 3
  store i32 %676, i32* %LeastPageLength839, align 4, !tbaa !316
  br label %if.end.840

if.end.840:                                       ; preds = %if.then.836, %if.end.830
  %678 = load %struct.page_hint_stream_s*, %struct.page_hint_stream_s** %hint, align 8, !tbaa !1
  %PageLength841 = getelementptr inbounds %struct.page_hint_stream_s, %struct.page_hint_stream_s* %678, i32 0, i32 1
  %679 = load i32, i32* %PageLength841, align 4, !tbaa !329
  %680 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %PageHintHeader842 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %680, i32 0, i32 24
  %MostPageLength = getelementptr inbounds %struct.page_hint_stream_header_s, %struct.page_hint_stream_header_s* %PageHintHeader842, i32 0, i32 4
  %681 = load i32, i32* %MostPageLength, align 4, !tbaa !333
  %cmp843 = icmp ugt i32 %679, %681
  br i1 %cmp843, label %if.then.845, label %if.end.849

if.then.845:                                      ; preds = %if.end.840
  %682 = load %struct.page_hint_stream_s*, %struct.page_hint_stream_s** %hint, align 8, !tbaa !1
  %PageLength846 = getelementptr inbounds %struct.page_hint_stream_s, %struct.page_hint_stream_s* %682, i32 0, i32 1
  %683 = load i32, i32* %PageLength846, align 4, !tbaa !329
  %684 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %PageHintHeader847 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %684, i32 0, i32 24
  %MostPageLength848 = getelementptr inbounds %struct.page_hint_stream_header_s, %struct.page_hint_stream_header_s* %PageHintHeader847, i32 0, i32 4
  store i32 %683, i32* %MostPageLength848, align 4, !tbaa !333
  br label %if.end.849

if.end.849:                                       ; preds = %if.then.845, %if.end.840
  %685 = load %struct.page_hint_stream_s*, %struct.page_hint_stream_s** %hint, align 8, !tbaa !1
  %ContentOffset850 = getelementptr inbounds %struct.page_hint_stream_s, %struct.page_hint_stream_s* %685, i32 0, i32 4
  %686 = load i64, i64* %ContentOffset850, align 8, !tbaa !319
  %687 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %PageHintHeader851 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %687, i32 0, i32 24
  %LeastPageOffset852 = getelementptr inbounds %struct.page_hint_stream_header_s, %struct.page_hint_stream_header_s* %PageHintHeader851, i32 0, i32 6
  %688 = load i32, i32* %LeastPageOffset852, align 4, !tbaa !317
  %conv853 = zext i32 %688 to i64
  %cmp854 = icmp slt i64 %686, %conv853
  br i1 %cmp854, label %if.then.856, label %if.end.861

if.then.856:                                      ; preds = %if.end.849
  %689 = load %struct.page_hint_stream_s*, %struct.page_hint_stream_s** %hint, align 8, !tbaa !1
  %ContentOffset857 = getelementptr inbounds %struct.page_hint_stream_s, %struct.page_hint_stream_s* %689, i32 0, i32 4
  %690 = load i64, i64* %ContentOffset857, align 8, !tbaa !319
  %conv858 = trunc i64 %690 to i32
  %691 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %PageHintHeader859 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %691, i32 0, i32 24
  %LeastPageOffset860 = getelementptr inbounds %struct.page_hint_stream_header_s, %struct.page_hint_stream_header_s* %PageHintHeader859, i32 0, i32 6
  store i32 %conv858, i32* %LeastPageOffset860, align 4, !tbaa !317
  br label %if.end.861

if.end.861:                                       ; preds = %if.then.856, %if.end.849
  %692 = load %struct.page_hint_stream_s*, %struct.page_hint_stream_s** %hint, align 8, !tbaa !1
  %ContentOffset862 = getelementptr inbounds %struct.page_hint_stream_s, %struct.page_hint_stream_s* %692, i32 0, i32 4
  %693 = load i64, i64* %ContentOffset862, align 8, !tbaa !319
  %694 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %PageHintHeader863 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %694, i32 0, i32 24
  %MostPageOffset = getelementptr inbounds %struct.page_hint_stream_header_s, %struct.page_hint_stream_header_s* %PageHintHeader863, i32 0, i32 7
  %695 = load i32, i32* %MostPageOffset, align 4, !tbaa !334
  %conv864 = zext i32 %695 to i64
  %cmp865 = icmp sgt i64 %693, %conv864
  br i1 %cmp865, label %if.then.867, label %if.end.872

if.then.867:                                      ; preds = %if.end.861
  %696 = load %struct.page_hint_stream_s*, %struct.page_hint_stream_s** %hint, align 8, !tbaa !1
  %ContentOffset868 = getelementptr inbounds %struct.page_hint_stream_s, %struct.page_hint_stream_s* %696, i32 0, i32 4
  %697 = load i64, i64* %ContentOffset868, align 8, !tbaa !319
  %conv869 = trunc i64 %697 to i32
  %698 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %PageHintHeader870 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %698, i32 0, i32 24
  %MostPageOffset871 = getelementptr inbounds %struct.page_hint_stream_header_s, %struct.page_hint_stream_header_s* %PageHintHeader870, i32 0, i32 7
  store i32 %conv869, i32* %MostPageOffset871, align 4, !tbaa !334
  br label %if.end.872

if.end.872:                                       ; preds = %if.then.867, %if.end.861
  %699 = load %struct.page_hint_stream_s*, %struct.page_hint_stream_s** %hint, align 8, !tbaa !1
  %ContentLength873 = getelementptr inbounds %struct.page_hint_stream_s, %struct.page_hint_stream_s* %699, i32 0, i32 5
  %700 = load i64, i64* %ContentLength873, align 8, !tbaa !321
  %701 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %PageHintHeader874 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %701, i32 0, i32 24
  %LeastContentLength875 = getelementptr inbounds %struct.page_hint_stream_header_s, %struct.page_hint_stream_header_s* %PageHintHeader874, i32 0, i32 9
  %702 = load i32, i32* %LeastContentLength875, align 4, !tbaa !318
  %conv876 = zext i32 %702 to i64
  %cmp877 = icmp slt i64 %700, %conv876
  br i1 %cmp877, label %if.then.879, label %if.end.884

if.then.879:                                      ; preds = %if.end.872
  %703 = load %struct.page_hint_stream_s*, %struct.page_hint_stream_s** %hint, align 8, !tbaa !1
  %ContentLength880 = getelementptr inbounds %struct.page_hint_stream_s, %struct.page_hint_stream_s* %703, i32 0, i32 5
  %704 = load i64, i64* %ContentLength880, align 8, !tbaa !321
  %conv881 = trunc i64 %704 to i32
  %705 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %PageHintHeader882 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %705, i32 0, i32 24
  %LeastContentLength883 = getelementptr inbounds %struct.page_hint_stream_header_s, %struct.page_hint_stream_header_s* %PageHintHeader882, i32 0, i32 9
  store i32 %conv881, i32* %LeastContentLength883, align 4, !tbaa !318
  br label %if.end.884

if.end.884:                                       ; preds = %if.then.879, %if.end.872
  %706 = load %struct.page_hint_stream_s*, %struct.page_hint_stream_s** %hint, align 8, !tbaa !1
  %ContentLength885 = getelementptr inbounds %struct.page_hint_stream_s, %struct.page_hint_stream_s* %706, i32 0, i32 5
  %707 = load i64, i64* %ContentLength885, align 8, !tbaa !321
  %708 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %PageHintHeader886 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %708, i32 0, i32 24
  %MostContentLength = getelementptr inbounds %struct.page_hint_stream_header_s, %struct.page_hint_stream_header_s* %PageHintHeader886, i32 0, i32 10
  %709 = load i32, i32* %MostContentLength, align 4, !tbaa !335
  %conv887 = zext i32 %709 to i64
  %cmp888 = icmp sgt i64 %707, %conv887
  br i1 %cmp888, label %if.then.890, label %if.end.895

if.then.890:                                      ; preds = %if.end.884
  %710 = load %struct.page_hint_stream_s*, %struct.page_hint_stream_s** %hint, align 8, !tbaa !1
  %ContentLength891 = getelementptr inbounds %struct.page_hint_stream_s, %struct.page_hint_stream_s* %710, i32 0, i32 5
  %711 = load i64, i64* %ContentLength891, align 8, !tbaa !321
  %conv892 = trunc i64 %711 to i32
  %712 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %PageHintHeader893 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %712, i32 0, i32 24
  %MostContentLength894 = getelementptr inbounds %struct.page_hint_stream_header_s, %struct.page_hint_stream_header_s* %PageHintHeader893, i32 0, i32 10
  store i32 %conv892, i32* %MostContentLength894, align 4, !tbaa !335
  br label %if.end.895

if.end.895:                                       ; preds = %if.then.890, %if.end.884
  %713 = load %struct.page_hint_stream_s*, %struct.page_hint_stream_s** %hint, align 8, !tbaa !1
  %NumSharedObjects896 = getelementptr inbounds %struct.page_hint_stream_s, %struct.page_hint_stream_s* %713, i32 0, i32 2
  %714 = load i32, i32* %NumSharedObjects896, align 4, !tbaa !323
  %715 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %PageHintHeader897 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %715, i32 0, i32 24
  %MostSharedObjects = getelementptr inbounds %struct.page_hint_stream_header_s, %struct.page_hint_stream_header_s* %PageHintHeader897, i32 0, i32 12
  %716 = load i32, i32* %MostSharedObjects, align 4, !tbaa !336
  %cmp898 = icmp ugt i32 %714, %716
  br i1 %cmp898, label %if.then.900, label %if.end.904

if.then.900:                                      ; preds = %if.end.895
  %717 = load %struct.page_hint_stream_s*, %struct.page_hint_stream_s** %hint, align 8, !tbaa !1
  %NumSharedObjects901 = getelementptr inbounds %struct.page_hint_stream_s, %struct.page_hint_stream_s* %717, i32 0, i32 2
  %718 = load i32, i32* %NumSharedObjects901, align 4, !tbaa !323
  %719 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %PageHintHeader902 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %719, i32 0, i32 24
  %MostSharedObjects903 = getelementptr inbounds %struct.page_hint_stream_header_s, %struct.page_hint_stream_header_s* %PageHintHeader902, i32 0, i32 12
  store i32 %718, i32* %MostSharedObjects903, align 4, !tbaa !336
  br label %if.end.904

if.end.904:                                       ; preds = %if.then.900, %if.end.895
  %720 = bitcast %struct.page_hint_stream_s** %hint to i8*
  call void @llvm.lifetime.end(i64 8, i8* %720) #2
  br label %for.inc.905

for.inc.905:                                      ; preds = %if.end.904
  %721 = load i32, i32* %i, align 4, !tbaa !54
  %inc906 = add nsw i32 %721, 1
  store i32 %inc906, i32* %i, align 4, !tbaa !54
  br label %for.cond.796

for.end.907:                                      ; preds = %for.cond.796
  %722 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %723 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %PageHintHeader908 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %723, i32 0, i32 24
  %LeastObjectsPerPage909 = getelementptr inbounds %struct.page_hint_stream_header_s, %struct.page_hint_stream_header_s* %PageHintHeader908, i32 0, i32 0
  %724 = load i32, i32* %LeastObjectsPerPage909, align 4, !tbaa !315
  %conv910 = zext i32 %724 to i64
  %call911 = call i32 @write_hint_stream(%struct.pdf_linearisation_s* %722, i64 %conv910, i8 signext 32) #7
  %725 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %726 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %pages912 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %726, i32 0, i32 162
  %727 = load %struct.pdf_page_s*, %struct.pdf_page_s** %pages912, align 8, !tbaa !77
  %arrayidx913 = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %727, i64 0
  %Page914 = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %arrayidx913, i32 0, i32 0
  %728 = load %struct.cos_dict_s*, %struct.cos_dict_s** %Page914, align 8, !tbaa !125
  %id915 = getelementptr inbounds %struct.cos_dict_s, %struct.cos_dict_s* %728, i32 0, i32 1
  %729 = load i64, i64* %id915, align 8, !tbaa !109
  %730 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsage916 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %730, i32 0, i32 252
  %731 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %ResourceUsage916, align 8, !tbaa !173
  %arrayidx917 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %731, i64 %729
  %LinearisedOffset918 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %arrayidx917, i32 0, i32 5
  %732 = load i64, i64* %LinearisedOffset918, align 8, !tbaa !304
  %call919 = call i32 @write_hint_stream(%struct.pdf_linearisation_s* %725, i64 %732, i8 signext 32) #7
  %733 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %PageHintHeader920 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %733, i32 0, i32 24
  %MostObjectsPerPage921 = getelementptr inbounds %struct.page_hint_stream_header_s, %struct.page_hint_stream_header_s* %PageHintHeader920, i32 0, i32 1
  %734 = load i32, i32* %MostObjectsPerPage921, align 4, !tbaa !332
  %735 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %PageHintHeader922 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %735, i32 0, i32 24
  %MostObjectsPerPage923 = getelementptr inbounds %struct.page_hint_stream_header_s, %struct.page_hint_stream_header_s* %PageHintHeader922, i32 0, i32 1
  %736 = load i32, i32* %MostObjectsPerPage923, align 4, !tbaa !332
  %sub924 = sub i32 %734, %736
  %add925 = add i32 %sub924, 1
  store i32 %add925, i32* %i, align 4, !tbaa !54
  store i32 0, i32* %j, align 4, !tbaa !54
  br label %while.cond.926

while.cond.926:                                   ; preds = %while.body.928, %for.end.907
  %737 = load i32, i32* %i, align 4, !tbaa !54
  %tobool927 = icmp ne i32 %737, 0
  br i1 %tobool927, label %while.body.928, label %while.end.931

while.body.928:                                   ; preds = %while.cond.926
  %738 = load i32, i32* %i, align 4, !tbaa !54
  %div929 = sdiv i32 %738, 2
  store i32 %div929, i32* %i, align 4, !tbaa !54
  %739 = load i32, i32* %j, align 4, !tbaa !54
  %inc930 = add nsw i32 %739, 1
  store i32 %inc930, i32* %j, align 4, !tbaa !54
  br label %while.cond.926

while.end.931:                                    ; preds = %while.cond.926
  %740 = load i32, i32* %j, align 4, !tbaa !54
  %conv932 = trunc i32 %740 to i16
  %741 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %PageHintHeader933 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %741, i32 0, i32 24
  %ObjectNumBits = getelementptr inbounds %struct.page_hint_stream_header_s, %struct.page_hint_stream_header_s* %PageHintHeader933, i32 0, i32 2
  store i16 %conv932, i16* %ObjectNumBits, align 2, !tbaa !337
  %742 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %743 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %PageHintHeader934 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %743, i32 0, i32 24
  %ObjectNumBits935 = getelementptr inbounds %struct.page_hint_stream_header_s, %struct.page_hint_stream_header_s* %PageHintHeader934, i32 0, i32 2
  %744 = load i16, i16* %ObjectNumBits935, align 2, !tbaa !337
  %conv936 = zext i16 %744 to i64
  %call937 = call i32 @write_hint_stream(%struct.pdf_linearisation_s* %742, i64 %conv936, i8 signext 16) #7
  %745 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %746 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %PageHintHeader938 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %746, i32 0, i32 24
  %LeastPageLength939 = getelementptr inbounds %struct.page_hint_stream_header_s, %struct.page_hint_stream_header_s* %PageHintHeader938, i32 0, i32 3
  %747 = load i32, i32* %LeastPageLength939, align 4, !tbaa !316
  %conv940 = zext i32 %747 to i64
  %call941 = call i32 @write_hint_stream(%struct.pdf_linearisation_s* %745, i64 %conv940, i8 signext 32) #7
  %748 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %PageHintHeader942 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %748, i32 0, i32 24
  %MostPageLength943 = getelementptr inbounds %struct.page_hint_stream_header_s, %struct.page_hint_stream_header_s* %PageHintHeader942, i32 0, i32 4
  %749 = load i32, i32* %MostPageLength943, align 4, !tbaa !333
  %750 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %PageHintHeader944 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %750, i32 0, i32 24
  %LeastPageLength945 = getelementptr inbounds %struct.page_hint_stream_header_s, %struct.page_hint_stream_header_s* %PageHintHeader944, i32 0, i32 3
  %751 = load i32, i32* %LeastPageLength945, align 4, !tbaa !316
  %sub946 = sub i32 %749, %751
  %add947 = add i32 %sub946, 1
  store i32 %add947, i32* %i, align 4, !tbaa !54
  store i32 0, i32* %j, align 4, !tbaa !54
  br label %while.cond.948

while.cond.948:                                   ; preds = %while.body.950, %while.end.931
  %752 = load i32, i32* %i, align 4, !tbaa !54
  %tobool949 = icmp ne i32 %752, 0
  br i1 %tobool949, label %while.body.950, label %while.end.953

while.body.950:                                   ; preds = %while.cond.948
  %753 = load i32, i32* %i, align 4, !tbaa !54
  %div951 = sdiv i32 %753, 2
  store i32 %div951, i32* %i, align 4, !tbaa !54
  %754 = load i32, i32* %j, align 4, !tbaa !54
  %inc952 = add nsw i32 %754, 1
  store i32 %inc952, i32* %j, align 4, !tbaa !54
  br label %while.cond.948

while.end.953:                                    ; preds = %while.cond.948
  %755 = load i32, i32* %j, align 4, !tbaa !54
  %conv954 = trunc i32 %755 to i16
  %756 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %PageHintHeader955 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %756, i32 0, i32 24
  %PageLengthNumBits = getelementptr inbounds %struct.page_hint_stream_header_s, %struct.page_hint_stream_header_s* %PageHintHeader955, i32 0, i32 5
  store i16 %conv954, i16* %PageLengthNumBits, align 2, !tbaa !338
  %757 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %758 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %PageHintHeader956 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %758, i32 0, i32 24
  %PageLengthNumBits957 = getelementptr inbounds %struct.page_hint_stream_header_s, %struct.page_hint_stream_header_s* %PageHintHeader956, i32 0, i32 5
  %759 = load i16, i16* %PageLengthNumBits957, align 2, !tbaa !338
  %conv958 = zext i16 %759 to i64
  %call959 = call i32 @write_hint_stream(%struct.pdf_linearisation_s* %757, i64 %conv958, i8 signext 16) #7
  %760 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %761 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %PageHintHeader960 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %761, i32 0, i32 24
  %LeastPageOffset961 = getelementptr inbounds %struct.page_hint_stream_header_s, %struct.page_hint_stream_header_s* %PageHintHeader960, i32 0, i32 6
  %762 = load i32, i32* %LeastPageOffset961, align 4, !tbaa !317
  %conv962 = zext i32 %762 to i64
  %call963 = call i32 @write_hint_stream(%struct.pdf_linearisation_s* %760, i64 %conv962, i8 signext 32) #7
  %763 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %PageHintHeader964 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %763, i32 0, i32 24
  %MostPageOffset965 = getelementptr inbounds %struct.page_hint_stream_header_s, %struct.page_hint_stream_header_s* %PageHintHeader964, i32 0, i32 7
  %764 = load i32, i32* %MostPageOffset965, align 4, !tbaa !334
  %765 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %PageHintHeader966 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %765, i32 0, i32 24
  %LeastPageOffset967 = getelementptr inbounds %struct.page_hint_stream_header_s, %struct.page_hint_stream_header_s* %PageHintHeader966, i32 0, i32 6
  %766 = load i32, i32* %LeastPageOffset967, align 4, !tbaa !317
  %sub968 = sub i32 %764, %766
  %add969 = add i32 %sub968, 1
  store i32 %add969, i32* %i, align 4, !tbaa !54
  store i32 0, i32* %j, align 4, !tbaa !54
  br label %while.cond.970

while.cond.970:                                   ; preds = %while.body.972, %while.end.953
  %767 = load i32, i32* %i, align 4, !tbaa !54
  %tobool971 = icmp ne i32 %767, 0
  br i1 %tobool971, label %while.body.972, label %while.end.975

while.body.972:                                   ; preds = %while.cond.970
  %768 = load i32, i32* %i, align 4, !tbaa !54
  %div973 = sdiv i32 %768, 2
  store i32 %div973, i32* %i, align 4, !tbaa !54
  %769 = load i32, i32* %j, align 4, !tbaa !54
  %inc974 = add nsw i32 %769, 1
  store i32 %inc974, i32* %j, align 4, !tbaa !54
  br label %while.cond.970

while.end.975:                                    ; preds = %while.cond.970
  %770 = load i32, i32* %j, align 4, !tbaa !54
  %conv976 = trunc i32 %770 to i16
  %771 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %PageHintHeader977 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %771, i32 0, i32 24
  %PageOffsetNumBits = getelementptr inbounds %struct.page_hint_stream_header_s, %struct.page_hint_stream_header_s* %PageHintHeader977, i32 0, i32 8
  store i16 %conv976, i16* %PageOffsetNumBits, align 2, !tbaa !339
  %772 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %773 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %PageHintHeader978 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %773, i32 0, i32 24
  %PageOffsetNumBits979 = getelementptr inbounds %struct.page_hint_stream_header_s, %struct.page_hint_stream_header_s* %PageHintHeader978, i32 0, i32 8
  %774 = load i16, i16* %PageOffsetNumBits979, align 2, !tbaa !339
  %conv980 = zext i16 %774 to i64
  %call981 = call i32 @write_hint_stream(%struct.pdf_linearisation_s* %772, i64 %conv980, i8 signext 16) #7
  %775 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %776 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %PageHintHeader982 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %776, i32 0, i32 24
  %LeastContentLength983 = getelementptr inbounds %struct.page_hint_stream_header_s, %struct.page_hint_stream_header_s* %PageHintHeader982, i32 0, i32 9
  %777 = load i32, i32* %LeastContentLength983, align 4, !tbaa !318
  %conv984 = zext i32 %777 to i64
  %call985 = call i32 @write_hint_stream(%struct.pdf_linearisation_s* %775, i64 %conv984, i8 signext 32) #7
  %778 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %PageHintHeader986 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %778, i32 0, i32 24
  %MostContentLength987 = getelementptr inbounds %struct.page_hint_stream_header_s, %struct.page_hint_stream_header_s* %PageHintHeader986, i32 0, i32 10
  %779 = load i32, i32* %MostContentLength987, align 4, !tbaa !335
  %780 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %PageHintHeader988 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %780, i32 0, i32 24
  %LeastContentLength989 = getelementptr inbounds %struct.page_hint_stream_header_s, %struct.page_hint_stream_header_s* %PageHintHeader988, i32 0, i32 9
  %781 = load i32, i32* %LeastContentLength989, align 4, !tbaa !318
  %sub990 = sub i32 %779, %781
  %add991 = add i32 %sub990, 1
  store i32 %add991, i32* %i, align 4, !tbaa !54
  store i32 0, i32* %j, align 4, !tbaa !54
  br label %while.cond.992

while.cond.992:                                   ; preds = %while.body.994, %while.end.975
  %782 = load i32, i32* %i, align 4, !tbaa !54
  %tobool993 = icmp ne i32 %782, 0
  br i1 %tobool993, label %while.body.994, label %while.end.997

while.body.994:                                   ; preds = %while.cond.992
  %783 = load i32, i32* %i, align 4, !tbaa !54
  %div995 = sdiv i32 %783, 2
  store i32 %div995, i32* %i, align 4, !tbaa !54
  %784 = load i32, i32* %j, align 4, !tbaa !54
  %inc996 = add nsw i32 %784, 1
  store i32 %inc996, i32* %j, align 4, !tbaa !54
  br label %while.cond.992

while.end.997:                                    ; preds = %while.cond.992
  %785 = load i32, i32* %j, align 4, !tbaa !54
  %conv998 = trunc i32 %785 to i16
  %786 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %PageHintHeader999 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %786, i32 0, i32 24
  %ContentLengthNumBits = getelementptr inbounds %struct.page_hint_stream_header_s, %struct.page_hint_stream_header_s* %PageHintHeader999, i32 0, i32 11
  store i16 %conv998, i16* %ContentLengthNumBits, align 2, !tbaa !340
  %787 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %788 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %PageHintHeader1000 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %788, i32 0, i32 24
  %ContentLengthNumBits1001 = getelementptr inbounds %struct.page_hint_stream_header_s, %struct.page_hint_stream_header_s* %PageHintHeader1000, i32 0, i32 11
  %789 = load i16, i16* %ContentLengthNumBits1001, align 2, !tbaa !340
  %conv1002 = zext i16 %789 to i64
  %call1003 = call i32 @write_hint_stream(%struct.pdf_linearisation_s* %787, i64 %conv1002, i8 signext 16) #7
  %790 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %791 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %PageHintHeader1004 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %791, i32 0, i32 24
  %MostSharedObjects1005 = getelementptr inbounds %struct.page_hint_stream_header_s, %struct.page_hint_stream_header_s* %PageHintHeader1004, i32 0, i32 12
  %792 = load i32, i32* %MostSharedObjects1005, align 4, !tbaa !336
  %conv1006 = zext i32 %792 to i64
  %call1007 = call i32 @write_hint_stream(%struct.pdf_linearisation_s* %790, i64 %conv1006, i8 signext 16) #7
  %793 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %PageHintHeader1008 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %793, i32 0, i32 24
  %LargestSharedObject1009 = getelementptr inbounds %struct.page_hint_stream_header_s, %struct.page_hint_stream_header_s* %PageHintHeader1008, i32 0, i32 13
  %794 = load i32, i32* %LargestSharedObject1009, align 4, !tbaa !331
  %add1010 = add i32 %794, 1
  store i32 %add1010, i32* %i, align 4, !tbaa !54
  store i32 0, i32* %j, align 4, !tbaa !54
  br label %while.cond.1011

while.cond.1011:                                  ; preds = %while.body.1013, %while.end.997
  %795 = load i32, i32* %i, align 4, !tbaa !54
  %tobool1012 = icmp ne i32 %795, 0
  br i1 %tobool1012, label %while.body.1013, label %while.end.1016

while.body.1013:                                  ; preds = %while.cond.1011
  %796 = load i32, i32* %i, align 4, !tbaa !54
  %div1014 = sdiv i32 %796, 2
  store i32 %div1014, i32* %i, align 4, !tbaa !54
  %797 = load i32, i32* %j, align 4, !tbaa !54
  %inc1015 = add nsw i32 %797, 1
  store i32 %inc1015, i32* %j, align 4, !tbaa !54
  br label %while.cond.1011

while.end.1016:                                   ; preds = %while.cond.1011
  %798 = load i32, i32* %j, align 4, !tbaa !54
  %conv1017 = trunc i32 %798 to i16
  %799 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %PageHintHeader1018 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %799, i32 0, i32 24
  %SharedObjectNumBits = getelementptr inbounds %struct.page_hint_stream_header_s, %struct.page_hint_stream_header_s* %PageHintHeader1018, i32 0, i32 14
  store i16 %conv1017, i16* %SharedObjectNumBits, align 2, !tbaa !341
  %800 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %801 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %PageHintHeader1019 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %801, i32 0, i32 24
  %SharedObjectNumBits1020 = getelementptr inbounds %struct.page_hint_stream_header_s, %struct.page_hint_stream_header_s* %PageHintHeader1019, i32 0, i32 14
  %802 = load i16, i16* %SharedObjectNumBits1020, align 2, !tbaa !341
  %conv1021 = zext i16 %802 to i64
  %call1022 = call i32 @write_hint_stream(%struct.pdf_linearisation_s* %800, i64 %conv1021, i8 signext 16) #7
  store i32 1, i32* %j, align 4, !tbaa !54
  %803 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %804 = load i32, i32* %j, align 4, !tbaa !54
  %conv1023 = sext i32 %804 to i64
  %call1024 = call i32 @write_hint_stream(%struct.pdf_linearisation_s* %803, i64 %conv1023, i8 signext 16) #7
  %805 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %806 = load i32, i32* %j, align 4, !tbaa !54
  %conv1025 = sext i32 %806 to i64
  %call1026 = call i32 @write_hint_stream(%struct.pdf_linearisation_s* %805, i64 %conv1025, i8 signext 16) #7
  store i32 0, i32* %i, align 4, !tbaa !54
  br label %for.cond.1027

for.cond.1027:                                    ; preds = %for.inc.1047, %while.end.1016
  %807 = load i32, i32* %i, align 4, !tbaa !54
  %808 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %next_page1028 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %808, i32 0, i32 153
  %809 = load i32, i32* %next_page1028, align 4, !tbaa !72
  %cmp1029 = icmp slt i32 %807, %809
  br i1 %cmp1029, label %for.body.1031, label %for.end.1049

for.body.1031:                                    ; preds = %for.cond.1027
  %810 = bitcast %struct.page_hint_stream_s** %hint1032 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %810) #2
  %811 = load i32, i32* %i, align 4, !tbaa !54
  %idxprom1033 = sext i32 %811 to i64
  %812 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %PageHints1034 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %812, i32 0, i32 26
  %813 = load %struct.page_hint_stream_s*, %struct.page_hint_stream_s** %PageHints1034, align 8, !tbaa !311
  %arrayidx1035 = getelementptr inbounds %struct.page_hint_stream_s, %struct.page_hint_stream_s* %813, i64 %idxprom1033
  store %struct.page_hint_stream_s* %arrayidx1035, %struct.page_hint_stream_s** %hint1032, align 8, !tbaa !1
  %814 = bitcast i32* %Num to i8*
  call void @llvm.lifetime.start(i64 4, i8* %814) #2
  %815 = load %struct.page_hint_stream_s*, %struct.page_hint_stream_s** %hint1032, align 8, !tbaa !1
  %NumUniqueObjects1036 = getelementptr inbounds %struct.page_hint_stream_s, %struct.page_hint_stream_s* %815, i32 0, i32 0
  %816 = load i32, i32* %NumUniqueObjects1036, align 4, !tbaa !328
  %817 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %PageHintHeader1037 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %817, i32 0, i32 24
  %LeastObjectsPerPage1038 = getelementptr inbounds %struct.page_hint_stream_header_s, %struct.page_hint_stream_header_s* %PageHintHeader1037, i32 0, i32 0
  %818 = load i32, i32* %LeastObjectsPerPage1038, align 4, !tbaa !315
  %sub1039 = sub i32 %816, %818
  store i32 %sub1039, i32* %Num, align 4, !tbaa !54
  %819 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %820 = load i32, i32* %Num, align 4, !tbaa !54
  %conv1040 = sext i32 %820 to i64
  %821 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %PageHintHeader1041 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %821, i32 0, i32 24
  %ObjectNumBits1042 = getelementptr inbounds %struct.page_hint_stream_header_s, %struct.page_hint_stream_header_s* %PageHintHeader1041, i32 0, i32 2
  %822 = load i16, i16* %ObjectNumBits1042, align 2, !tbaa !337
  %conv1043 = trunc i16 %822 to i8
  %call1044 = call i32 @write_hint_stream(%struct.pdf_linearisation_s* %819, i64 %conv1040, i8 signext %conv1043) #7
  %823 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %v_memory1045 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %823, i32 0, i32 43
  %824 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory1045, align 8, !tbaa !52
  %825 = load i32, i32* %i, align 4, !tbaa !54
  %826 = load i32, i32* %Num, align 4, !tbaa !54
  %call1046 = call i32 (%struct.gs_memory_s*, i8*, ...) @errprintf(%struct.gs_memory_s* %824, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.177, i32 0, i32 0), i32 %825, i32 %826) #7
  %827 = bitcast i32* %Num to i8*
  call void @llvm.lifetime.end(i64 4, i8* %827) #2
  %828 = bitcast %struct.page_hint_stream_s** %hint1032 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %828) #2
  br label %for.inc.1047

for.inc.1047:                                     ; preds = %for.body.1031
  %829 = load i32, i32* %i, align 4, !tbaa !54
  %inc1048 = add nsw i32 %829, 1
  store i32 %inc1048, i32* %i, align 4, !tbaa !54
  br label %for.cond.1027

for.end.1049:                                     ; preds = %for.cond.1027
  store i32 0, i32* %i, align 4, !tbaa !54
  br label %for.cond.1050

for.cond.1050:                                    ; preds = %for.inc.1071, %for.end.1049
  %830 = load i32, i32* %i, align 4, !tbaa !54
  %831 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %next_page1051 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %831, i32 0, i32 153
  %832 = load i32, i32* %next_page1051, align 4, !tbaa !72
  %cmp1052 = icmp slt i32 %830, %832
  br i1 %cmp1052, label %for.body.1054, label %for.end.1073

for.body.1054:                                    ; preds = %for.cond.1050
  %833 = bitcast %struct.page_hint_stream_s** %hint1055 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %833) #2
  %834 = load i32, i32* %i, align 4, !tbaa !54
  %idxprom1056 = sext i32 %834 to i64
  %835 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %PageHints1057 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %835, i32 0, i32 26
  %836 = load %struct.page_hint_stream_s*, %struct.page_hint_stream_s** %PageHints1057, align 8, !tbaa !311
  %arrayidx1058 = getelementptr inbounds %struct.page_hint_stream_s, %struct.page_hint_stream_s* %836, i64 %idxprom1056
  store %struct.page_hint_stream_s* %arrayidx1058, %struct.page_hint_stream_s** %hint1055, align 8, !tbaa !1
  %837 = bitcast i32* %Num1059 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %837) #2
  %838 = load %struct.page_hint_stream_s*, %struct.page_hint_stream_s** %hint1055, align 8, !tbaa !1
  %PageLength1060 = getelementptr inbounds %struct.page_hint_stream_s, %struct.page_hint_stream_s* %838, i32 0, i32 1
  %839 = load i32, i32* %PageLength1060, align 4, !tbaa !329
  %840 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %PageHintHeader1061 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %840, i32 0, i32 24
  %LeastPageLength1062 = getelementptr inbounds %struct.page_hint_stream_header_s, %struct.page_hint_stream_header_s* %PageHintHeader1061, i32 0, i32 3
  %841 = load i32, i32* %LeastPageLength1062, align 4, !tbaa !316
  %sub1063 = sub i32 %839, %841
  store i32 %sub1063, i32* %Num1059, align 4, !tbaa !54
  %842 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %843 = load i32, i32* %Num1059, align 4, !tbaa !54
  %conv1064 = sext i32 %843 to i64
  %844 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %PageHintHeader1065 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %844, i32 0, i32 24
  %PageLengthNumBits1066 = getelementptr inbounds %struct.page_hint_stream_header_s, %struct.page_hint_stream_header_s* %PageHintHeader1065, i32 0, i32 5
  %845 = load i16, i16* %PageLengthNumBits1066, align 2, !tbaa !338
  %conv1067 = trunc i16 %845 to i8
  %call1068 = call i32 @write_hint_stream(%struct.pdf_linearisation_s* %842, i64 %conv1064, i8 signext %conv1067) #7
  %846 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %v_memory1069 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %846, i32 0, i32 43
  %847 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory1069, align 8, !tbaa !52
  %848 = load i32, i32* %i, align 4, !tbaa !54
  %849 = load i32, i32* %Num1059, align 4, !tbaa !54
  %call1070 = call i32 (%struct.gs_memory_s*, i8*, ...) @errprintf(%struct.gs_memory_s* %847, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.178, i32 0, i32 0), i32 %848, i32 %849) #7
  %850 = bitcast i32* %Num1059 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %850) #2
  %851 = bitcast %struct.page_hint_stream_s** %hint1055 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %851) #2
  br label %for.inc.1071

for.inc.1071:                                     ; preds = %for.body.1054
  %852 = load i32, i32* %i, align 4, !tbaa !54
  %inc1072 = add nsw i32 %852, 1
  store i32 %inc1072, i32* %i, align 4, !tbaa !54
  br label %for.cond.1050

for.end.1073:                                     ; preds = %for.cond.1050
  store i32 0, i32* %i, align 4, !tbaa !54
  br label %for.cond.1074

for.cond.1074:                                    ; preds = %for.inc.1104, %for.end.1073
  %853 = load i32, i32* %i, align 4, !tbaa !54
  %854 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %next_page1075 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %854, i32 0, i32 153
  %855 = load i32, i32* %next_page1075, align 4, !tbaa !72
  %cmp1076 = icmp slt i32 %853, %855
  br i1 %cmp1076, label %for.body.1078, label %for.end.1106

for.body.1078:                                    ; preds = %for.cond.1074
  %856 = bitcast %struct.page_hint_stream_s** %hint1079 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %856) #2
  %857 = load i32, i32* %i, align 4, !tbaa !54
  %idxprom1080 = sext i32 %857 to i64
  %858 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %PageHints1081 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %858, i32 0, i32 26
  %859 = load %struct.page_hint_stream_s*, %struct.page_hint_stream_s** %PageHints1081, align 8, !tbaa !311
  %arrayidx1082 = getelementptr inbounds %struct.page_hint_stream_s, %struct.page_hint_stream_s* %859, i64 %idxprom1080
  store %struct.page_hint_stream_s* %arrayidx1082, %struct.page_hint_stream_s** %hint1079, align 8, !tbaa !1
  %860 = load i32, i32* %i, align 4, !tbaa !54
  %cmp1083 = icmp eq i32 %860, 0
  br i1 %cmp1083, label %if.then.1085, label %if.else.1093

if.then.1085:                                     ; preds = %for.body.1078
  %861 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %862 = load i32, i32* %i, align 4, !tbaa !54
  %conv1086 = sext i32 %862 to i64
  %863 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %PageHintHeader1087 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %863, i32 0, i32 24
  %SharedObjectNumBits1088 = getelementptr inbounds %struct.page_hint_stream_header_s, %struct.page_hint_stream_header_s* %PageHintHeader1087, i32 0, i32 14
  %864 = load i16, i16* %SharedObjectNumBits1088, align 2, !tbaa !341
  %conv1089 = trunc i16 %864 to i8
  %call1090 = call i32 @write_hint_stream(%struct.pdf_linearisation_s* %861, i64 %conv1086, i8 signext %conv1089) #7
  %865 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %v_memory1091 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %865, i32 0, i32 43
  %866 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory1091, align 8, !tbaa !52
  %867 = load i32, i32* %i, align 4, !tbaa !54
  %call1092 = call i32 (%struct.gs_memory_s*, i8*, ...) @errprintf(%struct.gs_memory_s* %866, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.179, i32 0, i32 0), i32 %867, i32 1) #7
  br label %if.end.1103

if.else.1093:                                     ; preds = %for.body.1078
  %868 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %869 = load %struct.page_hint_stream_s*, %struct.page_hint_stream_s** %hint1079, align 8, !tbaa !1
  %NumSharedObjects1094 = getelementptr inbounds %struct.page_hint_stream_s, %struct.page_hint_stream_s* %869, i32 0, i32 2
  %870 = load i32, i32* %NumSharedObjects1094, align 4, !tbaa !323
  %conv1095 = zext i32 %870 to i64
  %871 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %PageHintHeader1096 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %871, i32 0, i32 24
  %SharedObjectNumBits1097 = getelementptr inbounds %struct.page_hint_stream_header_s, %struct.page_hint_stream_header_s* %PageHintHeader1096, i32 0, i32 14
  %872 = load i16, i16* %SharedObjectNumBits1097, align 2, !tbaa !341
  %conv1098 = trunc i16 %872 to i8
  %call1099 = call i32 @write_hint_stream(%struct.pdf_linearisation_s* %868, i64 %conv1095, i8 signext %conv1098) #7
  %873 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %v_memory1100 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %873, i32 0, i32 43
  %874 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory1100, align 8, !tbaa !52
  %875 = load i32, i32* %i, align 4, !tbaa !54
  %876 = load %struct.page_hint_stream_s*, %struct.page_hint_stream_s** %hint1079, align 8, !tbaa !1
  %NumSharedObjects1101 = getelementptr inbounds %struct.page_hint_stream_s, %struct.page_hint_stream_s* %876, i32 0, i32 2
  %877 = load i32, i32* %NumSharedObjects1101, align 4, !tbaa !323
  %call1102 = call i32 (%struct.gs_memory_s*, i8*, ...) @errprintf(%struct.gs_memory_s* %874, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.179, i32 0, i32 0), i32 %875, i32 %877) #7
  br label %if.end.1103

if.end.1103:                                      ; preds = %if.else.1093, %if.then.1085
  %878 = bitcast %struct.page_hint_stream_s** %hint1079 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %878) #2
  br label %for.inc.1104

for.inc.1104:                                     ; preds = %if.end.1103
  %879 = load i32, i32* %i, align 4, !tbaa !54
  %inc1105 = add nsw i32 %879, 1
  store i32 %inc1105, i32* %i, align 4, !tbaa !54
  br label %for.cond.1074

for.end.1106:                                     ; preds = %for.cond.1074
  store i32 1, i32* %i, align 4, !tbaa !54
  br label %for.cond.1107

for.cond.1107:                                    ; preds = %for.inc.1137, %for.end.1106
  %880 = load i32, i32* %i, align 4, !tbaa !54
  %881 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %next_page1108 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %881, i32 0, i32 153
  %882 = load i32, i32* %next_page1108, align 4, !tbaa !72
  %cmp1109 = icmp slt i32 %880, %882
  br i1 %cmp1109, label %for.body.1111, label %for.end.1139

for.body.1111:                                    ; preds = %for.cond.1107
  %883 = bitcast %struct.page_hint_stream_s** %hint1112 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %883) #2
  %884 = load i32, i32* %i, align 4, !tbaa !54
  %idxprom1113 = sext i32 %884 to i64
  %885 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %PageHints1114 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %885, i32 0, i32 26
  %886 = load %struct.page_hint_stream_s*, %struct.page_hint_stream_s** %PageHints1114, align 8, !tbaa !311
  %arrayidx1115 = getelementptr inbounds %struct.page_hint_stream_s, %struct.page_hint_stream_s* %886, i64 %idxprom1113
  store %struct.page_hint_stream_s* %arrayidx1115, %struct.page_hint_stream_s** %hint1112, align 8, !tbaa !1
  store i32 0, i32* %j, align 4, !tbaa !54
  br label %for.cond.1116

for.cond.1116:                                    ; preds = %for.inc.1134, %for.body.1111
  %887 = load i32, i32* %j, align 4, !tbaa !54
  %888 = load %struct.page_hint_stream_s*, %struct.page_hint_stream_s** %hint1112, align 8, !tbaa !1
  %NumSharedObjects1117 = getelementptr inbounds %struct.page_hint_stream_s, %struct.page_hint_stream_s* %888, i32 0, i32 2
  %889 = load i32, i32* %NumSharedObjects1117, align 4, !tbaa !323
  %cmp1118 = icmp ult i32 %887, %889
  br i1 %cmp1118, label %for.body.1120, label %for.end.1136

for.body.1120:                                    ; preds = %for.cond.1116
  %890 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %891 = load i32, i32* %j, align 4, !tbaa !54
  %idxprom1121 = sext i32 %891 to i64
  %892 = load %struct.page_hint_stream_s*, %struct.page_hint_stream_s** %hint1112, align 8, !tbaa !1
  %SharedObjectRef1122 = getelementptr inbounds %struct.page_hint_stream_s, %struct.page_hint_stream_s* %892, i32 0, i32 3
  %893 = load i32*, i32** %SharedObjectRef1122, align 8, !tbaa !322
  %arrayidx1123 = getelementptr inbounds i32, i32* %893, i64 %idxprom1121
  %894 = load i32, i32* %arrayidx1123, align 4, !tbaa !54
  %conv1124 = zext i32 %894 to i64
  %895 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %PageHintHeader1125 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %895, i32 0, i32 24
  %SharedObjectNumBits1126 = getelementptr inbounds %struct.page_hint_stream_header_s, %struct.page_hint_stream_header_s* %PageHintHeader1125, i32 0, i32 14
  %896 = load i16, i16* %SharedObjectNumBits1126, align 2, !tbaa !341
  %conv1127 = trunc i16 %896 to i8
  %call1128 = call i32 @write_hint_stream(%struct.pdf_linearisation_s* %890, i64 %conv1124, i8 signext %conv1127) #7
  %897 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %v_memory1129 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %897, i32 0, i32 43
  %898 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory1129, align 8, !tbaa !52
  %899 = load i32, i32* %i, align 4, !tbaa !54
  %900 = load i32, i32* %j, align 4, !tbaa !54
  %901 = load i32, i32* %j, align 4, !tbaa !54
  %idxprom1130 = sext i32 %901 to i64
  %902 = load %struct.page_hint_stream_s*, %struct.page_hint_stream_s** %hint1112, align 8, !tbaa !1
  %SharedObjectRef1131 = getelementptr inbounds %struct.page_hint_stream_s, %struct.page_hint_stream_s* %902, i32 0, i32 3
  %903 = load i32*, i32** %SharedObjectRef1131, align 8, !tbaa !322
  %arrayidx1132 = getelementptr inbounds i32, i32* %903, i64 %idxprom1130
  %904 = load i32, i32* %arrayidx1132, align 4, !tbaa !54
  %call1133 = call i32 (%struct.gs_memory_s*, i8*, ...) @errprintf(%struct.gs_memory_s* %898, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.180, i32 0, i32 0), i32 %899, i32 %900, i32 %904) #7
  br label %for.inc.1134

for.inc.1134:                                     ; preds = %for.body.1120
  %905 = load i32, i32* %j, align 4, !tbaa !54
  %inc1135 = add nsw i32 %905, 1
  store i32 %inc1135, i32* %j, align 4, !tbaa !54
  br label %for.cond.1116

for.end.1136:                                     ; preds = %for.cond.1116
  %906 = bitcast %struct.page_hint_stream_s** %hint1112 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %906) #2
  br label %for.inc.1137

for.inc.1137:                                     ; preds = %for.end.1136
  %907 = load i32, i32* %i, align 4, !tbaa !54
  %inc1138 = add nsw i32 %907, 1
  store i32 %inc1138, i32* %i, align 4, !tbaa !54
  br label %for.cond.1107

for.end.1139:                                     ; preds = %for.cond.1107
  store i32 0, i32* %i, align 4, !tbaa !54
  br label %for.cond.1140

for.cond.1140:                                    ; preds = %for.inc.1161, %for.end.1139
  %908 = load i32, i32* %i, align 4, !tbaa !54
  %909 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %next_page1141 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %909, i32 0, i32 153
  %910 = load i32, i32* %next_page1141, align 4, !tbaa !72
  %cmp1142 = icmp slt i32 %908, %910
  br i1 %cmp1142, label %for.body.1144, label %for.end.1163

for.body.1144:                                    ; preds = %for.cond.1140
  %911 = bitcast %struct.page_hint_stream_s** %hint1145 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %911) #2
  %912 = load i32, i32* %i, align 4, !tbaa !54
  %idxprom1146 = sext i32 %912 to i64
  %913 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %PageHints1147 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %913, i32 0, i32 26
  %914 = load %struct.page_hint_stream_s*, %struct.page_hint_stream_s** %PageHints1147, align 8, !tbaa !311
  %arrayidx1148 = getelementptr inbounds %struct.page_hint_stream_s, %struct.page_hint_stream_s* %914, i64 %idxprom1146
  store %struct.page_hint_stream_s* %arrayidx1148, %struct.page_hint_stream_s** %hint1145, align 8, !tbaa !1
  store i32 0, i32* %j, align 4, !tbaa !54
  br label %for.cond.1149

for.cond.1149:                                    ; preds = %for.inc.1158, %for.body.1144
  %915 = load i32, i32* %j, align 4, !tbaa !54
  %916 = load %struct.page_hint_stream_s*, %struct.page_hint_stream_s** %hint1145, align 8, !tbaa !1
  %NumSharedObjects1150 = getelementptr inbounds %struct.page_hint_stream_s, %struct.page_hint_stream_s* %916, i32 0, i32 2
  %917 = load i32, i32* %NumSharedObjects1150, align 4, !tbaa !323
  %cmp1151 = icmp ult i32 %915, %917
  br i1 %cmp1151, label %for.body.1153, label %for.end.1160

for.body.1153:                                    ; preds = %for.cond.1149
  %918 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %919 = load i32, i32* %j, align 4, !tbaa !54
  %conv1154 = sext i32 %919 to i64
  %call1155 = call i32 @write_hint_stream(%struct.pdf_linearisation_s* %918, i64 %conv1154, i8 signext 1) #7
  %920 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %v_memory1156 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %920, i32 0, i32 43
  %921 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory1156, align 8, !tbaa !52
  %922 = load i32, i32* %i, align 4, !tbaa !54
  %923 = load i32, i32* %j, align 4, !tbaa !54
  %call1157 = call i32 (%struct.gs_memory_s*, i8*, ...) @errprintf(%struct.gs_memory_s* %921, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.181, i32 0, i32 0), i32 %922, i32 %923) #7
  br label %for.inc.1158

for.inc.1158:                                     ; preds = %for.body.1153
  %924 = load i32, i32* %j, align 4, !tbaa !54
  %inc1159 = add nsw i32 %924, 1
  store i32 %inc1159, i32* %j, align 4, !tbaa !54
  br label %for.cond.1149

for.end.1160:                                     ; preds = %for.cond.1149
  %925 = bitcast %struct.page_hint_stream_s** %hint1145 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %925) #2
  br label %for.inc.1161

for.inc.1161:                                     ; preds = %for.end.1160
  %926 = load i32, i32* %i, align 4, !tbaa !54
  %inc1162 = add nsw i32 %926, 1
  store i32 %inc1162, i32* %i, align 4, !tbaa !54
  br label %for.cond.1140

for.end.1163:                                     ; preds = %for.cond.1140
  store i32 1, i32* %i, align 4, !tbaa !54
  br label %for.cond.1164

for.cond.1164:                                    ; preds = %for.inc.1187, %for.end.1163
  %927 = load i32, i32* %i, align 4, !tbaa !54
  %928 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %next_page1165 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %928, i32 0, i32 153
  %929 = load i32, i32* %next_page1165, align 4, !tbaa !72
  %cmp1166 = icmp slt i32 %927, %929
  br i1 %cmp1166, label %for.body.1168, label %for.end.1189

for.body.1168:                                    ; preds = %for.cond.1164
  %930 = bitcast %struct.page_hint_stream_s** %hint1169 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %930) #2
  %931 = load i32, i32* %i, align 4, !tbaa !54
  %idxprom1170 = sext i32 %931 to i64
  %932 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %PageHints1171 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %932, i32 0, i32 26
  %933 = load %struct.page_hint_stream_s*, %struct.page_hint_stream_s** %PageHints1171, align 8, !tbaa !311
  %arrayidx1172 = getelementptr inbounds %struct.page_hint_stream_s, %struct.page_hint_stream_s* %933, i64 %idxprom1170
  store %struct.page_hint_stream_s* %arrayidx1172, %struct.page_hint_stream_s** %hint1169, align 8, !tbaa !1
  %934 = bitcast i32* %Num1173 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %934) #2
  %935 = load %struct.page_hint_stream_s*, %struct.page_hint_stream_s** %hint1169, align 8, !tbaa !1
  %ContentOffset1174 = getelementptr inbounds %struct.page_hint_stream_s, %struct.page_hint_stream_s* %935, i32 0, i32 4
  %936 = load i64, i64* %ContentOffset1174, align 8, !tbaa !319
  %937 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %PageHintHeader1175 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %937, i32 0, i32 24
  %LeastPageOffset1176 = getelementptr inbounds %struct.page_hint_stream_header_s, %struct.page_hint_stream_header_s* %PageHintHeader1175, i32 0, i32 6
  %938 = load i32, i32* %LeastPageOffset1176, align 4, !tbaa !317
  %conv1177 = zext i32 %938 to i64
  %sub1178 = sub nsw i64 %936, %conv1177
  %conv1179 = trunc i64 %sub1178 to i32
  store i32 %conv1179, i32* %Num1173, align 4, !tbaa !54
  %939 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %940 = load i32, i32* %Num1173, align 4, !tbaa !54
  %conv1180 = sext i32 %940 to i64
  %941 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %PageHintHeader1181 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %941, i32 0, i32 24
  %PageOffsetNumBits1182 = getelementptr inbounds %struct.page_hint_stream_header_s, %struct.page_hint_stream_header_s* %PageHintHeader1181, i32 0, i32 8
  %942 = load i16, i16* %PageOffsetNumBits1182, align 2, !tbaa !339
  %conv1183 = trunc i16 %942 to i8
  %call1184 = call i32 @write_hint_stream(%struct.pdf_linearisation_s* %939, i64 %conv1180, i8 signext %conv1183) #7
  %943 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %v_memory1185 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %943, i32 0, i32 43
  %944 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory1185, align 8, !tbaa !52
  %945 = load i32, i32* %i, align 4, !tbaa !54
  %946 = load i32, i32* %Num1173, align 4, !tbaa !54
  %call1186 = call i32 (%struct.gs_memory_s*, i8*, ...) @errprintf(%struct.gs_memory_s* %944, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.182, i32 0, i32 0), i32 %945, i32 %946) #7
  %947 = bitcast i32* %Num1173 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %947) #2
  %948 = bitcast %struct.page_hint_stream_s** %hint1169 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %948) #2
  br label %for.inc.1187

for.inc.1187:                                     ; preds = %for.body.1168
  %949 = load i32, i32* %i, align 4, !tbaa !54
  %inc1188 = add nsw i32 %949, 1
  store i32 %inc1188, i32* %i, align 4, !tbaa !54
  br label %for.cond.1164

for.end.1189:                                     ; preds = %for.cond.1164
  store i32 1, i32* %i, align 4, !tbaa !54
  br label %for.cond.1190

for.cond.1190:                                    ; preds = %for.inc.1213, %for.end.1189
  %950 = load i32, i32* %i, align 4, !tbaa !54
  %951 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %next_page1191 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %951, i32 0, i32 153
  %952 = load i32, i32* %next_page1191, align 4, !tbaa !72
  %cmp1192 = icmp slt i32 %950, %952
  br i1 %cmp1192, label %for.body.1194, label %for.end.1215

for.body.1194:                                    ; preds = %for.cond.1190
  %953 = bitcast %struct.page_hint_stream_s** %hint1195 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %953) #2
  %954 = load i32, i32* %i, align 4, !tbaa !54
  %idxprom1196 = sext i32 %954 to i64
  %955 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %PageHints1197 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %955, i32 0, i32 26
  %956 = load %struct.page_hint_stream_s*, %struct.page_hint_stream_s** %PageHints1197, align 8, !tbaa !311
  %arrayidx1198 = getelementptr inbounds %struct.page_hint_stream_s, %struct.page_hint_stream_s* %956, i64 %idxprom1196
  store %struct.page_hint_stream_s* %arrayidx1198, %struct.page_hint_stream_s** %hint1195, align 8, !tbaa !1
  %957 = bitcast i32* %Num1199 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %957) #2
  %958 = load %struct.page_hint_stream_s*, %struct.page_hint_stream_s** %hint1195, align 8, !tbaa !1
  %ContentLength1200 = getelementptr inbounds %struct.page_hint_stream_s, %struct.page_hint_stream_s* %958, i32 0, i32 5
  %959 = load i64, i64* %ContentLength1200, align 8, !tbaa !321
  %960 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %PageHintHeader1201 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %960, i32 0, i32 24
  %LeastContentLength1202 = getelementptr inbounds %struct.page_hint_stream_header_s, %struct.page_hint_stream_header_s* %PageHintHeader1201, i32 0, i32 9
  %961 = load i32, i32* %LeastContentLength1202, align 4, !tbaa !318
  %conv1203 = zext i32 %961 to i64
  %sub1204 = sub nsw i64 %959, %conv1203
  %conv1205 = trunc i64 %sub1204 to i32
  store i32 %conv1205, i32* %Num1199, align 4, !tbaa !54
  %962 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %963 = load i32, i32* %Num1199, align 4, !tbaa !54
  %conv1206 = sext i32 %963 to i64
  %964 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %PageHintHeader1207 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %964, i32 0, i32 24
  %ContentLengthNumBits1208 = getelementptr inbounds %struct.page_hint_stream_header_s, %struct.page_hint_stream_header_s* %PageHintHeader1207, i32 0, i32 11
  %965 = load i16, i16* %ContentLengthNumBits1208, align 2, !tbaa !340
  %conv1209 = trunc i16 %965 to i8
  %call1210 = call i32 @write_hint_stream(%struct.pdf_linearisation_s* %962, i64 %conv1206, i8 signext %conv1209) #7
  %966 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %v_memory1211 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %966, i32 0, i32 43
  %967 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory1211, align 8, !tbaa !52
  %968 = load i32, i32* %i, align 4, !tbaa !54
  %969 = load i32, i32* %Num1199, align 4, !tbaa !54
  %call1212 = call i32 (%struct.gs_memory_s*, i8*, ...) @errprintf(%struct.gs_memory_s* %967, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.183, i32 0, i32 0), i32 %968, i32 %969) #7
  %970 = bitcast i32* %Num1199 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %970) #2
  %971 = bitcast %struct.page_hint_stream_s** %hint1195 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %971) #2
  br label %for.inc.1213

for.inc.1213:                                     ; preds = %for.body.1194
  %972 = load i32, i32* %i, align 4, !tbaa !54
  %inc1214 = add nsw i32 %972, 1
  store i32 %inc1214, i32* %i, align 4, !tbaa !54
  br label %for.cond.1190

for.end.1215:                                     ; preds = %for.cond.1190
  %973 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %call1216 = call i32 @flush_hint_stream(%struct.pdf_linearisation_s* %973) #7
  %974 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %sfile1217 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %974, i32 0, i32 0
  %975 = load %struct._IO_FILE*, %struct._IO_FILE** %sfile1217, align 8, !tbaa !290
  %call1218 = call i64 @gp_ftell_64(%struct._IO_FILE* %975) #7
  %976 = load i64, i64* %HintStreamStart, align 8, !tbaa !107
  %sub1219 = sub nsw i64 %call1218, %976
  store i64 %sub1219, i64* %SharedHintOffset, align 8, !tbaa !107
  %977 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %SharedHints1220 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %977, i32 0, i32 29
  %978 = load %struct.share_hint_stream_s*, %struct.share_hint_stream_s** %SharedHints1220, align 8, !tbaa !313
  %arrayidx1221 = getelementptr inbounds %struct.share_hint_stream_s, %struct.share_hint_stream_s* %978, i64 0
  %ObjectNumber1222 = getelementptr inbounds %struct.share_hint_stream_s, %struct.share_hint_stream_s* %arrayidx1221, i32 0, i32 0
  %979 = load i32, i32* %ObjectNumber1222, align 4, !tbaa !324
  %980 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %SharedHintHeader1223 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %980, i32 0, i32 27
  %FirstSharedObject = getelementptr inbounds %struct.shared_hint_stream_header_s, %struct.shared_hint_stream_header_s* %SharedHintHeader1223, i32 0, i32 0
  store i32 %979, i32* %FirstSharedObject, align 4, !tbaa !342
  %981 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %SharedHints1224 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %981, i32 0, i32 29
  %982 = load %struct.share_hint_stream_s*, %struct.share_hint_stream_s** %SharedHints1224, align 8, !tbaa !313
  %arrayidx1225 = getelementptr inbounds %struct.share_hint_stream_s, %struct.share_hint_stream_s* %982, i64 0
  %ObjectLength1226 = getelementptr inbounds %struct.share_hint_stream_s, %struct.share_hint_stream_s* %arrayidx1225, i32 0, i32 2
  %983 = load i32, i32* %ObjectLength1226, align 4, !tbaa !327
  %984 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %SharedHintHeader1227 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %984, i32 0, i32 27
  %LeastObjectLength = getelementptr inbounds %struct.shared_hint_stream_header_s, %struct.shared_hint_stream_header_s* %SharedHintHeader1227, i32 0, i32 4
  store i32 %983, i32* %LeastObjectLength, align 4, !tbaa !343
  %985 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %SharedHints1228 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %985, i32 0, i32 29
  %986 = load %struct.share_hint_stream_s*, %struct.share_hint_stream_s** %SharedHints1228, align 8, !tbaa !313
  %arrayidx1229 = getelementptr inbounds %struct.share_hint_stream_s, %struct.share_hint_stream_s* %986, i64 0
  %ObjectLength1230 = getelementptr inbounds %struct.share_hint_stream_s, %struct.share_hint_stream_s* %arrayidx1229, i32 0, i32 2
  %987 = load i32, i32* %ObjectLength1230, align 4, !tbaa !327
  %988 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %SharedHintHeader1231 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %988, i32 0, i32 27
  %MostObjectLength = getelementptr inbounds %struct.shared_hint_stream_header_s, %struct.shared_hint_stream_header_s* %SharedHintHeader1231, i32 0, i32 5
  store i32 %987, i32* %MostObjectLength, align 4, !tbaa !344
  store i32 1, i32* %i, align 4, !tbaa !54
  br label %for.cond.1232

for.cond.1232:                                    ; preds = %for.inc.1288, %for.end.1215
  %989 = load i32, i32* %i, align 4, !tbaa !54
  %990 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %NumSharedHints1233 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %990, i32 0, i32 28
  %991 = load i32, i32* %NumSharedHints1233, align 4, !tbaa !314
  %cmp1234 = icmp slt i32 %989, %991
  br i1 %cmp1234, label %for.body.1236, label %for.end.1290

for.body.1236:                                    ; preds = %for.cond.1232
  %992 = load i32, i32* %i, align 4, !tbaa !54
  %idxprom1237 = sext i32 %992 to i64
  %993 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %SharedHints1238 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %993, i32 0, i32 29
  %994 = load %struct.share_hint_stream_s*, %struct.share_hint_stream_s** %SharedHints1238, align 8, !tbaa !313
  %arrayidx1239 = getelementptr inbounds %struct.share_hint_stream_s, %struct.share_hint_stream_s* %994, i64 %idxprom1237
  %ObjectNumber1240 = getelementptr inbounds %struct.share_hint_stream_s, %struct.share_hint_stream_s* %arrayidx1239, i32 0, i32 0
  %995 = load i32, i32* %ObjectNumber1240, align 4, !tbaa !324
  %996 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %SharedHintHeader1241 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %996, i32 0, i32 27
  %FirstSharedObject1242 = getelementptr inbounds %struct.shared_hint_stream_header_s, %struct.shared_hint_stream_header_s* %SharedHintHeader1241, i32 0, i32 0
  %997 = load i32, i32* %FirstSharedObject1242, align 4, !tbaa !342
  %cmp1243 = icmp ult i32 %995, %997
  br i1 %cmp1243, label %if.then.1245, label %if.end.1255

if.then.1245:                                     ; preds = %for.body.1236
  %998 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %SharedHints1246 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %998, i32 0, i32 29
  %999 = load %struct.share_hint_stream_s*, %struct.share_hint_stream_s** %SharedHints1246, align 8, !tbaa !313
  %arrayidx1247 = getelementptr inbounds %struct.share_hint_stream_s, %struct.share_hint_stream_s* %999, i64 1
  %ObjectNumber1248 = getelementptr inbounds %struct.share_hint_stream_s, %struct.share_hint_stream_s* %arrayidx1247, i32 0, i32 0
  %1000 = load i32, i32* %ObjectNumber1248, align 4, !tbaa !324
  %1001 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %SharedHintHeader1249 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1001, i32 0, i32 27
  %FirstSharedObject1250 = getelementptr inbounds %struct.shared_hint_stream_header_s, %struct.shared_hint_stream_header_s* %SharedHintHeader1249, i32 0, i32 0
  store i32 %1000, i32* %FirstSharedObject1250, align 4, !tbaa !342
  %1002 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %SharedHints1251 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1002, i32 0, i32 29
  %1003 = load %struct.share_hint_stream_s*, %struct.share_hint_stream_s** %SharedHints1251, align 8, !tbaa !313
  %arrayidx1252 = getelementptr inbounds %struct.share_hint_stream_s, %struct.share_hint_stream_s* %1003, i64 1
  %ObjectOffset1253 = getelementptr inbounds %struct.share_hint_stream_s, %struct.share_hint_stream_s* %arrayidx1252, i32 0, i32 1
  %1004 = load i64, i64* %ObjectOffset1253, align 8, !tbaa !326
  %1005 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %SharedHintHeader1254 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1005, i32 0, i32 27
  %FirstObjectOffset = getelementptr inbounds %struct.shared_hint_stream_header_s, %struct.shared_hint_stream_header_s* %SharedHintHeader1254, i32 0, i32 1
  store i64 %1004, i64* %FirstObjectOffset, align 8, !tbaa !345
  br label %if.end.1255

if.end.1255:                                      ; preds = %if.then.1245, %for.body.1236
  %1006 = load i32, i32* %i, align 4, !tbaa !54
  %idxprom1256 = sext i32 %1006 to i64
  %1007 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %SharedHints1257 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1007, i32 0, i32 29
  %1008 = load %struct.share_hint_stream_s*, %struct.share_hint_stream_s** %SharedHints1257, align 8, !tbaa !313
  %arrayidx1258 = getelementptr inbounds %struct.share_hint_stream_s, %struct.share_hint_stream_s* %1008, i64 %idxprom1256
  %ObjectLength1259 = getelementptr inbounds %struct.share_hint_stream_s, %struct.share_hint_stream_s* %arrayidx1258, i32 0, i32 2
  %1009 = load i32, i32* %ObjectLength1259, align 4, !tbaa !327
  %1010 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %SharedHintHeader1260 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1010, i32 0, i32 27
  %LeastObjectLength1261 = getelementptr inbounds %struct.shared_hint_stream_header_s, %struct.shared_hint_stream_header_s* %SharedHintHeader1260, i32 0, i32 4
  %1011 = load i32, i32* %LeastObjectLength1261, align 4, !tbaa !343
  %cmp1262 = icmp ult i32 %1009, %1011
  br i1 %cmp1262, label %if.then.1264, label %if.end.1271

if.then.1264:                                     ; preds = %if.end.1255
  %1012 = load i32, i32* %i, align 4, !tbaa !54
  %idxprom1265 = sext i32 %1012 to i64
  %1013 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %SharedHints1266 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1013, i32 0, i32 29
  %1014 = load %struct.share_hint_stream_s*, %struct.share_hint_stream_s** %SharedHints1266, align 8, !tbaa !313
  %arrayidx1267 = getelementptr inbounds %struct.share_hint_stream_s, %struct.share_hint_stream_s* %1014, i64 %idxprom1265
  %ObjectLength1268 = getelementptr inbounds %struct.share_hint_stream_s, %struct.share_hint_stream_s* %arrayidx1267, i32 0, i32 2
  %1015 = load i32, i32* %ObjectLength1268, align 4, !tbaa !327
  %1016 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %SharedHintHeader1269 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1016, i32 0, i32 27
  %LeastObjectLength1270 = getelementptr inbounds %struct.shared_hint_stream_header_s, %struct.shared_hint_stream_header_s* %SharedHintHeader1269, i32 0, i32 4
  store i32 %1015, i32* %LeastObjectLength1270, align 4, !tbaa !343
  br label %if.end.1271

if.end.1271:                                      ; preds = %if.then.1264, %if.end.1255
  %1017 = load i32, i32* %i, align 4, !tbaa !54
  %idxprom1272 = sext i32 %1017 to i64
  %1018 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %SharedHints1273 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1018, i32 0, i32 29
  %1019 = load %struct.share_hint_stream_s*, %struct.share_hint_stream_s** %SharedHints1273, align 8, !tbaa !313
  %arrayidx1274 = getelementptr inbounds %struct.share_hint_stream_s, %struct.share_hint_stream_s* %1019, i64 %idxprom1272
  %ObjectLength1275 = getelementptr inbounds %struct.share_hint_stream_s, %struct.share_hint_stream_s* %arrayidx1274, i32 0, i32 2
  %1020 = load i32, i32* %ObjectLength1275, align 4, !tbaa !327
  %1021 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %SharedHintHeader1276 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1021, i32 0, i32 27
  %MostObjectLength1277 = getelementptr inbounds %struct.shared_hint_stream_header_s, %struct.shared_hint_stream_header_s* %SharedHintHeader1276, i32 0, i32 5
  %1022 = load i32, i32* %MostObjectLength1277, align 4, !tbaa !344
  %cmp1278 = icmp ugt i32 %1020, %1022
  br i1 %cmp1278, label %if.then.1280, label %if.end.1287

if.then.1280:                                     ; preds = %if.end.1271
  %1023 = load i32, i32* %i, align 4, !tbaa !54
  %idxprom1281 = sext i32 %1023 to i64
  %1024 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %SharedHints1282 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1024, i32 0, i32 29
  %1025 = load %struct.share_hint_stream_s*, %struct.share_hint_stream_s** %SharedHints1282, align 8, !tbaa !313
  %arrayidx1283 = getelementptr inbounds %struct.share_hint_stream_s, %struct.share_hint_stream_s* %1025, i64 %idxprom1281
  %ObjectLength1284 = getelementptr inbounds %struct.share_hint_stream_s, %struct.share_hint_stream_s* %arrayidx1283, i32 0, i32 2
  %1026 = load i32, i32* %ObjectLength1284, align 4, !tbaa !327
  %1027 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %SharedHintHeader1285 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1027, i32 0, i32 27
  %MostObjectLength1286 = getelementptr inbounds %struct.shared_hint_stream_header_s, %struct.shared_hint_stream_header_s* %SharedHintHeader1285, i32 0, i32 5
  store i32 %1026, i32* %MostObjectLength1286, align 4, !tbaa !344
  br label %if.end.1287

if.end.1287:                                      ; preds = %if.then.1280, %if.end.1271
  br label %for.inc.1288

for.inc.1288:                                     ; preds = %if.end.1287
  %1028 = load i32, i32* %i, align 4, !tbaa !54
  %inc1289 = add nsw i32 %1028, 1
  store i32 %inc1289, i32* %i, align 4, !tbaa !54
  br label %for.cond.1232

for.end.1290:                                     ; preds = %for.cond.1232
  %1029 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %NumPage1Resources1291 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1029, i32 0, i32 8
  %1030 = load i64, i64* %NumPage1Resources1291, align 8, !tbaa !293
  %conv1292 = trunc i64 %1030 to i32
  %1031 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %SharedHintHeader1293 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1031, i32 0, i32 27
  %FirstPageEntries1294 = getelementptr inbounds %struct.shared_hint_stream_header_s, %struct.shared_hint_stream_header_s* %SharedHintHeader1293, i32 0, i32 2
  store i32 %conv1292, i32* %FirstPageEntries1294, align 4, !tbaa !330
  %1032 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %NumSharedResources1295 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1032, i32 0, i32 10
  %1033 = load i64, i64* %NumSharedResources1295, align 8, !tbaa !296
  %1034 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %SharedHintHeader1296 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1034, i32 0, i32 27
  %FirstPageEntries1297 = getelementptr inbounds %struct.shared_hint_stream_header_s, %struct.shared_hint_stream_header_s* %SharedHintHeader1296, i32 0, i32 2
  %1035 = load i32, i32* %FirstPageEntries1297, align 4, !tbaa !330
  %conv1298 = zext i32 %1035 to i64
  %add1299 = add nsw i64 %1033, %conv1298
  %conv1300 = trunc i64 %add1299 to i32
  %1036 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %SharedHintHeader1301 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1036, i32 0, i32 27
  %NumSharedObjects1302 = getelementptr inbounds %struct.shared_hint_stream_header_s, %struct.shared_hint_stream_header_s* %SharedHintHeader1301, i32 0, i32 3
  store i32 %conv1300, i32* %NumSharedObjects1302, align 4, !tbaa !346
  %1037 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %1038 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %SharedHintHeader1303 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1038, i32 0, i32 27
  %FirstSharedObject1304 = getelementptr inbounds %struct.shared_hint_stream_header_s, %struct.shared_hint_stream_header_s* %SharedHintHeader1303, i32 0, i32 0
  %1039 = load i32, i32* %FirstSharedObject1304, align 4, !tbaa !342
  %conv1305 = zext i32 %1039 to i64
  %call1306 = call i32 @write_hint_stream(%struct.pdf_linearisation_s* %1037, i64 %conv1305, i8 signext 32) #7
  %1040 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %v_memory1307 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %1040, i32 0, i32 43
  %1041 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory1307, align 8, !tbaa !52
  %1042 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %SharedHintHeader1308 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1042, i32 0, i32 27
  %FirstSharedObject1309 = getelementptr inbounds %struct.shared_hint_stream_header_s, %struct.shared_hint_stream_header_s* %SharedHintHeader1308, i32 0, i32 0
  %1043 = load i32, i32* %FirstSharedObject1309, align 4, !tbaa !342
  %call1310 = call i32 (%struct.gs_memory_s*, i8*, ...) @errprintf(%struct.gs_memory_s* %1041, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.184, i32 0, i32 0), i32 %1043) #7
  %1044 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %1045 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %SharedHintHeader1311 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1045, i32 0, i32 27
  %FirstObjectOffset1312 = getelementptr inbounds %struct.shared_hint_stream_header_s, %struct.shared_hint_stream_header_s* %SharedHintHeader1311, i32 0, i32 1
  %1046 = load i64, i64* %FirstObjectOffset1312, align 8, !tbaa !345
  %call1313 = call i32 @write_hint_stream(%struct.pdf_linearisation_s* %1044, i64 %1046, i8 signext 32) #7
  %1047 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %v_memory1314 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %1047, i32 0, i32 43
  %1048 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory1314, align 8, !tbaa !52
  %1049 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %SharedHintHeader1315 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1049, i32 0, i32 27
  %FirstObjectOffset1316 = getelementptr inbounds %struct.shared_hint_stream_header_s, %struct.shared_hint_stream_header_s* %SharedHintHeader1315, i32 0, i32 1
  %1050 = load i64, i64* %FirstObjectOffset1316, align 8, !tbaa !345
  %call1317 = call i32 (%struct.gs_memory_s*, i8*, ...) @errprintf(%struct.gs_memory_s* %1048, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.185, i32 0, i32 0), i64 %1050) #7
  %1051 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %1052 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %SharedHintHeader1318 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1052, i32 0, i32 27
  %FirstPageEntries1319 = getelementptr inbounds %struct.shared_hint_stream_header_s, %struct.shared_hint_stream_header_s* %SharedHintHeader1318, i32 0, i32 2
  %1053 = load i32, i32* %FirstPageEntries1319, align 4, !tbaa !330
  %conv1320 = zext i32 %1053 to i64
  %call1321 = call i32 @write_hint_stream(%struct.pdf_linearisation_s* %1051, i64 %conv1320, i8 signext 32) #7
  %1054 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %v_memory1322 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %1054, i32 0, i32 43
  %1055 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory1322, align 8, !tbaa !52
  %1056 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %SharedHintHeader1323 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1056, i32 0, i32 27
  %FirstPageEntries1324 = getelementptr inbounds %struct.shared_hint_stream_header_s, %struct.shared_hint_stream_header_s* %SharedHintHeader1323, i32 0, i32 2
  %1057 = load i32, i32* %FirstPageEntries1324, align 4, !tbaa !330
  %call1325 = call i32 (%struct.gs_memory_s*, i8*, ...) @errprintf(%struct.gs_memory_s* %1055, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.186, i32 0, i32 0), i32 %1057) #7
  %1058 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %1059 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %SharedHintHeader1326 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1059, i32 0, i32 27
  %NumSharedObjects1327 = getelementptr inbounds %struct.shared_hint_stream_header_s, %struct.shared_hint_stream_header_s* %SharedHintHeader1326, i32 0, i32 3
  %1060 = load i32, i32* %NumSharedObjects1327, align 4, !tbaa !346
  %conv1328 = zext i32 %1060 to i64
  %call1329 = call i32 @write_hint_stream(%struct.pdf_linearisation_s* %1058, i64 %conv1328, i8 signext 32) #7
  %1061 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %v_memory1330 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %1061, i32 0, i32 43
  %1062 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory1330, align 8, !tbaa !52
  %1063 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %SharedHintHeader1331 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1063, i32 0, i32 27
  %NumSharedObjects1332 = getelementptr inbounds %struct.shared_hint_stream_header_s, %struct.shared_hint_stream_header_s* %SharedHintHeader1331, i32 0, i32 3
  %1064 = load i32, i32* %NumSharedObjects1332, align 4, !tbaa !346
  %call1333 = call i32 (%struct.gs_memory_s*, i8*, ...) @errprintf(%struct.gs_memory_s* %1062, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.187, i32 0, i32 0), i32 %1064) #7
  store i32 1, i32* %j, align 4, !tbaa !54
  %1065 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %1066 = load i32, i32* %j, align 4, !tbaa !54
  %conv1334 = sext i32 %1066 to i64
  %call1335 = call i32 @write_hint_stream(%struct.pdf_linearisation_s* %1065, i64 %conv1334, i8 signext 32) #7
  %1067 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %v_memory1336 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %1067, i32 0, i32 43
  %1068 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory1336, align 8, !tbaa !52
  %call1337 = call i32 (%struct.gs_memory_s*, i8*, ...) @errprintf(%struct.gs_memory_s* %1068, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.188, i32 0, i32 0)) #7
  %1069 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %1070 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %SharedHintHeader1338 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1070, i32 0, i32 27
  %FirstObjectOffset1339 = getelementptr inbounds %struct.shared_hint_stream_header_s, %struct.shared_hint_stream_header_s* %SharedHintHeader1338, i32 0, i32 1
  %1071 = load i64, i64* %FirstObjectOffset1339, align 8, !tbaa !345
  %call1340 = call i32 @write_hint_stream(%struct.pdf_linearisation_s* %1069, i64 %1071, i8 signext 16) #7
  %1072 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %v_memory1341 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %1072, i32 0, i32 43
  %1073 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory1341, align 8, !tbaa !52
  %1074 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %SharedHintHeader1342 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1074, i32 0, i32 27
  %FirstObjectOffset1343 = getelementptr inbounds %struct.shared_hint_stream_header_s, %struct.shared_hint_stream_header_s* %SharedHintHeader1342, i32 0, i32 1
  %1075 = load i64, i64* %FirstObjectOffset1343, align 8, !tbaa !345
  %call1344 = call i32 (%struct.gs_memory_s*, i8*, ...) @errprintf(%struct.gs_memory_s* %1073, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.185, i32 0, i32 0), i64 %1075) #7
  %1076 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %1077 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %SharedHintHeader1345 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1077, i32 0, i32 27
  %LeastObjectLength1346 = getelementptr inbounds %struct.shared_hint_stream_header_s, %struct.shared_hint_stream_header_s* %SharedHintHeader1345, i32 0, i32 4
  %1078 = load i32, i32* %LeastObjectLength1346, align 4, !tbaa !343
  %conv1347 = zext i32 %1078 to i64
  %call1348 = call i32 @write_hint_stream(%struct.pdf_linearisation_s* %1076, i64 %conv1347, i8 signext 32) #7
  %1079 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %v_memory1349 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %1079, i32 0, i32 43
  %1080 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory1349, align 8, !tbaa !52
  %1081 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %SharedHintHeader1350 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1081, i32 0, i32 27
  %LeastObjectLength1351 = getelementptr inbounds %struct.shared_hint_stream_header_s, %struct.shared_hint_stream_header_s* %SharedHintHeader1350, i32 0, i32 4
  %1082 = load i32, i32* %LeastObjectLength1351, align 4, !tbaa !343
  %call1352 = call i32 (%struct.gs_memory_s*, i8*, ...) @errprintf(%struct.gs_memory_s* %1080, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.189, i32 0, i32 0), i32 %1082) #7
  %1083 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %SharedHintHeader1353 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1083, i32 0, i32 27
  %MostObjectLength1354 = getelementptr inbounds %struct.shared_hint_stream_header_s, %struct.shared_hint_stream_header_s* %SharedHintHeader1353, i32 0, i32 5
  %1084 = load i32, i32* %MostObjectLength1354, align 4, !tbaa !344
  %1085 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %SharedHintHeader1355 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1085, i32 0, i32 27
  %LeastObjectLength1356 = getelementptr inbounds %struct.shared_hint_stream_header_s, %struct.shared_hint_stream_header_s* %SharedHintHeader1355, i32 0, i32 4
  %1086 = load i32, i32* %LeastObjectLength1356, align 4, !tbaa !343
  %sub1357 = sub i32 %1084, %1086
  %add1358 = add i32 %sub1357, 1
  %div1359 = udiv i32 %add1358, 2
  store i32 %div1359, i32* %i, align 4, !tbaa !54
  store i32 0, i32* %j, align 4, !tbaa !54
  br label %while.cond.1360

while.cond.1360:                                  ; preds = %while.body.1362, %for.end.1290
  %1087 = load i32, i32* %i, align 4, !tbaa !54
  %tobool1361 = icmp ne i32 %1087, 0
  br i1 %tobool1361, label %while.body.1362, label %while.end.1365

while.body.1362:                                  ; preds = %while.cond.1360
  %1088 = load i32, i32* %i, align 4, !tbaa !54
  %div1363 = sdiv i32 %1088, 2
  store i32 %div1363, i32* %i, align 4, !tbaa !54
  %1089 = load i32, i32* %j, align 4, !tbaa !54
  %inc1364 = add nsw i32 %1089, 1
  store i32 %inc1364, i32* %j, align 4, !tbaa !54
  br label %while.cond.1360

while.end.1365:                                   ; preds = %while.cond.1360
  %1090 = load i32, i32* %j, align 4, !tbaa !54
  %add1366 = add nsw i32 %1090, 1
  %conv1367 = trunc i32 %add1366 to i16
  %1091 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %SharedHintHeader1368 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1091, i32 0, i32 27
  %LengthNumBits = getelementptr inbounds %struct.shared_hint_stream_header_s, %struct.shared_hint_stream_header_s* %SharedHintHeader1368, i32 0, i32 6
  store i16 %conv1367, i16* %LengthNumBits, align 2, !tbaa !347
  %1092 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %1093 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %SharedHintHeader1369 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1093, i32 0, i32 27
  %LengthNumBits1370 = getelementptr inbounds %struct.shared_hint_stream_header_s, %struct.shared_hint_stream_header_s* %SharedHintHeader1369, i32 0, i32 6
  %1094 = load i16, i16* %LengthNumBits1370, align 2, !tbaa !347
  %conv1371 = zext i16 %1094 to i64
  %call1372 = call i32 @write_hint_stream(%struct.pdf_linearisation_s* %1092, i64 %conv1371, i8 signext 16) #7
  store i32 0, i32* %i, align 4, !tbaa !54
  br label %for.cond.1373

for.cond.1373:                                    ; preds = %for.inc.1393, %while.end.1365
  %1095 = load i32, i32* %i, align 4, !tbaa !54
  %1096 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %NumSharedHints1374 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1096, i32 0, i32 28
  %1097 = load i32, i32* %NumSharedHints1374, align 4, !tbaa !314
  %cmp1375 = icmp slt i32 %1095, %1097
  br i1 %cmp1375, label %for.body.1377, label %for.end.1395

for.body.1377:                                    ; preds = %for.cond.1373
  %1098 = bitcast i32* %Length1378 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1098) #2
  %1099 = load i32, i32* %i, align 4, !tbaa !54
  %idxprom1379 = sext i32 %1099 to i64
  %1100 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %SharedHints1380 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1100, i32 0, i32 29
  %1101 = load %struct.share_hint_stream_s*, %struct.share_hint_stream_s** %SharedHints1380, align 8, !tbaa !313
  %arrayidx1381 = getelementptr inbounds %struct.share_hint_stream_s, %struct.share_hint_stream_s* %1101, i64 %idxprom1379
  %ObjectLength1382 = getelementptr inbounds %struct.share_hint_stream_s, %struct.share_hint_stream_s* %arrayidx1381, i32 0, i32 2
  %1102 = load i32, i32* %ObjectLength1382, align 4, !tbaa !327
  %1103 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %SharedHintHeader1383 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1103, i32 0, i32 27
  %LeastObjectLength1384 = getelementptr inbounds %struct.shared_hint_stream_header_s, %struct.shared_hint_stream_header_s* %SharedHintHeader1383, i32 0, i32 4
  %1104 = load i32, i32* %LeastObjectLength1384, align 4, !tbaa !343
  %sub1385 = sub i32 %1102, %1104
  store i32 %sub1385, i32* %Length1378, align 4, !tbaa !54
  %1105 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %1106 = load i32, i32* %Length1378, align 4, !tbaa !54
  %conv1386 = zext i32 %1106 to i64
  %1107 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %SharedHintHeader1387 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1107, i32 0, i32 27
  %LengthNumBits1388 = getelementptr inbounds %struct.shared_hint_stream_header_s, %struct.shared_hint_stream_header_s* %SharedHintHeader1387, i32 0, i32 6
  %1108 = load i16, i16* %LengthNumBits1388, align 2, !tbaa !347
  %conv1389 = trunc i16 %1108 to i8
  %call1390 = call i32 @write_hint_stream(%struct.pdf_linearisation_s* %1105, i64 %conv1386, i8 signext %conv1389) #7
  %1109 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %v_memory1391 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %1109, i32 0, i32 43
  %1110 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory1391, align 8, !tbaa !52
  %1111 = load i32, i32* %i, align 4, !tbaa !54
  %1112 = load i32, i32* %Length1378, align 4, !tbaa !54
  %call1392 = call i32 (%struct.gs_memory_s*, i8*, ...) @errprintf(%struct.gs_memory_s* %1110, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.190, i32 0, i32 0), i32 %1111, i32 %1112) #7
  %1113 = bitcast i32* %Length1378 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %1113) #2
  br label %for.inc.1393

for.inc.1393:                                     ; preds = %for.body.1377
  %1114 = load i32, i32* %i, align 4, !tbaa !54
  %inc1394 = add nsw i32 %1114, 1
  store i32 %inc1394, i32* %i, align 4, !tbaa !54
  br label %for.cond.1373

for.end.1395:                                     ; preds = %for.cond.1373
  store i32 0, i32* %j, align 4, !tbaa !54
  store i32 0, i32* %i, align 4, !tbaa !54
  br label %for.cond.1396

for.cond.1396:                                    ; preds = %for.inc.1405, %for.end.1395
  %1115 = load i32, i32* %i, align 4, !tbaa !54
  %1116 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %NumSharedHints1397 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1116, i32 0, i32 28
  %1117 = load i32, i32* %NumSharedHints1397, align 4, !tbaa !314
  %cmp1398 = icmp slt i32 %1115, %1117
  br i1 %cmp1398, label %for.body.1400, label %for.end.1407

for.body.1400:                                    ; preds = %for.cond.1396
  %1118 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %1119 = load i32, i32* %j, align 4, !tbaa !54
  %conv1401 = sext i32 %1119 to i64
  %call1402 = call i32 @write_hint_stream(%struct.pdf_linearisation_s* %1118, i64 %conv1401, i8 signext 1) #7
  %1120 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %v_memory1403 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %1120, i32 0, i32 43
  %1121 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory1403, align 8, !tbaa !52
  %1122 = load i32, i32* %i, align 4, !tbaa !54
  %call1404 = call i32 (%struct.gs_memory_s*, i8*, ...) @errprintf(%struct.gs_memory_s* %1121, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.191, i32 0, i32 0), i32 %1122) #7
  br label %for.inc.1405

for.inc.1405:                                     ; preds = %for.body.1400
  %1123 = load i32, i32* %i, align 4, !tbaa !54
  %inc1406 = add nsw i32 %1123, 1
  store i32 %inc1406, i32* %i, align 4, !tbaa !54
  br label %for.cond.1396

for.end.1407:                                     ; preds = %for.cond.1396
  store i32 0, i32* %i, align 4, !tbaa !54
  br label %for.cond.1408

for.cond.1408:                                    ; preds = %for.inc.1417, %for.end.1407
  %1124 = load i32, i32* %i, align 4, !tbaa !54
  %1125 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %NumSharedHints1409 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1125, i32 0, i32 28
  %1126 = load i32, i32* %NumSharedHints1409, align 4, !tbaa !314
  %cmp1410 = icmp slt i32 %1124, %1126
  br i1 %cmp1410, label %for.body.1412, label %for.end.1419

for.body.1412:                                    ; preds = %for.cond.1408
  %1127 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %1128 = load i32, i32* %j, align 4, !tbaa !54
  %conv1413 = sext i32 %1128 to i64
  %call1414 = call i32 @write_hint_stream(%struct.pdf_linearisation_s* %1127, i64 %conv1413, i8 signext 1) #7
  %1129 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %v_memory1415 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %1129, i32 0, i32 43
  %1130 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory1415, align 8, !tbaa !52
  %1131 = load i32, i32* %i, align 4, !tbaa !54
  %call1416 = call i32 (%struct.gs_memory_s*, i8*, ...) @errprintf(%struct.gs_memory_s* %1130, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.192, i32 0, i32 0), i32 %1131) #7
  br label %for.inc.1417

for.inc.1417:                                     ; preds = %for.body.1412
  %1132 = load i32, i32* %i, align 4, !tbaa !54
  %inc1418 = add nsw i32 %1132, 1
  store i32 %inc1418, i32* %i, align 4, !tbaa !54
  br label %for.cond.1408

for.end.1419:                                     ; preds = %for.cond.1408
  %1133 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %call1420 = call i32 @flush_hint_stream(%struct.pdf_linearisation_s* %1133) #7
  %1134 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %sfile1421 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1134, i32 0, i32 0
  %1135 = load %struct._IO_FILE*, %struct._IO_FILE** %sfile1421, align 8, !tbaa !290
  %call1422 = call i64 @gp_ftell_64(%struct._IO_FILE* %1135) #7
  %1136 = load i64, i64* %HintStreamStart, align 8, !tbaa !107
  %sub1423 = sub nsw i64 %call1422, %1136
  store i64 %sub1423, i64* %HintLength, align 8, !tbaa !107
  %arraydecay1424 = getelementptr inbounds [1024 x i8], [1024 x i8]* %LDict, i32 0, i32 0
  %call1425 = call i32 (i8*, i8*, ...) @gs_sprintf(i8* %arraydecay1424, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.193, i32 0, i32 0)) #7
  %arraydecay1426 = getelementptr inbounds [1024 x i8], [1024 x i8]* %LDict, i32 0, i32 0
  %arraydecay1427 = getelementptr inbounds [1024 x i8], [1024 x i8]* %LDict, i32 0, i32 0
  %call1428 = call i64 @strlen(i8* %arraydecay1427) #9
  %1137 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %sfile1429 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1137, i32 0, i32 0
  %1138 = load %struct._IO_FILE*, %struct._IO_FILE** %sfile1429, align 8, !tbaa !290
  %call1430 = call i64 @fwrite(i8* %arraydecay1426, i64 %call1428, i64 1, %struct._IO_FILE* %1138) #7
  %1139 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %sfile1431 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1139, i32 0, i32 0
  %1140 = load %struct._IO_FILE*, %struct._IO_FILE** %sfile1431, align 8, !tbaa !290
  %call1432 = call i64 @gp_ftell_64(%struct._IO_FILE* %1140) #7
  %1141 = load i32, i32* %HintStreamObj, align 4, !tbaa !54
  %idxprom1433 = sext i32 %1141 to i64
  %1142 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsage1434 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %1142, i32 0, i32 252
  %1143 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %ResourceUsage1434, align 8, !tbaa !173
  %arrayidx1435 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %1143, i64 %idxprom1433
  %LinearisedOffset1436 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %arrayidx1435, i32 0, i32 5
  %1144 = load i64, i64* %LinearisedOffset1436, align 8, !tbaa !304
  %sub1437 = sub nsw i64 %call1432, %1144
  store i64 %sub1437, i64* %HintStreamLen, align 8, !tbaa !107
  br label %do.body

do.body:                                          ; preds = %do.cond, %for.end.1419
  %arraydecay1438 = getelementptr inbounds [1024 x i8], [1024 x i8]* %Buffer, i32 0, i32 0
  %1145 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %Lin_File1439 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1145, i32 0, i32 1
  %file1440 = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %Lin_File1439, i32 0, i32 1
  %1146 = load %struct._IO_FILE*, %struct._IO_FILE** %file1440, align 8, !tbaa !302
  %call1441 = call i64 @fread(i8* %arraydecay1438, i64 1, i64 1024, %struct._IO_FILE* %1146) #7
  %conv1442 = trunc i64 %call1441 to i32
  store i32 %conv1442, i32* %code, align 4, !tbaa !54
  %1147 = load i32, i32* %code, align 4, !tbaa !54
  %cmp1443 = icmp sgt i32 %1147, 0
  br i1 %cmp1443, label %if.then.1445, label %if.end.1450

if.then.1445:                                     ; preds = %do.body
  %arraydecay1446 = getelementptr inbounds [1024 x i8], [1024 x i8]* %Buffer, i32 0, i32 0
  %1148 = load i32, i32* %code, align 4, !tbaa !54
  %conv1447 = sext i32 %1148 to i64
  %1149 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %sfile1448 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1149, i32 0, i32 0
  %1150 = load %struct._IO_FILE*, %struct._IO_FILE** %sfile1448, align 8, !tbaa !290
  %call1449 = call i64 @fwrite(i8* %arraydecay1446, i64 1, i64 %conv1447, %struct._IO_FILE* %1150) #7
  br label %if.end.1450

if.end.1450:                                      ; preds = %if.then.1445, %do.body
  br label %do.cond

do.cond:                                          ; preds = %if.end.1450
  %1151 = load i32, i32* %code, align 4, !tbaa !54
  %cmp1451 = icmp sgt i32 %1151, 0
  br i1 %cmp1451, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  %1152 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %sfile1453 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1152, i32 0, i32 0
  %1153 = load %struct._IO_FILE*, %struct._IO_FILE** %sfile1453, align 8, !tbaa !290
  %call1454 = call i64 @gp_ftell_64(%struct._IO_FILE* %1153) #7
  store i64 %call1454, i64* %mainxref, align 8, !tbaa !107
  %1154 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %MainFileEnd1455 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1154, i32 0, i32 15
  %1155 = load i64, i64* %MainFileEnd1455, align 8, !tbaa !291
  %cmp1456 = icmp slt i64 %1155, 4096
  br i1 %cmp1456, label %if.then.1458, label %if.else.1469

if.then.1458:                                     ; preds = %do.end
  %1156 = load i64, i64* %mainxref, align 8, !tbaa !107
  %arraydecay1459 = getelementptr inbounds [1024 x i8], [1024 x i8]* %LDict, i32 0, i32 0
  %call1460 = call i64 @strlen(i8* %arraydecay1459) #9
  %add1461 = add i64 %1156, %call1460
  %arraydecay1462 = getelementptr inbounds [32 x i8], [32 x i8]* %Header, i32 0, i32 0
  %call1463 = call i64 @strlen(i8* %arraydecay1462) #9
  %add1464 = add i64 %add1461, %call1463
  %1157 = load i32, i32* %LDictObj, align 4, !tbaa !54
  %mul1465 = mul nsw i32 %1157, 20
  %conv1466 = sext i32 %mul1465 to i64
  %add1467 = add i64 %add1464, %conv1466
  %sub1468 = sub i64 4096, %add1467
  store i64 %sub1468, i64* %Length, align 8, !tbaa !107
  br label %if.end.1481

if.else.1469:                                     ; preds = %do.end
  %1158 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %MainFileEnd1470 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1158, i32 0, i32 15
  %1159 = load i64, i64* %MainFileEnd1470, align 8, !tbaa !291
  %1160 = load i64, i64* %mainxref, align 8, !tbaa !107
  %arraydecay1471 = getelementptr inbounds [1024 x i8], [1024 x i8]* %LDict, i32 0, i32 0
  %call1472 = call i64 @strlen(i8* %arraydecay1471) #9
  %add1473 = add i64 %1160, %call1472
  %arraydecay1474 = getelementptr inbounds [32 x i8], [32 x i8]* %Header, i32 0, i32 0
  %call1475 = call i64 @strlen(i8* %arraydecay1474) #9
  %add1476 = add i64 %add1473, %call1475
  %1161 = load i32, i32* %LDictObj, align 4, !tbaa !54
  %mul1477 = mul nsw i32 %1161, 20
  %conv1478 = sext i32 %mul1477 to i64
  %add1479 = add i64 %add1476, %conv1478
  %sub1480 = sub i64 %1159, %add1479
  store i64 %sub1480, i64* %Length, align 8, !tbaa !107
  br label %if.end.1481

if.end.1481:                                      ; preds = %if.else.1469, %if.then.1458
  store i8 32, i8* %Pad, align 1, !tbaa !147
  br label %while.cond.1482

while.cond.1482:                                  ; preds = %while.body.1485, %if.end.1481
  %1162 = load i64, i64* %Length, align 8, !tbaa !107
  %cmp1483 = icmp sgt i64 %1162, 0
  br i1 %cmp1483, label %while.body.1485, label %while.end.1488

while.body.1485:                                  ; preds = %while.cond.1482
  %1163 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %sfile1486 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1163, i32 0, i32 0
  %1164 = load %struct._IO_FILE*, %struct._IO_FILE** %sfile1486, align 8, !tbaa !290
  %call1487 = call i64 @fwrite(i8* %Pad, i64 1, i64 1, %struct._IO_FILE* %1164) #7
  %1165 = load i64, i64* %Length, align 8, !tbaa !107
  %dec = add nsw i64 %1165, -1
  store i64 %dec, i64* %Length, align 8, !tbaa !107
  br label %while.cond.1482

while.end.1488:                                   ; preds = %while.cond.1482
  %1166 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %sfile1489 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1166, i32 0, i32 0
  %1167 = load %struct._IO_FILE*, %struct._IO_FILE** %sfile1489, align 8, !tbaa !290
  %call1490 = call i64 @gp_ftell_64(%struct._IO_FILE* %1167) #7
  store i64 %call1490, i64* %mainxref, align 8, !tbaa !107
  %arraydecay1491 = getelementptr inbounds [32 x i8], [32 x i8]* %Header, i32 0, i32 0
  %1168 = load i32, i32* %LDictObj, align 4, !tbaa !54
  %call1492 = call i32 (i8*, i8*, ...) @gs_sprintf(i8* %arraydecay1491, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.194, i32 0, i32 0), i32 %1168) #7
  %arraydecay1493 = getelementptr inbounds [32 x i8], [32 x i8]* %Header, i32 0, i32 0
  %arraydecay1494 = getelementptr inbounds [32 x i8], [32 x i8]* %Header, i32 0, i32 0
  %call1495 = call i64 @strlen(i8* %arraydecay1494) #9
  %1169 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %sfile1496 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1169, i32 0, i32 0
  %1170 = load %struct._IO_FILE*, %struct._IO_FILE** %sfile1496, align 8, !tbaa !290
  %call1497 = call i64 @fwrite(i8* %arraydecay1493, i64 %call1495, i64 1, %struct._IO_FILE* %1170) #7
  %1171 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %sfile1498 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1171, i32 0, i32 0
  %1172 = load %struct._IO_FILE*, %struct._IO_FILE** %sfile1498, align 8, !tbaa !290
  %call1499 = call i64 @gp_ftell_64(%struct._IO_FILE* %1172) #7
  %sub1500 = sub nsw i64 %call1499, 1
  %1173 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %T1501 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1173, i32 0, i32 22
  store i64 %sub1500, i64* %T1501, align 8, !tbaa !348
  %arraydecay1502 = getelementptr inbounds [32 x i8], [32 x i8]* %Header, i32 0, i32 0
  %call1503 = call i32 (i8*, i8*, ...) @gs_sprintf(i8* %arraydecay1502, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.195, i32 0, i32 0)) #7
  %arraydecay1504 = getelementptr inbounds [32 x i8], [32 x i8]* %Header, i32 0, i32 0
  %arraydecay1505 = getelementptr inbounds [32 x i8], [32 x i8]* %Header, i32 0, i32 0
  %call1506 = call i64 @strlen(i8* %arraydecay1505) #9
  %1174 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %sfile1507 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1174, i32 0, i32 0
  %1175 = load %struct._IO_FILE*, %struct._IO_FILE** %sfile1507, align 8, !tbaa !290
  %call1508 = call i64 @fwrite(i8* %arraydecay1504, i64 %call1506, i64 1, %struct._IO_FILE* %1175) #7
  store i32 1, i32* %i, align 4, !tbaa !54
  br label %for.cond.1509

for.cond.1509:                                    ; preds = %for.inc.1539, %while.end.1488
  %1176 = load i32, i32* %i, align 4, !tbaa !54
  %1177 = load i32, i32* %LDictObj, align 4, !tbaa !54
  %cmp1510 = icmp slt i32 %1176, %1177
  br i1 %cmp1510, label %for.body.1512, label %for.end.1541

for.body.1512:                                    ; preds = %for.cond.1509
  store i32 0, i32* %j, align 4, !tbaa !54
  br label %for.cond.1513

for.cond.1513:                                    ; preds = %for.inc.1536, %for.body.1512
  %1178 = load i32, i32* %j, align 4, !tbaa !54
  %1179 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsageSize1514 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %1179, i32 0, i32 253
  %1180 = load i32, i32* %ResourceUsageSize1514, align 4, !tbaa !172
  %cmp1515 = icmp slt i32 %1178, %1180
  br i1 %cmp1515, label %for.body.1517, label %for.end.1538

for.body.1517:                                    ; preds = %for.cond.1513
  %1181 = load i32, i32* %j, align 4, !tbaa !54
  %idxprom1518 = sext i32 %1181 to i64
  %1182 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsage1519 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %1182, i32 0, i32 252
  %1183 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %ResourceUsage1519, align 8, !tbaa !173
  %arrayidx1520 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %1183, i64 %idxprom1518
  %NewObjectNumber1521 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %arrayidx1520, i32 0, i32 3
  %1184 = load i32, i32* %NewObjectNumber1521, align 4, !tbaa !301
  %1185 = load i32, i32* %i, align 4, !tbaa !54
  %cmp1522 = icmp eq i32 %1184, %1185
  br i1 %cmp1522, label %if.then.1524, label %if.end.1535

if.then.1524:                                     ; preds = %for.body.1517
  %arraydecay1525 = getelementptr inbounds [32 x i8], [32 x i8]* %Header, i32 0, i32 0
  %1186 = load i32, i32* %j, align 4, !tbaa !54
  %idxprom1526 = sext i32 %1186 to i64
  %1187 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsage1527 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %1187, i32 0, i32 252
  %1188 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %ResourceUsage1527, align 8, !tbaa !173
  %arrayidx1528 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %1188, i64 %idxprom1526
  %LinearisedOffset1529 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %arrayidx1528, i32 0, i32 5
  %1189 = load i64, i64* %LinearisedOffset1529, align 8, !tbaa !304
  %1190 = load i64, i64* %HintStreamLen, align 8, !tbaa !107
  %add1530 = add nsw i64 %1189, %1190
  %call1531 = call i32 (i8*, i8*, ...) @gs_sprintf(i8* %arraydecay1525, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.165, i32 0, i32 0), i64 %add1530) #7
  %arraydecay1532 = getelementptr inbounds [32 x i8], [32 x i8]* %Header, i32 0, i32 0
  %1191 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %sfile1533 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1191, i32 0, i32 0
  %1192 = load %struct._IO_FILE*, %struct._IO_FILE** %sfile1533, align 8, !tbaa !290
  %call1534 = call i64 @fwrite(i8* %arraydecay1532, i64 20, i64 1, %struct._IO_FILE* %1192) #7
  br label %if.end.1535

if.end.1535:                                      ; preds = %if.then.1524, %for.body.1517
  br label %for.inc.1536

for.inc.1536:                                     ; preds = %if.end.1535
  %1193 = load i32, i32* %j, align 4, !tbaa !54
  %inc1537 = add nsw i32 %1193, 1
  store i32 %inc1537, i32* %j, align 4, !tbaa !54
  br label %for.cond.1513

for.end.1538:                                     ; preds = %for.cond.1513
  br label %for.inc.1539

for.inc.1539:                                     ; preds = %for.end.1538
  %1194 = load i32, i32* %i, align 4, !tbaa !54
  %inc1540 = add nsw i32 %1194, 1
  store i32 %inc1540, i32* %i, align 4, !tbaa !54
  br label %for.cond.1509

for.end.1541:                                     ; preds = %for.cond.1509
  %arraydecay1542 = getelementptr inbounds [1024 x i8], [1024 x i8]* %LDict, i32 0, i32 0
  %1195 = load i32, i32* %LDictObj, align 4, !tbaa !54
  %1196 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %FirstxrefOffset1543 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1196, i32 0, i32 18
  %1197 = load i64, i64* %FirstxrefOffset1543, align 8, !tbaa !306
  %call1544 = call i32 (i8*, i8*, ...) @gs_sprintf(i8* %arraydecay1542, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.196, i32 0, i32 0), i32 %1195, i64 %1197) #7
  %arraydecay1545 = getelementptr inbounds [1024 x i8], [1024 x i8]* %LDict, i32 0, i32 0
  %arraydecay1546 = getelementptr inbounds [1024 x i8], [1024 x i8]* %LDict, i32 0, i32 0
  %call1547 = call i64 @strlen(i8* %arraydecay1546) #9
  %1198 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %sfile1548 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1198, i32 0, i32 0
  %1199 = load %struct._IO_FILE*, %struct._IO_FILE** %sfile1548, align 8, !tbaa !290
  %call1549 = call i64 @fwrite(i8* %arraydecay1545, i64 %call1547, i64 1, %struct._IO_FILE* %1199) #7
  %1200 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %sfile1550 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1200, i32 0, i32 0
  %1201 = load %struct._IO_FILE*, %struct._IO_FILE** %sfile1550, align 8, !tbaa !290
  %call1551 = call i64 @gp_ftell_64(%struct._IO_FILE* %1201) #7
  %1202 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %FileLength = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1202, i32 0, i32 21
  store i64 %call1551, i64* %FileLength, align 8, !tbaa !349
  %1203 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %sfile1552 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1203, i32 0, i32 0
  %1204 = load %struct._IO_FILE*, %struct._IO_FILE** %sfile1552, align 8, !tbaa !290
  %1205 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %LDictOffset1553 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1205, i32 0, i32 20
  %1206 = load i64, i64* %LDictOffset1553, align 8, !tbaa !305
  %call1554 = call i32 @gp_fseek_64(%struct._IO_FILE* %1204, i64 %1206, i32 0) #7
  %arraydecay1555 = getelementptr inbounds [1024 x i8], [1024 x i8]* %LDict, i32 0, i32 0
  %1207 = load i32, i32* %LDictObj, align 4, !tbaa !54
  %1208 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %FileLength1556 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1208, i32 0, i32 21
  %1209 = load i64, i64* %FileLength1556, align 8, !tbaa !349
  %call1557 = call i32 (i8*, i8*, ...) @gs_sprintf(i8* %arraydecay1555, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.197, i32 0, i32 0), i32 %1207, i64 %1209) #7
  %arraydecay1558 = getelementptr inbounds [1024 x i8], [1024 x i8]* %LDict, i32 0, i32 0
  %arraydecay1559 = getelementptr inbounds [1024 x i8], [1024 x i8]* %LDict, i32 0, i32 0
  %call1560 = call i64 @strlen(i8* %arraydecay1559) #9
  %1210 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %sfile1561 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1210, i32 0, i32 0
  %1211 = load %struct._IO_FILE*, %struct._IO_FILE** %sfile1561, align 8, !tbaa !290
  %call1562 = call i64 @fwrite(i8* %arraydecay1558, i64 %call1560, i64 1, %struct._IO_FILE* %1211) #7
  %arraydecay1563 = getelementptr inbounds [1024 x i8], [1024 x i8]* %LDict, i32 0, i32 0
  %1212 = load i32, i32* %HintStreamObj, align 4, !tbaa !54
  %idxprom1564 = sext i32 %1212 to i64
  %1213 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsage1565 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %1213, i32 0, i32 252
  %1214 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %ResourceUsage1565, align 8, !tbaa !173
  %arrayidx1566 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %1214, i64 %idxprom1564
  %LinearisedOffset1567 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %arrayidx1566, i32 0, i32 5
  %1215 = load i64, i64* %LinearisedOffset1567, align 8, !tbaa !304
  %call1568 = call i32 (i8*, i8*, ...) @gs_sprintf(i8* %arraydecay1563, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.198, i32 0, i32 0), i64 %1215) #7
  %arraydecay1569 = getelementptr inbounds [1024 x i8], [1024 x i8]* %LDict, i32 0, i32 0
  %arraydecay1570 = getelementptr inbounds [1024 x i8], [1024 x i8]* %LDict, i32 0, i32 0
  %call1571 = call i64 @strlen(i8* %arraydecay1570) #9
  %1216 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %sfile1572 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1216, i32 0, i32 0
  %1217 = load %struct._IO_FILE*, %struct._IO_FILE** %sfile1572, align 8, !tbaa !290
  %call1573 = call i64 @fwrite(i8* %arraydecay1569, i64 %call1571, i64 1, %struct._IO_FILE* %1217) #7
  %arraydecay1574 = getelementptr inbounds [1024 x i8], [1024 x i8]* %LDict, i32 0, i32 0
  %1218 = load i64, i64* %HintStreamLen, align 8, !tbaa !107
  %call1575 = call i32 (i8*, i8*, ...) @gs_sprintf(i8* %arraydecay1574, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.199, i32 0, i32 0), i64 %1218) #7
  %arraydecay1576 = getelementptr inbounds [1024 x i8], [1024 x i8]* %LDict, i32 0, i32 0
  %arraydecay1577 = getelementptr inbounds [1024 x i8], [1024 x i8]* %LDict, i32 0, i32 0
  %call1578 = call i64 @strlen(i8* %arraydecay1577) #9
  %1219 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %sfile1579 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1219, i32 0, i32 0
  %1220 = load %struct._IO_FILE*, %struct._IO_FILE** %sfile1579, align 8, !tbaa !290
  %call1580 = call i64 @fwrite(i8* %arraydecay1576, i64 %call1578, i64 1, %struct._IO_FILE* %1220) #7
  %arraydecay1581 = getelementptr inbounds [1024 x i8], [1024 x i8]* %LDict, i32 0, i32 0
  %1221 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %pages1582 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %1221, i32 0, i32 162
  %1222 = load %struct.pdf_page_s*, %struct.pdf_page_s** %pages1582, align 8, !tbaa !77
  %arrayidx1583 = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %1222, i64 0
  %Page1584 = getelementptr inbounds %struct.pdf_page_s, %struct.pdf_page_s* %arrayidx1583, i32 0, i32 0
  %1223 = load %struct.cos_dict_s*, %struct.cos_dict_s** %Page1584, align 8, !tbaa !125
  %id1585 = getelementptr inbounds %struct.cos_dict_s, %struct.cos_dict_s* %1223, i32 0, i32 1
  %1224 = load i64, i64* %id1585, align 8, !tbaa !109
  %1225 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsage1586 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %1225, i32 0, i32 252
  %1226 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %ResourceUsage1586, align 8, !tbaa !173
  %arrayidx1587 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %1226, i64 %1224
  %NewObjectNumber1588 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %arrayidx1587, i32 0, i32 3
  %1227 = load i32, i32* %NewObjectNumber1588, align 4, !tbaa !301
  %1228 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %E1589 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1228, i32 0, i32 23
  %1229 = load i64, i64* %E1589, align 8, !tbaa !308
  %call1590 = call i32 (i8*, i8*, ...) @gs_sprintf(i8* %arraydecay1581, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.200, i32 0, i32 0), i32 %1227, i64 %1229) #7
  %arraydecay1591 = getelementptr inbounds [1024 x i8], [1024 x i8]* %LDict, i32 0, i32 0
  %arraydecay1592 = getelementptr inbounds [1024 x i8], [1024 x i8]* %LDict, i32 0, i32 0
  %call1593 = call i64 @strlen(i8* %arraydecay1592) #9
  %1230 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %sfile1594 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1230, i32 0, i32 0
  %1231 = load %struct._IO_FILE*, %struct._IO_FILE** %sfile1594, align 8, !tbaa !290
  %call1595 = call i64 @fwrite(i8* %arraydecay1591, i64 %call1593, i64 1, %struct._IO_FILE* %1231) #7
  %arraydecay1596 = getelementptr inbounds [1024 x i8], [1024 x i8]* %LDict, i32 0, i32 0
  %1232 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %next_page1597 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %1232, i32 0, i32 153
  %1233 = load i32, i32* %next_page1597, align 4, !tbaa !72
  %1234 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %T1598 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1234, i32 0, i32 22
  %1235 = load i64, i64* %T1598, align 8, !tbaa !348
  %call1599 = call i32 (i8*, i8*, ...) @gs_sprintf(i8* %arraydecay1596, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.201, i32 0, i32 0), i32 %1233, i64 %1235) #7
  %arraydecay1600 = getelementptr inbounds [1024 x i8], [1024 x i8]* %LDict, i32 0, i32 0
  %arraydecay1601 = getelementptr inbounds [1024 x i8], [1024 x i8]* %LDict, i32 0, i32 0
  %call1602 = call i64 @strlen(i8* %arraydecay1601) #9
  %1236 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %sfile1603 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1236, i32 0, i32 0
  %1237 = load %struct._IO_FILE*, %struct._IO_FILE** %sfile1603, align 8, !tbaa !290
  %call1604 = call i64 @fwrite(i8* %arraydecay1600, i64 %call1602, i64 1, %struct._IO_FILE* %1237) #7
  %1238 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %sfile1605 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1238, i32 0, i32 0
  %1239 = load %struct._IO_FILE*, %struct._IO_FILE** %sfile1605, align 8, !tbaa !290
  %1240 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %FirstxrefOffset1606 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1240, i32 0, i32 18
  %1241 = load i64, i64* %FirstxrefOffset1606, align 8, !tbaa !306
  %call1607 = call i32 @gp_fseek_64(%struct._IO_FILE* %1239, i64 %1241, i32 0) #7
  %arraydecay1608 = getelementptr inbounds [32 x i8], [32 x i8]* %Header, i32 0, i32 0
  %1242 = load i32, i32* %LDictObj, align 4, !tbaa !54
  %1243 = load i32, i32* %Part1To6, align 4, !tbaa !54
  %1244 = load i32, i32* %LDictObj, align 4, !tbaa !54
  %sub1609 = sub nsw i32 %1243, %1244
  %add1610 = add nsw i32 %sub1609, 1
  %call1611 = call i32 (i8*, i8*, ...) @gs_sprintf(i8* %arraydecay1608, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.169, i32 0, i32 0), i32 %1242, i32 %add1610) #7
  %arraydecay1612 = getelementptr inbounds [32 x i8], [32 x i8]* %Header, i32 0, i32 0
  %arraydecay1613 = getelementptr inbounds [32 x i8], [32 x i8]* %Header, i32 0, i32 0
  %call1614 = call i64 @strlen(i8* %arraydecay1613) #9
  %1245 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %sfile1615 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1245, i32 0, i32 0
  %1246 = load %struct._IO_FILE*, %struct._IO_FILE** %sfile1615, align 8, !tbaa !290
  %call1616 = call i64 @fwrite(i8* %arraydecay1612, i64 %call1614, i64 1, %struct._IO_FILE* %1246) #7
  %1247 = load i32, i32* %LDictObj, align 4, !tbaa !54
  store i32 %1247, i32* %i, align 4, !tbaa !54
  br label %for.cond.1617

for.cond.1617:                                    ; preds = %for.inc.1649, %for.end.1541
  %1248 = load i32, i32* %i, align 4, !tbaa !54
  %conv1618 = sext i32 %1248 to i64
  %1249 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %LastResource1619 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1249, i32 0, i32 14
  %1250 = load i64, i64* %LastResource1619, align 8, !tbaa !164
  %add1620 = add nsw i64 %1250, 2
  %cmp1621 = icmp sle i64 %conv1618, %add1620
  br i1 %cmp1621, label %for.body.1623, label %for.end.1651

for.body.1623:                                    ; preds = %for.cond.1617
  store i32 0, i32* %j, align 4, !tbaa !54
  br label %for.cond.1624

for.cond.1624:                                    ; preds = %for.inc.1646, %for.body.1623
  %1251 = load i32, i32* %j, align 4, !tbaa !54
  %1252 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsageSize1625 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %1252, i32 0, i32 253
  %1253 = load i32, i32* %ResourceUsageSize1625, align 4, !tbaa !172
  %cmp1626 = icmp slt i32 %1251, %1253
  br i1 %cmp1626, label %for.body.1628, label %for.end.1648

for.body.1628:                                    ; preds = %for.cond.1624
  %1254 = load i32, i32* %j, align 4, !tbaa !54
  %idxprom1629 = sext i32 %1254 to i64
  %1255 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsage1630 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %1255, i32 0, i32 252
  %1256 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %ResourceUsage1630, align 8, !tbaa !173
  %arrayidx1631 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %1256, i64 %idxprom1629
  %NewObjectNumber1632 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %arrayidx1631, i32 0, i32 3
  %1257 = load i32, i32* %NewObjectNumber1632, align 4, !tbaa !301
  %1258 = load i32, i32* %i, align 4, !tbaa !54
  %cmp1633 = icmp eq i32 %1257, %1258
  br i1 %cmp1633, label %if.then.1635, label %if.end.1645

if.then.1635:                                     ; preds = %for.body.1628
  %arraydecay1636 = getelementptr inbounds [32 x i8], [32 x i8]* %Header, i32 0, i32 0
  %1259 = load i32, i32* %j, align 4, !tbaa !54
  %idxprom1637 = sext i32 %1259 to i64
  %1260 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsage1638 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %1260, i32 0, i32 252
  %1261 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %ResourceUsage1638, align 8, !tbaa !173
  %arrayidx1639 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %1261, i64 %idxprom1637
  %LinearisedOffset1640 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %arrayidx1639, i32 0, i32 5
  %1262 = load i64, i64* %LinearisedOffset1640, align 8, !tbaa !304
  %call1641 = call i32 (i8*, i8*, ...) @gs_sprintf(i8* %arraydecay1636, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.165, i32 0, i32 0), i64 %1262) #7
  %arraydecay1642 = getelementptr inbounds [32 x i8], [32 x i8]* %Header, i32 0, i32 0
  %1263 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %sfile1643 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1263, i32 0, i32 0
  %1264 = load %struct._IO_FILE*, %struct._IO_FILE** %sfile1643, align 8, !tbaa !290
  %call1644 = call i64 @fwrite(i8* %arraydecay1642, i64 20, i64 1, %struct._IO_FILE* %1264) #7
  br label %if.end.1645

if.end.1645:                                      ; preds = %if.then.1635, %for.body.1628
  br label %for.inc.1646

for.inc.1646:                                     ; preds = %if.end.1645
  %1265 = load i32, i32* %j, align 4, !tbaa !54
  %inc1647 = add nsw i32 %1265, 1
  store i32 %inc1647, i32* %j, align 4, !tbaa !54
  br label %for.cond.1624

for.end.1648:                                     ; preds = %for.cond.1624
  br label %for.inc.1649

for.inc.1649:                                     ; preds = %for.end.1648
  %1266 = load i32, i32* %i, align 4, !tbaa !54
  %inc1650 = add nsw i32 %1266, 1
  store i32 %inc1650, i32* %i, align 4, !tbaa !54
  br label %for.cond.1617

for.end.1651:                                     ; preds = %for.cond.1617
  %1267 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %sfile1652 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1267, i32 0, i32 0
  %1268 = load %struct._IO_FILE*, %struct._IO_FILE** %sfile1652, align 8, !tbaa !290
  %1269 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %FirsttrailerOffset1653 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1269, i32 0, i32 19
  %1270 = load i64, i64* %FirsttrailerOffset1653, align 8, !tbaa !307
  %call1654 = call i32 @gp_fseek_64(%struct._IO_FILE* %1268, i64 %1270, i32 0) #7
  store i32 %call1654, i32* %code, align 4, !tbaa !54
  %arraydecay1655 = getelementptr inbounds [1024 x i8], [1024 x i8]* %LDict, i32 0, i32 0
  %1271 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %LastResource1656 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1271, i32 0, i32 14
  %1272 = load i64, i64* %LastResource1656, align 8, !tbaa !164
  %add1657 = add nsw i64 %1272, 3
  %1273 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %Info_id1658 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1273, i32 0, i32 6
  %1274 = load i64, i64* %Info_id1658, align 8, !tbaa !115
  %1275 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsage1659 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %1275, i32 0, i32 252
  %1276 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %ResourceUsage1659, align 8, !tbaa !173
  %arrayidx1660 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %1276, i64 %1274
  %NewObjectNumber1661 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %arrayidx1660, i32 0, i32 3
  %1277 = load i32, i32* %NewObjectNumber1661, align 4, !tbaa !301
  %1278 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %Catalog_id1662 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1278, i32 0, i32 5
  %1279 = load i64, i64* %Catalog_id1662, align 8, !tbaa !120
  %1280 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsage1663 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %1280, i32 0, i32 252
  %1281 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %ResourceUsage1663, align 8, !tbaa !173
  %arrayidx1664 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %1281, i64 %1279
  %NewObjectNumber1665 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %arrayidx1664, i32 0, i32 3
  %1282 = load i32, i32* %NewObjectNumber1665, align 4, !tbaa !301
  %arraydecay1666 = getelementptr inbounds [35 x i8], [35 x i8]* %fileID, i32 0, i32 0
  %arraydecay1667 = getelementptr inbounds [35 x i8], [35 x i8]* %fileID, i32 0, i32 0
  %1283 = load i64, i64* %mainxref, align 8, !tbaa !107
  %call1668 = call i32 (i8*, i8*, ...) @gs_sprintf(i8* %arraydecay1655, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @.str.202, i32 0, i32 0), i64 %add1657, i32 %1277, i32 %1282, i8* %arraydecay1666, i8* %arraydecay1667, i64 %1283) #7
  %arraydecay1669 = getelementptr inbounds [1024 x i8], [1024 x i8]* %LDict, i32 0, i32 0
  %arraydecay1670 = getelementptr inbounds [1024 x i8], [1024 x i8]* %LDict, i32 0, i32 0
  %call1671 = call i64 @strlen(i8* %arraydecay1670) #9
  %1284 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %sfile1672 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1284, i32 0, i32 0
  %1285 = load %struct._IO_FILE*, %struct._IO_FILE** %sfile1672, align 8, !tbaa !290
  %call1673 = call i64 @fwrite(i8* %arraydecay1669, i64 %call1671, i64 1, %struct._IO_FILE* %1285) #7
  %1286 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %sfile1674 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1286, i32 0, i32 0
  %1287 = load %struct._IO_FILE*, %struct._IO_FILE** %sfile1674, align 8, !tbaa !290
  %1288 = load i32, i32* %HintStreamObj, align 4, !tbaa !54
  %idxprom1675 = sext i32 %1288 to i64
  %1289 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsage1676 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %1289, i32 0, i32 252
  %1290 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %ResourceUsage1676, align 8, !tbaa !173
  %arrayidx1677 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %1290, i64 %idxprom1675
  %LinearisedOffset1678 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %arrayidx1677, i32 0, i32 5
  %1291 = load i64, i64* %LinearisedOffset1678, align 8, !tbaa !304
  %call1679 = call i32 @gp_fseek_64(%struct._IO_FILE* %1287, i64 %1291, i32 0) #7
  store i32 %call1679, i32* %code, align 4, !tbaa !54
  %arraydecay1680 = getelementptr inbounds [1024 x i8], [1024 x i8]* %LDict, i32 0, i32 0
  %1292 = load i32, i32* %HintStreamObj, align 4, !tbaa !54
  %1293 = load i64, i64* %HintLength, align 8, !tbaa !107
  %call1681 = call i32 (i8*, i8*, ...) @gs_sprintf(i8* %arraydecay1680, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.203, i32 0, i32 0), i32 %1292, i64 %1293) #7
  %arraydecay1682 = getelementptr inbounds [1024 x i8], [1024 x i8]* %LDict, i32 0, i32 0
  %arraydecay1683 = getelementptr inbounds [1024 x i8], [1024 x i8]* %LDict, i32 0, i32 0
  %call1684 = call i64 @strlen(i8* %arraydecay1683) #9
  %1294 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %sfile1685 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1294, i32 0, i32 0
  %1295 = load %struct._IO_FILE*, %struct._IO_FILE** %sfile1685, align 8, !tbaa !290
  %call1686 = call i64 @fwrite(i8* %arraydecay1682, i64 %call1684, i64 1, %struct._IO_FILE* %1295) #7
  %arraydecay1687 = getelementptr inbounds [1024 x i8], [1024 x i8]* %LDict, i32 0, i32 0
  %1296 = load i64, i64* %SharedHintOffset, align 8, !tbaa !107
  %call1688 = call i32 (i8*, i8*, ...) @gs_sprintf(i8* %arraydecay1687, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.204, i32 0, i32 0), i64 %1296) #7
  %arraydecay1689 = getelementptr inbounds [1024 x i8], [1024 x i8]* %LDict, i32 0, i32 0
  %arraydecay1690 = getelementptr inbounds [1024 x i8], [1024 x i8]* %LDict, i32 0, i32 0
  %call1691 = call i64 @strlen(i8* %arraydecay1690) #9
  %1297 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %sfile1692 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1297, i32 0, i32 0
  %1298 = load %struct._IO_FILE*, %struct._IO_FILE** %sfile1692, align 8, !tbaa !290
  %call1693 = call i64 @fwrite(i8* %arraydecay1689, i64 %call1691, i64 1, %struct._IO_FILE* %1298) #7
  br label %error

error:                                            ; preds = %for.end.1651, %if.then.536, %if.then.508, %if.then.461, %if.then.419, %if.then.394, %if.then.387
  %1299 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %1300 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %Lin_File1694 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1300, i32 0, i32 1
  %1301 = load i32, i32* %code, align 4, !tbaa !54
  %call1695 = call i32 @pdf_close_temp_file(%struct.gx_device_pdf_s* %1299, %struct.pdf_temp_file_s* %Lin_File1694, i32 %1301) #7
  store i32 0, i32* %i, align 4, !tbaa !54
  br label %for.cond.1696

for.cond.1696:                                    ; preds = %for.inc.1714, %error
  %1302 = load i32, i32* %i, align 4, !tbaa !54
  %1303 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %next_page1697 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %1303, i32 0, i32 153
  %1304 = load i32, i32* %next_page1697, align 4, !tbaa !72
  %cmp1698 = icmp slt i32 %1302, %1304
  br i1 %cmp1698, label %for.body.1700, label %for.end.1716

for.body.1700:                                    ; preds = %for.cond.1696
  %1305 = bitcast %struct.page_hint_stream_s** %pagehint1701 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1305) #2
  %1306 = load i32, i32* %i, align 4, !tbaa !54
  %idxprom1702 = sext i32 %1306 to i64
  %1307 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %PageHints1703 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1307, i32 0, i32 26
  %1308 = load %struct.page_hint_stream_s*, %struct.page_hint_stream_s** %PageHints1703, align 8, !tbaa !311
  %arrayidx1704 = getelementptr inbounds %struct.page_hint_stream_s, %struct.page_hint_stream_s* %1308, i64 %idxprom1702
  store %struct.page_hint_stream_s* %arrayidx1704, %struct.page_hint_stream_s** %pagehint1701, align 8, !tbaa !1
  %1309 = load %struct.page_hint_stream_s*, %struct.page_hint_stream_s** %pagehint1701, align 8, !tbaa !1
  %SharedObjectRef1705 = getelementptr inbounds %struct.page_hint_stream_s, %struct.page_hint_stream_s* %1309, i32 0, i32 3
  %1310 = load i32*, i32** %SharedObjectRef1705, align 8, !tbaa !322
  %tobool1706 = icmp ne i32* %1310, null
  br i1 %tobool1706, label %if.then.1707, label %if.end.1713

if.then.1707:                                     ; preds = %for.body.1700
  %1311 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %v_memory1708 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %1311, i32 0, i32 43
  %1312 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory1708, align 8, !tbaa !52
  %procs1709 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %1312, i32 0, i32 1
  %free_object1710 = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs1709, i32 0, i32 2
  %1313 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %free_object1710, align 8, !tbaa !138
  %1314 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %v_memory1711 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %1314, i32 0, i32 43
  %1315 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory1711, align 8, !tbaa !52
  %1316 = load %struct.page_hint_stream_s*, %struct.page_hint_stream_s** %pagehint1701, align 8, !tbaa !1
  %SharedObjectRef1712 = getelementptr inbounds %struct.page_hint_stream_s, %struct.page_hint_stream_s* %1316, i32 0, i32 3
  %1317 = load i32*, i32** %SharedObjectRef1712, align 8, !tbaa !322
  %1318 = bitcast i32* %1317 to i8*
  call void %1313(%struct.gs_memory_s* %1315, i8* %1318, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.205, i32 0, i32 0)) #7
  br label %if.end.1713

if.end.1713:                                      ; preds = %if.then.1707, %for.body.1700
  %1319 = bitcast %struct.page_hint_stream_s** %pagehint1701 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1319) #2
  br label %for.inc.1714

for.inc.1714:                                     ; preds = %if.end.1713
  %1320 = load i32, i32* %i, align 4, !tbaa !54
  %inc1715 = add nsw i32 %1320, 1
  store i32 %inc1715, i32* %i, align 4, !tbaa !54
  br label %for.cond.1696

for.end.1716:                                     ; preds = %for.cond.1696
  %1321 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %v_memory1717 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %1321, i32 0, i32 43
  %1322 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory1717, align 8, !tbaa !52
  %procs1718 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %1322, i32 0, i32 1
  %free_object1719 = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs1718, i32 0, i32 2
  %1323 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %free_object1719, align 8, !tbaa !138
  %1324 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %v_memory1720 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %1324, i32 0, i32 43
  %1325 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory1720, align 8, !tbaa !52
  %1326 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %PageHints1721 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1326, i32 0, i32 26
  %1327 = load %struct.page_hint_stream_s*, %struct.page_hint_stream_s** %PageHints1721, align 8, !tbaa !311
  %1328 = bitcast %struct.page_hint_stream_s* %1327 to i8*
  call void %1323(%struct.gs_memory_s* %1325, i8* %1328, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.206, i32 0, i32 0)) #7
  %1329 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %v_memory1722 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %1329, i32 0, i32 43
  %1330 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory1722, align 8, !tbaa !52
  %procs1723 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %1330, i32 0, i32 1
  %free_object1724 = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs1723, i32 0, i32 2
  %1331 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %free_object1724, align 8, !tbaa !138
  %1332 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %v_memory1725 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %1332, i32 0, i32 43
  %1333 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory1725, align 8, !tbaa !52
  %1334 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %SharedHints1726 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1334, i32 0, i32 29
  %1335 = load %struct.share_hint_stream_s*, %struct.share_hint_stream_s** %SharedHints1726, align 8, !tbaa !313
  %1336 = bitcast %struct.share_hint_stream_s* %1335 to i8*
  call void %1331(%struct.gs_memory_s* %1333, i8* %1336, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.207, i32 0, i32 0)) #7
  %1337 = load i32, i32* %code, align 4, !tbaa !54
  store i32 %1337, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.1727

cleanup.1727:                                     ; preds = %for.end.1716, %if.then.58
  %1338 = bitcast i64* %SharedHintOffset to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1338) #2
  %1339 = bitcast i64* %HintLength to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1339) #2
  %1340 = bitcast i64* %HintStreamStart to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1340) #2
  %1341 = bitcast i64* %HintStreamLen to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1341) #2
  %1342 = bitcast i64* %Length to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1342) #2
  %1343 = bitcast i64* %mainxref to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1343) #2
  call void @llvm.lifetime.end(i64 1, i8* %T) #2
  %1344 = bitcast i32* %k to i8*
  call void @llvm.lifetime.end(i64 4, i8* %1344) #2
  %1345 = bitcast i32* %HintStreamObj to i8*
  call void @llvm.lifetime.end(i64 4, i8* %1345) #2
  %1346 = bitcast i32* %LDictObj to i8*
  call void @llvm.lifetime.end(i64 4, i8* %1346) #2
  %1347 = bitcast i32* %Part9 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %1347) #2
  %1348 = bitcast i32* %PartNone to i8*
  call void @llvm.lifetime.end(i64 4, i8* %1348) #2
  %1349 = bitcast i32* %Part7To8 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %1349) #2
  %1350 = bitcast i32* %Part1To6 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %1350) #2
  %1351 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %1351) #2
  %1352 = bitcast i32* %j to i8*
  call void @llvm.lifetime.end(i64 4, i8* %1352) #2
  %1353 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %1353) #2
  %1354 = bitcast i32* %level to i8*
  call void @llvm.lifetime.end(i64 4, i8* %1354) #2
  call void @llvm.lifetime.end(i64 1, i8* %Pad) #2
  %1355 = bitcast [35 x i8]* %fileID to i8*
  call void @llvm.lifetime.end(i64 35, i8* %1355) #2
  %1356 = bitcast [1024 x i8]* %LDict to i8*
  call void @llvm.lifetime.end(i64 1024, i8* %1356) #2
  %1357 = bitcast [9 x i8]* %Binary to i8*
  call void @llvm.lifetime.end(i64 9, i8* %1357) #2
  %1358 = bitcast [32 x i8]* %Header to i8*
  call void @llvm.lifetime.end(i64 32, i8* %1358) #2
  %1359 = bitcast [1024 x i8]* %Buffer to i8*
  call void @llvm.lifetime.end(i64 1024, i8* %1359) #2
  %1360 = load i32, i32* %retval
  ret i32 %1360

unreachable:                                      ; preds = %cleanup.789, %cleanup
  unreachable
}

declare i32 @font_resource_free(%struct.gx_device_pdf_s*, %struct.pdf_font_resource_s*) #0

declare i32 @pdf_font_descriptor_free(%struct.gx_device_pdf_s*, %struct.pdf_resource_s*) #0

declare i32 @free_color_space(%struct.gx_device_pdf_s*, %struct.pdf_resource_s*) #0

declare void @cos_release(%struct.cos_object_s*, i8*) #0

declare i32 @cos_dict_objects_delete(%struct.cos_dict_s*) #0

declare i32 @text_data_free(%struct.gs_memory_s*, %struct.pdf_text_data_s*) #0

declare i32 @s_close_filters(%struct.stream_s**, %struct.stream_s*) #0

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #2

; Function Attrs: nounwind uwtable
define internal double @round_box_coord(double %xy) #1 {
entry:
  %xy.addr = alloca double, align 8
  store double %xy, double* %xy.addr, align 8, !tbaa !248
  %0 = load double, double* %xy.addr, align 8, !tbaa !248
  %mul = fmul double %0, 1.000000e+02
  %add = fadd double %mul, 5.000000e-01
  %conv = fptosi double %add to i32
  %conv1 = sitofp i32 %conv to double
  %div = fdiv double %conv1, 1.000000e+02
  ret double %div
}

declare i8* @pprintg2(%struct.stream_s*, i8*, double, double) #0

declare %struct.cos_value_s* @cos_dict_find_c_key(%struct.cos_dict_s*, i8*) #0

; Function Attrs: nounwind
declare i32 @__isoc99_sscanf(i8*, i8*, ...) #4

declare i32 @cos_dict_delete_c_key(%struct.cos_dict_s*, i8*) #0

declare i8* @pprintg4(%struct.stream_s*, i8*, double, double, double, double) #0

declare i64 @fread(i8*, i64, i64, %struct._IO_FILE*) #0

declare i64 @fwrite(i8*, i64, i64, %struct._IO_FILE*) #0

; Function Attrs: nounwind uwtable
define internal i32 @rewrite_object(%struct.gx_device_pdf_s* %pdev, %struct.pdf_linearisation_s* %linear_params, i32 %object) #1 {
entry:
  %retval = alloca i32, align 4
  %pdev.addr = alloca %struct.gx_device_pdf_s*, align 8
  %linear_params.addr = alloca %struct.pdf_linearisation_s*, align 8
  %object.addr = alloca i32, align 4
  %read = alloca i64, align 8
  %Size = alloca i64, align 8
  %c = alloca i8, align 1
  %Scratch = alloca i8*, align 8
  %source = alloca i8*, align 8
  %target = alloca i8*, align 8
  %Buf = alloca [280 x i8], align 16
  %next = alloca i8*, align 8
  %code = alloca i32, align 4
  %ID = alloca i32, align 4
  %ScratchSize = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %index = alloca i32, align 4
  %Temp = alloca i8*, align 8
  %__s1_len = alloca i64, align 8
  %__s2_len = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__s1 = alloca i8*, align 8
  %__result = alloca i32, align 4
  %tmp135 = alloca i32, align 4
  %__s1_len155 = alloca i64, align 8
  %__s2_len157 = alloca i64, align 8
  %tmp158 = alloca i32, align 4
  %__s1165 = alloca i8*, align 8
  %__result170 = alloca i32, align 4
  %tmp208 = alloca i32, align 4
  store %struct.gx_device_pdf_s* %pdev, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  store %struct.pdf_linearisation_s* %linear_params, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  store i32 %object, i32* %object.addr, align 4, !tbaa !54
  %0 = bitcast i64* %read to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = bitcast i64* %Size to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #2
  call void @llvm.lifetime.start(i64 1, i8* %c) #2
  %2 = bitcast i8** %Scratch to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #2
  %3 = bitcast i8** %source to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #2
  %4 = bitcast i8** %target to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4) #2
  %5 = bitcast [280 x i8]* %Buf to i8*
  call void @llvm.lifetime.start(i64 280, i8* %5) #2
  %6 = bitcast i8** %next to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6) #2
  %7 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %7) #2
  %8 = bitcast i32* %ID to i8*
  call void @llvm.lifetime.start(i64 4, i8* %8) #2
  %9 = bitcast i32* %ScratchSize to i8*
  call void @llvm.lifetime.start(i64 4, i8* %9) #2
  store i32 16384, i32* %ScratchSize, align 4, !tbaa !54
  %10 = load i32, i32* %object.addr, align 4, !tbaa !54
  %idxprom = sext i32 %10 to i64
  %11 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsage = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %11, i32 0, i32 252
  %12 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %ResourceUsage, align 8, !tbaa !173
  %arrayidx = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %12, i64 %idxprom
  %Length = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %arrayidx, i32 0, i32 6
  %13 = load i64, i64* %Length, align 8, !tbaa !300
  store i64 %13, i64* %Size, align 8, !tbaa !107
  %14 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %v_memory = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %14, i32 0, i32 43
  %15 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory, align 8, !tbaa !52
  %procs = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %15, i32 0, i32 1
  %alloc_bytes = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs, i32 0, i32 7
  %16 = load i8* (%struct.gs_memory_s*, i32, i8*)*, i8* (%struct.gs_memory_s*, i32, i8*)** %alloc_bytes, align 8, !tbaa !64
  %17 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %v_memory1 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %17, i32 0, i32 43
  %18 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory1, align 8, !tbaa !52
  %19 = load i32, i32* %ScratchSize, align 4, !tbaa !54
  %call = call i8* %16(%struct.gs_memory_s* %18, i32 %19, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.208, i32 0, i32 0)) #7
  store i8* %call, i8** %Scratch, align 8, !tbaa !1
  %20 = load i8*, i8** %Scratch, align 8, !tbaa !1
  %cmp = icmp eq i8* %20, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -25, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.307

if.end:                                           ; preds = %entry
  %21 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %Lin_File = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %21, i32 0, i32 1
  %file = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %Lin_File, i32 0, i32 1
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** %file, align 8, !tbaa !302
  %call2 = call i64 @gp_ftell_64(%struct._IO_FILE* %22) #7
  %23 = load i32, i32* %object.addr, align 4, !tbaa !54
  %idxprom3 = sext i32 %23 to i64
  %24 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsage4 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %24, i32 0, i32 252
  %25 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %ResourceUsage4, align 8, !tbaa !173
  %arrayidx5 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %25, i64 %idxprom3
  %LinearisedOffset = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %arrayidx5, i32 0, i32 5
  store i64 %call2, i64* %LinearisedOffset, align 8, !tbaa !304
  %26 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %sfile = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %26, i32 0, i32 0
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** %sfile, align 8, !tbaa !290
  %28 = load i32, i32* %object.addr, align 4, !tbaa !54
  %idxprom6 = sext i32 %28 to i64
  %29 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsage7 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %29, i32 0, i32 252
  %30 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %ResourceUsage7, align 8, !tbaa !173
  %arrayidx8 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %30, i64 %idxprom6
  %OriginalOffset = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %arrayidx8, i32 0, i32 4
  %31 = load i64, i64* %OriginalOffset, align 8, !tbaa !299
  %call9 = call i32 @gp_fseek_64(%struct._IO_FILE* %27, i64 %31, i32 0) #7
  store i32 %call9, i32* %code, align 4, !tbaa !54
  %32 = load i32, i32* %code, align 4, !tbaa !54
  %cmp10 = icmp slt i32 %32, 0
  br i1 %cmp10, label %if.then.11, label %if.end.12

if.then.11:                                       ; preds = %if.end
  %33 = load i32, i32* %code, align 4, !tbaa !54
  store i32 %33, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.307

if.end.12:                                        ; preds = %if.end
  store i64 0, i64* %read, align 8, !tbaa !107
  br label %do.body

do.body:                                          ; preds = %land.end, %if.end.12
  %34 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %sfile13 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %34, i32 0, i32 0
  %35 = load %struct._IO_FILE*, %struct._IO_FILE** %sfile13, align 8, !tbaa !290
  %call14 = call i64 @fread(i8* %c, i64 1, i64 1, %struct._IO_FILE* %35) #7
  %conv = trunc i64 %call14 to i32
  store i32 %conv, i32* %code, align 4, !tbaa !54
  %36 = load i64, i64* %read, align 8, !tbaa !107
  %inc = add i64 %36, 1
  store i64 %inc, i64* %read, align 8, !tbaa !107
  br label %do.cond

do.cond:                                          ; preds = %do.body
  %37 = load i8, i8* %c, align 1, !tbaa !147
  %conv15 = sext i8 %37 to i32
  %cmp16 = icmp ne i32 %conv15, 10
  br i1 %cmp16, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %do.cond
  %38 = load i32, i32* %code, align 4, !tbaa !54
  %cmp18 = icmp sgt i32 %38, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.cond
  %39 = phi i1 [ false, %do.cond ], [ %cmp18, %land.rhs ]
  br i1 %39, label %do.body, label %do.end

do.end:                                           ; preds = %land.end
  %40 = load i8*, i8** %Scratch, align 8, !tbaa !1
  %41 = load i32, i32* %object.addr, align 4, !tbaa !54
  %idxprom20 = sext i32 %41 to i64
  %42 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsage21 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %42, i32 0, i32 252
  %43 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %ResourceUsage21, align 8, !tbaa !173
  %arrayidx22 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %43, i64 %idxprom20
  %NewObjectNumber = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %arrayidx22, i32 0, i32 3
  %44 = load i32, i32* %NewObjectNumber, align 4, !tbaa !301
  %call23 = call i32 (i8*, i8*, ...) @gs_sprintf(i8* %40, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.209, i32 0, i32 0), i32 %44) #7
  %45 = load i8*, i8** %Scratch, align 8, !tbaa !1
  %46 = load i8*, i8** %Scratch, align 8, !tbaa !1
  %call24 = call i64 @strlen(i8* %46) #9
  %47 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %Lin_File25 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %47, i32 0, i32 1
  %file26 = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %Lin_File25, i32 0, i32 1
  %48 = load %struct._IO_FILE*, %struct._IO_FILE** %file26, align 8, !tbaa !302
  %call27 = call i64 @fwrite(i8* %45, i64 %call24, i64 1, %struct._IO_FILE* %48) #7
  %49 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %sfile28 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %49, i32 0, i32 0
  %50 = load %struct._IO_FILE*, %struct._IO_FILE** %sfile28, align 8, !tbaa !290
  %call29 = call i64 @fread(i8* %c, i64 1, i64 1, %struct._IO_FILE* %50) #7
  %conv30 = trunc i64 %call29 to i32
  store i32 %conv30, i32* %code, align 4, !tbaa !54
  %51 = load i64, i64* %read, align 8, !tbaa !107
  %inc31 = add i64 %51, 1
  store i64 %inc31, i64* %read, align 8, !tbaa !107
  %52 = load i8, i8* %c, align 1, !tbaa !147
  %conv32 = sext i8 %52 to i32
  %cmp33 = icmp eq i32 %conv32, 60
  br i1 %cmp33, label %if.then.38, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %do.end
  %53 = load i8, i8* %c, align 1, !tbaa !147
  %conv35 = sext i8 %53 to i32
  %cmp36 = icmp eq i32 %conv35, 91
  br i1 %cmp36, label %if.then.38, label %if.else

if.then.38:                                       ; preds = %lor.lhs.false, %do.end
  %54 = bitcast i32* %index to i8*
  call void @llvm.lifetime.start(i64 4, i8* %54) #2
  store i32 0, i32* %index, align 4, !tbaa !54
  %55 = load i8, i8* %c, align 1, !tbaa !147
  %56 = load i32, i32* %index, align 4, !tbaa !54
  %inc39 = add nsw i32 %56, 1
  store i32 %inc39, i32* %index, align 4, !tbaa !54
  %idxprom40 = sext i32 %56 to i64
  %57 = load i8*, i8** %Scratch, align 8, !tbaa !1
  %arrayidx41 = getelementptr inbounds i8, i8* %57, i64 %idxprom40
  store i8 %55, i8* %arrayidx41, align 1, !tbaa !147
  br label %do.body.42

do.body.42:                                       ; preds = %do.cond.227, %if.then.38
  br label %do.body.43

do.body.43:                                       ; preds = %land.end.82, %do.body.42
  %58 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %sfile44 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %58, i32 0, i32 0
  %59 = load %struct._IO_FILE*, %struct._IO_FILE** %sfile44, align 8, !tbaa !290
  %call45 = call i64 @fread(i8* %c, i64 1, i64 1, %struct._IO_FILE* %59) #7
  %conv46 = trunc i64 %call45 to i32
  store i32 %conv46, i32* %code, align 4, !tbaa !54
  %60 = load i8, i8* %c, align 1, !tbaa !147
  %61 = load i32, i32* %index, align 4, !tbaa !54
  %inc47 = add nsw i32 %61, 1
  store i32 %inc47, i32* %index, align 4, !tbaa !54
  %idxprom48 = sext i32 %61 to i64
  %62 = load i8*, i8** %Scratch, align 8, !tbaa !1
  %arrayidx49 = getelementptr inbounds i8, i8* %62, i64 %idxprom48
  store i8 %60, i8* %arrayidx49, align 1, !tbaa !147
  %63 = load i64, i64* %read, align 8, !tbaa !107
  %inc50 = add i64 %63, 1
  store i64 %inc50, i64* %read, align 8, !tbaa !107
  %64 = load i32, i32* %index, align 4, !tbaa !54
  %65 = load i32, i32* %ScratchSize, align 4, !tbaa !54
  %sub = sub nsw i32 %65, 2
  %cmp51 = icmp eq i32 %64, %sub
  br i1 %cmp51, label %if.then.53, label %if.end.73

if.then.53:                                       ; preds = %do.body.43
  %66 = bitcast i8** %Temp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %66) #2
  %67 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %v_memory54 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %67, i32 0, i32 43
  %68 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory54, align 8, !tbaa !52
  %procs55 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %68, i32 0, i32 1
  %alloc_bytes56 = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs55, i32 0, i32 7
  %69 = load i8* (%struct.gs_memory_s*, i32, i8*)*, i8* (%struct.gs_memory_s*, i32, i8*)** %alloc_bytes56, align 8, !tbaa !64
  %70 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %v_memory57 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %70, i32 0, i32 43
  %71 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory57, align 8, !tbaa !52
  %72 = load i32, i32* %ScratchSize, align 4, !tbaa !54
  %mul = mul nsw i32 %72, 2
  %call58 = call i8* %69(%struct.gs_memory_s* %71, i32 %mul, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.208, i32 0, i32 0)) #7
  store i8* %call58, i8** %Temp, align 8, !tbaa !1
  %73 = load i8*, i8** %Temp, align 8, !tbaa !1
  %cmp59 = icmp eq i8* %73, null
  br i1 %cmp59, label %if.then.61, label %if.end.65

if.then.61:                                       ; preds = %if.then.53
  %74 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %v_memory62 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %74, i32 0, i32 43
  %75 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory62, align 8, !tbaa !52
  %procs63 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %75, i32 0, i32 1
  %free_object = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs63, i32 0, i32 2
  %76 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %free_object, align 8, !tbaa !138
  %77 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %v_memory64 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %77, i32 0, i32 43
  %78 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory64, align 8, !tbaa !52
  %79 = load i8*, i8** %Scratch, align 8, !tbaa !1
  call void %76(%struct.gs_memory_s* %78, i8* %79, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.210, i32 0, i32 0)) #7
  store i32 -25, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.65:                                        ; preds = %if.then.53
  %80 = load i8*, i8** %Temp, align 8, !tbaa !1
  %81 = load i8*, i8** %Scratch, align 8, !tbaa !1
  %82 = load i32, i32* %ScratchSize, align 4, !tbaa !54
  %conv66 = sext i32 %82 to i64
  %call67 = call i8* @memcpy(i8* %80, i8* %81, i64 %conv66) #8
  %83 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %v_memory68 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %83, i32 0, i32 43
  %84 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory68, align 8, !tbaa !52
  %procs69 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %84, i32 0, i32 1
  %free_object70 = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs69, i32 0, i32 2
  %85 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %free_object70, align 8, !tbaa !138
  %86 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %v_memory71 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %86, i32 0, i32 43
  %87 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory71, align 8, !tbaa !52
  %88 = load i8*, i8** %Scratch, align 8, !tbaa !1
  call void %85(%struct.gs_memory_s* %87, i8* %88, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.211, i32 0, i32 0)) #7
  %89 = load i8*, i8** %Temp, align 8, !tbaa !1
  store i8* %89, i8** %Scratch, align 8, !tbaa !1
  %90 = load i32, i32* %ScratchSize, align 4, !tbaa !54
  %mul72 = mul nsw i32 %90, 2
  store i32 %mul72, i32* %ScratchSize, align 4, !tbaa !54
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.65, %if.then.61
  %91 = bitcast i8** %Temp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %91) #2
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.229 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.73

if.end.73:                                        ; preds = %cleanup.cont, %do.body.43
  br label %do.cond.74

do.cond.74:                                       ; preds = %if.end.73
  %92 = load i8, i8* %c, align 1, !tbaa !147
  %conv75 = sext i8 %92 to i32
  %cmp76 = icmp ne i32 %conv75, 13
  br i1 %cmp76, label %land.rhs.78, label %land.end.82

land.rhs.78:                                      ; preds = %do.cond.74
  %93 = load i8, i8* %c, align 1, !tbaa !147
  %conv79 = sext i8 %93 to i32
  %cmp80 = icmp ne i32 %conv79, 10
  br label %land.end.82

land.end.82:                                      ; preds = %land.rhs.78, %do.cond.74
  %94 = phi i1 [ false, %do.cond.74 ], [ %cmp80, %land.rhs.78 ]
  br i1 %94, label %do.body.43, label %do.end.83

do.end.83:                                        ; preds = %land.end.82
  %95 = load i32, i32* %index, align 4, !tbaa !54
  %idxprom84 = sext i32 %95 to i64
  %96 = load i8*, i8** %Scratch, align 8, !tbaa !1
  %arrayidx85 = getelementptr inbounds i8, i8* %96, i64 %idxprom84
  store i8 0, i8* %arrayidx85, align 1, !tbaa !147
  %call86 = call i64 @strlen(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.212, i32 0, i32 0)) #9
  %cmp87 = icmp ult i64 %call86, 6
  br i1 %cmp87, label %cond.true, label %cond.false.140

cond.true:                                        ; preds = %do.end.83
  %97 = bitcast i64* %__s1_len to i8*
  call void @llvm.lifetime.start(i64 8, i8* %97) #2
  %98 = bitcast i64* %__s2_len to i8*
  call void @llvm.lifetime.start(i64 8, i8* %98) #2
  br i1 icmp eq (i64 sub (i64 ptrtoint (i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.212, i32 0, i64 1) to i64), i64 ptrtoint ([7 x i8]* @.str.212 to i64)), i64 1), label %land.lhs.true, label %cond.false

land.lhs.true:                                    ; preds = %cond.true
  %call89 = call i64 @strlen(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.212, i32 0, i32 0)) #9
  store i64 %call89, i64* %__s2_len, align 8, !tbaa !107
  %99 = load i64, i64* %__s2_len, align 8, !tbaa !107
  %cmp90 = icmp ult i64 %99, 4
  br i1 %cmp90, label %cond.true.92, label %cond.false

cond.true.92:                                     ; preds = %land.lhs.true
  %100 = bitcast i8** %__s1 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %100) #2
  %101 = load i32, i32* %index, align 4, !tbaa !54
  %sub94 = sub nsw i32 %101, 7
  %idxprom95 = sext i32 %sub94 to i64
  %102 = load i8*, i8** %Scratch, align 8, !tbaa !1
  %arrayidx96 = getelementptr inbounds i8, i8* %102, i64 %idxprom95
  store i8* %arrayidx96, i8** %__s1, align 8, !tbaa !1
  %103 = bitcast i32* %__result to i8*
  call void @llvm.lifetime.start(i64 4, i8* %103) #2
  %104 = load i8*, i8** %__s1, align 8, !tbaa !1
  %arrayidx98 = getelementptr inbounds i8, i8* %104, i64 0
  %105 = load i8, i8* %arrayidx98, align 1, !tbaa !147
  %conv99 = zext i8 %105 to i32
  %106 = load i8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.212, i32 0, i32 0), align 1, !tbaa !147
  %conv100 = zext i8 %106 to i32
  %sub101 = sub nsw i32 %conv99, %conv100
  store i32 %sub101, i32* %__result, align 4, !tbaa !54
  %107 = load i64, i64* %__s2_len, align 8, !tbaa !107
  %cmp102 = icmp ugt i64 %107, 0
  br i1 %cmp102, label %land.lhs.true.104, label %if.end.134

land.lhs.true.104:                                ; preds = %cond.true.92
  %108 = load i32, i32* %__result, align 4, !tbaa !54
  %cmp105 = icmp eq i32 %108, 0
  br i1 %cmp105, label %if.then.107, label %if.end.134

if.then.107:                                      ; preds = %land.lhs.true.104
  %109 = load i8*, i8** %__s1, align 8, !tbaa !1
  %arrayidx108 = getelementptr inbounds i8, i8* %109, i64 1
  %110 = load i8, i8* %arrayidx108, align 1, !tbaa !147
  %conv109 = zext i8 %110 to i32
  %111 = load i8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.212, i32 0, i64 1), align 1, !tbaa !147
  %conv110 = zext i8 %111 to i32
  %sub111 = sub nsw i32 %conv109, %conv110
  store i32 %sub111, i32* %__result, align 4, !tbaa !54
  %112 = load i64, i64* %__s2_len, align 8, !tbaa !107
  %cmp112 = icmp ugt i64 %112, 1
  br i1 %cmp112, label %land.lhs.true.114, label %if.end.133

land.lhs.true.114:                                ; preds = %if.then.107
  %113 = load i32, i32* %__result, align 4, !tbaa !54
  %cmp115 = icmp eq i32 %113, 0
  br i1 %cmp115, label %if.then.117, label %if.end.133

if.then.117:                                      ; preds = %land.lhs.true.114
  %114 = load i8*, i8** %__s1, align 8, !tbaa !1
  %arrayidx118 = getelementptr inbounds i8, i8* %114, i64 2
  %115 = load i8, i8* %arrayidx118, align 1, !tbaa !147
  %conv119 = zext i8 %115 to i32
  %116 = load i8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.212, i32 0, i64 2), align 1, !tbaa !147
  %conv120 = zext i8 %116 to i32
  %sub121 = sub nsw i32 %conv119, %conv120
  store i32 %sub121, i32* %__result, align 4, !tbaa !54
  %117 = load i64, i64* %__s2_len, align 8, !tbaa !107
  %cmp122 = icmp ugt i64 %117, 2
  br i1 %cmp122, label %land.lhs.true.124, label %if.end.132

land.lhs.true.124:                                ; preds = %if.then.117
  %118 = load i32, i32* %__result, align 4, !tbaa !54
  %cmp125 = icmp eq i32 %118, 0
  br i1 %cmp125, label %if.then.127, label %if.end.132

if.then.127:                                      ; preds = %land.lhs.true.124
  %119 = load i8*, i8** %__s1, align 8, !tbaa !1
  %arrayidx128 = getelementptr inbounds i8, i8* %119, i64 3
  %120 = load i8, i8* %arrayidx128, align 1, !tbaa !147
  %conv129 = zext i8 %120 to i32
  %121 = load i8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.212, i32 0, i64 3), align 1, !tbaa !147
  %conv130 = zext i8 %121 to i32
  %sub131 = sub nsw i32 %conv129, %conv130
  store i32 %sub131, i32* %__result, align 4, !tbaa !54
  br label %if.end.132

if.end.132:                                       ; preds = %if.then.127, %land.lhs.true.124, %if.then.117
  br label %if.end.133

if.end.133:                                       ; preds = %if.end.132, %land.lhs.true.114, %if.then.107
  br label %if.end.134

if.end.134:                                       ; preds = %if.end.133, %land.lhs.true.104, %cond.true.92
  %122 = load i32, i32* %__result, align 4, !tbaa !54
  store i32 %122, i32* %tmp135, !tbaa !54
  %123 = bitcast i32* %__result to i8*
  call void @llvm.lifetime.end(i64 4, i8* %123) #2
  %124 = bitcast i8** %__s1 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %124) #2
  %125 = load i32, i32* %tmp135, !tbaa !54
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true, %cond.true
  %126 = load i32, i32* %index, align 4, !tbaa !54
  %sub136 = sub nsw i32 %126, 7
  %idxprom137 = sext i32 %sub136 to i64
  %127 = load i8*, i8** %Scratch, align 8, !tbaa !1
  %arrayidx138 = getelementptr inbounds i8, i8* %127, i64 %idxprom137
  %call139 = call i32 @strcmp(i8* %arrayidx138, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.212, i32 0, i32 0)) #8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %if.end.134
  %cond = phi i32 [ %125, %if.end.134 ], [ %call139, %cond.false ]
  store i32 %cond, i32* %tmp, !tbaa !54
  %128 = bitcast i64* %__s2_len to i8*
  call void @llvm.lifetime.end(i64 8, i8* %128) #2
  %129 = bitcast i64* %__s1_len to i8*
  call void @llvm.lifetime.end(i64 8, i8* %129) #2
  %130 = load i32, i32* %tmp, !tbaa !54
  br label %cond.end.145

cond.false.140:                                   ; preds = %do.end.83
  %131 = load i32, i32* %index, align 4, !tbaa !54
  %sub141 = sub nsw i32 %131, 7
  %idxprom142 = sext i32 %sub141 to i64
  %132 = load i8*, i8** %Scratch, align 8, !tbaa !1
  %arrayidx143 = getelementptr inbounds i8, i8* %132, i64 %idxprom142
  %call144 = call i32 @strncmp(i8* %arrayidx143, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.212, i32 0, i32 0), i64 6) #9
  br label %cond.end.145

cond.end.145:                                     ; preds = %cond.false.140, %cond.end
  %cond146 = phi i32 [ %130, %cond.end ], [ %call144, %cond.false.140 ]
  %cmp147 = icmp eq i32 %cond146, 0
  br i1 %cmp147, label %if.then.225, label %lor.lhs.false.149

lor.lhs.false.149:                                ; preds = %cond.end.145
  %call150 = call i64 @strlen(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.213, i32 0, i32 0)) #9
  %cmp151 = icmp ult i64 %call150, 6
  br i1 %cmp151, label %cond.true.153, label %cond.false.216

cond.true.153:                                    ; preds = %lor.lhs.false.149
  %133 = bitcast i64* %__s1_len155 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %133) #2
  %134 = bitcast i64* %__s2_len157 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %134) #2
  br i1 icmp eq (i64 sub (i64 ptrtoint (i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.213, i32 0, i64 1) to i64), i64 ptrtoint ([7 x i8]* @.str.213 to i64)), i64 1), label %land.lhs.true.159, label %cond.false.209

land.lhs.true.159:                                ; preds = %cond.true.153
  %call160 = call i64 @strlen(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.213, i32 0, i32 0)) #9
  store i64 %call160, i64* %__s2_len157, align 8, !tbaa !107
  %135 = load i64, i64* %__s2_len157, align 8, !tbaa !107
  %cmp161 = icmp ult i64 %135, 4
  br i1 %cmp161, label %cond.true.163, label %cond.false.209

cond.true.163:                                    ; preds = %land.lhs.true.159
  %136 = bitcast i8** %__s1165 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %136) #2
  %137 = load i32, i32* %index, align 4, !tbaa !54
  %sub166 = sub nsw i32 %137, 7
  %idxprom167 = sext i32 %sub166 to i64
  %138 = load i8*, i8** %Scratch, align 8, !tbaa !1
  %arrayidx168 = getelementptr inbounds i8, i8* %138, i64 %idxprom167
  store i8* %arrayidx168, i8** %__s1165, align 8, !tbaa !1
  %139 = bitcast i32* %__result170 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %139) #2
  %140 = load i8*, i8** %__s1165, align 8, !tbaa !1
  %arrayidx171 = getelementptr inbounds i8, i8* %140, i64 0
  %141 = load i8, i8* %arrayidx171, align 1, !tbaa !147
  %conv172 = zext i8 %141 to i32
  %142 = load i8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.213, i32 0, i32 0), align 1, !tbaa !147
  %conv173 = zext i8 %142 to i32
  %sub174 = sub nsw i32 %conv172, %conv173
  store i32 %sub174, i32* %__result170, align 4, !tbaa !54
  %143 = load i64, i64* %__s2_len157, align 8, !tbaa !107
  %cmp175 = icmp ugt i64 %143, 0
  br i1 %cmp175, label %land.lhs.true.177, label %if.end.207

land.lhs.true.177:                                ; preds = %cond.true.163
  %144 = load i32, i32* %__result170, align 4, !tbaa !54
  %cmp178 = icmp eq i32 %144, 0
  br i1 %cmp178, label %if.then.180, label %if.end.207

if.then.180:                                      ; preds = %land.lhs.true.177
  %145 = load i8*, i8** %__s1165, align 8, !tbaa !1
  %arrayidx181 = getelementptr inbounds i8, i8* %145, i64 1
  %146 = load i8, i8* %arrayidx181, align 1, !tbaa !147
  %conv182 = zext i8 %146 to i32
  %147 = load i8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.213, i32 0, i64 1), align 1, !tbaa !147
  %conv183 = zext i8 %147 to i32
  %sub184 = sub nsw i32 %conv182, %conv183
  store i32 %sub184, i32* %__result170, align 4, !tbaa !54
  %148 = load i64, i64* %__s2_len157, align 8, !tbaa !107
  %cmp185 = icmp ugt i64 %148, 1
  br i1 %cmp185, label %land.lhs.true.187, label %if.end.206

land.lhs.true.187:                                ; preds = %if.then.180
  %149 = load i32, i32* %__result170, align 4, !tbaa !54
  %cmp188 = icmp eq i32 %149, 0
  br i1 %cmp188, label %if.then.190, label %if.end.206

if.then.190:                                      ; preds = %land.lhs.true.187
  %150 = load i8*, i8** %__s1165, align 8, !tbaa !1
  %arrayidx191 = getelementptr inbounds i8, i8* %150, i64 2
  %151 = load i8, i8* %arrayidx191, align 1, !tbaa !147
  %conv192 = zext i8 %151 to i32
  %152 = load i8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.213, i32 0, i64 2), align 1, !tbaa !147
  %conv193 = zext i8 %152 to i32
  %sub194 = sub nsw i32 %conv192, %conv193
  store i32 %sub194, i32* %__result170, align 4, !tbaa !54
  %153 = load i64, i64* %__s2_len157, align 8, !tbaa !107
  %cmp195 = icmp ugt i64 %153, 2
  br i1 %cmp195, label %land.lhs.true.197, label %if.end.205

land.lhs.true.197:                                ; preds = %if.then.190
  %154 = load i32, i32* %__result170, align 4, !tbaa !54
  %cmp198 = icmp eq i32 %154, 0
  br i1 %cmp198, label %if.then.200, label %if.end.205

if.then.200:                                      ; preds = %land.lhs.true.197
  %155 = load i8*, i8** %__s1165, align 8, !tbaa !1
  %arrayidx201 = getelementptr inbounds i8, i8* %155, i64 3
  %156 = load i8, i8* %arrayidx201, align 1, !tbaa !147
  %conv202 = zext i8 %156 to i32
  %157 = load i8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.213, i32 0, i64 3), align 1, !tbaa !147
  %conv203 = zext i8 %157 to i32
  %sub204 = sub nsw i32 %conv202, %conv203
  store i32 %sub204, i32* %__result170, align 4, !tbaa !54
  br label %if.end.205

if.end.205:                                       ; preds = %if.then.200, %land.lhs.true.197, %if.then.190
  br label %if.end.206

if.end.206:                                       ; preds = %if.end.205, %land.lhs.true.187, %if.then.180
  br label %if.end.207

if.end.207:                                       ; preds = %if.end.206, %land.lhs.true.177, %cond.true.163
  %158 = load i32, i32* %__result170, align 4, !tbaa !54
  store i32 %158, i32* %tmp208, !tbaa !54
  %159 = bitcast i32* %__result170 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %159) #2
  %160 = bitcast i8** %__s1165 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %160) #2
  %161 = load i32, i32* %tmp208, !tbaa !54
  br label %cond.end.214

cond.false.209:                                   ; preds = %land.lhs.true.159, %cond.true.153
  %162 = load i32, i32* %index, align 4, !tbaa !54
  %sub210 = sub nsw i32 %162, 7
  %idxprom211 = sext i32 %sub210 to i64
  %163 = load i8*, i8** %Scratch, align 8, !tbaa !1
  %arrayidx212 = getelementptr inbounds i8, i8* %163, i64 %idxprom211
  %call213 = call i32 @strcmp(i8* %arrayidx212, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.213, i32 0, i32 0)) #8
  br label %cond.end.214

cond.end.214:                                     ; preds = %cond.false.209, %if.end.207
  %cond215 = phi i32 [ %161, %if.end.207 ], [ %call213, %cond.false.209 ]
  store i32 %cond215, i32* %tmp158, !tbaa !54
  %164 = bitcast i64* %__s2_len157 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %164) #2
  %165 = bitcast i64* %__s1_len155 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %165) #2
  %166 = load i32, i32* %tmp158, !tbaa !54
  br label %cond.end.221

cond.false.216:                                   ; preds = %lor.lhs.false.149
  %167 = load i32, i32* %index, align 4, !tbaa !54
  %sub217 = sub nsw i32 %167, 7
  %idxprom218 = sext i32 %sub217 to i64
  %168 = load i8*, i8** %Scratch, align 8, !tbaa !1
  %arrayidx219 = getelementptr inbounds i8, i8* %168, i64 %idxprom218
  %call220 = call i32 @strncmp(i8* %arrayidx219, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.213, i32 0, i32 0), i64 6) #9
  br label %cond.end.221

cond.end.221:                                     ; preds = %cond.false.216, %cond.end.214
  %cond222 = phi i32 [ %166, %cond.end.214 ], [ %call220, %cond.false.216 ]
  %cmp223 = icmp eq i32 %cond222, 0
  br i1 %cmp223, label %if.then.225, label %if.end.226

if.then.225:                                      ; preds = %cond.end.221, %cond.end.145
  br label %do.end.228

if.end.226:                                       ; preds = %cond.end.221
  br label %do.cond.227

do.cond.227:                                      ; preds = %if.end.226
  %169 = load i32, i32* %code, align 4, !tbaa !54
  %tobool = icmp ne i32 %169, 0
  br i1 %tobool, label %do.body.42, label %do.end.228

do.end.228:                                       ; preds = %do.cond.227, %if.then.225
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.229

cleanup.229:                                      ; preds = %do.end.228, %cleanup
  %170 = bitcast i32* %index to i8*
  call void @llvm.lifetime.end(i64 4, i8* %170) #2
  %cleanup.dest.230 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.230, label %cleanup.307 [
    i32 0, label %cleanup.cont.231
  ]

cleanup.cont.231:                                 ; preds = %cleanup.229
  br label %if.end.236

if.else:                                          ; preds = %lor.lhs.false
  %171 = load i8*, i8** %Scratch, align 8, !tbaa !1
  %arrayidx232 = getelementptr inbounds i8, i8* %171, i64 0
  store i8 0, i8* %arrayidx232, align 1, !tbaa !147
  %172 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %Lin_File233 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %172, i32 0, i32 1
  %file234 = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %Lin_File233, i32 0, i32 1
  %173 = load %struct._IO_FILE*, %struct._IO_FILE** %file234, align 8, !tbaa !302
  %call235 = call i64 @fwrite(i8* %c, i64 1, i64 1, %struct._IO_FILE* %173) #7
  br label %if.end.236

if.end.236:                                       ; preds = %if.else, %cleanup.cont.231
  %174 = load i64, i64* %read, align 8, !tbaa !107
  %175 = load i64, i64* %Size, align 8, !tbaa !107
  %sub237 = sub i64 %175, %174
  store i64 %sub237, i64* %Size, align 8, !tbaa !107
  %176 = load i8*, i8** %Scratch, align 8, !tbaa !1
  store i8* %176, i8** %source, align 8, !tbaa !1
  br label %do.body.238

do.body.238:                                      ; preds = %do.cond.275, %if.end.236
  %177 = load i8*, i8** %source, align 8, !tbaa !1
  %call239 = call i8* @strstr(i8* %177, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.214, i32 0, i32 0)) #9
  store i8* %call239, i8** %target, align 8, !tbaa !1
  %178 = load i8*, i8** %target, align 8, !tbaa !1
  %tobool240 = icmp ne i8* %178, null
  br i1 %tobool240, label %if.then.241, label %if.else.269

if.then.241:                                      ; preds = %do.body.238
  %179 = load i8*, i8** %target, align 8, !tbaa !1
  %add.ptr = getelementptr inbounds i8, i8* %179, i64 4
  store i8* %add.ptr, i8** %next, align 8, !tbaa !1
  br label %do.body.242

do.body.242:                                      ; preds = %land.end.251, %if.then.241
  %180 = load i8*, i8** %target, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds i8, i8* %180, i32 -1
  store i8* %incdec.ptr, i8** %target, align 8, !tbaa !1
  br label %do.cond.243

do.cond.243:                                      ; preds = %do.body.242
  %181 = load i8*, i8** %target, align 8, !tbaa !1
  %182 = load i8, i8* %181, align 1, !tbaa !147
  %conv244 = sext i8 %182 to i32
  %cmp245 = icmp sge i32 %conv244, 48
  br i1 %cmp245, label %land.rhs.247, label %land.end.251

land.rhs.247:                                     ; preds = %do.cond.243
  %183 = load i8*, i8** %target, align 8, !tbaa !1
  %184 = load i8, i8* %183, align 1, !tbaa !147
  %conv248 = sext i8 %184 to i32
  %cmp249 = icmp sle i32 %conv248, 57
  br label %land.end.251

land.end.251:                                     ; preds = %land.rhs.247, %do.cond.243
  %185 = phi i1 [ false, %do.cond.243 ], [ %cmp249, %land.rhs.247 ]
  br i1 %185, label %do.body.242, label %do.end.252

do.end.252:                                       ; preds = %land.end.251
  %186 = load i8*, i8** %target, align 8, !tbaa !1
  %incdec.ptr253 = getelementptr inbounds i8, i8* %186, i32 1
  store i8* %incdec.ptr253, i8** %target, align 8, !tbaa !1
  %187 = load i8*, i8** %target, align 8, !tbaa !1
  %call254 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %187, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.215, i32 0, i32 0), i32* %ID) #8
  %188 = load i8*, i8** %source, align 8, !tbaa !1
  %189 = load i8*, i8** %target, align 8, !tbaa !1
  %190 = load i8*, i8** %source, align 8, !tbaa !1
  %sub.ptr.lhs.cast = ptrtoint i8* %189 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %190 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %191 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %Lin_File255 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %191, i32 0, i32 1
  %file256 = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %Lin_File255, i32 0, i32 1
  %192 = load %struct._IO_FILE*, %struct._IO_FILE** %file256, align 8, !tbaa !302
  %call257 = call i64 @fwrite(i8* %188, i64 %sub.ptr.sub, i64 1, %struct._IO_FILE* %192) #7
  %arraydecay = getelementptr inbounds [280 x i8], [280 x i8]* %Buf, i32 0, i32 0
  %193 = load i32, i32* %ID, align 4, !tbaa !54
  %idxprom258 = sext i32 %193 to i64
  %194 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %ResourceUsage259 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %194, i32 0, i32 252
  %195 = load %struct.linearisation_record_s*, %struct.linearisation_record_s** %ResourceUsage259, align 8, !tbaa !173
  %arrayidx260 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %195, i64 %idxprom258
  %NewObjectNumber261 = getelementptr inbounds %struct.linearisation_record_s, %struct.linearisation_record_s* %arrayidx260, i32 0, i32 3
  %196 = load i32, i32* %NewObjectNumber261, align 4, !tbaa !301
  %call262 = call i32 (i8*, i8*, ...) @gs_sprintf(i8* %arraydecay, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.215, i32 0, i32 0), i32 %196) #7
  %arraydecay263 = getelementptr inbounds [280 x i8], [280 x i8]* %Buf, i32 0, i32 0
  %arraydecay264 = getelementptr inbounds [280 x i8], [280 x i8]* %Buf, i32 0, i32 0
  %call265 = call i64 @strlen(i8* %arraydecay264) #9
  %197 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %Lin_File266 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %197, i32 0, i32 1
  %file267 = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %Lin_File266, i32 0, i32 1
  %198 = load %struct._IO_FILE*, %struct._IO_FILE** %file267, align 8, !tbaa !302
  %call268 = call i64 @fwrite(i8* %arraydecay263, i64 %call265, i64 1, %struct._IO_FILE* %198) #7
  %199 = load i8*, i8** %next, align 8, !tbaa !1
  store i8* %199, i8** %source, align 8, !tbaa !1
  br label %if.end.274

if.else.269:                                      ; preds = %do.body.238
  %200 = load i8*, i8** %source, align 8, !tbaa !1
  %201 = load i8*, i8** %source, align 8, !tbaa !1
  %call270 = call i64 @strlen(i8* %201) #9
  %202 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %Lin_File271 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %202, i32 0, i32 1
  %file272 = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %Lin_File271, i32 0, i32 1
  %203 = load %struct._IO_FILE*, %struct._IO_FILE** %file272, align 8, !tbaa !302
  %call273 = call i64 @fwrite(i8* %200, i64 %call270, i64 1, %struct._IO_FILE* %203) #7
  br label %if.end.274

if.end.274:                                       ; preds = %if.else.269, %do.end.252
  br label %do.cond.275

do.cond.275:                                      ; preds = %if.end.274
  %204 = load i8*, i8** %target, align 8, !tbaa !1
  %tobool276 = icmp ne i8* %204, null
  br i1 %tobool276, label %do.body.238, label %do.end.277

do.end.277:                                       ; preds = %do.cond.275
  br label %do.body.278

do.body.278:                                      ; preds = %do.cond.300, %do.end.277
  %205 = load i64, i64* %Size, align 8, !tbaa !107
  %206 = load i32, i32* %ScratchSize, align 4, !tbaa !54
  %conv279 = sext i32 %206 to i64
  %cmp280 = icmp ugt i64 %205, %conv279
  br i1 %cmp280, label %if.then.282, label %if.else.292

if.then.282:                                      ; preds = %do.body.278
  %207 = load i8*, i8** %Scratch, align 8, !tbaa !1
  %208 = load i32, i32* %ScratchSize, align 4, !tbaa !54
  %conv283 = sext i32 %208 to i64
  %209 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %sfile284 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %209, i32 0, i32 0
  %210 = load %struct._IO_FILE*, %struct._IO_FILE** %sfile284, align 8, !tbaa !290
  %call285 = call i64 @fread(i8* %207, i64 %conv283, i64 1, %struct._IO_FILE* %210) #7
  %conv286 = trunc i64 %call285 to i32
  store i32 %conv286, i32* %code, align 4, !tbaa !54
  %211 = load i8*, i8** %Scratch, align 8, !tbaa !1
  %212 = load i32, i32* %ScratchSize, align 4, !tbaa !54
  %conv287 = sext i32 %212 to i64
  %213 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %Lin_File288 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %213, i32 0, i32 1
  %file289 = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %Lin_File288, i32 0, i32 1
  %214 = load %struct._IO_FILE*, %struct._IO_FILE** %file289, align 8, !tbaa !302
  %call290 = call i64 @fwrite(i8* %211, i64 %conv287, i64 1, %struct._IO_FILE* %214) #7
  %215 = load i64, i64* %Size, align 8, !tbaa !107
  %sub291 = sub i64 %215, 16384
  store i64 %sub291, i64* %Size, align 8, !tbaa !107
  br label %if.end.299

if.else.292:                                      ; preds = %do.body.278
  %216 = load i8*, i8** %Scratch, align 8, !tbaa !1
  %217 = load i64, i64* %Size, align 8, !tbaa !107
  %218 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %sfile293 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %218, i32 0, i32 0
  %219 = load %struct._IO_FILE*, %struct._IO_FILE** %sfile293, align 8, !tbaa !290
  %call294 = call i64 @fread(i8* %216, i64 %217, i64 1, %struct._IO_FILE* %219) #7
  %conv295 = trunc i64 %call294 to i32
  store i32 %conv295, i32* %code, align 4, !tbaa !54
  %220 = load i8*, i8** %Scratch, align 8, !tbaa !1
  %221 = load i64, i64* %Size, align 8, !tbaa !107
  %222 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %Lin_File296 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %222, i32 0, i32 1
  %file297 = getelementptr inbounds %struct.pdf_temp_file_s, %struct.pdf_temp_file_s* %Lin_File296, i32 0, i32 1
  %223 = load %struct._IO_FILE*, %struct._IO_FILE** %file297, align 8, !tbaa !302
  %call298 = call i64 @fwrite(i8* %220, i64 %221, i64 1, %struct._IO_FILE* %223) #7
  store i64 0, i64* %Size, align 8, !tbaa !107
  br label %if.end.299

if.end.299:                                       ; preds = %if.else.292, %if.then.282
  br label %do.cond.300

do.cond.300:                                      ; preds = %if.end.299
  %224 = load i64, i64* %Size, align 8, !tbaa !107
  %tobool301 = icmp ne i64 %224, 0
  br i1 %tobool301, label %do.body.278, label %do.end.302

do.end.302:                                       ; preds = %do.cond.300
  %225 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %v_memory303 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %225, i32 0, i32 43
  %226 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory303, align 8, !tbaa !52
  %procs304 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %226, i32 0, i32 1
  %free_object305 = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs304, i32 0, i32 2
  %227 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %free_object305, align 8, !tbaa !138
  %228 = load %struct.gx_device_pdf_s*, %struct.gx_device_pdf_s** %pdev.addr, align 8, !tbaa !1
  %v_memory306 = getelementptr inbounds %struct.gx_device_pdf_s, %struct.gx_device_pdf_s* %228, i32 0, i32 43
  %229 = load %struct.gs_memory_s*, %struct.gs_memory_s** %v_memory306, align 8, !tbaa !52
  %230 = load i8*, i8** %Scratch, align 8, !tbaa !1
  call void %227(%struct.gs_memory_s* %229, i8* %230, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.210, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.307

cleanup.307:                                      ; preds = %do.end.302, %cleanup.229, %if.then.11, %if.then
  %231 = bitcast i32* %ScratchSize to i8*
  call void @llvm.lifetime.end(i64 4, i8* %231) #2
  %232 = bitcast i32* %ID to i8*
  call void @llvm.lifetime.end(i64 4, i8* %232) #2
  %233 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %233) #2
  %234 = bitcast i8** %next to i8*
  call void @llvm.lifetime.end(i64 8, i8* %234) #2
  %235 = bitcast [280 x i8]* %Buf to i8*
  call void @llvm.lifetime.end(i64 280, i8* %235) #2
  %236 = bitcast i8** %target to i8*
  call void @llvm.lifetime.end(i64 8, i8* %236) #2
  %237 = bitcast i8** %source to i8*
  call void @llvm.lifetime.end(i64 8, i8* %237) #2
  %238 = bitcast i8** %Scratch to i8*
  call void @llvm.lifetime.end(i64 8, i8* %238) #2
  call void @llvm.lifetime.end(i64 1, i8* %c) #2
  %239 = bitcast i64* %Size to i8*
  call void @llvm.lifetime.end(i64 8, i8* %239) #2
  %240 = bitcast i64* %read to i8*
  call void @llvm.lifetime.end(i64 8, i8* %240) #2
  %241 = load i32, i32* %retval
  ret i32 %241
}

; Function Attrs: nounwind uwtable
define internal i32 @write_hint_stream(%struct.pdf_linearisation_s* %linear_params, i64 %val, i8 signext %size_bits) #1 {
entry:
  %retval = alloca i32, align 4
  %linear_params.addr = alloca %struct.pdf_linearisation_s*, align 8
  %val.addr = alloca i64, align 8
  %size_bits.addr = alloca i8, align 1
  %input_mask = alloca i32, align 4
  %output_mask = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.pdf_linearisation_s* %linear_params, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  store i64 %val, i64* %val.addr, align 8, !tbaa !107
  store i8 %size_bits, i8* %size_bits.addr, align 1, !tbaa !147
  %0 = bitcast i32* %input_mask to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = bitcast i32* %output_mask to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #2
  %2 = load i8, i8* %size_bits.addr, align 1, !tbaa !147
  %conv = sext i8 %2 to i32
  %cmp = icmp eq i32 %conv, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  br label %while.cond

while.cond:                                       ; preds = %if.end.34, %if.end
  %3 = load i8, i8* %size_bits.addr, align 1, !tbaa !147
  %tobool = icmp ne i8 %3, 0
  br i1 %tobool, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %4 = load i8, i8* %size_bits.addr, align 1, !tbaa !147
  %conv2 = sext i8 %4 to i32
  %sub = sub nsw i32 %conv2, 1
  %shl = shl i32 1, %sub
  store i32 %shl, i32* %input_mask, align 4, !tbaa !54
  %5 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %HintBits = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %5, i32 0, i32 3
  %6 = load i8, i8* %HintBits, align 1, !tbaa !310
  %conv3 = zext i8 %6 to i32
  %shr = ashr i32 128, %conv3
  store i32 %shr, i32* %output_mask, align 4, !tbaa !54
  %7 = load i32, i32* %input_mask, align 4, !tbaa !54
  %conv4 = zext i32 %7 to i64
  %8 = load i64, i64* %val.addr, align 8, !tbaa !107
  %and = and i64 %conv4, %8
  %tobool5 = icmp ne i64 %and, 0
  br i1 %tobool5, label %if.then.6, label %if.else

if.then.6:                                        ; preds = %while.body
  %9 = load i32, i32* %output_mask, align 4, !tbaa !54
  %10 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %HintByte = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %10, i32 0, i32 4
  %11 = load i8, i8* %HintByte, align 1, !tbaa !309
  %idxprom = zext i8 %11 to i64
  %12 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %HintBuffer = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %12, i32 0, i32 2
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* %HintBuffer, i32 0, i64 %idxprom
  %13 = load i8, i8* %arrayidx, align 1, !tbaa !147
  %conv7 = sext i8 %13 to i32
  %or = or i32 %conv7, %9
  %conv8 = trunc i32 %or to i8
  store i8 %conv8, i8* %arrayidx, align 1, !tbaa !147
  br label %if.end.16

if.else:                                          ; preds = %while.body
  %14 = load i32, i32* %output_mask, align 4, !tbaa !54
  %neg = xor i32 %14, -1
  %15 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %HintByte9 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %15, i32 0, i32 4
  %16 = load i8, i8* %HintByte9, align 1, !tbaa !309
  %idxprom10 = zext i8 %16 to i64
  %17 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %HintBuffer11 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %17, i32 0, i32 2
  %arrayidx12 = getelementptr inbounds [256 x i8], [256 x i8]* %HintBuffer11, i32 0, i64 %idxprom10
  %18 = load i8, i8* %arrayidx12, align 1, !tbaa !147
  %conv13 = sext i8 %18 to i32
  %and14 = and i32 %conv13, %neg
  %conv15 = trunc i32 %and14 to i8
  store i8 %conv15, i8* %arrayidx12, align 1, !tbaa !147
  br label %if.end.16

if.end.16:                                        ; preds = %if.else, %if.then.6
  %19 = load i8, i8* %size_bits.addr, align 1, !tbaa !147
  %dec = add i8 %19, -1
  store i8 %dec, i8* %size_bits.addr, align 1, !tbaa !147
  %20 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %HintBits17 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %20, i32 0, i32 3
  %21 = load i8, i8* %HintBits17, align 1, !tbaa !310
  %inc = add i8 %21, 1
  store i8 %inc, i8* %HintBits17, align 1, !tbaa !310
  %22 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %HintBits18 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %22, i32 0, i32 3
  %23 = load i8, i8* %HintBits18, align 1, !tbaa !310
  %conv19 = zext i8 %23 to i32
  %cmp20 = icmp eq i32 %conv19, 8
  br i1 %cmp20, label %if.then.22, label %if.end.34

if.then.22:                                       ; preds = %if.end.16
  %24 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %HintByte23 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %24, i32 0, i32 4
  %25 = load i8, i8* %HintByte23, align 1, !tbaa !309
  %inc24 = add i8 %25, 1
  store i8 %inc24, i8* %HintByte23, align 1, !tbaa !309
  %26 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %HintByte25 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %26, i32 0, i32 4
  %27 = load i8, i8* %HintByte25, align 1, !tbaa !309
  %conv26 = zext i8 %27 to i32
  %cmp27 = icmp sgt i32 %conv26, 254
  br i1 %cmp27, label %if.then.29, label %if.end.32

if.then.29:                                       ; preds = %if.then.22
  %28 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %call = call i32 @flush_hint_stream(%struct.pdf_linearisation_s* %28) #7
  %29 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %HintBuffer30 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %29, i32 0, i32 2
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %HintBuffer30, i32 0, i32 0
  %call31 = call i8* @memset(i8* %arraydecay, i32 0, i64 256) #8
  br label %if.end.32

if.end.32:                                        ; preds = %if.then.29, %if.then.22
  %30 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %HintBits33 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %30, i32 0, i32 3
  store i8 0, i8* %HintBits33, align 1, !tbaa !310
  br label %if.end.34

if.end.34:                                        ; preds = %if.end.32, %if.end.16
  br label %while.cond

while.end:                                        ; preds = %while.cond
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %while.end, %if.then
  %31 = bitcast i32* %output_mask to i8*
  call void @llvm.lifetime.end(i64 4, i8* %31) #2
  %32 = bitcast i32* %input_mask to i8*
  call void @llvm.lifetime.end(i64 4, i8* %32) #2
  %33 = load i32, i32* %retval
  ret i32 %33
}

; Function Attrs: nounwind uwtable
define internal i32 @flush_hint_stream(%struct.pdf_linearisation_s* %linear_params) #1 {
entry:
  %linear_params.addr = alloca %struct.pdf_linearisation_s*, align 8
  %code = alloca i32, align 4
  store %struct.pdf_linearisation_s* %linear_params, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %0 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %HintBuffer = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %1, i32 0, i32 2
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %HintBuffer, i32 0, i32 0
  %2 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %HintByte = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %2, i32 0, i32 4
  %3 = load i8, i8* %HintByte, align 1, !tbaa !309
  %conv = zext i8 %3 to i64
  %4 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %sfile = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %4, i32 0, i32 0
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %sfile, align 8, !tbaa !290
  %call = call i64 @fwrite(i8* %arraydecay, i64 %conv, i64 1, %struct._IO_FILE* %5) #7
  %conv1 = trunc i64 %call to i32
  store i32 %conv1, i32* %code, align 4, !tbaa !54
  %6 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %HintBits = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %6, i32 0, i32 3
  store i8 0, i8* %HintBits, align 1, !tbaa !310
  %7 = load %struct.pdf_linearisation_s*, %struct.pdf_linearisation_s** %linear_params.addr, align 8, !tbaa !1
  %HintByte2 = getelementptr inbounds %struct.pdf_linearisation_s, %struct.pdf_linearisation_s* %7, i32 0, i32 4
  store i8 0, i8* %HintByte2, align 1, !tbaa !309
  %8 = load i32, i32* %code, align 4, !tbaa !54
  %9 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %9) #2
  ret i32 %8
}

; Function Attrs: nounwind
declare i32 @strcmp(i8*, i8*) #4

; Function Attrs: nounwind readonly
declare i32 @strncmp(i8*, i8*, i64) #3

; Function Attrs: nounwind readonly
declare i8* @strstr(i8*, i8*) #3

attributes #0 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }
attributes #3 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin }
attributes #8 = { nobuiltin nounwind }
attributes #9 = { nobuiltin nounwind readonly }
attributes #10 = { nobuiltin nounwind readnone }

!llvm.ident = !{!0}

!0 = !{!"clang version 3.7.0 (tags/RELEASE_370/final)"}
!1 = !{!2, !2, i64 0}
!2 = !{!"any pointer", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C/C++ TBAA"}
!5 = !{!6, !2, i64 24}
!6 = !{!"gx_device_pdf_s", !7, i64 0, !2, i64 8, !2, i64 16, !2, i64 24, !2, i64 32, !7, i64 40, !2, i64 48, !8, i64 56, !7, i64 80, !7, i64 84, !7, i64 88, !10, i64 96, !13, i64 816, !7, i64 832, !7, i64 836, !7, i64 840, !7, i64 844, !7, i64 848, !7, i64 852, !3, i64 856, !3, i64 864, !7, i64 880, !3, i64 884, !3, i64 892, !3, i64 900, !3, i64 908, !9, i64 928, !9, i64 936, !7, i64 944, !7, i64 948, !7, i64 952, !7, i64 956, !7, i64 960, !9, i64 968, !9, i64 976, !14, i64 984, !7, i64 1052, !7, i64 1056, !15, i64 1064, !2, i64 1104, !3, i64 1112, !17, i64 1120, !18, i64 1144, !2, i64 1728, !2, i64 1736, !3, i64 1744, !2, i64 5840, !2, i64 5848, !2, i64 5856, !7, i64 5864, !7, i64 5868, !19, i64 5872, !2, i64 7488, !7, i64 7496, !7, i64 7500, !7, i64 7504, !32, i64 7512, !32, i64 8144, !9, i64 8776, !9, i64 8784, !3, i64 8792, !3, i64 8796, !25, i64 8800, !7, i64 8816, !2, i64 8824, !9, i64 8832, !9, i64 8840, !3, i64 8848, !7, i64 8852, !7, i64 8856, !7, i64 8860, !7, i64 8864, !26, i64 8872, !37, i64 8880, !7, i64 9360, !26, i64 9368, !7, i64 9376, !7, i64 9380, !7, i64 9384, !7, i64 9388, !7, i64 9392, !7, i64 9396, !7, i64 9400, !7, i64 9404, !7, i64 9408, !7, i64 9412, !7, i64 9416, !7, i64 9420, !42, i64 9424, !42, i64 9440, !7, i64 9456, !7, i64 9460, !7, i64 9464, !9, i64 9472, !7, i64 9480, !7, i64 9484, !41, i64 9488, !41, i64 9504, !7, i64 9520, !7, i64 9524, !7, i64 9528, !7, i64 9532, !7, i64 9536, !7, i64 9540, !7, i64 9544, !7, i64 9548, !7, i64 9552, !7, i64 9556, !7, i64 9560, !7, i64 9564, !7, i64 9568, !9, i64 9576, !9, i64 9584, !9, i64 9592, !43, i64 9600, !41, i64 9616, !41, i64 9632, !7, i64 9648, !7, i64 9652, !7, i64 9656, !41, i64 9664, !7, i64 9680, !7, i64 9684, !3, i64 9688, !3, i64 9720, !3, i64 9752, !7, i64 9768, !7, i64 9772, !7, i64 9776, !44, i64 9784, !45, i64 9816, !45, i64 9856, !7, i64 9896, !7, i64 9900, !7, i64 9904, !7, i64 9908, !7, i64 9912, !9, i64 9920, !3, i64 9928, !7, i64 9960, !9, i64 9968, !9, i64 9976, !3, i64 9984, !3, i64 9988, !46, i64 9992, !46, i64 14120, !46, i64 18248, !46, i64 22376, !9, i64 26504, !2, i64 26512, !2, i64 26520, !2, i64 26528, !9, i64 26536, !7, i64 26544, !7, i64 26548, !9, i64 26552, !3, i64 26560, !9, i64 26568, !9, i64 26576, !3, i64 26584, !2, i64 26592, !47, i64 26600, !2, i64 26648, !7, i64 26656, !9, i64 26664, !3, i64 26672, !3, i64 28592, !3, i64 28632, !2, i64 28648, !2, i64 28656, !9, i64 28664, !2, i64 28672, !7, i64 28680, !7, i64 28684, !7, i64 28688, !7, i64 28692, !2, i64 28696, !2, i64 28704, !2, i64 28712, !3, i64 28720, !3, i64 28736, !2, i64 28752, !2, i64 28760, !2, i64 28768, !2, i64 28776, !2, i64 28784, !25, i64 28792, !2, i64 28808, !2, i64 28816, !7, i64 28824, !2, i64 28832, !2, i64 28840, !2, i64 28848, !7, i64 28856, !7, i64 28860, !7, i64 28864, !48, i64 28872, !7, i64 30384, !7, i64 30388, !7, i64 30392, !2, i64 30400, !7, i64 30408, !7, i64 30412, !7, i64 30416, !22, i64 30420, !2, i64 30448, !3, i64 30456, !7, i64 30460, !7, i64 30464, !2, i64 30472, !2, i64 30480, !24, i64 30488, !7, i64 30524, !44, i64 30528, !7, i64 30560, !7, i64 30564, !7, i64 30568, !2, i64 30576, !7, i64 30584, !7, i64 30588, !9, i64 30592, !7, i64 30600, !7, i64 30604, !7, i64 30608, !22, i64 30612, !26, i64 30640, !2, i64 30648, !38, i64 30656, !7, i64 30672, !2, i64 30680, !7, i64 30688, !7, i64 30692, !7, i64 30696, !7, i64 30700, !7, i64 30704, !7, i64 30708, !7, i64 30712, !7, i64 30716, !7, i64 30720, !7, i64 30724, !7, i64 30728, !7, i64 30732, !7, i64 30736, !7, i64 30740, !7, i64 30744, !7, i64 30748, !7, i64 30752, !7, i64 30756, !7, i64 30760, !7, i64 30764, !7, i64 30768, !7, i64 30772, !2, i64 30776, !7, i64 30784, !7, i64 30788}
!7 = !{!"int", !3, i64 0}
!8 = !{!"rc_header_s", !9, i64 0, !2, i64 8, !2, i64 16}
!9 = !{!"long", !3, i64 0}
!10 = !{!"gx_device_color_info_s", !7, i64 0, !7, i64 4, !3, i64 8, !11, i64 12, !3, i64 14, !7, i64 16, !7, i64 20, !7, i64 24, !7, i64 28, !12, i64 32, !3, i64 40, !3, i64 44, !3, i64 108, !3, i64 176, !2, i64 688, !3, i64 696, !9, i64 704, !7, i64 712}
!11 = !{!"short", !3, i64 0}
!12 = !{!"gx_device_anti_alias_info_s", !7, i64 0, !7, i64 4}
!13 = !{!"gx_device_cached_colors_s", !9, i64 0, !9, i64 8}
!14 = !{!"gx_stroked_gradient_recognizer_s", !7, i64 0, !3, i64 4, !3, i64 36}
!15 = !{!"gdev_space_params_s", !9, i64 0, !9, i64 8, !16, i64 16, !7, i64 32, !3, i64 36}
!16 = !{!"gx_band_params_s", !7, i64 0, !7, i64 4, !9, i64 8}
!17 = !{!"gx_page_device_procs_s", !2, i64 0, !2, i64 8, !2, i64 16}
!18 = !{!"gx_device_procs_s", !2, i64 0, !2, i64 8, !2, i64 16, !2, i64 24, !2, i64 32, !2, i64 40, !2, i64 48, !2, i64 56, !2, i64 64, !2, i64 72, !2, i64 80, !2, i64 88, !2, i64 96, !2, i64 104, !2, i64 112, !2, i64 120, !2, i64 128, !2, i64 136, !2, i64 144, !2, i64 152, !2, i64 160, !2, i64 168, !2, i64 176, !2, i64 184, !2, i64 192, !2, i64 200, !2, i64 208, !2, i64 216, !2, i64 224, !2, i64 232, !2, i64 240, !2, i64 248, !2, i64 256, !2, i64 264, !2, i64 272, !2, i64 280, !2, i64 288, !2, i64 296, !2, i64 304, !2, i64 312, !2, i64 320, !2, i64 328, !2, i64 336, !2, i64 344, !2, i64 352, !2, i64 360, !2, i64 368, !2, i64 376, !2, i64 384, !2, i64 392, !2, i64 400, !2, i64 408, !2, i64 416, !2, i64 424, !2, i64 432, !2, i64 440, !2, i64 448, !2, i64 456, !2, i64 464, !2, i64 472, !2, i64 480, !2, i64 488, !2, i64 496, !2, i64 504, !2, i64 512, !2, i64 520, !2, i64 528, !2, i64 536, !2, i64 544, !2, i64 552, !2, i64 560, !2, i64 568, !2, i64 576}
!19 = !{!"gs_imager_state_s", !7, i64 0, !2, i64 8, !2, i64 16, !20, i64 24, !7, i64 128, !24, i64 132, !7, i64 168, !25, i64 176, !25, i64 192, !7, i64 208, !7, i64 212, !11, i64 216, !3, i64 220, !27, i64 224, !27, i64 228, !28, i64 232, !9, i64 240, !7, i64 248, !7, i64 252, !7, i64 256, !2, i64 264, !7, i64 272, !7, i64 276, !7, i64 280, !7, i64 284, !7, i64 288, !7, i64 292, !21, i64 296, !29, i64 300, !7, i64 308, !7, i64 312, !7, i64 316, !21, i64 320, !7, i64 324, !7, i64 328, !2, i64 336, !2, i64 344, !2, i64 352, !2, i64 360, !2, i64 368, !3, i64 376, !2, i64 392, !2, i64 400, !7, i64 408, !2, i64 416, !2, i64 424, !30, i64 432, !3, i64 496, !2, i64 1008, !2, i64 1016, !31, i64 1024, !2, i64 1304, !2, i64 1312, !2, i64 1320, !2, i64 1328, !31, i64 1336}
!20 = !{!"gx_line_params_s", !21, i64 0, !3, i64 4, !3, i64 8, !3, i64 12, !3, i64 16, !7, i64 20, !21, i64 24, !21, i64 28, !21, i64 32, !7, i64 36, !22, i64 40, !23, i64 64}
!21 = !{!"float", !3, i64 0}
!22 = !{!"gs_matrix_s", !21, i64 0, !21, i64 4, !21, i64 8, !21, i64 12, !21, i64 16, !21, i64 20}
!23 = !{!"gx_dash_params_s", !2, i64 0, !7, i64 8, !21, i64 12, !7, i64 16, !21, i64 20, !7, i64 24, !7, i64 28, !21, i64 32}
!24 = !{!"gs_matrix_fixed_s", !21, i64 0, !21, i64 4, !21, i64 8, !21, i64 12, !21, i64 16, !21, i64 20, !7, i64 24, !7, i64 28, !7, i64 32}
!25 = !{!"gs_point_s", !26, i64 0, !26, i64 8}
!26 = !{!"double", !3, i64 0}
!27 = !{!"gs_transparency_source_s", !21, i64 0}
!28 = !{!"gs_xstate_trans_flags", !7, i64 0, !7, i64 4}
!29 = !{!"gs_fixed_point_s", !7, i64 0, !7, i64 4}
!30 = !{!"gx_transfer_s", !7, i64 0, !2, i64 8, !7, i64 16, !2, i64 24, !7, i64 32, !2, i64 40, !7, i64 48, !2, i64 56}
!31 = !{!"gs_devicen_color_map_s", !7, i64 0, !3, i64 4, !7, i64 8, !7, i64 12, !9, i64 16, !3, i64 24}
!32 = !{!"gx_hl_saved_color_s", !9, i64 0, !9, i64 8, !7, i64 16, !33, i64 24, !35, i64 288}
!33 = !{!"gs_client_color_s", !2, i64 0, !34, i64 8}
!34 = !{!"gs_paint_color_s", !3, i64 0}
!35 = !{!"gx_device_color_saved_s", !2, i64 0, !3, i64 8, !36, i64 336}
!36 = !{!"gs_int_point_s", !7, i64 0, !7, i64 4}
!37 = !{!"psdf_distiller_params_s", !7, i64 0, !3, i64 4, !3, i64 8, !7, i64 12, !3, i64 16, !7, i64 20, !7, i64 24, !9, i64 32, !7, i64 40, !7, i64 44, !7, i64 48, !7, i64 52, !7, i64 56, !38, i64 64, !38, i64 80, !38, i64 96, !38, i64 112, !3, i64 128, !7, i64 132, !7, i64 136, !3, i64 140, !3, i64 144, !39, i64 152, !7, i64 232, !7, i64 236, !39, i64 240, !39, i64 320, !40, i64 400, !40, i64 416, !3, i64 432, !7, i64 436, !7, i64 440, !7, i64 444, !41, i64 448, !40, i64 464}
!38 = !{!"gs_const_string_s", !2, i64 0, !7, i64 8}
!39 = !{!"psdf_image_params_s", !2, i64 0, !7, i64 8, !7, i64 12, !7, i64 16, !2, i64 24, !7, i64 32, !21, i64 36, !3, i64 40, !7, i64 44, !2, i64 48, !7, i64 56, !2, i64 64, !2, i64 72}
!40 = !{!"gs_param_string_array_s", !2, i64 0, !7, i64 8, !7, i64 12}
!41 = !{!"gs_param_string_s", !2, i64 0, !7, i64 8, !7, i64 12}
!42 = !{!"gs_param_float_array_s", !2, i64 0, !7, i64 8, !7, i64 12}
!43 = !{!"gs_param_int_array_s", !2, i64 0, !7, i64 8, !7, i64 12}
!44 = !{!"gs_rect_s", !25, i64 0, !25, i64 16}
!45 = !{!"pdf_page_dsc_info_s", !7, i64 0, !7, i64 4, !44, i64 8}
!46 = !{!"pdf_temp_file_s", !3, i64 0, !2, i64 4096, !2, i64 4104, !2, i64 4112, !2, i64 4120}
!47 = !{!"pdf_text_rotation_s", !3, i64 0, !7, i64 40}
!48 = !{!"pdf_viewer_state_s", !7, i64 0, !3, i64 8, !21, i64 40, !21, i64 44, !3, i64 48, !9, i64 56, !9, i64 64, !9, i64 72, !7, i64 80, !21, i64 84, !21, i64 88, !7, i64 92, !7, i64 96, !7, i64 100, !7, i64 104, !7, i64 108, !7, i64 112, !32, i64 120, !32, i64 752, !20, i64 1384, !2, i64 1488, !7, i64 1496, !9, i64 1504}
!49 = !{!50, !2, i64 32}
!50 = !{!"gs_memory_s", !2, i64 0, !51, i64 8, !2, i64 192, !2, i64 200, !2, i64 208}
!51 = !{!"gs_memory_procs_s", !2, i64 0, !2, i64 8, !2, i64 16, !2, i64 24, !2, i64 32, !2, i64 40, !2, i64 48, !2, i64 56, !2, i64 64, !2, i64 72, !2, i64 80, !2, i64 88, !2, i64 96, !2, i64 104, !2, i64 112, !2, i64 120, !2, i64 128, !2, i64 136, !2, i64 144, !2, i64 152, !2, i64 160, !2, i64 168, !2, i64 176}
!52 = !{!6, !2, i64 1728}
!53 = !{!6, !7, i64 30788}
!54 = !{!7, !7, i64 0}
!55 = !{!6, !7, i64 9684}
!56 = !{!6, !2, i64 5848}
!57 = !{!6, !2, i64 1736}
!58 = !{!6, !3, i64 8796}
!59 = !{!6, !3, i64 8792}
!60 = !{!6, !7, i64 8816}
!61 = !{!6, !2, i64 28752}
!62 = !{!6, !2, i64 28760}
!63 = !{!6, !2, i64 28768}
!64 = !{!50, !2, i64 64}
!65 = !{!6, !2, i64 28848}
!66 = !{!6, !7, i64 28856}
!67 = !{!6, !2, i64 28776}
!68 = !{!6, !7, i64 9624}
!69 = !{!6, !7, i64 9640}
!70 = !{!6, !7, i64 9648}
!71 = !{!6, !9, i64 26536}
!72 = !{!6, !7, i64 26544}
!73 = !{!6, !2, i64 26592}
!74 = !{!6, !7, i64 30388}
!75 = !{!50, !2, i64 104}
!76 = !{!6, !2, i64 30400}
!77 = !{!6, !2, i64 26648}
!78 = !{!6, !7, i64 26656}
!79 = !{!6, !2, i64 28672}
!80 = !{!6, !7, i64 28684}
!81 = !{!82, !9, i64 0}
!82 = !{!"pdf_outline_level_s", !83, i64 0, !83, i64 56, !7, i64 112}
!83 = !{!"pdf_outline_node_s", !9, i64 0, !9, i64 8, !9, i64 16, !9, i64 24, !9, i64 32, !7, i64 40, !2, i64 48}
!84 = !{!82, !7, i64 112}
!85 = !{!82, !2, i64 48}
!86 = !{!82, !2, i64 104}
!87 = !{!6, !7, i64 28680}
!88 = !{!6, !7, i64 28688}
!89 = !{!6, !7, i64 28692}
!90 = !{!6, !2, i64 28696}
!91 = !{!6, !2, i64 28704}
!92 = !{!6, !2, i64 28712}
!93 = !{!6, !2, i64 28816}
!94 = !{!6, !7, i64 28824}
!95 = !{!6, !2, i64 28832}
!96 = !{!6, !2, i64 28840}
!97 = !{!6, !7, i64 832}
!98 = !{!6, !26, i64 9784}
!99 = !{!6, !7, i64 836}
!100 = !{!6, !26, i64 9792}
!101 = !{!6, !26, i64 9800}
!102 = !{!6, !26, i64 9808}
!103 = !{!6, !7, i64 956}
!104 = !{!105, !2, i64 24}
!105 = !{!"gx_device_s", !7, i64 0, !2, i64 8, !2, i64 16, !2, i64 24, !2, i64 32, !7, i64 40, !2, i64 48, !8, i64 56, !7, i64 80, !7, i64 84, !7, i64 88, !10, i64 96, !13, i64 816, !7, i64 832, !7, i64 836, !7, i64 840, !7, i64 844, !7, i64 848, !7, i64 852, !3, i64 856, !3, i64 864, !7, i64 880, !3, i64 884, !3, i64 892, !3, i64 900, !3, i64 908, !9, i64 928, !9, i64 936, !7, i64 944, !7, i64 948, !7, i64 952, !7, i64 956, !7, i64 960, !9, i64 968, !9, i64 976, !14, i64 984, !7, i64 1052, !7, i64 1056, !15, i64 1064, !2, i64 1104, !3, i64 1112, !17, i64 1120, !18, i64 1144}
!106 = !{!6, !2, i64 14088}
!107 = !{!9, !9, i64 0}
!108 = !{!6, !2, i64 26512}
!109 = !{!110, !9, i64 8}
!110 = !{!"cos_dict_s", !2, i64 0, !9, i64 8, !2, i64 16, !2, i64 24, !2, i64 32, !2, i64 40, !3, i64 48, !3, i64 49, !3, i64 50, !9, i64 56, !2, i64 64, !111, i64 72, !7, i64 160, !3, i64 164, !7, i64 180, !3, i64 184}
!111 = !{!"gs_md5_state_s", !3, i64 0, !3, i64 8, !3, i64 24}
!112 = !{!6, !2, i64 26520}
!113 = !{!6, !2, i64 26528}
!114 = !{!6, !9, i64 26552}
!115 = !{!116, !9, i64 4408}
!116 = !{!"pdf_linearisation_s", !2, i64 0, !46, i64 8, !3, i64 4136, !3, i64 4392, !3, i64 4393, !9, i64 4400, !9, i64 4408, !9, i64 4416, !9, i64 4424, !9, i64 4432, !9, i64 4440, !9, i64 4448, !9, i64 4456, !9, i64 4464, !9, i64 4472, !9, i64 4480, !2, i64 4488, !9, i64 4496, !9, i64 4504, !9, i64 4512, !9, i64 4520, !9, i64 4528, !9, i64 4536, !9, i64 4544, !117, i64 4552, !7, i64 4612, !2, i64 4616, !118, i64 4624, !7, i64 4664, !2, i64 4672}
!117 = !{!"page_hint_stream_header_s", !7, i64 0, !7, i64 4, !11, i64 8, !7, i64 12, !7, i64 16, !11, i64 20, !7, i64 24, !7, i64 28, !11, i64 32, !7, i64 36, !7, i64 40, !11, i64 44, !7, i64 48, !7, i64 52, !11, i64 56}
!118 = !{!"shared_hint_stream_header_s", !7, i64 0, !9, i64 8, !7, i64 16, !7, i64 20, !7, i64 24, !7, i64 28, !11, i64 32}
!119 = !{!116, !9, i64 4416}
!120 = !{!116, !9, i64 4400}
!121 = !{!6, !7, i64 9524}
!122 = !{!6, !7, i64 9548}
!123 = !{!6, !7, i64 9484}
!124 = !{!6, !7, i64 9536}
!125 = !{!126, !2, i64 0}
!126 = !{!"pdf_page_s", !2, i64 0, !25, i64 8, !3, i64 24, !9, i64 32, !3, i64 40, !9, i64 96, !2, i64 104, !47, i64 112, !45, i64 160, !7, i64 200, !7, i64 204}
!127 = !{!6, !7, i64 9816}
!128 = !{!6, !7, i64 9820}
!129 = !{!6, !7, i64 26640}
!130 = !{!82, !9, i64 56}
!131 = !{!132, !2, i64 0}
!132 = !{!"pdf_article_s", !2, i64 0, !2, i64 8, !133, i64 16, !133, i64 88}
!133 = !{!"pdf_bead_s", !9, i64 0, !9, i64 8, !9, i64 16, !9, i64 24, !9, i64 32, !44, i64 40}
!134 = !{!6, !26, i64 9368}
!135 = !{!136, !9, i64 8}
!136 = !{!"cos_array_s", !2, i64 0, !9, i64 8, !2, i64 16, !2, i64 24, !2, i64 32, !2, i64 40, !3, i64 48, !3, i64 49, !3, i64 50, !9, i64 56, !2, i64 64, !111, i64 72, !7, i64 160, !3, i64 164, !7, i64 180, !3, i64 184}
!137 = !{!132, !2, i64 8}
!138 = !{!50, !2, i64 24}
!139 = !{!6, !2, i64 18224}
!140 = !{!141, !2, i64 208}
!141 = !{!"stream_s", !2, i64 0, !2, i64 8, !2, i64 16, !7, i64 24, !3, i64 28, !3, i64 112, !2, i64 136, !7, i64 144, !7, i64 148, !11, i64 152, !3, i64 154, !3, i64 155, !142, i64 160, !9, i64 176, !143, i64 184, !2, i64 240, !7, i64 248, !7, i64 252, !2, i64 256, !11, i64 264, !11, i64 266, !2, i64 272, !2, i64 280, !7, i64 288, !7, i64 292, !2, i64 296, !2, i64 304, !38, i64 312, !7, i64 328, !9, i64 336, !9, i64 344}
!142 = !{!"gs_string_s", !2, i64 0, !7, i64 8}
!143 = !{!"", !2, i64 0, !2, i64 8, !2, i64 16, !2, i64 24, !2, i64 32, !2, i64 40, !2, i64 48}
!144 = !{!6, !2, i64 18216}
!145 = !{!6, !2, i64 9328}
!146 = !{!6, !7, i64 9336}
!147 = !{!3, !3, i64 0}
!148 = !{!149, !7, i64 24}
!149 = !{!"pdf_resource_s", !2, i64 0, !2, i64 8, !9, i64 16, !7, i64 24, !7, i64 28, !3, i64 32, !9, i64 56, !2, i64 64}
!150 = !{!149, !2, i64 64}
!151 = !{!152, !3, i64 50}
!152 = !{!"cos_object_s", !2, i64 0, !9, i64 8, !2, i64 16, !2, i64 24, !2, i64 32, !2, i64 40, !3, i64 48, !3, i64 49, !3, i64 50, !9, i64 56, !2, i64 64, !111, i64 72, !7, i64 160, !3, i64 164, !7, i64 180, !3, i64 184}
!153 = !{!6, !7, i64 9528}
!154 = !{!126, !26, i64 8}
!155 = !{!126, !26, i64 16}
!156 = !{!6, !7, i64 9352}
!157 = !{!6, !2, i64 9344}
!158 = !{!41, !2, i64 0}
!159 = !{!41, !7, i64 8}
!160 = !{!152, !9, i64 8}
!161 = !{!149, !2, i64 0}
!162 = !{!6, !7, i64 30764}
!163 = !{!6, !9, i64 26504}
!164 = !{!116, !9, i64 4472}
!165 = !{!116, !2, i64 4488}
!166 = !{!6, !7, i64 9768}
!167 = !{!6, !7, i64 9656}
!168 = !{!6, !7, i64 9652}
!169 = !{!6, !9, i64 9472}
!170 = !{!6, !7, i64 30672}
!171 = !{!116, !9, i64 4496}
!172 = !{!6, !7, i64 30784}
!173 = !{!6, !2, i64 30776}
!174 = !{!175, !2, i64 8}
!175 = !{!"linearisation_record_s", !7, i64 0, !7, i64 4, !2, i64 8, !7, i64 16, !9, i64 24, !9, i64 32, !9, i64 40}
!176 = !{!6, !2, i64 28648}
!177 = !{!149, !2, i64 8}
!178 = !{!6, !2, i64 28784}
!179 = !{!126, !2, i64 104}
!180 = !{!6, !7, i64 28860}
!181 = !{!50, !2, i64 200}
!182 = !{!48, !2, i64 1488}
!183 = !{!141, !2, i64 240}
!184 = !{!6, !7, i64 26548}
!185 = !{!41, !7, i64 12}
!186 = !{i64 0, i64 4, !54, i64 4, i64 4, !54, i64 8, i64 4, !54, i64 12, i64 4, !54, i64 16, i64 4, !54, i64 20, i64 4, !54, i64 24, i64 4, !54, i64 28, i64 4, !54, i64 32, i64 4, !54, i64 40, i64 8, !107, i64 48, i64 8, !1}
!187 = !{!188, !7, i64 32}
!188 = !{!"tm", !7, i64 0, !7, i64 4, !7, i64 8, !7, i64 12, !7, i64 16, !7, i64 20, !7, i64 24, !7, i64 28, !7, i64 32, !9, i64 40, !2, i64 48}
!189 = !{!188, !7, i64 20}
!190 = !{!188, !7, i64 16}
!191 = !{!188, !7, i64 12}
!192 = !{!188, !7, i64 8}
!193 = !{!188, !7, i64 4}
!194 = !{!188, !7, i64 0}
!195 = !{!6, !3, i64 30456}
!196 = !{i64 0, i64 4, !54, i64 4, i64 4, !54, i64 8, i64 4, !147, i64 12, i64 2, !197, i64 14, i64 1, !147, i64 16, i64 4, !54, i64 20, i64 4, !54, i64 24, i64 4, !54, i64 28, i64 4, !54, i64 32, i64 4, !54, i64 36, i64 4, !54, i64 40, i64 4, !147, i64 44, i64 64, !147, i64 108, i64 64, !147, i64 176, i64 512, !147, i64 688, i64 8, !1, i64 696, i64 4, !147, i64 704, i64 8, !107, i64 712, i64 4, !54}
!197 = !{!11, !11, i64 0}
!198 = !{!6, !3, i64 136}
!199 = !{!6, !2, i64 1184}
!200 = !{!6, !2, i64 1192}
!201 = !{!6, !2, i64 1264}
!202 = !{!6, !2, i64 1536}
!203 = !{!6, !2, i64 1544}
!204 = !{!6, !2, i64 1552}
!205 = !{!6, !2, i64 1560}
!206 = !{!6, !2, i64 784}
!207 = !{!50, !2, i64 16}
!208 = !{!175, !7, i64 0}
!209 = !{!175, !7, i64 4}
!210 = !{!211, !2, i64 0}
!211 = !{!"enum_ptr_s", !2, i64 0, !7, i64 8}
!212 = !{!213, !2, i64 32}
!213 = !{!"gs_memory_struct_type_s", !7, i64 0, !2, i64 8, !2, i64 16, !2, i64 24, !2, i64 32, !2, i64 40, !2, i64 48, !2, i64 56}
!214 = !{!6, !2, i64 18232}
!215 = !{!6, !2, i64 18240}
!216 = !{!6, !2, i64 22352}
!217 = !{!6, !2, i64 22360}
!218 = !{!6, !2, i64 26480}
!219 = !{!6, !2, i64 26488}
!220 = !{!6, !2, i64 26496}
!221 = !{!6, !2, i64 28808}
!222 = !{!6, !2, i64 30448}
!223 = !{!6, !2, i64 30472}
!224 = !{!6, !2, i64 30480}
!225 = !{!6, !2, i64 30648}
!226 = !{!6, !2, i64 9424}
!227 = !{!6, !2, i64 9440}
!228 = !{!6, !2, i64 9600}
!229 = !{!6, !7, i64 9628}
!230 = !{!211, !7, i64 8}
!231 = !{!6, !7, i64 9644}
!232 = !{!6, !7, i64 9676}
!233 = !{!6, !7, i64 9500}
!234 = !{!6, !7, i64 9516}
!235 = !{!38, !2, i64 0}
!236 = !{!38, !7, i64 8}
!237 = !{!213, !2, i64 40}
!238 = !{!239, !2, i64 0}
!239 = !{!"gc_procs_common_s", !2, i64 0, !2, i64 8, !2, i64 16, !2, i64 24}
!240 = !{!239, !2, i64 24}
!241 = !{!239, !2, i64 16}
!242 = !{!46, !2, i64 4096}
!243 = !{!46, !2, i64 4104}
!244 = !{!46, !2, i64 4112}
!245 = !{!6, !7, i64 9560}
!246 = !{!6, !7, i64 9680}
!247 = !{i64 0, i64 4, !54, i64 4, i64 4, !54, i64 8, i64 8, !248, i64 16, i64 8, !248, i64 24, i64 8, !248, i64 32, i64 8, !248}
!248 = !{!26, !26, i64 0}
!249 = !{!6, !3, i64 26584}
!250 = !{!6, !9, i64 8776}
!251 = !{!6, !9, i64 8784}
!252 = !{!141, !3, i64 155}
!253 = !{!141, !2, i64 304}
!254 = !{!46, !2, i64 4120}
!255 = !{!6, !3, i64 26560}
!256 = !{!6, !7, i64 30712}
!257 = !{!21, !21, i64 0}
!258 = !{!126, !9, i64 32}
!259 = !{!6, !7, i64 948}
!260 = !{!126, !7, i64 200}
!261 = !{!6, !7, i64 944}
!262 = !{!126, !7, i64 204}
!263 = !{!6, !9, i64 26568}
!264 = !{!6, !3, i64 8884}
!265 = !{!126, !7, i64 152}
!266 = !{!126, !7, i64 160}
!267 = !{!126, !7, i64 164}
!268 = !{!126, !26, i64 168}
!269 = !{!126, !26, i64 184}
!270 = !{!126, !26, i64 176}
!271 = !{!126, !26, i64 192}
!272 = !{i64 0, i64 8, !248, i64 8, i64 8, !248, i64 16, i64 8, !248, i64 24, i64 8, !248}
!273 = !{!6, !2, i64 5840}
!274 = !{!6, !2, i64 22344}
!275 = !{!6, !2, i64 26472}
!276 = !{!277, !3, i64 0}
!277 = !{!"cos_value_s", !3, i64 0, !3, i64 8}
!278 = !{!142, !2, i64 0}
!279 = !{!142, !7, i64 8}
!280 = !{!6, !7, i64 9432}
!281 = !{!6, !7, i64 9456}
!282 = !{!6, !7, i64 9448}
!283 = !{!6, !7, i64 30724}
!284 = !{!6, !7, i64 9568}
!285 = !{!126, !9, i64 96}
!286 = !{!126, !3, i64 24}
!287 = !{!45, !7, i64 4}
!288 = !{!45, !7, i64 0}
!289 = !{!47, !7, i64 40}
!290 = !{!116, !2, i64 0}
!291 = !{!116, !9, i64 4480}
!292 = !{!116, !2, i64 4112}
!293 = !{!116, !9, i64 4424}
!294 = !{!116, !9, i64 4432}
!295 = !{!116, !9, i64 4448}
!296 = !{!116, !9, i64 4440}
!297 = !{!116, !9, i64 4464}
!298 = !{!116, !9, i64 4456}
!299 = !{!175, !9, i64 24}
!300 = !{!175, !9, i64 40}
!301 = !{!175, !7, i64 16}
!302 = !{!116, !2, i64 4104}
!303 = !{!6, !7, i64 8852}
!304 = !{!175, !9, i64 32}
!305 = !{!116, !9, i64 4520}
!306 = !{!116, !9, i64 4504}
!307 = !{!116, !9, i64 4512}
!308 = !{!116, !9, i64 4544}
!309 = !{!116, !3, i64 4393}
!310 = !{!116, !3, i64 4392}
!311 = !{!116, !2, i64 4616}
!312 = !{!116, !7, i64 4612}
!313 = !{!116, !2, i64 4672}
!314 = !{!116, !7, i64 4664}
!315 = !{!116, !7, i64 4552}
!316 = !{!116, !7, i64 4564}
!317 = !{!116, !7, i64 4576}
!318 = !{!116, !7, i64 4588}
!319 = !{!320, !9, i64 24}
!320 = !{!"page_hint_stream_s", !7, i64 0, !7, i64 4, !7, i64 8, !2, i64 16, !9, i64 24, !9, i64 32}
!321 = !{!320, !9, i64 32}
!322 = !{!320, !2, i64 16}
!323 = !{!320, !7, i64 8}
!324 = !{!325, !7, i64 0}
!325 = !{!"share_hint_stream_s", !7, i64 0, !9, i64 8, !7, i64 16}
!326 = !{!325, !9, i64 8}
!327 = !{!325, !7, i64 16}
!328 = !{!320, !7, i64 0}
!329 = !{!320, !7, i64 4}
!330 = !{!116, !7, i64 4640}
!331 = !{!116, !7, i64 4604}
!332 = !{!116, !7, i64 4556}
!333 = !{!116, !7, i64 4568}
!334 = !{!116, !7, i64 4580}
!335 = !{!116, !7, i64 4592}
!336 = !{!116, !7, i64 4600}
!337 = !{!116, !11, i64 4560}
!338 = !{!116, !11, i64 4572}
!339 = !{!116, !11, i64 4584}
!340 = !{!116, !11, i64 4596}
!341 = !{!116, !11, i64 4608}
!342 = !{!116, !7, i64 4624}
!343 = !{!116, !7, i64 4648}
!344 = !{!116, !7, i64 4652}
!345 = !{!116, !9, i64 4632}
!346 = !{!116, !7, i64 4644}
!347 = !{!116, !11, i64 4656}
!348 = !{!116, !9, i64 4536}
!349 = !{!116, !9, i64 4528}
