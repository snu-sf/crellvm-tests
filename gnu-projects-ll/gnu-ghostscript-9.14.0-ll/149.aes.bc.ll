; ModuleID = './aes.bc'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.aes_context = type { i32, i64*, [68 x i64] }

@RCON = internal constant [10 x i64] [i64 1, i64 2, i64 4, i64 8, i64 16, i64 32, i64 64, i64 128, i64 27, i64 54], align 16
@FSb = internal constant [256 x i8] c"c|w{\F2ko\C50\01g+\FE\D7\ABv\CA\82\C9}\FAYG\F0\AD\D4\A2\AF\9C\A4r\C0\B7\FD\93&6?\F7\CC4\A5\E5\F1q\D81\15\04\C7#\C3\18\96\05\9A\07\12\80\E2\EB'\B2u\09\83,\1A\1BnZ\A0R;\D6\B3)\E3/\84S\D1\00\ED \FC\B1[j\CB\BE9JLX\CF\D0\EF\AA\FBCM3\85E\F9\02\7FP<\9F\A8Q\A3@\8F\92\9D8\F5\BC\B6\DA!\10\FF\F3\D2\CD\0C\13\EC_\97D\17\C4\A7~=d]\19s`\81O\DC\22*\90\88F\EE\B8\14\DE^\0B\DB\E02:\0AI\06$\5C\C2\D3\ACb\91\95\E4y\E7\C87m\8D\D5N\A9lV\F4\EAez\AE\08\BAx%.\1C\A6\B4\C6\E8\DDt\1FK\BD\8B\8Ap>\B5fH\03\F6\0Ea5W\B9\86\C1\1D\9E\E1\F8\98\11i\D9\8E\94\9B\1E\87\E9\CEU(\DF\8C\A1\89\0D\BF\E6BhA\99-\0F\B0T\BB\16", align 16
@RT0 = internal constant [256 x i64] [i64 1353184337, i64 1399144830, i64 3282310938, i64 2522752826, i64 3412831035, i64 4047871263, i64 2874735276, i64 2466505547, i64 1442459680, i64 4134368941, i64 2440481928, i64 625738485, i64 4242007375, i64 3620416197, i64 2151953702, i64 2409849525, i64 1230680542, i64 1729870373, i64 2551114309, i64 3787521629, i64 41234371, i64 317738113, i64 2744600205, i64 3338261355, i64 3881799427, i64 2510066197, i64 3950669247, i64 3663286933, i64 763608788, i64 3542185048, i64 694804553, i64 1154009486, i64 1787413109, i64 2021232372, i64 1799248025, i64 3715217703, i64 3058688446, i64 397248752, i64 1722556617, i64 3023752829, i64 407560035, i64 2184256229, i64 1613975959, i64 1165972322, i64 3765920945, i64 2226023355, i64 480281086, i64 2485848313, i64 1483229296, i64 436028815, i64 2272059028, i64 3086515026, i64 601060267, i64 3791801202, i64 1468997603, i64 715871590, i64 120122290, i64 63092015, i64 2591802758, i64 2768779219, i64 4068943920, i64 2997206819, i64 3127509762, i64 1552029421, i64 723308426, i64 2461301159, i64 4042393587, i64 2715969870, i64 3455375973, i64 3586000134, i64 526529745, i64 2331944644, i64 2639474228, i64 2689987490, i64 853641733, i64 1978398372, i64 971801355, i64 2867814464, i64 111112542, i64 1360031421, i64 4186579262, i64 1023860118, i64 2919579357, i64 1186850381, i64 3045938321, i64 90031217, i64 1876166148, i64 4279586912, i64 620468249, i64 2548678102, i64 3426959497, i64 2006899047, i64 3175278768, i64 2290845959, i64 945494503, i64 3689859193, i64 1191869601, i64 3910091388, i64 3374220536, i64 0, i64 2206629897, i64 1223502642, i64 2893025566, i64 1316117100, i64 4227796733, i64 1446544655, i64 517320253, i64 658058550, i64 1691946762, i64 564550760, i64 3511966619, i64 976107044, i64 2976320012, i64 266819475, i64 3533106868, i64 2660342555, i64 1338359936, i64 2720062561, i64 1766553434, i64 370807324, i64 179999714, i64 3844776128, i64 1138762300, i64 488053522, i64 185403662, i64 2915535858, i64 3114841645, i64 3366526484, i64 2233069911, i64 1275557295, i64 3151862254, i64 4250959779, i64 2670068215, i64 3170202204, i64 3309004356, i64 880737115, i64 1982415755, i64 3703972811, i64 1761406390, i64 1676797112, i64 3403428311, i64 277177154, i64 1076008723, i64 538035844, i64 2099530373, i64 4164795346, i64 288553390, i64 1839278535, i64 1261411869, i64 4080055004, i64 3964831245, i64 3504587127, i64 1813426987, i64 2579067049, i64 4199060497, i64 577038663, i64 3297574056, i64 440397984, i64 3626794326, i64 4019204898, i64 3343796615, i64 3251714265, i64 4272081548, i64 906744984, i64 3481400742, i64 685669029, i64 646887386, i64 2764025151, i64 3835509292, i64 227702864, i64 2613862250, i64 1648787028, i64 3256061430, i64 3904428176, i64 1593260334, i64 4121936770, i64 3196083615, i64 2090061929, i64 2838353263, i64 3004310991, i64 999926984, i64 2809993232, i64 1852021992, i64 2075868123, i64 158869197, i64 4095236462, i64 28809964, i64 2828685187, i64 1701746150, i64 2129067946, i64 147831841, i64 3873969647, i64 3650873274, i64 3459673930, i64 3557400554, i64 3598495785, i64 2947720241, i64 824393514, i64 815048134, i64 3227951669, i64 935087732, i64 2798289660, i64 2966458592, i64 366520115, i64 1251476721, i64 4158319681, i64 240176511, i64 804688151, i64 2379631990, i64 1303441219, i64 1414376140, i64 3741619940, i64 3820343710, i64 461924940, i64 3089050817, i64 2136040774, i64 82468509, i64 1563790337, i64 1937016826, i64 776014843, i64 1511876531, i64 1389550482, i64 861278441, i64 323475053, i64 2355222426, i64 2047648055, i64 2383738969, i64 2302415851, i64 3995576782, i64 902390199, i64 3991215329, i64 1018251130, i64 1507840668, i64 1064563285, i64 2043548696, i64 3208103795, i64 3939366739, i64 1537932639, i64 342834655, i64 2262516856, i64 2180231114, i64 1053059257, i64 741614648, i64 1598071746, i64 1925389590, i64 203809468, i64 2336832552, i64 1100287487, i64 1895934009, i64 3736275976, i64 2632234200, i64 2428589668, i64 1636092795, i64 1890988757, i64 1952214088, i64 1113045200], align 16
@RT1 = internal constant [256 x i64] [i64 2817806672, i64 1698790995, i64 2752977603, i64 1579629206, i64 1806384075, i64 1167925233, i64 1492823211, i64 65227667, i64 4197458005, i64 1836494326, i64 1993115793, i64 1275262245, i64 3622129660, i64 3408578007, i64 1144333952, i64 2741155215, i64 1521606217, i64 465184103, i64 250234264, i64 3237895649, i64 1966064386, i64 4031545618, i64 2537983395, i64 4191382470, i64 1603208167, i64 2626819477, i64 2054012907, i64 1498584538, i64 2210321453, i64 561273043, i64 1776306473, i64 3368652356, i64 2311222634, i64 2039411832, i64 1045993835, i64 1907959773, i64 1340194486, i64 2911432727, i64 2887829862, i64 986611124, i64 1256153880, i64 823846274, i64 860985184, i64 2136171077, i64 2003087840, i64 2926295940, i64 2692873756, i64 722008468, i64 1749577816, i64 4249194265, i64 1826526343, i64 4168831671, i64 3547573027, i64 38499042, i64 2401231703, i64 2874500650, i64 686535175, i64 3266653955, i64 2076542618, i64 137876389, i64 2267558130, i64 2780767154, i64 1778582202, i64 2182540636, i64 483363371, i64 3027871634, i64 4060607472, i64 3798552225, i64 4107953613, i64 3188000469, i64 1647628575, i64 4272342154, i64 1395537053, i64 1442030240, i64 3783918898, i64 3958809717, i64 3968011065, i64 4016062634, i64 2675006982, i64 275692881, i64 2317434617, i64 115185213, i64 88006062, i64 3185986886, i64 2371129781, i64 1573155077, i64 3557164143, i64 357589247, i64 4221049124, i64 3921532567, i64 1128303052, i64 2665047927, i64 1122545853, i64 2341013384, i64 1528424248, i64 4006115803, i64 175939911, i64 256015593, i64 512030921, i64 0, i64 2256537987, i64 3979031112, i64 1880170156, i64 1918528590, i64 4279172603, i64 948244310, i64 3584965918, i64 959264295, i64 3641641572, i64 2791073825, i64 1415289809, i64 775300154, i64 1728711857, i64 3881276175, i64 2532226258, i64 2442861470, i64 3317727311, i64 551313826, i64 1266113129, i64 437394454, i64 3130253834, i64 715178213, i64 3760340035, i64 387650077, i64 218697227, i64 3347837613, i64 2830511545, i64 2837320904, i64 435246981, i64 125153100, i64 3717852859, i64 1618977789, i64 637663135, i64 4117912764, i64 996558021, i64 2130402100, i64 692292470, i64 3324234716, i64 4243437160, i64 4058298467, i64 3694254026, i64 2237874704, i64 580326208, i64 298222624, i64 608863613, i64 1035719416, i64 855223825, i64 2703869805, i64 798891339, i64 817028339, i64 1384517100, i64 3821107152, i64 380840812, i64 3111168409, i64 1217663482, i64 1693009698, i64 2365368516, i64 1072734234, i64 746411736, i64 2419270383, i64 1313441735, i64 3510163905, i64 2731183358, i64 198481974, i64 2180359887, i64 3732579624, i64 2394413606, i64 3215802276, i64 2637835492, i64 2457358349, i64 3428805275, i64 1182684258, i64 328070850, i64 3101200616, i64 4147719774, i64 2948825845, i64 2153619390, i64 2479909244, i64 768962473, i64 304467891, i64 2578237499, i64 2098729127, i64 1671227502, i64 3141262203, i64 2015808777, i64 408514292, i64 3080383489, i64 2588902312, i64 1855317605, i64 3875515006, i64 3485212936, i64 3893751782, i64 2615655129, i64 913263310, i64 161475284, i64 2091919830, i64 2997105071, i64 591342129, i64 2493892144, i64 1721906624, i64 3159258167, i64 3397581990, i64 3499155632, i64 3634836245, i64 2550460746, i64 3672916471, i64 1355644686, i64 4136703791, i64 3595400845, i64 2968470349, i64 1303039060, i64 76997855, i64 3050413795, i64 2288667675, i64 523026872, i64 1365591679, i64 3932069124, i64 898367837, i64 1955068531, i64 1091304238, i64 493335386, i64 3537605202, i64 1443948851, i64 1205234963, i64 1641519756, i64 211892090, i64 351820174, i64 1007938441, i64 665439982, i64 3378624309, i64 3843875309, i64 2974251580, i64 3755121753, i64 1945261375, i64 3457423481, i64 935818175, i64 3455538154, i64 2868731739, i64 1866325780, i64 3678697606, i64 4088384129, i64 3295197502, i64 874788908, i64 1084473951, i64 3273463410, i64 635616268, i64 1228679307, i64 2500722497, i64 27801969, i64 3003910366, i64 3837057180, i64 3243664528, i64 2227927905, i64 3056784752, i64 1550600308, i64 1471729730], align 16
@RT2 = internal constant [256 x i64] [i64 4098969767, i64 1098797925, i64 387629988, i64 658151006, i64 2872822635, i64 2636116293, i64 4205620056, i64 3813380867, i64 807425530, i64 1991112301, i64 3431502198, i64 49620300, i64 3847224535, i64 717608907, i64 891715652, i64 1656065955, i64 2984135002, i64 3123013403, i64 3930429454, i64 4267565504, i64 801309301, i64 1283527408, i64 1183687575, i64 3547055865, i64 2399397727, i64 2450888092, i64 1841294202, i64 1385552473, i64 3201576323, i64 1951978273, i64 3762891113, i64 3381544136, i64 3262474889, i64 2398386297, i64 1486449470, i64 3106397553, i64 3787372111, i64 2297436077, i64 550069932, i64 3464344634, i64 3747813450, i64 451248689, i64 1368875059, i64 1398949247, i64 1689378935, i64 1807451310, i64 2180914336, i64 150574123, i64 1215322216, i64 1167006205, i64 3734275948, i64 2069018616, i64 1940595667, i64 1265820162, i64 534992783, i64 1432758955, i64 3954313000, i64 3039757250, i64 3313932923, i64 936617224, i64 674296455, i64 3206787749, i64 50510442, i64 384654466, i64 3481938716, i64 2041025204, i64 133427442, i64 1766760930, i64 3664104948, i64 84334014, i64 886120290, i64 2797898494, i64 775200083, i64 4087521365, i64 2315596513, i64 4137973227, i64 2198551020, i64 1614850799, i64 1901987487, i64 1857900816, i64 557775242, i64 3717610758, i64 1054715397, i64 3863824061, i64 1418835341, i64 3295741277, i64 100954068, i64 1348534037, i64 2551784699, i64 3184957417, i64 1082772547, i64 3647436702, i64 3903896898, i64 2298972299, i64 434583643, i64 3363429358, i64 2090944266, i64 1115482383, i64 2230896926, i64 0, i64 2148107142, i64 724715757, i64 287222896, i64 1517047410, i64 251526143, i64 2232374840, i64 2923241173, i64 758523705, i64 252339417, i64 1550328230, i64 1536938324, i64 908343854, i64 168604007, i64 1469255655, i64 4004827798, i64 2602278545, i64 3229634501, i64 3697386016, i64 2002413899, i64 303830554, i64 2481064634, i64 2696996138, i64 574374880, i64 454171927, i64 151915277, i64 2347937223, i64 3056449960, i64 504678569, i64 4049044761, i64 1974422535, i64 2582559709, i64 2141453664, i64 33005350, i64 1918680309, i64 1715782971, i64 4217058430, i64 1133213225, i64 600562886, i64 3988154620, i64 3837289457, i64 836225756, i64 1665273989, i64 2534621218, i64 3330547729, i64 1250262308, i64 3151165501, i64 4188934450, i64 700935585, i64 2652719919, i64 3000824624, i64 2249059410, i64 3245854947, i64 3005967382, i64 1890163129, i64 2484206152, i64 3913753188, i64 4238918796, i64 4037024319, i64 2102843436, i64 857927568, i64 1233635150, i64 953795025, i64 3398237858, i64 3566745099, i64 4121350017, i64 2057644254, i64 3084527246, i64 2906629311, i64 976020637, i64 2018512274, i64 1600822220, i64 2119459398, i64 2381758995, i64 3633375416, i64 959340279, i64 3280139695, i64 1570750080, i64 3496574099, i64 3580864813, i64 634368786, i64 2898803609, i64 403744637, i64 2632478307, i64 1004239803, i64 650971512, i64 1500443672, i64 2599158199, i64 1334028442, i64 2514904430, i64 4289363686, i64 3156281551, i64 368043752, i64 3887782299, i64 1867173430, i64 2682967049, i64 2955531900, i64 2754719666, i64 1059729699, i64 2781229204, i64 2721431654, i64 1316239292, i64 2197595850, i64 2430644432, i64 2805143000, i64 82922136, i64 3963746266, i64 3447656016, i64 2434215926, i64 1299615190, i64 4014165424, i64 2865517645, i64 2531581700, i64 3516851125, i64 1783372680, i64 750893087, i64 1699118929, i64 1587348714, i64 2348899637, i64 2281337716, i64 201010753, i64 1739807261, i64 3683799762, i64 283718486, i64 3597472583, i64 3617229921, i64 2704767500, i64 4166618644, i64 334203196, i64 2848910887, i64 1639396809, i64 484568549, i64 1199193265, i64 3533461983, i64 4065673075, i64 337148366, i64 3346251575, i64 4149471949, i64 4250885034, i64 1038029935, i64 1148749531, i64 2949284339, i64 1756970692, i64 607661108, i64 2747424576, i64 488010435, i64 3803974693, i64 1009290057, i64 234832277, i64 2822336769, i64 201907891, i64 3034094820, i64 1449431233, i64 3413860740, i64 852848822, i64 1816687708, i64 3100656215], align 16
@RT3 = internal constant [256 x i64] [i64 1364240372, i64 2119394625, i64 449029143, i64 982933031, i64 1003187115, i64 535905693, i64 2896910586, i64 1267925987, i64 542505520, i64 2918608246, i64 2291234508, i64 4112862210, i64 1341970405, i64 3319253802, i64 645940277, i64 3046089570, i64 3729349297, i64 627514298, i64 1167593194, i64 1575076094, i64 3271718191, i64 2165502028, i64 2376308550, i64 1808202195, i64 65494927, i64 362126482, i64 3219880557, i64 2514114898, i64 3559752638, i64 1490231668, i64 1227450848, i64 2386872521, i64 1969916354, i64 4101536142, i64 2573942360, i64 668823993, i64 3199619041, i64 4028083592, i64 3378949152, i64 2108963534, i64 1662536415, i64 3850514714, i64 2539664209, i64 1648721747, i64 2984277860, i64 3146034795, i64 4263288961, i64 4187237128, i64 1884842056, i64 2400845125, i64 2491903198, i64 1387788411, i64 2871251827, i64 1927414347, i64 3814166303, i64 1714072405, i64 2986813675, i64 788775605, i64 2258271173, i64 3550808119, i64 821200680, i64 598910399, i64 45771267, i64 3982262806, i64 2318081231, i64 2811409529, i64 4092654087, i64 1319232105, i64 1707996378, i64 114671109, i64 3508494900, i64 3297443494, i64 882725678, i64 2728416755, i64 87220618, i64 2759191542, i64 188345475, i64 1084944224, i64 1577492337, i64 3176206446, i64 1056541217, i64 2520581853, i64 3719169342, i64 1296481766, i64 2444594516, i64 1896177092, i64 74437638, i64 1627329872, i64 421854104, i64 3600279997, i64 2311865152, i64 1735892697, i64 2965193448, i64 126389129, i64 3879230233, i64 2044456648, i64 2705787516, i64 2095648578, i64 4173930116, i64 0, i64 159614592, i64 843640107, i64 514617361, i64 1817080410, i64 4261150478, i64 257308805, i64 1025430958, i64 908540205, i64 174381327, i64 1747035740, i64 2614187099, i64 607792694, i64 212952842, i64 2467293015, i64 3033700078, i64 463376795, i64 2152711616, i64 1638015196, i64 1516850039, i64 471210514, i64 3792353939, i64 3236244128, i64 1011081250, i64 303896347, i64 235605257, i64 4071475083, i64 767142070, i64 348694814, i64 1468340721, i64 2940995445, i64 4005289369, i64 2751291519, i64 4154402305, i64 1555887474, i64 1153776486, i64 1530167035, i64 2339776835, i64 3420243491, i64 3060333805, i64 3093557732, i64 3620396081, i64 1108378979, i64 322970263, i64 2216694214, i64 2239571018, i64 3539484091, i64 2920362745, i64 3345850665, i64 491466654, i64 3706925234, i64 233591430, i64 2010178497, i64 728503987, i64 2845423984, i64 301615252, i64 1193436393, i64 2831453436, i64 2686074864, i64 1457007741, i64 586125363, i64 2277985865, i64 3653357880, i64 2365498058, i64 2553678804, i64 2798617077, i64 2770919034, i64 3659959991, i64 1067761581, i64 753179962, i64 1343066744, i64 1788595295, i64 1415726718, i64 4139914125, i64 2431170776, i64 777975609, i64 2197139395, i64 2680062045, i64 1769771984, i64 1873358293, i64 3484619301, i64 3359349164, i64 279411992, i64 3899548572, i64 3682319163, i64 3439949862, i64 1861490777, i64 3959535514, i64 2208864847, i64 3865407125, i64 2860443391, i64 554225596, i64 4024887317, i64 3134823399, i64 1255028335, i64 3939764639, i64 701922480, i64 833598116, i64 707863359, i64 3325072549, i64 901801634, i64 1949809742, i64 4238789250, i64 3769684112, i64 857069735, i64 4048197636, i64 1106762476, i64 2131644621, i64 389019281, i64 1989006925, i64 1129165039, i64 3428076970, i64 3839820950, i64 2665723345, i64 1276872810, i64 3250069292, i64 1182749029, i64 2634345054, i64 22885772, i64 4201870471, i64 4214112523, i64 3009027431, i64 2454901467, i64 3912455696, i64 1829980118, i64 2592891351, i64 930745505, i64 1502483704, i64 3951639571, i64 3471714217, i64 3073755489, i64 3790464284, i64 2050797895, i64 2623135698, i64 1430221810, i64 410635796, i64 1941911495, i64 1407897079, i64 1599843069, i64 3742658365, i64 2022103876, i64 3397514159, i64 3107898472, i64 942421028, i64 3261022371, i64 376619805, i64 3154912738, i64 680216892, i64 4282488077, i64 963707304, i64 148812556, i64 3634160820, i64 1687208278, i64 2069988555, i64 3580933682, i64 1215585388, i64 3494008760], align 16
@RSb = internal constant [256 x i8] c"R\09j\D506\A58\BF@\A3\9E\81\F3\D7\FB|\E39\82\9B/\FF\874\8ECD\C4\DE\E9\CBT{\942\A6\C2#=\EEL\95\0BB\FA\C3N\08.\A1f(\D9$\B2v[\A2Im\8B\D1%r\F8\F6d\86h\98\16\D4\A4\5C\CC]e\B6\92lpHP\FD\ED\B9\DA^\15FW\A7\8D\9D\84\90\D8\AB\00\8C\BC\D3\0A\F7\E4X\05\B8\B3E\06\D0,\1E\8F\CA?\0F\02\C1\AF\BD\03\01\13\8Ak:\91\11AOg\DC\EA\97\F2\CF\CE\F0\B4\E6s\96\ACt\22\E7\AD5\85\E2\F97\E8\1Cu\DFnG\F1\1Aq\1D)\C5\89o\B7b\0E\AA\18\BE\1B\FCV>K\C6\D2y \9A\DB\C0\FEx\CDZ\F4\1F\DD\A83\88\07\C71\B1\12\10Y'\80\EC_`Q\7F\A9\19\B5J\0D-\E5z\9F\93\C9\9C\EF\A0\E0;M\AE*\F5\B0\C8\EB\BB<\83S\99a\17+\04~\BAw\D6&\E1i\14cU!\0C}", align 16
@FT0 = internal constant [256 x i64] [i64 2774754246, i64 2222750968, i64 2574743534, i64 2373680118, i64 234025727, i64 3177933782, i64 2976870366, i64 1422247313, i64 1345335392, i64 50397442, i64 2842126286, i64 2099981142, i64 436141799, i64 1658312629, i64 3870010189, i64 2591454956, i64 1170918031, i64 2642575903, i64 1086966153, i64 2273148410, i64 368769775, i64 3948501426, i64 3376891790, i64 200339707, i64 3970805057, i64 1742001331, i64 4255294047, i64 3937382213, i64 3214711843, i64 4154762323, i64 2524082916, i64 1539358875, i64 3266819957, i64 486407649, i64 2928907069, i64 1780885068, i64 1513502316, i64 1094664062, i64 49805301, i64 1338821763, i64 1546925160, i64 4104496465, i64 887481809, i64 150073849, i64 2473685474, i64 1943591083, i64 1395732834, i64 1058346282, i64 201589768, i64 1388824469, i64 1696801606, i64 1589887901, i64 672667696, i64 2711000631, i64 251987210, i64 3046808111, i64 151455502, i64 907153956, i64 2608889883, i64 1038279391, i64 652995533, i64 1764173646, i64 3451040383, i64 2675275242, i64 453576978, i64 2659418909, i64 1949051992, i64 773462580, i64 756751158, i64 2993581788, i64 3998898868, i64 4221608027, i64 4132590244, i64 1295727478, i64 1641469623, i64 3467883389, i64 2066295122, i64 1055122397, i64 1898917726, i64 2542044179, i64 4115878822, i64 1758581177, i64 0, i64 753790401, i64 1612718144, i64 536673507, i64 3367088505, i64 3982187446, i64 3194645204, i64 1187761037, i64 3653156455, i64 1262041458, i64 3729410708, i64 3561770136, i64 3898103984, i64 1255133061, i64 1808847035, i64 720367557, i64 3853167183, i64 385612781, i64 3309519750, i64 3612167578, i64 1429418854, i64 2491778321, i64 3477423498, i64 284817897, i64 100794884, i64 2172616702, i64 4031795360, i64 1144798328, i64 3131023141, i64 3819481163, i64 4082192802, i64 4272137053, i64 3225436288, i64 2324664069, i64 2912064063, i64 3164445985, i64 1211644016, i64 83228145, i64 3753688163, i64 3249976951, i64 1977277103, i64 1663115586, i64 806359072, i64 452984805, i64 250868733, i64 1842533055, i64 1288555905, i64 336333848, i64 890442534, i64 804056259, i64 3781124030, i64 2727843637, i64 3427026056, i64 957814574, i64 1472513171, i64 4071073621, i64 2189328124, i64 1195195770, i64 2892260552, i64 3881655738, i64 723065138, i64 2507371494, i64 2690670784, i64 2558624025, i64 3511635870, i64 2145180835, i64 1713513028, i64 2116692564, i64 2878378043, i64 2206763019, i64 3393603212, i64 703524551, i64 3552098411, i64 1007948840, i64 2044649127, i64 3797835452, i64 487262998, i64 1994120109, i64 1004593371, i64 1446130276, i64 1312438900, i64 503974420, i64 3679013266, i64 168166924, i64 1814307912, i64 3831258296, i64 1573044895, i64 1859376061, i64 4021070915, i64 2791465668, i64 2828112185, i64 2761266481, i64 937747667, i64 2339994098, i64 854058965, i64 1137232011, i64 1496790894, i64 3077402074, i64 2358086913, i64 1691735473, i64 3528347292, i64 3769215305, i64 3027004632, i64 4199962284, i64 133494003, i64 636152527, i64 2942657994, i64 2390391540, i64 3920539207, i64 403179536, i64 3585784431, i64 2289596656, i64 1864705354, i64 1915629148, i64 605822008, i64 4054230615, i64 3350508659, i64 1371981463, i64 602466507, i64 2094914977, i64 2624877800, i64 555687742, i64 3712699286, i64 3703422305, i64 2257292045, i64 2240449039, i64 2423288032, i64 1111375484, i64 3300242801, i64 2858837708, i64 3628615824, i64 84083462, i64 32962295, i64 302911004, i64 2741068226, i64 1597322602, i64 4183250862, i64 3501832553, i64 2441512471, i64 1489093017, i64 656219450, i64 3114180135, i64 954327513, i64 335083755, i64 3013122091, i64 856756514, i64 3144247762, i64 1893325225, i64 2307821063, i64 2811532339, i64 3063651117, i64 572399164, i64 2458355477, i64 552200649, i64 1238290055, i64 4283782570, i64 2015897680, i64 2061492133, i64 2408352771, i64 4171342169, i64 2156497161, i64 386731290, i64 3669999461, i64 837215959, i64 3326231172, i64 3093850320, i64 3275833730, i64 2962856233, i64 1999449434, i64 286199582, i64 3417354363, i64 4233385128, i64 3602627437, i64 974525996], align 16
@FT1 = internal constant [256 x i64] [i64 1667483301, i64 2088564868, i64 2004348569, i64 2071721613, i64 4076011277, i64 1802229437, i64 1869602481, i64 3318059348, i64 808476752, i64 16843267, i64 1734856361, i64 724260477, i64 4278118169, i64 3621238114, i64 2880130534, i64 1987505306, i64 3402272581, i64 2189565853, i64 3385428288, i64 2105408135, i64 4210749205, i64 1499050731, i64 1195871945, i64 4042324747, i64 2913812972, i64 3570709351, i64 2728550397, i64 2947499498, i64 2627478463, i64 2762232823, i64 1920132246, i64 3233848155, i64 3082253762, i64 4261273884, i64 2475900334, i64 640044138, i64 909536346, i64 1061125697, i64 4160222466, i64 3435955023, i64 875849820, i64 2779075060, i64 3857043764, i64 4059166984, i64 1903288979, i64 3638078323, i64 825320019, i64 353708607, i64 67373068, i64 3351745874, i64 589514341, i64 3284376926, i64 404238376, i64 2526427041, i64 84216335, i64 2593796021, i64 117902857, i64 303178806, i64 2155879323, i64 3806519101, i64 3958099238, i64 656887401, i64 2998042573, i64 1970662047, i64 151589403, i64 2206408094, i64 741103732, i64 437924910, i64 454768173, i64 1852759218, i64 1515893998, i64 2694863867, i64 1381147894, i64 993752653, i64 3604395873, i64 3014884814, i64 690573947, i64 3823361342, i64 791633521, i64 2223248279, i64 1397991157, i64 3520182632, i64 0, i64 3991781676, i64 538984544, i64 4244431647, i64 2981198280, i64 1532737261, i64 1785386174, i64 3419114822, i64 3200149465, i64 960066123, i64 1246401758, i64 1280088276, i64 1482207464, i64 3486483786, i64 3503340395, i64 4025468202, i64 2863288293, i64 4227591446, i64 1128498885, i64 1296931543, i64 859006549, i64 2240090516, i64 1162185423, i64 4193904912, i64 33686534, i64 2139094657, i64 1347461360, i64 1010595908, i64 2678007226, i64 2829601763, i64 1364304627, i64 2745392638, i64 1077969088, i64 2408514954, i64 2459058093, i64 2644320700, i64 943222856, i64 4126535940, i64 3166462943, i64 3065411521, i64 3671764853, i64 555827811, i64 269492272, i64 4294960410, i64 4092853518, i64 3537026925, i64 3452797260, i64 202119188, i64 320022069, i64 3974939439, i64 1600110305, i64 2543269282, i64 1145342156, i64 387395129, i64 3301217111, i64 2812761586, i64 2122251394, i64 1027439175, i64 1684326572, i64 1566423783, i64 421081643, i64 1936975509, i64 1616953504, i64 2172721560, i64 1330618065, i64 3705447295, i64 572671078, i64 707417214, i64 2425371563, i64 2290617219, i64 1179028682, i64 4008625961, i64 3099093971, i64 336865340, i64 3739133817, i64 1583267042, i64 185275933, i64 3688607094, i64 3772832571, i64 842163286, i64 976909390, i64 168432670, i64 1229558491, i64 101059594, i64 606357612, i64 1549580516, i64 3267534685, i64 3553869166, i64 2896970735, i64 1650640038, i64 2442213800, i64 2509582756, i64 3840201527, i64 2038035083, i64 3890730290, i64 3368586051, i64 926379609, i64 1835915959, i64 2374828428, i64 3587551588, i64 1313774802, i64 2846444000, i64 1819072692, i64 1448520954, i64 4109693703, i64 3941256997, i64 1701169839, i64 2054878350, i64 2930657257, i64 134746136, i64 3132780501, i64 2021191816, i64 623200879, i64 774790258, i64 471611428, i64 2795919345, i64 3031724999, i64 3334903633, i64 3907570467, i64 3722289532, i64 1953818780, i64 522141217, i64 1263245021, i64 3183305180, i64 2341145990, i64 2324303749, i64 1886445712, i64 1044282434, i64 3048567236, i64 1718013098, i64 1212715224, i64 50529797, i64 4143380225, i64 235805714, i64 1633796771, i64 892693087, i64 1465364217, i64 3115936208, i64 2256934801, i64 3250690392, i64 488454695, i64 2661164985, i64 3789674808, i64 4177062675, i64 2560109491, i64 286335539, i64 1768542907, i64 3654920560, i64 2391672713, i64 2492740519, i64 2610638262, i64 505297954, i64 2273777042, i64 3924412704, i64 3469641545, i64 1431677695, i64 673730680, i64 3755976058, i64 2357986191, i64 2711706104, i64 2307459456, i64 218962455, i64 3216991706, i64 3873888049, i64 1111655622, i64 1751699640, i64 1094812355, i64 2576951728, i64 757946999, i64 252648977, i64 2964356043, i64 1414834428, i64 3149622742, i64 370551866], align 16
@FT2 = internal constant [256 x i64] [i64 1673962851, i64 2096661628, i64 2012125559, i64 2079755643, i64 4076801522, i64 1809235307, i64 1876865391, i64 3314635973, i64 811618352, i64 16909057, i64 1741597031, i64 727088427, i64 4276558334, i64 3618988759, i64 2874009259, i64 1995217526, i64 3398387146, i64 2183110018, i64 3381215433, i64 2113570685, i64 4209972730, i64 1504897881, i64 1200539975, i64 4042984432, i64 2906778797, i64 3568527316, i64 2724199842, i64 2940594863, i64 2619588508, i64 2756966308, i64 1927583346, i64 3231407040, i64 3077948087, i64 4259388669, i64 2470293139, i64 642542118, i64 913070646, i64 1065238847, i64 4160029431, i64 3431157708, i64 879254580, i64 2773611685, i64 3855693029, i64 4059629809, i64 1910674289, i64 3635114968, i64 828527409, i64 355090197, i64 67636228, i64 3348452039, i64 591815971, i64 3281870531, i64 405809176, i64 2520228246, i64 84545285, i64 2586817946, i64 118360327, i64 304363026, i64 2149292928, i64 3806281186, i64 3956090603, i64 659450151, i64 2994720178, i64 1978310517, i64 152181513, i64 2199756419, i64 743994412, i64 439627290, i64 456535323, i64 1859957358, i64 1521806938, i64 2690382752, i64 1386542674, i64 997608763, i64 3602342358, i64 3011366579, i64 693271337, i64 3822927587, i64 794718511, i64 2215876484, i64 1403450707, i64 3518589137, i64 0, i64 3988860141, i64 541089824, i64 4242743292, i64 2977548465, i64 1538714971, i64 1792327274, i64 3415033547, i64 3194476990, i64 963791673, i64 1251270218, i64 1285084236, i64 1487988824, i64 3481619151, i64 3501943760, i64 4022676207, i64 2857362858, i64 4226619131, i64 1132905795, i64 1301993293, i64 862344499, i64 2232521861, i64 1166724933, i64 4192801017, i64 33818114, i64 2147385727, i64 1352724560, i64 1014514748, i64 2670049951, i64 2823545768, i64 1369633617, i64 2740846243, i64 1082179648, i64 2399505039, i64 2453646738, i64 2636233885, i64 946882616, i64 4126213365, i64 3160661948, i64 3061301686, i64 3668932058, i64 557998881, i64 270544912, i64 4293204735, i64 4093447923, i64 3535760850, i64 3447803085, i64 202904588, i64 321271059, i64 3972214764, i64 1606345055, i64 2536874647, i64 1149815876, i64 388905239, i64 3297990596, i64 2807427751, i64 2130477694, i64 1031423805, i64 1690872932, i64 1572530013, i64 422718233, i64 1944491379, i64 1623236704, i64 2165938305, i64 1335808335, i64 3701702620, i64 574907938, i64 710180394, i64 2419829648, i64 2282455944, i64 1183631942, i64 4006029806, i64 3094074296, i64 338181140, i64 3735517662, i64 1589437022, i64 185998603, i64 3685578459, i64 3772464096, i64 845436466, i64 980700730, i64 169090570, i64 1234361161, i64 101452294, i64 608726052, i64 1555620956, i64 3265224130, i64 3552407251, i64 2890133420, i64 1657054818, i64 2436475025, i64 2503058581, i64 3839047652, i64 2045938553, i64 3889509095, i64 3364570056, i64 929978679, i64 1843050349, i64 2365688973, i64 3585172693, i64 1318900302, i64 2840191145, i64 1826141292, i64 1454176854, i64 4109567988, i64 3939444202, i64 1707781989, i64 2062847610, i64 2923948462, i64 135272456, i64 3127891386, i64 2029029496, i64 625635109, i64 777810478, i64 473441308, i64 2790781350, i64 3027486644, i64 3331805638, i64 3905627112, i64 3718347997, i64 1961401460, i64 524165407, i64 1268178251, i64 3177307325, i64 2332919435, i64 2316273034, i64 1893765232, i64 1048330814, i64 3044132021, i64 1724688998, i64 1217452104, i64 50726147, i64 4143383030, i64 236720654, i64 1640145761, i64 896163637, i64 1471084887, i64 3110719673, i64 2249691526, i64 3248052417, i64 490350365, i64 2653403550, i64 3789109473, i64 4176155640, i64 2553000856, i64 287453969, i64 1775418217, i64 3651760345, i64 2382858638, i64 2486413204, i64 2603464347, i64 507257374, i64 2266337927, i64 3922272489, i64 3464972750, i64 1437269845, i64 676362280, i64 3752164063, i64 2349043596, i64 2707028129, i64 2299101321, i64 219813645, i64 3211123391, i64 3872862694, i64 1115997762, i64 1758509160, i64 1099088705, i64 2569646233, i64 760903469, i64 253628687, i64 2960903088, i64 1420360788, i64 3144537787, i64 371997206], align 16
@FT3 = internal constant [256 x i64] [i64 3332727651, i64 4169432188, i64 4003034999, i64 4136467323, i64 4279104242, i64 3602738027, i64 3736170351, i64 2438251973, i64 1615867952, i64 33751297, i64 3467208551, i64 1451043627, i64 3877240574, i64 3043153879, i64 1306962859, i64 3969545846, i64 2403715786, i64 530416258, i64 2302724553, i64 4203183485, i64 4011195130, i64 3001768281, i64 2395555655, i64 4211863792, i64 1106029997, i64 3009926356, i64 1610457762, i64 1173008303, i64 599760028, i64 1408738468, i64 3835064946, i64 2606481600, i64 1975695287, i64 3776773629, i64 1034851219, i64 1282024998, i64 1817851446, i64 2118205247, i64 4110612471, i64 2203045068, i64 1750873140, i64 1374987685, i64 3509904869, i64 4178113009, i64 3801313649, i64 2876496088, i64 1649619249, i64 708777237, i64 135005188, i64 2505230279, i64 1181033251, i64 2640233411, i64 807933976, i64 933336726, i64 168756485, i64 800430746, i64 235472647, i64 607523346, i64 463175808, i64 3745374946, i64 3441880043, i64 1315514151, i64 2144187058, i64 3936318837, i64 303761673, i64 496927619, i64 1484008492, i64 875436570, i64 908925723, i64 3702681198, i64 3035519578, i64 1543217312, i64 2767606354, i64 1984772923, i64 3076642518, i64 2110698419, i64 1383803177, i64 3711886307, i64 1584475951, i64 328696964, i64 2801095507, i64 3110654417, i64 0, i64 3240947181, i64 1080041504, i64 3810524412, i64 2043195825, i64 3069008731, i64 3569248874, i64 2370227147, i64 1742323390, i64 1917532473, i64 2497595978, i64 2564049996, i64 2968016984, i64 2236272591, i64 3144405200, i64 3307925487, i64 1340451498, i64 3977706491, i64 2261074755, i64 2597801293, i64 1716859699, i64 294946181, i64 2328839493, i64 3910203897, i64 67502594, i64 4269899647, i64 2700103760, i64 2017737788, i64 632987551, i64 1273211048, i64 2733855057, i64 1576969123, i64 2160083008, i64 92966799, i64 1068339858, i64 566009245, i64 1883781176, i64 4043634165, i64 1675607228, i64 2009183926, i64 2943736538, i64 1113792801, i64 540020752, i64 3843751935, i64 4245615603, i64 3211645650, i64 2169294285, i64 403966988, i64 641012499, i64 3274697964, i64 3202441055, i64 899848087, i64 2295088196, i64 775493399, i64 2472002756, i64 1441965991, i64 4236410494, i64 2051489085, i64 3366741092, i64 3135724893, i64 841685273, i64 3868554099, i64 3231735904, i64 429425025, i64 2664517455, i64 2743065820, i64 1147544098, i64 1417554474, i64 1001099408, i64 193169544, i64 2362066502, i64 3341414126, i64 1809037496, i64 675025940, i64 2809781982, i64 3168951902, i64 371002123, i64 2910247899, i64 3678134496, i64 1683370546, i64 1951283770, i64 337512970, i64 2463844681, i64 201983494, i64 1215046692, i64 3101973596, i64 2673722050, i64 3178157011, i64 1139780780, i64 3299238498, i64 967348625, i64 832869781, i64 3543655652, i64 4069226873, i64 3576883175, i64 2336475336, i64 1851340599, i64 3669454189, i64 25988493, i64 2976175573, i64 2631028302, i64 1239460265, i64 3635702892, i64 2902087254, i64 4077384948, i64 3475368682, i64 3400492389, i64 4102978170, i64 1206496942, i64 270010376, i64 1876277946, i64 4035475576, i64 1248797989, i64 1550986798, i64 941890588, i64 1475454630, i64 1942467764, i64 2538718918, i64 3408128232, i64 2709315037, i64 3902567540, i64 1042358047, i64 2531085131, i64 1641856445, i64 226921355, i64 260409994, i64 3767562352, i64 2084716094, i64 1908716981, i64 3433719398, i64 2430093384, i64 100991747, i64 4144101110, i64 470945294, i64 3265487201, i64 1784624437, i64 2935576407, i64 1775286713, i64 395413126, i64 2572730817, i64 975641885, i64 666476190, i64 3644383713, i64 3943954680, i64 733190296, i64 573772049, i64 3535497577, i64 2842745305, i64 126455438, i64 866620564, i64 766942107, i64 1008868894, i64 361924487, i64 3374377449, i64 2269761230, i64 2868860245, i64 1350051880, i64 2776293343, i64 59739276, i64 1509466529, i64 159418761, i64 437718285, i64 1708834751, i64 3610371814, i64 2227585602, i64 3501746280, i64 2193834305, i64 699439513, i64 1517759789, i64 504434447, i64 2076946608, i64 2835108948, i64 1842789307, i64 742004246], align 16

; Function Attrs: nounwind uwtable
define void @aes_setkey_enc(%struct.aes_context* %ctx, i8* %key, i32 %keysize) #0 {
entry:
  %ctx.addr = alloca %struct.aes_context*, align 8
  %key.addr = alloca i8*, align 8
  %keysize.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.aes_context* %ctx, %struct.aes_context** %ctx.addr, align 8, !tbaa !1
  store i8* %key, i8** %key.addr, align 8, !tbaa !1
  store i32 %keysize, i32* %keysize.addr, align 4, !tbaa !5
  %0 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast i64** %RK to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #1
  %2 = load i32, i32* %keysize.addr, align 4, !tbaa !5
  switch i32 %2, label %sw.default [
    i32 128, label %sw.bb
    i32 192, label %sw.bb.1
    i32 256, label %sw.bb.3
  ]

sw.bb:                                            ; preds = %entry
  %3 = load %struct.aes_context*, %struct.aes_context** %ctx.addr, align 8, !tbaa !1
  %nr = getelementptr inbounds %struct.aes_context, %struct.aes_context* %3, i32 0, i32 0
  store i32 10, i32* %nr, align 4, !tbaa !7
  br label %sw.epilog

sw.bb.1:                                          ; preds = %entry
  %4 = load %struct.aes_context*, %struct.aes_context** %ctx.addr, align 8, !tbaa !1
  %nr2 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %4, i32 0, i32 0
  store i32 12, i32* %nr2, align 4, !tbaa !7
  br label %sw.epilog

sw.bb.3:                                          ; preds = %entry
  %5 = load %struct.aes_context*, %struct.aes_context** %ctx.addr, align 8, !tbaa !1
  %nr4 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %5, i32 0, i32 0
  store i32 14, i32* %nr4, align 4, !tbaa !7
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

sw.epilog:                                        ; preds = %sw.bb.3, %sw.bb.1, %sw.bb
  %6 = load %struct.aes_context*, %struct.aes_context** %ctx.addr, align 8, !tbaa !1
  %buf = getelementptr inbounds %struct.aes_context, %struct.aes_context* %6, i32 0, i32 2
  %arraydecay = getelementptr inbounds [68 x i64], [68 x i64]* %buf, i32 0, i32 0
  store i64* %arraydecay, i64** %RK, align 8, !tbaa !1
  %7 = load %struct.aes_context*, %struct.aes_context** %ctx.addr, align 8, !tbaa !1
  %rk = getelementptr inbounds %struct.aes_context, %struct.aes_context* %7, i32 0, i32 1
  store i64* %arraydecay, i64** %rk, align 8, !tbaa !9
  store i32 0, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %sw.epilog
  %8 = load i32, i32* %i, align 4, !tbaa !5
  %9 = load i32, i32* %keysize.addr, align 4, !tbaa !5
  %shr = ashr i32 %9, 5
  %cmp = icmp slt i32 %8, %shr
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %10 = load i32, i32* %i, align 4, !tbaa !5
  %shl = shl i32 %10, 2
  %idxprom = sext i32 %shl to i64
  %11 = load i8*, i8** %key.addr, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds i8, i8* %11, i64 %idxprom
  %12 = load i8, i8* %arrayidx, align 1, !tbaa !10
  %conv = zext i8 %12 to i64
  %13 = load i32, i32* %i, align 4, !tbaa !5
  %shl5 = shl i32 %13, 2
  %add = add nsw i32 %shl5, 1
  %idxprom6 = sext i32 %add to i64
  %14 = load i8*, i8** %key.addr, align 8, !tbaa !1
  %arrayidx7 = getelementptr inbounds i8, i8* %14, i64 %idxprom6
  %15 = load i8, i8* %arrayidx7, align 1, !tbaa !10
  %conv8 = zext i8 %15 to i64
  %shl9 = shl i64 %conv8, 8
  %or = or i64 %conv, %shl9
  %16 = load i32, i32* %i, align 4, !tbaa !5
  %shl10 = shl i32 %16, 2
  %add11 = add nsw i32 %shl10, 2
  %idxprom12 = sext i32 %add11 to i64
  %17 = load i8*, i8** %key.addr, align 8, !tbaa !1
  %arrayidx13 = getelementptr inbounds i8, i8* %17, i64 %idxprom12
  %18 = load i8, i8* %arrayidx13, align 1, !tbaa !10
  %conv14 = zext i8 %18 to i64
  %shl15 = shl i64 %conv14, 16
  %or16 = or i64 %or, %shl15
  %19 = load i32, i32* %i, align 4, !tbaa !5
  %shl17 = shl i32 %19, 2
  %add18 = add nsw i32 %shl17, 3
  %idxprom19 = sext i32 %add18 to i64
  %20 = load i8*, i8** %key.addr, align 8, !tbaa !1
  %arrayidx20 = getelementptr inbounds i8, i8* %20, i64 %idxprom19
  %21 = load i8, i8* %arrayidx20, align 1, !tbaa !10
  %conv21 = zext i8 %21 to i64
  %shl22 = shl i64 %conv21, 24
  %or23 = or i64 %or16, %shl22
  %22 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom24 = sext i32 %22 to i64
  %23 = load i64*, i64** %RK, align 8, !tbaa !1
  %arrayidx25 = getelementptr inbounds i64, i64* %23, i64 %idxprom24
  store i64 %or23, i64* %arrayidx25, align 8, !tbaa !11
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %24 = load i32, i32* %i, align 4, !tbaa !5
  %inc = add nsw i32 %24, 1
  store i32 %inc, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %25 = load %struct.aes_context*, %struct.aes_context** %ctx.addr, align 8, !tbaa !1
  %nr26 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %25, i32 0, i32 0
  %26 = load i32, i32* %nr26, align 4, !tbaa !7
  switch i32 %26, label %sw.default.240 [
    i32 10, label %sw.bb.27
    i32 12, label %sw.bb.79
    i32 14, label %sw.bb.142
  ]

sw.bb.27:                                         ; preds = %for.end
  store i32 0, i32* %i, align 4, !tbaa !5
  br label %for.cond.28

for.cond.28:                                      ; preds = %for.inc.76, %sw.bb.27
  %27 = load i32, i32* %i, align 4, !tbaa !5
  %cmp29 = icmp slt i32 %27, 10
  br i1 %cmp29, label %for.body.31, label %for.end.78

for.body.31:                                      ; preds = %for.cond.28
  %28 = load i64*, i64** %RK, align 8, !tbaa !1
  %arrayidx32 = getelementptr inbounds i64, i64* %28, i64 0
  %29 = load i64, i64* %arrayidx32, align 8, !tbaa !11
  %30 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom33 = sext i32 %30 to i64
  %arrayidx34 = getelementptr inbounds [10 x i64], [10 x i64]* @RCON, i32 0, i64 %idxprom33
  %31 = load i64, i64* %arrayidx34, align 8, !tbaa !11
  %xor = xor i64 %29, %31
  %32 = load i64*, i64** %RK, align 8, !tbaa !1
  %arrayidx35 = getelementptr inbounds i64, i64* %32, i64 3
  %33 = load i64, i64* %arrayidx35, align 8, !tbaa !11
  %shr36 = lshr i64 %33, 8
  %and = and i64 %shr36, 255
  %arrayidx37 = getelementptr inbounds [256 x i8], [256 x i8]* @FSb, i32 0, i64 %and
  %34 = load i8, i8* %arrayidx37, align 1, !tbaa !10
  %conv38 = zext i8 %34 to i64
  %xor39 = xor i64 %xor, %conv38
  %35 = load i64*, i64** %RK, align 8, !tbaa !1
  %arrayidx40 = getelementptr inbounds i64, i64* %35, i64 3
  %36 = load i64, i64* %arrayidx40, align 8, !tbaa !11
  %shr41 = lshr i64 %36, 16
  %and42 = and i64 %shr41, 255
  %arrayidx43 = getelementptr inbounds [256 x i8], [256 x i8]* @FSb, i32 0, i64 %and42
  %37 = load i8, i8* %arrayidx43, align 1, !tbaa !10
  %conv44 = zext i8 %37 to i32
  %shl45 = shl i32 %conv44, 8
  %conv46 = sext i32 %shl45 to i64
  %xor47 = xor i64 %xor39, %conv46
  %38 = load i64*, i64** %RK, align 8, !tbaa !1
  %arrayidx48 = getelementptr inbounds i64, i64* %38, i64 3
  %39 = load i64, i64* %arrayidx48, align 8, !tbaa !11
  %shr49 = lshr i64 %39, 24
  %and50 = and i64 %shr49, 255
  %arrayidx51 = getelementptr inbounds [256 x i8], [256 x i8]* @FSb, i32 0, i64 %and50
  %40 = load i8, i8* %arrayidx51, align 1, !tbaa !10
  %conv52 = zext i8 %40 to i32
  %shl53 = shl i32 %conv52, 16
  %conv54 = sext i32 %shl53 to i64
  %xor55 = xor i64 %xor47, %conv54
  %41 = load i64*, i64** %RK, align 8, !tbaa !1
  %arrayidx56 = getelementptr inbounds i64, i64* %41, i64 3
  %42 = load i64, i64* %arrayidx56, align 8, !tbaa !11
  %and57 = and i64 %42, 255
  %arrayidx58 = getelementptr inbounds [256 x i8], [256 x i8]* @FSb, i32 0, i64 %and57
  %43 = load i8, i8* %arrayidx58, align 1, !tbaa !10
  %conv59 = zext i8 %43 to i32
  %shl60 = shl i32 %conv59, 24
  %conv61 = sext i32 %shl60 to i64
  %xor62 = xor i64 %xor55, %conv61
  %44 = load i64*, i64** %RK, align 8, !tbaa !1
  %arrayidx63 = getelementptr inbounds i64, i64* %44, i64 4
  store i64 %xor62, i64* %arrayidx63, align 8, !tbaa !11
  %45 = load i64*, i64** %RK, align 8, !tbaa !1
  %arrayidx64 = getelementptr inbounds i64, i64* %45, i64 1
  %46 = load i64, i64* %arrayidx64, align 8, !tbaa !11
  %47 = load i64*, i64** %RK, align 8, !tbaa !1
  %arrayidx65 = getelementptr inbounds i64, i64* %47, i64 4
  %48 = load i64, i64* %arrayidx65, align 8, !tbaa !11
  %xor66 = xor i64 %46, %48
  %49 = load i64*, i64** %RK, align 8, !tbaa !1
  %arrayidx67 = getelementptr inbounds i64, i64* %49, i64 5
  store i64 %xor66, i64* %arrayidx67, align 8, !tbaa !11
  %50 = load i64*, i64** %RK, align 8, !tbaa !1
  %arrayidx68 = getelementptr inbounds i64, i64* %50, i64 2
  %51 = load i64, i64* %arrayidx68, align 8, !tbaa !11
  %52 = load i64*, i64** %RK, align 8, !tbaa !1
  %arrayidx69 = getelementptr inbounds i64, i64* %52, i64 5
  %53 = load i64, i64* %arrayidx69, align 8, !tbaa !11
  %xor70 = xor i64 %51, %53
  %54 = load i64*, i64** %RK, align 8, !tbaa !1
  %arrayidx71 = getelementptr inbounds i64, i64* %54, i64 6
  store i64 %xor70, i64* %arrayidx71, align 8, !tbaa !11
  %55 = load i64*, i64** %RK, align 8, !tbaa !1
  %arrayidx72 = getelementptr inbounds i64, i64* %55, i64 3
  %56 = load i64, i64* %arrayidx72, align 8, !tbaa !11
  %57 = load i64*, i64** %RK, align 8, !tbaa !1
  %arrayidx73 = getelementptr inbounds i64, i64* %57, i64 6
  %58 = load i64, i64* %arrayidx73, align 8, !tbaa !11
  %xor74 = xor i64 %56, %58
  %59 = load i64*, i64** %RK, align 8, !tbaa !1
  %arrayidx75 = getelementptr inbounds i64, i64* %59, i64 7
  store i64 %xor74, i64* %arrayidx75, align 8, !tbaa !11
  br label %for.inc.76

for.inc.76:                                       ; preds = %for.body.31
  %60 = load i32, i32* %i, align 4, !tbaa !5
  %inc77 = add nsw i32 %60, 1
  store i32 %inc77, i32* %i, align 4, !tbaa !5
  %61 = load i64*, i64** %RK, align 8, !tbaa !1
  %add.ptr = getelementptr inbounds i64, i64* %61, i64 4
  store i64* %add.ptr, i64** %RK, align 8, !tbaa !1
  br label %for.cond.28

for.end.78:                                       ; preds = %for.cond.28
  br label %sw.epilog.241

sw.bb.79:                                         ; preds = %for.end
  store i32 0, i32* %i, align 4, !tbaa !5
  br label %for.cond.80

for.cond.80:                                      ; preds = %for.inc.138, %sw.bb.79
  %62 = load i32, i32* %i, align 4, !tbaa !5
  %cmp81 = icmp slt i32 %62, 8
  br i1 %cmp81, label %for.body.83, label %for.end.141

for.body.83:                                      ; preds = %for.cond.80
  %63 = load i64*, i64** %RK, align 8, !tbaa !1
  %arrayidx84 = getelementptr inbounds i64, i64* %63, i64 0
  %64 = load i64, i64* %arrayidx84, align 8, !tbaa !11
  %65 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom85 = sext i32 %65 to i64
  %arrayidx86 = getelementptr inbounds [10 x i64], [10 x i64]* @RCON, i32 0, i64 %idxprom85
  %66 = load i64, i64* %arrayidx86, align 8, !tbaa !11
  %xor87 = xor i64 %64, %66
  %67 = load i64*, i64** %RK, align 8, !tbaa !1
  %arrayidx88 = getelementptr inbounds i64, i64* %67, i64 5
  %68 = load i64, i64* %arrayidx88, align 8, !tbaa !11
  %shr89 = lshr i64 %68, 8
  %and90 = and i64 %shr89, 255
  %arrayidx91 = getelementptr inbounds [256 x i8], [256 x i8]* @FSb, i32 0, i64 %and90
  %69 = load i8, i8* %arrayidx91, align 1, !tbaa !10
  %conv92 = zext i8 %69 to i64
  %xor93 = xor i64 %xor87, %conv92
  %70 = load i64*, i64** %RK, align 8, !tbaa !1
  %arrayidx94 = getelementptr inbounds i64, i64* %70, i64 5
  %71 = load i64, i64* %arrayidx94, align 8, !tbaa !11
  %shr95 = lshr i64 %71, 16
  %and96 = and i64 %shr95, 255
  %arrayidx97 = getelementptr inbounds [256 x i8], [256 x i8]* @FSb, i32 0, i64 %and96
  %72 = load i8, i8* %arrayidx97, align 1, !tbaa !10
  %conv98 = zext i8 %72 to i32
  %shl99 = shl i32 %conv98, 8
  %conv100 = sext i32 %shl99 to i64
  %xor101 = xor i64 %xor93, %conv100
  %73 = load i64*, i64** %RK, align 8, !tbaa !1
  %arrayidx102 = getelementptr inbounds i64, i64* %73, i64 5
  %74 = load i64, i64* %arrayidx102, align 8, !tbaa !11
  %shr103 = lshr i64 %74, 24
  %and104 = and i64 %shr103, 255
  %arrayidx105 = getelementptr inbounds [256 x i8], [256 x i8]* @FSb, i32 0, i64 %and104
  %75 = load i8, i8* %arrayidx105, align 1, !tbaa !10
  %conv106 = zext i8 %75 to i32
  %shl107 = shl i32 %conv106, 16
  %conv108 = sext i32 %shl107 to i64
  %xor109 = xor i64 %xor101, %conv108
  %76 = load i64*, i64** %RK, align 8, !tbaa !1
  %arrayidx110 = getelementptr inbounds i64, i64* %76, i64 5
  %77 = load i64, i64* %arrayidx110, align 8, !tbaa !11
  %and111 = and i64 %77, 255
  %arrayidx112 = getelementptr inbounds [256 x i8], [256 x i8]* @FSb, i32 0, i64 %and111
  %78 = load i8, i8* %arrayidx112, align 1, !tbaa !10
  %conv113 = zext i8 %78 to i32
  %shl114 = shl i32 %conv113, 24
  %conv115 = sext i32 %shl114 to i64
  %xor116 = xor i64 %xor109, %conv115
  %79 = load i64*, i64** %RK, align 8, !tbaa !1
  %arrayidx117 = getelementptr inbounds i64, i64* %79, i64 6
  store i64 %xor116, i64* %arrayidx117, align 8, !tbaa !11
  %80 = load i64*, i64** %RK, align 8, !tbaa !1
  %arrayidx118 = getelementptr inbounds i64, i64* %80, i64 1
  %81 = load i64, i64* %arrayidx118, align 8, !tbaa !11
  %82 = load i64*, i64** %RK, align 8, !tbaa !1
  %arrayidx119 = getelementptr inbounds i64, i64* %82, i64 6
  %83 = load i64, i64* %arrayidx119, align 8, !tbaa !11
  %xor120 = xor i64 %81, %83
  %84 = load i64*, i64** %RK, align 8, !tbaa !1
  %arrayidx121 = getelementptr inbounds i64, i64* %84, i64 7
  store i64 %xor120, i64* %arrayidx121, align 8, !tbaa !11
  %85 = load i64*, i64** %RK, align 8, !tbaa !1
  %arrayidx122 = getelementptr inbounds i64, i64* %85, i64 2
  %86 = load i64, i64* %arrayidx122, align 8, !tbaa !11
  %87 = load i64*, i64** %RK, align 8, !tbaa !1
  %arrayidx123 = getelementptr inbounds i64, i64* %87, i64 7
  %88 = load i64, i64* %arrayidx123, align 8, !tbaa !11
  %xor124 = xor i64 %86, %88
  %89 = load i64*, i64** %RK, align 8, !tbaa !1
  %arrayidx125 = getelementptr inbounds i64, i64* %89, i64 8
  store i64 %xor124, i64* %arrayidx125, align 8, !tbaa !11
  %90 = load i64*, i64** %RK, align 8, !tbaa !1
  %arrayidx126 = getelementptr inbounds i64, i64* %90, i64 3
  %91 = load i64, i64* %arrayidx126, align 8, !tbaa !11
  %92 = load i64*, i64** %RK, align 8, !tbaa !1
  %arrayidx127 = getelementptr inbounds i64, i64* %92, i64 8
  %93 = load i64, i64* %arrayidx127, align 8, !tbaa !11
  %xor128 = xor i64 %91, %93
  %94 = load i64*, i64** %RK, align 8, !tbaa !1
  %arrayidx129 = getelementptr inbounds i64, i64* %94, i64 9
  store i64 %xor128, i64* %arrayidx129, align 8, !tbaa !11
  %95 = load i64*, i64** %RK, align 8, !tbaa !1
  %arrayidx130 = getelementptr inbounds i64, i64* %95, i64 4
  %96 = load i64, i64* %arrayidx130, align 8, !tbaa !11
  %97 = load i64*, i64** %RK, align 8, !tbaa !1
  %arrayidx131 = getelementptr inbounds i64, i64* %97, i64 9
  %98 = load i64, i64* %arrayidx131, align 8, !tbaa !11
  %xor132 = xor i64 %96, %98
  %99 = load i64*, i64** %RK, align 8, !tbaa !1
  %arrayidx133 = getelementptr inbounds i64, i64* %99, i64 10
  store i64 %xor132, i64* %arrayidx133, align 8, !tbaa !11
  %100 = load i64*, i64** %RK, align 8, !tbaa !1
  %arrayidx134 = getelementptr inbounds i64, i64* %100, i64 5
  %101 = load i64, i64* %arrayidx134, align 8, !tbaa !11
  %102 = load i64*, i64** %RK, align 8, !tbaa !1
  %arrayidx135 = getelementptr inbounds i64, i64* %102, i64 10
  %103 = load i64, i64* %arrayidx135, align 8, !tbaa !11
  %xor136 = xor i64 %101, %103
  %104 = load i64*, i64** %RK, align 8, !tbaa !1
  %arrayidx137 = getelementptr inbounds i64, i64* %104, i64 11
  store i64 %xor136, i64* %arrayidx137, align 8, !tbaa !11
  br label %for.inc.138

for.inc.138:                                      ; preds = %for.body.83
  %105 = load i32, i32* %i, align 4, !tbaa !5
  %inc139 = add nsw i32 %105, 1
  store i32 %inc139, i32* %i, align 4, !tbaa !5
  %106 = load i64*, i64** %RK, align 8, !tbaa !1
  %add.ptr140 = getelementptr inbounds i64, i64* %106, i64 6
  store i64* %add.ptr140, i64** %RK, align 8, !tbaa !1
  br label %for.cond.80

for.end.141:                                      ; preds = %for.cond.80
  br label %sw.epilog.241

sw.bb.142:                                        ; preds = %for.end
  store i32 0, i32* %i, align 4, !tbaa !5
  br label %for.cond.143

for.cond.143:                                     ; preds = %for.inc.236, %sw.bb.142
  %107 = load i32, i32* %i, align 4, !tbaa !5
  %cmp144 = icmp slt i32 %107, 7
  br i1 %cmp144, label %for.body.146, label %for.end.239

for.body.146:                                     ; preds = %for.cond.143
  %108 = load i64*, i64** %RK, align 8, !tbaa !1
  %arrayidx147 = getelementptr inbounds i64, i64* %108, i64 0
  %109 = load i64, i64* %arrayidx147, align 8, !tbaa !11
  %110 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom148 = sext i32 %110 to i64
  %arrayidx149 = getelementptr inbounds [10 x i64], [10 x i64]* @RCON, i32 0, i64 %idxprom148
  %111 = load i64, i64* %arrayidx149, align 8, !tbaa !11
  %xor150 = xor i64 %109, %111
  %112 = load i64*, i64** %RK, align 8, !tbaa !1
  %arrayidx151 = getelementptr inbounds i64, i64* %112, i64 7
  %113 = load i64, i64* %arrayidx151, align 8, !tbaa !11
  %shr152 = lshr i64 %113, 8
  %and153 = and i64 %shr152, 255
  %arrayidx154 = getelementptr inbounds [256 x i8], [256 x i8]* @FSb, i32 0, i64 %and153
  %114 = load i8, i8* %arrayidx154, align 1, !tbaa !10
  %conv155 = zext i8 %114 to i64
  %xor156 = xor i64 %xor150, %conv155
  %115 = load i64*, i64** %RK, align 8, !tbaa !1
  %arrayidx157 = getelementptr inbounds i64, i64* %115, i64 7
  %116 = load i64, i64* %arrayidx157, align 8, !tbaa !11
  %shr158 = lshr i64 %116, 16
  %and159 = and i64 %shr158, 255
  %arrayidx160 = getelementptr inbounds [256 x i8], [256 x i8]* @FSb, i32 0, i64 %and159
  %117 = load i8, i8* %arrayidx160, align 1, !tbaa !10
  %conv161 = zext i8 %117 to i32
  %shl162 = shl i32 %conv161, 8
  %conv163 = sext i32 %shl162 to i64
  %xor164 = xor i64 %xor156, %conv163
  %118 = load i64*, i64** %RK, align 8, !tbaa !1
  %arrayidx165 = getelementptr inbounds i64, i64* %118, i64 7
  %119 = load i64, i64* %arrayidx165, align 8, !tbaa !11
  %shr166 = lshr i64 %119, 24
  %and167 = and i64 %shr166, 255
  %arrayidx168 = getelementptr inbounds [256 x i8], [256 x i8]* @FSb, i32 0, i64 %and167
  %120 = load i8, i8* %arrayidx168, align 1, !tbaa !10
  %conv169 = zext i8 %120 to i32
  %shl170 = shl i32 %conv169, 16
  %conv171 = sext i32 %shl170 to i64
  %xor172 = xor i64 %xor164, %conv171
  %121 = load i64*, i64** %RK, align 8, !tbaa !1
  %arrayidx173 = getelementptr inbounds i64, i64* %121, i64 7
  %122 = load i64, i64* %arrayidx173, align 8, !tbaa !11
  %and174 = and i64 %122, 255
  %arrayidx175 = getelementptr inbounds [256 x i8], [256 x i8]* @FSb, i32 0, i64 %and174
  %123 = load i8, i8* %arrayidx175, align 1, !tbaa !10
  %conv176 = zext i8 %123 to i32
  %shl177 = shl i32 %conv176, 24
  %conv178 = sext i32 %shl177 to i64
  %xor179 = xor i64 %xor172, %conv178
  %124 = load i64*, i64** %RK, align 8, !tbaa !1
  %arrayidx180 = getelementptr inbounds i64, i64* %124, i64 8
  store i64 %xor179, i64* %arrayidx180, align 8, !tbaa !11
  %125 = load i64*, i64** %RK, align 8, !tbaa !1
  %arrayidx181 = getelementptr inbounds i64, i64* %125, i64 1
  %126 = load i64, i64* %arrayidx181, align 8, !tbaa !11
  %127 = load i64*, i64** %RK, align 8, !tbaa !1
  %arrayidx182 = getelementptr inbounds i64, i64* %127, i64 8
  %128 = load i64, i64* %arrayidx182, align 8, !tbaa !11
  %xor183 = xor i64 %126, %128
  %129 = load i64*, i64** %RK, align 8, !tbaa !1
  %arrayidx184 = getelementptr inbounds i64, i64* %129, i64 9
  store i64 %xor183, i64* %arrayidx184, align 8, !tbaa !11
  %130 = load i64*, i64** %RK, align 8, !tbaa !1
  %arrayidx185 = getelementptr inbounds i64, i64* %130, i64 2
  %131 = load i64, i64* %arrayidx185, align 8, !tbaa !11
  %132 = load i64*, i64** %RK, align 8, !tbaa !1
  %arrayidx186 = getelementptr inbounds i64, i64* %132, i64 9
  %133 = load i64, i64* %arrayidx186, align 8, !tbaa !11
  %xor187 = xor i64 %131, %133
  %134 = load i64*, i64** %RK, align 8, !tbaa !1
  %arrayidx188 = getelementptr inbounds i64, i64* %134, i64 10
  store i64 %xor187, i64* %arrayidx188, align 8, !tbaa !11
  %135 = load i64*, i64** %RK, align 8, !tbaa !1
  %arrayidx189 = getelementptr inbounds i64, i64* %135, i64 3
  %136 = load i64, i64* %arrayidx189, align 8, !tbaa !11
  %137 = load i64*, i64** %RK, align 8, !tbaa !1
  %arrayidx190 = getelementptr inbounds i64, i64* %137, i64 10
  %138 = load i64, i64* %arrayidx190, align 8, !tbaa !11
  %xor191 = xor i64 %136, %138
  %139 = load i64*, i64** %RK, align 8, !tbaa !1
  %arrayidx192 = getelementptr inbounds i64, i64* %139, i64 11
  store i64 %xor191, i64* %arrayidx192, align 8, !tbaa !11
  %140 = load i64*, i64** %RK, align 8, !tbaa !1
  %arrayidx193 = getelementptr inbounds i64, i64* %140, i64 4
  %141 = load i64, i64* %arrayidx193, align 8, !tbaa !11
  %142 = load i64*, i64** %RK, align 8, !tbaa !1
  %arrayidx194 = getelementptr inbounds i64, i64* %142, i64 11
  %143 = load i64, i64* %arrayidx194, align 8, !tbaa !11
  %and195 = and i64 %143, 255
  %arrayidx196 = getelementptr inbounds [256 x i8], [256 x i8]* @FSb, i32 0, i64 %and195
  %144 = load i8, i8* %arrayidx196, align 1, !tbaa !10
  %conv197 = zext i8 %144 to i64
  %xor198 = xor i64 %141, %conv197
  %145 = load i64*, i64** %RK, align 8, !tbaa !1
  %arrayidx199 = getelementptr inbounds i64, i64* %145, i64 11
  %146 = load i64, i64* %arrayidx199, align 8, !tbaa !11
  %shr200 = lshr i64 %146, 8
  %and201 = and i64 %shr200, 255
  %arrayidx202 = getelementptr inbounds [256 x i8], [256 x i8]* @FSb, i32 0, i64 %and201
  %147 = load i8, i8* %arrayidx202, align 1, !tbaa !10
  %conv203 = zext i8 %147 to i32
  %shl204 = shl i32 %conv203, 8
  %conv205 = sext i32 %shl204 to i64
  %xor206 = xor i64 %xor198, %conv205
  %148 = load i64*, i64** %RK, align 8, !tbaa !1
  %arrayidx207 = getelementptr inbounds i64, i64* %148, i64 11
  %149 = load i64, i64* %arrayidx207, align 8, !tbaa !11
  %shr208 = lshr i64 %149, 16
  %and209 = and i64 %shr208, 255
  %arrayidx210 = getelementptr inbounds [256 x i8], [256 x i8]* @FSb, i32 0, i64 %and209
  %150 = load i8, i8* %arrayidx210, align 1, !tbaa !10
  %conv211 = zext i8 %150 to i32
  %shl212 = shl i32 %conv211, 16
  %conv213 = sext i32 %shl212 to i64
  %xor214 = xor i64 %xor206, %conv213
  %151 = load i64*, i64** %RK, align 8, !tbaa !1
  %arrayidx215 = getelementptr inbounds i64, i64* %151, i64 11
  %152 = load i64, i64* %arrayidx215, align 8, !tbaa !11
  %shr216 = lshr i64 %152, 24
  %and217 = and i64 %shr216, 255
  %arrayidx218 = getelementptr inbounds [256 x i8], [256 x i8]* @FSb, i32 0, i64 %and217
  %153 = load i8, i8* %arrayidx218, align 1, !tbaa !10
  %conv219 = zext i8 %153 to i32
  %shl220 = shl i32 %conv219, 24
  %conv221 = sext i32 %shl220 to i64
  %xor222 = xor i64 %xor214, %conv221
  %154 = load i64*, i64** %RK, align 8, !tbaa !1
  %arrayidx223 = getelementptr inbounds i64, i64* %154, i64 12
  store i64 %xor222, i64* %arrayidx223, align 8, !tbaa !11
  %155 = load i64*, i64** %RK, align 8, !tbaa !1
  %arrayidx224 = getelementptr inbounds i64, i64* %155, i64 5
  %156 = load i64, i64* %arrayidx224, align 8, !tbaa !11
  %157 = load i64*, i64** %RK, align 8, !tbaa !1
  %arrayidx225 = getelementptr inbounds i64, i64* %157, i64 12
  %158 = load i64, i64* %arrayidx225, align 8, !tbaa !11
  %xor226 = xor i64 %156, %158
  %159 = load i64*, i64** %RK, align 8, !tbaa !1
  %arrayidx227 = getelementptr inbounds i64, i64* %159, i64 13
  store i64 %xor226, i64* %arrayidx227, align 8, !tbaa !11
  %160 = load i64*, i64** %RK, align 8, !tbaa !1
  %arrayidx228 = getelementptr inbounds i64, i64* %160, i64 6
  %161 = load i64, i64* %arrayidx228, align 8, !tbaa !11
  %162 = load i64*, i64** %RK, align 8, !tbaa !1
  %arrayidx229 = getelementptr inbounds i64, i64* %162, i64 13
  %163 = load i64, i64* %arrayidx229, align 8, !tbaa !11
  %xor230 = xor i64 %161, %163
  %164 = load i64*, i64** %RK, align 8, !tbaa !1
  %arrayidx231 = getelementptr inbounds i64, i64* %164, i64 14
  store i64 %xor230, i64* %arrayidx231, align 8, !tbaa !11
  %165 = load i64*, i64** %RK, align 8, !tbaa !1
  %arrayidx232 = getelementptr inbounds i64, i64* %165, i64 7
  %166 = load i64, i64* %arrayidx232, align 8, !tbaa !11
  %167 = load i64*, i64** %RK, align 8, !tbaa !1
  %arrayidx233 = getelementptr inbounds i64, i64* %167, i64 14
  %168 = load i64, i64* %arrayidx233, align 8, !tbaa !11
  %xor234 = xor i64 %166, %168
  %169 = load i64*, i64** %RK, align 8, !tbaa !1
  %arrayidx235 = getelementptr inbounds i64, i64* %169, i64 15
  store i64 %xor234, i64* %arrayidx235, align 8, !tbaa !11
  br label %for.inc.236

for.inc.236:                                      ; preds = %for.body.146
  %170 = load i32, i32* %i, align 4, !tbaa !5
  %inc237 = add nsw i32 %170, 1
  store i32 %inc237, i32* %i, align 4, !tbaa !5
  %171 = load i64*, i64** %RK, align 8, !tbaa !1
  %add.ptr238 = getelementptr inbounds i64, i64* %171, i64 8
  store i64* %add.ptr238, i64** %RK, align 8, !tbaa !1
  br label %for.cond.143

for.end.239:                                      ; preds = %for.cond.143
  br label %sw.epilog.241

sw.default.240:                                   ; preds = %for.end
  br label %sw.epilog.241

sw.epilog.241:                                    ; preds = %sw.default.240, %for.end.239, %for.end.141, %for.end.78
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %sw.epilog.241, %sw.default
  %172 = bitcast i64** %RK to i8*
  call void @llvm.lifetime.end(i64 8, i8* %172) #1
  %173 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %173) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup, %cleanup
  ret void

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #1

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #1

; Function Attrs: nounwind uwtable
define void @aes_setkey_dec(%struct.aes_context* %ctx, i8* %key, i32 %keysize) #0 {
entry:
  %ctx.addr = alloca %struct.aes_context*, align 8
  %key.addr = alloca i8*, align 8
  %keysize.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %cty = alloca %struct.aes_context, align 8
  %RK = alloca i64*, align 8
  %SK = alloca i64*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.aes_context* %ctx, %struct.aes_context** %ctx.addr, align 8, !tbaa !1
  store i8* %key, i8** %key.addr, align 8, !tbaa !1
  store i32 %keysize, i32* %keysize.addr, align 4, !tbaa !5
  %0 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast i32* %j to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = bitcast %struct.aes_context* %cty to i8*
  call void @llvm.lifetime.start(i64 560, i8* %2) #1
  %3 = bitcast i64** %RK to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #1
  %4 = bitcast i64** %SK to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4) #1
  %5 = load i32, i32* %keysize.addr, align 4, !tbaa !5
  switch i32 %5, label %sw.default [
    i32 128, label %sw.bb
    i32 192, label %sw.bb.1
    i32 256, label %sw.bb.3
  ]

sw.bb:                                            ; preds = %entry
  %6 = load %struct.aes_context*, %struct.aes_context** %ctx.addr, align 8, !tbaa !1
  %nr = getelementptr inbounds %struct.aes_context, %struct.aes_context* %6, i32 0, i32 0
  store i32 10, i32* %nr, align 4, !tbaa !7
  br label %sw.epilog

sw.bb.1:                                          ; preds = %entry
  %7 = load %struct.aes_context*, %struct.aes_context** %ctx.addr, align 8, !tbaa !1
  %nr2 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %7, i32 0, i32 0
  store i32 12, i32* %nr2, align 4, !tbaa !7
  br label %sw.epilog

sw.bb.3:                                          ; preds = %entry
  %8 = load %struct.aes_context*, %struct.aes_context** %ctx.addr, align 8, !tbaa !1
  %nr4 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %8, i32 0, i32 0
  store i32 14, i32* %nr4, align 4, !tbaa !7
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

sw.epilog:                                        ; preds = %sw.bb.3, %sw.bb.1, %sw.bb
  %9 = load %struct.aes_context*, %struct.aes_context** %ctx.addr, align 8, !tbaa !1
  %buf = getelementptr inbounds %struct.aes_context, %struct.aes_context* %9, i32 0, i32 2
  %arraydecay = getelementptr inbounds [68 x i64], [68 x i64]* %buf, i32 0, i32 0
  store i64* %arraydecay, i64** %RK, align 8, !tbaa !1
  %10 = load %struct.aes_context*, %struct.aes_context** %ctx.addr, align 8, !tbaa !1
  %rk = getelementptr inbounds %struct.aes_context, %struct.aes_context* %10, i32 0, i32 1
  store i64* %arraydecay, i64** %rk, align 8, !tbaa !9
  %11 = load i8*, i8** %key.addr, align 8, !tbaa !1
  %12 = load i32, i32* %keysize.addr, align 4, !tbaa !5
  call void @aes_setkey_enc(%struct.aes_context* %cty, i8* %11, i32 %12) #3
  %rk5 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %cty, i32 0, i32 1
  %13 = load i64*, i64** %rk5, align 8, !tbaa !9
  %nr6 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %cty, i32 0, i32 0
  %14 = load i32, i32* %nr6, align 4, !tbaa !7
  %mul = mul nsw i32 %14, 4
  %idx.ext = sext i32 %mul to i64
  %add.ptr = getelementptr inbounds i64, i64* %13, i64 %idx.ext
  store i64* %add.ptr, i64** %SK, align 8, !tbaa !1
  %15 = load i64*, i64** %SK, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds i64, i64* %15, i32 1
  store i64* %incdec.ptr, i64** %SK, align 8, !tbaa !1
  %16 = load i64, i64* %15, align 8, !tbaa !11
  %17 = load i64*, i64** %RK, align 8, !tbaa !1
  %incdec.ptr7 = getelementptr inbounds i64, i64* %17, i32 1
  store i64* %incdec.ptr7, i64** %RK, align 8, !tbaa !1
  store i64 %16, i64* %17, align 8, !tbaa !11
  %18 = load i64*, i64** %SK, align 8, !tbaa !1
  %incdec.ptr8 = getelementptr inbounds i64, i64* %18, i32 1
  store i64* %incdec.ptr8, i64** %SK, align 8, !tbaa !1
  %19 = load i64, i64* %18, align 8, !tbaa !11
  %20 = load i64*, i64** %RK, align 8, !tbaa !1
  %incdec.ptr9 = getelementptr inbounds i64, i64* %20, i32 1
  store i64* %incdec.ptr9, i64** %RK, align 8, !tbaa !1
  store i64 %19, i64* %20, align 8, !tbaa !11
  %21 = load i64*, i64** %SK, align 8, !tbaa !1
  %incdec.ptr10 = getelementptr inbounds i64, i64* %21, i32 1
  store i64* %incdec.ptr10, i64** %SK, align 8, !tbaa !1
  %22 = load i64, i64* %21, align 8, !tbaa !11
  %23 = load i64*, i64** %RK, align 8, !tbaa !1
  %incdec.ptr11 = getelementptr inbounds i64, i64* %23, i32 1
  store i64* %incdec.ptr11, i64** %RK, align 8, !tbaa !1
  store i64 %22, i64* %23, align 8, !tbaa !11
  %24 = load i64*, i64** %SK, align 8, !tbaa !1
  %incdec.ptr12 = getelementptr inbounds i64, i64* %24, i32 1
  store i64* %incdec.ptr12, i64** %SK, align 8, !tbaa !1
  %25 = load i64, i64* %24, align 8, !tbaa !11
  %26 = load i64*, i64** %RK, align 8, !tbaa !1
  %incdec.ptr13 = getelementptr inbounds i64, i64* %26, i32 1
  store i64* %incdec.ptr13, i64** %RK, align 8, !tbaa !1
  store i64 %25, i64* %26, align 8, !tbaa !11
  %27 = load %struct.aes_context*, %struct.aes_context** %ctx.addr, align 8, !tbaa !1
  %nr14 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %27, i32 0, i32 0
  %28 = load i32, i32* %nr14, align 4, !tbaa !7
  %sub = sub nsw i32 %28, 1
  store i32 %sub, i32* %i, align 4, !tbaa !5
  %29 = load i64*, i64** %SK, align 8, !tbaa !1
  %add.ptr15 = getelementptr inbounds i64, i64* %29, i64 -8
  store i64* %add.ptr15, i64** %SK, align 8, !tbaa !1
  br label %for.cond

for.cond:                                         ; preds = %for.inc.38, %sw.epilog
  %30 = load i32, i32* %i, align 4, !tbaa !5
  %cmp = icmp sgt i32 %30, 0
  br i1 %cmp, label %for.body, label %for.end.40

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !tbaa !5
  br label %for.cond.16

for.cond.16:                                      ; preds = %for.inc, %for.body
  %31 = load i32, i32* %j, align 4, !tbaa !5
  %cmp17 = icmp slt i32 %31, 4
  br i1 %cmp17, label %for.body.18, label %for.end

for.body.18:                                      ; preds = %for.cond.16
  %32 = load i64*, i64** %SK, align 8, !tbaa !1
  %33 = load i64, i64* %32, align 8, !tbaa !11
  %and = and i64 %33, 255
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* @FSb, i32 0, i64 %and
  %34 = load i8, i8* %arrayidx, align 1, !tbaa !10
  %idxprom = zext i8 %34 to i64
  %arrayidx19 = getelementptr inbounds [256 x i64], [256 x i64]* @RT0, i32 0, i64 %idxprom
  %35 = load i64, i64* %arrayidx19, align 8, !tbaa !11
  %36 = load i64*, i64** %SK, align 8, !tbaa !1
  %37 = load i64, i64* %36, align 8, !tbaa !11
  %shr = lshr i64 %37, 8
  %and20 = and i64 %shr, 255
  %arrayidx21 = getelementptr inbounds [256 x i8], [256 x i8]* @FSb, i32 0, i64 %and20
  %38 = load i8, i8* %arrayidx21, align 1, !tbaa !10
  %idxprom22 = zext i8 %38 to i64
  %arrayidx23 = getelementptr inbounds [256 x i64], [256 x i64]* @RT1, i32 0, i64 %idxprom22
  %39 = load i64, i64* %arrayidx23, align 8, !tbaa !11
  %xor = xor i64 %35, %39
  %40 = load i64*, i64** %SK, align 8, !tbaa !1
  %41 = load i64, i64* %40, align 8, !tbaa !11
  %shr24 = lshr i64 %41, 16
  %and25 = and i64 %shr24, 255
  %arrayidx26 = getelementptr inbounds [256 x i8], [256 x i8]* @FSb, i32 0, i64 %and25
  %42 = load i8, i8* %arrayidx26, align 1, !tbaa !10
  %idxprom27 = zext i8 %42 to i64
  %arrayidx28 = getelementptr inbounds [256 x i64], [256 x i64]* @RT2, i32 0, i64 %idxprom27
  %43 = load i64, i64* %arrayidx28, align 8, !tbaa !11
  %xor29 = xor i64 %xor, %43
  %44 = load i64*, i64** %SK, align 8, !tbaa !1
  %45 = load i64, i64* %44, align 8, !tbaa !11
  %shr30 = lshr i64 %45, 24
  %and31 = and i64 %shr30, 255
  %arrayidx32 = getelementptr inbounds [256 x i8], [256 x i8]* @FSb, i32 0, i64 %and31
  %46 = load i8, i8* %arrayidx32, align 1, !tbaa !10
  %idxprom33 = zext i8 %46 to i64
  %arrayidx34 = getelementptr inbounds [256 x i64], [256 x i64]* @RT3, i32 0, i64 %idxprom33
  %47 = load i64, i64* %arrayidx34, align 8, !tbaa !11
  %xor35 = xor i64 %xor29, %47
  %48 = load i64*, i64** %RK, align 8, !tbaa !1
  %incdec.ptr36 = getelementptr inbounds i64, i64* %48, i32 1
  store i64* %incdec.ptr36, i64** %RK, align 8, !tbaa !1
  store i64 %xor35, i64* %48, align 8, !tbaa !11
  br label %for.inc

for.inc:                                          ; preds = %for.body.18
  %49 = load i32, i32* %j, align 4, !tbaa !5
  %inc = add nsw i32 %49, 1
  store i32 %inc, i32* %j, align 4, !tbaa !5
  %50 = load i64*, i64** %SK, align 8, !tbaa !1
  %incdec.ptr37 = getelementptr inbounds i64, i64* %50, i32 1
  store i64* %incdec.ptr37, i64** %SK, align 8, !tbaa !1
  br label %for.cond.16

for.end:                                          ; preds = %for.cond.16
  br label %for.inc.38

for.inc.38:                                       ; preds = %for.end
  %51 = load i32, i32* %i, align 4, !tbaa !5
  %dec = add nsw i32 %51, -1
  store i32 %dec, i32* %i, align 4, !tbaa !5
  %52 = load i64*, i64** %SK, align 8, !tbaa !1
  %add.ptr39 = getelementptr inbounds i64, i64* %52, i64 -8
  store i64* %add.ptr39, i64** %SK, align 8, !tbaa !1
  br label %for.cond

for.end.40:                                       ; preds = %for.cond
  %53 = load i64*, i64** %SK, align 8, !tbaa !1
  %incdec.ptr41 = getelementptr inbounds i64, i64* %53, i32 1
  store i64* %incdec.ptr41, i64** %SK, align 8, !tbaa !1
  %54 = load i64, i64* %53, align 8, !tbaa !11
  %55 = load i64*, i64** %RK, align 8, !tbaa !1
  %incdec.ptr42 = getelementptr inbounds i64, i64* %55, i32 1
  store i64* %incdec.ptr42, i64** %RK, align 8, !tbaa !1
  store i64 %54, i64* %55, align 8, !tbaa !11
  %56 = load i64*, i64** %SK, align 8, !tbaa !1
  %incdec.ptr43 = getelementptr inbounds i64, i64* %56, i32 1
  store i64* %incdec.ptr43, i64** %SK, align 8, !tbaa !1
  %57 = load i64, i64* %56, align 8, !tbaa !11
  %58 = load i64*, i64** %RK, align 8, !tbaa !1
  %incdec.ptr44 = getelementptr inbounds i64, i64* %58, i32 1
  store i64* %incdec.ptr44, i64** %RK, align 8, !tbaa !1
  store i64 %57, i64* %58, align 8, !tbaa !11
  %59 = load i64*, i64** %SK, align 8, !tbaa !1
  %incdec.ptr45 = getelementptr inbounds i64, i64* %59, i32 1
  store i64* %incdec.ptr45, i64** %SK, align 8, !tbaa !1
  %60 = load i64, i64* %59, align 8, !tbaa !11
  %61 = load i64*, i64** %RK, align 8, !tbaa !1
  %incdec.ptr46 = getelementptr inbounds i64, i64* %61, i32 1
  store i64* %incdec.ptr46, i64** %RK, align 8, !tbaa !1
  store i64 %60, i64* %61, align 8, !tbaa !11
  %62 = load i64*, i64** %SK, align 8, !tbaa !1
  %incdec.ptr47 = getelementptr inbounds i64, i64* %62, i32 1
  store i64* %incdec.ptr47, i64** %SK, align 8, !tbaa !1
  %63 = load i64, i64* %62, align 8, !tbaa !11
  %64 = load i64*, i64** %RK, align 8, !tbaa !1
  %incdec.ptr48 = getelementptr inbounds i64, i64* %64, i32 1
  store i64* %incdec.ptr48, i64** %RK, align 8, !tbaa !1
  store i64 %63, i64* %64, align 8, !tbaa !11
  %65 = bitcast %struct.aes_context* %cty to i8*
  %call = call i8* @memset(i8* %65, i32 0, i64 560) #4
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %for.end.40, %sw.default
  %66 = bitcast i64** %SK to i8*
  call void @llvm.lifetime.end(i64 8, i8* %66) #1
  %67 = bitcast i64** %RK to i8*
  call void @llvm.lifetime.end(i64 8, i8* %67) #1
  %68 = bitcast %struct.aes_context* %cty to i8*
  call void @llvm.lifetime.end(i64 560, i8* %68) #1
  %69 = bitcast i32* %j to i8*
  call void @llvm.lifetime.end(i64 4, i8* %69) #1
  %70 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %70) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup, %cleanup
  ret void

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nounwind
declare i8* @memset(i8*, i32, i64) #2

; Function Attrs: nounwind uwtable
define void @aes_crypt_ecb(%struct.aes_context* %ctx, i32 %mode, i8* %input, i8* %output) #0 {
entry:
  %ctx.addr = alloca %struct.aes_context*, align 8
  %mode.addr = alloca i32, align 4
  %input.addr = alloca i8*, align 8
  %output.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  %X0 = alloca i64, align 8
  %X1 = alloca i64, align 8
  %X2 = alloca i64, align 8
  %X3 = alloca i64, align 8
  %Y0 = alloca i64, align 8
  %Y1 = alloca i64, align 8
  %Y2 = alloca i64, align 8
  %Y3 = alloca i64, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %ctx.addr, align 8, !tbaa !1
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !5
  store i8* %input, i8** %input.addr, align 8, !tbaa !1
  store i8* %output, i8** %output.addr, align 8, !tbaa !1
  %0 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast i64** %RK to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #1
  %2 = bitcast i64* %X0 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #1
  %3 = bitcast i64* %X1 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #1
  %4 = bitcast i64* %X2 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4) #1
  %5 = bitcast i64* %X3 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5) #1
  %6 = bitcast i64* %Y0 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6) #1
  %7 = bitcast i64* %Y1 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7) #1
  %8 = bitcast i64* %Y2 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8) #1
  %9 = bitcast i64* %Y3 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9) #1
  %10 = load %struct.aes_context*, %struct.aes_context** %ctx.addr, align 8, !tbaa !1
  %rk = getelementptr inbounds %struct.aes_context, %struct.aes_context* %10, i32 0, i32 1
  %11 = load i64*, i64** %rk, align 8, !tbaa !9
  store i64* %11, i64** %RK, align 8, !tbaa !1
  %12 = load i8*, i8** %input.addr, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds i8, i8* %12, i64 0
  %13 = load i8, i8* %arrayidx, align 1, !tbaa !10
  %conv = zext i8 %13 to i64
  %14 = load i8*, i8** %input.addr, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds i8, i8* %14, i64 1
  %15 = load i8, i8* %arrayidx1, align 1, !tbaa !10
  %conv2 = zext i8 %15 to i64
  %shl = shl i64 %conv2, 8
  %or = or i64 %conv, %shl
  %16 = load i8*, i8** %input.addr, align 8, !tbaa !1
  %arrayidx3 = getelementptr inbounds i8, i8* %16, i64 2
  %17 = load i8, i8* %arrayidx3, align 1, !tbaa !10
  %conv4 = zext i8 %17 to i64
  %shl5 = shl i64 %conv4, 16
  %or6 = or i64 %or, %shl5
  %18 = load i8*, i8** %input.addr, align 8, !tbaa !1
  %arrayidx7 = getelementptr inbounds i8, i8* %18, i64 3
  %19 = load i8, i8* %arrayidx7, align 1, !tbaa !10
  %conv8 = zext i8 %19 to i64
  %shl9 = shl i64 %conv8, 24
  %or10 = or i64 %or6, %shl9
  store i64 %or10, i64* %X0, align 8, !tbaa !11
  %20 = load i64*, i64** %RK, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds i64, i64* %20, i32 1
  store i64* %incdec.ptr, i64** %RK, align 8, !tbaa !1
  %21 = load i64, i64* %20, align 8, !tbaa !11
  %22 = load i64, i64* %X0, align 8, !tbaa !11
  %xor = xor i64 %22, %21
  store i64 %xor, i64* %X0, align 8, !tbaa !11
  %23 = load i8*, i8** %input.addr, align 8, !tbaa !1
  %arrayidx11 = getelementptr inbounds i8, i8* %23, i64 4
  %24 = load i8, i8* %arrayidx11, align 1, !tbaa !10
  %conv12 = zext i8 %24 to i64
  %25 = load i8*, i8** %input.addr, align 8, !tbaa !1
  %arrayidx13 = getelementptr inbounds i8, i8* %25, i64 5
  %26 = load i8, i8* %arrayidx13, align 1, !tbaa !10
  %conv14 = zext i8 %26 to i64
  %shl15 = shl i64 %conv14, 8
  %or16 = or i64 %conv12, %shl15
  %27 = load i8*, i8** %input.addr, align 8, !tbaa !1
  %arrayidx17 = getelementptr inbounds i8, i8* %27, i64 6
  %28 = load i8, i8* %arrayidx17, align 1, !tbaa !10
  %conv18 = zext i8 %28 to i64
  %shl19 = shl i64 %conv18, 16
  %or20 = or i64 %or16, %shl19
  %29 = load i8*, i8** %input.addr, align 8, !tbaa !1
  %arrayidx21 = getelementptr inbounds i8, i8* %29, i64 7
  %30 = load i8, i8* %arrayidx21, align 1, !tbaa !10
  %conv22 = zext i8 %30 to i64
  %shl23 = shl i64 %conv22, 24
  %or24 = or i64 %or20, %shl23
  store i64 %or24, i64* %X1, align 8, !tbaa !11
  %31 = load i64*, i64** %RK, align 8, !tbaa !1
  %incdec.ptr25 = getelementptr inbounds i64, i64* %31, i32 1
  store i64* %incdec.ptr25, i64** %RK, align 8, !tbaa !1
  %32 = load i64, i64* %31, align 8, !tbaa !11
  %33 = load i64, i64* %X1, align 8, !tbaa !11
  %xor26 = xor i64 %33, %32
  store i64 %xor26, i64* %X1, align 8, !tbaa !11
  %34 = load i8*, i8** %input.addr, align 8, !tbaa !1
  %arrayidx27 = getelementptr inbounds i8, i8* %34, i64 8
  %35 = load i8, i8* %arrayidx27, align 1, !tbaa !10
  %conv28 = zext i8 %35 to i64
  %36 = load i8*, i8** %input.addr, align 8, !tbaa !1
  %arrayidx29 = getelementptr inbounds i8, i8* %36, i64 9
  %37 = load i8, i8* %arrayidx29, align 1, !tbaa !10
  %conv30 = zext i8 %37 to i64
  %shl31 = shl i64 %conv30, 8
  %or32 = or i64 %conv28, %shl31
  %38 = load i8*, i8** %input.addr, align 8, !tbaa !1
  %arrayidx33 = getelementptr inbounds i8, i8* %38, i64 10
  %39 = load i8, i8* %arrayidx33, align 1, !tbaa !10
  %conv34 = zext i8 %39 to i64
  %shl35 = shl i64 %conv34, 16
  %or36 = or i64 %or32, %shl35
  %40 = load i8*, i8** %input.addr, align 8, !tbaa !1
  %arrayidx37 = getelementptr inbounds i8, i8* %40, i64 11
  %41 = load i8, i8* %arrayidx37, align 1, !tbaa !10
  %conv38 = zext i8 %41 to i64
  %shl39 = shl i64 %conv38, 24
  %or40 = or i64 %or36, %shl39
  store i64 %or40, i64* %X2, align 8, !tbaa !11
  %42 = load i64*, i64** %RK, align 8, !tbaa !1
  %incdec.ptr41 = getelementptr inbounds i64, i64* %42, i32 1
  store i64* %incdec.ptr41, i64** %RK, align 8, !tbaa !1
  %43 = load i64, i64* %42, align 8, !tbaa !11
  %44 = load i64, i64* %X2, align 8, !tbaa !11
  %xor42 = xor i64 %44, %43
  store i64 %xor42, i64* %X2, align 8, !tbaa !11
  %45 = load i8*, i8** %input.addr, align 8, !tbaa !1
  %arrayidx43 = getelementptr inbounds i8, i8* %45, i64 12
  %46 = load i8, i8* %arrayidx43, align 1, !tbaa !10
  %conv44 = zext i8 %46 to i64
  %47 = load i8*, i8** %input.addr, align 8, !tbaa !1
  %arrayidx45 = getelementptr inbounds i8, i8* %47, i64 13
  %48 = load i8, i8* %arrayidx45, align 1, !tbaa !10
  %conv46 = zext i8 %48 to i64
  %shl47 = shl i64 %conv46, 8
  %or48 = or i64 %conv44, %shl47
  %49 = load i8*, i8** %input.addr, align 8, !tbaa !1
  %arrayidx49 = getelementptr inbounds i8, i8* %49, i64 14
  %50 = load i8, i8* %arrayidx49, align 1, !tbaa !10
  %conv50 = zext i8 %50 to i64
  %shl51 = shl i64 %conv50, 16
  %or52 = or i64 %or48, %shl51
  %51 = load i8*, i8** %input.addr, align 8, !tbaa !1
  %arrayidx53 = getelementptr inbounds i8, i8* %51, i64 15
  %52 = load i8, i8* %arrayidx53, align 1, !tbaa !10
  %conv54 = zext i8 %52 to i64
  %shl55 = shl i64 %conv54, 24
  %or56 = or i64 %or52, %shl55
  store i64 %or56, i64* %X3, align 8, !tbaa !11
  %53 = load i64*, i64** %RK, align 8, !tbaa !1
  %incdec.ptr57 = getelementptr inbounds i64, i64* %53, i32 1
  store i64* %incdec.ptr57, i64** %RK, align 8, !tbaa !1
  %54 = load i64, i64* %53, align 8, !tbaa !11
  %55 = load i64, i64* %X3, align 8, !tbaa !11
  %xor58 = xor i64 %55, %54
  store i64 %xor58, i64* %X3, align 8, !tbaa !11
  %56 = load i32, i32* %mode.addr, align 4, !tbaa !5
  %cmp = icmp eq i32 %56, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %57 = load %struct.aes_context*, %struct.aes_context** %ctx.addr, align 8, !tbaa !1
  %nr = getelementptr inbounds %struct.aes_context, %struct.aes_context* %57, i32 0, i32 0
  %58 = load i32, i32* %nr, align 4, !tbaa !7
  %shr = ashr i32 %58, 1
  %sub = sub nsw i32 %shr, 1
  store i32 %sub, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then
  %59 = load i32, i32* %i, align 4, !tbaa !5
  %cmp60 = icmp sgt i32 %59, 0
  br i1 %cmp60, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %60 = load i64*, i64** %RK, align 8, !tbaa !1
  %incdec.ptr62 = getelementptr inbounds i64, i64* %60, i32 1
  store i64* %incdec.ptr62, i64** %RK, align 8, !tbaa !1
  %61 = load i64, i64* %60, align 8, !tbaa !11
  %62 = load i64, i64* %X0, align 8, !tbaa !11
  %and = and i64 %62, 255
  %arrayidx63 = getelementptr inbounds [256 x i64], [256 x i64]* @RT0, i32 0, i64 %and
  %63 = load i64, i64* %arrayidx63, align 8, !tbaa !11
  %xor64 = xor i64 %61, %63
  %64 = load i64, i64* %X3, align 8, !tbaa !11
  %shr65 = lshr i64 %64, 8
  %and66 = and i64 %shr65, 255
  %arrayidx67 = getelementptr inbounds [256 x i64], [256 x i64]* @RT1, i32 0, i64 %and66
  %65 = load i64, i64* %arrayidx67, align 8, !tbaa !11
  %xor68 = xor i64 %xor64, %65
  %66 = load i64, i64* %X2, align 8, !tbaa !11
  %shr69 = lshr i64 %66, 16
  %and70 = and i64 %shr69, 255
  %arrayidx71 = getelementptr inbounds [256 x i64], [256 x i64]* @RT2, i32 0, i64 %and70
  %67 = load i64, i64* %arrayidx71, align 8, !tbaa !11
  %xor72 = xor i64 %xor68, %67
  %68 = load i64, i64* %X1, align 8, !tbaa !11
  %shr73 = lshr i64 %68, 24
  %and74 = and i64 %shr73, 255
  %arrayidx75 = getelementptr inbounds [256 x i64], [256 x i64]* @RT3, i32 0, i64 %and74
  %69 = load i64, i64* %arrayidx75, align 8, !tbaa !11
  %xor76 = xor i64 %xor72, %69
  store i64 %xor76, i64* %Y0, align 8, !tbaa !11
  %70 = load i64*, i64** %RK, align 8, !tbaa !1
  %incdec.ptr77 = getelementptr inbounds i64, i64* %70, i32 1
  store i64* %incdec.ptr77, i64** %RK, align 8, !tbaa !1
  %71 = load i64, i64* %70, align 8, !tbaa !11
  %72 = load i64, i64* %X1, align 8, !tbaa !11
  %and78 = and i64 %72, 255
  %arrayidx79 = getelementptr inbounds [256 x i64], [256 x i64]* @RT0, i32 0, i64 %and78
  %73 = load i64, i64* %arrayidx79, align 8, !tbaa !11
  %xor80 = xor i64 %71, %73
  %74 = load i64, i64* %X0, align 8, !tbaa !11
  %shr81 = lshr i64 %74, 8
  %and82 = and i64 %shr81, 255
  %arrayidx83 = getelementptr inbounds [256 x i64], [256 x i64]* @RT1, i32 0, i64 %and82
  %75 = load i64, i64* %arrayidx83, align 8, !tbaa !11
  %xor84 = xor i64 %xor80, %75
  %76 = load i64, i64* %X3, align 8, !tbaa !11
  %shr85 = lshr i64 %76, 16
  %and86 = and i64 %shr85, 255
  %arrayidx87 = getelementptr inbounds [256 x i64], [256 x i64]* @RT2, i32 0, i64 %and86
  %77 = load i64, i64* %arrayidx87, align 8, !tbaa !11
  %xor88 = xor i64 %xor84, %77
  %78 = load i64, i64* %X2, align 8, !tbaa !11
  %shr89 = lshr i64 %78, 24
  %and90 = and i64 %shr89, 255
  %arrayidx91 = getelementptr inbounds [256 x i64], [256 x i64]* @RT3, i32 0, i64 %and90
  %79 = load i64, i64* %arrayidx91, align 8, !tbaa !11
  %xor92 = xor i64 %xor88, %79
  store i64 %xor92, i64* %Y1, align 8, !tbaa !11
  %80 = load i64*, i64** %RK, align 8, !tbaa !1
  %incdec.ptr93 = getelementptr inbounds i64, i64* %80, i32 1
  store i64* %incdec.ptr93, i64** %RK, align 8, !tbaa !1
  %81 = load i64, i64* %80, align 8, !tbaa !11
  %82 = load i64, i64* %X2, align 8, !tbaa !11
  %and94 = and i64 %82, 255
  %arrayidx95 = getelementptr inbounds [256 x i64], [256 x i64]* @RT0, i32 0, i64 %and94
  %83 = load i64, i64* %arrayidx95, align 8, !tbaa !11
  %xor96 = xor i64 %81, %83
  %84 = load i64, i64* %X1, align 8, !tbaa !11
  %shr97 = lshr i64 %84, 8
  %and98 = and i64 %shr97, 255
  %arrayidx99 = getelementptr inbounds [256 x i64], [256 x i64]* @RT1, i32 0, i64 %and98
  %85 = load i64, i64* %arrayidx99, align 8, !tbaa !11
  %xor100 = xor i64 %xor96, %85
  %86 = load i64, i64* %X0, align 8, !tbaa !11
  %shr101 = lshr i64 %86, 16
  %and102 = and i64 %shr101, 255
  %arrayidx103 = getelementptr inbounds [256 x i64], [256 x i64]* @RT2, i32 0, i64 %and102
  %87 = load i64, i64* %arrayidx103, align 8, !tbaa !11
  %xor104 = xor i64 %xor100, %87
  %88 = load i64, i64* %X3, align 8, !tbaa !11
  %shr105 = lshr i64 %88, 24
  %and106 = and i64 %shr105, 255
  %arrayidx107 = getelementptr inbounds [256 x i64], [256 x i64]* @RT3, i32 0, i64 %and106
  %89 = load i64, i64* %arrayidx107, align 8, !tbaa !11
  %xor108 = xor i64 %xor104, %89
  store i64 %xor108, i64* %Y2, align 8, !tbaa !11
  %90 = load i64*, i64** %RK, align 8, !tbaa !1
  %incdec.ptr109 = getelementptr inbounds i64, i64* %90, i32 1
  store i64* %incdec.ptr109, i64** %RK, align 8, !tbaa !1
  %91 = load i64, i64* %90, align 8, !tbaa !11
  %92 = load i64, i64* %X3, align 8, !tbaa !11
  %and110 = and i64 %92, 255
  %arrayidx111 = getelementptr inbounds [256 x i64], [256 x i64]* @RT0, i32 0, i64 %and110
  %93 = load i64, i64* %arrayidx111, align 8, !tbaa !11
  %xor112 = xor i64 %91, %93
  %94 = load i64, i64* %X2, align 8, !tbaa !11
  %shr113 = lshr i64 %94, 8
  %and114 = and i64 %shr113, 255
  %arrayidx115 = getelementptr inbounds [256 x i64], [256 x i64]* @RT1, i32 0, i64 %and114
  %95 = load i64, i64* %arrayidx115, align 8, !tbaa !11
  %xor116 = xor i64 %xor112, %95
  %96 = load i64, i64* %X1, align 8, !tbaa !11
  %shr117 = lshr i64 %96, 16
  %and118 = and i64 %shr117, 255
  %arrayidx119 = getelementptr inbounds [256 x i64], [256 x i64]* @RT2, i32 0, i64 %and118
  %97 = load i64, i64* %arrayidx119, align 8, !tbaa !11
  %xor120 = xor i64 %xor116, %97
  %98 = load i64, i64* %X0, align 8, !tbaa !11
  %shr121 = lshr i64 %98, 24
  %and122 = and i64 %shr121, 255
  %arrayidx123 = getelementptr inbounds [256 x i64], [256 x i64]* @RT3, i32 0, i64 %and122
  %99 = load i64, i64* %arrayidx123, align 8, !tbaa !11
  %xor124 = xor i64 %xor120, %99
  store i64 %xor124, i64* %Y3, align 8, !tbaa !11
  %100 = load i64*, i64** %RK, align 8, !tbaa !1
  %incdec.ptr125 = getelementptr inbounds i64, i64* %100, i32 1
  store i64* %incdec.ptr125, i64** %RK, align 8, !tbaa !1
  %101 = load i64, i64* %100, align 8, !tbaa !11
  %102 = load i64, i64* %Y0, align 8, !tbaa !11
  %and126 = and i64 %102, 255
  %arrayidx127 = getelementptr inbounds [256 x i64], [256 x i64]* @RT0, i32 0, i64 %and126
  %103 = load i64, i64* %arrayidx127, align 8, !tbaa !11
  %xor128 = xor i64 %101, %103
  %104 = load i64, i64* %Y3, align 8, !tbaa !11
  %shr129 = lshr i64 %104, 8
  %and130 = and i64 %shr129, 255
  %arrayidx131 = getelementptr inbounds [256 x i64], [256 x i64]* @RT1, i32 0, i64 %and130
  %105 = load i64, i64* %arrayidx131, align 8, !tbaa !11
  %xor132 = xor i64 %xor128, %105
  %106 = load i64, i64* %Y2, align 8, !tbaa !11
  %shr133 = lshr i64 %106, 16
  %and134 = and i64 %shr133, 255
  %arrayidx135 = getelementptr inbounds [256 x i64], [256 x i64]* @RT2, i32 0, i64 %and134
  %107 = load i64, i64* %arrayidx135, align 8, !tbaa !11
  %xor136 = xor i64 %xor132, %107
  %108 = load i64, i64* %Y1, align 8, !tbaa !11
  %shr137 = lshr i64 %108, 24
  %and138 = and i64 %shr137, 255
  %arrayidx139 = getelementptr inbounds [256 x i64], [256 x i64]* @RT3, i32 0, i64 %and138
  %109 = load i64, i64* %arrayidx139, align 8, !tbaa !11
  %xor140 = xor i64 %xor136, %109
  store i64 %xor140, i64* %X0, align 8, !tbaa !11
  %110 = load i64*, i64** %RK, align 8, !tbaa !1
  %incdec.ptr141 = getelementptr inbounds i64, i64* %110, i32 1
  store i64* %incdec.ptr141, i64** %RK, align 8, !tbaa !1
  %111 = load i64, i64* %110, align 8, !tbaa !11
  %112 = load i64, i64* %Y1, align 8, !tbaa !11
  %and142 = and i64 %112, 255
  %arrayidx143 = getelementptr inbounds [256 x i64], [256 x i64]* @RT0, i32 0, i64 %and142
  %113 = load i64, i64* %arrayidx143, align 8, !tbaa !11
  %xor144 = xor i64 %111, %113
  %114 = load i64, i64* %Y0, align 8, !tbaa !11
  %shr145 = lshr i64 %114, 8
  %and146 = and i64 %shr145, 255
  %arrayidx147 = getelementptr inbounds [256 x i64], [256 x i64]* @RT1, i32 0, i64 %and146
  %115 = load i64, i64* %arrayidx147, align 8, !tbaa !11
  %xor148 = xor i64 %xor144, %115
  %116 = load i64, i64* %Y3, align 8, !tbaa !11
  %shr149 = lshr i64 %116, 16
  %and150 = and i64 %shr149, 255
  %arrayidx151 = getelementptr inbounds [256 x i64], [256 x i64]* @RT2, i32 0, i64 %and150
  %117 = load i64, i64* %arrayidx151, align 8, !tbaa !11
  %xor152 = xor i64 %xor148, %117
  %118 = load i64, i64* %Y2, align 8, !tbaa !11
  %shr153 = lshr i64 %118, 24
  %and154 = and i64 %shr153, 255
  %arrayidx155 = getelementptr inbounds [256 x i64], [256 x i64]* @RT3, i32 0, i64 %and154
  %119 = load i64, i64* %arrayidx155, align 8, !tbaa !11
  %xor156 = xor i64 %xor152, %119
  store i64 %xor156, i64* %X1, align 8, !tbaa !11
  %120 = load i64*, i64** %RK, align 8, !tbaa !1
  %incdec.ptr157 = getelementptr inbounds i64, i64* %120, i32 1
  store i64* %incdec.ptr157, i64** %RK, align 8, !tbaa !1
  %121 = load i64, i64* %120, align 8, !tbaa !11
  %122 = load i64, i64* %Y2, align 8, !tbaa !11
  %and158 = and i64 %122, 255
  %arrayidx159 = getelementptr inbounds [256 x i64], [256 x i64]* @RT0, i32 0, i64 %and158
  %123 = load i64, i64* %arrayidx159, align 8, !tbaa !11
  %xor160 = xor i64 %121, %123
  %124 = load i64, i64* %Y1, align 8, !tbaa !11
  %shr161 = lshr i64 %124, 8
  %and162 = and i64 %shr161, 255
  %arrayidx163 = getelementptr inbounds [256 x i64], [256 x i64]* @RT1, i32 0, i64 %and162
  %125 = load i64, i64* %arrayidx163, align 8, !tbaa !11
  %xor164 = xor i64 %xor160, %125
  %126 = load i64, i64* %Y0, align 8, !tbaa !11
  %shr165 = lshr i64 %126, 16
  %and166 = and i64 %shr165, 255
  %arrayidx167 = getelementptr inbounds [256 x i64], [256 x i64]* @RT2, i32 0, i64 %and166
  %127 = load i64, i64* %arrayidx167, align 8, !tbaa !11
  %xor168 = xor i64 %xor164, %127
  %128 = load i64, i64* %Y3, align 8, !tbaa !11
  %shr169 = lshr i64 %128, 24
  %and170 = and i64 %shr169, 255
  %arrayidx171 = getelementptr inbounds [256 x i64], [256 x i64]* @RT3, i32 0, i64 %and170
  %129 = load i64, i64* %arrayidx171, align 8, !tbaa !11
  %xor172 = xor i64 %xor168, %129
  store i64 %xor172, i64* %X2, align 8, !tbaa !11
  %130 = load i64*, i64** %RK, align 8, !tbaa !1
  %incdec.ptr173 = getelementptr inbounds i64, i64* %130, i32 1
  store i64* %incdec.ptr173, i64** %RK, align 8, !tbaa !1
  %131 = load i64, i64* %130, align 8, !tbaa !11
  %132 = load i64, i64* %Y3, align 8, !tbaa !11
  %and174 = and i64 %132, 255
  %arrayidx175 = getelementptr inbounds [256 x i64], [256 x i64]* @RT0, i32 0, i64 %and174
  %133 = load i64, i64* %arrayidx175, align 8, !tbaa !11
  %xor176 = xor i64 %131, %133
  %134 = load i64, i64* %Y2, align 8, !tbaa !11
  %shr177 = lshr i64 %134, 8
  %and178 = and i64 %shr177, 255
  %arrayidx179 = getelementptr inbounds [256 x i64], [256 x i64]* @RT1, i32 0, i64 %and178
  %135 = load i64, i64* %arrayidx179, align 8, !tbaa !11
  %xor180 = xor i64 %xor176, %135
  %136 = load i64, i64* %Y1, align 8, !tbaa !11
  %shr181 = lshr i64 %136, 16
  %and182 = and i64 %shr181, 255
  %arrayidx183 = getelementptr inbounds [256 x i64], [256 x i64]* @RT2, i32 0, i64 %and182
  %137 = load i64, i64* %arrayidx183, align 8, !tbaa !11
  %xor184 = xor i64 %xor180, %137
  %138 = load i64, i64* %Y0, align 8, !tbaa !11
  %shr185 = lshr i64 %138, 24
  %and186 = and i64 %shr185, 255
  %arrayidx187 = getelementptr inbounds [256 x i64], [256 x i64]* @RT3, i32 0, i64 %and186
  %139 = load i64, i64* %arrayidx187, align 8, !tbaa !11
  %xor188 = xor i64 %xor184, %139
  store i64 %xor188, i64* %X3, align 8, !tbaa !11
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %140 = load i32, i32* %i, align 4, !tbaa !5
  %dec = add nsw i32 %140, -1
  store i32 %dec, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %141 = load i64*, i64** %RK, align 8, !tbaa !1
  %incdec.ptr189 = getelementptr inbounds i64, i64* %141, i32 1
  store i64* %incdec.ptr189, i64** %RK, align 8, !tbaa !1
  %142 = load i64, i64* %141, align 8, !tbaa !11
  %143 = load i64, i64* %X0, align 8, !tbaa !11
  %and190 = and i64 %143, 255
  %arrayidx191 = getelementptr inbounds [256 x i64], [256 x i64]* @RT0, i32 0, i64 %and190
  %144 = load i64, i64* %arrayidx191, align 8, !tbaa !11
  %xor192 = xor i64 %142, %144
  %145 = load i64, i64* %X3, align 8, !tbaa !11
  %shr193 = lshr i64 %145, 8
  %and194 = and i64 %shr193, 255
  %arrayidx195 = getelementptr inbounds [256 x i64], [256 x i64]* @RT1, i32 0, i64 %and194
  %146 = load i64, i64* %arrayidx195, align 8, !tbaa !11
  %xor196 = xor i64 %xor192, %146
  %147 = load i64, i64* %X2, align 8, !tbaa !11
  %shr197 = lshr i64 %147, 16
  %and198 = and i64 %shr197, 255
  %arrayidx199 = getelementptr inbounds [256 x i64], [256 x i64]* @RT2, i32 0, i64 %and198
  %148 = load i64, i64* %arrayidx199, align 8, !tbaa !11
  %xor200 = xor i64 %xor196, %148
  %149 = load i64, i64* %X1, align 8, !tbaa !11
  %shr201 = lshr i64 %149, 24
  %and202 = and i64 %shr201, 255
  %arrayidx203 = getelementptr inbounds [256 x i64], [256 x i64]* @RT3, i32 0, i64 %and202
  %150 = load i64, i64* %arrayidx203, align 8, !tbaa !11
  %xor204 = xor i64 %xor200, %150
  store i64 %xor204, i64* %Y0, align 8, !tbaa !11
  %151 = load i64*, i64** %RK, align 8, !tbaa !1
  %incdec.ptr205 = getelementptr inbounds i64, i64* %151, i32 1
  store i64* %incdec.ptr205, i64** %RK, align 8, !tbaa !1
  %152 = load i64, i64* %151, align 8, !tbaa !11
  %153 = load i64, i64* %X1, align 8, !tbaa !11
  %and206 = and i64 %153, 255
  %arrayidx207 = getelementptr inbounds [256 x i64], [256 x i64]* @RT0, i32 0, i64 %and206
  %154 = load i64, i64* %arrayidx207, align 8, !tbaa !11
  %xor208 = xor i64 %152, %154
  %155 = load i64, i64* %X0, align 8, !tbaa !11
  %shr209 = lshr i64 %155, 8
  %and210 = and i64 %shr209, 255
  %arrayidx211 = getelementptr inbounds [256 x i64], [256 x i64]* @RT1, i32 0, i64 %and210
  %156 = load i64, i64* %arrayidx211, align 8, !tbaa !11
  %xor212 = xor i64 %xor208, %156
  %157 = load i64, i64* %X3, align 8, !tbaa !11
  %shr213 = lshr i64 %157, 16
  %and214 = and i64 %shr213, 255
  %arrayidx215 = getelementptr inbounds [256 x i64], [256 x i64]* @RT2, i32 0, i64 %and214
  %158 = load i64, i64* %arrayidx215, align 8, !tbaa !11
  %xor216 = xor i64 %xor212, %158
  %159 = load i64, i64* %X2, align 8, !tbaa !11
  %shr217 = lshr i64 %159, 24
  %and218 = and i64 %shr217, 255
  %arrayidx219 = getelementptr inbounds [256 x i64], [256 x i64]* @RT3, i32 0, i64 %and218
  %160 = load i64, i64* %arrayidx219, align 8, !tbaa !11
  %xor220 = xor i64 %xor216, %160
  store i64 %xor220, i64* %Y1, align 8, !tbaa !11
  %161 = load i64*, i64** %RK, align 8, !tbaa !1
  %incdec.ptr221 = getelementptr inbounds i64, i64* %161, i32 1
  store i64* %incdec.ptr221, i64** %RK, align 8, !tbaa !1
  %162 = load i64, i64* %161, align 8, !tbaa !11
  %163 = load i64, i64* %X2, align 8, !tbaa !11
  %and222 = and i64 %163, 255
  %arrayidx223 = getelementptr inbounds [256 x i64], [256 x i64]* @RT0, i32 0, i64 %and222
  %164 = load i64, i64* %arrayidx223, align 8, !tbaa !11
  %xor224 = xor i64 %162, %164
  %165 = load i64, i64* %X1, align 8, !tbaa !11
  %shr225 = lshr i64 %165, 8
  %and226 = and i64 %shr225, 255
  %arrayidx227 = getelementptr inbounds [256 x i64], [256 x i64]* @RT1, i32 0, i64 %and226
  %166 = load i64, i64* %arrayidx227, align 8, !tbaa !11
  %xor228 = xor i64 %xor224, %166
  %167 = load i64, i64* %X0, align 8, !tbaa !11
  %shr229 = lshr i64 %167, 16
  %and230 = and i64 %shr229, 255
  %arrayidx231 = getelementptr inbounds [256 x i64], [256 x i64]* @RT2, i32 0, i64 %and230
  %168 = load i64, i64* %arrayidx231, align 8, !tbaa !11
  %xor232 = xor i64 %xor228, %168
  %169 = load i64, i64* %X3, align 8, !tbaa !11
  %shr233 = lshr i64 %169, 24
  %and234 = and i64 %shr233, 255
  %arrayidx235 = getelementptr inbounds [256 x i64], [256 x i64]* @RT3, i32 0, i64 %and234
  %170 = load i64, i64* %arrayidx235, align 8, !tbaa !11
  %xor236 = xor i64 %xor232, %170
  store i64 %xor236, i64* %Y2, align 8, !tbaa !11
  %171 = load i64*, i64** %RK, align 8, !tbaa !1
  %incdec.ptr237 = getelementptr inbounds i64, i64* %171, i32 1
  store i64* %incdec.ptr237, i64** %RK, align 8, !tbaa !1
  %172 = load i64, i64* %171, align 8, !tbaa !11
  %173 = load i64, i64* %X3, align 8, !tbaa !11
  %and238 = and i64 %173, 255
  %arrayidx239 = getelementptr inbounds [256 x i64], [256 x i64]* @RT0, i32 0, i64 %and238
  %174 = load i64, i64* %arrayidx239, align 8, !tbaa !11
  %xor240 = xor i64 %172, %174
  %175 = load i64, i64* %X2, align 8, !tbaa !11
  %shr241 = lshr i64 %175, 8
  %and242 = and i64 %shr241, 255
  %arrayidx243 = getelementptr inbounds [256 x i64], [256 x i64]* @RT1, i32 0, i64 %and242
  %176 = load i64, i64* %arrayidx243, align 8, !tbaa !11
  %xor244 = xor i64 %xor240, %176
  %177 = load i64, i64* %X1, align 8, !tbaa !11
  %shr245 = lshr i64 %177, 16
  %and246 = and i64 %shr245, 255
  %arrayidx247 = getelementptr inbounds [256 x i64], [256 x i64]* @RT2, i32 0, i64 %and246
  %178 = load i64, i64* %arrayidx247, align 8, !tbaa !11
  %xor248 = xor i64 %xor244, %178
  %179 = load i64, i64* %X0, align 8, !tbaa !11
  %shr249 = lshr i64 %179, 24
  %and250 = and i64 %shr249, 255
  %arrayidx251 = getelementptr inbounds [256 x i64], [256 x i64]* @RT3, i32 0, i64 %and250
  %180 = load i64, i64* %arrayidx251, align 8, !tbaa !11
  %xor252 = xor i64 %xor248, %180
  store i64 %xor252, i64* %Y3, align 8, !tbaa !11
  %181 = load i64*, i64** %RK, align 8, !tbaa !1
  %incdec.ptr253 = getelementptr inbounds i64, i64* %181, i32 1
  store i64* %incdec.ptr253, i64** %RK, align 8, !tbaa !1
  %182 = load i64, i64* %181, align 8, !tbaa !11
  %183 = load i64, i64* %Y0, align 8, !tbaa !11
  %and254 = and i64 %183, 255
  %arrayidx255 = getelementptr inbounds [256 x i8], [256 x i8]* @RSb, i32 0, i64 %and254
  %184 = load i8, i8* %arrayidx255, align 1, !tbaa !10
  %conv256 = zext i8 %184 to i64
  %xor257 = xor i64 %182, %conv256
  %185 = load i64, i64* %Y3, align 8, !tbaa !11
  %shr258 = lshr i64 %185, 8
  %and259 = and i64 %shr258, 255
  %arrayidx260 = getelementptr inbounds [256 x i8], [256 x i8]* @RSb, i32 0, i64 %and259
  %186 = load i8, i8* %arrayidx260, align 1, !tbaa !10
  %conv261 = zext i8 %186 to i32
  %shl262 = shl i32 %conv261, 8
  %conv263 = sext i32 %shl262 to i64
  %xor264 = xor i64 %xor257, %conv263
  %187 = load i64, i64* %Y2, align 8, !tbaa !11
  %shr265 = lshr i64 %187, 16
  %and266 = and i64 %shr265, 255
  %arrayidx267 = getelementptr inbounds [256 x i8], [256 x i8]* @RSb, i32 0, i64 %and266
  %188 = load i8, i8* %arrayidx267, align 1, !tbaa !10
  %conv268 = zext i8 %188 to i32
  %shl269 = shl i32 %conv268, 16
  %conv270 = sext i32 %shl269 to i64
  %xor271 = xor i64 %xor264, %conv270
  %189 = load i64, i64* %Y1, align 8, !tbaa !11
  %shr272 = lshr i64 %189, 24
  %and273 = and i64 %shr272, 255
  %arrayidx274 = getelementptr inbounds [256 x i8], [256 x i8]* @RSb, i32 0, i64 %and273
  %190 = load i8, i8* %arrayidx274, align 1, !tbaa !10
  %conv275 = zext i8 %190 to i32
  %shl276 = shl i32 %conv275, 24
  %conv277 = sext i32 %shl276 to i64
  %xor278 = xor i64 %xor271, %conv277
  store i64 %xor278, i64* %X0, align 8, !tbaa !11
  %191 = load i64*, i64** %RK, align 8, !tbaa !1
  %incdec.ptr279 = getelementptr inbounds i64, i64* %191, i32 1
  store i64* %incdec.ptr279, i64** %RK, align 8, !tbaa !1
  %192 = load i64, i64* %191, align 8, !tbaa !11
  %193 = load i64, i64* %Y1, align 8, !tbaa !11
  %and280 = and i64 %193, 255
  %arrayidx281 = getelementptr inbounds [256 x i8], [256 x i8]* @RSb, i32 0, i64 %and280
  %194 = load i8, i8* %arrayidx281, align 1, !tbaa !10
  %conv282 = zext i8 %194 to i64
  %xor283 = xor i64 %192, %conv282
  %195 = load i64, i64* %Y0, align 8, !tbaa !11
  %shr284 = lshr i64 %195, 8
  %and285 = and i64 %shr284, 255
  %arrayidx286 = getelementptr inbounds [256 x i8], [256 x i8]* @RSb, i32 0, i64 %and285
  %196 = load i8, i8* %arrayidx286, align 1, !tbaa !10
  %conv287 = zext i8 %196 to i32
  %shl288 = shl i32 %conv287, 8
  %conv289 = sext i32 %shl288 to i64
  %xor290 = xor i64 %xor283, %conv289
  %197 = load i64, i64* %Y3, align 8, !tbaa !11
  %shr291 = lshr i64 %197, 16
  %and292 = and i64 %shr291, 255
  %arrayidx293 = getelementptr inbounds [256 x i8], [256 x i8]* @RSb, i32 0, i64 %and292
  %198 = load i8, i8* %arrayidx293, align 1, !tbaa !10
  %conv294 = zext i8 %198 to i32
  %shl295 = shl i32 %conv294, 16
  %conv296 = sext i32 %shl295 to i64
  %xor297 = xor i64 %xor290, %conv296
  %199 = load i64, i64* %Y2, align 8, !tbaa !11
  %shr298 = lshr i64 %199, 24
  %and299 = and i64 %shr298, 255
  %arrayidx300 = getelementptr inbounds [256 x i8], [256 x i8]* @RSb, i32 0, i64 %and299
  %200 = load i8, i8* %arrayidx300, align 1, !tbaa !10
  %conv301 = zext i8 %200 to i32
  %shl302 = shl i32 %conv301, 24
  %conv303 = sext i32 %shl302 to i64
  %xor304 = xor i64 %xor297, %conv303
  store i64 %xor304, i64* %X1, align 8, !tbaa !11
  %201 = load i64*, i64** %RK, align 8, !tbaa !1
  %incdec.ptr305 = getelementptr inbounds i64, i64* %201, i32 1
  store i64* %incdec.ptr305, i64** %RK, align 8, !tbaa !1
  %202 = load i64, i64* %201, align 8, !tbaa !11
  %203 = load i64, i64* %Y2, align 8, !tbaa !11
  %and306 = and i64 %203, 255
  %arrayidx307 = getelementptr inbounds [256 x i8], [256 x i8]* @RSb, i32 0, i64 %and306
  %204 = load i8, i8* %arrayidx307, align 1, !tbaa !10
  %conv308 = zext i8 %204 to i64
  %xor309 = xor i64 %202, %conv308
  %205 = load i64, i64* %Y1, align 8, !tbaa !11
  %shr310 = lshr i64 %205, 8
  %and311 = and i64 %shr310, 255
  %arrayidx312 = getelementptr inbounds [256 x i8], [256 x i8]* @RSb, i32 0, i64 %and311
  %206 = load i8, i8* %arrayidx312, align 1, !tbaa !10
  %conv313 = zext i8 %206 to i32
  %shl314 = shl i32 %conv313, 8
  %conv315 = sext i32 %shl314 to i64
  %xor316 = xor i64 %xor309, %conv315
  %207 = load i64, i64* %Y0, align 8, !tbaa !11
  %shr317 = lshr i64 %207, 16
  %and318 = and i64 %shr317, 255
  %arrayidx319 = getelementptr inbounds [256 x i8], [256 x i8]* @RSb, i32 0, i64 %and318
  %208 = load i8, i8* %arrayidx319, align 1, !tbaa !10
  %conv320 = zext i8 %208 to i32
  %shl321 = shl i32 %conv320, 16
  %conv322 = sext i32 %shl321 to i64
  %xor323 = xor i64 %xor316, %conv322
  %209 = load i64, i64* %Y3, align 8, !tbaa !11
  %shr324 = lshr i64 %209, 24
  %and325 = and i64 %shr324, 255
  %arrayidx326 = getelementptr inbounds [256 x i8], [256 x i8]* @RSb, i32 0, i64 %and325
  %210 = load i8, i8* %arrayidx326, align 1, !tbaa !10
  %conv327 = zext i8 %210 to i32
  %shl328 = shl i32 %conv327, 24
  %conv329 = sext i32 %shl328 to i64
  %xor330 = xor i64 %xor323, %conv329
  store i64 %xor330, i64* %X2, align 8, !tbaa !11
  %211 = load i64*, i64** %RK, align 8, !tbaa !1
  %incdec.ptr331 = getelementptr inbounds i64, i64* %211, i32 1
  store i64* %incdec.ptr331, i64** %RK, align 8, !tbaa !1
  %212 = load i64, i64* %211, align 8, !tbaa !11
  %213 = load i64, i64* %Y3, align 8, !tbaa !11
  %and332 = and i64 %213, 255
  %arrayidx333 = getelementptr inbounds [256 x i8], [256 x i8]* @RSb, i32 0, i64 %and332
  %214 = load i8, i8* %arrayidx333, align 1, !tbaa !10
  %conv334 = zext i8 %214 to i64
  %xor335 = xor i64 %212, %conv334
  %215 = load i64, i64* %Y2, align 8, !tbaa !11
  %shr336 = lshr i64 %215, 8
  %and337 = and i64 %shr336, 255
  %arrayidx338 = getelementptr inbounds [256 x i8], [256 x i8]* @RSb, i32 0, i64 %and337
  %216 = load i8, i8* %arrayidx338, align 1, !tbaa !10
  %conv339 = zext i8 %216 to i32
  %shl340 = shl i32 %conv339, 8
  %conv341 = sext i32 %shl340 to i64
  %xor342 = xor i64 %xor335, %conv341
  %217 = load i64, i64* %Y1, align 8, !tbaa !11
  %shr343 = lshr i64 %217, 16
  %and344 = and i64 %shr343, 255
  %arrayidx345 = getelementptr inbounds [256 x i8], [256 x i8]* @RSb, i32 0, i64 %and344
  %218 = load i8, i8* %arrayidx345, align 1, !tbaa !10
  %conv346 = zext i8 %218 to i32
  %shl347 = shl i32 %conv346, 16
  %conv348 = sext i32 %shl347 to i64
  %xor349 = xor i64 %xor342, %conv348
  %219 = load i64, i64* %Y0, align 8, !tbaa !11
  %shr350 = lshr i64 %219, 24
  %and351 = and i64 %shr350, 255
  %arrayidx352 = getelementptr inbounds [256 x i8], [256 x i8]* @RSb, i32 0, i64 %and351
  %220 = load i8, i8* %arrayidx352, align 1, !tbaa !10
  %conv353 = zext i8 %220 to i32
  %shl354 = shl i32 %conv353, 24
  %conv355 = sext i32 %shl354 to i64
  %xor356 = xor i64 %xor349, %conv355
  store i64 %xor356, i64* %X3, align 8, !tbaa !11
  br label %if.end

if.else:                                          ; preds = %entry
  %221 = load %struct.aes_context*, %struct.aes_context** %ctx.addr, align 8, !tbaa !1
  %nr357 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %221, i32 0, i32 0
  %222 = load i32, i32* %nr357, align 4, !tbaa !7
  %shr358 = ashr i32 %222, 1
  %sub359 = sub nsw i32 %shr358, 1
  store i32 %sub359, i32* %i, align 4, !tbaa !5
  br label %for.cond.360

for.cond.360:                                     ; preds = %for.inc.492, %if.else
  %223 = load i32, i32* %i, align 4, !tbaa !5
  %cmp361 = icmp sgt i32 %223, 0
  br i1 %cmp361, label %for.body.363, label %for.end.494

for.body.363:                                     ; preds = %for.cond.360
  %224 = load i64*, i64** %RK, align 8, !tbaa !1
  %incdec.ptr364 = getelementptr inbounds i64, i64* %224, i32 1
  store i64* %incdec.ptr364, i64** %RK, align 8, !tbaa !1
  %225 = load i64, i64* %224, align 8, !tbaa !11
  %226 = load i64, i64* %X0, align 8, !tbaa !11
  %and365 = and i64 %226, 255
  %arrayidx366 = getelementptr inbounds [256 x i64], [256 x i64]* @FT0, i32 0, i64 %and365
  %227 = load i64, i64* %arrayidx366, align 8, !tbaa !11
  %xor367 = xor i64 %225, %227
  %228 = load i64, i64* %X1, align 8, !tbaa !11
  %shr368 = lshr i64 %228, 8
  %and369 = and i64 %shr368, 255
  %arrayidx370 = getelementptr inbounds [256 x i64], [256 x i64]* @FT1, i32 0, i64 %and369
  %229 = load i64, i64* %arrayidx370, align 8, !tbaa !11
  %xor371 = xor i64 %xor367, %229
  %230 = load i64, i64* %X2, align 8, !tbaa !11
  %shr372 = lshr i64 %230, 16
  %and373 = and i64 %shr372, 255
  %arrayidx374 = getelementptr inbounds [256 x i64], [256 x i64]* @FT2, i32 0, i64 %and373
  %231 = load i64, i64* %arrayidx374, align 8, !tbaa !11
  %xor375 = xor i64 %xor371, %231
  %232 = load i64, i64* %X3, align 8, !tbaa !11
  %shr376 = lshr i64 %232, 24
  %and377 = and i64 %shr376, 255
  %arrayidx378 = getelementptr inbounds [256 x i64], [256 x i64]* @FT3, i32 0, i64 %and377
  %233 = load i64, i64* %arrayidx378, align 8, !tbaa !11
  %xor379 = xor i64 %xor375, %233
  store i64 %xor379, i64* %Y0, align 8, !tbaa !11
  %234 = load i64*, i64** %RK, align 8, !tbaa !1
  %incdec.ptr380 = getelementptr inbounds i64, i64* %234, i32 1
  store i64* %incdec.ptr380, i64** %RK, align 8, !tbaa !1
  %235 = load i64, i64* %234, align 8, !tbaa !11
  %236 = load i64, i64* %X1, align 8, !tbaa !11
  %and381 = and i64 %236, 255
  %arrayidx382 = getelementptr inbounds [256 x i64], [256 x i64]* @FT0, i32 0, i64 %and381
  %237 = load i64, i64* %arrayidx382, align 8, !tbaa !11
  %xor383 = xor i64 %235, %237
  %238 = load i64, i64* %X2, align 8, !tbaa !11
  %shr384 = lshr i64 %238, 8
  %and385 = and i64 %shr384, 255
  %arrayidx386 = getelementptr inbounds [256 x i64], [256 x i64]* @FT1, i32 0, i64 %and385
  %239 = load i64, i64* %arrayidx386, align 8, !tbaa !11
  %xor387 = xor i64 %xor383, %239
  %240 = load i64, i64* %X3, align 8, !tbaa !11
  %shr388 = lshr i64 %240, 16
  %and389 = and i64 %shr388, 255
  %arrayidx390 = getelementptr inbounds [256 x i64], [256 x i64]* @FT2, i32 0, i64 %and389
  %241 = load i64, i64* %arrayidx390, align 8, !tbaa !11
  %xor391 = xor i64 %xor387, %241
  %242 = load i64, i64* %X0, align 8, !tbaa !11
  %shr392 = lshr i64 %242, 24
  %and393 = and i64 %shr392, 255
  %arrayidx394 = getelementptr inbounds [256 x i64], [256 x i64]* @FT3, i32 0, i64 %and393
  %243 = load i64, i64* %arrayidx394, align 8, !tbaa !11
  %xor395 = xor i64 %xor391, %243
  store i64 %xor395, i64* %Y1, align 8, !tbaa !11
  %244 = load i64*, i64** %RK, align 8, !tbaa !1
  %incdec.ptr396 = getelementptr inbounds i64, i64* %244, i32 1
  store i64* %incdec.ptr396, i64** %RK, align 8, !tbaa !1
  %245 = load i64, i64* %244, align 8, !tbaa !11
  %246 = load i64, i64* %X2, align 8, !tbaa !11
  %and397 = and i64 %246, 255
  %arrayidx398 = getelementptr inbounds [256 x i64], [256 x i64]* @FT0, i32 0, i64 %and397
  %247 = load i64, i64* %arrayidx398, align 8, !tbaa !11
  %xor399 = xor i64 %245, %247
  %248 = load i64, i64* %X3, align 8, !tbaa !11
  %shr400 = lshr i64 %248, 8
  %and401 = and i64 %shr400, 255
  %arrayidx402 = getelementptr inbounds [256 x i64], [256 x i64]* @FT1, i32 0, i64 %and401
  %249 = load i64, i64* %arrayidx402, align 8, !tbaa !11
  %xor403 = xor i64 %xor399, %249
  %250 = load i64, i64* %X0, align 8, !tbaa !11
  %shr404 = lshr i64 %250, 16
  %and405 = and i64 %shr404, 255
  %arrayidx406 = getelementptr inbounds [256 x i64], [256 x i64]* @FT2, i32 0, i64 %and405
  %251 = load i64, i64* %arrayidx406, align 8, !tbaa !11
  %xor407 = xor i64 %xor403, %251
  %252 = load i64, i64* %X1, align 8, !tbaa !11
  %shr408 = lshr i64 %252, 24
  %and409 = and i64 %shr408, 255
  %arrayidx410 = getelementptr inbounds [256 x i64], [256 x i64]* @FT3, i32 0, i64 %and409
  %253 = load i64, i64* %arrayidx410, align 8, !tbaa !11
  %xor411 = xor i64 %xor407, %253
  store i64 %xor411, i64* %Y2, align 8, !tbaa !11
  %254 = load i64*, i64** %RK, align 8, !tbaa !1
  %incdec.ptr412 = getelementptr inbounds i64, i64* %254, i32 1
  store i64* %incdec.ptr412, i64** %RK, align 8, !tbaa !1
  %255 = load i64, i64* %254, align 8, !tbaa !11
  %256 = load i64, i64* %X3, align 8, !tbaa !11
  %and413 = and i64 %256, 255
  %arrayidx414 = getelementptr inbounds [256 x i64], [256 x i64]* @FT0, i32 0, i64 %and413
  %257 = load i64, i64* %arrayidx414, align 8, !tbaa !11
  %xor415 = xor i64 %255, %257
  %258 = load i64, i64* %X0, align 8, !tbaa !11
  %shr416 = lshr i64 %258, 8
  %and417 = and i64 %shr416, 255
  %arrayidx418 = getelementptr inbounds [256 x i64], [256 x i64]* @FT1, i32 0, i64 %and417
  %259 = load i64, i64* %arrayidx418, align 8, !tbaa !11
  %xor419 = xor i64 %xor415, %259
  %260 = load i64, i64* %X1, align 8, !tbaa !11
  %shr420 = lshr i64 %260, 16
  %and421 = and i64 %shr420, 255
  %arrayidx422 = getelementptr inbounds [256 x i64], [256 x i64]* @FT2, i32 0, i64 %and421
  %261 = load i64, i64* %arrayidx422, align 8, !tbaa !11
  %xor423 = xor i64 %xor419, %261
  %262 = load i64, i64* %X2, align 8, !tbaa !11
  %shr424 = lshr i64 %262, 24
  %and425 = and i64 %shr424, 255
  %arrayidx426 = getelementptr inbounds [256 x i64], [256 x i64]* @FT3, i32 0, i64 %and425
  %263 = load i64, i64* %arrayidx426, align 8, !tbaa !11
  %xor427 = xor i64 %xor423, %263
  store i64 %xor427, i64* %Y3, align 8, !tbaa !11
  %264 = load i64*, i64** %RK, align 8, !tbaa !1
  %incdec.ptr428 = getelementptr inbounds i64, i64* %264, i32 1
  store i64* %incdec.ptr428, i64** %RK, align 8, !tbaa !1
  %265 = load i64, i64* %264, align 8, !tbaa !11
  %266 = load i64, i64* %Y0, align 8, !tbaa !11
  %and429 = and i64 %266, 255
  %arrayidx430 = getelementptr inbounds [256 x i64], [256 x i64]* @FT0, i32 0, i64 %and429
  %267 = load i64, i64* %arrayidx430, align 8, !tbaa !11
  %xor431 = xor i64 %265, %267
  %268 = load i64, i64* %Y1, align 8, !tbaa !11
  %shr432 = lshr i64 %268, 8
  %and433 = and i64 %shr432, 255
  %arrayidx434 = getelementptr inbounds [256 x i64], [256 x i64]* @FT1, i32 0, i64 %and433
  %269 = load i64, i64* %arrayidx434, align 8, !tbaa !11
  %xor435 = xor i64 %xor431, %269
  %270 = load i64, i64* %Y2, align 8, !tbaa !11
  %shr436 = lshr i64 %270, 16
  %and437 = and i64 %shr436, 255
  %arrayidx438 = getelementptr inbounds [256 x i64], [256 x i64]* @FT2, i32 0, i64 %and437
  %271 = load i64, i64* %arrayidx438, align 8, !tbaa !11
  %xor439 = xor i64 %xor435, %271
  %272 = load i64, i64* %Y3, align 8, !tbaa !11
  %shr440 = lshr i64 %272, 24
  %and441 = and i64 %shr440, 255
  %arrayidx442 = getelementptr inbounds [256 x i64], [256 x i64]* @FT3, i32 0, i64 %and441
  %273 = load i64, i64* %arrayidx442, align 8, !tbaa !11
  %xor443 = xor i64 %xor439, %273
  store i64 %xor443, i64* %X0, align 8, !tbaa !11
  %274 = load i64*, i64** %RK, align 8, !tbaa !1
  %incdec.ptr444 = getelementptr inbounds i64, i64* %274, i32 1
  store i64* %incdec.ptr444, i64** %RK, align 8, !tbaa !1
  %275 = load i64, i64* %274, align 8, !tbaa !11
  %276 = load i64, i64* %Y1, align 8, !tbaa !11
  %and445 = and i64 %276, 255
  %arrayidx446 = getelementptr inbounds [256 x i64], [256 x i64]* @FT0, i32 0, i64 %and445
  %277 = load i64, i64* %arrayidx446, align 8, !tbaa !11
  %xor447 = xor i64 %275, %277
  %278 = load i64, i64* %Y2, align 8, !tbaa !11
  %shr448 = lshr i64 %278, 8
  %and449 = and i64 %shr448, 255
  %arrayidx450 = getelementptr inbounds [256 x i64], [256 x i64]* @FT1, i32 0, i64 %and449
  %279 = load i64, i64* %arrayidx450, align 8, !tbaa !11
  %xor451 = xor i64 %xor447, %279
  %280 = load i64, i64* %Y3, align 8, !tbaa !11
  %shr452 = lshr i64 %280, 16
  %and453 = and i64 %shr452, 255
  %arrayidx454 = getelementptr inbounds [256 x i64], [256 x i64]* @FT2, i32 0, i64 %and453
  %281 = load i64, i64* %arrayidx454, align 8, !tbaa !11
  %xor455 = xor i64 %xor451, %281
  %282 = load i64, i64* %Y0, align 8, !tbaa !11
  %shr456 = lshr i64 %282, 24
  %and457 = and i64 %shr456, 255
  %arrayidx458 = getelementptr inbounds [256 x i64], [256 x i64]* @FT3, i32 0, i64 %and457
  %283 = load i64, i64* %arrayidx458, align 8, !tbaa !11
  %xor459 = xor i64 %xor455, %283
  store i64 %xor459, i64* %X1, align 8, !tbaa !11
  %284 = load i64*, i64** %RK, align 8, !tbaa !1
  %incdec.ptr460 = getelementptr inbounds i64, i64* %284, i32 1
  store i64* %incdec.ptr460, i64** %RK, align 8, !tbaa !1
  %285 = load i64, i64* %284, align 8, !tbaa !11
  %286 = load i64, i64* %Y2, align 8, !tbaa !11
  %and461 = and i64 %286, 255
  %arrayidx462 = getelementptr inbounds [256 x i64], [256 x i64]* @FT0, i32 0, i64 %and461
  %287 = load i64, i64* %arrayidx462, align 8, !tbaa !11
  %xor463 = xor i64 %285, %287
  %288 = load i64, i64* %Y3, align 8, !tbaa !11
  %shr464 = lshr i64 %288, 8
  %and465 = and i64 %shr464, 255
  %arrayidx466 = getelementptr inbounds [256 x i64], [256 x i64]* @FT1, i32 0, i64 %and465
  %289 = load i64, i64* %arrayidx466, align 8, !tbaa !11
  %xor467 = xor i64 %xor463, %289
  %290 = load i64, i64* %Y0, align 8, !tbaa !11
  %shr468 = lshr i64 %290, 16
  %and469 = and i64 %shr468, 255
  %arrayidx470 = getelementptr inbounds [256 x i64], [256 x i64]* @FT2, i32 0, i64 %and469
  %291 = load i64, i64* %arrayidx470, align 8, !tbaa !11
  %xor471 = xor i64 %xor467, %291
  %292 = load i64, i64* %Y1, align 8, !tbaa !11
  %shr472 = lshr i64 %292, 24
  %and473 = and i64 %shr472, 255
  %arrayidx474 = getelementptr inbounds [256 x i64], [256 x i64]* @FT3, i32 0, i64 %and473
  %293 = load i64, i64* %arrayidx474, align 8, !tbaa !11
  %xor475 = xor i64 %xor471, %293
  store i64 %xor475, i64* %X2, align 8, !tbaa !11
  %294 = load i64*, i64** %RK, align 8, !tbaa !1
  %incdec.ptr476 = getelementptr inbounds i64, i64* %294, i32 1
  store i64* %incdec.ptr476, i64** %RK, align 8, !tbaa !1
  %295 = load i64, i64* %294, align 8, !tbaa !11
  %296 = load i64, i64* %Y3, align 8, !tbaa !11
  %and477 = and i64 %296, 255
  %arrayidx478 = getelementptr inbounds [256 x i64], [256 x i64]* @FT0, i32 0, i64 %and477
  %297 = load i64, i64* %arrayidx478, align 8, !tbaa !11
  %xor479 = xor i64 %295, %297
  %298 = load i64, i64* %Y0, align 8, !tbaa !11
  %shr480 = lshr i64 %298, 8
  %and481 = and i64 %shr480, 255
  %arrayidx482 = getelementptr inbounds [256 x i64], [256 x i64]* @FT1, i32 0, i64 %and481
  %299 = load i64, i64* %arrayidx482, align 8, !tbaa !11
  %xor483 = xor i64 %xor479, %299
  %300 = load i64, i64* %Y1, align 8, !tbaa !11
  %shr484 = lshr i64 %300, 16
  %and485 = and i64 %shr484, 255
  %arrayidx486 = getelementptr inbounds [256 x i64], [256 x i64]* @FT2, i32 0, i64 %and485
  %301 = load i64, i64* %arrayidx486, align 8, !tbaa !11
  %xor487 = xor i64 %xor483, %301
  %302 = load i64, i64* %Y2, align 8, !tbaa !11
  %shr488 = lshr i64 %302, 24
  %and489 = and i64 %shr488, 255
  %arrayidx490 = getelementptr inbounds [256 x i64], [256 x i64]* @FT3, i32 0, i64 %and489
  %303 = load i64, i64* %arrayidx490, align 8, !tbaa !11
  %xor491 = xor i64 %xor487, %303
  store i64 %xor491, i64* %X3, align 8, !tbaa !11
  br label %for.inc.492

for.inc.492:                                      ; preds = %for.body.363
  %304 = load i32, i32* %i, align 4, !tbaa !5
  %dec493 = add nsw i32 %304, -1
  store i32 %dec493, i32* %i, align 4, !tbaa !5
  br label %for.cond.360

for.end.494:                                      ; preds = %for.cond.360
  %305 = load i64*, i64** %RK, align 8, !tbaa !1
  %incdec.ptr495 = getelementptr inbounds i64, i64* %305, i32 1
  store i64* %incdec.ptr495, i64** %RK, align 8, !tbaa !1
  %306 = load i64, i64* %305, align 8, !tbaa !11
  %307 = load i64, i64* %X0, align 8, !tbaa !11
  %and496 = and i64 %307, 255
  %arrayidx497 = getelementptr inbounds [256 x i64], [256 x i64]* @FT0, i32 0, i64 %and496
  %308 = load i64, i64* %arrayidx497, align 8, !tbaa !11
  %xor498 = xor i64 %306, %308
  %309 = load i64, i64* %X1, align 8, !tbaa !11
  %shr499 = lshr i64 %309, 8
  %and500 = and i64 %shr499, 255
  %arrayidx501 = getelementptr inbounds [256 x i64], [256 x i64]* @FT1, i32 0, i64 %and500
  %310 = load i64, i64* %arrayidx501, align 8, !tbaa !11
  %xor502 = xor i64 %xor498, %310
  %311 = load i64, i64* %X2, align 8, !tbaa !11
  %shr503 = lshr i64 %311, 16
  %and504 = and i64 %shr503, 255
  %arrayidx505 = getelementptr inbounds [256 x i64], [256 x i64]* @FT2, i32 0, i64 %and504
  %312 = load i64, i64* %arrayidx505, align 8, !tbaa !11
  %xor506 = xor i64 %xor502, %312
  %313 = load i64, i64* %X3, align 8, !tbaa !11
  %shr507 = lshr i64 %313, 24
  %and508 = and i64 %shr507, 255
  %arrayidx509 = getelementptr inbounds [256 x i64], [256 x i64]* @FT3, i32 0, i64 %and508
  %314 = load i64, i64* %arrayidx509, align 8, !tbaa !11
  %xor510 = xor i64 %xor506, %314
  store i64 %xor510, i64* %Y0, align 8, !tbaa !11
  %315 = load i64*, i64** %RK, align 8, !tbaa !1
  %incdec.ptr511 = getelementptr inbounds i64, i64* %315, i32 1
  store i64* %incdec.ptr511, i64** %RK, align 8, !tbaa !1
  %316 = load i64, i64* %315, align 8, !tbaa !11
  %317 = load i64, i64* %X1, align 8, !tbaa !11
  %and512 = and i64 %317, 255
  %arrayidx513 = getelementptr inbounds [256 x i64], [256 x i64]* @FT0, i32 0, i64 %and512
  %318 = load i64, i64* %arrayidx513, align 8, !tbaa !11
  %xor514 = xor i64 %316, %318
  %319 = load i64, i64* %X2, align 8, !tbaa !11
  %shr515 = lshr i64 %319, 8
  %and516 = and i64 %shr515, 255
  %arrayidx517 = getelementptr inbounds [256 x i64], [256 x i64]* @FT1, i32 0, i64 %and516
  %320 = load i64, i64* %arrayidx517, align 8, !tbaa !11
  %xor518 = xor i64 %xor514, %320
  %321 = load i64, i64* %X3, align 8, !tbaa !11
  %shr519 = lshr i64 %321, 16
  %and520 = and i64 %shr519, 255
  %arrayidx521 = getelementptr inbounds [256 x i64], [256 x i64]* @FT2, i32 0, i64 %and520
  %322 = load i64, i64* %arrayidx521, align 8, !tbaa !11
  %xor522 = xor i64 %xor518, %322
  %323 = load i64, i64* %X0, align 8, !tbaa !11
  %shr523 = lshr i64 %323, 24
  %and524 = and i64 %shr523, 255
  %arrayidx525 = getelementptr inbounds [256 x i64], [256 x i64]* @FT3, i32 0, i64 %and524
  %324 = load i64, i64* %arrayidx525, align 8, !tbaa !11
  %xor526 = xor i64 %xor522, %324
  store i64 %xor526, i64* %Y1, align 8, !tbaa !11
  %325 = load i64*, i64** %RK, align 8, !tbaa !1
  %incdec.ptr527 = getelementptr inbounds i64, i64* %325, i32 1
  store i64* %incdec.ptr527, i64** %RK, align 8, !tbaa !1
  %326 = load i64, i64* %325, align 8, !tbaa !11
  %327 = load i64, i64* %X2, align 8, !tbaa !11
  %and528 = and i64 %327, 255
  %arrayidx529 = getelementptr inbounds [256 x i64], [256 x i64]* @FT0, i32 0, i64 %and528
  %328 = load i64, i64* %arrayidx529, align 8, !tbaa !11
  %xor530 = xor i64 %326, %328
  %329 = load i64, i64* %X3, align 8, !tbaa !11
  %shr531 = lshr i64 %329, 8
  %and532 = and i64 %shr531, 255
  %arrayidx533 = getelementptr inbounds [256 x i64], [256 x i64]* @FT1, i32 0, i64 %and532
  %330 = load i64, i64* %arrayidx533, align 8, !tbaa !11
  %xor534 = xor i64 %xor530, %330
  %331 = load i64, i64* %X0, align 8, !tbaa !11
  %shr535 = lshr i64 %331, 16
  %and536 = and i64 %shr535, 255
  %arrayidx537 = getelementptr inbounds [256 x i64], [256 x i64]* @FT2, i32 0, i64 %and536
  %332 = load i64, i64* %arrayidx537, align 8, !tbaa !11
  %xor538 = xor i64 %xor534, %332
  %333 = load i64, i64* %X1, align 8, !tbaa !11
  %shr539 = lshr i64 %333, 24
  %and540 = and i64 %shr539, 255
  %arrayidx541 = getelementptr inbounds [256 x i64], [256 x i64]* @FT3, i32 0, i64 %and540
  %334 = load i64, i64* %arrayidx541, align 8, !tbaa !11
  %xor542 = xor i64 %xor538, %334
  store i64 %xor542, i64* %Y2, align 8, !tbaa !11
  %335 = load i64*, i64** %RK, align 8, !tbaa !1
  %incdec.ptr543 = getelementptr inbounds i64, i64* %335, i32 1
  store i64* %incdec.ptr543, i64** %RK, align 8, !tbaa !1
  %336 = load i64, i64* %335, align 8, !tbaa !11
  %337 = load i64, i64* %X3, align 8, !tbaa !11
  %and544 = and i64 %337, 255
  %arrayidx545 = getelementptr inbounds [256 x i64], [256 x i64]* @FT0, i32 0, i64 %and544
  %338 = load i64, i64* %arrayidx545, align 8, !tbaa !11
  %xor546 = xor i64 %336, %338
  %339 = load i64, i64* %X0, align 8, !tbaa !11
  %shr547 = lshr i64 %339, 8
  %and548 = and i64 %shr547, 255
  %arrayidx549 = getelementptr inbounds [256 x i64], [256 x i64]* @FT1, i32 0, i64 %and548
  %340 = load i64, i64* %arrayidx549, align 8, !tbaa !11
  %xor550 = xor i64 %xor546, %340
  %341 = load i64, i64* %X1, align 8, !tbaa !11
  %shr551 = lshr i64 %341, 16
  %and552 = and i64 %shr551, 255
  %arrayidx553 = getelementptr inbounds [256 x i64], [256 x i64]* @FT2, i32 0, i64 %and552
  %342 = load i64, i64* %arrayidx553, align 8, !tbaa !11
  %xor554 = xor i64 %xor550, %342
  %343 = load i64, i64* %X2, align 8, !tbaa !11
  %shr555 = lshr i64 %343, 24
  %and556 = and i64 %shr555, 255
  %arrayidx557 = getelementptr inbounds [256 x i64], [256 x i64]* @FT3, i32 0, i64 %and556
  %344 = load i64, i64* %arrayidx557, align 8, !tbaa !11
  %xor558 = xor i64 %xor554, %344
  store i64 %xor558, i64* %Y3, align 8, !tbaa !11
  %345 = load i64*, i64** %RK, align 8, !tbaa !1
  %incdec.ptr559 = getelementptr inbounds i64, i64* %345, i32 1
  store i64* %incdec.ptr559, i64** %RK, align 8, !tbaa !1
  %346 = load i64, i64* %345, align 8, !tbaa !11
  %347 = load i64, i64* %Y0, align 8, !tbaa !11
  %and560 = and i64 %347, 255
  %arrayidx561 = getelementptr inbounds [256 x i8], [256 x i8]* @FSb, i32 0, i64 %and560
  %348 = load i8, i8* %arrayidx561, align 1, !tbaa !10
  %conv562 = zext i8 %348 to i64
  %xor563 = xor i64 %346, %conv562
  %349 = load i64, i64* %Y1, align 8, !tbaa !11
  %shr564 = lshr i64 %349, 8
  %and565 = and i64 %shr564, 255
  %arrayidx566 = getelementptr inbounds [256 x i8], [256 x i8]* @FSb, i32 0, i64 %and565
  %350 = load i8, i8* %arrayidx566, align 1, !tbaa !10
  %conv567 = zext i8 %350 to i32
  %shl568 = shl i32 %conv567, 8
  %conv569 = sext i32 %shl568 to i64
  %xor570 = xor i64 %xor563, %conv569
  %351 = load i64, i64* %Y2, align 8, !tbaa !11
  %shr571 = lshr i64 %351, 16
  %and572 = and i64 %shr571, 255
  %arrayidx573 = getelementptr inbounds [256 x i8], [256 x i8]* @FSb, i32 0, i64 %and572
  %352 = load i8, i8* %arrayidx573, align 1, !tbaa !10
  %conv574 = zext i8 %352 to i32
  %shl575 = shl i32 %conv574, 16
  %conv576 = sext i32 %shl575 to i64
  %xor577 = xor i64 %xor570, %conv576
  %353 = load i64, i64* %Y3, align 8, !tbaa !11
  %shr578 = lshr i64 %353, 24
  %and579 = and i64 %shr578, 255
  %arrayidx580 = getelementptr inbounds [256 x i8], [256 x i8]* @FSb, i32 0, i64 %and579
  %354 = load i8, i8* %arrayidx580, align 1, !tbaa !10
  %conv581 = zext i8 %354 to i32
  %shl582 = shl i32 %conv581, 24
  %conv583 = sext i32 %shl582 to i64
  %xor584 = xor i64 %xor577, %conv583
  store i64 %xor584, i64* %X0, align 8, !tbaa !11
  %355 = load i64*, i64** %RK, align 8, !tbaa !1
  %incdec.ptr585 = getelementptr inbounds i64, i64* %355, i32 1
  store i64* %incdec.ptr585, i64** %RK, align 8, !tbaa !1
  %356 = load i64, i64* %355, align 8, !tbaa !11
  %357 = load i64, i64* %Y1, align 8, !tbaa !11
  %and586 = and i64 %357, 255
  %arrayidx587 = getelementptr inbounds [256 x i8], [256 x i8]* @FSb, i32 0, i64 %and586
  %358 = load i8, i8* %arrayidx587, align 1, !tbaa !10
  %conv588 = zext i8 %358 to i64
  %xor589 = xor i64 %356, %conv588
  %359 = load i64, i64* %Y2, align 8, !tbaa !11
  %shr590 = lshr i64 %359, 8
  %and591 = and i64 %shr590, 255
  %arrayidx592 = getelementptr inbounds [256 x i8], [256 x i8]* @FSb, i32 0, i64 %and591
  %360 = load i8, i8* %arrayidx592, align 1, !tbaa !10
  %conv593 = zext i8 %360 to i32
  %shl594 = shl i32 %conv593, 8
  %conv595 = sext i32 %shl594 to i64
  %xor596 = xor i64 %xor589, %conv595
  %361 = load i64, i64* %Y3, align 8, !tbaa !11
  %shr597 = lshr i64 %361, 16
  %and598 = and i64 %shr597, 255
  %arrayidx599 = getelementptr inbounds [256 x i8], [256 x i8]* @FSb, i32 0, i64 %and598
  %362 = load i8, i8* %arrayidx599, align 1, !tbaa !10
  %conv600 = zext i8 %362 to i32
  %shl601 = shl i32 %conv600, 16
  %conv602 = sext i32 %shl601 to i64
  %xor603 = xor i64 %xor596, %conv602
  %363 = load i64, i64* %Y0, align 8, !tbaa !11
  %shr604 = lshr i64 %363, 24
  %and605 = and i64 %shr604, 255
  %arrayidx606 = getelementptr inbounds [256 x i8], [256 x i8]* @FSb, i32 0, i64 %and605
  %364 = load i8, i8* %arrayidx606, align 1, !tbaa !10
  %conv607 = zext i8 %364 to i32
  %shl608 = shl i32 %conv607, 24
  %conv609 = sext i32 %shl608 to i64
  %xor610 = xor i64 %xor603, %conv609
  store i64 %xor610, i64* %X1, align 8, !tbaa !11
  %365 = load i64*, i64** %RK, align 8, !tbaa !1
  %incdec.ptr611 = getelementptr inbounds i64, i64* %365, i32 1
  store i64* %incdec.ptr611, i64** %RK, align 8, !tbaa !1
  %366 = load i64, i64* %365, align 8, !tbaa !11
  %367 = load i64, i64* %Y2, align 8, !tbaa !11
  %and612 = and i64 %367, 255
  %arrayidx613 = getelementptr inbounds [256 x i8], [256 x i8]* @FSb, i32 0, i64 %and612
  %368 = load i8, i8* %arrayidx613, align 1, !tbaa !10
  %conv614 = zext i8 %368 to i64
  %xor615 = xor i64 %366, %conv614
  %369 = load i64, i64* %Y3, align 8, !tbaa !11
  %shr616 = lshr i64 %369, 8
  %and617 = and i64 %shr616, 255
  %arrayidx618 = getelementptr inbounds [256 x i8], [256 x i8]* @FSb, i32 0, i64 %and617
  %370 = load i8, i8* %arrayidx618, align 1, !tbaa !10
  %conv619 = zext i8 %370 to i32
  %shl620 = shl i32 %conv619, 8
  %conv621 = sext i32 %shl620 to i64
  %xor622 = xor i64 %xor615, %conv621
  %371 = load i64, i64* %Y0, align 8, !tbaa !11
  %shr623 = lshr i64 %371, 16
  %and624 = and i64 %shr623, 255
  %arrayidx625 = getelementptr inbounds [256 x i8], [256 x i8]* @FSb, i32 0, i64 %and624
  %372 = load i8, i8* %arrayidx625, align 1, !tbaa !10
  %conv626 = zext i8 %372 to i32
  %shl627 = shl i32 %conv626, 16
  %conv628 = sext i32 %shl627 to i64
  %xor629 = xor i64 %xor622, %conv628
  %373 = load i64, i64* %Y1, align 8, !tbaa !11
  %shr630 = lshr i64 %373, 24
  %and631 = and i64 %shr630, 255
  %arrayidx632 = getelementptr inbounds [256 x i8], [256 x i8]* @FSb, i32 0, i64 %and631
  %374 = load i8, i8* %arrayidx632, align 1, !tbaa !10
  %conv633 = zext i8 %374 to i32
  %shl634 = shl i32 %conv633, 24
  %conv635 = sext i32 %shl634 to i64
  %xor636 = xor i64 %xor629, %conv635
  store i64 %xor636, i64* %X2, align 8, !tbaa !11
  %375 = load i64*, i64** %RK, align 8, !tbaa !1
  %incdec.ptr637 = getelementptr inbounds i64, i64* %375, i32 1
  store i64* %incdec.ptr637, i64** %RK, align 8, !tbaa !1
  %376 = load i64, i64* %375, align 8, !tbaa !11
  %377 = load i64, i64* %Y3, align 8, !tbaa !11
  %and638 = and i64 %377, 255
  %arrayidx639 = getelementptr inbounds [256 x i8], [256 x i8]* @FSb, i32 0, i64 %and638
  %378 = load i8, i8* %arrayidx639, align 1, !tbaa !10
  %conv640 = zext i8 %378 to i64
  %xor641 = xor i64 %376, %conv640
  %379 = load i64, i64* %Y0, align 8, !tbaa !11
  %shr642 = lshr i64 %379, 8
  %and643 = and i64 %shr642, 255
  %arrayidx644 = getelementptr inbounds [256 x i8], [256 x i8]* @FSb, i32 0, i64 %and643
  %380 = load i8, i8* %arrayidx644, align 1, !tbaa !10
  %conv645 = zext i8 %380 to i32
  %shl646 = shl i32 %conv645, 8
  %conv647 = sext i32 %shl646 to i64
  %xor648 = xor i64 %xor641, %conv647
  %381 = load i64, i64* %Y1, align 8, !tbaa !11
  %shr649 = lshr i64 %381, 16
  %and650 = and i64 %shr649, 255
  %arrayidx651 = getelementptr inbounds [256 x i8], [256 x i8]* @FSb, i32 0, i64 %and650
  %382 = load i8, i8* %arrayidx651, align 1, !tbaa !10
  %conv652 = zext i8 %382 to i32
  %shl653 = shl i32 %conv652, 16
  %conv654 = sext i32 %shl653 to i64
  %xor655 = xor i64 %xor648, %conv654
  %383 = load i64, i64* %Y2, align 8, !tbaa !11
  %shr656 = lshr i64 %383, 24
  %and657 = and i64 %shr656, 255
  %arrayidx658 = getelementptr inbounds [256 x i8], [256 x i8]* @FSb, i32 0, i64 %and657
  %384 = load i8, i8* %arrayidx658, align 1, !tbaa !10
  %conv659 = zext i8 %384 to i32
  %shl660 = shl i32 %conv659, 24
  %conv661 = sext i32 %shl660 to i64
  %xor662 = xor i64 %xor655, %conv661
  store i64 %xor662, i64* %X3, align 8, !tbaa !11
  br label %if.end

if.end:                                           ; preds = %for.end.494, %for.end
  %385 = load i64, i64* %X0, align 8, !tbaa !11
  %conv663 = trunc i64 %385 to i8
  %386 = load i8*, i8** %output.addr, align 8, !tbaa !1
  %arrayidx664 = getelementptr inbounds i8, i8* %386, i64 0
  store i8 %conv663, i8* %arrayidx664, align 1, !tbaa !10
  %387 = load i64, i64* %X0, align 8, !tbaa !11
  %shr665 = lshr i64 %387, 8
  %conv666 = trunc i64 %shr665 to i8
  %388 = load i8*, i8** %output.addr, align 8, !tbaa !1
  %arrayidx667 = getelementptr inbounds i8, i8* %388, i64 1
  store i8 %conv666, i8* %arrayidx667, align 1, !tbaa !10
  %389 = load i64, i64* %X0, align 8, !tbaa !11
  %shr668 = lshr i64 %389, 16
  %conv669 = trunc i64 %shr668 to i8
  %390 = load i8*, i8** %output.addr, align 8, !tbaa !1
  %arrayidx670 = getelementptr inbounds i8, i8* %390, i64 2
  store i8 %conv669, i8* %arrayidx670, align 1, !tbaa !10
  %391 = load i64, i64* %X0, align 8, !tbaa !11
  %shr671 = lshr i64 %391, 24
  %conv672 = trunc i64 %shr671 to i8
  %392 = load i8*, i8** %output.addr, align 8, !tbaa !1
  %arrayidx673 = getelementptr inbounds i8, i8* %392, i64 3
  store i8 %conv672, i8* %arrayidx673, align 1, !tbaa !10
  %393 = load i64, i64* %X1, align 8, !tbaa !11
  %conv674 = trunc i64 %393 to i8
  %394 = load i8*, i8** %output.addr, align 8, !tbaa !1
  %arrayidx675 = getelementptr inbounds i8, i8* %394, i64 4
  store i8 %conv674, i8* %arrayidx675, align 1, !tbaa !10
  %395 = load i64, i64* %X1, align 8, !tbaa !11
  %shr676 = lshr i64 %395, 8
  %conv677 = trunc i64 %shr676 to i8
  %396 = load i8*, i8** %output.addr, align 8, !tbaa !1
  %arrayidx678 = getelementptr inbounds i8, i8* %396, i64 5
  store i8 %conv677, i8* %arrayidx678, align 1, !tbaa !10
  %397 = load i64, i64* %X1, align 8, !tbaa !11
  %shr679 = lshr i64 %397, 16
  %conv680 = trunc i64 %shr679 to i8
  %398 = load i8*, i8** %output.addr, align 8, !tbaa !1
  %arrayidx681 = getelementptr inbounds i8, i8* %398, i64 6
  store i8 %conv680, i8* %arrayidx681, align 1, !tbaa !10
  %399 = load i64, i64* %X1, align 8, !tbaa !11
  %shr682 = lshr i64 %399, 24
  %conv683 = trunc i64 %shr682 to i8
  %400 = load i8*, i8** %output.addr, align 8, !tbaa !1
  %arrayidx684 = getelementptr inbounds i8, i8* %400, i64 7
  store i8 %conv683, i8* %arrayidx684, align 1, !tbaa !10
  %401 = load i64, i64* %X2, align 8, !tbaa !11
  %conv685 = trunc i64 %401 to i8
  %402 = load i8*, i8** %output.addr, align 8, !tbaa !1
  %arrayidx686 = getelementptr inbounds i8, i8* %402, i64 8
  store i8 %conv685, i8* %arrayidx686, align 1, !tbaa !10
  %403 = load i64, i64* %X2, align 8, !tbaa !11
  %shr687 = lshr i64 %403, 8
  %conv688 = trunc i64 %shr687 to i8
  %404 = load i8*, i8** %output.addr, align 8, !tbaa !1
  %arrayidx689 = getelementptr inbounds i8, i8* %404, i64 9
  store i8 %conv688, i8* %arrayidx689, align 1, !tbaa !10
  %405 = load i64, i64* %X2, align 8, !tbaa !11
  %shr690 = lshr i64 %405, 16
  %conv691 = trunc i64 %shr690 to i8
  %406 = load i8*, i8** %output.addr, align 8, !tbaa !1
  %arrayidx692 = getelementptr inbounds i8, i8* %406, i64 10
  store i8 %conv691, i8* %arrayidx692, align 1, !tbaa !10
  %407 = load i64, i64* %X2, align 8, !tbaa !11
  %shr693 = lshr i64 %407, 24
  %conv694 = trunc i64 %shr693 to i8
  %408 = load i8*, i8** %output.addr, align 8, !tbaa !1
  %arrayidx695 = getelementptr inbounds i8, i8* %408, i64 11
  store i8 %conv694, i8* %arrayidx695, align 1, !tbaa !10
  %409 = load i64, i64* %X3, align 8, !tbaa !11
  %conv696 = trunc i64 %409 to i8
  %410 = load i8*, i8** %output.addr, align 8, !tbaa !1
  %arrayidx697 = getelementptr inbounds i8, i8* %410, i64 12
  store i8 %conv696, i8* %arrayidx697, align 1, !tbaa !10
  %411 = load i64, i64* %X3, align 8, !tbaa !11
  %shr698 = lshr i64 %411, 8
  %conv699 = trunc i64 %shr698 to i8
  %412 = load i8*, i8** %output.addr, align 8, !tbaa !1
  %arrayidx700 = getelementptr inbounds i8, i8* %412, i64 13
  store i8 %conv699, i8* %arrayidx700, align 1, !tbaa !10
  %413 = load i64, i64* %X3, align 8, !tbaa !11
  %shr701 = lshr i64 %413, 16
  %conv702 = trunc i64 %shr701 to i8
  %414 = load i8*, i8** %output.addr, align 8, !tbaa !1
  %arrayidx703 = getelementptr inbounds i8, i8* %414, i64 14
  store i8 %conv702, i8* %arrayidx703, align 1, !tbaa !10
  %415 = load i64, i64* %X3, align 8, !tbaa !11
  %shr704 = lshr i64 %415, 24
  %conv705 = trunc i64 %shr704 to i8
  %416 = load i8*, i8** %output.addr, align 8, !tbaa !1
  %arrayidx706 = getelementptr inbounds i8, i8* %416, i64 15
  store i8 %conv705, i8* %arrayidx706, align 1, !tbaa !10
  %417 = bitcast i64* %Y3 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %417) #1
  %418 = bitcast i64* %Y2 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %418) #1
  %419 = bitcast i64* %Y1 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %419) #1
  %420 = bitcast i64* %Y0 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %420) #1
  %421 = bitcast i64* %X3 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %421) #1
  %422 = bitcast i64* %X2 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %422) #1
  %423 = bitcast i64* %X1 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %423) #1
  %424 = bitcast i64* %X0 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %424) #1
  %425 = bitcast i64** %RK to i8*
  call void @llvm.lifetime.end(i64 8, i8* %425) #1
  %426 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %426) #1
  ret void
}

; Function Attrs: nounwind uwtable
define void @aes_crypt_cbc(%struct.aes_context* %ctx, i32 %mode, i32 %length, i8* %iv, i8* %input, i8* %output) #0 {
entry:
  %ctx.addr = alloca %struct.aes_context*, align 8
  %mode.addr = alloca i32, align 4
  %length.addr = alloca i32, align 4
  %iv.addr = alloca i8*, align 8
  %input.addr = alloca i8*, align 8
  %output.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %temp = alloca [16 x i8], align 16
  store %struct.aes_context* %ctx, %struct.aes_context** %ctx.addr, align 8, !tbaa !1
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !5
  store i32 %length, i32* %length.addr, align 4, !tbaa !5
  store i8* %iv, i8** %iv.addr, align 8, !tbaa !1
  store i8* %input, i8** %input.addr, align 8, !tbaa !1
  store i8* %output, i8** %output.addr, align 8, !tbaa !1
  %0 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast [16 x i8]* %temp to i8*
  call void @llvm.lifetime.start(i64 16, i8* %1) #1
  %2 = load i32, i32* %mode.addr, align 4, !tbaa !5
  %cmp = icmp eq i32 %2, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  br label %while.cond

while.cond:                                       ; preds = %for.end, %if.then
  %3 = load i32, i32* %length.addr, align 4, !tbaa !5
  %cmp1 = icmp sgt i32 %3, 0
  br i1 %cmp1, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %temp, i32 0, i32 0
  %4 = load i8*, i8** %input.addr, align 8, !tbaa !1
  %call = call i8* @memcpy(i8* %arraydecay, i8* %4, i64 16) #4
  %5 = load %struct.aes_context*, %struct.aes_context** %ctx.addr, align 8, !tbaa !1
  %6 = load i32, i32* %mode.addr, align 4, !tbaa !5
  %7 = load i8*, i8** %input.addr, align 8, !tbaa !1
  %8 = load i8*, i8** %output.addr, align 8, !tbaa !1
  call void @aes_crypt_ecb(%struct.aes_context* %5, i32 %6, i8* %7, i8* %8) #3
  store i32 0, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %while.body
  %9 = load i32, i32* %i, align 4, !tbaa !5
  %cmp2 = icmp slt i32 %9, 16
  br i1 %cmp2, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %10 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom = sext i32 %10 to i64
  %11 = load i8*, i8** %output.addr, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds i8, i8* %11, i64 %idxprom
  %12 = load i8, i8* %arrayidx, align 1, !tbaa !10
  %conv = zext i8 %12 to i32
  %13 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom3 = sext i32 %13 to i64
  %14 = load i8*, i8** %iv.addr, align 8, !tbaa !1
  %arrayidx4 = getelementptr inbounds i8, i8* %14, i64 %idxprom3
  %15 = load i8, i8* %arrayidx4, align 1, !tbaa !10
  %conv5 = zext i8 %15 to i32
  %xor = xor i32 %conv, %conv5
  %conv6 = trunc i32 %xor to i8
  %16 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom7 = sext i32 %16 to i64
  %17 = load i8*, i8** %output.addr, align 8, !tbaa !1
  %arrayidx8 = getelementptr inbounds i8, i8* %17, i64 %idxprom7
  store i8 %conv6, i8* %arrayidx8, align 1, !tbaa !10
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %18 = load i32, i32* %i, align 4, !tbaa !5
  %inc = add nsw i32 %18, 1
  store i32 %inc, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %19 = load i8*, i8** %iv.addr, align 8, !tbaa !1
  %arraydecay9 = getelementptr inbounds [16 x i8], [16 x i8]* %temp, i32 0, i32 0
  %call10 = call i8* @memcpy(i8* %19, i8* %arraydecay9, i64 16) #4
  %20 = load i8*, i8** %input.addr, align 8, !tbaa !1
  %add.ptr = getelementptr inbounds i8, i8* %20, i64 16
  store i8* %add.ptr, i8** %input.addr, align 8, !tbaa !1
  %21 = load i8*, i8** %output.addr, align 8, !tbaa !1
  %add.ptr11 = getelementptr inbounds i8, i8* %21, i64 16
  store i8* %add.ptr11, i8** %output.addr, align 8, !tbaa !1
  %22 = load i32, i32* %length.addr, align 4, !tbaa !5
  %sub = sub nsw i32 %22, 16
  store i32 %sub, i32* %length.addr, align 4, !tbaa !5
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %if.end

if.else:                                          ; preds = %entry
  br label %while.cond.12

while.cond.12:                                    ; preds = %for.end.32, %if.else
  %23 = load i32, i32* %length.addr, align 4, !tbaa !5
  %cmp13 = icmp sgt i32 %23, 0
  br i1 %cmp13, label %while.body.15, label %while.end.37

while.body.15:                                    ; preds = %while.cond.12
  store i32 0, i32* %i, align 4, !tbaa !5
  br label %for.cond.16

for.cond.16:                                      ; preds = %for.inc.30, %while.body.15
  %24 = load i32, i32* %i, align 4, !tbaa !5
  %cmp17 = icmp slt i32 %24, 16
  br i1 %cmp17, label %for.body.19, label %for.end.32

for.body.19:                                      ; preds = %for.cond.16
  %25 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom20 = sext i32 %25 to i64
  %26 = load i8*, i8** %input.addr, align 8, !tbaa !1
  %arrayidx21 = getelementptr inbounds i8, i8* %26, i64 %idxprom20
  %27 = load i8, i8* %arrayidx21, align 1, !tbaa !10
  %conv22 = zext i8 %27 to i32
  %28 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom23 = sext i32 %28 to i64
  %29 = load i8*, i8** %iv.addr, align 8, !tbaa !1
  %arrayidx24 = getelementptr inbounds i8, i8* %29, i64 %idxprom23
  %30 = load i8, i8* %arrayidx24, align 1, !tbaa !10
  %conv25 = zext i8 %30 to i32
  %xor26 = xor i32 %conv22, %conv25
  %conv27 = trunc i32 %xor26 to i8
  %31 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom28 = sext i32 %31 to i64
  %32 = load i8*, i8** %output.addr, align 8, !tbaa !1
  %arrayidx29 = getelementptr inbounds i8, i8* %32, i64 %idxprom28
  store i8 %conv27, i8* %arrayidx29, align 1, !tbaa !10
  br label %for.inc.30

for.inc.30:                                       ; preds = %for.body.19
  %33 = load i32, i32* %i, align 4, !tbaa !5
  %inc31 = add nsw i32 %33, 1
  store i32 %inc31, i32* %i, align 4, !tbaa !5
  br label %for.cond.16

for.end.32:                                       ; preds = %for.cond.16
  %34 = load %struct.aes_context*, %struct.aes_context** %ctx.addr, align 8, !tbaa !1
  %35 = load i32, i32* %mode.addr, align 4, !tbaa !5
  %36 = load i8*, i8** %output.addr, align 8, !tbaa !1
  %37 = load i8*, i8** %output.addr, align 8, !tbaa !1
  call void @aes_crypt_ecb(%struct.aes_context* %34, i32 %35, i8* %36, i8* %37) #3
  %38 = load i8*, i8** %iv.addr, align 8, !tbaa !1
  %39 = load i8*, i8** %output.addr, align 8, !tbaa !1
  %call33 = call i8* @memcpy(i8* %38, i8* %39, i64 16) #4
  %40 = load i8*, i8** %input.addr, align 8, !tbaa !1
  %add.ptr34 = getelementptr inbounds i8, i8* %40, i64 16
  store i8* %add.ptr34, i8** %input.addr, align 8, !tbaa !1
  %41 = load i8*, i8** %output.addr, align 8, !tbaa !1
  %add.ptr35 = getelementptr inbounds i8, i8* %41, i64 16
  store i8* %add.ptr35, i8** %output.addr, align 8, !tbaa !1
  %42 = load i32, i32* %length.addr, align 4, !tbaa !5
  %sub36 = sub nsw i32 %42, 16
  store i32 %sub36, i32* %length.addr, align 4, !tbaa !5
  br label %while.cond.12

while.end.37:                                     ; preds = %while.cond.12
  br label %if.end

if.end:                                           ; preds = %while.end.37, %while.end
  %43 = bitcast [16 x i8]* %temp to i8*
  call void @llvm.lifetime.end(i64 16, i8* %43) #1
  %44 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %44) #1
  ret void
}

; Function Attrs: nounwind
declare i8* @memcpy(i8*, i8*, i64) #2

; Function Attrs: nounwind uwtable
define void @aes_crypt_cfb(%struct.aes_context* %ctx, i32 %mode, i32 %length, i32* %iv_off, i8* %iv, i8* %input, i8* %output) #0 {
entry:
  %ctx.addr = alloca %struct.aes_context*, align 8
  %mode.addr = alloca i32, align 4
  %length.addr = alloca i32, align 4
  %iv_off.addr = alloca i32*, align 8
  %iv.addr = alloca i8*, align 8
  %input.addr = alloca i8*, align 8
  %output.addr = alloca i8*, align 8
  %c = alloca i32, align 4
  %n = alloca i32, align 4
  store %struct.aes_context* %ctx, %struct.aes_context** %ctx.addr, align 8, !tbaa !1
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !5
  store i32 %length, i32* %length.addr, align 4, !tbaa !5
  store i32* %iv_off, i32** %iv_off.addr, align 8, !tbaa !1
  store i8* %iv, i8** %iv.addr, align 8, !tbaa !1
  store i8* %input, i8** %input.addr, align 8, !tbaa !1
  store i8* %output, i8** %output.addr, align 8, !tbaa !1
  %0 = bitcast i32* %c to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast i32* %n to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = load i32*, i32** %iv_off.addr, align 8, !tbaa !1
  %3 = load i32, i32* %2, align 4, !tbaa !5
  store i32 %3, i32* %n, align 4, !tbaa !5
  %4 = load i32, i32* %mode.addr, align 4, !tbaa !5
  %cmp = icmp eq i32 %4, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  br label %while.cond

while.cond:                                       ; preds = %if.end, %if.then
  %5 = load i32, i32* %length.addr, align 4, !tbaa !5
  %dec = add nsw i32 %5, -1
  store i32 %dec, i32* %length.addr, align 4, !tbaa !5
  %tobool = icmp ne i32 %5, 0
  br i1 %tobool, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %6 = load i32, i32* %n, align 4, !tbaa !5
  %cmp1 = icmp eq i32 %6, 0
  br i1 %cmp1, label %if.then.2, label %if.end

if.then.2:                                        ; preds = %while.body
  %7 = load %struct.aes_context*, %struct.aes_context** %ctx.addr, align 8, !tbaa !1
  %8 = load i8*, i8** %iv.addr, align 8, !tbaa !1
  %9 = load i8*, i8** %iv.addr, align 8, !tbaa !1
  call void @aes_crypt_ecb(%struct.aes_context* %7, i32 1, i8* %8, i8* %9) #3
  br label %if.end

if.end:                                           ; preds = %if.then.2, %while.body
  %10 = load i8*, i8** %input.addr, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds i8, i8* %10, i32 1
  store i8* %incdec.ptr, i8** %input.addr, align 8, !tbaa !1
  %11 = load i8, i8* %10, align 1, !tbaa !10
  %conv = zext i8 %11 to i32
  store i32 %conv, i32* %c, align 4, !tbaa !5
  %12 = load i32, i32* %c, align 4, !tbaa !5
  %13 = load i32, i32* %n, align 4, !tbaa !5
  %idxprom = sext i32 %13 to i64
  %14 = load i8*, i8** %iv.addr, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds i8, i8* %14, i64 %idxprom
  %15 = load i8, i8* %arrayidx, align 1, !tbaa !10
  %conv3 = zext i8 %15 to i32
  %xor = xor i32 %12, %conv3
  %conv4 = trunc i32 %xor to i8
  %16 = load i8*, i8** %output.addr, align 8, !tbaa !1
  %incdec.ptr5 = getelementptr inbounds i8, i8* %16, i32 1
  store i8* %incdec.ptr5, i8** %output.addr, align 8, !tbaa !1
  store i8 %conv4, i8* %16, align 1, !tbaa !10
  %17 = load i32, i32* %c, align 4, !tbaa !5
  %conv6 = trunc i32 %17 to i8
  %18 = load i32, i32* %n, align 4, !tbaa !5
  %idxprom7 = sext i32 %18 to i64
  %19 = load i8*, i8** %iv.addr, align 8, !tbaa !1
  %arrayidx8 = getelementptr inbounds i8, i8* %19, i64 %idxprom7
  store i8 %conv6, i8* %arrayidx8, align 1, !tbaa !10
  %20 = load i32, i32* %n, align 4, !tbaa !5
  %add = add nsw i32 %20, 1
  %and = and i32 %add, 15
  store i32 %and, i32* %n, align 4, !tbaa !5
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %if.end.30

if.else:                                          ; preds = %entry
  br label %while.cond.9

while.cond.9:                                     ; preds = %if.end.16, %if.else
  %21 = load i32, i32* %length.addr, align 4, !tbaa !5
  %dec10 = add nsw i32 %21, -1
  store i32 %dec10, i32* %length.addr, align 4, !tbaa !5
  %tobool11 = icmp ne i32 %21, 0
  br i1 %tobool11, label %while.body.12, label %while.end.29

while.body.12:                                    ; preds = %while.cond.9
  %22 = load i32, i32* %n, align 4, !tbaa !5
  %cmp13 = icmp eq i32 %22, 0
  br i1 %cmp13, label %if.then.15, label %if.end.16

if.then.15:                                       ; preds = %while.body.12
  %23 = load %struct.aes_context*, %struct.aes_context** %ctx.addr, align 8, !tbaa !1
  %24 = load i8*, i8** %iv.addr, align 8, !tbaa !1
  %25 = load i8*, i8** %iv.addr, align 8, !tbaa !1
  call void @aes_crypt_ecb(%struct.aes_context* %23, i32 1, i8* %24, i8* %25) #3
  br label %if.end.16

if.end.16:                                        ; preds = %if.then.15, %while.body.12
  %26 = load i32, i32* %n, align 4, !tbaa !5
  %idxprom17 = sext i32 %26 to i64
  %27 = load i8*, i8** %iv.addr, align 8, !tbaa !1
  %arrayidx18 = getelementptr inbounds i8, i8* %27, i64 %idxprom17
  %28 = load i8, i8* %arrayidx18, align 1, !tbaa !10
  %conv19 = zext i8 %28 to i32
  %29 = load i8*, i8** %input.addr, align 8, !tbaa !1
  %incdec.ptr20 = getelementptr inbounds i8, i8* %29, i32 1
  store i8* %incdec.ptr20, i8** %input.addr, align 8, !tbaa !1
  %30 = load i8, i8* %29, align 1, !tbaa !10
  %conv21 = zext i8 %30 to i32
  %xor22 = xor i32 %conv19, %conv21
  %conv23 = trunc i32 %xor22 to i8
  %31 = load i8*, i8** %output.addr, align 8, !tbaa !1
  %incdec.ptr24 = getelementptr inbounds i8, i8* %31, i32 1
  store i8* %incdec.ptr24, i8** %output.addr, align 8, !tbaa !1
  store i8 %conv23, i8* %31, align 1, !tbaa !10
  %32 = load i32, i32* %n, align 4, !tbaa !5
  %idxprom25 = sext i32 %32 to i64
  %33 = load i8*, i8** %iv.addr, align 8, !tbaa !1
  %arrayidx26 = getelementptr inbounds i8, i8* %33, i64 %idxprom25
  store i8 %conv23, i8* %arrayidx26, align 1, !tbaa !10
  %34 = load i32, i32* %n, align 4, !tbaa !5
  %add27 = add nsw i32 %34, 1
  %and28 = and i32 %add27, 15
  store i32 %and28, i32* %n, align 4, !tbaa !5
  br label %while.cond.9

while.end.29:                                     ; preds = %while.cond.9
  br label %if.end.30

if.end.30:                                        ; preds = %while.end.29, %while.end
  %35 = load i32, i32* %n, align 4, !tbaa !5
  %36 = load i32*, i32** %iv_off.addr, align 8, !tbaa !1
  store i32 %35, i32* %36, align 4, !tbaa !5
  %37 = bitcast i32* %n to i8*
  call void @llvm.lifetime.end(i64 4, i8* %37) #1
  %38 = bitcast i32* %c to i8*
  call void @llvm.lifetime.end(i64 4, i8* %38) #1
  ret void
}

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }
attributes #2 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin }
attributes #4 = { nobuiltin nounwind }

!llvm.ident = !{!0}

!0 = !{!"clang version 3.7.0 (tags/RELEASE_370/final)"}
!1 = !{!2, !2, i64 0}
!2 = !{!"any pointer", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C/C++ TBAA"}
!5 = !{!6, !6, i64 0}
!6 = !{!"int", !3, i64 0}
!7 = !{!8, !6, i64 0}
!8 = !{!"", !6, i64 0, !2, i64 8, !3, i64 16}
!9 = !{!8, !2, i64 8}
!10 = !{!3, !3, i64 0}
!11 = !{!12, !12, i64 0}
!12 = !{!"long", !3, i64 0}
