; ModuleID = './j2k.bc'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.j2k_prog_order = type { i32, [5 x i8] }
%struct.opj_dec_memory_marker_handler = type { i32, i32, i32 (%struct.opj_j2k*, i8*, i32, %struct.opj_event_mgr*)* }
%struct.opj_j2k = type { i32, %union.anon, %struct.opj_image*, %struct.opj_image*, %struct.opj_cp, %struct.opj_procedure_list*, %struct.opj_procedure_list*, %struct.opj_codestream_index*, i32, %struct.opj_tcd* }
%union.anon = type { %struct.opj_j2k_dec }
%struct.opj_j2k_dec = type { i32, %struct.opj_tcp*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i8 }
%struct.opj_tcp = type { i32, i32, i32, i32, i32, [100 x float], i32, [32 x %struct.opj_poc], i8*, i8*, i32, i32, [100 x float], %struct.opj_tccp*, i32, i8*, i32, double*, float*, float*, %struct.opj_mct_data*, i32, i32, %struct.opj_simple_mcc_decorrelation_data*, i32, i32, i8 }
%struct.opj_poc = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [5 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.opj_tccp = type { i32, i32, i32, i32, i32, i32, i32, [97 x %struct.opj_stepsize], i32, i32, [33 x i32], [33 x i32], i32 }
%struct.opj_stepsize = type { i32, i32 }
%struct.opj_mct_data = type { i32, i32, i32, i8*, i32 }
%struct.opj_simple_mcc_decorrelation_data = type { i32, i32, %struct.opj_mct_data*, %struct.opj_mct_data*, i8 }
%struct.opj_image = type { i32, i32, i32, i32, i32, i32, %struct.opj_image_comp*, i8*, i32 }
%struct.opj_image_comp = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32*, i16 }
%struct.opj_cp = type { i32, i32, i32, i32, i32, i8*, i32, i32, i8*, i32, i32, i8*, i8*, i8*, i32, i32, i32, %struct.opj_tcp*, %union.anon.0, i8 }
%union.anon.0 = type { %struct.opj_encoding_param }
%struct.opj_encoding_param = type { i32, i32, i32, i32*, i8, i8 }
%struct.opj_procedure_list = type { i32, i32, void ()** }
%struct.opj_codestream_index = type { i64, i64, i64, i32, %struct.opj_marker_info*, i32, i32, %struct.opj_tile_index* }
%struct.opj_marker_info = type { i16, i64, i32 }
%struct.opj_tile_index = type { i32, i32, i32, i32, %struct.opj_tp_index*, i32, %struct.opj_marker_info*, i32, i32, %struct.opj_packet_info* }
%struct.opj_tp_index = type { i64, i64, i64 }
%struct.opj_packet_info = type { i64, i64, i64, double }
%struct.opj_tcd = type { i32, i32, i32, i32, i32, %struct.opj_tcd_image*, %struct.opj_image*, %struct.opj_cp*, %struct.opj_tcp*, i32, i8 }
%struct.opj_tcd_image = type { %struct.opj_tcd_tile* }
%struct.opj_tcd_tile = type { i32, i32, i32, i32, i32, %struct.opj_tcd_tilecomp*, i32, double, [100 x double], i32 }
%struct.opj_tcd_tilecomp = type { i32, i32, i32, i32, i32, i32, %struct.opj_tcd_resolution*, i32, i32*, i32, i32 }
%struct.opj_tcd_resolution = type { i32, i32, i32, i32, i32, i32, i32, [3 x %struct.opj_tcd_band] }
%struct.opj_tcd_band = type { i32, i32, i32, i32, i32, %struct.opj_tcd_precinct*, i32, i32, float }
%struct.opj_tcd_precinct = type { i32, i32, i32, i32, i32, i32, %union.anon.1, i32, %struct.opj_tgt_tree*, %struct.opj_tgt_tree* }
%union.anon.1 = type { %struct.opj_tcd_cblk_enc* }
%struct.opj_tcd_cblk_enc = type { i8*, %struct.opj_tcd_layer*, %struct.opj_tcd_pass*, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.opj_tcd_layer = type { i32, i32, double, i8* }
%struct.opj_tcd_pass = type { i32, double, i32, i8 }
%struct.opj_tgt_tree = type { i32, i32, i32, %struct.opj_tgt_node*, i32 }
%struct.opj_tgt_node = type { %struct.opj_tgt_node*, i32, i32, i32 }
%struct.opj_event_mgr = type { i8*, i8*, i8*, void (i8*, i8*)*, void (i8*, i8*)*, void (i8*, i8*)* }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.opj_decoding_param = type { i32, i32 }
%struct.opj_dparameters = type { i32, i32, [4096 x i8], [4096 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.opj_j2k_enc = type { i32, i32, i64, i8*, i8*, i32, i8*, i32, i8*, i32 }
%struct.opj_cparameters = type { i32, i32, i32, i32, i32, i32, i32, i32, i32*, i8*, i32, i32, [32 x %struct.opj_poc], i32, i32, [100 x float], [100 x float], i32, i32, i32, i32, i32, i32, i32, i32, [33 x i32], [33 x i32], [4096 x i8], [4096 x i8], i32, [4096 x i8], i32, i32, i32, i32, i32, i32, i32, i32, [16 x i32], [16 x i32], [16 x i32], [16 x i32], [16 x i32], i32, i32, i32, i32, [16 x i32], [16 x i32], i32, i32, i32, i8, i8, i8, i32, i8* }
%struct.opj_stream_private = type { i8*, i64, i64 (i8*, i64, i8*)*, i64 (i8*, i64, i8*)*, i64 (i64, i8*)*, i32 (i64, i8*)*, i8*, i8*, i64 (%struct.opj_stream_private*, i64, %struct.opj_event_mgr*)*, i32 (%struct.opj_stream_private*, i64, %struct.opj_event_mgr*)*, i64, i64, i64, i32 }
%struct.opj_codestream_info_v2 = type { i32, i32, i32, i32, i32, i32, i32, %struct.opj_tile_v2_info, %struct.opj_tile_v2_info* }
%struct.opj_tile_v2_info = type { i32, i32, i32, i32, i32, %struct.opj_tccp_info* }
%struct.opj_tccp_info = type { i32, i32, i32, i32, i32, i32, i32, i32, [97 x i32], [97 x i32], i32, i32, [33 x i32], [33 x i32] }
%struct.opj_codestream_info = type { double, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32*, i32, %struct.opj_marker_info*, i32, i32, i32, i32, %struct.opj_tile_info* }
%struct.opj_tile_info = type { double*, i32, i32, i32, i32, [33 x i32], [33 x i32], [33 x i32], [33 x i32], %struct.opj_packet_info*, i32, double, i32, %struct.opj_marker_info*, i32, i32, %struct.opj_tp_info* }
%struct.opj_tp_info = type { i32, i32, i32, i32, i32 }

@j2k_prog_order_list = global [6 x %struct.j2k_prog_order] [%struct.j2k_prog_order { i32 4, [5 x i8] c"CPRL\00" }, %struct.j2k_prog_order { i32 0, [5 x i8] c"LRCP\00" }, %struct.j2k_prog_order { i32 3, [5 x i8] c"PCRL\00" }, %struct.j2k_prog_order { i32 1, [5 x i8] c"RLCP\00" }, %struct.j2k_prog_order { i32 2, [5 x i8] c"RPCL\00" }, %struct.j2k_prog_order { i32 -1, [5 x i8] zeroinitializer }], align 16
@j2k_mct_read_functions_to_float = constant [4 x void (i8*, i8*, i32)*] [void (i8*, i8*, i32)* @opj_j2k_read_int16_to_float, void (i8*, i8*, i32)* @opj_j2k_read_int32_to_float, void (i8*, i8*, i32)* @opj_j2k_read_float32_to_float, void (i8*, i8*, i32)* @opj_j2k_read_float64_to_float], align 16
@j2k_mct_read_functions_to_int32 = constant [4 x void (i8*, i8*, i32)*] [void (i8*, i8*, i32)* @opj_j2k_read_int16_to_int32, void (i8*, i8*, i32)* @opj_j2k_read_int32_to_int32, void (i8*, i8*, i32)* @opj_j2k_read_float32_to_int32, void (i8*, i8*, i32)* @opj_j2k_read_float64_to_int32], align 16
@j2k_mct_write_functions_from_float = constant [4 x void (i8*, i8*, i32)*] [void (i8*, i8*, i32)* @opj_j2k_write_float_to_int16, void (i8*, i8*, i32)* @opj_j2k_write_float_to_int32, void (i8*, i8*, i32)* @opj_j2k_write_float_to_float, void (i8*, i8*, i32)* @opj_j2k_write_float_to_float64], align 16
@j2k_memory_marker_handler_tab = constant [21 x %struct.opj_dec_memory_marker_handler] [%struct.opj_dec_memory_marker_handler { i32 65424, i32 12, i32 (%struct.opj_j2k*, i8*, i32, %struct.opj_event_mgr*)* @opj_j2k_read_sot }, %struct.opj_dec_memory_marker_handler { i32 65362, i32 20, i32 (%struct.opj_j2k*, i8*, i32, %struct.opj_event_mgr*)* @opj_j2k_read_cod }, %struct.opj_dec_memory_marker_handler { i32 65363, i32 20, i32 (%struct.opj_j2k*, i8*, i32, %struct.opj_event_mgr*)* @opj_j2k_read_coc }, %struct.opj_dec_memory_marker_handler { i32 65374, i32 20, i32 (%struct.opj_j2k*, i8*, i32, %struct.opj_event_mgr*)* @opj_j2k_read_rgn }, %struct.opj_dec_memory_marker_handler { i32 65372, i32 20, i32 (%struct.opj_j2k*, i8*, i32, %struct.opj_event_mgr*)* @opj_j2k_read_qcd }, %struct.opj_dec_memory_marker_handler { i32 65373, i32 20, i32 (%struct.opj_j2k*, i8*, i32, %struct.opj_event_mgr*)* @opj_j2k_read_qcc }, %struct.opj_dec_memory_marker_handler { i32 65375, i32 20, i32 (%struct.opj_j2k*, i8*, i32, %struct.opj_event_mgr*)* @opj_j2k_read_poc }, %struct.opj_dec_memory_marker_handler { i32 65361, i32 2, i32 (%struct.opj_j2k*, i8*, i32, %struct.opj_event_mgr*)* @opj_j2k_read_siz }, %struct.opj_dec_memory_marker_handler { i32 65365, i32 4, i32 (%struct.opj_j2k*, i8*, i32, %struct.opj_event_mgr*)* @opj_j2k_read_tlm }, %struct.opj_dec_memory_marker_handler { i32 65367, i32 4, i32 (%struct.opj_j2k*, i8*, i32, %struct.opj_event_mgr*)* @opj_j2k_read_plm }, %struct.opj_dec_memory_marker_handler { i32 65368, i32 16, i32 (%struct.opj_j2k*, i8*, i32, %struct.opj_event_mgr*)* @opj_j2k_read_plt }, %struct.opj_dec_memory_marker_handler { i32 65376, i32 4, i32 (%struct.opj_j2k*, i8*, i32, %struct.opj_event_mgr*)* @j2k_read_ppm_v3 }, %struct.opj_dec_memory_marker_handler { i32 65377, i32 16, i32 (%struct.opj_j2k*, i8*, i32, %struct.opj_event_mgr*)* @opj_j2k_read_ppt }, %struct.opj_dec_memory_marker_handler { i32 65425, i32 0, i32 (%struct.opj_j2k*, i8*, i32, %struct.opj_event_mgr*)* null }, %struct.opj_dec_memory_marker_handler { i32 65379, i32 4, i32 (%struct.opj_j2k*, i8*, i32, %struct.opj_event_mgr*)* @opj_j2k_read_crg }, %struct.opj_dec_memory_marker_handler { i32 65380, i32 20, i32 (%struct.opj_j2k*, i8*, i32, %struct.opj_event_mgr*)* @opj_j2k_read_com }, %struct.opj_dec_memory_marker_handler { i32 65396, i32 20, i32 (%struct.opj_j2k*, i8*, i32, %struct.opj_event_mgr*)* @opj_j2k_read_mct }, %struct.opj_dec_memory_marker_handler { i32 65400, i32 4, i32 (%struct.opj_j2k*, i8*, i32, %struct.opj_event_mgr*)* @opj_j2k_read_cbd }, %struct.opj_dec_memory_marker_handler { i32 65397, i32 20, i32 (%struct.opj_j2k*, i8*, i32, %struct.opj_event_mgr*)* @opj_j2k_read_mcc }, %struct.opj_dec_memory_marker_handler { i32 65399, i32 20, i32 (%struct.opj_j2k*, i8*, i32, %struct.opj_event_mgr*)* @opj_j2k_read_mco }, %struct.opj_dec_memory_marker_handler { i32 0, i32 20, i32 (%struct.opj_j2k*, i8*, i32, %struct.opj_event_mgr*)* null }], align 16
@.str = private unnamed_addr constant [77 x i8] c"opj_matrix_inversion_f(lTmpBuf,(tcp->m_mct_decoding_matrix),image->numcomps)\00", align 1
@.str.1 = private unnamed_addr constant [29 x i8] c"./openjpeg/libopenjpeg/j2k.c\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_setup_encoder = private unnamed_addr constant [95 x i8] c"void opj_j2k_setup_encoder(opj_j2k_t *, opj_cparameters_t *, opj_image_t *, opj_event_mgr_t *)\00", align 1
@.str.2 = private unnamed_addr constant [11 x i8] c"res_spec>0\00", align 1
@.str.3 = private unnamed_addr constant [12 x i8] c"p_j2k != 00\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_read_header = private unnamed_addr constant [101 x i8] c"OPJ_BOOL opj_j2k_read_header(opj_stream_private_t *, opj_j2k_t *, opj_image_t **, opj_event_mgr_t *)\00", align 1
@.str.4 = private unnamed_addr constant [15 x i8] c"p_stream != 00\00", align 1
@.str.5 = private unnamed_addr constant [16 x i8] c"p_manager != 00\00", align 1
@.str.6 = private unnamed_addr constant [12 x i8] c"p_tcp != 00\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_setup_mct_encoding = private unnamed_addr constant [64 x i8] c"OPJ_BOOL opj_j2k_setup_mct_encoding(opj_tcp_t *, opj_image_t *)\00", align 1
@MCT_ELEMENT_SIZE = internal constant [4 x i32] [i32 2, i32 4, i32 4, i32 8], align 16
@__PRETTY_FUNCTION__.opj_j2k_read_tile_header = private unnamed_addr constant [196 x i8] c"OPJ_BOOL opj_j2k_read_tile_header(opj_j2k_t *, OPJ_UINT32 *, OPJ_UINT32 *, OPJ_INT32 *, OPJ_INT32 *, OPJ_INT32 *, OPJ_INT32 *, OPJ_UINT32 *, OPJ_BOOL *, opj_stream_private_t *, opj_event_mgr_t *)\00", align 1
@.str.7 = private unnamed_addr constant [18 x i8] c"Stream too short\0A\00", align 1
@.str.8 = private unnamed_addr constant [43 x i8] c"Marker is not compliant with its position\0A\00", align 1
@.str.9 = private unnamed_addr constant [34 x i8] c"Not enough memory to read header\0A\00", align 1
@.str.10 = private unnamed_addr constant [29 x i8] c"Not sure how that happened.\0A\00", align 1
@.str.11 = private unnamed_addr constant [47 x i8] c"Fail to read the current marker segment (%#x)\0A\00", align 1
@.str.12 = private unnamed_addr constant [36 x i8] c"Not enough memory to add tl marker\0A\00", align 1
@.str.13 = private unnamed_addr constant [34 x i8] c"Cannot decode tile, memory error\0A\00", align 1
@.str.14 = private unnamed_addr constant [39 x i8] c"Header of tile %d / %d has been read.\0A\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_decode_tile = private unnamed_addr constant [121 x i8] c"OPJ_BOOL opj_j2k_decode_tile(opj_j2k_t *, OPJ_UINT32, OPJ_BYTE *, OPJ_UINT32, opj_stream_private_t *, opj_event_mgr_t *)\00", align 1
@.str.15 = private unnamed_addr constant [32 x i8] c"Stream too short, expected SOT\0A\00", align 1
@.str.16 = private unnamed_addr constant [79 x i8] c"Need to decode the main header before begin to decode the remaining codestream\00", align 1
@.str.17 = private unnamed_addr constant [69 x i8] c"No decoded area parameters, set the decoded area to the whole image\0A\00", align 1
@.str.18 = private unnamed_addr constant [15 x i8] c"p_start_x >= 0\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_set_decode_area = private unnamed_addr constant [124 x i8] c"OPJ_BOOL opj_j2k_set_decode_area(opj_j2k_t *, opj_image_t *, OPJ_INT32, OPJ_INT32, OPJ_INT32, OPJ_INT32, opj_event_mgr_t *)\00", align 1
@.str.19 = private unnamed_addr constant [15 x i8] c"p_start_y >= 0\00", align 1
@.str.20 = private unnamed_addr constant [87 x i8] c"Left position of the decoded area (region_x0=%d) is outside the image area (Xsiz=%d).\0A\00", align 1
@.str.21 = private unnamed_addr constant [88 x i8] c"Left position of the decoded area (region_x0=%d) is outside the image area (XOsiz=%d).\0A\00", align 1
@.str.22 = private unnamed_addr constant [85 x i8] c"Up position of the decoded area (region_y0=%d) is outside the image area (Ysiz=%d).\0A\00", align 1
@.str.23 = private unnamed_addr constant [86 x i8] c"Up position of the decoded area (region_y0=%d) is outside the image area (YOsiz=%d).\0A\00", align 1
@.str.24 = private unnamed_addr constant [24 x i8] c"(OPJ_UINT32)p_end_x > 0\00", align 1
@.str.25 = private unnamed_addr constant [24 x i8] c"(OPJ_UINT32)p_end_y > 0\00", align 1
@.str.26 = private unnamed_addr constant [89 x i8] c"Right position of the decoded area (region_x1=%d) is outside the image area (XOsiz=%d).\0A\00", align 1
@.str.27 = private unnamed_addr constant [88 x i8] c"Right position of the decoded area (region_x1=%d) is outside the image area (Xsiz=%d).\0A\00", align 1
@.str.28 = private unnamed_addr constant [90 x i8] c"Bottom position of the decoded area (region_y1=%d) is outside the image area (YOsiz=%d).\0A\00", align 1
@.str.29 = private unnamed_addr constant [89 x i8] c"Bottom position of the decoded area (region_y1=%d) is outside the image area (Ysiz=%d).\0A\00", align 1
@.str.30 = private unnamed_addr constant [69 x i8] c"Size x of the decoded component image is incorrect (comp[%d].w=%d).\0A\00", align 1
@.str.31 = private unnamed_addr constant [69 x i8] c"Size y of the decoded component image is incorrect (comp[%d].h=%d).\0A\00", align 1
@.str.32 = private unnamed_addr constant [38 x i8] c"Setting decoding area to %d,%d,%d,%d\0A\00", align 1
@.str.33 = private unnamed_addr constant [12 x i8] c"Wrong flag\0A\00", align 1
@stdout = external global %struct._IO_FILE*, align 8
@.str.34 = private unnamed_addr constant [37 x i8] c"[DEV] Dump an image_header struct {\0A\00", align 1
@.str.35 = private unnamed_addr constant [14 x i8] c"Image info {\0A\00", align 1
@.str.36 = private unnamed_addr constant [17 x i8] c"%s x0=%d, y0=%d\0A\00", align 1
@.str.37 = private unnamed_addr constant [17 x i8] c"%s x1=%d, y1=%d\0A\00", align 1
@.str.38 = private unnamed_addr constant [16 x i8] c"%s numcomps=%d\0A\00", align 1
@.str.39 = private unnamed_addr constant [20 x i8] c"%s\09 component %d {\0A\00", align 1
@.str.40 = private unnamed_addr constant [5 x i8] c"%s}\0A\00", align 1
@.str.41 = private unnamed_addr constant [3 x i8] c"}\0A\00", align 1
@.str.42 = private unnamed_addr constant [42 x i8] c"[DEV] Dump an image_comp_header struct {\0A\00", align 1
@.str.43 = private unnamed_addr constant [17 x i8] c"%s dx=%d, dy=%d\0A\00", align 1
@.str.44 = private unnamed_addr constant [12 x i8] c"%s prec=%d\0A\00", align 1
@.str.45 = private unnamed_addr constant [12 x i8] c"%s sgnd=%d\0A\00", align 1
@.str.46 = private unnamed_addr constant [38 x i8] c"We need an image previously created.\0A\00", align 1
@.str.47 = private unnamed_addr constant [61 x i8] c"Tile index provided by the user is incorrect %d (max = %d) \0A\00", align 1
@.str.48 = private unnamed_addr constant [76 x i8] c"Resolution factor is greater than the maximum resolution in the component.\0A\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_encode = private unnamed_addr constant [80 x i8] c"OPJ_BOOL opj_j2k_encode(opj_j2k_t *, opj_stream_private_t *, opj_event_mgr_t *)\00", align 1
@.str.49 = private unnamed_addr constant [39 x i8] c"Not enough memory to encode all tiles\0A\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_start_compress = private unnamed_addr constant [103 x i8] c"OPJ_BOOL opj_j2k_start_compress(opj_j2k_t *, opj_stream_private_t *, opj_image_t *, opj_event_mgr_t *)\00", align 1
@.str.50 = private unnamed_addr constant [57 x i8] c"Error while opj_j2k_pre_write_tile with tile index = %d\0A\00", align 1
@.str.51 = private unnamed_addr constant [58 x i8] c"Error while opj_j2k_post_write_tile with tile index = %d\0A\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_read_siz = private unnamed_addr constant [82 x i8] c"OPJ_BOOL opj_j2k_read_siz(opj_j2k_t *, OPJ_BYTE *, OPJ_UINT32, opj_event_mgr_t *)\00", align 1
@.str.52 = private unnamed_addr constant [20 x i8] c"p_header_data != 00\00", align 1
@.str.53 = private unnamed_addr constant [28 x i8] c"Error with SIZ marker size\0A\00", align 1
@.str.54 = private unnamed_addr constant [61 x i8] c"Error with SIZ marker: number of component is illegal -> %d\0A\00", align 1
@.str.55 = private unnamed_addr constant [114 x i8] c"Error with SIZ marker: number of component is not compatible with the remaining number of parameters ( %d vs %d)\0A\00", align 1
@.str.56 = private unnamed_addr constant [54 x i8] c"Error with SIZ marker: negative image size (%d x %d)\0A\00", align 1
@.str.57 = private unnamed_addr constant [61 x i8] c"Error with SIZ marker: invalid tile size (tdx: %d, tdy: %d)\0A\00", align 1
@.str.58 = private unnamed_addr constant [41 x i8] c"Prevent buffer overflow (x1: %d, y1: %d)\00", align 1
@.str.59 = private unnamed_addr constant [48 x i8] c"Not enough memory to take in charge SIZ marker\0A\00", align 1
@.str.60 = private unnamed_addr constant [102 x i8] c"Invalid values for comp = %d : dx=%u dy=%u\0A (should be between 1 and 255 according the JPEG2000 norm)\00", align 1
@.str.61 = private unnamed_addr constant [83 x i8] c"Invalid number of tiles : %u x %u (maximum fixed by jpeg2000 norm is 65535 tiles)\0A\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_read_com = private unnamed_addr constant [82 x i8] c"OPJ_BOOL opj_j2k_read_com(opj_j2k_t *, OPJ_BYTE *, OPJ_UINT32, opj_event_mgr_t *)\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_read_cod = private unnamed_addr constant [82 x i8] c"OPJ_BOOL opj_j2k_read_cod(opj_j2k_t *, OPJ_BYTE *, OPJ_UINT32, opj_event_mgr_t *)\00", align 1
@.str.62 = private unnamed_addr constant [26 x i8] c"Error reading COD marker\0A\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_read_SPCod_SPCoc = private unnamed_addr constant [104 x i8] c"OPJ_BOOL opj_j2k_read_SPCod_SPCoc(opj_j2k_t *, OPJ_UINT32, OPJ_BYTE *, OPJ_UINT32 *, opj_event_mgr_t *)\00", align 1
@.str.63 = private unnamed_addr constant [42 x i8] c"compno < p_j2k->m_private_image->numcomps\00", align 1
@.str.64 = private unnamed_addr constant [35 x i8] c"Error reading SPCod SPCoc element\0A\00", align 1
@.str.65 = private unnamed_addr constant [77 x i8] c"Invalid value for numresolutions : %d, max value is set in openjpeg.h at %d\0A\00", align 1
@.str.66 = private unnamed_addr constant [158 x i8] c"Error decoding component %d.\0AThe number of resolutions to remove is higher than the number of resolutions of this component\0AModify the cp_reduce parameter.\0A\0A\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_copy_tile_component_parameters = private unnamed_addr constant [57 x i8] c"void opj_j2k_copy_tile_component_parameters(opj_j2k_t *)\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_read_coc = private unnamed_addr constant [82 x i8] c"OPJ_BOOL opj_j2k_read_coc(opj_j2k_t *, OPJ_BYTE *, OPJ_UINT32, opj_event_mgr_t *)\00", align 1
@.str.67 = private unnamed_addr constant [26 x i8] c"Error reading COC marker\0A\00", align 1
@.str.68 = private unnamed_addr constant [53 x i8] c"Error reading COC marker (bad number of components)\0A\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_read_qcd = private unnamed_addr constant [82 x i8] c"OPJ_BOOL opj_j2k_read_qcd(opj_j2k_t *, OPJ_BYTE *, OPJ_UINT32, opj_event_mgr_t *)\00", align 1
@.str.69 = private unnamed_addr constant [26 x i8] c"Error reading QCD marker\0A\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_read_SQcd_SQcc = private unnamed_addr constant [102 x i8] c"OPJ_BOOL opj_j2k_read_SQcd_SQcc(opj_j2k_t *, OPJ_UINT32, OPJ_BYTE *, OPJ_UINT32 *, opj_event_mgr_t *)\00", align 1
@.str.70 = private unnamed_addr constant [45 x i8] c"p_comp_no < p_j2k->m_private_image->numcomps\00", align 1
@.str.71 = private unnamed_addr constant [36 x i8] c"Error reading SQcd or SQcc element\0A\00", align 1
@.str.72 = private unnamed_addr constant [216 x i8] c"While reading CCP_QNTSTY element inside QCD or QCC marker segment, number of subbands (%d) is greater to OPJ_J2K_MAXBANDS (%d). So we limit the number of elements stored to OPJ_J2K_MAXBANDS (%d) and skip the rest. \0A\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_copy_tile_quantization_parameters = private unnamed_addr constant [60 x i8] c"void opj_j2k_copy_tile_quantization_parameters(opj_j2k_t *)\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_read_qcc = private unnamed_addr constant [82 x i8] c"OPJ_BOOL opj_j2k_read_qcc(opj_j2k_t *, OPJ_BYTE *, OPJ_UINT32, opj_event_mgr_t *)\00", align 1
@.str.73 = private unnamed_addr constant [26 x i8] c"Error reading QCC marker\0A\00", align 1
@.str.74 = private unnamed_addr constant [69 x i8] c"Invalid component number: %d, regarding the number of components %d\0A\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_read_poc = private unnamed_addr constant [82 x i8] c"OPJ_BOOL opj_j2k_read_poc(opj_j2k_t *, OPJ_BYTE *, OPJ_UINT32, opj_event_mgr_t *)\00", align 1
@.str.75 = private unnamed_addr constant [26 x i8] c"Error reading POC marker\0A\00", align 1
@.str.76 = private unnamed_addr constant [22 x i8] c"l_current_poc_nb < 32\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_read_crg = private unnamed_addr constant [82 x i8] c"OPJ_BOOL opj_j2k_read_crg(opj_j2k_t *, OPJ_BYTE *, OPJ_UINT32, opj_event_mgr_t *)\00", align 1
@.str.77 = private unnamed_addr constant [26 x i8] c"Error reading CRG marker\0A\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_read_tlm = private unnamed_addr constant [82 x i8] c"OPJ_BOOL opj_j2k_read_tlm(opj_j2k_t *, OPJ_BYTE *, OPJ_UINT32, opj_event_mgr_t *)\00", align 1
@.str.78 = private unnamed_addr constant [26 x i8] c"Error reading TLM marker\0A\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_read_plm = private unnamed_addr constant [82 x i8] c"OPJ_BOOL opj_j2k_read_plm(opj_j2k_t *, OPJ_BYTE *, OPJ_UINT32, opj_event_mgr_t *)\00", align 1
@.str.79 = private unnamed_addr constant [26 x i8] c"Error reading PLM marker\0A\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_read_plt = private unnamed_addr constant [82 x i8] c"OPJ_BOOL opj_j2k_read_plt(opj_j2k_t *, OPJ_BYTE *, OPJ_UINT32, opj_event_mgr_t *)\00", align 1
@.str.80 = private unnamed_addr constant [26 x i8] c"Error reading PLT marker\0A\00", align 1
@__PRETTY_FUNCTION__.j2k_read_ppm_v3 = private unnamed_addr constant [86 x i8] c"OPJ_BOOL j2k_read_ppm_v3(opj_j2k_t *, OPJ_BYTE *, OPJ_UINT32, struct opj_event_mgr *)\00", align 1
@.str.81 = private unnamed_addr constant [26 x i8] c"Error reading PPM marker\0A\00", align 1
@.str.82 = private unnamed_addr constant [38 x i8] c"Not enough memory to read ppm marker\0A\00", align 1
@.str.83 = private unnamed_addr constant [18 x i8] c"Empty PPM marker\0A\00", align 1
@.str.84 = private unnamed_addr constant [65 x i8] c"We need ppm_data and ppm_buffer to be the same when reallocating\00", align 1
@.str.85 = private unnamed_addr constant [105 x i8] c"l_cp->ppm_data == l_cp->ppm_buffer && \22We need ppm_data and ppm_buffer to be the same when reallocating\22\00", align 1
@.str.86 = private unnamed_addr constant [79 x i8] c"Not enough memory to increase the size of ppm_data to add the new Ippm series\0A\00", align 1
@.str.87 = private unnamed_addr constant [90 x i8] c"Not enough memory to increase the size of ppm_data to add the new (complete) Ippm series\0A\00", align 1
@.str.88 = private unnamed_addr constant [92 x i8] c"Not enough memory to increase the size of ppm_data to add the new (incomplete) Ippm series\0A\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_read_ppt = private unnamed_addr constant [82 x i8] c"OPJ_BOOL opj_j2k_read_ppt(opj_j2k_t *, OPJ_BYTE *, OPJ_UINT32, opj_event_mgr_t *)\00", align 1
@.str.89 = private unnamed_addr constant [26 x i8] c"Error reading PPT marker\0A\00", align 1
@.str.90 = private unnamed_addr constant [101 x i8] c"Error reading PPT marker: packet header have been previously found in the main header (PPM marker).\0A\00", align 1
@.str.91 = private unnamed_addr constant [38 x i8] c"Not enough memory to read PPT marker\0A\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_read_sot = private unnamed_addr constant [82 x i8] c"OPJ_BOOL opj_j2k_read_sot(opj_j2k_t *, OPJ_BYTE *, OPJ_UINT32, opj_event_mgr_t *)\00", align 1
@.str.92 = private unnamed_addr constant [26 x i8] c"Error reading SOT marker\0A\00", align 1
@.str.93 = private unnamed_addr constant [24 x i8] c"Invalid tile number %d\0A\00", align 1
@.str.94 = private unnamed_addr constant [37 x i8] c"Empty SOT marker detected: Psot=%d.\0A\00", align 1
@.str.95 = private unnamed_addr constant [61 x i8] c"Psot value is not correct regards to the JPEG2000 norm: %d.\0A\00", align 1
@.str.96 = private unnamed_addr constant [111 x i8] c"Psot value of the current tile-part is equal to zero, we assuming it is the last tile-part of the codestream.\0A\00", align 1
@.str.97 = private unnamed_addr constant [57 x i8] c"p_j2k->m_specific_param.m_decoder.m_tile_ind_to_dec >= 0\00", align 1
@.str.98 = private unnamed_addr constant [36 x i8] c"p_j2k->cstr_index->tile_index != 00\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_read_rgn = private unnamed_addr constant [82 x i8] c"OPJ_BOOL opj_j2k_read_rgn(opj_j2k_t *, OPJ_BYTE *, OPJ_UINT32, opj_event_mgr_t *)\00", align 1
@.str.99 = private unnamed_addr constant [26 x i8] c"Error reading RGN marker\0A\00", align 1
@.str.100 = private unnamed_addr constant [63 x i8] c"JPWL: bad component number in RGN (%d when there are only %d)\0A\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_read_mct = private unnamed_addr constant [82 x i8] c"OPJ_BOOL opj_j2k_read_mct(opj_j2k_t *, OPJ_BYTE *, OPJ_UINT32, opj_event_mgr_t *)\00", align 1
@.str.101 = private unnamed_addr constant [26 x i8] c"Error reading MCT marker\0A\00", align 1
@.str.102 = private unnamed_addr constant [60 x i8] c"Cannot take in charge mct data within multiple MCT records\0A\00", align 1
@.str.103 = private unnamed_addr constant [38 x i8] c"Not enough memory to read MCT marker\0A\00", align 1
@.str.104 = private unnamed_addr constant [44 x i8] c"Cannot take in charge multiple MCT markers\0A\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_read_mcc = private unnamed_addr constant [82 x i8] c"OPJ_BOOL opj_j2k_read_mcc(opj_j2k_t *, OPJ_BYTE *, OPJ_UINT32, opj_event_mgr_t *)\00", align 1
@.str.105 = private unnamed_addr constant [26 x i8] c"Error reading MCC marker\0A\00", align 1
@.str.106 = private unnamed_addr constant [46 x i8] c"Cannot take in charge multiple data spanning\0A\00", align 1
@.str.107 = private unnamed_addr constant [38 x i8] c"Not enough memory to read MCC marker\0A\00", align 1
@.str.108 = private unnamed_addr constant [44 x i8] c"Cannot take in charge multiple collections\0A\00", align 1
@.str.109 = private unnamed_addr constant [66 x i8] c"Cannot take in charge collections other than array decorrelation\0A\00", align 1
@.str.110 = private unnamed_addr constant [54 x i8] c"Cannot take in charge collections with indix shuffle\0A\00", align 1
@.str.111 = private unnamed_addr constant [66 x i8] c"Cannot take in charge collections without same number of indixes\0A\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_read_mco = private unnamed_addr constant [82 x i8] c"OPJ_BOOL opj_j2k_read_mco(opj_j2k_t *, OPJ_BYTE *, OPJ_UINT32, opj_event_mgr_t *)\00", align 1
@.str.112 = private unnamed_addr constant [26 x i8] c"Error reading MCO marker\0A\00", align 1
@.str.113 = private unnamed_addr constant [55 x i8] c"Cannot take in charge multiple transformation stages.\0A\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_add_mct = private unnamed_addr constant [65 x i8] c"OPJ_BOOL opj_j2k_add_mct(opj_tcp_t *, opj_image_t *, OPJ_UINT32)\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_read_cbd = private unnamed_addr constant [82 x i8] c"OPJ_BOOL opj_j2k_read_cbd(opj_j2k_t *, OPJ_BYTE *, OPJ_UINT32, opj_event_mgr_t *)\00", align 1
@.str.114 = private unnamed_addr constant [26 x i8] c"Crror reading CBD marker\0A\00", align 1
@.str.115 = private unnamed_addr constant [48 x i8] c"Not enough memory for checking the poc values.\0A\00", align 1
@.str.116 = private unnamed_addr constant [39 x i8] c"Missing packets possible loss of data\0A\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_setup_header_reading = private unnamed_addr constant [47 x i8] c"void opj_j2k_setup_header_reading(opj_j2k_t *)\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_read_header_procedure = private unnamed_addr constant [95 x i8] c"OPJ_BOOL opj_j2k_read_header_procedure(opj_j2k_t *, opj_stream_private_t *, opj_event_mgr_t *)\00", align 1
@.str.117 = private unnamed_addr constant [24 x i8] c"Expected a SOC marker \0A\00", align 1
@.str.118 = private unnamed_addr constant [55 x i8] c"We expected read a marker ID (0xff--) instead of %.8x\0A\00", align 1
@.str.119 = private unnamed_addr constant [55 x i8] c"Unknow marker have been detected and generated error.\0A\00", align 1
@.str.120 = private unnamed_addr constant [59 x i8] c"Marker handler function failed to read the marker segment\0A\00", align 1
@.str.121 = private unnamed_addr constant [36 x i8] c"Not enough memory to add mh marker\0A\00", align 1
@.str.122 = private unnamed_addr constant [41 x i8] c"Main header has been correctly decoded.\0A\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_read_soc = private unnamed_addr constant [82 x i8] c"OPJ_BOOL opj_j2k_read_soc(opj_j2k_t *, opj_stream_private_t *, opj_event_mgr_t *)\00", align 1
@.str.123 = private unnamed_addr constant [37 x i8] c"Start to read j2k main header (%d).\0A\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_read_unk = private unnamed_addr constant [96 x i8] c"OPJ_BOOL opj_j2k_read_unk(opj_j2k_t *, opj_stream_private_t *, OPJ_UINT32 *, opj_event_mgr_t *)\00", align 1
@.str.124 = private unnamed_addr constant [16 x i8] c"Unknown marker\0A\00", align 1
@.str.125 = private unnamed_addr constant [17 x i8] c"cstr_index != 00\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_add_mhmarker = private unnamed_addr constant [91 x i8] c"OPJ_BOOL opj_j2k_add_mhmarker(opj_codestream_index_t *, OPJ_UINT32, OPJ_OFF_T, OPJ_UINT32)\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_copy_default_tcp_and_create_tcd = private unnamed_addr constant [105 x i8] c"OPJ_BOOL opj_j2k_copy_default_tcp_and_create_tcd(opj_j2k_t *, opj_stream_private_t *, opj_event_mgr_t *)\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_setup_decoding_validation = private unnamed_addr constant [52 x i8] c"void opj_j2k_setup_decoding_validation(opj_j2k_t *)\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_decoding_validation = private unnamed_addr constant [93 x i8] c"OPJ_BOOL opj_j2k_decoding_validation(opj_j2k_t *, opj_stream_private_t *, opj_event_mgr_t *)\00", align 1
@.str.126 = private unnamed_addr constant [23 x i8] c"p_procedure_list != 00\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_exec = private unnamed_addr constant [102 x i8] c"OPJ_BOOL opj_j2k_exec(opj_j2k_t *, opj_procedure_list_t *, opj_stream_private_t *, opj_event_mgr_t *)\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_add_tlmarker = private unnamed_addr constant [103 x i8] c"OPJ_BOOL opj_j2k_add_tlmarker(OPJ_UINT32, opj_codestream_index_t *, OPJ_UINT32, OPJ_OFF_T, OPJ_UINT32)\00", align 1
@.str.127 = private unnamed_addr constant [29 x i8] c"cstr_index->tile_index != 00\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_read_sod = private unnamed_addr constant [82 x i8] c"OPJ_BOOL opj_j2k_read_sod(opj_j2k_t *, opj_stream_private_t *, opj_event_mgr_t *)\00", align 1
@.str.128 = private unnamed_addr constant [34 x i8] c"Not enough memory to decode tile\0A\00", align 1
@.str.129 = private unnamed_addr constant [38 x i8] c"Codestream index from main header: {\0A\00", align 1
@.str.130 = private unnamed_addr constant [65 x i8] c"\09 Main header start position=%li\0A\09 Main header end position=%li\0A\00", align 1
@.str.131 = private unnamed_addr constant [18 x i8] c"\09 Marker list: {\0A\00", align 1
@.str.132 = private unnamed_addr constant [30 x i8] c"\09\09 type=%#x, pos=%li, len=%d\0A\00", align 1
@.str.133 = private unnamed_addr constant [5 x i8] c"\09 }\0A\00", align 1
@.str.134 = private unnamed_addr constant [17 x i8] c"\09 Tile index: {\0A\00", align 1
@.str.135 = private unnamed_addr constant [36 x i8] c"\09\09 nb of tile-part in tile [%d]=%d\0A\00", align 1
@.str.136 = private unnamed_addr constant [63 x i8] c"\09\09\09 tile-part[%d]: star_pos=%li, end_header=%li, end_pos=%li.\0A\00", align 1
@.str.137 = private unnamed_addr constant [37 x i8] c"Codestream info from main header: {\0A\00", align 1
@.str.138 = private unnamed_addr constant [18 x i8] c"\09 tx0=%d, ty0=%d\0A\00", align 1
@.str.139 = private unnamed_addr constant [18 x i8] c"\09 tdx=%d, tdy=%d\0A\00", align 1
@.str.140 = private unnamed_addr constant [16 x i8] c"\09 tw=%d, th=%d\0A\00", align 1
@.str.141 = private unnamed_addr constant [18 x i8] c"\09 default tile {\0A\00", align 1
@.str.142 = private unnamed_addr constant [13 x i8] c"\09\09 csty=%#x\0A\00", align 1
@.str.143 = private unnamed_addr constant [12 x i8] c"\09\09 prg=%#x\0A\00", align 1
@.str.144 = private unnamed_addr constant [17 x i8] c"\09\09 numlayers=%d\0A\00", align 1
@.str.145 = private unnamed_addr constant [11 x i8] c"\09\09 mct=%x\0A\00", align 1
@.str.146 = private unnamed_addr constant [14 x i8] c"\09\09 comp %d {\0A\00", align 1
@.str.147 = private unnamed_addr constant [14 x i8] c"\09\09\09 csty=%#x\0A\00", align 1
@.str.148 = private unnamed_addr constant [23 x i8] c"\09\09\09 numresolutions=%d\0A\00", align 1
@.str.149 = private unnamed_addr constant [16 x i8] c"\09\09\09 cblkw=2^%d\0A\00", align 1
@.str.150 = private unnamed_addr constant [16 x i8] c"\09\09\09 cblkh=2^%d\0A\00", align 1
@.str.151 = private unnamed_addr constant [17 x i8] c"\09\09\09 cblksty=%#x\0A\00", align 1
@.str.152 = private unnamed_addr constant [15 x i8] c"\09\09\09 qmfbid=%d\0A\00", align 1
@.str.153 = private unnamed_addr constant [24 x i8] c"\09\09\09 preccintsize (w,h)=\00", align 1
@.str.154 = private unnamed_addr constant [9 x i8] c"(%d,%d) \00", align 1
@.str.155 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.156 = private unnamed_addr constant [15 x i8] c"\09\09\09 qntsty=%d\0A\00", align 1
@.str.157 = private unnamed_addr constant [17 x i8] c"\09\09\09 numgbits=%d\0A\00", align 1
@.str.158 = private unnamed_addr constant [21 x i8] c"\09\09\09 stepsizes (m,e)=\00", align 1
@.str.159 = private unnamed_addr constant [17 x i8] c"\09\09\09 roishift=%d\0A\00", align 1
@.str.160 = private unnamed_addr constant [6 x i8] c"\09\09 }\0A\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_setup_decoding = private unnamed_addr constant [41 x i8] c"void opj_j2k_setup_decoding(opj_j2k_t *)\00", align 1
@.str.161 = private unnamed_addr constant [35 x i8] c"Not enough memory to decode tiles\0A\00", align 1
@.str.162 = private unnamed_addr constant [40 x i8] c"Not enough memory to decode tile %d/%d\0A\00", align 1
@.str.163 = private unnamed_addr constant [30 x i8] c"Tile %d/%d has been decoded.\0A\00", align 1
@.str.164 = private unnamed_addr constant [44 x i8] c"Image data has been updated with tile %d.\0A\0A\00", align 1
@.str.165 = private unnamed_addr constant [15 x i8] c"l_res->x0 >= 0\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_update_image_data = private unnamed_addr constant [75 x i8] c"OPJ_BOOL opj_j2k_update_image_data(opj_tcd_t *, OPJ_BYTE *, opj_image_t *)\00", align 1
@.str.166 = private unnamed_addr constant [15 x i8] c"l_res->x1 >= 0\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_setup_decoding_tile = private unnamed_addr constant [46 x i8] c"void opj_j2k_setup_decoding_tile(opj_j2k_t *)\00", align 1
@.str.167 = private unnamed_addr constant [38 x i8] c"Not enough memory to decode one tile\0A\00", align 1
@.str.168 = private unnamed_addr constant [28 x i8] c"Problem with seek function\0A\00", align 1
@.str.169 = private unnamed_addr constant [62 x i8] c"Tile read, decode and updated is not the desired (%d vs %d).\0A\00", align 1
@.str.170 = private unnamed_addr constant [37 x i8] c"The given tile index does not match.\00", align 1
@.str.171 = private unnamed_addr constant [21 x i8] c"tile number %d / %d\0A\00", align 1
@.str.172 = private unnamed_addr constant [54 x i8] c"p_j2k->m_specific_param.m_encoder.m_encoded_tile_data\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_post_write_tile = private unnamed_addr constant [113 x i8] c"OPJ_BOOL opj_j2k_post_write_tile(opj_j2k_t *, OPJ_BYTE *, OPJ_UINT32, opj_stream_private_t *, opj_event_mgr_t *)\00", align 1
@.str.173 = private unnamed_addr constant [47 x i8] c"Size mismatch between tile data and sent data.\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_write_sot = private unnamed_addr constant [115 x i8] c"OPJ_BOOL opj_j2k_write_sot(opj_j2k_t *, OPJ_BYTE *, OPJ_UINT32 *, const opj_stream_private_t *, opj_event_mgr_t *)\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_write_coc_in_memory = private unnamed_addr constant [103 x i8] c"void opj_j2k_write_coc_in_memory(opj_j2k_t *, OPJ_UINT32, OPJ_BYTE *, OPJ_UINT32 *, opj_event_mgr_t *)\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_get_SPCod_SPCoc_size = private unnamed_addr constant [77 x i8] c"OPJ_UINT32 opj_j2k_get_SPCod_SPCoc_size(opj_j2k_t *, OPJ_UINT32, OPJ_UINT32)\00", align 1
@.str.174 = private unnamed_addr constant [34 x i8] c"p_tile_no < (l_cp->tw * l_cp->th)\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_write_SPCod_SPCoc = private unnamed_addr constant [122 x i8] c"OPJ_BOOL opj_j2k_write_SPCod_SPCoc(opj_j2k_t *, OPJ_UINT32, OPJ_UINT32, OPJ_BYTE *, OPJ_UINT32 *, struct opj_event_mgr *)\00", align 1
@.str.175 = private unnamed_addr constant [20 x i8] c"p_header_size != 00\00", align 1
@.str.176 = private unnamed_addr constant [13 x i8] c"p_data != 00\00", align 1
@.str.177 = private unnamed_addr constant [46 x i8] c"p_comp_no <(p_j2k->m_private_image->numcomps)\00", align 1
@.str.178 = private unnamed_addr constant [35 x i8] c"Error writing SPCod SPCoc element\0A\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_write_qcc_in_memory = private unnamed_addr constant [103 x i8] c"void opj_j2k_write_qcc_in_memory(opj_j2k_t *, OPJ_UINT32, OPJ_BYTE *, OPJ_UINT32 *, opj_event_mgr_t *)\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_get_SQcd_SQcc_size = private unnamed_addr constant [75 x i8] c"OPJ_UINT32 opj_j2k_get_SQcd_SQcc_size(opj_j2k_t *, OPJ_UINT32, OPJ_UINT32)\00", align 1
@.str.179 = private unnamed_addr constant [32 x i8] c"p_tile_no < l_cp->tw * l_cp->th\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_write_SQcd_SQcc = private unnamed_addr constant [120 x i8] c"OPJ_BOOL opj_j2k_write_SQcd_SQcc(opj_j2k_t *, OPJ_UINT32, OPJ_UINT32, OPJ_BYTE *, OPJ_UINT32 *, struct opj_event_mgr *)\00", align 1
@.str.180 = private unnamed_addr constant [44 x i8] c"p_comp_no <p_j2k->m_private_image->numcomps\00", align 1
@.str.181 = private unnamed_addr constant [33 x i8] c"Error writing SQcd SQcc element\0A\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_write_poc_in_memory = private unnamed_addr constant [91 x i8] c"void opj_j2k_write_poc_in_memory(opj_j2k_t *, OPJ_BYTE *, OPJ_UINT32 *, opj_event_mgr_t *)\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_write_sod = private unnamed_addr constant [140 x i8] c"OPJ_BOOL opj_j2k_write_sod(opj_j2k_t *, opj_tcd_t *, OPJ_BYTE *, OPJ_UINT32 *, OPJ_UINT32, const opj_stream_private_t *, opj_event_mgr_t *)\00", align 1
@.str.182 = private unnamed_addr constant [20 x i8] c"Cannot encode tile\0A\00", align 1
@.str.183 = private unnamed_addr constant [27 x i8] c"tileno < (cp->tw * cp->th)\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_get_num_tp = private unnamed_addr constant [66 x i8] c"OPJ_UINT32 opj_j2k_get_num_tp(opj_cp_t *, OPJ_UINT32, OPJ_UINT32)\00", align 1
@.str.184 = private unnamed_addr constant [38 x i8] c"pino < (cp->tcps[tileno].numpocs + 1)\00", align 1
@.str.185 = private unnamed_addr constant [10 x i8] c"tcp != 00\00", align 1
@.str.186 = private unnamed_addr constant [19 x i8] c"l_current_poc != 0\00", align 1
@.str.187 = private unnamed_addr constant [17 x i8] c"strlen(prog) > 0\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_setup_end_compress = private unnamed_addr constant [45 x i8] c"void opj_j2k_setup_end_compress(opj_j2k_t *)\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_write_eoc = private unnamed_addr constant [83 x i8] c"OPJ_BOOL opj_j2k_write_eoc(opj_j2k_t *, opj_stream_private_t *, opj_event_mgr_t *)\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_write_updated_tlm = private unnamed_addr constant [101 x i8] c"OPJ_BOOL opj_j2k_write_updated_tlm(opj_j2k_t *, struct opj_stream_private *, struct opj_event_mgr *)\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_write_epc = private unnamed_addr constant [93 x i8] c"OPJ_BOOL opj_j2k_write_epc(opj_j2k_t *, struct opj_stream_private *, struct opj_event_mgr *)\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_end_encoding = private unnamed_addr constant [96 x i8] c"OPJ_BOOL opj_j2k_end_encoding(opj_j2k_t *, struct opj_stream_private *, struct opj_event_mgr *)\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_destroy_header_memory = private unnamed_addr constant [95 x i8] c"OPJ_BOOL opj_j2k_destroy_header_memory(opj_j2k_t *, opj_stream_private_t *, opj_event_mgr_t *)\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_setup_encoding_validation = private unnamed_addr constant [52 x i8] c"void opj_j2k_setup_encoding_validation(opj_j2k_t *)\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_encoding_validation = private unnamed_addr constant [93 x i8] c"OPJ_BOOL opj_j2k_encoding_validation(opj_j2k_t *, opj_stream_private_t *, opj_event_mgr_t *)\00", align 1
@.str.188 = private unnamed_addr constant [70 x i8] c"Number of resolutions is too high in comparison to the size of tiles\0A\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_mct_validation = private unnamed_addr constant [88 x i8] c"OPJ_BOOL opj_j2k_mct_validation(opj_j2k_t *, opj_stream_private_t *, opj_event_mgr_t *)\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_setup_header_writing = private unnamed_addr constant [47 x i8] c"void opj_j2k_setup_header_writing(opj_j2k_t *)\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_init_info = private unnamed_addr constant [93 x i8] c"OPJ_BOOL opj_j2k_init_info(opj_j2k_t *, struct opj_stream_private *, struct opj_event_mgr *)\00", align 1
@.str.189 = private unnamed_addr constant [17 x i8] c"p_nb_tiles != 00\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_calculate_tp = private unnamed_addr constant [103 x i8] c"OPJ_BOOL opj_j2k_calculate_tp(opj_j2k_t *, opj_cp_t *, OPJ_UINT32 *, opj_image_t *, opj_event_mgr_t *)\00", align 1
@.str.190 = private unnamed_addr constant [9 x i8] c"cp != 00\00", align 1
@.str.191 = private unnamed_addr constant [12 x i8] c"image != 00\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_write_soc = private unnamed_addr constant [83 x i8] c"OPJ_BOOL opj_j2k_write_soc(opj_j2k_t *, opj_stream_private_t *, opj_event_mgr_t *)\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_write_siz = private unnamed_addr constant [83 x i8] c"OPJ_BOOL opj_j2k_write_siz(opj_j2k_t *, opj_stream_private_t *, opj_event_mgr_t *)\00", align 1
@.str.192 = private unnamed_addr constant [38 x i8] c"Not enough memory for the SIZ marker\0A\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_write_cod = private unnamed_addr constant [83 x i8] c"OPJ_BOOL opj_j2k_write_cod(opj_j2k_t *, opj_stream_private_t *, opj_event_mgr_t *)\00", align 1
@.str.193 = private unnamed_addr constant [39 x i8] c"Not enough memory to write COD marker\0A\00", align 1
@.str.194 = private unnamed_addr constant [26 x i8] c"Error writing COD marker\0A\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_write_qcd = private unnamed_addr constant [83 x i8] c"OPJ_BOOL opj_j2k_write_qcd(opj_j2k_t *, opj_stream_private_t *, opj_event_mgr_t *)\00", align 1
@.str.195 = private unnamed_addr constant [39 x i8] c"Not enough memory to write QCD marker\0A\00", align 1
@.str.196 = private unnamed_addr constant [26 x i8] c"Error writing QCD marker\0A\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_write_image_components = private unnamed_addr constant [106 x i8] c"OPJ_BOOL opj_j2k_write_image_components(opj_j2k_t *, struct opj_stream_private *, struct opj_event_mgr *)\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_write_coc = private unnamed_addr constant [95 x i8] c"OPJ_BOOL opj_j2k_write_coc(opj_j2k_t *, OPJ_UINT32, opj_stream_private_t *, opj_event_mgr_t *)\00", align 1
@.str.197 = private unnamed_addr constant [39 x i8] c"Not enough memory to write COC marker\0A\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_write_qcc = private unnamed_addr constant [95 x i8] c"OPJ_BOOL opj_j2k_write_qcc(opj_j2k_t *, OPJ_UINT32, opj_stream_private_t *, opj_event_mgr_t *)\00", align 1
@.str.198 = private unnamed_addr constant [39 x i8] c"Not enough memory to write QCC marker\0A\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_write_tlm = private unnamed_addr constant [83 x i8] c"OPJ_BOOL opj_j2k_write_tlm(opj_j2k_t *, opj_stream_private_t *, opj_event_mgr_t *)\00", align 1
@.str.199 = private unnamed_addr constant [39 x i8] c"Not enough memory to write TLM marker\0A\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_write_poc = private unnamed_addr constant [83 x i8] c"OPJ_BOOL opj_j2k_write_poc(opj_j2k_t *, opj_stream_private_t *, opj_event_mgr_t *)\00", align 1
@.str.200 = private unnamed_addr constant [39 x i8] c"Not enough memory to write POC marker\0A\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_write_regions = private unnamed_addr constant [97 x i8] c"OPJ_BOOL opj_j2k_write_regions(opj_j2k_t *, struct opj_stream_private *, struct opj_event_mgr *)\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_write_rgn = private unnamed_addr constant [119 x i8] c"OPJ_BOOL opj_j2k_write_rgn(opj_j2k_t *, OPJ_UINT32, OPJ_UINT32, OPJ_UINT32, opj_stream_private_t *, opj_event_mgr_t *)\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_write_com = private unnamed_addr constant [83 x i8] c"OPJ_BOOL opj_j2k_write_com(opj_j2k_t *, opj_stream_private_t *, opj_event_mgr_t *)\00", align 1
@.str.201 = private unnamed_addr constant [43 x i8] c"Not enough memory to write the COM marker\0A\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_write_mct_data_group = private unnamed_addr constant [104 x i8] c"OPJ_BOOL opj_j2k_write_mct_data_group(opj_j2k_t *, struct opj_stream_private *, struct opj_event_mgr *)\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_write_cbd = private unnamed_addr constant [93 x i8] c"OPJ_BOOL opj_j2k_write_cbd(opj_j2k_t *, struct opj_stream_private *, struct opj_event_mgr *)\00", align 1
@.str.202 = private unnamed_addr constant [39 x i8] c"Not enough memory to write CBD marker\0A\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_write_mct_record = private unnamed_addr constant [118 x i8] c"OPJ_BOOL opj_j2k_write_mct_record(opj_j2k_t *, opj_mct_data_t *, struct opj_stream_private *, struct opj_event_mgr *)\00", align 1
@.str.203 = private unnamed_addr constant [39 x i8] c"Not enough memory to write MCT marker\0A\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_write_mcc_record = private unnamed_addr constant [144 x i8] c"OPJ_BOOL opj_j2k_write_mcc_record(opj_j2k_t *, struct opj_simple_mcc_decorrelation_data *, struct opj_stream_private *, struct opj_event_mgr *)\00", align 1
@.str.204 = private unnamed_addr constant [39 x i8] c"Not enough memory to write MCC marker\0A\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_write_mco = private unnamed_addr constant [93 x i8] c"OPJ_BOOL opj_j2k_write_mco(opj_j2k_t *, struct opj_stream_private *, struct opj_event_mgr *)\00", align 1
@.str.205 = private unnamed_addr constant [39 x i8] c"Not enough memory to write MCO marker\0A\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_get_end_header = private unnamed_addr constant [98 x i8] c"OPJ_BOOL opj_j2k_get_end_header(opj_j2k_t *, struct opj_stream_private *, struct opj_event_mgr *)\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_create_tcd = private unnamed_addr constant [84 x i8] c"OPJ_BOOL opj_j2k_create_tcd(opj_j2k_t *, opj_stream_private_t *, opj_event_mgr_t *)\00", align 1
@.str.206 = private unnamed_addr constant [40 x i8] c"Not enough memory to create Tile Coder\0A\00", align 1
@__PRETTY_FUNCTION__.opj_j2k_update_rates = private unnamed_addr constant [86 x i8] c"OPJ_BOOL opj_j2k_update_rates(opj_j2k_t *, opj_stream_private_t *, opj_event_mgr_t *)\00", align 1

; Function Attrs: nounwind uwtable
define internal void @opj_j2k_read_int16_to_float(i8* %p_src_data, i8* %p_dest_data, i32 %p_nb_elem) #0 {
entry:
  %p_src_data.addr = alloca i8*, align 8
  %p_dest_data.addr = alloca i8*, align 8
  %p_nb_elem.addr = alloca i32, align 4
  %l_src_data = alloca i8*, align 8
  %l_dest_data = alloca float*, align 8
  %i = alloca i32, align 4
  %l_temp = alloca i32, align 4
  store i8* %p_src_data, i8** %p_src_data.addr, align 8, !tbaa !1
  store i8* %p_dest_data, i8** %p_dest_data.addr, align 8, !tbaa !1
  store i32 %p_nb_elem, i32* %p_nb_elem.addr, align 4, !tbaa !5
  %0 = bitcast i8** %l_src_data to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = load i8*, i8** %p_src_data.addr, align 8, !tbaa !1
  store i8* %1, i8** %l_src_data, align 8, !tbaa !1
  %2 = bitcast float** %l_dest_data to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #1
  %3 = load i8*, i8** %p_dest_data.addr, align 8, !tbaa !1
  %4 = bitcast i8* %3 to float*
  store float* %4, float** %l_dest_data, align 8, !tbaa !1
  %5 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #1
  %6 = bitcast i32* %l_temp to i8*
  call void @llvm.lifetime.start(i64 4, i8* %6) #1
  store i32 0, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load i32, i32* %i, align 4, !tbaa !5
  %8 = load i32, i32* %p_nb_elem.addr, align 4, !tbaa !5
  %cmp = icmp ult i32 %7, %8
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %9 = load i8*, i8** %l_src_data, align 8, !tbaa !1
  call void @opj_read_bytes_LE(i8* %9, i32* %l_temp, i32 2) #7
  %10 = load i8*, i8** %l_src_data, align 8, !tbaa !1
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 2
  store i8* %add.ptr, i8** %l_src_data, align 8, !tbaa !1
  %11 = load i32, i32* %l_temp, align 4, !tbaa !5
  %conv = uitofp i32 %11 to float
  %12 = load float*, float** %l_dest_data, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds float, float* %12, i32 1
  store float* %incdec.ptr, float** %l_dest_data, align 8, !tbaa !1
  store float %conv, float* %12, align 4, !tbaa !7
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %13 = load i32, i32* %i, align 4, !tbaa !5
  %inc = add i32 %13, 1
  store i32 %inc, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %14 = bitcast i32* %l_temp to i8*
  call void @llvm.lifetime.end(i64 4, i8* %14) #1
  %15 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %15) #1
  %16 = bitcast float** %l_dest_data to i8*
  call void @llvm.lifetime.end(i64 8, i8* %16) #1
  %17 = bitcast i8** %l_src_data to i8*
  call void @llvm.lifetime.end(i64 8, i8* %17) #1
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @opj_j2k_read_int32_to_float(i8* %p_src_data, i8* %p_dest_data, i32 %p_nb_elem) #0 {
entry:
  %p_src_data.addr = alloca i8*, align 8
  %p_dest_data.addr = alloca i8*, align 8
  %p_nb_elem.addr = alloca i32, align 4
  %l_src_data = alloca i8*, align 8
  %l_dest_data = alloca float*, align 8
  %i = alloca i32, align 4
  %l_temp = alloca i32, align 4
  store i8* %p_src_data, i8** %p_src_data.addr, align 8, !tbaa !1
  store i8* %p_dest_data, i8** %p_dest_data.addr, align 8, !tbaa !1
  store i32 %p_nb_elem, i32* %p_nb_elem.addr, align 4, !tbaa !5
  %0 = bitcast i8** %l_src_data to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = load i8*, i8** %p_src_data.addr, align 8, !tbaa !1
  store i8* %1, i8** %l_src_data, align 8, !tbaa !1
  %2 = bitcast float** %l_dest_data to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #1
  %3 = load i8*, i8** %p_dest_data.addr, align 8, !tbaa !1
  %4 = bitcast i8* %3 to float*
  store float* %4, float** %l_dest_data, align 8, !tbaa !1
  %5 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #1
  %6 = bitcast i32* %l_temp to i8*
  call void @llvm.lifetime.start(i64 4, i8* %6) #1
  store i32 0, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load i32, i32* %i, align 4, !tbaa !5
  %8 = load i32, i32* %p_nb_elem.addr, align 4, !tbaa !5
  %cmp = icmp ult i32 %7, %8
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %9 = load i8*, i8** %l_src_data, align 8, !tbaa !1
  call void @opj_read_bytes_LE(i8* %9, i32* %l_temp, i32 4) #7
  %10 = load i8*, i8** %l_src_data, align 8, !tbaa !1
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 4
  store i8* %add.ptr, i8** %l_src_data, align 8, !tbaa !1
  %11 = load i32, i32* %l_temp, align 4, !tbaa !5
  %conv = uitofp i32 %11 to float
  %12 = load float*, float** %l_dest_data, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds float, float* %12, i32 1
  store float* %incdec.ptr, float** %l_dest_data, align 8, !tbaa !1
  store float %conv, float* %12, align 4, !tbaa !7
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %13 = load i32, i32* %i, align 4, !tbaa !5
  %inc = add i32 %13, 1
  store i32 %inc, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %14 = bitcast i32* %l_temp to i8*
  call void @llvm.lifetime.end(i64 4, i8* %14) #1
  %15 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %15) #1
  %16 = bitcast float** %l_dest_data to i8*
  call void @llvm.lifetime.end(i64 8, i8* %16) #1
  %17 = bitcast i8** %l_src_data to i8*
  call void @llvm.lifetime.end(i64 8, i8* %17) #1
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @opj_j2k_read_float32_to_float(i8* %p_src_data, i8* %p_dest_data, i32 %p_nb_elem) #0 {
entry:
  %p_src_data.addr = alloca i8*, align 8
  %p_dest_data.addr = alloca i8*, align 8
  %p_nb_elem.addr = alloca i32, align 4
  %l_src_data = alloca i8*, align 8
  %l_dest_data = alloca float*, align 8
  %i = alloca i32, align 4
  %l_temp = alloca float, align 4
  store i8* %p_src_data, i8** %p_src_data.addr, align 8, !tbaa !1
  store i8* %p_dest_data, i8** %p_dest_data.addr, align 8, !tbaa !1
  store i32 %p_nb_elem, i32* %p_nb_elem.addr, align 4, !tbaa !5
  %0 = bitcast i8** %l_src_data to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = load i8*, i8** %p_src_data.addr, align 8, !tbaa !1
  store i8* %1, i8** %l_src_data, align 8, !tbaa !1
  %2 = bitcast float** %l_dest_data to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #1
  %3 = load i8*, i8** %p_dest_data.addr, align 8, !tbaa !1
  %4 = bitcast i8* %3 to float*
  store float* %4, float** %l_dest_data, align 8, !tbaa !1
  %5 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #1
  %6 = bitcast float* %l_temp to i8*
  call void @llvm.lifetime.start(i64 4, i8* %6) #1
  store i32 0, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load i32, i32* %i, align 4, !tbaa !5
  %8 = load i32, i32* %p_nb_elem.addr, align 4, !tbaa !5
  %cmp = icmp ult i32 %7, %8
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %9 = load i8*, i8** %l_src_data, align 8, !tbaa !1
  call void @opj_read_float_LE(i8* %9, float* %l_temp) #7
  %10 = load i8*, i8** %l_src_data, align 8, !tbaa !1
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 4
  store i8* %add.ptr, i8** %l_src_data, align 8, !tbaa !1
  %11 = load float, float* %l_temp, align 4, !tbaa !7
  %12 = load float*, float** %l_dest_data, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds float, float* %12, i32 1
  store float* %incdec.ptr, float** %l_dest_data, align 8, !tbaa !1
  store float %11, float* %12, align 4, !tbaa !7
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %13 = load i32, i32* %i, align 4, !tbaa !5
  %inc = add i32 %13, 1
  store i32 %inc, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %14 = bitcast float* %l_temp to i8*
  call void @llvm.lifetime.end(i64 4, i8* %14) #1
  %15 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %15) #1
  %16 = bitcast float** %l_dest_data to i8*
  call void @llvm.lifetime.end(i64 8, i8* %16) #1
  %17 = bitcast i8** %l_src_data to i8*
  call void @llvm.lifetime.end(i64 8, i8* %17) #1
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @opj_j2k_read_float64_to_float(i8* %p_src_data, i8* %p_dest_data, i32 %p_nb_elem) #0 {
entry:
  %p_src_data.addr = alloca i8*, align 8
  %p_dest_data.addr = alloca i8*, align 8
  %p_nb_elem.addr = alloca i32, align 4
  %l_src_data = alloca i8*, align 8
  %l_dest_data = alloca float*, align 8
  %i = alloca i32, align 4
  %l_temp = alloca double, align 8
  store i8* %p_src_data, i8** %p_src_data.addr, align 8, !tbaa !1
  store i8* %p_dest_data, i8** %p_dest_data.addr, align 8, !tbaa !1
  store i32 %p_nb_elem, i32* %p_nb_elem.addr, align 4, !tbaa !5
  %0 = bitcast i8** %l_src_data to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = load i8*, i8** %p_src_data.addr, align 8, !tbaa !1
  store i8* %1, i8** %l_src_data, align 8, !tbaa !1
  %2 = bitcast float** %l_dest_data to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #1
  %3 = load i8*, i8** %p_dest_data.addr, align 8, !tbaa !1
  %4 = bitcast i8* %3 to float*
  store float* %4, float** %l_dest_data, align 8, !tbaa !1
  %5 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #1
  %6 = bitcast double* %l_temp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6) #1
  store i32 0, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load i32, i32* %i, align 4, !tbaa !5
  %8 = load i32, i32* %p_nb_elem.addr, align 4, !tbaa !5
  %cmp = icmp ult i32 %7, %8
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %9 = load i8*, i8** %l_src_data, align 8, !tbaa !1
  call void @opj_read_double_LE(i8* %9, double* %l_temp) #7
  %10 = load i8*, i8** %l_src_data, align 8, !tbaa !1
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 8
  store i8* %add.ptr, i8** %l_src_data, align 8, !tbaa !1
  %11 = load double, double* %l_temp, align 8, !tbaa !9
  %conv = fptrunc double %11 to float
  %12 = load float*, float** %l_dest_data, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds float, float* %12, i32 1
  store float* %incdec.ptr, float** %l_dest_data, align 8, !tbaa !1
  store float %conv, float* %12, align 4, !tbaa !7
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %13 = load i32, i32* %i, align 4, !tbaa !5
  %inc = add i32 %13, 1
  store i32 %inc, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %14 = bitcast double* %l_temp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %14) #1
  %15 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %15) #1
  %16 = bitcast float** %l_dest_data to i8*
  call void @llvm.lifetime.end(i64 8, i8* %16) #1
  %17 = bitcast i8** %l_src_data to i8*
  call void @llvm.lifetime.end(i64 8, i8* %17) #1
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @opj_j2k_read_int16_to_int32(i8* %p_src_data, i8* %p_dest_data, i32 %p_nb_elem) #0 {
entry:
  %p_src_data.addr = alloca i8*, align 8
  %p_dest_data.addr = alloca i8*, align 8
  %p_nb_elem.addr = alloca i32, align 4
  %l_src_data = alloca i8*, align 8
  %l_dest_data = alloca i32*, align 8
  %i = alloca i32, align 4
  %l_temp = alloca i32, align 4
  store i8* %p_src_data, i8** %p_src_data.addr, align 8, !tbaa !1
  store i8* %p_dest_data, i8** %p_dest_data.addr, align 8, !tbaa !1
  store i32 %p_nb_elem, i32* %p_nb_elem.addr, align 4, !tbaa !5
  %0 = bitcast i8** %l_src_data to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = load i8*, i8** %p_src_data.addr, align 8, !tbaa !1
  store i8* %1, i8** %l_src_data, align 8, !tbaa !1
  %2 = bitcast i32** %l_dest_data to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #1
  %3 = load i8*, i8** %p_dest_data.addr, align 8, !tbaa !1
  %4 = bitcast i8* %3 to i32*
  store i32* %4, i32** %l_dest_data, align 8, !tbaa !1
  %5 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #1
  %6 = bitcast i32* %l_temp to i8*
  call void @llvm.lifetime.start(i64 4, i8* %6) #1
  store i32 0, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load i32, i32* %i, align 4, !tbaa !5
  %8 = load i32, i32* %p_nb_elem.addr, align 4, !tbaa !5
  %cmp = icmp ult i32 %7, %8
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %9 = load i8*, i8** %l_src_data, align 8, !tbaa !1
  call void @opj_read_bytes_LE(i8* %9, i32* %l_temp, i32 2) #7
  %10 = load i8*, i8** %l_src_data, align 8, !tbaa !1
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 2
  store i8* %add.ptr, i8** %l_src_data, align 8, !tbaa !1
  %11 = load i32, i32* %l_temp, align 4, !tbaa !5
  %12 = load i32*, i32** %l_dest_data, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds i32, i32* %12, i32 1
  store i32* %incdec.ptr, i32** %l_dest_data, align 8, !tbaa !1
  store i32 %11, i32* %12, align 4, !tbaa !5
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %13 = load i32, i32* %i, align 4, !tbaa !5
  %inc = add i32 %13, 1
  store i32 %inc, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %14 = bitcast i32* %l_temp to i8*
  call void @llvm.lifetime.end(i64 4, i8* %14) #1
  %15 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %15) #1
  %16 = bitcast i32** %l_dest_data to i8*
  call void @llvm.lifetime.end(i64 8, i8* %16) #1
  %17 = bitcast i8** %l_src_data to i8*
  call void @llvm.lifetime.end(i64 8, i8* %17) #1
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @opj_j2k_read_int32_to_int32(i8* %p_src_data, i8* %p_dest_data, i32 %p_nb_elem) #0 {
entry:
  %p_src_data.addr = alloca i8*, align 8
  %p_dest_data.addr = alloca i8*, align 8
  %p_nb_elem.addr = alloca i32, align 4
  %l_src_data = alloca i8*, align 8
  %l_dest_data = alloca i32*, align 8
  %i = alloca i32, align 4
  %l_temp = alloca i32, align 4
  store i8* %p_src_data, i8** %p_src_data.addr, align 8, !tbaa !1
  store i8* %p_dest_data, i8** %p_dest_data.addr, align 8, !tbaa !1
  store i32 %p_nb_elem, i32* %p_nb_elem.addr, align 4, !tbaa !5
  %0 = bitcast i8** %l_src_data to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = load i8*, i8** %p_src_data.addr, align 8, !tbaa !1
  store i8* %1, i8** %l_src_data, align 8, !tbaa !1
  %2 = bitcast i32** %l_dest_data to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #1
  %3 = load i8*, i8** %p_dest_data.addr, align 8, !tbaa !1
  %4 = bitcast i8* %3 to i32*
  store i32* %4, i32** %l_dest_data, align 8, !tbaa !1
  %5 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #1
  %6 = bitcast i32* %l_temp to i8*
  call void @llvm.lifetime.start(i64 4, i8* %6) #1
  store i32 0, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load i32, i32* %i, align 4, !tbaa !5
  %8 = load i32, i32* %p_nb_elem.addr, align 4, !tbaa !5
  %cmp = icmp ult i32 %7, %8
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %9 = load i8*, i8** %l_src_data, align 8, !tbaa !1
  call void @opj_read_bytes_LE(i8* %9, i32* %l_temp, i32 4) #7
  %10 = load i8*, i8** %l_src_data, align 8, !tbaa !1
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 4
  store i8* %add.ptr, i8** %l_src_data, align 8, !tbaa !1
  %11 = load i32, i32* %l_temp, align 4, !tbaa !5
  %12 = load i32*, i32** %l_dest_data, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds i32, i32* %12, i32 1
  store i32* %incdec.ptr, i32** %l_dest_data, align 8, !tbaa !1
  store i32 %11, i32* %12, align 4, !tbaa !5
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %13 = load i32, i32* %i, align 4, !tbaa !5
  %inc = add i32 %13, 1
  store i32 %inc, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %14 = bitcast i32* %l_temp to i8*
  call void @llvm.lifetime.end(i64 4, i8* %14) #1
  %15 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %15) #1
  %16 = bitcast i32** %l_dest_data to i8*
  call void @llvm.lifetime.end(i64 8, i8* %16) #1
  %17 = bitcast i8** %l_src_data to i8*
  call void @llvm.lifetime.end(i64 8, i8* %17) #1
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @opj_j2k_read_float32_to_int32(i8* %p_src_data, i8* %p_dest_data, i32 %p_nb_elem) #0 {
entry:
  %p_src_data.addr = alloca i8*, align 8
  %p_dest_data.addr = alloca i8*, align 8
  %p_nb_elem.addr = alloca i32, align 4
  %l_src_data = alloca i8*, align 8
  %l_dest_data = alloca i32*, align 8
  %i = alloca i32, align 4
  %l_temp = alloca float, align 4
  store i8* %p_src_data, i8** %p_src_data.addr, align 8, !tbaa !1
  store i8* %p_dest_data, i8** %p_dest_data.addr, align 8, !tbaa !1
  store i32 %p_nb_elem, i32* %p_nb_elem.addr, align 4, !tbaa !5
  %0 = bitcast i8** %l_src_data to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = load i8*, i8** %p_src_data.addr, align 8, !tbaa !1
  store i8* %1, i8** %l_src_data, align 8, !tbaa !1
  %2 = bitcast i32** %l_dest_data to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #1
  %3 = load i8*, i8** %p_dest_data.addr, align 8, !tbaa !1
  %4 = bitcast i8* %3 to i32*
  store i32* %4, i32** %l_dest_data, align 8, !tbaa !1
  %5 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #1
  %6 = bitcast float* %l_temp to i8*
  call void @llvm.lifetime.start(i64 4, i8* %6) #1
  store i32 0, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load i32, i32* %i, align 4, !tbaa !5
  %8 = load i32, i32* %p_nb_elem.addr, align 4, !tbaa !5
  %cmp = icmp ult i32 %7, %8
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %9 = load i8*, i8** %l_src_data, align 8, !tbaa !1
  call void @opj_read_float_LE(i8* %9, float* %l_temp) #7
  %10 = load i8*, i8** %l_src_data, align 8, !tbaa !1
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 4
  store i8* %add.ptr, i8** %l_src_data, align 8, !tbaa !1
  %11 = load float, float* %l_temp, align 4, !tbaa !7
  %conv = fptosi float %11 to i32
  %12 = load i32*, i32** %l_dest_data, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds i32, i32* %12, i32 1
  store i32* %incdec.ptr, i32** %l_dest_data, align 8, !tbaa !1
  store i32 %conv, i32* %12, align 4, !tbaa !5
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %13 = load i32, i32* %i, align 4, !tbaa !5
  %inc = add i32 %13, 1
  store i32 %inc, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %14 = bitcast float* %l_temp to i8*
  call void @llvm.lifetime.end(i64 4, i8* %14) #1
  %15 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %15) #1
  %16 = bitcast i32** %l_dest_data to i8*
  call void @llvm.lifetime.end(i64 8, i8* %16) #1
  %17 = bitcast i8** %l_src_data to i8*
  call void @llvm.lifetime.end(i64 8, i8* %17) #1
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @opj_j2k_read_float64_to_int32(i8* %p_src_data, i8* %p_dest_data, i32 %p_nb_elem) #0 {
entry:
  %p_src_data.addr = alloca i8*, align 8
  %p_dest_data.addr = alloca i8*, align 8
  %p_nb_elem.addr = alloca i32, align 4
  %l_src_data = alloca i8*, align 8
  %l_dest_data = alloca i32*, align 8
  %i = alloca i32, align 4
  %l_temp = alloca double, align 8
  store i8* %p_src_data, i8** %p_src_data.addr, align 8, !tbaa !1
  store i8* %p_dest_data, i8** %p_dest_data.addr, align 8, !tbaa !1
  store i32 %p_nb_elem, i32* %p_nb_elem.addr, align 4, !tbaa !5
  %0 = bitcast i8** %l_src_data to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = load i8*, i8** %p_src_data.addr, align 8, !tbaa !1
  store i8* %1, i8** %l_src_data, align 8, !tbaa !1
  %2 = bitcast i32** %l_dest_data to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #1
  %3 = load i8*, i8** %p_dest_data.addr, align 8, !tbaa !1
  %4 = bitcast i8* %3 to i32*
  store i32* %4, i32** %l_dest_data, align 8, !tbaa !1
  %5 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #1
  %6 = bitcast double* %l_temp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6) #1
  store i32 0, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load i32, i32* %i, align 4, !tbaa !5
  %8 = load i32, i32* %p_nb_elem.addr, align 4, !tbaa !5
  %cmp = icmp ult i32 %7, %8
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %9 = load i8*, i8** %l_src_data, align 8, !tbaa !1
  call void @opj_read_double_LE(i8* %9, double* %l_temp) #7
  %10 = load i8*, i8** %l_src_data, align 8, !tbaa !1
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 8
  store i8* %add.ptr, i8** %l_src_data, align 8, !tbaa !1
  %11 = load double, double* %l_temp, align 8, !tbaa !9
  %conv = fptosi double %11 to i32
  %12 = load i32*, i32** %l_dest_data, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds i32, i32* %12, i32 1
  store i32* %incdec.ptr, i32** %l_dest_data, align 8, !tbaa !1
  store i32 %conv, i32* %12, align 4, !tbaa !5
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %13 = load i32, i32* %i, align 4, !tbaa !5
  %inc = add i32 %13, 1
  store i32 %inc, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %14 = bitcast double* %l_temp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %14) #1
  %15 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %15) #1
  %16 = bitcast i32** %l_dest_data to i8*
  call void @llvm.lifetime.end(i64 8, i8* %16) #1
  %17 = bitcast i8** %l_src_data to i8*
  call void @llvm.lifetime.end(i64 8, i8* %17) #1
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @opj_j2k_write_float_to_int16(i8* %p_src_data, i8* %p_dest_data, i32 %p_nb_elem) #0 {
entry:
  %p_src_data.addr = alloca i8*, align 8
  %p_dest_data.addr = alloca i8*, align 8
  %p_nb_elem.addr = alloca i32, align 4
  %l_dest_data = alloca i8*, align 8
  %l_src_data = alloca float*, align 8
  %i = alloca i32, align 4
  %l_temp = alloca i32, align 4
  store i8* %p_src_data, i8** %p_src_data.addr, align 8, !tbaa !1
  store i8* %p_dest_data, i8** %p_dest_data.addr, align 8, !tbaa !1
  store i32 %p_nb_elem, i32* %p_nb_elem.addr, align 4, !tbaa !5
  %0 = bitcast i8** %l_dest_data to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = load i8*, i8** %p_dest_data.addr, align 8, !tbaa !1
  store i8* %1, i8** %l_dest_data, align 8, !tbaa !1
  %2 = bitcast float** %l_src_data to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #1
  %3 = load i8*, i8** %p_src_data.addr, align 8, !tbaa !1
  %4 = bitcast i8* %3 to float*
  store float* %4, float** %l_src_data, align 8, !tbaa !1
  %5 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #1
  %6 = bitcast i32* %l_temp to i8*
  call void @llvm.lifetime.start(i64 4, i8* %6) #1
  store i32 0, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load i32, i32* %i, align 4, !tbaa !5
  %8 = load i32, i32* %p_nb_elem.addr, align 4, !tbaa !5
  %cmp = icmp ult i32 %7, %8
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %9 = load float*, float** %l_src_data, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds float, float* %9, i32 1
  store float* %incdec.ptr, float** %l_src_data, align 8, !tbaa !1
  %10 = load float, float* %9, align 4, !tbaa !7
  %conv = fptoui float %10 to i32
  store i32 %conv, i32* %l_temp, align 4, !tbaa !5
  %11 = load i8*, i8** %l_dest_data, align 8, !tbaa !1
  %12 = load i32, i32* %l_temp, align 4, !tbaa !5
  call void @opj_write_bytes_LE(i8* %11, i32 %12, i32 2) #7
  %13 = load i8*, i8** %l_dest_data, align 8, !tbaa !1
  %add.ptr = getelementptr inbounds i8, i8* %13, i64 2
  store i8* %add.ptr, i8** %l_dest_data, align 8, !tbaa !1
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %14 = load i32, i32* %i, align 4, !tbaa !5
  %inc = add i32 %14, 1
  store i32 %inc, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %15 = bitcast i32* %l_temp to i8*
  call void @llvm.lifetime.end(i64 4, i8* %15) #1
  %16 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %16) #1
  %17 = bitcast float** %l_src_data to i8*
  call void @llvm.lifetime.end(i64 8, i8* %17) #1
  %18 = bitcast i8** %l_dest_data to i8*
  call void @llvm.lifetime.end(i64 8, i8* %18) #1
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @opj_j2k_write_float_to_int32(i8* %p_src_data, i8* %p_dest_data, i32 %p_nb_elem) #0 {
entry:
  %p_src_data.addr = alloca i8*, align 8
  %p_dest_data.addr = alloca i8*, align 8
  %p_nb_elem.addr = alloca i32, align 4
  %l_dest_data = alloca i8*, align 8
  %l_src_data = alloca float*, align 8
  %i = alloca i32, align 4
  %l_temp = alloca i32, align 4
  store i8* %p_src_data, i8** %p_src_data.addr, align 8, !tbaa !1
  store i8* %p_dest_data, i8** %p_dest_data.addr, align 8, !tbaa !1
  store i32 %p_nb_elem, i32* %p_nb_elem.addr, align 4, !tbaa !5
  %0 = bitcast i8** %l_dest_data to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = load i8*, i8** %p_dest_data.addr, align 8, !tbaa !1
  store i8* %1, i8** %l_dest_data, align 8, !tbaa !1
  %2 = bitcast float** %l_src_data to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #1
  %3 = load i8*, i8** %p_src_data.addr, align 8, !tbaa !1
  %4 = bitcast i8* %3 to float*
  store float* %4, float** %l_src_data, align 8, !tbaa !1
  %5 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #1
  %6 = bitcast i32* %l_temp to i8*
  call void @llvm.lifetime.start(i64 4, i8* %6) #1
  store i32 0, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load i32, i32* %i, align 4, !tbaa !5
  %8 = load i32, i32* %p_nb_elem.addr, align 4, !tbaa !5
  %cmp = icmp ult i32 %7, %8
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %9 = load float*, float** %l_src_data, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds float, float* %9, i32 1
  store float* %incdec.ptr, float** %l_src_data, align 8, !tbaa !1
  %10 = load float, float* %9, align 4, !tbaa !7
  %conv = fptoui float %10 to i32
  store i32 %conv, i32* %l_temp, align 4, !tbaa !5
  %11 = load i8*, i8** %l_dest_data, align 8, !tbaa !1
  %12 = load i32, i32* %l_temp, align 4, !tbaa !5
  call void @opj_write_bytes_LE(i8* %11, i32 %12, i32 4) #7
  %13 = load i8*, i8** %l_dest_data, align 8, !tbaa !1
  %add.ptr = getelementptr inbounds i8, i8* %13, i64 4
  store i8* %add.ptr, i8** %l_dest_data, align 8, !tbaa !1
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %14 = load i32, i32* %i, align 4, !tbaa !5
  %inc = add i32 %14, 1
  store i32 %inc, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %15 = bitcast i32* %l_temp to i8*
  call void @llvm.lifetime.end(i64 4, i8* %15) #1
  %16 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %16) #1
  %17 = bitcast float** %l_src_data to i8*
  call void @llvm.lifetime.end(i64 8, i8* %17) #1
  %18 = bitcast i8** %l_dest_data to i8*
  call void @llvm.lifetime.end(i64 8, i8* %18) #1
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @opj_j2k_write_float_to_float(i8* %p_src_data, i8* %p_dest_data, i32 %p_nb_elem) #0 {
entry:
  %p_src_data.addr = alloca i8*, align 8
  %p_dest_data.addr = alloca i8*, align 8
  %p_nb_elem.addr = alloca i32, align 4
  %l_dest_data = alloca i8*, align 8
  %l_src_data = alloca float*, align 8
  %i = alloca i32, align 4
  %l_temp = alloca float, align 4
  store i8* %p_src_data, i8** %p_src_data.addr, align 8, !tbaa !1
  store i8* %p_dest_data, i8** %p_dest_data.addr, align 8, !tbaa !1
  store i32 %p_nb_elem, i32* %p_nb_elem.addr, align 4, !tbaa !5
  %0 = bitcast i8** %l_dest_data to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = load i8*, i8** %p_dest_data.addr, align 8, !tbaa !1
  store i8* %1, i8** %l_dest_data, align 8, !tbaa !1
  %2 = bitcast float** %l_src_data to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #1
  %3 = load i8*, i8** %p_src_data.addr, align 8, !tbaa !1
  %4 = bitcast i8* %3 to float*
  store float* %4, float** %l_src_data, align 8, !tbaa !1
  %5 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #1
  %6 = bitcast float* %l_temp to i8*
  call void @llvm.lifetime.start(i64 4, i8* %6) #1
  store i32 0, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load i32, i32* %i, align 4, !tbaa !5
  %8 = load i32, i32* %p_nb_elem.addr, align 4, !tbaa !5
  %cmp = icmp ult i32 %7, %8
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %9 = load float*, float** %l_src_data, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds float, float* %9, i32 1
  store float* %incdec.ptr, float** %l_src_data, align 8, !tbaa !1
  %10 = load float, float* %9, align 4, !tbaa !7
  store float %10, float* %l_temp, align 4, !tbaa !7
  %11 = load i8*, i8** %l_dest_data, align 8, !tbaa !1
  %12 = load float, float* %l_temp, align 4, !tbaa !7
  call void @opj_write_float_LE(i8* %11, float %12) #7
  %13 = load i8*, i8** %l_dest_data, align 8, !tbaa !1
  %add.ptr = getelementptr inbounds i8, i8* %13, i64 4
  store i8* %add.ptr, i8** %l_dest_data, align 8, !tbaa !1
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %14 = load i32, i32* %i, align 4, !tbaa !5
  %inc = add i32 %14, 1
  store i32 %inc, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %15 = bitcast float* %l_temp to i8*
  call void @llvm.lifetime.end(i64 4, i8* %15) #1
  %16 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %16) #1
  %17 = bitcast float** %l_src_data to i8*
  call void @llvm.lifetime.end(i64 8, i8* %17) #1
  %18 = bitcast i8** %l_dest_data to i8*
  call void @llvm.lifetime.end(i64 8, i8* %18) #1
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @opj_j2k_write_float_to_float64(i8* %p_src_data, i8* %p_dest_data, i32 %p_nb_elem) #0 {
entry:
  %p_src_data.addr = alloca i8*, align 8
  %p_dest_data.addr = alloca i8*, align 8
  %p_nb_elem.addr = alloca i32, align 4
  %l_dest_data = alloca i8*, align 8
  %l_src_data = alloca float*, align 8
  %i = alloca i32, align 4
  %l_temp = alloca double, align 8
  store i8* %p_src_data, i8** %p_src_data.addr, align 8, !tbaa !1
  store i8* %p_dest_data, i8** %p_dest_data.addr, align 8, !tbaa !1
  store i32 %p_nb_elem, i32* %p_nb_elem.addr, align 4, !tbaa !5
  %0 = bitcast i8** %l_dest_data to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = load i8*, i8** %p_dest_data.addr, align 8, !tbaa !1
  store i8* %1, i8** %l_dest_data, align 8, !tbaa !1
  %2 = bitcast float** %l_src_data to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #1
  %3 = load i8*, i8** %p_src_data.addr, align 8, !tbaa !1
  %4 = bitcast i8* %3 to float*
  store float* %4, float** %l_src_data, align 8, !tbaa !1
  %5 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #1
  %6 = bitcast double* %l_temp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6) #1
  store i32 0, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load i32, i32* %i, align 4, !tbaa !5
  %8 = load i32, i32* %p_nb_elem.addr, align 4, !tbaa !5
  %cmp = icmp ult i32 %7, %8
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %9 = load float*, float** %l_src_data, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds float, float* %9, i32 1
  store float* %incdec.ptr, float** %l_src_data, align 8, !tbaa !1
  %10 = load float, float* %9, align 4, !tbaa !7
  %conv = fpext float %10 to double
  store double %conv, double* %l_temp, align 8, !tbaa !9
  %11 = load i8*, i8** %l_dest_data, align 8, !tbaa !1
  %12 = load double, double* %l_temp, align 8, !tbaa !9
  call void @opj_write_double_LE(i8* %11, double %12) #7
  %13 = load i8*, i8** %l_dest_data, align 8, !tbaa !1
  %add.ptr = getelementptr inbounds i8, i8* %13, i64 8
  store i8* %add.ptr, i8** %l_dest_data, align 8, !tbaa !1
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %14 = load i32, i32* %i, align 4, !tbaa !5
  %inc = add i32 %14, 1
  store i32 %inc, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %15 = bitcast double* %l_temp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %15) #1
  %16 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %16) #1
  %17 = bitcast float** %l_src_data to i8*
  call void @llvm.lifetime.end(i64 8, i8* %17) #1
  %18 = bitcast i8** %l_dest_data to i8*
  call void @llvm.lifetime.end(i64 8, i8* %18) #1
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @opj_j2k_read_sot(%struct.opj_j2k* %p_j2k, i8* %p_header_data, i32 %p_header_size, %struct.opj_event_mgr* %p_manager) #0 {
entry:
  %retval = alloca i32, align 4
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %p_header_data.addr = alloca i8*, align 8
  %p_header_size.addr = alloca i32, align 4
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  %l_cp = alloca %struct.opj_cp*, align 8
  %l_tcp = alloca %struct.opj_tcp*, align 8
  %l_tot_len = alloca i32, align 4
  %l_num_parts = alloca i32, align 4
  %l_current_part = alloca i32, align 4
  %l_tile_x = alloca i32, align 4
  %l_tile_y = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %new_tp_index = alloca %struct.opj_tp_index*, align 8
  %new_tp_index275 = alloca %struct.opj_tp_index*, align 8
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store i8* %p_header_data, i8** %p_header_data.addr, align 8, !tbaa !1
  store i32 %p_header_size, i32* %p_header_size.addr, align 4, !tbaa !5
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %0 = bitcast %struct.opj_cp** %l_cp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  store %struct.opj_cp* null, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %1 = bitcast %struct.opj_tcp** %l_tcp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #1
  store %struct.opj_tcp* null, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %2 = bitcast i32* %l_tot_len to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #1
  %3 = bitcast i32* %l_num_parts to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #1
  store i32 0, i32* %l_num_parts, align 4, !tbaa !5
  %4 = bitcast i32* %l_current_part to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #1
  %5 = bitcast i32* %l_tile_x to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #1
  %6 = bitcast i32* %l_tile_y to i8*
  call void @llvm.lifetime.start(i64 4, i8* %6) #1
  %7 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %cmp = icmp ne i8* %7, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.52, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 3881, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @__PRETTY_FUNCTION__.opj_j2k_read_sot, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %8, %cond.true
  %9 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cmp1 = icmp ne %struct.opj_j2k* %9, null
  br i1 %cmp1, label %cond.true.2, label %cond.false.3

cond.true.2:                                      ; preds = %cond.end
  br label %cond.end.4

cond.false.3:                                     ; preds = %cond.end
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 3882, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @__PRETTY_FUNCTION__.opj_j2k_read_sot, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.4

cond.end.4:                                       ; preds = %10, %cond.true.2
  %11 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %cmp5 = icmp ne %struct.opj_event_mgr* %11, null
  br i1 %cmp5, label %cond.true.6, label %cond.false.7

cond.true.6:                                      ; preds = %cond.end.4
  br label %cond.end.8

cond.false.7:                                     ; preds = %cond.end.4
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 3883, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @__PRETTY_FUNCTION__.opj_j2k_read_sot, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.8

cond.end.8:                                       ; preds = %12, %cond.true.6
  %13 = load i32, i32* %p_header_size.addr, align 4, !tbaa !5
  %cmp9 = icmp ne i32 %13, 8
  br i1 %cmp9, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end.8
  %14 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %14, i32 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.92, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.346

if.end:                                           ; preds = %cond.end.8
  %15 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %15, i32 0, i32 4
  store %struct.opj_cp* %m_cp, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %16 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %17 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %17, i32 0, i32 8
  call void @opj_read_bytes_LE(i8* %16, i32* %m_current_tile_number, i32 2) #7
  %18 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %add.ptr = getelementptr inbounds i8, i8* %18, i64 2
  store i8* %add.ptr, i8** %p_header_data.addr, align 8, !tbaa !1
  %19 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number10 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %19, i32 0, i32 8
  %20 = load i32, i32* %m_current_tile_number10, align 4, !tbaa !11
  %21 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %tw = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %21, i32 0, i32 6
  %22 = load i32, i32* %tw, align 4, !tbaa !14
  %23 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %th = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %23, i32 0, i32 7
  %24 = load i32, i32* %th, align 4, !tbaa !15
  %mul = mul i32 %22, %24
  %cmp11 = icmp uge i32 %20, %mul
  br i1 %cmp11, label %if.then.12, label %if.end.15

if.then.12:                                       ; preds = %if.end
  %25 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %26 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number13 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %26, i32 0, i32 8
  %27 = load i32, i32* %m_current_tile_number13, align 4, !tbaa !11
  %call14 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %25, i32 1, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.93, i32 0, i32 0), i32 %27) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.346

if.end.15:                                        ; preds = %if.end
  %28 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number16 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %28, i32 0, i32 8
  %29 = load i32, i32* %m_current_tile_number16, align 4, !tbaa !11
  %idxprom = zext i32 %29 to i64
  %30 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %tcps = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %30, i32 0, i32 17
  %31 = load %struct.opj_tcp*, %struct.opj_tcp** %tcps, align 8, !tbaa !16
  %arrayidx = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %31, i64 %idxprom
  store %struct.opj_tcp* %arrayidx, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %32 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number17 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %32, i32 0, i32 8
  %33 = load i32, i32* %m_current_tile_number17, align 4, !tbaa !11
  %34 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %tw18 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %34, i32 0, i32 6
  %35 = load i32, i32* %tw18, align 4, !tbaa !14
  %rem = urem i32 %33, %35
  store i32 %rem, i32* %l_tile_x, align 4, !tbaa !5
  %36 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number19 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %36, i32 0, i32 8
  %37 = load i32, i32* %m_current_tile_number19, align 4, !tbaa !11
  %38 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %tw20 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %38, i32 0, i32 6
  %39 = load i32, i32* %tw20, align 4, !tbaa !14
  %div = udiv i32 %37, %39
  store i32 %div, i32* %l_tile_y, align 4, !tbaa !5
  %40 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  call void @opj_read_bytes_LE(i8* %40, i32* %l_tot_len, i32 4) #7
  %41 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %add.ptr21 = getelementptr inbounds i8, i8* %41, i64 4
  store i8* %add.ptr21, i8** %p_header_data.addr, align 8, !tbaa !1
  %42 = load i32, i32* %l_tot_len, align 4, !tbaa !5
  %cmp22 = icmp ne i32 %42, 0
  br i1 %cmp22, label %land.lhs.true, label %if.end.30

land.lhs.true:                                    ; preds = %if.end.15
  %43 = load i32, i32* %l_tot_len, align 4, !tbaa !5
  %cmp23 = icmp ult i32 %43, 14
  br i1 %cmp23, label %if.then.24, label %if.end.30

if.then.24:                                       ; preds = %land.lhs.true
  %44 = load i32, i32* %l_tot_len, align 4, !tbaa !5
  %cmp25 = icmp eq i32 %44, 12
  br i1 %cmp25, label %if.then.26, label %if.else

if.then.26:                                       ; preds = %if.then.24
  %45 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %46 = load i32, i32* %l_tot_len, align 4, !tbaa !5
  %call27 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %45, i32 2, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.94, i32 0, i32 0), i32 %46) #7
  br label %if.end.29

if.else:                                          ; preds = %if.then.24
  %47 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %48 = load i32, i32* %l_tot_len, align 4, !tbaa !5
  %call28 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %47, i32 1, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.95, i32 0, i32 0), i32 %48) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.346

if.end.29:                                        ; preds = %if.then.26
  br label %if.end.30

if.end.30:                                        ; preds = %if.end.29, %land.lhs.true, %if.end.15
  %49 = load i32, i32* %l_tot_len, align 4, !tbaa !5
  %tobool = icmp ne i32 %49, 0
  br i1 %tobool, label %if.end.33, label %if.then.31

if.then.31:                                       ; preds = %if.end.30
  %50 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call32 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %50, i32 4, i8* getelementptr inbounds ([111 x i8], [111 x i8]* @.str.96, i32 0, i32 0)) #7
  %51 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %51, i32 0, i32 1
  %m_decoder = bitcast %union.anon* %m_specific_param to %struct.opj_j2k_dec*
  %m_last_tile_part = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder, i32 0, i32 15
  store i32 1, i32* %m_last_tile_part, align 4, !tbaa !17
  br label %if.end.33

if.end.33:                                        ; preds = %if.then.31, %if.end.30
  %52 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  call void @opj_read_bytes_LE(i8* %52, i32* %l_current_part, i32 1) #7
  %53 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds i8, i8* %53, i32 1
  store i8* %incdec.ptr, i8** %p_header_data.addr, align 8, !tbaa !1
  %54 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  call void @opj_read_bytes_LE(i8* %54, i32* %l_num_parts, i32 1) #7
  %55 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %incdec.ptr34 = getelementptr inbounds i8, i8* %55, i32 1
  store i8* %incdec.ptr34, i8** %p_header_data.addr, align 8, !tbaa !1
  %56 = load i32, i32* %l_num_parts, align 4, !tbaa !5
  %cmp35 = icmp ne i32 %56, 0
  br i1 %cmp35, label %if.then.36, label %if.end.45

if.then.36:                                       ; preds = %if.end.33
  %57 = load i32, i32* %l_num_parts, align 4, !tbaa !5
  %58 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %m_nb_tile_parts = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %58, i32 0, i32 14
  %59 = load i32, i32* %m_nb_tile_parts, align 4, !tbaa !20
  %cmp37 = icmp ult i32 %57, %59
  br i1 %cmp37, label %if.then.38, label %if.end.40

if.then.38:                                       ; preds = %if.then.36
  %60 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %m_nb_tile_parts39 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %60, i32 0, i32 14
  %61 = load i32, i32* %m_nb_tile_parts39, align 4, !tbaa !20
  store i32 %61, i32* %l_num_parts, align 4, !tbaa !5
  br label %if.end.40

if.end.40:                                        ; preds = %if.then.38, %if.then.36
  %62 = load i32, i32* %l_current_part, align 4, !tbaa !5
  %63 = load i32, i32* %l_num_parts, align 4, !tbaa !5
  %cmp41 = icmp uge i32 %62, %63
  br i1 %cmp41, label %if.then.42, label %if.end.43

if.then.42:                                       ; preds = %if.end.40
  %64 = load i32, i32* %l_current_part, align 4, !tbaa !5
  %add = add i32 %64, 1
  store i32 %add, i32* %l_num_parts, align 4, !tbaa !5
  br label %if.end.43

if.end.43:                                        ; preds = %if.then.42, %if.end.40
  %65 = load i32, i32* %l_num_parts, align 4, !tbaa !5
  %66 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %m_nb_tile_parts44 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %66, i32 0, i32 14
  store i32 %65, i32* %m_nb_tile_parts44, align 4, !tbaa !20
  br label %if.end.45

if.end.45:                                        ; preds = %if.end.43, %if.end.33
  %67 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %m_nb_tile_parts46 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %67, i32 0, i32 14
  %68 = load i32, i32* %m_nb_tile_parts46, align 4, !tbaa !20
  %tobool47 = icmp ne i32 %68, 0
  br i1 %tobool47, label %if.then.48, label %if.end.55

if.then.48:                                       ; preds = %if.end.45
  %69 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %m_nb_tile_parts49 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %69, i32 0, i32 14
  %70 = load i32, i32* %m_nb_tile_parts49, align 4, !tbaa !20
  %71 = load i32, i32* %l_current_part, align 4, !tbaa !5
  %cmp50 = icmp eq i32 %70, %71
  br i1 %cmp50, label %if.then.51, label %if.end.54

if.then.51:                                       ; preds = %if.then.48
  %72 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param52 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %72, i32 0, i32 1
  %m_decoder53 = bitcast %union.anon* %m_specific_param52 to %struct.opj_j2k_dec*
  %m_can_decode = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder53, i32 0, i32 16
  %bf.load = load i8, i8* %m_can_decode, align 4
  %bf.clear = and i8 %bf.load, -2
  %bf.set = or i8 %bf.clear, 1
  store i8 %bf.set, i8* %m_can_decode, align 4
  br label %if.end.54

if.end.54:                                        ; preds = %if.then.51, %if.then.48
  br label %if.end.55

if.end.55:                                        ; preds = %if.end.54, %if.end.45
  %73 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param56 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %73, i32 0, i32 1
  %m_decoder57 = bitcast %union.anon* %m_specific_param56 to %struct.opj_j2k_dec*
  %m_last_tile_part58 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder57, i32 0, i32 15
  %74 = load i32, i32* %m_last_tile_part58, align 4, !tbaa !17
  %tobool59 = icmp ne i32 %74, 0
  br i1 %tobool59, label %if.else.63, label %if.then.60

if.then.60:                                       ; preds = %if.end.55
  %75 = load i32, i32* %l_tot_len, align 4, !tbaa !5
  %sub = sub i32 %75, 12
  %76 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param61 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %76, i32 0, i32 1
  %m_decoder62 = bitcast %union.anon* %m_specific_param61 to %struct.opj_j2k_dec*
  %m_sot_length = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder62, i32 0, i32 4
  store i32 %sub, i32* %m_sot_length, align 4, !tbaa !22
  br label %if.end.67

if.else.63:                                       ; preds = %if.end.55
  %77 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param64 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %77, i32 0, i32 1
  %m_decoder65 = bitcast %union.anon* %m_specific_param64 to %struct.opj_j2k_dec*
  %m_sot_length66 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder65, i32 0, i32 4
  store i32 0, i32* %m_sot_length66, align 4, !tbaa !22
  br label %if.end.67

if.end.67:                                        ; preds = %if.else.63, %if.then.60
  %78 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param68 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %78, i32 0, i32 1
  %m_decoder69 = bitcast %union.anon* %m_specific_param68 to %struct.opj_j2k_dec*
  %m_state = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder69, i32 0, i32 0
  store i32 16, i32* %m_state, align 4, !tbaa !23
  %79 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param70 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %79, i32 0, i32 1
  %m_decoder71 = bitcast %union.anon* %m_specific_param70 to %struct.opj_j2k_dec*
  %m_tile_ind_to_dec = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder71, i32 0, i32 13
  %80 = load i32, i32* %m_tile_ind_to_dec, align 4, !tbaa !24
  %cmp72 = icmp eq i32 %80, -1
  br i1 %cmp72, label %if.then.73, label %if.else.92

if.then.73:                                       ; preds = %if.end.67
  %81 = load i32, i32* %l_tile_x, align 4, !tbaa !5
  %82 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param74 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %82, i32 0, i32 1
  %m_decoder75 = bitcast %union.anon* %m_specific_param74 to %struct.opj_j2k_dec*
  %m_start_tile_x = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder75, i32 0, i32 5
  %83 = load i32, i32* %m_start_tile_x, align 4, !tbaa !25
  %cmp76 = icmp ult i32 %81, %83
  br i1 %cmp76, label %lor.end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then.73
  %84 = load i32, i32* %l_tile_x, align 4, !tbaa !5
  %85 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param77 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %85, i32 0, i32 1
  %m_decoder78 = bitcast %union.anon* %m_specific_param77 to %struct.opj_j2k_dec*
  %m_end_tile_x = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder78, i32 0, i32 7
  %86 = load i32, i32* %m_end_tile_x, align 4, !tbaa !26
  %cmp79 = icmp uge i32 %84, %86
  br i1 %cmp79, label %lor.end, label %lor.lhs.false.80

lor.lhs.false.80:                                 ; preds = %lor.lhs.false
  %87 = load i32, i32* %l_tile_y, align 4, !tbaa !5
  %88 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param81 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %88, i32 0, i32 1
  %m_decoder82 = bitcast %union.anon* %m_specific_param81 to %struct.opj_j2k_dec*
  %m_start_tile_y = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder82, i32 0, i32 6
  %89 = load i32, i32* %m_start_tile_y, align 4, !tbaa !27
  %cmp83 = icmp ult i32 %87, %89
  br i1 %cmp83, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %lor.lhs.false.80
  %90 = load i32, i32* %l_tile_y, align 4, !tbaa !5
  %91 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param84 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %91, i32 0, i32 1
  %m_decoder85 = bitcast %union.anon* %m_specific_param84 to %struct.opj_j2k_dec*
  %m_end_tile_y = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder85, i32 0, i32 8
  %92 = load i32, i32* %m_end_tile_y, align 4, !tbaa !28
  %cmp86 = icmp uge i32 %90, %92
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false.80, %lor.lhs.false, %if.then.73
  %93 = phi i1 [ true, %lor.lhs.false.80 ], [ true, %lor.lhs.false ], [ true, %if.then.73 ], [ %cmp86, %lor.rhs ]
  %lor.ext = zext i1 %93 to i32
  %94 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param87 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %94, i32 0, i32 1
  %m_decoder88 = bitcast %union.anon* %m_specific_param87 to %struct.opj_j2k_dec*
  %m_skip_data = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder88, i32 0, i32 16
  %95 = trunc i32 %lor.ext to i8
  %bf.load89 = load i8, i8* %m_skip_data, align 4
  %bf.value = and i8 %95, 1
  %bf.shl = shl i8 %bf.value, 2
  %bf.clear90 = and i8 %bf.load89, -5
  %bf.set91 = or i8 %bf.clear90, %bf.shl
  store i8 %bf.set91, i8* %m_skip_data, align 4
  %bf.result.cast = zext i8 %bf.value to i32
  br label %if.end.114

if.else.92:                                       ; preds = %if.end.67
  %96 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param93 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %96, i32 0, i32 1
  %m_decoder94 = bitcast %union.anon* %m_specific_param93 to %struct.opj_j2k_dec*
  %m_tile_ind_to_dec95 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder94, i32 0, i32 13
  %97 = load i32, i32* %m_tile_ind_to_dec95, align 4, !tbaa !24
  %cmp96 = icmp sge i32 %97, 0
  br i1 %cmp96, label %cond.true.97, label %cond.false.98

cond.true.97:                                     ; preds = %if.else.92
  br label %cond.end.99

cond.false.98:                                    ; preds = %if.else.92
  call void @__assert_fail(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.97, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 4027, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @__PRETTY_FUNCTION__.opj_j2k_read_sot, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.99

cond.end.99:                                      ; preds = %98, %cond.true.97
  %99 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number100 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %99, i32 0, i32 8
  %100 = load i32, i32* %m_current_tile_number100, align 4, !tbaa !11
  %101 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param101 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %101, i32 0, i32 1
  %m_decoder102 = bitcast %union.anon* %m_specific_param101 to %struct.opj_j2k_dec*
  %m_tile_ind_to_dec103 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder102, i32 0, i32 13
  %102 = load i32, i32* %m_tile_ind_to_dec103, align 4, !tbaa !24
  %cmp104 = icmp ne i32 %100, %102
  %conv = zext i1 %cmp104 to i32
  %103 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param105 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %103, i32 0, i32 1
  %m_decoder106 = bitcast %union.anon* %m_specific_param105 to %struct.opj_j2k_dec*
  %m_skip_data107 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder106, i32 0, i32 16
  %104 = trunc i32 %conv to i8
  %bf.load108 = load i8, i8* %m_skip_data107, align 4
  %bf.value109 = and i8 %104, 1
  %bf.shl110 = shl i8 %bf.value109, 2
  %bf.clear111 = and i8 %bf.load108, -5
  %bf.set112 = or i8 %bf.clear111, %bf.shl110
  store i8 %bf.set112, i8* %m_skip_data107, align 4
  %bf.result.cast113 = zext i8 %bf.value109 to i32
  br label %if.end.114

if.end.114:                                       ; preds = %cond.end.99, %lor.end
  %105 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cstr_index = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %105, i32 0, i32 7
  %106 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index, align 8, !tbaa !29
  %tobool115 = icmp ne %struct.opj_codestream_index* %106, null
  br i1 %tobool115, label %if.then.116, label %if.end.345

if.then.116:                                      ; preds = %if.end.114
  %107 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cstr_index117 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %107, i32 0, i32 7
  %108 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index117, align 8, !tbaa !29
  %tile_index = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %108, i32 0, i32 7
  %109 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index, align 8, !tbaa !30
  %cmp118 = icmp ne %struct.opj_tile_index* %109, null
  br i1 %cmp118, label %cond.true.120, label %cond.false.121

cond.true.120:                                    ; preds = %if.then.116
  br label %cond.end.122

cond.false.121:                                   ; preds = %if.then.116
  call void @__assert_fail(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.98, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 4035, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @__PRETTY_FUNCTION__.opj_j2k_read_sot, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.122

cond.end.122:                                     ; preds = %110, %cond.true.120
  %111 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number123 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %111, i32 0, i32 8
  %112 = load i32, i32* %m_current_tile_number123, align 4, !tbaa !11
  %113 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number124 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %113, i32 0, i32 8
  %114 = load i32, i32* %m_current_tile_number124, align 4, !tbaa !11
  %idxprom125 = zext i32 %114 to i64
  %115 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cstr_index126 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %115, i32 0, i32 7
  %116 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index126, align 8, !tbaa !29
  %tile_index127 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %116, i32 0, i32 7
  %117 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index127, align 8, !tbaa !30
  %arrayidx128 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %117, i64 %idxprom125
  %tileno = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx128, i32 0, i32 0
  store i32 %112, i32* %tileno, align 4, !tbaa !32
  %118 = load i32, i32* %l_current_part, align 4, !tbaa !5
  %119 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number129 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %119, i32 0, i32 8
  %120 = load i32, i32* %m_current_tile_number129, align 4, !tbaa !11
  %idxprom130 = zext i32 %120 to i64
  %121 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cstr_index131 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %121, i32 0, i32 7
  %122 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index131, align 8, !tbaa !29
  %tile_index132 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %122, i32 0, i32 7
  %123 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index132, align 8, !tbaa !30
  %arrayidx133 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %123, i64 %idxprom130
  %current_tpsno = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx133, i32 0, i32 3
  store i32 %118, i32* %current_tpsno, align 4, !tbaa !34
  %124 = load i32, i32* %l_num_parts, align 4, !tbaa !5
  %cmp134 = icmp ne i32 %124, 0
  br i1 %cmp134, label %if.then.136, label %if.else.213

if.then.136:                                      ; preds = %cond.end.122
  %125 = load i32, i32* %l_num_parts, align 4, !tbaa !5
  %126 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number137 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %126, i32 0, i32 8
  %127 = load i32, i32* %m_current_tile_number137, align 4, !tbaa !11
  %idxprom138 = zext i32 %127 to i64
  %128 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cstr_index139 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %128, i32 0, i32 7
  %129 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index139, align 8, !tbaa !29
  %tile_index140 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %129, i32 0, i32 7
  %130 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index140, align 8, !tbaa !30
  %arrayidx141 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %130, i64 %idxprom138
  %nb_tps = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx141, i32 0, i32 1
  store i32 %125, i32* %nb_tps, align 4, !tbaa !35
  %131 = load i32, i32* %l_num_parts, align 4, !tbaa !5
  %132 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number142 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %132, i32 0, i32 8
  %133 = load i32, i32* %m_current_tile_number142, align 4, !tbaa !11
  %idxprom143 = zext i32 %133 to i64
  %134 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cstr_index144 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %134, i32 0, i32 7
  %135 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index144, align 8, !tbaa !29
  %tile_index145 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %135, i32 0, i32 7
  %136 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index145, align 8, !tbaa !30
  %arrayidx146 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %136, i64 %idxprom143
  %current_nb_tps = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx146, i32 0, i32 2
  store i32 %131, i32* %current_nb_tps, align 4, !tbaa !36
  %137 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number147 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %137, i32 0, i32 8
  %138 = load i32, i32* %m_current_tile_number147, align 4, !tbaa !11
  %idxprom148 = zext i32 %138 to i64
  %139 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cstr_index149 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %139, i32 0, i32 7
  %140 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index149, align 8, !tbaa !29
  %tile_index150 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %140, i32 0, i32 7
  %141 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index150, align 8, !tbaa !30
  %arrayidx151 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %141, i64 %idxprom148
  %tp_index = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx151, i32 0, i32 4
  %142 = load %struct.opj_tp_index*, %struct.opj_tp_index** %tp_index, align 8, !tbaa !37
  %tobool152 = icmp ne %struct.opj_tp_index* %142, null
  br i1 %tobool152, label %if.else.172, label %if.then.153

if.then.153:                                      ; preds = %if.then.136
  %143 = load i32, i32* %l_num_parts, align 4, !tbaa !5
  %conv154 = zext i32 %143 to i64
  %cmp155 = icmp ne i64 %conv154, 0
  br i1 %cmp155, label %land.lhs.true.157, label %cond.false.162

land.lhs.true.157:                                ; preds = %if.then.153
  %144 = load i32, i32* %l_num_parts, align 4, !tbaa !5
  %conv158 = zext i32 %144 to i64
  %cmp159 = icmp uge i64 %conv158, 768614336404564640
  br i1 %cmp159, label %cond.true.161, label %cond.false.162

cond.true.161:                                    ; preds = %land.lhs.true.157
  br label %cond.end.165

cond.false.162:                                   ; preds = %land.lhs.true.157, %if.then.153
  %145 = load i32, i32* %l_num_parts, align 4, !tbaa !5
  %conv163 = zext i32 %145 to i64
  %call164 = call noalias i8* @calloc(i64 %conv163, i64 24) #9
  br label %cond.end.165

cond.end.165:                                     ; preds = %cond.false.162, %cond.true.161
  %cond = phi i8* [ null, %cond.true.161 ], [ %call164, %cond.false.162 ]
  %146 = bitcast i8* %cond to %struct.opj_tp_index*
  %147 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number166 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %147, i32 0, i32 8
  %148 = load i32, i32* %m_current_tile_number166, align 4, !tbaa !11
  %idxprom167 = zext i32 %148 to i64
  %149 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cstr_index168 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %149, i32 0, i32 7
  %150 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index168, align 8, !tbaa !29
  %tile_index169 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %150, i32 0, i32 7
  %151 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index169, align 8, !tbaa !30
  %arrayidx170 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %151, i64 %idxprom167
  %tp_index171 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx170, i32 0, i32 4
  store %struct.opj_tp_index* %146, %struct.opj_tp_index** %tp_index171, align 8, !tbaa !37
  br label %if.end.212

if.else.172:                                      ; preds = %if.then.136
  %152 = bitcast %struct.opj_tp_index** %new_tp_index to i8*
  call void @llvm.lifetime.start(i64 8, i8* %152) #1
  %153 = load i32, i32* %l_num_parts, align 4, !tbaa !5
  %conv173 = zext i32 %153 to i64
  %mul174 = mul i64 %conv173, 24
  %cmp175 = icmp uge i64 %mul174, -256
  br i1 %cmp175, label %cond.true.177, label %cond.false.178

cond.true.177:                                    ; preds = %if.else.172
  br label %cond.end.188

cond.false.178:                                   ; preds = %if.else.172
  %154 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number179 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %154, i32 0, i32 8
  %155 = load i32, i32* %m_current_tile_number179, align 4, !tbaa !11
  %idxprom180 = zext i32 %155 to i64
  %156 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cstr_index181 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %156, i32 0, i32 7
  %157 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index181, align 8, !tbaa !29
  %tile_index182 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %157, i32 0, i32 7
  %158 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index182, align 8, !tbaa !30
  %arrayidx183 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %158, i64 %idxprom180
  %tp_index184 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx183, i32 0, i32 4
  %159 = load %struct.opj_tp_index*, %struct.opj_tp_index** %tp_index184, align 8, !tbaa !37
  %160 = bitcast %struct.opj_tp_index* %159 to i8*
  %161 = load i32, i32* %l_num_parts, align 4, !tbaa !5
  %conv185 = zext i32 %161 to i64
  %mul186 = mul i64 %conv185, 24
  %call187 = call i8* @realloc(i8* %160, i64 %mul186) #9
  br label %cond.end.188

cond.end.188:                                     ; preds = %cond.false.178, %cond.true.177
  %cond189 = phi i8* [ null, %cond.true.177 ], [ %call187, %cond.false.178 ]
  %162 = bitcast i8* %cond189 to %struct.opj_tp_index*
  store %struct.opj_tp_index* %162, %struct.opj_tp_index** %new_tp_index, align 8, !tbaa !1
  %163 = load %struct.opj_tp_index*, %struct.opj_tp_index** %new_tp_index, align 8, !tbaa !1
  %tobool190 = icmp ne %struct.opj_tp_index* %163, null
  br i1 %tobool190, label %if.end.205, label %if.then.191

if.then.191:                                      ; preds = %cond.end.188
  %164 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number192 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %164, i32 0, i32 8
  %165 = load i32, i32* %m_current_tile_number192, align 4, !tbaa !11
  %idxprom193 = zext i32 %165 to i64
  %166 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cstr_index194 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %166, i32 0, i32 7
  %167 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index194, align 8, !tbaa !29
  %tile_index195 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %167, i32 0, i32 7
  %168 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index195, align 8, !tbaa !30
  %arrayidx196 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %168, i64 %idxprom193
  %tp_index197 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx196, i32 0, i32 4
  %169 = load %struct.opj_tp_index*, %struct.opj_tp_index** %tp_index197, align 8, !tbaa !37
  %170 = bitcast %struct.opj_tp_index* %169 to i8*
  call void @free(i8* %170) #9
  %171 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number198 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %171, i32 0, i32 8
  %172 = load i32, i32* %m_current_tile_number198, align 4, !tbaa !11
  %idxprom199 = zext i32 %172 to i64
  %173 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cstr_index200 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %173, i32 0, i32 7
  %174 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index200, align 8, !tbaa !29
  %tile_index201 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %174, i32 0, i32 7
  %175 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index201, align 8, !tbaa !30
  %arrayidx202 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %175, i64 %idxprom199
  %tp_index203 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx202, i32 0, i32 4
  store %struct.opj_tp_index* null, %struct.opj_tp_index** %tp_index203, align 8, !tbaa !37
  %176 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call204 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %176, i32 1, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.91, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.205:                                       ; preds = %cond.end.188
  %177 = load %struct.opj_tp_index*, %struct.opj_tp_index** %new_tp_index, align 8, !tbaa !1
  %178 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number206 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %178, i32 0, i32 8
  %179 = load i32, i32* %m_current_tile_number206, align 4, !tbaa !11
  %idxprom207 = zext i32 %179 to i64
  %180 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cstr_index208 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %180, i32 0, i32 7
  %181 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index208, align 8, !tbaa !29
  %tile_index209 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %181, i32 0, i32 7
  %182 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index209, align 8, !tbaa !30
  %arrayidx210 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %182, i64 %idxprom207
  %tp_index211 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx210, i32 0, i32 4
  store %struct.opj_tp_index* %177, %struct.opj_tp_index** %tp_index211, align 8, !tbaa !37
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.205, %if.then.191
  %183 = bitcast %struct.opj_tp_index** %new_tp_index to i8*
  call void @llvm.lifetime.end(i64 8, i8* %183) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.346 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.212

if.end.212:                                       ; preds = %cleanup.cont, %cond.end.165
  br label %if.end.344

if.else.213:                                      ; preds = %cond.end.122
  %184 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number214 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %184, i32 0, i32 8
  %185 = load i32, i32* %m_current_tile_number214, align 4, !tbaa !11
  %idxprom215 = zext i32 %185 to i64
  %186 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cstr_index216 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %186, i32 0, i32 7
  %187 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index216, align 8, !tbaa !29
  %tile_index217 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %187, i32 0, i32 7
  %188 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index217, align 8, !tbaa !30
  %arrayidx218 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %188, i64 %idxprom215
  %tp_index219 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx218, i32 0, i32 4
  %189 = load %struct.opj_tp_index*, %struct.opj_tp_index** %tp_index219, align 8, !tbaa !37
  %tobool220 = icmp ne %struct.opj_tp_index* %189, null
  br i1 %tobool220, label %if.end.265, label %if.then.221

if.then.221:                                      ; preds = %if.else.213
  %190 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number222 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %190, i32 0, i32 8
  %191 = load i32, i32* %m_current_tile_number222, align 4, !tbaa !11
  %idxprom223 = zext i32 %191 to i64
  %192 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cstr_index224 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %192, i32 0, i32 7
  %193 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index224, align 8, !tbaa !29
  %tile_index225 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %193, i32 0, i32 7
  %194 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index225, align 8, !tbaa !30
  %arrayidx226 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %194, i64 %idxprom223
  %current_nb_tps227 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx226, i32 0, i32 2
  store i32 10, i32* %current_nb_tps227, align 4, !tbaa !36
  %195 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number228 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %195, i32 0, i32 8
  %196 = load i32, i32* %m_current_tile_number228, align 4, !tbaa !11
  %idxprom229 = zext i32 %196 to i64
  %197 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cstr_index230 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %197, i32 0, i32 7
  %198 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index230, align 8, !tbaa !29
  %tile_index231 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %198, i32 0, i32 7
  %199 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index231, align 8, !tbaa !30
  %arrayidx232 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %199, i64 %idxprom229
  %current_nb_tps233 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx232, i32 0, i32 2
  %200 = load i32, i32* %current_nb_tps233, align 4, !tbaa !36
  %conv234 = zext i32 %200 to i64
  %cmp235 = icmp ne i64 %conv234, 0
  br i1 %cmp235, label %land.lhs.true.237, label %cond.false.248

land.lhs.true.237:                                ; preds = %if.then.221
  %201 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number238 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %201, i32 0, i32 8
  %202 = load i32, i32* %m_current_tile_number238, align 4, !tbaa !11
  %idxprom239 = zext i32 %202 to i64
  %203 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cstr_index240 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %203, i32 0, i32 7
  %204 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index240, align 8, !tbaa !29
  %tile_index241 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %204, i32 0, i32 7
  %205 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index241, align 8, !tbaa !30
  %arrayidx242 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %205, i64 %idxprom239
  %current_nb_tps243 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx242, i32 0, i32 2
  %206 = load i32, i32* %current_nb_tps243, align 4, !tbaa !36
  %conv244 = zext i32 %206 to i64
  %cmp245 = icmp uge i64 %conv244, 768614336404564640
  br i1 %cmp245, label %cond.true.247, label %cond.false.248

cond.true.247:                                    ; preds = %land.lhs.true.237
  br label %cond.end.257

cond.false.248:                                   ; preds = %land.lhs.true.237, %if.then.221
  %207 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number249 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %207, i32 0, i32 8
  %208 = load i32, i32* %m_current_tile_number249, align 4, !tbaa !11
  %idxprom250 = zext i32 %208 to i64
  %209 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cstr_index251 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %209, i32 0, i32 7
  %210 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index251, align 8, !tbaa !29
  %tile_index252 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %210, i32 0, i32 7
  %211 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index252, align 8, !tbaa !30
  %arrayidx253 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %211, i64 %idxprom250
  %current_nb_tps254 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx253, i32 0, i32 2
  %212 = load i32, i32* %current_nb_tps254, align 4, !tbaa !36
  %conv255 = zext i32 %212 to i64
  %call256 = call noalias i8* @calloc(i64 %conv255, i64 24) #9
  br label %cond.end.257

cond.end.257:                                     ; preds = %cond.false.248, %cond.true.247
  %cond258 = phi i8* [ null, %cond.true.247 ], [ %call256, %cond.false.248 ]
  %213 = bitcast i8* %cond258 to %struct.opj_tp_index*
  %214 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number259 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %214, i32 0, i32 8
  %215 = load i32, i32* %m_current_tile_number259, align 4, !tbaa !11
  %idxprom260 = zext i32 %215 to i64
  %216 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cstr_index261 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %216, i32 0, i32 7
  %217 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index261, align 8, !tbaa !29
  %tile_index262 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %217, i32 0, i32 7
  %218 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index262, align 8, !tbaa !30
  %arrayidx263 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %218, i64 %idxprom260
  %tp_index264 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx263, i32 0, i32 4
  store %struct.opj_tp_index* %213, %struct.opj_tp_index** %tp_index264, align 8, !tbaa !37
  br label %if.end.265

if.end.265:                                       ; preds = %cond.end.257, %if.else.213
  %219 = load i32, i32* %l_current_part, align 4, !tbaa !5
  %220 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number266 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %220, i32 0, i32 8
  %221 = load i32, i32* %m_current_tile_number266, align 4, !tbaa !11
  %idxprom267 = zext i32 %221 to i64
  %222 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cstr_index268 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %222, i32 0, i32 7
  %223 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index268, align 8, !tbaa !29
  %tile_index269 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %223, i32 0, i32 7
  %224 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index269, align 8, !tbaa !30
  %arrayidx270 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %224, i64 %idxprom267
  %current_nb_tps271 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx270, i32 0, i32 2
  %225 = load i32, i32* %current_nb_tps271, align 4, !tbaa !36
  %cmp272 = icmp uge i32 %219, %225
  br i1 %cmp272, label %if.then.274, label %if.end.343

if.then.274:                                      ; preds = %if.end.265
  %226 = bitcast %struct.opj_tp_index** %new_tp_index275 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %226) #1
  %227 = load i32, i32* %l_current_part, align 4, !tbaa !5
  %add276 = add i32 %227, 1
  %228 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number277 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %228, i32 0, i32 8
  %229 = load i32, i32* %m_current_tile_number277, align 4, !tbaa !11
  %idxprom278 = zext i32 %229 to i64
  %230 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cstr_index279 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %230, i32 0, i32 7
  %231 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index279, align 8, !tbaa !29
  %tile_index280 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %231, i32 0, i32 7
  %232 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index280, align 8, !tbaa !30
  %arrayidx281 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %232, i64 %idxprom278
  %current_nb_tps282 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx281, i32 0, i32 2
  store i32 %add276, i32* %current_nb_tps282, align 4, !tbaa !36
  %233 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number283 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %233, i32 0, i32 8
  %234 = load i32, i32* %m_current_tile_number283, align 4, !tbaa !11
  %idxprom284 = zext i32 %234 to i64
  %235 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cstr_index285 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %235, i32 0, i32 7
  %236 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index285, align 8, !tbaa !29
  %tile_index286 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %236, i32 0, i32 7
  %237 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index286, align 8, !tbaa !30
  %arrayidx287 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %237, i64 %idxprom284
  %current_nb_tps288 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx287, i32 0, i32 2
  %238 = load i32, i32* %current_nb_tps288, align 4, !tbaa !36
  %conv289 = zext i32 %238 to i64
  %mul290 = mul i64 %conv289, 24
  %cmp291 = icmp uge i64 %mul290, -256
  br i1 %cmp291, label %cond.true.293, label %cond.false.294

cond.true.293:                                    ; preds = %if.then.274
  br label %cond.end.310

cond.false.294:                                   ; preds = %if.then.274
  %239 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number295 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %239, i32 0, i32 8
  %240 = load i32, i32* %m_current_tile_number295, align 4, !tbaa !11
  %idxprom296 = zext i32 %240 to i64
  %241 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cstr_index297 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %241, i32 0, i32 7
  %242 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index297, align 8, !tbaa !29
  %tile_index298 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %242, i32 0, i32 7
  %243 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index298, align 8, !tbaa !30
  %arrayidx299 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %243, i64 %idxprom296
  %tp_index300 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx299, i32 0, i32 4
  %244 = load %struct.opj_tp_index*, %struct.opj_tp_index** %tp_index300, align 8, !tbaa !37
  %245 = bitcast %struct.opj_tp_index* %244 to i8*
  %246 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number301 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %246, i32 0, i32 8
  %247 = load i32, i32* %m_current_tile_number301, align 4, !tbaa !11
  %idxprom302 = zext i32 %247 to i64
  %248 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cstr_index303 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %248, i32 0, i32 7
  %249 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index303, align 8, !tbaa !29
  %tile_index304 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %249, i32 0, i32 7
  %250 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index304, align 8, !tbaa !30
  %arrayidx305 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %250, i64 %idxprom302
  %current_nb_tps306 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx305, i32 0, i32 2
  %251 = load i32, i32* %current_nb_tps306, align 4, !tbaa !36
  %conv307 = zext i32 %251 to i64
  %mul308 = mul i64 %conv307, 24
  %call309 = call i8* @realloc(i8* %245, i64 %mul308) #9
  br label %cond.end.310

cond.end.310:                                     ; preds = %cond.false.294, %cond.true.293
  %cond311 = phi i8* [ null, %cond.true.293 ], [ %call309, %cond.false.294 ]
  %252 = bitcast i8* %cond311 to %struct.opj_tp_index*
  store %struct.opj_tp_index* %252, %struct.opj_tp_index** %new_tp_index275, align 8, !tbaa !1
  %253 = load %struct.opj_tp_index*, %struct.opj_tp_index** %new_tp_index275, align 8, !tbaa !1
  %tobool312 = icmp ne %struct.opj_tp_index* %253, null
  br i1 %tobool312, label %if.end.333, label %if.then.313

if.then.313:                                      ; preds = %cond.end.310
  %254 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number314 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %254, i32 0, i32 8
  %255 = load i32, i32* %m_current_tile_number314, align 4, !tbaa !11
  %idxprom315 = zext i32 %255 to i64
  %256 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cstr_index316 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %256, i32 0, i32 7
  %257 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index316, align 8, !tbaa !29
  %tile_index317 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %257, i32 0, i32 7
  %258 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index317, align 8, !tbaa !30
  %arrayidx318 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %258, i64 %idxprom315
  %tp_index319 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx318, i32 0, i32 4
  %259 = load %struct.opj_tp_index*, %struct.opj_tp_index** %tp_index319, align 8, !tbaa !37
  %260 = bitcast %struct.opj_tp_index* %259 to i8*
  call void @free(i8* %260) #9
  %261 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number320 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %261, i32 0, i32 8
  %262 = load i32, i32* %m_current_tile_number320, align 4, !tbaa !11
  %idxprom321 = zext i32 %262 to i64
  %263 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cstr_index322 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %263, i32 0, i32 7
  %264 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index322, align 8, !tbaa !29
  %tile_index323 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %264, i32 0, i32 7
  %265 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index323, align 8, !tbaa !30
  %arrayidx324 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %265, i64 %idxprom321
  %tp_index325 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx324, i32 0, i32 4
  store %struct.opj_tp_index* null, %struct.opj_tp_index** %tp_index325, align 8, !tbaa !37
  %266 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number326 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %266, i32 0, i32 8
  %267 = load i32, i32* %m_current_tile_number326, align 4, !tbaa !11
  %idxprom327 = zext i32 %267 to i64
  %268 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cstr_index328 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %268, i32 0, i32 7
  %269 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index328, align 8, !tbaa !29
  %tile_index329 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %269, i32 0, i32 7
  %270 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index329, align 8, !tbaa !30
  %arrayidx330 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %270, i64 %idxprom327
  %current_nb_tps331 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx330, i32 0, i32 2
  store i32 0, i32* %current_nb_tps331, align 4, !tbaa !36
  %271 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call332 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %271, i32 1, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.91, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.340

if.end.333:                                       ; preds = %cond.end.310
  %272 = load %struct.opj_tp_index*, %struct.opj_tp_index** %new_tp_index275, align 8, !tbaa !1
  %273 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number334 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %273, i32 0, i32 8
  %274 = load i32, i32* %m_current_tile_number334, align 4, !tbaa !11
  %idxprom335 = zext i32 %274 to i64
  %275 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cstr_index336 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %275, i32 0, i32 7
  %276 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index336, align 8, !tbaa !29
  %tile_index337 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %276, i32 0, i32 7
  %277 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index337, align 8, !tbaa !30
  %arrayidx338 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %277, i64 %idxprom335
  %tp_index339 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx338, i32 0, i32 4
  store %struct.opj_tp_index* %272, %struct.opj_tp_index** %tp_index339, align 8, !tbaa !37
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.340

cleanup.340:                                      ; preds = %if.end.333, %if.then.313
  %278 = bitcast %struct.opj_tp_index** %new_tp_index275 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %278) #1
  %cleanup.dest.341 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.341, label %cleanup.346 [
    i32 0, label %cleanup.cont.342
  ]

cleanup.cont.342:                                 ; preds = %cleanup.340
  br label %if.end.343

if.end.343:                                       ; preds = %cleanup.cont.342, %if.end.265
  br label %if.end.344

if.end.344:                                       ; preds = %if.end.343, %if.end.212
  br label %if.end.345

if.end.345:                                       ; preds = %if.end.344, %if.end.114
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.346

cleanup.346:                                      ; preds = %if.end.345, %cleanup.340, %cleanup, %if.else, %if.then.12, %if.then
  %279 = bitcast i32* %l_tile_y to i8*
  call void @llvm.lifetime.end(i64 4, i8* %279) #1
  %280 = bitcast i32* %l_tile_x to i8*
  call void @llvm.lifetime.end(i64 4, i8* %280) #1
  %281 = bitcast i32* %l_current_part to i8*
  call void @llvm.lifetime.end(i64 4, i8* %281) #1
  %282 = bitcast i32* %l_num_parts to i8*
  call void @llvm.lifetime.end(i64 4, i8* %282) #1
  %283 = bitcast i32* %l_tot_len to i8*
  call void @llvm.lifetime.end(i64 4, i8* %283) #1
  %284 = bitcast %struct.opj_tcp** %l_tcp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %284) #1
  %285 = bitcast %struct.opj_cp** %l_cp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %285) #1
  %286 = load i32, i32* %retval
  ret i32 %286
}

; Function Attrs: nounwind uwtable
define internal i32 @opj_j2k_read_cod(%struct.opj_j2k* %p_j2k, i8* %p_header_data, i32 %p_header_size, %struct.opj_event_mgr* %p_manager) #0 {
entry:
  %retval = alloca i32, align 4
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %p_header_data.addr = alloca i8*, align 8
  %p_header_size.addr = alloca i32, align 4
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  %i = alloca i32, align 4
  %l_tmp = alloca i32, align 4
  %l_cp = alloca %struct.opj_cp*, align 8
  %l_tcp = alloca %struct.opj_tcp*, align 8
  %l_image = alloca %struct.opj_image*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store i8* %p_header_data, i8** %p_header_data.addr, align 8, !tbaa !1
  store i32 %p_header_size, i32* %p_header_size.addr, align 4, !tbaa !5
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %0 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast i32* %l_tmp to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = bitcast %struct.opj_cp** %l_cp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #1
  store %struct.opj_cp* null, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %3 = bitcast %struct.opj_tcp** %l_tcp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #1
  store %struct.opj_tcp* null, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %4 = bitcast %struct.opj_image** %l_image to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4) #1
  store %struct.opj_image* null, %struct.opj_image** %l_image, align 8, !tbaa !1
  %5 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %cmp = icmp ne i8* %5, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.52, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 2366, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @__PRETTY_FUNCTION__.opj_j2k_read_cod, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %6, %cond.true
  %7 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cmp1 = icmp ne %struct.opj_j2k* %7, null
  br i1 %cmp1, label %cond.true.2, label %cond.false.3

cond.true.2:                                      ; preds = %cond.end
  br label %cond.end.4

cond.false.3:                                     ; preds = %cond.end
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 2367, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @__PRETTY_FUNCTION__.opj_j2k_read_cod, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.4

cond.end.4:                                       ; preds = %8, %cond.true.2
  %9 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %cmp5 = icmp ne %struct.opj_event_mgr* %9, null
  br i1 %cmp5, label %cond.true.6, label %cond.false.7

cond.true.6:                                      ; preds = %cond.end.4
  br label %cond.end.8

cond.false.7:                                     ; preds = %cond.end.4
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 2368, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @__PRETTY_FUNCTION__.opj_j2k_read_cod, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.8

cond.end.8:                                       ; preds = %10, %cond.true.6
  %11 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_private_image = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %11, i32 0, i32 2
  %12 = load %struct.opj_image*, %struct.opj_image** %m_private_image, align 8, !tbaa !38
  store %struct.opj_image* %12, %struct.opj_image** %l_image, align 8, !tbaa !1
  %13 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %13, i32 0, i32 4
  store %struct.opj_cp* %m_cp, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %14 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %14, i32 0, i32 1
  %m_decoder = bitcast %union.anon* %m_specific_param to %struct.opj_j2k_dec*
  %m_state = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder, i32 0, i32 0
  %15 = load i32, i32* %m_state, align 4, !tbaa !23
  %cmp9 = icmp eq i32 %15, 16
  br i1 %cmp9, label %cond.true.10, label %cond.false.11

cond.true.10:                                     ; preds = %cond.end.8
  %16 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %16, i32 0, i32 8
  %17 = load i32, i32* %m_current_tile_number, align 4, !tbaa !11
  %idxprom = zext i32 %17 to i64
  %18 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %tcps = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %18, i32 0, i32 17
  %19 = load %struct.opj_tcp*, %struct.opj_tcp** %tcps, align 8, !tbaa !16
  %arrayidx = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %19, i64 %idxprom
  br label %cond.end.14

cond.false.11:                                    ; preds = %cond.end.8
  %20 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param12 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %20, i32 0, i32 1
  %m_decoder13 = bitcast %union.anon* %m_specific_param12 to %struct.opj_j2k_dec*
  %m_default_tcp = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder13, i32 0, i32 1
  %21 = load %struct.opj_tcp*, %struct.opj_tcp** %m_default_tcp, align 8, !tbaa !39
  br label %cond.end.14

cond.end.14:                                      ; preds = %cond.false.11, %cond.true.10
  %cond = phi %struct.opj_tcp* [ %arrayidx, %cond.true.10 ], [ %21, %cond.false.11 ]
  store %struct.opj_tcp* %cond, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %22 = load i32, i32* %p_header_size.addr, align 4, !tbaa !5
  %cmp15 = icmp ult i32 %22, 5
  br i1 %cmp15, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end.14
  %23 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %23, i32 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.62, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %cond.end.14
  %24 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %25 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %csty = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %25, i32 0, i32 0
  call void @opj_read_bytes_LE(i8* %24, i32* %csty, i32 1) #7
  %26 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds i8, i8* %26, i32 1
  store i8* %incdec.ptr, i8** %p_header_data.addr, align 8, !tbaa !1
  %27 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  call void @opj_read_bytes_LE(i8* %27, i32* %l_tmp, i32 1) #7
  %28 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %incdec.ptr16 = getelementptr inbounds i8, i8* %28, i32 1
  store i8* %incdec.ptr16, i8** %p_header_data.addr, align 8, !tbaa !1
  %29 = load i32, i32* %l_tmp, align 4, !tbaa !5
  %30 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %prg = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %30, i32 0, i32 1
  store i32 %29, i32* %prg, align 4, !tbaa !40
  %31 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %32 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %numlayers = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %32, i32 0, i32 2
  call void @opj_read_bytes_LE(i8* %31, i32* %numlayers, i32 2) #7
  %33 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %add.ptr = getelementptr inbounds i8, i8* %33, i64 2
  store i8* %add.ptr, i8** %p_header_data.addr, align 8, !tbaa !1
  %34 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %m_specific_param17 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %34, i32 0, i32 18
  %m_dec = bitcast %union.anon.0* %m_specific_param17 to %struct.opj_decoding_param*
  %m_layer = getelementptr inbounds %struct.opj_decoding_param, %struct.opj_decoding_param* %m_dec, i32 0, i32 1
  %35 = load i32, i32* %m_layer, align 4, !tbaa !41
  %tobool = icmp ne i32 %35, 0
  br i1 %tobool, label %if.then.18, label %if.else

if.then.18:                                       ; preds = %if.end
  %36 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %m_specific_param19 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %36, i32 0, i32 18
  %m_dec20 = bitcast %union.anon.0* %m_specific_param19 to %struct.opj_decoding_param*
  %m_layer21 = getelementptr inbounds %struct.opj_decoding_param, %struct.opj_decoding_param* %m_dec20, i32 0, i32 1
  %37 = load i32, i32* %m_layer21, align 4, !tbaa !41
  %38 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %num_layers_to_decode = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %38, i32 0, i32 3
  store i32 %37, i32* %num_layers_to_decode, align 4, !tbaa !43
  br label %if.end.24

if.else:                                          ; preds = %if.end
  %39 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %numlayers22 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %39, i32 0, i32 2
  %40 = load i32, i32* %numlayers22, align 4, !tbaa !44
  %41 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %num_layers_to_decode23 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %41, i32 0, i32 3
  store i32 %40, i32* %num_layers_to_decode23, align 4, !tbaa !43
  br label %if.end.24

if.end.24:                                        ; preds = %if.else, %if.then.18
  %42 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %43 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %mct = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %43, i32 0, i32 4
  call void @opj_read_bytes_LE(i8* %42, i32* %mct, i32 1) #7
  %44 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %incdec.ptr25 = getelementptr inbounds i8, i8* %44, i32 1
  store i8* %incdec.ptr25, i8** %p_header_data.addr, align 8, !tbaa !1
  %45 = load i32, i32* %p_header_size.addr, align 4, !tbaa !5
  %sub = sub i32 %45, 5
  store i32 %sub, i32* %p_header_size.addr, align 4, !tbaa !5
  store i32 0, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.24
  %46 = load i32, i32* %i, align 4, !tbaa !5
  %47 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %numcomps = getelementptr inbounds %struct.opj_image, %struct.opj_image* %47, i32 0, i32 4
  %48 = load i32, i32* %numcomps, align 4, !tbaa !45
  %cmp26 = icmp ult i32 %46, %48
  br i1 %cmp26, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %49 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %csty27 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %49, i32 0, i32 0
  %50 = load i32, i32* %csty27, align 4, !tbaa !47
  %and = and i32 %50, 1
  %51 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom28 = zext i32 %51 to i64
  %52 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %tccps = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %52, i32 0, i32 13
  %53 = load %struct.opj_tccp*, %struct.opj_tccp** %tccps, align 8, !tbaa !48
  %arrayidx29 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %53, i64 %idxprom28
  %csty30 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %arrayidx29, i32 0, i32 0
  store i32 %and, i32* %csty30, align 4, !tbaa !49
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %54 = load i32, i32* %i, align 4, !tbaa !5
  %inc = add i32 %54, 1
  store i32 %inc, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %55 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %56 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %57 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call31 = call i32 @opj_j2k_read_SPCod_SPCoc(%struct.opj_j2k* %55, i32 0, i8* %56, i32* %p_header_size.addr, %struct.opj_event_mgr* %57) #7
  %tobool32 = icmp ne i32 %call31, 0
  br i1 %tobool32, label %if.end.35, label %if.then.33

if.then.33:                                       ; preds = %for.end
  %58 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call34 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %58, i32 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.62, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.35:                                        ; preds = %for.end
  %59 = load i32, i32* %p_header_size.addr, align 4, !tbaa !5
  %cmp36 = icmp ne i32 %59, 0
  br i1 %cmp36, label %if.then.37, label %if.end.39

if.then.37:                                       ; preds = %if.end.35
  %60 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call38 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %60, i32 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.62, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.39:                                        ; preds = %if.end.35
  %61 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  call void @opj_j2k_copy_tile_component_parameters(%struct.opj_j2k* %61) #7
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.39, %if.then.37, %if.then.33, %if.then
  %62 = bitcast %struct.opj_image** %l_image to i8*
  call void @llvm.lifetime.end(i64 8, i8* %62) #1
  %63 = bitcast %struct.opj_tcp** %l_tcp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %63) #1
  %64 = bitcast %struct.opj_cp** %l_cp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %64) #1
  %65 = bitcast i32* %l_tmp to i8*
  call void @llvm.lifetime.end(i64 4, i8* %65) #1
  %66 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %66) #1
  %67 = load i32, i32* %retval
  ret i32 %67
}

; Function Attrs: nounwind uwtable
define internal i32 @opj_j2k_read_coc(%struct.opj_j2k* %p_j2k, i8* %p_header_data, i32 %p_header_size, %struct.opj_event_mgr* %p_manager) #0 {
entry:
  %retval = alloca i32, align 4
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %p_header_data.addr = alloca i8*, align 8
  %p_header_size.addr = alloca i32, align 4
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  %l_cp = alloca %struct.opj_cp*, align 8
  %l_tcp = alloca %struct.opj_tcp*, align 8
  %l_image = alloca %struct.opj_image*, align 8
  %l_comp_room = alloca i32, align 4
  %l_comp_no = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store i8* %p_header_data, i8** %p_header_data.addr, align 8, !tbaa !1
  store i32 %p_header_size, i32* %p_header_size.addr, align 4, !tbaa !5
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %0 = bitcast %struct.opj_cp** %l_cp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  store %struct.opj_cp* null, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %1 = bitcast %struct.opj_tcp** %l_tcp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #1
  store %struct.opj_tcp* null, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %2 = bitcast %struct.opj_image** %l_image to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #1
  store %struct.opj_image* null, %struct.opj_image** %l_image, align 8, !tbaa !1
  %3 = bitcast i32* %l_comp_room to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #1
  %4 = bitcast i32* %l_comp_no to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #1
  %5 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %cmp = icmp ne i8* %5, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.52, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 2568, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @__PRETTY_FUNCTION__.opj_j2k_read_coc, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %6, %cond.true
  %7 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cmp1 = icmp ne %struct.opj_j2k* %7, null
  br i1 %cmp1, label %cond.true.2, label %cond.false.3

cond.true.2:                                      ; preds = %cond.end
  br label %cond.end.4

cond.false.3:                                     ; preds = %cond.end
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 2569, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @__PRETTY_FUNCTION__.opj_j2k_read_coc, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.4

cond.end.4:                                       ; preds = %8, %cond.true.2
  %9 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %cmp5 = icmp ne %struct.opj_event_mgr* %9, null
  br i1 %cmp5, label %cond.true.6, label %cond.false.7

cond.true.6:                                      ; preds = %cond.end.4
  br label %cond.end.8

cond.false.7:                                     ; preds = %cond.end.4
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 2570, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @__PRETTY_FUNCTION__.opj_j2k_read_coc, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.8

cond.end.8:                                       ; preds = %10, %cond.true.6
  %11 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %11, i32 0, i32 4
  store %struct.opj_cp* %m_cp, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %12 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %12, i32 0, i32 1
  %m_decoder = bitcast %union.anon* %m_specific_param to %struct.opj_j2k_dec*
  %m_state = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder, i32 0, i32 0
  %13 = load i32, i32* %m_state, align 4, !tbaa !23
  %cmp9 = icmp eq i32 %13, 16
  br i1 %cmp9, label %cond.true.10, label %cond.false.11

cond.true.10:                                     ; preds = %cond.end.8
  %14 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %14, i32 0, i32 8
  %15 = load i32, i32* %m_current_tile_number, align 4, !tbaa !11
  %idxprom = zext i32 %15 to i64
  %16 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %tcps = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %16, i32 0, i32 17
  %17 = load %struct.opj_tcp*, %struct.opj_tcp** %tcps, align 8, !tbaa !16
  %arrayidx = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %17, i64 %idxprom
  br label %cond.end.14

cond.false.11:                                    ; preds = %cond.end.8
  %18 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param12 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %18, i32 0, i32 1
  %m_decoder13 = bitcast %union.anon* %m_specific_param12 to %struct.opj_j2k_dec*
  %m_default_tcp = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder13, i32 0, i32 1
  %19 = load %struct.opj_tcp*, %struct.opj_tcp** %m_default_tcp, align 8, !tbaa !39
  br label %cond.end.14

cond.end.14:                                      ; preds = %cond.false.11, %cond.true.10
  %cond = phi %struct.opj_tcp* [ %arrayidx, %cond.true.10 ], [ %19, %cond.false.11 ]
  store %struct.opj_tcp* %cond, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %20 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_private_image = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %20, i32 0, i32 2
  %21 = load %struct.opj_image*, %struct.opj_image** %m_private_image, align 8, !tbaa !38
  store %struct.opj_image* %21, %struct.opj_image** %l_image, align 8, !tbaa !1
  %22 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %numcomps = getelementptr inbounds %struct.opj_image, %struct.opj_image* %22, i32 0, i32 4
  %23 = load i32, i32* %numcomps, align 4, !tbaa !45
  %cmp15 = icmp ule i32 %23, 256
  %cond16 = select i1 %cmp15, i32 1, i32 2
  store i32 %cond16, i32* %l_comp_room, align 4, !tbaa !5
  %24 = load i32, i32* %p_header_size.addr, align 4, !tbaa !5
  %25 = load i32, i32* %l_comp_room, align 4, !tbaa !5
  %add = add i32 %25, 1
  %cmp17 = icmp ult i32 %24, %add
  br i1 %cmp17, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end.14
  %26 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %26, i32 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.67, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %cond.end.14
  %27 = load i32, i32* %l_comp_room, align 4, !tbaa !5
  %add18 = add i32 %27, 1
  %28 = load i32, i32* %p_header_size.addr, align 4, !tbaa !5
  %sub = sub i32 %28, %add18
  store i32 %sub, i32* %p_header_size.addr, align 4, !tbaa !5
  %29 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %30 = load i32, i32* %l_comp_room, align 4, !tbaa !5
  call void @opj_read_bytes_LE(i8* %29, i32* %l_comp_no, i32 %30) #7
  %31 = load i32, i32* %l_comp_room, align 4, !tbaa !5
  %32 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %idx.ext = zext i32 %31 to i64
  %add.ptr = getelementptr inbounds i8, i8* %32, i64 %idx.ext
  store i8* %add.ptr, i8** %p_header_data.addr, align 8, !tbaa !1
  %33 = load i32, i32* %l_comp_no, align 4, !tbaa !5
  %34 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %numcomps19 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %34, i32 0, i32 4
  %35 = load i32, i32* %numcomps19, align 4, !tbaa !45
  %cmp20 = icmp uge i32 %33, %35
  br i1 %cmp20, label %if.then.21, label %if.end.23

if.then.21:                                       ; preds = %if.end
  %36 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call22 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %36, i32 1, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.68, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.23:                                        ; preds = %if.end
  %37 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %38 = load i32, i32* %l_comp_no, align 4, !tbaa !5
  %idxprom24 = zext i32 %38 to i64
  %39 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %tccps = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %39, i32 0, i32 13
  %40 = load %struct.opj_tccp*, %struct.opj_tccp** %tccps, align 8, !tbaa !48
  %arrayidx25 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %40, i64 %idxprom24
  %csty = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %arrayidx25, i32 0, i32 0
  call void @opj_read_bytes_LE(i8* %37, i32* %csty, i32 1) #7
  %41 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds i8, i8* %41, i32 1
  store i8* %incdec.ptr, i8** %p_header_data.addr, align 8, !tbaa !1
  %42 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %43 = load i32, i32* %l_comp_no, align 4, !tbaa !5
  %44 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %45 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call26 = call i32 @opj_j2k_read_SPCod_SPCoc(%struct.opj_j2k* %42, i32 %43, i8* %44, i32* %p_header_size.addr, %struct.opj_event_mgr* %45) #7
  %tobool = icmp ne i32 %call26, 0
  br i1 %tobool, label %if.end.29, label %if.then.27

if.then.27:                                       ; preds = %if.end.23
  %46 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call28 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %46, i32 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.67, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.29:                                        ; preds = %if.end.23
  %47 = load i32, i32* %p_header_size.addr, align 4, !tbaa !5
  %cmp30 = icmp ne i32 %47, 0
  br i1 %cmp30, label %if.then.31, label %if.end.33

if.then.31:                                       ; preds = %if.end.29
  %48 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call32 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %48, i32 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.67, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.33:                                        ; preds = %if.end.29
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.33, %if.then.31, %if.then.27, %if.then.21, %if.then
  %49 = bitcast i32* %l_comp_no to i8*
  call void @llvm.lifetime.end(i64 4, i8* %49) #1
  %50 = bitcast i32* %l_comp_room to i8*
  call void @llvm.lifetime.end(i64 4, i8* %50) #1
  %51 = bitcast %struct.opj_image** %l_image to i8*
  call void @llvm.lifetime.end(i64 8, i8* %51) #1
  %52 = bitcast %struct.opj_tcp** %l_tcp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %52) #1
  %53 = bitcast %struct.opj_cp** %l_cp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %53) #1
  %54 = load i32, i32* %retval
  ret i32 %54
}

; Function Attrs: nounwind uwtable
define internal i32 @opj_j2k_read_rgn(%struct.opj_j2k* %p_j2k, i8* %p_header_data, i32 %p_header_size, %struct.opj_event_mgr* %p_manager) #0 {
entry:
  %retval = alloca i32, align 4
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %p_header_data.addr = alloca i8*, align 8
  %p_header_size.addr = alloca i32, align 4
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  %l_nb_comp = alloca i32, align 4
  %l_image = alloca %struct.opj_image*, align 8
  %l_cp = alloca %struct.opj_cp*, align 8
  %l_tcp = alloca %struct.opj_tcp*, align 8
  %l_comp_room = alloca i32, align 4
  %l_comp_no = alloca i32, align 4
  %l_roi_sty = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store i8* %p_header_data, i8** %p_header_data.addr, align 8, !tbaa !1
  store i32 %p_header_size, i32* %p_header_size.addr, align 4, !tbaa !5
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %0 = bitcast i32* %l_nb_comp to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast %struct.opj_image** %l_image to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #1
  store %struct.opj_image* null, %struct.opj_image** %l_image, align 8, !tbaa !1
  %2 = bitcast %struct.opj_cp** %l_cp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #1
  store %struct.opj_cp* null, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %3 = bitcast %struct.opj_tcp** %l_tcp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #1
  store %struct.opj_tcp* null, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %4 = bitcast i32* %l_comp_room to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #1
  %5 = bitcast i32* %l_comp_no to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #1
  %6 = bitcast i32* %l_roi_sty to i8*
  call void @llvm.lifetime.start(i64 4, i8* %6) #1
  %7 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %cmp = icmp ne i8* %7, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.52, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 4419, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @__PRETTY_FUNCTION__.opj_j2k_read_rgn, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %8, %cond.true
  %9 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cmp1 = icmp ne %struct.opj_j2k* %9, null
  br i1 %cmp1, label %cond.true.2, label %cond.false.3

cond.true.2:                                      ; preds = %cond.end
  br label %cond.end.4

cond.false.3:                                     ; preds = %cond.end
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 4420, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @__PRETTY_FUNCTION__.opj_j2k_read_rgn, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.4

cond.end.4:                                       ; preds = %10, %cond.true.2
  %11 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %cmp5 = icmp ne %struct.opj_event_mgr* %11, null
  br i1 %cmp5, label %cond.true.6, label %cond.false.7

cond.true.6:                                      ; preds = %cond.end.4
  br label %cond.end.8

cond.false.7:                                     ; preds = %cond.end.4
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 4421, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @__PRETTY_FUNCTION__.opj_j2k_read_rgn, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.8

cond.end.8:                                       ; preds = %12, %cond.true.6
  %13 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_private_image = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %13, i32 0, i32 2
  %14 = load %struct.opj_image*, %struct.opj_image** %m_private_image, align 8, !tbaa !38
  store %struct.opj_image* %14, %struct.opj_image** %l_image, align 8, !tbaa !1
  %15 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %numcomps = getelementptr inbounds %struct.opj_image, %struct.opj_image* %15, i32 0, i32 4
  %16 = load i32, i32* %numcomps, align 4, !tbaa !45
  store i32 %16, i32* %l_nb_comp, align 4, !tbaa !5
  %17 = load i32, i32* %l_nb_comp, align 4, !tbaa !5
  %cmp9 = icmp ule i32 %17, 256
  br i1 %cmp9, label %if.then, label %if.else

if.then:                                          ; preds = %cond.end.8
  store i32 1, i32* %l_comp_room, align 4, !tbaa !5
  br label %if.end

if.else:                                          ; preds = %cond.end.8
  store i32 2, i32* %l_comp_room, align 4, !tbaa !5
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %18 = load i32, i32* %p_header_size.addr, align 4, !tbaa !5
  %19 = load i32, i32* %l_comp_room, align 4, !tbaa !5
  %add = add i32 2, %19
  %cmp10 = icmp ne i32 %18, %add
  br i1 %cmp10, label %if.then.11, label %if.end.12

if.then.11:                                       ; preds = %if.end
  %20 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %20, i32 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.99, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.12:                                        ; preds = %if.end
  %21 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %21, i32 0, i32 4
  store %struct.opj_cp* %m_cp, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %22 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %22, i32 0, i32 1
  %m_decoder = bitcast %union.anon* %m_specific_param to %struct.opj_j2k_dec*
  %m_state = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder, i32 0, i32 0
  %23 = load i32, i32* %m_state, align 4, !tbaa !23
  %cmp13 = icmp eq i32 %23, 16
  br i1 %cmp13, label %cond.true.14, label %cond.false.15

cond.true.14:                                     ; preds = %if.end.12
  %24 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %24, i32 0, i32 8
  %25 = load i32, i32* %m_current_tile_number, align 4, !tbaa !11
  %idxprom = zext i32 %25 to i64
  %26 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %tcps = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %26, i32 0, i32 17
  %27 = load %struct.opj_tcp*, %struct.opj_tcp** %tcps, align 8, !tbaa !16
  %arrayidx = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %27, i64 %idxprom
  br label %cond.end.18

cond.false.15:                                    ; preds = %if.end.12
  %28 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param16 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %28, i32 0, i32 1
  %m_decoder17 = bitcast %union.anon* %m_specific_param16 to %struct.opj_j2k_dec*
  %m_default_tcp = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder17, i32 0, i32 1
  %29 = load %struct.opj_tcp*, %struct.opj_tcp** %m_default_tcp, align 8, !tbaa !39
  br label %cond.end.18

cond.end.18:                                      ; preds = %cond.false.15, %cond.true.14
  %cond = phi %struct.opj_tcp* [ %arrayidx, %cond.true.14 ], [ %29, %cond.false.15 ]
  store %struct.opj_tcp* %cond, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %30 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %31 = load i32, i32* %l_comp_room, align 4, !tbaa !5
  call void @opj_read_bytes_LE(i8* %30, i32* %l_comp_no, i32 %31) #7
  %32 = load i32, i32* %l_comp_room, align 4, !tbaa !5
  %33 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %idx.ext = zext i32 %32 to i64
  %add.ptr = getelementptr inbounds i8, i8* %33, i64 %idx.ext
  store i8* %add.ptr, i8** %p_header_data.addr, align 8, !tbaa !1
  %34 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  call void @opj_read_bytes_LE(i8* %34, i32* %l_roi_sty, i32 1) #7
  %35 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds i8, i8* %35, i32 1
  store i8* %incdec.ptr, i8** %p_header_data.addr, align 8, !tbaa !1
  %36 = load i32, i32* %l_comp_room, align 4, !tbaa !5
  %37 = load i32, i32* %l_nb_comp, align 4, !tbaa !5
  %cmp19 = icmp uge i32 %36, %37
  br i1 %cmp19, label %if.then.20, label %if.end.22

if.then.20:                                       ; preds = %cond.end.18
  %38 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %39 = load i32, i32* %l_comp_room, align 4, !tbaa !5
  %40 = load i32, i32* %l_nb_comp, align 4, !tbaa !5
  %call21 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %38, i32 1, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.100, i32 0, i32 0), i32 %39, i32 %40) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.22:                                        ; preds = %cond.end.18
  %41 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %42 = load i32, i32* %l_comp_no, align 4, !tbaa !5
  %idxprom23 = zext i32 %42 to i64
  %43 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %tccps = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %43, i32 0, i32 13
  %44 = load %struct.opj_tccp*, %struct.opj_tccp** %tccps, align 8, !tbaa !48
  %arrayidx24 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %44, i64 %idxprom23
  %roishift = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %arrayidx24, i32 0, i32 9
  call void @opj_read_bytes_LE(i8* %41, i32* %roishift, i32 1) #7
  %45 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %incdec.ptr25 = getelementptr inbounds i8, i8* %45, i32 1
  store i8* %incdec.ptr25, i8** %p_header_data.addr, align 8, !tbaa !1
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.22, %if.then.20, %if.then.11
  %46 = bitcast i32* %l_roi_sty to i8*
  call void @llvm.lifetime.end(i64 4, i8* %46) #1
  %47 = bitcast i32* %l_comp_no to i8*
  call void @llvm.lifetime.end(i64 4, i8* %47) #1
  %48 = bitcast i32* %l_comp_room to i8*
  call void @llvm.lifetime.end(i64 4, i8* %48) #1
  %49 = bitcast %struct.opj_tcp** %l_tcp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %49) #1
  %50 = bitcast %struct.opj_cp** %l_cp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %50) #1
  %51 = bitcast %struct.opj_image** %l_image to i8*
  call void @llvm.lifetime.end(i64 8, i8* %51) #1
  %52 = bitcast i32* %l_nb_comp to i8*
  call void @llvm.lifetime.end(i64 4, i8* %52) #1
  %53 = load i32, i32* %retval
  ret i32 %53
}

; Function Attrs: nounwind uwtable
define internal i32 @opj_j2k_read_qcd(%struct.opj_j2k* %p_j2k, i8* %p_header_data, i32 %p_header_size, %struct.opj_event_mgr* %p_manager) #0 {
entry:
  %retval = alloca i32, align 4
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %p_header_data.addr = alloca i8*, align 8
  %p_header_size.addr = alloca i32, align 4
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store i8* %p_header_data, i8** %p_header_data.addr, align 8, !tbaa !1
  store i32 %p_header_size, i32* %p_header_size.addr, align 4, !tbaa !5
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %0 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %cmp = icmp ne i8* %0, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.52, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 2679, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @__PRETTY_FUNCTION__.opj_j2k_read_qcd, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %1, %cond.true
  %2 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cmp1 = icmp ne %struct.opj_j2k* %2, null
  br i1 %cmp1, label %cond.true.2, label %cond.false.3

cond.true.2:                                      ; preds = %cond.end
  br label %cond.end.4

cond.false.3:                                     ; preds = %cond.end
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 2680, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @__PRETTY_FUNCTION__.opj_j2k_read_qcd, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.4

cond.end.4:                                       ; preds = %3, %cond.true.2
  %4 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %cmp5 = icmp ne %struct.opj_event_mgr* %4, null
  br i1 %cmp5, label %cond.true.6, label %cond.false.7

cond.true.6:                                      ; preds = %cond.end.4
  br label %cond.end.8

cond.false.7:                                     ; preds = %cond.end.4
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 2681, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @__PRETTY_FUNCTION__.opj_j2k_read_qcd, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.8

cond.end.8:                                       ; preds = %5, %cond.true.6
  %6 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %7 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %8 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call = call i32 @opj_j2k_read_SQcd_SQcc(%struct.opj_j2k* %6, i32 0, i8* %7, i32* %p_header_size.addr, %struct.opj_event_mgr* %8) #7
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %cond.end.8
  %9 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call9 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %9, i32 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.69, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %cond.end.8
  %10 = load i32, i32* %p_header_size.addr, align 4, !tbaa !5
  %cmp10 = icmp ne i32 %10, 0
  br i1 %cmp10, label %if.then.11, label %if.end.13

if.then.11:                                       ; preds = %if.end
  %11 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call12 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %11, i32 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.69, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  br label %return

if.end.13:                                        ; preds = %if.end
  %12 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  call void @opj_j2k_copy_tile_quantization_parameters(%struct.opj_j2k* %12) #7
  store i32 1, i32* %retval
  br label %return

return:                                           ; preds = %if.end.13, %if.then.11, %if.then
  %13 = load i32, i32* %retval
  ret i32 %13
}

; Function Attrs: nounwind uwtable
define internal i32 @opj_j2k_read_qcc(%struct.opj_j2k* %p_j2k, i8* %p_header_data, i32 %p_header_size, %struct.opj_event_mgr* %p_manager) #0 {
entry:
  %retval = alloca i32, align 4
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %p_header_data.addr = alloca i8*, align 8
  %p_header_size.addr = alloca i32, align 4
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  %l_num_comp = alloca i32, align 4
  %l_comp_no = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store i8* %p_header_data, i8** %p_header_data.addr, align 8, !tbaa !1
  store i32 %p_header_size, i32* %p_header_size.addr, align 4, !tbaa !5
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %0 = bitcast i32* %l_num_comp to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast i32* %l_comp_no to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %cmp = icmp ne i8* %2, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.52, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 2807, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @__PRETTY_FUNCTION__.opj_j2k_read_qcc, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %3, %cond.true
  %4 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cmp1 = icmp ne %struct.opj_j2k* %4, null
  br i1 %cmp1, label %cond.true.2, label %cond.false.3

cond.true.2:                                      ; preds = %cond.end
  br label %cond.end.4

cond.false.3:                                     ; preds = %cond.end
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 2808, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @__PRETTY_FUNCTION__.opj_j2k_read_qcc, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.4

cond.end.4:                                       ; preds = %5, %cond.true.2
  %6 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %cmp5 = icmp ne %struct.opj_event_mgr* %6, null
  br i1 %cmp5, label %cond.true.6, label %cond.false.7

cond.true.6:                                      ; preds = %cond.end.4
  br label %cond.end.8

cond.false.7:                                     ; preds = %cond.end.4
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 2809, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @__PRETTY_FUNCTION__.opj_j2k_read_qcc, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.8

cond.end.8:                                       ; preds = %7, %cond.true.6
  %8 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_private_image = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %8, i32 0, i32 2
  %9 = load %struct.opj_image*, %struct.opj_image** %m_private_image, align 8, !tbaa !38
  %numcomps = getelementptr inbounds %struct.opj_image, %struct.opj_image* %9, i32 0, i32 4
  %10 = load i32, i32* %numcomps, align 4, !tbaa !45
  store i32 %10, i32* %l_num_comp, align 4, !tbaa !5
  %11 = load i32, i32* %l_num_comp, align 4, !tbaa !5
  %cmp9 = icmp ule i32 %11, 256
  br i1 %cmp9, label %if.then, label %if.else

if.then:                                          ; preds = %cond.end.8
  %12 = load i32, i32* %p_header_size.addr, align 4, !tbaa !5
  %cmp10 = icmp ult i32 %12, 1
  br i1 %cmp10, label %if.then.11, label %if.end

if.then.11:                                       ; preds = %if.then
  %13 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %13, i32 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.73, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %if.then
  %14 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  call void @opj_read_bytes_LE(i8* %14, i32* %l_comp_no, i32 1) #7
  %15 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr, i8** %p_header_data.addr, align 8, !tbaa !1
  %16 = load i32, i32* %p_header_size.addr, align 4, !tbaa !5
  %dec = add i32 %16, -1
  store i32 %dec, i32* %p_header_size.addr, align 4, !tbaa !5
  br label %if.end.16

if.else:                                          ; preds = %cond.end.8
  %17 = load i32, i32* %p_header_size.addr, align 4, !tbaa !5
  %cmp12 = icmp ult i32 %17, 2
  br i1 %cmp12, label %if.then.13, label %if.end.15

if.then.13:                                       ; preds = %if.else
  %18 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call14 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %18, i32 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.73, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.15:                                        ; preds = %if.else
  %19 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  call void @opj_read_bytes_LE(i8* %19, i32* %l_comp_no, i32 2) #7
  %20 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %add.ptr = getelementptr inbounds i8, i8* %20, i64 2
  store i8* %add.ptr, i8** %p_header_data.addr, align 8, !tbaa !1
  %21 = load i32, i32* %p_header_size.addr, align 4, !tbaa !5
  %sub = sub i32 %21, 2
  store i32 %sub, i32* %p_header_size.addr, align 4, !tbaa !5
  br label %if.end.16

if.end.16:                                        ; preds = %if.end.15, %if.end
  %22 = load i32, i32* %l_comp_no, align 4, !tbaa !5
  %23 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_private_image17 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %23, i32 0, i32 2
  %24 = load %struct.opj_image*, %struct.opj_image** %m_private_image17, align 8, !tbaa !38
  %numcomps18 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %24, i32 0, i32 4
  %25 = load i32, i32* %numcomps18, align 4, !tbaa !45
  %cmp19 = icmp uge i32 %22, %25
  br i1 %cmp19, label %if.then.20, label %if.end.24

if.then.20:                                       ; preds = %if.end.16
  %26 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %27 = load i32, i32* %l_comp_no, align 4, !tbaa !5
  %28 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_private_image21 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %28, i32 0, i32 2
  %29 = load %struct.opj_image*, %struct.opj_image** %m_private_image21, align 8, !tbaa !38
  %numcomps22 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %29, i32 0, i32 4
  %30 = load i32, i32* %numcomps22, align 4, !tbaa !45
  %call23 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %26, i32 1, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.74, i32 0, i32 0), i32 %27, i32 %30) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.24:                                        ; preds = %if.end.16
  %31 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %32 = load i32, i32* %l_comp_no, align 4, !tbaa !5
  %33 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %34 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call25 = call i32 @opj_j2k_read_SQcd_SQcc(%struct.opj_j2k* %31, i32 %32, i8* %33, i32* %p_header_size.addr, %struct.opj_event_mgr* %34) #7
  %tobool = icmp ne i32 %call25, 0
  br i1 %tobool, label %if.end.28, label %if.then.26

if.then.26:                                       ; preds = %if.end.24
  %35 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call27 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %35, i32 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.73, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.28:                                        ; preds = %if.end.24
  %36 = load i32, i32* %p_header_size.addr, align 4, !tbaa !5
  %cmp29 = icmp ne i32 %36, 0
  br i1 %cmp29, label %if.then.30, label %if.end.32

if.then.30:                                       ; preds = %if.end.28
  %37 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call31 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %37, i32 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.73, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.32:                                        ; preds = %if.end.28
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.32, %if.then.30, %if.then.26, %if.then.20, %if.then.13, %if.then.11
  %38 = bitcast i32* %l_comp_no to i8*
  call void @llvm.lifetime.end(i64 4, i8* %38) #1
  %39 = bitcast i32* %l_num_comp to i8*
  call void @llvm.lifetime.end(i64 4, i8* %39) #1
  %40 = load i32, i32* %retval
  ret i32 %40
}

; Function Attrs: nounwind uwtable
define internal i32 @opj_j2k_read_poc(%struct.opj_j2k* %p_j2k, i8* %p_header_data, i32 %p_header_size, %struct.opj_event_mgr* %p_manager) #0 {
entry:
  %retval = alloca i32, align 4
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %p_header_data.addr = alloca i8*, align 8
  %p_header_size.addr = alloca i32, align 4
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  %i = alloca i32, align 4
  %l_nb_comp = alloca i32, align 4
  %l_tmp = alloca i32, align 4
  %l_image = alloca %struct.opj_image*, align 8
  %l_old_poc_nb = alloca i32, align 4
  %l_current_poc_nb = alloca i32, align 4
  %l_current_poc_remaining = alloca i32, align 4
  %l_chunk_size = alloca i32, align 4
  %l_comp_room = alloca i32, align 4
  %l_cp = alloca %struct.opj_cp*, align 8
  %l_tcp = alloca %struct.opj_tcp*, align 8
  %l_current_poc = alloca %struct.opj_poc*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store i8* %p_header_data, i8** %p_header_data.addr, align 8, !tbaa !1
  store i32 %p_header_size, i32* %p_header_size.addr, align 4, !tbaa !5
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %0 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast i32* %l_nb_comp to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = bitcast i32* %l_tmp to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #1
  %3 = bitcast %struct.opj_image** %l_image to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #1
  store %struct.opj_image* null, %struct.opj_image** %l_image, align 8, !tbaa !1
  %4 = bitcast i32* %l_old_poc_nb to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #1
  %5 = bitcast i32* %l_current_poc_nb to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #1
  %6 = bitcast i32* %l_current_poc_remaining to i8*
  call void @llvm.lifetime.start(i64 4, i8* %6) #1
  %7 = bitcast i32* %l_chunk_size to i8*
  call void @llvm.lifetime.start(i64 4, i8* %7) #1
  %8 = bitcast i32* %l_comp_room to i8*
  call void @llvm.lifetime.start(i64 4, i8* %8) #1
  %9 = bitcast %struct.opj_cp** %l_cp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9) #1
  store %struct.opj_cp* null, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %10 = bitcast %struct.opj_tcp** %l_tcp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %10) #1
  store %struct.opj_tcp* null, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %11 = bitcast %struct.opj_poc** %l_current_poc to i8*
  call void @llvm.lifetime.start(i64 8, i8* %11) #1
  store %struct.opj_poc* null, %struct.opj_poc** %l_current_poc, align 8, !tbaa !1
  %12 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %cmp = icmp ne i8* %12, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.52, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 3091, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @__PRETTY_FUNCTION__.opj_j2k_read_poc, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %13, %cond.true
  %14 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cmp1 = icmp ne %struct.opj_j2k* %14, null
  br i1 %cmp1, label %cond.true.2, label %cond.false.3

cond.true.2:                                      ; preds = %cond.end
  br label %cond.end.4

cond.false.3:                                     ; preds = %cond.end
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 3092, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @__PRETTY_FUNCTION__.opj_j2k_read_poc, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.4

cond.end.4:                                       ; preds = %15, %cond.true.2
  %16 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %cmp5 = icmp ne %struct.opj_event_mgr* %16, null
  br i1 %cmp5, label %cond.true.6, label %cond.false.7

cond.true.6:                                      ; preds = %cond.end.4
  br label %cond.end.8

cond.false.7:                                     ; preds = %cond.end.4
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 3093, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @__PRETTY_FUNCTION__.opj_j2k_read_poc, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.8

cond.end.8:                                       ; preds = %17, %cond.true.6
  %18 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_private_image = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %18, i32 0, i32 2
  %19 = load %struct.opj_image*, %struct.opj_image** %m_private_image, align 8, !tbaa !38
  store %struct.opj_image* %19, %struct.opj_image** %l_image, align 8, !tbaa !1
  %20 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %numcomps = getelementptr inbounds %struct.opj_image, %struct.opj_image* %20, i32 0, i32 4
  %21 = load i32, i32* %numcomps, align 4, !tbaa !45
  store i32 %21, i32* %l_nb_comp, align 4, !tbaa !5
  %22 = load i32, i32* %l_nb_comp, align 4, !tbaa !5
  %cmp9 = icmp ule i32 %22, 256
  br i1 %cmp9, label %if.then, label %if.else

if.then:                                          ; preds = %cond.end.8
  store i32 1, i32* %l_comp_room, align 4, !tbaa !5
  br label %if.end

if.else:                                          ; preds = %cond.end.8
  store i32 2, i32* %l_comp_room, align 4, !tbaa !5
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %23 = load i32, i32* %l_comp_room, align 4, !tbaa !5
  %mul = mul i32 2, %23
  %add = add i32 5, %mul
  store i32 %add, i32* %l_chunk_size, align 4, !tbaa !5
  %24 = load i32, i32* %p_header_size.addr, align 4, !tbaa !5
  %25 = load i32, i32* %l_chunk_size, align 4, !tbaa !5
  %div = udiv i32 %24, %25
  store i32 %div, i32* %l_current_poc_nb, align 4, !tbaa !5
  %26 = load i32, i32* %p_header_size.addr, align 4, !tbaa !5
  %27 = load i32, i32* %l_chunk_size, align 4, !tbaa !5
  %rem = urem i32 %26, %27
  store i32 %rem, i32* %l_current_poc_remaining, align 4, !tbaa !5
  %28 = load i32, i32* %l_current_poc_nb, align 4, !tbaa !5
  %cmp10 = icmp ule i32 %28, 0
  br i1 %cmp10, label %if.then.12, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %29 = load i32, i32* %l_current_poc_remaining, align 4, !tbaa !5
  %cmp11 = icmp ne i32 %29, 0
  br i1 %cmp11, label %if.then.12, label %if.end.13

if.then.12:                                       ; preds = %lor.lhs.false, %if.end
  %30 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %30, i32 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.75, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.13:                                        ; preds = %lor.lhs.false
  %31 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %31, i32 0, i32 4
  store %struct.opj_cp* %m_cp, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %32 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %32, i32 0, i32 1
  %m_decoder = bitcast %union.anon* %m_specific_param to %struct.opj_j2k_dec*
  %m_state = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder, i32 0, i32 0
  %33 = load i32, i32* %m_state, align 4, !tbaa !23
  %cmp14 = icmp eq i32 %33, 16
  br i1 %cmp14, label %cond.true.15, label %cond.false.16

cond.true.15:                                     ; preds = %if.end.13
  %34 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %34, i32 0, i32 8
  %35 = load i32, i32* %m_current_tile_number, align 4, !tbaa !11
  %idxprom = zext i32 %35 to i64
  %36 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %tcps = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %36, i32 0, i32 17
  %37 = load %struct.opj_tcp*, %struct.opj_tcp** %tcps, align 8, !tbaa !16
  %arrayidx = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %37, i64 %idxprom
  br label %cond.end.19

cond.false.16:                                    ; preds = %if.end.13
  %38 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param17 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %38, i32 0, i32 1
  %m_decoder18 = bitcast %union.anon* %m_specific_param17 to %struct.opj_j2k_dec*
  %m_default_tcp = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder18, i32 0, i32 1
  %39 = load %struct.opj_tcp*, %struct.opj_tcp** %m_default_tcp, align 8, !tbaa !39
  br label %cond.end.19

cond.end.19:                                      ; preds = %cond.false.16, %cond.true.15
  %cond = phi %struct.opj_tcp* [ %arrayidx, %cond.true.15 ], [ %39, %cond.false.16 ]
  store %struct.opj_tcp* %cond, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %40 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %POC = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %40, i32 0, i32 26
  %bf.load = load i8, i8* %POC, align 8
  %bf.lshr = lshr i8 %bf.load, 1
  %bf.clear = and i8 %bf.lshr, 1
  %bf.cast = zext i8 %bf.clear to i32
  %tobool = icmp ne i32 %bf.cast, 0
  br i1 %tobool, label %cond.true.20, label %cond.false.22

cond.true.20:                                     ; preds = %cond.end.19
  %41 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %numpocs = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %41, i32 0, i32 6
  %42 = load i32, i32* %numpocs, align 4, !tbaa !51
  %add21 = add i32 %42, 1
  br label %cond.end.23

cond.false.22:                                    ; preds = %cond.end.19
  br label %cond.end.23

cond.end.23:                                      ; preds = %cond.false.22, %cond.true.20
  %cond24 = phi i32 [ %add21, %cond.true.20 ], [ 0, %cond.false.22 ]
  store i32 %cond24, i32* %l_old_poc_nb, align 4, !tbaa !5
  %43 = load i32, i32* %l_old_poc_nb, align 4, !tbaa !5
  %44 = load i32, i32* %l_current_poc_nb, align 4, !tbaa !5
  %add25 = add i32 %44, %43
  store i32 %add25, i32* %l_current_poc_nb, align 4, !tbaa !5
  %45 = load i32, i32* %l_current_poc_nb, align 4, !tbaa !5
  %cmp26 = icmp ult i32 %45, 32
  br i1 %cmp26, label %cond.true.27, label %cond.false.28

cond.true.27:                                     ; preds = %cond.end.23
  br label %cond.end.29

cond.false.28:                                    ; preds = %cond.end.23
  call void @__assert_fail(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.76, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 3119, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @__PRETTY_FUNCTION__.opj_j2k_read_poc, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.29

cond.end.29:                                      ; preds = %46, %cond.true.27
  %47 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %POC30 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %47, i32 0, i32 26
  %bf.load31 = load i8, i8* %POC30, align 8
  %bf.clear32 = and i8 %bf.load31, -3
  %bf.set = or i8 %bf.clear32, 2
  store i8 %bf.set, i8* %POC30, align 8
  %48 = load i32, i32* %l_old_poc_nb, align 4, !tbaa !5
  %idxprom33 = zext i32 %48 to i64
  %49 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %pocs = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %49, i32 0, i32 7
  %arrayidx34 = getelementptr inbounds [32 x %struct.opj_poc], [32 x %struct.opj_poc]* %pocs, i32 0, i64 %idxprom33
  store %struct.opj_poc* %arrayidx34, %struct.opj_poc** %l_current_poc, align 8, !tbaa !1
  %50 = load i32, i32* %l_old_poc_nb, align 4, !tbaa !5
  store i32 %50, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %cond.end.29
  %51 = load i32, i32* %i, align 4, !tbaa !5
  %52 = load i32, i32* %l_current_poc_nb, align 4, !tbaa !5
  %cmp35 = icmp ult i32 %51, %52
  br i1 %cmp35, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %53 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %54 = load %struct.opj_poc*, %struct.opj_poc** %l_current_poc, align 8, !tbaa !1
  %resno0 = getelementptr inbounds %struct.opj_poc, %struct.opj_poc* %54, i32 0, i32 0
  call void @opj_read_bytes_LE(i8* %53, i32* %resno0, i32 1) #7
  %55 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds i8, i8* %55, i32 1
  store i8* %incdec.ptr, i8** %p_header_data.addr, align 8, !tbaa !1
  %56 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %57 = load %struct.opj_poc*, %struct.opj_poc** %l_current_poc, align 8, !tbaa !1
  %compno0 = getelementptr inbounds %struct.opj_poc, %struct.opj_poc* %57, i32 0, i32 1
  %58 = load i32, i32* %l_comp_room, align 4, !tbaa !5
  call void @opj_read_bytes_LE(i8* %56, i32* %compno0, i32 %58) #7
  %59 = load i32, i32* %l_comp_room, align 4, !tbaa !5
  %60 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %idx.ext = zext i32 %59 to i64
  %add.ptr = getelementptr inbounds i8, i8* %60, i64 %idx.ext
  store i8* %add.ptr, i8** %p_header_data.addr, align 8, !tbaa !1
  %61 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %62 = load %struct.opj_poc*, %struct.opj_poc** %l_current_poc, align 8, !tbaa !1
  %layno1 = getelementptr inbounds %struct.opj_poc, %struct.opj_poc* %62, i32 0, i32 2
  call void @opj_read_bytes_LE(i8* %61, i32* %layno1, i32 2) #7
  %63 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %add.ptr36 = getelementptr inbounds i8, i8* %63, i64 2
  store i8* %add.ptr36, i8** %p_header_data.addr, align 8, !tbaa !1
  %64 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %65 = load %struct.opj_poc*, %struct.opj_poc** %l_current_poc, align 8, !tbaa !1
  %resno1 = getelementptr inbounds %struct.opj_poc, %struct.opj_poc* %65, i32 0, i32 3
  call void @opj_read_bytes_LE(i8* %64, i32* %resno1, i32 1) #7
  %66 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %incdec.ptr37 = getelementptr inbounds i8, i8* %66, i32 1
  store i8* %incdec.ptr37, i8** %p_header_data.addr, align 8, !tbaa !1
  %67 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %68 = load %struct.opj_poc*, %struct.opj_poc** %l_current_poc, align 8, !tbaa !1
  %compno1 = getelementptr inbounds %struct.opj_poc, %struct.opj_poc* %68, i32 0, i32 4
  %69 = load i32, i32* %l_comp_room, align 4, !tbaa !5
  call void @opj_read_bytes_LE(i8* %67, i32* %compno1, i32 %69) #7
  %70 = load i32, i32* %l_comp_room, align 4, !tbaa !5
  %71 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %idx.ext38 = zext i32 %70 to i64
  %add.ptr39 = getelementptr inbounds i8, i8* %71, i64 %idx.ext38
  store i8* %add.ptr39, i8** %p_header_data.addr, align 8, !tbaa !1
  %72 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  call void @opj_read_bytes_LE(i8* %72, i32* %l_tmp, i32 1) #7
  %73 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %incdec.ptr40 = getelementptr inbounds i8, i8* %73, i32 1
  store i8* %incdec.ptr40, i8** %p_header_data.addr, align 8, !tbaa !1
  %74 = load i32, i32* %l_tmp, align 4, !tbaa !5
  %75 = load %struct.opj_poc*, %struct.opj_poc** %l_current_poc, align 8, !tbaa !1
  %prg = getelementptr inbounds %struct.opj_poc, %struct.opj_poc* %75, i32 0, i32 9
  store i32 %74, i32* %prg, align 4, !tbaa !52
  %76 = load %struct.opj_poc*, %struct.opj_poc** %l_current_poc, align 8, !tbaa !1
  %compno141 = getelementptr inbounds %struct.opj_poc, %struct.opj_poc* %76, i32 0, i32 4
  %77 = load i32, i32* %compno141, align 4, !tbaa !54
  %78 = load i32, i32* %l_nb_comp, align 4, !tbaa !5
  %call42 = call i32 @opj_uint_min(i32 %77, i32 %78) #7
  %79 = load %struct.opj_poc*, %struct.opj_poc** %l_current_poc, align 8, !tbaa !1
  %compno143 = getelementptr inbounds %struct.opj_poc, %struct.opj_poc* %79, i32 0, i32 4
  store i32 %call42, i32* %compno143, align 4, !tbaa !54
  %80 = load %struct.opj_poc*, %struct.opj_poc** %l_current_poc, align 8, !tbaa !1
  %incdec.ptr44 = getelementptr inbounds %struct.opj_poc, %struct.opj_poc* %80, i32 1
  store %struct.opj_poc* %incdec.ptr44, %struct.opj_poc** %l_current_poc, align 8, !tbaa !1
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %81 = load i32, i32* %i, align 4, !tbaa !5
  %inc = add i32 %81, 1
  store i32 %inc, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %82 = load i32, i32* %l_current_poc_nb, align 4, !tbaa !5
  %sub = sub i32 %82, 1
  %83 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %numpocs45 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %83, i32 0, i32 6
  store i32 %sub, i32* %numpocs45, align 4, !tbaa !51
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %for.end, %if.then.12
  %84 = bitcast %struct.opj_poc** %l_current_poc to i8*
  call void @llvm.lifetime.end(i64 8, i8* %84) #1
  %85 = bitcast %struct.opj_tcp** %l_tcp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %85) #1
  %86 = bitcast %struct.opj_cp** %l_cp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %86) #1
  %87 = bitcast i32* %l_comp_room to i8*
  call void @llvm.lifetime.end(i64 4, i8* %87) #1
  %88 = bitcast i32* %l_chunk_size to i8*
  call void @llvm.lifetime.end(i64 4, i8* %88) #1
  %89 = bitcast i32* %l_current_poc_remaining to i8*
  call void @llvm.lifetime.end(i64 4, i8* %89) #1
  %90 = bitcast i32* %l_current_poc_nb to i8*
  call void @llvm.lifetime.end(i64 4, i8* %90) #1
  %91 = bitcast i32* %l_old_poc_nb to i8*
  call void @llvm.lifetime.end(i64 4, i8* %91) #1
  %92 = bitcast %struct.opj_image** %l_image to i8*
  call void @llvm.lifetime.end(i64 8, i8* %92) #1
  %93 = bitcast i32* %l_tmp to i8*
  call void @llvm.lifetime.end(i64 4, i8* %93) #1
  %94 = bitcast i32* %l_nb_comp to i8*
  call void @llvm.lifetime.end(i64 4, i8* %94) #1
  %95 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %95) #1
  %96 = load i32, i32* %retval
  ret i32 %96
}

; Function Attrs: nounwind uwtable
define internal i32 @opj_j2k_read_siz(%struct.opj_j2k* %p_j2k, i8* %p_header_data, i32 %p_header_size, %struct.opj_event_mgr* %p_manager) #0 {
entry:
  %retval = alloca i32, align 4
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %p_header_data.addr = alloca i8*, align 8
  %p_header_size.addr = alloca i32, align 4
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  %i = alloca i32, align 4
  %l_nb_comp = alloca i32, align 4
  %l_nb_comp_remain = alloca i32, align 4
  %l_remaining_size = alloca i32, align 4
  %l_nb_tiles = alloca i32, align 4
  %l_tmp = alloca i32, align 4
  %l_image = alloca %struct.opj_image*, align 8
  %l_cp = alloca %struct.opj_cp*, align 8
  %l_img_comp = alloca %struct.opj_image_comp*, align 8
  %l_current_tile_param = alloca %struct.opj_tcp*, align 8
  %cleanup.dest.slot = alloca i32
  %tmp = alloca i32, align 4
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store i8* %p_header_data, i8** %p_header_data.addr, align 8, !tbaa !1
  store i32 %p_header_size, i32* %p_header_size.addr, align 4, !tbaa !5
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %0 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast i32* %l_nb_comp to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = bitcast i32* %l_nb_comp_remain to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #1
  %3 = bitcast i32* %l_remaining_size to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #1
  %4 = bitcast i32* %l_nb_tiles to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #1
  %5 = bitcast i32* %l_tmp to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #1
  %6 = bitcast %struct.opj_image** %l_image to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6) #1
  store %struct.opj_image* null, %struct.opj_image** %l_image, align 8, !tbaa !1
  %7 = bitcast %struct.opj_cp** %l_cp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7) #1
  store %struct.opj_cp* null, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %8 = bitcast %struct.opj_image_comp** %l_img_comp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8) #1
  store %struct.opj_image_comp* null, %struct.opj_image_comp** %l_img_comp, align 8, !tbaa !1
  %9 = bitcast %struct.opj_tcp** %l_current_tile_param to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9) #1
  store %struct.opj_tcp* null, %struct.opj_tcp** %l_current_tile_param, align 8, !tbaa !1
  %10 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cmp = icmp ne %struct.opj_j2k* %10, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 1881, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @__PRETTY_FUNCTION__.opj_j2k_read_siz, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %11, %cond.true
  %12 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %cmp1 = icmp ne %struct.opj_event_mgr* %12, null
  br i1 %cmp1, label %cond.true.2, label %cond.false.3

cond.true.2:                                      ; preds = %cond.end
  br label %cond.end.4

cond.false.3:                                     ; preds = %cond.end
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 1882, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @__PRETTY_FUNCTION__.opj_j2k_read_siz, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.4

cond.end.4:                                       ; preds = %13, %cond.true.2
  %14 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %cmp5 = icmp ne i8* %14, null
  br i1 %cmp5, label %cond.true.6, label %cond.false.7

cond.true.6:                                      ; preds = %cond.end.4
  br label %cond.end.8

cond.false.7:                                     ; preds = %cond.end.4
  call void @__assert_fail(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.52, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 1883, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @__PRETTY_FUNCTION__.opj_j2k_read_siz, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.8

cond.end.8:                                       ; preds = %15, %cond.true.6
  %16 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_private_image = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %16, i32 0, i32 2
  %17 = load %struct.opj_image*, %struct.opj_image** %m_private_image, align 8, !tbaa !38
  store %struct.opj_image* %17, %struct.opj_image** %l_image, align 8, !tbaa !1
  %18 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %18, i32 0, i32 4
  store %struct.opj_cp* %m_cp, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %19 = load i32, i32* %p_header_size.addr, align 4, !tbaa !5
  %cmp9 = icmp ult i32 %19, 36
  br i1 %cmp9, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end.8
  %20 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %20, i32 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.53, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.372

if.end:                                           ; preds = %cond.end.8
  %21 = load i32, i32* %p_header_size.addr, align 4, !tbaa !5
  %sub = sub i32 %21, 36
  store i32 %sub, i32* %l_remaining_size, align 4, !tbaa !5
  %22 = load i32, i32* %l_remaining_size, align 4, !tbaa !5
  %div = udiv i32 %22, 3
  store i32 %div, i32* %l_nb_comp, align 4, !tbaa !5
  %23 = load i32, i32* %l_remaining_size, align 4, !tbaa !5
  %rem = urem i32 %23, 3
  store i32 %rem, i32* %l_nb_comp_remain, align 4, !tbaa !5
  %24 = load i32, i32* %l_nb_comp_remain, align 4, !tbaa !5
  %cmp10 = icmp ne i32 %24, 0
  br i1 %cmp10, label %if.then.11, label %if.end.13

if.then.11:                                       ; preds = %if.end
  %25 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call12 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %25, i32 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.53, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.372

if.end.13:                                        ; preds = %if.end
  %26 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  call void @opj_read_bytes_LE(i8* %26, i32* %l_tmp, i32 2) #7
  %27 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %add.ptr = getelementptr inbounds i8, i8* %27, i64 2
  store i8* %add.ptr, i8** %p_header_data.addr, align 8, !tbaa !1
  %28 = load i32, i32* %l_tmp, align 4, !tbaa !5
  %29 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %rsiz = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %29, i32 0, i32 0
  store i32 %28, i32* %rsiz, align 4, !tbaa !55
  %30 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %31 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %x1 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %31, i32 0, i32 2
  call void @opj_read_bytes_LE(i8* %30, i32* %x1, i32 4) #7
  %32 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %add.ptr14 = getelementptr inbounds i8, i8* %32, i64 4
  store i8* %add.ptr14, i8** %p_header_data.addr, align 8, !tbaa !1
  %33 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %34 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %y1 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %34, i32 0, i32 3
  call void @opj_read_bytes_LE(i8* %33, i32* %y1, i32 4) #7
  %35 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %add.ptr15 = getelementptr inbounds i8, i8* %35, i64 4
  store i8* %add.ptr15, i8** %p_header_data.addr, align 8, !tbaa !1
  %36 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %37 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %x0 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %37, i32 0, i32 0
  call void @opj_read_bytes_LE(i8* %36, i32* %x0, i32 4) #7
  %38 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %add.ptr16 = getelementptr inbounds i8, i8* %38, i64 4
  store i8* %add.ptr16, i8** %p_header_data.addr, align 8, !tbaa !1
  %39 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %40 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %y0 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %40, i32 0, i32 1
  call void @opj_read_bytes_LE(i8* %39, i32* %y0, i32 4) #7
  %41 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %add.ptr17 = getelementptr inbounds i8, i8* %41, i64 4
  store i8* %add.ptr17, i8** %p_header_data.addr, align 8, !tbaa !1
  %42 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %43 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %tdx = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %43, i32 0, i32 3
  call void @opj_read_bytes_LE(i8* %42, i32* %tdx, i32 4) #7
  %44 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %add.ptr18 = getelementptr inbounds i8, i8* %44, i64 4
  store i8* %add.ptr18, i8** %p_header_data.addr, align 8, !tbaa !1
  %45 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %46 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %tdy = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %46, i32 0, i32 4
  call void @opj_read_bytes_LE(i8* %45, i32* %tdy, i32 4) #7
  %47 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %add.ptr19 = getelementptr inbounds i8, i8* %47, i64 4
  store i8* %add.ptr19, i8** %p_header_data.addr, align 8, !tbaa !1
  %48 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %49 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %tx0 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %49, i32 0, i32 1
  call void @opj_read_bytes_LE(i8* %48, i32* %tx0, i32 4) #7
  %50 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %add.ptr20 = getelementptr inbounds i8, i8* %50, i64 4
  store i8* %add.ptr20, i8** %p_header_data.addr, align 8, !tbaa !1
  %51 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %52 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %ty0 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %52, i32 0, i32 2
  call void @opj_read_bytes_LE(i8* %51, i32* %ty0, i32 4) #7
  %53 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %add.ptr21 = getelementptr inbounds i8, i8* %53, i64 4
  store i8* %add.ptr21, i8** %p_header_data.addr, align 8, !tbaa !1
  %54 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  call void @opj_read_bytes_LE(i8* %54, i32* %l_tmp, i32 2) #7
  %55 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %add.ptr22 = getelementptr inbounds i8, i8* %55, i64 2
  store i8* %add.ptr22, i8** %p_header_data.addr, align 8, !tbaa !1
  %56 = load i32, i32* %l_tmp, align 4, !tbaa !5
  %cmp23 = icmp ult i32 %56, 16385
  br i1 %cmp23, label %if.then.24, label %if.else

if.then.24:                                       ; preds = %if.end.13
  %57 = load i32, i32* %l_tmp, align 4, !tbaa !5
  %conv = trunc i32 %57 to i16
  %conv25 = zext i16 %conv to i32
  %58 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %numcomps = getelementptr inbounds %struct.opj_image, %struct.opj_image* %58, i32 0, i32 4
  store i32 %conv25, i32* %numcomps, align 4, !tbaa !45
  br label %if.end.27

if.else:                                          ; preds = %if.end.13
  %59 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %60 = load i32, i32* %l_tmp, align 4, !tbaa !5
  %call26 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %59, i32 1, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.54, i32 0, i32 0), i32 %60) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.372

if.end.27:                                        ; preds = %if.then.24
  %61 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %numcomps28 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %61, i32 0, i32 4
  %62 = load i32, i32* %numcomps28, align 4, !tbaa !45
  %63 = load i32, i32* %l_nb_comp, align 4, !tbaa !5
  %cmp29 = icmp ne i32 %62, %63
  br i1 %cmp29, label %if.then.31, label %if.end.34

if.then.31:                                       ; preds = %if.end.27
  %64 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %65 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %numcomps32 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %65, i32 0, i32 4
  %66 = load i32, i32* %numcomps32, align 4, !tbaa !45
  %67 = load i32, i32* %l_nb_comp, align 4, !tbaa !5
  %call33 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %64, i32 1, i8* getelementptr inbounds ([114 x i8], [114 x i8]* @.str.55, i32 0, i32 0), i32 %66, i32 %67) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.372

if.end.34:                                        ; preds = %if.end.27
  %68 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %x035 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %68, i32 0, i32 0
  %69 = load i32, i32* %x035, align 4, !tbaa !56
  %70 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %x136 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %70, i32 0, i32 2
  %71 = load i32, i32* %x136, align 4, !tbaa !57
  %cmp37 = icmp ugt i32 %69, %71
  br i1 %cmp37, label %if.then.43, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end.34
  %72 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %y039 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %72, i32 0, i32 1
  %73 = load i32, i32* %y039, align 4, !tbaa !58
  %74 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %y140 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %74, i32 0, i32 3
  %75 = load i32, i32* %y140, align 4, !tbaa !59
  %cmp41 = icmp ugt i32 %73, %75
  br i1 %cmp41, label %if.then.43, label %if.end.51

if.then.43:                                       ; preds = %lor.lhs.false, %if.end.34
  %76 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %77 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %x144 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %77, i32 0, i32 2
  %78 = load i32, i32* %x144, align 4, !tbaa !57
  %79 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %x045 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %79, i32 0, i32 0
  %80 = load i32, i32* %x045, align 4, !tbaa !56
  %sub46 = sub i32 %78, %80
  %81 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %y147 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %81, i32 0, i32 3
  %82 = load i32, i32* %y147, align 4, !tbaa !59
  %83 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %y048 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %83, i32 0, i32 1
  %84 = load i32, i32* %y048, align 4, !tbaa !58
  %sub49 = sub i32 %82, %84
  %call50 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %76, i32 1, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.56, i32 0, i32 0), i32 %sub46, i32 %sub49) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.372

if.end.51:                                        ; preds = %lor.lhs.false
  %85 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %tdx52 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %85, i32 0, i32 3
  %86 = load i32, i32* %tdx52, align 4, !tbaa !60
  %87 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %tdy53 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %87, i32 0, i32 4
  %88 = load i32, i32* %tdy53, align 4, !tbaa !61
  %mul = mul i32 %86, %88
  %tobool = icmp ne i32 %mul, 0
  br i1 %tobool, label %if.end.58, label %if.then.54

if.then.54:                                       ; preds = %if.end.51
  %89 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %90 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %tdx55 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %90, i32 0, i32 3
  %91 = load i32, i32* %tdx55, align 4, !tbaa !60
  %92 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %tdy56 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %92, i32 0, i32 4
  %93 = load i32, i32* %tdy56, align 4, !tbaa !61
  %call57 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %89, i32 1, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.57, i32 0, i32 0), i32 %91, i32 %93) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.372

if.end.58:                                        ; preds = %if.end.51
  %94 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %x159 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %94, i32 0, i32 2
  %95 = load i32, i32* %x159, align 4, !tbaa !57
  %conv60 = zext i32 %95 to i64
  %96 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %y161 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %96, i32 0, i32 3
  %97 = load i32, i32* %y161, align 4, !tbaa !59
  %conv62 = zext i32 %97 to i64
  %mul63 = mul i64 %conv60, %conv62
  %98 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %x164 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %98, i32 0, i32 2
  %99 = load i32, i32* %x164, align 4, !tbaa !57
  %100 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %y165 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %100, i32 0, i32 3
  %101 = load i32, i32* %y165, align 4, !tbaa !59
  %mul66 = mul i32 %99, %101
  %conv67 = zext i32 %mul66 to i64
  %cmp68 = icmp ne i64 %mul63, %conv67
  br i1 %cmp68, label %if.then.70, label %if.end.74

if.then.70:                                       ; preds = %if.end.58
  %102 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %103 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %x171 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %103, i32 0, i32 2
  %104 = load i32, i32* %x171, align 4, !tbaa !57
  %105 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %y172 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %105, i32 0, i32 3
  %106 = load i32, i32* %y172, align 4, !tbaa !59
  %call73 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %102, i32 1, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.58, i32 0, i32 0), i32 %104, i32 %106) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.372

if.end.74:                                        ; preds = %if.end.58
  %107 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %numcomps75 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %107, i32 0, i32 4
  %108 = load i32, i32* %numcomps75, align 4, !tbaa !45
  %conv76 = zext i32 %108 to i64
  %cmp77 = icmp ne i64 %conv76, 0
  br i1 %cmp77, label %land.lhs.true, label %cond.false.84

land.lhs.true:                                    ; preds = %if.end.74
  %109 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %numcomps79 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %109, i32 0, i32 4
  %110 = load i32, i32* %numcomps79, align 4, !tbaa !45
  %conv80 = zext i32 %110 to i64
  %cmp81 = icmp uge i64 %conv80, 288230376151711740
  br i1 %cmp81, label %cond.true.83, label %cond.false.84

cond.true.83:                                     ; preds = %land.lhs.true
  br label %cond.end.88

cond.false.84:                                    ; preds = %land.lhs.true, %if.end.74
  %111 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %numcomps85 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %111, i32 0, i32 4
  %112 = load i32, i32* %numcomps85, align 4, !tbaa !45
  %conv86 = zext i32 %112 to i64
  %call87 = call noalias i8* @calloc(i64 %conv86, i64 64) #9
  br label %cond.end.88

cond.end.88:                                      ; preds = %cond.false.84, %cond.true.83
  %cond = phi i8* [ null, %cond.true.83 ], [ %call87, %cond.false.84 ]
  %113 = bitcast i8* %cond to %struct.opj_image_comp*
  %114 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %comps = getelementptr inbounds %struct.opj_image, %struct.opj_image* %114, i32 0, i32 6
  store %struct.opj_image_comp* %113, %struct.opj_image_comp** %comps, align 8, !tbaa !62
  %115 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %comps89 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %115, i32 0, i32 6
  %116 = load %struct.opj_image_comp*, %struct.opj_image_comp** %comps89, align 8, !tbaa !62
  %cmp90 = icmp eq %struct.opj_image_comp* %116, null
  br i1 %cmp90, label %if.then.92, label %if.end.95

if.then.92:                                       ; preds = %cond.end.88
  %117 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %numcomps93 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %117, i32 0, i32 4
  store i32 0, i32* %numcomps93, align 4, !tbaa !45
  %118 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call94 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %118, i32 1, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.59, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.372

if.end.95:                                        ; preds = %cond.end.88
  %119 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %comps96 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %119, i32 0, i32 6
  %120 = load %struct.opj_image_comp*, %struct.opj_image_comp** %comps96, align 8, !tbaa !62
  %121 = bitcast %struct.opj_image_comp* %120 to i8*
  %122 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %numcomps97 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %122, i32 0, i32 4
  %123 = load i32, i32* %numcomps97, align 4, !tbaa !45
  %conv98 = zext i32 %123 to i64
  %mul99 = mul i64 %conv98, 64
  %call100 = call i8* @memset(i8* %121, i32 0, i64 %mul99) #9
  %124 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %comps101 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %124, i32 0, i32 6
  %125 = load %struct.opj_image_comp*, %struct.opj_image_comp** %comps101, align 8, !tbaa !62
  store %struct.opj_image_comp* %125, %struct.opj_image_comp** %l_img_comp, align 8, !tbaa !1
  store i32 0, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.95
  %126 = load i32, i32* %i, align 4, !tbaa !5
  %127 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %numcomps102 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %127, i32 0, i32 4
  %128 = load i32, i32* %numcomps102, align 4, !tbaa !45
  %cmp103 = icmp ult i32 %126, %128
  br i1 %cmp103, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %129 = bitcast i32* %tmp to i8*
  call void @llvm.lifetime.start(i64 4, i8* %129) #1
  %130 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  call void @opj_read_bytes_LE(i8* %130, i32* %tmp, i32 1) #7
  %131 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds i8, i8* %131, i32 1
  store i8* %incdec.ptr, i8** %p_header_data.addr, align 8, !tbaa !1
  %132 = load i32, i32* %tmp, align 4, !tbaa !5
  %and = and i32 %132, 127
  %add = add i32 %and, 1
  %133 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp, align 8, !tbaa !1
  %prec = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %133, i32 0, i32 6
  store i32 %add, i32* %prec, align 4, !tbaa !63
  %134 = load i32, i32* %tmp, align 4, !tbaa !5
  %shr = lshr i32 %134, 7
  %135 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp, align 8, !tbaa !1
  %sgnd = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %135, i32 0, i32 8
  store i32 %shr, i32* %sgnd, align 4, !tbaa !66
  %136 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  call void @opj_read_bytes_LE(i8* %136, i32* %tmp, i32 1) #7
  %137 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %incdec.ptr105 = getelementptr inbounds i8, i8* %137, i32 1
  store i8* %incdec.ptr105, i8** %p_header_data.addr, align 8, !tbaa !1
  %138 = load i32, i32* %tmp, align 4, !tbaa !5
  %139 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp, align 8, !tbaa !1
  %dx = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %139, i32 0, i32 0
  store i32 %138, i32* %dx, align 4, !tbaa !67
  %140 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  call void @opj_read_bytes_LE(i8* %140, i32* %tmp, i32 1) #7
  %141 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %incdec.ptr106 = getelementptr inbounds i8, i8* %141, i32 1
  store i8* %incdec.ptr106, i8** %p_header_data.addr, align 8, !tbaa !1
  %142 = load i32, i32* %tmp, align 4, !tbaa !5
  %143 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp, align 8, !tbaa !1
  %dy = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %143, i32 0, i32 1
  store i32 %142, i32* %dy, align 4, !tbaa !68
  %144 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp, align 8, !tbaa !1
  %dx107 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %144, i32 0, i32 0
  %145 = load i32, i32* %dx107, align 4, !tbaa !67
  %cmp108 = icmp ult i32 %145, 1
  br i1 %cmp108, label %if.then.122, label %lor.lhs.false.110

lor.lhs.false.110:                                ; preds = %for.body
  %146 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp, align 8, !tbaa !1
  %dx111 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %146, i32 0, i32 0
  %147 = load i32, i32* %dx111, align 4, !tbaa !67
  %cmp112 = icmp ugt i32 %147, 255
  br i1 %cmp112, label %if.then.122, label %lor.lhs.false.114

lor.lhs.false.114:                                ; preds = %lor.lhs.false.110
  %148 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp, align 8, !tbaa !1
  %dy115 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %148, i32 0, i32 1
  %149 = load i32, i32* %dy115, align 4, !tbaa !68
  %cmp116 = icmp ult i32 %149, 1
  br i1 %cmp116, label %if.then.122, label %lor.lhs.false.118

lor.lhs.false.118:                                ; preds = %lor.lhs.false.114
  %150 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp, align 8, !tbaa !1
  %dy119 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %150, i32 0, i32 1
  %151 = load i32, i32* %dy119, align 4, !tbaa !68
  %cmp120 = icmp ugt i32 %151, 255
  br i1 %cmp120, label %if.then.122, label %if.end.126

if.then.122:                                      ; preds = %lor.lhs.false.118, %lor.lhs.false.114, %lor.lhs.false.110, %for.body
  %152 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %153 = load i32, i32* %i, align 4, !tbaa !5
  %154 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp, align 8, !tbaa !1
  %dx123 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %154, i32 0, i32 0
  %155 = load i32, i32* %dx123, align 4, !tbaa !67
  %156 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp, align 8, !tbaa !1
  %dy124 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %156, i32 0, i32 1
  %157 = load i32, i32* %dy124, align 4, !tbaa !68
  %call125 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %152, i32 1, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @.str.60, i32 0, i32 0), i32 %153, i32 %155, i32 %157) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.126:                                       ; preds = %lor.lhs.false.118
  %158 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp, align 8, !tbaa !1
  %resno_decoded = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %158, i32 0, i32 9
  store i32 0, i32* %resno_decoded, align 4, !tbaa !69
  %159 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %m_specific_param = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %159, i32 0, i32 18
  %m_dec = bitcast %union.anon.0* %m_specific_param to %struct.opj_decoding_param*
  %m_reduce = getelementptr inbounds %struct.opj_decoding_param, %struct.opj_decoding_param* %m_dec, i32 0, i32 0
  %160 = load i32, i32* %m_reduce, align 4, !tbaa !70
  %161 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp, align 8, !tbaa !1
  %factor = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %161, i32 0, i32 10
  store i32 %160, i32* %factor, align 4, !tbaa !71
  %162 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp, align 8, !tbaa !1
  %incdec.ptr127 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %162, i32 1
  store %struct.opj_image_comp* %incdec.ptr127, %struct.opj_image_comp** %l_img_comp, align 8, !tbaa !1
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.126, %if.then.122
  %163 = bitcast i32* %tmp to i8*
  call void @llvm.lifetime.end(i64 4, i8* %163) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.372 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %for.inc

for.inc:                                          ; preds = %cleanup.cont
  %164 = load i32, i32* %i, align 4, !tbaa !5
  %inc = add i32 %164, 1
  store i32 %inc, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %165 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %x1128 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %165, i32 0, i32 2
  %166 = load i32, i32* %x1128, align 4, !tbaa !57
  %167 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %tx0129 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %167, i32 0, i32 1
  %168 = load i32, i32* %tx0129, align 4, !tbaa !72
  %sub130 = sub i32 %166, %168
  %169 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %tdx131 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %169, i32 0, i32 3
  %170 = load i32, i32* %tdx131, align 4, !tbaa !60
  %call132 = call i32 @opj_int_ceildiv(i32 %sub130, i32 %170) #7
  %171 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %tw = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %171, i32 0, i32 6
  store i32 %call132, i32* %tw, align 4, !tbaa !14
  %172 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %y1133 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %172, i32 0, i32 3
  %173 = load i32, i32* %y1133, align 4, !tbaa !59
  %174 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %ty0134 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %174, i32 0, i32 2
  %175 = load i32, i32* %ty0134, align 4, !tbaa !73
  %sub135 = sub i32 %173, %175
  %176 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %tdy136 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %176, i32 0, i32 4
  %177 = load i32, i32* %tdy136, align 4, !tbaa !61
  %call137 = call i32 @opj_int_ceildiv(i32 %sub135, i32 %177) #7
  %178 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %th = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %178, i32 0, i32 7
  store i32 %call137, i32* %th, align 4, !tbaa !15
  %179 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %tw138 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %179, i32 0, i32 6
  %180 = load i32, i32* %tw138, align 4, !tbaa !14
  %cmp139 = icmp eq i32 %180, 0
  br i1 %cmp139, label %if.then.151, label %lor.lhs.false.141

lor.lhs.false.141:                                ; preds = %for.end
  %181 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %th142 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %181, i32 0, i32 7
  %182 = load i32, i32* %th142, align 4, !tbaa !15
  %cmp143 = icmp eq i32 %182, 0
  br i1 %cmp143, label %if.then.151, label %lor.lhs.false.145

lor.lhs.false.145:                                ; preds = %lor.lhs.false.141
  %183 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %tw146 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %183, i32 0, i32 6
  %184 = load i32, i32* %tw146, align 4, !tbaa !14
  %185 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %th147 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %185, i32 0, i32 7
  %186 = load i32, i32* %th147, align 4, !tbaa !15
  %div148 = udiv i32 65535, %186
  %cmp149 = icmp ugt i32 %184, %div148
  br i1 %cmp149, label %if.then.151, label %if.end.155

if.then.151:                                      ; preds = %lor.lhs.false.145, %lor.lhs.false.141, %for.end
  %187 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %188 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %tw152 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %188, i32 0, i32 6
  %189 = load i32, i32* %tw152, align 4, !tbaa !14
  %190 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %th153 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %190, i32 0, i32 7
  %191 = load i32, i32* %th153, align 4, !tbaa !15
  %call154 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %187, i32 1, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.61, i32 0, i32 0), i32 %189, i32 %191) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.372

if.end.155:                                       ; preds = %lor.lhs.false.145
  %192 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %tw156 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %192, i32 0, i32 6
  %193 = load i32, i32* %tw156, align 4, !tbaa !14
  %194 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %th157 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %194, i32 0, i32 7
  %195 = load i32, i32* %th157, align 4, !tbaa !15
  %mul158 = mul i32 %193, %195
  store i32 %mul158, i32* %l_nb_tiles, align 4, !tbaa !5
  %196 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param159 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %196, i32 0, i32 1
  %m_decoder = bitcast %union.anon* %m_specific_param159 to %struct.opj_j2k_dec*
  %m_discard_tiles = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder, i32 0, i32 16
  %bf.load = load i8, i8* %m_discard_tiles, align 4
  %bf.lshr = lshr i8 %bf.load, 1
  %bf.clear = and i8 %bf.lshr, 1
  %bf.cast = zext i8 %bf.clear to i32
  %tobool160 = icmp ne i32 %bf.cast, 0
  br i1 %tobool160, label %if.then.161, label %if.else.198

if.then.161:                                      ; preds = %if.end.155
  %197 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param162 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %197, i32 0, i32 1
  %m_decoder163 = bitcast %union.anon* %m_specific_param162 to %struct.opj_j2k_dec*
  %m_start_tile_x = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder163, i32 0, i32 5
  %198 = load i32, i32* %m_start_tile_x, align 4, !tbaa !25
  %199 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %tx0164 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %199, i32 0, i32 1
  %200 = load i32, i32* %tx0164, align 4, !tbaa !72
  %sub165 = sub i32 %198, %200
  %201 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %tdx166 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %201, i32 0, i32 3
  %202 = load i32, i32* %tdx166, align 4, !tbaa !60
  %div167 = udiv i32 %sub165, %202
  %203 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param168 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %203, i32 0, i32 1
  %m_decoder169 = bitcast %union.anon* %m_specific_param168 to %struct.opj_j2k_dec*
  %m_start_tile_x170 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder169, i32 0, i32 5
  store i32 %div167, i32* %m_start_tile_x170, align 4, !tbaa !25
  %204 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param171 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %204, i32 0, i32 1
  %m_decoder172 = bitcast %union.anon* %m_specific_param171 to %struct.opj_j2k_dec*
  %m_start_tile_y = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder172, i32 0, i32 6
  %205 = load i32, i32* %m_start_tile_y, align 4, !tbaa !27
  %206 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %ty0173 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %206, i32 0, i32 2
  %207 = load i32, i32* %ty0173, align 4, !tbaa !73
  %sub174 = sub i32 %205, %207
  %208 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %tdy175 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %208, i32 0, i32 4
  %209 = load i32, i32* %tdy175, align 4, !tbaa !61
  %div176 = udiv i32 %sub174, %209
  %210 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param177 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %210, i32 0, i32 1
  %m_decoder178 = bitcast %union.anon* %m_specific_param177 to %struct.opj_j2k_dec*
  %m_start_tile_y179 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder178, i32 0, i32 6
  store i32 %div176, i32* %m_start_tile_y179, align 4, !tbaa !27
  %211 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param180 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %211, i32 0, i32 1
  %m_decoder181 = bitcast %union.anon* %m_specific_param180 to %struct.opj_j2k_dec*
  %m_end_tile_x = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder181, i32 0, i32 7
  %212 = load i32, i32* %m_end_tile_x, align 4, !tbaa !26
  %213 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %tx0182 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %213, i32 0, i32 1
  %214 = load i32, i32* %tx0182, align 4, !tbaa !72
  %sub183 = sub i32 %212, %214
  %215 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %tdx184 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %215, i32 0, i32 3
  %216 = load i32, i32* %tdx184, align 4, !tbaa !60
  %call185 = call i32 @opj_int_ceildiv(i32 %sub183, i32 %216) #7
  %217 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param186 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %217, i32 0, i32 1
  %m_decoder187 = bitcast %union.anon* %m_specific_param186 to %struct.opj_j2k_dec*
  %m_end_tile_x188 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder187, i32 0, i32 7
  store i32 %call185, i32* %m_end_tile_x188, align 4, !tbaa !26
  %218 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param189 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %218, i32 0, i32 1
  %m_decoder190 = bitcast %union.anon* %m_specific_param189 to %struct.opj_j2k_dec*
  %m_end_tile_y = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder190, i32 0, i32 8
  %219 = load i32, i32* %m_end_tile_y, align 4, !tbaa !28
  %220 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %ty0191 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %220, i32 0, i32 2
  %221 = load i32, i32* %ty0191, align 4, !tbaa !73
  %sub192 = sub i32 %219, %221
  %222 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %tdy193 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %222, i32 0, i32 4
  %223 = load i32, i32* %tdy193, align 4, !tbaa !61
  %call194 = call i32 @opj_int_ceildiv(i32 %sub192, i32 %223) #7
  %224 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param195 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %224, i32 0, i32 1
  %m_decoder196 = bitcast %union.anon* %m_specific_param195 to %struct.opj_j2k_dec*
  %m_end_tile_y197 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder196, i32 0, i32 8
  store i32 %call194, i32* %m_end_tile_y197, align 4, !tbaa !28
  br label %if.end.213

if.else.198:                                      ; preds = %if.end.155
  %225 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param199 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %225, i32 0, i32 1
  %m_decoder200 = bitcast %union.anon* %m_specific_param199 to %struct.opj_j2k_dec*
  %m_start_tile_x201 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder200, i32 0, i32 5
  store i32 0, i32* %m_start_tile_x201, align 4, !tbaa !25
  %226 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param202 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %226, i32 0, i32 1
  %m_decoder203 = bitcast %union.anon* %m_specific_param202 to %struct.opj_j2k_dec*
  %m_start_tile_y204 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder203, i32 0, i32 6
  store i32 0, i32* %m_start_tile_y204, align 4, !tbaa !27
  %227 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %tw205 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %227, i32 0, i32 6
  %228 = load i32, i32* %tw205, align 4, !tbaa !14
  %229 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param206 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %229, i32 0, i32 1
  %m_decoder207 = bitcast %union.anon* %m_specific_param206 to %struct.opj_j2k_dec*
  %m_end_tile_x208 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder207, i32 0, i32 7
  store i32 %228, i32* %m_end_tile_x208, align 4, !tbaa !26
  %230 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %th209 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %230, i32 0, i32 7
  %231 = load i32, i32* %th209, align 4, !tbaa !15
  %232 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param210 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %232, i32 0, i32 1
  %m_decoder211 = bitcast %union.anon* %m_specific_param210 to %struct.opj_j2k_dec*
  %m_end_tile_y212 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder211, i32 0, i32 8
  store i32 %231, i32* %m_end_tile_y212, align 4, !tbaa !28
  br label %if.end.213

if.end.213:                                       ; preds = %if.else.198, %if.then.161
  %233 = load i32, i32* %l_nb_tiles, align 4, !tbaa !5
  %conv214 = zext i32 %233 to i64
  %cmp215 = icmp ne i64 %conv214, 0
  br i1 %cmp215, label %land.lhs.true.217, label %cond.false.222

land.lhs.true.217:                                ; preds = %if.end.213
  %234 = load i32, i32* %l_nb_tiles, align 4, !tbaa !5
  %conv218 = zext i32 %234 to i64
  %cmp219 = icmp uge i64 %conv218, 3247666210160132
  br i1 %cmp219, label %cond.true.221, label %cond.false.222

cond.true.221:                                    ; preds = %land.lhs.true.217
  br label %cond.end.225

cond.false.222:                                   ; preds = %land.lhs.true.217, %if.end.213
  %235 = load i32, i32* %l_nb_tiles, align 4, !tbaa !5
  %conv223 = zext i32 %235 to i64
  %call224 = call noalias i8* @calloc(i64 %conv223, i64 5680) #9
  br label %cond.end.225

cond.end.225:                                     ; preds = %cond.false.222, %cond.true.221
  %cond226 = phi i8* [ null, %cond.true.221 ], [ %call224, %cond.false.222 ]
  %236 = bitcast i8* %cond226 to %struct.opj_tcp*
  %237 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %tcps = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %237, i32 0, i32 17
  store %struct.opj_tcp* %236, %struct.opj_tcp** %tcps, align 8, !tbaa !16
  %238 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %tcps227 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %238, i32 0, i32 17
  %239 = load %struct.opj_tcp*, %struct.opj_tcp** %tcps227, align 8, !tbaa !16
  %cmp228 = icmp eq %struct.opj_tcp* %239, null
  br i1 %cmp228, label %if.then.230, label %if.end.232

if.then.230:                                      ; preds = %cond.end.225
  %240 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call231 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %240, i32 1, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.59, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.372

if.end.232:                                       ; preds = %cond.end.225
  %241 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %tcps233 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %241, i32 0, i32 17
  %242 = load %struct.opj_tcp*, %struct.opj_tcp** %tcps233, align 8, !tbaa !16
  %243 = bitcast %struct.opj_tcp* %242 to i8*
  %244 = load i32, i32* %l_nb_tiles, align 4, !tbaa !5
  %conv234 = zext i32 %244 to i64
  %mul235 = mul i64 %conv234, 5680
  %call236 = call i8* @memset(i8* %243, i32 0, i64 %mul235) #9
  %245 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %numcomps237 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %245, i32 0, i32 4
  %246 = load i32, i32* %numcomps237, align 4, !tbaa !45
  %conv238 = zext i32 %246 to i64
  %cmp239 = icmp ne i64 %conv238, 0
  br i1 %cmp239, label %land.lhs.true.241, label %cond.false.247

land.lhs.true.241:                                ; preds = %if.end.232
  %247 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %numcomps242 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %247, i32 0, i32 4
  %248 = load i32, i32* %numcomps242, align 4, !tbaa !45
  %conv243 = zext i32 %248 to i64
  %cmp244 = icmp uge i64 %conv243, 17080318586768103
  br i1 %cmp244, label %cond.true.246, label %cond.false.247

cond.true.246:                                    ; preds = %land.lhs.true.241
  br label %cond.end.251

cond.false.247:                                   ; preds = %land.lhs.true.241, %if.end.232
  %249 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %numcomps248 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %249, i32 0, i32 4
  %250 = load i32, i32* %numcomps248, align 4, !tbaa !45
  %conv249 = zext i32 %250 to i64
  %call250 = call noalias i8* @calloc(i64 %conv249, i64 1080) #9
  br label %cond.end.251

cond.end.251:                                     ; preds = %cond.false.247, %cond.true.246
  %cond252 = phi i8* [ null, %cond.true.246 ], [ %call250, %cond.false.247 ]
  %251 = bitcast i8* %cond252 to %struct.opj_tccp*
  %252 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param253 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %252, i32 0, i32 1
  %m_decoder254 = bitcast %union.anon* %m_specific_param253 to %struct.opj_j2k_dec*
  %m_default_tcp = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder254, i32 0, i32 1
  %253 = load %struct.opj_tcp*, %struct.opj_tcp** %m_default_tcp, align 8, !tbaa !39
  %tccps = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %253, i32 0, i32 13
  store %struct.opj_tccp* %251, %struct.opj_tccp** %tccps, align 8, !tbaa !48
  %254 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param255 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %254, i32 0, i32 1
  %m_decoder256 = bitcast %union.anon* %m_specific_param255 to %struct.opj_j2k_dec*
  %m_default_tcp257 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder256, i32 0, i32 1
  %255 = load %struct.opj_tcp*, %struct.opj_tcp** %m_default_tcp257, align 8, !tbaa !39
  %tccps258 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %255, i32 0, i32 13
  %256 = load %struct.opj_tccp*, %struct.opj_tccp** %tccps258, align 8, !tbaa !48
  %cmp259 = icmp eq %struct.opj_tccp* %256, null
  br i1 %cmp259, label %if.then.261, label %if.end.263

if.then.261:                                      ; preds = %cond.end.251
  %257 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call262 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %257, i32 1, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.59, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.372

if.end.263:                                       ; preds = %cond.end.251
  %258 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param264 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %258, i32 0, i32 1
  %m_decoder265 = bitcast %union.anon* %m_specific_param264 to %struct.opj_j2k_dec*
  %m_default_tcp266 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder265, i32 0, i32 1
  %259 = load %struct.opj_tcp*, %struct.opj_tcp** %m_default_tcp266, align 8, !tbaa !39
  %tccps267 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %259, i32 0, i32 13
  %260 = load %struct.opj_tccp*, %struct.opj_tccp** %tccps267, align 8, !tbaa !48
  %261 = bitcast %struct.opj_tccp* %260 to i8*
  %262 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %numcomps268 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %262, i32 0, i32 4
  %263 = load i32, i32* %numcomps268, align 4, !tbaa !45
  %conv269 = zext i32 %263 to i64
  %mul270 = mul i64 %conv269, 1080
  %call271 = call i8* @memset(i8* %261, i32 0, i64 %mul270) #9
  %call272 = call noalias i8* @malloc(i64 320) #9
  %264 = bitcast i8* %call272 to %struct.opj_mct_data*
  %265 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param273 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %265, i32 0, i32 1
  %m_decoder274 = bitcast %union.anon* %m_specific_param273 to %struct.opj_j2k_dec*
  %m_default_tcp275 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder274, i32 0, i32 1
  %266 = load %struct.opj_tcp*, %struct.opj_tcp** %m_default_tcp275, align 8, !tbaa !39
  %m_mct_records = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %266, i32 0, i32 20
  store %struct.opj_mct_data* %264, %struct.opj_mct_data** %m_mct_records, align 8, !tbaa !74
  %267 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param276 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %267, i32 0, i32 1
  %m_decoder277 = bitcast %union.anon* %m_specific_param276 to %struct.opj_j2k_dec*
  %m_default_tcp278 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder277, i32 0, i32 1
  %268 = load %struct.opj_tcp*, %struct.opj_tcp** %m_default_tcp278, align 8, !tbaa !39
  %m_mct_records279 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %268, i32 0, i32 20
  %269 = load %struct.opj_mct_data*, %struct.opj_mct_data** %m_mct_records279, align 8, !tbaa !74
  %tobool280 = icmp ne %struct.opj_mct_data* %269, null
  br i1 %tobool280, label %if.end.283, label %if.then.281

if.then.281:                                      ; preds = %if.end.263
  %270 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call282 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %270, i32 1, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.59, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.372

if.end.283:                                       ; preds = %if.end.263
  %271 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param284 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %271, i32 0, i32 1
  %m_decoder285 = bitcast %union.anon* %m_specific_param284 to %struct.opj_j2k_dec*
  %m_default_tcp286 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder285, i32 0, i32 1
  %272 = load %struct.opj_tcp*, %struct.opj_tcp** %m_default_tcp286, align 8, !tbaa !39
  %m_mct_records287 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %272, i32 0, i32 20
  %273 = load %struct.opj_mct_data*, %struct.opj_mct_data** %m_mct_records287, align 8, !tbaa !74
  %274 = bitcast %struct.opj_mct_data* %273 to i8*
  %call288 = call i8* @memset(i8* %274, i32 0, i64 320) #9
  %275 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param289 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %275, i32 0, i32 1
  %m_decoder290 = bitcast %union.anon* %m_specific_param289 to %struct.opj_j2k_dec*
  %m_default_tcp291 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder290, i32 0, i32 1
  %276 = load %struct.opj_tcp*, %struct.opj_tcp** %m_default_tcp291, align 8, !tbaa !39
  %m_nb_max_mct_records = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %276, i32 0, i32 22
  store i32 10, i32* %m_nb_max_mct_records, align 4, !tbaa !75
  %call292 = call noalias i8* @malloc(i64 320) #9
  %277 = bitcast i8* %call292 to %struct.opj_simple_mcc_decorrelation_data*
  %278 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param293 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %278, i32 0, i32 1
  %m_decoder294 = bitcast %union.anon* %m_specific_param293 to %struct.opj_j2k_dec*
  %m_default_tcp295 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder294, i32 0, i32 1
  %279 = load %struct.opj_tcp*, %struct.opj_tcp** %m_default_tcp295, align 8, !tbaa !39
  %m_mcc_records = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %279, i32 0, i32 23
  store %struct.opj_simple_mcc_decorrelation_data* %277, %struct.opj_simple_mcc_decorrelation_data** %m_mcc_records, align 8, !tbaa !76
  %280 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param296 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %280, i32 0, i32 1
  %m_decoder297 = bitcast %union.anon* %m_specific_param296 to %struct.opj_j2k_dec*
  %m_default_tcp298 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder297, i32 0, i32 1
  %281 = load %struct.opj_tcp*, %struct.opj_tcp** %m_default_tcp298, align 8, !tbaa !39
  %m_mcc_records299 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %281, i32 0, i32 23
  %282 = load %struct.opj_simple_mcc_decorrelation_data*, %struct.opj_simple_mcc_decorrelation_data** %m_mcc_records299, align 8, !tbaa !76
  %tobool300 = icmp ne %struct.opj_simple_mcc_decorrelation_data* %282, null
  br i1 %tobool300, label %if.end.303, label %if.then.301

if.then.301:                                      ; preds = %if.end.283
  %283 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call302 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %283, i32 1, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.59, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.372

if.end.303:                                       ; preds = %if.end.283
  %284 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param304 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %284, i32 0, i32 1
  %m_decoder305 = bitcast %union.anon* %m_specific_param304 to %struct.opj_j2k_dec*
  %m_default_tcp306 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder305, i32 0, i32 1
  %285 = load %struct.opj_tcp*, %struct.opj_tcp** %m_default_tcp306, align 8, !tbaa !39
  %m_mcc_records307 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %285, i32 0, i32 23
  %286 = load %struct.opj_simple_mcc_decorrelation_data*, %struct.opj_simple_mcc_decorrelation_data** %m_mcc_records307, align 8, !tbaa !76
  %287 = bitcast %struct.opj_simple_mcc_decorrelation_data* %286 to i8*
  %call308 = call i8* @memset(i8* %287, i32 0, i64 320) #9
  %288 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param309 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %288, i32 0, i32 1
  %m_decoder310 = bitcast %union.anon* %m_specific_param309 to %struct.opj_j2k_dec*
  %m_default_tcp311 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder310, i32 0, i32 1
  %289 = load %struct.opj_tcp*, %struct.opj_tcp** %m_default_tcp311, align 8, !tbaa !39
  %m_nb_max_mcc_records = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %289, i32 0, i32 25
  store i32 10, i32* %m_nb_max_mcc_records, align 4, !tbaa !77
  store i32 0, i32* %i, align 4, !tbaa !5
  br label %for.cond.312

for.cond.312:                                     ; preds = %for.inc.333, %if.end.303
  %290 = load i32, i32* %i, align 4, !tbaa !5
  %291 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %numcomps313 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %291, i32 0, i32 4
  %292 = load i32, i32* %numcomps313, align 4, !tbaa !45
  %cmp314 = icmp ult i32 %290, %292
  br i1 %cmp314, label %for.body.316, label %for.end.335

for.body.316:                                     ; preds = %for.cond.312
  %293 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom = zext i32 %293 to i64
  %294 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %comps317 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %294, i32 0, i32 6
  %295 = load %struct.opj_image_comp*, %struct.opj_image_comp** %comps317, align 8, !tbaa !62
  %arrayidx = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %295, i64 %idxprom
  %sgnd318 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %arrayidx, i32 0, i32 8
  %296 = load i32, i32* %sgnd318, align 4, !tbaa !66
  %tobool319 = icmp ne i32 %296, 0
  br i1 %tobool319, label %if.end.332, label %if.then.320

if.then.320:                                      ; preds = %for.body.316
  %297 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom321 = zext i32 %297 to i64
  %298 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %comps322 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %298, i32 0, i32 6
  %299 = load %struct.opj_image_comp*, %struct.opj_image_comp** %comps322, align 8, !tbaa !62
  %arrayidx323 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %299, i64 %idxprom321
  %prec324 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %arrayidx323, i32 0, i32 6
  %300 = load i32, i32* %prec324, align 4, !tbaa !63
  %sub325 = sub i32 %300, 1
  %shl = shl i32 1, %sub325
  %301 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom326 = zext i32 %301 to i64
  %302 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param327 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %302, i32 0, i32 1
  %m_decoder328 = bitcast %union.anon* %m_specific_param327 to %struct.opj_j2k_dec*
  %m_default_tcp329 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder328, i32 0, i32 1
  %303 = load %struct.opj_tcp*, %struct.opj_tcp** %m_default_tcp329, align 8, !tbaa !39
  %tccps330 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %303, i32 0, i32 13
  %304 = load %struct.opj_tccp*, %struct.opj_tccp** %tccps330, align 8, !tbaa !48
  %arrayidx331 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %304, i64 %idxprom326
  %m_dc_level_shift = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %arrayidx331, i32 0, i32 12
  store i32 %shl, i32* %m_dc_level_shift, align 4, !tbaa !78
  br label %if.end.332

if.end.332:                                       ; preds = %if.then.320, %for.body.316
  br label %for.inc.333

for.inc.333:                                      ; preds = %if.end.332
  %305 = load i32, i32* %i, align 4, !tbaa !5
  %inc334 = add i32 %305, 1
  store i32 %inc334, i32* %i, align 4, !tbaa !5
  br label %for.cond.312

for.end.335:                                      ; preds = %for.cond.312
  %306 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %tcps336 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %306, i32 0, i32 17
  %307 = load %struct.opj_tcp*, %struct.opj_tcp** %tcps336, align 8, !tbaa !16
  store %struct.opj_tcp* %307, %struct.opj_tcp** %l_current_tile_param, align 8, !tbaa !1
  store i32 0, i32* %i, align 4, !tbaa !5
  br label %for.cond.337

for.cond.337:                                     ; preds = %for.inc.367, %for.end.335
  %308 = load i32, i32* %i, align 4, !tbaa !5
  %309 = load i32, i32* %l_nb_tiles, align 4, !tbaa !5
  %cmp338 = icmp ult i32 %308, %309
  br i1 %cmp338, label %for.body.340, label %for.end.369

for.body.340:                                     ; preds = %for.cond.337
  %310 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %numcomps341 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %310, i32 0, i32 4
  %311 = load i32, i32* %numcomps341, align 4, !tbaa !45
  %conv342 = zext i32 %311 to i64
  %mul343 = mul i64 %conv342, 1080
  %cmp344 = icmp uge i64 %mul343, -256
  br i1 %cmp344, label %cond.true.346, label %cond.false.347

cond.true.346:                                    ; preds = %for.body.340
  br label %cond.end.352

cond.false.347:                                   ; preds = %for.body.340
  %312 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %numcomps348 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %312, i32 0, i32 4
  %313 = load i32, i32* %numcomps348, align 4, !tbaa !45
  %conv349 = zext i32 %313 to i64
  %mul350 = mul i64 %conv349, 1080
  %call351 = call noalias i8* @malloc(i64 %mul350) #9
  br label %cond.end.352

cond.end.352:                                     ; preds = %cond.false.347, %cond.true.346
  %cond353 = phi i8* [ null, %cond.true.346 ], [ %call351, %cond.false.347 ]
  %314 = bitcast i8* %cond353 to %struct.opj_tccp*
  %315 = load %struct.opj_tcp*, %struct.opj_tcp** %l_current_tile_param, align 8, !tbaa !1
  %tccps354 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %315, i32 0, i32 13
  store %struct.opj_tccp* %314, %struct.opj_tccp** %tccps354, align 8, !tbaa !48
  %316 = load %struct.opj_tcp*, %struct.opj_tcp** %l_current_tile_param, align 8, !tbaa !1
  %tccps355 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %316, i32 0, i32 13
  %317 = load %struct.opj_tccp*, %struct.opj_tccp** %tccps355, align 8, !tbaa !48
  %cmp356 = icmp eq %struct.opj_tccp* %317, null
  br i1 %cmp356, label %if.then.358, label %if.end.360

if.then.358:                                      ; preds = %cond.end.352
  %318 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call359 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %318, i32 1, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.59, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.372

if.end.360:                                       ; preds = %cond.end.352
  %319 = load %struct.opj_tcp*, %struct.opj_tcp** %l_current_tile_param, align 8, !tbaa !1
  %tccps361 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %319, i32 0, i32 13
  %320 = load %struct.opj_tccp*, %struct.opj_tccp** %tccps361, align 8, !tbaa !48
  %321 = bitcast %struct.opj_tccp* %320 to i8*
  %322 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %numcomps362 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %322, i32 0, i32 4
  %323 = load i32, i32* %numcomps362, align 4, !tbaa !45
  %conv363 = zext i32 %323 to i64
  %mul364 = mul i64 %conv363, 1080
  %call365 = call i8* @memset(i8* %321, i32 0, i64 %mul364) #9
  %324 = load %struct.opj_tcp*, %struct.opj_tcp** %l_current_tile_param, align 8, !tbaa !1
  %incdec.ptr366 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %324, i32 1
  store %struct.opj_tcp* %incdec.ptr366, %struct.opj_tcp** %l_current_tile_param, align 8, !tbaa !1
  br label %for.inc.367

for.inc.367:                                      ; preds = %if.end.360
  %325 = load i32, i32* %i, align 4, !tbaa !5
  %inc368 = add i32 %325, 1
  store i32 %inc368, i32* %i, align 4, !tbaa !5
  br label %for.cond.337

for.end.369:                                      ; preds = %for.cond.337
  %326 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param370 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %326, i32 0, i32 1
  %m_decoder371 = bitcast %union.anon* %m_specific_param370 to %struct.opj_j2k_dec*
  %m_state = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder371, i32 0, i32 0
  store i32 4, i32* %m_state, align 4, !tbaa !23
  %327 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %328 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  call void @opj_image_comp_header_update(%struct.opj_image* %327, %struct.opj_cp* %328) #7
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.372

cleanup.372:                                      ; preds = %for.end.369, %if.then.358, %if.then.301, %if.then.281, %if.then.261, %if.then.230, %if.then.151, %cleanup, %if.then.92, %if.then.70, %if.then.54, %if.then.43, %if.then.31, %if.else, %if.then.11, %if.then
  %329 = bitcast %struct.opj_tcp** %l_current_tile_param to i8*
  call void @llvm.lifetime.end(i64 8, i8* %329) #1
  %330 = bitcast %struct.opj_image_comp** %l_img_comp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %330) #1
  %331 = bitcast %struct.opj_cp** %l_cp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %331) #1
  %332 = bitcast %struct.opj_image** %l_image to i8*
  call void @llvm.lifetime.end(i64 8, i8* %332) #1
  %333 = bitcast i32* %l_tmp to i8*
  call void @llvm.lifetime.end(i64 4, i8* %333) #1
  %334 = bitcast i32* %l_nb_tiles to i8*
  call void @llvm.lifetime.end(i64 4, i8* %334) #1
  %335 = bitcast i32* %l_remaining_size to i8*
  call void @llvm.lifetime.end(i64 4, i8* %335) #1
  %336 = bitcast i32* %l_nb_comp_remain to i8*
  call void @llvm.lifetime.end(i64 4, i8* %336) #1
  %337 = bitcast i32* %l_nb_comp to i8*
  call void @llvm.lifetime.end(i64 4, i8* %337) #1
  %338 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %338) #1
  %339 = load i32, i32* %retval
  ret i32 %339
}

; Function Attrs: nounwind uwtable
define internal i32 @opj_j2k_read_tlm(%struct.opj_j2k* %p_j2k, i8* %p_header_data, i32 %p_header_size, %struct.opj_event_mgr* %p_manager) #0 {
entry:
  %retval = alloca i32, align 4
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %p_header_data.addr = alloca i8*, align 8
  %p_header_size.addr = alloca i32, align 4
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  %l_Ztlm = alloca i32, align 4
  %l_Stlm = alloca i32, align 4
  %l_ST = alloca i32, align 4
  %l_SP = alloca i32, align 4
  %l_tot_num_tp_remaining = alloca i32, align 4
  %l_quotient = alloca i32, align 4
  %l_Ptlm_size = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store i8* %p_header_data, i8** %p_header_data.addr, align 8, !tbaa !1
  store i32 %p_header_size, i32* %p_header_size.addr, align 4, !tbaa !5
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %0 = bitcast i32* %l_Ztlm to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast i32* %l_Stlm to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = bitcast i32* %l_ST to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #1
  %3 = bitcast i32* %l_SP to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #1
  %4 = bitcast i32* %l_tot_num_tp_remaining to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #1
  %5 = bitcast i32* %l_quotient to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #1
  %6 = bitcast i32* %l_Ptlm_size to i8*
  call void @llvm.lifetime.start(i64 4, i8* %6) #1
  %7 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %cmp = icmp ne i8* %7, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.52, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 3204, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @__PRETTY_FUNCTION__.opj_j2k_read_tlm, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %8, %cond.true
  %9 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cmp1 = icmp ne %struct.opj_j2k* %9, null
  br i1 %cmp1, label %cond.true.2, label %cond.false.3

cond.true.2:                                      ; preds = %cond.end
  br label %cond.end.4

cond.false.3:                                     ; preds = %cond.end
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 3205, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @__PRETTY_FUNCTION__.opj_j2k_read_tlm, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.4

cond.end.4:                                       ; preds = %10, %cond.true.2
  %11 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %cmp5 = icmp ne %struct.opj_event_mgr* %11, null
  br i1 %cmp5, label %cond.true.6, label %cond.false.7

cond.true.6:                                      ; preds = %cond.end.4
  br label %cond.end.8

cond.false.7:                                     ; preds = %cond.end.4
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 3206, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @__PRETTY_FUNCTION__.opj_j2k_read_tlm, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.8

cond.end.8:                                       ; preds = %12, %cond.true.6
  %13 = load i32, i32* %p_header_size.addr, align 4, !tbaa !5
  %cmp9 = icmp ult i32 %13, 2
  br i1 %cmp9, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end.8
  %14 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %14, i32 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.78, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %cond.end.8
  %15 = load i32, i32* %p_header_size.addr, align 4, !tbaa !5
  %sub = sub i32 %15, 2
  store i32 %sub, i32* %p_header_size.addr, align 4, !tbaa !5
  %16 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  call void @opj_read_bytes_LE(i8* %16, i32* %l_Ztlm, i32 1) #7
  %17 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds i8, i8* %17, i32 1
  store i8* %incdec.ptr, i8** %p_header_data.addr, align 8, !tbaa !1
  %18 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  call void @opj_read_bytes_LE(i8* %18, i32* %l_Stlm, i32 1) #7
  %19 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %incdec.ptr10 = getelementptr inbounds i8, i8* %19, i32 1
  store i8* %incdec.ptr10, i8** %p_header_data.addr, align 8, !tbaa !1
  %20 = load i32, i32* %l_Stlm, align 4, !tbaa !5
  %shr = lshr i32 %20, 4
  %and = and i32 %shr, 3
  store i32 %and, i32* %l_ST, align 4, !tbaa !5
  %21 = load i32, i32* %l_Stlm, align 4, !tbaa !5
  %shr11 = lshr i32 %21, 6
  %and12 = and i32 %shr11, 1
  store i32 %and12, i32* %l_SP, align 4, !tbaa !5
  %22 = load i32, i32* %l_SP, align 4, !tbaa !5
  %add = add i32 %22, 1
  %mul = mul i32 %add, 2
  store i32 %mul, i32* %l_Ptlm_size, align 4, !tbaa !5
  %23 = load i32, i32* %l_Ptlm_size, align 4, !tbaa !5
  %24 = load i32, i32* %l_ST, align 4, !tbaa !5
  %add13 = add i32 %23, %24
  store i32 %add13, i32* %l_quotient, align 4, !tbaa !5
  %25 = load i32, i32* %p_header_size.addr, align 4, !tbaa !5
  %26 = load i32, i32* %l_quotient, align 4, !tbaa !5
  %rem = urem i32 %25, %26
  store i32 %rem, i32* %l_tot_num_tp_remaining, align 4, !tbaa !5
  %27 = load i32, i32* %l_tot_num_tp_remaining, align 4, !tbaa !5
  %cmp14 = icmp ne i32 %27, 0
  br i1 %cmp14, label %if.then.15, label %if.end.17

if.then.15:                                       ; preds = %if.end
  %28 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call16 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %28, i32 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.78, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.17:                                        ; preds = %if.end
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.17, %if.then.15, %if.then
  %29 = bitcast i32* %l_Ptlm_size to i8*
  call void @llvm.lifetime.end(i64 4, i8* %29) #1
  %30 = bitcast i32* %l_quotient to i8*
  call void @llvm.lifetime.end(i64 4, i8* %30) #1
  %31 = bitcast i32* %l_tot_num_tp_remaining to i8*
  call void @llvm.lifetime.end(i64 4, i8* %31) #1
  %32 = bitcast i32* %l_SP to i8*
  call void @llvm.lifetime.end(i64 4, i8* %32) #1
  %33 = bitcast i32* %l_ST to i8*
  call void @llvm.lifetime.end(i64 4, i8* %33) #1
  %34 = bitcast i32* %l_Stlm to i8*
  call void @llvm.lifetime.end(i64 4, i8* %34) #1
  %35 = bitcast i32* %l_Ztlm to i8*
  call void @llvm.lifetime.end(i64 4, i8* %35) #1
  %36 = load i32, i32* %retval
  ret i32 %36
}

; Function Attrs: nounwind uwtable
define internal i32 @opj_j2k_read_plm(%struct.opj_j2k* %p_j2k, i8* %p_header_data, i32 %p_header_size, %struct.opj_event_mgr* %p_manager) #0 {
entry:
  %retval = alloca i32, align 4
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %p_header_data.addr = alloca i8*, align 8
  %p_header_size.addr = alloca i32, align 4
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store i8* %p_header_data, i8** %p_header_data.addr, align 8, !tbaa !1
  store i32 %p_header_size, i32* %p_header_size.addr, align 4, !tbaa !5
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %0 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %cmp = icmp ne i8* %0, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.52, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 3259, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @__PRETTY_FUNCTION__.opj_j2k_read_plm, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %1, %cond.true
  %2 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cmp1 = icmp ne %struct.opj_j2k* %2, null
  br i1 %cmp1, label %cond.true.2, label %cond.false.3

cond.true.2:                                      ; preds = %cond.end
  br label %cond.end.4

cond.false.3:                                     ; preds = %cond.end
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 3260, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @__PRETTY_FUNCTION__.opj_j2k_read_plm, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.4

cond.end.4:                                       ; preds = %3, %cond.true.2
  %4 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %cmp5 = icmp ne %struct.opj_event_mgr* %4, null
  br i1 %cmp5, label %cond.true.6, label %cond.false.7

cond.true.6:                                      ; preds = %cond.end.4
  br label %cond.end.8

cond.false.7:                                     ; preds = %cond.end.4
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 3261, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @__PRETTY_FUNCTION__.opj_j2k_read_plm, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.8

cond.end.8:                                       ; preds = %5, %cond.true.6
  %6 = load i32, i32* %p_header_size.addr, align 4, !tbaa !5
  %cmp9 = icmp ult i32 %6, 1
  br i1 %cmp9, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end.8
  %7 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %7, i32 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.79, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %cond.end.8
  store i32 1, i32* %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %8 = load i32, i32* %retval
  ret i32 %8
}

; Function Attrs: nounwind uwtable
define internal i32 @opj_j2k_read_plt(%struct.opj_j2k* %p_j2k, i8* %p_header_data, i32 %p_header_size, %struct.opj_event_mgr* %p_manager) #0 {
entry:
  %retval = alloca i32, align 4
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %p_header_data.addr = alloca i8*, align 8
  %p_header_size.addr = alloca i32, align 4
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  %l_Zplt = alloca i32, align 4
  %l_tmp = alloca i32, align 4
  %l_packet_len = alloca i32, align 4
  %i = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store i8* %p_header_data, i8** %p_header_data.addr, align 8, !tbaa !1
  store i32 %p_header_size, i32* %p_header_size.addr, align 4, !tbaa !5
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %0 = bitcast i32* %l_Zplt to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast i32* %l_tmp to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = bitcast i32* %l_packet_len to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #1
  store i32 0, i32* %l_packet_len, align 4, !tbaa !5
  %3 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #1
  %4 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %cmp = icmp ne i8* %4, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.52, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 3331, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @__PRETTY_FUNCTION__.opj_j2k_read_plt, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %5, %cond.true
  %6 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cmp1 = icmp ne %struct.opj_j2k* %6, null
  br i1 %cmp1, label %cond.true.2, label %cond.false.3

cond.true.2:                                      ; preds = %cond.end
  br label %cond.end.4

cond.false.3:                                     ; preds = %cond.end
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 3332, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @__PRETTY_FUNCTION__.opj_j2k_read_plt, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.4

cond.end.4:                                       ; preds = %7, %cond.true.2
  %8 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %cmp5 = icmp ne %struct.opj_event_mgr* %8, null
  br i1 %cmp5, label %cond.true.6, label %cond.false.7

cond.true.6:                                      ; preds = %cond.end.4
  br label %cond.end.8

cond.false.7:                                     ; preds = %cond.end.4
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 3333, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @__PRETTY_FUNCTION__.opj_j2k_read_plt, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.8

cond.end.8:                                       ; preds = %9, %cond.true.6
  %10 = load i32, i32* %p_header_size.addr, align 4, !tbaa !5
  %cmp9 = icmp ult i32 %10, 1
  br i1 %cmp9, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end.8
  %11 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %11, i32 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.80, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %cond.end.8
  %12 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  call void @opj_read_bytes_LE(i8* %12, i32* %l_Zplt, i32 1) #7
  %13 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds i8, i8* %13, i32 1
  store i8* %incdec.ptr, i8** %p_header_data.addr, align 8, !tbaa !1
  %14 = load i32, i32* %p_header_size.addr, align 4, !tbaa !5
  %dec = add i32 %14, -1
  store i32 %dec, i32* %p_header_size.addr, align 4, !tbaa !5
  store i32 0, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %15 = load i32, i32* %i, align 4, !tbaa !5
  %16 = load i32, i32* %p_header_size.addr, align 4, !tbaa !5
  %cmp10 = icmp ult i32 %15, %16
  br i1 %cmp10, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %17 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  call void @opj_read_bytes_LE(i8* %17, i32* %l_tmp, i32 1) #7
  %18 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %incdec.ptr11 = getelementptr inbounds i8, i8* %18, i32 1
  store i8* %incdec.ptr11, i8** %p_header_data.addr, align 8, !tbaa !1
  %19 = load i32, i32* %l_tmp, align 4, !tbaa !5
  %and = and i32 %19, 127
  %20 = load i32, i32* %l_packet_len, align 4, !tbaa !5
  %or = or i32 %20, %and
  store i32 %or, i32* %l_packet_len, align 4, !tbaa !5
  %21 = load i32, i32* %l_tmp, align 4, !tbaa !5
  %and12 = and i32 %21, 128
  %tobool = icmp ne i32 %and12, 0
  br i1 %tobool, label %if.then.13, label %if.else

if.then.13:                                       ; preds = %for.body
  %22 = load i32, i32* %l_packet_len, align 4, !tbaa !5
  %shl = shl i32 %22, 7
  store i32 %shl, i32* %l_packet_len, align 4, !tbaa !5
  br label %if.end.14

if.else:                                          ; preds = %for.body
  store i32 0, i32* %l_packet_len, align 4, !tbaa !5
  br label %if.end.14

if.end.14:                                        ; preds = %if.else, %if.then.13
  br label %for.inc

for.inc:                                          ; preds = %if.end.14
  %23 = load i32, i32* %i, align 4, !tbaa !5
  %inc = add i32 %23, 1
  store i32 %inc, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %24 = load i32, i32* %l_packet_len, align 4, !tbaa !5
  %cmp15 = icmp ne i32 %24, 0
  br i1 %cmp15, label %if.then.16, label %if.end.18

if.then.16:                                       ; preds = %for.end
  %25 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call17 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %25, i32 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.80, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.18:                                        ; preds = %for.end
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.18, %if.then.16, %if.then
  %26 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %26) #1
  %27 = bitcast i32* %l_packet_len to i8*
  call void @llvm.lifetime.end(i64 4, i8* %27) #1
  %28 = bitcast i32* %l_tmp to i8*
  call void @llvm.lifetime.end(i64 4, i8* %28) #1
  %29 = bitcast i32* %l_Zplt to i8*
  call void @llvm.lifetime.end(i64 4, i8* %29) #1
  %30 = load i32, i32* %retval
  ret i32 %30
}

; Function Attrs: nounwind uwtable
define internal i32 @j2k_read_ppm_v3(%struct.opj_j2k* %p_j2k, i8* %p_header_data, i32 %p_header_size, %struct.opj_event_mgr* %p_manager) #0 {
entry:
  %retval = alloca i32, align 4
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %p_header_data.addr = alloca i8*, align 8
  %p_header_size.addr = alloca i32, align 4
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  %l_cp = alloca %struct.opj_cp*, align 8
  %l_remaining_data = alloca i32, align 4
  %l_Z_ppm = alloca i32, align 4
  %l_N_ppm = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %new_ppm_data = alloca i8*, align 8
  %new_ppm_data114 = alloca i8*, align 8
  %new_ppm_data161 = alloca i8*, align 8
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store i8* %p_header_data, i8** %p_header_data.addr, align 8, !tbaa !1
  store i32 %p_header_size, i32* %p_header_size.addr, align 4, !tbaa !5
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %0 = bitcast %struct.opj_cp** %l_cp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  store %struct.opj_cp* null, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %1 = bitcast i32* %l_remaining_data to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = bitcast i32* %l_Z_ppm to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #1
  %3 = bitcast i32* %l_N_ppm to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #1
  %4 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %cmp = icmp ne i8* %4, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.52, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 3480, i8* getelementptr inbounds ([86 x i8], [86 x i8]* @__PRETTY_FUNCTION__.j2k_read_ppm_v3, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %5, %cond.true
  %6 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cmp1 = icmp ne %struct.opj_j2k* %6, null
  br i1 %cmp1, label %cond.true.2, label %cond.false.3

cond.true.2:                                      ; preds = %cond.end
  br label %cond.end.4

cond.false.3:                                     ; preds = %cond.end
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 3481, i8* getelementptr inbounds ([86 x i8], [86 x i8]* @__PRETTY_FUNCTION__.j2k_read_ppm_v3, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.4

cond.end.4:                                       ; preds = %7, %cond.true.2
  %8 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %cmp5 = icmp ne %struct.opj_event_mgr* %8, null
  br i1 %cmp5, label %cond.true.6, label %cond.false.7

cond.true.6:                                      ; preds = %cond.end.4
  br label %cond.end.8

cond.false.7:                                     ; preds = %cond.end.4
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 3482, i8* getelementptr inbounds ([86 x i8], [86 x i8]* @__PRETTY_FUNCTION__.j2k_read_ppm_v3, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.8

cond.end.8:                                       ; preds = %9, %cond.true.6
  %10 = load i32, i32* %p_header_size.addr, align 4, !tbaa !5
  %cmp9 = icmp ult i32 %10, 1
  br i1 %cmp9, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end.8
  %11 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %11, i32 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.81, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.214

if.end:                                           ; preds = %cond.end.8
  %12 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %12, i32 0, i32 4
  store %struct.opj_cp* %m_cp, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %13 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %ppm = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %13, i32 0, i32 19
  %bf.load = load i8, i8* %ppm, align 8
  %bf.clear = and i8 %bf.load, -2
  %bf.set = or i8 %bf.clear, 1
  store i8 %bf.set, i8* %ppm, align 8
  %14 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  call void @opj_read_bytes_LE(i8* %14, i32* %l_Z_ppm, i32 1) #7
  %15 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr, i8** %p_header_data.addr, align 8, !tbaa !1
  %16 = load i32, i32* %p_header_size.addr, align 4, !tbaa !5
  %dec = add i32 %16, -1
  store i32 %dec, i32* %p_header_size.addr, align 4, !tbaa !5
  %17 = load i32, i32* %l_Z_ppm, align 4, !tbaa !5
  %cmp10 = icmp eq i32 %17, 0
  br i1 %cmp10, label %if.then.11, label %if.else

if.then.11:                                       ; preds = %if.end
  %18 = load i32, i32* %p_header_size.addr, align 4, !tbaa !5
  %cmp12 = icmp ult i32 %18, 4
  br i1 %cmp12, label %if.then.13, label %if.end.15

if.then.13:                                       ; preds = %if.then.11
  %19 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call14 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %19, i32 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.81, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.214

if.end.15:                                        ; preds = %if.then.11
  %20 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  call void @opj_read_bytes_LE(i8* %20, i32* %l_N_ppm, i32 4) #7
  %21 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %add.ptr = getelementptr inbounds i8, i8* %21, i64 4
  store i8* %add.ptr, i8** %p_header_data.addr, align 8, !tbaa !1
  %22 = load i32, i32* %p_header_size.addr, align 4, !tbaa !5
  %sub = sub i32 %22, 4
  store i32 %sub, i32* %p_header_size.addr, align 4, !tbaa !5
  %23 = load i32, i32* %l_N_ppm, align 4, !tbaa !5
  %24 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %ppm_len = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %24, i32 0, i32 9
  store i32 %23, i32* %ppm_len, align 4, !tbaa !79
  %25 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %ppm_data_read = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %25, i32 0, i32 10
  store i32 0, i32* %ppm_data_read, align 4, !tbaa !80
  %26 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %ppm_len16 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %26, i32 0, i32 9
  %27 = load i32, i32* %ppm_len16, align 4, !tbaa !79
  %conv = zext i32 %27 to i64
  %cmp17 = icmp uge i64 %conv, -256
  br i1 %cmp17, label %cond.true.19, label %cond.false.20

cond.true.19:                                     ; preds = %if.end.15
  br label %cond.end.24

cond.false.20:                                    ; preds = %if.end.15
  %28 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %ppm_len21 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %28, i32 0, i32 9
  %29 = load i32, i32* %ppm_len21, align 4, !tbaa !79
  %conv22 = zext i32 %29 to i64
  %call23 = call noalias i8* @malloc(i64 %conv22) #9
  br label %cond.end.24

cond.end.24:                                      ; preds = %cond.false.20, %cond.true.19
  %cond = phi i8* [ null, %cond.true.19 ], [ %call23, %cond.false.20 ]
  %30 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %ppm_data = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %30, i32 0, i32 8
  store i8* %cond, i8** %ppm_data, align 8, !tbaa !81
  %31 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %ppm_data25 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %31, i32 0, i32 8
  %32 = load i8*, i8** %ppm_data25, align 8, !tbaa !81
  %33 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %ppm_buffer = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %33, i32 0, i32 12
  store i8* %32, i8** %ppm_buffer, align 8, !tbaa !82
  %34 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %ppm_data26 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %34, i32 0, i32 8
  %35 = load i8*, i8** %ppm_data26, align 8, !tbaa !81
  %cmp27 = icmp eq i8* %35, null
  br i1 %cmp27, label %if.then.29, label %if.end.31

if.then.29:                                       ; preds = %cond.end.24
  %36 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call30 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %36, i32 1, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.82, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.214

if.end.31:                                        ; preds = %cond.end.24
  %37 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %ppm_data32 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %37, i32 0, i32 8
  %38 = load i8*, i8** %ppm_data32, align 8, !tbaa !81
  %39 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %ppm_len33 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %39, i32 0, i32 9
  %40 = load i32, i32* %ppm_len33, align 4, !tbaa !79
  %conv34 = zext i32 %40 to i64
  %call35 = call i8* @memset(i8* %38, i32 0, i64 %conv34) #9
  %41 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %ppm_data36 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %41, i32 0, i32 8
  %42 = load i8*, i8** %ppm_data36, align 8, !tbaa !81
  %43 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %ppm_data_current = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %43, i32 0, i32 11
  store i8* %42, i8** %ppm_data_current, align 8, !tbaa !83
  br label %if.end.95

if.else:                                          ; preds = %if.end
  %44 = load i32, i32* %p_header_size.addr, align 4, !tbaa !5
  %cmp37 = icmp ult i32 %44, 4
  br i1 %cmp37, label %if.then.39, label %if.else.41

if.then.39:                                       ; preds = %if.else
  %45 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call40 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %45, i32 2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.83, i32 0, i32 0)) #7
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.214

if.else.41:                                       ; preds = %if.else
  %46 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %ppm_data_read42 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %46, i32 0, i32 10
  %47 = load i32, i32* %ppm_data_read42, align 4, !tbaa !80
  %48 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %ppm_len43 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %48, i32 0, i32 9
  %49 = load i32, i32* %ppm_len43, align 4, !tbaa !79
  %cmp44 = icmp ult i32 %47, %49
  br i1 %cmp44, label %if.then.46, label %if.else.53

if.then.46:                                       ; preds = %if.else.41
  %50 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %ppm_data_read47 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %50, i32 0, i32 10
  %51 = load i32, i32* %ppm_data_read47, align 4, !tbaa !80
  %idxprom = zext i32 %51 to i64
  %52 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %ppm_data48 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %52, i32 0, i32 8
  %53 = load i8*, i8** %ppm_data48, align 8, !tbaa !81
  %arrayidx = getelementptr inbounds i8, i8* %53, i64 %idxprom
  %54 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %ppm_data_current49 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %54, i32 0, i32 11
  store i8* %arrayidx, i8** %ppm_data_current49, align 8, !tbaa !83
  %55 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %ppm_len50 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %55, i32 0, i32 9
  %56 = load i32, i32* %ppm_len50, align 4, !tbaa !79
  %57 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %ppm_data_read51 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %57, i32 0, i32 10
  %58 = load i32, i32* %ppm_data_read51, align 4, !tbaa !80
  %sub52 = sub i32 %56, %58
  store i32 %sub52, i32* %l_N_ppm, align 4, !tbaa !5
  br label %if.end.93

if.else.53:                                       ; preds = %if.else.41
  %59 = bitcast i8** %new_ppm_data to i8*
  call void @llvm.lifetime.start(i64 8, i8* %59) #1
  %60 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  call void @opj_read_bytes_LE(i8* %60, i32* %l_N_ppm, i32 4) #7
  %61 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %add.ptr54 = getelementptr inbounds i8, i8* %61, i64 4
  store i8* %add.ptr54, i8** %p_header_data.addr, align 8, !tbaa !1
  %62 = load i32, i32* %p_header_size.addr, align 4, !tbaa !5
  %sub55 = sub i32 %62, 4
  store i32 %sub55, i32* %p_header_size.addr, align 4, !tbaa !5
  %63 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %ppm_data56 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %63, i32 0, i32 8
  %64 = load i8*, i8** %ppm_data56, align 8, !tbaa !81
  %65 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %ppm_buffer57 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %65, i32 0, i32 12
  %66 = load i8*, i8** %ppm_buffer57, align 8, !tbaa !82
  %cmp58 = icmp eq i8* %64, %66
  br i1 %cmp58, label %land.lhs.true, label %cond.false.61

land.lhs.true:                                    ; preds = %if.else.53
  br i1 true, label %cond.true.60, label %cond.false.61

cond.true.60:                                     ; preds = %land.lhs.true
  br label %cond.end.62

cond.false.61:                                    ; preds = %land.lhs.true, %if.else.53
  call void @__assert_fail(i8* getelementptr inbounds ([105 x i8], [105 x i8]* @.str.85, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 3544, i8* getelementptr inbounds ([86 x i8], [86 x i8]* @__PRETTY_FUNCTION__.j2k_read_ppm_v3, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.62

cond.end.62:                                      ; preds = %67, %cond.true.60
  %68 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %ppm_len63 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %68, i32 0, i32 9
  %69 = load i32, i32* %ppm_len63, align 4, !tbaa !79
  %70 = load i32, i32* %l_N_ppm, align 4, !tbaa !5
  %add = add i32 %69, %70
  %conv64 = zext i32 %add to i64
  %cmp65 = icmp uge i64 %conv64, -256
  br i1 %cmp65, label %cond.true.67, label %cond.false.68

cond.true.67:                                     ; preds = %cond.end.62
  br label %cond.end.74

cond.false.68:                                    ; preds = %cond.end.62
  %71 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %ppm_data69 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %71, i32 0, i32 8
  %72 = load i8*, i8** %ppm_data69, align 8, !tbaa !81
  %73 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %ppm_len70 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %73, i32 0, i32 9
  %74 = load i32, i32* %ppm_len70, align 4, !tbaa !79
  %75 = load i32, i32* %l_N_ppm, align 4, !tbaa !5
  %add71 = add i32 %74, %75
  %conv72 = zext i32 %add71 to i64
  %call73 = call i8* @realloc(i8* %72, i64 %conv72) #9
  br label %cond.end.74

cond.end.74:                                      ; preds = %cond.false.68, %cond.true.67
  %cond75 = phi i8* [ null, %cond.true.67 ], [ %call73, %cond.false.68 ]
  store i8* %cond75, i8** %new_ppm_data, align 8, !tbaa !1
  %76 = load i8*, i8** %new_ppm_data, align 8, !tbaa !1
  %tobool = icmp ne i8* %76, null
  br i1 %tobool, label %if.end.82, label %if.then.76

if.then.76:                                       ; preds = %cond.end.74
  %77 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %ppm_data77 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %77, i32 0, i32 8
  %78 = load i8*, i8** %ppm_data77, align 8, !tbaa !81
  call void @free(i8* %78) #9
  %79 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %ppm_data78 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %79, i32 0, i32 8
  store i8* null, i8** %ppm_data78, align 8, !tbaa !81
  %80 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %ppm_buffer79 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %80, i32 0, i32 12
  store i8* null, i8** %ppm_buffer79, align 8, !tbaa !82
  %81 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %ppm_len80 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %81, i32 0, i32 9
  store i32 0, i32* %ppm_len80, align 4, !tbaa !79
  %82 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call81 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %82, i32 1, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.86, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.82:                                        ; preds = %cond.end.74
  %83 = load i8*, i8** %new_ppm_data, align 8, !tbaa !1
  %84 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %ppm_data83 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %84, i32 0, i32 8
  store i8* %83, i8** %ppm_data83, align 8, !tbaa !81
  %85 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %ppm_data84 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %85, i32 0, i32 8
  %86 = load i8*, i8** %ppm_data84, align 8, !tbaa !81
  %87 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %ppm_buffer85 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %87, i32 0, i32 12
  store i8* %86, i8** %ppm_buffer85, align 8, !tbaa !82
  %88 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %ppm_len86 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %88, i32 0, i32 9
  %89 = load i32, i32* %ppm_len86, align 4, !tbaa !79
  %idxprom87 = zext i32 %89 to i64
  %90 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %ppm_data88 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %90, i32 0, i32 8
  %91 = load i8*, i8** %ppm_data88, align 8, !tbaa !81
  %arrayidx89 = getelementptr inbounds i8, i8* %91, i64 %idxprom87
  %92 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %ppm_data_current90 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %92, i32 0, i32 11
  store i8* %arrayidx89, i8** %ppm_data_current90, align 8, !tbaa !83
  %93 = load i32, i32* %l_N_ppm, align 4, !tbaa !5
  %94 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %ppm_len91 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %94, i32 0, i32 9
  %95 = load i32, i32* %ppm_len91, align 4, !tbaa !79
  %add92 = add i32 %95, %93
  store i32 %add92, i32* %ppm_len91, align 4, !tbaa !79
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.82, %if.then.76
  %96 = bitcast i8** %new_ppm_data to i8*
  call void @llvm.lifetime.end(i64 8, i8* %96) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.214 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.93

if.end.93:                                        ; preds = %cleanup.cont, %if.then.46
  br label %if.end.94

if.end.94:                                        ; preds = %if.end.93
  br label %if.end.95

if.end.95:                                        ; preds = %if.end.94, %if.end.31
  %97 = load i32, i32* %p_header_size.addr, align 4, !tbaa !5
  store i32 %97, i32* %l_remaining_data, align 4, !tbaa !5
  br label %while.cond

while.cond:                                       ; preds = %if.end.158, %if.end.95
  %98 = load i32, i32* %l_remaining_data, align 4, !tbaa !5
  %99 = load i32, i32* %l_N_ppm, align 4, !tbaa !5
  %cmp96 = icmp uge i32 %98, %99
  br i1 %cmp96, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %100 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %ppm_data_current98 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %100, i32 0, i32 11
  %101 = load i8*, i8** %ppm_data_current98, align 8, !tbaa !83
  %102 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %103 = load i32, i32* %l_N_ppm, align 4, !tbaa !5
  %conv99 = zext i32 %103 to i64
  %call100 = call i8* @memcpy(i8* %101, i8* %102, i64 %conv99) #9
  %104 = load i32, i32* %l_N_ppm, align 4, !tbaa !5
  %105 = load i32, i32* %p_header_size.addr, align 4, !tbaa !5
  %sub101 = sub i32 %105, %104
  store i32 %sub101, i32* %p_header_size.addr, align 4, !tbaa !5
  %106 = load i32, i32* %l_N_ppm, align 4, !tbaa !5
  %107 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %idx.ext = zext i32 %106 to i64
  %add.ptr102 = getelementptr inbounds i8, i8* %107, i64 %idx.ext
  store i8* %add.ptr102, i8** %p_header_data.addr, align 8, !tbaa !1
  %108 = load i32, i32* %l_N_ppm, align 4, !tbaa !5
  %109 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %ppm_data_read103 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %109, i32 0, i32 10
  %110 = load i32, i32* %ppm_data_read103, align 4, !tbaa !80
  %add104 = add i32 %110, %108
  store i32 %add104, i32* %ppm_data_read103, align 4, !tbaa !80
  %111 = load i32, i32* %p_header_size.addr, align 4, !tbaa !5
  %tobool105 = icmp ne i32 %111, 0
  br i1 %tobool105, label %if.then.106, label %if.else.109

if.then.106:                                      ; preds = %while.body
  %112 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  call void @opj_read_bytes_LE(i8* %112, i32* %l_N_ppm, i32 4) #7
  %113 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %add.ptr107 = getelementptr inbounds i8, i8* %113, i64 4
  store i8* %add.ptr107, i8** %p_header_data.addr, align 8, !tbaa !1
  %114 = load i32, i32* %p_header_size.addr, align 4, !tbaa !5
  %sub108 = sub i32 %114, 4
  store i32 %sub108, i32* %p_header_size.addr, align 4, !tbaa !5
  br label %if.end.110

if.else.109:                                      ; preds = %while.body
  %115 = load i32, i32* %p_header_size.addr, align 4, !tbaa !5
  store i32 %115, i32* %l_remaining_data, align 4, !tbaa !5
  br label %while.end

if.end.110:                                       ; preds = %if.then.106
  %116 = load i32, i32* %p_header_size.addr, align 4, !tbaa !5
  store i32 %116, i32* %l_remaining_data, align 4, !tbaa !5
  %117 = load i32, i32* %l_remaining_data, align 4, !tbaa !5
  %118 = load i32, i32* %l_N_ppm, align 4, !tbaa !5
  %cmp111 = icmp ugt i32 %117, %118
  br i1 %cmp111, label %if.then.113, label %if.end.158

if.then.113:                                      ; preds = %if.end.110
  %119 = bitcast i8** %new_ppm_data114 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %119) #1
  %120 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %ppm_data115 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %120, i32 0, i32 8
  %121 = load i8*, i8** %ppm_data115, align 8, !tbaa !81
  %122 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %ppm_buffer116 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %122, i32 0, i32 12
  %123 = load i8*, i8** %ppm_buffer116, align 8, !tbaa !82
  %cmp117 = icmp eq i8* %121, %123
  br i1 %cmp117, label %land.lhs.true.119, label %cond.false.121

land.lhs.true.119:                                ; preds = %if.then.113
  br i1 true, label %cond.true.120, label %cond.false.121

cond.true.120:                                    ; preds = %land.lhs.true.119
  br label %cond.end.122

cond.false.121:                                   ; preds = %land.lhs.true.119, %if.then.113
  call void @__assert_fail(i8* getelementptr inbounds ([105 x i8], [105 x i8]* @.str.85, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 3591, i8* getelementptr inbounds ([86 x i8], [86 x i8]* @__PRETTY_FUNCTION__.j2k_read_ppm_v3, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.122

cond.end.122:                                     ; preds = %124, %cond.true.120
  %125 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %ppm_len123 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %125, i32 0, i32 9
  %126 = load i32, i32* %ppm_len123, align 4, !tbaa !79
  %127 = load i32, i32* %l_N_ppm, align 4, !tbaa !5
  %add124 = add i32 %126, %127
  %conv125 = zext i32 %add124 to i64
  %cmp126 = icmp uge i64 %conv125, -256
  br i1 %cmp126, label %cond.true.128, label %cond.false.129

cond.true.128:                                    ; preds = %cond.end.122
  br label %cond.end.135

cond.false.129:                                   ; preds = %cond.end.122
  %128 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %ppm_data130 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %128, i32 0, i32 8
  %129 = load i8*, i8** %ppm_data130, align 8, !tbaa !81
  %130 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %ppm_len131 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %130, i32 0, i32 9
  %131 = load i32, i32* %ppm_len131, align 4, !tbaa !79
  %132 = load i32, i32* %l_N_ppm, align 4, !tbaa !5
  %add132 = add i32 %131, %132
  %conv133 = zext i32 %add132 to i64
  %call134 = call i8* @realloc(i8* %129, i64 %conv133) #9
  br label %cond.end.135

cond.end.135:                                     ; preds = %cond.false.129, %cond.true.128
  %cond136 = phi i8* [ null, %cond.true.128 ], [ %call134, %cond.false.129 ]
  store i8* %cond136, i8** %new_ppm_data114, align 8, !tbaa !1
  %133 = load i8*, i8** %new_ppm_data114, align 8, !tbaa !1
  %tobool137 = icmp ne i8* %133, null
  br i1 %tobool137, label %if.end.144, label %if.then.138

if.then.138:                                      ; preds = %cond.end.135
  %134 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %ppm_data139 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %134, i32 0, i32 8
  %135 = load i8*, i8** %ppm_data139, align 8, !tbaa !81
  call void @free(i8* %135) #9
  %136 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %ppm_data140 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %136, i32 0, i32 8
  store i8* null, i8** %ppm_data140, align 8, !tbaa !81
  %137 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %ppm_buffer141 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %137, i32 0, i32 12
  store i8* null, i8** %ppm_buffer141, align 8, !tbaa !82
  %138 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %ppm_len142 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %138, i32 0, i32 9
  store i32 0, i32* %ppm_len142, align 4, !tbaa !79
  %139 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call143 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %139, i32 1, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.87, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.155

if.end.144:                                       ; preds = %cond.end.135
  %140 = load i8*, i8** %new_ppm_data114, align 8, !tbaa !1
  %141 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %ppm_data145 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %141, i32 0, i32 8
  store i8* %140, i8** %ppm_data145, align 8, !tbaa !81
  %142 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %ppm_data146 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %142, i32 0, i32 8
  %143 = load i8*, i8** %ppm_data146, align 8, !tbaa !81
  %144 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %ppm_buffer147 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %144, i32 0, i32 12
  store i8* %143, i8** %ppm_buffer147, align 8, !tbaa !82
  %145 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %ppm_len148 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %145, i32 0, i32 9
  %146 = load i32, i32* %ppm_len148, align 4, !tbaa !79
  %idxprom149 = zext i32 %146 to i64
  %147 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %ppm_data150 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %147, i32 0, i32 8
  %148 = load i8*, i8** %ppm_data150, align 8, !tbaa !81
  %arrayidx151 = getelementptr inbounds i8, i8* %148, i64 %idxprom149
  %149 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %ppm_data_current152 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %149, i32 0, i32 11
  store i8* %arrayidx151, i8** %ppm_data_current152, align 8, !tbaa !83
  %150 = load i32, i32* %l_N_ppm, align 4, !tbaa !5
  %151 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %ppm_len153 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %151, i32 0, i32 9
  %152 = load i32, i32* %ppm_len153, align 4, !tbaa !79
  %add154 = add i32 %152, %150
  store i32 %add154, i32* %ppm_len153, align 4, !tbaa !79
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.155

cleanup.155:                                      ; preds = %if.end.144, %if.then.138
  %153 = bitcast i8** %new_ppm_data114 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %153) #1
  %cleanup.dest.156 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.156, label %cleanup.214 [
    i32 0, label %cleanup.cont.157
  ]

cleanup.cont.157:                                 ; preds = %cleanup.155
  br label %if.end.158

if.end.158:                                       ; preds = %cleanup.cont.157, %if.end.110
  br label %while.cond

while.end:                                        ; preds = %if.else.109, %while.cond
  %154 = load i32, i32* %l_remaining_data, align 4, !tbaa !5
  %tobool159 = icmp ne i32 %154, 0
  br i1 %tobool159, label %if.then.160, label %if.end.213

if.then.160:                                      ; preds = %while.end
  %155 = bitcast i8** %new_ppm_data161 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %155) #1
  %156 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %ppm_data162 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %156, i32 0, i32 8
  %157 = load i8*, i8** %ppm_data162, align 8, !tbaa !81
  %158 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %ppm_buffer163 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %158, i32 0, i32 12
  %159 = load i8*, i8** %ppm_buffer163, align 8, !tbaa !82
  %cmp164 = icmp eq i8* %157, %159
  br i1 %cmp164, label %land.lhs.true.166, label %cond.false.168

land.lhs.true.166:                                ; preds = %if.then.160
  br i1 true, label %cond.true.167, label %cond.false.168

cond.true.167:                                    ; preds = %land.lhs.true.166
  br label %cond.end.169

cond.false.168:                                   ; preds = %land.lhs.true.166, %if.then.160
  call void @__assert_fail(i8* getelementptr inbounds ([105 x i8], [105 x i8]* @.str.85, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 3614, i8* getelementptr inbounds ([86 x i8], [86 x i8]* @__PRETTY_FUNCTION__.j2k_read_ppm_v3, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.169

cond.end.169:                                     ; preds = %160, %cond.true.167
  %161 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %ppm_len170 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %161, i32 0, i32 9
  %162 = load i32, i32* %ppm_len170, align 4, !tbaa !79
  %163 = load i32, i32* %l_N_ppm, align 4, !tbaa !5
  %add171 = add i32 %162, %163
  %conv172 = zext i32 %add171 to i64
  %cmp173 = icmp uge i64 %conv172, -256
  br i1 %cmp173, label %cond.true.175, label %cond.false.176

cond.true.175:                                    ; preds = %cond.end.169
  br label %cond.end.182

cond.false.176:                                   ; preds = %cond.end.169
  %164 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %ppm_data177 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %164, i32 0, i32 8
  %165 = load i8*, i8** %ppm_data177, align 8, !tbaa !81
  %166 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %ppm_len178 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %166, i32 0, i32 9
  %167 = load i32, i32* %ppm_len178, align 4, !tbaa !79
  %168 = load i32, i32* %l_N_ppm, align 4, !tbaa !5
  %add179 = add i32 %167, %168
  %conv180 = zext i32 %add179 to i64
  %call181 = call i8* @realloc(i8* %165, i64 %conv180) #9
  br label %cond.end.182

cond.end.182:                                     ; preds = %cond.false.176, %cond.true.175
  %cond183 = phi i8* [ null, %cond.true.175 ], [ %call181, %cond.false.176 ]
  store i8* %cond183, i8** %new_ppm_data161, align 8, !tbaa !1
  %169 = load i8*, i8** %new_ppm_data161, align 8, !tbaa !1
  %tobool184 = icmp ne i8* %169, null
  br i1 %tobool184, label %if.end.191, label %if.then.185

if.then.185:                                      ; preds = %cond.end.182
  %170 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %ppm_data186 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %170, i32 0, i32 8
  %171 = load i8*, i8** %ppm_data186, align 8, !tbaa !81
  call void @free(i8* %171) #9
  %172 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %ppm_data187 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %172, i32 0, i32 8
  store i8* null, i8** %ppm_data187, align 8, !tbaa !81
  %173 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %ppm_buffer188 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %173, i32 0, i32 12
  store i8* null, i8** %ppm_buffer188, align 8, !tbaa !82
  %174 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %ppm_len189 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %174, i32 0, i32 9
  store i32 0, i32* %ppm_len189, align 4, !tbaa !79
  %175 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call190 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %175, i32 1, i8* getelementptr inbounds ([92 x i8], [92 x i8]* @.str.88, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.210

if.end.191:                                       ; preds = %cond.end.182
  %176 = load i8*, i8** %new_ppm_data161, align 8, !tbaa !1
  %177 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %ppm_data192 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %177, i32 0, i32 8
  store i8* %176, i8** %ppm_data192, align 8, !tbaa !81
  %178 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %ppm_data193 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %178, i32 0, i32 8
  %179 = load i8*, i8** %ppm_data193, align 8, !tbaa !81
  %180 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %ppm_buffer194 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %180, i32 0, i32 12
  store i8* %179, i8** %ppm_buffer194, align 8, !tbaa !82
  %181 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %ppm_len195 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %181, i32 0, i32 9
  %182 = load i32, i32* %ppm_len195, align 4, !tbaa !79
  %idxprom196 = zext i32 %182 to i64
  %183 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %ppm_data197 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %183, i32 0, i32 8
  %184 = load i8*, i8** %ppm_data197, align 8, !tbaa !81
  %arrayidx198 = getelementptr inbounds i8, i8* %184, i64 %idxprom196
  %185 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %ppm_data_current199 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %185, i32 0, i32 11
  store i8* %arrayidx198, i8** %ppm_data_current199, align 8, !tbaa !83
  %186 = load i32, i32* %l_N_ppm, align 4, !tbaa !5
  %187 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %ppm_len200 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %187, i32 0, i32 9
  %188 = load i32, i32* %ppm_len200, align 4, !tbaa !79
  %add201 = add i32 %188, %186
  store i32 %add201, i32* %ppm_len200, align 4, !tbaa !79
  %189 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %ppm_data_current202 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %189, i32 0, i32 11
  %190 = load i8*, i8** %ppm_data_current202, align 8, !tbaa !83
  %191 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %192 = load i32, i32* %l_remaining_data, align 4, !tbaa !5
  %conv203 = zext i32 %192 to i64
  %call204 = call i8* @memcpy(i8* %190, i8* %191, i64 %conv203) #9
  %193 = load i32, i32* %l_remaining_data, align 4, !tbaa !5
  %194 = load i32, i32* %p_header_size.addr, align 4, !tbaa !5
  %sub205 = sub i32 %194, %193
  store i32 %sub205, i32* %p_header_size.addr, align 4, !tbaa !5
  %195 = load i32, i32* %l_remaining_data, align 4, !tbaa !5
  %196 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %idx.ext206 = zext i32 %195 to i64
  %add.ptr207 = getelementptr inbounds i8, i8* %196, i64 %idx.ext206
  store i8* %add.ptr207, i8** %p_header_data.addr, align 8, !tbaa !1
  %197 = load i32, i32* %l_remaining_data, align 4, !tbaa !5
  %198 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %ppm_data_read208 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %198, i32 0, i32 10
  %199 = load i32, i32* %ppm_data_read208, align 4, !tbaa !80
  %add209 = add i32 %199, %197
  store i32 %add209, i32* %ppm_data_read208, align 4, !tbaa !80
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.210

cleanup.210:                                      ; preds = %if.end.191, %if.then.185
  %200 = bitcast i8** %new_ppm_data161 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %200) #1
  %cleanup.dest.211 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.211, label %cleanup.214 [
    i32 0, label %cleanup.cont.212
  ]

cleanup.cont.212:                                 ; preds = %cleanup.210
  br label %if.end.213

if.end.213:                                       ; preds = %cleanup.cont.212, %while.end
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.214

cleanup.214:                                      ; preds = %if.end.213, %cleanup.210, %cleanup.155, %cleanup, %if.then.39, %if.then.29, %if.then.13, %if.then
  %201 = bitcast i32* %l_N_ppm to i8*
  call void @llvm.lifetime.end(i64 4, i8* %201) #1
  %202 = bitcast i32* %l_Z_ppm to i8*
  call void @llvm.lifetime.end(i64 4, i8* %202) #1
  %203 = bitcast i32* %l_remaining_data to i8*
  call void @llvm.lifetime.end(i64 4, i8* %203) #1
  %204 = bitcast %struct.opj_cp** %l_cp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %204) #1
  %205 = load i32, i32* %retval
  ret i32 %205
}

; Function Attrs: nounwind uwtable
define internal i32 @opj_j2k_read_ppt(%struct.opj_j2k* %p_j2k, i8* %p_header_data, i32 %p_header_size, %struct.opj_event_mgr* %p_manager) #0 {
entry:
  %retval = alloca i32, align 4
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %p_header_data.addr = alloca i8*, align 8
  %p_header_size.addr = alloca i32, align 4
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  %l_cp = alloca %struct.opj_cp*, align 8
  %l_tcp = alloca %struct.opj_tcp*, align 8
  %l_Z_ppt = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %new_ppt_buffer = alloca i8*, align 8
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store i8* %p_header_data, i8** %p_header_data.addr, align 8, !tbaa !1
  store i32 %p_header_size, i32* %p_header_size.addr, align 4, !tbaa !5
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %0 = bitcast %struct.opj_cp** %l_cp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  store %struct.opj_cp* null, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %1 = bitcast %struct.opj_tcp** %l_tcp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #1
  store %struct.opj_tcp* null, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %2 = bitcast i32* %l_Z_ppt to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #1
  %3 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %cmp = icmp ne i8* %3, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.52, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 3707, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @__PRETTY_FUNCTION__.opj_j2k_read_ppt, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %4, %cond.true
  %5 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cmp1 = icmp ne %struct.opj_j2k* %5, null
  br i1 %cmp1, label %cond.true.2, label %cond.false.3

cond.true.2:                                      ; preds = %cond.end
  br label %cond.end.4

cond.false.3:                                     ; preds = %cond.end
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 3708, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @__PRETTY_FUNCTION__.opj_j2k_read_ppt, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.4

cond.end.4:                                       ; preds = %6, %cond.true.2
  %7 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %cmp5 = icmp ne %struct.opj_event_mgr* %7, null
  br i1 %cmp5, label %cond.true.6, label %cond.false.7

cond.true.6:                                      ; preds = %cond.end.4
  br label %cond.end.8

cond.false.7:                                     ; preds = %cond.end.4
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 3709, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @__PRETTY_FUNCTION__.opj_j2k_read_ppt, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.8

cond.end.8:                                       ; preds = %8, %cond.true.6
  %9 = load i32, i32* %p_header_size.addr, align 4, !tbaa !5
  %cmp9 = icmp ult i32 %9, 1
  br i1 %cmp9, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end.8
  %10 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %10, i32 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.89, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.73

if.end:                                           ; preds = %cond.end.8
  %11 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %11, i32 0, i32 4
  store %struct.opj_cp* %m_cp, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %12 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %ppm = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %12, i32 0, i32 19
  %bf.load = load i8, i8* %ppm, align 8
  %bf.clear = and i8 %bf.load, 1
  %bf.cast = zext i8 %bf.clear to i32
  %tobool = icmp ne i32 %bf.cast, 0
  br i1 %tobool, label %if.then.10, label %if.end.12

if.then.10:                                       ; preds = %if.end
  %13 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call11 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %13, i32 1, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @.str.90, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.73

if.end.12:                                        ; preds = %if.end
  %14 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %14, i32 0, i32 8
  %15 = load i32, i32* %m_current_tile_number, align 4, !tbaa !11
  %idxprom = zext i32 %15 to i64
  %16 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %tcps = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %16, i32 0, i32 17
  %17 = load %struct.opj_tcp*, %struct.opj_tcp** %tcps, align 8, !tbaa !16
  %arrayidx = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %17, i64 %idxprom
  store %struct.opj_tcp* %arrayidx, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %18 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %ppt = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %18, i32 0, i32 26
  %bf.load13 = load i8, i8* %ppt, align 8
  %bf.clear14 = and i8 %bf.load13, -2
  %bf.set = or i8 %bf.clear14, 1
  store i8 %bf.set, i8* %ppt, align 8
  %19 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  call void @opj_read_bytes_LE(i8* %19, i32* %l_Z_ppt, i32 1) #7
  %20 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds i8, i8* %20, i32 1
  store i8* %incdec.ptr, i8** %p_header_data.addr, align 8, !tbaa !1
  %21 = load i32, i32* %p_header_size.addr, align 4, !tbaa !5
  %dec = add i32 %21, -1
  store i32 %dec, i32* %p_header_size.addr, align 4, !tbaa !5
  %22 = load i32, i32* %l_Z_ppt, align 4, !tbaa !5
  %cmp15 = icmp eq i32 %22, 0
  br i1 %cmp15, label %if.then.16, label %if.else

if.then.16:                                       ; preds = %if.end.12
  %23 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %ppt_data_size = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %23, i32 0, i32 10
  store i32 0, i32* %ppt_data_size, align 4, !tbaa !84
  %24 = load i32, i32* %p_header_size.addr, align 4, !tbaa !5
  %25 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %ppt_len = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %25, i32 0, i32 11
  store i32 %24, i32* %ppt_len, align 4, !tbaa !85
  %26 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %ppt_len17 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %26, i32 0, i32 11
  %27 = load i32, i32* %ppt_len17, align 4, !tbaa !85
  %conv = zext i32 %27 to i64
  %cmp18 = icmp ne i64 %conv, 0
  br i1 %cmp18, label %land.lhs.true, label %cond.false.25

land.lhs.true:                                    ; preds = %if.then.16
  %28 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %ppt_len20 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %28, i32 0, i32 11
  %29 = load i32, i32* %ppt_len20, align 4, !tbaa !85
  %conv21 = zext i32 %29 to i64
  %cmp22 = icmp uge i64 %conv21, -256
  br i1 %cmp22, label %cond.true.24, label %cond.false.25

cond.true.24:                                     ; preds = %land.lhs.true
  br label %cond.end.29

cond.false.25:                                    ; preds = %land.lhs.true, %if.then.16
  %30 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %ppt_len26 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %30, i32 0, i32 11
  %31 = load i32, i32* %ppt_len26, align 4, !tbaa !85
  %conv27 = zext i32 %31 to i64
  %call28 = call noalias i8* @calloc(i64 %conv27, i64 1) #9
  br label %cond.end.29

cond.end.29:                                      ; preds = %cond.false.25, %cond.true.24
  %cond = phi i8* [ null, %cond.true.24 ], [ %call28, %cond.false.25 ]
  %32 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %ppt_buffer = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %32, i32 0, i32 9
  store i8* %cond, i8** %ppt_buffer, align 8, !tbaa !86
  %33 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %ppt_buffer30 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %33, i32 0, i32 9
  %34 = load i8*, i8** %ppt_buffer30, align 8, !tbaa !86
  %cmp31 = icmp eq i8* %34, null
  br i1 %cmp31, label %if.then.33, label %if.end.35

if.then.33:                                       ; preds = %cond.end.29
  %35 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call34 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %35, i32 1, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.91, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.73

if.end.35:                                        ; preds = %cond.end.29
  %36 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %ppt_buffer36 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %36, i32 0, i32 9
  %37 = load i8*, i8** %ppt_buffer36, align 8, !tbaa !86
  %38 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %ppt_data = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %38, i32 0, i32 8
  store i8* %37, i8** %ppt_data, align 8, !tbaa !87
  br label %if.end.64

if.else:                                          ; preds = %if.end.12
  %39 = bitcast i8** %new_ppt_buffer to i8*
  call void @llvm.lifetime.start(i64 8, i8* %39) #1
  %40 = load i32, i32* %p_header_size.addr, align 4, !tbaa !5
  %41 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %ppt_len37 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %41, i32 0, i32 11
  %42 = load i32, i32* %ppt_len37, align 4, !tbaa !85
  %add = add i32 %42, %40
  store i32 %add, i32* %ppt_len37, align 4, !tbaa !85
  %43 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %ppt_len38 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %43, i32 0, i32 11
  %44 = load i32, i32* %ppt_len38, align 4, !tbaa !85
  %conv39 = zext i32 %44 to i64
  %cmp40 = icmp uge i64 %conv39, -256
  br i1 %cmp40, label %cond.true.42, label %cond.false.43

cond.true.42:                                     ; preds = %if.else
  br label %cond.end.48

cond.false.43:                                    ; preds = %if.else
  %45 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %ppt_buffer44 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %45, i32 0, i32 9
  %46 = load i8*, i8** %ppt_buffer44, align 8, !tbaa !86
  %47 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %ppt_len45 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %47, i32 0, i32 11
  %48 = load i32, i32* %ppt_len45, align 4, !tbaa !85
  %conv46 = zext i32 %48 to i64
  %call47 = call i8* @realloc(i8* %46, i64 %conv46) #9
  br label %cond.end.48

cond.end.48:                                      ; preds = %cond.false.43, %cond.true.42
  %cond49 = phi i8* [ null, %cond.true.42 ], [ %call47, %cond.false.43 ]
  store i8* %cond49, i8** %new_ppt_buffer, align 8, !tbaa !1
  %49 = load i8*, i8** %new_ppt_buffer, align 8, !tbaa !1
  %tobool50 = icmp ne i8* %49, null
  br i1 %tobool50, label %if.end.56, label %if.then.51

if.then.51:                                       ; preds = %cond.end.48
  %50 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %ppt_buffer52 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %50, i32 0, i32 9
  %51 = load i8*, i8** %ppt_buffer52, align 8, !tbaa !86
  call void @free(i8* %51) #9
  %52 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %ppt_buffer53 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %52, i32 0, i32 9
  store i8* null, i8** %ppt_buffer53, align 8, !tbaa !86
  %53 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %ppt_len54 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %53, i32 0, i32 11
  store i32 0, i32* %ppt_len54, align 4, !tbaa !85
  %54 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call55 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %54, i32 1, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.91, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.56:                                        ; preds = %cond.end.48
  %55 = load i8*, i8** %new_ppt_buffer, align 8, !tbaa !1
  %56 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %ppt_buffer57 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %56, i32 0, i32 9
  store i8* %55, i8** %ppt_buffer57, align 8, !tbaa !86
  %57 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %ppt_buffer58 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %57, i32 0, i32 9
  %58 = load i8*, i8** %ppt_buffer58, align 8, !tbaa !86
  %59 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %ppt_data59 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %59, i32 0, i32 8
  store i8* %58, i8** %ppt_data59, align 8, !tbaa !87
  %60 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %ppt_buffer60 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %60, i32 0, i32 9
  %61 = load i8*, i8** %ppt_buffer60, align 8, !tbaa !86
  %62 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %ppt_data_size61 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %62, i32 0, i32 10
  %63 = load i32, i32* %ppt_data_size61, align 4, !tbaa !84
  %idx.ext = zext i32 %63 to i64
  %add.ptr = getelementptr inbounds i8, i8* %61, i64 %idx.ext
  %64 = load i32, i32* %p_header_size.addr, align 4, !tbaa !5
  %conv62 = zext i32 %64 to i64
  %call63 = call i8* @memset(i8* %add.ptr, i32 0, i64 %conv62) #9
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.56, %if.then.51
  %65 = bitcast i8** %new_ppt_buffer to i8*
  call void @llvm.lifetime.end(i64 8, i8* %65) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.73 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.64

if.end.64:                                        ; preds = %cleanup.cont, %if.end.35
  %66 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %ppt_buffer65 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %66, i32 0, i32 9
  %67 = load i8*, i8** %ppt_buffer65, align 8, !tbaa !86
  %68 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %ppt_data_size66 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %68, i32 0, i32 10
  %69 = load i32, i32* %ppt_data_size66, align 4, !tbaa !84
  %idx.ext67 = zext i32 %69 to i64
  %add.ptr68 = getelementptr inbounds i8, i8* %67, i64 %idx.ext67
  %70 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %71 = load i32, i32* %p_header_size.addr, align 4, !tbaa !5
  %conv69 = zext i32 %71 to i64
  %call70 = call i8* @memcpy(i8* %add.ptr68, i8* %70, i64 %conv69) #9
  %72 = load i32, i32* %p_header_size.addr, align 4, !tbaa !5
  %73 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %ppt_data_size71 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %73, i32 0, i32 10
  %74 = load i32, i32* %ppt_data_size71, align 4, !tbaa !84
  %add72 = add i32 %74, %72
  store i32 %add72, i32* %ppt_data_size71, align 4, !tbaa !84
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.73

cleanup.73:                                       ; preds = %if.end.64, %cleanup, %if.then.33, %if.then.10, %if.then
  %75 = bitcast i32* %l_Z_ppt to i8*
  call void @llvm.lifetime.end(i64 4, i8* %75) #1
  %76 = bitcast %struct.opj_tcp** %l_tcp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %76) #1
  %77 = bitcast %struct.opj_cp** %l_cp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %77) #1
  %78 = load i32, i32* %retval
  ret i32 %78
}

; Function Attrs: nounwind uwtable
define internal i32 @opj_j2k_read_crg(%struct.opj_j2k* %p_j2k, i8* %p_header_data, i32 %p_header_size, %struct.opj_event_mgr* %p_manager) #0 {
entry:
  %retval = alloca i32, align 4
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %p_header_data.addr = alloca i8*, align 8
  %p_header_size.addr = alloca i32, align 4
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  %l_nb_comp = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store i8* %p_header_data, i8** %p_header_data.addr, align 8, !tbaa !1
  store i32 %p_header_size, i32* %p_header_size.addr, align 4, !tbaa !5
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %0 = bitcast i32* %l_nb_comp to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %cmp = icmp ne i8* %1, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.52, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 3164, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @__PRETTY_FUNCTION__.opj_j2k_read_crg, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %2, %cond.true
  %3 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cmp1 = icmp ne %struct.opj_j2k* %3, null
  br i1 %cmp1, label %cond.true.2, label %cond.false.3

cond.true.2:                                      ; preds = %cond.end
  br label %cond.end.4

cond.false.3:                                     ; preds = %cond.end
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 3165, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @__PRETTY_FUNCTION__.opj_j2k_read_crg, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.4

cond.end.4:                                       ; preds = %4, %cond.true.2
  %5 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %cmp5 = icmp ne %struct.opj_event_mgr* %5, null
  br i1 %cmp5, label %cond.true.6, label %cond.false.7

cond.true.6:                                      ; preds = %cond.end.4
  br label %cond.end.8

cond.false.7:                                     ; preds = %cond.end.4
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 3166, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @__PRETTY_FUNCTION__.opj_j2k_read_crg, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.8

cond.end.8:                                       ; preds = %6, %cond.true.6
  %7 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_private_image = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %7, i32 0, i32 2
  %8 = load %struct.opj_image*, %struct.opj_image** %m_private_image, align 8, !tbaa !38
  %numcomps = getelementptr inbounds %struct.opj_image, %struct.opj_image* %8, i32 0, i32 4
  %9 = load i32, i32* %numcomps, align 4, !tbaa !45
  store i32 %9, i32* %l_nb_comp, align 4, !tbaa !5
  %10 = load i32, i32* %p_header_size.addr, align 4, !tbaa !5
  %11 = load i32, i32* %l_nb_comp, align 4, !tbaa !5
  %mul = mul i32 %11, 4
  %cmp9 = icmp ne i32 %10, %mul
  br i1 %cmp9, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end.8
  %12 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %12, i32 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.77, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %cond.end.8
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  %13 = bitcast i32* %l_nb_comp to i8*
  call void @llvm.lifetime.end(i64 4, i8* %13) #1
  %14 = load i32, i32* %retval
  ret i32 %14
}

; Function Attrs: nounwind uwtable
define internal i32 @opj_j2k_read_com(%struct.opj_j2k* %p_j2k, i8* %p_header_data, i32 %p_header_size, %struct.opj_event_mgr* %p_manager) #0 {
entry:
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %p_header_data.addr = alloca i8*, align 8
  %p_header_size.addr = alloca i32, align 4
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store i8* %p_header_data, i8** %p_header_data.addr, align 8, !tbaa !1
  store i32 %p_header_size, i32* %p_header_size.addr, align 4, !tbaa !5
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %0 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cmp = icmp ne %struct.opj_j2k* %0, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 2266, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @__PRETTY_FUNCTION__.opj_j2k_read_com, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %1, %cond.true
  %2 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %cmp1 = icmp ne %struct.opj_event_mgr* %2, null
  br i1 %cmp1, label %cond.true.2, label %cond.false.3

cond.true.2:                                      ; preds = %cond.end
  br label %cond.end.4

cond.false.3:                                     ; preds = %cond.end
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 2267, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @__PRETTY_FUNCTION__.opj_j2k_read_com, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.4

cond.end.4:                                       ; preds = %3, %cond.true.2
  %4 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %cmp5 = icmp ne i8* %4, null
  br i1 %cmp5, label %cond.true.6, label %cond.false.7

cond.true.6:                                      ; preds = %cond.end.4
  br label %cond.end.8

cond.false.7:                                     ; preds = %cond.end.4
  call void @__assert_fail(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.52, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 2268, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @__PRETTY_FUNCTION__.opj_j2k_read_com, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.8

cond.end.8:                                       ; preds = %5, %cond.true.6
  %6 = load i32, i32* %p_header_size.addr, align 4, !tbaa !5
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @opj_j2k_read_mct(%struct.opj_j2k* %p_j2k, i8* %p_header_data, i32 %p_header_size, %struct.opj_event_mgr* %p_manager) #0 {
entry:
  %retval = alloca i32, align 4
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %p_header_data.addr = alloca i8*, align 8
  %p_header_size.addr = alloca i32, align 4
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  %i = alloca i32, align 4
  %l_tcp = alloca %struct.opj_tcp*, align 8
  %l_tmp = alloca i32, align 4
  %l_indix = alloca i32, align 4
  %l_mct_data = alloca %struct.opj_mct_data*, align 8
  %cleanup.dest.slot = alloca i32
  %new_mct_records = alloca %struct.opj_mct_data*, align 8
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store i8* %p_header_data, i8** %p_header_data.addr, align 8, !tbaa !1
  store i32 %p_header_size, i32* %p_header_size.addr, align 4, !tbaa !5
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %0 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast %struct.opj_tcp** %l_tcp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #1
  store %struct.opj_tcp* null, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %2 = bitcast i32* %l_tmp to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #1
  %3 = bitcast i32* %l_indix to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #1
  %4 = bitcast %struct.opj_mct_data** %l_mct_data to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4) #1
  %5 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %cmp = icmp ne i8* %5, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.52, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 4992, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @__PRETTY_FUNCTION__.opj_j2k_read_mct, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %6, %cond.true
  %7 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cmp1 = icmp ne %struct.opj_j2k* %7, null
  br i1 %cmp1, label %cond.true.2, label %cond.false.3

cond.true.2:                                      ; preds = %cond.end
  br label %cond.end.4

cond.false.3:                                     ; preds = %cond.end
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 4993, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @__PRETTY_FUNCTION__.opj_j2k_read_mct, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.4

cond.end.4:                                       ; preds = %8, %cond.true.2
  %9 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %9, i32 0, i32 1
  %m_decoder = bitcast %union.anon* %m_specific_param to %struct.opj_j2k_dec*
  %m_state = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder, i32 0, i32 0
  %10 = load i32, i32* %m_state, align 4, !tbaa !23
  %cmp5 = icmp eq i32 %10, 16
  br i1 %cmp5, label %cond.true.6, label %cond.false.7

cond.true.6:                                      ; preds = %cond.end.4
  %11 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %11, i32 0, i32 8
  %12 = load i32, i32* %m_current_tile_number, align 4, !tbaa !11
  %idxprom = zext i32 %12 to i64
  %13 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %13, i32 0, i32 4
  %tcps = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp, i32 0, i32 17
  %14 = load %struct.opj_tcp*, %struct.opj_tcp** %tcps, align 8, !tbaa !88
  %arrayidx = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %14, i64 %idxprom
  br label %cond.end.10

cond.false.7:                                     ; preds = %cond.end.4
  %15 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param8 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %15, i32 0, i32 1
  %m_decoder9 = bitcast %union.anon* %m_specific_param8 to %struct.opj_j2k_dec*
  %m_default_tcp = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder9, i32 0, i32 1
  %16 = load %struct.opj_tcp*, %struct.opj_tcp** %m_default_tcp, align 8, !tbaa !39
  br label %cond.end.10

cond.end.10:                                      ; preds = %cond.false.7, %cond.true.6
  %cond = phi %struct.opj_tcp* [ %arrayidx, %cond.true.6 ], [ %16, %cond.false.7 ]
  store %struct.opj_tcp* %cond, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %17 = load i32, i32* %p_header_size.addr, align 4, !tbaa !5
  %cmp11 = icmp ult i32 %17, 2
  br i1 %cmp11, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end.10
  %18 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %18, i32 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.101, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.102

if.end:                                           ; preds = %cond.end.10
  %19 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  call void @opj_read_bytes_LE(i8* %19, i32* %l_tmp, i32 2) #7
  %20 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %add.ptr = getelementptr inbounds i8, i8* %20, i64 2
  store i8* %add.ptr, i8** %p_header_data.addr, align 8, !tbaa !1
  %21 = load i32, i32* %l_tmp, align 4, !tbaa !5
  %cmp12 = icmp ne i32 %21, 0
  br i1 %cmp12, label %if.then.13, label %if.end.15

if.then.13:                                       ; preds = %if.end
  %22 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call14 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %22, i32 2, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.102, i32 0, i32 0)) #7
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.102

if.end.15:                                        ; preds = %if.end
  %23 = load i32, i32* %p_header_size.addr, align 4, !tbaa !5
  %cmp16 = icmp ule i32 %23, 6
  br i1 %cmp16, label %if.then.17, label %if.end.19

if.then.17:                                       ; preds = %if.end.15
  %24 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call18 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %24, i32 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.101, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.102

if.end.19:                                        ; preds = %if.end.15
  %25 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  call void @opj_read_bytes_LE(i8* %25, i32* %l_tmp, i32 2) #7
  %26 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %add.ptr20 = getelementptr inbounds i8, i8* %26, i64 2
  store i8* %add.ptr20, i8** %p_header_data.addr, align 8, !tbaa !1
  %27 = load i32, i32* %l_tmp, align 4, !tbaa !5
  %and = and i32 %27, 255
  store i32 %and, i32* %l_indix, align 4, !tbaa !5
  %28 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %m_mct_records = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %28, i32 0, i32 20
  %29 = load %struct.opj_mct_data*, %struct.opj_mct_data** %m_mct_records, align 8, !tbaa !74
  store %struct.opj_mct_data* %29, %struct.opj_mct_data** %l_mct_data, align 8, !tbaa !1
  store i32 0, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.19
  %30 = load i32, i32* %i, align 4, !tbaa !5
  %31 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %m_nb_mct_records = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %31, i32 0, i32 21
  %32 = load i32, i32* %m_nb_mct_records, align 4, !tbaa !89
  %cmp21 = icmp ult i32 %30, %32
  br i1 %cmp21, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %33 = load %struct.opj_mct_data*, %struct.opj_mct_data** %l_mct_data, align 8, !tbaa !1
  %m_index = getelementptr inbounds %struct.opj_mct_data, %struct.opj_mct_data* %33, i32 0, i32 2
  %34 = load i32, i32* %m_index, align 4, !tbaa !90
  %35 = load i32, i32* %l_indix, align 4, !tbaa !5
  %cmp22 = icmp eq i32 %34, %35
  br i1 %cmp22, label %if.then.23, label %if.end.24

if.then.23:                                       ; preds = %for.body
  br label %for.end

if.end.24:                                        ; preds = %for.body
  %36 = load %struct.opj_mct_data*, %struct.opj_mct_data** %l_mct_data, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds %struct.opj_mct_data, %struct.opj_mct_data* %36, i32 1
  store %struct.opj_mct_data* %incdec.ptr, %struct.opj_mct_data** %l_mct_data, align 8, !tbaa !1
  br label %for.inc

for.inc:                                          ; preds = %if.end.24
  %37 = load i32, i32* %i, align 4, !tbaa !5
  %inc = add i32 %37, 1
  store i32 %inc, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.end:                                          ; preds = %if.then.23, %for.cond
  %38 = load i32, i32* %i, align 4, !tbaa !5
  %39 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %m_nb_mct_records25 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %39, i32 0, i32 21
  %40 = load i32, i32* %m_nb_mct_records25, align 4, !tbaa !89
  %cmp26 = icmp eq i32 %38, %40
  br i1 %cmp26, label %if.then.27, label %if.end.65

if.then.27:                                       ; preds = %for.end
  %41 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %m_nb_mct_records28 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %41, i32 0, i32 21
  %42 = load i32, i32* %m_nb_mct_records28, align 4, !tbaa !89
  %43 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %m_nb_max_mct_records = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %43, i32 0, i32 22
  %44 = load i32, i32* %m_nb_max_mct_records, align 4, !tbaa !75
  %cmp29 = icmp eq i32 %42, %44
  br i1 %cmp29, label %if.then.30, label %if.end.60

if.then.30:                                       ; preds = %if.then.27
  %45 = bitcast %struct.opj_mct_data** %new_mct_records to i8*
  call void @llvm.lifetime.start(i64 8, i8* %45) #1
  %46 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %m_nb_max_mct_records31 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %46, i32 0, i32 22
  %47 = load i32, i32* %m_nb_max_mct_records31, align 4, !tbaa !75
  %add = add i32 %47, 10
  store i32 %add, i32* %m_nb_max_mct_records31, align 4, !tbaa !75
  %48 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %m_nb_max_mct_records32 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %48, i32 0, i32 22
  %49 = load i32, i32* %m_nb_max_mct_records32, align 4, !tbaa !75
  %conv = zext i32 %49 to i64
  %mul = mul i64 %conv, 32
  %cmp33 = icmp uge i64 %mul, -256
  br i1 %cmp33, label %cond.true.35, label %cond.false.36

cond.true.35:                                     ; preds = %if.then.30
  br label %cond.end.42

cond.false.36:                                    ; preds = %if.then.30
  %50 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %m_mct_records37 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %50, i32 0, i32 20
  %51 = load %struct.opj_mct_data*, %struct.opj_mct_data** %m_mct_records37, align 8, !tbaa !74
  %52 = bitcast %struct.opj_mct_data* %51 to i8*
  %53 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %m_nb_max_mct_records38 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %53, i32 0, i32 22
  %54 = load i32, i32* %m_nb_max_mct_records38, align 4, !tbaa !75
  %conv39 = zext i32 %54 to i64
  %mul40 = mul i64 %conv39, 32
  %call41 = call i8* @realloc(i8* %52, i64 %mul40) #9
  br label %cond.end.42

cond.end.42:                                      ; preds = %cond.false.36, %cond.true.35
  %cond43 = phi i8* [ null, %cond.true.35 ], [ %call41, %cond.false.36 ]
  %55 = bitcast i8* %cond43 to %struct.opj_mct_data*
  store %struct.opj_mct_data* %55, %struct.opj_mct_data** %new_mct_records, align 8, !tbaa !1
  %56 = load %struct.opj_mct_data*, %struct.opj_mct_data** %new_mct_records, align 8, !tbaa !1
  %tobool = icmp ne %struct.opj_mct_data* %56, null
  br i1 %tobool, label %if.end.50, label %if.then.44

if.then.44:                                       ; preds = %cond.end.42
  %57 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %m_mct_records45 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %57, i32 0, i32 20
  %58 = load %struct.opj_mct_data*, %struct.opj_mct_data** %m_mct_records45, align 8, !tbaa !74
  %59 = bitcast %struct.opj_mct_data* %58 to i8*
  call void @free(i8* %59) #9
  %60 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %m_mct_records46 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %60, i32 0, i32 20
  store %struct.opj_mct_data* null, %struct.opj_mct_data** %m_mct_records46, align 8, !tbaa !74
  %61 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %m_nb_max_mct_records47 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %61, i32 0, i32 22
  store i32 0, i32* %m_nb_max_mct_records47, align 4, !tbaa !75
  %62 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %m_nb_mct_records48 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %62, i32 0, i32 21
  store i32 0, i32* %m_nb_mct_records48, align 4, !tbaa !89
  %63 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call49 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %63, i32 1, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.103, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.50:                                        ; preds = %cond.end.42
  %64 = load %struct.opj_mct_data*, %struct.opj_mct_data** %new_mct_records, align 8, !tbaa !1
  %65 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %m_mct_records51 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %65, i32 0, i32 20
  store %struct.opj_mct_data* %64, %struct.opj_mct_data** %m_mct_records51, align 8, !tbaa !74
  %66 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %m_mct_records52 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %66, i32 0, i32 20
  %67 = load %struct.opj_mct_data*, %struct.opj_mct_data** %m_mct_records52, align 8, !tbaa !74
  %68 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %m_nb_mct_records53 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %68, i32 0, i32 21
  %69 = load i32, i32* %m_nb_mct_records53, align 4, !tbaa !89
  %idx.ext = zext i32 %69 to i64
  %add.ptr54 = getelementptr inbounds %struct.opj_mct_data, %struct.opj_mct_data* %67, i64 %idx.ext
  store %struct.opj_mct_data* %add.ptr54, %struct.opj_mct_data** %l_mct_data, align 8, !tbaa !1
  %70 = load %struct.opj_mct_data*, %struct.opj_mct_data** %l_mct_data, align 8, !tbaa !1
  %71 = bitcast %struct.opj_mct_data* %70 to i8*
  %72 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %m_nb_max_mct_records55 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %72, i32 0, i32 22
  %73 = load i32, i32* %m_nb_max_mct_records55, align 4, !tbaa !75
  %74 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %m_nb_mct_records56 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %74, i32 0, i32 21
  %75 = load i32, i32* %m_nb_mct_records56, align 4, !tbaa !89
  %sub = sub i32 %73, %75
  %conv57 = zext i32 %sub to i64
  %mul58 = mul i64 %conv57, 32
  %call59 = call i8* @memset(i8* %71, i32 0, i64 %mul58) #9
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.50, %if.then.44
  %76 = bitcast %struct.opj_mct_data** %new_mct_records to i8*
  call void @llvm.lifetime.end(i64 8, i8* %76) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.102 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.60

if.end.60:                                        ; preds = %cleanup.cont, %if.then.27
  %77 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %m_mct_records61 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %77, i32 0, i32 20
  %78 = load %struct.opj_mct_data*, %struct.opj_mct_data** %m_mct_records61, align 8, !tbaa !74
  %79 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %m_nb_mct_records62 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %79, i32 0, i32 21
  %80 = load i32, i32* %m_nb_mct_records62, align 4, !tbaa !89
  %idx.ext63 = zext i32 %80 to i64
  %add.ptr64 = getelementptr inbounds %struct.opj_mct_data, %struct.opj_mct_data* %78, i64 %idx.ext63
  store %struct.opj_mct_data* %add.ptr64, %struct.opj_mct_data** %l_mct_data, align 8, !tbaa !1
  br label %if.end.65

if.end.65:                                        ; preds = %if.end.60, %for.end
  %81 = load %struct.opj_mct_data*, %struct.opj_mct_data** %l_mct_data, align 8, !tbaa !1
  %m_data = getelementptr inbounds %struct.opj_mct_data, %struct.opj_mct_data* %81, i32 0, i32 3
  %82 = load i8*, i8** %m_data, align 8, !tbaa !92
  %tobool66 = icmp ne i8* %82, null
  br i1 %tobool66, label %if.then.67, label %if.end.70

if.then.67:                                       ; preds = %if.end.65
  %83 = load %struct.opj_mct_data*, %struct.opj_mct_data** %l_mct_data, align 8, !tbaa !1
  %m_data68 = getelementptr inbounds %struct.opj_mct_data, %struct.opj_mct_data* %83, i32 0, i32 3
  %84 = load i8*, i8** %m_data68, align 8, !tbaa !92
  call void @free(i8* %84) #9
  %85 = load %struct.opj_mct_data*, %struct.opj_mct_data** %l_mct_data, align 8, !tbaa !1
  %m_data69 = getelementptr inbounds %struct.opj_mct_data, %struct.opj_mct_data* %85, i32 0, i32 3
  store i8* null, i8** %m_data69, align 8, !tbaa !92
  br label %if.end.70

if.end.70:                                        ; preds = %if.then.67, %if.end.65
  %86 = load i32, i32* %l_indix, align 4, !tbaa !5
  %87 = load %struct.opj_mct_data*, %struct.opj_mct_data** %l_mct_data, align 8, !tbaa !1
  %m_index71 = getelementptr inbounds %struct.opj_mct_data, %struct.opj_mct_data* %87, i32 0, i32 2
  store i32 %86, i32* %m_index71, align 4, !tbaa !90
  %88 = load i32, i32* %l_tmp, align 4, !tbaa !5
  %shr = lshr i32 %88, 8
  %and72 = and i32 %shr, 3
  %89 = load %struct.opj_mct_data*, %struct.opj_mct_data** %l_mct_data, align 8, !tbaa !1
  %m_array_type = getelementptr inbounds %struct.opj_mct_data, %struct.opj_mct_data* %89, i32 0, i32 1
  store i32 %and72, i32* %m_array_type, align 4, !tbaa !93
  %90 = load i32, i32* %l_tmp, align 4, !tbaa !5
  %shr73 = lshr i32 %90, 10
  %and74 = and i32 %shr73, 3
  %91 = load %struct.opj_mct_data*, %struct.opj_mct_data** %l_mct_data, align 8, !tbaa !1
  %m_element_type = getelementptr inbounds %struct.opj_mct_data, %struct.opj_mct_data* %91, i32 0, i32 0
  store i32 %and74, i32* %m_element_type, align 4, !tbaa !94
  %92 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  call void @opj_read_bytes_LE(i8* %92, i32* %l_tmp, i32 2) #7
  %93 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %add.ptr75 = getelementptr inbounds i8, i8* %93, i64 2
  store i8* %add.ptr75, i8** %p_header_data.addr, align 8, !tbaa !1
  %94 = load i32, i32* %l_tmp, align 4, !tbaa !5
  %cmp76 = icmp ne i32 %94, 0
  br i1 %cmp76, label %if.then.78, label %if.end.80

if.then.78:                                       ; preds = %if.end.70
  %95 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call79 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %95, i32 2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.104, i32 0, i32 0)) #7
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.102

if.end.80:                                        ; preds = %if.end.70
  %96 = load i32, i32* %p_header_size.addr, align 4, !tbaa !5
  %sub81 = sub i32 %96, 6
  store i32 %sub81, i32* %p_header_size.addr, align 4, !tbaa !5
  %97 = load i32, i32* %p_header_size.addr, align 4, !tbaa !5
  %conv82 = zext i32 %97 to i64
  %cmp83 = icmp uge i64 %conv82, -256
  br i1 %cmp83, label %cond.true.85, label %cond.false.86

cond.true.85:                                     ; preds = %if.end.80
  br label %cond.end.89

cond.false.86:                                    ; preds = %if.end.80
  %98 = load i32, i32* %p_header_size.addr, align 4, !tbaa !5
  %conv87 = zext i32 %98 to i64
  %call88 = call noalias i8* @malloc(i64 %conv87) #9
  br label %cond.end.89

cond.end.89:                                      ; preds = %cond.false.86, %cond.true.85
  %cond90 = phi i8* [ null, %cond.true.85 ], [ %call88, %cond.false.86 ]
  %99 = load %struct.opj_mct_data*, %struct.opj_mct_data** %l_mct_data, align 8, !tbaa !1
  %m_data91 = getelementptr inbounds %struct.opj_mct_data, %struct.opj_mct_data* %99, i32 0, i32 3
  store i8* %cond90, i8** %m_data91, align 8, !tbaa !92
  %100 = load %struct.opj_mct_data*, %struct.opj_mct_data** %l_mct_data, align 8, !tbaa !1
  %m_data92 = getelementptr inbounds %struct.opj_mct_data, %struct.opj_mct_data* %100, i32 0, i32 3
  %101 = load i8*, i8** %m_data92, align 8, !tbaa !92
  %tobool93 = icmp ne i8* %101, null
  br i1 %tobool93, label %if.end.96, label %if.then.94

if.then.94:                                       ; preds = %cond.end.89
  %102 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call95 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %102, i32 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.101, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.102

if.end.96:                                        ; preds = %cond.end.89
  %103 = load %struct.opj_mct_data*, %struct.opj_mct_data** %l_mct_data, align 8, !tbaa !1
  %m_data97 = getelementptr inbounds %struct.opj_mct_data, %struct.opj_mct_data* %103, i32 0, i32 3
  %104 = load i8*, i8** %m_data97, align 8, !tbaa !92
  %105 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %106 = load i32, i32* %p_header_size.addr, align 4, !tbaa !5
  %conv98 = zext i32 %106 to i64
  %call99 = call i8* @memcpy(i8* %104, i8* %105, i64 %conv98) #9
  %107 = load i32, i32* %p_header_size.addr, align 4, !tbaa !5
  %108 = load %struct.opj_mct_data*, %struct.opj_mct_data** %l_mct_data, align 8, !tbaa !1
  %m_data_size = getelementptr inbounds %struct.opj_mct_data, %struct.opj_mct_data* %108, i32 0, i32 4
  store i32 %107, i32* %m_data_size, align 4, !tbaa !95
  %109 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %m_nb_mct_records100 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %109, i32 0, i32 21
  %110 = load i32, i32* %m_nb_mct_records100, align 4, !tbaa !89
  %inc101 = add i32 %110, 1
  store i32 %inc101, i32* %m_nb_mct_records100, align 4, !tbaa !89
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.102

cleanup.102:                                      ; preds = %if.end.96, %if.then.94, %if.then.78, %cleanup, %if.then.17, %if.then.13, %if.then
  %111 = bitcast %struct.opj_mct_data** %l_mct_data to i8*
  call void @llvm.lifetime.end(i64 8, i8* %111) #1
  %112 = bitcast i32* %l_indix to i8*
  call void @llvm.lifetime.end(i64 4, i8* %112) #1
  %113 = bitcast i32* %l_tmp to i8*
  call void @llvm.lifetime.end(i64 4, i8* %113) #1
  %114 = bitcast %struct.opj_tcp** %l_tcp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %114) #1
  %115 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %115) #1
  %116 = load i32, i32* %retval
  ret i32 %116
}

; Function Attrs: nounwind uwtable
define internal i32 @opj_j2k_read_cbd(%struct.opj_j2k* %p_j2k, i8* %p_header_data, i32 %p_header_size, %struct.opj_event_mgr* %p_manager) #0 {
entry:
  %retval = alloca i32, align 4
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %p_header_data.addr = alloca i8*, align 8
  %p_header_size.addr = alloca i32, align 4
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  %l_nb_comp = alloca i32, align 4
  %l_num_comp = alloca i32, align 4
  %l_comp_def = alloca i32, align 4
  %i = alloca i32, align 4
  %l_comp = alloca %struct.opj_image_comp*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store i8* %p_header_data, i8** %p_header_data.addr, align 8, !tbaa !1
  store i32 %p_header_size, i32* %p_header_size.addr, align 4, !tbaa !5
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %0 = bitcast i32* %l_nb_comp to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast i32* %l_num_comp to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = bitcast i32* %l_comp_def to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #1
  %3 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #1
  %4 = bitcast %struct.opj_image_comp** %l_comp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4) #1
  store %struct.opj_image_comp* null, %struct.opj_image_comp** %l_comp, align 8, !tbaa !1
  %5 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %cmp = icmp ne i8* %5, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.52, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 5692, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @__PRETTY_FUNCTION__.opj_j2k_read_cbd, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %6, %cond.true
  %7 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cmp1 = icmp ne %struct.opj_j2k* %7, null
  br i1 %cmp1, label %cond.true.2, label %cond.false.3

cond.true.2:                                      ; preds = %cond.end
  br label %cond.end.4

cond.false.3:                                     ; preds = %cond.end
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 5693, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @__PRETTY_FUNCTION__.opj_j2k_read_cbd, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.4

cond.end.4:                                       ; preds = %8, %cond.true.2
  %9 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %cmp5 = icmp ne %struct.opj_event_mgr* %9, null
  br i1 %cmp5, label %cond.true.6, label %cond.false.7

cond.true.6:                                      ; preds = %cond.end.4
  br label %cond.end.8

cond.false.7:                                     ; preds = %cond.end.4
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 5694, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @__PRETTY_FUNCTION__.opj_j2k_read_cbd, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.8

cond.end.8:                                       ; preds = %10, %cond.true.6
  %11 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_private_image = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %11, i32 0, i32 2
  %12 = load %struct.opj_image*, %struct.opj_image** %m_private_image, align 8, !tbaa !38
  %numcomps = getelementptr inbounds %struct.opj_image, %struct.opj_image* %12, i32 0, i32 4
  %13 = load i32, i32* %numcomps, align 4, !tbaa !45
  store i32 %13, i32* %l_num_comp, align 4, !tbaa !5
  %14 = load i32, i32* %p_header_size.addr, align 4, !tbaa !5
  %15 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_private_image9 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %15, i32 0, i32 2
  %16 = load %struct.opj_image*, %struct.opj_image** %m_private_image9, align 8, !tbaa !38
  %numcomps10 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %16, i32 0, i32 4
  %17 = load i32, i32* %numcomps10, align 4, !tbaa !45
  %add = add i32 %17, 2
  %cmp11 = icmp ne i32 %14, %add
  br i1 %cmp11, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end.8
  %18 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %18, i32 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.114, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %cond.end.8
  %19 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  call void @opj_read_bytes_LE(i8* %19, i32* %l_nb_comp, i32 2) #7
  %20 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %add.ptr = getelementptr inbounds i8, i8* %20, i64 2
  store i8* %add.ptr, i8** %p_header_data.addr, align 8, !tbaa !1
  %21 = load i32, i32* %l_nb_comp, align 4, !tbaa !5
  %22 = load i32, i32* %l_num_comp, align 4, !tbaa !5
  %cmp12 = icmp ne i32 %21, %22
  br i1 %cmp12, label %if.then.13, label %if.end.15

if.then.13:                                       ; preds = %if.end
  %23 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call14 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %23, i32 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.114, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.15:                                        ; preds = %if.end
  %24 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_private_image16 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %24, i32 0, i32 2
  %25 = load %struct.opj_image*, %struct.opj_image** %m_private_image16, align 8, !tbaa !38
  %comps = getelementptr inbounds %struct.opj_image, %struct.opj_image* %25, i32 0, i32 6
  %26 = load %struct.opj_image_comp*, %struct.opj_image_comp** %comps, align 8, !tbaa !62
  store %struct.opj_image_comp* %26, %struct.opj_image_comp** %l_comp, align 8, !tbaa !1
  store i32 0, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.15
  %27 = load i32, i32* %i, align 4, !tbaa !5
  %28 = load i32, i32* %l_num_comp, align 4, !tbaa !5
  %cmp17 = icmp ult i32 %27, %28
  br i1 %cmp17, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %29 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  call void @opj_read_bytes_LE(i8* %29, i32* %l_comp_def, i32 1) #7
  %30 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds i8, i8* %30, i32 1
  store i8* %incdec.ptr, i8** %p_header_data.addr, align 8, !tbaa !1
  %31 = load i32, i32* %l_comp_def, align 4, !tbaa !5
  %shr = lshr i32 %31, 7
  %and = and i32 %shr, 1
  %32 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_comp, align 8, !tbaa !1
  %sgnd = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %32, i32 0, i32 8
  store i32 %and, i32* %sgnd, align 4, !tbaa !66
  %33 = load i32, i32* %l_comp_def, align 4, !tbaa !5
  %and18 = and i32 %33, 127
  %add19 = add i32 %and18, 1
  %34 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_comp, align 8, !tbaa !1
  %prec = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %34, i32 0, i32 6
  store i32 %add19, i32* %prec, align 4, !tbaa !63
  %35 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_comp, align 8, !tbaa !1
  %incdec.ptr20 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %35, i32 1
  store %struct.opj_image_comp* %incdec.ptr20, %struct.opj_image_comp** %l_comp, align 8, !tbaa !1
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %36 = load i32, i32* %i, align 4, !tbaa !5
  %inc = add i32 %36, 1
  store i32 %inc, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %for.end, %if.then.13, %if.then
  %37 = bitcast %struct.opj_image_comp** %l_comp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %37) #1
  %38 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %38) #1
  %39 = bitcast i32* %l_comp_def to i8*
  call void @llvm.lifetime.end(i64 4, i8* %39) #1
  %40 = bitcast i32* %l_num_comp to i8*
  call void @llvm.lifetime.end(i64 4, i8* %40) #1
  %41 = bitcast i32* %l_nb_comp to i8*
  call void @llvm.lifetime.end(i64 4, i8* %41) #1
  %42 = load i32, i32* %retval
  ret i32 %42
}

; Function Attrs: nounwind uwtable
define internal i32 @opj_j2k_read_mcc(%struct.opj_j2k* %p_j2k, i8* %p_header_data, i32 %p_header_size, %struct.opj_event_mgr* %p_manager) #0 {
entry:
  %retval = alloca i32, align 4
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %p_header_data.addr = alloca i8*, align 8
  %p_header_size.addr = alloca i32, align 4
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %l_tmp = alloca i32, align 4
  %l_indix = alloca i32, align 4
  %l_tcp = alloca %struct.opj_tcp*, align 8
  %l_mcc_record = alloca %struct.opj_simple_mcc_decorrelation_data*, align 8
  %l_mct_data = alloca %struct.opj_mct_data*, align 8
  %l_nb_collections = alloca i32, align 4
  %l_nb_comps = alloca i32, align 4
  %l_nb_bytes_by_comp = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %new_mcc_records = alloca %struct.opj_simple_mcc_decorrelation_data*, align 8
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store i8* %p_header_data, i8** %p_header_data.addr, align 8, !tbaa !1
  store i32 %p_header_size, i32* %p_header_size.addr, align 4, !tbaa !5
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %0 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast i32* %j to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = bitcast i32* %l_tmp to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #1
  %3 = bitcast i32* %l_indix to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #1
  %4 = bitcast %struct.opj_tcp** %l_tcp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4) #1
  %5 = bitcast %struct.opj_simple_mcc_decorrelation_data** %l_mcc_record to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5) #1
  %6 = bitcast %struct.opj_mct_data** %l_mct_data to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6) #1
  %7 = bitcast i32* %l_nb_collections to i8*
  call void @llvm.lifetime.start(i64 4, i8* %7) #1
  %8 = bitcast i32* %l_nb_comps to i8*
  call void @llvm.lifetime.start(i64 4, i8* %8) #1
  %9 = bitcast i32* %l_nb_bytes_by_comp to i8*
  call void @llvm.lifetime.start(i64 4, i8* %9) #1
  %10 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %cmp = icmp ne i8* %10, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.52, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 5204, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @__PRETTY_FUNCTION__.opj_j2k_read_mcc, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %11, %cond.true
  %12 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cmp1 = icmp ne %struct.opj_j2k* %12, null
  br i1 %cmp1, label %cond.true.2, label %cond.false.3

cond.true.2:                                      ; preds = %cond.end
  br label %cond.end.4

cond.false.3:                                     ; preds = %cond.end
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 5205, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @__PRETTY_FUNCTION__.opj_j2k_read_mcc, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.4

cond.end.4:                                       ; preds = %13, %cond.true.2
  %14 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %cmp5 = icmp ne %struct.opj_event_mgr* %14, null
  br i1 %cmp5, label %cond.true.6, label %cond.false.7

cond.true.6:                                      ; preds = %cond.end.4
  br label %cond.end.8

cond.false.7:                                     ; preds = %cond.end.4
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 5206, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @__PRETTY_FUNCTION__.opj_j2k_read_mcc, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.8

cond.end.8:                                       ; preds = %15, %cond.true.6
  %16 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %16, i32 0, i32 1
  %m_decoder = bitcast %union.anon* %m_specific_param to %struct.opj_j2k_dec*
  %m_state = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder, i32 0, i32 0
  %17 = load i32, i32* %m_state, align 4, !tbaa !23
  %cmp9 = icmp eq i32 %17, 16
  br i1 %cmp9, label %cond.true.10, label %cond.false.11

cond.true.10:                                     ; preds = %cond.end.8
  %18 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %18, i32 0, i32 8
  %19 = load i32, i32* %m_current_tile_number, align 4, !tbaa !11
  %idxprom = zext i32 %19 to i64
  %20 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %20, i32 0, i32 4
  %tcps = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp, i32 0, i32 17
  %21 = load %struct.opj_tcp*, %struct.opj_tcp** %tcps, align 8, !tbaa !88
  %arrayidx = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %21, i64 %idxprom
  br label %cond.end.14

cond.false.11:                                    ; preds = %cond.end.8
  %22 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param12 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %22, i32 0, i32 1
  %m_decoder13 = bitcast %union.anon* %m_specific_param12 to %struct.opj_j2k_dec*
  %m_default_tcp = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder13, i32 0, i32 1
  %23 = load %struct.opj_tcp*, %struct.opj_tcp** %m_default_tcp, align 8, !tbaa !39
  br label %cond.end.14

cond.end.14:                                      ; preds = %cond.false.11, %cond.true.10
  %cond = phi %struct.opj_tcp* [ %arrayidx, %cond.true.10 ], [ %23, %cond.false.11 ]
  store %struct.opj_tcp* %cond, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %24 = load i32, i32* %p_header_size.addr, align 4, !tbaa !5
  %cmp15 = icmp ult i32 %24, 2
  br i1 %cmp15, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end.14
  %25 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %25, i32 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.105, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.233

if.end:                                           ; preds = %cond.end.14
  %26 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  call void @opj_read_bytes_LE(i8* %26, i32* %l_tmp, i32 2) #7
  %27 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %add.ptr = getelementptr inbounds i8, i8* %27, i64 2
  store i8* %add.ptr, i8** %p_header_data.addr, align 8, !tbaa !1
  %28 = load i32, i32* %l_tmp, align 4, !tbaa !5
  %cmp16 = icmp ne i32 %28, 0
  br i1 %cmp16, label %if.then.17, label %if.end.19

if.then.17:                                       ; preds = %if.end
  %29 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call18 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %29, i32 2, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.106, i32 0, i32 0)) #7
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.233

if.end.19:                                        ; preds = %if.end
  %30 = load i32, i32* %p_header_size.addr, align 4, !tbaa !5
  %cmp20 = icmp ult i32 %30, 7
  br i1 %cmp20, label %if.then.21, label %if.end.23

if.then.21:                                       ; preds = %if.end.19
  %31 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call22 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %31, i32 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.105, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.233

if.end.23:                                        ; preds = %if.end.19
  %32 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  call void @opj_read_bytes_LE(i8* %32, i32* %l_indix, i32 1) #7
  %33 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds i8, i8* %33, i32 1
  store i8* %incdec.ptr, i8** %p_header_data.addr, align 8, !tbaa !1
  %34 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %m_mcc_records = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %34, i32 0, i32 23
  %35 = load %struct.opj_simple_mcc_decorrelation_data*, %struct.opj_simple_mcc_decorrelation_data** %m_mcc_records, align 8, !tbaa !76
  store %struct.opj_simple_mcc_decorrelation_data* %35, %struct.opj_simple_mcc_decorrelation_data** %l_mcc_record, align 8, !tbaa !1
  store i32 0, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.23
  %36 = load i32, i32* %i, align 4, !tbaa !5
  %37 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %m_nb_mcc_records = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %37, i32 0, i32 24
  %38 = load i32, i32* %m_nb_mcc_records, align 4, !tbaa !96
  %cmp24 = icmp ult i32 %36, %38
  br i1 %cmp24, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %39 = load %struct.opj_simple_mcc_decorrelation_data*, %struct.opj_simple_mcc_decorrelation_data** %l_mcc_record, align 8, !tbaa !1
  %m_index = getelementptr inbounds %struct.opj_simple_mcc_decorrelation_data, %struct.opj_simple_mcc_decorrelation_data* %39, i32 0, i32 0
  %40 = load i32, i32* %m_index, align 4, !tbaa !97
  %41 = load i32, i32* %l_indix, align 4, !tbaa !5
  %cmp25 = icmp eq i32 %40, %41
  br i1 %cmp25, label %if.then.26, label %if.end.27

if.then.26:                                       ; preds = %for.body
  br label %for.end

if.end.27:                                        ; preds = %for.body
  %42 = load %struct.opj_simple_mcc_decorrelation_data*, %struct.opj_simple_mcc_decorrelation_data** %l_mcc_record, align 8, !tbaa !1
  %incdec.ptr28 = getelementptr inbounds %struct.opj_simple_mcc_decorrelation_data, %struct.opj_simple_mcc_decorrelation_data* %42, i32 1
  store %struct.opj_simple_mcc_decorrelation_data* %incdec.ptr28, %struct.opj_simple_mcc_decorrelation_data** %l_mcc_record, align 8, !tbaa !1
  br label %for.inc

for.inc:                                          ; preds = %if.end.27
  %43 = load i32, i32* %i, align 4, !tbaa !5
  %inc = add i32 %43, 1
  store i32 %inc, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.end:                                          ; preds = %if.then.26, %for.cond
  %44 = load i32, i32* %i, align 4, !tbaa !5
  %45 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %m_nb_mcc_records29 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %45, i32 0, i32 24
  %46 = load i32, i32* %m_nb_mcc_records29, align 4, !tbaa !96
  %cmp30 = icmp eq i32 %44, %46
  br i1 %cmp30, label %if.then.31, label %if.end.69

if.then.31:                                       ; preds = %for.end
  %47 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %m_nb_mcc_records32 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %47, i32 0, i32 24
  %48 = load i32, i32* %m_nb_mcc_records32, align 4, !tbaa !96
  %49 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %m_nb_max_mcc_records = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %49, i32 0, i32 25
  %50 = load i32, i32* %m_nb_max_mcc_records, align 4, !tbaa !77
  %cmp33 = icmp eq i32 %48, %50
  br i1 %cmp33, label %if.then.34, label %if.end.64

if.then.34:                                       ; preds = %if.then.31
  %51 = bitcast %struct.opj_simple_mcc_decorrelation_data** %new_mcc_records to i8*
  call void @llvm.lifetime.start(i64 8, i8* %51) #1
  %52 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %m_nb_max_mcc_records35 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %52, i32 0, i32 25
  %53 = load i32, i32* %m_nb_max_mcc_records35, align 4, !tbaa !77
  %add = add i32 %53, 10
  store i32 %add, i32* %m_nb_max_mcc_records35, align 4, !tbaa !77
  %54 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %m_nb_max_mcc_records36 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %54, i32 0, i32 25
  %55 = load i32, i32* %m_nb_max_mcc_records36, align 4, !tbaa !77
  %conv = zext i32 %55 to i64
  %mul = mul i64 %conv, 32
  %cmp37 = icmp uge i64 %mul, -256
  br i1 %cmp37, label %cond.true.39, label %cond.false.40

cond.true.39:                                     ; preds = %if.then.34
  br label %cond.end.46

cond.false.40:                                    ; preds = %if.then.34
  %56 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %m_mcc_records41 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %56, i32 0, i32 23
  %57 = load %struct.opj_simple_mcc_decorrelation_data*, %struct.opj_simple_mcc_decorrelation_data** %m_mcc_records41, align 8, !tbaa !76
  %58 = bitcast %struct.opj_simple_mcc_decorrelation_data* %57 to i8*
  %59 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %m_nb_max_mcc_records42 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %59, i32 0, i32 25
  %60 = load i32, i32* %m_nb_max_mcc_records42, align 4, !tbaa !77
  %conv43 = zext i32 %60 to i64
  %mul44 = mul i64 %conv43, 32
  %call45 = call i8* @realloc(i8* %58, i64 %mul44) #9
  br label %cond.end.46

cond.end.46:                                      ; preds = %cond.false.40, %cond.true.39
  %cond47 = phi i8* [ null, %cond.true.39 ], [ %call45, %cond.false.40 ]
  %61 = bitcast i8* %cond47 to %struct.opj_simple_mcc_decorrelation_data*
  store %struct.opj_simple_mcc_decorrelation_data* %61, %struct.opj_simple_mcc_decorrelation_data** %new_mcc_records, align 8, !tbaa !1
  %62 = load %struct.opj_simple_mcc_decorrelation_data*, %struct.opj_simple_mcc_decorrelation_data** %new_mcc_records, align 8, !tbaa !1
  %tobool = icmp ne %struct.opj_simple_mcc_decorrelation_data* %62, null
  br i1 %tobool, label %if.end.54, label %if.then.48

if.then.48:                                       ; preds = %cond.end.46
  %63 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %m_mcc_records49 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %63, i32 0, i32 23
  %64 = load %struct.opj_simple_mcc_decorrelation_data*, %struct.opj_simple_mcc_decorrelation_data** %m_mcc_records49, align 8, !tbaa !76
  %65 = bitcast %struct.opj_simple_mcc_decorrelation_data* %64 to i8*
  call void @free(i8* %65) #9
  %66 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %m_mcc_records50 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %66, i32 0, i32 23
  store %struct.opj_simple_mcc_decorrelation_data* null, %struct.opj_simple_mcc_decorrelation_data** %m_mcc_records50, align 8, !tbaa !76
  %67 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %m_nb_max_mcc_records51 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %67, i32 0, i32 25
  store i32 0, i32* %m_nb_max_mcc_records51, align 4, !tbaa !77
  %68 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %m_nb_mcc_records52 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %68, i32 0, i32 24
  store i32 0, i32* %m_nb_mcc_records52, align 4, !tbaa !96
  %69 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call53 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %69, i32 1, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.107, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.54:                                        ; preds = %cond.end.46
  %70 = load %struct.opj_simple_mcc_decorrelation_data*, %struct.opj_simple_mcc_decorrelation_data** %new_mcc_records, align 8, !tbaa !1
  %71 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %m_mcc_records55 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %71, i32 0, i32 23
  store %struct.opj_simple_mcc_decorrelation_data* %70, %struct.opj_simple_mcc_decorrelation_data** %m_mcc_records55, align 8, !tbaa !76
  %72 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %m_mcc_records56 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %72, i32 0, i32 23
  %73 = load %struct.opj_simple_mcc_decorrelation_data*, %struct.opj_simple_mcc_decorrelation_data** %m_mcc_records56, align 8, !tbaa !76
  %74 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %m_nb_mcc_records57 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %74, i32 0, i32 24
  %75 = load i32, i32* %m_nb_mcc_records57, align 4, !tbaa !96
  %idx.ext = zext i32 %75 to i64
  %add.ptr58 = getelementptr inbounds %struct.opj_simple_mcc_decorrelation_data, %struct.opj_simple_mcc_decorrelation_data* %73, i64 %idx.ext
  store %struct.opj_simple_mcc_decorrelation_data* %add.ptr58, %struct.opj_simple_mcc_decorrelation_data** %l_mcc_record, align 8, !tbaa !1
  %76 = load %struct.opj_simple_mcc_decorrelation_data*, %struct.opj_simple_mcc_decorrelation_data** %l_mcc_record, align 8, !tbaa !1
  %77 = bitcast %struct.opj_simple_mcc_decorrelation_data* %76 to i8*
  %78 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %m_nb_max_mcc_records59 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %78, i32 0, i32 25
  %79 = load i32, i32* %m_nb_max_mcc_records59, align 4, !tbaa !77
  %80 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %m_nb_mcc_records60 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %80, i32 0, i32 24
  %81 = load i32, i32* %m_nb_mcc_records60, align 4, !tbaa !96
  %sub = sub i32 %79, %81
  %conv61 = zext i32 %sub to i64
  %mul62 = mul i64 %conv61, 32
  %call63 = call i8* @memset(i8* %77, i32 0, i64 %mul62) #9
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.54, %if.then.48
  %82 = bitcast %struct.opj_simple_mcc_decorrelation_data** %new_mcc_records to i8*
  call void @llvm.lifetime.end(i64 8, i8* %82) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.233 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.64

if.end.64:                                        ; preds = %cleanup.cont, %if.then.31
  %83 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %m_mcc_records65 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %83, i32 0, i32 23
  %84 = load %struct.opj_simple_mcc_decorrelation_data*, %struct.opj_simple_mcc_decorrelation_data** %m_mcc_records65, align 8, !tbaa !76
  %85 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %m_nb_mcc_records66 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %85, i32 0, i32 24
  %86 = load i32, i32* %m_nb_mcc_records66, align 4, !tbaa !96
  %idx.ext67 = zext i32 %86 to i64
  %add.ptr68 = getelementptr inbounds %struct.opj_simple_mcc_decorrelation_data, %struct.opj_simple_mcc_decorrelation_data* %84, i64 %idx.ext67
  store %struct.opj_simple_mcc_decorrelation_data* %add.ptr68, %struct.opj_simple_mcc_decorrelation_data** %l_mcc_record, align 8, !tbaa !1
  br label %if.end.69

if.end.69:                                        ; preds = %if.end.64, %for.end
  %87 = load i32, i32* %l_indix, align 4, !tbaa !5
  %88 = load %struct.opj_simple_mcc_decorrelation_data*, %struct.opj_simple_mcc_decorrelation_data** %l_mcc_record, align 8, !tbaa !1
  %m_index70 = getelementptr inbounds %struct.opj_simple_mcc_decorrelation_data, %struct.opj_simple_mcc_decorrelation_data* %88, i32 0, i32 0
  store i32 %87, i32* %m_index70, align 4, !tbaa !97
  %89 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  call void @opj_read_bytes_LE(i8* %89, i32* %l_tmp, i32 2) #7
  %90 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %add.ptr71 = getelementptr inbounds i8, i8* %90, i64 2
  store i8* %add.ptr71, i8** %p_header_data.addr, align 8, !tbaa !1
  %91 = load i32, i32* %l_tmp, align 4, !tbaa !5
  %cmp72 = icmp ne i32 %91, 0
  br i1 %cmp72, label %if.then.74, label %if.end.76

if.then.74:                                       ; preds = %if.end.69
  %92 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call75 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %92, i32 2, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.106, i32 0, i32 0)) #7
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.233

if.end.76:                                        ; preds = %if.end.69
  %93 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  call void @opj_read_bytes_LE(i8* %93, i32* %l_nb_collections, i32 2) #7
  %94 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %add.ptr77 = getelementptr inbounds i8, i8* %94, i64 2
  store i8* %add.ptr77, i8** %p_header_data.addr, align 8, !tbaa !1
  %95 = load i32, i32* %l_nb_collections, align 4, !tbaa !5
  %cmp78 = icmp ugt i32 %95, 1
  br i1 %cmp78, label %if.then.80, label %if.end.82

if.then.80:                                       ; preds = %if.end.76
  %96 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call81 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %96, i32 2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.108, i32 0, i32 0)) #7
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.233

if.end.82:                                        ; preds = %if.end.76
  %97 = load i32, i32* %p_header_size.addr, align 4, !tbaa !5
  %sub83 = sub i32 %97, 7
  store i32 %sub83, i32* %p_header_size.addr, align 4, !tbaa !5
  store i32 0, i32* %i, align 4, !tbaa !5
  br label %for.cond.84

for.cond.84:                                      ; preds = %for.inc.223, %if.end.82
  %98 = load i32, i32* %i, align 4, !tbaa !5
  %99 = load i32, i32* %l_nb_collections, align 4, !tbaa !5
  %cmp85 = icmp ult i32 %98, %99
  br i1 %cmp85, label %for.body.87, label %for.end.225

for.body.87:                                      ; preds = %for.cond.84
  %100 = load i32, i32* %p_header_size.addr, align 4, !tbaa !5
  %cmp88 = icmp ult i32 %100, 3
  br i1 %cmp88, label %if.then.90, label %if.end.92

if.then.90:                                       ; preds = %for.body.87
  %101 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call91 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %101, i32 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.105, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.233

if.end.92:                                        ; preds = %for.body.87
  %102 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  call void @opj_read_bytes_LE(i8* %102, i32* %l_tmp, i32 1) #7
  %103 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %incdec.ptr93 = getelementptr inbounds i8, i8* %103, i32 1
  store i8* %incdec.ptr93, i8** %p_header_data.addr, align 8, !tbaa !1
  %104 = load i32, i32* %l_tmp, align 4, !tbaa !5
  %cmp94 = icmp ne i32 %104, 1
  br i1 %cmp94, label %if.then.96, label %if.end.98

if.then.96:                                       ; preds = %if.end.92
  %105 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call97 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %105, i32 2, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.109, i32 0, i32 0)) #7
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.233

if.end.98:                                        ; preds = %if.end.92
  %106 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  call void @opj_read_bytes_LE(i8* %106, i32* %l_nb_comps, i32 2) #7
  %107 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %add.ptr99 = getelementptr inbounds i8, i8* %107, i64 2
  store i8* %add.ptr99, i8** %p_header_data.addr, align 8, !tbaa !1
  %108 = load i32, i32* %p_header_size.addr, align 4, !tbaa !5
  %sub100 = sub i32 %108, 3
  store i32 %sub100, i32* %p_header_size.addr, align 4, !tbaa !5
  %109 = load i32, i32* %l_nb_comps, align 4, !tbaa !5
  %shr = lshr i32 %109, 15
  %add101 = add i32 1, %shr
  store i32 %add101, i32* %l_nb_bytes_by_comp, align 4, !tbaa !5
  %110 = load i32, i32* %l_nb_comps, align 4, !tbaa !5
  %and = and i32 %110, 32767
  %111 = load %struct.opj_simple_mcc_decorrelation_data*, %struct.opj_simple_mcc_decorrelation_data** %l_mcc_record, align 8, !tbaa !1
  %m_nb_comps = getelementptr inbounds %struct.opj_simple_mcc_decorrelation_data, %struct.opj_simple_mcc_decorrelation_data* %111, i32 0, i32 1
  store i32 %and, i32* %m_nb_comps, align 4, !tbaa !99
  %112 = load i32, i32* %p_header_size.addr, align 4, !tbaa !5
  %113 = load i32, i32* %l_nb_bytes_by_comp, align 4, !tbaa !5
  %114 = load %struct.opj_simple_mcc_decorrelation_data*, %struct.opj_simple_mcc_decorrelation_data** %l_mcc_record, align 8, !tbaa !1
  %m_nb_comps102 = getelementptr inbounds %struct.opj_simple_mcc_decorrelation_data, %struct.opj_simple_mcc_decorrelation_data* %114, i32 0, i32 1
  %115 = load i32, i32* %m_nb_comps102, align 4, !tbaa !99
  %mul103 = mul i32 %113, %115
  %add104 = add i32 %mul103, 2
  %cmp105 = icmp ult i32 %112, %add104
  br i1 %cmp105, label %if.then.107, label %if.end.109

if.then.107:                                      ; preds = %if.end.98
  %116 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call108 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %116, i32 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.105, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.233

if.end.109:                                       ; preds = %if.end.98
  %117 = load i32, i32* %l_nb_bytes_by_comp, align 4, !tbaa !5
  %118 = load %struct.opj_simple_mcc_decorrelation_data*, %struct.opj_simple_mcc_decorrelation_data** %l_mcc_record, align 8, !tbaa !1
  %m_nb_comps110 = getelementptr inbounds %struct.opj_simple_mcc_decorrelation_data, %struct.opj_simple_mcc_decorrelation_data* %118, i32 0, i32 1
  %119 = load i32, i32* %m_nb_comps110, align 4, !tbaa !99
  %mul111 = mul i32 %117, %119
  %add112 = add i32 %mul111, 2
  %120 = load i32, i32* %p_header_size.addr, align 4, !tbaa !5
  %sub113 = sub i32 %120, %add112
  store i32 %sub113, i32* %p_header_size.addr, align 4, !tbaa !5
  store i32 0, i32* %j, align 4, !tbaa !5
  br label %for.cond.114

for.cond.114:                                     ; preds = %for.inc.126, %if.end.109
  %121 = load i32, i32* %j, align 4, !tbaa !5
  %122 = load %struct.opj_simple_mcc_decorrelation_data*, %struct.opj_simple_mcc_decorrelation_data** %l_mcc_record, align 8, !tbaa !1
  %m_nb_comps115 = getelementptr inbounds %struct.opj_simple_mcc_decorrelation_data, %struct.opj_simple_mcc_decorrelation_data* %122, i32 0, i32 1
  %123 = load i32, i32* %m_nb_comps115, align 4, !tbaa !99
  %cmp116 = icmp ult i32 %121, %123
  br i1 %cmp116, label %for.body.118, label %for.end.128

for.body.118:                                     ; preds = %for.cond.114
  %124 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %125 = load i32, i32* %l_nb_bytes_by_comp, align 4, !tbaa !5
  call void @opj_read_bytes_LE(i8* %124, i32* %l_tmp, i32 %125) #7
  %126 = load i32, i32* %l_nb_bytes_by_comp, align 4, !tbaa !5
  %127 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %idx.ext119 = zext i32 %126 to i64
  %add.ptr120 = getelementptr inbounds i8, i8* %127, i64 %idx.ext119
  store i8* %add.ptr120, i8** %p_header_data.addr, align 8, !tbaa !1
  %128 = load i32, i32* %l_tmp, align 4, !tbaa !5
  %129 = load i32, i32* %j, align 4, !tbaa !5
  %cmp121 = icmp ne i32 %128, %129
  br i1 %cmp121, label %if.then.123, label %if.end.125

if.then.123:                                      ; preds = %for.body.118
  %130 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call124 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %130, i32 2, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.110, i32 0, i32 0)) #7
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.233

if.end.125:                                       ; preds = %for.body.118
  br label %for.inc.126

for.inc.126:                                      ; preds = %if.end.125
  %131 = load i32, i32* %j, align 4, !tbaa !5
  %inc127 = add i32 %131, 1
  store i32 %inc127, i32* %j, align 4, !tbaa !5
  br label %for.cond.114

for.end.128:                                      ; preds = %for.cond.114
  %132 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  call void @opj_read_bytes_LE(i8* %132, i32* %l_nb_comps, i32 2) #7
  %133 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %add.ptr129 = getelementptr inbounds i8, i8* %133, i64 2
  store i8* %add.ptr129, i8** %p_header_data.addr, align 8, !tbaa !1
  %134 = load i32, i32* %l_nb_comps, align 4, !tbaa !5
  %shr130 = lshr i32 %134, 15
  %add131 = add i32 1, %shr130
  store i32 %add131, i32* %l_nb_bytes_by_comp, align 4, !tbaa !5
  %135 = load i32, i32* %l_nb_comps, align 4, !tbaa !5
  %and132 = and i32 %135, 32767
  store i32 %and132, i32* %l_nb_comps, align 4, !tbaa !5
  %136 = load i32, i32* %l_nb_comps, align 4, !tbaa !5
  %137 = load %struct.opj_simple_mcc_decorrelation_data*, %struct.opj_simple_mcc_decorrelation_data** %l_mcc_record, align 8, !tbaa !1
  %m_nb_comps133 = getelementptr inbounds %struct.opj_simple_mcc_decorrelation_data, %struct.opj_simple_mcc_decorrelation_data* %137, i32 0, i32 1
  %138 = load i32, i32* %m_nb_comps133, align 4, !tbaa !99
  %cmp134 = icmp ne i32 %136, %138
  br i1 %cmp134, label %if.then.136, label %if.end.138

if.then.136:                                      ; preds = %for.end.128
  %139 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call137 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %139, i32 2, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.111, i32 0, i32 0)) #7
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.233

if.end.138:                                       ; preds = %for.end.128
  %140 = load i32, i32* %p_header_size.addr, align 4, !tbaa !5
  %141 = load i32, i32* %l_nb_bytes_by_comp, align 4, !tbaa !5
  %142 = load %struct.opj_simple_mcc_decorrelation_data*, %struct.opj_simple_mcc_decorrelation_data** %l_mcc_record, align 8, !tbaa !1
  %m_nb_comps139 = getelementptr inbounds %struct.opj_simple_mcc_decorrelation_data, %struct.opj_simple_mcc_decorrelation_data* %142, i32 0, i32 1
  %143 = load i32, i32* %m_nb_comps139, align 4, !tbaa !99
  %mul140 = mul i32 %141, %143
  %add141 = add i32 %mul140, 3
  %cmp142 = icmp ult i32 %140, %add141
  br i1 %cmp142, label %if.then.144, label %if.end.146

if.then.144:                                      ; preds = %if.end.138
  %144 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call145 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %144, i32 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.105, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.233

if.end.146:                                       ; preds = %if.end.138
  %145 = load i32, i32* %l_nb_bytes_by_comp, align 4, !tbaa !5
  %146 = load %struct.opj_simple_mcc_decorrelation_data*, %struct.opj_simple_mcc_decorrelation_data** %l_mcc_record, align 8, !tbaa !1
  %m_nb_comps147 = getelementptr inbounds %struct.opj_simple_mcc_decorrelation_data, %struct.opj_simple_mcc_decorrelation_data* %146, i32 0, i32 1
  %147 = load i32, i32* %m_nb_comps147, align 4, !tbaa !99
  %mul148 = mul i32 %145, %147
  %add149 = add i32 %mul148, 3
  %148 = load i32, i32* %p_header_size.addr, align 4, !tbaa !5
  %sub150 = sub i32 %148, %add149
  store i32 %sub150, i32* %p_header_size.addr, align 4, !tbaa !5
  store i32 0, i32* %j, align 4, !tbaa !5
  br label %for.cond.151

for.cond.151:                                     ; preds = %for.inc.163, %if.end.146
  %149 = load i32, i32* %j, align 4, !tbaa !5
  %150 = load %struct.opj_simple_mcc_decorrelation_data*, %struct.opj_simple_mcc_decorrelation_data** %l_mcc_record, align 8, !tbaa !1
  %m_nb_comps152 = getelementptr inbounds %struct.opj_simple_mcc_decorrelation_data, %struct.opj_simple_mcc_decorrelation_data* %150, i32 0, i32 1
  %151 = load i32, i32* %m_nb_comps152, align 4, !tbaa !99
  %cmp153 = icmp ult i32 %149, %151
  br i1 %cmp153, label %for.body.155, label %for.end.165

for.body.155:                                     ; preds = %for.cond.151
  %152 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %153 = load i32, i32* %l_nb_bytes_by_comp, align 4, !tbaa !5
  call void @opj_read_bytes_LE(i8* %152, i32* %l_tmp, i32 %153) #7
  %154 = load i32, i32* %l_nb_bytes_by_comp, align 4, !tbaa !5
  %155 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %idx.ext156 = zext i32 %154 to i64
  %add.ptr157 = getelementptr inbounds i8, i8* %155, i64 %idx.ext156
  store i8* %add.ptr157, i8** %p_header_data.addr, align 8, !tbaa !1
  %156 = load i32, i32* %l_tmp, align 4, !tbaa !5
  %157 = load i32, i32* %j, align 4, !tbaa !5
  %cmp158 = icmp ne i32 %156, %157
  br i1 %cmp158, label %if.then.160, label %if.end.162

if.then.160:                                      ; preds = %for.body.155
  %158 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call161 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %158, i32 2, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.110, i32 0, i32 0)) #7
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.233

if.end.162:                                       ; preds = %for.body.155
  br label %for.inc.163

for.inc.163:                                      ; preds = %if.end.162
  %159 = load i32, i32* %j, align 4, !tbaa !5
  %inc164 = add i32 %159, 1
  store i32 %inc164, i32* %j, align 4, !tbaa !5
  br label %for.cond.151

for.end.165:                                      ; preds = %for.cond.151
  %160 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  call void @opj_read_bytes_LE(i8* %160, i32* %l_tmp, i32 3) #7
  %161 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %add.ptr166 = getelementptr inbounds i8, i8* %161, i64 3
  store i8* %add.ptr166, i8** %p_header_data.addr, align 8, !tbaa !1
  %162 = load i32, i32* %l_tmp, align 4, !tbaa !5
  %shr167 = lshr i32 %162, 16
  %and168 = and i32 %shr167, 1
  %tobool169 = icmp ne i32 %and168, 0
  %lnot = xor i1 %tobool169, true
  %lnot.ext = zext i1 %lnot to i32
  %163 = load %struct.opj_simple_mcc_decorrelation_data*, %struct.opj_simple_mcc_decorrelation_data** %l_mcc_record, align 8, !tbaa !1
  %m_is_irreversible = getelementptr inbounds %struct.opj_simple_mcc_decorrelation_data, %struct.opj_simple_mcc_decorrelation_data* %163, i32 0, i32 4
  %164 = trunc i32 %lnot.ext to i8
  %bf.load = load i8, i8* %m_is_irreversible, align 8
  %bf.value = and i8 %164, 1
  %bf.clear = and i8 %bf.load, -2
  %bf.set = or i8 %bf.clear, %bf.value
  store i8 %bf.set, i8* %m_is_irreversible, align 8
  %bf.result.cast = zext i8 %bf.value to i32
  %165 = load %struct.opj_simple_mcc_decorrelation_data*, %struct.opj_simple_mcc_decorrelation_data** %l_mcc_record, align 8, !tbaa !1
  %m_decorrelation_array = getelementptr inbounds %struct.opj_simple_mcc_decorrelation_data, %struct.opj_simple_mcc_decorrelation_data* %165, i32 0, i32 2
  store %struct.opj_mct_data* null, %struct.opj_mct_data** %m_decorrelation_array, align 8, !tbaa !100
  %166 = load %struct.opj_simple_mcc_decorrelation_data*, %struct.opj_simple_mcc_decorrelation_data** %l_mcc_record, align 8, !tbaa !1
  %m_offset_array = getelementptr inbounds %struct.opj_simple_mcc_decorrelation_data, %struct.opj_simple_mcc_decorrelation_data* %166, i32 0, i32 3
  store %struct.opj_mct_data* null, %struct.opj_mct_data** %m_offset_array, align 8, !tbaa !101
  %167 = load i32, i32* %l_tmp, align 4, !tbaa !5
  %and170 = and i32 %167, 255
  store i32 %and170, i32* %l_indix, align 4, !tbaa !5
  %168 = load i32, i32* %l_indix, align 4, !tbaa !5
  %cmp171 = icmp ne i32 %168, 0
  br i1 %cmp171, label %if.then.173, label %if.end.194

if.then.173:                                      ; preds = %for.end.165
  %169 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %m_mct_records = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %169, i32 0, i32 20
  %170 = load %struct.opj_mct_data*, %struct.opj_mct_data** %m_mct_records, align 8, !tbaa !74
  store %struct.opj_mct_data* %170, %struct.opj_mct_data** %l_mct_data, align 8, !tbaa !1
  store i32 0, i32* %j, align 4, !tbaa !5
  br label %for.cond.174

for.cond.174:                                     ; preds = %for.inc.185, %if.then.173
  %171 = load i32, i32* %j, align 4, !tbaa !5
  %172 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %m_nb_mct_records = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %172, i32 0, i32 21
  %173 = load i32, i32* %m_nb_mct_records, align 4, !tbaa !89
  %cmp175 = icmp ult i32 %171, %173
  br i1 %cmp175, label %for.body.177, label %for.end.187

for.body.177:                                     ; preds = %for.cond.174
  %174 = load %struct.opj_mct_data*, %struct.opj_mct_data** %l_mct_data, align 8, !tbaa !1
  %m_index178 = getelementptr inbounds %struct.opj_mct_data, %struct.opj_mct_data* %174, i32 0, i32 2
  %175 = load i32, i32* %m_index178, align 4, !tbaa !90
  %176 = load i32, i32* %l_indix, align 4, !tbaa !5
  %cmp179 = icmp eq i32 %175, %176
  br i1 %cmp179, label %if.then.181, label %if.end.183

if.then.181:                                      ; preds = %for.body.177
  %177 = load %struct.opj_mct_data*, %struct.opj_mct_data** %l_mct_data, align 8, !tbaa !1
  %178 = load %struct.opj_simple_mcc_decorrelation_data*, %struct.opj_simple_mcc_decorrelation_data** %l_mcc_record, align 8, !tbaa !1
  %m_decorrelation_array182 = getelementptr inbounds %struct.opj_simple_mcc_decorrelation_data, %struct.opj_simple_mcc_decorrelation_data* %178, i32 0, i32 2
  store %struct.opj_mct_data* %177, %struct.opj_mct_data** %m_decorrelation_array182, align 8, !tbaa !100
  br label %for.end.187

if.end.183:                                       ; preds = %for.body.177
  %179 = load %struct.opj_mct_data*, %struct.opj_mct_data** %l_mct_data, align 8, !tbaa !1
  %incdec.ptr184 = getelementptr inbounds %struct.opj_mct_data, %struct.opj_mct_data* %179, i32 1
  store %struct.opj_mct_data* %incdec.ptr184, %struct.opj_mct_data** %l_mct_data, align 8, !tbaa !1
  br label %for.inc.185

for.inc.185:                                      ; preds = %if.end.183
  %180 = load i32, i32* %j, align 4, !tbaa !5
  %inc186 = add i32 %180, 1
  store i32 %inc186, i32* %j, align 4, !tbaa !5
  br label %for.cond.174

for.end.187:                                      ; preds = %if.then.181, %for.cond.174
  %181 = load %struct.opj_simple_mcc_decorrelation_data*, %struct.opj_simple_mcc_decorrelation_data** %l_mcc_record, align 8, !tbaa !1
  %m_decorrelation_array188 = getelementptr inbounds %struct.opj_simple_mcc_decorrelation_data, %struct.opj_simple_mcc_decorrelation_data* %181, i32 0, i32 2
  %182 = load %struct.opj_mct_data*, %struct.opj_mct_data** %m_decorrelation_array188, align 8, !tbaa !100
  %cmp189 = icmp eq %struct.opj_mct_data* %182, null
  br i1 %cmp189, label %if.then.191, label %if.end.193

if.then.191:                                      ; preds = %for.end.187
  %183 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call192 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %183, i32 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.105, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.233

if.end.193:                                       ; preds = %for.end.187
  br label %if.end.194

if.end.194:                                       ; preds = %if.end.193, %for.end.165
  %184 = load i32, i32* %l_tmp, align 4, !tbaa !5
  %shr195 = lshr i32 %184, 8
  %and196 = and i32 %shr195, 255
  store i32 %and196, i32* %l_indix, align 4, !tbaa !5
  %185 = load i32, i32* %l_indix, align 4, !tbaa !5
  %cmp197 = icmp ne i32 %185, 0
  br i1 %cmp197, label %if.then.199, label %if.end.222

if.then.199:                                      ; preds = %if.end.194
  %186 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %m_mct_records200 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %186, i32 0, i32 20
  %187 = load %struct.opj_mct_data*, %struct.opj_mct_data** %m_mct_records200, align 8, !tbaa !74
  store %struct.opj_mct_data* %187, %struct.opj_mct_data** %l_mct_data, align 8, !tbaa !1
  store i32 0, i32* %j, align 4, !tbaa !5
  br label %for.cond.201

for.cond.201:                                     ; preds = %for.inc.213, %if.then.199
  %188 = load i32, i32* %j, align 4, !tbaa !5
  %189 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %m_nb_mct_records202 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %189, i32 0, i32 21
  %190 = load i32, i32* %m_nb_mct_records202, align 4, !tbaa !89
  %cmp203 = icmp ult i32 %188, %190
  br i1 %cmp203, label %for.body.205, label %for.end.215

for.body.205:                                     ; preds = %for.cond.201
  %191 = load %struct.opj_mct_data*, %struct.opj_mct_data** %l_mct_data, align 8, !tbaa !1
  %m_index206 = getelementptr inbounds %struct.opj_mct_data, %struct.opj_mct_data* %191, i32 0, i32 2
  %192 = load i32, i32* %m_index206, align 4, !tbaa !90
  %193 = load i32, i32* %l_indix, align 4, !tbaa !5
  %cmp207 = icmp eq i32 %192, %193
  br i1 %cmp207, label %if.then.209, label %if.end.211

if.then.209:                                      ; preds = %for.body.205
  %194 = load %struct.opj_mct_data*, %struct.opj_mct_data** %l_mct_data, align 8, !tbaa !1
  %195 = load %struct.opj_simple_mcc_decorrelation_data*, %struct.opj_simple_mcc_decorrelation_data** %l_mcc_record, align 8, !tbaa !1
  %m_offset_array210 = getelementptr inbounds %struct.opj_simple_mcc_decorrelation_data, %struct.opj_simple_mcc_decorrelation_data* %195, i32 0, i32 3
  store %struct.opj_mct_data* %194, %struct.opj_mct_data** %m_offset_array210, align 8, !tbaa !101
  br label %for.end.215

if.end.211:                                       ; preds = %for.body.205
  %196 = load %struct.opj_mct_data*, %struct.opj_mct_data** %l_mct_data, align 8, !tbaa !1
  %incdec.ptr212 = getelementptr inbounds %struct.opj_mct_data, %struct.opj_mct_data* %196, i32 1
  store %struct.opj_mct_data* %incdec.ptr212, %struct.opj_mct_data** %l_mct_data, align 8, !tbaa !1
  br label %for.inc.213

for.inc.213:                                      ; preds = %if.end.211
  %197 = load i32, i32* %j, align 4, !tbaa !5
  %inc214 = add i32 %197, 1
  store i32 %inc214, i32* %j, align 4, !tbaa !5
  br label %for.cond.201

for.end.215:                                      ; preds = %if.then.209, %for.cond.201
  %198 = load %struct.opj_simple_mcc_decorrelation_data*, %struct.opj_simple_mcc_decorrelation_data** %l_mcc_record, align 8, !tbaa !1
  %m_offset_array216 = getelementptr inbounds %struct.opj_simple_mcc_decorrelation_data, %struct.opj_simple_mcc_decorrelation_data* %198, i32 0, i32 3
  %199 = load %struct.opj_mct_data*, %struct.opj_mct_data** %m_offset_array216, align 8, !tbaa !101
  %cmp217 = icmp eq %struct.opj_mct_data* %199, null
  br i1 %cmp217, label %if.then.219, label %if.end.221

if.then.219:                                      ; preds = %for.end.215
  %200 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call220 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %200, i32 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.105, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.233

if.end.221:                                       ; preds = %for.end.215
  br label %if.end.222

if.end.222:                                       ; preds = %if.end.221, %if.end.194
  br label %for.inc.223

for.inc.223:                                      ; preds = %if.end.222
  %201 = load i32, i32* %i, align 4, !tbaa !5
  %inc224 = add i32 %201, 1
  store i32 %inc224, i32* %i, align 4, !tbaa !5
  br label %for.cond.84

for.end.225:                                      ; preds = %for.cond.84
  %202 = load i32, i32* %p_header_size.addr, align 4, !tbaa !5
  %cmp226 = icmp ne i32 %202, 0
  br i1 %cmp226, label %if.then.228, label %if.end.230

if.then.228:                                      ; preds = %for.end.225
  %203 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call229 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %203, i32 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.105, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.233

if.end.230:                                       ; preds = %for.end.225
  %204 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %m_nb_mcc_records231 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %204, i32 0, i32 24
  %205 = load i32, i32* %m_nb_mcc_records231, align 4, !tbaa !96
  %inc232 = add i32 %205, 1
  store i32 %inc232, i32* %m_nb_mcc_records231, align 4, !tbaa !96
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.233

cleanup.233:                                      ; preds = %if.end.230, %if.then.228, %if.then.219, %if.then.191, %if.then.160, %if.then.144, %if.then.136, %if.then.123, %if.then.107, %if.then.96, %if.then.90, %if.then.80, %if.then.74, %cleanup, %if.then.21, %if.then.17, %if.then
  %206 = bitcast i32* %l_nb_bytes_by_comp to i8*
  call void @llvm.lifetime.end(i64 4, i8* %206) #1
  %207 = bitcast i32* %l_nb_comps to i8*
  call void @llvm.lifetime.end(i64 4, i8* %207) #1
  %208 = bitcast i32* %l_nb_collections to i8*
  call void @llvm.lifetime.end(i64 4, i8* %208) #1
  %209 = bitcast %struct.opj_mct_data** %l_mct_data to i8*
  call void @llvm.lifetime.end(i64 8, i8* %209) #1
  %210 = bitcast %struct.opj_simple_mcc_decorrelation_data** %l_mcc_record to i8*
  call void @llvm.lifetime.end(i64 8, i8* %210) #1
  %211 = bitcast %struct.opj_tcp** %l_tcp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %211) #1
  %212 = bitcast i32* %l_indix to i8*
  call void @llvm.lifetime.end(i64 4, i8* %212) #1
  %213 = bitcast i32* %l_tmp to i8*
  call void @llvm.lifetime.end(i64 4, i8* %213) #1
  %214 = bitcast i32* %j to i8*
  call void @llvm.lifetime.end(i64 4, i8* %214) #1
  %215 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %215) #1
  %216 = load i32, i32* %retval
  ret i32 %216
}

; Function Attrs: nounwind uwtable
define internal i32 @opj_j2k_read_mco(%struct.opj_j2k* %p_j2k, i8* %p_header_data, i32 %p_header_size, %struct.opj_event_mgr* %p_manager) #0 {
entry:
  %retval = alloca i32, align 4
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %p_header_data.addr = alloca i8*, align 8
  %p_header_size.addr = alloca i32, align 4
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  %l_tmp = alloca i32, align 4
  %i = alloca i32, align 4
  %l_nb_stages = alloca i32, align 4
  %l_tcp = alloca %struct.opj_tcp*, align 8
  %l_tccp = alloca %struct.opj_tccp*, align 8
  %l_image = alloca %struct.opj_image*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store i8* %p_header_data, i8** %p_header_data.addr, align 8, !tbaa !1
  store i32 %p_header_size, i32* %p_header_size.addr, align 4, !tbaa !5
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %0 = bitcast i32* %l_tmp to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = bitcast i32* %l_nb_stages to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #1
  %3 = bitcast %struct.opj_tcp** %l_tcp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #1
  %4 = bitcast %struct.opj_tccp** %l_tccp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4) #1
  %5 = bitcast %struct.opj_image** %l_image to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5) #1
  %6 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %cmp = icmp ne i8* %6, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.52, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 5482, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @__PRETTY_FUNCTION__.opj_j2k_read_mco, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %7, %cond.true
  %8 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cmp1 = icmp ne %struct.opj_j2k* %8, null
  br i1 %cmp1, label %cond.true.2, label %cond.false.3

cond.true.2:                                      ; preds = %cond.end
  br label %cond.end.4

cond.false.3:                                     ; preds = %cond.end
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 5483, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @__PRETTY_FUNCTION__.opj_j2k_read_mco, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.4

cond.end.4:                                       ; preds = %9, %cond.true.2
  %10 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %cmp5 = icmp ne %struct.opj_event_mgr* %10, null
  br i1 %cmp5, label %cond.true.6, label %cond.false.7

cond.true.6:                                      ; preds = %cond.end.4
  br label %cond.end.8

cond.false.7:                                     ; preds = %cond.end.4
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 5484, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @__PRETTY_FUNCTION__.opj_j2k_read_mco, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.8

cond.end.8:                                       ; preds = %11, %cond.true.6
  %12 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_private_image = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %12, i32 0, i32 2
  %13 = load %struct.opj_image*, %struct.opj_image** %m_private_image, align 8, !tbaa !38
  store %struct.opj_image* %13, %struct.opj_image** %l_image, align 8, !tbaa !1
  %14 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %14, i32 0, i32 1
  %m_decoder = bitcast %union.anon* %m_specific_param to %struct.opj_j2k_dec*
  %m_state = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder, i32 0, i32 0
  %15 = load i32, i32* %m_state, align 4, !tbaa !23
  %cmp9 = icmp eq i32 %15, 16
  br i1 %cmp9, label %cond.true.10, label %cond.false.11

cond.true.10:                                     ; preds = %cond.end.8
  %16 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %16, i32 0, i32 8
  %17 = load i32, i32* %m_current_tile_number, align 4, !tbaa !11
  %idxprom = zext i32 %17 to i64
  %18 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %18, i32 0, i32 4
  %tcps = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp, i32 0, i32 17
  %19 = load %struct.opj_tcp*, %struct.opj_tcp** %tcps, align 8, !tbaa !88
  %arrayidx = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %19, i64 %idxprom
  br label %cond.end.14

cond.false.11:                                    ; preds = %cond.end.8
  %20 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param12 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %20, i32 0, i32 1
  %m_decoder13 = bitcast %union.anon* %m_specific_param12 to %struct.opj_j2k_dec*
  %m_default_tcp = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder13, i32 0, i32 1
  %21 = load %struct.opj_tcp*, %struct.opj_tcp** %m_default_tcp, align 8, !tbaa !39
  br label %cond.end.14

cond.end.14:                                      ; preds = %cond.false.11, %cond.true.10
  %cond = phi %struct.opj_tcp* [ %arrayidx, %cond.true.10 ], [ %21, %cond.false.11 ]
  store %struct.opj_tcp* %cond, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %22 = load i32, i32* %p_header_size.addr, align 4, !tbaa !5
  %cmp15 = icmp ult i32 %22, 1
  br i1 %cmp15, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end.14
  %23 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %23, i32 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.112, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %cond.end.14
  %24 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  call void @opj_read_bytes_LE(i8* %24, i32* %l_nb_stages, i32 1) #7
  %25 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds i8, i8* %25, i32 1
  store i8* %incdec.ptr, i8** %p_header_data.addr, align 8, !tbaa !1
  %26 = load i32, i32* %l_nb_stages, align 4, !tbaa !5
  %cmp16 = icmp ugt i32 %26, 1
  br i1 %cmp16, label %if.then.17, label %if.end.19

if.then.17:                                       ; preds = %if.end
  %27 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call18 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %27, i32 2, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.113, i32 0, i32 0)) #7
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.19:                                        ; preds = %if.end
  %28 = load i32, i32* %p_header_size.addr, align 4, !tbaa !5
  %29 = load i32, i32* %l_nb_stages, align 4, !tbaa !5
  %add = add i32 %29, 1
  %cmp20 = icmp ne i32 %28, %add
  br i1 %cmp20, label %if.then.21, label %if.end.23

if.then.21:                                       ; preds = %if.end.19
  %30 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call22 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %30, i32 2, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.112, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.23:                                        ; preds = %if.end.19
  %31 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %tccps = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %31, i32 0, i32 13
  %32 = load %struct.opj_tccp*, %struct.opj_tccp** %tccps, align 8, !tbaa !48
  store %struct.opj_tccp* %32, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  store i32 0, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.23
  %33 = load i32, i32* %i, align 4, !tbaa !5
  %34 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %numcomps = getelementptr inbounds %struct.opj_image, %struct.opj_image* %34, i32 0, i32 4
  %35 = load i32, i32* %numcomps, align 4, !tbaa !45
  %cmp24 = icmp ult i32 %33, %35
  br i1 %cmp24, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %36 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %m_dc_level_shift = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %36, i32 0, i32 12
  store i32 0, i32* %m_dc_level_shift, align 4, !tbaa !78
  %37 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %incdec.ptr25 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %37, i32 1
  store %struct.opj_tccp* %incdec.ptr25, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %38 = load i32, i32* %i, align 4, !tbaa !5
  %inc = add i32 %38, 1
  store i32 %inc, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %39 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %m_mct_decoding_matrix = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %39, i32 0, i32 18
  %40 = load float*, float** %m_mct_decoding_matrix, align 8, !tbaa !102
  %tobool = icmp ne float* %40, null
  br i1 %tobool, label %if.then.26, label %if.end.29

if.then.26:                                       ; preds = %for.end
  %41 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %m_mct_decoding_matrix27 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %41, i32 0, i32 18
  %42 = load float*, float** %m_mct_decoding_matrix27, align 8, !tbaa !102
  %43 = bitcast float* %42 to i8*
  call void @free(i8* %43) #9
  %44 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %m_mct_decoding_matrix28 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %44, i32 0, i32 18
  store float* null, float** %m_mct_decoding_matrix28, align 8, !tbaa !102
  br label %if.end.29

if.end.29:                                        ; preds = %if.then.26, %for.end
  store i32 0, i32* %i, align 4, !tbaa !5
  br label %for.cond.30

for.cond.30:                                      ; preds = %for.inc.39, %if.end.29
  %45 = load i32, i32* %i, align 4, !tbaa !5
  %46 = load i32, i32* %l_nb_stages, align 4, !tbaa !5
  %cmp31 = icmp ult i32 %45, %46
  br i1 %cmp31, label %for.body.32, label %for.end.41

for.body.32:                                      ; preds = %for.cond.30
  %47 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  call void @opj_read_bytes_LE(i8* %47, i32* %l_tmp, i32 1) #7
  %48 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %incdec.ptr33 = getelementptr inbounds i8, i8* %48, i32 1
  store i8* %incdec.ptr33, i8** %p_header_data.addr, align 8, !tbaa !1
  %49 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %50 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_private_image34 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %50, i32 0, i32 2
  %51 = load %struct.opj_image*, %struct.opj_image** %m_private_image34, align 8, !tbaa !38
  %52 = load i32, i32* %l_tmp, align 4, !tbaa !5
  %call35 = call i32 @opj_j2k_add_mct(%struct.opj_tcp* %49, %struct.opj_image* %51, i32 %52) #7
  %tobool36 = icmp ne i32 %call35, 0
  br i1 %tobool36, label %if.end.38, label %if.then.37

if.then.37:                                       ; preds = %for.body.32
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.38:                                        ; preds = %for.body.32
  br label %for.inc.39

for.inc.39:                                       ; preds = %if.end.38
  %53 = load i32, i32* %i, align 4, !tbaa !5
  %inc40 = add i32 %53, 1
  store i32 %inc40, i32* %i, align 4, !tbaa !5
  br label %for.cond.30

for.end.41:                                       ; preds = %for.cond.30
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %for.end.41, %if.then.37, %if.then.21, %if.then.17, %if.then
  %54 = bitcast %struct.opj_image** %l_image to i8*
  call void @llvm.lifetime.end(i64 8, i8* %54) #1
  %55 = bitcast %struct.opj_tccp** %l_tccp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %55) #1
  %56 = bitcast %struct.opj_tcp** %l_tcp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %56) #1
  %57 = bitcast i32* %l_nb_stages to i8*
  call void @llvm.lifetime.end(i64 4, i8* %57) #1
  %58 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %58) #1
  %59 = bitcast i32* %l_tmp to i8*
  call void @llvm.lifetime.end(i64 4, i8* %59) #1
  %60 = load i32, i32* %retval
  ret i32 %60
}

; Function Attrs: nounwind uwtable
define i8* @opj_j2k_convert_progression_order(i32 %prg_order) #0 {
entry:
  %retval = alloca i8*, align 8
  %prg_order.addr = alloca i32, align 4
  %po = alloca %struct.j2k_prog_order*, align 8
  %cleanup.dest.slot = alloca i32
  store i32 %prg_order, i32* %prg_order.addr, align 4, !tbaa !103
  %0 = bitcast %struct.j2k_prog_order** %po to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  store %struct.j2k_prog_order* getelementptr inbounds ([6 x %struct.j2k_prog_order], [6 x %struct.j2k_prog_order]* @j2k_prog_order_list, i32 0, i32 0), %struct.j2k_prog_order** %po, align 8, !tbaa !1
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.j2k_prog_order*, %struct.j2k_prog_order** %po, align 8, !tbaa !1
  %enum_prog = getelementptr inbounds %struct.j2k_prog_order, %struct.j2k_prog_order* %1, i32 0, i32 0
  %2 = load i32, i32* %enum_prog, align 4, !tbaa !104
  %cmp = icmp ne i32 %2, -1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load %struct.j2k_prog_order*, %struct.j2k_prog_order** %po, align 8, !tbaa !1
  %enum_prog1 = getelementptr inbounds %struct.j2k_prog_order, %struct.j2k_prog_order* %3, i32 0, i32 0
  %4 = load i32, i32* %enum_prog1, align 4, !tbaa !104
  %5 = load i32, i32* %prg_order.addr, align 4, !tbaa !103
  %cmp2 = icmp eq i32 %4, %5
  br i1 %cmp2, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %6 = load %struct.j2k_prog_order*, %struct.j2k_prog_order** %po, align 8, !tbaa !1
  %str_prog = getelementptr inbounds %struct.j2k_prog_order, %struct.j2k_prog_order* %6, i32 0, i32 1
  %arraydecay = getelementptr inbounds [5 x i8], [5 x i8]* %str_prog, i32 0, i32 0
  store i8* %arraydecay, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %7 = load %struct.j2k_prog_order*, %struct.j2k_prog_order** %po, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds %struct.j2k_prog_order, %struct.j2k_prog_order* %7, i32 1
  store %struct.j2k_prog_order* %incdec.ptr, %struct.j2k_prog_order** %po, align 8, !tbaa !1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %8 = load %struct.j2k_prog_order*, %struct.j2k_prog_order** %po, align 8, !tbaa !1
  %str_prog3 = getelementptr inbounds %struct.j2k_prog_order, %struct.j2k_prog_order* %8, i32 0, i32 1
  %arraydecay4 = getelementptr inbounds [5 x i8], [5 x i8]* %str_prog3, i32 0, i32 0
  store i8* %arraydecay4, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %for.end, %if.then
  %9 = bitcast %struct.j2k_prog_order** %po to i8*
  call void @llvm.lifetime.end(i64 8, i8* %9) #1
  %10 = load i8*, i8** %retval
  ret i8* %10
}

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #1

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #1

; Function Attrs: nounwind uwtable
define void @opj_j2k_setup_decoder(%struct.opj_j2k* %j2k, %struct.opj_dparameters* %parameters) #0 {
entry:
  %j2k.addr = alloca %struct.opj_j2k*, align 8
  %parameters.addr = alloca %struct.opj_dparameters*, align 8
  store %struct.opj_j2k* %j2k, %struct.opj_j2k** %j2k.addr, align 8, !tbaa !1
  store %struct.opj_dparameters* %parameters, %struct.opj_dparameters** %parameters.addr, align 8, !tbaa !1
  %0 = load %struct.opj_j2k*, %struct.opj_j2k** %j2k.addr, align 8, !tbaa !1
  %tobool = icmp ne %struct.opj_j2k* %0, null
  br i1 %tobool, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.opj_dparameters*, %struct.opj_dparameters** %parameters.addr, align 8, !tbaa !1
  %tobool1 = icmp ne %struct.opj_dparameters* %1, null
  br i1 %tobool1, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %2 = load %struct.opj_dparameters*, %struct.opj_dparameters** %parameters.addr, align 8, !tbaa !1
  %cp_layer = getelementptr inbounds %struct.opj_dparameters, %struct.opj_dparameters* %2, i32 0, i32 1
  %3 = load i32, i32* %cp_layer, align 4, !tbaa !106
  %4 = load %struct.opj_j2k*, %struct.opj_j2k** %j2k.addr, align 8, !tbaa !1
  %m_cp = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %4, i32 0, i32 4
  %m_specific_param = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp, i32 0, i32 18
  %m_dec = bitcast %union.anon.0* %m_specific_param to %struct.opj_decoding_param*
  %m_layer = getelementptr inbounds %struct.opj_decoding_param, %struct.opj_decoding_param* %m_dec, i32 0, i32 1
  store i32 %3, i32* %m_layer, align 4, !tbaa !41
  %5 = load %struct.opj_dparameters*, %struct.opj_dparameters** %parameters.addr, align 8, !tbaa !1
  %cp_reduce = getelementptr inbounds %struct.opj_dparameters, %struct.opj_dparameters* %5, i32 0, i32 0
  %6 = load i32, i32* %cp_reduce, align 4, !tbaa !108
  %7 = load %struct.opj_j2k*, %struct.opj_j2k** %j2k.addr, align 8, !tbaa !1
  %m_cp2 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %7, i32 0, i32 4
  %m_specific_param3 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp2, i32 0, i32 18
  %m_dec4 = bitcast %union.anon.0* %m_specific_param3 to %struct.opj_decoding_param*
  %m_reduce = getelementptr inbounds %struct.opj_decoding_param, %struct.opj_decoding_param* %m_dec4, i32 0, i32 0
  store i32 %6, i32* %m_reduce, align 4, !tbaa !70
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define %struct.opj_j2k* @opj_j2k_create_compress() #0 {
entry:
  %retval = alloca %struct.opj_j2k*, align 8
  %l_j2k = alloca %struct.opj_j2k*, align 8
  %cleanup.dest.slot = alloca i32
  %0 = bitcast %struct.opj_j2k** %l_j2k to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %call = call noalias i8* @malloc(i64 296) #9
  %1 = bitcast i8* %call to %struct.opj_j2k*
  store %struct.opj_j2k* %1, %struct.opj_j2k** %l_j2k, align 8, !tbaa !1
  %2 = load %struct.opj_j2k*, %struct.opj_j2k** %l_j2k, align 8, !tbaa !1
  %tobool = icmp ne %struct.opj_j2k* %2, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct.opj_j2k* null, %struct.opj_j2k** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %3 = load %struct.opj_j2k*, %struct.opj_j2k** %l_j2k, align 8, !tbaa !1
  %4 = bitcast %struct.opj_j2k* %3 to i8*
  %call1 = call i8* @memset(i8* %4, i32 0, i64 296) #9
  %5 = load %struct.opj_j2k*, %struct.opj_j2k** %l_j2k, align 8, !tbaa !1
  %m_is_decoder = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %5, i32 0, i32 0
  store i32 0, i32* %m_is_decoder, align 4, !tbaa !109
  %6 = load %struct.opj_j2k*, %struct.opj_j2k** %l_j2k, align 8, !tbaa !1
  %m_cp = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %6, i32 0, i32 4
  %m_is_decoder2 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp, i32 0, i32 19
  %bf.load = load i8, i8* %m_is_decoder2, align 8
  %bf.clear = and i8 %bf.load, -3
  store i8 %bf.clear, i8* %m_is_decoder2, align 8
  %call3 = call noalias i8* @malloc(i64 1000) #9
  %7 = load %struct.opj_j2k*, %struct.opj_j2k** %l_j2k, align 8, !tbaa !1
  %m_specific_param = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %7, i32 0, i32 1
  %m_encoder = bitcast %union.anon* %m_specific_param to %struct.opj_j2k_enc*
  %m_header_tile_data = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder, i32 0, i32 8
  store i8* %call3, i8** %m_header_tile_data, align 8, !tbaa !110
  %8 = load %struct.opj_j2k*, %struct.opj_j2k** %l_j2k, align 8, !tbaa !1
  %m_specific_param4 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %8, i32 0, i32 1
  %m_encoder5 = bitcast %union.anon* %m_specific_param4 to %struct.opj_j2k_enc*
  %m_header_tile_data6 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder5, i32 0, i32 8
  %9 = load i8*, i8** %m_header_tile_data6, align 8, !tbaa !110
  %tobool7 = icmp ne i8* %9, null
  br i1 %tobool7, label %if.end.9, label %if.then.8

if.then.8:                                        ; preds = %if.end
  %10 = load %struct.opj_j2k*, %struct.opj_j2k** %l_j2k, align 8, !tbaa !1
  call void @opj_j2k_destroy(%struct.opj_j2k* %10) #7
  store %struct.opj_j2k* null, %struct.opj_j2k** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.9:                                         ; preds = %if.end
  %11 = load %struct.opj_j2k*, %struct.opj_j2k** %l_j2k, align 8, !tbaa !1
  %m_specific_param10 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %11, i32 0, i32 1
  %m_encoder11 = bitcast %union.anon* %m_specific_param10 to %struct.opj_j2k_enc*
  %m_header_tile_data_size = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder11, i32 0, i32 9
  store i32 1000, i32* %m_header_tile_data_size, align 4, !tbaa !112
  %call12 = call %struct.opj_procedure_list* @opj_procedure_list_create() #7
  %12 = load %struct.opj_j2k*, %struct.opj_j2k** %l_j2k, align 8, !tbaa !1
  %m_validation_list = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %12, i32 0, i32 6
  store %struct.opj_procedure_list* %call12, %struct.opj_procedure_list** %m_validation_list, align 8, !tbaa !113
  %13 = load %struct.opj_j2k*, %struct.opj_j2k** %l_j2k, align 8, !tbaa !1
  %m_validation_list13 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %13, i32 0, i32 6
  %14 = load %struct.opj_procedure_list*, %struct.opj_procedure_list** %m_validation_list13, align 8, !tbaa !113
  %tobool14 = icmp ne %struct.opj_procedure_list* %14, null
  br i1 %tobool14, label %if.end.16, label %if.then.15

if.then.15:                                       ; preds = %if.end.9
  %15 = load %struct.opj_j2k*, %struct.opj_j2k** %l_j2k, align 8, !tbaa !1
  call void @opj_j2k_destroy(%struct.opj_j2k* %15) #7
  store %struct.opj_j2k* null, %struct.opj_j2k** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.16:                                        ; preds = %if.end.9
  %call17 = call %struct.opj_procedure_list* @opj_procedure_list_create() #7
  %16 = load %struct.opj_j2k*, %struct.opj_j2k** %l_j2k, align 8, !tbaa !1
  %m_procedure_list = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %16, i32 0, i32 5
  store %struct.opj_procedure_list* %call17, %struct.opj_procedure_list** %m_procedure_list, align 8, !tbaa !114
  %17 = load %struct.opj_j2k*, %struct.opj_j2k** %l_j2k, align 8, !tbaa !1
  %m_procedure_list18 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %17, i32 0, i32 5
  %18 = load %struct.opj_procedure_list*, %struct.opj_procedure_list** %m_procedure_list18, align 8, !tbaa !114
  %tobool19 = icmp ne %struct.opj_procedure_list* %18, null
  br i1 %tobool19, label %if.end.21, label %if.then.20

if.then.20:                                       ; preds = %if.end.16
  %19 = load %struct.opj_j2k*, %struct.opj_j2k** %l_j2k, align 8, !tbaa !1
  call void @opj_j2k_destroy(%struct.opj_j2k* %19) #7
  store %struct.opj_j2k* null, %struct.opj_j2k** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.21:                                        ; preds = %if.end.16
  %20 = load %struct.opj_j2k*, %struct.opj_j2k** %l_j2k, align 8, !tbaa !1
  store %struct.opj_j2k* %20, %struct.opj_j2k** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.21, %if.then.20, %if.then.15, %if.then.8, %if.then
  %21 = bitcast %struct.opj_j2k** %l_j2k to i8*
  call void @llvm.lifetime.end(i64 8, i8* %21) #1
  %22 = load %struct.opj_j2k*, %struct.opj_j2k** %retval
  ret %struct.opj_j2k* %22
}

; Function Attrs: nounwind
declare noalias i8* @malloc(i64) #2

; Function Attrs: nounwind
declare i8* @memset(i8*, i32, i64) #2

; Function Attrs: nounwind uwtable
define void @opj_j2k_destroy(%struct.opj_j2k* %p_j2k) #0 {
entry:
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %0 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cmp = icmp eq %struct.opj_j2k* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %return

if.end:                                           ; preds = %entry
  %1 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_is_decoder = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %1, i32 0, i32 0
  %2 = load i32, i32* %m_is_decoder, align 4, !tbaa !109
  %tobool = icmp ne i32 %2, 0
  br i1 %tobool, label %if.then.1, label %if.else

if.then.1:                                        ; preds = %if.end
  %3 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %3, i32 0, i32 1
  %m_decoder = bitcast %union.anon* %m_specific_param to %struct.opj_j2k_dec*
  %m_default_tcp = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder, i32 0, i32 1
  %4 = load %struct.opj_tcp*, %struct.opj_tcp** %m_default_tcp, align 8, !tbaa !39
  %cmp2 = icmp ne %struct.opj_tcp* %4, null
  br i1 %cmp2, label %if.then.3, label %if.end.13

if.then.3:                                        ; preds = %if.then.1
  %5 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param4 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %5, i32 0, i32 1
  %m_decoder5 = bitcast %union.anon* %m_specific_param4 to %struct.opj_j2k_dec*
  %m_default_tcp6 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder5, i32 0, i32 1
  %6 = load %struct.opj_tcp*, %struct.opj_tcp** %m_default_tcp6, align 8, !tbaa !39
  call void @opj_j2k_tcp_destroy(%struct.opj_tcp* %6) #7
  %7 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param7 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %7, i32 0, i32 1
  %m_decoder8 = bitcast %union.anon* %m_specific_param7 to %struct.opj_j2k_dec*
  %m_default_tcp9 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder8, i32 0, i32 1
  %8 = load %struct.opj_tcp*, %struct.opj_tcp** %m_default_tcp9, align 8, !tbaa !39
  %9 = bitcast %struct.opj_tcp* %8 to i8*
  call void @free(i8* %9) #9
  %10 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param10 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %10, i32 0, i32 1
  %m_decoder11 = bitcast %union.anon* %m_specific_param10 to %struct.opj_j2k_dec*
  %m_default_tcp12 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder11, i32 0, i32 1
  store %struct.opj_tcp* null, %struct.opj_tcp** %m_default_tcp12, align 8, !tbaa !39
  br label %if.end.13

if.end.13:                                        ; preds = %if.then.3, %if.then.1
  %11 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param14 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %11, i32 0, i32 1
  %m_decoder15 = bitcast %union.anon* %m_specific_param14 to %struct.opj_j2k_dec*
  %m_header_data = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder15, i32 0, i32 2
  %12 = load i8*, i8** %m_header_data, align 8, !tbaa !115
  %cmp16 = icmp ne i8* %12, null
  br i1 %cmp16, label %if.then.17, label %if.end.26

if.then.17:                                       ; preds = %if.end.13
  %13 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param18 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %13, i32 0, i32 1
  %m_decoder19 = bitcast %union.anon* %m_specific_param18 to %struct.opj_j2k_dec*
  %m_header_data20 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder19, i32 0, i32 2
  %14 = load i8*, i8** %m_header_data20, align 8, !tbaa !115
  call void @free(i8* %14) #9
  %15 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param21 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %15, i32 0, i32 1
  %m_decoder22 = bitcast %union.anon* %m_specific_param21 to %struct.opj_j2k_dec*
  %m_header_data23 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder22, i32 0, i32 2
  store i8* null, i8** %m_header_data23, align 8, !tbaa !115
  %16 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param24 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %16, i32 0, i32 1
  %m_decoder25 = bitcast %union.anon* %m_specific_param24 to %struct.opj_j2k_dec*
  %m_header_data_size = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder25, i32 0, i32 3
  store i32 0, i32* %m_header_data_size, align 4, !tbaa !116
  br label %if.end.26

if.end.26:                                        ; preds = %if.then.17, %if.end.13
  br label %if.end.63

if.else:                                          ; preds = %if.end
  %17 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param27 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %17, i32 0, i32 1
  %m_encoder = bitcast %union.anon* %m_specific_param27 to %struct.opj_j2k_enc*
  %m_encoded_tile_data = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder, i32 0, i32 6
  %18 = load i8*, i8** %m_encoded_tile_data, align 8, !tbaa !117
  %tobool28 = icmp ne i8* %18, null
  br i1 %tobool28, label %if.then.29, label %if.end.36

if.then.29:                                       ; preds = %if.else
  %19 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param30 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %19, i32 0, i32 1
  %m_encoder31 = bitcast %union.anon* %m_specific_param30 to %struct.opj_j2k_enc*
  %m_encoded_tile_data32 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder31, i32 0, i32 6
  %20 = load i8*, i8** %m_encoded_tile_data32, align 8, !tbaa !117
  call void @free(i8* %20) #9
  %21 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param33 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %21, i32 0, i32 1
  %m_encoder34 = bitcast %union.anon* %m_specific_param33 to %struct.opj_j2k_enc*
  %m_encoded_tile_data35 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder34, i32 0, i32 6
  store i8* null, i8** %m_encoded_tile_data35, align 8, !tbaa !117
  br label %if.end.36

if.end.36:                                        ; preds = %if.then.29, %if.else
  %22 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param37 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %22, i32 0, i32 1
  %m_encoder38 = bitcast %union.anon* %m_specific_param37 to %struct.opj_j2k_enc*
  %m_tlm_sot_offsets_buffer = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder38, i32 0, i32 3
  %23 = load i8*, i8** %m_tlm_sot_offsets_buffer, align 8, !tbaa !118
  %tobool39 = icmp ne i8* %23, null
  br i1 %tobool39, label %if.then.40, label %if.end.49

if.then.40:                                       ; preds = %if.end.36
  %24 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param41 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %24, i32 0, i32 1
  %m_encoder42 = bitcast %union.anon* %m_specific_param41 to %struct.opj_j2k_enc*
  %m_tlm_sot_offsets_buffer43 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder42, i32 0, i32 3
  %25 = load i8*, i8** %m_tlm_sot_offsets_buffer43, align 8, !tbaa !118
  call void @free(i8* %25) #9
  %26 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param44 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %26, i32 0, i32 1
  %m_encoder45 = bitcast %union.anon* %m_specific_param44 to %struct.opj_j2k_enc*
  %m_tlm_sot_offsets_buffer46 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder45, i32 0, i32 3
  store i8* null, i8** %m_tlm_sot_offsets_buffer46, align 8, !tbaa !118
  %27 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param47 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %27, i32 0, i32 1
  %m_encoder48 = bitcast %union.anon* %m_specific_param47 to %struct.opj_j2k_enc*
  %m_tlm_sot_offsets_current = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder48, i32 0, i32 4
  store i8* null, i8** %m_tlm_sot_offsets_current, align 8, !tbaa !119
  br label %if.end.49

if.end.49:                                        ; preds = %if.then.40, %if.end.36
  %28 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param50 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %28, i32 0, i32 1
  %m_encoder51 = bitcast %union.anon* %m_specific_param50 to %struct.opj_j2k_enc*
  %m_header_tile_data = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder51, i32 0, i32 8
  %29 = load i8*, i8** %m_header_tile_data, align 8, !tbaa !110
  %tobool52 = icmp ne i8* %29, null
  br i1 %tobool52, label %if.then.53, label %if.end.62

if.then.53:                                       ; preds = %if.end.49
  %30 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param54 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %30, i32 0, i32 1
  %m_encoder55 = bitcast %union.anon* %m_specific_param54 to %struct.opj_j2k_enc*
  %m_header_tile_data56 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder55, i32 0, i32 8
  %31 = load i8*, i8** %m_header_tile_data56, align 8, !tbaa !110
  call void @free(i8* %31) #9
  %32 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param57 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %32, i32 0, i32 1
  %m_encoder58 = bitcast %union.anon* %m_specific_param57 to %struct.opj_j2k_enc*
  %m_header_tile_data59 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder58, i32 0, i32 8
  store i8* null, i8** %m_header_tile_data59, align 8, !tbaa !110
  %33 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param60 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %33, i32 0, i32 1
  %m_encoder61 = bitcast %union.anon* %m_specific_param60 to %struct.opj_j2k_enc*
  %m_header_tile_data_size = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder61, i32 0, i32 9
  store i32 0, i32* %m_header_tile_data_size, align 4, !tbaa !112
  br label %if.end.62

if.end.62:                                        ; preds = %if.then.53, %if.end.49
  br label %if.end.63

if.end.63:                                        ; preds = %if.end.62, %if.end.26
  %34 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_tcd = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %34, i32 0, i32 9
  %35 = load %struct.opj_tcd*, %struct.opj_tcd** %m_tcd, align 8, !tbaa !120
  call void @opj_tcd_destroy(%struct.opj_tcd* %35) #7
  %36 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %36, i32 0, i32 4
  call void @opj_j2k_cp_destroy(%struct.opj_cp* %m_cp) #7
  %37 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp64 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %37, i32 0, i32 4
  %38 = bitcast %struct.opj_cp* %m_cp64 to i8*
  %call = call i8* @memset(i8* %38, i32 0, i64 144) #9
  %39 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_procedure_list = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %39, i32 0, i32 5
  %40 = load %struct.opj_procedure_list*, %struct.opj_procedure_list** %m_procedure_list, align 8, !tbaa !114
  call void @opj_procedure_list_destroy(%struct.opj_procedure_list* %40) #7
  %41 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_procedure_list65 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %41, i32 0, i32 5
  store %struct.opj_procedure_list* null, %struct.opj_procedure_list** %m_procedure_list65, align 8, !tbaa !114
  %42 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_validation_list = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %42, i32 0, i32 6
  %43 = load %struct.opj_procedure_list*, %struct.opj_procedure_list** %m_validation_list, align 8, !tbaa !113
  call void @opj_procedure_list_destroy(%struct.opj_procedure_list* %43) #7
  %44 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_procedure_list66 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %44, i32 0, i32 5
  store %struct.opj_procedure_list* null, %struct.opj_procedure_list** %m_procedure_list66, align 8, !tbaa !114
  %45 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cstr_index = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %45, i32 0, i32 7
  %46 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index, align 8, !tbaa !29
  call void @j2k_destroy_cstr_index(%struct.opj_codestream_index* %46) #7
  %47 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cstr_index67 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %47, i32 0, i32 7
  store %struct.opj_codestream_index* null, %struct.opj_codestream_index** %cstr_index67, align 8, !tbaa !29
  %48 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_private_image = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %48, i32 0, i32 2
  %49 = load %struct.opj_image*, %struct.opj_image** %m_private_image, align 8, !tbaa !38
  call void @opj_image_destroy(%struct.opj_image* %49) #7
  %50 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_private_image68 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %50, i32 0, i32 2
  store %struct.opj_image* null, %struct.opj_image** %m_private_image68, align 8, !tbaa !38
  %51 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_output_image = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %51, i32 0, i32 3
  %52 = load %struct.opj_image*, %struct.opj_image** %m_output_image, align 8, !tbaa !121
  call void @opj_image_destroy(%struct.opj_image* %52) #7
  %53 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_output_image69 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %53, i32 0, i32 3
  store %struct.opj_image* null, %struct.opj_image** %m_output_image69, align 8, !tbaa !121
  %54 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %55 = bitcast %struct.opj_j2k* %54 to i8*
  call void @free(i8* %55) #9
  br label %return

return:                                           ; preds = %if.end.63, %if.then
  ret void
}

declare %struct.opj_procedure_list* @opj_procedure_list_create() #3

; Function Attrs: nounwind uwtable
define void @opj_j2k_setup_encoder(%struct.opj_j2k* %p_j2k, %struct.opj_cparameters* %parameters, %struct.opj_image* %image, %struct.opj_event_mgr* %p_manager) #0 {
entry:
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %parameters.addr = alloca %struct.opj_cparameters*, align 8
  %image.addr = alloca %struct.opj_image*, align 8
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %tileno = alloca i32, align 4
  %numpocs_tile = alloca i32, align 4
  %cp = alloca %struct.opj_cp*, align 8
  %cleanup.dest.slot = alloca i32
  %array_size = alloca i64, align 8
  %tcp = alloca %struct.opj_tcp*, align 8
  %tcp_poc = alloca %struct.opj_poc*, align 8
  %lMctSize = alloca i32, align 4
  %lTmpBuf = alloca float*, align 8
  %l_dc_shift = alloca i32*, align 8
  %tccp = alloca %struct.opj_tccp*, align 8
  %tccp342 = alloca %struct.opj_tccp*, align 8
  %l_comp = alloca %struct.opj_image_comp*, align 8
  %tccp362 = alloca %struct.opj_tccp*, align 8
  %p = alloca i32, align 4
  %it_res = alloca i32, align 4
  %res_spec450 = alloca i32, align 4
  %size_prcw = alloca i32, align 4
  %size_prch = alloca i32, align 4
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store %struct.opj_cparameters* %parameters, %struct.opj_cparameters** %parameters.addr, align 8, !tbaa !1
  store %struct.opj_image* %image, %struct.opj_image** %image.addr, align 8, !tbaa !1
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %0 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast i32* %j to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = bitcast i32* %tileno to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #1
  %3 = bitcast i32* %numpocs_tile to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #1
  %4 = bitcast %struct.opj_cp** %cp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4) #1
  store %struct.opj_cp* null, %struct.opj_cp** %cp, align 8, !tbaa !1
  %5 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %tobool = icmp ne %struct.opj_j2k* %5, null
  br i1 %tobool, label %lor.lhs.false, label %if.then

lor.lhs.false:                                    ; preds = %entry
  %6 = load %struct.opj_cparameters*, %struct.opj_cparameters** %parameters.addr, align 8, !tbaa !1
  %tobool1 = icmp ne %struct.opj_cparameters* %6, null
  br i1 %tobool1, label %lor.lhs.false.2, label %if.then

lor.lhs.false.2:                                  ; preds = %lor.lhs.false
  %7 = load %struct.opj_image*, %struct.opj_image** %image.addr, align 8, !tbaa !1
  %tobool3 = icmp ne %struct.opj_image* %7, null
  br i1 %tobool3, label %if.end, label %if.then

if.then:                                          ; preds = %lor.lhs.false.2, %lor.lhs.false, %entry
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %lor.lhs.false.2
  %8 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %8, i32 0, i32 4
  store %struct.opj_cp* %m_cp, %struct.opj_cp** %cp, align 8, !tbaa !1
  %9 = load %struct.opj_cp*, %struct.opj_cp** %cp, align 8, !tbaa !1
  %tw = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %9, i32 0, i32 6
  store i32 1, i32* %tw, align 4, !tbaa !14
  %10 = load %struct.opj_cp*, %struct.opj_cp** %cp, align 8, !tbaa !1
  %th = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %10, i32 0, i32 7
  store i32 1, i32* %th, align 4, !tbaa !15
  %11 = load %struct.opj_cparameters*, %struct.opj_cparameters** %parameters.addr, align 8, !tbaa !1
  %cp_cinema = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %11, i32 0, i32 50
  %12 = load i32, i32* %cp_cinema, align 4, !tbaa !122
  %13 = load %struct.opj_cp*, %struct.opj_cp** %cp, align 8, !tbaa !1
  %m_specific_param = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %13, i32 0, i32 18
  %m_enc = bitcast %union.anon.0* %m_specific_param to %struct.opj_encoding_param*
  %m_cinema = getelementptr inbounds %struct.opj_encoding_param, %struct.opj_encoding_param* %m_enc, i32 0, i32 0
  store i32 %12, i32* %m_cinema, align 4, !tbaa !124
  %14 = load %struct.opj_cparameters*, %struct.opj_cparameters** %parameters.addr, align 8, !tbaa !1
  %max_comp_size = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %14, i32 0, i32 51
  %15 = load i32, i32* %max_comp_size, align 4, !tbaa !126
  %16 = load %struct.opj_cp*, %struct.opj_cp** %cp, align 8, !tbaa !1
  %m_specific_param4 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %16, i32 0, i32 18
  %m_enc5 = bitcast %union.anon.0* %m_specific_param4 to %struct.opj_encoding_param*
  %m_max_comp_size = getelementptr inbounds %struct.opj_encoding_param, %struct.opj_encoding_param* %m_enc5, i32 0, i32 1
  store i32 %15, i32* %m_max_comp_size, align 4, !tbaa !127
  %17 = load %struct.opj_cparameters*, %struct.opj_cparameters** %parameters.addr, align 8, !tbaa !1
  %cp_rsiz = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %17, i32 0, i32 52
  %18 = load i32, i32* %cp_rsiz, align 4, !tbaa !128
  %19 = load %struct.opj_cp*, %struct.opj_cp** %cp, align 8, !tbaa !1
  %rsiz = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %19, i32 0, i32 0
  store i32 %18, i32* %rsiz, align 4, !tbaa !55
  %20 = load %struct.opj_cparameters*, %struct.opj_cparameters** %parameters.addr, align 8, !tbaa !1
  %cp_disto_alloc = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %20, i32 0, i32 5
  %21 = load i32, i32* %cp_disto_alloc, align 4, !tbaa !129
  %22 = load %struct.opj_cp*, %struct.opj_cp** %cp, align 8, !tbaa !1
  %m_specific_param6 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %22, i32 0, i32 18
  %m_enc7 = bitcast %union.anon.0* %m_specific_param6 to %struct.opj_encoding_param*
  %m_disto_alloc = getelementptr inbounds %struct.opj_encoding_param, %struct.opj_encoding_param* %m_enc7, i32 0, i32 5
  %23 = trunc i32 %21 to i8
  %bf.load = load i8, i8* %m_disto_alloc, align 1
  %bf.value = and i8 %23, 1
  %bf.clear = and i8 %bf.load, -2
  %bf.set = or i8 %bf.clear, %bf.value
  store i8 %bf.set, i8* %m_disto_alloc, align 1
  %bf.result.cast = zext i8 %bf.value to i32
  %24 = load %struct.opj_cparameters*, %struct.opj_cparameters** %parameters.addr, align 8, !tbaa !1
  %cp_fixed_alloc = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %24, i32 0, i32 6
  %25 = load i32, i32* %cp_fixed_alloc, align 4, !tbaa !130
  %26 = load %struct.opj_cp*, %struct.opj_cp** %cp, align 8, !tbaa !1
  %m_specific_param8 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %26, i32 0, i32 18
  %m_enc9 = bitcast %union.anon.0* %m_specific_param8 to %struct.opj_encoding_param*
  %m_fixed_alloc = getelementptr inbounds %struct.opj_encoding_param, %struct.opj_encoding_param* %m_enc9, i32 0, i32 5
  %27 = trunc i32 %25 to i8
  %bf.load10 = load i8, i8* %m_fixed_alloc, align 1
  %bf.value11 = and i8 %27, 1
  %bf.shl = shl i8 %bf.value11, 1
  %bf.clear12 = and i8 %bf.load10, -3
  %bf.set13 = or i8 %bf.clear12, %bf.shl
  store i8 %bf.set13, i8* %m_fixed_alloc, align 1
  %bf.result.cast14 = zext i8 %bf.value11 to i32
  %28 = load %struct.opj_cparameters*, %struct.opj_cparameters** %parameters.addr, align 8, !tbaa !1
  %cp_fixed_quality = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %28, i32 0, i32 7
  %29 = load i32, i32* %cp_fixed_quality, align 4, !tbaa !131
  %30 = load %struct.opj_cp*, %struct.opj_cp** %cp, align 8, !tbaa !1
  %m_specific_param15 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %30, i32 0, i32 18
  %m_enc16 = bitcast %union.anon.0* %m_specific_param15 to %struct.opj_encoding_param*
  %m_fixed_quality = getelementptr inbounds %struct.opj_encoding_param, %struct.opj_encoding_param* %m_enc16, i32 0, i32 5
  %31 = trunc i32 %29 to i8
  %bf.load17 = load i8, i8* %m_fixed_quality, align 1
  %bf.value18 = and i8 %31, 1
  %bf.shl19 = shl i8 %bf.value18, 2
  %bf.clear20 = and i8 %bf.load17, -5
  %bf.set21 = or i8 %bf.clear20, %bf.shl19
  store i8 %bf.set21, i8* %m_fixed_quality, align 1
  %bf.result.cast22 = zext i8 %bf.value18 to i32
  %32 = load %struct.opj_cparameters*, %struct.opj_cparameters** %parameters.addr, align 8, !tbaa !1
  %cp_matrice = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %32, i32 0, i32 8
  %33 = load i32*, i32** %cp_matrice, align 8, !tbaa !132
  %tobool23 = icmp ne i32* %33, null
  br i1 %tobool23, label %if.then.24, label %if.end.35

if.then.24:                                       ; preds = %if.end
  %34 = bitcast i64* %array_size to i8*
  call void @llvm.lifetime.start(i64 8, i8* %34) #1
  %35 = load %struct.opj_cparameters*, %struct.opj_cparameters** %parameters.addr, align 8, !tbaa !1
  %tcp_numlayers = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %35, i32 0, i32 14
  %36 = load i32, i32* %tcp_numlayers, align 4, !tbaa !133
  %37 = load %struct.opj_cparameters*, %struct.opj_cparameters** %parameters.addr, align 8, !tbaa !1
  %numresolution = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %37, i32 0, i32 17
  %38 = load i32, i32* %numresolution, align 4, !tbaa !134
  %mul = mul nsw i32 %36, %38
  %mul25 = mul nsw i32 %mul, 3
  %conv = sext i32 %mul25 to i64
  %mul26 = mul i64 %conv, 4
  store i64 %mul26, i64* %array_size, align 8, !tbaa !135
  %39 = load i64, i64* %array_size, align 8, !tbaa !135
  %cmp = icmp uge i64 %39, -256
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then.24
  br label %cond.end

cond.false:                                       ; preds = %if.then.24
  %40 = load i64, i64* %array_size, align 8, !tbaa !135
  %call = call noalias i8* @malloc(i64 %40) #9
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ null, %cond.true ], [ %call, %cond.false ]
  %41 = bitcast i8* %cond to i32*
  %42 = load %struct.opj_cp*, %struct.opj_cp** %cp, align 8, !tbaa !1
  %m_specific_param28 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %42, i32 0, i32 18
  %m_enc29 = bitcast %union.anon.0* %m_specific_param28 to %struct.opj_encoding_param*
  %m_matrice = getelementptr inbounds %struct.opj_encoding_param, %struct.opj_encoding_param* %m_enc29, i32 0, i32 3
  store i32* %41, i32** %m_matrice, align 8, !tbaa !136
  %43 = load %struct.opj_cp*, %struct.opj_cp** %cp, align 8, !tbaa !1
  %m_specific_param30 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %43, i32 0, i32 18
  %m_enc31 = bitcast %union.anon.0* %m_specific_param30 to %struct.opj_encoding_param*
  %m_matrice32 = getelementptr inbounds %struct.opj_encoding_param, %struct.opj_encoding_param* %m_enc31, i32 0, i32 3
  %44 = load i32*, i32** %m_matrice32, align 8, !tbaa !136
  %45 = bitcast i32* %44 to i8*
  %46 = load %struct.opj_cparameters*, %struct.opj_cparameters** %parameters.addr, align 8, !tbaa !1
  %cp_matrice33 = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %46, i32 0, i32 8
  %47 = load i32*, i32** %cp_matrice33, align 8, !tbaa !132
  %48 = bitcast i32* %47 to i8*
  %49 = load i64, i64* %array_size, align 8, !tbaa !135
  %call34 = call i8* @memcpy(i8* %45, i8* %48, i64 %49) #9
  %50 = bitcast i64* %array_size to i8*
  call void @llvm.lifetime.end(i64 8, i8* %50) #1
  br label %if.end.35

if.end.35:                                        ; preds = %cond.end, %if.end
  %51 = load %struct.opj_cparameters*, %struct.opj_cparameters** %parameters.addr, align 8, !tbaa !1
  %cp_tdx = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %51, i32 0, i32 3
  %52 = load i32, i32* %cp_tdx, align 4, !tbaa !137
  %53 = load %struct.opj_cp*, %struct.opj_cp** %cp, align 8, !tbaa !1
  %tdx = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %53, i32 0, i32 3
  store i32 %52, i32* %tdx, align 4, !tbaa !60
  %54 = load %struct.opj_cparameters*, %struct.opj_cparameters** %parameters.addr, align 8, !tbaa !1
  %cp_tdy = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %54, i32 0, i32 4
  %55 = load i32, i32* %cp_tdy, align 4, !tbaa !138
  %56 = load %struct.opj_cp*, %struct.opj_cp** %cp, align 8, !tbaa !1
  %tdy = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %56, i32 0, i32 4
  store i32 %55, i32* %tdy, align 4, !tbaa !61
  %57 = load %struct.opj_cparameters*, %struct.opj_cparameters** %parameters.addr, align 8, !tbaa !1
  %cp_tx0 = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %57, i32 0, i32 1
  %58 = load i32, i32* %cp_tx0, align 4, !tbaa !139
  %59 = load %struct.opj_cp*, %struct.opj_cp** %cp, align 8, !tbaa !1
  %tx0 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %59, i32 0, i32 1
  store i32 %58, i32* %tx0, align 4, !tbaa !72
  %60 = load %struct.opj_cparameters*, %struct.opj_cparameters** %parameters.addr, align 8, !tbaa !1
  %cp_ty0 = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %60, i32 0, i32 2
  %61 = load i32, i32* %cp_ty0, align 4, !tbaa !140
  %62 = load %struct.opj_cp*, %struct.opj_cp** %cp, align 8, !tbaa !1
  %ty0 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %62, i32 0, i32 2
  store i32 %61, i32* %ty0, align 4, !tbaa !73
  %63 = load %struct.opj_cparameters*, %struct.opj_cparameters** %parameters.addr, align 8, !tbaa !1
  %cp_comment = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %63, i32 0, i32 9
  %64 = load i8*, i8** %cp_comment, align 8, !tbaa !141
  %tobool36 = icmp ne i8* %64, null
  br i1 %tobool36, label %if.then.37, label %if.end.57

if.then.37:                                       ; preds = %if.end.35
  %65 = load %struct.opj_cparameters*, %struct.opj_cparameters** %parameters.addr, align 8, !tbaa !1
  %cp_comment38 = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %65, i32 0, i32 9
  %66 = load i8*, i8** %cp_comment38, align 8, !tbaa !141
  %call39 = call i64 @strlen(i8* %66) #10
  %add = add i64 %call39, 1
  %cmp40 = icmp uge i64 %add, -256
  br i1 %cmp40, label %cond.true.42, label %cond.false.43

cond.true.42:                                     ; preds = %if.then.37
  br label %cond.end.48

cond.false.43:                                    ; preds = %if.then.37
  %67 = load %struct.opj_cparameters*, %struct.opj_cparameters** %parameters.addr, align 8, !tbaa !1
  %cp_comment44 = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %67, i32 0, i32 9
  %68 = load i8*, i8** %cp_comment44, align 8, !tbaa !141
  %call45 = call i64 @strlen(i8* %68) #10
  %add46 = add i64 %call45, 1
  %call47 = call noalias i8* @malloc(i64 %add46) #9
  br label %cond.end.48

cond.end.48:                                      ; preds = %cond.false.43, %cond.true.42
  %cond49 = phi i8* [ null, %cond.true.42 ], [ %call47, %cond.false.43 ]
  %69 = load %struct.opj_cp*, %struct.opj_cp** %cp, align 8, !tbaa !1
  %comment = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %69, i32 0, i32 5
  store i8* %cond49, i8** %comment, align 8, !tbaa !142
  %70 = load %struct.opj_cp*, %struct.opj_cp** %cp, align 8, !tbaa !1
  %comment50 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %70, i32 0, i32 5
  %71 = load i8*, i8** %comment50, align 8, !tbaa !142
  %tobool51 = icmp ne i8* %71, null
  br i1 %tobool51, label %if.then.52, label %if.end.56

if.then.52:                                       ; preds = %cond.end.48
  %72 = load %struct.opj_cp*, %struct.opj_cp** %cp, align 8, !tbaa !1
  %comment53 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %72, i32 0, i32 5
  %73 = load i8*, i8** %comment53, align 8, !tbaa !142
  %74 = load %struct.opj_cparameters*, %struct.opj_cparameters** %parameters.addr, align 8, !tbaa !1
  %cp_comment54 = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %74, i32 0, i32 9
  %75 = load i8*, i8** %cp_comment54, align 8, !tbaa !141
  %call55 = call i8* @strcpy(i8* %73, i8* %75) #9
  br label %if.end.56

if.end.56:                                        ; preds = %if.then.52, %cond.end.48
  br label %if.end.57

if.end.57:                                        ; preds = %if.end.56, %if.end.35
  %76 = load %struct.opj_cparameters*, %struct.opj_cparameters** %parameters.addr, align 8, !tbaa !1
  %tile_size_on = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %76, i32 0, i32 0
  %77 = load i32, i32* %tile_size_on, align 4, !tbaa !143
  %tobool58 = icmp ne i32 %77, 0
  br i1 %tobool58, label %if.then.59, label %if.else

if.then.59:                                       ; preds = %if.end.57
  %78 = load %struct.opj_image*, %struct.opj_image** %image.addr, align 8, !tbaa !1
  %x1 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %78, i32 0, i32 2
  %79 = load i32, i32* %x1, align 4, !tbaa !57
  %80 = load %struct.opj_cp*, %struct.opj_cp** %cp, align 8, !tbaa !1
  %tx060 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %80, i32 0, i32 1
  %81 = load i32, i32* %tx060, align 4, !tbaa !72
  %sub = sub i32 %79, %81
  %82 = load %struct.opj_cp*, %struct.opj_cp** %cp, align 8, !tbaa !1
  %tdx61 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %82, i32 0, i32 3
  %83 = load i32, i32* %tdx61, align 4, !tbaa !60
  %call62 = call i32 @opj_int_ceildiv(i32 %sub, i32 %83) #7
  %84 = load %struct.opj_cp*, %struct.opj_cp** %cp, align 8, !tbaa !1
  %tw63 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %84, i32 0, i32 6
  store i32 %call62, i32* %tw63, align 4, !tbaa !14
  %85 = load %struct.opj_image*, %struct.opj_image** %image.addr, align 8, !tbaa !1
  %y1 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %85, i32 0, i32 3
  %86 = load i32, i32* %y1, align 4, !tbaa !59
  %87 = load %struct.opj_cp*, %struct.opj_cp** %cp, align 8, !tbaa !1
  %ty064 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %87, i32 0, i32 2
  %88 = load i32, i32* %ty064, align 4, !tbaa !73
  %sub65 = sub i32 %86, %88
  %89 = load %struct.opj_cp*, %struct.opj_cp** %cp, align 8, !tbaa !1
  %tdy66 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %89, i32 0, i32 4
  %90 = load i32, i32* %tdy66, align 4, !tbaa !61
  %call67 = call i32 @opj_int_ceildiv(i32 %sub65, i32 %90) #7
  %91 = load %struct.opj_cp*, %struct.opj_cp** %cp, align 8, !tbaa !1
  %th68 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %91, i32 0, i32 7
  store i32 %call67, i32* %th68, align 4, !tbaa !15
  br label %if.end.77

if.else:                                          ; preds = %if.end.57
  %92 = load %struct.opj_image*, %struct.opj_image** %image.addr, align 8, !tbaa !1
  %x169 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %92, i32 0, i32 2
  %93 = load i32, i32* %x169, align 4, !tbaa !57
  %94 = load %struct.opj_cp*, %struct.opj_cp** %cp, align 8, !tbaa !1
  %tx070 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %94, i32 0, i32 1
  %95 = load i32, i32* %tx070, align 4, !tbaa !72
  %sub71 = sub i32 %93, %95
  %96 = load %struct.opj_cp*, %struct.opj_cp** %cp, align 8, !tbaa !1
  %tdx72 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %96, i32 0, i32 3
  store i32 %sub71, i32* %tdx72, align 4, !tbaa !60
  %97 = load %struct.opj_image*, %struct.opj_image** %image.addr, align 8, !tbaa !1
  %y173 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %97, i32 0, i32 3
  %98 = load i32, i32* %y173, align 4, !tbaa !59
  %99 = load %struct.opj_cp*, %struct.opj_cp** %cp, align 8, !tbaa !1
  %ty074 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %99, i32 0, i32 2
  %100 = load i32, i32* %ty074, align 4, !tbaa !73
  %sub75 = sub i32 %98, %100
  %101 = load %struct.opj_cp*, %struct.opj_cp** %cp, align 8, !tbaa !1
  %tdy76 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %101, i32 0, i32 4
  store i32 %sub75, i32* %tdy76, align 4, !tbaa !61
  br label %if.end.77

if.end.77:                                        ; preds = %if.else, %if.then.59
  %102 = load %struct.opj_cparameters*, %struct.opj_cparameters** %parameters.addr, align 8, !tbaa !1
  %tp_on = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %102, i32 0, i32 53
  %103 = load i8, i8* %tp_on, align 1, !tbaa !144
  %tobool78 = icmp ne i8 %103, 0
  br i1 %tobool78, label %if.then.79, label %if.end.87

if.then.79:                                       ; preds = %if.end.77
  %104 = load %struct.opj_cparameters*, %struct.opj_cparameters** %parameters.addr, align 8, !tbaa !1
  %tp_flag = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %104, i32 0, i32 54
  %105 = load i8, i8* %tp_flag, align 1, !tbaa !145
  %106 = load %struct.opj_cp*, %struct.opj_cp** %cp, align 8, !tbaa !1
  %m_specific_param80 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %106, i32 0, i32 18
  %m_enc81 = bitcast %union.anon.0* %m_specific_param80 to %struct.opj_encoding_param*
  %m_tp_flag = getelementptr inbounds %struct.opj_encoding_param, %struct.opj_encoding_param* %m_enc81, i32 0, i32 4
  store i8 %105, i8* %m_tp_flag, align 1, !tbaa !146
  %107 = load %struct.opj_cp*, %struct.opj_cp** %cp, align 8, !tbaa !1
  %m_specific_param82 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %107, i32 0, i32 18
  %m_enc83 = bitcast %union.anon.0* %m_specific_param82 to %struct.opj_encoding_param*
  %m_tp_on = getelementptr inbounds %struct.opj_encoding_param, %struct.opj_encoding_param* %m_enc83, i32 0, i32 5
  %bf.load84 = load i8, i8* %m_tp_on, align 1
  %bf.clear85 = and i8 %bf.load84, -9
  %bf.set86 = or i8 %bf.clear85, 8
  store i8 %bf.set86, i8* %m_tp_on, align 1
  br label %if.end.87

if.end.87:                                        ; preds = %if.then.79, %if.end.77
  %108 = load %struct.opj_cp*, %struct.opj_cp** %cp, align 8, !tbaa !1
  %tw88 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %108, i32 0, i32 6
  %109 = load i32, i32* %tw88, align 4, !tbaa !14
  %110 = load %struct.opj_cp*, %struct.opj_cp** %cp, align 8, !tbaa !1
  %th89 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %110, i32 0, i32 7
  %111 = load i32, i32* %th89, align 4, !tbaa !15
  %mul90 = mul i32 %109, %111
  %conv91 = zext i32 %mul90 to i64
  %cmp92 = icmp ne i64 %conv91, 0
  br i1 %cmp92, label %land.lhs.true, label %cond.false.101

land.lhs.true:                                    ; preds = %if.end.87
  %112 = load %struct.opj_cp*, %struct.opj_cp** %cp, align 8, !tbaa !1
  %tw94 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %112, i32 0, i32 6
  %113 = load i32, i32* %tw94, align 4, !tbaa !14
  %114 = load %struct.opj_cp*, %struct.opj_cp** %cp, align 8, !tbaa !1
  %th95 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %114, i32 0, i32 7
  %115 = load i32, i32* %th95, align 4, !tbaa !15
  %mul96 = mul i32 %113, %115
  %conv97 = zext i32 %mul96 to i64
  %cmp98 = icmp uge i64 %conv97, 3247666210160132
  br i1 %cmp98, label %cond.true.100, label %cond.false.101

cond.true.100:                                    ; preds = %land.lhs.true
  br label %cond.end.107

cond.false.101:                                   ; preds = %land.lhs.true, %if.end.87
  %116 = load %struct.opj_cp*, %struct.opj_cp** %cp, align 8, !tbaa !1
  %tw102 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %116, i32 0, i32 6
  %117 = load i32, i32* %tw102, align 4, !tbaa !14
  %118 = load %struct.opj_cp*, %struct.opj_cp** %cp, align 8, !tbaa !1
  %th103 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %118, i32 0, i32 7
  %119 = load i32, i32* %th103, align 4, !tbaa !15
  %mul104 = mul i32 %117, %119
  %conv105 = zext i32 %mul104 to i64
  %call106 = call noalias i8* @calloc(i64 %conv105, i64 5680) #9
  br label %cond.end.107

cond.end.107:                                     ; preds = %cond.false.101, %cond.true.100
  %cond108 = phi i8* [ null, %cond.true.100 ], [ %call106, %cond.false.101 ]
  %120 = bitcast i8* %cond108 to %struct.opj_tcp*
  %121 = load %struct.opj_cp*, %struct.opj_cp** %cp, align 8, !tbaa !1
  %tcps = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %121, i32 0, i32 17
  store %struct.opj_tcp* %120, %struct.opj_tcp** %tcps, align 8, !tbaa !16
  %122 = load %struct.opj_cparameters*, %struct.opj_cparameters** %parameters.addr, align 8, !tbaa !1
  %numpocs = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %122, i32 0, i32 13
  %123 = load i32, i32* %numpocs, align 4, !tbaa !147
  %tobool109 = icmp ne i32 %123, 0
  br i1 %tobool109, label %if.then.110, label %if.end.115

if.then.110:                                      ; preds = %cond.end.107
  %124 = load %struct.opj_cparameters*, %struct.opj_cparameters** %parameters.addr, align 8, !tbaa !1
  %POC = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %124, i32 0, i32 12
  %arraydecay = getelementptr inbounds [32 x %struct.opj_poc], [32 x %struct.opj_poc]* %POC, i32 0, i32 0
  %125 = load %struct.opj_cparameters*, %struct.opj_cparameters** %parameters.addr, align 8, !tbaa !1
  %numpocs111 = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %125, i32 0, i32 13
  %126 = load i32, i32* %numpocs111, align 4, !tbaa !147
  %127 = load %struct.opj_cparameters*, %struct.opj_cparameters** %parameters.addr, align 8, !tbaa !1
  %numresolution112 = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %127, i32 0, i32 17
  %128 = load i32, i32* %numresolution112, align 4, !tbaa !134
  %129 = load %struct.opj_image*, %struct.opj_image** %image.addr, align 8, !tbaa !1
  %numcomps = getelementptr inbounds %struct.opj_image, %struct.opj_image* %129, i32 0, i32 4
  %130 = load i32, i32* %numcomps, align 4, !tbaa !45
  %131 = load %struct.opj_cparameters*, %struct.opj_cparameters** %parameters.addr, align 8, !tbaa !1
  %tcp_numlayers113 = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %131, i32 0, i32 14
  %132 = load i32, i32* %tcp_numlayers113, align 4, !tbaa !133
  %133 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call114 = call i32 @opj_j2k_check_poc_val(%struct.opj_poc* %arraydecay, i32 %126, i32 %128, i32 %130, i32 %132, %struct.opj_event_mgr* %133) #7
  br label %if.end.115

if.end.115:                                       ; preds = %if.then.110, %cond.end.107
  store i32 0, i32* %tileno, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc.522, %if.end.115
  %134 = load i32, i32* %tileno, align 4, !tbaa !5
  %135 = load %struct.opj_cp*, %struct.opj_cp** %cp, align 8, !tbaa !1
  %tw116 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %135, i32 0, i32 6
  %136 = load i32, i32* %tw116, align 4, !tbaa !14
  %137 = load %struct.opj_cp*, %struct.opj_cp** %cp, align 8, !tbaa !1
  %th117 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %137, i32 0, i32 7
  %138 = load i32, i32* %th117, align 4, !tbaa !15
  %mul118 = mul i32 %136, %138
  %cmp119 = icmp ult i32 %134, %mul118
  br i1 %cmp119, label %for.body, label %for.end.524

for.body:                                         ; preds = %for.cond
  %139 = bitcast %struct.opj_tcp** %tcp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %139) #1
  %140 = load i32, i32* %tileno, align 4, !tbaa !5
  %idxprom = zext i32 %140 to i64
  %141 = load %struct.opj_cp*, %struct.opj_cp** %cp, align 8, !tbaa !1
  %tcps121 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %141, i32 0, i32 17
  %142 = load %struct.opj_tcp*, %struct.opj_tcp** %tcps121, align 8, !tbaa !16
  %arrayidx = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %142, i64 %idxprom
  store %struct.opj_tcp* %arrayidx, %struct.opj_tcp** %tcp, align 8, !tbaa !1
  %143 = load %struct.opj_cparameters*, %struct.opj_cparameters** %parameters.addr, align 8, !tbaa !1
  %tcp_numlayers122 = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %143, i32 0, i32 14
  %144 = load i32, i32* %tcp_numlayers122, align 4, !tbaa !133
  %145 = load %struct.opj_tcp*, %struct.opj_tcp** %tcp, align 8, !tbaa !1
  %numlayers = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %145, i32 0, i32 2
  store i32 %144, i32* %numlayers, align 4, !tbaa !44
  store i32 0, i32* %j, align 4, !tbaa !5
  br label %for.cond.123

for.cond.123:                                     ; preds = %for.inc, %for.body
  %146 = load i32, i32* %j, align 4, !tbaa !5
  %147 = load %struct.opj_tcp*, %struct.opj_tcp** %tcp, align 8, !tbaa !1
  %numlayers124 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %147, i32 0, i32 2
  %148 = load i32, i32* %numlayers124, align 4, !tbaa !44
  %cmp125 = icmp ult i32 %146, %148
  br i1 %cmp125, label %for.body.127, label %for.end

for.body.127:                                     ; preds = %for.cond.123
  %149 = load %struct.opj_cp*, %struct.opj_cp** %cp, align 8, !tbaa !1
  %m_specific_param128 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %149, i32 0, i32 18
  %m_enc129 = bitcast %union.anon.0* %m_specific_param128 to %struct.opj_encoding_param*
  %m_cinema130 = getelementptr inbounds %struct.opj_encoding_param, %struct.opj_encoding_param* %m_enc129, i32 0, i32 0
  %150 = load i32, i32* %m_cinema130, align 4, !tbaa !124
  %tobool131 = icmp ne i32 %150, 0
  br i1 %tobool131, label %if.then.132, label %if.else.149

if.then.132:                                      ; preds = %for.body.127
  %151 = load %struct.opj_cp*, %struct.opj_cp** %cp, align 8, !tbaa !1
  %m_specific_param133 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %151, i32 0, i32 18
  %m_enc134 = bitcast %union.anon.0* %m_specific_param133 to %struct.opj_encoding_param*
  %m_fixed_quality135 = getelementptr inbounds %struct.opj_encoding_param, %struct.opj_encoding_param* %m_enc134, i32 0, i32 5
  %bf.load136 = load i8, i8* %m_fixed_quality135, align 1
  %bf.lshr = lshr i8 %bf.load136, 2
  %bf.clear137 = and i8 %bf.lshr, 1
  %bf.cast = zext i8 %bf.clear137 to i32
  %tobool138 = icmp ne i32 %bf.cast, 0
  br i1 %tobool138, label %if.then.139, label %if.end.144

if.then.139:                                      ; preds = %if.then.132
  %152 = load i32, i32* %j, align 4, !tbaa !5
  %idxprom140 = zext i32 %152 to i64
  %153 = load %struct.opj_cparameters*, %struct.opj_cparameters** %parameters.addr, align 8, !tbaa !1
  %tcp_distoratio = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %153, i32 0, i32 16
  %arrayidx141 = getelementptr inbounds [100 x float], [100 x float]* %tcp_distoratio, i32 0, i64 %idxprom140
  %154 = load float, float* %arrayidx141, align 4, !tbaa !7
  %155 = load i32, i32* %j, align 4, !tbaa !5
  %idxprom142 = zext i32 %155 to i64
  %156 = load %struct.opj_tcp*, %struct.opj_tcp** %tcp, align 8, !tbaa !1
  %distoratio = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %156, i32 0, i32 12
  %arrayidx143 = getelementptr inbounds [100 x float], [100 x float]* %distoratio, i32 0, i64 %idxprom142
  store float %154, float* %arrayidx143, align 4, !tbaa !7
  br label %if.end.144

if.end.144:                                       ; preds = %if.then.139, %if.then.132
  %157 = load i32, i32* %j, align 4, !tbaa !5
  %idxprom145 = zext i32 %157 to i64
  %158 = load %struct.opj_cparameters*, %struct.opj_cparameters** %parameters.addr, align 8, !tbaa !1
  %tcp_rates = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %158, i32 0, i32 15
  %arrayidx146 = getelementptr inbounds [100 x float], [100 x float]* %tcp_rates, i32 0, i64 %idxprom145
  %159 = load float, float* %arrayidx146, align 4, !tbaa !7
  %160 = load i32, i32* %j, align 4, !tbaa !5
  %idxprom147 = zext i32 %160 to i64
  %161 = load %struct.opj_tcp*, %struct.opj_tcp** %tcp, align 8, !tbaa !1
  %rates = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %161, i32 0, i32 5
  %arrayidx148 = getelementptr inbounds [100 x float], [100 x float]* %rates, i32 0, i64 %idxprom147
  store float %159, float* %arrayidx148, align 4, !tbaa !7
  br label %if.end.173

if.else.149:                                      ; preds = %for.body.127
  %162 = load %struct.opj_cp*, %struct.opj_cp** %cp, align 8, !tbaa !1
  %m_specific_param150 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %162, i32 0, i32 18
  %m_enc151 = bitcast %union.anon.0* %m_specific_param150 to %struct.opj_encoding_param*
  %m_fixed_quality152 = getelementptr inbounds %struct.opj_encoding_param, %struct.opj_encoding_param* %m_enc151, i32 0, i32 5
  %bf.load153 = load i8, i8* %m_fixed_quality152, align 1
  %bf.lshr154 = lshr i8 %bf.load153, 2
  %bf.clear155 = and i8 %bf.lshr154, 1
  %bf.cast156 = zext i8 %bf.clear155 to i32
  %tobool157 = icmp ne i32 %bf.cast156, 0
  br i1 %tobool157, label %if.then.158, label %if.else.165

if.then.158:                                      ; preds = %if.else.149
  %163 = load i32, i32* %j, align 4, !tbaa !5
  %idxprom159 = zext i32 %163 to i64
  %164 = load %struct.opj_cparameters*, %struct.opj_cparameters** %parameters.addr, align 8, !tbaa !1
  %tcp_distoratio160 = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %164, i32 0, i32 16
  %arrayidx161 = getelementptr inbounds [100 x float], [100 x float]* %tcp_distoratio160, i32 0, i64 %idxprom159
  %165 = load float, float* %arrayidx161, align 4, !tbaa !7
  %166 = load i32, i32* %j, align 4, !tbaa !5
  %idxprom162 = zext i32 %166 to i64
  %167 = load %struct.opj_tcp*, %struct.opj_tcp** %tcp, align 8, !tbaa !1
  %distoratio163 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %167, i32 0, i32 12
  %arrayidx164 = getelementptr inbounds [100 x float], [100 x float]* %distoratio163, i32 0, i64 %idxprom162
  store float %165, float* %arrayidx164, align 4, !tbaa !7
  br label %if.end.172

if.else.165:                                      ; preds = %if.else.149
  %168 = load i32, i32* %j, align 4, !tbaa !5
  %idxprom166 = zext i32 %168 to i64
  %169 = load %struct.opj_cparameters*, %struct.opj_cparameters** %parameters.addr, align 8, !tbaa !1
  %tcp_rates167 = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %169, i32 0, i32 15
  %arrayidx168 = getelementptr inbounds [100 x float], [100 x float]* %tcp_rates167, i32 0, i64 %idxprom166
  %170 = load float, float* %arrayidx168, align 4, !tbaa !7
  %171 = load i32, i32* %j, align 4, !tbaa !5
  %idxprom169 = zext i32 %171 to i64
  %172 = load %struct.opj_tcp*, %struct.opj_tcp** %tcp, align 8, !tbaa !1
  %rates170 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %172, i32 0, i32 5
  %arrayidx171 = getelementptr inbounds [100 x float], [100 x float]* %rates170, i32 0, i64 %idxprom169
  store float %170, float* %arrayidx171, align 4, !tbaa !7
  br label %if.end.172

if.end.172:                                       ; preds = %if.else.165, %if.then.158
  br label %if.end.173

if.end.173:                                       ; preds = %if.end.172, %if.end.144
  br label %for.inc

for.inc:                                          ; preds = %if.end.173
  %173 = load i32, i32* %j, align 4, !tbaa !5
  %inc = add i32 %173, 1
  store i32 %inc, i32* %j, align 4, !tbaa !5
  br label %for.cond.123

for.end:                                          ; preds = %for.cond.123
  %174 = load %struct.opj_cparameters*, %struct.opj_cparameters** %parameters.addr, align 8, !tbaa !1
  %csty = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %174, i32 0, i32 10
  %175 = load i32, i32* %csty, align 4, !tbaa !148
  %176 = load %struct.opj_tcp*, %struct.opj_tcp** %tcp, align 8, !tbaa !1
  %csty174 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %176, i32 0, i32 0
  store i32 %175, i32* %csty174, align 4, !tbaa !47
  %177 = load %struct.opj_cparameters*, %struct.opj_cparameters** %parameters.addr, align 8, !tbaa !1
  %prog_order = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %177, i32 0, i32 11
  %178 = load i32, i32* %prog_order, align 4, !tbaa !149
  %179 = load %struct.opj_tcp*, %struct.opj_tcp** %tcp, align 8, !tbaa !1
  %prg = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %179, i32 0, i32 1
  store i32 %178, i32* %prg, align 4, !tbaa !40
  %180 = load %struct.opj_cparameters*, %struct.opj_cparameters** %parameters.addr, align 8, !tbaa !1
  %tcp_mct = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %180, i32 0, i32 55
  %181 = load i8, i8* %tcp_mct, align 1, !tbaa !150
  %conv175 = sext i8 %181 to i32
  %182 = load %struct.opj_tcp*, %struct.opj_tcp** %tcp, align 8, !tbaa !1
  %mct = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %182, i32 0, i32 4
  store i32 %conv175, i32* %mct, align 4, !tbaa !151
  store i32 0, i32* %numpocs_tile, align 4, !tbaa !5
  %183 = load %struct.opj_tcp*, %struct.opj_tcp** %tcp, align 8, !tbaa !1
  %POC176 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %183, i32 0, i32 26
  %bf.load177 = load i8, i8* %POC176, align 8
  %bf.clear178 = and i8 %bf.load177, -3
  store i8 %bf.clear178, i8* %POC176, align 8
  %184 = load %struct.opj_cparameters*, %struct.opj_cparameters** %parameters.addr, align 8, !tbaa !1
  %numpocs179 = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %184, i32 0, i32 13
  %185 = load i32, i32* %numpocs179, align 4, !tbaa !147
  %tobool180 = icmp ne i32 %185, 0
  br i1 %tobool180, label %if.then.181, label %if.else.236

if.then.181:                                      ; preds = %for.end
  %186 = load %struct.opj_tcp*, %struct.opj_tcp** %tcp, align 8, !tbaa !1
  %POC182 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %186, i32 0, i32 26
  %bf.load183 = load i8, i8* %POC182, align 8
  %bf.clear184 = and i8 %bf.load183, -3
  %bf.set185 = or i8 %bf.clear184, 2
  store i8 %bf.set185, i8* %POC182, align 8
  store i32 0, i32* %i, align 4, !tbaa !5
  br label %for.cond.186

for.cond.186:                                     ; preds = %for.inc.231, %if.then.181
  %187 = load i32, i32* %i, align 4, !tbaa !5
  %188 = load %struct.opj_cparameters*, %struct.opj_cparameters** %parameters.addr, align 8, !tbaa !1
  %numpocs187 = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %188, i32 0, i32 13
  %189 = load i32, i32* %numpocs187, align 4, !tbaa !147
  %cmp188 = icmp ult i32 %187, %189
  br i1 %cmp188, label %for.body.190, label %for.end.233

for.body.190:                                     ; preds = %for.cond.186
  %190 = load i32, i32* %tileno, align 4, !tbaa !5
  %add191 = add i32 %190, 1
  %191 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom192 = zext i32 %191 to i64
  %192 = load %struct.opj_cparameters*, %struct.opj_cparameters** %parameters.addr, align 8, !tbaa !1
  %POC193 = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %192, i32 0, i32 12
  %arrayidx194 = getelementptr inbounds [32 x %struct.opj_poc], [32 x %struct.opj_poc]* %POC193, i32 0, i64 %idxprom192
  %tile = getelementptr inbounds %struct.opj_poc, %struct.opj_poc* %arrayidx194, i32 0, i32 11
  %193 = load i32, i32* %tile, align 4, !tbaa !152
  %cmp195 = icmp eq i32 %add191, %193
  br i1 %cmp195, label %if.then.197, label %if.end.230

if.then.197:                                      ; preds = %for.body.190
  %194 = bitcast %struct.opj_poc** %tcp_poc to i8*
  call void @llvm.lifetime.start(i64 8, i8* %194) #1
  %195 = load i32, i32* %numpocs_tile, align 4, !tbaa !5
  %idxprom198 = zext i32 %195 to i64
  %196 = load %struct.opj_tcp*, %struct.opj_tcp** %tcp, align 8, !tbaa !1
  %pocs = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %196, i32 0, i32 7
  %arrayidx199 = getelementptr inbounds [32 x %struct.opj_poc], [32 x %struct.opj_poc]* %pocs, i32 0, i64 %idxprom198
  store %struct.opj_poc* %arrayidx199, %struct.opj_poc** %tcp_poc, align 8, !tbaa !1
  %197 = load i32, i32* %numpocs_tile, align 4, !tbaa !5
  %idxprom200 = zext i32 %197 to i64
  %198 = load %struct.opj_cparameters*, %struct.opj_cparameters** %parameters.addr, align 8, !tbaa !1
  %POC201 = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %198, i32 0, i32 12
  %arrayidx202 = getelementptr inbounds [32 x %struct.opj_poc], [32 x %struct.opj_poc]* %POC201, i32 0, i64 %idxprom200
  %resno0 = getelementptr inbounds %struct.opj_poc, %struct.opj_poc* %arrayidx202, i32 0, i32 0
  %199 = load i32, i32* %resno0, align 4, !tbaa !153
  %200 = load %struct.opj_poc*, %struct.opj_poc** %tcp_poc, align 8, !tbaa !1
  %resno0203 = getelementptr inbounds %struct.opj_poc, %struct.opj_poc* %200, i32 0, i32 0
  store i32 %199, i32* %resno0203, align 4, !tbaa !153
  %201 = load i32, i32* %numpocs_tile, align 4, !tbaa !5
  %idxprom204 = zext i32 %201 to i64
  %202 = load %struct.opj_cparameters*, %struct.opj_cparameters** %parameters.addr, align 8, !tbaa !1
  %POC205 = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %202, i32 0, i32 12
  %arrayidx206 = getelementptr inbounds [32 x %struct.opj_poc], [32 x %struct.opj_poc]* %POC205, i32 0, i64 %idxprom204
  %compno0 = getelementptr inbounds %struct.opj_poc, %struct.opj_poc* %arrayidx206, i32 0, i32 1
  %203 = load i32, i32* %compno0, align 4, !tbaa !154
  %204 = load %struct.opj_poc*, %struct.opj_poc** %tcp_poc, align 8, !tbaa !1
  %compno0207 = getelementptr inbounds %struct.opj_poc, %struct.opj_poc* %204, i32 0, i32 1
  store i32 %203, i32* %compno0207, align 4, !tbaa !154
  %205 = load i32, i32* %numpocs_tile, align 4, !tbaa !5
  %idxprom208 = zext i32 %205 to i64
  %206 = load %struct.opj_cparameters*, %struct.opj_cparameters** %parameters.addr, align 8, !tbaa !1
  %POC209 = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %206, i32 0, i32 12
  %arrayidx210 = getelementptr inbounds [32 x %struct.opj_poc], [32 x %struct.opj_poc]* %POC209, i32 0, i64 %idxprom208
  %layno1 = getelementptr inbounds %struct.opj_poc, %struct.opj_poc* %arrayidx210, i32 0, i32 2
  %207 = load i32, i32* %layno1, align 4, !tbaa !155
  %208 = load %struct.opj_poc*, %struct.opj_poc** %tcp_poc, align 8, !tbaa !1
  %layno1211 = getelementptr inbounds %struct.opj_poc, %struct.opj_poc* %208, i32 0, i32 2
  store i32 %207, i32* %layno1211, align 4, !tbaa !155
  %209 = load i32, i32* %numpocs_tile, align 4, !tbaa !5
  %idxprom212 = zext i32 %209 to i64
  %210 = load %struct.opj_cparameters*, %struct.opj_cparameters** %parameters.addr, align 8, !tbaa !1
  %POC213 = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %210, i32 0, i32 12
  %arrayidx214 = getelementptr inbounds [32 x %struct.opj_poc], [32 x %struct.opj_poc]* %POC213, i32 0, i64 %idxprom212
  %resno1 = getelementptr inbounds %struct.opj_poc, %struct.opj_poc* %arrayidx214, i32 0, i32 3
  %211 = load i32, i32* %resno1, align 4, !tbaa !156
  %212 = load %struct.opj_poc*, %struct.opj_poc** %tcp_poc, align 8, !tbaa !1
  %resno1215 = getelementptr inbounds %struct.opj_poc, %struct.opj_poc* %212, i32 0, i32 3
  store i32 %211, i32* %resno1215, align 4, !tbaa !156
  %213 = load i32, i32* %numpocs_tile, align 4, !tbaa !5
  %idxprom216 = zext i32 %213 to i64
  %214 = load %struct.opj_cparameters*, %struct.opj_cparameters** %parameters.addr, align 8, !tbaa !1
  %POC217 = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %214, i32 0, i32 12
  %arrayidx218 = getelementptr inbounds [32 x %struct.opj_poc], [32 x %struct.opj_poc]* %POC217, i32 0, i64 %idxprom216
  %compno1 = getelementptr inbounds %struct.opj_poc, %struct.opj_poc* %arrayidx218, i32 0, i32 4
  %215 = load i32, i32* %compno1, align 4, !tbaa !54
  %216 = load %struct.opj_poc*, %struct.opj_poc** %tcp_poc, align 8, !tbaa !1
  %compno1219 = getelementptr inbounds %struct.opj_poc, %struct.opj_poc* %216, i32 0, i32 4
  store i32 %215, i32* %compno1219, align 4, !tbaa !54
  %217 = load i32, i32* %numpocs_tile, align 4, !tbaa !5
  %idxprom220 = zext i32 %217 to i64
  %218 = load %struct.opj_cparameters*, %struct.opj_cparameters** %parameters.addr, align 8, !tbaa !1
  %POC221 = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %218, i32 0, i32 12
  %arrayidx222 = getelementptr inbounds [32 x %struct.opj_poc], [32 x %struct.opj_poc]* %POC221, i32 0, i64 %idxprom220
  %prg1 = getelementptr inbounds %struct.opj_poc, %struct.opj_poc* %arrayidx222, i32 0, i32 8
  %219 = load i32, i32* %prg1, align 4, !tbaa !157
  %220 = load %struct.opj_poc*, %struct.opj_poc** %tcp_poc, align 8, !tbaa !1
  %prg1223 = getelementptr inbounds %struct.opj_poc, %struct.opj_poc* %220, i32 0, i32 8
  store i32 %219, i32* %prg1223, align 4, !tbaa !157
  %221 = load i32, i32* %numpocs_tile, align 4, !tbaa !5
  %idxprom224 = zext i32 %221 to i64
  %222 = load %struct.opj_cparameters*, %struct.opj_cparameters** %parameters.addr, align 8, !tbaa !1
  %POC225 = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %222, i32 0, i32 12
  %arrayidx226 = getelementptr inbounds [32 x %struct.opj_poc], [32 x %struct.opj_poc]* %POC225, i32 0, i64 %idxprom224
  %tile227 = getelementptr inbounds %struct.opj_poc, %struct.opj_poc* %arrayidx226, i32 0, i32 11
  %223 = load i32, i32* %tile227, align 4, !tbaa !152
  %224 = load %struct.opj_poc*, %struct.opj_poc** %tcp_poc, align 8, !tbaa !1
  %tile228 = getelementptr inbounds %struct.opj_poc, %struct.opj_poc* %224, i32 0, i32 11
  store i32 %223, i32* %tile228, align 4, !tbaa !152
  %225 = load i32, i32* %numpocs_tile, align 4, !tbaa !5
  %inc229 = add i32 %225, 1
  store i32 %inc229, i32* %numpocs_tile, align 4, !tbaa !5
  %226 = bitcast %struct.opj_poc** %tcp_poc to i8*
  call void @llvm.lifetime.end(i64 8, i8* %226) #1
  br label %if.end.230

if.end.230:                                       ; preds = %if.then.197, %for.body.190
  br label %for.inc.231

for.inc.231:                                      ; preds = %if.end.230
  %227 = load i32, i32* %i, align 4, !tbaa !5
  %inc232 = add i32 %227, 1
  store i32 %inc232, i32* %i, align 4, !tbaa !5
  br label %for.cond.186

for.end.233:                                      ; preds = %for.cond.186
  %228 = load i32, i32* %numpocs_tile, align 4, !tbaa !5
  %sub234 = sub i32 %228, 1
  %229 = load %struct.opj_tcp*, %struct.opj_tcp** %tcp, align 8, !tbaa !1
  %numpocs235 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %229, i32 0, i32 6
  store i32 %sub234, i32* %numpocs235, align 4, !tbaa !51
  br label %if.end.238

if.else.236:                                      ; preds = %for.end
  %230 = load %struct.opj_tcp*, %struct.opj_tcp** %tcp, align 8, !tbaa !1
  %numpocs237 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %230, i32 0, i32 6
  store i32 0, i32* %numpocs237, align 4, !tbaa !51
  br label %if.end.238

if.end.238:                                       ; preds = %if.else.236, %for.end.233
  %231 = load %struct.opj_image*, %struct.opj_image** %image.addr, align 8, !tbaa !1
  %numcomps239 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %231, i32 0, i32 4
  %232 = load i32, i32* %numcomps239, align 4, !tbaa !45
  %conv240 = zext i32 %232 to i64
  %cmp241 = icmp ne i64 %conv240, 0
  br i1 %cmp241, label %land.lhs.true.243, label %cond.false.249

land.lhs.true.243:                                ; preds = %if.end.238
  %233 = load %struct.opj_image*, %struct.opj_image** %image.addr, align 8, !tbaa !1
  %numcomps244 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %233, i32 0, i32 4
  %234 = load i32, i32* %numcomps244, align 4, !tbaa !45
  %conv245 = zext i32 %234 to i64
  %cmp246 = icmp uge i64 %conv245, 17080318586768103
  br i1 %cmp246, label %cond.true.248, label %cond.false.249

cond.true.248:                                    ; preds = %land.lhs.true.243
  br label %cond.end.253

cond.false.249:                                   ; preds = %land.lhs.true.243, %if.end.238
  %235 = load %struct.opj_image*, %struct.opj_image** %image.addr, align 8, !tbaa !1
  %numcomps250 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %235, i32 0, i32 4
  %236 = load i32, i32* %numcomps250, align 4, !tbaa !45
  %conv251 = zext i32 %236 to i64
  %call252 = call noalias i8* @calloc(i64 %conv251, i64 1080) #9
  br label %cond.end.253

cond.end.253:                                     ; preds = %cond.false.249, %cond.true.248
  %cond254 = phi i8* [ null, %cond.true.248 ], [ %call252, %cond.false.249 ]
  %237 = bitcast i8* %cond254 to %struct.opj_tccp*
  %238 = load %struct.opj_tcp*, %struct.opj_tcp** %tcp, align 8, !tbaa !1
  %tccps = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %238, i32 0, i32 13
  store %struct.opj_tccp* %237, %struct.opj_tccp** %tccps, align 8, !tbaa !48
  %239 = load %struct.opj_cparameters*, %struct.opj_cparameters** %parameters.addr, align 8, !tbaa !1
  %mct_data = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %239, i32 0, i32 57
  %240 = load i8*, i8** %mct_data, align 8, !tbaa !158
  %tobool255 = icmp ne i8* %240, null
  br i1 %tobool255, label %if.then.256, label %if.else.336

if.then.256:                                      ; preds = %cond.end.253
  %241 = bitcast i32* %lMctSize to i8*
  call void @llvm.lifetime.start(i64 4, i8* %241) #1
  %242 = load %struct.opj_image*, %struct.opj_image** %image.addr, align 8, !tbaa !1
  %numcomps257 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %242, i32 0, i32 4
  %243 = load i32, i32* %numcomps257, align 4, !tbaa !45
  %244 = load %struct.opj_image*, %struct.opj_image** %image.addr, align 8, !tbaa !1
  %numcomps258 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %244, i32 0, i32 4
  %245 = load i32, i32* %numcomps258, align 4, !tbaa !45
  %mul259 = mul i32 %243, %245
  %conv260 = zext i32 %mul259 to i64
  %mul261 = mul i64 %conv260, 4
  %conv262 = trunc i64 %mul261 to i32
  store i32 %conv262, i32* %lMctSize, align 4, !tbaa !5
  %246 = bitcast float** %lTmpBuf to i8*
  call void @llvm.lifetime.start(i64 8, i8* %246) #1
  %247 = load i32, i32* %lMctSize, align 4, !tbaa !5
  %conv263 = zext i32 %247 to i64
  %cmp264 = icmp uge i64 %conv263, -256
  br i1 %cmp264, label %cond.true.266, label %cond.false.267

cond.true.266:                                    ; preds = %if.then.256
  br label %cond.end.270

cond.false.267:                                   ; preds = %if.then.256
  %248 = load i32, i32* %lMctSize, align 4, !tbaa !5
  %conv268 = zext i32 %248 to i64
  %call269 = call noalias i8* @malloc(i64 %conv268) #9
  br label %cond.end.270

cond.end.270:                                     ; preds = %cond.false.267, %cond.true.266
  %cond271 = phi i8* [ null, %cond.true.266 ], [ %call269, %cond.false.267 ]
  %249 = bitcast i8* %cond271 to float*
  store float* %249, float** %lTmpBuf, align 8, !tbaa !1
  %250 = bitcast i32** %l_dc_shift to i8*
  call void @llvm.lifetime.start(i64 8, i8* %250) #1
  %251 = load %struct.opj_cparameters*, %struct.opj_cparameters** %parameters.addr, align 8, !tbaa !1
  %mct_data272 = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %251, i32 0, i32 57
  %252 = load i8*, i8** %mct_data272, align 8, !tbaa !158
  %253 = load i32, i32* %lMctSize, align 4, !tbaa !5
  %idx.ext = zext i32 %253 to i64
  %add.ptr = getelementptr inbounds i8, i8* %252, i64 %idx.ext
  %254 = bitcast i8* %add.ptr to i32*
  store i32* %254, i32** %l_dc_shift, align 8, !tbaa !1
  %255 = load %struct.opj_tcp*, %struct.opj_tcp** %tcp, align 8, !tbaa !1
  %mct273 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %255, i32 0, i32 4
  store i32 2, i32* %mct273, align 4, !tbaa !151
  %256 = load i32, i32* %lMctSize, align 4, !tbaa !5
  %conv274 = zext i32 %256 to i64
  %cmp275 = icmp uge i64 %conv274, -256
  br i1 %cmp275, label %cond.true.277, label %cond.false.278

cond.true.277:                                    ; preds = %cond.end.270
  br label %cond.end.281

cond.false.278:                                   ; preds = %cond.end.270
  %257 = load i32, i32* %lMctSize, align 4, !tbaa !5
  %conv279 = zext i32 %257 to i64
  %call280 = call noalias i8* @malloc(i64 %conv279) #9
  br label %cond.end.281

cond.end.281:                                     ; preds = %cond.false.278, %cond.true.277
  %cond282 = phi i8* [ null, %cond.true.277 ], [ %call280, %cond.false.278 ]
  %258 = bitcast i8* %cond282 to float*
  %259 = load %struct.opj_tcp*, %struct.opj_tcp** %tcp, align 8, !tbaa !1
  %m_mct_coding_matrix = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %259, i32 0, i32 19
  store float* %258, float** %m_mct_coding_matrix, align 8, !tbaa !159
  %260 = load %struct.opj_tcp*, %struct.opj_tcp** %tcp, align 8, !tbaa !1
  %m_mct_coding_matrix283 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %260, i32 0, i32 19
  %261 = load float*, float** %m_mct_coding_matrix283, align 8, !tbaa !159
  %262 = bitcast float* %261 to i8*
  %263 = load %struct.opj_cparameters*, %struct.opj_cparameters** %parameters.addr, align 8, !tbaa !1
  %mct_data284 = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %263, i32 0, i32 57
  %264 = load i8*, i8** %mct_data284, align 8, !tbaa !158
  %265 = load i32, i32* %lMctSize, align 4, !tbaa !5
  %conv285 = zext i32 %265 to i64
  %call286 = call i8* @memcpy(i8* %262, i8* %264, i64 %conv285) #9
  %266 = load float*, float** %lTmpBuf, align 8, !tbaa !1
  %267 = bitcast float* %266 to i8*
  %268 = load %struct.opj_cparameters*, %struct.opj_cparameters** %parameters.addr, align 8, !tbaa !1
  %mct_data287 = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %268, i32 0, i32 57
  %269 = load i8*, i8** %mct_data287, align 8, !tbaa !158
  %270 = load i32, i32* %lMctSize, align 4, !tbaa !5
  %conv288 = zext i32 %270 to i64
  %call289 = call i8* @memcpy(i8* %267, i8* %269, i64 %conv288) #9
  %271 = load i32, i32* %lMctSize, align 4, !tbaa !5
  %conv290 = zext i32 %271 to i64
  %cmp291 = icmp uge i64 %conv290, -256
  br i1 %cmp291, label %cond.true.293, label %cond.false.294

cond.true.293:                                    ; preds = %cond.end.281
  br label %cond.end.297

cond.false.294:                                   ; preds = %cond.end.281
  %272 = load i32, i32* %lMctSize, align 4, !tbaa !5
  %conv295 = zext i32 %272 to i64
  %call296 = call noalias i8* @malloc(i64 %conv295) #9
  br label %cond.end.297

cond.end.297:                                     ; preds = %cond.false.294, %cond.true.293
  %cond298 = phi i8* [ null, %cond.true.293 ], [ %call296, %cond.false.294 ]
  %273 = bitcast i8* %cond298 to float*
  %274 = load %struct.opj_tcp*, %struct.opj_tcp** %tcp, align 8, !tbaa !1
  %m_mct_decoding_matrix = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %274, i32 0, i32 18
  store float* %273, float** %m_mct_decoding_matrix, align 8, !tbaa !102
  %275 = load float*, float** %lTmpBuf, align 8, !tbaa !1
  %276 = load %struct.opj_tcp*, %struct.opj_tcp** %tcp, align 8, !tbaa !1
  %m_mct_decoding_matrix299 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %276, i32 0, i32 18
  %277 = load float*, float** %m_mct_decoding_matrix299, align 8, !tbaa !102
  %278 = load %struct.opj_image*, %struct.opj_image** %image.addr, align 8, !tbaa !1
  %numcomps300 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %278, i32 0, i32 4
  %279 = load i32, i32* %numcomps300, align 4, !tbaa !45
  %call301 = call i32 @opj_matrix_inversion_f(float* %275, float* %277, i32 %279) #7
  %tobool302 = icmp ne i32 %call301, 0
  br i1 %tobool302, label %cond.true.303, label %cond.false.304

cond.true.303:                                    ; preds = %cond.end.297
  br label %cond.end.305

cond.false.304:                                   ; preds = %cond.end.297
  call void @__assert_fail(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 5980, i8* getelementptr inbounds ([95 x i8], [95 x i8]* @__PRETTY_FUNCTION__.opj_j2k_setup_encoder, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.305

cond.end.305:                                     ; preds = %280, %cond.true.303
  %281 = load %struct.opj_image*, %struct.opj_image** %image.addr, align 8, !tbaa !1
  %numcomps306 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %281, i32 0, i32 4
  %282 = load i32, i32* %numcomps306, align 4, !tbaa !45
  %conv307 = zext i32 %282 to i64
  %mul308 = mul i64 %conv307, 8
  %cmp309 = icmp uge i64 %mul308, -256
  br i1 %cmp309, label %cond.true.311, label %cond.false.312

cond.true.311:                                    ; preds = %cond.end.305
  br label %cond.end.317

cond.false.312:                                   ; preds = %cond.end.305
  %283 = load %struct.opj_image*, %struct.opj_image** %image.addr, align 8, !tbaa !1
  %numcomps313 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %283, i32 0, i32 4
  %284 = load i32, i32* %numcomps313, align 4, !tbaa !45
  %conv314 = zext i32 %284 to i64
  %mul315 = mul i64 %conv314, 8
  %call316 = call noalias i8* @malloc(i64 %mul315) #9
  br label %cond.end.317

cond.end.317:                                     ; preds = %cond.false.312, %cond.true.311
  %cond318 = phi i8* [ null, %cond.true.311 ], [ %call316, %cond.false.312 ]
  %285 = bitcast i8* %cond318 to double*
  %286 = load %struct.opj_tcp*, %struct.opj_tcp** %tcp, align 8, !tbaa !1
  %mct_norms = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %286, i32 0, i32 17
  store double* %285, double** %mct_norms, align 8, !tbaa !160
  %287 = load %struct.opj_tcp*, %struct.opj_tcp** %tcp, align 8, !tbaa !1
  %mct_norms319 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %287, i32 0, i32 17
  %288 = load double*, double** %mct_norms319, align 8, !tbaa !160
  %289 = load %struct.opj_image*, %struct.opj_image** %image.addr, align 8, !tbaa !1
  %numcomps320 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %289, i32 0, i32 4
  %290 = load i32, i32* %numcomps320, align 4, !tbaa !45
  %291 = load %struct.opj_tcp*, %struct.opj_tcp** %tcp, align 8, !tbaa !1
  %m_mct_decoding_matrix321 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %291, i32 0, i32 18
  %292 = load float*, float** %m_mct_decoding_matrix321, align 8, !tbaa !102
  call void @opj_calculate_norms(double* %288, i32 %290, float* %292) #7
  %293 = load float*, float** %lTmpBuf, align 8, !tbaa !1
  %294 = bitcast float* %293 to i8*
  call void @free(i8* %294) #9
  store i32 0, i32* %i, align 4, !tbaa !5
  br label %for.cond.322

for.cond.322:                                     ; preds = %for.inc.332, %cond.end.317
  %295 = load i32, i32* %i, align 4, !tbaa !5
  %296 = load %struct.opj_image*, %struct.opj_image** %image.addr, align 8, !tbaa !1
  %numcomps323 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %296, i32 0, i32 4
  %297 = load i32, i32* %numcomps323, align 4, !tbaa !45
  %cmp324 = icmp ult i32 %295, %297
  br i1 %cmp324, label %for.body.326, label %for.end.334

for.body.326:                                     ; preds = %for.cond.322
  %298 = bitcast %struct.opj_tccp** %tccp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %298) #1
  %299 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom327 = zext i32 %299 to i64
  %300 = load %struct.opj_tcp*, %struct.opj_tcp** %tcp, align 8, !tbaa !1
  %tccps328 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %300, i32 0, i32 13
  %301 = load %struct.opj_tccp*, %struct.opj_tccp** %tccps328, align 8, !tbaa !48
  %arrayidx329 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %301, i64 %idxprom327
  store %struct.opj_tccp* %arrayidx329, %struct.opj_tccp** %tccp, align 8, !tbaa !1
  %302 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom330 = zext i32 %302 to i64
  %303 = load i32*, i32** %l_dc_shift, align 8, !tbaa !1
  %arrayidx331 = getelementptr inbounds i32, i32* %303, i64 %idxprom330
  %304 = load i32, i32* %arrayidx331, align 4, !tbaa !5
  %305 = load %struct.opj_tccp*, %struct.opj_tccp** %tccp, align 8, !tbaa !1
  %m_dc_level_shift = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %305, i32 0, i32 12
  store i32 %304, i32* %m_dc_level_shift, align 4, !tbaa !78
  %306 = bitcast %struct.opj_tccp** %tccp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %306) #1
  br label %for.inc.332

for.inc.332:                                      ; preds = %for.body.326
  %307 = load i32, i32* %i, align 4, !tbaa !5
  %inc333 = add i32 %307, 1
  store i32 %inc333, i32* %i, align 4, !tbaa !5
  br label %for.cond.322

for.end.334:                                      ; preds = %for.cond.322
  %308 = load %struct.opj_tcp*, %struct.opj_tcp** %tcp, align 8, !tbaa !1
  %309 = load %struct.opj_image*, %struct.opj_image** %image.addr, align 8, !tbaa !1
  %call335 = call i32 @opj_j2k_setup_mct_encoding(%struct.opj_tcp* %308, %struct.opj_image* %309) #7
  %310 = bitcast i32** %l_dc_shift to i8*
  call void @llvm.lifetime.end(i64 8, i8* %310) #1
  %311 = bitcast float** %lTmpBuf to i8*
  call void @llvm.lifetime.end(i64 8, i8* %311) #1
  %312 = bitcast i32* %lMctSize to i8*
  call void @llvm.lifetime.end(i64 4, i8* %312) #1
  br label %if.end.356

if.else.336:                                      ; preds = %cond.end.253
  store i32 0, i32* %i, align 4, !tbaa !5
  br label %for.cond.337

for.cond.337:                                     ; preds = %for.inc.353, %if.else.336
  %313 = load i32, i32* %i, align 4, !tbaa !5
  %314 = load %struct.opj_image*, %struct.opj_image** %image.addr, align 8, !tbaa !1
  %numcomps338 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %314, i32 0, i32 4
  %315 = load i32, i32* %numcomps338, align 4, !tbaa !45
  %cmp339 = icmp ult i32 %313, %315
  br i1 %cmp339, label %for.body.341, label %for.end.355

for.body.341:                                     ; preds = %for.cond.337
  %316 = bitcast %struct.opj_tccp** %tccp342 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %316) #1
  %317 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom343 = zext i32 %317 to i64
  %318 = load %struct.opj_tcp*, %struct.opj_tcp** %tcp, align 8, !tbaa !1
  %tccps344 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %318, i32 0, i32 13
  %319 = load %struct.opj_tccp*, %struct.opj_tccp** %tccps344, align 8, !tbaa !48
  %arrayidx345 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %319, i64 %idxprom343
  store %struct.opj_tccp* %arrayidx345, %struct.opj_tccp** %tccp342, align 8, !tbaa !1
  %320 = bitcast %struct.opj_image_comp** %l_comp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %320) #1
  %321 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom346 = zext i32 %321 to i64
  %322 = load %struct.opj_image*, %struct.opj_image** %image.addr, align 8, !tbaa !1
  %comps = getelementptr inbounds %struct.opj_image, %struct.opj_image* %322, i32 0, i32 6
  %323 = load %struct.opj_image_comp*, %struct.opj_image_comp** %comps, align 8, !tbaa !62
  %arrayidx347 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %323, i64 %idxprom346
  store %struct.opj_image_comp* %arrayidx347, %struct.opj_image_comp** %l_comp, align 8, !tbaa !1
  %324 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_comp, align 8, !tbaa !1
  %sgnd = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %324, i32 0, i32 8
  %325 = load i32, i32* %sgnd, align 4, !tbaa !66
  %tobool348 = icmp ne i32 %325, 0
  br i1 %tobool348, label %if.end.352, label %if.then.349

if.then.349:                                      ; preds = %for.body.341
  %326 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_comp, align 8, !tbaa !1
  %prec = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %326, i32 0, i32 6
  %327 = load i32, i32* %prec, align 4, !tbaa !63
  %sub350 = sub i32 %327, 1
  %shl = shl i32 1, %sub350
  %328 = load %struct.opj_tccp*, %struct.opj_tccp** %tccp342, align 8, !tbaa !1
  %m_dc_level_shift351 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %328, i32 0, i32 12
  store i32 %shl, i32* %m_dc_level_shift351, align 4, !tbaa !78
  br label %if.end.352

if.end.352:                                       ; preds = %if.then.349, %for.body.341
  %329 = bitcast %struct.opj_image_comp** %l_comp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %329) #1
  %330 = bitcast %struct.opj_tccp** %tccp342 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %330) #1
  br label %for.inc.353

for.inc.353:                                      ; preds = %if.end.352
  %331 = load i32, i32* %i, align 4, !tbaa !5
  %inc354 = add i32 %331, 1
  store i32 %inc354, i32* %i, align 4, !tbaa !5
  br label %for.cond.337

for.end.355:                                      ; preds = %for.cond.337
  br label %if.end.356

if.end.356:                                       ; preds = %for.end.355, %for.end.334
  store i32 0, i32* %i, align 4, !tbaa !5
  br label %for.cond.357

for.cond.357:                                     ; preds = %for.inc.519, %if.end.356
  %332 = load i32, i32* %i, align 4, !tbaa !5
  %333 = load %struct.opj_image*, %struct.opj_image** %image.addr, align 8, !tbaa !1
  %numcomps358 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %333, i32 0, i32 4
  %334 = load i32, i32* %numcomps358, align 4, !tbaa !45
  %cmp359 = icmp ult i32 %332, %334
  br i1 %cmp359, label %for.body.361, label %for.end.521

for.body.361:                                     ; preds = %for.cond.357
  %335 = bitcast %struct.opj_tccp** %tccp362 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %335) #1
  %336 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom363 = zext i32 %336 to i64
  %337 = load %struct.opj_tcp*, %struct.opj_tcp** %tcp, align 8, !tbaa !1
  %tccps364 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %337, i32 0, i32 13
  %338 = load %struct.opj_tccp*, %struct.opj_tccp** %tccps364, align 8, !tbaa !48
  %arrayidx365 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %338, i64 %idxprom363
  store %struct.opj_tccp* %arrayidx365, %struct.opj_tccp** %tccp362, align 8, !tbaa !1
  %339 = load %struct.opj_cparameters*, %struct.opj_cparameters** %parameters.addr, align 8, !tbaa !1
  %csty366 = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %339, i32 0, i32 10
  %340 = load i32, i32* %csty366, align 4, !tbaa !148
  %and = and i32 %340, 1
  %341 = load %struct.opj_tccp*, %struct.opj_tccp** %tccp362, align 8, !tbaa !1
  %csty367 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %341, i32 0, i32 0
  store i32 %and, i32* %csty367, align 4, !tbaa !49
  %342 = load %struct.opj_cparameters*, %struct.opj_cparameters** %parameters.addr, align 8, !tbaa !1
  %numresolution368 = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %342, i32 0, i32 17
  %343 = load i32, i32* %numresolution368, align 4, !tbaa !134
  %344 = load %struct.opj_tccp*, %struct.opj_tccp** %tccp362, align 8, !tbaa !1
  %numresolutions = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %344, i32 0, i32 1
  store i32 %343, i32* %numresolutions, align 4, !tbaa !161
  %345 = load %struct.opj_cparameters*, %struct.opj_cparameters** %parameters.addr, align 8, !tbaa !1
  %cblockw_init = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %345, i32 0, i32 18
  %346 = load i32, i32* %cblockw_init, align 4, !tbaa !162
  %call369 = call i32 @opj_int_floorlog2(i32 %346) #7
  %347 = load %struct.opj_tccp*, %struct.opj_tccp** %tccp362, align 8, !tbaa !1
  %cblkw = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %347, i32 0, i32 2
  store i32 %call369, i32* %cblkw, align 4, !tbaa !163
  %348 = load %struct.opj_cparameters*, %struct.opj_cparameters** %parameters.addr, align 8, !tbaa !1
  %cblockh_init = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %348, i32 0, i32 19
  %349 = load i32, i32* %cblockh_init, align 4, !tbaa !164
  %call370 = call i32 @opj_int_floorlog2(i32 %349) #7
  %350 = load %struct.opj_tccp*, %struct.opj_tccp** %tccp362, align 8, !tbaa !1
  %cblkh = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %350, i32 0, i32 3
  store i32 %call370, i32* %cblkh, align 4, !tbaa !165
  %351 = load %struct.opj_cparameters*, %struct.opj_cparameters** %parameters.addr, align 8, !tbaa !1
  %mode = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %351, i32 0, i32 20
  %352 = load i32, i32* %mode, align 4, !tbaa !166
  %353 = load %struct.opj_tccp*, %struct.opj_tccp** %tccp362, align 8, !tbaa !1
  %cblksty = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %353, i32 0, i32 4
  store i32 %352, i32* %cblksty, align 4, !tbaa !167
  %354 = load %struct.opj_cparameters*, %struct.opj_cparameters** %parameters.addr, align 8, !tbaa !1
  %irreversible = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %354, i32 0, i32 21
  %355 = load i32, i32* %irreversible, align 4, !tbaa !168
  %tobool371 = icmp ne i32 %355, 0
  %cond372 = select i1 %tobool371, i32 0, i32 1
  %356 = load %struct.opj_tccp*, %struct.opj_tccp** %tccp362, align 8, !tbaa !1
  %qmfbid = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %356, i32 0, i32 5
  store i32 %cond372, i32* %qmfbid, align 4, !tbaa !169
  %357 = load %struct.opj_cparameters*, %struct.opj_cparameters** %parameters.addr, align 8, !tbaa !1
  %irreversible373 = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %357, i32 0, i32 21
  %358 = load i32, i32* %irreversible373, align 4, !tbaa !168
  %tobool374 = icmp ne i32 %358, 0
  %cond375 = select i1 %tobool374, i32 2, i32 0
  %359 = load %struct.opj_tccp*, %struct.opj_tccp** %tccp362, align 8, !tbaa !1
  %qntsty = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %359, i32 0, i32 6
  store i32 %cond375, i32* %qntsty, align 4, !tbaa !170
  %360 = load %struct.opj_tccp*, %struct.opj_tccp** %tccp362, align 8, !tbaa !1
  %numgbits = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %360, i32 0, i32 8
  store i32 2, i32* %numgbits, align 4, !tbaa !171
  %361 = load i32, i32* %i, align 4, !tbaa !5
  %362 = load %struct.opj_cparameters*, %struct.opj_cparameters** %parameters.addr, align 8, !tbaa !1
  %roi_compno = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %362, i32 0, i32 22
  %363 = load i32, i32* %roi_compno, align 4, !tbaa !172
  %cmp376 = icmp eq i32 %361, %363
  br i1 %cmp376, label %if.then.378, label %if.else.379

if.then.378:                                      ; preds = %for.body.361
  %364 = load %struct.opj_cparameters*, %struct.opj_cparameters** %parameters.addr, align 8, !tbaa !1
  %roi_shift = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %364, i32 0, i32 23
  %365 = load i32, i32* %roi_shift, align 4, !tbaa !173
  %366 = load %struct.opj_tccp*, %struct.opj_tccp** %tccp362, align 8, !tbaa !1
  %roishift = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %366, i32 0, i32 9
  store i32 %365, i32* %roishift, align 4, !tbaa !174
  br label %if.end.381

if.else.379:                                      ; preds = %for.body.361
  %367 = load %struct.opj_tccp*, %struct.opj_tccp** %tccp362, align 8, !tbaa !1
  %roishift380 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %367, i32 0, i32 9
  store i32 0, i32* %roishift380, align 4, !tbaa !174
  br label %if.end.381

if.end.381:                                       ; preds = %if.else.379, %if.then.378
  %368 = load %struct.opj_cparameters*, %struct.opj_cparameters** %parameters.addr, align 8, !tbaa !1
  %cp_cinema382 = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %368, i32 0, i32 50
  %369 = load i32, i32* %cp_cinema382, align 4, !tbaa !122
  %tobool383 = icmp ne i32 %369, 0
  br i1 %tobool383, label %if.then.384, label %if.else.401

if.then.384:                                      ; preds = %if.end.381
  %370 = load %struct.opj_tccp*, %struct.opj_tccp** %tccp362, align 8, !tbaa !1
  %prcw = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %370, i32 0, i32 10
  %arrayidx385 = getelementptr inbounds [33 x i32], [33 x i32]* %prcw, i32 0, i64 0
  store i32 7, i32* %arrayidx385, align 4, !tbaa !5
  %371 = load %struct.opj_tccp*, %struct.opj_tccp** %tccp362, align 8, !tbaa !1
  %prch = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %371, i32 0, i32 11
  %arrayidx386 = getelementptr inbounds [33 x i32], [33 x i32]* %prch, i32 0, i64 0
  store i32 7, i32* %arrayidx386, align 4, !tbaa !5
  store i32 1, i32* %j, align 4, !tbaa !5
  br label %for.cond.387

for.cond.387:                                     ; preds = %for.inc.398, %if.then.384
  %372 = load i32, i32* %j, align 4, !tbaa !5
  %373 = load %struct.opj_tccp*, %struct.opj_tccp** %tccp362, align 8, !tbaa !1
  %numresolutions388 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %373, i32 0, i32 1
  %374 = load i32, i32* %numresolutions388, align 4, !tbaa !161
  %cmp389 = icmp ult i32 %372, %374
  br i1 %cmp389, label %for.body.391, label %for.end.400

for.body.391:                                     ; preds = %for.cond.387
  %375 = load i32, i32* %j, align 4, !tbaa !5
  %idxprom392 = zext i32 %375 to i64
  %376 = load %struct.opj_tccp*, %struct.opj_tccp** %tccp362, align 8, !tbaa !1
  %prcw393 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %376, i32 0, i32 10
  %arrayidx394 = getelementptr inbounds [33 x i32], [33 x i32]* %prcw393, i32 0, i64 %idxprom392
  store i32 8, i32* %arrayidx394, align 4, !tbaa !5
  %377 = load i32, i32* %j, align 4, !tbaa !5
  %idxprom395 = zext i32 %377 to i64
  %378 = load %struct.opj_tccp*, %struct.opj_tccp** %tccp362, align 8, !tbaa !1
  %prch396 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %378, i32 0, i32 11
  %arrayidx397 = getelementptr inbounds [33 x i32], [33 x i32]* %prch396, i32 0, i64 %idxprom395
  store i32 8, i32* %arrayidx397, align 4, !tbaa !5
  br label %for.inc.398

for.inc.398:                                      ; preds = %for.body.391
  %379 = load i32, i32* %j, align 4, !tbaa !5
  %inc399 = add i32 %379, 1
  store i32 %inc399, i32* %j, align 4, !tbaa !5
  br label %for.cond.387

for.end.400:                                      ; preds = %for.cond.387
  br label %if.end.514

if.else.401:                                      ; preds = %if.end.381
  %380 = load %struct.opj_cparameters*, %struct.opj_cparameters** %parameters.addr, align 8, !tbaa !1
  %csty402 = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %380, i32 0, i32 10
  %381 = load i32, i32* %csty402, align 4, !tbaa !148
  %and403 = and i32 %381, 1
  %tobool404 = icmp ne i32 %and403, 0
  br i1 %tobool404, label %if.then.405, label %if.else.498

if.then.405:                                      ; preds = %if.else.401
  %382 = bitcast i32* %p to i8*
  call void @llvm.lifetime.start(i64 4, i8* %382) #1
  store i32 0, i32* %p, align 4, !tbaa !5
  %383 = bitcast i32* %it_res to i8*
  call void @llvm.lifetime.start(i64 4, i8* %383) #1
  %384 = load %struct.opj_tccp*, %struct.opj_tccp** %tccp362, align 8, !tbaa !1
  %numresolutions406 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %384, i32 0, i32 1
  %385 = load i32, i32* %numresolutions406, align 4, !tbaa !161
  %sub407 = sub i32 %385, 1
  store i32 %sub407, i32* %it_res, align 4, !tbaa !5
  br label %for.cond.408

for.cond.408:                                     ; preds = %for.inc.496, %if.then.405
  %386 = load i32, i32* %it_res, align 4, !tbaa !5
  %cmp409 = icmp sge i32 %386, 0
  br i1 %cmp409, label %for.body.411, label %for.end.497

for.body.411:                                     ; preds = %for.cond.408
  %387 = load i32, i32* %p, align 4, !tbaa !5
  %388 = load %struct.opj_cparameters*, %struct.opj_cparameters** %parameters.addr, align 8, !tbaa !1
  %res_spec = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %388, i32 0, i32 24
  %389 = load i32, i32* %res_spec, align 4, !tbaa !175
  %cmp412 = icmp slt i32 %387, %389
  br i1 %cmp412, label %if.then.414, label %if.else.449

if.then.414:                                      ; preds = %for.body.411
  %390 = load i32, i32* %p, align 4, !tbaa !5
  %idxprom415 = sext i32 %390 to i64
  %391 = load %struct.opj_cparameters*, %struct.opj_cparameters** %parameters.addr, align 8, !tbaa !1
  %prcw_init = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %391, i32 0, i32 25
  %arrayidx416 = getelementptr inbounds [33 x i32], [33 x i32]* %prcw_init, i32 0, i64 %idxprom415
  %392 = load i32, i32* %arrayidx416, align 4, !tbaa !5
  %cmp417 = icmp slt i32 %392, 1
  br i1 %cmp417, label %if.then.419, label %if.else.423

if.then.419:                                      ; preds = %if.then.414
  %393 = load i32, i32* %it_res, align 4, !tbaa !5
  %idxprom420 = sext i32 %393 to i64
  %394 = load %struct.opj_tccp*, %struct.opj_tccp** %tccp362, align 8, !tbaa !1
  %prcw421 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %394, i32 0, i32 10
  %arrayidx422 = getelementptr inbounds [33 x i32], [33 x i32]* %prcw421, i32 0, i64 %idxprom420
  store i32 1, i32* %arrayidx422, align 4, !tbaa !5
  br label %if.end.431

if.else.423:                                      ; preds = %if.then.414
  %395 = load i32, i32* %p, align 4, !tbaa !5
  %idxprom424 = sext i32 %395 to i64
  %396 = load %struct.opj_cparameters*, %struct.opj_cparameters** %parameters.addr, align 8, !tbaa !1
  %prcw_init425 = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %396, i32 0, i32 25
  %arrayidx426 = getelementptr inbounds [33 x i32], [33 x i32]* %prcw_init425, i32 0, i64 %idxprom424
  %397 = load i32, i32* %arrayidx426, align 4, !tbaa !5
  %call427 = call i32 @opj_int_floorlog2(i32 %397) #7
  %398 = load i32, i32* %it_res, align 4, !tbaa !5
  %idxprom428 = sext i32 %398 to i64
  %399 = load %struct.opj_tccp*, %struct.opj_tccp** %tccp362, align 8, !tbaa !1
  %prcw429 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %399, i32 0, i32 10
  %arrayidx430 = getelementptr inbounds [33 x i32], [33 x i32]* %prcw429, i32 0, i64 %idxprom428
  store i32 %call427, i32* %arrayidx430, align 4, !tbaa !5
  br label %if.end.431

if.end.431:                                       ; preds = %if.else.423, %if.then.419
  %400 = load i32, i32* %p, align 4, !tbaa !5
  %idxprom432 = sext i32 %400 to i64
  %401 = load %struct.opj_cparameters*, %struct.opj_cparameters** %parameters.addr, align 8, !tbaa !1
  %prch_init = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %401, i32 0, i32 26
  %arrayidx433 = getelementptr inbounds [33 x i32], [33 x i32]* %prch_init, i32 0, i64 %idxprom432
  %402 = load i32, i32* %arrayidx433, align 4, !tbaa !5
  %cmp434 = icmp slt i32 %402, 1
  br i1 %cmp434, label %if.then.436, label %if.else.440

if.then.436:                                      ; preds = %if.end.431
  %403 = load i32, i32* %it_res, align 4, !tbaa !5
  %idxprom437 = sext i32 %403 to i64
  %404 = load %struct.opj_tccp*, %struct.opj_tccp** %tccp362, align 8, !tbaa !1
  %prch438 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %404, i32 0, i32 11
  %arrayidx439 = getelementptr inbounds [33 x i32], [33 x i32]* %prch438, i32 0, i64 %idxprom437
  store i32 1, i32* %arrayidx439, align 4, !tbaa !5
  br label %if.end.448

if.else.440:                                      ; preds = %if.end.431
  %405 = load i32, i32* %p, align 4, !tbaa !5
  %idxprom441 = sext i32 %405 to i64
  %406 = load %struct.opj_cparameters*, %struct.opj_cparameters** %parameters.addr, align 8, !tbaa !1
  %prch_init442 = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %406, i32 0, i32 26
  %arrayidx443 = getelementptr inbounds [33 x i32], [33 x i32]* %prch_init442, i32 0, i64 %idxprom441
  %407 = load i32, i32* %arrayidx443, align 4, !tbaa !5
  %call444 = call i32 @opj_int_floorlog2(i32 %407) #7
  %408 = load i32, i32* %it_res, align 4, !tbaa !5
  %idxprom445 = sext i32 %408 to i64
  %409 = load %struct.opj_tccp*, %struct.opj_tccp** %tccp362, align 8, !tbaa !1
  %prch446 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %409, i32 0, i32 11
  %arrayidx447 = getelementptr inbounds [33 x i32], [33 x i32]* %prch446, i32 0, i64 %idxprom445
  store i32 %call444, i32* %arrayidx447, align 4, !tbaa !5
  br label %if.end.448

if.end.448:                                       ; preds = %if.else.440, %if.then.436
  br label %if.end.494

if.else.449:                                      ; preds = %for.body.411
  %410 = bitcast i32* %res_spec450 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %410) #1
  %411 = load %struct.opj_cparameters*, %struct.opj_cparameters** %parameters.addr, align 8, !tbaa !1
  %res_spec451 = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %411, i32 0, i32 24
  %412 = load i32, i32* %res_spec451, align 4, !tbaa !175
  store i32 %412, i32* %res_spec450, align 4, !tbaa !5
  %413 = bitcast i32* %size_prcw to i8*
  call void @llvm.lifetime.start(i64 4, i8* %413) #1
  store i32 0, i32* %size_prcw, align 4, !tbaa !5
  %414 = bitcast i32* %size_prch to i8*
  call void @llvm.lifetime.start(i64 4, i8* %414) #1
  store i32 0, i32* %size_prch, align 4, !tbaa !5
  %415 = load i32, i32* %res_spec450, align 4, !tbaa !5
  %cmp452 = icmp sgt i32 %415, 0
  br i1 %cmp452, label %cond.true.454, label %cond.false.455

cond.true.454:                                    ; preds = %if.else.449
  br label %cond.end.456

cond.false.455:                                   ; preds = %if.else.449
  call void @__assert_fail(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 6056, i8* getelementptr inbounds ([95 x i8], [95 x i8]* @__PRETTY_FUNCTION__.opj_j2k_setup_encoder, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.456

cond.end.456:                                     ; preds = %416, %cond.true.454
  %417 = load i32, i32* %res_spec450, align 4, !tbaa !5
  %sub457 = sub nsw i32 %417, 1
  %idxprom458 = sext i32 %sub457 to i64
  %418 = load %struct.opj_cparameters*, %struct.opj_cparameters** %parameters.addr, align 8, !tbaa !1
  %prcw_init459 = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %418, i32 0, i32 25
  %arrayidx460 = getelementptr inbounds [33 x i32], [33 x i32]* %prcw_init459, i32 0, i64 %idxprom458
  %419 = load i32, i32* %arrayidx460, align 4, !tbaa !5
  %420 = load i32, i32* %p, align 4, !tbaa !5
  %421 = load i32, i32* %res_spec450, align 4, !tbaa !5
  %sub461 = sub nsw i32 %421, 1
  %sub462 = sub nsw i32 %420, %sub461
  %shr = ashr i32 %419, %sub462
  store i32 %shr, i32* %size_prcw, align 4, !tbaa !5
  %422 = load i32, i32* %res_spec450, align 4, !tbaa !5
  %sub463 = sub nsw i32 %422, 1
  %idxprom464 = sext i32 %sub463 to i64
  %423 = load %struct.opj_cparameters*, %struct.opj_cparameters** %parameters.addr, align 8, !tbaa !1
  %prch_init465 = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %423, i32 0, i32 26
  %arrayidx466 = getelementptr inbounds [33 x i32], [33 x i32]* %prch_init465, i32 0, i64 %idxprom464
  %424 = load i32, i32* %arrayidx466, align 4, !tbaa !5
  %425 = load i32, i32* %p, align 4, !tbaa !5
  %426 = load i32, i32* %res_spec450, align 4, !tbaa !5
  %sub467 = sub nsw i32 %426, 1
  %sub468 = sub nsw i32 %425, %sub467
  %shr469 = ashr i32 %424, %sub468
  store i32 %shr469, i32* %size_prch, align 4, !tbaa !5
  %427 = load i32, i32* %size_prcw, align 4, !tbaa !5
  %cmp470 = icmp slt i32 %427, 1
  br i1 %cmp470, label %if.then.472, label %if.else.476

if.then.472:                                      ; preds = %cond.end.456
  %428 = load i32, i32* %it_res, align 4, !tbaa !5
  %idxprom473 = sext i32 %428 to i64
  %429 = load %struct.opj_tccp*, %struct.opj_tccp** %tccp362, align 8, !tbaa !1
  %prcw474 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %429, i32 0, i32 10
  %arrayidx475 = getelementptr inbounds [33 x i32], [33 x i32]* %prcw474, i32 0, i64 %idxprom473
  store i32 1, i32* %arrayidx475, align 4, !tbaa !5
  br label %if.end.481

if.else.476:                                      ; preds = %cond.end.456
  %430 = load i32, i32* %size_prcw, align 4, !tbaa !5
  %call477 = call i32 @opj_int_floorlog2(i32 %430) #7
  %431 = load i32, i32* %it_res, align 4, !tbaa !5
  %idxprom478 = sext i32 %431 to i64
  %432 = load %struct.opj_tccp*, %struct.opj_tccp** %tccp362, align 8, !tbaa !1
  %prcw479 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %432, i32 0, i32 10
  %arrayidx480 = getelementptr inbounds [33 x i32], [33 x i32]* %prcw479, i32 0, i64 %idxprom478
  store i32 %call477, i32* %arrayidx480, align 4, !tbaa !5
  br label %if.end.481

if.end.481:                                       ; preds = %if.else.476, %if.then.472
  %433 = load i32, i32* %size_prch, align 4, !tbaa !5
  %cmp482 = icmp slt i32 %433, 1
  br i1 %cmp482, label %if.then.484, label %if.else.488

if.then.484:                                      ; preds = %if.end.481
  %434 = load i32, i32* %it_res, align 4, !tbaa !5
  %idxprom485 = sext i32 %434 to i64
  %435 = load %struct.opj_tccp*, %struct.opj_tccp** %tccp362, align 8, !tbaa !1
  %prch486 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %435, i32 0, i32 11
  %arrayidx487 = getelementptr inbounds [33 x i32], [33 x i32]* %prch486, i32 0, i64 %idxprom485
  store i32 1, i32* %arrayidx487, align 4, !tbaa !5
  br label %if.end.493

if.else.488:                                      ; preds = %if.end.481
  %436 = load i32, i32* %size_prch, align 4, !tbaa !5
  %call489 = call i32 @opj_int_floorlog2(i32 %436) #7
  %437 = load i32, i32* %it_res, align 4, !tbaa !5
  %idxprom490 = sext i32 %437 to i64
  %438 = load %struct.opj_tccp*, %struct.opj_tccp** %tccp362, align 8, !tbaa !1
  %prch491 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %438, i32 0, i32 11
  %arrayidx492 = getelementptr inbounds [33 x i32], [33 x i32]* %prch491, i32 0, i64 %idxprom490
  store i32 %call489, i32* %arrayidx492, align 4, !tbaa !5
  br label %if.end.493

if.end.493:                                       ; preds = %if.else.488, %if.then.484
  %439 = bitcast i32* %size_prch to i8*
  call void @llvm.lifetime.end(i64 4, i8* %439) #1
  %440 = bitcast i32* %size_prcw to i8*
  call void @llvm.lifetime.end(i64 4, i8* %440) #1
  %441 = bitcast i32* %res_spec450 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %441) #1
  br label %if.end.494

if.end.494:                                       ; preds = %if.end.493, %if.end.448
  %442 = load i32, i32* %p, align 4, !tbaa !5
  %inc495 = add nsw i32 %442, 1
  store i32 %inc495, i32* %p, align 4, !tbaa !5
  br label %for.inc.496

for.inc.496:                                      ; preds = %if.end.494
  %443 = load i32, i32* %it_res, align 4, !tbaa !5
  %dec = add nsw i32 %443, -1
  store i32 %dec, i32* %it_res, align 4, !tbaa !5
  br label %for.cond.408

for.end.497:                                      ; preds = %for.cond.408
  %444 = bitcast i32* %it_res to i8*
  call void @llvm.lifetime.end(i64 4, i8* %444) #1
  %445 = bitcast i32* %p to i8*
  call void @llvm.lifetime.end(i64 4, i8* %445) #1
  br label %if.end.513

if.else.498:                                      ; preds = %if.else.401
  store i32 0, i32* %j, align 4, !tbaa !5
  br label %for.cond.499

for.cond.499:                                     ; preds = %for.inc.510, %if.else.498
  %446 = load i32, i32* %j, align 4, !tbaa !5
  %447 = load %struct.opj_tccp*, %struct.opj_tccp** %tccp362, align 8, !tbaa !1
  %numresolutions500 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %447, i32 0, i32 1
  %448 = load i32, i32* %numresolutions500, align 4, !tbaa !161
  %cmp501 = icmp ult i32 %446, %448
  br i1 %cmp501, label %for.body.503, label %for.end.512

for.body.503:                                     ; preds = %for.cond.499
  %449 = load i32, i32* %j, align 4, !tbaa !5
  %idxprom504 = zext i32 %449 to i64
  %450 = load %struct.opj_tccp*, %struct.opj_tccp** %tccp362, align 8, !tbaa !1
  %prcw505 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %450, i32 0, i32 10
  %arrayidx506 = getelementptr inbounds [33 x i32], [33 x i32]* %prcw505, i32 0, i64 %idxprom504
  store i32 15, i32* %arrayidx506, align 4, !tbaa !5
  %451 = load i32, i32* %j, align 4, !tbaa !5
  %idxprom507 = zext i32 %451 to i64
  %452 = load %struct.opj_tccp*, %struct.opj_tccp** %tccp362, align 8, !tbaa !1
  %prch508 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %452, i32 0, i32 11
  %arrayidx509 = getelementptr inbounds [33 x i32], [33 x i32]* %prch508, i32 0, i64 %idxprom507
  store i32 15, i32* %arrayidx509, align 4, !tbaa !5
  br label %for.inc.510

for.inc.510:                                      ; preds = %for.body.503
  %453 = load i32, i32* %j, align 4, !tbaa !5
  %inc511 = add i32 %453, 1
  store i32 %inc511, i32* %j, align 4, !tbaa !5
  br label %for.cond.499

for.end.512:                                      ; preds = %for.cond.499
  br label %if.end.513

if.end.513:                                       ; preds = %for.end.512, %for.end.497
  br label %if.end.514

if.end.514:                                       ; preds = %if.end.513, %for.end.400
  %454 = load %struct.opj_tccp*, %struct.opj_tccp** %tccp362, align 8, !tbaa !1
  %455 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom515 = zext i32 %455 to i64
  %456 = load %struct.opj_image*, %struct.opj_image** %image.addr, align 8, !tbaa !1
  %comps516 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %456, i32 0, i32 6
  %457 = load %struct.opj_image_comp*, %struct.opj_image_comp** %comps516, align 8, !tbaa !62
  %arrayidx517 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %457, i64 %idxprom515
  %prec518 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %arrayidx517, i32 0, i32 6
  %458 = load i32, i32* %prec518, align 4, !tbaa !63
  call void @opj_dwt_calc_explicit_stepsizes(%struct.opj_tccp* %454, i32 %458) #7
  %459 = bitcast %struct.opj_tccp** %tccp362 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %459) #1
  br label %for.inc.519

for.inc.519:                                      ; preds = %if.end.514
  %460 = load i32, i32* %i, align 4, !tbaa !5
  %inc520 = add i32 %460, 1
  store i32 %inc520, i32* %i, align 4, !tbaa !5
  br label %for.cond.357

for.end.521:                                      ; preds = %for.cond.357
  %461 = bitcast %struct.opj_tcp** %tcp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %461) #1
  br label %for.inc.522

for.inc.522:                                      ; preds = %for.end.521
  %462 = load i32, i32* %tileno, align 4, !tbaa !5
  %inc523 = add i32 %462, 1
  store i32 %inc523, i32* %tileno, align 4, !tbaa !5
  br label %for.cond

for.end.524:                                      ; preds = %for.cond
  %463 = load %struct.opj_cparameters*, %struct.opj_cparameters** %parameters.addr, align 8, !tbaa !1
  %mct_data525 = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %463, i32 0, i32 57
  %464 = load i8*, i8** %mct_data525, align 8, !tbaa !158
  %tobool526 = icmp ne i8* %464, null
  br i1 %tobool526, label %if.then.527, label %if.end.530

if.then.527:                                      ; preds = %for.end.524
  %465 = load %struct.opj_cparameters*, %struct.opj_cparameters** %parameters.addr, align 8, !tbaa !1
  %mct_data528 = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %465, i32 0, i32 57
  %466 = load i8*, i8** %mct_data528, align 8, !tbaa !158
  call void @free(i8* %466) #9
  %467 = load %struct.opj_cparameters*, %struct.opj_cparameters** %parameters.addr, align 8, !tbaa !1
  %mct_data529 = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %467, i32 0, i32 57
  store i8* null, i8** %mct_data529, align 8, !tbaa !158
  br label %if.end.530

if.end.530:                                       ; preds = %if.then.527, %for.end.524
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.530, %if.then
  %468 = bitcast %struct.opj_cp** %cp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %468) #1
  %469 = bitcast i32* %numpocs_tile to i8*
  call void @llvm.lifetime.end(i64 4, i8* %469) #1
  %470 = bitcast i32* %tileno to i8*
  call void @llvm.lifetime.end(i64 4, i8* %470) #1
  %471 = bitcast i32* %j to i8*
  call void @llvm.lifetime.end(i64 4, i8* %471) #1
  %472 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %472) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup, %cleanup
  ret void

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nounwind
declare i8* @memcpy(i8*, i8*, i64) #2

; Function Attrs: nounwind readonly
declare i64 @strlen(i8*) #4

; Function Attrs: nounwind
declare i8* @strcpy(i8*, i8*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @opj_int_ceildiv(i32 %a, i32 %b) #5 {
entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4, !tbaa !5
  store i32 %b, i32* %b.addr, align 4, !tbaa !5
  %0 = load i32, i32* %a.addr, align 4, !tbaa !5
  %1 = load i32, i32* %b.addr, align 4, !tbaa !5
  %add = add nsw i32 %0, %1
  %sub = sub nsw i32 %add, 1
  %2 = load i32, i32* %b.addr, align 4, !tbaa !5
  %div = sdiv i32 %sub, %2
  ret i32 %div
}

; Function Attrs: nounwind
declare noalias i8* @calloc(i64, i64) #2

; Function Attrs: nounwind uwtable
define internal i32 @opj_j2k_check_poc_val(%struct.opj_poc* %p_pocs, i32 %p_nb_pocs, i32 %p_nb_resolutions, i32 %p_num_comps, i32 %p_num_layers, %struct.opj_event_mgr* %p_manager) #0 {
entry:
  %retval = alloca i32, align 4
  %p_pocs.addr = alloca %struct.opj_poc*, align 8
  %p_nb_pocs.addr = alloca i32, align 4
  %p_nb_resolutions.addr = alloca i32, align 4
  %p_num_comps.addr = alloca i32, align 4
  %p_num_layers.addr = alloca i32, align 4
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  %packet_array = alloca i32*, align 8
  %index = alloca i32, align 4
  %resno = alloca i32, align 4
  %compno = alloca i32, align 4
  %layno = alloca i32, align 4
  %i = alloca i32, align 4
  %step_c = alloca i32, align 4
  %step_r = alloca i32, align 4
  %step_l = alloca i32, align 4
  %loss = alloca i32, align 4
  %layno0 = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %res_index = alloca i32, align 4
  %comp_index = alloca i32, align 4
  %l_last_layno1 = alloca i32, align 4
  %res_index66 = alloca i32, align 4
  %comp_index76 = alloca i32, align 4
  store %struct.opj_poc* %p_pocs, %struct.opj_poc** %p_pocs.addr, align 8, !tbaa !1
  store i32 %p_nb_pocs, i32* %p_nb_pocs.addr, align 4, !tbaa !5
  store i32 %p_nb_resolutions, i32* %p_nb_resolutions.addr, align 4, !tbaa !5
  store i32 %p_num_comps, i32* %p_num_comps.addr, align 4, !tbaa !5
  store i32 %p_num_layers, i32* %p_num_layers.addr, align 4, !tbaa !5
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %0 = bitcast i32** %packet_array to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = bitcast i32* %index to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = bitcast i32* %resno to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #1
  %3 = bitcast i32* %compno to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #1
  %4 = bitcast i32* %layno to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #1
  %5 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #1
  %6 = bitcast i32* %step_c to i8*
  call void @llvm.lifetime.start(i64 4, i8* %6) #1
  store i32 1, i32* %step_c, align 4, !tbaa !5
  %7 = bitcast i32* %step_r to i8*
  call void @llvm.lifetime.start(i64 4, i8* %7) #1
  %8 = load i32, i32* %p_num_comps.addr, align 4, !tbaa !5
  %9 = load i32, i32* %step_c, align 4, !tbaa !5
  %mul = mul i32 %8, %9
  store i32 %mul, i32* %step_r, align 4, !tbaa !5
  %10 = bitcast i32* %step_l to i8*
  call void @llvm.lifetime.start(i64 4, i8* %10) #1
  %11 = load i32, i32* %p_nb_resolutions.addr, align 4, !tbaa !5
  %12 = load i32, i32* %step_r, align 4, !tbaa !5
  %mul1 = mul i32 %11, %12
  store i32 %mul1, i32* %step_l, align 4, !tbaa !5
  %13 = bitcast i32* %loss to i8*
  call void @llvm.lifetime.start(i64 4, i8* %13) #1
  store i32 0, i32* %loss, align 4, !tbaa !5
  %14 = bitcast i32* %layno0 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %14) #1
  store i32 0, i32* %layno0, align 4, !tbaa !5
  %15 = load i32, i32* %step_l, align 4, !tbaa !5
  %16 = load i32, i32* %p_num_layers.addr, align 4, !tbaa !5
  %mul2 = mul i32 %15, %16
  %conv = zext i32 %mul2 to i64
  %cmp = icmp ne i64 %conv, 0
  br i1 %cmp, label %land.lhs.true, label %cond.false

land.lhs.true:                                    ; preds = %entry
  %17 = load i32, i32* %step_l, align 4, !tbaa !5
  %18 = load i32, i32* %p_num_layers.addr, align 4, !tbaa !5
  %mul4 = mul i32 %17, %18
  %conv5 = zext i32 %mul4 to i64
  %cmp6 = icmp uge i64 %conv5, 4611686018427387840
  br i1 %cmp6, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true, %entry
  %19 = load i32, i32* %step_l, align 4, !tbaa !5
  %20 = load i32, i32* %p_num_layers.addr, align 4, !tbaa !5
  %mul8 = mul i32 %19, %20
  %conv9 = zext i32 %mul8 to i64
  %call = call noalias i8* @calloc(i64 %conv9, i64 4) #9
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ null, %cond.true ], [ %call, %cond.false ]
  %21 = bitcast i8* %cond to i32*
  store i32* %21, i32** %packet_array, align 8, !tbaa !1
  %22 = load i32*, i32** %packet_array, align 8, !tbaa !1
  %cmp10 = icmp eq i32* %22, null
  br i1 %cmp10, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end
  %23 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call12 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %23, i32 1, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.115, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %cond.end
  %24 = load i32*, i32** %packet_array, align 8, !tbaa !1
  %25 = bitcast i32* %24 to i8*
  %26 = load i32, i32* %step_l, align 4, !tbaa !5
  %27 = load i32, i32* %p_num_layers.addr, align 4, !tbaa !5
  %mul13 = mul i32 %26, %27
  %conv14 = zext i32 %mul13 to i64
  %mul15 = mul i64 %conv14, 4
  %call16 = call i8* @memset(i8* %25, i32 0, i64 %mul15) #9
  %28 = load i32, i32* %p_nb_pocs.addr, align 4, !tbaa !5
  %cmp17 = icmp eq i32 %28, 0
  br i1 %cmp17, label %if.then.19, label %if.end.20

if.then.19:                                       ; preds = %if.end
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.20:                                        ; preds = %if.end
  %29 = load i32, i32* %step_r, align 4, !tbaa !5
  %30 = load %struct.opj_poc*, %struct.opj_poc** %p_pocs.addr, align 8, !tbaa !1
  %resno0 = getelementptr inbounds %struct.opj_poc, %struct.opj_poc* %30, i32 0, i32 0
  %31 = load i32, i32* %resno0, align 4, !tbaa !153
  %mul21 = mul i32 %29, %31
  store i32 %mul21, i32* %index, align 4, !tbaa !5
  %32 = load %struct.opj_poc*, %struct.opj_poc** %p_pocs.addr, align 8, !tbaa !1
  %resno022 = getelementptr inbounds %struct.opj_poc, %struct.opj_poc* %32, i32 0, i32 0
  %33 = load i32, i32* %resno022, align 4, !tbaa !153
  store i32 %33, i32* %resno, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc.43, %if.end.20
  %34 = load i32, i32* %resno, align 4, !tbaa !5
  %35 = load %struct.opj_poc*, %struct.opj_poc** %p_pocs.addr, align 8, !tbaa !1
  %resno1 = getelementptr inbounds %struct.opj_poc, %struct.opj_poc* %35, i32 0, i32 3
  %36 = load i32, i32* %resno1, align 4, !tbaa !156
  %cmp23 = icmp ult i32 %34, %36
  br i1 %cmp23, label %for.body, label %for.end.45

for.body:                                         ; preds = %for.cond
  %37 = bitcast i32* %res_index to i8*
  call void @llvm.lifetime.start(i64 4, i8* %37) #1
  %38 = load i32, i32* %index, align 4, !tbaa !5
  %39 = load %struct.opj_poc*, %struct.opj_poc** %p_pocs.addr, align 8, !tbaa !1
  %compno0 = getelementptr inbounds %struct.opj_poc, %struct.opj_poc* %39, i32 0, i32 1
  %40 = load i32, i32* %compno0, align 4, !tbaa !154
  %41 = load i32, i32* %step_c, align 4, !tbaa !5
  %mul25 = mul i32 %40, %41
  %add = add i32 %38, %mul25
  store i32 %add, i32* %res_index, align 4, !tbaa !5
  %42 = load %struct.opj_poc*, %struct.opj_poc** %p_pocs.addr, align 8, !tbaa !1
  %compno026 = getelementptr inbounds %struct.opj_poc, %struct.opj_poc* %42, i32 0, i32 1
  %43 = load i32, i32* %compno026, align 4, !tbaa !154
  store i32 %43, i32* %compno, align 4, !tbaa !5
  br label %for.cond.27

for.cond.27:                                      ; preds = %for.inc.39, %for.body
  %44 = load i32, i32* %compno, align 4, !tbaa !5
  %45 = load %struct.opj_poc*, %struct.opj_poc** %p_pocs.addr, align 8, !tbaa !1
  %compno1 = getelementptr inbounds %struct.opj_poc, %struct.opj_poc* %45, i32 0, i32 4
  %46 = load i32, i32* %compno1, align 4, !tbaa !54
  %cmp28 = icmp ult i32 %44, %46
  br i1 %cmp28, label %for.body.30, label %for.end.41

for.body.30:                                      ; preds = %for.cond.27
  %47 = bitcast i32* %comp_index to i8*
  call void @llvm.lifetime.start(i64 4, i8* %47) #1
  %48 = load i32, i32* %res_index, align 4, !tbaa !5
  %49 = load i32, i32* %layno0, align 4, !tbaa !5
  %50 = load i32, i32* %step_l, align 4, !tbaa !5
  %mul31 = mul i32 %49, %50
  %add32 = add i32 %48, %mul31
  store i32 %add32, i32* %comp_index, align 4, !tbaa !5
  %51 = load i32, i32* %layno0, align 4, !tbaa !5
  store i32 %51, i32* %layno, align 4, !tbaa !5
  br label %for.cond.33

for.cond.33:                                      ; preds = %for.inc, %for.body.30
  %52 = load i32, i32* %layno, align 4, !tbaa !5
  %53 = load %struct.opj_poc*, %struct.opj_poc** %p_pocs.addr, align 8, !tbaa !1
  %layno1 = getelementptr inbounds %struct.opj_poc, %struct.opj_poc* %53, i32 0, i32 2
  %54 = load i32, i32* %layno1, align 4, !tbaa !155
  %cmp34 = icmp ult i32 %52, %54
  br i1 %cmp34, label %for.body.36, label %for.end

for.body.36:                                      ; preds = %for.cond.33
  %55 = load i32, i32* %comp_index, align 4, !tbaa !5
  %idxprom = zext i32 %55 to i64
  %56 = load i32*, i32** %packet_array, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds i32, i32* %56, i64 %idxprom
  store i32 1, i32* %arrayidx, align 4, !tbaa !5
  %57 = load i32, i32* %step_l, align 4, !tbaa !5
  %58 = load i32, i32* %comp_index, align 4, !tbaa !5
  %add37 = add i32 %58, %57
  store i32 %add37, i32* %comp_index, align 4, !tbaa !5
  br label %for.inc

for.inc:                                          ; preds = %for.body.36
  %59 = load i32, i32* %layno, align 4, !tbaa !5
  %inc = add i32 %59, 1
  store i32 %inc, i32* %layno, align 4, !tbaa !5
  br label %for.cond.33

for.end:                                          ; preds = %for.cond.33
  %60 = load i32, i32* %step_c, align 4, !tbaa !5
  %61 = load i32, i32* %res_index, align 4, !tbaa !5
  %add38 = add i32 %61, %60
  store i32 %add38, i32* %res_index, align 4, !tbaa !5
  %62 = bitcast i32* %comp_index to i8*
  call void @llvm.lifetime.end(i64 4, i8* %62) #1
  br label %for.inc.39

for.inc.39:                                       ; preds = %for.end
  %63 = load i32, i32* %compno, align 4, !tbaa !5
  %inc40 = add i32 %63, 1
  store i32 %inc40, i32* %compno, align 4, !tbaa !5
  br label %for.cond.27

for.end.41:                                       ; preds = %for.cond.27
  %64 = load i32, i32* %step_r, align 4, !tbaa !5
  %65 = load i32, i32* %index, align 4, !tbaa !5
  %add42 = add i32 %65, %64
  store i32 %add42, i32* %index, align 4, !tbaa !5
  %66 = bitcast i32* %res_index to i8*
  call void @llvm.lifetime.end(i64 4, i8* %66) #1
  br label %for.inc.43

for.inc.43:                                       ; preds = %for.end.41
  %67 = load i32, i32* %resno, align 4, !tbaa !5
  %inc44 = add i32 %67, 1
  store i32 %inc44, i32* %resno, align 4, !tbaa !5
  br label %for.cond

for.end.45:                                       ; preds = %for.cond
  %68 = load %struct.opj_poc*, %struct.opj_poc** %p_pocs.addr, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds %struct.opj_poc, %struct.opj_poc* %68, i32 1
  store %struct.opj_poc* %incdec.ptr, %struct.opj_poc** %p_pocs.addr, align 8, !tbaa !1
  store i32 1, i32* %i, align 4, !tbaa !5
  br label %for.cond.46

for.cond.46:                                      ; preds = %for.inc.99, %for.end.45
  %69 = load i32, i32* %i, align 4, !tbaa !5
  %70 = load i32, i32* %p_nb_pocs.addr, align 4, !tbaa !5
  %cmp47 = icmp ult i32 %69, %70
  br i1 %cmp47, label %for.body.49, label %for.end.101

for.body.49:                                      ; preds = %for.cond.46
  %71 = bitcast i32* %l_last_layno1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %71) #1
  %72 = load %struct.opj_poc*, %struct.opj_poc** %p_pocs.addr, align 8, !tbaa !1
  %add.ptr = getelementptr inbounds %struct.opj_poc, %struct.opj_poc* %72, i64 -1
  %layno150 = getelementptr inbounds %struct.opj_poc, %struct.opj_poc* %add.ptr, i32 0, i32 2
  %73 = load i32, i32* %layno150, align 4, !tbaa !155
  store i32 %73, i32* %l_last_layno1, align 4, !tbaa !5
  %74 = load %struct.opj_poc*, %struct.opj_poc** %p_pocs.addr, align 8, !tbaa !1
  %layno151 = getelementptr inbounds %struct.opj_poc, %struct.opj_poc* %74, i32 0, i32 2
  %75 = load i32, i32* %layno151, align 4, !tbaa !155
  %76 = load i32, i32* %l_last_layno1, align 4, !tbaa !5
  %cmp52 = icmp ugt i32 %75, %76
  br i1 %cmp52, label %cond.true.54, label %cond.false.55

cond.true.54:                                     ; preds = %for.body.49
  %77 = load i32, i32* %l_last_layno1, align 4, !tbaa !5
  br label %cond.end.56

cond.false.55:                                    ; preds = %for.body.49
  br label %cond.end.56

cond.end.56:                                      ; preds = %cond.false.55, %cond.true.54
  %cond57 = phi i32 [ %77, %cond.true.54 ], [ 0, %cond.false.55 ]
  store i32 %cond57, i32* %layno0, align 4, !tbaa !5
  %78 = load i32, i32* %step_r, align 4, !tbaa !5
  %79 = load %struct.opj_poc*, %struct.opj_poc** %p_pocs.addr, align 8, !tbaa !1
  %resno058 = getelementptr inbounds %struct.opj_poc, %struct.opj_poc* %79, i32 0, i32 0
  %80 = load i32, i32* %resno058, align 4, !tbaa !153
  %mul59 = mul i32 %78, %80
  store i32 %mul59, i32* %index, align 4, !tbaa !5
  %81 = load %struct.opj_poc*, %struct.opj_poc** %p_pocs.addr, align 8, !tbaa !1
  %resno060 = getelementptr inbounds %struct.opj_poc, %struct.opj_poc* %81, i32 0, i32 0
  %82 = load i32, i32* %resno060, align 4, !tbaa !153
  store i32 %82, i32* %resno, align 4, !tbaa !5
  br label %for.cond.61

for.cond.61:                                      ; preds = %for.inc.95, %cond.end.56
  %83 = load i32, i32* %resno, align 4, !tbaa !5
  %84 = load %struct.opj_poc*, %struct.opj_poc** %p_pocs.addr, align 8, !tbaa !1
  %resno162 = getelementptr inbounds %struct.opj_poc, %struct.opj_poc* %84, i32 0, i32 3
  %85 = load i32, i32* %resno162, align 4, !tbaa !156
  %cmp63 = icmp ult i32 %83, %85
  br i1 %cmp63, label %for.body.65, label %for.end.97

for.body.65:                                      ; preds = %for.cond.61
  %86 = bitcast i32* %res_index66 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %86) #1
  %87 = load i32, i32* %index, align 4, !tbaa !5
  %88 = load %struct.opj_poc*, %struct.opj_poc** %p_pocs.addr, align 8, !tbaa !1
  %compno067 = getelementptr inbounds %struct.opj_poc, %struct.opj_poc* %88, i32 0, i32 1
  %89 = load i32, i32* %compno067, align 4, !tbaa !154
  %90 = load i32, i32* %step_c, align 4, !tbaa !5
  %mul68 = mul i32 %89, %90
  %add69 = add i32 %87, %mul68
  store i32 %add69, i32* %res_index66, align 4, !tbaa !5
  %91 = load %struct.opj_poc*, %struct.opj_poc** %p_pocs.addr, align 8, !tbaa !1
  %compno070 = getelementptr inbounds %struct.opj_poc, %struct.opj_poc* %91, i32 0, i32 1
  %92 = load i32, i32* %compno070, align 4, !tbaa !154
  store i32 %92, i32* %compno, align 4, !tbaa !5
  br label %for.cond.71

for.cond.71:                                      ; preds = %for.inc.91, %for.body.65
  %93 = load i32, i32* %compno, align 4, !tbaa !5
  %94 = load %struct.opj_poc*, %struct.opj_poc** %p_pocs.addr, align 8, !tbaa !1
  %compno172 = getelementptr inbounds %struct.opj_poc, %struct.opj_poc* %94, i32 0, i32 4
  %95 = load i32, i32* %compno172, align 4, !tbaa !54
  %cmp73 = icmp ult i32 %93, %95
  br i1 %cmp73, label %for.body.75, label %for.end.93

for.body.75:                                      ; preds = %for.cond.71
  %96 = bitcast i32* %comp_index76 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %96) #1
  %97 = load i32, i32* %res_index66, align 4, !tbaa !5
  %98 = load i32, i32* %layno0, align 4, !tbaa !5
  %99 = load i32, i32* %step_l, align 4, !tbaa !5
  %mul77 = mul i32 %98, %99
  %add78 = add i32 %97, %mul77
  store i32 %add78, i32* %comp_index76, align 4, !tbaa !5
  %100 = load i32, i32* %layno0, align 4, !tbaa !5
  store i32 %100, i32* %layno, align 4, !tbaa !5
  br label %for.cond.79

for.cond.79:                                      ; preds = %for.inc.87, %for.body.75
  %101 = load i32, i32* %layno, align 4, !tbaa !5
  %102 = load %struct.opj_poc*, %struct.opj_poc** %p_pocs.addr, align 8, !tbaa !1
  %layno180 = getelementptr inbounds %struct.opj_poc, %struct.opj_poc* %102, i32 0, i32 2
  %103 = load i32, i32* %layno180, align 4, !tbaa !155
  %cmp81 = icmp ult i32 %101, %103
  br i1 %cmp81, label %for.body.83, label %for.end.89

for.body.83:                                      ; preds = %for.cond.79
  %104 = load i32, i32* %comp_index76, align 4, !tbaa !5
  %idxprom84 = zext i32 %104 to i64
  %105 = load i32*, i32** %packet_array, align 8, !tbaa !1
  %arrayidx85 = getelementptr inbounds i32, i32* %105, i64 %idxprom84
  store i32 1, i32* %arrayidx85, align 4, !tbaa !5
  %106 = load i32, i32* %step_l, align 4, !tbaa !5
  %107 = load i32, i32* %comp_index76, align 4, !tbaa !5
  %add86 = add i32 %107, %106
  store i32 %add86, i32* %comp_index76, align 4, !tbaa !5
  br label %for.inc.87

for.inc.87:                                       ; preds = %for.body.83
  %108 = load i32, i32* %layno, align 4, !tbaa !5
  %inc88 = add i32 %108, 1
  store i32 %inc88, i32* %layno, align 4, !tbaa !5
  br label %for.cond.79

for.end.89:                                       ; preds = %for.cond.79
  %109 = load i32, i32* %step_c, align 4, !tbaa !5
  %110 = load i32, i32* %res_index66, align 4, !tbaa !5
  %add90 = add i32 %110, %109
  store i32 %add90, i32* %res_index66, align 4, !tbaa !5
  %111 = bitcast i32* %comp_index76 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %111) #1
  br label %for.inc.91

for.inc.91:                                       ; preds = %for.end.89
  %112 = load i32, i32* %compno, align 4, !tbaa !5
  %inc92 = add i32 %112, 1
  store i32 %inc92, i32* %compno, align 4, !tbaa !5
  br label %for.cond.71

for.end.93:                                       ; preds = %for.cond.71
  %113 = load i32, i32* %step_r, align 4, !tbaa !5
  %114 = load i32, i32* %index, align 4, !tbaa !5
  %add94 = add i32 %114, %113
  store i32 %add94, i32* %index, align 4, !tbaa !5
  %115 = bitcast i32* %res_index66 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %115) #1
  br label %for.inc.95

for.inc.95:                                       ; preds = %for.end.93
  %116 = load i32, i32* %resno, align 4, !tbaa !5
  %inc96 = add i32 %116, 1
  store i32 %inc96, i32* %resno, align 4, !tbaa !5
  br label %for.cond.61

for.end.97:                                       ; preds = %for.cond.61
  %117 = load %struct.opj_poc*, %struct.opj_poc** %p_pocs.addr, align 8, !tbaa !1
  %incdec.ptr98 = getelementptr inbounds %struct.opj_poc, %struct.opj_poc* %117, i32 1
  store %struct.opj_poc* %incdec.ptr98, %struct.opj_poc** %p_pocs.addr, align 8, !tbaa !1
  %118 = bitcast i32* %l_last_layno1 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %118) #1
  br label %for.inc.99

for.inc.99:                                       ; preds = %for.end.97
  %119 = load i32, i32* %i, align 4, !tbaa !5
  %inc100 = add i32 %119, 1
  store i32 %inc100, i32* %i, align 4, !tbaa !5
  br label %for.cond.46

for.end.101:                                      ; preds = %for.cond.46
  store i32 0, i32* %index, align 4, !tbaa !5
  store i32 0, i32* %layno, align 4, !tbaa !5
  br label %for.cond.102

for.cond.102:                                     ; preds = %for.inc.125, %for.end.101
  %120 = load i32, i32* %layno, align 4, !tbaa !5
  %121 = load i32, i32* %p_num_layers.addr, align 4, !tbaa !5
  %cmp103 = icmp ult i32 %120, %121
  br i1 %cmp103, label %for.body.105, label %for.end.127

for.body.105:                                     ; preds = %for.cond.102
  store i32 0, i32* %resno, align 4, !tbaa !5
  br label %for.cond.106

for.cond.106:                                     ; preds = %for.inc.122, %for.body.105
  %122 = load i32, i32* %resno, align 4, !tbaa !5
  %123 = load i32, i32* %p_nb_resolutions.addr, align 4, !tbaa !5
  %cmp107 = icmp ult i32 %122, %123
  br i1 %cmp107, label %for.body.109, label %for.end.124

for.body.109:                                     ; preds = %for.cond.106
  store i32 0, i32* %compno, align 4, !tbaa !5
  br label %for.cond.110

for.cond.110:                                     ; preds = %for.inc.119, %for.body.109
  %124 = load i32, i32* %compno, align 4, !tbaa !5
  %125 = load i32, i32* %p_num_comps.addr, align 4, !tbaa !5
  %cmp111 = icmp ult i32 %124, %125
  br i1 %cmp111, label %for.body.113, label %for.end.121

for.body.113:                                     ; preds = %for.cond.110
  %126 = load i32, i32* %index, align 4, !tbaa !5
  %idxprom114 = zext i32 %126 to i64
  %127 = load i32*, i32** %packet_array, align 8, !tbaa !1
  %arrayidx115 = getelementptr inbounds i32, i32* %127, i64 %idxprom114
  %128 = load i32, i32* %arrayidx115, align 4, !tbaa !5
  %cmp116 = icmp ne i32 %128, 1
  %conv117 = zext i1 %cmp116 to i32
  %129 = load i32, i32* %loss, align 4, !tbaa !5
  %or = or i32 %129, %conv117
  store i32 %or, i32* %loss, align 4, !tbaa !5
  %130 = load i32, i32* %step_c, align 4, !tbaa !5
  %131 = load i32, i32* %index, align 4, !tbaa !5
  %add118 = add i32 %131, %130
  store i32 %add118, i32* %index, align 4, !tbaa !5
  br label %for.inc.119

for.inc.119:                                      ; preds = %for.body.113
  %132 = load i32, i32* %compno, align 4, !tbaa !5
  %inc120 = add i32 %132, 1
  store i32 %inc120, i32* %compno, align 4, !tbaa !5
  br label %for.cond.110

for.end.121:                                      ; preds = %for.cond.110
  br label %for.inc.122

for.inc.122:                                      ; preds = %for.end.121
  %133 = load i32, i32* %resno, align 4, !tbaa !5
  %inc123 = add i32 %133, 1
  store i32 %inc123, i32* %resno, align 4, !tbaa !5
  br label %for.cond.106

for.end.124:                                      ; preds = %for.cond.106
  br label %for.inc.125

for.inc.125:                                      ; preds = %for.end.124
  %134 = load i32, i32* %layno, align 4, !tbaa !5
  %inc126 = add i32 %134, 1
  store i32 %inc126, i32* %layno, align 4, !tbaa !5
  br label %for.cond.102

for.end.127:                                      ; preds = %for.cond.102
  %135 = load i32, i32* %loss, align 4, !tbaa !5
  %tobool = icmp ne i32 %135, 0
  br i1 %tobool, label %if.then.128, label %if.end.130

if.then.128:                                      ; preds = %for.end.127
  %136 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call129 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %136, i32 1, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.116, i32 0, i32 0)) #7
  br label %if.end.130

if.end.130:                                       ; preds = %if.then.128, %for.end.127
  %137 = load i32*, i32** %packet_array, align 8, !tbaa !1
  %138 = bitcast i32* %137 to i8*
  call void @free(i8* %138) #9
  %139 = load i32, i32* %loss, align 4, !tbaa !5
  %tobool131 = icmp ne i32 %139, 0
  %lnot = xor i1 %tobool131, true
  %lnot.ext = zext i1 %lnot to i32
  store i32 %lnot.ext, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.130, %if.then.19, %if.then
  %140 = bitcast i32* %layno0 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %140) #1
  %141 = bitcast i32* %loss to i8*
  call void @llvm.lifetime.end(i64 4, i8* %141) #1
  %142 = bitcast i32* %step_l to i8*
  call void @llvm.lifetime.end(i64 4, i8* %142) #1
  %143 = bitcast i32* %step_r to i8*
  call void @llvm.lifetime.end(i64 4, i8* %143) #1
  %144 = bitcast i32* %step_c to i8*
  call void @llvm.lifetime.end(i64 4, i8* %144) #1
  %145 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %145) #1
  %146 = bitcast i32* %layno to i8*
  call void @llvm.lifetime.end(i64 4, i8* %146) #1
  %147 = bitcast i32* %compno to i8*
  call void @llvm.lifetime.end(i64 4, i8* %147) #1
  %148 = bitcast i32* %resno to i8*
  call void @llvm.lifetime.end(i64 4, i8* %148) #1
  %149 = bitcast i32* %index to i8*
  call void @llvm.lifetime.end(i64 4, i8* %149) #1
  %150 = bitcast i32** %packet_array to i8*
  call void @llvm.lifetime.end(i64 8, i8* %150) #1
  %151 = load i32, i32* %retval
  ret i32 %151
}

declare i32 @opj_matrix_inversion_f(float*, float*, i32) #3

; Function Attrs: noreturn nounwind
declare void @__assert_fail(i8*, i8*, i32, i8*) #6

declare void @opj_calculate_norms(double*, i32, float*) #3

; Function Attrs: nounwind
declare void @free(i8*) #2

; Function Attrs: nounwind uwtable
define i32 @opj_j2k_setup_mct_encoding(%struct.opj_tcp* %p_tcp, %struct.opj_image* %p_image) #0 {
entry:
  %retval = alloca i32, align 4
  %p_tcp.addr = alloca %struct.opj_tcp*, align 8
  %p_image.addr = alloca %struct.opj_image*, align 8
  %i = alloca i32, align 4
  %l_indix = alloca i32, align 4
  %l_mct_deco_data = alloca %struct.opj_mct_data*, align 8
  %l_mct_offset_data = alloca %struct.opj_mct_data*, align 8
  %l_mcc_data = alloca %struct.opj_simple_mcc_decorrelation_data*, align 8
  %l_mct_size = alloca i32, align 4
  %l_nb_elem = alloca i32, align 4
  %l_data = alloca float*, align 8
  %l_current_data = alloca float*, align 8
  %l_tccp = alloca %struct.opj_tccp*, align 8
  %cleanup.dest.slot = alloca i32
  %new_mct_records = alloca %struct.opj_mct_data*, align 8
  %new_mct_records71 = alloca %struct.opj_mct_data*, align 8
  %new_mcc_records = alloca %struct.opj_simple_mcc_decorrelation_data*, align 8
  store %struct.opj_tcp* %p_tcp, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  store %struct.opj_image* %p_image, %struct.opj_image** %p_image.addr, align 8, !tbaa !1
  %0 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast i32* %l_indix to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  store i32 1, i32* %l_indix, align 4, !tbaa !5
  %2 = bitcast %struct.opj_mct_data** %l_mct_deco_data to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #1
  store %struct.opj_mct_data* null, %struct.opj_mct_data** %l_mct_deco_data, align 8, !tbaa !1
  %3 = bitcast %struct.opj_mct_data** %l_mct_offset_data to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #1
  store %struct.opj_mct_data* null, %struct.opj_mct_data** %l_mct_offset_data, align 8, !tbaa !1
  %4 = bitcast %struct.opj_simple_mcc_decorrelation_data** %l_mcc_data to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4) #1
  %5 = bitcast i32* %l_mct_size to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #1
  %6 = bitcast i32* %l_nb_elem to i8*
  call void @llvm.lifetime.start(i64 4, i8* %6) #1
  %7 = bitcast float** %l_data to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7) #1
  %8 = bitcast float** %l_current_data to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8) #1
  %9 = bitcast %struct.opj_tccp** %l_tccp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9) #1
  %10 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %cmp = icmp ne %struct.opj_tcp* %10, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 6297, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @__PRETTY_FUNCTION__.opj_j2k_setup_mct_encoding, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %11, %cond.true
  %12 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %mct = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %12, i32 0, i32 4
  %13 = load i32, i32* %mct, align 4, !tbaa !151
  %cmp1 = icmp ne i32 %13, 2
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.224

if.end:                                           ; preds = %cond.end
  %14 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %m_mct_decoding_matrix = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %14, i32 0, i32 18
  %15 = load float*, float** %m_mct_decoding_matrix, align 8, !tbaa !102
  %tobool = icmp ne float* %15, null
  br i1 %tobool, label %if.then.2, label %if.end.65

if.then.2:                                        ; preds = %if.end
  %16 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %m_nb_mct_records = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %16, i32 0, i32 21
  %17 = load i32, i32* %m_nb_mct_records, align 4, !tbaa !89
  %18 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %m_nb_max_mct_records = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %18, i32 0, i32 22
  %19 = load i32, i32* %m_nb_max_mct_records, align 4, !tbaa !75
  %cmp3 = icmp eq i32 %17, %19
  br i1 %cmp3, label %if.then.4, label %if.end.30

if.then.4:                                        ; preds = %if.then.2
  %20 = bitcast %struct.opj_mct_data** %new_mct_records to i8*
  call void @llvm.lifetime.start(i64 8, i8* %20) #1
  %21 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %m_nb_max_mct_records5 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %21, i32 0, i32 22
  %22 = load i32, i32* %m_nb_max_mct_records5, align 4, !tbaa !75
  %add = add i32 %22, 10
  store i32 %add, i32* %m_nb_max_mct_records5, align 4, !tbaa !75
  %23 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %m_nb_max_mct_records6 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %23, i32 0, i32 22
  %24 = load i32, i32* %m_nb_max_mct_records6, align 4, !tbaa !75
  %conv = zext i32 %24 to i64
  %mul = mul i64 %conv, 32
  %cmp7 = icmp uge i64 %mul, -256
  br i1 %cmp7, label %cond.true.9, label %cond.false.10

cond.true.9:                                      ; preds = %if.then.4
  br label %cond.end.14

cond.false.10:                                    ; preds = %if.then.4
  %25 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %m_mct_records = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %25, i32 0, i32 20
  %26 = load %struct.opj_mct_data*, %struct.opj_mct_data** %m_mct_records, align 8, !tbaa !74
  %27 = bitcast %struct.opj_mct_data* %26 to i8*
  %28 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %m_nb_max_mct_records11 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %28, i32 0, i32 22
  %29 = load i32, i32* %m_nb_max_mct_records11, align 4, !tbaa !75
  %conv12 = zext i32 %29 to i64
  %mul13 = mul i64 %conv12, 32
  %call = call i8* @realloc(i8* %27, i64 %mul13) #9
  br label %cond.end.14

cond.end.14:                                      ; preds = %cond.false.10, %cond.true.9
  %cond = phi i8* [ null, %cond.true.9 ], [ %call, %cond.false.10 ]
  %30 = bitcast i8* %cond to %struct.opj_mct_data*
  store %struct.opj_mct_data* %30, %struct.opj_mct_data** %new_mct_records, align 8, !tbaa !1
  %31 = load %struct.opj_mct_data*, %struct.opj_mct_data** %new_mct_records, align 8, !tbaa !1
  %tobool15 = icmp ne %struct.opj_mct_data* %31, null
  br i1 %tobool15, label %if.end.21, label %if.then.16

if.then.16:                                       ; preds = %cond.end.14
  %32 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %m_mct_records17 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %32, i32 0, i32 20
  %33 = load %struct.opj_mct_data*, %struct.opj_mct_data** %m_mct_records17, align 8, !tbaa !74
  %34 = bitcast %struct.opj_mct_data* %33 to i8*
  call void @free(i8* %34) #9
  %35 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %m_mct_records18 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %35, i32 0, i32 20
  store %struct.opj_mct_data* null, %struct.opj_mct_data** %m_mct_records18, align 8, !tbaa !74
  %36 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %m_nb_max_mct_records19 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %36, i32 0, i32 22
  store i32 0, i32* %m_nb_max_mct_records19, align 4, !tbaa !75
  %37 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %m_nb_mct_records20 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %37, i32 0, i32 21
  store i32 0, i32* %m_nb_mct_records20, align 4, !tbaa !89
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.21:                                        ; preds = %cond.end.14
  %38 = load %struct.opj_mct_data*, %struct.opj_mct_data** %new_mct_records, align 8, !tbaa !1
  %39 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %m_mct_records22 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %39, i32 0, i32 20
  store %struct.opj_mct_data* %38, %struct.opj_mct_data** %m_mct_records22, align 8, !tbaa !74
  %40 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %m_mct_records23 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %40, i32 0, i32 20
  %41 = load %struct.opj_mct_data*, %struct.opj_mct_data** %m_mct_records23, align 8, !tbaa !74
  %42 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %m_nb_mct_records24 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %42, i32 0, i32 21
  %43 = load i32, i32* %m_nb_mct_records24, align 4, !tbaa !89
  %idx.ext = zext i32 %43 to i64
  %add.ptr = getelementptr inbounds %struct.opj_mct_data, %struct.opj_mct_data* %41, i64 %idx.ext
  store %struct.opj_mct_data* %add.ptr, %struct.opj_mct_data** %l_mct_deco_data, align 8, !tbaa !1
  %44 = load %struct.opj_mct_data*, %struct.opj_mct_data** %l_mct_deco_data, align 8, !tbaa !1
  %45 = bitcast %struct.opj_mct_data* %44 to i8*
  %46 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %m_nb_max_mct_records25 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %46, i32 0, i32 22
  %47 = load i32, i32* %m_nb_max_mct_records25, align 4, !tbaa !75
  %48 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %m_nb_mct_records26 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %48, i32 0, i32 21
  %49 = load i32, i32* %m_nb_mct_records26, align 4, !tbaa !89
  %sub = sub i32 %47, %49
  %conv27 = zext i32 %sub to i64
  %mul28 = mul i64 %conv27, 32
  %call29 = call i8* @memset(i8* %45, i32 0, i64 %mul28) #9
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.21, %if.then.16
  %50 = bitcast %struct.opj_mct_data** %new_mct_records to i8*
  call void @llvm.lifetime.end(i64 8, i8* %50) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.224 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.30

if.end.30:                                        ; preds = %cleanup.cont, %if.then.2
  %51 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %m_mct_records31 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %51, i32 0, i32 20
  %52 = load %struct.opj_mct_data*, %struct.opj_mct_data** %m_mct_records31, align 8, !tbaa !74
  %53 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %m_nb_mct_records32 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %53, i32 0, i32 21
  %54 = load i32, i32* %m_nb_mct_records32, align 4, !tbaa !89
  %idx.ext33 = zext i32 %54 to i64
  %add.ptr34 = getelementptr inbounds %struct.opj_mct_data, %struct.opj_mct_data* %52, i64 %idx.ext33
  store %struct.opj_mct_data* %add.ptr34, %struct.opj_mct_data** %l_mct_deco_data, align 8, !tbaa !1
  %55 = load %struct.opj_mct_data*, %struct.opj_mct_data** %l_mct_deco_data, align 8, !tbaa !1
  %m_data = getelementptr inbounds %struct.opj_mct_data, %struct.opj_mct_data* %55, i32 0, i32 3
  %56 = load i8*, i8** %m_data, align 8, !tbaa !92
  %tobool35 = icmp ne i8* %56, null
  br i1 %tobool35, label %if.then.36, label %if.end.39

if.then.36:                                       ; preds = %if.end.30
  %57 = load %struct.opj_mct_data*, %struct.opj_mct_data** %l_mct_deco_data, align 8, !tbaa !1
  %m_data37 = getelementptr inbounds %struct.opj_mct_data, %struct.opj_mct_data* %57, i32 0, i32 3
  %58 = load i8*, i8** %m_data37, align 8, !tbaa !92
  call void @free(i8* %58) #9
  %59 = load %struct.opj_mct_data*, %struct.opj_mct_data** %l_mct_deco_data, align 8, !tbaa !1
  %m_data38 = getelementptr inbounds %struct.opj_mct_data, %struct.opj_mct_data* %59, i32 0, i32 3
  store i8* null, i8** %m_data38, align 8, !tbaa !92
  br label %if.end.39

if.end.39:                                        ; preds = %if.then.36, %if.end.30
  %60 = load i32, i32* %l_indix, align 4, !tbaa !5
  %inc = add i32 %60, 1
  store i32 %inc, i32* %l_indix, align 4, !tbaa !5
  %61 = load %struct.opj_mct_data*, %struct.opj_mct_data** %l_mct_deco_data, align 8, !tbaa !1
  %m_index = getelementptr inbounds %struct.opj_mct_data, %struct.opj_mct_data* %61, i32 0, i32 2
  store i32 %60, i32* %m_index, align 4, !tbaa !90
  %62 = load %struct.opj_mct_data*, %struct.opj_mct_data** %l_mct_deco_data, align 8, !tbaa !1
  %m_array_type = getelementptr inbounds %struct.opj_mct_data, %struct.opj_mct_data* %62, i32 0, i32 1
  store i32 1, i32* %m_array_type, align 4, !tbaa !93
  %63 = load %struct.opj_mct_data*, %struct.opj_mct_data** %l_mct_deco_data, align 8, !tbaa !1
  %m_element_type = getelementptr inbounds %struct.opj_mct_data, %struct.opj_mct_data* %63, i32 0, i32 0
  store i32 2, i32* %m_element_type, align 4, !tbaa !94
  %64 = load %struct.opj_image*, %struct.opj_image** %p_image.addr, align 8, !tbaa !1
  %numcomps = getelementptr inbounds %struct.opj_image, %struct.opj_image* %64, i32 0, i32 4
  %65 = load i32, i32* %numcomps, align 4, !tbaa !45
  %66 = load %struct.opj_image*, %struct.opj_image** %p_image.addr, align 8, !tbaa !1
  %numcomps40 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %66, i32 0, i32 4
  %67 = load i32, i32* %numcomps40, align 4, !tbaa !45
  %mul41 = mul i32 %65, %67
  store i32 %mul41, i32* %l_nb_elem, align 4, !tbaa !5
  %68 = load i32, i32* %l_nb_elem, align 4, !tbaa !5
  %69 = load %struct.opj_mct_data*, %struct.opj_mct_data** %l_mct_deco_data, align 8, !tbaa !1
  %m_element_type42 = getelementptr inbounds %struct.opj_mct_data, %struct.opj_mct_data* %69, i32 0, i32 0
  %70 = load i32, i32* %m_element_type42, align 4, !tbaa !94
  %idxprom = zext i32 %70 to i64
  %arrayidx = getelementptr inbounds [4 x i32], [4 x i32]* @MCT_ELEMENT_SIZE, i32 0, i64 %idxprom
  %71 = load i32, i32* %arrayidx, align 4, !tbaa !5
  %mul43 = mul i32 %68, %71
  store i32 %mul43, i32* %l_mct_size, align 4, !tbaa !5
  %72 = load i32, i32* %l_mct_size, align 4, !tbaa !5
  %conv44 = zext i32 %72 to i64
  %cmp45 = icmp uge i64 %conv44, -256
  br i1 %cmp45, label %cond.true.47, label %cond.false.48

cond.true.47:                                     ; preds = %if.end.39
  br label %cond.end.51

cond.false.48:                                    ; preds = %if.end.39
  %73 = load i32, i32* %l_mct_size, align 4, !tbaa !5
  %conv49 = zext i32 %73 to i64
  %call50 = call noalias i8* @malloc(i64 %conv49) #9
  br label %cond.end.51

cond.end.51:                                      ; preds = %cond.false.48, %cond.true.47
  %cond52 = phi i8* [ null, %cond.true.47 ], [ %call50, %cond.false.48 ]
  %74 = load %struct.opj_mct_data*, %struct.opj_mct_data** %l_mct_deco_data, align 8, !tbaa !1
  %m_data53 = getelementptr inbounds %struct.opj_mct_data, %struct.opj_mct_data* %74, i32 0, i32 3
  store i8* %cond52, i8** %m_data53, align 8, !tbaa !92
  %75 = load %struct.opj_mct_data*, %struct.opj_mct_data** %l_mct_deco_data, align 8, !tbaa !1
  %m_data54 = getelementptr inbounds %struct.opj_mct_data, %struct.opj_mct_data* %75, i32 0, i32 3
  %76 = load i8*, i8** %m_data54, align 8, !tbaa !92
  %tobool55 = icmp ne i8* %76, null
  br i1 %tobool55, label %if.end.57, label %if.then.56

if.then.56:                                       ; preds = %cond.end.51
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.224

if.end.57:                                        ; preds = %cond.end.51
  %77 = load %struct.opj_mct_data*, %struct.opj_mct_data** %l_mct_deco_data, align 8, !tbaa !1
  %m_element_type58 = getelementptr inbounds %struct.opj_mct_data, %struct.opj_mct_data* %77, i32 0, i32 0
  %78 = load i32, i32* %m_element_type58, align 4, !tbaa !94
  %idxprom59 = zext i32 %78 to i64
  %arrayidx60 = getelementptr inbounds [4 x void (i8*, i8*, i32)*], [4 x void (i8*, i8*, i32)*]* @j2k_mct_write_functions_from_float, i32 0, i64 %idxprom59
  %79 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %arrayidx60, align 8, !tbaa !1
  %80 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %m_mct_decoding_matrix61 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %80, i32 0, i32 18
  %81 = load float*, float** %m_mct_decoding_matrix61, align 8, !tbaa !102
  %82 = bitcast float* %81 to i8*
  %83 = load %struct.opj_mct_data*, %struct.opj_mct_data** %l_mct_deco_data, align 8, !tbaa !1
  %m_data62 = getelementptr inbounds %struct.opj_mct_data, %struct.opj_mct_data* %83, i32 0, i32 3
  %84 = load i8*, i8** %m_data62, align 8, !tbaa !92
  %85 = load i32, i32* %l_nb_elem, align 4, !tbaa !5
  call void %79(i8* %82, i8* %84, i32 %85) #7
  %86 = load i32, i32* %l_mct_size, align 4, !tbaa !5
  %87 = load %struct.opj_mct_data*, %struct.opj_mct_data** %l_mct_deco_data, align 8, !tbaa !1
  %m_data_size = getelementptr inbounds %struct.opj_mct_data, %struct.opj_mct_data* %87, i32 0, i32 4
  store i32 %86, i32* %m_data_size, align 4, !tbaa !95
  %88 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %m_nb_mct_records63 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %88, i32 0, i32 21
  %89 = load i32, i32* %m_nb_mct_records63, align 4, !tbaa !89
  %inc64 = add i32 %89, 1
  store i32 %inc64, i32* %m_nb_mct_records63, align 4, !tbaa !89
  br label %if.end.65

if.end.65:                                        ; preds = %if.end.57, %if.end
  %90 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %m_nb_mct_records66 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %90, i32 0, i32 21
  %91 = load i32, i32* %m_nb_mct_records66, align 4, !tbaa !89
  %92 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %m_nb_max_mct_records67 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %92, i32 0, i32 22
  %93 = load i32, i32* %m_nb_max_mct_records67, align 4, !tbaa !75
  %cmp68 = icmp eq i32 %91, %93
  br i1 %cmp68, label %if.then.70, label %if.end.113

if.then.70:                                       ; preds = %if.end.65
  %94 = bitcast %struct.opj_mct_data** %new_mct_records71 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %94) #1
  %95 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %m_nb_max_mct_records72 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %95, i32 0, i32 22
  %96 = load i32, i32* %m_nb_max_mct_records72, align 4, !tbaa !75
  %add73 = add i32 %96, 10
  store i32 %add73, i32* %m_nb_max_mct_records72, align 4, !tbaa !75
  %97 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %m_nb_max_mct_records74 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %97, i32 0, i32 22
  %98 = load i32, i32* %m_nb_max_mct_records74, align 4, !tbaa !75
  %conv75 = zext i32 %98 to i64
  %mul76 = mul i64 %conv75, 32
  %cmp77 = icmp uge i64 %mul76, -256
  br i1 %cmp77, label %cond.true.79, label %cond.false.80

cond.true.79:                                     ; preds = %if.then.70
  br label %cond.end.86

cond.false.80:                                    ; preds = %if.then.70
  %99 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %m_mct_records81 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %99, i32 0, i32 20
  %100 = load %struct.opj_mct_data*, %struct.opj_mct_data** %m_mct_records81, align 8, !tbaa !74
  %101 = bitcast %struct.opj_mct_data* %100 to i8*
  %102 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %m_nb_max_mct_records82 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %102, i32 0, i32 22
  %103 = load i32, i32* %m_nb_max_mct_records82, align 4, !tbaa !75
  %conv83 = zext i32 %103 to i64
  %mul84 = mul i64 %conv83, 32
  %call85 = call i8* @realloc(i8* %101, i64 %mul84) #9
  br label %cond.end.86

cond.end.86:                                      ; preds = %cond.false.80, %cond.true.79
  %cond87 = phi i8* [ null, %cond.true.79 ], [ %call85, %cond.false.80 ]
  %104 = bitcast i8* %cond87 to %struct.opj_mct_data*
  store %struct.opj_mct_data* %104, %struct.opj_mct_data** %new_mct_records71, align 8, !tbaa !1
  %105 = load %struct.opj_mct_data*, %struct.opj_mct_data** %new_mct_records71, align 8, !tbaa !1
  %tobool88 = icmp ne %struct.opj_mct_data* %105, null
  br i1 %tobool88, label %if.end.94, label %if.then.89

if.then.89:                                       ; preds = %cond.end.86
  %106 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %m_mct_records90 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %106, i32 0, i32 20
  %107 = load %struct.opj_mct_data*, %struct.opj_mct_data** %m_mct_records90, align 8, !tbaa !74
  %108 = bitcast %struct.opj_mct_data* %107 to i8*
  call void @free(i8* %108) #9
  %109 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %m_mct_records91 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %109, i32 0, i32 20
  store %struct.opj_mct_data* null, %struct.opj_mct_data** %m_mct_records91, align 8, !tbaa !74
  %110 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %m_nb_max_mct_records92 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %110, i32 0, i32 22
  store i32 0, i32* %m_nb_max_mct_records92, align 4, !tbaa !75
  %111 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %m_nb_mct_records93 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %111, i32 0, i32 21
  store i32 0, i32* %m_nb_mct_records93, align 4, !tbaa !89
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.110

if.end.94:                                        ; preds = %cond.end.86
  %112 = load %struct.opj_mct_data*, %struct.opj_mct_data** %new_mct_records71, align 8, !tbaa !1
  %113 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %m_mct_records95 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %113, i32 0, i32 20
  store %struct.opj_mct_data* %112, %struct.opj_mct_data** %m_mct_records95, align 8, !tbaa !74
  %114 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %m_mct_records96 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %114, i32 0, i32 20
  %115 = load %struct.opj_mct_data*, %struct.opj_mct_data** %m_mct_records96, align 8, !tbaa !74
  %116 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %m_nb_mct_records97 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %116, i32 0, i32 21
  %117 = load i32, i32* %m_nb_mct_records97, align 4, !tbaa !89
  %idx.ext98 = zext i32 %117 to i64
  %add.ptr99 = getelementptr inbounds %struct.opj_mct_data, %struct.opj_mct_data* %115, i64 %idx.ext98
  store %struct.opj_mct_data* %add.ptr99, %struct.opj_mct_data** %l_mct_offset_data, align 8, !tbaa !1
  %118 = load %struct.opj_mct_data*, %struct.opj_mct_data** %l_mct_offset_data, align 8, !tbaa !1
  %119 = bitcast %struct.opj_mct_data* %118 to i8*
  %120 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %m_nb_max_mct_records100 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %120, i32 0, i32 22
  %121 = load i32, i32* %m_nb_max_mct_records100, align 4, !tbaa !75
  %122 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %m_nb_mct_records101 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %122, i32 0, i32 21
  %123 = load i32, i32* %m_nb_mct_records101, align 4, !tbaa !89
  %sub102 = sub i32 %121, %123
  %conv103 = zext i32 %sub102 to i64
  %mul104 = mul i64 %conv103, 32
  %call105 = call i8* @memset(i8* %119, i32 0, i64 %mul104) #9
  %124 = load %struct.opj_mct_data*, %struct.opj_mct_data** %l_mct_deco_data, align 8, !tbaa !1
  %tobool106 = icmp ne %struct.opj_mct_data* %124, null
  br i1 %tobool106, label %if.then.107, label %if.end.109

if.then.107:                                      ; preds = %if.end.94
  %125 = load %struct.opj_mct_data*, %struct.opj_mct_data** %l_mct_offset_data, align 8, !tbaa !1
  %add.ptr108 = getelementptr inbounds %struct.opj_mct_data, %struct.opj_mct_data* %125, i64 -1
  store %struct.opj_mct_data* %add.ptr108, %struct.opj_mct_data** %l_mct_deco_data, align 8, !tbaa !1
  br label %if.end.109

if.end.109:                                       ; preds = %if.then.107, %if.end.94
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.110

cleanup.110:                                      ; preds = %if.end.109, %if.then.89
  %126 = bitcast %struct.opj_mct_data** %new_mct_records71 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %126) #1
  %cleanup.dest.111 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.111, label %cleanup.224 [
    i32 0, label %cleanup.cont.112
  ]

cleanup.cont.112:                                 ; preds = %cleanup.110
  br label %if.end.113

if.end.113:                                       ; preds = %cleanup.cont.112, %if.end.65
  %127 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %m_mct_records114 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %127, i32 0, i32 20
  %128 = load %struct.opj_mct_data*, %struct.opj_mct_data** %m_mct_records114, align 8, !tbaa !74
  %129 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %m_nb_mct_records115 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %129, i32 0, i32 21
  %130 = load i32, i32* %m_nb_mct_records115, align 4, !tbaa !89
  %idx.ext116 = zext i32 %130 to i64
  %add.ptr117 = getelementptr inbounds %struct.opj_mct_data, %struct.opj_mct_data* %128, i64 %idx.ext116
  store %struct.opj_mct_data* %add.ptr117, %struct.opj_mct_data** %l_mct_offset_data, align 8, !tbaa !1
  %131 = load %struct.opj_mct_data*, %struct.opj_mct_data** %l_mct_offset_data, align 8, !tbaa !1
  %m_data118 = getelementptr inbounds %struct.opj_mct_data, %struct.opj_mct_data* %131, i32 0, i32 3
  %132 = load i8*, i8** %m_data118, align 8, !tbaa !92
  %tobool119 = icmp ne i8* %132, null
  br i1 %tobool119, label %if.then.120, label %if.end.123

if.then.120:                                      ; preds = %if.end.113
  %133 = load %struct.opj_mct_data*, %struct.opj_mct_data** %l_mct_offset_data, align 8, !tbaa !1
  %m_data121 = getelementptr inbounds %struct.opj_mct_data, %struct.opj_mct_data* %133, i32 0, i32 3
  %134 = load i8*, i8** %m_data121, align 8, !tbaa !92
  call void @free(i8* %134) #9
  %135 = load %struct.opj_mct_data*, %struct.opj_mct_data** %l_mct_offset_data, align 8, !tbaa !1
  %m_data122 = getelementptr inbounds %struct.opj_mct_data, %struct.opj_mct_data* %135, i32 0, i32 3
  store i8* null, i8** %m_data122, align 8, !tbaa !92
  br label %if.end.123

if.end.123:                                       ; preds = %if.then.120, %if.end.113
  %136 = load i32, i32* %l_indix, align 4, !tbaa !5
  %inc124 = add i32 %136, 1
  store i32 %inc124, i32* %l_indix, align 4, !tbaa !5
  %137 = load %struct.opj_mct_data*, %struct.opj_mct_data** %l_mct_offset_data, align 8, !tbaa !1
  %m_index125 = getelementptr inbounds %struct.opj_mct_data, %struct.opj_mct_data* %137, i32 0, i32 2
  store i32 %136, i32* %m_index125, align 4, !tbaa !90
  %138 = load %struct.opj_mct_data*, %struct.opj_mct_data** %l_mct_offset_data, align 8, !tbaa !1
  %m_array_type126 = getelementptr inbounds %struct.opj_mct_data, %struct.opj_mct_data* %138, i32 0, i32 1
  store i32 2, i32* %m_array_type126, align 4, !tbaa !93
  %139 = load %struct.opj_mct_data*, %struct.opj_mct_data** %l_mct_offset_data, align 8, !tbaa !1
  %m_element_type127 = getelementptr inbounds %struct.opj_mct_data, %struct.opj_mct_data* %139, i32 0, i32 0
  store i32 2, i32* %m_element_type127, align 4, !tbaa !94
  %140 = load %struct.opj_image*, %struct.opj_image** %p_image.addr, align 8, !tbaa !1
  %numcomps128 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %140, i32 0, i32 4
  %141 = load i32, i32* %numcomps128, align 4, !tbaa !45
  store i32 %141, i32* %l_nb_elem, align 4, !tbaa !5
  %142 = load i32, i32* %l_nb_elem, align 4, !tbaa !5
  %143 = load %struct.opj_mct_data*, %struct.opj_mct_data** %l_mct_offset_data, align 8, !tbaa !1
  %m_element_type129 = getelementptr inbounds %struct.opj_mct_data, %struct.opj_mct_data* %143, i32 0, i32 0
  %144 = load i32, i32* %m_element_type129, align 4, !tbaa !94
  %idxprom130 = zext i32 %144 to i64
  %arrayidx131 = getelementptr inbounds [4 x i32], [4 x i32]* @MCT_ELEMENT_SIZE, i32 0, i64 %idxprom130
  %145 = load i32, i32* %arrayidx131, align 4, !tbaa !5
  %mul132 = mul i32 %142, %145
  store i32 %mul132, i32* %l_mct_size, align 4, !tbaa !5
  %146 = load i32, i32* %l_mct_size, align 4, !tbaa !5
  %conv133 = zext i32 %146 to i64
  %cmp134 = icmp uge i64 %conv133, -256
  br i1 %cmp134, label %cond.true.136, label %cond.false.137

cond.true.136:                                    ; preds = %if.end.123
  br label %cond.end.140

cond.false.137:                                   ; preds = %if.end.123
  %147 = load i32, i32* %l_mct_size, align 4, !tbaa !5
  %conv138 = zext i32 %147 to i64
  %call139 = call noalias i8* @malloc(i64 %conv138) #9
  br label %cond.end.140

cond.end.140:                                     ; preds = %cond.false.137, %cond.true.136
  %cond141 = phi i8* [ null, %cond.true.136 ], [ %call139, %cond.false.137 ]
  %148 = load %struct.opj_mct_data*, %struct.opj_mct_data** %l_mct_offset_data, align 8, !tbaa !1
  %m_data142 = getelementptr inbounds %struct.opj_mct_data, %struct.opj_mct_data* %148, i32 0, i32 3
  store i8* %cond141, i8** %m_data142, align 8, !tbaa !92
  %149 = load %struct.opj_mct_data*, %struct.opj_mct_data** %l_mct_offset_data, align 8, !tbaa !1
  %m_data143 = getelementptr inbounds %struct.opj_mct_data, %struct.opj_mct_data* %149, i32 0, i32 3
  %150 = load i8*, i8** %m_data143, align 8, !tbaa !92
  %tobool144 = icmp ne i8* %150, null
  br i1 %tobool144, label %if.end.146, label %if.then.145

if.then.145:                                      ; preds = %cond.end.140
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.224

if.end.146:                                       ; preds = %cond.end.140
  %151 = load i32, i32* %l_nb_elem, align 4, !tbaa !5
  %conv147 = zext i32 %151 to i64
  %mul148 = mul i64 %conv147, 4
  %cmp149 = icmp uge i64 %mul148, -256
  br i1 %cmp149, label %cond.true.151, label %cond.false.152

cond.true.151:                                    ; preds = %if.end.146
  br label %cond.end.156

cond.false.152:                                   ; preds = %if.end.146
  %152 = load i32, i32* %l_nb_elem, align 4, !tbaa !5
  %conv153 = zext i32 %152 to i64
  %mul154 = mul i64 %conv153, 4
  %call155 = call noalias i8* @malloc(i64 %mul154) #9
  br label %cond.end.156

cond.end.156:                                     ; preds = %cond.false.152, %cond.true.151
  %cond157 = phi i8* [ null, %cond.true.151 ], [ %call155, %cond.false.152 ]
  %153 = bitcast i8* %cond157 to float*
  store float* %153, float** %l_data, align 8, !tbaa !1
  %154 = load float*, float** %l_data, align 8, !tbaa !1
  %tobool158 = icmp ne float* %154, null
  br i1 %tobool158, label %if.end.162, label %if.then.159

if.then.159:                                      ; preds = %cond.end.156
  %155 = load %struct.opj_mct_data*, %struct.opj_mct_data** %l_mct_offset_data, align 8, !tbaa !1
  %m_data160 = getelementptr inbounds %struct.opj_mct_data, %struct.opj_mct_data* %155, i32 0, i32 3
  %156 = load i8*, i8** %m_data160, align 8, !tbaa !92
  call void @free(i8* %156) #9
  %157 = load %struct.opj_mct_data*, %struct.opj_mct_data** %l_mct_offset_data, align 8, !tbaa !1
  %m_data161 = getelementptr inbounds %struct.opj_mct_data, %struct.opj_mct_data* %157, i32 0, i32 3
  store i8* null, i8** %m_data161, align 8, !tbaa !92
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.224

if.end.162:                                       ; preds = %cond.end.156
  %158 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %tccps = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %158, i32 0, i32 13
  %159 = load %struct.opj_tccp*, %struct.opj_tccp** %tccps, align 8, !tbaa !48
  store %struct.opj_tccp* %159, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %160 = load float*, float** %l_data, align 8, !tbaa !1
  store float* %160, float** %l_current_data, align 8, !tbaa !1
  store i32 0, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.162
  %161 = load i32, i32* %i, align 4, !tbaa !5
  %162 = load i32, i32* %l_nb_elem, align 4, !tbaa !5
  %cmp163 = icmp ult i32 %161, %162
  br i1 %cmp163, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %163 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %m_dc_level_shift = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %163, i32 0, i32 12
  %164 = load i32, i32* %m_dc_level_shift, align 4, !tbaa !78
  %conv165 = sitofp i32 %164 to float
  %165 = load float*, float** %l_current_data, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds float, float* %165, i32 1
  store float* %incdec.ptr, float** %l_current_data, align 8, !tbaa !1
  store float %conv165, float* %165, align 4, !tbaa !7
  %166 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %incdec.ptr166 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %166, i32 1
  store %struct.opj_tccp* %incdec.ptr166, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %167 = load i32, i32* %i, align 4, !tbaa !5
  %inc167 = add i32 %167, 1
  store i32 %inc167, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %168 = load %struct.opj_mct_data*, %struct.opj_mct_data** %l_mct_offset_data, align 8, !tbaa !1
  %m_element_type168 = getelementptr inbounds %struct.opj_mct_data, %struct.opj_mct_data* %168, i32 0, i32 0
  %169 = load i32, i32* %m_element_type168, align 4, !tbaa !94
  %idxprom169 = zext i32 %169 to i64
  %arrayidx170 = getelementptr inbounds [4 x void (i8*, i8*, i32)*], [4 x void (i8*, i8*, i32)*]* @j2k_mct_write_functions_from_float, i32 0, i64 %idxprom169
  %170 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %arrayidx170, align 8, !tbaa !1
  %171 = load float*, float** %l_data, align 8, !tbaa !1
  %172 = bitcast float* %171 to i8*
  %173 = load %struct.opj_mct_data*, %struct.opj_mct_data** %l_mct_offset_data, align 8, !tbaa !1
  %m_data171 = getelementptr inbounds %struct.opj_mct_data, %struct.opj_mct_data* %173, i32 0, i32 3
  %174 = load i8*, i8** %m_data171, align 8, !tbaa !92
  %175 = load i32, i32* %l_nb_elem, align 4, !tbaa !5
  call void %170(i8* %172, i8* %174, i32 %175) #7
  %176 = load float*, float** %l_data, align 8, !tbaa !1
  %177 = bitcast float* %176 to i8*
  call void @free(i8* %177) #9
  %178 = load i32, i32* %l_mct_size, align 4, !tbaa !5
  %179 = load %struct.opj_mct_data*, %struct.opj_mct_data** %l_mct_offset_data, align 8, !tbaa !1
  %m_data_size172 = getelementptr inbounds %struct.opj_mct_data, %struct.opj_mct_data* %179, i32 0, i32 4
  store i32 %178, i32* %m_data_size172, align 4, !tbaa !95
  %180 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %m_nb_mct_records173 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %180, i32 0, i32 21
  %181 = load i32, i32* %m_nb_mct_records173, align 4, !tbaa !89
  %inc174 = add i32 %181, 1
  store i32 %inc174, i32* %m_nb_mct_records173, align 4, !tbaa !89
  %182 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %m_nb_mcc_records = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %182, i32 0, i32 24
  %183 = load i32, i32* %m_nb_mcc_records, align 4, !tbaa !96
  %184 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %m_nb_max_mcc_records = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %184, i32 0, i32 25
  %185 = load i32, i32* %m_nb_max_mcc_records, align 4, !tbaa !77
  %cmp175 = icmp eq i32 %183, %185
  br i1 %cmp175, label %if.then.177, label %if.end.214

if.then.177:                                      ; preds = %for.end
  %186 = bitcast %struct.opj_simple_mcc_decorrelation_data** %new_mcc_records to i8*
  call void @llvm.lifetime.start(i64 8, i8* %186) #1
  %187 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %m_nb_max_mcc_records178 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %187, i32 0, i32 25
  %188 = load i32, i32* %m_nb_max_mcc_records178, align 4, !tbaa !77
  %add179 = add i32 %188, 10
  store i32 %add179, i32* %m_nb_max_mcc_records178, align 4, !tbaa !77
  %189 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %m_nb_max_mcc_records180 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %189, i32 0, i32 25
  %190 = load i32, i32* %m_nb_max_mcc_records180, align 4, !tbaa !77
  %conv181 = zext i32 %190 to i64
  %mul182 = mul i64 %conv181, 32
  %cmp183 = icmp uge i64 %mul182, -256
  br i1 %cmp183, label %cond.true.185, label %cond.false.186

cond.true.185:                                    ; preds = %if.then.177
  br label %cond.end.191

cond.false.186:                                   ; preds = %if.then.177
  %191 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %m_mcc_records = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %191, i32 0, i32 23
  %192 = load %struct.opj_simple_mcc_decorrelation_data*, %struct.opj_simple_mcc_decorrelation_data** %m_mcc_records, align 8, !tbaa !76
  %193 = bitcast %struct.opj_simple_mcc_decorrelation_data* %192 to i8*
  %194 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %m_nb_max_mcc_records187 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %194, i32 0, i32 25
  %195 = load i32, i32* %m_nb_max_mcc_records187, align 4, !tbaa !77
  %conv188 = zext i32 %195 to i64
  %mul189 = mul i64 %conv188, 32
  %call190 = call i8* @realloc(i8* %193, i64 %mul189) #9
  br label %cond.end.191

cond.end.191:                                     ; preds = %cond.false.186, %cond.true.185
  %cond192 = phi i8* [ null, %cond.true.185 ], [ %call190, %cond.false.186 ]
  %196 = bitcast i8* %cond192 to %struct.opj_simple_mcc_decorrelation_data*
  store %struct.opj_simple_mcc_decorrelation_data* %196, %struct.opj_simple_mcc_decorrelation_data** %new_mcc_records, align 8, !tbaa !1
  %197 = load %struct.opj_simple_mcc_decorrelation_data*, %struct.opj_simple_mcc_decorrelation_data** %new_mcc_records, align 8, !tbaa !1
  %tobool193 = icmp ne %struct.opj_simple_mcc_decorrelation_data* %197, null
  br i1 %tobool193, label %if.end.199, label %if.then.194

if.then.194:                                      ; preds = %cond.end.191
  %198 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %m_mcc_records195 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %198, i32 0, i32 23
  %199 = load %struct.opj_simple_mcc_decorrelation_data*, %struct.opj_simple_mcc_decorrelation_data** %m_mcc_records195, align 8, !tbaa !76
  %200 = bitcast %struct.opj_simple_mcc_decorrelation_data* %199 to i8*
  call void @free(i8* %200) #9
  %201 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %m_mcc_records196 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %201, i32 0, i32 23
  store %struct.opj_simple_mcc_decorrelation_data* null, %struct.opj_simple_mcc_decorrelation_data** %m_mcc_records196, align 8, !tbaa !76
  %202 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %m_nb_max_mcc_records197 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %202, i32 0, i32 25
  store i32 0, i32* %m_nb_max_mcc_records197, align 4, !tbaa !77
  %203 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %m_nb_mcc_records198 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %203, i32 0, i32 24
  store i32 0, i32* %m_nb_mcc_records198, align 4, !tbaa !96
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.211

if.end.199:                                       ; preds = %cond.end.191
  %204 = load %struct.opj_simple_mcc_decorrelation_data*, %struct.opj_simple_mcc_decorrelation_data** %new_mcc_records, align 8, !tbaa !1
  %205 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %m_mcc_records200 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %205, i32 0, i32 23
  store %struct.opj_simple_mcc_decorrelation_data* %204, %struct.opj_simple_mcc_decorrelation_data** %m_mcc_records200, align 8, !tbaa !76
  %206 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %m_mcc_records201 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %206, i32 0, i32 23
  %207 = load %struct.opj_simple_mcc_decorrelation_data*, %struct.opj_simple_mcc_decorrelation_data** %m_mcc_records201, align 8, !tbaa !76
  %208 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %m_nb_mcc_records202 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %208, i32 0, i32 24
  %209 = load i32, i32* %m_nb_mcc_records202, align 4, !tbaa !96
  %idx.ext203 = zext i32 %209 to i64
  %add.ptr204 = getelementptr inbounds %struct.opj_simple_mcc_decorrelation_data, %struct.opj_simple_mcc_decorrelation_data* %207, i64 %idx.ext203
  store %struct.opj_simple_mcc_decorrelation_data* %add.ptr204, %struct.opj_simple_mcc_decorrelation_data** %l_mcc_data, align 8, !tbaa !1
  %210 = load %struct.opj_simple_mcc_decorrelation_data*, %struct.opj_simple_mcc_decorrelation_data** %l_mcc_data, align 8, !tbaa !1
  %211 = bitcast %struct.opj_simple_mcc_decorrelation_data* %210 to i8*
  %212 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %m_nb_max_mcc_records205 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %212, i32 0, i32 25
  %213 = load i32, i32* %m_nb_max_mcc_records205, align 4, !tbaa !77
  %214 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %m_nb_mcc_records206 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %214, i32 0, i32 24
  %215 = load i32, i32* %m_nb_mcc_records206, align 4, !tbaa !96
  %sub207 = sub i32 %213, %215
  %conv208 = zext i32 %sub207 to i64
  %mul209 = mul i64 %conv208, 32
  %call210 = call i8* @memset(i8* %211, i32 0, i64 %mul209) #9
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.211

cleanup.211:                                      ; preds = %if.end.199, %if.then.194
  %216 = bitcast %struct.opj_simple_mcc_decorrelation_data** %new_mcc_records to i8*
  call void @llvm.lifetime.end(i64 8, i8* %216) #1
  %cleanup.dest.212 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.212, label %cleanup.224 [
    i32 0, label %cleanup.cont.213
  ]

cleanup.cont.213:                                 ; preds = %cleanup.211
  br label %if.end.214

if.end.214:                                       ; preds = %cleanup.cont.213, %for.end
  %217 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %m_mcc_records215 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %217, i32 0, i32 23
  %218 = load %struct.opj_simple_mcc_decorrelation_data*, %struct.opj_simple_mcc_decorrelation_data** %m_mcc_records215, align 8, !tbaa !76
  %219 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %m_nb_mcc_records216 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %219, i32 0, i32 24
  %220 = load i32, i32* %m_nb_mcc_records216, align 4, !tbaa !96
  %idx.ext217 = zext i32 %220 to i64
  %add.ptr218 = getelementptr inbounds %struct.opj_simple_mcc_decorrelation_data, %struct.opj_simple_mcc_decorrelation_data* %218, i64 %idx.ext217
  store %struct.opj_simple_mcc_decorrelation_data* %add.ptr218, %struct.opj_simple_mcc_decorrelation_data** %l_mcc_data, align 8, !tbaa !1
  %221 = load %struct.opj_mct_data*, %struct.opj_mct_data** %l_mct_deco_data, align 8, !tbaa !1
  %222 = load %struct.opj_simple_mcc_decorrelation_data*, %struct.opj_simple_mcc_decorrelation_data** %l_mcc_data, align 8, !tbaa !1
  %m_decorrelation_array = getelementptr inbounds %struct.opj_simple_mcc_decorrelation_data, %struct.opj_simple_mcc_decorrelation_data* %222, i32 0, i32 2
  store %struct.opj_mct_data* %221, %struct.opj_mct_data** %m_decorrelation_array, align 8, !tbaa !100
  %223 = load %struct.opj_simple_mcc_decorrelation_data*, %struct.opj_simple_mcc_decorrelation_data** %l_mcc_data, align 8, !tbaa !1
  %m_is_irreversible = getelementptr inbounds %struct.opj_simple_mcc_decorrelation_data, %struct.opj_simple_mcc_decorrelation_data* %223, i32 0, i32 4
  %bf.load = load i8, i8* %m_is_irreversible, align 8
  %bf.clear = and i8 %bf.load, -2
  %bf.set = or i8 %bf.clear, 1
  store i8 %bf.set, i8* %m_is_irreversible, align 8
  %224 = load %struct.opj_image*, %struct.opj_image** %p_image.addr, align 8, !tbaa !1
  %numcomps219 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %224, i32 0, i32 4
  %225 = load i32, i32* %numcomps219, align 4, !tbaa !45
  %226 = load %struct.opj_simple_mcc_decorrelation_data*, %struct.opj_simple_mcc_decorrelation_data** %l_mcc_data, align 8, !tbaa !1
  %m_nb_comps = getelementptr inbounds %struct.opj_simple_mcc_decorrelation_data, %struct.opj_simple_mcc_decorrelation_data* %226, i32 0, i32 1
  store i32 %225, i32* %m_nb_comps, align 4, !tbaa !99
  %227 = load i32, i32* %l_indix, align 4, !tbaa !5
  %inc220 = add i32 %227, 1
  store i32 %inc220, i32* %l_indix, align 4, !tbaa !5
  %228 = load %struct.opj_simple_mcc_decorrelation_data*, %struct.opj_simple_mcc_decorrelation_data** %l_mcc_data, align 8, !tbaa !1
  %m_index221 = getelementptr inbounds %struct.opj_simple_mcc_decorrelation_data, %struct.opj_simple_mcc_decorrelation_data* %228, i32 0, i32 0
  store i32 %227, i32* %m_index221, align 4, !tbaa !97
  %229 = load %struct.opj_mct_data*, %struct.opj_mct_data** %l_mct_offset_data, align 8, !tbaa !1
  %230 = load %struct.opj_simple_mcc_decorrelation_data*, %struct.opj_simple_mcc_decorrelation_data** %l_mcc_data, align 8, !tbaa !1
  %m_offset_array = getelementptr inbounds %struct.opj_simple_mcc_decorrelation_data, %struct.opj_simple_mcc_decorrelation_data* %230, i32 0, i32 3
  store %struct.opj_mct_data* %229, %struct.opj_mct_data** %m_offset_array, align 8, !tbaa !101
  %231 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %m_nb_mcc_records222 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %231, i32 0, i32 24
  %232 = load i32, i32* %m_nb_mcc_records222, align 4, !tbaa !96
  %inc223 = add i32 %232, 1
  store i32 %inc223, i32* %m_nb_mcc_records222, align 4, !tbaa !96
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.224

cleanup.224:                                      ; preds = %if.end.214, %cleanup.211, %if.then.159, %if.then.145, %cleanup.110, %if.then.56, %cleanup, %if.then
  %233 = bitcast %struct.opj_tccp** %l_tccp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %233) #1
  %234 = bitcast float** %l_current_data to i8*
  call void @llvm.lifetime.end(i64 8, i8* %234) #1
  %235 = bitcast float** %l_data to i8*
  call void @llvm.lifetime.end(i64 8, i8* %235) #1
  %236 = bitcast i32* %l_nb_elem to i8*
  call void @llvm.lifetime.end(i64 4, i8* %236) #1
  %237 = bitcast i32* %l_mct_size to i8*
  call void @llvm.lifetime.end(i64 4, i8* %237) #1
  %238 = bitcast %struct.opj_simple_mcc_decorrelation_data** %l_mcc_data to i8*
  call void @llvm.lifetime.end(i64 8, i8* %238) #1
  %239 = bitcast %struct.opj_mct_data** %l_mct_offset_data to i8*
  call void @llvm.lifetime.end(i64 8, i8* %239) #1
  %240 = bitcast %struct.opj_mct_data** %l_mct_deco_data to i8*
  call void @llvm.lifetime.end(i64 8, i8* %240) #1
  %241 = bitcast i32* %l_indix to i8*
  call void @llvm.lifetime.end(i64 4, i8* %241) #1
  %242 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %242) #1
  %243 = load i32, i32* %retval
  ret i32 %243
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @opj_int_floorlog2(i32 %a) #5 {
entry:
  %a.addr = alloca i32, align 4
  %l = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4, !tbaa !5
  %0 = bitcast i32* %l to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  store i32 0, i32* %l, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %a.addr, align 4, !tbaa !5
  %cmp = icmp sgt i32 %1, 1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %a.addr, align 4, !tbaa !5
  %shr = ashr i32 %2, 1
  store i32 %shr, i32* %a.addr, align 4, !tbaa !5
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %3 = load i32, i32* %l, align 4, !tbaa !5
  %inc = add nsw i32 %3, 1
  store i32 %inc, i32* %l, align 4, !tbaa !5
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %4 = load i32, i32* %l, align 4, !tbaa !5
  %5 = bitcast i32* %l to i8*
  call void @llvm.lifetime.end(i64 4, i8* %5) #1
  ret i32 %4
}

declare void @opj_dwt_calc_explicit_stepsizes(%struct.opj_tccp*, i32) #3

; Function Attrs: nounwind uwtable
define i32 @opj_j2k_end_decompress(%struct.opj_j2k* %p_j2k, %struct.opj_stream_private* %p_stream, %struct.opj_event_mgr* %p_manager) #0 {
entry:
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %p_stream.addr = alloca %struct.opj_stream_private*, align 8
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store %struct.opj_stream_private* %p_stream, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %0 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %1 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %2 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  ret i32 1
}

; Function Attrs: nounwind uwtable
define i32 @opj_j2k_read_header(%struct.opj_stream_private* %p_stream, %struct.opj_j2k* %p_j2k, %struct.opj_image** %p_image, %struct.opj_event_mgr* %p_manager) #0 {
entry:
  %retval = alloca i32, align 4
  %p_stream.addr = alloca %struct.opj_stream_private*, align 8
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %p_image.addr = alloca %struct.opj_image**, align 8
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  store %struct.opj_stream_private* %p_stream, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store %struct.opj_image** %p_image, %struct.opj_image*** %p_image.addr, align 8, !tbaa !1
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %0 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cmp = icmp ne %struct.opj_j2k* %0, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 6184, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @__PRETTY_FUNCTION__.opj_j2k_read_header, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %1, %cond.true
  %2 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %cmp1 = icmp ne %struct.opj_stream_private* %2, null
  br i1 %cmp1, label %cond.true.2, label %cond.false.3

cond.true.2:                                      ; preds = %cond.end
  br label %cond.end.4

cond.false.3:                                     ; preds = %cond.end
  call void @__assert_fail(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 6185, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @__PRETTY_FUNCTION__.opj_j2k_read_header, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.4

cond.end.4:                                       ; preds = %3, %cond.true.2
  %4 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %cmp5 = icmp ne %struct.opj_event_mgr* %4, null
  br i1 %cmp5, label %cond.true.6, label %cond.false.7

cond.true.6:                                      ; preds = %cond.end.4
  br label %cond.end.8

cond.false.7:                                     ; preds = %cond.end.4
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 6186, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @__PRETTY_FUNCTION__.opj_j2k_read_header, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.8

cond.end.8:                                       ; preds = %5, %cond.true.6
  %call = call %struct.opj_image* @opj_image_create0() #7
  %6 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_private_image = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %6, i32 0, i32 2
  store %struct.opj_image* %call, %struct.opj_image** %m_private_image, align 8, !tbaa !38
  %7 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_private_image9 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %7, i32 0, i32 2
  %8 = load %struct.opj_image*, %struct.opj_image** %m_private_image9, align 8, !tbaa !38
  %tobool = icmp ne %struct.opj_image* %8, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %cond.end.8
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %cond.end.8
  %9 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  call void @opj_j2k_setup_decoding_validation(%struct.opj_j2k* %9) #7
  %10 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %11 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_validation_list = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %11, i32 0, i32 6
  %12 = load %struct.opj_procedure_list*, %struct.opj_procedure_list** %m_validation_list, align 8, !tbaa !113
  %13 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %14 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call10 = call i32 @opj_j2k_exec(%struct.opj_j2k* %10, %struct.opj_procedure_list* %12, %struct.opj_stream_private* %13, %struct.opj_event_mgr* %14) #7
  %tobool11 = icmp ne i32 %call10, 0
  br i1 %tobool11, label %if.end.15, label %if.then.12

if.then.12:                                       ; preds = %if.end
  %15 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_private_image13 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %15, i32 0, i32 2
  %16 = load %struct.opj_image*, %struct.opj_image** %m_private_image13, align 8, !tbaa !38
  call void @opj_image_destroy(%struct.opj_image* %16) #7
  %17 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_private_image14 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %17, i32 0, i32 2
  store %struct.opj_image* null, %struct.opj_image** %m_private_image14, align 8, !tbaa !38
  store i32 0, i32* %retval
  br label %return

if.end.15:                                        ; preds = %if.end
  %18 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  call void @opj_j2k_setup_header_reading(%struct.opj_j2k* %18) #7
  %19 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %20 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_procedure_list = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %20, i32 0, i32 5
  %21 = load %struct.opj_procedure_list*, %struct.opj_procedure_list** %m_procedure_list, align 8, !tbaa !114
  %22 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %23 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call16 = call i32 @opj_j2k_exec(%struct.opj_j2k* %19, %struct.opj_procedure_list* %21, %struct.opj_stream_private* %22, %struct.opj_event_mgr* %23) #7
  %tobool17 = icmp ne i32 %call16, 0
  br i1 %tobool17, label %if.end.21, label %if.then.18

if.then.18:                                       ; preds = %if.end.15
  %24 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_private_image19 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %24, i32 0, i32 2
  %25 = load %struct.opj_image*, %struct.opj_image** %m_private_image19, align 8, !tbaa !38
  call void @opj_image_destroy(%struct.opj_image* %25) #7
  %26 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_private_image20 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %26, i32 0, i32 2
  store %struct.opj_image* null, %struct.opj_image** %m_private_image20, align 8, !tbaa !38
  store i32 0, i32* %retval
  br label %return

if.end.21:                                        ; preds = %if.end.15
  %call22 = call %struct.opj_image* @opj_image_create0() #7
  %27 = load %struct.opj_image**, %struct.opj_image*** %p_image.addr, align 8, !tbaa !1
  store %struct.opj_image* %call22, %struct.opj_image** %27, align 8, !tbaa !1
  %28 = load %struct.opj_image**, %struct.opj_image*** %p_image.addr, align 8, !tbaa !1
  %29 = load %struct.opj_image*, %struct.opj_image** %28, align 8, !tbaa !1
  %tobool23 = icmp ne %struct.opj_image* %29, null
  br i1 %tobool23, label %if.end.25, label %if.then.24

if.then.24:                                       ; preds = %if.end.21
  store i32 0, i32* %retval
  br label %return

if.end.25:                                        ; preds = %if.end.21
  %30 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_private_image26 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %30, i32 0, i32 2
  %31 = load %struct.opj_image*, %struct.opj_image** %m_private_image26, align 8, !tbaa !38
  %32 = load %struct.opj_image**, %struct.opj_image*** %p_image.addr, align 8, !tbaa !1
  %33 = load %struct.opj_image*, %struct.opj_image** %32, align 8, !tbaa !1
  call void @opj_copy_image_header(%struct.opj_image* %31, %struct.opj_image* %33) #7
  %34 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %call27 = call i32 @opj_j2k_allocate_tile_element_cstr_index(%struct.opj_j2k* %34) #7
  %tobool28 = icmp ne i32 %call27, 0
  br i1 %tobool28, label %if.end.30, label %if.then.29

if.then.29:                                       ; preds = %if.end.25
  store i32 0, i32* %retval
  br label %return

if.end.30:                                        ; preds = %if.end.25
  store i32 1, i32* %retval
  br label %return

return:                                           ; preds = %if.end.30, %if.then.29, %if.then.24, %if.then.18, %if.then.12, %if.then
  %35 = load i32, i32* %retval
  ret i32 %35
}

declare %struct.opj_image* @opj_image_create0() #3

; Function Attrs: nounwind uwtable
define internal void @opj_j2k_setup_decoding_validation(%struct.opj_j2k* %p_j2k) #0 {
entry:
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %0 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cmp = icmp ne %struct.opj_j2k* %0, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 6245, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__.opj_j2k_setup_decoding_validation, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %1, %cond.true
  %2 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_validation_list = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %2, i32 0, i32 6
  %3 = load %struct.opj_procedure_list*, %struct.opj_procedure_list** %m_validation_list, align 8, !tbaa !113
  %call = call i32 @opj_procedure_list_add_procedure(%struct.opj_procedure_list* %3, void ()* bitcast (i32 (%struct.opj_j2k*, %struct.opj_stream_private*, %struct.opj_event_mgr*)* @opj_j2k_build_decoder to void ()*)) #7
  %4 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_validation_list1 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %4, i32 0, i32 6
  %5 = load %struct.opj_procedure_list*, %struct.opj_procedure_list** %m_validation_list1, align 8, !tbaa !113
  %call2 = call i32 @opj_procedure_list_add_procedure(%struct.opj_procedure_list* %5, void ()* bitcast (i32 (%struct.opj_j2k*, %struct.opj_stream_private*, %struct.opj_event_mgr*)* @opj_j2k_decoding_validation to void ()*)) #7
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @opj_j2k_exec(%struct.opj_j2k* %p_j2k, %struct.opj_procedure_list* %p_procedure_list, %struct.opj_stream_private* %p_stream, %struct.opj_event_mgr* %p_manager) #0 {
entry:
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %p_procedure_list.addr = alloca %struct.opj_procedure_list*, align 8
  %p_stream.addr = alloca %struct.opj_stream_private*, align 8
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  %l_procedure = alloca i32 (%struct.opj_j2k*, %struct.opj_stream_private*, %struct.opj_event_mgr*)**, align 8
  %l_result = alloca i32, align 4
  %l_nb_proc = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store %struct.opj_procedure_list* %p_procedure_list, %struct.opj_procedure_list** %p_procedure_list.addr, align 8, !tbaa !1
  store %struct.opj_stream_private* %p_stream, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %0 = bitcast i32 (%struct.opj_j2k*, %struct.opj_stream_private*, %struct.opj_event_mgr*)*** %l_procedure to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  store i32 (%struct.opj_j2k*, %struct.opj_stream_private*, %struct.opj_event_mgr*)** null, i32 (%struct.opj_j2k*, %struct.opj_stream_private*, %struct.opj_event_mgr*)*** %l_procedure, align 8, !tbaa !1
  %1 = bitcast i32* %l_result to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  store i32 1, i32* %l_result, align 4, !tbaa !5
  %2 = bitcast i32* %l_nb_proc to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #1
  %3 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #1
  %4 = load %struct.opj_procedure_list*, %struct.opj_procedure_list** %p_procedure_list.addr, align 8, !tbaa !1
  %cmp = icmp ne %struct.opj_procedure_list* %4, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.126, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 6667, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @__PRETTY_FUNCTION__.opj_j2k_exec, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %5, %cond.true
  %6 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cmp1 = icmp ne %struct.opj_j2k* %6, null
  br i1 %cmp1, label %cond.true.2, label %cond.false.3

cond.true.2:                                      ; preds = %cond.end
  br label %cond.end.4

cond.false.3:                                     ; preds = %cond.end
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 6668, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @__PRETTY_FUNCTION__.opj_j2k_exec, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.4

cond.end.4:                                       ; preds = %7, %cond.true.2
  %8 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %cmp5 = icmp ne %struct.opj_stream_private* %8, null
  br i1 %cmp5, label %cond.true.6, label %cond.false.7

cond.true.6:                                      ; preds = %cond.end.4
  br label %cond.end.8

cond.false.7:                                     ; preds = %cond.end.4
  call void @__assert_fail(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 6669, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @__PRETTY_FUNCTION__.opj_j2k_exec, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.8

cond.end.8:                                       ; preds = %9, %cond.true.6
  %10 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %cmp9 = icmp ne %struct.opj_event_mgr* %10, null
  br i1 %cmp9, label %cond.true.10, label %cond.false.11

cond.true.10:                                     ; preds = %cond.end.8
  br label %cond.end.12

cond.false.11:                                    ; preds = %cond.end.8
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 6670, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @__PRETTY_FUNCTION__.opj_j2k_exec, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.12

cond.end.12:                                      ; preds = %11, %cond.true.10
  %12 = load %struct.opj_procedure_list*, %struct.opj_procedure_list** %p_procedure_list.addr, align 8, !tbaa !1
  %call = call i32 @opj_procedure_list_get_nb_procedures(%struct.opj_procedure_list* %12) #7
  store i32 %call, i32* %l_nb_proc, align 4, !tbaa !5
  %13 = load %struct.opj_procedure_list*, %struct.opj_procedure_list** %p_procedure_list.addr, align 8, !tbaa !1
  %call13 = call void ()** @opj_procedure_list_get_first_procedure(%struct.opj_procedure_list* %13) #7
  %14 = bitcast void ()** %call13 to i32 (%struct.opj_j2k*, %struct.opj_stream_private*, %struct.opj_event_mgr*)**
  store i32 (%struct.opj_j2k*, %struct.opj_stream_private*, %struct.opj_event_mgr*)** %14, i32 (%struct.opj_j2k*, %struct.opj_stream_private*, %struct.opj_event_mgr*)*** %l_procedure, align 8, !tbaa !1
  store i32 0, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %cond.end.12
  %15 = load i32, i32* %i, align 4, !tbaa !5
  %16 = load i32, i32* %l_nb_proc, align 4, !tbaa !5
  %cmp14 = icmp ult i32 %15, %16
  br i1 %cmp14, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %17 = load i32, i32* %l_result, align 4, !tbaa !5
  %tobool = icmp ne i32 %17, 0
  br i1 %tobool, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %for.body
  %18 = load i32 (%struct.opj_j2k*, %struct.opj_stream_private*, %struct.opj_event_mgr*)**, i32 (%struct.opj_j2k*, %struct.opj_stream_private*, %struct.opj_event_mgr*)*** %l_procedure, align 8, !tbaa !1
  %19 = load i32 (%struct.opj_j2k*, %struct.opj_stream_private*, %struct.opj_event_mgr*)*, i32 (%struct.opj_j2k*, %struct.opj_stream_private*, %struct.opj_event_mgr*)** %18, align 8, !tbaa !1
  %20 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %21 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %22 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call15 = call i32 %19(%struct.opj_j2k* %20, %struct.opj_stream_private* %21, %struct.opj_event_mgr* %22) #7
  %tobool16 = icmp ne i32 %call15, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.body
  %23 = phi i1 [ false, %for.body ], [ %tobool16, %land.rhs ]
  %land.ext = zext i1 %23 to i32
  store i32 %land.ext, i32* %l_result, align 4, !tbaa !5
  %24 = load i32 (%struct.opj_j2k*, %struct.opj_stream_private*, %struct.opj_event_mgr*)**, i32 (%struct.opj_j2k*, %struct.opj_stream_private*, %struct.opj_event_mgr*)*** %l_procedure, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds i32 (%struct.opj_j2k*, %struct.opj_stream_private*, %struct.opj_event_mgr*)*, i32 (%struct.opj_j2k*, %struct.opj_stream_private*, %struct.opj_event_mgr*)** %24, i32 1
  store i32 (%struct.opj_j2k*, %struct.opj_stream_private*, %struct.opj_event_mgr*)** %incdec.ptr, i32 (%struct.opj_j2k*, %struct.opj_stream_private*, %struct.opj_event_mgr*)*** %l_procedure, align 8, !tbaa !1
  br label %for.inc

for.inc:                                          ; preds = %land.end
  %25 = load i32, i32* %i, align 4, !tbaa !5
  %inc = add i32 %25, 1
  store i32 %inc, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %26 = load %struct.opj_procedure_list*, %struct.opj_procedure_list** %p_procedure_list.addr, align 8, !tbaa !1
  call void @opj_procedure_list_clear(%struct.opj_procedure_list* %26) #7
  %27 = load i32, i32* %l_result, align 4, !tbaa !5
  %28 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %28) #1
  %29 = bitcast i32* %l_nb_proc to i8*
  call void @llvm.lifetime.end(i64 4, i8* %29) #1
  %30 = bitcast i32* %l_result to i8*
  call void @llvm.lifetime.end(i64 4, i8* %30) #1
  %31 = bitcast i32 (%struct.opj_j2k*, %struct.opj_stream_private*, %struct.opj_event_mgr*)*** %l_procedure to i8*
  call void @llvm.lifetime.end(i64 8, i8* %31) #1
  ret i32 %27
}

declare void @opj_image_destroy(%struct.opj_image*) #3

; Function Attrs: nounwind uwtable
define internal void @opj_j2k_setup_header_reading(%struct.opj_j2k* %p_j2k) #0 {
entry:
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %0 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cmp = icmp ne %struct.opj_j2k* %0, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 6233, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.opj_j2k_setup_header_reading, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %1, %cond.true
  %2 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_procedure_list = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %2, i32 0, i32 5
  %3 = load %struct.opj_procedure_list*, %struct.opj_procedure_list** %m_procedure_list, align 8, !tbaa !114
  %call = call i32 @opj_procedure_list_add_procedure(%struct.opj_procedure_list* %3, void ()* bitcast (i32 (%struct.opj_j2k*, %struct.opj_stream_private*, %struct.opj_event_mgr*)* @opj_j2k_read_header_procedure to void ()*)) #7
  %4 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_procedure_list1 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %4, i32 0, i32 5
  %5 = load %struct.opj_procedure_list*, %struct.opj_procedure_list** %m_procedure_list1, align 8, !tbaa !114
  %call2 = call i32 @opj_procedure_list_add_procedure(%struct.opj_procedure_list* %5, void ()* bitcast (i32 (%struct.opj_j2k*, %struct.opj_stream_private*, %struct.opj_event_mgr*)* @opj_j2k_copy_default_tcp_and_create_tcd to void ()*)) #7
  ret void
}

declare void @opj_copy_image_header(%struct.opj_image*, %struct.opj_image*) #3

; Function Attrs: nounwind uwtable
define internal i32 @opj_j2k_allocate_tile_element_cstr_index(%struct.opj_j2k* %p_j2k) #0 {
entry:
  %retval = alloca i32, align 4
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %it_tile = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %0 = bitcast i32* %it_tile to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  store i32 0, i32* %it_tile, align 4, !tbaa !5
  %1 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %1, i32 0, i32 4
  %tw = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp, i32 0, i32 6
  %2 = load i32, i32* %tw, align 4, !tbaa !176
  %3 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp1 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %3, i32 0, i32 4
  %th = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp1, i32 0, i32 7
  %4 = load i32, i32* %th, align 4, !tbaa !177
  %mul = mul i32 %2, %4
  %5 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cstr_index = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %5, i32 0, i32 7
  %6 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index, align 8, !tbaa !29
  %nb_of_tiles = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %6, i32 0, i32 6
  store i32 %mul, i32* %nb_of_tiles, align 4, !tbaa !178
  %7 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cstr_index2 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %7, i32 0, i32 7
  %8 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index2, align 8, !tbaa !29
  %nb_of_tiles3 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %8, i32 0, i32 6
  %9 = load i32, i32* %nb_of_tiles3, align 4, !tbaa !178
  %conv = zext i32 %9 to i64
  %cmp = icmp ne i64 %conv, 0
  br i1 %cmp, label %land.lhs.true, label %cond.false

land.lhs.true:                                    ; preds = %entry
  %10 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cstr_index5 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %10, i32 0, i32 7
  %11 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index5, align 8, !tbaa !29
  %nb_of_tiles6 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %11, i32 0, i32 6
  %12 = load i32, i32* %nb_of_tiles6, align 4, !tbaa !178
  %conv7 = zext i32 %12 to i64
  %cmp8 = icmp uge i64 %conv7, 329406144173384845
  br i1 %cmp8, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true, %entry
  %13 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cstr_index10 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %13, i32 0, i32 7
  %14 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index10, align 8, !tbaa !29
  %nb_of_tiles11 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %14, i32 0, i32 6
  %15 = load i32, i32* %nb_of_tiles11, align 4, !tbaa !178
  %conv12 = zext i32 %15 to i64
  %call = call noalias i8* @calloc(i64 %conv12, i64 56) #9
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ null, %cond.true ], [ %call, %cond.false ]
  %16 = bitcast i8* %cond to %struct.opj_tile_index*
  %17 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cstr_index13 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %17, i32 0, i32 7
  %18 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index13, align 8, !tbaa !29
  %tile_index = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %18, i32 0, i32 7
  store %struct.opj_tile_index* %16, %struct.opj_tile_index** %tile_index, align 8, !tbaa !30
  %19 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cstr_index14 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %19, i32 0, i32 7
  %20 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index14, align 8, !tbaa !29
  %tile_index15 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %20, i32 0, i32 7
  %21 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index15, align 8, !tbaa !30
  %tobool = icmp ne %struct.opj_tile_index* %21, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %cond.end
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %cond.end
  store i32 0, i32* %it_tile, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %22 = load i32, i32* %it_tile, align 4, !tbaa !5
  %23 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cstr_index16 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %23, i32 0, i32 7
  %24 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index16, align 8, !tbaa !29
  %nb_of_tiles17 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %24, i32 0, i32 6
  %25 = load i32, i32* %nb_of_tiles17, align 4, !tbaa !178
  %cmp18 = icmp ult i32 %22, %25
  br i1 %cmp18, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %26 = load i32, i32* %it_tile, align 4, !tbaa !5
  %idxprom = zext i32 %26 to i64
  %27 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cstr_index20 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %27, i32 0, i32 7
  %28 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index20, align 8, !tbaa !29
  %tile_index21 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %28, i32 0, i32 7
  %29 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index21, align 8, !tbaa !30
  %arrayidx = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %29, i64 %idxprom
  %maxmarknum = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx, i32 0, i32 7
  store i32 100, i32* %maxmarknum, align 4, !tbaa !179
  %30 = load i32, i32* %it_tile, align 4, !tbaa !5
  %idxprom22 = zext i32 %30 to i64
  %31 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cstr_index23 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %31, i32 0, i32 7
  %32 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index23, align 8, !tbaa !29
  %tile_index24 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %32, i32 0, i32 7
  %33 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index24, align 8, !tbaa !30
  %arrayidx25 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %33, i64 %idxprom22
  %marknum = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx25, i32 0, i32 5
  store i32 0, i32* %marknum, align 4, !tbaa !180
  %34 = load i32, i32* %it_tile, align 4, !tbaa !5
  %idxprom26 = zext i32 %34 to i64
  %35 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cstr_index27 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %35, i32 0, i32 7
  %36 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index27, align 8, !tbaa !29
  %tile_index28 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %36, i32 0, i32 7
  %37 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index28, align 8, !tbaa !30
  %arrayidx29 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %37, i64 %idxprom26
  %maxmarknum30 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx29, i32 0, i32 7
  %38 = load i32, i32* %maxmarknum30, align 4, !tbaa !179
  %conv31 = zext i32 %38 to i64
  %cmp32 = icmp ne i64 %conv31, 0
  br i1 %cmp32, label %land.lhs.true.34, label %cond.false.44

land.lhs.true.34:                                 ; preds = %for.body
  %39 = load i32, i32* %it_tile, align 4, !tbaa !5
  %idxprom35 = zext i32 %39 to i64
  %40 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cstr_index36 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %40, i32 0, i32 7
  %41 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index36, align 8, !tbaa !29
  %tile_index37 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %41, i32 0, i32 7
  %42 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index37, align 8, !tbaa !30
  %arrayidx38 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %42, i64 %idxprom35
  %maxmarknum39 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx38, i32 0, i32 7
  %43 = load i32, i32* %maxmarknum39, align 4, !tbaa !179
  %conv40 = zext i32 %43 to i64
  %cmp41 = icmp uge i64 %conv40, 768614336404564640
  br i1 %cmp41, label %cond.true.43, label %cond.false.44

cond.true.43:                                     ; preds = %land.lhs.true.34
  br label %cond.end.52

cond.false.44:                                    ; preds = %land.lhs.true.34, %for.body
  %44 = load i32, i32* %it_tile, align 4, !tbaa !5
  %idxprom45 = zext i32 %44 to i64
  %45 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cstr_index46 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %45, i32 0, i32 7
  %46 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index46, align 8, !tbaa !29
  %tile_index47 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %46, i32 0, i32 7
  %47 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index47, align 8, !tbaa !30
  %arrayidx48 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %47, i64 %idxprom45
  %maxmarknum49 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx48, i32 0, i32 7
  %48 = load i32, i32* %maxmarknum49, align 4, !tbaa !179
  %conv50 = zext i32 %48 to i64
  %call51 = call noalias i8* @calloc(i64 %conv50, i64 24) #9
  br label %cond.end.52

cond.end.52:                                      ; preds = %cond.false.44, %cond.true.43
  %cond53 = phi i8* [ null, %cond.true.43 ], [ %call51, %cond.false.44 ]
  %49 = bitcast i8* %cond53 to %struct.opj_marker_info*
  %50 = load i32, i32* %it_tile, align 4, !tbaa !5
  %idxprom54 = zext i32 %50 to i64
  %51 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cstr_index55 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %51, i32 0, i32 7
  %52 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index55, align 8, !tbaa !29
  %tile_index56 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %52, i32 0, i32 7
  %53 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index56, align 8, !tbaa !30
  %arrayidx57 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %53, i64 %idxprom54
  %marker = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx57, i32 0, i32 6
  store %struct.opj_marker_info* %49, %struct.opj_marker_info** %marker, align 8, !tbaa !181
  %54 = load i32, i32* %it_tile, align 4, !tbaa !5
  %idxprom58 = zext i32 %54 to i64
  %55 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cstr_index59 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %55, i32 0, i32 7
  %56 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index59, align 8, !tbaa !29
  %tile_index60 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %56, i32 0, i32 7
  %57 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index60, align 8, !tbaa !30
  %arrayidx61 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %57, i64 %idxprom58
  %marker62 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx61, i32 0, i32 6
  %58 = load %struct.opj_marker_info*, %struct.opj_marker_info** %marker62, align 8, !tbaa !181
  %tobool63 = icmp ne %struct.opj_marker_info* %58, null
  br i1 %tobool63, label %if.end.65, label %if.then.64

if.then.64:                                       ; preds = %cond.end.52
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.65:                                        ; preds = %cond.end.52
  br label %for.inc

for.inc:                                          ; preds = %if.end.65
  %59 = load i32, i32* %it_tile, align 4, !tbaa !5
  %inc = add i32 %59, 1
  store i32 %inc, i32* %it_tile, align 4, !tbaa !5
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %for.end, %if.then.64, %if.then
  %60 = bitcast i32* %it_tile to i8*
  call void @llvm.lifetime.end(i64 4, i8* %60) #1
  %61 = load i32, i32* %retval
  ret i32 %61
}

; Function Attrs: nounwind
declare i8* @realloc(i8*, i64) #2

; Function Attrs: nounwind uwtable
define internal void @opj_j2k_tcp_destroy(%struct.opj_tcp* %p_tcp) #0 {
entry:
  %p_tcp.addr = alloca %struct.opj_tcp*, align 8
  %l_mct_data = alloca %struct.opj_mct_data*, align 8
  %i = alloca i32, align 4
  store %struct.opj_tcp* %p_tcp, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %0 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %cmp = icmp eq %struct.opj_tcp* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %return

if.end:                                           ; preds = %entry
  %1 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %ppt_buffer = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %1, i32 0, i32 9
  %2 = load i8*, i8** %ppt_buffer, align 8, !tbaa !86
  %cmp1 = icmp ne i8* %2, null
  br i1 %cmp1, label %if.then.2, label %if.end.5

if.then.2:                                        ; preds = %if.end
  %3 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %ppt_buffer3 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %3, i32 0, i32 9
  %4 = load i8*, i8** %ppt_buffer3, align 8, !tbaa !86
  call void @free(i8* %4) #9
  %5 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %ppt_buffer4 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %5, i32 0, i32 9
  store i8* null, i8** %ppt_buffer4, align 8, !tbaa !86
  br label %if.end.5

if.end.5:                                         ; preds = %if.then.2, %if.end
  %6 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %tccps = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %6, i32 0, i32 13
  %7 = load %struct.opj_tccp*, %struct.opj_tccp** %tccps, align 8, !tbaa !48
  %cmp6 = icmp ne %struct.opj_tccp* %7, null
  br i1 %cmp6, label %if.then.7, label %if.end.10

if.then.7:                                        ; preds = %if.end.5
  %8 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %tccps8 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %8, i32 0, i32 13
  %9 = load %struct.opj_tccp*, %struct.opj_tccp** %tccps8, align 8, !tbaa !48
  %10 = bitcast %struct.opj_tccp* %9 to i8*
  call void @free(i8* %10) #9
  %11 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %tccps9 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %11, i32 0, i32 13
  store %struct.opj_tccp* null, %struct.opj_tccp** %tccps9, align 8, !tbaa !48
  br label %if.end.10

if.end.10:                                        ; preds = %if.then.7, %if.end.5
  %12 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %m_mct_coding_matrix = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %12, i32 0, i32 19
  %13 = load float*, float** %m_mct_coding_matrix, align 8, !tbaa !159
  %cmp11 = icmp ne float* %13, null
  br i1 %cmp11, label %if.then.12, label %if.end.15

if.then.12:                                       ; preds = %if.end.10
  %14 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %m_mct_coding_matrix13 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %14, i32 0, i32 19
  %15 = load float*, float** %m_mct_coding_matrix13, align 8, !tbaa !159
  %16 = bitcast float* %15 to i8*
  call void @free(i8* %16) #9
  %17 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %m_mct_coding_matrix14 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %17, i32 0, i32 19
  store float* null, float** %m_mct_coding_matrix14, align 8, !tbaa !159
  br label %if.end.15

if.end.15:                                        ; preds = %if.then.12, %if.end.10
  %18 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %m_mct_decoding_matrix = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %18, i32 0, i32 18
  %19 = load float*, float** %m_mct_decoding_matrix, align 8, !tbaa !102
  %cmp16 = icmp ne float* %19, null
  br i1 %cmp16, label %if.then.17, label %if.end.20

if.then.17:                                       ; preds = %if.end.15
  %20 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %m_mct_decoding_matrix18 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %20, i32 0, i32 18
  %21 = load float*, float** %m_mct_decoding_matrix18, align 8, !tbaa !102
  %22 = bitcast float* %21 to i8*
  call void @free(i8* %22) #9
  %23 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %m_mct_decoding_matrix19 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %23, i32 0, i32 18
  store float* null, float** %m_mct_decoding_matrix19, align 8, !tbaa !102
  br label %if.end.20

if.end.20:                                        ; preds = %if.then.17, %if.end.15
  %24 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %m_mcc_records = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %24, i32 0, i32 23
  %25 = load %struct.opj_simple_mcc_decorrelation_data*, %struct.opj_simple_mcc_decorrelation_data** %m_mcc_records, align 8, !tbaa !76
  %tobool = icmp ne %struct.opj_simple_mcc_decorrelation_data* %25, null
  br i1 %tobool, label %if.then.21, label %if.end.24

if.then.21:                                       ; preds = %if.end.20
  %26 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %m_mcc_records22 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %26, i32 0, i32 23
  %27 = load %struct.opj_simple_mcc_decorrelation_data*, %struct.opj_simple_mcc_decorrelation_data** %m_mcc_records22, align 8, !tbaa !76
  %28 = bitcast %struct.opj_simple_mcc_decorrelation_data* %27 to i8*
  call void @free(i8* %28) #9
  %29 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %m_mcc_records23 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %29, i32 0, i32 23
  store %struct.opj_simple_mcc_decorrelation_data* null, %struct.opj_simple_mcc_decorrelation_data** %m_mcc_records23, align 8, !tbaa !76
  %30 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %m_nb_max_mcc_records = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %30, i32 0, i32 25
  store i32 0, i32* %m_nb_max_mcc_records, align 4, !tbaa !77
  %31 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %m_nb_mcc_records = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %31, i32 0, i32 24
  store i32 0, i32* %m_nb_mcc_records, align 4, !tbaa !96
  br label %if.end.24

if.end.24:                                        ; preds = %if.then.21, %if.end.20
  %32 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %m_mct_records = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %32, i32 0, i32 20
  %33 = load %struct.opj_mct_data*, %struct.opj_mct_data** %m_mct_records, align 8, !tbaa !74
  %tobool25 = icmp ne %struct.opj_mct_data* %33, null
  br i1 %tobool25, label %if.then.26, label %if.end.36

if.then.26:                                       ; preds = %if.end.24
  %34 = bitcast %struct.opj_mct_data** %l_mct_data to i8*
  call void @llvm.lifetime.start(i64 8, i8* %34) #1
  %35 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %m_mct_records27 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %35, i32 0, i32 20
  %36 = load %struct.opj_mct_data*, %struct.opj_mct_data** %m_mct_records27, align 8, !tbaa !74
  store %struct.opj_mct_data* %36, %struct.opj_mct_data** %l_mct_data, align 8, !tbaa !1
  %37 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %37) #1
  store i32 0, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then.26
  %38 = load i32, i32* %i, align 4, !tbaa !5
  %39 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %m_nb_mct_records = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %39, i32 0, i32 21
  %40 = load i32, i32* %m_nb_mct_records, align 4, !tbaa !89
  %cmp28 = icmp ult i32 %38, %40
  br i1 %cmp28, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %41 = load %struct.opj_mct_data*, %struct.opj_mct_data** %l_mct_data, align 8, !tbaa !1
  %m_data = getelementptr inbounds %struct.opj_mct_data, %struct.opj_mct_data* %41, i32 0, i32 3
  %42 = load i8*, i8** %m_data, align 8, !tbaa !92
  %tobool29 = icmp ne i8* %42, null
  br i1 %tobool29, label %if.then.30, label %if.end.33

if.then.30:                                       ; preds = %for.body
  %43 = load %struct.opj_mct_data*, %struct.opj_mct_data** %l_mct_data, align 8, !tbaa !1
  %m_data31 = getelementptr inbounds %struct.opj_mct_data, %struct.opj_mct_data* %43, i32 0, i32 3
  %44 = load i8*, i8** %m_data31, align 8, !tbaa !92
  call void @free(i8* %44) #9
  %45 = load %struct.opj_mct_data*, %struct.opj_mct_data** %l_mct_data, align 8, !tbaa !1
  %m_data32 = getelementptr inbounds %struct.opj_mct_data, %struct.opj_mct_data* %45, i32 0, i32 3
  store i8* null, i8** %m_data32, align 8, !tbaa !92
  br label %if.end.33

if.end.33:                                        ; preds = %if.then.30, %for.body
  %46 = load %struct.opj_mct_data*, %struct.opj_mct_data** %l_mct_data, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds %struct.opj_mct_data, %struct.opj_mct_data* %46, i32 1
  store %struct.opj_mct_data* %incdec.ptr, %struct.opj_mct_data** %l_mct_data, align 8, !tbaa !1
  br label %for.inc

for.inc:                                          ; preds = %if.end.33
  %47 = load i32, i32* %i, align 4, !tbaa !5
  %inc = add i32 %47, 1
  store i32 %inc, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %48 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %m_mct_records34 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %48, i32 0, i32 20
  %49 = load %struct.opj_mct_data*, %struct.opj_mct_data** %m_mct_records34, align 8, !tbaa !74
  %50 = bitcast %struct.opj_mct_data* %49 to i8*
  call void @free(i8* %50) #9
  %51 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %m_mct_records35 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %51, i32 0, i32 20
  store %struct.opj_mct_data* null, %struct.opj_mct_data** %m_mct_records35, align 8, !tbaa !74
  %52 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %52) #1
  %53 = bitcast %struct.opj_mct_data** %l_mct_data to i8*
  call void @llvm.lifetime.end(i64 8, i8* %53) #1
  br label %if.end.36

if.end.36:                                        ; preds = %for.end, %if.end.24
  %54 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %mct_norms = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %54, i32 0, i32 17
  %55 = load double*, double** %mct_norms, align 8, !tbaa !160
  %cmp37 = icmp ne double* %55, null
  br i1 %cmp37, label %if.then.38, label %if.end.41

if.then.38:                                       ; preds = %if.end.36
  %56 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %mct_norms39 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %56, i32 0, i32 17
  %57 = load double*, double** %mct_norms39, align 8, !tbaa !160
  %58 = bitcast double* %57 to i8*
  call void @free(i8* %58) #9
  %59 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %mct_norms40 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %59, i32 0, i32 17
  store double* null, double** %mct_norms40, align 8, !tbaa !160
  br label %if.end.41

if.end.41:                                        ; preds = %if.then.38, %if.end.36
  %60 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  call void @opj_j2k_tcp_data_destroy(%struct.opj_tcp* %60) #7
  br label %return

return:                                           ; preds = %if.end.41, %if.then
  ret void
}

declare void @opj_tcd_destroy(%struct.opj_tcd*) #3

; Function Attrs: nounwind uwtable
define internal void @opj_j2k_cp_destroy(%struct.opj_cp* %p_cp) #0 {
entry:
  %p_cp.addr = alloca %struct.opj_cp*, align 8
  %l_nb_tiles = alloca i32, align 4
  %l_current_tile = alloca %struct.opj_tcp*, align 8
  %i = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.opj_cp* %p_cp, %struct.opj_cp** %p_cp.addr, align 8, !tbaa !1
  %0 = bitcast i32* %l_nb_tiles to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast %struct.opj_tcp** %l_current_tile to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #1
  store %struct.opj_tcp* null, %struct.opj_tcp** %l_current_tile, align 8, !tbaa !1
  %2 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #1
  %3 = load %struct.opj_cp*, %struct.opj_cp** %p_cp.addr, align 8, !tbaa !1
  %cmp = icmp eq %struct.opj_cp* %3, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %4 = load %struct.opj_cp*, %struct.opj_cp** %p_cp.addr, align 8, !tbaa !1
  %tcps = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %4, i32 0, i32 17
  %5 = load %struct.opj_tcp*, %struct.opj_tcp** %tcps, align 8, !tbaa !16
  %cmp1 = icmp ne %struct.opj_tcp* %5, null
  br i1 %cmp1, label %if.then.2, label %if.end.7

if.then.2:                                        ; preds = %if.end
  %6 = load %struct.opj_cp*, %struct.opj_cp** %p_cp.addr, align 8, !tbaa !1
  %tcps3 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %6, i32 0, i32 17
  %7 = load %struct.opj_tcp*, %struct.opj_tcp** %tcps3, align 8, !tbaa !16
  store %struct.opj_tcp* %7, %struct.opj_tcp** %l_current_tile, align 8, !tbaa !1
  %8 = load %struct.opj_cp*, %struct.opj_cp** %p_cp.addr, align 8, !tbaa !1
  %th = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %8, i32 0, i32 7
  %9 = load i32, i32* %th, align 4, !tbaa !15
  %10 = load %struct.opj_cp*, %struct.opj_cp** %p_cp.addr, align 8, !tbaa !1
  %tw = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %10, i32 0, i32 6
  %11 = load i32, i32* %tw, align 4, !tbaa !14
  %mul = mul i32 %9, %11
  store i32 %mul, i32* %l_nb_tiles, align 4, !tbaa !5
  store i32 0, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then.2
  %12 = load i32, i32* %i, align 4, !tbaa !5
  %13 = load i32, i32* %l_nb_tiles, align 4, !tbaa !5
  %cmp4 = icmp ult i32 %12, %13
  br i1 %cmp4, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %14 = load %struct.opj_tcp*, %struct.opj_tcp** %l_current_tile, align 8, !tbaa !1
  call void @opj_j2k_tcp_destroy(%struct.opj_tcp* %14) #7
  %15 = load %struct.opj_tcp*, %struct.opj_tcp** %l_current_tile, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %15, i32 1
  store %struct.opj_tcp* %incdec.ptr, %struct.opj_tcp** %l_current_tile, align 8, !tbaa !1
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %16 = load i32, i32* %i, align 4, !tbaa !5
  %inc = add i32 %16, 1
  store i32 %inc, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %17 = load %struct.opj_cp*, %struct.opj_cp** %p_cp.addr, align 8, !tbaa !1
  %tcps5 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %17, i32 0, i32 17
  %18 = load %struct.opj_tcp*, %struct.opj_tcp** %tcps5, align 8, !tbaa !16
  %19 = bitcast %struct.opj_tcp* %18 to i8*
  call void @free(i8* %19) #9
  %20 = load %struct.opj_cp*, %struct.opj_cp** %p_cp.addr, align 8, !tbaa !1
  %tcps6 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %20, i32 0, i32 17
  store %struct.opj_tcp* null, %struct.opj_tcp** %tcps6, align 8, !tbaa !16
  br label %if.end.7

if.end.7:                                         ; preds = %for.end, %if.end
  %21 = load %struct.opj_cp*, %struct.opj_cp** %p_cp.addr, align 8, !tbaa !1
  %ppm_buffer = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %21, i32 0, i32 12
  %22 = load i8*, i8** %ppm_buffer, align 8, !tbaa !82
  call void @free(i8* %22) #9
  %23 = load %struct.opj_cp*, %struct.opj_cp** %p_cp.addr, align 8, !tbaa !1
  %ppm_buffer8 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %23, i32 0, i32 12
  store i8* null, i8** %ppm_buffer8, align 8, !tbaa !82
  %24 = load %struct.opj_cp*, %struct.opj_cp** %p_cp.addr, align 8, !tbaa !1
  %ppm_data = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %24, i32 0, i32 8
  store i8* null, i8** %ppm_data, align 8, !tbaa !81
  %25 = load %struct.opj_cp*, %struct.opj_cp** %p_cp.addr, align 8, !tbaa !1
  %comment = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %25, i32 0, i32 5
  %26 = load i8*, i8** %comment, align 8, !tbaa !142
  call void @free(i8* %26) #9
  %27 = load %struct.opj_cp*, %struct.opj_cp** %p_cp.addr, align 8, !tbaa !1
  %comment9 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %27, i32 0, i32 5
  store i8* null, i8** %comment9, align 8, !tbaa !142
  %28 = load %struct.opj_cp*, %struct.opj_cp** %p_cp.addr, align 8, !tbaa !1
  %m_is_decoder = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %28, i32 0, i32 19
  %bf.load = load i8, i8* %m_is_decoder, align 8
  %bf.lshr = lshr i8 %bf.load, 1
  %bf.clear = and i8 %bf.lshr, 1
  %bf.cast = zext i8 %bf.clear to i32
  %tobool = icmp ne i32 %bf.cast, 0
  br i1 %tobool, label %if.end.14, label %if.then.10

if.then.10:                                       ; preds = %if.end.7
  %29 = load %struct.opj_cp*, %struct.opj_cp** %p_cp.addr, align 8, !tbaa !1
  %m_specific_param = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %29, i32 0, i32 18
  %m_enc = bitcast %union.anon.0* %m_specific_param to %struct.opj_encoding_param*
  %m_matrice = getelementptr inbounds %struct.opj_encoding_param, %struct.opj_encoding_param* %m_enc, i32 0, i32 3
  %30 = load i32*, i32** %m_matrice, align 8, !tbaa !136
  %31 = bitcast i32* %30 to i8*
  call void @free(i8* %31) #9
  %32 = load %struct.opj_cp*, %struct.opj_cp** %p_cp.addr, align 8, !tbaa !1
  %m_specific_param11 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %32, i32 0, i32 18
  %m_enc12 = bitcast %union.anon.0* %m_specific_param11 to %struct.opj_encoding_param*
  %m_matrice13 = getelementptr inbounds %struct.opj_encoding_param, %struct.opj_encoding_param* %m_enc12, i32 0, i32 3
  store i32* null, i32** %m_matrice13, align 8, !tbaa !136
  br label %if.end.14

if.end.14:                                        ; preds = %if.then.10, %if.end.7
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.14, %if.then
  %33 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %33) #1
  %34 = bitcast %struct.opj_tcp** %l_current_tile to i8*
  call void @llvm.lifetime.end(i64 8, i8* %34) #1
  %35 = bitcast i32* %l_nb_tiles to i8*
  call void @llvm.lifetime.end(i64 4, i8* %35) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup, %cleanup
  ret void

unreachable:                                      ; preds = %cleanup
  unreachable
}

declare void @opj_procedure_list_destroy(%struct.opj_procedure_list*) #3

; Function Attrs: nounwind uwtable
define void @j2k_destroy_cstr_index(%struct.opj_codestream_index* %p_cstr_ind) #0 {
entry:
  %p_cstr_ind.addr = alloca %struct.opj_codestream_index*, align 8
  %it_tile = alloca i32, align 4
  store %struct.opj_codestream_index* %p_cstr_ind, %struct.opj_codestream_index** %p_cstr_ind.addr, align 8, !tbaa !1
  %0 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %p_cstr_ind.addr, align 8, !tbaa !1
  %tobool = icmp ne %struct.opj_codestream_index* %0, null
  br i1 %tobool, label %if.then, label %if.end.51

if.then:                                          ; preds = %entry
  %1 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %p_cstr_ind.addr, align 8, !tbaa !1
  %marker = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %1, i32 0, i32 4
  %2 = load %struct.opj_marker_info*, %struct.opj_marker_info** %marker, align 8, !tbaa !182
  %tobool1 = icmp ne %struct.opj_marker_info* %2, null
  br i1 %tobool1, label %if.then.2, label %if.end

if.then.2:                                        ; preds = %if.then
  %3 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %p_cstr_ind.addr, align 8, !tbaa !1
  %marker3 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %3, i32 0, i32 4
  %4 = load %struct.opj_marker_info*, %struct.opj_marker_info** %marker3, align 8, !tbaa !182
  %5 = bitcast %struct.opj_marker_info* %4 to i8*
  call void @free(i8* %5) #9
  %6 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %p_cstr_ind.addr, align 8, !tbaa !1
  %marker4 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %6, i32 0, i32 4
  store %struct.opj_marker_info* null, %struct.opj_marker_info** %marker4, align 8, !tbaa !182
  br label %if.end

if.end:                                           ; preds = %if.then.2, %if.then
  %7 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %p_cstr_ind.addr, align 8, !tbaa !1
  %tile_index = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %7, i32 0, i32 7
  %8 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index, align 8, !tbaa !30
  %tobool5 = icmp ne %struct.opj_tile_index* %8, null
  br i1 %tobool5, label %if.then.6, label %if.end.50

if.then.6:                                        ; preds = %if.end
  %9 = bitcast i32* %it_tile to i8*
  call void @llvm.lifetime.start(i64 4, i8* %9) #1
  store i32 0, i32* %it_tile, align 4, !tbaa !5
  store i32 0, i32* %it_tile, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then.6
  %10 = load i32, i32* %it_tile, align 4, !tbaa !5
  %11 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %p_cstr_ind.addr, align 8, !tbaa !1
  %nb_of_tiles = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %11, i32 0, i32 6
  %12 = load i32, i32* %nb_of_tiles, align 4, !tbaa !178
  %cmp = icmp ult i32 %10, %12
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %13 = load i32, i32* %it_tile, align 4, !tbaa !5
  %idxprom = zext i32 %13 to i64
  %14 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %p_cstr_ind.addr, align 8, !tbaa !1
  %tile_index7 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %14, i32 0, i32 7
  %15 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index7, align 8, !tbaa !30
  %arrayidx = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %15, i64 %idxprom
  %packet_index = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx, i32 0, i32 9
  %16 = load %struct.opj_packet_info*, %struct.opj_packet_info** %packet_index, align 8, !tbaa !183
  %tobool8 = icmp ne %struct.opj_packet_info* %16, null
  br i1 %tobool8, label %if.then.9, label %if.end.18

if.then.9:                                        ; preds = %for.body
  %17 = load i32, i32* %it_tile, align 4, !tbaa !5
  %idxprom10 = zext i32 %17 to i64
  %18 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %p_cstr_ind.addr, align 8, !tbaa !1
  %tile_index11 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %18, i32 0, i32 7
  %19 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index11, align 8, !tbaa !30
  %arrayidx12 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %19, i64 %idxprom10
  %packet_index13 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx12, i32 0, i32 9
  %20 = load %struct.opj_packet_info*, %struct.opj_packet_info** %packet_index13, align 8, !tbaa !183
  %21 = bitcast %struct.opj_packet_info* %20 to i8*
  call void @free(i8* %21) #9
  %22 = load i32, i32* %it_tile, align 4, !tbaa !5
  %idxprom14 = zext i32 %22 to i64
  %23 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %p_cstr_ind.addr, align 8, !tbaa !1
  %tile_index15 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %23, i32 0, i32 7
  %24 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index15, align 8, !tbaa !30
  %arrayidx16 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %24, i64 %idxprom14
  %packet_index17 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx16, i32 0, i32 9
  store %struct.opj_packet_info* null, %struct.opj_packet_info** %packet_index17, align 8, !tbaa !183
  br label %if.end.18

if.end.18:                                        ; preds = %if.then.9, %for.body
  %25 = load i32, i32* %it_tile, align 4, !tbaa !5
  %idxprom19 = zext i32 %25 to i64
  %26 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %p_cstr_ind.addr, align 8, !tbaa !1
  %tile_index20 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %26, i32 0, i32 7
  %27 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index20, align 8, !tbaa !30
  %arrayidx21 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %27, i64 %idxprom19
  %tp_index = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx21, i32 0, i32 4
  %28 = load %struct.opj_tp_index*, %struct.opj_tp_index** %tp_index, align 8, !tbaa !37
  %tobool22 = icmp ne %struct.opj_tp_index* %28, null
  br i1 %tobool22, label %if.then.23, label %if.end.32

if.then.23:                                       ; preds = %if.end.18
  %29 = load i32, i32* %it_tile, align 4, !tbaa !5
  %idxprom24 = zext i32 %29 to i64
  %30 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %p_cstr_ind.addr, align 8, !tbaa !1
  %tile_index25 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %30, i32 0, i32 7
  %31 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index25, align 8, !tbaa !30
  %arrayidx26 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %31, i64 %idxprom24
  %tp_index27 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx26, i32 0, i32 4
  %32 = load %struct.opj_tp_index*, %struct.opj_tp_index** %tp_index27, align 8, !tbaa !37
  %33 = bitcast %struct.opj_tp_index* %32 to i8*
  call void @free(i8* %33) #9
  %34 = load i32, i32* %it_tile, align 4, !tbaa !5
  %idxprom28 = zext i32 %34 to i64
  %35 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %p_cstr_ind.addr, align 8, !tbaa !1
  %tile_index29 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %35, i32 0, i32 7
  %36 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index29, align 8, !tbaa !30
  %arrayidx30 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %36, i64 %idxprom28
  %tp_index31 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx30, i32 0, i32 4
  store %struct.opj_tp_index* null, %struct.opj_tp_index** %tp_index31, align 8, !tbaa !37
  br label %if.end.32

if.end.32:                                        ; preds = %if.then.23, %if.end.18
  %37 = load i32, i32* %it_tile, align 4, !tbaa !5
  %idxprom33 = zext i32 %37 to i64
  %38 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %p_cstr_ind.addr, align 8, !tbaa !1
  %tile_index34 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %38, i32 0, i32 7
  %39 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index34, align 8, !tbaa !30
  %arrayidx35 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %39, i64 %idxprom33
  %marker36 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx35, i32 0, i32 6
  %40 = load %struct.opj_marker_info*, %struct.opj_marker_info** %marker36, align 8, !tbaa !181
  %tobool37 = icmp ne %struct.opj_marker_info* %40, null
  br i1 %tobool37, label %if.then.38, label %if.end.47

if.then.38:                                       ; preds = %if.end.32
  %41 = load i32, i32* %it_tile, align 4, !tbaa !5
  %idxprom39 = zext i32 %41 to i64
  %42 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %p_cstr_ind.addr, align 8, !tbaa !1
  %tile_index40 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %42, i32 0, i32 7
  %43 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index40, align 8, !tbaa !30
  %arrayidx41 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %43, i64 %idxprom39
  %marker42 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx41, i32 0, i32 6
  %44 = load %struct.opj_marker_info*, %struct.opj_marker_info** %marker42, align 8, !tbaa !181
  %45 = bitcast %struct.opj_marker_info* %44 to i8*
  call void @free(i8* %45) #9
  %46 = load i32, i32* %it_tile, align 4, !tbaa !5
  %idxprom43 = zext i32 %46 to i64
  %47 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %p_cstr_ind.addr, align 8, !tbaa !1
  %tile_index44 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %47, i32 0, i32 7
  %48 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index44, align 8, !tbaa !30
  %arrayidx45 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %48, i64 %idxprom43
  %marker46 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx45, i32 0, i32 6
  store %struct.opj_marker_info* null, %struct.opj_marker_info** %marker46, align 8, !tbaa !181
  br label %if.end.47

if.end.47:                                        ; preds = %if.then.38, %if.end.32
  br label %for.inc

for.inc:                                          ; preds = %if.end.47
  %49 = load i32, i32* %it_tile, align 4, !tbaa !5
  %inc = add i32 %49, 1
  store i32 %inc, i32* %it_tile, align 4, !tbaa !5
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %50 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %p_cstr_ind.addr, align 8, !tbaa !1
  %tile_index48 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %50, i32 0, i32 7
  %51 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index48, align 8, !tbaa !30
  %52 = bitcast %struct.opj_tile_index* %51 to i8*
  call void @free(i8* %52) #9
  %53 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %p_cstr_ind.addr, align 8, !tbaa !1
  %tile_index49 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %53, i32 0, i32 7
  store %struct.opj_tile_index* null, %struct.opj_tile_index** %tile_index49, align 8, !tbaa !30
  %54 = bitcast i32* %it_tile to i8*
  call void @llvm.lifetime.end(i64 4, i8* %54) #1
  br label %if.end.50

if.end.50:                                        ; preds = %for.end, %if.end
  %55 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %p_cstr_ind.addr, align 8, !tbaa !1
  %56 = bitcast %struct.opj_codestream_index* %55 to i8*
  call void @free(i8* %56) #9
  br label %if.end.51

if.end.51:                                        ; preds = %if.end.50, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @opj_j2k_read_tile_header(%struct.opj_j2k* %p_j2k, i32* %p_tile_index, i32* %p_data_size, i32* %p_tile_x0, i32* %p_tile_y0, i32* %p_tile_x1, i32* %p_tile_y1, i32* %p_nb_comps, i32* %p_go_on, %struct.opj_stream_private* %p_stream, %struct.opj_event_mgr* %p_manager) #0 {
entry:
  %retval = alloca i32, align 4
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %p_tile_index.addr = alloca i32*, align 8
  %p_data_size.addr = alloca i32*, align 8
  %p_tile_x0.addr = alloca i32*, align 8
  %p_tile_y0.addr = alloca i32*, align 8
  %p_tile_x1.addr = alloca i32*, align 8
  %p_tile_y1.addr = alloca i32*, align 8
  %p_nb_comps.addr = alloca i32*, align 8
  %p_go_on.addr = alloca i32*, align 8
  %p_stream.addr = alloca %struct.opj_stream_private*, align 8
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  %l_current_marker = alloca i32, align 4
  %l_marker_size = alloca i32, align 4
  %l_marker_handler = alloca %struct.opj_dec_memory_marker_handler*, align 8
  %l_tcp = alloca %struct.opj_tcp*, align 8
  %l_nb_tiles = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %new_header_data = alloca i8*, align 8
  %sot_pos = alloca i32, align 4
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store i32* %p_tile_index, i32** %p_tile_index.addr, align 8, !tbaa !1
  store i32* %p_data_size, i32** %p_data_size.addr, align 8, !tbaa !1
  store i32* %p_tile_x0, i32** %p_tile_x0.addr, align 8, !tbaa !1
  store i32* %p_tile_y0, i32** %p_tile_y0.addr, align 8, !tbaa !1
  store i32* %p_tile_x1, i32** %p_tile_x1.addr, align 8, !tbaa !1
  store i32* %p_tile_y1, i32** %p_tile_y1.addr, align 8, !tbaa !1
  store i32* %p_nb_comps, i32** %p_nb_comps.addr, align 8, !tbaa !1
  store i32* %p_go_on, i32** %p_go_on.addr, align 8, !tbaa !1
  store %struct.opj_stream_private* %p_stream, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %0 = bitcast i32* %l_current_marker to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  store i32 65424, i32* %l_current_marker, align 4, !tbaa !5
  %1 = bitcast i32* %l_marker_size to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = bitcast %struct.opj_dec_memory_marker_handler** %l_marker_handler to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #1
  store %struct.opj_dec_memory_marker_handler* null, %struct.opj_dec_memory_marker_handler** %l_marker_handler, align 8, !tbaa !1
  %3 = bitcast %struct.opj_tcp** %l_tcp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #1
  store %struct.opj_tcp* null, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %4 = bitcast i32* %l_nb_tiles to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #1
  %5 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %cmp = icmp ne %struct.opj_stream_private* %5, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 7048, i8* getelementptr inbounds ([196 x i8], [196 x i8]* @__PRETTY_FUNCTION__.opj_j2k_read_tile_header, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %6, %cond.true
  %7 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cmp1 = icmp ne %struct.opj_j2k* %7, null
  br i1 %cmp1, label %cond.true.2, label %cond.false.3

cond.true.2:                                      ; preds = %cond.end
  br label %cond.end.4

cond.false.3:                                     ; preds = %cond.end
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 7049, i8* getelementptr inbounds ([196 x i8], [196 x i8]* @__PRETTY_FUNCTION__.opj_j2k_read_tile_header, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.4

cond.end.4:                                       ; preds = %8, %cond.true.2
  %9 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %cmp5 = icmp ne %struct.opj_event_mgr* %9, null
  br i1 %cmp5, label %cond.true.6, label %cond.false.7

cond.true.6:                                      ; preds = %cond.end.4
  br label %cond.end.8

cond.false.7:                                     ; preds = %cond.end.4
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 7050, i8* getelementptr inbounds ([196 x i8], [196 x i8]* @__PRETTY_FUNCTION__.opj_j2k_read_tile_header, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.8

cond.end.8:                                       ; preds = %10, %cond.true.6
  %11 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %11, i32 0, i32 1
  %m_decoder = bitcast %union.anon* %m_specific_param to %struct.opj_j2k_dec*
  %m_state = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder, i32 0, i32 0
  %12 = load i32, i32* %m_state, align 4, !tbaa !23
  %cmp9 = icmp eq i32 %12, 256
  br i1 %cmp9, label %if.then, label %if.else

if.then:                                          ; preds = %cond.end.8
  store i32 65497, i32* %l_current_marker, align 4, !tbaa !5
  br label %if.end.15

if.else:                                          ; preds = %cond.end.8
  %13 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param10 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %13, i32 0, i32 1
  %m_decoder11 = bitcast %union.anon* %m_specific_param10 to %struct.opj_j2k_dec*
  %m_state12 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder11, i32 0, i32 0
  %14 = load i32, i32* %m_state12, align 4, !tbaa !23
  %cmp13 = icmp ne i32 %14, 8
  br i1 %cmp13, label %if.then.14, label %if.end

if.then.14:                                       ; preds = %if.else
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.329

if.end:                                           ; preds = %if.else
  br label %if.end.15

if.end.15:                                        ; preds = %if.end, %if.then
  br label %while.cond

while.cond:                                       ; preds = %if.end.251, %if.end.15
  %15 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param16 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %15, i32 0, i32 1
  %m_decoder17 = bitcast %union.anon* %m_specific_param16 to %struct.opj_j2k_dec*
  %m_can_decode = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder17, i32 0, i32 16
  %bf.load = load i8, i8* %m_can_decode, align 4
  %bf.clear = and i8 %bf.load, 1
  %bf.cast = zext i8 %bf.clear to i32
  %tobool = icmp ne i32 %bf.cast, 0
  br i1 %tobool, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %while.cond
  %16 = load i32, i32* %l_current_marker, align 4, !tbaa !5
  %cmp18 = icmp ne i32 %16, 65497
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %17 = phi i1 [ false, %while.cond ], [ %cmp18, %land.rhs ]
  br i1 %17, label %while.body, label %while.end.252

while.body:                                       ; preds = %land.end
  br label %while.cond.19

while.cond.19:                                    ; preds = %if.end.180, %while.body
  %18 = load i32, i32* %l_current_marker, align 4, !tbaa !5
  %cmp20 = icmp ne i32 %18, 65427
  br i1 %cmp20, label %while.body.21, label %while.end

while.body.21:                                    ; preds = %while.cond.19
  %19 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %call = call i64 @opj_stream_get_number_byte_left(%struct.opj_stream_private* %19) #7
  %cmp22 = icmp eq i64 %call, 0
  br i1 %cmp22, label %if.then.23, label %if.end.27

if.then.23:                                       ; preds = %while.body.21
  %20 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param24 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %20, i32 0, i32 1
  %m_decoder25 = bitcast %union.anon* %m_specific_param24 to %struct.opj_j2k_dec*
  %m_state26 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder25, i32 0, i32 0
  store i32 64, i32* %m_state26, align 4, !tbaa !23
  br label %while.end

if.end.27:                                        ; preds = %while.body.21
  %21 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %22 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param28 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %22, i32 0, i32 1
  %m_decoder29 = bitcast %union.anon* %m_specific_param28 to %struct.opj_j2k_dec*
  %m_header_data = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder29, i32 0, i32 2
  %23 = load i8*, i8** %m_header_data, align 8, !tbaa !115
  %24 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call30 = call i64 @opj_stream_read_data(%struct.opj_stream_private* %21, i8* %23, i64 2, %struct.opj_event_mgr* %24) #7
  %cmp31 = icmp ne i64 %call30, 2
  br i1 %cmp31, label %if.then.32, label %if.end.34

if.then.32:                                       ; preds = %if.end.27
  %25 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call33 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %25, i32 1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.329

if.end.34:                                        ; preds = %if.end.27
  %26 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param35 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %26, i32 0, i32 1
  %m_decoder36 = bitcast %union.anon* %m_specific_param35 to %struct.opj_j2k_dec*
  %m_header_data37 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder36, i32 0, i32 2
  %27 = load i8*, i8** %m_header_data37, align 8, !tbaa !115
  call void @opj_read_bytes_LE(i8* %27, i32* %l_marker_size, i32 2) #7
  %28 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param38 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %28, i32 0, i32 1
  %m_decoder39 = bitcast %union.anon* %m_specific_param38 to %struct.opj_j2k_dec*
  %m_state40 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder39, i32 0, i32 0
  %29 = load i32, i32* %m_state40, align 4, !tbaa !23
  %and = and i32 %29, 16
  %tobool41 = icmp ne i32 %and, 0
  br i1 %tobool41, label %if.then.42, label %if.end.45

if.then.42:                                       ; preds = %if.end.34
  %30 = load i32, i32* %l_marker_size, align 4, !tbaa !5
  %add = add i32 %30, 2
  %31 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param43 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %31, i32 0, i32 1
  %m_decoder44 = bitcast %union.anon* %m_specific_param43 to %struct.opj_j2k_dec*
  %m_sot_length = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder44, i32 0, i32 4
  %32 = load i32, i32* %m_sot_length, align 4, !tbaa !22
  %sub = sub i32 %32, %add
  store i32 %sub, i32* %m_sot_length, align 4, !tbaa !22
  br label %if.end.45

if.end.45:                                        ; preds = %if.then.42, %if.end.34
  %33 = load i32, i32* %l_marker_size, align 4, !tbaa !5
  %sub46 = sub i32 %33, 2
  store i32 %sub46, i32* %l_marker_size, align 4, !tbaa !5
  %34 = load i32, i32* %l_current_marker, align 4, !tbaa !5
  %call47 = call %struct.opj_dec_memory_marker_handler* @opj_j2k_get_marker_handler(i32 %34) #7
  store %struct.opj_dec_memory_marker_handler* %call47, %struct.opj_dec_memory_marker_handler** %l_marker_handler, align 8, !tbaa !1
  %35 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param48 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %35, i32 0, i32 1
  %m_decoder49 = bitcast %union.anon* %m_specific_param48 to %struct.opj_j2k_dec*
  %m_state50 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder49, i32 0, i32 0
  %36 = load i32, i32* %m_state50, align 4, !tbaa !23
  %37 = load %struct.opj_dec_memory_marker_handler*, %struct.opj_dec_memory_marker_handler** %l_marker_handler, align 8, !tbaa !1
  %states = getelementptr inbounds %struct.opj_dec_memory_marker_handler, %struct.opj_dec_memory_marker_handler* %37, i32 0, i32 1
  %38 = load i32, i32* %states, align 4, !tbaa !184
  %and51 = and i32 %36, %38
  %tobool52 = icmp ne i32 %and51, 0
  br i1 %tobool52, label %if.end.55, label %if.then.53

if.then.53:                                       ; preds = %if.end.45
  %39 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call54 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %39, i32 1, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.8, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.329

if.end.55:                                        ; preds = %if.end.45
  %40 = load i32, i32* %l_marker_size, align 4, !tbaa !5
  %41 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param56 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %41, i32 0, i32 1
  %m_decoder57 = bitcast %union.anon* %m_specific_param56 to %struct.opj_j2k_dec*
  %m_header_data_size = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder57, i32 0, i32 3
  %42 = load i32, i32* %m_header_data_size, align 4, !tbaa !116
  %cmp58 = icmp ugt i32 %40, %42
  br i1 %cmp58, label %if.then.59, label %if.end.89

if.then.59:                                       ; preds = %if.end.55
  %43 = bitcast i8** %new_header_data to i8*
  call void @llvm.lifetime.start(i64 8, i8* %43) #1
  %44 = load i32, i32* %l_marker_size, align 4, !tbaa !5
  %conv = zext i32 %44 to i64
  %cmp60 = icmp uge i64 %conv, -256
  br i1 %cmp60, label %cond.true.62, label %cond.false.63

cond.true.62:                                     ; preds = %if.then.59
  br label %cond.end.69

cond.false.63:                                    ; preds = %if.then.59
  %45 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param64 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %45, i32 0, i32 1
  %m_decoder65 = bitcast %union.anon* %m_specific_param64 to %struct.opj_j2k_dec*
  %m_header_data66 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder65, i32 0, i32 2
  %46 = load i8*, i8** %m_header_data66, align 8, !tbaa !115
  %47 = load i32, i32* %l_marker_size, align 4, !tbaa !5
  %conv67 = zext i32 %47 to i64
  %call68 = call i8* @realloc(i8* %46, i64 %conv67) #9
  br label %cond.end.69

cond.end.69:                                      ; preds = %cond.false.63, %cond.true.62
  %cond = phi i8* [ null, %cond.true.62 ], [ %call68, %cond.false.63 ]
  store i8* %cond, i8** %new_header_data, align 8, !tbaa !1
  %48 = load i8*, i8** %new_header_data, align 8, !tbaa !1
  %tobool70 = icmp ne i8* %48, null
  br i1 %tobool70, label %if.end.82, label %if.then.71

if.then.71:                                       ; preds = %cond.end.69
  %49 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param72 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %49, i32 0, i32 1
  %m_decoder73 = bitcast %union.anon* %m_specific_param72 to %struct.opj_j2k_dec*
  %m_header_data74 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder73, i32 0, i32 2
  %50 = load i8*, i8** %m_header_data74, align 8, !tbaa !115
  call void @free(i8* %50) #9
  %51 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param75 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %51, i32 0, i32 1
  %m_decoder76 = bitcast %union.anon* %m_specific_param75 to %struct.opj_j2k_dec*
  %m_header_data77 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder76, i32 0, i32 2
  store i8* null, i8** %m_header_data77, align 8, !tbaa !115
  %52 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param78 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %52, i32 0, i32 1
  %m_decoder79 = bitcast %union.anon* %m_specific_param78 to %struct.opj_j2k_dec*
  %m_header_data_size80 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder79, i32 0, i32 3
  store i32 0, i32* %m_header_data_size80, align 4, !tbaa !116
  %53 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call81 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %53, i32 1, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.9, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.82:                                        ; preds = %cond.end.69
  %54 = load i8*, i8** %new_header_data, align 8, !tbaa !1
  %55 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param83 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %55, i32 0, i32 1
  %m_decoder84 = bitcast %union.anon* %m_specific_param83 to %struct.opj_j2k_dec*
  %m_header_data85 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder84, i32 0, i32 2
  store i8* %54, i8** %m_header_data85, align 8, !tbaa !115
  %56 = load i32, i32* %l_marker_size, align 4, !tbaa !5
  %57 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param86 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %57, i32 0, i32 1
  %m_decoder87 = bitcast %union.anon* %m_specific_param86 to %struct.opj_j2k_dec*
  %m_header_data_size88 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder87, i32 0, i32 3
  store i32 %56, i32* %m_header_data_size88, align 4, !tbaa !116
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.82, %if.then.71
  %58 = bitcast i8** %new_header_data to i8*
  call void @llvm.lifetime.end(i64 8, i8* %58) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.329 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.89

if.end.89:                                        ; preds = %cleanup.cont, %if.end.55
  %59 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %60 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param90 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %60, i32 0, i32 1
  %m_decoder91 = bitcast %union.anon* %m_specific_param90 to %struct.opj_j2k_dec*
  %m_header_data92 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder91, i32 0, i32 2
  %61 = load i8*, i8** %m_header_data92, align 8, !tbaa !115
  %62 = load i32, i32* %l_marker_size, align 4, !tbaa !5
  %conv93 = zext i32 %62 to i64
  %63 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call94 = call i64 @opj_stream_read_data(%struct.opj_stream_private* %59, i8* %61, i64 %conv93, %struct.opj_event_mgr* %63) #7
  %64 = load i32, i32* %l_marker_size, align 4, !tbaa !5
  %conv95 = zext i32 %64 to i64
  %cmp96 = icmp ne i64 %call94, %conv95
  br i1 %cmp96, label %if.then.98, label %if.end.100

if.then.98:                                       ; preds = %if.end.89
  %65 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call99 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %65, i32 1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.329

if.end.100:                                       ; preds = %if.end.89
  %66 = load %struct.opj_dec_memory_marker_handler*, %struct.opj_dec_memory_marker_handler** %l_marker_handler, align 8, !tbaa !1
  %handler = getelementptr inbounds %struct.opj_dec_memory_marker_handler, %struct.opj_dec_memory_marker_handler* %66, i32 0, i32 2
  %67 = load i32 (%struct.opj_j2k*, i8*, i32, %struct.opj_event_mgr*)*, i32 (%struct.opj_j2k*, i8*, i32, %struct.opj_event_mgr*)** %handler, align 8, !tbaa !186
  %tobool101 = icmp ne i32 (%struct.opj_j2k*, i8*, i32, %struct.opj_event_mgr*)* %67, null
  br i1 %tobool101, label %if.end.104, label %if.then.102

if.then.102:                                      ; preds = %if.end.100
  %68 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call103 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %68, i32 1, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.10, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.329

if.end.104:                                       ; preds = %if.end.100
  %69 = load %struct.opj_dec_memory_marker_handler*, %struct.opj_dec_memory_marker_handler** %l_marker_handler, align 8, !tbaa !1
  %handler105 = getelementptr inbounds %struct.opj_dec_memory_marker_handler, %struct.opj_dec_memory_marker_handler* %69, i32 0, i32 2
  %70 = load i32 (%struct.opj_j2k*, i8*, i32, %struct.opj_event_mgr*)*, i32 (%struct.opj_j2k*, i8*, i32, %struct.opj_event_mgr*)** %handler105, align 8, !tbaa !186
  %71 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %72 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param106 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %72, i32 0, i32 1
  %m_decoder107 = bitcast %union.anon* %m_specific_param106 to %struct.opj_j2k_dec*
  %m_header_data108 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder107, i32 0, i32 2
  %73 = load i8*, i8** %m_header_data108, align 8, !tbaa !115
  %74 = load i32, i32* %l_marker_size, align 4, !tbaa !5
  %75 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call109 = call i32 %70(%struct.opj_j2k* %71, i8* %73, i32 %74, %struct.opj_event_mgr* %75) #7
  %tobool110 = icmp ne i32 %call109, 0
  br i1 %tobool110, label %if.end.113, label %if.then.111

if.then.111:                                      ; preds = %if.end.104
  %76 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %77 = load i32, i32* %l_current_marker, align 4, !tbaa !5
  %call112 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %76, i32 1, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.11, i32 0, i32 0), i32 %77) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.329

if.end.113:                                       ; preds = %if.end.104
  %78 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %78, i32 0, i32 8
  %79 = load i32, i32* %m_current_tile_number, align 4, !tbaa !11
  %80 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cstr_index = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %80, i32 0, i32 7
  %81 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index, align 8, !tbaa !29
  %82 = load %struct.opj_dec_memory_marker_handler*, %struct.opj_dec_memory_marker_handler** %l_marker_handler, align 8, !tbaa !1
  %id = getelementptr inbounds %struct.opj_dec_memory_marker_handler, %struct.opj_dec_memory_marker_handler* %82, i32 0, i32 0
  %83 = load i32, i32* %id, align 4, !tbaa !187
  %84 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %call114 = call i64 @opj_stream_tell(%struct.opj_stream_private* %84) #7
  %conv115 = trunc i64 %call114 to i32
  %85 = load i32, i32* %l_marker_size, align 4, !tbaa !5
  %sub116 = sub i32 %conv115, %85
  %sub117 = sub i32 %sub116, 4
  %conv118 = zext i32 %sub117 to i64
  %86 = load i32, i32* %l_marker_size, align 4, !tbaa !5
  %add119 = add i32 %86, 4
  %call120 = call i32 @opj_j2k_add_tlmarker(i32 %79, %struct.opj_codestream_index* %81, i32 %83, i64 %conv118, i32 %add119) #7
  %cmp121 = icmp eq i32 0, %call120
  br i1 %cmp121, label %if.then.123, label %if.end.125

if.then.123:                                      ; preds = %if.end.113
  %87 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call124 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %87, i32 1, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.12, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.329

if.end.125:                                       ; preds = %if.end.113
  %88 = load %struct.opj_dec_memory_marker_handler*, %struct.opj_dec_memory_marker_handler** %l_marker_handler, align 8, !tbaa !1
  %id126 = getelementptr inbounds %struct.opj_dec_memory_marker_handler, %struct.opj_dec_memory_marker_handler* %88, i32 0, i32 0
  %89 = load i32, i32* %id126, align 4, !tbaa !187
  %cmp127 = icmp eq i32 %89, 65424
  br i1 %cmp127, label %if.then.129, label %if.end.145

if.then.129:                                      ; preds = %if.end.125
  %90 = bitcast i32* %sot_pos to i8*
  call void @llvm.lifetime.start(i64 4, i8* %90) #1
  %91 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %call130 = call i64 @opj_stream_tell(%struct.opj_stream_private* %91) #7
  %conv131 = trunc i64 %call130 to i32
  %92 = load i32, i32* %l_marker_size, align 4, !tbaa !5
  %sub132 = sub i32 %conv131, %92
  %sub133 = sub i32 %sub132, 4
  store i32 %sub133, i32* %sot_pos, align 4, !tbaa !5
  %93 = load i32, i32* %sot_pos, align 4, !tbaa !5
  %conv134 = zext i32 %93 to i64
  %94 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param135 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %94, i32 0, i32 1
  %m_decoder136 = bitcast %union.anon* %m_specific_param135 to %struct.opj_j2k_dec*
  %m_last_sot_read_pos = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder136, i32 0, i32 14
  %95 = load i64, i64* %m_last_sot_read_pos, align 8, !tbaa !188
  %cmp137 = icmp sgt i64 %conv134, %95
  br i1 %cmp137, label %if.then.139, label %if.end.144

if.then.139:                                      ; preds = %if.then.129
  %96 = load i32, i32* %sot_pos, align 4, !tbaa !5
  %conv140 = zext i32 %96 to i64
  %97 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param141 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %97, i32 0, i32 1
  %m_decoder142 = bitcast %union.anon* %m_specific_param141 to %struct.opj_j2k_dec*
  %m_last_sot_read_pos143 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder142, i32 0, i32 14
  store i64 %conv140, i64* %m_last_sot_read_pos143, align 8, !tbaa !188
  br label %if.end.144

if.end.144:                                       ; preds = %if.then.139, %if.then.129
  %98 = bitcast i32* %sot_pos to i8*
  call void @llvm.lifetime.end(i64 4, i8* %98) #1
  br label %if.end.145

if.end.145:                                       ; preds = %if.end.144, %if.end.125
  %99 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param146 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %99, i32 0, i32 1
  %m_decoder147 = bitcast %union.anon* %m_specific_param146 to %struct.opj_j2k_dec*
  %m_skip_data = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder147, i32 0, i32 16
  %bf.load148 = load i8, i8* %m_skip_data, align 4
  %bf.lshr = lshr i8 %bf.load148, 2
  %bf.clear149 = and i8 %bf.lshr, 1
  %bf.cast150 = zext i8 %bf.clear149 to i32
  %tobool151 = icmp ne i32 %bf.cast150, 0
  br i1 %tobool151, label %if.then.152, label %if.else.167

if.then.152:                                      ; preds = %if.end.145
  %100 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %101 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param153 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %101, i32 0, i32 1
  %m_decoder154 = bitcast %union.anon* %m_specific_param153 to %struct.opj_j2k_dec*
  %m_sot_length155 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder154, i32 0, i32 4
  %102 = load i32, i32* %m_sot_length155, align 4, !tbaa !22
  %conv156 = zext i32 %102 to i64
  %103 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call157 = call i64 @opj_stream_skip(%struct.opj_stream_private* %100, i64 %conv156, %struct.opj_event_mgr* %103) #7
  %104 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param158 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %104, i32 0, i32 1
  %m_decoder159 = bitcast %union.anon* %m_specific_param158 to %struct.opj_j2k_dec*
  %m_sot_length160 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder159, i32 0, i32 4
  %105 = load i32, i32* %m_sot_length160, align 4, !tbaa !22
  %conv161 = zext i32 %105 to i64
  %cmp162 = icmp ne i64 %call157, %conv161
  br i1 %cmp162, label %if.then.164, label %if.end.166

if.then.164:                                      ; preds = %if.then.152
  %106 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call165 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %106, i32 1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.329

if.end.166:                                       ; preds = %if.then.152
  store i32 65427, i32* %l_current_marker, align 4, !tbaa !5
  br label %if.end.180

if.else.167:                                      ; preds = %if.end.145
  %107 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %108 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param168 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %108, i32 0, i32 1
  %m_decoder169 = bitcast %union.anon* %m_specific_param168 to %struct.opj_j2k_dec*
  %m_header_data170 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder169, i32 0, i32 2
  %109 = load i8*, i8** %m_header_data170, align 8, !tbaa !115
  %110 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call171 = call i64 @opj_stream_read_data(%struct.opj_stream_private* %107, i8* %109, i64 2, %struct.opj_event_mgr* %110) #7
  %cmp172 = icmp ne i64 %call171, 2
  br i1 %cmp172, label %if.then.174, label %if.end.176

if.then.174:                                      ; preds = %if.else.167
  %111 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call175 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %111, i32 1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.329

if.end.176:                                       ; preds = %if.else.167
  %112 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param177 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %112, i32 0, i32 1
  %m_decoder178 = bitcast %union.anon* %m_specific_param177 to %struct.opj_j2k_dec*
  %m_header_data179 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder178, i32 0, i32 2
  %113 = load i8*, i8** %m_header_data179, align 8, !tbaa !115
  call void @opj_read_bytes_LE(i8* %113, i32* %l_current_marker, i32 2) #7
  br label %if.end.180

if.end.180:                                       ; preds = %if.end.176, %if.end.166
  br label %while.cond.19

while.end:                                        ; preds = %if.then.23, %while.cond.19
  %114 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %call181 = call i64 @opj_stream_get_number_byte_left(%struct.opj_stream_private* %114) #7
  %cmp182 = icmp eq i64 %call181, 0
  br i1 %cmp182, label %land.lhs.true, label %if.end.190

land.lhs.true:                                    ; preds = %while.end
  %115 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param184 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %115, i32 0, i32 1
  %m_decoder185 = bitcast %union.anon* %m_specific_param184 to %struct.opj_j2k_dec*
  %m_state186 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder185, i32 0, i32 0
  %116 = load i32, i32* %m_state186, align 4, !tbaa !23
  %cmp187 = icmp eq i32 %116, 64
  br i1 %cmp187, label %if.then.189, label %if.end.190

if.then.189:                                      ; preds = %land.lhs.true
  br label %while.end.252

if.end.190:                                       ; preds = %land.lhs.true, %while.end
  %117 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param191 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %117, i32 0, i32 1
  %m_decoder192 = bitcast %union.anon* %m_specific_param191 to %struct.opj_j2k_dec*
  %m_skip_data193 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder192, i32 0, i32 16
  %bf.load194 = load i8, i8* %m_skip_data193, align 4
  %bf.lshr195 = lshr i8 %bf.load194, 2
  %bf.clear196 = and i8 %bf.lshr195, 1
  %bf.cast197 = zext i8 %bf.clear196 to i32
  %tobool198 = icmp ne i32 %bf.cast197, 0
  br i1 %tobool198, label %if.else.225, label %if.then.199

if.then.199:                                      ; preds = %if.end.190
  %118 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %119 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %120 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call200 = call i32 @opj_j2k_read_sod(%struct.opj_j2k* %118, %struct.opj_stream_private* %119, %struct.opj_event_mgr* %120) #7
  %tobool201 = icmp ne i32 %call200, 0
  br i1 %tobool201, label %if.end.203, label %if.then.202

if.then.202:                                      ; preds = %if.then.199
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.329

if.end.203:                                       ; preds = %if.then.199
  %121 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param204 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %121, i32 0, i32 1
  %m_decoder205 = bitcast %union.anon* %m_specific_param204 to %struct.opj_j2k_dec*
  %m_can_decode206 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder205, i32 0, i32 16
  %bf.load207 = load i8, i8* %m_can_decode206, align 4
  %bf.clear208 = and i8 %bf.load207, 1
  %bf.cast209 = zext i8 %bf.clear208 to i32
  %tobool210 = icmp ne i32 %bf.cast209, 0
  br i1 %tobool210, label %if.end.224, label %if.then.211

if.then.211:                                      ; preds = %if.end.203
  %122 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %123 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param212 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %123, i32 0, i32 1
  %m_decoder213 = bitcast %union.anon* %m_specific_param212 to %struct.opj_j2k_dec*
  %m_header_data214 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder213, i32 0, i32 2
  %124 = load i8*, i8** %m_header_data214, align 8, !tbaa !115
  %125 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call215 = call i64 @opj_stream_read_data(%struct.opj_stream_private* %122, i8* %124, i64 2, %struct.opj_event_mgr* %125) #7
  %cmp216 = icmp ne i64 %call215, 2
  br i1 %cmp216, label %if.then.218, label %if.end.220

if.then.218:                                      ; preds = %if.then.211
  %126 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call219 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %126, i32 1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.329

if.end.220:                                       ; preds = %if.then.211
  %127 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param221 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %127, i32 0, i32 1
  %m_decoder222 = bitcast %union.anon* %m_specific_param221 to %struct.opj_j2k_dec*
  %m_header_data223 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder222, i32 0, i32 2
  %128 = load i8*, i8** %m_header_data223, align 8, !tbaa !115
  call void @opj_read_bytes_LE(i8* %128, i32* %l_current_marker, i32 2) #7
  br label %if.end.224

if.end.224:                                       ; preds = %if.end.220, %if.end.203
  br label %if.end.251

if.else.225:                                      ; preds = %if.end.190
  %129 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param226 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %129, i32 0, i32 1
  %m_decoder227 = bitcast %union.anon* %m_specific_param226 to %struct.opj_j2k_dec*
  %m_skip_data228 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder227, i32 0, i32 16
  %bf.load229 = load i8, i8* %m_skip_data228, align 4
  %bf.clear230 = and i8 %bf.load229, -5
  store i8 %bf.clear230, i8* %m_skip_data228, align 4
  %130 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param231 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %130, i32 0, i32 1
  %m_decoder232 = bitcast %union.anon* %m_specific_param231 to %struct.opj_j2k_dec*
  %m_can_decode233 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder232, i32 0, i32 16
  %bf.load234 = load i8, i8* %m_can_decode233, align 4
  %bf.clear235 = and i8 %bf.load234, -2
  store i8 %bf.clear235, i8* %m_can_decode233, align 4
  %131 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param236 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %131, i32 0, i32 1
  %m_decoder237 = bitcast %union.anon* %m_specific_param236 to %struct.opj_j2k_dec*
  %m_state238 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder237, i32 0, i32 0
  store i32 8, i32* %m_state238, align 4, !tbaa !23
  %132 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %133 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param239 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %133, i32 0, i32 1
  %m_decoder240 = bitcast %union.anon* %m_specific_param239 to %struct.opj_j2k_dec*
  %m_header_data241 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder240, i32 0, i32 2
  %134 = load i8*, i8** %m_header_data241, align 8, !tbaa !115
  %135 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call242 = call i64 @opj_stream_read_data(%struct.opj_stream_private* %132, i8* %134, i64 2, %struct.opj_event_mgr* %135) #7
  %cmp243 = icmp ne i64 %call242, 2
  br i1 %cmp243, label %if.then.245, label %if.end.247

if.then.245:                                      ; preds = %if.else.225
  %136 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call246 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %136, i32 1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.329

if.end.247:                                       ; preds = %if.else.225
  %137 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param248 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %137, i32 0, i32 1
  %m_decoder249 = bitcast %union.anon* %m_specific_param248 to %struct.opj_j2k_dec*
  %m_header_data250 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder249, i32 0, i32 2
  %138 = load i8*, i8** %m_header_data250, align 8, !tbaa !115
  call void @opj_read_bytes_LE(i8* %138, i32* %l_current_marker, i32 2) #7
  br label %if.end.251

if.end.251:                                       ; preds = %if.end.247, %if.end.224
  br label %while.cond

while.end.252:                                    ; preds = %if.then.189, %land.end
  %139 = load i32, i32* %l_current_marker, align 4, !tbaa !5
  %cmp253 = icmp eq i32 %139, 65497
  br i1 %cmp253, label %if.then.255, label %if.end.267

if.then.255:                                      ; preds = %while.end.252
  %140 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param256 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %140, i32 0, i32 1
  %m_decoder257 = bitcast %union.anon* %m_specific_param256 to %struct.opj_j2k_dec*
  %m_state258 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder257, i32 0, i32 0
  %141 = load i32, i32* %m_state258, align 4, !tbaa !23
  %cmp259 = icmp ne i32 %141, 256
  br i1 %cmp259, label %if.then.261, label %if.end.266

if.then.261:                                      ; preds = %if.then.255
  %142 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number262 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %142, i32 0, i32 8
  store i32 0, i32* %m_current_tile_number262, align 4, !tbaa !11
  %143 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param263 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %143, i32 0, i32 1
  %m_decoder264 = bitcast %union.anon* %m_specific_param263 to %struct.opj_j2k_dec*
  %m_state265 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder264, i32 0, i32 0
  store i32 256, i32* %m_state265, align 4, !tbaa !23
  br label %if.end.266

if.end.266:                                       ; preds = %if.then.261, %if.then.255
  br label %if.end.267

if.end.267:                                       ; preds = %if.end.266, %while.end.252
  %144 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param268 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %144, i32 0, i32 1
  %m_decoder269 = bitcast %union.anon* %m_specific_param268 to %struct.opj_j2k_dec*
  %m_can_decode270 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder269, i32 0, i32 16
  %bf.load271 = load i8, i8* %m_can_decode270, align 4
  %bf.clear272 = and i8 %bf.load271, 1
  %bf.cast273 = zext i8 %bf.clear272 to i32
  %tobool274 = icmp ne i32 %bf.cast273, 0
  br i1 %tobool274, label %if.end.295, label %if.then.275

if.then.275:                                      ; preds = %if.end.267
  %145 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %145, i32 0, i32 4
  %tcps = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp, i32 0, i32 17
  %146 = load %struct.opj_tcp*, %struct.opj_tcp** %tcps, align 8, !tbaa !88
  %147 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number276 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %147, i32 0, i32 8
  %148 = load i32, i32* %m_current_tile_number276, align 4, !tbaa !11
  %idx.ext = zext i32 %148 to i64
  %add.ptr = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %146, i64 %idx.ext
  store %struct.opj_tcp* %add.ptr, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %149 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp277 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %149, i32 0, i32 4
  %th = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp277, i32 0, i32 7
  %150 = load i32, i32* %th, align 4, !tbaa !177
  %151 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp278 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %151, i32 0, i32 4
  %tw = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp278, i32 0, i32 6
  %152 = load i32, i32* %tw, align 4, !tbaa !176
  %mul = mul i32 %150, %152
  store i32 %mul, i32* %l_nb_tiles, align 4, !tbaa !5
  br label %while.cond.279

while.cond.279:                                   ; preds = %while.body.287, %if.then.275
  %153 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number280 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %153, i32 0, i32 8
  %154 = load i32, i32* %m_current_tile_number280, align 4, !tbaa !11
  %155 = load i32, i32* %l_nb_tiles, align 4, !tbaa !5
  %cmp281 = icmp ult i32 %154, %155
  br i1 %cmp281, label %land.rhs.283, label %land.end.286

land.rhs.283:                                     ; preds = %while.cond.279
  %156 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %m_data = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %156, i32 0, i32 15
  %157 = load i8*, i8** %m_data, align 8, !tbaa !189
  %cmp284 = icmp eq i8* %157, null
  br label %land.end.286

land.end.286:                                     ; preds = %land.rhs.283, %while.cond.279
  %158 = phi i1 [ false, %while.cond.279 ], [ %cmp284, %land.rhs.283 ]
  br i1 %158, label %while.body.287, label %while.end.289

while.body.287:                                   ; preds = %land.end.286
  %159 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number288 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %159, i32 0, i32 8
  %160 = load i32, i32* %m_current_tile_number288, align 4, !tbaa !11
  %inc = add i32 %160, 1
  store i32 %inc, i32* %m_current_tile_number288, align 4, !tbaa !11
  %161 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %161, i32 1
  store %struct.opj_tcp* %incdec.ptr, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  br label %while.cond.279

while.end.289:                                    ; preds = %land.end.286
  %162 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number290 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %162, i32 0, i32 8
  %163 = load i32, i32* %m_current_tile_number290, align 4, !tbaa !11
  %164 = load i32, i32* %l_nb_tiles, align 4, !tbaa !5
  %cmp291 = icmp eq i32 %163, %164
  br i1 %cmp291, label %if.then.293, label %if.end.294

if.then.293:                                      ; preds = %while.end.289
  %165 = load i32*, i32** %p_go_on.addr, align 8, !tbaa !1
  store i32 0, i32* %165, align 4, !tbaa !5
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.329

if.end.294:                                       ; preds = %while.end.289
  br label %if.end.295

if.end.295:                                       ; preds = %if.end.294, %if.end.267
  %166 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_tcd = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %166, i32 0, i32 9
  %167 = load %struct.opj_tcd*, %struct.opj_tcd** %m_tcd, align 8, !tbaa !120
  %168 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number296 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %168, i32 0, i32 8
  %169 = load i32, i32* %m_current_tile_number296, align 4, !tbaa !11
  %call297 = call i32 @opj_tcd_init_decode_tile(%struct.opj_tcd* %167, i32 %169) #7
  %tobool298 = icmp ne i32 %call297, 0
  br i1 %tobool298, label %if.end.301, label %if.then.299

if.then.299:                                      ; preds = %if.end.295
  %170 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call300 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %170, i32 1, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.13, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.329

if.end.301:                                       ; preds = %if.end.295
  %171 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %172 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number302 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %172, i32 0, i32 8
  %173 = load i32, i32* %m_current_tile_number302, align 4, !tbaa !11
  %174 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp303 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %174, i32 0, i32 4
  %th304 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp303, i32 0, i32 7
  %175 = load i32, i32* %th304, align 4, !tbaa !177
  %176 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp305 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %176, i32 0, i32 4
  %tw306 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp305, i32 0, i32 6
  %177 = load i32, i32* %tw306, align 4, !tbaa !176
  %mul307 = mul i32 %175, %177
  %sub308 = sub i32 %mul307, 1
  %call309 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %171, i32 4, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.14, i32 0, i32 0), i32 %173, i32 %sub308) #7
  %178 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number310 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %178, i32 0, i32 8
  %179 = load i32, i32* %m_current_tile_number310, align 4, !tbaa !11
  %180 = load i32*, i32** %p_tile_index.addr, align 8, !tbaa !1
  store i32 %179, i32* %180, align 4, !tbaa !5
  %181 = load i32*, i32** %p_go_on.addr, align 8, !tbaa !1
  store i32 1, i32* %181, align 4, !tbaa !5
  %182 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_tcd311 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %182, i32 0, i32 9
  %183 = load %struct.opj_tcd*, %struct.opj_tcd** %m_tcd311, align 8, !tbaa !120
  %call312 = call i32 @opj_tcd_get_decoded_tile_size(%struct.opj_tcd* %183) #7
  %184 = load i32*, i32** %p_data_size.addr, align 8, !tbaa !1
  store i32 %call312, i32* %184, align 4, !tbaa !5
  %185 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_tcd313 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %185, i32 0, i32 9
  %186 = load %struct.opj_tcd*, %struct.opj_tcd** %m_tcd313, align 8, !tbaa !120
  %tcd_image = getelementptr inbounds %struct.opj_tcd, %struct.opj_tcd* %186, i32 0, i32 5
  %187 = load %struct.opj_tcd_image*, %struct.opj_tcd_image** %tcd_image, align 8, !tbaa !190
  %tiles = getelementptr inbounds %struct.opj_tcd_image, %struct.opj_tcd_image* %187, i32 0, i32 0
  %188 = load %struct.opj_tcd_tile*, %struct.opj_tcd_tile** %tiles, align 8, !tbaa !192
  %x0 = getelementptr inbounds %struct.opj_tcd_tile, %struct.opj_tcd_tile* %188, i32 0, i32 0
  %189 = load i32, i32* %x0, align 4, !tbaa !194
  %190 = load i32*, i32** %p_tile_x0.addr, align 8, !tbaa !1
  store i32 %189, i32* %190, align 4, !tbaa !5
  %191 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_tcd314 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %191, i32 0, i32 9
  %192 = load %struct.opj_tcd*, %struct.opj_tcd** %m_tcd314, align 8, !tbaa !120
  %tcd_image315 = getelementptr inbounds %struct.opj_tcd, %struct.opj_tcd* %192, i32 0, i32 5
  %193 = load %struct.opj_tcd_image*, %struct.opj_tcd_image** %tcd_image315, align 8, !tbaa !190
  %tiles316 = getelementptr inbounds %struct.opj_tcd_image, %struct.opj_tcd_image* %193, i32 0, i32 0
  %194 = load %struct.opj_tcd_tile*, %struct.opj_tcd_tile** %tiles316, align 8, !tbaa !192
  %y0 = getelementptr inbounds %struct.opj_tcd_tile, %struct.opj_tcd_tile* %194, i32 0, i32 1
  %195 = load i32, i32* %y0, align 4, !tbaa !196
  %196 = load i32*, i32** %p_tile_y0.addr, align 8, !tbaa !1
  store i32 %195, i32* %196, align 4, !tbaa !5
  %197 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_tcd317 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %197, i32 0, i32 9
  %198 = load %struct.opj_tcd*, %struct.opj_tcd** %m_tcd317, align 8, !tbaa !120
  %tcd_image318 = getelementptr inbounds %struct.opj_tcd, %struct.opj_tcd* %198, i32 0, i32 5
  %199 = load %struct.opj_tcd_image*, %struct.opj_tcd_image** %tcd_image318, align 8, !tbaa !190
  %tiles319 = getelementptr inbounds %struct.opj_tcd_image, %struct.opj_tcd_image* %199, i32 0, i32 0
  %200 = load %struct.opj_tcd_tile*, %struct.opj_tcd_tile** %tiles319, align 8, !tbaa !192
  %x1 = getelementptr inbounds %struct.opj_tcd_tile, %struct.opj_tcd_tile* %200, i32 0, i32 2
  %201 = load i32, i32* %x1, align 4, !tbaa !197
  %202 = load i32*, i32** %p_tile_x1.addr, align 8, !tbaa !1
  store i32 %201, i32* %202, align 4, !tbaa !5
  %203 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_tcd320 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %203, i32 0, i32 9
  %204 = load %struct.opj_tcd*, %struct.opj_tcd** %m_tcd320, align 8, !tbaa !120
  %tcd_image321 = getelementptr inbounds %struct.opj_tcd, %struct.opj_tcd* %204, i32 0, i32 5
  %205 = load %struct.opj_tcd_image*, %struct.opj_tcd_image** %tcd_image321, align 8, !tbaa !190
  %tiles322 = getelementptr inbounds %struct.opj_tcd_image, %struct.opj_tcd_image* %205, i32 0, i32 0
  %206 = load %struct.opj_tcd_tile*, %struct.opj_tcd_tile** %tiles322, align 8, !tbaa !192
  %y1 = getelementptr inbounds %struct.opj_tcd_tile, %struct.opj_tcd_tile* %206, i32 0, i32 3
  %207 = load i32, i32* %y1, align 4, !tbaa !198
  %208 = load i32*, i32** %p_tile_y1.addr, align 8, !tbaa !1
  store i32 %207, i32* %208, align 4, !tbaa !5
  %209 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_tcd323 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %209, i32 0, i32 9
  %210 = load %struct.opj_tcd*, %struct.opj_tcd** %m_tcd323, align 8, !tbaa !120
  %tcd_image324 = getelementptr inbounds %struct.opj_tcd, %struct.opj_tcd* %210, i32 0, i32 5
  %211 = load %struct.opj_tcd_image*, %struct.opj_tcd_image** %tcd_image324, align 8, !tbaa !190
  %tiles325 = getelementptr inbounds %struct.opj_tcd_image, %struct.opj_tcd_image* %211, i32 0, i32 0
  %212 = load %struct.opj_tcd_tile*, %struct.opj_tcd_tile** %tiles325, align 8, !tbaa !192
  %numcomps = getelementptr inbounds %struct.opj_tcd_tile, %struct.opj_tcd_tile* %212, i32 0, i32 4
  %213 = load i32, i32* %numcomps, align 4, !tbaa !199
  %214 = load i32*, i32** %p_nb_comps.addr, align 8, !tbaa !1
  store i32 %213, i32* %214, align 4, !tbaa !5
  %215 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param326 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %215, i32 0, i32 1
  %m_decoder327 = bitcast %union.anon* %m_specific_param326 to %struct.opj_j2k_dec*
  %m_state328 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder327, i32 0, i32 0
  %216 = load i32, i32* %m_state328, align 4, !tbaa !23
  %or = or i32 %216, 128
  store i32 %or, i32* %m_state328, align 4, !tbaa !23
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.329

cleanup.329:                                      ; preds = %if.end.301, %if.then.299, %if.then.293, %if.then.245, %if.then.218, %if.then.202, %if.then.174, %if.then.164, %if.then.123, %if.then.111, %if.then.102, %if.then.98, %cleanup, %if.then.53, %if.then.32, %if.then.14
  %217 = bitcast i32* %l_nb_tiles to i8*
  call void @llvm.lifetime.end(i64 4, i8* %217) #1
  %218 = bitcast %struct.opj_tcp** %l_tcp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %218) #1
  %219 = bitcast %struct.opj_dec_memory_marker_handler** %l_marker_handler to i8*
  call void @llvm.lifetime.end(i64 8, i8* %219) #1
  %220 = bitcast i32* %l_marker_size to i8*
  call void @llvm.lifetime.end(i64 4, i8* %220) #1
  %221 = bitcast i32* %l_current_marker to i8*
  call void @llvm.lifetime.end(i64 4, i8* %221) #1
  %222 = load i32, i32* %retval
  ret i32 %222
}

declare i64 @opj_stream_get_number_byte_left(%struct.opj_stream_private*) #3

declare i64 @opj_stream_read_data(%struct.opj_stream_private*, i8*, i64, %struct.opj_event_mgr*) #3

declare i32 @opj_event_msg(%struct.opj_event_mgr*, i32, i8*, ...) #3

declare void @opj_read_bytes_LE(i8*, i32*, i32) #3

; Function Attrs: nounwind uwtable
define internal %struct.opj_dec_memory_marker_handler* @opj_j2k_get_marker_handler(i32 %p_id) #0 {
entry:
  %p_id.addr = alloca i32, align 4
  %e = alloca %struct.opj_dec_memory_marker_handler*, align 8
  store i32 %p_id, i32* %p_id.addr, align 4, !tbaa !5
  %0 = bitcast %struct.opj_dec_memory_marker_handler** %e to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  store %struct.opj_dec_memory_marker_handler* getelementptr inbounds ([21 x %struct.opj_dec_memory_marker_handler], [21 x %struct.opj_dec_memory_marker_handler]* @j2k_memory_marker_handler_tab, i32 0, i32 0), %struct.opj_dec_memory_marker_handler** %e, align 8, !tbaa !1
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.opj_dec_memory_marker_handler*, %struct.opj_dec_memory_marker_handler** %e, align 8, !tbaa !1
  %id = getelementptr inbounds %struct.opj_dec_memory_marker_handler, %struct.opj_dec_memory_marker_handler* %1, i32 0, i32 0
  %2 = load i32, i32* %id, align 4, !tbaa !187
  %cmp = icmp ne i32 %2, 0
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load %struct.opj_dec_memory_marker_handler*, %struct.opj_dec_memory_marker_handler** %e, align 8, !tbaa !1
  %id1 = getelementptr inbounds %struct.opj_dec_memory_marker_handler, %struct.opj_dec_memory_marker_handler* %3, i32 0, i32 0
  %4 = load i32, i32* %id1, align 4, !tbaa !187
  %5 = load i32, i32* %p_id.addr, align 4, !tbaa !5
  %cmp2 = icmp eq i32 %4, %5
  br i1 %cmp2, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %for.end

if.end:                                           ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %6 = load %struct.opj_dec_memory_marker_handler*, %struct.opj_dec_memory_marker_handler** %e, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds %struct.opj_dec_memory_marker_handler, %struct.opj_dec_memory_marker_handler* %6, i32 1
  store %struct.opj_dec_memory_marker_handler* %incdec.ptr, %struct.opj_dec_memory_marker_handler** %e, align 8, !tbaa !1
  br label %for.cond

for.end:                                          ; preds = %if.then, %for.cond
  %7 = load %struct.opj_dec_memory_marker_handler*, %struct.opj_dec_memory_marker_handler** %e, align 8, !tbaa !1
  %8 = bitcast %struct.opj_dec_memory_marker_handler** %e to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8) #1
  ret %struct.opj_dec_memory_marker_handler* %7
}

; Function Attrs: nounwind uwtable
define internal i32 @opj_j2k_add_tlmarker(i32 %tileno, %struct.opj_codestream_index* %cstr_index, i32 %type, i64 %pos, i32 %len) #0 {
entry:
  %retval = alloca i32, align 4
  %tileno.addr = alloca i32, align 4
  %cstr_index.addr = alloca %struct.opj_codestream_index*, align 8
  %type.addr = alloca i32, align 4
  %pos.addr = alloca i64, align 8
  %len.addr = alloca i32, align 4
  %new_marker = alloca %struct.opj_marker_info*, align 8
  %cleanup.dest.slot = alloca i32
  %l_current_tile_part = alloca i32, align 4
  store i32 %tileno, i32* %tileno.addr, align 4, !tbaa !5
  store %struct.opj_codestream_index* %cstr_index, %struct.opj_codestream_index** %cstr_index.addr, align 8, !tbaa !1
  store i32 %type, i32* %type.addr, align 4, !tbaa !5
  store i64 %pos, i64* %pos.addr, align 8, !tbaa !135
  store i32 %len, i32* %len.addr, align 4, !tbaa !5
  %0 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index.addr, align 8, !tbaa !1
  %cmp = icmp ne %struct.opj_codestream_index* %0, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.125, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 6124, i8* getelementptr inbounds ([103 x i8], [103 x i8]* @__PRETTY_FUNCTION__.opj_j2k_add_tlmarker, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %1, %cond.true
  %2 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index.addr, align 8, !tbaa !1
  %tile_index = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %2, i32 0, i32 7
  %3 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index, align 8, !tbaa !30
  %cmp1 = icmp ne %struct.opj_tile_index* %3, null
  br i1 %cmp1, label %cond.true.2, label %cond.false.3

cond.true.2:                                      ; preds = %cond.end
  br label %cond.end.4

cond.false.3:                                     ; preds = %cond.end
  call void @__assert_fail(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.127, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 6125, i8* getelementptr inbounds ([103 x i8], [103 x i8]* @__PRETTY_FUNCTION__.opj_j2k_add_tlmarker, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.4

cond.end.4:                                       ; preds = %4, %cond.true.2
  %5 = load i32, i32* %tileno.addr, align 4, !tbaa !5
  %idxprom = zext i32 %5 to i64
  %6 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index.addr, align 8, !tbaa !1
  %tile_index5 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %6, i32 0, i32 7
  %7 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index5, align 8, !tbaa !30
  %arrayidx = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %7, i64 %idxprom
  %marknum = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx, i32 0, i32 5
  %8 = load i32, i32* %marknum, align 4, !tbaa !180
  %add = add i32 %8, 1
  %9 = load i32, i32* %tileno.addr, align 4, !tbaa !5
  %idxprom6 = zext i32 %9 to i64
  %10 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index.addr, align 8, !tbaa !1
  %tile_index7 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %10, i32 0, i32 7
  %11 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index7, align 8, !tbaa !30
  %arrayidx8 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %11, i64 %idxprom6
  %maxmarknum = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx8, i32 0, i32 7
  %12 = load i32, i32* %maxmarknum, align 4, !tbaa !179
  %cmp9 = icmp ugt i32 %add, %12
  br i1 %cmp9, label %if.then, label %if.end.61

if.then:                                          ; preds = %cond.end.4
  %13 = bitcast %struct.opj_marker_info** %new_marker to i8*
  call void @llvm.lifetime.start(i64 8, i8* %13) #1
  %14 = load i32, i32* %tileno.addr, align 4, !tbaa !5
  %idxprom10 = zext i32 %14 to i64
  %15 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index.addr, align 8, !tbaa !1
  %tile_index11 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %15, i32 0, i32 7
  %16 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index11, align 8, !tbaa !30
  %arrayidx12 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %16, i64 %idxprom10
  %maxmarknum13 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx12, i32 0, i32 7
  %17 = load i32, i32* %maxmarknum13, align 4, !tbaa !179
  %conv = uitofp i32 %17 to float
  %mul = fmul float %conv, 1.000000e+00
  %conv14 = fptosi float %mul to i32
  %add15 = add nsw i32 100, %conv14
  %18 = load i32, i32* %tileno.addr, align 4, !tbaa !5
  %idxprom16 = zext i32 %18 to i64
  %19 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index.addr, align 8, !tbaa !1
  %tile_index17 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %19, i32 0, i32 7
  %20 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index17, align 8, !tbaa !30
  %arrayidx18 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %20, i64 %idxprom16
  %maxmarknum19 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx18, i32 0, i32 7
  store i32 %add15, i32* %maxmarknum19, align 4, !tbaa !179
  %21 = load i32, i32* %tileno.addr, align 4, !tbaa !5
  %idxprom20 = zext i32 %21 to i64
  %22 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index.addr, align 8, !tbaa !1
  %tile_index21 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %22, i32 0, i32 7
  %23 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index21, align 8, !tbaa !30
  %arrayidx22 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %23, i64 %idxprom20
  %maxmarknum23 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx22, i32 0, i32 7
  %24 = load i32, i32* %maxmarknum23, align 4, !tbaa !179
  %conv24 = zext i32 %24 to i64
  %mul25 = mul i64 %conv24, 24
  %cmp26 = icmp uge i64 %mul25, -256
  br i1 %cmp26, label %cond.true.28, label %cond.false.29

cond.true.28:                                     ; preds = %if.then
  br label %cond.end.39

cond.false.29:                                    ; preds = %if.then
  %25 = load i32, i32* %tileno.addr, align 4, !tbaa !5
  %idxprom30 = zext i32 %25 to i64
  %26 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index.addr, align 8, !tbaa !1
  %tile_index31 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %26, i32 0, i32 7
  %27 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index31, align 8, !tbaa !30
  %arrayidx32 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %27, i64 %idxprom30
  %marker = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx32, i32 0, i32 6
  %28 = load %struct.opj_marker_info*, %struct.opj_marker_info** %marker, align 8, !tbaa !181
  %29 = bitcast %struct.opj_marker_info* %28 to i8*
  %30 = load i32, i32* %tileno.addr, align 4, !tbaa !5
  %idxprom33 = zext i32 %30 to i64
  %31 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index.addr, align 8, !tbaa !1
  %tile_index34 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %31, i32 0, i32 7
  %32 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index34, align 8, !tbaa !30
  %arrayidx35 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %32, i64 %idxprom33
  %maxmarknum36 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx35, i32 0, i32 7
  %33 = load i32, i32* %maxmarknum36, align 4, !tbaa !179
  %conv37 = zext i32 %33 to i64
  %mul38 = mul i64 %conv37, 24
  %call = call i8* @realloc(i8* %29, i64 %mul38) #9
  br label %cond.end.39

cond.end.39:                                      ; preds = %cond.false.29, %cond.true.28
  %cond = phi i8* [ null, %cond.true.28 ], [ %call, %cond.false.29 ]
  %34 = bitcast i8* %cond to %struct.opj_marker_info*
  store %struct.opj_marker_info* %34, %struct.opj_marker_info** %new_marker, align 8, !tbaa !1
  %35 = load %struct.opj_marker_info*, %struct.opj_marker_info** %new_marker, align 8, !tbaa !1
  %tobool = icmp ne %struct.opj_marker_info* %35, null
  br i1 %tobool, label %if.end, label %if.then.40

if.then.40:                                       ; preds = %cond.end.39
  %36 = load i32, i32* %tileno.addr, align 4, !tbaa !5
  %idxprom41 = zext i32 %36 to i64
  %37 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index.addr, align 8, !tbaa !1
  %tile_index42 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %37, i32 0, i32 7
  %38 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index42, align 8, !tbaa !30
  %arrayidx43 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %38, i64 %idxprom41
  %marker44 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx43, i32 0, i32 6
  %39 = load %struct.opj_marker_info*, %struct.opj_marker_info** %marker44, align 8, !tbaa !181
  %40 = bitcast %struct.opj_marker_info* %39 to i8*
  call void @free(i8* %40) #9
  %41 = load i32, i32* %tileno.addr, align 4, !tbaa !5
  %idxprom45 = zext i32 %41 to i64
  %42 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index.addr, align 8, !tbaa !1
  %tile_index46 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %42, i32 0, i32 7
  %43 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index46, align 8, !tbaa !30
  %arrayidx47 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %43, i64 %idxprom45
  %marker48 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx47, i32 0, i32 6
  store %struct.opj_marker_info* null, %struct.opj_marker_info** %marker48, align 8, !tbaa !181
  %44 = load i32, i32* %tileno.addr, align 4, !tbaa !5
  %idxprom49 = zext i32 %44 to i64
  %45 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index.addr, align 8, !tbaa !1
  %tile_index50 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %45, i32 0, i32 7
  %46 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index50, align 8, !tbaa !30
  %arrayidx51 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %46, i64 %idxprom49
  %maxmarknum52 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx51, i32 0, i32 7
  store i32 0, i32* %maxmarknum52, align 4, !tbaa !179
  %47 = load i32, i32* %tileno.addr, align 4, !tbaa !5
  %idxprom53 = zext i32 %47 to i64
  %48 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index.addr, align 8, !tbaa !1
  %tile_index54 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %48, i32 0, i32 7
  %49 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index54, align 8, !tbaa !30
  %arrayidx55 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %49, i64 %idxprom53
  %marknum56 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx55, i32 0, i32 5
  store i32 0, i32* %marknum56, align 4, !tbaa !180
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %cond.end.39
  %50 = load %struct.opj_marker_info*, %struct.opj_marker_info** %new_marker, align 8, !tbaa !1
  %51 = load i32, i32* %tileno.addr, align 4, !tbaa !5
  %idxprom57 = zext i32 %51 to i64
  %52 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index.addr, align 8, !tbaa !1
  %tile_index58 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %52, i32 0, i32 7
  %53 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index58, align 8, !tbaa !30
  %arrayidx59 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %53, i64 %idxprom57
  %marker60 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx59, i32 0, i32 6
  store %struct.opj_marker_info* %50, %struct.opj_marker_info** %marker60, align 8, !tbaa !181
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then.40
  %54 = bitcast %struct.opj_marker_info** %new_marker to i8*
  call void @llvm.lifetime.end(i64 8, i8* %54) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %return
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.61

if.end.61:                                        ; preds = %cleanup.cont, %cond.end.4
  %55 = load i32, i32* %type.addr, align 4, !tbaa !5
  %conv62 = trunc i32 %55 to i16
  %56 = load i32, i32* %tileno.addr, align 4, !tbaa !5
  %idxprom63 = zext i32 %56 to i64
  %57 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index.addr, align 8, !tbaa !1
  %tile_index64 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %57, i32 0, i32 7
  %58 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index64, align 8, !tbaa !30
  %arrayidx65 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %58, i64 %idxprom63
  %marknum66 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx65, i32 0, i32 5
  %59 = load i32, i32* %marknum66, align 4, !tbaa !180
  %idxprom67 = zext i32 %59 to i64
  %60 = load i32, i32* %tileno.addr, align 4, !tbaa !5
  %idxprom68 = zext i32 %60 to i64
  %61 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index.addr, align 8, !tbaa !1
  %tile_index69 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %61, i32 0, i32 7
  %62 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index69, align 8, !tbaa !30
  %arrayidx70 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %62, i64 %idxprom68
  %marker71 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx70, i32 0, i32 6
  %63 = load %struct.opj_marker_info*, %struct.opj_marker_info** %marker71, align 8, !tbaa !181
  %arrayidx72 = getelementptr inbounds %struct.opj_marker_info, %struct.opj_marker_info* %63, i64 %idxprom67
  %type73 = getelementptr inbounds %struct.opj_marker_info, %struct.opj_marker_info* %arrayidx72, i32 0, i32 0
  store i16 %conv62, i16* %type73, align 2, !tbaa !200
  %64 = load i64, i64* %pos.addr, align 8, !tbaa !135
  %conv74 = trunc i64 %64 to i32
  %conv75 = sext i32 %conv74 to i64
  %65 = load i32, i32* %tileno.addr, align 4, !tbaa !5
  %idxprom76 = zext i32 %65 to i64
  %66 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index.addr, align 8, !tbaa !1
  %tile_index77 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %66, i32 0, i32 7
  %67 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index77, align 8, !tbaa !30
  %arrayidx78 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %67, i64 %idxprom76
  %marknum79 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx78, i32 0, i32 5
  %68 = load i32, i32* %marknum79, align 4, !tbaa !180
  %idxprom80 = zext i32 %68 to i64
  %69 = load i32, i32* %tileno.addr, align 4, !tbaa !5
  %idxprom81 = zext i32 %69 to i64
  %70 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index.addr, align 8, !tbaa !1
  %tile_index82 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %70, i32 0, i32 7
  %71 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index82, align 8, !tbaa !30
  %arrayidx83 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %71, i64 %idxprom81
  %marker84 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx83, i32 0, i32 6
  %72 = load %struct.opj_marker_info*, %struct.opj_marker_info** %marker84, align 8, !tbaa !181
  %arrayidx85 = getelementptr inbounds %struct.opj_marker_info, %struct.opj_marker_info* %72, i64 %idxprom80
  %pos86 = getelementptr inbounds %struct.opj_marker_info, %struct.opj_marker_info* %arrayidx85, i32 0, i32 1
  store i64 %conv75, i64* %pos86, align 8, !tbaa !202
  %73 = load i32, i32* %len.addr, align 4, !tbaa !5
  %74 = load i32, i32* %tileno.addr, align 4, !tbaa !5
  %idxprom87 = zext i32 %74 to i64
  %75 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index.addr, align 8, !tbaa !1
  %tile_index88 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %75, i32 0, i32 7
  %76 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index88, align 8, !tbaa !30
  %arrayidx89 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %76, i64 %idxprom87
  %marknum90 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx89, i32 0, i32 5
  %77 = load i32, i32* %marknum90, align 4, !tbaa !180
  %idxprom91 = zext i32 %77 to i64
  %78 = load i32, i32* %tileno.addr, align 4, !tbaa !5
  %idxprom92 = zext i32 %78 to i64
  %79 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index.addr, align 8, !tbaa !1
  %tile_index93 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %79, i32 0, i32 7
  %80 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index93, align 8, !tbaa !30
  %arrayidx94 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %80, i64 %idxprom92
  %marker95 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx94, i32 0, i32 6
  %81 = load %struct.opj_marker_info*, %struct.opj_marker_info** %marker95, align 8, !tbaa !181
  %arrayidx96 = getelementptr inbounds %struct.opj_marker_info, %struct.opj_marker_info* %81, i64 %idxprom91
  %len97 = getelementptr inbounds %struct.opj_marker_info, %struct.opj_marker_info* %arrayidx96, i32 0, i32 2
  store i32 %73, i32* %len97, align 4, !tbaa !203
  %82 = load i32, i32* %tileno.addr, align 4, !tbaa !5
  %idxprom98 = zext i32 %82 to i64
  %83 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index.addr, align 8, !tbaa !1
  %tile_index99 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %83, i32 0, i32 7
  %84 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index99, align 8, !tbaa !30
  %arrayidx100 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %84, i64 %idxprom98
  %marknum101 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx100, i32 0, i32 5
  %85 = load i32, i32* %marknum101, align 4, !tbaa !180
  %inc = add i32 %85, 1
  store i32 %inc, i32* %marknum101, align 4, !tbaa !180
  %86 = load i32, i32* %type.addr, align 4, !tbaa !5
  %cmp102 = icmp eq i32 %86, 65424
  br i1 %cmp102, label %if.then.104, label %if.end.120

if.then.104:                                      ; preds = %if.end.61
  %87 = bitcast i32* %l_current_tile_part to i8*
  call void @llvm.lifetime.start(i64 4, i8* %87) #1
  %88 = load i32, i32* %tileno.addr, align 4, !tbaa !5
  %idxprom105 = zext i32 %88 to i64
  %89 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index.addr, align 8, !tbaa !1
  %tile_index106 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %89, i32 0, i32 7
  %90 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index106, align 8, !tbaa !30
  %arrayidx107 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %90, i64 %idxprom105
  %current_tpsno = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx107, i32 0, i32 3
  %91 = load i32, i32* %current_tpsno, align 4, !tbaa !34
  store i32 %91, i32* %l_current_tile_part, align 4, !tbaa !5
  %92 = load i32, i32* %tileno.addr, align 4, !tbaa !5
  %idxprom108 = zext i32 %92 to i64
  %93 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index.addr, align 8, !tbaa !1
  %tile_index109 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %93, i32 0, i32 7
  %94 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index109, align 8, !tbaa !30
  %arrayidx110 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %94, i64 %idxprom108
  %tp_index = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx110, i32 0, i32 4
  %95 = load %struct.opj_tp_index*, %struct.opj_tp_index** %tp_index, align 8, !tbaa !37
  %tobool111 = icmp ne %struct.opj_tp_index* %95, null
  br i1 %tobool111, label %if.then.112, label %if.end.119

if.then.112:                                      ; preds = %if.then.104
  %96 = load i64, i64* %pos.addr, align 8, !tbaa !135
  %97 = load i32, i32* %l_current_tile_part, align 4, !tbaa !5
  %idxprom113 = zext i32 %97 to i64
  %98 = load i32, i32* %tileno.addr, align 4, !tbaa !5
  %idxprom114 = zext i32 %98 to i64
  %99 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index.addr, align 8, !tbaa !1
  %tile_index115 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %99, i32 0, i32 7
  %100 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index115, align 8, !tbaa !30
  %arrayidx116 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %100, i64 %idxprom114
  %tp_index117 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx116, i32 0, i32 4
  %101 = load %struct.opj_tp_index*, %struct.opj_tp_index** %tp_index117, align 8, !tbaa !37
  %arrayidx118 = getelementptr inbounds %struct.opj_tp_index, %struct.opj_tp_index* %101, i64 %idxprom113
  %start_pos = getelementptr inbounds %struct.opj_tp_index, %struct.opj_tp_index* %arrayidx118, i32 0, i32 0
  store i64 %96, i64* %start_pos, align 8, !tbaa !204
  br label %if.end.119

if.end.119:                                       ; preds = %if.then.112, %if.then.104
  %102 = bitcast i32* %l_current_tile_part to i8*
  call void @llvm.lifetime.end(i64 4, i8* %102) #1
  br label %if.end.120

if.end.120:                                       ; preds = %if.end.119, %if.end.61
  store i32 1, i32* %retval
  br label %return

return:                                           ; preds = %if.end.120, %cleanup
  %103 = load i32, i32* %retval
  ret i32 %103

unreachable:                                      ; preds = %cleanup
  unreachable
}

declare i64 @opj_stream_tell(%struct.opj_stream_private*) #3

declare i64 @opj_stream_skip(%struct.opj_stream_private*, i64, %struct.opj_event_mgr*) #3

; Function Attrs: nounwind uwtable
define internal i32 @opj_j2k_read_sod(%struct.opj_j2k* %p_j2k, %struct.opj_stream_private* %p_stream, %struct.opj_event_mgr* %p_manager) #0 {
entry:
  %retval = alloca i32, align 4
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %p_stream.addr = alloca %struct.opj_stream_private*, align 8
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  %l_current_read_size = alloca i32, align 4
  %l_cstr_index = alloca %struct.opj_codestream_index*, align 8
  %l_current_data = alloca i8**, align 8
  %l_tcp = alloca %struct.opj_tcp*, align 8
  %l_tile_len = alloca i32*, align 8
  %l_sot_length_pb_detected = alloca i32, align 4
  %l_new_current_data = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  %l_current_pos = alloca i64, align 8
  %l_current_tile_part = alloca i32, align 4
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store %struct.opj_stream_private* %p_stream, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %0 = bitcast i32* %l_current_read_size to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast %struct.opj_codestream_index** %l_cstr_index to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #1
  store %struct.opj_codestream_index* null, %struct.opj_codestream_index** %l_cstr_index, align 8, !tbaa !1
  %2 = bitcast i8*** %l_current_data to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #1
  store i8** null, i8*** %l_current_data, align 8, !tbaa !1
  %3 = bitcast %struct.opj_tcp** %l_tcp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #1
  store %struct.opj_tcp* null, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %4 = bitcast i32** %l_tile_len to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4) #1
  store i32* null, i32** %l_tile_len, align 8, !tbaa !1
  %5 = bitcast i32* %l_sot_length_pb_detected to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #1
  store i32 0, i32* %l_sot_length_pb_detected, align 4, !tbaa !5
  %6 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cmp = icmp ne %struct.opj_j2k* %6, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 4207, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @__PRETTY_FUNCTION__.opj_j2k_read_sod, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %7, %cond.true
  %8 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %cmp1 = icmp ne %struct.opj_event_mgr* %8, null
  br i1 %cmp1, label %cond.true.2, label %cond.false.3

cond.true.2:                                      ; preds = %cond.end
  br label %cond.end.4

cond.false.3:                                     ; preds = %cond.end
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 4208, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @__PRETTY_FUNCTION__.opj_j2k_read_sod, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.4

cond.end.4:                                       ; preds = %9, %cond.true.2
  %10 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %cmp5 = icmp ne %struct.opj_stream_private* %10, null
  br i1 %cmp5, label %cond.true.6, label %cond.false.7

cond.true.6:                                      ; preds = %cond.end.4
  br label %cond.end.8

cond.false.7:                                     ; preds = %cond.end.4
  call void @__assert_fail(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 4209, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @__PRETTY_FUNCTION__.opj_j2k_read_sod, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.8

cond.end.8:                                       ; preds = %11, %cond.true.6
  %12 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %12, i32 0, i32 8
  %13 = load i32, i32* %m_current_tile_number, align 4, !tbaa !11
  %idxprom = zext i32 %13 to i64
  %14 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %14, i32 0, i32 4
  %tcps = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp, i32 0, i32 17
  %15 = load %struct.opj_tcp*, %struct.opj_tcp** %tcps, align 8, !tbaa !88
  %arrayidx = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %15, i64 %idxprom
  store %struct.opj_tcp* %arrayidx, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %16 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %16, i32 0, i32 1
  %m_decoder = bitcast %union.anon* %m_specific_param to %struct.opj_j2k_dec*
  %m_last_tile_part = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder, i32 0, i32 15
  %17 = load i32, i32* %m_last_tile_part, align 4, !tbaa !17
  %tobool = icmp ne i32 %17, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %cond.end.8
  %18 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %call = call i64 @opj_stream_get_number_byte_left(%struct.opj_stream_private* %18) #7
  %sub = sub nsw i64 %call, 2
  %conv = trunc i64 %sub to i32
  %19 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param9 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %19, i32 0, i32 1
  %m_decoder10 = bitcast %union.anon* %m_specific_param9 to %struct.opj_j2k_dec*
  %m_sot_length = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder10, i32 0, i32 4
  store i32 %conv, i32* %m_sot_length, align 4, !tbaa !22
  br label %if.end.22

if.else:                                          ; preds = %cond.end.8
  %20 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param11 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %20, i32 0, i32 1
  %m_decoder12 = bitcast %union.anon* %m_specific_param11 to %struct.opj_j2k_dec*
  %m_sot_length13 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder12, i32 0, i32 4
  %21 = load i32, i32* %m_sot_length13, align 4, !tbaa !22
  %cmp14 = icmp uge i32 %21, 2
  br i1 %cmp14, label %if.then.16, label %if.else.21

if.then.16:                                       ; preds = %if.else
  %22 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param17 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %22, i32 0, i32 1
  %m_decoder18 = bitcast %union.anon* %m_specific_param17 to %struct.opj_j2k_dec*
  %m_sot_length19 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder18, i32 0, i32 4
  %23 = load i32, i32* %m_sot_length19, align 4, !tbaa !22
  %sub20 = sub i32 %23, 2
  store i32 %sub20, i32* %m_sot_length19, align 4, !tbaa !22
  br label %if.end

if.else.21:                                       ; preds = %if.else
  br label %if.end

if.end:                                           ; preds = %if.else.21, %if.then.16
  br label %if.end.22

if.end.22:                                        ; preds = %if.end, %if.then
  %24 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %m_data = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %24, i32 0, i32 15
  store i8** %m_data, i8*** %l_current_data, align 8, !tbaa !1
  %25 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %m_data_size = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %25, i32 0, i32 16
  store i32* %m_data_size, i32** %l_tile_len, align 8, !tbaa !1
  %26 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param23 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %26, i32 0, i32 1
  %m_decoder24 = bitcast %union.anon* %m_specific_param23 to %struct.opj_j2k_dec*
  %m_sot_length25 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder24, i32 0, i32 4
  %27 = load i32, i32* %m_sot_length25, align 4, !tbaa !22
  %tobool26 = icmp ne i32 %27, 0
  br i1 %tobool26, label %if.then.27, label %if.else.70

if.then.27:                                       ; preds = %if.end.22
  %28 = load i8**, i8*** %l_current_data, align 8, !tbaa !1
  %29 = load i8*, i8** %28, align 8, !tbaa !1
  %tobool28 = icmp ne i8* %29, null
  br i1 %tobool28, label %if.else.44, label %if.then.29

if.then.29:                                       ; preds = %if.then.27
  %30 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param30 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %30, i32 0, i32 1
  %m_decoder31 = bitcast %union.anon* %m_specific_param30 to %struct.opj_j2k_dec*
  %m_sot_length32 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder31, i32 0, i32 4
  %31 = load i32, i32* %m_sot_length32, align 4, !tbaa !22
  %conv33 = zext i32 %31 to i64
  %cmp34 = icmp uge i64 %conv33, -256
  br i1 %cmp34, label %cond.true.36, label %cond.false.37

cond.true.36:                                     ; preds = %if.then.29
  br label %cond.end.43

cond.false.37:                                    ; preds = %if.then.29
  %32 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param38 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %32, i32 0, i32 1
  %m_decoder39 = bitcast %union.anon* %m_specific_param38 to %struct.opj_j2k_dec*
  %m_sot_length40 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder39, i32 0, i32 4
  %33 = load i32, i32* %m_sot_length40, align 4, !tbaa !22
  %conv41 = zext i32 %33 to i64
  %call42 = call noalias i8* @malloc(i64 %conv41) #9
  br label %cond.end.43

cond.end.43:                                      ; preds = %cond.false.37, %cond.true.36
  %cond = phi i8* [ null, %cond.true.36 ], [ %call42, %cond.false.37 ]
  %34 = load i8**, i8*** %l_current_data, align 8, !tbaa !1
  store i8* %cond, i8** %34, align 8, !tbaa !1
  br label %if.end.64

if.else.44:                                       ; preds = %if.then.27
  %35 = bitcast i8** %l_new_current_data to i8*
  call void @llvm.lifetime.start(i64 8, i8* %35) #1
  %36 = load i32*, i32** %l_tile_len, align 8, !tbaa !1
  %37 = load i32, i32* %36, align 4, !tbaa !5
  %38 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param45 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %38, i32 0, i32 1
  %m_decoder46 = bitcast %union.anon* %m_specific_param45 to %struct.opj_j2k_dec*
  %m_sot_length47 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder46, i32 0, i32 4
  %39 = load i32, i32* %m_sot_length47, align 4, !tbaa !22
  %add = add i32 %37, %39
  %conv48 = zext i32 %add to i64
  %cmp49 = icmp uge i64 %conv48, -256
  br i1 %cmp49, label %cond.true.51, label %cond.false.52

cond.true.51:                                     ; preds = %if.else.44
  br label %cond.end.59

cond.false.52:                                    ; preds = %if.else.44
  %40 = load i8**, i8*** %l_current_data, align 8, !tbaa !1
  %41 = load i8*, i8** %40, align 8, !tbaa !1
  %42 = load i32*, i32** %l_tile_len, align 8, !tbaa !1
  %43 = load i32, i32* %42, align 4, !tbaa !5
  %44 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param53 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %44, i32 0, i32 1
  %m_decoder54 = bitcast %union.anon* %m_specific_param53 to %struct.opj_j2k_dec*
  %m_sot_length55 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder54, i32 0, i32 4
  %45 = load i32, i32* %m_sot_length55, align 4, !tbaa !22
  %add56 = add i32 %43, %45
  %conv57 = zext i32 %add56 to i64
  %call58 = call i8* @realloc(i8* %41, i64 %conv57) #9
  br label %cond.end.59

cond.end.59:                                      ; preds = %cond.false.52, %cond.true.51
  %cond60 = phi i8* [ null, %cond.true.51 ], [ %call58, %cond.false.52 ]
  store i8* %cond60, i8** %l_new_current_data, align 8, !tbaa !1
  %46 = load i8*, i8** %l_new_current_data, align 8, !tbaa !1
  %tobool61 = icmp ne i8* %46, null
  br i1 %tobool61, label %if.end.63, label %if.then.62

if.then.62:                                       ; preds = %cond.end.59
  %47 = load i8**, i8*** %l_current_data, align 8, !tbaa !1
  %48 = load i8*, i8** %47, align 8, !tbaa !1
  call void @free(i8* %48) #9
  br label %if.end.63

if.end.63:                                        ; preds = %if.then.62, %cond.end.59
  %49 = load i8*, i8** %l_new_current_data, align 8, !tbaa !1
  %50 = load i8**, i8*** %l_current_data, align 8, !tbaa !1
  store i8* %49, i8** %50, align 8, !tbaa !1
  %51 = bitcast i8** %l_new_current_data to i8*
  call void @llvm.lifetime.end(i64 8, i8* %51) #1
  br label %if.end.64

if.end.64:                                        ; preds = %if.end.63, %cond.end.43
  %52 = load i8**, i8*** %l_current_data, align 8, !tbaa !1
  %53 = load i8*, i8** %52, align 8, !tbaa !1
  %cmp65 = icmp eq i8* %53, null
  br i1 %cmp65, label %if.then.67, label %if.end.69

if.then.67:                                       ; preds = %if.end.64
  %54 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call68 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %54, i32 1, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.128, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.135

if.end.69:                                        ; preds = %if.end.64
  br label %if.end.71

if.else.70:                                       ; preds = %if.end.22
  store i32 1, i32* %l_sot_length_pb_detected, align 4, !tbaa !5
  br label %if.end.71

if.end.71:                                        ; preds = %if.else.70, %if.end.69
  %55 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cstr_index = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %55, i32 0, i32 7
  %56 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index, align 8, !tbaa !29
  store %struct.opj_codestream_index* %56, %struct.opj_codestream_index** %l_cstr_index, align 8, !tbaa !1
  %57 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %l_cstr_index, align 8, !tbaa !1
  %tobool72 = icmp ne %struct.opj_codestream_index* %57, null
  br i1 %tobool72, label %if.then.73, label %if.end.110

if.then.73:                                       ; preds = %if.end.71
  %58 = bitcast i64* %l_current_pos to i8*
  call void @llvm.lifetime.start(i64 8, i8* %58) #1
  %59 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %call74 = call i64 @opj_stream_tell(%struct.opj_stream_private* %59) #7
  %sub75 = sub nsw i64 %call74, 2
  store i64 %sub75, i64* %l_current_pos, align 8, !tbaa !135
  %60 = bitcast i32* %l_current_tile_part to i8*
  call void @llvm.lifetime.start(i64 4, i8* %60) #1
  %61 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number76 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %61, i32 0, i32 8
  %62 = load i32, i32* %m_current_tile_number76, align 4, !tbaa !11
  %idxprom77 = zext i32 %62 to i64
  %63 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %l_cstr_index, align 8, !tbaa !1
  %tile_index = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %63, i32 0, i32 7
  %64 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index, align 8, !tbaa !30
  %arrayidx78 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %64, i64 %idxprom77
  %current_tpsno = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx78, i32 0, i32 3
  %65 = load i32, i32* %current_tpsno, align 4, !tbaa !34
  store i32 %65, i32* %l_current_tile_part, align 4, !tbaa !5
  %66 = load i64, i64* %l_current_pos, align 8, !tbaa !135
  %67 = load i32, i32* %l_current_tile_part, align 4, !tbaa !5
  %idxprom79 = zext i32 %67 to i64
  %68 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number80 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %68, i32 0, i32 8
  %69 = load i32, i32* %m_current_tile_number80, align 4, !tbaa !11
  %idxprom81 = zext i32 %69 to i64
  %70 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %l_cstr_index, align 8, !tbaa !1
  %tile_index82 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %70, i32 0, i32 7
  %71 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index82, align 8, !tbaa !30
  %arrayidx83 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %71, i64 %idxprom81
  %tp_index = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx83, i32 0, i32 4
  %72 = load %struct.opj_tp_index*, %struct.opj_tp_index** %tp_index, align 8, !tbaa !37
  %arrayidx84 = getelementptr inbounds %struct.opj_tp_index, %struct.opj_tp_index* %72, i64 %idxprom79
  %end_header = getelementptr inbounds %struct.opj_tp_index, %struct.opj_tp_index* %arrayidx84, i32 0, i32 1
  store i64 %66, i64* %end_header, align 8, !tbaa !206
  %73 = load i64, i64* %l_current_pos, align 8, !tbaa !135
  %74 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param85 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %74, i32 0, i32 1
  %m_decoder86 = bitcast %union.anon* %m_specific_param85 to %struct.opj_j2k_dec*
  %m_sot_length87 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder86, i32 0, i32 4
  %75 = load i32, i32* %m_sot_length87, align 4, !tbaa !22
  %conv88 = zext i32 %75 to i64
  %add89 = add nsw i64 %73, %conv88
  %add90 = add nsw i64 %add89, 2
  %76 = load i32, i32* %l_current_tile_part, align 4, !tbaa !5
  %idxprom91 = zext i32 %76 to i64
  %77 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number92 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %77, i32 0, i32 8
  %78 = load i32, i32* %m_current_tile_number92, align 4, !tbaa !11
  %idxprom93 = zext i32 %78 to i64
  %79 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %l_cstr_index, align 8, !tbaa !1
  %tile_index94 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %79, i32 0, i32 7
  %80 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index94, align 8, !tbaa !30
  %arrayidx95 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %80, i64 %idxprom93
  %tp_index96 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx95, i32 0, i32 4
  %81 = load %struct.opj_tp_index*, %struct.opj_tp_index** %tp_index96, align 8, !tbaa !37
  %arrayidx97 = getelementptr inbounds %struct.opj_tp_index, %struct.opj_tp_index* %81, i64 %idxprom91
  %end_pos = getelementptr inbounds %struct.opj_tp_index, %struct.opj_tp_index* %arrayidx97, i32 0, i32 2
  store i64 %add90, i64* %end_pos, align 8, !tbaa !207
  %82 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number98 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %82, i32 0, i32 8
  %83 = load i32, i32* %m_current_tile_number98, align 4, !tbaa !11
  %84 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %l_cstr_index, align 8, !tbaa !1
  %85 = load i64, i64* %l_current_pos, align 8, !tbaa !135
  %86 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param99 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %86, i32 0, i32 1
  %m_decoder100 = bitcast %union.anon* %m_specific_param99 to %struct.opj_j2k_dec*
  %m_sot_length101 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder100, i32 0, i32 4
  %87 = load i32, i32* %m_sot_length101, align 4, !tbaa !22
  %add102 = add i32 %87, 2
  %call103 = call i32 @opj_j2k_add_tlmarker(i32 %83, %struct.opj_codestream_index* %84, i32 65427, i64 %85, i32 %add102) #7
  %cmp104 = icmp eq i32 0, %call103
  br i1 %cmp104, label %if.then.106, label %if.end.108

if.then.106:                                      ; preds = %if.then.73
  %88 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call107 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %88, i32 1, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.12, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.108:                                       ; preds = %if.then.73
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.108, %if.then.106
  %89 = bitcast i32* %l_current_tile_part to i8*
  call void @llvm.lifetime.end(i64 4, i8* %89) #1
  %90 = bitcast i64* %l_current_pos to i8*
  call void @llvm.lifetime.end(i64 8, i8* %90) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.135 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.110

if.end.110:                                       ; preds = %cleanup.cont, %if.end.71
  %91 = load i32, i32* %l_sot_length_pb_detected, align 4, !tbaa !5
  %tobool111 = icmp ne i32 %91, 0
  br i1 %tobool111, label %if.else.119, label %if.then.112

if.then.112:                                      ; preds = %if.end.110
  %92 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %93 = load i8**, i8*** %l_current_data, align 8, !tbaa !1
  %94 = load i8*, i8** %93, align 8, !tbaa !1
  %95 = load i32*, i32** %l_tile_len, align 8, !tbaa !1
  %96 = load i32, i32* %95, align 4, !tbaa !5
  %idx.ext = zext i32 %96 to i64
  %add.ptr = getelementptr inbounds i8, i8* %94, i64 %idx.ext
  %97 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param113 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %97, i32 0, i32 1
  %m_decoder114 = bitcast %union.anon* %m_specific_param113 to %struct.opj_j2k_dec*
  %m_sot_length115 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder114, i32 0, i32 4
  %98 = load i32, i32* %m_sot_length115, align 4, !tbaa !22
  %conv116 = zext i32 %98 to i64
  %99 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call117 = call i64 @opj_stream_read_data(%struct.opj_stream_private* %92, i8* %add.ptr, i64 %conv116, %struct.opj_event_mgr* %99) #7
  %conv118 = trunc i64 %call117 to i32
  store i32 %conv118, i32* %l_current_read_size, align 4, !tbaa !5
  br label %if.end.120

if.else.119:                                      ; preds = %if.end.110
  store i32 0, i32* %l_current_read_size, align 4, !tbaa !5
  br label %if.end.120

if.end.120:                                       ; preds = %if.else.119, %if.then.112
  %100 = load i32, i32* %l_current_read_size, align 4, !tbaa !5
  %101 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param121 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %101, i32 0, i32 1
  %m_decoder122 = bitcast %union.anon* %m_specific_param121 to %struct.opj_j2k_dec*
  %m_sot_length123 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder122, i32 0, i32 4
  %102 = load i32, i32* %m_sot_length123, align 4, !tbaa !22
  %cmp124 = icmp ne i32 %100, %102
  br i1 %cmp124, label %if.then.126, label %if.else.129

if.then.126:                                      ; preds = %if.end.120
  %103 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param127 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %103, i32 0, i32 1
  %m_decoder128 = bitcast %union.anon* %m_specific_param127 to %struct.opj_j2k_dec*
  %m_state = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder128, i32 0, i32 0
  store i32 64, i32* %m_state, align 4, !tbaa !23
  br label %if.end.133

if.else.129:                                      ; preds = %if.end.120
  %104 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param130 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %104, i32 0, i32 1
  %m_decoder131 = bitcast %union.anon* %m_specific_param130 to %struct.opj_j2k_dec*
  %m_state132 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder131, i32 0, i32 0
  store i32 8, i32* %m_state132, align 4, !tbaa !23
  br label %if.end.133

if.end.133:                                       ; preds = %if.else.129, %if.then.126
  %105 = load i32, i32* %l_current_read_size, align 4, !tbaa !5
  %106 = load i32*, i32** %l_tile_len, align 8, !tbaa !1
  %107 = load i32, i32* %106, align 4, !tbaa !5
  %add134 = add i32 %107, %105
  store i32 %add134, i32* %106, align 4, !tbaa !5
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.135

cleanup.135:                                      ; preds = %if.end.133, %cleanup, %if.then.67
  %108 = bitcast i32* %l_sot_length_pb_detected to i8*
  call void @llvm.lifetime.end(i64 4, i8* %108) #1
  %109 = bitcast i32** %l_tile_len to i8*
  call void @llvm.lifetime.end(i64 8, i8* %109) #1
  %110 = bitcast %struct.opj_tcp** %l_tcp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %110) #1
  %111 = bitcast i8*** %l_current_data to i8*
  call void @llvm.lifetime.end(i64 8, i8* %111) #1
  %112 = bitcast %struct.opj_codestream_index** %l_cstr_index to i8*
  call void @llvm.lifetime.end(i64 8, i8* %112) #1
  %113 = bitcast i32* %l_current_read_size to i8*
  call void @llvm.lifetime.end(i64 4, i8* %113) #1
  %114 = load i32, i32* %retval
  ret i32 %114
}

declare i32 @opj_tcd_init_decode_tile(%struct.opj_tcd*, i32) #3

declare i32 @opj_tcd_get_decoded_tile_size(%struct.opj_tcd*) #3

; Function Attrs: nounwind uwtable
define i32 @opj_j2k_decode_tile(%struct.opj_j2k* %p_j2k, i32 %p_tile_index, i8* %p_data, i32 %p_data_size, %struct.opj_stream_private* %p_stream, %struct.opj_event_mgr* %p_manager) #0 {
entry:
  %retval = alloca i32, align 4
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %p_tile_index.addr = alloca i32, align 4
  %p_data.addr = alloca i8*, align 8
  %p_data_size.addr = alloca i32, align 4
  %p_stream.addr = alloca %struct.opj_stream_private*, align 8
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  %l_current_marker = alloca i32, align 4
  %l_data = alloca [2 x i8], align 1
  %l_tcp = alloca %struct.opj_tcp*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store i32 %p_tile_index, i32* %p_tile_index.addr, align 4, !tbaa !5
  store i8* %p_data, i8** %p_data.addr, align 8, !tbaa !1
  store i32 %p_data_size, i32* %p_data_size.addr, align 4, !tbaa !5
  store %struct.opj_stream_private* %p_stream, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %0 = bitcast i32* %l_current_marker to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast [2 x i8]* %l_data to i8*
  call void @llvm.lifetime.start(i64 2, i8* %1) #1
  %2 = bitcast %struct.opj_tcp** %l_tcp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #1
  %3 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %cmp = icmp ne %struct.opj_stream_private* %3, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 7264, i8* getelementptr inbounds ([121 x i8], [121 x i8]* @__PRETTY_FUNCTION__.opj_j2k_decode_tile, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %4, %cond.true
  %5 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cmp1 = icmp ne %struct.opj_j2k* %5, null
  br i1 %cmp1, label %cond.true.2, label %cond.false.3

cond.true.2:                                      ; preds = %cond.end
  br label %cond.end.4

cond.false.3:                                     ; preds = %cond.end
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 7265, i8* getelementptr inbounds ([121 x i8], [121 x i8]* @__PRETTY_FUNCTION__.opj_j2k_decode_tile, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.4

cond.end.4:                                       ; preds = %6, %cond.true.2
  %7 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %cmp5 = icmp ne %struct.opj_event_mgr* %7, null
  br i1 %cmp5, label %cond.true.6, label %cond.false.7

cond.true.6:                                      ; preds = %cond.end.4
  br label %cond.end.8

cond.false.7:                                     ; preds = %cond.end.4
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 7266, i8* getelementptr inbounds ([121 x i8], [121 x i8]* @__PRETTY_FUNCTION__.opj_j2k_decode_tile, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.8

cond.end.8:                                       ; preds = %8, %cond.true.6
  %9 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %9, i32 0, i32 1
  %m_decoder = bitcast %union.anon* %m_specific_param to %struct.opj_j2k_dec*
  %m_state = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder, i32 0, i32 0
  %10 = load i32, i32* %m_state, align 4, !tbaa !23
  %and = and i32 %10, 128
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %lor.lhs.false, label %if.then

lor.lhs.false:                                    ; preds = %cond.end.8
  %11 = load i32, i32* %p_tile_index.addr, align 4, !tbaa !5
  %12 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %12, i32 0, i32 8
  %13 = load i32, i32* %m_current_tile_number, align 4, !tbaa !11
  %cmp9 = icmp ne i32 %11, %13
  br i1 %cmp9, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %cond.end.8
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %lor.lhs.false
  %14 = load i32, i32* %p_tile_index.addr, align 4, !tbaa !5
  %idxprom = zext i32 %14 to i64
  %15 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %15, i32 0, i32 4
  %tcps = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp, i32 0, i32 17
  %16 = load %struct.opj_tcp*, %struct.opj_tcp** %tcps, align 8, !tbaa !88
  %arrayidx = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %16, i64 %idxprom
  store %struct.opj_tcp* %arrayidx, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %17 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %m_data = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %17, i32 0, i32 15
  %18 = load i8*, i8** %m_data, align 8, !tbaa !189
  %tobool10 = icmp ne i8* %18, null
  br i1 %tobool10, label %if.end.12, label %if.then.11

if.then.11:                                       ; preds = %if.end
  %19 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  call void @opj_j2k_tcp_destroy(%struct.opj_tcp* %19) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.12:                                        ; preds = %if.end
  %20 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_tcd = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %20, i32 0, i32 9
  %21 = load %struct.opj_tcd*, %struct.opj_tcd** %m_tcd, align 8, !tbaa !120
  %22 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %m_data13 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %22, i32 0, i32 15
  %23 = load i8*, i8** %m_data13, align 8, !tbaa !189
  %24 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %m_data_size = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %24, i32 0, i32 16
  %25 = load i32, i32* %m_data_size, align 4, !tbaa !208
  %26 = load i32, i32* %p_tile_index.addr, align 4, !tbaa !5
  %27 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cstr_index = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %27, i32 0, i32 7
  %28 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index, align 8, !tbaa !29
  %call = call i32 @opj_tcd_decode_tile(%struct.opj_tcd* %21, i8* %23, i32 %25, i32 %26, %struct.opj_codestream_index* %28) #7
  %tobool14 = icmp ne i32 %call, 0
  br i1 %tobool14, label %if.end.19, label %if.then.15

if.then.15:                                       ; preds = %if.end.12
  %29 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  call void @opj_j2k_tcp_destroy(%struct.opj_tcp* %29) #7
  %30 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param16 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %30, i32 0, i32 1
  %m_decoder17 = bitcast %union.anon* %m_specific_param16 to %struct.opj_j2k_dec*
  %m_state18 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder17, i32 0, i32 0
  %31 = load i32, i32* %m_state18, align 4, !tbaa !23
  %or = or i32 %31, 32768
  store i32 %or, i32* %m_state18, align 4, !tbaa !23
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.19:                                        ; preds = %if.end.12
  %32 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_tcd20 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %32, i32 0, i32 9
  %33 = load %struct.opj_tcd*, %struct.opj_tcd** %m_tcd20, align 8, !tbaa !120
  %34 = load i8*, i8** %p_data.addr, align 8, !tbaa !1
  %35 = load i32, i32* %p_data_size.addr, align 4, !tbaa !5
  %call21 = call i32 @opj_tcd_update_tile_data(%struct.opj_tcd* %33, i8* %34, i32 %35) #7
  %tobool22 = icmp ne i32 %call21, 0
  br i1 %tobool22, label %if.end.24, label %if.then.23

if.then.23:                                       ; preds = %if.end.19
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.24:                                        ; preds = %if.end.19
  %36 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  call void @opj_j2k_tcp_data_destroy(%struct.opj_tcp* %36) #7
  %37 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param25 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %37, i32 0, i32 1
  %m_decoder26 = bitcast %union.anon* %m_specific_param25 to %struct.opj_j2k_dec*
  %m_can_decode = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder26, i32 0, i32 16
  %bf.load = load i8, i8* %m_can_decode, align 4
  %bf.clear = and i8 %bf.load, -2
  store i8 %bf.clear, i8* %m_can_decode, align 4
  %38 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param27 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %38, i32 0, i32 1
  %m_decoder28 = bitcast %union.anon* %m_specific_param27 to %struct.opj_j2k_dec*
  %m_state29 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder28, i32 0, i32 0
  %39 = load i32, i32* %m_state29, align 4, !tbaa !23
  %and30 = and i32 %39, -129
  store i32 %and30, i32* %m_state29, align 4, !tbaa !23
  %40 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %call31 = call i64 @opj_stream_get_number_byte_left(%struct.opj_stream_private* %40) #7
  %cmp32 = icmp eq i64 %call31, 0
  br i1 %cmp32, label %land.lhs.true, label %if.end.38

land.lhs.true:                                    ; preds = %if.end.24
  %41 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param33 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %41, i32 0, i32 1
  %m_decoder34 = bitcast %union.anon* %m_specific_param33 to %struct.opj_j2k_dec*
  %m_state35 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder34, i32 0, i32 0
  %42 = load i32, i32* %m_state35, align 4, !tbaa !23
  %cmp36 = icmp eq i32 %42, 64
  br i1 %cmp36, label %if.then.37, label %if.end.38

if.then.37:                                       ; preds = %land.lhs.true
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.38:                                        ; preds = %land.lhs.true, %if.end.24
  %43 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param39 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %43, i32 0, i32 1
  %m_decoder40 = bitcast %union.anon* %m_specific_param39 to %struct.opj_j2k_dec*
  %m_state41 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder40, i32 0, i32 0
  %44 = load i32, i32* %m_state41, align 4, !tbaa !23
  %cmp42 = icmp ne i32 %44, 256
  br i1 %cmp42, label %if.then.43, label %if.end.68

if.then.43:                                       ; preds = %if.end.38
  %45 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %arraydecay = getelementptr inbounds [2 x i8], [2 x i8]* %l_data, i32 0, i32 0
  %46 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call44 = call i64 @opj_stream_read_data(%struct.opj_stream_private* %45, i8* %arraydecay, i64 2, %struct.opj_event_mgr* %46) #7
  %cmp45 = icmp ne i64 %call44, 2
  br i1 %cmp45, label %if.then.46, label %if.end.48

if.then.46:                                       ; preds = %if.then.43
  %47 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call47 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %47, i32 1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.48:                                        ; preds = %if.then.43
  %arraydecay49 = getelementptr inbounds [2 x i8], [2 x i8]* %l_data, i32 0, i32 0
  call void @opj_read_bytes_LE(i8* %arraydecay49, i32* %l_current_marker, i32 2) #7
  %48 = load i32, i32* %l_current_marker, align 4, !tbaa !5
  %cmp50 = icmp eq i32 %48, 65497
  br i1 %cmp50, label %if.then.51, label %if.else

if.then.51:                                       ; preds = %if.end.48
  %49 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number52 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %49, i32 0, i32 8
  store i32 0, i32* %m_current_tile_number52, align 4, !tbaa !11
  %50 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param53 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %50, i32 0, i32 1
  %m_decoder54 = bitcast %union.anon* %m_specific_param53 to %struct.opj_j2k_dec*
  %m_state55 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder54, i32 0, i32 0
  store i32 256, i32* %m_state55, align 4, !tbaa !23
  br label %if.end.67

if.else:                                          ; preds = %if.end.48
  %51 = load i32, i32* %l_current_marker, align 4, !tbaa !5
  %cmp56 = icmp ne i32 %51, 65424
  br i1 %cmp56, label %if.then.57, label %if.end.66

if.then.57:                                       ; preds = %if.else
  %52 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call58 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %52, i32 1, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.15, i32 0, i32 0)) #7
  %53 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %call59 = call i64 @opj_stream_get_number_byte_left(%struct.opj_stream_private* %53) #7
  %cmp60 = icmp eq i64 %call59, 0
  br i1 %cmp60, label %if.then.61, label %if.end.65

if.then.61:                                       ; preds = %if.then.57
  %54 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param62 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %54, i32 0, i32 1
  %m_decoder63 = bitcast %union.anon* %m_specific_param62 to %struct.opj_j2k_dec*
  %m_state64 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder63, i32 0, i32 0
  store i32 64, i32* %m_state64, align 4, !tbaa !23
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.65:                                        ; preds = %if.then.57
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.66:                                        ; preds = %if.else
  br label %if.end.67

if.end.67:                                        ; preds = %if.end.66, %if.then.51
  br label %if.end.68

if.end.68:                                        ; preds = %if.end.67, %if.end.38
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.68, %if.end.65, %if.then.61, %if.then.46, %if.then.37, %if.then.23, %if.then.15, %if.then.11, %if.then
  %55 = bitcast %struct.opj_tcp** %l_tcp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %55) #1
  %56 = bitcast [2 x i8]* %l_data to i8*
  call void @llvm.lifetime.end(i64 2, i8* %56) #1
  %57 = bitcast i32* %l_current_marker to i8*
  call void @llvm.lifetime.end(i64 4, i8* %57) #1
  %58 = load i32, i32* %retval
  ret i32 %58
}

declare i32 @opj_tcd_decode_tile(%struct.opj_tcd*, i8*, i32, i32, %struct.opj_codestream_index*) #3

declare i32 @opj_tcd_update_tile_data(%struct.opj_tcd*, i8*, i32) #3

; Function Attrs: nounwind uwtable
define internal void @opj_j2k_tcp_data_destroy(%struct.opj_tcp* %p_tcp) #0 {
entry:
  %p_tcp.addr = alloca %struct.opj_tcp*, align 8
  store %struct.opj_tcp* %p_tcp, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %0 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %m_data = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %0, i32 0, i32 15
  %1 = load i8*, i8** %m_data, align 8, !tbaa !189
  %tobool = icmp ne i8* %1, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %m_data1 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %2, i32 0, i32 15
  %3 = load i8*, i8** %m_data1, align 8, !tbaa !189
  call void @free(i8* %3) #9
  %4 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %m_data2 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %4, i32 0, i32 15
  store i8* null, i8** %m_data2, align 8, !tbaa !189
  %5 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %m_data_size = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %5, i32 0, i32 16
  store i32 0, i32* %m_data_size, align 4, !tbaa !208
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @opj_j2k_set_decode_area(%struct.opj_j2k* %p_j2k, %struct.opj_image* %p_image, i32 %p_start_x, i32 %p_start_y, i32 %p_end_x, i32 %p_end_y, %struct.opj_event_mgr* %p_manager) #0 {
entry:
  %retval = alloca i32, align 4
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %p_image.addr = alloca %struct.opj_image*, align 8
  %p_start_x.addr = alloca i32, align 4
  %p_start_y.addr = alloca i32, align 4
  %p_end_x.addr = alloca i32, align 4
  %p_end_y.addr = alloca i32, align 4
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  %l_cp = alloca %struct.opj_cp*, align 8
  %l_image = alloca %struct.opj_image*, align 8
  %it_comp = alloca i32, align 4
  %l_comp_x1 = alloca i32, align 4
  %l_comp_y1 = alloca i32, align 4
  %l_img_comp = alloca %struct.opj_image_comp*, align 8
  %cleanup.dest.slot = alloca i32
  %l_h = alloca i32, align 4
  %l_w = alloca i32, align 4
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store %struct.opj_image* %p_image, %struct.opj_image** %p_image.addr, align 8, !tbaa !1
  store i32 %p_start_x, i32* %p_start_x.addr, align 4, !tbaa !5
  store i32 %p_start_y, i32* %p_start_y.addr, align 4, !tbaa !5
  store i32 %p_end_x, i32* %p_end_x.addr, align 4, !tbaa !5
  store i32 %p_end_y, i32* %p_end_y.addr, align 4, !tbaa !5
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %0 = bitcast %struct.opj_cp** %l_cp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %1, i32 0, i32 4
  store %struct.opj_cp* %m_cp, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %2 = bitcast %struct.opj_image** %l_image to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #1
  %3 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_private_image = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %3, i32 0, i32 2
  %4 = load %struct.opj_image*, %struct.opj_image** %m_private_image, align 8, !tbaa !38
  store %struct.opj_image* %4, %struct.opj_image** %l_image, align 8, !tbaa !1
  %5 = bitcast i32* %it_comp to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #1
  %6 = bitcast i32* %l_comp_x1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %6) #1
  %7 = bitcast i32* %l_comp_y1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %7) #1
  %8 = bitcast %struct.opj_image_comp** %l_img_comp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8) #1
  store %struct.opj_image_comp* null, %struct.opj_image_comp** %l_img_comp, align 8, !tbaa !1
  %9 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %9, i32 0, i32 1
  %m_decoder = bitcast %union.anon* %m_specific_param to %struct.opj_j2k_dec*
  %m_state = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder, i32 0, i32 0
  %10 = load i32, i32* %m_state, align 4, !tbaa !23
  %cmp = icmp ne i32 %10, 8
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %11 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %11, i32 1, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.16, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.168

if.end:                                           ; preds = %entry
  %12 = load i32, i32* %p_start_x.addr, align 4, !tbaa !5
  %tobool = icmp ne i32 %12, 0
  br i1 %tobool, label %if.end.16, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end
  %13 = load i32, i32* %p_start_y.addr, align 4, !tbaa !5
  %tobool1 = icmp ne i32 %13, 0
  br i1 %tobool1, label %if.end.16, label %land.lhs.true.2

land.lhs.true.2:                                  ; preds = %land.lhs.true
  %14 = load i32, i32* %p_end_x.addr, align 4, !tbaa !5
  %tobool3 = icmp ne i32 %14, 0
  br i1 %tobool3, label %if.end.16, label %land.lhs.true.4

land.lhs.true.4:                                  ; preds = %land.lhs.true.2
  %15 = load i32, i32* %p_end_y.addr, align 4, !tbaa !5
  %tobool5 = icmp ne i32 %15, 0
  br i1 %tobool5, label %if.end.16, label %if.then.6

if.then.6:                                        ; preds = %land.lhs.true.4
  %16 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call7 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %16, i32 4, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.17, i32 0, i32 0)) #7
  %17 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param8 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %17, i32 0, i32 1
  %m_decoder9 = bitcast %union.anon* %m_specific_param8 to %struct.opj_j2k_dec*
  %m_start_tile_x = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder9, i32 0, i32 5
  store i32 0, i32* %m_start_tile_x, align 4, !tbaa !25
  %18 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param10 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %18, i32 0, i32 1
  %m_decoder11 = bitcast %union.anon* %m_specific_param10 to %struct.opj_j2k_dec*
  %m_start_tile_y = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder11, i32 0, i32 6
  store i32 0, i32* %m_start_tile_y, align 4, !tbaa !27
  %19 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %tw = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %19, i32 0, i32 6
  %20 = load i32, i32* %tw, align 4, !tbaa !14
  %21 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param12 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %21, i32 0, i32 1
  %m_decoder13 = bitcast %union.anon* %m_specific_param12 to %struct.opj_j2k_dec*
  %m_end_tile_x = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder13, i32 0, i32 7
  store i32 %20, i32* %m_end_tile_x, align 4, !tbaa !26
  %22 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %th = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %22, i32 0, i32 7
  %23 = load i32, i32* %th, align 4, !tbaa !15
  %24 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param14 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %24, i32 0, i32 1
  %m_decoder15 = bitcast %union.anon* %m_specific_param14 to %struct.opj_j2k_dec*
  %m_end_tile_y = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder15, i32 0, i32 8
  store i32 %23, i32* %m_end_tile_y, align 4, !tbaa !28
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.168

if.end.16:                                        ; preds = %land.lhs.true.4, %land.lhs.true.2, %land.lhs.true, %if.end
  %25 = load i32, i32* %p_start_x.addr, align 4, !tbaa !5
  %cmp17 = icmp sge i32 %25, 0
  br i1 %cmp17, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end.16
  br label %cond.end

cond.false:                                       ; preds = %if.end.16
  call void @__assert_fail(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 7630, i8* getelementptr inbounds ([124 x i8], [124 x i8]* @__PRETTY_FUNCTION__.opj_j2k_set_decode_area, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %26, %cond.true
  %27 = load i32, i32* %p_start_y.addr, align 4, !tbaa !5
  %cmp18 = icmp sge i32 %27, 0
  br i1 %cmp18, label %cond.true.19, label %cond.false.20

cond.true.19:                                     ; preds = %cond.end
  br label %cond.end.21

cond.false.20:                                    ; preds = %cond.end
  call void @__assert_fail(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 7631, i8* getelementptr inbounds ([124 x i8], [124 x i8]* @__PRETTY_FUNCTION__.opj_j2k_set_decode_area, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.21

cond.end.21:                                      ; preds = %28, %cond.true.19
  %29 = load i32, i32* %p_start_x.addr, align 4, !tbaa !5
  %30 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %x1 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %30, i32 0, i32 2
  %31 = load i32, i32* %x1, align 4, !tbaa !57
  %cmp22 = icmp ugt i32 %29, %31
  br i1 %cmp22, label %if.then.23, label %if.else

if.then.23:                                       ; preds = %cond.end.21
  %32 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %33 = load i32, i32* %p_start_x.addr, align 4, !tbaa !5
  %34 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %x124 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %34, i32 0, i32 2
  %35 = load i32, i32* %x124, align 4, !tbaa !57
  %call25 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %32, i32 1, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @.str.20, i32 0, i32 0), i32 %33, i32 %35) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.168

if.else:                                          ; preds = %cond.end.21
  %36 = load i32, i32* %p_start_x.addr, align 4, !tbaa !5
  %37 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %x0 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %37, i32 0, i32 0
  %38 = load i32, i32* %x0, align 4, !tbaa !56
  %cmp26 = icmp ult i32 %36, %38
  br i1 %cmp26, label %if.then.27, label %if.else.35

if.then.27:                                       ; preds = %if.else
  %39 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %40 = load i32, i32* %p_start_x.addr, align 4, !tbaa !5
  %41 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %x028 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %41, i32 0, i32 0
  %42 = load i32, i32* %x028, align 4, !tbaa !56
  %call29 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %39, i32 2, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.21, i32 0, i32 0), i32 %40, i32 %42) #7
  %43 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param30 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %43, i32 0, i32 1
  %m_decoder31 = bitcast %union.anon* %m_specific_param30 to %struct.opj_j2k_dec*
  %m_start_tile_x32 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder31, i32 0, i32 5
  store i32 0, i32* %m_start_tile_x32, align 4, !tbaa !25
  %44 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %x033 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %44, i32 0, i32 0
  %45 = load i32, i32* %x033, align 4, !tbaa !56
  %46 = load %struct.opj_image*, %struct.opj_image** %p_image.addr, align 8, !tbaa !1
  %x034 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %46, i32 0, i32 0
  store i32 %45, i32* %x034, align 4, !tbaa !56
  br label %if.end.40

if.else.35:                                       ; preds = %if.else
  %47 = load i32, i32* %p_start_x.addr, align 4, !tbaa !5
  %48 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %tx0 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %48, i32 0, i32 1
  %49 = load i32, i32* %tx0, align 4, !tbaa !72
  %sub = sub i32 %47, %49
  %50 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %tdx = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %50, i32 0, i32 3
  %51 = load i32, i32* %tdx, align 4, !tbaa !60
  %div = udiv i32 %sub, %51
  %52 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param36 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %52, i32 0, i32 1
  %m_decoder37 = bitcast %union.anon* %m_specific_param36 to %struct.opj_j2k_dec*
  %m_start_tile_x38 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder37, i32 0, i32 5
  store i32 %div, i32* %m_start_tile_x38, align 4, !tbaa !25
  %53 = load i32, i32* %p_start_x.addr, align 4, !tbaa !5
  %54 = load %struct.opj_image*, %struct.opj_image** %p_image.addr, align 8, !tbaa !1
  %x039 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %54, i32 0, i32 0
  store i32 %53, i32* %x039, align 4, !tbaa !56
  br label %if.end.40

if.end.40:                                        ; preds = %if.else.35, %if.then.27
  br label %if.end.41

if.end.41:                                        ; preds = %if.end.40
  %55 = load i32, i32* %p_start_y.addr, align 4, !tbaa !5
  %56 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %y1 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %56, i32 0, i32 3
  %57 = load i32, i32* %y1, align 4, !tbaa !59
  %cmp42 = icmp ugt i32 %55, %57
  br i1 %cmp42, label %if.then.43, label %if.else.46

if.then.43:                                       ; preds = %if.end.41
  %58 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %59 = load i32, i32* %p_start_y.addr, align 4, !tbaa !5
  %60 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %y144 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %60, i32 0, i32 3
  %61 = load i32, i32* %y144, align 4, !tbaa !59
  %call45 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %58, i32 1, i8* getelementptr inbounds ([85 x i8], [85 x i8]* @.str.22, i32 0, i32 0), i32 %59, i32 %61) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.168

if.else.46:                                       ; preds = %if.end.41
  %62 = load i32, i32* %p_start_y.addr, align 4, !tbaa !5
  %63 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %y0 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %63, i32 0, i32 1
  %64 = load i32, i32* %y0, align 4, !tbaa !58
  %cmp47 = icmp ult i32 %62, %64
  br i1 %cmp47, label %if.then.48, label %if.else.56

if.then.48:                                       ; preds = %if.else.46
  %65 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %66 = load i32, i32* %p_start_y.addr, align 4, !tbaa !5
  %67 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %y049 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %67, i32 0, i32 1
  %68 = load i32, i32* %y049, align 4, !tbaa !58
  %call50 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %65, i32 2, i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str.23, i32 0, i32 0), i32 %66, i32 %68) #7
  %69 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param51 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %69, i32 0, i32 1
  %m_decoder52 = bitcast %union.anon* %m_specific_param51 to %struct.opj_j2k_dec*
  %m_start_tile_y53 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder52, i32 0, i32 6
  store i32 0, i32* %m_start_tile_y53, align 4, !tbaa !27
  %70 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %y054 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %70, i32 0, i32 1
  %71 = load i32, i32* %y054, align 4, !tbaa !58
  %72 = load %struct.opj_image*, %struct.opj_image** %p_image.addr, align 8, !tbaa !1
  %y055 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %72, i32 0, i32 1
  store i32 %71, i32* %y055, align 4, !tbaa !58
  br label %if.end.63

if.else.56:                                       ; preds = %if.else.46
  %73 = load i32, i32* %p_start_y.addr, align 4, !tbaa !5
  %74 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %ty0 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %74, i32 0, i32 2
  %75 = load i32, i32* %ty0, align 4, !tbaa !73
  %sub57 = sub i32 %73, %75
  %76 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %tdy = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %76, i32 0, i32 4
  %77 = load i32, i32* %tdy, align 4, !tbaa !61
  %div58 = udiv i32 %sub57, %77
  %78 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param59 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %78, i32 0, i32 1
  %m_decoder60 = bitcast %union.anon* %m_specific_param59 to %struct.opj_j2k_dec*
  %m_start_tile_y61 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder60, i32 0, i32 6
  store i32 %div58, i32* %m_start_tile_y61, align 4, !tbaa !27
  %79 = load i32, i32* %p_start_y.addr, align 4, !tbaa !5
  %80 = load %struct.opj_image*, %struct.opj_image** %p_image.addr, align 8, !tbaa !1
  %y062 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %80, i32 0, i32 1
  store i32 %79, i32* %y062, align 4, !tbaa !58
  br label %if.end.63

if.end.63:                                        ; preds = %if.else.56, %if.then.48
  br label %if.end.64

if.end.64:                                        ; preds = %if.end.63
  %81 = load i32, i32* %p_end_x.addr, align 4, !tbaa !5
  %cmp65 = icmp ugt i32 %81, 0
  br i1 %cmp65, label %cond.true.66, label %cond.false.67

cond.true.66:                                     ; preds = %if.end.64
  br label %cond.end.68

cond.false.67:                                    ; preds = %if.end.64
  call void @__assert_fail(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 7671, i8* getelementptr inbounds ([124 x i8], [124 x i8]* @__PRETTY_FUNCTION__.opj_j2k_set_decode_area, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.68

cond.end.68:                                      ; preds = %82, %cond.true.66
  %83 = load i32, i32* %p_end_y.addr, align 4, !tbaa !5
  %cmp69 = icmp ugt i32 %83, 0
  br i1 %cmp69, label %cond.true.70, label %cond.false.71

cond.true.70:                                     ; preds = %cond.end.68
  br label %cond.end.72

cond.false.71:                                    ; preds = %cond.end.68
  call void @__assert_fail(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.25, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 7672, i8* getelementptr inbounds ([124 x i8], [124 x i8]* @__PRETTY_FUNCTION__.opj_j2k_set_decode_area, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.72

cond.end.72:                                      ; preds = %84, %cond.true.70
  %85 = load i32, i32* %p_end_x.addr, align 4, !tbaa !5
  %86 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %x073 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %86, i32 0, i32 0
  %87 = load i32, i32* %x073, align 4, !tbaa !56
  %cmp74 = icmp ult i32 %85, %87
  br i1 %cmp74, label %if.then.75, label %if.else.78

if.then.75:                                       ; preds = %cond.end.72
  %88 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %89 = load i32, i32* %p_end_x.addr, align 4, !tbaa !5
  %90 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %x076 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %90, i32 0, i32 0
  %91 = load i32, i32* %x076, align 4, !tbaa !56
  %call77 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %88, i32 1, i8* getelementptr inbounds ([89 x i8], [89 x i8]* @.str.26, i32 0, i32 0), i32 %89, i32 %91) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.168

if.else.78:                                       ; preds = %cond.end.72
  %92 = load i32, i32* %p_end_x.addr, align 4, !tbaa !5
  %93 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %x179 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %93, i32 0, i32 2
  %94 = load i32, i32* %x179, align 4, !tbaa !57
  %cmp80 = icmp ugt i32 %92, %94
  br i1 %cmp80, label %if.then.81, label %if.else.90

if.then.81:                                       ; preds = %if.else.78
  %95 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %96 = load i32, i32* %p_end_x.addr, align 4, !tbaa !5
  %97 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %x182 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %97, i32 0, i32 2
  %98 = load i32, i32* %x182, align 4, !tbaa !57
  %call83 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %95, i32 2, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.27, i32 0, i32 0), i32 %96, i32 %98) #7
  %99 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %tw84 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %99, i32 0, i32 6
  %100 = load i32, i32* %tw84, align 4, !tbaa !14
  %101 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param85 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %101, i32 0, i32 1
  %m_decoder86 = bitcast %union.anon* %m_specific_param85 to %struct.opj_j2k_dec*
  %m_end_tile_x87 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder86, i32 0, i32 7
  store i32 %100, i32* %m_end_tile_x87, align 4, !tbaa !26
  %102 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %x188 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %102, i32 0, i32 2
  %103 = load i32, i32* %x188, align 4, !tbaa !57
  %104 = load %struct.opj_image*, %struct.opj_image** %p_image.addr, align 8, !tbaa !1
  %x189 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %104, i32 0, i32 2
  store i32 %103, i32* %x189, align 4, !tbaa !57
  br label %if.end.99

if.else.90:                                       ; preds = %if.else.78
  %105 = load i32, i32* %p_end_x.addr, align 4, !tbaa !5
  %106 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %tx091 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %106, i32 0, i32 1
  %107 = load i32, i32* %tx091, align 4, !tbaa !72
  %sub92 = sub i32 %105, %107
  %108 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %tdx93 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %108, i32 0, i32 3
  %109 = load i32, i32* %tdx93, align 4, !tbaa !60
  %call94 = call i32 @opj_int_ceildiv(i32 %sub92, i32 %109) #7
  %110 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param95 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %110, i32 0, i32 1
  %m_decoder96 = bitcast %union.anon* %m_specific_param95 to %struct.opj_j2k_dec*
  %m_end_tile_x97 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder96, i32 0, i32 7
  store i32 %call94, i32* %m_end_tile_x97, align 4, !tbaa !26
  %111 = load i32, i32* %p_end_x.addr, align 4, !tbaa !5
  %112 = load %struct.opj_image*, %struct.opj_image** %p_image.addr, align 8, !tbaa !1
  %x198 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %112, i32 0, i32 2
  store i32 %111, i32* %x198, align 4, !tbaa !57
  br label %if.end.99

if.end.99:                                        ; preds = %if.else.90, %if.then.81
  br label %if.end.100

if.end.100:                                       ; preds = %if.end.99
  %113 = load i32, i32* %p_end_y.addr, align 4, !tbaa !5
  %114 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %y0101 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %114, i32 0, i32 1
  %115 = load i32, i32* %y0101, align 4, !tbaa !58
  %cmp102 = icmp ult i32 %113, %115
  br i1 %cmp102, label %if.then.103, label %if.end.106

if.then.103:                                      ; preds = %if.end.100
  %116 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %117 = load i32, i32* %p_end_y.addr, align 4, !tbaa !5
  %118 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %y0104 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %118, i32 0, i32 1
  %119 = load i32, i32* %y0104, align 4, !tbaa !58
  %call105 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %116, i32 1, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.28, i32 0, i32 0), i32 %117, i32 %119) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.168

if.end.106:                                       ; preds = %if.end.100
  %120 = load i32, i32* %p_end_y.addr, align 4, !tbaa !5
  %121 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %y1107 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %121, i32 0, i32 3
  %122 = load i32, i32* %y1107, align 4, !tbaa !59
  %cmp108 = icmp ugt i32 %120, %122
  br i1 %cmp108, label %if.then.109, label %if.else.118

if.then.109:                                      ; preds = %if.end.106
  %123 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %124 = load i32, i32* %p_end_y.addr, align 4, !tbaa !5
  %125 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %y1110 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %125, i32 0, i32 3
  %126 = load i32, i32* %y1110, align 4, !tbaa !59
  %call111 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %123, i32 2, i8* getelementptr inbounds ([89 x i8], [89 x i8]* @.str.29, i32 0, i32 0), i32 %124, i32 %126) #7
  %127 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %th112 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %127, i32 0, i32 7
  %128 = load i32, i32* %th112, align 4, !tbaa !15
  %129 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param113 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %129, i32 0, i32 1
  %m_decoder114 = bitcast %union.anon* %m_specific_param113 to %struct.opj_j2k_dec*
  %m_end_tile_y115 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder114, i32 0, i32 8
  store i32 %128, i32* %m_end_tile_y115, align 4, !tbaa !28
  %130 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %y1116 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %130, i32 0, i32 3
  %131 = load i32, i32* %y1116, align 4, !tbaa !59
  %132 = load %struct.opj_image*, %struct.opj_image** %p_image.addr, align 8, !tbaa !1
  %y1117 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %132, i32 0, i32 3
  store i32 %131, i32* %y1117, align 4, !tbaa !59
  br label %if.end.127

if.else.118:                                      ; preds = %if.end.106
  %133 = load i32, i32* %p_end_y.addr, align 4, !tbaa !5
  %134 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %ty0119 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %134, i32 0, i32 2
  %135 = load i32, i32* %ty0119, align 4, !tbaa !73
  %sub120 = sub i32 %133, %135
  %136 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %tdy121 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %136, i32 0, i32 4
  %137 = load i32, i32* %tdy121, align 4, !tbaa !61
  %call122 = call i32 @opj_int_ceildiv(i32 %sub120, i32 %137) #7
  %138 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param123 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %138, i32 0, i32 1
  %m_decoder124 = bitcast %union.anon* %m_specific_param123 to %struct.opj_j2k_dec*
  %m_end_tile_y125 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder124, i32 0, i32 8
  store i32 %call122, i32* %m_end_tile_y125, align 4, !tbaa !28
  %139 = load i32, i32* %p_end_y.addr, align 4, !tbaa !5
  %140 = load %struct.opj_image*, %struct.opj_image** %p_image.addr, align 8, !tbaa !1
  %y1126 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %140, i32 0, i32 3
  store i32 %139, i32* %y1126, align 4, !tbaa !59
  br label %if.end.127

if.end.127:                                       ; preds = %if.else.118, %if.then.109
  %141 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param128 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %141, i32 0, i32 1
  %m_decoder129 = bitcast %union.anon* %m_specific_param128 to %struct.opj_j2k_dec*
  %m_discard_tiles = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder129, i32 0, i32 16
  %bf.load = load i8, i8* %m_discard_tiles, align 4
  %bf.clear = and i8 %bf.load, -3
  %bf.set = or i8 %bf.clear, 2
  store i8 %bf.set, i8* %m_discard_tiles, align 4
  %142 = load %struct.opj_image*, %struct.opj_image** %p_image.addr, align 8, !tbaa !1
  %comps = getelementptr inbounds %struct.opj_image, %struct.opj_image* %142, i32 0, i32 6
  %143 = load %struct.opj_image_comp*, %struct.opj_image_comp** %comps, align 8, !tbaa !62
  store %struct.opj_image_comp* %143, %struct.opj_image_comp** %l_img_comp, align 8, !tbaa !1
  store i32 0, i32* %it_comp, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.127
  %144 = load i32, i32* %it_comp, align 4, !tbaa !5
  %145 = load %struct.opj_image*, %struct.opj_image** %p_image.addr, align 8, !tbaa !1
  %numcomps = getelementptr inbounds %struct.opj_image, %struct.opj_image* %145, i32 0, i32 4
  %146 = load i32, i32* %numcomps, align 4, !tbaa !45
  %cmp130 = icmp ult i32 %144, %146
  br i1 %cmp130, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %147 = bitcast i32* %l_h to i8*
  call void @llvm.lifetime.start(i64 4, i8* %147) #1
  %148 = bitcast i32* %l_w to i8*
  call void @llvm.lifetime.start(i64 4, i8* %148) #1
  %149 = load %struct.opj_image*, %struct.opj_image** %p_image.addr, align 8, !tbaa !1
  %x0131 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %149, i32 0, i32 0
  %150 = load i32, i32* %x0131, align 4, !tbaa !56
  %151 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp, align 8, !tbaa !1
  %dx = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %151, i32 0, i32 0
  %152 = load i32, i32* %dx, align 4, !tbaa !67
  %call132 = call i32 @opj_int_ceildiv(i32 %150, i32 %152) #7
  %153 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp, align 8, !tbaa !1
  %x0133 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %153, i32 0, i32 4
  store i32 %call132, i32* %x0133, align 4, !tbaa !209
  %154 = load %struct.opj_image*, %struct.opj_image** %p_image.addr, align 8, !tbaa !1
  %y0134 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %154, i32 0, i32 1
  %155 = load i32, i32* %y0134, align 4, !tbaa !58
  %156 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp, align 8, !tbaa !1
  %dy = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %156, i32 0, i32 1
  %157 = load i32, i32* %dy, align 4, !tbaa !68
  %call135 = call i32 @opj_int_ceildiv(i32 %155, i32 %157) #7
  %158 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp, align 8, !tbaa !1
  %y0136 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %158, i32 0, i32 5
  store i32 %call135, i32* %y0136, align 4, !tbaa !210
  %159 = load %struct.opj_image*, %struct.opj_image** %p_image.addr, align 8, !tbaa !1
  %x1137 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %159, i32 0, i32 2
  %160 = load i32, i32* %x1137, align 4, !tbaa !57
  %161 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp, align 8, !tbaa !1
  %dx138 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %161, i32 0, i32 0
  %162 = load i32, i32* %dx138, align 4, !tbaa !67
  %call139 = call i32 @opj_int_ceildiv(i32 %160, i32 %162) #7
  store i32 %call139, i32* %l_comp_x1, align 4, !tbaa !5
  %163 = load %struct.opj_image*, %struct.opj_image** %p_image.addr, align 8, !tbaa !1
  %y1140 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %163, i32 0, i32 3
  %164 = load i32, i32* %y1140, align 4, !tbaa !59
  %165 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp, align 8, !tbaa !1
  %dy141 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %165, i32 0, i32 1
  %166 = load i32, i32* %dy141, align 4, !tbaa !68
  %call142 = call i32 @opj_int_ceildiv(i32 %164, i32 %166) #7
  store i32 %call142, i32* %l_comp_y1, align 4, !tbaa !5
  %167 = load i32, i32* %l_comp_x1, align 4, !tbaa !5
  %168 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp, align 8, !tbaa !1
  %factor = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %168, i32 0, i32 10
  %169 = load i32, i32* %factor, align 4, !tbaa !71
  %call143 = call i32 @opj_int_ceildivpow2(i32 %167, i32 %169) #7
  %170 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp, align 8, !tbaa !1
  %x0144 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %170, i32 0, i32 4
  %171 = load i32, i32* %x0144, align 4, !tbaa !209
  %172 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp, align 8, !tbaa !1
  %factor145 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %172, i32 0, i32 10
  %173 = load i32, i32* %factor145, align 4, !tbaa !71
  %call146 = call i32 @opj_int_ceildivpow2(i32 %171, i32 %173) #7
  %sub147 = sub nsw i32 %call143, %call146
  store i32 %sub147, i32* %l_w, align 4, !tbaa !5
  %174 = load i32, i32* %l_w, align 4, !tbaa !5
  %cmp148 = icmp slt i32 %174, 0
  br i1 %cmp148, label %if.then.149, label %if.end.151

if.then.149:                                      ; preds = %for.body
  %175 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %176 = load i32, i32* %it_comp, align 4, !tbaa !5
  %177 = load i32, i32* %l_w, align 4, !tbaa !5
  %call150 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %175, i32 1, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.30, i32 0, i32 0), i32 %176, i32 %177) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.151:                                       ; preds = %for.body
  %178 = load i32, i32* %l_w, align 4, !tbaa !5
  %179 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp, align 8, !tbaa !1
  %w = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %179, i32 0, i32 2
  store i32 %178, i32* %w, align 4, !tbaa !211
  %180 = load i32, i32* %l_comp_y1, align 4, !tbaa !5
  %181 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp, align 8, !tbaa !1
  %factor152 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %181, i32 0, i32 10
  %182 = load i32, i32* %factor152, align 4, !tbaa !71
  %call153 = call i32 @opj_int_ceildivpow2(i32 %180, i32 %182) #7
  %183 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp, align 8, !tbaa !1
  %y0154 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %183, i32 0, i32 5
  %184 = load i32, i32* %y0154, align 4, !tbaa !210
  %185 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp, align 8, !tbaa !1
  %factor155 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %185, i32 0, i32 10
  %186 = load i32, i32* %factor155, align 4, !tbaa !71
  %call156 = call i32 @opj_int_ceildivpow2(i32 %184, i32 %186) #7
  %sub157 = sub nsw i32 %call153, %call156
  store i32 %sub157, i32* %l_h, align 4, !tbaa !5
  %187 = load i32, i32* %l_h, align 4, !tbaa !5
  %cmp158 = icmp slt i32 %187, 0
  br i1 %cmp158, label %if.then.159, label %if.end.161

if.then.159:                                      ; preds = %if.end.151
  %188 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %189 = load i32, i32* %it_comp, align 4, !tbaa !5
  %190 = load i32, i32* %l_h, align 4, !tbaa !5
  %call160 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %188, i32 1, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.31, i32 0, i32 0), i32 %189, i32 %190) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.161:                                       ; preds = %if.end.151
  %191 = load i32, i32* %l_h, align 4, !tbaa !5
  %192 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp, align 8, !tbaa !1
  %h = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %192, i32 0, i32 3
  store i32 %191, i32* %h, align 4, !tbaa !212
  %193 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %193, i32 1
  store %struct.opj_image_comp* %incdec.ptr, %struct.opj_image_comp** %l_img_comp, align 8, !tbaa !1
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.161, %if.then.159, %if.then.149
  %194 = bitcast i32* %l_w to i8*
  call void @llvm.lifetime.end(i64 4, i8* %194) #1
  %195 = bitcast i32* %l_h to i8*
  call void @llvm.lifetime.end(i64 4, i8* %195) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.168 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %for.inc

for.inc:                                          ; preds = %cleanup.cont
  %196 = load i32, i32* %it_comp, align 4, !tbaa !5
  %inc = add i32 %196, 1
  store i32 %inc, i32* %it_comp, align 4, !tbaa !5
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %197 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %198 = load %struct.opj_image*, %struct.opj_image** %p_image.addr, align 8, !tbaa !1
  %x0163 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %198, i32 0, i32 0
  %199 = load i32, i32* %x0163, align 4, !tbaa !56
  %200 = load %struct.opj_image*, %struct.opj_image** %p_image.addr, align 8, !tbaa !1
  %y0164 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %200, i32 0, i32 1
  %201 = load i32, i32* %y0164, align 4, !tbaa !58
  %202 = load %struct.opj_image*, %struct.opj_image** %p_image.addr, align 8, !tbaa !1
  %x1165 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %202, i32 0, i32 2
  %203 = load i32, i32* %x1165, align 4, !tbaa !57
  %204 = load %struct.opj_image*, %struct.opj_image** %p_image.addr, align 8, !tbaa !1
  %y1166 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %204, i32 0, i32 3
  %205 = load i32, i32* %y1166, align 4, !tbaa !59
  %call167 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %197, i32 4, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.32, i32 0, i32 0), i32 %199, i32 %201, i32 %203, i32 %205) #7
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.168

cleanup.168:                                      ; preds = %for.end, %cleanup, %if.then.103, %if.then.75, %if.then.43, %if.then.23, %if.then.6, %if.then
  %206 = bitcast %struct.opj_image_comp** %l_img_comp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %206) #1
  %207 = bitcast i32* %l_comp_y1 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %207) #1
  %208 = bitcast i32* %l_comp_x1 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %208) #1
  %209 = bitcast i32* %it_comp to i8*
  call void @llvm.lifetime.end(i64 4, i8* %209) #1
  %210 = bitcast %struct.opj_image** %l_image to i8*
  call void @llvm.lifetime.end(i64 8, i8* %210) #1
  %211 = bitcast %struct.opj_cp** %l_cp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %211) #1
  %212 = load i32, i32* %retval
  ret i32 %212
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @opj_int_ceildivpow2(i32 %a, i32 %b) #5 {
entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4, !tbaa !5
  store i32 %b, i32* %b.addr, align 4, !tbaa !5
  %0 = load i32, i32* %a.addr, align 4, !tbaa !5
  %conv = sext i32 %0 to i64
  %1 = load i32, i32* %b.addr, align 4, !tbaa !5
  %shl = shl i32 1, %1
  %conv1 = sext i32 %shl to i64
  %add = add nsw i64 %conv, %conv1
  %sub = sub nsw i64 %add, 1
  %2 = load i32, i32* %b.addr, align 4, !tbaa !5
  %sh_prom = zext i32 %2 to i64
  %shr = ashr i64 %sub, %sh_prom
  %conv2 = trunc i64 %shr to i32
  ret i32 %conv2
}

; Function Attrs: nounwind uwtable
define %struct.opj_j2k* @opj_j2k_create_decompress() #0 {
entry:
  %retval = alloca %struct.opj_j2k*, align 8
  %l_j2k = alloca %struct.opj_j2k*, align 8
  %cleanup.dest.slot = alloca i32
  %0 = bitcast %struct.opj_j2k** %l_j2k to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %call = call noalias i8* @malloc(i64 296) #9
  %1 = bitcast i8* %call to %struct.opj_j2k*
  store %struct.opj_j2k* %1, %struct.opj_j2k** %l_j2k, align 8, !tbaa !1
  %2 = load %struct.opj_j2k*, %struct.opj_j2k** %l_j2k, align 8, !tbaa !1
  %tobool = icmp ne %struct.opj_j2k* %2, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct.opj_j2k* null, %struct.opj_j2k** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %3 = load %struct.opj_j2k*, %struct.opj_j2k** %l_j2k, align 8, !tbaa !1
  %4 = bitcast %struct.opj_j2k* %3 to i8*
  %call1 = call i8* @memset(i8* %4, i32 0, i64 296) #9
  %5 = load %struct.opj_j2k*, %struct.opj_j2k** %l_j2k, align 8, !tbaa !1
  %m_is_decoder = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %5, i32 0, i32 0
  store i32 1, i32* %m_is_decoder, align 4, !tbaa !109
  %6 = load %struct.opj_j2k*, %struct.opj_j2k** %l_j2k, align 8, !tbaa !1
  %m_cp = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %6, i32 0, i32 4
  %m_is_decoder2 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp, i32 0, i32 19
  %bf.load = load i8, i8* %m_is_decoder2, align 8
  %bf.clear = and i8 %bf.load, -3
  %bf.set = or i8 %bf.clear, 2
  store i8 %bf.set, i8* %m_is_decoder2, align 8
  %call3 = call noalias i8* @malloc(i64 5680) #9
  %7 = bitcast i8* %call3 to %struct.opj_tcp*
  %8 = load %struct.opj_j2k*, %struct.opj_j2k** %l_j2k, align 8, !tbaa !1
  %m_specific_param = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %8, i32 0, i32 1
  %m_decoder = bitcast %union.anon* %m_specific_param to %struct.opj_j2k_dec*
  %m_default_tcp = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder, i32 0, i32 1
  store %struct.opj_tcp* %7, %struct.opj_tcp** %m_default_tcp, align 8, !tbaa !39
  %9 = load %struct.opj_j2k*, %struct.opj_j2k** %l_j2k, align 8, !tbaa !1
  %m_specific_param4 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %9, i32 0, i32 1
  %m_decoder5 = bitcast %union.anon* %m_specific_param4 to %struct.opj_j2k_dec*
  %m_default_tcp6 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder5, i32 0, i32 1
  %10 = load %struct.opj_tcp*, %struct.opj_tcp** %m_default_tcp6, align 8, !tbaa !39
  %tobool7 = icmp ne %struct.opj_tcp* %10, null
  br i1 %tobool7, label %if.end.9, label %if.then.8

if.then.8:                                        ; preds = %if.end
  %11 = load %struct.opj_j2k*, %struct.opj_j2k** %l_j2k, align 8, !tbaa !1
  call void @opj_j2k_destroy(%struct.opj_j2k* %11) #7
  store %struct.opj_j2k* null, %struct.opj_j2k** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.9:                                         ; preds = %if.end
  %12 = load %struct.opj_j2k*, %struct.opj_j2k** %l_j2k, align 8, !tbaa !1
  %m_specific_param10 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %12, i32 0, i32 1
  %m_decoder11 = bitcast %union.anon* %m_specific_param10 to %struct.opj_j2k_dec*
  %m_default_tcp12 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder11, i32 0, i32 1
  %13 = load %struct.opj_tcp*, %struct.opj_tcp** %m_default_tcp12, align 8, !tbaa !39
  %14 = bitcast %struct.opj_tcp* %13 to i8*
  %call13 = call i8* @memset(i8* %14, i32 0, i64 5680) #9
  %call14 = call noalias i8* @malloc(i64 1000) #9
  %15 = load %struct.opj_j2k*, %struct.opj_j2k** %l_j2k, align 8, !tbaa !1
  %m_specific_param15 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %15, i32 0, i32 1
  %m_decoder16 = bitcast %union.anon* %m_specific_param15 to %struct.opj_j2k_dec*
  %m_header_data = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder16, i32 0, i32 2
  store i8* %call14, i8** %m_header_data, align 8, !tbaa !115
  %16 = load %struct.opj_j2k*, %struct.opj_j2k** %l_j2k, align 8, !tbaa !1
  %m_specific_param17 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %16, i32 0, i32 1
  %m_decoder18 = bitcast %union.anon* %m_specific_param17 to %struct.opj_j2k_dec*
  %m_header_data19 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder18, i32 0, i32 2
  %17 = load i8*, i8** %m_header_data19, align 8, !tbaa !115
  %tobool20 = icmp ne i8* %17, null
  br i1 %tobool20, label %if.end.22, label %if.then.21

if.then.21:                                       ; preds = %if.end.9
  %18 = load %struct.opj_j2k*, %struct.opj_j2k** %l_j2k, align 8, !tbaa !1
  call void @opj_j2k_destroy(%struct.opj_j2k* %18) #7
  store %struct.opj_j2k* null, %struct.opj_j2k** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.22:                                        ; preds = %if.end.9
  %19 = load %struct.opj_j2k*, %struct.opj_j2k** %l_j2k, align 8, !tbaa !1
  %m_specific_param23 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %19, i32 0, i32 1
  %m_decoder24 = bitcast %union.anon* %m_specific_param23 to %struct.opj_j2k_dec*
  %m_header_data_size = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder24, i32 0, i32 3
  store i32 1000, i32* %m_header_data_size, align 4, !tbaa !116
  %20 = load %struct.opj_j2k*, %struct.opj_j2k** %l_j2k, align 8, !tbaa !1
  %m_specific_param25 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %20, i32 0, i32 1
  %m_decoder26 = bitcast %union.anon* %m_specific_param25 to %struct.opj_j2k_dec*
  %m_tile_ind_to_dec = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder26, i32 0, i32 13
  store i32 -1, i32* %m_tile_ind_to_dec, align 4, !tbaa !24
  %21 = load %struct.opj_j2k*, %struct.opj_j2k** %l_j2k, align 8, !tbaa !1
  %m_specific_param27 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %21, i32 0, i32 1
  %m_decoder28 = bitcast %union.anon* %m_specific_param27 to %struct.opj_j2k_dec*
  %m_last_sot_read_pos = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder28, i32 0, i32 14
  store i64 0, i64* %m_last_sot_read_pos, align 8, !tbaa !188
  %call29 = call %struct.opj_codestream_index* @opj_j2k_create_cstr_index() #7
  %22 = load %struct.opj_j2k*, %struct.opj_j2k** %l_j2k, align 8, !tbaa !1
  %cstr_index = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %22, i32 0, i32 7
  store %struct.opj_codestream_index* %call29, %struct.opj_codestream_index** %cstr_index, align 8, !tbaa !29
  %call30 = call %struct.opj_procedure_list* @opj_procedure_list_create() #7
  %23 = load %struct.opj_j2k*, %struct.opj_j2k** %l_j2k, align 8, !tbaa !1
  %m_validation_list = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %23, i32 0, i32 6
  store %struct.opj_procedure_list* %call30, %struct.opj_procedure_list** %m_validation_list, align 8, !tbaa !113
  %24 = load %struct.opj_j2k*, %struct.opj_j2k** %l_j2k, align 8, !tbaa !1
  %m_validation_list31 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %24, i32 0, i32 6
  %25 = load %struct.opj_procedure_list*, %struct.opj_procedure_list** %m_validation_list31, align 8, !tbaa !113
  %tobool32 = icmp ne %struct.opj_procedure_list* %25, null
  br i1 %tobool32, label %if.end.34, label %if.then.33

if.then.33:                                       ; preds = %if.end.22
  %26 = load %struct.opj_j2k*, %struct.opj_j2k** %l_j2k, align 8, !tbaa !1
  call void @opj_j2k_destroy(%struct.opj_j2k* %26) #7
  store %struct.opj_j2k* null, %struct.opj_j2k** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.34:                                        ; preds = %if.end.22
  %call35 = call %struct.opj_procedure_list* @opj_procedure_list_create() #7
  %27 = load %struct.opj_j2k*, %struct.opj_j2k** %l_j2k, align 8, !tbaa !1
  %m_procedure_list = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %27, i32 0, i32 5
  store %struct.opj_procedure_list* %call35, %struct.opj_procedure_list** %m_procedure_list, align 8, !tbaa !114
  %28 = load %struct.opj_j2k*, %struct.opj_j2k** %l_j2k, align 8, !tbaa !1
  %m_procedure_list36 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %28, i32 0, i32 5
  %29 = load %struct.opj_procedure_list*, %struct.opj_procedure_list** %m_procedure_list36, align 8, !tbaa !114
  %tobool37 = icmp ne %struct.opj_procedure_list* %29, null
  br i1 %tobool37, label %if.end.39, label %if.then.38

if.then.38:                                       ; preds = %if.end.34
  %30 = load %struct.opj_j2k*, %struct.opj_j2k** %l_j2k, align 8, !tbaa !1
  call void @opj_j2k_destroy(%struct.opj_j2k* %30) #7
  store %struct.opj_j2k* null, %struct.opj_j2k** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.39:                                        ; preds = %if.end.34
  %31 = load %struct.opj_j2k*, %struct.opj_j2k** %l_j2k, align 8, !tbaa !1
  store %struct.opj_j2k* %31, %struct.opj_j2k** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.39, %if.then.38, %if.then.33, %if.then.21, %if.then.8, %if.then
  %32 = bitcast %struct.opj_j2k** %l_j2k to i8*
  call void @llvm.lifetime.end(i64 8, i8* %32) #1
  %33 = load %struct.opj_j2k*, %struct.opj_j2k** %retval
  ret %struct.opj_j2k* %33
}

; Function Attrs: nounwind uwtable
define internal %struct.opj_codestream_index* @opj_j2k_create_cstr_index() #0 {
entry:
  %retval = alloca %struct.opj_codestream_index*, align 8
  %cstr_index = alloca %struct.opj_codestream_index*, align 8
  %cleanup.dest.slot = alloca i32
  %0 = bitcast %struct.opj_codestream_index** %cstr_index to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %call = call noalias i8* @calloc(i64 1, i64 56) #9
  %1 = bitcast i8* %call to %struct.opj_codestream_index*
  store %struct.opj_codestream_index* %1, %struct.opj_codestream_index** %cstr_index, align 8, !tbaa !1
  %2 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index, align 8, !tbaa !1
  %tobool = icmp ne %struct.opj_codestream_index* %2, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct.opj_codestream_index* null, %struct.opj_codestream_index** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %3 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index, align 8, !tbaa !1
  %maxmarknum = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %3, i32 0, i32 5
  store i32 100, i32* %maxmarknum, align 4, !tbaa !213
  %4 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index, align 8, !tbaa !1
  %marknum = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %4, i32 0, i32 3
  store i32 0, i32* %marknum, align 4, !tbaa !214
  %5 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index, align 8, !tbaa !1
  %maxmarknum1 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %5, i32 0, i32 5
  %6 = load i32, i32* %maxmarknum1, align 4, !tbaa !213
  %conv = zext i32 %6 to i64
  %cmp = icmp ne i64 %conv, 0
  br i1 %cmp, label %land.lhs.true, label %cond.false

land.lhs.true:                                    ; preds = %if.end
  %7 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index, align 8, !tbaa !1
  %maxmarknum3 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %7, i32 0, i32 5
  %8 = load i32, i32* %maxmarknum3, align 4, !tbaa !213
  %conv4 = zext i32 %8 to i64
  %cmp5 = icmp uge i64 %conv4, 768614336404564640
  br i1 %cmp5, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true, %if.end
  %9 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index, align 8, !tbaa !1
  %maxmarknum7 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %9, i32 0, i32 5
  %10 = load i32, i32* %maxmarknum7, align 4, !tbaa !213
  %conv8 = zext i32 %10 to i64
  %call9 = call noalias i8* @calloc(i64 %conv8, i64 24) #9
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ null, %cond.true ], [ %call9, %cond.false ]
  %11 = bitcast i8* %cond to %struct.opj_marker_info*
  %12 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index, align 8, !tbaa !1
  %marker = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %12, i32 0, i32 4
  store %struct.opj_marker_info* %11, %struct.opj_marker_info** %marker, align 8, !tbaa !182
  %13 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index, align 8, !tbaa !1
  %marker10 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %13, i32 0, i32 4
  %14 = load %struct.opj_marker_info*, %struct.opj_marker_info** %marker10, align 8, !tbaa !182
  %tobool11 = icmp ne %struct.opj_marker_info* %14, null
  br i1 %tobool11, label %if.end.13, label %if.then.12

if.then.12:                                       ; preds = %cond.end
  store %struct.opj_codestream_index* null, %struct.opj_codestream_index** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.13:                                        ; preds = %cond.end
  %15 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index, align 8, !tbaa !1
  %tile_index = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %15, i32 0, i32 7
  store %struct.opj_tile_index* null, %struct.opj_tile_index** %tile_index, align 8, !tbaa !30
  %16 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index, align 8, !tbaa !1
  store %struct.opj_codestream_index* %16, %struct.opj_codestream_index** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.13, %if.then.12, %if.then
  %17 = bitcast %struct.opj_codestream_index** %cstr_index to i8*
  call void @llvm.lifetime.end(i64 8, i8* %17) #1
  %18 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %retval
  ret %struct.opj_codestream_index* %18
}

; Function Attrs: nounwind uwtable
define void @j2k_dump(%struct.opj_j2k* %p_j2k, i32 %flag, %struct._IO_FILE* %out_stream) #0 {
entry:
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %flag.addr = alloca i32, align 4
  %out_stream.addr = alloca %struct._IO_FILE*, align 8
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store i32 %flag, i32* %flag.addr, align 4, !tbaa !5
  store %struct._IO_FILE* %out_stream, %struct._IO_FILE** %out_stream.addr, align 8, !tbaa !1
  %0 = load i32, i32* %flag.addr, align 4, !tbaa !5
  %and = and i32 %0, 128
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %flag.addr, align 4, !tbaa !5
  %and1 = and i32 %1, 256
  %tobool2 = icmp ne i32 %and1, 0
  br i1 %tobool2, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %out_stream.addr, align 8, !tbaa !1
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.33, i32 0, i32 0)) #7
  br label %if.end.26

if.end:                                           ; preds = %lor.lhs.false
  %3 = load i32, i32* %flag.addr, align 4, !tbaa !5
  %and3 = and i32 %3, 1
  %tobool4 = icmp ne i32 %and3, 0
  br i1 %tobool4, label %if.then.5, label %if.end.10

if.then.5:                                        ; preds = %if.end
  %4 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_private_image = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %4, i32 0, i32 2
  %5 = load %struct.opj_image*, %struct.opj_image** %m_private_image, align 8, !tbaa !38
  %tobool6 = icmp ne %struct.opj_image* %5, null
  br i1 %tobool6, label %if.then.7, label %if.end.9

if.then.7:                                        ; preds = %if.then.5
  %6 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_private_image8 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %6, i32 0, i32 2
  %7 = load %struct.opj_image*, %struct.opj_image** %m_private_image8, align 8, !tbaa !38
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %out_stream.addr, align 8, !tbaa !1
  call void @j2k_dump_image_header(%struct.opj_image* %7, i32 0, %struct._IO_FILE* %8) #7
  br label %if.end.9

if.end.9:                                         ; preds = %if.then.7, %if.then.5
  br label %if.end.10

if.end.10:                                        ; preds = %if.end.9, %if.end
  %9 = load i32, i32* %flag.addr, align 4, !tbaa !5
  %and11 = and i32 %9, 2
  %tobool12 = icmp ne i32 %and11, 0
  br i1 %tobool12, label %if.then.13, label %if.end.14

if.then.13:                                       ; preds = %if.end.10
  %10 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %out_stream.addr, align 8, !tbaa !1
  call void @opj_j2k_dump_MH_info(%struct.opj_j2k* %10, %struct._IO_FILE* %11) #7
  br label %if.end.14

if.end.14:                                        ; preds = %if.then.13, %if.end.10
  %12 = load i32, i32* %flag.addr, align 4, !tbaa !5
  %and15 = and i32 %12, 4
  %tobool16 = icmp ne i32 %and15, 0
  br i1 %tobool16, label %if.then.17, label %if.end.18

if.then.17:                                       ; preds = %if.end.14
  br label %if.end.18

if.end.18:                                        ; preds = %if.then.17, %if.end.14
  %13 = load i32, i32* %flag.addr, align 4, !tbaa !5
  %and19 = and i32 %13, 16
  %tobool20 = icmp ne i32 %and19, 0
  br i1 %tobool20, label %if.then.21, label %if.end.22

if.then.21:                                       ; preds = %if.end.18
  %14 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** %out_stream.addr, align 8, !tbaa !1
  call void @opj_j2k_dump_MH_index(%struct.opj_j2k* %14, %struct._IO_FILE* %15) #7
  br label %if.end.22

if.end.22:                                        ; preds = %if.then.21, %if.end.18
  %16 = load i32, i32* %flag.addr, align 4, !tbaa !5
  %and23 = and i32 %16, 32
  %tobool24 = icmp ne i32 %and23, 0
  br i1 %tobool24, label %if.then.25, label %if.end.26

if.then.25:                                       ; preds = %if.end.22
  br label %if.end.26

if.end.26:                                        ; preds = %if.then, %if.then.25, %if.end.22
  ret void
}

declare i32 @fprintf(%struct._IO_FILE*, i8*, ...) #3

; Function Attrs: nounwind uwtable
define void @j2k_dump_image_header(%struct.opj_image* %img_header, i32 %dev_dump_flag, %struct._IO_FILE* %out_stream) #0 {
entry:
  %img_header.addr = alloca %struct.opj_image*, align 8
  %dev_dump_flag.addr = alloca i32, align 4
  %out_stream.addr = alloca %struct._IO_FILE*, align 8
  %tab = alloca [2 x i8], align 1
  %compno = alloca i32, align 4
  store %struct.opj_image* %img_header, %struct.opj_image** %img_header.addr, align 8, !tbaa !1
  store i32 %dev_dump_flag, i32* %dev_dump_flag.addr, align 4, !tbaa !5
  store %struct._IO_FILE* %out_stream, %struct._IO_FILE** %out_stream.addr, align 8, !tbaa !1
  %0 = bitcast [2 x i8]* %tab to i8*
  call void @llvm.lifetime.start(i64 2, i8* %0) #1
  %1 = load i32, i32* %dev_dump_flag.addr, align 4, !tbaa !5
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !1
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.34, i32 0, i32 0)) #7
  %arrayidx = getelementptr inbounds [2 x i8], [2 x i8]* %tab, i32 0, i64 0
  store i8 0, i8* %arrayidx, align 1, !tbaa !103
  br label %if.end

if.else:                                          ; preds = %entry
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %out_stream.addr, align 8, !tbaa !1
  %call1 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.35, i32 0, i32 0)) #7
  %arrayidx2 = getelementptr inbounds [2 x i8], [2 x i8]* %tab, i32 0, i64 0
  store i8 9, i8* %arrayidx2, align 1, !tbaa !103
  %arrayidx3 = getelementptr inbounds [2 x i8], [2 x i8]* %tab, i32 0, i64 1
  store i8 0, i8* %arrayidx3, align 1, !tbaa !103
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %out_stream.addr, align 8, !tbaa !1
  %arraydecay = getelementptr inbounds [2 x i8], [2 x i8]* %tab, i32 0, i32 0
  %5 = load %struct.opj_image*, %struct.opj_image** %img_header.addr, align 8, !tbaa !1
  %x0 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %5, i32 0, i32 0
  %6 = load i32, i32* %x0, align 4, !tbaa !56
  %7 = load %struct.opj_image*, %struct.opj_image** %img_header.addr, align 8, !tbaa !1
  %y0 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %7, i32 0, i32 1
  %8 = load i32, i32* %y0, align 4, !tbaa !58
  %call4 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.36, i32 0, i32 0), i8* %arraydecay, i32 %6, i32 %8) #7
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** %out_stream.addr, align 8, !tbaa !1
  %arraydecay5 = getelementptr inbounds [2 x i8], [2 x i8]* %tab, i32 0, i32 0
  %10 = load %struct.opj_image*, %struct.opj_image** %img_header.addr, align 8, !tbaa !1
  %x1 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %10, i32 0, i32 2
  %11 = load i32, i32* %x1, align 4, !tbaa !57
  %12 = load %struct.opj_image*, %struct.opj_image** %img_header.addr, align 8, !tbaa !1
  %y1 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %12, i32 0, i32 3
  %13 = load i32, i32* %y1, align 4, !tbaa !59
  %call6 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %9, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.37, i32 0, i32 0), i8* %arraydecay5, i32 %11, i32 %13) #7
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** %out_stream.addr, align 8, !tbaa !1
  %arraydecay7 = getelementptr inbounds [2 x i8], [2 x i8]* %tab, i32 0, i32 0
  %15 = load %struct.opj_image*, %struct.opj_image** %img_header.addr, align 8, !tbaa !1
  %numcomps = getelementptr inbounds %struct.opj_image, %struct.opj_image* %15, i32 0, i32 4
  %16 = load i32, i32* %numcomps, align 4, !tbaa !45
  %call8 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %14, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.38, i32 0, i32 0), i8* %arraydecay7, i32 %16) #7
  %17 = load %struct.opj_image*, %struct.opj_image** %img_header.addr, align 8, !tbaa !1
  %comps = getelementptr inbounds %struct.opj_image, %struct.opj_image* %17, i32 0, i32 6
  %18 = load %struct.opj_image_comp*, %struct.opj_image_comp** %comps, align 8, !tbaa !62
  %tobool9 = icmp ne %struct.opj_image_comp* %18, null
  br i1 %tobool9, label %if.then.10, label %if.end.18

if.then.10:                                       ; preds = %if.end
  %19 = bitcast i32* %compno to i8*
  call void @llvm.lifetime.start(i64 4, i8* %19) #1
  store i32 0, i32* %compno, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then.10
  %20 = load i32, i32* %compno, align 4, !tbaa !5
  %21 = load %struct.opj_image*, %struct.opj_image** %img_header.addr, align 8, !tbaa !1
  %numcomps11 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %21, i32 0, i32 4
  %22 = load i32, i32* %numcomps11, align 4, !tbaa !45
  %cmp = icmp ult i32 %20, %22
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** %out_stream.addr, align 8, !tbaa !1
  %arraydecay12 = getelementptr inbounds [2 x i8], [2 x i8]* %tab, i32 0, i32 0
  %24 = load i32, i32* %compno, align 4, !tbaa !5
  %call13 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %23, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.39, i32 0, i32 0), i8* %arraydecay12, i32 %24) #7
  %25 = load i32, i32* %compno, align 4, !tbaa !5
  %idxprom = zext i32 %25 to i64
  %26 = load %struct.opj_image*, %struct.opj_image** %img_header.addr, align 8, !tbaa !1
  %comps14 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %26, i32 0, i32 6
  %27 = load %struct.opj_image_comp*, %struct.opj_image_comp** %comps14, align 8, !tbaa !62
  %arrayidx15 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %27, i64 %idxprom
  %28 = load i32, i32* %dev_dump_flag.addr, align 4, !tbaa !5
  %29 = load %struct._IO_FILE*, %struct._IO_FILE** %out_stream.addr, align 8, !tbaa !1
  call void @j2k_dump_image_comp_header(%struct.opj_image_comp* %arrayidx15, i32 %28, %struct._IO_FILE* %29) #7
  %30 = load %struct._IO_FILE*, %struct._IO_FILE** %out_stream.addr, align 8, !tbaa !1
  %arraydecay16 = getelementptr inbounds [2 x i8], [2 x i8]* %tab, i32 0, i32 0
  %call17 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %30, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.40, i32 0, i32 0), i8* %arraydecay16) #7
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %31 = load i32, i32* %compno, align 4, !tbaa !5
  %inc = add i32 %31, 1
  store i32 %inc, i32* %compno, align 4, !tbaa !5
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %32 = bitcast i32* %compno to i8*
  call void @llvm.lifetime.end(i64 4, i8* %32) #1
  br label %if.end.18

if.end.18:                                        ; preds = %for.end, %if.end
  %33 = load %struct._IO_FILE*, %struct._IO_FILE** %out_stream.addr, align 8, !tbaa !1
  %call19 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %33, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.41, i32 0, i32 0)) #7
  %34 = bitcast [2 x i8]* %tab to i8*
  call void @llvm.lifetime.end(i64 2, i8* %34) #1
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @opj_j2k_dump_MH_info(%struct.opj_j2k* %p_j2k, %struct._IO_FILE* %out_stream) #0 {
entry:
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %out_stream.addr = alloca %struct._IO_FILE*, align 8
  %l_default_tile = alloca %struct.opj_tcp*, align 8
  %compno = alloca i32, align 4
  %numcomps = alloca i32, align 4
  %l_tccp = alloca %struct.opj_tccp*, align 8
  %resno = alloca i32, align 4
  %bandno = alloca i32, align 4
  %numbands = alloca i32, align 4
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store %struct._IO_FILE* %out_stream, %struct._IO_FILE** %out_stream.addr, align 8, !tbaa !1
  %0 = bitcast %struct.opj_tcp** %l_default_tile to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  store %struct.opj_tcp* null, %struct.opj_tcp** %l_default_tile, align 8, !tbaa !1
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %out_stream.addr, align 8, !tbaa !1
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.137, i32 0, i32 0)) #7
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %out_stream.addr, align 8, !tbaa !1
  %3 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %3, i32 0, i32 4
  %tx0 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp, i32 0, i32 1
  %4 = load i32, i32* %tx0, align 4, !tbaa !215
  %5 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp1 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %5, i32 0, i32 4
  %ty0 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp1, i32 0, i32 2
  %6 = load i32, i32* %ty0, align 4, !tbaa !216
  %call2 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.138, i32 0, i32 0), i32 %4, i32 %6) #7
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %out_stream.addr, align 8, !tbaa !1
  %8 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp3 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %8, i32 0, i32 4
  %tdx = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp3, i32 0, i32 3
  %9 = load i32, i32* %tdx, align 4, !tbaa !217
  %10 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp4 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %10, i32 0, i32 4
  %tdy = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp4, i32 0, i32 4
  %11 = load i32, i32* %tdy, align 4, !tbaa !218
  %call5 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.139, i32 0, i32 0), i32 %9, i32 %11) #7
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %out_stream.addr, align 8, !tbaa !1
  %13 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp6 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %13, i32 0, i32 4
  %tw = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp6, i32 0, i32 6
  %14 = load i32, i32* %tw, align 4, !tbaa !176
  %15 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp7 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %15, i32 0, i32 4
  %th = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp7, i32 0, i32 7
  %16 = load i32, i32* %th, align 4, !tbaa !177
  %call8 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.140, i32 0, i32 0), i32 %14, i32 %16) #7
  %17 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %17, i32 0, i32 1
  %m_decoder = bitcast %union.anon* %m_specific_param to %struct.opj_j2k_dec*
  %m_default_tcp = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder, i32 0, i32 1
  %18 = load %struct.opj_tcp*, %struct.opj_tcp** %m_default_tcp, align 8, !tbaa !39
  store %struct.opj_tcp* %18, %struct.opj_tcp** %l_default_tile, align 8, !tbaa !1
  %19 = load %struct.opj_tcp*, %struct.opj_tcp** %l_default_tile, align 8, !tbaa !1
  %tobool = icmp ne %struct.opj_tcp* %19, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %20 = bitcast i32* %compno to i8*
  call void @llvm.lifetime.start(i64 4, i8* %20) #1
  %21 = bitcast i32* %numcomps to i8*
  call void @llvm.lifetime.start(i64 4, i8* %21) #1
  %22 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_private_image = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %22, i32 0, i32 2
  %23 = load %struct.opj_image*, %struct.opj_image** %m_private_image, align 8, !tbaa !38
  %numcomps9 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %23, i32 0, i32 4
  %24 = load i32, i32* %numcomps9, align 4, !tbaa !45
  store i32 %24, i32* %numcomps, align 4, !tbaa !5
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** %out_stream.addr, align 8, !tbaa !1
  %call10 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %25, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.141, i32 0, i32 0)) #7
  %26 = load %struct._IO_FILE*, %struct._IO_FILE** %out_stream.addr, align 8, !tbaa !1
  %27 = load %struct.opj_tcp*, %struct.opj_tcp** %l_default_tile, align 8, !tbaa !1
  %csty = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %27, i32 0, i32 0
  %28 = load i32, i32* %csty, align 4, !tbaa !47
  %call11 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %26, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.142, i32 0, i32 0), i32 %28) #7
  %29 = load %struct._IO_FILE*, %struct._IO_FILE** %out_stream.addr, align 8, !tbaa !1
  %30 = load %struct.opj_tcp*, %struct.opj_tcp** %l_default_tile, align 8, !tbaa !1
  %prg = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %30, i32 0, i32 1
  %31 = load i32, i32* %prg, align 4, !tbaa !40
  %call12 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %29, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.143, i32 0, i32 0), i32 %31) #7
  %32 = load %struct._IO_FILE*, %struct._IO_FILE** %out_stream.addr, align 8, !tbaa !1
  %33 = load %struct.opj_tcp*, %struct.opj_tcp** %l_default_tile, align 8, !tbaa !1
  %numlayers = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %33, i32 0, i32 2
  %34 = load i32, i32* %numlayers, align 4, !tbaa !44
  %call13 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %32, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.144, i32 0, i32 0), i32 %34) #7
  %35 = load %struct._IO_FILE*, %struct._IO_FILE** %out_stream.addr, align 8, !tbaa !1
  %36 = load %struct.opj_tcp*, %struct.opj_tcp** %l_default_tile, align 8, !tbaa !1
  %mct = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %36, i32 0, i32 4
  %37 = load i32, i32* %mct, align 4, !tbaa !151
  %call14 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %35, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.145, i32 0, i32 0), i32 %37) #7
  store i32 0, i32* %compno, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc.55, %if.then
  %38 = load i32, i32* %compno, align 4, !tbaa !5
  %39 = load i32, i32* %numcomps, align 4, !tbaa !5
  %cmp = icmp slt i32 %38, %39
  br i1 %cmp, label %for.body, label %for.end.57

for.body:                                         ; preds = %for.cond
  %40 = bitcast %struct.opj_tccp** %l_tccp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %40) #1
  %41 = load i32, i32* %compno, align 4, !tbaa !5
  %idxprom = sext i32 %41 to i64
  %42 = load %struct.opj_tcp*, %struct.opj_tcp** %l_default_tile, align 8, !tbaa !1
  %tccps = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %42, i32 0, i32 13
  %43 = load %struct.opj_tccp*, %struct.opj_tccp** %tccps, align 8, !tbaa !48
  %arrayidx = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %43, i64 %idxprom
  store %struct.opj_tccp* %arrayidx, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %44 = bitcast i32* %resno to i8*
  call void @llvm.lifetime.start(i64 4, i8* %44) #1
  %45 = bitcast i32* %bandno to i8*
  call void @llvm.lifetime.start(i64 4, i8* %45) #1
  %46 = bitcast i32* %numbands to i8*
  call void @llvm.lifetime.start(i64 4, i8* %46) #1
  %47 = load %struct._IO_FILE*, %struct._IO_FILE** %out_stream.addr, align 8, !tbaa !1
  %48 = load i32, i32* %compno, align 4, !tbaa !5
  %call15 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %47, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.146, i32 0, i32 0), i32 %48) #7
  %49 = load %struct._IO_FILE*, %struct._IO_FILE** %out_stream.addr, align 8, !tbaa !1
  %50 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %csty16 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %50, i32 0, i32 0
  %51 = load i32, i32* %csty16, align 4, !tbaa !49
  %call17 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %49, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.147, i32 0, i32 0), i32 %51) #7
  %52 = load %struct._IO_FILE*, %struct._IO_FILE** %out_stream.addr, align 8, !tbaa !1
  %53 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %numresolutions = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %53, i32 0, i32 1
  %54 = load i32, i32* %numresolutions, align 4, !tbaa !161
  %call18 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %52, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.148, i32 0, i32 0), i32 %54) #7
  %55 = load %struct._IO_FILE*, %struct._IO_FILE** %out_stream.addr, align 8, !tbaa !1
  %56 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %cblkw = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %56, i32 0, i32 2
  %57 = load i32, i32* %cblkw, align 4, !tbaa !163
  %call19 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %55, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.149, i32 0, i32 0), i32 %57) #7
  %58 = load %struct._IO_FILE*, %struct._IO_FILE** %out_stream.addr, align 8, !tbaa !1
  %59 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %cblkh = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %59, i32 0, i32 3
  %60 = load i32, i32* %cblkh, align 4, !tbaa !165
  %call20 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %58, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.150, i32 0, i32 0), i32 %60) #7
  %61 = load %struct._IO_FILE*, %struct._IO_FILE** %out_stream.addr, align 8, !tbaa !1
  %62 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %cblksty = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %62, i32 0, i32 4
  %63 = load i32, i32* %cblksty, align 4, !tbaa !167
  %call21 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %61, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.151, i32 0, i32 0), i32 %63) #7
  %64 = load %struct._IO_FILE*, %struct._IO_FILE** %out_stream.addr, align 8, !tbaa !1
  %65 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %qmfbid = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %65, i32 0, i32 5
  %66 = load i32, i32* %qmfbid, align 4, !tbaa !169
  %call22 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %64, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.152, i32 0, i32 0), i32 %66) #7
  %67 = load %struct._IO_FILE*, %struct._IO_FILE** %out_stream.addr, align 8, !tbaa !1
  %call23 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %67, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.153, i32 0, i32 0)) #7
  store i32 0, i32* %resno, align 4, !tbaa !5
  br label %for.cond.24

for.cond.24:                                      ; preds = %for.inc, %for.body
  %68 = load i32, i32* %resno, align 4, !tbaa !5
  %69 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %numresolutions25 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %69, i32 0, i32 1
  %70 = load i32, i32* %numresolutions25, align 4, !tbaa !161
  %cmp26 = icmp ult i32 %68, %70
  br i1 %cmp26, label %for.body.27, label %for.end

for.body.27:                                      ; preds = %for.cond.24
  %71 = load %struct._IO_FILE*, %struct._IO_FILE** %out_stream.addr, align 8, !tbaa !1
  %72 = load i32, i32* %resno, align 4, !tbaa !5
  %idxprom28 = zext i32 %72 to i64
  %73 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %prcw = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %73, i32 0, i32 10
  %arrayidx29 = getelementptr inbounds [33 x i32], [33 x i32]* %prcw, i32 0, i64 %idxprom28
  %74 = load i32, i32* %arrayidx29, align 4, !tbaa !5
  %75 = load i32, i32* %resno, align 4, !tbaa !5
  %idxprom30 = zext i32 %75 to i64
  %76 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %prch = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %76, i32 0, i32 11
  %arrayidx31 = getelementptr inbounds [33 x i32], [33 x i32]* %prch, i32 0, i64 %idxprom30
  %77 = load i32, i32* %arrayidx31, align 4, !tbaa !5
  %call32 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %71, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.154, i32 0, i32 0), i32 %74, i32 %77) #7
  br label %for.inc

for.inc:                                          ; preds = %for.body.27
  %78 = load i32, i32* %resno, align 4, !tbaa !5
  %inc = add i32 %78, 1
  store i32 %inc, i32* %resno, align 4, !tbaa !5
  br label %for.cond.24

for.end:                                          ; preds = %for.cond.24
  %79 = load %struct._IO_FILE*, %struct._IO_FILE** %out_stream.addr, align 8, !tbaa !1
  %call33 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %79, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.155, i32 0, i32 0)) #7
  %80 = load %struct._IO_FILE*, %struct._IO_FILE** %out_stream.addr, align 8, !tbaa !1
  %81 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %qntsty = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %81, i32 0, i32 6
  %82 = load i32, i32* %qntsty, align 4, !tbaa !170
  %call34 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %80, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.156, i32 0, i32 0), i32 %82) #7
  %83 = load %struct._IO_FILE*, %struct._IO_FILE** %out_stream.addr, align 8, !tbaa !1
  %84 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %numgbits = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %84, i32 0, i32 8
  %85 = load i32, i32* %numgbits, align 4, !tbaa !171
  %call35 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %83, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.157, i32 0, i32 0), i32 %85) #7
  %86 = load %struct._IO_FILE*, %struct._IO_FILE** %out_stream.addr, align 8, !tbaa !1
  %call36 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %86, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.158, i32 0, i32 0)) #7
  %87 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %qntsty37 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %87, i32 0, i32 6
  %88 = load i32, i32* %qntsty37, align 4, !tbaa !170
  %cmp38 = icmp eq i32 %88, 1
  br i1 %cmp38, label %cond.true, label %cond.false

cond.true:                                        ; preds = %for.end
  br label %cond.end

cond.false:                                       ; preds = %for.end
  %89 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %numresolutions39 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %89, i32 0, i32 1
  %90 = load i32, i32* %numresolutions39, align 4, !tbaa !161
  %mul = mul i32 %90, 3
  %sub = sub i32 %mul, 2
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 1, %cond.true ], [ %sub, %cond.false ]
  store i32 %cond, i32* %numbands, align 4, !tbaa !5
  store i32 0, i32* %bandno, align 4, !tbaa !5
  br label %for.cond.40

for.cond.40:                                      ; preds = %for.inc.49, %cond.end
  %91 = load i32, i32* %bandno, align 4, !tbaa !5
  %92 = load i32, i32* %numbands, align 4, !tbaa !5
  %cmp41 = icmp slt i32 %91, %92
  br i1 %cmp41, label %for.body.42, label %for.end.51

for.body.42:                                      ; preds = %for.cond.40
  %93 = load %struct._IO_FILE*, %struct._IO_FILE** %out_stream.addr, align 8, !tbaa !1
  %94 = load i32, i32* %bandno, align 4, !tbaa !5
  %idxprom43 = sext i32 %94 to i64
  %95 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %stepsizes = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %95, i32 0, i32 7
  %arrayidx44 = getelementptr inbounds [97 x %struct.opj_stepsize], [97 x %struct.opj_stepsize]* %stepsizes, i32 0, i64 %idxprom43
  %mant = getelementptr inbounds %struct.opj_stepsize, %struct.opj_stepsize* %arrayidx44, i32 0, i32 1
  %96 = load i32, i32* %mant, align 4, !tbaa !219
  %97 = load i32, i32* %bandno, align 4, !tbaa !5
  %idxprom45 = sext i32 %97 to i64
  %98 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %stepsizes46 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %98, i32 0, i32 7
  %arrayidx47 = getelementptr inbounds [97 x %struct.opj_stepsize], [97 x %struct.opj_stepsize]* %stepsizes46, i32 0, i64 %idxprom45
  %expn = getelementptr inbounds %struct.opj_stepsize, %struct.opj_stepsize* %arrayidx47, i32 0, i32 0
  %99 = load i32, i32* %expn, align 4, !tbaa !221
  %call48 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %93, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.154, i32 0, i32 0), i32 %96, i32 %99) #7
  br label %for.inc.49

for.inc.49:                                       ; preds = %for.body.42
  %100 = load i32, i32* %bandno, align 4, !tbaa !5
  %inc50 = add nsw i32 %100, 1
  store i32 %inc50, i32* %bandno, align 4, !tbaa !5
  br label %for.cond.40

for.end.51:                                       ; preds = %for.cond.40
  %101 = load %struct._IO_FILE*, %struct._IO_FILE** %out_stream.addr, align 8, !tbaa !1
  %call52 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %101, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.155, i32 0, i32 0)) #7
  %102 = load %struct._IO_FILE*, %struct._IO_FILE** %out_stream.addr, align 8, !tbaa !1
  %103 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %roishift = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %103, i32 0, i32 9
  %104 = load i32, i32* %roishift, align 4, !tbaa !174
  %call53 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %102, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.159, i32 0, i32 0), i32 %104) #7
  %105 = load %struct._IO_FILE*, %struct._IO_FILE** %out_stream.addr, align 8, !tbaa !1
  %call54 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %105, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.160, i32 0, i32 0)) #7
  %106 = bitcast i32* %numbands to i8*
  call void @llvm.lifetime.end(i64 4, i8* %106) #1
  %107 = bitcast i32* %bandno to i8*
  call void @llvm.lifetime.end(i64 4, i8* %107) #1
  %108 = bitcast i32* %resno to i8*
  call void @llvm.lifetime.end(i64 4, i8* %108) #1
  %109 = bitcast %struct.opj_tccp** %l_tccp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %109) #1
  br label %for.inc.55

for.inc.55:                                       ; preds = %for.end.51
  %110 = load i32, i32* %compno, align 4, !tbaa !5
  %inc56 = add nsw i32 %110, 1
  store i32 %inc56, i32* %compno, align 4, !tbaa !5
  br label %for.cond

for.end.57:                                       ; preds = %for.cond
  %111 = load %struct._IO_FILE*, %struct._IO_FILE** %out_stream.addr, align 8, !tbaa !1
  %call58 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %111, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.133, i32 0, i32 0)) #7
  %112 = bitcast i32* %numcomps to i8*
  call void @llvm.lifetime.end(i64 4, i8* %112) #1
  %113 = bitcast i32* %compno to i8*
  call void @llvm.lifetime.end(i64 4, i8* %113) #1
  br label %if.end

if.end:                                           ; preds = %for.end.57, %entry
  %114 = load %struct._IO_FILE*, %struct._IO_FILE** %out_stream.addr, align 8, !tbaa !1
  %call59 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %114, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.41, i32 0, i32 0)) #7
  %115 = bitcast %struct.opj_tcp** %l_default_tile to i8*
  call void @llvm.lifetime.end(i64 8, i8* %115) #1
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @opj_j2k_dump_MH_index(%struct.opj_j2k* %p_j2k, %struct._IO_FILE* %out_stream) #0 {
entry:
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %out_stream.addr = alloca %struct._IO_FILE*, align 8
  %cstr_index = alloca %struct.opj_codestream_index*, align 8
  %it_marker = alloca i32, align 4
  %it_tile = alloca i32, align 4
  %it_tile_part = alloca i32, align 4
  %l_acc_nb_of_tile_part = alloca i32, align 4
  %nb_of_tile_part = alloca i32, align 4
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store %struct._IO_FILE* %out_stream, %struct._IO_FILE** %out_stream.addr, align 8, !tbaa !1
  %0 = bitcast %struct.opj_codestream_index** %cstr_index to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cstr_index1 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %1, i32 0, i32 7
  %2 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index1, align 8, !tbaa !29
  store %struct.opj_codestream_index* %2, %struct.opj_codestream_index** %cstr_index, align 8, !tbaa !1
  %3 = bitcast i32* %it_marker to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #1
  %4 = bitcast i32* %it_tile to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #1
  %5 = bitcast i32* %it_tile_part to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #1
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %out_stream.addr, align 8, !tbaa !1
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.129, i32 0, i32 0)) #7
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %out_stream.addr, align 8, !tbaa !1
  %8 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index, align 8, !tbaa !1
  %main_head_start = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %8, i32 0, i32 0
  %9 = load i64, i64* %main_head_start, align 8, !tbaa !222
  %10 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index, align 8, !tbaa !1
  %main_head_end = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %10, i32 0, i32 1
  %11 = load i64, i64* %main_head_end, align 8, !tbaa !223
  %call2 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.130, i32 0, i32 0), i64 %9, i64 %11) #7
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %out_stream.addr, align 8, !tbaa !1
  %call3 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.131, i32 0, i32 0)) #7
  %13 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index, align 8, !tbaa !1
  %marker = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %13, i32 0, i32 4
  %14 = load %struct.opj_marker_info*, %struct.opj_marker_info** %marker, align 8, !tbaa !182
  %tobool = icmp ne %struct.opj_marker_info* %14, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* %it_marker, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then
  %15 = load i32, i32* %it_marker, align 4, !tbaa !5
  %16 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index, align 8, !tbaa !1
  %marknum = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %16, i32 0, i32 3
  %17 = load i32, i32* %marknum, align 4, !tbaa !214
  %cmp = icmp ult i32 %15, %17
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** %out_stream.addr, align 8, !tbaa !1
  %19 = load i32, i32* %it_marker, align 4, !tbaa !5
  %idxprom = zext i32 %19 to i64
  %20 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index, align 8, !tbaa !1
  %marker4 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %20, i32 0, i32 4
  %21 = load %struct.opj_marker_info*, %struct.opj_marker_info** %marker4, align 8, !tbaa !182
  %arrayidx = getelementptr inbounds %struct.opj_marker_info, %struct.opj_marker_info* %21, i64 %idxprom
  %type = getelementptr inbounds %struct.opj_marker_info, %struct.opj_marker_info* %arrayidx, i32 0, i32 0
  %22 = load i16, i16* %type, align 2, !tbaa !200
  %conv = zext i16 %22 to i32
  %23 = load i32, i32* %it_marker, align 4, !tbaa !5
  %idxprom5 = zext i32 %23 to i64
  %24 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index, align 8, !tbaa !1
  %marker6 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %24, i32 0, i32 4
  %25 = load %struct.opj_marker_info*, %struct.opj_marker_info** %marker6, align 8, !tbaa !182
  %arrayidx7 = getelementptr inbounds %struct.opj_marker_info, %struct.opj_marker_info* %25, i64 %idxprom5
  %pos = getelementptr inbounds %struct.opj_marker_info, %struct.opj_marker_info* %arrayidx7, i32 0, i32 1
  %26 = load i64, i64* %pos, align 8, !tbaa !202
  %27 = load i32, i32* %it_marker, align 4, !tbaa !5
  %idxprom8 = zext i32 %27 to i64
  %28 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index, align 8, !tbaa !1
  %marker9 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %28, i32 0, i32 4
  %29 = load %struct.opj_marker_info*, %struct.opj_marker_info** %marker9, align 8, !tbaa !182
  %arrayidx10 = getelementptr inbounds %struct.opj_marker_info, %struct.opj_marker_info* %29, i64 %idxprom8
  %len = getelementptr inbounds %struct.opj_marker_info, %struct.opj_marker_info* %arrayidx10, i32 0, i32 2
  %30 = load i32, i32* %len, align 4, !tbaa !203
  %call11 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %18, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.132, i32 0, i32 0), i32 %conv, i64 %26, i32 %30) #7
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %31 = load i32, i32* %it_marker, align 4, !tbaa !5
  %inc = add i32 %31, 1
  store i32 %inc, i32* %it_marker, align 4, !tbaa !5
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end

if.end:                                           ; preds = %for.end, %entry
  %32 = load %struct._IO_FILE*, %struct._IO_FILE** %out_stream.addr, align 8, !tbaa !1
  %call12 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %32, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.133, i32 0, i32 0)) #7
  %33 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index, align 8, !tbaa !1
  %tile_index = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %33, i32 0, i32 7
  %34 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index, align 8, !tbaa !30
  %tobool13 = icmp ne %struct.opj_tile_index* %34, null
  br i1 %tobool13, label %if.then.14, label %if.end.116

if.then.14:                                       ; preds = %if.end
  %35 = bitcast i32* %l_acc_nb_of_tile_part to i8*
  call void @llvm.lifetime.start(i64 4, i8* %35) #1
  store i32 0, i32* %l_acc_nb_of_tile_part, align 4, !tbaa !5
  store i32 0, i32* %it_tile, align 4, !tbaa !5
  br label %for.cond.15

for.cond.15:                                      ; preds = %for.inc.22, %if.then.14
  %36 = load i32, i32* %it_tile, align 4, !tbaa !5
  %37 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index, align 8, !tbaa !1
  %nb_of_tiles = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %37, i32 0, i32 6
  %38 = load i32, i32* %nb_of_tiles, align 4, !tbaa !178
  %cmp16 = icmp ult i32 %36, %38
  br i1 %cmp16, label %for.body.18, label %for.end.24

for.body.18:                                      ; preds = %for.cond.15
  %39 = load i32, i32* %it_tile, align 4, !tbaa !5
  %idxprom19 = zext i32 %39 to i64
  %40 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index, align 8, !tbaa !1
  %tile_index20 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %40, i32 0, i32 7
  %41 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index20, align 8, !tbaa !30
  %arrayidx21 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %41, i64 %idxprom19
  %nb_tps = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx21, i32 0, i32 1
  %42 = load i32, i32* %nb_tps, align 4, !tbaa !35
  %43 = load i32, i32* %l_acc_nb_of_tile_part, align 4, !tbaa !5
  %add = add i32 %43, %42
  store i32 %add, i32* %l_acc_nb_of_tile_part, align 4, !tbaa !5
  br label %for.inc.22

for.inc.22:                                       ; preds = %for.body.18
  %44 = load i32, i32* %it_tile, align 4, !tbaa !5
  %inc23 = add i32 %44, 1
  store i32 %inc23, i32* %it_tile, align 4, !tbaa !5
  br label %for.cond.15

for.end.24:                                       ; preds = %for.cond.15
  %45 = load i32, i32* %l_acc_nb_of_tile_part, align 4, !tbaa !5
  %tobool25 = icmp ne i32 %45, 0
  br i1 %tobool25, label %if.then.26, label %if.end.115

if.then.26:                                       ; preds = %for.end.24
  %46 = load %struct._IO_FILE*, %struct._IO_FILE** %out_stream.addr, align 8, !tbaa !1
  %call27 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %46, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.134, i32 0, i32 0)) #7
  store i32 0, i32* %it_tile, align 4, !tbaa !5
  br label %for.cond.28

for.cond.28:                                      ; preds = %for.inc.111, %if.then.26
  %47 = load i32, i32* %it_tile, align 4, !tbaa !5
  %48 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index, align 8, !tbaa !1
  %nb_of_tiles29 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %48, i32 0, i32 6
  %49 = load i32, i32* %nb_of_tiles29, align 4, !tbaa !178
  %cmp30 = icmp ult i32 %47, %49
  br i1 %cmp30, label %for.body.32, label %for.end.113

for.body.32:                                      ; preds = %for.cond.28
  %50 = bitcast i32* %nb_of_tile_part to i8*
  call void @llvm.lifetime.start(i64 4, i8* %50) #1
  %51 = load i32, i32* %it_tile, align 4, !tbaa !5
  %idxprom33 = zext i32 %51 to i64
  %52 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index, align 8, !tbaa !1
  %tile_index34 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %52, i32 0, i32 7
  %53 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index34, align 8, !tbaa !30
  %arrayidx35 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %53, i64 %idxprom33
  %nb_tps36 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx35, i32 0, i32 1
  %54 = load i32, i32* %nb_tps36, align 4, !tbaa !35
  store i32 %54, i32* %nb_of_tile_part, align 4, !tbaa !5
  %55 = load %struct._IO_FILE*, %struct._IO_FILE** %out_stream.addr, align 8, !tbaa !1
  %56 = load i32, i32* %it_tile, align 4, !tbaa !5
  %57 = load i32, i32* %nb_of_tile_part, align 4, !tbaa !5
  %call37 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %55, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.135, i32 0, i32 0), i32 %56, i32 %57) #7
  %58 = load i32, i32* %it_tile, align 4, !tbaa !5
  %idxprom38 = zext i32 %58 to i64
  %59 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index, align 8, !tbaa !1
  %tile_index39 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %59, i32 0, i32 7
  %60 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index39, align 8, !tbaa !30
  %arrayidx40 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %60, i64 %idxprom38
  %tp_index = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx40, i32 0, i32 4
  %61 = load %struct.opj_tp_index*, %struct.opj_tp_index** %tp_index, align 8, !tbaa !37
  %tobool41 = icmp ne %struct.opj_tp_index* %61, null
  br i1 %tobool41, label %if.then.42, label %if.end.69

if.then.42:                                       ; preds = %for.body.32
  store i32 0, i32* %it_tile_part, align 4, !tbaa !5
  br label %for.cond.43

for.cond.43:                                      ; preds = %for.inc.66, %if.then.42
  %62 = load i32, i32* %it_tile_part, align 4, !tbaa !5
  %63 = load i32, i32* %nb_of_tile_part, align 4, !tbaa !5
  %cmp44 = icmp ult i32 %62, %63
  br i1 %cmp44, label %for.body.46, label %for.end.68

for.body.46:                                      ; preds = %for.cond.43
  %64 = load %struct._IO_FILE*, %struct._IO_FILE** %out_stream.addr, align 8, !tbaa !1
  %65 = load i32, i32* %it_tile_part, align 4, !tbaa !5
  %66 = load i32, i32* %it_tile_part, align 4, !tbaa !5
  %idxprom47 = zext i32 %66 to i64
  %67 = load i32, i32* %it_tile, align 4, !tbaa !5
  %idxprom48 = zext i32 %67 to i64
  %68 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index, align 8, !tbaa !1
  %tile_index49 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %68, i32 0, i32 7
  %69 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index49, align 8, !tbaa !30
  %arrayidx50 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %69, i64 %idxprom48
  %tp_index51 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx50, i32 0, i32 4
  %70 = load %struct.opj_tp_index*, %struct.opj_tp_index** %tp_index51, align 8, !tbaa !37
  %arrayidx52 = getelementptr inbounds %struct.opj_tp_index, %struct.opj_tp_index* %70, i64 %idxprom47
  %start_pos = getelementptr inbounds %struct.opj_tp_index, %struct.opj_tp_index* %arrayidx52, i32 0, i32 0
  %71 = load i64, i64* %start_pos, align 8, !tbaa !204
  %72 = load i32, i32* %it_tile_part, align 4, !tbaa !5
  %idxprom53 = zext i32 %72 to i64
  %73 = load i32, i32* %it_tile, align 4, !tbaa !5
  %idxprom54 = zext i32 %73 to i64
  %74 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index, align 8, !tbaa !1
  %tile_index55 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %74, i32 0, i32 7
  %75 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index55, align 8, !tbaa !30
  %arrayidx56 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %75, i64 %idxprom54
  %tp_index57 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx56, i32 0, i32 4
  %76 = load %struct.opj_tp_index*, %struct.opj_tp_index** %tp_index57, align 8, !tbaa !37
  %arrayidx58 = getelementptr inbounds %struct.opj_tp_index, %struct.opj_tp_index* %76, i64 %idxprom53
  %end_header = getelementptr inbounds %struct.opj_tp_index, %struct.opj_tp_index* %arrayidx58, i32 0, i32 1
  %77 = load i64, i64* %end_header, align 8, !tbaa !206
  %78 = load i32, i32* %it_tile_part, align 4, !tbaa !5
  %idxprom59 = zext i32 %78 to i64
  %79 = load i32, i32* %it_tile, align 4, !tbaa !5
  %idxprom60 = zext i32 %79 to i64
  %80 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index, align 8, !tbaa !1
  %tile_index61 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %80, i32 0, i32 7
  %81 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index61, align 8, !tbaa !30
  %arrayidx62 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %81, i64 %idxprom60
  %tp_index63 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx62, i32 0, i32 4
  %82 = load %struct.opj_tp_index*, %struct.opj_tp_index** %tp_index63, align 8, !tbaa !37
  %arrayidx64 = getelementptr inbounds %struct.opj_tp_index, %struct.opj_tp_index* %82, i64 %idxprom59
  %end_pos = getelementptr inbounds %struct.opj_tp_index, %struct.opj_tp_index* %arrayidx64, i32 0, i32 2
  %83 = load i64, i64* %end_pos, align 8, !tbaa !207
  %call65 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %64, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.136, i32 0, i32 0), i32 %65, i64 %71, i64 %77, i64 %83) #7
  br label %for.inc.66

for.inc.66:                                       ; preds = %for.body.46
  %84 = load i32, i32* %it_tile_part, align 4, !tbaa !5
  %inc67 = add i32 %84, 1
  store i32 %inc67, i32* %it_tile_part, align 4, !tbaa !5
  br label %for.cond.43

for.end.68:                                       ; preds = %for.cond.43
  br label %if.end.69

if.end.69:                                        ; preds = %for.end.68, %for.body.32
  %85 = load i32, i32* %it_tile, align 4, !tbaa !5
  %idxprom70 = zext i32 %85 to i64
  %86 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index, align 8, !tbaa !1
  %tile_index71 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %86, i32 0, i32 7
  %87 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index71, align 8, !tbaa !30
  %arrayidx72 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %87, i64 %idxprom70
  %marker73 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx72, i32 0, i32 6
  %88 = load %struct.opj_marker_info*, %struct.opj_marker_info** %marker73, align 8, !tbaa !181
  %tobool74 = icmp ne %struct.opj_marker_info* %88, null
  br i1 %tobool74, label %if.then.75, label %if.end.110

if.then.75:                                       ; preds = %if.end.69
  store i32 0, i32* %it_marker, align 4, !tbaa !5
  br label %for.cond.76

for.cond.76:                                      ; preds = %for.inc.107, %if.then.75
  %89 = load i32, i32* %it_marker, align 4, !tbaa !5
  %90 = load i32, i32* %it_tile, align 4, !tbaa !5
  %idxprom77 = zext i32 %90 to i64
  %91 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index, align 8, !tbaa !1
  %tile_index78 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %91, i32 0, i32 7
  %92 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index78, align 8, !tbaa !30
  %arrayidx79 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %92, i64 %idxprom77
  %marknum80 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx79, i32 0, i32 5
  %93 = load i32, i32* %marknum80, align 4, !tbaa !180
  %cmp81 = icmp ult i32 %89, %93
  br i1 %cmp81, label %for.body.83, label %for.end.109

for.body.83:                                      ; preds = %for.cond.76
  %94 = load %struct._IO_FILE*, %struct._IO_FILE** %out_stream.addr, align 8, !tbaa !1
  %95 = load i32, i32* %it_marker, align 4, !tbaa !5
  %idxprom84 = zext i32 %95 to i64
  %96 = load i32, i32* %it_tile, align 4, !tbaa !5
  %idxprom85 = zext i32 %96 to i64
  %97 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index, align 8, !tbaa !1
  %tile_index86 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %97, i32 0, i32 7
  %98 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index86, align 8, !tbaa !30
  %arrayidx87 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %98, i64 %idxprom85
  %marker88 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx87, i32 0, i32 6
  %99 = load %struct.opj_marker_info*, %struct.opj_marker_info** %marker88, align 8, !tbaa !181
  %arrayidx89 = getelementptr inbounds %struct.opj_marker_info, %struct.opj_marker_info* %99, i64 %idxprom84
  %type90 = getelementptr inbounds %struct.opj_marker_info, %struct.opj_marker_info* %arrayidx89, i32 0, i32 0
  %100 = load i16, i16* %type90, align 2, !tbaa !200
  %conv91 = zext i16 %100 to i32
  %101 = load i32, i32* %it_marker, align 4, !tbaa !5
  %idxprom92 = zext i32 %101 to i64
  %102 = load i32, i32* %it_tile, align 4, !tbaa !5
  %idxprom93 = zext i32 %102 to i64
  %103 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index, align 8, !tbaa !1
  %tile_index94 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %103, i32 0, i32 7
  %104 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index94, align 8, !tbaa !30
  %arrayidx95 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %104, i64 %idxprom93
  %marker96 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx95, i32 0, i32 6
  %105 = load %struct.opj_marker_info*, %struct.opj_marker_info** %marker96, align 8, !tbaa !181
  %arrayidx97 = getelementptr inbounds %struct.opj_marker_info, %struct.opj_marker_info* %105, i64 %idxprom92
  %pos98 = getelementptr inbounds %struct.opj_marker_info, %struct.opj_marker_info* %arrayidx97, i32 0, i32 1
  %106 = load i64, i64* %pos98, align 8, !tbaa !202
  %107 = load i32, i32* %it_marker, align 4, !tbaa !5
  %idxprom99 = zext i32 %107 to i64
  %108 = load i32, i32* %it_tile, align 4, !tbaa !5
  %idxprom100 = zext i32 %108 to i64
  %109 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index, align 8, !tbaa !1
  %tile_index101 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %109, i32 0, i32 7
  %110 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index101, align 8, !tbaa !30
  %arrayidx102 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %110, i64 %idxprom100
  %marker103 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx102, i32 0, i32 6
  %111 = load %struct.opj_marker_info*, %struct.opj_marker_info** %marker103, align 8, !tbaa !181
  %arrayidx104 = getelementptr inbounds %struct.opj_marker_info, %struct.opj_marker_info* %111, i64 %idxprom99
  %len105 = getelementptr inbounds %struct.opj_marker_info, %struct.opj_marker_info* %arrayidx104, i32 0, i32 2
  %112 = load i32, i32* %len105, align 4, !tbaa !203
  %call106 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %94, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.132, i32 0, i32 0), i32 %conv91, i64 %106, i32 %112) #7
  br label %for.inc.107

for.inc.107:                                      ; preds = %for.body.83
  %113 = load i32, i32* %it_marker, align 4, !tbaa !5
  %inc108 = add i32 %113, 1
  store i32 %inc108, i32* %it_marker, align 4, !tbaa !5
  br label %for.cond.76

for.end.109:                                      ; preds = %for.cond.76
  br label %if.end.110

if.end.110:                                       ; preds = %for.end.109, %if.end.69
  %114 = bitcast i32* %nb_of_tile_part to i8*
  call void @llvm.lifetime.end(i64 4, i8* %114) #1
  br label %for.inc.111

for.inc.111:                                      ; preds = %if.end.110
  %115 = load i32, i32* %it_tile, align 4, !tbaa !5
  %inc112 = add i32 %115, 1
  store i32 %inc112, i32* %it_tile, align 4, !tbaa !5
  br label %for.cond.28

for.end.113:                                      ; preds = %for.cond.28
  %116 = load %struct._IO_FILE*, %struct._IO_FILE** %out_stream.addr, align 8, !tbaa !1
  %call114 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %116, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.133, i32 0, i32 0)) #7
  br label %if.end.115

if.end.115:                                       ; preds = %for.end.113, %for.end.24
  %117 = bitcast i32* %l_acc_nb_of_tile_part to i8*
  call void @llvm.lifetime.end(i64 4, i8* %117) #1
  br label %if.end.116

if.end.116:                                       ; preds = %if.end.115, %if.end
  %118 = load %struct._IO_FILE*, %struct._IO_FILE** %out_stream.addr, align 8, !tbaa !1
  %call117 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %118, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.41, i32 0, i32 0)) #7
  %119 = bitcast i32* %it_tile_part to i8*
  call void @llvm.lifetime.end(i64 4, i8* %119) #1
  %120 = bitcast i32* %it_tile to i8*
  call void @llvm.lifetime.end(i64 4, i8* %120) #1
  %121 = bitcast i32* %it_marker to i8*
  call void @llvm.lifetime.end(i64 4, i8* %121) #1
  %122 = bitcast %struct.opj_codestream_index** %cstr_index to i8*
  call void @llvm.lifetime.end(i64 8, i8* %122) #1
  ret void
}

; Function Attrs: nounwind uwtable
define void @j2k_dump_image_comp_header(%struct.opj_image_comp* %comp_header, i32 %dev_dump_flag, %struct._IO_FILE* %out_stream) #0 {
entry:
  %comp_header.addr = alloca %struct.opj_image_comp*, align 8
  %dev_dump_flag.addr = alloca i32, align 4
  %out_stream.addr = alloca %struct._IO_FILE*, align 8
  %tab = alloca [3 x i8], align 1
  store %struct.opj_image_comp* %comp_header, %struct.opj_image_comp** %comp_header.addr, align 8, !tbaa !1
  store i32 %dev_dump_flag, i32* %dev_dump_flag.addr, align 4, !tbaa !5
  store %struct._IO_FILE* %out_stream, %struct._IO_FILE** %out_stream.addr, align 8, !tbaa !1
  %0 = bitcast [3 x i8]* %tab to i8*
  call void @llvm.lifetime.start(i64 3, i8* %0) #1
  %1 = load i32, i32* %dev_dump_flag.addr, align 4, !tbaa !5
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !1
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.42, i32 0, i32 0)) #7
  %arrayidx = getelementptr inbounds [3 x i8], [3 x i8]* %tab, i32 0, i64 0
  store i8 0, i8* %arrayidx, align 1, !tbaa !103
  br label %if.end

if.else:                                          ; preds = %entry
  %arrayidx1 = getelementptr inbounds [3 x i8], [3 x i8]* %tab, i32 0, i64 0
  store i8 9, i8* %arrayidx1, align 1, !tbaa !103
  %arrayidx2 = getelementptr inbounds [3 x i8], [3 x i8]* %tab, i32 0, i64 1
  store i8 9, i8* %arrayidx2, align 1, !tbaa !103
  %arrayidx3 = getelementptr inbounds [3 x i8], [3 x i8]* %tab, i32 0, i64 2
  store i8 0, i8* %arrayidx3, align 1, !tbaa !103
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %out_stream.addr, align 8, !tbaa !1
  %arraydecay = getelementptr inbounds [3 x i8], [3 x i8]* %tab, i32 0, i32 0
  %4 = load %struct.opj_image_comp*, %struct.opj_image_comp** %comp_header.addr, align 8, !tbaa !1
  %dx = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %4, i32 0, i32 0
  %5 = load i32, i32* %dx, align 4, !tbaa !67
  %6 = load %struct.opj_image_comp*, %struct.opj_image_comp** %comp_header.addr, align 8, !tbaa !1
  %dy = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %6, i32 0, i32 1
  %7 = load i32, i32* %dy, align 4, !tbaa !68
  %call4 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.43, i32 0, i32 0), i8* %arraydecay, i32 %5, i32 %7) #7
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %out_stream.addr, align 8, !tbaa !1
  %arraydecay5 = getelementptr inbounds [3 x i8], [3 x i8]* %tab, i32 0, i32 0
  %9 = load %struct.opj_image_comp*, %struct.opj_image_comp** %comp_header.addr, align 8, !tbaa !1
  %prec = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %9, i32 0, i32 6
  %10 = load i32, i32* %prec, align 4, !tbaa !63
  %call6 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.44, i32 0, i32 0), i8* %arraydecay5, i32 %10) #7
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %out_stream.addr, align 8, !tbaa !1
  %arraydecay7 = getelementptr inbounds [3 x i8], [3 x i8]* %tab, i32 0, i32 0
  %12 = load %struct.opj_image_comp*, %struct.opj_image_comp** %comp_header.addr, align 8, !tbaa !1
  %sgnd = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %12, i32 0, i32 8
  %13 = load i32, i32* %sgnd, align 4, !tbaa !66
  %call8 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %11, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.45, i32 0, i32 0), i8* %arraydecay7, i32 %13) #7
  %14 = load i32, i32* %dev_dump_flag.addr, align 4, !tbaa !5
  %tobool9 = icmp ne i32 %14, 0
  br i1 %tobool9, label %if.then.10, label %if.end.12

if.then.10:                                       ; preds = %if.end
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** %out_stream.addr, align 8, !tbaa !1
  %call11 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %15, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.41, i32 0, i32 0)) #7
  br label %if.end.12

if.end.12:                                        ; preds = %if.then.10, %if.end
  %16 = bitcast [3 x i8]* %tab to i8*
  call void @llvm.lifetime.end(i64 3, i8* %16) #1
  ret void
}

; Function Attrs: nounwind uwtable
define %struct.opj_codestream_info_v2* @j2k_get_cstr_info(%struct.opj_j2k* %p_j2k) #0 {
entry:
  %retval = alloca %struct.opj_codestream_info_v2*, align 8
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %compno = alloca i32, align 4
  %numcomps = alloca i32, align 4
  %l_default_tile = alloca %struct.opj_tcp*, align 8
  %cstr_info = alloca %struct.opj_codestream_info_v2*, align 8
  %cleanup.dest.slot = alloca i32
  %l_tccp = alloca %struct.opj_tccp*, align 8
  %l_tccp_info = alloca %struct.opj_tccp_info*, align 8
  %bandno = alloca i32, align 4
  %numbands = alloca i32, align 4
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %0 = bitcast i32* %compno to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast i32* %numcomps to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_private_image = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %2, i32 0, i32 2
  %3 = load %struct.opj_image*, %struct.opj_image** %m_private_image, align 8, !tbaa !38
  %numcomps1 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %3, i32 0, i32 4
  %4 = load i32, i32* %numcomps1, align 4, !tbaa !45
  store i32 %4, i32* %numcomps, align 4, !tbaa !5
  %5 = bitcast %struct.opj_tcp** %l_default_tile to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5) #1
  %6 = bitcast %struct.opj_codestream_info_v2** %cstr_info to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6) #1
  %call = call noalias i8* @calloc(i64 1, i64 72) #9
  %7 = bitcast i8* %call to %struct.opj_codestream_info_v2*
  store %struct.opj_codestream_info_v2* %7, %struct.opj_codestream_info_v2** %cstr_info, align 8, !tbaa !1
  %8 = load %struct.opj_codestream_info_v2*, %struct.opj_codestream_info_v2** %cstr_info, align 8, !tbaa !1
  %tobool = icmp ne %struct.opj_codestream_info_v2* %8, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct.opj_codestream_info_v2* null, %struct.opj_codestream_info_v2** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %9 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_private_image2 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %9, i32 0, i32 2
  %10 = load %struct.opj_image*, %struct.opj_image** %m_private_image2, align 8, !tbaa !38
  %numcomps3 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %10, i32 0, i32 4
  %11 = load i32, i32* %numcomps3, align 4, !tbaa !45
  %12 = load %struct.opj_codestream_info_v2*, %struct.opj_codestream_info_v2** %cstr_info, align 8, !tbaa !1
  %nbcomps = getelementptr inbounds %struct.opj_codestream_info_v2, %struct.opj_codestream_info_v2* %12, i32 0, i32 6
  store i32 %11, i32* %nbcomps, align 4, !tbaa !224
  %13 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %13, i32 0, i32 4
  %tx0 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp, i32 0, i32 1
  %14 = load i32, i32* %tx0, align 4, !tbaa !215
  %15 = load %struct.opj_codestream_info_v2*, %struct.opj_codestream_info_v2** %cstr_info, align 8, !tbaa !1
  %tx04 = getelementptr inbounds %struct.opj_codestream_info_v2, %struct.opj_codestream_info_v2* %15, i32 0, i32 0
  store i32 %14, i32* %tx04, align 4, !tbaa !227
  %16 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp5 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %16, i32 0, i32 4
  %ty0 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp5, i32 0, i32 2
  %17 = load i32, i32* %ty0, align 4, !tbaa !216
  %18 = load %struct.opj_codestream_info_v2*, %struct.opj_codestream_info_v2** %cstr_info, align 8, !tbaa !1
  %ty06 = getelementptr inbounds %struct.opj_codestream_info_v2, %struct.opj_codestream_info_v2* %18, i32 0, i32 1
  store i32 %17, i32* %ty06, align 4, !tbaa !228
  %19 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp7 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %19, i32 0, i32 4
  %tdx = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp7, i32 0, i32 3
  %20 = load i32, i32* %tdx, align 4, !tbaa !217
  %21 = load %struct.opj_codestream_info_v2*, %struct.opj_codestream_info_v2** %cstr_info, align 8, !tbaa !1
  %tdx8 = getelementptr inbounds %struct.opj_codestream_info_v2, %struct.opj_codestream_info_v2* %21, i32 0, i32 2
  store i32 %20, i32* %tdx8, align 4, !tbaa !229
  %22 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp9 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %22, i32 0, i32 4
  %tdy = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp9, i32 0, i32 4
  %23 = load i32, i32* %tdy, align 4, !tbaa !218
  %24 = load %struct.opj_codestream_info_v2*, %struct.opj_codestream_info_v2** %cstr_info, align 8, !tbaa !1
  %tdy10 = getelementptr inbounds %struct.opj_codestream_info_v2, %struct.opj_codestream_info_v2* %24, i32 0, i32 3
  store i32 %23, i32* %tdy10, align 4, !tbaa !230
  %25 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp11 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %25, i32 0, i32 4
  %tw = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp11, i32 0, i32 6
  %26 = load i32, i32* %tw, align 4, !tbaa !176
  %27 = load %struct.opj_codestream_info_v2*, %struct.opj_codestream_info_v2** %cstr_info, align 8, !tbaa !1
  %tw12 = getelementptr inbounds %struct.opj_codestream_info_v2, %struct.opj_codestream_info_v2* %27, i32 0, i32 4
  store i32 %26, i32* %tw12, align 4, !tbaa !231
  %28 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp13 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %28, i32 0, i32 4
  %th = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp13, i32 0, i32 7
  %29 = load i32, i32* %th, align 4, !tbaa !177
  %30 = load %struct.opj_codestream_info_v2*, %struct.opj_codestream_info_v2** %cstr_info, align 8, !tbaa !1
  %th14 = getelementptr inbounds %struct.opj_codestream_info_v2, %struct.opj_codestream_info_v2* %30, i32 0, i32 5
  store i32 %29, i32* %th14, align 4, !tbaa !232
  %31 = load %struct.opj_codestream_info_v2*, %struct.opj_codestream_info_v2** %cstr_info, align 8, !tbaa !1
  %tile_info = getelementptr inbounds %struct.opj_codestream_info_v2, %struct.opj_codestream_info_v2* %31, i32 0, i32 8
  store %struct.opj_tile_v2_info* null, %struct.opj_tile_v2_info** %tile_info, align 8, !tbaa !233
  %32 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %32, i32 0, i32 1
  %m_decoder = bitcast %union.anon* %m_specific_param to %struct.opj_j2k_dec*
  %m_default_tcp = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder, i32 0, i32 1
  %33 = load %struct.opj_tcp*, %struct.opj_tcp** %m_default_tcp, align 8, !tbaa !39
  store %struct.opj_tcp* %33, %struct.opj_tcp** %l_default_tile, align 8, !tbaa !1
  %34 = load %struct.opj_tcp*, %struct.opj_tcp** %l_default_tile, align 8, !tbaa !1
  %csty = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %34, i32 0, i32 0
  %35 = load i32, i32* %csty, align 4, !tbaa !47
  %36 = load %struct.opj_codestream_info_v2*, %struct.opj_codestream_info_v2** %cstr_info, align 8, !tbaa !1
  %m_default_tile_info = getelementptr inbounds %struct.opj_codestream_info_v2, %struct.opj_codestream_info_v2* %36, i32 0, i32 7
  %csty15 = getelementptr inbounds %struct.opj_tile_v2_info, %struct.opj_tile_v2_info* %m_default_tile_info, i32 0, i32 1
  store i32 %35, i32* %csty15, align 4, !tbaa !234
  %37 = load %struct.opj_tcp*, %struct.opj_tcp** %l_default_tile, align 8, !tbaa !1
  %prg = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %37, i32 0, i32 1
  %38 = load i32, i32* %prg, align 4, !tbaa !40
  %39 = load %struct.opj_codestream_info_v2*, %struct.opj_codestream_info_v2** %cstr_info, align 8, !tbaa !1
  %m_default_tile_info16 = getelementptr inbounds %struct.opj_codestream_info_v2, %struct.opj_codestream_info_v2* %39, i32 0, i32 7
  %prg17 = getelementptr inbounds %struct.opj_tile_v2_info, %struct.opj_tile_v2_info* %m_default_tile_info16, i32 0, i32 2
  store i32 %38, i32* %prg17, align 4, !tbaa !235
  %40 = load %struct.opj_tcp*, %struct.opj_tcp** %l_default_tile, align 8, !tbaa !1
  %numlayers = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %40, i32 0, i32 2
  %41 = load i32, i32* %numlayers, align 4, !tbaa !44
  %42 = load %struct.opj_codestream_info_v2*, %struct.opj_codestream_info_v2** %cstr_info, align 8, !tbaa !1
  %m_default_tile_info18 = getelementptr inbounds %struct.opj_codestream_info_v2, %struct.opj_codestream_info_v2* %42, i32 0, i32 7
  %numlayers19 = getelementptr inbounds %struct.opj_tile_v2_info, %struct.opj_tile_v2_info* %m_default_tile_info18, i32 0, i32 3
  store i32 %41, i32* %numlayers19, align 4, !tbaa !236
  %43 = load %struct.opj_tcp*, %struct.opj_tcp** %l_default_tile, align 8, !tbaa !1
  %mct = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %43, i32 0, i32 4
  %44 = load i32, i32* %mct, align 4, !tbaa !151
  %45 = load %struct.opj_codestream_info_v2*, %struct.opj_codestream_info_v2** %cstr_info, align 8, !tbaa !1
  %m_default_tile_info20 = getelementptr inbounds %struct.opj_codestream_info_v2, %struct.opj_codestream_info_v2* %45, i32 0, i32 7
  %mct21 = getelementptr inbounds %struct.opj_tile_v2_info, %struct.opj_tile_v2_info* %m_default_tile_info20, i32 0, i32 4
  store i32 %44, i32* %mct21, align 4, !tbaa !237
  %46 = load %struct.opj_codestream_info_v2*, %struct.opj_codestream_info_v2** %cstr_info, align 8, !tbaa !1
  %nbcomps22 = getelementptr inbounds %struct.opj_codestream_info_v2, %struct.opj_codestream_info_v2* %46, i32 0, i32 6
  %47 = load i32, i32* %nbcomps22, align 4, !tbaa !224
  %conv = zext i32 %47 to i64
  %cmp = icmp ne i64 %conv, 0
  br i1 %cmp, label %land.lhs.true, label %cond.false

land.lhs.true:                                    ; preds = %if.end
  %48 = load %struct.opj_codestream_info_v2*, %struct.opj_codestream_info_v2** %cstr_info, align 8, !tbaa !1
  %nbcomps24 = getelementptr inbounds %struct.opj_codestream_info_v2, %struct.opj_codestream_info_v2* %48, i32 0, i32 6
  %49 = load i32, i32* %nbcomps24, align 4, !tbaa !224
  %conv25 = zext i32 %49 to i64
  %cmp26 = icmp uge i64 %conv25, 17080318586768103
  br i1 %cmp26, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true, %if.end
  %50 = load %struct.opj_codestream_info_v2*, %struct.opj_codestream_info_v2** %cstr_info, align 8, !tbaa !1
  %nbcomps28 = getelementptr inbounds %struct.opj_codestream_info_v2, %struct.opj_codestream_info_v2* %50, i32 0, i32 6
  %51 = load i32, i32* %nbcomps28, align 4, !tbaa !224
  %conv29 = zext i32 %51 to i64
  %call30 = call noalias i8* @calloc(i64 %conv29, i64 1080) #9
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ null, %cond.true ], [ %call30, %cond.false ]
  %52 = bitcast i8* %cond to %struct.opj_tccp_info*
  %53 = load %struct.opj_codestream_info_v2*, %struct.opj_codestream_info_v2** %cstr_info, align 8, !tbaa !1
  %m_default_tile_info31 = getelementptr inbounds %struct.opj_codestream_info_v2, %struct.opj_codestream_info_v2* %53, i32 0, i32 7
  %tccp_info = getelementptr inbounds %struct.opj_tile_v2_info, %struct.opj_tile_v2_info* %m_default_tile_info31, i32 0, i32 5
  store %struct.opj_tccp_info* %52, %struct.opj_tccp_info** %tccp_info, align 8, !tbaa !238
  %54 = load %struct.opj_codestream_info_v2*, %struct.opj_codestream_info_v2** %cstr_info, align 8, !tbaa !1
  %m_default_tile_info32 = getelementptr inbounds %struct.opj_codestream_info_v2, %struct.opj_codestream_info_v2* %54, i32 0, i32 7
  %tccp_info33 = getelementptr inbounds %struct.opj_tile_v2_info, %struct.opj_tile_v2_info* %m_default_tile_info32, i32 0, i32 5
  %55 = load %struct.opj_tccp_info*, %struct.opj_tccp_info** %tccp_info33, align 8, !tbaa !238
  %tobool34 = icmp ne %struct.opj_tccp_info* %55, null
  br i1 %tobool34, label %if.end.36, label %if.then.35

if.then.35:                                       ; preds = %cond.end
  call void @opj_destroy_cstr_info(%struct.opj_codestream_info_v2** %cstr_info) #7
  store %struct.opj_codestream_info_v2* null, %struct.opj_codestream_info_v2** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.36:                                        ; preds = %cond.end
  store i32 0, i32* %compno, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc.94, %if.end.36
  %56 = load i32, i32* %compno, align 4, !tbaa !5
  %57 = load i32, i32* %numcomps, align 4, !tbaa !5
  %cmp37 = icmp ult i32 %56, %57
  br i1 %cmp37, label %for.body, label %for.end.96

for.body:                                         ; preds = %for.cond
  %58 = bitcast %struct.opj_tccp** %l_tccp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %58) #1
  %59 = load i32, i32* %compno, align 4, !tbaa !5
  %idxprom = zext i32 %59 to i64
  %60 = load %struct.opj_tcp*, %struct.opj_tcp** %l_default_tile, align 8, !tbaa !1
  %tccps = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %60, i32 0, i32 13
  %61 = load %struct.opj_tccp*, %struct.opj_tccp** %tccps, align 8, !tbaa !48
  %arrayidx = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %61, i64 %idxprom
  store %struct.opj_tccp* %arrayidx, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %62 = bitcast %struct.opj_tccp_info** %l_tccp_info to i8*
  call void @llvm.lifetime.start(i64 8, i8* %62) #1
  %63 = load i32, i32* %compno, align 4, !tbaa !5
  %idxprom39 = zext i32 %63 to i64
  %64 = load %struct.opj_codestream_info_v2*, %struct.opj_codestream_info_v2** %cstr_info, align 8, !tbaa !1
  %m_default_tile_info40 = getelementptr inbounds %struct.opj_codestream_info_v2, %struct.opj_codestream_info_v2* %64, i32 0, i32 7
  %tccp_info41 = getelementptr inbounds %struct.opj_tile_v2_info, %struct.opj_tile_v2_info* %m_default_tile_info40, i32 0, i32 5
  %65 = load %struct.opj_tccp_info*, %struct.opj_tccp_info** %tccp_info41, align 8, !tbaa !238
  %arrayidx42 = getelementptr inbounds %struct.opj_tccp_info, %struct.opj_tccp_info* %65, i64 %idxprom39
  store %struct.opj_tccp_info* %arrayidx42, %struct.opj_tccp_info** %l_tccp_info, align 8, !tbaa !1
  %66 = bitcast i32* %bandno to i8*
  call void @llvm.lifetime.start(i64 4, i8* %66) #1
  %67 = bitcast i32* %numbands to i8*
  call void @llvm.lifetime.start(i64 4, i8* %67) #1
  %68 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %csty43 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %68, i32 0, i32 0
  %69 = load i32, i32* %csty43, align 4, !tbaa !49
  %70 = load %struct.opj_tccp_info*, %struct.opj_tccp_info** %l_tccp_info, align 8, !tbaa !1
  %csty44 = getelementptr inbounds %struct.opj_tccp_info, %struct.opj_tccp_info* %70, i32 0, i32 1
  store i32 %69, i32* %csty44, align 4, !tbaa !239
  %71 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %numresolutions = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %71, i32 0, i32 1
  %72 = load i32, i32* %numresolutions, align 4, !tbaa !161
  %73 = load %struct.opj_tccp_info*, %struct.opj_tccp_info** %l_tccp_info, align 8, !tbaa !1
  %numresolutions45 = getelementptr inbounds %struct.opj_tccp_info, %struct.opj_tccp_info* %73, i32 0, i32 2
  store i32 %72, i32* %numresolutions45, align 4, !tbaa !241
  %74 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %cblkw = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %74, i32 0, i32 2
  %75 = load i32, i32* %cblkw, align 4, !tbaa !163
  %76 = load %struct.opj_tccp_info*, %struct.opj_tccp_info** %l_tccp_info, align 8, !tbaa !1
  %cblkw46 = getelementptr inbounds %struct.opj_tccp_info, %struct.opj_tccp_info* %76, i32 0, i32 3
  store i32 %75, i32* %cblkw46, align 4, !tbaa !242
  %77 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %cblkh = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %77, i32 0, i32 3
  %78 = load i32, i32* %cblkh, align 4, !tbaa !165
  %79 = load %struct.opj_tccp_info*, %struct.opj_tccp_info** %l_tccp_info, align 8, !tbaa !1
  %cblkh47 = getelementptr inbounds %struct.opj_tccp_info, %struct.opj_tccp_info* %79, i32 0, i32 4
  store i32 %78, i32* %cblkh47, align 4, !tbaa !243
  %80 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %cblksty = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %80, i32 0, i32 4
  %81 = load i32, i32* %cblksty, align 4, !tbaa !167
  %82 = load %struct.opj_tccp_info*, %struct.opj_tccp_info** %l_tccp_info, align 8, !tbaa !1
  %cblksty48 = getelementptr inbounds %struct.opj_tccp_info, %struct.opj_tccp_info* %82, i32 0, i32 5
  store i32 %81, i32* %cblksty48, align 4, !tbaa !244
  %83 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %qmfbid = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %83, i32 0, i32 5
  %84 = load i32, i32* %qmfbid, align 4, !tbaa !169
  %85 = load %struct.opj_tccp_info*, %struct.opj_tccp_info** %l_tccp_info, align 8, !tbaa !1
  %qmfbid49 = getelementptr inbounds %struct.opj_tccp_info, %struct.opj_tccp_info* %85, i32 0, i32 6
  store i32 %84, i32* %qmfbid49, align 4, !tbaa !245
  %86 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %numresolutions50 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %86, i32 0, i32 1
  %87 = load i32, i32* %numresolutions50, align 4, !tbaa !161
  %cmp51 = icmp ult i32 %87, 33
  br i1 %cmp51, label %if.then.53, label %if.end.65

if.then.53:                                       ; preds = %for.body
  %88 = load %struct.opj_tccp_info*, %struct.opj_tccp_info** %l_tccp_info, align 8, !tbaa !1
  %prch = getelementptr inbounds %struct.opj_tccp_info, %struct.opj_tccp_info* %88, i32 0, i32 13
  %arraydecay = getelementptr inbounds [33 x i32], [33 x i32]* %prch, i32 0, i32 0
  %89 = bitcast i32* %arraydecay to i8*
  %90 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %prch54 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %90, i32 0, i32 11
  %arraydecay55 = getelementptr inbounds [33 x i32], [33 x i32]* %prch54, i32 0, i32 0
  %91 = bitcast i32* %arraydecay55 to i8*
  %92 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %numresolutions56 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %92, i32 0, i32 1
  %93 = load i32, i32* %numresolutions56, align 4, !tbaa !161
  %conv57 = zext i32 %93 to i64
  %call58 = call i8* @memcpy(i8* %89, i8* %91, i64 %conv57) #9
  %94 = load %struct.opj_tccp_info*, %struct.opj_tccp_info** %l_tccp_info, align 8, !tbaa !1
  %prcw = getelementptr inbounds %struct.opj_tccp_info, %struct.opj_tccp_info* %94, i32 0, i32 12
  %arraydecay59 = getelementptr inbounds [33 x i32], [33 x i32]* %prcw, i32 0, i32 0
  %95 = bitcast i32* %arraydecay59 to i8*
  %96 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %prcw60 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %96, i32 0, i32 10
  %arraydecay61 = getelementptr inbounds [33 x i32], [33 x i32]* %prcw60, i32 0, i32 0
  %97 = bitcast i32* %arraydecay61 to i8*
  %98 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %numresolutions62 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %98, i32 0, i32 1
  %99 = load i32, i32* %numresolutions62, align 4, !tbaa !161
  %conv63 = zext i32 %99 to i64
  %call64 = call i8* @memcpy(i8* %95, i8* %97, i64 %conv63) #9
  br label %if.end.65

if.end.65:                                        ; preds = %if.then.53, %for.body
  %100 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %qntsty = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %100, i32 0, i32 6
  %101 = load i32, i32* %qntsty, align 4, !tbaa !170
  %102 = load %struct.opj_tccp_info*, %struct.opj_tccp_info** %l_tccp_info, align 8, !tbaa !1
  %qntsty66 = getelementptr inbounds %struct.opj_tccp_info, %struct.opj_tccp_info* %102, i32 0, i32 7
  store i32 %101, i32* %qntsty66, align 4, !tbaa !246
  %103 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %numgbits = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %103, i32 0, i32 8
  %104 = load i32, i32* %numgbits, align 4, !tbaa !171
  %105 = load %struct.opj_tccp_info*, %struct.opj_tccp_info** %l_tccp_info, align 8, !tbaa !1
  %numgbits67 = getelementptr inbounds %struct.opj_tccp_info, %struct.opj_tccp_info* %105, i32 0, i32 10
  store i32 %104, i32* %numgbits67, align 4, !tbaa !247
  %106 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %qntsty68 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %106, i32 0, i32 6
  %107 = load i32, i32* %qntsty68, align 4, !tbaa !170
  %cmp69 = icmp eq i32 %107, 1
  br i1 %cmp69, label %cond.true.71, label %cond.false.72

cond.true.71:                                     ; preds = %if.end.65
  br label %cond.end.74

cond.false.72:                                    ; preds = %if.end.65
  %108 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %numresolutions73 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %108, i32 0, i32 1
  %109 = load i32, i32* %numresolutions73, align 4, !tbaa !161
  %mul = mul i32 %109, 3
  %sub = sub i32 %mul, 2
  br label %cond.end.74

cond.end.74:                                      ; preds = %cond.false.72, %cond.true.71
  %cond75 = phi i32 [ 1, %cond.true.71 ], [ %sub, %cond.false.72 ]
  store i32 %cond75, i32* %numbands, align 4, !tbaa !5
  %110 = load i32, i32* %numbands, align 4, !tbaa !5
  %cmp76 = icmp slt i32 %110, 97
  br i1 %cmp76, label %if.then.78, label %if.end.92

if.then.78:                                       ; preds = %cond.end.74
  store i32 0, i32* %bandno, align 4, !tbaa !5
  br label %for.cond.79

for.cond.79:                                      ; preds = %for.inc, %if.then.78
  %111 = load i32, i32* %bandno, align 4, !tbaa !5
  %112 = load i32, i32* %numbands, align 4, !tbaa !5
  %cmp80 = icmp slt i32 %111, %112
  br i1 %cmp80, label %for.body.82, label %for.end

for.body.82:                                      ; preds = %for.cond.79
  %113 = load i32, i32* %bandno, align 4, !tbaa !5
  %idxprom83 = sext i32 %113 to i64
  %114 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %stepsizes = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %114, i32 0, i32 7
  %arrayidx84 = getelementptr inbounds [97 x %struct.opj_stepsize], [97 x %struct.opj_stepsize]* %stepsizes, i32 0, i64 %idxprom83
  %mant = getelementptr inbounds %struct.opj_stepsize, %struct.opj_stepsize* %arrayidx84, i32 0, i32 1
  %115 = load i32, i32* %mant, align 4, !tbaa !219
  %116 = load i32, i32* %bandno, align 4, !tbaa !5
  %idxprom85 = sext i32 %116 to i64
  %117 = load %struct.opj_tccp_info*, %struct.opj_tccp_info** %l_tccp_info, align 8, !tbaa !1
  %stepsizes_mant = getelementptr inbounds %struct.opj_tccp_info, %struct.opj_tccp_info* %117, i32 0, i32 8
  %arrayidx86 = getelementptr inbounds [97 x i32], [97 x i32]* %stepsizes_mant, i32 0, i64 %idxprom85
  store i32 %115, i32* %arrayidx86, align 4, !tbaa !5
  %118 = load i32, i32* %bandno, align 4, !tbaa !5
  %idxprom87 = sext i32 %118 to i64
  %119 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %stepsizes88 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %119, i32 0, i32 7
  %arrayidx89 = getelementptr inbounds [97 x %struct.opj_stepsize], [97 x %struct.opj_stepsize]* %stepsizes88, i32 0, i64 %idxprom87
  %expn = getelementptr inbounds %struct.opj_stepsize, %struct.opj_stepsize* %arrayidx89, i32 0, i32 0
  %120 = load i32, i32* %expn, align 4, !tbaa !221
  %121 = load i32, i32* %bandno, align 4, !tbaa !5
  %idxprom90 = sext i32 %121 to i64
  %122 = load %struct.opj_tccp_info*, %struct.opj_tccp_info** %l_tccp_info, align 8, !tbaa !1
  %stepsizes_expn = getelementptr inbounds %struct.opj_tccp_info, %struct.opj_tccp_info* %122, i32 0, i32 9
  %arrayidx91 = getelementptr inbounds [97 x i32], [97 x i32]* %stepsizes_expn, i32 0, i64 %idxprom90
  store i32 %120, i32* %arrayidx91, align 4, !tbaa !5
  br label %for.inc

for.inc:                                          ; preds = %for.body.82
  %123 = load i32, i32* %bandno, align 4, !tbaa !5
  %inc = add nsw i32 %123, 1
  store i32 %inc, i32* %bandno, align 4, !tbaa !5
  br label %for.cond.79

for.end:                                          ; preds = %for.cond.79
  br label %if.end.92

if.end.92:                                        ; preds = %for.end, %cond.end.74
  %124 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %roishift = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %124, i32 0, i32 9
  %125 = load i32, i32* %roishift, align 4, !tbaa !174
  %126 = load %struct.opj_tccp_info*, %struct.opj_tccp_info** %l_tccp_info, align 8, !tbaa !1
  %roishift93 = getelementptr inbounds %struct.opj_tccp_info, %struct.opj_tccp_info* %126, i32 0, i32 11
  store i32 %125, i32* %roishift93, align 4, !tbaa !248
  %127 = bitcast i32* %numbands to i8*
  call void @llvm.lifetime.end(i64 4, i8* %127) #1
  %128 = bitcast i32* %bandno to i8*
  call void @llvm.lifetime.end(i64 4, i8* %128) #1
  %129 = bitcast %struct.opj_tccp_info** %l_tccp_info to i8*
  call void @llvm.lifetime.end(i64 8, i8* %129) #1
  %130 = bitcast %struct.opj_tccp** %l_tccp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %130) #1
  br label %for.inc.94

for.inc.94:                                       ; preds = %if.end.92
  %131 = load i32, i32* %compno, align 4, !tbaa !5
  %inc95 = add i32 %131, 1
  store i32 %inc95, i32* %compno, align 4, !tbaa !5
  br label %for.cond

for.end.96:                                       ; preds = %for.cond
  %132 = load %struct.opj_codestream_info_v2*, %struct.opj_codestream_info_v2** %cstr_info, align 8, !tbaa !1
  store %struct.opj_codestream_info_v2* %132, %struct.opj_codestream_info_v2** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %for.end.96, %if.then.35, %if.then
  %133 = bitcast %struct.opj_codestream_info_v2** %cstr_info to i8*
  call void @llvm.lifetime.end(i64 8, i8* %133) #1
  %134 = bitcast %struct.opj_tcp** %l_default_tile to i8*
  call void @llvm.lifetime.end(i64 8, i8* %134) #1
  %135 = bitcast i32* %numcomps to i8*
  call void @llvm.lifetime.end(i64 4, i8* %135) #1
  %136 = bitcast i32* %compno to i8*
  call void @llvm.lifetime.end(i64 4, i8* %136) #1
  %137 = load %struct.opj_codestream_info_v2*, %struct.opj_codestream_info_v2** %retval
  ret %struct.opj_codestream_info_v2* %137
}

declare void @opj_destroy_cstr_info(%struct.opj_codestream_info_v2**) #3

; Function Attrs: nounwind uwtable
define %struct.opj_codestream_index* @j2k_get_cstr_index(%struct.opj_j2k* %p_j2k) #0 {
entry:
  %retval = alloca %struct.opj_codestream_index*, align 8
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %l_cstr_index = alloca %struct.opj_codestream_index*, align 8
  %cleanup.dest.slot = alloca i32
  %it_tile = alloca i32, align 4
  %it_tile_free = alloca i32, align 4
  %it_tile_free180 = alloca i32, align 4
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %0 = bitcast %struct.opj_codestream_index** %l_cstr_index to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %call = call noalias i8* @calloc(i64 1, i64 56) #9
  %1 = bitcast i8* %call to %struct.opj_codestream_index*
  store %struct.opj_codestream_index* %1, %struct.opj_codestream_index** %l_cstr_index, align 8, !tbaa !1
  %2 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %l_cstr_index, align 8, !tbaa !1
  %tobool = icmp ne %struct.opj_codestream_index* %2, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct.opj_codestream_index* null, %struct.opj_codestream_index** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.242

if.end:                                           ; preds = %entry
  %3 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cstr_index = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %3, i32 0, i32 7
  %4 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index, align 8, !tbaa !29
  %main_head_start = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %4, i32 0, i32 0
  %5 = load i64, i64* %main_head_start, align 8, !tbaa !222
  %6 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %l_cstr_index, align 8, !tbaa !1
  %main_head_start1 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %6, i32 0, i32 0
  store i64 %5, i64* %main_head_start1, align 8, !tbaa !222
  %7 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cstr_index2 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %7, i32 0, i32 7
  %8 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index2, align 8, !tbaa !29
  %main_head_end = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %8, i32 0, i32 1
  %9 = load i64, i64* %main_head_end, align 8, !tbaa !223
  %10 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %l_cstr_index, align 8, !tbaa !1
  %main_head_end3 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %10, i32 0, i32 1
  store i64 %9, i64* %main_head_end3, align 8, !tbaa !223
  %11 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cstr_index4 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %11, i32 0, i32 7
  %12 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index4, align 8, !tbaa !29
  %codestream_size = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %12, i32 0, i32 2
  %13 = load i64, i64* %codestream_size, align 8, !tbaa !249
  %14 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %l_cstr_index, align 8, !tbaa !1
  %codestream_size5 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %14, i32 0, i32 2
  store i64 %13, i64* %codestream_size5, align 8, !tbaa !249
  %15 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cstr_index6 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %15, i32 0, i32 7
  %16 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index6, align 8, !tbaa !29
  %marknum = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %16, i32 0, i32 3
  %17 = load i32, i32* %marknum, align 4, !tbaa !214
  %18 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %l_cstr_index, align 8, !tbaa !1
  %marknum7 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %18, i32 0, i32 3
  store i32 %17, i32* %marknum7, align 4, !tbaa !214
  %19 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %l_cstr_index, align 8, !tbaa !1
  %marknum8 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %19, i32 0, i32 3
  %20 = load i32, i32* %marknum8, align 4, !tbaa !214
  %conv = zext i32 %20 to i64
  %mul = mul i64 %conv, 24
  %cmp = icmp uge i64 %mul, -256
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end
  br label %cond.end

cond.false:                                       ; preds = %if.end
  %21 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %l_cstr_index, align 8, !tbaa !1
  %marknum10 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %21, i32 0, i32 3
  %22 = load i32, i32* %marknum10, align 4, !tbaa !214
  %conv11 = zext i32 %22 to i64
  %mul12 = mul i64 %conv11, 24
  %call13 = call noalias i8* @malloc(i64 %mul12) #9
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ null, %cond.true ], [ %call13, %cond.false ]
  %23 = bitcast i8* %cond to %struct.opj_marker_info*
  %24 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %l_cstr_index, align 8, !tbaa !1
  %marker = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %24, i32 0, i32 4
  store %struct.opj_marker_info* %23, %struct.opj_marker_info** %marker, align 8, !tbaa !182
  %25 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %l_cstr_index, align 8, !tbaa !1
  %marker14 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %25, i32 0, i32 4
  %26 = load %struct.opj_marker_info*, %struct.opj_marker_info** %marker14, align 8, !tbaa !182
  %tobool15 = icmp ne %struct.opj_marker_info* %26, null
  br i1 %tobool15, label %if.end.17, label %if.then.16

if.then.16:                                       ; preds = %cond.end
  %27 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %l_cstr_index, align 8, !tbaa !1
  %28 = bitcast %struct.opj_codestream_index* %27 to i8*
  call void @free(i8* %28) #9
  store %struct.opj_codestream_index* null, %struct.opj_codestream_index** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.242

if.end.17:                                        ; preds = %cond.end
  %29 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cstr_index18 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %29, i32 0, i32 7
  %30 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index18, align 8, !tbaa !29
  %marker19 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %30, i32 0, i32 4
  %31 = load %struct.opj_marker_info*, %struct.opj_marker_info** %marker19, align 8, !tbaa !182
  %tobool20 = icmp ne %struct.opj_marker_info* %31, null
  br i1 %tobool20, label %if.then.21, label %if.else

if.then.21:                                       ; preds = %if.end.17
  %32 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %l_cstr_index, align 8, !tbaa !1
  %marker22 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %32, i32 0, i32 4
  %33 = load %struct.opj_marker_info*, %struct.opj_marker_info** %marker22, align 8, !tbaa !182
  %34 = bitcast %struct.opj_marker_info* %33 to i8*
  %35 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cstr_index23 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %35, i32 0, i32 7
  %36 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index23, align 8, !tbaa !29
  %marker24 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %36, i32 0, i32 4
  %37 = load %struct.opj_marker_info*, %struct.opj_marker_info** %marker24, align 8, !tbaa !182
  %38 = bitcast %struct.opj_marker_info* %37 to i8*
  %39 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %l_cstr_index, align 8, !tbaa !1
  %marknum25 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %39, i32 0, i32 3
  %40 = load i32, i32* %marknum25, align 4, !tbaa !214
  %conv26 = zext i32 %40 to i64
  %mul27 = mul i64 %conv26, 24
  %call28 = call i8* @memcpy(i8* %34, i8* %38, i64 %mul27) #9
  br label %if.end.31

if.else:                                          ; preds = %if.end.17
  %41 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %l_cstr_index, align 8, !tbaa !1
  %marker29 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %41, i32 0, i32 4
  %42 = load %struct.opj_marker_info*, %struct.opj_marker_info** %marker29, align 8, !tbaa !182
  %43 = bitcast %struct.opj_marker_info* %42 to i8*
  call void @free(i8* %43) #9
  %44 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %l_cstr_index, align 8, !tbaa !1
  %marker30 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %44, i32 0, i32 4
  store %struct.opj_marker_info* null, %struct.opj_marker_info** %marker30, align 8, !tbaa !182
  br label %if.end.31

if.end.31:                                        ; preds = %if.else, %if.then.21
  %45 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cstr_index32 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %45, i32 0, i32 7
  %46 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index32, align 8, !tbaa !29
  %nb_of_tiles = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %46, i32 0, i32 6
  %47 = load i32, i32* %nb_of_tiles, align 4, !tbaa !178
  %48 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %l_cstr_index, align 8, !tbaa !1
  %nb_of_tiles33 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %48, i32 0, i32 6
  store i32 %47, i32* %nb_of_tiles33, align 4, !tbaa !178
  %49 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %l_cstr_index, align 8, !tbaa !1
  %nb_of_tiles34 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %49, i32 0, i32 6
  %50 = load i32, i32* %nb_of_tiles34, align 4, !tbaa !178
  %conv35 = zext i32 %50 to i64
  %cmp36 = icmp ne i64 %conv35, 0
  br i1 %cmp36, label %land.lhs.true, label %cond.false.43

land.lhs.true:                                    ; preds = %if.end.31
  %51 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %l_cstr_index, align 8, !tbaa !1
  %nb_of_tiles38 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %51, i32 0, i32 6
  %52 = load i32, i32* %nb_of_tiles38, align 4, !tbaa !178
  %conv39 = zext i32 %52 to i64
  %cmp40 = icmp uge i64 %conv39, 329406144173384845
  br i1 %cmp40, label %cond.true.42, label %cond.false.43

cond.true.42:                                     ; preds = %land.lhs.true
  br label %cond.end.47

cond.false.43:                                    ; preds = %land.lhs.true, %if.end.31
  %53 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %l_cstr_index, align 8, !tbaa !1
  %nb_of_tiles44 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %53, i32 0, i32 6
  %54 = load i32, i32* %nb_of_tiles44, align 4, !tbaa !178
  %conv45 = zext i32 %54 to i64
  %call46 = call noalias i8* @calloc(i64 %conv45, i64 56) #9
  br label %cond.end.47

cond.end.47:                                      ; preds = %cond.false.43, %cond.true.42
  %cond48 = phi i8* [ null, %cond.true.42 ], [ %call46, %cond.false.43 ]
  %55 = bitcast i8* %cond48 to %struct.opj_tile_index*
  %56 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %l_cstr_index, align 8, !tbaa !1
  %tile_index = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %56, i32 0, i32 7
  store %struct.opj_tile_index* %55, %struct.opj_tile_index** %tile_index, align 8, !tbaa !30
  %57 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %l_cstr_index, align 8, !tbaa !1
  %tile_index49 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %57, i32 0, i32 7
  %58 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index49, align 8, !tbaa !30
  %tobool50 = icmp ne %struct.opj_tile_index* %58, null
  br i1 %tobool50, label %if.end.53, label %if.then.51

if.then.51:                                       ; preds = %cond.end.47
  %59 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %l_cstr_index, align 8, !tbaa !1
  %marker52 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %59, i32 0, i32 4
  %60 = load %struct.opj_marker_info*, %struct.opj_marker_info** %marker52, align 8, !tbaa !182
  %61 = bitcast %struct.opj_marker_info* %60 to i8*
  call void @free(i8* %61) #9
  %62 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %l_cstr_index, align 8, !tbaa !1
  %63 = bitcast %struct.opj_codestream_index* %62 to i8*
  call void @free(i8* %63) #9
  store %struct.opj_codestream_index* null, %struct.opj_codestream_index** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.242

if.end.53:                                        ; preds = %cond.end.47
  %64 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cstr_index54 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %64, i32 0, i32 7
  %65 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index54, align 8, !tbaa !29
  %tile_index55 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %65, i32 0, i32 7
  %66 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index55, align 8, !tbaa !30
  %tobool56 = icmp ne %struct.opj_tile_index* %66, null
  br i1 %tobool56, label %if.else.60, label %if.then.57

if.then.57:                                       ; preds = %if.end.53
  %67 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %l_cstr_index, align 8, !tbaa !1
  %tile_index58 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %67, i32 0, i32 7
  %68 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index58, align 8, !tbaa !30
  %69 = bitcast %struct.opj_tile_index* %68 to i8*
  call void @free(i8* %69) #9
  %70 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %l_cstr_index, align 8, !tbaa !1
  %tile_index59 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %70, i32 0, i32 7
  store %struct.opj_tile_index* null, %struct.opj_tile_index** %tile_index59, align 8, !tbaa !30
  br label %if.end.241

if.else.60:                                       ; preds = %if.end.53
  %71 = bitcast i32* %it_tile to i8*
  call void @llvm.lifetime.start(i64 4, i8* %71) #1
  store i32 0, i32* %it_tile, align 4, !tbaa !5
  store i32 0, i32* %it_tile, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc.238, %if.else.60
  %72 = load i32, i32* %it_tile, align 4, !tbaa !5
  %73 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %l_cstr_index, align 8, !tbaa !1
  %nb_of_tiles61 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %73, i32 0, i32 6
  %74 = load i32, i32* %nb_of_tiles61, align 4, !tbaa !178
  %cmp62 = icmp ult i32 %72, %74
  br i1 %cmp62, label %for.body, label %for.end.240

for.body:                                         ; preds = %for.cond
  %75 = load i32, i32* %it_tile, align 4, !tbaa !5
  %idxprom = zext i32 %75 to i64
  %76 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cstr_index64 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %76, i32 0, i32 7
  %77 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index64, align 8, !tbaa !29
  %tile_index65 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %77, i32 0, i32 7
  %78 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index65, align 8, !tbaa !30
  %arrayidx = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %78, i64 %idxprom
  %marknum66 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx, i32 0, i32 5
  %79 = load i32, i32* %marknum66, align 4, !tbaa !180
  %80 = load i32, i32* %it_tile, align 4, !tbaa !5
  %idxprom67 = zext i32 %80 to i64
  %81 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %l_cstr_index, align 8, !tbaa !1
  %tile_index68 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %81, i32 0, i32 7
  %82 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index68, align 8, !tbaa !30
  %arrayidx69 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %82, i64 %idxprom67
  %marknum70 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx69, i32 0, i32 5
  store i32 %79, i32* %marknum70, align 4, !tbaa !180
  %83 = load i32, i32* %it_tile, align 4, !tbaa !5
  %idxprom71 = zext i32 %83 to i64
  %84 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %l_cstr_index, align 8, !tbaa !1
  %tile_index72 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %84, i32 0, i32 7
  %85 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index72, align 8, !tbaa !30
  %arrayidx73 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %85, i64 %idxprom71
  %marknum74 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx73, i32 0, i32 5
  %86 = load i32, i32* %marknum74, align 4, !tbaa !180
  %conv75 = zext i32 %86 to i64
  %mul76 = mul i64 %conv75, 24
  %cmp77 = icmp uge i64 %mul76, -256
  br i1 %cmp77, label %cond.true.79, label %cond.false.80

cond.true.79:                                     ; preds = %for.body
  br label %cond.end.88

cond.false.80:                                    ; preds = %for.body
  %87 = load i32, i32* %it_tile, align 4, !tbaa !5
  %idxprom81 = zext i32 %87 to i64
  %88 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %l_cstr_index, align 8, !tbaa !1
  %tile_index82 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %88, i32 0, i32 7
  %89 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index82, align 8, !tbaa !30
  %arrayidx83 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %89, i64 %idxprom81
  %marknum84 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx83, i32 0, i32 5
  %90 = load i32, i32* %marknum84, align 4, !tbaa !180
  %conv85 = zext i32 %90 to i64
  %mul86 = mul i64 %conv85, 24
  %call87 = call noalias i8* @malloc(i64 %mul86) #9
  br label %cond.end.88

cond.end.88:                                      ; preds = %cond.false.80, %cond.true.79
  %cond89 = phi i8* [ null, %cond.true.79 ], [ %call87, %cond.false.80 ]
  %91 = bitcast i8* %cond89 to %struct.opj_marker_info*
  %92 = load i32, i32* %it_tile, align 4, !tbaa !5
  %idxprom90 = zext i32 %92 to i64
  %93 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %l_cstr_index, align 8, !tbaa !1
  %tile_index91 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %93, i32 0, i32 7
  %94 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index91, align 8, !tbaa !30
  %arrayidx92 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %94, i64 %idxprom90
  %marker93 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx92, i32 0, i32 6
  store %struct.opj_marker_info* %91, %struct.opj_marker_info** %marker93, align 8, !tbaa !181
  %95 = load i32, i32* %it_tile, align 4, !tbaa !5
  %idxprom94 = zext i32 %95 to i64
  %96 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %l_cstr_index, align 8, !tbaa !1
  %tile_index95 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %96, i32 0, i32 7
  %97 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index95, align 8, !tbaa !30
  %arrayidx96 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %97, i64 %idxprom94
  %marker97 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx96, i32 0, i32 6
  %98 = load %struct.opj_marker_info*, %struct.opj_marker_info** %marker97, align 8, !tbaa !181
  %tobool98 = icmp ne %struct.opj_marker_info* %98, null
  br i1 %tobool98, label %if.end.110, label %if.then.99

if.then.99:                                       ; preds = %cond.end.88
  %99 = bitcast i32* %it_tile_free to i8*
  call void @llvm.lifetime.start(i64 4, i8* %99) #1
  store i32 0, i32* %it_tile_free, align 4, !tbaa !5
  br label %for.cond.100

for.cond.100:                                     ; preds = %for.inc, %if.then.99
  %100 = load i32, i32* %it_tile_free, align 4, !tbaa !5
  %101 = load i32, i32* %it_tile, align 4, !tbaa !5
  %cmp101 = icmp ult i32 %100, %101
  br i1 %cmp101, label %for.body.103, label %for.end

for.body.103:                                     ; preds = %for.cond.100
  %102 = load i32, i32* %it_tile_free, align 4, !tbaa !5
  %idxprom104 = zext i32 %102 to i64
  %103 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %l_cstr_index, align 8, !tbaa !1
  %tile_index105 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %103, i32 0, i32 7
  %104 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index105, align 8, !tbaa !30
  %arrayidx106 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %104, i64 %idxprom104
  %marker107 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx106, i32 0, i32 6
  %105 = load %struct.opj_marker_info*, %struct.opj_marker_info** %marker107, align 8, !tbaa !181
  %106 = bitcast %struct.opj_marker_info* %105 to i8*
  call void @free(i8* %106) #9
  br label %for.inc

for.inc:                                          ; preds = %for.body.103
  %107 = load i32, i32* %it_tile_free, align 4, !tbaa !5
  %inc = add i32 %107, 1
  store i32 %inc, i32* %it_tile_free, align 4, !tbaa !5
  br label %for.cond.100

for.end:                                          ; preds = %for.cond.100
  %108 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %l_cstr_index, align 8, !tbaa !1
  %tile_index108 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %108, i32 0, i32 7
  %109 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index108, align 8, !tbaa !30
  %110 = bitcast %struct.opj_tile_index* %109 to i8*
  call void @free(i8* %110) #9
  %111 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %l_cstr_index, align 8, !tbaa !1
  %marker109 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %111, i32 0, i32 4
  %112 = load %struct.opj_marker_info*, %struct.opj_marker_info** %marker109, align 8, !tbaa !182
  %113 = bitcast %struct.opj_marker_info* %112 to i8*
  call void @free(i8* %113) #9
  %114 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %l_cstr_index, align 8, !tbaa !1
  %115 = bitcast %struct.opj_codestream_index* %114 to i8*
  call void @free(i8* %115) #9
  store %struct.opj_codestream_index* null, %struct.opj_codestream_index** %retval
  store i32 1, i32* %cleanup.dest.slot
  %116 = bitcast i32* %it_tile_free to i8*
  call void @llvm.lifetime.end(i64 4, i8* %116) #1
  br label %cleanup

if.end.110:                                       ; preds = %cond.end.88
  %117 = load i32, i32* %it_tile, align 4, !tbaa !5
  %idxprom111 = zext i32 %117 to i64
  %118 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cstr_index112 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %118, i32 0, i32 7
  %119 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index112, align 8, !tbaa !29
  %tile_index113 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %119, i32 0, i32 7
  %120 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index113, align 8, !tbaa !30
  %arrayidx114 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %120, i64 %idxprom111
  %marker115 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx114, i32 0, i32 6
  %121 = load %struct.opj_marker_info*, %struct.opj_marker_info** %marker115, align 8, !tbaa !181
  %tobool116 = icmp ne %struct.opj_marker_info* %121, null
  br i1 %tobool116, label %if.then.117, label %if.else.134

if.then.117:                                      ; preds = %if.end.110
  %122 = load i32, i32* %it_tile, align 4, !tbaa !5
  %idxprom118 = zext i32 %122 to i64
  %123 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %l_cstr_index, align 8, !tbaa !1
  %tile_index119 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %123, i32 0, i32 7
  %124 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index119, align 8, !tbaa !30
  %arrayidx120 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %124, i64 %idxprom118
  %marker121 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx120, i32 0, i32 6
  %125 = load %struct.opj_marker_info*, %struct.opj_marker_info** %marker121, align 8, !tbaa !181
  %126 = bitcast %struct.opj_marker_info* %125 to i8*
  %127 = load i32, i32* %it_tile, align 4, !tbaa !5
  %idxprom122 = zext i32 %127 to i64
  %128 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cstr_index123 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %128, i32 0, i32 7
  %129 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index123, align 8, !tbaa !29
  %tile_index124 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %129, i32 0, i32 7
  %130 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index124, align 8, !tbaa !30
  %arrayidx125 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %130, i64 %idxprom122
  %marker126 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx125, i32 0, i32 6
  %131 = load %struct.opj_marker_info*, %struct.opj_marker_info** %marker126, align 8, !tbaa !181
  %132 = bitcast %struct.opj_marker_info* %131 to i8*
  %133 = load i32, i32* %it_tile, align 4, !tbaa !5
  %idxprom127 = zext i32 %133 to i64
  %134 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %l_cstr_index, align 8, !tbaa !1
  %tile_index128 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %134, i32 0, i32 7
  %135 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index128, align 8, !tbaa !30
  %arrayidx129 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %135, i64 %idxprom127
  %marknum130 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx129, i32 0, i32 5
  %136 = load i32, i32* %marknum130, align 4, !tbaa !180
  %conv131 = zext i32 %136 to i64
  %mul132 = mul i64 %conv131, 24
  %call133 = call i8* @memcpy(i8* %126, i8* %132, i64 %mul132) #9
  br label %if.end.143

if.else.134:                                      ; preds = %if.end.110
  %137 = load i32, i32* %it_tile, align 4, !tbaa !5
  %idxprom135 = zext i32 %137 to i64
  %138 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %l_cstr_index, align 8, !tbaa !1
  %tile_index136 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %138, i32 0, i32 7
  %139 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index136, align 8, !tbaa !30
  %arrayidx137 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %139, i64 %idxprom135
  %marker138 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx137, i32 0, i32 6
  %140 = load %struct.opj_marker_info*, %struct.opj_marker_info** %marker138, align 8, !tbaa !181
  %141 = bitcast %struct.opj_marker_info* %140 to i8*
  call void @free(i8* %141) #9
  %142 = load i32, i32* %it_tile, align 4, !tbaa !5
  %idxprom139 = zext i32 %142 to i64
  %143 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %l_cstr_index, align 8, !tbaa !1
  %tile_index140 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %143, i32 0, i32 7
  %144 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index140, align 8, !tbaa !30
  %arrayidx141 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %144, i64 %idxprom139
  %marker142 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx141, i32 0, i32 6
  store %struct.opj_marker_info* null, %struct.opj_marker_info** %marker142, align 8, !tbaa !181
  br label %if.end.143

if.end.143:                                       ; preds = %if.else.134, %if.then.117
  %145 = load i32, i32* %it_tile, align 4, !tbaa !5
  %idxprom144 = zext i32 %145 to i64
  %146 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cstr_index145 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %146, i32 0, i32 7
  %147 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index145, align 8, !tbaa !29
  %tile_index146 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %147, i32 0, i32 7
  %148 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index146, align 8, !tbaa !30
  %arrayidx147 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %148, i64 %idxprom144
  %nb_tps = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx147, i32 0, i32 1
  %149 = load i32, i32* %nb_tps, align 4, !tbaa !35
  %150 = load i32, i32* %it_tile, align 4, !tbaa !5
  %idxprom148 = zext i32 %150 to i64
  %151 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %l_cstr_index, align 8, !tbaa !1
  %tile_index149 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %151, i32 0, i32 7
  %152 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index149, align 8, !tbaa !30
  %arrayidx150 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %152, i64 %idxprom148
  %nb_tps151 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx150, i32 0, i32 1
  store i32 %149, i32* %nb_tps151, align 4, !tbaa !35
  %153 = load i32, i32* %it_tile, align 4, !tbaa !5
  %idxprom152 = zext i32 %153 to i64
  %154 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %l_cstr_index, align 8, !tbaa !1
  %tile_index153 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %154, i32 0, i32 7
  %155 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index153, align 8, !tbaa !30
  %arrayidx154 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %155, i64 %idxprom152
  %nb_tps155 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx154, i32 0, i32 1
  %156 = load i32, i32* %nb_tps155, align 4, !tbaa !35
  %conv156 = zext i32 %156 to i64
  %mul157 = mul i64 %conv156, 24
  %cmp158 = icmp uge i64 %mul157, -256
  br i1 %cmp158, label %cond.true.160, label %cond.false.161

cond.true.160:                                    ; preds = %if.end.143
  br label %cond.end.169

cond.false.161:                                   ; preds = %if.end.143
  %157 = load i32, i32* %it_tile, align 4, !tbaa !5
  %idxprom162 = zext i32 %157 to i64
  %158 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %l_cstr_index, align 8, !tbaa !1
  %tile_index163 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %158, i32 0, i32 7
  %159 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index163, align 8, !tbaa !30
  %arrayidx164 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %159, i64 %idxprom162
  %nb_tps165 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx164, i32 0, i32 1
  %160 = load i32, i32* %nb_tps165, align 4, !tbaa !35
  %conv166 = zext i32 %160 to i64
  %mul167 = mul i64 %conv166, 24
  %call168 = call noalias i8* @malloc(i64 %mul167) #9
  br label %cond.end.169

cond.end.169:                                     ; preds = %cond.false.161, %cond.true.160
  %cond170 = phi i8* [ null, %cond.true.160 ], [ %call168, %cond.false.161 ]
  %161 = bitcast i8* %cond170 to %struct.opj_tp_index*
  %162 = load i32, i32* %it_tile, align 4, !tbaa !5
  %idxprom171 = zext i32 %162 to i64
  %163 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %l_cstr_index, align 8, !tbaa !1
  %tile_index172 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %163, i32 0, i32 7
  %164 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index172, align 8, !tbaa !30
  %arrayidx173 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %164, i64 %idxprom171
  %tp_index = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx173, i32 0, i32 4
  store %struct.opj_tp_index* %161, %struct.opj_tp_index** %tp_index, align 8, !tbaa !37
  %165 = load i32, i32* %it_tile, align 4, !tbaa !5
  %idxprom174 = zext i32 %165 to i64
  %166 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %l_cstr_index, align 8, !tbaa !1
  %tile_index175 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %166, i32 0, i32 7
  %167 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index175, align 8, !tbaa !30
  %arrayidx176 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %167, i64 %idxprom174
  %tp_index177 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx176, i32 0, i32 4
  %168 = load %struct.opj_tp_index*, %struct.opj_tp_index** %tp_index177, align 8, !tbaa !37
  %tobool178 = icmp ne %struct.opj_tp_index* %168, null
  br i1 %tobool178, label %if.end.198, label %if.then.179

if.then.179:                                      ; preds = %cond.end.169
  %169 = bitcast i32* %it_tile_free180 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %169) #1
  store i32 0, i32* %it_tile_free180, align 4, !tbaa !5
  br label %for.cond.181

for.cond.181:                                     ; preds = %for.inc.193, %if.then.179
  %170 = load i32, i32* %it_tile_free180, align 4, !tbaa !5
  %171 = load i32, i32* %it_tile, align 4, !tbaa !5
  %cmp182 = icmp ult i32 %170, %171
  br i1 %cmp182, label %for.body.184, label %for.end.195

for.body.184:                                     ; preds = %for.cond.181
  %172 = load i32, i32* %it_tile_free180, align 4, !tbaa !5
  %idxprom185 = zext i32 %172 to i64
  %173 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %l_cstr_index, align 8, !tbaa !1
  %tile_index186 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %173, i32 0, i32 7
  %174 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index186, align 8, !tbaa !30
  %arrayidx187 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %174, i64 %idxprom185
  %marker188 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx187, i32 0, i32 6
  %175 = load %struct.opj_marker_info*, %struct.opj_marker_info** %marker188, align 8, !tbaa !181
  %176 = bitcast %struct.opj_marker_info* %175 to i8*
  call void @free(i8* %176) #9
  %177 = load i32, i32* %it_tile_free180, align 4, !tbaa !5
  %idxprom189 = zext i32 %177 to i64
  %178 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %l_cstr_index, align 8, !tbaa !1
  %tile_index190 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %178, i32 0, i32 7
  %179 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index190, align 8, !tbaa !30
  %arrayidx191 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %179, i64 %idxprom189
  %tp_index192 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx191, i32 0, i32 4
  %180 = load %struct.opj_tp_index*, %struct.opj_tp_index** %tp_index192, align 8, !tbaa !37
  %181 = bitcast %struct.opj_tp_index* %180 to i8*
  call void @free(i8* %181) #9
  br label %for.inc.193

for.inc.193:                                      ; preds = %for.body.184
  %182 = load i32, i32* %it_tile_free180, align 4, !tbaa !5
  %inc194 = add i32 %182, 1
  store i32 %inc194, i32* %it_tile_free180, align 4, !tbaa !5
  br label %for.cond.181

for.end.195:                                      ; preds = %for.cond.181
  %183 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %l_cstr_index, align 8, !tbaa !1
  %tile_index196 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %183, i32 0, i32 7
  %184 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index196, align 8, !tbaa !30
  %185 = bitcast %struct.opj_tile_index* %184 to i8*
  call void @free(i8* %185) #9
  %186 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %l_cstr_index, align 8, !tbaa !1
  %marker197 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %186, i32 0, i32 4
  %187 = load %struct.opj_marker_info*, %struct.opj_marker_info** %marker197, align 8, !tbaa !182
  %188 = bitcast %struct.opj_marker_info* %187 to i8*
  call void @free(i8* %188) #9
  %189 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %l_cstr_index, align 8, !tbaa !1
  %190 = bitcast %struct.opj_codestream_index* %189 to i8*
  call void @free(i8* %190) #9
  store %struct.opj_codestream_index* null, %struct.opj_codestream_index** %retval
  store i32 1, i32* %cleanup.dest.slot
  %191 = bitcast i32* %it_tile_free180 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %191) #1
  br label %cleanup

if.end.198:                                       ; preds = %cond.end.169
  %192 = load i32, i32* %it_tile, align 4, !tbaa !5
  %idxprom199 = zext i32 %192 to i64
  %193 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cstr_index200 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %193, i32 0, i32 7
  %194 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index200, align 8, !tbaa !29
  %tile_index201 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %194, i32 0, i32 7
  %195 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index201, align 8, !tbaa !30
  %arrayidx202 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %195, i64 %idxprom199
  %tp_index203 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx202, i32 0, i32 4
  %196 = load %struct.opj_tp_index*, %struct.opj_tp_index** %tp_index203, align 8, !tbaa !37
  %tobool204 = icmp ne %struct.opj_tp_index* %196, null
  br i1 %tobool204, label %if.then.205, label %if.else.222

if.then.205:                                      ; preds = %if.end.198
  %197 = load i32, i32* %it_tile, align 4, !tbaa !5
  %idxprom206 = zext i32 %197 to i64
  %198 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %l_cstr_index, align 8, !tbaa !1
  %tile_index207 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %198, i32 0, i32 7
  %199 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index207, align 8, !tbaa !30
  %arrayidx208 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %199, i64 %idxprom206
  %tp_index209 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx208, i32 0, i32 4
  %200 = load %struct.opj_tp_index*, %struct.opj_tp_index** %tp_index209, align 8, !tbaa !37
  %201 = bitcast %struct.opj_tp_index* %200 to i8*
  %202 = load i32, i32* %it_tile, align 4, !tbaa !5
  %idxprom210 = zext i32 %202 to i64
  %203 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cstr_index211 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %203, i32 0, i32 7
  %204 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index211, align 8, !tbaa !29
  %tile_index212 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %204, i32 0, i32 7
  %205 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index212, align 8, !tbaa !30
  %arrayidx213 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %205, i64 %idxprom210
  %tp_index214 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx213, i32 0, i32 4
  %206 = load %struct.opj_tp_index*, %struct.opj_tp_index** %tp_index214, align 8, !tbaa !37
  %207 = bitcast %struct.opj_tp_index* %206 to i8*
  %208 = load i32, i32* %it_tile, align 4, !tbaa !5
  %idxprom215 = zext i32 %208 to i64
  %209 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %l_cstr_index, align 8, !tbaa !1
  %tile_index216 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %209, i32 0, i32 7
  %210 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index216, align 8, !tbaa !30
  %arrayidx217 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %210, i64 %idxprom215
  %nb_tps218 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx217, i32 0, i32 1
  %211 = load i32, i32* %nb_tps218, align 4, !tbaa !35
  %conv219 = zext i32 %211 to i64
  %mul220 = mul i64 %conv219, 24
  %call221 = call i8* @memcpy(i8* %201, i8* %207, i64 %mul220) #9
  br label %if.end.231

if.else.222:                                      ; preds = %if.end.198
  %212 = load i32, i32* %it_tile, align 4, !tbaa !5
  %idxprom223 = zext i32 %212 to i64
  %213 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %l_cstr_index, align 8, !tbaa !1
  %tile_index224 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %213, i32 0, i32 7
  %214 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index224, align 8, !tbaa !30
  %arrayidx225 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %214, i64 %idxprom223
  %tp_index226 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx225, i32 0, i32 4
  %215 = load %struct.opj_tp_index*, %struct.opj_tp_index** %tp_index226, align 8, !tbaa !37
  %216 = bitcast %struct.opj_tp_index* %215 to i8*
  call void @free(i8* %216) #9
  %217 = load i32, i32* %it_tile, align 4, !tbaa !5
  %idxprom227 = zext i32 %217 to i64
  %218 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %l_cstr_index, align 8, !tbaa !1
  %tile_index228 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %218, i32 0, i32 7
  %219 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index228, align 8, !tbaa !30
  %arrayidx229 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %219, i64 %idxprom227
  %tp_index230 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx229, i32 0, i32 4
  store %struct.opj_tp_index* null, %struct.opj_tp_index** %tp_index230, align 8, !tbaa !37
  br label %if.end.231

if.end.231:                                       ; preds = %if.else.222, %if.then.205
  %220 = load i32, i32* %it_tile, align 4, !tbaa !5
  %idxprom232 = zext i32 %220 to i64
  %221 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %l_cstr_index, align 8, !tbaa !1
  %tile_index233 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %221, i32 0, i32 7
  %222 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index233, align 8, !tbaa !30
  %arrayidx234 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %222, i64 %idxprom232
  %nb_packet = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx234, i32 0, i32 8
  store i32 0, i32* %nb_packet, align 4, !tbaa !250
  %223 = load i32, i32* %it_tile, align 4, !tbaa !5
  %idxprom235 = zext i32 %223 to i64
  %224 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %l_cstr_index, align 8, !tbaa !1
  %tile_index236 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %224, i32 0, i32 7
  %225 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index236, align 8, !tbaa !30
  %arrayidx237 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %225, i64 %idxprom235
  %packet_index = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx237, i32 0, i32 9
  store %struct.opj_packet_info* null, %struct.opj_packet_info** %packet_index, align 8, !tbaa !183
  br label %for.inc.238

for.inc.238:                                      ; preds = %if.end.231
  %226 = load i32, i32* %it_tile, align 4, !tbaa !5
  %inc239 = add i32 %226, 1
  store i32 %inc239, i32* %it_tile, align 4, !tbaa !5
  br label %for.cond

for.end.240:                                      ; preds = %for.cond
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %for.end.240, %for.end.195, %for.end
  %227 = bitcast i32* %it_tile to i8*
  call void @llvm.lifetime.end(i64 4, i8* %227) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.242 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.241

if.end.241:                                       ; preds = %cleanup.cont, %if.then.57
  %228 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %l_cstr_index, align 8, !tbaa !1
  store %struct.opj_codestream_index* %228, %struct.opj_codestream_index** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.242

cleanup.242:                                      ; preds = %if.end.241, %cleanup, %if.then.51, %if.then.16, %if.then
  %229 = bitcast %struct.opj_codestream_index** %l_cstr_index to i8*
  call void @llvm.lifetime.end(i64 8, i8* %229) #1
  %230 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %retval
  ret %struct.opj_codestream_index* %230
}

; Function Attrs: nounwind uwtable
define i32 @opj_j2k_decode(%struct.opj_j2k* %p_j2k, %struct.opj_stream_private* %p_stream, %struct.opj_image* %p_image, %struct.opj_event_mgr* %p_manager) #0 {
entry:
  %retval = alloca i32, align 4
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %p_stream.addr = alloca %struct.opj_stream_private*, align 8
  %p_image.addr = alloca %struct.opj_image*, align 8
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  %compno = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store %struct.opj_stream_private* %p_stream, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  store %struct.opj_image* %p_image, %struct.opj_image** %p_image.addr, align 8, !tbaa !1
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %0 = bitcast i32* %compno to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = load %struct.opj_image*, %struct.opj_image** %p_image.addr, align 8, !tbaa !1
  %tobool = icmp ne %struct.opj_image* %1, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %call = call %struct.opj_image* @opj_image_create0() #7
  %2 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_output_image = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %2, i32 0, i32 3
  store %struct.opj_image* %call, %struct.opj_image** %m_output_image, align 8, !tbaa !121
  %3 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_output_image1 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %3, i32 0, i32 3
  %4 = load %struct.opj_image*, %struct.opj_image** %m_output_image1, align 8, !tbaa !121
  %tobool2 = icmp ne %struct.opj_image* %4, null
  br i1 %tobool2, label %if.end.4, label %if.then.3

if.then.3:                                        ; preds = %if.end
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.4:                                         ; preds = %if.end
  %5 = load %struct.opj_image*, %struct.opj_image** %p_image.addr, align 8, !tbaa !1
  %6 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_output_image5 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %6, i32 0, i32 3
  %7 = load %struct.opj_image*, %struct.opj_image** %m_output_image5, align 8, !tbaa !121
  call void @opj_copy_image_header(%struct.opj_image* %5, %struct.opj_image* %7) #7
  %8 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  call void @opj_j2k_setup_decoding(%struct.opj_j2k* %8) #7
  %9 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %10 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_procedure_list = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %10, i32 0, i32 5
  %11 = load %struct.opj_procedure_list*, %struct.opj_procedure_list** %m_procedure_list, align 8, !tbaa !114
  %12 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %13 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call6 = call i32 @opj_j2k_exec(%struct.opj_j2k* %9, %struct.opj_procedure_list* %11, %struct.opj_stream_private* %12, %struct.opj_event_mgr* %13) #7
  %tobool7 = icmp ne i32 %call6, 0
  br i1 %tobool7, label %if.end.10, label %if.then.8

if.then.8:                                        ; preds = %if.end.4
  %14 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_private_image = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %14, i32 0, i32 2
  %15 = load %struct.opj_image*, %struct.opj_image** %m_private_image, align 8, !tbaa !38
  call void @opj_image_destroy(%struct.opj_image* %15) #7
  %16 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_private_image9 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %16, i32 0, i32 2
  store %struct.opj_image* null, %struct.opj_image** %m_private_image9, align 8, !tbaa !38
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.10:                                        ; preds = %if.end.4
  store i32 0, i32* %compno, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.10
  %17 = load i32, i32* %compno, align 4, !tbaa !5
  %18 = load %struct.opj_image*, %struct.opj_image** %p_image.addr, align 8, !tbaa !1
  %numcomps = getelementptr inbounds %struct.opj_image, %struct.opj_image* %18, i32 0, i32 4
  %19 = load i32, i32* %numcomps, align 4, !tbaa !45
  %cmp = icmp ult i32 %17, %19
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %20 = load i32, i32* %compno, align 4, !tbaa !5
  %idxprom = zext i32 %20 to i64
  %21 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_output_image11 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %21, i32 0, i32 3
  %22 = load %struct.opj_image*, %struct.opj_image** %m_output_image11, align 8, !tbaa !121
  %comps = getelementptr inbounds %struct.opj_image, %struct.opj_image* %22, i32 0, i32 6
  %23 = load %struct.opj_image_comp*, %struct.opj_image_comp** %comps, align 8, !tbaa !62
  %arrayidx = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %23, i64 %idxprom
  %resno_decoded = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %arrayidx, i32 0, i32 9
  %24 = load i32, i32* %resno_decoded, align 4, !tbaa !69
  %25 = load i32, i32* %compno, align 4, !tbaa !5
  %idxprom12 = zext i32 %25 to i64
  %26 = load %struct.opj_image*, %struct.opj_image** %p_image.addr, align 8, !tbaa !1
  %comps13 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %26, i32 0, i32 6
  %27 = load %struct.opj_image_comp*, %struct.opj_image_comp** %comps13, align 8, !tbaa !62
  %arrayidx14 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %27, i64 %idxprom12
  %resno_decoded15 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %arrayidx14, i32 0, i32 9
  store i32 %24, i32* %resno_decoded15, align 4, !tbaa !69
  %28 = load i32, i32* %compno, align 4, !tbaa !5
  %idxprom16 = zext i32 %28 to i64
  %29 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_output_image17 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %29, i32 0, i32 3
  %30 = load %struct.opj_image*, %struct.opj_image** %m_output_image17, align 8, !tbaa !121
  %comps18 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %30, i32 0, i32 6
  %31 = load %struct.opj_image_comp*, %struct.opj_image_comp** %comps18, align 8, !tbaa !62
  %arrayidx19 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %31, i64 %idxprom16
  %data = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %arrayidx19, i32 0, i32 11
  %32 = load i32*, i32** %data, align 8, !tbaa !251
  %33 = load i32, i32* %compno, align 4, !tbaa !5
  %idxprom20 = zext i32 %33 to i64
  %34 = load %struct.opj_image*, %struct.opj_image** %p_image.addr, align 8, !tbaa !1
  %comps21 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %34, i32 0, i32 6
  %35 = load %struct.opj_image_comp*, %struct.opj_image_comp** %comps21, align 8, !tbaa !62
  %arrayidx22 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %35, i64 %idxprom20
  %data23 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %arrayidx22, i32 0, i32 11
  store i32* %32, i32** %data23, align 8, !tbaa !251
  %36 = load i32, i32* %compno, align 4, !tbaa !5
  %idxprom24 = zext i32 %36 to i64
  %37 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_output_image25 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %37, i32 0, i32 3
  %38 = load %struct.opj_image*, %struct.opj_image** %m_output_image25, align 8, !tbaa !121
  %comps26 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %38, i32 0, i32 6
  %39 = load %struct.opj_image_comp*, %struct.opj_image_comp** %comps26, align 8, !tbaa !62
  %arrayidx27 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %39, i64 %idxprom24
  %data28 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %arrayidx27, i32 0, i32 11
  store i32* null, i32** %data28, align 8, !tbaa !251
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %40 = load i32, i32* %compno, align 4, !tbaa !5
  %inc = add i32 %40, 1
  store i32 %inc, i32* %compno, align 4, !tbaa !5
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %for.end, %if.then.8, %if.then.3, %if.then
  %41 = bitcast i32* %compno to i8*
  call void @llvm.lifetime.end(i64 4, i8* %41) #1
  %42 = load i32, i32* %retval
  ret i32 %42
}

; Function Attrs: nounwind uwtable
define internal void @opj_j2k_setup_decoding(%struct.opj_j2k* %p_j2k) #0 {
entry:
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %0 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cmp = icmp ne %struct.opj_j2k* %0, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 8815, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @__PRETTY_FUNCTION__.opj_j2k_setup_decoding, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %1, %cond.true
  %2 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_procedure_list = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %2, i32 0, i32 5
  %3 = load %struct.opj_procedure_list*, %struct.opj_procedure_list** %m_procedure_list, align 8, !tbaa !114
  %call = call i32 @opj_procedure_list_add_procedure(%struct.opj_procedure_list* %3, void ()* bitcast (i32 (%struct.opj_j2k*, %struct.opj_stream_private*, %struct.opj_event_mgr*)* @opj_j2k_decode_tiles to void ()*)) #7
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @opj_j2k_get_tile(%struct.opj_j2k* %p_j2k, %struct.opj_stream_private* %p_stream, %struct.opj_image* %p_image, %struct.opj_event_mgr* %p_manager, i32 %tile_index) #0 {
entry:
  %retval = alloca i32, align 4
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %p_stream.addr = alloca %struct.opj_stream_private*, align 8
  %p_image.addr = alloca %struct.opj_image*, align 8
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  %tile_index.addr = alloca i32, align 4
  %compno = alloca i32, align 4
  %l_tile_x = alloca i32, align 4
  %l_tile_y = alloca i32, align 4
  %l_img_comp = alloca %struct.opj_image_comp*, align 8
  %cleanup.dest.slot = alloca i32
  %l_comp_x1 = alloca i32, align 4
  %l_comp_y1 = alloca i32, align 4
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store %struct.opj_stream_private* %p_stream, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  store %struct.opj_image* %p_image, %struct.opj_image** %p_image.addr, align 8, !tbaa !1
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  store i32 %tile_index, i32* %tile_index.addr, align 4, !tbaa !5
  %0 = bitcast i32* %compno to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast i32* %l_tile_x to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = bitcast i32* %l_tile_y to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #1
  %3 = bitcast %struct.opj_image_comp** %l_img_comp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #1
  %4 = load %struct.opj_image*, %struct.opj_image** %p_image.addr, align 8, !tbaa !1
  %tobool = icmp ne %struct.opj_image* %4, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %5 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %5, i32 1, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.46, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %6 = load i32, i32* %tile_index.addr, align 4, !tbaa !5
  %7 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %7, i32 0, i32 4
  %tw = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp, i32 0, i32 6
  %8 = load i32, i32* %tw, align 4, !tbaa !176
  %9 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp1 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %9, i32 0, i32 4
  %th = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp1, i32 0, i32 7
  %10 = load i32, i32* %th, align 4, !tbaa !177
  %mul = mul i32 %8, %10
  %cmp = icmp uge i32 %6, %mul
  br i1 %cmp, label %if.then.2, label %if.end.9

if.then.2:                                        ; preds = %if.end
  %11 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %12 = load i32, i32* %tile_index.addr, align 4, !tbaa !5
  %13 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp3 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %13, i32 0, i32 4
  %tw4 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp3, i32 0, i32 6
  %14 = load i32, i32* %tw4, align 4, !tbaa !176
  %15 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp5 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %15, i32 0, i32 4
  %th6 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp5, i32 0, i32 7
  %16 = load i32, i32* %th6, align 4, !tbaa !177
  %mul7 = mul i32 %14, %16
  %sub = sub i32 %mul7, 1
  %call8 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %11, i32 1, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.47, i32 0, i32 0), i32 %12, i32 %sub) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.9:                                         ; preds = %if.end
  %17 = load i32, i32* %tile_index.addr, align 4, !tbaa !5
  %18 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp10 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %18, i32 0, i32 4
  %tw11 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp10, i32 0, i32 6
  %19 = load i32, i32* %tw11, align 4, !tbaa !176
  %rem = urem i32 %17, %19
  store i32 %rem, i32* %l_tile_x, align 4, !tbaa !5
  %20 = load i32, i32* %tile_index.addr, align 4, !tbaa !5
  %21 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp12 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %21, i32 0, i32 4
  %tw13 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp12, i32 0, i32 6
  %22 = load i32, i32* %tw13, align 4, !tbaa !176
  %div = udiv i32 %20, %22
  store i32 %div, i32* %l_tile_y, align 4, !tbaa !5
  %23 = load i32, i32* %l_tile_x, align 4, !tbaa !5
  %24 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp14 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %24, i32 0, i32 4
  %tdx = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp14, i32 0, i32 3
  %25 = load i32, i32* %tdx, align 4, !tbaa !217
  %mul15 = mul i32 %23, %25
  %26 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp16 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %26, i32 0, i32 4
  %tx0 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp16, i32 0, i32 1
  %27 = load i32, i32* %tx0, align 4, !tbaa !215
  %add = add i32 %mul15, %27
  %28 = load %struct.opj_image*, %struct.opj_image** %p_image.addr, align 8, !tbaa !1
  %x0 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %28, i32 0, i32 0
  store i32 %add, i32* %x0, align 4, !tbaa !56
  %29 = load %struct.opj_image*, %struct.opj_image** %p_image.addr, align 8, !tbaa !1
  %x017 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %29, i32 0, i32 0
  %30 = load i32, i32* %x017, align 4, !tbaa !56
  %31 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_private_image = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %31, i32 0, i32 2
  %32 = load %struct.opj_image*, %struct.opj_image** %m_private_image, align 8, !tbaa !38
  %x018 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %32, i32 0, i32 0
  %33 = load i32, i32* %x018, align 4, !tbaa !56
  %cmp19 = icmp ult i32 %30, %33
  br i1 %cmp19, label %if.then.20, label %if.end.24

if.then.20:                                       ; preds = %if.end.9
  %34 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_private_image21 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %34, i32 0, i32 2
  %35 = load %struct.opj_image*, %struct.opj_image** %m_private_image21, align 8, !tbaa !38
  %x022 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %35, i32 0, i32 0
  %36 = load i32, i32* %x022, align 4, !tbaa !56
  %37 = load %struct.opj_image*, %struct.opj_image** %p_image.addr, align 8, !tbaa !1
  %x023 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %37, i32 0, i32 0
  store i32 %36, i32* %x023, align 4, !tbaa !56
  br label %if.end.24

if.end.24:                                        ; preds = %if.then.20, %if.end.9
  %38 = load i32, i32* %l_tile_x, align 4, !tbaa !5
  %add25 = add i32 %38, 1
  %39 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp26 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %39, i32 0, i32 4
  %tdx27 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp26, i32 0, i32 3
  %40 = load i32, i32* %tdx27, align 4, !tbaa !217
  %mul28 = mul i32 %add25, %40
  %41 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp29 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %41, i32 0, i32 4
  %tx030 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp29, i32 0, i32 1
  %42 = load i32, i32* %tx030, align 4, !tbaa !215
  %add31 = add i32 %mul28, %42
  %43 = load %struct.opj_image*, %struct.opj_image** %p_image.addr, align 8, !tbaa !1
  %x1 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %43, i32 0, i32 2
  store i32 %add31, i32* %x1, align 4, !tbaa !57
  %44 = load %struct.opj_image*, %struct.opj_image** %p_image.addr, align 8, !tbaa !1
  %x132 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %44, i32 0, i32 2
  %45 = load i32, i32* %x132, align 4, !tbaa !57
  %46 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_private_image33 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %46, i32 0, i32 2
  %47 = load %struct.opj_image*, %struct.opj_image** %m_private_image33, align 8, !tbaa !38
  %x134 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %47, i32 0, i32 2
  %48 = load i32, i32* %x134, align 4, !tbaa !57
  %cmp35 = icmp ugt i32 %45, %48
  br i1 %cmp35, label %if.then.36, label %if.end.40

if.then.36:                                       ; preds = %if.end.24
  %49 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_private_image37 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %49, i32 0, i32 2
  %50 = load %struct.opj_image*, %struct.opj_image** %m_private_image37, align 8, !tbaa !38
  %x138 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %50, i32 0, i32 2
  %51 = load i32, i32* %x138, align 4, !tbaa !57
  %52 = load %struct.opj_image*, %struct.opj_image** %p_image.addr, align 8, !tbaa !1
  %x139 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %52, i32 0, i32 2
  store i32 %51, i32* %x139, align 4, !tbaa !57
  br label %if.end.40

if.end.40:                                        ; preds = %if.then.36, %if.end.24
  %53 = load i32, i32* %l_tile_y, align 4, !tbaa !5
  %54 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp41 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %54, i32 0, i32 4
  %tdy = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp41, i32 0, i32 4
  %55 = load i32, i32* %tdy, align 4, !tbaa !218
  %mul42 = mul i32 %53, %55
  %56 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp43 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %56, i32 0, i32 4
  %ty0 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp43, i32 0, i32 2
  %57 = load i32, i32* %ty0, align 4, !tbaa !216
  %add44 = add i32 %mul42, %57
  %58 = load %struct.opj_image*, %struct.opj_image** %p_image.addr, align 8, !tbaa !1
  %y0 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %58, i32 0, i32 1
  store i32 %add44, i32* %y0, align 4, !tbaa !58
  %59 = load %struct.opj_image*, %struct.opj_image** %p_image.addr, align 8, !tbaa !1
  %y045 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %59, i32 0, i32 1
  %60 = load i32, i32* %y045, align 4, !tbaa !58
  %61 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_private_image46 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %61, i32 0, i32 2
  %62 = load %struct.opj_image*, %struct.opj_image** %m_private_image46, align 8, !tbaa !38
  %y047 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %62, i32 0, i32 1
  %63 = load i32, i32* %y047, align 4, !tbaa !58
  %cmp48 = icmp ult i32 %60, %63
  br i1 %cmp48, label %if.then.49, label %if.end.53

if.then.49:                                       ; preds = %if.end.40
  %64 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_private_image50 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %64, i32 0, i32 2
  %65 = load %struct.opj_image*, %struct.opj_image** %m_private_image50, align 8, !tbaa !38
  %y051 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %65, i32 0, i32 1
  %66 = load i32, i32* %y051, align 4, !tbaa !58
  %67 = load %struct.opj_image*, %struct.opj_image** %p_image.addr, align 8, !tbaa !1
  %y052 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %67, i32 0, i32 1
  store i32 %66, i32* %y052, align 4, !tbaa !58
  br label %if.end.53

if.end.53:                                        ; preds = %if.then.49, %if.end.40
  %68 = load i32, i32* %l_tile_y, align 4, !tbaa !5
  %add54 = add i32 %68, 1
  %69 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp55 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %69, i32 0, i32 4
  %tdy56 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp55, i32 0, i32 4
  %70 = load i32, i32* %tdy56, align 4, !tbaa !218
  %mul57 = mul i32 %add54, %70
  %71 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp58 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %71, i32 0, i32 4
  %ty059 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp58, i32 0, i32 2
  %72 = load i32, i32* %ty059, align 4, !tbaa !216
  %add60 = add i32 %mul57, %72
  %73 = load %struct.opj_image*, %struct.opj_image** %p_image.addr, align 8, !tbaa !1
  %y1 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %73, i32 0, i32 3
  store i32 %add60, i32* %y1, align 4, !tbaa !59
  %74 = load %struct.opj_image*, %struct.opj_image** %p_image.addr, align 8, !tbaa !1
  %y161 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %74, i32 0, i32 3
  %75 = load i32, i32* %y161, align 4, !tbaa !59
  %76 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_private_image62 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %76, i32 0, i32 2
  %77 = load %struct.opj_image*, %struct.opj_image** %m_private_image62, align 8, !tbaa !38
  %y163 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %77, i32 0, i32 3
  %78 = load i32, i32* %y163, align 4, !tbaa !59
  %cmp64 = icmp ugt i32 %75, %78
  br i1 %cmp64, label %if.then.65, label %if.end.69

if.then.65:                                       ; preds = %if.end.53
  %79 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_private_image66 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %79, i32 0, i32 2
  %80 = load %struct.opj_image*, %struct.opj_image** %m_private_image66, align 8, !tbaa !38
  %y167 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %80, i32 0, i32 3
  %81 = load i32, i32* %y167, align 4, !tbaa !59
  %82 = load %struct.opj_image*, %struct.opj_image** %p_image.addr, align 8, !tbaa !1
  %y168 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %82, i32 0, i32 3
  store i32 %81, i32* %y168, align 4, !tbaa !59
  br label %if.end.69

if.end.69:                                        ; preds = %if.then.65, %if.end.53
  %83 = load %struct.opj_image*, %struct.opj_image** %p_image.addr, align 8, !tbaa !1
  %comps = getelementptr inbounds %struct.opj_image, %struct.opj_image* %83, i32 0, i32 6
  %84 = load %struct.opj_image_comp*, %struct.opj_image_comp** %comps, align 8, !tbaa !62
  store %struct.opj_image_comp* %84, %struct.opj_image_comp** %l_img_comp, align 8, !tbaa !1
  store i32 0, i32* %compno, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.69
  %85 = load i32, i32* %compno, align 4, !tbaa !5
  %86 = load %struct.opj_image*, %struct.opj_image** %p_image.addr, align 8, !tbaa !1
  %numcomps = getelementptr inbounds %struct.opj_image, %struct.opj_image* %86, i32 0, i32 4
  %87 = load i32, i32* %numcomps, align 4, !tbaa !45
  %cmp70 = icmp ult i32 %85, %87
  br i1 %cmp70, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %88 = bitcast i32* %l_comp_x1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %88) #1
  %89 = bitcast i32* %l_comp_y1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %89) #1
  %90 = load i32, i32* %compno, align 4, !tbaa !5
  %idxprom = zext i32 %90 to i64
  %91 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_private_image71 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %91, i32 0, i32 2
  %92 = load %struct.opj_image*, %struct.opj_image** %m_private_image71, align 8, !tbaa !38
  %comps72 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %92, i32 0, i32 6
  %93 = load %struct.opj_image_comp*, %struct.opj_image_comp** %comps72, align 8, !tbaa !62
  %arrayidx = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %93, i64 %idxprom
  %factor = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %arrayidx, i32 0, i32 10
  %94 = load i32, i32* %factor, align 4, !tbaa !71
  %95 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp, align 8, !tbaa !1
  %factor73 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %95, i32 0, i32 10
  store i32 %94, i32* %factor73, align 4, !tbaa !71
  %96 = load %struct.opj_image*, %struct.opj_image** %p_image.addr, align 8, !tbaa !1
  %x074 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %96, i32 0, i32 0
  %97 = load i32, i32* %x074, align 4, !tbaa !56
  %98 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp, align 8, !tbaa !1
  %dx = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %98, i32 0, i32 0
  %99 = load i32, i32* %dx, align 4, !tbaa !67
  %call75 = call i32 @opj_int_ceildiv(i32 %97, i32 %99) #7
  %100 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp, align 8, !tbaa !1
  %x076 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %100, i32 0, i32 4
  store i32 %call75, i32* %x076, align 4, !tbaa !209
  %101 = load %struct.opj_image*, %struct.opj_image** %p_image.addr, align 8, !tbaa !1
  %y077 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %101, i32 0, i32 1
  %102 = load i32, i32* %y077, align 4, !tbaa !58
  %103 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp, align 8, !tbaa !1
  %dy = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %103, i32 0, i32 1
  %104 = load i32, i32* %dy, align 4, !tbaa !68
  %call78 = call i32 @opj_int_ceildiv(i32 %102, i32 %104) #7
  %105 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp, align 8, !tbaa !1
  %y079 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %105, i32 0, i32 5
  store i32 %call78, i32* %y079, align 4, !tbaa !210
  %106 = load %struct.opj_image*, %struct.opj_image** %p_image.addr, align 8, !tbaa !1
  %x180 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %106, i32 0, i32 2
  %107 = load i32, i32* %x180, align 4, !tbaa !57
  %108 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp, align 8, !tbaa !1
  %dx81 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %108, i32 0, i32 0
  %109 = load i32, i32* %dx81, align 4, !tbaa !67
  %call82 = call i32 @opj_int_ceildiv(i32 %107, i32 %109) #7
  store i32 %call82, i32* %l_comp_x1, align 4, !tbaa !5
  %110 = load %struct.opj_image*, %struct.opj_image** %p_image.addr, align 8, !tbaa !1
  %y183 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %110, i32 0, i32 3
  %111 = load i32, i32* %y183, align 4, !tbaa !59
  %112 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp, align 8, !tbaa !1
  %dy84 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %112, i32 0, i32 1
  %113 = load i32, i32* %dy84, align 4, !tbaa !68
  %call85 = call i32 @opj_int_ceildiv(i32 %111, i32 %113) #7
  store i32 %call85, i32* %l_comp_y1, align 4, !tbaa !5
  %114 = load i32, i32* %l_comp_x1, align 4, !tbaa !5
  %115 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp, align 8, !tbaa !1
  %factor86 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %115, i32 0, i32 10
  %116 = load i32, i32* %factor86, align 4, !tbaa !71
  %call87 = call i32 @opj_int_ceildivpow2(i32 %114, i32 %116) #7
  %117 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp, align 8, !tbaa !1
  %x088 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %117, i32 0, i32 4
  %118 = load i32, i32* %x088, align 4, !tbaa !209
  %119 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp, align 8, !tbaa !1
  %factor89 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %119, i32 0, i32 10
  %120 = load i32, i32* %factor89, align 4, !tbaa !71
  %call90 = call i32 @opj_int_ceildivpow2(i32 %118, i32 %120) #7
  %sub91 = sub nsw i32 %call87, %call90
  %121 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp, align 8, !tbaa !1
  %w = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %121, i32 0, i32 2
  store i32 %sub91, i32* %w, align 4, !tbaa !211
  %122 = load i32, i32* %l_comp_y1, align 4, !tbaa !5
  %123 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp, align 8, !tbaa !1
  %factor92 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %123, i32 0, i32 10
  %124 = load i32, i32* %factor92, align 4, !tbaa !71
  %call93 = call i32 @opj_int_ceildivpow2(i32 %122, i32 %124) #7
  %125 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp, align 8, !tbaa !1
  %y094 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %125, i32 0, i32 5
  %126 = load i32, i32* %y094, align 4, !tbaa !210
  %127 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp, align 8, !tbaa !1
  %factor95 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %127, i32 0, i32 10
  %128 = load i32, i32* %factor95, align 4, !tbaa !71
  %call96 = call i32 @opj_int_ceildivpow2(i32 %126, i32 %128) #7
  %sub97 = sub nsw i32 %call93, %call96
  %129 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp, align 8, !tbaa !1
  %h = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %129, i32 0, i32 3
  store i32 %sub97, i32* %h, align 4, !tbaa !212
  %130 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %130, i32 1
  store %struct.opj_image_comp* %incdec.ptr, %struct.opj_image_comp** %l_img_comp, align 8, !tbaa !1
  %131 = bitcast i32* %l_comp_y1 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %131) #1
  %132 = bitcast i32* %l_comp_x1 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %132) #1
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %133 = load i32, i32* %compno, align 4, !tbaa !5
  %inc = add i32 %133, 1
  store i32 %inc, i32* %compno, align 4, !tbaa !5
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %134 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_output_image = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %134, i32 0, i32 3
  %135 = load %struct.opj_image*, %struct.opj_image** %m_output_image, align 8, !tbaa !121
  %tobool98 = icmp ne %struct.opj_image* %135, null
  br i1 %tobool98, label %if.then.99, label %if.end.101

if.then.99:                                       ; preds = %for.end
  %136 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_output_image100 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %136, i32 0, i32 3
  %137 = load %struct.opj_image*, %struct.opj_image** %m_output_image100, align 8, !tbaa !121
  call void @opj_image_destroy(%struct.opj_image* %137) #7
  br label %if.end.101

if.end.101:                                       ; preds = %if.then.99, %for.end
  %call102 = call %struct.opj_image* @opj_image_create0() #7
  %138 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_output_image103 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %138, i32 0, i32 3
  store %struct.opj_image* %call102, %struct.opj_image** %m_output_image103, align 8, !tbaa !121
  %139 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_output_image104 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %139, i32 0, i32 3
  %140 = load %struct.opj_image*, %struct.opj_image** %m_output_image104, align 8, !tbaa !121
  %tobool105 = icmp ne %struct.opj_image* %140, null
  br i1 %tobool105, label %if.end.107, label %if.then.106

if.then.106:                                      ; preds = %if.end.101
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.107:                                       ; preds = %if.end.101
  %141 = load %struct.opj_image*, %struct.opj_image** %p_image.addr, align 8, !tbaa !1
  %142 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_output_image108 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %142, i32 0, i32 3
  %143 = load %struct.opj_image*, %struct.opj_image** %m_output_image108, align 8, !tbaa !121
  call void @opj_copy_image_header(%struct.opj_image* %141, %struct.opj_image* %143) #7
  %144 = load i32, i32* %tile_index.addr, align 4, !tbaa !5
  %145 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %145, i32 0, i32 1
  %m_decoder = bitcast %union.anon* %m_specific_param to %struct.opj_j2k_dec*
  %m_tile_ind_to_dec = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder, i32 0, i32 13
  store i32 %144, i32* %m_tile_ind_to_dec, align 4, !tbaa !24
  %146 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  call void @opj_j2k_setup_decoding_tile(%struct.opj_j2k* %146) #7
  %147 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %148 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_procedure_list = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %148, i32 0, i32 5
  %149 = load %struct.opj_procedure_list*, %struct.opj_procedure_list** %m_procedure_list, align 8, !tbaa !114
  %150 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %151 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call109 = call i32 @opj_j2k_exec(%struct.opj_j2k* %147, %struct.opj_procedure_list* %149, %struct.opj_stream_private* %150, %struct.opj_event_mgr* %151) #7
  %tobool110 = icmp ne i32 %call109, 0
  br i1 %tobool110, label %if.end.114, label %if.then.111

if.then.111:                                      ; preds = %if.end.107
  %152 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_private_image112 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %152, i32 0, i32 2
  %153 = load %struct.opj_image*, %struct.opj_image** %m_private_image112, align 8, !tbaa !38
  call void @opj_image_destroy(%struct.opj_image* %153) #7
  %154 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_private_image113 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %154, i32 0, i32 2
  store %struct.opj_image* null, %struct.opj_image** %m_private_image113, align 8, !tbaa !38
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.114:                                       ; preds = %if.end.107
  store i32 0, i32* %compno, align 4, !tbaa !5
  br label %for.cond.115

for.cond.115:                                     ; preds = %for.inc.151, %if.end.114
  %155 = load i32, i32* %compno, align 4, !tbaa !5
  %156 = load %struct.opj_image*, %struct.opj_image** %p_image.addr, align 8, !tbaa !1
  %numcomps116 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %156, i32 0, i32 4
  %157 = load i32, i32* %numcomps116, align 4, !tbaa !45
  %cmp117 = icmp ult i32 %155, %157
  br i1 %cmp117, label %for.body.118, label %for.end.153

for.body.118:                                     ; preds = %for.cond.115
  %158 = load i32, i32* %compno, align 4, !tbaa !5
  %idxprom119 = zext i32 %158 to i64
  %159 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_output_image120 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %159, i32 0, i32 3
  %160 = load %struct.opj_image*, %struct.opj_image** %m_output_image120, align 8, !tbaa !121
  %comps121 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %160, i32 0, i32 6
  %161 = load %struct.opj_image_comp*, %struct.opj_image_comp** %comps121, align 8, !tbaa !62
  %arrayidx122 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %161, i64 %idxprom119
  %resno_decoded = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %arrayidx122, i32 0, i32 9
  %162 = load i32, i32* %resno_decoded, align 4, !tbaa !69
  %163 = load i32, i32* %compno, align 4, !tbaa !5
  %idxprom123 = zext i32 %163 to i64
  %164 = load %struct.opj_image*, %struct.opj_image** %p_image.addr, align 8, !tbaa !1
  %comps124 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %164, i32 0, i32 6
  %165 = load %struct.opj_image_comp*, %struct.opj_image_comp** %comps124, align 8, !tbaa !62
  %arrayidx125 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %165, i64 %idxprom123
  %resno_decoded126 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %arrayidx125, i32 0, i32 9
  store i32 %162, i32* %resno_decoded126, align 4, !tbaa !69
  %166 = load i32, i32* %compno, align 4, !tbaa !5
  %idxprom127 = zext i32 %166 to i64
  %167 = load %struct.opj_image*, %struct.opj_image** %p_image.addr, align 8, !tbaa !1
  %comps128 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %167, i32 0, i32 6
  %168 = load %struct.opj_image_comp*, %struct.opj_image_comp** %comps128, align 8, !tbaa !62
  %arrayidx129 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %168, i64 %idxprom127
  %data = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %arrayidx129, i32 0, i32 11
  %169 = load i32*, i32** %data, align 8, !tbaa !251
  %tobool130 = icmp ne i32* %169, null
  br i1 %tobool130, label %if.then.131, label %if.end.136

if.then.131:                                      ; preds = %for.body.118
  %170 = load i32, i32* %compno, align 4, !tbaa !5
  %idxprom132 = zext i32 %170 to i64
  %171 = load %struct.opj_image*, %struct.opj_image** %p_image.addr, align 8, !tbaa !1
  %comps133 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %171, i32 0, i32 6
  %172 = load %struct.opj_image_comp*, %struct.opj_image_comp** %comps133, align 8, !tbaa !62
  %arrayidx134 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %172, i64 %idxprom132
  %data135 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %arrayidx134, i32 0, i32 11
  %173 = load i32*, i32** %data135, align 8, !tbaa !251
  %174 = bitcast i32* %173 to i8*
  call void @free(i8* %174) #9
  br label %if.end.136

if.end.136:                                       ; preds = %if.then.131, %for.body.118
  %175 = load i32, i32* %compno, align 4, !tbaa !5
  %idxprom137 = zext i32 %175 to i64
  %176 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_output_image138 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %176, i32 0, i32 3
  %177 = load %struct.opj_image*, %struct.opj_image** %m_output_image138, align 8, !tbaa !121
  %comps139 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %177, i32 0, i32 6
  %178 = load %struct.opj_image_comp*, %struct.opj_image_comp** %comps139, align 8, !tbaa !62
  %arrayidx140 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %178, i64 %idxprom137
  %data141 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %arrayidx140, i32 0, i32 11
  %179 = load i32*, i32** %data141, align 8, !tbaa !251
  %180 = load i32, i32* %compno, align 4, !tbaa !5
  %idxprom142 = zext i32 %180 to i64
  %181 = load %struct.opj_image*, %struct.opj_image** %p_image.addr, align 8, !tbaa !1
  %comps143 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %181, i32 0, i32 6
  %182 = load %struct.opj_image_comp*, %struct.opj_image_comp** %comps143, align 8, !tbaa !62
  %arrayidx144 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %182, i64 %idxprom142
  %data145 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %arrayidx144, i32 0, i32 11
  store i32* %179, i32** %data145, align 8, !tbaa !251
  %183 = load i32, i32* %compno, align 4, !tbaa !5
  %idxprom146 = zext i32 %183 to i64
  %184 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_output_image147 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %184, i32 0, i32 3
  %185 = load %struct.opj_image*, %struct.opj_image** %m_output_image147, align 8, !tbaa !121
  %comps148 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %185, i32 0, i32 6
  %186 = load %struct.opj_image_comp*, %struct.opj_image_comp** %comps148, align 8, !tbaa !62
  %arrayidx149 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %186, i64 %idxprom146
  %data150 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %arrayidx149, i32 0, i32 11
  store i32* null, i32** %data150, align 8, !tbaa !251
  br label %for.inc.151

for.inc.151:                                      ; preds = %if.end.136
  %187 = load i32, i32* %compno, align 4, !tbaa !5
  %inc152 = add i32 %187, 1
  store i32 %inc152, i32* %compno, align 4, !tbaa !5
  br label %for.cond.115

for.end.153:                                      ; preds = %for.cond.115
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %for.end.153, %if.then.111, %if.then.106, %if.then.2, %if.then
  %188 = bitcast %struct.opj_image_comp** %l_img_comp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %188) #1
  %189 = bitcast i32* %l_tile_y to i8*
  call void @llvm.lifetime.end(i64 4, i8* %189) #1
  %190 = bitcast i32* %l_tile_x to i8*
  call void @llvm.lifetime.end(i64 4, i8* %190) #1
  %191 = bitcast i32* %compno to i8*
  call void @llvm.lifetime.end(i64 4, i8* %191) #1
  %192 = load i32, i32* %retval
  ret i32 %192
}

; Function Attrs: nounwind uwtable
define internal void @opj_j2k_setup_decoding_tile(%struct.opj_j2k* %p_j2k) #0 {
entry:
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %0 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cmp = icmp ne %struct.opj_j2k* %0, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 8946, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @__PRETTY_FUNCTION__.opj_j2k_setup_decoding_tile, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %1, %cond.true
  %2 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_procedure_list = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %2, i32 0, i32 5
  %3 = load %struct.opj_procedure_list*, %struct.opj_procedure_list** %m_procedure_list, align 8, !tbaa !114
  %call = call i32 @opj_procedure_list_add_procedure(%struct.opj_procedure_list* %3, void ()* bitcast (i32 (%struct.opj_j2k*, %struct.opj_stream_private*, %struct.opj_event_mgr*)* @opj_j2k_decode_one_tile to void ()*)) #7
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @opj_j2k_set_decoded_resolution_factor(%struct.opj_j2k* %p_j2k, i32 %res_factor, %struct.opj_event_mgr* %p_manager) #0 {
entry:
  %retval = alloca i32, align 4
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %res_factor.addr = alloca i32, align 4
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  %it_comp = alloca i32, align 4
  %max_res = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store i32 %res_factor, i32* %res_factor.addr, align 4, !tbaa !5
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %0 = bitcast i32* %it_comp to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = load i32, i32* %res_factor.addr, align 4, !tbaa !5
  %2 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %2, i32 0, i32 4
  %m_specific_param = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp, i32 0, i32 18
  %m_dec = bitcast %union.anon.0* %m_specific_param to %struct.opj_decoding_param*
  %m_reduce = getelementptr inbounds %struct.opj_decoding_param, %struct.opj_decoding_param* %m_dec, i32 0, i32 0
  store i32 %1, i32* %m_reduce, align 4, !tbaa !70
  %3 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_private_image = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %3, i32 0, i32 2
  %4 = load %struct.opj_image*, %struct.opj_image** %m_private_image, align 8, !tbaa !38
  %tobool = icmp ne %struct.opj_image* %4, null
  br i1 %tobool, label %if.then, label %if.end.26

if.then:                                          ; preds = %entry
  %5 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_private_image1 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %5, i32 0, i32 2
  %6 = load %struct.opj_image*, %struct.opj_image** %m_private_image1, align 8, !tbaa !38
  %comps = getelementptr inbounds %struct.opj_image, %struct.opj_image* %6, i32 0, i32 6
  %7 = load %struct.opj_image_comp*, %struct.opj_image_comp** %comps, align 8, !tbaa !62
  %tobool2 = icmp ne %struct.opj_image_comp* %7, null
  br i1 %tobool2, label %if.then.3, label %if.end.25

if.then.3:                                        ; preds = %if.then
  %8 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param4 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %8, i32 0, i32 1
  %m_decoder = bitcast %union.anon* %m_specific_param4 to %struct.opj_j2k_dec*
  %m_default_tcp = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder, i32 0, i32 1
  %9 = load %struct.opj_tcp*, %struct.opj_tcp** %m_default_tcp, align 8, !tbaa !39
  %tobool5 = icmp ne %struct.opj_tcp* %9, null
  br i1 %tobool5, label %if.then.6, label %if.end.24

if.then.6:                                        ; preds = %if.then.3
  %10 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param7 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %10, i32 0, i32 1
  %m_decoder8 = bitcast %union.anon* %m_specific_param7 to %struct.opj_j2k_dec*
  %m_default_tcp9 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder8, i32 0, i32 1
  %11 = load %struct.opj_tcp*, %struct.opj_tcp** %m_default_tcp9, align 8, !tbaa !39
  %tccps = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %11, i32 0, i32 13
  %12 = load %struct.opj_tccp*, %struct.opj_tccp** %tccps, align 8, !tbaa !48
  %tobool10 = icmp ne %struct.opj_tccp* %12, null
  br i1 %tobool10, label %if.then.11, label %if.end.23

if.then.11:                                       ; preds = %if.then.6
  store i32 0, i32* %it_comp, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then.11
  %13 = load i32, i32* %it_comp, align 4, !tbaa !5
  %14 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_private_image12 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %14, i32 0, i32 2
  %15 = load %struct.opj_image*, %struct.opj_image** %m_private_image12, align 8, !tbaa !38
  %numcomps = getelementptr inbounds %struct.opj_image, %struct.opj_image* %15, i32 0, i32 4
  %16 = load i32, i32* %numcomps, align 4, !tbaa !45
  %cmp = icmp ult i32 %13, %16
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %17 = bitcast i32* %max_res to i8*
  call void @llvm.lifetime.start(i64 4, i8* %17) #1
  %18 = load i32, i32* %it_comp, align 4, !tbaa !5
  %idxprom = zext i32 %18 to i64
  %19 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param13 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %19, i32 0, i32 1
  %m_decoder14 = bitcast %union.anon* %m_specific_param13 to %struct.opj_j2k_dec*
  %m_default_tcp15 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder14, i32 0, i32 1
  %20 = load %struct.opj_tcp*, %struct.opj_tcp** %m_default_tcp15, align 8, !tbaa !39
  %tccps16 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %20, i32 0, i32 13
  %21 = load %struct.opj_tccp*, %struct.opj_tccp** %tccps16, align 8, !tbaa !48
  %arrayidx = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %21, i64 %idxprom
  %numresolutions = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %arrayidx, i32 0, i32 1
  %22 = load i32, i32* %numresolutions, align 4, !tbaa !161
  store i32 %22, i32* %max_res, align 4, !tbaa !5
  %23 = load i32, i32* %res_factor.addr, align 4, !tbaa !5
  %24 = load i32, i32* %max_res, align 4, !tbaa !5
  %cmp17 = icmp uge i32 %23, %24
  br i1 %cmp17, label %if.then.18, label %if.end

if.then.18:                                       ; preds = %for.body
  %25 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %25, i32 1, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.48, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %for.body
  %26 = load i32, i32* %res_factor.addr, align 4, !tbaa !5
  %27 = load i32, i32* %it_comp, align 4, !tbaa !5
  %idxprom19 = zext i32 %27 to i64
  %28 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_private_image20 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %28, i32 0, i32 2
  %29 = load %struct.opj_image*, %struct.opj_image** %m_private_image20, align 8, !tbaa !38
  %comps21 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %29, i32 0, i32 6
  %30 = load %struct.opj_image_comp*, %struct.opj_image_comp** %comps21, align 8, !tbaa !62
  %arrayidx22 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %30, i64 %idxprom19
  %factor = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %arrayidx22, i32 0, i32 10
  store i32 %26, i32* %factor, align 4, !tbaa !71
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then.18
  %31 = bitcast i32* %max_res to i8*
  call void @llvm.lifetime.end(i64 4, i8* %31) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.27 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %for.inc

for.inc:                                          ; preds = %cleanup.cont
  %32 = load i32, i32* %it_comp, align 4, !tbaa !5
  %inc = add i32 %32, 1
  store i32 %inc, i32* %it_comp, align 4, !tbaa !5
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.27

if.end.23:                                        ; preds = %if.then.6
  br label %if.end.24

if.end.24:                                        ; preds = %if.end.23, %if.then.3
  br label %if.end.25

if.end.25:                                        ; preds = %if.end.24, %if.then
  br label %if.end.26

if.end.26:                                        ; preds = %if.end.25, %entry
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.27

cleanup.27:                                       ; preds = %if.end.26, %for.end, %cleanup
  %33 = bitcast i32* %it_comp to i8*
  call void @llvm.lifetime.end(i64 4, i8* %33) #1
  %34 = load i32, i32* %retval
  ret i32 %34
}

; Function Attrs: nounwind uwtable
define i32 @opj_j2k_encode(%struct.opj_j2k* %p_j2k, %struct.opj_stream_private* %p_stream, %struct.opj_event_mgr* %p_manager) #0 {
entry:
  %retval = alloca i32, align 4
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %p_stream.addr = alloca %struct.opj_stream_private*, align 8
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  %i = alloca i32, align 4
  %l_nb_tiles = alloca i32, align 4
  %l_max_tile_size = alloca i32, align 4
  %l_current_tile_size = alloca i32, align 4
  %l_current_data = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  %l_new_current_data = alloca i8*, align 8
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store %struct.opj_stream_private* %p_stream, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %0 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast i32* %l_nb_tiles to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = bitcast i32* %l_max_tile_size to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #1
  %3 = bitcast i32* %l_current_tile_size to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #1
  %4 = bitcast i8** %l_current_data to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4) #1
  %5 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cmp = icmp ne %struct.opj_j2k* %5, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 9122, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @__PRETTY_FUNCTION__.opj_j2k_encode, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %6, %cond.true
  %7 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %cmp1 = icmp ne %struct.opj_stream_private* %7, null
  br i1 %cmp1, label %cond.true.2, label %cond.false.3

cond.true.2:                                      ; preds = %cond.end
  br label %cond.end.4

cond.false.3:                                     ; preds = %cond.end
  call void @__assert_fail(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 9123, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @__PRETTY_FUNCTION__.opj_j2k_encode, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.4

cond.end.4:                                       ; preds = %8, %cond.true.2
  %9 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %cmp5 = icmp ne %struct.opj_event_mgr* %9, null
  br i1 %cmp5, label %cond.true.6, label %cond.false.7

cond.true.6:                                      ; preds = %cond.end.4
  br label %cond.end.8

cond.false.7:                                     ; preds = %cond.end.4
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 9124, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @__PRETTY_FUNCTION__.opj_j2k_encode, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.8

cond.end.8:                                       ; preds = %10, %cond.true.6
  %call = call noalias i8* @malloc(i64 1000) #9
  store i8* %call, i8** %l_current_data, align 8, !tbaa !1
  %11 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %tobool = icmp ne i8* %11, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %cond.end.8
  %12 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call9 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %12, i32 1, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.49, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.36

if.end:                                           ; preds = %cond.end.8
  store i32 1000, i32* %l_max_tile_size, align 4, !tbaa !5
  %13 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %13, i32 0, i32 4
  %th = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp, i32 0, i32 7
  %14 = load i32, i32* %th, align 4, !tbaa !177
  %15 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp10 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %15, i32 0, i32 4
  %tw = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp10, i32 0, i32 6
  %16 = load i32, i32* %tw, align 4, !tbaa !176
  %mul = mul i32 %14, %16
  store i32 %mul, i32* %l_nb_tiles, align 4, !tbaa !5
  store i32 0, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %17 = load i32, i32* %i, align 4, !tbaa !5
  %18 = load i32, i32* %l_nb_tiles, align 4, !tbaa !5
  %cmp11 = icmp ult i32 %17, %18
  br i1 %cmp11, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %19 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %20 = load i32, i32* %i, align 4, !tbaa !5
  %21 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %22 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call12 = call i32 @opj_j2k_pre_write_tile(%struct.opj_j2k* %19, i32 %20, %struct.opj_stream_private* %21, %struct.opj_event_mgr* %22) #7
  %tobool13 = icmp ne i32 %call12, 0
  br i1 %tobool13, label %if.end.15, label %if.then.14

if.then.14:                                       ; preds = %for.body
  %23 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  call void @free(i8* %23) #9
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.36

if.end.15:                                        ; preds = %for.body
  %24 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_tcd = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %24, i32 0, i32 9
  %25 = load %struct.opj_tcd*, %struct.opj_tcd** %m_tcd, align 8, !tbaa !120
  %call16 = call i32 @opj_tcd_get_encoded_tile_size(%struct.opj_tcd* %25) #7
  store i32 %call16, i32* %l_current_tile_size, align 4, !tbaa !5
  %26 = load i32, i32* %l_current_tile_size, align 4, !tbaa !5
  %27 = load i32, i32* %l_max_tile_size, align 4, !tbaa !5
  %cmp17 = icmp ugt i32 %26, %27
  br i1 %cmp17, label %if.then.18, label %if.end.30

if.then.18:                                       ; preds = %if.end.15
  %28 = bitcast i8** %l_new_current_data to i8*
  call void @llvm.lifetime.start(i64 8, i8* %28) #1
  %29 = load i32, i32* %l_current_tile_size, align 4, !tbaa !5
  %conv = zext i32 %29 to i64
  %cmp19 = icmp uge i64 %conv, -256
  br i1 %cmp19, label %cond.true.21, label %cond.false.22

cond.true.21:                                     ; preds = %if.then.18
  br label %cond.end.25

cond.false.22:                                    ; preds = %if.then.18
  %30 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %31 = load i32, i32* %l_current_tile_size, align 4, !tbaa !5
  %conv23 = zext i32 %31 to i64
  %call24 = call i8* @realloc(i8* %30, i64 %conv23) #9
  br label %cond.end.25

cond.end.25:                                      ; preds = %cond.false.22, %cond.true.21
  %cond = phi i8* [ null, %cond.true.21 ], [ %call24, %cond.false.22 ]
  store i8* %cond, i8** %l_new_current_data, align 8, !tbaa !1
  %32 = load i8*, i8** %l_new_current_data, align 8, !tbaa !1
  %tobool26 = icmp ne i8* %32, null
  br i1 %tobool26, label %if.end.29, label %if.then.27

if.then.27:                                       ; preds = %cond.end.25
  %33 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  call void @free(i8* %33) #9
  %34 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call28 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %34, i32 1, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.49, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.29:                                        ; preds = %cond.end.25
  %35 = load i8*, i8** %l_new_current_data, align 8, !tbaa !1
  store i8* %35, i8** %l_current_data, align 8, !tbaa !1
  %36 = load i32, i32* %l_current_tile_size, align 4, !tbaa !5
  store i32 %36, i32* %l_max_tile_size, align 4, !tbaa !5
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.29, %if.then.27
  %37 = bitcast i8** %l_new_current_data to i8*
  call void @llvm.lifetime.end(i64 8, i8* %37) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.36 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.30

if.end.30:                                        ; preds = %cleanup.cont, %if.end.15
  %38 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_tcd31 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %38, i32 0, i32 9
  %39 = load %struct.opj_tcd*, %struct.opj_tcd** %m_tcd31, align 8, !tbaa !120
  %40 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  call void @opj_j2k_get_tile_data(%struct.opj_tcd* %39, i8* %40) #7
  %41 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %42 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %43 = load i32, i32* %l_current_tile_size, align 4, !tbaa !5
  %44 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %45 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call32 = call i32 @opj_j2k_post_write_tile(%struct.opj_j2k* %41, i8* %42, i32 %43, %struct.opj_stream_private* %44, %struct.opj_event_mgr* %45) #7
  %tobool33 = icmp ne i32 %call32, 0
  br i1 %tobool33, label %if.end.35, label %if.then.34

if.then.34:                                       ; preds = %if.end.30
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.36

if.end.35:                                        ; preds = %if.end.30
  br label %for.inc

for.inc:                                          ; preds = %if.end.35
  %46 = load i32, i32* %i, align 4, !tbaa !5
  %inc = add i32 %46, 1
  store i32 %inc, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %47 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  call void @free(i8* %47) #9
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.36

cleanup.36:                                       ; preds = %for.end, %if.then.34, %cleanup, %if.then.14, %if.then
  %48 = bitcast i8** %l_current_data to i8*
  call void @llvm.lifetime.end(i64 8, i8* %48) #1
  %49 = bitcast i32* %l_current_tile_size to i8*
  call void @llvm.lifetime.end(i64 4, i8* %49) #1
  %50 = bitcast i32* %l_max_tile_size to i8*
  call void @llvm.lifetime.end(i64 4, i8* %50) #1
  %51 = bitcast i32* %l_nb_tiles to i8*
  call void @llvm.lifetime.end(i64 4, i8* %51) #1
  %52 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %52) #1
  %53 = load i32, i32* %retval
  ret i32 %53
}

; Function Attrs: nounwind uwtable
define internal i32 @opj_j2k_pre_write_tile(%struct.opj_j2k* %p_j2k, i32 %p_tile_index, %struct.opj_stream_private* %p_stream, %struct.opj_event_mgr* %p_manager) #0 {
entry:
  %retval = alloca i32, align 4
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %p_tile_index.addr = alloca i32, align 4
  %p_stream.addr = alloca %struct.opj_stream_private*, align 8
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store i32 %p_tile_index, i32* %p_tile_index.addr, align 4, !tbaa !5
  store %struct.opj_stream_private* %p_stream, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %0 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %1 = load i32, i32* %p_tile_index.addr, align 4, !tbaa !5
  %2 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %2, i32 0, i32 8
  %3 = load i32, i32* %m_current_tile_number, align 4, !tbaa !11
  %cmp = icmp ne i32 %1, %3
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %4 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %4, i32 1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.170, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %5 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %6 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number1 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %6, i32 0, i32 8
  %7 = load i32, i32* %m_current_tile_number1, align 4, !tbaa !11
  %add = add i32 %7, 1
  %8 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %8, i32 0, i32 4
  %tw = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp, i32 0, i32 6
  %9 = load i32, i32* %tw, align 4, !tbaa !176
  %10 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp2 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %10, i32 0, i32 4
  %th = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp2, i32 0, i32 7
  %11 = load i32, i32* %th, align 4, !tbaa !177
  %mul = mul i32 %9, %11
  %call3 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %5, i32 4, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.171, i32 0, i32 0), i32 %add, i32 %mul) #7
  %12 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %12, i32 0, i32 1
  %m_encoder = bitcast %union.anon* %m_specific_param to %struct.opj_j2k_enc*
  %m_current_tile_part_number = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder, i32 0, i32 1
  store i32 0, i32* %m_current_tile_part_number, align 4, !tbaa !252
  %13 = load i32, i32* %p_tile_index.addr, align 4, !tbaa !5
  %idxprom = zext i32 %13 to i64
  %14 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp4 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %14, i32 0, i32 4
  %tcps = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp4, i32 0, i32 17
  %15 = load %struct.opj_tcp*, %struct.opj_tcp** %tcps, align 8, !tbaa !88
  %arrayidx = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %15, i64 %idxprom
  %m_nb_tile_parts = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %arrayidx, i32 0, i32 14
  %16 = load i32, i32* %m_nb_tile_parts, align 4, !tbaa !20
  %17 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_tcd = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %17, i32 0, i32 9
  %18 = load %struct.opj_tcd*, %struct.opj_tcd** %m_tcd, align 8, !tbaa !120
  %cur_totnum_tp = getelementptr inbounds %struct.opj_tcd, %struct.opj_tcd* %18, i32 0, i32 3
  store i32 %16, i32* %cur_totnum_tp, align 4, !tbaa !253
  %19 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param5 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %19, i32 0, i32 1
  %m_encoder6 = bitcast %union.anon* %m_specific_param5 to %struct.opj_j2k_enc*
  %m_current_poc_tile_part_number = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder6, i32 0, i32 0
  store i32 0, i32* %m_current_poc_tile_part_number, align 4, !tbaa !254
  %20 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_tcd7 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %20, i32 0, i32 9
  %21 = load %struct.opj_tcd*, %struct.opj_tcd** %m_tcd7, align 8, !tbaa !120
  %22 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number8 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %22, i32 0, i32 8
  %23 = load i32, i32* %m_current_tile_number8, align 4, !tbaa !11
  %call9 = call i32 @opj_tcd_init_encode_tile(%struct.opj_tcd* %21, i32 %23) #7
  %tobool = icmp ne i32 %call9, 0
  br i1 %tobool, label %if.end.11, label %if.then.10

if.then.10:                                       ; preds = %if.end
  store i32 0, i32* %retval
  br label %return

if.end.11:                                        ; preds = %if.end
  store i32 1, i32* %retval
  br label %return

return:                                           ; preds = %if.end.11, %if.then.10, %if.then
  %24 = load i32, i32* %retval
  ret i32 %24
}

declare i32 @opj_tcd_get_encoded_tile_size(%struct.opj_tcd*) #3

; Function Attrs: nounwind uwtable
define internal void @opj_j2k_get_tile_data(%struct.opj_tcd* %p_tcd, i8* %p_data) #0 {
entry:
  %p_tcd.addr = alloca %struct.opj_tcd*, align 8
  %p_data.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %l_width = alloca i32, align 4
  %l_height = alloca i32, align 4
  %l_stride = alloca i32, align 4
  %l_offset_x = alloca i32, align 4
  %l_offset_y = alloca i32, align 4
  %l_image_width = alloca i32, align 4
  %l_img_comp = alloca %struct.opj_image_comp*, align 8
  %l_tilec = alloca %struct.opj_tcd_tilecomp*, align 8
  %l_image = alloca %struct.opj_image*, align 8
  %l_size_comp = alloca i32, align 4
  %l_remaining = alloca i32, align 4
  %l_src_ptr = alloca i32*, align 8
  %l_dest_ptr = alloca i8*, align 8
  %l_dest_ptr60 = alloca i16*, align 8
  %l_dest_ptr106 = alloca i32*, align 8
  store %struct.opj_tcd* %p_tcd, %struct.opj_tcd** %p_tcd.addr, align 8, !tbaa !1
  store i8* %p_data, i8** %p_data.addr, align 8, !tbaa !1
  %0 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast i32* %j to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = bitcast i32* %k to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #1
  store i32 0, i32* %k, align 4, !tbaa !5
  %3 = bitcast i32* %l_width to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #1
  %4 = bitcast i32* %l_height to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #1
  %5 = bitcast i32* %l_stride to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #1
  %6 = bitcast i32* %l_offset_x to i8*
  call void @llvm.lifetime.start(i64 4, i8* %6) #1
  %7 = bitcast i32* %l_offset_y to i8*
  call void @llvm.lifetime.start(i64 4, i8* %7) #1
  %8 = bitcast i32* %l_image_width to i8*
  call void @llvm.lifetime.start(i64 4, i8* %8) #1
  %9 = bitcast %struct.opj_image_comp** %l_img_comp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9) #1
  store %struct.opj_image_comp* null, %struct.opj_image_comp** %l_img_comp, align 8, !tbaa !1
  %10 = bitcast %struct.opj_tcd_tilecomp** %l_tilec to i8*
  call void @llvm.lifetime.start(i64 8, i8* %10) #1
  store %struct.opj_tcd_tilecomp* null, %struct.opj_tcd_tilecomp** %l_tilec, align 8, !tbaa !1
  %11 = bitcast %struct.opj_image** %l_image to i8*
  call void @llvm.lifetime.start(i64 8, i8* %11) #1
  store %struct.opj_image* null, %struct.opj_image** %l_image, align 8, !tbaa !1
  %12 = bitcast i32* %l_size_comp to i8*
  call void @llvm.lifetime.start(i64 4, i8* %12) #1
  %13 = bitcast i32* %l_remaining to i8*
  call void @llvm.lifetime.start(i64 4, i8* %13) #1
  %14 = bitcast i32** %l_src_ptr to i8*
  call void @llvm.lifetime.start(i64 8, i8* %14) #1
  %15 = load %struct.opj_tcd*, %struct.opj_tcd** %p_tcd.addr, align 8, !tbaa !1
  %tcd_image = getelementptr inbounds %struct.opj_tcd, %struct.opj_tcd* %15, i32 0, i32 5
  %16 = load %struct.opj_tcd_image*, %struct.opj_tcd_image** %tcd_image, align 8, !tbaa !190
  %tiles = getelementptr inbounds %struct.opj_tcd_image, %struct.opj_tcd_image* %16, i32 0, i32 0
  %17 = load %struct.opj_tcd_tile*, %struct.opj_tcd_tile** %tiles, align 8, !tbaa !192
  %comps = getelementptr inbounds %struct.opj_tcd_tile, %struct.opj_tcd_tile* %17, i32 0, i32 5
  %18 = load %struct.opj_tcd_tilecomp*, %struct.opj_tcd_tilecomp** %comps, align 8, !tbaa !255
  store %struct.opj_tcd_tilecomp* %18, %struct.opj_tcd_tilecomp** %l_tilec, align 8, !tbaa !1
  %19 = load %struct.opj_tcd*, %struct.opj_tcd** %p_tcd.addr, align 8, !tbaa !1
  %image = getelementptr inbounds %struct.opj_tcd, %struct.opj_tcd* %19, i32 0, i32 6
  %20 = load %struct.opj_image*, %struct.opj_image** %image, align 8, !tbaa !256
  store %struct.opj_image* %20, %struct.opj_image** %l_image, align 8, !tbaa !1
  %21 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %comps1 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %21, i32 0, i32 6
  %22 = load %struct.opj_image_comp*, %struct.opj_image_comp** %comps1, align 8, !tbaa !62
  store %struct.opj_image_comp* %22, %struct.opj_image_comp** %l_img_comp, align 8, !tbaa !1
  store i32 0, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc.127, %entry
  %23 = load i32, i32* %i, align 4, !tbaa !5
  %24 = load %struct.opj_tcd*, %struct.opj_tcd** %p_tcd.addr, align 8, !tbaa !1
  %image2 = getelementptr inbounds %struct.opj_tcd, %struct.opj_tcd* %24, i32 0, i32 6
  %25 = load %struct.opj_image*, %struct.opj_image** %image2, align 8, !tbaa !256
  %numcomps = getelementptr inbounds %struct.opj_image, %struct.opj_image* %25, i32 0, i32 4
  %26 = load i32, i32* %numcomps, align 4, !tbaa !45
  %cmp = icmp ult i32 %23, %26
  br i1 %cmp, label %for.body, label %for.end.129

for.body:                                         ; preds = %for.cond
  %27 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp, align 8, !tbaa !1
  %prec = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %27, i32 0, i32 6
  %28 = load i32, i32* %prec, align 4, !tbaa !63
  %shr = lshr i32 %28, 3
  store i32 %shr, i32* %l_size_comp, align 4, !tbaa !5
  %29 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp, align 8, !tbaa !1
  %prec3 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %29, i32 0, i32 6
  %30 = load i32, i32* %prec3, align 4, !tbaa !63
  %and = and i32 %30, 7
  store i32 %and, i32* %l_remaining, align 4, !tbaa !5
  %31 = load i32, i32* %l_remaining, align 4, !tbaa !5
  %tobool = icmp ne i32 %31, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %32 = load i32, i32* %l_size_comp, align 4, !tbaa !5
  %inc = add i32 %32, 1
  store i32 %inc, i32* %l_size_comp, align 4, !tbaa !5
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  %33 = load i32, i32* %l_size_comp, align 4, !tbaa !5
  %cmp4 = icmp eq i32 %33, 3
  br i1 %cmp4, label %if.then.5, label %if.end.6

if.then.5:                                        ; preds = %if.end
  store i32 4, i32* %l_size_comp, align 4, !tbaa !5
  br label %if.end.6

if.end.6:                                         ; preds = %if.then.5, %if.end
  %34 = load %struct.opj_tcd_tilecomp*, %struct.opj_tcd_tilecomp** %l_tilec, align 8, !tbaa !1
  %x1 = getelementptr inbounds %struct.opj_tcd_tilecomp, %struct.opj_tcd_tilecomp* %34, i32 0, i32 2
  %35 = load i32, i32* %x1, align 4, !tbaa !257
  %36 = load %struct.opj_tcd_tilecomp*, %struct.opj_tcd_tilecomp** %l_tilec, align 8, !tbaa !1
  %x0 = getelementptr inbounds %struct.opj_tcd_tilecomp, %struct.opj_tcd_tilecomp* %36, i32 0, i32 0
  %37 = load i32, i32* %x0, align 4, !tbaa !259
  %sub = sub nsw i32 %35, %37
  store i32 %sub, i32* %l_width, align 4, !tbaa !5
  %38 = load %struct.opj_tcd_tilecomp*, %struct.opj_tcd_tilecomp** %l_tilec, align 8, !tbaa !1
  %y1 = getelementptr inbounds %struct.opj_tcd_tilecomp, %struct.opj_tcd_tilecomp* %38, i32 0, i32 3
  %39 = load i32, i32* %y1, align 4, !tbaa !260
  %40 = load %struct.opj_tcd_tilecomp*, %struct.opj_tcd_tilecomp** %l_tilec, align 8, !tbaa !1
  %y0 = getelementptr inbounds %struct.opj_tcd_tilecomp, %struct.opj_tcd_tilecomp* %40, i32 0, i32 1
  %41 = load i32, i32* %y0, align 4, !tbaa !261
  %sub7 = sub nsw i32 %39, %41
  store i32 %sub7, i32* %l_height, align 4, !tbaa !5
  %42 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %x08 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %42, i32 0, i32 0
  %43 = load i32, i32* %x08, align 4, !tbaa !56
  %44 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp, align 8, !tbaa !1
  %dx = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %44, i32 0, i32 0
  %45 = load i32, i32* %dx, align 4, !tbaa !67
  %call = call i32 @opj_int_ceildiv(i32 %43, i32 %45) #7
  store i32 %call, i32* %l_offset_x, align 4, !tbaa !5
  %46 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %y09 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %46, i32 0, i32 1
  %47 = load i32, i32* %y09, align 4, !tbaa !58
  %48 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp, align 8, !tbaa !1
  %dy = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %48, i32 0, i32 1
  %49 = load i32, i32* %dy, align 4, !tbaa !68
  %call10 = call i32 @opj_int_ceildiv(i32 %47, i32 %49) #7
  store i32 %call10, i32* %l_offset_y, align 4, !tbaa !5
  %50 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %x111 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %50, i32 0, i32 2
  %51 = load i32, i32* %x111, align 4, !tbaa !57
  %52 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %x012 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %52, i32 0, i32 0
  %53 = load i32, i32* %x012, align 4, !tbaa !56
  %sub13 = sub i32 %51, %53
  %54 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp, align 8, !tbaa !1
  %dx14 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %54, i32 0, i32 0
  %55 = load i32, i32* %dx14, align 4, !tbaa !67
  %call15 = call i32 @opj_int_ceildiv(i32 %sub13, i32 %55) #7
  store i32 %call15, i32* %l_image_width, align 4, !tbaa !5
  %56 = load i32, i32* %l_image_width, align 4, !tbaa !5
  %57 = load i32, i32* %l_width, align 4, !tbaa !5
  %sub16 = sub i32 %56, %57
  store i32 %sub16, i32* %l_stride, align 4, !tbaa !5
  %58 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp, align 8, !tbaa !1
  %data = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %58, i32 0, i32 11
  %59 = load i32*, i32** %data, align 8, !tbaa !251
  %60 = load %struct.opj_tcd_tilecomp*, %struct.opj_tcd_tilecomp** %l_tilec, align 8, !tbaa !1
  %x017 = getelementptr inbounds %struct.opj_tcd_tilecomp, %struct.opj_tcd_tilecomp* %60, i32 0, i32 0
  %61 = load i32, i32* %x017, align 4, !tbaa !259
  %62 = load i32, i32* %l_offset_x, align 4, !tbaa !5
  %sub18 = sub i32 %61, %62
  %idx.ext = zext i32 %sub18 to i64
  %add.ptr = getelementptr inbounds i32, i32* %59, i64 %idx.ext
  %63 = load %struct.opj_tcd_tilecomp*, %struct.opj_tcd_tilecomp** %l_tilec, align 8, !tbaa !1
  %y019 = getelementptr inbounds %struct.opj_tcd_tilecomp, %struct.opj_tcd_tilecomp* %63, i32 0, i32 1
  %64 = load i32, i32* %y019, align 4, !tbaa !261
  %65 = load i32, i32* %l_offset_y, align 4, !tbaa !5
  %sub20 = sub i32 %64, %65
  %66 = load i32, i32* %l_image_width, align 4, !tbaa !5
  %mul = mul i32 %sub20, %66
  %idx.ext21 = zext i32 %mul to i64
  %add.ptr22 = getelementptr inbounds i32, i32* %add.ptr, i64 %idx.ext21
  store i32* %add.ptr22, i32** %l_src_ptr, align 8, !tbaa !1
  %67 = load i32, i32* %l_size_comp, align 4, !tbaa !5
  switch i32 %67, label %sw.epilog [
    i32 1, label %sw.bb
    i32 2, label %sw.bb.59
    i32 4, label %sw.bb.105
  ]

sw.bb:                                            ; preds = %if.end.6
  %68 = bitcast i8** %l_dest_ptr to i8*
  call void @llvm.lifetime.start(i64 8, i8* %68) #1
  %69 = load i8*, i8** %p_data.addr, align 8, !tbaa !1
  store i8* %69, i8** %l_dest_ptr, align 8, !tbaa !1
  %70 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp, align 8, !tbaa !1
  %sgnd = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %70, i32 0, i32 8
  %71 = load i32, i32* %sgnd, align 4, !tbaa !66
  %tobool23 = icmp ne i32 %71, 0
  br i1 %tobool23, label %if.then.24, label %if.else

if.then.24:                                       ; preds = %sw.bb
  store i32 0, i32* %j, align 4, !tbaa !5
  br label %for.cond.25

for.cond.25:                                      ; preds = %for.inc.35, %if.then.24
  %72 = load i32, i32* %j, align 4, !tbaa !5
  %73 = load i32, i32* %l_height, align 4, !tbaa !5
  %cmp26 = icmp ult i32 %72, %73
  br i1 %cmp26, label %for.body.27, label %for.end.37

for.body.27:                                      ; preds = %for.cond.25
  store i32 0, i32* %k, align 4, !tbaa !5
  br label %for.cond.28

for.cond.28:                                      ; preds = %for.inc, %for.body.27
  %74 = load i32, i32* %k, align 4, !tbaa !5
  %75 = load i32, i32* %l_width, align 4, !tbaa !5
  %cmp29 = icmp ult i32 %74, %75
  br i1 %cmp29, label %for.body.30, label %for.end

for.body.30:                                      ; preds = %for.cond.28
  %76 = load i32*, i32** %l_src_ptr, align 8, !tbaa !1
  %77 = load i32, i32* %76, align 4, !tbaa !5
  %conv = trunc i32 %77 to i8
  %78 = load i8*, i8** %l_dest_ptr, align 8, !tbaa !1
  store i8 %conv, i8* %78, align 1, !tbaa !103
  %79 = load i8*, i8** %l_dest_ptr, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds i8, i8* %79, i32 1
  store i8* %incdec.ptr, i8** %l_dest_ptr, align 8, !tbaa !1
  %80 = load i32*, i32** %l_src_ptr, align 8, !tbaa !1
  %incdec.ptr31 = getelementptr inbounds i32, i32* %80, i32 1
  store i32* %incdec.ptr31, i32** %l_src_ptr, align 8, !tbaa !1
  br label %for.inc

for.inc:                                          ; preds = %for.body.30
  %81 = load i32, i32* %k, align 4, !tbaa !5
  %inc32 = add i32 %81, 1
  store i32 %inc32, i32* %k, align 4, !tbaa !5
  br label %for.cond.28

for.end:                                          ; preds = %for.cond.28
  %82 = load i32, i32* %l_stride, align 4, !tbaa !5
  %83 = load i32*, i32** %l_src_ptr, align 8, !tbaa !1
  %idx.ext33 = zext i32 %82 to i64
  %add.ptr34 = getelementptr inbounds i32, i32* %83, i64 %idx.ext33
  store i32* %add.ptr34, i32** %l_src_ptr, align 8, !tbaa !1
  br label %for.inc.35

for.inc.35:                                       ; preds = %for.end
  %84 = load i32, i32* %j, align 4, !tbaa !5
  %inc36 = add i32 %84, 1
  store i32 %inc36, i32* %j, align 4, !tbaa !5
  br label %for.cond.25

for.end.37:                                       ; preds = %for.cond.25
  br label %if.end.58

if.else:                                          ; preds = %sw.bb
  store i32 0, i32* %j, align 4, !tbaa !5
  br label %for.cond.38

for.cond.38:                                      ; preds = %for.inc.55, %if.else
  %85 = load i32, i32* %j, align 4, !tbaa !5
  %86 = load i32, i32* %l_height, align 4, !tbaa !5
  %cmp39 = icmp ult i32 %85, %86
  br i1 %cmp39, label %for.body.41, label %for.end.57

for.body.41:                                      ; preds = %for.cond.38
  store i32 0, i32* %k, align 4, !tbaa !5
  br label %for.cond.42

for.cond.42:                                      ; preds = %for.inc.50, %for.body.41
  %87 = load i32, i32* %k, align 4, !tbaa !5
  %88 = load i32, i32* %l_width, align 4, !tbaa !5
  %cmp43 = icmp ult i32 %87, %88
  br i1 %cmp43, label %for.body.45, label %for.end.52

for.body.45:                                      ; preds = %for.cond.42
  %89 = load i32*, i32** %l_src_ptr, align 8, !tbaa !1
  %90 = load i32, i32* %89, align 4, !tbaa !5
  %and46 = and i32 %90, 255
  %conv47 = trunc i32 %and46 to i8
  %91 = load i8*, i8** %l_dest_ptr, align 8, !tbaa !1
  store i8 %conv47, i8* %91, align 1, !tbaa !103
  %92 = load i8*, i8** %l_dest_ptr, align 8, !tbaa !1
  %incdec.ptr48 = getelementptr inbounds i8, i8* %92, i32 1
  store i8* %incdec.ptr48, i8** %l_dest_ptr, align 8, !tbaa !1
  %93 = load i32*, i32** %l_src_ptr, align 8, !tbaa !1
  %incdec.ptr49 = getelementptr inbounds i32, i32* %93, i32 1
  store i32* %incdec.ptr49, i32** %l_src_ptr, align 8, !tbaa !1
  br label %for.inc.50

for.inc.50:                                       ; preds = %for.body.45
  %94 = load i32, i32* %k, align 4, !tbaa !5
  %inc51 = add i32 %94, 1
  store i32 %inc51, i32* %k, align 4, !tbaa !5
  br label %for.cond.42

for.end.52:                                       ; preds = %for.cond.42
  %95 = load i32, i32* %l_stride, align 4, !tbaa !5
  %96 = load i32*, i32** %l_src_ptr, align 8, !tbaa !1
  %idx.ext53 = zext i32 %95 to i64
  %add.ptr54 = getelementptr inbounds i32, i32* %96, i64 %idx.ext53
  store i32* %add.ptr54, i32** %l_src_ptr, align 8, !tbaa !1
  br label %for.inc.55

for.inc.55:                                       ; preds = %for.end.52
  %97 = load i32, i32* %j, align 4, !tbaa !5
  %inc56 = add i32 %97, 1
  store i32 %inc56, i32* %j, align 4, !tbaa !5
  br label %for.cond.38

for.end.57:                                       ; preds = %for.cond.38
  br label %if.end.58

if.end.58:                                        ; preds = %for.end.57, %for.end.37
  %98 = load i8*, i8** %l_dest_ptr, align 8, !tbaa !1
  store i8* %98, i8** %p_data.addr, align 8, !tbaa !1
  %99 = bitcast i8** %l_dest_ptr to i8*
  call void @llvm.lifetime.end(i64 8, i8* %99) #1
  br label %sw.epilog

sw.bb.59:                                         ; preds = %if.end.6
  %100 = bitcast i16** %l_dest_ptr60 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %100) #1
  %101 = load i8*, i8** %p_data.addr, align 8, !tbaa !1
  %102 = bitcast i8* %101 to i16*
  store i16* %102, i16** %l_dest_ptr60, align 8, !tbaa !1
  %103 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp, align 8, !tbaa !1
  %sgnd61 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %103, i32 0, i32 8
  %104 = load i32, i32* %sgnd61, align 4, !tbaa !66
  %tobool62 = icmp ne i32 %104, 0
  br i1 %tobool62, label %if.then.63, label %if.else.83

if.then.63:                                       ; preds = %sw.bb.59
  store i32 0, i32* %j, align 4, !tbaa !5
  br label %for.cond.64

for.cond.64:                                      ; preds = %for.inc.80, %if.then.63
  %105 = load i32, i32* %j, align 4, !tbaa !5
  %106 = load i32, i32* %l_height, align 4, !tbaa !5
  %cmp65 = icmp ult i32 %105, %106
  br i1 %cmp65, label %for.body.67, label %for.end.82

for.body.67:                                      ; preds = %for.cond.64
  store i32 0, i32* %k, align 4, !tbaa !5
  br label %for.cond.68

for.cond.68:                                      ; preds = %for.inc.75, %for.body.67
  %107 = load i32, i32* %k, align 4, !tbaa !5
  %108 = load i32, i32* %l_width, align 4, !tbaa !5
  %cmp69 = icmp ult i32 %107, %108
  br i1 %cmp69, label %for.body.71, label %for.end.77

for.body.71:                                      ; preds = %for.cond.68
  %109 = load i32*, i32** %l_src_ptr, align 8, !tbaa !1
  %incdec.ptr72 = getelementptr inbounds i32, i32* %109, i32 1
  store i32* %incdec.ptr72, i32** %l_src_ptr, align 8, !tbaa !1
  %110 = load i32, i32* %109, align 4, !tbaa !5
  %conv73 = trunc i32 %110 to i16
  %111 = load i16*, i16** %l_dest_ptr60, align 8, !tbaa !1
  %incdec.ptr74 = getelementptr inbounds i16, i16* %111, i32 1
  store i16* %incdec.ptr74, i16** %l_dest_ptr60, align 8, !tbaa !1
  store i16 %conv73, i16* %111, align 2, !tbaa !262
  br label %for.inc.75

for.inc.75:                                       ; preds = %for.body.71
  %112 = load i32, i32* %k, align 4, !tbaa !5
  %inc76 = add i32 %112, 1
  store i32 %inc76, i32* %k, align 4, !tbaa !5
  br label %for.cond.68

for.end.77:                                       ; preds = %for.cond.68
  %113 = load i32, i32* %l_stride, align 4, !tbaa !5
  %114 = load i32*, i32** %l_src_ptr, align 8, !tbaa !1
  %idx.ext78 = zext i32 %113 to i64
  %add.ptr79 = getelementptr inbounds i32, i32* %114, i64 %idx.ext78
  store i32* %add.ptr79, i32** %l_src_ptr, align 8, !tbaa !1
  br label %for.inc.80

for.inc.80:                                       ; preds = %for.end.77
  %115 = load i32, i32* %j, align 4, !tbaa !5
  %inc81 = add i32 %115, 1
  store i32 %inc81, i32* %j, align 4, !tbaa !5
  br label %for.cond.64

for.end.82:                                       ; preds = %for.cond.64
  br label %if.end.104

if.else.83:                                       ; preds = %sw.bb.59
  store i32 0, i32* %j, align 4, !tbaa !5
  br label %for.cond.84

for.cond.84:                                      ; preds = %for.inc.101, %if.else.83
  %116 = load i32, i32* %j, align 4, !tbaa !5
  %117 = load i32, i32* %l_height, align 4, !tbaa !5
  %cmp85 = icmp ult i32 %116, %117
  br i1 %cmp85, label %for.body.87, label %for.end.103

for.body.87:                                      ; preds = %for.cond.84
  store i32 0, i32* %k, align 4, !tbaa !5
  br label %for.cond.88

for.cond.88:                                      ; preds = %for.inc.96, %for.body.87
  %118 = load i32, i32* %k, align 4, !tbaa !5
  %119 = load i32, i32* %l_width, align 4, !tbaa !5
  %cmp89 = icmp ult i32 %118, %119
  br i1 %cmp89, label %for.body.91, label %for.end.98

for.body.91:                                      ; preds = %for.cond.88
  %120 = load i32*, i32** %l_src_ptr, align 8, !tbaa !1
  %incdec.ptr92 = getelementptr inbounds i32, i32* %120, i32 1
  store i32* %incdec.ptr92, i32** %l_src_ptr, align 8, !tbaa !1
  %121 = load i32, i32* %120, align 4, !tbaa !5
  %and93 = and i32 %121, 65535
  %conv94 = trunc i32 %and93 to i16
  %122 = load i16*, i16** %l_dest_ptr60, align 8, !tbaa !1
  %incdec.ptr95 = getelementptr inbounds i16, i16* %122, i32 1
  store i16* %incdec.ptr95, i16** %l_dest_ptr60, align 8, !tbaa !1
  store i16 %conv94, i16* %122, align 2, !tbaa !262
  br label %for.inc.96

for.inc.96:                                       ; preds = %for.body.91
  %123 = load i32, i32* %k, align 4, !tbaa !5
  %inc97 = add i32 %123, 1
  store i32 %inc97, i32* %k, align 4, !tbaa !5
  br label %for.cond.88

for.end.98:                                       ; preds = %for.cond.88
  %124 = load i32, i32* %l_stride, align 4, !tbaa !5
  %125 = load i32*, i32** %l_src_ptr, align 8, !tbaa !1
  %idx.ext99 = zext i32 %124 to i64
  %add.ptr100 = getelementptr inbounds i32, i32* %125, i64 %idx.ext99
  store i32* %add.ptr100, i32** %l_src_ptr, align 8, !tbaa !1
  br label %for.inc.101

for.inc.101:                                      ; preds = %for.end.98
  %126 = load i32, i32* %j, align 4, !tbaa !5
  %inc102 = add i32 %126, 1
  store i32 %inc102, i32* %j, align 4, !tbaa !5
  br label %for.cond.84

for.end.103:                                      ; preds = %for.cond.84
  br label %if.end.104

if.end.104:                                       ; preds = %for.end.103, %for.end.82
  %127 = load i16*, i16** %l_dest_ptr60, align 8, !tbaa !1
  %128 = bitcast i16* %127 to i8*
  store i8* %128, i8** %p_data.addr, align 8, !tbaa !1
  %129 = bitcast i16** %l_dest_ptr60 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %129) #1
  br label %sw.epilog

sw.bb.105:                                        ; preds = %if.end.6
  %130 = bitcast i32** %l_dest_ptr106 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %130) #1
  %131 = load i8*, i8** %p_data.addr, align 8, !tbaa !1
  %132 = bitcast i8* %131 to i32*
  store i32* %132, i32** %l_dest_ptr106, align 8, !tbaa !1
  store i32 0, i32* %j, align 4, !tbaa !5
  br label %for.cond.107

for.cond.107:                                     ; preds = %for.inc.122, %sw.bb.105
  %133 = load i32, i32* %j, align 4, !tbaa !5
  %134 = load i32, i32* %l_height, align 4, !tbaa !5
  %cmp108 = icmp ult i32 %133, %134
  br i1 %cmp108, label %for.body.110, label %for.end.124

for.body.110:                                     ; preds = %for.cond.107
  store i32 0, i32* %k, align 4, !tbaa !5
  br label %for.cond.111

for.cond.111:                                     ; preds = %for.inc.117, %for.body.110
  %135 = load i32, i32* %k, align 4, !tbaa !5
  %136 = load i32, i32* %l_width, align 4, !tbaa !5
  %cmp112 = icmp ult i32 %135, %136
  br i1 %cmp112, label %for.body.114, label %for.end.119

for.body.114:                                     ; preds = %for.cond.111
  %137 = load i32*, i32** %l_src_ptr, align 8, !tbaa !1
  %incdec.ptr115 = getelementptr inbounds i32, i32* %137, i32 1
  store i32* %incdec.ptr115, i32** %l_src_ptr, align 8, !tbaa !1
  %138 = load i32, i32* %137, align 4, !tbaa !5
  %139 = load i32*, i32** %l_dest_ptr106, align 8, !tbaa !1
  %incdec.ptr116 = getelementptr inbounds i32, i32* %139, i32 1
  store i32* %incdec.ptr116, i32** %l_dest_ptr106, align 8, !tbaa !1
  store i32 %138, i32* %139, align 4, !tbaa !5
  br label %for.inc.117

for.inc.117:                                      ; preds = %for.body.114
  %140 = load i32, i32* %k, align 4, !tbaa !5
  %inc118 = add i32 %140, 1
  store i32 %inc118, i32* %k, align 4, !tbaa !5
  br label %for.cond.111

for.end.119:                                      ; preds = %for.cond.111
  %141 = load i32, i32* %l_stride, align 4, !tbaa !5
  %142 = load i32*, i32** %l_src_ptr, align 8, !tbaa !1
  %idx.ext120 = zext i32 %141 to i64
  %add.ptr121 = getelementptr inbounds i32, i32* %142, i64 %idx.ext120
  store i32* %add.ptr121, i32** %l_src_ptr, align 8, !tbaa !1
  br label %for.inc.122

for.inc.122:                                      ; preds = %for.end.119
  %143 = load i32, i32* %j, align 4, !tbaa !5
  %inc123 = add i32 %143, 1
  store i32 %inc123, i32* %j, align 4, !tbaa !5
  br label %for.cond.107

for.end.124:                                      ; preds = %for.cond.107
  %144 = load i32*, i32** %l_dest_ptr106, align 8, !tbaa !1
  %145 = bitcast i32* %144 to i8*
  store i8* %145, i8** %p_data.addr, align 8, !tbaa !1
  %146 = bitcast i32** %l_dest_ptr106 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %146) #1
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end.6, %for.end.124, %if.end.104, %if.end.58
  %147 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp, align 8, !tbaa !1
  %incdec.ptr125 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %147, i32 1
  store %struct.opj_image_comp* %incdec.ptr125, %struct.opj_image_comp** %l_img_comp, align 8, !tbaa !1
  %148 = load %struct.opj_tcd_tilecomp*, %struct.opj_tcd_tilecomp** %l_tilec, align 8, !tbaa !1
  %incdec.ptr126 = getelementptr inbounds %struct.opj_tcd_tilecomp, %struct.opj_tcd_tilecomp* %148, i32 1
  store %struct.opj_tcd_tilecomp* %incdec.ptr126, %struct.opj_tcd_tilecomp** %l_tilec, align 8, !tbaa !1
  br label %for.inc.127

for.inc.127:                                      ; preds = %sw.epilog
  %149 = load i32, i32* %i, align 4, !tbaa !5
  %inc128 = add i32 %149, 1
  store i32 %inc128, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.end.129:                                      ; preds = %for.cond
  %150 = bitcast i32** %l_src_ptr to i8*
  call void @llvm.lifetime.end(i64 8, i8* %150) #1
  %151 = bitcast i32* %l_remaining to i8*
  call void @llvm.lifetime.end(i64 4, i8* %151) #1
  %152 = bitcast i32* %l_size_comp to i8*
  call void @llvm.lifetime.end(i64 4, i8* %152) #1
  %153 = bitcast %struct.opj_image** %l_image to i8*
  call void @llvm.lifetime.end(i64 8, i8* %153) #1
  %154 = bitcast %struct.opj_tcd_tilecomp** %l_tilec to i8*
  call void @llvm.lifetime.end(i64 8, i8* %154) #1
  %155 = bitcast %struct.opj_image_comp** %l_img_comp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %155) #1
  %156 = bitcast i32* %l_image_width to i8*
  call void @llvm.lifetime.end(i64 4, i8* %156) #1
  %157 = bitcast i32* %l_offset_y to i8*
  call void @llvm.lifetime.end(i64 4, i8* %157) #1
  %158 = bitcast i32* %l_offset_x to i8*
  call void @llvm.lifetime.end(i64 4, i8* %158) #1
  %159 = bitcast i32* %l_stride to i8*
  call void @llvm.lifetime.end(i64 4, i8* %159) #1
  %160 = bitcast i32* %l_height to i8*
  call void @llvm.lifetime.end(i64 4, i8* %160) #1
  %161 = bitcast i32* %l_width to i8*
  call void @llvm.lifetime.end(i64 4, i8* %161) #1
  %162 = bitcast i32* %k to i8*
  call void @llvm.lifetime.end(i64 4, i8* %162) #1
  %163 = bitcast i32* %j to i8*
  call void @llvm.lifetime.end(i64 4, i8* %163) #1
  %164 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %164) #1
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @opj_j2k_post_write_tile(%struct.opj_j2k* %p_j2k, i8* %p_data, i32 %p_data_size, %struct.opj_stream_private* %p_stream, %struct.opj_event_mgr* %p_manager) #0 {
entry:
  %retval = alloca i32, align 4
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %p_data.addr = alloca i8*, align 8
  %p_data_size.addr = alloca i32, align 4
  %p_stream.addr = alloca %struct.opj_stream_private*, align 8
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  %l_tcd = alloca %struct.opj_tcd*, align 8
  %l_nb_bytes_written = alloca i32, align 4
  %l_current_data = alloca i8*, align 8
  %l_tile_size = alloca i32, align 4
  %l_available_data = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store i8* %p_data, i8** %p_data.addr, align 8, !tbaa !1
  store i32 %p_data_size, i32* %p_data_size.addr, align 4, !tbaa !5
  store %struct.opj_stream_private* %p_stream, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %0 = bitcast %struct.opj_tcd** %l_tcd to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  store %struct.opj_tcd* null, %struct.opj_tcd** %l_tcd, align 8, !tbaa !1
  %1 = bitcast i32* %l_nb_bytes_written to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = bitcast i8** %l_current_data to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #1
  store i8* null, i8** %l_current_data, align 8, !tbaa !1
  %3 = bitcast i32* %l_tile_size to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #1
  store i32 0, i32* %l_tile_size, align 4, !tbaa !5
  %4 = bitcast i32* %l_available_data to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #1
  %5 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %5, i32 0, i32 1
  %m_encoder = bitcast %union.anon* %m_specific_param to %struct.opj_j2k_enc*
  %m_encoded_tile_data = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder, i32 0, i32 6
  %6 = load i8*, i8** %m_encoded_tile_data, align 8, !tbaa !117
  %tobool = icmp ne i8* %6, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.172, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 9363, i8* getelementptr inbounds ([113 x i8], [113 x i8]* @__PRETTY_FUNCTION__.opj_j2k_post_write_tile, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %7, %cond.true
  %8 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_tcd = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %8, i32 0, i32 9
  %9 = load %struct.opj_tcd*, %struct.opj_tcd** %m_tcd, align 8, !tbaa !120
  store %struct.opj_tcd* %9, %struct.opj_tcd** %l_tcd, align 8, !tbaa !1
  %10 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param1 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %10, i32 0, i32 1
  %m_encoder2 = bitcast %union.anon* %m_specific_param1 to %struct.opj_j2k_enc*
  %m_encoded_tile_size = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder2, i32 0, i32 7
  %11 = load i32, i32* %m_encoded_tile_size, align 4, !tbaa !263
  store i32 %11, i32* %l_tile_size, align 4, !tbaa !5
  %12 = load i32, i32* %l_tile_size, align 4, !tbaa !5
  store i32 %12, i32* %l_available_data, align 4, !tbaa !5
  %13 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param3 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %13, i32 0, i32 1
  %m_encoder4 = bitcast %union.anon* %m_specific_param3 to %struct.opj_j2k_enc*
  %m_encoded_tile_data5 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder4, i32 0, i32 6
  %14 = load i8*, i8** %m_encoded_tile_data5, align 8, !tbaa !117
  store i8* %14, i8** %l_current_data, align 8, !tbaa !1
  %15 = load %struct.opj_tcd*, %struct.opj_tcd** %l_tcd, align 8, !tbaa !1
  %16 = load i8*, i8** %p_data.addr, align 8, !tbaa !1
  %17 = load i32, i32* %p_data_size.addr, align 4, !tbaa !5
  %call = call i32 @opj_tcd_copy_tile_data(%struct.opj_tcd* %15, i8* %16, i32 %17) #7
  %tobool6 = icmp ne i32 %call, 0
  br i1 %tobool6, label %if.end, label %if.then

if.then:                                          ; preds = %cond.end
  %18 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call7 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %18, i32 1, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.173, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %cond.end
  store i32 0, i32* %l_nb_bytes_written, align 4, !tbaa !5
  %19 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %20 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %21 = load i32, i32* %l_available_data, align 4, !tbaa !5
  %22 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %23 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call8 = call i32 @opj_j2k_write_first_tile_part(%struct.opj_j2k* %19, i8* %20, i32* %l_nb_bytes_written, i32 %21, %struct.opj_stream_private* %22, %struct.opj_event_mgr* %23) #7
  %tobool9 = icmp ne i32 %call8, 0
  br i1 %tobool9, label %if.end.11, label %if.then.10

if.then.10:                                       ; preds = %if.end
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.11:                                        ; preds = %if.end
  %24 = load i32, i32* %l_nb_bytes_written, align 4, !tbaa !5
  %25 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %idx.ext = zext i32 %24 to i64
  %add.ptr = getelementptr inbounds i8, i8* %25, i64 %idx.ext
  store i8* %add.ptr, i8** %l_current_data, align 8, !tbaa !1
  %26 = load i32, i32* %l_nb_bytes_written, align 4, !tbaa !5
  %27 = load i32, i32* %l_available_data, align 4, !tbaa !5
  %sub = sub i32 %27, %26
  store i32 %sub, i32* %l_available_data, align 4, !tbaa !5
  store i32 0, i32* %l_nb_bytes_written, align 4, !tbaa !5
  %28 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %29 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %30 = load i32, i32* %l_available_data, align 4, !tbaa !5
  %31 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %32 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call12 = call i32 @opj_j2k_write_all_tile_parts(%struct.opj_j2k* %28, i8* %29, i32* %l_nb_bytes_written, i32 %30, %struct.opj_stream_private* %31, %struct.opj_event_mgr* %32) #7
  %tobool13 = icmp ne i32 %call12, 0
  br i1 %tobool13, label %if.end.15, label %if.then.14

if.then.14:                                       ; preds = %if.end.11
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.15:                                        ; preds = %if.end.11
  %33 = load i32, i32* %l_nb_bytes_written, align 4, !tbaa !5
  %34 = load i32, i32* %l_available_data, align 4, !tbaa !5
  %sub16 = sub i32 %34, %33
  store i32 %sub16, i32* %l_available_data, align 4, !tbaa !5
  %35 = load i32, i32* %l_tile_size, align 4, !tbaa !5
  %36 = load i32, i32* %l_available_data, align 4, !tbaa !5
  %sub17 = sub i32 %35, %36
  store i32 %sub17, i32* %l_nb_bytes_written, align 4, !tbaa !5
  %37 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %38 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param18 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %38, i32 0, i32 1
  %m_encoder19 = bitcast %union.anon* %m_specific_param18 to %struct.opj_j2k_enc*
  %m_encoded_tile_data20 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder19, i32 0, i32 6
  %39 = load i8*, i8** %m_encoded_tile_data20, align 8, !tbaa !117
  %40 = load i32, i32* %l_nb_bytes_written, align 4, !tbaa !5
  %conv = zext i32 %40 to i64
  %41 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call21 = call i64 @opj_stream_write_data(%struct.opj_stream_private* %37, i8* %39, i64 %conv, %struct.opj_event_mgr* %41) #7
  %42 = load i32, i32* %l_nb_bytes_written, align 4, !tbaa !5
  %conv22 = zext i32 %42 to i64
  %cmp = icmp ne i64 %call21, %conv22
  br i1 %cmp, label %if.then.24, label %if.end.25

if.then.24:                                       ; preds = %if.end.15
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.25:                                        ; preds = %if.end.15
  %43 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %43, i32 0, i32 8
  %44 = load i32, i32* %m_current_tile_number, align 4, !tbaa !11
  %inc = add i32 %44, 1
  store i32 %inc, i32* %m_current_tile_number, align 4, !tbaa !11
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.25, %if.then.24, %if.then.14, %if.then.10, %if.then
  %45 = bitcast i32* %l_available_data to i8*
  call void @llvm.lifetime.end(i64 4, i8* %45) #1
  %46 = bitcast i32* %l_tile_size to i8*
  call void @llvm.lifetime.end(i64 4, i8* %46) #1
  %47 = bitcast i8** %l_current_data to i8*
  call void @llvm.lifetime.end(i64 8, i8* %47) #1
  %48 = bitcast i32* %l_nb_bytes_written to i8*
  call void @llvm.lifetime.end(i64 4, i8* %48) #1
  %49 = bitcast %struct.opj_tcd** %l_tcd to i8*
  call void @llvm.lifetime.end(i64 8, i8* %49) #1
  %50 = load i32, i32* %retval
  ret i32 %50
}

; Function Attrs: nounwind uwtable
define i32 @opj_j2k_end_compress(%struct.opj_j2k* %p_j2k, %struct.opj_stream_private* %p_stream, %struct.opj_event_mgr* %p_manager) #0 {
entry:
  %retval = alloca i32, align 4
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %p_stream.addr = alloca %struct.opj_stream_private*, align 8
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store %struct.opj_stream_private* %p_stream, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %0 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  call void @opj_j2k_setup_end_compress(%struct.opj_j2k* %0) #7
  %1 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %2 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_procedure_list = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %2, i32 0, i32 5
  %3 = load %struct.opj_procedure_list*, %struct.opj_procedure_list** %m_procedure_list, align 8, !tbaa !114
  %4 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %5 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call = call i32 @opj_j2k_exec(%struct.opj_j2k* %1, %struct.opj_procedure_list* %3, %struct.opj_stream_private* %4, %struct.opj_event_mgr* %5) #7
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  store i32 1, i32* %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %6 = load i32, i32* %retval
  ret i32 %6
}

; Function Attrs: nounwind uwtable
define internal void @opj_j2k_setup_end_compress(%struct.opj_j2k* %p_j2k) #0 {
entry:
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %0 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cmp = icmp ne %struct.opj_j2k* %0, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 9405, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @__PRETTY_FUNCTION__.opj_j2k_setup_end_compress, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %1, %cond.true
  %2 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_procedure_list = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %2, i32 0, i32 5
  %3 = load %struct.opj_procedure_list*, %struct.opj_procedure_list** %m_procedure_list, align 8, !tbaa !114
  %call = call i32 @opj_procedure_list_add_procedure(%struct.opj_procedure_list* %3, void ()* bitcast (i32 (%struct.opj_j2k*, %struct.opj_stream_private*, %struct.opj_event_mgr*)* @opj_j2k_write_eoc to void ()*)) #7
  %4 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %4, i32 0, i32 4
  %m_specific_param = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp, i32 0, i32 18
  %m_enc = bitcast %union.anon.0* %m_specific_param to %struct.opj_encoding_param*
  %m_cinema = getelementptr inbounds %struct.opj_encoding_param, %struct.opj_encoding_param* %m_enc, i32 0, i32 0
  %5 = load i32, i32* %m_cinema, align 4, !tbaa !124
  %tobool = icmp ne i32 %5, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end
  %6 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_procedure_list1 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %6, i32 0, i32 5
  %7 = load %struct.opj_procedure_list*, %struct.opj_procedure_list** %m_procedure_list1, align 8, !tbaa !114
  %call2 = call i32 @opj_procedure_list_add_procedure(%struct.opj_procedure_list* %7, void ()* bitcast (i32 (%struct.opj_j2k*, %struct.opj_stream_private*, %struct.opj_event_mgr*)* @opj_j2k_write_updated_tlm to void ()*)) #7
  br label %if.end

if.end:                                           ; preds = %if.then, %cond.end
  %8 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_procedure_list3 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %8, i32 0, i32 5
  %9 = load %struct.opj_procedure_list*, %struct.opj_procedure_list** %m_procedure_list3, align 8, !tbaa !114
  %call4 = call i32 @opj_procedure_list_add_procedure(%struct.opj_procedure_list* %9, void ()* bitcast (i32 (%struct.opj_j2k*, %struct.opj_stream_private*, %struct.opj_event_mgr*)* @opj_j2k_write_epc to void ()*)) #7
  %10 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_procedure_list5 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %10, i32 0, i32 5
  %11 = load %struct.opj_procedure_list*, %struct.opj_procedure_list** %m_procedure_list5, align 8, !tbaa !114
  %call6 = call i32 @opj_procedure_list_add_procedure(%struct.opj_procedure_list* %11, void ()* bitcast (i32 (%struct.opj_j2k*, %struct.opj_stream_private*, %struct.opj_event_mgr*)* @opj_j2k_end_encoding to void ()*)) #7
  %12 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_procedure_list7 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %12, i32 0, i32 5
  %13 = load %struct.opj_procedure_list*, %struct.opj_procedure_list** %m_procedure_list7, align 8, !tbaa !114
  %call8 = call i32 @opj_procedure_list_add_procedure(%struct.opj_procedure_list* %13, void ()* bitcast (i32 (%struct.opj_j2k*, %struct.opj_stream_private*, %struct.opj_event_mgr*)* @opj_j2k_destroy_header_memory to void ()*)) #7
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @opj_j2k_start_compress(%struct.opj_j2k* %p_j2k, %struct.opj_stream_private* %p_stream, %struct.opj_image* %p_image, %struct.opj_event_mgr* %p_manager) #0 {
entry:
  %retval = alloca i32, align 4
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %p_stream.addr = alloca %struct.opj_stream_private*, align 8
  %p_image.addr = alloca %struct.opj_image*, align 8
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  %it_comp = alloca i32, align 4
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store %struct.opj_stream_private* %p_stream, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  store %struct.opj_image* %p_image, %struct.opj_image** %p_image.addr, align 8, !tbaa !1
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %0 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cmp = icmp ne %struct.opj_j2k* %0, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 9184, i8* getelementptr inbounds ([103 x i8], [103 x i8]* @__PRETTY_FUNCTION__.opj_j2k_start_compress, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %1, %cond.true
  %2 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %cmp1 = icmp ne %struct.opj_stream_private* %2, null
  br i1 %cmp1, label %cond.true.2, label %cond.false.3

cond.true.2:                                      ; preds = %cond.end
  br label %cond.end.4

cond.false.3:                                     ; preds = %cond.end
  call void @__assert_fail(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 9185, i8* getelementptr inbounds ([103 x i8], [103 x i8]* @__PRETTY_FUNCTION__.opj_j2k_start_compress, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.4

cond.end.4:                                       ; preds = %3, %cond.true.2
  %4 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %cmp5 = icmp ne %struct.opj_event_mgr* %4, null
  br i1 %cmp5, label %cond.true.6, label %cond.false.7

cond.true.6:                                      ; preds = %cond.end.4
  br label %cond.end.8

cond.false.7:                                     ; preds = %cond.end.4
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 9186, i8* getelementptr inbounds ([103 x i8], [103 x i8]* @__PRETTY_FUNCTION__.opj_j2k_start_compress, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.8

cond.end.8:                                       ; preds = %5, %cond.true.6
  %call = call %struct.opj_image* @opj_image_create0() #7
  %6 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_private_image = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %6, i32 0, i32 2
  store %struct.opj_image* %call, %struct.opj_image** %m_private_image, align 8, !tbaa !38
  %7 = load %struct.opj_image*, %struct.opj_image** %p_image.addr, align 8, !tbaa !1
  %8 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_private_image9 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %8, i32 0, i32 2
  %9 = load %struct.opj_image*, %struct.opj_image** %m_private_image9, align 8, !tbaa !38
  call void @opj_copy_image_header(%struct.opj_image* %7, %struct.opj_image* %9) #7
  %10 = load %struct.opj_image*, %struct.opj_image** %p_image.addr, align 8, !tbaa !1
  %comps = getelementptr inbounds %struct.opj_image, %struct.opj_image* %10, i32 0, i32 6
  %11 = load %struct.opj_image_comp*, %struct.opj_image_comp** %comps, align 8, !tbaa !62
  %tobool = icmp ne %struct.opj_image_comp* %11, null
  br i1 %tobool, label %if.then, label %if.end.27

if.then:                                          ; preds = %cond.end.8
  %12 = bitcast i32* %it_comp to i8*
  call void @llvm.lifetime.start(i64 4, i8* %12) #1
  store i32 0, i32* %it_comp, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then
  %13 = load i32, i32* %it_comp, align 4, !tbaa !5
  %14 = load %struct.opj_image*, %struct.opj_image** %p_image.addr, align 8, !tbaa !1
  %numcomps = getelementptr inbounds %struct.opj_image, %struct.opj_image* %14, i32 0, i32 4
  %15 = load i32, i32* %numcomps, align 4, !tbaa !45
  %cmp10 = icmp ult i32 %13, %15
  br i1 %cmp10, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %16 = load i32, i32* %it_comp, align 4, !tbaa !5
  %idxprom = zext i32 %16 to i64
  %17 = load %struct.opj_image*, %struct.opj_image** %p_image.addr, align 8, !tbaa !1
  %comps11 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %17, i32 0, i32 6
  %18 = load %struct.opj_image_comp*, %struct.opj_image_comp** %comps11, align 8, !tbaa !62
  %arrayidx = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %18, i64 %idxprom
  %data = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %arrayidx, i32 0, i32 11
  %19 = load i32*, i32** %data, align 8, !tbaa !251
  %tobool12 = icmp ne i32* %19, null
  br i1 %tobool12, label %if.then.13, label %if.end

if.then.13:                                       ; preds = %for.body
  %20 = load i32, i32* %it_comp, align 4, !tbaa !5
  %idxprom14 = zext i32 %20 to i64
  %21 = load %struct.opj_image*, %struct.opj_image** %p_image.addr, align 8, !tbaa !1
  %comps15 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %21, i32 0, i32 6
  %22 = load %struct.opj_image_comp*, %struct.opj_image_comp** %comps15, align 8, !tbaa !62
  %arrayidx16 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %22, i64 %idxprom14
  %data17 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %arrayidx16, i32 0, i32 11
  %23 = load i32*, i32** %data17, align 8, !tbaa !251
  %24 = load i32, i32* %it_comp, align 4, !tbaa !5
  %idxprom18 = zext i32 %24 to i64
  %25 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_private_image19 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %25, i32 0, i32 2
  %26 = load %struct.opj_image*, %struct.opj_image** %m_private_image19, align 8, !tbaa !38
  %comps20 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %26, i32 0, i32 6
  %27 = load %struct.opj_image_comp*, %struct.opj_image_comp** %comps20, align 8, !tbaa !62
  %arrayidx21 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %27, i64 %idxprom18
  %data22 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %arrayidx21, i32 0, i32 11
  store i32* %23, i32** %data22, align 8, !tbaa !251
  %28 = load i32, i32* %it_comp, align 4, !tbaa !5
  %idxprom23 = zext i32 %28 to i64
  %29 = load %struct.opj_image*, %struct.opj_image** %p_image.addr, align 8, !tbaa !1
  %comps24 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %29, i32 0, i32 6
  %30 = load %struct.opj_image_comp*, %struct.opj_image_comp** %comps24, align 8, !tbaa !62
  %arrayidx25 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %30, i64 %idxprom23
  %data26 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %arrayidx25, i32 0, i32 11
  store i32* null, i32** %data26, align 8, !tbaa !251
  br label %if.end

if.end:                                           ; preds = %if.then.13, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %31 = load i32, i32* %it_comp, align 4, !tbaa !5
  %inc = add i32 %31, 1
  store i32 %inc, i32* %it_comp, align 4, !tbaa !5
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %32 = bitcast i32* %it_comp to i8*
  call void @llvm.lifetime.end(i64 4, i8* %32) #1
  br label %if.end.27

if.end.27:                                        ; preds = %for.end, %cond.end.8
  %33 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  call void @opj_j2k_setup_encoding_validation(%struct.opj_j2k* %33) #7
  %34 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %35 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_validation_list = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %35, i32 0, i32 6
  %36 = load %struct.opj_procedure_list*, %struct.opj_procedure_list** %m_validation_list, align 8, !tbaa !113
  %37 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %38 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call28 = call i32 @opj_j2k_exec(%struct.opj_j2k* %34, %struct.opj_procedure_list* %36, %struct.opj_stream_private* %37, %struct.opj_event_mgr* %38) #7
  %tobool29 = icmp ne i32 %call28, 0
  br i1 %tobool29, label %if.end.31, label %if.then.30

if.then.30:                                       ; preds = %if.end.27
  store i32 0, i32* %retval
  br label %return

if.end.31:                                        ; preds = %if.end.27
  %39 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  call void @opj_j2k_setup_header_writing(%struct.opj_j2k* %39) #7
  %40 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %41 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_procedure_list = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %41, i32 0, i32 5
  %42 = load %struct.opj_procedure_list*, %struct.opj_procedure_list** %m_procedure_list, align 8, !tbaa !114
  %43 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %44 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call32 = call i32 @opj_j2k_exec(%struct.opj_j2k* %40, %struct.opj_procedure_list* %42, %struct.opj_stream_private* %43, %struct.opj_event_mgr* %44) #7
  %tobool33 = icmp ne i32 %call32, 0
  br i1 %tobool33, label %if.end.35, label %if.then.34

if.then.34:                                       ; preds = %if.end.31
  store i32 0, i32* %retval
  br label %return

if.end.35:                                        ; preds = %if.end.31
  store i32 1, i32* %retval
  br label %return

return:                                           ; preds = %if.end.35, %if.then.34, %if.then.30
  %45 = load i32, i32* %retval
  ret i32 %45
}

; Function Attrs: nounwind uwtable
define internal void @opj_j2k_setup_encoding_validation(%struct.opj_j2k* %p_j2k) #0 {
entry:
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %0 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cmp = icmp ne %struct.opj_j2k* %0, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 9422, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__.opj_j2k_setup_encoding_validation, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %1, %cond.true
  %2 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_validation_list = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %2, i32 0, i32 6
  %3 = load %struct.opj_procedure_list*, %struct.opj_procedure_list** %m_validation_list, align 8, !tbaa !113
  %call = call i32 @opj_procedure_list_add_procedure(%struct.opj_procedure_list* %3, void ()* bitcast (i32 (%struct.opj_j2k*, %struct.opj_stream_private*, %struct.opj_event_mgr*)* @opj_j2k_build_encoder to void ()*)) #7
  %4 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_validation_list1 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %4, i32 0, i32 6
  %5 = load %struct.opj_procedure_list*, %struct.opj_procedure_list** %m_validation_list1, align 8, !tbaa !113
  %call2 = call i32 @opj_procedure_list_add_procedure(%struct.opj_procedure_list* %5, void ()* bitcast (i32 (%struct.opj_j2k*, %struct.opj_stream_private*, %struct.opj_event_mgr*)* @opj_j2k_encoding_validation to void ()*)) #7
  %6 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_validation_list3 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %6, i32 0, i32 6
  %7 = load %struct.opj_procedure_list*, %struct.opj_procedure_list** %m_validation_list3, align 8, !tbaa !113
  %call4 = call i32 @opj_procedure_list_add_procedure(%struct.opj_procedure_list* %7, void ()* bitcast (i32 (%struct.opj_j2k*, %struct.opj_stream_private*, %struct.opj_event_mgr*)* @opj_j2k_mct_validation to void ()*)) #7
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @opj_j2k_setup_header_writing(%struct.opj_j2k* %p_j2k) #0 {
entry:
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %0 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cmp = icmp ne %struct.opj_j2k* %0, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 9434, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.opj_j2k_setup_header_writing, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %1, %cond.true
  %2 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_procedure_list = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %2, i32 0, i32 5
  %3 = load %struct.opj_procedure_list*, %struct.opj_procedure_list** %m_procedure_list, align 8, !tbaa !114
  %call = call i32 @opj_procedure_list_add_procedure(%struct.opj_procedure_list* %3, void ()* bitcast (i32 (%struct.opj_j2k*, %struct.opj_stream_private*, %struct.opj_event_mgr*)* @opj_j2k_init_info to void ()*)) #7
  %4 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_procedure_list1 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %4, i32 0, i32 5
  %5 = load %struct.opj_procedure_list*, %struct.opj_procedure_list** %m_procedure_list1, align 8, !tbaa !114
  %call2 = call i32 @opj_procedure_list_add_procedure(%struct.opj_procedure_list* %5, void ()* bitcast (i32 (%struct.opj_j2k*, %struct.opj_stream_private*, %struct.opj_event_mgr*)* @opj_j2k_write_soc to void ()*)) #7
  %6 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_procedure_list3 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %6, i32 0, i32 5
  %7 = load %struct.opj_procedure_list*, %struct.opj_procedure_list** %m_procedure_list3, align 8, !tbaa !114
  %call4 = call i32 @opj_procedure_list_add_procedure(%struct.opj_procedure_list* %7, void ()* bitcast (i32 (%struct.opj_j2k*, %struct.opj_stream_private*, %struct.opj_event_mgr*)* @opj_j2k_write_siz to void ()*)) #7
  %8 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_procedure_list5 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %8, i32 0, i32 5
  %9 = load %struct.opj_procedure_list*, %struct.opj_procedure_list** %m_procedure_list5, align 8, !tbaa !114
  %call6 = call i32 @opj_procedure_list_add_procedure(%struct.opj_procedure_list* %9, void ()* bitcast (i32 (%struct.opj_j2k*, %struct.opj_stream_private*, %struct.opj_event_mgr*)* @opj_j2k_write_cod to void ()*)) #7
  %10 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_procedure_list7 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %10, i32 0, i32 5
  %11 = load %struct.opj_procedure_list*, %struct.opj_procedure_list** %m_procedure_list7, align 8, !tbaa !114
  %call8 = call i32 @opj_procedure_list_add_procedure(%struct.opj_procedure_list* %11, void ()* bitcast (i32 (%struct.opj_j2k*, %struct.opj_stream_private*, %struct.opj_event_mgr*)* @opj_j2k_write_qcd to void ()*)) #7
  %12 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %12, i32 0, i32 4
  %m_specific_param = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp, i32 0, i32 18
  %m_enc = bitcast %union.anon.0* %m_specific_param to %struct.opj_encoding_param*
  %m_cinema = getelementptr inbounds %struct.opj_encoding_param, %struct.opj_encoding_param* %m_enc, i32 0, i32 0
  %13 = load i32, i32* %m_cinema, align 4, !tbaa !124
  %tobool = icmp ne i32 %13, 0
  br i1 %tobool, label %if.then, label %if.end.21

if.then:                                          ; preds = %cond.end
  %14 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_procedure_list9 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %14, i32 0, i32 5
  %15 = load %struct.opj_procedure_list*, %struct.opj_procedure_list** %m_procedure_list9, align 8, !tbaa !114
  %call10 = call i32 @opj_procedure_list_add_procedure(%struct.opj_procedure_list* %15, void ()* bitcast (i32 (%struct.opj_j2k*, %struct.opj_stream_private*, %struct.opj_event_mgr*)* @opj_j2k_write_image_components to void ()*)) #7
  %16 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_procedure_list11 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %16, i32 0, i32 5
  %17 = load %struct.opj_procedure_list*, %struct.opj_procedure_list** %m_procedure_list11, align 8, !tbaa !114
  %call12 = call i32 @opj_procedure_list_add_procedure(%struct.opj_procedure_list* %17, void ()* bitcast (i32 (%struct.opj_j2k*, %struct.opj_stream_private*, %struct.opj_event_mgr*)* @opj_j2k_write_tlm to void ()*)) #7
  %18 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp13 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %18, i32 0, i32 4
  %m_specific_param14 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp13, i32 0, i32 18
  %m_enc15 = bitcast %union.anon.0* %m_specific_param14 to %struct.opj_encoding_param*
  %m_cinema16 = getelementptr inbounds %struct.opj_encoding_param, %struct.opj_encoding_param* %m_enc15, i32 0, i32 0
  %19 = load i32, i32* %m_cinema16, align 4, !tbaa !124
  %cmp17 = icmp eq i32 %19, 3
  br i1 %cmp17, label %if.then.18, label %if.end

if.then.18:                                       ; preds = %if.then
  %20 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_procedure_list19 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %20, i32 0, i32 5
  %21 = load %struct.opj_procedure_list*, %struct.opj_procedure_list** %m_procedure_list19, align 8, !tbaa !114
  %call20 = call i32 @opj_procedure_list_add_procedure(%struct.opj_procedure_list* %21, void ()* bitcast (i32 (%struct.opj_j2k*, %struct.opj_stream_private*, %struct.opj_event_mgr*)* @opj_j2k_write_poc to void ()*)) #7
  br label %if.end

if.end:                                           ; preds = %if.then.18, %if.then
  br label %if.end.21

if.end.21:                                        ; preds = %if.end, %cond.end
  %22 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_procedure_list22 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %22, i32 0, i32 5
  %23 = load %struct.opj_procedure_list*, %struct.opj_procedure_list** %m_procedure_list22, align 8, !tbaa !114
  %call23 = call i32 @opj_procedure_list_add_procedure(%struct.opj_procedure_list* %23, void ()* bitcast (i32 (%struct.opj_j2k*, %struct.opj_stream_private*, %struct.opj_event_mgr*)* @opj_j2k_write_regions to void ()*)) #7
  %24 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp24 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %24, i32 0, i32 4
  %comment = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp24, i32 0, i32 5
  %25 = load i8*, i8** %comment, align 8, !tbaa !264
  %cmp25 = icmp ne i8* %25, null
  br i1 %cmp25, label %if.then.26, label %if.end.29

if.then.26:                                       ; preds = %if.end.21
  %26 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_procedure_list27 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %26, i32 0, i32 5
  %27 = load %struct.opj_procedure_list*, %struct.opj_procedure_list** %m_procedure_list27, align 8, !tbaa !114
  %call28 = call i32 @opj_procedure_list_add_procedure(%struct.opj_procedure_list* %27, void ()* bitcast (i32 (%struct.opj_j2k*, %struct.opj_stream_private*, %struct.opj_event_mgr*)* @opj_j2k_write_com to void ()*)) #7
  br label %if.end.29

if.end.29:                                        ; preds = %if.then.26, %if.end.21
  %28 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp30 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %28, i32 0, i32 4
  %rsiz = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp30, i32 0, i32 0
  %29 = load i32, i32* %rsiz, align 4, !tbaa !265
  %and = and i32 %29, 33024
  %tobool31 = icmp ne i32 %and, 0
  br i1 %tobool31, label %if.then.32, label %if.end.35

if.then.32:                                       ; preds = %if.end.29
  %30 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_procedure_list33 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %30, i32 0, i32 5
  %31 = load %struct.opj_procedure_list*, %struct.opj_procedure_list** %m_procedure_list33, align 8, !tbaa !114
  %call34 = call i32 @opj_procedure_list_add_procedure(%struct.opj_procedure_list* %31, void ()* bitcast (i32 (%struct.opj_j2k*, %struct.opj_stream_private*, %struct.opj_event_mgr*)* @opj_j2k_write_mct_data_group to void ()*)) #7
  br label %if.end.35

if.end.35:                                        ; preds = %if.then.32, %if.end.29
  %32 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cstr_index = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %32, i32 0, i32 7
  %33 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index, align 8, !tbaa !29
  %tobool36 = icmp ne %struct.opj_codestream_index* %33, null
  br i1 %tobool36, label %if.then.37, label %if.end.40

if.then.37:                                       ; preds = %if.end.35
  %34 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_procedure_list38 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %34, i32 0, i32 5
  %35 = load %struct.opj_procedure_list*, %struct.opj_procedure_list** %m_procedure_list38, align 8, !tbaa !114
  %call39 = call i32 @opj_procedure_list_add_procedure(%struct.opj_procedure_list* %35, void ()* bitcast (i32 (%struct.opj_j2k*, %struct.opj_stream_private*, %struct.opj_event_mgr*)* @opj_j2k_get_end_header to void ()*)) #7
  br label %if.end.40

if.end.40:                                        ; preds = %if.then.37, %if.end.35
  %36 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_procedure_list41 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %36, i32 0, i32 5
  %37 = load %struct.opj_procedure_list*, %struct.opj_procedure_list** %m_procedure_list41, align 8, !tbaa !114
  %call42 = call i32 @opj_procedure_list_add_procedure(%struct.opj_procedure_list* %37, void ()* bitcast (i32 (%struct.opj_j2k*, %struct.opj_stream_private*, %struct.opj_event_mgr*)* @opj_j2k_create_tcd to void ()*)) #7
  %38 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_procedure_list43 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %38, i32 0, i32 5
  %39 = load %struct.opj_procedure_list*, %struct.opj_procedure_list** %m_procedure_list43, align 8, !tbaa !114
  %call44 = call i32 @opj_procedure_list_add_procedure(%struct.opj_procedure_list* %39, void ()* bitcast (i32 (%struct.opj_j2k*, %struct.opj_stream_private*, %struct.opj_event_mgr*)* @opj_j2k_update_rates to void ()*)) #7
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @opj_j2k_write_tile(%struct.opj_j2k* %p_j2k, i32 %p_tile_index, i8* %p_data, i32 %p_data_size, %struct.opj_stream_private* %p_stream, %struct.opj_event_mgr* %p_manager) #0 {
entry:
  %retval = alloca i32, align 4
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %p_tile_index.addr = alloca i32, align 4
  %p_data.addr = alloca i8*, align 8
  %p_data_size.addr = alloca i32, align 4
  %p_stream.addr = alloca %struct.opj_stream_private*, align 8
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store i32 %p_tile_index, i32* %p_tile_index.addr, align 4, !tbaa !5
  store i8* %p_data, i8** %p_data.addr, align 8, !tbaa !1
  store i32 %p_data_size, i32* %p_data_size.addr, align 4, !tbaa !5
  store %struct.opj_stream_private* %p_stream, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %0 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %1 = load i32, i32* %p_tile_index.addr, align 4, !tbaa !5
  %2 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %3 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call = call i32 @opj_j2k_pre_write_tile(%struct.opj_j2k* %0, i32 %1, %struct.opj_stream_private* %2, %struct.opj_event_mgr* %3) #7
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %4 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %5 = load i32, i32* %p_tile_index.addr, align 4, !tbaa !5
  %call1 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %4, i32 1, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.50, i32 0, i32 0), i32 %5) #7
  store i32 0, i32* %retval
  br label %return

if.else:                                          ; preds = %entry
  %6 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %7 = load i8*, i8** %p_data.addr, align 8, !tbaa !1
  %8 = load i32, i32* %p_data_size.addr, align 4, !tbaa !5
  %9 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %10 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call2 = call i32 @opj_j2k_post_write_tile(%struct.opj_j2k* %6, i8* %7, i32 %8, %struct.opj_stream_private* %9, %struct.opj_event_mgr* %10) #7
  %tobool3 = icmp ne i32 %call2, 0
  br i1 %tobool3, label %if.end, label %if.then.4

if.then.4:                                        ; preds = %if.else
  %11 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %12 = load i32, i32* %p_tile_index.addr, align 4, !tbaa !5
  %call5 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %11, i32 1, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.51, i32 0, i32 0), i32 %12) #7
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %if.else
  br label %if.end.6

if.end.6:                                         ; preds = %if.end
  store i32 1, i32* %retval
  br label %return

return:                                           ; preds = %if.end.6, %if.then.4, %if.then
  %13 = load i32, i32* %retval
  ret i32 %13
}

declare void @opj_read_float_LE(i8*, float*) #3

declare void @opj_read_double_LE(i8*, double*) #3

declare void @opj_write_bytes_LE(i8*, i32, i32) #3

declare void @opj_write_float_LE(i8*, float) #3

declare void @opj_write_double_LE(i8*, double) #3

declare void @opj_image_comp_header_update(%struct.opj_image*, %struct.opj_cp*) #3

; Function Attrs: nounwind uwtable
define internal i32 @opj_j2k_read_SPCod_SPCoc(%struct.opj_j2k* %p_j2k, i32 %compno, i8* %p_header_data, i32* %p_header_size, %struct.opj_event_mgr* %p_manager) #0 {
entry:
  %retval = alloca i32, align 4
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %compno.addr = alloca i32, align 4
  %p_header_data.addr = alloca i8*, align 8
  %p_header_size.addr = alloca i32*, align 8
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  %i = alloca i32, align 4
  %l_tmp = alloca i32, align 4
  %l_cp = alloca %struct.opj_cp*, align 8
  %l_tcp = alloca %struct.opj_tcp*, align 8
  %l_tccp = alloca %struct.opj_tccp*, align 8
  %l_current_ptr = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store i32 %compno, i32* %compno.addr, align 4, !tbaa !5
  store i8* %p_header_data, i8** %p_header_data.addr, align 8, !tbaa !1
  store i32* %p_header_size, i32** %p_header_size.addr, align 8, !tbaa !1
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %0 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast i32* %l_tmp to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = bitcast %struct.opj_cp** %l_cp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #1
  store %struct.opj_cp* null, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %3 = bitcast %struct.opj_tcp** %l_tcp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #1
  store %struct.opj_tcp* null, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %4 = bitcast %struct.opj_tccp** %l_tccp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4) #1
  store %struct.opj_tccp* null, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %5 = bitcast i8** %l_current_ptr to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5) #1
  store i8* null, i8** %l_current_ptr, align 8, !tbaa !1
  %6 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cmp = icmp ne %struct.opj_j2k* %6, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 7936, i8* getelementptr inbounds ([104 x i8], [104 x i8]* @__PRETTY_FUNCTION__.opj_j2k_read_SPCod_SPCoc, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %7, %cond.true
  %8 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %cmp1 = icmp ne %struct.opj_event_mgr* %8, null
  br i1 %cmp1, label %cond.true.2, label %cond.false.3

cond.true.2:                                      ; preds = %cond.end
  br label %cond.end.4

cond.false.3:                                     ; preds = %cond.end
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 7937, i8* getelementptr inbounds ([104 x i8], [104 x i8]* @__PRETTY_FUNCTION__.opj_j2k_read_SPCod_SPCoc, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.4

cond.end.4:                                       ; preds = %9, %cond.true.2
  %10 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %cmp5 = icmp ne i8* %10, null
  br i1 %cmp5, label %cond.true.6, label %cond.false.7

cond.true.6:                                      ; preds = %cond.end.4
  br label %cond.end.8

cond.false.7:                                     ; preds = %cond.end.4
  call void @__assert_fail(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.52, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 7938, i8* getelementptr inbounds ([104 x i8], [104 x i8]* @__PRETTY_FUNCTION__.opj_j2k_read_SPCod_SPCoc, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.8

cond.end.8:                                       ; preds = %11, %cond.true.6
  %12 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %12, i32 0, i32 4
  store %struct.opj_cp* %m_cp, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %13 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %13, i32 0, i32 1
  %m_decoder = bitcast %union.anon* %m_specific_param to %struct.opj_j2k_dec*
  %m_state = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder, i32 0, i32 0
  %14 = load i32, i32* %m_state, align 4, !tbaa !23
  %cmp9 = icmp eq i32 %14, 16
  br i1 %cmp9, label %cond.true.10, label %cond.false.11

cond.true.10:                                     ; preds = %cond.end.8
  %15 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %15, i32 0, i32 8
  %16 = load i32, i32* %m_current_tile_number, align 4, !tbaa !11
  %idxprom = zext i32 %16 to i64
  %17 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %tcps = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %17, i32 0, i32 17
  %18 = load %struct.opj_tcp*, %struct.opj_tcp** %tcps, align 8, !tbaa !16
  %arrayidx = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %18, i64 %idxprom
  br label %cond.end.14

cond.false.11:                                    ; preds = %cond.end.8
  %19 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param12 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %19, i32 0, i32 1
  %m_decoder13 = bitcast %union.anon* %m_specific_param12 to %struct.opj_j2k_dec*
  %m_default_tcp = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder13, i32 0, i32 1
  %20 = load %struct.opj_tcp*, %struct.opj_tcp** %m_default_tcp, align 8, !tbaa !39
  br label %cond.end.14

cond.end.14:                                      ; preds = %cond.false.11, %cond.true.10
  %cond = phi %struct.opj_tcp* [ %arrayidx, %cond.true.10 ], [ %20, %cond.false.11 ]
  store %struct.opj_tcp* %cond, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %21 = load i32, i32* %compno.addr, align 4, !tbaa !5
  %22 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_private_image = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %22, i32 0, i32 2
  %23 = load %struct.opj_image*, %struct.opj_image** %m_private_image, align 8, !tbaa !38
  %numcomps = getelementptr inbounds %struct.opj_image, %struct.opj_image* %23, i32 0, i32 4
  %24 = load i32, i32* %numcomps, align 4, !tbaa !45
  %cmp15 = icmp ult i32 %21, %24
  br i1 %cmp15, label %cond.true.16, label %cond.false.17

cond.true.16:                                     ; preds = %cond.end.14
  br label %cond.end.18

cond.false.17:                                    ; preds = %cond.end.14
  call void @__assert_fail(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.63, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 7946, i8* getelementptr inbounds ([104 x i8], [104 x i8]* @__PRETTY_FUNCTION__.opj_j2k_read_SPCod_SPCoc, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.18

cond.end.18:                                      ; preds = %25, %cond.true.16
  %26 = load i32, i32* %compno.addr, align 4, !tbaa !5
  %idxprom19 = zext i32 %26 to i64
  %27 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %tccps = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %27, i32 0, i32 13
  %28 = load %struct.opj_tccp*, %struct.opj_tccp** %tccps, align 8, !tbaa !48
  %arrayidx20 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %28, i64 %idxprom19
  store %struct.opj_tccp* %arrayidx20, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %29 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  store i8* %29, i8** %l_current_ptr, align 8, !tbaa !1
  %30 = load i32*, i32** %p_header_size.addr, align 8, !tbaa !1
  %31 = load i32, i32* %30, align 4, !tbaa !5
  %cmp21 = icmp ult i32 %31, 5
  br i1 %cmp21, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end.18
  %32 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %32, i32 1, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.64, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %cond.end.18
  %33 = load i8*, i8** %l_current_ptr, align 8, !tbaa !1
  %34 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %numresolutions = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %34, i32 0, i32 1
  call void @opj_read_bytes_LE(i8* %33, i32* %numresolutions, i32 1) #7
  %35 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %numresolutions22 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %35, i32 0, i32 1
  %36 = load i32, i32* %numresolutions22, align 4, !tbaa !161
  %inc = add i32 %36, 1
  store i32 %inc, i32* %numresolutions22, align 4, !tbaa !161
  %37 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %numresolutions23 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %37, i32 0, i32 1
  %38 = load i32, i32* %numresolutions23, align 4, !tbaa !161
  %cmp24 = icmp ugt i32 %38, 33
  br i1 %cmp24, label %if.then.25, label %if.end.28

if.then.25:                                       ; preds = %if.end
  %39 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %40 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %numresolutions26 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %40, i32 0, i32 1
  %41 = load i32, i32* %numresolutions26, align 4, !tbaa !161
  %call27 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %39, i32 1, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.65, i32 0, i32 0), i32 %41, i32 33) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.28:                                        ; preds = %if.end
  %42 = load i8*, i8** %l_current_ptr, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds i8, i8* %42, i32 1
  store i8* %incdec.ptr, i8** %l_current_ptr, align 8, !tbaa !1
  %43 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %m_specific_param29 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %43, i32 0, i32 18
  %m_dec = bitcast %union.anon.0* %m_specific_param29 to %struct.opj_decoding_param*
  %m_reduce = getelementptr inbounds %struct.opj_decoding_param, %struct.opj_decoding_param* %m_dec, i32 0, i32 0
  %44 = load i32, i32* %m_reduce, align 4, !tbaa !70
  %45 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %numresolutions30 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %45, i32 0, i32 1
  %46 = load i32, i32* %numresolutions30, align 4, !tbaa !161
  %cmp31 = icmp uge i32 %44, %46
  br i1 %cmp31, label %if.then.32, label %if.end.37

if.then.32:                                       ; preds = %if.end.28
  %47 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %48 = load i32, i32* %compno.addr, align 4, !tbaa !5
  %call33 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %47, i32 1, i8* getelementptr inbounds ([158 x i8], [158 x i8]* @.str.66, i32 0, i32 0), i32 %48) #7
  %49 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param34 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %49, i32 0, i32 1
  %m_decoder35 = bitcast %union.anon* %m_specific_param34 to %struct.opj_j2k_dec*
  %m_state36 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder35, i32 0, i32 0
  %50 = load i32, i32* %m_state36, align 4, !tbaa !23
  %or = or i32 %50, 32768
  store i32 %or, i32* %m_state36, align 4, !tbaa !23
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.37:                                        ; preds = %if.end.28
  %51 = load i8*, i8** %l_current_ptr, align 8, !tbaa !1
  %52 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %cblkw = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %52, i32 0, i32 2
  call void @opj_read_bytes_LE(i8* %51, i32* %cblkw, i32 1) #7
  %53 = load i8*, i8** %l_current_ptr, align 8, !tbaa !1
  %incdec.ptr38 = getelementptr inbounds i8, i8* %53, i32 1
  store i8* %incdec.ptr38, i8** %l_current_ptr, align 8, !tbaa !1
  %54 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %cblkw39 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %54, i32 0, i32 2
  %55 = load i32, i32* %cblkw39, align 4, !tbaa !163
  %add = add i32 %55, 2
  store i32 %add, i32* %cblkw39, align 4, !tbaa !163
  %56 = load i8*, i8** %l_current_ptr, align 8, !tbaa !1
  %57 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %cblkh = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %57, i32 0, i32 3
  call void @opj_read_bytes_LE(i8* %56, i32* %cblkh, i32 1) #7
  %58 = load i8*, i8** %l_current_ptr, align 8, !tbaa !1
  %incdec.ptr40 = getelementptr inbounds i8, i8* %58, i32 1
  store i8* %incdec.ptr40, i8** %l_current_ptr, align 8, !tbaa !1
  %59 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %cblkh41 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %59, i32 0, i32 3
  %60 = load i32, i32* %cblkh41, align 4, !tbaa !165
  %add42 = add i32 %60, 2
  store i32 %add42, i32* %cblkh41, align 4, !tbaa !165
  %61 = load i8*, i8** %l_current_ptr, align 8, !tbaa !1
  %62 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %cblksty = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %62, i32 0, i32 4
  call void @opj_read_bytes_LE(i8* %61, i32* %cblksty, i32 1) #7
  %63 = load i8*, i8** %l_current_ptr, align 8, !tbaa !1
  %incdec.ptr43 = getelementptr inbounds i8, i8* %63, i32 1
  store i8* %incdec.ptr43, i8** %l_current_ptr, align 8, !tbaa !1
  %64 = load i8*, i8** %l_current_ptr, align 8, !tbaa !1
  %65 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %qmfbid = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %65, i32 0, i32 5
  call void @opj_read_bytes_LE(i8* %64, i32* %qmfbid, i32 1) #7
  %66 = load i8*, i8** %l_current_ptr, align 8, !tbaa !1
  %incdec.ptr44 = getelementptr inbounds i8, i8* %66, i32 1
  store i8* %incdec.ptr44, i8** %l_current_ptr, align 8, !tbaa !1
  %67 = load i32*, i32** %p_header_size.addr, align 8, !tbaa !1
  %68 = load i32, i32* %67, align 4, !tbaa !5
  %sub = sub i32 %68, 5
  %69 = load i32*, i32** %p_header_size.addr, align 8, !tbaa !1
  store i32 %sub, i32* %69, align 4, !tbaa !5
  %70 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %csty = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %70, i32 0, i32 0
  %71 = load i32, i32* %csty, align 4, !tbaa !49
  %and = and i32 %71, 1
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then.45, label %if.else

if.then.45:                                       ; preds = %if.end.37
  %72 = load i32*, i32** %p_header_size.addr, align 8, !tbaa !1
  %73 = load i32, i32* %72, align 4, !tbaa !5
  %74 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %numresolutions46 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %74, i32 0, i32 1
  %75 = load i32, i32* %numresolutions46, align 4, !tbaa !161
  %cmp47 = icmp ult i32 %73, %75
  br i1 %cmp47, label %if.then.48, label %if.end.50

if.then.48:                                       ; preds = %if.then.45
  %76 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call49 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %76, i32 1, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.64, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.50:                                        ; preds = %if.then.45
  store i32 0, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.50
  %77 = load i32, i32* %i, align 4, !tbaa !5
  %78 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %numresolutions51 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %78, i32 0, i32 1
  %79 = load i32, i32* %numresolutions51, align 4, !tbaa !161
  %cmp52 = icmp ult i32 %77, %79
  br i1 %cmp52, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %80 = load i8*, i8** %l_current_ptr, align 8, !tbaa !1
  call void @opj_read_bytes_LE(i8* %80, i32* %l_tmp, i32 1) #7
  %81 = load i8*, i8** %l_current_ptr, align 8, !tbaa !1
  %incdec.ptr53 = getelementptr inbounds i8, i8* %81, i32 1
  store i8* %incdec.ptr53, i8** %l_current_ptr, align 8, !tbaa !1
  %82 = load i32, i32* %l_tmp, align 4, !tbaa !5
  %and54 = and i32 %82, 15
  %83 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom55 = zext i32 %83 to i64
  %84 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %prcw = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %84, i32 0, i32 10
  %arrayidx56 = getelementptr inbounds [33 x i32], [33 x i32]* %prcw, i32 0, i64 %idxprom55
  store i32 %and54, i32* %arrayidx56, align 4, !tbaa !5
  %85 = load i32, i32* %l_tmp, align 4, !tbaa !5
  %shr = lshr i32 %85, 4
  %86 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom57 = zext i32 %86 to i64
  %87 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %prch = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %87, i32 0, i32 11
  %arrayidx58 = getelementptr inbounds [33 x i32], [33 x i32]* %prch, i32 0, i64 %idxprom57
  store i32 %shr, i32* %arrayidx58, align 4, !tbaa !5
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %88 = load i32, i32* %i, align 4, !tbaa !5
  %inc59 = add i32 %88, 1
  store i32 %inc59, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %89 = load i32*, i32** %p_header_size.addr, align 8, !tbaa !1
  %90 = load i32, i32* %89, align 4, !tbaa !5
  %91 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %numresolutions60 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %91, i32 0, i32 1
  %92 = load i32, i32* %numresolutions60, align 4, !tbaa !161
  %sub61 = sub i32 %90, %92
  %93 = load i32*, i32** %p_header_size.addr, align 8, !tbaa !1
  store i32 %sub61, i32* %93, align 4, !tbaa !5
  br label %if.end.75

if.else:                                          ; preds = %if.end.37
  store i32 0, i32* %i, align 4, !tbaa !5
  br label %for.cond.62

for.cond.62:                                      ; preds = %for.inc.72, %if.else
  %94 = load i32, i32* %i, align 4, !tbaa !5
  %95 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %numresolutions63 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %95, i32 0, i32 1
  %96 = load i32, i32* %numresolutions63, align 4, !tbaa !161
  %cmp64 = icmp ult i32 %94, %96
  br i1 %cmp64, label %for.body.65, label %for.end.74

for.body.65:                                      ; preds = %for.cond.62
  %97 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom66 = zext i32 %97 to i64
  %98 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %prcw67 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %98, i32 0, i32 10
  %arrayidx68 = getelementptr inbounds [33 x i32], [33 x i32]* %prcw67, i32 0, i64 %idxprom66
  store i32 15, i32* %arrayidx68, align 4, !tbaa !5
  %99 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom69 = zext i32 %99 to i64
  %100 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %prch70 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %100, i32 0, i32 11
  %arrayidx71 = getelementptr inbounds [33 x i32], [33 x i32]* %prch70, i32 0, i64 %idxprom69
  store i32 15, i32* %arrayidx71, align 4, !tbaa !5
  br label %for.inc.72

for.inc.72:                                       ; preds = %for.body.65
  %101 = load i32, i32* %i, align 4, !tbaa !5
  %inc73 = add i32 %101, 1
  store i32 %inc73, i32* %i, align 4, !tbaa !5
  br label %for.cond.62

for.end.74:                                       ; preds = %for.cond.62
  br label %if.end.75

if.end.75:                                        ; preds = %for.end.74, %for.end
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.75, %if.then.48, %if.then.32, %if.then.25, %if.then
  %102 = bitcast i8** %l_current_ptr to i8*
  call void @llvm.lifetime.end(i64 8, i8* %102) #1
  %103 = bitcast %struct.opj_tccp** %l_tccp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %103) #1
  %104 = bitcast %struct.opj_tcp** %l_tcp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %104) #1
  %105 = bitcast %struct.opj_cp** %l_cp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %105) #1
  %106 = bitcast i32* %l_tmp to i8*
  call void @llvm.lifetime.end(i64 4, i8* %106) #1
  %107 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %107) #1
  %108 = load i32, i32* %retval
  ret i32 %108
}

; Function Attrs: nounwind uwtable
define internal void @opj_j2k_copy_tile_component_parameters(%struct.opj_j2k* %p_j2k) #0 {
entry:
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %i = alloca i32, align 4
  %l_cp = alloca %struct.opj_cp*, align 8
  %l_tcp = alloca %struct.opj_tcp*, align 8
  %l_ref_tccp = alloca %struct.opj_tccp*, align 8
  %l_copied_tccp = alloca %struct.opj_tccp*, align 8
  %l_prc_size = alloca i32, align 4
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %0 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast %struct.opj_cp** %l_cp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #1
  store %struct.opj_cp* null, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %2 = bitcast %struct.opj_tcp** %l_tcp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #1
  store %struct.opj_tcp* null, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %3 = bitcast %struct.opj_tccp** %l_ref_tccp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #1
  store %struct.opj_tccp* null, %struct.opj_tccp** %l_ref_tccp, align 8, !tbaa !1
  %4 = bitcast %struct.opj_tccp** %l_copied_tccp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4) #1
  store %struct.opj_tccp* null, %struct.opj_tccp** %l_copied_tccp, align 8, !tbaa !1
  %5 = bitcast i32* %l_prc_size to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #1
  %6 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cmp = icmp ne %struct.opj_j2k* %6, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 8045, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.opj_j2k_copy_tile_component_parameters, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %7, %cond.true
  %8 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %8, i32 0, i32 4
  store %struct.opj_cp* %m_cp, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %9 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %9, i32 0, i32 1
  %m_decoder = bitcast %union.anon* %m_specific_param to %struct.opj_j2k_dec*
  %m_state = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder, i32 0, i32 0
  %10 = load i32, i32* %m_state, align 4, !tbaa !23
  %cmp1 = icmp eq i32 %10, 16
  br i1 %cmp1, label %cond.true.2, label %cond.false.3

cond.true.2:                                      ; preds = %cond.end
  %11 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %11, i32 0, i32 8
  %12 = load i32, i32* %m_current_tile_number, align 4, !tbaa !11
  %idxprom = zext i32 %12 to i64
  %13 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %tcps = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %13, i32 0, i32 17
  %14 = load %struct.opj_tcp*, %struct.opj_tcp** %tcps, align 8, !tbaa !16
  %arrayidx = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %14, i64 %idxprom
  br label %cond.end.6

cond.false.3:                                     ; preds = %cond.end
  %15 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param4 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %15, i32 0, i32 1
  %m_decoder5 = bitcast %union.anon* %m_specific_param4 to %struct.opj_j2k_dec*
  %m_default_tcp = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder5, i32 0, i32 1
  %16 = load %struct.opj_tcp*, %struct.opj_tcp** %m_default_tcp, align 8, !tbaa !39
  br label %cond.end.6

cond.end.6:                                       ; preds = %cond.false.3, %cond.true.2
  %cond = phi %struct.opj_tcp* [ %arrayidx, %cond.true.2 ], [ %16, %cond.false.3 ]
  store %struct.opj_tcp* %cond, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %17 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %tccps = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %17, i32 0, i32 13
  %18 = load %struct.opj_tccp*, %struct.opj_tccp** %tccps, align 8, !tbaa !48
  %arrayidx7 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %18, i64 0
  store %struct.opj_tccp* %arrayidx7, %struct.opj_tccp** %l_ref_tccp, align 8, !tbaa !1
  %19 = load %struct.opj_tccp*, %struct.opj_tccp** %l_ref_tccp, align 8, !tbaa !1
  %add.ptr = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %19, i64 1
  store %struct.opj_tccp* %add.ptr, %struct.opj_tccp** %l_copied_tccp, align 8, !tbaa !1
  %20 = load %struct.opj_tccp*, %struct.opj_tccp** %l_ref_tccp, align 8, !tbaa !1
  %numresolutions = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %20, i32 0, i32 1
  %21 = load i32, i32* %numresolutions, align 4, !tbaa !161
  %conv = zext i32 %21 to i64
  %mul = mul i64 %conv, 4
  %conv8 = trunc i64 %mul to i32
  store i32 %conv8, i32* %l_prc_size, align 4, !tbaa !5
  store i32 1, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %cond.end.6
  %22 = load i32, i32* %i, align 4, !tbaa !5
  %23 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_private_image = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %23, i32 0, i32 2
  %24 = load %struct.opj_image*, %struct.opj_image** %m_private_image, align 8, !tbaa !38
  %numcomps = getelementptr inbounds %struct.opj_image, %struct.opj_image* %24, i32 0, i32 4
  %25 = load i32, i32* %numcomps, align 4, !tbaa !45
  %cmp9 = icmp ult i32 %22, %25
  br i1 %cmp9, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %26 = load %struct.opj_tccp*, %struct.opj_tccp** %l_ref_tccp, align 8, !tbaa !1
  %numresolutions11 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %26, i32 0, i32 1
  %27 = load i32, i32* %numresolutions11, align 4, !tbaa !161
  %28 = load %struct.opj_tccp*, %struct.opj_tccp** %l_copied_tccp, align 8, !tbaa !1
  %numresolutions12 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %28, i32 0, i32 1
  store i32 %27, i32* %numresolutions12, align 4, !tbaa !161
  %29 = load %struct.opj_tccp*, %struct.opj_tccp** %l_ref_tccp, align 8, !tbaa !1
  %cblkw = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %29, i32 0, i32 2
  %30 = load i32, i32* %cblkw, align 4, !tbaa !163
  %31 = load %struct.opj_tccp*, %struct.opj_tccp** %l_copied_tccp, align 8, !tbaa !1
  %cblkw13 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %31, i32 0, i32 2
  store i32 %30, i32* %cblkw13, align 4, !tbaa !163
  %32 = load %struct.opj_tccp*, %struct.opj_tccp** %l_ref_tccp, align 8, !tbaa !1
  %cblkh = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %32, i32 0, i32 3
  %33 = load i32, i32* %cblkh, align 4, !tbaa !165
  %34 = load %struct.opj_tccp*, %struct.opj_tccp** %l_copied_tccp, align 8, !tbaa !1
  %cblkh14 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %34, i32 0, i32 3
  store i32 %33, i32* %cblkh14, align 4, !tbaa !165
  %35 = load %struct.opj_tccp*, %struct.opj_tccp** %l_ref_tccp, align 8, !tbaa !1
  %cblksty = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %35, i32 0, i32 4
  %36 = load i32, i32* %cblksty, align 4, !tbaa !167
  %37 = load %struct.opj_tccp*, %struct.opj_tccp** %l_copied_tccp, align 8, !tbaa !1
  %cblksty15 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %37, i32 0, i32 4
  store i32 %36, i32* %cblksty15, align 4, !tbaa !167
  %38 = load %struct.opj_tccp*, %struct.opj_tccp** %l_ref_tccp, align 8, !tbaa !1
  %qmfbid = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %38, i32 0, i32 5
  %39 = load i32, i32* %qmfbid, align 4, !tbaa !169
  %40 = load %struct.opj_tccp*, %struct.opj_tccp** %l_copied_tccp, align 8, !tbaa !1
  %qmfbid16 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %40, i32 0, i32 5
  store i32 %39, i32* %qmfbid16, align 4, !tbaa !169
  %41 = load %struct.opj_tccp*, %struct.opj_tccp** %l_copied_tccp, align 8, !tbaa !1
  %prcw = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %41, i32 0, i32 10
  %arraydecay = getelementptr inbounds [33 x i32], [33 x i32]* %prcw, i32 0, i32 0
  %42 = bitcast i32* %arraydecay to i8*
  %43 = load %struct.opj_tccp*, %struct.opj_tccp** %l_ref_tccp, align 8, !tbaa !1
  %prcw17 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %43, i32 0, i32 10
  %arraydecay18 = getelementptr inbounds [33 x i32], [33 x i32]* %prcw17, i32 0, i32 0
  %44 = bitcast i32* %arraydecay18 to i8*
  %45 = load i32, i32* %l_prc_size, align 4, !tbaa !5
  %conv19 = zext i32 %45 to i64
  %call = call i8* @memcpy(i8* %42, i8* %44, i64 %conv19) #9
  %46 = load %struct.opj_tccp*, %struct.opj_tccp** %l_copied_tccp, align 8, !tbaa !1
  %prch = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %46, i32 0, i32 11
  %arraydecay20 = getelementptr inbounds [33 x i32], [33 x i32]* %prch, i32 0, i32 0
  %47 = bitcast i32* %arraydecay20 to i8*
  %48 = load %struct.opj_tccp*, %struct.opj_tccp** %l_ref_tccp, align 8, !tbaa !1
  %prch21 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %48, i32 0, i32 11
  %arraydecay22 = getelementptr inbounds [33 x i32], [33 x i32]* %prch21, i32 0, i32 0
  %49 = bitcast i32* %arraydecay22 to i8*
  %50 = load i32, i32* %l_prc_size, align 4, !tbaa !5
  %conv23 = zext i32 %50 to i64
  %call24 = call i8* @memcpy(i8* %47, i8* %49, i64 %conv23) #9
  %51 = load %struct.opj_tccp*, %struct.opj_tccp** %l_copied_tccp, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %51, i32 1
  store %struct.opj_tccp* %incdec.ptr, %struct.opj_tccp** %l_copied_tccp, align 8, !tbaa !1
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %52 = load i32, i32* %i, align 4, !tbaa !5
  %inc = add i32 %52, 1
  store i32 %inc, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %53 = bitcast i32* %l_prc_size to i8*
  call void @llvm.lifetime.end(i64 4, i8* %53) #1
  %54 = bitcast %struct.opj_tccp** %l_copied_tccp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %54) #1
  %55 = bitcast %struct.opj_tccp** %l_ref_tccp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %55) #1
  %56 = bitcast %struct.opj_tcp** %l_tcp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %56) #1
  %57 = bitcast %struct.opj_cp** %l_cp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %57) #1
  %58 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %58) #1
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @opj_j2k_read_SQcd_SQcc(%struct.opj_j2k* %p_j2k, i32 %p_comp_no, i8* %p_header_data, i32* %p_header_size, %struct.opj_event_mgr* %p_manager) #0 {
entry:
  %retval = alloca i32, align 4
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %p_comp_no.addr = alloca i32, align 4
  %p_header_data.addr = alloca i8*, align 8
  %p_header_size.addr = alloca i32*, align 8
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  %l_band_no = alloca i32, align 4
  %l_cp = alloca %struct.opj_cp*, align 8
  %l_tcp = alloca %struct.opj_tcp*, align 8
  %l_tccp = alloca %struct.opj_tccp*, align 8
  %l_current_ptr = alloca i8*, align 8
  %l_tmp = alloca i32, align 4
  %l_num_band = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store i32 %p_comp_no, i32* %p_comp_no.addr, align 4, !tbaa !5
  store i8* %p_header_data, i8** %p_header_data.addr, align 8, !tbaa !1
  store i32* %p_header_size, i32** %p_header_size.addr, align 8, !tbaa !1
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %0 = bitcast i32* %l_band_no to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast %struct.opj_cp** %l_cp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #1
  store %struct.opj_cp* null, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %2 = bitcast %struct.opj_tcp** %l_tcp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #1
  store %struct.opj_tcp* null, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %3 = bitcast %struct.opj_tccp** %l_tccp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #1
  store %struct.opj_tccp* null, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %4 = bitcast i8** %l_current_ptr to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4) #1
  store i8* null, i8** %l_current_ptr, align 8, !tbaa !1
  %5 = bitcast i32* %l_tmp to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #1
  %6 = bitcast i32* %l_num_band to i8*
  call void @llvm.lifetime.start(i64 4, i8* %6) #1
  %7 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cmp = icmp ne %struct.opj_j2k* %7, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 8188, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @__PRETTY_FUNCTION__.opj_j2k_read_SQcd_SQcc, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %8, %cond.true
  %9 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %cmp1 = icmp ne %struct.opj_event_mgr* %9, null
  br i1 %cmp1, label %cond.true.2, label %cond.false.3

cond.true.2:                                      ; preds = %cond.end
  br label %cond.end.4

cond.false.3:                                     ; preds = %cond.end
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 8189, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @__PRETTY_FUNCTION__.opj_j2k_read_SQcd_SQcc, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.4

cond.end.4:                                       ; preds = %10, %cond.true.2
  %11 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  %cmp5 = icmp ne i8* %11, null
  br i1 %cmp5, label %cond.true.6, label %cond.false.7

cond.true.6:                                      ; preds = %cond.end.4
  br label %cond.end.8

cond.false.7:                                     ; preds = %cond.end.4
  call void @__assert_fail(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.52, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 8190, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @__PRETTY_FUNCTION__.opj_j2k_read_SQcd_SQcc, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.8

cond.end.8:                                       ; preds = %12, %cond.true.6
  %13 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %13, i32 0, i32 4
  store %struct.opj_cp* %m_cp, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %14 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %14, i32 0, i32 1
  %m_decoder = bitcast %union.anon* %m_specific_param to %struct.opj_j2k_dec*
  %m_state = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder, i32 0, i32 0
  %15 = load i32, i32* %m_state, align 4, !tbaa !23
  %cmp9 = icmp eq i32 %15, 16
  br i1 %cmp9, label %cond.true.10, label %cond.false.11

cond.true.10:                                     ; preds = %cond.end.8
  %16 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %16, i32 0, i32 8
  %17 = load i32, i32* %m_current_tile_number, align 4, !tbaa !11
  %idxprom = zext i32 %17 to i64
  %18 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %tcps = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %18, i32 0, i32 17
  %19 = load %struct.opj_tcp*, %struct.opj_tcp** %tcps, align 8, !tbaa !16
  %arrayidx = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %19, i64 %idxprom
  br label %cond.end.14

cond.false.11:                                    ; preds = %cond.end.8
  %20 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param12 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %20, i32 0, i32 1
  %m_decoder13 = bitcast %union.anon* %m_specific_param12 to %struct.opj_j2k_dec*
  %m_default_tcp = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder13, i32 0, i32 1
  %21 = load %struct.opj_tcp*, %struct.opj_tcp** %m_default_tcp, align 8, !tbaa !39
  br label %cond.end.14

cond.end.14:                                      ; preds = %cond.false.11, %cond.true.10
  %cond = phi %struct.opj_tcp* [ %arrayidx, %cond.true.10 ], [ %21, %cond.false.11 ]
  store %struct.opj_tcp* %cond, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %22 = load i32, i32* %p_comp_no.addr, align 4, !tbaa !5
  %23 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_private_image = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %23, i32 0, i32 2
  %24 = load %struct.opj_image*, %struct.opj_image** %m_private_image, align 8, !tbaa !38
  %numcomps = getelementptr inbounds %struct.opj_image, %struct.opj_image* %24, i32 0, i32 4
  %25 = load i32, i32* %numcomps, align 4, !tbaa !45
  %cmp15 = icmp ult i32 %22, %25
  br i1 %cmp15, label %cond.true.16, label %cond.false.17

cond.true.16:                                     ; preds = %cond.end.14
  br label %cond.end.18

cond.false.17:                                    ; preds = %cond.end.14
  call void @__assert_fail(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.70, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 8199, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @__PRETTY_FUNCTION__.opj_j2k_read_SQcd_SQcc, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.18

cond.end.18:                                      ; preds = %26, %cond.true.16
  %27 = load i32, i32* %p_comp_no.addr, align 4, !tbaa !5
  %idxprom19 = zext i32 %27 to i64
  %28 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %tccps = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %28, i32 0, i32 13
  %29 = load %struct.opj_tccp*, %struct.opj_tccp** %tccps, align 8, !tbaa !48
  %arrayidx20 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %29, i64 %idxprom19
  store %struct.opj_tccp* %arrayidx20, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %30 = load i8*, i8** %p_header_data.addr, align 8, !tbaa !1
  store i8* %30, i8** %l_current_ptr, align 8, !tbaa !1
  %31 = load i32*, i32** %p_header_size.addr, align 8, !tbaa !1
  %32 = load i32, i32* %31, align 4, !tbaa !5
  %cmp21 = icmp ult i32 %32, 1
  br i1 %cmp21, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end.18
  %33 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %33, i32 1, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.71, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %cond.end.18
  %34 = load i32*, i32** %p_header_size.addr, align 8, !tbaa !1
  %35 = load i32, i32* %34, align 4, !tbaa !5
  %sub = sub i32 %35, 1
  store i32 %sub, i32* %34, align 4, !tbaa !5
  %36 = load i8*, i8** %l_current_ptr, align 8, !tbaa !1
  call void @opj_read_bytes_LE(i8* %36, i32* %l_tmp, i32 1) #7
  %37 = load i8*, i8** %l_current_ptr, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds i8, i8* %37, i32 1
  store i8* %incdec.ptr, i8** %l_current_ptr, align 8, !tbaa !1
  %38 = load i32, i32* %l_tmp, align 4, !tbaa !5
  %and = and i32 %38, 31
  %39 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %qntsty = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %39, i32 0, i32 6
  store i32 %and, i32* %qntsty, align 4, !tbaa !170
  %40 = load i32, i32* %l_tmp, align 4, !tbaa !5
  %shr = lshr i32 %40, 5
  %41 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %numgbits = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %41, i32 0, i32 8
  store i32 %shr, i32* %numgbits, align 4, !tbaa !171
  %42 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %qntsty22 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %42, i32 0, i32 6
  %43 = load i32, i32* %qntsty22, align 4, !tbaa !170
  %cmp23 = icmp eq i32 %43, 1
  br i1 %cmp23, label %if.then.24, label %if.else

if.then.24:                                       ; preds = %if.end
  store i32 1, i32* %l_num_band, align 4, !tbaa !5
  br label %if.end.35

if.else:                                          ; preds = %if.end
  %44 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %qntsty25 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %44, i32 0, i32 6
  %45 = load i32, i32* %qntsty25, align 4, !tbaa !170
  %cmp26 = icmp eq i32 %45, 0
  br i1 %cmp26, label %cond.true.27, label %cond.false.28

cond.true.27:                                     ; preds = %if.else
  %46 = load i32*, i32** %p_header_size.addr, align 8, !tbaa !1
  %47 = load i32, i32* %46, align 4, !tbaa !5
  br label %cond.end.29

cond.false.28:                                    ; preds = %if.else
  %48 = load i32*, i32** %p_header_size.addr, align 8, !tbaa !1
  %49 = load i32, i32* %48, align 4, !tbaa !5
  %div = udiv i32 %49, 2
  br label %cond.end.29

cond.end.29:                                      ; preds = %cond.false.28, %cond.true.27
  %cond30 = phi i32 [ %47, %cond.true.27 ], [ %div, %cond.false.28 ]
  store i32 %cond30, i32* %l_num_band, align 4, !tbaa !5
  %50 = load i32, i32* %l_num_band, align 4, !tbaa !5
  %cmp31 = icmp ugt i32 %50, 97
  br i1 %cmp31, label %if.then.32, label %if.end.34

if.then.32:                                       ; preds = %cond.end.29
  %51 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %52 = load i32, i32* %l_num_band, align 4, !tbaa !5
  %call33 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %51, i32 2, i8* getelementptr inbounds ([216 x i8], [216 x i8]* @.str.72, i32 0, i32 0), i32 %52, i32 97, i32 97) #7
  br label %if.end.34

if.end.34:                                        ; preds = %if.then.32, %cond.end.29
  br label %if.end.35

if.end.35:                                        ; preds = %if.end.34, %if.then.24
  %53 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %qntsty36 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %53, i32 0, i32 6
  %54 = load i32, i32* %qntsty36, align 4, !tbaa !170
  %cmp37 = icmp eq i32 %54, 0
  br i1 %cmp37, label %if.then.38, label %if.else.51

if.then.38:                                       ; preds = %if.end.35
  store i32 0, i32* %l_band_no, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then.38
  %55 = load i32, i32* %l_band_no, align 4, !tbaa !5
  %56 = load i32, i32* %l_num_band, align 4, !tbaa !5
  %cmp39 = icmp ult i32 %55, %56
  br i1 %cmp39, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %57 = load i8*, i8** %l_current_ptr, align 8, !tbaa !1
  call void @opj_read_bytes_LE(i8* %57, i32* %l_tmp, i32 1) #7
  %58 = load i8*, i8** %l_current_ptr, align 8, !tbaa !1
  %incdec.ptr40 = getelementptr inbounds i8, i8* %58, i32 1
  store i8* %incdec.ptr40, i8** %l_current_ptr, align 8, !tbaa !1
  %59 = load i32, i32* %l_band_no, align 4, !tbaa !5
  %cmp41 = icmp ult i32 %59, 97
  br i1 %cmp41, label %if.then.42, label %if.end.49

if.then.42:                                       ; preds = %for.body
  %60 = load i32, i32* %l_tmp, align 4, !tbaa !5
  %shr43 = lshr i32 %60, 3
  %61 = load i32, i32* %l_band_no, align 4, !tbaa !5
  %idxprom44 = zext i32 %61 to i64
  %62 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %stepsizes = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %62, i32 0, i32 7
  %arrayidx45 = getelementptr inbounds [97 x %struct.opj_stepsize], [97 x %struct.opj_stepsize]* %stepsizes, i32 0, i64 %idxprom44
  %expn = getelementptr inbounds %struct.opj_stepsize, %struct.opj_stepsize* %arrayidx45, i32 0, i32 0
  store i32 %shr43, i32* %expn, align 4, !tbaa !221
  %63 = load i32, i32* %l_band_no, align 4, !tbaa !5
  %idxprom46 = zext i32 %63 to i64
  %64 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %stepsizes47 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %64, i32 0, i32 7
  %arrayidx48 = getelementptr inbounds [97 x %struct.opj_stepsize], [97 x %struct.opj_stepsize]* %stepsizes47, i32 0, i64 %idxprom46
  %mant = getelementptr inbounds %struct.opj_stepsize, %struct.opj_stepsize* %arrayidx48, i32 0, i32 1
  store i32 0, i32* %mant, align 4, !tbaa !219
  br label %if.end.49

if.end.49:                                        ; preds = %if.then.42, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.49
  %65 = load i32, i32* %l_band_no, align 4, !tbaa !5
  %inc = add i32 %65, 1
  store i32 %inc, i32* %l_band_no, align 4, !tbaa !5
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %66 = load i32*, i32** %p_header_size.addr, align 8, !tbaa !1
  %67 = load i32, i32* %66, align 4, !tbaa !5
  %68 = load i32, i32* %l_num_band, align 4, !tbaa !5
  %sub50 = sub i32 %67, %68
  %69 = load i32*, i32** %p_header_size.addr, align 8, !tbaa !1
  store i32 %sub50, i32* %69, align 4, !tbaa !5
  br label %if.end.72

if.else.51:                                       ; preds = %if.end.35
  store i32 0, i32* %l_band_no, align 4, !tbaa !5
  br label %for.cond.52

for.cond.52:                                      ; preds = %for.inc.68, %if.else.51
  %70 = load i32, i32* %l_band_no, align 4, !tbaa !5
  %71 = load i32, i32* %l_num_band, align 4, !tbaa !5
  %cmp53 = icmp ult i32 %70, %71
  br i1 %cmp53, label %for.body.54, label %for.end.70

for.body.54:                                      ; preds = %for.cond.52
  %72 = load i8*, i8** %l_current_ptr, align 8, !tbaa !1
  call void @opj_read_bytes_LE(i8* %72, i32* %l_tmp, i32 2) #7
  %73 = load i8*, i8** %l_current_ptr, align 8, !tbaa !1
  %add.ptr = getelementptr inbounds i8, i8* %73, i64 2
  store i8* %add.ptr, i8** %l_current_ptr, align 8, !tbaa !1
  %74 = load i32, i32* %l_band_no, align 4, !tbaa !5
  %cmp55 = icmp ult i32 %74, 97
  br i1 %cmp55, label %if.then.56, label %if.end.67

if.then.56:                                       ; preds = %for.body.54
  %75 = load i32, i32* %l_tmp, align 4, !tbaa !5
  %shr57 = lshr i32 %75, 11
  %76 = load i32, i32* %l_band_no, align 4, !tbaa !5
  %idxprom58 = zext i32 %76 to i64
  %77 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %stepsizes59 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %77, i32 0, i32 7
  %arrayidx60 = getelementptr inbounds [97 x %struct.opj_stepsize], [97 x %struct.opj_stepsize]* %stepsizes59, i32 0, i64 %idxprom58
  %expn61 = getelementptr inbounds %struct.opj_stepsize, %struct.opj_stepsize* %arrayidx60, i32 0, i32 0
  store i32 %shr57, i32* %expn61, align 4, !tbaa !221
  %78 = load i32, i32* %l_tmp, align 4, !tbaa !5
  %and62 = and i32 %78, 2047
  %79 = load i32, i32* %l_band_no, align 4, !tbaa !5
  %idxprom63 = zext i32 %79 to i64
  %80 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %stepsizes64 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %80, i32 0, i32 7
  %arrayidx65 = getelementptr inbounds [97 x %struct.opj_stepsize], [97 x %struct.opj_stepsize]* %stepsizes64, i32 0, i64 %idxprom63
  %mant66 = getelementptr inbounds %struct.opj_stepsize, %struct.opj_stepsize* %arrayidx65, i32 0, i32 1
  store i32 %and62, i32* %mant66, align 4, !tbaa !219
  br label %if.end.67

if.end.67:                                        ; preds = %if.then.56, %for.body.54
  br label %for.inc.68

for.inc.68:                                       ; preds = %if.end.67
  %81 = load i32, i32* %l_band_no, align 4, !tbaa !5
  %inc69 = add i32 %81, 1
  store i32 %inc69, i32* %l_band_no, align 4, !tbaa !5
  br label %for.cond.52

for.end.70:                                       ; preds = %for.cond.52
  %82 = load i32*, i32** %p_header_size.addr, align 8, !tbaa !1
  %83 = load i32, i32* %82, align 4, !tbaa !5
  %84 = load i32, i32* %l_num_band, align 4, !tbaa !5
  %mul = mul i32 2, %84
  %sub71 = sub i32 %83, %mul
  %85 = load i32*, i32** %p_header_size.addr, align 8, !tbaa !1
  store i32 %sub71, i32* %85, align 4, !tbaa !5
  br label %if.end.72

if.end.72:                                        ; preds = %for.end.70, %for.end
  %86 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %qntsty73 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %86, i32 0, i32 6
  %87 = load i32, i32* %qntsty73, align 4, !tbaa !170
  %cmp74 = icmp eq i32 %87, 1
  br i1 %cmp74, label %if.then.75, label %if.end.110

if.then.75:                                       ; preds = %if.end.72
  store i32 1, i32* %l_band_no, align 4, !tbaa !5
  br label %for.cond.76

for.cond.76:                                      ; preds = %for.inc.107, %if.then.75
  %88 = load i32, i32* %l_band_no, align 4, !tbaa !5
  %cmp77 = icmp ult i32 %88, 97
  br i1 %cmp77, label %for.body.78, label %for.end.109

for.body.78:                                      ; preds = %for.cond.76
  %89 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %stepsizes79 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %89, i32 0, i32 7
  %arrayidx80 = getelementptr inbounds [97 x %struct.opj_stepsize], [97 x %struct.opj_stepsize]* %stepsizes79, i32 0, i64 0
  %expn81 = getelementptr inbounds %struct.opj_stepsize, %struct.opj_stepsize* %arrayidx80, i32 0, i32 0
  %90 = load i32, i32* %expn81, align 4, !tbaa !221
  %91 = load i32, i32* %l_band_no, align 4, !tbaa !5
  %sub82 = sub i32 %91, 1
  %div83 = udiv i32 %sub82, 3
  %sub84 = sub i32 %90, %div83
  %cmp85 = icmp ugt i32 %sub84, 0
  br i1 %cmp85, label %cond.true.86, label %cond.false.93

cond.true.86:                                     ; preds = %for.body.78
  %92 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %stepsizes87 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %92, i32 0, i32 7
  %arrayidx88 = getelementptr inbounds [97 x %struct.opj_stepsize], [97 x %struct.opj_stepsize]* %stepsizes87, i32 0, i64 0
  %expn89 = getelementptr inbounds %struct.opj_stepsize, %struct.opj_stepsize* %arrayidx88, i32 0, i32 0
  %93 = load i32, i32* %expn89, align 4, !tbaa !221
  %94 = load i32, i32* %l_band_no, align 4, !tbaa !5
  %sub90 = sub i32 %94, 1
  %div91 = udiv i32 %sub90, 3
  %sub92 = sub i32 %93, %div91
  br label %cond.end.94

cond.false.93:                                    ; preds = %for.body.78
  br label %cond.end.94

cond.end.94:                                      ; preds = %cond.false.93, %cond.true.86
  %cond95 = phi i32 [ %sub92, %cond.true.86 ], [ 0, %cond.false.93 ]
  %95 = load i32, i32* %l_band_no, align 4, !tbaa !5
  %idxprom96 = zext i32 %95 to i64
  %96 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %stepsizes97 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %96, i32 0, i32 7
  %arrayidx98 = getelementptr inbounds [97 x %struct.opj_stepsize], [97 x %struct.opj_stepsize]* %stepsizes97, i32 0, i64 %idxprom96
  %expn99 = getelementptr inbounds %struct.opj_stepsize, %struct.opj_stepsize* %arrayidx98, i32 0, i32 0
  store i32 %cond95, i32* %expn99, align 4, !tbaa !221
  %97 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %stepsizes100 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %97, i32 0, i32 7
  %arrayidx101 = getelementptr inbounds [97 x %struct.opj_stepsize], [97 x %struct.opj_stepsize]* %stepsizes100, i32 0, i64 0
  %mant102 = getelementptr inbounds %struct.opj_stepsize, %struct.opj_stepsize* %arrayidx101, i32 0, i32 1
  %98 = load i32, i32* %mant102, align 4, !tbaa !219
  %99 = load i32, i32* %l_band_no, align 4, !tbaa !5
  %idxprom103 = zext i32 %99 to i64
  %100 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %stepsizes104 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %100, i32 0, i32 7
  %arrayidx105 = getelementptr inbounds [97 x %struct.opj_stepsize], [97 x %struct.opj_stepsize]* %stepsizes104, i32 0, i64 %idxprom103
  %mant106 = getelementptr inbounds %struct.opj_stepsize, %struct.opj_stepsize* %arrayidx105, i32 0, i32 1
  store i32 %98, i32* %mant106, align 4, !tbaa !219
  br label %for.inc.107

for.inc.107:                                      ; preds = %cond.end.94
  %101 = load i32, i32* %l_band_no, align 4, !tbaa !5
  %inc108 = add i32 %101, 1
  store i32 %inc108, i32* %l_band_no, align 4, !tbaa !5
  br label %for.cond.76

for.end.109:                                      ; preds = %for.cond.76
  br label %if.end.110

if.end.110:                                       ; preds = %for.end.109, %if.end.72
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.110, %if.then
  %102 = bitcast i32* %l_num_band to i8*
  call void @llvm.lifetime.end(i64 4, i8* %102) #1
  %103 = bitcast i32* %l_tmp to i8*
  call void @llvm.lifetime.end(i64 4, i8* %103) #1
  %104 = bitcast i8** %l_current_ptr to i8*
  call void @llvm.lifetime.end(i64 8, i8* %104) #1
  %105 = bitcast %struct.opj_tccp** %l_tccp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %105) #1
  %106 = bitcast %struct.opj_tcp** %l_tcp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %106) #1
  %107 = bitcast %struct.opj_cp** %l_cp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %107) #1
  %108 = bitcast i32* %l_band_no to i8*
  call void @llvm.lifetime.end(i64 4, i8* %108) #1
  %109 = load i32, i32* %retval
  ret i32 %109
}

; Function Attrs: nounwind uwtable
define internal void @opj_j2k_copy_tile_quantization_parameters(%struct.opj_j2k* %p_j2k) #0 {
entry:
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %i = alloca i32, align 4
  %l_cp = alloca %struct.opj_cp*, align 8
  %l_tcp = alloca %struct.opj_tcp*, align 8
  %l_ref_tccp = alloca %struct.opj_tccp*, align 8
  %l_copied_tccp = alloca %struct.opj_tccp*, align 8
  %l_size = alloca i32, align 4
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %0 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast %struct.opj_cp** %l_cp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #1
  store %struct.opj_cp* null, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %2 = bitcast %struct.opj_tcp** %l_tcp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #1
  store %struct.opj_tcp* null, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %3 = bitcast %struct.opj_tccp** %l_ref_tccp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #1
  store %struct.opj_tccp* null, %struct.opj_tccp** %l_ref_tccp, align 8, !tbaa !1
  %4 = bitcast %struct.opj_tccp** %l_copied_tccp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4) #1
  store %struct.opj_tccp* null, %struct.opj_tccp** %l_copied_tccp, align 8, !tbaa !1
  %5 = bitcast i32* %l_size to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #1
  %6 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cmp = icmp ne %struct.opj_j2k* %6, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 8299, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__.opj_j2k_copy_tile_quantization_parameters, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %7, %cond.true
  %8 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %8, i32 0, i32 4
  store %struct.opj_cp* %m_cp, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %9 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %9, i32 0, i32 1
  %m_decoder = bitcast %union.anon* %m_specific_param to %struct.opj_j2k_dec*
  %m_state = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder, i32 0, i32 0
  %10 = load i32, i32* %m_state, align 4, !tbaa !23
  %cmp1 = icmp eq i32 %10, 16
  br i1 %cmp1, label %cond.true.2, label %cond.false.3

cond.true.2:                                      ; preds = %cond.end
  %11 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %11, i32 0, i32 8
  %12 = load i32, i32* %m_current_tile_number, align 4, !tbaa !11
  %idxprom = zext i32 %12 to i64
  %13 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %tcps = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %13, i32 0, i32 17
  %14 = load %struct.opj_tcp*, %struct.opj_tcp** %tcps, align 8, !tbaa !16
  %arrayidx = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %14, i64 %idxprom
  br label %cond.end.6

cond.false.3:                                     ; preds = %cond.end
  %15 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param4 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %15, i32 0, i32 1
  %m_decoder5 = bitcast %union.anon* %m_specific_param4 to %struct.opj_j2k_dec*
  %m_default_tcp = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder5, i32 0, i32 1
  %16 = load %struct.opj_tcp*, %struct.opj_tcp** %m_default_tcp, align 8, !tbaa !39
  br label %cond.end.6

cond.end.6:                                       ; preds = %cond.false.3, %cond.true.2
  %cond = phi %struct.opj_tcp* [ %arrayidx, %cond.true.2 ], [ %16, %cond.false.3 ]
  store %struct.opj_tcp* %cond, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %17 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %tccps = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %17, i32 0, i32 13
  %18 = load %struct.opj_tccp*, %struct.opj_tccp** %tccps, align 8, !tbaa !48
  %arrayidx7 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %18, i64 0
  store %struct.opj_tccp* %arrayidx7, %struct.opj_tccp** %l_ref_tccp, align 8, !tbaa !1
  %19 = load %struct.opj_tccp*, %struct.opj_tccp** %l_ref_tccp, align 8, !tbaa !1
  %add.ptr = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %19, i64 1
  store %struct.opj_tccp* %add.ptr, %struct.opj_tccp** %l_copied_tccp, align 8, !tbaa !1
  store i32 776, i32* %l_size, align 4, !tbaa !5
  store i32 1, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %cond.end.6
  %20 = load i32, i32* %i, align 4, !tbaa !5
  %21 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_private_image = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %21, i32 0, i32 2
  %22 = load %struct.opj_image*, %struct.opj_image** %m_private_image, align 8, !tbaa !38
  %numcomps = getelementptr inbounds %struct.opj_image, %struct.opj_image* %22, i32 0, i32 4
  %23 = load i32, i32* %numcomps, align 4, !tbaa !45
  %cmp8 = icmp ult i32 %20, %23
  br i1 %cmp8, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %24 = load %struct.opj_tccp*, %struct.opj_tccp** %l_ref_tccp, align 8, !tbaa !1
  %qntsty = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %24, i32 0, i32 6
  %25 = load i32, i32* %qntsty, align 4, !tbaa !170
  %26 = load %struct.opj_tccp*, %struct.opj_tccp** %l_copied_tccp, align 8, !tbaa !1
  %qntsty9 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %26, i32 0, i32 6
  store i32 %25, i32* %qntsty9, align 4, !tbaa !170
  %27 = load %struct.opj_tccp*, %struct.opj_tccp** %l_ref_tccp, align 8, !tbaa !1
  %numgbits = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %27, i32 0, i32 8
  %28 = load i32, i32* %numgbits, align 4, !tbaa !171
  %29 = load %struct.opj_tccp*, %struct.opj_tccp** %l_copied_tccp, align 8, !tbaa !1
  %numgbits10 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %29, i32 0, i32 8
  store i32 %28, i32* %numgbits10, align 4, !tbaa !171
  %30 = load %struct.opj_tccp*, %struct.opj_tccp** %l_copied_tccp, align 8, !tbaa !1
  %stepsizes = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %30, i32 0, i32 7
  %arraydecay = getelementptr inbounds [97 x %struct.opj_stepsize], [97 x %struct.opj_stepsize]* %stepsizes, i32 0, i32 0
  %31 = bitcast %struct.opj_stepsize* %arraydecay to i8*
  %32 = load %struct.opj_tccp*, %struct.opj_tccp** %l_ref_tccp, align 8, !tbaa !1
  %stepsizes11 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %32, i32 0, i32 7
  %arraydecay12 = getelementptr inbounds [97 x %struct.opj_stepsize], [97 x %struct.opj_stepsize]* %stepsizes11, i32 0, i32 0
  %33 = bitcast %struct.opj_stepsize* %arraydecay12 to i8*
  %34 = load i32, i32* %l_size, align 4, !tbaa !5
  %conv = zext i32 %34 to i64
  %call = call i8* @memcpy(i8* %31, i8* %33, i64 %conv) #9
  %35 = load %struct.opj_tccp*, %struct.opj_tccp** %l_copied_tccp, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %35, i32 1
  store %struct.opj_tccp* %incdec.ptr, %struct.opj_tccp** %l_copied_tccp, align 8, !tbaa !1
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %36 = load i32, i32* %i, align 4, !tbaa !5
  %inc = add i32 %36, 1
  store i32 %inc, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %37 = bitcast i32* %l_size to i8*
  call void @llvm.lifetime.end(i64 4, i8* %37) #1
  %38 = bitcast %struct.opj_tccp** %l_copied_tccp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %38) #1
  %39 = bitcast %struct.opj_tccp** %l_ref_tccp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %39) #1
  %40 = bitcast %struct.opj_tcp** %l_tcp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %40) #1
  %41 = bitcast %struct.opj_cp** %l_cp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %41) #1
  %42 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %42) #1
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @opj_uint_min(i32 %a, i32 %b) #5 {
entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4, !tbaa !5
  store i32 %b, i32* %b.addr, align 4, !tbaa !5
  %0 = load i32, i32* %a.addr, align 4, !tbaa !5
  %1 = load i32, i32* %b.addr, align 4, !tbaa !5
  %cmp = icmp ult i32 %0, %1
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %2 = load i32, i32* %a.addr, align 4, !tbaa !5
  br label %cond.end

cond.false:                                       ; preds = %entry
  %3 = load i32, i32* %b.addr, align 4, !tbaa !5
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %3, %cond.false ]
  ret i32 %cond
}

; Function Attrs: nounwind uwtable
define internal i32 @opj_j2k_add_mct(%struct.opj_tcp* %p_tcp, %struct.opj_image* %p_image, i32 %p_index) #0 {
entry:
  %retval = alloca i32, align 4
  %p_tcp.addr = alloca %struct.opj_tcp*, align 8
  %p_image.addr = alloca %struct.opj_image*, align 8
  %p_index.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %l_mcc_record = alloca %struct.opj_simple_mcc_decorrelation_data*, align 8
  %l_deco_array = alloca %struct.opj_mct_data*, align 8
  %l_offset_array = alloca %struct.opj_mct_data*, align 8
  %l_data_size = alloca i32, align 4
  %l_mct_size = alloca i32, align 4
  %l_offset_size = alloca i32, align 4
  %l_nb_elem = alloca i32, align 4
  %l_offset_data = alloca i32*, align 8
  %l_current_offset_data = alloca i32*, align 8
  %l_tccp = alloca %struct.opj_tccp*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.opj_tcp* %p_tcp, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  store %struct.opj_image* %p_image, %struct.opj_image** %p_image.addr, align 8, !tbaa !1
  store i32 %p_index, i32* %p_index.addr, align 4, !tbaa !5
  %0 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast %struct.opj_simple_mcc_decorrelation_data** %l_mcc_record to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #1
  %2 = bitcast %struct.opj_mct_data** %l_deco_array to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #1
  %3 = bitcast %struct.opj_mct_data** %l_offset_array to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #1
  %4 = bitcast i32* %l_data_size to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #1
  %5 = bitcast i32* %l_mct_size to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #1
  %6 = bitcast i32* %l_offset_size to i8*
  call void @llvm.lifetime.start(i64 4, i8* %6) #1
  %7 = bitcast i32* %l_nb_elem to i8*
  call void @llvm.lifetime.start(i64 4, i8* %7) #1
  %8 = bitcast i32** %l_offset_data to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8) #1
  %9 = bitcast i32** %l_current_offset_data to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9) #1
  %10 = bitcast %struct.opj_tccp** %l_tccp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %10) #1
  %11 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %cmp = icmp ne %struct.opj_tcp* %11, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 5544, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__.opj_j2k_add_mct, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %12, %cond.true
  %13 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %m_mcc_records = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %13, i32 0, i32 23
  %14 = load %struct.opj_simple_mcc_decorrelation_data*, %struct.opj_simple_mcc_decorrelation_data** %m_mcc_records, align 8, !tbaa !76
  store %struct.opj_simple_mcc_decorrelation_data* %14, %struct.opj_simple_mcc_decorrelation_data** %l_mcc_record, align 8, !tbaa !1
  store i32 0, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %cond.end
  %15 = load i32, i32* %i, align 4, !tbaa !5
  %16 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %m_nb_mcc_records = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %16, i32 0, i32 24
  %17 = load i32, i32* %m_nb_mcc_records, align 4, !tbaa !96
  %cmp1 = icmp ult i32 %15, %17
  br i1 %cmp1, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %18 = load %struct.opj_simple_mcc_decorrelation_data*, %struct.opj_simple_mcc_decorrelation_data** %l_mcc_record, align 8, !tbaa !1
  %m_index = getelementptr inbounds %struct.opj_simple_mcc_decorrelation_data, %struct.opj_simple_mcc_decorrelation_data* %18, i32 0, i32 0
  %19 = load i32, i32* %m_index, align 4, !tbaa !97
  %20 = load i32, i32* %p_index.addr, align 4, !tbaa !5
  %cmp2 = icmp eq i32 %19, %20
  br i1 %cmp2, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %for.end

if.end:                                           ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %21 = load i32, i32* %i, align 4, !tbaa !5
  %inc = add i32 %21, 1
  store i32 %inc, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.end:                                          ; preds = %if.then, %for.cond
  %22 = load i32, i32* %i, align 4, !tbaa !5
  %23 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %m_nb_mcc_records3 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %23, i32 0, i32 24
  %24 = load i32, i32* %m_nb_mcc_records3, align 4, !tbaa !96
  %cmp4 = icmp eq i32 %22, %24
  br i1 %cmp4, label %if.then.5, label %if.end.6

if.then.5:                                        ; preds = %for.end
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.6:                                         ; preds = %for.end
  %25 = load %struct.opj_simple_mcc_decorrelation_data*, %struct.opj_simple_mcc_decorrelation_data** %l_mcc_record, align 8, !tbaa !1
  %m_nb_comps = getelementptr inbounds %struct.opj_simple_mcc_decorrelation_data, %struct.opj_simple_mcc_decorrelation_data* %25, i32 0, i32 1
  %26 = load i32, i32* %m_nb_comps, align 4, !tbaa !99
  %27 = load %struct.opj_image*, %struct.opj_image** %p_image.addr, align 8, !tbaa !1
  %numcomps = getelementptr inbounds %struct.opj_image, %struct.opj_image* %27, i32 0, i32 4
  %28 = load i32, i32* %numcomps, align 4, !tbaa !45
  %cmp7 = icmp ne i32 %26, %28
  br i1 %cmp7, label %if.then.8, label %if.end.9

if.then.8:                                        ; preds = %if.end.6
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.9:                                         ; preds = %if.end.6
  %29 = load %struct.opj_simple_mcc_decorrelation_data*, %struct.opj_simple_mcc_decorrelation_data** %l_mcc_record, align 8, !tbaa !1
  %m_decorrelation_array = getelementptr inbounds %struct.opj_simple_mcc_decorrelation_data, %struct.opj_simple_mcc_decorrelation_data* %29, i32 0, i32 2
  %30 = load %struct.opj_mct_data*, %struct.opj_mct_data** %m_decorrelation_array, align 8, !tbaa !100
  store %struct.opj_mct_data* %30, %struct.opj_mct_data** %l_deco_array, align 8, !tbaa !1
  %31 = load %struct.opj_mct_data*, %struct.opj_mct_data** %l_deco_array, align 8, !tbaa !1
  %tobool = icmp ne %struct.opj_mct_data* %31, null
  br i1 %tobool, label %if.then.10, label %if.end.37

if.then.10:                                       ; preds = %if.end.9
  %32 = load %struct.opj_mct_data*, %struct.opj_mct_data** %l_deco_array, align 8, !tbaa !1
  %m_element_type = getelementptr inbounds %struct.opj_mct_data, %struct.opj_mct_data* %32, i32 0, i32 0
  %33 = load i32, i32* %m_element_type, align 4, !tbaa !94
  %idxprom = zext i32 %33 to i64
  %arrayidx = getelementptr inbounds [4 x i32], [4 x i32]* @MCT_ELEMENT_SIZE, i32 0, i64 %idxprom
  %34 = load i32, i32* %arrayidx, align 4, !tbaa !5
  %35 = load %struct.opj_image*, %struct.opj_image** %p_image.addr, align 8, !tbaa !1
  %numcomps11 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %35, i32 0, i32 4
  %36 = load i32, i32* %numcomps11, align 4, !tbaa !45
  %mul = mul i32 %34, %36
  %37 = load %struct.opj_image*, %struct.opj_image** %p_image.addr, align 8, !tbaa !1
  %numcomps12 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %37, i32 0, i32 4
  %38 = load i32, i32* %numcomps12, align 4, !tbaa !45
  %mul13 = mul i32 %mul, %38
  store i32 %mul13, i32* %l_data_size, align 4, !tbaa !5
  %39 = load %struct.opj_mct_data*, %struct.opj_mct_data** %l_deco_array, align 8, !tbaa !1
  %m_data_size = getelementptr inbounds %struct.opj_mct_data, %struct.opj_mct_data* %39, i32 0, i32 4
  %40 = load i32, i32* %m_data_size, align 4, !tbaa !95
  %41 = load i32, i32* %l_data_size, align 4, !tbaa !5
  %cmp14 = icmp ne i32 %40, %41
  br i1 %cmp14, label %if.then.15, label %if.end.16

if.then.15:                                       ; preds = %if.then.10
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.16:                                        ; preds = %if.then.10
  %42 = load %struct.opj_image*, %struct.opj_image** %p_image.addr, align 8, !tbaa !1
  %numcomps17 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %42, i32 0, i32 4
  %43 = load i32, i32* %numcomps17, align 4, !tbaa !45
  %44 = load %struct.opj_image*, %struct.opj_image** %p_image.addr, align 8, !tbaa !1
  %numcomps18 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %44, i32 0, i32 4
  %45 = load i32, i32* %numcomps18, align 4, !tbaa !45
  %mul19 = mul i32 %43, %45
  store i32 %mul19, i32* %l_nb_elem, align 4, !tbaa !5
  %46 = load i32, i32* %l_nb_elem, align 4, !tbaa !5
  %conv = zext i32 %46 to i64
  %mul20 = mul i64 %conv, 4
  %conv21 = trunc i64 %mul20 to i32
  store i32 %conv21, i32* %l_mct_size, align 4, !tbaa !5
  %47 = load i32, i32* %l_mct_size, align 4, !tbaa !5
  %conv22 = zext i32 %47 to i64
  %cmp23 = icmp uge i64 %conv22, -256
  br i1 %cmp23, label %cond.true.25, label %cond.false.26

cond.true.25:                                     ; preds = %if.end.16
  br label %cond.end.28

cond.false.26:                                    ; preds = %if.end.16
  %48 = load i32, i32* %l_mct_size, align 4, !tbaa !5
  %conv27 = zext i32 %48 to i64
  %call = call noalias i8* @malloc(i64 %conv27) #9
  br label %cond.end.28

cond.end.28:                                      ; preds = %cond.false.26, %cond.true.25
  %cond = phi i8* [ null, %cond.true.25 ], [ %call, %cond.false.26 ]
  %49 = bitcast i8* %cond to float*
  %50 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %m_mct_decoding_matrix = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %50, i32 0, i32 18
  store float* %49, float** %m_mct_decoding_matrix, align 8, !tbaa !102
  %51 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %m_mct_decoding_matrix29 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %51, i32 0, i32 18
  %52 = load float*, float** %m_mct_decoding_matrix29, align 8, !tbaa !102
  %tobool30 = icmp ne float* %52, null
  br i1 %tobool30, label %if.end.32, label %if.then.31

if.then.31:                                       ; preds = %cond.end.28
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.32:                                        ; preds = %cond.end.28
  %53 = load %struct.opj_mct_data*, %struct.opj_mct_data** %l_deco_array, align 8, !tbaa !1
  %m_element_type33 = getelementptr inbounds %struct.opj_mct_data, %struct.opj_mct_data* %53, i32 0, i32 0
  %54 = load i32, i32* %m_element_type33, align 4, !tbaa !94
  %idxprom34 = zext i32 %54 to i64
  %arrayidx35 = getelementptr inbounds [4 x void (i8*, i8*, i32)*], [4 x void (i8*, i8*, i32)*]* @j2k_mct_read_functions_to_float, i32 0, i64 %idxprom34
  %55 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %arrayidx35, align 8, !tbaa !1
  %56 = load %struct.opj_mct_data*, %struct.opj_mct_data** %l_deco_array, align 8, !tbaa !1
  %m_data = getelementptr inbounds %struct.opj_mct_data, %struct.opj_mct_data* %56, i32 0, i32 3
  %57 = load i8*, i8** %m_data, align 8, !tbaa !92
  %58 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %m_mct_decoding_matrix36 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %58, i32 0, i32 18
  %59 = load float*, float** %m_mct_decoding_matrix36, align 8, !tbaa !102
  %60 = bitcast float* %59 to i8*
  %61 = load i32, i32* %l_nb_elem, align 4, !tbaa !5
  call void %55(i8* %57, i8* %60, i32 %61) #7
  br label %if.end.37

if.end.37:                                        ; preds = %if.end.32, %if.end.9
  %62 = load %struct.opj_simple_mcc_decorrelation_data*, %struct.opj_simple_mcc_decorrelation_data** %l_mcc_record, align 8, !tbaa !1
  %m_offset_array = getelementptr inbounds %struct.opj_simple_mcc_decorrelation_data, %struct.opj_simple_mcc_decorrelation_data* %62, i32 0, i32 3
  %63 = load %struct.opj_mct_data*, %struct.opj_mct_data** %m_offset_array, align 8, !tbaa !101
  store %struct.opj_mct_data* %63, %struct.opj_mct_data** %l_offset_array, align 8, !tbaa !1
  %64 = load %struct.opj_mct_data*, %struct.opj_mct_data** %l_offset_array, align 8, !tbaa !1
  %tobool38 = icmp ne %struct.opj_mct_data* %64, null
  br i1 %tobool38, label %if.then.39, label %if.end.79

if.then.39:                                       ; preds = %if.end.37
  %65 = load %struct.opj_mct_data*, %struct.opj_mct_data** %l_offset_array, align 8, !tbaa !1
  %m_element_type40 = getelementptr inbounds %struct.opj_mct_data, %struct.opj_mct_data* %65, i32 0, i32 0
  %66 = load i32, i32* %m_element_type40, align 4, !tbaa !94
  %idxprom41 = zext i32 %66 to i64
  %arrayidx42 = getelementptr inbounds [4 x i32], [4 x i32]* @MCT_ELEMENT_SIZE, i32 0, i64 %idxprom41
  %67 = load i32, i32* %arrayidx42, align 4, !tbaa !5
  %68 = load %struct.opj_image*, %struct.opj_image** %p_image.addr, align 8, !tbaa !1
  %numcomps43 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %68, i32 0, i32 4
  %69 = load i32, i32* %numcomps43, align 4, !tbaa !45
  %mul44 = mul i32 %67, %69
  store i32 %mul44, i32* %l_data_size, align 4, !tbaa !5
  %70 = load %struct.opj_mct_data*, %struct.opj_mct_data** %l_offset_array, align 8, !tbaa !1
  %m_data_size45 = getelementptr inbounds %struct.opj_mct_data, %struct.opj_mct_data* %70, i32 0, i32 4
  %71 = load i32, i32* %m_data_size45, align 4, !tbaa !95
  %72 = load i32, i32* %l_data_size, align 4, !tbaa !5
  %cmp46 = icmp ne i32 %71, %72
  br i1 %cmp46, label %if.then.48, label %if.end.49

if.then.48:                                       ; preds = %if.then.39
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.49:                                        ; preds = %if.then.39
  %73 = load %struct.opj_image*, %struct.opj_image** %p_image.addr, align 8, !tbaa !1
  %numcomps50 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %73, i32 0, i32 4
  %74 = load i32, i32* %numcomps50, align 4, !tbaa !45
  store i32 %74, i32* %l_nb_elem, align 4, !tbaa !5
  %75 = load i32, i32* %l_nb_elem, align 4, !tbaa !5
  %conv51 = zext i32 %75 to i64
  %mul52 = mul i64 %conv51, 4
  %conv53 = trunc i64 %mul52 to i32
  store i32 %conv53, i32* %l_offset_size, align 4, !tbaa !5
  %76 = load i32, i32* %l_offset_size, align 4, !tbaa !5
  %conv54 = zext i32 %76 to i64
  %cmp55 = icmp uge i64 %conv54, -256
  br i1 %cmp55, label %cond.true.57, label %cond.false.58

cond.true.57:                                     ; preds = %if.end.49
  br label %cond.end.61

cond.false.58:                                    ; preds = %if.end.49
  %77 = load i32, i32* %l_offset_size, align 4, !tbaa !5
  %conv59 = zext i32 %77 to i64
  %call60 = call noalias i8* @malloc(i64 %conv59) #9
  br label %cond.end.61

cond.end.61:                                      ; preds = %cond.false.58, %cond.true.57
  %cond62 = phi i8* [ null, %cond.true.57 ], [ %call60, %cond.false.58 ]
  %78 = bitcast i8* %cond62 to i32*
  store i32* %78, i32** %l_offset_data, align 8, !tbaa !1
  %79 = load i32*, i32** %l_offset_data, align 8, !tbaa !1
  %tobool63 = icmp ne i32* %79, null
  br i1 %tobool63, label %if.end.65, label %if.then.64

if.then.64:                                       ; preds = %cond.end.61
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.65:                                        ; preds = %cond.end.61
  %80 = load %struct.opj_mct_data*, %struct.opj_mct_data** %l_offset_array, align 8, !tbaa !1
  %m_element_type66 = getelementptr inbounds %struct.opj_mct_data, %struct.opj_mct_data* %80, i32 0, i32 0
  %81 = load i32, i32* %m_element_type66, align 4, !tbaa !94
  %idxprom67 = zext i32 %81 to i64
  %arrayidx68 = getelementptr inbounds [4 x void (i8*, i8*, i32)*], [4 x void (i8*, i8*, i32)*]* @j2k_mct_read_functions_to_int32, i32 0, i64 %idxprom67
  %82 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %arrayidx68, align 8, !tbaa !1
  %83 = load %struct.opj_mct_data*, %struct.opj_mct_data** %l_offset_array, align 8, !tbaa !1
  %m_data69 = getelementptr inbounds %struct.opj_mct_data, %struct.opj_mct_data* %83, i32 0, i32 3
  %84 = load i8*, i8** %m_data69, align 8, !tbaa !92
  %85 = load i32*, i32** %l_offset_data, align 8, !tbaa !1
  %86 = bitcast i32* %85 to i8*
  %87 = load i32, i32* %l_nb_elem, align 4, !tbaa !5
  call void %82(i8* %84, i8* %86, i32 %87) #7
  %88 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %tccps = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %88, i32 0, i32 13
  %89 = load %struct.opj_tccp*, %struct.opj_tccp** %tccps, align 8, !tbaa !48
  store %struct.opj_tccp* %89, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %90 = load i32*, i32** %l_offset_data, align 8, !tbaa !1
  store i32* %90, i32** %l_current_offset_data, align 8, !tbaa !1
  store i32 0, i32* %i, align 4, !tbaa !5
  br label %for.cond.70

for.cond.70:                                      ; preds = %for.inc.76, %if.end.65
  %91 = load i32, i32* %i, align 4, !tbaa !5
  %92 = load %struct.opj_image*, %struct.opj_image** %p_image.addr, align 8, !tbaa !1
  %numcomps71 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %92, i32 0, i32 4
  %93 = load i32, i32* %numcomps71, align 4, !tbaa !45
  %cmp72 = icmp ult i32 %91, %93
  br i1 %cmp72, label %for.body.74, label %for.end.78

for.body.74:                                      ; preds = %for.cond.70
  %94 = load i32*, i32** %l_current_offset_data, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds i32, i32* %94, i32 1
  store i32* %incdec.ptr, i32** %l_current_offset_data, align 8, !tbaa !1
  %95 = load i32, i32* %94, align 4, !tbaa !5
  %96 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %m_dc_level_shift = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %96, i32 0, i32 12
  store i32 %95, i32* %m_dc_level_shift, align 4, !tbaa !78
  %97 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %incdec.ptr75 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %97, i32 1
  store %struct.opj_tccp* %incdec.ptr75, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  br label %for.inc.76

for.inc.76:                                       ; preds = %for.body.74
  %98 = load i32, i32* %i, align 4, !tbaa !5
  %inc77 = add i32 %98, 1
  store i32 %inc77, i32* %i, align 4, !tbaa !5
  br label %for.cond.70

for.end.78:                                       ; preds = %for.cond.70
  %99 = load i32*, i32** %l_offset_data, align 8, !tbaa !1
  %100 = bitcast i32* %99 to i8*
  call void @free(i8* %100) #9
  br label %if.end.79

if.end.79:                                        ; preds = %for.end.78, %if.end.37
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.79, %if.then.64, %if.then.48, %if.then.31, %if.then.15, %if.then.8, %if.then.5
  %101 = bitcast %struct.opj_tccp** %l_tccp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %101) #1
  %102 = bitcast i32** %l_current_offset_data to i8*
  call void @llvm.lifetime.end(i64 8, i8* %102) #1
  %103 = bitcast i32** %l_offset_data to i8*
  call void @llvm.lifetime.end(i64 8, i8* %103) #1
  %104 = bitcast i32* %l_nb_elem to i8*
  call void @llvm.lifetime.end(i64 4, i8* %104) #1
  %105 = bitcast i32* %l_offset_size to i8*
  call void @llvm.lifetime.end(i64 4, i8* %105) #1
  %106 = bitcast i32* %l_mct_size to i8*
  call void @llvm.lifetime.end(i64 4, i8* %106) #1
  %107 = bitcast i32* %l_data_size to i8*
  call void @llvm.lifetime.end(i64 4, i8* %107) #1
  %108 = bitcast %struct.opj_mct_data** %l_offset_array to i8*
  call void @llvm.lifetime.end(i64 8, i8* %108) #1
  %109 = bitcast %struct.opj_mct_data** %l_deco_array to i8*
  call void @llvm.lifetime.end(i64 8, i8* %109) #1
  %110 = bitcast %struct.opj_simple_mcc_decorrelation_data** %l_mcc_record to i8*
  call void @llvm.lifetime.end(i64 8, i8* %110) #1
  %111 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %111) #1
  %112 = load i32, i32* %retval
  ret i32 %112
}

declare i32 @opj_procedure_list_add_procedure(%struct.opj_procedure_list*, void ()*) #3

; Function Attrs: nounwind uwtable
define internal i32 @opj_j2k_read_header_procedure(%struct.opj_j2k* %p_j2k, %struct.opj_stream_private* %p_stream, %struct.opj_event_mgr* %p_manager) #0 {
entry:
  %retval = alloca i32, align 4
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %p_stream.addr = alloca %struct.opj_stream_private*, align 8
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  %l_current_marker = alloca i32, align 4
  %l_marker_size = alloca i32, align 4
  %l_marker_handler = alloca %struct.opj_dec_memory_marker_handler*, align 8
  %cleanup.dest.slot = alloca i32
  %new_header_data = alloca i8*, align 8
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store %struct.opj_stream_private* %p_stream, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %0 = bitcast i32* %l_current_marker to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast i32* %l_marker_size to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = bitcast %struct.opj_dec_memory_marker_handler** %l_marker_handler to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #1
  store %struct.opj_dec_memory_marker_handler* null, %struct.opj_dec_memory_marker_handler** %l_marker_handler, align 8, !tbaa !1
  %3 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %cmp = icmp ne %struct.opj_stream_private* %3, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 6537, i8* getelementptr inbounds ([95 x i8], [95 x i8]* @__PRETTY_FUNCTION__.opj_j2k_read_header_procedure, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %4, %cond.true
  %5 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cmp1 = icmp ne %struct.opj_j2k* %5, null
  br i1 %cmp1, label %cond.true.2, label %cond.false.3

cond.true.2:                                      ; preds = %cond.end
  br label %cond.end.4

cond.false.3:                                     ; preds = %cond.end
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 6538, i8* getelementptr inbounds ([95 x i8], [95 x i8]* @__PRETTY_FUNCTION__.opj_j2k_read_header_procedure, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.4

cond.end.4:                                       ; preds = %6, %cond.true.2
  %7 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %cmp5 = icmp ne %struct.opj_event_mgr* %7, null
  br i1 %cmp5, label %cond.true.6, label %cond.false.7

cond.true.6:                                      ; preds = %cond.end.4
  br label %cond.end.8

cond.false.7:                                     ; preds = %cond.end.4
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 6539, i8* getelementptr inbounds ([95 x i8], [95 x i8]* @__PRETTY_FUNCTION__.opj_j2k_read_header_procedure, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.8

cond.end.8:                                       ; preds = %8, %cond.true.6
  %9 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %9, i32 0, i32 1
  %m_decoder = bitcast %union.anon* %m_specific_param to %struct.opj_j2k_dec*
  %m_state = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder, i32 0, i32 0
  store i32 1, i32* %m_state, align 4, !tbaa !23
  %10 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %11 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %12 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call = call i32 @opj_j2k_read_soc(%struct.opj_j2k* %10, %struct.opj_stream_private* %11, %struct.opj_event_mgr* %12) #7
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %cond.end.8
  %13 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call9 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %13, i32 1, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.117, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.142

if.end:                                           ; preds = %cond.end.8
  %14 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %15 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param10 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %15, i32 0, i32 1
  %m_decoder11 = bitcast %union.anon* %m_specific_param10 to %struct.opj_j2k_dec*
  %m_header_data = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder11, i32 0, i32 2
  %16 = load i8*, i8** %m_header_data, align 8, !tbaa !115
  %17 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call12 = call i64 @opj_stream_read_data(%struct.opj_stream_private* %14, i8* %16, i64 2, %struct.opj_event_mgr* %17) #7
  %cmp13 = icmp ne i64 %call12, 2
  br i1 %cmp13, label %if.then.14, label %if.end.16

if.then.14:                                       ; preds = %if.end
  %18 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call15 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %18, i32 1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.142

if.end.16:                                        ; preds = %if.end
  %19 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param17 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %19, i32 0, i32 1
  %m_decoder18 = bitcast %union.anon* %m_specific_param17 to %struct.opj_j2k_dec*
  %m_header_data19 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder18, i32 0, i32 2
  %20 = load i8*, i8** %m_header_data19, align 8, !tbaa !115
  call void @opj_read_bytes_LE(i8* %20, i32* %l_current_marker, i32 2) #7
  br label %while.cond

while.cond:                                       ; preds = %if.end.129, %if.end.16
  %21 = load i32, i32* %l_current_marker, align 4, !tbaa !5
  %cmp20 = icmp ne i32 %21, 65424
  br i1 %cmp20, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %22 = load i32, i32* %l_current_marker, align 4, !tbaa !5
  %cmp21 = icmp ult i32 %22, 65280
  br i1 %cmp21, label %if.then.22, label %if.end.24

if.then.22:                                       ; preds = %while.body
  %23 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %24 = load i32, i32* %l_current_marker, align 4, !tbaa !5
  %call23 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %23, i32 1, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.118, i32 0, i32 0), i32 %24) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.142

if.end.24:                                        ; preds = %while.body
  %25 = load i32, i32* %l_current_marker, align 4, !tbaa !5
  %call25 = call %struct.opj_dec_memory_marker_handler* @opj_j2k_get_marker_handler(i32 %25) #7
  store %struct.opj_dec_memory_marker_handler* %call25, %struct.opj_dec_memory_marker_handler** %l_marker_handler, align 8, !tbaa !1
  %26 = load %struct.opj_dec_memory_marker_handler*, %struct.opj_dec_memory_marker_handler** %l_marker_handler, align 8, !tbaa !1
  %id = getelementptr inbounds %struct.opj_dec_memory_marker_handler, %struct.opj_dec_memory_marker_handler* %26, i32 0, i32 0
  %27 = load i32, i32* %id, align 4, !tbaa !187
  %cmp26 = icmp eq i32 %27, 0
  br i1 %cmp26, label %if.then.27, label %if.end.37

if.then.27:                                       ; preds = %if.end.24
  %28 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %29 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %30 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call28 = call i32 @opj_j2k_read_unk(%struct.opj_j2k* %28, %struct.opj_stream_private* %29, i32* %l_current_marker, %struct.opj_event_mgr* %30) #7
  %tobool29 = icmp ne i32 %call28, 0
  br i1 %tobool29, label %if.end.32, label %if.then.30

if.then.30:                                       ; preds = %if.then.27
  %31 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call31 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %31, i32 1, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.119, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.142

if.end.32:                                        ; preds = %if.then.27
  %32 = load i32, i32* %l_current_marker, align 4, !tbaa !5
  %cmp33 = icmp eq i32 %32, 65424
  br i1 %cmp33, label %if.then.34, label %if.else

if.then.34:                                       ; preds = %if.end.32
  br label %while.end

if.else:                                          ; preds = %if.end.32
  %33 = load i32, i32* %l_current_marker, align 4, !tbaa !5
  %call35 = call %struct.opj_dec_memory_marker_handler* @opj_j2k_get_marker_handler(i32 %33) #7
  store %struct.opj_dec_memory_marker_handler* %call35, %struct.opj_dec_memory_marker_handler** %l_marker_handler, align 8, !tbaa !1
  br label %if.end.36

if.end.36:                                        ; preds = %if.else
  br label %if.end.37

if.end.37:                                        ; preds = %if.end.36, %if.end.24
  %34 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param38 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %34, i32 0, i32 1
  %m_decoder39 = bitcast %union.anon* %m_specific_param38 to %struct.opj_j2k_dec*
  %m_state40 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder39, i32 0, i32 0
  %35 = load i32, i32* %m_state40, align 4, !tbaa !23
  %36 = load %struct.opj_dec_memory_marker_handler*, %struct.opj_dec_memory_marker_handler** %l_marker_handler, align 8, !tbaa !1
  %states = getelementptr inbounds %struct.opj_dec_memory_marker_handler, %struct.opj_dec_memory_marker_handler* %36, i32 0, i32 1
  %37 = load i32, i32* %states, align 4, !tbaa !184
  %and = and i32 %35, %37
  %tobool41 = icmp ne i32 %and, 0
  br i1 %tobool41, label %if.end.44, label %if.then.42

if.then.42:                                       ; preds = %if.end.37
  %38 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call43 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %38, i32 1, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.8, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.142

if.end.44:                                        ; preds = %if.end.37
  %39 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %40 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param45 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %40, i32 0, i32 1
  %m_decoder46 = bitcast %union.anon* %m_specific_param45 to %struct.opj_j2k_dec*
  %m_header_data47 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder46, i32 0, i32 2
  %41 = load i8*, i8** %m_header_data47, align 8, !tbaa !115
  %42 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call48 = call i64 @opj_stream_read_data(%struct.opj_stream_private* %39, i8* %41, i64 2, %struct.opj_event_mgr* %42) #7
  %cmp49 = icmp ne i64 %call48, 2
  br i1 %cmp49, label %if.then.50, label %if.end.52

if.then.50:                                       ; preds = %if.end.44
  %43 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call51 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %43, i32 1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.142

if.end.52:                                        ; preds = %if.end.44
  %44 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param53 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %44, i32 0, i32 1
  %m_decoder54 = bitcast %union.anon* %m_specific_param53 to %struct.opj_j2k_dec*
  %m_header_data55 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder54, i32 0, i32 2
  %45 = load i8*, i8** %m_header_data55, align 8, !tbaa !115
  call void @opj_read_bytes_LE(i8* %45, i32* %l_marker_size, i32 2) #7
  %46 = load i32, i32* %l_marker_size, align 4, !tbaa !5
  %sub = sub i32 %46, 2
  store i32 %sub, i32* %l_marker_size, align 4, !tbaa !5
  %47 = load i32, i32* %l_marker_size, align 4, !tbaa !5
  %48 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param56 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %48, i32 0, i32 1
  %m_decoder57 = bitcast %union.anon* %m_specific_param56 to %struct.opj_j2k_dec*
  %m_header_data_size = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder57, i32 0, i32 3
  %49 = load i32, i32* %m_header_data_size, align 4, !tbaa !116
  %cmp58 = icmp ugt i32 %47, %49
  br i1 %cmp58, label %if.then.59, label %if.end.89

if.then.59:                                       ; preds = %if.end.52
  %50 = bitcast i8** %new_header_data to i8*
  call void @llvm.lifetime.start(i64 8, i8* %50) #1
  %51 = load i32, i32* %l_marker_size, align 4, !tbaa !5
  %conv = zext i32 %51 to i64
  %cmp60 = icmp uge i64 %conv, -256
  br i1 %cmp60, label %cond.true.62, label %cond.false.63

cond.true.62:                                     ; preds = %if.then.59
  br label %cond.end.69

cond.false.63:                                    ; preds = %if.then.59
  %52 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param64 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %52, i32 0, i32 1
  %m_decoder65 = bitcast %union.anon* %m_specific_param64 to %struct.opj_j2k_dec*
  %m_header_data66 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder65, i32 0, i32 2
  %53 = load i8*, i8** %m_header_data66, align 8, !tbaa !115
  %54 = load i32, i32* %l_marker_size, align 4, !tbaa !5
  %conv67 = zext i32 %54 to i64
  %call68 = call i8* @realloc(i8* %53, i64 %conv67) #9
  br label %cond.end.69

cond.end.69:                                      ; preds = %cond.false.63, %cond.true.62
  %cond = phi i8* [ null, %cond.true.62 ], [ %call68, %cond.false.63 ]
  store i8* %cond, i8** %new_header_data, align 8, !tbaa !1
  %55 = load i8*, i8** %new_header_data, align 8, !tbaa !1
  %tobool70 = icmp ne i8* %55, null
  br i1 %tobool70, label %if.end.82, label %if.then.71

if.then.71:                                       ; preds = %cond.end.69
  %56 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param72 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %56, i32 0, i32 1
  %m_decoder73 = bitcast %union.anon* %m_specific_param72 to %struct.opj_j2k_dec*
  %m_header_data74 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder73, i32 0, i32 2
  %57 = load i8*, i8** %m_header_data74, align 8, !tbaa !115
  call void @free(i8* %57) #9
  %58 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param75 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %58, i32 0, i32 1
  %m_decoder76 = bitcast %union.anon* %m_specific_param75 to %struct.opj_j2k_dec*
  %m_header_data77 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder76, i32 0, i32 2
  store i8* null, i8** %m_header_data77, align 8, !tbaa !115
  %59 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param78 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %59, i32 0, i32 1
  %m_decoder79 = bitcast %union.anon* %m_specific_param78 to %struct.opj_j2k_dec*
  %m_header_data_size80 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder79, i32 0, i32 3
  store i32 0, i32* %m_header_data_size80, align 4, !tbaa !116
  %60 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call81 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %60, i32 1, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.9, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.82:                                        ; preds = %cond.end.69
  %61 = load i8*, i8** %new_header_data, align 8, !tbaa !1
  %62 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param83 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %62, i32 0, i32 1
  %m_decoder84 = bitcast %union.anon* %m_specific_param83 to %struct.opj_j2k_dec*
  %m_header_data85 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder84, i32 0, i32 2
  store i8* %61, i8** %m_header_data85, align 8, !tbaa !115
  %63 = load i32, i32* %l_marker_size, align 4, !tbaa !5
  %64 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param86 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %64, i32 0, i32 1
  %m_decoder87 = bitcast %union.anon* %m_specific_param86 to %struct.opj_j2k_dec*
  %m_header_data_size88 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder87, i32 0, i32 3
  store i32 %63, i32* %m_header_data_size88, align 4, !tbaa !116
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.82, %if.then.71
  %65 = bitcast i8** %new_header_data to i8*
  call void @llvm.lifetime.end(i64 8, i8* %65) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.142 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.89

if.end.89:                                        ; preds = %cleanup.cont, %if.end.52
  %66 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %67 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param90 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %67, i32 0, i32 1
  %m_decoder91 = bitcast %union.anon* %m_specific_param90 to %struct.opj_j2k_dec*
  %m_header_data92 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder91, i32 0, i32 2
  %68 = load i8*, i8** %m_header_data92, align 8, !tbaa !115
  %69 = load i32, i32* %l_marker_size, align 4, !tbaa !5
  %conv93 = zext i32 %69 to i64
  %70 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call94 = call i64 @opj_stream_read_data(%struct.opj_stream_private* %66, i8* %68, i64 %conv93, %struct.opj_event_mgr* %70) #7
  %71 = load i32, i32* %l_marker_size, align 4, !tbaa !5
  %conv95 = zext i32 %71 to i64
  %cmp96 = icmp ne i64 %call94, %conv95
  br i1 %cmp96, label %if.then.98, label %if.end.100

if.then.98:                                       ; preds = %if.end.89
  %72 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call99 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %72, i32 1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.142

if.end.100:                                       ; preds = %if.end.89
  %73 = load %struct.opj_dec_memory_marker_handler*, %struct.opj_dec_memory_marker_handler** %l_marker_handler, align 8, !tbaa !1
  %handler = getelementptr inbounds %struct.opj_dec_memory_marker_handler, %struct.opj_dec_memory_marker_handler* %73, i32 0, i32 2
  %74 = load i32 (%struct.opj_j2k*, i8*, i32, %struct.opj_event_mgr*)*, i32 (%struct.opj_j2k*, i8*, i32, %struct.opj_event_mgr*)** %handler, align 8, !tbaa !186
  %75 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %76 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param101 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %76, i32 0, i32 1
  %m_decoder102 = bitcast %union.anon* %m_specific_param101 to %struct.opj_j2k_dec*
  %m_header_data103 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder102, i32 0, i32 2
  %77 = load i8*, i8** %m_header_data103, align 8, !tbaa !115
  %78 = load i32, i32* %l_marker_size, align 4, !tbaa !5
  %79 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call104 = call i32 %74(%struct.opj_j2k* %75, i8* %77, i32 %78, %struct.opj_event_mgr* %79) #7
  %tobool105 = icmp ne i32 %call104, 0
  br i1 %tobool105, label %if.end.108, label %if.then.106

if.then.106:                                      ; preds = %if.end.100
  %80 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call107 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %80, i32 1, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.120, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.142

if.end.108:                                       ; preds = %if.end.100
  %81 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cstr_index = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %81, i32 0, i32 7
  %82 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index, align 8, !tbaa !29
  %83 = load %struct.opj_dec_memory_marker_handler*, %struct.opj_dec_memory_marker_handler** %l_marker_handler, align 8, !tbaa !1
  %id109 = getelementptr inbounds %struct.opj_dec_memory_marker_handler, %struct.opj_dec_memory_marker_handler* %83, i32 0, i32 0
  %84 = load i32, i32* %id109, align 4, !tbaa !187
  %85 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %call110 = call i64 @opj_stream_tell(%struct.opj_stream_private* %85) #7
  %conv111 = trunc i64 %call110 to i32
  %86 = load i32, i32* %l_marker_size, align 4, !tbaa !5
  %sub112 = sub i32 %conv111, %86
  %sub113 = sub i32 %sub112, 4
  %conv114 = zext i32 %sub113 to i64
  %87 = load i32, i32* %l_marker_size, align 4, !tbaa !5
  %add = add i32 %87, 4
  %call115 = call i32 @opj_j2k_add_mhmarker(%struct.opj_codestream_index* %82, i32 %84, i64 %conv114, i32 %add) #7
  %cmp116 = icmp eq i32 0, %call115
  br i1 %cmp116, label %if.then.118, label %if.end.120

if.then.118:                                      ; preds = %if.end.108
  %88 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call119 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %88, i32 1, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.121, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.142

if.end.120:                                       ; preds = %if.end.108
  %89 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %90 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param121 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %90, i32 0, i32 1
  %m_decoder122 = bitcast %union.anon* %m_specific_param121 to %struct.opj_j2k_dec*
  %m_header_data123 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder122, i32 0, i32 2
  %91 = load i8*, i8** %m_header_data123, align 8, !tbaa !115
  %92 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call124 = call i64 @opj_stream_read_data(%struct.opj_stream_private* %89, i8* %91, i64 2, %struct.opj_event_mgr* %92) #7
  %cmp125 = icmp ne i64 %call124, 2
  br i1 %cmp125, label %if.then.127, label %if.end.129

if.then.127:                                      ; preds = %if.end.120
  %93 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call128 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %93, i32 1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.142

if.end.129:                                       ; preds = %if.end.120
  %94 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param130 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %94, i32 0, i32 1
  %m_decoder131 = bitcast %union.anon* %m_specific_param130 to %struct.opj_j2k_dec*
  %m_header_data132 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder131, i32 0, i32 2
  %95 = load i8*, i8** %m_header_data132, align 8, !tbaa !115
  call void @opj_read_bytes_LE(i8* %95, i32* %l_current_marker, i32 2) #7
  br label %while.cond

while.end:                                        ; preds = %if.then.34, %while.cond
  %96 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call133 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %96, i32 4, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.122, i32 0, i32 0)) #7
  %97 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %call134 = call i64 @opj_stream_tell(%struct.opj_stream_private* %97) #7
  %conv135 = trunc i64 %call134 to i32
  %sub136 = sub i32 %conv135, 2
  %conv137 = zext i32 %sub136 to i64
  %98 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cstr_index138 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %98, i32 0, i32 7
  %99 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index138, align 8, !tbaa !29
  %main_head_end = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %99, i32 0, i32 1
  store i64 %conv137, i64* %main_head_end, align 8, !tbaa !223
  %100 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param139 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %100, i32 0, i32 1
  %m_decoder140 = bitcast %union.anon* %m_specific_param139 to %struct.opj_j2k_dec*
  %m_state141 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder140, i32 0, i32 0
  store i32 8, i32* %m_state141, align 4, !tbaa !23
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.142

cleanup.142:                                      ; preds = %while.end, %if.then.127, %if.then.118, %if.then.106, %if.then.98, %cleanup, %if.then.50, %if.then.42, %if.then.30, %if.then.22, %if.then.14, %if.then
  %101 = bitcast %struct.opj_dec_memory_marker_handler** %l_marker_handler to i8*
  call void @llvm.lifetime.end(i64 8, i8* %101) #1
  %102 = bitcast i32* %l_marker_size to i8*
  call void @llvm.lifetime.end(i64 4, i8* %102) #1
  %103 = bitcast i32* %l_current_marker to i8*
  call void @llvm.lifetime.end(i64 4, i8* %103) #1
  %104 = load i32, i32* %retval
  ret i32 %104
}

; Function Attrs: nounwind uwtable
define internal i32 @opj_j2k_copy_default_tcp_and_create_tcd(%struct.opj_j2k* %p_j2k, %struct.opj_stream_private* %p_stream, %struct.opj_event_mgr* %p_manager) #0 {
entry:
  %retval = alloca i32, align 4
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %p_stream.addr = alloca %struct.opj_stream_private*, align 8
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  %l_tcp = alloca %struct.opj_tcp*, align 8
  %l_default_tcp = alloca %struct.opj_tcp*, align 8
  %l_nb_tiles = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %l_current_tccp = alloca %struct.opj_tccp*, align 8
  %l_tccp_size = alloca i32, align 4
  %l_mct_size = alloca i32, align 4
  %l_image = alloca %struct.opj_image*, align 8
  %l_mcc_records_size = alloca i32, align 4
  %l_mct_records_size = alloca i32, align 4
  %l_src_mct_rec = alloca %struct.opj_mct_data*, align 8
  %l_dest_mct_rec = alloca %struct.opj_mct_data*, align 8
  %l_src_mcc_rec = alloca %struct.opj_simple_mcc_decorrelation_data*, align 8
  %l_dest_mcc_rec = alloca %struct.opj_simple_mcc_decorrelation_data*, align 8
  %l_offset = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store %struct.opj_stream_private* %p_stream, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %0 = bitcast %struct.opj_tcp** %l_tcp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  store %struct.opj_tcp* null, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %1 = bitcast %struct.opj_tcp** %l_default_tcp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #1
  store %struct.opj_tcp* null, %struct.opj_tcp** %l_default_tcp, align 8, !tbaa !1
  %2 = bitcast i32* %l_nb_tiles to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #1
  %3 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #1
  %4 = bitcast i32* %j to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #1
  %5 = bitcast %struct.opj_tccp** %l_current_tccp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5) #1
  store %struct.opj_tccp* null, %struct.opj_tccp** %l_current_tccp, align 8, !tbaa !1
  %6 = bitcast i32* %l_tccp_size to i8*
  call void @llvm.lifetime.start(i64 4, i8* %6) #1
  %7 = bitcast i32* %l_mct_size to i8*
  call void @llvm.lifetime.start(i64 4, i8* %7) #1
  %8 = bitcast %struct.opj_image** %l_image to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8) #1
  %9 = bitcast i32* %l_mcc_records_size to i8*
  call void @llvm.lifetime.start(i64 4, i8* %9) #1
  %10 = bitcast i32* %l_mct_records_size to i8*
  call void @llvm.lifetime.start(i64 4, i8* %10) #1
  %11 = bitcast %struct.opj_mct_data** %l_src_mct_rec to i8*
  call void @llvm.lifetime.start(i64 8, i8* %11) #1
  %12 = bitcast %struct.opj_mct_data** %l_dest_mct_rec to i8*
  call void @llvm.lifetime.start(i64 8, i8* %12) #1
  %13 = bitcast %struct.opj_simple_mcc_decorrelation_data** %l_src_mcc_rec to i8*
  call void @llvm.lifetime.start(i64 8, i8* %13) #1
  %14 = bitcast %struct.opj_simple_mcc_decorrelation_data** %l_dest_mcc_rec to i8*
  call void @llvm.lifetime.start(i64 8, i8* %14) #1
  %15 = bitcast i32* %l_offset to i8*
  call void @llvm.lifetime.start(i64 4, i8* %15) #1
  %16 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cmp = icmp ne %struct.opj_j2k* %16, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 6705, i8* getelementptr inbounds ([105 x i8], [105 x i8]* @__PRETTY_FUNCTION__.opj_j2k_copy_default_tcp_and_create_tcd, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %17, %cond.true
  %18 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %cmp1 = icmp ne %struct.opj_stream_private* %18, null
  br i1 %cmp1, label %cond.true.2, label %cond.false.3

cond.true.2:                                      ; preds = %cond.end
  br label %cond.end.4

cond.false.3:                                     ; preds = %cond.end
  call void @__assert_fail(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 6706, i8* getelementptr inbounds ([105 x i8], [105 x i8]* @__PRETTY_FUNCTION__.opj_j2k_copy_default_tcp_and_create_tcd, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.4

cond.end.4:                                       ; preds = %19, %cond.true.2
  %20 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %cmp5 = icmp ne %struct.opj_event_mgr* %20, null
  br i1 %cmp5, label %cond.true.6, label %cond.false.7

cond.true.6:                                      ; preds = %cond.end.4
  br label %cond.end.8

cond.false.7:                                     ; preds = %cond.end.4
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 6707, i8* getelementptr inbounds ([105 x i8], [105 x i8]* @__PRETTY_FUNCTION__.opj_j2k_copy_default_tcp_and_create_tcd, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.8

cond.end.8:                                       ; preds = %21, %cond.true.6
  %22 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_private_image = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %22, i32 0, i32 2
  %23 = load %struct.opj_image*, %struct.opj_image** %m_private_image, align 8, !tbaa !38
  store %struct.opj_image* %23, %struct.opj_image** %l_image, align 8, !tbaa !1
  %24 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %24, i32 0, i32 4
  %th = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp, i32 0, i32 7
  %25 = load i32, i32* %th, align 4, !tbaa !177
  %26 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp9 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %26, i32 0, i32 4
  %tw = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp9, i32 0, i32 6
  %27 = load i32, i32* %tw, align 4, !tbaa !176
  %mul = mul i32 %25, %27
  store i32 %mul, i32* %l_nb_tiles, align 4, !tbaa !5
  %28 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp10 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %28, i32 0, i32 4
  %tcps = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp10, i32 0, i32 17
  %29 = load %struct.opj_tcp*, %struct.opj_tcp** %tcps, align 8, !tbaa !88
  store %struct.opj_tcp* %29, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %30 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %numcomps = getelementptr inbounds %struct.opj_image, %struct.opj_image* %30, i32 0, i32 4
  %31 = load i32, i32* %numcomps, align 4, !tbaa !45
  %conv = zext i32 %31 to i64
  %mul11 = mul i64 %conv, 1080
  %conv12 = trunc i64 %mul11 to i32
  store i32 %conv12, i32* %l_tccp_size, align 4, !tbaa !5
  %32 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %32, i32 0, i32 1
  %m_decoder = bitcast %union.anon* %m_specific_param to %struct.opj_j2k_dec*
  %m_default_tcp = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder, i32 0, i32 1
  %33 = load %struct.opj_tcp*, %struct.opj_tcp** %m_default_tcp, align 8, !tbaa !39
  store %struct.opj_tcp* %33, %struct.opj_tcp** %l_default_tcp, align 8, !tbaa !1
  %34 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %numcomps13 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %34, i32 0, i32 4
  %35 = load i32, i32* %numcomps13, align 4, !tbaa !45
  %36 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %numcomps14 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %36, i32 0, i32 4
  %37 = load i32, i32* %numcomps14, align 4, !tbaa !45
  %mul15 = mul i32 %35, %37
  %conv16 = zext i32 %mul15 to i64
  %mul17 = mul i64 %conv16, 4
  %conv18 = trunc i64 %mul17 to i32
  store i32 %conv18, i32* %l_mct_size, align 4, !tbaa !5
  store i32 0, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc.147, %cond.end.8
  %38 = load i32, i32* %i, align 4, !tbaa !5
  %39 = load i32, i32* %l_nb_tiles, align 4, !tbaa !5
  %cmp19 = icmp ult i32 %38, %39
  br i1 %cmp19, label %for.body, label %for.end.149

for.body:                                         ; preds = %for.cond
  %40 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %tccps = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %40, i32 0, i32 13
  %41 = load %struct.opj_tccp*, %struct.opj_tccp** %tccps, align 8, !tbaa !48
  store %struct.opj_tccp* %41, %struct.opj_tccp** %l_current_tccp, align 8, !tbaa !1
  %42 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %43 = bitcast %struct.opj_tcp* %42 to i8*
  %44 = load %struct.opj_tcp*, %struct.opj_tcp** %l_default_tcp, align 8, !tbaa !1
  %45 = bitcast %struct.opj_tcp* %44 to i8*
  %call = call i8* @memcpy(i8* %43, i8* %45, i64 5680) #9
  %46 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %ppt = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %46, i32 0, i32 26
  %bf.load = load i8, i8* %ppt, align 8
  %bf.clear = and i8 %bf.load, -2
  store i8 %bf.clear, i8* %ppt, align 8
  %47 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %ppt_data = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %47, i32 0, i32 8
  store i8* null, i8** %ppt_data, align 8, !tbaa !87
  %48 = load %struct.opj_tccp*, %struct.opj_tccp** %l_current_tccp, align 8, !tbaa !1
  %49 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %tccps21 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %49, i32 0, i32 13
  store %struct.opj_tccp* %48, %struct.opj_tccp** %tccps21, align 8, !tbaa !48
  %50 = load %struct.opj_tcp*, %struct.opj_tcp** %l_default_tcp, align 8, !tbaa !1
  %m_mct_decoding_matrix = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %50, i32 0, i32 18
  %51 = load float*, float** %m_mct_decoding_matrix, align 8, !tbaa !102
  %tobool = icmp ne float* %51, null
  br i1 %tobool, label %if.then, label %if.end.38

if.then:                                          ; preds = %for.body
  %52 = load i32, i32* %l_mct_size, align 4, !tbaa !5
  %conv22 = zext i32 %52 to i64
  %cmp23 = icmp uge i64 %conv22, -256
  br i1 %cmp23, label %cond.true.25, label %cond.false.26

cond.true.25:                                     ; preds = %if.then
  br label %cond.end.29

cond.false.26:                                    ; preds = %if.then
  %53 = load i32, i32* %l_mct_size, align 4, !tbaa !5
  %conv27 = zext i32 %53 to i64
  %call28 = call noalias i8* @malloc(i64 %conv27) #9
  br label %cond.end.29

cond.end.29:                                      ; preds = %cond.false.26, %cond.true.25
  %cond = phi i8* [ null, %cond.true.25 ], [ %call28, %cond.false.26 ]
  %54 = bitcast i8* %cond to float*
  %55 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %m_mct_decoding_matrix30 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %55, i32 0, i32 18
  store float* %54, float** %m_mct_decoding_matrix30, align 8, !tbaa !102
  %56 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %m_mct_decoding_matrix31 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %56, i32 0, i32 18
  %57 = load float*, float** %m_mct_decoding_matrix31, align 8, !tbaa !102
  %tobool32 = icmp ne float* %57, null
  br i1 %tobool32, label %if.end, label %if.then.33

if.then.33:                                       ; preds = %cond.end.29
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %cond.end.29
  %58 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %m_mct_decoding_matrix34 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %58, i32 0, i32 18
  %59 = load float*, float** %m_mct_decoding_matrix34, align 8, !tbaa !102
  %60 = bitcast float* %59 to i8*
  %61 = load %struct.opj_tcp*, %struct.opj_tcp** %l_default_tcp, align 8, !tbaa !1
  %m_mct_decoding_matrix35 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %61, i32 0, i32 18
  %62 = load float*, float** %m_mct_decoding_matrix35, align 8, !tbaa !102
  %63 = bitcast float* %62 to i8*
  %64 = load i32, i32* %l_mct_size, align 4, !tbaa !5
  %conv36 = zext i32 %64 to i64
  %call37 = call i8* @memcpy(i8* %60, i8* %63, i64 %conv36) #9
  br label %if.end.38

if.end.38:                                        ; preds = %if.end, %for.body
  %65 = load %struct.opj_tcp*, %struct.opj_tcp** %l_default_tcp, align 8, !tbaa !1
  %m_nb_max_mct_records = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %65, i32 0, i32 22
  %66 = load i32, i32* %m_nb_max_mct_records, align 4, !tbaa !75
  %conv39 = zext i32 %66 to i64
  %mul40 = mul i64 %conv39, 32
  %conv41 = trunc i64 %mul40 to i32
  store i32 %conv41, i32* %l_mct_records_size, align 4, !tbaa !5
  %67 = load i32, i32* %l_mct_records_size, align 4, !tbaa !5
  %conv42 = zext i32 %67 to i64
  %cmp43 = icmp uge i64 %conv42, -256
  br i1 %cmp43, label %cond.true.45, label %cond.false.46

cond.true.45:                                     ; preds = %if.end.38
  br label %cond.end.49

cond.false.46:                                    ; preds = %if.end.38
  %68 = load i32, i32* %l_mct_records_size, align 4, !tbaa !5
  %conv47 = zext i32 %68 to i64
  %call48 = call noalias i8* @malloc(i64 %conv47) #9
  br label %cond.end.49

cond.end.49:                                      ; preds = %cond.false.46, %cond.true.45
  %cond50 = phi i8* [ null, %cond.true.45 ], [ %call48, %cond.false.46 ]
  %69 = bitcast i8* %cond50 to %struct.opj_mct_data*
  %70 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %m_mct_records = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %70, i32 0, i32 20
  store %struct.opj_mct_data* %69, %struct.opj_mct_data** %m_mct_records, align 8, !tbaa !74
  %71 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %m_mct_records51 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %71, i32 0, i32 20
  %72 = load %struct.opj_mct_data*, %struct.opj_mct_data** %m_mct_records51, align 8, !tbaa !74
  %tobool52 = icmp ne %struct.opj_mct_data* %72, null
  br i1 %tobool52, label %if.end.54, label %if.then.53

if.then.53:                                       ; preds = %cond.end.49
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.54:                                        ; preds = %cond.end.49
  %73 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %m_mct_records55 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %73, i32 0, i32 20
  %74 = load %struct.opj_mct_data*, %struct.opj_mct_data** %m_mct_records55, align 8, !tbaa !74
  %75 = bitcast %struct.opj_mct_data* %74 to i8*
  %76 = load %struct.opj_tcp*, %struct.opj_tcp** %l_default_tcp, align 8, !tbaa !1
  %m_mct_records56 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %76, i32 0, i32 20
  %77 = load %struct.opj_mct_data*, %struct.opj_mct_data** %m_mct_records56, align 8, !tbaa !74
  %78 = bitcast %struct.opj_mct_data* %77 to i8*
  %79 = load i32, i32* %l_mct_records_size, align 4, !tbaa !5
  %conv57 = zext i32 %79 to i64
  %call58 = call i8* @memcpy(i8* %75, i8* %78, i64 %conv57) #9
  %80 = load %struct.opj_tcp*, %struct.opj_tcp** %l_default_tcp, align 8, !tbaa !1
  %m_mct_records59 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %80, i32 0, i32 20
  %81 = load %struct.opj_mct_data*, %struct.opj_mct_data** %m_mct_records59, align 8, !tbaa !74
  store %struct.opj_mct_data* %81, %struct.opj_mct_data** %l_src_mct_rec, align 8, !tbaa !1
  %82 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %m_mct_records60 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %82, i32 0, i32 20
  %83 = load %struct.opj_mct_data*, %struct.opj_mct_data** %m_mct_records60, align 8, !tbaa !74
  store %struct.opj_mct_data* %83, %struct.opj_mct_data** %l_dest_mct_rec, align 8, !tbaa !1
  store i32 0, i32* %j, align 4, !tbaa !5
  br label %for.cond.61

for.cond.61:                                      ; preds = %for.inc, %if.end.54
  %84 = load i32, i32* %j, align 4, !tbaa !5
  %85 = load %struct.opj_tcp*, %struct.opj_tcp** %l_default_tcp, align 8, !tbaa !1
  %m_nb_mct_records = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %85, i32 0, i32 21
  %86 = load i32, i32* %m_nb_mct_records, align 4, !tbaa !89
  %cmp62 = icmp ult i32 %84, %86
  br i1 %cmp62, label %for.body.64, label %for.end

for.body.64:                                      ; preds = %for.cond.61
  %87 = load %struct.opj_mct_data*, %struct.opj_mct_data** %l_src_mct_rec, align 8, !tbaa !1
  %m_data = getelementptr inbounds %struct.opj_mct_data, %struct.opj_mct_data* %87, i32 0, i32 3
  %88 = load i8*, i8** %m_data, align 8, !tbaa !92
  %tobool65 = icmp ne i8* %88, null
  br i1 %tobool65, label %if.then.66, label %if.end.87

if.then.66:                                       ; preds = %for.body.64
  %89 = load %struct.opj_mct_data*, %struct.opj_mct_data** %l_src_mct_rec, align 8, !tbaa !1
  %m_data_size = getelementptr inbounds %struct.opj_mct_data, %struct.opj_mct_data* %89, i32 0, i32 4
  %90 = load i32, i32* %m_data_size, align 4, !tbaa !95
  %conv67 = zext i32 %90 to i64
  %cmp68 = icmp uge i64 %conv67, -256
  br i1 %cmp68, label %cond.true.70, label %cond.false.71

cond.true.70:                                     ; preds = %if.then.66
  br label %cond.end.75

cond.false.71:                                    ; preds = %if.then.66
  %91 = load %struct.opj_mct_data*, %struct.opj_mct_data** %l_src_mct_rec, align 8, !tbaa !1
  %m_data_size72 = getelementptr inbounds %struct.opj_mct_data, %struct.opj_mct_data* %91, i32 0, i32 4
  %92 = load i32, i32* %m_data_size72, align 4, !tbaa !95
  %conv73 = zext i32 %92 to i64
  %call74 = call noalias i8* @malloc(i64 %conv73) #9
  br label %cond.end.75

cond.end.75:                                      ; preds = %cond.false.71, %cond.true.70
  %cond76 = phi i8* [ null, %cond.true.70 ], [ %call74, %cond.false.71 ]
  %93 = load %struct.opj_mct_data*, %struct.opj_mct_data** %l_dest_mct_rec, align 8, !tbaa !1
  %m_data77 = getelementptr inbounds %struct.opj_mct_data, %struct.opj_mct_data* %93, i32 0, i32 3
  store i8* %cond76, i8** %m_data77, align 8, !tbaa !92
  %94 = load %struct.opj_mct_data*, %struct.opj_mct_data** %l_dest_mct_rec, align 8, !tbaa !1
  %m_data78 = getelementptr inbounds %struct.opj_mct_data, %struct.opj_mct_data* %94, i32 0, i32 3
  %95 = load i8*, i8** %m_data78, align 8, !tbaa !92
  %tobool79 = icmp ne i8* %95, null
  br i1 %tobool79, label %if.end.81, label %if.then.80

if.then.80:                                       ; preds = %cond.end.75
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.81:                                        ; preds = %cond.end.75
  %96 = load %struct.opj_mct_data*, %struct.opj_mct_data** %l_dest_mct_rec, align 8, !tbaa !1
  %m_data82 = getelementptr inbounds %struct.opj_mct_data, %struct.opj_mct_data* %96, i32 0, i32 3
  %97 = load i8*, i8** %m_data82, align 8, !tbaa !92
  %98 = load %struct.opj_mct_data*, %struct.opj_mct_data** %l_src_mct_rec, align 8, !tbaa !1
  %m_data83 = getelementptr inbounds %struct.opj_mct_data, %struct.opj_mct_data* %98, i32 0, i32 3
  %99 = load i8*, i8** %m_data83, align 8, !tbaa !92
  %100 = load %struct.opj_mct_data*, %struct.opj_mct_data** %l_src_mct_rec, align 8, !tbaa !1
  %m_data_size84 = getelementptr inbounds %struct.opj_mct_data, %struct.opj_mct_data* %100, i32 0, i32 4
  %101 = load i32, i32* %m_data_size84, align 4, !tbaa !95
  %conv85 = zext i32 %101 to i64
  %call86 = call i8* @memcpy(i8* %97, i8* %99, i64 %conv85) #9
  br label %if.end.87

if.end.87:                                        ; preds = %if.end.81, %for.body.64
  %102 = load %struct.opj_mct_data*, %struct.opj_mct_data** %l_src_mct_rec, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds %struct.opj_mct_data, %struct.opj_mct_data* %102, i32 1
  store %struct.opj_mct_data* %incdec.ptr, %struct.opj_mct_data** %l_src_mct_rec, align 8, !tbaa !1
  %103 = load %struct.opj_mct_data*, %struct.opj_mct_data** %l_dest_mct_rec, align 8, !tbaa !1
  %incdec.ptr88 = getelementptr inbounds %struct.opj_mct_data, %struct.opj_mct_data* %103, i32 1
  store %struct.opj_mct_data* %incdec.ptr88, %struct.opj_mct_data** %l_dest_mct_rec, align 8, !tbaa !1
  br label %for.inc

for.inc:                                          ; preds = %if.end.87
  %104 = load i32, i32* %j, align 4, !tbaa !5
  %inc = add i32 %104, 1
  store i32 %inc, i32* %j, align 4, !tbaa !5
  br label %for.cond.61

for.end:                                          ; preds = %for.cond.61
  %105 = load %struct.opj_tcp*, %struct.opj_tcp** %l_default_tcp, align 8, !tbaa !1
  %m_nb_max_mcc_records = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %105, i32 0, i32 25
  %106 = load i32, i32* %m_nb_max_mcc_records, align 4, !tbaa !77
  %conv89 = zext i32 %106 to i64
  %mul90 = mul i64 %conv89, 32
  %conv91 = trunc i64 %mul90 to i32
  store i32 %conv91, i32* %l_mcc_records_size, align 4, !tbaa !5
  %107 = load i32, i32* %l_mcc_records_size, align 4, !tbaa !5
  %conv92 = zext i32 %107 to i64
  %cmp93 = icmp uge i64 %conv92, -256
  br i1 %cmp93, label %cond.true.95, label %cond.false.96

cond.true.95:                                     ; preds = %for.end
  br label %cond.end.99

cond.false.96:                                    ; preds = %for.end
  %108 = load i32, i32* %l_mcc_records_size, align 4, !tbaa !5
  %conv97 = zext i32 %108 to i64
  %call98 = call noalias i8* @malloc(i64 %conv97) #9
  br label %cond.end.99

cond.end.99:                                      ; preds = %cond.false.96, %cond.true.95
  %cond100 = phi i8* [ null, %cond.true.95 ], [ %call98, %cond.false.96 ]
  %109 = bitcast i8* %cond100 to %struct.opj_simple_mcc_decorrelation_data*
  %110 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %m_mcc_records = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %110, i32 0, i32 23
  store %struct.opj_simple_mcc_decorrelation_data* %109, %struct.opj_simple_mcc_decorrelation_data** %m_mcc_records, align 8, !tbaa !76
  %111 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %m_mcc_records101 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %111, i32 0, i32 23
  %112 = load %struct.opj_simple_mcc_decorrelation_data*, %struct.opj_simple_mcc_decorrelation_data** %m_mcc_records101, align 8, !tbaa !76
  %tobool102 = icmp ne %struct.opj_simple_mcc_decorrelation_data* %112, null
  br i1 %tobool102, label %if.end.104, label %if.then.103

if.then.103:                                      ; preds = %cond.end.99
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.104:                                       ; preds = %cond.end.99
  %113 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %m_mcc_records105 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %113, i32 0, i32 23
  %114 = load %struct.opj_simple_mcc_decorrelation_data*, %struct.opj_simple_mcc_decorrelation_data** %m_mcc_records105, align 8, !tbaa !76
  %115 = bitcast %struct.opj_simple_mcc_decorrelation_data* %114 to i8*
  %116 = load %struct.opj_tcp*, %struct.opj_tcp** %l_default_tcp, align 8, !tbaa !1
  %m_mcc_records106 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %116, i32 0, i32 23
  %117 = load %struct.opj_simple_mcc_decorrelation_data*, %struct.opj_simple_mcc_decorrelation_data** %m_mcc_records106, align 8, !tbaa !76
  %118 = bitcast %struct.opj_simple_mcc_decorrelation_data* %117 to i8*
  %119 = load i32, i32* %l_mcc_records_size, align 4, !tbaa !5
  %conv107 = zext i32 %119 to i64
  %call108 = call i8* @memcpy(i8* %115, i8* %118, i64 %conv107) #9
  %120 = load %struct.opj_tcp*, %struct.opj_tcp** %l_default_tcp, align 8, !tbaa !1
  %m_mcc_records109 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %120, i32 0, i32 23
  %121 = load %struct.opj_simple_mcc_decorrelation_data*, %struct.opj_simple_mcc_decorrelation_data** %m_mcc_records109, align 8, !tbaa !76
  store %struct.opj_simple_mcc_decorrelation_data* %121, %struct.opj_simple_mcc_decorrelation_data** %l_src_mcc_rec, align 8, !tbaa !1
  %122 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %m_mcc_records110 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %122, i32 0, i32 23
  %123 = load %struct.opj_simple_mcc_decorrelation_data*, %struct.opj_simple_mcc_decorrelation_data** %m_mcc_records110, align 8, !tbaa !76
  store %struct.opj_simple_mcc_decorrelation_data* %123, %struct.opj_simple_mcc_decorrelation_data** %l_dest_mcc_rec, align 8, !tbaa !1
  store i32 0, i32* %j, align 4, !tbaa !5
  br label %for.cond.111

for.cond.111:                                     ; preds = %for.inc.140, %if.end.104
  %124 = load i32, i32* %j, align 4, !tbaa !5
  %125 = load %struct.opj_tcp*, %struct.opj_tcp** %l_default_tcp, align 8, !tbaa !1
  %m_nb_max_mcc_records112 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %125, i32 0, i32 25
  %126 = load i32, i32* %m_nb_max_mcc_records112, align 4, !tbaa !77
  %cmp113 = icmp ult i32 %124, %126
  br i1 %cmp113, label %for.body.115, label %for.end.142

for.body.115:                                     ; preds = %for.cond.111
  %127 = load %struct.opj_simple_mcc_decorrelation_data*, %struct.opj_simple_mcc_decorrelation_data** %l_src_mcc_rec, align 8, !tbaa !1
  %m_decorrelation_array = getelementptr inbounds %struct.opj_simple_mcc_decorrelation_data, %struct.opj_simple_mcc_decorrelation_data* %127, i32 0, i32 2
  %128 = load %struct.opj_mct_data*, %struct.opj_mct_data** %m_decorrelation_array, align 8, !tbaa !100
  %tobool116 = icmp ne %struct.opj_mct_data* %128, null
  br i1 %tobool116, label %if.then.117, label %if.end.123

if.then.117:                                      ; preds = %for.body.115
  %129 = load %struct.opj_simple_mcc_decorrelation_data*, %struct.opj_simple_mcc_decorrelation_data** %l_src_mcc_rec, align 8, !tbaa !1
  %m_decorrelation_array118 = getelementptr inbounds %struct.opj_simple_mcc_decorrelation_data, %struct.opj_simple_mcc_decorrelation_data* %129, i32 0, i32 2
  %130 = load %struct.opj_mct_data*, %struct.opj_mct_data** %m_decorrelation_array118, align 8, !tbaa !100
  %131 = load %struct.opj_tcp*, %struct.opj_tcp** %l_default_tcp, align 8, !tbaa !1
  %m_mct_records119 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %131, i32 0, i32 20
  %132 = load %struct.opj_mct_data*, %struct.opj_mct_data** %m_mct_records119, align 8, !tbaa !74
  %sub.ptr.lhs.cast = ptrtoint %struct.opj_mct_data* %130 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.opj_mct_data* %132 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 32
  %conv120 = trunc i64 %sub.ptr.div to i32
  store i32 %conv120, i32* %l_offset, align 4, !tbaa !5
  %133 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %m_mct_records121 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %133, i32 0, i32 20
  %134 = load %struct.opj_mct_data*, %struct.opj_mct_data** %m_mct_records121, align 8, !tbaa !74
  %135 = load i32, i32* %l_offset, align 4, !tbaa !5
  %idx.ext = zext i32 %135 to i64
  %add.ptr = getelementptr inbounds %struct.opj_mct_data, %struct.opj_mct_data* %134, i64 %idx.ext
  %136 = load %struct.opj_simple_mcc_decorrelation_data*, %struct.opj_simple_mcc_decorrelation_data** %l_dest_mcc_rec, align 8, !tbaa !1
  %m_decorrelation_array122 = getelementptr inbounds %struct.opj_simple_mcc_decorrelation_data, %struct.opj_simple_mcc_decorrelation_data* %136, i32 0, i32 2
  store %struct.opj_mct_data* %add.ptr, %struct.opj_mct_data** %m_decorrelation_array122, align 8, !tbaa !100
  br label %if.end.123

if.end.123:                                       ; preds = %if.then.117, %for.body.115
  %137 = load %struct.opj_simple_mcc_decorrelation_data*, %struct.opj_simple_mcc_decorrelation_data** %l_src_mcc_rec, align 8, !tbaa !1
  %m_offset_array = getelementptr inbounds %struct.opj_simple_mcc_decorrelation_data, %struct.opj_simple_mcc_decorrelation_data* %137, i32 0, i32 3
  %138 = load %struct.opj_mct_data*, %struct.opj_mct_data** %m_offset_array, align 8, !tbaa !101
  %tobool124 = icmp ne %struct.opj_mct_data* %138, null
  br i1 %tobool124, label %if.then.125, label %if.end.137

if.then.125:                                      ; preds = %if.end.123
  %139 = load %struct.opj_simple_mcc_decorrelation_data*, %struct.opj_simple_mcc_decorrelation_data** %l_src_mcc_rec, align 8, !tbaa !1
  %m_offset_array126 = getelementptr inbounds %struct.opj_simple_mcc_decorrelation_data, %struct.opj_simple_mcc_decorrelation_data* %139, i32 0, i32 3
  %140 = load %struct.opj_mct_data*, %struct.opj_mct_data** %m_offset_array126, align 8, !tbaa !101
  %141 = load %struct.opj_tcp*, %struct.opj_tcp** %l_default_tcp, align 8, !tbaa !1
  %m_mct_records127 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %141, i32 0, i32 20
  %142 = load %struct.opj_mct_data*, %struct.opj_mct_data** %m_mct_records127, align 8, !tbaa !74
  %sub.ptr.lhs.cast128 = ptrtoint %struct.opj_mct_data* %140 to i64
  %sub.ptr.rhs.cast129 = ptrtoint %struct.opj_mct_data* %142 to i64
  %sub.ptr.sub130 = sub i64 %sub.ptr.lhs.cast128, %sub.ptr.rhs.cast129
  %sub.ptr.div131 = sdiv exact i64 %sub.ptr.sub130, 32
  %conv132 = trunc i64 %sub.ptr.div131 to i32
  store i32 %conv132, i32* %l_offset, align 4, !tbaa !5
  %143 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %m_mct_records133 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %143, i32 0, i32 20
  %144 = load %struct.opj_mct_data*, %struct.opj_mct_data** %m_mct_records133, align 8, !tbaa !74
  %145 = load i32, i32* %l_offset, align 4, !tbaa !5
  %idx.ext134 = zext i32 %145 to i64
  %add.ptr135 = getelementptr inbounds %struct.opj_mct_data, %struct.opj_mct_data* %144, i64 %idx.ext134
  %146 = load %struct.opj_simple_mcc_decorrelation_data*, %struct.opj_simple_mcc_decorrelation_data** %l_dest_mcc_rec, align 8, !tbaa !1
  %m_offset_array136 = getelementptr inbounds %struct.opj_simple_mcc_decorrelation_data, %struct.opj_simple_mcc_decorrelation_data* %146, i32 0, i32 3
  store %struct.opj_mct_data* %add.ptr135, %struct.opj_mct_data** %m_offset_array136, align 8, !tbaa !101
  br label %if.end.137

if.end.137:                                       ; preds = %if.then.125, %if.end.123
  %147 = load %struct.opj_simple_mcc_decorrelation_data*, %struct.opj_simple_mcc_decorrelation_data** %l_src_mcc_rec, align 8, !tbaa !1
  %incdec.ptr138 = getelementptr inbounds %struct.opj_simple_mcc_decorrelation_data, %struct.opj_simple_mcc_decorrelation_data* %147, i32 1
  store %struct.opj_simple_mcc_decorrelation_data* %incdec.ptr138, %struct.opj_simple_mcc_decorrelation_data** %l_src_mcc_rec, align 8, !tbaa !1
  %148 = load %struct.opj_simple_mcc_decorrelation_data*, %struct.opj_simple_mcc_decorrelation_data** %l_dest_mcc_rec, align 8, !tbaa !1
  %incdec.ptr139 = getelementptr inbounds %struct.opj_simple_mcc_decorrelation_data, %struct.opj_simple_mcc_decorrelation_data* %148, i32 1
  store %struct.opj_simple_mcc_decorrelation_data* %incdec.ptr139, %struct.opj_simple_mcc_decorrelation_data** %l_dest_mcc_rec, align 8, !tbaa !1
  br label %for.inc.140

for.inc.140:                                      ; preds = %if.end.137
  %149 = load i32, i32* %j, align 4, !tbaa !5
  %inc141 = add i32 %149, 1
  store i32 %inc141, i32* %j, align 4, !tbaa !5
  br label %for.cond.111

for.end.142:                                      ; preds = %for.cond.111
  %150 = load %struct.opj_tccp*, %struct.opj_tccp** %l_current_tccp, align 8, !tbaa !1
  %151 = bitcast %struct.opj_tccp* %150 to i8*
  %152 = load %struct.opj_tcp*, %struct.opj_tcp** %l_default_tcp, align 8, !tbaa !1
  %tccps143 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %152, i32 0, i32 13
  %153 = load %struct.opj_tccp*, %struct.opj_tccp** %tccps143, align 8, !tbaa !48
  %154 = bitcast %struct.opj_tccp* %153 to i8*
  %155 = load i32, i32* %l_tccp_size, align 4, !tbaa !5
  %conv144 = zext i32 %155 to i64
  %call145 = call i8* @memcpy(i8* %151, i8* %154, i64 %conv144) #9
  %156 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %incdec.ptr146 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %156, i32 1
  store %struct.opj_tcp* %incdec.ptr146, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  br label %for.inc.147

for.inc.147:                                      ; preds = %for.end.142
  %157 = load i32, i32* %i, align 4, !tbaa !5
  %inc148 = add i32 %157, 1
  store i32 %inc148, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.end.149:                                      ; preds = %for.cond
  %call150 = call %struct.opj_tcd* @opj_tcd_create(i32 1) #7
  %158 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_tcd = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %158, i32 0, i32 9
  store %struct.opj_tcd* %call150, %struct.opj_tcd** %m_tcd, align 8, !tbaa !120
  %159 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_tcd151 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %159, i32 0, i32 9
  %160 = load %struct.opj_tcd*, %struct.opj_tcd** %m_tcd151, align 8, !tbaa !120
  %tobool152 = icmp ne %struct.opj_tcd* %160, null
  br i1 %tobool152, label %if.end.154, label %if.then.153

if.then.153:                                      ; preds = %for.end.149
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.154:                                       ; preds = %for.end.149
  %161 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_tcd155 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %161, i32 0, i32 9
  %162 = load %struct.opj_tcd*, %struct.opj_tcd** %m_tcd155, align 8, !tbaa !120
  %163 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %164 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp156 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %164, i32 0, i32 4
  %call157 = call i32 @opj_tcd_init(%struct.opj_tcd* %162, %struct.opj_image* %163, %struct.opj_cp* %m_cp156) #7
  %tobool158 = icmp ne i32 %call157, 0
  br i1 %tobool158, label %if.end.163, label %if.then.159

if.then.159:                                      ; preds = %if.end.154
  %165 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_tcd160 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %165, i32 0, i32 9
  %166 = load %struct.opj_tcd*, %struct.opj_tcd** %m_tcd160, align 8, !tbaa !120
  call void @opj_tcd_destroy(%struct.opj_tcd* %166) #7
  %167 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_tcd161 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %167, i32 0, i32 9
  store %struct.opj_tcd* null, %struct.opj_tcd** %m_tcd161, align 8, !tbaa !120
  %168 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call162 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %168, i32 1, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.13, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.163:                                       ; preds = %if.end.154
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.163, %if.then.159, %if.then.153, %if.then.103, %if.then.80, %if.then.53, %if.then.33
  %169 = bitcast i32* %l_offset to i8*
  call void @llvm.lifetime.end(i64 4, i8* %169) #1
  %170 = bitcast %struct.opj_simple_mcc_decorrelation_data** %l_dest_mcc_rec to i8*
  call void @llvm.lifetime.end(i64 8, i8* %170) #1
  %171 = bitcast %struct.opj_simple_mcc_decorrelation_data** %l_src_mcc_rec to i8*
  call void @llvm.lifetime.end(i64 8, i8* %171) #1
  %172 = bitcast %struct.opj_mct_data** %l_dest_mct_rec to i8*
  call void @llvm.lifetime.end(i64 8, i8* %172) #1
  %173 = bitcast %struct.opj_mct_data** %l_src_mct_rec to i8*
  call void @llvm.lifetime.end(i64 8, i8* %173) #1
  %174 = bitcast i32* %l_mct_records_size to i8*
  call void @llvm.lifetime.end(i64 4, i8* %174) #1
  %175 = bitcast i32* %l_mcc_records_size to i8*
  call void @llvm.lifetime.end(i64 4, i8* %175) #1
  %176 = bitcast %struct.opj_image** %l_image to i8*
  call void @llvm.lifetime.end(i64 8, i8* %176) #1
  %177 = bitcast i32* %l_mct_size to i8*
  call void @llvm.lifetime.end(i64 4, i8* %177) #1
  %178 = bitcast i32* %l_tccp_size to i8*
  call void @llvm.lifetime.end(i64 4, i8* %178) #1
  %179 = bitcast %struct.opj_tccp** %l_current_tccp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %179) #1
  %180 = bitcast i32* %j to i8*
  call void @llvm.lifetime.end(i64 4, i8* %180) #1
  %181 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %181) #1
  %182 = bitcast i32* %l_nb_tiles to i8*
  call void @llvm.lifetime.end(i64 4, i8* %182) #1
  %183 = bitcast %struct.opj_tcp** %l_default_tcp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %183) #1
  %184 = bitcast %struct.opj_tcp** %l_tcp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %184) #1
  %185 = load i32, i32* %retval
  ret i32 %185
}

; Function Attrs: nounwind uwtable
define internal i32 @opj_j2k_read_soc(%struct.opj_j2k* %p_j2k, %struct.opj_stream_private* %p_stream, %struct.opj_event_mgr* %p_manager) #0 {
entry:
  %retval = alloca i32, align 4
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %p_stream.addr = alloca %struct.opj_stream_private*, align 8
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  %l_data = alloca [2 x i8], align 1
  %l_marker = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store %struct.opj_stream_private* %p_stream, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %0 = bitcast [2 x i8]* %l_data to i8*
  call void @llvm.lifetime.start(i64 2, i8* %0) #1
  %1 = bitcast i32* %l_marker to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cmp = icmp ne %struct.opj_j2k* %2, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 1732, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @__PRETTY_FUNCTION__.opj_j2k_read_soc, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %3, %cond.true
  %4 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %cmp1 = icmp ne %struct.opj_event_mgr* %4, null
  br i1 %cmp1, label %cond.true.2, label %cond.false.3

cond.true.2:                                      ; preds = %cond.end
  br label %cond.end.4

cond.false.3:                                     ; preds = %cond.end
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 1733, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @__PRETTY_FUNCTION__.opj_j2k_read_soc, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.4

cond.end.4:                                       ; preds = %5, %cond.true.2
  %6 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %cmp5 = icmp ne %struct.opj_stream_private* %6, null
  br i1 %cmp5, label %cond.true.6, label %cond.false.7

cond.true.6:                                      ; preds = %cond.end.4
  br label %cond.end.8

cond.false.7:                                     ; preds = %cond.end.4
  call void @__assert_fail(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 1734, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @__PRETTY_FUNCTION__.opj_j2k_read_soc, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.8

cond.end.8:                                       ; preds = %7, %cond.true.6
  %8 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %arraydecay = getelementptr inbounds [2 x i8], [2 x i8]* %l_data, i32 0, i32 0
  %9 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call = call i64 @opj_stream_read_data(%struct.opj_stream_private* %8, i8* %arraydecay, i64 2, %struct.opj_event_mgr* %9) #7
  %cmp9 = icmp ne i64 %call, 2
  br i1 %cmp9, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end.8
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %cond.end.8
  %arraydecay10 = getelementptr inbounds [2 x i8], [2 x i8]* %l_data, i32 0, i32 0
  call void @opj_read_bytes_LE(i8* %arraydecay10, i32* %l_marker, i32 2) #7
  %10 = load i32, i32* %l_marker, align 4, !tbaa !5
  %cmp11 = icmp ne i32 %10, 65359
  br i1 %cmp11, label %if.then.12, label %if.end.13

if.then.12:                                       ; preds = %if.end
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.13:                                        ; preds = %if.end
  %11 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %11, i32 0, i32 1
  %m_decoder = bitcast %union.anon* %m_specific_param to %struct.opj_j2k_dec*
  %m_state = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder, i32 0, i32 0
  store i32 2, i32* %m_state, align 4, !tbaa !23
  %12 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %call14 = call i64 @opj_stream_tell(%struct.opj_stream_private* %12) #7
  %sub = sub nsw i64 %call14, 2
  %13 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cstr_index = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %13, i32 0, i32 7
  %14 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index, align 8, !tbaa !29
  %main_head_start = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %14, i32 0, i32 0
  store i64 %sub, i64* %main_head_start, align 8, !tbaa !222
  %15 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %16 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cstr_index15 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %16, i32 0, i32 7
  %17 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index15, align 8, !tbaa !29
  %main_head_start16 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %17, i32 0, i32 0
  %18 = load i64, i64* %main_head_start16, align 8, !tbaa !222
  %call17 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %15, i32 4, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.123, i32 0, i32 0), i64 %18) #7
  %19 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cstr_index18 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %19, i32 0, i32 7
  %20 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index18, align 8, !tbaa !29
  %21 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cstr_index19 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %21, i32 0, i32 7
  %22 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index19, align 8, !tbaa !29
  %main_head_start20 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %22, i32 0, i32 0
  %23 = load i64, i64* %main_head_start20, align 8, !tbaa !222
  %call21 = call i32 @opj_j2k_add_mhmarker(%struct.opj_codestream_index* %20, i32 65359, i64 %23, i32 2) #7
  %cmp22 = icmp eq i32 0, %call21
  br i1 %cmp22, label %if.then.23, label %if.end.25

if.then.23:                                       ; preds = %if.end.13
  %24 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call24 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %24, i32 1, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.121, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.25:                                        ; preds = %if.end.13
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.25, %if.then.23, %if.then.12, %if.then
  %25 = bitcast i32* %l_marker to i8*
  call void @llvm.lifetime.end(i64 4, i8* %25) #1
  %26 = bitcast [2 x i8]* %l_data to i8*
  call void @llvm.lifetime.end(i64 2, i8* %26) #1
  %27 = load i32, i32* %retval
  ret i32 %27
}

; Function Attrs: nounwind uwtable
define internal i32 @opj_j2k_read_unk(%struct.opj_j2k* %p_j2k, %struct.opj_stream_private* %p_stream, i32* %output_marker, %struct.opj_event_mgr* %p_manager) #0 {
entry:
  %retval = alloca i32, align 4
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %p_stream.addr = alloca %struct.opj_stream_private*, align 8
  %output_marker.addr = alloca i32*, align 8
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  %l_unknown_marker = alloca i32, align 4
  %l_marker_handler = alloca %struct.opj_dec_memory_marker_handler*, align 8
  %l_size_unk = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %res = alloca i32, align 4
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store %struct.opj_stream_private* %p_stream, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  store i32* %output_marker, i32** %output_marker.addr, align 8, !tbaa !1
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %0 = bitcast i32* %l_unknown_marker to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast %struct.opj_dec_memory_marker_handler** %l_marker_handler to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #1
  %2 = bitcast i32* %l_size_unk to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #1
  store i32 2, i32* %l_size_unk, align 4, !tbaa !5
  %3 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cmp = icmp ne %struct.opj_j2k* %3, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 4862, i8* getelementptr inbounds ([96 x i8], [96 x i8]* @__PRETTY_FUNCTION__.opj_j2k_read_unk, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %4, %cond.true
  %5 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %cmp1 = icmp ne %struct.opj_event_mgr* %5, null
  br i1 %cmp1, label %cond.true.2, label %cond.false.3

cond.true.2:                                      ; preds = %cond.end
  br label %cond.end.4

cond.false.3:                                     ; preds = %cond.end
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 4863, i8* getelementptr inbounds ([96 x i8], [96 x i8]* @__PRETTY_FUNCTION__.opj_j2k_read_unk, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.4

cond.end.4:                                       ; preds = %6, %cond.true.2
  %7 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %cmp5 = icmp ne %struct.opj_stream_private* %7, null
  br i1 %cmp5, label %cond.true.6, label %cond.false.7

cond.true.6:                                      ; preds = %cond.end.4
  br label %cond.end.8

cond.false.7:                                     ; preds = %cond.end.4
  call void @__assert_fail(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 4864, i8* getelementptr inbounds ([96 x i8], [96 x i8]* @__PRETTY_FUNCTION__.opj_j2k_read_unk, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.8

cond.end.8:                                       ; preds = %8, %cond.true.6
  %9 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %9, i32 2, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.124, i32 0, i32 0)) #7
  br label %while.cond

while.cond:                                       ; preds = %if.end.39, %cond.end.8
  br label %while.body

while.body:                                       ; preds = %while.cond
  %10 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %11 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %11, i32 0, i32 1
  %m_decoder = bitcast %union.anon* %m_specific_param to %struct.opj_j2k_dec*
  %m_header_data = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder, i32 0, i32 2
  %12 = load i8*, i8** %m_header_data, align 8, !tbaa !115
  %13 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call9 = call i64 @opj_stream_read_data(%struct.opj_stream_private* %10, i8* %12, i64 2, %struct.opj_event_mgr* %13) #7
  %cmp10 = icmp ne i64 %call9, 2
  br i1 %cmp10, label %if.then, label %if.end

if.then:                                          ; preds = %while.body
  %14 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call11 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %14, i32 1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.41

if.end:                                           ; preds = %while.body
  %15 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param12 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %15, i32 0, i32 1
  %m_decoder13 = bitcast %union.anon* %m_specific_param12 to %struct.opj_j2k_dec*
  %m_header_data14 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder13, i32 0, i32 2
  %16 = load i8*, i8** %m_header_data14, align 8, !tbaa !115
  call void @opj_read_bytes_LE(i8* %16, i32* %l_unknown_marker, i32 2) #7
  %17 = load i32, i32* %l_unknown_marker, align 4, !tbaa !5
  %cmp15 = icmp ult i32 %17, 65280
  br i1 %cmp15, label %if.end.39, label %if.then.16

if.then.16:                                       ; preds = %if.end
  %18 = load i32, i32* %l_unknown_marker, align 4, !tbaa !5
  %call17 = call %struct.opj_dec_memory_marker_handler* @opj_j2k_get_marker_handler(i32 %18) #7
  store %struct.opj_dec_memory_marker_handler* %call17, %struct.opj_dec_memory_marker_handler** %l_marker_handler, align 8, !tbaa !1
  %19 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param18 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %19, i32 0, i32 1
  %m_decoder19 = bitcast %union.anon* %m_specific_param18 to %struct.opj_j2k_dec*
  %m_state = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder19, i32 0, i32 0
  %20 = load i32, i32* %m_state, align 4, !tbaa !23
  %21 = load %struct.opj_dec_memory_marker_handler*, %struct.opj_dec_memory_marker_handler** %l_marker_handler, align 8, !tbaa !1
  %states = getelementptr inbounds %struct.opj_dec_memory_marker_handler, %struct.opj_dec_memory_marker_handler* %21, i32 0, i32 1
  %22 = load i32, i32* %states, align 4, !tbaa !184
  %and = and i32 %20, %22
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.else, label %if.then.20

if.then.20:                                       ; preds = %if.then.16
  %23 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call21 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %23, i32 1, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.8, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.41

if.else:                                          ; preds = %if.then.16
  %24 = load %struct.opj_dec_memory_marker_handler*, %struct.opj_dec_memory_marker_handler** %l_marker_handler, align 8, !tbaa !1
  %id = getelementptr inbounds %struct.opj_dec_memory_marker_handler, %struct.opj_dec_memory_marker_handler* %24, i32 0, i32 0
  %25 = load i32, i32* %id, align 4, !tbaa !187
  %cmp22 = icmp ne i32 %25, 0
  br i1 %cmp22, label %if.then.23, label %if.else.36

if.then.23:                                       ; preds = %if.else
  %26 = load %struct.opj_dec_memory_marker_handler*, %struct.opj_dec_memory_marker_handler** %l_marker_handler, align 8, !tbaa !1
  %id24 = getelementptr inbounds %struct.opj_dec_memory_marker_handler, %struct.opj_dec_memory_marker_handler* %26, i32 0, i32 0
  %27 = load i32, i32* %id24, align 4, !tbaa !187
  %cmp25 = icmp ne i32 %27, 65424
  br i1 %cmp25, label %if.then.26, label %if.end.35

if.then.26:                                       ; preds = %if.then.23
  %28 = bitcast i32* %res to i8*
  call void @llvm.lifetime.start(i64 4, i8* %28) #1
  %29 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cstr_index = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %29, i32 0, i32 7
  %30 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index, align 8, !tbaa !29
  %31 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %call27 = call i64 @opj_stream_tell(%struct.opj_stream_private* %31) #7
  %conv = trunc i64 %call27 to i32
  %32 = load i32, i32* %l_size_unk, align 4, !tbaa !5
  %sub = sub i32 %conv, %32
  %conv28 = zext i32 %sub to i64
  %33 = load i32, i32* %l_size_unk, align 4, !tbaa !5
  %call29 = call i32 @opj_j2k_add_mhmarker(%struct.opj_codestream_index* %30, i32 0, i64 %conv28, i32 %33) #7
  store i32 %call29, i32* %res, align 4, !tbaa !5
  %34 = load i32, i32* %res, align 4, !tbaa !5
  %cmp30 = icmp eq i32 %34, 0
  br i1 %cmp30, label %if.then.32, label %if.end.34

if.then.32:                                       ; preds = %if.then.26
  %35 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call33 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %35, i32 1, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.121, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.34:                                        ; preds = %if.then.26
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.34, %if.then.32
  %36 = bitcast i32* %res to i8*
  call void @llvm.lifetime.end(i64 4, i8* %36) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.41 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.35

if.end.35:                                        ; preds = %cleanup.cont, %if.then.23
  br label %while.end

if.else.36:                                       ; preds = %if.else
  %37 = load i32, i32* %l_size_unk, align 4, !tbaa !5
  %add = add i32 %37, 2
  store i32 %add, i32* %l_size_unk, align 4, !tbaa !5
  br label %if.end.37

if.end.37:                                        ; preds = %if.else.36
  br label %if.end.38

if.end.38:                                        ; preds = %if.end.37
  br label %if.end.39

if.end.39:                                        ; preds = %if.end.38, %if.end
  br label %while.cond

while.end:                                        ; preds = %if.end.35
  %38 = load %struct.opj_dec_memory_marker_handler*, %struct.opj_dec_memory_marker_handler** %l_marker_handler, align 8, !tbaa !1
  %id40 = getelementptr inbounds %struct.opj_dec_memory_marker_handler, %struct.opj_dec_memory_marker_handler* %38, i32 0, i32 0
  %39 = load i32, i32* %id40, align 4, !tbaa !187
  %40 = load i32*, i32** %output_marker.addr, align 8, !tbaa !1
  store i32 %39, i32* %40, align 4, !tbaa !5
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.41

cleanup.41:                                       ; preds = %while.end, %cleanup, %if.then.20, %if.then
  %41 = bitcast i32* %l_size_unk to i8*
  call void @llvm.lifetime.end(i64 4, i8* %41) #1
  %42 = bitcast %struct.opj_dec_memory_marker_handler** %l_marker_handler to i8*
  call void @llvm.lifetime.end(i64 8, i8* %42) #1
  %43 = bitcast i32* %l_unknown_marker to i8*
  call void @llvm.lifetime.end(i64 4, i8* %43) #1
  %44 = load i32, i32* %retval
  ret i32 %44
}

; Function Attrs: nounwind uwtable
define internal i32 @opj_j2k_add_mhmarker(%struct.opj_codestream_index* %cstr_index, i32 %type, i64 %pos, i32 %len) #0 {
entry:
  %retval = alloca i32, align 4
  %cstr_index.addr = alloca %struct.opj_codestream_index*, align 8
  %type.addr = alloca i32, align 4
  %pos.addr = alloca i64, align 8
  %len.addr = alloca i32, align 4
  %new_marker = alloca %struct.opj_marker_info*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.opj_codestream_index* %cstr_index, %struct.opj_codestream_index** %cstr_index.addr, align 8, !tbaa !1
  store i32 %type, i32* %type.addr, align 4, !tbaa !5
  store i64 %pos, i64* %pos.addr, align 8, !tbaa !135
  store i32 %len, i32* %len.addr, align 4, !tbaa !5
  %0 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index.addr, align 8, !tbaa !1
  %cmp = icmp ne %struct.opj_codestream_index* %0, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.125, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 6096, i8* getelementptr inbounds ([91 x i8], [91 x i8]* @__PRETTY_FUNCTION__.opj_j2k_add_mhmarker, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %1, %cond.true
  %2 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index.addr, align 8, !tbaa !1
  %marknum = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %2, i32 0, i32 3
  %3 = load i32, i32* %marknum, align 4, !tbaa !214
  %add = add i32 %3, 1
  %4 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index.addr, align 8, !tbaa !1
  %maxmarknum = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %4, i32 0, i32 5
  %5 = load i32, i32* %maxmarknum, align 4, !tbaa !213
  %cmp1 = icmp ugt i32 %add, %5
  br i1 %cmp1, label %if.then, label %if.end.23

if.then:                                          ; preds = %cond.end
  %6 = bitcast %struct.opj_marker_info** %new_marker to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6) #1
  %7 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index.addr, align 8, !tbaa !1
  %maxmarknum2 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %7, i32 0, i32 5
  %8 = load i32, i32* %maxmarknum2, align 4, !tbaa !213
  %conv = uitofp i32 %8 to float
  %mul = fmul float %conv, 1.000000e+00
  %conv3 = fptosi float %mul to i32
  %add4 = add nsw i32 100, %conv3
  %9 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index.addr, align 8, !tbaa !1
  %maxmarknum5 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %9, i32 0, i32 5
  store i32 %add4, i32* %maxmarknum5, align 4, !tbaa !213
  %10 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index.addr, align 8, !tbaa !1
  %maxmarknum6 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %10, i32 0, i32 5
  %11 = load i32, i32* %maxmarknum6, align 4, !tbaa !213
  %conv7 = zext i32 %11 to i64
  %mul8 = mul i64 %conv7, 24
  %cmp9 = icmp uge i64 %mul8, -256
  br i1 %cmp9, label %cond.true.11, label %cond.false.12

cond.true.11:                                     ; preds = %if.then
  br label %cond.end.16

cond.false.12:                                    ; preds = %if.then
  %12 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index.addr, align 8, !tbaa !1
  %marker = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %12, i32 0, i32 4
  %13 = load %struct.opj_marker_info*, %struct.opj_marker_info** %marker, align 8, !tbaa !182
  %14 = bitcast %struct.opj_marker_info* %13 to i8*
  %15 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index.addr, align 8, !tbaa !1
  %maxmarknum13 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %15, i32 0, i32 5
  %16 = load i32, i32* %maxmarknum13, align 4, !tbaa !213
  %conv14 = zext i32 %16 to i64
  %mul15 = mul i64 %conv14, 24
  %call = call i8* @realloc(i8* %14, i64 %mul15) #9
  br label %cond.end.16

cond.end.16:                                      ; preds = %cond.false.12, %cond.true.11
  %cond = phi i8* [ null, %cond.true.11 ], [ %call, %cond.false.12 ]
  %17 = bitcast i8* %cond to %struct.opj_marker_info*
  store %struct.opj_marker_info* %17, %struct.opj_marker_info** %new_marker, align 8, !tbaa !1
  %18 = load %struct.opj_marker_info*, %struct.opj_marker_info** %new_marker, align 8, !tbaa !1
  %tobool = icmp ne %struct.opj_marker_info* %18, null
  br i1 %tobool, label %if.end, label %if.then.17

if.then.17:                                       ; preds = %cond.end.16
  %19 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index.addr, align 8, !tbaa !1
  %marker18 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %19, i32 0, i32 4
  %20 = load %struct.opj_marker_info*, %struct.opj_marker_info** %marker18, align 8, !tbaa !182
  %21 = bitcast %struct.opj_marker_info* %20 to i8*
  call void @free(i8* %21) #9
  %22 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index.addr, align 8, !tbaa !1
  %marker19 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %22, i32 0, i32 4
  store %struct.opj_marker_info* null, %struct.opj_marker_info** %marker19, align 8, !tbaa !182
  %23 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index.addr, align 8, !tbaa !1
  %maxmarknum20 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %23, i32 0, i32 5
  store i32 0, i32* %maxmarknum20, align 4, !tbaa !213
  %24 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index.addr, align 8, !tbaa !1
  %marknum21 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %24, i32 0, i32 3
  store i32 0, i32* %marknum21, align 4, !tbaa !214
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %cond.end.16
  %25 = load %struct.opj_marker_info*, %struct.opj_marker_info** %new_marker, align 8, !tbaa !1
  %26 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index.addr, align 8, !tbaa !1
  %marker22 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %26, i32 0, i32 4
  store %struct.opj_marker_info* %25, %struct.opj_marker_info** %marker22, align 8, !tbaa !182
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then.17
  %27 = bitcast %struct.opj_marker_info** %new_marker to i8*
  call void @llvm.lifetime.end(i64 8, i8* %27) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %return
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.23

if.end.23:                                        ; preds = %cleanup.cont, %cond.end
  %28 = load i32, i32* %type.addr, align 4, !tbaa !5
  %conv24 = trunc i32 %28 to i16
  %29 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index.addr, align 8, !tbaa !1
  %marknum25 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %29, i32 0, i32 3
  %30 = load i32, i32* %marknum25, align 4, !tbaa !214
  %idxprom = zext i32 %30 to i64
  %31 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index.addr, align 8, !tbaa !1
  %marker26 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %31, i32 0, i32 4
  %32 = load %struct.opj_marker_info*, %struct.opj_marker_info** %marker26, align 8, !tbaa !182
  %arrayidx = getelementptr inbounds %struct.opj_marker_info, %struct.opj_marker_info* %32, i64 %idxprom
  %type27 = getelementptr inbounds %struct.opj_marker_info, %struct.opj_marker_info* %arrayidx, i32 0, i32 0
  store i16 %conv24, i16* %type27, align 2, !tbaa !200
  %33 = load i64, i64* %pos.addr, align 8, !tbaa !135
  %conv28 = trunc i64 %33 to i32
  %conv29 = sext i32 %conv28 to i64
  %34 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index.addr, align 8, !tbaa !1
  %marknum30 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %34, i32 0, i32 3
  %35 = load i32, i32* %marknum30, align 4, !tbaa !214
  %idxprom31 = zext i32 %35 to i64
  %36 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index.addr, align 8, !tbaa !1
  %marker32 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %36, i32 0, i32 4
  %37 = load %struct.opj_marker_info*, %struct.opj_marker_info** %marker32, align 8, !tbaa !182
  %arrayidx33 = getelementptr inbounds %struct.opj_marker_info, %struct.opj_marker_info* %37, i64 %idxprom31
  %pos34 = getelementptr inbounds %struct.opj_marker_info, %struct.opj_marker_info* %arrayidx33, i32 0, i32 1
  store i64 %conv29, i64* %pos34, align 8, !tbaa !202
  %38 = load i32, i32* %len.addr, align 4, !tbaa !5
  %39 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index.addr, align 8, !tbaa !1
  %marknum35 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %39, i32 0, i32 3
  %40 = load i32, i32* %marknum35, align 4, !tbaa !214
  %idxprom36 = zext i32 %40 to i64
  %41 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index.addr, align 8, !tbaa !1
  %marker37 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %41, i32 0, i32 4
  %42 = load %struct.opj_marker_info*, %struct.opj_marker_info** %marker37, align 8, !tbaa !182
  %arrayidx38 = getelementptr inbounds %struct.opj_marker_info, %struct.opj_marker_info* %42, i64 %idxprom36
  %len39 = getelementptr inbounds %struct.opj_marker_info, %struct.opj_marker_info* %arrayidx38, i32 0, i32 2
  store i32 %38, i32* %len39, align 4, !tbaa !203
  %43 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index.addr, align 8, !tbaa !1
  %marknum40 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %43, i32 0, i32 3
  %44 = load i32, i32* %marknum40, align 4, !tbaa !214
  %inc = add i32 %44, 1
  store i32 %inc, i32* %marknum40, align 4, !tbaa !214
  store i32 1, i32* %retval
  br label %return

return:                                           ; preds = %if.end.23, %cleanup
  %45 = load i32, i32* %retval
  ret i32 %45

unreachable:                                      ; preds = %cleanup
  unreachable
}

declare %struct.opj_tcd* @opj_tcd_create(i32) #3

declare i32 @opj_tcd_init(%struct.opj_tcd*, %struct.opj_image*, %struct.opj_cp*) #3

; Function Attrs: nounwind uwtable
define internal i32 @opj_j2k_build_decoder(%struct.opj_j2k* %p_j2k, %struct.opj_stream_private* %p_stream, %struct.opj_event_mgr* %p_manager) #0 {
entry:
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %p_stream.addr = alloca %struct.opj_stream_private*, align 8
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store %struct.opj_stream_private* %p_stream, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %0 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %1 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %2 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @opj_j2k_decoding_validation(%struct.opj_j2k* %p_j2k, %struct.opj_stream_private* %p_stream, %struct.opj_event_mgr* %p_manager) #0 {
entry:
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %p_stream.addr = alloca %struct.opj_stream_private*, align 8
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  %l_is_valid = alloca i32, align 4
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store %struct.opj_stream_private* %p_stream, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %0 = bitcast i32* %l_is_valid to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  store i32 1, i32* %l_is_valid, align 4, !tbaa !5
  %1 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cmp = icmp ne %struct.opj_j2k* %1, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 6506, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @__PRETTY_FUNCTION__.opj_j2k_decoding_validation, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %2, %cond.true
  %3 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %cmp1 = icmp ne %struct.opj_stream_private* %3, null
  br i1 %cmp1, label %cond.true.2, label %cond.false.3

cond.true.2:                                      ; preds = %cond.end
  br label %cond.end.4

cond.false.3:                                     ; preds = %cond.end
  call void @__assert_fail(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 6507, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @__PRETTY_FUNCTION__.opj_j2k_decoding_validation, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.4

cond.end.4:                                       ; preds = %4, %cond.true.2
  %5 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %cmp5 = icmp ne %struct.opj_event_mgr* %5, null
  br i1 %cmp5, label %cond.true.6, label %cond.false.7

cond.true.6:                                      ; preds = %cond.end.4
  br label %cond.end.8

cond.false.7:                                     ; preds = %cond.end.4
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 6508, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @__PRETTY_FUNCTION__.opj_j2k_decoding_validation, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.8

cond.end.8:                                       ; preds = %6, %cond.true.6
  %7 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %7, i32 0, i32 1
  %m_decoder = bitcast %union.anon* %m_specific_param to %struct.opj_j2k_dec*
  %m_state = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder, i32 0, i32 0
  %8 = load i32, i32* %m_state, align 4, !tbaa !23
  %cmp9 = icmp eq i32 %8, 0
  %conv = zext i1 %cmp9 to i32
  %9 = load i32, i32* %l_is_valid, align 4, !tbaa !5
  %and = and i32 %9, %conv
  store i32 %and, i32* %l_is_valid, align 4, !tbaa !5
  %10 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_procedure_list = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %10, i32 0, i32 5
  %11 = load %struct.opj_procedure_list*, %struct.opj_procedure_list** %m_procedure_list, align 8, !tbaa !114
  %cmp10 = icmp ne %struct.opj_procedure_list* %11, null
  %conv11 = zext i1 %cmp10 to i32
  %12 = load i32, i32* %l_is_valid, align 4, !tbaa !5
  %and12 = and i32 %12, %conv11
  store i32 %and12, i32* %l_is_valid, align 4, !tbaa !5
  %13 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_validation_list = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %13, i32 0, i32 6
  %14 = load %struct.opj_procedure_list*, %struct.opj_procedure_list** %m_validation_list, align 8, !tbaa !113
  %cmp13 = icmp ne %struct.opj_procedure_list* %14, null
  %conv14 = zext i1 %cmp13 to i32
  %15 = load i32, i32* %l_is_valid, align 4, !tbaa !5
  %and15 = and i32 %15, %conv14
  store i32 %and15, i32* %l_is_valid, align 4, !tbaa !5
  %16 = load i32, i32* %l_is_valid, align 4, !tbaa !5
  %17 = bitcast i32* %l_is_valid to i8*
  call void @llvm.lifetime.end(i64 4, i8* %17) #1
  ret i32 %16
}

declare i32 @opj_procedure_list_get_nb_procedures(%struct.opj_procedure_list*) #3

declare void ()** @opj_procedure_list_get_first_procedure(%struct.opj_procedure_list*) #3

declare void @opj_procedure_list_clear(%struct.opj_procedure_list*) #3

; Function Attrs: nounwind uwtable
define internal i32 @opj_j2k_decode_tiles(%struct.opj_j2k* %p_j2k, %struct.opj_stream_private* %p_stream, %struct.opj_event_mgr* %p_manager) #0 {
entry:
  %retval = alloca i32, align 4
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %p_stream.addr = alloca %struct.opj_stream_private*, align 8
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  %l_go_on = alloca i32, align 4
  %l_current_tile_no = alloca i32, align 4
  %l_data_size = alloca i32, align 4
  %l_max_data_size = alloca i32, align 4
  %l_tile_x0 = alloca i32, align 4
  %l_tile_y0 = alloca i32, align 4
  %l_tile_x1 = alloca i32, align 4
  %l_tile_y1 = alloca i32, align 4
  %l_nb_comps = alloca i32, align 4
  %l_current_data = alloca i8*, align 8
  %nr_tiles = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %l_new_current_data = alloca i8*, align 8
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store %struct.opj_stream_private* %p_stream, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %0 = bitcast i32* %l_go_on to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  store i32 1, i32* %l_go_on, align 4, !tbaa !5
  %1 = bitcast i32* %l_current_tile_no to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = bitcast i32* %l_data_size to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #1
  %3 = bitcast i32* %l_max_data_size to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #1
  %4 = bitcast i32* %l_tile_x0 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #1
  %5 = bitcast i32* %l_tile_y0 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #1
  %6 = bitcast i32* %l_tile_x1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %6) #1
  %7 = bitcast i32* %l_tile_y1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %7) #1
  %8 = bitcast i32* %l_nb_comps to i8*
  call void @llvm.lifetime.start(i64 4, i8* %8) #1
  %9 = bitcast i8** %l_current_data to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9) #1
  %10 = bitcast i32* %nr_tiles to i8*
  call void @llvm.lifetime.start(i64 4, i8* %10) #1
  store i32 0, i32* %nr_tiles, align 4, !tbaa !5
  %call = call noalias i8* @malloc(i64 1000) #9
  store i8* %call, i8** %l_current_data, align 8, !tbaa !1
  %11 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %tobool = icmp ne i8* %11, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %12 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call1 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %12, i32 1, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.161, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.53

if.end:                                           ; preds = %entry
  store i32 1000, i32* %l_max_data_size, align 4, !tbaa !5
  br label %while.cond

while.cond:                                       ; preds = %if.end.52, %if.end
  br label %while.body

while.body:                                       ; preds = %while.cond
  %13 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %14 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %15 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call2 = call i32 @opj_j2k_read_tile_header(%struct.opj_j2k* %13, i32* %l_current_tile_no, i32* %l_data_size, i32* %l_tile_x0, i32* %l_tile_y0, i32* %l_tile_x1, i32* %l_tile_y1, i32* %l_nb_comps, i32* %l_go_on, %struct.opj_stream_private* %14, %struct.opj_event_mgr* %15) #7
  %tobool3 = icmp ne i32 %call2, 0
  br i1 %tobool3, label %if.end.5, label %if.then.4

if.then.4:                                        ; preds = %while.body
  %16 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  call void @free(i8* %16) #9
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.53

if.end.5:                                         ; preds = %while.body
  %17 = load i32, i32* %l_go_on, align 4, !tbaa !5
  %tobool6 = icmp ne i32 %17, 0
  br i1 %tobool6, label %if.end.8, label %if.then.7

if.then.7:                                        ; preds = %if.end.5
  br label %while.end

if.end.8:                                         ; preds = %if.end.5
  %18 = load i32, i32* %l_data_size, align 4, !tbaa !5
  %19 = load i32, i32* %l_max_data_size, align 4, !tbaa !5
  %cmp = icmp ugt i32 %18, %19
  br i1 %cmp, label %if.then.9, label %if.end.19

if.then.9:                                        ; preds = %if.end.8
  %20 = bitcast i8** %l_new_current_data to i8*
  call void @llvm.lifetime.start(i64 8, i8* %20) #1
  %21 = load i32, i32* %l_data_size, align 4, !tbaa !5
  %conv = zext i32 %21 to i64
  %cmp10 = icmp uge i64 %conv, -256
  br i1 %cmp10, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then.9
  br label %cond.end

cond.false:                                       ; preds = %if.then.9
  %22 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %23 = load i32, i32* %l_data_size, align 4, !tbaa !5
  %conv12 = zext i32 %23 to i64
  %call13 = call i8* @realloc(i8* %22, i64 %conv12) #9
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ null, %cond.true ], [ %call13, %cond.false ]
  store i8* %cond, i8** %l_new_current_data, align 8, !tbaa !1
  %24 = load i8*, i8** %l_new_current_data, align 8, !tbaa !1
  %tobool14 = icmp ne i8* %24, null
  br i1 %tobool14, label %if.end.18, label %if.then.15

if.then.15:                                       ; preds = %cond.end
  %25 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  call void @free(i8* %25) #9
  %26 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %27 = load i32, i32* %l_current_tile_no, align 4, !tbaa !5
  %add = add i32 %27, 1
  %28 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %28, i32 0, i32 4
  %th = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp, i32 0, i32 7
  %29 = load i32, i32* %th, align 4, !tbaa !177
  %30 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp16 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %30, i32 0, i32 4
  %tw = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp16, i32 0, i32 6
  %31 = load i32, i32* %tw, align 4, !tbaa !176
  %mul = mul i32 %29, %31
  %call17 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %26, i32 1, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.162, i32 0, i32 0), i32 %add, i32 %mul) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.18:                                        ; preds = %cond.end
  %32 = load i8*, i8** %l_new_current_data, align 8, !tbaa !1
  store i8* %32, i8** %l_current_data, align 8, !tbaa !1
  %33 = load i32, i32* %l_data_size, align 4, !tbaa !5
  store i32 %33, i32* %l_max_data_size, align 4, !tbaa !5
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.18, %if.then.15
  %34 = bitcast i8** %l_new_current_data to i8*
  call void @llvm.lifetime.end(i64 8, i8* %34) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.53 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.19

if.end.19:                                        ; preds = %cleanup.cont, %if.end.8
  %35 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %36 = load i32, i32* %l_current_tile_no, align 4, !tbaa !5
  %37 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %38 = load i32, i32* %l_data_size, align 4, !tbaa !5
  %39 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %40 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call20 = call i32 @opj_j2k_decode_tile(%struct.opj_j2k* %35, i32 %36, i8* %37, i32 %38, %struct.opj_stream_private* %39, %struct.opj_event_mgr* %40) #7
  %tobool21 = icmp ne i32 %call20, 0
  br i1 %tobool21, label %if.end.23, label %if.then.22

if.then.22:                                       ; preds = %if.end.19
  %41 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  call void @free(i8* %41) #9
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.53

if.end.23:                                        ; preds = %if.end.19
  %42 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %43 = load i32, i32* %l_current_tile_no, align 4, !tbaa !5
  %add24 = add i32 %43, 1
  %44 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp25 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %44, i32 0, i32 4
  %th26 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp25, i32 0, i32 7
  %45 = load i32, i32* %th26, align 4, !tbaa !177
  %46 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp27 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %46, i32 0, i32 4
  %tw28 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp27, i32 0, i32 6
  %47 = load i32, i32* %tw28, align 4, !tbaa !176
  %mul29 = mul i32 %45, %47
  %call30 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %42, i32 4, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.163, i32 0, i32 0), i32 %add24, i32 %mul29) #7
  %48 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_tcd = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %48, i32 0, i32 9
  %49 = load %struct.opj_tcd*, %struct.opj_tcd** %m_tcd, align 8, !tbaa !120
  %50 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %51 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_output_image = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %51, i32 0, i32 3
  %52 = load %struct.opj_image*, %struct.opj_image** %m_output_image, align 8, !tbaa !121
  %call31 = call i32 @opj_j2k_update_image_data(%struct.opj_tcd* %49, i8* %50, %struct.opj_image* %52) #7
  %tobool32 = icmp ne i32 %call31, 0
  br i1 %tobool32, label %if.end.34, label %if.then.33

if.then.33:                                       ; preds = %if.end.23
  %53 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  call void @free(i8* %53) #9
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.53

if.end.34:                                        ; preds = %if.end.23
  %54 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %55 = load i32, i32* %l_current_tile_no, align 4, !tbaa !5
  %add35 = add i32 %55, 1
  %call36 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %54, i32 4, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.164, i32 0, i32 0), i32 %add35) #7
  %56 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %call37 = call i64 @opj_stream_get_number_byte_left(%struct.opj_stream_private* %56) #7
  %cmp38 = icmp eq i64 %call37, 0
  br i1 %cmp38, label %land.lhs.true, label %if.end.43

land.lhs.true:                                    ; preds = %if.end.34
  %57 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %57, i32 0, i32 1
  %m_decoder = bitcast %union.anon* %m_specific_param to %struct.opj_j2k_dec*
  %m_state = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder, i32 0, i32 0
  %58 = load i32, i32* %m_state, align 4, !tbaa !23
  %cmp40 = icmp eq i32 %58, 64
  br i1 %cmp40, label %if.then.42, label %if.end.43

if.then.42:                                       ; preds = %land.lhs.true
  br label %while.end

if.end.43:                                        ; preds = %land.lhs.true, %if.end.34
  %59 = load i32, i32* %nr_tiles, align 4, !tbaa !5
  %inc = add i32 %59, 1
  store i32 %inc, i32* %nr_tiles, align 4, !tbaa !5
  %60 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp44 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %60, i32 0, i32 4
  %th45 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp44, i32 0, i32 7
  %61 = load i32, i32* %th45, align 4, !tbaa !177
  %62 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp46 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %62, i32 0, i32 4
  %tw47 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp46, i32 0, i32 6
  %63 = load i32, i32* %tw47, align 4, !tbaa !176
  %mul48 = mul i32 %61, %63
  %cmp49 = icmp eq i32 %inc, %mul48
  br i1 %cmp49, label %if.then.51, label %if.end.52

if.then.51:                                       ; preds = %if.end.43
  br label %while.end

if.end.52:                                        ; preds = %if.end.43
  br label %while.cond

while.end:                                        ; preds = %if.then.51, %if.then.42, %if.then.7
  %64 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  call void @free(i8* %64) #9
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.53

cleanup.53:                                       ; preds = %while.end, %if.then.33, %if.then.22, %cleanup, %if.then.4, %if.then
  %65 = bitcast i32* %nr_tiles to i8*
  call void @llvm.lifetime.end(i64 4, i8* %65) #1
  %66 = bitcast i8** %l_current_data to i8*
  call void @llvm.lifetime.end(i64 8, i8* %66) #1
  %67 = bitcast i32* %l_nb_comps to i8*
  call void @llvm.lifetime.end(i64 4, i8* %67) #1
  %68 = bitcast i32* %l_tile_y1 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %68) #1
  %69 = bitcast i32* %l_tile_x1 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %69) #1
  %70 = bitcast i32* %l_tile_y0 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %70) #1
  %71 = bitcast i32* %l_tile_x0 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %71) #1
  %72 = bitcast i32* %l_max_data_size to i8*
  call void @llvm.lifetime.end(i64 4, i8* %72) #1
  %73 = bitcast i32* %l_data_size to i8*
  call void @llvm.lifetime.end(i64 4, i8* %73) #1
  %74 = bitcast i32* %l_current_tile_no to i8*
  call void @llvm.lifetime.end(i64 4, i8* %74) #1
  %75 = bitcast i32* %l_go_on to i8*
  call void @llvm.lifetime.end(i64 4, i8* %75) #1
  %76 = load i32, i32* %retval
  ret i32 %76
}

; Function Attrs: nounwind uwtable
define internal i32 @opj_j2k_update_image_data(%struct.opj_tcd* %p_tcd, i8* %p_data, %struct.opj_image* %p_output_image) #0 {
entry:
  %retval = alloca i32, align 4
  %p_tcd.addr = alloca %struct.opj_tcd*, align 8
  %p_data.addr = alloca i8*, align 8
  %p_output_image.addr = alloca %struct.opj_image*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %l_width_src = alloca i32, align 4
  %l_height_src = alloca i32, align 4
  %l_width_dest = alloca i32, align 4
  %l_height_dest = alloca i32, align 4
  %l_offset_x0_src = alloca i32, align 4
  %l_offset_y0_src = alloca i32, align 4
  %l_offset_x1_src = alloca i32, align 4
  %l_offset_y1_src = alloca i32, align 4
  %l_start_offset_src = alloca i32, align 4
  %l_line_offset_src = alloca i32, align 4
  %l_end_offset_src = alloca i32, align 4
  %l_start_x_dest = alloca i32, align 4
  %l_start_y_dest = alloca i32, align 4
  %l_x0_dest = alloca i32, align 4
  %l_y0_dest = alloca i32, align 4
  %l_x1_dest = alloca i32, align 4
  %l_y1_dest = alloca i32, align 4
  %l_start_offset_dest = alloca i32, align 4
  %l_line_offset_dest = alloca i32, align 4
  %l_img_comp_src = alloca %struct.opj_image_comp*, align 8
  %l_img_comp_dest = alloca %struct.opj_image_comp*, align 8
  %l_tilec = alloca %struct.opj_tcd_tilecomp*, align 8
  %l_image_src = alloca %struct.opj_image*, align 8
  %l_size_comp = alloca i32, align 4
  %l_remaining = alloca i32, align 4
  %l_dest_ptr = alloca i32*, align 8
  %l_res = alloca %struct.opj_tcd_resolution*, align 8
  %cleanup.dest.slot = alloca i32
  %l_src_ptr = alloca i8*, align 8
  %l_src_ptr189 = alloca i16*, align 8
  %l_src_ptr243 = alloca i32*, align 8
  store %struct.opj_tcd* %p_tcd, %struct.opj_tcd** %p_tcd.addr, align 8, !tbaa !1
  store i8* %p_data, i8** %p_data.addr, align 8, !tbaa !1
  store %struct.opj_image* %p_output_image, %struct.opj_image** %p_output_image.addr, align 8, !tbaa !1
  %0 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast i32* %j to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = bitcast i32* %k to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #1
  store i32 0, i32* %k, align 4, !tbaa !5
  %3 = bitcast i32* %l_width_src to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #1
  %4 = bitcast i32* %l_height_src to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #1
  %5 = bitcast i32* %l_width_dest to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #1
  %6 = bitcast i32* %l_height_dest to i8*
  call void @llvm.lifetime.start(i64 4, i8* %6) #1
  %7 = bitcast i32* %l_offset_x0_src to i8*
  call void @llvm.lifetime.start(i64 4, i8* %7) #1
  %8 = bitcast i32* %l_offset_y0_src to i8*
  call void @llvm.lifetime.start(i64 4, i8* %8) #1
  %9 = bitcast i32* %l_offset_x1_src to i8*
  call void @llvm.lifetime.start(i64 4, i8* %9) #1
  %10 = bitcast i32* %l_offset_y1_src to i8*
  call void @llvm.lifetime.start(i64 4, i8* %10) #1
  %11 = bitcast i32* %l_start_offset_src to i8*
  call void @llvm.lifetime.start(i64 4, i8* %11) #1
  %12 = bitcast i32* %l_line_offset_src to i8*
  call void @llvm.lifetime.start(i64 4, i8* %12) #1
  %13 = bitcast i32* %l_end_offset_src to i8*
  call void @llvm.lifetime.start(i64 4, i8* %13) #1
  %14 = bitcast i32* %l_start_x_dest to i8*
  call void @llvm.lifetime.start(i64 4, i8* %14) #1
  %15 = bitcast i32* %l_start_y_dest to i8*
  call void @llvm.lifetime.start(i64 4, i8* %15) #1
  %16 = bitcast i32* %l_x0_dest to i8*
  call void @llvm.lifetime.start(i64 4, i8* %16) #1
  %17 = bitcast i32* %l_y0_dest to i8*
  call void @llvm.lifetime.start(i64 4, i8* %17) #1
  %18 = bitcast i32* %l_x1_dest to i8*
  call void @llvm.lifetime.start(i64 4, i8* %18) #1
  %19 = bitcast i32* %l_y1_dest to i8*
  call void @llvm.lifetime.start(i64 4, i8* %19) #1
  %20 = bitcast i32* %l_start_offset_dest to i8*
  call void @llvm.lifetime.start(i64 4, i8* %20) #1
  %21 = bitcast i32* %l_line_offset_dest to i8*
  call void @llvm.lifetime.start(i64 4, i8* %21) #1
  %22 = bitcast %struct.opj_image_comp** %l_img_comp_src to i8*
  call void @llvm.lifetime.start(i64 8, i8* %22) #1
  store %struct.opj_image_comp* null, %struct.opj_image_comp** %l_img_comp_src, align 8, !tbaa !1
  %23 = bitcast %struct.opj_image_comp** %l_img_comp_dest to i8*
  call void @llvm.lifetime.start(i64 8, i8* %23) #1
  store %struct.opj_image_comp* null, %struct.opj_image_comp** %l_img_comp_dest, align 8, !tbaa !1
  %24 = bitcast %struct.opj_tcd_tilecomp** %l_tilec to i8*
  call void @llvm.lifetime.start(i64 8, i8* %24) #1
  store %struct.opj_tcd_tilecomp* null, %struct.opj_tcd_tilecomp** %l_tilec, align 8, !tbaa !1
  %25 = bitcast %struct.opj_image** %l_image_src to i8*
  call void @llvm.lifetime.start(i64 8, i8* %25) #1
  store %struct.opj_image* null, %struct.opj_image** %l_image_src, align 8, !tbaa !1
  %26 = bitcast i32* %l_size_comp to i8*
  call void @llvm.lifetime.start(i64 4, i8* %26) #1
  %27 = bitcast i32* %l_remaining to i8*
  call void @llvm.lifetime.start(i64 4, i8* %27) #1
  %28 = bitcast i32** %l_dest_ptr to i8*
  call void @llvm.lifetime.start(i64 8, i8* %28) #1
  %29 = bitcast %struct.opj_tcd_resolution** %l_res to i8*
  call void @llvm.lifetime.start(i64 8, i8* %29) #1
  store %struct.opj_tcd_resolution* null, %struct.opj_tcd_resolution** %l_res, align 8, !tbaa !1
  %30 = load %struct.opj_tcd*, %struct.opj_tcd** %p_tcd.addr, align 8, !tbaa !1
  %tcd_image = getelementptr inbounds %struct.opj_tcd, %struct.opj_tcd* %30, i32 0, i32 5
  %31 = load %struct.opj_tcd_image*, %struct.opj_tcd_image** %tcd_image, align 8, !tbaa !190
  %tiles = getelementptr inbounds %struct.opj_tcd_image, %struct.opj_tcd_image* %31, i32 0, i32 0
  %32 = load %struct.opj_tcd_tile*, %struct.opj_tcd_tile** %tiles, align 8, !tbaa !192
  %comps = getelementptr inbounds %struct.opj_tcd_tile, %struct.opj_tcd_tile* %32, i32 0, i32 5
  %33 = load %struct.opj_tcd_tilecomp*, %struct.opj_tcd_tilecomp** %comps, align 8, !tbaa !255
  store %struct.opj_tcd_tilecomp* %33, %struct.opj_tcd_tilecomp** %l_tilec, align 8, !tbaa !1
  %34 = load %struct.opj_tcd*, %struct.opj_tcd** %p_tcd.addr, align 8, !tbaa !1
  %image = getelementptr inbounds %struct.opj_tcd, %struct.opj_tcd* %34, i32 0, i32 6
  %35 = load %struct.opj_image*, %struct.opj_image** %image, align 8, !tbaa !256
  store %struct.opj_image* %35, %struct.opj_image** %l_image_src, align 8, !tbaa !1
  %36 = load %struct.opj_image*, %struct.opj_image** %l_image_src, align 8, !tbaa !1
  %comps1 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %36, i32 0, i32 6
  %37 = load %struct.opj_image_comp*, %struct.opj_image_comp** %comps1, align 8, !tbaa !62
  store %struct.opj_image_comp* %37, %struct.opj_image_comp** %l_img_comp_src, align 8, !tbaa !1
  %38 = load %struct.opj_image*, %struct.opj_image** %p_output_image.addr, align 8, !tbaa !1
  %comps2 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %38, i32 0, i32 6
  %39 = load %struct.opj_image_comp*, %struct.opj_image_comp** %comps2, align 8, !tbaa !62
  store %struct.opj_image_comp* %39, %struct.opj_image_comp** %l_img_comp_dest, align 8, !tbaa !1
  store i32 0, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc.271, %entry
  %40 = load i32, i32* %i, align 4, !tbaa !5
  %41 = load %struct.opj_image*, %struct.opj_image** %l_image_src, align 8, !tbaa !1
  %numcomps = getelementptr inbounds %struct.opj_image, %struct.opj_image* %41, i32 0, i32 4
  %42 = load i32, i32* %numcomps, align 4, !tbaa !45
  %cmp = icmp ult i32 %40, %42
  br i1 %cmp, label %for.body, label %for.end.273

for.body:                                         ; preds = %for.cond
  %43 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp_dest, align 8, !tbaa !1
  %data = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %43, i32 0, i32 11
  %44 = load i32*, i32** %data, align 8, !tbaa !251
  %tobool = icmp ne i32* %44, null
  br i1 %tobool, label %if.end.19, label %if.then

if.then:                                          ; preds = %for.body
  %45 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp_dest, align 8, !tbaa !1
  %w = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %45, i32 0, i32 2
  %46 = load i32, i32* %w, align 4, !tbaa !211
  %47 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp_dest, align 8, !tbaa !1
  %h = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %47, i32 0, i32 3
  %48 = load i32, i32* %h, align 4, !tbaa !212
  %mul = mul i32 %46, %48
  %conv = zext i32 %mul to i64
  %cmp3 = icmp ne i64 %conv, 0
  br i1 %cmp3, label %land.lhs.true, label %cond.false

land.lhs.true:                                    ; preds = %if.then
  %49 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp_dest, align 8, !tbaa !1
  %w5 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %49, i32 0, i32 2
  %50 = load i32, i32* %w5, align 4, !tbaa !211
  %51 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp_dest, align 8, !tbaa !1
  %h6 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %51, i32 0, i32 3
  %52 = load i32, i32* %h6, align 4, !tbaa !212
  %mul7 = mul i32 %50, %52
  %conv8 = zext i32 %mul7 to i64
  %cmp9 = icmp uge i64 %conv8, 4611686018427387840
  br i1 %cmp9, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true, %if.then
  %53 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp_dest, align 8, !tbaa !1
  %w11 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %53, i32 0, i32 2
  %54 = load i32, i32* %w11, align 4, !tbaa !211
  %55 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp_dest, align 8, !tbaa !1
  %h12 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %55, i32 0, i32 3
  %56 = load i32, i32* %h12, align 4, !tbaa !212
  %mul13 = mul i32 %54, %56
  %conv14 = zext i32 %mul13 to i64
  %call = call noalias i8* @calloc(i64 %conv14, i64 4) #9
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ null, %cond.true ], [ %call, %cond.false ]
  %57 = bitcast i8* %cond to i32*
  %58 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp_dest, align 8, !tbaa !1
  %data15 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %58, i32 0, i32 11
  store i32* %57, i32** %data15, align 8, !tbaa !251
  %59 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp_dest, align 8, !tbaa !1
  %data16 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %59, i32 0, i32 11
  %60 = load i32*, i32** %data16, align 8, !tbaa !251
  %tobool17 = icmp ne i32* %60, null
  br i1 %tobool17, label %if.end, label %if.then.18

if.then.18:                                       ; preds = %cond.end
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %cond.end
  br label %if.end.19

if.end.19:                                        ; preds = %if.end, %for.body
  %61 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp_src, align 8, !tbaa !1
  %resno_decoded = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %61, i32 0, i32 9
  %62 = load i32, i32* %resno_decoded, align 4, !tbaa !69
  %63 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp_dest, align 8, !tbaa !1
  %resno_decoded20 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %63, i32 0, i32 9
  store i32 %62, i32* %resno_decoded20, align 4, !tbaa !69
  %64 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp_src, align 8, !tbaa !1
  %prec = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %64, i32 0, i32 6
  %65 = load i32, i32* %prec, align 4, !tbaa !63
  %shr = lshr i32 %65, 3
  store i32 %shr, i32* %l_size_comp, align 4, !tbaa !5
  %66 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp_src, align 8, !tbaa !1
  %prec21 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %66, i32 0, i32 6
  %67 = load i32, i32* %prec21, align 4, !tbaa !63
  %and = and i32 %67, 7
  store i32 %and, i32* %l_remaining, align 4, !tbaa !5
  %68 = load %struct.opj_tcd_tilecomp*, %struct.opj_tcd_tilecomp** %l_tilec, align 8, !tbaa !1
  %resolutions = getelementptr inbounds %struct.opj_tcd_tilecomp, %struct.opj_tcd_tilecomp* %68, i32 0, i32 6
  %69 = load %struct.opj_tcd_resolution*, %struct.opj_tcd_resolution** %resolutions, align 8, !tbaa !266
  %70 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp_src, align 8, !tbaa !1
  %resno_decoded22 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %70, i32 0, i32 9
  %71 = load i32, i32* %resno_decoded22, align 4, !tbaa !69
  %idx.ext = zext i32 %71 to i64
  %add.ptr = getelementptr inbounds %struct.opj_tcd_resolution, %struct.opj_tcd_resolution* %69, i64 %idx.ext
  store %struct.opj_tcd_resolution* %add.ptr, %struct.opj_tcd_resolution** %l_res, align 8, !tbaa !1
  %72 = load i32, i32* %l_remaining, align 4, !tbaa !5
  %tobool23 = icmp ne i32 %72, 0
  br i1 %tobool23, label %if.then.24, label %if.end.25

if.then.24:                                       ; preds = %if.end.19
  %73 = load i32, i32* %l_size_comp, align 4, !tbaa !5
  %inc = add i32 %73, 1
  store i32 %inc, i32* %l_size_comp, align 4, !tbaa !5
  br label %if.end.25

if.end.25:                                        ; preds = %if.then.24, %if.end.19
  %74 = load i32, i32* %l_size_comp, align 4, !tbaa !5
  %cmp26 = icmp eq i32 %74, 3
  br i1 %cmp26, label %if.then.28, label %if.end.29

if.then.28:                                       ; preds = %if.end.25
  store i32 4, i32* %l_size_comp, align 4, !tbaa !5
  br label %if.end.29

if.end.29:                                        ; preds = %if.then.28, %if.end.25
  %75 = load %struct.opj_tcd_resolution*, %struct.opj_tcd_resolution** %l_res, align 8, !tbaa !1
  %x1 = getelementptr inbounds %struct.opj_tcd_resolution, %struct.opj_tcd_resolution* %75, i32 0, i32 2
  %76 = load i32, i32* %x1, align 4, !tbaa !267
  %77 = load %struct.opj_tcd_resolution*, %struct.opj_tcd_resolution** %l_res, align 8, !tbaa !1
  %x0 = getelementptr inbounds %struct.opj_tcd_resolution, %struct.opj_tcd_resolution* %77, i32 0, i32 0
  %78 = load i32, i32* %x0, align 4, !tbaa !269
  %sub = sub nsw i32 %76, %78
  store i32 %sub, i32* %l_width_src, align 4, !tbaa !5
  %79 = load %struct.opj_tcd_resolution*, %struct.opj_tcd_resolution** %l_res, align 8, !tbaa !1
  %y1 = getelementptr inbounds %struct.opj_tcd_resolution, %struct.opj_tcd_resolution* %79, i32 0, i32 3
  %80 = load i32, i32* %y1, align 4, !tbaa !270
  %81 = load %struct.opj_tcd_resolution*, %struct.opj_tcd_resolution** %l_res, align 8, !tbaa !1
  %y0 = getelementptr inbounds %struct.opj_tcd_resolution, %struct.opj_tcd_resolution* %81, i32 0, i32 1
  %82 = load i32, i32* %y0, align 4, !tbaa !271
  %sub30 = sub nsw i32 %80, %82
  store i32 %sub30, i32* %l_height_src, align 4, !tbaa !5
  %83 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp_dest, align 8, !tbaa !1
  %x031 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %83, i32 0, i32 4
  %84 = load i32, i32* %x031, align 4, !tbaa !209
  %85 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp_dest, align 8, !tbaa !1
  %factor = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %85, i32 0, i32 10
  %86 = load i32, i32* %factor, align 4, !tbaa !71
  %call32 = call i32 @opj_int_ceildivpow2(i32 %84, i32 %86) #7
  store i32 %call32, i32* %l_x0_dest, align 4, !tbaa !5
  %87 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp_dest, align 8, !tbaa !1
  %y033 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %87, i32 0, i32 5
  %88 = load i32, i32* %y033, align 4, !tbaa !210
  %89 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp_dest, align 8, !tbaa !1
  %factor34 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %89, i32 0, i32 10
  %90 = load i32, i32* %factor34, align 4, !tbaa !71
  %call35 = call i32 @opj_int_ceildivpow2(i32 %88, i32 %90) #7
  store i32 %call35, i32* %l_y0_dest, align 4, !tbaa !5
  %91 = load i32, i32* %l_x0_dest, align 4, !tbaa !5
  %92 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp_dest, align 8, !tbaa !1
  %w36 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %92, i32 0, i32 2
  %93 = load i32, i32* %w36, align 4, !tbaa !211
  %add = add i32 %91, %93
  store i32 %add, i32* %l_x1_dest, align 4, !tbaa !5
  %94 = load i32, i32* %l_y0_dest, align 4, !tbaa !5
  %95 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp_dest, align 8, !tbaa !1
  %h37 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %95, i32 0, i32 3
  %96 = load i32, i32* %h37, align 4, !tbaa !212
  %add38 = add i32 %94, %96
  store i32 %add38, i32* %l_y1_dest, align 4, !tbaa !5
  %97 = load %struct.opj_tcd_resolution*, %struct.opj_tcd_resolution** %l_res, align 8, !tbaa !1
  %x039 = getelementptr inbounds %struct.opj_tcd_resolution, %struct.opj_tcd_resolution* %97, i32 0, i32 0
  %98 = load i32, i32* %x039, align 4, !tbaa !269
  %cmp40 = icmp sge i32 %98, 0
  br i1 %cmp40, label %cond.true.42, label %cond.false.43

cond.true.42:                                     ; preds = %if.end.29
  br label %cond.end.44

cond.false.43:                                    ; preds = %if.end.29
  call void @__assert_fail(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.165, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 7416, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @__PRETTY_FUNCTION__.opj_j2k_update_image_data, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.44

cond.end.44:                                      ; preds = %99, %cond.true.42
  %100 = load %struct.opj_tcd_resolution*, %struct.opj_tcd_resolution** %l_res, align 8, !tbaa !1
  %x145 = getelementptr inbounds %struct.opj_tcd_resolution, %struct.opj_tcd_resolution* %100, i32 0, i32 2
  %101 = load i32, i32* %x145, align 4, !tbaa !267
  %cmp46 = icmp sge i32 %101, 0
  br i1 %cmp46, label %cond.true.48, label %cond.false.49

cond.true.48:                                     ; preds = %cond.end.44
  br label %cond.end.50

cond.false.49:                                    ; preds = %cond.end.44
  call void @__assert_fail(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.166, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 7417, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @__PRETTY_FUNCTION__.opj_j2k_update_image_data, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.50

cond.end.50:                                      ; preds = %102, %cond.true.48
  %103 = load i32, i32* %l_x0_dest, align 4, !tbaa !5
  %104 = load %struct.opj_tcd_resolution*, %struct.opj_tcd_resolution** %l_res, align 8, !tbaa !1
  %x051 = getelementptr inbounds %struct.opj_tcd_resolution, %struct.opj_tcd_resolution* %104, i32 0, i32 0
  %105 = load i32, i32* %x051, align 4, !tbaa !269
  %cmp52 = icmp ult i32 %103, %105
  br i1 %cmp52, label %if.then.54, label %if.else.65

if.then.54:                                       ; preds = %cond.end.50
  %106 = load %struct.opj_tcd_resolution*, %struct.opj_tcd_resolution** %l_res, align 8, !tbaa !1
  %x055 = getelementptr inbounds %struct.opj_tcd_resolution, %struct.opj_tcd_resolution* %106, i32 0, i32 0
  %107 = load i32, i32* %x055, align 4, !tbaa !269
  %108 = load i32, i32* %l_x0_dest, align 4, !tbaa !5
  %sub56 = sub i32 %107, %108
  store i32 %sub56, i32* %l_start_x_dest, align 4, !tbaa !5
  store i32 0, i32* %l_offset_x0_src, align 4, !tbaa !5
  %109 = load i32, i32* %l_x1_dest, align 4, !tbaa !5
  %110 = load %struct.opj_tcd_resolution*, %struct.opj_tcd_resolution** %l_res, align 8, !tbaa !1
  %x157 = getelementptr inbounds %struct.opj_tcd_resolution, %struct.opj_tcd_resolution* %110, i32 0, i32 2
  %111 = load i32, i32* %x157, align 4, !tbaa !267
  %cmp58 = icmp uge i32 %109, %111
  br i1 %cmp58, label %if.then.60, label %if.else

if.then.60:                                       ; preds = %if.then.54
  %112 = load i32, i32* %l_width_src, align 4, !tbaa !5
  store i32 %112, i32* %l_width_dest, align 4, !tbaa !5
  store i32 0, i32* %l_offset_x1_src, align 4, !tbaa !5
  br label %if.end.64

if.else:                                          ; preds = %if.then.54
  %113 = load i32, i32* %l_x1_dest, align 4, !tbaa !5
  %114 = load %struct.opj_tcd_resolution*, %struct.opj_tcd_resolution** %l_res, align 8, !tbaa !1
  %x061 = getelementptr inbounds %struct.opj_tcd_resolution, %struct.opj_tcd_resolution* %114, i32 0, i32 0
  %115 = load i32, i32* %x061, align 4, !tbaa !269
  %sub62 = sub i32 %113, %115
  store i32 %sub62, i32* %l_width_dest, align 4, !tbaa !5
  %116 = load i32, i32* %l_width_src, align 4, !tbaa !5
  %117 = load i32, i32* %l_width_dest, align 4, !tbaa !5
  %sub63 = sub i32 %116, %117
  store i32 %sub63, i32* %l_offset_x1_src, align 4, !tbaa !5
  br label %if.end.64

if.end.64:                                        ; preds = %if.else, %if.then.60
  br label %if.end.78

if.else.65:                                       ; preds = %cond.end.50
  store i32 0, i32* %l_start_x_dest, align 4, !tbaa !5
  %118 = load i32, i32* %l_x0_dest, align 4, !tbaa !5
  %119 = load %struct.opj_tcd_resolution*, %struct.opj_tcd_resolution** %l_res, align 8, !tbaa !1
  %x066 = getelementptr inbounds %struct.opj_tcd_resolution, %struct.opj_tcd_resolution* %119, i32 0, i32 0
  %120 = load i32, i32* %x066, align 4, !tbaa !269
  %sub67 = sub i32 %118, %120
  store i32 %sub67, i32* %l_offset_x0_src, align 4, !tbaa !5
  %121 = load i32, i32* %l_x1_dest, align 4, !tbaa !5
  %122 = load %struct.opj_tcd_resolution*, %struct.opj_tcd_resolution** %l_res, align 8, !tbaa !1
  %x168 = getelementptr inbounds %struct.opj_tcd_resolution, %struct.opj_tcd_resolution* %122, i32 0, i32 2
  %123 = load i32, i32* %x168, align 4, !tbaa !267
  %cmp69 = icmp uge i32 %121, %123
  br i1 %cmp69, label %if.then.71, label %if.else.73

if.then.71:                                       ; preds = %if.else.65
  %124 = load i32, i32* %l_width_src, align 4, !tbaa !5
  %125 = load i32, i32* %l_offset_x0_src, align 4, !tbaa !5
  %sub72 = sub i32 %124, %125
  store i32 %sub72, i32* %l_width_dest, align 4, !tbaa !5
  store i32 0, i32* %l_offset_x1_src, align 4, !tbaa !5
  br label %if.end.77

if.else.73:                                       ; preds = %if.else.65
  %126 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp_dest, align 8, !tbaa !1
  %w74 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %126, i32 0, i32 2
  %127 = load i32, i32* %w74, align 4, !tbaa !211
  store i32 %127, i32* %l_width_dest, align 4, !tbaa !5
  %128 = load %struct.opj_tcd_resolution*, %struct.opj_tcd_resolution** %l_res, align 8, !tbaa !1
  %x175 = getelementptr inbounds %struct.opj_tcd_resolution, %struct.opj_tcd_resolution* %128, i32 0, i32 2
  %129 = load i32, i32* %x175, align 4, !tbaa !267
  %130 = load i32, i32* %l_x1_dest, align 4, !tbaa !5
  %sub76 = sub i32 %129, %130
  store i32 %sub76, i32* %l_offset_x1_src, align 4, !tbaa !5
  br label %if.end.77

if.end.77:                                        ; preds = %if.else.73, %if.then.71
  br label %if.end.78

if.end.78:                                        ; preds = %if.end.77, %if.end.64
  %131 = load i32, i32* %l_y0_dest, align 4, !tbaa !5
  %132 = load %struct.opj_tcd_resolution*, %struct.opj_tcd_resolution** %l_res, align 8, !tbaa !1
  %y079 = getelementptr inbounds %struct.opj_tcd_resolution, %struct.opj_tcd_resolution* %132, i32 0, i32 1
  %133 = load i32, i32* %y079, align 4, !tbaa !271
  %cmp80 = icmp ult i32 %131, %133
  br i1 %cmp80, label %if.then.82, label %if.else.94

if.then.82:                                       ; preds = %if.end.78
  %134 = load %struct.opj_tcd_resolution*, %struct.opj_tcd_resolution** %l_res, align 8, !tbaa !1
  %y083 = getelementptr inbounds %struct.opj_tcd_resolution, %struct.opj_tcd_resolution* %134, i32 0, i32 1
  %135 = load i32, i32* %y083, align 4, !tbaa !271
  %136 = load i32, i32* %l_y0_dest, align 4, !tbaa !5
  %sub84 = sub i32 %135, %136
  store i32 %sub84, i32* %l_start_y_dest, align 4, !tbaa !5
  store i32 0, i32* %l_offset_y0_src, align 4, !tbaa !5
  %137 = load i32, i32* %l_y1_dest, align 4, !tbaa !5
  %138 = load %struct.opj_tcd_resolution*, %struct.opj_tcd_resolution** %l_res, align 8, !tbaa !1
  %y185 = getelementptr inbounds %struct.opj_tcd_resolution, %struct.opj_tcd_resolution* %138, i32 0, i32 3
  %139 = load i32, i32* %y185, align 4, !tbaa !270
  %cmp86 = icmp uge i32 %137, %139
  br i1 %cmp86, label %if.then.88, label %if.else.89

if.then.88:                                       ; preds = %if.then.82
  %140 = load i32, i32* %l_height_src, align 4, !tbaa !5
  store i32 %140, i32* %l_height_dest, align 4, !tbaa !5
  store i32 0, i32* %l_offset_y1_src, align 4, !tbaa !5
  br label %if.end.93

if.else.89:                                       ; preds = %if.then.82
  %141 = load i32, i32* %l_y1_dest, align 4, !tbaa !5
  %142 = load %struct.opj_tcd_resolution*, %struct.opj_tcd_resolution** %l_res, align 8, !tbaa !1
  %y090 = getelementptr inbounds %struct.opj_tcd_resolution, %struct.opj_tcd_resolution* %142, i32 0, i32 1
  %143 = load i32, i32* %y090, align 4, !tbaa !271
  %sub91 = sub i32 %141, %143
  store i32 %sub91, i32* %l_height_dest, align 4, !tbaa !5
  %144 = load i32, i32* %l_height_src, align 4, !tbaa !5
  %145 = load i32, i32* %l_height_dest, align 4, !tbaa !5
  %sub92 = sub i32 %144, %145
  store i32 %sub92, i32* %l_offset_y1_src, align 4, !tbaa !5
  br label %if.end.93

if.end.93:                                        ; preds = %if.else.89, %if.then.88
  br label %if.end.107

if.else.94:                                       ; preds = %if.end.78
  store i32 0, i32* %l_start_y_dest, align 4, !tbaa !5
  %146 = load i32, i32* %l_y0_dest, align 4, !tbaa !5
  %147 = load %struct.opj_tcd_resolution*, %struct.opj_tcd_resolution** %l_res, align 8, !tbaa !1
  %y095 = getelementptr inbounds %struct.opj_tcd_resolution, %struct.opj_tcd_resolution* %147, i32 0, i32 1
  %148 = load i32, i32* %y095, align 4, !tbaa !271
  %sub96 = sub i32 %146, %148
  store i32 %sub96, i32* %l_offset_y0_src, align 4, !tbaa !5
  %149 = load i32, i32* %l_y1_dest, align 4, !tbaa !5
  %150 = load %struct.opj_tcd_resolution*, %struct.opj_tcd_resolution** %l_res, align 8, !tbaa !1
  %y197 = getelementptr inbounds %struct.opj_tcd_resolution, %struct.opj_tcd_resolution* %150, i32 0, i32 3
  %151 = load i32, i32* %y197, align 4, !tbaa !270
  %cmp98 = icmp uge i32 %149, %151
  br i1 %cmp98, label %if.then.100, label %if.else.102

if.then.100:                                      ; preds = %if.else.94
  %152 = load i32, i32* %l_height_src, align 4, !tbaa !5
  %153 = load i32, i32* %l_offset_y0_src, align 4, !tbaa !5
  %sub101 = sub i32 %152, %153
  store i32 %sub101, i32* %l_height_dest, align 4, !tbaa !5
  store i32 0, i32* %l_offset_y1_src, align 4, !tbaa !5
  br label %if.end.106

if.else.102:                                      ; preds = %if.else.94
  %154 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp_dest, align 8, !tbaa !1
  %h103 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %154, i32 0, i32 3
  %155 = load i32, i32* %h103, align 4, !tbaa !212
  store i32 %155, i32* %l_height_dest, align 4, !tbaa !5
  %156 = load %struct.opj_tcd_resolution*, %struct.opj_tcd_resolution** %l_res, align 8, !tbaa !1
  %y1104 = getelementptr inbounds %struct.opj_tcd_resolution, %struct.opj_tcd_resolution* %156, i32 0, i32 3
  %157 = load i32, i32* %y1104, align 4, !tbaa !270
  %158 = load i32, i32* %l_y1_dest, align 4, !tbaa !5
  %sub105 = sub i32 %157, %158
  store i32 %sub105, i32* %l_offset_y1_src, align 4, !tbaa !5
  br label %if.end.106

if.end.106:                                       ; preds = %if.else.102, %if.then.100
  br label %if.end.107

if.end.107:                                       ; preds = %if.end.106, %if.end.93
  %159 = load i32, i32* %l_offset_x0_src, align 4, !tbaa !5
  %cmp108 = icmp slt i32 %159, 0
  br i1 %cmp108, label %if.then.118, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end.107
  %160 = load i32, i32* %l_offset_y0_src, align 4, !tbaa !5
  %cmp110 = icmp slt i32 %160, 0
  br i1 %cmp110, label %if.then.118, label %lor.lhs.false.112

lor.lhs.false.112:                                ; preds = %lor.lhs.false
  %161 = load i32, i32* %l_offset_x1_src, align 4, !tbaa !5
  %cmp113 = icmp slt i32 %161, 0
  br i1 %cmp113, label %if.then.118, label %lor.lhs.false.115

lor.lhs.false.115:                                ; preds = %lor.lhs.false.112
  %162 = load i32, i32* %l_offset_y1_src, align 4, !tbaa !5
  %cmp116 = icmp slt i32 %162, 0
  br i1 %cmp116, label %if.then.118, label %if.end.119

if.then.118:                                      ; preds = %lor.lhs.false.115, %lor.lhs.false.112, %lor.lhs.false, %if.end.107
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.119:                                       ; preds = %lor.lhs.false.115
  %163 = load i32, i32* %l_width_dest, align 4, !tbaa !5
  %cmp120 = icmp slt i32 %163, 0
  br i1 %cmp120, label %if.then.125, label %lor.lhs.false.122

lor.lhs.false.122:                                ; preds = %if.end.119
  %164 = load i32, i32* %l_height_dest, align 4, !tbaa !5
  %cmp123 = icmp slt i32 %164, 0
  br i1 %cmp123, label %if.then.125, label %if.end.126

if.then.125:                                      ; preds = %lor.lhs.false.122, %if.end.119
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.126:                                       ; preds = %lor.lhs.false.122
  %165 = load i32, i32* %l_offset_x0_src, align 4, !tbaa !5
  %166 = load i32, i32* %l_offset_y0_src, align 4, !tbaa !5
  %167 = load i32, i32* %l_width_src, align 4, !tbaa !5
  %mul127 = mul i32 %166, %167
  %add128 = add i32 %165, %mul127
  store i32 %add128, i32* %l_start_offset_src, align 4, !tbaa !5
  %168 = load i32, i32* %l_offset_x1_src, align 4, !tbaa !5
  %169 = load i32, i32* %l_offset_x0_src, align 4, !tbaa !5
  %add129 = add nsw i32 %168, %169
  store i32 %add129, i32* %l_line_offset_src, align 4, !tbaa !5
  %170 = load i32, i32* %l_offset_y1_src, align 4, !tbaa !5
  %171 = load i32, i32* %l_width_src, align 4, !tbaa !5
  %mul130 = mul i32 %170, %171
  %172 = load i32, i32* %l_offset_x0_src, align 4, !tbaa !5
  %sub131 = sub i32 %mul130, %172
  store i32 %sub131, i32* %l_end_offset_src, align 4, !tbaa !5
  %173 = load i32, i32* %l_start_x_dest, align 4, !tbaa !5
  %174 = load i32, i32* %l_start_y_dest, align 4, !tbaa !5
  %175 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp_dest, align 8, !tbaa !1
  %w132 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %175, i32 0, i32 2
  %176 = load i32, i32* %w132, align 4, !tbaa !211
  %mul133 = mul i32 %174, %176
  %add134 = add i32 %173, %mul133
  store i32 %add134, i32* %l_start_offset_dest, align 4, !tbaa !5
  %177 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp_dest, align 8, !tbaa !1
  %w135 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %177, i32 0, i32 2
  %178 = load i32, i32* %w135, align 4, !tbaa !211
  %179 = load i32, i32* %l_width_dest, align 4, !tbaa !5
  %sub136 = sub i32 %178, %179
  store i32 %sub136, i32* %l_line_offset_dest, align 4, !tbaa !5
  %180 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp_dest, align 8, !tbaa !1
  %data137 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %180, i32 0, i32 11
  %181 = load i32*, i32** %data137, align 8, !tbaa !251
  %182 = load i32, i32* %l_start_offset_dest, align 4, !tbaa !5
  %idx.ext138 = sext i32 %182 to i64
  %add.ptr139 = getelementptr inbounds i32, i32* %181, i64 %idx.ext138
  store i32* %add.ptr139, i32** %l_dest_ptr, align 8, !tbaa !1
  %183 = load i32, i32* %l_size_comp, align 4, !tbaa !5
  switch i32 %183, label %sw.epilog [
    i32 1, label %sw.bb
    i32 2, label %sw.bb.188
    i32 4, label %sw.bb.242
  ]

sw.bb:                                            ; preds = %if.end.126
  %184 = bitcast i8** %l_src_ptr to i8*
  call void @llvm.lifetime.start(i64 8, i8* %184) #1
  %185 = load i8*, i8** %p_data.addr, align 8, !tbaa !1
  store i8* %185, i8** %l_src_ptr, align 8, !tbaa !1
  %186 = load i32, i32* %l_start_offset_src, align 4, !tbaa !5
  %187 = load i8*, i8** %l_src_ptr, align 8, !tbaa !1
  %idx.ext140 = sext i32 %186 to i64
  %add.ptr141 = getelementptr inbounds i8, i8* %187, i64 %idx.ext140
  store i8* %add.ptr141, i8** %l_src_ptr, align 8, !tbaa !1
  %188 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp_src, align 8, !tbaa !1
  %sgnd = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %188, i32 0, i32 8
  %189 = load i32, i32* %sgnd, align 4, !tbaa !66
  %tobool142 = icmp ne i32 %189, 0
  br i1 %tobool142, label %if.then.143, label %if.else.162

if.then.143:                                      ; preds = %sw.bb
  store i32 0, i32* %j, align 4, !tbaa !5
  br label %for.cond.144

for.cond.144:                                     ; preds = %for.inc.159, %if.then.143
  %190 = load i32, i32* %j, align 4, !tbaa !5
  %191 = load i32, i32* %l_height_dest, align 4, !tbaa !5
  %cmp145 = icmp ult i32 %190, %191
  br i1 %cmp145, label %for.body.147, label %for.end.161

for.body.147:                                     ; preds = %for.cond.144
  store i32 0, i32* %k, align 4, !tbaa !5
  br label %for.cond.148

for.cond.148:                                     ; preds = %for.inc, %for.body.147
  %192 = load i32, i32* %k, align 4, !tbaa !5
  %193 = load i32, i32* %l_width_dest, align 4, !tbaa !5
  %cmp149 = icmp ult i32 %192, %193
  br i1 %cmp149, label %for.body.151, label %for.end

for.body.151:                                     ; preds = %for.cond.148
  %194 = load i8*, i8** %l_src_ptr, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds i8, i8* %194, i32 1
  store i8* %incdec.ptr, i8** %l_src_ptr, align 8, !tbaa !1
  %195 = load i8, i8* %194, align 1, !tbaa !103
  %conv152 = sext i8 %195 to i32
  %196 = load i32*, i32** %l_dest_ptr, align 8, !tbaa !1
  %incdec.ptr153 = getelementptr inbounds i32, i32* %196, i32 1
  store i32* %incdec.ptr153, i32** %l_dest_ptr, align 8, !tbaa !1
  store i32 %conv152, i32* %196, align 4, !tbaa !5
  br label %for.inc

for.inc:                                          ; preds = %for.body.151
  %197 = load i32, i32* %k, align 4, !tbaa !5
  %inc154 = add i32 %197, 1
  store i32 %inc154, i32* %k, align 4, !tbaa !5
  br label %for.cond.148

for.end:                                          ; preds = %for.cond.148
  %198 = load i32, i32* %l_line_offset_dest, align 4, !tbaa !5
  %199 = load i32*, i32** %l_dest_ptr, align 8, !tbaa !1
  %idx.ext155 = sext i32 %198 to i64
  %add.ptr156 = getelementptr inbounds i32, i32* %199, i64 %idx.ext155
  store i32* %add.ptr156, i32** %l_dest_ptr, align 8, !tbaa !1
  %200 = load i32, i32* %l_line_offset_src, align 4, !tbaa !5
  %201 = load i8*, i8** %l_src_ptr, align 8, !tbaa !1
  %idx.ext157 = sext i32 %200 to i64
  %add.ptr158 = getelementptr inbounds i8, i8* %201, i64 %idx.ext157
  store i8* %add.ptr158, i8** %l_src_ptr, align 8, !tbaa !1
  br label %for.inc.159

for.inc.159:                                      ; preds = %for.end
  %202 = load i32, i32* %j, align 4, !tbaa !5
  %inc160 = add i32 %202, 1
  store i32 %inc160, i32* %j, align 4, !tbaa !5
  br label %for.cond.144

for.end.161:                                      ; preds = %for.cond.144
  br label %if.end.185

if.else.162:                                      ; preds = %sw.bb
  store i32 0, i32* %j, align 4, !tbaa !5
  br label %for.cond.163

for.cond.163:                                     ; preds = %for.inc.182, %if.else.162
  %203 = load i32, i32* %j, align 4, !tbaa !5
  %204 = load i32, i32* %l_height_dest, align 4, !tbaa !5
  %cmp164 = icmp ult i32 %203, %204
  br i1 %cmp164, label %for.body.166, label %for.end.184

for.body.166:                                     ; preds = %for.cond.163
  store i32 0, i32* %k, align 4, !tbaa !5
  br label %for.cond.167

for.cond.167:                                     ; preds = %for.inc.175, %for.body.166
  %205 = load i32, i32* %k, align 4, !tbaa !5
  %206 = load i32, i32* %l_width_dest, align 4, !tbaa !5
  %cmp168 = icmp ult i32 %205, %206
  br i1 %cmp168, label %for.body.170, label %for.end.177

for.body.170:                                     ; preds = %for.cond.167
  %207 = load i8*, i8** %l_src_ptr, align 8, !tbaa !1
  %incdec.ptr171 = getelementptr inbounds i8, i8* %207, i32 1
  store i8* %incdec.ptr171, i8** %l_src_ptr, align 8, !tbaa !1
  %208 = load i8, i8* %207, align 1, !tbaa !103
  %conv172 = sext i8 %208 to i32
  %and173 = and i32 %conv172, 255
  %209 = load i32*, i32** %l_dest_ptr, align 8, !tbaa !1
  %incdec.ptr174 = getelementptr inbounds i32, i32* %209, i32 1
  store i32* %incdec.ptr174, i32** %l_dest_ptr, align 8, !tbaa !1
  store i32 %and173, i32* %209, align 4, !tbaa !5
  br label %for.inc.175

for.inc.175:                                      ; preds = %for.body.170
  %210 = load i32, i32* %k, align 4, !tbaa !5
  %inc176 = add i32 %210, 1
  store i32 %inc176, i32* %k, align 4, !tbaa !5
  br label %for.cond.167

for.end.177:                                      ; preds = %for.cond.167
  %211 = load i32, i32* %l_line_offset_dest, align 4, !tbaa !5
  %212 = load i32*, i32** %l_dest_ptr, align 8, !tbaa !1
  %idx.ext178 = sext i32 %211 to i64
  %add.ptr179 = getelementptr inbounds i32, i32* %212, i64 %idx.ext178
  store i32* %add.ptr179, i32** %l_dest_ptr, align 8, !tbaa !1
  %213 = load i32, i32* %l_line_offset_src, align 4, !tbaa !5
  %214 = load i8*, i8** %l_src_ptr, align 8, !tbaa !1
  %idx.ext180 = sext i32 %213 to i64
  %add.ptr181 = getelementptr inbounds i8, i8* %214, i64 %idx.ext180
  store i8* %add.ptr181, i8** %l_src_ptr, align 8, !tbaa !1
  br label %for.inc.182

for.inc.182:                                      ; preds = %for.end.177
  %215 = load i32, i32* %j, align 4, !tbaa !5
  %inc183 = add i32 %215, 1
  store i32 %inc183, i32* %j, align 4, !tbaa !5
  br label %for.cond.163

for.end.184:                                      ; preds = %for.cond.163
  br label %if.end.185

if.end.185:                                       ; preds = %for.end.184, %for.end.161
  %216 = load i32, i32* %l_end_offset_src, align 4, !tbaa !5
  %217 = load i8*, i8** %l_src_ptr, align 8, !tbaa !1
  %idx.ext186 = sext i32 %216 to i64
  %add.ptr187 = getelementptr inbounds i8, i8* %217, i64 %idx.ext186
  store i8* %add.ptr187, i8** %l_src_ptr, align 8, !tbaa !1
  %218 = load i8*, i8** %l_src_ptr, align 8, !tbaa !1
  store i8* %218, i8** %p_data.addr, align 8, !tbaa !1
  %219 = bitcast i8** %l_src_ptr to i8*
  call void @llvm.lifetime.end(i64 8, i8* %219) #1
  br label %sw.epilog

sw.bb.188:                                        ; preds = %if.end.126
  %220 = bitcast i16** %l_src_ptr189 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %220) #1
  %221 = load i8*, i8** %p_data.addr, align 8, !tbaa !1
  %222 = bitcast i8* %221 to i16*
  store i16* %222, i16** %l_src_ptr189, align 8, !tbaa !1
  %223 = load i32, i32* %l_start_offset_src, align 4, !tbaa !5
  %224 = load i16*, i16** %l_src_ptr189, align 8, !tbaa !1
  %idx.ext190 = sext i32 %223 to i64
  %add.ptr191 = getelementptr inbounds i16, i16* %224, i64 %idx.ext190
  store i16* %add.ptr191, i16** %l_src_ptr189, align 8, !tbaa !1
  %225 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp_src, align 8, !tbaa !1
  %sgnd192 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %225, i32 0, i32 8
  %226 = load i32, i32* %sgnd192, align 4, !tbaa !66
  %tobool193 = icmp ne i32 %226, 0
  br i1 %tobool193, label %if.then.194, label %if.else.216

if.then.194:                                      ; preds = %sw.bb.188
  store i32 0, i32* %j, align 4, !tbaa !5
  br label %for.cond.195

for.cond.195:                                     ; preds = %for.inc.213, %if.then.194
  %227 = load i32, i32* %j, align 4, !tbaa !5
  %228 = load i32, i32* %l_height_dest, align 4, !tbaa !5
  %cmp196 = icmp ult i32 %227, %228
  br i1 %cmp196, label %for.body.198, label %for.end.215

for.body.198:                                     ; preds = %for.cond.195
  store i32 0, i32* %k, align 4, !tbaa !5
  br label %for.cond.199

for.cond.199:                                     ; preds = %for.inc.206, %for.body.198
  %229 = load i32, i32* %k, align 4, !tbaa !5
  %230 = load i32, i32* %l_width_dest, align 4, !tbaa !5
  %cmp200 = icmp ult i32 %229, %230
  br i1 %cmp200, label %for.body.202, label %for.end.208

for.body.202:                                     ; preds = %for.cond.199
  %231 = load i16*, i16** %l_src_ptr189, align 8, !tbaa !1
  %incdec.ptr203 = getelementptr inbounds i16, i16* %231, i32 1
  store i16* %incdec.ptr203, i16** %l_src_ptr189, align 8, !tbaa !1
  %232 = load i16, i16* %231, align 2, !tbaa !262
  %conv204 = sext i16 %232 to i32
  %233 = load i32*, i32** %l_dest_ptr, align 8, !tbaa !1
  %incdec.ptr205 = getelementptr inbounds i32, i32* %233, i32 1
  store i32* %incdec.ptr205, i32** %l_dest_ptr, align 8, !tbaa !1
  store i32 %conv204, i32* %233, align 4, !tbaa !5
  br label %for.inc.206

for.inc.206:                                      ; preds = %for.body.202
  %234 = load i32, i32* %k, align 4, !tbaa !5
  %inc207 = add i32 %234, 1
  store i32 %inc207, i32* %k, align 4, !tbaa !5
  br label %for.cond.199

for.end.208:                                      ; preds = %for.cond.199
  %235 = load i32, i32* %l_line_offset_dest, align 4, !tbaa !5
  %236 = load i32*, i32** %l_dest_ptr, align 8, !tbaa !1
  %idx.ext209 = sext i32 %235 to i64
  %add.ptr210 = getelementptr inbounds i32, i32* %236, i64 %idx.ext209
  store i32* %add.ptr210, i32** %l_dest_ptr, align 8, !tbaa !1
  %237 = load i32, i32* %l_line_offset_src, align 4, !tbaa !5
  %238 = load i16*, i16** %l_src_ptr189, align 8, !tbaa !1
  %idx.ext211 = sext i32 %237 to i64
  %add.ptr212 = getelementptr inbounds i16, i16* %238, i64 %idx.ext211
  store i16* %add.ptr212, i16** %l_src_ptr189, align 8, !tbaa !1
  br label %for.inc.213

for.inc.213:                                      ; preds = %for.end.208
  %239 = load i32, i32* %j, align 4, !tbaa !5
  %inc214 = add i32 %239, 1
  store i32 %inc214, i32* %j, align 4, !tbaa !5
  br label %for.cond.195

for.end.215:                                      ; preds = %for.cond.195
  br label %if.end.239

if.else.216:                                      ; preds = %sw.bb.188
  store i32 0, i32* %j, align 4, !tbaa !5
  br label %for.cond.217

for.cond.217:                                     ; preds = %for.inc.236, %if.else.216
  %240 = load i32, i32* %j, align 4, !tbaa !5
  %241 = load i32, i32* %l_height_dest, align 4, !tbaa !5
  %cmp218 = icmp ult i32 %240, %241
  br i1 %cmp218, label %for.body.220, label %for.end.238

for.body.220:                                     ; preds = %for.cond.217
  store i32 0, i32* %k, align 4, !tbaa !5
  br label %for.cond.221

for.cond.221:                                     ; preds = %for.inc.229, %for.body.220
  %242 = load i32, i32* %k, align 4, !tbaa !5
  %243 = load i32, i32* %l_width_dest, align 4, !tbaa !5
  %cmp222 = icmp ult i32 %242, %243
  br i1 %cmp222, label %for.body.224, label %for.end.231

for.body.224:                                     ; preds = %for.cond.221
  %244 = load i16*, i16** %l_src_ptr189, align 8, !tbaa !1
  %incdec.ptr225 = getelementptr inbounds i16, i16* %244, i32 1
  store i16* %incdec.ptr225, i16** %l_src_ptr189, align 8, !tbaa !1
  %245 = load i16, i16* %244, align 2, !tbaa !262
  %conv226 = sext i16 %245 to i32
  %and227 = and i32 %conv226, 65535
  %246 = load i32*, i32** %l_dest_ptr, align 8, !tbaa !1
  %incdec.ptr228 = getelementptr inbounds i32, i32* %246, i32 1
  store i32* %incdec.ptr228, i32** %l_dest_ptr, align 8, !tbaa !1
  store i32 %and227, i32* %246, align 4, !tbaa !5
  br label %for.inc.229

for.inc.229:                                      ; preds = %for.body.224
  %247 = load i32, i32* %k, align 4, !tbaa !5
  %inc230 = add i32 %247, 1
  store i32 %inc230, i32* %k, align 4, !tbaa !5
  br label %for.cond.221

for.end.231:                                      ; preds = %for.cond.221
  %248 = load i32, i32* %l_line_offset_dest, align 4, !tbaa !5
  %249 = load i32*, i32** %l_dest_ptr, align 8, !tbaa !1
  %idx.ext232 = sext i32 %248 to i64
  %add.ptr233 = getelementptr inbounds i32, i32* %249, i64 %idx.ext232
  store i32* %add.ptr233, i32** %l_dest_ptr, align 8, !tbaa !1
  %250 = load i32, i32* %l_line_offset_src, align 4, !tbaa !5
  %251 = load i16*, i16** %l_src_ptr189, align 8, !tbaa !1
  %idx.ext234 = sext i32 %250 to i64
  %add.ptr235 = getelementptr inbounds i16, i16* %251, i64 %idx.ext234
  store i16* %add.ptr235, i16** %l_src_ptr189, align 8, !tbaa !1
  br label %for.inc.236

for.inc.236:                                      ; preds = %for.end.231
  %252 = load i32, i32* %j, align 4, !tbaa !5
  %inc237 = add i32 %252, 1
  store i32 %inc237, i32* %j, align 4, !tbaa !5
  br label %for.cond.217

for.end.238:                                      ; preds = %for.cond.217
  br label %if.end.239

if.end.239:                                       ; preds = %for.end.238, %for.end.215
  %253 = load i32, i32* %l_end_offset_src, align 4, !tbaa !5
  %254 = load i16*, i16** %l_src_ptr189, align 8, !tbaa !1
  %idx.ext240 = sext i32 %253 to i64
  %add.ptr241 = getelementptr inbounds i16, i16* %254, i64 %idx.ext240
  store i16* %add.ptr241, i16** %l_src_ptr189, align 8, !tbaa !1
  %255 = load i16*, i16** %l_src_ptr189, align 8, !tbaa !1
  %256 = bitcast i16* %255 to i8*
  store i8* %256, i8** %p_data.addr, align 8, !tbaa !1
  %257 = bitcast i16** %l_src_ptr189 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %257) #1
  br label %sw.epilog

sw.bb.242:                                        ; preds = %if.end.126
  %258 = bitcast i32** %l_src_ptr243 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %258) #1
  %259 = load i8*, i8** %p_data.addr, align 8, !tbaa !1
  %260 = bitcast i8* %259 to i32*
  store i32* %260, i32** %l_src_ptr243, align 8, !tbaa !1
  %261 = load i32, i32* %l_start_offset_src, align 4, !tbaa !5
  %262 = load i32*, i32** %l_src_ptr243, align 8, !tbaa !1
  %idx.ext244 = sext i32 %261 to i64
  %add.ptr245 = getelementptr inbounds i32, i32* %262, i64 %idx.ext244
  store i32* %add.ptr245, i32** %l_src_ptr243, align 8, !tbaa !1
  store i32 0, i32* %j, align 4, !tbaa !5
  br label %for.cond.246

for.cond.246:                                     ; preds = %for.inc.263, %sw.bb.242
  %263 = load i32, i32* %j, align 4, !tbaa !5
  %264 = load i32, i32* %l_height_dest, align 4, !tbaa !5
  %cmp247 = icmp ult i32 %263, %264
  br i1 %cmp247, label %for.body.249, label %for.end.265

for.body.249:                                     ; preds = %for.cond.246
  store i32 0, i32* %k, align 4, !tbaa !5
  br label %for.cond.250

for.cond.250:                                     ; preds = %for.inc.256, %for.body.249
  %265 = load i32, i32* %k, align 4, !tbaa !5
  %266 = load i32, i32* %l_width_dest, align 4, !tbaa !5
  %cmp251 = icmp ult i32 %265, %266
  br i1 %cmp251, label %for.body.253, label %for.end.258

for.body.253:                                     ; preds = %for.cond.250
  %267 = load i32*, i32** %l_src_ptr243, align 8, !tbaa !1
  %incdec.ptr254 = getelementptr inbounds i32, i32* %267, i32 1
  store i32* %incdec.ptr254, i32** %l_src_ptr243, align 8, !tbaa !1
  %268 = load i32, i32* %267, align 4, !tbaa !5
  %269 = load i32*, i32** %l_dest_ptr, align 8, !tbaa !1
  %incdec.ptr255 = getelementptr inbounds i32, i32* %269, i32 1
  store i32* %incdec.ptr255, i32** %l_dest_ptr, align 8, !tbaa !1
  store i32 %268, i32* %269, align 4, !tbaa !5
  br label %for.inc.256

for.inc.256:                                      ; preds = %for.body.253
  %270 = load i32, i32* %k, align 4, !tbaa !5
  %inc257 = add i32 %270, 1
  store i32 %inc257, i32* %k, align 4, !tbaa !5
  br label %for.cond.250

for.end.258:                                      ; preds = %for.cond.250
  %271 = load i32, i32* %l_line_offset_dest, align 4, !tbaa !5
  %272 = load i32*, i32** %l_dest_ptr, align 8, !tbaa !1
  %idx.ext259 = sext i32 %271 to i64
  %add.ptr260 = getelementptr inbounds i32, i32* %272, i64 %idx.ext259
  store i32* %add.ptr260, i32** %l_dest_ptr, align 8, !tbaa !1
  %273 = load i32, i32* %l_line_offset_src, align 4, !tbaa !5
  %274 = load i32*, i32** %l_src_ptr243, align 8, !tbaa !1
  %idx.ext261 = sext i32 %273 to i64
  %add.ptr262 = getelementptr inbounds i32, i32* %274, i64 %idx.ext261
  store i32* %add.ptr262, i32** %l_src_ptr243, align 8, !tbaa !1
  br label %for.inc.263

for.inc.263:                                      ; preds = %for.end.258
  %275 = load i32, i32* %j, align 4, !tbaa !5
  %inc264 = add i32 %275, 1
  store i32 %inc264, i32* %j, align 4, !tbaa !5
  br label %for.cond.246

for.end.265:                                      ; preds = %for.cond.246
  %276 = load i32, i32* %l_end_offset_src, align 4, !tbaa !5
  %277 = load i32*, i32** %l_src_ptr243, align 8, !tbaa !1
  %idx.ext266 = sext i32 %276 to i64
  %add.ptr267 = getelementptr inbounds i32, i32* %277, i64 %idx.ext266
  store i32* %add.ptr267, i32** %l_src_ptr243, align 8, !tbaa !1
  %278 = load i32*, i32** %l_src_ptr243, align 8, !tbaa !1
  %279 = bitcast i32* %278 to i8*
  store i8* %279, i8** %p_data.addr, align 8, !tbaa !1
  %280 = bitcast i32** %l_src_ptr243 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %280) #1
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end.126, %for.end.265, %if.end.239, %if.end.185
  %281 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp_dest, align 8, !tbaa !1
  %incdec.ptr268 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %281, i32 1
  store %struct.opj_image_comp* %incdec.ptr268, %struct.opj_image_comp** %l_img_comp_dest, align 8, !tbaa !1
  %282 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp_src, align 8, !tbaa !1
  %incdec.ptr269 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %282, i32 1
  store %struct.opj_image_comp* %incdec.ptr269, %struct.opj_image_comp** %l_img_comp_src, align 8, !tbaa !1
  %283 = load %struct.opj_tcd_tilecomp*, %struct.opj_tcd_tilecomp** %l_tilec, align 8, !tbaa !1
  %incdec.ptr270 = getelementptr inbounds %struct.opj_tcd_tilecomp, %struct.opj_tcd_tilecomp* %283, i32 1
  store %struct.opj_tcd_tilecomp* %incdec.ptr270, %struct.opj_tcd_tilecomp** %l_tilec, align 8, !tbaa !1
  br label %for.inc.271

for.inc.271:                                      ; preds = %sw.epilog
  %284 = load i32, i32* %i, align 4, !tbaa !5
  %inc272 = add i32 %284, 1
  store i32 %inc272, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.end.273:                                      ; preds = %for.cond
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %for.end.273, %if.then.125, %if.then.118, %if.then.18
  %285 = bitcast %struct.opj_tcd_resolution** %l_res to i8*
  call void @llvm.lifetime.end(i64 8, i8* %285) #1
  %286 = bitcast i32** %l_dest_ptr to i8*
  call void @llvm.lifetime.end(i64 8, i8* %286) #1
  %287 = bitcast i32* %l_remaining to i8*
  call void @llvm.lifetime.end(i64 4, i8* %287) #1
  %288 = bitcast i32* %l_size_comp to i8*
  call void @llvm.lifetime.end(i64 4, i8* %288) #1
  %289 = bitcast %struct.opj_image** %l_image_src to i8*
  call void @llvm.lifetime.end(i64 8, i8* %289) #1
  %290 = bitcast %struct.opj_tcd_tilecomp** %l_tilec to i8*
  call void @llvm.lifetime.end(i64 8, i8* %290) #1
  %291 = bitcast %struct.opj_image_comp** %l_img_comp_dest to i8*
  call void @llvm.lifetime.end(i64 8, i8* %291) #1
  %292 = bitcast %struct.opj_image_comp** %l_img_comp_src to i8*
  call void @llvm.lifetime.end(i64 8, i8* %292) #1
  %293 = bitcast i32* %l_line_offset_dest to i8*
  call void @llvm.lifetime.end(i64 4, i8* %293) #1
  %294 = bitcast i32* %l_start_offset_dest to i8*
  call void @llvm.lifetime.end(i64 4, i8* %294) #1
  %295 = bitcast i32* %l_y1_dest to i8*
  call void @llvm.lifetime.end(i64 4, i8* %295) #1
  %296 = bitcast i32* %l_x1_dest to i8*
  call void @llvm.lifetime.end(i64 4, i8* %296) #1
  %297 = bitcast i32* %l_y0_dest to i8*
  call void @llvm.lifetime.end(i64 4, i8* %297) #1
  %298 = bitcast i32* %l_x0_dest to i8*
  call void @llvm.lifetime.end(i64 4, i8* %298) #1
  %299 = bitcast i32* %l_start_y_dest to i8*
  call void @llvm.lifetime.end(i64 4, i8* %299) #1
  %300 = bitcast i32* %l_start_x_dest to i8*
  call void @llvm.lifetime.end(i64 4, i8* %300) #1
  %301 = bitcast i32* %l_end_offset_src to i8*
  call void @llvm.lifetime.end(i64 4, i8* %301) #1
  %302 = bitcast i32* %l_line_offset_src to i8*
  call void @llvm.lifetime.end(i64 4, i8* %302) #1
  %303 = bitcast i32* %l_start_offset_src to i8*
  call void @llvm.lifetime.end(i64 4, i8* %303) #1
  %304 = bitcast i32* %l_offset_y1_src to i8*
  call void @llvm.lifetime.end(i64 4, i8* %304) #1
  %305 = bitcast i32* %l_offset_x1_src to i8*
  call void @llvm.lifetime.end(i64 4, i8* %305) #1
  %306 = bitcast i32* %l_offset_y0_src to i8*
  call void @llvm.lifetime.end(i64 4, i8* %306) #1
  %307 = bitcast i32* %l_offset_x0_src to i8*
  call void @llvm.lifetime.end(i64 4, i8* %307) #1
  %308 = bitcast i32* %l_height_dest to i8*
  call void @llvm.lifetime.end(i64 4, i8* %308) #1
  %309 = bitcast i32* %l_width_dest to i8*
  call void @llvm.lifetime.end(i64 4, i8* %309) #1
  %310 = bitcast i32* %l_height_src to i8*
  call void @llvm.lifetime.end(i64 4, i8* %310) #1
  %311 = bitcast i32* %l_width_src to i8*
  call void @llvm.lifetime.end(i64 4, i8* %311) #1
  %312 = bitcast i32* %k to i8*
  call void @llvm.lifetime.end(i64 4, i8* %312) #1
  %313 = bitcast i32* %j to i8*
  call void @llvm.lifetime.end(i64 4, i8* %313) #1
  %314 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %314) #1
  %315 = load i32, i32* %retval
  ret i32 %315
}

; Function Attrs: nounwind uwtable
define internal i32 @opj_j2k_decode_one_tile(%struct.opj_j2k* %p_j2k, %struct.opj_stream_private* %p_stream, %struct.opj_event_mgr* %p_manager) #0 {
entry:
  %retval = alloca i32, align 4
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %p_stream.addr = alloca %struct.opj_stream_private*, align 8
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  %l_go_on = alloca i32, align 4
  %l_current_tile_no = alloca i32, align 4
  %l_tile_no_to_dec = alloca i32, align 4
  %l_data_size = alloca i32, align 4
  %l_max_data_size = alloca i32, align 4
  %l_tile_x0 = alloca i32, align 4
  %l_tile_y0 = alloca i32, align 4
  %l_tile_x1 = alloca i32, align 4
  %l_tile_y1 = alloca i32, align 4
  %l_nb_comps = alloca i32, align 4
  %l_current_data = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  %l_new_current_data = alloca i8*, align 8
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store %struct.opj_stream_private* %p_stream, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %0 = bitcast i32* %l_go_on to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  store i32 1, i32* %l_go_on, align 4, !tbaa !5
  %1 = bitcast i32* %l_current_tile_no to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = bitcast i32* %l_tile_no_to_dec to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #1
  %3 = bitcast i32* %l_data_size to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #1
  %4 = bitcast i32* %l_max_data_size to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #1
  %5 = bitcast i32* %l_tile_x0 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #1
  %6 = bitcast i32* %l_tile_y0 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %6) #1
  %7 = bitcast i32* %l_tile_x1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %7) #1
  %8 = bitcast i32* %l_tile_y1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %8) #1
  %9 = bitcast i32* %l_nb_comps to i8*
  call void @llvm.lifetime.start(i64 4, i8* %9) #1
  %10 = bitcast i8** %l_current_data to i8*
  call void @llvm.lifetime.start(i64 8, i8* %10) #1
  %call = call noalias i8* @malloc(i64 1000) #9
  store i8* %call, i8** %l_current_data, align 8, !tbaa !1
  %11 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %tobool = icmp ne i8* %11, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %12 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call1 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %12, i32 1, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.167, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.98

if.end:                                           ; preds = %entry
  store i32 1000, i32* %l_max_data_size, align 4, !tbaa !5
  %13 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cstr_index = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %13, i32 0, i32 7
  %14 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index, align 8, !tbaa !29
  %tile_index = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %14, i32 0, i32 7
  %15 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index, align 8, !tbaa !30
  %tobool2 = icmp ne %struct.opj_tile_index* %15, null
  br i1 %tobool2, label %if.end.8, label %if.then.3

if.then.3:                                        ; preds = %if.end
  %16 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %call4 = call i32 @opj_j2k_allocate_tile_element_cstr_index(%struct.opj_j2k* %16) #7
  %tobool5 = icmp ne i32 %call4, 0
  br i1 %tobool5, label %if.end.7, label %if.then.6

if.then.6:                                        ; preds = %if.then.3
  %17 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  call void @free(i8* %17) #9
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.98

if.end.7:                                         ; preds = %if.then.3
  br label %if.end.8

if.end.8:                                         ; preds = %if.end.7, %if.end
  %18 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %18, i32 0, i32 1
  %m_decoder = bitcast %union.anon* %m_specific_param to %struct.opj_j2k_dec*
  %m_tile_ind_to_dec = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder, i32 0, i32 13
  %19 = load i32, i32* %m_tile_ind_to_dec, align 4, !tbaa !24
  store i32 %19, i32* %l_tile_no_to_dec, align 4, !tbaa !5
  %20 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cstr_index9 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %20, i32 0, i32 7
  %21 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index9, align 8, !tbaa !29
  %tile_index10 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %21, i32 0, i32 7
  %22 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index10, align 8, !tbaa !30
  %tobool11 = icmp ne %struct.opj_tile_index* %22, null
  br i1 %tobool11, label %if.then.12, label %if.end.49

if.then.12:                                       ; preds = %if.end.8
  %23 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cstr_index13 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %23, i32 0, i32 7
  %24 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index13, align 8, !tbaa !29
  %tile_index14 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %24, i32 0, i32 7
  %25 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index14, align 8, !tbaa !30
  %tp_index = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %25, i32 0, i32 4
  %26 = load %struct.opj_tp_index*, %struct.opj_tp_index** %tp_index, align 8, !tbaa !37
  %tobool15 = icmp ne %struct.opj_tp_index* %26, null
  br i1 %tobool15, label %if.then.16, label %if.end.48

if.then.16:                                       ; preds = %if.then.12
  %27 = load i32, i32* %l_tile_no_to_dec, align 4, !tbaa !5
  %idxprom = zext i32 %27 to i64
  %28 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cstr_index17 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %28, i32 0, i32 7
  %29 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index17, align 8, !tbaa !29
  %tile_index18 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %29, i32 0, i32 7
  %30 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index18, align 8, !tbaa !30
  %arrayidx = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %30, i64 %idxprom
  %nb_tps = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx, i32 0, i32 1
  %31 = load i32, i32* %nb_tps, align 4, !tbaa !35
  %tobool19 = icmp ne i32 %31, 0
  br i1 %tobool19, label %if.else, label %if.then.20

if.then.20:                                       ; preds = %if.then.16
  %32 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %33 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param21 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %33, i32 0, i32 1
  %m_decoder22 = bitcast %union.anon* %m_specific_param21 to %struct.opj_j2k_dec*
  %m_last_sot_read_pos = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder22, i32 0, i32 14
  %34 = load i64, i64* %m_last_sot_read_pos, align 8, !tbaa !188
  %add = add nsw i64 %34, 2
  %35 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call23 = call i32 @opj_stream_read_seek(%struct.opj_stream_private* %32, i64 %add, %struct.opj_event_mgr* %35) #7
  %tobool24 = icmp ne i32 %call23, 0
  br i1 %tobool24, label %if.end.27, label %if.then.25

if.then.25:                                       ; preds = %if.then.20
  %36 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call26 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %36, i32 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.168, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.98

if.end.27:                                        ; preds = %if.then.20
  br label %if.end.40

if.else:                                          ; preds = %if.then.16
  %37 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %38 = load i32, i32* %l_tile_no_to_dec, align 4, !tbaa !5
  %idxprom28 = zext i32 %38 to i64
  %39 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cstr_index29 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %39, i32 0, i32 7
  %40 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index29, align 8, !tbaa !29
  %tile_index30 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %40, i32 0, i32 7
  %41 = load %struct.opj_tile_index*, %struct.opj_tile_index** %tile_index30, align 8, !tbaa !30
  %arrayidx31 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %41, i64 %idxprom28
  %tp_index32 = getelementptr inbounds %struct.opj_tile_index, %struct.opj_tile_index* %arrayidx31, i32 0, i32 4
  %42 = load %struct.opj_tp_index*, %struct.opj_tp_index** %tp_index32, align 8, !tbaa !37
  %arrayidx33 = getelementptr inbounds %struct.opj_tp_index, %struct.opj_tp_index* %42, i64 0
  %start_pos = getelementptr inbounds %struct.opj_tp_index, %struct.opj_tp_index* %arrayidx33, i32 0, i32 0
  %43 = load i64, i64* %start_pos, align 8, !tbaa !204
  %add34 = add nsw i64 %43, 2
  %44 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call35 = call i32 @opj_stream_read_seek(%struct.opj_stream_private* %37, i64 %add34, %struct.opj_event_mgr* %44) #7
  %tobool36 = icmp ne i32 %call35, 0
  br i1 %tobool36, label %if.end.39, label %if.then.37

if.then.37:                                       ; preds = %if.else
  %45 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call38 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %45, i32 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.168, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.98

if.end.39:                                        ; preds = %if.else
  br label %if.end.40

if.end.40:                                        ; preds = %if.end.39, %if.end.27
  %46 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param41 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %46, i32 0, i32 1
  %m_decoder42 = bitcast %union.anon* %m_specific_param41 to %struct.opj_j2k_dec*
  %m_state = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder42, i32 0, i32 0
  %47 = load i32, i32* %m_state, align 4, !tbaa !23
  %cmp = icmp eq i32 %47, 256
  br i1 %cmp, label %if.then.43, label %if.end.47

if.then.43:                                       ; preds = %if.end.40
  %48 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param44 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %48, i32 0, i32 1
  %m_decoder45 = bitcast %union.anon* %m_specific_param44 to %struct.opj_j2k_dec*
  %m_state46 = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder45, i32 0, i32 0
  store i32 8, i32* %m_state46, align 4, !tbaa !23
  br label %if.end.47

if.end.47:                                        ; preds = %if.then.43, %if.end.40
  br label %if.end.48

if.end.48:                                        ; preds = %if.end.47, %if.then.12
  br label %if.end.49

if.end.49:                                        ; preds = %if.end.48, %if.end.8
  br label %while.cond

while.cond:                                       ; preds = %if.end.97, %if.end.49
  br label %while.body

while.body:                                       ; preds = %while.cond
  %49 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %50 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %51 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call50 = call i32 @opj_j2k_read_tile_header(%struct.opj_j2k* %49, i32* %l_current_tile_no, i32* %l_data_size, i32* %l_tile_x0, i32* %l_tile_y0, i32* %l_tile_x1, i32* %l_tile_y1, i32* %l_nb_comps, i32* %l_go_on, %struct.opj_stream_private* %50, %struct.opj_event_mgr* %51) #7
  %tobool51 = icmp ne i32 %call50, 0
  br i1 %tobool51, label %if.end.53, label %if.then.52

if.then.52:                                       ; preds = %while.body
  %52 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  call void @free(i8* %52) #9
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.98

if.end.53:                                        ; preds = %while.body
  %53 = load i32, i32* %l_go_on, align 4, !tbaa !5
  %tobool54 = icmp ne i32 %53, 0
  br i1 %tobool54, label %if.end.56, label %if.then.55

if.then.55:                                       ; preds = %if.end.53
  br label %while.end

if.end.56:                                        ; preds = %if.end.53
  %54 = load i32, i32* %l_data_size, align 4, !tbaa !5
  %55 = load i32, i32* %l_max_data_size, align 4, !tbaa !5
  %cmp57 = icmp ugt i32 %54, %55
  br i1 %cmp57, label %if.then.58, label %if.end.68

if.then.58:                                       ; preds = %if.end.56
  %56 = bitcast i8** %l_new_current_data to i8*
  call void @llvm.lifetime.start(i64 8, i8* %56) #1
  %57 = load i32, i32* %l_data_size, align 4, !tbaa !5
  %conv = zext i32 %57 to i64
  %cmp59 = icmp uge i64 %conv, -256
  br i1 %cmp59, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then.58
  br label %cond.end

cond.false:                                       ; preds = %if.then.58
  %58 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %59 = load i32, i32* %l_data_size, align 4, !tbaa !5
  %conv61 = zext i32 %59 to i64
  %call62 = call i8* @realloc(i8* %58, i64 %conv61) #9
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ null, %cond.true ], [ %call62, %cond.false ]
  store i8* %cond, i8** %l_new_current_data, align 8, !tbaa !1
  %60 = load i8*, i8** %l_new_current_data, align 8, !tbaa !1
  %tobool63 = icmp ne i8* %60, null
  br i1 %tobool63, label %if.end.67, label %if.then.64

if.then.64:                                       ; preds = %cond.end
  %61 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  call void @free(i8* %61) #9
  store i8* null, i8** %l_current_data, align 8, !tbaa !1
  %62 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %63 = load i32, i32* %l_current_tile_no, align 4, !tbaa !5
  %64 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %64, i32 0, i32 4
  %th = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp, i32 0, i32 7
  %65 = load i32, i32* %th, align 4, !tbaa !177
  %66 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp65 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %66, i32 0, i32 4
  %tw = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp65, i32 0, i32 6
  %67 = load i32, i32* %tw, align 4, !tbaa !176
  %mul = mul i32 %65, %67
  %sub = sub i32 %mul, 1
  %call66 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %62, i32 1, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.162, i32 0, i32 0), i32 %63, i32 %sub) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.67:                                        ; preds = %cond.end
  %68 = load i8*, i8** %l_new_current_data, align 8, !tbaa !1
  store i8* %68, i8** %l_current_data, align 8, !tbaa !1
  %69 = load i32, i32* %l_data_size, align 4, !tbaa !5
  store i32 %69, i32* %l_max_data_size, align 4, !tbaa !5
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.67, %if.then.64
  %70 = bitcast i8** %l_new_current_data to i8*
  call void @llvm.lifetime.end(i64 8, i8* %70) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.98 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.68

if.end.68:                                        ; preds = %cleanup.cont, %if.end.56
  %71 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %72 = load i32, i32* %l_current_tile_no, align 4, !tbaa !5
  %73 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %74 = load i32, i32* %l_data_size, align 4, !tbaa !5
  %75 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %76 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call69 = call i32 @opj_j2k_decode_tile(%struct.opj_j2k* %71, i32 %72, i8* %73, i32 %74, %struct.opj_stream_private* %75, %struct.opj_event_mgr* %76) #7
  %tobool70 = icmp ne i32 %call69, 0
  br i1 %tobool70, label %if.end.72, label %if.then.71

if.then.71:                                       ; preds = %if.end.68
  %77 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  call void @free(i8* %77) #9
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.98

if.end.72:                                        ; preds = %if.end.68
  %78 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %79 = load i32, i32* %l_current_tile_no, align 4, !tbaa !5
  %80 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp73 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %80, i32 0, i32 4
  %th74 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp73, i32 0, i32 7
  %81 = load i32, i32* %th74, align 4, !tbaa !177
  %82 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp75 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %82, i32 0, i32 4
  %tw76 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp75, i32 0, i32 6
  %83 = load i32, i32* %tw76, align 4, !tbaa !176
  %mul77 = mul i32 %81, %83
  %sub78 = sub i32 %mul77, 1
  %call79 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %78, i32 4, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.163, i32 0, i32 0), i32 %79, i32 %sub78) #7
  %84 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_tcd = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %84, i32 0, i32 9
  %85 = load %struct.opj_tcd*, %struct.opj_tcd** %m_tcd, align 8, !tbaa !120
  %86 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %87 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_output_image = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %87, i32 0, i32 3
  %88 = load %struct.opj_image*, %struct.opj_image** %m_output_image, align 8, !tbaa !121
  %call80 = call i32 @opj_j2k_update_image_data(%struct.opj_tcd* %85, i8* %86, %struct.opj_image* %88) #7
  %tobool81 = icmp ne i32 %call80, 0
  br i1 %tobool81, label %if.end.83, label %if.then.82

if.then.82:                                       ; preds = %if.end.72
  %89 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  call void @free(i8* %89) #9
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.98

if.end.83:                                        ; preds = %if.end.72
  %90 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %91 = load i32, i32* %l_current_tile_no, align 4, !tbaa !5
  %call84 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %90, i32 4, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.164, i32 0, i32 0), i32 %91) #7
  %92 = load i32, i32* %l_current_tile_no, align 4, !tbaa !5
  %93 = load i32, i32* %l_tile_no_to_dec, align 4, !tbaa !5
  %cmp85 = icmp eq i32 %92, %93
  br i1 %cmp85, label %if.then.87, label %if.else.95

if.then.87:                                       ; preds = %if.end.83
  %94 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %95 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cstr_index88 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %95, i32 0, i32 7
  %96 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index88, align 8, !tbaa !29
  %main_head_end = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %96, i32 0, i32 1
  %97 = load i64, i64* %main_head_end, align 8, !tbaa !223
  %add89 = add nsw i64 %97, 2
  %98 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call90 = call i32 @opj_stream_read_seek(%struct.opj_stream_private* %94, i64 %add89, %struct.opj_event_mgr* %98) #7
  %tobool91 = icmp ne i32 %call90, 0
  br i1 %tobool91, label %if.end.94, label %if.then.92

if.then.92:                                       ; preds = %if.then.87
  %99 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call93 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %99, i32 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.168, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.98

if.end.94:                                        ; preds = %if.then.87
  br label %while.end

if.else.95:                                       ; preds = %if.end.83
  %100 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %101 = load i32, i32* %l_current_tile_no, align 4, !tbaa !5
  %102 = load i32, i32* %l_tile_no_to_dec, align 4, !tbaa !5
  %call96 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %100, i32 2, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.169, i32 0, i32 0), i32 %101, i32 %102) #7
  br label %if.end.97

if.end.97:                                        ; preds = %if.else.95
  br label %while.cond

while.end:                                        ; preds = %if.end.94, %if.then.55
  %103 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  call void @free(i8* %103) #9
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.98

cleanup.98:                                       ; preds = %while.end, %if.then.92, %if.then.82, %if.then.71, %cleanup, %if.then.52, %if.then.37, %if.then.25, %if.then.6, %if.then
  %104 = bitcast i8** %l_current_data to i8*
  call void @llvm.lifetime.end(i64 8, i8* %104) #1
  %105 = bitcast i32* %l_nb_comps to i8*
  call void @llvm.lifetime.end(i64 4, i8* %105) #1
  %106 = bitcast i32* %l_tile_y1 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %106) #1
  %107 = bitcast i32* %l_tile_x1 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %107) #1
  %108 = bitcast i32* %l_tile_y0 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %108) #1
  %109 = bitcast i32* %l_tile_x0 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %109) #1
  %110 = bitcast i32* %l_max_data_size to i8*
  call void @llvm.lifetime.end(i64 4, i8* %110) #1
  %111 = bitcast i32* %l_data_size to i8*
  call void @llvm.lifetime.end(i64 4, i8* %111) #1
  %112 = bitcast i32* %l_tile_no_to_dec to i8*
  call void @llvm.lifetime.end(i64 4, i8* %112) #1
  %113 = bitcast i32* %l_current_tile_no to i8*
  call void @llvm.lifetime.end(i64 4, i8* %113) #1
  %114 = bitcast i32* %l_go_on to i8*
  call void @llvm.lifetime.end(i64 4, i8* %114) #1
  %115 = load i32, i32* %retval
  ret i32 %115
}

declare i32 @opj_stream_read_seek(%struct.opj_stream_private*, i64, %struct.opj_event_mgr*) #3

declare i32 @opj_tcd_init_encode_tile(%struct.opj_tcd*, i32) #3

declare i32 @opj_tcd_copy_tile_data(%struct.opj_tcd*, i8*, i32) #3

; Function Attrs: nounwind uwtable
define internal i32 @opj_j2k_write_first_tile_part(%struct.opj_j2k* %p_j2k, i8* %p_data, i32* %p_data_written, i32 %p_total_data_size, %struct.opj_stream_private* %p_stream, %struct.opj_event_mgr* %p_manager) #0 {
entry:
  %retval = alloca i32, align 4
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %p_data.addr = alloca i8*, align 8
  %p_data_written.addr = alloca i32*, align 8
  %p_total_data_size.addr = alloca i32, align 4
  %p_stream.addr = alloca %struct.opj_stream_private*, align 8
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  %compno = alloca i32, align 4
  %l_nb_bytes_written = alloca i32, align 4
  %l_current_nb_bytes_written = alloca i32, align 4
  %l_begin_data = alloca i8*, align 8
  %l_tcd = alloca %struct.opj_tcd*, align 8
  %l_cp = alloca %struct.opj_cp*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store i8* %p_data, i8** %p_data.addr, align 8, !tbaa !1
  store i32* %p_data_written, i32** %p_data_written.addr, align 8, !tbaa !1
  store i32 %p_total_data_size, i32* %p_total_data_size.addr, align 4, !tbaa !5
  store %struct.opj_stream_private* %p_stream, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %0 = bitcast i32* %compno to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast i32* %l_nb_bytes_written to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  store i32 0, i32* %l_nb_bytes_written, align 4, !tbaa !5
  %2 = bitcast i32* %l_current_nb_bytes_written to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #1
  %3 = bitcast i8** %l_begin_data to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #1
  store i8* null, i8** %l_begin_data, align 8, !tbaa !1
  %4 = bitcast %struct.opj_tcd** %l_tcd to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4) #1
  store %struct.opj_tcd* null, %struct.opj_tcd** %l_tcd, align 8, !tbaa !1
  %5 = bitcast %struct.opj_cp** %l_cp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5) #1
  store %struct.opj_cp* null, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %6 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_tcd = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %6, i32 0, i32 9
  %7 = load %struct.opj_tcd*, %struct.opj_tcd** %m_tcd, align 8, !tbaa !120
  store %struct.opj_tcd* %7, %struct.opj_tcd** %l_tcd, align 8, !tbaa !1
  %8 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %8, i32 0, i32 4
  store %struct.opj_cp* %m_cp, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %9 = load %struct.opj_tcd*, %struct.opj_tcd** %l_tcd, align 8, !tbaa !1
  %cur_pino = getelementptr inbounds %struct.opj_tcd, %struct.opj_tcd* %9, i32 0, i32 4
  store i32 0, i32* %cur_pino, align 4, !tbaa !272
  %10 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %10, i32 0, i32 1
  %m_encoder = bitcast %union.anon* %m_specific_param to %struct.opj_j2k_enc*
  %m_current_poc_tile_part_number = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder, i32 0, i32 0
  store i32 0, i32* %m_current_poc_tile_part_number, align 4, !tbaa !254
  store i32 0, i32* %l_current_nb_bytes_written, align 4, !tbaa !5
  %11 = load i8*, i8** %p_data.addr, align 8, !tbaa !1
  store i8* %11, i8** %l_begin_data, align 8, !tbaa !1
  %12 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %13 = load i8*, i8** %p_data.addr, align 8, !tbaa !1
  %14 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %15 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call = call i32 @opj_j2k_write_sot(%struct.opj_j2k* %12, i8* %13, i32* %l_current_nb_bytes_written, %struct.opj_stream_private* %14, %struct.opj_event_mgr* %15) #7
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %16 = load i32, i32* %l_current_nb_bytes_written, align 4, !tbaa !5
  %17 = load i32, i32* %l_nb_bytes_written, align 4, !tbaa !5
  %add = add i32 %17, %16
  store i32 %add, i32* %l_nb_bytes_written, align 4, !tbaa !5
  %18 = load i32, i32* %l_current_nb_bytes_written, align 4, !tbaa !5
  %19 = load i8*, i8** %p_data.addr, align 8, !tbaa !1
  %idx.ext = zext i32 %18 to i64
  %add.ptr = getelementptr inbounds i8, i8* %19, i64 %idx.ext
  store i8* %add.ptr, i8** %p_data.addr, align 8, !tbaa !1
  %20 = load i32, i32* %l_current_nb_bytes_written, align 4, !tbaa !5
  %21 = load i32, i32* %p_total_data_size.addr, align 4, !tbaa !5
  %sub = sub i32 %21, %20
  store i32 %sub, i32* %p_total_data_size.addr, align 4, !tbaa !5
  %22 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %m_specific_param1 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %22, i32 0, i32 18
  %m_enc = bitcast %union.anon.0* %m_specific_param1 to %struct.opj_encoding_param*
  %m_cinema = getelementptr inbounds %struct.opj_encoding_param, %struct.opj_encoding_param* %m_enc, i32 0, i32 0
  %23 = load i32, i32* %m_cinema, align 4, !tbaa !124
  %cmp = icmp eq i32 %23, 0
  br i1 %cmp, label %if.then.2, label %if.end.19

if.then.2:                                        ; preds = %if.end
  store i32 1, i32* %compno, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then.2
  %24 = load i32, i32* %compno, align 4, !tbaa !5
  %25 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_private_image = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %25, i32 0, i32 2
  %26 = load %struct.opj_image*, %struct.opj_image** %m_private_image, align 8, !tbaa !38
  %numcomps = getelementptr inbounds %struct.opj_image, %struct.opj_image* %26, i32 0, i32 4
  %27 = load i32, i32* %numcomps, align 4, !tbaa !45
  %cmp3 = icmp ult i32 %24, %27
  br i1 %cmp3, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %l_current_nb_bytes_written, align 4, !tbaa !5
  %28 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %29 = load i32, i32* %compno, align 4, !tbaa !5
  %30 = load i8*, i8** %p_data.addr, align 8, !tbaa !1
  %31 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  call void @opj_j2k_write_coc_in_memory(%struct.opj_j2k* %28, i32 %29, i8* %30, i32* %l_current_nb_bytes_written, %struct.opj_event_mgr* %31) #7
  %32 = load i32, i32* %l_current_nb_bytes_written, align 4, !tbaa !5
  %33 = load i32, i32* %l_nb_bytes_written, align 4, !tbaa !5
  %add4 = add i32 %33, %32
  store i32 %add4, i32* %l_nb_bytes_written, align 4, !tbaa !5
  %34 = load i32, i32* %l_current_nb_bytes_written, align 4, !tbaa !5
  %35 = load i8*, i8** %p_data.addr, align 8, !tbaa !1
  %idx.ext5 = zext i32 %34 to i64
  %add.ptr6 = getelementptr inbounds i8, i8* %35, i64 %idx.ext5
  store i8* %add.ptr6, i8** %p_data.addr, align 8, !tbaa !1
  %36 = load i32, i32* %l_current_nb_bytes_written, align 4, !tbaa !5
  %37 = load i32, i32* %p_total_data_size.addr, align 4, !tbaa !5
  %sub7 = sub i32 %37, %36
  store i32 %sub7, i32* %p_total_data_size.addr, align 4, !tbaa !5
  store i32 0, i32* %l_current_nb_bytes_written, align 4, !tbaa !5
  %38 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %39 = load i32, i32* %compno, align 4, !tbaa !5
  %40 = load i8*, i8** %p_data.addr, align 8, !tbaa !1
  %41 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  call void @opj_j2k_write_qcc_in_memory(%struct.opj_j2k* %38, i32 %39, i8* %40, i32* %l_current_nb_bytes_written, %struct.opj_event_mgr* %41) #7
  %42 = load i32, i32* %l_current_nb_bytes_written, align 4, !tbaa !5
  %43 = load i32, i32* %l_nb_bytes_written, align 4, !tbaa !5
  %add8 = add i32 %43, %42
  store i32 %add8, i32* %l_nb_bytes_written, align 4, !tbaa !5
  %44 = load i32, i32* %l_current_nb_bytes_written, align 4, !tbaa !5
  %45 = load i8*, i8** %p_data.addr, align 8, !tbaa !1
  %idx.ext9 = zext i32 %44 to i64
  %add.ptr10 = getelementptr inbounds i8, i8* %45, i64 %idx.ext9
  store i8* %add.ptr10, i8** %p_data.addr, align 8, !tbaa !1
  %46 = load i32, i32* %l_current_nb_bytes_written, align 4, !tbaa !5
  %47 = load i32, i32* %p_total_data_size.addr, align 4, !tbaa !5
  %sub11 = sub i32 %47, %46
  store i32 %sub11, i32* %p_total_data_size.addr, align 4, !tbaa !5
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %48 = load i32, i32* %compno, align 4, !tbaa !5
  %inc = add i32 %48, 1
  store i32 %inc, i32* %compno, align 4, !tbaa !5
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %49 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %49, i32 0, i32 8
  %50 = load i32, i32* %m_current_tile_number, align 4, !tbaa !11
  %idxprom = zext i32 %50 to i64
  %51 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %tcps = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %51, i32 0, i32 17
  %52 = load %struct.opj_tcp*, %struct.opj_tcp** %tcps, align 8, !tbaa !16
  %arrayidx = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %52, i64 %idxprom
  %numpocs = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %arrayidx, i32 0, i32 6
  %53 = load i32, i32* %numpocs, align 4, !tbaa !51
  %tobool12 = icmp ne i32 %53, 0
  br i1 %tobool12, label %if.then.13, label %if.end.18

if.then.13:                                       ; preds = %for.end
  store i32 0, i32* %l_current_nb_bytes_written, align 4, !tbaa !5
  %54 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %55 = load i8*, i8** %p_data.addr, align 8, !tbaa !1
  %56 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  call void @opj_j2k_write_poc_in_memory(%struct.opj_j2k* %54, i8* %55, i32* %l_current_nb_bytes_written, %struct.opj_event_mgr* %56) #7
  %57 = load i32, i32* %l_current_nb_bytes_written, align 4, !tbaa !5
  %58 = load i32, i32* %l_nb_bytes_written, align 4, !tbaa !5
  %add14 = add i32 %58, %57
  store i32 %add14, i32* %l_nb_bytes_written, align 4, !tbaa !5
  %59 = load i32, i32* %l_current_nb_bytes_written, align 4, !tbaa !5
  %60 = load i8*, i8** %p_data.addr, align 8, !tbaa !1
  %idx.ext15 = zext i32 %59 to i64
  %add.ptr16 = getelementptr inbounds i8, i8* %60, i64 %idx.ext15
  store i8* %add.ptr16, i8** %p_data.addr, align 8, !tbaa !1
  %61 = load i32, i32* %l_current_nb_bytes_written, align 4, !tbaa !5
  %62 = load i32, i32* %p_total_data_size.addr, align 4, !tbaa !5
  %sub17 = sub i32 %62, %61
  store i32 %sub17, i32* %p_total_data_size.addr, align 4, !tbaa !5
  br label %if.end.18

if.end.18:                                        ; preds = %if.then.13, %for.end
  br label %if.end.19

if.end.19:                                        ; preds = %if.end.18, %if.end
  store i32 0, i32* %l_current_nb_bytes_written, align 4, !tbaa !5
  %63 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %64 = load %struct.opj_tcd*, %struct.opj_tcd** %l_tcd, align 8, !tbaa !1
  %65 = load i8*, i8** %p_data.addr, align 8, !tbaa !1
  %66 = load i32, i32* %p_total_data_size.addr, align 4, !tbaa !5
  %67 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %68 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call20 = call i32 @opj_j2k_write_sod(%struct.opj_j2k* %63, %struct.opj_tcd* %64, i8* %65, i32* %l_current_nb_bytes_written, i32 %66, %struct.opj_stream_private* %67, %struct.opj_event_mgr* %68) #7
  %tobool21 = icmp ne i32 %call20, 0
  br i1 %tobool21, label %if.end.23, label %if.then.22

if.then.22:                                       ; preds = %if.end.19
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.23:                                        ; preds = %if.end.19
  %69 = load i32, i32* %l_current_nb_bytes_written, align 4, !tbaa !5
  %70 = load i32, i32* %l_nb_bytes_written, align 4, !tbaa !5
  %add24 = add i32 %70, %69
  store i32 %add24, i32* %l_nb_bytes_written, align 4, !tbaa !5
  %71 = load i32, i32* %l_nb_bytes_written, align 4, !tbaa !5
  %72 = load i32*, i32** %p_data_written.addr, align 8, !tbaa !1
  store i32 %71, i32* %72, align 4, !tbaa !5
  %73 = load i8*, i8** %l_begin_data, align 8, !tbaa !1
  %add.ptr25 = getelementptr inbounds i8, i8* %73, i64 6
  %74 = load i32, i32* %l_nb_bytes_written, align 4, !tbaa !5
  call void @opj_write_bytes_LE(i8* %add.ptr25, i32 %74, i32 4) #7
  %75 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %m_specific_param26 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %75, i32 0, i32 18
  %m_enc27 = bitcast %union.anon.0* %m_specific_param26 to %struct.opj_encoding_param*
  %m_cinema28 = getelementptr inbounds %struct.opj_encoding_param, %struct.opj_encoding_param* %m_enc27, i32 0, i32 0
  %76 = load i32, i32* %m_cinema28, align 4, !tbaa !124
  %tobool29 = icmp ne i32 %76, 0
  br i1 %tobool29, label %if.then.30, label %if.end.31

if.then.30:                                       ; preds = %if.end.23
  %77 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %78 = load i32, i32* %l_nb_bytes_written, align 4, !tbaa !5
  call void @opj_j2k_update_tlm(%struct.opj_j2k* %77, i32 %78) #7
  br label %if.end.31

if.end.31:                                        ; preds = %if.then.30, %if.end.23
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.31, %if.then.22, %if.then
  %79 = bitcast %struct.opj_cp** %l_cp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %79) #1
  %80 = bitcast %struct.opj_tcd** %l_tcd to i8*
  call void @llvm.lifetime.end(i64 8, i8* %80) #1
  %81 = bitcast i8** %l_begin_data to i8*
  call void @llvm.lifetime.end(i64 8, i8* %81) #1
  %82 = bitcast i32* %l_current_nb_bytes_written to i8*
  call void @llvm.lifetime.end(i64 4, i8* %82) #1
  %83 = bitcast i32* %l_nb_bytes_written to i8*
  call void @llvm.lifetime.end(i64 4, i8* %83) #1
  %84 = bitcast i32* %compno to i8*
  call void @llvm.lifetime.end(i64 4, i8* %84) #1
  %85 = load i32, i32* %retval
  ret i32 %85
}

; Function Attrs: nounwind uwtable
define internal i32 @opj_j2k_write_all_tile_parts(%struct.opj_j2k* %p_j2k, i8* %p_data, i32* %p_data_written, i32 %p_total_data_size, %struct.opj_stream_private* %p_stream, %struct.opj_event_mgr* %p_manager) #0 {
entry:
  %retval = alloca i32, align 4
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %p_data.addr = alloca i8*, align 8
  %p_data_written.addr = alloca i32*, align 8
  %p_total_data_size.addr = alloca i32, align 4
  %p_stream.addr = alloca %struct.opj_stream_private*, align 8
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  %tilepartno = alloca i32, align 4
  %l_nb_bytes_written = alloca i32, align 4
  %l_current_nb_bytes_written = alloca i32, align 4
  %l_part_tile_size = alloca i32, align 4
  %tot_num_tp = alloca i32, align 4
  %pino = alloca i32, align 4
  %l_begin_data = alloca i8*, align 8
  %l_tcp = alloca %struct.opj_tcp*, align 8
  %l_tcd = alloca %struct.opj_tcd*, align 8
  %l_cp = alloca %struct.opj_cp*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store i8* %p_data, i8** %p_data.addr, align 8, !tbaa !1
  store i32* %p_data_written, i32** %p_data_written.addr, align 8, !tbaa !1
  store i32 %p_total_data_size, i32* %p_total_data_size.addr, align 4, !tbaa !5
  store %struct.opj_stream_private* %p_stream, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %0 = bitcast i32* %tilepartno to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  store i32 0, i32* %tilepartno, align 4, !tbaa !5
  %1 = bitcast i32* %l_nb_bytes_written to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  store i32 0, i32* %l_nb_bytes_written, align 4, !tbaa !5
  %2 = bitcast i32* %l_current_nb_bytes_written to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #1
  %3 = bitcast i32* %l_part_tile_size to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #1
  %4 = bitcast i32* %tot_num_tp to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #1
  %5 = bitcast i32* %pino to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #1
  %6 = bitcast i8** %l_begin_data to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6) #1
  %7 = bitcast %struct.opj_tcp** %l_tcp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7) #1
  store %struct.opj_tcp* null, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %8 = bitcast %struct.opj_tcd** %l_tcd to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8) #1
  store %struct.opj_tcd* null, %struct.opj_tcd** %l_tcd, align 8, !tbaa !1
  %9 = bitcast %struct.opj_cp** %l_cp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9) #1
  store %struct.opj_cp* null, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %10 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_tcd = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %10, i32 0, i32 9
  %11 = load %struct.opj_tcd*, %struct.opj_tcd** %m_tcd, align 8, !tbaa !120
  store %struct.opj_tcd* %11, %struct.opj_tcd** %l_tcd, align 8, !tbaa !1
  %12 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %12, i32 0, i32 4
  store %struct.opj_cp* %m_cp, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %13 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %tcps = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %13, i32 0, i32 17
  %14 = load %struct.opj_tcp*, %struct.opj_tcp** %tcps, align 8, !tbaa !16
  %15 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %15, i32 0, i32 8
  %16 = load i32, i32* %m_current_tile_number, align 4, !tbaa !11
  %idx.ext = zext i32 %16 to i64
  %add.ptr = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %14, i64 %idx.ext
  store %struct.opj_tcp* %add.ptr, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %17 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %18 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number1 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %18, i32 0, i32 8
  %19 = load i32, i32* %m_current_tile_number1, align 4, !tbaa !11
  %call = call i32 @opj_j2k_get_num_tp(%struct.opj_cp* %17, i32 0, i32 %19) #7
  store i32 %call, i32* %tot_num_tp, align 4, !tbaa !5
  store i32 1, i32* %tilepartno, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %20 = load i32, i32* %tilepartno, align 4, !tbaa !5
  %21 = load i32, i32* %tot_num_tp, align 4, !tbaa !5
  %cmp = icmp ult i32 %20, %21
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %22 = load i32, i32* %tilepartno, align 4, !tbaa !5
  %23 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %23, i32 0, i32 1
  %m_encoder = bitcast %union.anon* %m_specific_param to %struct.opj_j2k_enc*
  %m_current_poc_tile_part_number = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder, i32 0, i32 0
  store i32 %22, i32* %m_current_poc_tile_part_number, align 4, !tbaa !254
  store i32 0, i32* %l_current_nb_bytes_written, align 4, !tbaa !5
  store i32 0, i32* %l_part_tile_size, align 4, !tbaa !5
  %24 = load i8*, i8** %p_data.addr, align 8, !tbaa !1
  store i8* %24, i8** %l_begin_data, align 8, !tbaa !1
  %25 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %26 = load i8*, i8** %p_data.addr, align 8, !tbaa !1
  %27 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %28 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call2 = call i32 @opj_j2k_write_sot(%struct.opj_j2k* %25, i8* %26, i32* %l_current_nb_bytes_written, %struct.opj_stream_private* %27, %struct.opj_event_mgr* %28) #7
  %tobool = icmp ne i32 %call2, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %for.body
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %for.body
  %29 = load i32, i32* %l_current_nb_bytes_written, align 4, !tbaa !5
  %30 = load i32, i32* %l_nb_bytes_written, align 4, !tbaa !5
  %add = add i32 %30, %29
  store i32 %add, i32* %l_nb_bytes_written, align 4, !tbaa !5
  %31 = load i32, i32* %l_current_nb_bytes_written, align 4, !tbaa !5
  %32 = load i8*, i8** %p_data.addr, align 8, !tbaa !1
  %idx.ext3 = zext i32 %31 to i64
  %add.ptr4 = getelementptr inbounds i8, i8* %32, i64 %idx.ext3
  store i8* %add.ptr4, i8** %p_data.addr, align 8, !tbaa !1
  %33 = load i32, i32* %l_current_nb_bytes_written, align 4, !tbaa !5
  %34 = load i32, i32* %p_total_data_size.addr, align 4, !tbaa !5
  %sub = sub i32 %34, %33
  store i32 %sub, i32* %p_total_data_size.addr, align 4, !tbaa !5
  %35 = load i32, i32* %l_nb_bytes_written, align 4, !tbaa !5
  %36 = load i32, i32* %l_part_tile_size, align 4, !tbaa !5
  %add5 = add i32 %36, %35
  store i32 %add5, i32* %l_part_tile_size, align 4, !tbaa !5
  store i32 0, i32* %l_current_nb_bytes_written, align 4, !tbaa !5
  %37 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %38 = load %struct.opj_tcd*, %struct.opj_tcd** %l_tcd, align 8, !tbaa !1
  %39 = load i8*, i8** %p_data.addr, align 8, !tbaa !1
  %40 = load i32, i32* %p_total_data_size.addr, align 4, !tbaa !5
  %41 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %42 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call6 = call i32 @opj_j2k_write_sod(%struct.opj_j2k* %37, %struct.opj_tcd* %38, i8* %39, i32* %l_current_nb_bytes_written, i32 %40, %struct.opj_stream_private* %41, %struct.opj_event_mgr* %42) #7
  %tobool7 = icmp ne i32 %call6, 0
  br i1 %tobool7, label %if.end.9, label %if.then.8

if.then.8:                                        ; preds = %if.end
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.9:                                         ; preds = %if.end
  %43 = load i32, i32* %l_current_nb_bytes_written, align 4, !tbaa !5
  %44 = load i8*, i8** %p_data.addr, align 8, !tbaa !1
  %idx.ext10 = zext i32 %43 to i64
  %add.ptr11 = getelementptr inbounds i8, i8* %44, i64 %idx.ext10
  store i8* %add.ptr11, i8** %p_data.addr, align 8, !tbaa !1
  %45 = load i32, i32* %l_current_nb_bytes_written, align 4, !tbaa !5
  %46 = load i32, i32* %l_nb_bytes_written, align 4, !tbaa !5
  %add12 = add i32 %46, %45
  store i32 %add12, i32* %l_nb_bytes_written, align 4, !tbaa !5
  %47 = load i32, i32* %l_current_nb_bytes_written, align 4, !tbaa !5
  %48 = load i32, i32* %p_total_data_size.addr, align 4, !tbaa !5
  %sub13 = sub i32 %48, %47
  store i32 %sub13, i32* %p_total_data_size.addr, align 4, !tbaa !5
  %49 = load i32, i32* %l_nb_bytes_written, align 4, !tbaa !5
  %50 = load i32, i32* %l_part_tile_size, align 4, !tbaa !5
  %add14 = add i32 %50, %49
  store i32 %add14, i32* %l_part_tile_size, align 4, !tbaa !5
  %51 = load i8*, i8** %l_begin_data, align 8, !tbaa !1
  %add.ptr15 = getelementptr inbounds i8, i8* %51, i64 6
  %52 = load i32, i32* %l_part_tile_size, align 4, !tbaa !5
  call void @opj_write_bytes_LE(i8* %add.ptr15, i32 %52, i32 4) #7
  %53 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %m_specific_param16 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %53, i32 0, i32 18
  %m_enc = bitcast %union.anon.0* %m_specific_param16 to %struct.opj_encoding_param*
  %m_cinema = getelementptr inbounds %struct.opj_encoding_param, %struct.opj_encoding_param* %m_enc, i32 0, i32 0
  %54 = load i32, i32* %m_cinema, align 4, !tbaa !124
  %tobool17 = icmp ne i32 %54, 0
  br i1 %tobool17, label %if.then.18, label %if.end.19

if.then.18:                                       ; preds = %if.end.9
  %55 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %56 = load i32, i32* %l_part_tile_size, align 4, !tbaa !5
  call void @opj_j2k_update_tlm(%struct.opj_j2k* %55, i32 %56) #7
  br label %if.end.19

if.end.19:                                        ; preds = %if.then.18, %if.end.9
  %57 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param20 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %57, i32 0, i32 1
  %m_encoder21 = bitcast %union.anon* %m_specific_param20 to %struct.opj_j2k_enc*
  %m_current_tile_part_number = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder21, i32 0, i32 1
  %58 = load i32, i32* %m_current_tile_part_number, align 4, !tbaa !252
  %inc = add i32 %58, 1
  store i32 %inc, i32* %m_current_tile_part_number, align 4, !tbaa !252
  br label %for.inc

for.inc:                                          ; preds = %if.end.19
  %59 = load i32, i32* %tilepartno, align 4, !tbaa !5
  %inc22 = add i32 %59, 1
  store i32 %inc22, i32* %tilepartno, align 4, !tbaa !5
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %pino, align 4, !tbaa !5
  br label %for.cond.23

for.cond.23:                                      ; preds = %for.inc.66, %for.end
  %60 = load i32, i32* %pino, align 4, !tbaa !5
  %61 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %numpocs = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %61, i32 0, i32 6
  %62 = load i32, i32* %numpocs, align 4, !tbaa !51
  %cmp24 = icmp ule i32 %60, %62
  br i1 %cmp24, label %for.body.25, label %for.end.68

for.body.25:                                      ; preds = %for.cond.23
  %63 = load i32, i32* %pino, align 4, !tbaa !5
  %64 = load %struct.opj_tcd*, %struct.opj_tcd** %l_tcd, align 8, !tbaa !1
  %cur_pino = getelementptr inbounds %struct.opj_tcd, %struct.opj_tcd* %64, i32 0, i32 4
  store i32 %63, i32* %cur_pino, align 4, !tbaa !272
  %65 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %66 = load i32, i32* %pino, align 4, !tbaa !5
  %67 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number26 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %67, i32 0, i32 8
  %68 = load i32, i32* %m_current_tile_number26, align 4, !tbaa !11
  %call27 = call i32 @opj_j2k_get_num_tp(%struct.opj_cp* %65, i32 %66, i32 %68) #7
  store i32 %call27, i32* %tot_num_tp, align 4, !tbaa !5
  store i32 0, i32* %tilepartno, align 4, !tbaa !5
  br label %for.cond.28

for.cond.28:                                      ; preds = %for.inc.63, %for.body.25
  %69 = load i32, i32* %tilepartno, align 4, !tbaa !5
  %70 = load i32, i32* %tot_num_tp, align 4, !tbaa !5
  %cmp29 = icmp ult i32 %69, %70
  br i1 %cmp29, label %for.body.30, label %for.end.65

for.body.30:                                      ; preds = %for.cond.28
  %71 = load i32, i32* %tilepartno, align 4, !tbaa !5
  %72 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param31 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %72, i32 0, i32 1
  %m_encoder32 = bitcast %union.anon* %m_specific_param31 to %struct.opj_j2k_enc*
  %m_current_poc_tile_part_number33 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder32, i32 0, i32 0
  store i32 %71, i32* %m_current_poc_tile_part_number33, align 4, !tbaa !254
  store i32 0, i32* %l_current_nb_bytes_written, align 4, !tbaa !5
  store i32 0, i32* %l_part_tile_size, align 4, !tbaa !5
  %73 = load i8*, i8** %p_data.addr, align 8, !tbaa !1
  store i8* %73, i8** %l_begin_data, align 8, !tbaa !1
  %74 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %75 = load i8*, i8** %p_data.addr, align 8, !tbaa !1
  %76 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %77 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call34 = call i32 @opj_j2k_write_sot(%struct.opj_j2k* %74, i8* %75, i32* %l_current_nb_bytes_written, %struct.opj_stream_private* %76, %struct.opj_event_mgr* %77) #7
  %tobool35 = icmp ne i32 %call34, 0
  br i1 %tobool35, label %if.end.37, label %if.then.36

if.then.36:                                       ; preds = %for.body.30
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.37:                                        ; preds = %for.body.30
  %78 = load i32, i32* %l_current_nb_bytes_written, align 4, !tbaa !5
  %79 = load i32, i32* %l_nb_bytes_written, align 4, !tbaa !5
  %add38 = add i32 %79, %78
  store i32 %add38, i32* %l_nb_bytes_written, align 4, !tbaa !5
  %80 = load i32, i32* %l_current_nb_bytes_written, align 4, !tbaa !5
  %81 = load i8*, i8** %p_data.addr, align 8, !tbaa !1
  %idx.ext39 = zext i32 %80 to i64
  %add.ptr40 = getelementptr inbounds i8, i8* %81, i64 %idx.ext39
  store i8* %add.ptr40, i8** %p_data.addr, align 8, !tbaa !1
  %82 = load i32, i32* %l_current_nb_bytes_written, align 4, !tbaa !5
  %83 = load i32, i32* %p_total_data_size.addr, align 4, !tbaa !5
  %sub41 = sub i32 %83, %82
  store i32 %sub41, i32* %p_total_data_size.addr, align 4, !tbaa !5
  %84 = load i32, i32* %l_current_nb_bytes_written, align 4, !tbaa !5
  %85 = load i32, i32* %l_part_tile_size, align 4, !tbaa !5
  %add42 = add i32 %85, %84
  store i32 %add42, i32* %l_part_tile_size, align 4, !tbaa !5
  store i32 0, i32* %l_current_nb_bytes_written, align 4, !tbaa !5
  %86 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %87 = load %struct.opj_tcd*, %struct.opj_tcd** %l_tcd, align 8, !tbaa !1
  %88 = load i8*, i8** %p_data.addr, align 8, !tbaa !1
  %89 = load i32, i32* %p_total_data_size.addr, align 4, !tbaa !5
  %90 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %91 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call43 = call i32 @opj_j2k_write_sod(%struct.opj_j2k* %86, %struct.opj_tcd* %87, i8* %88, i32* %l_current_nb_bytes_written, i32 %89, %struct.opj_stream_private* %90, %struct.opj_event_mgr* %91) #7
  %tobool44 = icmp ne i32 %call43, 0
  br i1 %tobool44, label %if.end.46, label %if.then.45

if.then.45:                                       ; preds = %if.end.37
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.46:                                        ; preds = %if.end.37
  %92 = load i32, i32* %l_current_nb_bytes_written, align 4, !tbaa !5
  %93 = load i32, i32* %l_nb_bytes_written, align 4, !tbaa !5
  %add47 = add i32 %93, %92
  store i32 %add47, i32* %l_nb_bytes_written, align 4, !tbaa !5
  %94 = load i32, i32* %l_current_nb_bytes_written, align 4, !tbaa !5
  %95 = load i8*, i8** %p_data.addr, align 8, !tbaa !1
  %idx.ext48 = zext i32 %94 to i64
  %add.ptr49 = getelementptr inbounds i8, i8* %95, i64 %idx.ext48
  store i8* %add.ptr49, i8** %p_data.addr, align 8, !tbaa !1
  %96 = load i32, i32* %l_current_nb_bytes_written, align 4, !tbaa !5
  %97 = load i32, i32* %p_total_data_size.addr, align 4, !tbaa !5
  %sub50 = sub i32 %97, %96
  store i32 %sub50, i32* %p_total_data_size.addr, align 4, !tbaa !5
  %98 = load i32, i32* %l_current_nb_bytes_written, align 4, !tbaa !5
  %99 = load i32, i32* %l_part_tile_size, align 4, !tbaa !5
  %add51 = add i32 %99, %98
  store i32 %add51, i32* %l_part_tile_size, align 4, !tbaa !5
  %100 = load i8*, i8** %l_begin_data, align 8, !tbaa !1
  %add.ptr52 = getelementptr inbounds i8, i8* %100, i64 6
  %101 = load i32, i32* %l_part_tile_size, align 4, !tbaa !5
  call void @opj_write_bytes_LE(i8* %add.ptr52, i32 %101, i32 4) #7
  %102 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %m_specific_param53 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %102, i32 0, i32 18
  %m_enc54 = bitcast %union.anon.0* %m_specific_param53 to %struct.opj_encoding_param*
  %m_cinema55 = getelementptr inbounds %struct.opj_encoding_param, %struct.opj_encoding_param* %m_enc54, i32 0, i32 0
  %103 = load i32, i32* %m_cinema55, align 4, !tbaa !124
  %tobool56 = icmp ne i32 %103, 0
  br i1 %tobool56, label %if.then.57, label %if.end.58

if.then.57:                                       ; preds = %if.end.46
  %104 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %105 = load i32, i32* %l_part_tile_size, align 4, !tbaa !5
  call void @opj_j2k_update_tlm(%struct.opj_j2k* %104, i32 %105) #7
  br label %if.end.58

if.end.58:                                        ; preds = %if.then.57, %if.end.46
  %106 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param59 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %106, i32 0, i32 1
  %m_encoder60 = bitcast %union.anon* %m_specific_param59 to %struct.opj_j2k_enc*
  %m_current_tile_part_number61 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder60, i32 0, i32 1
  %107 = load i32, i32* %m_current_tile_part_number61, align 4, !tbaa !252
  %inc62 = add i32 %107, 1
  store i32 %inc62, i32* %m_current_tile_part_number61, align 4, !tbaa !252
  br label %for.inc.63

for.inc.63:                                       ; preds = %if.end.58
  %108 = load i32, i32* %tilepartno, align 4, !tbaa !5
  %inc64 = add i32 %108, 1
  store i32 %inc64, i32* %tilepartno, align 4, !tbaa !5
  br label %for.cond.28

for.end.65:                                       ; preds = %for.cond.28
  br label %for.inc.66

for.inc.66:                                       ; preds = %for.end.65
  %109 = load i32, i32* %pino, align 4, !tbaa !5
  %inc67 = add i32 %109, 1
  store i32 %inc67, i32* %pino, align 4, !tbaa !5
  br label %for.cond.23

for.end.68:                                       ; preds = %for.cond.23
  %110 = load i32, i32* %l_nb_bytes_written, align 4, !tbaa !5
  %111 = load i32*, i32** %p_data_written.addr, align 8, !tbaa !1
  store i32 %110, i32* %111, align 4, !tbaa !5
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %for.end.68, %if.then.45, %if.then.36, %if.then.8, %if.then
  %112 = bitcast %struct.opj_cp** %l_cp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %112) #1
  %113 = bitcast %struct.opj_tcd** %l_tcd to i8*
  call void @llvm.lifetime.end(i64 8, i8* %113) #1
  %114 = bitcast %struct.opj_tcp** %l_tcp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %114) #1
  %115 = bitcast i8** %l_begin_data to i8*
  call void @llvm.lifetime.end(i64 8, i8* %115) #1
  %116 = bitcast i32* %pino to i8*
  call void @llvm.lifetime.end(i64 4, i8* %116) #1
  %117 = bitcast i32* %tot_num_tp to i8*
  call void @llvm.lifetime.end(i64 4, i8* %117) #1
  %118 = bitcast i32* %l_part_tile_size to i8*
  call void @llvm.lifetime.end(i64 4, i8* %118) #1
  %119 = bitcast i32* %l_current_nb_bytes_written to i8*
  call void @llvm.lifetime.end(i64 4, i8* %119) #1
  %120 = bitcast i32* %l_nb_bytes_written to i8*
  call void @llvm.lifetime.end(i64 4, i8* %120) #1
  %121 = bitcast i32* %tilepartno to i8*
  call void @llvm.lifetime.end(i64 4, i8* %121) #1
  %122 = load i32, i32* %retval
  ret i32 %122
}

declare i64 @opj_stream_write_data(%struct.opj_stream_private*, i8*, i64, %struct.opj_event_mgr*) #3

; Function Attrs: nounwind uwtable
define internal i32 @opj_j2k_write_sot(%struct.opj_j2k* %p_j2k, i8* %p_data, i32* %p_data_written, %struct.opj_stream_private* %p_stream, %struct.opj_event_mgr* %p_manager) #0 {
entry:
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %p_data.addr = alloca i8*, align 8
  %p_data_written.addr = alloca i32*, align 8
  %p_stream.addr = alloca %struct.opj_stream_private*, align 8
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store i8* %p_data, i8** %p_data.addr, align 8, !tbaa !1
  store i32* %p_data_written, i32** %p_data_written.addr, align 8, !tbaa !1
  store %struct.opj_stream_private* %p_stream, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %0 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cmp = icmp ne %struct.opj_j2k* %0, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 3833, i8* getelementptr inbounds ([115 x i8], [115 x i8]* @__PRETTY_FUNCTION__.opj_j2k_write_sot, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %1, %cond.true
  %2 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %cmp1 = icmp ne %struct.opj_event_mgr* %2, null
  br i1 %cmp1, label %cond.true.2, label %cond.false.3

cond.true.2:                                      ; preds = %cond.end
  br label %cond.end.4

cond.false.3:                                     ; preds = %cond.end
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 3834, i8* getelementptr inbounds ([115 x i8], [115 x i8]* @__PRETTY_FUNCTION__.opj_j2k_write_sot, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.4

cond.end.4:                                       ; preds = %3, %cond.true.2
  %4 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %cmp5 = icmp ne %struct.opj_stream_private* %4, null
  br i1 %cmp5, label %cond.true.6, label %cond.false.7

cond.true.6:                                      ; preds = %cond.end.4
  br label %cond.end.8

cond.false.7:                                     ; preds = %cond.end.4
  call void @__assert_fail(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 3835, i8* getelementptr inbounds ([115 x i8], [115 x i8]* @__PRETTY_FUNCTION__.opj_j2k_write_sot, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.8

cond.end.8:                                       ; preds = %5, %cond.true.6
  %6 = load i8*, i8** %p_data.addr, align 8, !tbaa !1
  call void @opj_write_bytes_LE(i8* %6, i32 65424, i32 2) #7
  %7 = load i8*, i8** %p_data.addr, align 8, !tbaa !1
  %add.ptr = getelementptr inbounds i8, i8* %7, i64 2
  store i8* %add.ptr, i8** %p_data.addr, align 8, !tbaa !1
  %8 = load i8*, i8** %p_data.addr, align 8, !tbaa !1
  call void @opj_write_bytes_LE(i8* %8, i32 10, i32 2) #7
  %9 = load i8*, i8** %p_data.addr, align 8, !tbaa !1
  %add.ptr9 = getelementptr inbounds i8, i8* %9, i64 2
  store i8* %add.ptr9, i8** %p_data.addr, align 8, !tbaa !1
  %10 = load i8*, i8** %p_data.addr, align 8, !tbaa !1
  %11 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %11, i32 0, i32 8
  %12 = load i32, i32* %m_current_tile_number, align 4, !tbaa !11
  call void @opj_write_bytes_LE(i8* %10, i32 %12, i32 2) #7
  %13 = load i8*, i8** %p_data.addr, align 8, !tbaa !1
  %add.ptr10 = getelementptr inbounds i8, i8* %13, i64 2
  store i8* %add.ptr10, i8** %p_data.addr, align 8, !tbaa !1
  %14 = load i8*, i8** %p_data.addr, align 8, !tbaa !1
  %add.ptr11 = getelementptr inbounds i8, i8* %14, i64 4
  store i8* %add.ptr11, i8** %p_data.addr, align 8, !tbaa !1
  %15 = load i8*, i8** %p_data.addr, align 8, !tbaa !1
  %16 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %16, i32 0, i32 1
  %m_encoder = bitcast %union.anon* %m_specific_param to %struct.opj_j2k_enc*
  %m_current_tile_part_number = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder, i32 0, i32 1
  %17 = load i32, i32* %m_current_tile_part_number, align 4, !tbaa !252
  call void @opj_write_bytes_LE(i8* %15, i32 %17, i32 1) #7
  %18 = load i8*, i8** %p_data.addr, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds i8, i8* %18, i32 1
  store i8* %incdec.ptr, i8** %p_data.addr, align 8, !tbaa !1
  %19 = load i8*, i8** %p_data.addr, align 8, !tbaa !1
  %20 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number12 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %20, i32 0, i32 8
  %21 = load i32, i32* %m_current_tile_number12, align 4, !tbaa !11
  %idxprom = zext i32 %21 to i64
  %22 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %22, i32 0, i32 4
  %tcps = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp, i32 0, i32 17
  %23 = load %struct.opj_tcp*, %struct.opj_tcp** %tcps, align 8, !tbaa !88
  %arrayidx = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %23, i64 %idxprom
  %m_nb_tile_parts = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %arrayidx, i32 0, i32 14
  %24 = load i32, i32* %m_nb_tile_parts, align 4, !tbaa !20
  call void @opj_write_bytes_LE(i8* %19, i32 %24, i32 1) #7
  %25 = load i8*, i8** %p_data.addr, align 8, !tbaa !1
  %incdec.ptr13 = getelementptr inbounds i8, i8* %25, i32 1
  store i8* %incdec.ptr13, i8** %p_data.addr, align 8, !tbaa !1
  %26 = load i32*, i32** %p_data_written.addr, align 8, !tbaa !1
  store i32 12, i32* %26, align 4, !tbaa !5
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal void @opj_j2k_write_coc_in_memory(%struct.opj_j2k* %p_j2k, i32 %p_comp_no, i8* %p_data, i32* %p_data_written, %struct.opj_event_mgr* %p_manager) #0 {
entry:
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %p_comp_no.addr = alloca i32, align 4
  %p_data.addr = alloca i8*, align 8
  %p_data_written.addr = alloca i32*, align 8
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  %l_cp = alloca %struct.opj_cp*, align 8
  %l_tcp = alloca %struct.opj_tcp*, align 8
  %l_coc_size = alloca i32, align 4
  %l_remaining_size = alloca i32, align 4
  %l_current_data = alloca i8*, align 8
  %l_image = alloca %struct.opj_image*, align 8
  %l_comp_room = alloca i32, align 4
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store i32 %p_comp_no, i32* %p_comp_no.addr, align 4, !tbaa !5
  store i8* %p_data, i8** %p_data.addr, align 8, !tbaa !1
  store i32* %p_data_written, i32** %p_data_written.addr, align 8, !tbaa !1
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %0 = bitcast %struct.opj_cp** %l_cp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  store %struct.opj_cp* null, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %1 = bitcast %struct.opj_tcp** %l_tcp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #1
  store %struct.opj_tcp* null, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %2 = bitcast i32* %l_coc_size to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #1
  %3 = bitcast i32* %l_remaining_size to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #1
  %4 = bitcast i8** %l_current_data to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4) #1
  store i8* null, i8** %l_current_data, align 8, !tbaa !1
  %5 = bitcast %struct.opj_image** %l_image to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5) #1
  store %struct.opj_image* null, %struct.opj_image** %l_image, align 8, !tbaa !1
  %6 = bitcast i32* %l_comp_room to i8*
  call void @llvm.lifetime.start(i64 4, i8* %6) #1
  %7 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cmp = icmp ne %struct.opj_j2k* %7, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 2497, i8* getelementptr inbounds ([103 x i8], [103 x i8]* @__PRETTY_FUNCTION__.opj_j2k_write_coc_in_memory, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %8, %cond.true
  %9 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %cmp1 = icmp ne %struct.opj_event_mgr* %9, null
  br i1 %cmp1, label %cond.true.2, label %cond.false.3

cond.true.2:                                      ; preds = %cond.end
  br label %cond.end.4

cond.false.3:                                     ; preds = %cond.end
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 2498, i8* getelementptr inbounds ([103 x i8], [103 x i8]* @__PRETTY_FUNCTION__.opj_j2k_write_coc_in_memory, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.4

cond.end.4:                                       ; preds = %10, %cond.true.2
  %11 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %11, i32 0, i32 4
  store %struct.opj_cp* %m_cp, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %12 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %12, i32 0, i32 8
  %13 = load i32, i32* %m_current_tile_number, align 4, !tbaa !11
  %idxprom = zext i32 %13 to i64
  %14 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %tcps = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %14, i32 0, i32 17
  %15 = load %struct.opj_tcp*, %struct.opj_tcp** %tcps, align 8, !tbaa !16
  %arrayidx = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %15, i64 %idxprom
  store %struct.opj_tcp* %arrayidx, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %16 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_private_image = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %16, i32 0, i32 2
  %17 = load %struct.opj_image*, %struct.opj_image** %m_private_image, align 8, !tbaa !38
  store %struct.opj_image* %17, %struct.opj_image** %l_image, align 8, !tbaa !1
  %18 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %numcomps = getelementptr inbounds %struct.opj_image, %struct.opj_image* %18, i32 0, i32 4
  %19 = load i32, i32* %numcomps, align 4, !tbaa !45
  %cmp5 = icmp ule i32 %19, 256
  %cond = select i1 %cmp5, i32 1, i32 2
  store i32 %cond, i32* %l_comp_room, align 4, !tbaa !5
  %20 = load i32, i32* %l_comp_room, align 4, !tbaa !5
  %add = add i32 5, %20
  %21 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %22 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number6 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %22, i32 0, i32 8
  %23 = load i32, i32* %m_current_tile_number6, align 4, !tbaa !11
  %24 = load i32, i32* %p_comp_no.addr, align 4, !tbaa !5
  %call = call i32 @opj_j2k_get_SPCod_SPCoc_size(%struct.opj_j2k* %21, i32 %23, i32 %24) #7
  %add7 = add i32 %add, %call
  store i32 %add7, i32* %l_coc_size, align 4, !tbaa !5
  %25 = load i32, i32* %l_coc_size, align 4, !tbaa !5
  store i32 %25, i32* %l_remaining_size, align 4, !tbaa !5
  %26 = load i8*, i8** %p_data.addr, align 8, !tbaa !1
  store i8* %26, i8** %l_current_data, align 8, !tbaa !1
  %27 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  call void @opj_write_bytes_LE(i8* %27, i32 65363, i32 2) #7
  %28 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %add.ptr = getelementptr inbounds i8, i8* %28, i64 2
  store i8* %add.ptr, i8** %l_current_data, align 8, !tbaa !1
  %29 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %30 = load i32, i32* %l_coc_size, align 4, !tbaa !5
  %sub = sub i32 %30, 2
  call void @opj_write_bytes_LE(i8* %29, i32 %sub, i32 2) #7
  %31 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %add.ptr8 = getelementptr inbounds i8, i8* %31, i64 2
  store i8* %add.ptr8, i8** %l_current_data, align 8, !tbaa !1
  %32 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %33 = load i32, i32* %p_comp_no.addr, align 4, !tbaa !5
  %34 = load i32, i32* %l_comp_room, align 4, !tbaa !5
  call void @opj_write_bytes_LE(i8* %32, i32 %33, i32 %34) #7
  %35 = load i32, i32* %l_comp_room, align 4, !tbaa !5
  %36 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %idx.ext = zext i32 %35 to i64
  %add.ptr9 = getelementptr inbounds i8, i8* %36, i64 %idx.ext
  store i8* %add.ptr9, i8** %l_current_data, align 8, !tbaa !1
  %37 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %38 = load i32, i32* %p_comp_no.addr, align 4, !tbaa !5
  %idxprom10 = zext i32 %38 to i64
  %39 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %tccps = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %39, i32 0, i32 13
  %40 = load %struct.opj_tccp*, %struct.opj_tccp** %tccps, align 8, !tbaa !48
  %arrayidx11 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %40, i64 %idxprom10
  %csty = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %arrayidx11, i32 0, i32 0
  %41 = load i32, i32* %csty, align 4, !tbaa !49
  call void @opj_write_bytes_LE(i8* %37, i32 %41, i32 1) #7
  %42 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds i8, i8* %42, i32 1
  store i8* %incdec.ptr, i8** %l_current_data, align 8, !tbaa !1
  %43 = load i32, i32* %l_comp_room, align 4, !tbaa !5
  %add12 = add i32 5, %43
  %44 = load i32, i32* %l_remaining_size, align 4, !tbaa !5
  %sub13 = sub i32 %44, %add12
  store i32 %sub13, i32* %l_remaining_size, align 4, !tbaa !5
  %45 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %46 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number14 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %46, i32 0, i32 8
  %47 = load i32, i32* %m_current_tile_number14, align 4, !tbaa !11
  %48 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %49 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call15 = call i32 @opj_j2k_write_SPCod_SPCoc(%struct.opj_j2k* %45, i32 %47, i32 0, i8* %48, i32* %l_remaining_size, %struct.opj_event_mgr* %49) #7
  %50 = load i32, i32* %l_coc_size, align 4, !tbaa !5
  %51 = load i32*, i32** %p_data_written.addr, align 8, !tbaa !1
  store i32 %50, i32* %51, align 4, !tbaa !5
  %52 = bitcast i32* %l_comp_room to i8*
  call void @llvm.lifetime.end(i64 4, i8* %52) #1
  %53 = bitcast %struct.opj_image** %l_image to i8*
  call void @llvm.lifetime.end(i64 8, i8* %53) #1
  %54 = bitcast i8** %l_current_data to i8*
  call void @llvm.lifetime.end(i64 8, i8* %54) #1
  %55 = bitcast i32* %l_remaining_size to i8*
  call void @llvm.lifetime.end(i64 4, i8* %55) #1
  %56 = bitcast i32* %l_coc_size to i8*
  call void @llvm.lifetime.end(i64 4, i8* %56) #1
  %57 = bitcast %struct.opj_tcp** %l_tcp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %57) #1
  %58 = bitcast %struct.opj_cp** %l_cp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %58) #1
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @opj_j2k_write_qcc_in_memory(%struct.opj_j2k* %p_j2k, i32 %p_comp_no, i8* %p_data, i32* %p_data_written, %struct.opj_event_mgr* %p_manager) #0 {
entry:
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %p_comp_no.addr = alloca i32, align 4
  %p_data.addr = alloca i8*, align 8
  %p_data_written.addr = alloca i32*, align 8
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  %l_qcc_size = alloca i32, align 4
  %l_remaining_size = alloca i32, align 4
  %l_current_data = alloca i8*, align 8
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store i32 %p_comp_no, i32* %p_comp_no.addr, align 4, !tbaa !5
  store i8* %p_data, i8** %p_data.addr, align 8, !tbaa !1
  store i32* %p_data_written, i32** %p_data_written.addr, align 8, !tbaa !1
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %0 = bitcast i32* %l_qcc_size to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast i32* %l_remaining_size to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = bitcast i8** %l_current_data to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #1
  store i8* null, i8** %l_current_data, align 8, !tbaa !1
  %3 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cmp = icmp ne %struct.opj_j2k* %3, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 2748, i8* getelementptr inbounds ([103 x i8], [103 x i8]* @__PRETTY_FUNCTION__.opj_j2k_write_qcc_in_memory, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %4, %cond.true
  %5 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %cmp1 = icmp ne %struct.opj_event_mgr* %5, null
  br i1 %cmp1, label %cond.true.2, label %cond.false.3

cond.true.2:                                      ; preds = %cond.end
  br label %cond.end.4

cond.false.3:                                     ; preds = %cond.end
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 2749, i8* getelementptr inbounds ([103 x i8], [103 x i8]* @__PRETTY_FUNCTION__.opj_j2k_write_qcc_in_memory, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.4

cond.end.4:                                       ; preds = %6, %cond.true.2
  %7 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %8 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %8, i32 0, i32 8
  %9 = load i32, i32* %m_current_tile_number, align 4, !tbaa !11
  %10 = load i32, i32* %p_comp_no.addr, align 4, !tbaa !5
  %call = call i32 @opj_j2k_get_SQcd_SQcc_size(%struct.opj_j2k* %7, i32 %9, i32 %10) #7
  %add = add i32 6, %call
  store i32 %add, i32* %l_qcc_size, align 4, !tbaa !5
  %11 = load i32, i32* %l_qcc_size, align 4, !tbaa !5
  store i32 %11, i32* %l_remaining_size, align 4, !tbaa !5
  %12 = load i8*, i8** %p_data.addr, align 8, !tbaa !1
  store i8* %12, i8** %l_current_data, align 8, !tbaa !1
  %13 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  call void @opj_write_bytes_LE(i8* %13, i32 65373, i32 2) #7
  %14 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %add.ptr = getelementptr inbounds i8, i8* %14, i64 2
  store i8* %add.ptr, i8** %l_current_data, align 8, !tbaa !1
  %15 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_private_image = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %15, i32 0, i32 2
  %16 = load %struct.opj_image*, %struct.opj_image** %m_private_image, align 8, !tbaa !38
  %numcomps = getelementptr inbounds %struct.opj_image, %struct.opj_image* %16, i32 0, i32 4
  %17 = load i32, i32* %numcomps, align 4, !tbaa !45
  %cmp5 = icmp ule i32 %17, 256
  br i1 %cmp5, label %if.then, label %if.else

if.then:                                          ; preds = %cond.end.4
  %18 = load i32, i32* %l_qcc_size, align 4, !tbaa !5
  %dec = add i32 %18, -1
  store i32 %dec, i32* %l_qcc_size, align 4, !tbaa !5
  %19 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %20 = load i32, i32* %l_qcc_size, align 4, !tbaa !5
  %sub = sub i32 %20, 2
  call void @opj_write_bytes_LE(i8* %19, i32 %sub, i32 2) #7
  %21 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %add.ptr6 = getelementptr inbounds i8, i8* %21, i64 2
  store i8* %add.ptr6, i8** %l_current_data, align 8, !tbaa !1
  %22 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %23 = load i32, i32* %p_comp_no.addr, align 4, !tbaa !5
  call void @opj_write_bytes_LE(i8* %22, i32 %23, i32 1) #7
  %24 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds i8, i8* %24, i32 1
  store i8* %incdec.ptr, i8** %l_current_data, align 8, !tbaa !1
  %25 = load i32, i32* %l_remaining_size, align 4, !tbaa !5
  %sub7 = sub i32 %25, 6
  store i32 %sub7, i32* %l_remaining_size, align 4, !tbaa !5
  br label %if.end

if.else:                                          ; preds = %cond.end.4
  %26 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %27 = load i32, i32* %l_qcc_size, align 4, !tbaa !5
  %sub8 = sub i32 %27, 2
  call void @opj_write_bytes_LE(i8* %26, i32 %sub8, i32 2) #7
  %28 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %add.ptr9 = getelementptr inbounds i8, i8* %28, i64 2
  store i8* %add.ptr9, i8** %l_current_data, align 8, !tbaa !1
  %29 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %30 = load i32, i32* %p_comp_no.addr, align 4, !tbaa !5
  call void @opj_write_bytes_LE(i8* %29, i32 %30, i32 2) #7
  %31 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %add.ptr10 = getelementptr inbounds i8, i8* %31, i64 2
  store i8* %add.ptr10, i8** %l_current_data, align 8, !tbaa !1
  %32 = load i32, i32* %l_remaining_size, align 4, !tbaa !5
  %sub11 = sub i32 %32, 6
  store i32 %sub11, i32* %l_remaining_size, align 4, !tbaa !5
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %33 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %34 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number12 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %34, i32 0, i32 8
  %35 = load i32, i32* %m_current_tile_number12, align 4, !tbaa !11
  %36 = load i32, i32* %p_comp_no.addr, align 4, !tbaa !5
  %37 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %38 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call13 = call i32 @opj_j2k_write_SQcd_SQcc(%struct.opj_j2k* %33, i32 %35, i32 %36, i8* %37, i32* %l_remaining_size, %struct.opj_event_mgr* %38) #7
  %39 = load i32, i32* %l_qcc_size, align 4, !tbaa !5
  %40 = load i32*, i32** %p_data_written.addr, align 8, !tbaa !1
  store i32 %39, i32* %40, align 4, !tbaa !5
  %41 = bitcast i8** %l_current_data to i8*
  call void @llvm.lifetime.end(i64 8, i8* %41) #1
  %42 = bitcast i32* %l_remaining_size to i8*
  call void @llvm.lifetime.end(i64 4, i8* %42) #1
  %43 = bitcast i32* %l_qcc_size to i8*
  call void @llvm.lifetime.end(i64 4, i8* %43) #1
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @opj_j2k_write_poc_in_memory(%struct.opj_j2k* %p_j2k, i8* %p_data, i32* %p_data_written, %struct.opj_event_mgr* %p_manager) #0 {
entry:
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %p_data.addr = alloca i8*, align 8
  %p_data_written.addr = alloca i32*, align 8
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  %i = alloca i32, align 4
  %l_current_data = alloca i8*, align 8
  %l_nb_comp = alloca i32, align 4
  %l_nb_poc = alloca i32, align 4
  %l_poc_size = alloca i32, align 4
  %l_image = alloca %struct.opj_image*, align 8
  %l_tcp = alloca %struct.opj_tcp*, align 8
  %l_tccp = alloca %struct.opj_tccp*, align 8
  %l_current_poc = alloca %struct.opj_poc*, align 8
  %l_poc_room = alloca i32, align 4
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store i8* %p_data, i8** %p_data.addr, align 8, !tbaa !1
  store i32* %p_data_written, i32** %p_data_written.addr, align 8, !tbaa !1
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %0 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast i8** %l_current_data to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #1
  store i8* null, i8** %l_current_data, align 8, !tbaa !1
  %2 = bitcast i32* %l_nb_comp to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #1
  %3 = bitcast i32* %l_nb_poc to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #1
  %4 = bitcast i32* %l_poc_size to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #1
  %5 = bitcast %struct.opj_image** %l_image to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5) #1
  store %struct.opj_image* null, %struct.opj_image** %l_image, align 8, !tbaa !1
  %6 = bitcast %struct.opj_tcp** %l_tcp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6) #1
  store %struct.opj_tcp* null, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %7 = bitcast %struct.opj_tccp** %l_tccp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7) #1
  store %struct.opj_tccp* null, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %8 = bitcast %struct.opj_poc** %l_current_poc to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8) #1
  store %struct.opj_poc* null, %struct.opj_poc** %l_current_poc, align 8, !tbaa !1
  %9 = bitcast i32* %l_poc_room to i8*
  call void @llvm.lifetime.start(i64 4, i8* %9) #1
  %10 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cmp = icmp ne %struct.opj_j2k* %10, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 2947, i8* getelementptr inbounds ([91 x i8], [91 x i8]* @__PRETTY_FUNCTION__.opj_j2k_write_poc_in_memory, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %11, %cond.true
  %12 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %cmp1 = icmp ne %struct.opj_event_mgr* %12, null
  br i1 %cmp1, label %cond.true.2, label %cond.false.3

cond.true.2:                                      ; preds = %cond.end
  br label %cond.end.4

cond.false.3:                                     ; preds = %cond.end
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 2948, i8* getelementptr inbounds ([91 x i8], [91 x i8]* @__PRETTY_FUNCTION__.opj_j2k_write_poc_in_memory, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.4

cond.end.4:                                       ; preds = %13, %cond.true.2
  %14 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %14, i32 0, i32 8
  %15 = load i32, i32* %m_current_tile_number, align 4, !tbaa !11
  %idxprom = zext i32 %15 to i64
  %16 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %16, i32 0, i32 4
  %tcps = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp, i32 0, i32 17
  %17 = load %struct.opj_tcp*, %struct.opj_tcp** %tcps, align 8, !tbaa !88
  %arrayidx = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %17, i64 %idxprom
  store %struct.opj_tcp* %arrayidx, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %18 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %tccps = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %18, i32 0, i32 13
  %19 = load %struct.opj_tccp*, %struct.opj_tccp** %tccps, align 8, !tbaa !48
  %arrayidx5 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %19, i64 0
  store %struct.opj_tccp* %arrayidx5, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %20 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_private_image = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %20, i32 0, i32 2
  %21 = load %struct.opj_image*, %struct.opj_image** %m_private_image, align 8, !tbaa !38
  store %struct.opj_image* %21, %struct.opj_image** %l_image, align 8, !tbaa !1
  %22 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %numcomps = getelementptr inbounds %struct.opj_image, %struct.opj_image* %22, i32 0, i32 4
  %23 = load i32, i32* %numcomps, align 4, !tbaa !45
  store i32 %23, i32* %l_nb_comp, align 4, !tbaa !5
  %24 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %numpocs = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %24, i32 0, i32 6
  %25 = load i32, i32* %numpocs, align 4, !tbaa !51
  %add = add i32 1, %25
  store i32 %add, i32* %l_nb_poc, align 4, !tbaa !5
  %26 = load i32, i32* %l_nb_comp, align 4, !tbaa !5
  %cmp6 = icmp ule i32 %26, 256
  br i1 %cmp6, label %if.then, label %if.else

if.then:                                          ; preds = %cond.end.4
  store i32 1, i32* %l_poc_room, align 4, !tbaa !5
  br label %if.end

if.else:                                          ; preds = %cond.end.4
  store i32 2, i32* %l_poc_room, align 4, !tbaa !5
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %27 = load i32, i32* %l_poc_room, align 4, !tbaa !5
  %mul = mul i32 2, %27
  %add7 = add i32 5, %mul
  %28 = load i32, i32* %l_nb_poc, align 4, !tbaa !5
  %mul8 = mul i32 %add7, %28
  %add9 = add i32 4, %mul8
  store i32 %add9, i32* %l_poc_size, align 4, !tbaa !5
  %29 = load i8*, i8** %p_data.addr, align 8, !tbaa !1
  store i8* %29, i8** %l_current_data, align 8, !tbaa !1
  %30 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  call void @opj_write_bytes_LE(i8* %30, i32 65375, i32 2) #7
  %31 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %add.ptr = getelementptr inbounds i8, i8* %31, i64 2
  store i8* %add.ptr, i8** %l_current_data, align 8, !tbaa !1
  %32 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %33 = load i32, i32* %l_poc_size, align 4, !tbaa !5
  %sub = sub i32 %33, 2
  call void @opj_write_bytes_LE(i8* %32, i32 %sub, i32 2) #7
  %34 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %add.ptr10 = getelementptr inbounds i8, i8* %34, i64 2
  store i8* %add.ptr10, i8** %l_current_data, align 8, !tbaa !1
  %35 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %pocs = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %35, i32 0, i32 7
  %arraydecay = getelementptr inbounds [32 x %struct.opj_poc], [32 x %struct.opj_poc]* %pocs, i32 0, i32 0
  store %struct.opj_poc* %arraydecay, %struct.opj_poc** %l_current_poc, align 8, !tbaa !1
  store i32 0, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %36 = load i32, i32* %i, align 4, !tbaa !5
  %37 = load i32, i32* %l_nb_poc, align 4, !tbaa !5
  %cmp11 = icmp ult i32 %36, %37
  br i1 %cmp11, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %38 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %39 = load %struct.opj_poc*, %struct.opj_poc** %l_current_poc, align 8, !tbaa !1
  %resno0 = getelementptr inbounds %struct.opj_poc, %struct.opj_poc* %39, i32 0, i32 0
  %40 = load i32, i32* %resno0, align 4, !tbaa !153
  call void @opj_write_bytes_LE(i8* %38, i32 %40, i32 1) #7
  %41 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds i8, i8* %41, i32 1
  store i8* %incdec.ptr, i8** %l_current_data, align 8, !tbaa !1
  %42 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %43 = load %struct.opj_poc*, %struct.opj_poc** %l_current_poc, align 8, !tbaa !1
  %compno0 = getelementptr inbounds %struct.opj_poc, %struct.opj_poc* %43, i32 0, i32 1
  %44 = load i32, i32* %compno0, align 4, !tbaa !154
  %45 = load i32, i32* %l_poc_room, align 4, !tbaa !5
  call void @opj_write_bytes_LE(i8* %42, i32 %44, i32 %45) #7
  %46 = load i32, i32* %l_poc_room, align 4, !tbaa !5
  %47 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %idx.ext = zext i32 %46 to i64
  %add.ptr12 = getelementptr inbounds i8, i8* %47, i64 %idx.ext
  store i8* %add.ptr12, i8** %l_current_data, align 8, !tbaa !1
  %48 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %49 = load %struct.opj_poc*, %struct.opj_poc** %l_current_poc, align 8, !tbaa !1
  %layno1 = getelementptr inbounds %struct.opj_poc, %struct.opj_poc* %49, i32 0, i32 2
  %50 = load i32, i32* %layno1, align 4, !tbaa !155
  call void @opj_write_bytes_LE(i8* %48, i32 %50, i32 2) #7
  %51 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %add.ptr13 = getelementptr inbounds i8, i8* %51, i64 2
  store i8* %add.ptr13, i8** %l_current_data, align 8, !tbaa !1
  %52 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %53 = load %struct.opj_poc*, %struct.opj_poc** %l_current_poc, align 8, !tbaa !1
  %resno1 = getelementptr inbounds %struct.opj_poc, %struct.opj_poc* %53, i32 0, i32 3
  %54 = load i32, i32* %resno1, align 4, !tbaa !156
  call void @opj_write_bytes_LE(i8* %52, i32 %54, i32 1) #7
  %55 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %incdec.ptr14 = getelementptr inbounds i8, i8* %55, i32 1
  store i8* %incdec.ptr14, i8** %l_current_data, align 8, !tbaa !1
  %56 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %57 = load %struct.opj_poc*, %struct.opj_poc** %l_current_poc, align 8, !tbaa !1
  %compno1 = getelementptr inbounds %struct.opj_poc, %struct.opj_poc* %57, i32 0, i32 4
  %58 = load i32, i32* %compno1, align 4, !tbaa !54
  %59 = load i32, i32* %l_poc_room, align 4, !tbaa !5
  call void @opj_write_bytes_LE(i8* %56, i32 %58, i32 %59) #7
  %60 = load i32, i32* %l_poc_room, align 4, !tbaa !5
  %61 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %idx.ext15 = zext i32 %60 to i64
  %add.ptr16 = getelementptr inbounds i8, i8* %61, i64 %idx.ext15
  store i8* %add.ptr16, i8** %l_current_data, align 8, !tbaa !1
  %62 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %63 = load %struct.opj_poc*, %struct.opj_poc** %l_current_poc, align 8, !tbaa !1
  %prg = getelementptr inbounds %struct.opj_poc, %struct.opj_poc* %63, i32 0, i32 9
  %64 = load i32, i32* %prg, align 4, !tbaa !52
  call void @opj_write_bytes_LE(i8* %62, i32 %64, i32 1) #7
  %65 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %incdec.ptr17 = getelementptr inbounds i8, i8* %65, i32 1
  store i8* %incdec.ptr17, i8** %l_current_data, align 8, !tbaa !1
  %66 = load %struct.opj_poc*, %struct.opj_poc** %l_current_poc, align 8, !tbaa !1
  %layno118 = getelementptr inbounds %struct.opj_poc, %struct.opj_poc* %66, i32 0, i32 2
  %67 = load i32, i32* %layno118, align 4, !tbaa !155
  %68 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %numlayers = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %68, i32 0, i32 2
  %69 = load i32, i32* %numlayers, align 4, !tbaa !44
  %call = call i32 @opj_int_min(i32 %67, i32 %69) #7
  %70 = load %struct.opj_poc*, %struct.opj_poc** %l_current_poc, align 8, !tbaa !1
  %layno119 = getelementptr inbounds %struct.opj_poc, %struct.opj_poc* %70, i32 0, i32 2
  store i32 %call, i32* %layno119, align 4, !tbaa !155
  %71 = load %struct.opj_poc*, %struct.opj_poc** %l_current_poc, align 8, !tbaa !1
  %resno120 = getelementptr inbounds %struct.opj_poc, %struct.opj_poc* %71, i32 0, i32 3
  %72 = load i32, i32* %resno120, align 4, !tbaa !156
  %73 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %numresolutions = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %73, i32 0, i32 1
  %74 = load i32, i32* %numresolutions, align 4, !tbaa !161
  %call21 = call i32 @opj_int_min(i32 %72, i32 %74) #7
  %75 = load %struct.opj_poc*, %struct.opj_poc** %l_current_poc, align 8, !tbaa !1
  %resno122 = getelementptr inbounds %struct.opj_poc, %struct.opj_poc* %75, i32 0, i32 3
  store i32 %call21, i32* %resno122, align 4, !tbaa !156
  %76 = load %struct.opj_poc*, %struct.opj_poc** %l_current_poc, align 8, !tbaa !1
  %compno123 = getelementptr inbounds %struct.opj_poc, %struct.opj_poc* %76, i32 0, i32 4
  %77 = load i32, i32* %compno123, align 4, !tbaa !54
  %78 = load i32, i32* %l_nb_comp, align 4, !tbaa !5
  %call24 = call i32 @opj_int_min(i32 %77, i32 %78) #7
  %79 = load %struct.opj_poc*, %struct.opj_poc** %l_current_poc, align 8, !tbaa !1
  %compno125 = getelementptr inbounds %struct.opj_poc, %struct.opj_poc* %79, i32 0, i32 4
  store i32 %call24, i32* %compno125, align 4, !tbaa !54
  %80 = load %struct.opj_poc*, %struct.opj_poc** %l_current_poc, align 8, !tbaa !1
  %incdec.ptr26 = getelementptr inbounds %struct.opj_poc, %struct.opj_poc* %80, i32 1
  store %struct.opj_poc* %incdec.ptr26, %struct.opj_poc** %l_current_poc, align 8, !tbaa !1
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %81 = load i32, i32* %i, align 4, !tbaa !5
  %inc = add i32 %81, 1
  store i32 %inc, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %82 = load i32, i32* %l_poc_size, align 4, !tbaa !5
  %83 = load i32*, i32** %p_data_written.addr, align 8, !tbaa !1
  store i32 %82, i32* %83, align 4, !tbaa !5
  %84 = bitcast i32* %l_poc_room to i8*
  call void @llvm.lifetime.end(i64 4, i8* %84) #1
  %85 = bitcast %struct.opj_poc** %l_current_poc to i8*
  call void @llvm.lifetime.end(i64 8, i8* %85) #1
  %86 = bitcast %struct.opj_tccp** %l_tccp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %86) #1
  %87 = bitcast %struct.opj_tcp** %l_tcp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %87) #1
  %88 = bitcast %struct.opj_image** %l_image to i8*
  call void @llvm.lifetime.end(i64 8, i8* %88) #1
  %89 = bitcast i32* %l_poc_size to i8*
  call void @llvm.lifetime.end(i64 4, i8* %89) #1
  %90 = bitcast i32* %l_nb_poc to i8*
  call void @llvm.lifetime.end(i64 4, i8* %90) #1
  %91 = bitcast i32* %l_nb_comp to i8*
  call void @llvm.lifetime.end(i64 4, i8* %91) #1
  %92 = bitcast i8** %l_current_data to i8*
  call void @llvm.lifetime.end(i64 8, i8* %92) #1
  %93 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %93) #1
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @opj_j2k_write_sod(%struct.opj_j2k* %p_j2k, %struct.opj_tcd* %p_tile_coder, i8* %p_data, i32* %p_data_written, i32 %p_total_data_size, %struct.opj_stream_private* %p_stream, %struct.opj_event_mgr* %p_manager) #0 {
entry:
  %retval = alloca i32, align 4
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %p_tile_coder.addr = alloca %struct.opj_tcd*, align 8
  %p_data.addr = alloca i8*, align 8
  %p_data_written.addr = alloca i32*, align 8
  %p_total_data_size.addr = alloca i32, align 4
  %p_stream.addr = alloca %struct.opj_stream_private*, align 8
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  %l_cstr_info = alloca %struct.opj_codestream_info*, align 8
  %l_remaining_data = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store %struct.opj_tcd* %p_tile_coder, %struct.opj_tcd** %p_tile_coder.addr, align 8, !tbaa !1
  store i8* %p_data, i8** %p_data.addr, align 8, !tbaa !1
  store i32* %p_data_written, i32** %p_data_written.addr, align 8, !tbaa !1
  store i32 %p_total_data_size, i32* %p_total_data_size.addr, align 4, !tbaa !5
  store %struct.opj_stream_private* %p_stream, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %0 = bitcast %struct.opj_codestream_info** %l_cstr_info to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  store %struct.opj_codestream_info* null, %struct.opj_codestream_info** %l_cstr_info, align 8, !tbaa !1
  %1 = bitcast i32* %l_remaining_data to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cmp = icmp ne %struct.opj_j2k* %2, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 4133, i8* getelementptr inbounds ([140 x i8], [140 x i8]* @__PRETTY_FUNCTION__.opj_j2k_write_sod, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %3, %cond.true
  %4 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %cmp1 = icmp ne %struct.opj_event_mgr* %4, null
  br i1 %cmp1, label %cond.true.2, label %cond.false.3

cond.true.2:                                      ; preds = %cond.end
  br label %cond.end.4

cond.false.3:                                     ; preds = %cond.end
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 4134, i8* getelementptr inbounds ([140 x i8], [140 x i8]* @__PRETTY_FUNCTION__.opj_j2k_write_sod, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.4

cond.end.4:                                       ; preds = %5, %cond.true.2
  %6 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %cmp5 = icmp ne %struct.opj_stream_private* %6, null
  br i1 %cmp5, label %cond.true.6, label %cond.false.7

cond.true.6:                                      ; preds = %cond.end.4
  br label %cond.end.8

cond.false.7:                                     ; preds = %cond.end.4
  call void @__assert_fail(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 4135, i8* getelementptr inbounds ([140 x i8], [140 x i8]* @__PRETTY_FUNCTION__.opj_j2k_write_sod, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.8

cond.end.8:                                       ; preds = %7, %cond.true.6
  %8 = load i8*, i8** %p_data.addr, align 8, !tbaa !1
  call void @opj_write_bytes_LE(i8* %8, i32 65427, i32 2) #7
  %9 = load i8*, i8** %p_data.addr, align 8, !tbaa !1
  %add.ptr = getelementptr inbounds i8, i8* %9, i64 2
  store i8* %add.ptr, i8** %p_data.addr, align 8, !tbaa !1
  %10 = load i32, i32* %p_total_data_size.addr, align 4, !tbaa !5
  %sub = sub i32 %10, 4
  store i32 %sub, i32* %l_remaining_data, align 4, !tbaa !5
  %11 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %11, i32 0, i32 1
  %m_encoder = bitcast %union.anon* %m_specific_param to %struct.opj_j2k_enc*
  %m_current_poc_tile_part_number = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder, i32 0, i32 0
  %12 = load i32, i32* %m_current_poc_tile_part_number, align 4, !tbaa !254
  %13 = load %struct.opj_tcd*, %struct.opj_tcd** %p_tile_coder.addr, align 8, !tbaa !1
  %tp_num = getelementptr inbounds %struct.opj_tcd, %struct.opj_tcd* %13, i32 0, i32 1
  store i32 %12, i32* %tp_num, align 4, !tbaa !273
  %14 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param9 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %14, i32 0, i32 1
  %m_encoder10 = bitcast %union.anon* %m_specific_param9 to %struct.opj_j2k_enc*
  %m_current_tile_part_number = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder10, i32 0, i32 1
  %15 = load i32, i32* %m_current_tile_part_number, align 4, !tbaa !252
  %16 = load %struct.opj_tcd*, %struct.opj_tcd** %p_tile_coder.addr, align 8, !tbaa !1
  %cur_tp_num = getelementptr inbounds %struct.opj_tcd, %struct.opj_tcd* %16, i32 0, i32 2
  store i32 %15, i32* %cur_tp_num, align 4, !tbaa !274
  %17 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param11 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %17, i32 0, i32 1
  %m_encoder12 = bitcast %union.anon* %m_specific_param11 to %struct.opj_j2k_enc*
  %m_current_tile_part_number13 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder12, i32 0, i32 1
  %18 = load i32, i32* %m_current_tile_part_number13, align 4, !tbaa !252
  %cmp14 = icmp eq i32 %18, 0
  br i1 %cmp14, label %if.then, label %if.end.17

if.then:                                          ; preds = %cond.end.8
  %19 = load %struct.opj_tcd*, %struct.opj_tcd** %p_tile_coder.addr, align 8, !tbaa !1
  %tcd_image = getelementptr inbounds %struct.opj_tcd, %struct.opj_tcd* %19, i32 0, i32 5
  %20 = load %struct.opj_tcd_image*, %struct.opj_tcd_image** %tcd_image, align 8, !tbaa !190
  %tiles = getelementptr inbounds %struct.opj_tcd_image, %struct.opj_tcd_image* %20, i32 0, i32 0
  %21 = load %struct.opj_tcd_tile*, %struct.opj_tcd_tile** %tiles, align 8, !tbaa !192
  %packno = getelementptr inbounds %struct.opj_tcd_tile, %struct.opj_tcd_tile* %21, i32 0, i32 9
  store i32 0, i32* %packno, align 4, !tbaa !275
  %22 = load %struct.opj_codestream_info*, %struct.opj_codestream_info** %l_cstr_info, align 8, !tbaa !1
  %tobool = icmp ne %struct.opj_codestream_info* %22, null
  br i1 %tobool, label %if.then.15, label %if.end

if.then.15:                                       ; preds = %if.then
  %23 = load %struct.opj_codestream_info*, %struct.opj_codestream_info** %l_cstr_info, align 8, !tbaa !1
  %packno16 = getelementptr inbounds %struct.opj_codestream_info, %struct.opj_codestream_info* %23, i32 0, i32 1
  store i32 0, i32* %packno16, align 4, !tbaa !276
  br label %if.end

if.end:                                           ; preds = %if.then.15, %if.then
  br label %if.end.17

if.end.17:                                        ; preds = %if.end, %cond.end.8
  %24 = load i32*, i32** %p_data_written.addr, align 8, !tbaa !1
  store i32 0, i32* %24, align 4, !tbaa !5
  %25 = load %struct.opj_tcd*, %struct.opj_tcd** %p_tile_coder.addr, align 8, !tbaa !1
  %26 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %26, i32 0, i32 8
  %27 = load i32, i32* %m_current_tile_number, align 4, !tbaa !11
  %28 = load i8*, i8** %p_data.addr, align 8, !tbaa !1
  %29 = load i32*, i32** %p_data_written.addr, align 8, !tbaa !1
  %30 = load i32, i32* %l_remaining_data, align 4, !tbaa !5
  %31 = load %struct.opj_codestream_info*, %struct.opj_codestream_info** %l_cstr_info, align 8, !tbaa !1
  %call = call i32 @opj_tcd_encode_tile(%struct.opj_tcd* %25, i32 %27, i8* %28, i32* %29, i32 %30, %struct.opj_codestream_info* %31) #7
  %tobool18 = icmp ne i32 %call, 0
  br i1 %tobool18, label %if.end.21, label %if.then.19

if.then.19:                                       ; preds = %if.end.17
  %32 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call20 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %32, i32 1, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.182, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.21:                                        ; preds = %if.end.17
  %33 = load i32*, i32** %p_data_written.addr, align 8, !tbaa !1
  %34 = load i32, i32* %33, align 4, !tbaa !5
  %add = add i32 %34, 2
  store i32 %add, i32* %33, align 4, !tbaa !5
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.21, %if.then.19
  %35 = bitcast i32* %l_remaining_data to i8*
  call void @llvm.lifetime.end(i64 4, i8* %35) #1
  %36 = bitcast %struct.opj_codestream_info** %l_cstr_info to i8*
  call void @llvm.lifetime.end(i64 8, i8* %36) #1
  %37 = load i32, i32* %retval
  ret i32 %37
}

; Function Attrs: nounwind uwtable
define internal void @opj_j2k_update_tlm(%struct.opj_j2k* %p_j2k, i32 %p_tile_part_size) #0 {
entry:
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %p_tile_part_size.addr = alloca i32, align 4
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store i32 %p_tile_part_size, i32* %p_tile_part_size.addr, align 4, !tbaa !5
  %0 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %0, i32 0, i32 1
  %m_encoder = bitcast %union.anon* %m_specific_param to %struct.opj_j2k_enc*
  %m_tlm_sot_offsets_current = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder, i32 0, i32 4
  %1 = load i8*, i8** %m_tlm_sot_offsets_current, align 8, !tbaa !119
  %2 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %2, i32 0, i32 8
  %3 = load i32, i32* %m_current_tile_number, align 4, !tbaa !11
  call void @opj_write_bytes_LE(i8* %1, i32 %3, i32 1) #7
  %4 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param1 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %4, i32 0, i32 1
  %m_encoder2 = bitcast %union.anon* %m_specific_param1 to %struct.opj_j2k_enc*
  %m_tlm_sot_offsets_current3 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder2, i32 0, i32 4
  %5 = load i8*, i8** %m_tlm_sot_offsets_current3, align 8, !tbaa !119
  %incdec.ptr = getelementptr inbounds i8, i8* %5, i32 1
  store i8* %incdec.ptr, i8** %m_tlm_sot_offsets_current3, align 8, !tbaa !119
  %6 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param4 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %6, i32 0, i32 1
  %m_encoder5 = bitcast %union.anon* %m_specific_param4 to %struct.opj_j2k_enc*
  %m_tlm_sot_offsets_current6 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder5, i32 0, i32 4
  %7 = load i8*, i8** %m_tlm_sot_offsets_current6, align 8, !tbaa !119
  %8 = load i32, i32* %p_tile_part_size.addr, align 4, !tbaa !5
  call void @opj_write_bytes_LE(i8* %7, i32 %8, i32 4) #7
  %9 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param7 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %9, i32 0, i32 1
  %m_encoder8 = bitcast %union.anon* %m_specific_param7 to %struct.opj_j2k_enc*
  %m_tlm_sot_offsets_current9 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder8, i32 0, i32 4
  %10 = load i8*, i8** %m_tlm_sot_offsets_current9, align 8, !tbaa !119
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 4
  store i8* %add.ptr, i8** %m_tlm_sot_offsets_current9, align 8, !tbaa !119
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @opj_j2k_get_SPCod_SPCoc_size(%struct.opj_j2k* %p_j2k, i32 %p_tile_no, i32 %p_comp_no) #0 {
entry:
  %retval = alloca i32, align 4
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %p_tile_no.addr = alloca i32, align 4
  %p_comp_no.addr = alloca i32, align 4
  %l_cp = alloca %struct.opj_cp*, align 8
  %l_tcp = alloca %struct.opj_tcp*, align 8
  %l_tccp = alloca %struct.opj_tccp*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store i32 %p_tile_no, i32* %p_tile_no.addr, align 4, !tbaa !5
  store i32 %p_comp_no, i32* %p_comp_no.addr, align 4, !tbaa !5
  %0 = bitcast %struct.opj_cp** %l_cp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  store %struct.opj_cp* null, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %1 = bitcast %struct.opj_tcp** %l_tcp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #1
  store %struct.opj_tcp* null, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %2 = bitcast %struct.opj_tccp** %l_tccp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #1
  store %struct.opj_tccp* null, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %3 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cmp = icmp ne %struct.opj_j2k* %3, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 7839, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @__PRETTY_FUNCTION__.opj_j2k_get_SPCod_SPCoc_size, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %4, %cond.true
  %5 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %5, i32 0, i32 4
  store %struct.opj_cp* %m_cp, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %6 = load i32, i32* %p_tile_no.addr, align 4, !tbaa !5
  %idxprom = zext i32 %6 to i64
  %7 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %tcps = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %7, i32 0, i32 17
  %8 = load %struct.opj_tcp*, %struct.opj_tcp** %tcps, align 8, !tbaa !16
  %arrayidx = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %8, i64 %idxprom
  store %struct.opj_tcp* %arrayidx, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %9 = load i32, i32* %p_comp_no.addr, align 4, !tbaa !5
  %idxprom1 = zext i32 %9 to i64
  %10 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %tccps = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %10, i32 0, i32 13
  %11 = load %struct.opj_tccp*, %struct.opj_tccp** %tccps, align 8, !tbaa !48
  %arrayidx2 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %11, i64 %idxprom1
  store %struct.opj_tccp* %arrayidx2, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %12 = load i32, i32* %p_tile_no.addr, align 4, !tbaa !5
  %13 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %tw = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %13, i32 0, i32 6
  %14 = load i32, i32* %tw, align 4, !tbaa !14
  %15 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %th = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %15, i32 0, i32 7
  %16 = load i32, i32* %th, align 4, !tbaa !15
  %mul = mul i32 %14, %16
  %cmp3 = icmp ult i32 %12, %mul
  br i1 %cmp3, label %cond.true.4, label %cond.false.5

cond.true.4:                                      ; preds = %cond.end
  br label %cond.end.6

cond.false.5:                                     ; preds = %cond.end
  call void @__assert_fail(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.174, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 7846, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @__PRETTY_FUNCTION__.opj_j2k_get_SPCod_SPCoc_size, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.6

cond.end.6:                                       ; preds = %17, %cond.true.4
  %18 = load i32, i32* %p_comp_no.addr, align 4, !tbaa !5
  %19 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_private_image = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %19, i32 0, i32 2
  %20 = load %struct.opj_image*, %struct.opj_image** %m_private_image, align 8, !tbaa !38
  %numcomps = getelementptr inbounds %struct.opj_image, %struct.opj_image* %20, i32 0, i32 4
  %21 = load i32, i32* %numcomps, align 4, !tbaa !45
  %cmp7 = icmp ult i32 %18, %21
  br i1 %cmp7, label %cond.true.8, label %cond.false.9

cond.true.8:                                      ; preds = %cond.end.6
  br label %cond.end.10

cond.false.9:                                     ; preds = %cond.end.6
  call void @__assert_fail(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.70, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 7847, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @__PRETTY_FUNCTION__.opj_j2k_get_SPCod_SPCoc_size, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.10

cond.end.10:                                      ; preds = %22, %cond.true.8
  %23 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %csty = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %23, i32 0, i32 0
  %24 = load i32, i32* %csty, align 4, !tbaa !49
  %and = and i32 %24, 1
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %cond.end.10
  %25 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %numresolutions = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %25, i32 0, i32 1
  %26 = load i32, i32* %numresolutions, align 4, !tbaa !161
  %add = add i32 5, %26
  store i32 %add, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.else:                                          ; preds = %cond.end.10
  store i32 5, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.else, %if.then
  %27 = bitcast %struct.opj_tccp** %l_tccp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %27) #1
  %28 = bitcast %struct.opj_tcp** %l_tcp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %28) #1
  %29 = bitcast %struct.opj_cp** %l_cp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %29) #1
  %30 = load i32, i32* %retval
  ret i32 %30
}

; Function Attrs: nounwind uwtable
define internal i32 @opj_j2k_write_SPCod_SPCoc(%struct.opj_j2k* %p_j2k, i32 %p_tile_no, i32 %p_comp_no, i8* %p_data, i32* %p_header_size, %struct.opj_event_mgr* %p_manager) #0 {
entry:
  %retval = alloca i32, align 4
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %p_tile_no.addr = alloca i32, align 4
  %p_comp_no.addr = alloca i32, align 4
  %p_data.addr = alloca i8*, align 8
  %p_header_size.addr = alloca i32*, align 8
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  %i = alloca i32, align 4
  %l_cp = alloca %struct.opj_cp*, align 8
  %l_tcp = alloca %struct.opj_tcp*, align 8
  %l_tccp = alloca %struct.opj_tccp*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store i32 %p_tile_no, i32* %p_tile_no.addr, align 4, !tbaa !5
  store i32 %p_comp_no, i32* %p_comp_no.addr, align 4, !tbaa !5
  store i8* %p_data, i8** %p_data.addr, align 8, !tbaa !1
  store i32* %p_header_size, i32** %p_header_size.addr, align 8, !tbaa !1
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %0 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast %struct.opj_cp** %l_cp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #1
  store %struct.opj_cp* null, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %2 = bitcast %struct.opj_tcp** %l_tcp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #1
  store %struct.opj_tcp* null, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %3 = bitcast %struct.opj_tccp** %l_tccp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #1
  store %struct.opj_tccp* null, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %4 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cmp = icmp ne %struct.opj_j2k* %4, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 7870, i8* getelementptr inbounds ([122 x i8], [122 x i8]* @__PRETTY_FUNCTION__.opj_j2k_write_SPCod_SPCoc, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %5, %cond.true
  %6 = load i32*, i32** %p_header_size.addr, align 8, !tbaa !1
  %cmp1 = icmp ne i32* %6, null
  br i1 %cmp1, label %cond.true.2, label %cond.false.3

cond.true.2:                                      ; preds = %cond.end
  br label %cond.end.4

cond.false.3:                                     ; preds = %cond.end
  call void @__assert_fail(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.175, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 7871, i8* getelementptr inbounds ([122 x i8], [122 x i8]* @__PRETTY_FUNCTION__.opj_j2k_write_SPCod_SPCoc, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.4

cond.end.4:                                       ; preds = %7, %cond.true.2
  %8 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %cmp5 = icmp ne %struct.opj_event_mgr* %8, null
  br i1 %cmp5, label %cond.true.6, label %cond.false.7

cond.true.6:                                      ; preds = %cond.end.4
  br label %cond.end.8

cond.false.7:                                     ; preds = %cond.end.4
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 7872, i8* getelementptr inbounds ([122 x i8], [122 x i8]* @__PRETTY_FUNCTION__.opj_j2k_write_SPCod_SPCoc, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.8

cond.end.8:                                       ; preds = %9, %cond.true.6
  %10 = load i8*, i8** %p_data.addr, align 8, !tbaa !1
  %cmp9 = icmp ne i8* %10, null
  br i1 %cmp9, label %cond.true.10, label %cond.false.11

cond.true.10:                                     ; preds = %cond.end.8
  br label %cond.end.12

cond.false.11:                                    ; preds = %cond.end.8
  call void @__assert_fail(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.176, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 7873, i8* getelementptr inbounds ([122 x i8], [122 x i8]* @__PRETTY_FUNCTION__.opj_j2k_write_SPCod_SPCoc, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.12

cond.end.12:                                      ; preds = %11, %cond.true.10
  %12 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %12, i32 0, i32 4
  store %struct.opj_cp* %m_cp, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %13 = load i32, i32* %p_tile_no.addr, align 4, !tbaa !5
  %idxprom = zext i32 %13 to i64
  %14 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %tcps = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %14, i32 0, i32 17
  %15 = load %struct.opj_tcp*, %struct.opj_tcp** %tcps, align 8, !tbaa !16
  %arrayidx = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %15, i64 %idxprom
  store %struct.opj_tcp* %arrayidx, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %16 = load i32, i32* %p_comp_no.addr, align 4, !tbaa !5
  %idxprom13 = zext i32 %16 to i64
  %17 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %tccps = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %17, i32 0, i32 13
  %18 = load %struct.opj_tccp*, %struct.opj_tccp** %tccps, align 8, !tbaa !48
  %arrayidx14 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %18, i64 %idxprom13
  store %struct.opj_tccp* %arrayidx14, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %19 = load i32, i32* %p_tile_no.addr, align 4, !tbaa !5
  %20 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %tw = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %20, i32 0, i32 6
  %21 = load i32, i32* %tw, align 4, !tbaa !14
  %22 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %th = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %22, i32 0, i32 7
  %23 = load i32, i32* %th, align 4, !tbaa !15
  %mul = mul i32 %21, %23
  %cmp15 = icmp ult i32 %19, %mul
  br i1 %cmp15, label %cond.true.16, label %cond.false.17

cond.true.16:                                     ; preds = %cond.end.12
  br label %cond.end.18

cond.false.17:                                    ; preds = %cond.end.12
  call void @__assert_fail(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.174, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 7880, i8* getelementptr inbounds ([122 x i8], [122 x i8]* @__PRETTY_FUNCTION__.opj_j2k_write_SPCod_SPCoc, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.18

cond.end.18:                                      ; preds = %24, %cond.true.16
  %25 = load i32, i32* %p_comp_no.addr, align 4, !tbaa !5
  %26 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_private_image = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %26, i32 0, i32 2
  %27 = load %struct.opj_image*, %struct.opj_image** %m_private_image, align 8, !tbaa !38
  %numcomps = getelementptr inbounds %struct.opj_image, %struct.opj_image* %27, i32 0, i32 4
  %28 = load i32, i32* %numcomps, align 4, !tbaa !45
  %cmp19 = icmp ult i32 %25, %28
  br i1 %cmp19, label %cond.true.20, label %cond.false.21

cond.true.20:                                     ; preds = %cond.end.18
  br label %cond.end.22

cond.false.21:                                    ; preds = %cond.end.18
  call void @__assert_fail(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.177, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 7881, i8* getelementptr inbounds ([122 x i8], [122 x i8]* @__PRETTY_FUNCTION__.opj_j2k_write_SPCod_SPCoc, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.22

cond.end.22:                                      ; preds = %29, %cond.true.20
  %30 = load i32*, i32** %p_header_size.addr, align 8, !tbaa !1
  %31 = load i32, i32* %30, align 4, !tbaa !5
  %cmp23 = icmp ult i32 %31, 5
  br i1 %cmp23, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end.22
  %32 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %32, i32 1, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.178, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %cond.end.22
  %33 = load i8*, i8** %p_data.addr, align 8, !tbaa !1
  %34 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %numresolutions = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %34, i32 0, i32 1
  %35 = load i32, i32* %numresolutions, align 4, !tbaa !161
  %sub = sub i32 %35, 1
  call void @opj_write_bytes_LE(i8* %33, i32 %sub, i32 1) #7
  %36 = load i8*, i8** %p_data.addr, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds i8, i8* %36, i32 1
  store i8* %incdec.ptr, i8** %p_data.addr, align 8, !tbaa !1
  %37 = load i8*, i8** %p_data.addr, align 8, !tbaa !1
  %38 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %cblkw = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %38, i32 0, i32 2
  %39 = load i32, i32* %cblkw, align 4, !tbaa !163
  %sub24 = sub i32 %39, 2
  call void @opj_write_bytes_LE(i8* %37, i32 %sub24, i32 1) #7
  %40 = load i8*, i8** %p_data.addr, align 8, !tbaa !1
  %incdec.ptr25 = getelementptr inbounds i8, i8* %40, i32 1
  store i8* %incdec.ptr25, i8** %p_data.addr, align 8, !tbaa !1
  %41 = load i8*, i8** %p_data.addr, align 8, !tbaa !1
  %42 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %cblkh = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %42, i32 0, i32 3
  %43 = load i32, i32* %cblkh, align 4, !tbaa !165
  %sub26 = sub i32 %43, 2
  call void @opj_write_bytes_LE(i8* %41, i32 %sub26, i32 1) #7
  %44 = load i8*, i8** %p_data.addr, align 8, !tbaa !1
  %incdec.ptr27 = getelementptr inbounds i8, i8* %44, i32 1
  store i8* %incdec.ptr27, i8** %p_data.addr, align 8, !tbaa !1
  %45 = load i8*, i8** %p_data.addr, align 8, !tbaa !1
  %46 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %cblksty = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %46, i32 0, i32 4
  %47 = load i32, i32* %cblksty, align 4, !tbaa !167
  call void @opj_write_bytes_LE(i8* %45, i32 %47, i32 1) #7
  %48 = load i8*, i8** %p_data.addr, align 8, !tbaa !1
  %incdec.ptr28 = getelementptr inbounds i8, i8* %48, i32 1
  store i8* %incdec.ptr28, i8** %p_data.addr, align 8, !tbaa !1
  %49 = load i8*, i8** %p_data.addr, align 8, !tbaa !1
  %50 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %qmfbid = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %50, i32 0, i32 5
  %51 = load i32, i32* %qmfbid, align 4, !tbaa !169
  call void @opj_write_bytes_LE(i8* %49, i32 %51, i32 1) #7
  %52 = load i8*, i8** %p_data.addr, align 8, !tbaa !1
  %incdec.ptr29 = getelementptr inbounds i8, i8* %52, i32 1
  store i8* %incdec.ptr29, i8** %p_data.addr, align 8, !tbaa !1
  %53 = load i32*, i32** %p_header_size.addr, align 8, !tbaa !1
  %54 = load i32, i32* %53, align 4, !tbaa !5
  %sub30 = sub i32 %54, 5
  %55 = load i32*, i32** %p_header_size.addr, align 8, !tbaa !1
  store i32 %sub30, i32* %55, align 4, !tbaa !5
  %56 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %csty = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %56, i32 0, i32 0
  %57 = load i32, i32* %csty, align 4, !tbaa !49
  %and = and i32 %57, 1
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then.31, label %if.end.46

if.then.31:                                       ; preds = %if.end
  %58 = load i32*, i32** %p_header_size.addr, align 8, !tbaa !1
  %59 = load i32, i32* %58, align 4, !tbaa !5
  %60 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %numresolutions32 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %60, i32 0, i32 1
  %61 = load i32, i32* %numresolutions32, align 4, !tbaa !161
  %cmp33 = icmp ult i32 %59, %61
  br i1 %cmp33, label %if.then.34, label %if.end.36

if.then.34:                                       ; preds = %if.then.31
  %62 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call35 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %62, i32 1, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.178, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.36:                                        ; preds = %if.then.31
  store i32 0, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.36
  %63 = load i32, i32* %i, align 4, !tbaa !5
  %64 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %numresolutions37 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %64, i32 0, i32 1
  %65 = load i32, i32* %numresolutions37, align 4, !tbaa !161
  %cmp38 = icmp ult i32 %63, %65
  br i1 %cmp38, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %66 = load i8*, i8** %p_data.addr, align 8, !tbaa !1
  %67 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom39 = zext i32 %67 to i64
  %68 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %prcw = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %68, i32 0, i32 10
  %arrayidx40 = getelementptr inbounds [33 x i32], [33 x i32]* %prcw, i32 0, i64 %idxprom39
  %69 = load i32, i32* %arrayidx40, align 4, !tbaa !5
  %70 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom41 = zext i32 %70 to i64
  %71 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %prch = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %71, i32 0, i32 11
  %arrayidx42 = getelementptr inbounds [33 x i32], [33 x i32]* %prch, i32 0, i64 %idxprom41
  %72 = load i32, i32* %arrayidx42, align 4, !tbaa !5
  %shl = shl i32 %72, 4
  %add = add i32 %69, %shl
  call void @opj_write_bytes_LE(i8* %66, i32 %add, i32 1) #7
  %73 = load i8*, i8** %p_data.addr, align 8, !tbaa !1
  %incdec.ptr43 = getelementptr inbounds i8, i8* %73, i32 1
  store i8* %incdec.ptr43, i8** %p_data.addr, align 8, !tbaa !1
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %74 = load i32, i32* %i, align 4, !tbaa !5
  %inc = add i32 %74, 1
  store i32 %inc, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %75 = load i32*, i32** %p_header_size.addr, align 8, !tbaa !1
  %76 = load i32, i32* %75, align 4, !tbaa !5
  %77 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %numresolutions44 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %77, i32 0, i32 1
  %78 = load i32, i32* %numresolutions44, align 4, !tbaa !161
  %sub45 = sub i32 %76, %78
  %79 = load i32*, i32** %p_header_size.addr, align 8, !tbaa !1
  store i32 %sub45, i32* %79, align 4, !tbaa !5
  br label %if.end.46

if.end.46:                                        ; preds = %for.end, %if.end
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.46, %if.then.34, %if.then
  %80 = bitcast %struct.opj_tccp** %l_tccp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %80) #1
  %81 = bitcast %struct.opj_tcp** %l_tcp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %81) #1
  %82 = bitcast %struct.opj_cp** %l_cp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %82) #1
  %83 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %83) #1
  %84 = load i32, i32* %retval
  ret i32 %84
}

; Function Attrs: nounwind uwtable
define internal i32 @opj_j2k_get_SQcd_SQcc_size(%struct.opj_j2k* %p_j2k, i32 %p_tile_no, i32 %p_comp_no) #0 {
entry:
  %retval = alloca i32, align 4
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %p_tile_no.addr = alloca i32, align 4
  %p_comp_no.addr = alloca i32, align 4
  %l_num_bands = alloca i32, align 4
  %l_cp = alloca %struct.opj_cp*, align 8
  %l_tcp = alloca %struct.opj_tcp*, align 8
  %l_tccp = alloca %struct.opj_tccp*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store i32 %p_tile_no, i32* %p_tile_no.addr, align 4, !tbaa !5
  store i32 %p_comp_no, i32* %p_comp_no.addr, align 4, !tbaa !5
  %0 = bitcast i32* %l_num_bands to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast %struct.opj_cp** %l_cp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #1
  store %struct.opj_cp* null, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %2 = bitcast %struct.opj_tcp** %l_tcp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #1
  store %struct.opj_tcp* null, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %3 = bitcast %struct.opj_tccp** %l_tccp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #1
  store %struct.opj_tccp* null, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %4 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cmp = icmp ne %struct.opj_j2k* %4, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 8079, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @__PRETTY_FUNCTION__.opj_j2k_get_SQcd_SQcc_size, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %5, %cond.true
  %6 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %6, i32 0, i32 4
  store %struct.opj_cp* %m_cp, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %7 = load i32, i32* %p_tile_no.addr, align 4, !tbaa !5
  %idxprom = zext i32 %7 to i64
  %8 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %tcps = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %8, i32 0, i32 17
  %9 = load %struct.opj_tcp*, %struct.opj_tcp** %tcps, align 8, !tbaa !16
  %arrayidx = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %9, i64 %idxprom
  store %struct.opj_tcp* %arrayidx, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %10 = load i32, i32* %p_comp_no.addr, align 4, !tbaa !5
  %idxprom1 = zext i32 %10 to i64
  %11 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %tccps = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %11, i32 0, i32 13
  %12 = load %struct.opj_tccp*, %struct.opj_tccp** %tccps, align 8, !tbaa !48
  %arrayidx2 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %12, i64 %idxprom1
  store %struct.opj_tccp* %arrayidx2, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %13 = load i32, i32* %p_tile_no.addr, align 4, !tbaa !5
  %14 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %tw = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %14, i32 0, i32 6
  %15 = load i32, i32* %tw, align 4, !tbaa !14
  %16 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %th = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %16, i32 0, i32 7
  %17 = load i32, i32* %th, align 4, !tbaa !15
  %mul = mul i32 %15, %17
  %cmp3 = icmp ult i32 %13, %mul
  br i1 %cmp3, label %cond.true.4, label %cond.false.5

cond.true.4:                                      ; preds = %cond.end
  br label %cond.end.6

cond.false.5:                                     ; preds = %cond.end
  call void @__assert_fail(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.179, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 8086, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @__PRETTY_FUNCTION__.opj_j2k_get_SQcd_SQcc_size, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.6

cond.end.6:                                       ; preds = %18, %cond.true.4
  %19 = load i32, i32* %p_comp_no.addr, align 4, !tbaa !5
  %20 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_private_image = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %20, i32 0, i32 2
  %21 = load %struct.opj_image*, %struct.opj_image** %m_private_image, align 8, !tbaa !38
  %numcomps = getelementptr inbounds %struct.opj_image, %struct.opj_image* %21, i32 0, i32 4
  %22 = load i32, i32* %numcomps, align 4, !tbaa !45
  %cmp7 = icmp ult i32 %19, %22
  br i1 %cmp7, label %cond.true.8, label %cond.false.9

cond.true.8:                                      ; preds = %cond.end.6
  br label %cond.end.10

cond.false.9:                                     ; preds = %cond.end.6
  call void @__assert_fail(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.70, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 8087, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @__PRETTY_FUNCTION__.opj_j2k_get_SQcd_SQcc_size, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.10

cond.end.10:                                      ; preds = %23, %cond.true.8
  %24 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %qntsty = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %24, i32 0, i32 6
  %25 = load i32, i32* %qntsty, align 4, !tbaa !170
  %cmp11 = icmp eq i32 %25, 1
  br i1 %cmp11, label %cond.true.12, label %cond.false.13

cond.true.12:                                     ; preds = %cond.end.10
  br label %cond.end.15

cond.false.13:                                    ; preds = %cond.end.10
  %26 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %numresolutions = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %26, i32 0, i32 1
  %27 = load i32, i32* %numresolutions, align 4, !tbaa !161
  %mul14 = mul i32 %27, 3
  %sub = sub i32 %mul14, 2
  br label %cond.end.15

cond.end.15:                                      ; preds = %cond.false.13, %cond.true.12
  %cond = phi i32 [ 1, %cond.true.12 ], [ %sub, %cond.false.13 ]
  store i32 %cond, i32* %l_num_bands, align 4, !tbaa !5
  %28 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %qntsty16 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %28, i32 0, i32 6
  %29 = load i32, i32* %qntsty16, align 4, !tbaa !170
  %cmp17 = icmp eq i32 %29, 0
  br i1 %cmp17, label %if.then, label %if.else

if.then:                                          ; preds = %cond.end.15
  %30 = load i32, i32* %l_num_bands, align 4, !tbaa !5
  %add = add i32 1, %30
  store i32 %add, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.else:                                          ; preds = %cond.end.15
  %31 = load i32, i32* %l_num_bands, align 4, !tbaa !5
  %mul18 = mul i32 2, %31
  %add19 = add i32 1, %mul18
  store i32 %add19, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.else, %if.then
  %32 = bitcast %struct.opj_tccp** %l_tccp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %32) #1
  %33 = bitcast %struct.opj_tcp** %l_tcp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %33) #1
  %34 = bitcast %struct.opj_cp** %l_cp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %34) #1
  %35 = bitcast i32* %l_num_bands to i8*
  call void @llvm.lifetime.end(i64 4, i8* %35) #1
  %36 = load i32, i32* %retval
  ret i32 %36
}

; Function Attrs: nounwind uwtable
define internal i32 @opj_j2k_write_SQcd_SQcc(%struct.opj_j2k* %p_j2k, i32 %p_tile_no, i32 %p_comp_no, i8* %p_data, i32* %p_header_size, %struct.opj_event_mgr* %p_manager) #0 {
entry:
  %retval = alloca i32, align 4
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %p_tile_no.addr = alloca i32, align 4
  %p_comp_no.addr = alloca i32, align 4
  %p_data.addr = alloca i8*, align 8
  %p_header_size.addr = alloca i32*, align 8
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  %l_header_size = alloca i32, align 4
  %l_band_no = alloca i32, align 4
  %l_num_bands = alloca i32, align 4
  %l_expn = alloca i32, align 4
  %l_mant = alloca i32, align 4
  %l_cp = alloca %struct.opj_cp*, align 8
  %l_tcp = alloca %struct.opj_tcp*, align 8
  %l_tccp = alloca %struct.opj_tccp*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store i32 %p_tile_no, i32* %p_tile_no.addr, align 4, !tbaa !5
  store i32 %p_comp_no, i32* %p_comp_no.addr, align 4, !tbaa !5
  store i8* %p_data, i8** %p_data.addr, align 8, !tbaa !1
  store i32* %p_header_size, i32** %p_header_size.addr, align 8, !tbaa !1
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %0 = bitcast i32* %l_header_size to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast i32* %l_band_no to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = bitcast i32* %l_num_bands to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #1
  %3 = bitcast i32* %l_expn to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #1
  %4 = bitcast i32* %l_mant to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #1
  %5 = bitcast %struct.opj_cp** %l_cp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5) #1
  store %struct.opj_cp* null, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %6 = bitcast %struct.opj_tcp** %l_tcp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6) #1
  store %struct.opj_tcp* null, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %7 = bitcast %struct.opj_tccp** %l_tccp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7) #1
  store %struct.opj_tccp* null, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %8 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cmp = icmp ne %struct.opj_j2k* %8, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 8115, i8* getelementptr inbounds ([120 x i8], [120 x i8]* @__PRETTY_FUNCTION__.opj_j2k_write_SQcd_SQcc, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %9, %cond.true
  %10 = load i32*, i32** %p_header_size.addr, align 8, !tbaa !1
  %cmp1 = icmp ne i32* %10, null
  br i1 %cmp1, label %cond.true.2, label %cond.false.3

cond.true.2:                                      ; preds = %cond.end
  br label %cond.end.4

cond.false.3:                                     ; preds = %cond.end
  call void @__assert_fail(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.175, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 8116, i8* getelementptr inbounds ([120 x i8], [120 x i8]* @__PRETTY_FUNCTION__.opj_j2k_write_SQcd_SQcc, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.4

cond.end.4:                                       ; preds = %11, %cond.true.2
  %12 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %cmp5 = icmp ne %struct.opj_event_mgr* %12, null
  br i1 %cmp5, label %cond.true.6, label %cond.false.7

cond.true.6:                                      ; preds = %cond.end.4
  br label %cond.end.8

cond.false.7:                                     ; preds = %cond.end.4
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 8117, i8* getelementptr inbounds ([120 x i8], [120 x i8]* @__PRETTY_FUNCTION__.opj_j2k_write_SQcd_SQcc, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.8

cond.end.8:                                       ; preds = %13, %cond.true.6
  %14 = load i8*, i8** %p_data.addr, align 8, !tbaa !1
  %cmp9 = icmp ne i8* %14, null
  br i1 %cmp9, label %cond.true.10, label %cond.false.11

cond.true.10:                                     ; preds = %cond.end.8
  br label %cond.end.12

cond.false.11:                                    ; preds = %cond.end.8
  call void @__assert_fail(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.176, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 8118, i8* getelementptr inbounds ([120 x i8], [120 x i8]* @__PRETTY_FUNCTION__.opj_j2k_write_SQcd_SQcc, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.12

cond.end.12:                                      ; preds = %15, %cond.true.10
  %16 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %16, i32 0, i32 4
  store %struct.opj_cp* %m_cp, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %17 = load i32, i32* %p_tile_no.addr, align 4, !tbaa !5
  %idxprom = zext i32 %17 to i64
  %18 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %tcps = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %18, i32 0, i32 17
  %19 = load %struct.opj_tcp*, %struct.opj_tcp** %tcps, align 8, !tbaa !16
  %arrayidx = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %19, i64 %idxprom
  store %struct.opj_tcp* %arrayidx, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %20 = load i32, i32* %p_comp_no.addr, align 4, !tbaa !5
  %idxprom13 = zext i32 %20 to i64
  %21 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %tccps = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %21, i32 0, i32 13
  %22 = load %struct.opj_tccp*, %struct.opj_tccp** %tccps, align 8, !tbaa !48
  %arrayidx14 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %22, i64 %idxprom13
  store %struct.opj_tccp* %arrayidx14, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %23 = load i32, i32* %p_tile_no.addr, align 4, !tbaa !5
  %24 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %tw = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %24, i32 0, i32 6
  %25 = load i32, i32* %tw, align 4, !tbaa !14
  %26 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %th = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %26, i32 0, i32 7
  %27 = load i32, i32* %th, align 4, !tbaa !15
  %mul = mul i32 %25, %27
  %cmp15 = icmp ult i32 %23, %mul
  br i1 %cmp15, label %cond.true.16, label %cond.false.17

cond.true.16:                                     ; preds = %cond.end.12
  br label %cond.end.18

cond.false.17:                                    ; preds = %cond.end.12
  call void @__assert_fail(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.179, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 8125, i8* getelementptr inbounds ([120 x i8], [120 x i8]* @__PRETTY_FUNCTION__.opj_j2k_write_SQcd_SQcc, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.18

cond.end.18:                                      ; preds = %28, %cond.true.16
  %29 = load i32, i32* %p_comp_no.addr, align 4, !tbaa !5
  %30 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_private_image = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %30, i32 0, i32 2
  %31 = load %struct.opj_image*, %struct.opj_image** %m_private_image, align 8, !tbaa !38
  %numcomps = getelementptr inbounds %struct.opj_image, %struct.opj_image* %31, i32 0, i32 4
  %32 = load i32, i32* %numcomps, align 4, !tbaa !45
  %cmp19 = icmp ult i32 %29, %32
  br i1 %cmp19, label %cond.true.20, label %cond.false.21

cond.true.20:                                     ; preds = %cond.end.18
  br label %cond.end.22

cond.false.21:                                    ; preds = %cond.end.18
  call void @__assert_fail(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.180, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 8126, i8* getelementptr inbounds ([120 x i8], [120 x i8]* @__PRETTY_FUNCTION__.opj_j2k_write_SQcd_SQcc, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.22

cond.end.22:                                      ; preds = %33, %cond.true.20
  %34 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %qntsty = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %34, i32 0, i32 6
  %35 = load i32, i32* %qntsty, align 4, !tbaa !170
  %cmp23 = icmp eq i32 %35, 1
  br i1 %cmp23, label %cond.true.24, label %cond.false.25

cond.true.24:                                     ; preds = %cond.end.22
  br label %cond.end.27

cond.false.25:                                    ; preds = %cond.end.22
  %36 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %numresolutions = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %36, i32 0, i32 1
  %37 = load i32, i32* %numresolutions, align 4, !tbaa !161
  %mul26 = mul i32 %37, 3
  %sub = sub i32 %mul26, 2
  br label %cond.end.27

cond.end.27:                                      ; preds = %cond.false.25, %cond.true.24
  %cond = phi i32 [ 1, %cond.true.24 ], [ %sub, %cond.false.25 ]
  store i32 %cond, i32* %l_num_bands, align 4, !tbaa !5
  %38 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %qntsty28 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %38, i32 0, i32 6
  %39 = load i32, i32* %qntsty28, align 4, !tbaa !170
  %cmp29 = icmp eq i32 %39, 0
  br i1 %cmp29, label %if.then, label %if.else

if.then:                                          ; preds = %cond.end.27
  %40 = load i32, i32* %l_num_bands, align 4, !tbaa !5
  %add = add i32 1, %40
  store i32 %add, i32* %l_header_size, align 4, !tbaa !5
  %41 = load i32*, i32** %p_header_size.addr, align 8, !tbaa !1
  %42 = load i32, i32* %41, align 4, !tbaa !5
  %43 = load i32, i32* %l_header_size, align 4, !tbaa !5
  %cmp30 = icmp ult i32 %42, %43
  br i1 %cmp30, label %if.then.31, label %if.end

if.then.31:                                       ; preds = %if.then
  %44 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %44, i32 1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.181, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %if.then
  %45 = load i8*, i8** %p_data.addr, align 8, !tbaa !1
  %46 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %qntsty32 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %46, i32 0, i32 6
  %47 = load i32, i32* %qntsty32, align 4, !tbaa !170
  %48 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %numgbits = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %48, i32 0, i32 8
  %49 = load i32, i32* %numgbits, align 4, !tbaa !171
  %shl = shl i32 %49, 5
  %add33 = add i32 %47, %shl
  call void @opj_write_bytes_LE(i8* %45, i32 %add33, i32 1) #7
  %50 = load i8*, i8** %p_data.addr, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds i8, i8* %50, i32 1
  store i8* %incdec.ptr, i8** %p_data.addr, align 8, !tbaa !1
  store i32 0, i32* %l_band_no, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %51 = load i32, i32* %l_band_no, align 4, !tbaa !5
  %52 = load i32, i32* %l_num_bands, align 4, !tbaa !5
  %cmp34 = icmp ult i32 %51, %52
  br i1 %cmp34, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %53 = load i32, i32* %l_band_no, align 4, !tbaa !5
  %idxprom35 = zext i32 %53 to i64
  %54 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %stepsizes = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %54, i32 0, i32 7
  %arrayidx36 = getelementptr inbounds [97 x %struct.opj_stepsize], [97 x %struct.opj_stepsize]* %stepsizes, i32 0, i64 %idxprom35
  %expn = getelementptr inbounds %struct.opj_stepsize, %struct.opj_stepsize* %arrayidx36, i32 0, i32 0
  %55 = load i32, i32* %expn, align 4, !tbaa !221
  store i32 %55, i32* %l_expn, align 4, !tbaa !5
  %56 = load i8*, i8** %p_data.addr, align 8, !tbaa !1
  %57 = load i32, i32* %l_expn, align 4, !tbaa !5
  %shl37 = shl i32 %57, 3
  call void @opj_write_bytes_LE(i8* %56, i32 %shl37, i32 1) #7
  %58 = load i8*, i8** %p_data.addr, align 8, !tbaa !1
  %incdec.ptr38 = getelementptr inbounds i8, i8* %58, i32 1
  store i8* %incdec.ptr38, i8** %p_data.addr, align 8, !tbaa !1
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %59 = load i32, i32* %l_band_no, align 4, !tbaa !5
  %inc = add i32 %59, 1
  store i32 %inc, i32* %l_band_no, align 4, !tbaa !5
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end.65

if.else:                                          ; preds = %cond.end.27
  %60 = load i32, i32* %l_num_bands, align 4, !tbaa !5
  %mul39 = mul i32 2, %60
  %add40 = add i32 1, %mul39
  store i32 %add40, i32* %l_header_size, align 4, !tbaa !5
  %61 = load i32*, i32** %p_header_size.addr, align 8, !tbaa !1
  %62 = load i32, i32* %61, align 4, !tbaa !5
  %63 = load i32, i32* %l_header_size, align 4, !tbaa !5
  %cmp41 = icmp ult i32 %62, %63
  br i1 %cmp41, label %if.then.42, label %if.end.44

if.then.42:                                       ; preds = %if.else
  %64 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call43 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %64, i32 1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.181, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.44:                                        ; preds = %if.else
  %65 = load i8*, i8** %p_data.addr, align 8, !tbaa !1
  %66 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %qntsty45 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %66, i32 0, i32 6
  %67 = load i32, i32* %qntsty45, align 4, !tbaa !170
  %68 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %numgbits46 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %68, i32 0, i32 8
  %69 = load i32, i32* %numgbits46, align 4, !tbaa !171
  %shl47 = shl i32 %69, 5
  %add48 = add i32 %67, %shl47
  call void @opj_write_bytes_LE(i8* %65, i32 %add48, i32 1) #7
  %70 = load i8*, i8** %p_data.addr, align 8, !tbaa !1
  %incdec.ptr49 = getelementptr inbounds i8, i8* %70, i32 1
  store i8* %incdec.ptr49, i8** %p_data.addr, align 8, !tbaa !1
  store i32 0, i32* %l_band_no, align 4, !tbaa !5
  br label %for.cond.50

for.cond.50:                                      ; preds = %for.inc.62, %if.end.44
  %71 = load i32, i32* %l_band_no, align 4, !tbaa !5
  %72 = load i32, i32* %l_num_bands, align 4, !tbaa !5
  %cmp51 = icmp ult i32 %71, %72
  br i1 %cmp51, label %for.body.52, label %for.end.64

for.body.52:                                      ; preds = %for.cond.50
  %73 = load i32, i32* %l_band_no, align 4, !tbaa !5
  %idxprom53 = zext i32 %73 to i64
  %74 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %stepsizes54 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %74, i32 0, i32 7
  %arrayidx55 = getelementptr inbounds [97 x %struct.opj_stepsize], [97 x %struct.opj_stepsize]* %stepsizes54, i32 0, i64 %idxprom53
  %expn56 = getelementptr inbounds %struct.opj_stepsize, %struct.opj_stepsize* %arrayidx55, i32 0, i32 0
  %75 = load i32, i32* %expn56, align 4, !tbaa !221
  store i32 %75, i32* %l_expn, align 4, !tbaa !5
  %76 = load i32, i32* %l_band_no, align 4, !tbaa !5
  %idxprom57 = zext i32 %76 to i64
  %77 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %stepsizes58 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %77, i32 0, i32 7
  %arrayidx59 = getelementptr inbounds [97 x %struct.opj_stepsize], [97 x %struct.opj_stepsize]* %stepsizes58, i32 0, i64 %idxprom57
  %mant = getelementptr inbounds %struct.opj_stepsize, %struct.opj_stepsize* %arrayidx59, i32 0, i32 1
  %78 = load i32, i32* %mant, align 4, !tbaa !219
  store i32 %78, i32* %l_mant, align 4, !tbaa !5
  %79 = load i8*, i8** %p_data.addr, align 8, !tbaa !1
  %80 = load i32, i32* %l_expn, align 4, !tbaa !5
  %shl60 = shl i32 %80, 11
  %81 = load i32, i32* %l_mant, align 4, !tbaa !5
  %add61 = add i32 %shl60, %81
  call void @opj_write_bytes_LE(i8* %79, i32 %add61, i32 2) #7
  %82 = load i8*, i8** %p_data.addr, align 8, !tbaa !1
  %add.ptr = getelementptr inbounds i8, i8* %82, i64 2
  store i8* %add.ptr, i8** %p_data.addr, align 8, !tbaa !1
  br label %for.inc.62

for.inc.62:                                       ; preds = %for.body.52
  %83 = load i32, i32* %l_band_no, align 4, !tbaa !5
  %inc63 = add i32 %83, 1
  store i32 %inc63, i32* %l_band_no, align 4, !tbaa !5
  br label %for.cond.50

for.end.64:                                       ; preds = %for.cond.50
  br label %if.end.65

if.end.65:                                        ; preds = %for.end.64, %for.end
  %84 = load i32*, i32** %p_header_size.addr, align 8, !tbaa !1
  %85 = load i32, i32* %84, align 4, !tbaa !5
  %86 = load i32, i32* %l_header_size, align 4, !tbaa !5
  %sub66 = sub i32 %85, %86
  %87 = load i32*, i32** %p_header_size.addr, align 8, !tbaa !1
  store i32 %sub66, i32* %87, align 4, !tbaa !5
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.65, %if.then.42, %if.then.31
  %88 = bitcast %struct.opj_tccp** %l_tccp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %88) #1
  %89 = bitcast %struct.opj_tcp** %l_tcp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %89) #1
  %90 = bitcast %struct.opj_cp** %l_cp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %90) #1
  %91 = bitcast i32* %l_mant to i8*
  call void @llvm.lifetime.end(i64 4, i8* %91) #1
  %92 = bitcast i32* %l_expn to i8*
  call void @llvm.lifetime.end(i64 4, i8* %92) #1
  %93 = bitcast i32* %l_num_bands to i8*
  call void @llvm.lifetime.end(i64 4, i8* %93) #1
  %94 = bitcast i32* %l_band_no to i8*
  call void @llvm.lifetime.end(i64 4, i8* %94) #1
  %95 = bitcast i32* %l_header_size to i8*
  call void @llvm.lifetime.end(i64 4, i8* %95) #1
  %96 = load i32, i32* %retval
  ret i32 %96
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @opj_int_min(i32 %a, i32 %b) #5 {
entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4, !tbaa !5
  store i32 %b, i32* %b.addr, align 4, !tbaa !5
  %0 = load i32, i32* %a.addr, align 4, !tbaa !5
  %1 = load i32, i32* %b.addr, align 4, !tbaa !5
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %2 = load i32, i32* %a.addr, align 4, !tbaa !5
  br label %cond.end

cond.false:                                       ; preds = %entry
  %3 = load i32, i32* %b.addr, align 4, !tbaa !5
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %3, %cond.false ]
  ret i32 %cond
}

declare i32 @opj_tcd_encode_tile(%struct.opj_tcd*, i32, i8*, i32*, i32, %struct.opj_codestream_info*) #3

; Function Attrs: nounwind uwtable
define internal i32 @opj_j2k_get_num_tp(%struct.opj_cp* %cp, i32 %pino, i32 %tileno) #0 {
entry:
  %cp.addr = alloca %struct.opj_cp*, align 8
  %pino.addr = alloca i32, align 4
  %tileno.addr = alloca i32, align 4
  %prog = alloca i8*, align 8
  %i = alloca i32, align 4
  %tpnum = alloca i32, align 4
  %tcp = alloca %struct.opj_tcp*, align 8
  %l_current_poc = alloca %struct.opj_poc*, align 8
  store %struct.opj_cp* %cp, %struct.opj_cp** %cp.addr, align 8, !tbaa !1
  store i32 %pino, i32* %pino.addr, align 4, !tbaa !5
  store i32 %tileno, i32* %tileno.addr, align 4, !tbaa !5
  %0 = bitcast i8** %prog to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  store i8* null, i8** %prog, align 8, !tbaa !1
  %1 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = bitcast i32* %tpnum to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #1
  store i32 1, i32* %tpnum, align 4, !tbaa !5
  %3 = bitcast %struct.opj_tcp** %tcp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #1
  store %struct.opj_tcp* null, %struct.opj_tcp** %tcp, align 8, !tbaa !1
  %4 = bitcast %struct.opj_poc** %l_current_poc to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4) #1
  store %struct.opj_poc* null, %struct.opj_poc** %l_current_poc, align 8, !tbaa !1
  %5 = load i32, i32* %tileno.addr, align 4, !tbaa !5
  %6 = load %struct.opj_cp*, %struct.opj_cp** %cp.addr, align 8, !tbaa !1
  %tw = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %6, i32 0, i32 6
  %7 = load i32, i32* %tw, align 4, !tbaa !14
  %8 = load %struct.opj_cp*, %struct.opj_cp** %cp.addr, align 8, !tbaa !1
  %th = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %8, i32 0, i32 7
  %9 = load i32, i32* %th, align 4, !tbaa !15
  %mul = mul i32 %7, %9
  %cmp = icmp ult i32 %5, %mul
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.183, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 1556, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.opj_j2k_get_num_tp, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %10, %cond.true
  %11 = load i32, i32* %pino.addr, align 4, !tbaa !5
  %12 = load i32, i32* %tileno.addr, align 4, !tbaa !5
  %idxprom = zext i32 %12 to i64
  %13 = load %struct.opj_cp*, %struct.opj_cp** %cp.addr, align 8, !tbaa !1
  %tcps = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %13, i32 0, i32 17
  %14 = load %struct.opj_tcp*, %struct.opj_tcp** %tcps, align 8, !tbaa !16
  %arrayidx = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %14, i64 %idxprom
  %numpocs = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %arrayidx, i32 0, i32 6
  %15 = load i32, i32* %numpocs, align 4, !tbaa !51
  %add = add i32 %15, 1
  %cmp1 = icmp ult i32 %11, %add
  br i1 %cmp1, label %cond.true.2, label %cond.false.3

cond.true.2:                                      ; preds = %cond.end
  br label %cond.end.4

cond.false.3:                                     ; preds = %cond.end
  call void @__assert_fail(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.184, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 1557, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.opj_j2k_get_num_tp, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.4

cond.end.4:                                       ; preds = %16, %cond.true.2
  %17 = load i32, i32* %tileno.addr, align 4, !tbaa !5
  %idxprom5 = zext i32 %17 to i64
  %18 = load %struct.opj_cp*, %struct.opj_cp** %cp.addr, align 8, !tbaa !1
  %tcps6 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %18, i32 0, i32 17
  %19 = load %struct.opj_tcp*, %struct.opj_tcp** %tcps6, align 8, !tbaa !16
  %arrayidx7 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %19, i64 %idxprom5
  store %struct.opj_tcp* %arrayidx7, %struct.opj_tcp** %tcp, align 8, !tbaa !1
  %20 = load %struct.opj_tcp*, %struct.opj_tcp** %tcp, align 8, !tbaa !1
  %cmp8 = icmp ne %struct.opj_tcp* %20, null
  br i1 %cmp8, label %cond.true.9, label %cond.false.10

cond.true.9:                                      ; preds = %cond.end.4
  br label %cond.end.11

cond.false.10:                                    ; preds = %cond.end.4
  call void @__assert_fail(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.185, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 1561, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.opj_j2k_get_num_tp, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.11

cond.end.11:                                      ; preds = %21, %cond.true.9
  %22 = load i32, i32* %pino.addr, align 4, !tbaa !5
  %idxprom12 = zext i32 %22 to i64
  %23 = load %struct.opj_tcp*, %struct.opj_tcp** %tcp, align 8, !tbaa !1
  %pocs = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %23, i32 0, i32 7
  %arrayidx13 = getelementptr inbounds [32 x %struct.opj_poc], [32 x %struct.opj_poc]* %pocs, i32 0, i64 %idxprom12
  store %struct.opj_poc* %arrayidx13, %struct.opj_poc** %l_current_poc, align 8, !tbaa !1
  %24 = load %struct.opj_poc*, %struct.opj_poc** %l_current_poc, align 8, !tbaa !1
  %cmp14 = icmp ne %struct.opj_poc* %24, null
  br i1 %cmp14, label %cond.true.15, label %cond.false.16

cond.true.15:                                     ; preds = %cond.end.11
  br label %cond.end.17

cond.false.16:                                    ; preds = %cond.end.11
  call void @__assert_fail(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.186, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 1564, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.opj_j2k_get_num_tp, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.17

cond.end.17:                                      ; preds = %25, %cond.true.15
  %26 = load %struct.opj_tcp*, %struct.opj_tcp** %tcp, align 8, !tbaa !1
  %prg = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %26, i32 0, i32 1
  %27 = load i32, i32* %prg, align 4, !tbaa !40
  %call = call i8* @opj_j2k_convert_progression_order(i32 %27) #7
  store i8* %call, i8** %prog, align 8, !tbaa !1
  %28 = load i8*, i8** %prog, align 8, !tbaa !1
  %call18 = call i64 @strlen(i8* %28) #10
  %cmp19 = icmp ugt i64 %call18, 0
  br i1 %cmp19, label %cond.true.20, label %cond.false.21

cond.true.20:                                     ; preds = %cond.end.17
  br label %cond.end.22

cond.false.21:                                    ; preds = %cond.end.17
  call void @__assert_fail(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.187, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 1568, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.opj_j2k_get_num_tp, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.22

cond.end.22:                                      ; preds = %29, %cond.true.20
  %30 = load %struct.opj_cp*, %struct.opj_cp** %cp.addr, align 8, !tbaa !1
  %m_specific_param = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %30, i32 0, i32 18
  %m_enc = bitcast %union.anon.0* %m_specific_param to %struct.opj_encoding_param*
  %m_tp_on = getelementptr inbounds %struct.opj_encoding_param, %struct.opj_encoding_param* %m_enc, i32 0, i32 5
  %bf.load = load i8, i8* %m_tp_on, align 1
  %bf.lshr = lshr i8 %bf.load, 3
  %bf.clear = and i8 %bf.lshr, 1
  %bf.cast = zext i8 %bf.clear to i32
  %cmp23 = icmp eq i32 %bf.cast, 1
  br i1 %cmp23, label %if.then, label %if.else

if.then:                                          ; preds = %cond.end.22
  store i32 0, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then
  %31 = load i32, i32* %i, align 4, !tbaa !5
  %cmp24 = icmp ult i32 %31, 4
  br i1 %cmp24, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %32 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom25 = zext i32 %32 to i64
  %33 = load i8*, i8** %prog, align 8, !tbaa !1
  %arrayidx26 = getelementptr inbounds i8, i8* %33, i64 %idxprom25
  %34 = load i8, i8* %arrayidx26, align 1, !tbaa !103
  %conv = sext i8 %34 to i32
  switch i32 %conv, label %sw.epilog [
    i32 67, label %sw.bb
    i32 82, label %sw.bb.28
    i32 80, label %sw.bb.30
    i32 76, label %sw.bb.32
  ]

sw.bb:                                            ; preds = %for.body
  %35 = load %struct.opj_poc*, %struct.opj_poc** %l_current_poc, align 8, !tbaa !1
  %compE = getelementptr inbounds %struct.opj_poc, %struct.opj_poc* %35, i32 0, i32 22
  %36 = load i32, i32* %compE, align 4, !tbaa !278
  %37 = load i32, i32* %tpnum, align 4, !tbaa !5
  %mul27 = mul i32 %37, %36
  store i32 %mul27, i32* %tpnum, align 4, !tbaa !5
  br label %sw.epilog

sw.bb.28:                                         ; preds = %for.body
  %38 = load %struct.opj_poc*, %struct.opj_poc** %l_current_poc, align 8, !tbaa !1
  %resE = getelementptr inbounds %struct.opj_poc, %struct.opj_poc* %38, i32 0, i32 21
  %39 = load i32, i32* %resE, align 4, !tbaa !279
  %40 = load i32, i32* %tpnum, align 4, !tbaa !5
  %mul29 = mul i32 %40, %39
  store i32 %mul29, i32* %tpnum, align 4, !tbaa !5
  br label %sw.epilog

sw.bb.30:                                         ; preds = %for.body
  %41 = load %struct.opj_poc*, %struct.opj_poc** %l_current_poc, align 8, !tbaa !1
  %prcE = getelementptr inbounds %struct.opj_poc, %struct.opj_poc* %41, i32 0, i32 23
  %42 = load i32, i32* %prcE, align 4, !tbaa !280
  %43 = load i32, i32* %tpnum, align 4, !tbaa !5
  %mul31 = mul i32 %43, %42
  store i32 %mul31, i32* %tpnum, align 4, !tbaa !5
  br label %sw.epilog

sw.bb.32:                                         ; preds = %for.body
  %44 = load %struct.opj_poc*, %struct.opj_poc** %l_current_poc, align 8, !tbaa !1
  %layE = getelementptr inbounds %struct.opj_poc, %struct.opj_poc* %44, i32 0, i32 20
  %45 = load i32, i32* %layE, align 4, !tbaa !281
  %46 = load i32, i32* %tpnum, align 4, !tbaa !5
  %mul33 = mul i32 %46, %45
  store i32 %mul33, i32* %tpnum, align 4, !tbaa !5
  br label %sw.epilog

sw.epilog:                                        ; preds = %for.body, %sw.bb.32, %sw.bb.30, %sw.bb.28, %sw.bb
  %47 = load %struct.opj_cp*, %struct.opj_cp** %cp.addr, align 8, !tbaa !1
  %m_specific_param34 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %47, i32 0, i32 18
  %m_enc35 = bitcast %union.anon.0* %m_specific_param34 to %struct.opj_encoding_param*
  %m_tp_flag = getelementptr inbounds %struct.opj_encoding_param, %struct.opj_encoding_param* %m_enc35, i32 0, i32 4
  %48 = load i8, i8* %m_tp_flag, align 1, !tbaa !146
  %conv36 = zext i8 %48 to i32
  %49 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom37 = zext i32 %49 to i64
  %50 = load i8*, i8** %prog, align 8, !tbaa !1
  %arrayidx38 = getelementptr inbounds i8, i8* %50, i64 %idxprom37
  %51 = load i8, i8* %arrayidx38, align 1, !tbaa !103
  %conv39 = sext i8 %51 to i32
  %cmp40 = icmp eq i32 %conv36, %conv39
  br i1 %cmp40, label %if.then.42, label %if.end

if.then.42:                                       ; preds = %sw.epilog
  %52 = load i32, i32* %i, align 4, !tbaa !5
  %53 = load %struct.opj_cp*, %struct.opj_cp** %cp.addr, align 8, !tbaa !1
  %m_specific_param43 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %53, i32 0, i32 18
  %m_enc44 = bitcast %union.anon.0* %m_specific_param43 to %struct.opj_encoding_param*
  %m_tp_pos = getelementptr inbounds %struct.opj_encoding_param, %struct.opj_encoding_param* %m_enc44, i32 0, i32 2
  store i32 %52, i32* %m_tp_pos, align 4, !tbaa !282
  br label %for.end

if.end:                                           ; preds = %sw.epilog
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %54 = load i32, i32* %i, align 4, !tbaa !5
  %inc = add i32 %54, 1
  store i32 %inc, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.end:                                          ; preds = %if.then.42, %for.cond
  br label %if.end.45

if.else:                                          ; preds = %cond.end.22
  store i32 1, i32* %tpnum, align 4, !tbaa !5
  br label %if.end.45

if.end.45:                                        ; preds = %if.else, %for.end
  %55 = load i32, i32* %tpnum, align 4, !tbaa !5
  %56 = bitcast %struct.opj_poc** %l_current_poc to i8*
  call void @llvm.lifetime.end(i64 8, i8* %56) #1
  %57 = bitcast %struct.opj_tcp** %tcp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %57) #1
  %58 = bitcast i32* %tpnum to i8*
  call void @llvm.lifetime.end(i64 4, i8* %58) #1
  %59 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %59) #1
  %60 = bitcast i8** %prog to i8*
  call void @llvm.lifetime.end(i64 8, i8* %60) #1
  ret i32 %55
}

; Function Attrs: nounwind uwtable
define internal i32 @opj_j2k_write_eoc(%struct.opj_j2k* %p_j2k, %struct.opj_stream_private* %p_stream, %struct.opj_event_mgr* %p_manager) #0 {
entry:
  %retval = alloca i32, align 4
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %p_stream.addr = alloca %struct.opj_stream_private*, align 8
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store %struct.opj_stream_private* %p_stream, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %0 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cmp = icmp ne %struct.opj_j2k* %0, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 4372, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @__PRETTY_FUNCTION__.opj_j2k_write_eoc, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %1, %cond.true
  %2 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %cmp1 = icmp ne %struct.opj_event_mgr* %2, null
  br i1 %cmp1, label %cond.true.2, label %cond.false.3

cond.true.2:                                      ; preds = %cond.end
  br label %cond.end.4

cond.false.3:                                     ; preds = %cond.end
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 4373, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @__PRETTY_FUNCTION__.opj_j2k_write_eoc, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.4

cond.end.4:                                       ; preds = %3, %cond.true.2
  %4 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %cmp5 = icmp ne %struct.opj_stream_private* %4, null
  br i1 %cmp5, label %cond.true.6, label %cond.false.7

cond.true.6:                                      ; preds = %cond.end.4
  br label %cond.end.8

cond.false.7:                                     ; preds = %cond.end.4
  call void @__assert_fail(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 4374, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @__PRETTY_FUNCTION__.opj_j2k_write_eoc, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.8

cond.end.8:                                       ; preds = %5, %cond.true.6
  %6 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %6, i32 0, i32 1
  %m_encoder = bitcast %union.anon* %m_specific_param to %struct.opj_j2k_enc*
  %m_header_tile_data = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder, i32 0, i32 8
  %7 = load i8*, i8** %m_header_tile_data, align 8, !tbaa !110
  call void @opj_write_bytes_LE(i8* %7, i32 65497, i32 2) #7
  %8 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %9 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param9 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %9, i32 0, i32 1
  %m_encoder10 = bitcast %union.anon* %m_specific_param9 to %struct.opj_j2k_enc*
  %m_header_tile_data11 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder10, i32 0, i32 8
  %10 = load i8*, i8** %m_header_tile_data11, align 8, !tbaa !110
  %11 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call = call i64 @opj_stream_write_data(%struct.opj_stream_private* %8, i8* %10, i64 2, %struct.opj_event_mgr* %11) #7
  %cmp12 = icmp ne i64 %call, 2
  br i1 %cmp12, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end.8
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %cond.end.8
  %12 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %13 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call13 = call i32 @opj_stream_flush(%struct.opj_stream_private* %12, %struct.opj_event_mgr* %13) #7
  %tobool = icmp ne i32 %call13, 0
  br i1 %tobool, label %if.end.15, label %if.then.14

if.then.14:                                       ; preds = %if.end
  store i32 0, i32* %retval
  br label %return

if.end.15:                                        ; preds = %if.end
  store i32 1, i32* %retval
  br label %return

return:                                           ; preds = %if.end.15, %if.then.14, %if.then
  %14 = load i32, i32* %retval
  ret i32 %14
}

; Function Attrs: nounwind uwtable
define internal i32 @opj_j2k_write_updated_tlm(%struct.opj_j2k* %p_j2k, %struct.opj_stream_private* %p_stream, %struct.opj_event_mgr* %p_manager) #0 {
entry:
  %retval = alloca i32, align 4
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %p_stream.addr = alloca %struct.opj_stream_private*, align 8
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  %l_tlm_size = alloca i32, align 4
  %l_tlm_position = alloca i64, align 8
  %l_current_position = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store %struct.opj_stream_private* %p_stream, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %0 = bitcast i32* %l_tlm_size to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast i64* %l_tlm_position to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #1
  %2 = bitcast i64* %l_current_position to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #1
  %3 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cmp = icmp ne %struct.opj_j2k* %3, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 9667, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @__PRETTY_FUNCTION__.opj_j2k_write_updated_tlm, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %4, %cond.true
  %5 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %cmp1 = icmp ne %struct.opj_event_mgr* %5, null
  br i1 %cmp1, label %cond.true.2, label %cond.false.3

cond.true.2:                                      ; preds = %cond.end
  br label %cond.end.4

cond.false.3:                                     ; preds = %cond.end
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 9668, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @__PRETTY_FUNCTION__.opj_j2k_write_updated_tlm, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.4

cond.end.4:                                       ; preds = %6, %cond.true.2
  %7 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %cmp5 = icmp ne %struct.opj_stream_private* %7, null
  br i1 %cmp5, label %cond.true.6, label %cond.false.7

cond.true.6:                                      ; preds = %cond.end.4
  br label %cond.end.8

cond.false.7:                                     ; preds = %cond.end.4
  call void @__assert_fail(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 9669, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @__PRETTY_FUNCTION__.opj_j2k_write_updated_tlm, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.8

cond.end.8:                                       ; preds = %8, %cond.true.6
  %9 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %9, i32 0, i32 1
  %m_encoder = bitcast %union.anon* %m_specific_param to %struct.opj_j2k_enc*
  %m_total_tile_parts = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder, i32 0, i32 5
  %10 = load i32, i32* %m_total_tile_parts, align 4, !tbaa !283
  %mul = mul i32 5, %10
  store i32 %mul, i32* %l_tlm_size, align 4, !tbaa !5
  %11 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param9 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %11, i32 0, i32 1
  %m_encoder10 = bitcast %union.anon* %m_specific_param9 to %struct.opj_j2k_enc*
  %m_tlm_start = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder10, i32 0, i32 2
  %12 = load i64, i64* %m_tlm_start, align 8, !tbaa !284
  %add = add nsw i64 6, %12
  store i64 %add, i64* %l_tlm_position, align 8, !tbaa !135
  %13 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %call = call i64 @opj_stream_tell(%struct.opj_stream_private* %13) #7
  store i64 %call, i64* %l_current_position, align 8, !tbaa !135
  %14 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %15 = load i64, i64* %l_tlm_position, align 8, !tbaa !135
  %16 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call11 = call i32 @opj_stream_seek(%struct.opj_stream_private* %14, i64 %15, %struct.opj_event_mgr* %16) #7
  %tobool = icmp ne i32 %call11, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %cond.end.8
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %cond.end.8
  %17 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %18 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param12 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %18, i32 0, i32 1
  %m_encoder13 = bitcast %union.anon* %m_specific_param12 to %struct.opj_j2k_enc*
  %m_tlm_sot_offsets_buffer = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder13, i32 0, i32 3
  %19 = load i8*, i8** %m_tlm_sot_offsets_buffer, align 8, !tbaa !118
  %20 = load i32, i32* %l_tlm_size, align 4, !tbaa !5
  %conv = zext i32 %20 to i64
  %21 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call14 = call i64 @opj_stream_write_data(%struct.opj_stream_private* %17, i8* %19, i64 %conv, %struct.opj_event_mgr* %21) #7
  %22 = load i32, i32* %l_tlm_size, align 4, !tbaa !5
  %conv15 = zext i32 %22 to i64
  %cmp16 = icmp ne i64 %call14, %conv15
  br i1 %cmp16, label %if.then.18, label %if.end.19

if.then.18:                                       ; preds = %if.end
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.19:                                        ; preds = %if.end
  %23 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %24 = load i64, i64* %l_current_position, align 8, !tbaa !135
  %25 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call20 = call i32 @opj_stream_seek(%struct.opj_stream_private* %23, i64 %24, %struct.opj_event_mgr* %25) #7
  %tobool21 = icmp ne i32 %call20, 0
  br i1 %tobool21, label %if.end.23, label %if.then.22

if.then.22:                                       ; preds = %if.end.19
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.23:                                        ; preds = %if.end.19
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.23, %if.then.22, %if.then.18, %if.then
  %26 = bitcast i64* %l_current_position to i8*
  call void @llvm.lifetime.end(i64 8, i8* %26) #1
  %27 = bitcast i64* %l_tlm_position to i8*
  call void @llvm.lifetime.end(i64 8, i8* %27) #1
  %28 = bitcast i32* %l_tlm_size to i8*
  call void @llvm.lifetime.end(i64 4, i8* %28) #1
  %29 = load i32, i32* %retval
  ret i32 %29
}

; Function Attrs: nounwind uwtable
define internal i32 @opj_j2k_write_epc(%struct.opj_j2k* %p_j2k, %struct.opj_stream_private* %p_stream, %struct.opj_event_mgr* %p_manager) #0 {
entry:
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %p_stream.addr = alloca %struct.opj_stream_private*, align 8
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  %l_cstr_index = alloca %struct.opj_codestream_index*, align 8
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store %struct.opj_stream_private* %p_stream, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %0 = bitcast %struct.opj_codestream_index** %l_cstr_index to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  store %struct.opj_codestream_index* null, %struct.opj_codestream_index** %l_cstr_index, align 8, !tbaa !1
  %1 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cmp = icmp ne %struct.opj_j2k* %1, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 4820, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @__PRETTY_FUNCTION__.opj_j2k_write_epc, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %2, %cond.true
  %3 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %cmp1 = icmp ne %struct.opj_event_mgr* %3, null
  br i1 %cmp1, label %cond.true.2, label %cond.false.3

cond.true.2:                                      ; preds = %cond.end
  br label %cond.end.4

cond.false.3:                                     ; preds = %cond.end
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 4821, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @__PRETTY_FUNCTION__.opj_j2k_write_epc, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.4

cond.end.4:                                       ; preds = %4, %cond.true.2
  %5 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %cmp5 = icmp ne %struct.opj_stream_private* %5, null
  br i1 %cmp5, label %cond.true.6, label %cond.false.7

cond.true.6:                                      ; preds = %cond.end.4
  br label %cond.end.8

cond.false.7:                                     ; preds = %cond.end.4
  call void @__assert_fail(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 4822, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @__PRETTY_FUNCTION__.opj_j2k_write_epc, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.8

cond.end.8:                                       ; preds = %6, %cond.true.6
  %7 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cstr_index = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %7, i32 0, i32 7
  %8 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index, align 8, !tbaa !29
  store %struct.opj_codestream_index* %8, %struct.opj_codestream_index** %l_cstr_index, align 8, !tbaa !1
  %9 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %l_cstr_index, align 8, !tbaa !1
  %tobool = icmp ne %struct.opj_codestream_index* %9, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end.8
  %10 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %call = call i64 @opj_stream_tell(%struct.opj_stream_private* %10) #7
  %11 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %l_cstr_index, align 8, !tbaa !1
  %codestream_size = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %11, i32 0, i32 2
  store i64 %call, i64* %codestream_size, align 8, !tbaa !249
  %12 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %l_cstr_index, align 8, !tbaa !1
  %main_head_start = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %12, i32 0, i32 0
  %13 = load i64, i64* %main_head_start, align 8, !tbaa !222
  %14 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %l_cstr_index, align 8, !tbaa !1
  %codestream_size9 = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %14, i32 0, i32 2
  %15 = load i64, i64* %codestream_size9, align 8, !tbaa !249
  %sub = sub i64 %15, %13
  store i64 %sub, i64* %codestream_size9, align 8, !tbaa !249
  br label %if.end

if.end:                                           ; preds = %if.then, %cond.end.8
  %16 = bitcast %struct.opj_codestream_index** %l_cstr_index to i8*
  call void @llvm.lifetime.end(i64 8, i8* %16) #1
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @opj_j2k_end_encoding(%struct.opj_j2k* %p_j2k, %struct.opj_stream_private* %p_stream, %struct.opj_event_mgr* %p_manager) #0 {
entry:
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %p_stream.addr = alloca %struct.opj_stream_private*, align 8
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store %struct.opj_stream_private* %p_stream, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %0 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cmp = icmp ne %struct.opj_j2k* %0, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 9695, i8* getelementptr inbounds ([96 x i8], [96 x i8]* @__PRETTY_FUNCTION__.opj_j2k_end_encoding, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %1, %cond.true
  %2 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %cmp1 = icmp ne %struct.opj_event_mgr* %2, null
  br i1 %cmp1, label %cond.true.2, label %cond.false.3

cond.true.2:                                      ; preds = %cond.end
  br label %cond.end.4

cond.false.3:                                     ; preds = %cond.end
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 9696, i8* getelementptr inbounds ([96 x i8], [96 x i8]* @__PRETTY_FUNCTION__.opj_j2k_end_encoding, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.4

cond.end.4:                                       ; preds = %3, %cond.true.2
  %4 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %cmp5 = icmp ne %struct.opj_stream_private* %4, null
  br i1 %cmp5, label %cond.true.6, label %cond.false.7

cond.true.6:                                      ; preds = %cond.end.4
  br label %cond.end.8

cond.false.7:                                     ; preds = %cond.end.4
  call void @__assert_fail(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 9697, i8* getelementptr inbounds ([96 x i8], [96 x i8]* @__PRETTY_FUNCTION__.opj_j2k_end_encoding, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.8

cond.end.8:                                       ; preds = %5, %cond.true.6
  %6 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_tcd = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %6, i32 0, i32 9
  %7 = load %struct.opj_tcd*, %struct.opj_tcd** %m_tcd, align 8, !tbaa !120
  call void @opj_tcd_destroy(%struct.opj_tcd* %7) #7
  %8 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_tcd9 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %8, i32 0, i32 9
  store %struct.opj_tcd* null, %struct.opj_tcd** %m_tcd9, align 8, !tbaa !120
  %9 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %9, i32 0, i32 1
  %m_encoder = bitcast %union.anon* %m_specific_param to %struct.opj_j2k_enc*
  %m_tlm_sot_offsets_buffer = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder, i32 0, i32 3
  %10 = load i8*, i8** %m_tlm_sot_offsets_buffer, align 8, !tbaa !118
  %tobool = icmp ne i8* %10, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end.8
  %11 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param10 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %11, i32 0, i32 1
  %m_encoder11 = bitcast %union.anon* %m_specific_param10 to %struct.opj_j2k_enc*
  %m_tlm_sot_offsets_buffer12 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder11, i32 0, i32 3
  %12 = load i8*, i8** %m_tlm_sot_offsets_buffer12, align 8, !tbaa !118
  call void @free(i8* %12) #9
  %13 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param13 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %13, i32 0, i32 1
  %m_encoder14 = bitcast %union.anon* %m_specific_param13 to %struct.opj_j2k_enc*
  %m_tlm_sot_offsets_buffer15 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder14, i32 0, i32 3
  store i8* null, i8** %m_tlm_sot_offsets_buffer15, align 8, !tbaa !118
  %14 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param16 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %14, i32 0, i32 1
  %m_encoder17 = bitcast %union.anon* %m_specific_param16 to %struct.opj_j2k_enc*
  %m_tlm_sot_offsets_current = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder17, i32 0, i32 4
  store i8* null, i8** %m_tlm_sot_offsets_current, align 8, !tbaa !119
  br label %if.end

if.end:                                           ; preds = %if.then, %cond.end.8
  %15 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param18 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %15, i32 0, i32 1
  %m_encoder19 = bitcast %union.anon* %m_specific_param18 to %struct.opj_j2k_enc*
  %m_encoded_tile_data = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder19, i32 0, i32 6
  %16 = load i8*, i8** %m_encoded_tile_data, align 8, !tbaa !117
  %tobool20 = icmp ne i8* %16, null
  br i1 %tobool20, label %if.then.21, label %if.end.28

if.then.21:                                       ; preds = %if.end
  %17 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param22 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %17, i32 0, i32 1
  %m_encoder23 = bitcast %union.anon* %m_specific_param22 to %struct.opj_j2k_enc*
  %m_encoded_tile_data24 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder23, i32 0, i32 6
  %18 = load i8*, i8** %m_encoded_tile_data24, align 8, !tbaa !117
  call void @free(i8* %18) #9
  %19 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param25 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %19, i32 0, i32 1
  %m_encoder26 = bitcast %union.anon* %m_specific_param25 to %struct.opj_j2k_enc*
  %m_encoded_tile_data27 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder26, i32 0, i32 6
  store i8* null, i8** %m_encoded_tile_data27, align 8, !tbaa !117
  br label %if.end.28

if.end.28:                                        ; preds = %if.then.21, %if.end
  %20 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param29 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %20, i32 0, i32 1
  %m_encoder30 = bitcast %union.anon* %m_specific_param29 to %struct.opj_j2k_enc*
  %m_encoded_tile_size = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder30, i32 0, i32 7
  store i32 0, i32* %m_encoded_tile_size, align 4, !tbaa !263
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @opj_j2k_destroy_header_memory(%struct.opj_j2k* %p_j2k, %struct.opj_stream_private* %p_stream, %struct.opj_event_mgr* %p_manager) #0 {
entry:
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %p_stream.addr = alloca %struct.opj_stream_private*, align 8
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store %struct.opj_stream_private* %p_stream, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %0 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cmp = icmp ne %struct.opj_j2k* %0, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 9727, i8* getelementptr inbounds ([95 x i8], [95 x i8]* @__PRETTY_FUNCTION__.opj_j2k_destroy_header_memory, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %1, %cond.true
  %2 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %cmp1 = icmp ne %struct.opj_stream_private* %2, null
  br i1 %cmp1, label %cond.true.2, label %cond.false.3

cond.true.2:                                      ; preds = %cond.end
  br label %cond.end.4

cond.false.3:                                     ; preds = %cond.end
  call void @__assert_fail(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 9728, i8* getelementptr inbounds ([95 x i8], [95 x i8]* @__PRETTY_FUNCTION__.opj_j2k_destroy_header_memory, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.4

cond.end.4:                                       ; preds = %3, %cond.true.2
  %4 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %cmp5 = icmp ne %struct.opj_event_mgr* %4, null
  br i1 %cmp5, label %cond.true.6, label %cond.false.7

cond.true.6:                                      ; preds = %cond.end.4
  br label %cond.end.8

cond.false.7:                                     ; preds = %cond.end.4
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 9729, i8* getelementptr inbounds ([95 x i8], [95 x i8]* @__PRETTY_FUNCTION__.opj_j2k_destroy_header_memory, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.8

cond.end.8:                                       ; preds = %5, %cond.true.6
  %6 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %6, i32 0, i32 1
  %m_encoder = bitcast %union.anon* %m_specific_param to %struct.opj_j2k_enc*
  %m_header_tile_data = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder, i32 0, i32 8
  %7 = load i8*, i8** %m_header_tile_data, align 8, !tbaa !110
  %tobool = icmp ne i8* %7, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end.8
  %8 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param9 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %8, i32 0, i32 1
  %m_encoder10 = bitcast %union.anon* %m_specific_param9 to %struct.opj_j2k_enc*
  %m_header_tile_data11 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder10, i32 0, i32 8
  %9 = load i8*, i8** %m_header_tile_data11, align 8, !tbaa !110
  call void @free(i8* %9) #9
  %10 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param12 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %10, i32 0, i32 1
  %m_encoder13 = bitcast %union.anon* %m_specific_param12 to %struct.opj_j2k_enc*
  %m_header_tile_data14 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder13, i32 0, i32 8
  store i8* null, i8** %m_header_tile_data14, align 8, !tbaa !110
  br label %if.end

if.end:                                           ; preds = %if.then, %cond.end.8
  %11 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param15 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %11, i32 0, i32 1
  %m_encoder16 = bitcast %union.anon* %m_specific_param15 to %struct.opj_j2k_enc*
  %m_header_tile_data_size = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder16, i32 0, i32 9
  store i32 0, i32* %m_header_tile_data_size, align 4, !tbaa !112
  ret i32 1
}

declare i32 @opj_stream_flush(%struct.opj_stream_private*, %struct.opj_event_mgr*) #3

declare i32 @opj_stream_seek(%struct.opj_stream_private*, i64, %struct.opj_event_mgr*) #3

; Function Attrs: nounwind uwtable
define internal i32 @opj_j2k_build_encoder(%struct.opj_j2k* %p_j2k, %struct.opj_stream_private* %p_stream, %struct.opj_event_mgr* %p_manager) #0 {
entry:
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %p_stream.addr = alloca %struct.opj_stream_private*, align 8
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store %struct.opj_stream_private* %p_stream, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %0 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %1 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %2 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @opj_j2k_encoding_validation(%struct.opj_j2k* %p_j2k, %struct.opj_stream_private* %p_stream, %struct.opj_event_mgr* %p_manager) #0 {
entry:
  %retval = alloca i32, align 4
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %p_stream.addr = alloca %struct.opj_stream_private*, align 8
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  %l_is_valid = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store %struct.opj_stream_private* %p_stream, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %0 = bitcast i32* %l_is_valid to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  store i32 1, i32* %l_is_valid, align 4, !tbaa !5
  %1 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cmp = icmp ne %struct.opj_j2k* %1, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 6470, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @__PRETTY_FUNCTION__.opj_j2k_encoding_validation, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %2, %cond.true
  %3 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %cmp1 = icmp ne %struct.opj_stream_private* %3, null
  br i1 %cmp1, label %cond.true.2, label %cond.false.3

cond.true.2:                                      ; preds = %cond.end
  br label %cond.end.4

cond.false.3:                                     ; preds = %cond.end
  call void @__assert_fail(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 6471, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @__PRETTY_FUNCTION__.opj_j2k_encoding_validation, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.4

cond.end.4:                                       ; preds = %4, %cond.true.2
  %5 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %cmp5 = icmp ne %struct.opj_event_mgr* %5, null
  br i1 %cmp5, label %cond.true.6, label %cond.false.7

cond.true.6:                                      ; preds = %cond.end.4
  br label %cond.end.8

cond.false.7:                                     ; preds = %cond.end.4
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 6472, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @__PRETTY_FUNCTION__.opj_j2k_encoding_validation, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.8

cond.end.8:                                       ; preds = %6, %cond.true.6
  %7 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %7, i32 0, i32 1
  %m_decoder = bitcast %union.anon* %m_specific_param to %struct.opj_j2k_dec*
  %m_state = getelementptr inbounds %struct.opj_j2k_dec, %struct.opj_j2k_dec* %m_decoder, i32 0, i32 0
  %8 = load i32, i32* %m_state, align 4, !tbaa !23
  %cmp9 = icmp eq i32 %8, 0
  %conv = zext i1 %cmp9 to i32
  %9 = load i32, i32* %l_is_valid, align 4, !tbaa !5
  %and = and i32 %9, %conv
  store i32 %and, i32* %l_is_valid, align 4, !tbaa !5
  %10 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_procedure_list = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %10, i32 0, i32 5
  %11 = load %struct.opj_procedure_list*, %struct.opj_procedure_list** %m_procedure_list, align 8, !tbaa !114
  %cmp10 = icmp ne %struct.opj_procedure_list* %11, null
  %conv11 = zext i1 %cmp10 to i32
  %12 = load i32, i32* %l_is_valid, align 4, !tbaa !5
  %and12 = and i32 %12, %conv11
  store i32 %and12, i32* %l_is_valid, align 4, !tbaa !5
  %13 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_validation_list = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %13, i32 0, i32 6
  %14 = load %struct.opj_procedure_list*, %struct.opj_procedure_list** %m_validation_list, align 8, !tbaa !113
  %cmp13 = icmp ne %struct.opj_procedure_list* %14, null
  %conv14 = zext i1 %cmp13 to i32
  %15 = load i32, i32* %l_is_valid, align 4, !tbaa !5
  %and15 = and i32 %15, %conv14
  store i32 %and15, i32* %l_is_valid, align 4, !tbaa !5
  %16 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %16, i32 0, i32 4
  %tdx = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp, i32 0, i32 3
  %17 = load i32, i32* %tdx, align 4, !tbaa !217
  %18 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp16 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %18, i32 0, i32 4
  %tcps = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp16, i32 0, i32 17
  %19 = load %struct.opj_tcp*, %struct.opj_tcp** %tcps, align 8, !tbaa !88
  %tccps = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %19, i32 0, i32 13
  %20 = load %struct.opj_tccp*, %struct.opj_tccp** %tccps, align 8, !tbaa !48
  %numresolutions = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %20, i32 0, i32 1
  %21 = load i32, i32* %numresolutions, align 4, !tbaa !161
  %shl = shl i32 1, %21
  %cmp17 = icmp ult i32 %17, %shl
  br i1 %cmp17, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end.8
  %22 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %22, i32 1, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.188, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %cond.end.8
  %23 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp19 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %23, i32 0, i32 4
  %tdy = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp19, i32 0, i32 4
  %24 = load i32, i32* %tdy, align 4, !tbaa !218
  %25 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp20 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %25, i32 0, i32 4
  %tcps21 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp20, i32 0, i32 17
  %26 = load %struct.opj_tcp*, %struct.opj_tcp** %tcps21, align 8, !tbaa !88
  %tccps22 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %26, i32 0, i32 13
  %27 = load %struct.opj_tccp*, %struct.opj_tccp** %tccps22, align 8, !tbaa !48
  %numresolutions23 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %27, i32 0, i32 1
  %28 = load i32, i32* %numresolutions23, align 4, !tbaa !161
  %shl24 = shl i32 1, %28
  %cmp25 = icmp ult i32 %24, %shl24
  br i1 %cmp25, label %if.then.27, label %if.end.29

if.then.27:                                       ; preds = %if.end
  %29 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call28 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %29, i32 1, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.188, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.29:                                        ; preds = %if.end
  %30 = load i32, i32* %l_is_valid, align 4, !tbaa !5
  store i32 %30, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.29, %if.then.27, %if.then
  %31 = bitcast i32* %l_is_valid to i8*
  call void @llvm.lifetime.end(i64 4, i8* %31) #1
  %32 = load i32, i32* %retval
  ret i32 %32
}

; Function Attrs: nounwind uwtable
define internal i32 @opj_j2k_mct_validation(%struct.opj_j2k* %p_j2k, %struct.opj_stream_private* %p_stream, %struct.opj_event_mgr* %p_manager) #0 {
entry:
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %p_stream.addr = alloca %struct.opj_stream_private*, align 8
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  %l_is_valid = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %l_nb_tiles = alloca i32, align 4
  %l_tcp = alloca %struct.opj_tcp*, align 8
  %l_tccp = alloca %struct.opj_tccp*, align 8
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store %struct.opj_stream_private* %p_stream, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %0 = bitcast i32* %l_is_valid to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  store i32 1, i32* %l_is_valid, align 4, !tbaa !5
  %1 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = bitcast i32* %j to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #1
  %3 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cmp = icmp ne %struct.opj_j2k* %3, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 6261, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @__PRETTY_FUNCTION__.opj_j2k_mct_validation, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %4, %cond.true
  %5 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %cmp1 = icmp ne %struct.opj_stream_private* %5, null
  br i1 %cmp1, label %cond.true.2, label %cond.false.3

cond.true.2:                                      ; preds = %cond.end
  br label %cond.end.4

cond.false.3:                                     ; preds = %cond.end
  call void @__assert_fail(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 6262, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @__PRETTY_FUNCTION__.opj_j2k_mct_validation, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.4

cond.end.4:                                       ; preds = %6, %cond.true.2
  %7 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %cmp5 = icmp ne %struct.opj_event_mgr* %7, null
  br i1 %cmp5, label %cond.true.6, label %cond.false.7

cond.true.6:                                      ; preds = %cond.end.4
  br label %cond.end.8

cond.false.7:                                     ; preds = %cond.end.4
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 6263, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @__PRETTY_FUNCTION__.opj_j2k_mct_validation, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.8

cond.end.8:                                       ; preds = %8, %cond.true.6
  %9 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %9, i32 0, i32 4
  %rsiz = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp, i32 0, i32 0
  %10 = load i32, i32* %rsiz, align 4, !tbaa !265
  %and = and i32 %10, 33280
  %cmp9 = icmp eq i32 %and, 33280
  br i1 %cmp9, label %if.then, label %if.end.28

if.then:                                          ; preds = %cond.end.8
  %11 = bitcast i32* %l_nb_tiles to i8*
  call void @llvm.lifetime.start(i64 4, i8* %11) #1
  %12 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp10 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %12, i32 0, i32 4
  %th = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp10, i32 0, i32 7
  %13 = load i32, i32* %th, align 4, !tbaa !177
  %14 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp11 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %14, i32 0, i32 4
  %tw = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp11, i32 0, i32 6
  %15 = load i32, i32* %tw, align 4, !tbaa !176
  %mul = mul i32 %13, %15
  store i32 %mul, i32* %l_nb_tiles, align 4, !tbaa !5
  %16 = bitcast %struct.opj_tcp** %l_tcp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %16) #1
  %17 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp12 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %17, i32 0, i32 4
  %tcps = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp12, i32 0, i32 17
  %18 = load %struct.opj_tcp*, %struct.opj_tcp** %tcps, align 8, !tbaa !88
  store %struct.opj_tcp* %18, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  store i32 0, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc.25, %if.then
  %19 = load i32, i32* %i, align 4, !tbaa !5
  %20 = load i32, i32* %l_nb_tiles, align 4, !tbaa !5
  %cmp13 = icmp ult i32 %19, %20
  br i1 %cmp13, label %for.body, label %for.end.27

for.body:                                         ; preds = %for.cond
  %21 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %mct = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %21, i32 0, i32 4
  %22 = load i32, i32* %mct, align 4, !tbaa !151
  %cmp14 = icmp eq i32 %22, 2
  br i1 %cmp14, label %if.then.15, label %if.end

if.then.15:                                       ; preds = %for.body
  %23 = bitcast %struct.opj_tccp** %l_tccp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %23) #1
  %24 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %tccps = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %24, i32 0, i32 13
  %25 = load %struct.opj_tccp*, %struct.opj_tccp** %tccps, align 8, !tbaa !48
  store %struct.opj_tccp* %25, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %26 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %m_mct_coding_matrix = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %26, i32 0, i32 19
  %27 = load float*, float** %m_mct_coding_matrix, align 8, !tbaa !159
  %cmp16 = icmp ne float* %27, null
  %conv = zext i1 %cmp16 to i32
  %28 = load i32, i32* %l_is_valid, align 4, !tbaa !5
  %and17 = and i32 %28, %conv
  store i32 %and17, i32* %l_is_valid, align 4, !tbaa !5
  store i32 0, i32* %j, align 4, !tbaa !5
  br label %for.cond.18

for.cond.18:                                      ; preds = %for.inc, %if.then.15
  %29 = load i32, i32* %j, align 4, !tbaa !5
  %30 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_private_image = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %30, i32 0, i32 2
  %31 = load %struct.opj_image*, %struct.opj_image** %m_private_image, align 8, !tbaa !38
  %numcomps = getelementptr inbounds %struct.opj_image, %struct.opj_image* %31, i32 0, i32 4
  %32 = load i32, i32* %numcomps, align 4, !tbaa !45
  %cmp19 = icmp ult i32 %29, %32
  br i1 %cmp19, label %for.body.21, label %for.end

for.body.21:                                      ; preds = %for.cond.18
  %33 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %qmfbid = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %33, i32 0, i32 5
  %34 = load i32, i32* %qmfbid, align 4, !tbaa !169
  %and22 = and i32 %34, 1
  %tobool = icmp ne i32 %and22, 0
  %lnot = xor i1 %tobool, true
  %lnot.ext = zext i1 %lnot to i32
  %35 = load i32, i32* %l_is_valid, align 4, !tbaa !5
  %and23 = and i32 %35, %lnot.ext
  store i32 %and23, i32* %l_is_valid, align 4, !tbaa !5
  %36 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %36, i32 1
  store %struct.opj_tccp* %incdec.ptr, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  br label %for.inc

for.inc:                                          ; preds = %for.body.21
  %37 = load i32, i32* %j, align 4, !tbaa !5
  %inc = add i32 %37, 1
  store i32 %inc, i32* %j, align 4, !tbaa !5
  br label %for.cond.18

for.end:                                          ; preds = %for.cond.18
  %38 = bitcast %struct.opj_tccp** %l_tccp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %38) #1
  br label %if.end

if.end:                                           ; preds = %for.end, %for.body
  %39 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %incdec.ptr24 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %39, i32 1
  store %struct.opj_tcp* %incdec.ptr24, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  br label %for.inc.25

for.inc.25:                                       ; preds = %if.end
  %40 = load i32, i32* %i, align 4, !tbaa !5
  %inc26 = add i32 %40, 1
  store i32 %inc26, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.end.27:                                       ; preds = %for.cond
  %41 = bitcast %struct.opj_tcp** %l_tcp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %41) #1
  %42 = bitcast i32* %l_nb_tiles to i8*
  call void @llvm.lifetime.end(i64 4, i8* %42) #1
  br label %if.end.28

if.end.28:                                        ; preds = %for.end.27, %cond.end.8
  %43 = load i32, i32* %l_is_valid, align 4, !tbaa !5
  %44 = bitcast i32* %j to i8*
  call void @llvm.lifetime.end(i64 4, i8* %44) #1
  %45 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %45) #1
  %46 = bitcast i32* %l_is_valid to i8*
  call void @llvm.lifetime.end(i64 4, i8* %46) #1
  ret i32 %43
}

; Function Attrs: nounwind uwtable
define internal i32 @opj_j2k_init_info(%struct.opj_j2k* %p_j2k, %struct.opj_stream_private* %p_stream, %struct.opj_event_mgr* %p_manager) #0 {
entry:
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %p_stream.addr = alloca %struct.opj_stream_private*, align 8
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  %l_cstr_info = alloca %struct.opj_codestream_info*, align 8
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store %struct.opj_stream_private* %p_stream, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %0 = bitcast %struct.opj_codestream_info** %l_cstr_info to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  store %struct.opj_codestream_info* null, %struct.opj_codestream_info** %l_cstr_info, align 8, !tbaa !1
  %1 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cmp = icmp ne %struct.opj_j2k* %1, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 9748, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @__PRETTY_FUNCTION__.opj_j2k_init_info, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %2, %cond.true
  %3 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %cmp1 = icmp ne %struct.opj_event_mgr* %3, null
  br i1 %cmp1, label %cond.true.2, label %cond.false.3

cond.true.2:                                      ; preds = %cond.end
  br label %cond.end.4

cond.false.3:                                     ; preds = %cond.end
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 9749, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @__PRETTY_FUNCTION__.opj_j2k_init_info, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.4

cond.end.4:                                       ; preds = %4, %cond.true.2
  %5 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %cmp5 = icmp ne %struct.opj_stream_private* %5, null
  br i1 %cmp5, label %cond.true.6, label %cond.false.7

cond.true.6:                                      ; preds = %cond.end.4
  br label %cond.end.8

cond.false.7:                                     ; preds = %cond.end.4
  call void @__assert_fail(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 9750, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @__PRETTY_FUNCTION__.opj_j2k_init_info, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.8

cond.end.8:                                       ; preds = %6, %cond.true.6
  %7 = load %struct.opj_codestream_info*, %struct.opj_codestream_info** %l_cstr_info, align 8, !tbaa !1
  %8 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %9 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %9, i32 0, i32 4
  %10 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %10, i32 0, i32 1
  %m_encoder = bitcast %union.anon* %m_specific_param to %struct.opj_j2k_enc*
  %m_total_tile_parts = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder, i32 0, i32 5
  %11 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_private_image = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %11, i32 0, i32 2
  %12 = load %struct.opj_image*, %struct.opj_image** %m_private_image, align 8, !tbaa !38
  %13 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call = call i32 @opj_j2k_calculate_tp(%struct.opj_j2k* %8, %struct.opj_cp* %m_cp, i32* %m_total_tile_parts, %struct.opj_image* %12, %struct.opj_event_mgr* %13) #7
  %14 = bitcast %struct.opj_codestream_info** %l_cstr_info to i8*
  call void @llvm.lifetime.end(i64 8, i8* %14) #1
  ret i32 %call
}

; Function Attrs: nounwind uwtable
define internal i32 @opj_j2k_write_soc(%struct.opj_j2k* %p_j2k, %struct.opj_stream_private* %p_stream, %struct.opj_event_mgr* %p_manager) #0 {
entry:
  %retval = alloca i32, align 4
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %p_stream.addr = alloca %struct.opj_stream_private*, align 8
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  %l_start_stream = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store %struct.opj_stream_private* %p_stream, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %0 = bitcast i8** %l_start_stream to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  store i8* null, i8** %l_start_stream, align 8, !tbaa !1
  %1 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %cmp = icmp ne %struct.opj_stream_private* %1, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 1691, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @__PRETTY_FUNCTION__.opj_j2k_write_soc, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %2, %cond.true
  %3 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cmp1 = icmp ne %struct.opj_j2k* %3, null
  br i1 %cmp1, label %cond.true.2, label %cond.false.3

cond.true.2:                                      ; preds = %cond.end
  br label %cond.end.4

cond.false.3:                                     ; preds = %cond.end
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 1692, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @__PRETTY_FUNCTION__.opj_j2k_write_soc, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.4

cond.end.4:                                       ; preds = %4, %cond.true.2
  %5 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %cmp5 = icmp ne %struct.opj_event_mgr* %5, null
  br i1 %cmp5, label %cond.true.6, label %cond.false.7

cond.true.6:                                      ; preds = %cond.end.4
  br label %cond.end.8

cond.false.7:                                     ; preds = %cond.end.4
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 1693, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @__PRETTY_FUNCTION__.opj_j2k_write_soc, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.8

cond.end.8:                                       ; preds = %6, %cond.true.6
  %7 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %7, i32 0, i32 1
  %m_encoder = bitcast %union.anon* %m_specific_param to %struct.opj_j2k_enc*
  %m_header_tile_data = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder, i32 0, i32 8
  %8 = load i8*, i8** %m_header_tile_data, align 8, !tbaa !110
  store i8* %8, i8** %l_start_stream, align 8, !tbaa !1
  %9 = load i8*, i8** %l_start_stream, align 8, !tbaa !1
  call void @opj_write_bytes_LE(i8* %9, i32 65359, i32 2) #7
  %10 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %11 = load i8*, i8** %l_start_stream, align 8, !tbaa !1
  %12 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call = call i64 @opj_stream_write_data(%struct.opj_stream_private* %10, i8* %11, i64 2, %struct.opj_event_mgr* %12) #7
  %cmp9 = icmp ne i64 %call, 2
  br i1 %cmp9, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end.8
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %cond.end.8
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  %13 = bitcast i8** %l_start_stream to i8*
  call void @llvm.lifetime.end(i64 8, i8* %13) #1
  %14 = load i32, i32* %retval
  ret i32 %14
}

; Function Attrs: nounwind uwtable
define internal i32 @opj_j2k_write_siz(%struct.opj_j2k* %p_j2k, %struct.opj_stream_private* %p_stream, %struct.opj_event_mgr* %p_manager) #0 {
entry:
  %retval = alloca i32, align 4
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %p_stream.addr = alloca %struct.opj_stream_private*, align 8
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  %i = alloca i32, align 4
  %l_size_len = alloca i32, align 4
  %l_current_ptr = alloca i8*, align 8
  %l_image = alloca %struct.opj_image*, align 8
  %cp = alloca %struct.opj_cp*, align 8
  %l_img_comp = alloca %struct.opj_image_comp*, align 8
  %new_header_tile_data = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store %struct.opj_stream_private* %p_stream, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %0 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast i32* %l_size_len to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = bitcast i8** %l_current_ptr to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #1
  %3 = bitcast %struct.opj_image** %l_image to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #1
  store %struct.opj_image* null, %struct.opj_image** %l_image, align 8, !tbaa !1
  %4 = bitcast %struct.opj_cp** %cp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4) #1
  store %struct.opj_cp* null, %struct.opj_cp** %cp, align 8, !tbaa !1
  %5 = bitcast %struct.opj_image_comp** %l_img_comp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5) #1
  store %struct.opj_image_comp* null, %struct.opj_image_comp** %l_img_comp, align 8, !tbaa !1
  %6 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %cmp = icmp ne %struct.opj_stream_private* %6, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 1773, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @__PRETTY_FUNCTION__.opj_j2k_write_siz, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %7, %cond.true
  %8 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cmp1 = icmp ne %struct.opj_j2k* %8, null
  br i1 %cmp1, label %cond.true.2, label %cond.false.3

cond.true.2:                                      ; preds = %cond.end
  br label %cond.end.4

cond.false.3:                                     ; preds = %cond.end
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 1774, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @__PRETTY_FUNCTION__.opj_j2k_write_siz, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.4

cond.end.4:                                       ; preds = %9, %cond.true.2
  %10 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %cmp5 = icmp ne %struct.opj_event_mgr* %10, null
  br i1 %cmp5, label %cond.true.6, label %cond.false.7

cond.true.6:                                      ; preds = %cond.end.4
  br label %cond.end.8

cond.false.7:                                     ; preds = %cond.end.4
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 1775, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @__PRETTY_FUNCTION__.opj_j2k_write_siz, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.8

cond.end.8:                                       ; preds = %11, %cond.true.6
  %12 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_private_image = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %12, i32 0, i32 2
  %13 = load %struct.opj_image*, %struct.opj_image** %m_private_image, align 8, !tbaa !38
  store %struct.opj_image* %13, %struct.opj_image** %l_image, align 8, !tbaa !1
  %14 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %14, i32 0, i32 4
  store %struct.opj_cp* %m_cp, %struct.opj_cp** %cp, align 8, !tbaa !1
  %15 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %numcomps = getelementptr inbounds %struct.opj_image, %struct.opj_image* %15, i32 0, i32 4
  %16 = load i32, i32* %numcomps, align 4, !tbaa !45
  %mul = mul i32 3, %16
  %add = add i32 40, %mul
  store i32 %add, i32* %l_size_len, align 4, !tbaa !5
  %17 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %comps = getelementptr inbounds %struct.opj_image, %struct.opj_image* %17, i32 0, i32 6
  %18 = load %struct.opj_image_comp*, %struct.opj_image_comp** %comps, align 8, !tbaa !62
  store %struct.opj_image_comp* %18, %struct.opj_image_comp** %l_img_comp, align 8, !tbaa !1
  %19 = load i32, i32* %l_size_len, align 4, !tbaa !5
  %20 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %20, i32 0, i32 1
  %m_encoder = bitcast %union.anon* %m_specific_param to %struct.opj_j2k_enc*
  %m_header_tile_data_size = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder, i32 0, i32 9
  %21 = load i32, i32* %m_header_tile_data_size, align 4, !tbaa !112
  %cmp9 = icmp ugt i32 %19, %21
  br i1 %cmp9, label %if.then, label %if.end.35

if.then:                                          ; preds = %cond.end.8
  %22 = bitcast i8** %new_header_tile_data to i8*
  call void @llvm.lifetime.start(i64 8, i8* %22) #1
  %23 = load i32, i32* %l_size_len, align 4, !tbaa !5
  %conv = zext i32 %23 to i64
  %cmp10 = icmp uge i64 %conv, -256
  br i1 %cmp10, label %cond.true.12, label %cond.false.13

cond.true.12:                                     ; preds = %if.then
  br label %cond.end.17

cond.false.13:                                    ; preds = %if.then
  %24 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param14 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %24, i32 0, i32 1
  %m_encoder15 = bitcast %union.anon* %m_specific_param14 to %struct.opj_j2k_enc*
  %m_header_tile_data = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder15, i32 0, i32 8
  %25 = load i8*, i8** %m_header_tile_data, align 8, !tbaa !110
  %26 = load i32, i32* %l_size_len, align 4, !tbaa !5
  %conv16 = zext i32 %26 to i64
  %call = call i8* @realloc(i8* %25, i64 %conv16) #9
  br label %cond.end.17

cond.end.17:                                      ; preds = %cond.false.13, %cond.true.12
  %cond = phi i8* [ null, %cond.true.12 ], [ %call, %cond.false.13 ]
  store i8* %cond, i8** %new_header_tile_data, align 8, !tbaa !1
  %27 = load i8*, i8** %new_header_tile_data, align 8, !tbaa !1
  %tobool = icmp ne i8* %27, null
  br i1 %tobool, label %if.end, label %if.then.18

if.then.18:                                       ; preds = %cond.end.17
  %28 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param19 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %28, i32 0, i32 1
  %m_encoder20 = bitcast %union.anon* %m_specific_param19 to %struct.opj_j2k_enc*
  %m_header_tile_data21 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder20, i32 0, i32 8
  %29 = load i8*, i8** %m_header_tile_data21, align 8, !tbaa !110
  call void @free(i8* %29) #9
  %30 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param22 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %30, i32 0, i32 1
  %m_encoder23 = bitcast %union.anon* %m_specific_param22 to %struct.opj_j2k_enc*
  %m_header_tile_data24 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder23, i32 0, i32 8
  store i8* null, i8** %m_header_tile_data24, align 8, !tbaa !110
  %31 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param25 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %31, i32 0, i32 1
  %m_encoder26 = bitcast %union.anon* %m_specific_param25 to %struct.opj_j2k_enc*
  %m_header_tile_data_size27 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder26, i32 0, i32 9
  store i32 0, i32* %m_header_tile_data_size27, align 4, !tbaa !112
  %32 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call28 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %32, i32 1, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.192, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %cond.end.17
  %33 = load i8*, i8** %new_header_tile_data, align 8, !tbaa !1
  %34 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param29 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %34, i32 0, i32 1
  %m_encoder30 = bitcast %union.anon* %m_specific_param29 to %struct.opj_j2k_enc*
  %m_header_tile_data31 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder30, i32 0, i32 8
  store i8* %33, i8** %m_header_tile_data31, align 8, !tbaa !110
  %35 = load i32, i32* %l_size_len, align 4, !tbaa !5
  %36 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param32 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %36, i32 0, i32 1
  %m_encoder33 = bitcast %union.anon* %m_specific_param32 to %struct.opj_j2k_enc*
  %m_header_tile_data_size34 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder33, i32 0, i32 9
  store i32 %35, i32* %m_header_tile_data_size34, align 4, !tbaa !112
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then.18
  %37 = bitcast i8** %new_header_tile_data to i8*
  call void @llvm.lifetime.end(i64 8, i8* %37) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.69 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.35

if.end.35:                                        ; preds = %cleanup.cont, %cond.end.8
  %38 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param36 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %38, i32 0, i32 1
  %m_encoder37 = bitcast %union.anon* %m_specific_param36 to %struct.opj_j2k_enc*
  %m_header_tile_data38 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder37, i32 0, i32 8
  %39 = load i8*, i8** %m_header_tile_data38, align 8, !tbaa !110
  store i8* %39, i8** %l_current_ptr, align 8, !tbaa !1
  %40 = load i8*, i8** %l_current_ptr, align 8, !tbaa !1
  call void @opj_write_bytes_LE(i8* %40, i32 65361, i32 2) #7
  %41 = load i8*, i8** %l_current_ptr, align 8, !tbaa !1
  %add.ptr = getelementptr inbounds i8, i8* %41, i64 2
  store i8* %add.ptr, i8** %l_current_ptr, align 8, !tbaa !1
  %42 = load i8*, i8** %l_current_ptr, align 8, !tbaa !1
  %43 = load i32, i32* %l_size_len, align 4, !tbaa !5
  %sub = sub i32 %43, 2
  call void @opj_write_bytes_LE(i8* %42, i32 %sub, i32 2) #7
  %44 = load i8*, i8** %l_current_ptr, align 8, !tbaa !1
  %add.ptr39 = getelementptr inbounds i8, i8* %44, i64 2
  store i8* %add.ptr39, i8** %l_current_ptr, align 8, !tbaa !1
  %45 = load i8*, i8** %l_current_ptr, align 8, !tbaa !1
  %46 = load %struct.opj_cp*, %struct.opj_cp** %cp, align 8, !tbaa !1
  %rsiz = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %46, i32 0, i32 0
  %47 = load i32, i32* %rsiz, align 4, !tbaa !55
  call void @opj_write_bytes_LE(i8* %45, i32 %47, i32 2) #7
  %48 = load i8*, i8** %l_current_ptr, align 8, !tbaa !1
  %add.ptr40 = getelementptr inbounds i8, i8* %48, i64 2
  store i8* %add.ptr40, i8** %l_current_ptr, align 8, !tbaa !1
  %49 = load i8*, i8** %l_current_ptr, align 8, !tbaa !1
  %50 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %x1 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %50, i32 0, i32 2
  %51 = load i32, i32* %x1, align 4, !tbaa !57
  call void @opj_write_bytes_LE(i8* %49, i32 %51, i32 4) #7
  %52 = load i8*, i8** %l_current_ptr, align 8, !tbaa !1
  %add.ptr41 = getelementptr inbounds i8, i8* %52, i64 4
  store i8* %add.ptr41, i8** %l_current_ptr, align 8, !tbaa !1
  %53 = load i8*, i8** %l_current_ptr, align 8, !tbaa !1
  %54 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %y1 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %54, i32 0, i32 3
  %55 = load i32, i32* %y1, align 4, !tbaa !59
  call void @opj_write_bytes_LE(i8* %53, i32 %55, i32 4) #7
  %56 = load i8*, i8** %l_current_ptr, align 8, !tbaa !1
  %add.ptr42 = getelementptr inbounds i8, i8* %56, i64 4
  store i8* %add.ptr42, i8** %l_current_ptr, align 8, !tbaa !1
  %57 = load i8*, i8** %l_current_ptr, align 8, !tbaa !1
  %58 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %x0 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %58, i32 0, i32 0
  %59 = load i32, i32* %x0, align 4, !tbaa !56
  call void @opj_write_bytes_LE(i8* %57, i32 %59, i32 4) #7
  %60 = load i8*, i8** %l_current_ptr, align 8, !tbaa !1
  %add.ptr43 = getelementptr inbounds i8, i8* %60, i64 4
  store i8* %add.ptr43, i8** %l_current_ptr, align 8, !tbaa !1
  %61 = load i8*, i8** %l_current_ptr, align 8, !tbaa !1
  %62 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %y0 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %62, i32 0, i32 1
  %63 = load i32, i32* %y0, align 4, !tbaa !58
  call void @opj_write_bytes_LE(i8* %61, i32 %63, i32 4) #7
  %64 = load i8*, i8** %l_current_ptr, align 8, !tbaa !1
  %add.ptr44 = getelementptr inbounds i8, i8* %64, i64 4
  store i8* %add.ptr44, i8** %l_current_ptr, align 8, !tbaa !1
  %65 = load i8*, i8** %l_current_ptr, align 8, !tbaa !1
  %66 = load %struct.opj_cp*, %struct.opj_cp** %cp, align 8, !tbaa !1
  %tdx = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %66, i32 0, i32 3
  %67 = load i32, i32* %tdx, align 4, !tbaa !60
  call void @opj_write_bytes_LE(i8* %65, i32 %67, i32 4) #7
  %68 = load i8*, i8** %l_current_ptr, align 8, !tbaa !1
  %add.ptr45 = getelementptr inbounds i8, i8* %68, i64 4
  store i8* %add.ptr45, i8** %l_current_ptr, align 8, !tbaa !1
  %69 = load i8*, i8** %l_current_ptr, align 8, !tbaa !1
  %70 = load %struct.opj_cp*, %struct.opj_cp** %cp, align 8, !tbaa !1
  %tdy = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %70, i32 0, i32 4
  %71 = load i32, i32* %tdy, align 4, !tbaa !61
  call void @opj_write_bytes_LE(i8* %69, i32 %71, i32 4) #7
  %72 = load i8*, i8** %l_current_ptr, align 8, !tbaa !1
  %add.ptr46 = getelementptr inbounds i8, i8* %72, i64 4
  store i8* %add.ptr46, i8** %l_current_ptr, align 8, !tbaa !1
  %73 = load i8*, i8** %l_current_ptr, align 8, !tbaa !1
  %74 = load %struct.opj_cp*, %struct.opj_cp** %cp, align 8, !tbaa !1
  %tx0 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %74, i32 0, i32 1
  %75 = load i32, i32* %tx0, align 4, !tbaa !72
  call void @opj_write_bytes_LE(i8* %73, i32 %75, i32 4) #7
  %76 = load i8*, i8** %l_current_ptr, align 8, !tbaa !1
  %add.ptr47 = getelementptr inbounds i8, i8* %76, i64 4
  store i8* %add.ptr47, i8** %l_current_ptr, align 8, !tbaa !1
  %77 = load i8*, i8** %l_current_ptr, align 8, !tbaa !1
  %78 = load %struct.opj_cp*, %struct.opj_cp** %cp, align 8, !tbaa !1
  %ty0 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %78, i32 0, i32 2
  %79 = load i32, i32* %ty0, align 4, !tbaa !73
  call void @opj_write_bytes_LE(i8* %77, i32 %79, i32 4) #7
  %80 = load i8*, i8** %l_current_ptr, align 8, !tbaa !1
  %add.ptr48 = getelementptr inbounds i8, i8* %80, i64 4
  store i8* %add.ptr48, i8** %l_current_ptr, align 8, !tbaa !1
  %81 = load i8*, i8** %l_current_ptr, align 8, !tbaa !1
  %82 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %numcomps49 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %82, i32 0, i32 4
  %83 = load i32, i32* %numcomps49, align 4, !tbaa !45
  call void @opj_write_bytes_LE(i8* %81, i32 %83, i32 2) #7
  %84 = load i8*, i8** %l_current_ptr, align 8, !tbaa !1
  %add.ptr50 = getelementptr inbounds i8, i8* %84, i64 2
  store i8* %add.ptr50, i8** %l_current_ptr, align 8, !tbaa !1
  store i32 0, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.35
  %85 = load i32, i32* %i, align 4, !tbaa !5
  %86 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %numcomps51 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %86, i32 0, i32 4
  %87 = load i32, i32* %numcomps51, align 4, !tbaa !45
  %cmp52 = icmp ult i32 %85, %87
  br i1 %cmp52, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %88 = load i8*, i8** %l_current_ptr, align 8, !tbaa !1
  %89 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp, align 8, !tbaa !1
  %prec = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %89, i32 0, i32 6
  %90 = load i32, i32* %prec, align 4, !tbaa !63
  %sub54 = sub i32 %90, 1
  %91 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp, align 8, !tbaa !1
  %sgnd = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %91, i32 0, i32 8
  %92 = load i32, i32* %sgnd, align 4, !tbaa !66
  %shl = shl i32 %92, 7
  %add55 = add i32 %sub54, %shl
  call void @opj_write_bytes_LE(i8* %88, i32 %add55, i32 1) #7
  %93 = load i8*, i8** %l_current_ptr, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds i8, i8* %93, i32 1
  store i8* %incdec.ptr, i8** %l_current_ptr, align 8, !tbaa !1
  %94 = load i8*, i8** %l_current_ptr, align 8, !tbaa !1
  %95 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp, align 8, !tbaa !1
  %dx = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %95, i32 0, i32 0
  %96 = load i32, i32* %dx, align 4, !tbaa !67
  call void @opj_write_bytes_LE(i8* %94, i32 %96, i32 1) #7
  %97 = load i8*, i8** %l_current_ptr, align 8, !tbaa !1
  %incdec.ptr56 = getelementptr inbounds i8, i8* %97, i32 1
  store i8* %incdec.ptr56, i8** %l_current_ptr, align 8, !tbaa !1
  %98 = load i8*, i8** %l_current_ptr, align 8, !tbaa !1
  %99 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp, align 8, !tbaa !1
  %dy = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %99, i32 0, i32 1
  %100 = load i32, i32* %dy, align 4, !tbaa !68
  call void @opj_write_bytes_LE(i8* %98, i32 %100, i32 1) #7
  %101 = load i8*, i8** %l_current_ptr, align 8, !tbaa !1
  %incdec.ptr57 = getelementptr inbounds i8, i8* %101, i32 1
  store i8* %incdec.ptr57, i8** %l_current_ptr, align 8, !tbaa !1
  %102 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp, align 8, !tbaa !1
  %incdec.ptr58 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %102, i32 1
  store %struct.opj_image_comp* %incdec.ptr58, %struct.opj_image_comp** %l_img_comp, align 8, !tbaa !1
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %103 = load i32, i32* %i, align 4, !tbaa !5
  %inc = add i32 %103, 1
  store i32 %inc, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %104 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %105 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param59 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %105, i32 0, i32 1
  %m_encoder60 = bitcast %union.anon* %m_specific_param59 to %struct.opj_j2k_enc*
  %m_header_tile_data61 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder60, i32 0, i32 8
  %106 = load i8*, i8** %m_header_tile_data61, align 8, !tbaa !110
  %107 = load i32, i32* %l_size_len, align 4, !tbaa !5
  %conv62 = zext i32 %107 to i64
  %108 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call63 = call i64 @opj_stream_write_data(%struct.opj_stream_private* %104, i8* %106, i64 %conv62, %struct.opj_event_mgr* %108) #7
  %109 = load i32, i32* %l_size_len, align 4, !tbaa !5
  %conv64 = zext i32 %109 to i64
  %cmp65 = icmp ne i64 %call63, %conv64
  br i1 %cmp65, label %if.then.67, label %if.end.68

if.then.67:                                       ; preds = %for.end
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.69

if.end.68:                                        ; preds = %for.end
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.69

cleanup.69:                                       ; preds = %if.end.68, %if.then.67, %cleanup
  %110 = bitcast %struct.opj_image_comp** %l_img_comp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %110) #1
  %111 = bitcast %struct.opj_cp** %cp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %111) #1
  %112 = bitcast %struct.opj_image** %l_image to i8*
  call void @llvm.lifetime.end(i64 8, i8* %112) #1
  %113 = bitcast i8** %l_current_ptr to i8*
  call void @llvm.lifetime.end(i64 8, i8* %113) #1
  %114 = bitcast i32* %l_size_len to i8*
  call void @llvm.lifetime.end(i64 4, i8* %114) #1
  %115 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %115) #1
  %116 = load i32, i32* %retval
  ret i32 %116
}

; Function Attrs: nounwind uwtable
define internal i32 @opj_j2k_write_cod(%struct.opj_j2k* %p_j2k, %struct.opj_stream_private* %p_stream, %struct.opj_event_mgr* %p_manager) #0 {
entry:
  %retval = alloca i32, align 4
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %p_stream.addr = alloca %struct.opj_stream_private*, align 8
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  %l_cp = alloca %struct.opj_cp*, align 8
  %l_tcp = alloca %struct.opj_tcp*, align 8
  %l_code_size = alloca i32, align 4
  %l_remaining_size = alloca i32, align 4
  %l_current_data = alloca i8*, align 8
  %new_header_tile_data = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store %struct.opj_stream_private* %p_stream, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %0 = bitcast %struct.opj_cp** %l_cp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  store %struct.opj_cp* null, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %1 = bitcast %struct.opj_tcp** %l_tcp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #1
  store %struct.opj_tcp* null, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %2 = bitcast i32* %l_code_size to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #1
  %3 = bitcast i32* %l_remaining_size to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #1
  %4 = bitcast i8** %l_current_data to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4) #1
  store i8* null, i8** %l_current_data, align 8, !tbaa !1
  %5 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cmp = icmp ne %struct.opj_j2k* %5, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 2284, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @__PRETTY_FUNCTION__.opj_j2k_write_cod, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %6, %cond.true
  %7 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %cmp1 = icmp ne %struct.opj_event_mgr* %7, null
  br i1 %cmp1, label %cond.true.2, label %cond.false.3

cond.true.2:                                      ; preds = %cond.end
  br label %cond.end.4

cond.false.3:                                     ; preds = %cond.end
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 2285, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @__PRETTY_FUNCTION__.opj_j2k_write_cod, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.4

cond.end.4:                                       ; preds = %8, %cond.true.2
  %9 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %cmp5 = icmp ne %struct.opj_stream_private* %9, null
  br i1 %cmp5, label %cond.true.6, label %cond.false.7

cond.true.6:                                      ; preds = %cond.end.4
  br label %cond.end.8

cond.false.7:                                     ; preds = %cond.end.4
  call void @__assert_fail(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 2286, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @__PRETTY_FUNCTION__.opj_j2k_write_cod, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.8

cond.end.8:                                       ; preds = %10, %cond.true.6
  %11 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %11, i32 0, i32 4
  store %struct.opj_cp* %m_cp, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %12 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %12, i32 0, i32 8
  %13 = load i32, i32* %m_current_tile_number, align 4, !tbaa !11
  %idxprom = zext i32 %13 to i64
  %14 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %tcps = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %14, i32 0, i32 17
  %15 = load %struct.opj_tcp*, %struct.opj_tcp** %tcps, align 8, !tbaa !16
  %arrayidx = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %15, i64 %idxprom
  store %struct.opj_tcp* %arrayidx, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %16 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %17 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number9 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %17, i32 0, i32 8
  %18 = load i32, i32* %m_current_tile_number9, align 4, !tbaa !11
  %call = call i32 @opj_j2k_get_SPCod_SPCoc_size(%struct.opj_j2k* %16, i32 %18, i32 0) #7
  %add = add i32 9, %call
  store i32 %add, i32* %l_code_size, align 4, !tbaa !5
  %19 = load i32, i32* %l_code_size, align 4, !tbaa !5
  store i32 %19, i32* %l_remaining_size, align 4, !tbaa !5
  %20 = load i32, i32* %l_code_size, align 4, !tbaa !5
  %21 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %21, i32 0, i32 1
  %m_encoder = bitcast %union.anon* %m_specific_param to %struct.opj_j2k_enc*
  %m_header_tile_data_size = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder, i32 0, i32 9
  %22 = load i32, i32* %m_header_tile_data_size, align 4, !tbaa !112
  %cmp10 = icmp ugt i32 %20, %22
  br i1 %cmp10, label %if.then, label %if.end.37

if.then:                                          ; preds = %cond.end.8
  %23 = bitcast i8** %new_header_tile_data to i8*
  call void @llvm.lifetime.start(i64 8, i8* %23) #1
  %24 = load i32, i32* %l_code_size, align 4, !tbaa !5
  %conv = zext i32 %24 to i64
  %cmp11 = icmp uge i64 %conv, -256
  br i1 %cmp11, label %cond.true.13, label %cond.false.14

cond.true.13:                                     ; preds = %if.then
  br label %cond.end.19

cond.false.14:                                    ; preds = %if.then
  %25 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param15 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %25, i32 0, i32 1
  %m_encoder16 = bitcast %union.anon* %m_specific_param15 to %struct.opj_j2k_enc*
  %m_header_tile_data = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder16, i32 0, i32 8
  %26 = load i8*, i8** %m_header_tile_data, align 8, !tbaa !110
  %27 = load i32, i32* %l_code_size, align 4, !tbaa !5
  %conv17 = zext i32 %27 to i64
  %call18 = call i8* @realloc(i8* %26, i64 %conv17) #9
  br label %cond.end.19

cond.end.19:                                      ; preds = %cond.false.14, %cond.true.13
  %cond = phi i8* [ null, %cond.true.13 ], [ %call18, %cond.false.14 ]
  store i8* %cond, i8** %new_header_tile_data, align 8, !tbaa !1
  %28 = load i8*, i8** %new_header_tile_data, align 8, !tbaa !1
  %tobool = icmp ne i8* %28, null
  br i1 %tobool, label %if.end, label %if.then.20

if.then.20:                                       ; preds = %cond.end.19
  %29 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param21 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %29, i32 0, i32 1
  %m_encoder22 = bitcast %union.anon* %m_specific_param21 to %struct.opj_j2k_enc*
  %m_header_tile_data23 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder22, i32 0, i32 8
  %30 = load i8*, i8** %m_header_tile_data23, align 8, !tbaa !110
  call void @free(i8* %30) #9
  %31 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param24 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %31, i32 0, i32 1
  %m_encoder25 = bitcast %union.anon* %m_specific_param24 to %struct.opj_j2k_enc*
  %m_header_tile_data26 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder25, i32 0, i32 8
  store i8* null, i8** %m_header_tile_data26, align 8, !tbaa !110
  %32 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param27 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %32, i32 0, i32 1
  %m_encoder28 = bitcast %union.anon* %m_specific_param27 to %struct.opj_j2k_enc*
  %m_header_tile_data_size29 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder28, i32 0, i32 9
  store i32 0, i32* %m_header_tile_data_size29, align 4, !tbaa !112
  %33 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call30 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %33, i32 1, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.193, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %cond.end.19
  %34 = load i8*, i8** %new_header_tile_data, align 8, !tbaa !1
  %35 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param31 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %35, i32 0, i32 1
  %m_encoder32 = bitcast %union.anon* %m_specific_param31 to %struct.opj_j2k_enc*
  %m_header_tile_data33 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder32, i32 0, i32 8
  store i8* %34, i8** %m_header_tile_data33, align 8, !tbaa !110
  %36 = load i32, i32* %l_code_size, align 4, !tbaa !5
  %37 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param34 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %37, i32 0, i32 1
  %m_encoder35 = bitcast %union.anon* %m_specific_param34 to %struct.opj_j2k_enc*
  %m_header_tile_data_size36 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder35, i32 0, i32 9
  store i32 %36, i32* %m_header_tile_data_size36, align 4, !tbaa !112
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then.20
  %38 = bitcast i8** %new_header_tile_data to i8*
  call void @llvm.lifetime.end(i64 8, i8* %38) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.67 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.37

if.end.37:                                        ; preds = %cleanup.cont, %cond.end.8
  %39 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param38 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %39, i32 0, i32 1
  %m_encoder39 = bitcast %union.anon* %m_specific_param38 to %struct.opj_j2k_enc*
  %m_header_tile_data40 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder39, i32 0, i32 8
  %40 = load i8*, i8** %m_header_tile_data40, align 8, !tbaa !110
  store i8* %40, i8** %l_current_data, align 8, !tbaa !1
  %41 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  call void @opj_write_bytes_LE(i8* %41, i32 65362, i32 2) #7
  %42 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %add.ptr = getelementptr inbounds i8, i8* %42, i64 2
  store i8* %add.ptr, i8** %l_current_data, align 8, !tbaa !1
  %43 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %44 = load i32, i32* %l_code_size, align 4, !tbaa !5
  %sub = sub i32 %44, 2
  call void @opj_write_bytes_LE(i8* %43, i32 %sub, i32 2) #7
  %45 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %add.ptr41 = getelementptr inbounds i8, i8* %45, i64 2
  store i8* %add.ptr41, i8** %l_current_data, align 8, !tbaa !1
  %46 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %47 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %csty = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %47, i32 0, i32 0
  %48 = load i32, i32* %csty, align 4, !tbaa !47
  call void @opj_write_bytes_LE(i8* %46, i32 %48, i32 1) #7
  %49 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds i8, i8* %49, i32 1
  store i8* %incdec.ptr, i8** %l_current_data, align 8, !tbaa !1
  %50 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %51 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %prg = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %51, i32 0, i32 1
  %52 = load i32, i32* %prg, align 4, !tbaa !40
  call void @opj_write_bytes_LE(i8* %50, i32 %52, i32 1) #7
  %53 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %incdec.ptr42 = getelementptr inbounds i8, i8* %53, i32 1
  store i8* %incdec.ptr42, i8** %l_current_data, align 8, !tbaa !1
  %54 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %55 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %numlayers = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %55, i32 0, i32 2
  %56 = load i32, i32* %numlayers, align 4, !tbaa !44
  call void @opj_write_bytes_LE(i8* %54, i32 %56, i32 2) #7
  %57 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %add.ptr43 = getelementptr inbounds i8, i8* %57, i64 2
  store i8* %add.ptr43, i8** %l_current_data, align 8, !tbaa !1
  %58 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %59 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %mct = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %59, i32 0, i32 4
  %60 = load i32, i32* %mct, align 4, !tbaa !151
  call void @opj_write_bytes_LE(i8* %58, i32 %60, i32 1) #7
  %61 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %incdec.ptr44 = getelementptr inbounds i8, i8* %61, i32 1
  store i8* %incdec.ptr44, i8** %l_current_data, align 8, !tbaa !1
  %62 = load i32, i32* %l_remaining_size, align 4, !tbaa !5
  %sub45 = sub i32 %62, 9
  store i32 %sub45, i32* %l_remaining_size, align 4, !tbaa !5
  %63 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %64 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number46 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %64, i32 0, i32 8
  %65 = load i32, i32* %m_current_tile_number46, align 4, !tbaa !11
  %66 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %67 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call47 = call i32 @opj_j2k_write_SPCod_SPCoc(%struct.opj_j2k* %63, i32 %65, i32 0, i8* %66, i32* %l_remaining_size, %struct.opj_event_mgr* %67) #7
  %tobool48 = icmp ne i32 %call47, 0
  br i1 %tobool48, label %if.end.51, label %if.then.49

if.then.49:                                       ; preds = %if.end.37
  %68 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call50 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %68, i32 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.194, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.67

if.end.51:                                        ; preds = %if.end.37
  %69 = load i32, i32* %l_remaining_size, align 4, !tbaa !5
  %cmp52 = icmp ne i32 %69, 0
  br i1 %cmp52, label %if.then.54, label %if.end.56

if.then.54:                                       ; preds = %if.end.51
  %70 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call55 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %70, i32 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.194, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.67

if.end.56:                                        ; preds = %if.end.51
  %71 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %72 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param57 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %72, i32 0, i32 1
  %m_encoder58 = bitcast %union.anon* %m_specific_param57 to %struct.opj_j2k_enc*
  %m_header_tile_data59 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder58, i32 0, i32 8
  %73 = load i8*, i8** %m_header_tile_data59, align 8, !tbaa !110
  %74 = load i32, i32* %l_code_size, align 4, !tbaa !5
  %conv60 = zext i32 %74 to i64
  %75 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call61 = call i64 @opj_stream_write_data(%struct.opj_stream_private* %71, i8* %73, i64 %conv60, %struct.opj_event_mgr* %75) #7
  %76 = load i32, i32* %l_code_size, align 4, !tbaa !5
  %conv62 = zext i32 %76 to i64
  %cmp63 = icmp ne i64 %call61, %conv62
  br i1 %cmp63, label %if.then.65, label %if.end.66

if.then.65:                                       ; preds = %if.end.56
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.67

if.end.66:                                        ; preds = %if.end.56
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.67

cleanup.67:                                       ; preds = %if.end.66, %if.then.65, %if.then.54, %if.then.49, %cleanup
  %77 = bitcast i8** %l_current_data to i8*
  call void @llvm.lifetime.end(i64 8, i8* %77) #1
  %78 = bitcast i32* %l_remaining_size to i8*
  call void @llvm.lifetime.end(i64 4, i8* %78) #1
  %79 = bitcast i32* %l_code_size to i8*
  call void @llvm.lifetime.end(i64 4, i8* %79) #1
  %80 = bitcast %struct.opj_tcp** %l_tcp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %80) #1
  %81 = bitcast %struct.opj_cp** %l_cp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %81) #1
  %82 = load i32, i32* %retval
  ret i32 %82
}

; Function Attrs: nounwind uwtable
define internal i32 @opj_j2k_write_qcd(%struct.opj_j2k* %p_j2k, %struct.opj_stream_private* %p_stream, %struct.opj_event_mgr* %p_manager) #0 {
entry:
  %retval = alloca i32, align 4
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %p_stream.addr = alloca %struct.opj_stream_private*, align 8
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  %l_qcd_size = alloca i32, align 4
  %l_remaining_size = alloca i32, align 4
  %l_current_data = alloca i8*, align 8
  %new_header_tile_data = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store %struct.opj_stream_private* %p_stream, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %0 = bitcast i32* %l_qcd_size to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast i32* %l_remaining_size to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = bitcast i8** %l_current_data to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #1
  store i8* null, i8** %l_current_data, align 8, !tbaa !1
  %3 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cmp = icmp ne %struct.opj_j2k* %3, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 2618, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @__PRETTY_FUNCTION__.opj_j2k_write_qcd, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %4, %cond.true
  %5 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %cmp1 = icmp ne %struct.opj_event_mgr* %5, null
  br i1 %cmp1, label %cond.true.2, label %cond.false.3

cond.true.2:                                      ; preds = %cond.end
  br label %cond.end.4

cond.false.3:                                     ; preds = %cond.end
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 2619, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @__PRETTY_FUNCTION__.opj_j2k_write_qcd, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.4

cond.end.4:                                       ; preds = %6, %cond.true.2
  %7 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %cmp5 = icmp ne %struct.opj_stream_private* %7, null
  br i1 %cmp5, label %cond.true.6, label %cond.false.7

cond.true.6:                                      ; preds = %cond.end.4
  br label %cond.end.8

cond.false.7:                                     ; preds = %cond.end.4
  call void @__assert_fail(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 2620, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @__PRETTY_FUNCTION__.opj_j2k_write_qcd, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.8

cond.end.8:                                       ; preds = %8, %cond.true.6
  %9 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %10 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %10, i32 0, i32 8
  %11 = load i32, i32* %m_current_tile_number, align 4, !tbaa !11
  %call = call i32 @opj_j2k_get_SQcd_SQcc_size(%struct.opj_j2k* %9, i32 %11, i32 0) #7
  %add = add i32 4, %call
  store i32 %add, i32* %l_qcd_size, align 4, !tbaa !5
  %12 = load i32, i32* %l_qcd_size, align 4, !tbaa !5
  store i32 %12, i32* %l_remaining_size, align 4, !tbaa !5
  %13 = load i32, i32* %l_qcd_size, align 4, !tbaa !5
  %14 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %14, i32 0, i32 1
  %m_encoder = bitcast %union.anon* %m_specific_param to %struct.opj_j2k_enc*
  %m_header_tile_data_size = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder, i32 0, i32 9
  %15 = load i32, i32* %m_header_tile_data_size, align 4, !tbaa !112
  %cmp9 = icmp ugt i32 %13, %15
  br i1 %cmp9, label %if.then, label %if.end.36

if.then:                                          ; preds = %cond.end.8
  %16 = bitcast i8** %new_header_tile_data to i8*
  call void @llvm.lifetime.start(i64 8, i8* %16) #1
  %17 = load i32, i32* %l_qcd_size, align 4, !tbaa !5
  %conv = zext i32 %17 to i64
  %cmp10 = icmp uge i64 %conv, -256
  br i1 %cmp10, label %cond.true.12, label %cond.false.13

cond.true.12:                                     ; preds = %if.then
  br label %cond.end.18

cond.false.13:                                    ; preds = %if.then
  %18 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param14 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %18, i32 0, i32 1
  %m_encoder15 = bitcast %union.anon* %m_specific_param14 to %struct.opj_j2k_enc*
  %m_header_tile_data = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder15, i32 0, i32 8
  %19 = load i8*, i8** %m_header_tile_data, align 8, !tbaa !110
  %20 = load i32, i32* %l_qcd_size, align 4, !tbaa !5
  %conv16 = zext i32 %20 to i64
  %call17 = call i8* @realloc(i8* %19, i64 %conv16) #9
  br label %cond.end.18

cond.end.18:                                      ; preds = %cond.false.13, %cond.true.12
  %cond = phi i8* [ null, %cond.true.12 ], [ %call17, %cond.false.13 ]
  store i8* %cond, i8** %new_header_tile_data, align 8, !tbaa !1
  %21 = load i8*, i8** %new_header_tile_data, align 8, !tbaa !1
  %tobool = icmp ne i8* %21, null
  br i1 %tobool, label %if.end, label %if.then.19

if.then.19:                                       ; preds = %cond.end.18
  %22 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param20 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %22, i32 0, i32 1
  %m_encoder21 = bitcast %union.anon* %m_specific_param20 to %struct.opj_j2k_enc*
  %m_header_tile_data22 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder21, i32 0, i32 8
  %23 = load i8*, i8** %m_header_tile_data22, align 8, !tbaa !110
  call void @free(i8* %23) #9
  %24 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param23 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %24, i32 0, i32 1
  %m_encoder24 = bitcast %union.anon* %m_specific_param23 to %struct.opj_j2k_enc*
  %m_header_tile_data25 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder24, i32 0, i32 8
  store i8* null, i8** %m_header_tile_data25, align 8, !tbaa !110
  %25 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param26 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %25, i32 0, i32 1
  %m_encoder27 = bitcast %union.anon* %m_specific_param26 to %struct.opj_j2k_enc*
  %m_header_tile_data_size28 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder27, i32 0, i32 9
  store i32 0, i32* %m_header_tile_data_size28, align 4, !tbaa !112
  %26 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call29 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %26, i32 1, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.195, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %cond.end.18
  %27 = load i8*, i8** %new_header_tile_data, align 8, !tbaa !1
  %28 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param30 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %28, i32 0, i32 1
  %m_encoder31 = bitcast %union.anon* %m_specific_param30 to %struct.opj_j2k_enc*
  %m_header_tile_data32 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder31, i32 0, i32 8
  store i8* %27, i8** %m_header_tile_data32, align 8, !tbaa !110
  %29 = load i32, i32* %l_qcd_size, align 4, !tbaa !5
  %30 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param33 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %30, i32 0, i32 1
  %m_encoder34 = bitcast %union.anon* %m_specific_param33 to %struct.opj_j2k_enc*
  %m_header_tile_data_size35 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder34, i32 0, i32 9
  store i32 %29, i32* %m_header_tile_data_size35, align 4, !tbaa !112
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then.19
  %31 = bitcast i8** %new_header_tile_data to i8*
  call void @llvm.lifetime.end(i64 8, i8* %31) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.63 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.36

if.end.36:                                        ; preds = %cleanup.cont, %cond.end.8
  %32 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param37 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %32, i32 0, i32 1
  %m_encoder38 = bitcast %union.anon* %m_specific_param37 to %struct.opj_j2k_enc*
  %m_header_tile_data39 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder38, i32 0, i32 8
  %33 = load i8*, i8** %m_header_tile_data39, align 8, !tbaa !110
  store i8* %33, i8** %l_current_data, align 8, !tbaa !1
  %34 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  call void @opj_write_bytes_LE(i8* %34, i32 65372, i32 2) #7
  %35 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %add.ptr = getelementptr inbounds i8, i8* %35, i64 2
  store i8* %add.ptr, i8** %l_current_data, align 8, !tbaa !1
  %36 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %37 = load i32, i32* %l_qcd_size, align 4, !tbaa !5
  %sub = sub i32 %37, 2
  call void @opj_write_bytes_LE(i8* %36, i32 %sub, i32 2) #7
  %38 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %add.ptr40 = getelementptr inbounds i8, i8* %38, i64 2
  store i8* %add.ptr40, i8** %l_current_data, align 8, !tbaa !1
  %39 = load i32, i32* %l_remaining_size, align 4, !tbaa !5
  %sub41 = sub i32 %39, 4
  store i32 %sub41, i32* %l_remaining_size, align 4, !tbaa !5
  %40 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %41 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number42 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %41, i32 0, i32 8
  %42 = load i32, i32* %m_current_tile_number42, align 4, !tbaa !11
  %43 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %44 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call43 = call i32 @opj_j2k_write_SQcd_SQcc(%struct.opj_j2k* %40, i32 %42, i32 0, i8* %43, i32* %l_remaining_size, %struct.opj_event_mgr* %44) #7
  %tobool44 = icmp ne i32 %call43, 0
  br i1 %tobool44, label %if.end.47, label %if.then.45

if.then.45:                                       ; preds = %if.end.36
  %45 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call46 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %45, i32 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.196, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.63

if.end.47:                                        ; preds = %if.end.36
  %46 = load i32, i32* %l_remaining_size, align 4, !tbaa !5
  %cmp48 = icmp ne i32 %46, 0
  br i1 %cmp48, label %if.then.50, label %if.end.52

if.then.50:                                       ; preds = %if.end.47
  %47 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call51 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %47, i32 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.196, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.63

if.end.52:                                        ; preds = %if.end.47
  %48 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %49 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param53 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %49, i32 0, i32 1
  %m_encoder54 = bitcast %union.anon* %m_specific_param53 to %struct.opj_j2k_enc*
  %m_header_tile_data55 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder54, i32 0, i32 8
  %50 = load i8*, i8** %m_header_tile_data55, align 8, !tbaa !110
  %51 = load i32, i32* %l_qcd_size, align 4, !tbaa !5
  %conv56 = zext i32 %51 to i64
  %52 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call57 = call i64 @opj_stream_write_data(%struct.opj_stream_private* %48, i8* %50, i64 %conv56, %struct.opj_event_mgr* %52) #7
  %53 = load i32, i32* %l_qcd_size, align 4, !tbaa !5
  %conv58 = zext i32 %53 to i64
  %cmp59 = icmp ne i64 %call57, %conv58
  br i1 %cmp59, label %if.then.61, label %if.end.62

if.then.61:                                       ; preds = %if.end.52
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.63

if.end.62:                                        ; preds = %if.end.52
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.63

cleanup.63:                                       ; preds = %if.end.62, %if.then.61, %if.then.50, %if.then.45, %cleanup
  %54 = bitcast i8** %l_current_data to i8*
  call void @llvm.lifetime.end(i64 8, i8* %54) #1
  %55 = bitcast i32* %l_remaining_size to i8*
  call void @llvm.lifetime.end(i64 4, i8* %55) #1
  %56 = bitcast i32* %l_qcd_size to i8*
  call void @llvm.lifetime.end(i64 4, i8* %56) #1
  %57 = load i32, i32* %retval
  ret i32 %57
}

; Function Attrs: nounwind uwtable
define internal i32 @opj_j2k_write_image_components(%struct.opj_j2k* %p_j2k, %struct.opj_stream_private* %p_stream, %struct.opj_event_mgr* %p_manager) #0 {
entry:
  %retval = alloca i32, align 4
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %p_stream.addr = alloca %struct.opj_stream_private*, align 8
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  %compno = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store %struct.opj_stream_private* %p_stream, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %0 = bitcast i32* %compno to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cmp = icmp ne %struct.opj_j2k* %1, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 4767, i8* getelementptr inbounds ([106 x i8], [106 x i8]* @__PRETTY_FUNCTION__.opj_j2k_write_image_components, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %2, %cond.true
  %3 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %cmp1 = icmp ne %struct.opj_event_mgr* %3, null
  br i1 %cmp1, label %cond.true.2, label %cond.false.3

cond.true.2:                                      ; preds = %cond.end
  br label %cond.end.4

cond.false.3:                                     ; preds = %cond.end
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 4768, i8* getelementptr inbounds ([106 x i8], [106 x i8]* @__PRETTY_FUNCTION__.opj_j2k_write_image_components, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.4

cond.end.4:                                       ; preds = %4, %cond.true.2
  %5 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %cmp5 = icmp ne %struct.opj_stream_private* %5, null
  br i1 %cmp5, label %cond.true.6, label %cond.false.7

cond.true.6:                                      ; preds = %cond.end.4
  br label %cond.end.8

cond.false.7:                                     ; preds = %cond.end.4
  call void @__assert_fail(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 4769, i8* getelementptr inbounds ([106 x i8], [106 x i8]* @__PRETTY_FUNCTION__.opj_j2k_write_image_components, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.8

cond.end.8:                                       ; preds = %6, %cond.true.6
  store i32 1, i32* %compno, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %cond.end.8
  %7 = load i32, i32* %compno, align 4, !tbaa !5
  %8 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_private_image = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %8, i32 0, i32 2
  %9 = load %struct.opj_image*, %struct.opj_image** %m_private_image, align 8, !tbaa !38
  %numcomps = getelementptr inbounds %struct.opj_image, %struct.opj_image* %9, i32 0, i32 4
  %10 = load i32, i32* %numcomps, align 4, !tbaa !45
  %cmp9 = icmp ult i32 %7, %10
  br i1 %cmp9, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %11 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %12 = load i32, i32* %compno, align 4, !tbaa !5
  %13 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %14 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call = call i32 @opj_j2k_write_coc(%struct.opj_j2k* %11, i32 %12, %struct.opj_stream_private* %13, %struct.opj_event_mgr* %14) #7
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %for.body
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %for.body
  %15 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %16 = load i32, i32* %compno, align 4, !tbaa !5
  %17 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %18 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call10 = call i32 @opj_j2k_write_qcc(%struct.opj_j2k* %15, i32 %16, %struct.opj_stream_private* %17, %struct.opj_event_mgr* %18) #7
  %tobool11 = icmp ne i32 %call10, 0
  br i1 %tobool11, label %if.end.13, label %if.then.12

if.then.12:                                       ; preds = %if.end
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.13:                                        ; preds = %if.end
  br label %for.inc

for.inc:                                          ; preds = %if.end.13
  %19 = load i32, i32* %compno, align 4, !tbaa !5
  %inc = add i32 %19, 1
  store i32 %inc, i32* %compno, align 4, !tbaa !5
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %for.end, %if.then.12, %if.then
  %20 = bitcast i32* %compno to i8*
  call void @llvm.lifetime.end(i64 4, i8* %20) #1
  %21 = load i32, i32* %retval
  ret i32 %21
}

; Function Attrs: nounwind uwtable
define internal i32 @opj_j2k_write_tlm(%struct.opj_j2k* %p_j2k, %struct.opj_stream_private* %p_stream, %struct.opj_event_mgr* %p_manager) #0 {
entry:
  %retval = alloca i32, align 4
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %p_stream.addr = alloca %struct.opj_stream_private*, align 8
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  %l_current_data = alloca i8*, align 8
  %l_tlm_size = alloca i32, align 4
  %new_header_tile_data = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store %struct.opj_stream_private* %p_stream, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %0 = bitcast i8** %l_current_data to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  store i8* null, i8** %l_current_data, align 8, !tbaa !1
  %1 = bitcast i32* %l_tlm_size to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cmp = icmp ne %struct.opj_j2k* %2, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 3780, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @__PRETTY_FUNCTION__.opj_j2k_write_tlm, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %3, %cond.true
  %4 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %cmp1 = icmp ne %struct.opj_event_mgr* %4, null
  br i1 %cmp1, label %cond.true.2, label %cond.false.3

cond.true.2:                                      ; preds = %cond.end
  br label %cond.end.4

cond.false.3:                                     ; preds = %cond.end
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 3781, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @__PRETTY_FUNCTION__.opj_j2k_write_tlm, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.4

cond.end.4:                                       ; preds = %5, %cond.true.2
  %6 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %cmp5 = icmp ne %struct.opj_stream_private* %6, null
  br i1 %cmp5, label %cond.true.6, label %cond.false.7

cond.true.6:                                      ; preds = %cond.end.4
  br label %cond.end.8

cond.false.7:                                     ; preds = %cond.end.4
  call void @__assert_fail(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 3782, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @__PRETTY_FUNCTION__.opj_j2k_write_tlm, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.8

cond.end.8:                                       ; preds = %7, %cond.true.6
  %8 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %8, i32 0, i32 1
  %m_encoder = bitcast %union.anon* %m_specific_param to %struct.opj_j2k_enc*
  %m_total_tile_parts = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder, i32 0, i32 5
  %9 = load i32, i32* %m_total_tile_parts, align 4, !tbaa !283
  %mul = mul i32 5, %9
  %add = add i32 6, %mul
  store i32 %add, i32* %l_tlm_size, align 4, !tbaa !5
  %10 = load i32, i32* %l_tlm_size, align 4, !tbaa !5
  %11 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param9 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %11, i32 0, i32 1
  %m_encoder10 = bitcast %union.anon* %m_specific_param9 to %struct.opj_j2k_enc*
  %m_header_tile_data_size = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder10, i32 0, i32 9
  %12 = load i32, i32* %m_header_tile_data_size, align 4, !tbaa !112
  %cmp11 = icmp ugt i32 %10, %12
  br i1 %cmp11, label %if.then, label %if.end.37

if.then:                                          ; preds = %cond.end.8
  %13 = bitcast i8** %new_header_tile_data to i8*
  call void @llvm.lifetime.start(i64 8, i8* %13) #1
  %14 = load i32, i32* %l_tlm_size, align 4, !tbaa !5
  %conv = zext i32 %14 to i64
  %cmp12 = icmp uge i64 %conv, -256
  br i1 %cmp12, label %cond.true.14, label %cond.false.15

cond.true.14:                                     ; preds = %if.then
  br label %cond.end.19

cond.false.15:                                    ; preds = %if.then
  %15 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param16 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %15, i32 0, i32 1
  %m_encoder17 = bitcast %union.anon* %m_specific_param16 to %struct.opj_j2k_enc*
  %m_header_tile_data = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder17, i32 0, i32 8
  %16 = load i8*, i8** %m_header_tile_data, align 8, !tbaa !110
  %17 = load i32, i32* %l_tlm_size, align 4, !tbaa !5
  %conv18 = zext i32 %17 to i64
  %call = call i8* @realloc(i8* %16, i64 %conv18) #9
  br label %cond.end.19

cond.end.19:                                      ; preds = %cond.false.15, %cond.true.14
  %cond = phi i8* [ null, %cond.true.14 ], [ %call, %cond.false.15 ]
  store i8* %cond, i8** %new_header_tile_data, align 8, !tbaa !1
  %18 = load i8*, i8** %new_header_tile_data, align 8, !tbaa !1
  %tobool = icmp ne i8* %18, null
  br i1 %tobool, label %if.end, label %if.then.20

if.then.20:                                       ; preds = %cond.end.19
  %19 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param21 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %19, i32 0, i32 1
  %m_encoder22 = bitcast %union.anon* %m_specific_param21 to %struct.opj_j2k_enc*
  %m_header_tile_data23 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder22, i32 0, i32 8
  %20 = load i8*, i8** %m_header_tile_data23, align 8, !tbaa !110
  call void @free(i8* %20) #9
  %21 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param24 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %21, i32 0, i32 1
  %m_encoder25 = bitcast %union.anon* %m_specific_param24 to %struct.opj_j2k_enc*
  %m_header_tile_data26 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder25, i32 0, i32 8
  store i8* null, i8** %m_header_tile_data26, align 8, !tbaa !110
  %22 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param27 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %22, i32 0, i32 1
  %m_encoder28 = bitcast %union.anon* %m_specific_param27 to %struct.opj_j2k_enc*
  %m_header_tile_data_size29 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder28, i32 0, i32 9
  store i32 0, i32* %m_header_tile_data_size29, align 4, !tbaa !112
  %23 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call30 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %23, i32 1, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.199, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %cond.end.19
  %24 = load i8*, i8** %new_header_tile_data, align 8, !tbaa !1
  %25 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param31 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %25, i32 0, i32 1
  %m_encoder32 = bitcast %union.anon* %m_specific_param31 to %struct.opj_j2k_enc*
  %m_header_tile_data33 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder32, i32 0, i32 8
  store i8* %24, i8** %m_header_tile_data33, align 8, !tbaa !110
  %26 = load i32, i32* %l_tlm_size, align 4, !tbaa !5
  %27 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param34 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %27, i32 0, i32 1
  %m_encoder35 = bitcast %union.anon* %m_specific_param34 to %struct.opj_j2k_enc*
  %m_header_tile_data_size36 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder35, i32 0, i32 9
  store i32 %26, i32* %m_header_tile_data_size36, align 4, !tbaa !112
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then.20
  %28 = bitcast i8** %new_header_tile_data to i8*
  call void @llvm.lifetime.end(i64 8, i8* %28) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.56 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.37

if.end.37:                                        ; preds = %cleanup.cont, %cond.end.8
  %29 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param38 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %29, i32 0, i32 1
  %m_encoder39 = bitcast %union.anon* %m_specific_param38 to %struct.opj_j2k_enc*
  %m_header_tile_data40 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder39, i32 0, i32 8
  %30 = load i8*, i8** %m_header_tile_data40, align 8, !tbaa !110
  store i8* %30, i8** %l_current_data, align 8, !tbaa !1
  %31 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %call41 = call i64 @opj_stream_tell(%struct.opj_stream_private* %31) #7
  %32 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param42 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %32, i32 0, i32 1
  %m_encoder43 = bitcast %union.anon* %m_specific_param42 to %struct.opj_j2k_enc*
  %m_tlm_start = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder43, i32 0, i32 2
  store i64 %call41, i64* %m_tlm_start, align 8, !tbaa !284
  %33 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  call void @opj_write_bytes_LE(i8* %33, i32 65365, i32 2) #7
  %34 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %add.ptr = getelementptr inbounds i8, i8* %34, i64 2
  store i8* %add.ptr, i8** %l_current_data, align 8, !tbaa !1
  %35 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %36 = load i32, i32* %l_tlm_size, align 4, !tbaa !5
  %sub = sub i32 %36, 2
  call void @opj_write_bytes_LE(i8* %35, i32 %sub, i32 2) #7
  %37 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %add.ptr44 = getelementptr inbounds i8, i8* %37, i64 2
  store i8* %add.ptr44, i8** %l_current_data, align 8, !tbaa !1
  %38 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  call void @opj_write_bytes_LE(i8* %38, i32 0, i32 1) #7
  %39 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds i8, i8* %39, i32 1
  store i8* %incdec.ptr, i8** %l_current_data, align 8, !tbaa !1
  %40 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  call void @opj_write_bytes_LE(i8* %40, i32 80, i32 1) #7
  %41 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %incdec.ptr45 = getelementptr inbounds i8, i8* %41, i32 1
  store i8* %incdec.ptr45, i8** %l_current_data, align 8, !tbaa !1
  %42 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %43 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param46 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %43, i32 0, i32 1
  %m_encoder47 = bitcast %union.anon* %m_specific_param46 to %struct.opj_j2k_enc*
  %m_header_tile_data48 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder47, i32 0, i32 8
  %44 = load i8*, i8** %m_header_tile_data48, align 8, !tbaa !110
  %45 = load i32, i32* %l_tlm_size, align 4, !tbaa !5
  %conv49 = zext i32 %45 to i64
  %46 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call50 = call i64 @opj_stream_write_data(%struct.opj_stream_private* %42, i8* %44, i64 %conv49, %struct.opj_event_mgr* %46) #7
  %47 = load i32, i32* %l_tlm_size, align 4, !tbaa !5
  %conv51 = zext i32 %47 to i64
  %cmp52 = icmp ne i64 %call50, %conv51
  br i1 %cmp52, label %if.then.54, label %if.end.55

if.then.54:                                       ; preds = %if.end.37
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.56

if.end.55:                                        ; preds = %if.end.37
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.56

cleanup.56:                                       ; preds = %if.end.55, %if.then.54, %cleanup
  %48 = bitcast i32* %l_tlm_size to i8*
  call void @llvm.lifetime.end(i64 4, i8* %48) #1
  %49 = bitcast i8** %l_current_data to i8*
  call void @llvm.lifetime.end(i64 8, i8* %49) #1
  %50 = load i32, i32* %retval
  ret i32 %50
}

; Function Attrs: nounwind uwtable
define internal i32 @opj_j2k_write_poc(%struct.opj_j2k* %p_j2k, %struct.opj_stream_private* %p_stream, %struct.opj_event_mgr* %p_manager) #0 {
entry:
  %retval = alloca i32, align 4
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %p_stream.addr = alloca %struct.opj_stream_private*, align 8
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  %l_nb_comp = alloca i32, align 4
  %l_nb_poc = alloca i32, align 4
  %l_poc_size = alloca i32, align 4
  %l_written_size = alloca i32, align 4
  %l_tcp = alloca %struct.opj_tcp*, align 8
  %l_poc_room = alloca i32, align 4
  %new_header_tile_data = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store %struct.opj_stream_private* %p_stream, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %0 = bitcast i32* %l_nb_comp to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast i32* %l_nb_poc to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = bitcast i32* %l_poc_size to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #1
  %3 = bitcast i32* %l_written_size to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #1
  store i32 0, i32* %l_written_size, align 4, !tbaa !5
  %4 = bitcast %struct.opj_tcp** %l_tcp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4) #1
  store %struct.opj_tcp* null, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %5 = bitcast i32* %l_poc_room to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #1
  %6 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cmp = icmp ne %struct.opj_j2k* %6, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 2891, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @__PRETTY_FUNCTION__.opj_j2k_write_poc, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %7, %cond.true
  %8 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %cmp1 = icmp ne %struct.opj_event_mgr* %8, null
  br i1 %cmp1, label %cond.true.2, label %cond.false.3

cond.true.2:                                      ; preds = %cond.end
  br label %cond.end.4

cond.false.3:                                     ; preds = %cond.end
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 2892, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @__PRETTY_FUNCTION__.opj_j2k_write_poc, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.4

cond.end.4:                                       ; preds = %9, %cond.true.2
  %10 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %cmp5 = icmp ne %struct.opj_stream_private* %10, null
  br i1 %cmp5, label %cond.true.6, label %cond.false.7

cond.true.6:                                      ; preds = %cond.end.4
  br label %cond.end.8

cond.false.7:                                     ; preds = %cond.end.4
  call void @__assert_fail(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 2893, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @__PRETTY_FUNCTION__.opj_j2k_write_poc, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.8

cond.end.8:                                       ; preds = %11, %cond.true.6
  %12 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %12, i32 0, i32 8
  %13 = load i32, i32* %m_current_tile_number, align 4, !tbaa !11
  %idxprom = zext i32 %13 to i64
  %14 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %14, i32 0, i32 4
  %tcps = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp, i32 0, i32 17
  %15 = load %struct.opj_tcp*, %struct.opj_tcp** %tcps, align 8, !tbaa !88
  %arrayidx = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %15, i64 %idxprom
  store %struct.opj_tcp* %arrayidx, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %16 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_private_image = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %16, i32 0, i32 2
  %17 = load %struct.opj_image*, %struct.opj_image** %m_private_image, align 8, !tbaa !38
  %numcomps = getelementptr inbounds %struct.opj_image, %struct.opj_image* %17, i32 0, i32 4
  %18 = load i32, i32* %numcomps, align 4, !tbaa !45
  store i32 %18, i32* %l_nb_comp, align 4, !tbaa !5
  %19 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %numpocs = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %19, i32 0, i32 6
  %20 = load i32, i32* %numpocs, align 4, !tbaa !51
  %add = add i32 1, %20
  store i32 %add, i32* %l_nb_poc, align 4, !tbaa !5
  %21 = load i32, i32* %l_nb_comp, align 4, !tbaa !5
  %cmp9 = icmp ule i32 %21, 256
  br i1 %cmp9, label %if.then, label %if.else

if.then:                                          ; preds = %cond.end.8
  store i32 1, i32* %l_poc_room, align 4, !tbaa !5
  br label %if.end

if.else:                                          ; preds = %cond.end.8
  store i32 2, i32* %l_poc_room, align 4, !tbaa !5
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %22 = load i32, i32* %l_poc_room, align 4, !tbaa !5
  %mul = mul i32 2, %22
  %add10 = add i32 5, %mul
  %23 = load i32, i32* %l_nb_poc, align 4, !tbaa !5
  %mul11 = mul i32 %add10, %23
  %add12 = add i32 4, %mul11
  store i32 %add12, i32* %l_poc_size, align 4, !tbaa !5
  %24 = load i32, i32* %l_poc_size, align 4, !tbaa !5
  %25 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %25, i32 0, i32 1
  %m_encoder = bitcast %union.anon* %m_specific_param to %struct.opj_j2k_enc*
  %m_header_tile_data_size = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder, i32 0, i32 9
  %26 = load i32, i32* %m_header_tile_data_size, align 4, !tbaa !112
  %cmp13 = icmp ugt i32 %24, %26
  br i1 %cmp13, label %if.then.14, label %if.end.41

if.then.14:                                       ; preds = %if.end
  %27 = bitcast i8** %new_header_tile_data to i8*
  call void @llvm.lifetime.start(i64 8, i8* %27) #1
  %28 = load i32, i32* %l_poc_size, align 4, !tbaa !5
  %conv = zext i32 %28 to i64
  %cmp15 = icmp uge i64 %conv, -256
  br i1 %cmp15, label %cond.true.17, label %cond.false.18

cond.true.17:                                     ; preds = %if.then.14
  br label %cond.end.22

cond.false.18:                                    ; preds = %if.then.14
  %29 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param19 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %29, i32 0, i32 1
  %m_encoder20 = bitcast %union.anon* %m_specific_param19 to %struct.opj_j2k_enc*
  %m_header_tile_data = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder20, i32 0, i32 8
  %30 = load i8*, i8** %m_header_tile_data, align 8, !tbaa !110
  %31 = load i32, i32* %l_poc_size, align 4, !tbaa !5
  %conv21 = zext i32 %31 to i64
  %call = call i8* @realloc(i8* %30, i64 %conv21) #9
  br label %cond.end.22

cond.end.22:                                      ; preds = %cond.false.18, %cond.true.17
  %cond = phi i8* [ null, %cond.true.17 ], [ %call, %cond.false.18 ]
  store i8* %cond, i8** %new_header_tile_data, align 8, !tbaa !1
  %32 = load i8*, i8** %new_header_tile_data, align 8, !tbaa !1
  %tobool = icmp ne i8* %32, null
  br i1 %tobool, label %if.end.34, label %if.then.23

if.then.23:                                       ; preds = %cond.end.22
  %33 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param24 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %33, i32 0, i32 1
  %m_encoder25 = bitcast %union.anon* %m_specific_param24 to %struct.opj_j2k_enc*
  %m_header_tile_data26 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder25, i32 0, i32 8
  %34 = load i8*, i8** %m_header_tile_data26, align 8, !tbaa !110
  call void @free(i8* %34) #9
  %35 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param27 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %35, i32 0, i32 1
  %m_encoder28 = bitcast %union.anon* %m_specific_param27 to %struct.opj_j2k_enc*
  %m_header_tile_data29 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder28, i32 0, i32 8
  store i8* null, i8** %m_header_tile_data29, align 8, !tbaa !110
  %36 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param30 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %36, i32 0, i32 1
  %m_encoder31 = bitcast %union.anon* %m_specific_param30 to %struct.opj_j2k_enc*
  %m_header_tile_data_size32 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder31, i32 0, i32 9
  store i32 0, i32* %m_header_tile_data_size32, align 4, !tbaa !112
  %37 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call33 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %37, i32 1, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.200, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.34:                                        ; preds = %cond.end.22
  %38 = load i8*, i8** %new_header_tile_data, align 8, !tbaa !1
  %39 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param35 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %39, i32 0, i32 1
  %m_encoder36 = bitcast %union.anon* %m_specific_param35 to %struct.opj_j2k_enc*
  %m_header_tile_data37 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder36, i32 0, i32 8
  store i8* %38, i8** %m_header_tile_data37, align 8, !tbaa !110
  %40 = load i32, i32* %l_poc_size, align 4, !tbaa !5
  %41 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param38 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %41, i32 0, i32 1
  %m_encoder39 = bitcast %union.anon* %m_specific_param38 to %struct.opj_j2k_enc*
  %m_header_tile_data_size40 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder39, i32 0, i32 9
  store i32 %40, i32* %m_header_tile_data_size40, align 4, !tbaa !112
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.34, %if.then.23
  %42 = bitcast i8** %new_header_tile_data to i8*
  call void @llvm.lifetime.end(i64 8, i8* %42) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.55 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.41

if.end.41:                                        ; preds = %cleanup.cont, %if.end
  %43 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %44 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param42 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %44, i32 0, i32 1
  %m_encoder43 = bitcast %union.anon* %m_specific_param42 to %struct.opj_j2k_enc*
  %m_header_tile_data44 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder43, i32 0, i32 8
  %45 = load i8*, i8** %m_header_tile_data44, align 8, !tbaa !110
  %46 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  call void @opj_j2k_write_poc_in_memory(%struct.opj_j2k* %43, i8* %45, i32* %l_written_size, %struct.opj_event_mgr* %46) #7
  %47 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %48 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param45 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %48, i32 0, i32 1
  %m_encoder46 = bitcast %union.anon* %m_specific_param45 to %struct.opj_j2k_enc*
  %m_header_tile_data47 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder46, i32 0, i32 8
  %49 = load i8*, i8** %m_header_tile_data47, align 8, !tbaa !110
  %50 = load i32, i32* %l_poc_size, align 4, !tbaa !5
  %conv48 = zext i32 %50 to i64
  %51 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call49 = call i64 @opj_stream_write_data(%struct.opj_stream_private* %47, i8* %49, i64 %conv48, %struct.opj_event_mgr* %51) #7
  %52 = load i32, i32* %l_poc_size, align 4, !tbaa !5
  %conv50 = zext i32 %52 to i64
  %cmp51 = icmp ne i64 %call49, %conv50
  br i1 %cmp51, label %if.then.53, label %if.end.54

if.then.53:                                       ; preds = %if.end.41
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.55

if.end.54:                                        ; preds = %if.end.41
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.55

cleanup.55:                                       ; preds = %if.end.54, %if.then.53, %cleanup
  %53 = bitcast i32* %l_poc_room to i8*
  call void @llvm.lifetime.end(i64 4, i8* %53) #1
  %54 = bitcast %struct.opj_tcp** %l_tcp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %54) #1
  %55 = bitcast i32* %l_written_size to i8*
  call void @llvm.lifetime.end(i64 4, i8* %55) #1
  %56 = bitcast i32* %l_poc_size to i8*
  call void @llvm.lifetime.end(i64 4, i8* %56) #1
  %57 = bitcast i32* %l_nb_poc to i8*
  call void @llvm.lifetime.end(i64 4, i8* %57) #1
  %58 = bitcast i32* %l_nb_comp to i8*
  call void @llvm.lifetime.end(i64 4, i8* %58) #1
  %59 = load i32, i32* %retval
  ret i32 %59
}

; Function Attrs: nounwind uwtable
define internal i32 @opj_j2k_write_regions(%struct.opj_j2k* %p_j2k, %struct.opj_stream_private* %p_stream, %struct.opj_event_mgr* %p_manager) #0 {
entry:
  %retval = alloca i32, align 4
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %p_stream.addr = alloca %struct.opj_stream_private*, align 8
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  %compno = alloca i32, align 4
  %l_tccp = alloca %struct.opj_tccp*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store %struct.opj_stream_private* %p_stream, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %0 = bitcast i32* %compno to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast %struct.opj_tccp** %l_tccp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #1
  store %struct.opj_tccp* null, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %2 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cmp = icmp ne %struct.opj_j2k* %2, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 4793, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @__PRETTY_FUNCTION__.opj_j2k_write_regions, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %3, %cond.true
  %4 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %cmp1 = icmp ne %struct.opj_event_mgr* %4, null
  br i1 %cmp1, label %cond.true.2, label %cond.false.3

cond.true.2:                                      ; preds = %cond.end
  br label %cond.end.4

cond.false.3:                                     ; preds = %cond.end
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 4794, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @__PRETTY_FUNCTION__.opj_j2k_write_regions, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.4

cond.end.4:                                       ; preds = %5, %cond.true.2
  %6 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %cmp5 = icmp ne %struct.opj_stream_private* %6, null
  br i1 %cmp5, label %cond.true.6, label %cond.false.7

cond.true.6:                                      ; preds = %cond.end.4
  br label %cond.end.8

cond.false.7:                                     ; preds = %cond.end.4
  call void @__assert_fail(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 4795, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @__PRETTY_FUNCTION__.opj_j2k_write_regions, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.8

cond.end.8:                                       ; preds = %7, %cond.true.6
  %8 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %8, i32 0, i32 4
  %tcps = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp, i32 0, i32 17
  %9 = load %struct.opj_tcp*, %struct.opj_tcp** %tcps, align 8, !tbaa !88
  %tccps = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %9, i32 0, i32 13
  %10 = load %struct.opj_tccp*, %struct.opj_tccp** %tccps, align 8, !tbaa !48
  store %struct.opj_tccp* %10, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  store i32 0, i32* %compno, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %cond.end.8
  %11 = load i32, i32* %compno, align 4, !tbaa !5
  %12 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_private_image = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %12, i32 0, i32 2
  %13 = load %struct.opj_image*, %struct.opj_image** %m_private_image, align 8, !tbaa !38
  %numcomps = getelementptr inbounds %struct.opj_image, %struct.opj_image* %13, i32 0, i32 4
  %14 = load i32, i32* %numcomps, align 4, !tbaa !45
  %cmp9 = icmp ult i32 %11, %14
  br i1 %cmp9, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %15 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %roishift = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %15, i32 0, i32 9
  %16 = load i32, i32* %roishift, align 4, !tbaa !174
  %tobool = icmp ne i32 %16, 0
  br i1 %tobool, label %if.then, label %if.end.14

if.then:                                          ; preds = %for.body
  %17 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %18 = load i32, i32* %compno, align 4, !tbaa !5
  %19 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_private_image10 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %19, i32 0, i32 2
  %20 = load %struct.opj_image*, %struct.opj_image** %m_private_image10, align 8, !tbaa !38
  %numcomps11 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %20, i32 0, i32 4
  %21 = load i32, i32* %numcomps11, align 4, !tbaa !45
  %22 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %23 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call = call i32 @opj_j2k_write_rgn(%struct.opj_j2k* %17, i32 0, i32 %18, i32 %21, %struct.opj_stream_private* %22, %struct.opj_event_mgr* %23) #7
  %tobool12 = icmp ne i32 %call, 0
  br i1 %tobool12, label %if.end, label %if.then.13

if.then.13:                                       ; preds = %if.then
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %if.then
  br label %if.end.14

if.end.14:                                        ; preds = %if.end, %for.body
  %24 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %24, i32 1
  store %struct.opj_tccp* %incdec.ptr, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  br label %for.inc

for.inc:                                          ; preds = %if.end.14
  %25 = load i32, i32* %compno, align 4, !tbaa !5
  %inc = add i32 %25, 1
  store i32 %inc, i32* %compno, align 4, !tbaa !5
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %for.end, %if.then.13
  %26 = bitcast %struct.opj_tccp** %l_tccp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %26) #1
  %27 = bitcast i32* %compno to i8*
  call void @llvm.lifetime.end(i64 4, i8* %27) #1
  %28 = load i32, i32* %retval
  ret i32 %28
}

; Function Attrs: nounwind uwtable
define internal i32 @opj_j2k_write_com(%struct.opj_j2k* %p_j2k, %struct.opj_stream_private* %p_stream, %struct.opj_event_mgr* %p_manager) #0 {
entry:
  %retval = alloca i32, align 4
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %p_stream.addr = alloca %struct.opj_stream_private*, align 8
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  %l_comment_size = alloca i32, align 4
  %l_total_com_size = alloca i32, align 4
  %l_comment = alloca i8*, align 8
  %l_current_ptr = alloca i8*, align 8
  %new_header_tile_data = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store %struct.opj_stream_private* %p_stream, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %0 = bitcast i32* %l_comment_size to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast i32* %l_total_com_size to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = bitcast i8** %l_comment to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #1
  %3 = bitcast i8** %l_current_ptr to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #1
  store i8* null, i8** %l_current_ptr, align 8, !tbaa !1
  %4 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cmp = icmp ne %struct.opj_j2k* %4, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 2211, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @__PRETTY_FUNCTION__.opj_j2k_write_com, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %5, %cond.true
  %6 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %cmp1 = icmp ne %struct.opj_stream_private* %6, null
  br i1 %cmp1, label %cond.true.2, label %cond.false.3

cond.true.2:                                      ; preds = %cond.end
  br label %cond.end.4

cond.false.3:                                     ; preds = %cond.end
  call void @__assert_fail(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 2212, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @__PRETTY_FUNCTION__.opj_j2k_write_com, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.4

cond.end.4:                                       ; preds = %7, %cond.true.2
  %8 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %cmp5 = icmp ne %struct.opj_event_mgr* %8, null
  br i1 %cmp5, label %cond.true.6, label %cond.false.7

cond.true.6:                                      ; preds = %cond.end.4
  br label %cond.end.8

cond.false.7:                                     ; preds = %cond.end.4
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 2213, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @__PRETTY_FUNCTION__.opj_j2k_write_com, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.8

cond.end.8:                                       ; preds = %9, %cond.true.6
  %10 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %10, i32 0, i32 4
  %comment = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp, i32 0, i32 5
  %11 = load i8*, i8** %comment, align 8, !tbaa !264
  store i8* %11, i8** %l_comment, align 8, !tbaa !1
  %12 = load i8*, i8** %l_comment, align 8, !tbaa !1
  %call = call i64 @strlen(i8* %12) #10
  %conv = trunc i64 %call to i32
  store i32 %conv, i32* %l_comment_size, align 4, !tbaa !5
  %13 = load i32, i32* %l_comment_size, align 4, !tbaa !5
  %add = add i32 %13, 6
  store i32 %add, i32* %l_total_com_size, align 4, !tbaa !5
  %14 = load i32, i32* %l_total_com_size, align 4, !tbaa !5
  %15 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %15, i32 0, i32 1
  %m_encoder = bitcast %union.anon* %m_specific_param to %struct.opj_j2k_enc*
  %m_header_tile_data_size = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder, i32 0, i32 9
  %16 = load i32, i32* %m_header_tile_data_size, align 4, !tbaa !112
  %cmp9 = icmp ugt i32 %14, %16
  br i1 %cmp9, label %if.then, label %if.end.38

if.then:                                          ; preds = %cond.end.8
  %17 = bitcast i8** %new_header_tile_data to i8*
  call void @llvm.lifetime.start(i64 8, i8* %17) #1
  %18 = load i32, i32* %l_total_com_size, align 4, !tbaa !5
  %conv11 = zext i32 %18 to i64
  %cmp12 = icmp uge i64 %conv11, -256
  br i1 %cmp12, label %cond.true.14, label %cond.false.15

cond.true.14:                                     ; preds = %if.then
  br label %cond.end.20

cond.false.15:                                    ; preds = %if.then
  %19 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param16 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %19, i32 0, i32 1
  %m_encoder17 = bitcast %union.anon* %m_specific_param16 to %struct.opj_j2k_enc*
  %m_header_tile_data = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder17, i32 0, i32 8
  %20 = load i8*, i8** %m_header_tile_data, align 8, !tbaa !110
  %21 = load i32, i32* %l_total_com_size, align 4, !tbaa !5
  %conv18 = zext i32 %21 to i64
  %call19 = call i8* @realloc(i8* %20, i64 %conv18) #9
  br label %cond.end.20

cond.end.20:                                      ; preds = %cond.false.15, %cond.true.14
  %cond = phi i8* [ null, %cond.true.14 ], [ %call19, %cond.false.15 ]
  store i8* %cond, i8** %new_header_tile_data, align 8, !tbaa !1
  %22 = load i8*, i8** %new_header_tile_data, align 8, !tbaa !1
  %tobool = icmp ne i8* %22, null
  br i1 %tobool, label %if.end, label %if.then.21

if.then.21:                                       ; preds = %cond.end.20
  %23 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param22 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %23, i32 0, i32 1
  %m_encoder23 = bitcast %union.anon* %m_specific_param22 to %struct.opj_j2k_enc*
  %m_header_tile_data24 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder23, i32 0, i32 8
  %24 = load i8*, i8** %m_header_tile_data24, align 8, !tbaa !110
  call void @free(i8* %24) #9
  %25 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param25 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %25, i32 0, i32 1
  %m_encoder26 = bitcast %union.anon* %m_specific_param25 to %struct.opj_j2k_enc*
  %m_header_tile_data27 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder26, i32 0, i32 8
  store i8* null, i8** %m_header_tile_data27, align 8, !tbaa !110
  %26 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param28 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %26, i32 0, i32 1
  %m_encoder29 = bitcast %union.anon* %m_specific_param28 to %struct.opj_j2k_enc*
  %m_header_tile_data_size30 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder29, i32 0, i32 9
  store i32 0, i32* %m_header_tile_data_size30, align 4, !tbaa !112
  %27 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call31 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %27, i32 1, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.201, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %cond.end.20
  %28 = load i8*, i8** %new_header_tile_data, align 8, !tbaa !1
  %29 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param32 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %29, i32 0, i32 1
  %m_encoder33 = bitcast %union.anon* %m_specific_param32 to %struct.opj_j2k_enc*
  %m_header_tile_data34 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder33, i32 0, i32 8
  store i8* %28, i8** %m_header_tile_data34, align 8, !tbaa !110
  %30 = load i32, i32* %l_total_com_size, align 4, !tbaa !5
  %31 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param35 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %31, i32 0, i32 1
  %m_encoder36 = bitcast %union.anon* %m_specific_param35 to %struct.opj_j2k_enc*
  %m_header_tile_data_size37 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder36, i32 0, i32 9
  store i32 %30, i32* %m_header_tile_data_size37, align 4, !tbaa !112
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then.21
  %32 = bitcast i8** %new_header_tile_data to i8*
  call void @llvm.lifetime.end(i64 8, i8* %32) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.56 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.38

if.end.38:                                        ; preds = %cleanup.cont, %cond.end.8
  %33 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param39 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %33, i32 0, i32 1
  %m_encoder40 = bitcast %union.anon* %m_specific_param39 to %struct.opj_j2k_enc*
  %m_header_tile_data41 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder40, i32 0, i32 8
  %34 = load i8*, i8** %m_header_tile_data41, align 8, !tbaa !110
  store i8* %34, i8** %l_current_ptr, align 8, !tbaa !1
  %35 = load i8*, i8** %l_current_ptr, align 8, !tbaa !1
  call void @opj_write_bytes_LE(i8* %35, i32 65380, i32 2) #7
  %36 = load i8*, i8** %l_current_ptr, align 8, !tbaa !1
  %add.ptr = getelementptr inbounds i8, i8* %36, i64 2
  store i8* %add.ptr, i8** %l_current_ptr, align 8, !tbaa !1
  %37 = load i8*, i8** %l_current_ptr, align 8, !tbaa !1
  %38 = load i32, i32* %l_total_com_size, align 4, !tbaa !5
  %sub = sub i32 %38, 2
  call void @opj_write_bytes_LE(i8* %37, i32 %sub, i32 2) #7
  %39 = load i8*, i8** %l_current_ptr, align 8, !tbaa !1
  %add.ptr42 = getelementptr inbounds i8, i8* %39, i64 2
  store i8* %add.ptr42, i8** %l_current_ptr, align 8, !tbaa !1
  %40 = load i8*, i8** %l_current_ptr, align 8, !tbaa !1
  call void @opj_write_bytes_LE(i8* %40, i32 1, i32 2) #7
  %41 = load i8*, i8** %l_current_ptr, align 8, !tbaa !1
  %add.ptr43 = getelementptr inbounds i8, i8* %41, i64 2
  store i8* %add.ptr43, i8** %l_current_ptr, align 8, !tbaa !1
  %42 = load i8*, i8** %l_current_ptr, align 8, !tbaa !1
  %43 = load i8*, i8** %l_comment, align 8, !tbaa !1
  %44 = load i32, i32* %l_comment_size, align 4, !tbaa !5
  %conv44 = zext i32 %44 to i64
  %call45 = call i8* @memcpy(i8* %42, i8* %43, i64 %conv44) #9
  %45 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %46 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param46 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %46, i32 0, i32 1
  %m_encoder47 = bitcast %union.anon* %m_specific_param46 to %struct.opj_j2k_enc*
  %m_header_tile_data48 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder47, i32 0, i32 8
  %47 = load i8*, i8** %m_header_tile_data48, align 8, !tbaa !110
  %48 = load i32, i32* %l_total_com_size, align 4, !tbaa !5
  %conv49 = zext i32 %48 to i64
  %49 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call50 = call i64 @opj_stream_write_data(%struct.opj_stream_private* %45, i8* %47, i64 %conv49, %struct.opj_event_mgr* %49) #7
  %50 = load i32, i32* %l_total_com_size, align 4, !tbaa !5
  %conv51 = zext i32 %50 to i64
  %cmp52 = icmp ne i64 %call50, %conv51
  br i1 %cmp52, label %if.then.54, label %if.end.55

if.then.54:                                       ; preds = %if.end.38
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.56

if.end.55:                                        ; preds = %if.end.38
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.56

cleanup.56:                                       ; preds = %if.end.55, %if.then.54, %cleanup
  %51 = bitcast i8** %l_current_ptr to i8*
  call void @llvm.lifetime.end(i64 8, i8* %51) #1
  %52 = bitcast i8** %l_comment to i8*
  call void @llvm.lifetime.end(i64 8, i8* %52) #1
  %53 = bitcast i32* %l_total_com_size to i8*
  call void @llvm.lifetime.end(i64 4, i8* %53) #1
  %54 = bitcast i32* %l_comment_size to i8*
  call void @llvm.lifetime.end(i64 4, i8* %54) #1
  %55 = load i32, i32* %retval
  ret i32 %55
}

; Function Attrs: nounwind uwtable
define internal i32 @opj_j2k_write_mct_data_group(%struct.opj_j2k* %p_j2k, %struct.opj_stream_private* %p_stream, %struct.opj_event_mgr* %p_manager) #0 {
entry:
  %retval = alloca i32, align 4
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %p_stream.addr = alloca %struct.opj_stream_private*, align 8
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  %i = alloca i32, align 4
  %l_mcc_record = alloca %struct.opj_simple_mcc_decorrelation_data*, align 8
  %l_mct_record = alloca %struct.opj_mct_data*, align 8
  %l_tcp = alloca %struct.opj_tcp*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store %struct.opj_stream_private* %p_stream, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %0 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast %struct.opj_simple_mcc_decorrelation_data** %l_mcc_record to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #1
  %2 = bitcast %struct.opj_mct_data** %l_mct_record to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #1
  %3 = bitcast %struct.opj_tcp** %l_tcp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #1
  %4 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cmp = icmp ne %struct.opj_j2k* %4, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 4722, i8* getelementptr inbounds ([104 x i8], [104 x i8]* @__PRETTY_FUNCTION__.opj_j2k_write_mct_data_group, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %5, %cond.true
  %6 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %cmp1 = icmp ne %struct.opj_stream_private* %6, null
  br i1 %cmp1, label %cond.true.2, label %cond.false.3

cond.true.2:                                      ; preds = %cond.end
  br label %cond.end.4

cond.false.3:                                     ; preds = %cond.end
  call void @__assert_fail(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 4723, i8* getelementptr inbounds ([104 x i8], [104 x i8]* @__PRETTY_FUNCTION__.opj_j2k_write_mct_data_group, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.4

cond.end.4:                                       ; preds = %7, %cond.true.2
  %8 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %cmp5 = icmp ne %struct.opj_event_mgr* %8, null
  br i1 %cmp5, label %cond.true.6, label %cond.false.7

cond.true.6:                                      ; preds = %cond.end.4
  br label %cond.end.8

cond.false.7:                                     ; preds = %cond.end.4
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 4724, i8* getelementptr inbounds ([104 x i8], [104 x i8]* @__PRETTY_FUNCTION__.opj_j2k_write_mct_data_group, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.8

cond.end.8:                                       ; preds = %9, %cond.true.6
  %10 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %11 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %12 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call = call i32 @opj_j2k_write_cbd(%struct.opj_j2k* %10, %struct.opj_stream_private* %11, %struct.opj_event_mgr* %12) #7
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %cond.end.8
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %cond.end.8
  %13 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %13, i32 0, i32 8
  %14 = load i32, i32* %m_current_tile_number, align 4, !tbaa !11
  %idxprom = zext i32 %14 to i64
  %15 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %15, i32 0, i32 4
  %tcps = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp, i32 0, i32 17
  %16 = load %struct.opj_tcp*, %struct.opj_tcp** %tcps, align 8, !tbaa !88
  %arrayidx = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %16, i64 %idxprom
  store %struct.opj_tcp* %arrayidx, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %17 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %m_mct_records = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %17, i32 0, i32 20
  %18 = load %struct.opj_mct_data*, %struct.opj_mct_data** %m_mct_records, align 8, !tbaa !74
  store %struct.opj_mct_data* %18, %struct.opj_mct_data** %l_mct_record, align 8, !tbaa !1
  store i32 0, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %19 = load i32, i32* %i, align 4, !tbaa !5
  %20 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %m_nb_mct_records = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %20, i32 0, i32 21
  %21 = load i32, i32* %m_nb_mct_records, align 4, !tbaa !89
  %cmp9 = icmp ult i32 %19, %21
  br i1 %cmp9, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %22 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %23 = load %struct.opj_mct_data*, %struct.opj_mct_data** %l_mct_record, align 8, !tbaa !1
  %24 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %25 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call10 = call i32 @opj_j2k_write_mct_record(%struct.opj_j2k* %22, %struct.opj_mct_data* %23, %struct.opj_stream_private* %24, %struct.opj_event_mgr* %25) #7
  %tobool11 = icmp ne i32 %call10, 0
  br i1 %tobool11, label %if.end.13, label %if.then.12

if.then.12:                                       ; preds = %for.body
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.13:                                        ; preds = %for.body
  %26 = load %struct.opj_mct_data*, %struct.opj_mct_data** %l_mct_record, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds %struct.opj_mct_data, %struct.opj_mct_data* %26, i32 1
  store %struct.opj_mct_data* %incdec.ptr, %struct.opj_mct_data** %l_mct_record, align 8, !tbaa !1
  br label %for.inc

for.inc:                                          ; preds = %if.end.13
  %27 = load i32, i32* %i, align 4, !tbaa !5
  %inc = add i32 %27, 1
  store i32 %inc, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %28 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %m_mcc_records = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %28, i32 0, i32 23
  %29 = load %struct.opj_simple_mcc_decorrelation_data*, %struct.opj_simple_mcc_decorrelation_data** %m_mcc_records, align 8, !tbaa !76
  store %struct.opj_simple_mcc_decorrelation_data* %29, %struct.opj_simple_mcc_decorrelation_data** %l_mcc_record, align 8, !tbaa !1
  store i32 0, i32* %i, align 4, !tbaa !5
  br label %for.cond.14

for.cond.14:                                      ; preds = %for.inc.22, %for.end
  %30 = load i32, i32* %i, align 4, !tbaa !5
  %31 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %m_nb_mcc_records = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %31, i32 0, i32 24
  %32 = load i32, i32* %m_nb_mcc_records, align 4, !tbaa !96
  %cmp15 = icmp ult i32 %30, %32
  br i1 %cmp15, label %for.body.16, label %for.end.24

for.body.16:                                      ; preds = %for.cond.14
  %33 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %34 = load %struct.opj_simple_mcc_decorrelation_data*, %struct.opj_simple_mcc_decorrelation_data** %l_mcc_record, align 8, !tbaa !1
  %35 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %36 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call17 = call i32 @opj_j2k_write_mcc_record(%struct.opj_j2k* %33, %struct.opj_simple_mcc_decorrelation_data* %34, %struct.opj_stream_private* %35, %struct.opj_event_mgr* %36) #7
  %tobool18 = icmp ne i32 %call17, 0
  br i1 %tobool18, label %if.end.20, label %if.then.19

if.then.19:                                       ; preds = %for.body.16
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.20:                                        ; preds = %for.body.16
  %37 = load %struct.opj_simple_mcc_decorrelation_data*, %struct.opj_simple_mcc_decorrelation_data** %l_mcc_record, align 8, !tbaa !1
  %incdec.ptr21 = getelementptr inbounds %struct.opj_simple_mcc_decorrelation_data, %struct.opj_simple_mcc_decorrelation_data* %37, i32 1
  store %struct.opj_simple_mcc_decorrelation_data* %incdec.ptr21, %struct.opj_simple_mcc_decorrelation_data** %l_mcc_record, align 8, !tbaa !1
  br label %for.inc.22

for.inc.22:                                       ; preds = %if.end.20
  %38 = load i32, i32* %i, align 4, !tbaa !5
  %inc23 = add i32 %38, 1
  store i32 %inc23, i32* %i, align 4, !tbaa !5
  br label %for.cond.14

for.end.24:                                       ; preds = %for.cond.14
  %39 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %40 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %41 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call25 = call i32 @opj_j2k_write_mco(%struct.opj_j2k* %39, %struct.opj_stream_private* %40, %struct.opj_event_mgr* %41) #7
  %tobool26 = icmp ne i32 %call25, 0
  br i1 %tobool26, label %if.end.28, label %if.then.27

if.then.27:                                       ; preds = %for.end.24
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.28:                                        ; preds = %for.end.24
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.28, %if.then.27, %if.then.19, %if.then.12, %if.then
  %42 = bitcast %struct.opj_tcp** %l_tcp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %42) #1
  %43 = bitcast %struct.opj_mct_data** %l_mct_record to i8*
  call void @llvm.lifetime.end(i64 8, i8* %43) #1
  %44 = bitcast %struct.opj_simple_mcc_decorrelation_data** %l_mcc_record to i8*
  call void @llvm.lifetime.end(i64 8, i8* %44) #1
  %45 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %45) #1
  %46 = load i32, i32* %retval
  ret i32 %46
}

; Function Attrs: nounwind uwtable
define internal i32 @opj_j2k_get_end_header(%struct.opj_j2k* %p_j2k, %struct.opj_stream_private* %p_stream, %struct.opj_event_mgr* %p_manager) #0 {
entry:
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %p_stream.addr = alloca %struct.opj_stream_private*, align 8
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store %struct.opj_stream_private* %p_stream, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %0 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cmp = icmp ne %struct.opj_j2k* %0, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 4703, i8* getelementptr inbounds ([98 x i8], [98 x i8]* @__PRETTY_FUNCTION__.opj_j2k_get_end_header, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %1, %cond.true
  %2 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %cmp1 = icmp ne %struct.opj_event_mgr* %2, null
  br i1 %cmp1, label %cond.true.2, label %cond.false.3

cond.true.2:                                      ; preds = %cond.end
  br label %cond.end.4

cond.false.3:                                     ; preds = %cond.end
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 4704, i8* getelementptr inbounds ([98 x i8], [98 x i8]* @__PRETTY_FUNCTION__.opj_j2k_get_end_header, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.4

cond.end.4:                                       ; preds = %3, %cond.true.2
  %4 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %cmp5 = icmp ne %struct.opj_stream_private* %4, null
  br i1 %cmp5, label %cond.true.6, label %cond.false.7

cond.true.6:                                      ; preds = %cond.end.4
  br label %cond.end.8

cond.false.7:                                     ; preds = %cond.end.4
  call void @__assert_fail(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 4705, i8* getelementptr inbounds ([98 x i8], [98 x i8]* @__PRETTY_FUNCTION__.opj_j2k_get_end_header, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.8

cond.end.8:                                       ; preds = %5, %cond.true.6
  %6 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %call = call i64 @opj_stream_tell(%struct.opj_stream_private* %6) #7
  %7 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cstr_index = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %7, i32 0, i32 7
  %8 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %cstr_index, align 8, !tbaa !29
  %main_head_end = getelementptr inbounds %struct.opj_codestream_index, %struct.opj_codestream_index* %8, i32 0, i32 1
  store i64 %call, i64* %main_head_end, align 8, !tbaa !223
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @opj_j2k_create_tcd(%struct.opj_j2k* %p_j2k, %struct.opj_stream_private* %p_stream, %struct.opj_event_mgr* %p_manager) #0 {
entry:
  %retval = alloca i32, align 4
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %p_stream.addr = alloca %struct.opj_stream_private*, align 8
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store %struct.opj_stream_private* %p_stream, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %0 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cmp = icmp ne %struct.opj_j2k* %0, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 9808, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @__PRETTY_FUNCTION__.opj_j2k_create_tcd, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %1, %cond.true
  %2 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %cmp1 = icmp ne %struct.opj_event_mgr* %2, null
  br i1 %cmp1, label %cond.true.2, label %cond.false.3

cond.true.2:                                      ; preds = %cond.end
  br label %cond.end.4

cond.false.3:                                     ; preds = %cond.end
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 9809, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @__PRETTY_FUNCTION__.opj_j2k_create_tcd, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.4

cond.end.4:                                       ; preds = %3, %cond.true.2
  %4 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %cmp5 = icmp ne %struct.opj_stream_private* %4, null
  br i1 %cmp5, label %cond.true.6, label %cond.false.7

cond.true.6:                                      ; preds = %cond.end.4
  br label %cond.end.8

cond.false.7:                                     ; preds = %cond.end.4
  call void @__assert_fail(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 9810, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @__PRETTY_FUNCTION__.opj_j2k_create_tcd, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.8

cond.end.8:                                       ; preds = %5, %cond.true.6
  %call = call %struct.opj_tcd* @opj_tcd_create(i32 0) #7
  %6 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_tcd = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %6, i32 0, i32 9
  store %struct.opj_tcd* %call, %struct.opj_tcd** %m_tcd, align 8, !tbaa !120
  %7 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_tcd9 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %7, i32 0, i32 9
  %8 = load %struct.opj_tcd*, %struct.opj_tcd** %m_tcd9, align 8, !tbaa !120
  %tobool = icmp ne %struct.opj_tcd* %8, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %cond.end.8
  %9 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call10 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %9, i32 1, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.206, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %cond.end.8
  %10 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_tcd11 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %10, i32 0, i32 9
  %11 = load %struct.opj_tcd*, %struct.opj_tcd** %m_tcd11, align 8, !tbaa !120
  %12 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_private_image = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %12, i32 0, i32 2
  %13 = load %struct.opj_image*, %struct.opj_image** %m_private_image, align 8, !tbaa !38
  %14 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %14, i32 0, i32 4
  %call12 = call i32 @opj_tcd_init(%struct.opj_tcd* %11, %struct.opj_image* %13, %struct.opj_cp* %m_cp) #7
  %tobool13 = icmp ne i32 %call12, 0
  br i1 %tobool13, label %if.end.17, label %if.then.14

if.then.14:                                       ; preds = %if.end
  %15 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_tcd15 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %15, i32 0, i32 9
  %16 = load %struct.opj_tcd*, %struct.opj_tcd** %m_tcd15, align 8, !tbaa !120
  call void @opj_tcd_destroy(%struct.opj_tcd* %16) #7
  %17 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_tcd16 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %17, i32 0, i32 9
  store %struct.opj_tcd* null, %struct.opj_tcd** %m_tcd16, align 8, !tbaa !120
  store i32 0, i32* %retval
  br label %return

if.end.17:                                        ; preds = %if.end
  store i32 1, i32* %retval
  br label %return

return:                                           ; preds = %if.end.17, %if.then.14, %if.then
  %18 = load i32, i32* %retval
  ret i32 %18
}

; Function Attrs: nounwind uwtable
define internal i32 @opj_j2k_update_rates(%struct.opj_j2k* %p_j2k, %struct.opj_stream_private* %p_stream, %struct.opj_event_mgr* %p_manager) #0 {
entry:
  %retval = alloca i32, align 4
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %p_stream.addr = alloca %struct.opj_stream_private*, align 8
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  %l_cp = alloca %struct.opj_cp*, align 8
  %l_image = alloca %struct.opj_image*, align 8
  %l_tcp = alloca %struct.opj_tcp*, align 8
  %l_img_comp = alloca %struct.opj_image_comp*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %l_x0 = alloca i32, align 4
  %l_y0 = alloca i32, align 4
  %l_x1 = alloca i32, align 4
  %l_y1 = alloca i32, align 4
  %l_rates = alloca float*, align 8
  %l_sot_remove = alloca float, align 4
  %l_bits_empty = alloca i32, align 4
  %l_size_pixel = alloca i32, align 4
  %l_tile_size = alloca i32, align 4
  %l_last_res = alloca i32, align 4
  %l_tp_stride_func = alloca float (%struct.opj_tcp*)*, align 8
  %l_offset = alloca float, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store %struct.opj_stream_private* %p_stream, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %0 = bitcast %struct.opj_cp** %l_cp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  store %struct.opj_cp* null, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %1 = bitcast %struct.opj_image** %l_image to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #1
  store %struct.opj_image* null, %struct.opj_image** %l_image, align 8, !tbaa !1
  %2 = bitcast %struct.opj_tcp** %l_tcp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #1
  store %struct.opj_tcp* null, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %3 = bitcast %struct.opj_image_comp** %l_img_comp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #1
  store %struct.opj_image_comp* null, %struct.opj_image_comp** %l_img_comp, align 8, !tbaa !1
  %4 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #1
  %5 = bitcast i32* %j to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #1
  %6 = bitcast i32* %k to i8*
  call void @llvm.lifetime.start(i64 4, i8* %6) #1
  %7 = bitcast i32* %l_x0 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %7) #1
  %8 = bitcast i32* %l_y0 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %8) #1
  %9 = bitcast i32* %l_x1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %9) #1
  %10 = bitcast i32* %l_y1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %10) #1
  %11 = bitcast float** %l_rates to i8*
  call void @llvm.lifetime.start(i64 8, i8* %11) #1
  store float* null, float** %l_rates, align 8, !tbaa !1
  %12 = bitcast float* %l_sot_remove to i8*
  call void @llvm.lifetime.start(i64 4, i8* %12) #1
  %13 = bitcast i32* %l_bits_empty to i8*
  call void @llvm.lifetime.start(i64 4, i8* %13) #1
  %14 = bitcast i32* %l_size_pixel to i8*
  call void @llvm.lifetime.start(i64 4, i8* %14) #1
  %15 = bitcast i32* %l_tile_size to i8*
  call void @llvm.lifetime.start(i64 4, i8* %15) #1
  store i32 0, i32* %l_tile_size, align 4, !tbaa !5
  %16 = bitcast i32* %l_last_res to i8*
  call void @llvm.lifetime.start(i64 4, i8* %16) #1
  %17 = bitcast float (%struct.opj_tcp*)** %l_tp_stride_func to i8*
  call void @llvm.lifetime.start(i64 8, i8* %17) #1
  store float (%struct.opj_tcp*)* null, float (%struct.opj_tcp*)** %l_tp_stride_func, align 8, !tbaa !1
  %18 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cmp = icmp ne %struct.opj_j2k* %18, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 4506, i8* getelementptr inbounds ([86 x i8], [86 x i8]* @__PRETTY_FUNCTION__.opj_j2k_update_rates, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %19, %cond.true
  %20 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %cmp1 = icmp ne %struct.opj_event_mgr* %20, null
  br i1 %cmp1, label %cond.true.2, label %cond.false.3

cond.true.2:                                      ; preds = %cond.end
  br label %cond.end.4

cond.false.3:                                     ; preds = %cond.end
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 4507, i8* getelementptr inbounds ([86 x i8], [86 x i8]* @__PRETTY_FUNCTION__.opj_j2k_update_rates, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.4

cond.end.4:                                       ; preds = %21, %cond.true.2
  %22 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %cmp5 = icmp ne %struct.opj_stream_private* %22, null
  br i1 %cmp5, label %cond.true.6, label %cond.false.7

cond.true.6:                                      ; preds = %cond.end.4
  br label %cond.end.8

cond.false.7:                                     ; preds = %cond.end.4
  call void @__assert_fail(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 4508, i8* getelementptr inbounds ([86 x i8], [86 x i8]* @__PRETTY_FUNCTION__.opj_j2k_update_rates, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.8

cond.end.8:                                       ; preds = %23, %cond.true.6
  %24 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %24, i32 0, i32 4
  store %struct.opj_cp* %m_cp, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %25 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_private_image = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %25, i32 0, i32 2
  %26 = load %struct.opj_image*, %struct.opj_image** %m_private_image, align 8, !tbaa !38
  store %struct.opj_image* %26, %struct.opj_image** %l_image, align 8, !tbaa !1
  %27 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %tcps = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %27, i32 0, i32 17
  %28 = load %struct.opj_tcp*, %struct.opj_tcp** %tcps, align 8, !tbaa !16
  store %struct.opj_tcp* %28, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %29 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %comps = getelementptr inbounds %struct.opj_image, %struct.opj_image* %29, i32 0, i32 6
  %30 = load %struct.opj_image_comp*, %struct.opj_image_comp** %comps, align 8, !tbaa !62
  %dx = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %30, i32 0, i32 0
  %31 = load i32, i32* %dx, align 4, !tbaa !67
  %mul = mul i32 8, %31
  %32 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %comps9 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %32, i32 0, i32 6
  %33 = load %struct.opj_image_comp*, %struct.opj_image_comp** %comps9, align 8, !tbaa !62
  %dy = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %33, i32 0, i32 1
  %34 = load i32, i32* %dy, align 4, !tbaa !68
  %mul10 = mul i32 %mul, %34
  store i32 %mul10, i32* %l_bits_empty, align 4, !tbaa !5
  %35 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %numcomps = getelementptr inbounds %struct.opj_image, %struct.opj_image* %35, i32 0, i32 4
  %36 = load i32, i32* %numcomps, align 4, !tbaa !45
  %37 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %comps11 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %37, i32 0, i32 6
  %38 = load %struct.opj_image_comp*, %struct.opj_image_comp** %comps11, align 8, !tbaa !62
  %prec = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %38, i32 0, i32 6
  %39 = load i32, i32* %prec, align 4, !tbaa !63
  %mul12 = mul i32 %36, %39
  store i32 %mul12, i32* %l_size_pixel, align 4, !tbaa !5
  %40 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %call = call i64 @opj_stream_tell(%struct.opj_stream_private* %40) #7
  %conv = sitofp i64 %call to float
  %41 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %th = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %41, i32 0, i32 7
  %42 = load i32, i32* %th, align 4, !tbaa !15
  %43 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %tw = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %43, i32 0, i32 6
  %44 = load i32, i32* %tw, align 4, !tbaa !14
  %mul13 = mul i32 %42, %44
  %conv14 = uitofp i32 %mul13 to float
  %div = fdiv float %conv, %conv14
  store float %div, float* %l_sot_remove, align 4, !tbaa !7
  %45 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %m_specific_param = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %45, i32 0, i32 18
  %m_enc = bitcast %union.anon.0* %m_specific_param to %struct.opj_encoding_param*
  %m_tp_on = getelementptr inbounds %struct.opj_encoding_param, %struct.opj_encoding_param* %m_enc, i32 0, i32 5
  %bf.load = load i8, i8* %m_tp_on, align 1
  %bf.lshr = lshr i8 %bf.load, 3
  %bf.clear = and i8 %bf.lshr, 1
  %bf.cast = zext i8 %bf.clear to i32
  %tobool = icmp ne i32 %bf.cast, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %cond.end.8
  store float (%struct.opj_tcp*)* @opj_j2k_get_tp_stride, float (%struct.opj_tcp*)** %l_tp_stride_func, align 8, !tbaa !1
  br label %if.end

if.else:                                          ; preds = %cond.end.8
  store float (%struct.opj_tcp*)* @opj_j2k_get_default_stride, float (%struct.opj_tcp*)** %l_tp_stride_func, align 8, !tbaa !1
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  store i32 0, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc.76, %if.end
  %46 = load i32, i32* %i, align 4, !tbaa !5
  %47 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %th15 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %47, i32 0, i32 7
  %48 = load i32, i32* %th15, align 4, !tbaa !15
  %cmp16 = icmp ult i32 %46, %48
  br i1 %cmp16, label %for.body, label %for.end.78

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !tbaa !5
  br label %for.cond.18

for.cond.18:                                      ; preds = %for.inc.73, %for.body
  %49 = load i32, i32* %j, align 4, !tbaa !5
  %50 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %tw19 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %50, i32 0, i32 6
  %51 = load i32, i32* %tw19, align 4, !tbaa !14
  %cmp20 = icmp ult i32 %49, %51
  br i1 %cmp20, label %for.body.22, label %for.end.75

for.body.22:                                      ; preds = %for.cond.18
  %52 = bitcast float* %l_offset to i8*
  call void @llvm.lifetime.start(i64 4, i8* %52) #1
  %53 = load float (%struct.opj_tcp*)*, float (%struct.opj_tcp*)** %l_tp_stride_func, align 8, !tbaa !1
  %54 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %call23 = call float %53(%struct.opj_tcp* %54) #7
  %55 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %numlayers = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %55, i32 0, i32 2
  %56 = load i32, i32* %numlayers, align 4, !tbaa !44
  %conv24 = uitofp i32 %56 to float
  %div25 = fdiv float %call23, %conv24
  store float %div25, float* %l_offset, align 4, !tbaa !7
  %57 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %tx0 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %57, i32 0, i32 1
  %58 = load i32, i32* %tx0, align 4, !tbaa !72
  %59 = load i32, i32* %j, align 4, !tbaa !5
  %60 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %tdx = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %60, i32 0, i32 3
  %61 = load i32, i32* %tdx, align 4, !tbaa !60
  %mul26 = mul i32 %59, %61
  %add = add i32 %58, %mul26
  %62 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %x0 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %62, i32 0, i32 0
  %63 = load i32, i32* %x0, align 4, !tbaa !56
  %call27 = call i32 @opj_int_max(i32 %add, i32 %63) #7
  store i32 %call27, i32* %l_x0, align 4, !tbaa !5
  %64 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %ty0 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %64, i32 0, i32 2
  %65 = load i32, i32* %ty0, align 4, !tbaa !73
  %66 = load i32, i32* %i, align 4, !tbaa !5
  %67 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %tdy = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %67, i32 0, i32 4
  %68 = load i32, i32* %tdy, align 4, !tbaa !61
  %mul28 = mul i32 %66, %68
  %add29 = add i32 %65, %mul28
  %69 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %y0 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %69, i32 0, i32 1
  %70 = load i32, i32* %y0, align 4, !tbaa !58
  %call30 = call i32 @opj_int_max(i32 %add29, i32 %70) #7
  store i32 %call30, i32* %l_y0, align 4, !tbaa !5
  %71 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %tx031 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %71, i32 0, i32 1
  %72 = load i32, i32* %tx031, align 4, !tbaa !72
  %73 = load i32, i32* %j, align 4, !tbaa !5
  %add32 = add i32 %73, 1
  %74 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %tdx33 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %74, i32 0, i32 3
  %75 = load i32, i32* %tdx33, align 4, !tbaa !60
  %mul34 = mul i32 %add32, %75
  %add35 = add i32 %72, %mul34
  %76 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %x1 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %76, i32 0, i32 2
  %77 = load i32, i32* %x1, align 4, !tbaa !57
  %call36 = call i32 @opj_int_min(i32 %add35, i32 %77) #7
  store i32 %call36, i32* %l_x1, align 4, !tbaa !5
  %78 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %ty037 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %78, i32 0, i32 2
  %79 = load i32, i32* %ty037, align 4, !tbaa !73
  %80 = load i32, i32* %i, align 4, !tbaa !5
  %add38 = add i32 %80, 1
  %81 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %tdy39 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %81, i32 0, i32 4
  %82 = load i32, i32* %tdy39, align 4, !tbaa !61
  %mul40 = mul i32 %add38, %82
  %add41 = add i32 %79, %mul40
  %83 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %y1 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %83, i32 0, i32 3
  %84 = load i32, i32* %y1, align 4, !tbaa !59
  %call42 = call i32 @opj_int_min(i32 %add41, i32 %84) #7
  store i32 %call42, i32* %l_y1, align 4, !tbaa !5
  %85 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %rates = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %85, i32 0, i32 5
  %arraydecay = getelementptr inbounds [100 x float], [100 x float]* %rates, i32 0, i32 0
  store float* %arraydecay, float** %l_rates, align 8, !tbaa !1
  %86 = load float*, float** %l_rates, align 8, !tbaa !1
  %87 = load float, float* %86, align 4, !tbaa !7
  %tobool43 = fcmp une float %87, 0.000000e+00
  br i1 %tobool43, label %if.then.44, label %if.end.53

if.then.44:                                       ; preds = %for.body.22
  %88 = load i32, i32* %l_size_pixel, align 4, !tbaa !5
  %89 = load i32, i32* %l_x1, align 4, !tbaa !5
  %90 = load i32, i32* %l_x0, align 4, !tbaa !5
  %sub = sub nsw i32 %89, %90
  %mul45 = mul i32 %88, %sub
  %91 = load i32, i32* %l_y1, align 4, !tbaa !5
  %92 = load i32, i32* %l_y0, align 4, !tbaa !5
  %sub46 = sub nsw i32 %91, %92
  %mul47 = mul i32 %mul45, %sub46
  %conv48 = uitofp i32 %mul47 to float
  %93 = load float*, float** %l_rates, align 8, !tbaa !1
  %94 = load float, float* %93, align 4, !tbaa !7
  %95 = load i32, i32* %l_bits_empty, align 4, !tbaa !5
  %conv49 = uitofp i32 %95 to float
  %mul50 = fmul float %94, %conv49
  %div51 = fdiv float %conv48, %mul50
  %96 = load float, float* %l_offset, align 4, !tbaa !7
  %sub52 = fsub float %div51, %96
  %97 = load float*, float** %l_rates, align 8, !tbaa !1
  store float %sub52, float* %97, align 4, !tbaa !7
  br label %if.end.53

if.end.53:                                        ; preds = %if.then.44, %for.body.22
  %98 = load float*, float** %l_rates, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds float, float* %98, i32 1
  store float* %incdec.ptr, float** %l_rates, align 8, !tbaa !1
  store i32 1, i32* %k, align 4, !tbaa !5
  br label %for.cond.54

for.cond.54:                                      ; preds = %for.inc, %if.end.53
  %99 = load i32, i32* %k, align 4, !tbaa !5
  %100 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %numlayers55 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %100, i32 0, i32 2
  %101 = load i32, i32* %numlayers55, align 4, !tbaa !44
  %cmp56 = icmp ult i32 %99, %101
  br i1 %cmp56, label %for.body.58, label %for.end

for.body.58:                                      ; preds = %for.cond.54
  %102 = load float*, float** %l_rates, align 8, !tbaa !1
  %103 = load float, float* %102, align 4, !tbaa !7
  %tobool59 = fcmp une float %103, 0.000000e+00
  br i1 %tobool59, label %if.then.60, label %if.end.70

if.then.60:                                       ; preds = %for.body.58
  %104 = load i32, i32* %l_size_pixel, align 4, !tbaa !5
  %105 = load i32, i32* %l_x1, align 4, !tbaa !5
  %106 = load i32, i32* %l_x0, align 4, !tbaa !5
  %sub61 = sub nsw i32 %105, %106
  %mul62 = mul i32 %104, %sub61
  %107 = load i32, i32* %l_y1, align 4, !tbaa !5
  %108 = load i32, i32* %l_y0, align 4, !tbaa !5
  %sub63 = sub nsw i32 %107, %108
  %mul64 = mul i32 %mul62, %sub63
  %conv65 = uitofp i32 %mul64 to float
  %109 = load float*, float** %l_rates, align 8, !tbaa !1
  %110 = load float, float* %109, align 4, !tbaa !7
  %111 = load i32, i32* %l_bits_empty, align 4, !tbaa !5
  %conv66 = uitofp i32 %111 to float
  %mul67 = fmul float %110, %conv66
  %div68 = fdiv float %conv65, %mul67
  %112 = load float, float* %l_offset, align 4, !tbaa !7
  %sub69 = fsub float %div68, %112
  %113 = load float*, float** %l_rates, align 8, !tbaa !1
  store float %sub69, float* %113, align 4, !tbaa !7
  br label %if.end.70

if.end.70:                                        ; preds = %if.then.60, %for.body.58
  %114 = load float*, float** %l_rates, align 8, !tbaa !1
  %incdec.ptr71 = getelementptr inbounds float, float* %114, i32 1
  store float* %incdec.ptr71, float** %l_rates, align 8, !tbaa !1
  br label %for.inc

for.inc:                                          ; preds = %if.end.70
  %115 = load i32, i32* %k, align 4, !tbaa !5
  %inc = add i32 %115, 1
  store i32 %inc, i32* %k, align 4, !tbaa !5
  br label %for.cond.54

for.end:                                          ; preds = %for.cond.54
  %116 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %incdec.ptr72 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %116, i32 1
  store %struct.opj_tcp* %incdec.ptr72, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %117 = bitcast float* %l_offset to i8*
  call void @llvm.lifetime.end(i64 4, i8* %117) #1
  br label %for.inc.73

for.inc.73:                                       ; preds = %for.end
  %118 = load i32, i32* %j, align 4, !tbaa !5
  %inc74 = add i32 %118, 1
  store i32 %inc74, i32* %j, align 4, !tbaa !5
  br label %for.cond.18

for.end.75:                                       ; preds = %for.cond.18
  br label %for.inc.76

for.inc.76:                                       ; preds = %for.end.75
  %119 = load i32, i32* %i, align 4, !tbaa !5
  %inc77 = add i32 %119, 1
  store i32 %inc77, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.end.78:                                       ; preds = %for.cond
  %120 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %tcps79 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %120, i32 0, i32 17
  %121 = load %struct.opj_tcp*, %struct.opj_tcp** %tcps79, align 8, !tbaa !16
  store %struct.opj_tcp* %121, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  store i32 0, i32* %i, align 4, !tbaa !5
  br label %for.cond.80

for.cond.80:                                      ; preds = %for.inc.139, %for.end.78
  %122 = load i32, i32* %i, align 4, !tbaa !5
  %123 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %th81 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %123, i32 0, i32 7
  %124 = load i32, i32* %th81, align 4, !tbaa !15
  %cmp82 = icmp ult i32 %122, %124
  br i1 %cmp82, label %for.body.84, label %for.end.141

for.body.84:                                      ; preds = %for.cond.80
  store i32 0, i32* %j, align 4, !tbaa !5
  br label %for.cond.85

for.cond.85:                                      ; preds = %for.inc.136, %for.body.84
  %125 = load i32, i32* %j, align 4, !tbaa !5
  %126 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %tw86 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %126, i32 0, i32 6
  %127 = load i32, i32* %tw86, align 4, !tbaa !14
  %cmp87 = icmp ult i32 %125, %127
  br i1 %cmp87, label %for.body.89, label %for.end.138

for.body.89:                                      ; preds = %for.cond.85
  %128 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %rates90 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %128, i32 0, i32 5
  %arraydecay91 = getelementptr inbounds [100 x float], [100 x float]* %rates90, i32 0, i32 0
  store float* %arraydecay91, float** %l_rates, align 8, !tbaa !1
  %129 = load float*, float** %l_rates, align 8, !tbaa !1
  %130 = load float, float* %129, align 4, !tbaa !7
  %tobool92 = fcmp une float %130, 0.000000e+00
  br i1 %tobool92, label %if.then.93, label %if.end.99

if.then.93:                                       ; preds = %for.body.89
  %131 = load float, float* %l_sot_remove, align 4, !tbaa !7
  %132 = load float*, float** %l_rates, align 8, !tbaa !1
  %133 = load float, float* %132, align 4, !tbaa !7
  %sub94 = fsub float %133, %131
  store float %sub94, float* %132, align 4, !tbaa !7
  %134 = load float*, float** %l_rates, align 8, !tbaa !1
  %135 = load float, float* %134, align 4, !tbaa !7
  %cmp95 = fcmp olt float %135, 3.000000e+01
  br i1 %cmp95, label %if.then.97, label %if.end.98

if.then.97:                                       ; preds = %if.then.93
  %136 = load float*, float** %l_rates, align 8, !tbaa !1
  store float 3.000000e+01, float* %136, align 4, !tbaa !7
  br label %if.end.98

if.end.98:                                        ; preds = %if.then.97, %if.then.93
  br label %if.end.99

if.end.99:                                        ; preds = %if.end.98, %for.body.89
  %137 = load float*, float** %l_rates, align 8, !tbaa !1
  %incdec.ptr100 = getelementptr inbounds float, float* %137, i32 1
  store float* %incdec.ptr100, float** %l_rates, align 8, !tbaa !1
  %138 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %numlayers101 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %138, i32 0, i32 2
  %139 = load i32, i32* %numlayers101, align 4, !tbaa !44
  %sub102 = sub i32 %139, 1
  store i32 %sub102, i32* %l_last_res, align 4, !tbaa !5
  store i32 1, i32* %k, align 4, !tbaa !5
  br label %for.cond.103

for.cond.103:                                     ; preds = %for.inc.119, %if.end.99
  %140 = load i32, i32* %k, align 4, !tbaa !5
  %141 = load i32, i32* %l_last_res, align 4, !tbaa !5
  %cmp104 = icmp ult i32 %140, %141
  br i1 %cmp104, label %for.body.106, label %for.end.121

for.body.106:                                     ; preds = %for.cond.103
  %142 = load float*, float** %l_rates, align 8, !tbaa !1
  %143 = load float, float* %142, align 4, !tbaa !7
  %tobool107 = fcmp une float %143, 0.000000e+00
  br i1 %tobool107, label %if.then.108, label %if.end.117

if.then.108:                                      ; preds = %for.body.106
  %144 = load float, float* %l_sot_remove, align 4, !tbaa !7
  %145 = load float*, float** %l_rates, align 8, !tbaa !1
  %146 = load float, float* %145, align 4, !tbaa !7
  %sub109 = fsub float %146, %144
  store float %sub109, float* %145, align 4, !tbaa !7
  %147 = load float*, float** %l_rates, align 8, !tbaa !1
  %148 = load float, float* %147, align 4, !tbaa !7
  %149 = load float*, float** %l_rates, align 8, !tbaa !1
  %add.ptr = getelementptr inbounds float, float* %149, i64 -1
  %150 = load float, float* %add.ptr, align 4, !tbaa !7
  %add110 = fadd float %150, 1.000000e+01
  %cmp111 = fcmp olt float %148, %add110
  br i1 %cmp111, label %if.then.113, label %if.end.116

if.then.113:                                      ; preds = %if.then.108
  %151 = load float*, float** %l_rates, align 8, !tbaa !1
  %add.ptr114 = getelementptr inbounds float, float* %151, i64 -1
  %152 = load float, float* %add.ptr114, align 4, !tbaa !7
  %add115 = fadd float %152, 2.000000e+01
  %153 = load float*, float** %l_rates, align 8, !tbaa !1
  store float %add115, float* %153, align 4, !tbaa !7
  br label %if.end.116

if.end.116:                                       ; preds = %if.then.113, %if.then.108
  br label %if.end.117

if.end.117:                                       ; preds = %if.end.116, %for.body.106
  %154 = load float*, float** %l_rates, align 8, !tbaa !1
  %incdec.ptr118 = getelementptr inbounds float, float* %154, i32 1
  store float* %incdec.ptr118, float** %l_rates, align 8, !tbaa !1
  br label %for.inc.119

for.inc.119:                                      ; preds = %if.end.117
  %155 = load i32, i32* %k, align 4, !tbaa !5
  %inc120 = add i32 %155, 1
  store i32 %inc120, i32* %k, align 4, !tbaa !5
  br label %for.cond.103

for.end.121:                                      ; preds = %for.cond.103
  %156 = load float*, float** %l_rates, align 8, !tbaa !1
  %157 = load float, float* %156, align 4, !tbaa !7
  %tobool122 = fcmp une float %157, 0.000000e+00
  br i1 %tobool122, label %if.then.123, label %if.end.134

if.then.123:                                      ; preds = %for.end.121
  %158 = load float, float* %l_sot_remove, align 4, !tbaa !7
  %add124 = fadd float %158, 2.000000e+00
  %159 = load float*, float** %l_rates, align 8, !tbaa !1
  %160 = load float, float* %159, align 4, !tbaa !7
  %sub125 = fsub float %160, %add124
  store float %sub125, float* %159, align 4, !tbaa !7
  %161 = load float*, float** %l_rates, align 8, !tbaa !1
  %162 = load float, float* %161, align 4, !tbaa !7
  %163 = load float*, float** %l_rates, align 8, !tbaa !1
  %add.ptr126 = getelementptr inbounds float, float* %163, i64 -1
  %164 = load float, float* %add.ptr126, align 4, !tbaa !7
  %add127 = fadd float %164, 1.000000e+01
  %cmp128 = fcmp olt float %162, %add127
  br i1 %cmp128, label %if.then.130, label %if.end.133

if.then.130:                                      ; preds = %if.then.123
  %165 = load float*, float** %l_rates, align 8, !tbaa !1
  %add.ptr131 = getelementptr inbounds float, float* %165, i64 -1
  %166 = load float, float* %add.ptr131, align 4, !tbaa !7
  %add132 = fadd float %166, 2.000000e+01
  %167 = load float*, float** %l_rates, align 8, !tbaa !1
  store float %add132, float* %167, align 4, !tbaa !7
  br label %if.end.133

if.end.133:                                       ; preds = %if.then.130, %if.then.123
  br label %if.end.134

if.end.134:                                       ; preds = %if.end.133, %for.end.121
  %168 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %incdec.ptr135 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %168, i32 1
  store %struct.opj_tcp* %incdec.ptr135, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  br label %for.inc.136

for.inc.136:                                      ; preds = %if.end.134
  %169 = load i32, i32* %j, align 4, !tbaa !5
  %inc137 = add i32 %169, 1
  store i32 %inc137, i32* %j, align 4, !tbaa !5
  br label %for.cond.85

for.end.138:                                      ; preds = %for.cond.85
  br label %for.inc.139

for.inc.139:                                      ; preds = %for.end.138
  %170 = load i32, i32* %i, align 4, !tbaa !5
  %inc140 = add i32 %170, 1
  store i32 %inc140, i32* %i, align 4, !tbaa !5
  br label %for.cond.80

for.end.141:                                      ; preds = %for.cond.80
  %171 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %comps142 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %171, i32 0, i32 6
  %172 = load %struct.opj_image_comp*, %struct.opj_image_comp** %comps142, align 8, !tbaa !62
  store %struct.opj_image_comp* %172, %struct.opj_image_comp** %l_img_comp, align 8, !tbaa !1
  store i32 0, i32* %l_tile_size, align 4, !tbaa !5
  store i32 0, i32* %i, align 4, !tbaa !5
  br label %for.cond.143

for.cond.143:                                     ; preds = %for.inc.159, %for.end.141
  %173 = load i32, i32* %i, align 4, !tbaa !5
  %174 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %numcomps144 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %174, i32 0, i32 4
  %175 = load i32, i32* %numcomps144, align 4, !tbaa !45
  %cmp145 = icmp ult i32 %173, %175
  br i1 %cmp145, label %for.body.147, label %for.end.161

for.body.147:                                     ; preds = %for.cond.143
  %176 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %tdx148 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %176, i32 0, i32 3
  %177 = load i32, i32* %tdx148, align 4, !tbaa !60
  %178 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp, align 8, !tbaa !1
  %dx149 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %178, i32 0, i32 0
  %179 = load i32, i32* %dx149, align 4, !tbaa !67
  %call150 = call i32 @opj_uint_ceildiv(i32 %177, i32 %179) #7
  %180 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %tdy151 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %180, i32 0, i32 4
  %181 = load i32, i32* %tdy151, align 4, !tbaa !61
  %182 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp, align 8, !tbaa !1
  %dy152 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %182, i32 0, i32 1
  %183 = load i32, i32* %dy152, align 4, !tbaa !68
  %call153 = call i32 @opj_uint_ceildiv(i32 %181, i32 %183) #7
  %mul154 = mul i32 %call150, %call153
  %184 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp, align 8, !tbaa !1
  %prec155 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %184, i32 0, i32 6
  %185 = load i32, i32* %prec155, align 4, !tbaa !63
  %mul156 = mul i32 %mul154, %185
  %186 = load i32, i32* %l_tile_size, align 4, !tbaa !5
  %add157 = add i32 %186, %mul156
  store i32 %add157, i32* %l_tile_size, align 4, !tbaa !5
  %187 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_img_comp, align 8, !tbaa !1
  %incdec.ptr158 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %187, i32 1
  store %struct.opj_image_comp* %incdec.ptr158, %struct.opj_image_comp** %l_img_comp, align 8, !tbaa !1
  br label %for.inc.159

for.inc.159:                                      ; preds = %for.body.147
  %188 = load i32, i32* %i, align 4, !tbaa !5
  %inc160 = add i32 %188, 1
  store i32 %inc160, i32* %i, align 4, !tbaa !5
  br label %for.cond.143

for.end.161:                                      ; preds = %for.cond.143
  %189 = load i32, i32* %l_tile_size, align 4, !tbaa !5
  %conv162 = uitofp i32 %189 to double
  %mul163 = fmul double %conv162, 1.625000e-01
  %conv164 = fptoui double %mul163 to i32
  store i32 %conv164, i32* %l_tile_size, align 4, !tbaa !5
  %190 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %call165 = call i32 @opj_j2k_get_specific_header_sizes(%struct.opj_j2k* %190) #7
  %191 = load i32, i32* %l_tile_size, align 4, !tbaa !5
  %add166 = add i32 %191, %call165
  store i32 %add166, i32* %l_tile_size, align 4, !tbaa !5
  %192 = load i32, i32* %l_tile_size, align 4, !tbaa !5
  %193 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param167 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %193, i32 0, i32 1
  %m_encoder = bitcast %union.anon* %m_specific_param167 to %struct.opj_j2k_enc*
  %m_encoded_tile_size = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder, i32 0, i32 7
  store i32 %192, i32* %m_encoded_tile_size, align 4, !tbaa !263
  %194 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param168 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %194, i32 0, i32 1
  %m_encoder169 = bitcast %union.anon* %m_specific_param168 to %struct.opj_j2k_enc*
  %m_encoded_tile_size170 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder169, i32 0, i32 7
  %195 = load i32, i32* %m_encoded_tile_size170, align 4, !tbaa !263
  %conv171 = zext i32 %195 to i64
  %cmp172 = icmp uge i64 %conv171, -256
  br i1 %cmp172, label %cond.true.174, label %cond.false.175

cond.true.174:                                    ; preds = %for.end.161
  br label %cond.end.181

cond.false.175:                                   ; preds = %for.end.161
  %196 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param176 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %196, i32 0, i32 1
  %m_encoder177 = bitcast %union.anon* %m_specific_param176 to %struct.opj_j2k_enc*
  %m_encoded_tile_size178 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder177, i32 0, i32 7
  %197 = load i32, i32* %m_encoded_tile_size178, align 4, !tbaa !263
  %conv179 = zext i32 %197 to i64
  %call180 = call noalias i8* @malloc(i64 %conv179) #9
  br label %cond.end.181

cond.end.181:                                     ; preds = %cond.false.175, %cond.true.174
  %cond = phi i8* [ null, %cond.true.174 ], [ %call180, %cond.false.175 ]
  %198 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param182 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %198, i32 0, i32 1
  %m_encoder183 = bitcast %union.anon* %m_specific_param182 to %struct.opj_j2k_enc*
  %m_encoded_tile_data = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder183, i32 0, i32 6
  store i8* %cond, i8** %m_encoded_tile_data, align 8, !tbaa !117
  %199 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param184 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %199, i32 0, i32 1
  %m_encoder185 = bitcast %union.anon* %m_specific_param184 to %struct.opj_j2k_enc*
  %m_encoded_tile_data186 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder185, i32 0, i32 6
  %200 = load i8*, i8** %m_encoded_tile_data186, align 8, !tbaa !117
  %cmp187 = icmp eq i8* %200, null
  br i1 %cmp187, label %if.then.189, label %if.end.190

if.then.189:                                      ; preds = %cond.end.181
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.190:                                       ; preds = %cond.end.181
  %201 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %m_specific_param191 = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %201, i32 0, i32 18
  %m_enc192 = bitcast %union.anon.0* %m_specific_param191 to %struct.opj_encoding_param*
  %m_cinema = getelementptr inbounds %struct.opj_encoding_param, %struct.opj_encoding_param* %m_enc192, i32 0, i32 0
  %202 = load i32, i32* %m_cinema, align 4, !tbaa !124
  %tobool193 = icmp ne i32 %202, 0
  br i1 %tobool193, label %if.then.194, label %if.end.224

if.then.194:                                      ; preds = %if.end.190
  %203 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param195 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %203, i32 0, i32 1
  %m_encoder196 = bitcast %union.anon* %m_specific_param195 to %struct.opj_j2k_enc*
  %m_total_tile_parts = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder196, i32 0, i32 5
  %204 = load i32, i32* %m_total_tile_parts, align 4, !tbaa !283
  %mul197 = mul i32 5, %204
  %conv198 = zext i32 %mul197 to i64
  %cmp199 = icmp uge i64 %conv198, -256
  br i1 %cmp199, label %cond.true.201, label %cond.false.202

cond.true.201:                                    ; preds = %if.then.194
  br label %cond.end.209

cond.false.202:                                   ; preds = %if.then.194
  %205 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param203 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %205, i32 0, i32 1
  %m_encoder204 = bitcast %union.anon* %m_specific_param203 to %struct.opj_j2k_enc*
  %m_total_tile_parts205 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder204, i32 0, i32 5
  %206 = load i32, i32* %m_total_tile_parts205, align 4, !tbaa !283
  %mul206 = mul i32 5, %206
  %conv207 = zext i32 %mul206 to i64
  %call208 = call noalias i8* @malloc(i64 %conv207) #9
  br label %cond.end.209

cond.end.209:                                     ; preds = %cond.false.202, %cond.true.201
  %cond210 = phi i8* [ null, %cond.true.201 ], [ %call208, %cond.false.202 ]
  %207 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param211 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %207, i32 0, i32 1
  %m_encoder212 = bitcast %union.anon* %m_specific_param211 to %struct.opj_j2k_enc*
  %m_tlm_sot_offsets_buffer = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder212, i32 0, i32 3
  store i8* %cond210, i8** %m_tlm_sot_offsets_buffer, align 8, !tbaa !118
  %208 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param213 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %208, i32 0, i32 1
  %m_encoder214 = bitcast %union.anon* %m_specific_param213 to %struct.opj_j2k_enc*
  %m_tlm_sot_offsets_buffer215 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder214, i32 0, i32 3
  %209 = load i8*, i8** %m_tlm_sot_offsets_buffer215, align 8, !tbaa !118
  %tobool216 = icmp ne i8* %209, null
  br i1 %tobool216, label %if.end.218, label %if.then.217

if.then.217:                                      ; preds = %cond.end.209
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.218:                                       ; preds = %cond.end.209
  %210 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param219 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %210, i32 0, i32 1
  %m_encoder220 = bitcast %union.anon* %m_specific_param219 to %struct.opj_j2k_enc*
  %m_tlm_sot_offsets_buffer221 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder220, i32 0, i32 3
  %211 = load i8*, i8** %m_tlm_sot_offsets_buffer221, align 8, !tbaa !118
  %212 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param222 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %212, i32 0, i32 1
  %m_encoder223 = bitcast %union.anon* %m_specific_param222 to %struct.opj_j2k_enc*
  %m_tlm_sot_offsets_current = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder223, i32 0, i32 4
  store i8* %211, i8** %m_tlm_sot_offsets_current, align 8, !tbaa !119
  br label %if.end.224

if.end.224:                                       ; preds = %if.end.218, %if.end.190
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.224, %if.then.217, %if.then.189
  %213 = bitcast float (%struct.opj_tcp*)** %l_tp_stride_func to i8*
  call void @llvm.lifetime.end(i64 8, i8* %213) #1
  %214 = bitcast i32* %l_last_res to i8*
  call void @llvm.lifetime.end(i64 4, i8* %214) #1
  %215 = bitcast i32* %l_tile_size to i8*
  call void @llvm.lifetime.end(i64 4, i8* %215) #1
  %216 = bitcast i32* %l_size_pixel to i8*
  call void @llvm.lifetime.end(i64 4, i8* %216) #1
  %217 = bitcast i32* %l_bits_empty to i8*
  call void @llvm.lifetime.end(i64 4, i8* %217) #1
  %218 = bitcast float* %l_sot_remove to i8*
  call void @llvm.lifetime.end(i64 4, i8* %218) #1
  %219 = bitcast float** %l_rates to i8*
  call void @llvm.lifetime.end(i64 8, i8* %219) #1
  %220 = bitcast i32* %l_y1 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %220) #1
  %221 = bitcast i32* %l_x1 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %221) #1
  %222 = bitcast i32* %l_y0 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %222) #1
  %223 = bitcast i32* %l_x0 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %223) #1
  %224 = bitcast i32* %k to i8*
  call void @llvm.lifetime.end(i64 4, i8* %224) #1
  %225 = bitcast i32* %j to i8*
  call void @llvm.lifetime.end(i64 4, i8* %225) #1
  %226 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %226) #1
  %227 = bitcast %struct.opj_image_comp** %l_img_comp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %227) #1
  %228 = bitcast %struct.opj_tcp** %l_tcp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %228) #1
  %229 = bitcast %struct.opj_image** %l_image to i8*
  call void @llvm.lifetime.end(i64 8, i8* %229) #1
  %230 = bitcast %struct.opj_cp** %l_cp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %230) #1
  %231 = load i32, i32* %retval
  ret i32 %231
}

; Function Attrs: nounwind uwtable
define internal i32 @opj_j2k_calculate_tp(%struct.opj_j2k* %p_j2k, %struct.opj_cp* %cp, i32* %p_nb_tiles, %struct.opj_image* %image, %struct.opj_event_mgr* %p_manager) #0 {
entry:
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %cp.addr = alloca %struct.opj_cp*, align 8
  %p_nb_tiles.addr = alloca i32*, align 8
  %image.addr = alloca %struct.opj_image*, align 8
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  %pino = alloca i32, align 4
  %tileno = alloca i32, align 4
  %l_nb_tiles = alloca i32, align 4
  %tcp = alloca %struct.opj_tcp*, align 8
  %cur_totnum_tp = alloca i32, align 4
  %tp_num = alloca i32, align 4
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store %struct.opj_cp* %cp, %struct.opj_cp** %cp.addr, align 8, !tbaa !1
  store i32* %p_nb_tiles, i32** %p_nb_tiles.addr, align 8, !tbaa !1
  store %struct.opj_image* %image, %struct.opj_image** %image.addr, align 8, !tbaa !1
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %0 = bitcast i32* %pino to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast i32* %tileno to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = bitcast i32* %l_nb_tiles to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #1
  %3 = bitcast %struct.opj_tcp** %tcp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #1
  %4 = load i32*, i32** %p_nb_tiles.addr, align 8, !tbaa !1
  %cmp = icmp ne i32* %4, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.189, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 1617, i8* getelementptr inbounds ([103 x i8], [103 x i8]* @__PRETTY_FUNCTION__.opj_j2k_calculate_tp, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %5, %cond.true
  %6 = load %struct.opj_cp*, %struct.opj_cp** %cp.addr, align 8, !tbaa !1
  %cmp1 = icmp ne %struct.opj_cp* %6, null
  br i1 %cmp1, label %cond.true.2, label %cond.false.3

cond.true.2:                                      ; preds = %cond.end
  br label %cond.end.4

cond.false.3:                                     ; preds = %cond.end
  call void @__assert_fail(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.190, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 1618, i8* getelementptr inbounds ([103 x i8], [103 x i8]* @__PRETTY_FUNCTION__.opj_j2k_calculate_tp, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.4

cond.end.4:                                       ; preds = %7, %cond.true.2
  %8 = load %struct.opj_image*, %struct.opj_image** %image.addr, align 8, !tbaa !1
  %cmp5 = icmp ne %struct.opj_image* %8, null
  br i1 %cmp5, label %cond.true.6, label %cond.false.7

cond.true.6:                                      ; preds = %cond.end.4
  br label %cond.end.8

cond.false.7:                                     ; preds = %cond.end.4
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.191, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 1619, i8* getelementptr inbounds ([103 x i8], [103 x i8]* @__PRETTY_FUNCTION__.opj_j2k_calculate_tp, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.8

cond.end.8:                                       ; preds = %9, %cond.true.6
  %10 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cmp9 = icmp ne %struct.opj_j2k* %10, null
  br i1 %cmp9, label %cond.true.10, label %cond.false.11

cond.true.10:                                     ; preds = %cond.end.8
  br label %cond.end.12

cond.false.11:                                    ; preds = %cond.end.8
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 1620, i8* getelementptr inbounds ([103 x i8], [103 x i8]* @__PRETTY_FUNCTION__.opj_j2k_calculate_tp, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.12

cond.end.12:                                      ; preds = %11, %cond.true.10
  %12 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %cmp13 = icmp ne %struct.opj_event_mgr* %12, null
  br i1 %cmp13, label %cond.true.14, label %cond.false.15

cond.true.14:                                     ; preds = %cond.end.12
  br label %cond.end.16

cond.false.15:                                    ; preds = %cond.end.12
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 1621, i8* getelementptr inbounds ([103 x i8], [103 x i8]* @__PRETTY_FUNCTION__.opj_j2k_calculate_tp, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.16

cond.end.16:                                      ; preds = %13, %cond.true.14
  %14 = load %struct.opj_cp*, %struct.opj_cp** %cp.addr, align 8, !tbaa !1
  %tw = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %14, i32 0, i32 6
  %15 = load i32, i32* %tw, align 4, !tbaa !14
  %16 = load %struct.opj_cp*, %struct.opj_cp** %cp.addr, align 8, !tbaa !1
  %th = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %16, i32 0, i32 7
  %17 = load i32, i32* %th, align 4, !tbaa !15
  %mul = mul i32 %15, %17
  store i32 %mul, i32* %l_nb_tiles, align 4, !tbaa !5
  %18 = load i32*, i32** %p_nb_tiles.addr, align 8, !tbaa !1
  store i32 0, i32* %18, align 4, !tbaa !5
  %19 = load %struct.opj_cp*, %struct.opj_cp** %cp.addr, align 8, !tbaa !1
  %tcps = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %19, i32 0, i32 17
  %20 = load %struct.opj_tcp*, %struct.opj_tcp** %tcps, align 8, !tbaa !16
  store %struct.opj_tcp* %20, %struct.opj_tcp** %tcp, align 8, !tbaa !1
  store i32 0, i32* %tileno, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc.22, %cond.end.16
  %21 = load i32, i32* %tileno, align 4, !tbaa !5
  %22 = load i32, i32* %l_nb_tiles, align 4, !tbaa !5
  %cmp17 = icmp ult i32 %21, %22
  br i1 %cmp17, label %for.body, label %for.end.24

for.body:                                         ; preds = %for.cond
  %23 = bitcast i32* %cur_totnum_tp to i8*
  call void @llvm.lifetime.start(i64 4, i8* %23) #1
  store i32 0, i32* %cur_totnum_tp, align 4, !tbaa !5
  %24 = load %struct.opj_image*, %struct.opj_image** %image.addr, align 8, !tbaa !1
  %25 = load %struct.opj_cp*, %struct.opj_cp** %cp.addr, align 8, !tbaa !1
  %26 = load i32, i32* %tileno, align 4, !tbaa !5
  call void @opj_pi_update_encoding_parameters(%struct.opj_image* %24, %struct.opj_cp* %25, i32 %26) #7
  store i32 0, i32* %pino, align 4, !tbaa !5
  br label %for.cond.18

for.cond.18:                                      ; preds = %for.inc, %for.body
  %27 = load i32, i32* %pino, align 4, !tbaa !5
  %28 = load %struct.opj_tcp*, %struct.opj_tcp** %tcp, align 8, !tbaa !1
  %numpocs = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %28, i32 0, i32 6
  %29 = load i32, i32* %numpocs, align 4, !tbaa !51
  %cmp19 = icmp ule i32 %27, %29
  br i1 %cmp19, label %for.body.20, label %for.end

for.body.20:                                      ; preds = %for.cond.18
  %30 = bitcast i32* %tp_num to i8*
  call void @llvm.lifetime.start(i64 4, i8* %30) #1
  %31 = load %struct.opj_cp*, %struct.opj_cp** %cp.addr, align 8, !tbaa !1
  %32 = load i32, i32* %pino, align 4, !tbaa !5
  %33 = load i32, i32* %tileno, align 4, !tbaa !5
  %call = call i32 @opj_j2k_get_num_tp(%struct.opj_cp* %31, i32 %32, i32 %33) #7
  store i32 %call, i32* %tp_num, align 4, !tbaa !5
  %34 = load i32*, i32** %p_nb_tiles.addr, align 8, !tbaa !1
  %35 = load i32, i32* %34, align 4, !tbaa !5
  %36 = load i32, i32* %tp_num, align 4, !tbaa !5
  %add = add i32 %35, %36
  %37 = load i32*, i32** %p_nb_tiles.addr, align 8, !tbaa !1
  store i32 %add, i32* %37, align 4, !tbaa !5
  %38 = load i32, i32* %tp_num, align 4, !tbaa !5
  %39 = load i32, i32* %cur_totnum_tp, align 4, !tbaa !5
  %add21 = add i32 %39, %38
  store i32 %add21, i32* %cur_totnum_tp, align 4, !tbaa !5
  %40 = bitcast i32* %tp_num to i8*
  call void @llvm.lifetime.end(i64 4, i8* %40) #1
  br label %for.inc

for.inc:                                          ; preds = %for.body.20
  %41 = load i32, i32* %pino, align 4, !tbaa !5
  %inc = add i32 %41, 1
  store i32 %inc, i32* %pino, align 4, !tbaa !5
  br label %for.cond.18

for.end:                                          ; preds = %for.cond.18
  %42 = load i32, i32* %cur_totnum_tp, align 4, !tbaa !5
  %43 = load %struct.opj_tcp*, %struct.opj_tcp** %tcp, align 8, !tbaa !1
  %m_nb_tile_parts = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %43, i32 0, i32 14
  store i32 %42, i32* %m_nb_tile_parts, align 4, !tbaa !20
  %44 = load %struct.opj_tcp*, %struct.opj_tcp** %tcp, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %44, i32 1
  store %struct.opj_tcp* %incdec.ptr, %struct.opj_tcp** %tcp, align 8, !tbaa !1
  %45 = bitcast i32* %cur_totnum_tp to i8*
  call void @llvm.lifetime.end(i64 4, i8* %45) #1
  br label %for.inc.22

for.inc.22:                                       ; preds = %for.end
  %46 = load i32, i32* %tileno, align 4, !tbaa !5
  %inc23 = add i32 %46, 1
  store i32 %inc23, i32* %tileno, align 4, !tbaa !5
  br label %for.cond

for.end.24:                                       ; preds = %for.cond
  %47 = bitcast %struct.opj_tcp** %tcp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %47) #1
  %48 = bitcast i32* %l_nb_tiles to i8*
  call void @llvm.lifetime.end(i64 4, i8* %48) #1
  %49 = bitcast i32* %tileno to i8*
  call void @llvm.lifetime.end(i64 4, i8* %49) #1
  %50 = bitcast i32* %pino to i8*
  call void @llvm.lifetime.end(i64 4, i8* %50) #1
  ret i32 1
}

declare void @opj_pi_update_encoding_parameters(%struct.opj_image*, %struct.opj_cp*, i32) #3

; Function Attrs: nounwind uwtable
define internal i32 @opj_j2k_write_coc(%struct.opj_j2k* %p_j2k, i32 %p_comp_no, %struct.opj_stream_private* %p_stream, %struct.opj_event_mgr* %p_manager) #0 {
entry:
  %retval = alloca i32, align 4
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %p_comp_no.addr = alloca i32, align 4
  %p_stream.addr = alloca %struct.opj_stream_private*, align 8
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  %l_coc_size = alloca i32, align 4
  %l_remaining_size = alloca i32, align 4
  %l_comp_room = alloca i32, align 4
  %new_header_tile_data = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store i32 %p_comp_no, i32* %p_comp_no.addr, align 4, !tbaa !5
  store %struct.opj_stream_private* %p_stream, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %0 = bitcast i32* %l_coc_size to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast i32* %l_remaining_size to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = bitcast i32* %l_comp_room to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #1
  %3 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cmp = icmp ne %struct.opj_j2k* %3, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 2446, i8* getelementptr inbounds ([95 x i8], [95 x i8]* @__PRETTY_FUNCTION__.opj_j2k_write_coc, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %4, %cond.true
  %5 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %cmp1 = icmp ne %struct.opj_event_mgr* %5, null
  br i1 %cmp1, label %cond.true.2, label %cond.false.3

cond.true.2:                                      ; preds = %cond.end
  br label %cond.end.4

cond.false.3:                                     ; preds = %cond.end
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 2447, i8* getelementptr inbounds ([95 x i8], [95 x i8]* @__PRETTY_FUNCTION__.opj_j2k_write_coc, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.4

cond.end.4:                                       ; preds = %6, %cond.true.2
  %7 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %cmp5 = icmp ne %struct.opj_stream_private* %7, null
  br i1 %cmp5, label %cond.true.6, label %cond.false.7

cond.true.6:                                      ; preds = %cond.end.4
  br label %cond.end.8

cond.false.7:                                     ; preds = %cond.end.4
  call void @__assert_fail(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 2448, i8* getelementptr inbounds ([95 x i8], [95 x i8]* @__PRETTY_FUNCTION__.opj_j2k_write_coc, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.8

cond.end.8:                                       ; preds = %8, %cond.true.6
  %9 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_private_image = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %9, i32 0, i32 2
  %10 = load %struct.opj_image*, %struct.opj_image** %m_private_image, align 8, !tbaa !38
  %numcomps = getelementptr inbounds %struct.opj_image, %struct.opj_image* %10, i32 0, i32 4
  %11 = load i32, i32* %numcomps, align 4, !tbaa !45
  %cmp9 = icmp ule i32 %11, 256
  %cond = select i1 %cmp9, i32 1, i32 2
  store i32 %cond, i32* %l_comp_room, align 4, !tbaa !5
  %12 = load i32, i32* %l_comp_room, align 4, !tbaa !5
  %add = add i32 5, %12
  %13 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %14 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %14, i32 0, i32 8
  %15 = load i32, i32* %m_current_tile_number, align 4, !tbaa !11
  %16 = load i32, i32* %p_comp_no.addr, align 4, !tbaa !5
  %call = call i32 @opj_j2k_get_SPCod_SPCoc_size(%struct.opj_j2k* %13, i32 %15, i32 %16) #7
  %add10 = add i32 %add, %call
  store i32 %add10, i32* %l_coc_size, align 4, !tbaa !5
  %17 = load i32, i32* %l_coc_size, align 4, !tbaa !5
  %18 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %18, i32 0, i32 1
  %m_encoder = bitcast %union.anon* %m_specific_param to %struct.opj_j2k_enc*
  %m_header_tile_data_size = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder, i32 0, i32 9
  %19 = load i32, i32* %m_header_tile_data_size, align 4, !tbaa !112
  %cmp11 = icmp ugt i32 %17, %19
  br i1 %cmp11, label %if.then, label %if.end.39

if.then:                                          ; preds = %cond.end.8
  %20 = bitcast i8** %new_header_tile_data to i8*
  call void @llvm.lifetime.start(i64 8, i8* %20) #1
  %21 = load i32, i32* %l_coc_size, align 4, !tbaa !5
  %conv = zext i32 %21 to i64
  %cmp12 = icmp uge i64 %conv, -256
  br i1 %cmp12, label %cond.true.14, label %cond.false.15

cond.true.14:                                     ; preds = %if.then
  br label %cond.end.20

cond.false.15:                                    ; preds = %if.then
  %22 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param16 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %22, i32 0, i32 1
  %m_encoder17 = bitcast %union.anon* %m_specific_param16 to %struct.opj_j2k_enc*
  %m_header_tile_data = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder17, i32 0, i32 8
  %23 = load i8*, i8** %m_header_tile_data, align 8, !tbaa !110
  %24 = load i32, i32* %l_coc_size, align 4, !tbaa !5
  %conv18 = zext i32 %24 to i64
  %call19 = call i8* @realloc(i8* %23, i64 %conv18) #9
  br label %cond.end.20

cond.end.20:                                      ; preds = %cond.false.15, %cond.true.14
  %cond21 = phi i8* [ null, %cond.true.14 ], [ %call19, %cond.false.15 ]
  store i8* %cond21, i8** %new_header_tile_data, align 8, !tbaa !1
  %25 = load i8*, i8** %new_header_tile_data, align 8, !tbaa !1
  %tobool = icmp ne i8* %25, null
  br i1 %tobool, label %if.end, label %if.then.22

if.then.22:                                       ; preds = %cond.end.20
  %26 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param23 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %26, i32 0, i32 1
  %m_encoder24 = bitcast %union.anon* %m_specific_param23 to %struct.opj_j2k_enc*
  %m_header_tile_data25 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder24, i32 0, i32 8
  %27 = load i8*, i8** %m_header_tile_data25, align 8, !tbaa !110
  call void @free(i8* %27) #9
  %28 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param26 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %28, i32 0, i32 1
  %m_encoder27 = bitcast %union.anon* %m_specific_param26 to %struct.opj_j2k_enc*
  %m_header_tile_data28 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder27, i32 0, i32 8
  store i8* null, i8** %m_header_tile_data28, align 8, !tbaa !110
  %29 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param29 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %29, i32 0, i32 1
  %m_encoder30 = bitcast %union.anon* %m_specific_param29 to %struct.opj_j2k_enc*
  %m_header_tile_data_size31 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder30, i32 0, i32 9
  store i32 0, i32* %m_header_tile_data_size31, align 4, !tbaa !112
  %30 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call32 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %30, i32 1, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.197, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %cond.end.20
  %31 = load i8*, i8** %new_header_tile_data, align 8, !tbaa !1
  %32 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param33 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %32, i32 0, i32 1
  %m_encoder34 = bitcast %union.anon* %m_specific_param33 to %struct.opj_j2k_enc*
  %m_header_tile_data35 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder34, i32 0, i32 8
  store i8* %31, i8** %m_header_tile_data35, align 8, !tbaa !110
  %33 = load i32, i32* %l_coc_size, align 4, !tbaa !5
  %34 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param36 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %34, i32 0, i32 1
  %m_encoder37 = bitcast %union.anon* %m_specific_param36 to %struct.opj_j2k_enc*
  %m_header_tile_data_size38 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder37, i32 0, i32 9
  store i32 %33, i32* %m_header_tile_data_size38, align 4, !tbaa !112
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then.22
  %35 = bitcast i8** %new_header_tile_data to i8*
  call void @llvm.lifetime.end(i64 8, i8* %35) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.53 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.39

if.end.39:                                        ; preds = %cleanup.cont, %cond.end.8
  %36 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %37 = load i32, i32* %p_comp_no.addr, align 4, !tbaa !5
  %38 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param40 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %38, i32 0, i32 1
  %m_encoder41 = bitcast %union.anon* %m_specific_param40 to %struct.opj_j2k_enc*
  %m_header_tile_data42 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder41, i32 0, i32 8
  %39 = load i8*, i8** %m_header_tile_data42, align 8, !tbaa !110
  %40 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  call void @opj_j2k_write_coc_in_memory(%struct.opj_j2k* %36, i32 %37, i8* %39, i32* %l_remaining_size, %struct.opj_event_mgr* %40) #7
  %41 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %42 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param43 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %42, i32 0, i32 1
  %m_encoder44 = bitcast %union.anon* %m_specific_param43 to %struct.opj_j2k_enc*
  %m_header_tile_data45 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder44, i32 0, i32 8
  %43 = load i8*, i8** %m_header_tile_data45, align 8, !tbaa !110
  %44 = load i32, i32* %l_coc_size, align 4, !tbaa !5
  %conv46 = zext i32 %44 to i64
  %45 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call47 = call i64 @opj_stream_write_data(%struct.opj_stream_private* %41, i8* %43, i64 %conv46, %struct.opj_event_mgr* %45) #7
  %46 = load i32, i32* %l_coc_size, align 4, !tbaa !5
  %conv48 = zext i32 %46 to i64
  %cmp49 = icmp ne i64 %call47, %conv48
  br i1 %cmp49, label %if.then.51, label %if.end.52

if.then.51:                                       ; preds = %if.end.39
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.53

if.end.52:                                        ; preds = %if.end.39
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.53

cleanup.53:                                       ; preds = %if.end.52, %if.then.51, %cleanup
  %47 = bitcast i32* %l_comp_room to i8*
  call void @llvm.lifetime.end(i64 4, i8* %47) #1
  %48 = bitcast i32* %l_remaining_size to i8*
  call void @llvm.lifetime.end(i64 4, i8* %48) #1
  %49 = bitcast i32* %l_coc_size to i8*
  call void @llvm.lifetime.end(i64 4, i8* %49) #1
  %50 = load i32, i32* %retval
  ret i32 %50
}

; Function Attrs: nounwind uwtable
define internal i32 @opj_j2k_write_qcc(%struct.opj_j2k* %p_j2k, i32 %p_comp_no, %struct.opj_stream_private* %p_stream, %struct.opj_event_mgr* %p_manager) #0 {
entry:
  %retval = alloca i32, align 4
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %p_comp_no.addr = alloca i32, align 4
  %p_stream.addr = alloca %struct.opj_stream_private*, align 8
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  %l_qcc_size = alloca i32, align 4
  %l_remaining_size = alloca i32, align 4
  %new_header_tile_data = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store i32 %p_comp_no, i32* %p_comp_no.addr, align 4, !tbaa !5
  store %struct.opj_stream_private* %p_stream, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %0 = bitcast i32* %l_qcc_size to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast i32* %l_remaining_size to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cmp = icmp ne %struct.opj_j2k* %2, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 2708, i8* getelementptr inbounds ([95 x i8], [95 x i8]* @__PRETTY_FUNCTION__.opj_j2k_write_qcc, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %3, %cond.true
  %4 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %cmp1 = icmp ne %struct.opj_event_mgr* %4, null
  br i1 %cmp1, label %cond.true.2, label %cond.false.3

cond.true.2:                                      ; preds = %cond.end
  br label %cond.end.4

cond.false.3:                                     ; preds = %cond.end
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 2709, i8* getelementptr inbounds ([95 x i8], [95 x i8]* @__PRETTY_FUNCTION__.opj_j2k_write_qcc, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.4

cond.end.4:                                       ; preds = %5, %cond.true.2
  %6 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %cmp5 = icmp ne %struct.opj_stream_private* %6, null
  br i1 %cmp5, label %cond.true.6, label %cond.false.7

cond.true.6:                                      ; preds = %cond.end.4
  br label %cond.end.8

cond.false.7:                                     ; preds = %cond.end.4
  call void @__assert_fail(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 2710, i8* getelementptr inbounds ([95 x i8], [95 x i8]* @__PRETTY_FUNCTION__.opj_j2k_write_qcc, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.8

cond.end.8:                                       ; preds = %7, %cond.true.6
  %8 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %9 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %9, i32 0, i32 8
  %10 = load i32, i32* %m_current_tile_number, align 4, !tbaa !11
  %11 = load i32, i32* %p_comp_no.addr, align 4, !tbaa !5
  %call = call i32 @opj_j2k_get_SQcd_SQcc_size(%struct.opj_j2k* %8, i32 %10, i32 %11) #7
  %add = add i32 6, %call
  store i32 %add, i32* %l_qcc_size, align 4, !tbaa !5
  %12 = load i32, i32* %l_qcc_size, align 4, !tbaa !5
  store i32 %12, i32* %l_remaining_size, align 4, !tbaa !5
  %13 = load i32, i32* %l_qcc_size, align 4, !tbaa !5
  %14 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %14, i32 0, i32 1
  %m_encoder = bitcast %union.anon* %m_specific_param to %struct.opj_j2k_enc*
  %m_header_tile_data_size = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder, i32 0, i32 9
  %15 = load i32, i32* %m_header_tile_data_size, align 4, !tbaa !112
  %cmp9 = icmp ugt i32 %13, %15
  br i1 %cmp9, label %if.then, label %if.end.36

if.then:                                          ; preds = %cond.end.8
  %16 = bitcast i8** %new_header_tile_data to i8*
  call void @llvm.lifetime.start(i64 8, i8* %16) #1
  %17 = load i32, i32* %l_qcc_size, align 4, !tbaa !5
  %conv = zext i32 %17 to i64
  %cmp10 = icmp uge i64 %conv, -256
  br i1 %cmp10, label %cond.true.12, label %cond.false.13

cond.true.12:                                     ; preds = %if.then
  br label %cond.end.18

cond.false.13:                                    ; preds = %if.then
  %18 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param14 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %18, i32 0, i32 1
  %m_encoder15 = bitcast %union.anon* %m_specific_param14 to %struct.opj_j2k_enc*
  %m_header_tile_data = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder15, i32 0, i32 8
  %19 = load i8*, i8** %m_header_tile_data, align 8, !tbaa !110
  %20 = load i32, i32* %l_qcc_size, align 4, !tbaa !5
  %conv16 = zext i32 %20 to i64
  %call17 = call i8* @realloc(i8* %19, i64 %conv16) #9
  br label %cond.end.18

cond.end.18:                                      ; preds = %cond.false.13, %cond.true.12
  %cond = phi i8* [ null, %cond.true.12 ], [ %call17, %cond.false.13 ]
  store i8* %cond, i8** %new_header_tile_data, align 8, !tbaa !1
  %21 = load i8*, i8** %new_header_tile_data, align 8, !tbaa !1
  %tobool = icmp ne i8* %21, null
  br i1 %tobool, label %if.end, label %if.then.19

if.then.19:                                       ; preds = %cond.end.18
  %22 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param20 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %22, i32 0, i32 1
  %m_encoder21 = bitcast %union.anon* %m_specific_param20 to %struct.opj_j2k_enc*
  %m_header_tile_data22 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder21, i32 0, i32 8
  %23 = load i8*, i8** %m_header_tile_data22, align 8, !tbaa !110
  call void @free(i8* %23) #9
  %24 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param23 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %24, i32 0, i32 1
  %m_encoder24 = bitcast %union.anon* %m_specific_param23 to %struct.opj_j2k_enc*
  %m_header_tile_data25 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder24, i32 0, i32 8
  store i8* null, i8** %m_header_tile_data25, align 8, !tbaa !110
  %25 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param26 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %25, i32 0, i32 1
  %m_encoder27 = bitcast %union.anon* %m_specific_param26 to %struct.opj_j2k_enc*
  %m_header_tile_data_size28 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder27, i32 0, i32 9
  store i32 0, i32* %m_header_tile_data_size28, align 4, !tbaa !112
  %26 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call29 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %26, i32 1, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.198, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %cond.end.18
  %27 = load i8*, i8** %new_header_tile_data, align 8, !tbaa !1
  %28 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param30 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %28, i32 0, i32 1
  %m_encoder31 = bitcast %union.anon* %m_specific_param30 to %struct.opj_j2k_enc*
  %m_header_tile_data32 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder31, i32 0, i32 8
  store i8* %27, i8** %m_header_tile_data32, align 8, !tbaa !110
  %29 = load i32, i32* %l_qcc_size, align 4, !tbaa !5
  %30 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param33 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %30, i32 0, i32 1
  %m_encoder34 = bitcast %union.anon* %m_specific_param33 to %struct.opj_j2k_enc*
  %m_header_tile_data_size35 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder34, i32 0, i32 9
  store i32 %29, i32* %m_header_tile_data_size35, align 4, !tbaa !112
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then.19
  %31 = bitcast i8** %new_header_tile_data to i8*
  call void @llvm.lifetime.end(i64 8, i8* %31) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.50 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.36

if.end.36:                                        ; preds = %cleanup.cont, %cond.end.8
  %32 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %33 = load i32, i32* %p_comp_no.addr, align 4, !tbaa !5
  %34 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param37 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %34, i32 0, i32 1
  %m_encoder38 = bitcast %union.anon* %m_specific_param37 to %struct.opj_j2k_enc*
  %m_header_tile_data39 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder38, i32 0, i32 8
  %35 = load i8*, i8** %m_header_tile_data39, align 8, !tbaa !110
  %36 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  call void @opj_j2k_write_qcc_in_memory(%struct.opj_j2k* %32, i32 %33, i8* %35, i32* %l_remaining_size, %struct.opj_event_mgr* %36) #7
  %37 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %38 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param40 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %38, i32 0, i32 1
  %m_encoder41 = bitcast %union.anon* %m_specific_param40 to %struct.opj_j2k_enc*
  %m_header_tile_data42 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder41, i32 0, i32 8
  %39 = load i8*, i8** %m_header_tile_data42, align 8, !tbaa !110
  %40 = load i32, i32* %l_qcc_size, align 4, !tbaa !5
  %conv43 = zext i32 %40 to i64
  %41 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call44 = call i64 @opj_stream_write_data(%struct.opj_stream_private* %37, i8* %39, i64 %conv43, %struct.opj_event_mgr* %41) #7
  %42 = load i32, i32* %l_qcc_size, align 4, !tbaa !5
  %conv45 = zext i32 %42 to i64
  %cmp46 = icmp ne i64 %call44, %conv45
  br i1 %cmp46, label %if.then.48, label %if.end.49

if.then.48:                                       ; preds = %if.end.36
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.50

if.end.49:                                        ; preds = %if.end.36
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.50

cleanup.50:                                       ; preds = %if.end.49, %if.then.48, %cleanup
  %43 = bitcast i32* %l_remaining_size to i8*
  call void @llvm.lifetime.end(i64 4, i8* %43) #1
  %44 = bitcast i32* %l_qcc_size to i8*
  call void @llvm.lifetime.end(i64 4, i8* %44) #1
  %45 = load i32, i32* %retval
  ret i32 %45
}

; Function Attrs: nounwind uwtable
define internal i32 @opj_j2k_write_rgn(%struct.opj_j2k* %p_j2k, i32 %p_tile_no, i32 %p_comp_no, i32 %nb_comps, %struct.opj_stream_private* %p_stream, %struct.opj_event_mgr* %p_manager) #0 {
entry:
  %retval = alloca i32, align 4
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %p_tile_no.addr = alloca i32, align 4
  %p_comp_no.addr = alloca i32, align 4
  %nb_comps.addr = alloca i32, align 4
  %p_stream.addr = alloca %struct.opj_stream_private*, align 8
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  %l_current_data = alloca i8*, align 8
  %l_rgn_size = alloca i32, align 4
  %l_cp = alloca %struct.opj_cp*, align 8
  %l_tcp = alloca %struct.opj_tcp*, align 8
  %l_tccp = alloca %struct.opj_tccp*, align 8
  %l_comp_room = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store i32 %p_tile_no, i32* %p_tile_no.addr, align 4, !tbaa !5
  store i32 %p_comp_no, i32* %p_comp_no.addr, align 4, !tbaa !5
  store i32 %nb_comps, i32* %nb_comps.addr, align 4, !tbaa !5
  store %struct.opj_stream_private* %p_stream, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %0 = bitcast i8** %l_current_data to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  store i8* null, i8** %l_current_data, align 8, !tbaa !1
  %1 = bitcast i32* %l_rgn_size to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = bitcast %struct.opj_cp** %l_cp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #1
  store %struct.opj_cp* null, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %3 = bitcast %struct.opj_tcp** %l_tcp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #1
  store %struct.opj_tcp* null, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %4 = bitcast %struct.opj_tccp** %l_tccp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4) #1
  store %struct.opj_tccp* null, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %5 = bitcast i32* %l_comp_room to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #1
  %6 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cmp = icmp ne %struct.opj_j2k* %6, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 4325, i8* getelementptr inbounds ([119 x i8], [119 x i8]* @__PRETTY_FUNCTION__.opj_j2k_write_rgn, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %7, %cond.true
  %8 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %cmp1 = icmp ne %struct.opj_event_mgr* %8, null
  br i1 %cmp1, label %cond.true.2, label %cond.false.3

cond.true.2:                                      ; preds = %cond.end
  br label %cond.end.4

cond.false.3:                                     ; preds = %cond.end
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 4326, i8* getelementptr inbounds ([119 x i8], [119 x i8]* @__PRETTY_FUNCTION__.opj_j2k_write_rgn, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.4

cond.end.4:                                       ; preds = %9, %cond.true.2
  %10 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %cmp5 = icmp ne %struct.opj_stream_private* %10, null
  br i1 %cmp5, label %cond.true.6, label %cond.false.7

cond.true.6:                                      ; preds = %cond.end.4
  br label %cond.end.8

cond.false.7:                                     ; preds = %cond.end.4
  call void @__assert_fail(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 4327, i8* getelementptr inbounds ([119 x i8], [119 x i8]* @__PRETTY_FUNCTION__.opj_j2k_write_rgn, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.8

cond.end.8:                                       ; preds = %11, %cond.true.6
  %12 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %12, i32 0, i32 4
  store %struct.opj_cp* %m_cp, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %13 = load i32, i32* %p_tile_no.addr, align 4, !tbaa !5
  %idxprom = zext i32 %13 to i64
  %14 = load %struct.opj_cp*, %struct.opj_cp** %l_cp, align 8, !tbaa !1
  %tcps = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %14, i32 0, i32 17
  %15 = load %struct.opj_tcp*, %struct.opj_tcp** %tcps, align 8, !tbaa !16
  %arrayidx = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %15, i64 %idxprom
  store %struct.opj_tcp* %arrayidx, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %16 = load i32, i32* %p_comp_no.addr, align 4, !tbaa !5
  %idxprom9 = zext i32 %16 to i64
  %17 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %tccps = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %17, i32 0, i32 13
  %18 = load %struct.opj_tccp*, %struct.opj_tccp** %tccps, align 8, !tbaa !48
  %arrayidx10 = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %18, i64 %idxprom9
  store %struct.opj_tccp* %arrayidx10, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %19 = load i32, i32* %nb_comps.addr, align 4, !tbaa !5
  %cmp11 = icmp ule i32 %19, 256
  br i1 %cmp11, label %if.then, label %if.else

if.then:                                          ; preds = %cond.end.8
  store i32 1, i32* %l_comp_room, align 4, !tbaa !5
  br label %if.end

if.else:                                          ; preds = %cond.end.8
  store i32 2, i32* %l_comp_room, align 4, !tbaa !5
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %20 = load i32, i32* %l_comp_room, align 4, !tbaa !5
  %add = add i32 6, %20
  store i32 %add, i32* %l_rgn_size, align 4, !tbaa !5
  %21 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %21, i32 0, i32 1
  %m_encoder = bitcast %union.anon* %m_specific_param to %struct.opj_j2k_enc*
  %m_header_tile_data = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder, i32 0, i32 8
  %22 = load i8*, i8** %m_header_tile_data, align 8, !tbaa !110
  store i8* %22, i8** %l_current_data, align 8, !tbaa !1
  %23 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  call void @opj_write_bytes_LE(i8* %23, i32 65374, i32 2) #7
  %24 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %add.ptr = getelementptr inbounds i8, i8* %24, i64 2
  store i8* %add.ptr, i8** %l_current_data, align 8, !tbaa !1
  %25 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %26 = load i32, i32* %l_rgn_size, align 4, !tbaa !5
  %sub = sub i32 %26, 2
  call void @opj_write_bytes_LE(i8* %25, i32 %sub, i32 2) #7
  %27 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %add.ptr12 = getelementptr inbounds i8, i8* %27, i64 2
  store i8* %add.ptr12, i8** %l_current_data, align 8, !tbaa !1
  %28 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %29 = load i32, i32* %p_comp_no.addr, align 4, !tbaa !5
  %30 = load i32, i32* %l_comp_room, align 4, !tbaa !5
  call void @opj_write_bytes_LE(i8* %28, i32 %29, i32 %30) #7
  %31 = load i32, i32* %l_comp_room, align 4, !tbaa !5
  %32 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %idx.ext = zext i32 %31 to i64
  %add.ptr13 = getelementptr inbounds i8, i8* %32, i64 %idx.ext
  store i8* %add.ptr13, i8** %l_current_data, align 8, !tbaa !1
  %33 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  call void @opj_write_bytes_LE(i8* %33, i32 0, i32 1) #7
  %34 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds i8, i8* %34, i32 1
  store i8* %incdec.ptr, i8** %l_current_data, align 8, !tbaa !1
  %35 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %36 = load %struct.opj_tccp*, %struct.opj_tccp** %l_tccp, align 8, !tbaa !1
  %roishift = getelementptr inbounds %struct.opj_tccp, %struct.opj_tccp* %36, i32 0, i32 9
  %37 = load i32, i32* %roishift, align 4, !tbaa !174
  call void @opj_write_bytes_LE(i8* %35, i32 %37, i32 1) #7
  %38 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %incdec.ptr14 = getelementptr inbounds i8, i8* %38, i32 1
  store i8* %incdec.ptr14, i8** %l_current_data, align 8, !tbaa !1
  %39 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %40 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param15 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %40, i32 0, i32 1
  %m_encoder16 = bitcast %union.anon* %m_specific_param15 to %struct.opj_j2k_enc*
  %m_header_tile_data17 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder16, i32 0, i32 8
  %41 = load i8*, i8** %m_header_tile_data17, align 8, !tbaa !110
  %42 = load i32, i32* %l_rgn_size, align 4, !tbaa !5
  %conv = zext i32 %42 to i64
  %43 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call = call i64 @opj_stream_write_data(%struct.opj_stream_private* %39, i8* %41, i64 %conv, %struct.opj_event_mgr* %43) #7
  %44 = load i32, i32* %l_rgn_size, align 4, !tbaa !5
  %conv18 = zext i32 %44 to i64
  %cmp19 = icmp ne i64 %call, %conv18
  br i1 %cmp19, label %if.then.21, label %if.end.22

if.then.21:                                       ; preds = %if.end
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.22:                                        ; preds = %if.end
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.22, %if.then.21
  %45 = bitcast i32* %l_comp_room to i8*
  call void @llvm.lifetime.end(i64 4, i8* %45) #1
  %46 = bitcast %struct.opj_tccp** %l_tccp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %46) #1
  %47 = bitcast %struct.opj_tcp** %l_tcp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %47) #1
  %48 = bitcast %struct.opj_cp** %l_cp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %48) #1
  %49 = bitcast i32* %l_rgn_size to i8*
  call void @llvm.lifetime.end(i64 4, i8* %49) #1
  %50 = bitcast i8** %l_current_data to i8*
  call void @llvm.lifetime.end(i64 8, i8* %50) #1
  %51 = load i32, i32* %retval
  ret i32 %51
}

; Function Attrs: nounwind uwtable
define internal i32 @opj_j2k_write_cbd(%struct.opj_j2k* %p_j2k, %struct.opj_stream_private* %p_stream, %struct.opj_event_mgr* %p_manager) #0 {
entry:
  %retval = alloca i32, align 4
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %p_stream.addr = alloca %struct.opj_stream_private*, align 8
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  %i = alloca i32, align 4
  %l_cbd_size = alloca i32, align 4
  %l_current_data = alloca i8*, align 8
  %l_image = alloca %struct.opj_image*, align 8
  %l_comp = alloca %struct.opj_image_comp*, align 8
  %new_header_tile_data = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store %struct.opj_stream_private* %p_stream, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %0 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast i32* %l_cbd_size to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = bitcast i8** %l_current_data to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #1
  store i8* null, i8** %l_current_data, align 8, !tbaa !1
  %3 = bitcast %struct.opj_image** %l_image to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #1
  store %struct.opj_image* null, %struct.opj_image** %l_image, align 8, !tbaa !1
  %4 = bitcast %struct.opj_image_comp** %l_comp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4) #1
  store %struct.opj_image_comp* null, %struct.opj_image_comp** %l_comp, align 8, !tbaa !1
  %5 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cmp = icmp ne %struct.opj_j2k* %5, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 5626, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @__PRETTY_FUNCTION__.opj_j2k_write_cbd, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %6, %cond.true
  %7 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %cmp1 = icmp ne %struct.opj_event_mgr* %7, null
  br i1 %cmp1, label %cond.true.2, label %cond.false.3

cond.true.2:                                      ; preds = %cond.end
  br label %cond.end.4

cond.false.3:                                     ; preds = %cond.end
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 5627, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @__PRETTY_FUNCTION__.opj_j2k_write_cbd, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.4

cond.end.4:                                       ; preds = %8, %cond.true.2
  %9 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %cmp5 = icmp ne %struct.opj_stream_private* %9, null
  br i1 %cmp5, label %cond.true.6, label %cond.false.7

cond.true.6:                                      ; preds = %cond.end.4
  br label %cond.end.8

cond.false.7:                                     ; preds = %cond.end.4
  call void @__assert_fail(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 5628, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @__PRETTY_FUNCTION__.opj_j2k_write_cbd, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.8

cond.end.8:                                       ; preds = %10, %cond.true.6
  %11 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_private_image = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %11, i32 0, i32 2
  %12 = load %struct.opj_image*, %struct.opj_image** %m_private_image, align 8, !tbaa !38
  store %struct.opj_image* %12, %struct.opj_image** %l_image, align 8, !tbaa !1
  %13 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_private_image9 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %13, i32 0, i32 2
  %14 = load %struct.opj_image*, %struct.opj_image** %m_private_image9, align 8, !tbaa !38
  %numcomps = getelementptr inbounds %struct.opj_image, %struct.opj_image* %14, i32 0, i32 4
  %15 = load i32, i32* %numcomps, align 4, !tbaa !45
  %add = add i32 6, %15
  store i32 %add, i32* %l_cbd_size, align 4, !tbaa !5
  %16 = load i32, i32* %l_cbd_size, align 4, !tbaa !5
  %17 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %17, i32 0, i32 1
  %m_encoder = bitcast %union.anon* %m_specific_param to %struct.opj_j2k_enc*
  %m_header_tile_data_size = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder, i32 0, i32 9
  %18 = load i32, i32* %m_header_tile_data_size, align 4, !tbaa !112
  %cmp10 = icmp ugt i32 %16, %18
  br i1 %cmp10, label %if.then, label %if.end.36

if.then:                                          ; preds = %cond.end.8
  %19 = bitcast i8** %new_header_tile_data to i8*
  call void @llvm.lifetime.start(i64 8, i8* %19) #1
  %20 = load i32, i32* %l_cbd_size, align 4, !tbaa !5
  %conv = zext i32 %20 to i64
  %cmp11 = icmp uge i64 %conv, -256
  br i1 %cmp11, label %cond.true.13, label %cond.false.14

cond.true.13:                                     ; preds = %if.then
  br label %cond.end.18

cond.false.14:                                    ; preds = %if.then
  %21 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param15 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %21, i32 0, i32 1
  %m_encoder16 = bitcast %union.anon* %m_specific_param15 to %struct.opj_j2k_enc*
  %m_header_tile_data = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder16, i32 0, i32 8
  %22 = load i8*, i8** %m_header_tile_data, align 8, !tbaa !110
  %23 = load i32, i32* %l_cbd_size, align 4, !tbaa !5
  %conv17 = zext i32 %23 to i64
  %call = call i8* @realloc(i8* %22, i64 %conv17) #9
  br label %cond.end.18

cond.end.18:                                      ; preds = %cond.false.14, %cond.true.13
  %cond = phi i8* [ null, %cond.true.13 ], [ %call, %cond.false.14 ]
  store i8* %cond, i8** %new_header_tile_data, align 8, !tbaa !1
  %24 = load i8*, i8** %new_header_tile_data, align 8, !tbaa !1
  %tobool = icmp ne i8* %24, null
  br i1 %tobool, label %if.end, label %if.then.19

if.then.19:                                       ; preds = %cond.end.18
  %25 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param20 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %25, i32 0, i32 1
  %m_encoder21 = bitcast %union.anon* %m_specific_param20 to %struct.opj_j2k_enc*
  %m_header_tile_data22 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder21, i32 0, i32 8
  %26 = load i8*, i8** %m_header_tile_data22, align 8, !tbaa !110
  call void @free(i8* %26) #9
  %27 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param23 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %27, i32 0, i32 1
  %m_encoder24 = bitcast %union.anon* %m_specific_param23 to %struct.opj_j2k_enc*
  %m_header_tile_data25 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder24, i32 0, i32 8
  store i8* null, i8** %m_header_tile_data25, align 8, !tbaa !110
  %28 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param26 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %28, i32 0, i32 1
  %m_encoder27 = bitcast %union.anon* %m_specific_param26 to %struct.opj_j2k_enc*
  %m_header_tile_data_size28 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder27, i32 0, i32 9
  store i32 0, i32* %m_header_tile_data_size28, align 4, !tbaa !112
  %29 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call29 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %29, i32 1, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.202, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %cond.end.18
  %30 = load i8*, i8** %new_header_tile_data, align 8, !tbaa !1
  %31 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param30 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %31, i32 0, i32 1
  %m_encoder31 = bitcast %union.anon* %m_specific_param30 to %struct.opj_j2k_enc*
  %m_header_tile_data32 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder31, i32 0, i32 8
  store i8* %30, i8** %m_header_tile_data32, align 8, !tbaa !110
  %32 = load i32, i32* %l_cbd_size, align 4, !tbaa !5
  %33 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param33 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %33, i32 0, i32 1
  %m_encoder34 = bitcast %union.anon* %m_specific_param33 to %struct.opj_j2k_enc*
  %m_header_tile_data_size35 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder34, i32 0, i32 9
  store i32 %32, i32* %m_header_tile_data_size35, align 4, !tbaa !112
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then.19
  %34 = bitcast i8** %new_header_tile_data to i8*
  call void @llvm.lifetime.end(i64 8, i8* %34) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.58 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.36

if.end.36:                                        ; preds = %cleanup.cont, %cond.end.8
  %35 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param37 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %35, i32 0, i32 1
  %m_encoder38 = bitcast %union.anon* %m_specific_param37 to %struct.opj_j2k_enc*
  %m_header_tile_data39 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder38, i32 0, i32 8
  %36 = load i8*, i8** %m_header_tile_data39, align 8, !tbaa !110
  store i8* %36, i8** %l_current_data, align 8, !tbaa !1
  %37 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  call void @opj_write_bytes_LE(i8* %37, i32 65400, i32 2) #7
  %38 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %add.ptr = getelementptr inbounds i8, i8* %38, i64 2
  store i8* %add.ptr, i8** %l_current_data, align 8, !tbaa !1
  %39 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %40 = load i32, i32* %l_cbd_size, align 4, !tbaa !5
  %sub = sub i32 %40, 2
  call void @opj_write_bytes_LE(i8* %39, i32 %sub, i32 2) #7
  %41 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %add.ptr40 = getelementptr inbounds i8, i8* %41, i64 2
  store i8* %add.ptr40, i8** %l_current_data, align 8, !tbaa !1
  %42 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %43 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %numcomps41 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %43, i32 0, i32 4
  %44 = load i32, i32* %numcomps41, align 4, !tbaa !45
  call void @opj_write_bytes_LE(i8* %42, i32 %44, i32 2) #7
  %45 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %add.ptr42 = getelementptr inbounds i8, i8* %45, i64 2
  store i8* %add.ptr42, i8** %l_current_data, align 8, !tbaa !1
  %46 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %comps = getelementptr inbounds %struct.opj_image, %struct.opj_image* %46, i32 0, i32 6
  %47 = load %struct.opj_image_comp*, %struct.opj_image_comp** %comps, align 8, !tbaa !62
  store %struct.opj_image_comp* %47, %struct.opj_image_comp** %l_comp, align 8, !tbaa !1
  store i32 0, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.36
  %48 = load i32, i32* %i, align 4, !tbaa !5
  %49 = load %struct.opj_image*, %struct.opj_image** %l_image, align 8, !tbaa !1
  %numcomps43 = getelementptr inbounds %struct.opj_image, %struct.opj_image* %49, i32 0, i32 4
  %50 = load i32, i32* %numcomps43, align 4, !tbaa !45
  %cmp44 = icmp ult i32 %48, %50
  br i1 %cmp44, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %51 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %52 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_comp, align 8, !tbaa !1
  %sgnd = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %52, i32 0, i32 8
  %53 = load i32, i32* %sgnd, align 4, !tbaa !66
  %shl = shl i32 %53, 7
  %54 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_comp, align 8, !tbaa !1
  %prec = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %54, i32 0, i32 6
  %55 = load i32, i32* %prec, align 4, !tbaa !63
  %sub46 = sub i32 %55, 1
  %or = or i32 %shl, %sub46
  call void @opj_write_bytes_LE(i8* %51, i32 %or, i32 1) #7
  %56 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds i8, i8* %56, i32 1
  store i8* %incdec.ptr, i8** %l_current_data, align 8, !tbaa !1
  %57 = load %struct.opj_image_comp*, %struct.opj_image_comp** %l_comp, align 8, !tbaa !1
  %incdec.ptr47 = getelementptr inbounds %struct.opj_image_comp, %struct.opj_image_comp* %57, i32 1
  store %struct.opj_image_comp* %incdec.ptr47, %struct.opj_image_comp** %l_comp, align 8, !tbaa !1
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %58 = load i32, i32* %i, align 4, !tbaa !5
  %inc = add i32 %58, 1
  store i32 %inc, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %59 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %60 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param48 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %60, i32 0, i32 1
  %m_encoder49 = bitcast %union.anon* %m_specific_param48 to %struct.opj_j2k_enc*
  %m_header_tile_data50 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder49, i32 0, i32 8
  %61 = load i8*, i8** %m_header_tile_data50, align 8, !tbaa !110
  %62 = load i32, i32* %l_cbd_size, align 4, !tbaa !5
  %conv51 = zext i32 %62 to i64
  %63 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call52 = call i64 @opj_stream_write_data(%struct.opj_stream_private* %59, i8* %61, i64 %conv51, %struct.opj_event_mgr* %63) #7
  %64 = load i32, i32* %l_cbd_size, align 4, !tbaa !5
  %conv53 = zext i32 %64 to i64
  %cmp54 = icmp ne i64 %call52, %conv53
  br i1 %cmp54, label %if.then.56, label %if.end.57

if.then.56:                                       ; preds = %for.end
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.58

if.end.57:                                        ; preds = %for.end
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.58

cleanup.58:                                       ; preds = %if.end.57, %if.then.56, %cleanup
  %65 = bitcast %struct.opj_image_comp** %l_comp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %65) #1
  %66 = bitcast %struct.opj_image** %l_image to i8*
  call void @llvm.lifetime.end(i64 8, i8* %66) #1
  %67 = bitcast i8** %l_current_data to i8*
  call void @llvm.lifetime.end(i64 8, i8* %67) #1
  %68 = bitcast i32* %l_cbd_size to i8*
  call void @llvm.lifetime.end(i64 4, i8* %68) #1
  %69 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %69) #1
  %70 = load i32, i32* %retval
  ret i32 %70
}

; Function Attrs: nounwind uwtable
define internal i32 @opj_j2k_write_mct_record(%struct.opj_j2k* %p_j2k, %struct.opj_mct_data* %p_mct_record, %struct.opj_stream_private* %p_stream, %struct.opj_event_mgr* %p_manager) #0 {
entry:
  %retval = alloca i32, align 4
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %p_mct_record.addr = alloca %struct.opj_mct_data*, align 8
  %p_stream.addr = alloca %struct.opj_stream_private*, align 8
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  %l_mct_size = alloca i32, align 4
  %l_current_data = alloca i8*, align 8
  %l_tmp = alloca i32, align 4
  %new_header_tile_data = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store %struct.opj_mct_data* %p_mct_record, %struct.opj_mct_data** %p_mct_record.addr, align 8, !tbaa !1
  store %struct.opj_stream_private* %p_stream, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %0 = bitcast i32* %l_mct_size to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast i8** %l_current_data to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #1
  store i8* null, i8** %l_current_data, align 8, !tbaa !1
  %2 = bitcast i32* %l_tmp to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #1
  %3 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cmp = icmp ne %struct.opj_j2k* %3, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 4923, i8* getelementptr inbounds ([118 x i8], [118 x i8]* @__PRETTY_FUNCTION__.opj_j2k_write_mct_record, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %4, %cond.true
  %5 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %cmp1 = icmp ne %struct.opj_event_mgr* %5, null
  br i1 %cmp1, label %cond.true.2, label %cond.false.3

cond.true.2:                                      ; preds = %cond.end
  br label %cond.end.4

cond.false.3:                                     ; preds = %cond.end
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 4924, i8* getelementptr inbounds ([118 x i8], [118 x i8]* @__PRETTY_FUNCTION__.opj_j2k_write_mct_record, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.4

cond.end.4:                                       ; preds = %6, %cond.true.2
  %7 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %cmp5 = icmp ne %struct.opj_stream_private* %7, null
  br i1 %cmp5, label %cond.true.6, label %cond.false.7

cond.true.6:                                      ; preds = %cond.end.4
  br label %cond.end.8

cond.false.7:                                     ; preds = %cond.end.4
  call void @__assert_fail(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 4925, i8* getelementptr inbounds ([118 x i8], [118 x i8]* @__PRETTY_FUNCTION__.opj_j2k_write_mct_record, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.8

cond.end.8:                                       ; preds = %8, %cond.true.6
  %9 = load %struct.opj_mct_data*, %struct.opj_mct_data** %p_mct_record.addr, align 8, !tbaa !1
  %m_data_size = getelementptr inbounds %struct.opj_mct_data, %struct.opj_mct_data* %9, i32 0, i32 4
  %10 = load i32, i32* %m_data_size, align 4, !tbaa !95
  %add = add i32 10, %10
  store i32 %add, i32* %l_mct_size, align 4, !tbaa !5
  %11 = load i32, i32* %l_mct_size, align 4, !tbaa !5
  %12 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %12, i32 0, i32 1
  %m_encoder = bitcast %union.anon* %m_specific_param to %struct.opj_j2k_enc*
  %m_header_tile_data_size = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder, i32 0, i32 9
  %13 = load i32, i32* %m_header_tile_data_size, align 4, !tbaa !112
  %cmp9 = icmp ugt i32 %11, %13
  br i1 %cmp9, label %if.then, label %if.end.35

if.then:                                          ; preds = %cond.end.8
  %14 = bitcast i8** %new_header_tile_data to i8*
  call void @llvm.lifetime.start(i64 8, i8* %14) #1
  %15 = load i32, i32* %l_mct_size, align 4, !tbaa !5
  %conv = zext i32 %15 to i64
  %cmp10 = icmp uge i64 %conv, -256
  br i1 %cmp10, label %cond.true.12, label %cond.false.13

cond.true.12:                                     ; preds = %if.then
  br label %cond.end.17

cond.false.13:                                    ; preds = %if.then
  %16 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param14 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %16, i32 0, i32 1
  %m_encoder15 = bitcast %union.anon* %m_specific_param14 to %struct.opj_j2k_enc*
  %m_header_tile_data = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder15, i32 0, i32 8
  %17 = load i8*, i8** %m_header_tile_data, align 8, !tbaa !110
  %18 = load i32, i32* %l_mct_size, align 4, !tbaa !5
  %conv16 = zext i32 %18 to i64
  %call = call i8* @realloc(i8* %17, i64 %conv16) #9
  br label %cond.end.17

cond.end.17:                                      ; preds = %cond.false.13, %cond.true.12
  %cond = phi i8* [ null, %cond.true.12 ], [ %call, %cond.false.13 ]
  store i8* %cond, i8** %new_header_tile_data, align 8, !tbaa !1
  %19 = load i8*, i8** %new_header_tile_data, align 8, !tbaa !1
  %tobool = icmp ne i8* %19, null
  br i1 %tobool, label %if.end, label %if.then.18

if.then.18:                                       ; preds = %cond.end.17
  %20 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param19 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %20, i32 0, i32 1
  %m_encoder20 = bitcast %union.anon* %m_specific_param19 to %struct.opj_j2k_enc*
  %m_header_tile_data21 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder20, i32 0, i32 8
  %21 = load i8*, i8** %m_header_tile_data21, align 8, !tbaa !110
  call void @free(i8* %21) #9
  %22 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param22 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %22, i32 0, i32 1
  %m_encoder23 = bitcast %union.anon* %m_specific_param22 to %struct.opj_j2k_enc*
  %m_header_tile_data24 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder23, i32 0, i32 8
  store i8* null, i8** %m_header_tile_data24, align 8, !tbaa !110
  %23 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param25 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %23, i32 0, i32 1
  %m_encoder26 = bitcast %union.anon* %m_specific_param25 to %struct.opj_j2k_enc*
  %m_header_tile_data_size27 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder26, i32 0, i32 9
  store i32 0, i32* %m_header_tile_data_size27, align 4, !tbaa !112
  %24 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call28 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %24, i32 1, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.203, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %cond.end.17
  %25 = load i8*, i8** %new_header_tile_data, align 8, !tbaa !1
  %26 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param29 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %26, i32 0, i32 1
  %m_encoder30 = bitcast %union.anon* %m_specific_param29 to %struct.opj_j2k_enc*
  %m_header_tile_data31 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder30, i32 0, i32 8
  store i8* %25, i8** %m_header_tile_data31, align 8, !tbaa !110
  %27 = load i32, i32* %l_mct_size, align 4, !tbaa !5
  %28 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param32 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %28, i32 0, i32 1
  %m_encoder33 = bitcast %union.anon* %m_specific_param32 to %struct.opj_j2k_enc*
  %m_header_tile_data_size34 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder33, i32 0, i32 9
  store i32 %27, i32* %m_header_tile_data_size34, align 4, !tbaa !112
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then.18
  %29 = bitcast i8** %new_header_tile_data to i8*
  call void @llvm.lifetime.end(i64 8, i8* %29) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.58 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.35

if.end.35:                                        ; preds = %cleanup.cont, %cond.end.8
  %30 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param36 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %30, i32 0, i32 1
  %m_encoder37 = bitcast %union.anon* %m_specific_param36 to %struct.opj_j2k_enc*
  %m_header_tile_data38 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder37, i32 0, i32 8
  %31 = load i8*, i8** %m_header_tile_data38, align 8, !tbaa !110
  store i8* %31, i8** %l_current_data, align 8, !tbaa !1
  %32 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  call void @opj_write_bytes_LE(i8* %32, i32 65396, i32 2) #7
  %33 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %add.ptr = getelementptr inbounds i8, i8* %33, i64 2
  store i8* %add.ptr, i8** %l_current_data, align 8, !tbaa !1
  %34 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %35 = load i32, i32* %l_mct_size, align 4, !tbaa !5
  %sub = sub i32 %35, 2
  call void @opj_write_bytes_LE(i8* %34, i32 %sub, i32 2) #7
  %36 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %add.ptr39 = getelementptr inbounds i8, i8* %36, i64 2
  store i8* %add.ptr39, i8** %l_current_data, align 8, !tbaa !1
  %37 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  call void @opj_write_bytes_LE(i8* %37, i32 0, i32 2) #7
  %38 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %add.ptr40 = getelementptr inbounds i8, i8* %38, i64 2
  store i8* %add.ptr40, i8** %l_current_data, align 8, !tbaa !1
  %39 = load %struct.opj_mct_data*, %struct.opj_mct_data** %p_mct_record.addr, align 8, !tbaa !1
  %m_index = getelementptr inbounds %struct.opj_mct_data, %struct.opj_mct_data* %39, i32 0, i32 2
  %40 = load i32, i32* %m_index, align 4, !tbaa !90
  %and = and i32 %40, 255
  %41 = load %struct.opj_mct_data*, %struct.opj_mct_data** %p_mct_record.addr, align 8, !tbaa !1
  %m_array_type = getelementptr inbounds %struct.opj_mct_data, %struct.opj_mct_data* %41, i32 0, i32 1
  %42 = load i32, i32* %m_array_type, align 4, !tbaa !93
  %shl = shl i32 %42, 8
  %or = or i32 %and, %shl
  %43 = load %struct.opj_mct_data*, %struct.opj_mct_data** %p_mct_record.addr, align 8, !tbaa !1
  %m_element_type = getelementptr inbounds %struct.opj_mct_data, %struct.opj_mct_data* %43, i32 0, i32 0
  %44 = load i32, i32* %m_element_type, align 4, !tbaa !94
  %shl41 = shl i32 %44, 10
  %or42 = or i32 %or, %shl41
  store i32 %or42, i32* %l_tmp, align 4, !tbaa !5
  %45 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %46 = load i32, i32* %l_tmp, align 4, !tbaa !5
  call void @opj_write_bytes_LE(i8* %45, i32 %46, i32 2) #7
  %47 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %add.ptr43 = getelementptr inbounds i8, i8* %47, i64 2
  store i8* %add.ptr43, i8** %l_current_data, align 8, !tbaa !1
  %48 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  call void @opj_write_bytes_LE(i8* %48, i32 0, i32 2) #7
  %49 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %add.ptr44 = getelementptr inbounds i8, i8* %49, i64 2
  store i8* %add.ptr44, i8** %l_current_data, align 8, !tbaa !1
  %50 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %51 = load %struct.opj_mct_data*, %struct.opj_mct_data** %p_mct_record.addr, align 8, !tbaa !1
  %m_data = getelementptr inbounds %struct.opj_mct_data, %struct.opj_mct_data* %51, i32 0, i32 3
  %52 = load i8*, i8** %m_data, align 8, !tbaa !92
  %53 = load %struct.opj_mct_data*, %struct.opj_mct_data** %p_mct_record.addr, align 8, !tbaa !1
  %m_data_size45 = getelementptr inbounds %struct.opj_mct_data, %struct.opj_mct_data* %53, i32 0, i32 4
  %54 = load i32, i32* %m_data_size45, align 4, !tbaa !95
  %conv46 = zext i32 %54 to i64
  %call47 = call i8* @memcpy(i8* %50, i8* %52, i64 %conv46) #9
  %55 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %56 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param48 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %56, i32 0, i32 1
  %m_encoder49 = bitcast %union.anon* %m_specific_param48 to %struct.opj_j2k_enc*
  %m_header_tile_data50 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder49, i32 0, i32 8
  %57 = load i8*, i8** %m_header_tile_data50, align 8, !tbaa !110
  %58 = load i32, i32* %l_mct_size, align 4, !tbaa !5
  %conv51 = zext i32 %58 to i64
  %59 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call52 = call i64 @opj_stream_write_data(%struct.opj_stream_private* %55, i8* %57, i64 %conv51, %struct.opj_event_mgr* %59) #7
  %60 = load i32, i32* %l_mct_size, align 4, !tbaa !5
  %conv53 = zext i32 %60 to i64
  %cmp54 = icmp ne i64 %call52, %conv53
  br i1 %cmp54, label %if.then.56, label %if.end.57

if.then.56:                                       ; preds = %if.end.35
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.58

if.end.57:                                        ; preds = %if.end.35
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.58

cleanup.58:                                       ; preds = %if.end.57, %if.then.56, %cleanup
  %61 = bitcast i32* %l_tmp to i8*
  call void @llvm.lifetime.end(i64 4, i8* %61) #1
  %62 = bitcast i8** %l_current_data to i8*
  call void @llvm.lifetime.end(i64 8, i8* %62) #1
  %63 = bitcast i32* %l_mct_size to i8*
  call void @llvm.lifetime.end(i64 4, i8* %63) #1
  %64 = load i32, i32* %retval
  ret i32 %64
}

; Function Attrs: nounwind uwtable
define internal i32 @opj_j2k_write_mcc_record(%struct.opj_j2k* %p_j2k, %struct.opj_simple_mcc_decorrelation_data* %p_mcc_record, %struct.opj_stream_private* %p_stream, %struct.opj_event_mgr* %p_manager) #0 {
entry:
  %retval = alloca i32, align 4
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %p_mcc_record.addr = alloca %struct.opj_simple_mcc_decorrelation_data*, align 8
  %p_stream.addr = alloca %struct.opj_stream_private*, align 8
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  %i = alloca i32, align 4
  %l_mcc_size = alloca i32, align 4
  %l_current_data = alloca i8*, align 8
  %l_nb_bytes_for_comp = alloca i32, align 4
  %l_mask = alloca i32, align 4
  %l_tmcc = alloca i32, align 4
  %new_header_tile_data = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store %struct.opj_simple_mcc_decorrelation_data* %p_mcc_record, %struct.opj_simple_mcc_decorrelation_data** %p_mcc_record.addr, align 8, !tbaa !1
  store %struct.opj_stream_private* %p_stream, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %0 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast i32* %l_mcc_size to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = bitcast i8** %l_current_data to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #1
  store i8* null, i8** %l_current_data, align 8, !tbaa !1
  %3 = bitcast i32* %l_nb_bytes_for_comp to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #1
  %4 = bitcast i32* %l_mask to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #1
  %5 = bitcast i32* %l_tmcc to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #1
  %6 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cmp = icmp ne %struct.opj_j2k* %6, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 5098, i8* getelementptr inbounds ([144 x i8], [144 x i8]* @__PRETTY_FUNCTION__.opj_j2k_write_mcc_record, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %7, %cond.true
  %8 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %cmp1 = icmp ne %struct.opj_event_mgr* %8, null
  br i1 %cmp1, label %cond.true.2, label %cond.false.3

cond.true.2:                                      ; preds = %cond.end
  br label %cond.end.4

cond.false.3:                                     ; preds = %cond.end
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 5099, i8* getelementptr inbounds ([144 x i8], [144 x i8]* @__PRETTY_FUNCTION__.opj_j2k_write_mcc_record, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.4

cond.end.4:                                       ; preds = %9, %cond.true.2
  %10 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %cmp5 = icmp ne %struct.opj_stream_private* %10, null
  br i1 %cmp5, label %cond.true.6, label %cond.false.7

cond.true.6:                                      ; preds = %cond.end.4
  br label %cond.end.8

cond.false.7:                                     ; preds = %cond.end.4
  call void @__assert_fail(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 5100, i8* getelementptr inbounds ([144 x i8], [144 x i8]* @__PRETTY_FUNCTION__.opj_j2k_write_mcc_record, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.8

cond.end.8:                                       ; preds = %11, %cond.true.6
  %12 = load %struct.opj_simple_mcc_decorrelation_data*, %struct.opj_simple_mcc_decorrelation_data** %p_mcc_record.addr, align 8, !tbaa !1
  %m_nb_comps = getelementptr inbounds %struct.opj_simple_mcc_decorrelation_data, %struct.opj_simple_mcc_decorrelation_data* %12, i32 0, i32 1
  %13 = load i32, i32* %m_nb_comps, align 4, !tbaa !99
  %cmp9 = icmp ugt i32 %13, 255
  br i1 %cmp9, label %if.then, label %if.else

if.then:                                          ; preds = %cond.end.8
  store i32 2, i32* %l_nb_bytes_for_comp, align 4, !tbaa !5
  store i32 32768, i32* %l_mask, align 4, !tbaa !5
  br label %if.end

if.else:                                          ; preds = %cond.end.8
  store i32 1, i32* %l_nb_bytes_for_comp, align 4, !tbaa !5
  store i32 0, i32* %l_mask, align 4, !tbaa !5
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %14 = load %struct.opj_simple_mcc_decorrelation_data*, %struct.opj_simple_mcc_decorrelation_data** %p_mcc_record.addr, align 8, !tbaa !1
  %m_nb_comps10 = getelementptr inbounds %struct.opj_simple_mcc_decorrelation_data, %struct.opj_simple_mcc_decorrelation_data* %14, i32 0, i32 1
  %15 = load i32, i32* %m_nb_comps10, align 4, !tbaa !99
  %mul = mul i32 %15, 2
  %16 = load i32, i32* %l_nb_bytes_for_comp, align 4, !tbaa !5
  %mul11 = mul i32 %mul, %16
  %add = add i32 %mul11, 19
  store i32 %add, i32* %l_mcc_size, align 4, !tbaa !5
  %17 = load i32, i32* %l_mcc_size, align 4, !tbaa !5
  %18 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %18, i32 0, i32 1
  %m_encoder = bitcast %union.anon* %m_specific_param to %struct.opj_j2k_enc*
  %m_header_tile_data_size = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder, i32 0, i32 9
  %19 = load i32, i32* %m_header_tile_data_size, align 4, !tbaa !112
  %cmp12 = icmp ugt i32 %17, %19
  br i1 %cmp12, label %if.then.13, label %if.end.40

if.then.13:                                       ; preds = %if.end
  %20 = bitcast i8** %new_header_tile_data to i8*
  call void @llvm.lifetime.start(i64 8, i8* %20) #1
  %21 = load i32, i32* %l_mcc_size, align 4, !tbaa !5
  %conv = zext i32 %21 to i64
  %cmp14 = icmp uge i64 %conv, -256
  br i1 %cmp14, label %cond.true.16, label %cond.false.17

cond.true.16:                                     ; preds = %if.then.13
  br label %cond.end.21

cond.false.17:                                    ; preds = %if.then.13
  %22 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param18 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %22, i32 0, i32 1
  %m_encoder19 = bitcast %union.anon* %m_specific_param18 to %struct.opj_j2k_enc*
  %m_header_tile_data = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder19, i32 0, i32 8
  %23 = load i8*, i8** %m_header_tile_data, align 8, !tbaa !110
  %24 = load i32, i32* %l_mcc_size, align 4, !tbaa !5
  %conv20 = zext i32 %24 to i64
  %call = call i8* @realloc(i8* %23, i64 %conv20) #9
  br label %cond.end.21

cond.end.21:                                      ; preds = %cond.false.17, %cond.true.16
  %cond = phi i8* [ null, %cond.true.16 ], [ %call, %cond.false.17 ]
  store i8* %cond, i8** %new_header_tile_data, align 8, !tbaa !1
  %25 = load i8*, i8** %new_header_tile_data, align 8, !tbaa !1
  %tobool = icmp ne i8* %25, null
  br i1 %tobool, label %if.end.33, label %if.then.22

if.then.22:                                       ; preds = %cond.end.21
  %26 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param23 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %26, i32 0, i32 1
  %m_encoder24 = bitcast %union.anon* %m_specific_param23 to %struct.opj_j2k_enc*
  %m_header_tile_data25 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder24, i32 0, i32 8
  %27 = load i8*, i8** %m_header_tile_data25, align 8, !tbaa !110
  call void @free(i8* %27) #9
  %28 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param26 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %28, i32 0, i32 1
  %m_encoder27 = bitcast %union.anon* %m_specific_param26 to %struct.opj_j2k_enc*
  %m_header_tile_data28 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder27, i32 0, i32 8
  store i8* null, i8** %m_header_tile_data28, align 8, !tbaa !110
  %29 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param29 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %29, i32 0, i32 1
  %m_encoder30 = bitcast %union.anon* %m_specific_param29 to %struct.opj_j2k_enc*
  %m_header_tile_data_size31 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder30, i32 0, i32 9
  store i32 0, i32* %m_header_tile_data_size31, align 4, !tbaa !112
  %30 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call32 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %30, i32 1, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.204, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.33:                                        ; preds = %cond.end.21
  %31 = load i8*, i8** %new_header_tile_data, align 8, !tbaa !1
  %32 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param34 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %32, i32 0, i32 1
  %m_encoder35 = bitcast %union.anon* %m_specific_param34 to %struct.opj_j2k_enc*
  %m_header_tile_data36 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder35, i32 0, i32 8
  store i8* %31, i8** %m_header_tile_data36, align 8, !tbaa !110
  %33 = load i32, i32* %l_mcc_size, align 4, !tbaa !5
  %34 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param37 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %34, i32 0, i32 1
  %m_encoder38 = bitcast %union.anon* %m_specific_param37 to %struct.opj_j2k_enc*
  %m_header_tile_data_size39 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder38, i32 0, i32 9
  store i32 %33, i32* %m_header_tile_data_size39, align 4, !tbaa !112
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.33, %if.then.22
  %35 = bitcast i8** %new_header_tile_data to i8*
  call void @llvm.lifetime.end(i64 8, i8* %35) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.93 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.40

if.end.40:                                        ; preds = %cleanup.cont, %if.end
  %36 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param41 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %36, i32 0, i32 1
  %m_encoder42 = bitcast %union.anon* %m_specific_param41 to %struct.opj_j2k_enc*
  %m_header_tile_data43 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder42, i32 0, i32 8
  %37 = load i8*, i8** %m_header_tile_data43, align 8, !tbaa !110
  store i8* %37, i8** %l_current_data, align 8, !tbaa !1
  %38 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  call void @opj_write_bytes_LE(i8* %38, i32 65397, i32 2) #7
  %39 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %add.ptr = getelementptr inbounds i8, i8* %39, i64 2
  store i8* %add.ptr, i8** %l_current_data, align 8, !tbaa !1
  %40 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %41 = load i32, i32* %l_mcc_size, align 4, !tbaa !5
  %sub = sub i32 %41, 2
  call void @opj_write_bytes_LE(i8* %40, i32 %sub, i32 2) #7
  %42 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %add.ptr44 = getelementptr inbounds i8, i8* %42, i64 2
  store i8* %add.ptr44, i8** %l_current_data, align 8, !tbaa !1
  %43 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  call void @opj_write_bytes_LE(i8* %43, i32 0, i32 2) #7
  %44 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %add.ptr45 = getelementptr inbounds i8, i8* %44, i64 2
  store i8* %add.ptr45, i8** %l_current_data, align 8, !tbaa !1
  %45 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %46 = load %struct.opj_simple_mcc_decorrelation_data*, %struct.opj_simple_mcc_decorrelation_data** %p_mcc_record.addr, align 8, !tbaa !1
  %m_index = getelementptr inbounds %struct.opj_simple_mcc_decorrelation_data, %struct.opj_simple_mcc_decorrelation_data* %46, i32 0, i32 0
  %47 = load i32, i32* %m_index, align 4, !tbaa !97
  call void @opj_write_bytes_LE(i8* %45, i32 %47, i32 1) #7
  %48 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds i8, i8* %48, i32 1
  store i8* %incdec.ptr, i8** %l_current_data, align 8, !tbaa !1
  %49 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  call void @opj_write_bytes_LE(i8* %49, i32 0, i32 2) #7
  %50 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %add.ptr46 = getelementptr inbounds i8, i8* %50, i64 2
  store i8* %add.ptr46, i8** %l_current_data, align 8, !tbaa !1
  %51 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  call void @opj_write_bytes_LE(i8* %51, i32 1, i32 2) #7
  %52 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %add.ptr47 = getelementptr inbounds i8, i8* %52, i64 2
  store i8* %add.ptr47, i8** %l_current_data, align 8, !tbaa !1
  %53 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  call void @opj_write_bytes_LE(i8* %53, i32 1, i32 1) #7
  %54 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %incdec.ptr48 = getelementptr inbounds i8, i8* %54, i32 1
  store i8* %incdec.ptr48, i8** %l_current_data, align 8, !tbaa !1
  %55 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %56 = load %struct.opj_simple_mcc_decorrelation_data*, %struct.opj_simple_mcc_decorrelation_data** %p_mcc_record.addr, align 8, !tbaa !1
  %m_nb_comps49 = getelementptr inbounds %struct.opj_simple_mcc_decorrelation_data, %struct.opj_simple_mcc_decorrelation_data* %56, i32 0, i32 1
  %57 = load i32, i32* %m_nb_comps49, align 4, !tbaa !99
  %58 = load i32, i32* %l_mask, align 4, !tbaa !5
  %or = or i32 %57, %58
  call void @opj_write_bytes_LE(i8* %55, i32 %or, i32 2) #7
  %59 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %add.ptr50 = getelementptr inbounds i8, i8* %59, i64 2
  store i8* %add.ptr50, i8** %l_current_data, align 8, !tbaa !1
  store i32 0, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.40
  %60 = load i32, i32* %i, align 4, !tbaa !5
  %61 = load %struct.opj_simple_mcc_decorrelation_data*, %struct.opj_simple_mcc_decorrelation_data** %p_mcc_record.addr, align 8, !tbaa !1
  %m_nb_comps51 = getelementptr inbounds %struct.opj_simple_mcc_decorrelation_data, %struct.opj_simple_mcc_decorrelation_data* %61, i32 0, i32 1
  %62 = load i32, i32* %m_nb_comps51, align 4, !tbaa !99
  %cmp52 = icmp ult i32 %60, %62
  br i1 %cmp52, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %63 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %64 = load i32, i32* %i, align 4, !tbaa !5
  %65 = load i32, i32* %l_nb_bytes_for_comp, align 4, !tbaa !5
  call void @opj_write_bytes_LE(i8* %63, i32 %64, i32 %65) #7
  %66 = load i32, i32* %l_nb_bytes_for_comp, align 4, !tbaa !5
  %67 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %idx.ext = zext i32 %66 to i64
  %add.ptr54 = getelementptr inbounds i8, i8* %67, i64 %idx.ext
  store i8* %add.ptr54, i8** %l_current_data, align 8, !tbaa !1
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %68 = load i32, i32* %i, align 4, !tbaa !5
  %inc = add i32 %68, 1
  store i32 %inc, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %69 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %70 = load %struct.opj_simple_mcc_decorrelation_data*, %struct.opj_simple_mcc_decorrelation_data** %p_mcc_record.addr, align 8, !tbaa !1
  %m_nb_comps55 = getelementptr inbounds %struct.opj_simple_mcc_decorrelation_data, %struct.opj_simple_mcc_decorrelation_data* %70, i32 0, i32 1
  %71 = load i32, i32* %m_nb_comps55, align 4, !tbaa !99
  %72 = load i32, i32* %l_mask, align 4, !tbaa !5
  %or56 = or i32 %71, %72
  call void @opj_write_bytes_LE(i8* %69, i32 %or56, i32 2) #7
  %73 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %add.ptr57 = getelementptr inbounds i8, i8* %73, i64 2
  store i8* %add.ptr57, i8** %l_current_data, align 8, !tbaa !1
  store i32 0, i32* %i, align 4, !tbaa !5
  br label %for.cond.58

for.cond.58:                                      ; preds = %for.inc.65, %for.end
  %74 = load i32, i32* %i, align 4, !tbaa !5
  %75 = load %struct.opj_simple_mcc_decorrelation_data*, %struct.opj_simple_mcc_decorrelation_data** %p_mcc_record.addr, align 8, !tbaa !1
  %m_nb_comps59 = getelementptr inbounds %struct.opj_simple_mcc_decorrelation_data, %struct.opj_simple_mcc_decorrelation_data* %75, i32 0, i32 1
  %76 = load i32, i32* %m_nb_comps59, align 4, !tbaa !99
  %cmp60 = icmp ult i32 %74, %76
  br i1 %cmp60, label %for.body.62, label %for.end.67

for.body.62:                                      ; preds = %for.cond.58
  %77 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %78 = load i32, i32* %i, align 4, !tbaa !5
  %79 = load i32, i32* %l_nb_bytes_for_comp, align 4, !tbaa !5
  call void @opj_write_bytes_LE(i8* %77, i32 %78, i32 %79) #7
  %80 = load i32, i32* %l_nb_bytes_for_comp, align 4, !tbaa !5
  %81 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %idx.ext63 = zext i32 %80 to i64
  %add.ptr64 = getelementptr inbounds i8, i8* %81, i64 %idx.ext63
  store i8* %add.ptr64, i8** %l_current_data, align 8, !tbaa !1
  br label %for.inc.65

for.inc.65:                                       ; preds = %for.body.62
  %82 = load i32, i32* %i, align 4, !tbaa !5
  %inc66 = add i32 %82, 1
  store i32 %inc66, i32* %i, align 4, !tbaa !5
  br label %for.cond.58

for.end.67:                                       ; preds = %for.cond.58
  %83 = load %struct.opj_simple_mcc_decorrelation_data*, %struct.opj_simple_mcc_decorrelation_data** %p_mcc_record.addr, align 8, !tbaa !1
  %m_is_irreversible = getelementptr inbounds %struct.opj_simple_mcc_decorrelation_data, %struct.opj_simple_mcc_decorrelation_data* %83, i32 0, i32 4
  %bf.load = load i8, i8* %m_is_irreversible, align 8
  %bf.clear = and i8 %bf.load, 1
  %bf.cast = zext i8 %bf.clear to i32
  %tobool68 = icmp ne i32 %bf.cast, 0
  %lnot = xor i1 %tobool68, true
  %lnot.ext = zext i1 %lnot to i32
  %and = and i32 %lnot.ext, 1
  %shl = shl i32 %and, 16
  store i32 %shl, i32* %l_tmcc, align 4, !tbaa !5
  %84 = load %struct.opj_simple_mcc_decorrelation_data*, %struct.opj_simple_mcc_decorrelation_data** %p_mcc_record.addr, align 8, !tbaa !1
  %m_decorrelation_array = getelementptr inbounds %struct.opj_simple_mcc_decorrelation_data, %struct.opj_simple_mcc_decorrelation_data* %84, i32 0, i32 2
  %85 = load %struct.opj_mct_data*, %struct.opj_mct_data** %m_decorrelation_array, align 8, !tbaa !100
  %tobool69 = icmp ne %struct.opj_mct_data* %85, null
  br i1 %tobool69, label %if.then.70, label %if.end.74

if.then.70:                                       ; preds = %for.end.67
  %86 = load %struct.opj_simple_mcc_decorrelation_data*, %struct.opj_simple_mcc_decorrelation_data** %p_mcc_record.addr, align 8, !tbaa !1
  %m_decorrelation_array71 = getelementptr inbounds %struct.opj_simple_mcc_decorrelation_data, %struct.opj_simple_mcc_decorrelation_data* %86, i32 0, i32 2
  %87 = load %struct.opj_mct_data*, %struct.opj_mct_data** %m_decorrelation_array71, align 8, !tbaa !100
  %m_index72 = getelementptr inbounds %struct.opj_mct_data, %struct.opj_mct_data* %87, i32 0, i32 2
  %88 = load i32, i32* %m_index72, align 4, !tbaa !90
  %89 = load i32, i32* %l_tmcc, align 4, !tbaa !5
  %or73 = or i32 %89, %88
  store i32 %or73, i32* %l_tmcc, align 4, !tbaa !5
  br label %if.end.74

if.end.74:                                        ; preds = %if.then.70, %for.end.67
  %90 = load %struct.opj_simple_mcc_decorrelation_data*, %struct.opj_simple_mcc_decorrelation_data** %p_mcc_record.addr, align 8, !tbaa !1
  %m_offset_array = getelementptr inbounds %struct.opj_simple_mcc_decorrelation_data, %struct.opj_simple_mcc_decorrelation_data* %90, i32 0, i32 3
  %91 = load %struct.opj_mct_data*, %struct.opj_mct_data** %m_offset_array, align 8, !tbaa !101
  %tobool75 = icmp ne %struct.opj_mct_data* %91, null
  br i1 %tobool75, label %if.then.76, label %if.end.81

if.then.76:                                       ; preds = %if.end.74
  %92 = load %struct.opj_simple_mcc_decorrelation_data*, %struct.opj_simple_mcc_decorrelation_data** %p_mcc_record.addr, align 8, !tbaa !1
  %m_offset_array77 = getelementptr inbounds %struct.opj_simple_mcc_decorrelation_data, %struct.opj_simple_mcc_decorrelation_data* %92, i32 0, i32 3
  %93 = load %struct.opj_mct_data*, %struct.opj_mct_data** %m_offset_array77, align 8, !tbaa !101
  %m_index78 = getelementptr inbounds %struct.opj_mct_data, %struct.opj_mct_data* %93, i32 0, i32 2
  %94 = load i32, i32* %m_index78, align 4, !tbaa !90
  %shl79 = shl i32 %94, 8
  %95 = load i32, i32* %l_tmcc, align 4, !tbaa !5
  %or80 = or i32 %95, %shl79
  store i32 %or80, i32* %l_tmcc, align 4, !tbaa !5
  br label %if.end.81

if.end.81:                                        ; preds = %if.then.76, %if.end.74
  %96 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %97 = load i32, i32* %l_tmcc, align 4, !tbaa !5
  call void @opj_write_bytes_LE(i8* %96, i32 %97, i32 3) #7
  %98 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %add.ptr82 = getelementptr inbounds i8, i8* %98, i64 3
  store i8* %add.ptr82, i8** %l_current_data, align 8, !tbaa !1
  %99 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %100 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param83 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %100, i32 0, i32 1
  %m_encoder84 = bitcast %union.anon* %m_specific_param83 to %struct.opj_j2k_enc*
  %m_header_tile_data85 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder84, i32 0, i32 8
  %101 = load i8*, i8** %m_header_tile_data85, align 8, !tbaa !110
  %102 = load i32, i32* %l_mcc_size, align 4, !tbaa !5
  %conv86 = zext i32 %102 to i64
  %103 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call87 = call i64 @opj_stream_write_data(%struct.opj_stream_private* %99, i8* %101, i64 %conv86, %struct.opj_event_mgr* %103) #7
  %104 = load i32, i32* %l_mcc_size, align 4, !tbaa !5
  %conv88 = zext i32 %104 to i64
  %cmp89 = icmp ne i64 %call87, %conv88
  br i1 %cmp89, label %if.then.91, label %if.end.92

if.then.91:                                       ; preds = %if.end.81
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.93

if.end.92:                                        ; preds = %if.end.81
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.93

cleanup.93:                                       ; preds = %if.end.92, %if.then.91, %cleanup
  %105 = bitcast i32* %l_tmcc to i8*
  call void @llvm.lifetime.end(i64 4, i8* %105) #1
  %106 = bitcast i32* %l_mask to i8*
  call void @llvm.lifetime.end(i64 4, i8* %106) #1
  %107 = bitcast i32* %l_nb_bytes_for_comp to i8*
  call void @llvm.lifetime.end(i64 4, i8* %107) #1
  %108 = bitcast i8** %l_current_data to i8*
  call void @llvm.lifetime.end(i64 8, i8* %108) #1
  %109 = bitcast i32* %l_mcc_size to i8*
  call void @llvm.lifetime.end(i64 4, i8* %109) #1
  %110 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %110) #1
  %111 = load i32, i32* %retval
  ret i32 %111
}

; Function Attrs: nounwind uwtable
define internal i32 @opj_j2k_write_mco(%struct.opj_j2k* %p_j2k, %struct.opj_stream_private* %p_stream, %struct.opj_event_mgr* %p_manager) #0 {
entry:
  %retval = alloca i32, align 4
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %p_stream.addr = alloca %struct.opj_stream_private*, align 8
  %p_manager.addr = alloca %struct.opj_event_mgr*, align 8
  %l_current_data = alloca i8*, align 8
  %l_mco_size = alloca i32, align 4
  %l_tcp = alloca %struct.opj_tcp*, align 8
  %l_mcc_record = alloca %struct.opj_simple_mcc_decorrelation_data*, align 8
  %i = alloca i32, align 4
  %new_header_tile_data = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  store %struct.opj_stream_private* %p_stream, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  store %struct.opj_event_mgr* %p_manager, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %0 = bitcast i8** %l_current_data to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  store i8* null, i8** %l_current_data, align 8, !tbaa !1
  %1 = bitcast i32* %l_mco_size to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = bitcast %struct.opj_tcp** %l_tcp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #1
  store %struct.opj_tcp* null, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %3 = bitcast %struct.opj_simple_mcc_decorrelation_data** %l_mcc_record to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #1
  %4 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #1
  %5 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %cmp = icmp ne %struct.opj_j2k* %5, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 5415, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @__PRETTY_FUNCTION__.opj_j2k_write_mco, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %6, %cond.true
  %7 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %cmp1 = icmp ne %struct.opj_event_mgr* %7, null
  br i1 %cmp1, label %cond.true.2, label %cond.false.3

cond.true.2:                                      ; preds = %cond.end
  br label %cond.end.4

cond.false.3:                                     ; preds = %cond.end
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 5416, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @__PRETTY_FUNCTION__.opj_j2k_write_mco, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.4

cond.end.4:                                       ; preds = %8, %cond.true.2
  %9 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %cmp5 = icmp ne %struct.opj_stream_private* %9, null
  br i1 %cmp5, label %cond.true.6, label %cond.false.7

cond.true.6:                                      ; preds = %cond.end.4
  br label %cond.end.8

cond.false.7:                                     ; preds = %cond.end.4
  call void @__assert_fail(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 5417, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @__PRETTY_FUNCTION__.opj_j2k_write_mco, i32 0, i32 0)) #8
  unreachable
                                                  ; No predecessors!
  br label %cond.end.8

cond.end.8:                                       ; preds = %10, %cond.true.6
  %11 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_current_tile_number = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %11, i32 0, i32 8
  %12 = load i32, i32* %m_current_tile_number, align 4, !tbaa !11
  %idxprom = zext i32 %12 to i64
  %13 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %13, i32 0, i32 4
  %tcps = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp, i32 0, i32 17
  %14 = load %struct.opj_tcp*, %struct.opj_tcp** %tcps, align 8, !tbaa !88
  %arrayidx = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %14, i64 %idxprom
  store %struct.opj_tcp* %arrayidx, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %15 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %15, i32 0, i32 1
  %m_encoder = bitcast %union.anon* %m_specific_param to %struct.opj_j2k_enc*
  %m_header_tile_data = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder, i32 0, i32 8
  %16 = load i8*, i8** %m_header_tile_data, align 8, !tbaa !110
  store i8* %16, i8** %l_current_data, align 8, !tbaa !1
  %17 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %m_nb_mcc_records = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %17, i32 0, i32 24
  %18 = load i32, i32* %m_nb_mcc_records, align 4, !tbaa !96
  %add = add i32 5, %18
  store i32 %add, i32* %l_mco_size, align 4, !tbaa !5
  %19 = load i32, i32* %l_mco_size, align 4, !tbaa !5
  %20 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param9 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %20, i32 0, i32 1
  %m_encoder10 = bitcast %union.anon* %m_specific_param9 to %struct.opj_j2k_enc*
  %m_header_tile_data_size = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder10, i32 0, i32 9
  %21 = load i32, i32* %m_header_tile_data_size, align 4, !tbaa !112
  %cmp11 = icmp ugt i32 %19, %21
  br i1 %cmp11, label %if.then, label %if.end.38

if.then:                                          ; preds = %cond.end.8
  %22 = bitcast i8** %new_header_tile_data to i8*
  call void @llvm.lifetime.start(i64 8, i8* %22) #1
  %23 = load i32, i32* %l_mco_size, align 4, !tbaa !5
  %conv = zext i32 %23 to i64
  %cmp12 = icmp uge i64 %conv, -256
  br i1 %cmp12, label %cond.true.14, label %cond.false.15

cond.true.14:                                     ; preds = %if.then
  br label %cond.end.20

cond.false.15:                                    ; preds = %if.then
  %24 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param16 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %24, i32 0, i32 1
  %m_encoder17 = bitcast %union.anon* %m_specific_param16 to %struct.opj_j2k_enc*
  %m_header_tile_data18 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder17, i32 0, i32 8
  %25 = load i8*, i8** %m_header_tile_data18, align 8, !tbaa !110
  %26 = load i32, i32* %l_mco_size, align 4, !tbaa !5
  %conv19 = zext i32 %26 to i64
  %call = call i8* @realloc(i8* %25, i64 %conv19) #9
  br label %cond.end.20

cond.end.20:                                      ; preds = %cond.false.15, %cond.true.14
  %cond = phi i8* [ null, %cond.true.14 ], [ %call, %cond.false.15 ]
  store i8* %cond, i8** %new_header_tile_data, align 8, !tbaa !1
  %27 = load i8*, i8** %new_header_tile_data, align 8, !tbaa !1
  %tobool = icmp ne i8* %27, null
  br i1 %tobool, label %if.end, label %if.then.21

if.then.21:                                       ; preds = %cond.end.20
  %28 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param22 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %28, i32 0, i32 1
  %m_encoder23 = bitcast %union.anon* %m_specific_param22 to %struct.opj_j2k_enc*
  %m_header_tile_data24 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder23, i32 0, i32 8
  %29 = load i8*, i8** %m_header_tile_data24, align 8, !tbaa !110
  call void @free(i8* %29) #9
  %30 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param25 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %30, i32 0, i32 1
  %m_encoder26 = bitcast %union.anon* %m_specific_param25 to %struct.opj_j2k_enc*
  %m_header_tile_data27 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder26, i32 0, i32 8
  store i8* null, i8** %m_header_tile_data27, align 8, !tbaa !110
  %31 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param28 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %31, i32 0, i32 1
  %m_encoder29 = bitcast %union.anon* %m_specific_param28 to %struct.opj_j2k_enc*
  %m_header_tile_data_size30 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder29, i32 0, i32 9
  store i32 0, i32* %m_header_tile_data_size30, align 4, !tbaa !112
  %32 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call31 = call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %32, i32 1, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.205, i32 0, i32 0)) #7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %cond.end.20
  %33 = load i8*, i8** %new_header_tile_data, align 8, !tbaa !1
  %34 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param32 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %34, i32 0, i32 1
  %m_encoder33 = bitcast %union.anon* %m_specific_param32 to %struct.opj_j2k_enc*
  %m_header_tile_data34 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder33, i32 0, i32 8
  store i8* %33, i8** %m_header_tile_data34, align 8, !tbaa !110
  %35 = load i32, i32* %l_mco_size, align 4, !tbaa !5
  %36 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param35 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %36, i32 0, i32 1
  %m_encoder36 = bitcast %union.anon* %m_specific_param35 to %struct.opj_j2k_enc*
  %m_header_tile_data_size37 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder36, i32 0, i32 9
  store i32 %35, i32* %m_header_tile_data_size37, align 4, !tbaa !112
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then.21
  %37 = bitcast i8** %new_header_tile_data to i8*
  call void @llvm.lifetime.end(i64 8, i8* %37) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.56 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.38

if.end.38:                                        ; preds = %cleanup.cont, %cond.end.8
  %38 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  call void @opj_write_bytes_LE(i8* %38, i32 65399, i32 2) #7
  %39 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %add.ptr = getelementptr inbounds i8, i8* %39, i64 2
  store i8* %add.ptr, i8** %l_current_data, align 8, !tbaa !1
  %40 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %41 = load i32, i32* %l_mco_size, align 4, !tbaa !5
  %sub = sub i32 %41, 2
  call void @opj_write_bytes_LE(i8* %40, i32 %sub, i32 2) #7
  %42 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %add.ptr39 = getelementptr inbounds i8, i8* %42, i64 2
  store i8* %add.ptr39, i8** %l_current_data, align 8, !tbaa !1
  %43 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %44 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %m_nb_mcc_records40 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %44, i32 0, i32 24
  %45 = load i32, i32* %m_nb_mcc_records40, align 4, !tbaa !96
  call void @opj_write_bytes_LE(i8* %43, i32 %45, i32 1) #7
  %46 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds i8, i8* %46, i32 1
  store i8* %incdec.ptr, i8** %l_current_data, align 8, !tbaa !1
  %47 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %m_mcc_records = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %47, i32 0, i32 23
  %48 = load %struct.opj_simple_mcc_decorrelation_data*, %struct.opj_simple_mcc_decorrelation_data** %m_mcc_records, align 8, !tbaa !76
  store %struct.opj_simple_mcc_decorrelation_data* %48, %struct.opj_simple_mcc_decorrelation_data** %l_mcc_record, align 8, !tbaa !1
  store i32 0, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.38
  %49 = load i32, i32* %i, align 4, !tbaa !5
  %50 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %m_nb_mcc_records41 = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %50, i32 0, i32 24
  %51 = load i32, i32* %m_nb_mcc_records41, align 4, !tbaa !96
  %cmp42 = icmp ult i32 %49, %51
  br i1 %cmp42, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %52 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %53 = load %struct.opj_simple_mcc_decorrelation_data*, %struct.opj_simple_mcc_decorrelation_data** %l_mcc_record, align 8, !tbaa !1
  %m_index = getelementptr inbounds %struct.opj_simple_mcc_decorrelation_data, %struct.opj_simple_mcc_decorrelation_data* %53, i32 0, i32 0
  %54 = load i32, i32* %m_index, align 4, !tbaa !97
  call void @opj_write_bytes_LE(i8* %52, i32 %54, i32 1) #7
  %55 = load i8*, i8** %l_current_data, align 8, !tbaa !1
  %incdec.ptr44 = getelementptr inbounds i8, i8* %55, i32 1
  store i8* %incdec.ptr44, i8** %l_current_data, align 8, !tbaa !1
  %56 = load %struct.opj_simple_mcc_decorrelation_data*, %struct.opj_simple_mcc_decorrelation_data** %l_mcc_record, align 8, !tbaa !1
  %incdec.ptr45 = getelementptr inbounds %struct.opj_simple_mcc_decorrelation_data, %struct.opj_simple_mcc_decorrelation_data* %56, i32 1
  store %struct.opj_simple_mcc_decorrelation_data* %incdec.ptr45, %struct.opj_simple_mcc_decorrelation_data** %l_mcc_record, align 8, !tbaa !1
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %57 = load i32, i32* %i, align 4, !tbaa !5
  %inc = add i32 %57, 1
  store i32 %inc, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %58 = load %struct.opj_stream_private*, %struct.opj_stream_private** %p_stream.addr, align 8, !tbaa !1
  %59 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_specific_param46 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %59, i32 0, i32 1
  %m_encoder47 = bitcast %union.anon* %m_specific_param46 to %struct.opj_j2k_enc*
  %m_header_tile_data48 = getelementptr inbounds %struct.opj_j2k_enc, %struct.opj_j2k_enc* %m_encoder47, i32 0, i32 8
  %60 = load i8*, i8** %m_header_tile_data48, align 8, !tbaa !110
  %61 = load i32, i32* %l_mco_size, align 4, !tbaa !5
  %conv49 = zext i32 %61 to i64
  %62 = load %struct.opj_event_mgr*, %struct.opj_event_mgr** %p_manager.addr, align 8, !tbaa !1
  %call50 = call i64 @opj_stream_write_data(%struct.opj_stream_private* %58, i8* %60, i64 %conv49, %struct.opj_event_mgr* %62) #7
  %63 = load i32, i32* %l_mco_size, align 4, !tbaa !5
  %conv51 = zext i32 %63 to i64
  %cmp52 = icmp ne i64 %call50, %conv51
  br i1 %cmp52, label %if.then.54, label %if.end.55

if.then.54:                                       ; preds = %for.end
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.56

if.end.55:                                        ; preds = %for.end
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.56

cleanup.56:                                       ; preds = %if.end.55, %if.then.54, %cleanup
  %64 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %64) #1
  %65 = bitcast %struct.opj_simple_mcc_decorrelation_data** %l_mcc_record to i8*
  call void @llvm.lifetime.end(i64 8, i8* %65) #1
  %66 = bitcast %struct.opj_tcp** %l_tcp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %66) #1
  %67 = bitcast i32* %l_mco_size to i8*
  call void @llvm.lifetime.end(i64 4, i8* %67) #1
  %68 = bitcast i8** %l_current_data to i8*
  call void @llvm.lifetime.end(i64 8, i8* %68) #1
  %69 = load i32, i32* %retval
  ret i32 %69
}

; Function Attrs: nounwind uwtable
define internal float @opj_j2k_get_tp_stride(%struct.opj_tcp* %p_tcp) #0 {
entry:
  %p_tcp.addr = alloca %struct.opj_tcp*, align 8
  store %struct.opj_tcp* %p_tcp, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %0 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %m_nb_tile_parts = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %0, i32 0, i32 14
  %1 = load i32, i32* %m_nb_tile_parts, align 4, !tbaa !20
  %sub = sub i32 %1, 1
  %mul = mul i32 %sub, 14
  %conv = uitofp i32 %mul to float
  ret float %conv
}

; Function Attrs: nounwind uwtable
define internal float @opj_j2k_get_default_stride(%struct.opj_tcp* %p_tcp) #0 {
entry:
  %p_tcp.addr = alloca %struct.opj_tcp*, align 8
  store %struct.opj_tcp* %p_tcp, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  %0 = load %struct.opj_tcp*, %struct.opj_tcp** %p_tcp.addr, align 8, !tbaa !1
  ret float 0.000000e+00
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @opj_int_max(i32 %a, i32 %b) #5 {
entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4, !tbaa !5
  store i32 %b, i32* %b.addr, align 4, !tbaa !5
  %0 = load i32, i32* %a.addr, align 4, !tbaa !5
  %1 = load i32, i32* %b.addr, align 4, !tbaa !5
  %cmp = icmp sgt i32 %0, %1
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %2 = load i32, i32* %a.addr, align 4, !tbaa !5
  br label %cond.end

cond.false:                                       ; preds = %entry
  %3 = load i32, i32* %b.addr, align 4, !tbaa !5
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %3, %cond.false ]
  ret i32 %cond
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @opj_uint_ceildiv(i32 %a, i32 %b) #5 {
entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4, !tbaa !5
  store i32 %b, i32* %b.addr, align 4, !tbaa !5
  %0 = load i32, i32* %a.addr, align 4, !tbaa !5
  %1 = load i32, i32* %b.addr, align 4, !tbaa !5
  %add = add i32 %0, %1
  %sub = sub i32 %add, 1
  %2 = load i32, i32* %b.addr, align 4, !tbaa !5
  %div = udiv i32 %sub, %2
  ret i32 %div
}

; Function Attrs: nounwind uwtable
define internal i32 @opj_j2k_get_specific_header_sizes(%struct.opj_j2k* %p_j2k) #0 {
entry:
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %l_nb_bytes = alloca i32, align 4
  %l_nb_comps = alloca i32, align 4
  %l_coc_bytes = alloca i32, align 4
  %l_qcc_bytes = alloca i32, align 4
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %0 = bitcast i32* %l_nb_bytes to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  store i32 0, i32* %l_nb_bytes, align 4, !tbaa !5
  %1 = bitcast i32* %l_nb_comps to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = bitcast i32* %l_coc_bytes to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #1
  %3 = bitcast i32* %l_qcc_bytes to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #1
  %4 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_private_image = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %4, i32 0, i32 2
  %5 = load %struct.opj_image*, %struct.opj_image** %m_private_image, align 8, !tbaa !38
  %numcomps = getelementptr inbounds %struct.opj_image, %struct.opj_image* %5, i32 0, i32 4
  %6 = load i32, i32* %numcomps, align 4, !tbaa !45
  %sub = sub i32 %6, 1
  store i32 %sub, i32* %l_nb_comps, align 4, !tbaa !5
  %7 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %call = call i32 @opj_j2k_get_max_toc_size(%struct.opj_j2k* %7) #7
  %8 = load i32, i32* %l_nb_bytes, align 4, !tbaa !5
  %add = add i32 %8, %call
  store i32 %add, i32* %l_nb_bytes, align 4, !tbaa !5
  %9 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %9, i32 0, i32 4
  %m_specific_param = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp, i32 0, i32 18
  %m_enc = bitcast %union.anon.0* %m_specific_param to %struct.opj_encoding_param*
  %m_cinema = getelementptr inbounds %struct.opj_encoding_param, %struct.opj_encoding_param* %m_enc, i32 0, i32 0
  %10 = load i32, i32* %m_cinema, align 4, !tbaa !124
  %cmp = icmp eq i32 %10, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %11 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %call1 = call i32 @opj_j2k_get_max_coc_size(%struct.opj_j2k* %11) #7
  store i32 %call1, i32* %l_coc_bytes, align 4, !tbaa !5
  %12 = load i32, i32* %l_nb_comps, align 4, !tbaa !5
  %13 = load i32, i32* %l_coc_bytes, align 4, !tbaa !5
  %mul = mul i32 %12, %13
  %14 = load i32, i32* %l_nb_bytes, align 4, !tbaa !5
  %add2 = add i32 %14, %mul
  store i32 %add2, i32* %l_nb_bytes, align 4, !tbaa !5
  %15 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %call3 = call i32 @opj_j2k_get_max_qcc_size(%struct.opj_j2k* %15) #7
  store i32 %call3, i32* %l_qcc_bytes, align 4, !tbaa !5
  %16 = load i32, i32* %l_nb_comps, align 4, !tbaa !5
  %17 = load i32, i32* %l_qcc_bytes, align 4, !tbaa !5
  %mul4 = mul i32 %16, %17
  %18 = load i32, i32* %l_nb_bytes, align 4, !tbaa !5
  %add5 = add i32 %18, %mul4
  store i32 %add5, i32* %l_nb_bytes, align 4, !tbaa !5
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %19 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %call6 = call i32 @opj_j2k_get_max_poc_size(%struct.opj_j2k* %19) #7
  %20 = load i32, i32* %l_nb_bytes, align 4, !tbaa !5
  %add7 = add i32 %20, %call6
  store i32 %add7, i32* %l_nb_bytes, align 4, !tbaa !5
  %21 = load i32, i32* %l_nb_bytes, align 4, !tbaa !5
  %22 = bitcast i32* %l_qcc_bytes to i8*
  call void @llvm.lifetime.end(i64 4, i8* %22) #1
  %23 = bitcast i32* %l_coc_bytes to i8*
  call void @llvm.lifetime.end(i64 4, i8* %23) #1
  %24 = bitcast i32* %l_nb_comps to i8*
  call void @llvm.lifetime.end(i64 4, i8* %24) #1
  %25 = bitcast i32* %l_nb_bytes to i8*
  call void @llvm.lifetime.end(i64 4, i8* %25) #1
  ret i32 %21
}

; Function Attrs: nounwind uwtable
define internal i32 @opj_j2k_get_max_toc_size(%struct.opj_j2k* %p_j2k) #0 {
entry:
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %i = alloca i32, align 4
  %l_nb_tiles = alloca i32, align 4
  %l_max = alloca i32, align 4
  %l_tcp = alloca %struct.opj_tcp*, align 8
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %0 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast i32* %l_nb_tiles to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = bitcast i32* %l_max to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #1
  store i32 0, i32* %l_max, align 4, !tbaa !5
  %3 = bitcast %struct.opj_tcp** %l_tcp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #1
  store %struct.opj_tcp* null, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %4 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %4, i32 0, i32 4
  %tcps = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp, i32 0, i32 17
  %5 = load %struct.opj_tcp*, %struct.opj_tcp** %tcps, align 8, !tbaa !88
  store %struct.opj_tcp* %5, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %6 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp1 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %6, i32 0, i32 4
  %tw = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp1, i32 0, i32 6
  %7 = load i32, i32* %tw, align 4, !tbaa !176
  %8 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp2 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %8, i32 0, i32 4
  %th = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp2, i32 0, i32 7
  %9 = load i32, i32* %th, align 4, !tbaa !177
  %mul = mul i32 %7, %9
  store i32 %mul, i32* %l_nb_tiles, align 4, !tbaa !5
  store i32 0, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %10 = load i32, i32* %i, align 4, !tbaa !5
  %11 = load i32, i32* %l_nb_tiles, align 4, !tbaa !5
  %cmp = icmp ult i32 %10, %11
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %12 = load i32, i32* %l_max, align 4, !tbaa !5
  %13 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %m_nb_tile_parts = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %13, i32 0, i32 14
  %14 = load i32, i32* %m_nb_tile_parts, align 4, !tbaa !20
  %call = call i32 @opj_uint_max(i32 %12, i32 %14) #7
  store i32 %call, i32* %l_max, align 4, !tbaa !5
  %15 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %15, i32 1
  store %struct.opj_tcp* %incdec.ptr, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %16 = load i32, i32* %i, align 4, !tbaa !5
  %inc = add i32 %16, 1
  store i32 %inc, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %17 = load i32, i32* %l_max, align 4, !tbaa !5
  %mul3 = mul i32 12, %17
  %18 = bitcast %struct.opj_tcp** %l_tcp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %18) #1
  %19 = bitcast i32* %l_max to i8*
  call void @llvm.lifetime.end(i64 4, i8* %19) #1
  %20 = bitcast i32* %l_nb_tiles to i8*
  call void @llvm.lifetime.end(i64 4, i8* %20) #1
  %21 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %21) #1
  ret i32 %mul3
}

; Function Attrs: nounwind uwtable
define internal i32 @opj_j2k_get_max_coc_size(%struct.opj_j2k* %p_j2k) #0 {
entry:
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %l_nb_comp = alloca i32, align 4
  %l_nb_tiles = alloca i32, align 4
  %l_max = alloca i32, align 4
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %0 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast i32* %j to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = bitcast i32* %l_nb_comp to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #1
  %3 = bitcast i32* %l_nb_tiles to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #1
  %4 = bitcast i32* %l_max to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #1
  store i32 0, i32* %l_max, align 4, !tbaa !5
  %5 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %5, i32 0, i32 4
  %tw = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp, i32 0, i32 6
  %6 = load i32, i32* %tw, align 4, !tbaa !176
  %7 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp1 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %7, i32 0, i32 4
  %th = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp1, i32 0, i32 7
  %8 = load i32, i32* %th, align 4, !tbaa !177
  %mul = mul i32 %6, %8
  store i32 %mul, i32* %l_nb_tiles, align 4, !tbaa !5
  %9 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_private_image = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %9, i32 0, i32 2
  %10 = load %struct.opj_image*, %struct.opj_image** %m_private_image, align 8, !tbaa !38
  %numcomps = getelementptr inbounds %struct.opj_image, %struct.opj_image* %10, i32 0, i32 4
  %11 = load i32, i32* %numcomps, align 4, !tbaa !45
  store i32 %11, i32* %l_nb_comp, align 4, !tbaa !5
  store i32 0, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc.6, %entry
  %12 = load i32, i32* %i, align 4, !tbaa !5
  %13 = load i32, i32* %l_nb_tiles, align 4, !tbaa !5
  %cmp = icmp ult i32 %12, %13
  br i1 %cmp, label %for.body, label %for.end.8

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !tbaa !5
  br label %for.cond.2

for.cond.2:                                       ; preds = %for.inc, %for.body
  %14 = load i32, i32* %j, align 4, !tbaa !5
  %15 = load i32, i32* %l_nb_comp, align 4, !tbaa !5
  %cmp3 = icmp ult i32 %14, %15
  br i1 %cmp3, label %for.body.4, label %for.end

for.body.4:                                       ; preds = %for.cond.2
  %16 = load i32, i32* %l_max, align 4, !tbaa !5
  %17 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %18 = load i32, i32* %i, align 4, !tbaa !5
  %19 = load i32, i32* %j, align 4, !tbaa !5
  %call = call i32 @opj_j2k_get_SPCod_SPCoc_size(%struct.opj_j2k* %17, i32 %18, i32 %19) #7
  %call5 = call i32 @opj_uint_max(i32 %16, i32 %call) #7
  store i32 %call5, i32* %l_max, align 4, !tbaa !5
  br label %for.inc

for.inc:                                          ; preds = %for.body.4
  %20 = load i32, i32* %j, align 4, !tbaa !5
  %inc = add i32 %20, 1
  store i32 %inc, i32* %j, align 4, !tbaa !5
  br label %for.cond.2

for.end:                                          ; preds = %for.cond.2
  br label %for.inc.6

for.inc.6:                                        ; preds = %for.end
  %21 = load i32, i32* %i, align 4, !tbaa !5
  %inc7 = add i32 %21, 1
  store i32 %inc7, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.end.8:                                        ; preds = %for.cond
  %22 = load i32, i32* %l_max, align 4, !tbaa !5
  %add = add i32 6, %22
  %23 = bitcast i32* %l_max to i8*
  call void @llvm.lifetime.end(i64 4, i8* %23) #1
  %24 = bitcast i32* %l_nb_tiles to i8*
  call void @llvm.lifetime.end(i64 4, i8* %24) #1
  %25 = bitcast i32* %l_nb_comp to i8*
  call void @llvm.lifetime.end(i64 4, i8* %25) #1
  %26 = bitcast i32* %j to i8*
  call void @llvm.lifetime.end(i64 4, i8* %26) #1
  %27 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %27) #1
  ret i32 %add
}

; Function Attrs: nounwind uwtable
define internal i32 @opj_j2k_get_max_qcc_size(%struct.opj_j2k* %p_j2k) #0 {
entry:
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %0 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %call = call i32 @opj_j2k_get_max_coc_size(%struct.opj_j2k* %0) #7
  ret i32 %call
}

; Function Attrs: nounwind uwtable
define internal i32 @opj_j2k_get_max_poc_size(%struct.opj_j2k* %p_j2k) #0 {
entry:
  %p_j2k.addr = alloca %struct.opj_j2k*, align 8
  %l_tcp = alloca %struct.opj_tcp*, align 8
  %l_nb_tiles = alloca i32, align 4
  %l_max_poc = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.opj_j2k* %p_j2k, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %0 = bitcast %struct.opj_tcp** %l_tcp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  store %struct.opj_tcp* null, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %1 = bitcast i32* %l_nb_tiles to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  store i32 0, i32* %l_nb_tiles, align 4, !tbaa !5
  %2 = bitcast i32* %l_max_poc to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #1
  store i32 0, i32* %l_max_poc, align 4, !tbaa !5
  %3 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #1
  %4 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %4, i32 0, i32 4
  %tcps = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp, i32 0, i32 17
  %5 = load %struct.opj_tcp*, %struct.opj_tcp** %tcps, align 8, !tbaa !88
  store %struct.opj_tcp* %5, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %6 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp1 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %6, i32 0, i32 4
  %th = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp1, i32 0, i32 7
  %7 = load i32, i32* %th, align 4, !tbaa !177
  %8 = load %struct.opj_j2k*, %struct.opj_j2k** %p_j2k.addr, align 8, !tbaa !1
  %m_cp2 = getelementptr inbounds %struct.opj_j2k, %struct.opj_j2k* %8, i32 0, i32 4
  %tw = getelementptr inbounds %struct.opj_cp, %struct.opj_cp* %m_cp2, i32 0, i32 6
  %9 = load i32, i32* %tw, align 4, !tbaa !176
  %mul = mul i32 %7, %9
  store i32 %mul, i32* %l_nb_tiles, align 4, !tbaa !5
  store i32 0, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %10 = load i32, i32* %i, align 4, !tbaa !5
  %11 = load i32, i32* %l_nb_tiles, align 4, !tbaa !5
  %cmp = icmp ult i32 %10, %11
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %12 = load i32, i32* %l_max_poc, align 4, !tbaa !5
  %13 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %numpocs = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %13, i32 0, i32 6
  %14 = load i32, i32* %numpocs, align 4, !tbaa !51
  %call = call i32 @opj_uint_max(i32 %12, i32 %14) #7
  store i32 %call, i32* %l_max_poc, align 4, !tbaa !5
  %15 = load %struct.opj_tcp*, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds %struct.opj_tcp, %struct.opj_tcp* %15, i32 1
  store %struct.opj_tcp* %incdec.ptr, %struct.opj_tcp** %l_tcp, align 8, !tbaa !1
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %16 = load i32, i32* %i, align 4, !tbaa !5
  %inc = add i32 %16, 1
  store i32 %inc, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %17 = load i32, i32* %l_max_poc, align 4, !tbaa !5
  %inc3 = add i32 %17, 1
  store i32 %inc3, i32* %l_max_poc, align 4, !tbaa !5
  %18 = load i32, i32* %l_max_poc, align 4, !tbaa !5
  %mul4 = mul i32 9, %18
  %add = add i32 4, %mul4
  %19 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %19) #1
  %20 = bitcast i32* %l_max_poc to i8*
  call void @llvm.lifetime.end(i64 4, i8* %20) #1
  %21 = bitcast i32* %l_nb_tiles to i8*
  call void @llvm.lifetime.end(i64 4, i8* %21) #1
  %22 = bitcast %struct.opj_tcp** %l_tcp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %22) #1
  ret i32 %add
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @opj_uint_max(i32 %a, i32 %b) #5 {
entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4, !tbaa !5
  store i32 %b, i32* %b.addr, align 4, !tbaa !5
  %0 = load i32, i32* %a.addr, align 4, !tbaa !5
  %1 = load i32, i32* %b.addr, align 4, !tbaa !5
  %cmp = icmp ugt i32 %0, %1
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %2 = load i32, i32* %a.addr, align 4, !tbaa !5
  br label %cond.end

cond.false:                                       ; preds = %entry
  %3 = load i32, i32* %b.addr, align 4, !tbaa !5
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %3, %cond.false ]
  ret i32 %cond
}

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }
attributes #2 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin }
attributes #8 = { nobuiltin noreturn nounwind }
attributes #9 = { nobuiltin nounwind }
attributes #10 = { nobuiltin nounwind readonly }

!llvm.ident = !{!0}

!0 = !{!"clang version 3.7.0 (tags/RELEASE_370/final)"}
!1 = !{!2, !2, i64 0}
!2 = !{!"any pointer", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C/C++ TBAA"}
!5 = !{!6, !6, i64 0}
!6 = !{!"int", !3, i64 0}
!7 = !{!8, !8, i64 0}
!8 = !{!"float", !3, i64 0}
!9 = !{!10, !10, i64 0}
!10 = !{!"double", !3, i64 0}
!11 = !{!12, !6, i64 280}
!12 = !{!"opj_j2k", !6, i64 0, !3, i64 8, !2, i64 96, !2, i64 104, !13, i64 112, !2, i64 256, !2, i64 264, !2, i64 272, !6, i64 280, !2, i64 288}
!13 = !{!"opj_cp", !3, i64 0, !6, i64 4, !6, i64 8, !6, i64 12, !6, i64 16, !2, i64 24, !6, i64 32, !6, i64 36, !2, i64 40, !6, i64 48, !6, i64 52, !2, i64 56, !2, i64 64, !2, i64 72, !6, i64 80, !6, i64 84, !6, i64 88, !2, i64 96, !3, i64 104, !6, i64 136, !6, i64 136}
!14 = !{!13, !6, i64 32}
!15 = !{!13, !6, i64 36}
!16 = !{!13, !2, i64 96}
!17 = !{!18, !6, i64 80}
!18 = !{!"opj_j2k_dec", !6, i64 0, !2, i64 8, !2, i64 16, !6, i64 24, !6, i64 28, !6, i64 32, !6, i64 36, !6, i64 40, !6, i64 44, !6, i64 48, !6, i64 52, !6, i64 56, !6, i64 60, !6, i64 64, !19, i64 72, !6, i64 80, !6, i64 84, !6, i64 84, !6, i64 84}
!19 = !{!"long", !3, i64 0}
!20 = !{!21, !6, i64 5592}
!21 = !{!"opj_tcp", !6, i64 0, !3, i64 4, !6, i64 8, !6, i64 12, !6, i64 16, !3, i64 20, !6, i64 420, !3, i64 424, !2, i64 5160, !2, i64 5168, !6, i64 5176, !6, i64 5180, !3, i64 5184, !2, i64 5584, !6, i64 5592, !2, i64 5600, !6, i64 5608, !2, i64 5616, !2, i64 5624, !2, i64 5632, !2, i64 5640, !6, i64 5648, !6, i64 5652, !2, i64 5656, !6, i64 5664, !6, i64 5668, !6, i64 5672, !6, i64 5672}
!22 = !{!18, !6, i64 28}
!23 = !{!18, !6, i64 0}
!24 = !{!18, !6, i64 64}
!25 = !{!18, !6, i64 32}
!26 = !{!18, !6, i64 40}
!27 = !{!18, !6, i64 36}
!28 = !{!18, !6, i64 44}
!29 = !{!12, !2, i64 272}
!30 = !{!31, !2, i64 48}
!31 = !{!"opj_codestream_index", !19, i64 0, !19, i64 8, !19, i64 16, !6, i64 24, !2, i64 32, !6, i64 40, !6, i64 44, !2, i64 48}
!32 = !{!33, !6, i64 0}
!33 = !{!"opj_tile_index", !6, i64 0, !6, i64 4, !6, i64 8, !6, i64 12, !2, i64 16, !6, i64 24, !2, i64 32, !6, i64 40, !6, i64 44, !2, i64 48}
!34 = !{!33, !6, i64 12}
!35 = !{!33, !6, i64 4}
!36 = !{!33, !6, i64 8}
!37 = !{!33, !2, i64 16}
!38 = !{!12, !2, i64 96}
!39 = !{!18, !2, i64 8}
!40 = !{!21, !3, i64 4}
!41 = !{!42, !6, i64 4}
!42 = !{!"opj_decoding_param", !6, i64 0, !6, i64 4}
!43 = !{!21, !6, i64 12}
!44 = !{!21, !6, i64 8}
!45 = !{!46, !6, i64 16}
!46 = !{!"opj_image", !6, i64 0, !6, i64 4, !6, i64 8, !6, i64 12, !6, i64 16, !3, i64 20, !2, i64 24, !2, i64 32, !6, i64 40}
!47 = !{!21, !6, i64 0}
!48 = !{!21, !2, i64 5584}
!49 = !{!50, !6, i64 0}
!50 = !{!"opj_tccp", !6, i64 0, !6, i64 4, !6, i64 8, !6, i64 12, !6, i64 16, !6, i64 20, !6, i64 24, !3, i64 28, !6, i64 804, !6, i64 808, !3, i64 812, !3, i64 944, !6, i64 1076}
!51 = !{!21, !6, i64 420}
!52 = !{!53, !3, i64 36}
!53 = !{!"opj_poc", !6, i64 0, !6, i64 4, !6, i64 8, !6, i64 12, !6, i64 16, !6, i64 20, !6, i64 24, !6, i64 28, !3, i64 32, !3, i64 36, !3, i64 40, !6, i64 48, !6, i64 52, !6, i64 56, !6, i64 60, !6, i64 64, !6, i64 68, !6, i64 72, !6, i64 76, !6, i64 80, !6, i64 84, !6, i64 88, !6, i64 92, !6, i64 96, !6, i64 100, !6, i64 104, !6, i64 108, !6, i64 112, !6, i64 116, !6, i64 120, !6, i64 124, !6, i64 128, !6, i64 132, !6, i64 136, !6, i64 140, !6, i64 144}
!54 = !{!53, !6, i64 16}
!55 = !{!13, !3, i64 0}
!56 = !{!46, !6, i64 0}
!57 = !{!46, !6, i64 8}
!58 = !{!46, !6, i64 4}
!59 = !{!46, !6, i64 12}
!60 = !{!13, !6, i64 12}
!61 = !{!13, !6, i64 16}
!62 = !{!46, !2, i64 24}
!63 = !{!64, !6, i64 24}
!64 = !{!"opj_image_comp", !6, i64 0, !6, i64 4, !6, i64 8, !6, i64 12, !6, i64 16, !6, i64 20, !6, i64 24, !6, i64 28, !6, i64 32, !6, i64 36, !6, i64 40, !2, i64 48, !65, i64 56}
!65 = !{!"short", !3, i64 0}
!66 = !{!64, !6, i64 32}
!67 = !{!64, !6, i64 0}
!68 = !{!64, !6, i64 4}
!69 = !{!64, !6, i64 36}
!70 = !{!42, !6, i64 0}
!71 = !{!64, !6, i64 40}
!72 = !{!13, !6, i64 4}
!73 = !{!13, !6, i64 8}
!74 = !{!21, !2, i64 5640}
!75 = !{!21, !6, i64 5652}
!76 = !{!21, !2, i64 5656}
!77 = !{!21, !6, i64 5668}
!78 = !{!50, !6, i64 1076}
!79 = !{!13, !6, i64 48}
!80 = !{!13, !6, i64 52}
!81 = !{!13, !2, i64 40}
!82 = !{!13, !2, i64 64}
!83 = !{!13, !2, i64 56}
!84 = !{!21, !6, i64 5176}
!85 = !{!21, !6, i64 5180}
!86 = !{!21, !2, i64 5168}
!87 = !{!21, !2, i64 5160}
!88 = !{!12, !2, i64 208}
!89 = !{!21, !6, i64 5648}
!90 = !{!91, !6, i64 8}
!91 = !{!"opj_mct_data", !3, i64 0, !3, i64 4, !6, i64 8, !2, i64 16, !6, i64 24}
!92 = !{!91, !2, i64 16}
!93 = !{!91, !3, i64 4}
!94 = !{!91, !3, i64 0}
!95 = !{!91, !6, i64 24}
!96 = !{!21, !6, i64 5664}
!97 = !{!98, !6, i64 0}
!98 = !{!"opj_simple_mcc_decorrelation_data", !6, i64 0, !6, i64 4, !2, i64 8, !2, i64 16, !6, i64 24}
!99 = !{!98, !6, i64 4}
!100 = !{!98, !2, i64 8}
!101 = !{!98, !2, i64 16}
!102 = !{!21, !2, i64 5624}
!103 = !{!3, !3, i64 0}
!104 = !{!105, !3, i64 0}
!105 = !{!"j2k_prog_order", !3, i64 0, !3, i64 4}
!106 = !{!107, !6, i64 4}
!107 = !{!"opj_dparameters", !6, i64 0, !6, i64 4, !3, i64 8, !3, i64 4104, !6, i64 8200, !6, i64 8204, !6, i64 8208, !6, i64 8212, !6, i64 8216, !6, i64 8220, !6, i64 8224, !6, i64 8228, !6, i64 8232, !6, i64 8236, !6, i64 8240, !6, i64 8244, !6, i64 8248}
!108 = !{!107, !6, i64 0}
!109 = !{!12, !6, i64 0}
!110 = !{!111, !2, i64 56}
!111 = !{!"opj_j2k_enc", !6, i64 0, !6, i64 4, !19, i64 8, !2, i64 16, !2, i64 24, !6, i64 32, !2, i64 40, !6, i64 48, !2, i64 56, !6, i64 64}
!112 = !{!111, !6, i64 64}
!113 = !{!12, !2, i64 264}
!114 = !{!12, !2, i64 256}
!115 = !{!18, !2, i64 16}
!116 = !{!18, !6, i64 24}
!117 = !{!111, !2, i64 40}
!118 = !{!111, !2, i64 16}
!119 = !{!111, !2, i64 24}
!120 = !{!12, !2, i64 288}
!121 = !{!12, !2, i64 104}
!122 = !{!123, !3, i64 18684}
!123 = !{!"opj_cparameters", !6, i64 0, !6, i64 4, !6, i64 8, !6, i64 12, !6, i64 16, !6, i64 20, !6, i64 24, !6, i64 28, !2, i64 32, !2, i64 40, !6, i64 48, !3, i64 52, !3, i64 56, !6, i64 4792, !6, i64 4796, !3, i64 4800, !3, i64 5200, !6, i64 5600, !6, i64 5604, !6, i64 5608, !6, i64 5612, !6, i64 5616, !6, i64 5620, !6, i64 5624, !6, i64 5628, !3, i64 5632, !3, i64 5764, !3, i64 5896, !3, i64 9992, !6, i64 14088, !3, i64 14092, !6, i64 18188, !6, i64 18192, !6, i64 18196, !6, i64 18200, !6, i64 18204, !6, i64 18208, !6, i64 18212, !6, i64 18216, !3, i64 18220, !3, i64 18284, !3, i64 18348, !3, i64 18412, !3, i64 18476, !6, i64 18540, !6, i64 18544, !6, i64 18548, !6, i64 18552, !3, i64 18556, !3, i64 18620, !3, i64 18684, !6, i64 18688, !3, i64 18692, !3, i64 18696, !3, i64 18697, !3, i64 18698, !6, i64 18700, !2, i64 18704}
!124 = !{!125, !3, i64 0}
!125 = !{!"opj_encoding_param", !3, i64 0, !6, i64 4, !6, i64 8, !2, i64 16, !3, i64 24, !6, i64 25, !6, i64 25, !6, i64 25, !6, i64 25}
!126 = !{!123, !6, i64 18688}
!127 = !{!125, !6, i64 4}
!128 = !{!123, !3, i64 18692}
!129 = !{!123, !6, i64 20}
!130 = !{!123, !6, i64 24}
!131 = !{!123, !6, i64 28}
!132 = !{!123, !2, i64 32}
!133 = !{!123, !6, i64 4796}
!134 = !{!123, !6, i64 5600}
!135 = !{!19, !19, i64 0}
!136 = !{!125, !2, i64 16}
!137 = !{!123, !6, i64 12}
!138 = !{!123, !6, i64 16}
!139 = !{!123, !6, i64 4}
!140 = !{!123, !6, i64 8}
!141 = !{!123, !2, i64 40}
!142 = !{!13, !2, i64 24}
!143 = !{!123, !6, i64 0}
!144 = !{!123, !3, i64 18696}
!145 = !{!123, !3, i64 18697}
!146 = !{!125, !3, i64 24}
!147 = !{!123, !6, i64 4792}
!148 = !{!123, !6, i64 48}
!149 = !{!123, !3, i64 52}
!150 = !{!123, !3, i64 18698}
!151 = !{!21, !6, i64 16}
!152 = !{!53, !6, i64 48}
!153 = !{!53, !6, i64 0}
!154 = !{!53, !6, i64 4}
!155 = !{!53, !6, i64 8}
!156 = !{!53, !6, i64 12}
!157 = !{!53, !3, i64 32}
!158 = !{!123, !2, i64 18704}
!159 = !{!21, !2, i64 5632}
!160 = !{!21, !2, i64 5616}
!161 = !{!50, !6, i64 4}
!162 = !{!123, !6, i64 5604}
!163 = !{!50, !6, i64 8}
!164 = !{!123, !6, i64 5608}
!165 = !{!50, !6, i64 12}
!166 = !{!123, !6, i64 5612}
!167 = !{!50, !6, i64 16}
!168 = !{!123, !6, i64 5616}
!169 = !{!50, !6, i64 20}
!170 = !{!50, !6, i64 24}
!171 = !{!50, !6, i64 804}
!172 = !{!123, !6, i64 5620}
!173 = !{!123, !6, i64 5624}
!174 = !{!50, !6, i64 808}
!175 = !{!123, !6, i64 5628}
!176 = !{!12, !6, i64 144}
!177 = !{!12, !6, i64 148}
!178 = !{!31, !6, i64 44}
!179 = !{!33, !6, i64 40}
!180 = !{!33, !6, i64 24}
!181 = !{!33, !2, i64 32}
!182 = !{!31, !2, i64 32}
!183 = !{!33, !2, i64 48}
!184 = !{!185, !6, i64 4}
!185 = !{!"opj_dec_memory_marker_handler", !6, i64 0, !6, i64 4, !2, i64 8}
!186 = !{!185, !2, i64 8}
!187 = !{!185, !6, i64 0}
!188 = !{!18, !19, i64 72}
!189 = !{!21, !2, i64 5600}
!190 = !{!191, !2, i64 24}
!191 = !{!"opj_tcd", !6, i64 0, !6, i64 4, !6, i64 8, !6, i64 12, !6, i64 16, !2, i64 24, !2, i64 32, !2, i64 40, !2, i64 48, !6, i64 56, !6, i64 60}
!192 = !{!193, !2, i64 0}
!193 = !{!"opj_tcd_image", !2, i64 0}
!194 = !{!195, !6, i64 0}
!195 = !{!"opj_tcd_tile", !6, i64 0, !6, i64 4, !6, i64 8, !6, i64 12, !6, i64 16, !2, i64 24, !6, i64 32, !10, i64 40, !3, i64 48, !6, i64 848}
!196 = !{!195, !6, i64 4}
!197 = !{!195, !6, i64 8}
!198 = !{!195, !6, i64 12}
!199 = !{!195, !6, i64 16}
!200 = !{!201, !65, i64 0}
!201 = !{!"opj_marker_info", !65, i64 0, !19, i64 8, !6, i64 16}
!202 = !{!201, !19, i64 8}
!203 = !{!201, !6, i64 16}
!204 = !{!205, !19, i64 0}
!205 = !{!"opj_tp_index", !19, i64 0, !19, i64 8, !19, i64 16}
!206 = !{!205, !19, i64 8}
!207 = !{!205, !19, i64 16}
!208 = !{!21, !6, i64 5608}
!209 = !{!64, !6, i64 16}
!210 = !{!64, !6, i64 20}
!211 = !{!64, !6, i64 8}
!212 = !{!64, !6, i64 12}
!213 = !{!31, !6, i64 40}
!214 = !{!31, !6, i64 24}
!215 = !{!12, !6, i64 116}
!216 = !{!12, !6, i64 120}
!217 = !{!12, !6, i64 124}
!218 = !{!12, !6, i64 128}
!219 = !{!220, !6, i64 4}
!220 = !{!"opj_stepsize", !6, i64 0, !6, i64 4}
!221 = !{!220, !6, i64 0}
!222 = !{!31, !19, i64 0}
!223 = !{!31, !19, i64 8}
!224 = !{!225, !6, i64 24}
!225 = !{!"opj_codestream_info_v2", !6, i64 0, !6, i64 4, !6, i64 8, !6, i64 12, !6, i64 16, !6, i64 20, !6, i64 24, !226, i64 32, !2, i64 64}
!226 = !{!"opj_tile_v2_info", !6, i64 0, !6, i64 4, !3, i64 8, !6, i64 12, !6, i64 16, !2, i64 24}
!227 = !{!225, !6, i64 0}
!228 = !{!225, !6, i64 4}
!229 = !{!225, !6, i64 8}
!230 = !{!225, !6, i64 12}
!231 = !{!225, !6, i64 16}
!232 = !{!225, !6, i64 20}
!233 = !{!225, !2, i64 64}
!234 = !{!225, !6, i64 36}
!235 = !{!225, !3, i64 40}
!236 = !{!225, !6, i64 44}
!237 = !{!225, !6, i64 48}
!238 = !{!225, !2, i64 56}
!239 = !{!240, !6, i64 4}
!240 = !{!"opj_tccp_info", !6, i64 0, !6, i64 4, !6, i64 8, !6, i64 12, !6, i64 16, !6, i64 20, !6, i64 24, !6, i64 28, !3, i64 32, !3, i64 420, !6, i64 808, !6, i64 812, !3, i64 816, !3, i64 948}
!241 = !{!240, !6, i64 8}
!242 = !{!240, !6, i64 12}
!243 = !{!240, !6, i64 16}
!244 = !{!240, !6, i64 20}
!245 = !{!240, !6, i64 24}
!246 = !{!240, !6, i64 28}
!247 = !{!240, !6, i64 808}
!248 = !{!240, !6, i64 812}
!249 = !{!31, !19, i64 16}
!250 = !{!33, !6, i64 44}
!251 = !{!64, !2, i64 48}
!252 = !{!111, !6, i64 4}
!253 = !{!191, !6, i64 12}
!254 = !{!111, !6, i64 0}
!255 = !{!195, !2, i64 24}
!256 = !{!191, !2, i64 32}
!257 = !{!258, !6, i64 8}
!258 = !{!"opj_tcd_tilecomp", !6, i64 0, !6, i64 4, !6, i64 8, !6, i64 12, !6, i64 16, !6, i64 20, !2, i64 24, !6, i64 32, !2, i64 40, !6, i64 48, !6, i64 52}
!259 = !{!258, !6, i64 0}
!260 = !{!258, !6, i64 12}
!261 = !{!258, !6, i64 4}
!262 = !{!65, !65, i64 0}
!263 = !{!111, !6, i64 48}
!264 = !{!12, !2, i64 136}
!265 = !{!12, !3, i64 112}
!266 = !{!258, !2, i64 24}
!267 = !{!268, !6, i64 8}
!268 = !{!"opj_tcd_resolution", !6, i64 0, !6, i64 4, !6, i64 8, !6, i64 12, !6, i64 16, !6, i64 20, !6, i64 24, !3, i64 32}
!269 = !{!268, !6, i64 0}
!270 = !{!268, !6, i64 12}
!271 = !{!268, !6, i64 4}
!272 = !{!191, !6, i64 16}
!273 = !{!191, !6, i64 4}
!274 = !{!191, !6, i64 8}
!275 = !{!195, !6, i64 848}
!276 = !{!277, !6, i64 8}
!277 = !{!"opj_codestream_info", !10, i64 0, !6, i64 8, !6, i64 12, !6, i64 16, !6, i64 20, !3, i64 24, !6, i64 28, !6, i64 32, !6, i64 36, !6, i64 40, !6, i64 44, !6, i64 48, !6, i64 52, !6, i64 56, !2, i64 64, !6, i64 72, !2, i64 80, !6, i64 88, !6, i64 92, !6, i64 96, !6, i64 100, !2, i64 104}
!278 = !{!53, !6, i64 92}
!279 = !{!53, !6, i64 88}
!280 = !{!53, !6, i64 96}
!281 = !{!53, !6, i64 84}
!282 = !{!125, !6, i64 8}
!283 = !{!111, !6, i64 32}
!284 = !{!111, !19, i64 8}
